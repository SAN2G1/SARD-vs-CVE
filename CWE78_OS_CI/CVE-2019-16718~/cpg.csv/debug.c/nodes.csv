command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1199276	File	data/converged/CVE-2019-16718~_radare2/debug.c								
ANR	1199277	DeclStmt									
ANR	1199278	Decl							void	void ( void * )	w32_break_process_wrapper
ANR	1199279	Function	r_debug_info	17:0:339:533							
ANR	1199280	FunctionDef	"r_debug_info (RDebug * dbg , const char * arg)"		1199279	0					
ANR	1199281	CompoundStatement		17:61:400:533	1199279	0					
ANR	1199282	IfStatement	if ( ! dbg || ! dbg -> h || ! dbg -> h -> info )		1199279	0					
ANR	1199283	Condition	! dbg || ! dbg -> h || ! dbg -> h -> info	18:5:407:438	1199279	0	True				
ANR	1199284	OrExpression	! dbg || ! dbg -> h || ! dbg -> h -> info		1199279	0		||			
ANR	1199285	UnaryOperationExpression	! dbg		1199279	0					
ANR	1199286	UnaryOperator	!		1199279	0					
ANR	1199287	Identifier	dbg		1199279	1					
ANR	1199288	OrExpression	! dbg -> h || ! dbg -> h -> info		1199279	1		||			
ANR	1199289	UnaryOperationExpression	! dbg -> h		1199279	0					
ANR	1199290	UnaryOperator	!		1199279	0					
ANR	1199291	PtrMemberAccess	dbg -> h		1199279	1					
ANR	1199292	Identifier	dbg		1199279	0					
ANR	1199293	Identifier	h		1199279	1					
ANR	1199294	UnaryOperationExpression	! dbg -> h -> info		1199279	1					
ANR	1199295	UnaryOperator	!		1199279	0					
ANR	1199296	PtrMemberAccess	dbg -> h -> info		1199279	1					
ANR	1199297	PtrMemberAccess	dbg -> h		1199279	0					
ANR	1199298	Identifier	dbg		1199279	0					
ANR	1199299	Identifier	h		1199279	1					
ANR	1199300	Identifier	info		1199279	1					
ANR	1199301	CompoundStatement		2:39:40:40	1199279	1					
ANR	1199302	ReturnStatement	return NULL ;	19:2:445:456	1199279	0	True				
ANR	1199303	Identifier	NULL		1199279	0					
ANR	1199304	IfStatement	if ( dbg -> pid < 0 )		1199279	1					
ANR	1199305	Condition	dbg -> pid < 0	21:5:466:477	1199279	0	True				
ANR	1199306	RelationalExpression	dbg -> pid < 0		1199279	0		<			
ANR	1199307	PtrMemberAccess	dbg -> pid		1199279	0					
ANR	1199308	Identifier	dbg		1199279	0					
ANR	1199309	Identifier	pid		1199279	1					
ANR	1199310	PrimaryExpression	0		1199279	1					
ANR	1199311	CompoundStatement		5:19:79:79	1199279	1					
ANR	1199312	ReturnStatement	return NULL ;	22:2:484:495	1199279	0	True				
ANR	1199313	Identifier	NULL		1199279	0					
ANR	1199314	ReturnStatement	"return dbg -> h -> info ( dbg , arg ) ;"	24:1:501:531	1199279	2	True				
ANR	1199315	CallExpression	"dbg -> h -> info ( dbg , arg )"		1199279	0					
ANR	1199316	Callee	dbg -> h -> info		1199279	0					
ANR	1199317	PtrMemberAccess	dbg -> h -> info		1199279	0					
ANR	1199318	PtrMemberAccess	dbg -> h		1199279	0					
ANR	1199319	Identifier	dbg		1199279	0					
ANR	1199320	Identifier	h		1199279	1					
ANR	1199321	Identifier	info		1199279	1					
ANR	1199322	ArgumentList	dbg		1199279	1					
ANR	1199323	Argument	dbg		1199279	0					
ANR	1199324	Identifier	dbg		1199279	0					
ANR	1199325	Argument	arg		1199279	1					
ANR	1199326	Identifier	arg		1199279	0					
ANR	1199327	ReturnType	R_API RDebugInfo *		1199279	1					
ANR	1199328	Identifier	r_debug_info		1199279	2					
ANR	1199329	ParameterList	"RDebug * dbg , const char * arg"		1199279	3					
ANR	1199330	Parameter	RDebug * dbg	17:31:370:380	1199279	0	True				
ANR	1199331	ParameterType	RDebug *		1199279	0					
ANR	1199332	Identifier	dbg		1199279	1					
ANR	1199333	Parameter	const char * arg	17:44:383:397	1199279	1	True				
ANR	1199334	ParameterType	const char *		1199279	0					
ANR	1199335	Identifier	arg		1199279	1					
ANR	1199336	CFGEntryNode	ENTRY		1199279		True				
ANR	1199337	CFGExitNode	EXIT		1199279		True				
ANR	1199338	Symbol	dbg -> h -> info		1199279						
ANR	1199339	Symbol	dbg -> h		1199279						
ANR	1199340	Symbol	NULL		1199279						
ANR	1199341	Symbol	dbg -> pid		1199279						
ANR	1199342	Symbol	arg		1199279						
ANR	1199343	Symbol	dbg		1199279						
ANR	1199344	Symbol	* dbg -> h		1199279						
ANR	1199345	Symbol	* dbg		1199279						
ANR	1199346	Symbol	* * dbg		1199279						
ANR	1199347	Function	r_debug_info_free	27:0:536:716							
ANR	1199348	FunctionDef	r_debug_info_free (RDebugInfo * rdi)		1199347	0					
ANR	1199349	CompoundStatement		27:46:582:716	1199347	0					
ANR	1199350	IfStatement	if ( rdi )		1199347	0					
ANR	1199351	Condition	rdi	28:5:589:591	1199347	0	True				
ANR	1199352	Identifier	rdi		1199347	0					
ANR	1199353	CompoundStatement		2:10:11:11	1199347	1					
ANR	1199354	ExpressionStatement	free ( rdi -> cwd )	29:2:598:613	1199347	0	True				
ANR	1199355	CallExpression	free ( rdi -> cwd )		1199347	0					
ANR	1199356	Callee	free		1199347	0					
ANR	1199357	Identifier	free		1199347	0					
ANR	1199358	ArgumentList	rdi -> cwd		1199347	1					
ANR	1199359	Argument	rdi -> cwd		1199347	0					
ANR	1199360	PtrMemberAccess	rdi -> cwd		1199347	0					
ANR	1199361	Identifier	rdi		1199347	0					
ANR	1199362	Identifier	cwd		1199347	1					
ANR	1199363	ExpressionStatement	free ( rdi -> exe )	30:2:617:632	1199347	1	True				
ANR	1199364	CallExpression	free ( rdi -> exe )		1199347	0					
ANR	1199365	Callee	free		1199347	0					
ANR	1199366	Identifier	free		1199347	0					
ANR	1199367	ArgumentList	rdi -> exe		1199347	1					
ANR	1199368	Argument	rdi -> exe		1199347	0					
ANR	1199369	PtrMemberAccess	rdi -> exe		1199347	0					
ANR	1199370	Identifier	rdi		1199347	0					
ANR	1199371	Identifier	exe		1199347	1					
ANR	1199372	ExpressionStatement	free ( rdi -> cmdline )	31:2:636:655	1199347	2	True				
ANR	1199373	CallExpression	free ( rdi -> cmdline )		1199347	0					
ANR	1199374	Callee	free		1199347	0					
ANR	1199375	Identifier	free		1199347	0					
ANR	1199376	ArgumentList	rdi -> cmdline		1199347	1					
ANR	1199377	Argument	rdi -> cmdline		1199347	0					
ANR	1199378	PtrMemberAccess	rdi -> cmdline		1199347	0					
ANR	1199379	Identifier	rdi		1199347	0					
ANR	1199380	Identifier	cmdline		1199347	1					
ANR	1199381	ExpressionStatement	free ( rdi -> libname )	32:2:659:678	1199347	3	True				
ANR	1199382	CallExpression	free ( rdi -> libname )		1199347	0					
ANR	1199383	Callee	free		1199347	0					
ANR	1199384	Identifier	free		1199347	0					
ANR	1199385	ArgumentList	rdi -> libname		1199347	1					
ANR	1199386	Argument	rdi -> libname		1199347	0					
ANR	1199387	PtrMemberAccess	rdi -> libname		1199347	0					
ANR	1199388	Identifier	rdi		1199347	0					
ANR	1199389	Identifier	libname		1199347	1					
ANR	1199390	ExpressionStatement	free ( rdi -> usr )	33:2:682:697	1199347	4	True				
ANR	1199391	CallExpression	free ( rdi -> usr )		1199347	0					
ANR	1199392	Callee	free		1199347	0					
ANR	1199393	Identifier	free		1199347	0					
ANR	1199394	ArgumentList	rdi -> usr		1199347	1					
ANR	1199395	Argument	rdi -> usr		1199347	0					
ANR	1199396	PtrMemberAccess	rdi -> usr		1199347	0					
ANR	1199397	Identifier	rdi		1199347	0					
ANR	1199398	Identifier	usr		1199347	1					
ANR	1199399	ExpressionStatement	free ( rdi )	34:2:701:711	1199347	5	True				
ANR	1199400	CallExpression	free ( rdi )		1199347	0					
ANR	1199401	Callee	free		1199347	0					
ANR	1199402	Identifier	free		1199347	0					
ANR	1199403	ArgumentList	rdi		1199347	1					
ANR	1199404	Argument	rdi		1199347	0					
ANR	1199405	Identifier	rdi		1199347	0					
ANR	1199406	ReturnType	R_API void		1199347	1					
ANR	1199407	Identifier	r_debug_info_free		1199347	2					
ANR	1199408	ParameterList	RDebugInfo * rdi		1199347	3					
ANR	1199409	Parameter	RDebugInfo * rdi	27:29:565:579	1199347	0	True				
ANR	1199410	ParameterType	RDebugInfo *		1199347	0					
ANR	1199411	Identifier	rdi		1199347	1					
ANR	1199412	CFGEntryNode	ENTRY		1199347		True				
ANR	1199413	CFGExitNode	EXIT		1199347		True				
ANR	1199414	Symbol	* rdi		1199347						
ANR	1199415	Symbol	rdi		1199347						
ANR	1199416	Symbol	rdi -> libname		1199347						
ANR	1199417	Symbol	rdi -> usr		1199347						
ANR	1199418	Symbol	rdi -> exe		1199347						
ANR	1199419	Symbol	rdi -> cmdline		1199347						
ANR	1199420	Symbol	rdi -> cwd		1199347						
ANR	1199421	Function	r_debug_bp_update	38:0:719:987							
ANR	1199422	FunctionDef	r_debug_bp_update (RDebug * dbg)		1199421	0					
ANR	1199423	CompoundStatement		38:42:761:987	1199421	0					
ANR	1199424	IdentifierDeclStatement	RBreakpointItem * bp ;	40:1:813:832	1199421	0	True				
ANR	1199425	IdentifierDecl	* bp		1199421	0					
ANR	1199426	IdentifierDeclType	RBreakpointItem *		1199421	0					
ANR	1199427	Identifier	bp		1199421	1					
ANR	1199428	IdentifierDeclStatement	RListIter * iter ;	41:1:835:850	1199421	1	True				
ANR	1199429	IdentifierDecl	* iter		1199421	0					
ANR	1199430	IdentifierDeclType	RListIter *		1199421	0					
ANR	1199431	Identifier	iter		1199421	1					
ANR	1199432	Statement	r_list_foreach	42:1:853:866	1199421	2	True				
ANR	1199433	Statement	(	42:16:868:868	1199421	3	True				
ANR	1199434	Statement	dbg	42:17:869:871	1199421	4	True				
ANR	1199435	Statement	->	42:20:872:873	1199421	5	True				
ANR	1199436	Statement	bp	42:22:874:875	1199421	6	True				
ANR	1199437	Statement	->	42:24:876:877	1199421	7	True				
ANR	1199438	Statement	bps	42:26:878:880	1199421	8	True				
ANR	1199439	Statement	","	42:29:881:881	1199421	9	True				
ANR	1199440	Statement	iter	42:31:883:886	1199421	10	True				
ANR	1199441	Statement	","	42:35:887:887	1199421	11	True				
ANR	1199442	Statement	bp	42:37:889:890	1199421	12	True				
ANR	1199443	Statement	)	42:39:891:891	1199421	13	True				
ANR	1199444	CompoundStatement		5:41:131:131	1199421	14					
ANR	1199445	IfStatement	if ( bp -> expr )		1199421	0					
ANR	1199446	Condition	bp -> expr	43:6:901:908	1199421	0	True				
ANR	1199447	PtrMemberAccess	bp -> expr		1199421	0					
ANR	1199448	Identifier	bp		1199421	0					
ANR	1199449	Identifier	expr		1199421	1					
ANR	1199450	CompoundStatement		6:16:149:149	1199421	1					
ANR	1199451	ExpressionStatement	"bp -> addr = dbg -> corebind . numGet ( dbg -> corebind . core , bp -> expr )"	44:3:916:978	1199421	0	True				
ANR	1199452	AssignmentExpression	"bp -> addr = dbg -> corebind . numGet ( dbg -> corebind . core , bp -> expr )"		1199421	0		=			
ANR	1199453	PtrMemberAccess	bp -> addr		1199421	0					
ANR	1199454	Identifier	bp		1199421	0					
ANR	1199455	Identifier	addr		1199421	1					
ANR	1199456	CallExpression	"dbg -> corebind . numGet ( dbg -> corebind . core , bp -> expr )"		1199421	1					
ANR	1199457	Callee	dbg -> corebind . numGet		1199421	0					
ANR	1199458	MemberAccess	dbg -> corebind . numGet		1199421	0					
ANR	1199459	PtrMemberAccess	dbg -> corebind		1199421	0					
ANR	1199460	Identifier	dbg		1199421	0					
ANR	1199461	Identifier	corebind		1199421	1					
ANR	1199462	Identifier	numGet		1199421	1					
ANR	1199463	ArgumentList	dbg -> corebind . core		1199421	1					
ANR	1199464	Argument	dbg -> corebind . core		1199421	0					
ANR	1199465	MemberAccess	dbg -> corebind . core		1199421	0					
ANR	1199466	PtrMemberAccess	dbg -> corebind		1199421	0					
ANR	1199467	Identifier	dbg		1199421	0					
ANR	1199468	Identifier	corebind		1199421	1					
ANR	1199469	Identifier	core		1199421	1					
ANR	1199470	Argument	bp -> expr		1199421	1					
ANR	1199471	PtrMemberAccess	bp -> expr		1199421	0					
ANR	1199472	Identifier	bp		1199421	0					
ANR	1199473	Identifier	expr		1199421	1					
ANR	1199474	ReturnType	R_API void		1199421	1					
ANR	1199475	Identifier	r_debug_bp_update		1199421	2					
ANR	1199476	ParameterList	RDebug * dbg		1199421	3					
ANR	1199477	Parameter	RDebug * dbg	38:29:748:758	1199421	0	True				
ANR	1199478	ParameterType	RDebug *		1199421	0					
ANR	1199479	Identifier	dbg		1199421	1					
ANR	1199480	CFGEntryNode	ENTRY		1199421		True				
ANR	1199481	CFGExitNode	EXIT		1199421		True				
ANR	1199482	Symbol	dbg -> corebind . core		1199421						
ANR	1199483	Symbol	dbg -> corebind . numGet		1199421						
ANR	1199484	Symbol	dbg -> corebind		1199421						
ANR	1199485	Symbol	bp -> addr		1199421						
ANR	1199486	Symbol	* bp		1199421						
ANR	1199487	Symbol	dbg		1199421						
ANR	1199488	Symbol	iter		1199421						
ANR	1199489	Symbol	bp -> expr		1199421						
ANR	1199490	Symbol	* dbg		1199421						
ANR	1199491	Symbol	bp		1199421						
ANR	1199492	Function	r_debug_drx_at	49:0:990:1156							
ANR	1199493	FunctionDef	"r_debug_drx_at (RDebug * dbg , ut64 addr)"		1199492	0					
ANR	1199494	CompoundStatement		49:50:1040:1156	1199492	0					
ANR	1199495	IfStatement	if ( dbg && dbg -> h && dbg -> h -> drx )		1199492	0					
ANR	1199496	Condition	dbg && dbg -> h && dbg -> h -> drx	50:5:1047:1074	1199492	0	True				
ANR	1199497	AndExpression	dbg && dbg -> h && dbg -> h -> drx		1199492	0		&&			
ANR	1199498	Identifier	dbg		1199492	0					
ANR	1199499	AndExpression	dbg -> h && dbg -> h -> drx		1199492	1		&&			
ANR	1199500	PtrMemberAccess	dbg -> h		1199492	0					
ANR	1199501	Identifier	dbg		1199492	0					
ANR	1199502	Identifier	h		1199492	1					
ANR	1199503	PtrMemberAccess	dbg -> h -> drx		1199492	1					
ANR	1199504	PtrMemberAccess	dbg -> h		1199492	0					
ANR	1199505	Identifier	dbg		1199492	0					
ANR	1199506	Identifier	h		1199492	1					
ANR	1199507	Identifier	drx		1199492	1					
ANR	1199508	CompoundStatement		2:35:36:36	1199492	1					
ANR	1199509	ReturnStatement	"return dbg -> h -> drx ( dbg , 0 , addr , 0 , 0 , 0 , DRX_API_GET_BP ) ;"	51:2:1081:1139	1199492	0	True				
ANR	1199510	CallExpression	"dbg -> h -> drx ( dbg , 0 , addr , 0 , 0 , 0 , DRX_API_GET_BP )"		1199492	0					
ANR	1199511	Callee	dbg -> h -> drx		1199492	0					
ANR	1199512	PtrMemberAccess	dbg -> h -> drx		1199492	0					
ANR	1199513	PtrMemberAccess	dbg -> h		1199492	0					
ANR	1199514	Identifier	dbg		1199492	0					
ANR	1199515	Identifier	h		1199492	1					
ANR	1199516	Identifier	drx		1199492	1					
ANR	1199517	ArgumentList	dbg		1199492	1					
ANR	1199518	Argument	dbg		1199492	0					
ANR	1199519	Identifier	dbg		1199492	0					
ANR	1199520	Argument	0		1199492	1					
ANR	1199521	PrimaryExpression	0		1199492	0					
ANR	1199522	Argument	addr		1199492	2					
ANR	1199523	Identifier	addr		1199492	0					
ANR	1199524	Argument	0		1199492	3					
ANR	1199525	PrimaryExpression	0		1199492	0					
ANR	1199526	Argument	0		1199492	4					
ANR	1199527	PrimaryExpression	0		1199492	0					
ANR	1199528	Argument	0		1199492	5					
ANR	1199529	PrimaryExpression	0		1199492	0					
ANR	1199530	Argument	DRX_API_GET_BP		1199492	6					
ANR	1199531	Identifier	DRX_API_GET_BP		1199492	0					
ANR	1199532	ReturnStatement	return - 1 ;	53:1:1145:1154	1199492	1	True				
ANR	1199533	UnaryOperationExpression	- 1		1199492	0					
ANR	1199534	UnaryOperator	-		1199492	0					
ANR	1199535	PrimaryExpression	1		1199492	1					
ANR	1199536	ReturnType	static int		1199492	1					
ANR	1199537	Identifier	r_debug_drx_at		1199492	2					
ANR	1199538	ParameterList	"RDebug * dbg , ut64 addr"		1199492	3					
ANR	1199539	Parameter	RDebug * dbg	49:26:1016:1026	1199492	0	True				
ANR	1199540	ParameterType	RDebug *		1199492	0					
ANR	1199541	Identifier	dbg		1199492	1					
ANR	1199542	Parameter	ut64 addr	49:39:1029:1037	1199492	1	True				
ANR	1199543	ParameterType	ut64		1199492	0					
ANR	1199544	Identifier	addr		1199492	1					
ANR	1199545	CFGEntryNode	ENTRY		1199492		True				
ANR	1199546	CFGExitNode	EXIT		1199492		True				
ANR	1199547	Symbol	dbg -> h -> drx		1199492						
ANR	1199548	Symbol	dbg -> h		1199492						
ANR	1199549	Symbol	dbg		1199492						
ANR	1199550	Symbol	* dbg -> h		1199492						
ANR	1199551	Symbol	DRX_API_GET_BP		1199492						
ANR	1199552	Symbol	addr		1199492						
ANR	1199553	Symbol	* dbg		1199492						
ANR	1199554	Symbol	* * dbg		1199492						
ANR	1199555	Function	r_debug_bp_hit	65:0:1470:4629							
ANR	1199556	FunctionDef	"r_debug_bp_hit (RDebug * dbg , RRegItem * pc_ri , ut64 pc , RBreakpointItem * * pb)"		1199555	0					
ANR	1199557	CompoundStatement		65:87:1557:4629	1199555	0					
ANR	1199558	IdentifierDeclStatement	RBreakpointItem * b ;	66:1:1560:1578	1199555	0	True				
ANR	1199559	IdentifierDecl	* b		1199555	0					
ANR	1199560	IdentifierDeclType	RBreakpointItem *		1199555	0					
ANR	1199561	Identifier	b		1199555	1					
ANR	1199562	IfStatement	if ( ! pb )		1199555	1					
ANR	1199563	Condition	! pb	68:5:1586:1588	1199555	0	True				
ANR	1199564	UnaryOperationExpression	! pb		1199555	0					
ANR	1199565	UnaryOperator	!		1199555	0					
ANR	1199566	Identifier	pb		1199555	1					
ANR	1199567	CompoundStatement		4:10:33:33	1199555	1					
ANR	1199568	ExpressionStatement	"eprintf ( ""BreakpointItem is NULL!\\n"" )"	69:2:1595:1632	1199555	0	True				
ANR	1199569	CallExpression	"eprintf ( ""BreakpointItem is NULL!\\n"" )"		1199555	0					
ANR	1199570	Callee	eprintf		1199555	0					
ANR	1199571	Identifier	eprintf		1199555	0					
ANR	1199572	ArgumentList	"""BreakpointItem is NULL!\\n"""		1199555	1					
ANR	1199573	Argument	"""BreakpointItem is NULL!\\n"""		1199555	0					
ANR	1199574	PrimaryExpression	"""BreakpointItem is NULL!\\n"""		1199555	0					
ANR	1199575	ReturnStatement	return false ;	70:2:1636:1648	1199555	1	True				
ANR	1199576	Identifier	false		1199555	0					
ANR	1199577	ExpressionStatement	* pb = NULL	73:1:1693:1703	1199555	2	True				
ANR	1199578	AssignmentExpression	* pb = NULL		1199555	0		=			
ANR	1199579	UnaryOperationExpression	* pb		1199555	0					
ANR	1199580	UnaryOperator	*		1199555	0					
ANR	1199581	Identifier	pb		1199555	1					
ANR	1199582	Identifier	NULL		1199555	1					
ANR	1199583	IfStatement	if ( dbg -> trace -> enabled )		1199555	3					
ANR	1199584	Condition	dbg -> trace -> enabled	76:5:1761:1779	1199555	0	True				
ANR	1199585	PtrMemberAccess	dbg -> trace -> enabled		1199555	0					
ANR	1199586	PtrMemberAccess	dbg -> trace		1199555	0					
ANR	1199587	Identifier	dbg		1199555	0					
ANR	1199588	Identifier	trace		1199555	1					
ANR	1199589	Identifier	enabled		1199555	1					
ANR	1199590	CompoundStatement		12:26:224:224	1199555	1					
ANR	1199591	ExpressionStatement	"r_debug_trace_pc ( dbg , pc )"	77:2:1786:1812	1199555	0	True				
ANR	1199592	CallExpression	"r_debug_trace_pc ( dbg , pc )"		1199555	0					
ANR	1199593	Callee	r_debug_trace_pc		1199555	0					
ANR	1199594	Identifier	r_debug_trace_pc		1199555	0					
ANR	1199595	ArgumentList	dbg		1199555	1					
ANR	1199596	Argument	dbg		1199555	0					
ANR	1199597	Identifier	dbg		1199555	0					
ANR	1199598	Argument	pc		1199555	1					
ANR	1199599	Identifier	pc		1199555	0					
ANR	1199600	ExpressionStatement	r_debug_bp_update ( dbg )	85:1:2013:2036	1199555	4	True				
ANR	1199601	CallExpression	r_debug_bp_update ( dbg )		1199555	0					
ANR	1199602	Callee	r_debug_bp_update		1199555	0					
ANR	1199603	Identifier	r_debug_bp_update		1199555	0					
ANR	1199604	ArgumentList	dbg		1199555	1					
ANR	1199605	Argument	dbg		1199555	0					
ANR	1199606	Identifier	dbg		1199555	0					
ANR	1199607	IfStatement	"if ( ! r_bp_restore ( dbg -> bp , false ) )"		1199555	5					
ANR	1199608	Condition	"! r_bp_restore ( dbg -> bp , false )"	86:5:2043:2072	1199555	0	True				
ANR	1199609	UnaryOperationExpression	"! r_bp_restore ( dbg -> bp , false )"		1199555	0					
ANR	1199610	UnaryOperator	!		1199555	0					
ANR	1199611	CallExpression	"r_bp_restore ( dbg -> bp , false )"		1199555	1					
ANR	1199612	Callee	r_bp_restore		1199555	0					
ANR	1199613	Identifier	r_bp_restore		1199555	0					
ANR	1199614	ArgumentList	dbg -> bp		1199555	1					
ANR	1199615	Argument	dbg -> bp		1199555	0					
ANR	1199616	PtrMemberAccess	dbg -> bp		1199555	0					
ANR	1199617	Identifier	dbg		1199555	0					
ANR	1199618	Identifier	bp		1199555	1					
ANR	1199619	Argument	false		1199555	1					
ANR	1199620	Identifier	false		1199555	0					
ANR	1199621	CompoundStatement		22:37:517:517	1199555	1					
ANR	1199622	ReturnStatement	return false ;	87:2:2103:2115	1199555	0	True				
ANR	1199623	Identifier	false		1199555	0					
ANR	1199624	IfStatement	if ( ! dbg -> swstep && dbg -> recoil_mode != R_DBG_RECOIL_NONE )		1199555	6					
ANR	1199625	Condition	! dbg -> swstep && dbg -> recoil_mode != R_DBG_RECOIL_NONE	92:5:2211:2263	1199555	0	True				
ANR	1199626	AndExpression	! dbg -> swstep && dbg -> recoil_mode != R_DBG_RECOIL_NONE		1199555	0		&&			
ANR	1199627	UnaryOperationExpression	! dbg -> swstep		1199555	0					
ANR	1199628	UnaryOperator	!		1199555	0					
ANR	1199629	PtrMemberAccess	dbg -> swstep		1199555	1					
ANR	1199630	Identifier	dbg		1199555	0					
ANR	1199631	Identifier	swstep		1199555	1					
ANR	1199632	EqualityExpression	dbg -> recoil_mode != R_DBG_RECOIL_NONE		1199555	1		!=			
ANR	1199633	PtrMemberAccess	dbg -> recoil_mode		1199555	0					
ANR	1199634	Identifier	dbg		1199555	0					
ANR	1199635	Identifier	recoil_mode		1199555	1					
ANR	1199636	Identifier	R_DBG_RECOIL_NONE		1199555	1					
ANR	1199637	CompoundStatement		28:60:708:708	1199555	1					
ANR	1199638	ExpressionStatement	dbg -> reason . bp_addr = 0	93:2:2270:2293	1199555	0	True				
ANR	1199639	AssignmentExpression	dbg -> reason . bp_addr = 0		1199555	0		=			
ANR	1199640	MemberAccess	dbg -> reason . bp_addr		1199555	0					
ANR	1199641	PtrMemberAccess	dbg -> reason		1199555	0					
ANR	1199642	Identifier	dbg		1199555	0					
ANR	1199643	Identifier	reason		1199555	1					
ANR	1199644	Identifier	bp_addr		1199555	1					
ANR	1199645	PrimaryExpression	0		1199555	1					
ANR	1199646	ReturnStatement	return true ;	94:2:2297:2308	1199555	1	True				
ANR	1199647	Identifier	true		1199555	0					
ANR	1199648	Statement	if	98:2:2365:2366	1199555	7	True				
ANR	1199649	IdentifierDeclStatement	"__mips__ b = r_bp_get_at ( dbg -> bp , pc ) ;"	98:5:2368:2457	1199555	8	True				
ANR	1199650	IdentifierDecl	"b = r_bp_get_at ( dbg -> bp , pc )"		1199555	0					
ANR	1199651	IdentifierDeclType	__mips__		1199555	0					
ANR	1199652	Identifier	b		1199555	1					
ANR	1199653	AssignmentExpression	"b = r_bp_get_at ( dbg -> bp , pc )"		1199555	2		=			
ANR	1199654	Identifier	b		1199555	0					
ANR	1199655	CallExpression	"r_bp_get_at ( dbg -> bp , pc )"		1199555	1					
ANR	1199656	Callee	r_bp_get_at		1199555	0					
ANR	1199657	Identifier	r_bp_get_at		1199555	0					
ANR	1199658	ArgumentList	dbg -> bp		1199555	1					
ANR	1199659	Argument	dbg -> bp		1199555	0					
ANR	1199660	PtrMemberAccess	dbg -> bp		1199555	0					
ANR	1199661	Identifier	dbg		1199555	0					
ANR	1199662	Identifier	bp		1199555	1					
ANR	1199663	Argument	pc		1199555	1					
ANR	1199664	Identifier	pc		1199555	0					
ANR	1199665	IfStatement	if ( ! b )		1199555	9					
ANR	1199666	Condition	! b	101:5:2464:2465	1199555	0	True				
ANR	1199667	UnaryOperationExpression	! b		1199555	0					
ANR	1199668	UnaryOperator	!		1199555	0					
ANR	1199669	Identifier	b		1199555	1					
ANR	1199670	CompoundStatement		37:9:910:910	1199555	1					
ANR	1199671	ReturnStatement	return true ;	102:2:2507:2518	1199555	0	True				
ANR	1199672	Identifier	true		1199555	0					
ANR	1199673	ElseStatement	else		1199555	0					
ANR	1199674	IdentifierDeclStatement	int pc_off = dbg -> bpsize ;	105:1:2531:2555	1199555	0	True				
ANR	1199675	IdentifierDecl	pc_off = dbg -> bpsize		1199555	0					
ANR	1199676	IdentifierDeclType	int		1199555	0					
ANR	1199677	Identifier	pc_off		1199555	1					
ANR	1199678	AssignmentExpression	pc_off = dbg -> bpsize		1199555	2		=			
ANR	1199679	Identifier	pc_off		1199555	0					
ANR	1199680	PtrMemberAccess	dbg -> bpsize		1199555	1					
ANR	1199681	Identifier	dbg		1199555	0					
ANR	1199682	Identifier	bpsize		1199555	1					
ANR	1199683	IfStatement	if ( ! dbg -> pc_at_bp_set )		1199555	10					
ANR	1199684	Condition	! dbg -> pc_at_bp_set	107:5:2612:2629	1199555	0	True				
ANR	1199685	UnaryOperationExpression	! dbg -> pc_at_bp_set		1199555	0					
ANR	1199686	UnaryOperator	!		1199555	0					
ANR	1199687	PtrMemberAccess	dbg -> pc_at_bp_set		1199555	1					
ANR	1199688	Identifier	dbg		1199555	0					
ANR	1199689	Identifier	pc_at_bp_set		1199555	1					
ANR	1199690	CompoundStatement		43:25:1074:1074	1199555	1					
ANR	1199691	ExpressionStatement	"b = r_bp_get_at ( dbg -> bp , pc - dbg -> bpsize )"	108:2:2636:2679	1199555	0	True				
ANR	1199692	AssignmentExpression	"b = r_bp_get_at ( dbg -> bp , pc - dbg -> bpsize )"		1199555	0		=			
ANR	1199693	Identifier	b		1199555	0					
ANR	1199694	CallExpression	"r_bp_get_at ( dbg -> bp , pc - dbg -> bpsize )"		1199555	1					
ANR	1199695	Callee	r_bp_get_at		1199555	0					
ANR	1199696	Identifier	r_bp_get_at		1199555	0					
ANR	1199697	ArgumentList	dbg -> bp		1199555	1					
ANR	1199698	Argument	dbg -> bp		1199555	0					
ANR	1199699	PtrMemberAccess	dbg -> bp		1199555	0					
ANR	1199700	Identifier	dbg		1199555	0					
ANR	1199701	Identifier	bp		1199555	1					
ANR	1199702	Argument	pc - dbg -> bpsize		1199555	1					
ANR	1199703	AdditiveExpression	pc - dbg -> bpsize		1199555	0		-			
ANR	1199704	Identifier	pc		1199555	0					
ANR	1199705	PtrMemberAccess	dbg -> bpsize		1199555	1					
ANR	1199706	Identifier	dbg		1199555	0					
ANR	1199707	Identifier	bpsize		1199555	1					
ANR	1199708	IfStatement	if ( ! b )		1199555	1					
ANR	1199709	Condition	! b	109:6:2687:2688	1199555	0	True				
ANR	1199710	UnaryOperationExpression	! b		1199555	0					
ANR	1199711	UnaryOperator	!		1199555	0					
ANR	1199712	Identifier	b		1199555	1					
ANR	1199713	CompoundStatement		45:10:1133:1133	1199555	1					
ANR	1199714	ExpressionStatement	"b = r_bp_get_at ( dbg -> bp , pc )"	111:3:2774:2803	1199555	0	True				
ANR	1199715	AssignmentExpression	"b = r_bp_get_at ( dbg -> bp , pc )"		1199555	0		=			
ANR	1199716	Identifier	b		1199555	0					
ANR	1199717	CallExpression	"r_bp_get_at ( dbg -> bp , pc )"		1199555	1					
ANR	1199718	Callee	r_bp_get_at		1199555	0					
ANR	1199719	Identifier	r_bp_get_at		1199555	0					
ANR	1199720	ArgumentList	dbg -> bp		1199555	1					
ANR	1199721	Argument	dbg -> bp		1199555	0					
ANR	1199722	PtrMemberAccess	dbg -> bp		1199555	0					
ANR	1199723	Identifier	dbg		1199555	0					
ANR	1199724	Identifier	bp		1199555	1					
ANR	1199725	Argument	pc		1199555	1					
ANR	1199726	Identifier	pc		1199555	0					
ANR	1199727	IfStatement	if ( ! b )		1199555	1					
ANR	1199728	Condition	! b	112:7:2812:2813	1199555	0	True				
ANR	1199729	UnaryOperationExpression	! b		1199555	0					
ANR	1199730	UnaryOperator	!		1199555	0					
ANR	1199731	Identifier	b		1199555	1					
ANR	1199732	CompoundStatement		50:4:1326:1368	1199555	1					
ANR	1199733	IdentifierDeclStatement	"int drx_reg_idx = r_debug_drx_at ( dbg , pc ) ;"	114:4:2884:2926	1199555	0	True				
ANR	1199734	IdentifierDecl	"drx_reg_idx = r_debug_drx_at ( dbg , pc )"		1199555	0					
ANR	1199735	IdentifierDeclType	int		1199555	0					
ANR	1199736	Identifier	drx_reg_idx		1199555	1					
ANR	1199737	AssignmentExpression	"drx_reg_idx = r_debug_drx_at ( dbg , pc )"		1199555	2		=			
ANR	1199738	Identifier	drx_reg_idx		1199555	0					
ANR	1199739	CallExpression	"r_debug_drx_at ( dbg , pc )"		1199555	1					
ANR	1199740	Callee	r_debug_drx_at		1199555	0					
ANR	1199741	Identifier	r_debug_drx_at		1199555	0					
ANR	1199742	ArgumentList	dbg		1199555	1					
ANR	1199743	Argument	dbg		1199555	0					
ANR	1199744	Identifier	dbg		1199555	0					
ANR	1199745	Argument	pc		1199555	1					
ANR	1199746	Identifier	pc		1199555	0					
ANR	1199747	IfStatement	if ( drx_reg_idx != - 1 )		1199555	1					
ANR	1199748	Condition	drx_reg_idx != - 1	115:8:2936:2952	1199555	0	True				
ANR	1199749	EqualityExpression	drx_reg_idx != - 1		1199555	0		!=			
ANR	1199750	Identifier	drx_reg_idx		1199555	0					
ANR	1199751	UnaryOperationExpression	- 1		1199555	1					
ANR	1199752	UnaryOperator	-		1199555	0					
ANR	1199753	PrimaryExpression	1		1199555	1					
ANR	1199754	CompoundStatement		51:27:1397:1397	1199555	1					
ANR	1199755	Statement	eprintf	116:5:2962:2968	1199555	0	True				
ANR	1199756	Statement	(	116:13:2970:2970	1199555	1	True				
ANR	1199757	Statement	"""hit hardware breakpoint %d at: %"""	116:14:2971:3004	1199555	2	True				
ANR	1199758	Statement	PFMT64x	116:49:3006:3012	1199555	3	True				
ANR	1199759	Statement	"""\\n"""	116:57:3014:3017	1199555	4	True				
ANR	1199760	Statement	","	116:61:3018:3018	1199555	5	True				
ANR	1199761	Statement	drx_reg_idx	117:6:3026:3036	1199555	6	True				
ANR	1199762	Statement	","	117:17:3037:3037	1199555	7	True				
ANR	1199763	Statement	pc	117:19:3039:3040	1199555	8	True				
ANR	1199764	Statement	)	117:21:3041:3041	1199555	9	True				
ANR	1199765	ExpressionStatement		117:22:3042:3042	1199555	10	True				
ANR	1199766	ReturnStatement	return true ;	120:4:3117:3128	1199555	2	True				
ANR	1199767	Identifier	true		1199555	0					
ANR	1199768	ElseStatement	else		1199555	0					
ANR	1199769	CompoundStatement		58:8:1585:1585	1199555	0					
ANR	1199770	ExpressionStatement	dbg -> pc_at_bp_set = true	123:4:3149:3173	1199555	0	True				
ANR	1199771	AssignmentExpression	dbg -> pc_at_bp_set = true		1199555	0		=			
ANR	1199772	PtrMemberAccess	dbg -> pc_at_bp_set		1199555	0					
ANR	1199773	Identifier	dbg		1199555	0					
ANR	1199774	Identifier	pc_at_bp_set		1199555	1					
ANR	1199775	Identifier	true		1199555	1					
ANR	1199776	ExpressionStatement	dbg -> pc_at_bp = true	124:4:3179:3199	1199555	1	True				
ANR	1199777	AssignmentExpression	dbg -> pc_at_bp = true		1199555	0		=			
ANR	1199778	PtrMemberAccess	dbg -> pc_at_bp		1199555	0					
ANR	1199779	Identifier	dbg		1199555	0					
ANR	1199780	Identifier	pc_at_bp		1199555	1					
ANR	1199781	Identifier	true		1199555	1					
ANR	1199782	ElseStatement	else		1199555	0					
ANR	1199783	CompoundStatement		62:9:1657:1657	1199555	0					
ANR	1199784	ExpressionStatement	dbg -> pc_at_bp_set = true	127:3:3220:3244	1199555	0	True				
ANR	1199785	AssignmentExpression	dbg -> pc_at_bp_set = true		1199555	0		=			
ANR	1199786	PtrMemberAccess	dbg -> pc_at_bp_set		1199555	0					
ANR	1199787	Identifier	dbg		1199555	0					
ANR	1199788	Identifier	pc_at_bp_set		1199555	1					
ANR	1199789	Identifier	true		1199555	1					
ANR	1199790	ExpressionStatement	dbg -> pc_at_bp = false	128:3:3249:3270	1199555	1	True				
ANR	1199791	AssignmentExpression	dbg -> pc_at_bp = false		1199555	0		=			
ANR	1199792	PtrMemberAccess	dbg -> pc_at_bp		1199555	0					
ANR	1199793	Identifier	dbg		1199555	0					
ANR	1199794	Identifier	pc_at_bp		1199555	1					
ANR	1199795	Identifier	false		1199555	1					
ANR	1199796	IfStatement	if ( ! dbg -> pc_at_bp_set )		1199555	11					
ANR	1199797	Condition	! dbg -> pc_at_bp_set	132:5:3285:3302	1199555	0	True				
ANR	1199798	UnaryOperationExpression	! dbg -> pc_at_bp_set		1199555	0					
ANR	1199799	UnaryOperator	!		1199555	0					
ANR	1199800	PtrMemberAccess	dbg -> pc_at_bp_set		1199555	1					
ANR	1199801	Identifier	dbg		1199555	0					
ANR	1199802	Identifier	pc_at_bp_set		1199555	1					
ANR	1199803	CompoundStatement		68:25:1747:1747	1199555	1					
ANR	1199804	ExpressionStatement	"eprintf ( ""failed to determine position of pc after breakpoint"" )"	133:2:3309:3372	1199555	0	True				
ANR	1199805	CallExpression	"eprintf ( ""failed to determine position of pc after breakpoint"" )"		1199555	0					
ANR	1199806	Callee	eprintf		1199555	0					
ANR	1199807	Identifier	eprintf		1199555	0					
ANR	1199808	ArgumentList	"""failed to determine position of pc after breakpoint"""		1199555	1					
ANR	1199809	Argument	"""failed to determine position of pc after breakpoint"""		1199555	0					
ANR	1199810	PrimaryExpression	"""failed to determine position of pc after breakpoint"""		1199555	0					
ANR	1199811	IfStatement	if ( dbg -> pc_at_bp )		1199555	12					
ANR	1199812	Condition	dbg -> pc_at_bp	136:5:3383:3395	1199555	0	True				
ANR	1199813	PtrMemberAccess	dbg -> pc_at_bp		1199555	0					
ANR	1199814	Identifier	dbg		1199555	0					
ANR	1199815	Identifier	pc_at_bp		1199555	1					
ANR	1199816	CompoundStatement		72:20:1840:1840	1199555	1					
ANR	1199817	ExpressionStatement	pc_off = 0	137:2:3402:3412	1199555	0	True				
ANR	1199818	AssignmentExpression	pc_off = 0		1199555	0		=			
ANR	1199819	Identifier	pc_off		1199555	0					
ANR	1199820	PrimaryExpression	0		1199555	1					
ANR	1199821	ExpressionStatement	"b = r_bp_get_at ( dbg -> bp , pc )"	138:2:3416:3445	1199555	1	True				
ANR	1199822	AssignmentExpression	"b = r_bp_get_at ( dbg -> bp , pc )"		1199555	0		=			
ANR	1199823	Identifier	b		1199555	0					
ANR	1199824	CallExpression	"r_bp_get_at ( dbg -> bp , pc )"		1199555	1					
ANR	1199825	Callee	r_bp_get_at		1199555	0					
ANR	1199826	Identifier	r_bp_get_at		1199555	0					
ANR	1199827	ArgumentList	dbg -> bp		1199555	1					
ANR	1199828	Argument	dbg -> bp		1199555	0					
ANR	1199829	PtrMemberAccess	dbg -> bp		1199555	0					
ANR	1199830	Identifier	dbg		1199555	0					
ANR	1199831	Identifier	bp		1199555	1					
ANR	1199832	Argument	pc		1199555	1					
ANR	1199833	Identifier	pc		1199555	0					
ANR	1199834	ElseStatement	else		1199555	0					
ANR	1199835	CompoundStatement		75:8:1897:1897	1199555	0					
ANR	1199836	ExpressionStatement	"b = r_bp_get_at ( dbg -> bp , pc - dbg -> bpsize )"	140:2:3459:3502	1199555	0	True				
ANR	1199837	AssignmentExpression	"b = r_bp_get_at ( dbg -> bp , pc - dbg -> bpsize )"		1199555	0		=			
ANR	1199838	Identifier	b		1199555	0					
ANR	1199839	CallExpression	"r_bp_get_at ( dbg -> bp , pc - dbg -> bpsize )"		1199555	1					
ANR	1199840	Callee	r_bp_get_at		1199555	0					
ANR	1199841	Identifier	r_bp_get_at		1199555	0					
ANR	1199842	ArgumentList	dbg -> bp		1199555	1					
ANR	1199843	Argument	dbg -> bp		1199555	0					
ANR	1199844	PtrMemberAccess	dbg -> bp		1199555	0					
ANR	1199845	Identifier	dbg		1199555	0					
ANR	1199846	Identifier	bp		1199555	1					
ANR	1199847	Argument	pc - dbg -> bpsize		1199555	1					
ANR	1199848	AdditiveExpression	pc - dbg -> bpsize		1199555	0		-			
ANR	1199849	Identifier	pc		1199555	0					
ANR	1199850	PtrMemberAccess	dbg -> bpsize		1199555	1					
ANR	1199851	Identifier	dbg		1199555	0					
ANR	1199852	Identifier	bpsize		1199555	1					
ANR	1199853	IfStatement	if ( ! b )		1199555	13					
ANR	1199854	Condition	! b	143:5:3513:3514	1199555	0	True				
ANR	1199855	UnaryOperationExpression	! b		1199555	0					
ANR	1199856	UnaryOperator	!		1199555	0					
ANR	1199857	Identifier	b		1199555	1					
ANR	1199858	CompoundStatement		79:9:1959:1959	1199555	1					
ANR	1199859	ReturnStatement	return true ;	144:2:3521:3532	1199555	0	True				
ANR	1199860	Identifier	true		1199555	0					
ANR	1199861	ExpressionStatement	"b = r_bp_get_at ( dbg -> bp , pc - dbg -> bpsize )"	147:1:3539:3582	1199555	14	True				
ANR	1199862	AssignmentExpression	"b = r_bp_get_at ( dbg -> bp , pc - dbg -> bpsize )"		1199555	0		=			
ANR	1199863	Identifier	b		1199555	0					
ANR	1199864	CallExpression	"r_bp_get_at ( dbg -> bp , pc - dbg -> bpsize )"		1199555	1					
ANR	1199865	Callee	r_bp_get_at		1199555	0					
ANR	1199866	Identifier	r_bp_get_at		1199555	0					
ANR	1199867	ArgumentList	dbg -> bp		1199555	1					
ANR	1199868	Argument	dbg -> bp		1199555	0					
ANR	1199869	PtrMemberAccess	dbg -> bp		1199555	0					
ANR	1199870	Identifier	dbg		1199555	0					
ANR	1199871	Identifier	bp		1199555	1					
ANR	1199872	Argument	pc - dbg -> bpsize		1199555	1					
ANR	1199873	AdditiveExpression	pc - dbg -> bpsize		1199555	0		-			
ANR	1199874	Identifier	pc		1199555	0					
ANR	1199875	PtrMemberAccess	dbg -> bpsize		1199555	1					
ANR	1199876	Identifier	dbg		1199555	0					
ANR	1199877	Identifier	bpsize		1199555	1					
ANR	1199878	IfStatement	if ( ! b )		1199555	15					
ANR	1199879	Condition	! b	148:5:3589:3590	1199555	0	True				
ANR	1199880	UnaryOperationExpression	! b		1199555	0					
ANR	1199881	UnaryOperator	!		1199555	0					
ANR	1199882	Identifier	b		1199555	1					
ANR	1199883	CompoundStatement		84:9:2035:2035	1199555	1					
ANR	1199884	ExpressionStatement	"b = r_bp_get_at ( dbg -> bp , pc )"	150:2:3674:3703	1199555	0	True				
ANR	1199885	AssignmentExpression	"b = r_bp_get_at ( dbg -> bp , pc )"		1199555	0		=			
ANR	1199886	Identifier	b		1199555	0					
ANR	1199887	CallExpression	"r_bp_get_at ( dbg -> bp , pc )"		1199555	1					
ANR	1199888	Callee	r_bp_get_at		1199555	0					
ANR	1199889	Identifier	r_bp_get_at		1199555	0					
ANR	1199890	ArgumentList	dbg -> bp		1199555	1					
ANR	1199891	Argument	dbg -> bp		1199555	0					
ANR	1199892	PtrMemberAccess	dbg -> bp		1199555	0					
ANR	1199893	Identifier	dbg		1199555	0					
ANR	1199894	Identifier	bp		1199555	1					
ANR	1199895	Argument	pc		1199555	1					
ANR	1199896	Identifier	pc		1199555	0					
ANR	1199897	IfStatement	if ( ! b )		1199555	1					
ANR	1199898	Condition	! b	151:6:3711:3712	1199555	0	True				
ANR	1199899	UnaryOperationExpression	! b		1199555	0					
ANR	1199900	UnaryOperator	!		1199555	0					
ANR	1199901	Identifier	b		1199555	1					
ANR	1199902	CompoundStatement		87:10:2157:2157	1199555	1					
ANR	1199903	ReturnStatement	return true ;	152:3:3720:3731	1199555	0	True				
ANR	1199904	Identifier	true		1199555	0					
ANR	1199905	ExpressionStatement	pc_off = 0	154:2:3739:3749	1199555	2	True				
ANR	1199906	AssignmentExpression	pc_off = 0		1199555	0		=			
ANR	1199907	Identifier	pc_off		1199555	0					
ANR	1199908	PrimaryExpression	0		1199555	1					
ANR	1199909	IfStatement	if ( pc_off )		1199555	16					
ANR	1199910	Condition	pc_off	158:5:3789:3794	1199555	0	True				
ANR	1199911	Identifier	pc_off		1199555	0					
ANR	1199912	CompoundStatement		94:13:2239:2239	1199555	1					
ANR	1199913	ExpressionStatement	pc -= pc_off	159:2:3801:3813	1199555	0	True				
ANR	1199914	AssignmentExpression	pc -= pc_off		1199555	0		-=			
ANR	1199915	Identifier	pc		1199555	0					
ANR	1199916	Identifier	pc_off		1199555	1					
ANR	1199917	IfStatement	"if ( ! r_reg_set_value ( dbg -> reg , pc_ri , pc ) )"		1199555	1					
ANR	1199918	Condition	"! r_reg_set_value ( dbg -> reg , pc_ri , pc )"	160:6:3821:3858	1199555	0	True				
ANR	1199919	UnaryOperationExpression	"! r_reg_set_value ( dbg -> reg , pc_ri , pc )"		1199555	0					
ANR	1199920	UnaryOperator	!		1199555	0					
ANR	1199921	CallExpression	"r_reg_set_value ( dbg -> reg , pc_ri , pc )"		1199555	1					
ANR	1199922	Callee	r_reg_set_value		1199555	0					
ANR	1199923	Identifier	r_reg_set_value		1199555	0					
ANR	1199924	ArgumentList	dbg -> reg		1199555	1					
ANR	1199925	Argument	dbg -> reg		1199555	0					
ANR	1199926	PtrMemberAccess	dbg -> reg		1199555	0					
ANR	1199927	Identifier	dbg		1199555	0					
ANR	1199928	Identifier	reg		1199555	1					
ANR	1199929	Argument	pc_ri		1199555	1					
ANR	1199930	Identifier	pc_ri		1199555	0					
ANR	1199931	Argument	pc		1199555	2					
ANR	1199932	Identifier	pc		1199555	0					
ANR	1199933	CompoundStatement		96:46:2303:2303	1199555	1					
ANR	1199934	ExpressionStatement	"eprintf ( ""failed to set PC!\\n"" )"	161:3:3866:3897	1199555	0	True				
ANR	1199935	CallExpression	"eprintf ( ""failed to set PC!\\n"" )"		1199555	0					
ANR	1199936	Callee	eprintf		1199555	0					
ANR	1199937	Identifier	eprintf		1199555	0					
ANR	1199938	ArgumentList	"""failed to set PC!\\n"""		1199555	1					
ANR	1199939	Argument	"""failed to set PC!\\n"""		1199555	0					
ANR	1199940	PrimaryExpression	"""failed to set PC!\\n"""		1199555	0					
ANR	1199941	ReturnStatement	return false ;	162:3:3902:3914	1199555	1	True				
ANR	1199942	Identifier	false		1199555	0					
ANR	1199943	IfStatement	"if ( ! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , true ) )"		1199555	2					
ANR	1199944	Condition	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , true )"	164:6:3926:3970	1199555	0	True				
ANR	1199945	UnaryOperationExpression	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , true )"		1199555	0					
ANR	1199946	UnaryOperator	!		1199555	0					
ANR	1199947	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , true )"		1199555	1					
ANR	1199948	Callee	r_debug_reg_sync		1199555	0					
ANR	1199949	Identifier	r_debug_reg_sync		1199555	0					
ANR	1199950	ArgumentList	dbg		1199555	1					
ANR	1199951	Argument	dbg		1199555	0					
ANR	1199952	Identifier	dbg		1199555	0					
ANR	1199953	Argument	R_REG_TYPE_GPR		1199555	1					
ANR	1199954	Identifier	R_REG_TYPE_GPR		1199555	0					
ANR	1199955	Argument	true		1199555	2					
ANR	1199956	Identifier	true		1199555	0					
ANR	1199957	CompoundStatement		100:53:2415:2415	1199555	1					
ANR	1199958	ExpressionStatement	"eprintf ( ""cannot set registers!\\n"" )"	165:3:3978:4013	1199555	0	True				
ANR	1199959	CallExpression	"eprintf ( ""cannot set registers!\\n"" )"		1199555	0					
ANR	1199960	Callee	eprintf		1199555	0					
ANR	1199961	Identifier	eprintf		1199555	0					
ANR	1199962	ArgumentList	"""cannot set registers!\\n"""		1199555	1					
ANR	1199963	Argument	"""cannot set registers!\\n"""		1199555	0					
ANR	1199964	PrimaryExpression	"""cannot set registers!\\n"""		1199555	0					
ANR	1199965	ReturnStatement	return false ;	166:3:4018:4030	1199555	1	True				
ANR	1199966	Identifier	false		1199555	0					
ANR	1199967	IdentifierDeclStatement	endif * pb = b ;	169:2:4041:4056	1199555	17	True				
ANR	1199968	IdentifierDecl	* pb = b		1199555	0					
ANR	1199969	IdentifierDeclType	endif *		1199555	0					
ANR	1199970	Identifier	pb		1199555	1					
ANR	1199971	AssignmentExpression	* pb = b		1199555	2		=			
ANR	1199972	Identifier	b		1199555	0					
ANR	1199973	Identifier	b		1199555	1					
ANR	1199974	IfStatement	if ( b -> swstep )		1199555	18					
ANR	1199975	Condition	b -> swstep	174:5:4144:4152	1199555	0	True				
ANR	1199976	PtrMemberAccess	b -> swstep		1199555	0					
ANR	1199977	Identifier	b		1199555	0					
ANR	1199978	Identifier	swstep		1199555	1					
ANR	1199979	CompoundStatement		110:16:2597:2597	1199555	1					
ANR	1199980	ExpressionStatement	dbg -> reason . bp_addr = 0	175:2:4159:4182	1199555	0	True				
ANR	1199981	AssignmentExpression	dbg -> reason . bp_addr = 0		1199555	0		=			
ANR	1199982	MemberAccess	dbg -> reason . bp_addr		1199555	0					
ANR	1199983	PtrMemberAccess	dbg -> reason		1199555	0					
ANR	1199984	Identifier	dbg		1199555	0					
ANR	1199985	Identifier	reason		1199555	1					
ANR	1199986	Identifier	bp_addr		1199555	1					
ANR	1199987	PrimaryExpression	0		1199555	1					
ANR	1199988	ReturnStatement	return true ;	176:2:4186:4197	1199555	1	True				
ANR	1199989	Identifier	true		1199555	0					
ANR	1199990	ExpressionStatement	dbg -> reason . bp_addr = b -> addr	180:1:4229:4258	1199555	19	True				
ANR	1199991	AssignmentExpression	dbg -> reason . bp_addr = b -> addr		1199555	0		=			
ANR	1199992	MemberAccess	dbg -> reason . bp_addr		1199555	0					
ANR	1199993	PtrMemberAccess	dbg -> reason		1199555	0					
ANR	1199994	Identifier	dbg		1199555	0					
ANR	1199995	Identifier	reason		1199555	1					
ANR	1199996	Identifier	bp_addr		1199555	1					
ANR	1199997	PtrMemberAccess	b -> addr		1199555	1					
ANR	1199998	Identifier	b		1199555	0					
ANR	1199999	Identifier	addr		1199555	1					
ANR	1200000	IfStatement	if ( dbg -> hitinfo )		1199555	20					
ANR	1200001	Condition	dbg -> hitinfo	183:5:4306:4317	1199555	0	True				
ANR	1200002	PtrMemberAccess	dbg -> hitinfo		1199555	0					
ANR	1200003	Identifier	dbg		1199555	0					
ANR	1200004	Identifier	hitinfo		1199555	1					
ANR	1200005	CompoundStatement		119:19:2762:2762	1199555	1					
ANR	1200006	Statement	eprintf	184:2:4324:4330	1199555	0	True				
ANR	1200007	Statement	(	184:10:4332:4332	1199555	1	True				
ANR	1200008	Statement	"""hit %spoint at: %"""	184:11:4333:4351	1199555	2	True				
ANR	1200009	Statement	PFMT64x	184:31:4353:4359	1199555	3	True				
ANR	1200010	Statement	"""\\n"""	184:39:4361:4364	1199555	4	True				
ANR	1200011	Statement	","	184:43:4365:4365	1199555	5	True				
ANR	1200012	Statement	b	185:3:4370:4370	1199555	6	True				
ANR	1200013	Statement	->	185:4:4371:4372	1199555	7	True				
ANR	1200014	Statement	trace	185:6:4373:4377	1199555	8	True				
ANR	1200015	Statement	?	185:12:4379:4379	1199555	9	True				
ANR	1200016	Statement	"""trace"""	185:14:4381:4387	1199555	10	True				
ANR	1200017	Statement	:	185:22:4389:4389	1199555	11	True				
ANR	1200018	Statement	"""break"""	185:24:4391:4397	1199555	12	True				
ANR	1200019	Statement	","	185:31:4398:4398	1199555	13	True				
ANR	1200020	Statement	pc	185:33:4400:4401	1199555	14	True				
ANR	1200021	Statement	)	185:35:4402:4402	1199555	15	True				
ANR	1200022	ExpressionStatement		185:36:4403:4403	1199555	16	True				
ANR	1200023	IfStatement	if ( dbg -> corebind . core && dbg -> corebind . bphit )		1199555	21					
ANR	1200024	Condition	dbg -> corebind . core && dbg -> corebind . bphit	191:5:4520:4560	1199555	0	True				
ANR	1200025	AndExpression	dbg -> corebind . core && dbg -> corebind . bphit		1199555	0		&&			
ANR	1200026	MemberAccess	dbg -> corebind . core		1199555	0					
ANR	1200027	PtrMemberAccess	dbg -> corebind		1199555	0					
ANR	1200028	Identifier	dbg		1199555	0					
ANR	1200029	Identifier	corebind		1199555	1					
ANR	1200030	Identifier	core		1199555	1					
ANR	1200031	MemberAccess	dbg -> corebind . bphit		1199555	1					
ANR	1200032	PtrMemberAccess	dbg -> corebind		1199555	0					
ANR	1200033	Identifier	dbg		1199555	0					
ANR	1200034	Identifier	corebind		1199555	1					
ANR	1200035	Identifier	bphit		1199555	1					
ANR	1200036	CompoundStatement		127:48:3005:3005	1199555	1					
ANR	1200037	ExpressionStatement	"dbg -> corebind . bphit ( dbg -> corebind . core , b )"	192:2:4567:4610	1199555	0	True				
ANR	1200038	CallExpression	"dbg -> corebind . bphit ( dbg -> corebind . core , b )"		1199555	0					
ANR	1200039	Callee	dbg -> corebind . bphit		1199555	0					
ANR	1200040	MemberAccess	dbg -> corebind . bphit		1199555	0					
ANR	1200041	PtrMemberAccess	dbg -> corebind		1199555	0					
ANR	1200042	Identifier	dbg		1199555	0					
ANR	1200043	Identifier	corebind		1199555	1					
ANR	1200044	Identifier	bphit		1199555	1					
ANR	1200045	ArgumentList	dbg -> corebind . core		1199555	1					
ANR	1200046	Argument	dbg -> corebind . core		1199555	0					
ANR	1200047	MemberAccess	dbg -> corebind . core		1199555	0					
ANR	1200048	PtrMemberAccess	dbg -> corebind		1199555	0					
ANR	1200049	Identifier	dbg		1199555	0					
ANR	1200050	Identifier	corebind		1199555	1					
ANR	1200051	Identifier	core		1199555	1					
ANR	1200052	Argument	b		1199555	1					
ANR	1200053	Identifier	b		1199555	0					
ANR	1200054	ReturnStatement	return true ;	194:1:4616:4627	1199555	22	True				
ANR	1200055	Identifier	true		1199555	0					
ANR	1200056	ReturnType	static int		1199555	1					
ANR	1200057	Identifier	r_debug_bp_hit		1199555	2					
ANR	1200058	ParameterList	"RDebug * dbg , RRegItem * pc_ri , ut64 pc , RBreakpointItem * * pb"		1199555	3					
ANR	1200059	Parameter	RDebug * dbg	65:26:1496:1506	1199555	0	True				
ANR	1200060	ParameterType	RDebug *		1199555	0					
ANR	1200061	Identifier	dbg		1199555	1					
ANR	1200062	Parameter	RRegItem * pc_ri	65:39:1509:1523	1199555	1	True				
ANR	1200063	ParameterType	RRegItem *		1199555	0					
ANR	1200064	Identifier	pc_ri		1199555	1					
ANR	1200065	Parameter	ut64 pc	65:56:1526:1532	1199555	2	True				
ANR	1200066	ParameterType	ut64		1199555	0					
ANR	1200067	Identifier	pc		1199555	1					
ANR	1200068	Parameter	RBreakpointItem * * pb	65:65:1535:1554	1199555	3	True				
ANR	1200069	ParameterType	RBreakpointItem * *		1199555	0					
ANR	1200070	Identifier	pb		1199555	1					
ANR	1200071	CFGEntryNode	ENTRY		1199555		True				
ANR	1200072	CFGExitNode	EXIT		1199555		True				
ANR	1200073	Symbol	r_debug_reg_sync		1199555						
ANR	1200074	Symbol	r_bp_get_at		1199555						
ANR	1200075	Symbol	r_bp_restore		1199555						
ANR	1200076	Symbol	dbg -> corebind . bphit		1199555						
ANR	1200077	Symbol	dbg -> pc_at_bp_set		1199555						
ANR	1200078	Symbol	b -> addr		1199555						
ANR	1200079	Symbol	dbg -> corebind . core		1199555						
ANR	1200080	Symbol	r_debug_drx_at		1199555						
ANR	1200081	Symbol	b -> swstep		1199555						
ANR	1200082	Symbol	dbg -> reason . bp_addr		1199555						
ANR	1200083	Symbol	drx_reg_idx		1199555						
ANR	1200084	Symbol	pc_ri		1199555						
ANR	1200085	Symbol	pc_off		1199555						
ANR	1200086	Symbol	R_REG_TYPE_GPR		1199555						
ANR	1200087	Symbol	dbg -> trace -> enabled		1199555						
ANR	1200088	Symbol	R_DBG_RECOIL_NONE		1199555						
ANR	1200089	Symbol	b		1199555						
ANR	1200090	Symbol	NULL		1199555						
ANR	1200091	Symbol	dbg -> reason		1199555						
ANR	1200092	Symbol	dbg -> bp		1199555						
ANR	1200093	Symbol	dbg		1199555						
ANR	1200094	Symbol	false		1199555						
ANR	1200095	Symbol	* dbg		1199555						
ANR	1200096	Symbol	* b		1199555						
ANR	1200097	Symbol	dbg -> hitinfo		1199555						
ANR	1200098	Symbol	dbg -> pc_at_bp		1199555						
ANR	1200099	Symbol	dbg -> swstep		1199555						
ANR	1200100	Symbol	pb		1199555						
ANR	1200101	Symbol	pc		1199555						
ANR	1200102	Symbol	dbg -> bpsize		1199555						
ANR	1200103	Symbol	dbg -> corebind		1199555						
ANR	1200104	Symbol	dbg -> recoil_mode		1199555						
ANR	1200105	Symbol	dbg -> trace		1199555						
ANR	1200106	Symbol	true		1199555						
ANR	1200107	Symbol	* dbg -> trace		1199555						
ANR	1200108	Symbol	* pb		1199555						
ANR	1200109	Symbol	dbg -> reg		1199555						
ANR	1200110	Symbol	r_reg_set_value		1199555						
ANR	1200111	Symbol	* * dbg		1199555						
ANR	1200112	Function	r_debug_bps_enable	198:0:4670:4949							
ANR	1200113	FunctionDef	r_debug_bps_enable (RDebug * dbg)		1200112	0					
ANR	1200114	CompoundStatement		198:43:4713:4949	1200112	0					
ANR	1200115	IfStatement	"if ( ! r_bp_restore ( dbg -> bp , true ) )"		1200112	0					
ANR	1200116	Condition	"! r_bp_restore ( dbg -> bp , true )"	201:5:4819:4847	1200112	0	True				
ANR	1200117	UnaryOperationExpression	"! r_bp_restore ( dbg -> bp , true )"		1200112	0					
ANR	1200118	UnaryOperator	!		1200112	0					
ANR	1200119	CallExpression	"r_bp_restore ( dbg -> bp , true )"		1200112	1					
ANR	1200120	Callee	r_bp_restore		1200112	0					
ANR	1200121	Identifier	r_bp_restore		1200112	0					
ANR	1200122	ArgumentList	dbg -> bp		1200112	1					
ANR	1200123	Argument	dbg -> bp		1200112	0					
ANR	1200124	PtrMemberAccess	dbg -> bp		1200112	0					
ANR	1200125	Identifier	dbg		1200112	0					
ANR	1200126	Identifier	bp		1200112	1					
ANR	1200127	Argument	true		1200112	1					
ANR	1200128	Identifier	true		1200112	0					
ANR	1200129	CompoundStatement		4:36:136:136	1200112	1					
ANR	1200130	ReturnStatement	return false ;	202:2:4854:4866	1200112	0	True				
ANR	1200131	Identifier	false		1200112	0					
ANR	1200132	ExpressionStatement	dbg -> recoil_mode = R_DBG_RECOIL_NONE	205:1:4897:4933	1200112	1	True				
ANR	1200133	AssignmentExpression	dbg -> recoil_mode = R_DBG_RECOIL_NONE		1200112	0		=			
ANR	1200134	PtrMemberAccess	dbg -> recoil_mode		1200112	0					
ANR	1200135	Identifier	dbg		1200112	0					
ANR	1200136	Identifier	recoil_mode		1200112	1					
ANR	1200137	Identifier	R_DBG_RECOIL_NONE		1200112	1					
ANR	1200138	ReturnStatement	return true ;	206:1:4936:4947	1200112	2	True				
ANR	1200139	Identifier	true		1200112	0					
ANR	1200140	ReturnType	static int		1200112	1					
ANR	1200141	Identifier	r_debug_bps_enable		1200112	2					
ANR	1200142	ParameterList	RDebug * dbg		1200112	3					
ANR	1200143	Parameter	RDebug * dbg	198:30:4700:4710	1200112	0	True				
ANR	1200144	ParameterType	RDebug *		1200112	0					
ANR	1200145	Identifier	dbg		1200112	1					
ANR	1200146	CFGEntryNode	ENTRY		1200112		True				
ANR	1200147	CFGExitNode	EXIT		1200112		True				
ANR	1200148	Symbol	dbg -> bp		1200112						
ANR	1200149	Symbol	dbg -> recoil_mode		1200112						
ANR	1200150	Symbol	dbg		1200112						
ANR	1200151	Symbol	true		1200112						
ANR	1200152	Symbol	r_bp_restore		1200112						
ANR	1200153	Symbol	false		1200112						
ANR	1200154	Symbol	* dbg		1200112						
ANR	1200155	Symbol	R_DBG_RECOIL_NONE		1200112						
ANR	1200156	Function	r_debug_recoil	221:0:5338:6697							
ANR	1200157	FunctionDef	"r_debug_recoil (RDebug * dbg , RDebugRecoilMode rc_mode)"		1200156	0					
ANR	1200158	CompoundStatement		221:65:5403:6697	1200156	0					
ANR	1200159	IfStatement	if ( ! dbg -> reason . bp_addr )		1200156	0					
ANR	1200160	Condition	! dbg -> reason . bp_addr	223:5:5483:5502	1200156	0	True				
ANR	1200161	UnaryOperationExpression	! dbg -> reason . bp_addr		1200156	0					
ANR	1200162	UnaryOperator	!		1200156	0					
ANR	1200163	MemberAccess	dbg -> reason . bp_addr		1200156	1					
ANR	1200164	PtrMemberAccess	dbg -> reason		1200156	0					
ANR	1200165	Identifier	dbg		1200156	0					
ANR	1200166	Identifier	reason		1200156	1					
ANR	1200167	Identifier	bp_addr		1200156	1					
ANR	1200168	CompoundStatement		3:27:101:101	1200156	1					
ANR	1200169	ReturnStatement	return r_debug_bps_enable ( dbg ) ;	224:2:5509:5540	1200156	0	True				
ANR	1200170	CallExpression	r_debug_bps_enable ( dbg )		1200156	0					
ANR	1200171	Callee	r_debug_bps_enable		1200156	0					
ANR	1200172	Identifier	r_debug_bps_enable		1200156	0					
ANR	1200173	ArgumentList	dbg		1200156	1					
ANR	1200174	Argument	dbg		1200156	0					
ANR	1200175	Identifier	dbg		1200156	0					
ANR	1200176	IfStatement	if ( dbg -> recoil_mode != R_DBG_RECOIL_NONE )		1200156	1					
ANR	1200177	Condition	dbg -> recoil_mode != R_DBG_RECOIL_NONE	228:5:5604:5640	1200156	0	True				
ANR	1200178	EqualityExpression	dbg -> recoil_mode != R_DBG_RECOIL_NONE		1200156	0		!=			
ANR	1200179	PtrMemberAccess	dbg -> recoil_mode		1200156	0					
ANR	1200180	Identifier	dbg		1200156	0					
ANR	1200181	Identifier	recoil_mode		1200156	1					
ANR	1200182	Identifier	R_DBG_RECOIL_NONE		1200156	1					
ANR	1200183	CompoundStatement		8:44:239:239	1200156	1					
ANR	1200184	IfStatement	if ( dbg -> swstep )		1200156	0					
ANR	1200185	Condition	dbg -> swstep	234:6:5899:5909	1200156	0	True				
ANR	1200186	PtrMemberAccess	dbg -> swstep		1200156	0					
ANR	1200187	Identifier	dbg		1200156	0					
ANR	1200188	Identifier	swstep		1200156	1					
ANR	1200189	CompoundStatement		14:19:508:508	1200156	1					
ANR	1200190	IfStatement	"if ( ! r_bp_restore_except ( dbg -> bp , true , dbg -> reason . bp_addr ) )"		1200156	0					
ANR	1200191	Condition	"! r_bp_restore_except ( dbg -> bp , true , dbg -> reason . bp_addr )"	235:7:5921:5977	1200156	0	True				
ANR	1200192	UnaryOperationExpression	"! r_bp_restore_except ( dbg -> bp , true , dbg -> reason . bp_addr )"		1200156	0					
ANR	1200193	UnaryOperator	!		1200156	0					
ANR	1200194	CallExpression	"r_bp_restore_except ( dbg -> bp , true , dbg -> reason . bp_addr )"		1200156	1					
ANR	1200195	Callee	r_bp_restore_except		1200156	0					
ANR	1200196	Identifier	r_bp_restore_except		1200156	0					
ANR	1200197	ArgumentList	dbg -> bp		1200156	1					
ANR	1200198	Argument	dbg -> bp		1200156	0					
ANR	1200199	PtrMemberAccess	dbg -> bp		1200156	0					
ANR	1200200	Identifier	dbg		1200156	0					
ANR	1200201	Identifier	bp		1200156	1					
ANR	1200202	Argument	true		1200156	1					
ANR	1200203	Identifier	true		1200156	0					
ANR	1200204	Argument	dbg -> reason . bp_addr		1200156	2					
ANR	1200205	MemberAccess	dbg -> reason . bp_addr		1200156	0					
ANR	1200206	PtrMemberAccess	dbg -> reason		1200156	0					
ANR	1200207	Identifier	dbg		1200156	0					
ANR	1200208	Identifier	reason		1200156	1					
ANR	1200209	Identifier	bp_addr		1200156	1					
ANR	1200210	CompoundStatement		15:66:576:576	1200156	1					
ANR	1200211	ReturnStatement	return false ;	236:4:5986:5998	1200156	0	True				
ANR	1200212	Identifier	false		1200156	0					
ANR	1200213	ReturnStatement	return true ;	238:3:6008:6019	1200156	1	True				
ANR	1200214	Identifier	true		1200156	0					
ANR	1200215	ReturnStatement	return true ;	242:2:6063:6074	1200156	1	True				
ANR	1200216	Identifier	true		1200156	0					
ANR	1200217	ExpressionStatement	dbg -> recoil_mode = rc_mode	246:1:6112:6138	1200156	2	True				
ANR	1200218	AssignmentExpression	dbg -> recoil_mode = rc_mode		1200156	0		=			
ANR	1200219	PtrMemberAccess	dbg -> recoil_mode		1200156	0					
ANR	1200220	Identifier	dbg		1200156	0					
ANR	1200221	Identifier	recoil_mode		1200156	1					
ANR	1200222	Identifier	rc_mode		1200156	1					
ANR	1200223	IfStatement	"if ( r_debug_step ( dbg , 1 ) != 1 )"		1200156	3					
ANR	1200224	Condition	"r_debug_step ( dbg , 1 ) != 1"	249:5:6219:6244	1200156	0	True				
ANR	1200225	EqualityExpression	"r_debug_step ( dbg , 1 ) != 1"		1200156	0		!=			
ANR	1200226	CallExpression	"r_debug_step ( dbg , 1 )"		1200156	0					
ANR	1200227	Callee	r_debug_step		1200156	0					
ANR	1200228	Identifier	r_debug_step		1200156	0					
ANR	1200229	ArgumentList	dbg		1200156	1					
ANR	1200230	Argument	dbg		1200156	0					
ANR	1200231	Identifier	dbg		1200156	0					
ANR	1200232	Argument	1		1200156	1					
ANR	1200233	PrimaryExpression	1		1200156	0					
ANR	1200234	PrimaryExpression	1		1200156	1					
ANR	1200235	CompoundStatement		29:33:843:843	1200156	1					
ANR	1200236	ReturnStatement	return false ;	250:2:6251:6263	1200156	0	True				
ANR	1200237	Identifier	false		1200156	0					
ANR	1200238	IfStatement	if ( ! dbg -> reason . bp_addr && dbg -> recoil_mode == R_DBG_RECOIL_STEP )		1200156	4					
ANR	1200239	Condition	! dbg -> reason . bp_addr && dbg -> recoil_mode == R_DBG_RECOIL_STEP	259:5:6579:6639	1200156	0	True				
ANR	1200240	AndExpression	! dbg -> reason . bp_addr && dbg -> recoil_mode == R_DBG_RECOIL_STEP		1200156	0		&&			
ANR	1200241	UnaryOperationExpression	! dbg -> reason . bp_addr		1200156	0					
ANR	1200242	UnaryOperator	!		1200156	0					
ANR	1200243	MemberAccess	dbg -> reason . bp_addr		1200156	1					
ANR	1200244	PtrMemberAccess	dbg -> reason		1200156	0					
ANR	1200245	Identifier	dbg		1200156	0					
ANR	1200246	Identifier	reason		1200156	1					
ANR	1200247	Identifier	bp_addr		1200156	1					
ANR	1200248	EqualityExpression	dbg -> recoil_mode == R_DBG_RECOIL_STEP		1200156	1		==			
ANR	1200249	PtrMemberAccess	dbg -> recoil_mode		1200156	0					
ANR	1200250	Identifier	dbg		1200156	0					
ANR	1200251	Identifier	recoil_mode		1200156	1					
ANR	1200252	Identifier	R_DBG_RECOIL_STEP		1200156	1					
ANR	1200253	CompoundStatement		39:68:1238:1238	1200156	1					
ANR	1200254	ReturnStatement	return true ;	260:2:6646:6657	1200156	0	True				
ANR	1200255	Identifier	true		1200156	0					
ANR	1200256	ReturnStatement	return r_debug_bps_enable ( dbg ) ;	263:1:6664:6695	1200156	5	True				
ANR	1200257	CallExpression	r_debug_bps_enable ( dbg )		1200156	0					
ANR	1200258	Callee	r_debug_bps_enable		1200156	0					
ANR	1200259	Identifier	r_debug_bps_enable		1200156	0					
ANR	1200260	ArgumentList	dbg		1200156	1					
ANR	1200261	Argument	dbg		1200156	0					
ANR	1200262	Identifier	dbg		1200156	0					
ANR	1200263	ReturnType	static int		1200156	1					
ANR	1200264	Identifier	r_debug_recoil		1200156	2					
ANR	1200265	ParameterList	"RDebug * dbg , RDebugRecoilMode rc_mode"		1200156	3					
ANR	1200266	Parameter	RDebug * dbg	221:26:5364:5374	1200156	0	True				
ANR	1200267	ParameterType	RDebug *		1200156	0					
ANR	1200268	Identifier	dbg		1200156	1					
ANR	1200269	Parameter	RDebugRecoilMode rc_mode	221:39:5377:5400	1200156	1	True				
ANR	1200270	ParameterType	RDebugRecoilMode		1200156	0					
ANR	1200271	Identifier	rc_mode		1200156	1					
ANR	1200272	CFGEntryNode	ENTRY		1200156		True				
ANR	1200273	CFGExitNode	EXIT		1200156		True				
ANR	1200274	Symbol	dbg -> reason		1200156						
ANR	1200275	Symbol	dbg -> bp		1200156						
ANR	1200276	Symbol	dbg		1200156						
ANR	1200277	Symbol	false		1200156						
ANR	1200278	Symbol	R_DBG_RECOIL_STEP		1200156						
ANR	1200279	Symbol	r_bp_restore_except		1200156						
ANR	1200280	Symbol	* dbg		1200156						
ANR	1200281	Symbol	r_debug_step		1200156						
ANR	1200282	Symbol	r_debug_bps_enable		1200156						
ANR	1200283	Symbol	dbg -> swstep		1200156						
ANR	1200284	Symbol	rc_mode		1200156						
ANR	1200285	Symbol	dbg -> reason . bp_addr		1200156						
ANR	1200286	Symbol	dbg -> recoil_mode		1200156						
ANR	1200287	Symbol	true		1200156						
ANR	1200288	Symbol	R_DBG_RECOIL_NONE		1200156						
ANR	1200289	Function	r_debug_bp_add	267:0:6748:8768							
ANR	1200290	FunctionDef	"r_debug_bp_add (RDebug * dbg , ut64 addr , int hw , bool watch , int rw , char * module , st64 m_delta)"		1200289	0					
ANR	1200291	CompoundStatement		267:118:6866:8768	1200289	0					
ANR	1200292	IdentifierDeclStatement	int bpsz = r_bp_size ( dbg -> bp ) ;	268:1:6869:6898	1200289	0	True				
ANR	1200293	IdentifierDecl	bpsz = r_bp_size ( dbg -> bp )		1200289	0					
ANR	1200294	IdentifierDeclType	int		1200289	0					
ANR	1200295	Identifier	bpsz		1200289	1					
ANR	1200296	AssignmentExpression	bpsz = r_bp_size ( dbg -> bp )		1200289	2		=			
ANR	1200297	Identifier	bpsz		1200289	0					
ANR	1200298	CallExpression	r_bp_size ( dbg -> bp )		1200289	1					
ANR	1200299	Callee	r_bp_size		1200289	0					
ANR	1200300	Identifier	r_bp_size		1200289	0					
ANR	1200301	ArgumentList	dbg -> bp		1200289	1					
ANR	1200302	Argument	dbg -> bp		1200289	0					
ANR	1200303	PtrMemberAccess	dbg -> bp		1200289	0					
ANR	1200304	Identifier	dbg		1200289	0					
ANR	1200305	Identifier	bp		1200289	1					
ANR	1200306	IdentifierDeclStatement	RBreakpointItem * bpi ;	269:1:6901:6921	1200289	1	True				
ANR	1200307	IdentifierDecl	* bpi		1200289	0					
ANR	1200308	IdentifierDeclType	RBreakpointItem *		1200289	0					
ANR	1200309	Identifier	bpi		1200289	1					
ANR	1200310	IdentifierDeclStatement	const char * module_name = module ;	270:1:6924:6956	1200289	2	True				
ANR	1200311	IdentifierDecl	* module_name = module		1200289	0					
ANR	1200312	IdentifierDeclType	const char *		1200289	0					
ANR	1200313	Identifier	module_name		1200289	1					
ANR	1200314	AssignmentExpression	* module_name = module		1200289	2		=			
ANR	1200315	Identifier	module		1200289	0					
ANR	1200316	Identifier	module		1200289	1					
ANR	1200317	IdentifierDeclStatement	RListIter * iter ;	271:1:6959:6974	1200289	3	True				
ANR	1200318	IdentifierDecl	* iter		1200289	0					
ANR	1200319	IdentifierDeclType	RListIter *		1200289	0					
ANR	1200320	Identifier	iter		1200289	1					
ANR	1200321	IdentifierDeclStatement	RDebugMap * map ;	272:1:6977:6991	1200289	4	True				
ANR	1200322	IdentifierDecl	* map		1200289	0					
ANR	1200323	IdentifierDeclType	RDebugMap *		1200289	0					
ANR	1200324	Identifier	map		1200289	1					
ANR	1200325	IfStatement	if ( ! addr && module )		1200289	5					
ANR	1200326	Condition	! addr && module	273:5:6998:7012	1200289	0	True				
ANR	1200327	AndExpression	! addr && module		1200289	0		&&			
ANR	1200328	UnaryOperationExpression	! addr		1200289	0					
ANR	1200329	UnaryOperator	!		1200289	0					
ANR	1200330	Identifier	addr		1200289	1					
ANR	1200331	Identifier	module		1200289	1					
ANR	1200332	CompoundStatement		9:2:189:197	1200289	1					
ANR	1200333	IdentifierDeclStatement	"bool detect_module , valid = false ;"	274:2:7019:7052	1200289	0	True				
ANR	1200334	IdentifierDecl	detect_module		1200289	0					
ANR	1200335	IdentifierDeclType	bool		1200289	0					
ANR	1200336	Identifier	detect_module		1200289	1					
ANR	1200337	IdentifierDecl	valid = false		1200289	1					
ANR	1200338	IdentifierDeclType	bool		1200289	0					
ANR	1200339	Identifier	valid		1200289	1					
ANR	1200340	AssignmentExpression	valid = false		1200289	2		=			
ANR	1200341	Identifier	false		1200289	0					
ANR	1200342	Identifier	false		1200289	1					
ANR	1200343	IdentifierDeclStatement	int perm ;	275:2:7056:7064	1200289	1	True				
ANR	1200344	IdentifierDecl	perm		1200289	0					
ANR	1200345	IdentifierDeclType	int		1200289	0					
ANR	1200346	Identifier	perm		1200289	1					
ANR	1200347	IfStatement	if ( m_delta )		1200289	2					
ANR	1200348	Condition	m_delta	277:6:7073:7079	1200289	0	True				
ANR	1200349	Identifier	m_delta		1200289	0					
ANR	1200350	CompoundStatement		13:3:246:286	1200289	1					
ANR	1200351	ExpressionStatement	detect_module = false	278:3:7087:7108	1200289	0	True				
ANR	1200352	AssignmentExpression	detect_module = false		1200289	0		=			
ANR	1200353	Identifier	detect_module		1200289	0					
ANR	1200354	Identifier	false		1200289	1					
ANR	1200355	IdentifierDeclStatement	RList * list = r_debug_modules_list ( dbg ) ;	279:3:7113:7153	1200289	1	True				
ANR	1200356	IdentifierDecl	* list = r_debug_modules_list ( dbg )		1200289	0					
ANR	1200357	IdentifierDeclType	RList *		1200289	0					
ANR	1200358	Identifier	list		1200289	1					
ANR	1200359	AssignmentExpression	* list = r_debug_modules_list ( dbg )		1200289	2		=			
ANR	1200360	Identifier	list		1200289	0					
ANR	1200361	CallExpression	r_debug_modules_list ( dbg )		1200289	1					
ANR	1200362	Callee	r_debug_modules_list		1200289	0					
ANR	1200363	Identifier	r_debug_modules_list		1200289	0					
ANR	1200364	ArgumentList	dbg		1200289	1					
ANR	1200365	Argument	dbg		1200289	0					
ANR	1200366	Identifier	dbg		1200289	0					
ANR	1200367	Statement	r_list_foreach	280:3:7158:7171	1200289	2	True				
ANR	1200368	Statement	(	280:18:7173:7173	1200289	3	True				
ANR	1200369	Statement	list	280:19:7174:7177	1200289	4	True				
ANR	1200370	Statement	","	280:23:7178:7178	1200289	5	True				
ANR	1200371	Statement	iter	280:25:7180:7183	1200289	6	True				
ANR	1200372	Statement	","	280:29:7184:7184	1200289	7	True				
ANR	1200373	Statement	map	280:31:7186:7188	1200289	8	True				
ANR	1200374	Statement	)	280:34:7189:7189	1200289	9	True				
ANR	1200375	CompoundStatement		14:36:324:324	1200289	10					
ANR	1200376	IfStatement	"if ( strstr ( map -> file , module ) )"		1200289	0					
ANR	1200377	Condition	"strstr ( map -> file , module )"	281:8:7201:7226	1200289	0	True				
ANR	1200378	CallExpression	"strstr ( map -> file , module )"		1200289	0					
ANR	1200379	Callee	strstr		1200289	0					
ANR	1200380	Identifier	strstr		1200289	0					
ANR	1200381	ArgumentList	map -> file		1200289	1					
ANR	1200382	Argument	map -> file		1200289	0					
ANR	1200383	PtrMemberAccess	map -> file		1200289	0					
ANR	1200384	Identifier	map		1200289	0					
ANR	1200385	Identifier	file		1200289	1					
ANR	1200386	Argument	module		1200289	1					
ANR	1200387	Identifier	module		1200289	0					
ANR	1200388	CompoundStatement		15:36:362:362	1200289	1					
ANR	1200389	ExpressionStatement	addr = map -> addr + m_delta	282:5:7236:7262	1200289	0	True				
ANR	1200390	AssignmentExpression	addr = map -> addr + m_delta		1200289	0		=			
ANR	1200391	Identifier	addr		1200289	0					
ANR	1200392	AdditiveExpression	map -> addr + m_delta		1200289	1		+			
ANR	1200393	PtrMemberAccess	map -> addr		1200289	0					
ANR	1200394	Identifier	map		1200289	0					
ANR	1200395	Identifier	addr		1200289	1					
ANR	1200396	Identifier	m_delta		1200289	1					
ANR	1200397	ExpressionStatement	module_name = map -> file	283:5:7269:7292	1200289	1	True				
ANR	1200398	AssignmentExpression	module_name = map -> file		1200289	0		=			
ANR	1200399	Identifier	module_name		1200289	0					
ANR	1200400	PtrMemberAccess	map -> file		1200289	1					
ANR	1200401	Identifier	map		1200289	0					
ANR	1200402	Identifier	file		1200289	1					
ANR	1200403	BreakStatement	break ;	284:5:7299:7304	1200289	2	True				
ANR	1200404	ExpressionStatement	r_list_free ( list )	287:3:7320:7338	1200289	11	True				
ANR	1200405	CallExpression	r_list_free ( list )		1200289	0					
ANR	1200406	Callee	r_list_free		1200289	0					
ANR	1200407	Identifier	r_list_free		1200289	0					
ANR	1200408	ArgumentList	list		1200289	1					
ANR	1200409	Argument	list		1200289	0					
ANR	1200410	Identifier	list		1200289	0					
ANR	1200411	ElseStatement	else		1200289	0					
ANR	1200412	CompoundStatement		22:9:482:482	1200289	0					
ANR	1200413	ExpressionStatement	"addr = ( ut64 ) r_num_math ( dbg -> num , module )"	290:3:7384:7426	1200289	0	True				
ANR	1200414	AssignmentExpression	"addr = ( ut64 ) r_num_math ( dbg -> num , module )"		1200289	0		=			
ANR	1200415	Identifier	addr		1200289	0					
ANR	1200416	CastExpression	"( ut64 ) r_num_math ( dbg -> num , module )"		1200289	1					
ANR	1200417	CastTarget	ut64		1200289	0					
ANR	1200418	CallExpression	"r_num_math ( dbg -> num , module )"		1200289	1					
ANR	1200419	Callee	r_num_math		1200289	0					
ANR	1200420	Identifier	r_num_math		1200289	0					
ANR	1200421	ArgumentList	dbg -> num		1200289	1					
ANR	1200422	Argument	dbg -> num		1200289	0					
ANR	1200423	PtrMemberAccess	dbg -> num		1200289	0					
ANR	1200424	Identifier	dbg		1200289	0					
ANR	1200425	Identifier	num		1200289	1					
ANR	1200426	Argument	module		1200289	1					
ANR	1200427	Identifier	module		1200289	0					
ANR	1200428	IfStatement	if ( ! addr )		1200289	1					
ANR	1200429	Condition	! addr	291:7:7435:7439	1200289	0	True				
ANR	1200430	UnaryOperationExpression	! addr		1200289	0					
ANR	1200431	UnaryOperator	!		1200289	0					
ANR	1200432	Identifier	addr		1200289	1					
ANR	1200433	CompoundStatement		25:14:575:575	1200289	1					
ANR	1200434	ReturnStatement	return NULL ;	292:4:7448:7459	1200289	0	True				
ANR	1200435	Identifier	NULL		1200289	0					
ANR	1200436	ExpressionStatement	detect_module = true	294:3:7469:7489	1200289	2	True				
ANR	1200437	AssignmentExpression	detect_module = true		1200289	0		=			
ANR	1200438	Identifier	detect_module		1200289	0					
ANR	1200439	Identifier	true		1200289	1					
ANR	1200440	ExpressionStatement	r_debug_map_sync ( dbg )	296:2:7497:7519	1200289	3	True				
ANR	1200441	CallExpression	r_debug_map_sync ( dbg )		1200289	0					
ANR	1200442	Callee	r_debug_map_sync		1200289	0					
ANR	1200443	Identifier	r_debug_map_sync		1200289	0					
ANR	1200444	ArgumentList	dbg		1200289	1					
ANR	1200445	Argument	dbg		1200289	0					
ANR	1200446	Identifier	dbg		1200289	0					
ANR	1200447	Statement	r_list_foreach	297:2:7523:7536	1200289	4	True				
ANR	1200448	Statement	(	297:17:7538:7538	1200289	5	True				
ANR	1200449	Statement	dbg	297:18:7539:7541	1200289	6	True				
ANR	1200450	Statement	->	297:21:7542:7543	1200289	7	True				
ANR	1200451	Statement	maps	297:23:7544:7547	1200289	8	True				
ANR	1200452	Statement	","	297:27:7548:7548	1200289	9	True				
ANR	1200453	Statement	iter	297:29:7550:7553	1200289	10	True				
ANR	1200454	Statement	","	297:33:7554:7554	1200289	11	True				
ANR	1200455	Statement	map	297:35:7556:7558	1200289	12	True				
ANR	1200456	Statement	)	297:38:7559:7559	1200289	13	True				
ANR	1200457	CompoundStatement		31:40:694:694	1200289	14					
ANR	1200458	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		1200289	0					
ANR	1200459	Condition	addr >= map -> addr && addr < map -> addr_end	298:7:7570:7610	1200289	0	True				
ANR	1200460	AndExpression	addr >= map -> addr && addr < map -> addr_end		1200289	0		&&			
ANR	1200461	RelationalExpression	addr >= map -> addr		1200289	0		>=			
ANR	1200462	Identifier	addr		1200289	0					
ANR	1200463	PtrMemberAccess	map -> addr		1200289	1					
ANR	1200464	Identifier	map		1200289	0					
ANR	1200465	Identifier	addr		1200289	1					
ANR	1200466	RelationalExpression	addr < map -> addr_end		1200289	1		<			
ANR	1200467	Identifier	addr		1200289	0					
ANR	1200468	PtrMemberAccess	map -> addr_end		1200289	1					
ANR	1200469	Identifier	map		1200289	0					
ANR	1200470	Identifier	addr_end		1200289	1					
ANR	1200471	CompoundStatement		32:50:746:746	1200289	1					
ANR	1200472	ExpressionStatement	valid = true	299:4:7619:7631	1200289	0	True				
ANR	1200473	AssignmentExpression	valid = true		1200289	0		=			
ANR	1200474	Identifier	valid		1200289	0					
ANR	1200475	Identifier	true		1200289	1					
ANR	1200476	IfStatement	if ( detect_module )		1200289	1					
ANR	1200477	Condition	detect_module	300:8:7641:7653	1200289	0	True				
ANR	1200478	Identifier	detect_module		1200289	0					
ANR	1200479	CompoundStatement		34:23:789:789	1200289	1					
ANR	1200480	ExpressionStatement	module_name = map -> file	301:5:7663:7686	1200289	0	True				
ANR	1200481	AssignmentExpression	module_name = map -> file		1200289	0		=			
ANR	1200482	Identifier	module_name		1200289	0					
ANR	1200483	PtrMemberAccess	map -> file		1200289	1					
ANR	1200484	Identifier	map		1200289	0					
ANR	1200485	Identifier	file		1200289	1					
ANR	1200486	ExpressionStatement	m_delta = addr - map -> addr	302:5:7693:7719	1200289	1	True				
ANR	1200487	AssignmentExpression	m_delta = addr - map -> addr		1200289	0		=			
ANR	1200488	Identifier	m_delta		1200289	0					
ANR	1200489	AdditiveExpression	addr - map -> addr		1200289	1		-			
ANR	1200490	Identifier	addr		1200289	0					
ANR	1200491	PtrMemberAccess	map -> addr		1200289	1					
ANR	1200492	Identifier	map		1200289	0					
ANR	1200493	Identifier	addr		1200289	1					
ANR	1200494	ExpressionStatement	perm = ( ( map -> perm & 1 ) << 2 ) | ( map -> perm & 2 ) | ( ( map -> perm & 4 ) >> 2 )	304:4:7731:7803	1200289	2	True				
ANR	1200495	AssignmentExpression	perm = ( ( map -> perm & 1 ) << 2 ) | ( map -> perm & 2 ) | ( ( map -> perm & 4 ) >> 2 )		1200289	0		=			
ANR	1200496	Identifier	perm		1200289	0					
ANR	1200497	InclusiveOrExpression	( ( map -> perm & 1 ) << 2 ) | ( map -> perm & 2 ) | ( ( map -> perm & 4 ) >> 2 )		1200289	1		|			
ANR	1200498	ShiftExpression	( map -> perm & 1 ) << 2		1200289	0		<<			
ANR	1200499	BitAndExpression	map -> perm & 1		1200289	0		&			
ANR	1200500	PtrMemberAccess	map -> perm		1200289	0					
ANR	1200501	Identifier	map		1200289	0					
ANR	1200502	Identifier	perm		1200289	1					
ANR	1200503	PrimaryExpression	1		1200289	1					
ANR	1200504	PrimaryExpression	2		1200289	1					
ANR	1200505	InclusiveOrExpression	( map -> perm & 2 ) | ( ( map -> perm & 4 ) >> 2 )		1200289	1		|			
ANR	1200506	BitAndExpression	map -> perm & 2		1200289	0		&			
ANR	1200507	PtrMemberAccess	map -> perm		1200289	0					
ANR	1200508	Identifier	map		1200289	0					
ANR	1200509	Identifier	perm		1200289	1					
ANR	1200510	PrimaryExpression	2		1200289	1					
ANR	1200511	ShiftExpression	( map -> perm & 4 ) >> 2		1200289	1		>>			
ANR	1200512	BitAndExpression	map -> perm & 4		1200289	0		&			
ANR	1200513	PtrMemberAccess	map -> perm		1200289	0					
ANR	1200514	Identifier	map		1200289	0					
ANR	1200515	Identifier	perm		1200289	1					
ANR	1200516	PrimaryExpression	4		1200289	1					
ANR	1200517	PrimaryExpression	2		1200289	1					
ANR	1200518	IfStatement	if ( ! ( perm & R_BP_PROT_EXEC ) )		1200289	3					
ANR	1200519	Condition	! ( perm & R_BP_PROT_EXEC )	305:8:7813:7836	1200289	0	True				
ANR	1200520	UnaryOperationExpression	! ( perm & R_BP_PROT_EXEC )		1200289	0					
ANR	1200521	UnaryOperator	!		1200289	0					
ANR	1200522	BitAndExpression	perm & R_BP_PROT_EXEC		1200289	1		&			
ANR	1200523	Identifier	perm		1200289	0					
ANR	1200524	Identifier	R_BP_PROT_EXEC		1200289	1					
ANR	1200525	CompoundStatement		39:34:972:972	1200289	1					
ANR	1200526	ExpressionStatement	"eprintf ( ""WARNING: setting bp within mapped memory without exec perm\\n"" )"	306:5:7846:7918	1200289	0	True				
ANR	1200527	CallExpression	"eprintf ( ""WARNING: setting bp within mapped memory without exec perm\\n"" )"		1200289	0					
ANR	1200528	Callee	eprintf		1200289	0					
ANR	1200529	Identifier	eprintf		1200289	0					
ANR	1200530	ArgumentList	"""WARNING: setting bp within mapped memory without exec perm\\n"""		1200289	1					
ANR	1200531	Argument	"""WARNING: setting bp within mapped memory without exec perm\\n"""		1200289	0					
ANR	1200532	PrimaryExpression	"""WARNING: setting bp within mapped memory without exec perm\\n"""		1200289	0					
ANR	1200533	BreakStatement	break ;	308:4:7930:7935	1200289	4	True				
ANR	1200534	IfStatement	if ( ! valid )		1200289	15					
ANR	1200535	Condition	! valid	311:6:7952:7957	1200289	0	True				
ANR	1200536	UnaryOperationExpression	! valid		1200289	0					
ANR	1200537	UnaryOperator	!		1200289	0					
ANR	1200538	Identifier	valid		1200289	1					
ANR	1200539	CompoundStatement		45:14:1093:1093	1200289	1					
ANR	1200540	ExpressionStatement	"eprintf ( ""WARNING: module's base addr + delta is not a valid address\\n"" )"	312:3:7965:8037	1200289	0	True				
ANR	1200541	CallExpression	"eprintf ( ""WARNING: module's base addr + delta is not a valid address\\n"" )"		1200289	0					
ANR	1200542	Callee	eprintf		1200289	0					
ANR	1200543	Identifier	eprintf		1200289	0					
ANR	1200544	ArgumentList	"""WARNING: module's base addr + delta is not a valid address\\n"""		1200289	1					
ANR	1200545	Argument	"""WARNING: module's base addr + delta is not a valid address\\n"""		1200289	0					
ANR	1200546	PrimaryExpression	"""WARNING: module's base addr + delta is not a valid address\\n"""		1200289	0					
ANR	1200547	ReturnStatement	return NULL ;	313:3:8042:8053	1200289	1	True				
ANR	1200548	Identifier	NULL		1200289	0					
ANR	1200549	IfStatement	if ( ! module )		1200289	6					
ANR	1200550	Condition	! module	316:5:8067:8073	1200289	0	True				
ANR	1200551	UnaryOperationExpression	! module		1200289	0					
ANR	1200552	UnaryOperator	!		1200289	0					
ANR	1200553	Identifier	module		1200289	1					
ANR	1200554	CompoundStatement		50:14:1209:1209	1200289	1					
ANR	1200555	ExpressionStatement	r_debug_map_sync ( dbg )	318:2:8151:8173	1200289	0	True				
ANR	1200556	CallExpression	r_debug_map_sync ( dbg )		1200289	0					
ANR	1200557	Callee	r_debug_map_sync		1200289	0					
ANR	1200558	Identifier	r_debug_map_sync		1200289	0					
ANR	1200559	ArgumentList	dbg		1200289	1					
ANR	1200560	Argument	dbg		1200289	0					
ANR	1200561	Identifier	dbg		1200289	0					
ANR	1200562	Statement	r_list_foreach	319:2:8177:8190	1200289	1	True				
ANR	1200563	Statement	(	319:17:8192:8192	1200289	2	True				
ANR	1200564	Statement	dbg	319:18:8193:8195	1200289	3	True				
ANR	1200565	Statement	->	319:21:8196:8197	1200289	4	True				
ANR	1200566	Statement	maps	319:23:8198:8201	1200289	5	True				
ANR	1200567	Statement	","	319:27:8202:8202	1200289	6	True				
ANR	1200568	Statement	iter	319:29:8204:8207	1200289	7	True				
ANR	1200569	Statement	","	319:33:8208:8208	1200289	8	True				
ANR	1200570	Statement	map	319:35:8210:8212	1200289	9	True				
ANR	1200571	Statement	)	319:38:8213:8213	1200289	10	True				
ANR	1200572	CompoundStatement		53:40:1348:1348	1200289	11					
ANR	1200573	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		1200289	0					
ANR	1200574	Condition	addr >= map -> addr && addr < map -> addr_end	320:7:8224:8264	1200289	0	True				
ANR	1200575	AndExpression	addr >= map -> addr && addr < map -> addr_end		1200289	0		&&			
ANR	1200576	RelationalExpression	addr >= map -> addr		1200289	0		>=			
ANR	1200577	Identifier	addr		1200289	0					
ANR	1200578	PtrMemberAccess	map -> addr		1200289	1					
ANR	1200579	Identifier	map		1200289	0					
ANR	1200580	Identifier	addr		1200289	1					
ANR	1200581	RelationalExpression	addr < map -> addr_end		1200289	1		<			
ANR	1200582	Identifier	addr		1200289	0					
ANR	1200583	PtrMemberAccess	map -> addr_end		1200289	1					
ANR	1200584	Identifier	map		1200289	0					
ANR	1200585	Identifier	addr_end		1200289	1					
ANR	1200586	CompoundStatement		54:50:1400:1400	1200289	1					
ANR	1200587	ExpressionStatement	module_name = map -> file	321:4:8273:8296	1200289	0	True				
ANR	1200588	AssignmentExpression	module_name = map -> file		1200289	0		=			
ANR	1200589	Identifier	module_name		1200289	0					
ANR	1200590	PtrMemberAccess	map -> file		1200289	1					
ANR	1200591	Identifier	map		1200289	0					
ANR	1200592	Identifier	file		1200289	1					
ANR	1200593	ExpressionStatement	m_delta = addr - map -> addr	322:4:8302:8328	1200289	1	True				
ANR	1200594	AssignmentExpression	m_delta = addr - map -> addr		1200289	0		=			
ANR	1200595	Identifier	m_delta		1200289	0					
ANR	1200596	AdditiveExpression	addr - map -> addr		1200289	1		-			
ANR	1200597	Identifier	addr		1200289	0					
ANR	1200598	PtrMemberAccess	map -> addr		1200289	1					
ANR	1200599	Identifier	map		1200289	0					
ANR	1200600	Identifier	addr		1200289	1					
ANR	1200601	BreakStatement	break ;	323:4:8334:8339	1200289	2	True				
ANR	1200602	IfStatement	if ( watch )		1200289	7					
ANR	1200603	Condition	watch	327:5:8358:8362	1200289	0	True				
ANR	1200604	Identifier	watch		1200289	0					
ANR	1200605	CompoundStatement		61:12:1498:1498	1200289	1					
ANR	1200606	ExpressionStatement	hw = 1	328:2:8369:8375	1200289	0	True				
ANR	1200607	AssignmentExpression	hw = 1		1200289	0		=			
ANR	1200608	Identifier	hw		1200289	0					
ANR	1200609	PrimaryExpression	1		1200289	1					
ANR	1200610	ExpressionStatement	"bpi = r_bp_watch_add ( dbg -> bp , addr , bpsz , hw , rw )"	329:2:8385:8435	1200289	1	True				
ANR	1200611	AssignmentExpression	"bpi = r_bp_watch_add ( dbg -> bp , addr , bpsz , hw , rw )"		1200289	0		=			
ANR	1200612	Identifier	bpi		1200289	0					
ANR	1200613	CallExpression	"r_bp_watch_add ( dbg -> bp , addr , bpsz , hw , rw )"		1200289	1					
ANR	1200614	Callee	r_bp_watch_add		1200289	0					
ANR	1200615	Identifier	r_bp_watch_add		1200289	0					
ANR	1200616	ArgumentList	dbg -> bp		1200289	1					
ANR	1200617	Argument	dbg -> bp		1200289	0					
ANR	1200618	PtrMemberAccess	dbg -> bp		1200289	0					
ANR	1200619	Identifier	dbg		1200289	0					
ANR	1200620	Identifier	bp		1200289	1					
ANR	1200621	Argument	addr		1200289	1					
ANR	1200622	Identifier	addr		1200289	0					
ANR	1200623	Argument	bpsz		1200289	2					
ANR	1200624	Identifier	bpsz		1200289	0					
ANR	1200625	Argument	hw		1200289	3					
ANR	1200626	Identifier	hw		1200289	0					
ANR	1200627	Argument	rw		1200289	4					
ANR	1200628	Identifier	rw		1200289	0					
ANR	1200629	ElseStatement	else		1200289	0					
ANR	1200630	CompoundStatement		64:8:1578:1578	1200289	0					
ANR	1200631	ExpressionStatement	"bpi = hw ? r_bp_add_hw ( dbg -> bp , addr , bpsz , R_BP_PROT_EXEC ) : r_bp_add_sw ( dbg -> bp , addr , bpsz , R_BP_PROT_EXEC )"	331:2:8449:8567	1200289	0	True				
ANR	1200632	AssignmentExpression	"bpi = hw ? r_bp_add_hw ( dbg -> bp , addr , bpsz , R_BP_PROT_EXEC ) : r_bp_add_sw ( dbg -> bp , addr , bpsz , R_BP_PROT_EXEC )"		1200289	0		=			
ANR	1200633	Identifier	bpi		1200289	0					
ANR	1200634	ConditionalExpression	"hw ? r_bp_add_hw ( dbg -> bp , addr , bpsz , R_BP_PROT_EXEC ) : r_bp_add_sw ( dbg -> bp , addr , bpsz , R_BP_PROT_EXEC )"		1200289	1					
ANR	1200635	Condition	hw		1200289	0					
ANR	1200636	Identifier	hw		1200289	0					
ANR	1200637	CallExpression	"r_bp_add_hw ( dbg -> bp , addr , bpsz , R_BP_PROT_EXEC )"		1200289	1					
ANR	1200638	Callee	r_bp_add_hw		1200289	0					
ANR	1200639	Identifier	r_bp_add_hw		1200289	0					
ANR	1200640	ArgumentList	dbg -> bp		1200289	1					
ANR	1200641	Argument	dbg -> bp		1200289	0					
ANR	1200642	PtrMemberAccess	dbg -> bp		1200289	0					
ANR	1200643	Identifier	dbg		1200289	0					
ANR	1200644	Identifier	bp		1200289	1					
ANR	1200645	Argument	addr		1200289	1					
ANR	1200646	Identifier	addr		1200289	0					
ANR	1200647	Argument	bpsz		1200289	2					
ANR	1200648	Identifier	bpsz		1200289	0					
ANR	1200649	Argument	R_BP_PROT_EXEC		1200289	3					
ANR	1200650	Identifier	R_BP_PROT_EXEC		1200289	0					
ANR	1200651	CallExpression	"r_bp_add_sw ( dbg -> bp , addr , bpsz , R_BP_PROT_EXEC )"		1200289	2					
ANR	1200652	Callee	r_bp_add_sw		1200289	0					
ANR	1200653	Identifier	r_bp_add_sw		1200289	0					
ANR	1200654	ArgumentList	dbg -> bp		1200289	1					
ANR	1200655	Argument	dbg -> bp		1200289	0					
ANR	1200656	PtrMemberAccess	dbg -> bp		1200289	0					
ANR	1200657	Identifier	dbg		1200289	0					
ANR	1200658	Identifier	bp		1200289	1					
ANR	1200659	Argument	addr		1200289	1					
ANR	1200660	Identifier	addr		1200289	0					
ANR	1200661	Argument	bpsz		1200289	2					
ANR	1200662	Identifier	bpsz		1200289	0					
ANR	1200663	Argument	R_BP_PROT_EXEC		1200289	3					
ANR	1200664	Identifier	R_BP_PROT_EXEC		1200289	0					
ANR	1200665	IfStatement	if ( bpi )		1200289	8					
ANR	1200666	Condition	bpi	335:5:8577:8579	1200289	0	True				
ANR	1200667	Identifier	bpi		1200289	0					
ANR	1200668	CompoundStatement		69:10:1715:1715	1200289	1					
ANR	1200669	IfStatement	if ( module_name )		1200289	0					
ANR	1200670	Condition	module_name	336:6:8590:8600	1200289	0	True				
ANR	1200671	Identifier	module_name		1200289	0					
ANR	1200672	CompoundStatement		70:19:1736:1736	1200289	1					
ANR	1200673	ExpressionStatement	bpi -> module_name = strdup ( module_name )	337:3:8608:8647	1200289	0	True				
ANR	1200674	AssignmentExpression	bpi -> module_name = strdup ( module_name )		1200289	0		=			
ANR	1200675	PtrMemberAccess	bpi -> module_name		1200289	0					
ANR	1200676	Identifier	bpi		1200289	0					
ANR	1200677	Identifier	module_name		1200289	1					
ANR	1200678	CallExpression	strdup ( module_name )		1200289	1					
ANR	1200679	Callee	strdup		1200289	0					
ANR	1200680	Identifier	strdup		1200289	0					
ANR	1200681	ArgumentList	module_name		1200289	1					
ANR	1200682	Argument	module_name		1200289	0					
ANR	1200683	Identifier	module_name		1200289	0					
ANR	1200684	Statement	bpi	338:3:8652:8654	1200289	1	True				
ANR	1200685	Statement	->	338:6:8655:8656	1200289	2	True				
ANR	1200686	Statement	name	338:8:8657:8660	1200289	3	True				
ANR	1200687	Statement	=	338:13:8662:8662	1200289	4	True				
ANR	1200688	Statement	r_str_newf	338:15:8664:8673	1200289	5	True				
ANR	1200689	Statement	(	338:26:8675:8675	1200289	6	True				
ANR	1200690	Statement	"""%s+0x%"""	338:27:8676:8683	1200289	7	True				
ANR	1200691	Statement	PFMT64x	338:36:8685:8691	1200289	8	True				
ANR	1200692	Statement	","	338:43:8692:8692	1200289	9	True				
ANR	1200693	Statement	module_name	338:45:8694:8704	1200289	10	True				
ANR	1200694	Statement	","	338:56:8705:8705	1200289	11	True				
ANR	1200695	Statement	m_delta	338:58:8707:8713	1200289	12	True				
ANR	1200696	Statement	)	338:65:8714:8714	1200289	13	True				
ANR	1200697	ExpressionStatement		338:66:8715:8715	1200289	14	True				
ANR	1200698	ExpressionStatement	bpi -> module_delta = m_delta	340:2:8723:8750	1200289	1	True				
ANR	1200699	AssignmentExpression	bpi -> module_delta = m_delta		1200289	0		=			
ANR	1200700	PtrMemberAccess	bpi -> module_delta		1200289	0					
ANR	1200701	Identifier	bpi		1200289	0					
ANR	1200702	Identifier	module_delta		1200289	1					
ANR	1200703	Identifier	m_delta		1200289	1					
ANR	1200704	ReturnStatement	return bpi ;	342:1:8756:8766	1200289	9	True				
ANR	1200705	Identifier	bpi		1200289	0					
ANR	1200706	ReturnType	R_API RBreakpointItem *		1200289	1					
ANR	1200707	Identifier	r_debug_bp_add		1200289	2					
ANR	1200708	ParameterList	"RDebug * dbg , ut64 addr , int hw , bool watch , int rw , char * module , st64 m_delta"		1200289	3					
ANR	1200709	Parameter	RDebug * dbg	267:38:6786:6796	1200289	0	True				
ANR	1200710	ParameterType	RDebug *		1200289	0					
ANR	1200711	Identifier	dbg		1200289	1					
ANR	1200712	Parameter	ut64 addr	267:51:6799:6807	1200289	1	True				
ANR	1200713	ParameterType	ut64		1200289	0					
ANR	1200714	Identifier	addr		1200289	1					
ANR	1200715	Parameter	int hw	267:62:6810:6815	1200289	2	True				
ANR	1200716	ParameterType	int		1200289	0					
ANR	1200717	Identifier	hw		1200289	1					
ANR	1200718	Parameter	bool watch	267:70:6818:6827	1200289	3	True				
ANR	1200719	ParameterType	bool		1200289	0					
ANR	1200720	Identifier	watch		1200289	1					
ANR	1200721	Parameter	int rw	267:82:6830:6835	1200289	4	True				
ANR	1200722	ParameterType	int		1200289	0					
ANR	1200723	Identifier	rw		1200289	1					
ANR	1200724	Parameter	char * module	267:90:6838:6849	1200289	5	True				
ANR	1200725	ParameterType	char *		1200289	0					
ANR	1200726	Identifier	module		1200289	1					
ANR	1200727	Parameter	st64 m_delta	267:104:6852:6863	1200289	6	True				
ANR	1200728	ParameterType	st64		1200289	0					
ANR	1200729	Identifier	m_delta		1200289	1					
ANR	1200730	CFGEntryNode	ENTRY		1200289		True				
ANR	1200731	CFGExitNode	EXIT		1200289		True				
ANR	1200732	CFGErrorNode	ERROR		1200289		True				
ANR	1200733	Symbol	map -> addr		1200289						
ANR	1200734	Symbol	perm		1200289						
ANR	1200735	Symbol	rw		1200289						
ANR	1200736	Symbol	r_bp_add_hw		1200289						
ANR	1200737	Symbol	map -> file		1200289						
ANR	1200738	Symbol	* map		1200289						
ANR	1200739	Symbol	hw		1200289						
ANR	1200740	Symbol	r_num_math		1200289						
ANR	1200741	Symbol	valid		1200289						
ANR	1200742	Symbol	detect_module		1200289						
ANR	1200743	Symbol	r_bp_watch_add		1200289						
ANR	1200744	Symbol	bpi		1200289						
ANR	1200745	Symbol	bpsz		1200289						
ANR	1200746	Symbol	addr		1200289						
ANR	1200747	Symbol	map		1200289						
ANR	1200748	Symbol	NULL		1200289						
ANR	1200749	Symbol	dbg -> bp		1200289						
ANR	1200750	Symbol	r_debug_modules_list		1200289						
ANR	1200751	Symbol	module		1200289						
ANR	1200752	Symbol	dbg		1200289						
ANR	1200753	Symbol	false		1200289						
ANR	1200754	Symbol	iter		1200289						
ANR	1200755	Symbol	dbg -> num		1200289						
ANR	1200756	Symbol	bpi -> module_name		1200289						
ANR	1200757	Symbol	* dbg		1200289						
ANR	1200758	Symbol	list		1200289						
ANR	1200759	Symbol	bpi -> module_delta		1200289						
ANR	1200760	Symbol	m_delta		1200289						
ANR	1200761	Symbol	r_bp_add_sw		1200289						
ANR	1200762	Symbol	R_BP_PROT_EXEC		1200289						
ANR	1200763	Symbol	watch		1200289						
ANR	1200764	Symbol	strstr		1200289						
ANR	1200765	Symbol	true		1200289						
ANR	1200766	Symbol	map -> addr_end		1200289						
ANR	1200767	Symbol	* bpi		1200289						
ANR	1200768	Symbol	module_name		1200289						
ANR	1200769	Symbol	strdup		1200289						
ANR	1200770	Symbol	map -> perm		1200289						
ANR	1200771	Symbol	r_bp_size		1200289						
ANR	1200772	Function	r_debug_str_callback	345:0:8771:8939							
ANR	1200773	FunctionDef	"r_debug_str_callback (RNum * userptr , ut64 off , int * ok)"		1200772	0					
ANR	1200774	CompoundStatement		345:74:8845:8939	1200772	0					
ANR	1200775	ExpressionStatement	"eprintf ( ""STR CALLBACK WTF WTF WTF\\n"" )"	347:1:8885:8923	1200772	0	True				
ANR	1200776	CallExpression	"eprintf ( ""STR CALLBACK WTF WTF WTF\\n"" )"		1200772	0					
ANR	1200777	Callee	eprintf		1200772	0					
ANR	1200778	Identifier	eprintf		1200772	0					
ANR	1200779	ArgumentList	"""STR CALLBACK WTF WTF WTF\\n"""		1200772	1					
ANR	1200780	Argument	"""STR CALLBACK WTF WTF WTF\\n"""		1200772	0					
ANR	1200781	PrimaryExpression	"""STR CALLBACK WTF WTF WTF\\n"""		1200772	0					
ANR	1200782	ReturnStatement	return NULL ;	348:1:8926:8937	1200772	1	True				
ANR	1200783	Identifier	NULL		1200772	0					
ANR	1200784	ReturnType	static const char *		1200772	1					
ANR	1200785	Identifier	r_debug_str_callback		1200772	2					
ANR	1200786	ParameterList	"RNum * userptr , ut64 off , int * ok"		1200772	3					
ANR	1200787	Parameter	RNum * userptr	345:40:8811:8823	1200772	0	True				
ANR	1200788	ParameterType	RNum *		1200772	0					
ANR	1200789	Identifier	userptr		1200772	1					
ANR	1200790	Parameter	ut64 off	345:55:8826:8833	1200772	1	True				
ANR	1200791	ParameterType	ut64		1200772	0					
ANR	1200792	Identifier	off		1200772	1					
ANR	1200793	Parameter	int * ok	345:65:8836:8842	1200772	2	True				
ANR	1200794	ParameterType	int *		1200772	0					
ANR	1200795	Identifier	ok		1200772	1					
ANR	1200796	CFGEntryNode	ENTRY		1200772		True				
ANR	1200797	CFGExitNode	EXIT		1200772		True				
ANR	1200798	Symbol	NULL		1200772						
ANR	1200799	Symbol	userptr		1200772						
ANR	1200800	Symbol	ok		1200772						
ANR	1200801	Symbol	off		1200772						
ANR	1200802	Function	r_debug_new	351:0:8942:10260							
ANR	1200803	FunctionDef	r_debug_new (int hard)		1200802	0					
ANR	1200804	CompoundStatement		351:36:8978:10260	1200802	0					
ANR	1200805	IdentifierDeclStatement	RDebug * dbg = R_NEW0 ( RDebug ) ;	352:1:8981:9010	1200802	0	True				
ANR	1200806	IdentifierDecl	* dbg = R_NEW0 ( RDebug )		1200802	0					
ANR	1200807	IdentifierDeclType	RDebug *		1200802	0					
ANR	1200808	Identifier	dbg		1200802	1					
ANR	1200809	AssignmentExpression	* dbg = R_NEW0 ( RDebug )		1200802	2		=			
ANR	1200810	Identifier	dbg		1200802	0					
ANR	1200811	CallExpression	R_NEW0 ( RDebug )		1200802	1					
ANR	1200812	Callee	R_NEW0		1200802	0					
ANR	1200813	Identifier	R_NEW0		1200802	0					
ANR	1200814	ArgumentList	RDebug		1200802	1					
ANR	1200815	Argument	RDebug		1200802	0					
ANR	1200816	Identifier	RDebug		1200802	0					
ANR	1200817	IfStatement	if ( ! dbg )		1200802	1					
ANR	1200818	Condition	! dbg	353:5:9017:9020	1200802	0	True				
ANR	1200819	UnaryOperationExpression	! dbg		1200802	0					
ANR	1200820	UnaryOperator	!		1200802	0					
ANR	1200821	Identifier	dbg		1200802	1					
ANR	1200822	CompoundStatement		3:11:44:44	1200802	1					
ANR	1200823	ReturnStatement	return NULL ;	354:2:9027:9038	1200802	0	True				
ANR	1200824	Identifier	NULL		1200802	0					
ANR	1200825	ExpressionStatement	dbg -> arch = strdup ( R_SYS_ARCH )	357:1:9059:9090	1200802	2	True				
ANR	1200826	AssignmentExpression	dbg -> arch = strdup ( R_SYS_ARCH )		1200802	0		=			
ANR	1200827	PtrMemberAccess	dbg -> arch		1200802	0					
ANR	1200828	Identifier	dbg		1200802	0					
ANR	1200829	Identifier	arch		1200802	1					
ANR	1200830	CallExpression	strdup ( R_SYS_ARCH )		1200802	1					
ANR	1200831	Callee	strdup		1200802	0					
ANR	1200832	Identifier	strdup		1200802	0					
ANR	1200833	ArgumentList	R_SYS_ARCH		1200802	1					
ANR	1200834	Argument	R_SYS_ARCH		1200802	0					
ANR	1200835	Identifier	R_SYS_ARCH		1200802	0					
ANR	1200836	ExpressionStatement	dbg -> bits = R_SYS_BITS	358:1:9093:9115	1200802	3	True				
ANR	1200837	AssignmentExpression	dbg -> bits = R_SYS_BITS		1200802	0		=			
ANR	1200838	PtrMemberAccess	dbg -> bits		1200802	0					
ANR	1200839	Identifier	dbg		1200802	0					
ANR	1200840	Identifier	bits		1200802	1					
ANR	1200841	Identifier	R_SYS_BITS		1200802	1					
ANR	1200842	ExpressionStatement	dbg -> trace_forks = 1	359:1:9118:9138	1200802	4	True				
ANR	1200843	AssignmentExpression	dbg -> trace_forks = 1		1200802	0		=			
ANR	1200844	PtrMemberAccess	dbg -> trace_forks		1200802	0					
ANR	1200845	Identifier	dbg		1200802	0					
ANR	1200846	Identifier	trace_forks		1200802	1					
ANR	1200847	PrimaryExpression	1		1200802	1					
ANR	1200848	ExpressionStatement	dbg -> forked_pid = - 1	360:1:9141:9161	1200802	5	True				
ANR	1200849	AssignmentExpression	dbg -> forked_pid = - 1		1200802	0		=			
ANR	1200850	PtrMemberAccess	dbg -> forked_pid		1200802	0					
ANR	1200851	Identifier	dbg		1200802	0					
ANR	1200852	Identifier	forked_pid		1200802	1					
ANR	1200853	UnaryOperationExpression	- 1		1200802	1					
ANR	1200854	UnaryOperator	-		1200802	0					
ANR	1200855	PrimaryExpression	1		1200802	1					
ANR	1200856	ExpressionStatement	dbg -> main_pid = - 1	361:1:9164:9182	1200802	6	True				
ANR	1200857	AssignmentExpression	dbg -> main_pid = - 1		1200802	0		=			
ANR	1200858	PtrMemberAccess	dbg -> main_pid		1200802	0					
ANR	1200859	Identifier	dbg		1200802	0					
ANR	1200860	Identifier	main_pid		1200802	1					
ANR	1200861	UnaryOperationExpression	- 1		1200802	1					
ANR	1200862	UnaryOperator	-		1200802	0					
ANR	1200863	PrimaryExpression	1		1200802	1					
ANR	1200864	ExpressionStatement	dbg -> n_threads = 0	362:1:9185:9203	1200802	7	True				
ANR	1200865	AssignmentExpression	dbg -> n_threads = 0		1200802	0		=			
ANR	1200866	PtrMemberAccess	dbg -> n_threads		1200802	0					
ANR	1200867	Identifier	dbg		1200802	0					
ANR	1200868	Identifier	n_threads		1200802	1					
ANR	1200869	PrimaryExpression	0		1200802	1					
ANR	1200870	ExpressionStatement	dbg -> trace_clone = 0	363:1:9206:9226	1200802	8	True				
ANR	1200871	AssignmentExpression	dbg -> trace_clone = 0		1200802	0		=			
ANR	1200872	PtrMemberAccess	dbg -> trace_clone		1200802	0					
ANR	1200873	Identifier	dbg		1200802	0					
ANR	1200874	Identifier	trace_clone		1200802	1					
ANR	1200875	PrimaryExpression	0		1200802	1					
ANR	1200876	ExpressionStatement	dbg -> egg = r_egg_new ( )	364:1:9229:9252	1200802	9	True				
ANR	1200877	AssignmentExpression	dbg -> egg = r_egg_new ( )		1200802	0		=			
ANR	1200878	PtrMemberAccess	dbg -> egg		1200802	0					
ANR	1200879	Identifier	dbg		1200802	0					
ANR	1200880	Identifier	egg		1200802	1					
ANR	1200881	CallExpression	r_egg_new ( )		1200802	1					
ANR	1200882	Callee	r_egg_new		1200802	0					
ANR	1200883	Identifier	r_egg_new		1200802	0					
ANR	1200884	ArgumentList			1200802	1					
ANR	1200885	ExpressionStatement	"r_egg_setup ( dbg -> egg , R_SYS_ARCH , R_SYS_BITS , R_SYS_ENDIAN , R_SYS_OS )"	365:1:9255:9325	1200802	10	True				
ANR	1200886	CallExpression	"r_egg_setup ( dbg -> egg , R_SYS_ARCH , R_SYS_BITS , R_SYS_ENDIAN , R_SYS_OS )"		1200802	0					
ANR	1200887	Callee	r_egg_setup		1200802	0					
ANR	1200888	Identifier	r_egg_setup		1200802	0					
ANR	1200889	ArgumentList	dbg -> egg		1200802	1					
ANR	1200890	Argument	dbg -> egg		1200802	0					
ANR	1200891	PtrMemberAccess	dbg -> egg		1200802	0					
ANR	1200892	Identifier	dbg		1200802	0					
ANR	1200893	Identifier	egg		1200802	1					
ANR	1200894	Argument	R_SYS_ARCH		1200802	1					
ANR	1200895	Identifier	R_SYS_ARCH		1200802	0					
ANR	1200896	Argument	R_SYS_BITS		1200802	2					
ANR	1200897	Identifier	R_SYS_BITS		1200802	0					
ANR	1200898	Argument	R_SYS_ENDIAN		1200802	3					
ANR	1200899	Identifier	R_SYS_ENDIAN		1200802	0					
ANR	1200900	Argument	R_SYS_OS		1200802	4					
ANR	1200901	Identifier	R_SYS_OS		1200802	0					
ANR	1200902	ExpressionStatement	dbg -> trace_aftersyscall = true	366:1:9328:9358	1200802	11	True				
ANR	1200903	AssignmentExpression	dbg -> trace_aftersyscall = true		1200802	0		=			
ANR	1200904	PtrMemberAccess	dbg -> trace_aftersyscall		1200802	0					
ANR	1200905	Identifier	dbg		1200802	0					
ANR	1200906	Identifier	trace_aftersyscall		1200802	1					
ANR	1200907	Identifier	true		1200802	1					
ANR	1200908	ExpressionStatement	dbg -> follow_child = false	367:1:9361:9386	1200802	12	True				
ANR	1200909	AssignmentExpression	dbg -> follow_child = false		1200802	0		=			
ANR	1200910	PtrMemberAccess	dbg -> follow_child		1200802	0					
ANR	1200911	Identifier	dbg		1200802	0					
ANR	1200912	Identifier	follow_child		1200802	1					
ANR	1200913	Identifier	false		1200802	1					
ANR	1200914	ExpressionStatement	R_FREE ( dbg -> btalgo )	368:1:9389:9409	1200802	13	True				
ANR	1200915	CallExpression	R_FREE ( dbg -> btalgo )		1200802	0					
ANR	1200916	Callee	R_FREE		1200802	0					
ANR	1200917	Identifier	R_FREE		1200802	0					
ANR	1200918	ArgumentList	dbg -> btalgo		1200802	1					
ANR	1200919	Argument	dbg -> btalgo		1200802	0					
ANR	1200920	PtrMemberAccess	dbg -> btalgo		1200802	0					
ANR	1200921	Identifier	dbg		1200802	0					
ANR	1200922	Identifier	btalgo		1200802	1					
ANR	1200923	ExpressionStatement	dbg -> trace_execs = 0	369:1:9412:9432	1200802	14	True				
ANR	1200924	AssignmentExpression	dbg -> trace_execs = 0		1200802	0		=			
ANR	1200925	PtrMemberAccess	dbg -> trace_execs		1200802	0					
ANR	1200926	Identifier	dbg		1200802	0					
ANR	1200927	Identifier	trace_execs		1200802	1					
ANR	1200928	PrimaryExpression	0		1200802	1					
ANR	1200929	ExpressionStatement	dbg -> anal = NULL	370:1:9435:9451	1200802	15	True				
ANR	1200930	AssignmentExpression	dbg -> anal = NULL		1200802	0		=			
ANR	1200931	PtrMemberAccess	dbg -> anal		1200802	0					
ANR	1200932	Identifier	dbg		1200802	0					
ANR	1200933	Identifier	anal		1200802	1					
ANR	1200934	Identifier	NULL		1200802	1					
ANR	1200935	ExpressionStatement	dbg -> snaps = r_list_newf ( ( RListFree ) r_debug_snap_free )	371:1:9454:9509	1200802	16	True				
ANR	1200936	AssignmentExpression	dbg -> snaps = r_list_newf ( ( RListFree ) r_debug_snap_free )		1200802	0		=			
ANR	1200937	PtrMemberAccess	dbg -> snaps		1200802	0					
ANR	1200938	Identifier	dbg		1200802	0					
ANR	1200939	Identifier	snaps		1200802	1					
ANR	1200940	CallExpression	r_list_newf ( ( RListFree ) r_debug_snap_free )		1200802	1					
ANR	1200941	Callee	r_list_newf		1200802	0					
ANR	1200942	Identifier	r_list_newf		1200802	0					
ANR	1200943	ArgumentList	( RListFree ) r_debug_snap_free		1200802	1					
ANR	1200944	Argument	( RListFree ) r_debug_snap_free		1200802	0					
ANR	1200945	CastExpression	( RListFree ) r_debug_snap_free		1200802	0					
ANR	1200946	CastTarget	RListFree		1200802	0					
ANR	1200947	Identifier	r_debug_snap_free		1200802	1					
ANR	1200948	ExpressionStatement	dbg -> sessions = r_list_newf ( ( RListFree ) r_debug_session_free )	372:1:9512:9573	1200802	17	True				
ANR	1200949	AssignmentExpression	dbg -> sessions = r_list_newf ( ( RListFree ) r_debug_session_free )		1200802	0		=			
ANR	1200950	PtrMemberAccess	dbg -> sessions		1200802	0					
ANR	1200951	Identifier	dbg		1200802	0					
ANR	1200952	Identifier	sessions		1200802	1					
ANR	1200953	CallExpression	r_list_newf ( ( RListFree ) r_debug_session_free )		1200802	1					
ANR	1200954	Callee	r_list_newf		1200802	0					
ANR	1200955	Identifier	r_list_newf		1200802	0					
ANR	1200956	ArgumentList	( RListFree ) r_debug_session_free		1200802	1					
ANR	1200957	Argument	( RListFree ) r_debug_session_free		1200802	0					
ANR	1200958	CastExpression	( RListFree ) r_debug_session_free		1200802	0					
ANR	1200959	CastTarget	RListFree		1200802	0					
ANR	1200960	Identifier	r_debug_session_free		1200802	1					
ANR	1200961	ExpressionStatement	dbg -> pid = - 1	373:1:9576:9589	1200802	18	True				
ANR	1200962	AssignmentExpression	dbg -> pid = - 1		1200802	0		=			
ANR	1200963	PtrMemberAccess	dbg -> pid		1200802	0					
ANR	1200964	Identifier	dbg		1200802	0					
ANR	1200965	Identifier	pid		1200802	1					
ANR	1200966	UnaryOperationExpression	- 1		1200802	1					
ANR	1200967	UnaryOperator	-		1200802	0					
ANR	1200968	PrimaryExpression	1		1200802	1					
ANR	1200969	ExpressionStatement	dbg -> bpsize = 1	374:1:9592:9607	1200802	19	True				
ANR	1200970	AssignmentExpression	dbg -> bpsize = 1		1200802	0		=			
ANR	1200971	PtrMemberAccess	dbg -> bpsize		1200802	0					
ANR	1200972	Identifier	dbg		1200802	0					
ANR	1200973	Identifier	bpsize		1200802	1					
ANR	1200974	PrimaryExpression	1		1200802	1					
ANR	1200975	ExpressionStatement	dbg -> tid = - 1	375:1:9610:9623	1200802	20	True				
ANR	1200976	AssignmentExpression	dbg -> tid = - 1		1200802	0		=			
ANR	1200977	PtrMemberAccess	dbg -> tid		1200802	0					
ANR	1200978	Identifier	dbg		1200802	0					
ANR	1200979	Identifier	tid		1200802	1					
ANR	1200980	UnaryOperationExpression	- 1		1200802	1					
ANR	1200981	UnaryOperator	-		1200802	0					
ANR	1200982	PrimaryExpression	1		1200802	1					
ANR	1200983	ExpressionStatement	dbg -> tree = r_tree_new ( )	376:1:9626:9651	1200802	21	True				
ANR	1200984	AssignmentExpression	dbg -> tree = r_tree_new ( )		1200802	0		=			
ANR	1200985	PtrMemberAccess	dbg -> tree		1200802	0					
ANR	1200986	Identifier	dbg		1200802	0					
ANR	1200987	Identifier	tree		1200802	1					
ANR	1200988	CallExpression	r_tree_new ( )		1200802	1					
ANR	1200989	Callee	r_tree_new		1200802	0					
ANR	1200990	Identifier	r_tree_new		1200802	0					
ANR	1200991	ArgumentList			1200802	1					
ANR	1200992	ExpressionStatement	dbg -> tracenodes = sdb_new0 ( )	377:1:9654:9683	1200802	22	True				
ANR	1200993	AssignmentExpression	dbg -> tracenodes = sdb_new0 ( )		1200802	0		=			
ANR	1200994	PtrMemberAccess	dbg -> tracenodes		1200802	0					
ANR	1200995	Identifier	dbg		1200802	0					
ANR	1200996	Identifier	tracenodes		1200802	1					
ANR	1200997	CallExpression	sdb_new0 ( )		1200802	1					
ANR	1200998	Callee	sdb_new0		1200802	0					
ANR	1200999	Identifier	sdb_new0		1200802	0					
ANR	1201000	ArgumentList			1200802	1					
ANR	1201001	ExpressionStatement	dbg -> swstep = 0	378:1:9686:9701	1200802	23	True				
ANR	1201002	AssignmentExpression	dbg -> swstep = 0		1200802	0		=			
ANR	1201003	PtrMemberAccess	dbg -> swstep		1200802	0					
ANR	1201004	Identifier	dbg		1200802	0					
ANR	1201005	Identifier	swstep		1200802	1					
ANR	1201006	PrimaryExpression	0		1200802	1					
ANR	1201007	ExpressionStatement	dbg -> stop_all_threads = false	379:1:9704:9733	1200802	24	True				
ANR	1201008	AssignmentExpression	dbg -> stop_all_threads = false		1200802	0		=			
ANR	1201009	PtrMemberAccess	dbg -> stop_all_threads		1200802	0					
ANR	1201010	Identifier	dbg		1200802	0					
ANR	1201011	Identifier	stop_all_threads		1200802	1					
ANR	1201012	Identifier	false		1200802	1					
ANR	1201013	ExpressionStatement	dbg -> trace = r_debug_trace_new ( )	380:1:9736:9769	1200802	25	True				
ANR	1201014	AssignmentExpression	dbg -> trace = r_debug_trace_new ( )		1200802	0		=			
ANR	1201015	PtrMemberAccess	dbg -> trace		1200802	0					
ANR	1201016	Identifier	dbg		1200802	0					
ANR	1201017	Identifier	trace		1200802	1					
ANR	1201018	CallExpression	r_debug_trace_new ( )		1200802	1					
ANR	1201019	Callee	r_debug_trace_new		1200802	0					
ANR	1201020	Identifier	r_debug_trace_new		1200802	0					
ANR	1201021	ArgumentList			1200802	1					
ANR	1201022	ExpressionStatement	dbg -> cb_printf = ( void * ) printf	381:1:9772:9803	1200802	26	True				
ANR	1201023	AssignmentExpression	dbg -> cb_printf = ( void * ) printf		1200802	0		=			
ANR	1201024	PtrMemberAccess	dbg -> cb_printf		1200802	0					
ANR	1201025	Identifier	dbg		1200802	0					
ANR	1201026	Identifier	cb_printf		1200802	1					
ANR	1201027	CastExpression	( void * ) printf		1200802	1					
ANR	1201028	CastTarget	void *		1200802	0					
ANR	1201029	Identifier	printf		1200802	1					
ANR	1201030	ExpressionStatement	dbg -> reg = r_reg_new ( )	382:1:9806:9829	1200802	27	True				
ANR	1201031	AssignmentExpression	dbg -> reg = r_reg_new ( )		1200802	0		=			
ANR	1201032	PtrMemberAccess	dbg -> reg		1200802	0					
ANR	1201033	Identifier	dbg		1200802	0					
ANR	1201034	Identifier	reg		1200802	1					
ANR	1201035	CallExpression	r_reg_new ( )		1200802	1					
ANR	1201036	Callee	r_reg_new		1200802	0					
ANR	1201037	Identifier	r_reg_new		1200802	0					
ANR	1201038	ArgumentList			1200802	1					
ANR	1201039	ExpressionStatement	"dbg -> num = r_num_new ( r_debug_num_callback , r_debug_str_callback , dbg )"	383:1:9832:9902	1200802	28	True				
ANR	1201040	AssignmentExpression	"dbg -> num = r_num_new ( r_debug_num_callback , r_debug_str_callback , dbg )"		1200802	0		=			
ANR	1201041	PtrMemberAccess	dbg -> num		1200802	0					
ANR	1201042	Identifier	dbg		1200802	0					
ANR	1201043	Identifier	num		1200802	1					
ANR	1201044	CallExpression	"r_num_new ( r_debug_num_callback , r_debug_str_callback , dbg )"		1200802	1					
ANR	1201045	Callee	r_num_new		1200802	0					
ANR	1201046	Identifier	r_num_new		1200802	0					
ANR	1201047	ArgumentList	r_debug_num_callback		1200802	1					
ANR	1201048	Argument	r_debug_num_callback		1200802	0					
ANR	1201049	Identifier	r_debug_num_callback		1200802	0					
ANR	1201050	Argument	r_debug_str_callback		1200802	1					
ANR	1201051	Identifier	r_debug_str_callback		1200802	0					
ANR	1201052	Argument	dbg		1200802	2					
ANR	1201053	Identifier	dbg		1200802	0					
ANR	1201054	ExpressionStatement	dbg -> h = NULL	384:1:9905:9918	1200802	29	True				
ANR	1201055	AssignmentExpression	dbg -> h = NULL		1200802	0		=			
ANR	1201056	PtrMemberAccess	dbg -> h		1200802	0					
ANR	1201057	Identifier	dbg		1200802	0					
ANR	1201058	Identifier	h		1200802	1					
ANR	1201059	Identifier	NULL		1200802	1					
ANR	1201060	ExpressionStatement	dbg -> threads = NULL	385:1:9921:9940	1200802	30	True				
ANR	1201061	AssignmentExpression	dbg -> threads = NULL		1200802	0		=			
ANR	1201062	PtrMemberAccess	dbg -> threads		1200802	0					
ANR	1201063	Identifier	dbg		1200802	0					
ANR	1201064	Identifier	threads		1200802	1					
ANR	1201065	Identifier	NULL		1200802	1					
ANR	1201066	ExpressionStatement	dbg -> hitinfo = 1	386:1:9943:9959	1200802	31	True				
ANR	1201067	AssignmentExpression	dbg -> hitinfo = 1		1200802	0		=			
ANR	1201068	PtrMemberAccess	dbg -> hitinfo		1200802	0					
ANR	1201069	Identifier	dbg		1200802	0					
ANR	1201070	Identifier	hitinfo		1200802	1					
ANR	1201071	PrimaryExpression	1		1200802	1					
ANR	1201072	ExpressionStatement	dbg -> maps = r_debug_map_list_new ( )	388:1:9993:10028	1200802	32	True				
ANR	1201073	AssignmentExpression	dbg -> maps = r_debug_map_list_new ( )		1200802	0		=			
ANR	1201074	PtrMemberAccess	dbg -> maps		1200802	0					
ANR	1201075	Identifier	dbg		1200802	0					
ANR	1201076	Identifier	maps		1200802	1					
ANR	1201077	CallExpression	r_debug_map_list_new ( )		1200802	1					
ANR	1201078	Callee	r_debug_map_list_new		1200802	0					
ANR	1201079	Identifier	r_debug_map_list_new		1200802	0					
ANR	1201080	ArgumentList			1200802	1					
ANR	1201081	ExpressionStatement	dbg -> maps_user = r_debug_map_list_new ( )	389:1:10031:10071	1200802	33	True				
ANR	1201082	AssignmentExpression	dbg -> maps_user = r_debug_map_list_new ( )		1200802	0		=			
ANR	1201083	PtrMemberAccess	dbg -> maps_user		1200802	0					
ANR	1201084	Identifier	dbg		1200802	0					
ANR	1201085	Identifier	maps_user		1200802	1					
ANR	1201086	CallExpression	r_debug_map_list_new ( )		1200802	1					
ANR	1201087	Callee	r_debug_map_list_new		1200802	0					
ANR	1201088	Identifier	r_debug_map_list_new		1200802	0					
ANR	1201089	ArgumentList			1200802	1					
ANR	1201090	ExpressionStatement	dbg -> q_regs = NULL	390:1:10074:10092	1200802	34	True				
ANR	1201091	AssignmentExpression	dbg -> q_regs = NULL		1200802	0		=			
ANR	1201092	PtrMemberAccess	dbg -> q_regs		1200802	0					
ANR	1201093	Identifier	dbg		1200802	0					
ANR	1201094	Identifier	q_regs		1200802	1					
ANR	1201095	Identifier	NULL		1200802	1					
ANR	1201096	ExpressionStatement	dbg -> call_frames = NULL	391:1:10095:10118	1200802	35	True				
ANR	1201097	AssignmentExpression	dbg -> call_frames = NULL		1200802	0		=			
ANR	1201098	PtrMemberAccess	dbg -> call_frames		1200802	0					
ANR	1201099	Identifier	dbg		1200802	0					
ANR	1201100	Identifier	call_frames		1200802	1					
ANR	1201101	Identifier	NULL		1200802	1					
ANR	1201102	ExpressionStatement	r_debug_signal_init ( dbg )	392:1:10121:10146	1200802	36	True				
ANR	1201103	CallExpression	r_debug_signal_init ( dbg )		1200802	0					
ANR	1201104	Callee	r_debug_signal_init		1200802	0					
ANR	1201105	Identifier	r_debug_signal_init		1200802	0					
ANR	1201106	ArgumentList	dbg		1200802	1					
ANR	1201107	Argument	dbg		1200802	0					
ANR	1201108	Identifier	dbg		1200802	0					
ANR	1201109	IfStatement	if ( hard )		1200802	37					
ANR	1201110	Condition	hard	393:5:10153:10156	1200802	0	True				
ANR	1201111	Identifier	hard		1200802	0					
ANR	1201112	CompoundStatement		43:11:1180:1180	1200802	1					
ANR	1201113	ExpressionStatement	dbg -> bp = r_bp_new ( )	394:2:10163:10184	1200802	0	True				
ANR	1201114	AssignmentExpression	dbg -> bp = r_bp_new ( )		1200802	0		=			
ANR	1201115	PtrMemberAccess	dbg -> bp		1200802	0					
ANR	1201116	Identifier	dbg		1200802	0					
ANR	1201117	Identifier	bp		1200802	1					
ANR	1201118	CallExpression	r_bp_new ( )		1200802	1					
ANR	1201119	Callee	r_bp_new		1200802	0					
ANR	1201120	Identifier	r_bp_new		1200802	0					
ANR	1201121	ArgumentList			1200802	1					
ANR	1201122	ExpressionStatement	r_debug_plugin_init ( dbg )	395:2:10188:10213	1200802	1	True				
ANR	1201123	CallExpression	r_debug_plugin_init ( dbg )		1200802	0					
ANR	1201124	Callee	r_debug_plugin_init		1200802	0					
ANR	1201125	Identifier	r_debug_plugin_init		1200802	0					
ANR	1201126	ArgumentList	dbg		1200802	1					
ANR	1201127	Argument	dbg		1200802	0					
ANR	1201128	Identifier	dbg		1200802	0					
ANR	1201129	ExpressionStatement	dbg -> bp -> iob . init = false	396:2:10217:10242	1200802	2	True				
ANR	1201130	AssignmentExpression	dbg -> bp -> iob . init = false		1200802	0		=			
ANR	1201131	MemberAccess	dbg -> bp -> iob . init		1200802	0					
ANR	1201132	PtrMemberAccess	dbg -> bp -> iob		1200802	0					
ANR	1201133	PtrMemberAccess	dbg -> bp		1200802	0					
ANR	1201134	Identifier	dbg		1200802	0					
ANR	1201135	Identifier	bp		1200802	1					
ANR	1201136	Identifier	iob		1200802	1					
ANR	1201137	Identifier	init		1200802	1					
ANR	1201138	Identifier	false		1200802	1					
ANR	1201139	ReturnStatement	return dbg ;	398:1:10248:10258	1200802	38	True				
ANR	1201140	Identifier	dbg		1200802	0					
ANR	1201141	ReturnType	R_API RDebug *		1200802	1					
ANR	1201142	Identifier	r_debug_new		1200802	2					
ANR	1201143	ParameterList	int hard		1200802	3					
ANR	1201144	Parameter	int hard	351:26:8968:8975	1200802	0	True				
ANR	1201145	ParameterType	int		1200802	0					
ANR	1201146	Identifier	hard		1200802	1					
ANR	1201147	CFGEntryNode	ENTRY		1200802		True				
ANR	1201148	CFGExitNode	EXIT		1200802		True				
ANR	1201149	Symbol	R_SYS_ENDIAN		1200802						
ANR	1201150	Symbol	dbg -> main_pid		1200802						
ANR	1201151	Symbol	* dbg -> bp		1200802						
ANR	1201152	Symbol	R_SYS_ARCH		1200802						
ANR	1201153	Symbol	r_debug_map_list_new		1200802						
ANR	1201154	Symbol	dbg -> forked_pid		1200802						
ANR	1201155	Symbol	r_tree_new		1200802						
ANR	1201156	Symbol	r_debug_session_free		1200802						
ANR	1201157	Symbol	NULL		1200802						
ANR	1201158	Symbol	dbg -> bp		1200802						
ANR	1201159	Symbol	dbg -> bp -> iob		1200802						
ANR	1201160	Symbol	r_list_newf		1200802						
ANR	1201161	Symbol	r_debug_trace_new		1200802						
ANR	1201162	Symbol	dbg		1200802						
ANR	1201163	Symbol	dbg -> tracenodes		1200802						
ANR	1201164	Symbol	dbg -> threads		1200802						
ANR	1201165	Symbol	dbg -> call_frames		1200802						
ANR	1201166	Symbol	r_debug_num_callback		1200802						
ANR	1201167	Symbol	R_NEW0		1200802						
ANR	1201168	Symbol	dbg -> bpsize		1200802						
ANR	1201169	Symbol	dbg -> cb_printf		1200802						
ANR	1201170	Symbol	dbg -> trace_clone		1200802						
ANR	1201171	Symbol	true		1200802						
ANR	1201172	Symbol	dbg -> trace		1200802						
ANR	1201173	Symbol	dbg -> arch		1200802						
ANR	1201174	Symbol	dbg -> btalgo		1200802						
ANR	1201175	Symbol	dbg -> bp -> iob . init		1200802						
ANR	1201176	Symbol	dbg -> bits		1200802						
ANR	1201177	Symbol	dbg -> trace_aftersyscall		1200802						
ANR	1201178	Symbol	printf		1200802						
ANR	1201179	Symbol	r_num_new		1200802						
ANR	1201180	Symbol	dbg -> snaps		1200802						
ANR	1201181	Symbol	r_bp_new		1200802						
ANR	1201182	Symbol	R_SYS_BITS		1200802						
ANR	1201183	Symbol	r_debug_snap_free		1200802						
ANR	1201184	Symbol	dbg -> n_threads		1200802						
ANR	1201185	Symbol	hard		1200802						
ANR	1201186	Symbol	r_egg_new		1200802						
ANR	1201187	Symbol	sdb_new0		1200802						
ANR	1201188	Symbol	dbg -> h		1200802						
ANR	1201189	Symbol	dbg -> maps_user		1200802						
ANR	1201190	Symbol	dbg -> anal		1200802						
ANR	1201191	Symbol	dbg -> sessions		1200802						
ANR	1201192	Symbol	r_debug_str_callback		1200802						
ANR	1201193	Symbol	false		1200802						
ANR	1201194	Symbol	dbg -> tree		1200802						
ANR	1201195	Symbol	r_reg_new		1200802						
ANR	1201196	Symbol	dbg -> num		1200802						
ANR	1201197	Symbol	dbg -> egg		1200802						
ANR	1201198	Symbol	* dbg		1200802						
ANR	1201199	Symbol	dbg -> hitinfo		1200802						
ANR	1201200	Symbol	dbg -> trace_execs		1200802						
ANR	1201201	Symbol	dbg -> stop_all_threads		1200802						
ANR	1201202	Symbol	dbg -> tid		1200802						
ANR	1201203	Symbol	dbg -> swstep		1200802						
ANR	1201204	Symbol	dbg -> maps		1200802						
ANR	1201205	Symbol	dbg -> pid		1200802						
ANR	1201206	Symbol	dbg -> trace_forks		1200802						
ANR	1201207	Symbol	dbg -> q_regs		1200802						
ANR	1201208	Symbol	RDebug		1200802						
ANR	1201209	Symbol	strdup		1200802						
ANR	1201210	Symbol	dbg -> reg		1200802						
ANR	1201211	Symbol	R_SYS_OS		1200802						
ANR	1201212	Symbol	* * dbg		1200802						
ANR	1201213	Symbol	dbg -> follow_child		1200802						
ANR	1201214	Function	free_tracenodes_entry	401:0:10263:10420							
ANR	1201215	FunctionDef	"free_tracenodes_entry (RDebug * dbg , const char * k , const char * v)"		1201214	0					
ANR	1201216	CompoundStatement		401:76:10339:10420	1201214	0					
ANR	1201217	IdentifierDeclStatement	"ut64 v_num = r_num_get ( NULL , v ) ;"	402:1:10342:10374	1201214	0	True				
ANR	1201218	IdentifierDecl	"v_num = r_num_get ( NULL , v )"		1201214	0					
ANR	1201219	IdentifierDeclType	ut64		1201214	0					
ANR	1201220	Identifier	v_num		1201214	1					
ANR	1201221	AssignmentExpression	"v_num = r_num_get ( NULL , v )"		1201214	2		=			
ANR	1201222	Identifier	v_num		1201214	0					
ANR	1201223	CallExpression	"r_num_get ( NULL , v )"		1201214	1					
ANR	1201224	Callee	r_num_get		1201214	0					
ANR	1201225	Identifier	r_num_get		1201214	0					
ANR	1201226	ArgumentList	NULL		1201214	1					
ANR	1201227	Argument	NULL		1201214	0					
ANR	1201228	Identifier	NULL		1201214	0					
ANR	1201229	Argument	v		1201214	1					
ANR	1201230	Identifier	v		1201214	0					
ANR	1201231	ExpressionStatement	free ( ( void * ) ( size_t ) v_num )	403:1:10377:10404	1201214	1	True				
ANR	1201232	CallExpression	free ( ( void * ) ( size_t ) v_num )		1201214	0					
ANR	1201233	Callee	free		1201214	0					
ANR	1201234	Identifier	free		1201214	0					
ANR	1201235	ArgumentList	( void * ) ( size_t ) v_num		1201214	1					
ANR	1201236	Argument	( void * ) ( size_t ) v_num		1201214	0					
ANR	1201237	CastExpression	( void * ) ( size_t ) v_num		1201214	0					
ANR	1201238	CastTarget	void *		1201214	0					
ANR	1201239	CastExpression	( size_t ) v_num		1201214	1					
ANR	1201240	CastTarget	size_t		1201214	0					
ANR	1201241	Identifier	v_num		1201214	1					
ANR	1201242	ReturnStatement	return true ;	404:1:10407:10418	1201214	2	True				
ANR	1201243	Identifier	true		1201214	0					
ANR	1201244	ReturnType	static int		1201214	1					
ANR	1201245	Identifier	free_tracenodes_entry		1201214	2					
ANR	1201246	ParameterList	"RDebug * dbg , const char * k , const char * v"		1201214	3					
ANR	1201247	Parameter	RDebug * dbg	401:33:10296:10306	1201214	0	True				
ANR	1201248	ParameterType	RDebug *		1201214	0					
ANR	1201249	Identifier	dbg		1201214	1					
ANR	1201250	Parameter	const char * k	401:46:10309:10321	1201214	1	True				
ANR	1201251	ParameterType	const char *		1201214	0					
ANR	1201252	Identifier	k		1201214	1					
ANR	1201253	Parameter	const char * v	401:61:10324:10336	1201214	2	True				
ANR	1201254	ParameterType	const char *		1201214	0					
ANR	1201255	Identifier	v		1201214	1					
ANR	1201256	CFGEntryNode	ENTRY		1201214		True				
ANR	1201257	CFGExitNode	EXIT		1201214		True				
ANR	1201258	Symbol	NULL		1201214						
ANR	1201259	Symbol	v		1201214						
ANR	1201260	Symbol	v_num		1201214						
ANR	1201261	Symbol	dbg		1201214						
ANR	1201262	Symbol	true		1201214						
ANR	1201263	Symbol	r_num_get		1201214						
ANR	1201264	Symbol	k		1201214						
ANR	1201265	Function	r_debug_tracenodes_reset	407:0:10423:10584							
ANR	1201266	FunctionDef	r_debug_tracenodes_reset (RDebug * dbg)		1201265	0					
ANR	1201267	CompoundStatement		407:49:10472:10584	1201265	0					
ANR	1201268	ExpressionStatement	"sdb_foreach ( dbg -> tracenodes , ( SdbForeachCallback ) free_tracenodes_entry , dbg )"	408:1:10475:10552	1201265	0	True				
ANR	1201269	CallExpression	"sdb_foreach ( dbg -> tracenodes , ( SdbForeachCallback ) free_tracenodes_entry , dbg )"		1201265	0					
ANR	1201270	Callee	sdb_foreach		1201265	0					
ANR	1201271	Identifier	sdb_foreach		1201265	0					
ANR	1201272	ArgumentList	dbg -> tracenodes		1201265	1					
ANR	1201273	Argument	dbg -> tracenodes		1201265	0					
ANR	1201274	PtrMemberAccess	dbg -> tracenodes		1201265	0					
ANR	1201275	Identifier	dbg		1201265	0					
ANR	1201276	Identifier	tracenodes		1201265	1					
ANR	1201277	Argument	( SdbForeachCallback ) free_tracenodes_entry		1201265	1					
ANR	1201278	CastExpression	( SdbForeachCallback ) free_tracenodes_entry		1201265	0					
ANR	1201279	CastTarget	SdbForeachCallback		1201265	0					
ANR	1201280	Identifier	free_tracenodes_entry		1201265	1					
ANR	1201281	Argument	dbg		1201265	2					
ANR	1201282	Identifier	dbg		1201265	0					
ANR	1201283	ExpressionStatement	sdb_reset ( dbg -> tracenodes )	409:1:10555:10582	1201265	1	True				
ANR	1201284	CallExpression	sdb_reset ( dbg -> tracenodes )		1201265	0					
ANR	1201285	Callee	sdb_reset		1201265	0					
ANR	1201286	Identifier	sdb_reset		1201265	0					
ANR	1201287	ArgumentList	dbg -> tracenodes		1201265	1					
ANR	1201288	Argument	dbg -> tracenodes		1201265	0					
ANR	1201289	PtrMemberAccess	dbg -> tracenodes		1201265	0					
ANR	1201290	Identifier	dbg		1201265	0					
ANR	1201291	Identifier	tracenodes		1201265	1					
ANR	1201292	ReturnType	R_API void		1201265	1					
ANR	1201293	Identifier	r_debug_tracenodes_reset		1201265	2					
ANR	1201294	ParameterList	RDebug * dbg		1201265	3					
ANR	1201295	Parameter	RDebug * dbg	407:36:10459:10469	1201265	0	True				
ANR	1201296	ParameterType	RDebug *		1201265	0					
ANR	1201297	Identifier	dbg		1201265	1					
ANR	1201298	CFGEntryNode	ENTRY		1201265		True				
ANR	1201299	CFGExitNode	EXIT		1201265		True				
ANR	1201300	Symbol	free_tracenodes_entry		1201265						
ANR	1201301	Symbol	dbg		1201265						
ANR	1201302	Symbol	dbg -> tracenodes		1201265						
ANR	1201303	Symbol	* dbg		1201265						
ANR	1201304	Function	r_debug_free	412:0:10587:11410							
ANR	1201305	FunctionDef	r_debug_free (RDebug * dbg)		1201304	0					
ANR	1201306	CompoundStatement		412:40:10627:11410	1201304	0					
ANR	1201307	IfStatement	if ( dbg )		1201304	0					
ANR	1201308	Condition	dbg	413:5:10634:10636	1201304	0	True				
ANR	1201309	Identifier	dbg		1201304	0					
ANR	1201310	CompoundStatement		2:10:11:11	1201304	1					
ANR	1201311	ExpressionStatement	r_bp_free ( dbg -> bp )	415:2:10731:10750	1201304	0	True				
ANR	1201312	CallExpression	r_bp_free ( dbg -> bp )		1201304	0					
ANR	1201313	Callee	r_bp_free		1201304	0					
ANR	1201314	Identifier	r_bp_free		1201304	0					
ANR	1201315	ArgumentList	dbg -> bp		1201304	1					
ANR	1201316	Argument	dbg -> bp		1201304	0					
ANR	1201317	PtrMemberAccess	dbg -> bp		1201304	0					
ANR	1201318	Identifier	dbg		1201304	0					
ANR	1201319	Identifier	bp		1201304	1					
ANR	1201320	ExpressionStatement	free ( dbg -> snap_path )	417:2:10781:10802	1201304	1	True				
ANR	1201321	CallExpression	free ( dbg -> snap_path )		1201304	0					
ANR	1201322	Callee	free		1201304	0					
ANR	1201323	Identifier	free		1201304	0					
ANR	1201324	ArgumentList	dbg -> snap_path		1201304	1					
ANR	1201325	Argument	dbg -> snap_path		1201304	0					
ANR	1201326	PtrMemberAccess	dbg -> snap_path		1201304	0					
ANR	1201327	Identifier	dbg		1201304	0					
ANR	1201328	Identifier	snap_path		1201304	1					
ANR	1201329	ExpressionStatement	r_list_free ( dbg -> snaps )	418:2:10806:10830	1201304	2	True				
ANR	1201330	CallExpression	r_list_free ( dbg -> snaps )		1201304	0					
ANR	1201331	Callee	r_list_free		1201304	0					
ANR	1201332	Identifier	r_list_free		1201304	0					
ANR	1201333	ArgumentList	dbg -> snaps		1201304	1					
ANR	1201334	Argument	dbg -> snaps		1201304	0					
ANR	1201335	PtrMemberAccess	dbg -> snaps		1201304	0					
ANR	1201336	Identifier	dbg		1201304	0					
ANR	1201337	Identifier	snaps		1201304	1					
ANR	1201338	ExpressionStatement	r_list_free ( dbg -> sessions )	419:2:10834:10861	1201304	3	True				
ANR	1201339	CallExpression	r_list_free ( dbg -> sessions )		1201304	0					
ANR	1201340	Callee	r_list_free		1201304	0					
ANR	1201341	Identifier	r_list_free		1201304	0					
ANR	1201342	ArgumentList	dbg -> sessions		1201304	1					
ANR	1201343	Argument	dbg -> sessions		1201304	0					
ANR	1201344	PtrMemberAccess	dbg -> sessions		1201304	0					
ANR	1201345	Identifier	dbg		1201304	0					
ANR	1201346	Identifier	sessions		1201304	1					
ANR	1201347	ExpressionStatement	r_list_free ( dbg -> maps )	420:2:10865:10888	1201304	4	True				
ANR	1201348	CallExpression	r_list_free ( dbg -> maps )		1201304	0					
ANR	1201349	Callee	r_list_free		1201304	0					
ANR	1201350	Identifier	r_list_free		1201304	0					
ANR	1201351	ArgumentList	dbg -> maps		1201304	1					
ANR	1201352	Argument	dbg -> maps		1201304	0					
ANR	1201353	PtrMemberAccess	dbg -> maps		1201304	0					
ANR	1201354	Identifier	dbg		1201304	0					
ANR	1201355	Identifier	maps		1201304	1					
ANR	1201356	ExpressionStatement	r_list_free ( dbg -> maps_user )	421:2:10892:10920	1201304	5	True				
ANR	1201357	CallExpression	r_list_free ( dbg -> maps_user )		1201304	0					
ANR	1201358	Callee	r_list_free		1201304	0					
ANR	1201359	Identifier	r_list_free		1201304	0					
ANR	1201360	ArgumentList	dbg -> maps_user		1201304	1					
ANR	1201361	Argument	dbg -> maps_user		1201304	0					
ANR	1201362	PtrMemberAccess	dbg -> maps_user		1201304	0					
ANR	1201363	Identifier	dbg		1201304	0					
ANR	1201364	Identifier	maps_user		1201304	1					
ANR	1201365	ExpressionStatement	r_list_free ( dbg -> threads )	422:2:10924:10950	1201304	6	True				
ANR	1201366	CallExpression	r_list_free ( dbg -> threads )		1201304	0					
ANR	1201367	Callee	r_list_free		1201304	0					
ANR	1201368	Identifier	r_list_free		1201304	0					
ANR	1201369	ArgumentList	dbg -> threads		1201304	1					
ANR	1201370	Argument	dbg -> threads		1201304	0					
ANR	1201371	PtrMemberAccess	dbg -> threads		1201304	0					
ANR	1201372	Identifier	dbg		1201304	0					
ANR	1201373	Identifier	threads		1201304	1					
ANR	1201374	ExpressionStatement	r_num_free ( dbg -> num )	423:2:10954:10975	1201304	7	True				
ANR	1201375	CallExpression	r_num_free ( dbg -> num )		1201304	0					
ANR	1201376	Callee	r_num_free		1201304	0					
ANR	1201377	Identifier	r_num_free		1201304	0					
ANR	1201378	ArgumentList	dbg -> num		1201304	1					
ANR	1201379	Argument	dbg -> num		1201304	0					
ANR	1201380	PtrMemberAccess	dbg -> num		1201304	0					
ANR	1201381	Identifier	dbg		1201304	0					
ANR	1201382	Identifier	num		1201304	1					
ANR	1201383	ExpressionStatement	sdb_free ( dbg -> sgnls )	424:2:10979:11000	1201304	8	True				
ANR	1201384	CallExpression	sdb_free ( dbg -> sgnls )		1201304	0					
ANR	1201385	Callee	sdb_free		1201304	0					
ANR	1201386	Identifier	sdb_free		1201304	0					
ANR	1201387	ArgumentList	dbg -> sgnls		1201304	1					
ANR	1201388	Argument	dbg -> sgnls		1201304	0					
ANR	1201389	PtrMemberAccess	dbg -> sgnls		1201304	0					
ANR	1201390	Identifier	dbg		1201304	0					
ANR	1201391	Identifier	sgnls		1201304	1					
ANR	1201392	ExpressionStatement	r_tree_free ( dbg -> tree )	425:2:11004:11027	1201304	9	True				
ANR	1201393	CallExpression	r_tree_free ( dbg -> tree )		1201304	0					
ANR	1201394	Callee	r_tree_free		1201304	0					
ANR	1201395	Identifier	r_tree_free		1201304	0					
ANR	1201396	ArgumentList	dbg -> tree		1201304	1					
ANR	1201397	Argument	dbg -> tree		1201304	0					
ANR	1201398	PtrMemberAccess	dbg -> tree		1201304	0					
ANR	1201399	Identifier	dbg		1201304	0					
ANR	1201400	Identifier	tree		1201304	1					
ANR	1201401	ExpressionStatement	"sdb_foreach ( dbg -> tracenodes , ( SdbForeachCallback ) free_tracenodes_entry , dbg )"	426:2:11031:11108	1201304	10	True				
ANR	1201402	CallExpression	"sdb_foreach ( dbg -> tracenodes , ( SdbForeachCallback ) free_tracenodes_entry , dbg )"		1201304	0					
ANR	1201403	Callee	sdb_foreach		1201304	0					
ANR	1201404	Identifier	sdb_foreach		1201304	0					
ANR	1201405	ArgumentList	dbg -> tracenodes		1201304	1					
ANR	1201406	Argument	dbg -> tracenodes		1201304	0					
ANR	1201407	PtrMemberAccess	dbg -> tracenodes		1201304	0					
ANR	1201408	Identifier	dbg		1201304	0					
ANR	1201409	Identifier	tracenodes		1201304	1					
ANR	1201410	Argument	( SdbForeachCallback ) free_tracenodes_entry		1201304	1					
ANR	1201411	CastExpression	( SdbForeachCallback ) free_tracenodes_entry		1201304	0					
ANR	1201412	CastTarget	SdbForeachCallback		1201304	0					
ANR	1201413	Identifier	free_tracenodes_entry		1201304	1					
ANR	1201414	Argument	dbg		1201304	2					
ANR	1201415	Identifier	dbg		1201304	0					
ANR	1201416	ExpressionStatement	sdb_free ( dbg -> tracenodes )	427:2:11112:11138	1201304	11	True				
ANR	1201417	CallExpression	sdb_free ( dbg -> tracenodes )		1201304	0					
ANR	1201418	Callee	sdb_free		1201304	0					
ANR	1201419	Identifier	sdb_free		1201304	0					
ANR	1201420	ArgumentList	dbg -> tracenodes		1201304	1					
ANR	1201421	Argument	dbg -> tracenodes		1201304	0					
ANR	1201422	PtrMemberAccess	dbg -> tracenodes		1201304	0					
ANR	1201423	Identifier	dbg		1201304	0					
ANR	1201424	Identifier	tracenodes		1201304	1					
ANR	1201425	ExpressionStatement	r_list_free ( dbg -> plugins )	428:2:11142:11168	1201304	12	True				
ANR	1201426	CallExpression	r_list_free ( dbg -> plugins )		1201304	0					
ANR	1201427	Callee	r_list_free		1201304	0					
ANR	1201428	Identifier	r_list_free		1201304	0					
ANR	1201429	ArgumentList	dbg -> plugins		1201304	1					
ANR	1201430	Argument	dbg -> plugins		1201304	0					
ANR	1201431	PtrMemberAccess	dbg -> plugins		1201304	0					
ANR	1201432	Identifier	dbg		1201304	0					
ANR	1201433	Identifier	plugins		1201304	1					
ANR	1201434	ExpressionStatement	r_list_free ( dbg -> call_frames )	429:2:11172:11202	1201304	13	True				
ANR	1201435	CallExpression	r_list_free ( dbg -> call_frames )		1201304	0					
ANR	1201436	Callee	r_list_free		1201304	0					
ANR	1201437	Identifier	r_list_free		1201304	0					
ANR	1201438	ArgumentList	dbg -> call_frames		1201304	1					
ANR	1201439	Argument	dbg -> call_frames		1201304	0					
ANR	1201440	PtrMemberAccess	dbg -> call_frames		1201304	0					
ANR	1201441	Identifier	dbg		1201304	0					
ANR	1201442	Identifier	call_frames		1201304	1					
ANR	1201443	ExpressionStatement	free ( dbg -> btalgo )	430:2:11206:11224	1201304	14	True				
ANR	1201444	CallExpression	free ( dbg -> btalgo )		1201304	0					
ANR	1201445	Callee	free		1201304	0					
ANR	1201446	Identifier	free		1201304	0					
ANR	1201447	ArgumentList	dbg -> btalgo		1201304	1					
ANR	1201448	Argument	dbg -> btalgo		1201304	0					
ANR	1201449	PtrMemberAccess	dbg -> btalgo		1201304	0					
ANR	1201450	Identifier	dbg		1201304	0					
ANR	1201451	Identifier	btalgo		1201304	1					
ANR	1201452	ExpressionStatement	r_debug_trace_free ( dbg -> trace )	431:2:11228:11259	1201304	15	True				
ANR	1201453	CallExpression	r_debug_trace_free ( dbg -> trace )		1201304	0					
ANR	1201454	Callee	r_debug_trace_free		1201304	0					
ANR	1201455	Identifier	r_debug_trace_free		1201304	0					
ANR	1201456	ArgumentList	dbg -> trace		1201304	1					
ANR	1201457	Argument	dbg -> trace		1201304	0					
ANR	1201458	PtrMemberAccess	dbg -> trace		1201304	0					
ANR	1201459	Identifier	dbg		1201304	0					
ANR	1201460	Identifier	trace		1201304	1					
ANR	1201461	ExpressionStatement	dbg -> trace = NULL	432:2:11263:11280	1201304	16	True				
ANR	1201462	AssignmentExpression	dbg -> trace = NULL		1201304	0		=			
ANR	1201463	PtrMemberAccess	dbg -> trace		1201304	0					
ANR	1201464	Identifier	dbg		1201304	0					
ANR	1201465	Identifier	trace		1201304	1					
ANR	1201466	Identifier	NULL		1201304	1					
ANR	1201467	ExpressionStatement	r_egg_free ( dbg -> egg )	433:2:11284:11305	1201304	17	True				
ANR	1201468	CallExpression	r_egg_free ( dbg -> egg )		1201304	0					
ANR	1201469	Callee	r_egg_free		1201304	0					
ANR	1201470	Identifier	r_egg_free		1201304	0					
ANR	1201471	ArgumentList	dbg -> egg		1201304	1					
ANR	1201472	Argument	dbg -> egg		1201304	0					
ANR	1201473	PtrMemberAccess	dbg -> egg		1201304	0					
ANR	1201474	Identifier	dbg		1201304	0					
ANR	1201475	Identifier	egg		1201304	1					
ANR	1201476	ExpressionStatement	free ( dbg -> arch )	434:2:11309:11325	1201304	18	True				
ANR	1201477	CallExpression	free ( dbg -> arch )		1201304	0					
ANR	1201478	Callee	free		1201304	0					
ANR	1201479	Identifier	free		1201304	0					
ANR	1201480	ArgumentList	dbg -> arch		1201304	1					
ANR	1201481	Argument	dbg -> arch		1201304	0					
ANR	1201482	PtrMemberAccess	dbg -> arch		1201304	0					
ANR	1201483	Identifier	dbg		1201304	0					
ANR	1201484	Identifier	arch		1201304	1					
ANR	1201485	ExpressionStatement	free ( dbg -> glob_libs )	435:2:11329:11350	1201304	19	True				
ANR	1201486	CallExpression	free ( dbg -> glob_libs )		1201304	0					
ANR	1201487	Callee	free		1201304	0					
ANR	1201488	Identifier	free		1201304	0					
ANR	1201489	ArgumentList	dbg -> glob_libs		1201304	1					
ANR	1201490	Argument	dbg -> glob_libs		1201304	0					
ANR	1201491	PtrMemberAccess	dbg -> glob_libs		1201304	0					
ANR	1201492	Identifier	dbg		1201304	0					
ANR	1201493	Identifier	glob_libs		1201304	1					
ANR	1201494	ExpressionStatement	free ( dbg -> glob_unlibs )	436:2:11354:11377	1201304	20	True				
ANR	1201495	CallExpression	free ( dbg -> glob_unlibs )		1201304	0					
ANR	1201496	Callee	free		1201304	0					
ANR	1201497	Identifier	free		1201304	0					
ANR	1201498	ArgumentList	dbg -> glob_unlibs		1201304	1					
ANR	1201499	Argument	dbg -> glob_unlibs		1201304	0					
ANR	1201500	PtrMemberAccess	dbg -> glob_unlibs		1201304	0					
ANR	1201501	Identifier	dbg		1201304	0					
ANR	1201502	Identifier	glob_unlibs		1201304	1					
ANR	1201503	ExpressionStatement	free ( dbg )	437:2:11381:11391	1201304	21	True				
ANR	1201504	CallExpression	free ( dbg )		1201304	0					
ANR	1201505	Callee	free		1201304	0					
ANR	1201506	Identifier	free		1201304	0					
ANR	1201507	ArgumentList	dbg		1201304	1					
ANR	1201508	Argument	dbg		1201304	0					
ANR	1201509	Identifier	dbg		1201304	0					
ANR	1201510	ReturnStatement	return NULL ;	439:1:11397:11408	1201304	1	True				
ANR	1201511	Identifier	NULL		1201304	0					
ANR	1201512	ReturnType	R_API RDebug *		1201304	1					
ANR	1201513	Identifier	r_debug_free		1201304	2					
ANR	1201514	ParameterList	RDebug * dbg		1201304	3					
ANR	1201515	Parameter	RDebug * dbg	412:27:10614:10624	1201304	0	True				
ANR	1201516	ParameterType	RDebug *		1201304	0					
ANR	1201517	Identifier	dbg		1201304	1					
ANR	1201518	CFGEntryNode	ENTRY		1201304		True				
ANR	1201519	CFGExitNode	EXIT		1201304		True				
ANR	1201520	Symbol	NULL		1201304						
ANR	1201521	Symbol	dbg -> bp		1201304						
ANR	1201522	Symbol	dbg -> maps_user		1201304						
ANR	1201523	Symbol	dbg -> sessions		1201304						
ANR	1201524	Symbol	dbg		1201304						
ANR	1201525	Symbol	dbg -> snap_path		1201304						
ANR	1201526	Symbol	dbg -> num		1201304						
ANR	1201527	Symbol	dbg -> tree		1201304						
ANR	1201528	Symbol	dbg -> tracenodes		1201304						
ANR	1201529	Symbol	dbg -> plugins		1201304						
ANR	1201530	Symbol	dbg -> sgnls		1201304						
ANR	1201531	Symbol	dbg -> egg		1201304						
ANR	1201532	Symbol	* dbg		1201304						
ANR	1201533	Symbol	dbg -> threads		1201304						
ANR	1201534	Symbol	dbg -> call_frames		1201304						
ANR	1201535	Symbol	dbg -> glob_unlibs		1201304						
ANR	1201536	Symbol	dbg -> maps		1201304						
ANR	1201537	Symbol	dbg -> snaps		1201304						
ANR	1201538	Symbol	free_tracenodes_entry		1201304						
ANR	1201539	Symbol	dbg -> trace		1201304						
ANR	1201540	Symbol	dbg -> glob_libs		1201304						
ANR	1201541	Symbol	dbg -> btalgo		1201304						
ANR	1201542	Symbol	dbg -> arch		1201304						
ANR	1201543	Function	r_debug_attach	442:0:11413:11652							
ANR	1201544	FunctionDef	"r_debug_attach (RDebug * dbg , int pid)"		1201543	0					
ANR	1201545	CompoundStatement		442:47:11460:11652	1201543	0					
ANR	1201546	IdentifierDeclStatement	int ret = false ;	443:1:11463:11478	1201543	0	True				
ANR	1201547	IdentifierDecl	ret = false		1201543	0					
ANR	1201548	IdentifierDeclType	int		1201543	0					
ANR	1201549	Identifier	ret		1201543	1					
ANR	1201550	AssignmentExpression	ret = false		1201543	2		=			
ANR	1201551	Identifier	false		1201543	0					
ANR	1201552	Identifier	false		1201543	1					
ANR	1201553	IfStatement	if ( dbg && dbg -> h && dbg -> h -> attach )		1201543	1					
ANR	1201554	Condition	dbg && dbg -> h && dbg -> h -> attach	444:5:11485:11515	1201543	0	True				
ANR	1201555	AndExpression	dbg && dbg -> h && dbg -> h -> attach		1201543	0		&&			
ANR	1201556	Identifier	dbg		1201543	0					
ANR	1201557	AndExpression	dbg -> h && dbg -> h -> attach		1201543	1		&&			
ANR	1201558	PtrMemberAccess	dbg -> h		1201543	0					
ANR	1201559	Identifier	dbg		1201543	0					
ANR	1201560	Identifier	h		1201543	1					
ANR	1201561	PtrMemberAccess	dbg -> h -> attach		1201543	1					
ANR	1201562	PtrMemberAccess	dbg -> h		1201543	0					
ANR	1201563	Identifier	dbg		1201543	0					
ANR	1201564	Identifier	h		1201543	1					
ANR	1201565	Identifier	attach		1201543	1					
ANR	1201566	CompoundStatement		3:38:57:57	1201543	1					
ANR	1201567	ExpressionStatement	"ret = dbg -> h -> attach ( dbg , pid )"	445:2:11522:11553	1201543	0	True				
ANR	1201568	AssignmentExpression	"ret = dbg -> h -> attach ( dbg , pid )"		1201543	0		=			
ANR	1201569	Identifier	ret		1201543	0					
ANR	1201570	CallExpression	"dbg -> h -> attach ( dbg , pid )"		1201543	1					
ANR	1201571	Callee	dbg -> h -> attach		1201543	0					
ANR	1201572	PtrMemberAccess	dbg -> h -> attach		1201543	0					
ANR	1201573	PtrMemberAccess	dbg -> h		1201543	0					
ANR	1201574	Identifier	dbg		1201543	0					
ANR	1201575	Identifier	h		1201543	1					
ANR	1201576	Identifier	attach		1201543	1					
ANR	1201577	ArgumentList	dbg		1201543	1					
ANR	1201578	Argument	dbg		1201543	0					
ANR	1201579	Identifier	dbg		1201543	0					
ANR	1201580	Argument	pid		1201543	1					
ANR	1201581	Identifier	pid		1201543	0					
ANR	1201582	IfStatement	if ( ret != - 1 )		1201543	1					
ANR	1201583	Condition	ret != - 1	446:6:11561:11569	1201543	0	True				
ANR	1201584	EqualityExpression	ret != - 1		1201543	0		!=			
ANR	1201585	Identifier	ret		1201543	0					
ANR	1201586	UnaryOperationExpression	- 1		1201543	1					
ANR	1201587	UnaryOperator	-		1201543	0					
ANR	1201588	PrimaryExpression	1		1201543	1					
ANR	1201589	CompoundStatement		5:17:111:111	1201543	1					
ANR	1201590	ExpressionStatement	"r_debug_select ( dbg , pid , ret )"	447:3:11577:11607	1201543	0	True				
ANR	1201591	CallExpression	"r_debug_select ( dbg , pid , ret )"		1201543	0					
ANR	1201592	Callee	r_debug_select		1201543	0					
ANR	1201593	Identifier	r_debug_select		1201543	0					
ANR	1201594	ArgumentList	dbg		1201543	1					
ANR	1201595	Argument	dbg		1201543	0					
ANR	1201596	Identifier	dbg		1201543	0					
ANR	1201597	Argument	pid		1201543	1					
ANR	1201598	Identifier	pid		1201543	0					
ANR	1201599	Argument	ret		1201543	2					
ANR	1201600	Identifier	ret		1201543	0					
ANR	1201601	ReturnStatement	return ret ;	450:1:11640:11650	1201543	2	True				
ANR	1201602	Identifier	ret		1201543	0					
ANR	1201603	ReturnType	R_API int		1201543	1					
ANR	1201604	Identifier	r_debug_attach		1201543	2					
ANR	1201605	ParameterList	"RDebug * dbg , int pid"		1201543	3					
ANR	1201606	Parameter	RDebug * dbg	442:25:11438:11448	1201543	0	True				
ANR	1201607	ParameterType	RDebug *		1201543	0					
ANR	1201608	Identifier	dbg		1201543	1					
ANR	1201609	Parameter	int pid	442:38:11451:11457	1201543	1	True				
ANR	1201610	ParameterType	int		1201543	0					
ANR	1201611	Identifier	pid		1201543	1					
ANR	1201612	CFGEntryNode	ENTRY		1201543		True				
ANR	1201613	CFGExitNode	EXIT		1201543		True				
ANR	1201614	Symbol	ret		1201543						
ANR	1201615	Symbol	dbg -> h		1201543						
ANR	1201616	Symbol	dbg		1201543						
ANR	1201617	Symbol	false		1201543						
ANR	1201618	Symbol	* dbg -> h		1201543						
ANR	1201619	Symbol	pid		1201543						
ANR	1201620	Symbol	* dbg		1201543						
ANR	1201621	Symbol	* * dbg		1201543						
ANR	1201622	Symbol	dbg -> h -> attach		1201543						
ANR	1201623	Function	r_debug_stop	454:0:11693:11816							
ANR	1201624	FunctionDef	r_debug_stop (RDebug * dbg)		1201623	0					
ANR	1201625	CompoundStatement		454:36:11729:11816	1201623	0					
ANR	1201626	IfStatement	if ( dbg && dbg -> h && dbg -> h -> stop )		1201623	0					
ANR	1201627	Condition	dbg && dbg -> h && dbg -> h -> stop	455:5:11736:11764	1201623	0	True				
ANR	1201628	AndExpression	dbg && dbg -> h && dbg -> h -> stop		1201623	0		&&			
ANR	1201629	Identifier	dbg		1201623	0					
ANR	1201630	AndExpression	dbg -> h && dbg -> h -> stop		1201623	1		&&			
ANR	1201631	PtrMemberAccess	dbg -> h		1201623	0					
ANR	1201632	Identifier	dbg		1201623	0					
ANR	1201633	Identifier	h		1201623	1					
ANR	1201634	PtrMemberAccess	dbg -> h -> stop		1201623	1					
ANR	1201635	PtrMemberAccess	dbg -> h		1201623	0					
ANR	1201636	Identifier	dbg		1201623	0					
ANR	1201637	Identifier	h		1201623	1					
ANR	1201638	Identifier	stop		1201623	1					
ANR	1201639	CompoundStatement		2:36:37:37	1201623	1					
ANR	1201640	ReturnStatement	return dbg -> h -> stop ( dbg ) ;	456:2:11771:11796	1201623	0	True				
ANR	1201641	CallExpression	dbg -> h -> stop ( dbg )		1201623	0					
ANR	1201642	Callee	dbg -> h -> stop		1201623	0					
ANR	1201643	PtrMemberAccess	dbg -> h -> stop		1201623	0					
ANR	1201644	PtrMemberAccess	dbg -> h		1201623	0					
ANR	1201645	Identifier	dbg		1201623	0					
ANR	1201646	Identifier	h		1201623	1					
ANR	1201647	Identifier	stop		1201623	1					
ANR	1201648	ArgumentList	dbg		1201623	1					
ANR	1201649	Argument	dbg		1201623	0					
ANR	1201650	Identifier	dbg		1201623	0					
ANR	1201651	ReturnStatement	return false ;	458:1:11802:11814	1201623	1	True				
ANR	1201652	Identifier	false		1201623	0					
ANR	1201653	ReturnType	R_API int		1201623	1					
ANR	1201654	Identifier	r_debug_stop		1201623	2					
ANR	1201655	ParameterList	RDebug * dbg		1201623	3					
ANR	1201656	Parameter	RDebug * dbg	454:23:11716:11726	1201623	0	True				
ANR	1201657	ParameterType	RDebug *		1201623	0					
ANR	1201658	Identifier	dbg		1201623	1					
ANR	1201659	CFGEntryNode	ENTRY		1201623		True				
ANR	1201660	CFGExitNode	EXIT		1201623		True				
ANR	1201661	Symbol	dbg -> h		1201623						
ANR	1201662	Symbol	dbg -> h -> stop		1201623						
ANR	1201663	Symbol	dbg		1201623						
ANR	1201664	Symbol	* dbg -> h		1201623						
ANR	1201665	Symbol	false		1201623						
ANR	1201666	Symbol	* dbg		1201623						
ANR	1201667	Symbol	* * dbg		1201623						
ANR	1201668	Function	r_debug_set_arch	461:0:11819:12616							
ANR	1201669	FunctionDef	"r_debug_set_arch (RDebug * dbg , const char * arch , int bits)"		1201668	0					
ANR	1201670	CompoundStatement		461:69:11888:12616	1201668	0					
ANR	1201671	IfStatement	if ( arch && dbg && dbg -> h )		1201668	0					
ANR	1201672	Condition	arch && dbg && dbg -> h	462:5:11895:11915	1201668	0	True				
ANR	1201673	AndExpression	arch && dbg && dbg -> h		1201668	0		&&			
ANR	1201674	Identifier	arch		1201668	0					
ANR	1201675	AndExpression	dbg && dbg -> h		1201668	1		&&			
ANR	1201676	Identifier	dbg		1201668	0					
ANR	1201677	PtrMemberAccess	dbg -> h		1201668	1					
ANR	1201678	Identifier	dbg		1201668	0					
ANR	1201679	Identifier	h		1201668	1					
ANR	1201680	CompoundStatement		3:2:33:80	1201668	1					
ANR	1201681	IdentifierDeclStatement	"bool rc = r_sys_arch_match ( dbg -> h -> arch , arch ) ;"	463:2:11922:11969	1201668	0	True				
ANR	1201682	IdentifierDecl	"rc = r_sys_arch_match ( dbg -> h -> arch , arch )"		1201668	0					
ANR	1201683	IdentifierDeclType	bool		1201668	0					
ANR	1201684	Identifier	rc		1201668	1					
ANR	1201685	AssignmentExpression	"rc = r_sys_arch_match ( dbg -> h -> arch , arch )"		1201668	2		=			
ANR	1201686	Identifier	rc		1201668	0					
ANR	1201687	CallExpression	"r_sys_arch_match ( dbg -> h -> arch , arch )"		1201668	1					
ANR	1201688	Callee	r_sys_arch_match		1201668	0					
ANR	1201689	Identifier	r_sys_arch_match		1201668	0					
ANR	1201690	ArgumentList	dbg -> h -> arch		1201668	1					
ANR	1201691	Argument	dbg -> h -> arch		1201668	0					
ANR	1201692	PtrMemberAccess	dbg -> h -> arch		1201668	0					
ANR	1201693	PtrMemberAccess	dbg -> h		1201668	0					
ANR	1201694	Identifier	dbg		1201668	0					
ANR	1201695	Identifier	h		1201668	1					
ANR	1201696	Identifier	arch		1201668	1					
ANR	1201697	Argument	arch		1201668	1					
ANR	1201698	Identifier	arch		1201668	0					
ANR	1201699	IfStatement	if ( rc )		1201668	1					
ANR	1201700	Condition	rc	464:6:11977:11978	1201668	0	True				
ANR	1201701	Identifier	rc		1201668	0					
ANR	1201702	CompoundStatement		4:10:92:92	1201668	1					
ANR	1201703	SwitchStatement	switch ( bits )		1201668	0					
ANR	1201704	Condition	bits	465:11:11994:11997	1201668	0	True				
ANR	1201705	Identifier	bits		1201668	0					
ANR	1201706	CompoundStatement		5:17:111:111	1201668	1					
ANR	1201707	Label	case 27 :	466:3:12005:12012	1201668	0	True				
ANR	1201708	IfStatement	if ( dbg -> h -> bits == 27 )		1201668	1					
ANR	1201709	Condition	dbg -> h -> bits == 27	467:8:12022:12039	1201668	0	True				
ANR	1201710	EqualityExpression	dbg -> h -> bits == 27		1201668	0		==			
ANR	1201711	PtrMemberAccess	dbg -> h -> bits		1201668	0					
ANR	1201712	PtrMemberAccess	dbg -> h		1201668	0					
ANR	1201713	Identifier	dbg		1201668	0					
ANR	1201714	Identifier	h		1201668	1					
ANR	1201715	Identifier	bits		1201668	1					
ANR	1201716	PrimaryExpression	27		1201668	1					
ANR	1201717	CompoundStatement		7:28:153:153	1201668	1					
ANR	1201718	ExpressionStatement	dbg -> bits = 27	468:5:12049:12063	1201668	0	True				
ANR	1201719	AssignmentExpression	dbg -> bits = 27		1201668	0		=			
ANR	1201720	PtrMemberAccess	dbg -> bits		1201668	0					
ANR	1201721	Identifier	dbg		1201668	0					
ANR	1201722	Identifier	bits		1201668	1					
ANR	1201723	PrimaryExpression	27		1201668	1					
ANR	1201724	BreakStatement	break ;	470:4:12075:12080	1201668	2	True				
ANR	1201725	Label	case 32 :	471:3:12085:12092	1201668	3	True				
ANR	1201726	IfStatement	if ( dbg -> h -> bits & R_SYS_BITS_32 )		1201668	4					
ANR	1201727	Condition	dbg -> h -> bits & R_SYS_BITS_32	472:8:12102:12129	1201668	0	True				
ANR	1201728	BitAndExpression	dbg -> h -> bits & R_SYS_BITS_32		1201668	0		&			
ANR	1201729	PtrMemberAccess	dbg -> h -> bits		1201668	0					
ANR	1201730	PtrMemberAccess	dbg -> h		1201668	0					
ANR	1201731	Identifier	dbg		1201668	0					
ANR	1201732	Identifier	h		1201668	1					
ANR	1201733	Identifier	bits		1201668	1					
ANR	1201734	Identifier	R_SYS_BITS_32		1201668	1					
ANR	1201735	CompoundStatement		12:38:243:243	1201668	1					
ANR	1201736	ExpressionStatement	dbg -> bits = R_SYS_BITS_32	473:5:12139:12164	1201668	0	True				
ANR	1201737	AssignmentExpression	dbg -> bits = R_SYS_BITS_32		1201668	0		=			
ANR	1201738	PtrMemberAccess	dbg -> bits		1201668	0					
ANR	1201739	Identifier	dbg		1201668	0					
ANR	1201740	Identifier	bits		1201668	1					
ANR	1201741	Identifier	R_SYS_BITS_32		1201668	1					
ANR	1201742	BreakStatement	break ;	475:4:12176:12181	1201668	5	True				
ANR	1201743	Label	case 64 :	476:3:12186:12193	1201668	6	True				
ANR	1201744	ExpressionStatement	dbg -> bits = R_SYS_BITS_64	477:4:12199:12224	1201668	7	True				
ANR	1201745	AssignmentExpression	dbg -> bits = R_SYS_BITS_64		1201668	0		=			
ANR	1201746	PtrMemberAccess	dbg -> bits		1201668	0					
ANR	1201747	Identifier	dbg		1201668	0					
ANR	1201748	Identifier	bits		1201668	1					
ANR	1201749	Identifier	R_SYS_BITS_64		1201668	1					
ANR	1201750	BreakStatement	break ;	478:4:12230:12235	1201668	8	True				
ANR	1201751	IfStatement	if ( ! dbg -> h -> bits )		1201668	1					
ANR	1201752	Condition	! dbg -> h -> bits	480:7:12249:12261	1201668	0	True				
ANR	1201753	UnaryOperationExpression	! dbg -> h -> bits		1201668	0					
ANR	1201754	UnaryOperator	!		1201668	0					
ANR	1201755	PtrMemberAccess	dbg -> h -> bits		1201668	1					
ANR	1201756	PtrMemberAccess	dbg -> h		1201668	0					
ANR	1201757	Identifier	dbg		1201668	0					
ANR	1201758	Identifier	h		1201668	1					
ANR	1201759	Identifier	bits		1201668	1					
ANR	1201760	CompoundStatement		20:22:375:375	1201668	1					
ANR	1201761	ExpressionStatement	dbg -> bits = dbg -> h -> bits	481:4:12270:12294	1201668	0	True				
ANR	1201762	AssignmentExpression	dbg -> bits = dbg -> h -> bits		1201668	0		=			
ANR	1201763	PtrMemberAccess	dbg -> bits		1201668	0					
ANR	1201764	Identifier	dbg		1201668	0					
ANR	1201765	Identifier	bits		1201668	1					
ANR	1201766	PtrMemberAccess	dbg -> h -> bits		1201668	1					
ANR	1201767	PtrMemberAccess	dbg -> h		1201668	0					
ANR	1201768	Identifier	dbg		1201668	0					
ANR	1201769	Identifier	h		1201668	1					
ANR	1201770	Identifier	bits		1201668	1					
ANR	1201771	ElseStatement	else		1201668	0					
ANR	1201772	IfStatement	if ( ! ( dbg -> h -> bits & dbg -> bits ) )		1201668	0					
ANR	1201773	Condition	! ( dbg -> h -> bits & dbg -> bits )	482:14:12310:12336	1201668	0	True				
ANR	1201774	UnaryOperationExpression	! ( dbg -> h -> bits & dbg -> bits )		1201668	0					
ANR	1201775	UnaryOperator	!		1201668	0					
ANR	1201776	BitAndExpression	dbg -> h -> bits & dbg -> bits		1201668	1		&			
ANR	1201777	PtrMemberAccess	dbg -> h -> bits		1201668	0					
ANR	1201778	PtrMemberAccess	dbg -> h		1201668	0					
ANR	1201779	Identifier	dbg		1201668	0					
ANR	1201780	Identifier	h		1201668	1					
ANR	1201781	Identifier	bits		1201668	1					
ANR	1201782	PtrMemberAccess	dbg -> bits		1201668	1					
ANR	1201783	Identifier	dbg		1201668	0					
ANR	1201784	Identifier	bits		1201668	1					
ANR	1201785	CompoundStatement		22:43:450:450	1201668	1					
ANR	1201786	ExpressionStatement	dbg -> bits = dbg -> h -> bits & R_SYS_BITS_64	483:4:12345:12385	1201668	0	True				
ANR	1201787	AssignmentExpression	dbg -> bits = dbg -> h -> bits & R_SYS_BITS_64		1201668	0		=			
ANR	1201788	PtrMemberAccess	dbg -> bits		1201668	0					
ANR	1201789	Identifier	dbg		1201668	0					
ANR	1201790	Identifier	bits		1201668	1					
ANR	1201791	BitAndExpression	dbg -> h -> bits & R_SYS_BITS_64		1201668	1		&			
ANR	1201792	PtrMemberAccess	dbg -> h -> bits		1201668	0					
ANR	1201793	PtrMemberAccess	dbg -> h		1201668	0					
ANR	1201794	Identifier	dbg		1201668	0					
ANR	1201795	Identifier	h		1201668	1					
ANR	1201796	Identifier	bits		1201668	1					
ANR	1201797	Identifier	R_SYS_BITS_64		1201668	1					
ANR	1201798	IfStatement	if ( ! dbg -> bits )		1201668	1					
ANR	1201799	Condition	! dbg -> bits	484:8:12395:12404	1201668	0	True				
ANR	1201800	UnaryOperationExpression	! dbg -> bits		1201668	0					
ANR	1201801	UnaryOperator	!		1201668	0					
ANR	1201802	PtrMemberAccess	dbg -> bits		1201668	1					
ANR	1201803	Identifier	dbg		1201668	0					
ANR	1201804	Identifier	bits		1201668	1					
ANR	1201805	CompoundStatement		24:20:518:518	1201668	1					
ANR	1201806	ExpressionStatement	dbg -> bits = dbg -> h -> bits & R_SYS_BITS_32	485:5:12414:12454	1201668	0	True				
ANR	1201807	AssignmentExpression	dbg -> bits = dbg -> h -> bits & R_SYS_BITS_32		1201668	0		=			
ANR	1201808	PtrMemberAccess	dbg -> bits		1201668	0					
ANR	1201809	Identifier	dbg		1201668	0					
ANR	1201810	Identifier	bits		1201668	1					
ANR	1201811	BitAndExpression	dbg -> h -> bits & R_SYS_BITS_32		1201668	1		&			
ANR	1201812	PtrMemberAccess	dbg -> h -> bits		1201668	0					
ANR	1201813	PtrMemberAccess	dbg -> h		1201668	0					
ANR	1201814	Identifier	dbg		1201668	0					
ANR	1201815	Identifier	h		1201668	1					
ANR	1201816	Identifier	bits		1201668	1					
ANR	1201817	Identifier	R_SYS_BITS_32		1201668	1					
ANR	1201818	IfStatement	if ( ! dbg -> bits )		1201668	2					
ANR	1201819	Condition	! dbg -> bits	487:8:12470:12479	1201668	0	True				
ANR	1201820	UnaryOperationExpression	! dbg -> bits		1201668	0					
ANR	1201821	UnaryOperator	!		1201668	0					
ANR	1201822	PtrMemberAccess	dbg -> bits		1201668	1					
ANR	1201823	Identifier	dbg		1201668	0					
ANR	1201824	Identifier	bits		1201668	1					
ANR	1201825	CompoundStatement		27:20:593:593	1201668	1					
ANR	1201826	ExpressionStatement	dbg -> bits = R_SYS_BITS_32	488:5:12489:12514	1201668	0	True				
ANR	1201827	AssignmentExpression	dbg -> bits = R_SYS_BITS_32		1201668	0		=			
ANR	1201828	PtrMemberAccess	dbg -> bits		1201668	0					
ANR	1201829	Identifier	dbg		1201668	0					
ANR	1201830	Identifier	bits		1201668	1					
ANR	1201831	Identifier	R_SYS_BITS_32		1201668	1					
ANR	1201832	ExpressionStatement	free ( dbg -> arch )	491:3:12530:12546	1201668	2	True				
ANR	1201833	CallExpression	free ( dbg -> arch )		1201668	0					
ANR	1201834	Callee	free		1201668	0					
ANR	1201835	Identifier	free		1201668	0					
ANR	1201836	ArgumentList	dbg -> arch		1201668	1					
ANR	1201837	Argument	dbg -> arch		1201668	0					
ANR	1201838	PtrMemberAccess	dbg -> arch		1201668	0					
ANR	1201839	Identifier	dbg		1201668	0					
ANR	1201840	Identifier	arch		1201668	1					
ANR	1201841	ExpressionStatement	dbg -> arch = strdup ( arch )	492:3:12551:12576	1201668	3	True				
ANR	1201842	AssignmentExpression	dbg -> arch = strdup ( arch )		1201668	0		=			
ANR	1201843	PtrMemberAccess	dbg -> arch		1201668	0					
ANR	1201844	Identifier	dbg		1201668	0					
ANR	1201845	Identifier	arch		1201668	1					
ANR	1201846	CallExpression	strdup ( arch )		1201668	1					
ANR	1201847	Callee	strdup		1201668	0					
ANR	1201848	Identifier	strdup		1201668	0					
ANR	1201849	ArgumentList	arch		1201668	1					
ANR	1201850	Argument	arch		1201668	0					
ANR	1201851	Identifier	arch		1201668	0					
ANR	1201852	ReturnStatement	return true ;	493:3:12581:12592	1201668	4	True				
ANR	1201853	Identifier	true		1201668	0					
ANR	1201854	ReturnStatement	return false ;	496:1:12602:12614	1201668	1	True				
ANR	1201855	Identifier	false		1201668	0					
ANR	1201856	ReturnType	R_API bool		1201668	1					
ANR	1201857	Identifier	r_debug_set_arch		1201668	2					
ANR	1201858	ParameterList	"RDebug * dbg , const char * arch , int bits"		1201668	3					
ANR	1201859	Parameter	RDebug * dbg	461:28:11847:11857	1201668	0	True				
ANR	1201860	ParameterType	RDebug *		1201668	0					
ANR	1201861	Identifier	dbg		1201668	1					
ANR	1201862	Parameter	const char * arch	461:41:11860:11875	1201668	1	True				
ANR	1201863	ParameterType	const char *		1201668	0					
ANR	1201864	Identifier	arch		1201668	1					
ANR	1201865	Parameter	int bits	461:59:11878:11885	1201668	2	True				
ANR	1201866	ParameterType	int		1201668	0					
ANR	1201867	Identifier	bits		1201668	1					
ANR	1201868	CFGEntryNode	ENTRY		1201668		True				
ANR	1201869	CFGExitNode	EXIT		1201668		True				
ANR	1201870	Symbol	dbg -> h		1201668						
ANR	1201871	Symbol	dbg		1201668						
ANR	1201872	Symbol	bits		1201668						
ANR	1201873	Symbol	* dbg -> h		1201668						
ANR	1201874	Symbol	false		1201668						
ANR	1201875	Symbol	dbg -> bits		1201668						
ANR	1201876	Symbol	r_sys_arch_match		1201668						
ANR	1201877	Symbol	* dbg		1201668						
ANR	1201878	Symbol	dbg -> h -> bits		1201668						
ANR	1201879	Symbol	rc		1201668						
ANR	1201880	Symbol	true		1201668						
ANR	1201881	Symbol	dbg -> arch		1201668						
ANR	1201882	Symbol	arch		1201668						
ANR	1201883	Symbol	strdup		1201668						
ANR	1201884	Symbol	* * dbg		1201668						
ANR	1201885	Symbol	R_SYS_BITS_64		1201668						
ANR	1201886	Symbol	dbg -> h -> arch		1201668						
ANR	1201887	Symbol	R_SYS_BITS_32		1201668						
ANR	1201888	Function	r_debug_execute	504:0:12742:14583							
ANR	1201889	FunctionDef	"r_debug_execute (RDebug * dbg , const ut8 * buf , int len , int restore)"		1201888	0					
ANR	1201890	CompoundStatement		504:78:12820:14583	1201888	0					
ANR	1201891	IdentifierDeclStatement	int orig_sz ;	505:1:12823:12834	1201888	0	True				
ANR	1201892	IdentifierDecl	orig_sz		1201888	0					
ANR	1201893	IdentifierDeclType	int		1201888	0					
ANR	1201894	Identifier	orig_sz		1201888	1					
ANR	1201895	IdentifierDeclStatement	ut8 stackbackup [ 4096 ] ;	506:1:12837:12858	1201888	1	True				
ANR	1201896	IdentifierDecl	stackbackup [ 4096 ]		1201888	0					
ANR	1201897	IdentifierDeclType	ut8 [ 4096 ]		1201888	0					
ANR	1201898	Identifier	stackbackup		1201888	1					
ANR	1201899	PrimaryExpression	4096		1201888	2					
ANR	1201900	IdentifierDeclStatement	"ut8 * backup , * orig = NULL ;"	507:1:12861:12886	1201888	2	True				
ANR	1201901	IdentifierDecl	* backup		1201888	0					
ANR	1201902	IdentifierDeclType	ut8 *		1201888	0					
ANR	1201903	Identifier	backup		1201888	1					
ANR	1201904	IdentifierDecl	* orig = NULL		1201888	1					
ANR	1201905	IdentifierDeclType	ut8 *		1201888	0					
ANR	1201906	Identifier	orig		1201888	1					
ANR	1201907	AssignmentExpression	* orig = NULL		1201888	2		=			
ANR	1201908	Identifier	NULL		1201888	0					
ANR	1201909	Identifier	NULL		1201888	1					
ANR	1201910	IdentifierDeclStatement	"RRegItem * ri , * risp , * ripc ;"	508:1:12889:12915	1201888	3	True				
ANR	1201911	IdentifierDecl	* ri		1201888	0					
ANR	1201912	IdentifierDeclType	RRegItem *		1201888	0					
ANR	1201913	Identifier	ri		1201888	1					
ANR	1201914	IdentifierDecl	* risp		1201888	1					
ANR	1201915	IdentifierDeclType	RRegItem *		1201888	0					
ANR	1201916	Identifier	risp		1201888	1					
ANR	1201917	IdentifierDecl	* ripc		1201888	2					
ANR	1201918	IdentifierDeclType	RRegItem *		1201888	0					
ANR	1201919	Identifier	ripc		1201888	1					
ANR	1201920	Statement	ut64	509:1:12918:12921	1201888	4	True				
ANR	1201921	Statement	rsp	509:6:12923:12925	1201888	5	True				
ANR	1201922	Statement	","	509:9:12926:12926	1201888	6	True				
ANR	1201923	Statement	rpc	509:11:12928:12930	1201888	7	True				
ANR	1201924	Statement	","	509:14:12931:12931	1201888	8	True				
ANR	1201925	Statement	ra0	509:16:12933:12935	1201888	9	True				
ANR	1201926	Statement	=	509:20:12937:12937	1201888	10	True				
ANR	1201927	Statement	0L	509:22:12939:12940	1201888	11	True				
ANR	1201928	ExpressionStatement	L	509:24:12941:12942	1201888	12	True				
ANR	1201929	Identifier	L		1201888	0					
ANR	1201930	IfStatement	if ( r_debug_is_dead ( dbg ) )		1201888	13					
ANR	1201931	Condition	r_debug_is_dead ( dbg )	510:5:12949:12969	1201888	0	True				
ANR	1201932	CallExpression	r_debug_is_dead ( dbg )		1201888	0					
ANR	1201933	Callee	r_debug_is_dead		1201888	0					
ANR	1201934	Identifier	r_debug_is_dead		1201888	0					
ANR	1201935	ArgumentList	dbg		1201888	1					
ANR	1201936	Argument	dbg		1201888	0					
ANR	1201937	Identifier	dbg		1201888	0					
ANR	1201938	CompoundStatement		7:28:151:151	1201888	1					
ANR	1201939	ReturnStatement	return false ;	511:2:12976:12988	1201888	0	True				
ANR	1201940	Identifier	false		1201888	0					
ANR	1201941	ExpressionStatement	"ripc = r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_PC ] , R_REG_TYPE_GPR )"	513:1:12994:13068	1201888	14	True				
ANR	1201942	AssignmentExpression	"ripc = r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_PC ] , R_REG_TYPE_GPR )"		1201888	0		=			
ANR	1201943	Identifier	ripc		1201888	0					
ANR	1201944	CallExpression	"r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_PC ] , R_REG_TYPE_GPR )"		1201888	1					
ANR	1201945	Callee	r_reg_get		1201888	0					
ANR	1201946	Identifier	r_reg_get		1201888	0					
ANR	1201947	ArgumentList	dbg -> reg		1201888	1					
ANR	1201948	Argument	dbg -> reg		1201888	0					
ANR	1201949	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1201950	Identifier	dbg		1201888	0					
ANR	1201951	Identifier	reg		1201888	1					
ANR	1201952	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1201888	1					
ANR	1201953	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1201888	0					
ANR	1201954	PtrMemberAccess	dbg -> reg -> name		1201888	0					
ANR	1201955	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1201956	Identifier	dbg		1201888	0					
ANR	1201957	Identifier	reg		1201888	1					
ANR	1201958	Identifier	name		1201888	1					
ANR	1201959	Identifier	R_REG_NAME_PC		1201888	1					
ANR	1201960	Argument	R_REG_TYPE_GPR		1201888	2					
ANR	1201961	Identifier	R_REG_TYPE_GPR		1201888	0					
ANR	1201962	ExpressionStatement	"risp = r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_SP ] , R_REG_TYPE_GPR )"	514:1:13071:13145	1201888	15	True				
ANR	1201963	AssignmentExpression	"risp = r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_SP ] , R_REG_TYPE_GPR )"		1201888	0		=			
ANR	1201964	Identifier	risp		1201888	0					
ANR	1201965	CallExpression	"r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_SP ] , R_REG_TYPE_GPR )"		1201888	1					
ANR	1201966	Callee	r_reg_get		1201888	0					
ANR	1201967	Identifier	r_reg_get		1201888	0					
ANR	1201968	ArgumentList	dbg -> reg		1201888	1					
ANR	1201969	Argument	dbg -> reg		1201888	0					
ANR	1201970	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1201971	Identifier	dbg		1201888	0					
ANR	1201972	Identifier	reg		1201888	1					
ANR	1201973	Argument	dbg -> reg -> name [ R_REG_NAME_SP ]		1201888	1					
ANR	1201974	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_SP ]		1201888	0					
ANR	1201975	PtrMemberAccess	dbg -> reg -> name		1201888	0					
ANR	1201976	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1201977	Identifier	dbg		1201888	0					
ANR	1201978	Identifier	reg		1201888	1					
ANR	1201979	Identifier	name		1201888	1					
ANR	1201980	Identifier	R_REG_NAME_SP		1201888	1					
ANR	1201981	Argument	R_REG_TYPE_GPR		1201888	2					
ANR	1201982	Identifier	R_REG_TYPE_GPR		1201888	0					
ANR	1201983	IfStatement	if ( ripc )		1201888	16					
ANR	1201984	Condition	ripc	515:5:13152:13155	1201888	0	True				
ANR	1201985	Identifier	ripc		1201888	0					
ANR	1201986	CompoundStatement		12:11:337:337	1201888	1					
ANR	1201987	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	516:2:13162:13207	1201888	0	True				
ANR	1201988	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1201888	0					
ANR	1201989	Callee	r_debug_reg_sync		1201888	0					
ANR	1201990	Identifier	r_debug_reg_sync		1201888	0					
ANR	1201991	ArgumentList	dbg		1201888	1					
ANR	1201992	Argument	dbg		1201888	0					
ANR	1201993	Identifier	dbg		1201888	0					
ANR	1201994	Argument	R_REG_TYPE_GPR		1201888	1					
ANR	1201995	Identifier	R_REG_TYPE_GPR		1201888	0					
ANR	1201996	Argument	false		1201888	2					
ANR	1201997	Identifier	false		1201888	0					
ANR	1201998	ExpressionStatement	"orig = r_reg_get_bytes ( dbg -> reg , - 1 , & orig_sz )"	517:2:13211:13258	1201888	1	True				
ANR	1201999	AssignmentExpression	"orig = r_reg_get_bytes ( dbg -> reg , - 1 , & orig_sz )"		1201888	0		=			
ANR	1202000	Identifier	orig		1201888	0					
ANR	1202001	CallExpression	"r_reg_get_bytes ( dbg -> reg , - 1 , & orig_sz )"		1201888	1					
ANR	1202002	Callee	r_reg_get_bytes		1201888	0					
ANR	1202003	Identifier	r_reg_get_bytes		1201888	0					
ANR	1202004	ArgumentList	dbg -> reg		1201888	1					
ANR	1202005	Argument	dbg -> reg		1201888	0					
ANR	1202006	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1202007	Identifier	dbg		1201888	0					
ANR	1202008	Identifier	reg		1201888	1					
ANR	1202009	Argument	- 1		1201888	1					
ANR	1202010	UnaryOperationExpression	- 1		1201888	0					
ANR	1202011	UnaryOperator	-		1201888	0					
ANR	1202012	PrimaryExpression	1		1201888	1					
ANR	1202013	Argument	& orig_sz		1201888	2					
ANR	1202014	UnaryOperationExpression	& orig_sz		1201888	0					
ANR	1202015	UnaryOperator	&		1201888	0					
ANR	1202016	Identifier	orig_sz		1201888	1					
ANR	1202017	IfStatement	if ( ! orig )		1201888	2					
ANR	1202018	Condition	! orig	518:6:13266:13270	1201888	0	True				
ANR	1202019	UnaryOperationExpression	! orig		1201888	0					
ANR	1202020	UnaryOperator	!		1201888	0					
ANR	1202021	Identifier	orig		1201888	1					
ANR	1202022	CompoundStatement		15:13:452:452	1201888	1					
ANR	1202023	ExpressionStatement	"eprintf ( ""Cannot get register arena bytes\\n"" )"	519:3:13278:13323	1201888	0	True				
ANR	1202024	CallExpression	"eprintf ( ""Cannot get register arena bytes\\n"" )"		1201888	0					
ANR	1202025	Callee	eprintf		1201888	0					
ANR	1202026	Identifier	eprintf		1201888	0					
ANR	1202027	ArgumentList	"""Cannot get register arena bytes\\n"""		1201888	1					
ANR	1202028	Argument	"""Cannot get register arena bytes\\n"""		1201888	0					
ANR	1202029	PrimaryExpression	"""Cannot get register arena bytes\\n"""		1201888	0					
ANR	1202030	Statement	return	520:3:13328:13333	1201888	1	True				
ANR	1202031	Statement	0L	520:10:13335:13336	1201888	2	True				
ANR	1202032	ExpressionStatement	L	520:12:13337:13338	1201888	3	True				
ANR	1202033	Identifier	L		1201888	0					
ANR	1202034	ExpressionStatement	"rpc = r_reg_get_value ( dbg -> reg , ripc )"	522:2:13346:13384	1201888	3	True				
ANR	1202035	AssignmentExpression	"rpc = r_reg_get_value ( dbg -> reg , ripc )"		1201888	0		=			
ANR	1202036	Identifier	rpc		1201888	0					
ANR	1202037	CallExpression	"r_reg_get_value ( dbg -> reg , ripc )"		1201888	1					
ANR	1202038	Callee	r_reg_get_value		1201888	0					
ANR	1202039	Identifier	r_reg_get_value		1201888	0					
ANR	1202040	ArgumentList	dbg -> reg		1201888	1					
ANR	1202041	Argument	dbg -> reg		1201888	0					
ANR	1202042	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1202043	Identifier	dbg		1201888	0					
ANR	1202044	Identifier	reg		1201888	1					
ANR	1202045	Argument	ripc		1201888	1					
ANR	1202046	Identifier	ripc		1201888	0					
ANR	1202047	ExpressionStatement	"rsp = r_reg_get_value ( dbg -> reg , risp )"	523:2:13388:13426	1201888	4	True				
ANR	1202048	AssignmentExpression	"rsp = r_reg_get_value ( dbg -> reg , risp )"		1201888	0		=			
ANR	1202049	Identifier	rsp		1201888	0					
ANR	1202050	CallExpression	"r_reg_get_value ( dbg -> reg , risp )"		1201888	1					
ANR	1202051	Callee	r_reg_get_value		1201888	0					
ANR	1202052	Identifier	r_reg_get_value		1201888	0					
ANR	1202053	ArgumentList	dbg -> reg		1201888	1					
ANR	1202054	Argument	dbg -> reg		1201888	0					
ANR	1202055	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1202056	Identifier	dbg		1201888	0					
ANR	1202057	Identifier	reg		1201888	1					
ANR	1202058	Argument	risp		1201888	1					
ANR	1202059	Identifier	risp		1201888	0					
ANR	1202060	ExpressionStatement	backup = malloc ( len )	525:2:13431:13452	1201888	5	True				
ANR	1202061	AssignmentExpression	backup = malloc ( len )		1201888	0		=			
ANR	1202062	Identifier	backup		1201888	0					
ANR	1202063	CallExpression	malloc ( len )		1201888	1					
ANR	1202064	Callee	malloc		1201888	0					
ANR	1202065	Identifier	malloc		1201888	0					
ANR	1202066	ArgumentList	len		1201888	1					
ANR	1202067	Argument	len		1201888	0					
ANR	1202068	Identifier	len		1201888	0					
ANR	1202069	IfStatement	if ( ! backup )		1201888	6					
ANR	1202070	Condition	! backup	526:6:13460:13466	1201888	0	True				
ANR	1202071	UnaryOperationExpression	! backup		1201888	0					
ANR	1202072	UnaryOperator	!		1201888	0					
ANR	1202073	Identifier	backup		1201888	1					
ANR	1202074	CompoundStatement		23:15:648:648	1201888	1					
ANR	1202075	ExpressionStatement	free ( orig )	527:3:13474:13485	1201888	0	True				
ANR	1202076	CallExpression	free ( orig )		1201888	0					
ANR	1202077	Callee	free		1201888	0					
ANR	1202078	Identifier	free		1201888	0					
ANR	1202079	ArgumentList	orig		1201888	1					
ANR	1202080	Argument	orig		1201888	0					
ANR	1202081	Identifier	orig		1201888	0					
ANR	1202082	Statement	return	528:3:13490:13495	1201888	1	True				
ANR	1202083	Statement	0L	528:10:13497:13498	1201888	2	True				
ANR	1202084	ExpressionStatement	L	528:12:13499:13500	1201888	3	True				
ANR	1202085	Identifier	L		1201888	0					
ANR	1202086	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , rpc , backup , len )"	530:2:13508:13556	1201888	7	True				
ANR	1202087	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , rpc , backup , len )"		1201888	0					
ANR	1202088	Callee	dbg -> iob . read_at		1201888	0					
ANR	1202089	MemberAccess	dbg -> iob . read_at		1201888	0					
ANR	1202090	PtrMemberAccess	dbg -> iob		1201888	0					
ANR	1202091	Identifier	dbg		1201888	0					
ANR	1202092	Identifier	iob		1201888	1					
ANR	1202093	Identifier	read_at		1201888	1					
ANR	1202094	ArgumentList	dbg -> iob . io		1201888	1					
ANR	1202095	Argument	dbg -> iob . io		1201888	0					
ANR	1202096	MemberAccess	dbg -> iob . io		1201888	0					
ANR	1202097	PtrMemberAccess	dbg -> iob		1201888	0					
ANR	1202098	Identifier	dbg		1201888	0					
ANR	1202099	Identifier	iob		1201888	1					
ANR	1202100	Identifier	io		1201888	1					
ANR	1202101	Argument	rpc		1201888	1					
ANR	1202102	Identifier	rpc		1201888	0					
ANR	1202103	Argument	backup		1201888	2					
ANR	1202104	Identifier	backup		1201888	0					
ANR	1202105	Argument	len		1201888	3					
ANR	1202106	Identifier	len		1201888	0					
ANR	1202107	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , rsp , stackbackup , len )"	531:2:13560:13613	1201888	8	True				
ANR	1202108	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , rsp , stackbackup , len )"		1201888	0					
ANR	1202109	Callee	dbg -> iob . read_at		1201888	0					
ANR	1202110	MemberAccess	dbg -> iob . read_at		1201888	0					
ANR	1202111	PtrMemberAccess	dbg -> iob		1201888	0					
ANR	1202112	Identifier	dbg		1201888	0					
ANR	1202113	Identifier	iob		1201888	1					
ANR	1202114	Identifier	read_at		1201888	1					
ANR	1202115	ArgumentList	dbg -> iob . io		1201888	1					
ANR	1202116	Argument	dbg -> iob . io		1201888	0					
ANR	1202117	MemberAccess	dbg -> iob . io		1201888	0					
ANR	1202118	PtrMemberAccess	dbg -> iob		1201888	0					
ANR	1202119	Identifier	dbg		1201888	0					
ANR	1202120	Identifier	iob		1201888	1					
ANR	1202121	Identifier	io		1201888	1					
ANR	1202122	Argument	rsp		1201888	1					
ANR	1202123	Identifier	rsp		1201888	0					
ANR	1202124	Argument	stackbackup		1201888	2					
ANR	1202125	Identifier	stackbackup		1201888	0					
ANR	1202126	Argument	len		1201888	3					
ANR	1202127	Identifier	len		1201888	0					
ANR	1202128	ExpressionStatement	"r_bp_add_sw ( dbg -> bp , rpc + len , dbg -> bpsize , R_BP_PROT_EXEC )"	533:2:13618:13677	1201888	9	True				
ANR	1202129	CallExpression	"r_bp_add_sw ( dbg -> bp , rpc + len , dbg -> bpsize , R_BP_PROT_EXEC )"		1201888	0					
ANR	1202130	Callee	r_bp_add_sw		1201888	0					
ANR	1202131	Identifier	r_bp_add_sw		1201888	0					
ANR	1202132	ArgumentList	dbg -> bp		1201888	1					
ANR	1202133	Argument	dbg -> bp		1201888	0					
ANR	1202134	PtrMemberAccess	dbg -> bp		1201888	0					
ANR	1202135	Identifier	dbg		1201888	0					
ANR	1202136	Identifier	bp		1201888	1					
ANR	1202137	Argument	rpc + len		1201888	1					
ANR	1202138	AdditiveExpression	rpc + len		1201888	0		+			
ANR	1202139	Identifier	rpc		1201888	0					
ANR	1202140	Identifier	len		1201888	1					
ANR	1202141	Argument	dbg -> bpsize		1201888	2					
ANR	1202142	PtrMemberAccess	dbg -> bpsize		1201888	0					
ANR	1202143	Identifier	dbg		1201888	0					
ANR	1202144	Identifier	bpsize		1201888	1					
ANR	1202145	Argument	R_BP_PROT_EXEC		1201888	3					
ANR	1202146	Identifier	R_BP_PROT_EXEC		1201888	0					
ANR	1202147	ExpressionStatement	"dbg -> iob . write_at ( dbg -> iob . io , rpc , buf , len )"	536:2:13708:13754	1201888	10	True				
ANR	1202148	CallExpression	"dbg -> iob . write_at ( dbg -> iob . io , rpc , buf , len )"		1201888	0					
ANR	1202149	Callee	dbg -> iob . write_at		1201888	0					
ANR	1202150	MemberAccess	dbg -> iob . write_at		1201888	0					
ANR	1202151	PtrMemberAccess	dbg -> iob		1201888	0					
ANR	1202152	Identifier	dbg		1201888	0					
ANR	1202153	Identifier	iob		1201888	1					
ANR	1202154	Identifier	write_at		1201888	1					
ANR	1202155	ArgumentList	dbg -> iob . io		1201888	1					
ANR	1202156	Argument	dbg -> iob . io		1201888	0					
ANR	1202157	MemberAccess	dbg -> iob . io		1201888	0					
ANR	1202158	PtrMemberAccess	dbg -> iob		1201888	0					
ANR	1202159	Identifier	dbg		1201888	0					
ANR	1202160	Identifier	iob		1201888	1					
ANR	1202161	Identifier	io		1201888	1					
ANR	1202162	Argument	rpc		1201888	1					
ANR	1202163	Identifier	rpc		1201888	0					
ANR	1202164	Argument	buf		1201888	2					
ANR	1202165	Identifier	buf		1201888	0					
ANR	1202166	Argument	len		1201888	3					
ANR	1202167	Identifier	len		1201888	0					
ANR	1202168	ExpressionStatement	r_debug_continue ( dbg )	538:2:13813:13835	1201888	11	True				
ANR	1202169	CallExpression	r_debug_continue ( dbg )		1201888	0					
ANR	1202170	Callee	r_debug_continue		1201888	0					
ANR	1202171	Identifier	r_debug_continue		1201888	0					
ANR	1202172	ArgumentList	dbg		1201888	1					
ANR	1202173	Argument	dbg		1201888	0					
ANR	1202174	Identifier	dbg		1201888	0					
ANR	1202175	ExpressionStatement	"r_bp_del ( dbg -> bp , rpc + len )"	542:2:13925:13952	1201888	12	True				
ANR	1202176	CallExpression	"r_bp_del ( dbg -> bp , rpc + len )"		1201888	0					
ANR	1202177	Callee	r_bp_del		1201888	0					
ANR	1202178	Identifier	r_bp_del		1201888	0					
ANR	1202179	ArgumentList	dbg -> bp		1201888	1					
ANR	1202180	Argument	dbg -> bp		1201888	0					
ANR	1202181	PtrMemberAccess	dbg -> bp		1201888	0					
ANR	1202182	Identifier	dbg		1201888	0					
ANR	1202183	Identifier	bp		1201888	1					
ANR	1202184	Argument	rpc + len		1201888	1					
ANR	1202185	AdditiveExpression	rpc + len		1201888	0		+			
ANR	1202186	Identifier	rpc		1201888	0					
ANR	1202187	Identifier	len		1201888	1					
ANR	1202188	ExpressionStatement	"dbg -> iob . write_at ( dbg -> iob . io , rpc , backup , len )"	543:2:13956:14005	1201888	13	True				
ANR	1202189	CallExpression	"dbg -> iob . write_at ( dbg -> iob . io , rpc , backup , len )"		1201888	0					
ANR	1202190	Callee	dbg -> iob . write_at		1201888	0					
ANR	1202191	MemberAccess	dbg -> iob . write_at		1201888	0					
ANR	1202192	PtrMemberAccess	dbg -> iob		1201888	0					
ANR	1202193	Identifier	dbg		1201888	0					
ANR	1202194	Identifier	iob		1201888	1					
ANR	1202195	Identifier	write_at		1201888	1					
ANR	1202196	ArgumentList	dbg -> iob . io		1201888	1					
ANR	1202197	Argument	dbg -> iob . io		1201888	0					
ANR	1202198	MemberAccess	dbg -> iob . io		1201888	0					
ANR	1202199	PtrMemberAccess	dbg -> iob		1201888	0					
ANR	1202200	Identifier	dbg		1201888	0					
ANR	1202201	Identifier	iob		1201888	1					
ANR	1202202	Identifier	io		1201888	1					
ANR	1202203	Argument	rpc		1201888	1					
ANR	1202204	Identifier	rpc		1201888	0					
ANR	1202205	Argument	backup		1201888	2					
ANR	1202206	Identifier	backup		1201888	0					
ANR	1202207	Argument	len		1201888	3					
ANR	1202208	Identifier	len		1201888	0					
ANR	1202209	IfStatement	if ( restore )		1201888	14					
ANR	1202210	Condition	restore	544:6:14013:14019	1201888	0	True				
ANR	1202211	Identifier	restore		1201888	0					
ANR	1202212	CompoundStatement		41:15:1201:1201	1201888	1					
ANR	1202213	ExpressionStatement	"dbg -> iob . write_at ( dbg -> iob . io , rsp , stackbackup , len )"	545:3:14027:14081	1201888	0	True				
ANR	1202214	CallExpression	"dbg -> iob . write_at ( dbg -> iob . io , rsp , stackbackup , len )"		1201888	0					
ANR	1202215	Callee	dbg -> iob . write_at		1201888	0					
ANR	1202216	MemberAccess	dbg -> iob . write_at		1201888	0					
ANR	1202217	PtrMemberAccess	dbg -> iob		1201888	0					
ANR	1202218	Identifier	dbg		1201888	0					
ANR	1202219	Identifier	iob		1201888	1					
ANR	1202220	Identifier	write_at		1201888	1					
ANR	1202221	ArgumentList	dbg -> iob . io		1201888	1					
ANR	1202222	Argument	dbg -> iob . io		1201888	0					
ANR	1202223	MemberAccess	dbg -> iob . io		1201888	0					
ANR	1202224	PtrMemberAccess	dbg -> iob		1201888	0					
ANR	1202225	Identifier	dbg		1201888	0					
ANR	1202226	Identifier	iob		1201888	1					
ANR	1202227	Identifier	io		1201888	1					
ANR	1202228	Argument	rsp		1201888	1					
ANR	1202229	Identifier	rsp		1201888	0					
ANR	1202230	Argument	stackbackup		1201888	2					
ANR	1202231	Identifier	stackbackup		1201888	0					
ANR	1202232	Argument	len		1201888	3					
ANR	1202233	Identifier	len		1201888	0					
ANR	1202234	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	548:2:14090:14135	1201888	15	True				
ANR	1202235	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1201888	0					
ANR	1202236	Callee	r_debug_reg_sync		1201888	0					
ANR	1202237	Identifier	r_debug_reg_sync		1201888	0					
ANR	1202238	ArgumentList	dbg		1201888	1					
ANR	1202239	Argument	dbg		1201888	0					
ANR	1202240	Identifier	dbg		1201888	0					
ANR	1202241	Argument	R_REG_TYPE_GPR		1201888	1					
ANR	1202242	Identifier	R_REG_TYPE_GPR		1201888	0					
ANR	1202243	Argument	false		1201888	2					
ANR	1202244	Identifier	false		1201888	0					
ANR	1202245	ExpressionStatement	"ri = r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_A0 ] , R_REG_TYPE_GPR )"	549:2:14139:14211	1201888	16	True				
ANR	1202246	AssignmentExpression	"ri = r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_A0 ] , R_REG_TYPE_GPR )"		1201888	0		=			
ANR	1202247	Identifier	ri		1201888	0					
ANR	1202248	CallExpression	"r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_A0 ] , R_REG_TYPE_GPR )"		1201888	1					
ANR	1202249	Callee	r_reg_get		1201888	0					
ANR	1202250	Identifier	r_reg_get		1201888	0					
ANR	1202251	ArgumentList	dbg -> reg		1201888	1					
ANR	1202252	Argument	dbg -> reg		1201888	0					
ANR	1202253	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1202254	Identifier	dbg		1201888	0					
ANR	1202255	Identifier	reg		1201888	1					
ANR	1202256	Argument	dbg -> reg -> name [ R_REG_NAME_A0 ]		1201888	1					
ANR	1202257	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_A0 ]		1201888	0					
ANR	1202258	PtrMemberAccess	dbg -> reg -> name		1201888	0					
ANR	1202259	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1202260	Identifier	dbg		1201888	0					
ANR	1202261	Identifier	reg		1201888	1					
ANR	1202262	Identifier	name		1201888	1					
ANR	1202263	Identifier	R_REG_NAME_A0		1201888	1					
ANR	1202264	Argument	R_REG_TYPE_GPR		1201888	2					
ANR	1202265	Identifier	R_REG_TYPE_GPR		1201888	0					
ANR	1202266	ExpressionStatement	"ra0 = r_reg_get_value ( dbg -> reg , ri )"	550:2:14215:14251	1201888	17	True				
ANR	1202267	AssignmentExpression	"ra0 = r_reg_get_value ( dbg -> reg , ri )"		1201888	0		=			
ANR	1202268	Identifier	ra0		1201888	0					
ANR	1202269	CallExpression	"r_reg_get_value ( dbg -> reg , ri )"		1201888	1					
ANR	1202270	Callee	r_reg_get_value		1201888	0					
ANR	1202271	Identifier	r_reg_get_value		1201888	0					
ANR	1202272	ArgumentList	dbg -> reg		1201888	1					
ANR	1202273	Argument	dbg -> reg		1201888	0					
ANR	1202274	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1202275	Identifier	dbg		1201888	0					
ANR	1202276	Identifier	reg		1201888	1					
ANR	1202277	Argument	ri		1201888	1					
ANR	1202278	Identifier	ri		1201888	0					
ANR	1202279	IfStatement	if ( restore )		1201888	18					
ANR	1202280	Condition	restore	551:6:14259:14265	1201888	0	True				
ANR	1202281	Identifier	restore		1201888	0					
ANR	1202282	CompoundStatement		48:15:1447:1447	1201888	1					
ANR	1202283	ExpressionStatement	"r_reg_read_regs ( dbg -> reg , orig , orig_sz )"	552:3:14273:14314	1201888	0	True				
ANR	1202284	CallExpression	"r_reg_read_regs ( dbg -> reg , orig , orig_sz )"		1201888	0					
ANR	1202285	Callee	r_reg_read_regs		1201888	0					
ANR	1202286	Identifier	r_reg_read_regs		1201888	0					
ANR	1202287	ArgumentList	dbg -> reg		1201888	1					
ANR	1202288	Argument	dbg -> reg		1201888	0					
ANR	1202289	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1202290	Identifier	dbg		1201888	0					
ANR	1202291	Identifier	reg		1201888	1					
ANR	1202292	Argument	orig		1201888	1					
ANR	1202293	Identifier	orig		1201888	0					
ANR	1202294	Argument	orig_sz		1201888	2					
ANR	1202295	Identifier	orig_sz		1201888	0					
ANR	1202296	ElseStatement	else		1201888	0					
ANR	1202297	CompoundStatement		50:9:1504:1504	1201888	0					
ANR	1202298	ExpressionStatement	"r_reg_set_value ( dbg -> reg , ripc , rpc )"	554:3:14330:14367	1201888	0	True				
ANR	1202299	CallExpression	"r_reg_set_value ( dbg -> reg , ripc , rpc )"		1201888	0					
ANR	1202300	Callee	r_reg_set_value		1201888	0					
ANR	1202301	Identifier	r_reg_set_value		1201888	0					
ANR	1202302	ArgumentList	dbg -> reg		1201888	1					
ANR	1202303	Argument	dbg -> reg		1201888	0					
ANR	1202304	PtrMemberAccess	dbg -> reg		1201888	0					
ANR	1202305	Identifier	dbg		1201888	0					
ANR	1202306	Identifier	reg		1201888	1					
ANR	1202307	Argument	ripc		1201888	1					
ANR	1202308	Identifier	ripc		1201888	0					
ANR	1202309	Argument	rpc		1201888	2					
ANR	1202310	Identifier	rpc		1201888	0					
ANR	1202311	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , true )"	556:2:14375:14419	1201888	19	True				
ANR	1202312	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , true )"		1201888	0					
ANR	1202313	Callee	r_debug_reg_sync		1201888	0					
ANR	1202314	Identifier	r_debug_reg_sync		1201888	0					
ANR	1202315	ArgumentList	dbg		1201888	1					
ANR	1202316	Argument	dbg		1201888	0					
ANR	1202317	Identifier	dbg		1201888	0					
ANR	1202318	Argument	R_REG_TYPE_GPR		1201888	1					
ANR	1202319	Identifier	R_REG_TYPE_GPR		1201888	0					
ANR	1202320	Argument	true		1201888	2					
ANR	1202321	Identifier	true		1201888	0					
ANR	1202322	ExpressionStatement	free ( backup )	557:2:14423:14436	1201888	20	True				
ANR	1202323	CallExpression	free ( backup )		1201888	0					
ANR	1202324	Callee	free		1201888	0					
ANR	1202325	Identifier	free		1201888	0					
ANR	1202326	ArgumentList	backup		1201888	1					
ANR	1202327	Argument	backup		1201888	0					
ANR	1202328	Identifier	backup		1201888	0					
ANR	1202329	ExpressionStatement	free ( orig )	558:2:14440:14451	1201888	21	True				
ANR	1202330	CallExpression	free ( orig )		1201888	0					
ANR	1202331	Callee	free		1201888	0					
ANR	1202332	Identifier	free		1201888	0					
ANR	1202333	ArgumentList	orig		1201888	1					
ANR	1202334	Argument	orig		1201888	0					
ANR	1202335	Identifier	orig		1201888	0					
ANR	1202336	Statement	eprintf	559:2:14455:14461	1201888	22	True				
ANR	1202337	Statement	(	559:10:14463:14463	1201888	23	True				
ANR	1202338	Statement	"""ra0=0x%08"""	559:11:14464:14474	1201888	24	True				
ANR	1202339	Statement	PFMT64x	559:22:14475:14481	1201888	25	True				
ANR	1202340	Statement	"""\\n"""	559:29:14482:14485	1201888	26	True				
ANR	1202341	Statement	","	559:33:14486:14486	1201888	27	True				
ANR	1202342	Statement	ra0	559:35:14488:14490	1201888	28	True				
ANR	1202343	Statement	)	559:38:14491:14491	1201888	29	True				
ANR	1202344	ExpressionStatement		559:39:14492:14492	1201888	30	True				
ANR	1202345	ElseStatement	else		1201888	0					
ANR	1202346	CompoundStatement		57:8:1681:1681	1201888	0					
ANR	1202347	ExpressionStatement	"eprintf ( ""r_debug_execute: Cannot get program counter\\n"" )"	561:2:14506:14563	1201888	0	True				
ANR	1202348	CallExpression	"eprintf ( ""r_debug_execute: Cannot get program counter\\n"" )"		1201888	0					
ANR	1202349	Callee	eprintf		1201888	0					
ANR	1202350	Identifier	eprintf		1201888	0					
ANR	1202351	ArgumentList	"""r_debug_execute: Cannot get program counter\\n"""		1201888	1					
ANR	1202352	Argument	"""r_debug_execute: Cannot get program counter\\n"""		1201888	0					
ANR	1202353	PrimaryExpression	"""r_debug_execute: Cannot get program counter\\n"""		1201888	0					
ANR	1202354	ReturnStatement	return ( ra0 ) ;	563:1:14569:14581	1201888	17	True				
ANR	1202355	Identifier	ra0		1201888	0					
ANR	1202356	ReturnType	R_API ut64		1201888	1					
ANR	1202357	Identifier	r_debug_execute		1201888	2					
ANR	1202358	ParameterList	"RDebug * dbg , const ut8 * buf , int len , int restore"		1201888	3					
ANR	1202359	Parameter	RDebug * dbg	504:27:12769:12779	1201888	0	True				
ANR	1202360	ParameterType	RDebug *		1201888	0					
ANR	1202361	Identifier	dbg		1201888	1					
ANR	1202362	Parameter	const ut8 * buf	504:40:12782:12795	1201888	1	True				
ANR	1202363	ParameterType	const ut8 *		1201888	0					
ANR	1202364	Identifier	buf		1201888	1					
ANR	1202365	Parameter	int len	504:56:12798:12804	1201888	2	True				
ANR	1202366	ParameterType	int		1201888	0					
ANR	1202367	Identifier	len		1201888	1					
ANR	1202368	Parameter	int restore	504:65:12807:12817	1201888	3	True				
ANR	1202369	ParameterType	int		1201888	0					
ANR	1202370	Identifier	restore		1201888	1					
ANR	1202371	CFGEntryNode	ENTRY		1201888		True				
ANR	1202372	CFGExitNode	EXIT		1201888		True				
ANR	1202373	Symbol	* R_REG_NAME_SP		1201888						
ANR	1202374	Symbol	backup		1201888						
ANR	1202375	Symbol	dbg -> iob . io		1201888						
ANR	1202376	Symbol	R_REG_NAME_PC		1201888						
ANR	1202377	Symbol	& orig_sz		1201888						
ANR	1202378	Symbol	stackbackup		1201888						
ANR	1202379	Symbol	* dbg -> reg -> name		1201888						
ANR	1202380	Symbol	rsp		1201888						
ANR	1202381	Symbol	len		1201888						
ANR	1202382	Symbol	* R_REG_NAME_PC		1201888						
ANR	1202383	Symbol	R_REG_TYPE_GPR		1201888						
ANR	1202384	Symbol	ripc		1201888						
ANR	1202385	Symbol	r_reg_get		1201888						
ANR	1202386	Symbol	ra0		1201888						
ANR	1202387	Symbol	risp		1201888						
ANR	1202388	Symbol	malloc		1201888						
ANR	1202389	Symbol	R_REG_NAME_A0		1201888						
ANR	1202390	Symbol	r_reg_get_value		1201888						
ANR	1202391	Symbol	NULL		1201888						
ANR	1202392	Symbol	dbg -> iob		1201888						
ANR	1202393	Symbol	restore		1201888						
ANR	1202394	Symbol	rpc		1201888						
ANR	1202395	Symbol	dbg -> bp		1201888						
ANR	1202396	Symbol	* * * dbg		1201888						
ANR	1202397	Symbol	dbg		1201888						
ANR	1202398	Symbol	false		1201888						
ANR	1202399	Symbol	r_reg_get_bytes		1201888						
ANR	1202400	Symbol	* dbg		1201888						
ANR	1202401	Symbol	* * dbg -> reg		1201888						
ANR	1202402	Symbol	* dbg -> reg		1201888						
ANR	1202403	Symbol	orig_sz		1201888						
ANR	1202404	Symbol	buf		1201888						
ANR	1202405	Symbol	r_debug_is_dead		1201888						
ANR	1202406	Symbol	R_REG_NAME_SP		1201888						
ANR	1202407	Symbol	dbg -> bpsize		1201888						
ANR	1202408	Symbol	R_BP_PROT_EXEC		1201888						
ANR	1202409	Symbol	orig		1201888						
ANR	1202410	Symbol	* R_REG_NAME_A0		1201888						
ANR	1202411	Symbol	ri		1201888						
ANR	1202412	Symbol	true		1201888						
ANR	1202413	Symbol	dbg -> reg		1201888						
ANR	1202414	Symbol	* * dbg		1201888						
ANR	1202415	Symbol	dbg -> reg -> name		1201888						
ANR	1202416	Function	r_debug_startv	566:0:14586:14717							
ANR	1202417	FunctionDef	"r_debug_startv (struct r_debug_t * dbg , int argc , char * * argv)"		1202416	0					
ANR	1202418	CompoundStatement		566:71:14657:14717	1202416	0					
ANR	1202419	ReturnStatement	return false ;	568:1:14703:14715	1202416	0	True				
ANR	1202420	Identifier	false		1202416	0					
ANR	1202421	ReturnType	R_API int		1202416	1					
ANR	1202422	Identifier	r_debug_startv		1202416	2					
ANR	1202423	ParameterList	"struct r_debug_t * dbg , int argc , char * * argv"		1202416	3					
ANR	1202424	Parameter	struct r_debug_t * dbg	566:25:14611:14631	1202416	0	True				
ANR	1202425	ParameterType	struct r_debug_t *		1202416	0					
ANR	1202426	Identifier	dbg		1202416	1					
ANR	1202427	Parameter	int argc	566:48:14634:14641	1202416	1	True				
ANR	1202428	ParameterType	int		1202416	0					
ANR	1202429	Identifier	argc		1202416	1					
ANR	1202430	Parameter	char * * argv	566:58:14644:14654	1202416	2	True				
ANR	1202431	ParameterType	char * *		1202416	0					
ANR	1202432	Identifier	argv		1202416	1					
ANR	1202433	CFGEntryNode	ENTRY		1202416		True				
ANR	1202434	CFGExitNode	EXIT		1202416		True				
ANR	1202435	Symbol	argc		1202416						
ANR	1202436	Symbol	dbg		1202416						
ANR	1202437	Symbol	false		1202416						
ANR	1202438	Symbol	argv		1202416						
ANR	1202439	Function	r_debug_start	571:0:14720:14889							
ANR	1202440	FunctionDef	"r_debug_start (RDebug * dbg , const char * cmd)"		1202439	0					
ANR	1202441	CompoundStatement		571:54:14774:14889	1202439	0					
ANR	1202442	ReturnStatement	return false ;	574:1:14875:14887	1202439	0	True				
ANR	1202443	Identifier	false		1202439	0					
ANR	1202444	ReturnType	R_API int		1202439	1					
ANR	1202445	Identifier	r_debug_start		1202439	2					
ANR	1202446	ParameterList	"RDebug * dbg , const char * cmd"		1202439	3					
ANR	1202447	Parameter	RDebug * dbg	571:24:14744:14754	1202439	0	True				
ANR	1202448	ParameterType	RDebug *		1202439	0					
ANR	1202449	Identifier	dbg		1202439	1					
ANR	1202450	Parameter	const char * cmd	571:37:14757:14771	1202439	1	True				
ANR	1202451	ParameterType	const char *		1202439	0					
ANR	1202452	Identifier	cmd		1202439	1					
ANR	1202453	CFGEntryNode	ENTRY		1202439		True				
ANR	1202454	CFGExitNode	EXIT		1202439		True				
ANR	1202455	Symbol	dbg		1202439						
ANR	1202456	Symbol	false		1202439						
ANR	1202457	Symbol	cmd		1202439						
ANR	1202458	Function	r_debug_detach	577:0:14892:15028							
ANR	1202459	FunctionDef	"r_debug_detach (RDebug * dbg , int pid)"		1202458	0					
ANR	1202460	CompoundStatement		577:47:14939:15028	1202458	0					
ANR	1202461	IfStatement	if ( dbg -> h && dbg -> h -> detach )		1202458	0					
ANR	1202462	Condition	dbg -> h && dbg -> h -> detach	578:5:14946:14969	1202458	0	True				
ANR	1202463	AndExpression	dbg -> h && dbg -> h -> detach		1202458	0		&&			
ANR	1202464	PtrMemberAccess	dbg -> h		1202458	0					
ANR	1202465	Identifier	dbg		1202458	0					
ANR	1202466	Identifier	h		1202458	1					
ANR	1202467	PtrMemberAccess	dbg -> h -> detach		1202458	1					
ANR	1202468	PtrMemberAccess	dbg -> h		1202458	0					
ANR	1202469	Identifier	dbg		1202458	0					
ANR	1202470	Identifier	h		1202458	1					
ANR	1202471	Identifier	detach		1202458	1					
ANR	1202472	CompoundStatement		2:31:32:32	1202458	1					
ANR	1202473	ReturnStatement	"return dbg -> h -> detach ( dbg , pid ) ;"	579:2:14976:15008	1202458	0	True				
ANR	1202474	CallExpression	"dbg -> h -> detach ( dbg , pid )"		1202458	0					
ANR	1202475	Callee	dbg -> h -> detach		1202458	0					
ANR	1202476	PtrMemberAccess	dbg -> h -> detach		1202458	0					
ANR	1202477	PtrMemberAccess	dbg -> h		1202458	0					
ANR	1202478	Identifier	dbg		1202458	0					
ANR	1202479	Identifier	h		1202458	1					
ANR	1202480	Identifier	detach		1202458	1					
ANR	1202481	ArgumentList	dbg		1202458	1					
ANR	1202482	Argument	dbg		1202458	0					
ANR	1202483	Identifier	dbg		1202458	0					
ANR	1202484	Argument	pid		1202458	1					
ANR	1202485	Identifier	pid		1202458	0					
ANR	1202486	ReturnStatement	return false ;	581:1:15014:15026	1202458	1	True				
ANR	1202487	Identifier	false		1202458	0					
ANR	1202488	ReturnType	R_API int		1202458	1					
ANR	1202489	Identifier	r_debug_detach		1202458	2					
ANR	1202490	ParameterList	"RDebug * dbg , int pid"		1202458	3					
ANR	1202491	Parameter	RDebug * dbg	577:25:14917:14927	1202458	0	True				
ANR	1202492	ParameterType	RDebug *		1202458	0					
ANR	1202493	Identifier	dbg		1202458	1					
ANR	1202494	Parameter	int pid	577:38:14930:14936	1202458	1	True				
ANR	1202495	ParameterType	int		1202458	0					
ANR	1202496	Identifier	pid		1202458	1					
ANR	1202497	CFGEntryNode	ENTRY		1202458		True				
ANR	1202498	CFGExitNode	EXIT		1202458		True				
ANR	1202499	Symbol	dbg -> h		1202458						
ANR	1202500	Symbol	dbg -> h -> detach		1202458						
ANR	1202501	Symbol	dbg		1202458						
ANR	1202502	Symbol	* dbg -> h		1202458						
ANR	1202503	Symbol	false		1202458						
ANR	1202504	Symbol	pid		1202458						
ANR	1202505	Symbol	* dbg		1202458						
ANR	1202506	Symbol	* * dbg		1202458						
ANR	1202507	Function	r_debug_select	584:0:15031:15670							
ANR	1202508	FunctionDef	"r_debug_select (RDebug * dbg , int pid , int tid)"		1202507	0					
ANR	1202509	CompoundStatement		584:57:15088:15670	1202507	0					
ANR	1202510	IfStatement	if ( pid < 0 )		1202507	0					
ANR	1202511	Condition	pid < 0	585:5:15095:15101	1202507	0	True				
ANR	1202512	RelationalExpression	pid < 0		1202507	0		<			
ANR	1202513	Identifier	pid		1202507	0					
ANR	1202514	PrimaryExpression	0		1202507	1					
ANR	1202515	CompoundStatement		2:14:15:15	1202507	1					
ANR	1202516	ReturnStatement	return false ;	586:2:15108:15120	1202507	0	True				
ANR	1202517	Identifier	false		1202507	0					
ANR	1202518	IfStatement	if ( tid < 0 )		1202507	1					
ANR	1202519	Condition	tid < 0	588:5:15130:15136	1202507	0	True				
ANR	1202520	RelationalExpression	tid < 0		1202507	0		<			
ANR	1202521	Identifier	tid		1202507	0					
ANR	1202522	PrimaryExpression	0		1202507	1					
ANR	1202523	CompoundStatement		5:14:50:50	1202507	1					
ANR	1202524	ExpressionStatement	tid = pid	589:2:15143:15152	1202507	0	True				
ANR	1202525	AssignmentExpression	tid = pid		1202507	0		=			
ANR	1202526	Identifier	tid		1202507	0					
ANR	1202527	Identifier	pid		1202507	1					
ANR	1202528	IfStatement	if ( pid != - 1 && tid != - 1 )		1202507	2					
ANR	1202529	Condition	pid != - 1 && tid != - 1	591:5:15162:15183	1202507	0	True				
ANR	1202530	AndExpression	pid != - 1 && tid != - 1		1202507	0		&&			
ANR	1202531	EqualityExpression	pid != - 1		1202507	0		!=			
ANR	1202532	Identifier	pid		1202507	0					
ANR	1202533	UnaryOperationExpression	- 1		1202507	1					
ANR	1202534	UnaryOperator	-		1202507	0					
ANR	1202535	PrimaryExpression	1		1202507	1					
ANR	1202536	EqualityExpression	tid != - 1		1202507	1		!=			
ANR	1202537	Identifier	tid		1202507	0					
ANR	1202538	UnaryOperationExpression	- 1		1202507	1					
ANR	1202539	UnaryOperator	-		1202507	0					
ANR	1202540	PrimaryExpression	1		1202507	1					
ANR	1202541	CompoundStatement		8:29:97:97	1202507	1					
ANR	1202542	IfStatement	if ( ( pid != dbg -> pid || tid != dbg -> tid ) && dbg -> verbose )		1202507	0					
ANR	1202543	Condition	( pid != dbg -> pid || tid != dbg -> tid ) && dbg -> verbose	592:6:15194:15245	1202507	0	True				
ANR	1202544	AndExpression	( pid != dbg -> pid || tid != dbg -> tid ) && dbg -> verbose		1202507	0		&&			
ANR	1202545	OrExpression	pid != dbg -> pid || tid != dbg -> tid		1202507	0		||			
ANR	1202546	EqualityExpression	pid != dbg -> pid		1202507	0		!=			
ANR	1202547	Identifier	pid		1202507	0					
ANR	1202548	PtrMemberAccess	dbg -> pid		1202507	1					
ANR	1202549	Identifier	dbg		1202507	0					
ANR	1202550	Identifier	pid		1202507	1					
ANR	1202551	EqualityExpression	tid != dbg -> tid		1202507	1		!=			
ANR	1202552	Identifier	tid		1202507	0					
ANR	1202553	PtrMemberAccess	dbg -> tid		1202507	1					
ANR	1202554	Identifier	dbg		1202507	0					
ANR	1202555	Identifier	tid		1202507	1					
ANR	1202556	PtrMemberAccess	dbg -> verbose		1202507	1					
ANR	1202557	Identifier	dbg		1202507	0					
ANR	1202558	Identifier	verbose		1202507	1					
ANR	1202559	CompoundStatement		9:60:159:159	1202507	1					
ANR	1202560	ExpressionStatement	"eprintf ( ""= attach %d %d\\n"" , pid , tid )"	593:3:15253:15291	1202507	0	True				
ANR	1202561	CallExpression	"eprintf ( ""= attach %d %d\\n"" , pid , tid )"		1202507	0					
ANR	1202562	Callee	eprintf		1202507	0					
ANR	1202563	Identifier	eprintf		1202507	0					
ANR	1202564	ArgumentList	"""= attach %d %d\\n"""		1202507	1					
ANR	1202565	Argument	"""= attach %d %d\\n"""		1202507	0					
ANR	1202566	PrimaryExpression	"""= attach %d %d\\n"""		1202507	0					
ANR	1202567	Argument	pid		1202507	1					
ANR	1202568	Identifier	pid		1202507	0					
ANR	1202569	Argument	tid		1202507	2					
ANR	1202570	Identifier	tid		1202507	0					
ANR	1202571	ElseStatement	else		1202507	0					
ANR	1202572	CompoundStatement		12:8:216:216	1202507	0					
ANR	1202573	IfStatement	if ( dbg -> pid != - 1 )		1202507	0					
ANR	1202574	Condition	dbg -> pid != - 1	596:6:15313:15326	1202507	0	True				
ANR	1202575	EqualityExpression	dbg -> pid != - 1		1202507	0		!=			
ANR	1202576	PtrMemberAccess	dbg -> pid		1202507	0					
ANR	1202577	Identifier	dbg		1202507	0					
ANR	1202578	Identifier	pid		1202507	1					
ANR	1202579	UnaryOperationExpression	- 1		1202507	1					
ANR	1202580	UnaryOperator	-		1202507	0					
ANR	1202581	PrimaryExpression	1		1202507	1					
ANR	1202582	CompoundStatement		13:22:240:240	1202507	1					
ANR	1202583	ExpressionStatement	"eprintf ( ""Child %d is dead\\n"" , dbg -> pid )"	597:3:15334:15374	1202507	0	True				
ANR	1202584	CallExpression	"eprintf ( ""Child %d is dead\\n"" , dbg -> pid )"		1202507	0					
ANR	1202585	Callee	eprintf		1202507	0					
ANR	1202586	Identifier	eprintf		1202507	0					
ANR	1202587	ArgumentList	"""Child %d is dead\\n"""		1202507	1					
ANR	1202588	Argument	"""Child %d is dead\\n"""		1202507	0					
ANR	1202589	PrimaryExpression	"""Child %d is dead\\n"""		1202507	0					
ANR	1202590	Argument	dbg -> pid		1202507	1					
ANR	1202591	PtrMemberAccess	dbg -> pid		1202507	0					
ANR	1202592	Identifier	dbg		1202507	0					
ANR	1202593	Identifier	pid		1202507	1					
ANR	1202594	IfStatement	if ( pid < 0 || tid < 0 )		1202507	3					
ANR	1202595	Condition	pid < 0 || tid < 0	600:5:15388:15405	1202507	0	True				
ANR	1202596	OrExpression	pid < 0 || tid < 0		1202507	0		||			
ANR	1202597	RelationalExpression	pid < 0		1202507	0		<			
ANR	1202598	Identifier	pid		1202507	0					
ANR	1202599	PrimaryExpression	0		1202507	1					
ANR	1202600	RelationalExpression	tid < 0		1202507	1		<			
ANR	1202601	Identifier	tid		1202507	0					
ANR	1202602	PrimaryExpression	0		1202507	1					
ANR	1202603	CompoundStatement		17:25:319:319	1202507	1					
ANR	1202604	ReturnStatement	return false ;	601:2:15412:15424	1202507	0	True				
ANR	1202605	Identifier	false		1202507	0					
ANR	1202606	IfStatement	"if ( dbg -> h && dbg -> h -> select && ! dbg -> h -> select ( dbg , pid , tid ) )"		1202507	4					
ANR	1202607	Condition	"dbg -> h && dbg -> h -> select && ! dbg -> h -> select ( dbg , pid , tid )"	604:5:15435:15493	1202507	0	True				
ANR	1202608	AndExpression	"dbg -> h && dbg -> h -> select && ! dbg -> h -> select ( dbg , pid , tid )"		1202507	0		&&			
ANR	1202609	PtrMemberAccess	dbg -> h		1202507	0					
ANR	1202610	Identifier	dbg		1202507	0					
ANR	1202611	Identifier	h		1202507	1					
ANR	1202612	AndExpression	"dbg -> h -> select && ! dbg -> h -> select ( dbg , pid , tid )"		1202507	1		&&			
ANR	1202613	PtrMemberAccess	dbg -> h -> select		1202507	0					
ANR	1202614	PtrMemberAccess	dbg -> h		1202507	0					
ANR	1202615	Identifier	dbg		1202507	0					
ANR	1202616	Identifier	h		1202507	1					
ANR	1202617	Identifier	select		1202507	1					
ANR	1202618	UnaryOperationExpression	"! dbg -> h -> select ( dbg , pid , tid )"		1202507	1					
ANR	1202619	UnaryOperator	!		1202507	0					
ANR	1202620	CallExpression	"dbg -> h -> select ( dbg , pid , tid )"		1202507	1					
ANR	1202621	Callee	dbg -> h -> select		1202507	0					
ANR	1202622	PtrMemberAccess	dbg -> h -> select		1202507	0					
ANR	1202623	PtrMemberAccess	dbg -> h		1202507	0					
ANR	1202624	Identifier	dbg		1202507	0					
ANR	1202625	Identifier	h		1202507	1					
ANR	1202626	Identifier	select		1202507	1					
ANR	1202627	ArgumentList	dbg		1202507	1					
ANR	1202628	Argument	dbg		1202507	0					
ANR	1202629	Identifier	dbg		1202507	0					
ANR	1202630	Argument	pid		1202507	1					
ANR	1202631	Identifier	pid		1202507	0					
ANR	1202632	Argument	tid		1202507	2					
ANR	1202633	Identifier	tid		1202507	0					
ANR	1202634	CompoundStatement		21:66:407:407	1202507	1					
ANR	1202635	ReturnStatement	return false ;	605:2:15500:15512	1202507	0	True				
ANR	1202636	Identifier	false		1202507	0					
ANR	1202637	ExpressionStatement	"r_io_system ( dbg -> iob . io , sdb_fmt ( ""pid %d"" , pid ) )"	608:1:15519:15569	1202507	5	True				
ANR	1202638	CallExpression	"r_io_system ( dbg -> iob . io , sdb_fmt ( ""pid %d"" , pid ) )"		1202507	0					
ANR	1202639	Callee	r_io_system		1202507	0					
ANR	1202640	Identifier	r_io_system		1202507	0					
ANR	1202641	ArgumentList	dbg -> iob . io		1202507	1					
ANR	1202642	Argument	dbg -> iob . io		1202507	0					
ANR	1202643	MemberAccess	dbg -> iob . io		1202507	0					
ANR	1202644	PtrMemberAccess	dbg -> iob		1202507	0					
ANR	1202645	Identifier	dbg		1202507	0					
ANR	1202646	Identifier	iob		1202507	1					
ANR	1202647	Identifier	io		1202507	1					
ANR	1202648	Argument	"sdb_fmt ( ""pid %d"" , pid )"		1202507	1					
ANR	1202649	CallExpression	"sdb_fmt ( ""pid %d"" , pid )"		1202507	0					
ANR	1202650	Callee	sdb_fmt		1202507	0					
ANR	1202651	Identifier	sdb_fmt		1202507	0					
ANR	1202652	ArgumentList	"""pid %d"""		1202507	1					
ANR	1202653	Argument	"""pid %d"""		1202507	0					
ANR	1202654	PrimaryExpression	"""pid %d"""		1202507	0					
ANR	1202655	Argument	pid		1202507	1					
ANR	1202656	Identifier	pid		1202507	0					
ANR	1202657	ExpressionStatement	dbg -> pid = pid	610:1:15573:15587	1202507	6	True				
ANR	1202658	AssignmentExpression	dbg -> pid = pid		1202507	0		=			
ANR	1202659	PtrMemberAccess	dbg -> pid		1202507	0					
ANR	1202660	Identifier	dbg		1202507	0					
ANR	1202661	Identifier	pid		1202507	1					
ANR	1202662	Identifier	pid		1202507	1					
ANR	1202663	ExpressionStatement	dbg -> tid = tid	611:1:15590:15604	1202507	7	True				
ANR	1202664	AssignmentExpression	dbg -> tid = tid		1202507	0		=			
ANR	1202665	PtrMemberAccess	dbg -> tid		1202507	0					
ANR	1202666	Identifier	dbg		1202507	0					
ANR	1202667	Identifier	tid		1202507	1					
ANR	1202668	Identifier	tid		1202507	1					
ANR	1202669	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	613:1:15608:15653	1202507	8	True				
ANR	1202670	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1202507	0					
ANR	1202671	Callee	r_debug_reg_sync		1202507	0					
ANR	1202672	Identifier	r_debug_reg_sync		1202507	0					
ANR	1202673	ArgumentList	dbg		1202507	1					
ANR	1202674	Argument	dbg		1202507	0					
ANR	1202675	Identifier	dbg		1202507	0					
ANR	1202676	Argument	R_REG_TYPE_GPR		1202507	1					
ANR	1202677	Identifier	R_REG_TYPE_GPR		1202507	0					
ANR	1202678	Argument	false		1202507	2					
ANR	1202679	Identifier	false		1202507	0					
ANR	1202680	ReturnStatement	return true ;	615:1:15657:15668	1202507	9	True				
ANR	1202681	Identifier	true		1202507	0					
ANR	1202682	ReturnType	R_API bool		1202507	1					
ANR	1202683	Identifier	r_debug_select		1202507	2					
ANR	1202684	ParameterList	"RDebug * dbg , int pid , int tid"		1202507	3					
ANR	1202685	Parameter	RDebug * dbg	584:26:15057:15067	1202507	0	True				
ANR	1202686	ParameterType	RDebug *		1202507	0					
ANR	1202687	Identifier	dbg		1202507	1					
ANR	1202688	Parameter	int pid	584:39:15070:15076	1202507	1	True				
ANR	1202689	ParameterType	int		1202507	0					
ANR	1202690	Identifier	pid		1202507	1					
ANR	1202691	Parameter	int tid	584:48:15079:15085	1202507	2	True				
ANR	1202692	ParameterType	int		1202507	0					
ANR	1202693	Identifier	tid		1202507	1					
ANR	1202694	CFGEntryNode	ENTRY		1202507		True				
ANR	1202695	CFGExitNode	EXIT		1202507		True				
ANR	1202696	Symbol	dbg -> h -> select		1202507						
ANR	1202697	Symbol	dbg -> iob . io		1202507						
ANR	1202698	Symbol	dbg -> verbose		1202507						
ANR	1202699	Symbol	dbg -> h		1202507						
ANR	1202700	Symbol	dbg -> iob		1202507						
ANR	1202701	Symbol	dbg		1202507						
ANR	1202702	Symbol	false		1202507						
ANR	1202703	Symbol	* dbg -> h		1202507						
ANR	1202704	Symbol	pid		1202507						
ANR	1202705	Symbol	* dbg		1202507						
ANR	1202706	Symbol	tid		1202507						
ANR	1202707	Symbol	dbg -> tid		1202507						
ANR	1202708	Symbol	dbg -> pid		1202507						
ANR	1202709	Symbol	true		1202507						
ANR	1202710	Symbol	* * dbg		1202507						
ANR	1202711	Symbol	sdb_fmt		1202507						
ANR	1202712	Symbol	R_REG_TYPE_GPR		1202507						
ANR	1202713	Function	r_debug_reason_to_string	618:6:15679:16976							
ANR	1202714	FunctionDef	r_debug_reason_to_string (int type)		1202713	0					
ANR	1202715	CompoundStatement		618:53:15726:16976	1202713	0					
ANR	1202716	SwitchStatement	switch ( type )		1202713	0					
ANR	1202717	Condition	type	619:9:15737:15740	1202713	0	True				
ANR	1202718	Identifier	type		1202713	0					
ANR	1202719	CompoundStatement		2:15:16:16	1202713	1					
ANR	1202720	Label	case R_DEBUG_REASON_DEAD :	620:1:15746:15770	1202713	0	True				
ANR	1202721	Identifier	R_DEBUG_REASON_DEAD		1202713	0					
ANR	1202722	ReturnStatement	"return ""dead"" ;"	620:27:15772:15785	1202713	1	True				
ANR	1202723	PrimaryExpression	"""dead"""		1202713	0					
ANR	1202724	Label	case R_DEBUG_REASON_ABORT :	621:1:15788:15813	1202713	2	True				
ANR	1202725	Identifier	R_DEBUG_REASON_ABORT		1202713	0					
ANR	1202726	ReturnStatement	"return ""abort"" ;"	621:28:15815:15829	1202713	3	True				
ANR	1202727	PrimaryExpression	"""abort"""		1202713	0					
ANR	1202728	Label	case R_DEBUG_REASON_SEGFAULT :	622:1:15832:15860	1202713	4	True				
ANR	1202729	Identifier	R_DEBUG_REASON_SEGFAULT		1202713	0					
ANR	1202730	ReturnStatement	"return ""segfault"" ;"	622:31:15862:15879	1202713	5	True				
ANR	1202731	PrimaryExpression	"""segfault"""		1202713	0					
ANR	1202732	Label	case R_DEBUG_REASON_NONE :	623:1:15882:15906	1202713	6	True				
ANR	1202733	Identifier	R_DEBUG_REASON_NONE		1202713	0					
ANR	1202734	ReturnStatement	"return ""none"" ;"	623:27:15908:15921	1202713	7	True				
ANR	1202735	PrimaryExpression	"""none"""		1202713	0					
ANR	1202736	Label	case R_DEBUG_REASON_SIGNAL :	624:1:15924:15950	1202713	8	True				
ANR	1202737	Identifier	R_DEBUG_REASON_SIGNAL		1202713	0					
ANR	1202738	ReturnStatement	"return ""signal"" ;"	624:29:15952:15967	1202713	9	True				
ANR	1202739	PrimaryExpression	"""signal"""		1202713	0					
ANR	1202740	Label	case R_DEBUG_REASON_BREAKPOINT :	625:1:15970:16000	1202713	10	True				
ANR	1202741	Identifier	R_DEBUG_REASON_BREAKPOINT		1202713	0					
ANR	1202742	ReturnStatement	"return ""breakpoint"" ;"	625:33:16002:16021	1202713	11	True				
ANR	1202743	PrimaryExpression	"""breakpoint"""		1202713	0					
ANR	1202744	Label	case R_DEBUG_REASON_TRACEPOINT :	626:1:16024:16054	1202713	12	True				
ANR	1202745	Identifier	R_DEBUG_REASON_TRACEPOINT		1202713	0					
ANR	1202746	ReturnStatement	"return ""tracepoint"" ;"	626:33:16056:16075	1202713	13	True				
ANR	1202747	PrimaryExpression	"""tracepoint"""		1202713	0					
ANR	1202748	Label	case R_DEBUG_REASON_READERR :	627:1:16078:16105	1202713	14	True				
ANR	1202749	Identifier	R_DEBUG_REASON_READERR		1202713	0					
ANR	1202750	ReturnStatement	"return ""read-error"" ;"	627:30:16107:16126	1202713	15	True				
ANR	1202751	PrimaryExpression	"""read-error"""		1202713	0					
ANR	1202752	Label	case R_DEBUG_REASON_WRITERR :	628:1:16129:16156	1202713	16	True				
ANR	1202753	Identifier	R_DEBUG_REASON_WRITERR		1202713	0					
ANR	1202754	ReturnStatement	"return ""write-error"" ;"	628:30:16158:16178	1202713	17	True				
ANR	1202755	PrimaryExpression	"""write-error"""		1202713	0					
ANR	1202756	Label	case R_DEBUG_REASON_DIVBYZERO :	629:1:16181:16210	1202713	18	True				
ANR	1202757	Identifier	R_DEBUG_REASON_DIVBYZERO		1202713	0					
ANR	1202758	ReturnStatement	"return ""div-by-zero"" ;"	629:32:16212:16232	1202713	19	True				
ANR	1202759	PrimaryExpression	"""div-by-zero"""		1202713	0					
ANR	1202760	Label	case R_DEBUG_REASON_ILLEGAL :	630:1:16235:16262	1202713	20	True				
ANR	1202761	Identifier	R_DEBUG_REASON_ILLEGAL		1202713	0					
ANR	1202762	ReturnStatement	"return ""illegal"" ;"	630:30:16264:16280	1202713	21	True				
ANR	1202763	PrimaryExpression	"""illegal"""		1202713	0					
ANR	1202764	Label	case R_DEBUG_REASON_UNKNOWN :	631:1:16283:16310	1202713	22	True				
ANR	1202765	Identifier	R_DEBUG_REASON_UNKNOWN		1202713	0					
ANR	1202766	ReturnStatement	"return ""unknown"" ;"	631:30:16312:16328	1202713	23	True				
ANR	1202767	PrimaryExpression	"""unknown"""		1202713	0					
ANR	1202768	Label	case R_DEBUG_REASON_ERROR :	632:1:16331:16356	1202713	24	True				
ANR	1202769	Identifier	R_DEBUG_REASON_ERROR		1202713	0					
ANR	1202770	ReturnStatement	"return ""error"" ;"	632:28:16358:16372	1202713	25	True				
ANR	1202771	PrimaryExpression	"""error"""		1202713	0					
ANR	1202772	Label	case R_DEBUG_REASON_NEW_PID :	633:1:16375:16402	1202713	26	True				
ANR	1202773	Identifier	R_DEBUG_REASON_NEW_PID		1202713	0					
ANR	1202774	ReturnStatement	"return ""new-pid"" ;"	633:30:16404:16420	1202713	27	True				
ANR	1202775	PrimaryExpression	"""new-pid"""		1202713	0					
ANR	1202776	Label	case R_DEBUG_REASON_NEW_TID :	634:1:16423:16450	1202713	28	True				
ANR	1202777	Identifier	R_DEBUG_REASON_NEW_TID		1202713	0					
ANR	1202778	ReturnStatement	"return ""new-tid"" ;"	634:30:16452:16468	1202713	29	True				
ANR	1202779	PrimaryExpression	"""new-tid"""		1202713	0					
ANR	1202780	Label	case R_DEBUG_REASON_NEW_LIB :	635:1:16471:16498	1202713	30	True				
ANR	1202781	Identifier	R_DEBUG_REASON_NEW_LIB		1202713	0					
ANR	1202782	ReturnStatement	"return ""new-lib"" ;"	635:30:16500:16516	1202713	31	True				
ANR	1202783	PrimaryExpression	"""new-lib"""		1202713	0					
ANR	1202784	Label	case R_DEBUG_REASON_EXIT_PID :	636:1:16519:16547	1202713	32	True				
ANR	1202785	Identifier	R_DEBUG_REASON_EXIT_PID		1202713	0					
ANR	1202786	ReturnStatement	"return ""exit-pid"" ;"	636:31:16549:16566	1202713	33	True				
ANR	1202787	PrimaryExpression	"""exit-pid"""		1202713	0					
ANR	1202788	Label	case R_DEBUG_REASON_EXIT_TID :	637:1:16569:16597	1202713	34	True				
ANR	1202789	Identifier	R_DEBUG_REASON_EXIT_TID		1202713	0					
ANR	1202790	ReturnStatement	"return ""exit-tid"" ;"	637:31:16599:16616	1202713	35	True				
ANR	1202791	PrimaryExpression	"""exit-tid"""		1202713	0					
ANR	1202792	Label	case R_DEBUG_REASON_EXIT_LIB :	638:1:16619:16647	1202713	36	True				
ANR	1202793	Identifier	R_DEBUG_REASON_EXIT_LIB		1202713	0					
ANR	1202794	ReturnStatement	"return ""exit-lib"" ;"	638:31:16649:16666	1202713	37	True				
ANR	1202795	PrimaryExpression	"""exit-lib"""		1202713	0					
ANR	1202796	Label	case R_DEBUG_REASON_TRAP :	639:1:16669:16693	1202713	38	True				
ANR	1202797	Identifier	R_DEBUG_REASON_TRAP		1202713	0					
ANR	1202798	ReturnStatement	"return ""trap"" ;"	639:27:16695:16708	1202713	39	True				
ANR	1202799	PrimaryExpression	"""trap"""		1202713	0					
ANR	1202800	Label	case R_DEBUG_REASON_SWI :	640:1:16711:16734	1202713	40	True				
ANR	1202801	Identifier	R_DEBUG_REASON_SWI		1202713	0					
ANR	1202802	ReturnStatement	"return ""software-interrupt"" ;"	640:26:16736:16763	1202713	41	True				
ANR	1202803	PrimaryExpression	"""software-interrupt"""		1202713	0					
ANR	1202804	Label	case R_DEBUG_REASON_INT :	641:1:16766:16789	1202713	42	True				
ANR	1202805	Identifier	R_DEBUG_REASON_INT		1202713	0					
ANR	1202806	ReturnStatement	"return ""interrupt"" ;"	641:26:16791:16809	1202713	43	True				
ANR	1202807	PrimaryExpression	"""interrupt"""		1202713	0					
ANR	1202808	Label	case R_DEBUG_REASON_FPU :	642:1:16812:16835	1202713	44	True				
ANR	1202809	Identifier	R_DEBUG_REASON_FPU		1202713	0					
ANR	1202810	ReturnStatement	"return ""fpu"" ;"	642:26:16837:16849	1202713	45	True				
ANR	1202811	PrimaryExpression	"""fpu"""		1202713	0					
ANR	1202812	Label	case R_DEBUG_REASON_STEP :	643:1:16852:16876	1202713	46	True				
ANR	1202813	Identifier	R_DEBUG_REASON_STEP		1202713	0					
ANR	1202814	ReturnStatement	"return ""step"" ;"	643:27:16878:16891	1202713	47	True				
ANR	1202815	PrimaryExpression	"""step"""		1202713	0					
ANR	1202816	Label	case R_DEBUG_REASON_USERSUSP :	644:1:16894:16922	1202713	48	True				
ANR	1202817	Identifier	R_DEBUG_REASON_USERSUSP		1202713	0					
ANR	1202818	ReturnStatement	"return ""suspended-by-user"" ;"	644:31:16924:16950	1202713	49	True				
ANR	1202819	PrimaryExpression	"""suspended-by-user"""		1202713	0					
ANR	1202820	ReturnStatement	"return ""unhandled"" ;"	646:1:16956:16974	1202713	1	True				
ANR	1202821	PrimaryExpression	"""unhandled"""		1202713	0					
ANR	1202822	ReturnType	const char *		1202713	1					
ANR	1202823	Identifier	r_debug_reason_to_string		1202713	2					
ANR	1202824	ParameterList	int type		1202713	3					
ANR	1202825	Parameter	int type	618:43:15716:15723	1202713	0	True				
ANR	1202826	ParameterType	int		1202713	0					
ANR	1202827	Identifier	type		1202713	1					
ANR	1202828	CFGEntryNode	ENTRY		1202713		True				
ANR	1202829	CFGExitNode	EXIT		1202713		True				
ANR	1202830	Symbol	type		1202713						
ANR	1202831	Function	r_debug_stop_reason	649:0:16979:17215							
ANR	1202832	FunctionDef	r_debug_stop_reason (RDebug * dbg)		1202831	0					
ANR	1202833	CompoundStatement		649:56:17035:17215	1202831	0					
ANR	1202834	ReturnStatement	return dbg -> reason . type ;	656:1:17190:17213	1202831	0	True				
ANR	1202835	MemberAccess	dbg -> reason . type		1202831	0					
ANR	1202836	PtrMemberAccess	dbg -> reason		1202831	0					
ANR	1202837	Identifier	dbg		1202831	0					
ANR	1202838	Identifier	reason		1202831	1					
ANR	1202839	Identifier	type		1202831	1					
ANR	1202840	ReturnType	R_API RDebugReasonType		1202831	1					
ANR	1202841	Identifier	r_debug_stop_reason		1202831	2					
ANR	1202842	ParameterList	RDebug * dbg		1202831	3					
ANR	1202843	Parameter	RDebug * dbg	649:43:17022:17032	1202831	0	True				
ANR	1202844	ParameterType	RDebug *		1202831	0					
ANR	1202845	Identifier	dbg		1202831	1					
ANR	1202846	CFGEntryNode	ENTRY		1202831		True				
ANR	1202847	CFGExitNode	EXIT		1202831		True				
ANR	1202848	Symbol	dbg -> reason . type		1202831						
ANR	1202849	Symbol	dbg -> reason		1202831						
ANR	1202850	Symbol	dbg		1202831						
ANR	1202851	Symbol	* dbg		1202831						
ANR	1202852	Function	r_debug_wait	664:0:17312:19681							
ANR	1202853	FunctionDef	"r_debug_wait (RDebug * dbg , RBreakpointItem * * bp)"		1202852	0					
ANR	1202854	CompoundStatement		664:71:17383:19681	1202852	0					
ANR	1202855	IdentifierDeclStatement	RDebugReasonType reason = R_DEBUG_REASON_ERROR ;	665:1:17386:17432	1202852	0	True				
ANR	1202856	IdentifierDecl	reason = R_DEBUG_REASON_ERROR		1202852	0					
ANR	1202857	IdentifierDeclType	RDebugReasonType		1202852	0					
ANR	1202858	Identifier	reason		1202852	1					
ANR	1202859	AssignmentExpression	reason = R_DEBUG_REASON_ERROR		1202852	2		=			
ANR	1202860	Identifier	R_DEBUG_REASON_ERROR		1202852	0					
ANR	1202861	Identifier	R_DEBUG_REASON_ERROR		1202852	1					
ANR	1202862	IfStatement	if ( ! dbg )		1202852	1					
ANR	1202863	Condition	! dbg	666:5:17439:17442	1202852	0	True				
ANR	1202864	UnaryOperationExpression	! dbg		1202852	0					
ANR	1202865	UnaryOperator	!		1202852	0					
ANR	1202866	Identifier	dbg		1202852	1					
ANR	1202867	CompoundStatement		3:11:61:61	1202852	1					
ANR	1202868	ReturnStatement	return reason ;	667:2:17449:17462	1202852	0	True				
ANR	1202869	Identifier	reason		1202852	0					
ANR	1202870	IfStatement	if ( bp )		1202852	2					
ANR	1202871	Condition	bp	670:5:17473:17474	1202852	0	True				
ANR	1202872	Identifier	bp		1202852	0					
ANR	1202873	CompoundStatement		7:9:93:93	1202852	1					
ANR	1202874	ExpressionStatement	* bp = NULL	671:2:17481:17491	1202852	0	True				
ANR	1202875	AssignmentExpression	* bp = NULL		1202852	0		=			
ANR	1202876	UnaryOperationExpression	* bp		1202852	0					
ANR	1202877	UnaryOperator	*		1202852	0					
ANR	1202878	Identifier	bp		1202852	1					
ANR	1202879	Identifier	NULL		1202852	1					
ANR	1202880	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_UNKNOWN	674:1:17523:17564	1202852	3	True				
ANR	1202881	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_UNKNOWN		1202852	0		=			
ANR	1202882	MemberAccess	dbg -> reason . type		1202852	0					
ANR	1202883	PtrMemberAccess	dbg -> reason		1202852	0					
ANR	1202884	Identifier	dbg		1202852	0					
ANR	1202885	Identifier	reason		1202852	1					
ANR	1202886	Identifier	type		1202852	1					
ANR	1202887	Identifier	R_DEBUG_REASON_UNKNOWN		1202852	1					
ANR	1202888	IfStatement	if ( r_debug_is_dead ( dbg ) )		1202852	4					
ANR	1202889	Condition	r_debug_is_dead ( dbg )	675:5:17571:17591	1202852	0	True				
ANR	1202890	CallExpression	r_debug_is_dead ( dbg )		1202852	0					
ANR	1202891	Callee	r_debug_is_dead		1202852	0					
ANR	1202892	Identifier	r_debug_is_dead		1202852	0					
ANR	1202893	ArgumentList	dbg		1202852	1					
ANR	1202894	Argument	dbg		1202852	0					
ANR	1202895	Identifier	dbg		1202852	0					
ANR	1202896	CompoundStatement		12:28:210:210	1202852	1					
ANR	1202897	ReturnStatement	return R_DEBUG_REASON_DEAD ;	676:2:17598:17624	1202852	0	True				
ANR	1202898	Identifier	R_DEBUG_REASON_DEAD		1202852	0					
ANR	1202899	IfStatement	if ( dbg -> h && dbg -> h -> wait )		1202852	5					
ANR	1202900	Condition	dbg -> h && dbg -> h -> wait	680:5:17674:17695	1202852	0	True				
ANR	1202901	AndExpression	dbg -> h && dbg -> h -> wait		1202852	0		&&			
ANR	1202902	PtrMemberAccess	dbg -> h		1202852	0					
ANR	1202903	Identifier	dbg		1202852	0					
ANR	1202904	Identifier	h		1202852	1					
ANR	1202905	PtrMemberAccess	dbg -> h -> wait		1202852	1					
ANR	1202906	PtrMemberAccess	dbg -> h		1202852	0					
ANR	1202907	Identifier	dbg		1202852	0					
ANR	1202908	Identifier	h		1202852	1					
ANR	1202909	Identifier	wait		1202852	1					
ANR	1202910	CompoundStatement		36:2:818:884	1202852	1					
ANR	1202911	ExpressionStatement	"reason = dbg -> h -> wait ( dbg , dbg -> pid )"	681:2:17702:17739	1202852	0	True				
ANR	1202912	AssignmentExpression	"reason = dbg -> h -> wait ( dbg , dbg -> pid )"		1202852	0		=			
ANR	1202913	Identifier	reason		1202852	0					
ANR	1202914	CallExpression	"dbg -> h -> wait ( dbg , dbg -> pid )"		1202852	1					
ANR	1202915	Callee	dbg -> h -> wait		1202852	0					
ANR	1202916	PtrMemberAccess	dbg -> h -> wait		1202852	0					
ANR	1202917	PtrMemberAccess	dbg -> h		1202852	0					
ANR	1202918	Identifier	dbg		1202852	0					
ANR	1202919	Identifier	h		1202852	1					
ANR	1202920	Identifier	wait		1202852	1					
ANR	1202921	ArgumentList	dbg		1202852	1					
ANR	1202922	Argument	dbg		1202852	0					
ANR	1202923	Identifier	dbg		1202852	0					
ANR	1202924	Argument	dbg -> pid		1202852	1					
ANR	1202925	PtrMemberAccess	dbg -> pid		1202852	0					
ANR	1202926	Identifier	dbg		1202852	0					
ANR	1202927	Identifier	pid		1202852	1					
ANR	1202928	IfStatement	if ( reason == R_DEBUG_REASON_DEAD )		1202852	1					
ANR	1202929	Condition	reason == R_DEBUG_REASON_DEAD	682:6:17747:17775	1202852	0	True				
ANR	1202930	EqualityExpression	reason == R_DEBUG_REASON_DEAD		1202852	0		==			
ANR	1202931	Identifier	reason		1202852	0					
ANR	1202932	Identifier	R_DEBUG_REASON_DEAD		1202852	1					
ANR	1202933	CompoundStatement		19:37:394:394	1202852	1					
ANR	1202934	ExpressionStatement	"eprintf ( ""\\n==> Process finished\\n\\n"" )"	683:3:17783:17821	1202852	0	True				
ANR	1202935	CallExpression	"eprintf ( ""\\n==> Process finished\\n\\n"" )"		1202852	0					
ANR	1202936	Callee	eprintf		1202852	0					
ANR	1202937	Identifier	eprintf		1202852	0					
ANR	1202938	ArgumentList	"""\\n==> Process finished\\n\\n"""		1202852	1					
ANR	1202939	Argument	"""\\n==> Process finished\\n\\n"""		1202852	0					
ANR	1202940	PrimaryExpression	"""\\n==> Process finished\\n\\n"""		1202852	0					
ANR	1202941	ReturnStatement	return R_DEBUG_REASON_DEAD ;	686:3:17917:17943	1202852	1	True				
ANR	1202942	Identifier	R_DEBUG_REASON_DEAD		1202852	0					
ANR	1202943	IfStatement	if ( reason == R_DEBUG_REASON_ERROR )		1202852	2					
ANR	1202944	Condition	reason == R_DEBUG_REASON_ERROR	690:6:17997:18026	1202852	0	True				
ANR	1202945	EqualityExpression	reason == R_DEBUG_REASON_ERROR		1202852	0		==			
ANR	1202946	Identifier	reason		1202852	0					
ANR	1202947	Identifier	R_DEBUG_REASON_ERROR		1202852	1					
ANR	1202948	CompoundStatement		27:38:645:645	1202852	1					
ANR	1202949	ReturnStatement	return R_DEBUG_REASON_ERROR ;	691:3:18034:18061	1202852	0	True				
ANR	1202950	Identifier	R_DEBUG_REASON_ERROR		1202852	0					
ANR	1202951	IfStatement	"if ( ! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false ) )"		1202852	3					
ANR	1202952	Condition	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	695:6:18113:18158	1202852	0	True				
ANR	1202953	UnaryOperationExpression	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1202852	0					
ANR	1202954	UnaryOperator	!		1202852	0					
ANR	1202955	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1202852	1					
ANR	1202956	Callee	r_debug_reg_sync		1202852	0					
ANR	1202957	Identifier	r_debug_reg_sync		1202852	0					
ANR	1202958	ArgumentList	dbg		1202852	1					
ANR	1202959	Argument	dbg		1202852	0					
ANR	1202960	Identifier	dbg		1202852	0					
ANR	1202961	Argument	R_REG_TYPE_GPR		1202852	1					
ANR	1202962	Identifier	R_REG_TYPE_GPR		1202852	0					
ANR	1202963	Argument	false		1202852	2					
ANR	1202964	Identifier	false		1202852	0					
ANR	1202965	CompoundStatement		32:54:777:777	1202852	1					
ANR	1202966	ReturnStatement	return R_DEBUG_REASON_ERROR ;	696:3:18166:18193	1202852	0	True				
ANR	1202967	Identifier	R_DEBUG_REASON_ERROR		1202852	0					
ANR	1202968	IdentifierDeclStatement	bool libs_bp = ( dbg -> glob_libs || dbg -> glob_unlibs ) ? true : false ;	699:2:18202:18268	1202852	4	True				
ANR	1202969	IdentifierDecl	libs_bp = ( dbg -> glob_libs || dbg -> glob_unlibs ) ? true : false		1202852	0					
ANR	1202970	IdentifierDeclType	bool		1202852	0					
ANR	1202971	Identifier	libs_bp		1202852	1					
ANR	1202972	AssignmentExpression	libs_bp = ( dbg -> glob_libs || dbg -> glob_unlibs ) ? true : false		1202852	2		=			
ANR	1202973	Identifier	libs_bp		1202852	0					
ANR	1202974	ConditionalExpression	( dbg -> glob_libs || dbg -> glob_unlibs ) ? true : false		1202852	1					
ANR	1202975	Condition	dbg -> glob_libs || dbg -> glob_unlibs		1202852	0					
ANR	1202976	OrExpression	dbg -> glob_libs || dbg -> glob_unlibs		1202852	0		||			
ANR	1202977	PtrMemberAccess	dbg -> glob_libs		1202852	0					
ANR	1202978	Identifier	dbg		1202852	0					
ANR	1202979	Identifier	glob_libs		1202852	1					
ANR	1202980	PtrMemberAccess	dbg -> glob_unlibs		1202852	1					
ANR	1202981	Identifier	dbg		1202852	0					
ANR	1202982	Identifier	glob_unlibs		1202852	1					
ANR	1202983	Identifier	true		1202852	1					
ANR	1202984	Identifier	false		1202852	2					
ANR	1202985	IfStatement	if ( reason == R_DEBUG_REASON_BREAKPOINT || reason == R_DEBUG_REASON_STEP || ( libs_bp && ( ( reason == R_DEBUG_REASON_NEW_LIB ) || ( reason == R_DEBUG_REASON_EXIT_LIB ) ) ) )		1202852	5					
ANR	1202986	Condition	reason == R_DEBUG_REASON_BREAKPOINT || reason == R_DEBUG_REASON_STEP || ( libs_bp && ( ( reason == R_DEBUG_REASON_NEW_LIB ) || ( reason == R_DEBUG_REASON_EXIT_LIB ) ) )	701:6:18349:18514	1202852	0	True				
ANR	1202987	OrExpression	reason == R_DEBUG_REASON_BREAKPOINT || reason == R_DEBUG_REASON_STEP || ( libs_bp && ( ( reason == R_DEBUG_REASON_NEW_LIB ) || ( reason == R_DEBUG_REASON_EXIT_LIB ) ) )		1202852	0		||			
ANR	1202988	EqualityExpression	reason == R_DEBUG_REASON_BREAKPOINT		1202852	0		==			
ANR	1202989	Identifier	reason		1202852	0					
ANR	1202990	Identifier	R_DEBUG_REASON_BREAKPOINT		1202852	1					
ANR	1202991	OrExpression	reason == R_DEBUG_REASON_STEP || ( libs_bp && ( ( reason == R_DEBUG_REASON_NEW_LIB ) || ( reason == R_DEBUG_REASON_EXIT_LIB ) ) )		1202852	1		||			
ANR	1202992	EqualityExpression	reason == R_DEBUG_REASON_STEP		1202852	0		==			
ANR	1202993	Identifier	reason		1202852	0					
ANR	1202994	Identifier	R_DEBUG_REASON_STEP		1202852	1					
ANR	1202995	AndExpression	libs_bp && ( ( reason == R_DEBUG_REASON_NEW_LIB ) || ( reason == R_DEBUG_REASON_EXIT_LIB ) )		1202852	1		&&			
ANR	1202996	Identifier	libs_bp		1202852	0					
ANR	1202997	OrExpression	( reason == R_DEBUG_REASON_NEW_LIB ) || ( reason == R_DEBUG_REASON_EXIT_LIB )		1202852	1		||			
ANR	1202998	EqualityExpression	reason == R_DEBUG_REASON_NEW_LIB		1202852	0		==			
ANR	1202999	Identifier	reason		1202852	0					
ANR	1203000	Identifier	R_DEBUG_REASON_NEW_LIB		1202852	1					
ANR	1203001	EqualityExpression	reason == R_DEBUG_REASON_EXIT_LIB		1202852	1		==			
ANR	1203002	Identifier	reason		1202852	0					
ANR	1203003	Identifier	R_DEBUG_REASON_EXIT_LIB		1202852	1					
ANR	1203004	CompoundStatement		43:3:1188:1195	1202852	1					
ANR	1203005	IdentifierDeclStatement	RRegItem * pc_ri ;	704:3:18522:18537	1202852	0	True				
ANR	1203006	IdentifierDecl	* pc_ri		1202852	0					
ANR	1203007	IdentifierDeclType	RRegItem *		1202852	0					
ANR	1203008	Identifier	pc_ri		1202852	1					
ANR	1203009	IdentifierDeclStatement	RBreakpointItem * b = NULL ;	705:3:18542:18567	1202852	1	True				
ANR	1203010	IdentifierDecl	* b = NULL		1202852	0					
ANR	1203011	IdentifierDeclType	RBreakpointItem *		1202852	0					
ANR	1203012	Identifier	b		1202852	1					
ANR	1203013	AssignmentExpression	* b = NULL		1202852	2		=			
ANR	1203014	Identifier	NULL		1202852	0					
ANR	1203015	Identifier	NULL		1202852	1					
ANR	1203016	IdentifierDeclStatement	ut64 pc ;	706:3:18572:18579	1202852	2	True				
ANR	1203017	IdentifierDecl	pc		1202852	0					
ANR	1203018	IdentifierDeclType	ut64		1202852	0					
ANR	1203019	Identifier	pc		1202852	1					
ANR	1203020	ExpressionStatement	"pc_ri = r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_PC ] , - 1 )"	709:3:18619:18682	1202852	3	True				
ANR	1203021	AssignmentExpression	"pc_ri = r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_PC ] , - 1 )"		1202852	0		=			
ANR	1203022	Identifier	pc_ri		1202852	0					
ANR	1203023	CallExpression	"r_reg_get ( dbg -> reg , dbg -> reg -> name [ R_REG_NAME_PC ] , - 1 )"		1202852	1					
ANR	1203024	Callee	r_reg_get		1202852	0					
ANR	1203025	Identifier	r_reg_get		1202852	0					
ANR	1203026	ArgumentList	dbg -> reg		1202852	1					
ANR	1203027	Argument	dbg -> reg		1202852	0					
ANR	1203028	PtrMemberAccess	dbg -> reg		1202852	0					
ANR	1203029	Identifier	dbg		1202852	0					
ANR	1203030	Identifier	reg		1202852	1					
ANR	1203031	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1202852	1					
ANR	1203032	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1202852	0					
ANR	1203033	PtrMemberAccess	dbg -> reg -> name		1202852	0					
ANR	1203034	PtrMemberAccess	dbg -> reg		1202852	0					
ANR	1203035	Identifier	dbg		1202852	0					
ANR	1203036	Identifier	reg		1202852	1					
ANR	1203037	Identifier	name		1202852	1					
ANR	1203038	Identifier	R_REG_NAME_PC		1202852	1					
ANR	1203039	Argument	- 1		1202852	2					
ANR	1203040	UnaryOperationExpression	- 1		1202852	0					
ANR	1203041	UnaryOperator	-		1202852	0					
ANR	1203042	PrimaryExpression	1		1202852	1					
ANR	1203043	IfStatement	if ( ! pc_ri )		1202852	4					
ANR	1203044	Condition	! pc_ri	710:7:18691:18696	1202852	0	True				
ANR	1203045	UnaryOperationExpression	! pc_ri		1202852	0					
ANR	1203046	UnaryOperator	!		1202852	0					
ANR	1203047	Identifier	pc_ri		1202852	1					
ANR	1203048	CompoundStatement		47:15:1315:1315	1202852	1					
ANR	1203049	ExpressionStatement	"eprintf ( ""Couldn't find PC!\\n"" )"	711:4:18730:18761	1202852	0	True				
ANR	1203050	CallExpression	"eprintf ( ""Couldn't find PC!\\n"" )"		1202852	0					
ANR	1203051	Callee	eprintf		1202852	0					
ANR	1203052	Identifier	eprintf		1202852	0					
ANR	1203053	ArgumentList	"""Couldn't find PC!\\n"""		1202852	1					
ANR	1203054	Argument	"""Couldn't find PC!\\n"""		1202852	0					
ANR	1203055	PrimaryExpression	"""Couldn't find PC!\\n"""		1202852	0					
ANR	1203056	ReturnStatement	return R_DEBUG_REASON_ERROR ;	712:4:18767:18794	1202852	1	True				
ANR	1203057	Identifier	R_DEBUG_REASON_ERROR		1202852	0					
ANR	1203058	ExpressionStatement	"pc = r_reg_get_value ( dbg -> reg , pc_ri )"	716:3:18828:18866	1202852	5	True				
ANR	1203059	AssignmentExpression	"pc = r_reg_get_value ( dbg -> reg , pc_ri )"		1202852	0		=			
ANR	1203060	Identifier	pc		1202852	0					
ANR	1203061	CallExpression	"r_reg_get_value ( dbg -> reg , pc_ri )"		1202852	1					
ANR	1203062	Callee	r_reg_get_value		1202852	0					
ANR	1203063	Identifier	r_reg_get_value		1202852	0					
ANR	1203064	ArgumentList	dbg -> reg		1202852	1					
ANR	1203065	Argument	dbg -> reg		1202852	0					
ANR	1203066	PtrMemberAccess	dbg -> reg		1202852	0					
ANR	1203067	Identifier	dbg		1202852	0					
ANR	1203068	Identifier	reg		1202852	1					
ANR	1203069	Argument	pc_ri		1202852	1					
ANR	1203070	Identifier	pc_ri		1202852	0					
ANR	1203071	IfStatement	"if ( ! r_debug_bp_hit ( dbg , pc_ri , pc , & b ) )"		1202852	6					
ANR	1203072	Condition	"! r_debug_bp_hit ( dbg , pc_ri , pc , & b )"	718:7:18876:18911	1202852	0	True				
ANR	1203073	UnaryOperationExpression	"! r_debug_bp_hit ( dbg , pc_ri , pc , & b )"		1202852	0					
ANR	1203074	UnaryOperator	!		1202852	0					
ANR	1203075	CallExpression	"r_debug_bp_hit ( dbg , pc_ri , pc , & b )"		1202852	1					
ANR	1203076	Callee	r_debug_bp_hit		1202852	0					
ANR	1203077	Identifier	r_debug_bp_hit		1202852	0					
ANR	1203078	ArgumentList	dbg		1202852	1					
ANR	1203079	Argument	dbg		1202852	0					
ANR	1203080	Identifier	dbg		1202852	0					
ANR	1203081	Argument	pc_ri		1202852	1					
ANR	1203082	Identifier	pc_ri		1202852	0					
ANR	1203083	Argument	pc		1202852	2					
ANR	1203084	Identifier	pc		1202852	0					
ANR	1203085	Argument	& b		1202852	3					
ANR	1203086	UnaryOperationExpression	& b		1202852	0					
ANR	1203087	UnaryOperator	&		1202852	0					
ANR	1203088	Identifier	b		1202852	1					
ANR	1203089	CompoundStatement		55:45:1530:1530	1202852	1					
ANR	1203090	ReturnStatement	return R_DEBUG_REASON_ERROR ;	719:4:18920:18947	1202852	0	True				
ANR	1203091	Identifier	R_DEBUG_REASON_ERROR		1202852	0					
ANR	1203092	IfStatement	if ( bp )		1202852	7					
ANR	1203093	Condition	bp	722:7:18962:18963	1202852	0	True				
ANR	1203094	Identifier	bp		1202852	0					
ANR	1203095	CompoundStatement		59:11:1582:1582	1202852	1					
ANR	1203096	ExpressionStatement	* bp = b	723:4:18972:18979	1202852	0	True				
ANR	1203097	AssignmentExpression	* bp = b		1202852	0		=			
ANR	1203098	UnaryOperationExpression	* bp		1202852	0					
ANR	1203099	UnaryOperator	*		1202852	0					
ANR	1203100	Identifier	bp		1202852	1					
ANR	1203101	Identifier	b		1202852	1					
ANR	1203102	IfStatement	if ( dbg -> corebind . core && b && b -> cond )		1202852	8					
ANR	1203103	Condition	dbg -> corebind . core && b && b -> cond	728:7:19096:19129	1202852	0	True				
ANR	1203104	AndExpression	dbg -> corebind . core && b && b -> cond		1202852	0		&&			
ANR	1203105	MemberAccess	dbg -> corebind . core		1202852	0					
ANR	1203106	PtrMemberAccess	dbg -> corebind		1202852	0					
ANR	1203107	Identifier	dbg		1202852	0					
ANR	1203108	Identifier	corebind		1202852	1					
ANR	1203109	Identifier	core		1202852	1					
ANR	1203110	AndExpression	b && b -> cond		1202852	1		&&			
ANR	1203111	Identifier	b		1202852	0					
ANR	1203112	PtrMemberAccess	b -> cond		1202852	1					
ANR	1203113	Identifier	b		1202852	0					
ANR	1203114	Identifier	cond		1202852	1					
ANR	1203115	CompoundStatement		65:43:1748:1748	1202852	1					
ANR	1203116	ExpressionStatement	reason = R_DEBUG_REASON_COND	729:4:19138:19166	1202852	0	True				
ANR	1203117	AssignmentExpression	reason = R_DEBUG_REASON_COND		1202852	0		=			
ANR	1203118	Identifier	reason		1202852	0					
ANR	1203119	Identifier	R_DEBUG_REASON_COND		1202852	1					
ANR	1203120	IfStatement	if ( b && b -> trace )		1202852	9					
ANR	1203121	Condition	b && b -> trace	731:7:19180:19192	1202852	0	True				
ANR	1203122	AndExpression	b && b -> trace		1202852	0		&&			
ANR	1203123	Identifier	b		1202852	0					
ANR	1203124	PtrMemberAccess	b -> trace		1202852	1					
ANR	1203125	Identifier	b		1202852	0					
ANR	1203126	Identifier	trace		1202852	1					
ANR	1203127	CompoundStatement		68:22:1811:1811	1202852	1					
ANR	1203128	ExpressionStatement	reason = R_DEBUG_REASON_TRACEPOINT	732:4:19201:19235	1202852	0	True				
ANR	1203129	AssignmentExpression	reason = R_DEBUG_REASON_TRACEPOINT		1202852	0		=			
ANR	1203130	Identifier	reason		1202852	0					
ANR	1203131	Identifier	R_DEBUG_REASON_TRACEPOINT		1202852	1					
ANR	1203132	ExpressionStatement	dbg -> reason . type = reason	736:2:19249:19274	1202852	6	True				
ANR	1203133	AssignmentExpression	dbg -> reason . type = reason		1202852	0		=			
ANR	1203134	MemberAccess	dbg -> reason . type		1202852	0					
ANR	1203135	PtrMemberAccess	dbg -> reason		1202852	0					
ANR	1203136	Identifier	dbg		1202852	0					
ANR	1203137	Identifier	reason		1202852	1					
ANR	1203138	Identifier	type		1202852	1					
ANR	1203139	Identifier	reason		1202852	1					
ANR	1203140	IfStatement	if ( reason == R_DEBUG_REASON_SIGNAL && dbg -> reason . signum != - 1 )		1202852	7					
ANR	1203141	Condition	reason == R_DEBUG_REASON_SIGNAL && dbg -> reason . signum != - 1	737:6:19282:19340	1202852	0	True				
ANR	1203142	AndExpression	reason == R_DEBUG_REASON_SIGNAL && dbg -> reason . signum != - 1		1202852	0		&&			
ANR	1203143	EqualityExpression	reason == R_DEBUG_REASON_SIGNAL		1202852	0		==			
ANR	1203144	Identifier	reason		1202852	0					
ANR	1203145	Identifier	R_DEBUG_REASON_SIGNAL		1202852	1					
ANR	1203146	EqualityExpression	dbg -> reason . signum != - 1		1202852	1		!=			
ANR	1203147	MemberAccess	dbg -> reason . signum		1202852	0					
ANR	1203148	PtrMemberAccess	dbg -> reason		1202852	0					
ANR	1203149	Identifier	dbg		1202852	0					
ANR	1203150	Identifier	reason		1202852	1					
ANR	1203151	Identifier	signum		1202852	1					
ANR	1203152	UnaryOperationExpression	- 1		1202852	1					
ANR	1203153	UnaryOperator	-		1202852	0					
ANR	1203154	PrimaryExpression	1		1202852	1					
ANR	1203155	CompoundStatement		77:3:2070:2128	1202852	1					
ANR	1203156	IdentifierDeclStatement	"int what = r_debug_signal_what ( dbg , dbg -> reason . signum ) ;"	739:3:19393:19449	1202852	0	True				
ANR	1203157	IdentifierDecl	"what = r_debug_signal_what ( dbg , dbg -> reason . signum )"		1202852	0					
ANR	1203158	IdentifierDeclType	int		1202852	0					
ANR	1203159	Identifier	what		1202852	1					
ANR	1203160	AssignmentExpression	"what = r_debug_signal_what ( dbg , dbg -> reason . signum )"		1202852	2		=			
ANR	1203161	Identifier	what		1202852	0					
ANR	1203162	CallExpression	"r_debug_signal_what ( dbg , dbg -> reason . signum )"		1202852	1					
ANR	1203163	Callee	r_debug_signal_what		1202852	0					
ANR	1203164	Identifier	r_debug_signal_what		1202852	0					
ANR	1203165	ArgumentList	dbg		1202852	1					
ANR	1203166	Argument	dbg		1202852	0					
ANR	1203167	Identifier	dbg		1202852	0					
ANR	1203168	Argument	dbg -> reason . signum		1202852	1					
ANR	1203169	MemberAccess	dbg -> reason . signum		1202852	0					
ANR	1203170	PtrMemberAccess	dbg -> reason		1202852	0					
ANR	1203171	Identifier	dbg		1202852	0					
ANR	1203172	Identifier	reason		1202852	1					
ANR	1203173	Identifier	signum		1202852	1					
ANR	1203174	IdentifierDeclStatement	const char * name = r_signal_to_string ( dbg -> reason . signum ) ;	740:3:19454:19512	1202852	1	True				
ANR	1203175	IdentifierDecl	* name = r_signal_to_string ( dbg -> reason . signum )		1202852	0					
ANR	1203176	IdentifierDeclType	const char *		1202852	0					
ANR	1203177	Identifier	name		1202852	1					
ANR	1203178	AssignmentExpression	* name = r_signal_to_string ( dbg -> reason . signum )		1202852	2		=			
ANR	1203179	Identifier	name		1202852	0					
ANR	1203180	CallExpression	r_signal_to_string ( dbg -> reason . signum )		1202852	1					
ANR	1203181	Callee	r_signal_to_string		1202852	0					
ANR	1203182	Identifier	r_signal_to_string		1202852	0					
ANR	1203183	ArgumentList	dbg -> reason . signum		1202852	1					
ANR	1203184	Argument	dbg -> reason . signum		1202852	0					
ANR	1203185	MemberAccess	dbg -> reason . signum		1202852	0					
ANR	1203186	PtrMemberAccess	dbg -> reason		1202852	0					
ANR	1203187	Identifier	dbg		1202852	0					
ANR	1203188	Identifier	reason		1202852	1					
ANR	1203189	Identifier	signum		1202852	1					
ANR	1203190	IfStatement	"if ( name && strcmp ( ""SIGTRAP"" , name ) )"		1202852	2					
ANR	1203191	Condition	"name && strcmp ( ""SIGTRAP"" , name )"	741:7:19521:19552	1202852	0	True				
ANR	1203192	AndExpression	"name && strcmp ( ""SIGTRAP"" , name )"		1202852	0		&&			
ANR	1203193	Identifier	name		1202852	0					
ANR	1203194	CallExpression	"strcmp ( ""SIGTRAP"" , name )"		1202852	1					
ANR	1203195	Callee	strcmp		1202852	0					
ANR	1203196	Identifier	strcmp		1202852	0					
ANR	1203197	ArgumentList	"""SIGTRAP"""		1202852	1					
ANR	1203198	Argument	"""SIGTRAP"""		1202852	0					
ANR	1203199	PrimaryExpression	"""SIGTRAP"""		1202852	0					
ANR	1203200	Argument	name		1202852	1					
ANR	1203201	Identifier	name		1202852	0					
ANR	1203202	CompoundStatement		78:41:2171:2171	1202852	1					
ANR	1203203	ExpressionStatement	"r_cons_printf ( ""[+] signal %d aka %s received %d\\n"" , dbg -> reason . signum , name , what )"	742:4:19561:19651	1202852	0	True				
ANR	1203204	CallExpression	"r_cons_printf ( ""[+] signal %d aka %s received %d\\n"" , dbg -> reason . signum , name , what )"		1202852	0					
ANR	1203205	Callee	r_cons_printf		1202852	0					
ANR	1203206	Identifier	r_cons_printf		1202852	0					
ANR	1203207	ArgumentList	"""[+] signal %d aka %s received %d\\n"""		1202852	1					
ANR	1203208	Argument	"""[+] signal %d aka %s received %d\\n"""		1202852	0					
ANR	1203209	PrimaryExpression	"""[+] signal %d aka %s received %d\\n"""		1202852	0					
ANR	1203210	Argument	dbg -> reason . signum		1202852	1					
ANR	1203211	MemberAccess	dbg -> reason . signum		1202852	0					
ANR	1203212	PtrMemberAccess	dbg -> reason		1202852	0					
ANR	1203213	Identifier	dbg		1202852	0					
ANR	1203214	Identifier	reason		1202852	1					
ANR	1203215	Identifier	signum		1202852	1					
ANR	1203216	Argument	name		1202852	2					
ANR	1203217	Identifier	name		1202852	0					
ANR	1203218	Argument	what		1202852	3					
ANR	1203219	Identifier	what		1202852	0					
ANR	1203220	ReturnStatement	return reason ;	747:1:19666:19679	1202852	6	True				
ANR	1203221	Identifier	reason		1202852	0					
ANR	1203222	ReturnType	R_API RDebugReasonType		1202852	1					
ANR	1203223	Identifier	r_debug_wait		1202852	2					
ANR	1203224	ParameterList	"RDebug * dbg , RBreakpointItem * * bp"		1202852	3					
ANR	1203225	Parameter	RDebug * dbg	664:36:17348:17358	1202852	0	True				
ANR	1203226	ParameterType	RDebug *		1202852	0					
ANR	1203227	Identifier	dbg		1202852	1					
ANR	1203228	Parameter	RBreakpointItem * * bp	664:49:17361:17380	1202852	1	True				
ANR	1203229	ParameterType	RBreakpointItem * *		1202852	0					
ANR	1203230	Identifier	bp		1202852	1					
ANR	1203231	CFGEntryNode	ENTRY		1202852		True				
ANR	1203232	CFGExitNode	EXIT		1202852		True				
ANR	1203233	Symbol	reason		1202852						
ANR	1203234	Symbol	R_DEBUG_REASON_ERROR		1202852						
ANR	1203235	Symbol	R_REG_NAME_PC		1202852						
ANR	1203236	Symbol	R_DEBUG_REASON_COND		1202852						
ANR	1203237	Symbol	r_debug_signal_what		1202852						
ANR	1203238	Symbol	* dbg -> reg -> name		1202852						
ANR	1203239	Symbol	dbg -> corebind . core		1202852						
ANR	1203240	Symbol	dbg -> reason . type		1202852						
ANR	1203241	Symbol	dbg -> reason . signum		1202852						
ANR	1203242	Symbol	* bp		1202852						
ANR	1203243	Symbol	R_DEBUG_REASON_TRACEPOINT		1202852						
ANR	1203244	Symbol	r_reg_get		1202852						
ANR	1203245	Symbol	strcmp		1202852						
ANR	1203246	Symbol	b -> trace		1202852						
ANR	1203247	Symbol	NULL		1202852						
ANR	1203248	Symbol	dbg -> reason		1202852						
ANR	1203249	Symbol	dbg -> h -> wait		1202852						
ANR	1203250	Symbol	dbg		1202852						
ANR	1203251	Symbol	r_signal_to_string		1202852						
ANR	1203252	Symbol	dbg -> corebind		1202852						
ANR	1203253	Symbol	dbg -> glob_libs		1202852						
ANR	1203254	Symbol	true		1202852						
ANR	1203255	Symbol	name		1202852						
ANR	1203256	Symbol	R_DEBUG_REASON_STEP		1202852						
ANR	1203257	Symbol	r_debug_bp_hit		1202852						
ANR	1203258	Symbol	R_DEBUG_REASON_SIGNAL		1202852						
ANR	1203259	Symbol	dbg -> reg -> name		1202852						
ANR	1203260	Symbol	r_debug_reg_sync		1202852						
ANR	1203261	Symbol	* dbg -> h		1202852						
ANR	1203262	Symbol	R_DEBUG_REASON_DEAD		1202852						
ANR	1203263	Symbol	bp		1202852						
ANR	1203264	Symbol	* R_REG_NAME_PC		1202852						
ANR	1203265	Symbol	pc_ri		1202852						
ANR	1203266	Symbol	R_REG_TYPE_GPR		1202852						
ANR	1203267	Symbol	b		1202852						
ANR	1203268	Symbol	r_reg_get_value		1202852						
ANR	1203269	Symbol	dbg -> h		1202852						
ANR	1203270	Symbol	* * * dbg		1202852						
ANR	1203271	Symbol	false		1202852						
ANR	1203272	Symbol	& b		1202852						
ANR	1203273	Symbol	* dbg		1202852						
ANR	1203274	Symbol	* b		1202852						
ANR	1203275	Symbol	* * dbg -> reg		1202852						
ANR	1203276	Symbol	R_DEBUG_REASON_UNKNOWN		1202852						
ANR	1203277	Symbol	* dbg -> reg		1202852						
ANR	1203278	Symbol	R_DEBUG_REASON_EXIT_LIB		1202852						
ANR	1203279	Symbol	R_DEBUG_REASON_BREAKPOINT		1202852						
ANR	1203280	Symbol	r_debug_is_dead		1202852						
ANR	1203281	Symbol	dbg -> glob_unlibs		1202852						
ANR	1203282	Symbol	pc		1202852						
ANR	1203283	Symbol	what		1202852						
ANR	1203284	Symbol	dbg -> pid		1202852						
ANR	1203285	Symbol	R_DEBUG_REASON_NEW_LIB		1202852						
ANR	1203286	Symbol	libs_bp		1202852						
ANR	1203287	Symbol	dbg -> reg		1202852						
ANR	1203288	Symbol	* * dbg		1202852						
ANR	1203289	Symbol	b -> cond		1202852						
ANR	1203290	Function	r_debug_step_soft	750:0:19684:21974							
ANR	1203291	FunctionDef	r_debug_step_soft (RDebug * dbg)		1203290	0					
ANR	1203292	CompoundStatement		750:41:19725:21974	1203290	0					
ANR	1203293	IdentifierDeclStatement	ut8 buf [ 32 ] ;	751:1:19728:19739	1203290	0	True				
ANR	1203294	IdentifierDecl	buf [ 32 ]		1203290	0					
ANR	1203295	IdentifierDeclType	ut8 [ 32 ]		1203290	0					
ANR	1203296	Identifier	buf		1203290	1					
ANR	1203297	PrimaryExpression	32		1203290	2					
ANR	1203298	IdentifierDeclStatement	"ut64 pc , sp , r ;"	752:1:19742:19756	1203290	1	True				
ANR	1203299	IdentifierDecl	pc		1203290	0					
ANR	1203300	IdentifierDeclType	ut64		1203290	0					
ANR	1203301	Identifier	pc		1203290	1					
ANR	1203302	IdentifierDecl	sp		1203290	1					
ANR	1203303	IdentifierDeclType	ut64		1203290	0					
ANR	1203304	Identifier	sp		1203290	1					
ANR	1203305	IdentifierDecl	r		1203290	2					
ANR	1203306	IdentifierDeclType	ut64		1203290	0					
ANR	1203307	Identifier	r		1203290	1					
ANR	1203308	IdentifierDeclStatement	ut64 next [ 2 ] ;	753:1:19759:19771	1203290	2	True				
ANR	1203309	IdentifierDecl	next [ 2 ]		1203290	0					
ANR	1203310	IdentifierDeclType	ut64 [ 2 ]		1203290	0					
ANR	1203311	Identifier	next		1203290	1					
ANR	1203312	PrimaryExpression	2		1203290	2					
ANR	1203313	IdentifierDeclStatement	RAnalOp op ;	754:1:19774:19784	1203290	3	True				
ANR	1203314	IdentifierDecl	op		1203290	0					
ANR	1203315	IdentifierDeclType	RAnalOp		1203290	0					
ANR	1203316	Identifier	op		1203290	1					
ANR	1203317	IdentifierDeclStatement	"int br , i , ret ;"	755:1:19787:19801	1203290	4	True				
ANR	1203318	IdentifierDecl	br		1203290	0					
ANR	1203319	IdentifierDeclType	int		1203290	0					
ANR	1203320	Identifier	br		1203290	1					
ANR	1203321	IdentifierDecl	i		1203290	1					
ANR	1203322	IdentifierDeclType	int		1203290	0					
ANR	1203323	Identifier	i		1203290	1					
ANR	1203324	IdentifierDecl	ret		1203290	2					
ANR	1203325	IdentifierDeclType	int		1203290	0					
ANR	1203326	Identifier	ret		1203290	1					
ANR	1203327	ClassDefStatement	union { ut64 r64 ; ut32 r32 [ 2 ] ; } sp_top ;	756:1:19804:19848	1203290	5	True				
ANR	1203328	IdentifierDecl	sp_top		1203290	0					
ANR	1203329	IdentifierDeclType			1203290	0					
ANR	1203330	Identifier	sp_top		1203290	1					
ANR	1203331	ClassDefStatement	union { ut64 r64 ; ut32 r32 [ 2 ] ; } memval ;	760:1:19851:19895	1203290	6	True				
ANR	1203332	IdentifierDecl	memval		1203290	0					
ANR	1203333	IdentifierDeclType			1203290	0					
ANR	1203334	Identifier	memval		1203290	1					
ANR	1203335	IfStatement	if ( dbg -> recoil_mode == R_DBG_RECOIL_NONE )		1203290	7					
ANR	1203336	Condition	dbg -> recoil_mode == R_DBG_RECOIL_NONE	765:5:19903:19939	1203290	0	True				
ANR	1203337	EqualityExpression	dbg -> recoil_mode == R_DBG_RECOIL_NONE		1203290	0		==			
ANR	1203338	PtrMemberAccess	dbg -> recoil_mode		1203290	0					
ANR	1203339	Identifier	dbg		1203290	0					
ANR	1203340	Identifier	recoil_mode		1203290	1					
ANR	1203341	Identifier	R_DBG_RECOIL_NONE		1203290	1					
ANR	1203342	CompoundStatement		16:44:216:216	1203290	1					
ANR	1203343	ExpressionStatement	dbg -> recoil_mode = R_DBG_RECOIL_STEP	766:2:19946:19982	1203290	0	True				
ANR	1203344	AssignmentExpression	dbg -> recoil_mode = R_DBG_RECOIL_STEP		1203290	0		=			
ANR	1203345	PtrMemberAccess	dbg -> recoil_mode		1203290	0					
ANR	1203346	Identifier	dbg		1203290	0					
ANR	1203347	Identifier	recoil_mode		1203290	1					
ANR	1203348	Identifier	R_DBG_RECOIL_STEP		1203290	1					
ANR	1203349	IfStatement	if ( r_debug_is_dead ( dbg ) )		1203290	8					
ANR	1203350	Condition	r_debug_is_dead ( dbg )	769:5:19993:20013	1203290	0	True				
ANR	1203351	CallExpression	r_debug_is_dead ( dbg )		1203290	0					
ANR	1203352	Callee	r_debug_is_dead		1203290	0					
ANR	1203353	Identifier	r_debug_is_dead		1203290	0					
ANR	1203354	ArgumentList	dbg		1203290	1					
ANR	1203355	Argument	dbg		1203290	0					
ANR	1203356	Identifier	dbg		1203290	0					
ANR	1203357	CompoundStatement		20:28:290:290	1203290	1					
ANR	1203358	ReturnStatement	return false ;	770:2:20020:20032	1203290	0	True				
ANR	1203359	Identifier	false		1203290	0					
ANR	1203360	ExpressionStatement	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"	773:1:20039:20096	1203290	9	True				
ANR	1203361	AssignmentExpression	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1203290	0		=			
ANR	1203362	Identifier	pc		1203290	0					
ANR	1203363	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1203290	1					
ANR	1203364	Callee	r_debug_reg_get		1203290	0					
ANR	1203365	Identifier	r_debug_reg_get		1203290	0					
ANR	1203366	ArgumentList	dbg		1203290	1					
ANR	1203367	Argument	dbg		1203290	0					
ANR	1203368	Identifier	dbg		1203290	0					
ANR	1203369	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1203290	1					
ANR	1203370	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1203290	0					
ANR	1203371	PtrMemberAccess	dbg -> reg -> name		1203290	0					
ANR	1203372	PtrMemberAccess	dbg -> reg		1203290	0					
ANR	1203373	Identifier	dbg		1203290	0					
ANR	1203374	Identifier	reg		1203290	1					
ANR	1203375	Identifier	name		1203290	1					
ANR	1203376	Identifier	R_REG_NAME_PC		1203290	1					
ANR	1203377	ExpressionStatement	"sp = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_SP ] )"	774:1:20099:20156	1203290	10	True				
ANR	1203378	AssignmentExpression	"sp = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_SP ] )"		1203290	0		=			
ANR	1203379	Identifier	sp		1203290	0					
ANR	1203380	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_SP ] )"		1203290	1					
ANR	1203381	Callee	r_debug_reg_get		1203290	0					
ANR	1203382	Identifier	r_debug_reg_get		1203290	0					
ANR	1203383	ArgumentList	dbg		1203290	1					
ANR	1203384	Argument	dbg		1203290	0					
ANR	1203385	Identifier	dbg		1203290	0					
ANR	1203386	Argument	dbg -> reg -> name [ R_REG_NAME_SP ]		1203290	1					
ANR	1203387	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_SP ]		1203290	0					
ANR	1203388	PtrMemberAccess	dbg -> reg -> name		1203290	0					
ANR	1203389	PtrMemberAccess	dbg -> reg		1203290	0					
ANR	1203390	Identifier	dbg		1203290	0					
ANR	1203391	Identifier	reg		1203290	1					
ANR	1203392	Identifier	name		1203290	1					
ANR	1203393	Identifier	R_REG_NAME_SP		1203290	1					
ANR	1203394	IfStatement	if ( ! dbg -> iob . read_at )		1203290	11					
ANR	1203395	Condition	! dbg -> iob . read_at	776:5:20164:20180	1203290	0	True				
ANR	1203396	UnaryOperationExpression	! dbg -> iob . read_at		1203290	0					
ANR	1203397	UnaryOperator	!		1203290	0					
ANR	1203398	MemberAccess	dbg -> iob . read_at		1203290	1					
ANR	1203399	PtrMemberAccess	dbg -> iob		1203290	0					
ANR	1203400	Identifier	dbg		1203290	0					
ANR	1203401	Identifier	iob		1203290	1					
ANR	1203402	Identifier	read_at		1203290	1					
ANR	1203403	CompoundStatement		27:24:457:457	1203290	1					
ANR	1203404	ReturnStatement	return false ;	777:2:20187:20199	1203290	0	True				
ANR	1203405	Identifier	false		1203290	0					
ANR	1203406	IfStatement	"if ( ! dbg -> iob . read_at ( dbg -> iob . io , pc , buf , sizeof ( buf ) ) )"		1203290	12					
ANR	1203407	Condition	"! dbg -> iob . read_at ( dbg -> iob . io , pc , buf , sizeof ( buf ) )"	779:5:20209:20262	1203290	0	True				
ANR	1203408	UnaryOperationExpression	"! dbg -> iob . read_at ( dbg -> iob . io , pc , buf , sizeof ( buf ) )"		1203290	0					
ANR	1203409	UnaryOperator	!		1203290	0					
ANR	1203410	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , pc , buf , sizeof ( buf ) )"		1203290	1					
ANR	1203411	Callee	dbg -> iob . read_at		1203290	0					
ANR	1203412	MemberAccess	dbg -> iob . read_at		1203290	0					
ANR	1203413	PtrMemberAccess	dbg -> iob		1203290	0					
ANR	1203414	Identifier	dbg		1203290	0					
ANR	1203415	Identifier	iob		1203290	1					
ANR	1203416	Identifier	read_at		1203290	1					
ANR	1203417	ArgumentList	dbg -> iob . io		1203290	1					
ANR	1203418	Argument	dbg -> iob . io		1203290	0					
ANR	1203419	MemberAccess	dbg -> iob . io		1203290	0					
ANR	1203420	PtrMemberAccess	dbg -> iob		1203290	0					
ANR	1203421	Identifier	dbg		1203290	0					
ANR	1203422	Identifier	iob		1203290	1					
ANR	1203423	Identifier	io		1203290	1					
ANR	1203424	Argument	pc		1203290	1					
ANR	1203425	Identifier	pc		1203290	0					
ANR	1203426	Argument	buf		1203290	2					
ANR	1203427	Identifier	buf		1203290	0					
ANR	1203428	Argument	sizeof ( buf )		1203290	3					
ANR	1203429	SizeofExpression	sizeof ( buf )		1203290	0					
ANR	1203430	Sizeof	sizeof		1203290	0					
ANR	1203431	SizeofOperand	buf		1203290	1					
ANR	1203432	CompoundStatement		30:61:539:539	1203290	1					
ANR	1203433	ReturnStatement	return false ;	780:2:20269:20281	1203290	0	True				
ANR	1203434	Identifier	false		1203290	0					
ANR	1203435	IfStatement	"if ( ! r_anal_op ( dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC ) )"		1203290	13					
ANR	1203436	Condition	"! r_anal_op ( dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	782:5:20291:20362	1203290	0	True				
ANR	1203437	UnaryOperationExpression	"! r_anal_op ( dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		1203290	0					
ANR	1203438	UnaryOperator	!		1203290	0					
ANR	1203439	CallExpression	"r_anal_op ( dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		1203290	1					
ANR	1203440	Callee	r_anal_op		1203290	0					
ANR	1203441	Identifier	r_anal_op		1203290	0					
ANR	1203442	ArgumentList	dbg -> anal		1203290	1					
ANR	1203443	Argument	dbg -> anal		1203290	0					
ANR	1203444	PtrMemberAccess	dbg -> anal		1203290	0					
ANR	1203445	Identifier	dbg		1203290	0					
ANR	1203446	Identifier	anal		1203290	1					
ANR	1203447	Argument	& op		1203290	1					
ANR	1203448	UnaryOperationExpression	& op		1203290	0					
ANR	1203449	UnaryOperator	&		1203290	0					
ANR	1203450	Identifier	op		1203290	1					
ANR	1203451	Argument	pc		1203290	2					
ANR	1203452	Identifier	pc		1203290	0					
ANR	1203453	Argument	buf		1203290	3					
ANR	1203454	Identifier	buf		1203290	0					
ANR	1203455	Argument	sizeof ( buf )		1203290	4					
ANR	1203456	SizeofExpression	sizeof ( buf )		1203290	0					
ANR	1203457	Sizeof	sizeof		1203290	0					
ANR	1203458	SizeofOperand	buf		1203290	1					
ANR	1203459	Argument	R_ANAL_OP_MASK_BASIC		1203290	5					
ANR	1203460	Identifier	R_ANAL_OP_MASK_BASIC		1203290	0					
ANR	1203461	CompoundStatement		33:79:639:639	1203290	1					
ANR	1203462	ReturnStatement	return false ;	783:2:20369:20381	1203290	0	True				
ANR	1203463	Identifier	false		1203290	0					
ANR	1203464	IfStatement	if ( op . type == R_ANAL_OP_TYPE_ILL )		1203290	14					
ANR	1203465	Condition	op . type == R_ANAL_OP_TYPE_ILL	785:5:20391:20419	1203290	0	True				
ANR	1203466	EqualityExpression	op . type == R_ANAL_OP_TYPE_ILL		1203290	0		==			
ANR	1203467	MemberAccess	op . type		1203290	0					
ANR	1203468	Identifier	op		1203290	0					
ANR	1203469	Identifier	type		1203290	1					
ANR	1203470	Identifier	R_ANAL_OP_TYPE_ILL		1203290	1					
ANR	1203471	CompoundStatement		36:36:696:696	1203290	1					
ANR	1203472	ReturnStatement	return false ;	786:2:20426:20438	1203290	0	True				
ANR	1203473	Identifier	false		1203290	0					
ANR	1203474	SwitchStatement	switch ( op . type )		1203290	15					
ANR	1203475	Condition	op . type	788:9:20452:20458	1203290	0	True				
ANR	1203476	MemberAccess	op . type		1203290	0					
ANR	1203477	Identifier	op		1203290	0					
ANR	1203478	Identifier	type		1203290	1					
ANR	1203479	CompoundStatement		39:18:735:735	1203290	1					
ANR	1203480	Label	case R_ANAL_OP_TYPE_RET :	789:1:20464:20487	1203290	0	True				
ANR	1203481	Identifier	R_ANAL_OP_TYPE_RET		1203290	0					
ANR	1203482	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , sp , ( ut8 * ) & sp_top , 8 )"	790:2:20491:20544	1203290	1	True				
ANR	1203483	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , sp , ( ut8 * ) & sp_top , 8 )"		1203290	0					
ANR	1203484	Callee	dbg -> iob . read_at		1203290	0					
ANR	1203485	MemberAccess	dbg -> iob . read_at		1203290	0					
ANR	1203486	PtrMemberAccess	dbg -> iob		1203290	0					
ANR	1203487	Identifier	dbg		1203290	0					
ANR	1203488	Identifier	iob		1203290	1					
ANR	1203489	Identifier	read_at		1203290	1					
ANR	1203490	ArgumentList	dbg -> iob . io		1203290	1					
ANR	1203491	Argument	dbg -> iob . io		1203290	0					
ANR	1203492	MemberAccess	dbg -> iob . io		1203290	0					
ANR	1203493	PtrMemberAccess	dbg -> iob		1203290	0					
ANR	1203494	Identifier	dbg		1203290	0					
ANR	1203495	Identifier	iob		1203290	1					
ANR	1203496	Identifier	io		1203290	1					
ANR	1203497	Argument	sp		1203290	1					
ANR	1203498	Identifier	sp		1203290	0					
ANR	1203499	Argument	( ut8 * ) & sp_top		1203290	2					
ANR	1203500	CastExpression	( ut8 * ) & sp_top		1203290	0					
ANR	1203501	CastTarget	ut8 *		1203290	0					
ANR	1203502	UnaryOperationExpression	& sp_top		1203290	1					
ANR	1203503	UnaryOperator	&		1203290	0					
ANR	1203504	Identifier	sp_top		1203290	1					
ANR	1203505	Argument	8		1203290	3					
ANR	1203506	PrimaryExpression	8		1203290	0					
ANR	1203507	ExpressionStatement	next [ 0 ] = ( dbg -> bits == R_SYS_BITS_32 ) ? sp_top . r32 [ 0 ] : sp_top . r64	791:2:20548:20615	1203290	2	True				
ANR	1203508	AssignmentExpression	next [ 0 ] = ( dbg -> bits == R_SYS_BITS_32 ) ? sp_top . r32 [ 0 ] : sp_top . r64		1203290	0		=			
ANR	1203509	ArrayIndexing	next [ 0 ]		1203290	0					
ANR	1203510	Identifier	next		1203290	0					
ANR	1203511	PrimaryExpression	0		1203290	1					
ANR	1203512	ConditionalExpression	( dbg -> bits == R_SYS_BITS_32 ) ? sp_top . r32 [ 0 ] : sp_top . r64		1203290	1					
ANR	1203513	Condition	dbg -> bits == R_SYS_BITS_32		1203290	0					
ANR	1203514	EqualityExpression	dbg -> bits == R_SYS_BITS_32		1203290	0		==			
ANR	1203515	PtrMemberAccess	dbg -> bits		1203290	0					
ANR	1203516	Identifier	dbg		1203290	0					
ANR	1203517	Identifier	bits		1203290	1					
ANR	1203518	Identifier	R_SYS_BITS_32		1203290	1					
ANR	1203519	ArrayIndexing	sp_top . r32 [ 0 ]		1203290	1					
ANR	1203520	MemberAccess	sp_top . r32		1203290	0					
ANR	1203521	Identifier	sp_top		1203290	0					
ANR	1203522	Identifier	r32		1203290	1					
ANR	1203523	PrimaryExpression	0		1203290	1					
ANR	1203524	MemberAccess	sp_top . r64		1203290	2					
ANR	1203525	Identifier	sp_top		1203290	0					
ANR	1203526	Identifier	r64		1203290	1					
ANR	1203527	ExpressionStatement	br = 1	792:2:20619:20625	1203290	3	True				
ANR	1203528	AssignmentExpression	br = 1		1203290	0		=			
ANR	1203529	Identifier	br		1203290	0					
ANR	1203530	PrimaryExpression	1		1203290	1					
ANR	1203531	BreakStatement	break ;	793:2:20629:20634	1203290	4	True				
ANR	1203532	Label	case R_ANAL_OP_TYPE_CJMP :	794:1:20637:20661	1203290	5	True				
ANR	1203533	Identifier	R_ANAL_OP_TYPE_CJMP		1203290	0					
ANR	1203534	Label	case R_ANAL_OP_TYPE_CCALL :	795:1:20664:20689	1203290	6	True				
ANR	1203535	Identifier	R_ANAL_OP_TYPE_CCALL		1203290	0					
ANR	1203536	ExpressionStatement	next [ 0 ] = op . jump	796:2:20693:20710	1203290	7	True				
ANR	1203537	AssignmentExpression	next [ 0 ] = op . jump		1203290	0		=			
ANR	1203538	ArrayIndexing	next [ 0 ]		1203290	0					
ANR	1203539	Identifier	next		1203290	0					
ANR	1203540	PrimaryExpression	0		1203290	1					
ANR	1203541	MemberAccess	op . jump		1203290	1					
ANR	1203542	Identifier	op		1203290	0					
ANR	1203543	Identifier	jump		1203290	1					
ANR	1203544	ExpressionStatement	next [ 1 ] = op . fail	797:2:20714:20731	1203290	8	True				
ANR	1203545	AssignmentExpression	next [ 1 ] = op . fail		1203290	0		=			
ANR	1203546	ArrayIndexing	next [ 1 ]		1203290	0					
ANR	1203547	Identifier	next		1203290	0					
ANR	1203548	PrimaryExpression	1		1203290	1					
ANR	1203549	MemberAccess	op . fail		1203290	1					
ANR	1203550	Identifier	op		1203290	0					
ANR	1203551	Identifier	fail		1203290	1					
ANR	1203552	ExpressionStatement	br = 2	798:2:20735:20741	1203290	9	True				
ANR	1203553	AssignmentExpression	br = 2		1203290	0		=			
ANR	1203554	Identifier	br		1203290	0					
ANR	1203555	PrimaryExpression	2		1203290	1					
ANR	1203556	BreakStatement	break ;	799:2:20745:20750	1203290	10	True				
ANR	1203557	Label	case R_ANAL_OP_TYPE_CALL :	800:1:20753:20777	1203290	11	True				
ANR	1203558	Identifier	R_ANAL_OP_TYPE_CALL		1203290	0					
ANR	1203559	Label	case R_ANAL_OP_TYPE_JMP :	801:1:20780:20803	1203290	12	True				
ANR	1203560	Identifier	R_ANAL_OP_TYPE_JMP		1203290	0					
ANR	1203561	ExpressionStatement	next [ 0 ] = op . jump	802:2:20807:20824	1203290	13	True				
ANR	1203562	AssignmentExpression	next [ 0 ] = op . jump		1203290	0		=			
ANR	1203563	ArrayIndexing	next [ 0 ]		1203290	0					
ANR	1203564	Identifier	next		1203290	0					
ANR	1203565	PrimaryExpression	0		1203290	1					
ANR	1203566	MemberAccess	op . jump		1203290	1					
ANR	1203567	Identifier	op		1203290	0					
ANR	1203568	Identifier	jump		1203290	1					
ANR	1203569	ExpressionStatement	br = 1	803:2:20828:20834	1203290	14	True				
ANR	1203570	AssignmentExpression	br = 1		1203290	0		=			
ANR	1203571	Identifier	br		1203290	0					
ANR	1203572	PrimaryExpression	1		1203290	1					
ANR	1203573	BreakStatement	break ;	804:2:20838:20843	1203290	15	True				
ANR	1203574	Label	case R_ANAL_OP_TYPE_RJMP :	805:1:20846:20870	1203290	16	True				
ANR	1203575	Identifier	R_ANAL_OP_TYPE_RJMP		1203290	0					
ANR	1203576	Label	case R_ANAL_OP_TYPE_RCALL :	806:1:20873:20898	1203290	17	True				
ANR	1203577	Identifier	R_ANAL_OP_TYPE_RCALL		1203290	0					
ANR	1203578	ExpressionStatement	"r = r_debug_reg_get ( dbg , op . reg )"	807:2:20902:20934	1203290	18	True				
ANR	1203579	AssignmentExpression	"r = r_debug_reg_get ( dbg , op . reg )"		1203290	0		=			
ANR	1203580	Identifier	r		1203290	0					
ANR	1203581	CallExpression	"r_debug_reg_get ( dbg , op . reg )"		1203290	1					
ANR	1203582	Callee	r_debug_reg_get		1203290	0					
ANR	1203583	Identifier	r_debug_reg_get		1203290	0					
ANR	1203584	ArgumentList	dbg		1203290	1					
ANR	1203585	Argument	dbg		1203290	0					
ANR	1203586	Identifier	dbg		1203290	0					
ANR	1203587	Argument	op . reg		1203290	1					
ANR	1203588	MemberAccess	op . reg		1203290	0					
ANR	1203589	Identifier	op		1203290	0					
ANR	1203590	Identifier	reg		1203290	1					
ANR	1203591	ExpressionStatement	next [ 0 ] = r	808:2:20938:20949	1203290	19	True				
ANR	1203592	AssignmentExpression	next [ 0 ] = r		1203290	0		=			
ANR	1203593	ArrayIndexing	next [ 0 ]		1203290	0					
ANR	1203594	Identifier	next		1203290	0					
ANR	1203595	PrimaryExpression	0		1203290	1					
ANR	1203596	Identifier	r		1203290	1					
ANR	1203597	ExpressionStatement	br = 1	809:2:20953:20959	1203290	20	True				
ANR	1203598	AssignmentExpression	br = 1		1203290	0		=			
ANR	1203599	Identifier	br		1203290	0					
ANR	1203600	PrimaryExpression	1		1203290	1					
ANR	1203601	BreakStatement	break ;	810:2:20963:20968	1203290	21	True				
ANR	1203602	Label	case R_ANAL_OP_TYPE_IRCALL :	811:1:20971:20997	1203290	22	True				
ANR	1203603	Identifier	R_ANAL_OP_TYPE_IRCALL		1203290	0					
ANR	1203604	Label	case R_ANAL_OP_TYPE_IRJMP :	812:1:21000:21025	1203290	23	True				
ANR	1203605	Identifier	R_ANAL_OP_TYPE_IRJMP		1203290	0					
ANR	1203606	ExpressionStatement	"r = r_debug_reg_get ( dbg , op . reg )"	813:2:21029:21061	1203290	24	True				
ANR	1203607	AssignmentExpression	"r = r_debug_reg_get ( dbg , op . reg )"		1203290	0		=			
ANR	1203608	Identifier	r		1203290	0					
ANR	1203609	CallExpression	"r_debug_reg_get ( dbg , op . reg )"		1203290	1					
ANR	1203610	Callee	r_debug_reg_get		1203290	0					
ANR	1203611	Identifier	r_debug_reg_get		1203290	0					
ANR	1203612	ArgumentList	dbg		1203290	1					
ANR	1203613	Argument	dbg		1203290	0					
ANR	1203614	Identifier	dbg		1203290	0					
ANR	1203615	Argument	op . reg		1203290	1					
ANR	1203616	MemberAccess	op . reg		1203290	0					
ANR	1203617	Identifier	op		1203290	0					
ANR	1203618	Identifier	reg		1203290	1					
ANR	1203619	IfStatement	"if ( ! dbg -> iob . read_at ( dbg -> iob . io , r , ( ut8 * ) & memval , 8 ) )"		1203290	25					
ANR	1203620	Condition	"! dbg -> iob . read_at ( dbg -> iob . io , r , ( ut8 * ) & memval , 8 )"	814:6:21069:21120	1203290	0	True				
ANR	1203621	UnaryOperationExpression	"! dbg -> iob . read_at ( dbg -> iob . io , r , ( ut8 * ) & memval , 8 )"		1203290	0					
ANR	1203622	UnaryOperator	!		1203290	0					
ANR	1203623	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , r , ( ut8 * ) & memval , 8 )"		1203290	1					
ANR	1203624	Callee	dbg -> iob . read_at		1203290	0					
ANR	1203625	MemberAccess	dbg -> iob . read_at		1203290	0					
ANR	1203626	PtrMemberAccess	dbg -> iob		1203290	0					
ANR	1203627	Identifier	dbg		1203290	0					
ANR	1203628	Identifier	iob		1203290	1					
ANR	1203629	Identifier	read_at		1203290	1					
ANR	1203630	ArgumentList	dbg -> iob . io		1203290	1					
ANR	1203631	Argument	dbg -> iob . io		1203290	0					
ANR	1203632	MemberAccess	dbg -> iob . io		1203290	0					
ANR	1203633	PtrMemberAccess	dbg -> iob		1203290	0					
ANR	1203634	Identifier	dbg		1203290	0					
ANR	1203635	Identifier	iob		1203290	1					
ANR	1203636	Identifier	io		1203290	1					
ANR	1203637	Argument	r		1203290	1					
ANR	1203638	Identifier	r		1203290	0					
ANR	1203639	Argument	( ut8 * ) & memval		1203290	2					
ANR	1203640	CastExpression	( ut8 * ) & memval		1203290	0					
ANR	1203641	CastTarget	ut8 *		1203290	0					
ANR	1203642	UnaryOperationExpression	& memval		1203290	1					
ANR	1203643	UnaryOperator	&		1203290	0					
ANR	1203644	Identifier	memval		1203290	1					
ANR	1203645	Argument	8		1203290	3					
ANR	1203646	PrimaryExpression	8		1203290	0					
ANR	1203647	CompoundStatement		65:60:1397:1397	1203290	1					
ANR	1203648	ExpressionStatement	next [ 0 ] = op . addr + op . size	815:3:21128:21155	1203290	0	True				
ANR	1203649	AssignmentExpression	next [ 0 ] = op . addr + op . size		1203290	0		=			
ANR	1203650	ArrayIndexing	next [ 0 ]		1203290	0					
ANR	1203651	Identifier	next		1203290	0					
ANR	1203652	PrimaryExpression	0		1203290	1					
ANR	1203653	AdditiveExpression	op . addr + op . size		1203290	1		+			
ANR	1203654	MemberAccess	op . addr		1203290	0					
ANR	1203655	Identifier	op		1203290	0					
ANR	1203656	Identifier	addr		1203290	1					
ANR	1203657	MemberAccess	op . size		1203290	1					
ANR	1203658	Identifier	op		1203290	0					
ANR	1203659	Identifier	size		1203290	1					
ANR	1203660	ElseStatement	else		1203290	0					
ANR	1203661	CompoundStatement		67:9:1440:1440	1203290	0					
ANR	1203662	ExpressionStatement	next [ 0 ] = ( dbg -> bits == R_SYS_BITS_32 ) ? memval . r32 [ 0 ] : memval . r64	817:3:21171:21238	1203290	0	True				
ANR	1203663	AssignmentExpression	next [ 0 ] = ( dbg -> bits == R_SYS_BITS_32 ) ? memval . r32 [ 0 ] : memval . r64		1203290	0		=			
ANR	1203664	ArrayIndexing	next [ 0 ]		1203290	0					
ANR	1203665	Identifier	next		1203290	0					
ANR	1203666	PrimaryExpression	0		1203290	1					
ANR	1203667	ConditionalExpression	( dbg -> bits == R_SYS_BITS_32 ) ? memval . r32 [ 0 ] : memval . r64		1203290	1					
ANR	1203668	Condition	dbg -> bits == R_SYS_BITS_32		1203290	0					
ANR	1203669	EqualityExpression	dbg -> bits == R_SYS_BITS_32		1203290	0		==			
ANR	1203670	PtrMemberAccess	dbg -> bits		1203290	0					
ANR	1203671	Identifier	dbg		1203290	0					
ANR	1203672	Identifier	bits		1203290	1					
ANR	1203673	Identifier	R_SYS_BITS_32		1203290	1					
ANR	1203674	ArrayIndexing	memval . r32 [ 0 ]		1203290	1					
ANR	1203675	MemberAccess	memval . r32		1203290	0					
ANR	1203676	Identifier	memval		1203290	0					
ANR	1203677	Identifier	r32		1203290	1					
ANR	1203678	PrimaryExpression	0		1203290	1					
ANR	1203679	MemberAccess	memval . r64		1203290	2					
ANR	1203680	Identifier	memval		1203290	0					
ANR	1203681	Identifier	r64		1203290	1					
ANR	1203682	ExpressionStatement	br = 1	819:2:21246:21252	1203290	26	True				
ANR	1203683	AssignmentExpression	br = 1		1203290	0		=			
ANR	1203684	Identifier	br		1203290	0					
ANR	1203685	PrimaryExpression	1		1203290	1					
ANR	1203686	BreakStatement	break ;	820:2:21256:21261	1203290	27	True				
ANR	1203687	Label	case R_ANAL_OP_TYPE_UCALL :	821:1:21264:21289	1203290	28	True				
ANR	1203688	Identifier	R_ANAL_OP_TYPE_UCALL		1203290	0					
ANR	1203689	Label	case R_ANAL_OP_TYPE_MJMP :	822:1:21292:21316	1203290	29	True				
ANR	1203690	Identifier	R_ANAL_OP_TYPE_MJMP		1203290	0					
ANR	1203691	IfStatement	if ( op . ireg )		1203290	30					
ANR	1203692	Condition	op . ireg	823:6:21324:21330	1203290	0	True				
ANR	1203693	MemberAccess	op . ireg		1203290	0					
ANR	1203694	Identifier	op		1203290	0					
ANR	1203695	Identifier	ireg		1203290	1					
ANR	1203696	CompoundStatement		74:15:1607:1607	1203290	1					
ANR	1203697	ExpressionStatement	"r = r_debug_reg_get ( dbg , op . ireg )"	824:3:21338:21371	1203290	0	True				
ANR	1203698	AssignmentExpression	"r = r_debug_reg_get ( dbg , op . ireg )"		1203290	0		=			
ANR	1203699	Identifier	r		1203290	0					
ANR	1203700	CallExpression	"r_debug_reg_get ( dbg , op . ireg )"		1203290	1					
ANR	1203701	Callee	r_debug_reg_get		1203290	0					
ANR	1203702	Identifier	r_debug_reg_get		1203290	0					
ANR	1203703	ArgumentList	dbg		1203290	1					
ANR	1203704	Argument	dbg		1203290	0					
ANR	1203705	Identifier	dbg		1203290	0					
ANR	1203706	Argument	op . ireg		1203290	1					
ANR	1203707	MemberAccess	op . ireg		1203290	0					
ANR	1203708	Identifier	op		1203290	0					
ANR	1203709	Identifier	ireg		1203290	1					
ANR	1203710	ElseStatement	else		1203290	0					
ANR	1203711	CompoundStatement		76:9:1656:1656	1203290	0					
ANR	1203712	ExpressionStatement	r = 0	826:3:21387:21392	1203290	0	True				
ANR	1203713	AssignmentExpression	r = 0		1203290	0		=			
ANR	1203714	Identifier	r		1203290	0					
ANR	1203715	PrimaryExpression	0		1203290	1					
ANR	1203716	IfStatement	"if ( ! dbg -> iob . read_at ( dbg -> iob . io , r * op . scale + op . disp , ( ut8 * ) & memval , 8 ) )"		1203290	31					
ANR	1203717	Condition	"! dbg -> iob . read_at ( dbg -> iob . io , r * op . scale + op . disp , ( ut8 * ) & memval , 8 )"	828:6:21404:21474	1203290	0	True				
ANR	1203718	UnaryOperationExpression	"! dbg -> iob . read_at ( dbg -> iob . io , r * op . scale + op . disp , ( ut8 * ) & memval , 8 )"		1203290	0					
ANR	1203719	UnaryOperator	!		1203290	0					
ANR	1203720	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , r * op . scale + op . disp , ( ut8 * ) & memval , 8 )"		1203290	1					
ANR	1203721	Callee	dbg -> iob . read_at		1203290	0					
ANR	1203722	MemberAccess	dbg -> iob . read_at		1203290	0					
ANR	1203723	PtrMemberAccess	dbg -> iob		1203290	0					
ANR	1203724	Identifier	dbg		1203290	0					
ANR	1203725	Identifier	iob		1203290	1					
ANR	1203726	Identifier	read_at		1203290	1					
ANR	1203727	ArgumentList	dbg -> iob . io		1203290	1					
ANR	1203728	Argument	dbg -> iob . io		1203290	0					
ANR	1203729	MemberAccess	dbg -> iob . io		1203290	0					
ANR	1203730	PtrMemberAccess	dbg -> iob		1203290	0					
ANR	1203731	Identifier	dbg		1203290	0					
ANR	1203732	Identifier	iob		1203290	1					
ANR	1203733	Identifier	io		1203290	1					
ANR	1203734	Argument	r * op . scale + op . disp		1203290	1					
ANR	1203735	AdditiveExpression	r * op . scale + op . disp		1203290	0		+			
ANR	1203736	MultiplicativeExpression	r * op . scale		1203290	0		*			
ANR	1203737	Identifier	r		1203290	0					
ANR	1203738	MemberAccess	op . scale		1203290	1					
ANR	1203739	Identifier	op		1203290	0					
ANR	1203740	Identifier	scale		1203290	1					
ANR	1203741	MemberAccess	op . disp		1203290	1					
ANR	1203742	Identifier	op		1203290	0					
ANR	1203743	Identifier	disp		1203290	1					
ANR	1203744	Argument	( ut8 * ) & memval		1203290	2					
ANR	1203745	CastExpression	( ut8 * ) & memval		1203290	0					
ANR	1203746	CastTarget	ut8 *		1203290	0					
ANR	1203747	UnaryOperationExpression	& memval		1203290	1					
ANR	1203748	UnaryOperator	&		1203290	0					
ANR	1203749	Identifier	memval		1203290	1					
ANR	1203750	Argument	8		1203290	3					
ANR	1203751	PrimaryExpression	8		1203290	0					
ANR	1203752	CompoundStatement		79:79:1751:1751	1203290	1					
ANR	1203753	ExpressionStatement	next [ 0 ] = op . addr + op . size	829:3:21482:21509	1203290	0	True				
ANR	1203754	AssignmentExpression	next [ 0 ] = op . addr + op . size		1203290	0		=			
ANR	1203755	ArrayIndexing	next [ 0 ]		1203290	0					
ANR	1203756	Identifier	next		1203290	0					
ANR	1203757	PrimaryExpression	0		1203290	1					
ANR	1203758	AdditiveExpression	op . addr + op . size		1203290	1		+			
ANR	1203759	MemberAccess	op . addr		1203290	0					
ANR	1203760	Identifier	op		1203290	0					
ANR	1203761	Identifier	addr		1203290	1					
ANR	1203762	MemberAccess	op . size		1203290	1					
ANR	1203763	Identifier	op		1203290	0					
ANR	1203764	Identifier	size		1203290	1					
ANR	1203765	ElseStatement	else		1203290	0					
ANR	1203766	CompoundStatement		81:9:1794:1794	1203290	0					
ANR	1203767	ExpressionStatement	next [ 0 ] = ( dbg -> bits == R_SYS_BITS_32 ) ? memval . r32 [ 0 ] : memval . r64	831:3:21525:21592	1203290	0	True				
ANR	1203768	AssignmentExpression	next [ 0 ] = ( dbg -> bits == R_SYS_BITS_32 ) ? memval . r32 [ 0 ] : memval . r64		1203290	0		=			
ANR	1203769	ArrayIndexing	next [ 0 ]		1203290	0					
ANR	1203770	Identifier	next		1203290	0					
ANR	1203771	PrimaryExpression	0		1203290	1					
ANR	1203772	ConditionalExpression	( dbg -> bits == R_SYS_BITS_32 ) ? memval . r32 [ 0 ] : memval . r64		1203290	1					
ANR	1203773	Condition	dbg -> bits == R_SYS_BITS_32		1203290	0					
ANR	1203774	EqualityExpression	dbg -> bits == R_SYS_BITS_32		1203290	0		==			
ANR	1203775	PtrMemberAccess	dbg -> bits		1203290	0					
ANR	1203776	Identifier	dbg		1203290	0					
ANR	1203777	Identifier	bits		1203290	1					
ANR	1203778	Identifier	R_SYS_BITS_32		1203290	1					
ANR	1203779	ArrayIndexing	memval . r32 [ 0 ]		1203290	1					
ANR	1203780	MemberAccess	memval . r32		1203290	0					
ANR	1203781	Identifier	memval		1203290	0					
ANR	1203782	Identifier	r32		1203290	1					
ANR	1203783	PrimaryExpression	0		1203290	1					
ANR	1203784	MemberAccess	memval . r64		1203290	2					
ANR	1203785	Identifier	memval		1203290	0					
ANR	1203786	Identifier	r64		1203290	1					
ANR	1203787	ExpressionStatement	br = 1	833:2:21600:21606	1203290	32	True				
ANR	1203788	AssignmentExpression	br = 1		1203290	0		=			
ANR	1203789	Identifier	br		1203290	0					
ANR	1203790	PrimaryExpression	1		1203290	1					
ANR	1203791	BreakStatement	break ;	834:2:21610:21615	1203290	33	True				
ANR	1203792	Label	case R_ANAL_OP_TYPE_UJMP :	835:1:21618:21642	1203290	34	True				
ANR	1203793	Identifier	R_ANAL_OP_TYPE_UJMP		1203290	0					
ANR	1203794	Label	default :	836:1:21645:21652	1203290	35	True				
ANR	1203795	Identifier	default		1203290	0					
ANR	1203796	ExpressionStatement	next [ 0 ] = op . addr + op . size	837:2:21656:21683	1203290	36	True				
ANR	1203797	AssignmentExpression	next [ 0 ] = op . addr + op . size		1203290	0		=			
ANR	1203798	ArrayIndexing	next [ 0 ]		1203290	0					
ANR	1203799	Identifier	next		1203290	0					
ANR	1203800	PrimaryExpression	0		1203290	1					
ANR	1203801	AdditiveExpression	op . addr + op . size		1203290	1		+			
ANR	1203802	MemberAccess	op . addr		1203290	0					
ANR	1203803	Identifier	op		1203290	0					
ANR	1203804	Identifier	addr		1203290	1					
ANR	1203805	MemberAccess	op . size		1203290	1					
ANR	1203806	Identifier	op		1203290	0					
ANR	1203807	Identifier	size		1203290	1					
ANR	1203808	ExpressionStatement	br = 1	838:2:21687:21693	1203290	37	True				
ANR	1203809	AssignmentExpression	br = 1		1203290	0		=			
ANR	1203810	Identifier	br		1203290	0					
ANR	1203811	PrimaryExpression	1		1203290	1					
ANR	1203812	BreakStatement	break ;	839:2:21697:21702	1203290	38	True				
ANR	1203813	ForStatement	for ( i = 0 ; i < br ; i ++ )		1203290	16					
ANR	1203814	ForInit	i = 0 ;	842:6:21714:21719	1203290	0	True				
ANR	1203815	AssignmentExpression	i = 0		1203290	0		=			
ANR	1203816	Identifier	i		1203290	0					
ANR	1203817	PrimaryExpression	0		1203290	1					
ANR	1203818	Condition	i < br	842:13:21721:21726	1203290	1	True				
ANR	1203819	RelationalExpression	i < br		1203290	0		<			
ANR	1203820	Identifier	i		1203290	0					
ANR	1203821	Identifier	br		1203290	1					
ANR	1203822	PostIncDecOperationExpression	i ++	842:21:21729:21731	1203290	2	True				
ANR	1203823	Identifier	i		1203290	0					
ANR	1203824	IncDec	++		1203290	1					
ANR	1203825	CompoundStatement		94:2:2012:2094	1203290	3					
ANR	1203826	IdentifierDeclStatement	"RBreakpointItem * bpi = r_bp_add_sw ( dbg -> bp , next [ i ] , dbg -> bpsize , R_BP_PROT_EXEC ) ;"	843:2:21738:21820	1203290	0	True				
ANR	1203827	IdentifierDecl	"* bpi = r_bp_add_sw ( dbg -> bp , next [ i ] , dbg -> bpsize , R_BP_PROT_EXEC )"		1203290	0					
ANR	1203828	IdentifierDeclType	RBreakpointItem *		1203290	0					
ANR	1203829	Identifier	bpi		1203290	1					
ANR	1203830	AssignmentExpression	"* bpi = r_bp_add_sw ( dbg -> bp , next [ i ] , dbg -> bpsize , R_BP_PROT_EXEC )"		1203290	2		=			
ANR	1203831	Identifier	bpi		1203290	0					
ANR	1203832	CallExpression	"r_bp_add_sw ( dbg -> bp , next [ i ] , dbg -> bpsize , R_BP_PROT_EXEC )"		1203290	1					
ANR	1203833	Callee	r_bp_add_sw		1203290	0					
ANR	1203834	Identifier	r_bp_add_sw		1203290	0					
ANR	1203835	ArgumentList	dbg -> bp		1203290	1					
ANR	1203836	Argument	dbg -> bp		1203290	0					
ANR	1203837	PtrMemberAccess	dbg -> bp		1203290	0					
ANR	1203838	Identifier	dbg		1203290	0					
ANR	1203839	Identifier	bp		1203290	1					
ANR	1203840	Argument	next [ i ]		1203290	1					
ANR	1203841	ArrayIndexing	next [ i ]		1203290	0					
ANR	1203842	Identifier	next		1203290	0					
ANR	1203843	Identifier	i		1203290	1					
ANR	1203844	Argument	dbg -> bpsize		1203290	2					
ANR	1203845	PtrMemberAccess	dbg -> bpsize		1203290	0					
ANR	1203846	Identifier	dbg		1203290	0					
ANR	1203847	Identifier	bpsize		1203290	1					
ANR	1203848	Argument	R_BP_PROT_EXEC		1203290	3					
ANR	1203849	Identifier	R_BP_PROT_EXEC		1203290	0					
ANR	1203850	IfStatement	if ( bpi )		1203290	1					
ANR	1203851	Condition	bpi	844:6:21828:21830	1203290	0	True				
ANR	1203852	Identifier	bpi		1203290	0					
ANR	1203853	CompoundStatement		95:11:2107:2107	1203290	1					
ANR	1203854	ExpressionStatement	bpi -> swstep = true	845:3:21838:21856	1203290	0	True				
ANR	1203855	AssignmentExpression	bpi -> swstep = true		1203290	0		=			
ANR	1203856	PtrMemberAccess	bpi -> swstep		1203290	0					
ANR	1203857	Identifier	bpi		1203290	0					
ANR	1203858	Identifier	swstep		1203290	1					
ANR	1203859	Identifier	true		1203290	1					
ANR	1203860	ExpressionStatement	ret = r_debug_continue ( dbg )	849:1:21867:21895	1203290	17	True				
ANR	1203861	AssignmentExpression	ret = r_debug_continue ( dbg )		1203290	0		=			
ANR	1203862	Identifier	ret		1203290	0					
ANR	1203863	CallExpression	r_debug_continue ( dbg )		1203290	1					
ANR	1203864	Callee	r_debug_continue		1203290	0					
ANR	1203865	Identifier	r_debug_continue		1203290	0					
ANR	1203866	ArgumentList	dbg		1203290	1					
ANR	1203867	Argument	dbg		1203290	0					
ANR	1203868	Identifier	dbg		1203290	0					
ANR	1203869	ForStatement	for ( i = 0 ; i < br ; i ++ )		1203290	18					
ANR	1203870	ForInit	i = 0 ;	851:6:21904:21909	1203290	0	True				
ANR	1203871	AssignmentExpression	i = 0		1203290	0		=			
ANR	1203872	Identifier	i		1203290	0					
ANR	1203873	PrimaryExpression	0		1203290	1					
ANR	1203874	Condition	i < br	851:13:21911:21916	1203290	1	True				
ANR	1203875	RelationalExpression	i < br		1203290	0		<			
ANR	1203876	Identifier	i		1203290	0					
ANR	1203877	Identifier	br		1203290	1					
ANR	1203878	PostIncDecOperationExpression	i ++	851:21:21919:21921	1203290	2	True				
ANR	1203879	Identifier	i		1203290	0					
ANR	1203880	IncDec	++		1203290	1					
ANR	1203881	CompoundStatement		102:26:2198:2198	1203290	3					
ANR	1203882	ExpressionStatement	"r_bp_del ( dbg -> bp , next [ i ] )"	852:2:21928:21955	1203290	0	True				
ANR	1203883	CallExpression	"r_bp_del ( dbg -> bp , next [ i ] )"		1203290	0					
ANR	1203884	Callee	r_bp_del		1203290	0					
ANR	1203885	Identifier	r_bp_del		1203290	0					
ANR	1203886	ArgumentList	dbg -> bp		1203290	1					
ANR	1203887	Argument	dbg -> bp		1203290	0					
ANR	1203888	PtrMemberAccess	dbg -> bp		1203290	0					
ANR	1203889	Identifier	dbg		1203290	0					
ANR	1203890	Identifier	bp		1203290	1					
ANR	1203891	Argument	next [ i ]		1203290	1					
ANR	1203892	ArrayIndexing	next [ i ]		1203290	0					
ANR	1203893	Identifier	next		1203290	0					
ANR	1203894	Identifier	i		1203290	1					
ANR	1203895	ReturnStatement	return ret ;	855:1:21962:21972	1203290	19	True				
ANR	1203896	Identifier	ret		1203290	0					
ANR	1203897	ReturnType	R_API int		1203290	1					
ANR	1203898	Identifier	r_debug_step_soft		1203290	2					
ANR	1203899	ParameterList	RDebug * dbg		1203290	3					
ANR	1203900	Parameter	RDebug * dbg	750:28:19712:19722	1203290	0	True				
ANR	1203901	ParameterType	RDebug *		1203290	0					
ANR	1203902	Identifier	dbg		1203290	1					
ANR	1203903	CFGEntryNode	ENTRY		1203290		True				
ANR	1203904	CFGExitNode	EXIT		1203290		True				
ANR	1203905	Symbol	R_REG_NAME_PC		1203290						
ANR	1203906	Symbol	r_debug_reg_get		1203290						
ANR	1203907	Symbol	op . fail		1203290						
ANR	1203908	Symbol	& op		1203290						
ANR	1203909	Symbol	* next		1203290						
ANR	1203910	Symbol	* dbg -> reg -> name		1203290						
ANR	1203911	Symbol	& memval		1203290						
ANR	1203912	Symbol	op . jump		1203290						
ANR	1203913	Symbol	* memval		1203290						
ANR	1203914	Symbol	op . disp		1203290						
ANR	1203915	Symbol	memval . r64		1203290						
ANR	1203916	Symbol	R_DBG_RECOIL_NONE		1203290						
ANR	1203917	Symbol	r_anal_op		1203290						
ANR	1203918	Symbol	ret		1203290						
ANR	1203919	Symbol	op . addr		1203290						
ANR	1203920	Symbol	dbg -> bp		1203290						
ANR	1203921	Symbol	dbg		1203290						
ANR	1203922	Symbol	op . reg		1203290						
ANR	1203923	Symbol	r_bp_add_sw		1203290						
ANR	1203924	Symbol	R_REG_NAME_SP		1203290						
ANR	1203925	Symbol	dbg -> bpsize		1203290						
ANR	1203926	Symbol	op . ireg		1203290						
ANR	1203927	Symbol	true		1203290						
ANR	1203928	Symbol	* memval . r32		1203290						
ANR	1203929	Symbol	* bpi		1203290						
ANR	1203930	Symbol	op . size		1203290						
ANR	1203931	Symbol	dbg -> reg -> name		1203290						
ANR	1203932	Symbol	R_SYS_BITS_32		1203290						
ANR	1203933	Symbol	memval . r32		1203290						
ANR	1203934	Symbol	next		1203290						
ANR	1203935	Symbol	* R_REG_NAME_SP		1203290						
ANR	1203936	Symbol	dbg -> iob . io		1203290						
ANR	1203937	Symbol	dbg -> bits		1203290						
ANR	1203938	Symbol	R_ANAL_OP_MASK_BASIC		1203290						
ANR	1203939	Symbol	bpi -> swstep		1203290						
ANR	1203940	Symbol	br		1203290						
ANR	1203941	Symbol	R_ANAL_OP_TYPE_ILL		1203290						
ANR	1203942	Symbol	* R_REG_NAME_PC		1203290						
ANR	1203943	Symbol	* sp_top . r32		1203290						
ANR	1203944	Symbol	bpi		1203290						
ANR	1203945	Symbol	sp_top . r32		1203290						
ANR	1203946	Symbol	sp		1203290						
ANR	1203947	Symbol	r_debug_continue		1203290						
ANR	1203948	Symbol	op		1203290						
ANR	1203949	Symbol	dbg -> iob		1203290						
ANR	1203950	Symbol	op . type		1203290						
ANR	1203951	Symbol	* sp_top		1203290						
ANR	1203952	Symbol	& sp_top		1203290						
ANR	1203953	Symbol	dbg -> anal		1203290						
ANR	1203954	Symbol	sp_top		1203290						
ANR	1203955	Symbol	* * * dbg		1203290						
ANR	1203956	Symbol	false		1203290						
ANR	1203957	Symbol	i		1203290						
ANR	1203958	Symbol	R_DBG_RECOIL_STEP		1203290						
ANR	1203959	Symbol	* dbg		1203290						
ANR	1203960	Symbol	memval		1203290						
ANR	1203961	Symbol	* * dbg -> reg		1203290						
ANR	1203962	Symbol	* dbg -> reg		1203290						
ANR	1203963	Symbol	buf		1203290						
ANR	1203964	Symbol	r		1203290						
ANR	1203965	Symbol	r_debug_is_dead		1203290						
ANR	1203966	Symbol	pc		1203290						
ANR	1203967	Symbol	op . scale		1203290						
ANR	1203968	Symbol	* i		1203290						
ANR	1203969	Symbol	R_BP_PROT_EXEC		1203290						
ANR	1203970	Symbol	dbg -> recoil_mode		1203290						
ANR	1203971	Symbol	dbg -> reg		1203290						
ANR	1203972	Symbol	dbg -> iob . read_at		1203290						
ANR	1203973	Symbol	* * dbg		1203290						
ANR	1203974	Symbol	sp_top . r64		1203290						
ANR	1203975	Function	r_debug_step_hard	858:0:21977:22795							
ANR	1203976	FunctionDef	r_debug_step_hard (RDebug * dbg)		1203975	0					
ANR	1203977	CompoundStatement		858:41:22018:22795	1203975	0					
ANR	1203978	IdentifierDeclStatement	RDebugReasonType reason ;	859:1:22021:22044	1203975	0	True				
ANR	1203979	IdentifierDecl	reason		1203975	0					
ANR	1203980	IdentifierDeclType	RDebugReasonType		1203975	0					
ANR	1203981	Identifier	reason		1203975	1					
ANR	1203982	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_STEP	861:1:22048:22086	1203975	1	True				
ANR	1203983	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_STEP		1203975	0		=			
ANR	1203984	MemberAccess	dbg -> reason . type		1203975	0					
ANR	1203985	PtrMemberAccess	dbg -> reason		1203975	0					
ANR	1203986	Identifier	dbg		1203975	0					
ANR	1203987	Identifier	reason		1203975	1					
ANR	1203988	Identifier	type		1203975	1					
ANR	1203989	Identifier	R_DEBUG_REASON_STEP		1203975	1					
ANR	1203990	IfStatement	if ( r_debug_is_dead ( dbg ) )		1203975	2					
ANR	1203991	Condition	r_debug_is_dead ( dbg )	862:5:22093:22113	1203975	0	True				
ANR	1203992	CallExpression	r_debug_is_dead ( dbg )		1203975	0					
ANR	1203993	Callee	r_debug_is_dead		1203975	0					
ANR	1203994	Identifier	r_debug_is_dead		1203975	0					
ANR	1203995	ArgumentList	dbg		1203975	1					
ANR	1203996	Argument	dbg		1203975	0					
ANR	1203997	Identifier	dbg		1203975	0					
ANR	1203998	CompoundStatement		5:28:97:97	1203975	1					
ANR	1203999	ReturnStatement	return false ;	863:2:22120:22132	1203975	0	True				
ANR	1204000	Identifier	false		1203975	0					
ANR	1204001	IfStatement	if ( dbg -> recoil_mode == R_DBG_RECOIL_NONE )		1203975	3					
ANR	1204002	Condition	dbg -> recoil_mode == R_DBG_RECOIL_NONE	867:5:22203:22239	1203975	0	True				
ANR	1204003	EqualityExpression	dbg -> recoil_mode == R_DBG_RECOIL_NONE		1203975	0		==			
ANR	1204004	PtrMemberAccess	dbg -> recoil_mode		1203975	0					
ANR	1204005	Identifier	dbg		1203975	0					
ANR	1204006	Identifier	recoil_mode		1203975	1					
ANR	1204007	Identifier	R_DBG_RECOIL_NONE		1203975	1					
ANR	1204008	CompoundStatement		10:44:223:223	1203975	1					
ANR	1204009	IfStatement	"if ( ! r_debug_recoil ( dbg , R_DBG_RECOIL_STEP ) )"		1203975	0					
ANR	1204010	Condition	"! r_debug_recoil ( dbg , R_DBG_RECOIL_STEP )"	869:6:22292:22331	1203975	0	True				
ANR	1204011	UnaryOperationExpression	"! r_debug_recoil ( dbg , R_DBG_RECOIL_STEP )"		1203975	0					
ANR	1204012	UnaryOperator	!		1203975	0					
ANR	1204013	CallExpression	"r_debug_recoil ( dbg , R_DBG_RECOIL_STEP )"		1203975	1					
ANR	1204014	Callee	r_debug_recoil		1203975	0					
ANR	1204015	Identifier	r_debug_recoil		1203975	0					
ANR	1204016	ArgumentList	dbg		1203975	1					
ANR	1204017	Argument	dbg		1203975	0					
ANR	1204018	Identifier	dbg		1203975	0					
ANR	1204019	Argument	R_DBG_RECOIL_STEP		1203975	1					
ANR	1204020	Identifier	R_DBG_RECOIL_STEP		1203975	0					
ANR	1204021	CompoundStatement		12:48:315:315	1203975	1					
ANR	1204022	ReturnStatement	return false ;	870:3:22339:22351	1203975	0	True				
ANR	1204023	Identifier	false		1203975	0					
ANR	1204024	IfStatement	if ( dbg -> recoil_mode == R_DBG_RECOIL_STEP )		1203975	1					
ANR	1204025	Condition	dbg -> recoil_mode == R_DBG_RECOIL_STEP	874:6:22425:22461	1203975	0	True				
ANR	1204026	EqualityExpression	dbg -> recoil_mode == R_DBG_RECOIL_STEP		1203975	0		==			
ANR	1204027	PtrMemberAccess	dbg -> recoil_mode		1203975	0					
ANR	1204028	Identifier	dbg		1203975	0					
ANR	1204029	Identifier	recoil_mode		1203975	1					
ANR	1204030	Identifier	R_DBG_RECOIL_STEP		1203975	1					
ANR	1204031	CompoundStatement		17:45:445:445	1203975	1					
ANR	1204032	ExpressionStatement	dbg -> recoil_mode = R_DBG_RECOIL_NONE	875:3:22469:22505	1203975	0	True				
ANR	1204033	AssignmentExpression	dbg -> recoil_mode = R_DBG_RECOIL_NONE		1203975	0		=			
ANR	1204034	PtrMemberAccess	dbg -> recoil_mode		1203975	0					
ANR	1204035	Identifier	dbg		1203975	0					
ANR	1204036	Identifier	recoil_mode		1203975	1					
ANR	1204037	Identifier	R_DBG_RECOIL_NONE		1203975	1					
ANR	1204038	ReturnStatement	return true ;	876:3:22510:22521	1203975	1	True				
ANR	1204039	Identifier	true		1203975	0					
ANR	1204040	IfStatement	if ( ! dbg -> h -> step ( dbg ) )		1203975	4					
ANR	1204041	Condition	! dbg -> h -> step ( dbg )	880:5:22536:22554	1203975	0	True				
ANR	1204042	UnaryOperationExpression	! dbg -> h -> step ( dbg )		1203975	0					
ANR	1204043	UnaryOperator	!		1203975	0					
ANR	1204044	CallExpression	dbg -> h -> step ( dbg )		1203975	1					
ANR	1204045	Callee	dbg -> h -> step		1203975	0					
ANR	1204046	PtrMemberAccess	dbg -> h -> step		1203975	0					
ANR	1204047	PtrMemberAccess	dbg -> h		1203975	0					
ANR	1204048	Identifier	dbg		1203975	0					
ANR	1204049	Identifier	h		1203975	1					
ANR	1204050	Identifier	step		1203975	1					
ANR	1204051	ArgumentList	dbg		1203975	1					
ANR	1204052	Argument	dbg		1203975	0					
ANR	1204053	Identifier	dbg		1203975	0					
ANR	1204054	CompoundStatement		23:26:538:538	1203975	1					
ANR	1204055	ReturnStatement	return false ;	881:2:22561:22573	1203975	0	True				
ANR	1204056	Identifier	false		1203975	0					
ANR	1204057	ExpressionStatement	"reason = r_debug_wait ( dbg , NULL )"	883:1:22579:22612	1203975	5	True				
ANR	1204058	AssignmentExpression	"reason = r_debug_wait ( dbg , NULL )"		1203975	0		=			
ANR	1204059	Identifier	reason		1203975	0					
ANR	1204060	CallExpression	"r_debug_wait ( dbg , NULL )"		1203975	1					
ANR	1204061	Callee	r_debug_wait		1203975	0					
ANR	1204062	Identifier	r_debug_wait		1203975	0					
ANR	1204063	ArgumentList	dbg		1203975	1					
ANR	1204064	Argument	dbg		1203975	0					
ANR	1204065	Identifier	dbg		1203975	0					
ANR	1204066	Argument	NULL		1203975	1					
ANR	1204067	Identifier	NULL		1203975	0					
ANR	1204068	IfStatement	if ( reason == R_DEBUG_REASON_ERROR )		1203975	6					
ANR	1204069	Condition	reason == R_DEBUG_REASON_ERROR	885:5:22646:22675	1203975	0	True				
ANR	1204070	EqualityExpression	reason == R_DEBUG_REASON_ERROR		1203975	0		==			
ANR	1204071	Identifier	reason		1203975	0					
ANR	1204072	Identifier	R_DEBUG_REASON_ERROR		1203975	1					
ANR	1204073	CompoundStatement		28:37:659:659	1203975	1					
ANR	1204074	ReturnStatement	return false ;	886:2:22682:22694	1203975	0	True				
ANR	1204075	Identifier	false		1203975	0					
ANR	1204076	IfStatement	if ( reason == R_DEBUG_REASON_DEAD || r_debug_is_dead ( dbg ) )		1203975	7					
ANR	1204077	Condition	reason == R_DEBUG_REASON_DEAD || r_debug_is_dead ( dbg )	888:5:22704:22757	1203975	0	True				
ANR	1204078	OrExpression	reason == R_DEBUG_REASON_DEAD || r_debug_is_dead ( dbg )		1203975	0		||			
ANR	1204079	EqualityExpression	reason == R_DEBUG_REASON_DEAD		1203975	0		==			
ANR	1204080	Identifier	reason		1203975	0					
ANR	1204081	Identifier	R_DEBUG_REASON_DEAD		1203975	1					
ANR	1204082	CallExpression	r_debug_is_dead ( dbg )		1203975	1					
ANR	1204083	Callee	r_debug_is_dead		1203975	0					
ANR	1204084	Identifier	r_debug_is_dead		1203975	0					
ANR	1204085	ArgumentList	dbg		1203975	1					
ANR	1204086	Argument	dbg		1203975	0					
ANR	1204087	Identifier	dbg		1203975	0					
ANR	1204088	CompoundStatement		31:61:741:741	1203975	1					
ANR	1204089	ReturnStatement	return false ;	889:2:22764:22776	1203975	0	True				
ANR	1204090	Identifier	false		1203975	0					
ANR	1204091	ReturnStatement	return true ;	891:1:22782:22793	1203975	8	True				
ANR	1204092	Identifier	true		1203975	0					
ANR	1204093	ReturnType	R_API int		1203975	1					
ANR	1204094	Identifier	r_debug_step_hard		1203975	2					
ANR	1204095	ParameterList	RDebug * dbg		1203975	3					
ANR	1204096	Parameter	RDebug * dbg	858:28:22005:22015	1203975	0	True				
ANR	1204097	ParameterType	RDebug *		1203975	0					
ANR	1204098	Identifier	dbg		1203975	1					
ANR	1204099	CFGEntryNode	ENTRY		1203975		True				
ANR	1204100	CFGExitNode	EXIT		1203975		True				
ANR	1204101	Symbol	reason		1203975						
ANR	1204102	Symbol	R_DEBUG_REASON_ERROR		1203975						
ANR	1204103	Symbol	dbg -> reason		1203975						
ANR	1204104	Symbol	dbg -> h		1203975						
ANR	1204105	Symbol	NULL		1203975						
ANR	1204106	Symbol	r_debug_wait		1203975						
ANR	1204107	Symbol	dbg		1203975						
ANR	1204108	Symbol	false		1203975						
ANR	1204109	Symbol	* dbg -> h		1203975						
ANR	1204110	Symbol	R_DBG_RECOIL_STEP		1203975						
ANR	1204111	Symbol	R_DEBUG_REASON_DEAD		1203975						
ANR	1204112	Symbol	* dbg		1203975						
ANR	1204113	Symbol	r_debug_recoil		1203975						
ANR	1204114	Symbol	dbg -> reason . type		1203975						
ANR	1204115	Symbol	r_debug_is_dead		1203975						
ANR	1204116	Symbol	dbg -> recoil_mode		1203975						
ANR	1204117	Symbol	true		1203975						
ANR	1204118	Symbol	dbg -> h -> step		1203975						
ANR	1204119	Symbol	R_DEBUG_REASON_STEP		1203975						
ANR	1204120	Symbol	* * dbg		1203975						
ANR	1204121	Symbol	R_DBG_RECOIL_NONE		1203975						
ANR	1204122	Function	r_debug_step	894:0:22798:23423							
ANR	1204123	FunctionDef	"r_debug_step (RDebug * dbg , int steps)"		1204122	0					
ANR	1204124	CompoundStatement		894:47:22845:23423	1204122	0					
ANR	1204125	IdentifierDeclStatement	"int ret , steps_taken = 0 ;"	895:1:22848:22872	1204122	0	True				
ANR	1204126	IdentifierDecl	ret		1204122	0					
ANR	1204127	IdentifierDeclType	int		1204122	0					
ANR	1204128	Identifier	ret		1204122	1					
ANR	1204129	IdentifierDecl	steps_taken = 0		1204122	1					
ANR	1204130	IdentifierDeclType	int		1204122	0					
ANR	1204131	Identifier	steps_taken		1204122	1					
ANR	1204132	AssignmentExpression	steps_taken = 0		1204122	2		=			
ANR	1204133	Identifier	steps_taken		1204122	0					
ANR	1204134	PrimaryExpression	0		1204122	1					
ANR	1204135	IfStatement	if ( steps < 1 )		1204122	1					
ANR	1204136	Condition	steps < 1	898:5:22936:22944	1204122	0	True				
ANR	1204137	RelationalExpression	steps < 1		1204122	0		<			
ANR	1204138	Identifier	steps		1204122	0					
ANR	1204139	PrimaryExpression	1		1204122	1					
ANR	1204140	CompoundStatement		5:16:101:101	1204122	1					
ANR	1204141	ExpressionStatement	steps = 1	899:2:22951:22960	1204122	0	True				
ANR	1204142	AssignmentExpression	steps = 1		1204122	0		=			
ANR	1204143	Identifier	steps		1204122	0					
ANR	1204144	PrimaryExpression	1		1204122	1					
ANR	1204145	IfStatement	if ( ! dbg || ! dbg -> h )		1204122	2					
ANR	1204146	Condition	! dbg || ! dbg -> h	902:5:22971:22985	1204122	0	True				
ANR	1204147	OrExpression	! dbg || ! dbg -> h		1204122	0		||			
ANR	1204148	UnaryOperationExpression	! dbg		1204122	0					
ANR	1204149	UnaryOperator	!		1204122	0					
ANR	1204150	Identifier	dbg		1204122	1					
ANR	1204151	UnaryOperationExpression	! dbg -> h		1204122	1					
ANR	1204152	UnaryOperator	!		1204122	0					
ANR	1204153	PtrMemberAccess	dbg -> h		1204122	1					
ANR	1204154	Identifier	dbg		1204122	0					
ANR	1204155	Identifier	h		1204122	1					
ANR	1204156	CompoundStatement		9:22:142:142	1204122	1					
ANR	1204157	ReturnStatement	return steps_taken ;	903:2:22992:23010	1204122	0	True				
ANR	1204158	Identifier	steps_taken		1204122	0					
ANR	1204159	IfStatement	if ( r_debug_is_dead ( dbg ) )		1204122	3					
ANR	1204160	Condition	r_debug_is_dead ( dbg )	906:5:23021:23041	1204122	0	True				
ANR	1204161	CallExpression	r_debug_is_dead ( dbg )		1204122	0					
ANR	1204162	Callee	r_debug_is_dead		1204122	0					
ANR	1204163	Identifier	r_debug_is_dead		1204122	0					
ANR	1204164	ArgumentList	dbg		1204122	1					
ANR	1204165	Argument	dbg		1204122	0					
ANR	1204166	Identifier	dbg		1204122	0					
ANR	1204167	CompoundStatement		13:28:198:198	1204122	1					
ANR	1204168	ReturnStatement	return steps_taken ;	907:2:23048:23066	1204122	0	True				
ANR	1204169	Identifier	steps_taken		1204122	0					
ANR	1204170	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_STEP	910:1:23073:23111	1204122	4	True				
ANR	1204171	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_STEP		1204122	0		=			
ANR	1204172	MemberAccess	dbg -> reason . type		1204122	0					
ANR	1204173	PtrMemberAccess	dbg -> reason		1204122	0					
ANR	1204174	Identifier	dbg		1204122	0					
ANR	1204175	Identifier	reason		1204122	1					
ANR	1204176	Identifier	type		1204122	1					
ANR	1204177	Identifier	R_DEBUG_REASON_STEP		1204122	1					
ANR	1204178	ForStatement	for ( ; steps_taken < steps ; steps_taken ++ )		1204122	5					
ANR	1204179	Condition	steps_taken < steps	912:8:23122:23140	1204122	0	True				
ANR	1204180	RelationalExpression	steps_taken < steps		1204122	0		<			
ANR	1204181	Identifier	steps_taken		1204122	0					
ANR	1204182	Identifier	steps		1204122	1					
ANR	1204183	PostIncDecOperationExpression	steps_taken ++	912:29:23143:23155	1204122	1	True				
ANR	1204184	Identifier	steps_taken		1204122	0					
ANR	1204185	IncDec	++		1204122	1					
ANR	1204186	CompoundStatement		19:44:312:312	1204122	2					
ANR	1204187	IfStatement	if ( dbg -> swstep )		1204122	0					
ANR	1204188	Condition	dbg -> swstep	913:6:23166:23176	1204122	0	True				
ANR	1204189	PtrMemberAccess	dbg -> swstep		1204122	0					
ANR	1204190	Identifier	dbg		1204122	0					
ANR	1204191	Identifier	swstep		1204122	1					
ANR	1204192	CompoundStatement		20:19:333:333	1204122	1					
ANR	1204193	ExpressionStatement	ret = r_debug_step_soft ( dbg )	914:3:23184:23213	1204122	0	True				
ANR	1204194	AssignmentExpression	ret = r_debug_step_soft ( dbg )		1204122	0		=			
ANR	1204195	Identifier	ret		1204122	0					
ANR	1204196	CallExpression	r_debug_step_soft ( dbg )		1204122	1					
ANR	1204197	Callee	r_debug_step_soft		1204122	0					
ANR	1204198	Identifier	r_debug_step_soft		1204122	0					
ANR	1204199	ArgumentList	dbg		1204122	1					
ANR	1204200	Argument	dbg		1204122	0					
ANR	1204201	Identifier	dbg		1204122	0					
ANR	1204202	ElseStatement	else		1204122	0					
ANR	1204203	CompoundStatement		22:9:378:378	1204122	0					
ANR	1204204	ExpressionStatement	ret = r_debug_step_hard ( dbg )	916:3:23229:23258	1204122	0	True				
ANR	1204205	AssignmentExpression	ret = r_debug_step_hard ( dbg )		1204122	0		=			
ANR	1204206	Identifier	ret		1204122	0					
ANR	1204207	CallExpression	r_debug_step_hard ( dbg )		1204122	1					
ANR	1204208	Callee	r_debug_step_hard		1204122	0					
ANR	1204209	Identifier	r_debug_step_hard		1204122	0					
ANR	1204210	ArgumentList	dbg		1204122	1					
ANR	1204211	Argument	dbg		1204122	0					
ANR	1204212	Identifier	dbg		1204122	0					
ANR	1204213	IfStatement	if ( ! ret )		1204122	1					
ANR	1204214	Condition	! ret	918:6:23270:23273	1204122	0	True				
ANR	1204215	UnaryOperationExpression	! ret		1204122	0					
ANR	1204216	UnaryOperator	!		1204122	0					
ANR	1204217	Identifier	ret		1204122	1					
ANR	1204218	CompoundStatement		25:12:430:430	1204122	1					
ANR	1204219	ExpressionStatement	"eprintf ( ""Stepping failed!\\n"" )"	919:3:23281:23311	1204122	0	True				
ANR	1204220	CallExpression	"eprintf ( ""Stepping failed!\\n"" )"		1204122	0					
ANR	1204221	Callee	eprintf		1204122	0					
ANR	1204222	Identifier	eprintf		1204122	0					
ANR	1204223	ArgumentList	"""Stepping failed!\\n"""		1204122	1					
ANR	1204224	Argument	"""Stepping failed!\\n"""		1204122	0					
ANR	1204225	PrimaryExpression	"""Stepping failed!\\n"""		1204122	0					
ANR	1204226	ReturnStatement	return steps_taken ;	920:3:23316:23334	1204122	1	True				
ANR	1204227	Identifier	steps_taken		1204122	0					
ANR	1204228	ExpressionStatement	dbg -> steps ++	922:2:23342:23354	1204122	2	True				
ANR	1204229	PostIncDecOperationExpression	dbg -> steps ++		1204122	0					
ANR	1204230	PtrMemberAccess	dbg -> steps		1204122	0					
ANR	1204231	Identifier	dbg		1204122	0					
ANR	1204232	Identifier	steps		1204122	1					
ANR	1204233	IncDec	++		1204122	1					
ANR	1204234	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_STEP	923:2:23358:23396	1204122	3	True				
ANR	1204235	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_STEP		1204122	0		=			
ANR	1204236	MemberAccess	dbg -> reason . type		1204122	0					
ANR	1204237	PtrMemberAccess	dbg -> reason		1204122	0					
ANR	1204238	Identifier	dbg		1204122	0					
ANR	1204239	Identifier	reason		1204122	1					
ANR	1204240	Identifier	type		1204122	1					
ANR	1204241	Identifier	R_DEBUG_REASON_STEP		1204122	1					
ANR	1204242	ReturnStatement	return steps_taken ;	926:1:23403:23421	1204122	6	True				
ANR	1204243	Identifier	steps_taken		1204122	0					
ANR	1204244	ReturnType	R_API int		1204122	1					
ANR	1204245	Identifier	r_debug_step		1204122	2					
ANR	1204246	ParameterList	"RDebug * dbg , int steps"		1204122	3					
ANR	1204247	Parameter	RDebug * dbg	894:23:22821:22831	1204122	0	True				
ANR	1204248	ParameterType	RDebug *		1204122	0					
ANR	1204249	Identifier	dbg		1204122	1					
ANR	1204250	Parameter	int steps	894:36:22834:22842	1204122	1	True				
ANR	1204251	ParameterType	int		1204122	0					
ANR	1204252	Identifier	steps		1204122	1					
ANR	1204253	CFGEntryNode	ENTRY		1204122		True				
ANR	1204254	CFGExitNode	EXIT		1204122		True				
ANR	1204255	Symbol	ret		1204122						
ANR	1204256	Symbol	r_debug_step_soft		1204122						
ANR	1204257	Symbol	dbg -> h		1204122						
ANR	1204258	Symbol	dbg -> reason		1204122						
ANR	1204259	Symbol	r_debug_step_hard		1204122						
ANR	1204260	Symbol	dbg -> steps		1204122						
ANR	1204261	Symbol	dbg		1204122						
ANR	1204262	Symbol	* dbg		1204122						
ANR	1204263	Symbol	steps		1204122						
ANR	1204264	Symbol	steps_taken		1204122						
ANR	1204265	Symbol	dbg -> reason . type		1204122						
ANR	1204266	Symbol	dbg -> swstep		1204122						
ANR	1204267	Symbol	r_debug_is_dead		1204122						
ANR	1204268	Symbol	R_DEBUG_REASON_STEP		1204122						
ANR	1204269	Function	isStepOverable	929:0:23426:23651							
ANR	1204270	FunctionDef	isStepOverable (ut64 opType)		1204269	0					
ANR	1204271	CompoundStatement		929:40:23466:23651	1204269	0					
ANR	1204272	SwitchStatement	switch ( opType & R_ANAL_OP_TYPE_MASK )		1204269	0					
ANR	1204273	Condition	opType & R_ANAL_OP_TYPE_MASK	930:9:23477:23504	1204269	0	True				
ANR	1204274	BitAndExpression	opType & R_ANAL_OP_TYPE_MASK		1204269	0		&			
ANR	1204275	Identifier	opType		1204269	0					
ANR	1204276	Identifier	R_ANAL_OP_TYPE_MASK		1204269	1					
ANR	1204277	CompoundStatement		2:39:40:40	1204269	1					
ANR	1204278	Label	case R_ANAL_OP_TYPE_SWI :	931:1:23510:23533	1204269	0	True				
ANR	1204279	Identifier	R_ANAL_OP_TYPE_SWI		1204269	0					
ANR	1204280	Label	case R_ANAL_OP_TYPE_CALL :	932:1:23536:23560	1204269	1	True				
ANR	1204281	Identifier	R_ANAL_OP_TYPE_CALL		1204269	0					
ANR	1204282	Label	case R_ANAL_OP_TYPE_UCALL :	933:1:23563:23588	1204269	2	True				
ANR	1204283	Identifier	R_ANAL_OP_TYPE_UCALL		1204269	0					
ANR	1204284	Label	case R_ANAL_OP_TYPE_RCALL :	934:1:23591:23616	1204269	3	True				
ANR	1204285	Identifier	R_ANAL_OP_TYPE_RCALL		1204269	0					
ANR	1204286	ReturnStatement	return true ;	935:2:23620:23631	1204269	4	True				
ANR	1204287	Identifier	true		1204269	0					
ANR	1204288	ReturnStatement	return false ;	937:1:23637:23649	1204269	1	True				
ANR	1204289	Identifier	false		1204269	0					
ANR	1204290	ReturnType	static bool		1204269	1					
ANR	1204291	Identifier	isStepOverable		1204269	2					
ANR	1204292	ParameterList	ut64 opType		1204269	3					
ANR	1204293	Parameter	ut64 opType	929:27:23453:23463	1204269	0	True				
ANR	1204294	ParameterType	ut64		1204269	0					
ANR	1204295	Identifier	opType		1204269	1					
ANR	1204296	CFGEntryNode	ENTRY		1204269		True				
ANR	1204297	CFGExitNode	EXIT		1204269		True				
ANR	1204298	Symbol	R_ANAL_OP_TYPE_MASK		1204269						
ANR	1204299	Symbol	opType		1204269						
ANR	1204300	Symbol	true		1204269						
ANR	1204301	Symbol	false		1204269						
ANR	1204302	Function	r_debug_step_over	940:0:23654:25497							
ANR	1204303	FunctionDef	"r_debug_step_over (RDebug * dbg , int steps)"		1204302	0					
ANR	1204304	CompoundStatement		940:52:23706:25497	1204302	0					
ANR	1204305	IdentifierDeclStatement	RAnalOp op ;	941:1:23709:23719	1204302	0	True				
ANR	1204306	IdentifierDecl	op		1204302	0					
ANR	1204307	IdentifierDeclType	RAnalOp		1204302	0					
ANR	1204308	Identifier	op		1204302	1					
ANR	1204309	IdentifierDeclStatement	"ut64 buf_pc , pc , ins_size ;"	942:1:23722:23747	1204302	1	True				
ANR	1204310	IdentifierDecl	buf_pc		1204302	0					
ANR	1204311	IdentifierDeclType	ut64		1204302	0					
ANR	1204312	Identifier	buf_pc		1204302	1					
ANR	1204313	IdentifierDecl	pc		1204302	1					
ANR	1204314	IdentifierDeclType	ut64		1204302	0					
ANR	1204315	Identifier	pc		1204302	1					
ANR	1204316	IdentifierDecl	ins_size		1204302	2					
ANR	1204317	IdentifierDeclType	ut64		1204302	0					
ANR	1204318	Identifier	ins_size		1204302	1					
ANR	1204319	IdentifierDeclStatement	ut8 buf [ DBG_BUF_SIZE ] ;	943:1:23750:23771	1204302	2	True				
ANR	1204320	IdentifierDecl	buf [ DBG_BUF_SIZE ]		1204302	0					
ANR	1204321	IdentifierDeclType	ut8 [ DBG_BUF_SIZE ]		1204302	0					
ANR	1204322	Identifier	buf		1204302	1					
ANR	1204323	Identifier	DBG_BUF_SIZE		1204302	2					
ANR	1204324	IdentifierDeclStatement	int steps_taken = 0 ;	944:1:23774:23793	1204302	3	True				
ANR	1204325	IdentifierDecl	steps_taken = 0		1204302	0					
ANR	1204326	IdentifierDeclType	int		1204302	0					
ANR	1204327	Identifier	steps_taken		1204302	1					
ANR	1204328	AssignmentExpression	steps_taken = 0		1204302	2		=			
ANR	1204329	Identifier	steps_taken		1204302	0					
ANR	1204330	PrimaryExpression	0		1204302	1					
ANR	1204331	IfStatement	if ( r_debug_is_dead ( dbg ) )		1204302	4					
ANR	1204332	Condition	r_debug_is_dead ( dbg )	946:5:23801:23821	1204302	0	True				
ANR	1204333	CallExpression	r_debug_is_dead ( dbg )		1204302	0					
ANR	1204334	Callee	r_debug_is_dead		1204302	0					
ANR	1204335	Identifier	r_debug_is_dead		1204302	0					
ANR	1204336	ArgumentList	dbg		1204302	1					
ANR	1204337	Argument	dbg		1204302	0					
ANR	1204338	Identifier	dbg		1204302	0					
ANR	1204339	CompoundStatement		7:28:117:117	1204302	1					
ANR	1204340	ReturnStatement	return steps_taken ;	947:2:23828:23846	1204302	0	True				
ANR	1204341	Identifier	steps_taken		1204302	0					
ANR	1204342	IfStatement	if ( steps < 1 )		1204302	5					
ANR	1204343	Condition	steps < 1	950:5:23857:23865	1204302	0	True				
ANR	1204344	RelationalExpression	steps < 1		1204302	0		<			
ANR	1204345	Identifier	steps		1204302	0					
ANR	1204346	PrimaryExpression	1		1204302	1					
ANR	1204347	CompoundStatement		11:16:161:161	1204302	1					
ANR	1204348	ExpressionStatement	steps = 1	951:2:23872:23881	1204302	0	True				
ANR	1204349	AssignmentExpression	steps = 1		1204302	0		=			
ANR	1204350	Identifier	steps		1204302	0					
ANR	1204351	PrimaryExpression	1		1204302	1					
ANR	1204352	IfStatement	if ( dbg -> h && dbg -> h -> step_over )		1204302	6					
ANR	1204353	Condition	dbg -> h && dbg -> h -> step_over	954:5:23892:23918	1204302	0	True				
ANR	1204354	AndExpression	dbg -> h && dbg -> h -> step_over		1204302	0		&&			
ANR	1204355	PtrMemberAccess	dbg -> h		1204302	0					
ANR	1204356	Identifier	dbg		1204302	0					
ANR	1204357	Identifier	h		1204302	1					
ANR	1204358	PtrMemberAccess	dbg -> h -> step_over		1204302	1					
ANR	1204359	PtrMemberAccess	dbg -> h		1204302	0					
ANR	1204360	Identifier	dbg		1204302	0					
ANR	1204361	Identifier	h		1204302	1					
ANR	1204362	Identifier	step_over		1204302	1					
ANR	1204363	CompoundStatement		15:34:214:214	1204302	1					
ANR	1204364	ForStatement	for ( ; steps_taken < steps ; steps_taken ++ )		1204302	0					
ANR	1204365	Condition	steps_taken < steps	955:9:23932:23950	1204302	0	True				
ANR	1204366	RelationalExpression	steps_taken < steps		1204302	0		<			
ANR	1204367	Identifier	steps_taken		1204302	0					
ANR	1204368	Identifier	steps		1204302	1					
ANR	1204369	PostIncDecOperationExpression	steps_taken ++	955:30:23953:23965	1204302	1	True				
ANR	1204370	Identifier	steps_taken		1204302	0					
ANR	1204371	IncDec	++		1204302	1					
ANR	1204372	CompoundStatement		16:45:261:261	1204302	2					
ANR	1204373	IfStatement	if ( ! dbg -> h -> step_over ( dbg ) )		1204302	0					
ANR	1204374	Condition	! dbg -> h -> step_over ( dbg )	956:7:23977:24000	1204302	0	True				
ANR	1204375	UnaryOperationExpression	! dbg -> h -> step_over ( dbg )		1204302	0					
ANR	1204376	UnaryOperator	!		1204302	0					
ANR	1204377	CallExpression	dbg -> h -> step_over ( dbg )		1204302	1					
ANR	1204378	Callee	dbg -> h -> step_over		1204302	0					
ANR	1204379	PtrMemberAccess	dbg -> h -> step_over		1204302	0					
ANR	1204380	PtrMemberAccess	dbg -> h		1204302	0					
ANR	1204381	Identifier	dbg		1204302	0					
ANR	1204382	Identifier	h		1204302	1					
ANR	1204383	Identifier	step_over		1204302	1					
ANR	1204384	ArgumentList	dbg		1204302	1					
ANR	1204385	Argument	dbg		1204302	0					
ANR	1204386	Identifier	dbg		1204302	0					
ANR	1204387	CompoundStatement		17:33:296:296	1204302	1					
ANR	1204388	ReturnStatement	return steps_taken ;	957:4:24009:24027	1204302	0	True				
ANR	1204389	Identifier	steps_taken		1204302	0					
ANR	1204390	ReturnStatement	return steps_taken ;	960:2:24040:24058	1204302	1	True				
ANR	1204391	Identifier	steps_taken		1204302	0					
ANR	1204392	IfStatement	if ( ! dbg -> anal || ! dbg -> reg )		1204302	7					
ANR	1204393	Condition	! dbg -> anal || ! dbg -> reg	963:5:24069:24091	1204302	0	True				
ANR	1204394	OrExpression	! dbg -> anal || ! dbg -> reg		1204302	0		||			
ANR	1204395	UnaryOperationExpression	! dbg -> anal		1204302	0					
ANR	1204396	UnaryOperator	!		1204302	0					
ANR	1204397	PtrMemberAccess	dbg -> anal		1204302	1					
ANR	1204398	Identifier	dbg		1204302	0					
ANR	1204399	Identifier	anal		1204302	1					
ANR	1204400	UnaryOperationExpression	! dbg -> reg		1204302	1					
ANR	1204401	UnaryOperator	!		1204302	0					
ANR	1204402	PtrMemberAccess	dbg -> reg		1204302	1					
ANR	1204403	Identifier	dbg		1204302	0					
ANR	1204404	Identifier	reg		1204302	1					
ANR	1204405	CompoundStatement		24:30:387:387	1204302	1					
ANR	1204406	ReturnStatement	return steps_taken ;	964:2:24098:24116	1204302	0	True				
ANR	1204407	Identifier	steps_taken		1204302	0					
ANR	1204408	ExpressionStatement	"buf_pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"	968:1:24142:24203	1204302	8	True				
ANR	1204409	AssignmentExpression	"buf_pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204302	0		=			
ANR	1204410	Identifier	buf_pc		1204302	0					
ANR	1204411	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204302	1					
ANR	1204412	Callee	r_debug_reg_get		1204302	0					
ANR	1204413	Identifier	r_debug_reg_get		1204302	0					
ANR	1204414	ArgumentList	dbg		1204302	1					
ANR	1204415	Argument	dbg		1204302	0					
ANR	1204416	Identifier	dbg		1204302	0					
ANR	1204417	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1204302	1					
ANR	1204418	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1204302	0					
ANR	1204419	PtrMemberAccess	dbg -> reg -> name		1204302	0					
ANR	1204420	PtrMemberAccess	dbg -> reg		1204302	0					
ANR	1204421	Identifier	dbg		1204302	0					
ANR	1204422	Identifier	reg		1204302	1					
ANR	1204423	Identifier	name		1204302	1					
ANR	1204424	Identifier	R_REG_NAME_PC		1204302	1					
ANR	1204425	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , buf_pc , buf , sizeof ( buf ) )"	969:1:24206:24263	1204302	9	True				
ANR	1204426	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , buf_pc , buf , sizeof ( buf ) )"		1204302	0					
ANR	1204427	Callee	dbg -> iob . read_at		1204302	0					
ANR	1204428	MemberAccess	dbg -> iob . read_at		1204302	0					
ANR	1204429	PtrMemberAccess	dbg -> iob		1204302	0					
ANR	1204430	Identifier	dbg		1204302	0					
ANR	1204431	Identifier	iob		1204302	1					
ANR	1204432	Identifier	read_at		1204302	1					
ANR	1204433	ArgumentList	dbg -> iob . io		1204302	1					
ANR	1204434	Argument	dbg -> iob . io		1204302	0					
ANR	1204435	MemberAccess	dbg -> iob . io		1204302	0					
ANR	1204436	PtrMemberAccess	dbg -> iob		1204302	0					
ANR	1204437	Identifier	dbg		1204302	0					
ANR	1204438	Identifier	iob		1204302	1					
ANR	1204439	Identifier	io		1204302	1					
ANR	1204440	Argument	buf_pc		1204302	1					
ANR	1204441	Identifier	buf_pc		1204302	0					
ANR	1204442	Argument	buf		1204302	2					
ANR	1204443	Identifier	buf		1204302	0					
ANR	1204444	Argument	sizeof ( buf )		1204302	3					
ANR	1204445	SizeofExpression	sizeof ( buf )		1204302	0					
ANR	1204446	Sizeof	sizeof		1204302	0					
ANR	1204447	SizeofOperand	buf		1204302	1					
ANR	1204448	ForStatement	for ( ; steps_taken < steps ; steps_taken ++ )		1204302	10					
ANR	1204449	Condition	steps_taken < steps	971:8:24274:24292	1204302	0	True				
ANR	1204450	RelationalExpression	steps_taken < steps		1204302	0		<			
ANR	1204451	Identifier	steps_taken		1204302	0					
ANR	1204452	Identifier	steps		1204302	1					
ANR	1204453	PostIncDecOperationExpression	steps_taken ++	971:29:24295:24307	1204302	1	True				
ANR	1204454	Identifier	steps_taken		1204302	0					
ANR	1204455	IncDec	++		1204302	1					
ANR	1204456	CompoundStatement		32:44:603:603	1204302	2					
ANR	1204457	ExpressionStatement	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"	972:2:24314:24371	1204302	0	True				
ANR	1204458	AssignmentExpression	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204302	0		=			
ANR	1204459	Identifier	pc		1204302	0					
ANR	1204460	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204302	1					
ANR	1204461	Callee	r_debug_reg_get		1204302	0					
ANR	1204462	Identifier	r_debug_reg_get		1204302	0					
ANR	1204463	ArgumentList	dbg		1204302	1					
ANR	1204464	Argument	dbg		1204302	0					
ANR	1204465	Identifier	dbg		1204302	0					
ANR	1204466	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1204302	1					
ANR	1204467	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1204302	0					
ANR	1204468	PtrMemberAccess	dbg -> reg -> name		1204302	0					
ANR	1204469	PtrMemberAccess	dbg -> reg		1204302	0					
ANR	1204470	Identifier	dbg		1204302	0					
ANR	1204471	Identifier	reg		1204302	1					
ANR	1204472	Identifier	name		1204302	1					
ANR	1204473	Identifier	R_REG_NAME_PC		1204302	1					
ANR	1204474	IfStatement	if ( pc - buf_pc > sizeof ( buf ) )		1204302	1					
ANR	1204475	Condition	pc - buf_pc > sizeof ( buf )	974:6:24412:24437	1204302	0	True				
ANR	1204476	RelationalExpression	pc - buf_pc > sizeof ( buf )		1204302	0		>			
ANR	1204477	AdditiveExpression	pc - buf_pc		1204302	0		-			
ANR	1204478	Identifier	pc		1204302	0					
ANR	1204479	Identifier	buf_pc		1204302	1					
ANR	1204480	SizeofExpression	sizeof ( buf )		1204302	1					
ANR	1204481	Sizeof	sizeof		1204302	0					
ANR	1204482	SizeofOperand	buf		1204302	1					
ANR	1204483	CompoundStatement		35:34:733:733	1204302	1					
ANR	1204484	ExpressionStatement	buf_pc = pc	975:3:24445:24456	1204302	0	True				
ANR	1204485	AssignmentExpression	buf_pc = pc		1204302	0		=			
ANR	1204486	Identifier	buf_pc		1204302	0					
ANR	1204487	Identifier	pc		1204302	1					
ANR	1204488	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , buf_pc , buf , sizeof ( buf ) )"	976:3:24461:24518	1204302	1	True				
ANR	1204489	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , buf_pc , buf , sizeof ( buf ) )"		1204302	0					
ANR	1204490	Callee	dbg -> iob . read_at		1204302	0					
ANR	1204491	MemberAccess	dbg -> iob . read_at		1204302	0					
ANR	1204492	PtrMemberAccess	dbg -> iob		1204302	0					
ANR	1204493	Identifier	dbg		1204302	0					
ANR	1204494	Identifier	iob		1204302	1					
ANR	1204495	Identifier	read_at		1204302	1					
ANR	1204496	ArgumentList	dbg -> iob . io		1204302	1					
ANR	1204497	Argument	dbg -> iob . io		1204302	0					
ANR	1204498	MemberAccess	dbg -> iob . io		1204302	0					
ANR	1204499	PtrMemberAccess	dbg -> iob		1204302	0					
ANR	1204500	Identifier	dbg		1204302	0					
ANR	1204501	Identifier	iob		1204302	1					
ANR	1204502	Identifier	io		1204302	1					
ANR	1204503	Argument	buf_pc		1204302	1					
ANR	1204504	Identifier	buf_pc		1204302	0					
ANR	1204505	Argument	buf		1204302	2					
ANR	1204506	Identifier	buf		1204302	0					
ANR	1204507	Argument	sizeof ( buf )		1204302	3					
ANR	1204508	SizeofExpression	sizeof ( buf )		1204302	0					
ANR	1204509	Sizeof	sizeof		1204302	0					
ANR	1204510	SizeofOperand	buf		1204302	1					
ANR	1204511	IfStatement	"if ( ! r_anal_op ( dbg -> anal , & op , pc , buf + ( pc - buf_pc ) , sizeof ( buf ) - ( pc - buf_pc ) , R_ANAL_OP_MASK_BASIC ) )"		1204302	2					
ANR	1204512	Condition	"! r_anal_op ( dbg -> anal , & op , pc , buf + ( pc - buf_pc ) , sizeof ( buf ) - ( pc - buf_pc ) , R_ANAL_OP_MASK_BASIC )"	979:6:24554:24657	1204302	0	True				
ANR	1204513	UnaryOperationExpression	"! r_anal_op ( dbg -> anal , & op , pc , buf + ( pc - buf_pc ) , sizeof ( buf ) - ( pc - buf_pc ) , R_ANAL_OP_MASK_BASIC )"		1204302	0					
ANR	1204514	UnaryOperator	!		1204302	0					
ANR	1204515	CallExpression	"r_anal_op ( dbg -> anal , & op , pc , buf + ( pc - buf_pc ) , sizeof ( buf ) - ( pc - buf_pc ) , R_ANAL_OP_MASK_BASIC )"		1204302	1					
ANR	1204516	Callee	r_anal_op		1204302	0					
ANR	1204517	Identifier	r_anal_op		1204302	0					
ANR	1204518	ArgumentList	dbg -> anal		1204302	1					
ANR	1204519	Argument	dbg -> anal		1204302	0					
ANR	1204520	PtrMemberAccess	dbg -> anal		1204302	0					
ANR	1204521	Identifier	dbg		1204302	0					
ANR	1204522	Identifier	anal		1204302	1					
ANR	1204523	Argument	& op		1204302	1					
ANR	1204524	UnaryOperationExpression	& op		1204302	0					
ANR	1204525	UnaryOperator	&		1204302	0					
ANR	1204526	Identifier	op		1204302	1					
ANR	1204527	Argument	pc		1204302	2					
ANR	1204528	Identifier	pc		1204302	0					
ANR	1204529	Argument	buf + ( pc - buf_pc )		1204302	3					
ANR	1204530	AdditiveExpression	buf + ( pc - buf_pc )		1204302	0		+			
ANR	1204531	Identifier	buf		1204302	0					
ANR	1204532	AdditiveExpression	pc - buf_pc		1204302	1		-			
ANR	1204533	Identifier	pc		1204302	0					
ANR	1204534	Identifier	buf_pc		1204302	1					
ANR	1204535	Argument	sizeof ( buf ) - ( pc - buf_pc )		1204302	4					
ANR	1204536	AdditiveExpression	sizeof ( buf ) - ( pc - buf_pc )		1204302	0		-			
ANR	1204537	SizeofExpression	sizeof ( buf )		1204302	0					
ANR	1204538	Sizeof	sizeof		1204302	0					
ANR	1204539	SizeofOperand	buf		1204302	1					
ANR	1204540	AdditiveExpression	pc - buf_pc		1204302	1		-			
ANR	1204541	Identifier	pc		1204302	0					
ANR	1204542	Identifier	buf_pc		1204302	1					
ANR	1204543	Argument	R_ANAL_OP_MASK_BASIC		1204302	5					
ANR	1204544	Identifier	R_ANAL_OP_MASK_BASIC		1204302	0					
ANR	1204545	CompoundStatement		40:112:953:953	1204302	1					
ANR	1204546	Statement	eprintf	980:3:24665:24671	1204302	0	True				
ANR	1204547	Statement	(	980:11:24673:24673	1204302	1	True				
ANR	1204548	Statement	"""debug-step-over: Decode error at %"""	980:12:24674:24709	1204302	2	True				
ANR	1204549	Statement	PFMT64x	980:48:24710:24716	1204302	3	True				
ANR	1204550	Statement	"""\\n"""	980:55:24717:24720	1204302	4	True				
ANR	1204551	Statement	","	980:59:24721:24721	1204302	5	True				
ANR	1204552	Statement	pc	980:61:24723:24724	1204302	6	True				
ANR	1204553	Statement	)	980:63:24725:24725	1204302	7	True				
ANR	1204554	ExpressionStatement		980:64:24726:24726	1204302	8	True				
ANR	1204555	ReturnStatement	return steps_taken ;	981:3:24731:24749	1204302	9	True				
ANR	1204556	Identifier	steps_taken		1204302	0					
ANR	1204557	IfStatement	if ( op . fail == - 1 )		1204302	3					
ANR	1204558	Condition	op . fail == - 1	983:6:24761:24773	1204302	0	True				
ANR	1204559	EqualityExpression	op . fail == - 1		1204302	0		==			
ANR	1204560	MemberAccess	op . fail		1204302	0					
ANR	1204561	Identifier	op		1204302	0					
ANR	1204562	Identifier	fail		1204302	1					
ANR	1204563	UnaryOperationExpression	- 1		1204302	1					
ANR	1204564	UnaryOperator	-		1204302	0					
ANR	1204565	PrimaryExpression	1		1204302	1					
ANR	1204566	CompoundStatement		44:21:1069:1069	1204302	1					
ANR	1204567	ExpressionStatement	ins_size = pc + op . size	984:3:24781:24804	1204302	0	True				
ANR	1204568	AssignmentExpression	ins_size = pc + op . size		1204302	0		=			
ANR	1204569	Identifier	ins_size		1204302	0					
ANR	1204570	AdditiveExpression	pc + op . size		1204302	1		+			
ANR	1204571	Identifier	pc		1204302	0					
ANR	1204572	MemberAccess	op . size		1204302	1					
ANR	1204573	Identifier	op		1204302	0					
ANR	1204574	Identifier	size		1204302	1					
ANR	1204575	ElseStatement	else		1204302	0					
ANR	1204576	CompoundStatement		46:9:1108:1108	1204302	0					
ANR	1204577	ExpressionStatement	ins_size = op . fail	987:3:24912:24930	1204302	0	True				
ANR	1204578	AssignmentExpression	ins_size = op . fail		1204302	0		=			
ANR	1204579	Identifier	ins_size		1204302	0					
ANR	1204580	MemberAccess	op . fail		1204302	1					
ANR	1204581	Identifier	op		1204302	0					
ANR	1204582	Identifier	fail		1204302	1					
ANR	1204583	IfStatement	if ( isStepOverable ( op . type ) )		1204302	4					
ANR	1204584	Condition	isStepOverable ( op . type )	990:6:24982:25005	1204302	0	True				
ANR	1204585	CallExpression	isStepOverable ( op . type )		1204302	0					
ANR	1204586	Callee	isStepOverable		1204302	0					
ANR	1204587	Identifier	isStepOverable		1204302	0					
ANR	1204588	ArgumentList	op . type		1204302	1					
ANR	1204589	Argument	op . type		1204302	0					
ANR	1204590	MemberAccess	op . type		1204302	0					
ANR	1204591	Identifier	op		1204302	0					
ANR	1204592	Identifier	type		1204302	1					
ANR	1204593	CompoundStatement		51:32:1301:1301	1204302	1					
ANR	1204594	IfStatement	"if ( ! r_debug_continue_until ( dbg , ins_size ) )"		1204302	0					
ANR	1204595	Condition	"! r_debug_continue_until ( dbg , ins_size )"	991:7:25017:25055	1204302	0	True				
ANR	1204596	UnaryOperationExpression	"! r_debug_continue_until ( dbg , ins_size )"		1204302	0					
ANR	1204597	UnaryOperator	!		1204302	0					
ANR	1204598	CallExpression	"r_debug_continue_until ( dbg , ins_size )"		1204302	1					
ANR	1204599	Callee	r_debug_continue_until		1204302	0					
ANR	1204600	Identifier	r_debug_continue_until		1204302	0					
ANR	1204601	ArgumentList	dbg		1204302	1					
ANR	1204602	Argument	dbg		1204302	0					
ANR	1204603	Identifier	dbg		1204302	0					
ANR	1204604	Argument	ins_size		1204302	1					
ANR	1204605	Identifier	ins_size		1204302	0					
ANR	1204606	CompoundStatement		52:48:1351:1351	1204302	1					
ANR	1204607	Statement	eprintf	992:4:25064:25070	1204302	0	True				
ANR	1204608	Statement	(	992:12:25072:25072	1204302	1	True				
ANR	1204609	Statement	"""Could not step over call @ 0x%"""	992:13:25073:25104	1204302	2	True				
ANR	1204610	Statement	PFMT64x	992:45:25105:25111	1204302	3	True				
ANR	1204611	Statement	"""\\n"""	992:52:25112:25115	1204302	4	True				
ANR	1204612	Statement	","	992:56:25116:25116	1204302	5	True				
ANR	1204613	Statement	pc	992:58:25118:25119	1204302	6	True				
ANR	1204614	Statement	)	992:60:25120:25120	1204302	7	True				
ANR	1204615	ExpressionStatement		992:61:25121:25121	1204302	8	True				
ANR	1204616	ReturnStatement	return steps_taken ;	993:4:25127:25145	1204302	9	True				
ANR	1204617	Identifier	steps_taken		1204302	0					
ANR	1204618	ElseStatement	else		1204302	0					
ANR	1204619	IfStatement	if ( ( op . prefix & ( R_ANAL_OP_PREFIX_REP | R_ANAL_OP_PREFIX_REPNE | R_ANAL_OP_PREFIX_LOCK ) ) )		1204302	0					
ANR	1204620	Condition	op . prefix & ( R_ANAL_OP_PREFIX_REP | R_ANAL_OP_PREFIX_REPNE | R_ANAL_OP_PREFIX_LOCK )	995:13:25165:25249	1204302	0	True				
ANR	1204621	BitAndExpression	op . prefix & ( R_ANAL_OP_PREFIX_REP | R_ANAL_OP_PREFIX_REPNE | R_ANAL_OP_PREFIX_LOCK )		1204302	0		&			
ANR	1204622	MemberAccess	op . prefix		1204302	0					
ANR	1204623	Identifier	op		1204302	0					
ANR	1204624	Identifier	prefix		1204302	1					
ANR	1204625	InclusiveOrExpression	R_ANAL_OP_PREFIX_REP | R_ANAL_OP_PREFIX_REPNE | R_ANAL_OP_PREFIX_LOCK		1204302	1		|			
ANR	1204626	Identifier	R_ANAL_OP_PREFIX_REP		1204302	0					
ANR	1204627	InclusiveOrExpression	R_ANAL_OP_PREFIX_REPNE | R_ANAL_OP_PREFIX_LOCK		1204302	1		|			
ANR	1204628	Identifier	R_ANAL_OP_PREFIX_REPNE		1204302	0					
ANR	1204629	Identifier	R_ANAL_OP_PREFIX_LOCK		1204302	1					
ANR	1204630	CompoundStatement		56:100:1545:1545	1204302	1					
ANR	1204631	IfStatement	"if ( ! r_debug_continue_until ( dbg , ins_size ) )"		1204302	0					
ANR	1204632	Condition	"! r_debug_continue_until ( dbg , ins_size )"	997:7:25314:25352	1204302	0	True				
ANR	1204633	UnaryOperationExpression	"! r_debug_continue_until ( dbg , ins_size )"		1204302	0					
ANR	1204634	UnaryOperator	!		1204302	0					
ANR	1204635	CallExpression	"r_debug_continue_until ( dbg , ins_size )"		1204302	1					
ANR	1204636	Callee	r_debug_continue_until		1204302	0					
ANR	1204637	Identifier	r_debug_continue_until		1204302	0					
ANR	1204638	ArgumentList	dbg		1204302	1					
ANR	1204639	Argument	dbg		1204302	0					
ANR	1204640	Identifier	dbg		1204302	0					
ANR	1204641	Argument	ins_size		1204302	1					
ANR	1204642	Identifier	ins_size		1204302	0					
ANR	1204643	CompoundStatement		58:48:1648:1648	1204302	1					
ANR	1204644	ExpressionStatement	"eprintf ( ""step over failed over rep\\n"" )"	998:4:25361:25400	1204302	0	True				
ANR	1204645	CallExpression	"eprintf ( ""step over failed over rep\\n"" )"		1204302	0					
ANR	1204646	Callee	eprintf		1204302	0					
ANR	1204647	Identifier	eprintf		1204302	0					
ANR	1204648	ArgumentList	"""step over failed over rep\\n"""		1204302	1					
ANR	1204649	Argument	"""step over failed over rep\\n"""		1204302	0					
ANR	1204650	PrimaryExpression	"""step over failed over rep\\n"""		1204302	0					
ANR	1204651	ReturnStatement	return steps_taken ;	999:4:25406:25424	1204302	1	True				
ANR	1204652	Identifier	steps_taken		1204302	0					
ANR	1204653	ElseStatement	else		1204302	0					
ANR	1204654	CompoundStatement		62:9:1733:1733	1204302	0					
ANR	1204655	ExpressionStatement	"r_debug_step ( dbg , 1 )"	1002:3:25445:25466	1204302	0	True				
ANR	1204656	CallExpression	"r_debug_step ( dbg , 1 )"		1204302	0					
ANR	1204657	Callee	r_debug_step		1204302	0					
ANR	1204658	Identifier	r_debug_step		1204302	0					
ANR	1204659	ArgumentList	dbg		1204302	1					
ANR	1204660	Argument	dbg		1204302	0					
ANR	1204661	Identifier	dbg		1204302	0					
ANR	1204662	Argument	1		1204302	1					
ANR	1204663	PrimaryExpression	1		1204302	0					
ANR	1204664	ReturnStatement	return steps_taken ;	1006:1:25477:25495	1204302	11	True				
ANR	1204665	Identifier	steps_taken		1204302	0					
ANR	1204666	ReturnType	R_API int		1204302	1					
ANR	1204667	Identifier	r_debug_step_over		1204302	2					
ANR	1204668	ParameterList	"RDebug * dbg , int steps"		1204302	3					
ANR	1204669	Parameter	RDebug * dbg	940:28:23682:23692	1204302	0	True				
ANR	1204670	ParameterType	RDebug *		1204302	0					
ANR	1204671	Identifier	dbg		1204302	1					
ANR	1204672	Parameter	int steps	940:41:23695:23703	1204302	1	True				
ANR	1204673	ParameterType	int		1204302	0					
ANR	1204674	Identifier	steps		1204302	1					
ANR	1204675	CFGEntryNode	ENTRY		1204302		True				
ANR	1204676	CFGExitNode	EXIT		1204302		True				
ANR	1204677	Symbol	dbg -> h -> step_over		1204302						
ANR	1204678	Symbol	dbg -> iob . io		1204302						
ANR	1204679	Symbol	ins_size		1204302						
ANR	1204680	Symbol	R_REG_NAME_PC		1204302						
ANR	1204681	Symbol	isStepOverable		1204302						
ANR	1204682	Symbol	r_debug_reg_get		1204302						
ANR	1204683	Symbol	op . fail		1204302						
ANR	1204684	Symbol	* dbg -> h		1204302						
ANR	1204685	Symbol	op . prefix		1204302						
ANR	1204686	Symbol	& op		1204302						
ANR	1204687	Symbol	* dbg -> reg -> name		1204302						
ANR	1204688	Symbol	R_ANAL_OP_MASK_BASIC		1204302						
ANR	1204689	Symbol	steps_taken		1204302						
ANR	1204690	Symbol	R_ANAL_OP_PREFIX_LOCK		1204302						
ANR	1204691	Symbol	R_ANAL_OP_PREFIX_REP		1204302						
ANR	1204692	Symbol	* R_REG_NAME_PC		1204302						
ANR	1204693	Symbol	r_anal_op		1204302						
ANR	1204694	Symbol	op		1204302						
ANR	1204695	Symbol	dbg -> h		1204302						
ANR	1204696	Symbol	dbg -> iob		1204302						
ANR	1204697	Symbol	buf_pc		1204302						
ANR	1204698	Symbol	op . type		1204302						
ANR	1204699	Symbol	dbg -> anal		1204302						
ANR	1204700	Symbol	* * * dbg		1204302						
ANR	1204701	Symbol	dbg		1204302						
ANR	1204702	Symbol	* dbg		1204302						
ANR	1204703	Symbol	steps		1204302						
ANR	1204704	Symbol	* * dbg -> reg		1204302						
ANR	1204705	Symbol	* dbg -> reg		1204302						
ANR	1204706	Symbol	buf		1204302						
ANR	1204707	Symbol	r_debug_is_dead		1204302						
ANR	1204708	Symbol	R_ANAL_OP_PREFIX_REPNE		1204302						
ANR	1204709	Symbol	pc		1204302						
ANR	1204710	Symbol	r_debug_continue_until		1204302						
ANR	1204711	Symbol	dbg -> reg		1204302						
ANR	1204712	Symbol	op . size		1204302						
ANR	1204713	Symbol	* * dbg		1204302						
ANR	1204714	Symbol	dbg -> reg -> name		1204302						
ANR	1204715	Function	get_prev_instr	1009:0:25500:26276							
ANR	1204716	FunctionDef	"get_prev_instr (RDebug * dbg , ut64 from , ut64 to)"		1204715	0					
ANR	1204717	CompoundStatement		1009:60:25560:26276	1204715	0					
ANR	1204718	IdentifierDeclStatement	"int i , ret , bsize = 256 ;"	1010:1:25563:25586	1204715	0	True				
ANR	1204719	IdentifierDecl	i		1204715	0					
ANR	1204720	IdentifierDeclType	int		1204715	0					
ANR	1204721	Identifier	i		1204715	1					
ANR	1204722	IdentifierDecl	ret		1204715	1					
ANR	1204723	IdentifierDeclType	int		1204715	0					
ANR	1204724	Identifier	ret		1204715	1					
ANR	1204725	IdentifierDecl	bsize = 256		1204715	2					
ANR	1204726	IdentifierDeclType	int		1204715	0					
ANR	1204727	Identifier	bsize		1204715	1					
ANR	1204728	AssignmentExpression	bsize = 256		1204715	2		=			
ANR	1204729	Identifier	bsize		1204715	0					
ANR	1204730	PrimaryExpression	256		1204715	1					
ANR	1204731	IdentifierDeclStatement	int inc ;	1011:1:25589:25596	1204715	1	True				
ANR	1204732	IdentifierDecl	inc		1204715	0					
ANR	1204733	IdentifierDeclType	int		1204715	0					
ANR	1204734	Identifier	inc		1204715	1					
ANR	1204735	IdentifierDeclStatement	"ut64 prev = 0 , at ;"	1012:1:25599:25616	1204715	2	True				
ANR	1204736	IdentifierDecl	prev = 0		1204715	0					
ANR	1204737	IdentifierDeclType	ut64		1204715	0					
ANR	1204738	Identifier	prev		1204715	1					
ANR	1204739	AssignmentExpression	prev = 0		1204715	2		=			
ANR	1204740	Identifier	prev		1204715	0					
ANR	1204741	PrimaryExpression	0		1204715	1					
ANR	1204742	IdentifierDecl	at		1204715	1					
ANR	1204743	IdentifierDeclType	ut64		1204715	0					
ANR	1204744	Identifier	at		1204715	1					
ANR	1204745	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	1013:1:25619:25636	1204715	3	True				
ANR	1204746	IdentifierDecl	aop = { 0 }		1204715	0					
ANR	1204747	IdentifierDeclType	RAnalOp		1204715	0					
ANR	1204748	Identifier	aop		1204715	1					
ANR	1204749	AssignmentExpression	aop = { 0 }		1204715	2		=			
ANR	1204750	Identifier	aop		1204715	0					
ANR	1204751	InitializerList	0		1204715	1					
ANR	1204752	PrimaryExpression	0		1204715	0					
ANR	1204753	IdentifierDeclStatement	"const int mininstrsz = r_anal_archinfo ( dbg -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	1014:1:25639:25718	1204715	4	True				
ANR	1204754	IdentifierDecl	"mininstrsz = r_anal_archinfo ( dbg -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1204715	0					
ANR	1204755	IdentifierDeclType	const int		1204715	0					
ANR	1204756	Identifier	mininstrsz		1204715	1					
ANR	1204757	AssignmentExpression	"mininstrsz = r_anal_archinfo ( dbg -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1204715	2		=			
ANR	1204758	Identifier	mininstrsz		1204715	0					
ANR	1204759	CallExpression	"r_anal_archinfo ( dbg -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1204715	1					
ANR	1204760	Callee	r_anal_archinfo		1204715	0					
ANR	1204761	Identifier	r_anal_archinfo		1204715	0					
ANR	1204762	ArgumentList	dbg -> anal		1204715	1					
ANR	1204763	Argument	dbg -> anal		1204715	0					
ANR	1204764	PtrMemberAccess	dbg -> anal		1204715	0					
ANR	1204765	Identifier	dbg		1204715	0					
ANR	1204766	Identifier	anal		1204715	1					
ANR	1204767	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		1204715	1					
ANR	1204768	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		1204715	0					
ANR	1204769	IdentifierDeclStatement	"const int minopcode = R_MAX ( 1 , mininstrsz ) ;"	1015:1:25721:25764	1204715	5	True				
ANR	1204770	IdentifierDecl	"minopcode = R_MAX ( 1 , mininstrsz )"		1204715	0					
ANR	1204771	IdentifierDeclType	const int		1204715	0					
ANR	1204772	Identifier	minopcode		1204715	1					
ANR	1204773	AssignmentExpression	"minopcode = R_MAX ( 1 , mininstrsz )"		1204715	2		=			
ANR	1204774	Identifier	minopcode		1204715	0					
ANR	1204775	CallExpression	"R_MAX ( 1 , mininstrsz )"		1204715	1					
ANR	1204776	Callee	R_MAX		1204715	0					
ANR	1204777	Identifier	R_MAX		1204715	0					
ANR	1204778	ArgumentList	1		1204715	1					
ANR	1204779	Argument	1		1204715	0					
ANR	1204780	PrimaryExpression	1		1204715	0					
ANR	1204781	Argument	mininstrsz		1204715	1					
ANR	1204782	Identifier	mininstrsz		1204715	0					
ANR	1204783	IdentifierDeclStatement	ut8 * buf = malloc ( bsize ) ;	1016:1:25767:25792	1204715	6	True				
ANR	1204784	IdentifierDecl	* buf = malloc ( bsize )		1204715	0					
ANR	1204785	IdentifierDeclType	ut8 *		1204715	0					
ANR	1204786	Identifier	buf		1204715	1					
ANR	1204787	AssignmentExpression	* buf = malloc ( bsize )		1204715	2		=			
ANR	1204788	Identifier	buf		1204715	0					
ANR	1204789	CallExpression	malloc ( bsize )		1204715	1					
ANR	1204790	Callee	malloc		1204715	0					
ANR	1204791	Identifier	malloc		1204715	0					
ANR	1204792	ArgumentList	bsize		1204715	1					
ANR	1204793	Argument	bsize		1204715	0					
ANR	1204794	Identifier	bsize		1204715	0					
ANR	1204795	IfStatement	if ( ! buf )		1204715	7					
ANR	1204796	Condition	! buf	1018:5:25800:25803	1204715	0	True				
ANR	1204797	UnaryOperationExpression	! buf		1204715	0					
ANR	1204798	UnaryOperator	!		1204715	0					
ANR	1204799	Identifier	buf		1204715	1					
ANR	1204800	CompoundStatement		10:11:245:245	1204715	1					
ANR	1204801	ExpressionStatement	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , bsize )"	1019:2:25810:25857	1204715	0	True				
ANR	1204802	CallExpression	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , bsize )"		1204715	0					
ANR	1204803	Callee	eprintf		1204715	0					
ANR	1204804	Identifier	eprintf		1204715	0					
ANR	1204805	ArgumentList	"""Cannot allocate %d byte(s)\\n"""		1204715	1					
ANR	1204806	Argument	"""Cannot allocate %d byte(s)\\n"""		1204715	0					
ANR	1204807	PrimaryExpression	"""Cannot allocate %d byte(s)\\n"""		1204715	0					
ANR	1204808	Argument	bsize		1204715	1					
ANR	1204809	Identifier	bsize		1204715	0					
ANR	1204810	ExpressionStatement	free ( buf )	1020:2:25861:25871	1204715	1	True				
ANR	1204811	CallExpression	free ( buf )		1204715	0					
ANR	1204812	Callee	free		1204715	0					
ANR	1204813	Identifier	free		1204715	0					
ANR	1204814	ArgumentList	buf		1204715	1					
ANR	1204815	Argument	buf		1204715	0					
ANR	1204816	Identifier	buf		1204715	0					
ANR	1204817	ReturnStatement	return 0 ;	1021:2:25875:25883	1204715	2	True				
ANR	1204818	PrimaryExpression	0		1204715	0					
ANR	1204819	ForStatement	"for ( i = 0 , at = from ; at < to ; at ++ , i ++ )"		1204715	8					
ANR	1204820	ForInit	"i = 0 , at = from ;"	1023:6:25894:25910	1204715	0	True				
ANR	1204821	Expression	"i = 0 , at = from"		1204715	0					
ANR	1204822	AssignmentExpression	i = 0		1204715	0		=			
ANR	1204823	Identifier	i		1204715	0					
ANR	1204824	PrimaryExpression	0		1204715	1					
ANR	1204825	AssignmentExpression	at = from		1204715	1		=			
ANR	1204826	Identifier	at		1204715	0					
ANR	1204827	Identifier	from		1204715	1					
ANR	1204828	Condition	at < to	1023:24:25912:25918	1204715	1	True				
ANR	1204829	RelationalExpression	at < to		1204715	0		<			
ANR	1204830	Identifier	at		1204715	0					
ANR	1204831	Identifier	to		1204715	1					
ANR	1204832	Expression	"at ++ , i ++"	1023:33:25921:25929	1204715	2	True				
ANR	1204833	PostIncDecOperationExpression	at ++		1204715	0					
ANR	1204834	Identifier	at		1204715	0					
ANR	1204835	IncDec	++		1204715	1					
ANR	1204836	PostIncDecOperationExpression	i ++		1204715	1					
ANR	1204837	Identifier	i		1204715	0					
ANR	1204838	IncDec	++		1204715	1					
ANR	1204839	CompoundStatement		15:44:371:371	1204715	3					
ANR	1204840	IfStatement	if ( i >= ( bsize - 32 ) )		1204715	0					
ANR	1204841	Condition	i >= ( bsize - 32 )	1024:6:25940:25956	1204715	0	True				
ANR	1204842	RelationalExpression	i >= ( bsize - 32 )		1204715	0		>=			
ANR	1204843	Identifier	i		1204715	0					
ANR	1204844	AdditiveExpression	bsize - 32		1204715	1		-			
ANR	1204845	Identifier	bsize		1204715	0					
ANR	1204846	PrimaryExpression	32		1204715	1					
ANR	1204847	CompoundStatement		16:25:398:398	1204715	1					
ANR	1204848	ExpressionStatement	i = 0	1025:3:25964:25969	1204715	0	True				
ANR	1204849	AssignmentExpression	i = 0		1204715	0		=			
ANR	1204850	Identifier	i		1204715	0					
ANR	1204851	PrimaryExpression	0		1204715	1					
ANR	1204852	IfStatement	if ( ! i )		1204715	1					
ANR	1204853	Condition	! i	1027:6:25981:25982	1204715	0	True				
ANR	1204854	UnaryOperationExpression	! i		1204715	0					
ANR	1204855	UnaryOperator	!		1204715	0					
ANR	1204856	Identifier	i		1204715	1					
ANR	1204857	CompoundStatement		19:10:424:424	1204715	1					
ANR	1204858	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , at , buf , bsize )"	1028:3:25990:26036	1204715	0	True				
ANR	1204859	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , at , buf , bsize )"		1204715	0					
ANR	1204860	Callee	dbg -> iob . read_at		1204715	0					
ANR	1204861	MemberAccess	dbg -> iob . read_at		1204715	0					
ANR	1204862	PtrMemberAccess	dbg -> iob		1204715	0					
ANR	1204863	Identifier	dbg		1204715	0					
ANR	1204864	Identifier	iob		1204715	1					
ANR	1204865	Identifier	read_at		1204715	1					
ANR	1204866	ArgumentList	dbg -> iob . io		1204715	1					
ANR	1204867	Argument	dbg -> iob . io		1204715	0					
ANR	1204868	MemberAccess	dbg -> iob . io		1204715	0					
ANR	1204869	PtrMemberAccess	dbg -> iob		1204715	0					
ANR	1204870	Identifier	dbg		1204715	0					
ANR	1204871	Identifier	iob		1204715	1					
ANR	1204872	Identifier	io		1204715	1					
ANR	1204873	Argument	at		1204715	1					
ANR	1204874	Identifier	at		1204715	0					
ANR	1204875	Argument	buf		1204715	2					
ANR	1204876	Identifier	buf		1204715	0					
ANR	1204877	Argument	bsize		1204715	3					
ANR	1204878	Identifier	bsize		1204715	0					
ANR	1204879	ExpressionStatement	"ret = r_anal_op ( dbg -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_BASIC )"	1030:2:26044:26123	1204715	2	True				
ANR	1204880	AssignmentExpression	"ret = r_anal_op ( dbg -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_BASIC )"		1204715	0		=			
ANR	1204881	Identifier	ret		1204715	0					
ANR	1204882	CallExpression	"r_anal_op ( dbg -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_BASIC )"		1204715	1					
ANR	1204883	Callee	r_anal_op		1204715	0					
ANR	1204884	Identifier	r_anal_op		1204715	0					
ANR	1204885	ArgumentList	dbg -> anal		1204715	1					
ANR	1204886	Argument	dbg -> anal		1204715	0					
ANR	1204887	PtrMemberAccess	dbg -> anal		1204715	0					
ANR	1204888	Identifier	dbg		1204715	0					
ANR	1204889	Identifier	anal		1204715	1					
ANR	1204890	Argument	& aop		1204715	1					
ANR	1204891	UnaryOperationExpression	& aop		1204715	0					
ANR	1204892	UnaryOperator	&		1204715	0					
ANR	1204893	Identifier	aop		1204715	1					
ANR	1204894	Argument	at		1204715	2					
ANR	1204895	Identifier	at		1204715	0					
ANR	1204896	Argument	buf + i		1204715	3					
ANR	1204897	AdditiveExpression	buf + i		1204715	0		+			
ANR	1204898	Identifier	buf		1204715	0					
ANR	1204899	Identifier	i		1204715	1					
ANR	1204900	Argument	bsize - i		1204715	4					
ANR	1204901	AdditiveExpression	bsize - i		1204715	0		-			
ANR	1204902	Identifier	bsize		1204715	0					
ANR	1204903	Identifier	i		1204715	1					
ANR	1204904	Argument	R_ANAL_OP_MASK_BASIC		1204715	5					
ANR	1204905	Identifier	R_ANAL_OP_MASK_BASIC		1204715	0					
ANR	1204906	ExpressionStatement	inc = ret - 1	1031:2:26127:26140	1204715	3	True				
ANR	1204907	AssignmentExpression	inc = ret - 1		1204715	0		=			
ANR	1204908	Identifier	inc		1204715	0					
ANR	1204909	AdditiveExpression	ret - 1		1204715	1		-			
ANR	1204910	Identifier	ret		1204715	0					
ANR	1204911	PrimaryExpression	1		1204715	1					
ANR	1204912	IfStatement	if ( inc < 0 )		1204715	4					
ANR	1204913	Condition	inc < 0	1032:6:26148:26154	1204715	0	True				
ANR	1204914	RelationalExpression	inc < 0		1204715	0		<			
ANR	1204915	Identifier	inc		1204715	0					
ANR	1204916	PrimaryExpression	0		1204715	1					
ANR	1204917	CompoundStatement		24:15:596:596	1204715	1					
ANR	1204918	ExpressionStatement	inc = minopcode	1033:3:26162:26177	1204715	0	True				
ANR	1204919	AssignmentExpression	inc = minopcode		1204715	0		=			
ANR	1204920	Identifier	inc		1204715	0					
ANR	1204921	Identifier	minopcode		1204715	1					
ANR	1204922	ExpressionStatement	prev = at	1035:2:26185:26194	1204715	5	True				
ANR	1204923	AssignmentExpression	prev = at		1204715	0		=			
ANR	1204924	Identifier	prev		1204715	0					
ANR	1204925	Identifier	at		1204715	1					
ANR	1204926	ExpressionStatement	i += inc	1036:2:26198:26206	1204715	6	True				
ANR	1204927	AssignmentExpression	i += inc		1204715	0		+=			
ANR	1204928	Identifier	i		1204715	0					
ANR	1204929	Identifier	inc		1204715	1					
ANR	1204930	ExpressionStatement	at += inc	1037:2:26210:26219	1204715	7	True				
ANR	1204931	AssignmentExpression	at += inc		1204715	0		+=			
ANR	1204932	Identifier	at		1204715	0					
ANR	1204933	Identifier	inc		1204715	1					
ANR	1204934	ExpressionStatement	r_anal_op_fini ( & aop )	1038:2:26223:26244	1204715	8	True				
ANR	1204935	CallExpression	r_anal_op_fini ( & aop )		1204715	0					
ANR	1204936	Callee	r_anal_op_fini		1204715	0					
ANR	1204937	Identifier	r_anal_op_fini		1204715	0					
ANR	1204938	ArgumentList	& aop		1204715	1					
ANR	1204939	Argument	& aop		1204715	0					
ANR	1204940	UnaryOperationExpression	& aop		1204715	0					
ANR	1204941	UnaryOperator	&		1204715	0					
ANR	1204942	Identifier	aop		1204715	1					
ANR	1204943	ExpressionStatement	free ( buf )	1040:1:26250:26260	1204715	9	True				
ANR	1204944	CallExpression	free ( buf )		1204715	0					
ANR	1204945	Callee	free		1204715	0					
ANR	1204946	Identifier	free		1204715	0					
ANR	1204947	ArgumentList	buf		1204715	1					
ANR	1204948	Argument	buf		1204715	0					
ANR	1204949	Identifier	buf		1204715	0					
ANR	1204950	ReturnStatement	return prev ;	1041:1:26263:26274	1204715	10	True				
ANR	1204951	Identifier	prev		1204715	0					
ANR	1204952	ReturnType	static ut64		1204715	1					
ANR	1204953	Identifier	get_prev_instr		1204715	2					
ANR	1204954	ParameterList	"RDebug * dbg , ut64 from , ut64 to"		1204715	3					
ANR	1204955	Parameter	RDebug * dbg	1009:27:25527:25537	1204715	0	True				
ANR	1204956	ParameterType	RDebug *		1204715	0					
ANR	1204957	Identifier	dbg		1204715	1					
ANR	1204958	Parameter	ut64 from	1009:40:25540:25548	1204715	1	True				
ANR	1204959	ParameterType	ut64		1204715	0					
ANR	1204960	Identifier	from		1204715	1					
ANR	1204961	Parameter	ut64 to	1009:51:25551:25557	1204715	2	True				
ANR	1204962	ParameterType	ut64		1204715	0					
ANR	1204963	Identifier	to		1204715	1					
ANR	1204964	CFGEntryNode	ENTRY		1204715		True				
ANR	1204965	CFGExitNode	EXIT		1204715		True				
ANR	1204966	Symbol	ret		1204715						
ANR	1204967	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		1204715						
ANR	1204968	Symbol	malloc		1204715						
ANR	1204969	Symbol	dbg -> iob . io		1204715						
ANR	1204970	Symbol	aop		1204715						
ANR	1204971	Symbol	dbg -> iob		1204715						
ANR	1204972	Symbol	dbg -> anal		1204715						
ANR	1204973	Symbol	prev		1204715						
ANR	1204974	Symbol	mininstrsz		1204715						
ANR	1204975	Symbol	r_anal_archinfo		1204715						
ANR	1204976	Symbol	dbg		1204715						
ANR	1204977	Symbol	i		1204715						
ANR	1204978	Symbol	* dbg		1204715						
ANR	1204979	Symbol	R_ANAL_OP_MASK_BASIC		1204715						
ANR	1204980	Symbol	minopcode		1204715						
ANR	1204981	Symbol	& aop		1204715						
ANR	1204982	Symbol	buf		1204715						
ANR	1204983	Symbol	at		1204715						
ANR	1204984	Symbol	R_MAX		1204715						
ANR	1204985	Symbol	bsize		1204715						
ANR	1204986	Symbol	from		1204715						
ANR	1204987	Symbol	to		1204715						
ANR	1204988	Symbol	inc		1204715						
ANR	1204989	Symbol	r_anal_op		1204715						
ANR	1204990	Function	r_debug_step_back	1045:0:26390:27990							
ANR	1204991	FunctionDef	r_debug_step_back (RDebug * dbg)		1204990	0					
ANR	1204992	CompoundStatement		1045:42:26432:27990	1204990	0					
ANR	1204993	IdentifierDeclStatement	"ut64 pc , prev = 0 , end ;"	1046:1:26435:26457	1204990	0	True				
ANR	1204994	IdentifierDecl	pc		1204990	0					
ANR	1204995	IdentifierDeclType	ut64		1204990	0					
ANR	1204996	Identifier	pc		1204990	1					
ANR	1204997	IdentifierDecl	prev = 0		1204990	1					
ANR	1204998	IdentifierDeclType	ut64		1204990	0					
ANR	1204999	Identifier	prev		1204990	1					
ANR	1205000	AssignmentExpression	prev = 0		1204990	2		=			
ANR	1205001	Identifier	prev		1204990	0					
ANR	1205002	PrimaryExpression	0		1204990	1					
ANR	1205003	IdentifierDecl	end		1204990	2					
ANR	1205004	IdentifierDeclType	ut64		1204990	0					
ANR	1205005	Identifier	end		1204990	1					
ANR	1205006	IdentifierDeclStatement	RDebugSession * before ;	1047:1:26460:26481	1204990	1	True				
ANR	1205007	IdentifierDecl	* before		1204990	0					
ANR	1205008	IdentifierDeclType	RDebugSession *		1204990	0					
ANR	1205009	Identifier	before		1204990	1					
ANR	1205010	IfStatement	if ( r_debug_is_dead ( dbg ) )		1204990	2					
ANR	1205011	Condition	r_debug_is_dead ( dbg )	1049:5:26489:26509	1204990	0	True				
ANR	1205012	CallExpression	r_debug_is_dead ( dbg )		1204990	0					
ANR	1205013	Callee	r_debug_is_dead		1204990	0					
ANR	1205014	Identifier	r_debug_is_dead		1204990	0					
ANR	1205015	ArgumentList	dbg		1204990	1					
ANR	1205016	Argument	dbg		1204990	0					
ANR	1205017	Identifier	dbg		1204990	0					
ANR	1205018	CompoundStatement		5:28:79:79	1204990	1					
ANR	1205019	ReturnStatement	return false ;	1050:2:26516:26528	1204990	0	True				
ANR	1205020	Identifier	false		1204990	0					
ANR	1205021	IfStatement	if ( ! dbg -> anal || ! dbg -> reg )		1204990	3					
ANR	1205022	Condition	! dbg -> anal || ! dbg -> reg	1052:5:26538:26560	1204990	0	True				
ANR	1205023	OrExpression	! dbg -> anal || ! dbg -> reg		1204990	0		||			
ANR	1205024	UnaryOperationExpression	! dbg -> anal		1204990	0					
ANR	1205025	UnaryOperator	!		1204990	0					
ANR	1205026	PtrMemberAccess	dbg -> anal		1204990	1					
ANR	1205027	Identifier	dbg		1204990	0					
ANR	1205028	Identifier	anal		1204990	1					
ANR	1205029	UnaryOperationExpression	! dbg -> reg		1204990	1					
ANR	1205030	UnaryOperator	!		1204990	0					
ANR	1205031	PtrMemberAccess	dbg -> reg		1204990	1					
ANR	1205032	Identifier	dbg		1204990	0					
ANR	1205033	Identifier	reg		1204990	1					
ANR	1205034	CompoundStatement		8:30:130:130	1204990	1					
ANR	1205035	ReturnStatement	return false ;	1053:2:26567:26579	1204990	0	True				
ANR	1205036	Identifier	false		1204990	0					
ANR	1205037	IfStatement	if ( r_list_empty ( dbg -> sessions ) )		1204990	4					
ANR	1205038	Condition	r_list_empty ( dbg -> sessions )	1055:5:26589:26616	1204990	0	True				
ANR	1205039	CallExpression	r_list_empty ( dbg -> sessions )		1204990	0					
ANR	1205040	Callee	r_list_empty		1204990	0					
ANR	1205041	Identifier	r_list_empty		1204990	0					
ANR	1205042	ArgumentList	dbg -> sessions		1204990	1					
ANR	1205043	Argument	dbg -> sessions		1204990	0					
ANR	1205044	PtrMemberAccess	dbg -> sessions		1204990	0					
ANR	1205045	Identifier	dbg		1204990	0					
ANR	1205046	Identifier	sessions		1204990	1					
ANR	1205047	CompoundStatement		11:35:186:186	1204990	1					
ANR	1205048	ReturnStatement	return false ;	1056:2:26623:26635	1204990	0	True				
ANR	1205049	Identifier	false		1204990	0					
ANR	1205050	ExpressionStatement	"end = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"	1058:1:26641:26699	1204990	5	True				
ANR	1205051	AssignmentExpression	"end = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204990	0		=			
ANR	1205052	Identifier	end		1204990	0					
ANR	1205053	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204990	1					
ANR	1205054	Callee	r_debug_reg_get		1204990	0					
ANR	1205055	Identifier	r_debug_reg_get		1204990	0					
ANR	1205056	ArgumentList	dbg		1204990	1					
ANR	1205057	Argument	dbg		1204990	0					
ANR	1205058	Identifier	dbg		1204990	0					
ANR	1205059	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1204990	1					
ANR	1205060	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1204990	0					
ANR	1205061	PtrMemberAccess	dbg -> reg -> name		1204990	0					
ANR	1205062	PtrMemberAccess	dbg -> reg		1204990	0					
ANR	1205063	Identifier	dbg		1204990	0					
ANR	1205064	Identifier	reg		1204990	1					
ANR	1205065	Identifier	name		1204990	1					
ANR	1205066	Identifier	R_REG_NAME_PC		1204990	1					
ANR	1205067	ExpressionStatement	"before = r_debug_session_get ( dbg , dbg -> sessions -> tail )"	1061:1:26729:26784	1204990	6	True				
ANR	1205068	AssignmentExpression	"before = r_debug_session_get ( dbg , dbg -> sessions -> tail )"		1204990	0		=			
ANR	1205069	Identifier	before		1204990	0					
ANR	1205070	CallExpression	"r_debug_session_get ( dbg , dbg -> sessions -> tail )"		1204990	1					
ANR	1205071	Callee	r_debug_session_get		1204990	0					
ANR	1205072	Identifier	r_debug_session_get		1204990	0					
ANR	1205073	ArgumentList	dbg		1204990	1					
ANR	1205074	Argument	dbg		1204990	0					
ANR	1205075	Identifier	dbg		1204990	0					
ANR	1205076	Argument	dbg -> sessions -> tail		1204990	1					
ANR	1205077	PtrMemberAccess	dbg -> sessions -> tail		1204990	0					
ANR	1205078	PtrMemberAccess	dbg -> sessions		1204990	0					
ANR	1205079	Identifier	dbg		1204990	0					
ANR	1205080	Identifier	sessions		1204990	1					
ANR	1205081	Identifier	tail		1204990	1					
ANR	1205082	IfStatement	if ( ! before )		1204990	7					
ANR	1205083	Condition	! before	1062:5:26791:26797	1204990	0	True				
ANR	1205084	UnaryOperationExpression	! before		1204990	0					
ANR	1205085	UnaryOperator	!		1204990	0					
ANR	1205086	Identifier	before		1204990	1					
ANR	1205087	CompoundStatement		18:14:367:367	1204990	1					
ANR	1205088	ReturnStatement	return false ;	1063:2:26804:26816	1204990	0	True				
ANR	1205089	Identifier	false		1204990	0					
ANR	1205090	IdentifierDeclStatement	ut64 cnt = 0 ;	1066:1:26828:26840	1204990	8	True				
ANR	1205091	IdentifierDecl	cnt = 0		1204990	0					
ANR	1205092	IdentifierDeclType	ut64		1204990	0					
ANR	1205093	Identifier	cnt		1204990	1					
ANR	1205094	AssignmentExpression	cnt = 0		1204990	2		=			
ANR	1205095	Identifier	cnt		1204990	0					
ANR	1205096	PrimaryExpression	0		1204990	1					
ANR	1205097	ExpressionStatement	"r_debug_session_set ( dbg , before )"	1070:1:26965:26998	1204990	9	True				
ANR	1205098	CallExpression	"r_debug_session_set ( dbg , before )"		1204990	0					
ANR	1205099	Callee	r_debug_session_set		1204990	0					
ANR	1205100	Identifier	r_debug_session_set		1204990	0					
ANR	1205101	ArgumentList	dbg		1204990	1					
ANR	1205102	Argument	dbg		1204990	0					
ANR	1205103	Identifier	dbg		1204990	0					
ANR	1205104	Argument	before		1204990	1					
ANR	1205105	Identifier	before		1204990	0					
ANR	1205106	ExpressionStatement	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"	1072:1:27002:27059	1204990	10	True				
ANR	1205107	AssignmentExpression	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204990	0		=			
ANR	1205108	Identifier	pc		1204990	0					
ANR	1205109	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204990	1					
ANR	1205110	Callee	r_debug_reg_get		1204990	0					
ANR	1205111	Identifier	r_debug_reg_get		1204990	0					
ANR	1205112	ArgumentList	dbg		1204990	1					
ANR	1205113	Argument	dbg		1204990	0					
ANR	1205114	Identifier	dbg		1204990	0					
ANR	1205115	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1204990	1					
ANR	1205116	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1204990	0					
ANR	1205117	PtrMemberAccess	dbg -> reg -> name		1204990	0					
ANR	1205118	PtrMemberAccess	dbg -> reg		1204990	0					
ANR	1205119	Identifier	dbg		1204990	0					
ANR	1205120	Identifier	reg		1204990	1					
ANR	1205121	Identifier	name		1204990	1					
ANR	1205122	Identifier	R_REG_NAME_PC		1204990	1					
ANR	1205123	ForStatement	for ( ; ; )		1204990	11					
ANR	1205124	CompoundStatement		33:10:776:776	1204990	0					
ANR	1205125	IfStatement	if ( r_debug_is_dead ( dbg ) )		1204990	0					
ANR	1205126	Condition	r_debug_is_dead ( dbg )	1078:6:27217:27237	1204990	0	True				
ANR	1205127	CallExpression	r_debug_is_dead ( dbg )		1204990	0					
ANR	1205128	Callee	r_debug_is_dead		1204990	0					
ANR	1205129	Identifier	r_debug_is_dead		1204990	0					
ANR	1205130	ArgumentList	dbg		1204990	1					
ANR	1205131	Argument	dbg		1204990	0					
ANR	1205132	Identifier	dbg		1204990	0					
ANR	1205133	CompoundStatement		34:29:807:807	1204990	1					
ANR	1205134	ReturnStatement	return false ;	1079:3:27245:27257	1204990	0	True				
ANR	1205135	Identifier	false		1204990	0					
ANR	1205136	ExpressionStatement	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"	1081:2:27265:27322	1204990	1	True				
ANR	1205137	AssignmentExpression	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204990	0		=			
ANR	1205138	Identifier	pc		1204990	0					
ANR	1205139	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204990	1					
ANR	1205140	Callee	r_debug_reg_get		1204990	0					
ANR	1205141	Identifier	r_debug_reg_get		1204990	0					
ANR	1205142	ArgumentList	dbg		1204990	1					
ANR	1205143	Argument	dbg		1204990	0					
ANR	1205144	Identifier	dbg		1204990	0					
ANR	1205145	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1204990	1					
ANR	1205146	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1204990	0					
ANR	1205147	PtrMemberAccess	dbg -> reg -> name		1204990	0					
ANR	1205148	PtrMemberAccess	dbg -> reg		1204990	0					
ANR	1205149	Identifier	dbg		1204990	0					
ANR	1205150	Identifier	reg		1204990	1					
ANR	1205151	Identifier	name		1204990	1					
ANR	1205152	Identifier	R_REG_NAME_PC		1204990	1					
ANR	1205153	IfStatement	if ( pc == end )		1204990	2					
ANR	1205154	Condition	pc == end	1082:6:27330:27338	1204990	0	True				
ANR	1205155	EqualityExpression	pc == end		1204990	0		==			
ANR	1205156	Identifier	pc		1204990	0					
ANR	1205157	Identifier	end		1204990	1					
ANR	1205158	CompoundStatement		38:17:908:908	1204990	1					
ANR	1205159	BreakStatement	break ;	1084:3:27382:27387	1204990	0	True				
ANR	1205160	ExpressionStatement	prev = pc	1086:2:27395:27404	1204990	3	True				
ANR	1205161	AssignmentExpression	prev = pc		1204990	0		=			
ANR	1205162	Identifier	prev		1204990	0					
ANR	1205163	Identifier	pc		1204990	1					
ANR	1205164	IfStatement	if ( cnt > CHECK_POINT_LIMIT )		1204990	4					
ANR	1205165	Condition	cnt > CHECK_POINT_LIMIT	1088:6:27460:27482	1204990	0	True				
ANR	1205166	RelationalExpression	cnt > CHECK_POINT_LIMIT		1204990	0		>			
ANR	1205167	Identifier	cnt		1204990	0					
ANR	1205168	Identifier	CHECK_POINT_LIMIT		1204990	1					
ANR	1205169	CompoundStatement		44:31:1052:1052	1204990	1					
ANR	1205170	ExpressionStatement	"r_debug_session_add ( dbg , NULL )"	1090:3:27536:27567	1204990	0	True				
ANR	1205171	CallExpression	"r_debug_session_add ( dbg , NULL )"		1204990	0					
ANR	1205172	Callee	r_debug_session_add		1204990	0					
ANR	1205173	Identifier	r_debug_session_add		1204990	0					
ANR	1205174	ArgumentList	dbg		1204990	1					
ANR	1205175	Argument	dbg		1204990	0					
ANR	1205176	Identifier	dbg		1204990	0					
ANR	1205177	Argument	NULL		1204990	1					
ANR	1205178	Identifier	NULL		1204990	0					
ANR	1205179	ExpressionStatement	cnt = 0	1091:3:27572:27579	1204990	1	True				
ANR	1205180	AssignmentExpression	cnt = 0		1204990	0		=			
ANR	1205181	Identifier	cnt		1204990	0					
ANR	1205182	PrimaryExpression	0		1204990	1					
ANR	1205183	IfStatement	"if ( ! r_debug_step ( dbg , 1 ) )"		1204990	5					
ANR	1205184	Condition	"! r_debug_step ( dbg , 1 )"	1093:6:27591:27612	1204990	0	True				
ANR	1205185	UnaryOperationExpression	"! r_debug_step ( dbg , 1 )"		1204990	0					
ANR	1205186	UnaryOperator	!		1204990	0					
ANR	1205187	CallExpression	"r_debug_step ( dbg , 1 )"		1204990	1					
ANR	1205188	Callee	r_debug_step		1204990	0					
ANR	1205189	Identifier	r_debug_step		1204990	0					
ANR	1205190	ArgumentList	dbg		1204990	1					
ANR	1205191	Argument	dbg		1204990	0					
ANR	1205192	Identifier	dbg		1204990	0					
ANR	1205193	Argument	1		1204990	1					
ANR	1205194	PrimaryExpression	1		1204990	0					
ANR	1205195	CompoundStatement		49:30:1182:1182	1204990	1					
ANR	1205196	ReturnStatement	return false ;	1094:3:27620:27632	1204990	0	True				
ANR	1205197	Identifier	false		1204990	0					
ANR	1205198	ExpressionStatement	cnt ++	1096:2:27640:27645	1204990	6	True				
ANR	1205199	PostIncDecOperationExpression	cnt ++		1204990	0					
ANR	1205200	Identifier	cnt		1204990	0					
ANR	1205201	IncDec	++		1204990	1					
ANR	1205202	ExpressionStatement	"r_debug_session_set ( dbg , before )"	1100:1:27726:27759	1204990	12	True				
ANR	1205203	CallExpression	"r_debug_session_set ( dbg , before )"		1204990	0					
ANR	1205204	Callee	r_debug_session_set		1204990	0					
ANR	1205205	Identifier	r_debug_session_set		1204990	0					
ANR	1205206	ArgumentList	dbg		1204990	1					
ANR	1205207	Argument	dbg		1204990	0					
ANR	1205208	Identifier	dbg		1204990	0					
ANR	1205209	Argument	before		1204990	1					
ANR	1205210	Identifier	before		1204990	0					
ANR	1205211	ExpressionStatement	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"	1101:1:27762:27819	1204990	13	True				
ANR	1205212	AssignmentExpression	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204990	0		=			
ANR	1205213	Identifier	pc		1204990	0					
ANR	1205214	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1204990	1					
ANR	1205215	Callee	r_debug_reg_get		1204990	0					
ANR	1205216	Identifier	r_debug_reg_get		1204990	0					
ANR	1205217	ArgumentList	dbg		1204990	1					
ANR	1205218	Argument	dbg		1204990	0					
ANR	1205219	Identifier	dbg		1204990	0					
ANR	1205220	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1204990	1					
ANR	1205221	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1204990	0					
ANR	1205222	PtrMemberAccess	dbg -> reg -> name		1204990	0					
ANR	1205223	PtrMemberAccess	dbg -> reg		1204990	0					
ANR	1205224	Identifier	dbg		1204990	0					
ANR	1205225	Identifier	reg		1204990	1					
ANR	1205226	Identifier	name		1204990	1					
ANR	1205227	Identifier	R_REG_NAME_PC		1204990	1					
ANR	1205228	ExpressionStatement	"prev = get_prev_instr ( dbg , pc , end )"	1102:1:27822:27858	1204990	14	True				
ANR	1205229	AssignmentExpression	"prev = get_prev_instr ( dbg , pc , end )"		1204990	0		=			
ANR	1205230	Identifier	prev		1204990	0					
ANR	1205231	CallExpression	"get_prev_instr ( dbg , pc , end )"		1204990	1					
ANR	1205232	Callee	get_prev_instr		1204990	0					
ANR	1205233	Identifier	get_prev_instr		1204990	0					
ANR	1205234	ArgumentList	dbg		1204990	1					
ANR	1205235	Argument	dbg		1204990	0					
ANR	1205236	Identifier	dbg		1204990	0					
ANR	1205237	Argument	pc		1204990	1					
ANR	1205238	Identifier	pc		1204990	0					
ANR	1205239	Argument	end		1204990	2					
ANR	1205240	Identifier	end		1204990	0					
ANR	1205241	IfStatement	if ( prev )		1204990	15					
ANR	1205242	Condition	prev	1103:5:27865:27868	1204990	0	True				
ANR	1205243	Identifier	prev		1204990	0					
ANR	1205244	CompoundStatement		59:11:1438:1438	1204990	1					
ANR	1205245	Statement	eprintf	1104:2:27875:27881	1204990	0	True				
ANR	1205246	Statement	(	1104:10:27883:27883	1204990	1	True				
ANR	1205247	Statement	"""continue until 0x%08"""	1104:11:27884:27905	1204990	2	True				
ANR	1205248	Statement	PFMT64x	1104:33:27906:27912	1204990	3	True				
ANR	1205249	Statement	"""\\n"""	1104:40:27913:27916	1204990	4	True				
ANR	1205250	Statement	","	1104:44:27917:27917	1204990	5	True				
ANR	1205251	Statement	prev	1104:46:27919:27922	1204990	6	True				
ANR	1205252	Statement	)	1104:50:27923:27923	1204990	7	True				
ANR	1205253	ExpressionStatement		1104:51:27924:27924	1204990	8	True				
ANR	1205254	ExpressionStatement	"r_debug_continue_until_nonblock ( dbg , prev )"	1105:2:27928:27971	1204990	9	True				
ANR	1205255	CallExpression	"r_debug_continue_until_nonblock ( dbg , prev )"		1204990	0					
ANR	1205256	Callee	r_debug_continue_until_nonblock		1204990	0					
ANR	1205257	Identifier	r_debug_continue_until_nonblock		1204990	0					
ANR	1205258	ArgumentList	dbg		1204990	1					
ANR	1205259	Argument	dbg		1204990	0					
ANR	1205260	Identifier	dbg		1204990	0					
ANR	1205261	Argument	prev		1204990	1					
ANR	1205262	Identifier	prev		1204990	0					
ANR	1205263	ReturnStatement	return true ;	1107:1:27977:27988	1204990	16	True				
ANR	1205264	Identifier	true		1204990	0					
ANR	1205265	ReturnType	R_API bool		1204990	1					
ANR	1205266	Identifier	r_debug_step_back		1204990	2					
ANR	1205267	ParameterList	RDebug * dbg		1204990	3					
ANR	1205268	Parameter	RDebug * dbg	1045:29:26419:26429	1204990	0	True				
ANR	1205269	ParameterType	RDebug *		1204990	0					
ANR	1205270	Identifier	dbg		1204990	1					
ANR	1205271	CFGEntryNode	ENTRY		1204990		True				
ANR	1205272	CFGExitNode	EXIT		1204990		True				
ANR	1205273	InfiniteForNode	true		1204990		True				
ANR	1205274	Symbol	CHECK_POINT_LIMIT		1204990						
ANR	1205275	Symbol	before		1204990						
ANR	1205276	Symbol	R_REG_NAME_PC		1204990						
ANR	1205277	Symbol	prev		1204990						
ANR	1205278	Symbol	r_debug_reg_get		1204990						
ANR	1205279	Symbol	* dbg -> reg -> name		1204990						
ANR	1205280	Symbol	* dbg -> sessions		1204990						
ANR	1205281	Symbol	dbg -> sessions -> tail		1204990						
ANR	1205282	Symbol	end		1204990						
ANR	1205283	Symbol	* R_REG_NAME_PC		1204990						
ANR	1205284	Symbol	get_prev_instr		1204990						
ANR	1205285	Symbol	r_debug_session_get		1204990						
ANR	1205286	Symbol	NULL		1204990						
ANR	1205287	Symbol	dbg -> anal		1204990						
ANR	1205288	Symbol	dbg -> sessions		1204990						
ANR	1205289	Symbol	* * * dbg		1204990						
ANR	1205290	Symbol	dbg		1204990						
ANR	1205291	Symbol	false		1204990						
ANR	1205292	Symbol	cnt		1204990						
ANR	1205293	Symbol	* dbg		1204990						
ANR	1205294	Symbol	* * dbg -> reg		1204990						
ANR	1205295	Symbol	r_debug_step		1204990						
ANR	1205296	Symbol	* dbg -> reg		1204990						
ANR	1205297	Symbol	r_debug_is_dead		1204990						
ANR	1205298	Symbol	pc		1204990						
ANR	1205299	Symbol	true		1204990						
ANR	1205300	Symbol	r_list_empty		1204990						
ANR	1205301	Symbol	dbg -> reg		1204990						
ANR	1205302	Symbol	* * dbg		1204990						
ANR	1205303	Symbol	dbg -> reg -> name		1204990						
ANR	1205304	Function	r_debug_continue_kill	1110:0:27993:32080							
ANR	1205305	FunctionDef	"r_debug_continue_kill (RDebug * dbg , int sig)"		1205304	0					
ANR	1205306	CompoundStatement		1110:54:28047:32080	1205304	0					
ANR	1205307	IdentifierDeclStatement	"RDebugReasonType reason , ret = false ;"	1111:1:28050:28086	1205304	0	True				
ANR	1205308	IdentifierDecl	reason		1205304	0					
ANR	1205309	IdentifierDeclType	RDebugReasonType		1205304	0					
ANR	1205310	Identifier	reason		1205304	1					
ANR	1205311	IdentifierDecl	ret = false		1205304	1					
ANR	1205312	IdentifierDeclType	RDebugReasonType		1205304	0					
ANR	1205313	Identifier	ret		1205304	1					
ANR	1205314	AssignmentExpression	ret = false		1205304	2		=			
ANR	1205315	Identifier	false		1205304	0					
ANR	1205316	Identifier	false		1205304	1					
ANR	1205317	IdentifierDeclStatement	RBreakpointItem * bp = NULL ;	1112:1:28089:28115	1205304	1	True				
ANR	1205318	IdentifierDecl	* bp = NULL		1205304	0					
ANR	1205319	IdentifierDeclType	RBreakpointItem *		1205304	0					
ANR	1205320	Identifier	bp		1205304	1					
ANR	1205321	AssignmentExpression	* bp = NULL		1205304	2		=			
ANR	1205322	Identifier	NULL		1205304	0					
ANR	1205323	Identifier	NULL		1205304	1					
ANR	1205324	IfStatement	if ( ! dbg )		1205304	2					
ANR	1205325	Condition	! dbg	1114:5:28123:28126	1205304	0	True				
ANR	1205326	UnaryOperationExpression	! dbg		1205304	0					
ANR	1205327	UnaryOperator	!		1205304	0					
ANR	1205328	Identifier	dbg		1205304	1					
ANR	1205329	CompoundStatement		5:11:81:81	1205304	1					
ANR	1205330	ReturnStatement	return false ;	1115:2:28133:28145	1205304	0	True				
ANR	1205331	Identifier	false		1205304	0					
ANR	1205332	ExpressionStatement	"r_cons_break_push ( w32_break_process_wrapper , dbg )"	1118:1:28167:28217	1205304	3	True				
ANR	1205333	CallExpression	"r_cons_break_push ( w32_break_process_wrapper , dbg )"		1205304	0					
ANR	1205334	Callee	r_cons_break_push		1205304	0					
ANR	1205335	Identifier	r_cons_break_push		1205304	0					
ANR	1205336	ArgumentList	w32_break_process_wrapper		1205304	1					
ANR	1205337	Argument	w32_break_process_wrapper		1205304	0					
ANR	1205338	Identifier	w32_break_process_wrapper		1205304	0					
ANR	1205339	Argument	dbg		1205304	1					
ANR	1205340	Identifier	dbg		1205304	0					
ANR	1205341	Label	repeat :	1120:0:28226:28232	1205304	4	True				
ANR	1205342	Identifier	repeat		1205304	0					
ANR	1205343	IfStatement	if ( r_debug_is_dead ( dbg ) )		1205304	5					
ANR	1205344	Condition	r_debug_is_dead ( dbg )	1121:5:28239:28259	1205304	0	True				
ANR	1205345	CallExpression	r_debug_is_dead ( dbg )		1205304	0					
ANR	1205346	Callee	r_debug_is_dead		1205304	0					
ANR	1205347	Identifier	r_debug_is_dead		1205304	0					
ANR	1205348	ArgumentList	dbg		1205304	1					
ANR	1205349	Argument	dbg		1205304	0					
ANR	1205350	Identifier	dbg		1205304	0					
ANR	1205351	CompoundStatement		12:28:214:214	1205304	1					
ANR	1205352	ReturnStatement	return false ;	1122:2:28266:28278	1205304	0	True				
ANR	1205353	Identifier	false		1205304	0					
ANR	1205354	IfStatement	if ( dbg -> h && dbg -> h -> cont )		1205304	6					
ANR	1205355	Condition	dbg -> h && dbg -> h -> cont	1124:5:28288:28309	1205304	0	True				
ANR	1205356	AndExpression	dbg -> h && dbg -> h -> cont		1205304	0		&&			
ANR	1205357	PtrMemberAccess	dbg -> h		1205304	0					
ANR	1205358	Identifier	dbg		1205304	0					
ANR	1205359	Identifier	h		1205304	1					
ANR	1205360	PtrMemberAccess	dbg -> h -> cont		1205304	1					
ANR	1205361	PtrMemberAccess	dbg -> h		1205304	0					
ANR	1205362	Identifier	dbg		1205304	0					
ANR	1205363	Identifier	h		1205304	1					
ANR	1205364	Identifier	cont		1205304	1					
ANR	1205365	CompoundStatement		15:29:264:264	1205304	1					
ANR	1205366	IfStatement	"if ( ! r_debug_recoil ( dbg , R_DBG_RECOIL_CONTINUE ) )"		1205304	0					
ANR	1205367	Condition	"! r_debug_recoil ( dbg , R_DBG_RECOIL_CONTINUE )"	1126:6:28362:28405	1205304	0	True				
ANR	1205368	UnaryOperationExpression	"! r_debug_recoil ( dbg , R_DBG_RECOIL_CONTINUE )"		1205304	0					
ANR	1205369	UnaryOperator	!		1205304	0					
ANR	1205370	CallExpression	"r_debug_recoil ( dbg , R_DBG_RECOIL_CONTINUE )"		1205304	1					
ANR	1205371	Callee	r_debug_recoil		1205304	0					
ANR	1205372	Identifier	r_debug_recoil		1205304	0					
ANR	1205373	ArgumentList	dbg		1205304	1					
ANR	1205374	Argument	dbg		1205304	0					
ANR	1205375	Identifier	dbg		1205304	0					
ANR	1205376	Argument	R_DBG_RECOIL_CONTINUE		1205304	1					
ANR	1205377	Identifier	R_DBG_RECOIL_CONTINUE		1205304	0					
ANR	1205378	CompoundStatement		17:52:360:360	1205304	1					
ANR	1205379	ExpressionStatement	r_cons_break_pop ( )	1128:3:28429:28448	1205304	0	True				
ANR	1205380	CallExpression	r_cons_break_pop ( )		1205304	0					
ANR	1205381	Callee	r_cons_break_pop		1205304	0					
ANR	1205382	Identifier	r_cons_break_pop		1205304	0					
ANR	1205383	ArgumentList			1205304	1					
ANR	1205384	ReturnStatement	return false ;	1130:3:28460:28472	1205304	1	True				
ANR	1205385	Identifier	false		1205304	0					
ANR	1205386	ExpressionStatement	"ret = dbg -> h -> cont ( dbg , dbg -> pid , dbg -> tid , sig )"	1133:2:28513:28562	1205304	1	True				
ANR	1205387	AssignmentExpression	"ret = dbg -> h -> cont ( dbg , dbg -> pid , dbg -> tid , sig )"		1205304	0		=			
ANR	1205388	Identifier	ret		1205304	0					
ANR	1205389	CallExpression	"dbg -> h -> cont ( dbg , dbg -> pid , dbg -> tid , sig )"		1205304	1					
ANR	1205390	Callee	dbg -> h -> cont		1205304	0					
ANR	1205391	PtrMemberAccess	dbg -> h -> cont		1205304	0					
ANR	1205392	PtrMemberAccess	dbg -> h		1205304	0					
ANR	1205393	Identifier	dbg		1205304	0					
ANR	1205394	Identifier	h		1205304	1					
ANR	1205395	Identifier	cont		1205304	1					
ANR	1205396	ArgumentList	dbg		1205304	1					
ANR	1205397	Argument	dbg		1205304	0					
ANR	1205398	Identifier	dbg		1205304	0					
ANR	1205399	Argument	dbg -> pid		1205304	1					
ANR	1205400	PtrMemberAccess	dbg -> pid		1205304	0					
ANR	1205401	Identifier	dbg		1205304	0					
ANR	1205402	Identifier	pid		1205304	1					
ANR	1205403	Argument	dbg -> tid		1205304	2					
ANR	1205404	PtrMemberAccess	dbg -> tid		1205304	0					
ANR	1205405	Identifier	dbg		1205304	0					
ANR	1205406	Identifier	tid		1205304	1					
ANR	1205407	Argument	sig		1205304	3					
ANR	1205408	Identifier	sig		1205304	0					
ANR	1205409	ExpressionStatement	"reason = r_debug_wait ( dbg , & bp )"	1136:2:28612:28644	1205304	2	True				
ANR	1205410	AssignmentExpression	"reason = r_debug_wait ( dbg , & bp )"		1205304	0		=			
ANR	1205411	Identifier	reason		1205304	0					
ANR	1205412	CallExpression	"r_debug_wait ( dbg , & bp )"		1205304	1					
ANR	1205413	Callee	r_debug_wait		1205304	0					
ANR	1205414	Identifier	r_debug_wait		1205304	0					
ANR	1205415	ArgumentList	dbg		1205304	1					
ANR	1205416	Argument	dbg		1205304	0					
ANR	1205417	Identifier	dbg		1205304	0					
ANR	1205418	Argument	& bp		1205304	1					
ANR	1205419	UnaryOperationExpression	& bp		1205304	0					
ANR	1205420	UnaryOperator	&		1205304	0					
ANR	1205421	Identifier	bp		1205304	1					
ANR	1205422	IfStatement	if ( dbg -> corebind . core )		1205304	3					
ANR	1205423	Condition	dbg -> corebind . core	1137:6:28652:28669	1205304	0	True				
ANR	1205424	MemberAccess	dbg -> corebind . core		1205304	0					
ANR	1205425	PtrMemberAccess	dbg -> corebind		1205304	0					
ANR	1205426	Identifier	dbg		1205304	0					
ANR	1205427	Identifier	corebind		1205304	1					
ANR	1205428	Identifier	core		1205304	1					
ANR	1205429	CompoundStatement		30:3:675:696	1205304	1					
ANR	1205430	IdentifierDeclStatement	RCore * core = ( RCore * ) dbg -> corebind . core ;	1138:3:28677:28718	1205304	0	True				
ANR	1205431	IdentifierDecl	* core = ( RCore * ) dbg -> corebind . core		1205304	0					
ANR	1205432	IdentifierDeclType	RCore *		1205304	0					
ANR	1205433	Identifier	core		1205304	1					
ANR	1205434	AssignmentExpression	* core = ( RCore * ) dbg -> corebind . core		1205304	2		=			
ANR	1205435	Identifier	core		1205304	0					
ANR	1205436	CastExpression	( RCore * ) dbg -> corebind . core		1205304	1					
ANR	1205437	CastTarget	RCore *		1205304	0					
ANR	1205438	MemberAccess	dbg -> corebind . core		1205304	1					
ANR	1205439	PtrMemberAccess	dbg -> corebind		1205304	0					
ANR	1205440	Identifier	dbg		1205304	0					
ANR	1205441	Identifier	corebind		1205304	1					
ANR	1205442	Identifier	core		1205304	1					
ANR	1205443	IdentifierDeclStatement	RNum * num = core -> num ;	1139:3:28723:28744	1205304	1	True				
ANR	1205444	IdentifierDecl	* num = core -> num		1205304	0					
ANR	1205445	IdentifierDeclType	RNum *		1205304	0					
ANR	1205446	Identifier	num		1205304	1					
ANR	1205447	AssignmentExpression	* num = core -> num		1205304	2		=			
ANR	1205448	Identifier	num		1205304	0					
ANR	1205449	PtrMemberAccess	core -> num		1205304	1					
ANR	1205450	Identifier	core		1205304	0					
ANR	1205451	Identifier	num		1205304	1					
ANR	1205452	IfStatement	if ( reason == R_DEBUG_REASON_COND )		1205304	2					
ANR	1205453	Condition	reason == R_DEBUG_REASON_COND	1140:7:28753:28781	1205304	0	True				
ANR	1205454	EqualityExpression	reason == R_DEBUG_REASON_COND		1205304	0		==			
ANR	1205455	Identifier	reason		1205304	0					
ANR	1205456	Identifier	R_DEBUG_REASON_COND		1205304	1					
ANR	1205457	CompoundStatement		31:38:736:736	1205304	1					
ANR	1205458	IfStatement	if ( bp && bp -> cond && dbg -> corebind . cmd )		1205304	0					
ANR	1205459	Condition	bp && bp -> cond && dbg -> corebind . cmd	1141:8:28794:28828	1205304	0	True				
ANR	1205460	AndExpression	bp && bp -> cond && dbg -> corebind . cmd		1205304	0		&&			
ANR	1205461	Identifier	bp		1205304	0					
ANR	1205462	AndExpression	bp -> cond && dbg -> corebind . cmd		1205304	1		&&			
ANR	1205463	PtrMemberAccess	bp -> cond		1205304	0					
ANR	1205464	Identifier	bp		1205304	0					
ANR	1205465	Identifier	cond		1205304	1					
ANR	1205466	MemberAccess	dbg -> corebind . cmd		1205304	1					
ANR	1205467	PtrMemberAccess	dbg -> corebind		1205304	0					
ANR	1205468	Identifier	dbg		1205304	0					
ANR	1205469	Identifier	corebind		1205304	1					
ANR	1205470	Identifier	cmd		1205304	1					
ANR	1205471	CompoundStatement		32:45:783:783	1205304	1					
ANR	1205472	ExpressionStatement	"dbg -> corebind . cmd ( dbg -> corebind . core , bp -> cond )"	1142:5:28838:28886	1205304	0	True				
ANR	1205473	CallExpression	"dbg -> corebind . cmd ( dbg -> corebind . core , bp -> cond )"		1205304	0					
ANR	1205474	Callee	dbg -> corebind . cmd		1205304	0					
ANR	1205475	MemberAccess	dbg -> corebind . cmd		1205304	0					
ANR	1205476	PtrMemberAccess	dbg -> corebind		1205304	0					
ANR	1205477	Identifier	dbg		1205304	0					
ANR	1205478	Identifier	corebind		1205304	1					
ANR	1205479	Identifier	cmd		1205304	1					
ANR	1205480	ArgumentList	dbg -> corebind . core		1205304	1					
ANR	1205481	Argument	dbg -> corebind . core		1205304	0					
ANR	1205482	MemberAccess	dbg -> corebind . core		1205304	0					
ANR	1205483	PtrMemberAccess	dbg -> corebind		1205304	0					
ANR	1205484	Identifier	dbg		1205304	0					
ANR	1205485	Identifier	corebind		1205304	1					
ANR	1205486	Identifier	core		1205304	1					
ANR	1205487	Argument	bp -> cond		1205304	1					
ANR	1205488	PtrMemberAccess	bp -> cond		1205304	0					
ANR	1205489	Identifier	bp		1205304	0					
ANR	1205490	Identifier	cond		1205304	1					
ANR	1205491	IfStatement	if ( num -> value )		1205304	1					
ANR	1205492	Condition	num -> value	1144:8:28902:28911	1205304	0	True				
ANR	1205493	PtrMemberAccess	num -> value		1205304	0					
ANR	1205494	Identifier	num		1205304	0					
ANR	1205495	Identifier	value		1205304	1					
ANR	1205496	CompoundStatement		35:20:866:866	1205304	1					
ANR	1205497	GotoStatement	goto repeat ;	1145:5:28921:28932	1205304	0	True				
ANR	1205498	Identifier	repeat		1205304	0					
ANR	1205499	IfStatement	"if ( reason == R_DEBUG_REASON_BREAKPOINT && ( ( bp && ! bp -> enabled ) || ( ! bp && ! r_cons_is_breaked ( ) && dbg -> corebind . core && dbg -> corebind . cfggeti ( dbg -> corebind . core , ""dbg.bpsysign"" ) ) ) )"		1205304	4					
ANR	1205500	Condition	"reason == R_DEBUG_REASON_BREAKPOINT && ( ( bp && ! bp -> enabled ) || ( ! bp && ! r_cons_is_breaked ( ) && dbg -> corebind . core && dbg -> corebind . cfggeti ( dbg -> corebind . core , ""dbg.bpsysign"" ) ) )"	1149:6:28955:29150	1205304	0	True				
ANR	1205501	AndExpression	"reason == R_DEBUG_REASON_BREAKPOINT && ( ( bp && ! bp -> enabled ) || ( ! bp && ! r_cons_is_breaked ( ) && dbg -> corebind . core && dbg -> corebind . cfggeti ( dbg -> corebind . core , ""dbg.bpsysign"" ) ) )"		1205304	0		&&			
ANR	1205502	EqualityExpression	reason == R_DEBUG_REASON_BREAKPOINT		1205304	0		==			
ANR	1205503	Identifier	reason		1205304	0					
ANR	1205504	Identifier	R_DEBUG_REASON_BREAKPOINT		1205304	1					
ANR	1205505	OrExpression	"( bp && ! bp -> enabled ) || ( ! bp && ! r_cons_is_breaked ( ) && dbg -> corebind . core && dbg -> corebind . cfggeti ( dbg -> corebind . core , ""dbg.bpsysign"" ) )"		1205304	1		||			
ANR	1205506	AndExpression	bp && ! bp -> enabled		1205304	0		&&			
ANR	1205507	Identifier	bp		1205304	0					
ANR	1205508	UnaryOperationExpression	! bp -> enabled		1205304	1					
ANR	1205509	UnaryOperator	!		1205304	0					
ANR	1205510	PtrMemberAccess	bp -> enabled		1205304	1					
ANR	1205511	Identifier	bp		1205304	0					
ANR	1205512	Identifier	enabled		1205304	1					
ANR	1205513	AndExpression	"! bp && ! r_cons_is_breaked ( ) && dbg -> corebind . core && dbg -> corebind . cfggeti ( dbg -> corebind . core , ""dbg.bpsysign"" )"		1205304	1		&&			
ANR	1205514	UnaryOperationExpression	! bp		1205304	0					
ANR	1205515	UnaryOperator	!		1205304	0					
ANR	1205516	Identifier	bp		1205304	1					
ANR	1205517	AndExpression	"! r_cons_is_breaked ( ) && dbg -> corebind . core && dbg -> corebind . cfggeti ( dbg -> corebind . core , ""dbg.bpsysign"" )"		1205304	1		&&			
ANR	1205518	UnaryOperationExpression	! r_cons_is_breaked ( )		1205304	0					
ANR	1205519	UnaryOperator	!		1205304	0					
ANR	1205520	CallExpression	r_cons_is_breaked ( )		1205304	1					
ANR	1205521	Callee	r_cons_is_breaked		1205304	0					
ANR	1205522	Identifier	r_cons_is_breaked		1205304	0					
ANR	1205523	ArgumentList			1205304	1					
ANR	1205524	AndExpression	"dbg -> corebind . core && dbg -> corebind . cfggeti ( dbg -> corebind . core , ""dbg.bpsysign"" )"		1205304	1		&&			
ANR	1205525	MemberAccess	dbg -> corebind . core		1205304	0					
ANR	1205526	PtrMemberAccess	dbg -> corebind		1205304	0					
ANR	1205527	Identifier	dbg		1205304	0					
ANR	1205528	Identifier	corebind		1205304	1					
ANR	1205529	Identifier	core		1205304	1					
ANR	1205530	CallExpression	"dbg -> corebind . cfggeti ( dbg -> corebind . core , ""dbg.bpsysign"" )"		1205304	1					
ANR	1205531	Callee	dbg -> corebind . cfggeti		1205304	0					
ANR	1205532	MemberAccess	dbg -> corebind . cfggeti		1205304	0					
ANR	1205533	PtrMemberAccess	dbg -> corebind		1205304	0					
ANR	1205534	Identifier	dbg		1205304	0					
ANR	1205535	Identifier	corebind		1205304	1					
ANR	1205536	Identifier	cfggeti		1205304	1					
ANR	1205537	ArgumentList	dbg -> corebind . core		1205304	1					
ANR	1205538	Argument	dbg -> corebind . core		1205304	0					
ANR	1205539	MemberAccess	dbg -> corebind . core		1205304	0					
ANR	1205540	PtrMemberAccess	dbg -> corebind		1205304	0					
ANR	1205541	Identifier	dbg		1205304	0					
ANR	1205542	Identifier	corebind		1205304	1					
ANR	1205543	Identifier	core		1205304	1					
ANR	1205544	Argument	"""dbg.bpsysign"""		1205304	1					
ANR	1205545	PrimaryExpression	"""dbg.bpsysign"""		1205304	0					
ANR	1205546	CompoundStatement		42:74:1105:1105	1205304	1					
ANR	1205547	GotoStatement	goto repeat ;	1152:3:29158:29169	1205304	0	True				
ANR	1205548	Identifier	repeat		1205304	0					
ANR	1205549	IfStatement	if ( reason == R_DEBUG_REASON_NEW_PID && dbg -> follow_child )		1205304	5					
ANR	1205550	Condition	reason == R_DEBUG_REASON_NEW_PID && dbg -> follow_child	1156:6:29196:29248	1205304	0	True				
ANR	1205551	AndExpression	reason == R_DEBUG_REASON_NEW_PID && dbg -> follow_child		1205304	0		&&			
ANR	1205552	EqualityExpression	reason == R_DEBUG_REASON_NEW_PID		1205304	0		==			
ANR	1205553	Identifier	reason		1205304	0					
ANR	1205554	Identifier	R_DEBUG_REASON_NEW_PID		1205304	1					
ANR	1205555	PtrMemberAccess	dbg -> follow_child		1205304	1					
ANR	1205556	Identifier	dbg		1205304	0					
ANR	1205557	Identifier	follow_child		1205304	1					
ANR	1205558	CompoundStatement		51:10:1340:1393	1205304	1					
ANR	1205559	Statement	static	1160:3:29381:29386	1205304	0	True				
ANR	1205560	IdentifierDeclStatement	void ( * linux_attach_new_process ) ( RDebug * dbg ) = NULL ;	1160:10:29388:29441	1205304	1	True				
ANR	1205561	IdentifierDecl	( * linux_attach_new_process ) ( RDebug * dbg ) = NULL		1205304	0					
ANR	1205562	IdentifierDeclType	void ( * ) ( RDebug * dbg )		1205304	0					
ANR	1205563	Identifier	linux_attach_new_process		1205304	1					
ANR	1205564	Identifier	dbg		1205304	2					
ANR	1205565	AssignmentExpression	( * linux_attach_new_process ) ( RDebug * dbg ) = NULL		1205304	3		=			
ANR	1205566	Identifier	NULL		1205304	0					
ANR	1205567	Identifier	NULL		1205304	1					
ANR	1205568	IfStatement	if ( ! linux_attach_new_process )		1205304	2					
ANR	1205569	Condition	! linux_attach_new_process	1161:7:29450:29474	1205304	0	True				
ANR	1205570	UnaryOperationExpression	! linux_attach_new_process		1205304	0					
ANR	1205571	UnaryOperator	!		1205304	0					
ANR	1205572	Identifier	linux_attach_new_process		1205304	1					
ANR	1205573	CompoundStatement		52:34:1429:1429	1205304	1					
ANR	1205574	ExpressionStatement	"linux_attach_new_process = r_lib_dl_sym ( NULL , ""linux_attach_new_process"" )"	1162:4:29483:29557	1205304	0	True				
ANR	1205575	AssignmentExpression	"linux_attach_new_process = r_lib_dl_sym ( NULL , ""linux_attach_new_process"" )"		1205304	0		=			
ANR	1205576	Identifier	linux_attach_new_process		1205304	0					
ANR	1205577	CallExpression	"r_lib_dl_sym ( NULL , ""linux_attach_new_process"" )"		1205304	1					
ANR	1205578	Callee	r_lib_dl_sym		1205304	0					
ANR	1205579	Identifier	r_lib_dl_sym		1205304	0					
ANR	1205580	ArgumentList	NULL		1205304	1					
ANR	1205581	Argument	NULL		1205304	0					
ANR	1205582	Identifier	NULL		1205304	0					
ANR	1205583	Argument	"""linux_attach_new_process"""		1205304	1					
ANR	1205584	PrimaryExpression	"""linux_attach_new_process"""		1205304	0					
ANR	1205585	IfStatement	if ( linux_attach_new_process )		1205304	3					
ANR	1205586	Condition	linux_attach_new_process	1164:7:29571:29594	1205304	0	True				
ANR	1205587	Identifier	linux_attach_new_process		1205304	0					
ANR	1205588	CompoundStatement		55:33:1549:1549	1205304	1					
ANR	1205589	ExpressionStatement	linux_attach_new_process ( dbg )	1165:4:29603:29633	1205304	0	True				
ANR	1205590	CallExpression	linux_attach_new_process ( dbg )		1205304	0					
ANR	1205591	Callee	linux_attach_new_process		1205304	0					
ANR	1205592	Identifier	linux_attach_new_process		1205304	0					
ANR	1205593	ArgumentList	dbg		1205304	1					
ANR	1205594	Argument	dbg		1205304	0					
ANR	1205595	Identifier	dbg		1205304	0					
ANR	1205596	GotoStatement	goto repeat ;	1168:3:29650:29661	1205304	4	True				
ANR	1205597	Identifier	repeat		1205304	0					
ANR	1205598	IfStatement	if ( reason == R_DEBUG_REASON_NEW_TID )		1205304	6					
ANR	1205599	Condition	reason == R_DEBUG_REASON_NEW_TID	1171:6:29674:29705	1205304	0	True				
ANR	1205600	EqualityExpression	reason == R_DEBUG_REASON_NEW_TID		1205304	0		==			
ANR	1205601	Identifier	reason		1205304	0					
ANR	1205602	Identifier	R_DEBUG_REASON_NEW_TID		1205304	1					
ANR	1205603	CompoundStatement		62:40:1660:1660	1205304	1					
ANR	1205604	ExpressionStatement	ret = dbg -> tid	1172:3:29713:29727	1205304	0	True				
ANR	1205605	AssignmentExpression	ret = dbg -> tid		1205304	0		=			
ANR	1205606	Identifier	ret		1205304	0					
ANR	1205607	PtrMemberAccess	dbg -> tid		1205304	1					
ANR	1205608	Identifier	dbg		1205304	0					
ANR	1205609	Identifier	tid		1205304	1					
ANR	1205610	IfStatement	if ( ! dbg -> trace_clone )		1205304	1					
ANR	1205611	Condition	! dbg -> trace_clone	1173:7:29736:29752	1205304	0	True				
ANR	1205612	UnaryOperationExpression	! dbg -> trace_clone		1205304	0					
ANR	1205613	UnaryOperator	!		1205304	0					
ANR	1205614	PtrMemberAccess	dbg -> trace_clone		1205304	1					
ANR	1205615	Identifier	dbg		1205304	0					
ANR	1205616	Identifier	trace_clone		1205304	1					
ANR	1205617	CompoundStatement		64:26:1707:1707	1205304	1					
ANR	1205618	GotoStatement	goto repeat ;	1174:4:29761:29772	1205304	0	True				
ANR	1205619	Identifier	repeat		1205304	0					
ANR	1205620	IfStatement	if ( reason == R_DEBUG_REASON_EXIT_TID )		1205304	7					
ANR	1205621	Condition	reason == R_DEBUG_REASON_EXIT_TID	1178:6:29790:29822	1205304	0	True				
ANR	1205622	EqualityExpression	reason == R_DEBUG_REASON_EXIT_TID		1205304	0		==			
ANR	1205623	Identifier	reason		1205304	0					
ANR	1205624	Identifier	R_DEBUG_REASON_EXIT_TID		1205304	1					
ANR	1205625	CompoundStatement		69:41:1777:1777	1205304	1					
ANR	1205626	GotoStatement	goto repeat ;	1179:3:29830:29841	1205304	0	True				
ANR	1205627	Identifier	repeat		1205304	0					
ANR	1205628	IfStatement	if ( reason != R_DEBUG_REASON_DEAD )		1205304	8					
ANR	1205629	Condition	reason != R_DEBUG_REASON_DEAD	1183:6:29876:29904	1205304	0	True				
ANR	1205630	EqualityExpression	reason != R_DEBUG_REASON_DEAD		1205304	0		!=			
ANR	1205631	Identifier	reason		1205304	0					
ANR	1205632	Identifier	R_DEBUG_REASON_DEAD		1205304	1					
ANR	1205633	CompoundStatement		74:37:1859:1859	1205304	1					
ANR	1205634	ExpressionStatement	ret = dbg -> tid	1185:3:29952:29966	1205304	0	True				
ANR	1205635	AssignmentExpression	ret = dbg -> tid		1205304	0		=			
ANR	1205636	Identifier	ret		1205304	0					
ANR	1205637	PtrMemberAccess	dbg -> tid		1205304	1					
ANR	1205638	Identifier	dbg		1205304	0					
ANR	1205639	Identifier	tid		1205304	1					
ANR	1205640	IfStatement	if ( reason == R_DEBUG_REASON_NEW_LIB || reason == R_DEBUG_REASON_EXIT_LIB || reason == R_DEBUG_REASON_NEW_TID || reason == R_DEBUG_REASON_EXIT_TID )		1205304	9					
ANR	1205641	Condition	reason == R_DEBUG_REASON_NEW_LIB || reason == R_DEBUG_REASON_EXIT_LIB || reason == R_DEBUG_REASON_NEW_TID || reason == R_DEBUG_REASON_EXIT_TID	1187:6:29978:30128	1205304	0	True				
ANR	1205642	OrExpression	reason == R_DEBUG_REASON_NEW_LIB || reason == R_DEBUG_REASON_EXIT_LIB || reason == R_DEBUG_REASON_NEW_TID || reason == R_DEBUG_REASON_EXIT_TID		1205304	0		||			
ANR	1205643	EqualityExpression	reason == R_DEBUG_REASON_NEW_LIB		1205304	0		==			
ANR	1205644	Identifier	reason		1205304	0					
ANR	1205645	Identifier	R_DEBUG_REASON_NEW_LIB		1205304	1					
ANR	1205646	OrExpression	reason == R_DEBUG_REASON_EXIT_LIB || reason == R_DEBUG_REASON_NEW_TID || reason == R_DEBUG_REASON_EXIT_TID		1205304	1		||			
ANR	1205647	EqualityExpression	reason == R_DEBUG_REASON_EXIT_LIB		1205304	0		==			
ANR	1205648	Identifier	reason		1205304	0					
ANR	1205649	Identifier	R_DEBUG_REASON_EXIT_LIB		1205304	1					
ANR	1205650	OrExpression	reason == R_DEBUG_REASON_NEW_TID || reason == R_DEBUG_REASON_EXIT_TID		1205304	1		||			
ANR	1205651	EqualityExpression	reason == R_DEBUG_REASON_NEW_TID		1205304	0		==			
ANR	1205652	Identifier	reason		1205304	0					
ANR	1205653	Identifier	R_DEBUG_REASON_NEW_TID		1205304	1					
ANR	1205654	EqualityExpression	reason == R_DEBUG_REASON_EXIT_TID		1205304	1		==			
ANR	1205655	Identifier	reason		1205304	0					
ANR	1205656	Identifier	R_DEBUG_REASON_EXIT_TID		1205304	1					
ANR	1205657	CompoundStatement		81:39:2084:2084	1205304	1					
ANR	1205658	GotoStatement	goto repeat ;	1191:3:30137:30148	1205304	0	True				
ANR	1205659	Identifier	repeat		1205304	0					
ANR	1205660	IfStatement	if ( reason == R_DEBUG_REASON_EXIT_PID )		1205304	10					
ANR	1205661	Condition	reason == R_DEBUG_REASON_EXIT_PID	1194:6:30167:30199	1205304	0	True				
ANR	1205662	EqualityExpression	reason == R_DEBUG_REASON_EXIT_PID		1205304	0		==			
ANR	1205663	Identifier	reason		1205304	0					
ANR	1205664	Identifier	R_DEBUG_REASON_EXIT_PID		1205304	1					
ANR	1205665	CompoundStatement		85:41:2154:2154	1205304	1					
ANR	1205666	ExpressionStatement	dbg -> pid = - 1	1196:3:30223:30236	1205304	0	True				
ANR	1205667	AssignmentExpression	dbg -> pid = - 1		1205304	0		=			
ANR	1205668	PtrMemberAccess	dbg -> pid		1205304	0					
ANR	1205669	Identifier	dbg		1205304	0					
ANR	1205670	Identifier	pid		1205304	1					
ANR	1205671	UnaryOperationExpression	- 1		1205304	1					
ANR	1205672	UnaryOperator	-		1205304	0					
ANR	1205673	PrimaryExpression	1		1205304	1					
ANR	1205674	IfStatement	if ( reason == R_DEBUG_REASON_DEAD || r_debug_is_dead ( dbg ) )		1205304	11					
ANR	1205675	Condition	reason == R_DEBUG_REASON_DEAD || r_debug_is_dead ( dbg )	1205:6:30464:30517	1205304	0	True				
ANR	1205676	OrExpression	reason == R_DEBUG_REASON_DEAD || r_debug_is_dead ( dbg )		1205304	0		||			
ANR	1205677	EqualityExpression	reason == R_DEBUG_REASON_DEAD		1205304	0		==			
ANR	1205678	Identifier	reason		1205304	0					
ANR	1205679	Identifier	R_DEBUG_REASON_DEAD		1205304	1					
ANR	1205680	CallExpression	r_debug_is_dead ( dbg )		1205304	1					
ANR	1205681	Callee	r_debug_is_dead		1205304	0					
ANR	1205682	Identifier	r_debug_is_dead		1205304	0					
ANR	1205683	ArgumentList	dbg		1205304	1					
ANR	1205684	Argument	dbg		1205304	0					
ANR	1205685	Identifier	dbg		1205304	0					
ANR	1205686	CompoundStatement		96:62:2472:2472	1205304	1					
ANR	1205687	ExpressionStatement	r_cons_break_pop ( )	1207:3:30541:30560	1205304	0	True				
ANR	1205688	CallExpression	r_cons_break_pop ( )		1205304	0					
ANR	1205689	Callee	r_cons_break_pop		1205304	0					
ANR	1205690	Identifier	r_cons_break_pop		1205304	0					
ANR	1205691	ArgumentList			1205304	1					
ANR	1205692	ReturnStatement	return false ;	1209:3:30572:30584	1205304	1	True				
ANR	1205693	Identifier	false		1205304	0					
ANR	1205694	IfStatement	if ( reason == R_DEBUG_REASON_TRACEPOINT )		1205304	12					
ANR	1205695	Condition	reason == R_DEBUG_REASON_TRACEPOINT	1214:6:30697:30731	1205304	0	True				
ANR	1205696	EqualityExpression	reason == R_DEBUG_REASON_TRACEPOINT		1205304	0		==			
ANR	1205697	Identifier	reason		1205304	0					
ANR	1205698	Identifier	R_DEBUG_REASON_TRACEPOINT		1205304	1					
ANR	1205699	CompoundStatement		105:43:2686:2686	1205304	1					
ANR	1205700	ExpressionStatement	"r_debug_step ( dbg , 1 )"	1215:3:30739:30760	1205304	0	True				
ANR	1205701	CallExpression	"r_debug_step ( dbg , 1 )"		1205304	0					
ANR	1205702	Callee	r_debug_step		1205304	0					
ANR	1205703	Identifier	r_debug_step		1205304	0					
ANR	1205704	ArgumentList	dbg		1205304	1					
ANR	1205705	Argument	dbg		1205304	0					
ANR	1205706	Identifier	dbg		1205304	0					
ANR	1205707	Argument	1		1205304	1					
ANR	1205708	PrimaryExpression	1		1205304	0					
ANR	1205709	GotoStatement	goto repeat ;	1216:3:30765:30776	1205304	1	True				
ANR	1205710	Identifier	repeat		1205304	0					
ANR	1205711	ExpressionStatement	"r_debug_select ( dbg , dbg -> pid , ret )"	1221:2:30913:30948	1205304	13	True				
ANR	1205712	CallExpression	"r_debug_select ( dbg , dbg -> pid , ret )"		1205304	0					
ANR	1205713	Callee	r_debug_select		1205304	0					
ANR	1205714	Identifier	r_debug_select		1205304	0					
ANR	1205715	ArgumentList	dbg		1205304	1					
ANR	1205716	Argument	dbg		1205304	0					
ANR	1205717	Identifier	dbg		1205304	0					
ANR	1205718	Argument	dbg -> pid		1205304	1					
ANR	1205719	PtrMemberAccess	dbg -> pid		1205304	0					
ANR	1205720	Identifier	dbg		1205304	0					
ANR	1205721	Identifier	pid		1205304	1					
ANR	1205722	Argument	ret		1205304	2					
ANR	1205723	Identifier	ret		1205304	0					
ANR	1205724	ExpressionStatement	sig = 0	1222:2:30952:30959	1205304	14	True				
ANR	1205725	AssignmentExpression	sig = 0		1205304	0		=			
ANR	1205726	Identifier	sig		1205304	0					
ANR	1205727	PrimaryExpression	0		1205304	1					
ANR	1205728	IfStatement	if ( dbg -> reason . signum != - 1 )		1205304	15					
ANR	1205729	Condition	dbg -> reason . signum != - 1	1226:6:31097:31120	1205304	0	True				
ANR	1205730	EqualityExpression	dbg -> reason . signum != - 1		1205304	0		!=			
ANR	1205731	MemberAccess	dbg -> reason . signum		1205304	0					
ANR	1205732	PtrMemberAccess	dbg -> reason		1205304	0					
ANR	1205733	Identifier	dbg		1205304	0					
ANR	1205734	Identifier	reason		1205304	1					
ANR	1205735	Identifier	signum		1205304	1					
ANR	1205736	UnaryOperationExpression	- 1		1205304	1					
ANR	1205737	UnaryOperator	-		1205304	0					
ANR	1205738	PrimaryExpression	1		1205304	1					
ANR	1205739	CompoundStatement		118:3:3080:3136	1205304	1					
ANR	1205740	IdentifierDeclStatement	"int what = r_debug_signal_what ( dbg , dbg -> reason . signum ) ;"	1227:3:31128:31184	1205304	0	True				
ANR	1205741	IdentifierDecl	"what = r_debug_signal_what ( dbg , dbg -> reason . signum )"		1205304	0					
ANR	1205742	IdentifierDeclType	int		1205304	0					
ANR	1205743	Identifier	what		1205304	1					
ANR	1205744	AssignmentExpression	"what = r_debug_signal_what ( dbg , dbg -> reason . signum )"		1205304	2		=			
ANR	1205745	Identifier	what		1205304	0					
ANR	1205746	CallExpression	"r_debug_signal_what ( dbg , dbg -> reason . signum )"		1205304	1					
ANR	1205747	Callee	r_debug_signal_what		1205304	0					
ANR	1205748	Identifier	r_debug_signal_what		1205304	0					
ANR	1205749	ArgumentList	dbg		1205304	1					
ANR	1205750	Argument	dbg		1205304	0					
ANR	1205751	Identifier	dbg		1205304	0					
ANR	1205752	Argument	dbg -> reason . signum		1205304	1					
ANR	1205753	MemberAccess	dbg -> reason . signum		1205304	0					
ANR	1205754	PtrMemberAccess	dbg -> reason		1205304	0					
ANR	1205755	Identifier	dbg		1205304	0					
ANR	1205756	Identifier	reason		1205304	1					
ANR	1205757	Identifier	signum		1205304	1					
ANR	1205758	IfStatement	if ( what & R_DBG_SIGNAL_CONT )		1205304	1					
ANR	1205759	Condition	what & R_DBG_SIGNAL_CONT	1228:7:31193:31216	1205304	0	True				
ANR	1205760	BitAndExpression	what & R_DBG_SIGNAL_CONT		1205304	0		&			
ANR	1205761	Identifier	what		1205304	0					
ANR	1205762	Identifier	R_DBG_SIGNAL_CONT		1205304	1					
ANR	1205763	CompoundStatement		119:33:3171:3171	1205304	1					
ANR	1205764	ExpressionStatement	sig = dbg -> reason . signum	1229:4:31225:31249	1205304	0	True				
ANR	1205765	AssignmentExpression	sig = dbg -> reason . signum		1205304	0		=			
ANR	1205766	Identifier	sig		1205304	0					
ANR	1205767	MemberAccess	dbg -> reason . signum		1205304	1					
ANR	1205768	PtrMemberAccess	dbg -> reason		1205304	0					
ANR	1205769	Identifier	dbg		1205304	0					
ANR	1205770	Identifier	reason		1205304	1					
ANR	1205771	Identifier	signum		1205304	1					
ANR	1205772	ExpressionStatement	"eprintf ( ""Continue into the signal %d handler\\n"" , sig )"	1230:4:31255:31309	1205304	1	True				
ANR	1205773	CallExpression	"eprintf ( ""Continue into the signal %d handler\\n"" , sig )"		1205304	0					
ANR	1205774	Callee	eprintf		1205304	0					
ANR	1205775	Identifier	eprintf		1205304	0					
ANR	1205776	ArgumentList	"""Continue into the signal %d handler\\n"""		1205304	1					
ANR	1205777	Argument	"""Continue into the signal %d handler\\n"""		1205304	0					
ANR	1205778	PrimaryExpression	"""Continue into the signal %d handler\\n"""		1205304	0					
ANR	1205779	Argument	sig		1205304	1					
ANR	1205780	Identifier	sig		1205304	0					
ANR	1205781	GotoStatement	goto repeat ;	1231:4:31315:31326	1205304	2	True				
ANR	1205782	Identifier	repeat		1205304	0					
ANR	1205783	ElseStatement	else		1205304	0					
ANR	1205784	IfStatement	if ( what & R_DBG_SIGNAL_SKIP )		1205304	0					
ANR	1205785	Condition	what & R_DBG_SIGNAL_SKIP	1232:14:31342:31365	1205304	0	True				
ANR	1205786	BitAndExpression	what & R_DBG_SIGNAL_SKIP		1205304	0		&			
ANR	1205787	Identifier	what		1205304	0					
ANR	1205788	Identifier	R_DBG_SIGNAL_SKIP		1205304	1					
ANR	1205789	CompoundStatement		127:4:3419:3456	1205304	1					
ANR	1205790	IdentifierDeclStatement	ut8 buf [ 64 ] ;	1234:4:31428:31439	1205304	0	True				
ANR	1205791	IdentifierDecl	buf [ 64 ]		1205304	0					
ANR	1205792	IdentifierDeclType	ut8 [ 64 ]		1205304	0					
ANR	1205793	Identifier	buf		1205304	1					
ANR	1205794	PrimaryExpression	64		1205304	2					
ANR	1205795	IdentifierDeclStatement	RAnalOp op = { 0 } ;	1235:4:31445:31461	1205304	1	True				
ANR	1205796	IdentifierDecl	op = { 0 }		1205304	0					
ANR	1205797	IdentifierDeclType	RAnalOp		1205304	0					
ANR	1205798	Identifier	op		1205304	1					
ANR	1205799	AssignmentExpression	op = { 0 }		1205304	2		=			
ANR	1205800	Identifier	op		1205304	0					
ANR	1205801	InitializerList	0		1205304	1					
ANR	1205802	PrimaryExpression	0		1205304	0					
ANR	1205803	IdentifierDeclStatement	"ut64 pc = r_debug_reg_get ( dbg , ""PC"" ) ;"	1236:4:31467:31504	1205304	2	True				
ANR	1205804	IdentifierDecl	"pc = r_debug_reg_get ( dbg , ""PC"" )"		1205304	0					
ANR	1205805	IdentifierDeclType	ut64		1205304	0					
ANR	1205806	Identifier	pc		1205304	1					
ANR	1205807	AssignmentExpression	"pc = r_debug_reg_get ( dbg , ""PC"" )"		1205304	2		=			
ANR	1205808	Identifier	pc		1205304	0					
ANR	1205809	CallExpression	"r_debug_reg_get ( dbg , ""PC"" )"		1205304	1					
ANR	1205810	Callee	r_debug_reg_get		1205304	0					
ANR	1205811	Identifier	r_debug_reg_get		1205304	0					
ANR	1205812	ArgumentList	dbg		1205304	1					
ANR	1205813	Argument	dbg		1205304	0					
ANR	1205814	Identifier	dbg		1205304	0					
ANR	1205815	Argument	"""PC"""		1205304	1					
ANR	1205816	PrimaryExpression	"""PC"""		1205304	0					
ANR	1205817	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , pc , buf , sizeof ( buf ) )"	1237:4:31510:31563	1205304	3	True				
ANR	1205818	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , pc , buf , sizeof ( buf ) )"		1205304	0					
ANR	1205819	Callee	dbg -> iob . read_at		1205304	0					
ANR	1205820	MemberAccess	dbg -> iob . read_at		1205304	0					
ANR	1205821	PtrMemberAccess	dbg -> iob		1205304	0					
ANR	1205822	Identifier	dbg		1205304	0					
ANR	1205823	Identifier	iob		1205304	1					
ANR	1205824	Identifier	read_at		1205304	1					
ANR	1205825	ArgumentList	dbg -> iob . io		1205304	1					
ANR	1205826	Argument	dbg -> iob . io		1205304	0					
ANR	1205827	MemberAccess	dbg -> iob . io		1205304	0					
ANR	1205828	PtrMemberAccess	dbg -> iob		1205304	0					
ANR	1205829	Identifier	dbg		1205304	0					
ANR	1205830	Identifier	iob		1205304	1					
ANR	1205831	Identifier	io		1205304	1					
ANR	1205832	Argument	pc		1205304	1					
ANR	1205833	Identifier	pc		1205304	0					
ANR	1205834	Argument	buf		1205304	2					
ANR	1205835	Identifier	buf		1205304	0					
ANR	1205836	Argument	sizeof ( buf )		1205304	3					
ANR	1205837	SizeofExpression	sizeof ( buf )		1205304	0					
ANR	1205838	Sizeof	sizeof		1205304	0					
ANR	1205839	SizeofOperand	buf		1205304	1					
ANR	1205840	ExpressionStatement	"r_anal_op ( dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	1238:4:31569:31640	1205304	4	True				
ANR	1205841	CallExpression	"r_anal_op ( dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		1205304	0					
ANR	1205842	Callee	r_anal_op		1205304	0					
ANR	1205843	Identifier	r_anal_op		1205304	0					
ANR	1205844	ArgumentList	dbg -> anal		1205304	1					
ANR	1205845	Argument	dbg -> anal		1205304	0					
ANR	1205846	PtrMemberAccess	dbg -> anal		1205304	0					
ANR	1205847	Identifier	dbg		1205304	0					
ANR	1205848	Identifier	anal		1205304	1					
ANR	1205849	Argument	& op		1205304	1					
ANR	1205850	UnaryOperationExpression	& op		1205304	0					
ANR	1205851	UnaryOperator	&		1205304	0					
ANR	1205852	Identifier	op		1205304	1					
ANR	1205853	Argument	pc		1205304	2					
ANR	1205854	Identifier	pc		1205304	0					
ANR	1205855	Argument	buf		1205304	3					
ANR	1205856	Identifier	buf		1205304	0					
ANR	1205857	Argument	sizeof ( buf )		1205304	4					
ANR	1205858	SizeofExpression	sizeof ( buf )		1205304	0					
ANR	1205859	Sizeof	sizeof		1205304	0					
ANR	1205860	SizeofOperand	buf		1205304	1					
ANR	1205861	Argument	R_ANAL_OP_MASK_BASIC		1205304	5					
ANR	1205862	Identifier	R_ANAL_OP_MASK_BASIC		1205304	0					
ANR	1205863	IfStatement	if ( op . size > 0 )		1205304	5					
ANR	1205864	Condition	op . size > 0	1239:8:31650:31660	1205304	0	True				
ANR	1205865	RelationalExpression	op . size > 0		1205304	0		>			
ANR	1205866	MemberAccess	op . size		1205304	0					
ANR	1205867	Identifier	op		1205304	0					
ANR	1205868	Identifier	size		1205304	1					
ANR	1205869	PrimaryExpression	0		1205304	1					
ANR	1205870	CompoundStatement		131:5:3622:3683	1205304	1					
ANR	1205871	IdentifierDeclStatement	const char * signame = r_signal_to_string ( dbg -> reason . signum ) ;	1240:5:31670:31731	1205304	0	True				
ANR	1205872	IdentifierDecl	* signame = r_signal_to_string ( dbg -> reason . signum )		1205304	0					
ANR	1205873	IdentifierDeclType	const char *		1205304	0					
ANR	1205874	Identifier	signame		1205304	1					
ANR	1205875	AssignmentExpression	* signame = r_signal_to_string ( dbg -> reason . signum )		1205304	2		=			
ANR	1205876	Identifier	signame		1205304	0					
ANR	1205877	CallExpression	r_signal_to_string ( dbg -> reason . signum )		1205304	1					
ANR	1205878	Callee	r_signal_to_string		1205304	0					
ANR	1205879	Identifier	r_signal_to_string		1205304	0					
ANR	1205880	ArgumentList	dbg -> reason . signum		1205304	1					
ANR	1205881	Argument	dbg -> reason . signum		1205304	0					
ANR	1205882	MemberAccess	dbg -> reason . signum		1205304	0					
ANR	1205883	PtrMemberAccess	dbg -> reason		1205304	0					
ANR	1205884	Identifier	dbg		1205304	0					
ANR	1205885	Identifier	reason		1205304	1					
ANR	1205886	Identifier	signum		1205304	1					
ANR	1205887	ExpressionStatement	"r_debug_reg_set ( dbg , ""PC"" , pc + op . size )"	1241:5:31738:31777	1205304	1	True				
ANR	1205888	CallExpression	"r_debug_reg_set ( dbg , ""PC"" , pc + op . size )"		1205304	0					
ANR	1205889	Callee	r_debug_reg_set		1205304	0					
ANR	1205890	Identifier	r_debug_reg_set		1205304	0					
ANR	1205891	ArgumentList	dbg		1205304	1					
ANR	1205892	Argument	dbg		1205304	0					
ANR	1205893	Identifier	dbg		1205304	0					
ANR	1205894	Argument	"""PC"""		1205304	1					
ANR	1205895	PrimaryExpression	"""PC"""		1205304	0					
ANR	1205896	Argument	pc + op . size		1205304	2					
ANR	1205897	AdditiveExpression	pc + op . size		1205304	0		+			
ANR	1205898	Identifier	pc		1205304	0					
ANR	1205899	MemberAccess	op . size		1205304	1					
ANR	1205900	Identifier	op		1205304	0					
ANR	1205901	Identifier	size		1205304	1					
ANR	1205902	ExpressionStatement	"eprintf ( ""Skip signal %d handler %s\\n"" , dbg -> reason . signum , signame )"	1242:5:31784:31858	1205304	2	True				
ANR	1205903	CallExpression	"eprintf ( ""Skip signal %d handler %s\\n"" , dbg -> reason . signum , signame )"		1205304	0					
ANR	1205904	Callee	eprintf		1205304	0					
ANR	1205905	Identifier	eprintf		1205304	0					
ANR	1205906	ArgumentList	"""Skip signal %d handler %s\\n"""		1205304	1					
ANR	1205907	Argument	"""Skip signal %d handler %s\\n"""		1205304	0					
ANR	1205908	PrimaryExpression	"""Skip signal %d handler %s\\n"""		1205304	0					
ANR	1205909	Argument	dbg -> reason . signum		1205304	1					
ANR	1205910	MemberAccess	dbg -> reason . signum		1205304	0					
ANR	1205911	PtrMemberAccess	dbg -> reason		1205304	0					
ANR	1205912	Identifier	dbg		1205304	0					
ANR	1205913	Identifier	reason		1205304	1					
ANR	1205914	Identifier	signum		1205304	1					
ANR	1205915	Argument	signame		1205304	2					
ANR	1205916	Identifier	signame		1205304	0					
ANR	1205917	GotoStatement	goto repeat ;	1244:5:31865:31876	1205304	3	True				
ANR	1205918	Identifier	repeat		1205304	0					
ANR	1205919	ElseStatement	else		1205304	0					
ANR	1205920	CompoundStatement		137:5:3848:3885	1205304	0					
ANR	1205921	IdentifierDeclStatement	"ut64 pc = r_debug_reg_get ( dbg , ""PC"" ) ;"	1246:5:31896:31933	1205304	0	True				
ANR	1205922	IdentifierDecl	"pc = r_debug_reg_get ( dbg , ""PC"" )"		1205304	0					
ANR	1205923	IdentifierDeclType	ut64		1205304	0					
ANR	1205924	Identifier	pc		1205304	1					
ANR	1205925	AssignmentExpression	"pc = r_debug_reg_get ( dbg , ""PC"" )"		1205304	2		=			
ANR	1205926	Identifier	pc		1205304	0					
ANR	1205927	CallExpression	"r_debug_reg_get ( dbg , ""PC"" )"		1205304	1					
ANR	1205928	Callee	r_debug_reg_get		1205304	0					
ANR	1205929	Identifier	r_debug_reg_get		1205304	0					
ANR	1205930	ArgumentList	dbg		1205304	1					
ANR	1205931	Argument	dbg		1205304	0					
ANR	1205932	Identifier	dbg		1205304	0					
ANR	1205933	Argument	"""PC"""		1205304	1					
ANR	1205934	PrimaryExpression	"""PC"""		1205304	0					
ANR	1205935	Statement	eprintf	1247:5:31940:31946	1205304	1	True				
ANR	1205936	Statement	(	1247:13:31948:31948	1205304	2	True				
ANR	1205937	Statement	"""Stalled with an exception at 0x%08"""	1247:14:31949:31984	1205304	3	True				
ANR	1205938	Statement	PFMT64x	1247:50:31985:31991	1205304	4	True				
ANR	1205939	Statement	"""\\n"""	1247:57:31992:31995	1205304	5	True				
ANR	1205940	Statement	","	1247:61:31996:31996	1205304	6	True				
ANR	1205941	Statement	pc	1247:63:31998:31999	1205304	7	True				
ANR	1205942	Statement	)	1247:65:32000:32000	1205304	8	True				
ANR	1205943	ExpressionStatement		1247:66:32001:32001	1205304	9	True				
ANR	1205944	ExpressionStatement	r_cons_break_pop ( )	1253:1:32038:32057	1205304	7	True				
ANR	1205945	CallExpression	r_cons_break_pop ( )		1205304	0					
ANR	1205946	Callee	r_cons_break_pop		1205304	0					
ANR	1205947	Identifier	r_cons_break_pop		1205304	0					
ANR	1205948	ArgumentList			1205304	1					
ANR	1205949	ReturnStatement	return ret ;	1255:1:32067:32077	1205304	8	True				
ANR	1205950	Identifier	ret		1205304	0					
ANR	1205951	ReturnType	R_API int		1205304	1					
ANR	1205952	Identifier	r_debug_continue_kill		1205304	2					
ANR	1205953	ParameterList	"RDebug * dbg , int sig"		1205304	3					
ANR	1205954	Parameter	RDebug * dbg	1110:32:28025:28035	1205304	0	True				
ANR	1205955	ParameterType	RDebug *		1205304	0					
ANR	1205956	Identifier	dbg		1205304	1					
ANR	1205957	Parameter	int sig	1110:45:28038:28044	1205304	1	True				
ANR	1205958	ParameterType	int		1205304	0					
ANR	1205959	Identifier	sig		1205304	1					
ANR	1205960	CFGEntryNode	ENTRY		1205304		True				
ANR	1205961	CFGExitNode	EXIT		1205304		True				
ANR	1205962	Symbol	reason		1205304						
ANR	1205963	Symbol	dbg -> corebind . cmd		1205304						
ANR	1205964	Symbol	r_debug_wait		1205304						
ANR	1205965	Symbol	linux_attach_new_process		1205304						
ANR	1205966	Symbol	num		1205304						
ANR	1205967	Symbol	r_debug_reg_get		1205304						
ANR	1205968	Symbol	R_DEBUG_REASON_COND		1205304						
ANR	1205969	Symbol	& op		1205304						
ANR	1205970	Symbol	r_debug_signal_what		1205304						
ANR	1205971	Symbol	dbg -> corebind . core		1205304						
ANR	1205972	Symbol	dbg -> reason . signum		1205304						
ANR	1205973	Symbol	* bp		1205304						
ANR	1205974	Symbol	& bp		1205304						
ANR	1205975	Symbol	r_lib_dl_sym		1205304						
ANR	1205976	Symbol	R_DEBUG_REASON_TRACEPOINT		1205304						
ANR	1205977	Symbol	core -> num		1205304						
ANR	1205978	Symbol	ret		1205304						
ANR	1205979	Symbol	NULL		1205304						
ANR	1205980	Symbol	dbg -> reason		1205304						
ANR	1205981	Symbol	signame		1205304						
ANR	1205982	Symbol	dbg		1205304						
ANR	1205983	Symbol	w32_break_process_wrapper		1205304						
ANR	1205984	Symbol	r_signal_to_string		1205304						
ANR	1205985	Symbol	core		1205304						
ANR	1205986	Symbol	dbg -> corebind		1205304						
ANR	1205987	Symbol	bp -> cond		1205304						
ANR	1205988	Symbol	dbg -> trace_clone		1205304						
ANR	1205989	Symbol	R_DBG_SIGNAL_CONT		1205304						
ANR	1205990	Symbol	op . size		1205304						
ANR	1205991	Symbol	dbg -> iob . io		1205304						
ANR	1205992	Symbol	* dbg -> h		1205304						
ANR	1205993	Symbol	* core		1205304						
ANR	1205994	Symbol	R_DEBUG_REASON_DEAD		1205304						
ANR	1205995	Symbol	bp -> enabled		1205304						
ANR	1205996	Symbol	R_ANAL_OP_MASK_BASIC		1205304						
ANR	1205997	Symbol	bp		1205304						
ANR	1205998	Symbol	sig		1205304						
ANR	1205999	Symbol	num -> value		1205304						
ANR	1206000	Symbol	r_cons_is_breaked		1205304						
ANR	1206001	Symbol	op		1205304						
ANR	1206002	Symbol	dbg -> h		1205304						
ANR	1206003	Symbol	dbg -> iob		1205304						
ANR	1206004	Symbol	dbg -> corebind . cfggeti		1205304						
ANR	1206005	Symbol	dbg -> anal		1205304						
ANR	1206006	Symbol	R_DEBUG_REASON_EXIT_TID		1205304						
ANR	1206007	Symbol	false		1205304						
ANR	1206008	Symbol	R_DBG_SIGNAL_SKIP		1205304						
ANR	1206009	Symbol	* dbg		1205304						
ANR	1206010	Symbol	r_debug_recoil		1205304						
ANR	1206011	Symbol	dbg -> tid		1205304						
ANR	1206012	Symbol	* num		1205304						
ANR	1206013	Symbol	R_DEBUG_REASON_BREAKPOINT		1205304						
ANR	1206014	Symbol	R_DEBUG_REASON_EXIT_LIB		1205304						
ANR	1206015	Symbol	r_debug_is_dead		1205304						
ANR	1206016	Symbol	buf		1205304						
ANR	1206017	Symbol	what		1205304						
ANR	1206018	Symbol	pc		1205304						
ANR	1206019	Symbol	dbg -> pid		1205304						
ANR	1206020	Symbol	R_DEBUG_REASON_NEW_LIB		1205304						
ANR	1206021	Symbol	R_DBG_RECOIL_CONTINUE		1205304						
ANR	1206022	Symbol	R_DEBUG_REASON_NEW_PID		1205304						
ANR	1206023	Symbol	dbg -> h -> cont		1205304						
ANR	1206024	Symbol	R_DEBUG_REASON_EXIT_PID		1205304						
ANR	1206025	Symbol	* * dbg		1205304						
ANR	1206026	Symbol	dbg -> follow_child		1205304						
ANR	1206027	Symbol	R_DEBUG_REASON_NEW_TID		1205304						
ANR	1206028	Function	r_debug_continue	1259:0:32083:32188							
ANR	1206029	FunctionDef	r_debug_continue (RDebug * dbg)		1206028	0					
ANR	1206030	CompoundStatement		1259:40:32123:32188	1206028	0					
ANR	1206031	ReturnStatement	"return r_debug_continue_kill ( dbg , 0 ) ;"	1260:1:32126:32163	1206028	0	True				
ANR	1206032	CallExpression	"r_debug_continue_kill ( dbg , 0 )"		1206028	0					
ANR	1206033	Callee	r_debug_continue_kill		1206028	0					
ANR	1206034	Identifier	r_debug_continue_kill		1206028	0					
ANR	1206035	ArgumentList	dbg		1206028	1					
ANR	1206036	Argument	dbg		1206028	0					
ANR	1206037	Identifier	dbg		1206028	0					
ANR	1206038	Argument	0		1206028	1					
ANR	1206039	PrimaryExpression	0		1206028	0					
ANR	1206040	ReturnType	R_API int		1206028	1					
ANR	1206041	Identifier	r_debug_continue		1206028	2					
ANR	1206042	ParameterList	RDebug * dbg		1206028	3					
ANR	1206043	Parameter	RDebug * dbg	1259:27:32110:32120	1206028	0	True				
ANR	1206044	ParameterType	RDebug *		1206028	0					
ANR	1206045	Identifier	dbg		1206028	1					
ANR	1206046	CFGEntryNode	ENTRY		1206028		True				
ANR	1206047	CFGExitNode	EXIT		1206028		True				
ANR	1206048	Symbol	r_debug_continue_kill		1206028						
ANR	1206049	Symbol	dbg		1206028						
ANR	1206050	Function	r_debug_continue_pass_exception	1264:0:32207:32328							
ANR	1206051	FunctionDef	r_debug_continue_pass_exception (RDebug * dbg)		1206050	0					
ANR	1206052	CompoundStatement		1264:55:32262:32328	1206050	0					
ANR	1206053	ReturnStatement	"return r_debug_continue_kill ( dbg , DBG_EXCEPTION_NOT_HANDLED ) ;"	1265:1:32265:32326	1206050	0	True				
ANR	1206054	CallExpression	"r_debug_continue_kill ( dbg , DBG_EXCEPTION_NOT_HANDLED )"		1206050	0					
ANR	1206055	Callee	r_debug_continue_kill		1206050	0					
ANR	1206056	Identifier	r_debug_continue_kill		1206050	0					
ANR	1206057	ArgumentList	dbg		1206050	1					
ANR	1206058	Argument	dbg		1206050	0					
ANR	1206059	Identifier	dbg		1206050	0					
ANR	1206060	Argument	DBG_EXCEPTION_NOT_HANDLED		1206050	1					
ANR	1206061	Identifier	DBG_EXCEPTION_NOT_HANDLED		1206050	0					
ANR	1206062	ReturnType	R_API int		1206050	1					
ANR	1206063	Identifier	r_debug_continue_pass_exception		1206050	2					
ANR	1206064	ParameterList	RDebug * dbg		1206050	3					
ANR	1206065	Parameter	RDebug * dbg	1264:42:32249:32259	1206050	0	True				
ANR	1206066	ParameterType	RDebug *		1206050	0					
ANR	1206067	Identifier	dbg		1206050	1					
ANR	1206068	CFGEntryNode	ENTRY		1206050		True				
ANR	1206069	CFGExitNode	EXIT		1206050		True				
ANR	1206070	Symbol	r_debug_continue_kill		1206050						
ANR	1206071	Symbol	dbg		1206050						
ANR	1206072	Symbol	DBG_EXCEPTION_NOT_HANDLED		1206050						
ANR	1206073	Function	r_debug_continue_until_nontraced	1269:0:32338:32432							
ANR	1206074	FunctionDef	r_debug_continue_until_nontraced (RDebug * dbg)		1206073	0					
ANR	1206075	CompoundStatement		1269:56:32394:32432	1206073	0					
ANR	1206076	ExpressionStatement	"eprintf ( ""TODO\\n"" )"	1270:1:32397:32415	1206073	0	True				
ANR	1206077	CallExpression	"eprintf ( ""TODO\\n"" )"		1206073	0					
ANR	1206078	Callee	eprintf		1206073	0					
ANR	1206079	Identifier	eprintf		1206073	0					
ANR	1206080	ArgumentList	"""TODO\\n"""		1206073	1					
ANR	1206081	Argument	"""TODO\\n"""		1206073	0					
ANR	1206082	PrimaryExpression	"""TODO\\n"""		1206073	0					
ANR	1206083	ReturnStatement	return false ;	1271:1:32418:32430	1206073	1	True				
ANR	1206084	Identifier	false		1206073	0					
ANR	1206085	ReturnType	R_API int		1206073	1					
ANR	1206086	Identifier	r_debug_continue_until_nontraced		1206073	2					
ANR	1206087	ParameterList	RDebug * dbg		1206073	3					
ANR	1206088	Parameter	RDebug * dbg	1269:43:32381:32391	1206073	0	True				
ANR	1206089	ParameterType	RDebug *		1206073	0					
ANR	1206090	Identifier	dbg		1206073	1					
ANR	1206091	CFGEntryNode	ENTRY		1206073		True				
ANR	1206092	CFGExitNode	EXIT		1206073		True				
ANR	1206093	Symbol	dbg		1206073						
ANR	1206094	Symbol	false		1206073						
ANR	1206095	Function	r_debug_continue_until_optype	1274:0:32435:33739							
ANR	1206096	FunctionDef	"r_debug_continue_until_optype (RDebug * dbg , int type , int over)"		1206095	0					
ANR	1206097	CompoundStatement		1274:73:32508:33739	1206095	0					
ANR	1206098	IdentifierDeclStatement	"int ret , n = 0 ;"	1275:1:32511:32525	1206095	0	True				
ANR	1206099	IdentifierDecl	ret		1206095	0					
ANR	1206100	IdentifierDeclType	int		1206095	0					
ANR	1206101	Identifier	ret		1206095	1					
ANR	1206102	IdentifierDecl	n = 0		1206095	1					
ANR	1206103	IdentifierDeclType	int		1206095	0					
ANR	1206104	Identifier	n		1206095	1					
ANR	1206105	AssignmentExpression	n = 0		1206095	2		=			
ANR	1206106	Identifier	n		1206095	0					
ANR	1206107	PrimaryExpression	0		1206095	1					
ANR	1206108	IdentifierDeclStatement	"ut64 pc , buf_pc = 0 ;"	1276:1:32528:32547	1206095	1	True				
ANR	1206109	IdentifierDecl	pc		1206095	0					
ANR	1206110	IdentifierDeclType	ut64		1206095	0					
ANR	1206111	Identifier	pc		1206095	1					
ANR	1206112	IdentifierDecl	buf_pc = 0		1206095	1					
ANR	1206113	IdentifierDeclType	ut64		1206095	0					
ANR	1206114	Identifier	buf_pc		1206095	1					
ANR	1206115	AssignmentExpression	buf_pc = 0		1206095	2		=			
ANR	1206116	Identifier	buf_pc		1206095	0					
ANR	1206117	PrimaryExpression	0		1206095	1					
ANR	1206118	IdentifierDeclStatement	RAnalOp op ;	1277:1:32550:32560	1206095	2	True				
ANR	1206119	IdentifierDecl	op		1206095	0					
ANR	1206120	IdentifierDeclType	RAnalOp		1206095	0					
ANR	1206121	Identifier	op		1206095	1					
ANR	1206122	IdentifierDeclStatement	ut8 buf [ DBG_BUF_SIZE ] ;	1278:1:32563:32584	1206095	3	True				
ANR	1206123	IdentifierDecl	buf [ DBG_BUF_SIZE ]		1206095	0					
ANR	1206124	IdentifierDeclType	ut8 [ DBG_BUF_SIZE ]		1206095	0					
ANR	1206125	Identifier	buf		1206095	1					
ANR	1206126	Identifier	DBG_BUF_SIZE		1206095	2					
ANR	1206127	IfStatement	if ( r_debug_is_dead ( dbg ) )		1206095	4					
ANR	1206128	Condition	r_debug_is_dead ( dbg )	1280:5:32592:32612	1206095	0	True				
ANR	1206129	CallExpression	r_debug_is_dead ( dbg )		1206095	0					
ANR	1206130	Callee	r_debug_is_dead		1206095	0					
ANR	1206131	Identifier	r_debug_is_dead		1206095	0					
ANR	1206132	ArgumentList	dbg		1206095	1					
ANR	1206133	Argument	dbg		1206095	0					
ANR	1206134	Identifier	dbg		1206095	0					
ANR	1206135	CompoundStatement		7:28:106:106	1206095	1					
ANR	1206136	ReturnStatement	return false ;	1281:2:32619:32631	1206095	0	True				
ANR	1206137	Identifier	false		1206095	0					
ANR	1206138	IfStatement	if ( ! dbg -> anal || ! dbg -> reg )		1206095	5					
ANR	1206139	Condition	! dbg -> anal || ! dbg -> reg	1284:5:32642:32664	1206095	0	True				
ANR	1206140	OrExpression	! dbg -> anal || ! dbg -> reg		1206095	0		||			
ANR	1206141	UnaryOperationExpression	! dbg -> anal		1206095	0					
ANR	1206142	UnaryOperator	!		1206095	0					
ANR	1206143	PtrMemberAccess	dbg -> anal		1206095	1					
ANR	1206144	Identifier	dbg		1206095	0					
ANR	1206145	Identifier	anal		1206095	1					
ANR	1206146	UnaryOperationExpression	! dbg -> reg		1206095	1					
ANR	1206147	UnaryOperator	!		1206095	0					
ANR	1206148	PtrMemberAccess	dbg -> reg		1206095	1					
ANR	1206149	Identifier	dbg		1206095	0					
ANR	1206150	Identifier	reg		1206095	1					
ANR	1206151	CompoundStatement		11:30:158:158	1206095	1					
ANR	1206152	ExpressionStatement	"eprintf ( ""Undefined pointer at dbg->anal\\n"" )"	1285:2:32671:32715	1206095	0	True				
ANR	1206153	CallExpression	"eprintf ( ""Undefined pointer at dbg->anal\\n"" )"		1206095	0					
ANR	1206154	Callee	eprintf		1206095	0					
ANR	1206155	Identifier	eprintf		1206095	0					
ANR	1206156	ArgumentList	"""Undefined pointer at dbg->anal\\n"""		1206095	1					
ANR	1206157	Argument	"""Undefined pointer at dbg->anal\\n"""		1206095	0					
ANR	1206158	PrimaryExpression	"""Undefined pointer at dbg->anal\\n"""		1206095	0					
ANR	1206159	ReturnStatement	return false ;	1286:2:32719:32731	1206095	1	True				
ANR	1206160	Identifier	false		1206095	0					
ANR	1206161	ExpressionStatement	"r_debug_step ( dbg , 1 )"	1289:1:32738:32759	1206095	6	True				
ANR	1206162	CallExpression	"r_debug_step ( dbg , 1 )"		1206095	0					
ANR	1206163	Callee	r_debug_step		1206095	0					
ANR	1206164	Identifier	r_debug_step		1206095	0					
ANR	1206165	ArgumentList	dbg		1206095	1					
ANR	1206166	Argument	dbg		1206095	0					
ANR	1206167	Identifier	dbg		1206095	0					
ANR	1206168	Argument	1		1206095	1					
ANR	1206169	PrimaryExpression	1		1206095	0					
ANR	1206170	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	1290:1:32762:32807	1206095	7	True				
ANR	1206171	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1206095	0					
ANR	1206172	Callee	r_debug_reg_sync		1206095	0					
ANR	1206173	Identifier	r_debug_reg_sync		1206095	0					
ANR	1206174	ArgumentList	dbg		1206095	1					
ANR	1206175	Argument	dbg		1206095	0					
ANR	1206176	Identifier	dbg		1206095	0					
ANR	1206177	Argument	R_REG_TYPE_GPR		1206095	1					
ANR	1206178	Identifier	R_REG_TYPE_GPR		1206095	0					
ANR	1206179	Argument	false		1206095	2					
ANR	1206180	Identifier	false		1206095	0					
ANR	1206181	ExpressionStatement	"buf_pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"	1293:1:32830:32891	1206095	8	True				
ANR	1206182	AssignmentExpression	"buf_pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206095	0		=			
ANR	1206183	Identifier	buf_pc		1206095	0					
ANR	1206184	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206095	1					
ANR	1206185	Callee	r_debug_reg_get		1206095	0					
ANR	1206186	Identifier	r_debug_reg_get		1206095	0					
ANR	1206187	ArgumentList	dbg		1206095	1					
ANR	1206188	Argument	dbg		1206095	0					
ANR	1206189	Identifier	dbg		1206095	0					
ANR	1206190	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1206095	1					
ANR	1206191	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1206095	0					
ANR	1206192	PtrMemberAccess	dbg -> reg -> name		1206095	0					
ANR	1206193	PtrMemberAccess	dbg -> reg		1206095	0					
ANR	1206194	Identifier	dbg		1206095	0					
ANR	1206195	Identifier	reg		1206095	1					
ANR	1206196	Identifier	name		1206095	1					
ANR	1206197	Identifier	R_REG_NAME_PC		1206095	1					
ANR	1206198	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , buf_pc , buf , sizeof ( buf ) )"	1294:1:32894:32951	1206095	9	True				
ANR	1206199	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , buf_pc , buf , sizeof ( buf ) )"		1206095	0					
ANR	1206200	Callee	dbg -> iob . read_at		1206095	0					
ANR	1206201	MemberAccess	dbg -> iob . read_at		1206095	0					
ANR	1206202	PtrMemberAccess	dbg -> iob		1206095	0					
ANR	1206203	Identifier	dbg		1206095	0					
ANR	1206204	Identifier	iob		1206095	1					
ANR	1206205	Identifier	read_at		1206095	1					
ANR	1206206	ArgumentList	dbg -> iob . io		1206095	1					
ANR	1206207	Argument	dbg -> iob . io		1206095	0					
ANR	1206208	MemberAccess	dbg -> iob . io		1206095	0					
ANR	1206209	PtrMemberAccess	dbg -> iob		1206095	0					
ANR	1206210	Identifier	dbg		1206095	0					
ANR	1206211	Identifier	iob		1206095	1					
ANR	1206212	Identifier	io		1206095	1					
ANR	1206213	Argument	buf_pc		1206095	1					
ANR	1206214	Identifier	buf_pc		1206095	0					
ANR	1206215	Argument	buf		1206095	2					
ANR	1206216	Identifier	buf		1206095	0					
ANR	1206217	Argument	sizeof ( buf )		1206095	3					
ANR	1206218	SizeofExpression	sizeof ( buf )		1206095	0					
ANR	1206219	Sizeof	sizeof		1206095	0					
ANR	1206220	SizeofOperand	buf		1206095	1					
ANR	1206221	ForStatement	for ( ; ; )		1206095	10					
ANR	1206222	CompoundStatement		24:10:509:509	1206095	0					
ANR	1206223	IfStatement	"if ( ! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false ) )"		1206095	0					
ANR	1206224	Condition	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	1298:6:33026:33071	1206095	0	True				
ANR	1206225	UnaryOperationExpression	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1206095	0					
ANR	1206226	UnaryOperator	!		1206095	0					
ANR	1206227	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1206095	1					
ANR	1206228	Callee	r_debug_reg_sync		1206095	0					
ANR	1206229	Identifier	r_debug_reg_sync		1206095	0					
ANR	1206230	ArgumentList	dbg		1206095	1					
ANR	1206231	Argument	dbg		1206095	0					
ANR	1206232	Identifier	dbg		1206095	0					
ANR	1206233	Argument	R_REG_TYPE_GPR		1206095	1					
ANR	1206234	Identifier	R_REG_TYPE_GPR		1206095	0					
ANR	1206235	Argument	false		1206095	2					
ANR	1206236	Identifier	false		1206095	0					
ANR	1206237	CompoundStatement		25:54:565:565	1206095	1					
ANR	1206238	BreakStatement	break ;	1299:3:33079:33084	1206095	0	True				
ANR	1206239	ExpressionStatement	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"	1302:2:33093:33150	1206095	1	True				
ANR	1206240	AssignmentExpression	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206095	0		=			
ANR	1206241	Identifier	pc		1206095	0					
ANR	1206242	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206095	1					
ANR	1206243	Callee	r_debug_reg_get		1206095	0					
ANR	1206244	Identifier	r_debug_reg_get		1206095	0					
ANR	1206245	ArgumentList	dbg		1206095	1					
ANR	1206246	Argument	dbg		1206095	0					
ANR	1206247	Identifier	dbg		1206095	0					
ANR	1206248	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1206095	1					
ANR	1206249	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1206095	0					
ANR	1206250	PtrMemberAccess	dbg -> reg -> name		1206095	0					
ANR	1206251	PtrMemberAccess	dbg -> reg		1206095	0					
ANR	1206252	Identifier	dbg		1206095	0					
ANR	1206253	Identifier	reg		1206095	1					
ANR	1206254	Identifier	name		1206095	1					
ANR	1206255	Identifier	R_REG_NAME_PC		1206095	1					
ANR	1206256	IfStatement	if ( pc - buf_pc > sizeof ( buf ) )		1206095	2					
ANR	1206257	Condition	pc - buf_pc > sizeof ( buf )	1304:6:33191:33216	1206095	0	True				
ANR	1206258	RelationalExpression	pc - buf_pc > sizeof ( buf )		1206095	0		>			
ANR	1206259	AdditiveExpression	pc - buf_pc		1206095	0		-			
ANR	1206260	Identifier	pc		1206095	0					
ANR	1206261	Identifier	buf_pc		1206095	1					
ANR	1206262	SizeofExpression	sizeof ( buf )		1206095	1					
ANR	1206263	Sizeof	sizeof		1206095	0					
ANR	1206264	SizeofOperand	buf		1206095	1					
ANR	1206265	CompoundStatement		31:34:710:710	1206095	1					
ANR	1206266	ExpressionStatement	buf_pc = pc	1305:3:33224:33235	1206095	0	True				
ANR	1206267	AssignmentExpression	buf_pc = pc		1206095	0		=			
ANR	1206268	Identifier	buf_pc		1206095	0					
ANR	1206269	Identifier	pc		1206095	1					
ANR	1206270	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , buf_pc , buf , sizeof ( buf ) )"	1306:3:33240:33297	1206095	1	True				
ANR	1206271	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , buf_pc , buf , sizeof ( buf ) )"		1206095	0					
ANR	1206272	Callee	dbg -> iob . read_at		1206095	0					
ANR	1206273	MemberAccess	dbg -> iob . read_at		1206095	0					
ANR	1206274	PtrMemberAccess	dbg -> iob		1206095	0					
ANR	1206275	Identifier	dbg		1206095	0					
ANR	1206276	Identifier	iob		1206095	1					
ANR	1206277	Identifier	read_at		1206095	1					
ANR	1206278	ArgumentList	dbg -> iob . io		1206095	1					
ANR	1206279	Argument	dbg -> iob . io		1206095	0					
ANR	1206280	MemberAccess	dbg -> iob . io		1206095	0					
ANR	1206281	PtrMemberAccess	dbg -> iob		1206095	0					
ANR	1206282	Identifier	dbg		1206095	0					
ANR	1206283	Identifier	iob		1206095	1					
ANR	1206284	Identifier	io		1206095	1					
ANR	1206285	Argument	buf_pc		1206095	1					
ANR	1206286	Identifier	buf_pc		1206095	0					
ANR	1206287	Argument	buf		1206095	2					
ANR	1206288	Identifier	buf		1206095	0					
ANR	1206289	Argument	sizeof ( buf )		1206095	3					
ANR	1206290	SizeofExpression	sizeof ( buf )		1206095	0					
ANR	1206291	Sizeof	sizeof		1206095	0					
ANR	1206292	SizeofOperand	buf		1206095	1					
ANR	1206293	IfStatement	"if ( ! r_anal_op ( dbg -> anal , & op , pc , buf + ( pc - buf_pc ) , sizeof ( buf ) - ( pc - buf_pc ) , R_ANAL_OP_MASK_BASIC ) )"		1206095	3					
ANR	1206294	Condition	"! r_anal_op ( dbg -> anal , & op , pc , buf + ( pc - buf_pc ) , sizeof ( buf ) - ( pc - buf_pc ) , R_ANAL_OP_MASK_BASIC )"	1309:6:33333:33436	1206095	0	True				
ANR	1206295	UnaryOperationExpression	"! r_anal_op ( dbg -> anal , & op , pc , buf + ( pc - buf_pc ) , sizeof ( buf ) - ( pc - buf_pc ) , R_ANAL_OP_MASK_BASIC )"		1206095	0					
ANR	1206296	UnaryOperator	!		1206095	0					
ANR	1206297	CallExpression	"r_anal_op ( dbg -> anal , & op , pc , buf + ( pc - buf_pc ) , sizeof ( buf ) - ( pc - buf_pc ) , R_ANAL_OP_MASK_BASIC )"		1206095	1					
ANR	1206298	Callee	r_anal_op		1206095	0					
ANR	1206299	Identifier	r_anal_op		1206095	0					
ANR	1206300	ArgumentList	dbg -> anal		1206095	1					
ANR	1206301	Argument	dbg -> anal		1206095	0					
ANR	1206302	PtrMemberAccess	dbg -> anal		1206095	0					
ANR	1206303	Identifier	dbg		1206095	0					
ANR	1206304	Identifier	anal		1206095	1					
ANR	1206305	Argument	& op		1206095	1					
ANR	1206306	UnaryOperationExpression	& op		1206095	0					
ANR	1206307	UnaryOperator	&		1206095	0					
ANR	1206308	Identifier	op		1206095	1					
ANR	1206309	Argument	pc		1206095	2					
ANR	1206310	Identifier	pc		1206095	0					
ANR	1206311	Argument	buf + ( pc - buf_pc )		1206095	3					
ANR	1206312	AdditiveExpression	buf + ( pc - buf_pc )		1206095	0		+			
ANR	1206313	Identifier	buf		1206095	0					
ANR	1206314	AdditiveExpression	pc - buf_pc		1206095	1		-			
ANR	1206315	Identifier	pc		1206095	0					
ANR	1206316	Identifier	buf_pc		1206095	1					
ANR	1206317	Argument	sizeof ( buf ) - ( pc - buf_pc )		1206095	4					
ANR	1206318	AdditiveExpression	sizeof ( buf ) - ( pc - buf_pc )		1206095	0		-			
ANR	1206319	SizeofExpression	sizeof ( buf )		1206095	0					
ANR	1206320	Sizeof	sizeof		1206095	0					
ANR	1206321	SizeofOperand	buf		1206095	1					
ANR	1206322	AdditiveExpression	pc - buf_pc		1206095	1		-			
ANR	1206323	Identifier	pc		1206095	0					
ANR	1206324	Identifier	buf_pc		1206095	1					
ANR	1206325	Argument	R_ANAL_OP_MASK_BASIC		1206095	5					
ANR	1206326	Identifier	R_ANAL_OP_MASK_BASIC		1206095	0					
ANR	1206327	CompoundStatement		36:112:930:930	1206095	1					
ANR	1206328	Statement	eprintf	1310:3:33444:33450	1206095	0	True				
ANR	1206329	Statement	(	1310:11:33452:33452	1206095	1	True				
ANR	1206330	Statement	"""Decode error at %"""	1310:12:33453:33471	1206095	2	True				
ANR	1206331	Statement	PFMT64x	1310:31:33472:33478	1206095	3	True				
ANR	1206332	Statement	"""\\n"""	1310:38:33479:33482	1206095	4	True				
ANR	1206333	Statement	","	1310:42:33483:33483	1206095	5	True				
ANR	1206334	Statement	pc	1310:44:33485:33486	1206095	6	True				
ANR	1206335	Statement	)	1310:46:33487:33487	1206095	7	True				
ANR	1206336	ExpressionStatement		1310:47:33488:33488	1206095	8	True				
ANR	1206337	ReturnStatement	return false ;	1311:3:33493:33505	1206095	9	True				
ANR	1206338	Identifier	false		1206095	0					
ANR	1206339	IfStatement	if ( op . type == type )		1206095	4					
ANR	1206340	Condition	op . type == type	1313:6:33517:33531	1206095	0	True				
ANR	1206341	EqualityExpression	op . type == type		1206095	0		==			
ANR	1206342	MemberAccess	op . type		1206095	0					
ANR	1206343	Identifier	op		1206095	0					
ANR	1206344	Identifier	type		1206095	1					
ANR	1206345	Identifier	type		1206095	1					
ANR	1206346	CompoundStatement		40:23:1025:1025	1206095	1					
ANR	1206347	BreakStatement	break ;	1314:3:33539:33544	1206095	0	True				
ANR	1206348	ExpressionStatement	"ret = over ? r_debug_step_over ( dbg , 1 ) : r_debug_step ( dbg , 1 )"	1317:2:33578:33647	1206095	5	True				
ANR	1206349	AssignmentExpression	"ret = over ? r_debug_step_over ( dbg , 1 ) : r_debug_step ( dbg , 1 )"		1206095	0		=			
ANR	1206350	Identifier	ret		1206095	0					
ANR	1206351	ConditionalExpression	"over ? r_debug_step_over ( dbg , 1 ) : r_debug_step ( dbg , 1 )"		1206095	1					
ANR	1206352	Condition	over		1206095	0					
ANR	1206353	Identifier	over		1206095	0					
ANR	1206354	CallExpression	"r_debug_step_over ( dbg , 1 )"		1206095	1					
ANR	1206355	Callee	r_debug_step_over		1206095	0					
ANR	1206356	Identifier	r_debug_step_over		1206095	0					
ANR	1206357	ArgumentList	dbg		1206095	1					
ANR	1206358	Argument	dbg		1206095	0					
ANR	1206359	Identifier	dbg		1206095	0					
ANR	1206360	Argument	1		1206095	1					
ANR	1206361	PrimaryExpression	1		1206095	0					
ANR	1206362	CallExpression	"r_debug_step ( dbg , 1 )"		1206095	2					
ANR	1206363	Callee	r_debug_step		1206095	0					
ANR	1206364	Identifier	r_debug_step		1206095	0					
ANR	1206365	ArgumentList	dbg		1206095	1					
ANR	1206366	Argument	dbg		1206095	0					
ANR	1206367	Identifier	dbg		1206095	0					
ANR	1206368	Argument	1		1206095	1					
ANR	1206369	PrimaryExpression	1		1206095	0					
ANR	1206370	IfStatement	if ( ! ret )		1206095	6					
ANR	1206371	Condition	! ret	1321:6:33656:33659	1206095	0	True				
ANR	1206372	UnaryOperationExpression	! ret		1206095	0					
ANR	1206373	UnaryOperator	!		1206095	0					
ANR	1206374	Identifier	ret		1206095	1					
ANR	1206375	CompoundStatement		48:12:1153:1153	1206095	1					
ANR	1206376	ExpressionStatement	"eprintf ( ""r_debug_step: failed\\n"" )"	1322:3:33667:33701	1206095	0	True				
ANR	1206377	CallExpression	"eprintf ( ""r_debug_step: failed\\n"" )"		1206095	0					
ANR	1206378	Callee	eprintf		1206095	0					
ANR	1206379	Identifier	eprintf		1206095	0					
ANR	1206380	ArgumentList	"""r_debug_step: failed\\n"""		1206095	1					
ANR	1206381	Argument	"""r_debug_step: failed\\n"""		1206095	0					
ANR	1206382	PrimaryExpression	"""r_debug_step: failed\\n"""		1206095	0					
ANR	1206383	BreakStatement	break ;	1323:3:33706:33711	1206095	1	True				
ANR	1206384	ExpressionStatement	n ++	1325:2:33719:33722	1206095	7	True				
ANR	1206385	PostIncDecOperationExpression	n ++		1206095	0					
ANR	1206386	Identifier	n		1206095	0					
ANR	1206387	IncDec	++		1206095	1					
ANR	1206388	ReturnStatement	return n ;	1328:1:33729:33737	1206095	11	True				
ANR	1206389	Identifier	n		1206095	0					
ANR	1206390	ReturnType	R_API int		1206095	1					
ANR	1206391	Identifier	r_debug_continue_until_optype		1206095	2					
ANR	1206392	ParameterList	"RDebug * dbg , int type , int over"		1206095	3					
ANR	1206393	Parameter	RDebug * dbg	1274:40:32475:32485	1206095	0	True				
ANR	1206394	ParameterType	RDebug *		1206095	0					
ANR	1206395	Identifier	dbg		1206095	1					
ANR	1206396	Parameter	int type	1274:53:32488:32495	1206095	1	True				
ANR	1206397	ParameterType	int		1206095	0					
ANR	1206398	Identifier	type		1206095	1					
ANR	1206399	Parameter	int over	1274:63:32498:32505	1206095	2	True				
ANR	1206400	ParameterType	int		1206095	0					
ANR	1206401	Identifier	over		1206095	1					
ANR	1206402	CFGEntryNode	ENTRY		1206095		True				
ANR	1206403	CFGExitNode	EXIT		1206095		True				
ANR	1206404	InfiniteForNode	true		1206095		True				
ANR	1206405	Symbol	dbg -> iob . io		1206095						
ANR	1206406	Symbol	r_debug_reg_sync		1206095						
ANR	1206407	Symbol	R_REG_NAME_PC		1206095						
ANR	1206408	Symbol	r_debug_reg_get		1206095						
ANR	1206409	Symbol	& op		1206095						
ANR	1206410	Symbol	type		1206095						
ANR	1206411	Symbol	* dbg -> reg -> name		1206095						
ANR	1206412	Symbol	R_ANAL_OP_MASK_BASIC		1206095						
ANR	1206413	Symbol	* R_REG_NAME_PC		1206095						
ANR	1206414	Symbol	R_REG_TYPE_GPR		1206095						
ANR	1206415	Symbol	r_anal_op		1206095						
ANR	1206416	Symbol	over		1206095						
ANR	1206417	Symbol	ret		1206095						
ANR	1206418	Symbol	op		1206095						
ANR	1206419	Symbol	dbg -> iob		1206095						
ANR	1206420	Symbol	buf_pc		1206095						
ANR	1206421	Symbol	op . type		1206095						
ANR	1206422	Symbol	dbg -> anal		1206095						
ANR	1206423	Symbol	* * * dbg		1206095						
ANR	1206424	Symbol	dbg		1206095						
ANR	1206425	Symbol	false		1206095						
ANR	1206426	Symbol	* dbg		1206095						
ANR	1206427	Symbol	r_debug_step_over		1206095						
ANR	1206428	Symbol	n		1206095						
ANR	1206429	Symbol	* * dbg -> reg		1206095						
ANR	1206430	Symbol	r_debug_step		1206095						
ANR	1206431	Symbol	* dbg -> reg		1206095						
ANR	1206432	Symbol	buf		1206095						
ANR	1206433	Symbol	r_debug_is_dead		1206095						
ANR	1206434	Symbol	pc		1206095						
ANR	1206435	Symbol	dbg -> reg		1206095						
ANR	1206436	Symbol	* * dbg		1206095						
ANR	1206437	Symbol	dbg -> reg -> name		1206095						
ANR	1206438	Function	r_debug_continue_until_internal	1331:0:33742:34482							
ANR	1206439	FunctionDef	"r_debug_continue_until_internal (RDebug * dbg , ut64 addr , bool block)"		1206438	0					
ANR	1206440	CompoundStatement		1331:79:33821:34482	1206438	0					
ANR	1206441	IfStatement	if ( r_debug_is_dead ( dbg ) )		1206438	0					
ANR	1206442	Condition	r_debug_is_dead ( dbg )	1332:5:33828:33848	1206438	0	True				
ANR	1206443	CallExpression	r_debug_is_dead ( dbg )		1206438	0					
ANR	1206444	Callee	r_debug_is_dead		1206438	0					
ANR	1206445	Identifier	r_debug_is_dead		1206438	0					
ANR	1206446	ArgumentList	dbg		1206438	1					
ANR	1206447	Argument	dbg		1206438	0					
ANR	1206448	Identifier	dbg		1206438	0					
ANR	1206449	CompoundStatement		2:28:29:29	1206438	1					
ANR	1206450	ReturnStatement	return false ;	1333:2:33855:33867	1206438	0	True				
ANR	1206451	Identifier	false		1206438	0					
ANR	1206452	IdentifierDeclStatement	"bool has_bp = r_bp_get_in ( dbg -> bp , addr , R_BP_PROT_EXEC ) != NULL ;"	1336:1:33927:33992	1206438	1	True				
ANR	1206453	IdentifierDecl	"has_bp = r_bp_get_in ( dbg -> bp , addr , R_BP_PROT_EXEC ) != NULL"		1206438	0					
ANR	1206454	IdentifierDeclType	bool		1206438	0					
ANR	1206455	Identifier	has_bp		1206438	1					
ANR	1206456	AssignmentExpression	"has_bp = r_bp_get_in ( dbg -> bp , addr , R_BP_PROT_EXEC ) != NULL"		1206438	2		=			
ANR	1206457	Identifier	has_bp		1206438	0					
ANR	1206458	EqualityExpression	"r_bp_get_in ( dbg -> bp , addr , R_BP_PROT_EXEC ) != NULL"		1206438	1		!=			
ANR	1206459	CallExpression	"r_bp_get_in ( dbg -> bp , addr , R_BP_PROT_EXEC )"		1206438	0					
ANR	1206460	Callee	r_bp_get_in		1206438	0					
ANR	1206461	Identifier	r_bp_get_in		1206438	0					
ANR	1206462	ArgumentList	dbg -> bp		1206438	1					
ANR	1206463	Argument	dbg -> bp		1206438	0					
ANR	1206464	PtrMemberAccess	dbg -> bp		1206438	0					
ANR	1206465	Identifier	dbg		1206438	0					
ANR	1206466	Identifier	bp		1206438	1					
ANR	1206467	Argument	addr		1206438	1					
ANR	1206468	Identifier	addr		1206438	0					
ANR	1206469	Argument	R_BP_PROT_EXEC		1206438	2					
ANR	1206470	Identifier	R_BP_PROT_EXEC		1206438	0					
ANR	1206471	Identifier	NULL		1206438	1					
ANR	1206472	IfStatement	if ( ! has_bp )		1206438	2					
ANR	1206473	Condition	! has_bp	1337:5:33999:34005	1206438	0	True				
ANR	1206474	UnaryOperationExpression	! has_bp		1206438	0					
ANR	1206475	UnaryOperator	!		1206438	0					
ANR	1206476	Identifier	has_bp		1206438	1					
ANR	1206477	CompoundStatement		7:14:186:186	1206438	1					
ANR	1206478	ExpressionStatement	"r_bp_add_sw ( dbg -> bp , addr , dbg -> bpsize , R_BP_PROT_EXEC )"	1338:2:34012:34068	1206438	0	True				
ANR	1206479	CallExpression	"r_bp_add_sw ( dbg -> bp , addr , dbg -> bpsize , R_BP_PROT_EXEC )"		1206438	0					
ANR	1206480	Callee	r_bp_add_sw		1206438	0					
ANR	1206481	Identifier	r_bp_add_sw		1206438	0					
ANR	1206482	ArgumentList	dbg -> bp		1206438	1					
ANR	1206483	Argument	dbg -> bp		1206438	0					
ANR	1206484	PtrMemberAccess	dbg -> bp		1206438	0					
ANR	1206485	Identifier	dbg		1206438	0					
ANR	1206486	Identifier	bp		1206438	1					
ANR	1206487	Argument	addr		1206438	1					
ANR	1206488	Identifier	addr		1206438	0					
ANR	1206489	Argument	dbg -> bpsize		1206438	2					
ANR	1206490	PtrMemberAccess	dbg -> bpsize		1206438	0					
ANR	1206491	Identifier	dbg		1206438	0					
ANR	1206492	Identifier	bpsize		1206438	1					
ANR	1206493	Argument	R_BP_PROT_EXEC		1206438	3					
ANR	1206494	Identifier	R_BP_PROT_EXEC		1206438	0					
ANR	1206495	ExpressionStatement	dbg -> reason . type = 0	1342:1:34112:34132	1206438	3	True				
ANR	1206496	AssignmentExpression	dbg -> reason . type = 0		1206438	0		=			
ANR	1206497	MemberAccess	dbg -> reason . type		1206438	0					
ANR	1206498	PtrMemberAccess	dbg -> reason		1206438	0					
ANR	1206499	Identifier	dbg		1206438	0					
ANR	1206500	Identifier	reason		1206438	1					
ANR	1206501	Identifier	type		1206438	1					
ANR	1206502	PrimaryExpression	0		1206438	1					
ANR	1206503	ForStatement	for ( ; ; )		1206438	4					
ANR	1206504	CompoundStatement		17:2:391:453	1206438	0					
ANR	1206505	IfStatement	if ( r_debug_is_dead ( dbg ) || dbg -> reason . type )		1206438	0					
ANR	1206506	Condition	r_debug_is_dead ( dbg ) || dbg -> reason . type	1344:6:34152:34192	1206438	0	True				
ANR	1206507	OrExpression	r_debug_is_dead ( dbg ) || dbg -> reason . type		1206438	0		||			
ANR	1206508	CallExpression	r_debug_is_dead ( dbg )		1206438	0					
ANR	1206509	Callee	r_debug_is_dead		1206438	0					
ANR	1206510	Identifier	r_debug_is_dead		1206438	0					
ANR	1206511	ArgumentList	dbg		1206438	1					
ANR	1206512	Argument	dbg		1206438	0					
ANR	1206513	Identifier	dbg		1206438	0					
ANR	1206514	MemberAccess	dbg -> reason . type		1206438	1					
ANR	1206515	PtrMemberAccess	dbg -> reason		1206438	0					
ANR	1206516	Identifier	dbg		1206438	0					
ANR	1206517	Identifier	reason		1206438	1					
ANR	1206518	Identifier	type		1206438	1					
ANR	1206519	CompoundStatement		14:49:373:373	1206438	1					
ANR	1206520	BreakStatement	break ;	1345:3:34200:34205	1206438	0	True				
ANR	1206521	IdentifierDeclStatement	"ut64 pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] ) ;"	1347:2:34213:34275	1206438	1	True				
ANR	1206522	IdentifierDecl	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206438	0					
ANR	1206523	IdentifierDeclType	ut64		1206438	0					
ANR	1206524	Identifier	pc		1206438	1					
ANR	1206525	AssignmentExpression	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206438	2		=			
ANR	1206526	Identifier	pc		1206438	0					
ANR	1206527	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206438	1					
ANR	1206528	Callee	r_debug_reg_get		1206438	0					
ANR	1206529	Identifier	r_debug_reg_get		1206438	0					
ANR	1206530	ArgumentList	dbg		1206438	1					
ANR	1206531	Argument	dbg		1206438	0					
ANR	1206532	Identifier	dbg		1206438	0					
ANR	1206533	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1206438	1					
ANR	1206534	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1206438	0					
ANR	1206535	PtrMemberAccess	dbg -> reg -> name		1206438	0					
ANR	1206536	PtrMemberAccess	dbg -> reg		1206438	0					
ANR	1206537	Identifier	dbg		1206438	0					
ANR	1206538	Identifier	reg		1206438	1					
ANR	1206539	Identifier	name		1206438	1					
ANR	1206540	Identifier	R_REG_NAME_PC		1206438	1					
ANR	1206541	IfStatement	if ( pc == addr )		1206438	2					
ANR	1206542	Condition	pc == addr	1348:6:34283:34292	1206438	0	True				
ANR	1206543	EqualityExpression	pc == addr		1206438	0		==			
ANR	1206544	Identifier	pc		1206438	0					
ANR	1206545	Identifier	addr		1206438	1					
ANR	1206546	CompoundStatement		18:18:473:473	1206438	1					
ANR	1206547	BreakStatement	break ;	1349:3:34300:34305	1206438	0	True				
ANR	1206548	IfStatement	"if ( block && r_bp_get_at ( dbg -> bp , pc ) )"		1206438	3					
ANR	1206549	Condition	"block && r_bp_get_at ( dbg -> bp , pc )"	1351:6:34317:34350	1206438	0	True				
ANR	1206550	AndExpression	"block && r_bp_get_at ( dbg -> bp , pc )"		1206438	0		&&			
ANR	1206551	Identifier	block		1206438	0					
ANR	1206552	CallExpression	"r_bp_get_at ( dbg -> bp , pc )"		1206438	1					
ANR	1206553	Callee	r_bp_get_at		1206438	0					
ANR	1206554	Identifier	r_bp_get_at		1206438	0					
ANR	1206555	ArgumentList	dbg -> bp		1206438	1					
ANR	1206556	Argument	dbg -> bp		1206438	0					
ANR	1206557	PtrMemberAccess	dbg -> bp		1206438	0					
ANR	1206558	Identifier	dbg		1206438	0					
ANR	1206559	Identifier	bp		1206438	1					
ANR	1206560	Argument	pc		1206438	1					
ANR	1206561	Identifier	pc		1206438	0					
ANR	1206562	CompoundStatement		21:42:531:531	1206438	1					
ANR	1206563	BreakStatement	break ;	1352:3:34358:34363	1206438	0	True				
ANR	1206564	ExpressionStatement	r_debug_continue ( dbg )	1354:2:34371:34393	1206438	4	True				
ANR	1206565	CallExpression	r_debug_continue ( dbg )		1206438	0					
ANR	1206566	Callee	r_debug_continue		1206438	0					
ANR	1206567	Identifier	r_debug_continue		1206438	0					
ANR	1206568	ArgumentList	dbg		1206438	1					
ANR	1206569	Argument	dbg		1206438	0					
ANR	1206570	Identifier	dbg		1206438	0					
ANR	1206571	IfStatement	if ( ! has_bp )		1206438	5					
ANR	1206572	Condition	! has_bp	1357:5:34426:34432	1206438	0	True				
ANR	1206573	UnaryOperationExpression	! has_bp		1206438	0					
ANR	1206574	UnaryOperator	!		1206438	0					
ANR	1206575	Identifier	has_bp		1206438	1					
ANR	1206576	CompoundStatement		27:14:613:613	1206438	1					
ANR	1206577	ExpressionStatement	"r_bp_del ( dbg -> bp , addr )"	1358:2:34439:34463	1206438	0	True				
ANR	1206578	CallExpression	"r_bp_del ( dbg -> bp , addr )"		1206438	0					
ANR	1206579	Callee	r_bp_del		1206438	0					
ANR	1206580	Identifier	r_bp_del		1206438	0					
ANR	1206581	ArgumentList	dbg -> bp		1206438	1					
ANR	1206582	Argument	dbg -> bp		1206438	0					
ANR	1206583	PtrMemberAccess	dbg -> bp		1206438	0					
ANR	1206584	Identifier	dbg		1206438	0					
ANR	1206585	Identifier	bp		1206438	1					
ANR	1206586	Argument	addr		1206438	1					
ANR	1206587	Identifier	addr		1206438	0					
ANR	1206588	ReturnStatement	return true ;	1360:1:34469:34480	1206438	6	True				
ANR	1206589	Identifier	true		1206438	0					
ANR	1206590	ReturnType	static int		1206438	1					
ANR	1206591	Identifier	r_debug_continue_until_internal		1206438	2					
ANR	1206592	ParameterList	"RDebug * dbg , ut64 addr , bool block"		1206438	3					
ANR	1206593	Parameter	RDebug * dbg	1331:43:33785:33795	1206438	0	True				
ANR	1206594	ParameterType	RDebug *		1206438	0					
ANR	1206595	Identifier	dbg		1206438	1					
ANR	1206596	Parameter	ut64 addr	1331:56:33798:33806	1206438	1	True				
ANR	1206597	ParameterType	ut64		1206438	0					
ANR	1206598	Identifier	addr		1206438	1					
ANR	1206599	Parameter	bool block	1331:67:33809:33818	1206438	2	True				
ANR	1206600	ParameterType	bool		1206438	0					
ANR	1206601	Identifier	block		1206438	1					
ANR	1206602	CFGEntryNode	ENTRY		1206438		True				
ANR	1206603	CFGExitNode	EXIT		1206438		True				
ANR	1206604	InfiniteForNode	true		1206438		True				
ANR	1206605	Symbol	R_REG_NAME_PC		1206438						
ANR	1206606	Symbol	r_debug_reg_get		1206438						
ANR	1206607	Symbol	r_bp_get_at		1206438						
ANR	1206608	Symbol	* dbg -> reg -> name		1206438						
ANR	1206609	Symbol	dbg -> reason . type		1206438						
ANR	1206610	Symbol	has_bp		1206438						
ANR	1206611	Symbol	block		1206438						
ANR	1206612	Symbol	* R_REG_NAME_PC		1206438						
ANR	1206613	Symbol	addr		1206438						
ANR	1206614	Symbol	NULL		1206438						
ANR	1206615	Symbol	dbg -> reason		1206438						
ANR	1206616	Symbol	dbg -> bp		1206438						
ANR	1206617	Symbol	* * * dbg		1206438						
ANR	1206618	Symbol	dbg		1206438						
ANR	1206619	Symbol	false		1206438						
ANR	1206620	Symbol	* dbg		1206438						
ANR	1206621	Symbol	* * dbg -> reg		1206438						
ANR	1206622	Symbol	* dbg -> reg		1206438						
ANR	1206623	Symbol	r_debug_is_dead		1206438						
ANR	1206624	Symbol	dbg -> bpsize		1206438						
ANR	1206625	Symbol	pc		1206438						
ANR	1206626	Symbol	R_BP_PROT_EXEC		1206438						
ANR	1206627	Symbol	r_bp_get_in		1206438						
ANR	1206628	Symbol	true		1206438						
ANR	1206629	Symbol	dbg -> reg		1206438						
ANR	1206630	Symbol	* * dbg		1206438						
ANR	1206631	Symbol	dbg -> reg -> name		1206438						
ANR	1206632	Function	r_debug_continue_until	1363:0:34485:34603							
ANR	1206633	FunctionDef	"r_debug_continue_until (RDebug * dbg , ut64 addr)"		1206632	0					
ANR	1206634	CompoundStatement		1363:57:34542:34603	1206632	0					
ANR	1206635	ReturnStatement	"return r_debug_continue_until_internal ( dbg , addr , true ) ;"	1364:1:34545:34601	1206632	0	True				
ANR	1206636	CallExpression	"r_debug_continue_until_internal ( dbg , addr , true )"		1206632	0					
ANR	1206637	Callee	r_debug_continue_until_internal		1206632	0					
ANR	1206638	Identifier	r_debug_continue_until_internal		1206632	0					
ANR	1206639	ArgumentList	dbg		1206632	1					
ANR	1206640	Argument	dbg		1206632	0					
ANR	1206641	Identifier	dbg		1206632	0					
ANR	1206642	Argument	addr		1206632	1					
ANR	1206643	Identifier	addr		1206632	0					
ANR	1206644	Argument	true		1206632	2					
ANR	1206645	Identifier	true		1206632	0					
ANR	1206646	ReturnType	R_API int		1206632	1					
ANR	1206647	Identifier	r_debug_continue_until		1206632	2					
ANR	1206648	ParameterList	"RDebug * dbg , ut64 addr"		1206632	3					
ANR	1206649	Parameter	RDebug * dbg	1363:33:34518:34528	1206632	0	True				
ANR	1206650	ParameterType	RDebug *		1206632	0					
ANR	1206651	Identifier	dbg		1206632	1					
ANR	1206652	Parameter	ut64 addr	1363:46:34531:34539	1206632	1	True				
ANR	1206653	ParameterType	ut64		1206632	0					
ANR	1206654	Identifier	addr		1206632	1					
ANR	1206655	CFGEntryNode	ENTRY		1206632		True				
ANR	1206656	CFGExitNode	EXIT		1206632		True				
ANR	1206657	Symbol	dbg		1206632						
ANR	1206658	Symbol	true		1206632						
ANR	1206659	Symbol	r_debug_continue_until_internal		1206632						
ANR	1206660	Symbol	addr		1206632						
ANR	1206661	Function	r_debug_continue_until_nonblock	1367:0:34606:34734							
ANR	1206662	FunctionDef	"r_debug_continue_until_nonblock (RDebug * dbg , ut64 addr)"		1206661	0					
ANR	1206663	CompoundStatement		1367:66:34672:34734	1206661	0					
ANR	1206664	ReturnStatement	"return r_debug_continue_until_internal ( dbg , addr , false ) ;"	1368:1:34675:34732	1206661	0	True				
ANR	1206665	CallExpression	"r_debug_continue_until_internal ( dbg , addr , false )"		1206661	0					
ANR	1206666	Callee	r_debug_continue_until_internal		1206661	0					
ANR	1206667	Identifier	r_debug_continue_until_internal		1206661	0					
ANR	1206668	ArgumentList	dbg		1206661	1					
ANR	1206669	Argument	dbg		1206661	0					
ANR	1206670	Identifier	dbg		1206661	0					
ANR	1206671	Argument	addr		1206661	1					
ANR	1206672	Identifier	addr		1206661	0					
ANR	1206673	Argument	false		1206661	2					
ANR	1206674	Identifier	false		1206661	0					
ANR	1206675	ReturnType	R_API int		1206661	1					
ANR	1206676	Identifier	r_debug_continue_until_nonblock		1206661	2					
ANR	1206677	ParameterList	"RDebug * dbg , ut64 addr"		1206661	3					
ANR	1206678	Parameter	RDebug * dbg	1367:42:34648:34658	1206661	0	True				
ANR	1206679	ParameterType	RDebug *		1206661	0					
ANR	1206680	Identifier	dbg		1206661	1					
ANR	1206681	Parameter	ut64 addr	1367:55:34661:34669	1206661	1	True				
ANR	1206682	ParameterType	ut64		1206661	0					
ANR	1206683	Identifier	addr		1206661	1					
ANR	1206684	CFGEntryNode	ENTRY		1206661		True				
ANR	1206685	CFGExitNode	EXIT		1206661		True				
ANR	1206686	Symbol	dbg		1206661						
ANR	1206687	Symbol	false		1206661						
ANR	1206688	Symbol	r_debug_continue_until_internal		1206661						
ANR	1206689	Symbol	addr		1206661						
ANR	1206690	Function	r_debug_continue_back	1371:0:34737:36536							
ANR	1206691	FunctionDef	r_debug_continue_back (RDebug * dbg)		1206690	0					
ANR	1206692	CompoundStatement		1371:46:34783:36536	1206690	0					
ANR	1206693	IdentifierDeclStatement	RBreakpointItem * prev = NULL ;	1372:1:34786:34814	1206690	0	True				
ANR	1206694	IdentifierDecl	* prev = NULL		1206690	0					
ANR	1206695	IdentifierDeclType	RBreakpointItem *		1206690	0					
ANR	1206696	Identifier	prev		1206690	1					
ANR	1206697	AssignmentExpression	* prev = NULL		1206690	2		=			
ANR	1206698	Identifier	NULL		1206690	0					
ANR	1206699	Identifier	NULL		1206690	1					
ANR	1206700	IdentifierDeclStatement	ut64 pc ;	1373:1:34817:34824	1206690	1	True				
ANR	1206701	IdentifierDecl	pc		1206690	0					
ANR	1206702	IdentifierDeclType	ut64		1206690	0					
ANR	1206703	Identifier	pc		1206690	1					
ANR	1206704	IfStatement	if ( ! dbg )		1206690	2					
ANR	1206705	Condition	! dbg	1374:5:34831:34834	1206690	0	True				
ANR	1206706	UnaryOperationExpression	! dbg		1206690	0					
ANR	1206707	UnaryOperator	!		1206690	0					
ANR	1206708	Identifier	dbg		1206690	1					
ANR	1206709	CompoundStatement		4:11:53:53	1206690	1					
ANR	1206710	ReturnStatement	return false ;	1375:2:34841:34853	1206690	0	True				
ANR	1206711	Identifier	false		1206690	0					
ANR	1206712	IfStatement	if ( ! dbg -> anal || ! dbg -> reg )		1206690	3					
ANR	1206713	Condition	! dbg -> anal || ! dbg -> reg	1377:5:34863:34885	1206690	0	True				
ANR	1206714	OrExpression	! dbg -> anal || ! dbg -> reg		1206690	0		||			
ANR	1206715	UnaryOperationExpression	! dbg -> anal		1206690	0					
ANR	1206716	UnaryOperator	!		1206690	0					
ANR	1206717	PtrMemberAccess	dbg -> anal		1206690	1					
ANR	1206718	Identifier	dbg		1206690	0					
ANR	1206719	Identifier	anal		1206690	1					
ANR	1206720	UnaryOperationExpression	! dbg -> reg		1206690	1					
ANR	1206721	UnaryOperator	!		1206690	0					
ANR	1206722	PtrMemberAccess	dbg -> reg		1206690	1					
ANR	1206723	Identifier	dbg		1206690	0					
ANR	1206724	Identifier	reg		1206690	1					
ANR	1206725	CompoundStatement		7:30:104:104	1206690	1					
ANR	1206726	ReturnStatement	return false ;	1378:2:34892:34904	1206690	0	True				
ANR	1206727	Identifier	false		1206690	0					
ANR	1206728	IfStatement	if ( r_debug_is_dead ( dbg ) )		1206690	4					
ANR	1206729	Condition	r_debug_is_dead ( dbg )	1380:5:34914:34934	1206690	0	True				
ANR	1206730	CallExpression	r_debug_is_dead ( dbg )		1206690	0					
ANR	1206731	Callee	r_debug_is_dead		1206690	0					
ANR	1206732	Identifier	r_debug_is_dead		1206690	0					
ANR	1206733	ArgumentList	dbg		1206690	1					
ANR	1206734	Argument	dbg		1206690	0					
ANR	1206735	Identifier	dbg		1206690	0					
ANR	1206736	CompoundStatement		10:28:153:153	1206690	1					
ANR	1206737	ReturnStatement	return false ;	1381:2:34941:34953	1206690	0	True				
ANR	1206738	Identifier	false		1206690	0					
ANR	1206739	IfStatement	if ( r_list_empty ( dbg -> sessions ) )		1206690	5					
ANR	1206740	Condition	r_list_empty ( dbg -> sessions )	1383:5:34963:34990	1206690	0	True				
ANR	1206741	CallExpression	r_list_empty ( dbg -> sessions )		1206690	0					
ANR	1206742	Callee	r_list_empty		1206690	0					
ANR	1206743	Identifier	r_list_empty		1206690	0					
ANR	1206744	ArgumentList	dbg -> sessions		1206690	1					
ANR	1206745	Argument	dbg -> sessions		1206690	0					
ANR	1206746	PtrMemberAccess	dbg -> sessions		1206690	0					
ANR	1206747	Identifier	dbg		1206690	0					
ANR	1206748	Identifier	sessions		1206690	1					
ANR	1206749	CompoundStatement		13:35:209:209	1206690	1					
ANR	1206750	ReturnStatement	return false ;	1384:2:34997:35009	1206690	0	True				
ANR	1206751	Identifier	false		1206690	0					
ANR	1206752	IfStatement	if ( ! dbg -> sessions )		1206690	6					
ANR	1206753	Condition	! dbg -> sessions	1387:5:35020:35033	1206690	0	True				
ANR	1206754	UnaryOperationExpression	! dbg -> sessions		1206690	0					
ANR	1206755	UnaryOperator	!		1206690	0					
ANR	1206756	PtrMemberAccess	dbg -> sessions		1206690	1					
ANR	1206757	Identifier	dbg		1206690	0					
ANR	1206758	Identifier	sessions		1206690	1					
ANR	1206759	CompoundStatement		17:21:252:252	1206690	1					
ANR	1206760	ReturnStatement	return false ;	1388:2:35040:35052	1206690	0	True				
ANR	1206761	Identifier	false		1206690	0					
ANR	1206762	IdentifierDeclStatement	RListIter * iter = dbg -> sessions -> head ;	1391:1:35084:35121	1206690	7	True				
ANR	1206763	IdentifierDecl	* iter = dbg -> sessions -> head		1206690	0					
ANR	1206764	IdentifierDeclType	RListIter *		1206690	0					
ANR	1206765	Identifier	iter		1206690	1					
ANR	1206766	AssignmentExpression	* iter = dbg -> sessions -> head		1206690	2		=			
ANR	1206767	Identifier	iter		1206690	0					
ANR	1206768	PtrMemberAccess	dbg -> sessions -> head		1206690	1					
ANR	1206769	PtrMemberAccess	dbg -> sessions		1206690	0					
ANR	1206770	Identifier	dbg		1206690	0					
ANR	1206771	Identifier	sessions		1206690	1					
ANR	1206772	Identifier	head		1206690	1					
ANR	1206773	IfStatement	if ( ! iter || ! iter -> data )		1206690	8					
ANR	1206774	Condition	! iter || ! iter -> data	1392:5:35128:35147	1206690	0	True				
ANR	1206775	OrExpression	! iter || ! iter -> data		1206690	0		||			
ANR	1206776	UnaryOperationExpression	! iter		1206690	0					
ANR	1206777	UnaryOperator	!		1206690	0					
ANR	1206778	Identifier	iter		1206690	1					
ANR	1206779	UnaryOperationExpression	! iter -> data		1206690	1					
ANR	1206780	UnaryOperator	!		1206690	0					
ANR	1206781	PtrMemberAccess	iter -> data		1206690	1					
ANR	1206782	Identifier	iter		1206690	0					
ANR	1206783	Identifier	data		1206690	1					
ANR	1206784	CompoundStatement		22:27:366:366	1206690	1					
ANR	1206785	ReturnStatement	return false ;	1393:2:35154:35166	1206690	0	True				
ANR	1206786	Identifier	false		1206690	0					
ANR	1206787	IdentifierDeclStatement	RDebugSession * before = iter -> data ;	1395:1:35172:35206	1206690	9	True				
ANR	1206788	IdentifierDecl	* before = iter -> data		1206690	0					
ANR	1206789	IdentifierDeclType	RDebugSession *		1206690	0					
ANR	1206790	Identifier	before		1206690	1					
ANR	1206791	AssignmentExpression	* before = iter -> data		1206690	2		=			
ANR	1206792	Identifier	before		1206690	0					
ANR	1206793	PtrMemberAccess	iter -> data		1206690	1					
ANR	1206794	Identifier	iter		1206690	0					
ANR	1206795	Identifier	data		1206690	1					
ANR	1206796	IdentifierDeclStatement	"ut64 end_addr = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] ) ;"	1396:1:35245:35313	1206690	10	True				
ANR	1206797	IdentifierDecl	"end_addr = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206690	0					
ANR	1206798	IdentifierDeclType	ut64		1206690	0					
ANR	1206799	Identifier	end_addr		1206690	1					
ANR	1206800	AssignmentExpression	"end_addr = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206690	2		=			
ANR	1206801	Identifier	end_addr		1206690	0					
ANR	1206802	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206690	1					
ANR	1206803	Callee	r_debug_reg_get		1206690	0					
ANR	1206804	Identifier	r_debug_reg_get		1206690	0					
ANR	1206805	ArgumentList	dbg		1206690	1					
ANR	1206806	Argument	dbg		1206690	0					
ANR	1206807	Identifier	dbg		1206690	0					
ANR	1206808	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1206690	1					
ANR	1206809	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1206690	0					
ANR	1206810	PtrMemberAccess	dbg -> reg -> name		1206690	0					
ANR	1206811	PtrMemberAccess	dbg -> reg		1206690	0					
ANR	1206812	Identifier	dbg		1206690	0					
ANR	1206813	Identifier	reg		1206690	1					
ANR	1206814	Identifier	name		1206690	1					
ANR	1206815	Identifier	R_REG_NAME_PC		1206690	1					
ANR	1206816	ExpressionStatement	"r_debug_session_set ( dbg , before )"	1400:1:35468:35501	1206690	11	True				
ANR	1206817	CallExpression	"r_debug_session_set ( dbg , before )"		1206690	0					
ANR	1206818	Callee	r_debug_session_set		1206690	0					
ANR	1206819	Identifier	r_debug_session_set		1206690	0					
ANR	1206820	ArgumentList	dbg		1206690	1					
ANR	1206821	Argument	dbg		1206690	0					
ANR	1206822	Identifier	dbg		1206690	0					
ANR	1206823	Argument	before		1206690	1					
ANR	1206824	Identifier	before		1206690	0					
ANR	1206825	IdentifierDeclStatement	"bool has_bp = r_bp_get_in ( dbg -> bp , end_addr , R_BP_PROT_EXEC ) != NULL ;"	1404:1:35590:35659	1206690	12	True				
ANR	1206826	IdentifierDecl	"has_bp = r_bp_get_in ( dbg -> bp , end_addr , R_BP_PROT_EXEC ) != NULL"		1206690	0					
ANR	1206827	IdentifierDeclType	bool		1206690	0					
ANR	1206828	Identifier	has_bp		1206690	1					
ANR	1206829	AssignmentExpression	"has_bp = r_bp_get_in ( dbg -> bp , end_addr , R_BP_PROT_EXEC ) != NULL"		1206690	2		=			
ANR	1206830	Identifier	has_bp		1206690	0					
ANR	1206831	EqualityExpression	"r_bp_get_in ( dbg -> bp , end_addr , R_BP_PROT_EXEC ) != NULL"		1206690	1		!=			
ANR	1206832	CallExpression	"r_bp_get_in ( dbg -> bp , end_addr , R_BP_PROT_EXEC )"		1206690	0					
ANR	1206833	Callee	r_bp_get_in		1206690	0					
ANR	1206834	Identifier	r_bp_get_in		1206690	0					
ANR	1206835	ArgumentList	dbg -> bp		1206690	1					
ANR	1206836	Argument	dbg -> bp		1206690	0					
ANR	1206837	PtrMemberAccess	dbg -> bp		1206690	0					
ANR	1206838	Identifier	dbg		1206690	0					
ANR	1206839	Identifier	bp		1206690	1					
ANR	1206840	Argument	end_addr		1206690	1					
ANR	1206841	Identifier	end_addr		1206690	0					
ANR	1206842	Argument	R_BP_PROT_EXEC		1206690	2					
ANR	1206843	Identifier	R_BP_PROT_EXEC		1206690	0					
ANR	1206844	Identifier	NULL		1206690	1					
ANR	1206845	IfStatement	if ( ! has_bp )		1206690	13					
ANR	1206846	Condition	! has_bp	1405:5:35666:35672	1206690	0	True				
ANR	1206847	UnaryOperationExpression	! has_bp		1206690	0					
ANR	1206848	UnaryOperator	!		1206690	0					
ANR	1206849	Identifier	has_bp		1206690	1					
ANR	1206850	CompoundStatement		35:14:891:891	1206690	1					
ANR	1206851	ExpressionStatement	"r_bp_add_sw ( dbg -> bp , end_addr , dbg -> bpsize , R_BP_PROT_EXEC )"	1406:2:35679:35739	1206690	0	True				
ANR	1206852	CallExpression	"r_bp_add_sw ( dbg -> bp , end_addr , dbg -> bpsize , R_BP_PROT_EXEC )"		1206690	0					
ANR	1206853	Callee	r_bp_add_sw		1206690	0					
ANR	1206854	Identifier	r_bp_add_sw		1206690	0					
ANR	1206855	ArgumentList	dbg -> bp		1206690	1					
ANR	1206856	Argument	dbg -> bp		1206690	0					
ANR	1206857	PtrMemberAccess	dbg -> bp		1206690	0					
ANR	1206858	Identifier	dbg		1206690	0					
ANR	1206859	Identifier	bp		1206690	1					
ANR	1206860	Argument	end_addr		1206690	1					
ANR	1206861	Identifier	end_addr		1206690	0					
ANR	1206862	Argument	dbg -> bpsize		1206690	2					
ANR	1206863	PtrMemberAccess	dbg -> bpsize		1206690	0					
ANR	1206864	Identifier	dbg		1206690	0					
ANR	1206865	Identifier	bpsize		1206690	1					
ANR	1206866	Argument	R_BP_PROT_EXEC		1206690	3					
ANR	1206867	Identifier	R_BP_PROT_EXEC		1206690	0					
ANR	1206868	ForStatement	for ( ; ; )		1206690	14					
ANR	1206869	CompoundStatement		40:10:999:999	1206690	0					
ANR	1206870	IfStatement	if ( r_debug_is_dead ( dbg ) )		1206690	0					
ANR	1206871	Condition	r_debug_is_dead ( dbg )	1411:6:35791:35811	1206690	0	True				
ANR	1206872	CallExpression	r_debug_is_dead ( dbg )		1206690	0					
ANR	1206873	Callee	r_debug_is_dead		1206690	0					
ANR	1206874	Identifier	r_debug_is_dead		1206690	0					
ANR	1206875	ArgumentList	dbg		1206690	1					
ANR	1206876	Argument	dbg		1206690	0					
ANR	1206877	Identifier	dbg		1206690	0					
ANR	1206878	CompoundStatement		41:29:1030:1030	1206690	1					
ANR	1206879	BreakStatement	break ;	1412:3:35819:35824	1206690	0	True				
ANR	1206880	ExpressionStatement	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"	1414:2:35832:35889	1206690	1	True				
ANR	1206881	AssignmentExpression	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206690	0		=			
ANR	1206882	Identifier	pc		1206690	0					
ANR	1206883	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206690	1					
ANR	1206884	Callee	r_debug_reg_get		1206690	0					
ANR	1206885	Identifier	r_debug_reg_get		1206690	0					
ANR	1206886	ArgumentList	dbg		1206690	1					
ANR	1206887	Argument	dbg		1206690	0					
ANR	1206888	Identifier	dbg		1206690	0					
ANR	1206889	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1206690	1					
ANR	1206890	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1206690	0					
ANR	1206891	PtrMemberAccess	dbg -> reg -> name		1206690	0					
ANR	1206892	PtrMemberAccess	dbg -> reg		1206690	0					
ANR	1206893	Identifier	dbg		1206690	0					
ANR	1206894	Identifier	reg		1206690	1					
ANR	1206895	Identifier	name		1206690	1					
ANR	1206896	Identifier	R_REG_NAME_PC		1206690	1					
ANR	1206897	IfStatement	if ( pc == end_addr )		1206690	2					
ANR	1206898	Condition	pc == end_addr	1415:6:35897:35910	1206690	0	True				
ANR	1206899	EqualityExpression	pc == end_addr		1206690	0		==			
ANR	1206900	Identifier	pc		1206690	0					
ANR	1206901	Identifier	end_addr		1206690	1					
ANR	1206902	CompoundStatement		45:22:1129:1129	1206690	1					
ANR	1206903	BreakStatement	break ;	1416:3:35918:35923	1206690	0	True				
ANR	1206904	ExpressionStatement	"prev = r_bp_get_at ( dbg -> bp , pc )"	1418:2:35931:35963	1206690	3	True				
ANR	1206905	AssignmentExpression	"prev = r_bp_get_at ( dbg -> bp , pc )"		1206690	0		=			
ANR	1206906	Identifier	prev		1206690	0					
ANR	1206907	CallExpression	"r_bp_get_at ( dbg -> bp , pc )"		1206690	1					
ANR	1206908	Callee	r_bp_get_at		1206690	0					
ANR	1206909	Identifier	r_bp_get_at		1206690	0					
ANR	1206910	ArgumentList	dbg -> bp		1206690	1					
ANR	1206911	Argument	dbg -> bp		1206690	0					
ANR	1206912	PtrMemberAccess	dbg -> bp		1206690	0					
ANR	1206913	Identifier	dbg		1206690	0					
ANR	1206914	Identifier	bp		1206690	1					
ANR	1206915	Argument	pc		1206690	1					
ANR	1206916	Identifier	pc		1206690	0					
ANR	1206917	ExpressionStatement	r_debug_continue ( dbg )	1419:2:35967:35989	1206690	4	True				
ANR	1206918	CallExpression	r_debug_continue ( dbg )		1206690	0					
ANR	1206919	Callee	r_debug_continue		1206690	0					
ANR	1206920	Identifier	r_debug_continue		1206690	0					
ANR	1206921	ArgumentList	dbg		1206690	1					
ANR	1206922	Argument	dbg		1206690	0					
ANR	1206923	Identifier	dbg		1206690	0					
ANR	1206924	IfStatement	if ( ! has_bp )		1206690	15					
ANR	1206925	Condition	! has_bp	1422:5:36022:36028	1206690	0	True				
ANR	1206926	UnaryOperationExpression	! has_bp		1206690	0					
ANR	1206927	UnaryOperator	!		1206690	0					
ANR	1206928	Identifier	has_bp		1206690	1					
ANR	1206929	CompoundStatement		52:14:1247:1247	1206690	1					
ANR	1206930	ExpressionStatement	"r_bp_del ( dbg -> bp , end_addr )"	1423:2:36035:36063	1206690	0	True				
ANR	1206931	CallExpression	"r_bp_del ( dbg -> bp , end_addr )"		1206690	0					
ANR	1206932	Callee	r_bp_del		1206690	0					
ANR	1206933	Identifier	r_bp_del		1206690	0					
ANR	1206934	ArgumentList	dbg -> bp		1206690	1					
ANR	1206935	Argument	dbg -> bp		1206690	0					
ANR	1206936	PtrMemberAccess	dbg -> bp		1206690	0					
ANR	1206937	Identifier	dbg		1206690	0					
ANR	1206938	Identifier	bp		1206690	1					
ANR	1206939	Argument	end_addr		1206690	1					
ANR	1206940	Identifier	end_addr		1206690	0					
ANR	1206941	IfStatement	if ( ! prev )		1206690	16					
ANR	1206942	Condition	! prev	1425:5:36073:36077	1206690	0	True				
ANR	1206943	UnaryOperationExpression	! prev		1206690	0					
ANR	1206944	UnaryOperator	!		1206690	0					
ANR	1206945	Identifier	prev		1206690	1					
ANR	1206946	CompoundStatement		55:12:1296:1296	1206690	1					
ANR	1206947	ReturnStatement	return false ;	1426:2:36084:36096	1206690	0	True				
ANR	1206948	Identifier	false		1206690	0					
ANR	1206949	ExpressionStatement	"r_debug_session_set ( dbg , before )"	1433:1:36283:36316	1206690	17	True				
ANR	1206950	CallExpression	"r_debug_session_set ( dbg , before )"		1206690	0					
ANR	1206951	Callee	r_debug_session_set		1206690	0					
ANR	1206952	Identifier	r_debug_session_set		1206690	0					
ANR	1206953	ArgumentList	dbg		1206690	1					
ANR	1206954	Argument	dbg		1206690	0					
ANR	1206955	Identifier	dbg		1206690	0					
ANR	1206956	Argument	before		1206690	1					
ANR	1206957	Identifier	before		1206690	0					
ANR	1206958	ForStatement	for ( ; ; )		1206690	18					
ANR	1206959	CompoundStatement		64:10:1544:1544	1206690	0					
ANR	1206960	IfStatement	if ( r_debug_is_dead ( dbg ) )		1206690	0					
ANR	1206961	Condition	r_debug_is_dead ( dbg )	1435:6:36336:36356	1206690	0	True				
ANR	1206962	CallExpression	r_debug_is_dead ( dbg )		1206690	0					
ANR	1206963	Callee	r_debug_is_dead		1206690	0					
ANR	1206964	Identifier	r_debug_is_dead		1206690	0					
ANR	1206965	ArgumentList	dbg		1206690	1					
ANR	1206966	Argument	dbg		1206690	0					
ANR	1206967	Identifier	dbg		1206690	0					
ANR	1206968	CompoundStatement		65:29:1575:1575	1206690	1					
ANR	1206969	BreakStatement	break ;	1436:3:36364:36369	1206690	0	True				
ANR	1206970	ExpressionStatement	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"	1438:2:36377:36434	1206690	1	True				
ANR	1206971	AssignmentExpression	"pc = r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206690	0		=			
ANR	1206972	Identifier	pc		1206690	0					
ANR	1206973	CallExpression	"r_debug_reg_get ( dbg , dbg -> reg -> name [ R_REG_NAME_PC ] )"		1206690	1					
ANR	1206974	Callee	r_debug_reg_get		1206690	0					
ANR	1206975	Identifier	r_debug_reg_get		1206690	0					
ANR	1206976	ArgumentList	dbg		1206690	1					
ANR	1206977	Argument	dbg		1206690	0					
ANR	1206978	Identifier	dbg		1206690	0					
ANR	1206979	Argument	dbg -> reg -> name [ R_REG_NAME_PC ]		1206690	1					
ANR	1206980	ArrayIndexing	dbg -> reg -> name [ R_REG_NAME_PC ]		1206690	0					
ANR	1206981	PtrMemberAccess	dbg -> reg -> name		1206690	0					
ANR	1206982	PtrMemberAccess	dbg -> reg		1206690	0					
ANR	1206983	Identifier	dbg		1206690	0					
ANR	1206984	Identifier	reg		1206690	1					
ANR	1206985	Identifier	name		1206690	1					
ANR	1206986	Identifier	R_REG_NAME_PC		1206690	1					
ANR	1206987	IfStatement	"if ( prev == r_bp_get_at ( dbg -> bp , pc ) )"		1206690	2					
ANR	1206988	Condition	"prev == r_bp_get_at ( dbg -> bp , pc )"	1439:6:36442:36474	1206690	0	True				
ANR	1206989	EqualityExpression	"prev == r_bp_get_at ( dbg -> bp , pc )"		1206690	0		==			
ANR	1206990	Identifier	prev		1206690	0					
ANR	1206991	CallExpression	"r_bp_get_at ( dbg -> bp , pc )"		1206690	1					
ANR	1206992	Callee	r_bp_get_at		1206690	0					
ANR	1206993	Identifier	r_bp_get_at		1206690	0					
ANR	1206994	ArgumentList	dbg -> bp		1206690	1					
ANR	1206995	Argument	dbg -> bp		1206690	0					
ANR	1206996	PtrMemberAccess	dbg -> bp		1206690	0					
ANR	1206997	Identifier	dbg		1206690	0					
ANR	1206998	Identifier	bp		1206690	1					
ANR	1206999	Argument	pc		1206690	1					
ANR	1207000	Identifier	pc		1206690	0					
ANR	1207001	CompoundStatement		69:41:1693:1693	1206690	1					
ANR	1207002	BreakStatement	break ;	1440:3:36482:36487	1206690	0	True				
ANR	1207003	ExpressionStatement	r_debug_continue ( dbg )	1442:2:36495:36517	1206690	3	True				
ANR	1207004	CallExpression	r_debug_continue ( dbg )		1206690	0					
ANR	1207005	Callee	r_debug_continue		1206690	0					
ANR	1207006	Identifier	r_debug_continue		1206690	0					
ANR	1207007	ArgumentList	dbg		1206690	1					
ANR	1207008	Argument	dbg		1206690	0					
ANR	1207009	Identifier	dbg		1206690	0					
ANR	1207010	ReturnStatement	return true ;	1444:1:36523:36534	1206690	19	True				
ANR	1207011	Identifier	true		1206690	0					
ANR	1207012	ReturnType	R_API bool		1206690	1					
ANR	1207013	Identifier	r_debug_continue_back		1206690	2					
ANR	1207014	ParameterList	RDebug * dbg		1206690	3					
ANR	1207015	Parameter	RDebug * dbg	1371:33:34770:34780	1206690	0	True				
ANR	1207016	ParameterType	RDebug *		1206690	0					
ANR	1207017	Identifier	dbg		1206690	1					
ANR	1207018	CFGEntryNode	ENTRY		1206690		True				
ANR	1207019	CFGExitNode	EXIT		1206690		True				
ANR	1207020	InfiniteForNode	true		1206690		True				
ANR	1207021	InfiniteForNode	true		1206690		True				
ANR	1207022	Symbol	end_addr		1206690						
ANR	1207023	Symbol	before		1206690						
ANR	1207024	Symbol	R_REG_NAME_PC		1206690						
ANR	1207025	Symbol	prev		1206690						
ANR	1207026	Symbol	r_debug_reg_get		1206690						
ANR	1207027	Symbol	r_bp_get_at		1206690						
ANR	1207028	Symbol	* dbg -> reg -> name		1206690						
ANR	1207029	Symbol	* iter		1206690						
ANR	1207030	Symbol	* dbg -> sessions		1206690						
ANR	1207031	Symbol	has_bp		1206690						
ANR	1207032	Symbol	* R_REG_NAME_PC		1206690						
ANR	1207033	Symbol	NULL		1206690						
ANR	1207034	Symbol	dbg -> sessions -> head		1206690						
ANR	1207035	Symbol	dbg -> bp		1206690						
ANR	1207036	Symbol	dbg -> anal		1206690						
ANR	1207037	Symbol	dbg -> sessions		1206690						
ANR	1207038	Symbol	* * * dbg		1206690						
ANR	1207039	Symbol	dbg		1206690						
ANR	1207040	Symbol	false		1206690						
ANR	1207041	Symbol	iter		1206690						
ANR	1207042	Symbol	* dbg		1206690						
ANR	1207043	Symbol	* * dbg -> reg		1206690						
ANR	1207044	Symbol	* dbg -> reg		1206690						
ANR	1207045	Symbol	r_debug_is_dead		1206690						
ANR	1207046	Symbol	pc		1206690						
ANR	1207047	Symbol	dbg -> bpsize		1206690						
ANR	1207048	Symbol	R_BP_PROT_EXEC		1206690						
ANR	1207049	Symbol	r_bp_get_in		1206690						
ANR	1207050	Symbol	true		1206690						
ANR	1207051	Symbol	r_list_empty		1206690						
ANR	1207052	Symbol	dbg -> reg		1206690						
ANR	1207053	Symbol	iter -> data		1206690						
ANR	1207054	Symbol	* * dbg		1206690						
ANR	1207055	Symbol	dbg -> reg -> name		1206690						
ANR	1207056	Function	show_syscall	1447:0:36539:37360							
ANR	1207057	FunctionDef	"show_syscall (RDebug * dbg , const char * sysreg)"		1207056	0					
ANR	1207058	CompoundStatement		1447:57:36596:37360	1207056	0					
ANR	1207059	IdentifierDeclStatement	const char * sysname ;	1448:1:36599:36618	1207056	0	True				
ANR	1207060	IdentifierDecl	* sysname		1207056	0					
ANR	1207061	IdentifierDeclType	const char *		1207056	0					
ANR	1207062	Identifier	sysname		1207056	1					
ANR	1207063	IdentifierDeclStatement	char regname [ 32 ] ;	1449:1:36621:36637	1207056	1	True				
ANR	1207064	IdentifierDecl	regname [ 32 ]		1207056	0					
ANR	1207065	IdentifierDeclType	char [ 32 ]		1207056	0					
ANR	1207066	Identifier	regname		1207056	1					
ANR	1207067	PrimaryExpression	32		1207056	2					
ANR	1207068	IdentifierDeclStatement	"int reg , i , args ;"	1450:1:36640:36656	1207056	2	True				
ANR	1207069	IdentifierDecl	reg		1207056	0					
ANR	1207070	IdentifierDeclType	int		1207056	0					
ANR	1207071	Identifier	reg		1207056	1					
ANR	1207072	IdentifierDecl	i		1207056	1					
ANR	1207073	IdentifierDeclType	int		1207056	0					
ANR	1207074	Identifier	i		1207056	1					
ANR	1207075	IdentifierDecl	args		1207056	2					
ANR	1207076	IdentifierDeclType	int		1207056	0					
ANR	1207077	Identifier	args		1207056	1					
ANR	1207078	IdentifierDeclStatement	RSyscallItem * si ;	1451:1:36659:36675	1207056	3	True				
ANR	1207079	IdentifierDecl	* si		1207056	0					
ANR	1207080	IdentifierDeclType	RSyscallItem *		1207056	0					
ANR	1207081	Identifier	si		1207056	1					
ANR	1207082	ExpressionStatement	"reg = ( int ) r_debug_reg_get ( dbg , sysreg )"	1452:1:36678:36718	1207056	4	True				
ANR	1207083	AssignmentExpression	"reg = ( int ) r_debug_reg_get ( dbg , sysreg )"		1207056	0		=			
ANR	1207084	Identifier	reg		1207056	0					
ANR	1207085	CastExpression	"( int ) r_debug_reg_get ( dbg , sysreg )"		1207056	1					
ANR	1207086	CastTarget	int		1207056	0					
ANR	1207087	CallExpression	"r_debug_reg_get ( dbg , sysreg )"		1207056	1					
ANR	1207088	Callee	r_debug_reg_get		1207056	0					
ANR	1207089	Identifier	r_debug_reg_get		1207056	0					
ANR	1207090	ArgumentList	dbg		1207056	1					
ANR	1207091	Argument	dbg		1207056	0					
ANR	1207092	Identifier	dbg		1207056	0					
ANR	1207093	Argument	sysreg		1207056	1					
ANR	1207094	Identifier	sysreg		1207056	0					
ANR	1207095	ExpressionStatement	"si = r_syscall_get ( dbg -> anal -> syscall , reg , - 1 )"	1453:1:36721:36769	1207056	5	True				
ANR	1207096	AssignmentExpression	"si = r_syscall_get ( dbg -> anal -> syscall , reg , - 1 )"		1207056	0		=			
ANR	1207097	Identifier	si		1207056	0					
ANR	1207098	CallExpression	"r_syscall_get ( dbg -> anal -> syscall , reg , - 1 )"		1207056	1					
ANR	1207099	Callee	r_syscall_get		1207056	0					
ANR	1207100	Identifier	r_syscall_get		1207056	0					
ANR	1207101	ArgumentList	dbg -> anal -> syscall		1207056	1					
ANR	1207102	Argument	dbg -> anal -> syscall		1207056	0					
ANR	1207103	PtrMemberAccess	dbg -> anal -> syscall		1207056	0					
ANR	1207104	PtrMemberAccess	dbg -> anal		1207056	0					
ANR	1207105	Identifier	dbg		1207056	0					
ANR	1207106	Identifier	anal		1207056	1					
ANR	1207107	Identifier	syscall		1207056	1					
ANR	1207108	Argument	reg		1207056	1					
ANR	1207109	Identifier	reg		1207056	0					
ANR	1207110	Argument	- 1		1207056	2					
ANR	1207111	UnaryOperationExpression	- 1		1207056	0					
ANR	1207112	UnaryOperator	-		1207056	0					
ANR	1207113	PrimaryExpression	1		1207056	1					
ANR	1207114	IfStatement	if ( si )		1207056	6					
ANR	1207115	Condition	si	1454:5:36776:36777	1207056	0	True				
ANR	1207116	Identifier	si		1207056	0					
ANR	1207117	CompoundStatement		8:9:183:183	1207056	1					
ANR	1207118	ExpressionStatement	"sysname = si -> name ? si -> name : ""unknown"""	1455:2:36784:36823	1207056	0	True				
ANR	1207119	AssignmentExpression	"sysname = si -> name ? si -> name : ""unknown"""		1207056	0		=			
ANR	1207120	Identifier	sysname		1207056	0					
ANR	1207121	ConditionalExpression	"si -> name ? si -> name : ""unknown"""		1207056	1					
ANR	1207122	Condition	si -> name		1207056	0					
ANR	1207123	PtrMemberAccess	si -> name		1207056	0					
ANR	1207124	Identifier	si		1207056	0					
ANR	1207125	Identifier	name		1207056	1					
ANR	1207126	PtrMemberAccess	si -> name		1207056	1					
ANR	1207127	Identifier	si		1207056	0					
ANR	1207128	Identifier	name		1207056	1					
ANR	1207129	PrimaryExpression	"""unknown"""		1207056	2					
ANR	1207130	ExpressionStatement	args = si -> args	1456:2:36827:36842	1207056	1	True				
ANR	1207131	AssignmentExpression	args = si -> args		1207056	0		=			
ANR	1207132	Identifier	args		1207056	0					
ANR	1207133	PtrMemberAccess	si -> args		1207056	1					
ANR	1207134	Identifier	si		1207056	0					
ANR	1207135	Identifier	args		1207056	1					
ANR	1207136	ElseStatement	else		1207056	0					
ANR	1207137	CompoundStatement		11:8:255:255	1207056	0					
ANR	1207138	ExpressionStatement	"sysname = ""unknown"""	1458:2:36856:36875	1207056	0	True				
ANR	1207139	AssignmentExpression	"sysname = ""unknown"""		1207056	0		=			
ANR	1207140	Identifier	sysname		1207056	0					
ANR	1207141	PrimaryExpression	"""unknown"""		1207056	1					
ANR	1207142	ExpressionStatement	args = 3	1459:2:36879:36887	1207056	1	True				
ANR	1207143	AssignmentExpression	args = 3		1207056	0		=			
ANR	1207144	Identifier	args		1207056	0					
ANR	1207145	PrimaryExpression	3		1207056	1					
ANR	1207146	Statement	eprintf	1461:1:36893:36899	1207056	7	True				
ANR	1207147	Statement	(	1461:9:36901:36901	1207056	8	True				
ANR	1207148	Statement	"""--> %s 0x%08"""	1461:10:36902:36915	1207056	9	True				
ANR	1207149	Statement	PFMT64x	1461:24:36916:36922	1207056	10	True				
ANR	1207150	Statement	""" syscall %d %s ("""	1461:31:36923:36940	1207056	11	True				
ANR	1207151	Statement	","	1461:49:36941:36941	1207056	12	True				
ANR	1207152	Statement	sysreg	1461:51:36943:36948	1207056	13	True				
ANR	1207153	Statement	","	1461:57:36949:36949	1207056	14	True				
ANR	1207154	Statement	r_debug_reg_get	1462:3:36954:36968	1207056	15	True				
ANR	1207155	Statement	(	1462:19:36970:36970	1207056	16	True				
ANR	1207156	Statement	dbg	1462:20:36971:36973	1207056	17	True				
ANR	1207157	Statement	","	1462:23:36974:36974	1207056	18	True				
ANR	1207158	Statement	"""PC"""	1462:25:36976:36979	1207056	19	True				
ANR	1207159	Statement	)	1462:29:36980:36980	1207056	20	True				
ANR	1207160	Statement	","	1462:30:36981:36981	1207056	21	True				
ANR	1207161	Statement	reg	1462:32:36983:36985	1207056	22	True				
ANR	1207162	Statement	","	1462:35:36986:36986	1207056	23	True				
ANR	1207163	Statement	sysname	1462:37:36988:36994	1207056	24	True				
ANR	1207164	Statement	)	1462:44:36995:36995	1207056	25	True				
ANR	1207165	ExpressionStatement		1462:45:36996:36996	1207056	26	True				
ANR	1207166	ForStatement	for ( i = 0 ; i < args ; i ++ )		1207056	27					
ANR	1207167	ForInit	i = 0 ;	1463:6:37004:37007	1207056	0	True				
ANR	1207168	AssignmentExpression	i = 0		1207056	0		=			
ANR	1207169	Identifier	i		1207056	0					
ANR	1207170	PrimaryExpression	0		1207056	1					
ANR	1207171	Condition	i < args	1463:11:37009:37014	1207056	1	True				
ANR	1207172	RelationalExpression	i < args		1207056	0		<			
ANR	1207173	Identifier	i		1207056	0					
ANR	1207174	Identifier	args		1207056	1					
ANR	1207175	PostIncDecOperationExpression	i ++	1463:19:37017:37019	1207056	2	True				
ANR	1207176	Identifier	i		1207056	0					
ANR	1207177	IncDec	++		1207056	1					
ANR	1207178	CompoundStatement		18:2:429:437	1207056	3					
ANR	1207179	IdentifierDeclStatement	ut64 val ;	1464:2:37026:37034	1207056	0	True				
ANR	1207180	IdentifierDecl	val		1207056	0					
ANR	1207181	IdentifierDeclType	ut64		1207056	0					
ANR	1207182	Identifier	val		1207056	1					
ANR	1207183	ExpressionStatement	"snprintf ( regname , sizeof ( regname ) - 1 , ""A%d"" , i )"	1465:2:37038:37086	1207056	1	True				
ANR	1207184	CallExpression	"snprintf ( regname , sizeof ( regname ) - 1 , ""A%d"" , i )"		1207056	0					
ANR	1207185	Callee	snprintf		1207056	0					
ANR	1207186	Identifier	snprintf		1207056	0					
ANR	1207187	ArgumentList	regname		1207056	1					
ANR	1207188	Argument	regname		1207056	0					
ANR	1207189	Identifier	regname		1207056	0					
ANR	1207190	Argument	sizeof ( regname ) - 1		1207056	1					
ANR	1207191	AdditiveExpression	sizeof ( regname ) - 1		1207056	0		-			
ANR	1207192	SizeofExpression	sizeof ( regname )		1207056	0					
ANR	1207193	Sizeof	sizeof		1207056	0					
ANR	1207194	SizeofOperand	regname		1207056	1					
ANR	1207195	PrimaryExpression	1		1207056	1					
ANR	1207196	Argument	"""A%d"""		1207056	2					
ANR	1207197	PrimaryExpression	"""A%d"""		1207056	0					
ANR	1207198	Argument	i		1207056	3					
ANR	1207199	Identifier	i		1207056	0					
ANR	1207200	ExpressionStatement	"val = r_debug_reg_get ( dbg , regname )"	1466:2:37090:37126	1207056	2	True				
ANR	1207201	AssignmentExpression	"val = r_debug_reg_get ( dbg , regname )"		1207056	0		=			
ANR	1207202	Identifier	val		1207056	0					
ANR	1207203	CallExpression	"r_debug_reg_get ( dbg , regname )"		1207056	1					
ANR	1207204	Callee	r_debug_reg_get		1207056	0					
ANR	1207205	Identifier	r_debug_reg_get		1207056	0					
ANR	1207206	ArgumentList	dbg		1207056	1					
ANR	1207207	Argument	dbg		1207056	0					
ANR	1207208	Identifier	dbg		1207056	0					
ANR	1207209	Argument	regname		1207056	1					
ANR	1207210	Identifier	regname		1207056	0					
ANR	1207211	IfStatement	if ( ( ( st64 ) val < 0 ) && ( ( st64 ) val > - 0xffff ) )		1207056	3					
ANR	1207212	Condition	( ( st64 ) val < 0 ) && ( ( st64 ) val > - 0xffff )	1467:6:37134:37169	1207056	0	True				
ANR	1207213	AndExpression	( ( st64 ) val < 0 ) && ( ( st64 ) val > - 0xffff )		1207056	0		&&			
ANR	1207214	RelationalExpression	( st64 ) val < 0		1207056	0		<			
ANR	1207215	CastExpression	( st64 ) val		1207056	0					
ANR	1207216	CastTarget	st64		1207056	0					
ANR	1207217	Identifier	val		1207056	1					
ANR	1207218	PrimaryExpression	0		1207056	1					
ANR	1207219	RelationalExpression	( st64 ) val > - 0xffff		1207056	1		>			
ANR	1207220	CastExpression	( st64 ) val		1207056	0					
ANR	1207221	CastTarget	st64		1207056	0					
ANR	1207222	Identifier	val		1207056	1					
ANR	1207223	UnaryOperationExpression	- 0xffff		1207056	1					
ANR	1207224	UnaryOperator	-		1207056	0					
ANR	1207225	PrimaryExpression	0xffff		1207056	1					
ANR	1207226	CompoundStatement		21:44:575:575	1207056	1					
ANR	1207227	Statement	eprintf	1468:3:37177:37183	1207056	0	True				
ANR	1207228	Statement	(	1468:11:37185:37185	1207056	1	True				
ANR	1207229	Statement	"""%"""	1468:12:37186:37188	1207056	2	True				
ANR	1207230	Statement	PFMT64d	1468:15:37189:37195	1207056	3	True				
ANR	1207231	Statement	"""%s"""	1468:22:37196:37199	1207056	4	True				
ANR	1207232	Statement	","	1468:26:37200:37200	1207056	5	True				
ANR	1207233	Statement	val	1468:28:37202:37204	1207056	6	True				
ANR	1207234	Statement	","	1468:31:37205:37205	1207056	7	True				
ANR	1207235	Statement	(	1468:33:37207:37207	1207056	8	True				
ANR	1207236	Statement	i	1468:34:37208:37208	1207056	9	True				
ANR	1207237	Statement	+	1468:35:37209:37209	1207056	10	True				
ANR	1207238	Statement	1	1468:36:37210:37210	1207056	11	True				
ANR	1207239	Statement	==	1468:37:37211:37212	1207056	12	True				
ANR	1207240	Statement	args	1468:39:37213:37216	1207056	13	True				
ANR	1207241	Statement	)	1468:43:37217:37217	1207056	14	True				
ANR	1207242	Statement	?	1468:44:37218:37218	1207056	15	True				
ANR	1207243	Statement	""""""	1468:45:37219:37220	1207056	16	True				
ANR	1207244	Statement	:	1468:47:37221:37221	1207056	17	True				
ANR	1207245	Statement	""" """	1468:48:37222:37224	1207056	18	True				
ANR	1207246	Statement	)	1468:51:37225:37225	1207056	19	True				
ANR	1207247	ExpressionStatement		1468:52:37226:37226	1207056	20	True				
ANR	1207248	ElseStatement	else		1207056	0					
ANR	1207249	CompoundStatement		23:9:640:640	1207056	0					
ANR	1207250	Statement	eprintf	1470:3:37242:37248	1207056	0	True				
ANR	1207251	Statement	(	1470:11:37250:37250	1207056	1	True				
ANR	1207252	Statement	"""0x%"""	1470:12:37251:37255	1207056	2	True				
ANR	1207253	Statement	PFMT64x	1470:17:37256:37262	1207056	3	True				
ANR	1207254	Statement	"""%s"""	1470:24:37263:37266	1207056	4	True				
ANR	1207255	Statement	","	1470:28:37267:37267	1207056	5	True				
ANR	1207256	Statement	val	1470:30:37269:37271	1207056	6	True				
ANR	1207257	Statement	","	1470:33:37272:37272	1207056	7	True				
ANR	1207258	Statement	(	1470:35:37274:37274	1207056	8	True				
ANR	1207259	Statement	i	1470:36:37275:37275	1207056	9	True				
ANR	1207260	Statement	+	1470:37:37276:37276	1207056	10	True				
ANR	1207261	Statement	1	1470:38:37277:37277	1207056	11	True				
ANR	1207262	Statement	==	1470:39:37278:37279	1207056	12	True				
ANR	1207263	Statement	args	1470:41:37280:37283	1207056	13	True				
ANR	1207264	Statement	)	1470:45:37284:37284	1207056	14	True				
ANR	1207265	Statement	?	1470:46:37285:37285	1207056	15	True				
ANR	1207266	Statement	""""""	1470:47:37286:37287	1207056	16	True				
ANR	1207267	Statement	:	1470:49:37288:37288	1207056	17	True				
ANR	1207268	Statement	""" """	1470:50:37289:37291	1207056	18	True				
ANR	1207269	Statement	)	1470:53:37292:37292	1207056	19	True				
ANR	1207270	ExpressionStatement		1470:54:37293:37293	1207056	20	True				
ANR	1207271	ExpressionStatement	"eprintf ( "")\\n"" )"	1473:1:37303:37318	1207056	28	True				
ANR	1207272	CallExpression	"eprintf ( "")\\n"" )"		1207056	0					
ANR	1207273	Callee	eprintf		1207056	0					
ANR	1207274	Identifier	eprintf		1207056	0					
ANR	1207275	ArgumentList	""")\\n"""		1207056	1					
ANR	1207276	Argument	""")\\n"""		1207056	0					
ANR	1207277	PrimaryExpression	""")\\n"""		1207056	0					
ANR	1207278	ExpressionStatement	r_syscall_item_free ( si )	1474:1:37321:37345	1207056	29	True				
ANR	1207279	CallExpression	r_syscall_item_free ( si )		1207056	0					
ANR	1207280	Callee	r_syscall_item_free		1207056	0					
ANR	1207281	Identifier	r_syscall_item_free		1207056	0					
ANR	1207282	ArgumentList	si		1207056	1					
ANR	1207283	Argument	si		1207056	0					
ANR	1207284	Identifier	si		1207056	0					
ANR	1207285	ReturnStatement	return reg ;	1475:1:37348:37358	1207056	30	True				
ANR	1207286	Identifier	reg		1207056	0					
ANR	1207287	ReturnType	static int		1207056	1					
ANR	1207288	Identifier	show_syscall		1207056	2					
ANR	1207289	ParameterList	"RDebug * dbg , const char * sysreg"		1207056	3					
ANR	1207290	Parameter	RDebug * dbg	1447:24:36563:36573	1207056	0	True				
ANR	1207291	ParameterType	RDebug *		1207056	0					
ANR	1207292	Identifier	dbg		1207056	1					
ANR	1207293	Parameter	const char * sysreg	1447:37:36576:36593	1207056	1	True				
ANR	1207294	ParameterType	const char *		1207056	0					
ANR	1207295	Identifier	sysreg		1207056	1					
ANR	1207296	CFGEntryNode	ENTRY		1207056		True				
ANR	1207297	CFGExitNode	EXIT		1207056		True				
ANR	1207298	Symbol	si -> name		1207056						
ANR	1207299	Symbol	val		1207056						
ANR	1207300	Symbol	regname		1207056						
ANR	1207301	Symbol	r_syscall_get		1207056						
ANR	1207302	Symbol	dbg -> anal		1207056						
ANR	1207303	Symbol	r_debug_reg_get		1207056						
ANR	1207304	Symbol	dbg		1207056						
ANR	1207305	Symbol	si -> args		1207056						
ANR	1207306	Symbol	i		1207056						
ANR	1207307	Symbol	* dbg		1207056						
ANR	1207308	Symbol	dbg -> anal -> syscall		1207056						
ANR	1207309	Symbol	args		1207056						
ANR	1207310	Symbol	* dbg -> anal		1207056						
ANR	1207311	Symbol	reg		1207056						
ANR	1207312	Symbol	si		1207056						
ANR	1207313	Symbol	sysname		1207056						
ANR	1207314	Symbol	sysreg		1207056						
ANR	1207315	Symbol	* * dbg		1207056						
ANR	1207316	Symbol	* si		1207056						
ANR	1207317	Function	r_debug_continue_syscalls	1478:0:37363:39121							
ANR	1207318	FunctionDef	"r_debug_continue_syscalls (RDebug * dbg , int * sc , int n_sc)"		1207317	0					
ANR	1207319	CompoundStatement		1478:68:37431:39121	1207317	0					
ANR	1207320	IdentifierDeclStatement	"int i , err , reg , ret = false ;"	1479:1:37434:37462	1207317	0	True				
ANR	1207321	IdentifierDecl	i		1207317	0					
ANR	1207322	IdentifierDeclType	int		1207317	0					
ANR	1207323	Identifier	i		1207317	1					
ANR	1207324	IdentifierDecl	err		1207317	1					
ANR	1207325	IdentifierDeclType	int		1207317	0					
ANR	1207326	Identifier	err		1207317	1					
ANR	1207327	IdentifierDecl	reg		1207317	2					
ANR	1207328	IdentifierDeclType	int		1207317	0					
ANR	1207329	Identifier	reg		1207317	1					
ANR	1207330	IdentifierDecl	ret = false		1207317	3					
ANR	1207331	IdentifierDeclType	int		1207317	0					
ANR	1207332	Identifier	ret		1207317	1					
ANR	1207333	AssignmentExpression	ret = false		1207317	2		=			
ANR	1207334	Identifier	false		1207317	0					
ANR	1207335	Identifier	false		1207317	1					
ANR	1207336	IfStatement	if ( ! dbg || ! dbg -> h || r_debug_is_dead ( dbg ) )		1207317	1					
ANR	1207337	Condition	! dbg || ! dbg -> h || r_debug_is_dead ( dbg )	1480:5:37469:37508	1207317	0	True				
ANR	1207338	OrExpression	! dbg || ! dbg -> h || r_debug_is_dead ( dbg )		1207317	0		||			
ANR	1207339	UnaryOperationExpression	! dbg		1207317	0					
ANR	1207340	UnaryOperator	!		1207317	0					
ANR	1207341	Identifier	dbg		1207317	1					
ANR	1207342	OrExpression	! dbg -> h || r_debug_is_dead ( dbg )		1207317	1		||			
ANR	1207343	UnaryOperationExpression	! dbg -> h		1207317	0					
ANR	1207344	UnaryOperator	!		1207317	0					
ANR	1207345	PtrMemberAccess	dbg -> h		1207317	1					
ANR	1207346	Identifier	dbg		1207317	0					
ANR	1207347	Identifier	h		1207317	1					
ANR	1207348	CallExpression	r_debug_is_dead ( dbg )		1207317	1					
ANR	1207349	Callee	r_debug_is_dead		1207317	0					
ANR	1207350	Identifier	r_debug_is_dead		1207317	0					
ANR	1207351	ArgumentList	dbg		1207317	1					
ANR	1207352	Argument	dbg		1207317	0					
ANR	1207353	Identifier	dbg		1207317	0					
ANR	1207354	CompoundStatement		3:47:79:79	1207317	1					
ANR	1207355	ReturnStatement	return false ;	1481:2:37515:37527	1207317	0	True				
ANR	1207356	Identifier	false		1207317	0					
ANR	1207357	IfStatement	if ( ! dbg -> h -> contsc )		1207317	2					
ANR	1207358	Condition	! dbg -> h -> contsc	1483:5:37537:37551	1207317	0	True				
ANR	1207359	UnaryOperationExpression	! dbg -> h -> contsc		1207317	0					
ANR	1207360	UnaryOperator	!		1207317	0					
ANR	1207361	PtrMemberAccess	dbg -> h -> contsc		1207317	1					
ANR	1207362	PtrMemberAccess	dbg -> h		1207317	0					
ANR	1207363	Identifier	dbg		1207317	0					
ANR	1207364	Identifier	h		1207317	1					
ANR	1207365	Identifier	contsc		1207317	1					
ANR	1207366	CompoundStatement		6:22:122:122	1207317	1					
ANR	1207367	ExpressionStatement	"r_debug_continue_until_optype ( dbg , R_ANAL_OP_TYPE_SWI , 0 )"	1485:2:37593:37651	1207317	0	True				
ANR	1207368	CallExpression	"r_debug_continue_until_optype ( dbg , R_ANAL_OP_TYPE_SWI , 0 )"		1207317	0					
ANR	1207369	Callee	r_debug_continue_until_optype		1207317	0					
ANR	1207370	Identifier	r_debug_continue_until_optype		1207317	0					
ANR	1207371	ArgumentList	dbg		1207317	1					
ANR	1207372	Argument	dbg		1207317	0					
ANR	1207373	Identifier	dbg		1207317	0					
ANR	1207374	Argument	R_ANAL_OP_TYPE_SWI		1207317	1					
ANR	1207375	Identifier	R_ANAL_OP_TYPE_SWI		1207317	0					
ANR	1207376	Argument	0		1207317	2					
ANR	1207377	PrimaryExpression	0		1207317	0					
ANR	1207378	ReturnStatement	"return show_syscall ( dbg , ""A0"" ) ;"	1486:2:37655:37686	1207317	1	True				
ANR	1207379	CallExpression	"show_syscall ( dbg , ""A0"" )"		1207317	0					
ANR	1207380	Callee	show_syscall		1207317	0					
ANR	1207381	Identifier	show_syscall		1207317	0					
ANR	1207382	ArgumentList	dbg		1207317	1					
ANR	1207383	Argument	dbg		1207317	0					
ANR	1207384	Identifier	dbg		1207317	0					
ANR	1207385	Argument	"""A0"""		1207317	1					
ANR	1207386	PrimaryExpression	"""A0"""		1207317	0					
ANR	1207387	IfStatement	"if ( ! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false ) )"		1207317	3					
ANR	1207388	Condition	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	1489:5:37697:37742	1207317	0	True				
ANR	1207389	UnaryOperationExpression	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1207317	0					
ANR	1207390	UnaryOperator	!		1207317	0					
ANR	1207391	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1207317	1					
ANR	1207392	Callee	r_debug_reg_sync		1207317	0					
ANR	1207393	Identifier	r_debug_reg_sync		1207317	0					
ANR	1207394	ArgumentList	dbg		1207317	1					
ANR	1207395	Argument	dbg		1207317	0					
ANR	1207396	Identifier	dbg		1207317	0					
ANR	1207397	Argument	R_REG_TYPE_GPR		1207317	1					
ANR	1207398	Identifier	R_REG_TYPE_GPR		1207317	0					
ANR	1207399	Argument	false		1207317	2					
ANR	1207400	Identifier	false		1207317	0					
ANR	1207401	CompoundStatement		12:53:313:313	1207317	1					
ANR	1207402	ExpressionStatement	"eprintf ( ""--> cannot read registers\\n"" )"	1490:2:37749:37788	1207317	0	True				
ANR	1207403	CallExpression	"eprintf ( ""--> cannot read registers\\n"" )"		1207317	0					
ANR	1207404	Callee	eprintf		1207317	0					
ANR	1207405	Identifier	eprintf		1207317	0					
ANR	1207406	ArgumentList	"""--> cannot read registers\\n"""		1207317	1					
ANR	1207407	Argument	"""--> cannot read registers\\n"""		1207317	0					
ANR	1207408	PrimaryExpression	"""--> cannot read registers\\n"""		1207317	0					
ANR	1207409	ReturnStatement	return - 1 ;	1491:2:37792:37801	1207317	1	True				
ANR	1207410	UnaryOperationExpression	- 1		1207317	0					
ANR	1207411	UnaryOperator	-		1207317	0					
ANR	1207412	PrimaryExpression	1		1207317	1					
ANR	1207413	ExpressionStatement	"reg = ( int ) r_debug_reg_get_err ( dbg , ""SN"" , & err , NULL )"	1493:1:37807:37861	1207317	4	True				
ANR	1207414	AssignmentExpression	"reg = ( int ) r_debug_reg_get_err ( dbg , ""SN"" , & err , NULL )"		1207317	0		=			
ANR	1207415	Identifier	reg		1207317	0					
ANR	1207416	CastExpression	"( int ) r_debug_reg_get_err ( dbg , ""SN"" , & err , NULL )"		1207317	1					
ANR	1207417	CastTarget	int		1207317	0					
ANR	1207418	CallExpression	"r_debug_reg_get_err ( dbg , ""SN"" , & err , NULL )"		1207317	1					
ANR	1207419	Callee	r_debug_reg_get_err		1207317	0					
ANR	1207420	Identifier	r_debug_reg_get_err		1207317	0					
ANR	1207421	ArgumentList	dbg		1207317	1					
ANR	1207422	Argument	dbg		1207317	0					
ANR	1207423	Identifier	dbg		1207317	0					
ANR	1207424	Argument	"""SN"""		1207317	1					
ANR	1207425	PrimaryExpression	"""SN"""		1207317	0					
ANR	1207426	Argument	& err		1207317	2					
ANR	1207427	UnaryOperationExpression	& err		1207317	0					
ANR	1207428	UnaryOperator	&		1207317	0					
ANR	1207429	Identifier	err		1207317	1					
ANR	1207430	Argument	NULL		1207317	3					
ANR	1207431	Identifier	NULL		1207317	0					
ANR	1207432	IfStatement	if ( err )		1207317	5					
ANR	1207433	Condition	err	1494:5:37868:37870	1207317	0	True				
ANR	1207434	Identifier	err		1207317	0					
ANR	1207435	CompoundStatement		17:10:441:441	1207317	1					
ANR	1207436	ExpressionStatement	"eprintf ( ""Cannot find 'sn' register for current arch-os.\\n"" )"	1495:2:37877:37937	1207317	0	True				
ANR	1207437	CallExpression	"eprintf ( ""Cannot find 'sn' register for current arch-os.\\n"" )"		1207317	0					
ANR	1207438	Callee	eprintf		1207317	0					
ANR	1207439	Identifier	eprintf		1207317	0					
ANR	1207440	ArgumentList	"""Cannot find 'sn' register for current arch-os.\\n"""		1207317	1					
ANR	1207441	Argument	"""Cannot find 'sn' register for current arch-os.\\n"""		1207317	0					
ANR	1207442	PrimaryExpression	"""Cannot find 'sn' register for current arch-os.\\n"""		1207317	0					
ANR	1207443	ReturnStatement	return - 1 ;	1496:2:37941:37950	1207317	1	True				
ANR	1207444	UnaryOperationExpression	- 1		1207317	0					
ANR	1207445	UnaryOperator	-		1207317	0					
ANR	1207446	PrimaryExpression	1		1207317	1					
ANR	1207447	ForStatement	for ( ; ; )		1207317	6					
ANR	1207448	CompoundStatement		22:2:537:560	1207317	0					
ANR	1207449	IdentifierDeclStatement	RDebugReasonType reason ;	1499:2:37969:37992	1207317	0	True				
ANR	1207450	IdentifierDecl	reason		1207317	0					
ANR	1207451	IdentifierDeclType	RDebugReasonType		1207317	0					
ANR	1207452	Identifier	reason		1207317	1					
ANR	1207453	IfStatement	if ( r_cons_singleton ( ) -> context -> breaked )		1207317	1					
ANR	1207454	Condition	r_cons_singleton ( ) -> context -> breaked	1501:6:38001:38037	1207317	0	True				
ANR	1207455	PtrMemberAccess	r_cons_singleton ( ) -> context -> breaked		1207317	0					
ANR	1207456	PtrMemberAccess	r_cons_singleton ( ) -> context		1207317	0					
ANR	1207457	CallExpression	r_cons_singleton ( )		1207317	0					
ANR	1207458	Callee	r_cons_singleton		1207317	0					
ANR	1207459	Identifier	r_cons_singleton		1207317	0					
ANR	1207460	ArgumentList			1207317	1					
ANR	1207461	Identifier	context		1207317	1					
ANR	1207462	Identifier	breaked		1207317	1					
ANR	1207463	CompoundStatement		24:45:608:608	1207317	1					
ANR	1207464	BreakStatement	break ;	1502:3:38045:38050	1207317	0	True				
ANR	1207465	ExpressionStatement	"r_debug_step ( dbg , 1 )"	1509:2:38291:38312	1207317	2	True				
ANR	1207466	CallExpression	"r_debug_step ( dbg , 1 )"		1207317	0					
ANR	1207467	Callee	r_debug_step		1207317	0					
ANR	1207468	Identifier	r_debug_step		1207317	0					
ANR	1207469	ArgumentList	dbg		1207317	1					
ANR	1207470	Argument	dbg		1207317	0					
ANR	1207471	Identifier	dbg		1207317	0					
ANR	1207472	Argument	1		1207317	1					
ANR	1207473	PrimaryExpression	1		1207317	0					
ANR	1207474	ExpressionStatement	"dbg -> h -> contsc ( dbg , dbg -> pid , 0 )"	1511:2:38323:38356	1207317	3	True				
ANR	1207475	CallExpression	"dbg -> h -> contsc ( dbg , dbg -> pid , 0 )"		1207317	0					
ANR	1207476	Callee	dbg -> h -> contsc		1207317	0					
ANR	1207477	PtrMemberAccess	dbg -> h -> contsc		1207317	0					
ANR	1207478	PtrMemberAccess	dbg -> h		1207317	0					
ANR	1207479	Identifier	dbg		1207317	0					
ANR	1207480	Identifier	h		1207317	1					
ANR	1207481	Identifier	contsc		1207317	1					
ANR	1207482	ArgumentList	dbg		1207317	1					
ANR	1207483	Argument	dbg		1207317	0					
ANR	1207484	Identifier	dbg		1207317	0					
ANR	1207485	Argument	dbg -> pid		1207317	1					
ANR	1207486	PtrMemberAccess	dbg -> pid		1207317	0					
ANR	1207487	Identifier	dbg		1207317	0					
ANR	1207488	Identifier	pid		1207317	1					
ANR	1207489	Argument	0		1207317	2					
ANR	1207490	PrimaryExpression	0		1207317	0					
ANR	1207491	ExpressionStatement	"reason = r_debug_wait ( dbg , NULL )"	1513:2:38417:38450	1207317	4	True				
ANR	1207492	AssignmentExpression	"reason = r_debug_wait ( dbg , NULL )"		1207317	0		=			
ANR	1207493	Identifier	reason		1207317	0					
ANR	1207494	CallExpression	"r_debug_wait ( dbg , NULL )"		1207317	1					
ANR	1207495	Callee	r_debug_wait		1207317	0					
ANR	1207496	Identifier	r_debug_wait		1207317	0					
ANR	1207497	ArgumentList	dbg		1207317	1					
ANR	1207498	Argument	dbg		1207317	0					
ANR	1207499	Identifier	dbg		1207317	0					
ANR	1207500	Argument	NULL		1207317	1					
ANR	1207501	Identifier	NULL		1207317	0					
ANR	1207502	IfStatement	if ( reason == R_DEBUG_REASON_DEAD || r_debug_is_dead ( dbg ) )		1207317	5					
ANR	1207503	Condition	reason == R_DEBUG_REASON_DEAD || r_debug_is_dead ( dbg )	1514:6:38458:38511	1207317	0	True				
ANR	1207504	OrExpression	reason == R_DEBUG_REASON_DEAD || r_debug_is_dead ( dbg )		1207317	0		||			
ANR	1207505	EqualityExpression	reason == R_DEBUG_REASON_DEAD		1207317	0		==			
ANR	1207506	Identifier	reason		1207317	0					
ANR	1207507	Identifier	R_DEBUG_REASON_DEAD		1207317	1					
ANR	1207508	CallExpression	r_debug_is_dead ( dbg )		1207317	1					
ANR	1207509	Callee	r_debug_is_dead		1207317	0					
ANR	1207510	Identifier	r_debug_is_dead		1207317	0					
ANR	1207511	ArgumentList	dbg		1207317	1					
ANR	1207512	Argument	dbg		1207317	0					
ANR	1207513	Identifier	dbg		1207317	0					
ANR	1207514	CompoundStatement		37:62:1082:1082	1207317	1					
ANR	1207515	BreakStatement	break ;	1515:3:38519:38524	1207317	0	True				
ANR	1207516	IfStatement	if ( reason != R_DEBUG_REASON_STEP )		1207317	6					
ANR	1207517	Condition	reason != R_DEBUG_REASON_STEP	1518:6:38542:38570	1207317	0	True				
ANR	1207518	EqualityExpression	reason != R_DEBUG_REASON_STEP		1207317	0		!=			
ANR	1207519	Identifier	reason		1207317	0					
ANR	1207520	Identifier	R_DEBUG_REASON_STEP		1207317	1					
ANR	1207521	CompoundStatement		41:37:1141:1141	1207317	1					
ANR	1207522	ExpressionStatement	"eprintf ( ""astep\\n"" )"	1519:3:38578:38597	1207317	0	True				
ANR	1207523	CallExpression	"eprintf ( ""astep\\n"" )"		1207317	0					
ANR	1207524	Callee	eprintf		1207317	0					
ANR	1207525	Identifier	eprintf		1207317	0					
ANR	1207526	ArgumentList	"""astep\\n"""		1207317	1					
ANR	1207527	Argument	"""astep\\n"""		1207317	0					
ANR	1207528	PrimaryExpression	"""astep\\n"""		1207317	0					
ANR	1207529	BreakStatement	break ;	1520:3:38602:38607	1207317	1	True				
ANR	1207530	IfStatement	"if ( ! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false ) )"		1207317	7					
ANR	1207531	Condition	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	1523:6:38626:38671	1207317	0	True				
ANR	1207532	UnaryOperationExpression	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1207317	0					
ANR	1207533	UnaryOperator	!		1207317	0					
ANR	1207534	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		1207317	1					
ANR	1207535	Callee	r_debug_reg_sync		1207317	0					
ANR	1207536	Identifier	r_debug_reg_sync		1207317	0					
ANR	1207537	ArgumentList	dbg		1207317	1					
ANR	1207538	Argument	dbg		1207317	0					
ANR	1207539	Identifier	dbg		1207317	0					
ANR	1207540	Argument	R_REG_TYPE_GPR		1207317	1					
ANR	1207541	Identifier	R_REG_TYPE_GPR		1207317	0					
ANR	1207542	Argument	false		1207317	2					
ANR	1207543	Identifier	false		1207317	0					
ANR	1207544	CompoundStatement		46:54:1242:1242	1207317	1					
ANR	1207545	ExpressionStatement	"eprintf ( ""--> cannot sync regs, process is probably dead\\n"" )"	1524:3:38679:38739	1207317	0	True				
ANR	1207546	CallExpression	"eprintf ( ""--> cannot sync regs, process is probably dead\\n"" )"		1207317	0					
ANR	1207547	Callee	eprintf		1207317	0					
ANR	1207548	Identifier	eprintf		1207317	0					
ANR	1207549	ArgumentList	"""--> cannot sync regs, process is probably dead\\n"""		1207317	1					
ANR	1207550	Argument	"""--> cannot sync regs, process is probably dead\\n"""		1207317	0					
ANR	1207551	PrimaryExpression	"""--> cannot sync regs, process is probably dead\\n"""		1207317	0					
ANR	1207552	ReturnStatement	return - 1 ;	1525:3:38744:38753	1207317	1	True				
ANR	1207553	UnaryOperationExpression	- 1		1207317	0					
ANR	1207554	UnaryOperator	-		1207317	0					
ANR	1207555	PrimaryExpression	1		1207317	1					
ANR	1207556	ExpressionStatement	"reg = show_syscall ( dbg , ""SN"" )"	1527:2:38761:38791	1207317	8	True				
ANR	1207557	AssignmentExpression	"reg = show_syscall ( dbg , ""SN"" )"		1207317	0		=			
ANR	1207558	Identifier	reg		1207317	0					
ANR	1207559	CallExpression	"show_syscall ( dbg , ""SN"" )"		1207317	1					
ANR	1207560	Callee	show_syscall		1207317	0					
ANR	1207561	Identifier	show_syscall		1207317	0					
ANR	1207562	ArgumentList	dbg		1207317	1					
ANR	1207563	Argument	dbg		1207317	0					
ANR	1207564	Identifier	dbg		1207317	0					
ANR	1207565	Argument	"""SN"""		1207317	1					
ANR	1207566	PrimaryExpression	"""SN"""		1207317	0					
ANR	1207567	IfStatement	if ( dbg -> corebind . core && dbg -> corebind . syshit )		1207317	9					
ANR	1207568	Condition	dbg -> corebind . core && dbg -> corebind . syshit	1529:6:38800:38841	1207317	0	True				
ANR	1207569	AndExpression	dbg -> corebind . core && dbg -> corebind . syshit		1207317	0		&&			
ANR	1207570	MemberAccess	dbg -> corebind . core		1207317	0					
ANR	1207571	PtrMemberAccess	dbg -> corebind		1207317	0					
ANR	1207572	Identifier	dbg		1207317	0					
ANR	1207573	Identifier	corebind		1207317	1					
ANR	1207574	Identifier	core		1207317	1					
ANR	1207575	MemberAccess	dbg -> corebind . syshit		1207317	1					
ANR	1207576	PtrMemberAccess	dbg -> corebind		1207317	0					
ANR	1207577	Identifier	dbg		1207317	0					
ANR	1207578	Identifier	corebind		1207317	1					
ANR	1207579	Identifier	syshit		1207317	1					
ANR	1207580	CompoundStatement		52:50:1412:1412	1207317	1					
ANR	1207581	ExpressionStatement	dbg -> corebind . syshit ( dbg -> corebind . core )	1530:3:38849:38890	1207317	0	True				
ANR	1207582	CallExpression	dbg -> corebind . syshit ( dbg -> corebind . core )		1207317	0					
ANR	1207583	Callee	dbg -> corebind . syshit		1207317	0					
ANR	1207584	MemberAccess	dbg -> corebind . syshit		1207317	0					
ANR	1207585	PtrMemberAccess	dbg -> corebind		1207317	0					
ANR	1207586	Identifier	dbg		1207317	0					
ANR	1207587	Identifier	corebind		1207317	1					
ANR	1207588	Identifier	syshit		1207317	1					
ANR	1207589	ArgumentList	dbg -> corebind . core		1207317	1					
ANR	1207590	Argument	dbg -> corebind . core		1207317	0					
ANR	1207591	MemberAccess	dbg -> corebind . core		1207317	0					
ANR	1207592	PtrMemberAccess	dbg -> corebind		1207317	0					
ANR	1207593	Identifier	dbg		1207317	0					
ANR	1207594	Identifier	corebind		1207317	1					
ANR	1207595	Identifier	core		1207317	1					
ANR	1207596	IfStatement	if ( n_sc == - 1 )		1207317	10					
ANR	1207597	Condition	n_sc == - 1	1533:6:38903:38912	1207317	0	True				
ANR	1207598	EqualityExpression	n_sc == - 1		1207317	0		==			
ANR	1207599	Identifier	n_sc		1207317	0					
ANR	1207600	UnaryOperationExpression	- 1		1207317	1					
ANR	1207601	UnaryOperator	-		1207317	0					
ANR	1207602	PrimaryExpression	1		1207317	1					
ANR	1207603	CompoundStatement		56:18:1483:1483	1207317	1					
ANR	1207604	ContinueStatement	continue ;	1534:3:38920:38928	1207317	0	True				
ANR	1207605	IfStatement	if ( n_sc == 0 )		1207317	11					
ANR	1207606	Condition	n_sc == 0	1536:6:38940:38948	1207317	0	True				
ANR	1207607	EqualityExpression	n_sc == 0		1207317	0		==			
ANR	1207608	Identifier	n_sc		1207317	0					
ANR	1207609	PrimaryExpression	0		1207317	1					
ANR	1207610	CompoundStatement		59:17:1519:1519	1207317	1					
ANR	1207611	BreakStatement	break ;	1537:3:38956:38961	1207317	0	True				
ANR	1207612	ForStatement	for ( i = 0 ; i < n_sc ; i ++ )		1207317	12					
ANR	1207613	ForInit	i = 0 ;	1539:7:38974:38979	1207317	0	True				
ANR	1207614	AssignmentExpression	i = 0		1207317	0		=			
ANR	1207615	Identifier	i		1207317	0					
ANR	1207616	PrimaryExpression	0		1207317	1					
ANR	1207617	Condition	i < n_sc	1539:14:38981:38988	1207317	1	True				
ANR	1207618	RelationalExpression	i < n_sc		1207317	0		<			
ANR	1207619	Identifier	i		1207317	0					
ANR	1207620	Identifier	n_sc		1207317	1					
ANR	1207621	PostIncDecOperationExpression	i ++	1539:24:38991:38993	1207317	2	True				
ANR	1207622	Identifier	i		1207317	0					
ANR	1207623	IncDec	++		1207317	1					
ANR	1207624	CompoundStatement		62:29:1564:1564	1207317	3					
ANR	1207625	IfStatement	if ( sc [ i ] == reg )		1207317	0					
ANR	1207626	Condition	sc [ i ] == reg	1540:7:39005:39016	1207317	0	True				
ANR	1207627	EqualityExpression	sc [ i ] == reg		1207317	0		==			
ANR	1207628	ArrayIndexing	sc [ i ]		1207317	0					
ANR	1207629	Identifier	sc		1207317	0					
ANR	1207630	Identifier	i		1207317	1					
ANR	1207631	Identifier	reg		1207317	1					
ANR	1207632	CompoundStatement		63:21:1587:1587	1207317	1					
ANR	1207633	ReturnStatement	return reg ;	1541:4:39025:39035	1207317	0	True				
ANR	1207634	Identifier	reg		1207317	0					
ANR	1207635	ReturnStatement	return ret ;	1546:1:39109:39119	1207317	7	True				
ANR	1207636	Identifier	ret		1207317	0					
ANR	1207637	ReturnType	R_API int		1207317	1					
ANR	1207638	Identifier	r_debug_continue_syscalls		1207317	2					
ANR	1207639	ParameterList	"RDebug * dbg , int * sc , int n_sc"		1207317	3					
ANR	1207640	Parameter	RDebug * dbg	1478:36:37399:37409	1207317	0	True				
ANR	1207641	ParameterType	RDebug *		1207317	0					
ANR	1207642	Identifier	dbg		1207317	1					
ANR	1207643	Parameter	int * sc	1478:49:37412:37418	1207317	1	True				
ANR	1207644	ParameterType	int *		1207317	0					
ANR	1207645	Identifier	sc		1207317	1					
ANR	1207646	Parameter	int n_sc	1478:58:37421:37428	1207317	2	True				
ANR	1207647	ParameterType	int		1207317	0					
ANR	1207648	Identifier	n_sc		1207317	1					
ANR	1207649	CFGEntryNode	ENTRY		1207317		True				
ANR	1207650	CFGExitNode	EXIT		1207317		True				
ANR	1207651	InfiniteForNode	true		1207317		True				
ANR	1207652	Symbol	reason		1207317						
ANR	1207653	Symbol	r_debug_reg_sync		1207317						
ANR	1207654	Symbol	r_debug_reg_get_err		1207317						
ANR	1207655	Symbol	r_debug_wait		1207317						
ANR	1207656	Symbol	* dbg -> h		1207317						
ANR	1207657	Symbol	R_DEBUG_REASON_DEAD		1207317						
ANR	1207658	Symbol	& err		1207317						
ANR	1207659	Symbol	sc		1207317						
ANR	1207660	Symbol	dbg -> corebind . core		1207317						
ANR	1207661	Symbol	reg		1207317						
ANR	1207662	Symbol	* sc		1207317						
ANR	1207663	Symbol	r_cons_singleton		1207317						
ANR	1207664	Symbol	R_REG_TYPE_GPR		1207317						
ANR	1207665	Symbol	ret		1207317						
ANR	1207666	Symbol	dbg -> h		1207317						
ANR	1207667	Symbol	NULL		1207317						
ANR	1207668	Symbol	err		1207317						
ANR	1207669	Symbol	dbg		1207317						
ANR	1207670	Symbol	false		1207317						
ANR	1207671	Symbol	i		1207317						
ANR	1207672	Symbol	r_cons_singleton ( ) -> context -> breaked		1207317						
ANR	1207673	Symbol	* r_cons_singleton ( ) -> context		1207317						
ANR	1207674	Symbol	* dbg		1207317						
ANR	1207675	Symbol	* * r_cons_singleton		1207317						
ANR	1207676	Symbol	n_sc		1207317						
ANR	1207677	Symbol	r_debug_is_dead		1207317						
ANR	1207678	Symbol	* i		1207317						
ANR	1207679	Symbol	dbg -> pid		1207317						
ANR	1207680	Symbol	dbg -> corebind		1207317						
ANR	1207681	Symbol	dbg -> h -> contsc		1207317						
ANR	1207682	Symbol	R_DEBUG_REASON_STEP		1207317						
ANR	1207683	Symbol	R_ANAL_OP_TYPE_SWI		1207317						
ANR	1207684	Symbol	dbg -> corebind . syshit		1207317						
ANR	1207685	Symbol	* * dbg		1207317						
ANR	1207686	Symbol	r_cons_singleton ( ) -> context		1207317						
ANR	1207687	Symbol	show_syscall		1207317						
ANR	1207688	Symbol	* r_cons_singleton		1207317						
ANR	1207689	Function	r_debug_continue_syscall	1549:0:39124:39231							
ANR	1207690	FunctionDef	"r_debug_continue_syscall (RDebug * dbg , int sc)"		1207689	0					
ANR	1207691	CompoundStatement		1549:56:39180:39231	1207689	0					
ANR	1207692	ReturnStatement	"return r_debug_continue_syscalls ( dbg , & sc , 1 ) ;"	1550:1:39183:39229	1207689	0	True				
ANR	1207693	CallExpression	"r_debug_continue_syscalls ( dbg , & sc , 1 )"		1207689	0					
ANR	1207694	Callee	r_debug_continue_syscalls		1207689	0					
ANR	1207695	Identifier	r_debug_continue_syscalls		1207689	0					
ANR	1207696	ArgumentList	dbg		1207689	1					
ANR	1207697	Argument	dbg		1207689	0					
ANR	1207698	Identifier	dbg		1207689	0					
ANR	1207699	Argument	& sc		1207689	1					
ANR	1207700	UnaryOperationExpression	& sc		1207689	0					
ANR	1207701	UnaryOperator	&		1207689	0					
ANR	1207702	Identifier	sc		1207689	1					
ANR	1207703	Argument	1		1207689	2					
ANR	1207704	PrimaryExpression	1		1207689	0					
ANR	1207705	ReturnType	R_API int		1207689	1					
ANR	1207706	Identifier	r_debug_continue_syscall		1207689	2					
ANR	1207707	ParameterList	"RDebug * dbg , int sc"		1207689	3					
ANR	1207708	Parameter	RDebug * dbg	1549:35:39159:39169	1207689	0	True				
ANR	1207709	ParameterType	RDebug *		1207689	0					
ANR	1207710	Identifier	dbg		1207689	1					
ANR	1207711	Parameter	int sc	1549:48:39172:39177	1207689	1	True				
ANR	1207712	ParameterType	int		1207689	0					
ANR	1207713	Identifier	sc		1207689	1					
ANR	1207714	CFGEntryNode	ENTRY		1207689		True				
ANR	1207715	CFGExitNode	EXIT		1207689		True				
ANR	1207716	Symbol	sc		1207689						
ANR	1207717	Symbol	r_debug_continue_syscalls		1207689						
ANR	1207718	Symbol	dbg		1207689						
ANR	1207719	Symbol	& sc		1207689						
ANR	1207720	Function	r_debug_syscall	1554:0:39285:39519							
ANR	1207721	FunctionDef	"r_debug_syscall (RDebug * dbg , int num)"		1207720	0					
ANR	1207722	CompoundStatement		1554:48:39333:39519	1207720	0					
ANR	1207723	IdentifierDeclStatement	bool ret = true ;	1555:1:39336:39351	1207720	0	True				
ANR	1207724	IdentifierDecl	ret = true		1207720	0					
ANR	1207725	IdentifierDeclType	bool		1207720	0					
ANR	1207726	Identifier	ret		1207720	1					
ANR	1207727	AssignmentExpression	ret = true		1207720	2		=			
ANR	1207728	Identifier	true		1207720	0					
ANR	1207729	Identifier	true		1207720	1					
ANR	1207730	IfStatement	if ( dbg -> h -> contsc )		1207720	1					
ANR	1207731	Condition	dbg -> h -> contsc	1556:5:39358:39371	1207720	0	True				
ANR	1207732	PtrMemberAccess	dbg -> h -> contsc		1207720	0					
ANR	1207733	PtrMemberAccess	dbg -> h		1207720	0					
ANR	1207734	Identifier	dbg		1207720	0					
ANR	1207735	Identifier	h		1207720	1					
ANR	1207736	Identifier	contsc		1207720	1					
ANR	1207737	CompoundStatement		3:21:40:40	1207720	1					
ANR	1207738	ExpressionStatement	"ret = dbg -> h -> contsc ( dbg , dbg -> pid , num )"	1557:2:39378:39419	1207720	0	True				
ANR	1207739	AssignmentExpression	"ret = dbg -> h -> contsc ( dbg , dbg -> pid , num )"		1207720	0		=			
ANR	1207740	Identifier	ret		1207720	0					
ANR	1207741	CallExpression	"dbg -> h -> contsc ( dbg , dbg -> pid , num )"		1207720	1					
ANR	1207742	Callee	dbg -> h -> contsc		1207720	0					
ANR	1207743	PtrMemberAccess	dbg -> h -> contsc		1207720	0					
ANR	1207744	PtrMemberAccess	dbg -> h		1207720	0					
ANR	1207745	Identifier	dbg		1207720	0					
ANR	1207746	Identifier	h		1207720	1					
ANR	1207747	Identifier	contsc		1207720	1					
ANR	1207748	ArgumentList	dbg		1207720	1					
ANR	1207749	Argument	dbg		1207720	0					
ANR	1207750	Identifier	dbg		1207720	0					
ANR	1207751	Argument	dbg -> pid		1207720	1					
ANR	1207752	PtrMemberAccess	dbg -> pid		1207720	0					
ANR	1207753	Identifier	dbg		1207720	0					
ANR	1207754	Identifier	pid		1207720	1					
ANR	1207755	Argument	num		1207720	2					
ANR	1207756	Identifier	num		1207720	0					
ANR	1207757	ExpressionStatement	"eprintf ( ""TODO: show syscall information\\n"" )"	1559:1:39425:39469	1207720	2	True				
ANR	1207758	CallExpression	"eprintf ( ""TODO: show syscall information\\n"" )"		1207720	0					
ANR	1207759	Callee	eprintf		1207720	0					
ANR	1207760	Identifier	eprintf		1207720	0					
ANR	1207761	ArgumentList	"""TODO: show syscall information\\n"""		1207720	1					
ANR	1207762	Argument	"""TODO: show syscall information\\n"""		1207720	0					
ANR	1207763	PrimaryExpression	"""TODO: show syscall information\\n"""		1207720	0					
ANR	1207764	ReturnStatement	return ( int ) ret ;	1561:1:39502:39517	1207720	3	True				
ANR	1207765	CastExpression	( int ) ret		1207720	0					
ANR	1207766	CastTarget	int		1207720	0					
ANR	1207767	Identifier	ret		1207720	1					
ANR	1207768	ReturnType	R_API int		1207720	1					
ANR	1207769	Identifier	r_debug_syscall		1207720	2					
ANR	1207770	ParameterList	"RDebug * dbg , int num"		1207720	3					
ANR	1207771	Parameter	RDebug * dbg	1554:26:39311:39321	1207720	0	True				
ANR	1207772	ParameterType	RDebug *		1207720	0					
ANR	1207773	Identifier	dbg		1207720	1					
ANR	1207774	Parameter	int num	1554:39:39324:39330	1207720	1	True				
ANR	1207775	ParameterType	int		1207720	0					
ANR	1207776	Identifier	num		1207720	1					
ANR	1207777	CFGEntryNode	ENTRY		1207720		True				
ANR	1207778	CFGExitNode	EXIT		1207720		True				
ANR	1207779	Symbol	ret		1207720						
ANR	1207780	Symbol	dbg -> h		1207720						
ANR	1207781	Symbol	dbg -> pid		1207720						
ANR	1207782	Symbol	num		1207720						
ANR	1207783	Symbol	dbg		1207720						
ANR	1207784	Symbol	true		1207720						
ANR	1207785	Symbol	* dbg -> h		1207720						
ANR	1207786	Symbol	dbg -> h -> contsc		1207720						
ANR	1207787	Symbol	* dbg		1207720						
ANR	1207788	Symbol	* * dbg		1207720						
ANR	1207789	Function	r_debug_kill	1564:0:39522:39825							
ANR	1207790	FunctionDef	"r_debug_kill (RDebug * dbg , int pid , int tid , int sig)"		1207789	0					
ANR	1207791	CompoundStatement		1564:63:39585:39825	1207789	0					
ANR	1207792	IfStatement	if ( r_debug_is_dead ( dbg ) )		1207789	0					
ANR	1207793	Condition	r_debug_is_dead ( dbg )	1565:5:39592:39612	1207789	0	True				
ANR	1207794	CallExpression	r_debug_is_dead ( dbg )		1207789	0					
ANR	1207795	Callee	r_debug_is_dead		1207789	0					
ANR	1207796	Identifier	r_debug_is_dead		1207789	0					
ANR	1207797	ArgumentList	dbg		1207789	1					
ANR	1207798	Argument	dbg		1207789	0					
ANR	1207799	Identifier	dbg		1207789	0					
ANR	1207800	CompoundStatement		2:28:29:29	1207789	1					
ANR	1207801	ReturnStatement	return false ;	1566:2:39619:39631	1207789	0	True				
ANR	1207802	Identifier	false		1207789	0					
ANR	1207803	IfStatement	if ( dbg -> h && dbg -> h -> kill )		1207789	1					
ANR	1207804	Condition	dbg -> h && dbg -> h -> kill	1568:5:39641:39662	1207789	0	True				
ANR	1207805	AndExpression	dbg -> h && dbg -> h -> kill		1207789	0		&&			
ANR	1207806	PtrMemberAccess	dbg -> h		1207789	0					
ANR	1207807	Identifier	dbg		1207789	0					
ANR	1207808	Identifier	h		1207789	1					
ANR	1207809	PtrMemberAccess	dbg -> h -> kill		1207789	1					
ANR	1207810	PtrMemberAccess	dbg -> h		1207789	0					
ANR	1207811	Identifier	dbg		1207789	0					
ANR	1207812	Identifier	h		1207789	1					
ANR	1207813	Identifier	kill		1207789	1					
ANR	1207814	CompoundStatement		5:29:79:79	1207789	1					
ANR	1207815	IfStatement	if ( pid > 0 && tid > 0 )		1207789	0					
ANR	1207816	Condition	pid > 0 && tid > 0	1569:6:39673:39690	1207789	0	True				
ANR	1207817	AndExpression	pid > 0 && tid > 0		1207789	0		&&			
ANR	1207818	RelationalExpression	pid > 0		1207789	0		>			
ANR	1207819	Identifier	pid		1207789	0					
ANR	1207820	PrimaryExpression	0		1207789	1					
ANR	1207821	RelationalExpression	tid > 0		1207789	1		>			
ANR	1207822	Identifier	tid		1207789	0					
ANR	1207823	PrimaryExpression	0		1207789	1					
ANR	1207824	CompoundStatement		6:26:107:107	1207789	1					
ANR	1207825	ReturnStatement	"return dbg -> h -> kill ( dbg , pid , tid , sig ) ;"	1570:3:39698:39738	1207789	0	True				
ANR	1207826	CallExpression	"dbg -> h -> kill ( dbg , pid , tid , sig )"		1207789	0					
ANR	1207827	Callee	dbg -> h -> kill		1207789	0					
ANR	1207828	PtrMemberAccess	dbg -> h -> kill		1207789	0					
ANR	1207829	PtrMemberAccess	dbg -> h		1207789	0					
ANR	1207830	Identifier	dbg		1207789	0					
ANR	1207831	Identifier	h		1207789	1					
ANR	1207832	Identifier	kill		1207789	1					
ANR	1207833	ArgumentList	dbg		1207789	1					
ANR	1207834	Argument	dbg		1207789	0					
ANR	1207835	Identifier	dbg		1207789	0					
ANR	1207836	Argument	pid		1207789	1					
ANR	1207837	Identifier	pid		1207789	0					
ANR	1207838	Argument	tid		1207789	2					
ANR	1207839	Identifier	tid		1207789	0					
ANR	1207840	Argument	sig		1207789	3					
ANR	1207841	Identifier	sig		1207789	0					
ANR	1207842	ReturnStatement	return - 1 ;	1572:2:39746:39755	1207789	1	True				
ANR	1207843	UnaryOperationExpression	- 1		1207789	0					
ANR	1207844	UnaryOperator	-		1207789	0					
ANR	1207845	PrimaryExpression	1		1207789	1					
ANR	1207846	ExpressionStatement	"eprintf ( ""Backend does not implement kill()\\n"" )"	1574:1:39761:39808	1207789	2	True				
ANR	1207847	CallExpression	"eprintf ( ""Backend does not implement kill()\\n"" )"		1207789	0					
ANR	1207848	Callee	eprintf		1207789	0					
ANR	1207849	Identifier	eprintf		1207789	0					
ANR	1207850	ArgumentList	"""Backend does not implement kill()\\n"""		1207789	1					
ANR	1207851	Argument	"""Backend does not implement kill()\\n"""		1207789	0					
ANR	1207852	PrimaryExpression	"""Backend does not implement kill()\\n"""		1207789	0					
ANR	1207853	ReturnStatement	return false ;	1575:1:39811:39823	1207789	3	True				
ANR	1207854	Identifier	false		1207789	0					
ANR	1207855	ReturnType	R_API int		1207789	1					
ANR	1207856	Identifier	r_debug_kill		1207789	2					
ANR	1207857	ParameterList	"RDebug * dbg , int pid , int tid , int sig"		1207789	3					
ANR	1207858	Parameter	RDebug * dbg	1564:23:39545:39555	1207789	0	True				
ANR	1207859	ParameterType	RDebug *		1207789	0					
ANR	1207860	Identifier	dbg		1207789	1					
ANR	1207861	Parameter	int pid	1564:36:39558:39564	1207789	1	True				
ANR	1207862	ParameterType	int		1207789	0					
ANR	1207863	Identifier	pid		1207789	1					
ANR	1207864	Parameter	int tid	1564:45:39567:39573	1207789	2	True				
ANR	1207865	ParameterType	int		1207789	0					
ANR	1207866	Identifier	tid		1207789	1					
ANR	1207867	Parameter	int sig	1564:54:39576:39582	1207789	3	True				
ANR	1207868	ParameterType	int		1207789	0					
ANR	1207869	Identifier	sig		1207789	1					
ANR	1207870	CFGEntryNode	ENTRY		1207789		True				
ANR	1207871	CFGExitNode	EXIT		1207789		True				
ANR	1207872	Symbol	sig		1207789						
ANR	1207873	Symbol	r_debug_is_dead		1207789						
ANR	1207874	Symbol	dbg -> h		1207789						
ANR	1207875	Symbol	dbg -> h -> kill		1207789						
ANR	1207876	Symbol	dbg		1207789						
ANR	1207877	Symbol	false		1207789						
ANR	1207878	Symbol	* dbg -> h		1207789						
ANR	1207879	Symbol	pid		1207789						
ANR	1207880	Symbol	* dbg		1207789						
ANR	1207881	Symbol	* * dbg		1207789						
ANR	1207882	Symbol	tid		1207789						
ANR	1207883	Function	r_debug_frames	1578:0:39828:39972							
ANR	1207884	FunctionDef	"r_debug_frames (RDebug * dbg , ut64 at)"		1207883	0					
ANR	1207885	CompoundStatement		1578:50:39878:39972	1207883	0					
ANR	1207886	IfStatement	if ( dbg && dbg -> h && dbg -> h -> frames )		1207883	0					
ANR	1207887	Condition	dbg && dbg -> h && dbg -> h -> frames	1579:5:39885:39915	1207883	0	True				
ANR	1207888	AndExpression	dbg && dbg -> h && dbg -> h -> frames		1207883	0		&&			
ANR	1207889	Identifier	dbg		1207883	0					
ANR	1207890	AndExpression	dbg -> h && dbg -> h -> frames		1207883	1		&&			
ANR	1207891	PtrMemberAccess	dbg -> h		1207883	0					
ANR	1207892	Identifier	dbg		1207883	0					
ANR	1207893	Identifier	h		1207883	1					
ANR	1207894	PtrMemberAccess	dbg -> h -> frames		1207883	1					
ANR	1207895	PtrMemberAccess	dbg -> h		1207883	0					
ANR	1207896	Identifier	dbg		1207883	0					
ANR	1207897	Identifier	h		1207883	1					
ANR	1207898	Identifier	frames		1207883	1					
ANR	1207899	CompoundStatement		2:38:39:39	1207883	1					
ANR	1207900	ReturnStatement	"return dbg -> h -> frames ( dbg , at ) ;"	1580:2:39922:39953	1207883	0	True				
ANR	1207901	CallExpression	"dbg -> h -> frames ( dbg , at )"		1207883	0					
ANR	1207902	Callee	dbg -> h -> frames		1207883	0					
ANR	1207903	PtrMemberAccess	dbg -> h -> frames		1207883	0					
ANR	1207904	PtrMemberAccess	dbg -> h		1207883	0					
ANR	1207905	Identifier	dbg		1207883	0					
ANR	1207906	Identifier	h		1207883	1					
ANR	1207907	Identifier	frames		1207883	1					
ANR	1207908	ArgumentList	dbg		1207883	1					
ANR	1207909	Argument	dbg		1207883	0					
ANR	1207910	Identifier	dbg		1207883	0					
ANR	1207911	Argument	at		1207883	1					
ANR	1207912	Identifier	at		1207883	0					
ANR	1207913	ReturnStatement	return NULL ;	1582:1:39959:39970	1207883	1	True				
ANR	1207914	Identifier	NULL		1207883	0					
ANR	1207915	ReturnType	R_API RList *		1207883	1					
ANR	1207916	Identifier	r_debug_frames		1207883	2					
ANR	1207917	ParameterList	"RDebug * dbg , ut64 at"		1207883	3					
ANR	1207918	Parameter	RDebug * dbg	1578:28:39856:39866	1207883	0	True				
ANR	1207919	ParameterType	RDebug *		1207883	0					
ANR	1207920	Identifier	dbg		1207883	1					
ANR	1207921	Parameter	ut64 at	1578:41:39869:39875	1207883	1	True				
ANR	1207922	ParameterType	ut64		1207883	0					
ANR	1207923	Identifier	at		1207883	1					
ANR	1207924	CFGEntryNode	ENTRY		1207883		True				
ANR	1207925	CFGExitNode	EXIT		1207883		True				
ANR	1207926	Symbol	at		1207883						
ANR	1207927	Symbol	dbg -> h		1207883						
ANR	1207928	Symbol	NULL		1207883						
ANR	1207929	Symbol	dbg		1207883						
ANR	1207930	Symbol	* dbg -> h		1207883						
ANR	1207931	Symbol	dbg -> h -> frames		1207883						
ANR	1207932	Symbol	* dbg		1207883						
ANR	1207933	Symbol	* * dbg		1207883						
ANR	1207934	Function	r_debug_child_fork	1586:0:40012:40140							
ANR	1207935	FunctionDef	r_debug_child_fork (RDebug * dbg)		1207934	0					
ANR	1207936	CompoundStatement		1586:42:40054:40140	1207934	0					
ANR	1207937	ReturnStatement	return 0 ;	1589:1:40130:40138	1207934	0	True				
ANR	1207938	PrimaryExpression	0		1207934	0					
ANR	1207939	ReturnType	R_API int		1207934	1					
ANR	1207940	Identifier	r_debug_child_fork		1207934	2					
ANR	1207941	ParameterList	RDebug * dbg		1207934	3					
ANR	1207942	Parameter	RDebug * dbg	1586:29:40041:40051	1207934	0	True				
ANR	1207943	ParameterType	RDebug *		1207934	0					
ANR	1207944	Identifier	dbg		1207934	1					
ANR	1207945	CFGEntryNode	ENTRY		1207934		True				
ANR	1207946	CFGExitNode	EXIT		1207934		True				
ANR	1207947	Symbol	dbg		1207934						
ANR	1207948	Function	r_debug_child_clone	1592:0:40143:40272							
ANR	1207949	FunctionDef	r_debug_child_clone (RDebug * dbg)		1207948	0					
ANR	1207950	CompoundStatement		1592:43:40186:40272	1207948	0					
ANR	1207951	ReturnStatement	return 0 ;	1595:1:40262:40270	1207948	0	True				
ANR	1207952	PrimaryExpression	0		1207948	0					
ANR	1207953	ReturnType	R_API int		1207948	1					
ANR	1207954	Identifier	r_debug_child_clone		1207948	2					
ANR	1207955	ParameterList	RDebug * dbg		1207948	3					
ANR	1207956	Parameter	RDebug * dbg	1592:30:40173:40183	1207948	0	True				
ANR	1207957	ParameterType	RDebug *		1207948	0					
ANR	1207958	Identifier	dbg		1207948	1					
ANR	1207959	CFGEntryNode	ENTRY		1207948		True				
ANR	1207960	CFGExitNode	EXIT		1207948		True				
ANR	1207961	Symbol	dbg		1207948						
ANR	1207962	Function	r_debug_is_dead	1598:0:40275:40864							
ANR	1207963	FunctionDef	r_debug_is_dead (RDebug * dbg)		1207962	0					
ANR	1207964	CompoundStatement		1598:40:40315:40864	1207962	0					
ANR	1207965	IfStatement	if ( ! dbg -> h )		1207962	0					
ANR	1207966	Condition	! dbg -> h	1599:5:40322:40328	1207962	0	True				
ANR	1207967	UnaryOperationExpression	! dbg -> h		1207962	0					
ANR	1207968	UnaryOperator	!		1207962	0					
ANR	1207969	PtrMemberAccess	dbg -> h		1207962	1					
ANR	1207970	Identifier	dbg		1207962	0					
ANR	1207971	Identifier	h		1207962	1					
ANR	1207972	CompoundStatement		2:14:15:15	1207962	1					
ANR	1207973	ReturnStatement	return false ;	1600:2:40335:40347	1207962	0	True				
ANR	1207974	Identifier	false		1207962	0					
ANR	1207975	IfStatement	"if ( ! strcmp ( dbg -> h -> name , ""io"" ) )"		1207962	1					
ANR	1207976	Condition	"! strcmp ( dbg -> h -> name , ""io"" )"	1603:5:40405:40432	1207962	0	True				
ANR	1207977	UnaryOperationExpression	"! strcmp ( dbg -> h -> name , ""io"" )"		1207962	0					
ANR	1207978	UnaryOperator	!		1207962	0					
ANR	1207979	CallExpression	"strcmp ( dbg -> h -> name , ""io"" )"		1207962	1					
ANR	1207980	Callee	strcmp		1207962	0					
ANR	1207981	Identifier	strcmp		1207962	0					
ANR	1207982	ArgumentList	dbg -> h -> name		1207962	1					
ANR	1207983	Argument	dbg -> h -> name		1207962	0					
ANR	1207984	PtrMemberAccess	dbg -> h -> name		1207962	0					
ANR	1207985	PtrMemberAccess	dbg -> h		1207962	0					
ANR	1207986	Identifier	dbg		1207962	0					
ANR	1207987	Identifier	h		1207962	1					
ANR	1207988	Identifier	name		1207962	1					
ANR	1207989	Argument	"""io"""		1207962	1					
ANR	1207990	PrimaryExpression	"""io"""		1207962	0					
ANR	1207991	CompoundStatement		6:35:119:119	1207962	1					
ANR	1207992	ReturnStatement	return false ;	1604:2:40439:40451	1207962	0	True				
ANR	1207993	Identifier	false		1207962	0					
ANR	1207994	IdentifierDeclStatement	"bool is_dead = ( dbg -> pid == - 1 && strncmp ( dbg -> h -> name , ""gdb"" , 3 ) ) || ( dbg -> reason . type == R_DEBUG_REASON_DEAD ) ;"	1606:1:40457:40569	1207962	2	True				
ANR	1207995	IdentifierDecl	"is_dead = ( dbg -> pid == - 1 && strncmp ( dbg -> h -> name , ""gdb"" , 3 ) ) || ( dbg -> reason . type == R_DEBUG_REASON_DEAD )"		1207962	0					
ANR	1207996	IdentifierDeclType	bool		1207962	0					
ANR	1207997	Identifier	is_dead		1207962	1					
ANR	1207998	AssignmentExpression	"is_dead = ( dbg -> pid == - 1 && strncmp ( dbg -> h -> name , ""gdb"" , 3 ) ) || ( dbg -> reason . type == R_DEBUG_REASON_DEAD )"		1207962	2		=			
ANR	1207999	Identifier	is_dead		1207962	0					
ANR	1208000	OrExpression	"( dbg -> pid == - 1 && strncmp ( dbg -> h -> name , ""gdb"" , 3 ) ) || ( dbg -> reason . type == R_DEBUG_REASON_DEAD )"		1207962	1		||			
ANR	1208001	AndExpression	"dbg -> pid == - 1 && strncmp ( dbg -> h -> name , ""gdb"" , 3 )"		1207962	0		&&			
ANR	1208002	EqualityExpression	dbg -> pid == - 1		1207962	0		==			
ANR	1208003	PtrMemberAccess	dbg -> pid		1207962	0					
ANR	1208004	Identifier	dbg		1207962	0					
ANR	1208005	Identifier	pid		1207962	1					
ANR	1208006	UnaryOperationExpression	- 1		1207962	1					
ANR	1208007	UnaryOperator	-		1207962	0					
ANR	1208008	PrimaryExpression	1		1207962	1					
ANR	1208009	CallExpression	"strncmp ( dbg -> h -> name , ""gdb"" , 3 )"		1207962	1					
ANR	1208010	Callee	strncmp		1207962	0					
ANR	1208011	Identifier	strncmp		1207962	0					
ANR	1208012	ArgumentList	dbg -> h -> name		1207962	1					
ANR	1208013	Argument	dbg -> h -> name		1207962	0					
ANR	1208014	PtrMemberAccess	dbg -> h -> name		1207962	0					
ANR	1208015	PtrMemberAccess	dbg -> h		1207962	0					
ANR	1208016	Identifier	dbg		1207962	0					
ANR	1208017	Identifier	h		1207962	1					
ANR	1208018	Identifier	name		1207962	1					
ANR	1208019	Argument	"""gdb"""		1207962	1					
ANR	1208020	PrimaryExpression	"""gdb"""		1207962	0					
ANR	1208021	Argument	3		1207962	2					
ANR	1208022	PrimaryExpression	3		1207962	0					
ANR	1208023	EqualityExpression	dbg -> reason . type == R_DEBUG_REASON_DEAD		1207962	1		==			
ANR	1208024	MemberAccess	dbg -> reason . type		1207962	0					
ANR	1208025	PtrMemberAccess	dbg -> reason		1207962	0					
ANR	1208026	Identifier	dbg		1207962	0					
ANR	1208027	Identifier	reason		1207962	1					
ANR	1208028	Identifier	type		1207962	1					
ANR	1208029	Identifier	R_DEBUG_REASON_DEAD		1207962	1					
ANR	1208030	IfStatement	if ( dbg -> pid > 0 && dbg -> h && dbg -> h -> kill )		1207962	3					
ANR	1208031	Condition	dbg -> pid > 0 && dbg -> h && dbg -> h -> kill	1607:5:40576:40613	1207962	0	True				
ANR	1208032	AndExpression	dbg -> pid > 0 && dbg -> h && dbg -> h -> kill		1207962	0		&&			
ANR	1208033	RelationalExpression	dbg -> pid > 0		1207962	0		>			
ANR	1208034	PtrMemberAccess	dbg -> pid		1207962	0					
ANR	1208035	Identifier	dbg		1207962	0					
ANR	1208036	Identifier	pid		1207962	1					
ANR	1208037	PrimaryExpression	0		1207962	1					
ANR	1208038	AndExpression	dbg -> h && dbg -> h -> kill		1207962	1		&&			
ANR	1208039	PtrMemberAccess	dbg -> h		1207962	0					
ANR	1208040	Identifier	dbg		1207962	0					
ANR	1208041	Identifier	h		1207962	1					
ANR	1208042	PtrMemberAccess	dbg -> h -> kill		1207962	1					
ANR	1208043	PtrMemberAccess	dbg -> h		1207962	0					
ANR	1208044	Identifier	dbg		1207962	0					
ANR	1208045	Identifier	h		1207962	1					
ANR	1208046	Identifier	kill		1207962	1					
ANR	1208047	CompoundStatement		10:45:300:300	1207962	1					
ANR	1208048	ExpressionStatement	"is_dead = ! dbg -> h -> kill ( dbg , dbg -> pid , false , 0 )"	1608:2:40620:40669	1207962	0	True				
ANR	1208049	AssignmentExpression	"is_dead = ! dbg -> h -> kill ( dbg , dbg -> pid , false , 0 )"		1207962	0		=			
ANR	1208050	Identifier	is_dead		1207962	0					
ANR	1208051	UnaryOperationExpression	"! dbg -> h -> kill ( dbg , dbg -> pid , false , 0 )"		1207962	1					
ANR	1208052	UnaryOperator	!		1207962	0					
ANR	1208053	CallExpression	"dbg -> h -> kill ( dbg , dbg -> pid , false , 0 )"		1207962	1					
ANR	1208054	Callee	dbg -> h -> kill		1207962	0					
ANR	1208055	PtrMemberAccess	dbg -> h -> kill		1207962	0					
ANR	1208056	PtrMemberAccess	dbg -> h		1207962	0					
ANR	1208057	Identifier	dbg		1207962	0					
ANR	1208058	Identifier	h		1207962	1					
ANR	1208059	Identifier	kill		1207962	1					
ANR	1208060	ArgumentList	dbg		1207962	1					
ANR	1208061	Argument	dbg		1207962	0					
ANR	1208062	Identifier	dbg		1207962	0					
ANR	1208063	Argument	dbg -> pid		1207962	1					
ANR	1208064	PtrMemberAccess	dbg -> pid		1207962	0					
ANR	1208065	Identifier	dbg		1207962	0					
ANR	1208066	Identifier	pid		1207962	1					
ANR	1208067	Argument	false		1207962	2					
ANR	1208068	Identifier	false		1207962	0					
ANR	1208069	Argument	0		1207962	3					
ANR	1208070	PrimaryExpression	0		1207962	0					
ANR	1208071	IfStatement	if ( ! is_dead && dbg -> h && dbg -> h -> kill )		1207962	4					
ANR	1208072	Condition	! is_dead && dbg -> h && dbg -> h -> kill	1611:5:40685:40718	1207962	0	True				
ANR	1208073	AndExpression	! is_dead && dbg -> h && dbg -> h -> kill		1207962	0		&&			
ANR	1208074	UnaryOperationExpression	! is_dead		1207962	0					
ANR	1208075	UnaryOperator	!		1207962	0					
ANR	1208076	Identifier	is_dead		1207962	1					
ANR	1208077	AndExpression	dbg -> h && dbg -> h -> kill		1207962	1		&&			
ANR	1208078	PtrMemberAccess	dbg -> h		1207962	0					
ANR	1208079	Identifier	dbg		1207962	0					
ANR	1208080	Identifier	h		1207962	1					
ANR	1208081	PtrMemberAccess	dbg -> h -> kill		1207962	1					
ANR	1208082	PtrMemberAccess	dbg -> h		1207962	0					
ANR	1208083	Identifier	dbg		1207962	0					
ANR	1208084	Identifier	h		1207962	1					
ANR	1208085	Identifier	kill		1207962	1					
ANR	1208086	CompoundStatement		14:41:405:405	1207962	1					
ANR	1208087	ExpressionStatement	"is_dead = ! dbg -> h -> kill ( dbg , dbg -> pid , false , 0 )"	1612:2:40725:40774	1207962	0	True				
ANR	1208088	AssignmentExpression	"is_dead = ! dbg -> h -> kill ( dbg , dbg -> pid , false , 0 )"		1207962	0		=			
ANR	1208089	Identifier	is_dead		1207962	0					
ANR	1208090	UnaryOperationExpression	"! dbg -> h -> kill ( dbg , dbg -> pid , false , 0 )"		1207962	1					
ANR	1208091	UnaryOperator	!		1207962	0					
ANR	1208092	CallExpression	"dbg -> h -> kill ( dbg , dbg -> pid , false , 0 )"		1207962	1					
ANR	1208093	Callee	dbg -> h -> kill		1207962	0					
ANR	1208094	PtrMemberAccess	dbg -> h -> kill		1207962	0					
ANR	1208095	PtrMemberAccess	dbg -> h		1207962	0					
ANR	1208096	Identifier	dbg		1207962	0					
ANR	1208097	Identifier	h		1207962	1					
ANR	1208098	Identifier	kill		1207962	1					
ANR	1208099	ArgumentList	dbg		1207962	1					
ANR	1208100	Argument	dbg		1207962	0					
ANR	1208101	Identifier	dbg		1207962	0					
ANR	1208102	Argument	dbg -> pid		1207962	1					
ANR	1208103	PtrMemberAccess	dbg -> pid		1207962	0					
ANR	1208104	Identifier	dbg		1207962	0					
ANR	1208105	Identifier	pid		1207962	1					
ANR	1208106	Argument	false		1207962	2					
ANR	1208107	Identifier	false		1207962	0					
ANR	1208108	Argument	0		1207962	3					
ANR	1208109	PrimaryExpression	0		1207962	0					
ANR	1208110	IfStatement	if ( is_dead )		1207962	5					
ANR	1208111	Condition	is_dead	1615:5:40791:40797	1207962	0	True				
ANR	1208112	Identifier	is_dead		1207962	0					
ANR	1208113	CompoundStatement		18:14:484:484	1207962	1					
ANR	1208114	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_DEAD	1616:2:40804:40842	1207962	0	True				
ANR	1208115	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_DEAD		1207962	0		=			
ANR	1208116	MemberAccess	dbg -> reason . type		1207962	0					
ANR	1208117	PtrMemberAccess	dbg -> reason		1207962	0					
ANR	1208118	Identifier	dbg		1207962	0					
ANR	1208119	Identifier	reason		1207962	1					
ANR	1208120	Identifier	type		1207962	1					
ANR	1208121	Identifier	R_DEBUG_REASON_DEAD		1207962	1					
ANR	1208122	ReturnStatement	return is_dead ;	1618:1:40848:40862	1207962	6	True				
ANR	1208123	Identifier	is_dead		1207962	0					
ANR	1208124	ReturnType	R_API bool		1207962	1					
ANR	1208125	Identifier	r_debug_is_dead		1207962	2					
ANR	1208126	ParameterList	RDebug * dbg		1207962	3					
ANR	1208127	Parameter	RDebug * dbg	1598:27:40302:40312	1207962	0	True				
ANR	1208128	ParameterType	RDebug *		1207962	0					
ANR	1208129	Identifier	dbg		1207962	1					
ANR	1208130	CFGEntryNode	ENTRY		1207962		True				
ANR	1208131	CFGExitNode	EXIT		1207962		True				
ANR	1208132	Symbol	strcmp		1207962						
ANR	1208133	Symbol	dbg -> h		1207962						
ANR	1208134	Symbol	dbg -> reason		1207962						
ANR	1208135	Symbol	dbg -> h -> name		1207962						
ANR	1208136	Symbol	dbg		1207962						
ANR	1208137	Symbol	false		1207962						
ANR	1208138	Symbol	* dbg -> h		1207962						
ANR	1208139	Symbol	R_DEBUG_REASON_DEAD		1207962						
ANR	1208140	Symbol	* dbg		1207962						
ANR	1208141	Symbol	is_dead		1207962						
ANR	1208142	Symbol	dbg -> reason . type		1207962						
ANR	1208143	Symbol	strncmp		1207962						
ANR	1208144	Symbol	dbg -> h -> kill		1207962						
ANR	1208145	Symbol	dbg -> pid		1207962						
ANR	1208146	Symbol	* * dbg		1207962						
ANR	1208147	Function	r_debug_map_protect	1621:0:40867:41062							
ANR	1208148	FunctionDef	"r_debug_map_protect (RDebug * dbg , ut64 addr , int size , int perms)"		1208147	0					
ANR	1208149	CompoundStatement		1621:75:40942:41062	1208147	0					
ANR	1208150	IfStatement	if ( dbg && dbg -> h && dbg -> h -> map_protect )		1208147	0					
ANR	1208151	Condition	dbg && dbg -> h && dbg -> h -> map_protect	1622:5:40949:40984	1208147	0	True				
ANR	1208152	AndExpression	dbg && dbg -> h && dbg -> h -> map_protect		1208147	0		&&			
ANR	1208153	Identifier	dbg		1208147	0					
ANR	1208154	AndExpression	dbg -> h && dbg -> h -> map_protect		1208147	1		&&			
ANR	1208155	PtrMemberAccess	dbg -> h		1208147	0					
ANR	1208156	Identifier	dbg		1208147	0					
ANR	1208157	Identifier	h		1208147	1					
ANR	1208158	PtrMemberAccess	dbg -> h -> map_protect		1208147	1					
ANR	1208159	PtrMemberAccess	dbg -> h		1208147	0					
ANR	1208160	Identifier	dbg		1208147	0					
ANR	1208161	Identifier	h		1208147	1					
ANR	1208162	Identifier	map_protect		1208147	1					
ANR	1208163	CompoundStatement		2:43:44:44	1208147	1					
ANR	1208164	ReturnStatement	"return dbg -> h -> map_protect ( dbg , addr , size , perms ) ;"	1623:2:40991:41042	1208147	0	True				
ANR	1208165	CallExpression	"dbg -> h -> map_protect ( dbg , addr , size , perms )"		1208147	0					
ANR	1208166	Callee	dbg -> h -> map_protect		1208147	0					
ANR	1208167	PtrMemberAccess	dbg -> h -> map_protect		1208147	0					
ANR	1208168	PtrMemberAccess	dbg -> h		1208147	0					
ANR	1208169	Identifier	dbg		1208147	0					
ANR	1208170	Identifier	h		1208147	1					
ANR	1208171	Identifier	map_protect		1208147	1					
ANR	1208172	ArgumentList	dbg		1208147	1					
ANR	1208173	Argument	dbg		1208147	0					
ANR	1208174	Identifier	dbg		1208147	0					
ANR	1208175	Argument	addr		1208147	1					
ANR	1208176	Identifier	addr		1208147	0					
ANR	1208177	Argument	size		1208147	2					
ANR	1208178	Identifier	size		1208147	0					
ANR	1208179	Argument	perms		1208147	3					
ANR	1208180	Identifier	perms		1208147	0					
ANR	1208181	ReturnStatement	return false ;	1625:1:41048:41060	1208147	1	True				
ANR	1208182	Identifier	false		1208147	0					
ANR	1208183	ReturnType	R_API int		1208147	1					
ANR	1208184	Identifier	r_debug_map_protect		1208147	2					
ANR	1208185	ParameterList	"RDebug * dbg , ut64 addr , int size , int perms"		1208147	3					
ANR	1208186	Parameter	RDebug * dbg	1621:30:40897:40907	1208147	0	True				
ANR	1208187	ParameterType	RDebug *		1208147	0					
ANR	1208188	Identifier	dbg		1208147	1					
ANR	1208189	Parameter	ut64 addr	1621:43:40910:40918	1208147	1	True				
ANR	1208190	ParameterType	ut64		1208147	0					
ANR	1208191	Identifier	addr		1208147	1					
ANR	1208192	Parameter	int size	1621:54:40921:40928	1208147	2	True				
ANR	1208193	ParameterType	int		1208147	0					
ANR	1208194	Identifier	size		1208147	1					
ANR	1208195	Parameter	int perms	1621:64:40931:40939	1208147	3	True				
ANR	1208196	ParameterType	int		1208147	0					
ANR	1208197	Identifier	perms		1208147	1					
ANR	1208198	CFGEntryNode	ENTRY		1208147		True				
ANR	1208199	CFGExitNode	EXIT		1208147		True				
ANR	1208200	Symbol	dbg -> h -> map_protect		1208147						
ANR	1208201	Symbol	dbg -> h		1208147						
ANR	1208202	Symbol	size		1208147						
ANR	1208203	Symbol	dbg		1208147						
ANR	1208204	Symbol	* dbg -> h		1208147						
ANR	1208205	Symbol	false		1208147						
ANR	1208206	Symbol	perms		1208147						
ANR	1208207	Symbol	addr		1208147						
ANR	1208208	Symbol	* dbg		1208147						
ANR	1208209	Symbol	* * dbg		1208147						
ANR	1208210	Function	r_debug_drx_list	1628:0:41065:41198							
ANR	1208211	FunctionDef	r_debug_drx_list (RDebug * dbg)		1208210	0					
ANR	1208212	CompoundStatement		1628:41:41106:41198	1208210	0					
ANR	1208213	IfStatement	if ( dbg && dbg -> h && dbg -> h -> drx )		1208210	0					
ANR	1208214	Condition	dbg && dbg -> h && dbg -> h -> drx	1629:5:41113:41140	1208210	0	True				
ANR	1208215	AndExpression	dbg && dbg -> h && dbg -> h -> drx		1208210	0		&&			
ANR	1208216	Identifier	dbg		1208210	0					
ANR	1208217	AndExpression	dbg -> h && dbg -> h -> drx		1208210	1		&&			
ANR	1208218	PtrMemberAccess	dbg -> h		1208210	0					
ANR	1208219	Identifier	dbg		1208210	0					
ANR	1208220	Identifier	h		1208210	1					
ANR	1208221	PtrMemberAccess	dbg -> h -> drx		1208210	1					
ANR	1208222	PtrMemberAccess	dbg -> h		1208210	0					
ANR	1208223	Identifier	dbg		1208210	0					
ANR	1208224	Identifier	h		1208210	1					
ANR	1208225	Identifier	drx		1208210	1					
ANR	1208226	CompoundStatement		2:35:36:36	1208210	1					
ANR	1208227	ExpressionStatement	"dbg -> h -> drx ( dbg , 0 , 0 , 0 , 0 , 0 , DRX_API_LIST )"	1630:2:41147:41193	1208210	0	True				
ANR	1208228	CallExpression	"dbg -> h -> drx ( dbg , 0 , 0 , 0 , 0 , 0 , DRX_API_LIST )"		1208210	0					
ANR	1208229	Callee	dbg -> h -> drx		1208210	0					
ANR	1208230	PtrMemberAccess	dbg -> h -> drx		1208210	0					
ANR	1208231	PtrMemberAccess	dbg -> h		1208210	0					
ANR	1208232	Identifier	dbg		1208210	0					
ANR	1208233	Identifier	h		1208210	1					
ANR	1208234	Identifier	drx		1208210	1					
ANR	1208235	ArgumentList	dbg		1208210	1					
ANR	1208236	Argument	dbg		1208210	0					
ANR	1208237	Identifier	dbg		1208210	0					
ANR	1208238	Argument	0		1208210	1					
ANR	1208239	PrimaryExpression	0		1208210	0					
ANR	1208240	Argument	0		1208210	2					
ANR	1208241	PrimaryExpression	0		1208210	0					
ANR	1208242	Argument	0		1208210	3					
ANR	1208243	PrimaryExpression	0		1208210	0					
ANR	1208244	Argument	0		1208210	4					
ANR	1208245	PrimaryExpression	0		1208210	0					
ANR	1208246	Argument	0		1208210	5					
ANR	1208247	PrimaryExpression	0		1208210	0					
ANR	1208248	Argument	DRX_API_LIST		1208210	6					
ANR	1208249	Identifier	DRX_API_LIST		1208210	0					
ANR	1208250	ReturnType	R_API void		1208210	1					
ANR	1208251	Identifier	r_debug_drx_list		1208210	2					
ANR	1208252	ParameterList	RDebug * dbg		1208210	3					
ANR	1208253	Parameter	RDebug * dbg	1628:28:41093:41103	1208210	0	True				
ANR	1208254	ParameterType	RDebug *		1208210	0					
ANR	1208255	Identifier	dbg		1208210	1					
ANR	1208256	CFGEntryNode	ENTRY		1208210		True				
ANR	1208257	CFGExitNode	EXIT		1208210		True				
ANR	1208258	Symbol	dbg -> h -> drx		1208210						
ANR	1208259	Symbol	dbg -> h		1208210						
ANR	1208260	Symbol	dbg		1208210						
ANR	1208261	Symbol	* dbg -> h		1208210						
ANR	1208262	Symbol	* dbg		1208210						
ANR	1208263	Symbol	DRX_API_LIST		1208210						
ANR	1208264	Symbol	* * dbg		1208210						
ANR	1208265	Function	r_debug_drx_set	1634:0:41201:41410							
ANR	1208266	FunctionDef	"r_debug_drx_set (RDebug * dbg , int idx , ut64 addr , int len , int rwx , int g)"		1208265	0					
ANR	1208267	CompoundStatement		1634:84:41285:41410	1208265	0					
ANR	1208268	IfStatement	if ( dbg && dbg -> h && dbg -> h -> drx )		1208265	0					
ANR	1208269	Condition	dbg && dbg -> h && dbg -> h -> drx	1635:5:41292:41319	1208265	0	True				
ANR	1208270	AndExpression	dbg && dbg -> h && dbg -> h -> drx		1208265	0		&&			
ANR	1208271	Identifier	dbg		1208265	0					
ANR	1208272	AndExpression	dbg -> h && dbg -> h -> drx		1208265	1		&&			
ANR	1208273	PtrMemberAccess	dbg -> h		1208265	0					
ANR	1208274	Identifier	dbg		1208265	0					
ANR	1208275	Identifier	h		1208265	1					
ANR	1208276	PtrMemberAccess	dbg -> h -> drx		1208265	1					
ANR	1208277	PtrMemberAccess	dbg -> h		1208265	0					
ANR	1208278	Identifier	dbg		1208265	0					
ANR	1208279	Identifier	h		1208265	1					
ANR	1208280	Identifier	drx		1208265	1					
ANR	1208281	CompoundStatement		2:35:36:36	1208265	1					
ANR	1208282	ReturnStatement	"return dbg -> h -> drx ( dbg , idx , addr , len , rwx , g , DRX_API_SET_BP ) ;"	1636:2:41326:41390	1208265	0	True				
ANR	1208283	CallExpression	"dbg -> h -> drx ( dbg , idx , addr , len , rwx , g , DRX_API_SET_BP )"		1208265	0					
ANR	1208284	Callee	dbg -> h -> drx		1208265	0					
ANR	1208285	PtrMemberAccess	dbg -> h -> drx		1208265	0					
ANR	1208286	PtrMemberAccess	dbg -> h		1208265	0					
ANR	1208287	Identifier	dbg		1208265	0					
ANR	1208288	Identifier	h		1208265	1					
ANR	1208289	Identifier	drx		1208265	1					
ANR	1208290	ArgumentList	dbg		1208265	1					
ANR	1208291	Argument	dbg		1208265	0					
ANR	1208292	Identifier	dbg		1208265	0					
ANR	1208293	Argument	idx		1208265	1					
ANR	1208294	Identifier	idx		1208265	0					
ANR	1208295	Argument	addr		1208265	2					
ANR	1208296	Identifier	addr		1208265	0					
ANR	1208297	Argument	len		1208265	3					
ANR	1208298	Identifier	len		1208265	0					
ANR	1208299	Argument	rwx		1208265	4					
ANR	1208300	Identifier	rwx		1208265	0					
ANR	1208301	Argument	g		1208265	5					
ANR	1208302	Identifier	g		1208265	0					
ANR	1208303	Argument	DRX_API_SET_BP		1208265	6					
ANR	1208304	Identifier	DRX_API_SET_BP		1208265	0					
ANR	1208305	ReturnStatement	return false ;	1638:1:41396:41408	1208265	1	True				
ANR	1208306	Identifier	false		1208265	0					
ANR	1208307	ReturnType	R_API int		1208265	1					
ANR	1208308	Identifier	r_debug_drx_set		1208265	2					
ANR	1208309	ParameterList	"RDebug * dbg , int idx , ut64 addr , int len , int rwx , int g"		1208265	3					
ANR	1208310	Parameter	RDebug * dbg	1634:26:41227:41237	1208265	0	True				
ANR	1208311	ParameterType	RDebug *		1208265	0					
ANR	1208312	Identifier	dbg		1208265	1					
ANR	1208313	Parameter	int idx	1634:39:41240:41246	1208265	1	True				
ANR	1208314	ParameterType	int		1208265	0					
ANR	1208315	Identifier	idx		1208265	1					
ANR	1208316	Parameter	ut64 addr	1634:48:41249:41257	1208265	2	True				
ANR	1208317	ParameterType	ut64		1208265	0					
ANR	1208318	Identifier	addr		1208265	1					
ANR	1208319	Parameter	int len	1634:59:41260:41266	1208265	3	True				
ANR	1208320	ParameterType	int		1208265	0					
ANR	1208321	Identifier	len		1208265	1					
ANR	1208322	Parameter	int rwx	1634:68:41269:41275	1208265	4	True				
ANR	1208323	ParameterType	int		1208265	0					
ANR	1208324	Identifier	rwx		1208265	1					
ANR	1208325	Parameter	int g	1634:77:41278:41282	1208265	5	True				
ANR	1208326	ParameterType	int		1208265	0					
ANR	1208327	Identifier	g		1208265	1					
ANR	1208328	CFGEntryNode	ENTRY		1208265		True				
ANR	1208329	CFGExitNode	EXIT		1208265		True				
ANR	1208330	Symbol	dbg -> h		1208265						
ANR	1208331	Symbol	g		1208265						
ANR	1208332	Symbol	dbg		1208265						
ANR	1208333	Symbol	* dbg -> h		1208265						
ANR	1208334	Symbol	false		1208265						
ANR	1208335	Symbol	* dbg		1208265						
ANR	1208336	Symbol	DRX_API_SET_BP		1208265						
ANR	1208337	Symbol	rwx		1208265						
ANR	1208338	Symbol	dbg -> h -> drx		1208265						
ANR	1208339	Symbol	len		1208265						
ANR	1208340	Symbol	idx		1208265						
ANR	1208341	Symbol	addr		1208265						
ANR	1208342	Symbol	* * dbg		1208265						
ANR	1208343	Function	r_debug_drx_unset	1641:0:41413:41585							
ANR	1208344	FunctionDef	"r_debug_drx_unset (RDebug * dbg , int idx)"		1208343	0					
ANR	1208345	CompoundStatement		1641:50:41463:41585	1208343	0					
ANR	1208346	IfStatement	if ( dbg && dbg -> h && dbg -> h -> drx )		1208343	0					
ANR	1208347	Condition	dbg && dbg -> h && dbg -> h -> drx	1642:5:41470:41497	1208343	0	True				
ANR	1208348	AndExpression	dbg && dbg -> h && dbg -> h -> drx		1208343	0		&&			
ANR	1208349	Identifier	dbg		1208343	0					
ANR	1208350	AndExpression	dbg -> h && dbg -> h -> drx		1208343	1		&&			
ANR	1208351	PtrMemberAccess	dbg -> h		1208343	0					
ANR	1208352	Identifier	dbg		1208343	0					
ANR	1208353	Identifier	h		1208343	1					
ANR	1208354	PtrMemberAccess	dbg -> h -> drx		1208343	1					
ANR	1208355	PtrMemberAccess	dbg -> h		1208343	0					
ANR	1208356	Identifier	dbg		1208343	0					
ANR	1208357	Identifier	h		1208343	1					
ANR	1208358	Identifier	drx		1208343	1					
ANR	1208359	CompoundStatement		2:35:36:36	1208343	1					
ANR	1208360	ReturnStatement	"return dbg -> h -> drx ( dbg , idx , 0 , - 1 , 0 , 0 , DRX_API_REMOVE_BP ) ;"	1643:2:41504:41565	1208343	0	True				
ANR	1208361	CallExpression	"dbg -> h -> drx ( dbg , idx , 0 , - 1 , 0 , 0 , DRX_API_REMOVE_BP )"		1208343	0					
ANR	1208362	Callee	dbg -> h -> drx		1208343	0					
ANR	1208363	PtrMemberAccess	dbg -> h -> drx		1208343	0					
ANR	1208364	PtrMemberAccess	dbg -> h		1208343	0					
ANR	1208365	Identifier	dbg		1208343	0					
ANR	1208366	Identifier	h		1208343	1					
ANR	1208367	Identifier	drx		1208343	1					
ANR	1208368	ArgumentList	dbg		1208343	1					
ANR	1208369	Argument	dbg		1208343	0					
ANR	1208370	Identifier	dbg		1208343	0					
ANR	1208371	Argument	idx		1208343	1					
ANR	1208372	Identifier	idx		1208343	0					
ANR	1208373	Argument	0		1208343	2					
ANR	1208374	PrimaryExpression	0		1208343	0					
ANR	1208375	Argument	- 1		1208343	3					
ANR	1208376	UnaryOperationExpression	- 1		1208343	0					
ANR	1208377	UnaryOperator	-		1208343	0					
ANR	1208378	PrimaryExpression	1		1208343	1					
ANR	1208379	Argument	0		1208343	4					
ANR	1208380	PrimaryExpression	0		1208343	0					
ANR	1208381	Argument	0		1208343	5					
ANR	1208382	PrimaryExpression	0		1208343	0					
ANR	1208383	Argument	DRX_API_REMOVE_BP		1208343	6					
ANR	1208384	Identifier	DRX_API_REMOVE_BP		1208343	0					
ANR	1208385	ReturnStatement	return false ;	1645:1:41571:41583	1208343	1	True				
ANR	1208386	Identifier	false		1208343	0					
ANR	1208387	ReturnType	R_API int		1208343	1					
ANR	1208388	Identifier	r_debug_drx_unset		1208343	2					
ANR	1208389	ParameterList	"RDebug * dbg , int idx"		1208343	3					
ANR	1208390	Parameter	RDebug * dbg	1641:28:41441:41451	1208343	0	True				
ANR	1208391	ParameterType	RDebug *		1208343	0					
ANR	1208392	Identifier	dbg		1208343	1					
ANR	1208393	Parameter	int idx	1641:41:41454:41460	1208343	1	True				
ANR	1208394	ParameterType	int		1208343	0					
ANR	1208395	Identifier	idx		1208343	1					
ANR	1208396	CFGEntryNode	ENTRY		1208343		True				
ANR	1208397	CFGExitNode	EXIT		1208343		True				
ANR	1208398	Symbol	dbg -> h -> drx		1208343						
ANR	1208399	Symbol	dbg -> h		1208343						
ANR	1208400	Symbol	DRX_API_REMOVE_BP		1208343						
ANR	1208401	Symbol	dbg		1208343						
ANR	1208402	Symbol	* dbg -> h		1208343						
ANR	1208403	Symbol	false		1208343						
ANR	1208404	Symbol	idx		1208343						
ANR	1208405	Symbol	* dbg		1208343						
ANR	1208406	Symbol	* * dbg		1208343						
ANR	1208407	Function	r_debug_get_baddr	1648:0:41588:42830							
ANR	1208408	FunctionDef	"r_debug_get_baddr (RDebug * dbg , const char * file)"		1208407	0					
ANR	1208409	CompoundStatement		1648:60:41648:42830	1208407	0					
ANR	1208410	IdentifierDeclStatement	char * abspath ;	1649:1:41651:41664	1208407	0	True				
ANR	1208411	IdentifierDecl	* abspath		1208407	0					
ANR	1208412	IdentifierDeclType	char *		1208407	0					
ANR	1208413	Identifier	abspath		1208407	1					
ANR	1208414	IdentifierDeclStatement	RListIter * iter ;	1650:1:41667:41682	1208407	1	True				
ANR	1208415	IdentifierDecl	* iter		1208407	0					
ANR	1208416	IdentifierDeclType	RListIter *		1208407	0					
ANR	1208417	Identifier	iter		1208407	1					
ANR	1208418	IdentifierDeclStatement	RDebugMap * map ;	1651:1:41685:41699	1208407	2	True				
ANR	1208419	IdentifierDecl	* map		1208407	0					
ANR	1208420	IdentifierDeclType	RDebugMap *		1208407	0					
ANR	1208421	Identifier	map		1208407	1					
ANR	1208422	IfStatement	if ( ! dbg || ! dbg -> iob . io || ! dbg -> iob . io -> desc )		1208407	3					
ANR	1208423	Condition	! dbg || ! dbg -> iob . io || ! dbg -> iob . io -> desc	1652:5:41706:41747	1208407	0	True				
ANR	1208424	OrExpression	! dbg || ! dbg -> iob . io || ! dbg -> iob . io -> desc		1208407	0		||			
ANR	1208425	UnaryOperationExpression	! dbg		1208407	0					
ANR	1208426	UnaryOperator	!		1208407	0					
ANR	1208427	Identifier	dbg		1208407	1					
ANR	1208428	OrExpression	! dbg -> iob . io || ! dbg -> iob . io -> desc		1208407	1		||			
ANR	1208429	UnaryOperationExpression	! dbg -> iob . io		1208407	0					
ANR	1208430	UnaryOperator	!		1208407	0					
ANR	1208431	MemberAccess	dbg -> iob . io		1208407	1					
ANR	1208432	PtrMemberAccess	dbg -> iob		1208407	0					
ANR	1208433	Identifier	dbg		1208407	0					
ANR	1208434	Identifier	iob		1208407	1					
ANR	1208435	Identifier	io		1208407	1					
ANR	1208436	UnaryOperationExpression	! dbg -> iob . io -> desc		1208407	1					
ANR	1208437	UnaryOperator	!		1208407	0					
ANR	1208438	PtrMemberAccess	dbg -> iob . io -> desc		1208407	1					
ANR	1208439	MemberAccess	dbg -> iob . io		1208407	0					
ANR	1208440	PtrMemberAccess	dbg -> iob		1208407	0					
ANR	1208441	Identifier	dbg		1208407	0					
ANR	1208442	Identifier	iob		1208407	1					
ANR	1208443	Identifier	io		1208407	1					
ANR	1208444	Identifier	desc		1208407	1					
ANR	1208445	CompoundStatement		5:49:101:101	1208407	1					
ANR	1208446	Statement	return	1653:2:41754:41759	1208407	0	True				
ANR	1208447	Statement	0L	1653:9:41761:41762	1208407	1	True				
ANR	1208448	ExpressionStatement	L	1653:11:41763:41764	1208407	2	True				
ANR	1208449	Identifier	L		1208407	0					
ANR	1208450	IfStatement	"if ( ! strcmp ( dbg -> iob . io -> desc -> plugin -> name , ""gdb"" ) )"		1208407	4					
ANR	1208451	Condition	"! strcmp ( dbg -> iob . io -> desc -> plugin -> name , ""gdb"" )"	1655:5:41774:41821	1208407	0	True				
ANR	1208452	UnaryOperationExpression	"! strcmp ( dbg -> iob . io -> desc -> plugin -> name , ""gdb"" )"		1208407	0					
ANR	1208453	UnaryOperator	!		1208407	0					
ANR	1208454	CallExpression	"strcmp ( dbg -> iob . io -> desc -> plugin -> name , ""gdb"" )"		1208407	1					
ANR	1208455	Callee	strcmp		1208407	0					
ANR	1208456	Identifier	strcmp		1208407	0					
ANR	1208457	ArgumentList	dbg -> iob . io -> desc -> plugin -> name		1208407	1					
ANR	1208458	Argument	dbg -> iob . io -> desc -> plugin -> name		1208407	0					
ANR	1208459	PtrMemberAccess	dbg -> iob . io -> desc -> plugin -> name		1208407	0					
ANR	1208460	PtrMemberAccess	dbg -> iob . io -> desc -> plugin		1208407	0					
ANR	1208461	PtrMemberAccess	dbg -> iob . io -> desc		1208407	0					
ANR	1208462	MemberAccess	dbg -> iob . io		1208407	0					
ANR	1208463	PtrMemberAccess	dbg -> iob		1208407	0					
ANR	1208464	Identifier	dbg		1208407	0					
ANR	1208465	Identifier	iob		1208407	1					
ANR	1208466	Identifier	io		1208407	1					
ANR	1208467	Identifier	desc		1208407	1					
ANR	1208468	Identifier	plugin		1208407	1					
ANR	1208469	Identifier	name		1208407	1					
ANR	1208470	Argument	"""gdb"""		1208407	1					
ANR	1208471	PrimaryExpression	"""gdb"""		1208407	0					
ANR	1208472	CompoundStatement		8:55:175:175	1208407	1					
ANR	1208473	ExpressionStatement	"dbg -> iob . system ( dbg -> iob . io , ""baddr"" )"	1657:2:41899:41937	1208407	0	True				
ANR	1208474	CallExpression	"dbg -> iob . system ( dbg -> iob . io , ""baddr"" )"		1208407	0					
ANR	1208475	Callee	dbg -> iob . system		1208407	0					
ANR	1208476	MemberAccess	dbg -> iob . system		1208407	0					
ANR	1208477	PtrMemberAccess	dbg -> iob		1208407	0					
ANR	1208478	Identifier	dbg		1208407	0					
ANR	1208479	Identifier	iob		1208407	1					
ANR	1208480	Identifier	system		1208407	1					
ANR	1208481	ArgumentList	dbg -> iob . io		1208407	1					
ANR	1208482	Argument	dbg -> iob . io		1208407	0					
ANR	1208483	MemberAccess	dbg -> iob . io		1208407	0					
ANR	1208484	PtrMemberAccess	dbg -> iob		1208407	0					
ANR	1208485	Identifier	dbg		1208407	0					
ANR	1208486	Identifier	iob		1208407	1					
ANR	1208487	Identifier	io		1208407	1					
ANR	1208488	Argument	"""baddr"""		1208407	1					
ANR	1208489	PrimaryExpression	"""baddr"""		1208407	0					
ANR	1208490	IdentifierDeclStatement	int pid = r_io_desc_get_pid ( dbg -> iob . io -> desc ) ;	1659:1:41943:41990	1208407	5	True				
ANR	1208491	IdentifierDecl	pid = r_io_desc_get_pid ( dbg -> iob . io -> desc )		1208407	0					
ANR	1208492	IdentifierDeclType	int		1208407	0					
ANR	1208493	Identifier	pid		1208407	1					
ANR	1208494	AssignmentExpression	pid = r_io_desc_get_pid ( dbg -> iob . io -> desc )		1208407	2		=			
ANR	1208495	Identifier	pid		1208407	0					
ANR	1208496	CallExpression	r_io_desc_get_pid ( dbg -> iob . io -> desc )		1208407	1					
ANR	1208497	Callee	r_io_desc_get_pid		1208407	0					
ANR	1208498	Identifier	r_io_desc_get_pid		1208407	0					
ANR	1208499	ArgumentList	dbg -> iob . io -> desc		1208407	1					
ANR	1208500	Argument	dbg -> iob . io -> desc		1208407	0					
ANR	1208501	PtrMemberAccess	dbg -> iob . io -> desc		1208407	0					
ANR	1208502	MemberAccess	dbg -> iob . io		1208407	0					
ANR	1208503	PtrMemberAccess	dbg -> iob		1208407	0					
ANR	1208504	Identifier	dbg		1208407	0					
ANR	1208505	Identifier	iob		1208407	1					
ANR	1208506	Identifier	io		1208407	1					
ANR	1208507	Identifier	desc		1208407	1					
ANR	1208508	IdentifierDeclStatement	int tid = r_io_desc_get_tid ( dbg -> iob . io -> desc ) ;	1660:1:41993:42040	1208407	6	True				
ANR	1208509	IdentifierDecl	tid = r_io_desc_get_tid ( dbg -> iob . io -> desc )		1208407	0					
ANR	1208510	IdentifierDeclType	int		1208407	0					
ANR	1208511	Identifier	tid		1208407	1					
ANR	1208512	AssignmentExpression	tid = r_io_desc_get_tid ( dbg -> iob . io -> desc )		1208407	2		=			
ANR	1208513	Identifier	tid		1208407	0					
ANR	1208514	CallExpression	r_io_desc_get_tid ( dbg -> iob . io -> desc )		1208407	1					
ANR	1208515	Callee	r_io_desc_get_tid		1208407	0					
ANR	1208516	Identifier	r_io_desc_get_tid		1208407	0					
ANR	1208517	ArgumentList	dbg -> iob . io -> desc		1208407	1					
ANR	1208518	Argument	dbg -> iob . io -> desc		1208407	0					
ANR	1208519	PtrMemberAccess	dbg -> iob . io -> desc		1208407	0					
ANR	1208520	MemberAccess	dbg -> iob . io		1208407	0					
ANR	1208521	PtrMemberAccess	dbg -> iob		1208407	0					
ANR	1208522	Identifier	dbg		1208407	0					
ANR	1208523	Identifier	iob		1208407	1					
ANR	1208524	Identifier	io		1208407	1					
ANR	1208525	Identifier	desc		1208407	1					
ANR	1208526	IfStatement	if ( pid < 0 || tid < 0 )		1208407	7					
ANR	1208527	Condition	pid < 0 || tid < 0	1661:5:42047:42064	1208407	0	True				
ANR	1208528	OrExpression	pid < 0 || tid < 0		1208407	0		||			
ANR	1208529	RelationalExpression	pid < 0		1208407	0		<			
ANR	1208530	Identifier	pid		1208407	0					
ANR	1208531	PrimaryExpression	0		1208407	1					
ANR	1208532	RelationalExpression	tid < 0		1208407	1		<			
ANR	1208533	Identifier	tid		1208407	0					
ANR	1208534	PrimaryExpression	0		1208407	1					
ANR	1208535	CompoundStatement		14:25:418:418	1208407	1					
ANR	1208536	Statement	return	1662:2:42071:42076	1208407	0	True				
ANR	1208537	Statement	0L	1662:9:42078:42079	1208407	1	True				
ANR	1208538	ExpressionStatement	L	1662:11:42080:42081	1208407	2	True				
ANR	1208539	Identifier	L		1208407	0					
ANR	1208540	IfStatement	"if ( r_debug_attach ( dbg , pid ) == - 1 )"		1208407	8					
ANR	1208541	Condition	"r_debug_attach ( dbg , pid ) == - 1"	1664:5:42091:42121	1208407	0	True				
ANR	1208542	EqualityExpression	"r_debug_attach ( dbg , pid ) == - 1"		1208407	0		==			
ANR	1208543	CallExpression	"r_debug_attach ( dbg , pid )"		1208407	0					
ANR	1208544	Callee	r_debug_attach		1208407	0					
ANR	1208545	Identifier	r_debug_attach		1208407	0					
ANR	1208546	ArgumentList	dbg		1208407	1					
ANR	1208547	Argument	dbg		1208407	0					
ANR	1208548	Identifier	dbg		1208407	0					
ANR	1208549	Argument	pid		1208407	1					
ANR	1208550	Identifier	pid		1208407	0					
ANR	1208551	UnaryOperationExpression	- 1		1208407	1					
ANR	1208552	UnaryOperator	-		1208407	0					
ANR	1208553	PrimaryExpression	1		1208407	1					
ANR	1208554	CompoundStatement		17:38:475:475	1208407	1					
ANR	1208555	Statement	return	1665:2:42128:42133	1208407	0	True				
ANR	1208556	Statement	0L	1665:9:42135:42136	1208407	1	True				
ANR	1208557	ExpressionStatement	L	1665:11:42137:42138	1208407	2	True				
ANR	1208558	Identifier	L		1208407	0					
ANR	1208559	IdentifierDeclStatement	ut64 base ;	1668:1:42160:42169	1208407	9	True				
ANR	1208560	IdentifierDecl	base		1208407	0					
ANR	1208561	IdentifierDeclType	ut64		1208407	0					
ANR	1208562	Identifier	base		1208407	1					
ANR	1208563	ReturnStatement	"return r_io_desc_get_base ( dbg -> iob . io -> desc , & base ) , base ;"	1669:1:42172:42230	1208407	10	True				
ANR	1208564	Expression	"r_io_desc_get_base ( dbg -> iob . io -> desc , & base ) , base"		1208407	0					
ANR	1208565	CallExpression	"r_io_desc_get_base ( dbg -> iob . io -> desc , & base )"		1208407	0					
ANR	1208566	Callee	r_io_desc_get_base		1208407	0					
ANR	1208567	Identifier	r_io_desc_get_base		1208407	0					
ANR	1208568	ArgumentList	dbg -> iob . io -> desc		1208407	1					
ANR	1208569	Argument	dbg -> iob . io -> desc		1208407	0					
ANR	1208570	PtrMemberAccess	dbg -> iob . io -> desc		1208407	0					
ANR	1208571	MemberAccess	dbg -> iob . io		1208407	0					
ANR	1208572	PtrMemberAccess	dbg -> iob		1208407	0					
ANR	1208573	Identifier	dbg		1208407	0					
ANR	1208574	Identifier	iob		1208407	1					
ANR	1208575	Identifier	io		1208407	1					
ANR	1208576	Identifier	desc		1208407	1					
ANR	1208577	Argument	& base		1208407	1					
ANR	1208578	UnaryOperationExpression	& base		1208407	0					
ANR	1208579	UnaryOperator	&		1208407	0					
ANR	1208580	Identifier	base		1208407	1					
ANR	1208581	Identifier	base		1208407	1					
ANR	1208582	ReturnType	R_API ut64		1208407	1					
ANR	1208583	Identifier	r_debug_get_baddr		1208407	2					
ANR	1208584	ParameterList	"RDebug * dbg , const char * file"		1208407	3					
ANR	1208585	Parameter	RDebug * dbg	1648:29:41617:41627	1208407	0	True				
ANR	1208586	ParameterType	RDebug *		1208407	0					
ANR	1208587	Identifier	dbg		1208407	1					
ANR	1208588	Parameter	const char * file	1648:42:41630:41645	1208407	1	True				
ANR	1208589	ParameterType	const char *		1208407	0					
ANR	1208590	Identifier	file		1208407	1					
ANR	1208591	CFGEntryNode	ENTRY		1208407		True				
ANR	1208592	CFGExitNode	EXIT		1208407		True				
ANR	1208593	Symbol	* * * dbg -> iob . io		1208407						
ANR	1208594	Symbol	dbg -> iob . io		1208407						
ANR	1208595	Symbol	& base		1208407						
ANR	1208596	Symbol	* * * * dbg		1208407						
ANR	1208597	Symbol	r_io_desc_get_base		1208407						
ANR	1208598	Symbol	* * dbg -> iob . io		1208407						
ANR	1208599	Symbol	pid		1208407						
ANR	1208600	Symbol	tid		1208407						
ANR	1208601	Symbol	r_debug_attach		1208407						
ANR	1208602	Symbol	* dbg -> iob . io -> desc -> plugin		1208407						
ANR	1208603	Symbol	file		1208407						
ANR	1208604	Symbol	* * dbg -> iob		1208407						
ANR	1208605	Symbol	abspath		1208407						
ANR	1208606	Symbol	dbg -> iob . io -> desc		1208407						
ANR	1208607	Symbol	* dbg -> iob		1208407						
ANR	1208608	Symbol	r_io_desc_get_tid		1208407						
ANR	1208609	Symbol	r_io_desc_get_pid		1208407						
ANR	1208610	Symbol	map		1208407						
ANR	1208611	Symbol	strcmp		1208407						
ANR	1208612	Symbol	dbg -> iob		1208407						
ANR	1208613	Symbol	* * * dbg -> iob		1208407						
ANR	1208614	Symbol	* * * dbg		1208407						
ANR	1208615	Symbol	dbg		1208407						
ANR	1208616	Symbol	iter		1208407						
ANR	1208617	Symbol	* dbg		1208407						
ANR	1208618	Symbol	dbg -> iob . io -> desc -> plugin -> name		1208407						
ANR	1208619	Symbol	* dbg -> iob . io		1208407						
ANR	1208620	Symbol	* * dbg -> iob . io -> desc		1208407						
ANR	1208621	Symbol	* dbg -> iob . io -> desc		1208407						
ANR	1208622	Symbol	dbg -> iob . io -> desc -> plugin		1208407						
ANR	1208623	Symbol	* * dbg		1208407						
ANR	1208624	Symbol	base		1208407						
