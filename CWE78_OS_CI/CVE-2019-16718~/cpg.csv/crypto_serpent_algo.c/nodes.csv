command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1186864	File	data/converged/CVE-2019-16718~_radare2/crypto_serpent_algo.c								
ANR	1186865	DeclStmt									
ANR	1186866	Decl							const ut8	const ut8 [ ]	IPTable
ANR	1186867	DeclStmt									
ANR	1186868	Decl							const ut8	const ut8 [ ]	FPTable
ANR	1186869	Function	rotr	47:0:2311:2389							
ANR	1186870	FunctionDef	"rotr (ut32 * x , int s)"		1186869	0					
ANR	1186871	CompoundStatement		47:40:2351:2389	1186869	0					
ANR	1186872	ExpressionStatement	* x = ( * x >> s ) | ( * x << ( 32 - s ) )	48:1:2354:2387	1186869	0	True				
ANR	1186873	AssignmentExpression	* x = ( * x >> s ) | ( * x << ( 32 - s ) )		1186869	0		=			
ANR	1186874	UnaryOperationExpression	* x		1186869	0					
ANR	1186875	UnaryOperator	*		1186869	0					
ANR	1186876	Identifier	x		1186869	1					
ANR	1186877	InclusiveOrExpression	( * x >> s ) | ( * x << ( 32 - s ) )		1186869	1		|			
ANR	1186878	ShiftExpression	* x >> s		1186869	0		>>			
ANR	1186879	UnaryOperationExpression	* x		1186869	0					
ANR	1186880	UnaryOperator	*		1186869	0					
ANR	1186881	Identifier	x		1186869	1					
ANR	1186882	Identifier	s		1186869	1					
ANR	1186883	ShiftExpression	* x << ( 32 - s )		1186869	1		<<			
ANR	1186884	UnaryOperationExpression	* x		1186869	0					
ANR	1186885	UnaryOperator	*		1186869	0					
ANR	1186886	Identifier	x		1186869	1					
ANR	1186887	AdditiveExpression	32 - s		1186869	1		-			
ANR	1186888	PrimaryExpression	32		1186869	0					
ANR	1186889	Identifier	s		1186869	1					
ANR	1186890	ReturnType	static inline void		1186869	1					
ANR	1186891	Identifier	rotr		1186869	2					
ANR	1186892	ParameterList	"ut32 * x , int s"		1186869	3					
ANR	1186893	Parameter	ut32 * x	47:24:2335:2341	1186869	0	True				
ANR	1186894	ParameterType	ut32 *		1186869	0					
ANR	1186895	Identifier	x		1186869	1					
ANR	1186896	Parameter	int s	47:33:2344:2348	1186869	1	True				
ANR	1186897	ParameterType	int		1186869	0					
ANR	1186898	Identifier	s		1186869	1					
ANR	1186899	CFGEntryNode	ENTRY		1186869		True				
ANR	1186900	CFGExitNode	EXIT		1186869		True				
ANR	1186901	Symbol	* x		1186869						
ANR	1186902	Symbol	s		1186869						
ANR	1186903	Symbol	x		1186869						
ANR	1186904	Function	rotl	51:0:2392:2470							
ANR	1186905	FunctionDef	"rotl (ut32 * x , int s)"		1186904	0					
ANR	1186906	CompoundStatement		51:40:2432:2470	1186904	0					
ANR	1186907	ExpressionStatement	* x = ( * x << s ) | ( * x >> ( 32 - s ) )	52:1:2435:2468	1186904	0	True				
ANR	1186908	AssignmentExpression	* x = ( * x << s ) | ( * x >> ( 32 - s ) )		1186904	0		=			
ANR	1186909	UnaryOperationExpression	* x		1186904	0					
ANR	1186910	UnaryOperator	*		1186904	0					
ANR	1186911	Identifier	x		1186904	1					
ANR	1186912	InclusiveOrExpression	( * x << s ) | ( * x >> ( 32 - s ) )		1186904	1		|			
ANR	1186913	ShiftExpression	* x << s		1186904	0		<<			
ANR	1186914	UnaryOperationExpression	* x		1186904	0					
ANR	1186915	UnaryOperator	*		1186904	0					
ANR	1186916	Identifier	x		1186904	1					
ANR	1186917	Identifier	s		1186904	1					
ANR	1186918	ShiftExpression	* x >> ( 32 - s )		1186904	1		>>			
ANR	1186919	UnaryOperationExpression	* x		1186904	0					
ANR	1186920	UnaryOperator	*		1186904	0					
ANR	1186921	Identifier	x		1186904	1					
ANR	1186922	AdditiveExpression	32 - s		1186904	1		-			
ANR	1186923	PrimaryExpression	32		1186904	0					
ANR	1186924	Identifier	s		1186904	1					
ANR	1186925	ReturnType	static inline void		1186904	1					
ANR	1186926	Identifier	rotl		1186904	2					
ANR	1186927	ParameterList	"ut32 * x , int s"		1186904	3					
ANR	1186928	Parameter	ut32 * x	51:24:2416:2422	1186904	0	True				
ANR	1186929	ParameterType	ut32 *		1186904	0					
ANR	1186930	Identifier	x		1186904	1					
ANR	1186931	Parameter	int s	51:33:2425:2429	1186904	1	True				
ANR	1186932	ParameterType	int		1186904	0					
ANR	1186933	Identifier	s		1186904	1					
ANR	1186934	CFGEntryNode	ENTRY		1186904		True				
ANR	1186935	CFGExitNode	EXIT		1186904		True				
ANR	1186936	Symbol	* x		1186904						
ANR	1186937	Symbol	s		1186904						
ANR	1186938	Symbol	x		1186904						
ANR	1186939	Function	apply_sbox	56:0:2525:2603							
ANR	1186940	FunctionDef	"apply_sbox (int si , ut8 x)"		1186939	0					
ANR	1186941	CompoundStatement		56:44:2569:2603	1186939	0					
ANR	1186942	ExpressionStatement	x = S [ si ] [ x & 0xf ]	57:1:2572:2590	1186939	0	True				
ANR	1186943	AssignmentExpression	x = S [ si ] [ x & 0xf ]		1186939	0		=			
ANR	1186944	Identifier	x		1186939	0					
ANR	1186945	ArrayIndexing	S [ si ] [ x & 0xf ]		1186939	1					
ANR	1186946	ArrayIndexing	S [ si ]		1186939	0					
ANR	1186947	Identifier	S		1186939	0					
ANR	1186948	Identifier	si		1186939	1					
ANR	1186949	BitAndExpression	x & 0xf		1186939	1		&			
ANR	1186950	Identifier	x		1186939	0					
ANR	1186951	PrimaryExpression	0xf		1186939	1					
ANR	1186952	ReturnStatement	return x ;	58:1:2593:2601	1186939	1	True				
ANR	1186953	Identifier	x		1186939	0					
ANR	1186954	ReturnType	static inline ut8		1186939	1					
ANR	1186955	Identifier	apply_sbox		1186939	2					
ANR	1186956	ParameterList	"int si , ut8 x"		1186939	3					
ANR	1186957	Parameter	int si	56:29:2554:2559	1186939	0	True				
ANR	1186958	ParameterType	int		1186939	0					
ANR	1186959	Identifier	si		1186939	1					
ANR	1186960	Parameter	ut8 x	56:37:2562:2566	1186939	1	True				
ANR	1186961	ParameterType	ut8		1186939	0					
ANR	1186962	Identifier	x		1186939	1					
ANR	1186963	CFGEntryNode	ENTRY		1186939		True				
ANR	1186964	CFGExitNode	EXIT		1186939		True				
ANR	1186965	Symbol	* * si		1186939						
ANR	1186966	Symbol	* x		1186939						
ANR	1186967	Symbol	S		1186939						
ANR	1186968	Symbol	si		1186939						
ANR	1186969	Symbol	x		1186939						
ANR	1186970	Symbol	* * S		1186939						
ANR	1186971	Symbol	* S		1186939						
ANR	1186972	Symbol	* si		1186939						
ANR	1186973	Function	apply_sbox_inv	61:0:2657:2742							
ANR	1186974	FunctionDef	"apply_sbox_inv (int si , ut8 x)"		1186973	0					
ANR	1186975	CompoundStatement		61:48:2705:2742	1186973	0					
ANR	1186976	ExpressionStatement	x = Sinv [ si ] [ x & 0xf ]	62:1:2708:2729	1186973	0	True				
ANR	1186977	AssignmentExpression	x = Sinv [ si ] [ x & 0xf ]		1186973	0		=			
ANR	1186978	Identifier	x		1186973	0					
ANR	1186979	ArrayIndexing	Sinv [ si ] [ x & 0xf ]		1186973	1					
ANR	1186980	ArrayIndexing	Sinv [ si ]		1186973	0					
ANR	1186981	Identifier	Sinv		1186973	0					
ANR	1186982	Identifier	si		1186973	1					
ANR	1186983	BitAndExpression	x & 0xf		1186973	1		&			
ANR	1186984	Identifier	x		1186973	0					
ANR	1186985	PrimaryExpression	0xf		1186973	1					
ANR	1186986	ReturnStatement	return x ;	63:1:2732:2740	1186973	1	True				
ANR	1186987	Identifier	x		1186973	0					
ANR	1186988	ReturnType	static inline ut8		1186973	1					
ANR	1186989	Identifier	apply_sbox_inv		1186973	2					
ANR	1186990	ParameterList	"int si , ut8 x"		1186973	3					
ANR	1186991	Parameter	int si	61:33:2690:2695	1186973	0	True				
ANR	1186992	ParameterType	int		1186973	0					
ANR	1186993	Identifier	si		1186973	1					
ANR	1186994	Parameter	ut8 x	61:41:2698:2702	1186973	1	True				
ANR	1186995	ParameterType	ut8		1186973	0					
ANR	1186996	Identifier	x		1186973	1					
ANR	1186997	CFGEntryNode	ENTRY		1186973		True				
ANR	1186998	CFGExitNode	EXIT		1186973		True				
ANR	1186999	Symbol	* * si		1186973						
ANR	1187000	Symbol	* Sinv		1186973						
ANR	1187001	Symbol	* x		1186973						
ANR	1187002	Symbol	* * Sinv		1186973						
ANR	1187003	Symbol	si		1186973						
ANR	1187004	Symbol	x		1186973						
ANR	1187005	Symbol	Sinv		1186973						
ANR	1187006	Symbol	* si		1186973						
ANR	1187007	Function	get_bit	66:0:2745:2878							
ANR	1187008	FunctionDef	"get_bit (int i , ut32 input)"		1187007	0					
ANR	1187009	CompoundStatement		66:45:2790:2878	1187007	0					
ANR	1187010	IfStatement	if ( i >= 32 )		1187007	0					
ANR	1187011	Condition	i >= 32	67:5:2797:2803	1187007	0	True				
ANR	1187012	RelationalExpression	i >= 32		1187007	0		>=			
ANR	1187013	Identifier	i		1187007	0					
ANR	1187014	PrimaryExpression	32		1187007	1					
ANR	1187015	CompoundStatement		2:14:15:15	1187007	1					
ANR	1187016	ExpressionStatement	"eprintf ( ""Wrong bit asked"" )"	68:2:2810:2836	1187007	0	True				
ANR	1187017	CallExpression	"eprintf ( ""Wrong bit asked"" )"		1187007	0					
ANR	1187018	Callee	eprintf		1187007	0					
ANR	1187019	Identifier	eprintf		1187007	0					
ANR	1187020	ArgumentList	"""Wrong bit asked"""		1187007	1					
ANR	1187021	Argument	"""Wrong bit asked"""		1187007	0					
ANR	1187022	PrimaryExpression	"""Wrong bit asked"""		1187007	0					
ANR	1187023	ExpressionStatement	exit ( 1 )	69:2:2840:2847	1187007	1	True				
ANR	1187024	CallExpression	exit ( 1 )		1187007	0					
ANR	1187025	Callee	exit		1187007	0					
ANR	1187026	Identifier	exit		1187007	0					
ANR	1187027	ArgumentList	1		1187007	1					
ANR	1187028	Argument	1		1187007	0					
ANR	1187029	PrimaryExpression	1		1187007	0					
ANR	1187030	ReturnStatement	return ( input >> i ) & 1 ;	71:1:2853:2876	1187007	1	True				
ANR	1187031	BitAndExpression	( input >> i ) & 1		1187007	0		&			
ANR	1187032	ShiftExpression	input >> i		1187007	0		>>			
ANR	1187033	Identifier	input		1187007	0					
ANR	1187034	Identifier	i		1187007	1					
ANR	1187035	PrimaryExpression	1		1187007	1					
ANR	1187036	ReturnType	static inline ut8		1187007	1					
ANR	1187037	Identifier	get_bit		1187007	2					
ANR	1187038	ParameterList	"int i , ut32 input"		1187007	3					
ANR	1187039	Parameter	int i	66:26:2771:2775	1187007	0	True				
ANR	1187040	ParameterType	int		1187007	0					
ANR	1187041	Identifier	i		1187007	1					
ANR	1187042	Parameter	ut32 input	66:33:2778:2787	1187007	1	True				
ANR	1187043	ParameterType	ut32		1187007	0					
ANR	1187044	Identifier	input		1187007	1					
ANR	1187045	CFGEntryNode	ENTRY		1187007		True				
ANR	1187046	CFGExitNode	EXIT		1187007		True				
ANR	1187047	Symbol	input		1187007						
ANR	1187048	Symbol	i		1187007						
ANR	1187049	Function	apply_IP	74:0:2881:3111							
ANR	1187050	FunctionDef	"apply_IP (ut32 in [ DW_BY_BLOCK ] , ut32 out [ DW_BY_BLOCK ])"		1187049	0					
ANR	1187051	CompoundStatement		74:59:2940:3111	1187049	0					
ANR	1187052	IdentifierDeclStatement	int index ;	75:1:2943:2952	1187049	0	True				
ANR	1187053	IdentifierDecl	index		1187049	0					
ANR	1187054	IdentifierDeclType	int		1187049	0					
ANR	1187055	Identifier	index		1187049	1					
ANR	1187056	IdentifierDeclStatement	int i ;	76:1:2955:2960	1187049	1	True				
ANR	1187057	IdentifierDecl	i		1187049	0					
ANR	1187058	IdentifierDeclType	int		1187049	0					
ANR	1187059	Identifier	i		1187049	1					
ANR	1187060	ForStatement	for ( i = 0 ; i < DW_BY_BLOCK * 32 ; i ++ )		1187049	2					
ANR	1187061	ForInit	i = 0 ;	77:6:2968:2973	1187049	0	True				
ANR	1187062	AssignmentExpression	i = 0		1187049	0		=			
ANR	1187063	Identifier	i		1187049	0					
ANR	1187064	PrimaryExpression	0		1187049	1					
ANR	1187065	Condition	i < DW_BY_BLOCK * 32	77:13:2975:2992	1187049	1	True				
ANR	1187066	RelationalExpression	i < DW_BY_BLOCK * 32		1187049	0		<			
ANR	1187067	Identifier	i		1187049	0					
ANR	1187068	MultiplicativeExpression	DW_BY_BLOCK * 32		1187049	1		*			
ANR	1187069	Identifier	DW_BY_BLOCK		1187049	0					
ANR	1187070	PrimaryExpression	32		1187049	1					
ANR	1187071	PostIncDecOperationExpression	i ++	77:33:2995:2997	1187049	2	True				
ANR	1187072	Identifier	i		1187049	0					
ANR	1187073	IncDec	++		1187049	1					
ANR	1187074	CompoundStatement		4:38:59:59	1187049	3					
ANR	1187075	ExpressionStatement	index = IPTable [ i ]	78:2:3004:3022	1187049	0	True				
ANR	1187076	AssignmentExpression	index = IPTable [ i ]		1187049	0		=			
ANR	1187077	Identifier	index		1187049	0					
ANR	1187078	ArrayIndexing	IPTable [ i ]		1187049	1					
ANR	1187079	Identifier	IPTable		1187049	0					
ANR	1187080	Identifier	i		1187049	1					
ANR	1187081	ExpressionStatement	"out [ i / 32 ] ^= ( - ( ut32 ) get_bit ( index % 32 , in [ index / 32 ] ) ^ out [ i / 32 ] ) & ( 1 << i )"	79:2:3026:3106	1187049	1	True				
ANR	1187082	AssignmentExpression	"out [ i / 32 ] ^= ( - ( ut32 ) get_bit ( index % 32 , in [ index / 32 ] ) ^ out [ i / 32 ] ) & ( 1 << i )"		1187049	0		^=			
ANR	1187083	ArrayIndexing	out [ i / 32 ]		1187049	0					
ANR	1187084	Identifier	out		1187049	0					
ANR	1187085	MultiplicativeExpression	i / 32		1187049	1		/			
ANR	1187086	Identifier	i		1187049	0					
ANR	1187087	PrimaryExpression	32		1187049	1					
ANR	1187088	BitAndExpression	"( - ( ut32 ) get_bit ( index % 32 , in [ index / 32 ] ) ^ out [ i / 32 ] ) & ( 1 << i )"		1187049	1		&			
ANR	1187089	ExclusiveOrExpression	"- ( ut32 ) get_bit ( index % 32 , in [ index / 32 ] ) ^ out [ i / 32 ]"		1187049	0		^			
ANR	1187090	UnaryOperationExpression	"- ( ut32 ) get_bit ( index % 32 , in [ index / 32 ] )"		1187049	0					
ANR	1187091	UnaryOperator	-		1187049	0					
ANR	1187092	CastExpression	"( ut32 ) get_bit ( index % 32 , in [ index / 32 ] )"		1187049	1					
ANR	1187093	CastTarget	ut32		1187049	0					
ANR	1187094	CallExpression	"get_bit ( index % 32 , in [ index / 32 ] )"		1187049	1					
ANR	1187095	Callee	get_bit		1187049	0					
ANR	1187096	Identifier	get_bit		1187049	0					
ANR	1187097	ArgumentList	index % 32		1187049	1					
ANR	1187098	Argument	index % 32		1187049	0					
ANR	1187099	MultiplicativeExpression	index % 32		1187049	0		%			
ANR	1187100	Identifier	index		1187049	0					
ANR	1187101	PrimaryExpression	32		1187049	1					
ANR	1187102	Argument	in [ index / 32 ]		1187049	1					
ANR	1187103	ArrayIndexing	in [ index / 32 ]		1187049	0					
ANR	1187104	Identifier	in		1187049	0					
ANR	1187105	MultiplicativeExpression	index / 32		1187049	1		/			
ANR	1187106	Identifier	index		1187049	0					
ANR	1187107	PrimaryExpression	32		1187049	1					
ANR	1187108	ArrayIndexing	out [ i / 32 ]		1187049	1					
ANR	1187109	Identifier	out		1187049	0					
ANR	1187110	MultiplicativeExpression	i / 32		1187049	1		/			
ANR	1187111	Identifier	i		1187049	0					
ANR	1187112	PrimaryExpression	32		1187049	1					
ANR	1187113	ShiftExpression	1 << i		1187049	1		<<			
ANR	1187114	PrimaryExpression	1		1187049	0					
ANR	1187115	Identifier	i		1187049	1					
ANR	1187116	ReturnType	void		1187049	1					
ANR	1187117	Identifier	apply_IP		1187049	2					
ANR	1187118	ParameterList	"ut32 in [ DW_BY_BLOCK ] , ut32 out [ DW_BY_BLOCK ]"		1187049	3					
ANR	1187119	Parameter	ut32 in [ DW_BY_BLOCK ]	74:14:2895:2914	1187049	0	True				
ANR	1187120	ParameterType	ut32 [ DW_BY_BLOCK ]		1187049	0					
ANR	1187121	Identifier	in		1187049	1					
ANR	1187122	Parameter	ut32 out [ DW_BY_BLOCK ]	74:36:2917:2937	1187049	1	True				
ANR	1187123	ParameterType	ut32 [ DW_BY_BLOCK ]		1187049	0					
ANR	1187124	Identifier	out		1187049	1					
ANR	1187125	CFGEntryNode	ENTRY		1187049		True				
ANR	1187126	CFGExitNode	EXIT		1187049		True				
ANR	1187127	Symbol	IPTable		1187049						
ANR	1187128	Symbol	* i		1187049						
ANR	1187129	Symbol	in		1187049						
ANR	1187130	Symbol	DW_BY_BLOCK		1187049						
ANR	1187131	Symbol	* IPTable		1187049						
ANR	1187132	Symbol	* index		1187049						
ANR	1187133	Symbol	* in		1187049						
ANR	1187134	Symbol	* out		1187049						
ANR	1187135	Symbol	index		1187049						
ANR	1187136	Symbol	i		1187049						
ANR	1187137	Symbol	get_bit		1187049						
ANR	1187138	Symbol	out		1187049						
ANR	1187139	Function	apply_FP	84:0:3114:3344							
ANR	1187140	FunctionDef	"apply_FP (ut32 in [ DW_BY_BLOCK ] , ut32 out [ DW_BY_BLOCK ])"		1187139	0					
ANR	1187141	CompoundStatement		84:59:3173:3344	1187139	0					
ANR	1187142	IdentifierDeclStatement	int index ;	85:1:3176:3185	1187139	0	True				
ANR	1187143	IdentifierDecl	index		1187139	0					
ANR	1187144	IdentifierDeclType	int		1187139	0					
ANR	1187145	Identifier	index		1187139	1					
ANR	1187146	IdentifierDeclStatement	int i ;	86:1:3188:3193	1187139	1	True				
ANR	1187147	IdentifierDecl	i		1187139	0					
ANR	1187148	IdentifierDeclType	int		1187139	0					
ANR	1187149	Identifier	i		1187139	1					
ANR	1187150	ForStatement	for ( i = 0 ; i < DW_BY_BLOCK * 32 ; i ++ )		1187139	2					
ANR	1187151	ForInit	i = 0 ;	87:6:3201:3206	1187139	0	True				
ANR	1187152	AssignmentExpression	i = 0		1187139	0		=			
ANR	1187153	Identifier	i		1187139	0					
ANR	1187154	PrimaryExpression	0		1187139	1					
ANR	1187155	Condition	i < DW_BY_BLOCK * 32	87:13:3208:3225	1187139	1	True				
ANR	1187156	RelationalExpression	i < DW_BY_BLOCK * 32		1187139	0		<			
ANR	1187157	Identifier	i		1187139	0					
ANR	1187158	MultiplicativeExpression	DW_BY_BLOCK * 32		1187139	1		*			
ANR	1187159	Identifier	DW_BY_BLOCK		1187139	0					
ANR	1187160	PrimaryExpression	32		1187139	1					
ANR	1187161	PostIncDecOperationExpression	i ++	87:33:3228:3230	1187139	2	True				
ANR	1187162	Identifier	i		1187139	0					
ANR	1187163	IncDec	++		1187139	1					
ANR	1187164	CompoundStatement		4:38:59:59	1187139	3					
ANR	1187165	ExpressionStatement	index = FPTable [ i ]	88:2:3237:3255	1187139	0	True				
ANR	1187166	AssignmentExpression	index = FPTable [ i ]		1187139	0		=			
ANR	1187167	Identifier	index		1187139	0					
ANR	1187168	ArrayIndexing	FPTable [ i ]		1187139	1					
ANR	1187169	Identifier	FPTable		1187139	0					
ANR	1187170	Identifier	i		1187139	1					
ANR	1187171	ExpressionStatement	"out [ i / 32 ] ^= ( - ( ut32 ) get_bit ( index % 32 , in [ index / 32 ] ) ^ out [ i / 32 ] ) & ( 1 << i )"	89:2:3259:3339	1187139	1	True				
ANR	1187172	AssignmentExpression	"out [ i / 32 ] ^= ( - ( ut32 ) get_bit ( index % 32 , in [ index / 32 ] ) ^ out [ i / 32 ] ) & ( 1 << i )"		1187139	0		^=			
ANR	1187173	ArrayIndexing	out [ i / 32 ]		1187139	0					
ANR	1187174	Identifier	out		1187139	0					
ANR	1187175	MultiplicativeExpression	i / 32		1187139	1		/			
ANR	1187176	Identifier	i		1187139	0					
ANR	1187177	PrimaryExpression	32		1187139	1					
ANR	1187178	BitAndExpression	"( - ( ut32 ) get_bit ( index % 32 , in [ index / 32 ] ) ^ out [ i / 32 ] ) & ( 1 << i )"		1187139	1		&			
ANR	1187179	ExclusiveOrExpression	"- ( ut32 ) get_bit ( index % 32 , in [ index / 32 ] ) ^ out [ i / 32 ]"		1187139	0		^			
ANR	1187180	UnaryOperationExpression	"- ( ut32 ) get_bit ( index % 32 , in [ index / 32 ] )"		1187139	0					
ANR	1187181	UnaryOperator	-		1187139	0					
ANR	1187182	CastExpression	"( ut32 ) get_bit ( index % 32 , in [ index / 32 ] )"		1187139	1					
ANR	1187183	CastTarget	ut32		1187139	0					
ANR	1187184	CallExpression	"get_bit ( index % 32 , in [ index / 32 ] )"		1187139	1					
ANR	1187185	Callee	get_bit		1187139	0					
ANR	1187186	Identifier	get_bit		1187139	0					
ANR	1187187	ArgumentList	index % 32		1187139	1					
ANR	1187188	Argument	index % 32		1187139	0					
ANR	1187189	MultiplicativeExpression	index % 32		1187139	0		%			
ANR	1187190	Identifier	index		1187139	0					
ANR	1187191	PrimaryExpression	32		1187139	1					
ANR	1187192	Argument	in [ index / 32 ]		1187139	1					
ANR	1187193	ArrayIndexing	in [ index / 32 ]		1187139	0					
ANR	1187194	Identifier	in		1187139	0					
ANR	1187195	MultiplicativeExpression	index / 32		1187139	1		/			
ANR	1187196	Identifier	index		1187139	0					
ANR	1187197	PrimaryExpression	32		1187139	1					
ANR	1187198	ArrayIndexing	out [ i / 32 ]		1187139	1					
ANR	1187199	Identifier	out		1187139	0					
ANR	1187200	MultiplicativeExpression	i / 32		1187139	1		/			
ANR	1187201	Identifier	i		1187139	0					
ANR	1187202	PrimaryExpression	32		1187139	1					
ANR	1187203	ShiftExpression	1 << i		1187139	1		<<			
ANR	1187204	PrimaryExpression	1		1187139	0					
ANR	1187205	Identifier	i		1187139	1					
ANR	1187206	ReturnType	void		1187139	1					
ANR	1187207	Identifier	apply_FP		1187139	2					
ANR	1187208	ParameterList	"ut32 in [ DW_BY_BLOCK ] , ut32 out [ DW_BY_BLOCK ]"		1187139	3					
ANR	1187209	Parameter	ut32 in [ DW_BY_BLOCK ]	84:14:3128:3147	1187139	0	True				
ANR	1187210	ParameterType	ut32 [ DW_BY_BLOCK ]		1187139	0					
ANR	1187211	Identifier	in		1187139	1					
ANR	1187212	Parameter	ut32 out [ DW_BY_BLOCK ]	84:36:3150:3170	1187139	1	True				
ANR	1187213	ParameterType	ut32 [ DW_BY_BLOCK ]		1187139	0					
ANR	1187214	Identifier	out		1187139	1					
ANR	1187215	CFGEntryNode	ENTRY		1187139		True				
ANR	1187216	CFGExitNode	EXIT		1187139		True				
ANR	1187217	Symbol	FPTable		1187139						
ANR	1187218	Symbol	* i		1187139						
ANR	1187219	Symbol	in		1187139						
ANR	1187220	Symbol	DW_BY_BLOCK		1187139						
ANR	1187221	Symbol	* index		1187139						
ANR	1187222	Symbol	* out		1187139						
ANR	1187223	Symbol	* in		1187139						
ANR	1187224	Symbol	index		1187139						
ANR	1187225	Symbol	i		1187139						
ANR	1187226	Symbol	* FPTable		1187139						
ANR	1187227	Symbol	get_bit		1187139						
ANR	1187228	Symbol	out		1187139						
ANR	1187229	Function	serpent_keyschedule	94:0:3347:4828							
ANR	1187230	FunctionDef	"serpent_keyschedule (struct serpent_state st , ut32 subkeys [ NB_SUBKEYS * DW_BY_BLOCK ])"		1187229	0					
ANR	1187231	CompoundStatement		95:40:3437:4828	1187229	0					
ANR	1187232	IfStatement	if ( ( st . key_size != 128 ) && ( st . key_size != 192 ) && ( st . key_size != 256 ) )		1187229	0					
ANR	1187233	Condition	( st . key_size != 128 ) && ( st . key_size != 192 ) && ( st . key_size != 256 )	96:5:3444:3515	1187229	0	True				
ANR	1187234	AndExpression	( st . key_size != 128 ) && ( st . key_size != 192 ) && ( st . key_size != 256 )		1187229	0		&&			
ANR	1187235	EqualityExpression	st . key_size != 128		1187229	0		!=			
ANR	1187236	MemberAccess	st . key_size		1187229	0					
ANR	1187237	Identifier	st		1187229	0					
ANR	1187238	Identifier	key_size		1187229	1					
ANR	1187239	PrimaryExpression	128		1187229	1					
ANR	1187240	AndExpression	( st . key_size != 192 ) && ( st . key_size != 256 )		1187229	1		&&			
ANR	1187241	EqualityExpression	st . key_size != 192		1187229	0		!=			
ANR	1187242	MemberAccess	st . key_size		1187229	0					
ANR	1187243	Identifier	st		1187229	0					
ANR	1187244	Identifier	key_size		1187229	1					
ANR	1187245	PrimaryExpression	192		1187229	1					
ANR	1187246	EqualityExpression	st . key_size != 256		1187229	1		!=			
ANR	1187247	MemberAccess	st . key_size		1187229	0					
ANR	1187248	Identifier	st		1187229	0					
ANR	1187249	Identifier	key_size		1187229	1					
ANR	1187250	PrimaryExpression	256		1187229	1					
ANR	1187251	CompoundStatement		3:28:80:80	1187229	1					
ANR	1187252	ExpressionStatement	"eprintf ( ""Invalid key size"" )"	98:2:3522:3550	1187229	0	True				
ANR	1187253	CallExpression	"eprintf ( ""Invalid key size"" )"		1187229	0					
ANR	1187254	Callee	eprintf		1187229	0					
ANR	1187255	Identifier	eprintf		1187229	0					
ANR	1187256	ArgumentList	"""Invalid key size"""		1187229	1					
ANR	1187257	Argument	"""Invalid key size"""		1187229	0					
ANR	1187258	PrimaryExpression	"""Invalid key size"""		1187229	0					
ANR	1187259	ExpressionStatement	exit ( 1 )	99:2:3554:3562	1187229	1	True				
ANR	1187260	CallExpression	exit ( 1 )		1187229	0					
ANR	1187261	Callee	exit		1187229	0					
ANR	1187262	Identifier	exit		1187229	0					
ANR	1187263	ArgumentList	1		1187229	1					
ANR	1187264	Argument	1		1187229	0					
ANR	1187265	PrimaryExpression	1		1187229	0					
ANR	1187266	IdentifierDeclStatement	ut32 tmpkeys [ DW_BY_BLOCK * NB_SUBKEYS + DW_BY_USERKEY ] = { 0 } ;	102:1:3569:3625	1187229	1	True				
ANR	1187267	IdentifierDecl	tmpkeys [ DW_BY_BLOCK * NB_SUBKEYS + DW_BY_USERKEY ] = { 0 }		1187229	0					
ANR	1187268	IdentifierDeclType	ut32 [ DW_BY_BLOCK * NB_SUBKEYS + DW_BY_USERKEY ]		1187229	0					
ANR	1187269	Identifier	tmpkeys		1187229	1					
ANR	1187270	AdditiveExpression	DW_BY_BLOCK * NB_SUBKEYS + DW_BY_USERKEY		1187229	2		+			
ANR	1187271	MultiplicativeExpression	DW_BY_BLOCK * NB_SUBKEYS		1187229	0		*			
ANR	1187272	Identifier	DW_BY_BLOCK		1187229	0					
ANR	1187273	Identifier	NB_SUBKEYS		1187229	1					
ANR	1187274	Identifier	DW_BY_USERKEY		1187229	1					
ANR	1187275	AssignmentExpression	tmpkeys [ DW_BY_BLOCK * NB_SUBKEYS + DW_BY_USERKEY ] = { 0 }		1187229	3		=			
ANR	1187276	Identifier	tmpkeys		1187229	0					
ANR	1187277	InitializerList	0		1187229	1					
ANR	1187278	PrimaryExpression	0		1187229	0					
ANR	1187279	IdentifierDeclStatement	const ut32 phi = 0x9e3779b9 ;	103:1:3628:3655	1187229	2	True				
ANR	1187280	IdentifierDecl	phi = 0x9e3779b9		1187229	0					
ANR	1187281	IdentifierDeclType	const ut32		1187229	0					
ANR	1187282	Identifier	phi		1187229	1					
ANR	1187283	AssignmentExpression	phi = 0x9e3779b9		1187229	2		=			
ANR	1187284	Identifier	phi		1187229	0					
ANR	1187285	PrimaryExpression	0x9e3779b9		1187229	1					
ANR	1187286	IdentifierDeclStatement	int si ;	104:1:3658:3664	1187229	3	True				
ANR	1187287	IdentifierDecl	si		1187229	0					
ANR	1187288	IdentifierDeclType	int		1187229	0					
ANR	1187289	Identifier	si		1187229	1					
ANR	1187290	IdentifierDeclStatement	"ut8 in , out ;"	105:1:3667:3678	1187229	4	True				
ANR	1187291	IdentifierDecl	in		1187229	0					
ANR	1187292	IdentifierDeclType	ut8		1187229	0					
ANR	1187293	Identifier	in		1187229	1					
ANR	1187294	IdentifierDecl	out		1187229	1					
ANR	1187295	IdentifierDeclType	ut8		1187229	0					
ANR	1187296	Identifier	out		1187229	1					
ANR	1187297	IdentifierDeclStatement	"int i , j , l ;"	106:1:3681:3692	1187229	5	True				
ANR	1187298	IdentifierDecl	i		1187229	0					
ANR	1187299	IdentifierDeclType	int		1187229	0					
ANR	1187300	Identifier	i		1187229	1					
ANR	1187301	IdentifierDecl	j		1187229	1					
ANR	1187302	IdentifierDeclType	int		1187229	0					
ANR	1187303	Identifier	j		1187229	1					
ANR	1187304	IdentifierDecl	l		1187229	2					
ANR	1187305	IdentifierDeclType	int		1187229	0					
ANR	1187306	Identifier	l		1187229	1					
ANR	1187307	ForStatement	for ( i = 0 ; i < st . key_size / 32 ; i ++ )		1187229	6					
ANR	1187308	ForInit	i = 0 ;	108:6:3701:3706	1187229	0	True				
ANR	1187309	AssignmentExpression	i = 0		1187229	0		=			
ANR	1187310	Identifier	i		1187229	0					
ANR	1187311	PrimaryExpression	0		1187229	1					
ANR	1187312	Condition	i < st . key_size / 32	108:13:3708:3725	1187229	1	True				
ANR	1187313	RelationalExpression	i < st . key_size / 32		1187229	0		<			
ANR	1187314	Identifier	i		1187229	0					
ANR	1187315	MultiplicativeExpression	st . key_size / 32		1187229	1		/			
ANR	1187316	MemberAccess	st . key_size		1187229	0					
ANR	1187317	Identifier	st		1187229	0					
ANR	1187318	Identifier	key_size		1187229	1					
ANR	1187319	PrimaryExpression	32		1187229	1					
ANR	1187320	PostIncDecOperationExpression	i ++	108:33:3728:3730	1187229	2	True				
ANR	1187321	Identifier	i		1187229	0					
ANR	1187322	IncDec	++		1187229	1					
ANR	1187323	CompoundStatement		14:38:295:295	1187229	3					
ANR	1187324	ExpressionStatement	tmpkeys [ i ] = st . key [ i ]	109:2:3737:3759	1187229	0	True				
ANR	1187325	AssignmentExpression	tmpkeys [ i ] = st . key [ i ]		1187229	0		=			
ANR	1187326	ArrayIndexing	tmpkeys [ i ]		1187229	0					
ANR	1187327	Identifier	tmpkeys		1187229	0					
ANR	1187328	Identifier	i		1187229	1					
ANR	1187329	ArrayIndexing	st . key [ i ]		1187229	1					
ANR	1187330	MemberAccess	st . key		1187229	0					
ANR	1187331	Identifier	st		1187229	0					
ANR	1187332	Identifier	key		1187229	1					
ANR	1187333	Identifier	i		1187229	1					
ANR	1187334	IfStatement	if ( st . key_size != 256 )		1187229	7					
ANR	1187335	Condition	st . key_size != 256	113:5:3786:3803	1187229	0	True				
ANR	1187336	EqualityExpression	st . key_size != 256		1187229	0		!=			
ANR	1187337	MemberAccess	st . key_size		1187229	0					
ANR	1187338	Identifier	st		1187229	0					
ANR	1187339	Identifier	key_size		1187229	1					
ANR	1187340	PrimaryExpression	256		1187229	1					
ANR	1187341	CompoundStatement		19:25:368:368	1187229	1					
ANR	1187342	ExpressionStatement	tmpkeys [ st . key_size / 32 ] = 1	114:2:3810:3837	1187229	0	True				
ANR	1187343	AssignmentExpression	tmpkeys [ st . key_size / 32 ] = 1		1187229	0		=			
ANR	1187344	ArrayIndexing	tmpkeys [ st . key_size / 32 ]		1187229	0					
ANR	1187345	Identifier	tmpkeys		1187229	0					
ANR	1187346	MultiplicativeExpression	st . key_size / 32		1187229	1		/			
ANR	1187347	MemberAccess	st . key_size		1187229	0					
ANR	1187348	Identifier	st		1187229	0					
ANR	1187349	Identifier	key_size		1187229	1					
ANR	1187350	PrimaryExpression	32		1187229	1					
ANR	1187351	PrimaryExpression	1		1187229	1					
ANR	1187352	ForStatement	for ( i = DW_BY_USERKEY ; i < NB_SUBKEYS * DW_BY_BLOCK + DW_BY_USERKEY ; i ++ )		1187229	8					
ANR	1187353	ForInit	i = DW_BY_USERKEY ;	117:6:3849:3864	1187229	0	True				
ANR	1187354	AssignmentExpression	i = DW_BY_USERKEY		1187229	0		=			
ANR	1187355	Identifier	i		1187229	0					
ANR	1187356	Identifier	DW_BY_USERKEY		1187229	1					
ANR	1187357	Condition	i < NB_SUBKEYS * DW_BY_BLOCK + DW_BY_USERKEY	117:23:3866:3905	1187229	1	True				
ANR	1187358	RelationalExpression	i < NB_SUBKEYS * DW_BY_BLOCK + DW_BY_USERKEY		1187229	0		<			
ANR	1187359	Identifier	i		1187229	0					
ANR	1187360	AdditiveExpression	NB_SUBKEYS * DW_BY_BLOCK + DW_BY_USERKEY		1187229	1		+			
ANR	1187361	MultiplicativeExpression	NB_SUBKEYS * DW_BY_BLOCK		1187229	0		*			
ANR	1187362	Identifier	NB_SUBKEYS		1187229	0					
ANR	1187363	Identifier	DW_BY_BLOCK		1187229	1					
ANR	1187364	Identifier	DW_BY_USERKEY		1187229	1					
ANR	1187365	PostIncDecOperationExpression	i ++	117:65:3908:3910	1187229	2	True				
ANR	1187366	Identifier	i		1187229	0					
ANR	1187367	IncDec	++		1187229	1					
ANR	1187368	CompoundStatement		23:70:475:475	1187229	3					
ANR	1187369	ExpressionStatement	tmpkeys [ i ] = tmpkeys [ i - 8 ] ^ tmpkeys [ i - 5 ] ^ tmpkeys [ i - 3 ] ^ tmpkeys [ i - 1 ] ^ phi ^ ( i - 8 )	118:2:3917:4004	1187229	0	True				
ANR	1187370	AssignmentExpression	tmpkeys [ i ] = tmpkeys [ i - 8 ] ^ tmpkeys [ i - 5 ] ^ tmpkeys [ i - 3 ] ^ tmpkeys [ i - 1 ] ^ phi ^ ( i - 8 )		1187229	0		=			
ANR	1187371	ArrayIndexing	tmpkeys [ i ]		1187229	0					
ANR	1187372	Identifier	tmpkeys		1187229	0					
ANR	1187373	Identifier	i		1187229	1					
ANR	1187374	ExclusiveOrExpression	tmpkeys [ i - 8 ] ^ tmpkeys [ i - 5 ] ^ tmpkeys [ i - 3 ] ^ tmpkeys [ i - 1 ] ^ phi ^ ( i - 8 )		1187229	1		^			
ANR	1187375	ArrayIndexing	tmpkeys [ i - 8 ]		1187229	0					
ANR	1187376	Identifier	tmpkeys		1187229	0					
ANR	1187377	AdditiveExpression	i - 8		1187229	1		-			
ANR	1187378	Identifier	i		1187229	0					
ANR	1187379	PrimaryExpression	8		1187229	1					
ANR	1187380	ExclusiveOrExpression	tmpkeys [ i - 5 ] ^ tmpkeys [ i - 3 ] ^ tmpkeys [ i - 1 ] ^ phi ^ ( i - 8 )		1187229	1		^			
ANR	1187381	ArrayIndexing	tmpkeys [ i - 5 ]		1187229	0					
ANR	1187382	Identifier	tmpkeys		1187229	0					
ANR	1187383	AdditiveExpression	i - 5		1187229	1		-			
ANR	1187384	Identifier	i		1187229	0					
ANR	1187385	PrimaryExpression	5		1187229	1					
ANR	1187386	ExclusiveOrExpression	tmpkeys [ i - 3 ] ^ tmpkeys [ i - 1 ] ^ phi ^ ( i - 8 )		1187229	1		^			
ANR	1187387	ArrayIndexing	tmpkeys [ i - 3 ]		1187229	0					
ANR	1187388	Identifier	tmpkeys		1187229	0					
ANR	1187389	AdditiveExpression	i - 3		1187229	1		-			
ANR	1187390	Identifier	i		1187229	0					
ANR	1187391	PrimaryExpression	3		1187229	1					
ANR	1187392	ExclusiveOrExpression	tmpkeys [ i - 1 ] ^ phi ^ ( i - 8 )		1187229	1		^			
ANR	1187393	ArrayIndexing	tmpkeys [ i - 1 ]		1187229	0					
ANR	1187394	Identifier	tmpkeys		1187229	0					
ANR	1187395	AdditiveExpression	i - 1		1187229	1		-			
ANR	1187396	Identifier	i		1187229	0					
ANR	1187397	PrimaryExpression	1		1187229	1					
ANR	1187398	ExclusiveOrExpression	phi ^ ( i - 8 )		1187229	1		^			
ANR	1187399	Identifier	phi		1187229	0					
ANR	1187400	AdditiveExpression	i - 8		1187229	1		-			
ANR	1187401	Identifier	i		1187229	0					
ANR	1187402	PrimaryExpression	8		1187229	1					
ANR	1187403	ExpressionStatement	"rotl ( tmpkeys + i , 11 )"	120:2:4008:4030	1187229	1	True				
ANR	1187404	CallExpression	"rotl ( tmpkeys + i , 11 )"		1187229	0					
ANR	1187405	Callee	rotl		1187229	0					
ANR	1187406	Identifier	rotl		1187229	0					
ANR	1187407	ArgumentList	tmpkeys + i		1187229	1					
ANR	1187408	Argument	tmpkeys + i		1187229	0					
ANR	1187409	AdditiveExpression	tmpkeys + i		1187229	0		+			
ANR	1187410	Identifier	tmpkeys		1187229	0					
ANR	1187411	Identifier	i		1187229	1					
ANR	1187412	Argument	11		1187229	1					
ANR	1187413	PrimaryExpression	11		1187229	0					
ANR	1187414	ForStatement	for ( i = 0 ; i < NB_SUBKEYS ; i ++ )		1187229	9					
ANR	1187415	ForInit	i = 0 ;	124:6:4073:4078	1187229	0	True				
ANR	1187416	AssignmentExpression	i = 0		1187229	0		=			
ANR	1187417	Identifier	i		1187229	0					
ANR	1187418	PrimaryExpression	0		1187229	1					
ANR	1187419	Condition	i < NB_SUBKEYS	124:13:4080:4093	1187229	1	True				
ANR	1187420	RelationalExpression	i < NB_SUBKEYS		1187229	0		<			
ANR	1187421	Identifier	i		1187229	0					
ANR	1187422	Identifier	NB_SUBKEYS		1187229	1					
ANR	1187423	PostIncDecOperationExpression	i ++	124:29:4096:4098	1187229	2	True				
ANR	1187424	Identifier	i		1187229	0					
ANR	1187425	IncDec	++		1187229	1					
ANR	1187426	CompoundStatement		30:34:663:663	1187229	3					
ANR	1187427	ExpressionStatement	si = ( 32 + 3 - i ) % 8	125:2:4105:4126	1187229	0	True				
ANR	1187428	AssignmentExpression	si = ( 32 + 3 - i ) % 8		1187229	0		=			
ANR	1187429	Identifier	si		1187229	0					
ANR	1187430	MultiplicativeExpression	( 32 + 3 - i ) % 8		1187229	1		%			
ANR	1187431	AdditiveExpression	32 + 3 - i		1187229	0		+			
ANR	1187432	PrimaryExpression	32		1187229	0					
ANR	1187433	AdditiveExpression	3 - i		1187229	1		-			
ANR	1187434	PrimaryExpression	3		1187229	0					
ANR	1187435	Identifier	i		1187229	1					
ANR	1187436	PrimaryExpression	8		1187229	1					
ANR	1187437	ForStatement	for ( j = 0 ; j < NIBBLES_BY_SUBKEY ; j ++ )		1187229	1					
ANR	1187438	ForInit	j = 0 ;	128:7:4183:4188	1187229	0	True				
ANR	1187439	AssignmentExpression	j = 0		1187229	0		=			
ANR	1187440	Identifier	j		1187229	0					
ANR	1187441	PrimaryExpression	0		1187229	1					
ANR	1187442	Condition	j < NIBBLES_BY_SUBKEY	128:14:4190:4210	1187229	1	True				
ANR	1187443	RelationalExpression	j < NIBBLES_BY_SUBKEY		1187229	0		<			
ANR	1187444	Identifier	j		1187229	0					
ANR	1187445	Identifier	NIBBLES_BY_SUBKEY		1187229	1					
ANR	1187446	PostIncDecOperationExpression	j ++	128:37:4213:4215	1187229	2	True				
ANR	1187447	Identifier	j		1187229	0					
ANR	1187448	IncDec	++		1187229	1					
ANR	1187449	CompoundStatement		34:42:780:780	1187229	3					
ANR	1187450	ExpressionStatement	"in = get_bit ( j , tmpkeys [ 0 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) | get_bit ( j , tmpkeys [ 1 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 1 | get_bit ( j , tmpkeys [ 2 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 2 | get_bit ( j , tmpkeys [ 3 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 3"	129:3:4223:4468	1187229	0	True				
ANR	1187451	AssignmentExpression	"in = get_bit ( j , tmpkeys [ 0 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) | get_bit ( j , tmpkeys [ 1 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 1 | get_bit ( j , tmpkeys [ 2 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 2 | get_bit ( j , tmpkeys [ 3 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 3"		1187229	0		=			
ANR	1187452	Identifier	in		1187229	0					
ANR	1187453	InclusiveOrExpression	"get_bit ( j , tmpkeys [ 0 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) | get_bit ( j , tmpkeys [ 1 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 1 | get_bit ( j , tmpkeys [ 2 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 2 | get_bit ( j , tmpkeys [ 3 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 3"		1187229	1		|			
ANR	1187454	CallExpression	"get_bit ( j , tmpkeys [ 0 + DW_BY_BLOCK * i + DW_BY_USERKEY ] )"		1187229	0					
ANR	1187455	Callee	get_bit		1187229	0					
ANR	1187456	Identifier	get_bit		1187229	0					
ANR	1187457	ArgumentList	j		1187229	1					
ANR	1187458	Argument	j		1187229	0					
ANR	1187459	Identifier	j		1187229	0					
ANR	1187460	Argument	tmpkeys [ 0 + DW_BY_BLOCK * i + DW_BY_USERKEY ]		1187229	1					
ANR	1187461	ArrayIndexing	tmpkeys [ 0 + DW_BY_BLOCK * i + DW_BY_USERKEY ]		1187229	0					
ANR	1187462	Identifier	tmpkeys		1187229	0					
ANR	1187463	AdditiveExpression	0 + DW_BY_BLOCK * i + DW_BY_USERKEY		1187229	1		+			
ANR	1187464	PrimaryExpression	0		1187229	0					
ANR	1187465	AdditiveExpression	DW_BY_BLOCK * i + DW_BY_USERKEY		1187229	1		+			
ANR	1187466	MultiplicativeExpression	DW_BY_BLOCK * i		1187229	0		*			
ANR	1187467	Identifier	DW_BY_BLOCK		1187229	0					
ANR	1187468	Identifier	i		1187229	1					
ANR	1187469	Identifier	DW_BY_USERKEY		1187229	1					
ANR	1187470	InclusiveOrExpression	"get_bit ( j , tmpkeys [ 1 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 1 | get_bit ( j , tmpkeys [ 2 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 2 | get_bit ( j , tmpkeys [ 3 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 3"		1187229	1		|			
ANR	1187471	ShiftExpression	"get_bit ( j , tmpkeys [ 1 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 1"		1187229	0		<<			
ANR	1187472	CallExpression	"get_bit ( j , tmpkeys [ 1 + DW_BY_BLOCK * i + DW_BY_USERKEY ] )"		1187229	0					
ANR	1187473	Callee	get_bit		1187229	0					
ANR	1187474	Identifier	get_bit		1187229	0					
ANR	1187475	ArgumentList	j		1187229	1					
ANR	1187476	Argument	j		1187229	0					
ANR	1187477	Identifier	j		1187229	0					
ANR	1187478	Argument	tmpkeys [ 1 + DW_BY_BLOCK * i + DW_BY_USERKEY ]		1187229	1					
ANR	1187479	ArrayIndexing	tmpkeys [ 1 + DW_BY_BLOCK * i + DW_BY_USERKEY ]		1187229	0					
ANR	1187480	Identifier	tmpkeys		1187229	0					
ANR	1187481	AdditiveExpression	1 + DW_BY_BLOCK * i + DW_BY_USERKEY		1187229	1		+			
ANR	1187482	PrimaryExpression	1		1187229	0					
ANR	1187483	AdditiveExpression	DW_BY_BLOCK * i + DW_BY_USERKEY		1187229	1		+			
ANR	1187484	MultiplicativeExpression	DW_BY_BLOCK * i		1187229	0		*			
ANR	1187485	Identifier	DW_BY_BLOCK		1187229	0					
ANR	1187486	Identifier	i		1187229	1					
ANR	1187487	Identifier	DW_BY_USERKEY		1187229	1					
ANR	1187488	PrimaryExpression	1		1187229	1					
ANR	1187489	InclusiveOrExpression	"get_bit ( j , tmpkeys [ 2 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 2 | get_bit ( j , tmpkeys [ 3 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 3"		1187229	1		|			
ANR	1187490	ShiftExpression	"get_bit ( j , tmpkeys [ 2 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 2"		1187229	0		<<			
ANR	1187491	CallExpression	"get_bit ( j , tmpkeys [ 2 + DW_BY_BLOCK * i + DW_BY_USERKEY ] )"		1187229	0					
ANR	1187492	Callee	get_bit		1187229	0					
ANR	1187493	Identifier	get_bit		1187229	0					
ANR	1187494	ArgumentList	j		1187229	1					
ANR	1187495	Argument	j		1187229	0					
ANR	1187496	Identifier	j		1187229	0					
ANR	1187497	Argument	tmpkeys [ 2 + DW_BY_BLOCK * i + DW_BY_USERKEY ]		1187229	1					
ANR	1187498	ArrayIndexing	tmpkeys [ 2 + DW_BY_BLOCK * i + DW_BY_USERKEY ]		1187229	0					
ANR	1187499	Identifier	tmpkeys		1187229	0					
ANR	1187500	AdditiveExpression	2 + DW_BY_BLOCK * i + DW_BY_USERKEY		1187229	1		+			
ANR	1187501	PrimaryExpression	2		1187229	0					
ANR	1187502	AdditiveExpression	DW_BY_BLOCK * i + DW_BY_USERKEY		1187229	1		+			
ANR	1187503	MultiplicativeExpression	DW_BY_BLOCK * i		1187229	0		*			
ANR	1187504	Identifier	DW_BY_BLOCK		1187229	0					
ANR	1187505	Identifier	i		1187229	1					
ANR	1187506	Identifier	DW_BY_USERKEY		1187229	1					
ANR	1187507	PrimaryExpression	2		1187229	1					
ANR	1187508	ShiftExpression	"get_bit ( j , tmpkeys [ 3 + DW_BY_BLOCK * i + DW_BY_USERKEY ] ) << 3"		1187229	1		<<			
ANR	1187509	CallExpression	"get_bit ( j , tmpkeys [ 3 + DW_BY_BLOCK * i + DW_BY_USERKEY ] )"		1187229	0					
ANR	1187510	Callee	get_bit		1187229	0					
ANR	1187511	Identifier	get_bit		1187229	0					
ANR	1187512	ArgumentList	j		1187229	1					
ANR	1187513	Argument	j		1187229	0					
ANR	1187514	Identifier	j		1187229	0					
ANR	1187515	Argument	tmpkeys [ 3 + DW_BY_BLOCK * i + DW_BY_USERKEY ]		1187229	1					
ANR	1187516	ArrayIndexing	tmpkeys [ 3 + DW_BY_BLOCK * i + DW_BY_USERKEY ]		1187229	0					
ANR	1187517	Identifier	tmpkeys		1187229	0					
ANR	1187518	AdditiveExpression	3 + DW_BY_BLOCK * i + DW_BY_USERKEY		1187229	1		+			
ANR	1187519	PrimaryExpression	3		1187229	0					
ANR	1187520	AdditiveExpression	DW_BY_BLOCK * i + DW_BY_USERKEY		1187229	1		+			
ANR	1187521	MultiplicativeExpression	DW_BY_BLOCK * i		1187229	0		*			
ANR	1187522	Identifier	DW_BY_BLOCK		1187229	0					
ANR	1187523	Identifier	i		1187229	1					
ANR	1187524	Identifier	DW_BY_USERKEY		1187229	1					
ANR	1187525	PrimaryExpression	3		1187229	1					
ANR	1187526	ExpressionStatement	"out = apply_sbox ( si , in )"	133:3:4473:4498	1187229	1	True				
ANR	1187527	AssignmentExpression	"out = apply_sbox ( si , in )"		1187229	0		=			
ANR	1187528	Identifier	out		1187229	0					
ANR	1187529	CallExpression	"apply_sbox ( si , in )"		1187229	1					
ANR	1187530	Callee	apply_sbox		1187229	0					
ANR	1187531	Identifier	apply_sbox		1187229	0					
ANR	1187532	ArgumentList	si		1187229	1					
ANR	1187533	Argument	si		1187229	0					
ANR	1187534	Identifier	si		1187229	0					
ANR	1187535	Argument	in		1187229	1					
ANR	1187536	Identifier	in		1187229	0					
ANR	1187537	ForStatement	for ( l = 0 ; l < DW_BY_BLOCK ; l ++ )		1187229	2					
ANR	1187538	ForInit	l = 0 ;	134:8:4508:4513	1187229	0	True				
ANR	1187539	AssignmentExpression	l = 0		1187229	0		=			
ANR	1187540	Identifier	l		1187229	0					
ANR	1187541	PrimaryExpression	0		1187229	1					
ANR	1187542	Condition	l < DW_BY_BLOCK	134:15:4515:4529	1187229	1	True				
ANR	1187543	RelationalExpression	l < DW_BY_BLOCK		1187229	0		<			
ANR	1187544	Identifier	l		1187229	0					
ANR	1187545	Identifier	DW_BY_BLOCK		1187229	1					
ANR	1187546	PostIncDecOperationExpression	l ++	134:32:4532:4534	1187229	2	True				
ANR	1187547	Identifier	l		1187229	0					
ANR	1187548	IncDec	++		1187229	1					
ANR	1187549	CompoundStatement		40:37:1099:1099	1187229	3					
ANR	1187550	ExpressionStatement	"subkeys [ l + DW_BY_BLOCK * i ] |= get_bit ( l , ( ut32 ) out ) << j"	135:4:4543:4598	1187229	0	True				
ANR	1187551	AssignmentExpression	"subkeys [ l + DW_BY_BLOCK * i ] |= get_bit ( l , ( ut32 ) out ) << j"		1187229	0		|=			
ANR	1187552	ArrayIndexing	subkeys [ l + DW_BY_BLOCK * i ]		1187229	0					
ANR	1187553	Identifier	subkeys		1187229	0					
ANR	1187554	AdditiveExpression	l + DW_BY_BLOCK * i		1187229	1		+			
ANR	1187555	Identifier	l		1187229	0					
ANR	1187556	MultiplicativeExpression	DW_BY_BLOCK * i		1187229	1		*			
ANR	1187557	Identifier	DW_BY_BLOCK		1187229	0					
ANR	1187558	Identifier	i		1187229	1					
ANR	1187559	ShiftExpression	"get_bit ( l , ( ut32 ) out ) << j"		1187229	1		<<			
ANR	1187560	CallExpression	"get_bit ( l , ( ut32 ) out )"		1187229	0					
ANR	1187561	Callee	get_bit		1187229	0					
ANR	1187562	Identifier	get_bit		1187229	0					
ANR	1187563	ArgumentList	l		1187229	1					
ANR	1187564	Argument	l		1187229	0					
ANR	1187565	Identifier	l		1187229	0					
ANR	1187566	Argument	( ut32 ) out		1187229	1					
ANR	1187567	CastExpression	( ut32 ) out		1187229	0					
ANR	1187568	CastTarget	ut32		1187229	0					
ANR	1187569	Identifier	out		1187229	1					
ANR	1187570	Identifier	j		1187229	1					
ANR	1187571	ForStatement	for ( i = 0 ; i < NB_SUBKEYS ; i ++ )		1187229	10					
ANR	1187572	ForInit	i = 0 ;	141:6:4648:4653	1187229	0	True				
ANR	1187573	AssignmentExpression	i = 0		1187229	0		=			
ANR	1187574	Identifier	i		1187229	0					
ANR	1187575	PrimaryExpression	0		1187229	1					
ANR	1187576	Condition	i < NB_SUBKEYS	141:13:4655:4668	1187229	1	True				
ANR	1187577	RelationalExpression	i < NB_SUBKEYS		1187229	0		<			
ANR	1187578	Identifier	i		1187229	0					
ANR	1187579	Identifier	NB_SUBKEYS		1187229	1					
ANR	1187580	PostIncDecOperationExpression	i ++	141:29:4671:4673	1187229	2	True				
ANR	1187581	Identifier	i		1187229	0					
ANR	1187582	IncDec	++		1187229	1					
ANR	1187583	CompoundStatement		47:34:1238:1238	1187229	3					
ANR	1187584	ExpressionStatement	"apply_IP ( & subkeys [ i * DW_BY_BLOCK ] , & tmpkeys [ DW_BY_USERKEY + i * DW_BY_BLOCK ] )"	142:2:4680:4760	1187229	0	True				
ANR	1187585	CallExpression	"apply_IP ( & subkeys [ i * DW_BY_BLOCK ] , & tmpkeys [ DW_BY_USERKEY + i * DW_BY_BLOCK ] )"		1187229	0					
ANR	1187586	Callee	apply_IP		1187229	0					
ANR	1187587	Identifier	apply_IP		1187229	0					
ANR	1187588	ArgumentList	& subkeys [ i * DW_BY_BLOCK ]		1187229	1					
ANR	1187589	Argument	& subkeys [ i * DW_BY_BLOCK ]		1187229	0					
ANR	1187590	UnaryOperationExpression	& subkeys [ i * DW_BY_BLOCK ]		1187229	0					
ANR	1187591	UnaryOperator	&		1187229	0					
ANR	1187592	ArrayIndexing	subkeys [ i * DW_BY_BLOCK ]		1187229	1					
ANR	1187593	Identifier	subkeys		1187229	0					
ANR	1187594	MultiplicativeExpression	i * DW_BY_BLOCK		1187229	1		*			
ANR	1187595	Identifier	i		1187229	0					
ANR	1187596	Identifier	DW_BY_BLOCK		1187229	1					
ANR	1187597	Argument	& tmpkeys [ DW_BY_USERKEY + i * DW_BY_BLOCK ]		1187229	1					
ANR	1187598	UnaryOperationExpression	& tmpkeys [ DW_BY_USERKEY + i * DW_BY_BLOCK ]		1187229	0					
ANR	1187599	UnaryOperator	&		1187229	0					
ANR	1187600	ArrayIndexing	tmpkeys [ DW_BY_USERKEY + i * DW_BY_BLOCK ]		1187229	1					
ANR	1187601	Identifier	tmpkeys		1187229	0					
ANR	1187602	AdditiveExpression	DW_BY_USERKEY + i * DW_BY_BLOCK		1187229	1		+			
ANR	1187603	Identifier	DW_BY_USERKEY		1187229	0					
ANR	1187604	MultiplicativeExpression	i * DW_BY_BLOCK		1187229	1		*			
ANR	1187605	Identifier	i		1187229	0					
ANR	1187606	Identifier	DW_BY_BLOCK		1187229	1					
ANR	1187607	ExpressionStatement	"memcpy ( subkeys , tmpkeys + DW_BY_USERKEY , 132 * sizeof ( ut32 ) )"	146:1:4767:4826	1187229	11	True				
ANR	1187608	CallExpression	"memcpy ( subkeys , tmpkeys + DW_BY_USERKEY , 132 * sizeof ( ut32 ) )"		1187229	0					
ANR	1187609	Callee	memcpy		1187229	0					
ANR	1187610	Identifier	memcpy		1187229	0					
ANR	1187611	ArgumentList	subkeys		1187229	1					
ANR	1187612	Argument	subkeys		1187229	0					
ANR	1187613	Identifier	subkeys		1187229	0					
ANR	1187614	Argument	tmpkeys + DW_BY_USERKEY		1187229	1					
ANR	1187615	AdditiveExpression	tmpkeys + DW_BY_USERKEY		1187229	0		+			
ANR	1187616	Identifier	tmpkeys		1187229	0					
ANR	1187617	Identifier	DW_BY_USERKEY		1187229	1					
ANR	1187618	Argument	132 * sizeof ( ut32 )		1187229	2					
ANR	1187619	MultiplicativeExpression	132 * sizeof ( ut32 )		1187229	0		*			
ANR	1187620	PrimaryExpression	132		1187229	0					
ANR	1187621	SizeofExpression	sizeof ( ut32 )		1187229	1					
ANR	1187622	Sizeof	sizeof		1187229	0					
ANR	1187623	SizeofOperand	ut32		1187229	1					
ANR	1187624	ReturnType	void		1187229	1					
ANR	1187625	Identifier	serpent_keyschedule		1187229	2					
ANR	1187626	ParameterList	"struct serpent_state st , ut32 subkeys [ NB_SUBKEYS * DW_BY_BLOCK ]"		1187229	3					
ANR	1187627	Parameter	struct serpent_state st	94:25:3372:3394	1187229	0	True				
ANR	1187628	ParameterType	struct serpent_state		1187229	0					
ANR	1187629	Identifier	st		1187229	1					
ANR	1187630	Parameter	ut32 subkeys [ NB_SUBKEYS * DW_BY_BLOCK ]	95:2:3399:3434	1187229	1	True				
ANR	1187631	ParameterType	ut32 [ NB_SUBKEYS * DW_BY_BLOCK ]		1187229	0					
ANR	1187632	Identifier	subkeys		1187229	1					
ANR	1187633	CFGEntryNode	ENTRY		1187229		True				
ANR	1187634	CFGExitNode	EXIT		1187229		True				
ANR	1187635	Symbol	NB_SUBKEYS		1187229						
ANR	1187636	Symbol	st . key		1187229						
ANR	1187637	Symbol	DW_BY_USERKEY		1187229						
ANR	1187638	Symbol	* st		1187229						
ANR	1187639	Symbol	out		1187229						
ANR	1187640	Symbol	si		1187229						
ANR	1187641	Symbol	* tmpkeys		1187229						
ANR	1187642	Symbol	subkeys		1187229						
ANR	1187643	Symbol	st		1187229						
ANR	1187644	Symbol	* st . key		1187229						
ANR	1187645	Symbol	tmpkeys		1187229						
ANR	1187646	Symbol	in		1187229						
ANR	1187647	Symbol	DW_BY_BLOCK		1187229						
ANR	1187648	Symbol	i		1187229						
ANR	1187649	Symbol	j		1187229						
ANR	1187650	Symbol	l		1187229						
ANR	1187651	Symbol	get_bit		1187229						
ANR	1187652	Symbol	phi		1187229						
ANR	1187653	Symbol	* DW_BY_USERKEY		1187229						
ANR	1187654	Symbol	* i		1187229						
ANR	1187655	Symbol	NIBBLES_BY_SUBKEY		1187229						
ANR	1187656	Symbol	* DW_BY_BLOCK		1187229						
ANR	1187657	Symbol	* st . key_size		1187229						
ANR	1187658	Symbol	* subkeys		1187229						
ANR	1187659	Symbol	* l		1187229						
ANR	1187660	Symbol	apply_sbox		1187229						
ANR	1187661	Symbol	st . key_size		1187229						
ANR	1187662	Function	apply_xor	149:0:4831:4972							
ANR	1187663	FunctionDef	"apply_xor (ut32 block [ DW_BY_BLOCK ] , ut32 subkey [ DW_BY_BLOCK ])"		1187662	0					
ANR	1187664	CompoundStatement		149:66:4897:4972	1187662	0					
ANR	1187665	IdentifierDeclStatement	int i ;	150:1:4900:4905	1187662	0	True				
ANR	1187666	IdentifierDecl	i		1187662	0					
ANR	1187667	IdentifierDeclType	int		1187662	0					
ANR	1187668	Identifier	i		1187662	1					
ANR	1187669	ForStatement	for ( i = 0 ; i < DW_BY_BLOCK ; i ++ )		1187662	1					
ANR	1187670	ForInit	i = 0 ;	151:6:4913:4918	1187662	0	True				
ANR	1187671	AssignmentExpression	i = 0		1187662	0		=			
ANR	1187672	Identifier	i		1187662	0					
ANR	1187673	PrimaryExpression	0		1187662	1					
ANR	1187674	Condition	i < DW_BY_BLOCK	151:13:4920:4934	1187662	1	True				
ANR	1187675	RelationalExpression	i < DW_BY_BLOCK		1187662	0		<			
ANR	1187676	Identifier	i		1187662	0					
ANR	1187677	Identifier	DW_BY_BLOCK		1187662	1					
ANR	1187678	PostIncDecOperationExpression	i ++	151:30:4937:4939	1187662	2	True				
ANR	1187679	Identifier	i		1187662	0					
ANR	1187680	IncDec	++		1187662	1					
ANR	1187681	CompoundStatement		3:35:44:44	1187662	3					
ANR	1187682	ExpressionStatement	block [ i ] ^= subkey [ i ]	152:2:4946:4967	1187662	0	True				
ANR	1187683	AssignmentExpression	block [ i ] ^= subkey [ i ]		1187662	0		^=			
ANR	1187684	ArrayIndexing	block [ i ]		1187662	0					
ANR	1187685	Identifier	block		1187662	0					
ANR	1187686	Identifier	i		1187662	1					
ANR	1187687	ArrayIndexing	subkey [ i ]		1187662	1					
ANR	1187688	Identifier	subkey		1187662	0					
ANR	1187689	Identifier	i		1187662	1					
ANR	1187690	ReturnType	void		1187662	1					
ANR	1187691	Identifier	apply_xor		1187662	2					
ANR	1187692	ParameterList	"ut32 block [ DW_BY_BLOCK ] , ut32 subkey [ DW_BY_BLOCK ]"		1187662	3					
ANR	1187693	Parameter	ut32 block [ DW_BY_BLOCK ]	149:15:4846:4868	1187662	0	True				
ANR	1187694	ParameterType	ut32 [ DW_BY_BLOCK ]		1187662	0					
ANR	1187695	Identifier	block		1187662	1					
ANR	1187696	Parameter	ut32 subkey [ DW_BY_BLOCK ]	149:40:4871:4894	1187662	1	True				
ANR	1187697	ParameterType	ut32 [ DW_BY_BLOCK ]		1187662	0					
ANR	1187698	Identifier	subkey		1187662	1					
ANR	1187699	CFGEntryNode	ENTRY		1187662		True				
ANR	1187700	CFGExitNode	EXIT		1187662		True				
ANR	1187701	Symbol	* subkey		1187662						
ANR	1187702	Symbol	subkey		1187662						
ANR	1187703	Symbol	* i		1187662						
ANR	1187704	Symbol	DW_BY_BLOCK		1187662						
ANR	1187705	Symbol	i		1187662						
ANR	1187706	Symbol	block		1187662						
ANR	1187707	Symbol	* block		1187662						
ANR	1187708	Function	apply_permut	156:0:4975:5469							
ANR	1187709	FunctionDef	apply_permut (ut32 block [ DW_BY_BLOCK ])		1187708	0					
ANR	1187710	CompoundStatement		156:43:5018:5469	1187708	0					
ANR	1187711	IdentifierDeclStatement	ut32 tmp_block [ DW_BY_BLOCK ] = { 0 } ;	157:1:5021:5054	1187708	0	True				
ANR	1187712	IdentifierDecl	tmp_block [ DW_BY_BLOCK ] = { 0 }		1187708	0					
ANR	1187713	IdentifierDeclType	ut32 [ DW_BY_BLOCK ]		1187708	0					
ANR	1187714	Identifier	tmp_block		1187708	1					
ANR	1187715	Identifier	DW_BY_BLOCK		1187708	2					
ANR	1187716	AssignmentExpression	tmp_block [ DW_BY_BLOCK ] = { 0 }		1187708	3		=			
ANR	1187717	Identifier	DW_BY_BLOCK		1187708	0					
ANR	1187718	InitializerList	0		1187708	1					
ANR	1187719	PrimaryExpression	0		1187708	0					
ANR	1187720	ExpressionStatement	"apply_FP ( block , tmp_block )"	158:1:5057:5084	1187708	1	True				
ANR	1187721	CallExpression	"apply_FP ( block , tmp_block )"		1187708	0					
ANR	1187722	Callee	apply_FP		1187708	0					
ANR	1187723	Identifier	apply_FP		1187708	0					
ANR	1187724	ArgumentList	block		1187708	1					
ANR	1187725	Argument	block		1187708	0					
ANR	1187726	Identifier	block		1187708	0					
ANR	1187727	Argument	tmp_block		1187708	1					
ANR	1187728	Identifier	tmp_block		1187708	0					
ANR	1187729	ExpressionStatement	"rotl ( tmp_block + 0 , 13 )"	159:1:5087:5111	1187708	2	True				
ANR	1187730	CallExpression	"rotl ( tmp_block + 0 , 13 )"		1187708	0					
ANR	1187731	Callee	rotl		1187708	0					
ANR	1187732	Identifier	rotl		1187708	0					
ANR	1187733	ArgumentList	tmp_block + 0		1187708	1					
ANR	1187734	Argument	tmp_block + 0		1187708	0					
ANR	1187735	AdditiveExpression	tmp_block + 0		1187708	0		+			
ANR	1187736	Identifier	tmp_block		1187708	0					
ANR	1187737	PrimaryExpression	0		1187708	1					
ANR	1187738	Argument	13		1187708	1					
ANR	1187739	PrimaryExpression	13		1187708	0					
ANR	1187740	ExpressionStatement	"rotl ( tmp_block + 2 , 3 )"	160:1:5114:5137	1187708	3	True				
ANR	1187741	CallExpression	"rotl ( tmp_block + 2 , 3 )"		1187708	0					
ANR	1187742	Callee	rotl		1187708	0					
ANR	1187743	Identifier	rotl		1187708	0					
ANR	1187744	ArgumentList	tmp_block + 2		1187708	1					
ANR	1187745	Argument	tmp_block + 2		1187708	0					
ANR	1187746	AdditiveExpression	tmp_block + 2		1187708	0		+			
ANR	1187747	Identifier	tmp_block		1187708	0					
ANR	1187748	PrimaryExpression	2		1187708	1					
ANR	1187749	Argument	3		1187708	1					
ANR	1187750	PrimaryExpression	3		1187708	0					
ANR	1187751	ExpressionStatement	tmp_block [ 1 ] ^= tmp_block [ 0 ] ^ tmp_block [ 2 ]	161:1:5141:5184	1187708	4	True				
ANR	1187752	AssignmentExpression	tmp_block [ 1 ] ^= tmp_block [ 0 ] ^ tmp_block [ 2 ]		1187708	0		^=			
ANR	1187753	ArrayIndexing	tmp_block [ 1 ]		1187708	0					
ANR	1187754	Identifier	tmp_block		1187708	0					
ANR	1187755	PrimaryExpression	1		1187708	1					
ANR	1187756	ExclusiveOrExpression	tmp_block [ 0 ] ^ tmp_block [ 2 ]		1187708	1		^			
ANR	1187757	ArrayIndexing	tmp_block [ 0 ]		1187708	0					
ANR	1187758	Identifier	tmp_block		1187708	0					
ANR	1187759	PrimaryExpression	0		1187708	1					
ANR	1187760	ArrayIndexing	tmp_block [ 2 ]		1187708	1					
ANR	1187761	Identifier	tmp_block		1187708	0					
ANR	1187762	PrimaryExpression	2		1187708	1					
ANR	1187763	ExpressionStatement	tmp_block [ 3 ] ^= tmp_block [ 2 ] ^ ( tmp_block [ 0 ] << 3 )	162:1:5187:5235	1187708	5	True				
ANR	1187764	AssignmentExpression	tmp_block [ 3 ] ^= tmp_block [ 2 ] ^ ( tmp_block [ 0 ] << 3 )		1187708	0		^=			
ANR	1187765	ArrayIndexing	tmp_block [ 3 ]		1187708	0					
ANR	1187766	Identifier	tmp_block		1187708	0					
ANR	1187767	PrimaryExpression	3		1187708	1					
ANR	1187768	ExclusiveOrExpression	tmp_block [ 2 ] ^ ( tmp_block [ 0 ] << 3 )		1187708	1		^			
ANR	1187769	ArrayIndexing	tmp_block [ 2 ]		1187708	0					
ANR	1187770	Identifier	tmp_block		1187708	0					
ANR	1187771	PrimaryExpression	2		1187708	1					
ANR	1187772	ShiftExpression	tmp_block [ 0 ] << 3		1187708	1		<<			
ANR	1187773	ArrayIndexing	tmp_block [ 0 ]		1187708	0					
ANR	1187774	Identifier	tmp_block		1187708	0					
ANR	1187775	PrimaryExpression	0		1187708	1					
ANR	1187776	PrimaryExpression	3		1187708	1					
ANR	1187777	ExpressionStatement	"rotl ( tmp_block + 1 , 1 )"	163:1:5238:5261	1187708	6	True				
ANR	1187778	CallExpression	"rotl ( tmp_block + 1 , 1 )"		1187708	0					
ANR	1187779	Callee	rotl		1187708	0					
ANR	1187780	Identifier	rotl		1187708	0					
ANR	1187781	ArgumentList	tmp_block + 1		1187708	1					
ANR	1187782	Argument	tmp_block + 1		1187708	0					
ANR	1187783	AdditiveExpression	tmp_block + 1		1187708	0		+			
ANR	1187784	Identifier	tmp_block		1187708	0					
ANR	1187785	PrimaryExpression	1		1187708	1					
ANR	1187786	Argument	1		1187708	1					
ANR	1187787	PrimaryExpression	1		1187708	0					
ANR	1187788	ExpressionStatement	"rotl ( tmp_block + 3 , 7 )"	164:1:5264:5287	1187708	7	True				
ANR	1187789	CallExpression	"rotl ( tmp_block + 3 , 7 )"		1187708	0					
ANR	1187790	Callee	rotl		1187708	0					
ANR	1187791	Identifier	rotl		1187708	0					
ANR	1187792	ArgumentList	tmp_block + 3		1187708	1					
ANR	1187793	Argument	tmp_block + 3		1187708	0					
ANR	1187794	AdditiveExpression	tmp_block + 3		1187708	0		+			
ANR	1187795	Identifier	tmp_block		1187708	0					
ANR	1187796	PrimaryExpression	3		1187708	1					
ANR	1187797	Argument	7		1187708	1					
ANR	1187798	PrimaryExpression	7		1187708	0					
ANR	1187799	ExpressionStatement	tmp_block [ 0 ] ^= tmp_block [ 1 ] ^ tmp_block [ 3 ]	165:1:5290:5333	1187708	8	True				
ANR	1187800	AssignmentExpression	tmp_block [ 0 ] ^= tmp_block [ 1 ] ^ tmp_block [ 3 ]		1187708	0		^=			
ANR	1187801	ArrayIndexing	tmp_block [ 0 ]		1187708	0					
ANR	1187802	Identifier	tmp_block		1187708	0					
ANR	1187803	PrimaryExpression	0		1187708	1					
ANR	1187804	ExclusiveOrExpression	tmp_block [ 1 ] ^ tmp_block [ 3 ]		1187708	1		^			
ANR	1187805	ArrayIndexing	tmp_block [ 1 ]		1187708	0					
ANR	1187806	Identifier	tmp_block		1187708	0					
ANR	1187807	PrimaryExpression	1		1187708	1					
ANR	1187808	ArrayIndexing	tmp_block [ 3 ]		1187708	1					
ANR	1187809	Identifier	tmp_block		1187708	0					
ANR	1187810	PrimaryExpression	3		1187708	1					
ANR	1187811	ExpressionStatement	tmp_block [ 2 ] ^= tmp_block [ 3 ] ^ ( tmp_block [ 1 ] << 7 )	166:1:5336:5384	1187708	9	True				
ANR	1187812	AssignmentExpression	tmp_block [ 2 ] ^= tmp_block [ 3 ] ^ ( tmp_block [ 1 ] << 7 )		1187708	0		^=			
ANR	1187813	ArrayIndexing	tmp_block [ 2 ]		1187708	0					
ANR	1187814	Identifier	tmp_block		1187708	0					
ANR	1187815	PrimaryExpression	2		1187708	1					
ANR	1187816	ExclusiveOrExpression	tmp_block [ 3 ] ^ ( tmp_block [ 1 ] << 7 )		1187708	1		^			
ANR	1187817	ArrayIndexing	tmp_block [ 3 ]		1187708	0					
ANR	1187818	Identifier	tmp_block		1187708	0					
ANR	1187819	PrimaryExpression	3		1187708	1					
ANR	1187820	ShiftExpression	tmp_block [ 1 ] << 7		1187708	1		<<			
ANR	1187821	ArrayIndexing	tmp_block [ 1 ]		1187708	0					
ANR	1187822	Identifier	tmp_block		1187708	0					
ANR	1187823	PrimaryExpression	1		1187708	1					
ANR	1187824	PrimaryExpression	7		1187708	1					
ANR	1187825	ExpressionStatement	"rotl ( tmp_block + 0 , 5 )"	167:1:5387:5410	1187708	10	True				
ANR	1187826	CallExpression	"rotl ( tmp_block + 0 , 5 )"		1187708	0					
ANR	1187827	Callee	rotl		1187708	0					
ANR	1187828	Identifier	rotl		1187708	0					
ANR	1187829	ArgumentList	tmp_block + 0		1187708	1					
ANR	1187830	Argument	tmp_block + 0		1187708	0					
ANR	1187831	AdditiveExpression	tmp_block + 0		1187708	0		+			
ANR	1187832	Identifier	tmp_block		1187708	0					
ANR	1187833	PrimaryExpression	0		1187708	1					
ANR	1187834	Argument	5		1187708	1					
ANR	1187835	PrimaryExpression	5		1187708	0					
ANR	1187836	ExpressionStatement	"rotl ( tmp_block + 2 , 22 )"	168:1:5413:5437	1187708	11	True				
ANR	1187837	CallExpression	"rotl ( tmp_block + 2 , 22 )"		1187708	0					
ANR	1187838	Callee	rotl		1187708	0					
ANR	1187839	Identifier	rotl		1187708	0					
ANR	1187840	ArgumentList	tmp_block + 2		1187708	1					
ANR	1187841	Argument	tmp_block + 2		1187708	0					
ANR	1187842	AdditiveExpression	tmp_block + 2		1187708	0		+			
ANR	1187843	Identifier	tmp_block		1187708	0					
ANR	1187844	PrimaryExpression	2		1187708	1					
ANR	1187845	Argument	22		1187708	1					
ANR	1187846	PrimaryExpression	22		1187708	0					
ANR	1187847	ExpressionStatement	"apply_IP ( tmp_block , block )"	169:1:5440:5467	1187708	12	True				
ANR	1187848	CallExpression	"apply_IP ( tmp_block , block )"		1187708	0					
ANR	1187849	Callee	apply_IP		1187708	0					
ANR	1187850	Identifier	apply_IP		1187708	0					
ANR	1187851	ArgumentList	tmp_block		1187708	1					
ANR	1187852	Argument	tmp_block		1187708	0					
ANR	1187853	Identifier	tmp_block		1187708	0					
ANR	1187854	Argument	block		1187708	1					
ANR	1187855	Identifier	block		1187708	0					
ANR	1187856	ReturnType	void		1187708	1					
ANR	1187857	Identifier	apply_permut		1187708	2					
ANR	1187858	ParameterList	ut32 block [ DW_BY_BLOCK ]		1187708	3					
ANR	1187859	Parameter	ut32 block [ DW_BY_BLOCK ]	156:18:4993:5015	1187708	0	True				
ANR	1187860	ParameterType	ut32 [ DW_BY_BLOCK ]		1187708	0					
ANR	1187861	Identifier	block		1187708	1					
ANR	1187862	CFGEntryNode	ENTRY		1187708		True				
ANR	1187863	CFGExitNode	EXIT		1187708		True				
ANR	1187864	Symbol	DW_BY_BLOCK		1187708						
ANR	1187865	Symbol	tmp_block		1187708						
ANR	1187866	Symbol	block		1187708						
ANR	1187867	Symbol	* tmp_block		1187708						
ANR	1187868	Function	apply_permut_inv	172:0:5472:5970							
ANR	1187869	FunctionDef	apply_permut_inv (ut32 block [ DW_BY_BLOCK ])		1187868	0					
ANR	1187870	CompoundStatement		172:47:5519:5970	1187868	0					
ANR	1187871	IdentifierDeclStatement	ut32 tmp_block [ DW_BY_BLOCK ] = { 0 } ;	173:1:5522:5555	1187868	0	True				
ANR	1187872	IdentifierDecl	tmp_block [ DW_BY_BLOCK ] = { 0 }		1187868	0					
ANR	1187873	IdentifierDeclType	ut32 [ DW_BY_BLOCK ]		1187868	0					
ANR	1187874	Identifier	tmp_block		1187868	1					
ANR	1187875	Identifier	DW_BY_BLOCK		1187868	2					
ANR	1187876	AssignmentExpression	tmp_block [ DW_BY_BLOCK ] = { 0 }		1187868	3		=			
ANR	1187877	Identifier	DW_BY_BLOCK		1187868	0					
ANR	1187878	InitializerList	0		1187868	1					
ANR	1187879	PrimaryExpression	0		1187868	0					
ANR	1187880	ExpressionStatement	"apply_FP ( block , tmp_block )"	174:1:5558:5585	1187868	1	True				
ANR	1187881	CallExpression	"apply_FP ( block , tmp_block )"		1187868	0					
ANR	1187882	Callee	apply_FP		1187868	0					
ANR	1187883	Identifier	apply_FP		1187868	0					
ANR	1187884	ArgumentList	block		1187868	1					
ANR	1187885	Argument	block		1187868	0					
ANR	1187886	Identifier	block		1187868	0					
ANR	1187887	Argument	tmp_block		1187868	1					
ANR	1187888	Identifier	tmp_block		1187868	0					
ANR	1187889	ExpressionStatement	"rotr ( tmp_block + 0 , 5 )"	175:1:5588:5611	1187868	2	True				
ANR	1187890	CallExpression	"rotr ( tmp_block + 0 , 5 )"		1187868	0					
ANR	1187891	Callee	rotr		1187868	0					
ANR	1187892	Identifier	rotr		1187868	0					
ANR	1187893	ArgumentList	tmp_block + 0		1187868	1					
ANR	1187894	Argument	tmp_block + 0		1187868	0					
ANR	1187895	AdditiveExpression	tmp_block + 0		1187868	0		+			
ANR	1187896	Identifier	tmp_block		1187868	0					
ANR	1187897	PrimaryExpression	0		1187868	1					
ANR	1187898	Argument	5		1187868	1					
ANR	1187899	PrimaryExpression	5		1187868	0					
ANR	1187900	ExpressionStatement	"rotr ( tmp_block + 2 , 22 )"	176:1:5614:5638	1187868	3	True				
ANR	1187901	CallExpression	"rotr ( tmp_block + 2 , 22 )"		1187868	0					
ANR	1187902	Callee	rotr		1187868	0					
ANR	1187903	Identifier	rotr		1187868	0					
ANR	1187904	ArgumentList	tmp_block + 2		1187868	1					
ANR	1187905	Argument	tmp_block + 2		1187868	0					
ANR	1187906	AdditiveExpression	tmp_block + 2		1187868	0		+			
ANR	1187907	Identifier	tmp_block		1187868	0					
ANR	1187908	PrimaryExpression	2		1187868	1					
ANR	1187909	Argument	22		1187868	1					
ANR	1187910	PrimaryExpression	22		1187868	0					
ANR	1187911	ExpressionStatement	tmp_block [ 2 ] ^= tmp_block [ 3 ] ^ ( tmp_block [ 1 ] << 7 )	177:1:5641:5689	1187868	4	True				
ANR	1187912	AssignmentExpression	tmp_block [ 2 ] ^= tmp_block [ 3 ] ^ ( tmp_block [ 1 ] << 7 )		1187868	0		^=			
ANR	1187913	ArrayIndexing	tmp_block [ 2 ]		1187868	0					
ANR	1187914	Identifier	tmp_block		1187868	0					
ANR	1187915	PrimaryExpression	2		1187868	1					
ANR	1187916	ExclusiveOrExpression	tmp_block [ 3 ] ^ ( tmp_block [ 1 ] << 7 )		1187868	1		^			
ANR	1187917	ArrayIndexing	tmp_block [ 3 ]		1187868	0					
ANR	1187918	Identifier	tmp_block		1187868	0					
ANR	1187919	PrimaryExpression	3		1187868	1					
ANR	1187920	ShiftExpression	tmp_block [ 1 ] << 7		1187868	1		<<			
ANR	1187921	ArrayIndexing	tmp_block [ 1 ]		1187868	0					
ANR	1187922	Identifier	tmp_block		1187868	0					
ANR	1187923	PrimaryExpression	1		1187868	1					
ANR	1187924	PrimaryExpression	7		1187868	1					
ANR	1187925	ExpressionStatement	tmp_block [ 0 ] ^= tmp_block [ 1 ] ^ tmp_block [ 3 ]	178:1:5692:5735	1187868	5	True				
ANR	1187926	AssignmentExpression	tmp_block [ 0 ] ^= tmp_block [ 1 ] ^ tmp_block [ 3 ]		1187868	0		^=			
ANR	1187927	ArrayIndexing	tmp_block [ 0 ]		1187868	0					
ANR	1187928	Identifier	tmp_block		1187868	0					
ANR	1187929	PrimaryExpression	0		1187868	1					
ANR	1187930	ExclusiveOrExpression	tmp_block [ 1 ] ^ tmp_block [ 3 ]		1187868	1		^			
ANR	1187931	ArrayIndexing	tmp_block [ 1 ]		1187868	0					
ANR	1187932	Identifier	tmp_block		1187868	0					
ANR	1187933	PrimaryExpression	1		1187868	1					
ANR	1187934	ArrayIndexing	tmp_block [ 3 ]		1187868	1					
ANR	1187935	Identifier	tmp_block		1187868	0					
ANR	1187936	PrimaryExpression	3		1187868	1					
ANR	1187937	ExpressionStatement	"rotr ( tmp_block + 3 , 7 )"	179:1:5738:5761	1187868	6	True				
ANR	1187938	CallExpression	"rotr ( tmp_block + 3 , 7 )"		1187868	0					
ANR	1187939	Callee	rotr		1187868	0					
ANR	1187940	Identifier	rotr		1187868	0					
ANR	1187941	ArgumentList	tmp_block + 3		1187868	1					
ANR	1187942	Argument	tmp_block + 3		1187868	0					
ANR	1187943	AdditiveExpression	tmp_block + 3		1187868	0		+			
ANR	1187944	Identifier	tmp_block		1187868	0					
ANR	1187945	PrimaryExpression	3		1187868	1					
ANR	1187946	Argument	7		1187868	1					
ANR	1187947	PrimaryExpression	7		1187868	0					
ANR	1187948	ExpressionStatement	"rotr ( tmp_block + 1 , 1 )"	180:1:5764:5787	1187868	7	True				
ANR	1187949	CallExpression	"rotr ( tmp_block + 1 , 1 )"		1187868	0					
ANR	1187950	Callee	rotr		1187868	0					
ANR	1187951	Identifier	rotr		1187868	0					
ANR	1187952	ArgumentList	tmp_block + 1		1187868	1					
ANR	1187953	Argument	tmp_block + 1		1187868	0					
ANR	1187954	AdditiveExpression	tmp_block + 1		1187868	0		+			
ANR	1187955	Identifier	tmp_block		1187868	0					
ANR	1187956	PrimaryExpression	1		1187868	1					
ANR	1187957	Argument	1		1187868	1					
ANR	1187958	PrimaryExpression	1		1187868	0					
ANR	1187959	ExpressionStatement	tmp_block [ 3 ] ^= tmp_block [ 2 ] ^ ( tmp_block [ 0 ] << 3 )	181:1:5790:5838	1187868	8	True				
ANR	1187960	AssignmentExpression	tmp_block [ 3 ] ^= tmp_block [ 2 ] ^ ( tmp_block [ 0 ] << 3 )		1187868	0		^=			
ANR	1187961	ArrayIndexing	tmp_block [ 3 ]		1187868	0					
ANR	1187962	Identifier	tmp_block		1187868	0					
ANR	1187963	PrimaryExpression	3		1187868	1					
ANR	1187964	ExclusiveOrExpression	tmp_block [ 2 ] ^ ( tmp_block [ 0 ] << 3 )		1187868	1		^			
ANR	1187965	ArrayIndexing	tmp_block [ 2 ]		1187868	0					
ANR	1187966	Identifier	tmp_block		1187868	0					
ANR	1187967	PrimaryExpression	2		1187868	1					
ANR	1187968	ShiftExpression	tmp_block [ 0 ] << 3		1187868	1		<<			
ANR	1187969	ArrayIndexing	tmp_block [ 0 ]		1187868	0					
ANR	1187970	Identifier	tmp_block		1187868	0					
ANR	1187971	PrimaryExpression	0		1187868	1					
ANR	1187972	PrimaryExpression	3		1187868	1					
ANR	1187973	ExpressionStatement	tmp_block [ 1 ] ^= tmp_block [ 0 ] ^ tmp_block [ 2 ]	182:1:5841:5884	1187868	9	True				
ANR	1187974	AssignmentExpression	tmp_block [ 1 ] ^= tmp_block [ 0 ] ^ tmp_block [ 2 ]		1187868	0		^=			
ANR	1187975	ArrayIndexing	tmp_block [ 1 ]		1187868	0					
ANR	1187976	Identifier	tmp_block		1187868	0					
ANR	1187977	PrimaryExpression	1		1187868	1					
ANR	1187978	ExclusiveOrExpression	tmp_block [ 0 ] ^ tmp_block [ 2 ]		1187868	1		^			
ANR	1187979	ArrayIndexing	tmp_block [ 0 ]		1187868	0					
ANR	1187980	Identifier	tmp_block		1187868	0					
ANR	1187981	PrimaryExpression	0		1187868	1					
ANR	1187982	ArrayIndexing	tmp_block [ 2 ]		1187868	1					
ANR	1187983	Identifier	tmp_block		1187868	0					
ANR	1187984	PrimaryExpression	2		1187868	1					
ANR	1187985	ExpressionStatement	"rotr ( tmp_block + 2 , 3 )"	183:1:5887:5910	1187868	10	True				
ANR	1187986	CallExpression	"rotr ( tmp_block + 2 , 3 )"		1187868	0					
ANR	1187987	Callee	rotr		1187868	0					
ANR	1187988	Identifier	rotr		1187868	0					
ANR	1187989	ArgumentList	tmp_block + 2		1187868	1					
ANR	1187990	Argument	tmp_block + 2		1187868	0					
ANR	1187991	AdditiveExpression	tmp_block + 2		1187868	0		+			
ANR	1187992	Identifier	tmp_block		1187868	0					
ANR	1187993	PrimaryExpression	2		1187868	1					
ANR	1187994	Argument	3		1187868	1					
ANR	1187995	PrimaryExpression	3		1187868	0					
ANR	1187996	ExpressionStatement	"rotr ( tmp_block + 0 , 13 )"	184:1:5914:5938	1187868	11	True				
ANR	1187997	CallExpression	"rotr ( tmp_block + 0 , 13 )"		1187868	0					
ANR	1187998	Callee	rotr		1187868	0					
ANR	1187999	Identifier	rotr		1187868	0					
ANR	1188000	ArgumentList	tmp_block + 0		1187868	1					
ANR	1188001	Argument	tmp_block + 0		1187868	0					
ANR	1188002	AdditiveExpression	tmp_block + 0		1187868	0		+			
ANR	1188003	Identifier	tmp_block		1187868	0					
ANR	1188004	PrimaryExpression	0		1187868	1					
ANR	1188005	Argument	13		1187868	1					
ANR	1188006	PrimaryExpression	13		1187868	0					
ANR	1188007	ExpressionStatement	"apply_IP ( tmp_block , block )"	185:1:5941:5968	1187868	12	True				
ANR	1188008	CallExpression	"apply_IP ( tmp_block , block )"		1187868	0					
ANR	1188009	Callee	apply_IP		1187868	0					
ANR	1188010	Identifier	apply_IP		1187868	0					
ANR	1188011	ArgumentList	tmp_block		1187868	1					
ANR	1188012	Argument	tmp_block		1187868	0					
ANR	1188013	Identifier	tmp_block		1187868	0					
ANR	1188014	Argument	block		1187868	1					
ANR	1188015	Identifier	block		1187868	0					
ANR	1188016	ReturnType	void		1187868	1					
ANR	1188017	Identifier	apply_permut_inv		1187868	2					
ANR	1188018	ParameterList	ut32 block [ DW_BY_BLOCK ]		1187868	3					
ANR	1188019	Parameter	ut32 block [ DW_BY_BLOCK ]	172:22:5494:5516	1187868	0	True				
ANR	1188020	ParameterType	ut32 [ DW_BY_BLOCK ]		1187868	0					
ANR	1188021	Identifier	block		1187868	1					
ANR	1188022	CFGEntryNode	ENTRY		1187868		True				
ANR	1188023	CFGExitNode	EXIT		1187868		True				
ANR	1188024	Symbol	DW_BY_BLOCK		1187868						
ANR	1188025	Symbol	tmp_block		1187868						
ANR	1188026	Symbol	block		1187868						
ANR	1188027	Symbol	* tmp_block		1187868						
ANR	1188028	Function	apply_round	188:0:5973:6405							
ANR	1188029	FunctionDef	"apply_round (int round , ut32 block [ DW_BY_BLOCK ] , ut32 subkeys [ DW_BY_BLOCK * NB_SUBKEYS ])"		1188028	0					
ANR	1188030	CompoundStatement		189:40:6067:6405	1188028	0					
ANR	1188031	IdentifierDeclStatement	"int i , j ;"	190:1:6070:6078	1188028	0	True				
ANR	1188032	IdentifierDecl	i		1188028	0					
ANR	1188033	IdentifierDeclType	int		1188028	0					
ANR	1188034	Identifier	i		1188028	1					
ANR	1188035	IdentifierDecl	j		1188028	1					
ANR	1188036	IdentifierDeclType	int		1188028	0					
ANR	1188037	Identifier	j		1188028	1					
ANR	1188038	ExpressionStatement	"apply_xor ( block , subkeys + 4 * round )"	192:1:6082:6118	1188028	1	True				
ANR	1188039	CallExpression	"apply_xor ( block , subkeys + 4 * round )"		1188028	0					
ANR	1188040	Callee	apply_xor		1188028	0					
ANR	1188041	Identifier	apply_xor		1188028	0					
ANR	1188042	ArgumentList	block		1188028	1					
ANR	1188043	Argument	block		1188028	0					
ANR	1188044	Identifier	block		1188028	0					
ANR	1188045	Argument	subkeys + 4 * round		1188028	1					
ANR	1188046	AdditiveExpression	subkeys + 4 * round		1188028	0		+			
ANR	1188047	Identifier	subkeys		1188028	0					
ANR	1188048	MultiplicativeExpression	4 * round		1188028	1		*			
ANR	1188049	PrimaryExpression	4		1188028	0					
ANR	1188050	Identifier	round		1188028	1					
ANR	1188051	ForStatement	for ( i = 0 ; i < DW_BY_BLOCK ; i ++ )		1188028	2					
ANR	1188052	ForInit	i = 0 ;	194:6:6127:6132	1188028	0	True				
ANR	1188053	AssignmentExpression	i = 0		1188028	0		=			
ANR	1188054	Identifier	i		1188028	0					
ANR	1188055	PrimaryExpression	0		1188028	1					
ANR	1188056	Condition	i < DW_BY_BLOCK	194:13:6134:6148	1188028	1	True				
ANR	1188057	RelationalExpression	i < DW_BY_BLOCK		1188028	0		<			
ANR	1188058	Identifier	i		1188028	0					
ANR	1188059	Identifier	DW_BY_BLOCK		1188028	1					
ANR	1188060	PostIncDecOperationExpression	i ++	194:30:6151:6153	1188028	2	True				
ANR	1188061	Identifier	i		1188028	0					
ANR	1188062	IncDec	++		1188028	1					
ANR	1188063	CompoundStatement		7:2:92:104	1188028	3					
ANR	1188064	IdentifierDeclStatement	ut32 res = 0 ;	195:2:6160:6172	1188028	0	True				
ANR	1188065	IdentifierDecl	res = 0		1188028	0					
ANR	1188066	IdentifierDeclType	ut32		1188028	0					
ANR	1188067	Identifier	res		1188028	1					
ANR	1188068	AssignmentExpression	res = 0		1188028	2		=			
ANR	1188069	Identifier	res		1188028	0					
ANR	1188070	PrimaryExpression	0		1188028	1					
ANR	1188071	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		1188028	1					
ANR	1188072	ForInit	j = 0 ;	196:7:6182:6187	1188028	0	True				
ANR	1188073	AssignmentExpression	j = 0		1188028	0		=			
ANR	1188074	Identifier	j		1188028	0					
ANR	1188075	PrimaryExpression	0		1188028	1					
ANR	1188076	Condition	j < 8	196:14:6189:6193	1188028	1	True				
ANR	1188077	RelationalExpression	j < 8		1188028	0		<			
ANR	1188078	Identifier	j		1188028	0					
ANR	1188079	PrimaryExpression	8		1188028	1					
ANR	1188080	PostIncDecOperationExpression	j ++	196:21:6196:6198	1188028	2	True				
ANR	1188081	Identifier	j		1188028	0					
ANR	1188082	IncDec	++		1188028	1					
ANR	1188083	CompoundStatement		8:26:133:133	1188028	3					
ANR	1188084	ExpressionStatement	"res |= apply_sbox ( round % 8 , ( block [ i ] >> 4 * j ) & 0xf ) << 4 * j"	197:3:6206:6265	1188028	0	True				
ANR	1188085	AssignmentExpression	"res |= apply_sbox ( round % 8 , ( block [ i ] >> 4 * j ) & 0xf ) << 4 * j"		1188028	0		|=			
ANR	1188086	Identifier	res		1188028	0					
ANR	1188087	ShiftExpression	"apply_sbox ( round % 8 , ( block [ i ] >> 4 * j ) & 0xf ) << 4 * j"		1188028	1		<<			
ANR	1188088	CallExpression	"apply_sbox ( round % 8 , ( block [ i ] >> 4 * j ) & 0xf )"		1188028	0					
ANR	1188089	Callee	apply_sbox		1188028	0					
ANR	1188090	Identifier	apply_sbox		1188028	0					
ANR	1188091	ArgumentList	round % 8		1188028	1					
ANR	1188092	Argument	round % 8		1188028	0					
ANR	1188093	MultiplicativeExpression	round % 8		1188028	0		%			
ANR	1188094	Identifier	round		1188028	0					
ANR	1188095	PrimaryExpression	8		1188028	1					
ANR	1188096	Argument	( block [ i ] >> 4 * j ) & 0xf		1188028	1					
ANR	1188097	BitAndExpression	( block [ i ] >> 4 * j ) & 0xf		1188028	0		&			
ANR	1188098	ShiftExpression	block [ i ] >> 4 * j		1188028	0		>>			
ANR	1188099	ArrayIndexing	block [ i ]		1188028	0					
ANR	1188100	Identifier	block		1188028	0					
ANR	1188101	Identifier	i		1188028	1					
ANR	1188102	MultiplicativeExpression	4 * j		1188028	1		*			
ANR	1188103	PrimaryExpression	4		1188028	0					
ANR	1188104	Identifier	j		1188028	1					
ANR	1188105	PrimaryExpression	0xf		1188028	1					
ANR	1188106	MultiplicativeExpression	4 * j		1188028	1		*			
ANR	1188107	PrimaryExpression	4		1188028	0					
ANR	1188108	Identifier	j		1188028	1					
ANR	1188109	ExpressionStatement	block [ i ] = res	199:2:6273:6287	1188028	2	True				
ANR	1188110	AssignmentExpression	block [ i ] = res		1188028	0		=			
ANR	1188111	ArrayIndexing	block [ i ]		1188028	0					
ANR	1188112	Identifier	block		1188028	0					
ANR	1188113	Identifier	i		1188028	1					
ANR	1188114	Identifier	res		1188028	1					
ANR	1188115	IfStatement	if ( round == NB_ROUNDS - 1 )		1188028	3					
ANR	1188116	Condition	round == NB_ROUNDS - 1	202:5:6298:6319	1188028	0	True				
ANR	1188117	EqualityExpression	round == NB_ROUNDS - 1		1188028	0		==			
ANR	1188118	Identifier	round		1188028	0					
ANR	1188119	AdditiveExpression	NB_ROUNDS - 1		1188028	1		-			
ANR	1188120	Identifier	NB_ROUNDS		1188028	0					
ANR	1188121	PrimaryExpression	1		1188028	1					
ANR	1188122	CompoundStatement		14:29:254:254	1188028	1					
ANR	1188123	ExpressionStatement	"apply_xor ( block , subkeys + 4 * ( round + 1 ) )"	203:2:6326:6366	1188028	0	True				
ANR	1188124	CallExpression	"apply_xor ( block , subkeys + 4 * ( round + 1 ) )"		1188028	0					
ANR	1188125	Callee	apply_xor		1188028	0					
ANR	1188126	Identifier	apply_xor		1188028	0					
ANR	1188127	ArgumentList	block		1188028	1					
ANR	1188128	Argument	block		1188028	0					
ANR	1188129	Identifier	block		1188028	0					
ANR	1188130	Argument	subkeys + 4 * ( round + 1 )		1188028	1					
ANR	1188131	AdditiveExpression	subkeys + 4 * ( round + 1 )		1188028	0		+			
ANR	1188132	Identifier	subkeys		1188028	0					
ANR	1188133	MultiplicativeExpression	4 * ( round + 1 )		1188028	1		*			
ANR	1188134	PrimaryExpression	4		1188028	0					
ANR	1188135	AdditiveExpression	round + 1		1188028	1		+			
ANR	1188136	Identifier	round		1188028	0					
ANR	1188137	PrimaryExpression	1		1188028	1					
ANR	1188138	ElseStatement	else		1188028	0					
ANR	1188139	CompoundStatement		16:8:308:308	1188028	0					
ANR	1188140	ExpressionStatement	apply_permut ( block )	205:2:6380:6400	1188028	0	True				
ANR	1188141	CallExpression	apply_permut ( block )		1188028	0					
ANR	1188142	Callee	apply_permut		1188028	0					
ANR	1188143	Identifier	apply_permut		1188028	0					
ANR	1188144	ArgumentList	block		1188028	1					
ANR	1188145	Argument	block		1188028	0					
ANR	1188146	Identifier	block		1188028	0					
ANR	1188147	ReturnType	void		1188028	1					
ANR	1188148	Identifier	apply_round		1188028	2					
ANR	1188149	ParameterList	"int round , ut32 block [ DW_BY_BLOCK ] , ut32 subkeys [ DW_BY_BLOCK * NB_SUBKEYS ]"		1188028	3					
ANR	1188150	Parameter	int round	188:17:5990:5998	1188028	0	True				
ANR	1188151	ParameterType	int		1188028	0					
ANR	1188152	Identifier	round		1188028	1					
ANR	1188153	Parameter	ut32 block [ DW_BY_BLOCK ]	188:28:6001:6023	1188028	1	True				
ANR	1188154	ParameterType	ut32 [ DW_BY_BLOCK ]		1188028	0					
ANR	1188155	Identifier	block		1188028	1					
ANR	1188156	Parameter	ut32 subkeys [ DW_BY_BLOCK * NB_SUBKEYS ]	189:2:6029:6064	1188028	2	True				
ANR	1188157	ParameterType	ut32 [ DW_BY_BLOCK * NB_SUBKEYS ]		1188028	0					
ANR	1188158	Identifier	subkeys		1188028	1					
ANR	1188159	CFGEntryNode	ENTRY		1188028		True				
ANR	1188160	CFGExitNode	EXIT		1188028		True				
ANR	1188161	Symbol	res		1188028						
ANR	1188162	Symbol	* i		1188028						
ANR	1188163	Symbol	round		1188028						
ANR	1188164	Symbol	DW_BY_BLOCK		1188028						
ANR	1188165	Symbol	NB_ROUNDS		1188028						
ANR	1188166	Symbol	i		1188028						
ANR	1188167	Symbol	block		1188028						
ANR	1188168	Symbol	j		1188028						
ANR	1188169	Symbol	apply_sbox		1188028						
ANR	1188170	Symbol	subkeys		1188028						
ANR	1188171	Symbol	* block		1188028						
ANR	1188172	Function	apply_round_inv	209:0:6408:6858							
ANR	1188173	FunctionDef	"apply_round_inv (int round , ut32 block [ DW_BY_BLOCK ] , ut32 subkeys [ DW_BY_BLOCK * NB_SUBKEYS ])"		1188172	0					
ANR	1188174	CompoundStatement		210:40:6506:6858	1188172	0					
ANR	1188175	IfStatement	if ( round == NB_ROUNDS - 1 )		1188172	0					
ANR	1188176	Condition	round == NB_ROUNDS - 1	211:5:6513:6534	1188172	0	True				
ANR	1188177	EqualityExpression	round == NB_ROUNDS - 1		1188172	0		==			
ANR	1188178	Identifier	round		1188172	0					
ANR	1188179	AdditiveExpression	NB_ROUNDS - 1		1188172	1		-			
ANR	1188180	Identifier	NB_ROUNDS		1188172	0					
ANR	1188181	PrimaryExpression	1		1188172	1					
ANR	1188182	CompoundStatement		2:29:30:30	1188172	1					
ANR	1188183	ExpressionStatement	"apply_xor ( block , subkeys + 4 * ( round + 1 ) )"	212:2:6541:6581	1188172	0	True				
ANR	1188184	CallExpression	"apply_xor ( block , subkeys + 4 * ( round + 1 ) )"		1188172	0					
ANR	1188185	Callee	apply_xor		1188172	0					
ANR	1188186	Identifier	apply_xor		1188172	0					
ANR	1188187	ArgumentList	block		1188172	1					
ANR	1188188	Argument	block		1188172	0					
ANR	1188189	Identifier	block		1188172	0					
ANR	1188190	Argument	subkeys + 4 * ( round + 1 )		1188172	1					
ANR	1188191	AdditiveExpression	subkeys + 4 * ( round + 1 )		1188172	0		+			
ANR	1188192	Identifier	subkeys		1188172	0					
ANR	1188193	MultiplicativeExpression	4 * ( round + 1 )		1188172	1		*			
ANR	1188194	PrimaryExpression	4		1188172	0					
ANR	1188195	AdditiveExpression	round + 1		1188172	1		+			
ANR	1188196	Identifier	round		1188172	0					
ANR	1188197	PrimaryExpression	1		1188172	1					
ANR	1188198	ElseStatement	else		1188172	0					
ANR	1188199	CompoundStatement		4:8:84:84	1188172	0					
ANR	1188200	ExpressionStatement	apply_permut_inv ( block )	214:2:6595:6619	1188172	0	True				
ANR	1188201	CallExpression	apply_permut_inv ( block )		1188172	0					
ANR	1188202	Callee	apply_permut_inv		1188172	0					
ANR	1188203	Identifier	apply_permut_inv		1188172	0					
ANR	1188204	ArgumentList	block		1188172	1					
ANR	1188205	Argument	block		1188172	0					
ANR	1188206	Identifier	block		1188172	0					
ANR	1188207	IdentifierDeclStatement	"int i , j ;"	217:1:6626:6634	1188172	1	True				
ANR	1188208	IdentifierDecl	i		1188172	0					
ANR	1188209	IdentifierDeclType	int		1188172	0					
ANR	1188210	Identifier	i		1188172	1					
ANR	1188211	IdentifierDecl	j		1188172	1					
ANR	1188212	IdentifierDeclType	int		1188172	0					
ANR	1188213	Identifier	j		1188172	1					
ANR	1188214	IdentifierDeclStatement	ut32 res ;	218:1:6637:6645	1188172	2	True				
ANR	1188215	IdentifierDecl	res		1188172	0					
ANR	1188216	IdentifierDeclType	ut32		1188172	0					
ANR	1188217	Identifier	res		1188172	1					
ANR	1188218	ForStatement	for ( i = 0 ; i < DW_BY_BLOCK ; i ++ )		1188172	3					
ANR	1188219	ForInit	i = 0 ;	220:6:6654:6659	1188172	0	True				
ANR	1188220	AssignmentExpression	i = 0		1188172	0		=			
ANR	1188221	Identifier	i		1188172	0					
ANR	1188222	PrimaryExpression	0		1188172	1					
ANR	1188223	Condition	i < DW_BY_BLOCK	220:13:6661:6675	1188172	1	True				
ANR	1188224	RelationalExpression	i < DW_BY_BLOCK		1188172	0		<			
ANR	1188225	Identifier	i		1188172	0					
ANR	1188226	Identifier	DW_BY_BLOCK		1188172	1					
ANR	1188227	PostIncDecOperationExpression	i ++	220:30:6678:6680	1188172	2	True				
ANR	1188228	Identifier	i		1188172	0					
ANR	1188229	IncDec	++		1188172	1					
ANR	1188230	CompoundStatement		11:35:176:176	1188172	3					
ANR	1188231	ExpressionStatement	res = 0	221:2:6687:6694	1188172	0	True				
ANR	1188232	AssignmentExpression	res = 0		1188172	0		=			
ANR	1188233	Identifier	res		1188172	0					
ANR	1188234	PrimaryExpression	0		1188172	1					
ANR	1188235	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		1188172	1					
ANR	1188236	ForInit	j = 0 ;	222:7:6704:6709	1188172	0	True				
ANR	1188237	AssignmentExpression	j = 0		1188172	0		=			
ANR	1188238	Identifier	j		1188172	0					
ANR	1188239	PrimaryExpression	0		1188172	1					
ANR	1188240	Condition	j < 8	222:14:6711:6715	1188172	1	True				
ANR	1188241	RelationalExpression	j < 8		1188172	0		<			
ANR	1188242	Identifier	j		1188172	0					
ANR	1188243	PrimaryExpression	8		1188172	1					
ANR	1188244	PostIncDecOperationExpression	j ++	222:21:6718:6720	1188172	2	True				
ANR	1188245	Identifier	j		1188172	0					
ANR	1188246	IncDec	++		1188172	1					
ANR	1188247	CompoundStatement		13:26:216:216	1188172	3					
ANR	1188248	ExpressionStatement	"res |= apply_sbox_inv ( round % 8 , ( block [ i ] >> 4 * j ) & 0xf ) << 4 * j"	223:3:6728:6791	1188172	0	True				
ANR	1188249	AssignmentExpression	"res |= apply_sbox_inv ( round % 8 , ( block [ i ] >> 4 * j ) & 0xf ) << 4 * j"		1188172	0		|=			
ANR	1188250	Identifier	res		1188172	0					
ANR	1188251	ShiftExpression	"apply_sbox_inv ( round % 8 , ( block [ i ] >> 4 * j ) & 0xf ) << 4 * j"		1188172	1		<<			
ANR	1188252	CallExpression	"apply_sbox_inv ( round % 8 , ( block [ i ] >> 4 * j ) & 0xf )"		1188172	0					
ANR	1188253	Callee	apply_sbox_inv		1188172	0					
ANR	1188254	Identifier	apply_sbox_inv		1188172	0					
ANR	1188255	ArgumentList	round % 8		1188172	1					
ANR	1188256	Argument	round % 8		1188172	0					
ANR	1188257	MultiplicativeExpression	round % 8		1188172	0		%			
ANR	1188258	Identifier	round		1188172	0					
ANR	1188259	PrimaryExpression	8		1188172	1					
ANR	1188260	Argument	( block [ i ] >> 4 * j ) & 0xf		1188172	1					
ANR	1188261	BitAndExpression	( block [ i ] >> 4 * j ) & 0xf		1188172	0		&			
ANR	1188262	ShiftExpression	block [ i ] >> 4 * j		1188172	0		>>			
ANR	1188263	ArrayIndexing	block [ i ]		1188172	0					
ANR	1188264	Identifier	block		1188172	0					
ANR	1188265	Identifier	i		1188172	1					
ANR	1188266	MultiplicativeExpression	4 * j		1188172	1		*			
ANR	1188267	PrimaryExpression	4		1188172	0					
ANR	1188268	Identifier	j		1188172	1					
ANR	1188269	PrimaryExpression	0xf		1188172	1					
ANR	1188270	MultiplicativeExpression	4 * j		1188172	1		*			
ANR	1188271	PrimaryExpression	4		1188172	0					
ANR	1188272	Identifier	j		1188172	1					
ANR	1188273	ExpressionStatement	block [ i ] = res	225:2:6799:6813	1188172	2	True				
ANR	1188274	AssignmentExpression	block [ i ] = res		1188172	0		=			
ANR	1188275	ArrayIndexing	block [ i ]		1188172	0					
ANR	1188276	Identifier	block		1188172	0					
ANR	1188277	Identifier	i		1188172	1					
ANR	1188278	Identifier	res		1188172	1					
ANR	1188279	ExpressionStatement	"apply_xor ( block , subkeys + 4 * round )"	228:1:6820:6856	1188172	4	True				
ANR	1188280	CallExpression	"apply_xor ( block , subkeys + 4 * round )"		1188172	0					
ANR	1188281	Callee	apply_xor		1188172	0					
ANR	1188282	Identifier	apply_xor		1188172	0					
ANR	1188283	ArgumentList	block		1188172	1					
ANR	1188284	Argument	block		1188172	0					
ANR	1188285	Identifier	block		1188172	0					
ANR	1188286	Argument	subkeys + 4 * round		1188172	1					
ANR	1188287	AdditiveExpression	subkeys + 4 * round		1188172	0		+			
ANR	1188288	Identifier	subkeys		1188172	0					
ANR	1188289	MultiplicativeExpression	4 * round		1188172	1		*			
ANR	1188290	PrimaryExpression	4		1188172	0					
ANR	1188291	Identifier	round		1188172	1					
ANR	1188292	ReturnType	void		1188172	1					
ANR	1188293	Identifier	apply_round_inv		1188172	2					
ANR	1188294	ParameterList	"int round , ut32 block [ DW_BY_BLOCK ] , ut32 subkeys [ DW_BY_BLOCK * NB_SUBKEYS ]"		1188172	3					
ANR	1188295	Parameter	int round	209:21:6429:6437	1188172	0	True				
ANR	1188296	ParameterType	int		1188172	0					
ANR	1188297	Identifier	round		1188172	1					
ANR	1188298	Parameter	ut32 block [ DW_BY_BLOCK ]	209:32:6440:6462	1188172	1	True				
ANR	1188299	ParameterType	ut32 [ DW_BY_BLOCK ]		1188172	0					
ANR	1188300	Identifier	block		1188172	1					
ANR	1188301	Parameter	ut32 subkeys [ DW_BY_BLOCK * NB_SUBKEYS ]	210:2:6468:6503	1188172	2	True				
ANR	1188302	ParameterType	ut32 [ DW_BY_BLOCK * NB_SUBKEYS ]		1188172	0					
ANR	1188303	Identifier	subkeys		1188172	1					
ANR	1188304	CFGEntryNode	ENTRY		1188172		True				
ANR	1188305	CFGExitNode	EXIT		1188172		True				
ANR	1188306	Symbol	res		1188172						
ANR	1188307	Symbol	* i		1188172						
ANR	1188308	Symbol	round		1188172						
ANR	1188309	Symbol	NB_ROUNDS		1188172						
ANR	1188310	Symbol	DW_BY_BLOCK		1188172						
ANR	1188311	Symbol	i		1188172						
ANR	1188312	Symbol	block		1188172						
ANR	1188313	Symbol	j		1188172						
ANR	1188314	Symbol	apply_sbox_inv		1188172						
ANR	1188315	Symbol	subkeys		1188172						
ANR	1188316	Symbol	* block		1188172						
ANR	1188317	Function	serpent_encrypt	231:0:6861:7217							
ANR	1188318	FunctionDef	"serpent_encrypt (struct serpent_state * st , ut32 in [ DW_BY_BLOCK ] , ut32 out [ DW_BY_BLOCK ])"		1188317	0					
ANR	1188319	CompoundStatement		232:25:6956:7217	1188317	0					
ANR	1188320	IdentifierDeclStatement	int i ;	233:1:6959:6964	1188317	0	True				
ANR	1188321	IdentifierDecl	i		1188317	0					
ANR	1188322	IdentifierDeclType	int		1188317	0					
ANR	1188323	Identifier	i		1188317	1					
ANR	1188324	IdentifierDeclStatement	ut32 subkeys [ DW_BY_BLOCK * NB_SUBKEYS ] = { 0 } ;	234:1:6967:7009	1188317	1	True				
ANR	1188325	IdentifierDecl	subkeys [ DW_BY_BLOCK * NB_SUBKEYS ] = { 0 }		1188317	0					
ANR	1188326	IdentifierDeclType	ut32 [ DW_BY_BLOCK * NB_SUBKEYS ]		1188317	0					
ANR	1188327	Identifier	subkeys		1188317	1					
ANR	1188328	MultiplicativeExpression	DW_BY_BLOCK * NB_SUBKEYS		1188317	2		*			
ANR	1188329	Identifier	DW_BY_BLOCK		1188317	0					
ANR	1188330	Identifier	NB_SUBKEYS		1188317	1					
ANR	1188331	AssignmentExpression	subkeys [ DW_BY_BLOCK * NB_SUBKEYS ] = { 0 }		1188317	3		=			
ANR	1188332	Identifier	subkeys		1188317	0					
ANR	1188333	InitializerList	0		1188317	1					
ANR	1188334	PrimaryExpression	0		1188317	0					
ANR	1188335	IdentifierDeclStatement	ut32 tmp_block [ DW_BY_BLOCK ] = { 0 } ;	235:1:7012:7045	1188317	2	True				
ANR	1188336	IdentifierDecl	tmp_block [ DW_BY_BLOCK ] = { 0 }		1188317	0					
ANR	1188337	IdentifierDeclType	ut32 [ DW_BY_BLOCK ]		1188317	0					
ANR	1188338	Identifier	tmp_block		1188317	1					
ANR	1188339	Identifier	DW_BY_BLOCK		1188317	2					
ANR	1188340	AssignmentExpression	tmp_block [ DW_BY_BLOCK ] = { 0 }		1188317	3		=			
ANR	1188341	Identifier	DW_BY_BLOCK		1188317	0					
ANR	1188342	InitializerList	0		1188317	1					
ANR	1188343	PrimaryExpression	0		1188317	0					
ANR	1188344	ExpressionStatement	"serpent_keyschedule ( * st , subkeys )"	237:1:7049:7083	1188317	3	True				
ANR	1188345	CallExpression	"serpent_keyschedule ( * st , subkeys )"		1188317	0					
ANR	1188346	Callee	serpent_keyschedule		1188317	0					
ANR	1188347	Identifier	serpent_keyschedule		1188317	0					
ANR	1188348	ArgumentList	* st		1188317	1					
ANR	1188349	Argument	* st		1188317	0					
ANR	1188350	UnaryOperationExpression	* st		1188317	0					
ANR	1188351	UnaryOperator	*		1188317	0					
ANR	1188352	Identifier	st		1188317	1					
ANR	1188353	Argument	subkeys		1188317	1					
ANR	1188354	Identifier	subkeys		1188317	0					
ANR	1188355	ExpressionStatement	"apply_IP ( in , tmp_block )"	239:1:7087:7111	1188317	4	True				
ANR	1188356	CallExpression	"apply_IP ( in , tmp_block )"		1188317	0					
ANR	1188357	Callee	apply_IP		1188317	0					
ANR	1188358	Identifier	apply_IP		1188317	0					
ANR	1188359	ArgumentList	in		1188317	1					
ANR	1188360	Argument	in		1188317	0					
ANR	1188361	Identifier	in		1188317	0					
ANR	1188362	Argument	tmp_block		1188317	1					
ANR	1188363	Identifier	tmp_block		1188317	0					
ANR	1188364	ForStatement	for ( i = 0 ; i < NB_ROUNDS ; i ++ )		1188317	5					
ANR	1188365	ForInit	i = 0 ;	240:6:7119:7124	1188317	0	True				
ANR	1188366	AssignmentExpression	i = 0		1188317	0		=			
ANR	1188367	Identifier	i		1188317	0					
ANR	1188368	PrimaryExpression	0		1188317	1					
ANR	1188369	Condition	i < NB_ROUNDS	240:13:7126:7138	1188317	1	True				
ANR	1188370	RelationalExpression	i < NB_ROUNDS		1188317	0		<			
ANR	1188371	Identifier	i		1188317	0					
ANR	1188372	Identifier	NB_ROUNDS		1188317	1					
ANR	1188373	PostIncDecOperationExpression	i ++	240:28:7141:7143	1188317	2	True				
ANR	1188374	Identifier	i		1188317	0					
ANR	1188375	IncDec	++		1188317	1					
ANR	1188376	CompoundStatement		9:33:189:189	1188317	3					
ANR	1188377	ExpressionStatement	"apply_round ( i , tmp_block , subkeys )"	241:2:7150:7184	1188317	0	True				
ANR	1188378	CallExpression	"apply_round ( i , tmp_block , subkeys )"		1188317	0					
ANR	1188379	Callee	apply_round		1188317	0					
ANR	1188380	Identifier	apply_round		1188317	0					
ANR	1188381	ArgumentList	i		1188317	1					
ANR	1188382	Argument	i		1188317	0					
ANR	1188383	Identifier	i		1188317	0					
ANR	1188384	Argument	tmp_block		1188317	1					
ANR	1188385	Identifier	tmp_block		1188317	0					
ANR	1188386	Argument	subkeys		1188317	2					
ANR	1188387	Identifier	subkeys		1188317	0					
ANR	1188388	ExpressionStatement	"apply_FP ( tmp_block , out )"	243:1:7190:7215	1188317	6	True				
ANR	1188389	CallExpression	"apply_FP ( tmp_block , out )"		1188317	0					
ANR	1188390	Callee	apply_FP		1188317	0					
ANR	1188391	Identifier	apply_FP		1188317	0					
ANR	1188392	ArgumentList	tmp_block		1188317	1					
ANR	1188393	Argument	tmp_block		1188317	0					
ANR	1188394	Identifier	tmp_block		1188317	0					
ANR	1188395	Argument	out		1188317	1					
ANR	1188396	Identifier	out		1188317	0					
ANR	1188397	ReturnType	void		1188317	1					
ANR	1188398	Identifier	serpent_encrypt		1188317	2					
ANR	1188399	ParameterList	"struct serpent_state * st , ut32 in [ DW_BY_BLOCK ] , ut32 out [ DW_BY_BLOCK ]"		1188317	3					
ANR	1188400	Parameter	struct serpent_state * st	231:21:6882:6905	1188317	0	True				
ANR	1188401	ParameterType	struct serpent_state *		1188317	0					
ANR	1188402	Identifier	st		1188317	1					
ANR	1188403	Parameter	ut32 in [ DW_BY_BLOCK ]	231:47:6908:6927	1188317	1	True				
ANR	1188404	ParameterType	ut32 [ DW_BY_BLOCK ]		1188317	0					
ANR	1188405	Identifier	in		1188317	1					
ANR	1188406	Parameter	ut32 out [ DW_BY_BLOCK ]	232:2:6933:6953	1188317	2	True				
ANR	1188407	ParameterType	ut32 [ DW_BY_BLOCK ]		1188317	0					
ANR	1188408	Identifier	out		1188317	1					
ANR	1188409	CFGEntryNode	ENTRY		1188317		True				
ANR	1188410	CFGExitNode	EXIT		1188317		True				
ANR	1188411	Symbol	st		1188317						
ANR	1188412	Symbol	* st		1188317						
ANR	1188413	Symbol	in		1188317						
ANR	1188414	Symbol	DW_BY_BLOCK		1188317						
ANR	1188415	Symbol	tmp_block		1188317						
ANR	1188416	Symbol	NB_ROUNDS		1188317						
ANR	1188417	Symbol	i		1188317						
ANR	1188418	Symbol	subkeys		1188317						
ANR	1188419	Symbol	out		1188317						
ANR	1188420	Function	serpent_decrypt	248:0:7222:7587							
ANR	1188421	FunctionDef	"serpent_decrypt (struct serpent_state * st , ut32 in [ DW_BY_BLOCK ] , ut32 out [ DW_BY_BLOCK ])"		1188420	0					
ANR	1188422	CompoundStatement		249:25:7316:7587	1188420	0					
ANR	1188423	IdentifierDeclStatement	int i ;	250:1:7319:7324	1188420	0	True				
ANR	1188424	IdentifierDecl	i		1188420	0					
ANR	1188425	IdentifierDeclType	int		1188420	0					
ANR	1188426	Identifier	i		1188420	1					
ANR	1188427	IdentifierDeclStatement	ut32 subkeys [ DW_BY_BLOCK * NB_SUBKEYS ] = { 0 } ;	251:1:7327:7369	1188420	1	True				
ANR	1188428	IdentifierDecl	subkeys [ DW_BY_BLOCK * NB_SUBKEYS ] = { 0 }		1188420	0					
ANR	1188429	IdentifierDeclType	ut32 [ DW_BY_BLOCK * NB_SUBKEYS ]		1188420	0					
ANR	1188430	Identifier	subkeys		1188420	1					
ANR	1188431	MultiplicativeExpression	DW_BY_BLOCK * NB_SUBKEYS		1188420	2		*			
ANR	1188432	Identifier	DW_BY_BLOCK		1188420	0					
ANR	1188433	Identifier	NB_SUBKEYS		1188420	1					
ANR	1188434	AssignmentExpression	subkeys [ DW_BY_BLOCK * NB_SUBKEYS ] = { 0 }		1188420	3		=			
ANR	1188435	Identifier	subkeys		1188420	0					
ANR	1188436	InitializerList	0		1188420	1					
ANR	1188437	PrimaryExpression	0		1188420	0					
ANR	1188438	IdentifierDeclStatement	ut32 tmp_block [ DW_BY_BLOCK ] = { 0 } ;	252:1:7372:7405	1188420	2	True				
ANR	1188439	IdentifierDecl	tmp_block [ DW_BY_BLOCK ] = { 0 }		1188420	0					
ANR	1188440	IdentifierDeclType	ut32 [ DW_BY_BLOCK ]		1188420	0					
ANR	1188441	Identifier	tmp_block		1188420	1					
ANR	1188442	Identifier	DW_BY_BLOCK		1188420	2					
ANR	1188443	AssignmentExpression	tmp_block [ DW_BY_BLOCK ] = { 0 }		1188420	3		=			
ANR	1188444	Identifier	DW_BY_BLOCK		1188420	0					
ANR	1188445	InitializerList	0		1188420	1					
ANR	1188446	PrimaryExpression	0		1188420	0					
ANR	1188447	ExpressionStatement	"serpent_keyschedule ( * st , subkeys )"	254:1:7409:7443	1188420	3	True				
ANR	1188448	CallExpression	"serpent_keyschedule ( * st , subkeys )"		1188420	0					
ANR	1188449	Callee	serpent_keyschedule		1188420	0					
ANR	1188450	Identifier	serpent_keyschedule		1188420	0					
ANR	1188451	ArgumentList	* st		1188420	1					
ANR	1188452	Argument	* st		1188420	0					
ANR	1188453	UnaryOperationExpression	* st		1188420	0					
ANR	1188454	UnaryOperator	*		1188420	0					
ANR	1188455	Identifier	st		1188420	1					
ANR	1188456	Argument	subkeys		1188420	1					
ANR	1188457	Identifier	subkeys		1188420	0					
ANR	1188458	ExpressionStatement	"apply_IP ( in , tmp_block )"	256:1:7447:7471	1188420	4	True				
ANR	1188459	CallExpression	"apply_IP ( in , tmp_block )"		1188420	0					
ANR	1188460	Callee	apply_IP		1188420	0					
ANR	1188461	Identifier	apply_IP		1188420	0					
ANR	1188462	ArgumentList	in		1188420	1					
ANR	1188463	Argument	in		1188420	0					
ANR	1188464	Identifier	in		1188420	0					
ANR	1188465	Argument	tmp_block		1188420	1					
ANR	1188466	Identifier	tmp_block		1188420	0					
ANR	1188467	ForStatement	for ( i = NB_ROUNDS - 1 ; i >= 0 ; i -- )		1188420	5					
ANR	1188468	ForInit	i = NB_ROUNDS - 1 ;	257:6:7479:7496	1188420	0	True				
ANR	1188469	AssignmentExpression	i = NB_ROUNDS - 1		1188420	0		=			
ANR	1188470	Identifier	i		1188420	0					
ANR	1188471	AdditiveExpression	NB_ROUNDS - 1		1188420	1		-			
ANR	1188472	Identifier	NB_ROUNDS		1188420	0					
ANR	1188473	PrimaryExpression	1		1188420	1					
ANR	1188474	Condition	i >= 0	257:25:7498:7503	1188420	1	True				
ANR	1188475	RelationalExpression	i >= 0		1188420	0		>=			
ANR	1188476	Identifier	i		1188420	0					
ANR	1188477	PrimaryExpression	0		1188420	1					
ANR	1188478	PostIncDecOperationExpression	i --	257:33:7506:7508	1188420	2	True				
ANR	1188479	Identifier	i		1188420	0					
ANR	1188480	IncDec	--		1188420	1					
ANR	1188481	CompoundStatement		9:38:194:194	1188420	3					
ANR	1188482	ExpressionStatement	"apply_round_inv ( i , tmp_block , subkeys )"	258:2:7515:7554	1188420	0	True				
ANR	1188483	CallExpression	"apply_round_inv ( i , tmp_block , subkeys )"		1188420	0					
ANR	1188484	Callee	apply_round_inv		1188420	0					
ANR	1188485	Identifier	apply_round_inv		1188420	0					
ANR	1188486	ArgumentList	i		1188420	1					
ANR	1188487	Argument	i		1188420	0					
ANR	1188488	Identifier	i		1188420	0					
ANR	1188489	Argument	tmp_block		1188420	1					
ANR	1188490	Identifier	tmp_block		1188420	0					
ANR	1188491	Argument	subkeys		1188420	2					
ANR	1188492	Identifier	subkeys		1188420	0					
ANR	1188493	ExpressionStatement	"apply_FP ( tmp_block , out )"	260:1:7560:7585	1188420	6	True				
ANR	1188494	CallExpression	"apply_FP ( tmp_block , out )"		1188420	0					
ANR	1188495	Callee	apply_FP		1188420	0					
ANR	1188496	Identifier	apply_FP		1188420	0					
ANR	1188497	ArgumentList	tmp_block		1188420	1					
ANR	1188498	Argument	tmp_block		1188420	0					
ANR	1188499	Identifier	tmp_block		1188420	0					
ANR	1188500	Argument	out		1188420	1					
ANR	1188501	Identifier	out		1188420	0					
ANR	1188502	ReturnType	void		1188420	1					
ANR	1188503	Identifier	serpent_decrypt		1188420	2					
ANR	1188504	ParameterList	"struct serpent_state * st , ut32 in [ DW_BY_BLOCK ] , ut32 out [ DW_BY_BLOCK ]"		1188420	3					
ANR	1188505	Parameter	struct serpent_state * st	248:21:7243:7266	1188420	0	True				
ANR	1188506	ParameterType	struct serpent_state *		1188420	0					
ANR	1188507	Identifier	st		1188420	1					
ANR	1188508	Parameter	ut32 in [ DW_BY_BLOCK ]	248:47:7269:7288	1188420	1	True				
ANR	1188509	ParameterType	ut32 [ DW_BY_BLOCK ]		1188420	0					
ANR	1188510	Identifier	in		1188420	1					
ANR	1188511	Parameter	ut32 out [ DW_BY_BLOCK ]	249:2:7293:7313	1188420	2	True				
ANR	1188512	ParameterType	ut32 [ DW_BY_BLOCK ]		1188420	0					
ANR	1188513	Identifier	out		1188420	1					
ANR	1188514	CFGEntryNode	ENTRY		1188420		True				
ANR	1188515	CFGExitNode	EXIT		1188420		True				
ANR	1188516	Symbol	st		1188420						
ANR	1188517	Symbol	* st		1188420						
ANR	1188518	Symbol	in		1188420						
ANR	1188519	Symbol	tmp_block		1188420						
ANR	1188520	Symbol	DW_BY_BLOCK		1188420						
ANR	1188521	Symbol	NB_ROUNDS		1188420						
ANR	1188522	Symbol	i		1188420						
ANR	1188523	Symbol	subkeys		1188420						
ANR	1188524	Symbol	out		1188420						
