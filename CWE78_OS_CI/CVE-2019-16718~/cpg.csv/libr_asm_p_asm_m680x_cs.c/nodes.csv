command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3500784	File	data/converged/CVE-2019-16718~_radare2/libr_asm_p_asm_m680x_cs.c								
ANR	3500785	DeclStmt									
ANR	3500786	Decl							csh	csh	cd
ANR	3500787	Function	m680xmode	17:0:278:1069							
ANR	3500788	FunctionDef	m680xmode (const char * str)		3500787	0					
ANR	3500789	CompoundStatement		17:38:316:1069	3500787	0					
ANR	3500790	IfStatement	if ( ! str )		3500787	0					
ANR	3500791	Condition	! str	18:5:323:326	3500787	0	True				
ANR	3500792	UnaryOperationExpression	! str		3500787	0					
ANR	3500793	UnaryOperator	!		3500787	0					
ANR	3500794	Identifier	str		3500787	1					
ANR	3500795	CompoundStatement		2:11:12:12	3500787	1					
ANR	3500796	ReturnStatement	return CS_MODE_M680X_6800 ;	19:2:333:358	3500787	0	True				
ANR	3500797	Identifier	CS_MODE_M680X_6800		3500787	0					
ANR	3500798	IfStatement	"if ( strstr ( str , ""6800"" ) )"		3500787	1					
ANR	3500799	Condition	"strstr ( str , ""6800"" )"	22:5:408:427	3500787	0	True				
ANR	3500800	CallExpression	"strstr ( str , ""6800"" )"		3500787	0					
ANR	3500801	Callee	strstr		3500787	0					
ANR	3500802	Identifier	strstr		3500787	0					
ANR	3500803	ArgumentList	str		3500787	1					
ANR	3500804	Argument	str		3500787	0					
ANR	3500805	Identifier	str		3500787	0					
ANR	3500806	Argument	"""6800"""		3500787	1					
ANR	3500807	PrimaryExpression	"""6800"""		3500787	0					
ANR	3500808	CompoundStatement		6:27:113:113	3500787	1					
ANR	3500809	ReturnStatement	return CS_MODE_M680X_6800 ;	23:2:434:459	3500787	0	True				
ANR	3500810	Identifier	CS_MODE_M680X_6800		3500787	0					
ANR	3500811	IfStatement	"if ( strstr ( str , ""6801"" ) )"		3500787	2					
ANR	3500812	Condition	"strstr ( str , ""6801"" )"	25:5:469:488	3500787	0	True				
ANR	3500813	CallExpression	"strstr ( str , ""6801"" )"		3500787	0					
ANR	3500814	Callee	strstr		3500787	0					
ANR	3500815	Identifier	strstr		3500787	0					
ANR	3500816	ArgumentList	str		3500787	1					
ANR	3500817	Argument	str		3500787	0					
ANR	3500818	Identifier	str		3500787	0					
ANR	3500819	Argument	"""6801"""		3500787	1					
ANR	3500820	PrimaryExpression	"""6801"""		3500787	0					
ANR	3500821	CompoundStatement		9:27:174:174	3500787	1					
ANR	3500822	ReturnStatement	return CS_MODE_M680X_6801 ;	26:2:495:520	3500787	0	True				
ANR	3500823	Identifier	CS_MODE_M680X_6801		3500787	0					
ANR	3500824	ElseStatement	else		3500787	0					
ANR	3500825	IfStatement	"if ( strstr ( str , ""6805"" ) )"		3500787	0					
ANR	3500826	Condition	"strstr ( str , ""6805"" )"	27:12:534:553	3500787	0	True				
ANR	3500827	CallExpression	"strstr ( str , ""6805"" )"		3500787	0					
ANR	3500828	Callee	strstr		3500787	0					
ANR	3500829	Identifier	strstr		3500787	0					
ANR	3500830	ArgumentList	str		3500787	1					
ANR	3500831	Argument	str		3500787	0					
ANR	3500832	Identifier	str		3500787	0					
ANR	3500833	Argument	"""6805"""		3500787	1					
ANR	3500834	PrimaryExpression	"""6805"""		3500787	0					
ANR	3500835	CompoundStatement		11:34:239:239	3500787	1					
ANR	3500836	ReturnStatement	return CS_MODE_M680X_6805 ;	28:2:560:585	3500787	0	True				
ANR	3500837	Identifier	CS_MODE_M680X_6805		3500787	0					
ANR	3500838	ElseStatement	else		3500787	0					
ANR	3500839	IfStatement	"if ( strstr ( str , ""6808"" ) )"		3500787	0					
ANR	3500840	Condition	"strstr ( str , ""6808"" )"	29:12:599:618	3500787	0	True				
ANR	3500841	CallExpression	"strstr ( str , ""6808"" )"		3500787	0					
ANR	3500842	Callee	strstr		3500787	0					
ANR	3500843	Identifier	strstr		3500787	0					
ANR	3500844	ArgumentList	str		3500787	1					
ANR	3500845	Argument	str		3500787	0					
ANR	3500846	Identifier	str		3500787	0					
ANR	3500847	Argument	"""6808"""		3500787	1					
ANR	3500848	PrimaryExpression	"""6808"""		3500787	0					
ANR	3500849	CompoundStatement		13:34:304:304	3500787	1					
ANR	3500850	ReturnStatement	return CS_MODE_M680X_6808 ;	30:2:625:650	3500787	0	True				
ANR	3500851	Identifier	CS_MODE_M680X_6808		3500787	0					
ANR	3500852	ElseStatement	else		3500787	0					
ANR	3500853	IfStatement	"if ( strstr ( str , ""6809"" ) )"		3500787	0					
ANR	3500854	Condition	"strstr ( str , ""6809"" )"	31:12:664:683	3500787	0	True				
ANR	3500855	CallExpression	"strstr ( str , ""6809"" )"		3500787	0					
ANR	3500856	Callee	strstr		3500787	0					
ANR	3500857	Identifier	strstr		3500787	0					
ANR	3500858	ArgumentList	str		3500787	1					
ANR	3500859	Argument	str		3500787	0					
ANR	3500860	Identifier	str		3500787	0					
ANR	3500861	Argument	"""6809"""		3500787	1					
ANR	3500862	PrimaryExpression	"""6809"""		3500787	0					
ANR	3500863	CompoundStatement		15:34:369:369	3500787	1					
ANR	3500864	ReturnStatement	return CS_MODE_M680X_6809 ;	32:2:690:715	3500787	0	True				
ANR	3500865	Identifier	CS_MODE_M680X_6809		3500787	0					
ANR	3500866	ElseStatement	else		3500787	0					
ANR	3500867	IfStatement	"if ( strstr ( str , ""6811"" ) )"		3500787	0					
ANR	3500868	Condition	"strstr ( str , ""6811"" )"	33:12:729:748	3500787	0	True				
ANR	3500869	CallExpression	"strstr ( str , ""6811"" )"		3500787	0					
ANR	3500870	Callee	strstr		3500787	0					
ANR	3500871	Identifier	strstr		3500787	0					
ANR	3500872	ArgumentList	str		3500787	1					
ANR	3500873	Argument	str		3500787	0					
ANR	3500874	Identifier	str		3500787	0					
ANR	3500875	Argument	"""6811"""		3500787	1					
ANR	3500876	PrimaryExpression	"""6811"""		3500787	0					
ANR	3500877	CompoundStatement		17:34:434:434	3500787	1					
ANR	3500878	ReturnStatement	return CS_MODE_M680X_6811 ;	34:2:755:780	3500787	0	True				
ANR	3500879	Identifier	CS_MODE_M680X_6811		3500787	0					
ANR	3500880	ElseStatement	else		3500787	0					
ANR	3500881	IfStatement	"if ( strstr ( str , ""cpu12"" ) )"		3500787	0					
ANR	3500882	Condition	"strstr ( str , ""cpu12"" )"	35:12:794:814	3500787	0	True				
ANR	3500883	CallExpression	"strstr ( str , ""cpu12"" )"		3500787	0					
ANR	3500884	Callee	strstr		3500787	0					
ANR	3500885	Identifier	strstr		3500787	0					
ANR	3500886	ArgumentList	str		3500787	1					
ANR	3500887	Argument	str		3500787	0					
ANR	3500888	Identifier	str		3500787	0					
ANR	3500889	Argument	"""cpu12"""		3500787	1					
ANR	3500890	PrimaryExpression	"""cpu12"""		3500787	0					
ANR	3500891	CompoundStatement		19:35:500:500	3500787	1					
ANR	3500892	ReturnStatement	return CS_MODE_M680X_CPU12 ;	36:2:821:847	3500787	0	True				
ANR	3500893	Identifier	CS_MODE_M680X_CPU12		3500787	0					
ANR	3500894	ElseStatement	else		3500787	0					
ANR	3500895	IfStatement	"if ( strstr ( str , ""6301"" ) )"		3500787	0					
ANR	3500896	Condition	"strstr ( str , ""6301"" )"	37:12:861:880	3500787	0	True				
ANR	3500897	CallExpression	"strstr ( str , ""6301"" )"		3500787	0					
ANR	3500898	Callee	strstr		3500787	0					
ANR	3500899	Identifier	strstr		3500787	0					
ANR	3500900	ArgumentList	str		3500787	1					
ANR	3500901	Argument	str		3500787	0					
ANR	3500902	Identifier	str		3500787	0					
ANR	3500903	Argument	"""6301"""		3500787	1					
ANR	3500904	PrimaryExpression	"""6301"""		3500787	0					
ANR	3500905	CompoundStatement		21:34:566:566	3500787	1					
ANR	3500906	ReturnStatement	return CS_MODE_M680X_6301 ;	38:2:887:912	3500787	0	True				
ANR	3500907	Identifier	CS_MODE_M680X_6301		3500787	0					
ANR	3500908	IfStatement	"if ( strstr ( str , ""6309"" ) )"		3500787	3					
ANR	3500909	Condition	"strstr ( str , ""6309"" )"	40:5:922:941	3500787	0	True				
ANR	3500910	CallExpression	"strstr ( str , ""6309"" )"		3500787	0					
ANR	3500911	Callee	strstr		3500787	0					
ANR	3500912	Identifier	strstr		3500787	0					
ANR	3500913	ArgumentList	str		3500787	1					
ANR	3500914	Argument	str		3500787	0					
ANR	3500915	Identifier	str		3500787	0					
ANR	3500916	Argument	"""6309"""		3500787	1					
ANR	3500917	PrimaryExpression	"""6309"""		3500787	0					
ANR	3500918	CompoundStatement		24:27:627:627	3500787	1					
ANR	3500919	ReturnStatement	return CS_MODE_M680X_6309 ;	41:2:948:973	3500787	0	True				
ANR	3500920	Identifier	CS_MODE_M680X_6309		3500787	0					
ANR	3500921	IfStatement	"if ( strstr ( str , ""hcs08"" ) )"		3500787	4					
ANR	3500922	Condition	"strstr ( str , ""hcs08"" )"	43:5:983:1003	3500787	0	True				
ANR	3500923	CallExpression	"strstr ( str , ""hcs08"" )"		3500787	0					
ANR	3500924	Callee	strstr		3500787	0					
ANR	3500925	Identifier	strstr		3500787	0					
ANR	3500926	ArgumentList	str		3500787	1					
ANR	3500927	Argument	str		3500787	0					
ANR	3500928	Identifier	str		3500787	0					
ANR	3500929	Argument	"""hcs08"""		3500787	1					
ANR	3500930	PrimaryExpression	"""hcs08"""		3500787	0					
ANR	3500931	CompoundStatement		27:28:689:689	3500787	1					
ANR	3500932	ReturnStatement	return CS_MODE_M680X_HCS08 ;	44:2:1010:1036	3500787	0	True				
ANR	3500933	Identifier	CS_MODE_M680X_HCS08		3500787	0					
ANR	3500934	ReturnStatement	return CS_MODE_M680X_6800 ;	46:1:1042:1067	3500787	5	True				
ANR	3500935	Identifier	CS_MODE_M680X_6800		3500787	0					
ANR	3500936	ReturnType	static int		3500787	1					
ANR	3500937	Identifier	m680xmode		3500787	2					
ANR	3500938	ParameterList	const char * str		3500787	3					
ANR	3500939	Parameter	const char * str	17:21:299:313	3500787	0	True				
ANR	3500940	ParameterType	const char *		3500787	0					
ANR	3500941	Identifier	str		3500787	1					
ANR	3500942	CFGEntryNode	ENTRY		3500787		True				
ANR	3500943	CFGExitNode	EXIT		3500787		True				
ANR	3500944	Symbol	str		3500787						
ANR	3500945	Symbol	CS_MODE_M680X_6301		3500787						
ANR	3500946	Symbol	CS_MODE_M680X_6809		3500787						
ANR	3500947	Symbol	CS_MODE_M680X_HCS08		3500787						
ANR	3500948	Symbol	CS_MODE_M680X_6800		3500787						
ANR	3500949	Symbol	strstr		3500787						
ANR	3500950	Symbol	CS_MODE_M680X_6811		3500787						
ANR	3500951	Symbol	CS_MODE_M680X_6309		3500787						
ANR	3500952	Symbol	CS_MODE_M680X_6801		3500787						
ANR	3500953	Symbol	CS_MODE_M680X_CPU12		3500787						
ANR	3500954	Symbol	CS_MODE_M680X_6808		3500787						
ANR	3500955	Symbol	CS_MODE_M680X_6805		3500787						
ANR	3500956	Function	the_end	49:0:1072:1159							
ANR	3500957	FunctionDef	the_end (void * p)		3500956	0					
ANR	3500958	CompoundStatement		49:29:1101:1159	3500956	0					
ANR	3500959	IfStatement	if ( cd )		3500956	0					
ANR	3500960	Condition	cd	50:5:1108:1109	3500956	0	True				
ANR	3500961	Identifier	cd		3500956	0					
ANR	3500962	CompoundStatement		2:9:10:10	3500956	1					
ANR	3500963	ExpressionStatement	cs_close ( & cd )	51:2:1116:1130	3500956	0	True				
ANR	3500964	CallExpression	cs_close ( & cd )		3500956	0					
ANR	3500965	Callee	cs_close		3500956	0					
ANR	3500966	Identifier	cs_close		3500956	0					
ANR	3500967	ArgumentList	& cd		3500956	1					
ANR	3500968	Argument	& cd		3500956	0					
ANR	3500969	UnaryOperationExpression	& cd		3500956	0					
ANR	3500970	UnaryOperator	&		3500956	0					
ANR	3500971	Identifier	cd		3500956	1					
ANR	3500972	ExpressionStatement	cd = 0	52:2:1134:1140	3500956	1	True				
ANR	3500973	AssignmentExpression	cd = 0		3500956	0		=			
ANR	3500974	Identifier	cd		3500956	0					
ANR	3500975	PrimaryExpression	0		3500956	1					
ANR	3500976	ReturnStatement	return true ;	54:1:1146:1157	3500956	1	True				
ANR	3500977	Identifier	true		3500956	0					
ANR	3500978	ReturnType	static bool		3500956	1					
ANR	3500979	Identifier	the_end		3500956	2					
ANR	3500980	ParameterList	void * p		3500956	3					
ANR	3500981	Parameter	void * p	49:20:1092:1098	3500956	0	True				
ANR	3500982	ParameterType	void *		3500956	0					
ANR	3500983	Identifier	p		3500956	1					
ANR	3500984	CFGEntryNode	ENTRY		3500956		True				
ANR	3500985	CFGExitNode	EXIT		3500956		True				
ANR	3500986	Symbol	p		3500956						
ANR	3500987	Symbol	cd		3500956						
ANR	3500988	Symbol	true		3500956						
ANR	3500989	Symbol	& cd		3500956						
ANR	3500990	Function	disassemble	57:0:1162:2002							
ANR	3500991	FunctionDef	"disassemble (RAsm * a , RAsmOp * op , const ut8 * buf , int len)"		3500990	0					
ANR	3500992	CompoundStatement		57:69:1231:2002	3500990	0					
ANR	3500993	Statement	static	58:1:1234:1239	3500990	0	True				
ANR	3500994	IdentifierDeclStatement	int omode = 0 ;	58:8:1241:1254	3500990	1	True				
ANR	3500995	IdentifierDecl	omode = 0		3500990	0					
ANR	3500996	IdentifierDeclType	int		3500990	0					
ANR	3500997	Identifier	omode		3500990	1					
ANR	3500998	AssignmentExpression	omode = 0		3500990	2		=			
ANR	3500999	Identifier	omode		3500990	0					
ANR	3501000	PrimaryExpression	0		3500990	1					
ANR	3501001	IdentifierDeclStatement	"int mode , n , ret ;"	59:1:1257:1273	3500990	2	True				
ANR	3501002	IdentifierDecl	mode		3500990	0					
ANR	3501003	IdentifierDeclType	int		3500990	0					
ANR	3501004	Identifier	mode		3500990	1					
ANR	3501005	IdentifierDecl	n		3500990	1					
ANR	3501006	IdentifierDeclType	int		3500990	0					
ANR	3501007	Identifier	n		3500990	1					
ANR	3501008	IdentifierDecl	ret		3500990	2					
ANR	3501009	IdentifierDeclType	int		3500990	0					
ANR	3501010	Identifier	ret		3500990	1					
ANR	3501011	IdentifierDeclStatement	ut64 off = a -> pc ;	60:1:1276:1292	3500990	3	True				
ANR	3501012	IdentifierDecl	off = a -> pc		3500990	0					
ANR	3501013	IdentifierDeclType	ut64		3500990	0					
ANR	3501014	Identifier	off		3500990	1					
ANR	3501015	AssignmentExpression	off = a -> pc		3500990	2		=			
ANR	3501016	Identifier	off		3500990	0					
ANR	3501017	PtrMemberAccess	a -> pc		3500990	1					
ANR	3501018	Identifier	a		3500990	0					
ANR	3501019	Identifier	pc		3500990	1					
ANR	3501020	IdentifierDeclStatement	cs_insn * insn = NULL ;	61:1:1295:1315	3500990	4	True				
ANR	3501021	IdentifierDecl	* insn = NULL		3500990	0					
ANR	3501022	IdentifierDeclType	cs_insn *		3500990	0					
ANR	3501023	Identifier	insn		3500990	1					
ANR	3501024	AssignmentExpression	* insn = NULL		3500990	2		=			
ANR	3501025	Identifier	NULL		3500990	0					
ANR	3501026	Identifier	NULL		3500990	1					
ANR	3501027	ExpressionStatement	mode = m680xmode ( a -> cpu )	62:1:1318:1343	3500990	5	True				
ANR	3501028	AssignmentExpression	mode = m680xmode ( a -> cpu )		3500990	0		=			
ANR	3501029	Identifier	mode		3500990	0					
ANR	3501030	CallExpression	m680xmode ( a -> cpu )		3500990	1					
ANR	3501031	Callee	m680xmode		3500990	0					
ANR	3501032	Identifier	m680xmode		3500990	0					
ANR	3501033	ArgumentList	a -> cpu		3500990	1					
ANR	3501034	Argument	a -> cpu		3500990	0					
ANR	3501035	PtrMemberAccess	a -> cpu		3500990	0					
ANR	3501036	Identifier	a		3500990	0					
ANR	3501037	Identifier	cpu		3500990	1					
ANR	3501038	IfStatement	if ( cd && mode != omode )		3500990	6					
ANR	3501039	Condition	cd && mode != omode	63:5:1350:1368	3500990	0	True				
ANR	3501040	AndExpression	cd && mode != omode		3500990	0		&&			
ANR	3501041	Identifier	cd		3500990	0					
ANR	3501042	EqualityExpression	mode != omode		3500990	1		!=			
ANR	3501043	Identifier	mode		3500990	0					
ANR	3501044	Identifier	omode		3500990	1					
ANR	3501045	CompoundStatement		7:26:139:139	3500990	1					
ANR	3501046	ExpressionStatement	cs_close ( & cd )	64:2:1375:1389	3500990	0	True				
ANR	3501047	CallExpression	cs_close ( & cd )		3500990	0					
ANR	3501048	Callee	cs_close		3500990	0					
ANR	3501049	Identifier	cs_close		3500990	0					
ANR	3501050	ArgumentList	& cd		3500990	1					
ANR	3501051	Argument	& cd		3500990	0					
ANR	3501052	UnaryOperationExpression	& cd		3500990	0					
ANR	3501053	UnaryOperator	&		3500990	0					
ANR	3501054	Identifier	cd		3500990	1					
ANR	3501055	ExpressionStatement	cd = 0	65:2:1393:1399	3500990	1	True				
ANR	3501056	AssignmentExpression	cd = 0		3500990	0		=			
ANR	3501057	Identifier	cd		3500990	0					
ANR	3501058	PrimaryExpression	0		3500990	1					
ANR	3501059	ExpressionStatement	op -> size = 0	67:1:1405:1417	3500990	7	True				
ANR	3501060	AssignmentExpression	op -> size = 0		3500990	0		=			
ANR	3501061	PtrMemberAccess	op -> size		3500990	0					
ANR	3501062	Identifier	op		3500990	0					
ANR	3501063	Identifier	size		3500990	1					
ANR	3501064	PrimaryExpression	0		3500990	1					
ANR	3501065	ExpressionStatement	omode = mode	68:1:1420:1432	3500990	8	True				
ANR	3501066	AssignmentExpression	omode = mode		3500990	0		=			
ANR	3501067	Identifier	omode		3500990	0					
ANR	3501068	Identifier	mode		3500990	1					
ANR	3501069	IfStatement	if ( cd == 0 )		3500990	9					
ANR	3501070	Condition	cd == 0	69:5:1439:1445	3500990	0	True				
ANR	3501071	EqualityExpression	cd == 0		3500990	0		==			
ANR	3501072	Identifier	cd		3500990	0					
ANR	3501073	PrimaryExpression	0		3500990	1					
ANR	3501074	CompoundStatement		13:14:216:216	3500990	1					
ANR	3501075	ExpressionStatement	"ret = cs_open ( CS_ARCH_M680X , mode , & cd )"	70:2:1452:1492	3500990	0	True				
ANR	3501076	AssignmentExpression	"ret = cs_open ( CS_ARCH_M680X , mode , & cd )"		3500990	0		=			
ANR	3501077	Identifier	ret		3500990	0					
ANR	3501078	CallExpression	"cs_open ( CS_ARCH_M680X , mode , & cd )"		3500990	1					
ANR	3501079	Callee	cs_open		3500990	0					
ANR	3501080	Identifier	cs_open		3500990	0					
ANR	3501081	ArgumentList	CS_ARCH_M680X		3500990	1					
ANR	3501082	Argument	CS_ARCH_M680X		3500990	0					
ANR	3501083	Identifier	CS_ARCH_M680X		3500990	0					
ANR	3501084	Argument	mode		3500990	1					
ANR	3501085	Identifier	mode		3500990	0					
ANR	3501086	Argument	& cd		3500990	2					
ANR	3501087	UnaryOperationExpression	& cd		3500990	0					
ANR	3501088	UnaryOperator	&		3500990	0					
ANR	3501089	Identifier	cd		3500990	1					
ANR	3501090	IfStatement	if ( ret )		3500990	1					
ANR	3501091	Condition	ret	71:6:1500:1502	3500990	0	True				
ANR	3501092	Identifier	ret		3500990	0					
ANR	3501093	CompoundStatement		15:11:273:273	3500990	1					
ANR	3501094	ReturnStatement	return 0 ;	72:3:1510:1518	3500990	0	True				
ANR	3501095	PrimaryExpression	0		3500990	0					
ANR	3501096	ExpressionStatement	"cs_option ( cd , CS_OPT_DETAIL , CS_OPT_OFF )"	74:2:1526:1567	3500990	2	True				
ANR	3501097	CallExpression	"cs_option ( cd , CS_OPT_DETAIL , CS_OPT_OFF )"		3500990	0					
ANR	3501098	Callee	cs_option		3500990	0					
ANR	3501099	Identifier	cs_option		3500990	0					
ANR	3501100	ArgumentList	cd		3500990	1					
ANR	3501101	Argument	cd		3500990	0					
ANR	3501102	Identifier	cd		3500990	0					
ANR	3501103	Argument	CS_OPT_DETAIL		3500990	1					
ANR	3501104	Identifier	CS_OPT_DETAIL		3500990	0					
ANR	3501105	Argument	CS_OPT_OFF		3500990	2					
ANR	3501106	Identifier	CS_OPT_OFF		3500990	0					
ANR	3501107	ExpressionStatement	"n = cs_disasm ( cd , ( const ut8 * ) buf , len , off , 1 , & insn )"	76:1:1573:1628	3500990	10	True				
ANR	3501108	AssignmentExpression	"n = cs_disasm ( cd , ( const ut8 * ) buf , len , off , 1 , & insn )"		3500990	0		=			
ANR	3501109	Identifier	n		3500990	0					
ANR	3501110	CallExpression	"cs_disasm ( cd , ( const ut8 * ) buf , len , off , 1 , & insn )"		3500990	1					
ANR	3501111	Callee	cs_disasm		3500990	0					
ANR	3501112	Identifier	cs_disasm		3500990	0					
ANR	3501113	ArgumentList	cd		3500990	1					
ANR	3501114	Argument	cd		3500990	0					
ANR	3501115	Identifier	cd		3500990	0					
ANR	3501116	Argument	( const ut8 * ) buf		3500990	1					
ANR	3501117	CastExpression	( const ut8 * ) buf		3500990	0					
ANR	3501118	CastTarget	const ut8 *		3500990	0					
ANR	3501119	Identifier	buf		3500990	1					
ANR	3501120	Argument	len		3500990	2					
ANR	3501121	Identifier	len		3500990	0					
ANR	3501122	Argument	off		3500990	3					
ANR	3501123	Identifier	off		3500990	0					
ANR	3501124	Argument	1		3500990	4					
ANR	3501125	PrimaryExpression	1		3500990	0					
ANR	3501126	Argument	& insn		3500990	5					
ANR	3501127	UnaryOperationExpression	& insn		3500990	0					
ANR	3501128	UnaryOperator	&		3500990	0					
ANR	3501129	Identifier	insn		3500990	1					
ANR	3501130	IfStatement	if ( n > 0 )		3500990	11					
ANR	3501131	Condition	n > 0	77:5:1635:1637	3500990	0	True				
ANR	3501132	RelationalExpression	n > 0		3500990	0		>			
ANR	3501133	Identifier	n		3500990	0					
ANR	3501134	PrimaryExpression	0		3500990	1					
ANR	3501135	CompoundStatement		21:10:408:408	3500990	1					
ANR	3501136	IfStatement	if ( insn -> size > 0 )		3500990	0					
ANR	3501137	Condition	insn -> size > 0	78:6:1648:1661	3500990	0	True				
ANR	3501138	RelationalExpression	insn -> size > 0		3500990	0		>			
ANR	3501139	PtrMemberAccess	insn -> size		3500990	0					
ANR	3501140	Identifier	insn		3500990	0					
ANR	3501141	Identifier	size		3500990	1					
ANR	3501142	PrimaryExpression	0		3500990	1					
ANR	3501143	CompoundStatement		27:3:567:606	3500990	1					
ANR	3501144	ExpressionStatement	op -> size = insn -> size	79:3:1669:1690	3500990	0	True				
ANR	3501145	AssignmentExpression	op -> size = insn -> size		3500990	0		=			
ANR	3501146	PtrMemberAccess	op -> size		3500990	0					
ANR	3501147	Identifier	op		3500990	0					
ANR	3501148	Identifier	size		3500990	1					
ANR	3501149	PtrMemberAccess	insn -> size		3500990	1					
ANR	3501150	Identifier	insn		3500990	0					
ANR	3501151	Identifier	size		3500990	1					
ANR	3501152	IdentifierDeclStatement	"char * buf_asm = sdb_fmt ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str ) ;"	80:3:1695:1794	3500990	1	True				
ANR	3501153	IdentifierDecl	"* buf_asm = sdb_fmt ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str )"		3500990	0					
ANR	3501154	IdentifierDeclType	char *		3500990	0					
ANR	3501155	Identifier	buf_asm		3500990	1					
ANR	3501156	AssignmentExpression	"* buf_asm = sdb_fmt ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str )"		3500990	2		=			
ANR	3501157	Identifier	buf_asm		3500990	0					
ANR	3501158	CallExpression	"sdb_fmt ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str )"		3500990	1					
ANR	3501159	Callee	sdb_fmt		3500990	0					
ANR	3501160	Identifier	sdb_fmt		3500990	0					
ANR	3501161	ArgumentList	"""%s%s%s"""		3500990	1					
ANR	3501162	Argument	"""%s%s%s"""		3500990	0					
ANR	3501163	PrimaryExpression	"""%s%s%s"""		3500990	0					
ANR	3501164	Argument	insn -> mnemonic		3500990	1					
ANR	3501165	PtrMemberAccess	insn -> mnemonic		3500990	0					
ANR	3501166	Identifier	insn		3500990	0					
ANR	3501167	Identifier	mnemonic		3500990	1					
ANR	3501168	Argument	"insn -> op_str [ 0 ] ? "" "" : """""		3500990	2					
ANR	3501169	ConditionalExpression	"insn -> op_str [ 0 ] ? "" "" : """""		3500990	0					
ANR	3501170	Condition	insn -> op_str [ 0 ]		3500990	0					
ANR	3501171	ArrayIndexing	insn -> op_str [ 0 ]		3500990	0					
ANR	3501172	PtrMemberAccess	insn -> op_str		3500990	0					
ANR	3501173	Identifier	insn		3500990	0					
ANR	3501174	Identifier	op_str		3500990	1					
ANR	3501175	PrimaryExpression	0		3500990	1					
ANR	3501176	PrimaryExpression	""" """		3500990	1					
ANR	3501177	PrimaryExpression	""""""		3500990	2					
ANR	3501178	Argument	insn -> op_str		3500990	3					
ANR	3501179	PtrMemberAccess	insn -> op_str		3500990	0					
ANR	3501180	Identifier	insn		3500990	0					
ANR	3501181	Identifier	op_str		3500990	1					
ANR	3501182	IdentifierDeclStatement	"char * ptrstr = strstr ( buf_asm , ""ptr "" ) ;"	83:3:1799:1838	3500990	2	True				
ANR	3501183	IdentifierDecl	"* ptrstr = strstr ( buf_asm , ""ptr "" )"		3500990	0					
ANR	3501184	IdentifierDeclType	char *		3500990	0					
ANR	3501185	Identifier	ptrstr		3500990	1					
ANR	3501186	AssignmentExpression	"* ptrstr = strstr ( buf_asm , ""ptr "" )"		3500990	2		=			
ANR	3501187	Identifier	ptrstr		3500990	0					
ANR	3501188	CallExpression	"strstr ( buf_asm , ""ptr "" )"		3500990	1					
ANR	3501189	Callee	strstr		3500990	0					
ANR	3501190	Identifier	strstr		3500990	0					
ANR	3501191	ArgumentList	buf_asm		3500990	1					
ANR	3501192	Argument	buf_asm		3500990	0					
ANR	3501193	Identifier	buf_asm		3500990	0					
ANR	3501194	Argument	"""ptr """		3500990	1					
ANR	3501195	PrimaryExpression	"""ptr """		3500990	0					
ANR	3501196	IfStatement	if ( ptrstr )		3500990	3					
ANR	3501197	Condition	ptrstr	84:7:1847:1852	3500990	0	True				
ANR	3501198	Identifier	ptrstr		3500990	0					
ANR	3501199	CompoundStatement		28:15:623:623	3500990	1					
ANR	3501200	ExpressionStatement	"memmove ( ptrstr , ptrstr + 4 , strlen ( ptrstr + 4 ) + 1 )"	85:4:1861:1914	3500990	0	True				
ANR	3501201	CallExpression	"memmove ( ptrstr , ptrstr + 4 , strlen ( ptrstr + 4 ) + 1 )"		3500990	0					
ANR	3501202	Callee	memmove		3500990	0					
ANR	3501203	Identifier	memmove		3500990	0					
ANR	3501204	ArgumentList	ptrstr		3500990	1					
ANR	3501205	Argument	ptrstr		3500990	0					
ANR	3501206	Identifier	ptrstr		3500990	0					
ANR	3501207	Argument	ptrstr + 4		3500990	1					
ANR	3501208	AdditiveExpression	ptrstr + 4		3500990	0		+			
ANR	3501209	Identifier	ptrstr		3500990	0					
ANR	3501210	PrimaryExpression	4		3500990	1					
ANR	3501211	Argument	strlen ( ptrstr + 4 ) + 1		3500990	2					
ANR	3501212	AdditiveExpression	strlen ( ptrstr + 4 ) + 1		3500990	0		+			
ANR	3501213	CallExpression	strlen ( ptrstr + 4 )		3500990	0					
ANR	3501214	Callee	strlen		3500990	0					
ANR	3501215	Identifier	strlen		3500990	0					
ANR	3501216	ArgumentList	ptrstr + 4		3500990	1					
ANR	3501217	Argument	ptrstr + 4		3500990	0					
ANR	3501218	AdditiveExpression	ptrstr + 4		3500990	0		+			
ANR	3501219	Identifier	ptrstr		3500990	0					
ANR	3501220	PrimaryExpression	4		3500990	1					
ANR	3501221	PrimaryExpression	1		3500990	1					
ANR	3501222	ExpressionStatement	"r_asm_op_set_asm ( op , buf_asm )"	87:3:1924:1954	3500990	4	True				
ANR	3501223	CallExpression	"r_asm_op_set_asm ( op , buf_asm )"		3500990	0					
ANR	3501224	Callee	r_asm_op_set_asm		3500990	0					
ANR	3501225	Identifier	r_asm_op_set_asm		3500990	0					
ANR	3501226	ArgumentList	op		3500990	1					
ANR	3501227	Argument	op		3500990	0					
ANR	3501228	Identifier	op		3500990	0					
ANR	3501229	Argument	buf_asm		3500990	1					
ANR	3501230	Identifier	buf_asm		3500990	0					
ANR	3501231	ExpressionStatement	"cs_free ( insn , n )"	89:2:1962:1979	3500990	1	True				
ANR	3501232	CallExpression	"cs_free ( insn , n )"		3500990	0					
ANR	3501233	Callee	cs_free		3500990	0					
ANR	3501234	Identifier	cs_free		3500990	0					
ANR	3501235	ArgumentList	insn		3500990	1					
ANR	3501236	Argument	insn		3500990	0					
ANR	3501237	Identifier	insn		3500990	0					
ANR	3501238	Argument	n		3500990	1					
ANR	3501239	Identifier	n		3500990	0					
ANR	3501240	ReturnStatement	return op -> size ;	91:1:1985:2000	3500990	12	True				
ANR	3501241	PtrMemberAccess	op -> size		3500990	0					
ANR	3501242	Identifier	op		3500990	0					
ANR	3501243	Identifier	size		3500990	1					
ANR	3501244	ReturnType	static int		3500990	1					
ANR	3501245	Identifier	disassemble		3500990	2					
ANR	3501246	ParameterList	"RAsm * a , RAsmOp * op , const ut8 * buf , int len"		3500990	3					
ANR	3501247	Parameter	RAsm * a	57:23:1185:1191	3500990	0	True				
ANR	3501248	ParameterType	RAsm *		3500990	0					
ANR	3501249	Identifier	a		3500990	1					
ANR	3501250	Parameter	RAsmOp * op	57:32:1194:1203	3500990	1	True				
ANR	3501251	ParameterType	RAsmOp *		3500990	0					
ANR	3501252	Identifier	op		3500990	1					
ANR	3501253	Parameter	const ut8 * buf	57:44:1206:1219	3500990	2	True				
ANR	3501254	ParameterType	const ut8 *		3500990	0					
ANR	3501255	Identifier	buf		3500990	1					
ANR	3501256	Parameter	int len	57:60:1222:1228	3500990	3	True				
ANR	3501257	ParameterType	int		3500990	0					
ANR	3501258	Identifier	len		3500990	1					
ANR	3501259	CFGEntryNode	ENTRY		3500990		True				
ANR	3501260	CFGExitNode	EXIT		3500990		True				
ANR	3501261	Symbol	CS_OPT_OFF		3500990						
ANR	3501262	Symbol	* insn -> op_str		3500990						
ANR	3501263	Symbol	* op		3500990						
ANR	3501264	Symbol	a -> cpu		3500990						
ANR	3501265	Symbol	CS_ARCH_M680X		3500990						
ANR	3501266	Symbol	& cd		3500990						
ANR	3501267	Symbol	cs_open		3500990						
ANR	3501268	Symbol	mode		3500990						
ANR	3501269	Symbol	strlen		3500990						
ANR	3501270	Symbol	len		3500990						
ANR	3501271	Symbol	insn -> mnemonic		3500990						
ANR	3501272	Symbol	insn -> size		3500990						
ANR	3501273	Symbol	omode		3500990						
ANR	3501274	Symbol	sdb_fmt		3500990						
ANR	3501275	Symbol	insn -> op_str		3500990						
ANR	3501276	Symbol	ret		3500990						
ANR	3501277	Symbol	a		3500990						
ANR	3501278	Symbol	op		3500990						
ANR	3501279	Symbol	cd		3500990						
ANR	3501280	Symbol	NULL		3500990						
ANR	3501281	Symbol	* insn		3500990						
ANR	3501282	Symbol	* a		3500990						
ANR	3501283	Symbol	m680xmode		3500990						
ANR	3501284	Symbol	cs_disasm		3500990						
ANR	3501285	Symbol	a -> pc		3500990						
ANR	3501286	Symbol	n		3500990						
ANR	3501287	Symbol	off		3500990						
ANR	3501288	Symbol	insn		3500990						
ANR	3501289	Symbol	buf		3500990						
ANR	3501290	Symbol	CS_OPT_DETAIL		3500990						
ANR	3501291	Symbol	* * insn		3500990						
ANR	3501292	Symbol	strstr		3500990						
ANR	3501293	Symbol	ptrstr		3500990						
ANR	3501294	Symbol	& insn		3500990						
ANR	3501295	Symbol	op -> size		3500990						
ANR	3501296	Symbol	buf_asm		3500990						
ANR	3501297	DeclStmt									
ANR	3501298	Decl							RAsmPlugin	RAsmPlugin	r_asm_plugin_m680x_cs
ANR	3501299	DeclStmt									
ANR	3501300	Decl							RAsmPlugin	RAsmPlugin	r_asm_plugin_m680x_cs
ANR	3501301	DeclStmt									
ANR	3501302	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
