command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5007290	File	data/converged/CVE-2019-16718~_radare2/libr_parse_code.c								
ANR	5007291	Function	__appendString	10:0:190:478							
ANR	5007292	FunctionDef	"__appendString (const char * msg , char * * s)"		5007291	0					
ANR	5007293	CompoundStatement		10:54:244:478	5007291	0					
ANR	5007294	IfStatement	if ( ! s )		5007291	0					
ANR	5007295	Condition	! s	11:5:251:252	5007291	0	True				
ANR	5007296	UnaryOperationExpression	! s		5007291	0					
ANR	5007297	UnaryOperator	!		5007291	0					
ANR	5007298	Identifier	s		5007291	1					
ANR	5007299	CompoundStatement		2:9:10:10	5007291	1					
ANR	5007300	ExpressionStatement	"printf ( ""%s\\n"" , msg )"	12:2:259:279	5007291	0	True				
ANR	5007301	CallExpression	"printf ( ""%s\\n"" , msg )"		5007291	0					
ANR	5007302	Callee	printf		5007291	0					
ANR	5007303	Identifier	printf		5007291	0					
ANR	5007304	ArgumentList	"""%s\\n"""		5007291	1					
ANR	5007305	Argument	"""%s\\n"""		5007291	0					
ANR	5007306	PrimaryExpression	"""%s\\n"""		5007291	0					
ANR	5007307	Argument	msg		5007291	1					
ANR	5007308	Identifier	msg		5007291	0					
ANR	5007309	ElseStatement	else		5007291	0					
ANR	5007310	IfStatement	if ( * s )		5007291	0					
ANR	5007311	Condition	* s	13:12:293:294	5007291	0	True				
ANR	5007312	UnaryOperationExpression	* s		5007291	0					
ANR	5007313	UnaryOperator	*		5007291	0					
ANR	5007314	Identifier	s		5007291	1					
ANR	5007315	CompoundStatement		5:2:56:105	5007291	1					
ANR	5007316	IdentifierDeclStatement	char * p = malloc ( strlen ( msg ) + strlen ( * s ) + 1 ) ;	14:2:301:350	5007291	0	True				
ANR	5007317	IdentifierDecl	* p = malloc ( strlen ( msg ) + strlen ( * s ) + 1 )		5007291	0					
ANR	5007318	IdentifierDeclType	char *		5007291	0					
ANR	5007319	Identifier	p		5007291	1					
ANR	5007320	AssignmentExpression	* p = malloc ( strlen ( msg ) + strlen ( * s ) + 1 )		5007291	2		=			
ANR	5007321	Identifier	p		5007291	0					
ANR	5007322	CallExpression	malloc ( strlen ( msg ) + strlen ( * s ) + 1 )		5007291	1					
ANR	5007323	Callee	malloc		5007291	0					
ANR	5007324	Identifier	malloc		5007291	0					
ANR	5007325	ArgumentList	strlen ( msg ) + strlen ( * s ) + 1		5007291	1					
ANR	5007326	Argument	strlen ( msg ) + strlen ( * s ) + 1		5007291	0					
ANR	5007327	AdditiveExpression	strlen ( msg ) + strlen ( * s ) + 1		5007291	0		+			
ANR	5007328	CallExpression	strlen ( msg )		5007291	0					
ANR	5007329	Callee	strlen		5007291	0					
ANR	5007330	Identifier	strlen		5007291	0					
ANR	5007331	ArgumentList	msg		5007291	1					
ANR	5007332	Argument	msg		5007291	0					
ANR	5007333	Identifier	msg		5007291	0					
ANR	5007334	AdditiveExpression	strlen ( * s ) + 1		5007291	1		+			
ANR	5007335	CallExpression	strlen ( * s )		5007291	0					
ANR	5007336	Callee	strlen		5007291	0					
ANR	5007337	Identifier	strlen		5007291	0					
ANR	5007338	ArgumentList	* s		5007291	1					
ANR	5007339	Argument	* s		5007291	0					
ANR	5007340	UnaryOperationExpression	* s		5007291	0					
ANR	5007341	UnaryOperator	*		5007291	0					
ANR	5007342	Identifier	s		5007291	1					
ANR	5007343	PrimaryExpression	1		5007291	1					
ANR	5007344	IfStatement	if ( p )		5007291	1					
ANR	5007345	Condition	p	15:6:358:358	5007291	0	True				
ANR	5007346	Identifier	p		5007291	0					
ANR	5007347	CompoundStatement		6:9:116:116	5007291	1					
ANR	5007348	ExpressionStatement	"strcpy ( p , * s )"	16:3:366:380	5007291	0	True				
ANR	5007349	CallExpression	"strcpy ( p , * s )"		5007291	0					
ANR	5007350	Callee	strcpy		5007291	0					
ANR	5007351	Identifier	strcpy		5007291	0					
ANR	5007352	ArgumentList	p		5007291	1					
ANR	5007353	Argument	p		5007291	0					
ANR	5007354	Identifier	p		5007291	0					
ANR	5007355	Argument	* s		5007291	1					
ANR	5007356	UnaryOperationExpression	* s		5007291	0					
ANR	5007357	UnaryOperator	*		5007291	0					
ANR	5007358	Identifier	s		5007291	1					
ANR	5007359	ExpressionStatement	free ( * s )	17:3:385:394	5007291	1	True				
ANR	5007360	CallExpression	free ( * s )		5007291	0					
ANR	5007361	Callee	free		5007291	0					
ANR	5007362	Identifier	free		5007291	0					
ANR	5007363	ArgumentList	* s		5007291	1					
ANR	5007364	Argument	* s		5007291	0					
ANR	5007365	UnaryOperationExpression	* s		5007291	0					
ANR	5007366	UnaryOperator	*		5007291	0					
ANR	5007367	Identifier	s		5007291	1					
ANR	5007368	ExpressionStatement	* s = p	18:3:399:405	5007291	2	True				
ANR	5007369	AssignmentExpression	* s = p		5007291	0		=			
ANR	5007370	UnaryOperationExpression	* s		5007291	0					
ANR	5007371	UnaryOperator	*		5007291	0					
ANR	5007372	Identifier	s		5007291	1					
ANR	5007373	Identifier	p		5007291	1					
ANR	5007374	ExpressionStatement	"strcpy ( p + strlen ( p ) , msg )"	19:3:410:438	5007291	3	True				
ANR	5007375	CallExpression	"strcpy ( p + strlen ( p ) , msg )"		5007291	0					
ANR	5007376	Callee	strcpy		5007291	0					
ANR	5007377	Identifier	strcpy		5007291	0					
ANR	5007378	ArgumentList	p + strlen ( p )		5007291	1					
ANR	5007379	Argument	p + strlen ( p )		5007291	0					
ANR	5007380	AdditiveExpression	p + strlen ( p )		5007291	0		+			
ANR	5007381	Identifier	p		5007291	0					
ANR	5007382	CallExpression	strlen ( p )		5007291	1					
ANR	5007383	Callee	strlen		5007291	0					
ANR	5007384	Identifier	strlen		5007291	0					
ANR	5007385	ArgumentList	p		5007291	1					
ANR	5007386	Argument	p		5007291	0					
ANR	5007387	Identifier	p		5007291	0					
ANR	5007388	Argument	msg		5007291	1					
ANR	5007389	Identifier	msg		5007291	0					
ANR	5007390	ElseStatement	else		5007291	0					
ANR	5007391	CompoundStatement		12:8:207:207	5007291	0					
ANR	5007392	ExpressionStatement	* s = strdup ( msg )	22:2:456:473	5007291	0	True				
ANR	5007393	AssignmentExpression	* s = strdup ( msg )		5007291	0		=			
ANR	5007394	UnaryOperationExpression	* s		5007291	0					
ANR	5007395	UnaryOperator	*		5007291	0					
ANR	5007396	Identifier	s		5007291	1					
ANR	5007397	CallExpression	strdup ( msg )		5007291	1					
ANR	5007398	Callee	strdup		5007291	0					
ANR	5007399	Identifier	strdup		5007291	0					
ANR	5007400	ArgumentList	msg		5007291	1					
ANR	5007401	Argument	msg		5007291	0					
ANR	5007402	Identifier	msg		5007291	0					
ANR	5007403	ReturnType	static void		5007291	1					
ANR	5007404	Identifier	__appendString		5007291	2					
ANR	5007405	ParameterList	"const char * msg , char * * s"		5007291	3					
ANR	5007406	Parameter	const char * msg	10:27:217:231	5007291	0	True				
ANR	5007407	ParameterType	const char *		5007291	0					
ANR	5007408	Identifier	msg		5007291	1					
ANR	5007409	Parameter	char * * s	10:44:234:241	5007291	1	True				
ANR	5007410	ParameterType	char * *		5007291	0					
ANR	5007411	Identifier	s		5007291	1					
ANR	5007412	CFGEntryNode	ENTRY		5007291		True				
ANR	5007413	CFGExitNode	EXIT		5007291		True				
ANR	5007414	Symbol	msg		5007291						
ANR	5007415	Symbol	p		5007291						
ANR	5007416	Symbol	strlen		5007291						
ANR	5007417	Symbol	malloc		5007291						
ANR	5007418	Symbol	s		5007291						
ANR	5007419	Symbol	strdup		5007291						
ANR	5007420	Symbol	* s		5007291						
ANR	5007421	Function	__typeLoad	26:0:481:1730							
ANR	5007422	FunctionDef	"__typeLoad (void * p , const char * k , const char * v)"		5007421	0					
ANR	5007423	CompoundStatement		26:61:542:1730	5007421	0					
ANR	5007424	IfStatement	if ( ! p )		5007421	0					
ANR	5007425	Condition	! p	27:5:549:550	5007421	0	True				
ANR	5007426	UnaryOperationExpression	! p		5007421	0					
ANR	5007427	UnaryOperator	!		5007421	0					
ANR	5007428	Identifier	p		5007421	1					
ANR	5007429	CompoundStatement		2:9:10:10	5007421	1					
ANR	5007430	ReturnStatement	return - 1 ;	28:2:557:566	5007421	0	True				
ANR	5007431	UnaryOperationExpression	- 1		5007421	0					
ANR	5007432	UnaryOperator	-		5007421	0					
ANR	5007433	PrimaryExpression	1		5007421	1					
ANR	5007434	IdentifierDeclStatement	int btype = 0 ;	30:1:572:585	5007421	1	True				
ANR	5007435	IdentifierDecl	btype = 0		5007421	0					
ANR	5007436	IdentifierDeclType	int		5007421	0					
ANR	5007437	Identifier	btype		5007421	1					
ANR	5007438	AssignmentExpression	btype = 0		5007421	2		=			
ANR	5007439	Identifier	btype		5007421	0					
ANR	5007440	PrimaryExpression	0		5007421	1					
ANR	5007441	IdentifierDeclStatement	RAnal * anal = ( RAnal * ) p ;	31:1:588:611	5007421	2	True				
ANR	5007442	IdentifierDecl	* anal = ( RAnal * ) p		5007421	0					
ANR	5007443	IdentifierDeclType	RAnal *		5007421	0					
ANR	5007444	Identifier	anal		5007421	1					
ANR	5007445	AssignmentExpression	* anal = ( RAnal * ) p		5007421	2		=			
ANR	5007446	Identifier	anal		5007421	0					
ANR	5007447	CastExpression	( RAnal * ) p		5007421	1					
ANR	5007448	CastTarget	RAnal *		5007421	0					
ANR	5007449	Identifier	p		5007421	1					
ANR	5007450	IfStatement	"if ( ! strncmp ( v , ""struct"" , 6 ) && strncmp ( k , ""struct."" , 7 ) )"		5007421	3					
ANR	5007451	Condition	"! strncmp ( v , ""struct"" , 6 ) && strncmp ( k , ""struct."" , 7 )"	34:5:686:739	5007421	0	True				
ANR	5007452	AndExpression	"! strncmp ( v , ""struct"" , 6 ) && strncmp ( k , ""struct."" , 7 )"		5007421	0		&&			
ANR	5007453	UnaryOperationExpression	"! strncmp ( v , ""struct"" , 6 )"		5007421	0					
ANR	5007454	UnaryOperator	!		5007421	0					
ANR	5007455	CallExpression	"strncmp ( v , ""struct"" , 6 )"		5007421	1					
ANR	5007456	Callee	strncmp		5007421	0					
ANR	5007457	Identifier	strncmp		5007421	0					
ANR	5007458	ArgumentList	v		5007421	1					
ANR	5007459	Argument	v		5007421	0					
ANR	5007460	Identifier	v		5007421	0					
ANR	5007461	Argument	"""struct"""		5007421	1					
ANR	5007462	PrimaryExpression	"""struct"""		5007421	0					
ANR	5007463	Argument	6		5007421	2					
ANR	5007464	PrimaryExpression	6		5007421	0					
ANR	5007465	CallExpression	"strncmp ( k , ""struct."" , 7 )"		5007421	1					
ANR	5007466	Callee	strncmp		5007421	0					
ANR	5007467	Identifier	strncmp		5007421	0					
ANR	5007468	ArgumentList	k		5007421	1					
ANR	5007469	Argument	k		5007421	0					
ANR	5007470	Identifier	k		5007421	0					
ANR	5007471	Argument	"""struct."""		5007421	1					
ANR	5007472	PrimaryExpression	"""struct."""		5007421	0					
ANR	5007473	Argument	7		5007421	2					
ANR	5007474	PrimaryExpression	7		5007421	0					
ANR	5007475	CompoundStatement		17:2:413:439	5007421	1					
ANR	5007476	ExpressionStatement	btype = VT_STRUCT	36:2:761:778	5007421	0	True				
ANR	5007477	AssignmentExpression	btype = VT_STRUCT		5007421	0		=			
ANR	5007478	Identifier	btype		5007421	0					
ANR	5007479	Identifier	VT_STRUCT		5007421	1					
ANR	5007480	IdentifierDeclStatement	const char * typename = k ;	37:2:782:806	5007421	1	True				
ANR	5007481	IdentifierDecl	* typename = k		5007421	0					
ANR	5007482	IdentifierDeclType	const char *		5007421	0					
ANR	5007483	Identifier	typename		5007421	1					
ANR	5007484	AssignmentExpression	* typename = k		5007421	2		=			
ANR	5007485	Identifier	k		5007421	0					
ANR	5007486	Identifier	k		5007421	1					
ANR	5007487	IdentifierDeclStatement	int typesize = 0 ;	38:2:810:826	5007421	2	True				
ANR	5007488	IdentifierDecl	typesize = 0		5007421	0					
ANR	5007489	IdentifierDeclType	int		5007421	0					
ANR	5007490	Identifier	typesize		5007421	1					
ANR	5007491	AssignmentExpression	typesize = 0		5007421	2		=			
ANR	5007492	Identifier	typesize		5007421	0					
ANR	5007493	PrimaryExpression	0		5007421	1					
ANR	5007494	IdentifierDeclStatement	"char * query = sdb_fmt ( ""struct.%s"" , k ) ;"	40:2:859:897	5007421	3	True				
ANR	5007495	IdentifierDecl	"* query = sdb_fmt ( ""struct.%s"" , k )"		5007421	0					
ANR	5007496	IdentifierDeclType	char *		5007421	0					
ANR	5007497	Identifier	query		5007421	1					
ANR	5007498	AssignmentExpression	"* query = sdb_fmt ( ""struct.%s"" , k )"		5007421	2		=			
ANR	5007499	Identifier	query		5007421	0					
ANR	5007500	CallExpression	"sdb_fmt ( ""struct.%s"" , k )"		5007421	1					
ANR	5007501	Callee	sdb_fmt		5007421	0					
ANR	5007502	Identifier	sdb_fmt		5007421	0					
ANR	5007503	ArgumentList	"""struct.%s"""		5007421	1					
ANR	5007504	Argument	"""struct.%s"""		5007421	0					
ANR	5007505	PrimaryExpression	"""struct.%s"""		5007421	0					
ANR	5007506	Argument	k		5007421	1					
ANR	5007507	Identifier	k		5007421	0					
ANR	5007508	IdentifierDeclStatement	"char * members = sdb_get ( anal -> sdb_types , query , 0 ) ;"	41:2:901:952	5007421	4	True				
ANR	5007509	IdentifierDecl	"* members = sdb_get ( anal -> sdb_types , query , 0 )"		5007421	0					
ANR	5007510	IdentifierDeclType	char *		5007421	0					
ANR	5007511	Identifier	members		5007421	1					
ANR	5007512	AssignmentExpression	"* members = sdb_get ( anal -> sdb_types , query , 0 )"		5007421	2		=			
ANR	5007513	Identifier	members		5007421	0					
ANR	5007514	CallExpression	"sdb_get ( anal -> sdb_types , query , 0 )"		5007421	1					
ANR	5007515	Callee	sdb_get		5007421	0					
ANR	5007516	Identifier	sdb_get		5007421	0					
ANR	5007517	ArgumentList	anal -> sdb_types		5007421	1					
ANR	5007518	Argument	anal -> sdb_types		5007421	0					
ANR	5007519	PtrMemberAccess	anal -> sdb_types		5007421	0					
ANR	5007520	Identifier	anal		5007421	0					
ANR	5007521	Identifier	sdb_types		5007421	1					
ANR	5007522	Argument	query		5007421	1					
ANR	5007523	Identifier	query		5007421	0					
ANR	5007524	Argument	0		5007421	2					
ANR	5007525	PrimaryExpression	0		5007421	0					
ANR	5007526	IdentifierDeclStatement	"char * next , * ptr = members ;"	42:2:956:982	5007421	5	True				
ANR	5007527	IdentifierDecl	* next		5007421	0					
ANR	5007528	IdentifierDeclType	char *		5007421	0					
ANR	5007529	Identifier	next		5007421	1					
ANR	5007530	IdentifierDecl	* ptr = members		5007421	1					
ANR	5007531	IdentifierDeclType	char *		5007421	0					
ANR	5007532	Identifier	ptr		5007421	1					
ANR	5007533	AssignmentExpression	* ptr = members		5007421	2		=			
ANR	5007534	Identifier	members		5007421	0					
ANR	5007535	Identifier	members		5007421	1					
ANR	5007536	IfStatement	if ( members )		5007421	6					
ANR	5007537	Condition	members	43:6:990:996	5007421	0	True				
ANR	5007538	Identifier	members		5007421	0					
ANR	5007539	CompoundStatement		18:15:456:456	5007421	1					
ANR	5007540	DoStatement	do		5007421	0					
ANR	5007541	CompoundStatement		29:4:688:721	5007421	0					
ANR	5007542	IdentifierDeclStatement	"char * name = sdb_anext ( ptr , & next ) ;"	45:4:1013:1048	5007421	0	True				
ANR	5007543	IdentifierDecl	"* name = sdb_anext ( ptr , & next )"		5007421	0					
ANR	5007544	IdentifierDeclType	char *		5007421	0					
ANR	5007545	Identifier	name		5007421	1					
ANR	5007546	AssignmentExpression	"* name = sdb_anext ( ptr , & next )"		5007421	2		=			
ANR	5007547	Identifier	name		5007421	0					
ANR	5007548	CallExpression	"sdb_anext ( ptr , & next )"		5007421	1					
ANR	5007549	Callee	sdb_anext		5007421	0					
ANR	5007550	Identifier	sdb_anext		5007421	0					
ANR	5007551	ArgumentList	ptr		5007421	1					
ANR	5007552	Argument	ptr		5007421	0					
ANR	5007553	Identifier	ptr		5007421	0					
ANR	5007554	Argument	& next		5007421	1					
ANR	5007555	UnaryOperationExpression	& next		5007421	0					
ANR	5007556	UnaryOperator	&		5007421	0					
ANR	5007557	Identifier	next		5007421	1					
ANR	5007558	IfStatement	if ( ! name )		5007421	1					
ANR	5007559	Condition	! name	46:8:1058:1062	5007421	0	True				
ANR	5007560	UnaryOperationExpression	! name		5007421	0					
ANR	5007561	UnaryOperator	!		5007421	0					
ANR	5007562	Identifier	name		5007421	1					
ANR	5007563	CompoundStatement		21:15:522:522	5007421	1					
ANR	5007564	BreakStatement	break ;	47:5:1072:1077	5007421	0	True				
ANR	5007565	ExpressionStatement	"query = sdb_fmt ( ""struct.%s.%s"" , k , name )"	49:4:1089:1130	5007421	2	True				
ANR	5007566	AssignmentExpression	"query = sdb_fmt ( ""struct.%s.%s"" , k , name )"		5007421	0		=			
ANR	5007567	Identifier	query		5007421	0					
ANR	5007568	CallExpression	"sdb_fmt ( ""struct.%s.%s"" , k , name )"		5007421	1					
ANR	5007569	Callee	sdb_fmt		5007421	0					
ANR	5007570	Identifier	sdb_fmt		5007421	0					
ANR	5007571	ArgumentList	"""struct.%s.%s"""		5007421	1					
ANR	5007572	Argument	"""struct.%s.%s"""		5007421	0					
ANR	5007573	PrimaryExpression	"""struct.%s.%s"""		5007421	0					
ANR	5007574	Argument	k		5007421	1					
ANR	5007575	Identifier	k		5007421	0					
ANR	5007576	Argument	name		5007421	2					
ANR	5007577	Identifier	name		5007421	0					
ANR	5007578	IdentifierDeclStatement	"char * subtype = sdb_get ( anal -> sdb_types , query , 0 ) ;"	50:4:1136:1187	5007421	3	True				
ANR	5007579	IdentifierDecl	"* subtype = sdb_get ( anal -> sdb_types , query , 0 )"		5007421	0					
ANR	5007580	IdentifierDeclType	char *		5007421	0					
ANR	5007581	Identifier	subtype		5007421	1					
ANR	5007582	AssignmentExpression	"* subtype = sdb_get ( anal -> sdb_types , query , 0 )"		5007421	2		=			
ANR	5007583	Identifier	subtype		5007421	0					
ANR	5007584	CallExpression	"sdb_get ( anal -> sdb_types , query , 0 )"		5007421	1					
ANR	5007585	Callee	sdb_get		5007421	0					
ANR	5007586	Identifier	sdb_get		5007421	0					
ANR	5007587	ArgumentList	anal -> sdb_types		5007421	1					
ANR	5007588	Argument	anal -> sdb_types		5007421	0					
ANR	5007589	PtrMemberAccess	anal -> sdb_types		5007421	0					
ANR	5007590	Identifier	anal		5007421	0					
ANR	5007591	Identifier	sdb_types		5007421	1					
ANR	5007592	Argument	query		5007421	1					
ANR	5007593	Identifier	query		5007421	0					
ANR	5007594	Argument	0		5007421	2					
ANR	5007595	PrimaryExpression	0		5007421	0					
ANR	5007596	IfStatement	if ( ! subtype )		5007421	4					
ANR	5007597	Condition	! subtype	51:8:1197:1204	5007421	0	True				
ANR	5007598	UnaryOperationExpression	! subtype		5007421	0					
ANR	5007599	UnaryOperator	!		5007421	0					
ANR	5007600	Identifier	subtype		5007421	1					
ANR	5007601	CompoundStatement		26:18:664:664	5007421	1					
ANR	5007602	BreakStatement	break ;	52:5:1214:1219	5007421	0	True				
ANR	5007603	IdentifierDeclStatement	"char * tmp = strchr ( subtype , ',' ) ;"	54:4:1231:1264	5007421	5	True				
ANR	5007604	IdentifierDecl	"* tmp = strchr ( subtype , ',' )"		5007421	0					
ANR	5007605	IdentifierDeclType	char *		5007421	0					
ANR	5007606	Identifier	tmp		5007421	1					
ANR	5007607	AssignmentExpression	"* tmp = strchr ( subtype , ',' )"		5007421	2		=			
ANR	5007608	Identifier	tmp		5007421	0					
ANR	5007609	CallExpression	"strchr ( subtype , ',' )"		5007421	1					
ANR	5007610	Callee	strchr		5007421	0					
ANR	5007611	Identifier	strchr		5007421	0					
ANR	5007612	ArgumentList	subtype		5007421	1					
ANR	5007613	Argument	subtype		5007421	0					
ANR	5007614	Identifier	subtype		5007421	0					
ANR	5007615	Argument	"','"		5007421	1					
ANR	5007616	PrimaryExpression	"','"		5007421	0					
ANR	5007617	IfStatement	if ( tmp )		5007421	6					
ANR	5007618	Condition	tmp	55:8:1274:1276	5007421	0	True				
ANR	5007619	Identifier	tmp		5007421	0					
ANR	5007620	CompoundStatement		36:5:831:850	5007421	1					
ANR	5007621	ExpressionStatement	* tmp ++ = 0	56:5:1286:1296	5007421	0	True				
ANR	5007622	AssignmentExpression	* tmp ++ = 0		5007421	0		=			
ANR	5007623	UnaryOperationExpression	* tmp ++		5007421	0					
ANR	5007624	UnaryOperator	*		5007421	0					
ANR	5007625	PostIncDecOperationExpression	tmp ++		5007421	1					
ANR	5007626	Identifier	tmp		5007421	0					
ANR	5007627	IncDec	++		5007421	1					
ANR	5007628	PrimaryExpression	0		5007421	1					
ANR	5007629	ExpressionStatement	"tmp = strchr ( tmp , ',' )"	57:5:1303:1326	5007421	1	True				
ANR	5007630	AssignmentExpression	"tmp = strchr ( tmp , ',' )"		5007421	0		=			
ANR	5007631	Identifier	tmp		5007421	0					
ANR	5007632	CallExpression	"strchr ( tmp , ',' )"		5007421	1					
ANR	5007633	Callee	strchr		5007421	0					
ANR	5007634	Identifier	strchr		5007421	0					
ANR	5007635	ArgumentList	tmp		5007421	1					
ANR	5007636	Argument	tmp		5007421	0					
ANR	5007637	Identifier	tmp		5007421	0					
ANR	5007638	Argument	"','"		5007421	1					
ANR	5007639	PrimaryExpression	"','"		5007421	0					
ANR	5007640	IfStatement	if ( tmp )		5007421	2					
ANR	5007641	Condition	tmp	58:9:1337:1339	5007421	0	True				
ANR	5007642	Identifier	tmp		5007421	0					
ANR	5007643	CompoundStatement		33:14:799:799	5007421	1					
ANR	5007644	ExpressionStatement	* tmp ++ = 0	59:6:1350:1360	5007421	0	True				
ANR	5007645	AssignmentExpression	* tmp ++ = 0		5007421	0		=			
ANR	5007646	UnaryOperationExpression	* tmp ++		5007421	0					
ANR	5007647	UnaryOperator	*		5007421	0					
ANR	5007648	PostIncDecOperationExpression	tmp ++		5007421	1					
ANR	5007649	Identifier	tmp		5007421	0					
ANR	5007650	IncDec	++		5007421	1					
ANR	5007651	PrimaryExpression	0		5007421	1					
ANR	5007652	IdentifierDeclStatement	char * subname = tmp ;	61:5:1374:1393	5007421	3	True				
ANR	5007653	IdentifierDecl	* subname = tmp		5007421	0					
ANR	5007654	IdentifierDeclType	char *		5007421	0					
ANR	5007655	Identifier	subname		5007421	1					
ANR	5007656	AssignmentExpression	* subname = tmp		5007421	2		=			
ANR	5007657	Identifier	tmp		5007421	0					
ANR	5007658	Identifier	tmp		5007421	1					
ANR	5007659	ExpressionStatement	"query = sdb_fmt ( ""struct.%s.%s.meta"" , subtype , subname )"	63:5:1430:1485	5007421	4	True				
ANR	5007660	AssignmentExpression	"query = sdb_fmt ( ""struct.%s.%s.meta"" , subtype , subname )"		5007421	0		=			
ANR	5007661	Identifier	query		5007421	0					
ANR	5007662	CallExpression	"sdb_fmt ( ""struct.%s.%s.meta"" , subtype , subname )"		5007421	1					
ANR	5007663	Callee	sdb_fmt		5007421	0					
ANR	5007664	Identifier	sdb_fmt		5007421	0					
ANR	5007665	ArgumentList	"""struct.%s.%s.meta"""		5007421	1					
ANR	5007666	Argument	"""struct.%s.%s.meta"""		5007421	0					
ANR	5007667	PrimaryExpression	"""struct.%s.%s.meta"""		5007421	0					
ANR	5007668	Argument	subtype		5007421	1					
ANR	5007669	Identifier	subtype		5007421	0					
ANR	5007670	Argument	subname		5007421	2					
ANR	5007671	Identifier	subname		5007421	0					
ANR	5007672	ExpressionStatement	"btype = sdb_num_get ( anal -> sdb_types , query , 0 )"	64:5:1492:1539	5007421	5	True				
ANR	5007673	AssignmentExpression	"btype = sdb_num_get ( anal -> sdb_types , query , 0 )"		5007421	0		=			
ANR	5007674	Identifier	btype		5007421	0					
ANR	5007675	CallExpression	"sdb_num_get ( anal -> sdb_types , query , 0 )"		5007421	1					
ANR	5007676	Callee	sdb_num_get		5007421	0					
ANR	5007677	Identifier	sdb_num_get		5007421	0					
ANR	5007678	ArgumentList	anal -> sdb_types		5007421	1					
ANR	5007679	Argument	anal -> sdb_types		5007421	0					
ANR	5007680	PtrMemberAccess	anal -> sdb_types		5007421	0					
ANR	5007681	Identifier	anal		5007421	0					
ANR	5007682	Identifier	sdb_types		5007421	1					
ANR	5007683	Argument	query		5007421	1					
ANR	5007684	Identifier	query		5007421	0					
ANR	5007685	Argument	0		5007421	2					
ANR	5007686	PrimaryExpression	0		5007421	0					
ANR	5007687	ExpressionStatement	"tcc_sym_push ( subtype , 0 , btype )"	65:5:1546:1578	5007421	6	True				
ANR	5007688	CallExpression	"tcc_sym_push ( subtype , 0 , btype )"		5007421	0					
ANR	5007689	Callee	tcc_sym_push		5007421	0					
ANR	5007690	Identifier	tcc_sym_push		5007421	0					
ANR	5007691	ArgumentList	subtype		5007421	1					
ANR	5007692	Argument	subtype		5007421	0					
ANR	5007693	Identifier	subtype		5007421	0					
ANR	5007694	Argument	0		5007421	1					
ANR	5007695	PrimaryExpression	0		5007421	0					
ANR	5007696	Argument	btype		5007421	2					
ANR	5007697	Identifier	btype		5007421	0					
ANR	5007698	ExpressionStatement	free ( subtype )	67:4:1590:1604	5007421	7	True				
ANR	5007699	CallExpression	free ( subtype )		5007421	0					
ANR	5007700	Callee	free		5007421	0					
ANR	5007701	Identifier	free		5007421	0					
ANR	5007702	ArgumentList	subtype		5007421	1					
ANR	5007703	Argument	subtype		5007421	0					
ANR	5007704	Identifier	subtype		5007421	0					
ANR	5007705	ExpressionStatement	ptr = next	68:4:1610:1620	5007421	8	True				
ANR	5007706	AssignmentExpression	ptr = next		5007421	0		=			
ANR	5007707	Identifier	ptr		5007421	0					
ANR	5007708	Identifier	next		5007421	1					
ANR	5007709	Condition	next	69:12:1634:1637	5007421	1	True				
ANR	5007710	Identifier	next		5007421	0					
ANR	5007711	ExpressionStatement	free ( members )	70:3:1644:1658	5007421	1	True				
ANR	5007712	CallExpression	free ( members )		5007421	0					
ANR	5007713	Callee	free		5007421	0					
ANR	5007714	Identifier	free		5007421	0					
ANR	5007715	ArgumentList	members		5007421	1					
ANR	5007716	Argument	members		5007421	0					
ANR	5007717	Identifier	members		5007421	0					
ANR	5007718	ExpressionStatement	"tcc_sym_push ( ( char * ) typename , typesize , btype )"	72:2:1666:1714	5007421	7	True				
ANR	5007719	CallExpression	"tcc_sym_push ( ( char * ) typename , typesize , btype )"		5007421	0					
ANR	5007720	Callee	tcc_sym_push		5007421	0					
ANR	5007721	Identifier	tcc_sym_push		5007421	0					
ANR	5007722	ArgumentList	( char * ) typename		5007421	1					
ANR	5007723	Argument	( char * ) typename		5007421	0					
ANR	5007724	CastExpression	( char * ) typename		5007421	0					
ANR	5007725	CastTarget	char *		5007421	0					
ANR	5007726	Identifier	typename		5007421	1					
ANR	5007727	Argument	typesize		5007421	1					
ANR	5007728	Identifier	typesize		5007421	0					
ANR	5007729	Argument	btype		5007421	2					
ANR	5007730	Identifier	btype		5007421	0					
ANR	5007731	ReturnStatement	return 0 ;	74:1:1720:1728	5007421	4	True				
ANR	5007732	PrimaryExpression	0		5007421	0					
ANR	5007733	ReturnType	static int		5007421	1					
ANR	5007734	Identifier	__typeLoad		5007421	2					
ANR	5007735	ParameterList	"void * p , const char * k , const char * v"		5007421	3					
ANR	5007736	Parameter	void * p	26:22:503:509	5007421	0	True				
ANR	5007737	ParameterType	void *		5007421	0					
ANR	5007738	Identifier	p		5007421	1					
ANR	5007739	Parameter	const char * k	26:31:512:524	5007421	1	True				
ANR	5007740	ParameterType	const char *		5007421	0					
ANR	5007741	Identifier	k		5007421	1					
ANR	5007742	Parameter	const char * v	26:46:527:539	5007421	2	True				
ANR	5007743	ParameterType	const char *		5007421	0					
ANR	5007744	Identifier	v		5007421	1					
ANR	5007745	CFGEntryNode	ENTRY		5007421		True				
ANR	5007746	CFGExitNode	EXIT		5007421		True				
ANR	5007747	Symbol	next		5007421						
ANR	5007748	Symbol	typesize		5007421						
ANR	5007749	Symbol	btype		5007421						
ANR	5007750	Symbol	strchr		5007421						
ANR	5007751	Symbol	VT_STRUCT		5007421						
ANR	5007752	Symbol	strncmp		5007421						
ANR	5007753	Symbol	* anal		5007421						
ANR	5007754	Symbol	subtype		5007421						
ANR	5007755	Symbol	tmp		5007421						
ANR	5007756	Symbol	members		5007421						
ANR	5007757	Symbol	sdb_fmt		5007421						
ANR	5007758	Symbol	sdb_num_get		5007421						
ANR	5007759	Symbol	* tmp ++		5007421						
ANR	5007760	Symbol	& next		5007421						
ANR	5007761	Symbol	query		5007421						
ANR	5007762	Symbol	subname		5007421						
ANR	5007763	Symbol	sdb_get		5007421						
ANR	5007764	Symbol	k		5007421						
ANR	5007765	Symbol	ptr		5007421						
ANR	5007766	Symbol	p		5007421						
ANR	5007767	Symbol	anal		5007421						
ANR	5007768	Symbol	v		5007421						
ANR	5007769	Symbol	name		5007421						
ANR	5007770	Symbol	sdb_anext		5007421						
ANR	5007771	Symbol	anal -> sdb_types		5007421						
ANR	5007772	Symbol	typename		5007421						
ANR	5007773	Function	__errorFunc	77:0:1733:2030							
ANR	5007774	FunctionDef	"__errorFunc (void * opaque , const char * msg)"		5007773	0					
ANR	5007775	CompoundStatement		77:55:1788:2030	5007773	0					
ANR	5007776	ExpressionStatement	"__appendString ( msg , opaque )"	78:1:1791:1819	5007773	0	True				
ANR	5007777	CallExpression	"__appendString ( msg , opaque )"		5007773	0					
ANR	5007778	Callee	__appendString		5007773	0					
ANR	5007779	Identifier	__appendString		5007773	0					
ANR	5007780	ArgumentList	msg		5007773	1					
ANR	5007781	Argument	msg		5007773	0					
ANR	5007782	Identifier	msg		5007773	0					
ANR	5007783	Argument	opaque		5007773	1					
ANR	5007784	Identifier	opaque		5007773	0					
ANR	5007785	IdentifierDeclStatement	char * * p = ( char * * ) opaque ;	79:1:1822:1848	5007773	1	True				
ANR	5007786	IdentifierDecl	* * p = ( char * * ) opaque		5007773	0					
ANR	5007787	IdentifierDeclType	char * *		5007773	0					
ANR	5007788	Identifier	p		5007773	1					
ANR	5007789	AssignmentExpression	* * p = ( char * * ) opaque		5007773	2		=			
ANR	5007790	Identifier	p		5007773	0					
ANR	5007791	CastExpression	( char * * ) opaque		5007773	1					
ANR	5007792	CastTarget	char * *		5007773	0					
ANR	5007793	Identifier	opaque		5007773	1					
ANR	5007794	IfStatement	if ( p && * p )		5007773	2					
ANR	5007795	Condition	p && * p	80:5:1855:1861	5007773	0	True				
ANR	5007796	AndExpression	p && * p		5007773	0		&&			
ANR	5007797	Identifier	p		5007773	0					
ANR	5007798	UnaryOperationExpression	* p		5007773	1					
ANR	5007799	UnaryOperator	*		5007773	0					
ANR	5007800	Identifier	p		5007773	1					
ANR	5007801	CompoundStatement		6:2:101:127	5007773	1					
ANR	5007802	IdentifierDeclStatement	int n = strlen ( * p ) ;	81:2:1868:1886	5007773	0	True				
ANR	5007803	IdentifierDecl	n = strlen ( * p )		5007773	0					
ANR	5007804	IdentifierDeclType	int		5007773	0					
ANR	5007805	Identifier	n		5007773	1					
ANR	5007806	AssignmentExpression	n = strlen ( * p )		5007773	2		=			
ANR	5007807	Identifier	n		5007773	0					
ANR	5007808	CallExpression	strlen ( * p )		5007773	1					
ANR	5007809	Callee	strlen		5007773	0					
ANR	5007810	Identifier	strlen		5007773	0					
ANR	5007811	ArgumentList	* p		5007773	1					
ANR	5007812	Argument	* p		5007773	0					
ANR	5007813	UnaryOperationExpression	* p		5007773	0					
ANR	5007814	UnaryOperator	*		5007773	0					
ANR	5007815	Identifier	p		5007773	1					
ANR	5007816	IdentifierDeclStatement	char * ptr = malloc ( n + 2 ) ;	82:2:1890:1916	5007773	1	True				
ANR	5007817	IdentifierDecl	* ptr = malloc ( n + 2 )		5007773	0					
ANR	5007818	IdentifierDeclType	char *		5007773	0					
ANR	5007819	Identifier	ptr		5007773	1					
ANR	5007820	AssignmentExpression	* ptr = malloc ( n + 2 )		5007773	2		=			
ANR	5007821	Identifier	ptr		5007773	0					
ANR	5007822	CallExpression	malloc ( n + 2 )		5007773	1					
ANR	5007823	Callee	malloc		5007773	0					
ANR	5007824	Identifier	malloc		5007773	0					
ANR	5007825	ArgumentList	n + 2		5007773	1					
ANR	5007826	Argument	n + 2		5007773	0					
ANR	5007827	AdditiveExpression	n + 2		5007773	0		+			
ANR	5007828	Identifier	n		5007773	0					
ANR	5007829	PrimaryExpression	2		5007773	1					
ANR	5007830	IfStatement	if ( ! ptr )		5007773	2					
ANR	5007831	Condition	! ptr	83:6:1924:1927	5007773	0	True				
ANR	5007832	UnaryOperationExpression	! ptr		5007773	0					
ANR	5007833	UnaryOperator	!		5007773	0					
ANR	5007834	Identifier	ptr		5007773	1					
ANR	5007835	CompoundStatement		7:12:141:141	5007773	1					
ANR	5007836	ReturnStatement	return ;	84:3:1935:1941	5007773	0	True				
ANR	5007837	ExpressionStatement	"strcpy ( ptr , * p )"	86:2:1949:1965	5007773	3	True				
ANR	5007838	CallExpression	"strcpy ( ptr , * p )"		5007773	0					
ANR	5007839	Callee	strcpy		5007773	0					
ANR	5007840	Identifier	strcpy		5007773	0					
ANR	5007841	ArgumentList	ptr		5007773	1					
ANR	5007842	Argument	ptr		5007773	0					
ANR	5007843	Identifier	ptr		5007773	0					
ANR	5007844	Argument	* p		5007773	1					
ANR	5007845	UnaryOperationExpression	* p		5007773	0					
ANR	5007846	UnaryOperator	*		5007773	0					
ANR	5007847	Identifier	p		5007773	1					
ANR	5007848	ExpressionStatement	ptr [ n ] = '\\n'	87:2:1969:1982	5007773	4	True				
ANR	5007849	AssignmentExpression	ptr [ n ] = '\\n'		5007773	0		=			
ANR	5007850	ArrayIndexing	ptr [ n ]		5007773	0					
ANR	5007851	Identifier	ptr		5007773	0					
ANR	5007852	Identifier	n		5007773	1					
ANR	5007853	PrimaryExpression	'\\n'		5007773	1					
ANR	5007854	ExpressionStatement	ptr [ n + 1 ] = 0	88:2:1986:2000	5007773	5	True				
ANR	5007855	AssignmentExpression	ptr [ n + 1 ] = 0		5007773	0		=			
ANR	5007856	ArrayIndexing	ptr [ n + 1 ]		5007773	0					
ANR	5007857	Identifier	ptr		5007773	0					
ANR	5007858	AdditiveExpression	n + 1		5007773	1		+			
ANR	5007859	Identifier	n		5007773	0					
ANR	5007860	PrimaryExpression	1		5007773	1					
ANR	5007861	PrimaryExpression	0		5007773	1					
ANR	5007862	ExpressionStatement	free ( * p )	89:2:2004:2013	5007773	6	True				
ANR	5007863	CallExpression	free ( * p )		5007773	0					
ANR	5007864	Callee	free		5007773	0					
ANR	5007865	Identifier	free		5007773	0					
ANR	5007866	ArgumentList	* p		5007773	1					
ANR	5007867	Argument	* p		5007773	0					
ANR	5007868	UnaryOperationExpression	* p		5007773	0					
ANR	5007869	UnaryOperator	*		5007773	0					
ANR	5007870	Identifier	p		5007773	1					
ANR	5007871	ExpressionStatement	* p = ptr	90:2:2017:2025	5007773	7	True				
ANR	5007872	AssignmentExpression	* p = ptr		5007773	0		=			
ANR	5007873	UnaryOperationExpression	* p		5007773	0					
ANR	5007874	UnaryOperator	*		5007773	0					
ANR	5007875	Identifier	p		5007773	1					
ANR	5007876	Identifier	ptr		5007773	1					
ANR	5007877	ReturnType	static void		5007773	1					
ANR	5007878	Identifier	__errorFunc		5007773	2					
ANR	5007879	ParameterList	"void * opaque , const char * msg"		5007773	3					
ANR	5007880	Parameter	void * opaque	77:24:1757:1768	5007773	0	True				
ANR	5007881	ParameterType	void *		5007773	0					
ANR	5007882	Identifier	opaque		5007773	1					
ANR	5007883	Parameter	const char * msg	77:38:1771:1785	5007773	1	True				
ANR	5007884	ParameterType	const char *		5007773	0					
ANR	5007885	Identifier	msg		5007773	1					
ANR	5007886	CFGEntryNode	ENTRY		5007773		True				
ANR	5007887	CFGExitNode	EXIT		5007773		True				
ANR	5007888	Symbol	msg		5007773						
ANR	5007889	Symbol	p		5007773						
ANR	5007890	Symbol	strlen		5007773						
ANR	5007891	Symbol	malloc		5007773						
ANR	5007892	Symbol	opaque		5007773						
ANR	5007893	Symbol	* ptr		5007773						
ANR	5007894	Symbol	* n		5007773						
ANR	5007895	Symbol	* p		5007773						
ANR	5007896	Symbol	n		5007773						
ANR	5007897	Symbol	ptr		5007773						
ANR	5007898	Function	r_parse_c_file	94:0:2033:2490							
ANR	5007899	FunctionDef	"r_parse_c_file (RAnal * anal , const char * path , const char * dir , char * * error_msg)"		5007898	0					
ANR	5007900	CompoundStatement		94:93:2126:2490	5007898	0					
ANR	5007901	IdentifierDeclStatement	char * str = NULL ;	95:1:2129:2145	5007898	0	True				
ANR	5007902	IdentifierDecl	* str = NULL		5007898	0					
ANR	5007903	IdentifierDeclType	char *		5007898	0					
ANR	5007904	Identifier	str		5007898	1					
ANR	5007905	AssignmentExpression	* str = NULL		5007898	2		=			
ANR	5007906	Identifier	NULL		5007898	0					
ANR	5007907	Identifier	NULL		5007898	1					
ANR	5007908	IdentifierDeclStatement	"TCCState * T = tcc_new ( anal -> cpu , anal -> bits , anal -> os ) ;"	96:1:2148:2203	5007898	1	True				
ANR	5007909	IdentifierDecl	"* T = tcc_new ( anal -> cpu , anal -> bits , anal -> os )"		5007898	0					
ANR	5007910	IdentifierDeclType	TCCState *		5007898	0					
ANR	5007911	Identifier	T		5007898	1					
ANR	5007912	AssignmentExpression	"* T = tcc_new ( anal -> cpu , anal -> bits , anal -> os )"		5007898	2		=			
ANR	5007913	Identifier	T		5007898	0					
ANR	5007914	CallExpression	"tcc_new ( anal -> cpu , anal -> bits , anal -> os )"		5007898	1					
ANR	5007915	Callee	tcc_new		5007898	0					
ANR	5007916	Identifier	tcc_new		5007898	0					
ANR	5007917	ArgumentList	anal -> cpu		5007898	1					
ANR	5007918	Argument	anal -> cpu		5007898	0					
ANR	5007919	PtrMemberAccess	anal -> cpu		5007898	0					
ANR	5007920	Identifier	anal		5007898	0					
ANR	5007921	Identifier	cpu		5007898	1					
ANR	5007922	Argument	anal -> bits		5007898	1					
ANR	5007923	PtrMemberAccess	anal -> bits		5007898	0					
ANR	5007924	Identifier	anal		5007898	0					
ANR	5007925	Identifier	bits		5007898	1					
ANR	5007926	Argument	anal -> os		5007898	2					
ANR	5007927	PtrMemberAccess	anal -> os		5007898	0					
ANR	5007928	Identifier	anal		5007898	0					
ANR	5007929	Identifier	os		5007898	1					
ANR	5007930	IfStatement	if ( ! T )		5007898	2					
ANR	5007931	Condition	! T	97:5:2210:2211	5007898	0	True				
ANR	5007932	UnaryOperationExpression	! T		5007898	0					
ANR	5007933	UnaryOperator	!		5007898	0					
ANR	5007934	Identifier	T		5007898	1					
ANR	5007935	CompoundStatement		4:9:87:87	5007898	1					
ANR	5007936	ReturnStatement	return NULL ;	98:2:2218:2229	5007898	0	True				
ANR	5007937	Identifier	NULL		5007898	0					
ANR	5007938	ExpressionStatement	"tcc_set_callback ( T , & __appendString , & str )"	100:1:2235:2278	5007898	3	True				
ANR	5007939	CallExpression	"tcc_set_callback ( T , & __appendString , & str )"		5007898	0					
ANR	5007940	Callee	tcc_set_callback		5007898	0					
ANR	5007941	Identifier	tcc_set_callback		5007898	0					
ANR	5007942	ArgumentList	T		5007898	1					
ANR	5007943	Argument	T		5007898	0					
ANR	5007944	Identifier	T		5007898	0					
ANR	5007945	Argument	& __appendString		5007898	1					
ANR	5007946	UnaryOperationExpression	& __appendString		5007898	0					
ANR	5007947	UnaryOperator	&		5007898	0					
ANR	5007948	Identifier	__appendString		5007898	1					
ANR	5007949	Argument	& str		5007898	2					
ANR	5007950	UnaryOperationExpression	& str		5007898	0					
ANR	5007951	UnaryOperator	&		5007898	0					
ANR	5007952	Identifier	str		5007898	1					
ANR	5007953	ExpressionStatement	"tcc_set_error_func ( T , ( void * ) error_msg , __errorFunc )"	101:1:2281:2335	5007898	4	True				
ANR	5007954	CallExpression	"tcc_set_error_func ( T , ( void * ) error_msg , __errorFunc )"		5007898	0					
ANR	5007955	Callee	tcc_set_error_func		5007898	0					
ANR	5007956	Identifier	tcc_set_error_func		5007898	0					
ANR	5007957	ArgumentList	T		5007898	1					
ANR	5007958	Argument	T		5007898	0					
ANR	5007959	Identifier	T		5007898	0					
ANR	5007960	Argument	( void * ) error_msg		5007898	1					
ANR	5007961	CastExpression	( void * ) error_msg		5007898	0					
ANR	5007962	CastTarget	void *		5007898	0					
ANR	5007963	Identifier	error_msg		5007898	1					
ANR	5007964	Argument	__errorFunc		5007898	2					
ANR	5007965	Identifier	__errorFunc		5007898	0					
ANR	5007966	ExpressionStatement	"sdb_foreach ( anal -> sdb_types , __typeLoad , anal )"	102:1:2338:2385	5007898	5	True				
ANR	5007967	CallExpression	"sdb_foreach ( anal -> sdb_types , __typeLoad , anal )"		5007898	0					
ANR	5007968	Callee	sdb_foreach		5007898	0					
ANR	5007969	Identifier	sdb_foreach		5007898	0					
ANR	5007970	ArgumentList	anal -> sdb_types		5007898	1					
ANR	5007971	Argument	anal -> sdb_types		5007898	0					
ANR	5007972	PtrMemberAccess	anal -> sdb_types		5007898	0					
ANR	5007973	Identifier	anal		5007898	0					
ANR	5007974	Identifier	sdb_types		5007898	1					
ANR	5007975	Argument	__typeLoad		5007898	1					
ANR	5007976	Identifier	__typeLoad		5007898	0					
ANR	5007977	Argument	anal		5007898	2					
ANR	5007978	Identifier	anal		5007898	0					
ANR	5007979	IfStatement	"if ( tcc_add_file ( T , path , dir ) == - 1 )"		5007898	6					
ANR	5007980	Condition	"tcc_add_file ( T , path , dir ) == - 1"	103:5:2392:2424	5007898	0	True				
ANR	5007981	EqualityExpression	"tcc_add_file ( T , path , dir ) == - 1"		5007898	0		==			
ANR	5007982	CallExpression	"tcc_add_file ( T , path , dir )"		5007898	0					
ANR	5007983	Callee	tcc_add_file		5007898	0					
ANR	5007984	Identifier	tcc_add_file		5007898	0					
ANR	5007985	ArgumentList	T		5007898	1					
ANR	5007986	Argument	T		5007898	0					
ANR	5007987	Identifier	T		5007898	0					
ANR	5007988	Argument	path		5007898	1					
ANR	5007989	Identifier	path		5007898	0					
ANR	5007990	Argument	dir		5007898	2					
ANR	5007991	Identifier	dir		5007898	0					
ANR	5007992	UnaryOperationExpression	- 1		5007898	1					
ANR	5007993	UnaryOperator	-		5007898	0					
ANR	5007994	PrimaryExpression	1		5007898	1					
ANR	5007995	CompoundStatement		10:40:300:300	5007898	1					
ANR	5007996	ExpressionStatement	free ( str )	104:2:2431:2441	5007898	0	True				
ANR	5007997	CallExpression	free ( str )		5007898	0					
ANR	5007998	Callee	free		5007898	0					
ANR	5007999	Identifier	free		5007898	0					
ANR	5008000	ArgumentList	str		5007898	1					
ANR	5008001	Argument	str		5007898	0					
ANR	5008002	Identifier	str		5007898	0					
ANR	5008003	ExpressionStatement	str = NULL	105:2:2445:2455	5007898	1	True				
ANR	5008004	AssignmentExpression	str = NULL		5007898	0		=			
ANR	5008005	Identifier	str		5007898	0					
ANR	5008006	Identifier	NULL		5007898	1					
ANR	5008007	ExpressionStatement	tcc_delete ( T )	107:1:2461:2475	5007898	7	True				
ANR	5008008	CallExpression	tcc_delete ( T )		5007898	0					
ANR	5008009	Callee	tcc_delete		5007898	0					
ANR	5008010	Identifier	tcc_delete		5007898	0					
ANR	5008011	ArgumentList	T		5007898	1					
ANR	5008012	Argument	T		5007898	0					
ANR	5008013	Identifier	T		5007898	0					
ANR	5008014	ReturnStatement	return str ;	108:1:2478:2488	5007898	8	True				
ANR	5008015	Identifier	str		5007898	0					
ANR	5008016	ReturnType	R_API char *		5007898	1					
ANR	5008017	Identifier	r_parse_c_file		5007898	2					
ANR	5008018	ParameterList	"RAnal * anal , const char * path , const char * dir , char * * error_msg"		5007898	3					
ANR	5008019	Parameter	RAnal * anal	94:27:2060:2070	5007898	0	True				
ANR	5008020	ParameterType	RAnal *		5007898	0					
ANR	5008021	Identifier	anal		5007898	1					
ANR	5008022	Parameter	const char * path	94:40:2073:2088	5007898	1	True				
ANR	5008023	ParameterType	const char *		5007898	0					
ANR	5008024	Identifier	path		5007898	1					
ANR	5008025	Parameter	const char * dir	94:58:2091:2105	5007898	2	True				
ANR	5008026	ParameterType	const char *		5007898	0					
ANR	5008027	Identifier	dir		5007898	1					
ANR	5008028	Parameter	char * * error_msg	94:75:2108:2123	5007898	3	True				
ANR	5008029	ParameterType	char * *		5007898	0					
ANR	5008030	Identifier	error_msg		5007898	1					
ANR	5008031	CFGEntryNode	ENTRY		5007898		True				
ANR	5008032	CFGExitNode	EXIT		5007898		True				
ANR	5008033	Symbol	error_msg		5007898						
ANR	5008034	Symbol	NULL		5007898						
ANR	5008035	Symbol	tcc_add_file		5007898						
ANR	5008036	Symbol	anal -> os		5007898						
ANR	5008037	Symbol	dir		5007898						
ANR	5008038	Symbol	& __appendString		5007898						
ANR	5008039	Symbol	anal -> bits		5007898						
ANR	5008040	Symbol	anal -> cpu		5007898						
ANR	5008041	Symbol	str		5007898						
ANR	5008042	Symbol	& str		5007898						
ANR	5008043	Symbol	path		5007898						
ANR	5008044	Symbol	__errorFunc		5007898						
ANR	5008045	Symbol	* anal		5007898						
ANR	5008046	Symbol	__typeLoad		5007898						
ANR	5008047	Symbol	T		5007898						
ANR	5008048	Symbol	anal		5007898						
ANR	5008049	Symbol	tcc_new		5007898						
ANR	5008050	Symbol	anal -> sdb_types		5007898						
ANR	5008051	Function	r_parse_c_string	111:0:2493:2935							
ANR	5008052	FunctionDef	"r_parse_c_string (RAnal * anal , const char * code , char * * error_msg)"		5008051	0					
ANR	5008053	CompoundStatement		111:78:2571:2935	5008051	0					
ANR	5008054	IdentifierDeclStatement	char * str = NULL ;	112:1:2574:2590	5008051	0	True				
ANR	5008055	IdentifierDecl	* str = NULL		5008051	0					
ANR	5008056	IdentifierDeclType	char *		5008051	0					
ANR	5008057	Identifier	str		5008051	1					
ANR	5008058	AssignmentExpression	* str = NULL		5008051	2		=			
ANR	5008059	Identifier	NULL		5008051	0					
ANR	5008060	Identifier	NULL		5008051	1					
ANR	5008061	IdentifierDeclStatement	"TCCState * T = tcc_new ( anal -> cpu , anal -> bits , anal -> os ) ;"	113:1:2593:2648	5008051	1	True				
ANR	5008062	IdentifierDecl	"* T = tcc_new ( anal -> cpu , anal -> bits , anal -> os )"		5008051	0					
ANR	5008063	IdentifierDeclType	TCCState *		5008051	0					
ANR	5008064	Identifier	T		5008051	1					
ANR	5008065	AssignmentExpression	"* T = tcc_new ( anal -> cpu , anal -> bits , anal -> os )"		5008051	2		=			
ANR	5008066	Identifier	T		5008051	0					
ANR	5008067	CallExpression	"tcc_new ( anal -> cpu , anal -> bits , anal -> os )"		5008051	1					
ANR	5008068	Callee	tcc_new		5008051	0					
ANR	5008069	Identifier	tcc_new		5008051	0					
ANR	5008070	ArgumentList	anal -> cpu		5008051	1					
ANR	5008071	Argument	anal -> cpu		5008051	0					
ANR	5008072	PtrMemberAccess	anal -> cpu		5008051	0					
ANR	5008073	Identifier	anal		5008051	0					
ANR	5008074	Identifier	cpu		5008051	1					
ANR	5008075	Argument	anal -> bits		5008051	1					
ANR	5008076	PtrMemberAccess	anal -> bits		5008051	0					
ANR	5008077	Identifier	anal		5008051	0					
ANR	5008078	Identifier	bits		5008051	1					
ANR	5008079	Argument	anal -> os		5008051	2					
ANR	5008080	PtrMemberAccess	anal -> os		5008051	0					
ANR	5008081	Identifier	anal		5008051	0					
ANR	5008082	Identifier	os		5008051	1					
ANR	5008083	IfStatement	if ( ! T )		5008051	2					
ANR	5008084	Condition	! T	114:5:2655:2656	5008051	0	True				
ANR	5008085	UnaryOperationExpression	! T		5008051	0					
ANR	5008086	UnaryOperator	!		5008051	0					
ANR	5008087	Identifier	T		5008051	1					
ANR	5008088	CompoundStatement		4:9:87:87	5008051	1					
ANR	5008089	ReturnStatement	return NULL ;	115:2:2663:2674	5008051	0	True				
ANR	5008090	Identifier	NULL		5008051	0					
ANR	5008091	ExpressionStatement	"tcc_set_callback ( T , & __appendString , & str )"	117:1:2680:2723	5008051	3	True				
ANR	5008092	CallExpression	"tcc_set_callback ( T , & __appendString , & str )"		5008051	0					
ANR	5008093	Callee	tcc_set_callback		5008051	0					
ANR	5008094	Identifier	tcc_set_callback		5008051	0					
ANR	5008095	ArgumentList	T		5008051	1					
ANR	5008096	Argument	T		5008051	0					
ANR	5008097	Identifier	T		5008051	0					
ANR	5008098	Argument	& __appendString		5008051	1					
ANR	5008099	UnaryOperationExpression	& __appendString		5008051	0					
ANR	5008100	UnaryOperator	&		5008051	0					
ANR	5008101	Identifier	__appendString		5008051	1					
ANR	5008102	Argument	& str		5008051	2					
ANR	5008103	UnaryOperationExpression	& str		5008051	0					
ANR	5008104	UnaryOperator	&		5008051	0					
ANR	5008105	Identifier	str		5008051	1					
ANR	5008106	ExpressionStatement	"tcc_set_error_func ( T , ( void * ) error_msg , __errorFunc )"	118:1:2726:2780	5008051	4	True				
ANR	5008107	CallExpression	"tcc_set_error_func ( T , ( void * ) error_msg , __errorFunc )"		5008051	0					
ANR	5008108	Callee	tcc_set_error_func		5008051	0					
ANR	5008109	Identifier	tcc_set_error_func		5008051	0					
ANR	5008110	ArgumentList	T		5008051	1					
ANR	5008111	Argument	T		5008051	0					
ANR	5008112	Identifier	T		5008051	0					
ANR	5008113	Argument	( void * ) error_msg		5008051	1					
ANR	5008114	CastExpression	( void * ) error_msg		5008051	0					
ANR	5008115	CastTarget	void *		5008051	0					
ANR	5008116	Identifier	error_msg		5008051	1					
ANR	5008117	Argument	__errorFunc		5008051	2					
ANR	5008118	Identifier	__errorFunc		5008051	0					
ANR	5008119	ExpressionStatement	"sdb_foreach ( anal -> sdb_types , __typeLoad , NULL )"	119:1:2783:2830	5008051	5	True				
ANR	5008120	CallExpression	"sdb_foreach ( anal -> sdb_types , __typeLoad , NULL )"		5008051	0					
ANR	5008121	Callee	sdb_foreach		5008051	0					
ANR	5008122	Identifier	sdb_foreach		5008051	0					
ANR	5008123	ArgumentList	anal -> sdb_types		5008051	1					
ANR	5008124	Argument	anal -> sdb_types		5008051	0					
ANR	5008125	PtrMemberAccess	anal -> sdb_types		5008051	0					
ANR	5008126	Identifier	anal		5008051	0					
ANR	5008127	Identifier	sdb_types		5008051	1					
ANR	5008128	Argument	__typeLoad		5008051	1					
ANR	5008129	Identifier	__typeLoad		5008051	0					
ANR	5008130	Argument	NULL		5008051	2					
ANR	5008131	Identifier	NULL		5008051	0					
ANR	5008132	IfStatement	"if ( tcc_compile_string ( T , code ) != 0 )"		5008051	6					
ANR	5008133	Condition	"tcc_compile_string ( T , code ) != 0"	120:5:2837:2869	5008051	0	True				
ANR	5008134	EqualityExpression	"tcc_compile_string ( T , code ) != 0"		5008051	0		!=			
ANR	5008135	CallExpression	"tcc_compile_string ( T , code )"		5008051	0					
ANR	5008136	Callee	tcc_compile_string		5008051	0					
ANR	5008137	Identifier	tcc_compile_string		5008051	0					
ANR	5008138	ArgumentList	T		5008051	1					
ANR	5008139	Argument	T		5008051	0					
ANR	5008140	Identifier	T		5008051	0					
ANR	5008141	Argument	code		5008051	1					
ANR	5008142	Identifier	code		5008051	0					
ANR	5008143	PrimaryExpression	0		5008051	1					
ANR	5008144	CompoundStatement		10:40:300:300	5008051	1					
ANR	5008145	ExpressionStatement	free ( str )	121:2:2876:2886	5008051	0	True				
ANR	5008146	CallExpression	free ( str )		5008051	0					
ANR	5008147	Callee	free		5008051	0					
ANR	5008148	Identifier	free		5008051	0					
ANR	5008149	ArgumentList	str		5008051	1					
ANR	5008150	Argument	str		5008051	0					
ANR	5008151	Identifier	str		5008051	0					
ANR	5008152	ExpressionStatement	str = NULL	122:2:2890:2900	5008051	1	True				
ANR	5008153	AssignmentExpression	str = NULL		5008051	0		=			
ANR	5008154	Identifier	str		5008051	0					
ANR	5008155	Identifier	NULL		5008051	1					
ANR	5008156	ExpressionStatement	tcc_delete ( T )	124:1:2906:2920	5008051	7	True				
ANR	5008157	CallExpression	tcc_delete ( T )		5008051	0					
ANR	5008158	Callee	tcc_delete		5008051	0					
ANR	5008159	Identifier	tcc_delete		5008051	0					
ANR	5008160	ArgumentList	T		5008051	1					
ANR	5008161	Argument	T		5008051	0					
ANR	5008162	Identifier	T		5008051	0					
ANR	5008163	ReturnStatement	return str ;	125:1:2923:2933	5008051	8	True				
ANR	5008164	Identifier	str		5008051	0					
ANR	5008165	ReturnType	R_API char *		5008051	1					
ANR	5008166	Identifier	r_parse_c_string		5008051	2					
ANR	5008167	ParameterList	"RAnal * anal , const char * code , char * * error_msg"		5008051	3					
ANR	5008168	Parameter	RAnal * anal	111:29:2522:2532	5008051	0	True				
ANR	5008169	ParameterType	RAnal *		5008051	0					
ANR	5008170	Identifier	anal		5008051	1					
ANR	5008171	Parameter	const char * code	111:42:2535:2550	5008051	1	True				
ANR	5008172	ParameterType	const char *		5008051	0					
ANR	5008173	Identifier	code		5008051	1					
ANR	5008174	Parameter	char * * error_msg	111:60:2553:2568	5008051	2	True				
ANR	5008175	ParameterType	char * *		5008051	0					
ANR	5008176	Identifier	error_msg		5008051	1					
ANR	5008177	CFGEntryNode	ENTRY		5008051		True				
ANR	5008178	CFGExitNode	EXIT		5008051		True				
ANR	5008179	Symbol	code		5008051						
ANR	5008180	Symbol	error_msg		5008051						
ANR	5008181	Symbol	NULL		5008051						
ANR	5008182	Symbol	tcc_compile_string		5008051						
ANR	5008183	Symbol	anal -> os		5008051						
ANR	5008184	Symbol	& __appendString		5008051						
ANR	5008185	Symbol	anal -> bits		5008051						
ANR	5008186	Symbol	anal -> cpu		5008051						
ANR	5008187	Symbol	str		5008051						
ANR	5008188	Symbol	& str		5008051						
ANR	5008189	Symbol	__errorFunc		5008051						
ANR	5008190	Symbol	* anal		5008051						
ANR	5008191	Symbol	__typeLoad		5008051						
ANR	5008192	Symbol	T		5008051						
ANR	5008193	Symbol	anal		5008051						
ANR	5008194	Symbol	tcc_new		5008051						
ANR	5008195	Symbol	anal -> sdb_types		5008051						
ANR	5008196	Function	r_parse_c_reset	129:0:2964:3032							
ANR	5008197	FunctionDef	r_parse_c_reset (RParse * p)		5008196	0					
ANR	5008198	CompoundStatement		129:38:3002:3032	5008196	0					
ANR	5008199	ExpressionStatement	anon_sym = SYM_FIRST_ANOM	130:1:3005:3030	5008196	0	True				
ANR	5008200	AssignmentExpression	anon_sym = SYM_FIRST_ANOM		5008196	0		=			
ANR	5008201	Identifier	anon_sym		5008196	0					
ANR	5008202	Identifier	SYM_FIRST_ANOM		5008196	1					
ANR	5008203	ReturnType	R_API void		5008196	1					
ANR	5008204	Identifier	r_parse_c_reset		5008196	2					
ANR	5008205	ParameterList	RParse * p		5008196	3					
ANR	5008206	Parameter	RParse * p	129:27:2991:2999	5008196	0	True				
ANR	5008207	ParameterType	RParse *		5008196	0					
ANR	5008208	Identifier	p		5008196	1					
ANR	5008209	CFGEntryNode	ENTRY		5008196		True				
ANR	5008210	CFGExitNode	EXIT		5008196		True				
ANR	5008211	Symbol	p		5008196						
ANR	5008212	Symbol	anon_sym		5008196						
ANR	5008213	Symbol	SYM_FIRST_ANOM		5008196						
