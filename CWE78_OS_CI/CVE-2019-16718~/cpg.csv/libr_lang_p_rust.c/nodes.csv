command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4935854	File	data/converged/CVE-2019-16718~_radare2/libr_lang_p_rust.c								
ANR	4935855	Function	lang_rust_file	7:0:111:1484							
ANR	4935856	FunctionDef	"lang_rust_file (RLang * lang , const char * file)"		4935855	0					
ANR	4935857	CompoundStatement		7:57:168:1484	4935855	0					
ANR	4935858	IdentifierDeclStatement	void * lib ;	8:1:171:180	4935855	0	True				
ANR	4935859	IdentifierDecl	* lib		4935855	0					
ANR	4935860	IdentifierDeclType	void *		4935855	0					
ANR	4935861	Identifier	lib		4935855	1					
ANR	4935862	IdentifierDeclStatement	"char * a , * cc , * p , name [ 512 ] ;"	9:1:183:210	4935855	1	True				
ANR	4935863	IdentifierDecl	* a		4935855	0					
ANR	4935864	IdentifierDeclType	char *		4935855	0					
ANR	4935865	Identifier	a		4935855	1					
ANR	4935866	IdentifierDecl	* cc		4935855	1					
ANR	4935867	IdentifierDeclType	char *		4935855	0					
ANR	4935868	Identifier	cc		4935855	1					
ANR	4935869	IdentifierDecl	* p		4935855	2					
ANR	4935870	IdentifierDeclType	char *		4935855	0					
ANR	4935871	Identifier	p		4935855	1					
ANR	4935872	IdentifierDecl	name [ 512 ]		4935855	3					
ANR	4935873	IdentifierDeclType	char [ 512 ]		4935855	0					
ANR	4935874	Identifier	name		4935855	1					
ANR	4935875	PrimaryExpression	512		4935855	2					
ANR	4935876	IdentifierDeclStatement	"const char * libpath , * libname ;"	10:1:213:242	4935855	2	True				
ANR	4935877	IdentifierDecl	* libpath		4935855	0					
ANR	4935878	IdentifierDeclType	const char *		4935855	0					
ANR	4935879	Identifier	libpath		4935855	1					
ANR	4935880	IdentifierDecl	* libname		4935855	1					
ANR	4935881	IdentifierDeclType	const char *		4935855	0					
ANR	4935882	Identifier	libname		4935855	1					
ANR	4935883	IfStatement	if ( strlen ( file ) > ( sizeof ( name ) - 10 ) )		4935855	3					
ANR	4935884	Condition	strlen ( file ) > ( sizeof ( name ) - 10 )	12:5:250:285	4935855	0	True				
ANR	4935885	RelationalExpression	strlen ( file ) > ( sizeof ( name ) - 10 )		4935855	0		>			
ANR	4935886	CallExpression	strlen ( file )		4935855	0					
ANR	4935887	Callee	strlen		4935855	0					
ANR	4935888	Identifier	strlen		4935855	0					
ANR	4935889	ArgumentList	file		4935855	1					
ANR	4935890	Argument	file		4935855	0					
ANR	4935891	Identifier	file		4935855	0					
ANR	4935892	AdditiveExpression	sizeof ( name ) - 10		4935855	1		-			
ANR	4935893	SizeofExpression	sizeof ( name )		4935855	0					
ANR	4935894	Sizeof	sizeof		4935855	0					
ANR	4935895	SizeofOperand	name		4935855	1					
ANR	4935896	PrimaryExpression	10		4935855	1					
ANR	4935897	CompoundStatement		6:43:119:119	4935855	1					
ANR	4935898	ReturnStatement	return false ;	13:2:292:304	4935855	0	True				
ANR	4935899	Identifier	false		4935855	0					
ANR	4935900	IfStatement	"if ( ! strstr ( file , "".rs"" ) )"		4935855	4					
ANR	4935901	Condition	"! strstr ( file , "".rs"" )"	15:5:314:334	4935855	0	True				
ANR	4935902	UnaryOperationExpression	"! strstr ( file , "".rs"" )"		4935855	0					
ANR	4935903	UnaryOperator	!		4935855	0					
ANR	4935904	CallExpression	"strstr ( file , "".rs"" )"		4935855	1					
ANR	4935905	Callee	strstr		4935855	0					
ANR	4935906	Identifier	strstr		4935855	0					
ANR	4935907	ArgumentList	file		4935855	1					
ANR	4935908	Argument	file		4935855	0					
ANR	4935909	Identifier	file		4935855	0					
ANR	4935910	Argument	""".rs"""		4935855	1					
ANR	4935911	PrimaryExpression	""".rs"""		4935855	0					
ANR	4935912	CompoundStatement		9:28:168:168	4935855	1					
ANR	4935913	ExpressionStatement	"sprintf ( name , ""%s.rs"" , file )"	16:2:341:370	4935855	0	True				
ANR	4935914	CallExpression	"sprintf ( name , ""%s.rs"" , file )"		4935855	0					
ANR	4935915	Callee	sprintf		4935855	0					
ANR	4935916	Identifier	sprintf		4935855	0					
ANR	4935917	ArgumentList	name		4935855	1					
ANR	4935918	Argument	name		4935855	0					
ANR	4935919	Identifier	name		4935855	0					
ANR	4935920	Argument	"""%s.rs"""		4935855	1					
ANR	4935921	PrimaryExpression	"""%s.rs"""		4935855	0					
ANR	4935922	Argument	file		4935855	2					
ANR	4935923	Identifier	file		4935855	0					
ANR	4935924	ElseStatement	else		4935855	0					
ANR	4935925	CompoundStatement		11:8:211:211	4935855	0					
ANR	4935926	ExpressionStatement	"strcpy ( name , file )"	18:2:384:403	4935855	0	True				
ANR	4935927	CallExpression	"strcpy ( name , file )"		4935855	0					
ANR	4935928	Callee	strcpy		4935855	0					
ANR	4935929	Identifier	strcpy		4935855	0					
ANR	4935930	ArgumentList	name		4935855	1					
ANR	4935931	Argument	name		4935855	0					
ANR	4935932	Identifier	name		4935855	0					
ANR	4935933	Argument	file		4935855	1					
ANR	4935934	Identifier	file		4935855	0					
ANR	4935935	IfStatement	if ( ! r_file_exists ( name ) )		4935855	5					
ANR	4935936	Condition	! r_file_exists ( name )	20:5:413:433	4935855	0	True				
ANR	4935937	UnaryOperationExpression	! r_file_exists ( name )		4935855	0					
ANR	4935938	UnaryOperator	!		4935855	0					
ANR	4935939	CallExpression	r_file_exists ( name )		4935855	1					
ANR	4935940	Callee	r_file_exists		4935855	0					
ANR	4935941	Identifier	r_file_exists		4935855	0					
ANR	4935942	ArgumentList	name		4935855	1					
ANR	4935943	Argument	name		4935855	0					
ANR	4935944	Identifier	name		4935855	0					
ANR	4935945	CompoundStatement		14:28:267:267	4935855	1					
ANR	4935946	ExpressionStatement	"eprintf ( ""file not found (%s)\\n"" , name )"	21:2:440:479	4935855	0	True				
ANR	4935947	CallExpression	"eprintf ( ""file not found (%s)\\n"" , name )"		4935855	0					
ANR	4935948	Callee	eprintf		4935855	0					
ANR	4935949	Identifier	eprintf		4935855	0					
ANR	4935950	ArgumentList	"""file not found (%s)\\n"""		4935855	1					
ANR	4935951	Argument	"""file not found (%s)\\n"""		4935855	0					
ANR	4935952	PrimaryExpression	"""file not found (%s)\\n"""		4935855	0					
ANR	4935953	Argument	name		4935855	1					
ANR	4935954	Identifier	name		4935855	0					
ANR	4935955	ReturnStatement	return false ;	22:2:483:495	4935855	1	True				
ANR	4935956	Identifier	false		4935855	0					
ANR	4935957	ExpressionStatement	"a = ( char * ) r_str_lchr ( name , '/' )"	25:1:502:535	4935855	6	True				
ANR	4935958	AssignmentExpression	"a = ( char * ) r_str_lchr ( name , '/' )"		4935855	0		=			
ANR	4935959	Identifier	a		4935855	0					
ANR	4935960	CastExpression	"( char * ) r_str_lchr ( name , '/' )"		4935855	1					
ANR	4935961	CastTarget	char *		4935855	0					
ANR	4935962	CallExpression	"r_str_lchr ( name , '/' )"		4935855	1					
ANR	4935963	Callee	r_str_lchr		4935855	0					
ANR	4935964	Identifier	r_str_lchr		4935855	0					
ANR	4935965	ArgumentList	name		4935855	1					
ANR	4935966	Argument	name		4935855	0					
ANR	4935967	Identifier	name		4935855	0					
ANR	4935968	Argument	'/'		4935855	1					
ANR	4935969	PrimaryExpression	'/'		4935855	0					
ANR	4935970	IfStatement	if ( a )		4935855	7					
ANR	4935971	Condition	a	26:5:542:542	4935855	0	True				
ANR	4935972	Identifier	a		4935855	0					
ANR	4935973	CompoundStatement		20:8:376:376	4935855	1					
ANR	4935974	ExpressionStatement	* a = 0	27:2:549:555	4935855	0	True				
ANR	4935975	AssignmentExpression	* a = 0		4935855	0		=			
ANR	4935976	UnaryOperationExpression	* a		4935855	0					
ANR	4935977	UnaryOperator	*		4935855	0					
ANR	4935978	Identifier	a		4935855	1					
ANR	4935979	PrimaryExpression	0		4935855	1					
ANR	4935980	ExpressionStatement	libpath = name	28:2:559:573	4935855	1	True				
ANR	4935981	AssignmentExpression	libpath = name		4935855	0		=			
ANR	4935982	Identifier	libpath		4935855	0					
ANR	4935983	Identifier	name		4935855	1					
ANR	4935984	ExpressionStatement	libname = a + 1	29:2:577:590	4935855	2	True				
ANR	4935985	AssignmentExpression	libname = a + 1		4935855	0		=			
ANR	4935986	Identifier	libname		4935855	0					
ANR	4935987	AdditiveExpression	a + 1		4935855	1		+			
ANR	4935988	Identifier	a		4935855	0					
ANR	4935989	PrimaryExpression	1		4935855	1					
ANR	4935990	ElseStatement	else		4935855	0					
ANR	4935991	CompoundStatement		24:8:431:431	4935855	0					
ANR	4935992	ExpressionStatement	"libpath = ""."""	31:2:604:617	4935855	0	True				
ANR	4935993	AssignmentExpression	"libpath = ""."""		4935855	0		=			
ANR	4935994	Identifier	libpath		4935855	0					
ANR	4935995	PrimaryExpression	"""."""		4935855	1					
ANR	4935996	ExpressionStatement	libname = name	32:2:621:635	4935855	1	True				
ANR	4935997	AssignmentExpression	libname = name		4935855	0		=			
ANR	4935998	Identifier	libname		4935855	0					
ANR	4935999	Identifier	name		4935855	1					
ANR	4936000	Statement	r_sys_setenv	34:1:641:652	4935855	8	True				
ANR	4936001	Statement	(	34:14:654:654	4935855	9	True				
ANR	4936002	Statement	"""PKG_CONFIG_PATH"""	34:15:655:671	4935855	10	True				
ANR	4936003	Statement	","	34:32:672:672	4935855	11	True				
ANR	4936004	Statement	R2_LIBDIR	34:34:674:682	4935855	12	True				
ANR	4936005	Statement	"""/pkgconfig"""	34:43:683:694	4935855	13	True				
ANR	4936006	Statement	)	34:55:695:695	4935855	14	True				
ANR	4936007	ExpressionStatement		34:56:696:696	4935855	15	True				
ANR	4936008	ExpressionStatement	"p = strstr ( name , "".rs"" )"	35:1:699:723	4935855	16	True				
ANR	4936009	AssignmentExpression	"p = strstr ( name , "".rs"" )"		4935855	0		=			
ANR	4936010	Identifier	p		4935855	0					
ANR	4936011	CallExpression	"strstr ( name , "".rs"" )"		4935855	1					
ANR	4936012	Callee	strstr		4935855	0					
ANR	4936013	Identifier	strstr		4935855	0					
ANR	4936014	ArgumentList	name		4935855	1					
ANR	4936015	Argument	name		4935855	0					
ANR	4936016	Identifier	name		4935855	0					
ANR	4936017	Argument	""".rs"""		4935855	1					
ANR	4936018	PrimaryExpression	""".rs"""		4935855	0					
ANR	4936019	IfStatement	if ( p )		4935855	17					
ANR	4936020	Condition	p	35:31:729:729	4935855	0	True				
ANR	4936021	Identifier	p		4935855	0					
ANR	4936022	ExpressionStatement	* p = 0	35:34:732:736	4935855	1	True				
ANR	4936023	AssignmentExpression	* p = 0		4935855	0		=			
ANR	4936024	UnaryOperationExpression	* p		4935855	0					
ANR	4936025	UnaryOperator	*		4935855	0					
ANR	4936026	Identifier	p		4935855	1					
ANR	4936027	PrimaryExpression	0		4935855	1					
ANR	4936028	ExpressionStatement	"cc = r_sys_getenv ( ""RUSTC"" )"	36:1:739:766	4935855	18	True				
ANR	4936029	AssignmentExpression	"cc = r_sys_getenv ( ""RUSTC"" )"		4935855	0		=			
ANR	4936030	Identifier	cc		4935855	0					
ANR	4936031	CallExpression	"r_sys_getenv ( ""RUSTC"" )"		4935855	1					
ANR	4936032	Callee	r_sys_getenv		4935855	0					
ANR	4936033	Identifier	r_sys_getenv		4935855	0					
ANR	4936034	ArgumentList	"""RUSTC"""		4935855	1					
ANR	4936035	Argument	"""RUSTC"""		4935855	0					
ANR	4936036	PrimaryExpression	"""RUSTC"""		4935855	0					
ANR	4936037	IfStatement	if ( cc && ! * cc )		4935855	19					
ANR	4936038	Condition	cc && ! * cc	37:5:773:782	4935855	0	True				
ANR	4936039	AndExpression	cc && ! * cc		4935855	0		&&			
ANR	4936040	Identifier	cc		4935855	0					
ANR	4936041	UnaryOperationExpression	! * cc		4935855	1					
ANR	4936042	UnaryOperator	!		4935855	0					
ANR	4936043	UnaryOperationExpression	* cc		4935855	1					
ANR	4936044	UnaryOperator	*		4935855	0					
ANR	4936045	Identifier	cc		4935855	1					
ANR	4936046	CompoundStatement		31:17:616:616	4935855	1					
ANR	4936047	ExpressionStatement	R_FREE ( cc )	38:2:789:800	4935855	0	True				
ANR	4936048	CallExpression	R_FREE ( cc )		4935855	0					
ANR	4936049	Callee	R_FREE		4935855	0					
ANR	4936050	Identifier	R_FREE		4935855	0					
ANR	4936051	ArgumentList	cc		4935855	1					
ANR	4936052	Argument	cc		4935855	0					
ANR	4936053	Identifier	cc		4935855	0					
ANR	4936054	IfStatement	if ( ! cc )		4935855	20					
ANR	4936055	Condition	! cc	40:5:810:812	4935855	0	True				
ANR	4936056	UnaryOperationExpression	! cc		4935855	0					
ANR	4936057	UnaryOperator	!		4935855	0					
ANR	4936058	Identifier	cc		4935855	1					
ANR	4936059	CompoundStatement		34:10:646:646	4935855	1					
ANR	4936060	ExpressionStatement	"cc = strdup ( ""rustc"" )"	41:2:819:840	4935855	0	True				
ANR	4936061	AssignmentExpression	"cc = strdup ( ""rustc"" )"		4935855	0		=			
ANR	4936062	Identifier	cc		4935855	0					
ANR	4936063	CallExpression	"strdup ( ""rustc"" )"		4935855	1					
ANR	4936064	Callee	strdup		4935855	0					
ANR	4936065	Identifier	strdup		4935855	0					
ANR	4936066	ArgumentList	"""rustc"""		4935855	1					
ANR	4936067	Argument	"""rustc"""		4935855	0					
ANR	4936068	PrimaryExpression	"""rustc"""		4935855	0					
ANR	4936069	Statement	char	43:1:846:849	4935855	21	True				
ANR	4936070	Statement	*	43:6:851:851	4935855	22	True				
ANR	4936071	Statement	cmd	43:7:852:854	4935855	23	True				
ANR	4936072	Statement	=	43:11:856:856	4935855	24	True				
ANR	4936073	Statement	r_str_newf	43:13:858:867	4935855	25	True				
ANR	4936074	Statement	(	43:24:869:869	4935855	26	True				
ANR	4936075	Statement	"""%s --crate-type dylib %s -o %s/lib%s."""	43:25:870:908	4935855	27	True				
ANR	4936076	Statement	R_LIB_EXT	43:64:909:917	4935855	28	True				
ANR	4936077	Statement	""" -L native=/usr/local/lib/ -l r_core"""	43:73:918:955	4935855	29	True				
ANR	4936078	Statement	","	43:111:956:956	4935855	30	True				
ANR	4936079	Statement	cc	44:2:960:961	4935855	31	True				
ANR	4936080	Statement	","	44:4:962:962	4935855	32	True				
ANR	4936081	Statement	file	44:6:964:967	4935855	33	True				
ANR	4936082	Statement	","	44:10:968:968	4935855	34	True				
ANR	4936083	Statement	libpath	44:12:970:976	4935855	35	True				
ANR	4936084	Statement	","	44:19:977:977	4935855	36	True				
ANR	4936085	Statement	libname	44:21:979:985	4935855	37	True				
ANR	4936086	Statement	)	44:28:986:986	4935855	38	True				
ANR	4936087	ExpressionStatement		44:29:987:987	4935855	39	True				
ANR	4936088	ExpressionStatement	free ( cc )	45:1:990:999	4935855	40	True				
ANR	4936089	CallExpression	free ( cc )		4935855	0					
ANR	4936090	Callee	free		4935855	0					
ANR	4936091	Identifier	free		4935855	0					
ANR	4936092	ArgumentList	cc		4935855	1					
ANR	4936093	Argument	cc		4935855	0					
ANR	4936094	Identifier	cc		4935855	0					
ANR	4936095	IfStatement	"if ( r_sandbox_system ( cmd , 1 ) != 0 )"		4935855	41					
ANR	4936096	Condition	"r_sandbox_system ( cmd , 1 ) != 0"	46:5:1006:1035	4935855	0	True				
ANR	4936097	EqualityExpression	"r_sandbox_system ( cmd , 1 ) != 0"		4935855	0		!=			
ANR	4936098	CallExpression	"r_sandbox_system ( cmd , 1 )"		4935855	0					
ANR	4936099	Callee	r_sandbox_system		4935855	0					
ANR	4936100	Identifier	r_sandbox_system		4935855	0					
ANR	4936101	ArgumentList	cmd		4935855	1					
ANR	4936102	Argument	cmd		4935855	0					
ANR	4936103	Identifier	cmd		4935855	0					
ANR	4936104	Argument	1		4935855	1					
ANR	4936105	PrimaryExpression	1		4935855	0					
ANR	4936106	PrimaryExpression	0		4935855	1					
ANR	4936107	CompoundStatement		40:37:869:869	4935855	1					
ANR	4936108	ExpressionStatement	free ( cmd )	47:2:1042:1052	4935855	0	True				
ANR	4936109	CallExpression	free ( cmd )		4935855	0					
ANR	4936110	Callee	free		4935855	0					
ANR	4936111	Identifier	free		4935855	0					
ANR	4936112	ArgumentList	cmd		4935855	1					
ANR	4936113	Argument	cmd		4935855	0					
ANR	4936114	Identifier	cmd		4935855	0					
ANR	4936115	ReturnStatement	return false ;	48:2:1056:1068	4935855	1	True				
ANR	4936116	Identifier	false		4935855	0					
ANR	4936117	ExpressionStatement	free ( cmd )	50:1:1074:1084	4935855	42	True				
ANR	4936118	CallExpression	free ( cmd )		4935855	0					
ANR	4936119	Callee	free		4935855	0					
ANR	4936120	Identifier	free		4935855	0					
ANR	4936121	ArgumentList	cmd		4935855	1					
ANR	4936122	Argument	cmd		4935855	0					
ANR	4936123	Identifier	cmd		4935855	0					
ANR	4936124	Statement	char	52:1:1088:1091	4935855	43	True				
ANR	4936125	Statement	*	52:6:1093:1093	4935855	44	True				
ANR	4936126	Statement	path	52:7:1094:1097	4935855	45	True				
ANR	4936127	Statement	=	52:12:1099:1099	4935855	46	True				
ANR	4936128	Statement	r_str_newf	52:14:1101:1110	4935855	47	True				
ANR	4936129	Statement	(	52:25:1112:1112	4935855	48	True				
ANR	4936130	Statement	"""%s/lib%s."""	52:26:1113:1123	4935855	49	True				
ANR	4936131	Statement	R_LIB_EXT	52:37:1124:1132	4935855	50	True				
ANR	4936132	Statement	","	52:46:1133:1133	4935855	51	True				
ANR	4936133	Statement	libpath	52:48:1135:1141	4935855	52	True				
ANR	4936134	Statement	","	52:55:1142:1142	4935855	53	True				
ANR	4936135	Statement	libname	52:57:1144:1150	4935855	54	True				
ANR	4936136	Statement	)	52:64:1151:1151	4935855	55	True				
ANR	4936137	ExpressionStatement		52:65:1152:1152	4935855	56	True				
ANR	4936138	ExpressionStatement	lib = r_lib_dl_open ( path )	53:1:1155:1181	4935855	57	True				
ANR	4936139	AssignmentExpression	lib = r_lib_dl_open ( path )		4935855	0		=			
ANR	4936140	Identifier	lib		4935855	0					
ANR	4936141	CallExpression	r_lib_dl_open ( path )		4935855	1					
ANR	4936142	Callee	r_lib_dl_open		4935855	0					
ANR	4936143	Identifier	r_lib_dl_open		4935855	0					
ANR	4936144	ArgumentList	path		4935855	1					
ANR	4936145	Argument	path		4935855	0					
ANR	4936146	Identifier	path		4935855	0					
ANR	4936147	IfStatement	if ( lib != NULL )		4935855	58					
ANR	4936148	Condition	lib != NULL	54:5:1188:1197	4935855	0	True				
ANR	4936149	EqualityExpression	lib != NULL		4935855	0		!=			
ANR	4936150	Identifier	lib		4935855	0					
ANR	4936151	Identifier	NULL		4935855	1					
ANR	4936152	CompoundStatement		49:2:1035:1055	4935855	1					
ANR	4936153	IdentifierDeclStatement	void ( * fcn ) ( RCore * ) ;	55:2:1204:1224	4935855	0	True				
ANR	4936154	IdentifierDecl	( * fcn ) ( RCore * )		4935855	0					
ANR	4936155	IdentifierDeclType	void ( * ) ( RCore * )		4935855	0					
ANR	4936156	Identifier	fcn		4935855	1					
ANR	4936157	ExpressionStatement	"fcn = r_lib_dl_sym ( lib , ""entry"" )"	56:2:1228:1261	4935855	1	True				
ANR	4936158	AssignmentExpression	"fcn = r_lib_dl_sym ( lib , ""entry"" )"		4935855	0		=			
ANR	4936159	Identifier	fcn		4935855	0					
ANR	4936160	CallExpression	"r_lib_dl_sym ( lib , ""entry"" )"		4935855	1					
ANR	4936161	Callee	r_lib_dl_sym		4935855	0					
ANR	4936162	Identifier	r_lib_dl_sym		4935855	0					
ANR	4936163	ArgumentList	lib		4935855	1					
ANR	4936164	Argument	lib		4935855	0					
ANR	4936165	Identifier	lib		4935855	0					
ANR	4936166	Argument	"""entry"""		4935855	1					
ANR	4936167	PrimaryExpression	"""entry"""		4935855	0					
ANR	4936168	IfStatement	if ( fcn )		4935855	2					
ANR	4936169	Condition	fcn	57:6:1269:1271	4935855	0	True				
ANR	4936170	Identifier	fcn		4935855	0					
ANR	4936171	ExpressionStatement	fcn ( lang -> user )	57:11:1274:1290	4935855	1	True				
ANR	4936172	CallExpression	fcn ( lang -> user )		4935855	0					
ANR	4936173	Callee	fcn		4935855	0					
ANR	4936174	Identifier	fcn		4935855	0					
ANR	4936175	ArgumentList	lang -> user		4935855	1					
ANR	4936176	Argument	lang -> user		4935855	0					
ANR	4936177	PtrMemberAccess	lang -> user		4935855	0					
ANR	4936178	Identifier	lang		4935855	0					
ANR	4936179	Identifier	user		4935855	1					
ANR	4936180	ElseStatement	else		4935855	0					
ANR	4936181	ExpressionStatement	"eprintf ( ""Cannot find 'entry' symbol in library\\n"" )"	58:7:1299:1350	4935855	0	True				
ANR	4936182	CallExpression	"eprintf ( ""Cannot find 'entry' symbol in library\\n"" )"		4935855	0					
ANR	4936183	Callee	eprintf		4935855	0					
ANR	4936184	Identifier	eprintf		4935855	0					
ANR	4936185	ArgumentList	"""Cannot find 'entry' symbol in library\\n"""		4935855	1					
ANR	4936186	Argument	"""Cannot find 'entry' symbol in library\\n"""		4935855	0					
ANR	4936187	PrimaryExpression	"""Cannot find 'entry' symbol in library\\n"""		4935855	0					
ANR	4936188	ExpressionStatement	r_lib_dl_close ( lib )	59:2:1354:1374	4935855	3	True				
ANR	4936189	CallExpression	r_lib_dl_close ( lib )		4935855	0					
ANR	4936190	Callee	r_lib_dl_close		4935855	0					
ANR	4936191	Identifier	r_lib_dl_close		4935855	0					
ANR	4936192	ArgumentList	lib		4935855	1					
ANR	4936193	Argument	lib		4935855	0					
ANR	4936194	Identifier	lib		4935855	0					
ANR	4936195	ElseStatement	else		4935855	0					
ANR	4936196	CompoundStatement		54:8:1215:1215	4935855	0					
ANR	4936197	ExpressionStatement	"eprintf ( ""Cannot open library\\n"" )"	61:2:1388:1421	4935855	0	True				
ANR	4936198	CallExpression	"eprintf ( ""Cannot open library\\n"" )"		4935855	0					
ANR	4936199	Callee	eprintf		4935855	0					
ANR	4936200	Identifier	eprintf		4935855	0					
ANR	4936201	ArgumentList	"""Cannot open library\\n"""		4935855	1					
ANR	4936202	Argument	"""Cannot open library\\n"""		4935855	0					
ANR	4936203	PrimaryExpression	"""Cannot open library\\n"""		4935855	0					
ANR	4936204	ExpressionStatement	r_file_rm ( path )	63:1:1427:1443	4935855	59	True				
ANR	4936205	CallExpression	r_file_rm ( path )		4935855	0					
ANR	4936206	Callee	r_file_rm		4935855	0					
ANR	4936207	Identifier	r_file_rm		4935855	0					
ANR	4936208	ArgumentList	path		4935855	1					
ANR	4936209	Argument	path		4935855	0					
ANR	4936210	Identifier	path		4935855	0					
ANR	4936211	ExpressionStatement	free ( path )	64:1:1460:1471	4935855	60	True				
ANR	4936212	CallExpression	free ( path )		4935855	0					
ANR	4936213	Callee	free		4935855	0					
ANR	4936214	Identifier	free		4935855	0					
ANR	4936215	ArgumentList	path		4935855	1					
ANR	4936216	Argument	path		4935855	0					
ANR	4936217	Identifier	path		4935855	0					
ANR	4936218	ReturnStatement	return 0 ;	65:1:1474:1482	4935855	61	True				
ANR	4936219	PrimaryExpression	0		4935855	0					
ANR	4936220	ReturnType	static int		4935855	1					
ANR	4936221	Identifier	lang_rust_file		4935855	2					
ANR	4936222	ParameterList	"RLang * lang , const char * file"		4935855	3					
ANR	4936223	Parameter	RLang * lang	7:26:137:147	4935855	0	True				
ANR	4936224	ParameterType	RLang *		4935855	0					
ANR	4936225	Identifier	lang		4935855	1					
ANR	4936226	Parameter	const char * file	7:39:150:165	4935855	1	True				
ANR	4936227	ParameterType	const char *		4935855	0					
ANR	4936228	Identifier	file		4935855	1					
ANR	4936229	CFGEntryNode	ENTRY		4935855		True				
ANR	4936230	CFGExitNode	EXIT		4935855		True				
ANR	4936231	Symbol	lib		4935855						
ANR	4936232	Symbol	* cc		4935855						
ANR	4936233	Symbol	* lang		4935855						
ANR	4936234	Symbol	r_sys_getenv		4935855						
ANR	4936235	Symbol	libpath		4935855						
ANR	4936236	Symbol	fcn		4935855						
ANR	4936237	Symbol	strlen		4935855						
ANR	4936238	Symbol	path		4935855						
ANR	4936239	Symbol	r_lib_dl_open		4935855						
ANR	4936240	Symbol	file		4935855						
ANR	4936241	Symbol	r_lib_dl_sym		4935855						
ANR	4936242	Symbol	lang		4935855						
ANR	4936243	Symbol	cc		4935855						
ANR	4936244	Symbol	a		4935855						
ANR	4936245	Symbol	r_sandbox_system		4935855						
ANR	4936246	Symbol	NULL		4935855						
ANR	4936247	Symbol	false		4935855						
ANR	4936248	Symbol	* a		4935855						
ANR	4936249	Symbol	p		4935855						
ANR	4936250	Symbol	strstr		4935855						
ANR	4936251	Symbol	r_str_lchr		4935855						
ANR	4936252	Symbol	libname		4935855						
ANR	4936253	Symbol	name		4935855						
ANR	4936254	Symbol	* p		4935855						
ANR	4936255	Symbol	strdup		4935855						
ANR	4936256	Symbol	cmd		4935855						
ANR	4936257	Symbol	r_file_exists		4935855						
ANR	4936258	Symbol	lang -> user		4935855						
ANR	4936259	Function	lang_rust_init	68:0:1487:1585							
ANR	4936260	FunctionDef	lang_rust_init (void * user)		4936259	0					
ANR	4936261	CompoundStatement		68:38:1525:1585	4936259	0					
ANR	4936262	ReturnStatement	return true ;	70:1:1572:1583	4936259	0	True				
ANR	4936263	Identifier	true		4936259	0					
ANR	4936264	ReturnType	static int		4936259	1					
ANR	4936265	Identifier	lang_rust_init		4936259	2					
ANR	4936266	ParameterList	void * user		4936259	3					
ANR	4936267	Parameter	void * user	68:26:1513:1522	4936259	0	True				
ANR	4936268	ParameterType	void *		4936259	0					
ANR	4936269	Identifier	user		4936259	1					
ANR	4936270	CFGEntryNode	ENTRY		4936259		True				
ANR	4936271	CFGExitNode	EXIT		4936259		True				
ANR	4936272	Symbol	true		4936259						
ANR	4936273	Symbol	user		4936259						
ANR	4936274	Function	lang_rust_run	73:0:1588:2900							
ANR	4936275	FunctionDef	"lang_rust_run (RLang * lang , const char * code , int len)"		4936274	0					
ANR	4936276	CompoundStatement		73:65:1653:2900	4936274	0					
ANR	4936277	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( ""_tmp.rs"" , ""w"" ) ;"	74:1:1656:1699	4936274	0	True				
ANR	4936278	IdentifierDecl	"* fd = r_sandbox_fopen ( ""_tmp.rs"" , ""w"" )"		4936274	0					
ANR	4936279	IdentifierDeclType	FILE *		4936274	0					
ANR	4936280	Identifier	fd		4936274	1					
ANR	4936281	AssignmentExpression	"* fd = r_sandbox_fopen ( ""_tmp.rs"" , ""w"" )"		4936274	2		=			
ANR	4936282	Identifier	fd		4936274	0					
ANR	4936283	CallExpression	"r_sandbox_fopen ( ""_tmp.rs"" , ""w"" )"		4936274	1					
ANR	4936284	Callee	r_sandbox_fopen		4936274	0					
ANR	4936285	Identifier	r_sandbox_fopen		4936274	0					
ANR	4936286	ArgumentList	"""_tmp.rs"""		4936274	1					
ANR	4936287	Argument	"""_tmp.rs"""		4936274	0					
ANR	4936288	PrimaryExpression	"""_tmp.rs"""		4936274	0					
ANR	4936289	Argument	"""w"""		4936274	1					
ANR	4936290	PrimaryExpression	"""w"""		4936274	0					
ANR	4936291	IfStatement	if ( fd )		4936274	1					
ANR	4936292	Condition	fd	75:5:1706:1707	4936274	0	True				
ANR	4936293	Identifier	fd		4936274	0					
ANR	4936294	CompoundStatement		3:9:56:56	4936274	1					
ANR	4936295	Statement	const	76:2:1714:1718	4936274	0	True				
ANR	4936296	Statement	char	76:8:1720:1723	4936274	1	True				
ANR	4936297	Statement	*	76:13:1725:1725	4936274	2	True				
ANR	4936298	Statement	rust_header	76:14:1726:1736	4936274	3	True				
ANR	4936299	Statement	=	76:26:1738:1738	4936274	4	True				
ANR	4936300	Statement	"""use std::ffi::CStr;\\n"""	77:0:1742:1764	4936274	5	True				
ANR	4936301	Statement	"""extern {\\n"""	78:0:1768:1779	4936274	6	True				
ANR	4936302	Statement	"""        pub fn r_core_cmd_str(core: *const u8, s: *const u8) -> *const u8;\\n"""	79:0:1783:1860	4936274	7	True				
ANR	4936303	Statement	"""        pub fn free (ptr: *const u8);\\n"""	80:0:1864:1904	4936274	8	True				
ANR	4936304	Statement	"""}\\n"""	81:0:1908:1912	4936274	9	True				
ANR	4936305	Statement	"""\\n"""	82:0:1916:1919	4936274	10	True				
ANR	4936306	Statement	"""pub struct R2;\\n"""	83:0:1923:1940	4936274	11	True				
ANR	4936307	Statement	"""\\n"""	84:0:1944:1947	4936274	12	True				
ANR	4936308	Statement	"""#[allow(dead_code)]\\n"""	85:0:1951:1973	4936274	13	True				
ANR	4936309	Statement	"""impl R2 {\\n"""	86:0:1977:1989	4936274	14	True				
ANR	4936310	Statement	"""        fn cmdstr(&self, c: *const u8, str: &str) -> String {\\n"""	87:0:1993:2057	4936274	15	True				
ANR	4936311	Statement	"""                unsafe {\\n"""	88:0:2061:2088	4936274	16	True				
ANR	4936312	Statement	"""                        let ptr = r_core_cmd_str(c, str.as_ptr()) as *const i8;\\n"""	89:0:2092:2174	4936274	17	True				
ANR	4936313	Statement	"""                        let c_str = CStr::from_ptr(ptr).to_string_lossy().into_owned();\\n"""	90:0:2178:2268	4936274	18	True				
ANR	4936314	Statement	"""                        free (ptr as *const u8);\\n"""	91:0:2272:2323	4936274	19	True				
ANR	4936315	Statement	"""                        String::from (c_str)\\n"""	92:0:2327:2374	4936274	20	True				
ANR	4936316	Statement	"""                }\\n"""	93:0:2378:2398	4936274	21	True				
ANR	4936317	Statement	"""        }\\n"""	94:0:2402:2414	4936274	22	True				
ANR	4936318	Statement	"""}\\n"""	95:0:2418:2422	4936274	23	True				
ANR	4936319	Statement	"""\\n"""	96:0:2426:2429	4936274	24	True				
ANR	4936320	Statement	"""#[no_mangle]\\n"""	97:0:2433:2448	4936274	25	True				
ANR	4936321	Statement	"""#[allow(unused_variables)]\\n"""	98:0:2452:2481	4936274	26	True				
ANR	4936322	Statement	"""#[allow(unused_unsafe)]\\n"""	99:0:2485:2511	4936274	27	True				
ANR	4936323	Statement	"""pub extern fn entry(core: *const u8) {\\n"""	100:0:2515:2556	4936274	28	True				
ANR	4936324	Statement	"""        let r2 = R2;\\n"""	101:0:2560:2583	4936274	29	True				
ANR	4936325	ExpressionStatement	"""        unsafe { /* because core is external */\\n"""	102:0:2587:2638	4936274	30	True				
ANR	4936326	PrimaryExpression	"""        unsafe { /* because core is external */\\n"""		4936274	0					
ANR	4936327	Statement	const	103:2:2642:2646	4936274	31	True				
ANR	4936328	Statement	char	103:8:2648:2651	4936274	32	True				
ANR	4936329	Statement	*	103:13:2653:2653	4936274	33	True				
ANR	4936330	Statement	rust_footer	103:14:2654:2664	4936274	34	True				
ANR	4936331	Statement	=	103:26:2666:2666	4936274	35	True				
ANR	4936332	Statement	"""        }\\n"""	104:0:2670:2682	4936274	36	True				
ANR	4936333	ExpressionStatement	"""}\\n"""	105:0:2686:2691	4936274	37	True				
ANR	4936334	PrimaryExpression	"""}\\n"""		4936274	0					
ANR	4936335	ExpressionStatement	"fputs ( rust_header , fd )"	106:2:2695:2718	4936274	38	True				
ANR	4936336	CallExpression	"fputs ( rust_header , fd )"		4936274	0					
ANR	4936337	Callee	fputs		4936274	0					
ANR	4936338	Identifier	fputs		4936274	0					
ANR	4936339	ArgumentList	rust_header		4936274	1					
ANR	4936340	Argument	rust_header		4936274	0					
ANR	4936341	Identifier	rust_header		4936274	0					
ANR	4936342	Argument	fd		4936274	1					
ANR	4936343	Identifier	fd		4936274	0					
ANR	4936344	ExpressionStatement	"fputs ( code , fd )"	107:2:2722:2738	4936274	39	True				
ANR	4936345	CallExpression	"fputs ( code , fd )"		4936274	0					
ANR	4936346	Callee	fputs		4936274	0					
ANR	4936347	Identifier	fputs		4936274	0					
ANR	4936348	ArgumentList	code		4936274	1					
ANR	4936349	Argument	code		4936274	0					
ANR	4936350	Identifier	code		4936274	0					
ANR	4936351	Argument	fd		4936274	1					
ANR	4936352	Identifier	fd		4936274	0					
ANR	4936353	ExpressionStatement	"fputs ( rust_footer , fd )"	108:2:2742:2765	4936274	40	True				
ANR	4936354	CallExpression	"fputs ( rust_footer , fd )"		4936274	0					
ANR	4936355	Callee	fputs		4936274	0					
ANR	4936356	Identifier	fputs		4936274	0					
ANR	4936357	ArgumentList	rust_footer		4936274	1					
ANR	4936358	Argument	rust_footer		4936274	0					
ANR	4936359	Identifier	rust_footer		4936274	0					
ANR	4936360	Argument	fd		4936274	1					
ANR	4936361	Identifier	fd		4936274	0					
ANR	4936362	ExpressionStatement	fclose ( fd )	109:2:2769:2780	4936274	41	True				
ANR	4936363	CallExpression	fclose ( fd )		4936274	0					
ANR	4936364	Callee	fclose		4936274	0					
ANR	4936365	Identifier	fclose		4936274	0					
ANR	4936366	ArgumentList	fd		4936274	1					
ANR	4936367	Argument	fd		4936274	0					
ANR	4936368	Identifier	fd		4936274	0					
ANR	4936369	ExpressionStatement	"lang_rust_file ( lang , ""_tmp.rs"" )"	110:2:2784:2816	4936274	42	True				
ANR	4936370	CallExpression	"lang_rust_file ( lang , ""_tmp.rs"" )"		4936274	0					
ANR	4936371	Callee	lang_rust_file		4936274	0					
ANR	4936372	Identifier	lang_rust_file		4936274	0					
ANR	4936373	ArgumentList	lang		4936274	1					
ANR	4936374	Argument	lang		4936274	0					
ANR	4936375	Identifier	lang		4936274	0					
ANR	4936376	Argument	"""_tmp.rs"""		4936274	1					
ANR	4936377	PrimaryExpression	"""_tmp.rs"""		4936274	0					
ANR	4936378	ExpressionStatement	"r_file_rm ( ""_tmp.rs"" )"	111:2:2820:2841	4936274	43	True				
ANR	4936379	CallExpression	"r_file_rm ( ""_tmp.rs"" )"		4936274	0					
ANR	4936380	Callee	r_file_rm		4936274	0					
ANR	4936381	Identifier	r_file_rm		4936274	0					
ANR	4936382	ArgumentList	"""_tmp.rs"""		4936274	1					
ANR	4936383	Argument	"""_tmp.rs"""		4936274	0					
ANR	4936384	PrimaryExpression	"""_tmp.rs"""		4936274	0					
ANR	4936385	ElseStatement	else		4936274	0					
ANR	4936386	ExpressionStatement	"eprintf ( ""Cannot open _tmp.rs\\n"" )"	112:8:2851:2884	4936274	0	True				
ANR	4936387	CallExpression	"eprintf ( ""Cannot open _tmp.rs\\n"" )"		4936274	0					
ANR	4936388	Callee	eprintf		4936274	0					
ANR	4936389	Identifier	eprintf		4936274	0					
ANR	4936390	ArgumentList	"""Cannot open _tmp.rs\\n"""		4936274	1					
ANR	4936391	Argument	"""Cannot open _tmp.rs\\n"""		4936274	0					
ANR	4936392	PrimaryExpression	"""Cannot open _tmp.rs\\n"""		4936274	0					
ANR	4936393	ReturnStatement	return true ;	113:1:2887:2898	4936274	2	True				
ANR	4936394	Identifier	true		4936274	0					
ANR	4936395	ReturnType	static int		4936274	1					
ANR	4936396	Identifier	lang_rust_run		4936274	2					
ANR	4936397	ParameterList	"RLang * lang , const char * code , int len"		4936274	3					
ANR	4936398	Parameter	RLang * lang	73:25:1613:1623	4936274	0	True				
ANR	4936399	ParameterType	RLang *		4936274	0					
ANR	4936400	Identifier	lang		4936274	1					
ANR	4936401	Parameter	const char * code	73:38:1626:1641	4936274	1	True				
ANR	4936402	ParameterType	const char *		4936274	0					
ANR	4936403	Identifier	code		4936274	1					
ANR	4936404	Parameter	int len	73:56:1644:1650	4936274	2	True				
ANR	4936405	ParameterType	int		4936274	0					
ANR	4936406	Identifier	len		4936274	1					
ANR	4936407	CFGEntryNode	ENTRY		4936274		True				
ANR	4936408	CFGExitNode	EXIT		4936274		True				
ANR	4936409	Symbol	code		4936274						
ANR	4936410	Symbol	len		4936274						
ANR	4936411	Symbol	true		4936274						
ANR	4936412	Symbol	r_sandbox_fopen		4936274						
ANR	4936413	Symbol	rust_header		4936274						
ANR	4936414	Symbol	rust_footer		4936274						
ANR	4936415	Symbol	lang		4936274						
ANR	4936416	Symbol	fd		4936274						
ANR	4936417	DeclStmt									
ANR	4936418	Decl							RLangPlugin	RLangPlugin	r_lang_plugin_rust
