command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4057920	File	data/converged/CVE-2019-16718~_radare2/libr_core_cconfig.c								
ANR	4057921	Function	set_options	14:0:501:757							
ANR	4057922	FunctionDef	set_options (RConfigNode * node)		4057921	0					
ANR	4057923	CompoundStatement		14:48:549:757	4057921	0					
ANR	4057924	IdentifierDeclStatement	va_list argp ;	15:1:552:564	4057921	0	True				
ANR	4057925	IdentifierDecl	argp		4057921	0					
ANR	4057926	IdentifierDeclType	va_list		4057921	0					
ANR	4057927	Identifier	argp		4057921	1					
ANR	4057928	IdentifierDeclStatement	char * option = NULL ;	16:1:567:586	4057921	1	True				
ANR	4057929	IdentifierDecl	* option = NULL		4057921	0					
ANR	4057930	IdentifierDeclType	char *		4057921	0					
ANR	4057931	Identifier	option		4057921	1					
ANR	4057932	AssignmentExpression	* option = NULL		4057921	2		=			
ANR	4057933	Identifier	NULL		4057921	0					
ANR	4057934	Identifier	NULL		4057921	1					
ANR	4057935	ExpressionStatement	"va_start ( argp , node )"	17:1:589:610	4057921	2	True				
ANR	4057936	CallExpression	"va_start ( argp , node )"		4057921	0					
ANR	4057937	Callee	va_start		4057921	0					
ANR	4057938	Identifier	va_start		4057921	0					
ANR	4057939	ArgumentList	argp		4057921	1					
ANR	4057940	Argument	argp		4057921	0					
ANR	4057941	Identifier	argp		4057921	0					
ANR	4057942	Argument	node		4057921	1					
ANR	4057943	Identifier	node		4057921	0					
ANR	4057944	Statement	option	18:1:613:618	4057921	3	True				
ANR	4057945	Statement	=	18:8:620:620	4057921	4	True				
ANR	4057946	Statement	va_arg	18:10:622:627	4057921	5	True				
ANR	4057947	Statement	(	18:17:629:629	4057921	6	True				
ANR	4057948	Statement	argp	18:18:630:633	4057921	7	True				
ANR	4057949	Statement	","	18:22:634:634	4057921	8	True				
ANR	4057950	Statement	char	18:24:636:639	4057921	9	True				
ANR	4057951	Statement	*	18:29:641:641	4057921	10	True				
ANR	4057952	Statement	)	18:30:642:642	4057921	11	True				
ANR	4057953	ExpressionStatement		18:31:643:643	4057921	12	True				
ANR	4057954	WhileStatement	while ( option )		4057921	13					
ANR	4057955	Condition	option	19:8:653:658	4057921	0	True				
ANR	4057956	Identifier	option		4057921	0					
ANR	4057957	CompoundStatement		6:16:111:111	4057921	1					
ANR	4057958	ExpressionStatement	"r_list_append ( node -> options , option )"	20:2:665:702	4057921	0	True				
ANR	4057959	CallExpression	"r_list_append ( node -> options , option )"		4057921	0					
ANR	4057960	Callee	r_list_append		4057921	0					
ANR	4057961	Identifier	r_list_append		4057921	0					
ANR	4057962	ArgumentList	node -> options		4057921	1					
ANR	4057963	Argument	node -> options		4057921	0					
ANR	4057964	PtrMemberAccess	node -> options		4057921	0					
ANR	4057965	Identifier	node		4057921	0					
ANR	4057966	Identifier	options		4057921	1					
ANR	4057967	Argument	option		4057921	1					
ANR	4057968	Identifier	option		4057921	0					
ANR	4057969	Statement	option	21:2:706:711	4057921	1	True				
ANR	4057970	Statement	=	21:9:713:713	4057921	2	True				
ANR	4057971	Statement	va_arg	21:11:715:720	4057921	3	True				
ANR	4057972	Statement	(	21:18:722:722	4057921	4	True				
ANR	4057973	Statement	argp	21:19:723:726	4057921	5	True				
ANR	4057974	Statement	","	21:23:727:727	4057921	6	True				
ANR	4057975	Statement	char	21:25:729:732	4057921	7	True				
ANR	4057976	Statement	*	21:30:734:734	4057921	8	True				
ANR	4057977	Statement	)	21:31:735:735	4057921	9	True				
ANR	4057978	ExpressionStatement		21:32:736:736	4057921	10	True				
ANR	4057979	ExpressionStatement	va_end ( argp )	23:1:742:755	4057921	14	True				
ANR	4057980	CallExpression	va_end ( argp )		4057921	0					
ANR	4057981	Callee	va_end		4057921	0					
ANR	4057982	Identifier	va_end		4057921	0					
ANR	4057983	ArgumentList	argp		4057921	1					
ANR	4057984	Argument	argp		4057921	0					
ANR	4057985	Identifier	argp		4057921	0					
ANR	4057986	ReturnType	static void		4057921	1					
ANR	4057987	Identifier	set_options		4057921	2					
ANR	4057988	ParameterList	RConfigNode * node		4057921	3					
ANR	4057989	Parameter	RConfigNode * node	14:24:525:541	4057921	0	True				
ANR	4057990	ParameterType	RConfigNode *		4057921	0					
ANR	4057991	Identifier	node		4057921	1					
ANR	4057992	CFGEntryNode	ENTRY		4057921		True				
ANR	4057993	CFGExitNode	EXIT		4057921		True				
ANR	4057994	Symbol	node		4057921						
ANR	4057995	Symbol	NULL		4057921						
ANR	4057996	Symbol	argp		4057921						
ANR	4057997	Symbol	node -> options		4057921						
ANR	4057998	Symbol	* node		4057921						
ANR	4057999	Symbol	option		4057921						
ANR	4058000	Function	isGdbPlugin	26:0:760:985							
ANR	4058001	FunctionDef	isGdbPlugin (RCore * core)		4058000	0					
ANR	4058002	CompoundStatement		26:37:797:985	4058000	0					
ANR	4058003	IfStatement	if ( core -> io && core -> io -> desc && core -> io -> desc -> plugin )		4058000	0					
ANR	4058004	Condition	core -> io && core -> io -> desc && core -> io -> desc -> plugin	27:5:804:855	4058000	0	True				
ANR	4058005	AndExpression	core -> io && core -> io -> desc && core -> io -> desc -> plugin		4058000	0		&&			
ANR	4058006	PtrMemberAccess	core -> io		4058000	0					
ANR	4058007	Identifier	core		4058000	0					
ANR	4058008	Identifier	io		4058000	1					
ANR	4058009	AndExpression	core -> io -> desc && core -> io -> desc -> plugin		4058000	1		&&			
ANR	4058010	PtrMemberAccess	core -> io -> desc		4058000	0					
ANR	4058011	PtrMemberAccess	core -> io		4058000	0					
ANR	4058012	Identifier	core		4058000	0					
ANR	4058013	Identifier	io		4058000	1					
ANR	4058014	Identifier	desc		4058000	1					
ANR	4058015	PtrMemberAccess	core -> io -> desc -> plugin		4058000	1					
ANR	4058016	PtrMemberAccess	core -> io -> desc		4058000	0					
ANR	4058017	PtrMemberAccess	core -> io		4058000	0					
ANR	4058018	Identifier	core		4058000	0					
ANR	4058019	Identifier	io		4058000	1					
ANR	4058020	Identifier	desc		4058000	1					
ANR	4058021	Identifier	plugin		4058000	1					
ANR	4058022	CompoundStatement		2:59:60:60	4058000	1					
ANR	4058023	IfStatement	"if ( core -> io -> desc -> plugin -> name && ! strcmp ( core -> io -> desc -> plugin -> name , ""gdb"" ) )"		4058000	0					
ANR	4058024	Condition	"core -> io -> desc -> plugin -> name && ! strcmp ( core -> io -> desc -> plugin -> name , ""gdb"" )"	28:6:866:942	4058000	0	True				
ANR	4058025	AndExpression	"core -> io -> desc -> plugin -> name && ! strcmp ( core -> io -> desc -> plugin -> name , ""gdb"" )"		4058000	0		&&			
ANR	4058026	PtrMemberAccess	core -> io -> desc -> plugin -> name		4058000	0					
ANR	4058027	PtrMemberAccess	core -> io -> desc -> plugin		4058000	0					
ANR	4058028	PtrMemberAccess	core -> io -> desc		4058000	0					
ANR	4058029	PtrMemberAccess	core -> io		4058000	0					
ANR	4058030	Identifier	core		4058000	0					
ANR	4058031	Identifier	io		4058000	1					
ANR	4058032	Identifier	desc		4058000	1					
ANR	4058033	Identifier	plugin		4058000	1					
ANR	4058034	Identifier	name		4058000	1					
ANR	4058035	UnaryOperationExpression	"! strcmp ( core -> io -> desc -> plugin -> name , ""gdb"" )"		4058000	1					
ANR	4058036	UnaryOperator	!		4058000	0					
ANR	4058037	CallExpression	"strcmp ( core -> io -> desc -> plugin -> name , ""gdb"" )"		4058000	1					
ANR	4058038	Callee	strcmp		4058000	0					
ANR	4058039	Identifier	strcmp		4058000	0					
ANR	4058040	ArgumentList	core -> io -> desc -> plugin -> name		4058000	1					
ANR	4058041	Argument	core -> io -> desc -> plugin -> name		4058000	0					
ANR	4058042	PtrMemberAccess	core -> io -> desc -> plugin -> name		4058000	0					
ANR	4058043	PtrMemberAccess	core -> io -> desc -> plugin		4058000	0					
ANR	4058044	PtrMemberAccess	core -> io -> desc		4058000	0					
ANR	4058045	PtrMemberAccess	core -> io		4058000	0					
ANR	4058046	Identifier	core		4058000	0					
ANR	4058047	Identifier	io		4058000	1					
ANR	4058048	Identifier	desc		4058000	1					
ANR	4058049	Identifier	plugin		4058000	1					
ANR	4058050	Identifier	name		4058000	1					
ANR	4058051	Argument	"""gdb"""		4058000	1					
ANR	4058052	PrimaryExpression	"""gdb"""		4058000	0					
ANR	4058053	CompoundStatement		3:85:147:147	4058000	1					
ANR	4058054	ReturnStatement	return true ;	29:3:950:961	4058000	0	True				
ANR	4058055	Identifier	true		4058000	0					
ANR	4058056	ReturnStatement	return false ;	32:1:971:983	4058000	1	True				
ANR	4058057	Identifier	false		4058000	0					
ANR	4058058	ReturnType	static bool		4058000	1					
ANR	4058059	Identifier	isGdbPlugin		4058000	2					
ANR	4058060	ParameterList	RCore * core		4058000	3					
ANR	4058061	Parameter	RCore * core	26:24:784:794	4058000	0	True				
ANR	4058062	ParameterType	RCore *		4058000	0					
ANR	4058063	Identifier	core		4058000	1					
ANR	4058064	CFGEntryNode	ENTRY		4058000		True				
ANR	4058065	CFGExitNode	EXIT		4058000		True				
ANR	4058066	Symbol	strcmp		4058000						
ANR	4058067	Symbol	core -> io -> desc -> plugin		4058000						
ANR	4058068	Symbol	* core -> io -> desc -> plugin		4058000						
ANR	4058069	Symbol	* * core -> io -> desc		4058000						
ANR	4058070	Symbol	* core		4058000						
ANR	4058071	Symbol	false		4058000						
ANR	4058072	Symbol	core -> io -> desc		4058000						
ANR	4058073	Symbol	* * * core -> io		4058000						
ANR	4058074	Symbol	core		4058000						
ANR	4058075	Symbol	* core -> io		4058000						
ANR	4058076	Symbol	* * * core		4058000						
ANR	4058077	Symbol	core -> io -> desc -> plugin -> name		4058000						
ANR	4058078	Symbol	core -> io		4058000						
ANR	4058079	Symbol	true		4058000						
ANR	4058080	Symbol	* core -> io -> desc		4058000						
ANR	4058081	Symbol	* * * * core		4058000						
ANR	4058082	Symbol	* * core		4058000						
ANR	4058083	Symbol	* * core -> io		4058000						
ANR	4058084	Function	print_node_options	35:0:988:1158							
ANR	4058085	FunctionDef	print_node_options (RConfigNode * node)		4058084	0					
ANR	4058086	CompoundStatement		35:50:1038:1158	4058084	0					
ANR	4058087	IdentifierDeclStatement	RListIter * iter ;	36:1:1041:1056	4058084	0	True				
ANR	4058088	IdentifierDecl	* iter		4058084	0					
ANR	4058089	IdentifierDeclType	RListIter *		4058084	0					
ANR	4058090	Identifier	iter		4058084	1					
ANR	4058091	IdentifierDeclStatement	char * option ;	37:1:1059:1071	4058084	1	True				
ANR	4058092	IdentifierDecl	* option		4058084	0					
ANR	4058093	IdentifierDeclType	char *		4058084	0					
ANR	4058094	Identifier	option		4058084	1					
ANR	4058095	Statement	r_list_foreach	38:1:1074:1087	4058084	2	True				
ANR	4058096	Statement	(	38:16:1089:1089	4058084	3	True				
ANR	4058097	Statement	node	38:17:1090:1093	4058084	4	True				
ANR	4058098	Statement	->	38:21:1094:1095	4058084	5	True				
ANR	4058099	Statement	options	38:23:1096:1102	4058084	6	True				
ANR	4058100	Statement	","	38:30:1103:1103	4058084	7	True				
ANR	4058101	Statement	iter	38:32:1105:1108	4058084	8	True				
ANR	4058102	Statement	","	38:36:1109:1109	4058084	9	True				
ANR	4058103	Statement	option	38:38:1111:1116	4058084	10	True				
ANR	4058104	Statement	)	38:44:1117:1117	4058084	11	True				
ANR	4058105	CompoundStatement		4:46:80:80	4058084	12					
ANR	4058106	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , option )"	39:2:1123:1153	4058084	0	True				
ANR	4058107	CallExpression	"r_cons_printf ( ""%s\\n"" , option )"		4058084	0					
ANR	4058108	Callee	r_cons_printf		4058084	0					
ANR	4058109	Identifier	r_cons_printf		4058084	0					
ANR	4058110	ArgumentList	"""%s\\n"""		4058084	1					
ANR	4058111	Argument	"""%s\\n"""		4058084	0					
ANR	4058112	PrimaryExpression	"""%s\\n"""		4058084	0					
ANR	4058113	Argument	option		4058084	1					
ANR	4058114	Identifier	option		4058084	0					
ANR	4058115	ReturnType	static void		4058084	1					
ANR	4058116	Identifier	print_node_options		4058084	2					
ANR	4058117	ParameterList	RConfigNode * node		4058084	3					
ANR	4058118	Parameter	RConfigNode * node	35:31:1019:1035	4058084	0	True				
ANR	4058119	ParameterType	RConfigNode *		4058084	0					
ANR	4058120	Identifier	node		4058084	1					
ANR	4058121	CFGEntryNode	ENTRY		4058084		True				
ANR	4058122	CFGExitNode	EXIT		4058084		True				
ANR	4058123	Symbol	node		4058084						
ANR	4058124	Symbol	iter		4058084						
ANR	4058125	Symbol	option		4058084						
ANR	4058126	Function	compareName	46:0:1283:1423							
ANR	4058127	FunctionDef	"compareName (const RAnalFunction * a , const RAnalFunction * b)"		4058126	0					
ANR	4058128	CompoundStatement		46:71:1354:1423	4058126	0					
ANR	4058129	ReturnStatement	"return a && b && a -> name && b -> name && strcmp ( a -> name , b -> name ) ;"	47:1:1357:1421	4058126	0	True				
ANR	4058130	AndExpression	"a && b && a -> name && b -> name && strcmp ( a -> name , b -> name )"		4058126	0		&&			
ANR	4058131	Identifier	a		4058126	0					
ANR	4058132	AndExpression	"b && a -> name && b -> name && strcmp ( a -> name , b -> name )"		4058126	1		&&			
ANR	4058133	Identifier	b		4058126	0					
ANR	4058134	AndExpression	"a -> name && b -> name && strcmp ( a -> name , b -> name )"		4058126	1		&&			
ANR	4058135	PtrMemberAccess	a -> name		4058126	0					
ANR	4058136	Identifier	a		4058126	0					
ANR	4058137	Identifier	name		4058126	1					
ANR	4058138	AndExpression	"b -> name && strcmp ( a -> name , b -> name )"		4058126	1		&&			
ANR	4058139	PtrMemberAccess	b -> name		4058126	0					
ANR	4058140	Identifier	b		4058126	0					
ANR	4058141	Identifier	name		4058126	1					
ANR	4058142	CallExpression	"strcmp ( a -> name , b -> name )"		4058126	1					
ANR	4058143	Callee	strcmp		4058126	0					
ANR	4058144	Identifier	strcmp		4058126	0					
ANR	4058145	ArgumentList	a -> name		4058126	1					
ANR	4058146	Argument	a -> name		4058126	0					
ANR	4058147	PtrMemberAccess	a -> name		4058126	0					
ANR	4058148	Identifier	a		4058126	0					
ANR	4058149	Identifier	name		4058126	1					
ANR	4058150	Argument	b -> name		4058126	1					
ANR	4058151	PtrMemberAccess	b -> name		4058126	0					
ANR	4058152	Identifier	b		4058126	0					
ANR	4058153	Identifier	name		4058126	1					
ANR	4058154	ReturnType	static int		4058126	1					
ANR	4058155	Identifier	compareName		4058126	2					
ANR	4058156	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		4058126	3					
ANR	4058157	Parameter	const RAnalFunction * a	46:23:1306:1327	4058126	0	True				
ANR	4058158	ParameterType	const RAnalFunction *		4058126	0					
ANR	4058159	Identifier	a		4058126	1					
ANR	4058160	Parameter	const RAnalFunction * b	46:47:1330:1351	4058126	1	True				
ANR	4058161	ParameterType	const RAnalFunction *		4058126	0					
ANR	4058162	Identifier	b		4058126	1					
ANR	4058163	CFGEntryNode	ENTRY		4058126		True				
ANR	4058164	CFGExitNode	EXIT		4058126		True				
ANR	4058165	Symbol	strcmp		4058126						
ANR	4058166	Symbol	a		4058126						
ANR	4058167	Symbol	b		4058126						
ANR	4058168	Symbol	a -> name		4058126						
ANR	4058169	Symbol	* a		4058126						
ANR	4058170	Symbol	* b		4058126						
ANR	4058171	Symbol	b -> name		4058126						
ANR	4058172	Function	compareNameLen	50:0:1426:1579							
ANR	4058173	FunctionDef	"compareNameLen (const RAnalFunction * a , const RAnalFunction * b)"		4058172	0					
ANR	4058174	CompoundStatement		50:74:1500:1579	4058172	0					
ANR	4058175	ReturnStatement	return a && b && a -> name && b -> name && strlen ( a -> name ) > strlen ( b -> name ) ;	51:1:1503:1577	4058172	0	True				
ANR	4058176	AndExpression	a && b && a -> name && b -> name && strlen ( a -> name ) > strlen ( b -> name )		4058172	0		&&			
ANR	4058177	Identifier	a		4058172	0					
ANR	4058178	AndExpression	b && a -> name && b -> name && strlen ( a -> name ) > strlen ( b -> name )		4058172	1		&&			
ANR	4058179	Identifier	b		4058172	0					
ANR	4058180	AndExpression	a -> name && b -> name && strlen ( a -> name ) > strlen ( b -> name )		4058172	1		&&			
ANR	4058181	PtrMemberAccess	a -> name		4058172	0					
ANR	4058182	Identifier	a		4058172	0					
ANR	4058183	Identifier	name		4058172	1					
ANR	4058184	AndExpression	b -> name && strlen ( a -> name ) > strlen ( b -> name )		4058172	1		&&			
ANR	4058185	PtrMemberAccess	b -> name		4058172	0					
ANR	4058186	Identifier	b		4058172	0					
ANR	4058187	Identifier	name		4058172	1					
ANR	4058188	RelationalExpression	strlen ( a -> name ) > strlen ( b -> name )		4058172	1		>			
ANR	4058189	CallExpression	strlen ( a -> name )		4058172	0					
ANR	4058190	Callee	strlen		4058172	0					
ANR	4058191	Identifier	strlen		4058172	0					
ANR	4058192	ArgumentList	a -> name		4058172	1					
ANR	4058193	Argument	a -> name		4058172	0					
ANR	4058194	PtrMemberAccess	a -> name		4058172	0					
ANR	4058195	Identifier	a		4058172	0					
ANR	4058196	Identifier	name		4058172	1					
ANR	4058197	CallExpression	strlen ( b -> name )		4058172	1					
ANR	4058198	Callee	strlen		4058172	0					
ANR	4058199	Identifier	strlen		4058172	0					
ANR	4058200	ArgumentList	b -> name		4058172	1					
ANR	4058201	Argument	b -> name		4058172	0					
ANR	4058202	PtrMemberAccess	b -> name		4058172	0					
ANR	4058203	Identifier	b		4058172	0					
ANR	4058204	Identifier	name		4058172	1					
ANR	4058205	ReturnType	static int		4058172	1					
ANR	4058206	Identifier	compareNameLen		4058172	2					
ANR	4058207	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		4058172	3					
ANR	4058208	Parameter	const RAnalFunction * a	50:26:1452:1473	4058172	0	True				
ANR	4058209	ParameterType	const RAnalFunction *		4058172	0					
ANR	4058210	Identifier	a		4058172	1					
ANR	4058211	Parameter	const RAnalFunction * b	50:50:1476:1497	4058172	1	True				
ANR	4058212	ParameterType	const RAnalFunction *		4058172	0					
ANR	4058213	Identifier	b		4058172	1					
ANR	4058214	CFGEntryNode	ENTRY		4058172		True				
ANR	4058215	CFGExitNode	EXIT		4058172		True				
ANR	4058216	Symbol	a		4058172						
ANR	4058217	Symbol	strlen		4058172						
ANR	4058218	Symbol	b		4058172						
ANR	4058219	Symbol	a -> name		4058172						
ANR	4058220	Symbol	* a		4058172						
ANR	4058221	Symbol	* b		4058172						
ANR	4058222	Symbol	b -> name		4058172						
ANR	4058223	Function	compareAddress	54:0:1582:1717							
ANR	4058224	FunctionDef	"compareAddress (const RAnalFunction * a , const RAnalFunction * b)"		4058223	0					
ANR	4058225	CompoundStatement		54:74:1656:1717	4058223	0					
ANR	4058226	ReturnStatement	return a && b && a -> addr && b -> addr && a -> addr > b -> addr ;	55:1:1659:1715	4058223	0	True				
ANR	4058227	AndExpression	a && b && a -> addr && b -> addr && a -> addr > b -> addr		4058223	0		&&			
ANR	4058228	Identifier	a		4058223	0					
ANR	4058229	AndExpression	b && a -> addr && b -> addr && a -> addr > b -> addr		4058223	1		&&			
ANR	4058230	Identifier	b		4058223	0					
ANR	4058231	AndExpression	a -> addr && b -> addr && a -> addr > b -> addr		4058223	1		&&			
ANR	4058232	PtrMemberAccess	a -> addr		4058223	0					
ANR	4058233	Identifier	a		4058223	0					
ANR	4058234	Identifier	addr		4058223	1					
ANR	4058235	AndExpression	b -> addr && a -> addr > b -> addr		4058223	1		&&			
ANR	4058236	PtrMemberAccess	b -> addr		4058223	0					
ANR	4058237	Identifier	b		4058223	0					
ANR	4058238	Identifier	addr		4058223	1					
ANR	4058239	RelationalExpression	a -> addr > b -> addr		4058223	1		>			
ANR	4058240	PtrMemberAccess	a -> addr		4058223	0					
ANR	4058241	Identifier	a		4058223	0					
ANR	4058242	Identifier	addr		4058223	1					
ANR	4058243	PtrMemberAccess	b -> addr		4058223	1					
ANR	4058244	Identifier	b		4058223	0					
ANR	4058245	Identifier	addr		4058223	1					
ANR	4058246	ReturnType	static int		4058223	1					
ANR	4058247	Identifier	compareAddress		4058223	2					
ANR	4058248	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		4058223	3					
ANR	4058249	Parameter	const RAnalFunction * a	54:26:1608:1629	4058223	0	True				
ANR	4058250	ParameterType	const RAnalFunction *		4058223	0					
ANR	4058251	Identifier	a		4058223	1					
ANR	4058252	Parameter	const RAnalFunction * b	54:50:1632:1653	4058223	1	True				
ANR	4058253	ParameterType	const RAnalFunction *		4058223	0					
ANR	4058254	Identifier	b		4058223	1					
ANR	4058255	CFGEntryNode	ENTRY		4058223		True				
ANR	4058256	CFGExitNode	EXIT		4058223		True				
ANR	4058257	Symbol	a		4058223						
ANR	4058258	Symbol	b		4058223						
ANR	4058259	Symbol	a -> addr		4058223						
ANR	4058260	Symbol	* a		4058223						
ANR	4058261	Symbol	* b		4058223						
ANR	4058262	Symbol	b -> addr		4058223						
ANR	4058263	Function	compareType	58:0:1720:1876							
ANR	4058264	FunctionDef	"compareType (const RAnalFunction * a , const RAnalFunction * b)"		4058263	0					
ANR	4058265	CompoundStatement		58:71:1791:1876	4058263	0					
ANR	4058266	ReturnStatement	return a && b && a -> diff -> type && b -> diff -> type && a -> diff -> type > b -> diff -> type ;	59:1:1794:1874	4058263	0	True				
ANR	4058267	AndExpression	a && b && a -> diff -> type && b -> diff -> type && a -> diff -> type > b -> diff -> type		4058263	0		&&			
ANR	4058268	Identifier	a		4058263	0					
ANR	4058269	AndExpression	b && a -> diff -> type && b -> diff -> type && a -> diff -> type > b -> diff -> type		4058263	1		&&			
ANR	4058270	Identifier	b		4058263	0					
ANR	4058271	AndExpression	a -> diff -> type && b -> diff -> type && a -> diff -> type > b -> diff -> type		4058263	1		&&			
ANR	4058272	PtrMemberAccess	a -> diff -> type		4058263	0					
ANR	4058273	PtrMemberAccess	a -> diff		4058263	0					
ANR	4058274	Identifier	a		4058263	0					
ANR	4058275	Identifier	diff		4058263	1					
ANR	4058276	Identifier	type		4058263	1					
ANR	4058277	AndExpression	b -> diff -> type && a -> diff -> type > b -> diff -> type		4058263	1		&&			
ANR	4058278	PtrMemberAccess	b -> diff -> type		4058263	0					
ANR	4058279	PtrMemberAccess	b -> diff		4058263	0					
ANR	4058280	Identifier	b		4058263	0					
ANR	4058281	Identifier	diff		4058263	1					
ANR	4058282	Identifier	type		4058263	1					
ANR	4058283	RelationalExpression	a -> diff -> type > b -> diff -> type		4058263	1		>			
ANR	4058284	PtrMemberAccess	a -> diff -> type		4058263	0					
ANR	4058285	PtrMemberAccess	a -> diff		4058263	0					
ANR	4058286	Identifier	a		4058263	0					
ANR	4058287	Identifier	diff		4058263	1					
ANR	4058288	Identifier	type		4058263	1					
ANR	4058289	PtrMemberAccess	b -> diff -> type		4058263	1					
ANR	4058290	PtrMemberAccess	b -> diff		4058263	0					
ANR	4058291	Identifier	b		4058263	0					
ANR	4058292	Identifier	diff		4058263	1					
ANR	4058293	Identifier	type		4058263	1					
ANR	4058294	ReturnType	static int		4058263	1					
ANR	4058295	Identifier	compareType		4058263	2					
ANR	4058296	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		4058263	3					
ANR	4058297	Parameter	const RAnalFunction * a	58:23:1743:1764	4058263	0	True				
ANR	4058298	ParameterType	const RAnalFunction *		4058263	0					
ANR	4058299	Identifier	a		4058263	1					
ANR	4058300	Parameter	const RAnalFunction * b	58:47:1767:1788	4058263	1	True				
ANR	4058301	ParameterType	const RAnalFunction *		4058263	0					
ANR	4058302	Identifier	b		4058263	1					
ANR	4058303	CFGEntryNode	ENTRY		4058263		True				
ANR	4058304	CFGExitNode	EXIT		4058263		True				
ANR	4058305	Symbol	a		4058263						
ANR	4058306	Symbol	a -> diff -> type		4058263						
ANR	4058307	Symbol	b		4058263						
ANR	4058308	Symbol	* a -> diff		4058263						
ANR	4058309	Symbol	* b -> diff		4058263						
ANR	4058310	Symbol	b -> diff -> type		4058263						
ANR	4058311	Symbol	b -> diff		4058263						
ANR	4058312	Symbol	* * b		4058263						
ANR	4058313	Symbol	* * a		4058263						
ANR	4058314	Symbol	* a		4058263						
ANR	4058315	Symbol	* b		4058263						
ANR	4058316	Symbol	a -> diff		4058263						
ANR	4058317	Function	compareSize	62:0:1879:2063							
ANR	4058318	FunctionDef	"compareSize (const RAnalFunction * a , const RAnalFunction * b)"		4058317	0					
ANR	4058319	CompoundStatement		62:71:1950:2063	4058317	0					
ANR	4058320	ReturnStatement	return a && b && r_anal_fcn_realsize ( a ) > r_anal_fcn_realsize ( b ) ;	64:1:1995:2061	4058317	0	True				
ANR	4058321	AndExpression	a && b && r_anal_fcn_realsize ( a ) > r_anal_fcn_realsize ( b )		4058317	0		&&			
ANR	4058322	Identifier	a		4058317	0					
ANR	4058323	AndExpression	b && r_anal_fcn_realsize ( a ) > r_anal_fcn_realsize ( b )		4058317	1		&&			
ANR	4058324	Identifier	b		4058317	0					
ANR	4058325	RelationalExpression	r_anal_fcn_realsize ( a ) > r_anal_fcn_realsize ( b )		4058317	1		>			
ANR	4058326	CallExpression	r_anal_fcn_realsize ( a )		4058317	0					
ANR	4058327	Callee	r_anal_fcn_realsize		4058317	0					
ANR	4058328	Identifier	r_anal_fcn_realsize		4058317	0					
ANR	4058329	ArgumentList	a		4058317	1					
ANR	4058330	Argument	a		4058317	0					
ANR	4058331	Identifier	a		4058317	0					
ANR	4058332	CallExpression	r_anal_fcn_realsize ( b )		4058317	1					
ANR	4058333	Callee	r_anal_fcn_realsize		4058317	0					
ANR	4058334	Identifier	r_anal_fcn_realsize		4058317	0					
ANR	4058335	ArgumentList	b		4058317	1					
ANR	4058336	Argument	b		4058317	0					
ANR	4058337	Identifier	b		4058317	0					
ANR	4058338	ReturnType	static int		4058317	1					
ANR	4058339	Identifier	compareSize		4058317	2					
ANR	4058340	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		4058317	3					
ANR	4058341	Parameter	const RAnalFunction * a	62:23:1902:1923	4058317	0	True				
ANR	4058342	ParameterType	const RAnalFunction *		4058317	0					
ANR	4058343	Identifier	a		4058317	1					
ANR	4058344	Parameter	const RAnalFunction * b	62:47:1926:1947	4058317	1	True				
ANR	4058345	ParameterType	const RAnalFunction *		4058317	0					
ANR	4058346	Identifier	b		4058317	1					
ANR	4058347	CFGEntryNode	ENTRY		4058317		True				
ANR	4058348	CFGExitNode	EXIT		4058317		True				
ANR	4058349	Symbol	a		4058317						
ANR	4058350	Symbol	r_anal_fcn_realsize		4058317						
ANR	4058351	Symbol	b		4058317						
ANR	4058352	Function	compareDist	67:0:2066:2222							
ANR	4058353	FunctionDef	"compareDist (const RAnalFunction * a , const RAnalFunction * b)"		4058352	0					
ANR	4058354	CompoundStatement		67:71:2137:2222	4058352	0					
ANR	4058355	ReturnStatement	return a && b && a -> diff -> dist && b -> diff -> dist && a -> diff -> dist > b -> diff -> dist ;	68:1:2140:2220	4058352	0	True				
ANR	4058356	AndExpression	a && b && a -> diff -> dist && b -> diff -> dist && a -> diff -> dist > b -> diff -> dist		4058352	0		&&			
ANR	4058357	Identifier	a		4058352	0					
ANR	4058358	AndExpression	b && a -> diff -> dist && b -> diff -> dist && a -> diff -> dist > b -> diff -> dist		4058352	1		&&			
ANR	4058359	Identifier	b		4058352	0					
ANR	4058360	AndExpression	a -> diff -> dist && b -> diff -> dist && a -> diff -> dist > b -> diff -> dist		4058352	1		&&			
ANR	4058361	PtrMemberAccess	a -> diff -> dist		4058352	0					
ANR	4058362	PtrMemberAccess	a -> diff		4058352	0					
ANR	4058363	Identifier	a		4058352	0					
ANR	4058364	Identifier	diff		4058352	1					
ANR	4058365	Identifier	dist		4058352	1					
ANR	4058366	AndExpression	b -> diff -> dist && a -> diff -> dist > b -> diff -> dist		4058352	1		&&			
ANR	4058367	PtrMemberAccess	b -> diff -> dist		4058352	0					
ANR	4058368	PtrMemberAccess	b -> diff		4058352	0					
ANR	4058369	Identifier	b		4058352	0					
ANR	4058370	Identifier	diff		4058352	1					
ANR	4058371	Identifier	dist		4058352	1					
ANR	4058372	RelationalExpression	a -> diff -> dist > b -> diff -> dist		4058352	1		>			
ANR	4058373	PtrMemberAccess	a -> diff -> dist		4058352	0					
ANR	4058374	PtrMemberAccess	a -> diff		4058352	0					
ANR	4058375	Identifier	a		4058352	0					
ANR	4058376	Identifier	diff		4058352	1					
ANR	4058377	Identifier	dist		4058352	1					
ANR	4058378	PtrMemberAccess	b -> diff -> dist		4058352	1					
ANR	4058379	PtrMemberAccess	b -> diff		4058352	0					
ANR	4058380	Identifier	b		4058352	0					
ANR	4058381	Identifier	diff		4058352	1					
ANR	4058382	Identifier	dist		4058352	1					
ANR	4058383	ReturnType	static int		4058352	1					
ANR	4058384	Identifier	compareDist		4058352	2					
ANR	4058385	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		4058352	3					
ANR	4058386	Parameter	const RAnalFunction * a	67:23:2089:2110	4058352	0	True				
ANR	4058387	ParameterType	const RAnalFunction *		4058352	0					
ANR	4058388	Identifier	a		4058352	1					
ANR	4058389	Parameter	const RAnalFunction * b	67:47:2113:2134	4058352	1	True				
ANR	4058390	ParameterType	const RAnalFunction *		4058352	0					
ANR	4058391	Identifier	b		4058352	1					
ANR	4058392	CFGEntryNode	ENTRY		4058352		True				
ANR	4058393	CFGExitNode	EXIT		4058352		True				
ANR	4058394	Symbol	a		4058352						
ANR	4058395	Symbol	b		4058352						
ANR	4058396	Symbol	* b -> diff		4058352						
ANR	4058397	Symbol	* a -> diff		4058352						
ANR	4058398	Symbol	b -> diff		4058352						
ANR	4058399	Symbol	* * b		4058352						
ANR	4058400	Symbol	* * a		4058352						
ANR	4058401	Symbol	b -> diff -> dist		4058352						
ANR	4058402	Symbol	* a		4058352						
ANR	4058403	Symbol	* b		4058352						
ANR	4058404	Symbol	a -> diff -> dist		4058352						
ANR	4058405	Symbol	a -> diff		4058352						
ANR	4058406	Function	cb_diff_sort	71:0:2225:3136							
ANR	4058407	FunctionDef	"cb_diff_sort (void * _core , void * _node)"		4058406	0					
ANR	4058408	CompoundStatement		71:51:2276:3136	4058406	0					
ANR	4058409	IdentifierDeclStatement	RConfigNode * node = _node ;	72:1:2279:2304	4058406	0	True				
ANR	4058410	IdentifierDecl	* node = _node		4058406	0					
ANR	4058411	IdentifierDeclType	RConfigNode *		4058406	0					
ANR	4058412	Identifier	node		4058406	1					
ANR	4058413	AssignmentExpression	* node = _node		4058406	2		=			
ANR	4058414	Identifier	_node		4058406	0					
ANR	4058415	Identifier	_node		4058406	1					
ANR	4058416	IdentifierDeclStatement	const char * column = node -> value ;	73:1:2307:2339	4058406	1	True				
ANR	4058417	IdentifierDecl	* column = node -> value		4058406	0					
ANR	4058418	IdentifierDeclType	const char *		4058406	0					
ANR	4058419	Identifier	column		4058406	1					
ANR	4058420	AssignmentExpression	* column = node -> value		4058406	2		=			
ANR	4058421	Identifier	column		4058406	0					
ANR	4058422	PtrMemberAccess	node -> value		4058406	1					
ANR	4058423	Identifier	node		4058406	0					
ANR	4058424	Identifier	value		4058406	1					
ANR	4058425	IdentifierDeclStatement	RCore * core = _core ;	74:1:2342:2361	4058406	2	True				
ANR	4058426	IdentifierDecl	* core = _core		4058406	0					
ANR	4058427	IdentifierDeclType	RCore *		4058406	0					
ANR	4058428	Identifier	core		4058406	1					
ANR	4058429	AssignmentExpression	* core = _core		4058406	2		=			
ANR	4058430	Identifier	_core		4058406	0					
ANR	4058431	Identifier	_core		4058406	1					
ANR	4058432	IfStatement	"if ( column && strcmp ( column , ""?"" ) )"		4058406	3					
ANR	4058433	Condition	"column && strcmp ( column , ""?"" )"	75:5:2368:2397	4058406	0	True				
ANR	4058434	AndExpression	"column && strcmp ( column , ""?"" )"		4058406	0		&&			
ANR	4058435	Identifier	column		4058406	0					
ANR	4058436	CallExpression	"strcmp ( column , ""?"" )"		4058406	1					
ANR	4058437	Callee	strcmp		4058406	0					
ANR	4058438	Identifier	strcmp		4058406	0					
ANR	4058439	ArgumentList	column		4058406	1					
ANR	4058440	Argument	column		4058406	0					
ANR	4058441	Identifier	column		4058406	0					
ANR	4058442	Argument	"""?"""		4058406	1					
ANR	4058443	PrimaryExpression	"""?"""		4058406	0					
ANR	4058444	CompoundStatement		5:37:123:123	4058406	1					
ANR	4058445	IfStatement	"if ( ! strcmp ( column , ""name"" ) )"		4058406	0					
ANR	4058446	Condition	"! strcmp ( column , ""name"" )"	76:6:2408:2431	4058406	0	True				
ANR	4058447	UnaryOperationExpression	"! strcmp ( column , ""name"" )"		4058406	0					
ANR	4058448	UnaryOperator	!		4058406	0					
ANR	4058449	CallExpression	"strcmp ( column , ""name"" )"		4058406	1					
ANR	4058450	Callee	strcmp		4058406	0					
ANR	4058451	Identifier	strcmp		4058406	0					
ANR	4058452	ArgumentList	column		4058406	1					
ANR	4058453	Argument	column		4058406	0					
ANR	4058454	Identifier	column		4058406	0					
ANR	4058455	Argument	"""name"""		4058406	1					
ANR	4058456	PrimaryExpression	"""name"""		4058406	0					
ANR	4058457	CompoundStatement		6:32:157:157	4058406	1					
ANR	4058458	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareName	77:3:2439:2492	4058406	0	True				
ANR	4058459	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareName		4058406	0		=			
ANR	4058460	PtrMemberAccess	core -> anal -> columnSort		4058406	0					
ANR	4058461	PtrMemberAccess	core -> anal		4058406	0					
ANR	4058462	Identifier	core		4058406	0					
ANR	4058463	Identifier	anal		4058406	1					
ANR	4058464	Identifier	columnSort		4058406	1					
ANR	4058465	CastExpression	( RListComparator ) compareName		4058406	1					
ANR	4058466	CastTarget	RListComparator		4058406	0					
ANR	4058467	Identifier	compareName		4058406	1					
ANR	4058468	ElseStatement	else		4058406	0					
ANR	4058469	IfStatement	"if ( ! strcmp ( column , ""namelen"" ) )"		4058406	0					
ANR	4058470	Condition	"! strcmp ( column , ""namelen"" )"	78:13:2507:2533	4058406	0	True				
ANR	4058471	UnaryOperationExpression	"! strcmp ( column , ""namelen"" )"		4058406	0					
ANR	4058472	UnaryOperator	!		4058406	0					
ANR	4058473	CallExpression	"strcmp ( column , ""namelen"" )"		4058406	1					
ANR	4058474	Callee	strcmp		4058406	0					
ANR	4058475	Identifier	strcmp		4058406	0					
ANR	4058476	ArgumentList	column		4058406	1					
ANR	4058477	Argument	column		4058406	0					
ANR	4058478	Identifier	column		4058406	0					
ANR	4058479	Argument	"""namelen"""		4058406	1					
ANR	4058480	PrimaryExpression	"""namelen"""		4058406	0					
ANR	4058481	CompoundStatement		8:42:259:259	4058406	1					
ANR	4058482	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareNameLen	79:3:2541:2597	4058406	0	True				
ANR	4058483	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareNameLen		4058406	0		=			
ANR	4058484	PtrMemberAccess	core -> anal -> columnSort		4058406	0					
ANR	4058485	PtrMemberAccess	core -> anal		4058406	0					
ANR	4058486	Identifier	core		4058406	0					
ANR	4058487	Identifier	anal		4058406	1					
ANR	4058488	Identifier	columnSort		4058406	1					
ANR	4058489	CastExpression	( RListComparator ) compareNameLen		4058406	1					
ANR	4058490	CastTarget	RListComparator		4058406	0					
ANR	4058491	Identifier	compareNameLen		4058406	1					
ANR	4058492	ElseStatement	else		4058406	0					
ANR	4058493	IfStatement	"if ( ! strcmp ( column , ""addr"" ) )"		4058406	0					
ANR	4058494	Condition	"! strcmp ( column , ""addr"" )"	80:13:2612:2635	4058406	0	True				
ANR	4058495	UnaryOperationExpression	"! strcmp ( column , ""addr"" )"		4058406	0					
ANR	4058496	UnaryOperator	!		4058406	0					
ANR	4058497	CallExpression	"strcmp ( column , ""addr"" )"		4058406	1					
ANR	4058498	Callee	strcmp		4058406	0					
ANR	4058499	Identifier	strcmp		4058406	0					
ANR	4058500	ArgumentList	column		4058406	1					
ANR	4058501	Argument	column		4058406	0					
ANR	4058502	Identifier	column		4058406	0					
ANR	4058503	Argument	"""addr"""		4058406	1					
ANR	4058504	PrimaryExpression	"""addr"""		4058406	0					
ANR	4058505	CompoundStatement		10:39:361:361	4058406	1					
ANR	4058506	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareAddress	81:3:2643:2699	4058406	0	True				
ANR	4058507	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareAddress		4058406	0		=			
ANR	4058508	PtrMemberAccess	core -> anal -> columnSort		4058406	0					
ANR	4058509	PtrMemberAccess	core -> anal		4058406	0					
ANR	4058510	Identifier	core		4058406	0					
ANR	4058511	Identifier	anal		4058406	1					
ANR	4058512	Identifier	columnSort		4058406	1					
ANR	4058513	CastExpression	( RListComparator ) compareAddress		4058406	1					
ANR	4058514	CastTarget	RListComparator		4058406	0					
ANR	4058515	Identifier	compareAddress		4058406	1					
ANR	4058516	ElseStatement	else		4058406	0					
ANR	4058517	IfStatement	"if ( ! strcmp ( column , ""type"" ) )"		4058406	0					
ANR	4058518	Condition	"! strcmp ( column , ""type"" )"	82:13:2714:2737	4058406	0	True				
ANR	4058519	UnaryOperationExpression	"! strcmp ( column , ""type"" )"		4058406	0					
ANR	4058520	UnaryOperator	!		4058406	0					
ANR	4058521	CallExpression	"strcmp ( column , ""type"" )"		4058406	1					
ANR	4058522	Callee	strcmp		4058406	0					
ANR	4058523	Identifier	strcmp		4058406	0					
ANR	4058524	ArgumentList	column		4058406	1					
ANR	4058525	Argument	column		4058406	0					
ANR	4058526	Identifier	column		4058406	0					
ANR	4058527	Argument	"""type"""		4058406	1					
ANR	4058528	PrimaryExpression	"""type"""		4058406	0					
ANR	4058529	CompoundStatement		12:39:463:463	4058406	1					
ANR	4058530	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareType	83:3:2745:2798	4058406	0	True				
ANR	4058531	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareType		4058406	0		=			
ANR	4058532	PtrMemberAccess	core -> anal -> columnSort		4058406	0					
ANR	4058533	PtrMemberAccess	core -> anal		4058406	0					
ANR	4058534	Identifier	core		4058406	0					
ANR	4058535	Identifier	anal		4058406	1					
ANR	4058536	Identifier	columnSort		4058406	1					
ANR	4058537	CastExpression	( RListComparator ) compareType		4058406	1					
ANR	4058538	CastTarget	RListComparator		4058406	0					
ANR	4058539	Identifier	compareType		4058406	1					
ANR	4058540	ElseStatement	else		4058406	0					
ANR	4058541	IfStatement	"if ( ! strcmp ( column , ""size"" ) )"		4058406	0					
ANR	4058542	Condition	"! strcmp ( column , ""size"" )"	84:13:2813:2836	4058406	0	True				
ANR	4058543	UnaryOperationExpression	"! strcmp ( column , ""size"" )"		4058406	0					
ANR	4058544	UnaryOperator	!		4058406	0					
ANR	4058545	CallExpression	"strcmp ( column , ""size"" )"		4058406	1					
ANR	4058546	Callee	strcmp		4058406	0					
ANR	4058547	Identifier	strcmp		4058406	0					
ANR	4058548	ArgumentList	column		4058406	1					
ANR	4058549	Argument	column		4058406	0					
ANR	4058550	Identifier	column		4058406	0					
ANR	4058551	Argument	"""size"""		4058406	1					
ANR	4058552	PrimaryExpression	"""size"""		4058406	0					
ANR	4058553	CompoundStatement		14:39:562:562	4058406	1					
ANR	4058554	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareSize	85:3:2844:2897	4058406	0	True				
ANR	4058555	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareSize		4058406	0		=			
ANR	4058556	PtrMemberAccess	core -> anal -> columnSort		4058406	0					
ANR	4058557	PtrMemberAccess	core -> anal		4058406	0					
ANR	4058558	Identifier	core		4058406	0					
ANR	4058559	Identifier	anal		4058406	1					
ANR	4058560	Identifier	columnSort		4058406	1					
ANR	4058561	CastExpression	( RListComparator ) compareSize		4058406	1					
ANR	4058562	CastTarget	RListComparator		4058406	0					
ANR	4058563	Identifier	compareSize		4058406	1					
ANR	4058564	ElseStatement	else		4058406	0					
ANR	4058565	IfStatement	"if ( ! strcmp ( column , ""dist"" ) )"		4058406	0					
ANR	4058566	Condition	"! strcmp ( column , ""dist"" )"	86:13:2912:2935	4058406	0	True				
ANR	4058567	UnaryOperationExpression	"! strcmp ( column , ""dist"" )"		4058406	0					
ANR	4058568	UnaryOperator	!		4058406	0					
ANR	4058569	CallExpression	"strcmp ( column , ""dist"" )"		4058406	1					
ANR	4058570	Callee	strcmp		4058406	0					
ANR	4058571	Identifier	strcmp		4058406	0					
ANR	4058572	ArgumentList	column		4058406	1					
ANR	4058573	Argument	column		4058406	0					
ANR	4058574	Identifier	column		4058406	0					
ANR	4058575	Argument	"""dist"""		4058406	1					
ANR	4058576	PrimaryExpression	"""dist"""		4058406	0					
ANR	4058577	CompoundStatement		16:39:661:661	4058406	1					
ANR	4058578	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareDist	87:3:2943:2996	4058406	0	True				
ANR	4058579	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareDist		4058406	0		=			
ANR	4058580	PtrMemberAccess	core -> anal -> columnSort		4058406	0					
ANR	4058581	PtrMemberAccess	core -> anal		4058406	0					
ANR	4058582	Identifier	core		4058406	0					
ANR	4058583	Identifier	anal		4058406	1					
ANR	4058584	Identifier	columnSort		4058406	1					
ANR	4058585	CastExpression	( RListComparator ) compareDist		4058406	1					
ANR	4058586	CastTarget	RListComparator		4058406	0					
ANR	4058587	Identifier	compareDist		4058406	1					
ANR	4058588	ElseStatement	else		4058406	0					
ANR	4058589	CompoundStatement		18:9:730:730	4058406	0					
ANR	4058590	GotoStatement	goto fail ;	89:3:3012:3021	4058406	0	True				
ANR	4058591	Identifier	fail		4058406	0					
ANR	4058592	ReturnStatement	return true ;	91:2:3029:3040	4058406	1	True				
ANR	4058593	Identifier	true		4058406	0					
ANR	4058594	Label	fail :	93:0:3045:3049	4058406	4	True				
ANR	4058595	Identifier	fail		4058406	0					
ANR	4058596	ExpressionStatement	"eprintf ( ""e diff.sort = [name, namelen, addr, type, size, dist]\\n"" )"	94:1:3052:3119	4058406	5	True				
ANR	4058597	CallExpression	"eprintf ( ""e diff.sort = [name, namelen, addr, type, size, dist]\\n"" )"		4058406	0					
ANR	4058598	Callee	eprintf		4058406	0					
ANR	4058599	Identifier	eprintf		4058406	0					
ANR	4058600	ArgumentList	"""e diff.sort = [name, namelen, addr, type, size, dist]\\n"""		4058406	1					
ANR	4058601	Argument	"""e diff.sort = [name, namelen, addr, type, size, dist]\\n"""		4058406	0					
ANR	4058602	PrimaryExpression	"""e diff.sort = [name, namelen, addr, type, size, dist]\\n"""		4058406	0					
ANR	4058603	ReturnStatement	return false ;	95:1:3122:3134	4058406	6	True				
ANR	4058604	Identifier	false		4058406	0					
ANR	4058605	ReturnType	static bool		4058406	1					
ANR	4058606	Identifier	cb_diff_sort		4058406	2					
ANR	4058607	ParameterList	"void * _core , void * _node"		4058406	3					
ANR	4058608	Parameter	void * _core	71:25:2250:2260	4058406	0	True				
ANR	4058609	ParameterType	void *		4058406	0					
ANR	4058610	Identifier	_core		4058406	1					
ANR	4058611	Parameter	void * _node	71:38:2263:2273	4058406	1	True				
ANR	4058612	ParameterType	void *		4058406	0					
ANR	4058613	Identifier	_node		4058406	1					
ANR	4058614	CFGEntryNode	ENTRY		4058406		True				
ANR	4058615	CFGExitNode	EXIT		4058406		True				
ANR	4058616	Symbol	strcmp		4058406						
ANR	4058617	Symbol	compareNameLen		4058406						
ANR	4058618	Symbol	column		4058406						
ANR	4058619	Symbol	* core		4058406						
ANR	4058620	Symbol	false		4058406						
ANR	4058621	Symbol	core -> anal		4058406						
ANR	4058622	Symbol	compareSize		4058406						
ANR	4058623	Symbol	_node		4058406						
ANR	4058624	Symbol	node -> value		4058406						
ANR	4058625	Symbol	compareDist		4058406						
ANR	4058626	Symbol	node		4058406						
ANR	4058627	Symbol	core		4058406						
ANR	4058628	Symbol	* core -> anal		4058406						
ANR	4058629	Symbol	compareType		4058406						
ANR	4058630	Symbol	compareAddress		4058406						
ANR	4058631	Symbol	_core		4058406						
ANR	4058632	Symbol	true		4058406						
ANR	4058633	Symbol	core -> anal -> columnSort		4058406						
ANR	4058634	Symbol	compareName		4058406						
ANR	4058635	Symbol	* node		4058406						
ANR	4058636	Symbol	* * core		4058406						
ANR	4058637	Function	has_esil	98:0:3139:3438							
ANR	4058638	FunctionDef	"has_esil (RCore * core , const char * name)"		4058637	0					
ANR	4058639	CompoundStatement		98:59:3198:3438	4058637	0					
ANR	4058640	IdentifierDeclStatement	RListIter * iter ;	99:1:3201:3216	4058637	0	True				
ANR	4058641	IdentifierDecl	* iter		4058637	0					
ANR	4058642	IdentifierDeclType	RListIter *		4058637	0					
ANR	4058643	Identifier	iter		4058637	1					
ANR	4058644	IdentifierDeclStatement	RAnalPlugin * h ;	100:1:3219:3233	4058637	1	True				
ANR	4058645	IdentifierDecl	* h		4058637	0					
ANR	4058646	IdentifierDeclType	RAnalPlugin *		4058637	0					
ANR	4058647	Identifier	h		4058637	1					
ANR	4058648	ExpressionStatement	"r_return_val_if_fail ( core && core -> anal && name , NULL )"	101:1:3236:3291	4058637	2	True				
ANR	4058649	CallExpression	"r_return_val_if_fail ( core && core -> anal && name , NULL )"		4058637	0					
ANR	4058650	Callee	r_return_val_if_fail		4058637	0					
ANR	4058651	Identifier	r_return_val_if_fail		4058637	0					
ANR	4058652	ArgumentList	core && core -> anal && name		4058637	1					
ANR	4058653	Argument	core && core -> anal && name		4058637	0					
ANR	4058654	AndExpression	core && core -> anal && name		4058637	0		&&			
ANR	4058655	Identifier	core		4058637	0					
ANR	4058656	AndExpression	core -> anal && name		4058637	1		&&			
ANR	4058657	PtrMemberAccess	core -> anal		4058637	0					
ANR	4058658	Identifier	core		4058637	0					
ANR	4058659	Identifier	anal		4058637	1					
ANR	4058660	Identifier	name		4058637	1					
ANR	4058661	Argument	NULL		4058637	1					
ANR	4058662	Identifier	NULL		4058637	0					
ANR	4058663	Statement	r_list_foreach	102:1:3294:3307	4058637	3	True				
ANR	4058664	Statement	(	102:16:3309:3309	4058637	4	True				
ANR	4058665	Statement	core	102:17:3310:3313	4058637	5	True				
ANR	4058666	Statement	->	102:21:3314:3315	4058637	6	True				
ANR	4058667	Statement	anal	102:23:3316:3319	4058637	7	True				
ANR	4058668	Statement	->	102:27:3320:3321	4058637	8	True				
ANR	4058669	Statement	plugins	102:29:3322:3328	4058637	9	True				
ANR	4058670	Statement	","	102:36:3329:3329	4058637	10	True				
ANR	4058671	Statement	iter	102:38:3331:3334	4058637	11	True				
ANR	4058672	Statement	","	102:42:3335:3335	4058637	12	True				
ANR	4058673	Statement	h	102:44:3337:3337	4058637	13	True				
ANR	4058674	Statement	)	102:45:3338:3338	4058637	14	True				
ANR	4058675	CompoundStatement		5:47:141:141	4058637	15					
ANR	4058676	IfStatement	"if ( h -> name && ! strcmp ( name , h -> name ) )"		4058637	0					
ANR	4058677	Condition	"h -> name && ! strcmp ( name , h -> name )"	103:6:3348:3381	4058637	0	True				
ANR	4058678	AndExpression	"h -> name && ! strcmp ( name , h -> name )"		4058637	0		&&			
ANR	4058679	PtrMemberAccess	h -> name		4058637	0					
ANR	4058680	Identifier	h		4058637	0					
ANR	4058681	Identifier	name		4058637	1					
ANR	4058682	UnaryOperationExpression	"! strcmp ( name , h -> name )"		4058637	1					
ANR	4058683	UnaryOperator	!		4058637	0					
ANR	4058684	CallExpression	"strcmp ( name , h -> name )"		4058637	1					
ANR	4058685	Callee	strcmp		4058637	0					
ANR	4058686	Identifier	strcmp		4058637	0					
ANR	4058687	ArgumentList	name		4058637	1					
ANR	4058688	Argument	name		4058637	0					
ANR	4058689	Identifier	name		4058637	0					
ANR	4058690	Argument	h -> name		4058637	1					
ANR	4058691	PtrMemberAccess	h -> name		4058637	0					
ANR	4058692	Identifier	h		4058637	0					
ANR	4058693	Identifier	name		4058637	1					
ANR	4058694	CompoundStatement		6:42:185:185	4058637	1					
ANR	4058695	ReturnStatement	"return h -> esil ? ""Ae"" : ""A_"" ;"	104:3:3389:3415	4058637	0	True				
ANR	4058696	ConditionalExpression	"h -> esil ? ""Ae"" : ""A_"""		4058637	0					
ANR	4058697	Condition	h -> esil		4058637	0					
ANR	4058698	PtrMemberAccess	h -> esil		4058637	0					
ANR	4058699	Identifier	h		4058637	0					
ANR	4058700	Identifier	esil		4058637	1					
ANR	4058701	PrimaryExpression	"""Ae"""		4058637	1					
ANR	4058702	PrimaryExpression	"""A_"""		4058637	2					
ANR	4058703	ReturnStatement	"return ""__"" ;"	107:1:3425:3436	4058637	16	True				
ANR	4058704	PrimaryExpression	"""__"""		4058637	0					
ANR	4058705	ReturnType	static const char *		4058637	1					
ANR	4058706	Identifier	has_esil		4058637	2					
ANR	4058707	ParameterList	"RCore * core , const char * name"		4058637	3					
ANR	4058708	Parameter	RCore * core	98:28:3167:3177	4058637	0	True				
ANR	4058709	ParameterType	RCore *		4058637	0					
ANR	4058710	Identifier	core		4058637	1					
ANR	4058711	Parameter	const char * name	98:41:3180:3195	4058637	1	True				
ANR	4058712	ParameterType	const char *		4058637	0					
ANR	4058713	Identifier	name		4058637	1					
ANR	4058714	CFGEntryNode	ENTRY		4058637		True				
ANR	4058715	CFGExitNode	EXIT		4058637		True				
ANR	4058716	Symbol	strcmp		4058637						
ANR	4058717	Symbol	core		4058637						
ANR	4058718	Symbol	* h		4058637						
ANR	4058719	Symbol	h -> esil		4058637						
ANR	4058720	Symbol	NULL		4058637						
ANR	4058721	Symbol	name		4058637						
ANR	4058722	Symbol	h		4058637						
ANR	4058723	Symbol	* core		4058637						
ANR	4058724	Symbol	iter		4058637						
ANR	4058725	Symbol	core -> anal		4058637						
ANR	4058726	Symbol	h -> name		4058637						
ANR	4058727	Function	rasm2_list	111:0:3478:5257							
ANR	4058728	FunctionDef	"rasm2_list (RCore * core , const char * arch , int fmt)"		4058727	0					
ANR	4058729	CompoundStatement		111:63:3541:5257	4058727	0					
ANR	4058730	IdentifierDeclStatement	int i ;	112:1:3544:3549	4058727	0	True				
ANR	4058731	IdentifierDecl	i		4058727	0					
ANR	4058732	IdentifierDeclType	int		4058727	0					
ANR	4058733	Identifier	i		4058727	1					
ANR	4058734	IdentifierDeclStatement	"const char * feat2 , * feat ;"	113:1:3552:3576	4058727	1	True				
ANR	4058735	IdentifierDecl	* feat2		4058727	0					
ANR	4058736	IdentifierDeclType	const char *		4058727	0					
ANR	4058737	Identifier	feat2		4058727	1					
ANR	4058738	IdentifierDecl	* feat		4058727	1					
ANR	4058739	IdentifierDeclType	const char *		4058727	0					
ANR	4058740	Identifier	feat		4058727	1					
ANR	4058741	IdentifierDeclStatement	RAsm * a = core -> assembler ;	114:1:3579:3604	4058727	2	True				
ANR	4058742	IdentifierDecl	* a = core -> assembler		4058727	0					
ANR	4058743	IdentifierDeclType	RAsm *		4058727	0					
ANR	4058744	Identifier	a		4058727	1					
ANR	4058745	AssignmentExpression	* a = core -> assembler		4058727	2		=			
ANR	4058746	Identifier	a		4058727	0					
ANR	4058747	PtrMemberAccess	core -> assembler		4058727	1					
ANR	4058748	Identifier	core		4058727	0					
ANR	4058749	Identifier	assembler		4058727	1					
ANR	4058750	IdentifierDeclStatement	char bits [ 32 ] ;	115:1:3607:3620	4058727	3	True				
ANR	4058751	IdentifierDecl	bits [ 32 ]		4058727	0					
ANR	4058752	IdentifierDeclType	char [ 32 ]		4058727	0					
ANR	4058753	Identifier	bits		4058727	1					
ANR	4058754	PrimaryExpression	32		4058727	2					
ANR	4058755	IdentifierDeclStatement	RAsmPlugin * h ;	116:1:3623:3636	4058727	4	True				
ANR	4058756	IdentifierDecl	* h		4058727	0					
ANR	4058757	IdentifierDeclType	RAsmPlugin *		4058727	0					
ANR	4058758	Identifier	h		4058727	1					
ANR	4058759	IdentifierDeclStatement	RListIter * iter ;	117:1:3639:3654	4058727	5	True				
ANR	4058760	IdentifierDecl	* iter		4058727	0					
ANR	4058761	IdentifierDeclType	RListIter *		4058727	0					
ANR	4058762	Identifier	iter		4058727	1					
ANR	4058763	IdentifierDeclStatement	PJ * pj = NULL ;	118:1:3657:3670	4058727	6	True				
ANR	4058764	IdentifierDecl	* pj = NULL		4058727	0					
ANR	4058765	IdentifierDeclType	PJ *		4058727	0					
ANR	4058766	Identifier	pj		4058727	1					
ANR	4058767	AssignmentExpression	* pj = NULL		4058727	2		=			
ANR	4058768	Identifier	NULL		4058727	0					
ANR	4058769	Identifier	NULL		4058727	1					
ANR	4058770	IfStatement	if ( fmt == 'j' )		4058727	7					
ANR	4058771	Condition	fmt == 'j'	119:5:3677:3686	4058727	0	True				
ANR	4058772	EqualityExpression	fmt == 'j'		4058727	0		==			
ANR	4058773	Identifier	fmt		4058727	0					
ANR	4058774	PrimaryExpression	'j'		4058727	1					
ANR	4058775	CompoundStatement		9:17:147:147	4058727	1					
ANR	4058776	ExpressionStatement	pj = pj_new ( )	120:2:3693:3707	4058727	0	True				
ANR	4058777	AssignmentExpression	pj = pj_new ( )		4058727	0		=			
ANR	4058778	Identifier	pj		4058727	0					
ANR	4058779	CallExpression	pj_new ( )		4058727	1					
ANR	4058780	Callee	pj_new		4058727	0					
ANR	4058781	Identifier	pj_new		4058727	0					
ANR	4058782	ArgumentList			4058727	1					
ANR	4058783	IfStatement	if ( ! pj )		4058727	1					
ANR	4058784	Condition	! pj	121:6:3715:3717	4058727	0	True				
ANR	4058785	UnaryOperationExpression	! pj		4058727	0					
ANR	4058786	UnaryOperator	!		4058727	0					
ANR	4058787	Identifier	pj		4058727	1					
ANR	4058788	CompoundStatement		11:11:178:178	4058727	1					
ANR	4058789	ReturnStatement	return ;	122:3:3725:3731	4058727	0	True				
ANR	4058790	ExpressionStatement	pj_o ( pj )	124:2:3739:3748	4058727	2	True				
ANR	4058791	CallExpression	pj_o ( pj )		4058727	0					
ANR	4058792	Callee	pj_o		4058727	0					
ANR	4058793	Identifier	pj_o		4058727	0					
ANR	4058794	ArgumentList	pj		4058727	1					
ANR	4058795	Argument	pj		4058727	0					
ANR	4058796	Identifier	pj		4058727	0					
ANR	4058797	Statement	r_list_foreach	126:1:3754:3767	4058727	8	True				
ANR	4058798	Statement	(	126:16:3769:3769	4058727	9	True				
ANR	4058799	Statement	a	126:17:3770:3770	4058727	10	True				
ANR	4058800	Statement	->	126:18:3771:3772	4058727	11	True				
ANR	4058801	Statement	plugins	126:20:3773:3779	4058727	12	True				
ANR	4058802	Statement	","	126:27:3780:3780	4058727	13	True				
ANR	4058803	Statement	iter	126:29:3782:3785	4058727	14	True				
ANR	4058804	Statement	","	126:33:3786:3786	4058727	15	True				
ANR	4058805	Statement	h	126:35:3788:3788	4058727	16	True				
ANR	4058806	Statement	)	126:36:3789:3789	4058727	17	True				
ANR	4058807	CompoundStatement		16:38:249:249	4058727	18					
ANR	4058808	IfStatement	if ( arch && * arch )		4058727	0					
ANR	4058809	Condition	arch && * arch	127:6:3799:3811	4058727	0	True				
ANR	4058810	AndExpression	arch && * arch		4058727	0		&&			
ANR	4058811	Identifier	arch		4058727	0					
ANR	4058812	UnaryOperationExpression	* arch		4058727	1					
ANR	4058813	UnaryOperator	*		4058727	0					
ANR	4058814	Identifier	arch		4058727	1					
ANR	4058815	CompoundStatement		17:21:272:272	4058727	1					
ANR	4058816	IfStatement	"if ( h -> cpus && ! strcmp ( arch , h -> name ) )"		4058727	0					
ANR	4058817	Condition	"h -> cpus && ! strcmp ( arch , h -> name )"	128:7:3823:3856	4058727	0	True				
ANR	4058818	AndExpression	"h -> cpus && ! strcmp ( arch , h -> name )"		4058727	0		&&			
ANR	4058819	PtrMemberAccess	h -> cpus		4058727	0					
ANR	4058820	Identifier	h		4058727	0					
ANR	4058821	Identifier	cpus		4058727	1					
ANR	4058822	UnaryOperationExpression	"! strcmp ( arch , h -> name )"		4058727	1					
ANR	4058823	UnaryOperator	!		4058727	0					
ANR	4058824	CallExpression	"strcmp ( arch , h -> name )"		4058727	1					
ANR	4058825	Callee	strcmp		4058727	0					
ANR	4058826	Identifier	strcmp		4058727	0					
ANR	4058827	ArgumentList	arch		4058727	1					
ANR	4058828	Argument	arch		4058727	0					
ANR	4058829	Identifier	arch		4058727	0					
ANR	4058830	Argument	h -> name		4058727	1					
ANR	4058831	PtrMemberAccess	h -> name		4058727	0					
ANR	4058832	Identifier	h		4058727	0					
ANR	4058833	Identifier	name		4058727	1					
ANR	4058834	CompoundStatement		20:4:355:383	4058727	1					
ANR	4058835	IdentifierDeclStatement	char * c = strdup ( h -> cpus ) ;	129:4:3865:3891	4058727	0	True				
ANR	4058836	IdentifierDecl	* c = strdup ( h -> cpus )		4058727	0					
ANR	4058837	IdentifierDeclType	char *		4058727	0					
ANR	4058838	Identifier	c		4058727	1					
ANR	4058839	AssignmentExpression	* c = strdup ( h -> cpus )		4058727	2		=			
ANR	4058840	Identifier	c		4058727	0					
ANR	4058841	CallExpression	strdup ( h -> cpus )		4058727	1					
ANR	4058842	Callee	strdup		4058727	0					
ANR	4058843	Identifier	strdup		4058727	0					
ANR	4058844	ArgumentList	h -> cpus		4058727	1					
ANR	4058845	Argument	h -> cpus		4058727	0					
ANR	4058846	PtrMemberAccess	h -> cpus		4058727	0					
ANR	4058847	Identifier	h		4058727	0					
ANR	4058848	Identifier	cpus		4058727	1					
ANR	4058849	IdentifierDeclStatement	"int n = r_str_split ( c , ',' ) ;"	130:4:3897:3925	4058727	1	True				
ANR	4058850	IdentifierDecl	"n = r_str_split ( c , ',' )"		4058727	0					
ANR	4058851	IdentifierDeclType	int		4058727	0					
ANR	4058852	Identifier	n		4058727	1					
ANR	4058853	AssignmentExpression	"n = r_str_split ( c , ',' )"		4058727	2		=			
ANR	4058854	Identifier	n		4058727	0					
ANR	4058855	CallExpression	"r_str_split ( c , ',' )"		4058727	1					
ANR	4058856	Callee	r_str_split		4058727	0					
ANR	4058857	Identifier	r_str_split		4058727	0					
ANR	4058858	ArgumentList	c		4058727	1					
ANR	4058859	Argument	c		4058727	0					
ANR	4058860	Identifier	c		4058727	0					
ANR	4058861	Argument	"','"		4058727	1					
ANR	4058862	PrimaryExpression	"','"		4058727	0					
ANR	4058863	ForStatement	for ( i = 0 ; i < n ; i ++ )		4058727	2					
ANR	4058864	ForInit	i = 0 ;	131:9:3936:3941	4058727	0	True				
ANR	4058865	AssignmentExpression	i = 0		4058727	0		=			
ANR	4058866	Identifier	i		4058727	0					
ANR	4058867	PrimaryExpression	0		4058727	1					
ANR	4058868	Condition	i < n	131:16:3943:3947	4058727	1	True				
ANR	4058869	RelationalExpression	i < n		4058727	0		<			
ANR	4058870	Identifier	i		4058727	0					
ANR	4058871	Identifier	n		4058727	1					
ANR	4058872	PostIncDecOperationExpression	i ++	131:23:3950:3952	4058727	2	True				
ANR	4058873	Identifier	i		4058727	0					
ANR	4058874	IncDec	++		4058727	1					
ANR	4058875	CompoundStatement		21:28:413:413	4058727	3					
ANR	4058876	ExpressionStatement	"r_cons_println ( r_str_word_get0 ( c , i ) )"	132:5:3962:4001	4058727	0	True				
ANR	4058877	CallExpression	"r_cons_println ( r_str_word_get0 ( c , i ) )"		4058727	0					
ANR	4058878	Callee	r_cons_println		4058727	0					
ANR	4058879	Identifier	r_cons_println		4058727	0					
ANR	4058880	ArgumentList	"r_str_word_get0 ( c , i )"		4058727	1					
ANR	4058881	Argument	"r_str_word_get0 ( c , i )"		4058727	0					
ANR	4058882	CallExpression	"r_str_word_get0 ( c , i )"		4058727	0					
ANR	4058883	Callee	r_str_word_get0		4058727	0					
ANR	4058884	Identifier	r_str_word_get0		4058727	0					
ANR	4058885	ArgumentList	c		4058727	1					
ANR	4058886	Argument	c		4058727	0					
ANR	4058887	Identifier	c		4058727	0					
ANR	4058888	Argument	i		4058727	1					
ANR	4058889	Identifier	i		4058727	0					
ANR	4058890	ExpressionStatement	free ( c )	134:4:4013:4021	4058727	3	True				
ANR	4058891	CallExpression	free ( c )		4058727	0					
ANR	4058892	Callee	free		4058727	0					
ANR	4058893	Identifier	free		4058727	0					
ANR	4058894	ArgumentList	c		4058727	1					
ANR	4058895	Argument	c		4058727	0					
ANR	4058896	Identifier	c		4058727	0					
ANR	4058897	BreakStatement	break ;	135:4:4027:4032	4058727	4	True				
ANR	4058898	ElseStatement	else		4058727	0					
ANR	4058899	CompoundStatement		27:9:506:506	4058727	0					
ANR	4058900	ExpressionStatement	bits [ 0 ] = 0	138:3:4053:4064	4058727	0	True				
ANR	4058901	AssignmentExpression	bits [ 0 ] = 0		4058727	0		=			
ANR	4058902	ArrayIndexing	bits [ 0 ]		4058727	0					
ANR	4058903	Identifier	bits		4058727	0					
ANR	4058904	PrimaryExpression	0		4058727	1					
ANR	4058905	PrimaryExpression	0		4058727	1					
ANR	4058906	IfStatement	if ( h -> bits & 8 )		4058727	1					
ANR	4058907	Condition	h -> bits & 8	141:7:4146:4156	4058727	0	True				
ANR	4058908	BitAndExpression	h -> bits & 8		4058727	0		&			
ANR	4058909	PtrMemberAccess	h -> bits		4058727	0					
ANR	4058910	Identifier	h		4058727	0					
ANR	4058911	Identifier	bits		4058727	1					
ANR	4058912	PrimaryExpression	8		4058727	1					
ANR	4058913	CompoundStatement		31:20:617:617	4058727	1					
ANR	4058914	ExpressionStatement	"strcat ( bits , ""_8"" )"	142:4:4165:4184	4058727	0	True				
ANR	4058915	CallExpression	"strcat ( bits , ""_8"" )"		4058727	0					
ANR	4058916	Callee	strcat		4058727	0					
ANR	4058917	Identifier	strcat		4058727	0					
ANR	4058918	ArgumentList	bits		4058727	1					
ANR	4058919	Argument	bits		4058727	0					
ANR	4058920	Identifier	bits		4058727	0					
ANR	4058921	Argument	"""_8"""		4058727	1					
ANR	4058922	PrimaryExpression	"""_8"""		4058727	0					
ANR	4058923	IfStatement	if ( h -> bits & 16 )		4058727	2					
ANR	4058924	Condition	h -> bits & 16	144:7:4198:4209	4058727	0	True				
ANR	4058925	BitAndExpression	h -> bits & 16		4058727	0		&			
ANR	4058926	PtrMemberAccess	h -> bits		4058727	0					
ANR	4058927	Identifier	h		4058727	0					
ANR	4058928	Identifier	bits		4058727	1					
ANR	4058929	PrimaryExpression	16		4058727	1					
ANR	4058930	CompoundStatement		34:21:670:670	4058727	1					
ANR	4058931	ExpressionStatement	"strcat ( bits , ""_16"" )"	145:4:4218:4238	4058727	0	True				
ANR	4058932	CallExpression	"strcat ( bits , ""_16"" )"		4058727	0					
ANR	4058933	Callee	strcat		4058727	0					
ANR	4058934	Identifier	strcat		4058727	0					
ANR	4058935	ArgumentList	bits		4058727	1					
ANR	4058936	Argument	bits		4058727	0					
ANR	4058937	Identifier	bits		4058727	0					
ANR	4058938	Argument	"""_16"""		4058727	1					
ANR	4058939	PrimaryExpression	"""_16"""		4058727	0					
ANR	4058940	IfStatement	if ( h -> bits & 32 )		4058727	3					
ANR	4058941	Condition	h -> bits & 32	147:7:4252:4263	4058727	0	True				
ANR	4058942	BitAndExpression	h -> bits & 32		4058727	0		&			
ANR	4058943	PtrMemberAccess	h -> bits		4058727	0					
ANR	4058944	Identifier	h		4058727	0					
ANR	4058945	Identifier	bits		4058727	1					
ANR	4058946	PrimaryExpression	32		4058727	1					
ANR	4058947	CompoundStatement		37:21:724:724	4058727	1					
ANR	4058948	ExpressionStatement	"strcat ( bits , ""_32"" )"	148:4:4272:4292	4058727	0	True				
ANR	4058949	CallExpression	"strcat ( bits , ""_32"" )"		4058727	0					
ANR	4058950	Callee	strcat		4058727	0					
ANR	4058951	Identifier	strcat		4058727	0					
ANR	4058952	ArgumentList	bits		4058727	1					
ANR	4058953	Argument	bits		4058727	0					
ANR	4058954	Identifier	bits		4058727	0					
ANR	4058955	Argument	"""_32"""		4058727	1					
ANR	4058956	PrimaryExpression	"""_32"""		4058727	0					
ANR	4058957	IfStatement	if ( h -> bits & 64 )		4058727	4					
ANR	4058958	Condition	h -> bits & 64	150:7:4306:4317	4058727	0	True				
ANR	4058959	BitAndExpression	h -> bits & 64		4058727	0		&			
ANR	4058960	PtrMemberAccess	h -> bits		4058727	0					
ANR	4058961	Identifier	h		4058727	0					
ANR	4058962	Identifier	bits		4058727	1					
ANR	4058963	PrimaryExpression	64		4058727	1					
ANR	4058964	CompoundStatement		40:21:778:778	4058727	1					
ANR	4058965	ExpressionStatement	"strcat ( bits , ""_64"" )"	151:4:4326:4346	4058727	0	True				
ANR	4058966	CallExpression	"strcat ( bits , ""_64"" )"		4058727	0					
ANR	4058967	Callee	strcat		4058727	0					
ANR	4058968	Identifier	strcat		4058727	0					
ANR	4058969	ArgumentList	bits		4058727	1					
ANR	4058970	Argument	bits		4058727	0					
ANR	4058971	Identifier	bits		4058727	0					
ANR	4058972	Argument	"""_64"""		4058727	1					
ANR	4058973	PrimaryExpression	"""_64"""		4058727	0					
ANR	4058974	IfStatement	if ( ! * bits )		4058727	5					
ANR	4058975	Condition	! * bits	153:7:4360:4365	4058727	0	True				
ANR	4058976	UnaryOperationExpression	! * bits		4058727	0					
ANR	4058977	UnaryOperator	!		4058727	0					
ANR	4058978	UnaryOperationExpression	* bits		4058727	1					
ANR	4058979	UnaryOperator	*		4058727	0					
ANR	4058980	Identifier	bits		4058727	1					
ANR	4058981	CompoundStatement		43:15:826:826	4058727	1					
ANR	4058982	ExpressionStatement	"strcat ( bits , ""_0"" )"	154:4:4374:4393	4058727	0	True				
ANR	4058983	CallExpression	"strcat ( bits , ""_0"" )"		4058727	0					
ANR	4058984	Callee	strcat		4058727	0					
ANR	4058985	Identifier	strcat		4058727	0					
ANR	4058986	ArgumentList	bits		4058727	1					
ANR	4058987	Argument	bits		4058727	0					
ANR	4058988	Identifier	bits		4058727	0					
ANR	4058989	Argument	"""_0"""		4058727	1					
ANR	4058990	PrimaryExpression	"""_0"""		4058727	0					
ANR	4058991	ExpressionStatement	"feat = ""__"""	156:3:4403:4414	4058727	6	True				
ANR	4058992	AssignmentExpression	"feat = ""__"""		4058727	0		=			
ANR	4058993	Identifier	feat		4058727	0					
ANR	4058994	PrimaryExpression	"""__"""		4058727	1					
ANR	4058995	IfStatement	if ( h -> assemble && h -> disassemble )		4058727	7					
ANR	4058996	Condition	h -> assemble && h -> disassemble	157:7:4423:4451	4058727	0	True				
ANR	4058997	AndExpression	h -> assemble && h -> disassemble		4058727	0		&&			
ANR	4058998	PtrMemberAccess	h -> assemble		4058727	0					
ANR	4058999	Identifier	h		4058727	0					
ANR	4059000	Identifier	assemble		4058727	1					
ANR	4059001	PtrMemberAccess	h -> disassemble		4058727	1					
ANR	4059002	Identifier	h		4058727	0					
ANR	4059003	Identifier	disassemble		4058727	1					
ANR	4059004	CompoundStatement		47:38:912:912	4058727	1					
ANR	4059005	ExpressionStatement	"feat = ""ad"""	158:4:4460:4471	4058727	0	True				
ANR	4059006	AssignmentExpression	"feat = ""ad"""		4058727	0		=			
ANR	4059007	Identifier	feat		4058727	0					
ANR	4059008	PrimaryExpression	"""ad"""		4058727	1					
ANR	4059009	IfStatement	if ( h -> assemble && ! h -> disassemble )		4058727	8					
ANR	4059010	Condition	h -> assemble && ! h -> disassemble	160:7:4485:4514	4058727	0	True				
ANR	4059011	AndExpression	h -> assemble && ! h -> disassemble		4058727	0		&&			
ANR	4059012	PtrMemberAccess	h -> assemble		4058727	0					
ANR	4059013	Identifier	h		4058727	0					
ANR	4059014	Identifier	assemble		4058727	1					
ANR	4059015	UnaryOperationExpression	! h -> disassemble		4058727	1					
ANR	4059016	UnaryOperator	!		4058727	0					
ANR	4059017	PtrMemberAccess	h -> disassemble		4058727	1					
ANR	4059018	Identifier	h		4058727	0					
ANR	4059019	Identifier	disassemble		4058727	1					
ANR	4059020	CompoundStatement		50:39:975:975	4058727	1					
ANR	4059021	ExpressionStatement	"feat = ""a_"""	161:4:4523:4534	4058727	0	True				
ANR	4059022	AssignmentExpression	"feat = ""a_"""		4058727	0		=			
ANR	4059023	Identifier	feat		4058727	0					
ANR	4059024	PrimaryExpression	"""a_"""		4058727	1					
ANR	4059025	IfStatement	if ( ! h -> assemble && h -> disassemble )		4058727	9					
ANR	4059026	Condition	! h -> assemble && h -> disassemble	163:7:4548:4577	4058727	0	True				
ANR	4059027	AndExpression	! h -> assemble && h -> disassemble		4058727	0		&&			
ANR	4059028	UnaryOperationExpression	! h -> assemble		4058727	0					
ANR	4059029	UnaryOperator	!		4058727	0					
ANR	4059030	PtrMemberAccess	h -> assemble		4058727	1					
ANR	4059031	Identifier	h		4058727	0					
ANR	4059032	Identifier	assemble		4058727	1					
ANR	4059033	PtrMemberAccess	h -> disassemble		4058727	1					
ANR	4059034	Identifier	h		4058727	0					
ANR	4059035	Identifier	disassemble		4058727	1					
ANR	4059036	CompoundStatement		53:39:1038:1038	4058727	1					
ANR	4059037	ExpressionStatement	"feat = ""_d"""	164:4:4586:4597	4058727	0	True				
ANR	4059038	AssignmentExpression	"feat = ""_d"""		4058727	0		=			
ANR	4059039	Identifier	feat		4058727	0					
ANR	4059040	PrimaryExpression	"""_d"""		4058727	1					
ANR	4059041	ExpressionStatement	"feat2 = has_esil ( core , h -> name )"	166:3:4607:4639	4058727	10	True				
ANR	4059042	AssignmentExpression	"feat2 = has_esil ( core , h -> name )"		4058727	0		=			
ANR	4059043	Identifier	feat2		4058727	0					
ANR	4059044	CallExpression	"has_esil ( core , h -> name )"		4058727	1					
ANR	4059045	Callee	has_esil		4058727	0					
ANR	4059046	Identifier	has_esil		4058727	0					
ANR	4059047	ArgumentList	core		4058727	1					
ANR	4059048	Argument	core		4058727	0					
ANR	4059049	Identifier	core		4058727	0					
ANR	4059050	Argument	h -> name		4058727	1					
ANR	4059051	PtrMemberAccess	h -> name		4058727	0					
ANR	4059052	Identifier	h		4058727	0					
ANR	4059053	Identifier	name		4058727	1					
ANR	4059054	IfStatement	if ( fmt == 'q' )		4058727	11					
ANR	4059055	Condition	fmt == 'q'	167:7:4648:4657	4058727	0	True				
ANR	4059056	EqualityExpression	fmt == 'q'		4058727	0		==			
ANR	4059057	Identifier	fmt		4058727	0					
ANR	4059058	PrimaryExpression	'q'		4058727	1					
ANR	4059059	CompoundStatement		57:19:1118:1118	4058727	1					
ANR	4059060	ExpressionStatement	r_cons_println ( h -> name )	168:4:4666:4690	4058727	0	True				
ANR	4059061	CallExpression	r_cons_println ( h -> name )		4058727	0					
ANR	4059062	Callee	r_cons_println		4058727	0					
ANR	4059063	Identifier	r_cons_println		4058727	0					
ANR	4059064	ArgumentList	h -> name		4058727	1					
ANR	4059065	Argument	h -> name		4058727	0					
ANR	4059066	PtrMemberAccess	h -> name		4058727	0					
ANR	4059067	Identifier	h		4058727	0					
ANR	4059068	Identifier	name		4058727	1					
ANR	4059069	ElseStatement	else		4058727	0					
ANR	4059070	IfStatement	if ( fmt == 'j' )		4058727	0					
ANR	4059071	Condition	fmt == 'j'	169:14:4706:4715	4058727	0	True				
ANR	4059072	EqualityExpression	fmt == 'j'		4058727	0		==			
ANR	4059073	Identifier	fmt		4058727	0					
ANR	4059074	PrimaryExpression	'j'		4058727	1					
ANR	4059075	CompoundStatement		60:4:1182:1209	4058727	1					
ANR	4059076	IdentifierDeclStatement	"const char * license = ""GPL"" ;"	170:4:4724:4751	4058727	0	True				
ANR	4059077	IdentifierDecl	"* license = ""GPL"""		4058727	0					
ANR	4059078	IdentifierDeclType	const char *		4058727	0					
ANR	4059079	Identifier	license		4058727	1					
ANR	4059080	AssignmentExpression	"* license = ""GPL"""		4058727	2		=			
ANR	4059081	Identifier	license		4058727	0					
ANR	4059082	PrimaryExpression	"""GPL"""		4058727	1					
ANR	4059083	ExpressionStatement	"pj_k ( pj , h -> name )"	171:4:4757:4775	4058727	1	True				
ANR	4059084	CallExpression	"pj_k ( pj , h -> name )"		4058727	0					
ANR	4059085	Callee	pj_k		4058727	0					
ANR	4059086	Identifier	pj_k		4058727	0					
ANR	4059087	ArgumentList	pj		4058727	1					
ANR	4059088	Argument	pj		4058727	0					
ANR	4059089	Identifier	pj		4058727	0					
ANR	4059090	Argument	h -> name		4058727	1					
ANR	4059091	PtrMemberAccess	h -> name		4058727	0					
ANR	4059092	Identifier	h		4058727	0					
ANR	4059093	Identifier	name		4058727	1					
ANR	4059094	ExpressionStatement	pj_o ( pj )	172:4:4781:4790	4058727	2	True				
ANR	4059095	CallExpression	pj_o ( pj )		4058727	0					
ANR	4059096	Callee	pj_o		4058727	0					
ANR	4059097	Identifier	pj_o		4058727	0					
ANR	4059098	ArgumentList	pj		4058727	1					
ANR	4059099	Argument	pj		4058727	0					
ANR	4059100	Identifier	pj		4058727	0					
ANR	4059101	ExpressionStatement	"pj_k ( pj , ""bits"" )"	173:4:4796:4813	4058727	3	True				
ANR	4059102	CallExpression	"pj_k ( pj , ""bits"" )"		4058727	0					
ANR	4059103	Callee	pj_k		4058727	0					
ANR	4059104	Identifier	pj_k		4058727	0					
ANR	4059105	ArgumentList	pj		4058727	1					
ANR	4059106	Argument	pj		4058727	0					
ANR	4059107	Identifier	pj		4058727	0					
ANR	4059108	Argument	"""bits"""		4058727	1					
ANR	4059109	PrimaryExpression	"""bits"""		4058727	0					
ANR	4059110	ExpressionStatement	pj_a ( pj )	174:4:4819:4828	4058727	4	True				
ANR	4059111	CallExpression	pj_a ( pj )		4058727	0					
ANR	4059112	Callee	pj_a		4058727	0					
ANR	4059113	Identifier	pj_a		4058727	0					
ANR	4059114	ArgumentList	pj		4058727	1					
ANR	4059115	Argument	pj		4058727	0					
ANR	4059116	Identifier	pj		4058727	0					
ANR	4059117	ExpressionStatement	"pj_i ( pj , 32 )"	175:4:4834:4847	4058727	5	True				
ANR	4059118	CallExpression	"pj_i ( pj , 32 )"		4058727	0					
ANR	4059119	Callee	pj_i		4058727	0					
ANR	4059120	Identifier	pj_i		4058727	0					
ANR	4059121	ArgumentList	pj		4058727	1					
ANR	4059122	Argument	pj		4058727	0					
ANR	4059123	Identifier	pj		4058727	0					
ANR	4059124	Argument	32		4058727	1					
ANR	4059125	PrimaryExpression	32		4058727	0					
ANR	4059126	ExpressionStatement	"pj_i ( pj , 64 )"	176:4:4853:4866	4058727	6	True				
ANR	4059127	CallExpression	"pj_i ( pj , 64 )"		4058727	0					
ANR	4059128	Callee	pj_i		4058727	0					
ANR	4059129	Identifier	pj_i		4058727	0					
ANR	4059130	ArgumentList	pj		4058727	1					
ANR	4059131	Argument	pj		4058727	0					
ANR	4059132	Identifier	pj		4058727	0					
ANR	4059133	Argument	64		4058727	1					
ANR	4059134	PrimaryExpression	64		4058727	0					
ANR	4059135	ExpressionStatement	pj_end ( pj )	177:4:4872:4883	4058727	7	True				
ANR	4059136	CallExpression	pj_end ( pj )		4058727	0					
ANR	4059137	Callee	pj_end		4058727	0					
ANR	4059138	Identifier	pj_end		4058727	0					
ANR	4059139	ArgumentList	pj		4058727	1					
ANR	4059140	Argument	pj		4058727	0					
ANR	4059141	Identifier	pj		4058727	0					
ANR	4059142	ExpressionStatement	"pj_ks ( pj , ""license"" , license )"	178:4:4889:4919	4058727	8	True				
ANR	4059143	CallExpression	"pj_ks ( pj , ""license"" , license )"		4058727	0					
ANR	4059144	Callee	pj_ks		4058727	0					
ANR	4059145	Identifier	pj_ks		4058727	0					
ANR	4059146	ArgumentList	pj		4058727	1					
ANR	4059147	Argument	pj		4058727	0					
ANR	4059148	Identifier	pj		4058727	0					
ANR	4059149	Argument	"""license"""		4058727	1					
ANR	4059150	PrimaryExpression	"""license"""		4058727	0					
ANR	4059151	Argument	license		4058727	2					
ANR	4059152	Identifier	license		4058727	0					
ANR	4059153	ExpressionStatement	"pj_ks ( pj , ""description"" , h -> desc )"	179:4:4925:4959	4058727	9	True				
ANR	4059154	CallExpression	"pj_ks ( pj , ""description"" , h -> desc )"		4058727	0					
ANR	4059155	Callee	pj_ks		4058727	0					
ANR	4059156	Identifier	pj_ks		4058727	0					
ANR	4059157	ArgumentList	pj		4058727	1					
ANR	4059158	Argument	pj		4058727	0					
ANR	4059159	Identifier	pj		4058727	0					
ANR	4059160	Argument	"""description"""		4058727	1					
ANR	4059161	PrimaryExpression	"""description"""		4058727	0					
ANR	4059162	Argument	h -> desc		4058727	2					
ANR	4059163	PtrMemberAccess	h -> desc		4058727	0					
ANR	4059164	Identifier	h		4058727	0					
ANR	4059165	Identifier	desc		4058727	1					
ANR	4059166	ExpressionStatement	"pj_ks ( pj , ""features"" , feat )"	180:4:4965:4993	4058727	10	True				
ANR	4059167	CallExpression	"pj_ks ( pj , ""features"" , feat )"		4058727	0					
ANR	4059168	Callee	pj_ks		4058727	0					
ANR	4059169	Identifier	pj_ks		4058727	0					
ANR	4059170	ArgumentList	pj		4058727	1					
ANR	4059171	Argument	pj		4058727	0					
ANR	4059172	Identifier	pj		4058727	0					
ANR	4059173	Argument	"""features"""		4058727	1					
ANR	4059174	PrimaryExpression	"""features"""		4058727	0					
ANR	4059175	Argument	feat		4058727	2					
ANR	4059176	Identifier	feat		4058727	0					
ANR	4059177	ExpressionStatement	pj_end ( pj )	181:4:4999:5010	4058727	11	True				
ANR	4059178	CallExpression	pj_end ( pj )		4058727	0					
ANR	4059179	Callee	pj_end		4058727	0					
ANR	4059180	Identifier	pj_end		4058727	0					
ANR	4059181	ArgumentList	pj		4058727	1					
ANR	4059182	Argument	pj		4058727	0					
ANR	4059183	Identifier	pj		4058727	0					
ANR	4059184	ElseStatement	else		4058727	0					
ANR	4059185	CompoundStatement		72:10:1480:1480	4058727	0					
ANR	4059186	ExpressionStatement	"r_cons_printf ( ""%s%s  %-9s  %-11s %-7s %s\\n"" , feat , feat2 , bits , h -> name , h -> license ? h -> license : ""unknown"" , h -> desc )"	183:4:5028:5155	4058727	0	True				
ANR	4059187	CallExpression	"r_cons_printf ( ""%s%s  %-9s  %-11s %-7s %s\\n"" , feat , feat2 , bits , h -> name , h -> license ? h -> license : ""unknown"" , h -> desc )"		4058727	0					
ANR	4059188	Callee	r_cons_printf		4058727	0					
ANR	4059189	Identifier	r_cons_printf		4058727	0					
ANR	4059190	ArgumentList	"""%s%s  %-9s  %-11s %-7s %s\\n"""		4058727	1					
ANR	4059191	Argument	"""%s%s  %-9s  %-11s %-7s %s\\n"""		4058727	0					
ANR	4059192	PrimaryExpression	"""%s%s  %-9s  %-11s %-7s %s\\n"""		4058727	0					
ANR	4059193	Argument	feat		4058727	1					
ANR	4059194	Identifier	feat		4058727	0					
ANR	4059195	Argument	feat2		4058727	2					
ANR	4059196	Identifier	feat2		4058727	0					
ANR	4059197	Argument	bits		4058727	3					
ANR	4059198	Identifier	bits		4058727	0					
ANR	4059199	Argument	h -> name		4058727	4					
ANR	4059200	PtrMemberAccess	h -> name		4058727	0					
ANR	4059201	Identifier	h		4058727	0					
ANR	4059202	Identifier	name		4058727	1					
ANR	4059203	Argument	"h -> license ? h -> license : ""unknown"""		4058727	5					
ANR	4059204	ConditionalExpression	"h -> license ? h -> license : ""unknown"""		4058727	0					
ANR	4059205	Condition	h -> license		4058727	0					
ANR	4059206	PtrMemberAccess	h -> license		4058727	0					
ANR	4059207	Identifier	h		4058727	0					
ANR	4059208	Identifier	license		4058727	1					
ANR	4059209	PtrMemberAccess	h -> license		4058727	1					
ANR	4059210	Identifier	h		4058727	0					
ANR	4059211	Identifier	license		4058727	1					
ANR	4059212	PrimaryExpression	"""unknown"""		4058727	2					
ANR	4059213	Argument	h -> desc		4058727	6					
ANR	4059214	PtrMemberAccess	h -> desc		4058727	0					
ANR	4059215	Identifier	h		4058727	0					
ANR	4059216	Identifier	desc		4058727	1					
ANR	4059217	IfStatement	if ( fmt == 'j' )		4058727	19					
ANR	4059218	Condition	fmt == 'j'	189:5:5174:5183	4058727	0	True				
ANR	4059219	EqualityExpression	fmt == 'j'		4058727	0		==			
ANR	4059220	Identifier	fmt		4058727	0					
ANR	4059221	PrimaryExpression	'j'		4058727	1					
ANR	4059222	CompoundStatement		79:17:1644:1644	4058727	1					
ANR	4059223	ExpressionStatement	pj_end ( pj )	190:2:5190:5201	4058727	0	True				
ANR	4059224	CallExpression	pj_end ( pj )		4058727	0					
ANR	4059225	Callee	pj_end		4058727	0					
ANR	4059226	Identifier	pj_end		4058727	0					
ANR	4059227	ArgumentList	pj		4058727	1					
ANR	4059228	Argument	pj		4058727	0					
ANR	4059229	Identifier	pj		4058727	0					
ANR	4059230	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	191:2:5205:5236	4058727	1	True				
ANR	4059231	CallExpression	r_cons_println ( pj_string ( pj ) )		4058727	0					
ANR	4059232	Callee	r_cons_println		4058727	0					
ANR	4059233	Identifier	r_cons_println		4058727	0					
ANR	4059234	ArgumentList	pj_string ( pj )		4058727	1					
ANR	4059235	Argument	pj_string ( pj )		4058727	0					
ANR	4059236	CallExpression	pj_string ( pj )		4058727	0					
ANR	4059237	Callee	pj_string		4058727	0					
ANR	4059238	Identifier	pj_string		4058727	0					
ANR	4059239	ArgumentList	pj		4058727	1					
ANR	4059240	Argument	pj		4058727	0					
ANR	4059241	Identifier	pj		4058727	0					
ANR	4059242	ExpressionStatement	pj_free ( pj )	192:2:5240:5252	4058727	2	True				
ANR	4059243	CallExpression	pj_free ( pj )		4058727	0					
ANR	4059244	Callee	pj_free		4058727	0					
ANR	4059245	Identifier	pj_free		4058727	0					
ANR	4059246	ArgumentList	pj		4058727	1					
ANR	4059247	Argument	pj		4058727	0					
ANR	4059248	Identifier	pj		4058727	0					
ANR	4059249	ReturnType	static void		4058727	1					
ANR	4059250	Identifier	rasm2_list		4058727	2					
ANR	4059251	ParameterList	"RCore * core , const char * arch , int fmt"		4058727	3					
ANR	4059252	Parameter	RCore * core	111:23:3501:3511	4058727	0	True				
ANR	4059253	ParameterType	RCore *		4058727	0					
ANR	4059254	Identifier	core		4058727	1					
ANR	4059255	Parameter	const char * arch	111:36:3514:3529	4058727	1	True				
ANR	4059256	ParameterType	const char *		4058727	0					
ANR	4059257	Identifier	arch		4058727	1					
ANR	4059258	Parameter	int fmt	111:54:3532:3538	4058727	2	True				
ANR	4059259	ParameterType	int		4058727	0					
ANR	4059260	Identifier	fmt		4058727	1					
ANR	4059261	CFGEntryNode	ENTRY		4058727		True				
ANR	4059262	CFGExitNode	EXIT		4058727		True				
ANR	4059263	CFGErrorNode	ERROR		4058727		True				
ANR	4059264	Symbol	h -> desc		4058727						
ANR	4059265	Symbol	pj_string		4058727						
ANR	4059266	Symbol	* core		4058727						
ANR	4059267	Symbol	has_esil		4058727						
ANR	4059268	Symbol	core -> assembler		4058727						
ANR	4059269	Symbol	h -> cpus		4058727						
ANR	4059270	Symbol	fmt		4058727						
ANR	4059271	Symbol	feat2		4058727						
ANR	4059272	Symbol	h -> name		4058727						
ANR	4059273	Symbol	* arch		4058727						
ANR	4059274	Symbol	h -> assemble		4058727						
ANR	4059275	Symbol	h -> license		4058727						
ANR	4059276	Symbol	feat		4058727						
ANR	4059277	Symbol	strcmp		4058727						
ANR	4059278	Symbol	* bits		4058727						
ANR	4059279	Symbol	a		4058727						
ANR	4059280	Symbol	NULL		4058727						
ANR	4059281	Symbol	c		4058727						
ANR	4059282	Symbol	h -> disassemble		4058727						
ANR	4059283	Symbol	bits		4058727						
ANR	4059284	Symbol	h		4058727						
ANR	4059285	Symbol	i		4058727						
ANR	4059286	Symbol	iter		4058727						
ANR	4059287	Symbol	r_str_word_get0		4058727						
ANR	4059288	Symbol	n		4058727						
ANR	4059289	Symbol	core		4058727						
ANR	4059290	Symbol	license		4058727						
ANR	4059291	Symbol	* h		4058727						
ANR	4059292	Symbol	r_str_split		4058727						
ANR	4059293	Symbol	h -> bits		4058727						
ANR	4059294	Symbol	pj		4058727						
ANR	4059295	Symbol	pj_new		4058727						
ANR	4059296	Symbol	arch		4058727						
ANR	4059297	Symbol	strdup		4058727						
ANR	4059298	Function	__setsegoff	196:0:5260:5462							
ANR	4059299	FunctionDef	"__setsegoff (RConfig * cfg , const char * asmarch , int asmbits)"		4059298	0					
ANR	4059300	CompoundStatement		196:79:5339:5462	4059298	0					
ANR	4059301	IdentifierDeclStatement	"int autoseg = ( ! strncmp ( asmarch , ""x86"" , 3 ) && asmbits == 16 ) ;"	197:1:5342:5403	4059298	0	True				
ANR	4059302	IdentifierDecl	"autoseg = ( ! strncmp ( asmarch , ""x86"" , 3 ) && asmbits == 16 )"		4059298	0					
ANR	4059303	IdentifierDeclType	int		4059298	0					
ANR	4059304	Identifier	autoseg		4059298	1					
ANR	4059305	AssignmentExpression	"autoseg = ( ! strncmp ( asmarch , ""x86"" , 3 ) && asmbits == 16 )"		4059298	2		=			
ANR	4059306	Identifier	autoseg		4059298	0					
ANR	4059307	AndExpression	"! strncmp ( asmarch , ""x86"" , 3 ) && asmbits == 16"		4059298	1		&&			
ANR	4059308	UnaryOperationExpression	"! strncmp ( asmarch , ""x86"" , 3 )"		4059298	0					
ANR	4059309	UnaryOperator	!		4059298	0					
ANR	4059310	CallExpression	"strncmp ( asmarch , ""x86"" , 3 )"		4059298	1					
ANR	4059311	Callee	strncmp		4059298	0					
ANR	4059312	Identifier	strncmp		4059298	0					
ANR	4059313	ArgumentList	asmarch		4059298	1					
ANR	4059314	Argument	asmarch		4059298	0					
ANR	4059315	Identifier	asmarch		4059298	0					
ANR	4059316	Argument	"""x86"""		4059298	1					
ANR	4059317	PrimaryExpression	"""x86"""		4059298	0					
ANR	4059318	Argument	3		4059298	2					
ANR	4059319	PrimaryExpression	3		4059298	0					
ANR	4059320	EqualityExpression	asmbits == 16		4059298	1		==			
ANR	4059321	Identifier	asmbits		4059298	0					
ANR	4059322	PrimaryExpression	16		4059298	1					
ANR	4059323	ExpressionStatement	"r_config_set ( cfg , ""asm.segoff"" , r_str_bool ( autoseg ) )"	198:1:5406:5460	4059298	1	True				
ANR	4059324	CallExpression	"r_config_set ( cfg , ""asm.segoff"" , r_str_bool ( autoseg ) )"		4059298	0					
ANR	4059325	Callee	r_config_set		4059298	0					
ANR	4059326	Identifier	r_config_set		4059298	0					
ANR	4059327	ArgumentList	cfg		4059298	1					
ANR	4059328	Argument	cfg		4059298	0					
ANR	4059329	Identifier	cfg		4059298	0					
ANR	4059330	Argument	"""asm.segoff"""		4059298	1					
ANR	4059331	PrimaryExpression	"""asm.segoff"""		4059298	0					
ANR	4059332	Argument	r_str_bool ( autoseg )		4059298	2					
ANR	4059333	CallExpression	r_str_bool ( autoseg )		4059298	0					
ANR	4059334	Callee	r_str_bool		4059298	0					
ANR	4059335	Identifier	r_str_bool		4059298	0					
ANR	4059336	ArgumentList	autoseg		4059298	1					
ANR	4059337	Argument	autoseg		4059298	0					
ANR	4059338	Identifier	autoseg		4059298	0					
ANR	4059339	ReturnType	static inline void		4059298	1					
ANR	4059340	Identifier	__setsegoff		4059298	2					
ANR	4059341	ParameterList	"RConfig * cfg , const char * asmarch , int asmbits"		4059298	3					
ANR	4059342	Parameter	RConfig * cfg	196:31:5291:5302	4059298	0	True				
ANR	4059343	ParameterType	RConfig *		4059298	0					
ANR	4059344	Identifier	cfg		4059298	1					
ANR	4059345	Parameter	const char * asmarch	196:45:5305:5323	4059298	1	True				
ANR	4059346	ParameterType	const char *		4059298	0					
ANR	4059347	Identifier	asmarch		4059298	1					
ANR	4059348	Parameter	int asmbits	196:66:5326:5336	4059298	2	True				
ANR	4059349	ParameterType	int		4059298	0					
ANR	4059350	Identifier	asmbits		4059298	1					
ANR	4059351	CFGEntryNode	ENTRY		4059298		True				
ANR	4059352	CFGExitNode	EXIT		4059298		True				
ANR	4059353	Symbol	strncmp		4059298						
ANR	4059354	Symbol	r_str_bool		4059298						
ANR	4059355	Symbol	cfg		4059298						
ANR	4059356	Symbol	asmarch		4059298						
ANR	4059357	Symbol	asmbits		4059298						
ANR	4059358	Symbol	autoseg		4059298						
ANR	4059359	Function	cb_debug_hitinfo	201:0:5465:5643							
ANR	4059360	FunctionDef	"cb_debug_hitinfo (void * user , void * data)"		4059359	0					
ANR	4059361	CompoundStatement		201:53:5518:5643	4059359	0					
ANR	4059362	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	202:1:5521:5548	4059359	0	True				
ANR	4059363	IdentifierDecl	* core = ( RCore * ) user		4059359	0					
ANR	4059364	IdentifierDeclType	RCore *		4059359	0					
ANR	4059365	Identifier	core		4059359	1					
ANR	4059366	AssignmentExpression	* core = ( RCore * ) user		4059359	2		=			
ANR	4059367	Identifier	core		4059359	0					
ANR	4059368	CastExpression	( RCore * ) user		4059359	1					
ANR	4059369	CastTarget	RCore *		4059359	0					
ANR	4059370	Identifier	user		4059359	1					
ANR	4059371	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	203:1:5551:5590	4059359	1	True				
ANR	4059372	IdentifierDecl	* node = ( RConfigNode * ) data		4059359	0					
ANR	4059373	IdentifierDeclType	RConfigNode *		4059359	0					
ANR	4059374	Identifier	node		4059359	1					
ANR	4059375	AssignmentExpression	* node = ( RConfigNode * ) data		4059359	2		=			
ANR	4059376	Identifier	node		4059359	0					
ANR	4059377	CastExpression	( RConfigNode * ) data		4059359	1					
ANR	4059378	CastTarget	RConfigNode *		4059359	0					
ANR	4059379	Identifier	data		4059359	1					
ANR	4059380	ExpressionStatement	core -> dbg -> hitinfo = node -> i_value	204:1:5593:5627	4059359	2	True				
ANR	4059381	AssignmentExpression	core -> dbg -> hitinfo = node -> i_value		4059359	0		=			
ANR	4059382	PtrMemberAccess	core -> dbg -> hitinfo		4059359	0					
ANR	4059383	PtrMemberAccess	core -> dbg		4059359	0					
ANR	4059384	Identifier	core		4059359	0					
ANR	4059385	Identifier	dbg		4059359	1					
ANR	4059386	Identifier	hitinfo		4059359	1					
ANR	4059387	PtrMemberAccess	node -> i_value		4059359	1					
ANR	4059388	Identifier	node		4059359	0					
ANR	4059389	Identifier	i_value		4059359	1					
ANR	4059390	ReturnStatement	return true ;	205:1:5630:5641	4059359	3	True				
ANR	4059391	Identifier	true		4059359	0					
ANR	4059392	ReturnType	static bool		4059359	1					
ANR	4059393	Identifier	cb_debug_hitinfo		4059359	2					
ANR	4059394	ParameterList	"void * user , void * data"		4059359	3					
ANR	4059395	Parameter	void * user	201:29:5494:5503	4059359	0	True				
ANR	4059396	ParameterType	void *		4059359	0					
ANR	4059397	Identifier	user		4059359	1					
ANR	4059398	Parameter	void * data	201:41:5506:5515	4059359	1	True				
ANR	4059399	ParameterType	void *		4059359	0					
ANR	4059400	Identifier	data		4059359	1					
ANR	4059401	CFGEntryNode	ENTRY		4059359		True				
ANR	4059402	CFGExitNode	EXIT		4059359		True				
ANR	4059403	Symbol	core		4059359						
ANR	4059404	Symbol	node		4059359						
ANR	4059405	Symbol	data		4059359						
ANR	4059406	Symbol	core -> dbg -> hitinfo		4059359						
ANR	4059407	Symbol	* core		4059359						
ANR	4059408	Symbol	true		4059359						
ANR	4059409	Symbol	* node		4059359						
ANR	4059410	Symbol	user		4059359						
ANR	4059411	Symbol	* core -> dbg		4059359						
ANR	4059412	Symbol	* * core		4059359						
ANR	4059413	Symbol	core -> dbg		4059359						
ANR	4059414	Symbol	node -> i_value		4059359						
ANR	4059415	Function	cb_analarmthumb	208:0:5646:5829							
ANR	4059416	FunctionDef	"cb_analarmthumb (void * user , void * data)"		4059415	0					
ANR	4059417	CompoundStatement		208:52:5698:5829	4059415	0					
ANR	4059418	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	209:1:5701:5728	4059415	0	True				
ANR	4059419	IdentifierDecl	* core = ( RCore * ) user		4059415	0					
ANR	4059420	IdentifierDeclType	RCore *		4059415	0					
ANR	4059421	Identifier	core		4059415	1					
ANR	4059422	AssignmentExpression	* core = ( RCore * ) user		4059415	2		=			
ANR	4059423	Identifier	core		4059415	0					
ANR	4059424	CastExpression	( RCore * ) user		4059415	1					
ANR	4059425	CastTarget	RCore *		4059415	0					
ANR	4059426	Identifier	user		4059415	1					
ANR	4059427	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	210:1:5731:5770	4059415	1	True				
ANR	4059428	IdentifierDecl	* node = ( RConfigNode * ) data		4059415	0					
ANR	4059429	IdentifierDeclType	RConfigNode *		4059415	0					
ANR	4059430	Identifier	node		4059415	1					
ANR	4059431	AssignmentExpression	* node = ( RConfigNode * ) data		4059415	2		=			
ANR	4059432	Identifier	node		4059415	0					
ANR	4059433	CastExpression	( RConfigNode * ) data		4059415	1					
ANR	4059434	CastTarget	RConfigNode *		4059415	0					
ANR	4059435	Identifier	data		4059415	1					
ANR	4059436	ExpressionStatement	core -> anal -> opt . armthumb = node -> i_value	211:1:5773:5813	4059415	2	True				
ANR	4059437	AssignmentExpression	core -> anal -> opt . armthumb = node -> i_value		4059415	0		=			
ANR	4059438	MemberAccess	core -> anal -> opt . armthumb		4059415	0					
ANR	4059439	PtrMemberAccess	core -> anal -> opt		4059415	0					
ANR	4059440	PtrMemberAccess	core -> anal		4059415	0					
ANR	4059441	Identifier	core		4059415	0					
ANR	4059442	Identifier	anal		4059415	1					
ANR	4059443	Identifier	opt		4059415	1					
ANR	4059444	Identifier	armthumb		4059415	1					
ANR	4059445	PtrMemberAccess	node -> i_value		4059415	1					
ANR	4059446	Identifier	node		4059415	0					
ANR	4059447	Identifier	i_value		4059415	1					
ANR	4059448	ReturnStatement	return true ;	212:1:5816:5827	4059415	3	True				
ANR	4059449	Identifier	true		4059415	0					
ANR	4059450	ReturnType	static bool		4059415	1					
ANR	4059451	Identifier	cb_analarmthumb		4059415	2					
ANR	4059452	ParameterList	"void * user , void * data"		4059415	3					
ANR	4059453	Parameter	void * user	208:28:5674:5683	4059415	0	True				
ANR	4059454	ParameterType	void *		4059415	0					
ANR	4059455	Identifier	user		4059415	1					
ANR	4059456	Parameter	void * data	208:40:5686:5695	4059415	1	True				
ANR	4059457	ParameterType	void *		4059415	0					
ANR	4059458	Identifier	data		4059415	1					
ANR	4059459	CFGEntryNode	ENTRY		4059415		True				
ANR	4059460	CFGExitNode	EXIT		4059415		True				
ANR	4059461	Symbol	core -> anal -> opt		4059415						
ANR	4059462	Symbol	data		4059415						
ANR	4059463	Symbol	core -> anal -> opt . armthumb		4059415						
ANR	4059464	Symbol	* core		4059415						
ANR	4059465	Symbol	core -> anal		4059415						
ANR	4059466	Symbol	node -> i_value		4059415						
ANR	4059467	Symbol	core		4059415						
ANR	4059468	Symbol	node		4059415						
ANR	4059469	Symbol	* core -> anal		4059415						
ANR	4059470	Symbol	true		4059415						
ANR	4059471	Symbol	* node		4059415						
ANR	4059472	Symbol	user		4059415						
ANR	4059473	Symbol	* * core		4059415						
ANR	4059474	Function	cb_analeobjmp	215:0:5832:6011							
ANR	4059475	FunctionDef	"cb_analeobjmp (void * user , void * data)"		4059474	0					
ANR	4059476	CompoundStatement		215:50:5882:6011	4059474	0					
ANR	4059477	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	216:1:5885:5912	4059474	0	True				
ANR	4059478	IdentifierDecl	* core = ( RCore * ) user		4059474	0					
ANR	4059479	IdentifierDeclType	RCore *		4059474	0					
ANR	4059480	Identifier	core		4059474	1					
ANR	4059481	AssignmentExpression	* core = ( RCore * ) user		4059474	2		=			
ANR	4059482	Identifier	core		4059474	0					
ANR	4059483	CastExpression	( RCore * ) user		4059474	1					
ANR	4059484	CastTarget	RCore *		4059474	0					
ANR	4059485	Identifier	user		4059474	1					
ANR	4059486	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	217:1:5915:5954	4059474	1	True				
ANR	4059487	IdentifierDecl	* node = ( RConfigNode * ) data		4059474	0					
ANR	4059488	IdentifierDeclType	RConfigNode *		4059474	0					
ANR	4059489	Identifier	node		4059474	1					
ANR	4059490	AssignmentExpression	* node = ( RConfigNode * ) data		4059474	2		=			
ANR	4059491	Identifier	node		4059474	0					
ANR	4059492	CastExpression	( RConfigNode * ) data		4059474	1					
ANR	4059493	CastTarget	RConfigNode *		4059474	0					
ANR	4059494	Identifier	data		4059474	1					
ANR	4059495	ExpressionStatement	core -> anal -> opt . eobjmp = node -> i_value	218:1:5957:5995	4059474	2	True				
ANR	4059496	AssignmentExpression	core -> anal -> opt . eobjmp = node -> i_value		4059474	0		=			
ANR	4059497	MemberAccess	core -> anal -> opt . eobjmp		4059474	0					
ANR	4059498	PtrMemberAccess	core -> anal -> opt		4059474	0					
ANR	4059499	PtrMemberAccess	core -> anal		4059474	0					
ANR	4059500	Identifier	core		4059474	0					
ANR	4059501	Identifier	anal		4059474	1					
ANR	4059502	Identifier	opt		4059474	1					
ANR	4059503	Identifier	eobjmp		4059474	1					
ANR	4059504	PtrMemberAccess	node -> i_value		4059474	1					
ANR	4059505	Identifier	node		4059474	0					
ANR	4059506	Identifier	i_value		4059474	1					
ANR	4059507	ReturnStatement	return true ;	219:1:5998:6009	4059474	3	True				
ANR	4059508	Identifier	true		4059474	0					
ANR	4059509	ReturnType	static bool		4059474	1					
ANR	4059510	Identifier	cb_analeobjmp		4059474	2					
ANR	4059511	ParameterList	"void * user , void * data"		4059474	3					
ANR	4059512	Parameter	void * user	215:26:5858:5867	4059474	0	True				
ANR	4059513	ParameterType	void *		4059474	0					
ANR	4059514	Identifier	user		4059474	1					
ANR	4059515	Parameter	void * data	215:38:5870:5879	4059474	1	True				
ANR	4059516	ParameterType	void *		4059474	0					
ANR	4059517	Identifier	data		4059474	1					
ANR	4059518	CFGEntryNode	ENTRY		4059474		True				
ANR	4059519	CFGExitNode	EXIT		4059474		True				
ANR	4059520	Symbol	core -> anal -> opt		4059474						
ANR	4059521	Symbol	data		4059474						
ANR	4059522	Symbol	* core		4059474						
ANR	4059523	Symbol	core -> anal		4059474						
ANR	4059524	Symbol	node -> i_value		4059474						
ANR	4059525	Symbol	core -> anal -> opt . eobjmp		4059474						
ANR	4059526	Symbol	core		4059474						
ANR	4059527	Symbol	node		4059474						
ANR	4059528	Symbol	* core -> anal		4059474						
ANR	4059529	Symbol	true		4059474						
ANR	4059530	Symbol	* node		4059474						
ANR	4059531	Symbol	user		4059474						
ANR	4059532	Symbol	* * core		4059474						
ANR	4059533	Function	cb_analdepth	222:0:6014:6191							
ANR	4059534	FunctionDef	"cb_analdepth (void * user , void * data)"		4059533	0					
ANR	4059535	CompoundStatement		222:49:6063:6191	4059533	0					
ANR	4059536	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	223:1:6066:6093	4059533	0	True				
ANR	4059537	IdentifierDecl	* core = ( RCore * ) user		4059533	0					
ANR	4059538	IdentifierDeclType	RCore *		4059533	0					
ANR	4059539	Identifier	core		4059533	1					
ANR	4059540	AssignmentExpression	* core = ( RCore * ) user		4059533	2		=			
ANR	4059541	Identifier	core		4059533	0					
ANR	4059542	CastExpression	( RCore * ) user		4059533	1					
ANR	4059543	CastTarget	RCore *		4059533	0					
ANR	4059544	Identifier	user		4059533	1					
ANR	4059545	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	224:1:6096:6135	4059533	1	True				
ANR	4059546	IdentifierDecl	* node = ( RConfigNode * ) data		4059533	0					
ANR	4059547	IdentifierDeclType	RConfigNode *		4059533	0					
ANR	4059548	Identifier	node		4059533	1					
ANR	4059549	AssignmentExpression	* node = ( RConfigNode * ) data		4059533	2		=			
ANR	4059550	Identifier	node		4059533	0					
ANR	4059551	CastExpression	( RConfigNode * ) data		4059533	1					
ANR	4059552	CastTarget	RConfigNode *		4059533	0					
ANR	4059553	Identifier	data		4059533	1					
ANR	4059554	ExpressionStatement	core -> anal -> opt . depth = node -> i_value	225:1:6138:6175	4059533	2	True				
ANR	4059555	AssignmentExpression	core -> anal -> opt . depth = node -> i_value		4059533	0		=			
ANR	4059556	MemberAccess	core -> anal -> opt . depth		4059533	0					
ANR	4059557	PtrMemberAccess	core -> anal -> opt		4059533	0					
ANR	4059558	PtrMemberAccess	core -> anal		4059533	0					
ANR	4059559	Identifier	core		4059533	0					
ANR	4059560	Identifier	anal		4059533	1					
ANR	4059561	Identifier	opt		4059533	1					
ANR	4059562	Identifier	depth		4059533	1					
ANR	4059563	PtrMemberAccess	node -> i_value		4059533	1					
ANR	4059564	Identifier	node		4059533	0					
ANR	4059565	Identifier	i_value		4059533	1					
ANR	4059566	ReturnStatement	return true ;	226:1:6178:6189	4059533	3	True				
ANR	4059567	Identifier	true		4059533	0					
ANR	4059568	ReturnType	static bool		4059533	1					
ANR	4059569	Identifier	cb_analdepth		4059533	2					
ANR	4059570	ParameterList	"void * user , void * data"		4059533	3					
ANR	4059571	Parameter	void * user	222:25:6039:6048	4059533	0	True				
ANR	4059572	ParameterType	void *		4059533	0					
ANR	4059573	Identifier	user		4059533	1					
ANR	4059574	Parameter	void * data	222:37:6051:6060	4059533	1	True				
ANR	4059575	ParameterType	void *		4059533	0					
ANR	4059576	Identifier	data		4059533	1					
ANR	4059577	CFGEntryNode	ENTRY		4059533		True				
ANR	4059578	CFGExitNode	EXIT		4059533		True				
ANR	4059579	Symbol	core -> anal -> opt		4059533						
ANR	4059580	Symbol	data		4059533						
ANR	4059581	Symbol	core -> anal -> opt . depth		4059533						
ANR	4059582	Symbol	* core		4059533						
ANR	4059583	Symbol	core -> anal		4059533						
ANR	4059584	Symbol	node -> i_value		4059533						
ANR	4059585	Symbol	core		4059533						
ANR	4059586	Symbol	node		4059533						
ANR	4059587	Symbol	* core -> anal		4059533						
ANR	4059588	Symbol	true		4059533						
ANR	4059589	Symbol	* node		4059533						
ANR	4059590	Symbol	user		4059533						
ANR	4059591	Symbol	* * core		4059533						
ANR	4059592	Function	cb_analgraphdepth	229:0:6194:6382							
ANR	4059593	FunctionDef	"cb_analgraphdepth (void * user , void * data)"		4059592	0					
ANR	4059594	CompoundStatement		229:54:6248:6382	4059592	0					
ANR	4059595	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	230:1:6251:6278	4059592	0	True				
ANR	4059596	IdentifierDecl	* core = ( RCore * ) user		4059592	0					
ANR	4059597	IdentifierDeclType	RCore *		4059592	0					
ANR	4059598	Identifier	core		4059592	1					
ANR	4059599	AssignmentExpression	* core = ( RCore * ) user		4059592	2		=			
ANR	4059600	Identifier	core		4059592	0					
ANR	4059601	CastExpression	( RCore * ) user		4059592	1					
ANR	4059602	CastTarget	RCore *		4059592	0					
ANR	4059603	Identifier	user		4059592	1					
ANR	4059604	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	231:1:6281:6320	4059592	1	True				
ANR	4059605	IdentifierDecl	* node = ( RConfigNode * ) data		4059592	0					
ANR	4059606	IdentifierDeclType	RConfigNode *		4059592	0					
ANR	4059607	Identifier	node		4059592	1					
ANR	4059608	AssignmentExpression	* node = ( RConfigNode * ) data		4059592	2		=			
ANR	4059609	Identifier	node		4059592	0					
ANR	4059610	CastExpression	( RConfigNode * ) data		4059592	1					
ANR	4059611	CastTarget	RConfigNode *		4059592	0					
ANR	4059612	Identifier	data		4059592	1					
ANR	4059613	ExpressionStatement	core -> anal -> opt . graph_depth = node -> i_value	232:1:6323:6366	4059592	2	True				
ANR	4059614	AssignmentExpression	core -> anal -> opt . graph_depth = node -> i_value		4059592	0		=			
ANR	4059615	MemberAccess	core -> anal -> opt . graph_depth		4059592	0					
ANR	4059616	PtrMemberAccess	core -> anal -> opt		4059592	0					
ANR	4059617	PtrMemberAccess	core -> anal		4059592	0					
ANR	4059618	Identifier	core		4059592	0					
ANR	4059619	Identifier	anal		4059592	1					
ANR	4059620	Identifier	opt		4059592	1					
ANR	4059621	Identifier	graph_depth		4059592	1					
ANR	4059622	PtrMemberAccess	node -> i_value		4059592	1					
ANR	4059623	Identifier	node		4059592	0					
ANR	4059624	Identifier	i_value		4059592	1					
ANR	4059625	ReturnStatement	return true ;	233:1:6369:6380	4059592	3	True				
ANR	4059626	Identifier	true		4059592	0					
ANR	4059627	ReturnType	static bool		4059592	1					
ANR	4059628	Identifier	cb_analgraphdepth		4059592	2					
ANR	4059629	ParameterList	"void * user , void * data"		4059592	3					
ANR	4059630	Parameter	void * user	229:30:6224:6233	4059592	0	True				
ANR	4059631	ParameterType	void *		4059592	0					
ANR	4059632	Identifier	user		4059592	1					
ANR	4059633	Parameter	void * data	229:42:6236:6245	4059592	1	True				
ANR	4059634	ParameterType	void *		4059592	0					
ANR	4059635	Identifier	data		4059592	1					
ANR	4059636	CFGEntryNode	ENTRY		4059592		True				
ANR	4059637	CFGExitNode	EXIT		4059592		True				
ANR	4059638	Symbol	core -> anal -> opt		4059592						
ANR	4059639	Symbol	data		4059592						
ANR	4059640	Symbol	* core		4059592						
ANR	4059641	Symbol	core -> anal		4059592						
ANR	4059642	Symbol	node -> i_value		4059592						
ANR	4059643	Symbol	core		4059592						
ANR	4059644	Symbol	node		4059592						
ANR	4059645	Symbol	* core -> anal		4059592						
ANR	4059646	Symbol	core -> anal -> opt . graph_depth		4059592						
ANR	4059647	Symbol	true		4059592						
ANR	4059648	Symbol	* node		4059592						
ANR	4059649	Symbol	user		4059592						
ANR	4059650	Symbol	* * core		4059592						
ANR	4059651	Function	cb_analafterjmp	236:0:6385:6568							
ANR	4059652	FunctionDef	"cb_analafterjmp (void * user , void * data)"		4059651	0					
ANR	4059653	CompoundStatement		236:52:6437:6568	4059651	0					
ANR	4059654	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	237:1:6440:6467	4059651	0	True				
ANR	4059655	IdentifierDecl	* core = ( RCore * ) user		4059651	0					
ANR	4059656	IdentifierDeclType	RCore *		4059651	0					
ANR	4059657	Identifier	core		4059651	1					
ANR	4059658	AssignmentExpression	* core = ( RCore * ) user		4059651	2		=			
ANR	4059659	Identifier	core		4059651	0					
ANR	4059660	CastExpression	( RCore * ) user		4059651	1					
ANR	4059661	CastTarget	RCore *		4059651	0					
ANR	4059662	Identifier	user		4059651	1					
ANR	4059663	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	238:1:6470:6509	4059651	1	True				
ANR	4059664	IdentifierDecl	* node = ( RConfigNode * ) data		4059651	0					
ANR	4059665	IdentifierDeclType	RConfigNode *		4059651	0					
ANR	4059666	Identifier	node		4059651	1					
ANR	4059667	AssignmentExpression	* node = ( RConfigNode * ) data		4059651	2		=			
ANR	4059668	Identifier	node		4059651	0					
ANR	4059669	CastExpression	( RConfigNode * ) data		4059651	1					
ANR	4059670	CastTarget	RConfigNode *		4059651	0					
ANR	4059671	Identifier	data		4059651	1					
ANR	4059672	ExpressionStatement	core -> anal -> opt . afterjmp = node -> i_value	239:1:6512:6552	4059651	2	True				
ANR	4059673	AssignmentExpression	core -> anal -> opt . afterjmp = node -> i_value		4059651	0		=			
ANR	4059674	MemberAccess	core -> anal -> opt . afterjmp		4059651	0					
ANR	4059675	PtrMemberAccess	core -> anal -> opt		4059651	0					
ANR	4059676	PtrMemberAccess	core -> anal		4059651	0					
ANR	4059677	Identifier	core		4059651	0					
ANR	4059678	Identifier	anal		4059651	1					
ANR	4059679	Identifier	opt		4059651	1					
ANR	4059680	Identifier	afterjmp		4059651	1					
ANR	4059681	PtrMemberAccess	node -> i_value		4059651	1					
ANR	4059682	Identifier	node		4059651	0					
ANR	4059683	Identifier	i_value		4059651	1					
ANR	4059684	ReturnStatement	return true ;	240:1:6555:6566	4059651	3	True				
ANR	4059685	Identifier	true		4059651	0					
ANR	4059686	ReturnType	static bool		4059651	1					
ANR	4059687	Identifier	cb_analafterjmp		4059651	2					
ANR	4059688	ParameterList	"void * user , void * data"		4059651	3					
ANR	4059689	Parameter	void * user	236:28:6413:6422	4059651	0	True				
ANR	4059690	ParameterType	void *		4059651	0					
ANR	4059691	Identifier	user		4059651	1					
ANR	4059692	Parameter	void * data	236:40:6425:6434	4059651	1	True				
ANR	4059693	ParameterType	void *		4059651	0					
ANR	4059694	Identifier	data		4059651	1					
ANR	4059695	CFGEntryNode	ENTRY		4059651		True				
ANR	4059696	CFGExitNode	EXIT		4059651		True				
ANR	4059697	Symbol	core -> anal -> opt		4059651						
ANR	4059698	Symbol	data		4059651						
ANR	4059699	Symbol	core -> anal -> opt . afterjmp		4059651						
ANR	4059700	Symbol	* core		4059651						
ANR	4059701	Symbol	core -> anal		4059651						
ANR	4059702	Symbol	node -> i_value		4059651						
ANR	4059703	Symbol	core		4059651						
ANR	4059704	Symbol	node		4059651						
ANR	4059705	Symbol	* core -> anal		4059651						
ANR	4059706	Symbol	true		4059651						
ANR	4059707	Symbol	* node		4059651						
ANR	4059708	Symbol	user		4059651						
ANR	4059709	Symbol	* * core		4059651						
ANR	4059710	Function	cb_anal_endsize	243:0:6571:6753							
ANR	4059711	FunctionDef	"cb_anal_endsize (void * user , void * data)"		4059710	0					
ANR	4059712	CompoundStatement		243:52:6623:6753	4059710	0					
ANR	4059713	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	244:1:6626:6653	4059710	0	True				
ANR	4059714	IdentifierDecl	* core = ( RCore * ) user		4059710	0					
ANR	4059715	IdentifierDeclType	RCore *		4059710	0					
ANR	4059716	Identifier	core		4059710	1					
ANR	4059717	AssignmentExpression	* core = ( RCore * ) user		4059710	2		=			
ANR	4059718	Identifier	core		4059710	0					
ANR	4059719	CastExpression	( RCore * ) user		4059710	1					
ANR	4059720	CastTarget	RCore *		4059710	0					
ANR	4059721	Identifier	user		4059710	1					
ANR	4059722	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	245:1:6656:6695	4059710	1	True				
ANR	4059723	IdentifierDecl	* node = ( RConfigNode * ) data		4059710	0					
ANR	4059724	IdentifierDeclType	RConfigNode *		4059710	0					
ANR	4059725	Identifier	node		4059710	1					
ANR	4059726	AssignmentExpression	* node = ( RConfigNode * ) data		4059710	2		=			
ANR	4059727	Identifier	node		4059710	0					
ANR	4059728	CastExpression	( RConfigNode * ) data		4059710	1					
ANR	4059729	CastTarget	RConfigNode *		4059710	0					
ANR	4059730	Identifier	data		4059710	1					
ANR	4059731	ExpressionStatement	core -> anal -> opt . endsize = node -> i_value	246:1:6698:6737	4059710	2	True				
ANR	4059732	AssignmentExpression	core -> anal -> opt . endsize = node -> i_value		4059710	0		=			
ANR	4059733	MemberAccess	core -> anal -> opt . endsize		4059710	0					
ANR	4059734	PtrMemberAccess	core -> anal -> opt		4059710	0					
ANR	4059735	PtrMemberAccess	core -> anal		4059710	0					
ANR	4059736	Identifier	core		4059710	0					
ANR	4059737	Identifier	anal		4059710	1					
ANR	4059738	Identifier	opt		4059710	1					
ANR	4059739	Identifier	endsize		4059710	1					
ANR	4059740	PtrMemberAccess	node -> i_value		4059710	1					
ANR	4059741	Identifier	node		4059710	0					
ANR	4059742	Identifier	i_value		4059710	1					
ANR	4059743	ReturnStatement	return true ;	247:1:6740:6751	4059710	3	True				
ANR	4059744	Identifier	true		4059710	0					
ANR	4059745	ReturnType	static bool		4059710	1					
ANR	4059746	Identifier	cb_anal_endsize		4059710	2					
ANR	4059747	ParameterList	"void * user , void * data"		4059710	3					
ANR	4059748	Parameter	void * user	243:28:6599:6608	4059710	0	True				
ANR	4059749	ParameterType	void *		4059710	0					
ANR	4059750	Identifier	user		4059710	1					
ANR	4059751	Parameter	void * data	243:40:6611:6620	4059710	1	True				
ANR	4059752	ParameterType	void *		4059710	0					
ANR	4059753	Identifier	data		4059710	1					
ANR	4059754	CFGEntryNode	ENTRY		4059710		True				
ANR	4059755	CFGExitNode	EXIT		4059710		True				
ANR	4059756	Symbol	core -> anal -> opt		4059710						
ANR	4059757	Symbol	core -> anal -> opt . endsize		4059710						
ANR	4059758	Symbol	data		4059710						
ANR	4059759	Symbol	* core		4059710						
ANR	4059760	Symbol	core -> anal		4059710						
ANR	4059761	Symbol	node -> i_value		4059710						
ANR	4059762	Symbol	core		4059710						
ANR	4059763	Symbol	node		4059710						
ANR	4059764	Symbol	* core -> anal		4059710						
ANR	4059765	Symbol	true		4059710						
ANR	4059766	Symbol	* node		4059710						
ANR	4059767	Symbol	user		4059710						
ANR	4059768	Symbol	* * core		4059710						
ANR	4059769	Function	cb_analvars	249:0:6755:6958							
ANR	4059770	FunctionDef	"cb_analvars (void * user , void * data)"		4059769	0					
ANR	4059771	CompoundStatement		249:48:6803:6958	4059769	0					
ANR	4059772	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	250:8:6813:6840	4059769	0	True				
ANR	4059773	IdentifierDecl	* core = ( RCore * ) user		4059769	0					
ANR	4059774	IdentifierDeclType	RCore *		4059769	0					
ANR	4059775	Identifier	core		4059769	1					
ANR	4059776	AssignmentExpression	* core = ( RCore * ) user		4059769	2		=			
ANR	4059777	Identifier	core		4059769	0					
ANR	4059778	CastExpression	( RCore * ) user		4059769	1					
ANR	4059779	CastTarget	RCore *		4059769	0					
ANR	4059780	Identifier	user		4059769	1					
ANR	4059781	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	251:8:6850:6889	4059769	1	True				
ANR	4059782	IdentifierDecl	* node = ( RConfigNode * ) data		4059769	0					
ANR	4059783	IdentifierDeclType	RConfigNode *		4059769	0					
ANR	4059784	Identifier	node		4059769	1					
ANR	4059785	AssignmentExpression	* node = ( RConfigNode * ) data		4059769	2		=			
ANR	4059786	Identifier	node		4059769	0					
ANR	4059787	CastExpression	( RConfigNode * ) data		4059769	1					
ANR	4059788	CastTarget	RConfigNode *		4059769	0					
ANR	4059789	Identifier	data		4059769	1					
ANR	4059790	ExpressionStatement	core -> anal -> opt . vars = node -> i_value	252:8:6899:6935	4059769	2	True				
ANR	4059791	AssignmentExpression	core -> anal -> opt . vars = node -> i_value		4059769	0		=			
ANR	4059792	MemberAccess	core -> anal -> opt . vars		4059769	0					
ANR	4059793	PtrMemberAccess	core -> anal -> opt		4059769	0					
ANR	4059794	PtrMemberAccess	core -> anal		4059769	0					
ANR	4059795	Identifier	core		4059769	0					
ANR	4059796	Identifier	anal		4059769	1					
ANR	4059797	Identifier	opt		4059769	1					
ANR	4059798	Identifier	vars		4059769	1					
ANR	4059799	PtrMemberAccess	node -> i_value		4059769	1					
ANR	4059800	Identifier	node		4059769	0					
ANR	4059801	Identifier	i_value		4059769	1					
ANR	4059802	ReturnStatement	return true ;	253:8:6945:6956	4059769	3	True				
ANR	4059803	Identifier	true		4059769	0					
ANR	4059804	ReturnType	static bool		4059769	1					
ANR	4059805	Identifier	cb_analvars		4059769	2					
ANR	4059806	ParameterList	"void * user , void * data"		4059769	3					
ANR	4059807	Parameter	void * user	249:24:6779:6788	4059769	0	True				
ANR	4059808	ParameterType	void *		4059769	0					
ANR	4059809	Identifier	user		4059769	1					
ANR	4059810	Parameter	void * data	249:36:6791:6800	4059769	1	True				
ANR	4059811	ParameterType	void *		4059769	0					
ANR	4059812	Identifier	data		4059769	1					
ANR	4059813	CFGEntryNode	ENTRY		4059769		True				
ANR	4059814	CFGExitNode	EXIT		4059769		True				
ANR	4059815	Symbol	core -> anal -> opt		4059769						
ANR	4059816	Symbol	core -> anal -> opt . vars		4059769						
ANR	4059817	Symbol	data		4059769						
ANR	4059818	Symbol	* core		4059769						
ANR	4059819	Symbol	core -> anal		4059769						
ANR	4059820	Symbol	node -> i_value		4059769						
ANR	4059821	Symbol	core		4059769						
ANR	4059822	Symbol	node		4059769						
ANR	4059823	Symbol	* core -> anal		4059769						
ANR	4059824	Symbol	true		4059769						
ANR	4059825	Symbol	* node		4059769						
ANR	4059826	Symbol	user		4059769						
ANR	4059827	Symbol	* * core		4059769						
ANR	4059828	Function	cb_analstrings	256:0:6961:7180							
ANR	4059829	FunctionDef	"cb_analstrings (void * user , void * data)"		4059828	0					
ANR	4059830	CompoundStatement		256:51:7012:7180	4059828	0					
ANR	4059831	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	257:1:7015:7042	4059828	0	True				
ANR	4059832	IdentifierDecl	* core = ( RCore * ) user		4059828	0					
ANR	4059833	IdentifierDeclType	RCore *		4059828	0					
ANR	4059834	Identifier	core		4059828	1					
ANR	4059835	AssignmentExpression	* core = ( RCore * ) user		4059828	2		=			
ANR	4059836	Identifier	core		4059828	0					
ANR	4059837	CastExpression	( RCore * ) user		4059828	1					
ANR	4059838	CastTarget	RCore *		4059828	0					
ANR	4059839	Identifier	user		4059828	1					
ANR	4059840	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	258:1:7045:7084	4059828	1	True				
ANR	4059841	IdentifierDecl	* node = ( RConfigNode * ) data		4059828	0					
ANR	4059842	IdentifierDeclType	RConfigNode *		4059828	0					
ANR	4059843	Identifier	node		4059828	1					
ANR	4059844	AssignmentExpression	* node = ( RConfigNode * ) data		4059828	2		=			
ANR	4059845	Identifier	node		4059828	0					
ANR	4059846	CastExpression	( RConfigNode * ) data		4059828	1					
ANR	4059847	CastTarget	RConfigNode *		4059828	0					
ANR	4059848	Identifier	data		4059828	1					
ANR	4059849	IfStatement	if ( node -> i_value )		4059828	2					
ANR	4059850	Condition	node -> i_value	259:5:7091:7103	4059828	0	True				
ANR	4059851	PtrMemberAccess	node -> i_value		4059828	0					
ANR	4059852	Identifier	node		4059828	0					
ANR	4059853	Identifier	i_value		4059828	1					
ANR	4059854	CompoundStatement		4:20:93:93	4059828	1					
ANR	4059855	ExpressionStatement	"r_config_set ( core -> config , ""bin.strings"" , ""false"" )"	260:2:7110:7161	4059828	0	True				
ANR	4059856	CallExpression	"r_config_set ( core -> config , ""bin.strings"" , ""false"" )"		4059828	0					
ANR	4059857	Callee	r_config_set		4059828	0					
ANR	4059858	Identifier	r_config_set		4059828	0					
ANR	4059859	ArgumentList	core -> config		4059828	1					
ANR	4059860	Argument	core -> config		4059828	0					
ANR	4059861	PtrMemberAccess	core -> config		4059828	0					
ANR	4059862	Identifier	core		4059828	0					
ANR	4059863	Identifier	config		4059828	1					
ANR	4059864	Argument	"""bin.strings"""		4059828	1					
ANR	4059865	PrimaryExpression	"""bin.strings"""		4059828	0					
ANR	4059866	Argument	"""false"""		4059828	2					
ANR	4059867	PrimaryExpression	"""false"""		4059828	0					
ANR	4059868	ReturnStatement	return true ;	262:1:7167:7178	4059828	3	True				
ANR	4059869	Identifier	true		4059828	0					
ANR	4059870	ReturnType	static bool		4059828	1					
ANR	4059871	Identifier	cb_analstrings		4059828	2					
ANR	4059872	ParameterList	"void * user , void * data"		4059828	3					
ANR	4059873	Parameter	void * user	256:27:6988:6997	4059828	0	True				
ANR	4059874	ParameterType	void *		4059828	0					
ANR	4059875	Identifier	user		4059828	1					
ANR	4059876	Parameter	void * data	256:39:7000:7009	4059828	1	True				
ANR	4059877	ParameterType	void *		4059828	0					
ANR	4059878	Identifier	data		4059828	1					
ANR	4059879	CFGEntryNode	ENTRY		4059828		True				
ANR	4059880	CFGExitNode	EXIT		4059828		True				
ANR	4059881	Symbol	core -> config		4059828						
ANR	4059882	Symbol	core		4059828						
ANR	4059883	Symbol	node		4059828						
ANR	4059884	Symbol	data		4059828						
ANR	4059885	Symbol	* core		4059828						
ANR	4059886	Symbol	true		4059828						
ANR	4059887	Symbol	* node		4059828						
ANR	4059888	Symbol	user		4059828						
ANR	4059889	Symbol	node -> i_value		4059828						
ANR	4059890	Function	cb_anal_ignbithints	265:0:7183:7373							
ANR	4059891	FunctionDef	"cb_anal_ignbithints (void * user , void * data)"		4059890	0					
ANR	4059892	CompoundStatement		265:56:7239:7373	4059890	0					
ANR	4059893	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	266:1:7242:7269	4059890	0	True				
ANR	4059894	IdentifierDecl	* core = ( RCore * ) user		4059890	0					
ANR	4059895	IdentifierDeclType	RCore *		4059890	0					
ANR	4059896	Identifier	core		4059890	1					
ANR	4059897	AssignmentExpression	* core = ( RCore * ) user		4059890	2		=			
ANR	4059898	Identifier	core		4059890	0					
ANR	4059899	CastExpression	( RCore * ) user		4059890	1					
ANR	4059900	CastTarget	RCore *		4059890	0					
ANR	4059901	Identifier	user		4059890	1					
ANR	4059902	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	267:1:7272:7311	4059890	1	True				
ANR	4059903	IdentifierDecl	* node = ( RConfigNode * ) data		4059890	0					
ANR	4059904	IdentifierDeclType	RConfigNode *		4059890	0					
ANR	4059905	Identifier	node		4059890	1					
ANR	4059906	AssignmentExpression	* node = ( RConfigNode * ) data		4059890	2		=			
ANR	4059907	Identifier	node		4059890	0					
ANR	4059908	CastExpression	( RConfigNode * ) data		4059890	1					
ANR	4059909	CastTarget	RConfigNode *		4059890	0					
ANR	4059910	Identifier	data		4059890	1					
ANR	4059911	ExpressionStatement	core -> anal -> opt . ignbithints = node -> i_value	268:1:7314:7357	4059890	2	True				
ANR	4059912	AssignmentExpression	core -> anal -> opt . ignbithints = node -> i_value		4059890	0		=			
ANR	4059913	MemberAccess	core -> anal -> opt . ignbithints		4059890	0					
ANR	4059914	PtrMemberAccess	core -> anal -> opt		4059890	0					
ANR	4059915	PtrMemberAccess	core -> anal		4059890	0					
ANR	4059916	Identifier	core		4059890	0					
ANR	4059917	Identifier	anal		4059890	1					
ANR	4059918	Identifier	opt		4059890	1					
ANR	4059919	Identifier	ignbithints		4059890	1					
ANR	4059920	PtrMemberAccess	node -> i_value		4059890	1					
ANR	4059921	Identifier	node		4059890	0					
ANR	4059922	Identifier	i_value		4059890	1					
ANR	4059923	ReturnStatement	return true ;	269:1:7360:7371	4059890	3	True				
ANR	4059924	Identifier	true		4059890	0					
ANR	4059925	ReturnType	static bool		4059890	1					
ANR	4059926	Identifier	cb_anal_ignbithints		4059890	2					
ANR	4059927	ParameterList	"void * user , void * data"		4059890	3					
ANR	4059928	Parameter	void * user	265:32:7215:7224	4059890	0	True				
ANR	4059929	ParameterType	void *		4059890	0					
ANR	4059930	Identifier	user		4059890	1					
ANR	4059931	Parameter	void * data	265:44:7227:7236	4059890	1	True				
ANR	4059932	ParameterType	void *		4059890	0					
ANR	4059933	Identifier	data		4059890	1					
ANR	4059934	CFGEntryNode	ENTRY		4059890		True				
ANR	4059935	CFGExitNode	EXIT		4059890		True				
ANR	4059936	Symbol	core -> anal -> opt		4059890						
ANR	4059937	Symbol	data		4059890						
ANR	4059938	Symbol	* core		4059890						
ANR	4059939	Symbol	core -> anal		4059890						
ANR	4059940	Symbol	node -> i_value		4059890						
ANR	4059941	Symbol	core		4059890						
ANR	4059942	Symbol	node		4059890						
ANR	4059943	Symbol	* core -> anal		4059890						
ANR	4059944	Symbol	true		4059890						
ANR	4059945	Symbol	* node		4059890						
ANR	4059946	Symbol	user		4059890						
ANR	4059947	Symbol	core -> anal -> opt . ignbithints		4059890						
ANR	4059948	Symbol	* * core		4059890						
ANR	4059949	Function	cb_analsleep	272:0:7376:7549							
ANR	4059950	FunctionDef	"cb_analsleep (void * user , void * data)"		4059949	0					
ANR	4059951	CompoundStatement		272:49:7425:7549	4059949	0					
ANR	4059952	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	273:1:7428:7455	4059949	0	True				
ANR	4059953	IdentifierDecl	* core = ( RCore * ) user		4059949	0					
ANR	4059954	IdentifierDeclType	RCore *		4059949	0					
ANR	4059955	Identifier	core		4059949	1					
ANR	4059956	AssignmentExpression	* core = ( RCore * ) user		4059949	2		=			
ANR	4059957	Identifier	core		4059949	0					
ANR	4059958	CastExpression	( RCore * ) user		4059949	1					
ANR	4059959	CastTarget	RCore *		4059949	0					
ANR	4059960	Identifier	user		4059949	1					
ANR	4059961	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	274:1:7458:7497	4059949	1	True				
ANR	4059962	IdentifierDecl	* node = ( RConfigNode * ) data		4059949	0					
ANR	4059963	IdentifierDeclType	RConfigNode *		4059949	0					
ANR	4059964	Identifier	node		4059949	1					
ANR	4059965	AssignmentExpression	* node = ( RConfigNode * ) data		4059949	2		=			
ANR	4059966	Identifier	node		4059949	0					
ANR	4059967	CastExpression	( RConfigNode * ) data		4059949	1					
ANR	4059968	CastTarget	RConfigNode *		4059949	0					
ANR	4059969	Identifier	data		4059949	1					
ANR	4059970	ExpressionStatement	core -> anal -> sleep = node -> i_value	275:1:7500:7533	4059949	2	True				
ANR	4059971	AssignmentExpression	core -> anal -> sleep = node -> i_value		4059949	0		=			
ANR	4059972	PtrMemberAccess	core -> anal -> sleep		4059949	0					
ANR	4059973	PtrMemberAccess	core -> anal		4059949	0					
ANR	4059974	Identifier	core		4059949	0					
ANR	4059975	Identifier	anal		4059949	1					
ANR	4059976	Identifier	sleep		4059949	1					
ANR	4059977	PtrMemberAccess	node -> i_value		4059949	1					
ANR	4059978	Identifier	node		4059949	0					
ANR	4059979	Identifier	i_value		4059949	1					
ANR	4059980	ReturnStatement	return true ;	276:1:7536:7547	4059949	3	True				
ANR	4059981	Identifier	true		4059949	0					
ANR	4059982	ReturnType	static bool		4059949	1					
ANR	4059983	Identifier	cb_analsleep		4059949	2					
ANR	4059984	ParameterList	"void * user , void * data"		4059949	3					
ANR	4059985	Parameter	void * user	272:25:7401:7410	4059949	0	True				
ANR	4059986	ParameterType	void *		4059949	0					
ANR	4059987	Identifier	user		4059949	1					
ANR	4059988	Parameter	void * data	272:37:7413:7422	4059949	1	True				
ANR	4059989	ParameterType	void *		4059949	0					
ANR	4059990	Identifier	data		4059949	1					
ANR	4059991	CFGEntryNode	ENTRY		4059949		True				
ANR	4059992	CFGExitNode	EXIT		4059949		True				
ANR	4059993	Symbol	core -> anal -> sleep		4059949						
ANR	4059994	Symbol	core		4059949						
ANR	4059995	Symbol	node		4059949						
ANR	4059996	Symbol	* core -> anal		4059949						
ANR	4059997	Symbol	data		4059949						
ANR	4059998	Symbol	* core		4059949						
ANR	4059999	Symbol	true		4059949						
ANR	4060000	Symbol	* node		4059949						
ANR	4060001	Symbol	user		4059949						
ANR	4060002	Symbol	core -> anal		4059949						
ANR	4060003	Symbol	* * core		4059949						
ANR	4060004	Symbol	node -> i_value		4059949						
ANR	4060005	Function	cb_analmaxrefs	279:0:7552:7733							
ANR	4060006	FunctionDef	"cb_analmaxrefs (void * user , void * data)"		4060005	0					
ANR	4060007	CompoundStatement		279:51:7603:7733	4060005	0					
ANR	4060008	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	280:1:7606:7633	4060005	0	True				
ANR	4060009	IdentifierDecl	* core = ( RCore * ) user		4060005	0					
ANR	4060010	IdentifierDeclType	RCore *		4060005	0					
ANR	4060011	Identifier	core		4060005	1					
ANR	4060012	AssignmentExpression	* core = ( RCore * ) user		4060005	2		=			
ANR	4060013	Identifier	core		4060005	0					
ANR	4060014	CastExpression	( RCore * ) user		4060005	1					
ANR	4060015	CastTarget	RCore *		4060005	0					
ANR	4060016	Identifier	user		4060005	1					
ANR	4060017	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	281:1:7636:7675	4060005	1	True				
ANR	4060018	IdentifierDecl	* node = ( RConfigNode * ) data		4060005	0					
ANR	4060019	IdentifierDeclType	RConfigNode *		4060005	0					
ANR	4060020	Identifier	node		4060005	1					
ANR	4060021	AssignmentExpression	* node = ( RConfigNode * ) data		4060005	2		=			
ANR	4060022	Identifier	node		4060005	0					
ANR	4060023	CastExpression	( RConfigNode * ) data		4060005	1					
ANR	4060024	CastTarget	RConfigNode *		4060005	0					
ANR	4060025	Identifier	data		4060005	1					
ANR	4060026	ExpressionStatement	core -> anal -> maxreflines = node -> i_value	282:1:7678:7717	4060005	2	True				
ANR	4060027	AssignmentExpression	core -> anal -> maxreflines = node -> i_value		4060005	0		=			
ANR	4060028	PtrMemberAccess	core -> anal -> maxreflines		4060005	0					
ANR	4060029	PtrMemberAccess	core -> anal		4060005	0					
ANR	4060030	Identifier	core		4060005	0					
ANR	4060031	Identifier	anal		4060005	1					
ANR	4060032	Identifier	maxreflines		4060005	1					
ANR	4060033	PtrMemberAccess	node -> i_value		4060005	1					
ANR	4060034	Identifier	node		4060005	0					
ANR	4060035	Identifier	i_value		4060005	1					
ANR	4060036	ReturnStatement	return true ;	283:1:7720:7731	4060005	3	True				
ANR	4060037	Identifier	true		4060005	0					
ANR	4060038	ReturnType	static bool		4060005	1					
ANR	4060039	Identifier	cb_analmaxrefs		4060005	2					
ANR	4060040	ParameterList	"void * user , void * data"		4060005	3					
ANR	4060041	Parameter	void * user	279:27:7579:7588	4060005	0	True				
ANR	4060042	ParameterType	void *		4060005	0					
ANR	4060043	Identifier	user		4060005	1					
ANR	4060044	Parameter	void * data	279:39:7591:7600	4060005	1	True				
ANR	4060045	ParameterType	void *		4060005	0					
ANR	4060046	Identifier	data		4060005	1					
ANR	4060047	CFGEntryNode	ENTRY		4060005		True				
ANR	4060048	CFGExitNode	EXIT		4060005		True				
ANR	4060049	Symbol	core		4060005						
ANR	4060050	Symbol	node		4060005						
ANR	4060051	Symbol	* core -> anal		4060005						
ANR	4060052	Symbol	data		4060005						
ANR	4060053	Symbol	* core		4060005						
ANR	4060054	Symbol	core -> anal -> maxreflines		4060005						
ANR	4060055	Symbol	true		4060005						
ANR	4060056	Symbol	* node		4060005						
ANR	4060057	Symbol	user		4060005						
ANR	4060058	Symbol	core -> anal		4060005						
ANR	4060059	Symbol	* * core		4060005						
ANR	4060060	Symbol	node -> i_value		4060005						
ANR	4060061	Function	cb_analnopskip	286:0:7736:7917							
ANR	4060062	FunctionDef	"cb_analnopskip (void * user , void * data)"		4060061	0					
ANR	4060063	CompoundStatement		286:51:7787:7917	4060061	0					
ANR	4060064	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	287:1:7790:7817	4060061	0	True				
ANR	4060065	IdentifierDecl	* core = ( RCore * ) user		4060061	0					
ANR	4060066	IdentifierDeclType	RCore *		4060061	0					
ANR	4060067	Identifier	core		4060061	1					
ANR	4060068	AssignmentExpression	* core = ( RCore * ) user		4060061	2		=			
ANR	4060069	Identifier	core		4060061	0					
ANR	4060070	CastExpression	( RCore * ) user		4060061	1					
ANR	4060071	CastTarget	RCore *		4060061	0					
ANR	4060072	Identifier	user		4060061	1					
ANR	4060073	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	288:1:7820:7859	4060061	1	True				
ANR	4060074	IdentifierDecl	* node = ( RConfigNode * ) data		4060061	0					
ANR	4060075	IdentifierDeclType	RConfigNode *		4060061	0					
ANR	4060076	Identifier	node		4060061	1					
ANR	4060077	AssignmentExpression	* node = ( RConfigNode * ) data		4060061	2		=			
ANR	4060078	Identifier	node		4060061	0					
ANR	4060079	CastExpression	( RConfigNode * ) data		4060061	1					
ANR	4060080	CastTarget	RConfigNode *		4060061	0					
ANR	4060081	Identifier	data		4060061	1					
ANR	4060082	ExpressionStatement	core -> anal -> opt . nopskip = node -> i_value	289:1:7862:7901	4060061	2	True				
ANR	4060083	AssignmentExpression	core -> anal -> opt . nopskip = node -> i_value		4060061	0		=			
ANR	4060084	MemberAccess	core -> anal -> opt . nopskip		4060061	0					
ANR	4060085	PtrMemberAccess	core -> anal -> opt		4060061	0					
ANR	4060086	PtrMemberAccess	core -> anal		4060061	0					
ANR	4060087	Identifier	core		4060061	0					
ANR	4060088	Identifier	anal		4060061	1					
ANR	4060089	Identifier	opt		4060061	1					
ANR	4060090	Identifier	nopskip		4060061	1					
ANR	4060091	PtrMemberAccess	node -> i_value		4060061	1					
ANR	4060092	Identifier	node		4060061	0					
ANR	4060093	Identifier	i_value		4060061	1					
ANR	4060094	ReturnStatement	return true ;	290:1:7904:7915	4060061	3	True				
ANR	4060095	Identifier	true		4060061	0					
ANR	4060096	ReturnType	static bool		4060061	1					
ANR	4060097	Identifier	cb_analnopskip		4060061	2					
ANR	4060098	ParameterList	"void * user , void * data"		4060061	3					
ANR	4060099	Parameter	void * user	286:27:7763:7772	4060061	0	True				
ANR	4060100	ParameterType	void *		4060061	0					
ANR	4060101	Identifier	user		4060061	1					
ANR	4060102	Parameter	void * data	286:39:7775:7784	4060061	1	True				
ANR	4060103	ParameterType	void *		4060061	0					
ANR	4060104	Identifier	data		4060061	1					
ANR	4060105	CFGEntryNode	ENTRY		4060061		True				
ANR	4060106	CFGExitNode	EXIT		4060061		True				
ANR	4060107	Symbol	core -> anal -> opt		4060061						
ANR	4060108	Symbol	data		4060061						
ANR	4060109	Symbol	core -> anal -> opt . nopskip		4060061						
ANR	4060110	Symbol	* core		4060061						
ANR	4060111	Symbol	core -> anal		4060061						
ANR	4060112	Symbol	node -> i_value		4060061						
ANR	4060113	Symbol	core		4060061						
ANR	4060114	Symbol	node		4060061						
ANR	4060115	Symbol	* core -> anal		4060061						
ANR	4060116	Symbol	true		4060061						
ANR	4060117	Symbol	* node		4060061						
ANR	4060118	Symbol	user		4060061						
ANR	4060119	Symbol	* * core		4060061						
ANR	4060120	Function	cb_analhpskip	293:0:7920:8099							
ANR	4060121	FunctionDef	"cb_analhpskip (void * user , void * data)"		4060120	0					
ANR	4060122	CompoundStatement		293:50:7970:8099	4060120	0					
ANR	4060123	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	294:1:7973:8000	4060120	0	True				
ANR	4060124	IdentifierDecl	* core = ( RCore * ) user		4060120	0					
ANR	4060125	IdentifierDeclType	RCore *		4060120	0					
ANR	4060126	Identifier	core		4060120	1					
ANR	4060127	AssignmentExpression	* core = ( RCore * ) user		4060120	2		=			
ANR	4060128	Identifier	core		4060120	0					
ANR	4060129	CastExpression	( RCore * ) user		4060120	1					
ANR	4060130	CastTarget	RCore *		4060120	0					
ANR	4060131	Identifier	user		4060120	1					
ANR	4060132	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	295:1:8003:8042	4060120	1	True				
ANR	4060133	IdentifierDecl	* node = ( RConfigNode * ) data		4060120	0					
ANR	4060134	IdentifierDeclType	RConfigNode *		4060120	0					
ANR	4060135	Identifier	node		4060120	1					
ANR	4060136	AssignmentExpression	* node = ( RConfigNode * ) data		4060120	2		=			
ANR	4060137	Identifier	node		4060120	0					
ANR	4060138	CastExpression	( RConfigNode * ) data		4060120	1					
ANR	4060139	CastTarget	RConfigNode *		4060120	0					
ANR	4060140	Identifier	data		4060120	1					
ANR	4060141	ExpressionStatement	core -> anal -> opt . hpskip = node -> i_value	296:1:8045:8083	4060120	2	True				
ANR	4060142	AssignmentExpression	core -> anal -> opt . hpskip = node -> i_value		4060120	0		=			
ANR	4060143	MemberAccess	core -> anal -> opt . hpskip		4060120	0					
ANR	4060144	PtrMemberAccess	core -> anal -> opt		4060120	0					
ANR	4060145	PtrMemberAccess	core -> anal		4060120	0					
ANR	4060146	Identifier	core		4060120	0					
ANR	4060147	Identifier	anal		4060120	1					
ANR	4060148	Identifier	opt		4060120	1					
ANR	4060149	Identifier	hpskip		4060120	1					
ANR	4060150	PtrMemberAccess	node -> i_value		4060120	1					
ANR	4060151	Identifier	node		4060120	0					
ANR	4060152	Identifier	i_value		4060120	1					
ANR	4060153	ReturnStatement	return true ;	297:1:8086:8097	4060120	3	True				
ANR	4060154	Identifier	true		4060120	0					
ANR	4060155	ReturnType	static bool		4060120	1					
ANR	4060156	Identifier	cb_analhpskip		4060120	2					
ANR	4060157	ParameterList	"void * user , void * data"		4060120	3					
ANR	4060158	Parameter	void * user	293:26:7946:7955	4060120	0	True				
ANR	4060159	ParameterType	void *		4060120	0					
ANR	4060160	Identifier	user		4060120	1					
ANR	4060161	Parameter	void * data	293:38:7958:7967	4060120	1	True				
ANR	4060162	ParameterType	void *		4060120	0					
ANR	4060163	Identifier	data		4060120	1					
ANR	4060164	CFGEntryNode	ENTRY		4060120		True				
ANR	4060165	CFGExitNode	EXIT		4060120		True				
ANR	4060166	Symbol	core -> anal -> opt		4060120						
ANR	4060167	Symbol	core -> anal -> opt . hpskip		4060120						
ANR	4060168	Symbol	data		4060120						
ANR	4060169	Symbol	* core		4060120						
ANR	4060170	Symbol	core -> anal		4060120						
ANR	4060171	Symbol	node -> i_value		4060120						
ANR	4060172	Symbol	core		4060120						
ANR	4060173	Symbol	node		4060120						
ANR	4060174	Symbol	* core -> anal		4060120						
ANR	4060175	Symbol	true		4060120						
ANR	4060176	Symbol	* node		4060120						
ANR	4060177	Symbol	user		4060120						
ANR	4060178	Symbol	* * core		4060120						
ANR	4060179	Function	update_analarch_options	300:0:8102:8364							
ANR	4060180	FunctionDef	"update_analarch_options (RCore * core , RConfigNode * node)"		4060179	0					
ANR	4060181	CompoundStatement		300:68:8170:8364	4060179	0					
ANR	4060182	IdentifierDeclStatement	RAnalPlugin * h ;	301:1:8173:8187	4060179	0	True				
ANR	4060183	IdentifierDecl	* h		4060179	0					
ANR	4060184	IdentifierDeclType	RAnalPlugin *		4060179	0					
ANR	4060185	Identifier	h		4060179	1					
ANR	4060186	IdentifierDeclStatement	RListIter * it ;	302:1:8190:8203	4060179	1	True				
ANR	4060187	IdentifierDecl	* it		4060179	0					
ANR	4060188	IdentifierDeclType	RListIter *		4060179	0					
ANR	4060189	Identifier	it		4060179	1					
ANR	4060190	IfStatement	if ( core && core -> anal && node )		4060179	2					
ANR	4060191	Condition	core && core -> anal && node	303:5:8210:8235	4060179	0	True				
ANR	4060192	AndExpression	core && core -> anal && node		4060179	0		&&			
ANR	4060193	Identifier	core		4060179	0					
ANR	4060194	AndExpression	core -> anal && node		4060179	1		&&			
ANR	4060195	PtrMemberAccess	core -> anal		4060179	0					
ANR	4060196	Identifier	core		4060179	0					
ANR	4060197	Identifier	anal		4060179	1					
ANR	4060198	Identifier	node		4060179	1					
ANR	4060199	CompoundStatement		4:33:67:67	4060179	1					
ANR	4060200	ExpressionStatement	r_list_purge ( node -> options )	304:2:8242:8270	4060179	0	True				
ANR	4060201	CallExpression	r_list_purge ( node -> options )		4060179	0					
ANR	4060202	Callee	r_list_purge		4060179	0					
ANR	4060203	Identifier	r_list_purge		4060179	0					
ANR	4060204	ArgumentList	node -> options		4060179	1					
ANR	4060205	Argument	node -> options		4060179	0					
ANR	4060206	PtrMemberAccess	node -> options		4060179	0					
ANR	4060207	Identifier	node		4060179	0					
ANR	4060208	Identifier	options		4060179	1					
ANR	4060209	Statement	r_list_foreach	305:2:8274:8287	4060179	1	True				
ANR	4060210	Statement	(	305:17:8289:8289	4060179	2	True				
ANR	4060211	Statement	core	305:18:8290:8293	4060179	3	True				
ANR	4060212	Statement	->	305:22:8294:8295	4060179	4	True				
ANR	4060213	Statement	anal	305:24:8296:8299	4060179	5	True				
ANR	4060214	Statement	->	305:28:8300:8301	4060179	6	True				
ANR	4060215	Statement	plugins	305:30:8302:8308	4060179	7	True				
ANR	4060216	Statement	","	305:37:8309:8309	4060179	8	True				
ANR	4060217	Statement	it	305:39:8311:8312	4060179	9	True				
ANR	4060218	Statement	","	305:41:8313:8313	4060179	10	True				
ANR	4060219	Statement	h	305:43:8315:8315	4060179	11	True				
ANR	4060220	Statement	)	305:44:8316:8316	4060179	12	True				
ANR	4060221	CompoundStatement		6:46:147:147	4060179	13					
ANR	4060222	ExpressionStatement	"SETOPTIONS ( node , h -> name , NULL )"	306:3:8323:8355	4060179	0	True				
ANR	4060223	CallExpression	"SETOPTIONS ( node , h -> name , NULL )"		4060179	0					
ANR	4060224	Callee	SETOPTIONS		4060179	0					
ANR	4060225	Identifier	SETOPTIONS		4060179	0					
ANR	4060226	ArgumentList	node		4060179	1					
ANR	4060227	Argument	node		4060179	0					
ANR	4060228	Identifier	node		4060179	0					
ANR	4060229	Argument	h -> name		4060179	1					
ANR	4060230	PtrMemberAccess	h -> name		4060179	0					
ANR	4060231	Identifier	h		4060179	0					
ANR	4060232	Identifier	name		4060179	1					
ANR	4060233	Argument	NULL		4060179	2					
ANR	4060234	Identifier	NULL		4060179	0					
ANR	4060235	ReturnType	static void		4060179	1					
ANR	4060236	Identifier	update_analarch_options		4060179	2					
ANR	4060237	ParameterList	"RCore * core , RConfigNode * node"		4060179	3					
ANR	4060238	Parameter	RCore * core	300:36:8138:8148	4060179	0	True				
ANR	4060239	ParameterType	RCore *		4060179	0					
ANR	4060240	Identifier	core		4060179	1					
ANR	4060241	Parameter	RConfigNode * node	300:49:8151:8167	4060179	1	True				
ANR	4060242	ParameterType	RConfigNode *		4060179	0					
ANR	4060243	Identifier	node		4060179	1					
ANR	4060244	CFGEntryNode	ENTRY		4060179		True				
ANR	4060245	CFGExitNode	EXIT		4060179		True				
ANR	4060246	Symbol	core		4060179						
ANR	4060247	Symbol	node		4060179						
ANR	4060248	Symbol	* h		4060179						
ANR	4060249	Symbol	NULL		4060179						
ANR	4060250	Symbol	h		4060179						
ANR	4060251	Symbol	* core		4060179						
ANR	4060252	Symbol	node -> options		4060179						
ANR	4060253	Symbol	* node		4060179						
ANR	4060254	Symbol	it		4060179						
ANR	4060255	Symbol	core -> anal		4060179						
ANR	4060256	Symbol	h -> name		4060179						
ANR	4060257	Function	cb_analarch	311:0:8367:8954							
ANR	4060258	FunctionDef	"cb_analarch (void * user , void * data)"		4060257	0					
ANR	4060259	CompoundStatement		311:48:8415:8954	4060257	0					
ANR	4060260	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	312:1:8418:8445	4060257	0	True				
ANR	4060261	IdentifierDecl	* core = ( RCore * ) user		4060257	0					
ANR	4060262	IdentifierDeclType	RCore *		4060257	0					
ANR	4060263	Identifier	core		4060257	1					
ANR	4060264	AssignmentExpression	* core = ( RCore * ) user		4060257	2		=			
ANR	4060265	Identifier	core		4060257	0					
ANR	4060266	CastExpression	( RCore * ) user		4060257	1					
ANR	4060267	CastTarget	RCore *		4060257	0					
ANR	4060268	Identifier	user		4060257	1					
ANR	4060269	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	313:1:8448:8487	4060257	1	True				
ANR	4060270	IdentifierDecl	* node = ( RConfigNode * ) data		4060257	0					
ANR	4060271	IdentifierDeclType	RConfigNode *		4060257	0					
ANR	4060272	Identifier	node		4060257	1					
ANR	4060273	AssignmentExpression	* node = ( RConfigNode * ) data		4060257	2		=			
ANR	4060274	Identifier	node		4060257	0					
ANR	4060275	CastExpression	( RConfigNode * ) data		4060257	1					
ANR	4060276	CastTarget	RConfigNode *		4060257	0					
ANR	4060277	Identifier	data		4060257	1					
ANR	4060278	IfStatement	if ( * node -> value == '?' )		4060257	2					
ANR	4060279	Condition	* node -> value == '?'	314:5:8494:8512	4060257	0	True				
ANR	4060280	EqualityExpression	* node -> value == '?'		4060257	0		==			
ANR	4060281	UnaryOperationExpression	* node -> value		4060257	0					
ANR	4060282	UnaryOperator	*		4060257	0					
ANR	4060283	PtrMemberAccess	node -> value		4060257	1					
ANR	4060284	Identifier	node		4060257	0					
ANR	4060285	Identifier	value		4060257	1					
ANR	4060286	PrimaryExpression	'?'		4060257	1					
ANR	4060287	CompoundStatement		4:26:99:99	4060257	1					
ANR	4060288	ExpressionStatement	"update_analarch_options ( core , node )"	315:2:8519:8555	4060257	0	True				
ANR	4060289	CallExpression	"update_analarch_options ( core , node )"		4060257	0					
ANR	4060290	Callee	update_analarch_options		4060257	0					
ANR	4060291	Identifier	update_analarch_options		4060257	0					
ANR	4060292	ArgumentList	core		4060257	1					
ANR	4060293	Argument	core		4060257	0					
ANR	4060294	Identifier	core		4060257	0					
ANR	4060295	Argument	node		4060257	1					
ANR	4060296	Identifier	node		4060257	0					
ANR	4060297	ExpressionStatement	print_node_options ( node )	316:2:8559:8584	4060257	1	True				
ANR	4060298	CallExpression	print_node_options ( node )		4060257	0					
ANR	4060299	Callee	print_node_options		4060257	0					
ANR	4060300	Identifier	print_node_options		4060257	0					
ANR	4060301	ArgumentList	node		4060257	1					
ANR	4060302	Argument	node		4060257	0					
ANR	4060303	Identifier	node		4060257	0					
ANR	4060304	ReturnStatement	return false ;	317:2:8588:8600	4060257	2	True				
ANR	4060305	Identifier	false		4060257	0					
ANR	4060306	IfStatement	if ( * node -> value )		4060257	3					
ANR	4060307	Condition	* node -> value	319:5:8610:8621	4060257	0	True				
ANR	4060308	UnaryOperationExpression	* node -> value		4060257	0					
ANR	4060309	UnaryOperator	*		4060257	0					
ANR	4060310	PtrMemberAccess	node -> value		4060257	1					
ANR	4060311	Identifier	node		4060257	0					
ANR	4060312	Identifier	value		4060257	1					
ANR	4060313	CompoundStatement		13:2:278:334	4060257	1					
ANR	4060314	IfStatement	"if ( r_anal_use ( core -> anal , node -> value ) )"		4060257	0					
ANR	4060315	Condition	"r_anal_use ( core -> anal , node -> value )"	320:6:8632:8667	4060257	0	True				
ANR	4060316	CallExpression	"r_anal_use ( core -> anal , node -> value )"		4060257	0					
ANR	4060317	Callee	r_anal_use		4060257	0					
ANR	4060318	Identifier	r_anal_use		4060257	0					
ANR	4060319	ArgumentList	core -> anal		4060257	1					
ANR	4060320	Argument	core -> anal		4060257	0					
ANR	4060321	PtrMemberAccess	core -> anal		4060257	0					
ANR	4060322	Identifier	core		4060257	0					
ANR	4060323	Identifier	anal		4060257	1					
ANR	4060324	Argument	node -> value		4060257	1					
ANR	4060325	PtrMemberAccess	node -> value		4060257	0					
ANR	4060326	Identifier	node		4060257	0					
ANR	4060327	Identifier	value		4060257	1					
ANR	4060328	CompoundStatement		10:44:254:254	4060257	1					
ANR	4060329	ReturnStatement	return true ;	321:3:8675:8686	4060257	0	True				
ANR	4060330	Identifier	true		4060257	0					
ANR	4060331	IdentifierDeclStatement	"const char * aa = r_config_get ( core -> config , ""asm.arch"" ) ;"	323:2:8694:8750	4060257	1	True				
ANR	4060332	IdentifierDecl	"* aa = r_config_get ( core -> config , ""asm.arch"" )"		4060257	0					
ANR	4060333	IdentifierDeclType	const char *		4060257	0					
ANR	4060334	Identifier	aa		4060257	1					
ANR	4060335	AssignmentExpression	"* aa = r_config_get ( core -> config , ""asm.arch"" )"		4060257	2		=			
ANR	4060336	Identifier	aa		4060257	0					
ANR	4060337	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		4060257	1					
ANR	4060338	Callee	r_config_get		4060257	0					
ANR	4060339	Identifier	r_config_get		4060257	0					
ANR	4060340	ArgumentList	core -> config		4060257	1					
ANR	4060341	Argument	core -> config		4060257	0					
ANR	4060342	PtrMemberAccess	core -> config		4060257	0					
ANR	4060343	Identifier	core		4060257	0					
ANR	4060344	Identifier	config		4060257	1					
ANR	4060345	Argument	"""asm.arch"""		4060257	1					
ANR	4060346	PrimaryExpression	"""asm.arch"""		4060257	0					
ANR	4060347	IfStatement	"if ( ! aa || strcmp ( aa , node -> value ) )"		4060257	2					
ANR	4060348	Condition	"! aa || strcmp ( aa , node -> value )"	324:6:8758:8788	4060257	0	True				
ANR	4060349	OrExpression	"! aa || strcmp ( aa , node -> value )"		4060257	0		||			
ANR	4060350	UnaryOperationExpression	! aa		4060257	0					
ANR	4060351	UnaryOperator	!		4060257	0					
ANR	4060352	Identifier	aa		4060257	1					
ANR	4060353	CallExpression	"strcmp ( aa , node -> value )"		4060257	1					
ANR	4060354	Callee	strcmp		4060257	0					
ANR	4060355	Identifier	strcmp		4060257	0					
ANR	4060356	ArgumentList	aa		4060257	1					
ANR	4060357	Argument	aa		4060257	0					
ANR	4060358	Identifier	aa		4060257	0					
ANR	4060359	Argument	node -> value		4060257	1					
ANR	4060360	PtrMemberAccess	node -> value		4060257	0					
ANR	4060361	Identifier	node		4060257	0					
ANR	4060362	Identifier	value		4060257	1					
ANR	4060363	CompoundStatement		14:39:375:375	4060257	1					
ANR	4060364	ExpressionStatement	"eprintf ( ""anal.arch: cannot find '%s'\\n"" , node -> value )"	325:3:8796:8850	4060257	0	True				
ANR	4060365	CallExpression	"eprintf ( ""anal.arch: cannot find '%s'\\n"" , node -> value )"		4060257	0					
ANR	4060366	Callee	eprintf		4060257	0					
ANR	4060367	Identifier	eprintf		4060257	0					
ANR	4060368	ArgumentList	"""anal.arch: cannot find '%s'\\n"""		4060257	1					
ANR	4060369	Argument	"""anal.arch: cannot find '%s'\\n"""		4060257	0					
ANR	4060370	PrimaryExpression	"""anal.arch: cannot find '%s'\\n"""		4060257	0					
ANR	4060371	Argument	node -> value		4060257	1					
ANR	4060372	PtrMemberAccess	node -> value		4060257	0					
ANR	4060373	Identifier	node		4060257	0					
ANR	4060374	Identifier	value		4060257	1					
ANR	4060375	ElseStatement	else		4060257	0					
ANR	4060376	CompoundStatement		16:9:445:445	4060257	0					
ANR	4060377	ExpressionStatement	"r_config_set ( core -> config , ""anal.arch"" , ""null"" )"	327:3:8866:8914	4060257	0	True				
ANR	4060378	CallExpression	"r_config_set ( core -> config , ""anal.arch"" , ""null"" )"		4060257	0					
ANR	4060379	Callee	r_config_set		4060257	0					
ANR	4060380	Identifier	r_config_set		4060257	0					
ANR	4060381	ArgumentList	core -> config		4060257	1					
ANR	4060382	Argument	core -> config		4060257	0					
ANR	4060383	PtrMemberAccess	core -> config		4060257	0					
ANR	4060384	Identifier	core		4060257	0					
ANR	4060385	Identifier	config		4060257	1					
ANR	4060386	Argument	"""anal.arch"""		4060257	1					
ANR	4060387	PrimaryExpression	"""anal.arch"""		4060257	0					
ANR	4060388	Argument	"""null"""		4060257	2					
ANR	4060389	PrimaryExpression	"""null"""		4060257	0					
ANR	4060390	ReturnStatement	return true ;	328:3:8919:8930	4060257	1	True				
ANR	4060391	Identifier	true		4060257	0					
ANR	4060392	ReturnStatement	return false ;	331:1:8940:8952	4060257	4	True				
ANR	4060393	Identifier	false		4060257	0					
ANR	4060394	ReturnType	static bool		4060257	1					
ANR	4060395	Identifier	cb_analarch		4060257	2					
ANR	4060396	ParameterList	"void * user , void * data"		4060257	3					
ANR	4060397	Parameter	void * user	311:24:8391:8400	4060257	0	True				
ANR	4060398	ParameterType	void *		4060257	0					
ANR	4060399	Identifier	user		4060257	1					
ANR	4060400	Parameter	void * data	311:36:8403:8412	4060257	1	True				
ANR	4060401	ParameterType	void *		4060257	0					
ANR	4060402	Identifier	data		4060257	1					
ANR	4060403	CFGEntryNode	ENTRY		4060257		True				
ANR	4060404	CFGExitNode	EXIT		4060257		True				
ANR	4060405	Symbol	core -> config		4060257						
ANR	4060406	Symbol	aa		4060257						
ANR	4060407	Symbol	strcmp		4060257						
ANR	4060408	Symbol	* node -> value		4060257						
ANR	4060409	Symbol	data		4060257						
ANR	4060410	Symbol	false		4060257						
ANR	4060411	Symbol	* core		4060257						
ANR	4060412	Symbol	r_config_get		4060257						
ANR	4060413	Symbol	core -> anal		4060257						
ANR	4060414	Symbol	node -> value		4060257						
ANR	4060415	Symbol	r_anal_use		4060257						
ANR	4060416	Symbol	core		4060257						
ANR	4060417	Symbol	node		4060257						
ANR	4060418	Symbol	* * node		4060257						
ANR	4060419	Symbol	true		4060257						
ANR	4060420	Symbol	* node		4060257						
ANR	4060421	Symbol	user		4060257						
ANR	4060422	Function	cb_analcpu	334:0:8957:9290							
ANR	4060423	FunctionDef	"cb_analcpu (void * user , void * data)"		4060422	0					
ANR	4060424	CompoundStatement		334:47:9004:9290	4060422	0					
ANR	4060425	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	335:1:9007:9035	4060422	0	True				
ANR	4060426	IdentifierDecl	* core = ( RCore * ) user		4060422	0					
ANR	4060427	IdentifierDeclType	RCore *		4060422	0					
ANR	4060428	Identifier	core		4060422	1					
ANR	4060429	AssignmentExpression	* core = ( RCore * ) user		4060422	2		=			
ANR	4060430	Identifier	core		4060422	0					
ANR	4060431	CastExpression	( RCore * ) user		4060422	1					
ANR	4060432	CastTarget	RCore *		4060422	0					
ANR	4060433	Identifier	user		4060422	1					
ANR	4060434	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	336:1:9038:9078	4060422	1	True				
ANR	4060435	IdentifierDecl	* node = ( RConfigNode * ) data		4060422	0					
ANR	4060436	IdentifierDeclType	RConfigNode *		4060422	0					
ANR	4060437	Identifier	node		4060422	1					
ANR	4060438	AssignmentExpression	* node = ( RConfigNode * ) data		4060422	2		=			
ANR	4060439	Identifier	node		4060422	0					
ANR	4060440	CastExpression	( RConfigNode * ) data		4060422	1					
ANR	4060441	CastTarget	RConfigNode *		4060422	0					
ANR	4060442	Identifier	data		4060422	1					
ANR	4060443	ExpressionStatement	"r_anal_set_cpu ( core -> anal , node -> value )"	337:1:9081:9121	4060422	2	True				
ANR	4060444	CallExpression	"r_anal_set_cpu ( core -> anal , node -> value )"		4060422	0					
ANR	4060445	Callee	r_anal_set_cpu		4060422	0					
ANR	4060446	Identifier	r_anal_set_cpu		4060422	0					
ANR	4060447	ArgumentList	core -> anal		4060422	1					
ANR	4060448	Argument	core -> anal		4060422	0					
ANR	4060449	PtrMemberAccess	core -> anal		4060422	0					
ANR	4060450	Identifier	core		4060422	0					
ANR	4060451	Identifier	anal		4060422	1					
ANR	4060452	Argument	node -> value		4060422	1					
ANR	4060453	PtrMemberAccess	node -> value		4060422	0					
ANR	4060454	Identifier	node		4060422	0					
ANR	4060455	Identifier	value		4060422	1					
ANR	4060456	CompoundStatement		7:2:142:201	4060422	3					
ANR	4060457	IdentifierDeclStatement	"int v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN ) ;"	340:2:9147:9206	4060422	0	True				
ANR	4060458	IdentifierDecl	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		4060422	0					
ANR	4060459	IdentifierDeclType	int		4060422	0					
ANR	4060460	Identifier	v		4060422	1					
ANR	4060461	AssignmentExpression	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		4060422	2		=			
ANR	4060462	Identifier	v		4060422	0					
ANR	4060463	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		4060422	1					
ANR	4060464	Callee	r_anal_archinfo		4060422	0					
ANR	4060465	Identifier	r_anal_archinfo		4060422	0					
ANR	4060466	ArgumentList	core -> anal		4060422	1					
ANR	4060467	Argument	core -> anal		4060422	0					
ANR	4060468	PtrMemberAccess	core -> anal		4060422	0					
ANR	4060469	Identifier	core		4060422	0					
ANR	4060470	Identifier	anal		4060422	1					
ANR	4060471	Argument	R_ANAL_ARCHINFO_ALIGN		4060422	1					
ANR	4060472	Identifier	R_ANAL_ARCHINFO_ALIGN		4060422	0					
ANR	4060473	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.pcalign"" , ( v != - 1 ) ? v : 0 )"	341:2:9210:9271	4060422	1	True				
ANR	4060474	CallExpression	"r_config_set_i ( core -> config , ""asm.pcalign"" , ( v != - 1 ) ? v : 0 )"		4060422	0					
ANR	4060475	Callee	r_config_set_i		4060422	0					
ANR	4060476	Identifier	r_config_set_i		4060422	0					
ANR	4060477	ArgumentList	core -> config		4060422	1					
ANR	4060478	Argument	core -> config		4060422	0					
ANR	4060479	PtrMemberAccess	core -> config		4060422	0					
ANR	4060480	Identifier	core		4060422	0					
ANR	4060481	Identifier	config		4060422	1					
ANR	4060482	Argument	"""asm.pcalign"""		4060422	1					
ANR	4060483	PrimaryExpression	"""asm.pcalign"""		4060422	0					
ANR	4060484	Argument	( v != - 1 ) ? v : 0		4060422	2					
ANR	4060485	ConditionalExpression	( v != - 1 ) ? v : 0		4060422	0					
ANR	4060486	Condition	v != - 1		4060422	0					
ANR	4060487	EqualityExpression	v != - 1		4060422	0		!=			
ANR	4060488	Identifier	v		4060422	0					
ANR	4060489	UnaryOperationExpression	- 1		4060422	1					
ANR	4060490	UnaryOperator	-		4060422	0					
ANR	4060491	PrimaryExpression	1		4060422	1					
ANR	4060492	Identifier	v		4060422	1					
ANR	4060493	PrimaryExpression	0		4060422	2					
ANR	4060494	ReturnStatement	return true ;	343:1:9277:9288	4060422	4	True				
ANR	4060495	Identifier	true		4060422	0					
ANR	4060496	ReturnType	static bool		4060422	1					
ANR	4060497	Identifier	cb_analcpu		4060422	2					
ANR	4060498	ParameterList	"void * user , void * data"		4060422	3					
ANR	4060499	Parameter	void * user	334:23:8980:8989	4060422	0	True				
ANR	4060500	ParameterType	void *		4060422	0					
ANR	4060501	Identifier	user		4060422	1					
ANR	4060502	Parameter	void * data	334:35:8992:9001	4060422	1	True				
ANR	4060503	ParameterType	void *		4060422	0					
ANR	4060504	Identifier	data		4060422	1					
ANR	4060505	CFGEntryNode	ENTRY		4060422		True				
ANR	4060506	CFGExitNode	EXIT		4060422		True				
ANR	4060507	Symbol	core -> config		4060422						
ANR	4060508	Symbol	data		4060422						
ANR	4060509	Symbol	r_anal_archinfo		4060422						
ANR	4060510	Symbol	* core		4060422						
ANR	4060511	Symbol	core -> anal		4060422						
ANR	4060512	Symbol	node -> value		4060422						
ANR	4060513	Symbol	core		4060422						
ANR	4060514	Symbol	node		4060422						
ANR	4060515	Symbol	R_ANAL_ARCHINFO_ALIGN		4060422						
ANR	4060516	Symbol	v		4060422						
ANR	4060517	Symbol	true		4060422						
ANR	4060518	Symbol	* node		4060422						
ANR	4060519	Symbol	user		4060422						
ANR	4060520	Function	cb_analrecont	346:0:9293:9472							
ANR	4060521	FunctionDef	"cb_analrecont (void * user , void * data)"		4060520	0					
ANR	4060522	CompoundStatement		346:50:9343:9472	4060520	0					
ANR	4060523	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	347:1:9346:9373	4060520	0	True				
ANR	4060524	IdentifierDecl	* core = ( RCore * ) user		4060520	0					
ANR	4060525	IdentifierDeclType	RCore *		4060520	0					
ANR	4060526	Identifier	core		4060520	1					
ANR	4060527	AssignmentExpression	* core = ( RCore * ) user		4060520	2		=			
ANR	4060528	Identifier	core		4060520	0					
ANR	4060529	CastExpression	( RCore * ) user		4060520	1					
ANR	4060530	CastTarget	RCore *		4060520	0					
ANR	4060531	Identifier	user		4060520	1					
ANR	4060532	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	348:1:9376:9415	4060520	1	True				
ANR	4060533	IdentifierDecl	* node = ( RConfigNode * ) data		4060520	0					
ANR	4060534	IdentifierDeclType	RConfigNode *		4060520	0					
ANR	4060535	Identifier	node		4060520	1					
ANR	4060536	AssignmentExpression	* node = ( RConfigNode * ) data		4060520	2		=			
ANR	4060537	Identifier	node		4060520	0					
ANR	4060538	CastExpression	( RConfigNode * ) data		4060520	1					
ANR	4060539	CastTarget	RConfigNode *		4060520	0					
ANR	4060540	Identifier	data		4060520	1					
ANR	4060541	ExpressionStatement	core -> anal -> opt . recont = node -> i_value	349:1:9418:9456	4060520	2	True				
ANR	4060542	AssignmentExpression	core -> anal -> opt . recont = node -> i_value		4060520	0		=			
ANR	4060543	MemberAccess	core -> anal -> opt . recont		4060520	0					
ANR	4060544	PtrMemberAccess	core -> anal -> opt		4060520	0					
ANR	4060545	PtrMemberAccess	core -> anal		4060520	0					
ANR	4060546	Identifier	core		4060520	0					
ANR	4060547	Identifier	anal		4060520	1					
ANR	4060548	Identifier	opt		4060520	1					
ANR	4060549	Identifier	recont		4060520	1					
ANR	4060550	PtrMemberAccess	node -> i_value		4060520	1					
ANR	4060551	Identifier	node		4060520	0					
ANR	4060552	Identifier	i_value		4060520	1					
ANR	4060553	ReturnStatement	return true ;	350:1:9459:9470	4060520	3	True				
ANR	4060554	Identifier	true		4060520	0					
ANR	4060555	ReturnType	static bool		4060520	1					
ANR	4060556	Identifier	cb_analrecont		4060520	2					
ANR	4060557	ParameterList	"void * user , void * data"		4060520	3					
ANR	4060558	Parameter	void * user	346:26:9319:9328	4060520	0	True				
ANR	4060559	ParameterType	void *		4060520	0					
ANR	4060560	Identifier	user		4060520	1					
ANR	4060561	Parameter	void * data	346:38:9331:9340	4060520	1	True				
ANR	4060562	ParameterType	void *		4060520	0					
ANR	4060563	Identifier	data		4060520	1					
ANR	4060564	CFGEntryNode	ENTRY		4060520		True				
ANR	4060565	CFGExitNode	EXIT		4060520		True				
ANR	4060566	Symbol	core -> anal -> opt		4060520						
ANR	4060567	Symbol	data		4060520						
ANR	4060568	Symbol	* core		4060520						
ANR	4060569	Symbol	core -> anal		4060520						
ANR	4060570	Symbol	node -> i_value		4060520						
ANR	4060571	Symbol	core		4060520						
ANR	4060572	Symbol	node		4060520						
ANR	4060573	Symbol	core -> anal -> opt . recont		4060520						
ANR	4060574	Symbol	* core -> anal		4060520						
ANR	4060575	Symbol	true		4060520						
ANR	4060576	Symbol	* node		4060520						
ANR	4060577	Symbol	user		4060520						
ANR	4060578	Symbol	* * core		4060520						
ANR	4060579	Function	cb_analijmp	353:0:9475:9650							
ANR	4060580	FunctionDef	"cb_analijmp (void * user , void * data)"		4060579	0					
ANR	4060581	CompoundStatement		353:48:9523:9650	4060579	0					
ANR	4060582	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	354:1:9526:9553	4060579	0	True				
ANR	4060583	IdentifierDecl	* core = ( RCore * ) user		4060579	0					
ANR	4060584	IdentifierDeclType	RCore *		4060579	0					
ANR	4060585	Identifier	core		4060579	1					
ANR	4060586	AssignmentExpression	* core = ( RCore * ) user		4060579	2		=			
ANR	4060587	Identifier	core		4060579	0					
ANR	4060588	CastExpression	( RCore * ) user		4060579	1					
ANR	4060589	CastTarget	RCore *		4060579	0					
ANR	4060590	Identifier	user		4060579	1					
ANR	4060591	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	355:1:9556:9595	4060579	1	True				
ANR	4060592	IdentifierDecl	* node = ( RConfigNode * ) data		4060579	0					
ANR	4060593	IdentifierDeclType	RConfigNode *		4060579	0					
ANR	4060594	Identifier	node		4060579	1					
ANR	4060595	AssignmentExpression	* node = ( RConfigNode * ) data		4060579	2		=			
ANR	4060596	Identifier	node		4060579	0					
ANR	4060597	CastExpression	( RConfigNode * ) data		4060579	1					
ANR	4060598	CastTarget	RConfigNode *		4060579	0					
ANR	4060599	Identifier	data		4060579	1					
ANR	4060600	ExpressionStatement	core -> anal -> opt . ijmp = node -> i_value	356:1:9598:9634	4060579	2	True				
ANR	4060601	AssignmentExpression	core -> anal -> opt . ijmp = node -> i_value		4060579	0		=			
ANR	4060602	MemberAccess	core -> anal -> opt . ijmp		4060579	0					
ANR	4060603	PtrMemberAccess	core -> anal -> opt		4060579	0					
ANR	4060604	PtrMemberAccess	core -> anal		4060579	0					
ANR	4060605	Identifier	core		4060579	0					
ANR	4060606	Identifier	anal		4060579	1					
ANR	4060607	Identifier	opt		4060579	1					
ANR	4060608	Identifier	ijmp		4060579	1					
ANR	4060609	PtrMemberAccess	node -> i_value		4060579	1					
ANR	4060610	Identifier	node		4060579	0					
ANR	4060611	Identifier	i_value		4060579	1					
ANR	4060612	ReturnStatement	return true ;	357:1:9637:9648	4060579	3	True				
ANR	4060613	Identifier	true		4060579	0					
ANR	4060614	ReturnType	static bool		4060579	1					
ANR	4060615	Identifier	cb_analijmp		4060579	2					
ANR	4060616	ParameterList	"void * user , void * data"		4060579	3					
ANR	4060617	Parameter	void * user	353:24:9499:9508	4060579	0	True				
ANR	4060618	ParameterType	void *		4060579	0					
ANR	4060619	Identifier	user		4060579	1					
ANR	4060620	Parameter	void * data	353:36:9511:9520	4060579	1	True				
ANR	4060621	ParameterType	void *		4060579	0					
ANR	4060622	Identifier	data		4060579	1					
ANR	4060623	CFGEntryNode	ENTRY		4060579		True				
ANR	4060624	CFGExitNode	EXIT		4060579		True				
ANR	4060625	Symbol	core -> anal -> opt		4060579						
ANR	4060626	Symbol	core -> anal -> opt . ijmp		4060579						
ANR	4060627	Symbol	data		4060579						
ANR	4060628	Symbol	* core		4060579						
ANR	4060629	Symbol	core -> anal		4060579						
ANR	4060630	Symbol	node -> i_value		4060579						
ANR	4060631	Symbol	core		4060579						
ANR	4060632	Symbol	node		4060579						
ANR	4060633	Symbol	* core -> anal		4060579						
ANR	4060634	Symbol	true		4060579						
ANR	4060635	Symbol	* node		4060579						
ANR	4060636	Symbol	user		4060579						
ANR	4060637	Symbol	* * core		4060579						
ANR	4060638	Function	cb_asmvarsubmin	360:0:9653:9834							
ANR	4060639	FunctionDef	"cb_asmvarsubmin (void * user , void * data)"		4060638	0					
ANR	4060640	CompoundStatement		360:52:9705:9834	4060638	0					
ANR	4060641	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	361:1:9708:9736	4060638	0	True				
ANR	4060642	IdentifierDecl	* core = ( RCore * ) user		4060638	0					
ANR	4060643	IdentifierDeclType	RCore *		4060638	0					
ANR	4060644	Identifier	core		4060638	1					
ANR	4060645	AssignmentExpression	* core = ( RCore * ) user		4060638	2		=			
ANR	4060646	Identifier	core		4060638	0					
ANR	4060647	CastExpression	( RCore * ) user		4060638	1					
ANR	4060648	CastTarget	RCore *		4060638	0					
ANR	4060649	Identifier	user		4060638	1					
ANR	4060650	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	362:1:9739:9779	4060638	1	True				
ANR	4060651	IdentifierDecl	* node = ( RConfigNode * ) data		4060638	0					
ANR	4060652	IdentifierDeclType	RConfigNode *		4060638	0					
ANR	4060653	Identifier	node		4060638	1					
ANR	4060654	AssignmentExpression	* node = ( RConfigNode * ) data		4060638	2		=			
ANR	4060655	Identifier	node		4060638	0					
ANR	4060656	CastExpression	( RConfigNode * ) data		4060638	1					
ANR	4060657	CastTarget	RConfigNode *		4060638	0					
ANR	4060658	Identifier	data		4060638	1					
ANR	4060659	ExpressionStatement	core -> parser -> minval = node -> i_value	363:1:9782:9818	4060638	2	True				
ANR	4060660	AssignmentExpression	core -> parser -> minval = node -> i_value		4060638	0		=			
ANR	4060661	PtrMemberAccess	core -> parser -> minval		4060638	0					
ANR	4060662	PtrMemberAccess	core -> parser		4060638	0					
ANR	4060663	Identifier	core		4060638	0					
ANR	4060664	Identifier	parser		4060638	1					
ANR	4060665	Identifier	minval		4060638	1					
ANR	4060666	PtrMemberAccess	node -> i_value		4060638	1					
ANR	4060667	Identifier	node		4060638	0					
ANR	4060668	Identifier	i_value		4060638	1					
ANR	4060669	ReturnStatement	return true ;	364:1:9821:9832	4060638	3	True				
ANR	4060670	Identifier	true		4060638	0					
ANR	4060671	ReturnType	static bool		4060638	1					
ANR	4060672	Identifier	cb_asmvarsubmin		4060638	2					
ANR	4060673	ParameterList	"void * user , void * data"		4060638	3					
ANR	4060674	Parameter	void * user	360:28:9681:9690	4060638	0	True				
ANR	4060675	ParameterType	void *		4060638	0					
ANR	4060676	Identifier	user		4060638	1					
ANR	4060677	Parameter	void * data	360:40:9693:9702	4060638	1	True				
ANR	4060678	ParameterType	void *		4060638	0					
ANR	4060679	Identifier	data		4060638	1					
ANR	4060680	CFGEntryNode	ENTRY		4060638		True				
ANR	4060681	CFGExitNode	EXIT		4060638		True				
ANR	4060682	Symbol	core		4060638						
ANR	4060683	Symbol	node		4060638						
ANR	4060684	Symbol	core -> parser		4060638						
ANR	4060685	Symbol	data		4060638						
ANR	4060686	Symbol	* core -> parser		4060638						
ANR	4060687	Symbol	* core		4060638						
ANR	4060688	Symbol	core -> parser -> minval		4060638						
ANR	4060689	Symbol	true		4060638						
ANR	4060690	Symbol	* node		4060638						
ANR	4060691	Symbol	user		4060638						
ANR	4060692	Symbol	* * core		4060638						
ANR	4060693	Symbol	node -> i_value		4060638						
ANR	4060694	Function	cb_asmtailsub	367:0:9837:10017							
ANR	4060695	FunctionDef	"cb_asmtailsub (void * user , void * data)"		4060694	0					
ANR	4060696	CompoundStatement		367:50:9887:10017	4060694	0					
ANR	4060697	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	368:1:9890:9918	4060694	0	True				
ANR	4060698	IdentifierDecl	* core = ( RCore * ) user		4060694	0					
ANR	4060699	IdentifierDeclType	RCore *		4060694	0					
ANR	4060700	Identifier	core		4060694	1					
ANR	4060701	AssignmentExpression	* core = ( RCore * ) user		4060694	2		=			
ANR	4060702	Identifier	core		4060694	0					
ANR	4060703	CastExpression	( RCore * ) user		4060694	1					
ANR	4060704	CastTarget	RCore *		4060694	0					
ANR	4060705	Identifier	user		4060694	1					
ANR	4060706	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	369:1:9921:9961	4060694	1	True				
ANR	4060707	IdentifierDecl	* node = ( RConfigNode * ) data		4060694	0					
ANR	4060708	IdentifierDeclType	RConfigNode *		4060694	0					
ANR	4060709	Identifier	node		4060694	1					
ANR	4060710	AssignmentExpression	* node = ( RConfigNode * ) data		4060694	2		=			
ANR	4060711	Identifier	node		4060694	0					
ANR	4060712	CastExpression	( RConfigNode * ) data		4060694	1					
ANR	4060713	CastTarget	RConfigNode *		4060694	0					
ANR	4060714	Identifier	data		4060694	1					
ANR	4060715	ExpressionStatement	core -> parser -> tailsub = node -> i_value	370:1:9964:10001	4060694	2	True				
ANR	4060716	AssignmentExpression	core -> parser -> tailsub = node -> i_value		4060694	0		=			
ANR	4060717	PtrMemberAccess	core -> parser -> tailsub		4060694	0					
ANR	4060718	PtrMemberAccess	core -> parser		4060694	0					
ANR	4060719	Identifier	core		4060694	0					
ANR	4060720	Identifier	parser		4060694	1					
ANR	4060721	Identifier	tailsub		4060694	1					
ANR	4060722	PtrMemberAccess	node -> i_value		4060694	1					
ANR	4060723	Identifier	node		4060694	0					
ANR	4060724	Identifier	i_value		4060694	1					
ANR	4060725	ReturnStatement	return true ;	371:1:10004:10015	4060694	3	True				
ANR	4060726	Identifier	true		4060694	0					
ANR	4060727	ReturnType	static bool		4060694	1					
ANR	4060728	Identifier	cb_asmtailsub		4060694	2					
ANR	4060729	ParameterList	"void * user , void * data"		4060694	3					
ANR	4060730	Parameter	void * user	367:26:9863:9872	4060694	0	True				
ANR	4060731	ParameterType	void *		4060694	0					
ANR	4060732	Identifier	user		4060694	1					
ANR	4060733	Parameter	void * data	367:38:9875:9884	4060694	1	True				
ANR	4060734	ParameterType	void *		4060694	0					
ANR	4060735	Identifier	data		4060694	1					
ANR	4060736	CFGEntryNode	ENTRY		4060694		True				
ANR	4060737	CFGExitNode	EXIT		4060694		True				
ANR	4060738	Symbol	core		4060694						
ANR	4060739	Symbol	node		4060694						
ANR	4060740	Symbol	core -> parser		4060694						
ANR	4060741	Symbol	data		4060694						
ANR	4060742	Symbol	* core -> parser		4060694						
ANR	4060743	Symbol	* core		4060694						
ANR	4060744	Symbol	true		4060694						
ANR	4060745	Symbol	* node		4060694						
ANR	4060746	Symbol	user		4060694						
ANR	4060747	Symbol	core -> parser -> tailsub		4060694						
ANR	4060748	Symbol	* * core		4060694						
ANR	4060749	Symbol	node -> i_value		4060694						
ANR	4060750	Function	cb_scrlast	374:0:10020:10186							
ANR	4060751	FunctionDef	"cb_scrlast (void * user , void * data)"		4060750	0					
ANR	4060752	CompoundStatement		374:47:10067:10186	4060750	0					
ANR	4060753	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	375:1:10070:10110	4060750	0	True				
ANR	4060754	IdentifierDecl	* node = ( RConfigNode * ) data		4060750	0					
ANR	4060755	IdentifierDeclType	RConfigNode *		4060750	0					
ANR	4060756	Identifier	node		4060750	1					
ANR	4060757	AssignmentExpression	* node = ( RConfigNode * ) data		4060750	2		=			
ANR	4060758	Identifier	node		4060750	0					
ANR	4060759	CastExpression	( RConfigNode * ) data		4060750	1					
ANR	4060760	CastTarget	RConfigNode *		4060750	0					
ANR	4060761	Identifier	data		4060750	1					
ANR	4060762	ExpressionStatement	r_cons_singleton ( ) -> context -> lastEnabled = node -> i_value	376:1:10113:10170	4060750	1	True				
ANR	4060763	AssignmentExpression	r_cons_singleton ( ) -> context -> lastEnabled = node -> i_value		4060750	0		=			
ANR	4060764	PtrMemberAccess	r_cons_singleton ( ) -> context -> lastEnabled		4060750	0					
ANR	4060765	PtrMemberAccess	r_cons_singleton ( ) -> context		4060750	0					
ANR	4060766	CallExpression	r_cons_singleton ( )		4060750	0					
ANR	4060767	Callee	r_cons_singleton		4060750	0					
ANR	4060768	Identifier	r_cons_singleton		4060750	0					
ANR	4060769	ArgumentList			4060750	1					
ANR	4060770	Identifier	context		4060750	1					
ANR	4060771	Identifier	lastEnabled		4060750	1					
ANR	4060772	PtrMemberAccess	node -> i_value		4060750	1					
ANR	4060773	Identifier	node		4060750	0					
ANR	4060774	Identifier	i_value		4060750	1					
ANR	4060775	ReturnStatement	return true ;	377:1:10173:10184	4060750	2	True				
ANR	4060776	Identifier	true		4060750	0					
ANR	4060777	ReturnType	static bool		4060750	1					
ANR	4060778	Identifier	cb_scrlast		4060750	2					
ANR	4060779	ParameterList	"void * user , void * data"		4060750	3					
ANR	4060780	Parameter	void * user	374:23:10043:10052	4060750	0	True				
ANR	4060781	ParameterType	void *		4060750	0					
ANR	4060782	Identifier	user		4060750	1					
ANR	4060783	Parameter	void * data	374:35:10055:10064	4060750	1	True				
ANR	4060784	ParameterType	void *		4060750	0					
ANR	4060785	Identifier	data		4060750	1					
ANR	4060786	CFGEntryNode	ENTRY		4060750		True				
ANR	4060787	CFGExitNode	EXIT		4060750		True				
ANR	4060788	Symbol	r_cons_singleton ( ) -> context -> lastEnabled		4060750						
ANR	4060789	Symbol	node		4060750						
ANR	4060790	Symbol	data		4060750						
ANR	4060791	Symbol	true		4060750						
ANR	4060792	Symbol	r_cons_singleton		4060750						
ANR	4060793	Symbol	* r_cons_singleton ( ) -> context		4060750						
ANR	4060794	Symbol	* node		4060750						
ANR	4060795	Symbol	user		4060750						
ANR	4060796	Symbol	r_cons_singleton ( ) -> context		4060750						
ANR	4060797	Symbol	* r_cons_singleton		4060750						
ANR	4060798	Symbol	* * r_cons_singleton		4060750						
ANR	4060799	Symbol	node -> i_value		4060750						
ANR	4060800	Function	cb_scr_vi	380:0:10189:10369							
ANR	4060801	FunctionDef	"cb_scr_vi (void * user , void * data)"		4060800	0					
ANR	4060802	CompoundStatement		380:46:10235:10369	4060800	0					
ANR	4060803	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	381:1:10238:10266	4060800	0	True				
ANR	4060804	IdentifierDecl	* core = ( RCore * ) user		4060800	0					
ANR	4060805	IdentifierDeclType	RCore *		4060800	0					
ANR	4060806	Identifier	core		4060800	1					
ANR	4060807	AssignmentExpression	* core = ( RCore * ) user		4060800	2		=			
ANR	4060808	Identifier	core		4060800	0					
ANR	4060809	CastExpression	( RCore * ) user		4060800	1					
ANR	4060810	CastTarget	RCore *		4060800	0					
ANR	4060811	Identifier	user		4060800	1					
ANR	4060812	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	382:1:10269:10309	4060800	1	True				
ANR	4060813	IdentifierDecl	* node = ( RConfigNode * ) data		4060800	0					
ANR	4060814	IdentifierDeclType	RConfigNode *		4060800	0					
ANR	4060815	Identifier	node		4060800	1					
ANR	4060816	AssignmentExpression	* node = ( RConfigNode * ) data		4060800	2		=			
ANR	4060817	Identifier	node		4060800	0					
ANR	4060818	CastExpression	( RConfigNode * ) data		4060800	1					
ANR	4060819	CastTarget	RConfigNode *		4060800	0					
ANR	4060820	Identifier	data		4060800	1					
ANR	4060821	ExpressionStatement	core -> cons -> line -> vi_mode = node -> i_value	383:1:10312:10353	4060800	2	True				
ANR	4060822	AssignmentExpression	core -> cons -> line -> vi_mode = node -> i_value		4060800	0		=			
ANR	4060823	PtrMemberAccess	core -> cons -> line -> vi_mode		4060800	0					
ANR	4060824	PtrMemberAccess	core -> cons -> line		4060800	0					
ANR	4060825	PtrMemberAccess	core -> cons		4060800	0					
ANR	4060826	Identifier	core		4060800	0					
ANR	4060827	Identifier	cons		4060800	1					
ANR	4060828	Identifier	line		4060800	1					
ANR	4060829	Identifier	vi_mode		4060800	1					
ANR	4060830	PtrMemberAccess	node -> i_value		4060800	1					
ANR	4060831	Identifier	node		4060800	0					
ANR	4060832	Identifier	i_value		4060800	1					
ANR	4060833	ReturnStatement	return true ;	384:1:10356:10367	4060800	3	True				
ANR	4060834	Identifier	true		4060800	0					
ANR	4060835	ReturnType	static bool		4060800	1					
ANR	4060836	Identifier	cb_scr_vi		4060800	2					
ANR	4060837	ParameterList	"void * user , void * data"		4060800	3					
ANR	4060838	Parameter	void * user	380:22:10211:10220	4060800	0	True				
ANR	4060839	ParameterType	void *		4060800	0					
ANR	4060840	Identifier	user		4060800	1					
ANR	4060841	Parameter	void * data	380:34:10223:10232	4060800	1	True				
ANR	4060842	ParameterType	void *		4060800	0					
ANR	4060843	Identifier	data		4060800	1					
ANR	4060844	CFGEntryNode	ENTRY		4060800		True				
ANR	4060845	CFGExitNode	EXIT		4060800		True				
ANR	4060846	Symbol	data		4060800						
ANR	4060847	Symbol	* core -> cons		4060800						
ANR	4060848	Symbol	* * core -> cons		4060800						
ANR	4060849	Symbol	* core		4060800						
ANR	4060850	Symbol	node -> i_value		4060800						
ANR	4060851	Symbol	core -> cons -> line -> vi_mode		4060800						
ANR	4060852	Symbol	core		4060800						
ANR	4060853	Symbol	node		4060800						
ANR	4060854	Symbol	* * * core		4060800						
ANR	4060855	Symbol	core -> cons		4060800						
ANR	4060856	Symbol	* core -> cons -> line		4060800						
ANR	4060857	Symbol	true		4060800						
ANR	4060858	Symbol	* node		4060800						
ANR	4060859	Symbol	user		4060800						
ANR	4060860	Symbol	core -> cons -> line		4060800						
ANR	4060861	Symbol	* * core		4060800						
ANR	4060862	Function	cb_scr_wideoff	387:0:10372:10557							
ANR	4060863	FunctionDef	"cb_scr_wideoff (void * user , void * data)"		4060862	0					
ANR	4060864	CompoundStatement		387:51:10423:10557	4060862	0					
ANR	4060865	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	388:1:10426:10454	4060862	0	True				
ANR	4060866	IdentifierDecl	* core = ( RCore * ) user		4060862	0					
ANR	4060867	IdentifierDeclType	RCore *		4060862	0					
ANR	4060868	Identifier	core		4060862	1					
ANR	4060869	AssignmentExpression	* core = ( RCore * ) user		4060862	2		=			
ANR	4060870	Identifier	core		4060862	0					
ANR	4060871	CastExpression	( RCore * ) user		4060862	1					
ANR	4060872	CastTarget	RCore *		4060862	0					
ANR	4060873	Identifier	user		4060862	1					
ANR	4060874	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	389:1:10457:10497	4060862	1	True				
ANR	4060875	IdentifierDecl	* node = ( RConfigNode * ) data		4060862	0					
ANR	4060876	IdentifierDeclType	RConfigNode *		4060862	0					
ANR	4060877	Identifier	node		4060862	1					
ANR	4060878	AssignmentExpression	* node = ( RConfigNode * ) data		4060862	2		=			
ANR	4060879	Identifier	node		4060862	0					
ANR	4060880	CastExpression	( RConfigNode * ) data		4060862	1					
ANR	4060881	CastTarget	RConfigNode *		4060862	0					
ANR	4060882	Identifier	data		4060862	1					
ANR	4060883	ExpressionStatement	core -> print -> wide_offsets = node -> i_value	390:1:10500:10541	4060862	2	True				
ANR	4060884	AssignmentExpression	core -> print -> wide_offsets = node -> i_value		4060862	0		=			
ANR	4060885	PtrMemberAccess	core -> print -> wide_offsets		4060862	0					
ANR	4060886	PtrMemberAccess	core -> print		4060862	0					
ANR	4060887	Identifier	core		4060862	0					
ANR	4060888	Identifier	print		4060862	1					
ANR	4060889	Identifier	wide_offsets		4060862	1					
ANR	4060890	PtrMemberAccess	node -> i_value		4060862	1					
ANR	4060891	Identifier	node		4060862	0					
ANR	4060892	Identifier	i_value		4060862	1					
ANR	4060893	ReturnStatement	return true ;	391:1:10544:10555	4060862	3	True				
ANR	4060894	Identifier	true		4060862	0					
ANR	4060895	ReturnType	static bool		4060862	1					
ANR	4060896	Identifier	cb_scr_wideoff		4060862	2					
ANR	4060897	ParameterList	"void * user , void * data"		4060862	3					
ANR	4060898	Parameter	void * user	387:27:10399:10408	4060862	0	True				
ANR	4060899	ParameterType	void *		4060862	0					
ANR	4060900	Identifier	user		4060862	1					
ANR	4060901	Parameter	void * data	387:39:10411:10420	4060862	1	True				
ANR	4060902	ParameterType	void *		4060862	0					
ANR	4060903	Identifier	data		4060862	1					
ANR	4060904	CFGEntryNode	ENTRY		4060862		True				
ANR	4060905	CFGExitNode	EXIT		4060862		True				
ANR	4060906	Symbol	core		4060862						
ANR	4060907	Symbol	node		4060862						
ANR	4060908	Symbol	* core -> print		4060862						
ANR	4060909	Symbol	data		4060862						
ANR	4060910	Symbol	core -> print -> wide_offsets		4060862						
ANR	4060911	Symbol	* core		4060862						
ANR	4060912	Symbol	true		4060862						
ANR	4060913	Symbol	* node		4060862						
ANR	4060914	Symbol	core -> print		4060862						
ANR	4060915	Symbol	user		4060862						
ANR	4060916	Symbol	* * core		4060862						
ANR	4060917	Symbol	node -> i_value		4060862						
ANR	4060918	Function	cb_scrrainbow	394:0:10560:10945							
ANR	4060919	FunctionDef	"cb_scrrainbow (void * user , void * data)"		4060918	0					
ANR	4060920	CompoundStatement		394:50:10610:10945	4060918	0					
ANR	4060921	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	395:1:10613:10641	4060918	0	True				
ANR	4060922	IdentifierDecl	* core = ( RCore * ) user		4060918	0					
ANR	4060923	IdentifierDeclType	RCore *		4060918	0					
ANR	4060924	Identifier	core		4060918	1					
ANR	4060925	AssignmentExpression	* core = ( RCore * ) user		4060918	2		=			
ANR	4060926	Identifier	core		4060918	0					
ANR	4060927	CastExpression	( RCore * ) user		4060918	1					
ANR	4060928	CastTarget	RCore *		4060918	0					
ANR	4060929	Identifier	user		4060918	1					
ANR	4060930	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	396:1:10644:10684	4060918	1	True				
ANR	4060931	IdentifierDecl	* node = ( RConfigNode * ) data		4060918	0					
ANR	4060932	IdentifierDeclType	RConfigNode *		4060918	0					
ANR	4060933	Identifier	node		4060918	1					
ANR	4060934	AssignmentExpression	* node = ( RConfigNode * ) data		4060918	2		=			
ANR	4060935	Identifier	node		4060918	0					
ANR	4060936	CastExpression	( RConfigNode * ) data		4060918	1					
ANR	4060937	CastTarget	RConfigNode *		4060918	0					
ANR	4060938	Identifier	data		4060918	1					
ANR	4060939	IfStatement	if ( node -> i_value )		4060918	2					
ANR	4060940	Condition	node -> i_value	397:5:10691:10703	4060918	0	True				
ANR	4060941	PtrMemberAccess	node -> i_value		4060918	0					
ANR	4060942	Identifier	node		4060918	0					
ANR	4060943	Identifier	i_value		4060918	1					
ANR	4060944	CompoundStatement		4:20:95:95	4060918	1					
ANR	4060945	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_RAINBOW	398:2:10710:10753	4060918	0	True				
ANR	4060946	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_RAINBOW		4060918	0		|=			
ANR	4060947	PtrMemberAccess	core -> print -> flags		4060918	0					
ANR	4060948	PtrMemberAccess	core -> print		4060918	0					
ANR	4060949	Identifier	core		4060918	0					
ANR	4060950	Identifier	print		4060918	1					
ANR	4060951	Identifier	flags		4060918	1					
ANR	4060952	Identifier	R_PRINT_FLAGS_RAINBOW		4060918	1					
ANR	4060953	ExpressionStatement	"r_core_cmd0 ( core , ""ecr"" )"	399:2:10757:10782	4060918	1	True				
ANR	4060954	CallExpression	"r_core_cmd0 ( core , ""ecr"" )"		4060918	0					
ANR	4060955	Callee	r_core_cmd0		4060918	0					
ANR	4060956	Identifier	r_core_cmd0		4060918	0					
ANR	4060957	ArgumentList	core		4060918	1					
ANR	4060958	Argument	core		4060918	0					
ANR	4060959	Identifier	core		4060918	0					
ANR	4060960	Argument	"""ecr"""		4060918	1					
ANR	4060961	PrimaryExpression	"""ecr"""		4060918	0					
ANR	4060962	ElseStatement	else		4060918	0					
ANR	4060963	CompoundStatement		7:8:181:181	4060918	0					
ANR	4060964	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_RAINBOW )	401:2:10796:10842	4060918	0	True				
ANR	4060965	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_RAINBOW )		4060918	0		&=			
ANR	4060966	PtrMemberAccess	core -> print -> flags		4060918	0					
ANR	4060967	PtrMemberAccess	core -> print		4060918	0					
ANR	4060968	Identifier	core		4060918	0					
ANR	4060969	Identifier	print		4060918	1					
ANR	4060970	Identifier	flags		4060918	1					
ANR	4060971	Identifier	~R_PRINT_FLAGS_RAINBOW		4060918	1					
ANR	4060972	ExpressionStatement	"r_core_cmd0 ( core , ""ecoo"" )"	402:2:10846:10872	4060918	1	True				
ANR	4060973	CallExpression	"r_core_cmd0 ( core , ""ecoo"" )"		4060918	0					
ANR	4060974	Callee	r_core_cmd0		4060918	0					
ANR	4060975	Identifier	r_core_cmd0		4060918	0					
ANR	4060976	ArgumentList	core		4060918	1					
ANR	4060977	Argument	core		4060918	0					
ANR	4060978	Identifier	core		4060918	0					
ANR	4060979	Argument	"""ecoo"""		4060918	1					
ANR	4060980	PrimaryExpression	"""ecoo"""		4060918	0					
ANR	4060981	ExpressionStatement	"r_print_set_flags ( core -> print , core -> print -> flags )"	404:1:10878:10929	4060918	3	True				
ANR	4060982	CallExpression	"r_print_set_flags ( core -> print , core -> print -> flags )"		4060918	0					
ANR	4060983	Callee	r_print_set_flags		4060918	0					
ANR	4060984	Identifier	r_print_set_flags		4060918	0					
ANR	4060985	ArgumentList	core -> print		4060918	1					
ANR	4060986	Argument	core -> print		4060918	0					
ANR	4060987	PtrMemberAccess	core -> print		4060918	0					
ANR	4060988	Identifier	core		4060918	0					
ANR	4060989	Identifier	print		4060918	1					
ANR	4060990	Argument	core -> print -> flags		4060918	1					
ANR	4060991	PtrMemberAccess	core -> print -> flags		4060918	0					
ANR	4060992	PtrMemberAccess	core -> print		4060918	0					
ANR	4060993	Identifier	core		4060918	0					
ANR	4060994	Identifier	print		4060918	1					
ANR	4060995	Identifier	flags		4060918	1					
ANR	4060996	ReturnStatement	return true ;	405:1:10932:10943	4060918	4	True				
ANR	4060997	Identifier	true		4060918	0					
ANR	4060998	ReturnType	static bool		4060918	1					
ANR	4060999	Identifier	cb_scrrainbow		4060918	2					
ANR	4061000	ParameterList	"void * user , void * data"		4060918	3					
ANR	4061001	Parameter	void * user	394:26:10586:10595	4060918	0	True				
ANR	4061002	ParameterType	void *		4060918	0					
ANR	4061003	Identifier	user		4060918	1					
ANR	4061004	Parameter	void * data	394:38:10598:10607	4060918	1	True				
ANR	4061005	ParameterType	void *		4060918	0					
ANR	4061006	Identifier	data		4060918	1					
ANR	4061007	CFGEntryNode	ENTRY		4060918		True				
ANR	4061008	CFGExitNode	EXIT		4060918		True				
ANR	4061009	Symbol	data		4060918						
ANR	4061010	Symbol	* core		4060918						
ANR	4061011	Symbol	node -> i_value		4060918						
ANR	4061012	Symbol	core		4060918						
ANR	4061013	Symbol	node		4060918						
ANR	4061014	Symbol	* core -> print		4060918						
ANR	4061015	Symbol	R_PRINT_FLAGS_RAINBOW		4060918						
ANR	4061016	Symbol	true		4060918						
ANR	4061017	Symbol	* node		4060918						
ANR	4061018	Symbol	~R_PRINT_FLAGS_RAINBOW		4060918						
ANR	4061019	Symbol	core -> print		4060918						
ANR	4061020	Symbol	user		4060918						
ANR	4061021	Symbol	core -> print -> flags		4060918						
ANR	4061022	Symbol	* * core		4060918						
ANR	4061023	Function	cb_asmpseudo	408:0:10948:11130							
ANR	4061024	FunctionDef	"cb_asmpseudo (void * user , void * data)"		4061023	0					
ANR	4061025	CompoundStatement		408:50:10998:11130	4061023	0					
ANR	4061026	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	409:1:11001:11029	4061023	0	True				
ANR	4061027	IdentifierDecl	* core = ( RCore * ) user		4061023	0					
ANR	4061028	IdentifierDeclType	RCore *		4061023	0					
ANR	4061029	Identifier	core		4061023	1					
ANR	4061030	AssignmentExpression	* core = ( RCore * ) user		4061023	2		=			
ANR	4061031	Identifier	core		4061023	0					
ANR	4061032	CastExpression	( RCore * ) user		4061023	1					
ANR	4061033	CastTarget	RCore *		4061023	0					
ANR	4061034	Identifier	user		4061023	1					
ANR	4061035	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	410:1:11032:11072	4061023	1	True				
ANR	4061036	IdentifierDecl	* node = ( RConfigNode * ) data		4061023	0					
ANR	4061037	IdentifierDeclType	RConfigNode *		4061023	0					
ANR	4061038	Identifier	node		4061023	1					
ANR	4061039	AssignmentExpression	* node = ( RConfigNode * ) data		4061023	2		=			
ANR	4061040	Identifier	node		4061023	0					
ANR	4061041	CastExpression	( RConfigNode * ) data		4061023	1					
ANR	4061042	CastTarget	RConfigNode *		4061023	0					
ANR	4061043	Identifier	data		4061023	1					
ANR	4061044	ExpressionStatement	core -> assembler -> pseudo = node -> i_value	411:1:11075:11114	4061023	2	True				
ANR	4061045	AssignmentExpression	core -> assembler -> pseudo = node -> i_value		4061023	0		=			
ANR	4061046	PtrMemberAccess	core -> assembler -> pseudo		4061023	0					
ANR	4061047	PtrMemberAccess	core -> assembler		4061023	0					
ANR	4061048	Identifier	core		4061023	0					
ANR	4061049	Identifier	assembler		4061023	1					
ANR	4061050	Identifier	pseudo		4061023	1					
ANR	4061051	PtrMemberAccess	node -> i_value		4061023	1					
ANR	4061052	Identifier	node		4061023	0					
ANR	4061053	Identifier	i_value		4061023	1					
ANR	4061054	ReturnStatement	return true ;	412:1:11117:11128	4061023	3	True				
ANR	4061055	Identifier	true		4061023	0					
ANR	4061056	ReturnType	static bool		4061023	1					
ANR	4061057	Identifier	cb_asmpseudo		4061023	2					
ANR	4061058	ParameterList	"void * user , void * data"		4061023	3					
ANR	4061059	Parameter	void * user	408:26:10974:10983	4061023	0	True				
ANR	4061060	ParameterType	void *		4061023	0					
ANR	4061061	Identifier	user		4061023	1					
ANR	4061062	Parameter	void * data	408:38:10986:10995	4061023	1	True				
ANR	4061063	ParameterType	void *		4061023	0					
ANR	4061064	Identifier	data		4061023	1					
ANR	4061065	CFGEntryNode	ENTRY		4061023		True				
ANR	4061066	CFGExitNode	EXIT		4061023		True				
ANR	4061067	Symbol	* core -> assembler		4061023						
ANR	4061068	Symbol	core		4061023						
ANR	4061069	Symbol	node		4061023						
ANR	4061070	Symbol	data		4061023						
ANR	4061071	Symbol	* core		4061023						
ANR	4061072	Symbol	true		4061023						
ANR	4061073	Symbol	core -> assembler		4061023						
ANR	4061074	Symbol	* node		4061023						
ANR	4061075	Symbol	core -> assembler -> pseudo		4061023						
ANR	4061076	Symbol	user		4061023						
ANR	4061077	Symbol	* * core		4061023						
ANR	4061078	Symbol	node -> i_value		4061023						
ANR	4061079	Function	cb_asmsecsub	415:0:11133:11456							
ANR	4061080	FunctionDef	"cb_asmsecsub (void * user , void * data)"		4061079	0					
ANR	4061081	CompoundStatement		415:49:11182:11456	4061079	0					
ANR	4061082	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	416:1:11185:11213	4061079	0	True				
ANR	4061083	IdentifierDecl	* core = ( RCore * ) user		4061079	0					
ANR	4061084	IdentifierDeclType	RCore *		4061079	0					
ANR	4061085	Identifier	core		4061079	1					
ANR	4061086	AssignmentExpression	* core = ( RCore * ) user		4061079	2		=			
ANR	4061087	Identifier	core		4061079	0					
ANR	4061088	CastExpression	( RCore * ) user		4061079	1					
ANR	4061089	CastTarget	RCore *		4061079	0					
ANR	4061090	Identifier	user		4061079	1					
ANR	4061091	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	417:1:11216:11256	4061079	1	True				
ANR	4061092	IdentifierDecl	* node = ( RConfigNode * ) data		4061079	0					
ANR	4061093	IdentifierDeclType	RConfigNode *		4061079	0					
ANR	4061094	Identifier	node		4061079	1					
ANR	4061095	AssignmentExpression	* node = ( RConfigNode * ) data		4061079	2		=			
ANR	4061096	Identifier	node		4061079	0					
ANR	4061097	CastExpression	( RConfigNode * ) data		4061079	1					
ANR	4061098	CastTarget	RConfigNode *		4061079	0					
ANR	4061099	Identifier	data		4061079	1					
ANR	4061100	IfStatement	if ( node -> i_value )		4061079	2					
ANR	4061101	Condition	node -> i_value	418:5:11263:11275	4061079	0	True				
ANR	4061102	PtrMemberAccess	node -> i_value		4061079	0					
ANR	4061103	Identifier	node		4061079	0					
ANR	4061104	Identifier	i_value		4061079	1					
ANR	4061105	CompoundStatement		4:20:95:95	4061079	1					
ANR	4061106	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_SECSUB	419:2:11282:11324	4061079	0	True				
ANR	4061107	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_SECSUB		4061079	0		|=			
ANR	4061108	PtrMemberAccess	core -> print -> flags		4061079	0					
ANR	4061109	PtrMemberAccess	core -> print		4061079	0					
ANR	4061110	Identifier	core		4061079	0					
ANR	4061111	Identifier	print		4061079	1					
ANR	4061112	Identifier	flags		4061079	1					
ANR	4061113	Identifier	R_PRINT_FLAGS_SECSUB		4061079	1					
ANR	4061114	ElseStatement	else		4061079	0					
ANR	4061115	CompoundStatement		6:8:151:151	4061079	0					
ANR	4061116	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_SECSUB )	421:2:11338:11383	4061079	0	True				
ANR	4061117	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_SECSUB )		4061079	0		&=			
ANR	4061118	PtrMemberAccess	core -> print -> flags		4061079	0					
ANR	4061119	PtrMemberAccess	core -> print		4061079	0					
ANR	4061120	Identifier	core		4061079	0					
ANR	4061121	Identifier	print		4061079	1					
ANR	4061122	Identifier	flags		4061079	1					
ANR	4061123	Identifier	~R_PRINT_FLAGS_SECSUB		4061079	1					
ANR	4061124	ExpressionStatement	"r_print_set_flags ( core -> print , core -> print -> flags )"	423:1:11389:11440	4061079	3	True				
ANR	4061125	CallExpression	"r_print_set_flags ( core -> print , core -> print -> flags )"		4061079	0					
ANR	4061126	Callee	r_print_set_flags		4061079	0					
ANR	4061127	Identifier	r_print_set_flags		4061079	0					
ANR	4061128	ArgumentList	core -> print		4061079	1					
ANR	4061129	Argument	core -> print		4061079	0					
ANR	4061130	PtrMemberAccess	core -> print		4061079	0					
ANR	4061131	Identifier	core		4061079	0					
ANR	4061132	Identifier	print		4061079	1					
ANR	4061133	Argument	core -> print -> flags		4061079	1					
ANR	4061134	PtrMemberAccess	core -> print -> flags		4061079	0					
ANR	4061135	PtrMemberAccess	core -> print		4061079	0					
ANR	4061136	Identifier	core		4061079	0					
ANR	4061137	Identifier	print		4061079	1					
ANR	4061138	Identifier	flags		4061079	1					
ANR	4061139	ReturnStatement	return true ;	424:1:11443:11454	4061079	4	True				
ANR	4061140	Identifier	true		4061079	0					
ANR	4061141	ReturnType	static bool		4061079	1					
ANR	4061142	Identifier	cb_asmsecsub		4061079	2					
ANR	4061143	ParameterList	"void * user , void * data"		4061079	3					
ANR	4061144	Parameter	void * user	415:25:11158:11167	4061079	0	True				
ANR	4061145	ParameterType	void *		4061079	0					
ANR	4061146	Identifier	user		4061079	1					
ANR	4061147	Parameter	void * data	415:37:11170:11179	4061079	1	True				
ANR	4061148	ParameterType	void *		4061079	0					
ANR	4061149	Identifier	data		4061079	1					
ANR	4061150	CFGEntryNode	ENTRY		4061079		True				
ANR	4061151	CFGExitNode	EXIT		4061079		True				
ANR	4061152	Symbol	data		4061079						
ANR	4061153	Symbol	R_PRINT_FLAGS_SECSUB		4061079						
ANR	4061154	Symbol	* core		4061079						
ANR	4061155	Symbol	~R_PRINT_FLAGS_SECSUB		4061079						
ANR	4061156	Symbol	node -> i_value		4061079						
ANR	4061157	Symbol	core		4061079						
ANR	4061158	Symbol	node		4061079						
ANR	4061159	Symbol	* core -> print		4061079						
ANR	4061160	Symbol	true		4061079						
ANR	4061161	Symbol	* node		4061079						
ANR	4061162	Symbol	core -> print		4061079						
ANR	4061163	Symbol	user		4061079						
ANR	4061164	Symbol	core -> print -> flags		4061079						
ANR	4061165	Symbol	* * core		4061079						
ANR	4061166	Function	cb_asmassembler	427:0:11459:11654							
ANR	4061167	FunctionDef	"cb_asmassembler (void * user , void * data)"		4061166	0					
ANR	4061168	CompoundStatement		427:52:11511:11654	4061166	0					
ANR	4061169	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	428:1:11514:11542	4061166	0	True				
ANR	4061170	IdentifierDecl	* core = ( RCore * ) user		4061166	0					
ANR	4061171	IdentifierDeclType	RCore *		4061166	0					
ANR	4061172	Identifier	core		4061166	1					
ANR	4061173	AssignmentExpression	* core = ( RCore * ) user		4061166	2		=			
ANR	4061174	Identifier	core		4061166	0					
ANR	4061175	CastExpression	( RCore * ) user		4061166	1					
ANR	4061176	CastTarget	RCore *		4061166	0					
ANR	4061177	Identifier	user		4061166	1					
ANR	4061178	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	429:1:11545:11585	4061166	1	True				
ANR	4061179	IdentifierDecl	* node = ( RConfigNode * ) data		4061166	0					
ANR	4061180	IdentifierDeclType	RConfigNode *		4061166	0					
ANR	4061181	Identifier	node		4061166	1					
ANR	4061182	AssignmentExpression	* node = ( RConfigNode * ) data		4061166	2		=			
ANR	4061183	Identifier	node		4061166	0					
ANR	4061184	CastExpression	( RConfigNode * ) data		4061166	1					
ANR	4061185	CastTarget	RConfigNode *		4061166	0					
ANR	4061186	Identifier	data		4061166	1					
ANR	4061187	ExpressionStatement	"r_asm_use_assembler ( core -> assembler , node -> value )"	430:1:11588:11638	4061166	2	True				
ANR	4061188	CallExpression	"r_asm_use_assembler ( core -> assembler , node -> value )"		4061166	0					
ANR	4061189	Callee	r_asm_use_assembler		4061166	0					
ANR	4061190	Identifier	r_asm_use_assembler		4061166	0					
ANR	4061191	ArgumentList	core -> assembler		4061166	1					
ANR	4061192	Argument	core -> assembler		4061166	0					
ANR	4061193	PtrMemberAccess	core -> assembler		4061166	0					
ANR	4061194	Identifier	core		4061166	0					
ANR	4061195	Identifier	assembler		4061166	1					
ANR	4061196	Argument	node -> value		4061166	1					
ANR	4061197	PtrMemberAccess	node -> value		4061166	0					
ANR	4061198	Identifier	node		4061166	0					
ANR	4061199	Identifier	value		4061166	1					
ANR	4061200	ReturnStatement	return true ;	431:1:11641:11652	4061166	3	True				
ANR	4061201	Identifier	true		4061166	0					
ANR	4061202	ReturnType	static bool		4061166	1					
ANR	4061203	Identifier	cb_asmassembler		4061166	2					
ANR	4061204	ParameterList	"void * user , void * data"		4061166	3					
ANR	4061205	Parameter	void * user	427:28:11487:11496	4061166	0	True				
ANR	4061206	ParameterType	void *		4061166	0					
ANR	4061207	Identifier	user		4061166	1					
ANR	4061208	Parameter	void * data	427:40:11499:11508	4061166	1	True				
ANR	4061209	ParameterType	void *		4061166	0					
ANR	4061210	Identifier	data		4061166	1					
ANR	4061211	CFGEntryNode	ENTRY		4061166		True				
ANR	4061212	CFGExitNode	EXIT		4061166		True				
ANR	4061213	Symbol	core		4061166						
ANR	4061214	Symbol	node		4061166						
ANR	4061215	Symbol	data		4061166						
ANR	4061216	Symbol	* core		4061166						
ANR	4061217	Symbol	true		4061166						
ANR	4061218	Symbol	core -> assembler		4061166						
ANR	4061219	Symbol	* node		4061166						
ANR	4061220	Symbol	user		4061166						
ANR	4061221	Symbol	node -> value		4061166						
ANR	4061222	Function	update_cmdpdc_options	434:0:11657:12084							
ANR	4061223	FunctionDef	"update_cmdpdc_options (RCore * core , RConfigNode * node)"		4061222	0					
ANR	4061224	CompoundStatement		434:66:11723:12084	4061222	0					
ANR	4061225	ExpressionStatement	r_return_if_fail ( core && core -> assembler && node )	435:1:11726:11776	4061222	0	True				
ANR	4061226	CallExpression	r_return_if_fail ( core && core -> assembler && node )		4061222	0					
ANR	4061227	Callee	r_return_if_fail		4061222	0					
ANR	4061228	Identifier	r_return_if_fail		4061222	0					
ANR	4061229	ArgumentList	core && core -> assembler && node		4061222	1					
ANR	4061230	Argument	core && core -> assembler && node		4061222	0					
ANR	4061231	AndExpression	core && core -> assembler && node		4061222	0		&&			
ANR	4061232	Identifier	core		4061222	0					
ANR	4061233	AndExpression	core -> assembler && node		4061222	1		&&			
ANR	4061234	PtrMemberAccess	core -> assembler		4061222	0					
ANR	4061235	Identifier	core		4061222	0					
ANR	4061236	Identifier	assembler		4061222	1					
ANR	4061237	Identifier	node		4061222	1					
ANR	4061238	IdentifierDeclStatement	RListIter * iter ;	436:1:11779:11794	4061222	1	True				
ANR	4061239	IdentifierDecl	* iter		4061222	0					
ANR	4061240	IdentifierDeclType	RListIter *		4061222	0					
ANR	4061241	Identifier	iter		4061222	1					
ANR	4061242	ExpressionStatement	r_list_purge ( node -> options )	437:1:11797:11825	4061222	2	True				
ANR	4061243	CallExpression	r_list_purge ( node -> options )		4061222	0					
ANR	4061244	Callee	r_list_purge		4061222	0					
ANR	4061245	Identifier	r_list_purge		4061222	0					
ANR	4061246	ArgumentList	node -> options		4061222	1					
ANR	4061247	Argument	node -> options		4061222	0					
ANR	4061248	PtrMemberAccess	node -> options		4061222	0					
ANR	4061249	Identifier	node		4061222	0					
ANR	4061250	Identifier	options		4061222	1					
ANR	4061251	IdentifierDeclStatement	"char * opts = r_core_cmd_str ( core , ""e cmd.pdc=?"" ) ;"	438:1:11828:11877	4061222	3	True				
ANR	4061252	IdentifierDecl	"* opts = r_core_cmd_str ( core , ""e cmd.pdc=?"" )"		4061222	0					
ANR	4061253	IdentifierDeclType	char *		4061222	0					
ANR	4061254	Identifier	opts		4061222	1					
ANR	4061255	AssignmentExpression	"* opts = r_core_cmd_str ( core , ""e cmd.pdc=?"" )"		4061222	2		=			
ANR	4061256	Identifier	opts		4061222	0					
ANR	4061257	CallExpression	"r_core_cmd_str ( core , ""e cmd.pdc=?"" )"		4061222	1					
ANR	4061258	Callee	r_core_cmd_str		4061222	0					
ANR	4061259	Identifier	r_core_cmd_str		4061222	0					
ANR	4061260	ArgumentList	core		4061222	1					
ANR	4061261	Argument	core		4061222	0					
ANR	4061262	Identifier	core		4061222	0					
ANR	4061263	Argument	"""e cmd.pdc=?"""		4061222	1					
ANR	4061264	PrimaryExpression	"""e cmd.pdc=?"""		4061222	0					
ANR	4061265	IdentifierDeclStatement	"RList * optl = r_str_split_list ( opts , ""\\n"" , 0 ) ;"	439:1:11880:11926	4061222	4	True				
ANR	4061266	IdentifierDecl	"* optl = r_str_split_list ( opts , ""\\n"" , 0 )"		4061222	0					
ANR	4061267	IdentifierDeclType	RList *		4061222	0					
ANR	4061268	Identifier	optl		4061222	1					
ANR	4061269	AssignmentExpression	"* optl = r_str_split_list ( opts , ""\\n"" , 0 )"		4061222	2		=			
ANR	4061270	Identifier	optl		4061222	0					
ANR	4061271	CallExpression	"r_str_split_list ( opts , ""\\n"" , 0 )"		4061222	1					
ANR	4061272	Callee	r_str_split_list		4061222	0					
ANR	4061273	Identifier	r_str_split_list		4061222	0					
ANR	4061274	ArgumentList	opts		4061222	1					
ANR	4061275	Argument	opts		4061222	0					
ANR	4061276	Identifier	opts		4061222	0					
ANR	4061277	Argument	"""\\n"""		4061222	1					
ANR	4061278	PrimaryExpression	"""\\n"""		4061222	0					
ANR	4061279	Argument	0		4061222	2					
ANR	4061280	PrimaryExpression	0		4061222	0					
ANR	4061281	IdentifierDeclStatement	char * opt ;	440:1:11929:11938	4061222	5	True				
ANR	4061282	IdentifierDecl	* opt		4061222	0					
ANR	4061283	IdentifierDeclType	char *		4061222	0					
ANR	4061284	Identifier	opt		4061222	1					
ANR	4061285	ExpressionStatement	node -> options -> free = free	441:1:11941:11967	4061222	6	True				
ANR	4061286	AssignmentExpression	node -> options -> free = free		4061222	0		=			
ANR	4061287	PtrMemberAccess	node -> options -> free		4061222	0					
ANR	4061288	PtrMemberAccess	node -> options		4061222	0					
ANR	4061289	Identifier	node		4061222	0					
ANR	4061290	Identifier	options		4061222	1					
ANR	4061291	Identifier	free		4061222	1					
ANR	4061292	Identifier	free		4061222	1					
ANR	4061293	Statement	r_list_foreach	442:1:11970:11983	4061222	7	True				
ANR	4061294	Statement	(	442:16:11985:11985	4061222	8	True				
ANR	4061295	Statement	optl	442:17:11986:11989	4061222	9	True				
ANR	4061296	Statement	","	442:21:11990:11990	4061222	10	True				
ANR	4061297	Statement	iter	442:23:11992:11995	4061222	11	True				
ANR	4061298	Statement	","	442:27:11996:11996	4061222	12	True				
ANR	4061299	Statement	opt	442:29:11998:12000	4061222	13	True				
ANR	4061300	Statement	)	442:32:12001:12001	4061222	14	True				
ANR	4061301	CompoundStatement		9:34:279:279	4061222	15					
ANR	4061302	ExpressionStatement	"SETOPTIONS ( node , strdup ( opt ) , NULL )"	443:2:12007:12044	4061222	0	True				
ANR	4061303	CallExpression	"SETOPTIONS ( node , strdup ( opt ) , NULL )"		4061222	0					
ANR	4061304	Callee	SETOPTIONS		4061222	0					
ANR	4061305	Identifier	SETOPTIONS		4061222	0					
ANR	4061306	ArgumentList	node		4061222	1					
ANR	4061307	Argument	node		4061222	0					
ANR	4061308	Identifier	node		4061222	0					
ANR	4061309	Argument	strdup ( opt )		4061222	1					
ANR	4061310	CallExpression	strdup ( opt )		4061222	0					
ANR	4061311	Callee	strdup		4061222	0					
ANR	4061312	Identifier	strdup		4061222	0					
ANR	4061313	ArgumentList	opt		4061222	1					
ANR	4061314	Argument	opt		4061222	0					
ANR	4061315	Identifier	opt		4061222	0					
ANR	4061316	Argument	NULL		4061222	2					
ANR	4061317	Identifier	NULL		4061222	0					
ANR	4061318	ExpressionStatement	r_list_free ( optl )	445:1:12050:12068	4061222	16	True				
ANR	4061319	CallExpression	r_list_free ( optl )		4061222	0					
ANR	4061320	Callee	r_list_free		4061222	0					
ANR	4061321	Identifier	r_list_free		4061222	0					
ANR	4061322	ArgumentList	optl		4061222	1					
ANR	4061323	Argument	optl		4061222	0					
ANR	4061324	Identifier	optl		4061222	0					
ANR	4061325	ExpressionStatement	free ( opts )	446:1:12071:12082	4061222	17	True				
ANR	4061326	CallExpression	free ( opts )		4061222	0					
ANR	4061327	Callee	free		4061222	0					
ANR	4061328	Identifier	free		4061222	0					
ANR	4061329	ArgumentList	opts		4061222	1					
ANR	4061330	Argument	opts		4061222	0					
ANR	4061331	Identifier	opts		4061222	0					
ANR	4061332	ReturnType	static void		4061222	1					
ANR	4061333	Identifier	update_cmdpdc_options		4061222	2					
ANR	4061334	ParameterList	"RCore * core , RConfigNode * node"		4061222	3					
ANR	4061335	Parameter	RCore * core	434:34:11691:11701	4061222	0	True				
ANR	4061336	ParameterType	RCore *		4061222	0					
ANR	4061337	Identifier	core		4061222	1					
ANR	4061338	Parameter	RConfigNode * node	434:47:11704:11720	4061222	1	True				
ANR	4061339	ParameterType	RConfigNode *		4061222	0					
ANR	4061340	Identifier	node		4061222	1					
ANR	4061341	CFGEntryNode	ENTRY		4061222		True				
ANR	4061342	CFGExitNode	EXIT		4061222		True				
ANR	4061343	Symbol	r_core_cmd_str		4061222						
ANR	4061344	Symbol	NULL		4061222						
ANR	4061345	Symbol	* core		4061222						
ANR	4061346	Symbol	r_str_split_list		4061222						
ANR	4061347	Symbol	core -> assembler		4061222						
ANR	4061348	Symbol	iter		4061222						
ANR	4061349	Symbol	optl		4061222						
ANR	4061350	Symbol	core		4061222						
ANR	4061351	Symbol	node		4061222						
ANR	4061352	Symbol	opt		4061222						
ANR	4061353	Symbol	opts		4061222						
ANR	4061354	Symbol	* * node		4061222						
ANR	4061355	Symbol	node -> options		4061222						
ANR	4061356	Symbol	node -> options -> free		4061222						
ANR	4061357	Symbol	* node -> options		4061222						
ANR	4061358	Symbol	* node		4061222						
ANR	4061359	Symbol	strdup		4061222						
ANR	4061360	Symbol	free		4061222						
ANR	4061361	Function	update_asmcpu_options	449:0:12087:12705							
ANR	4061362	FunctionDef	"update_asmcpu_options (RCore * core , RConfigNode * node)"		4061361	0					
ANR	4061363	CompoundStatement		449:66:12153:12705	4061361	0					
ANR	4061364	IdentifierDeclStatement	RAsmPlugin * h ;	450:1:12156:12169	4061361	0	True				
ANR	4061365	IdentifierDecl	* h		4061361	0					
ANR	4061366	IdentifierDeclType	RAsmPlugin *		4061361	0					
ANR	4061367	Identifier	h		4061361	1					
ANR	4061368	IdentifierDeclStatement	RListIter * iter ;	451:1:12172:12187	4061361	1	True				
ANR	4061369	IdentifierDecl	* iter		4061361	0					
ANR	4061370	IdentifierDeclType	RListIter *		4061361	0					
ANR	4061371	Identifier	iter		4061361	1					
ANR	4061372	ExpressionStatement	r_return_if_fail ( core && core -> assembler )	452:1:12190:12232	4061361	2	True				
ANR	4061373	CallExpression	r_return_if_fail ( core && core -> assembler )		4061361	0					
ANR	4061374	Callee	r_return_if_fail		4061361	0					
ANR	4061375	Identifier	r_return_if_fail		4061361	0					
ANR	4061376	ArgumentList	core && core -> assembler		4061361	1					
ANR	4061377	Argument	core && core -> assembler		4061361	0					
ANR	4061378	AndExpression	core && core -> assembler		4061361	0		&&			
ANR	4061379	Identifier	core		4061361	0					
ANR	4061380	PtrMemberAccess	core -> assembler		4061361	1					
ANR	4061381	Identifier	core		4061361	0					
ANR	4061382	Identifier	assembler		4061361	1					
ANR	4061383	IdentifierDeclStatement	"const char * arch = r_config_get ( core -> config , ""asm.arch"" ) ;"	453:1:12235:12293	4061361	3	True				
ANR	4061384	IdentifierDecl	"* arch = r_config_get ( core -> config , ""asm.arch"" )"		4061361	0					
ANR	4061385	IdentifierDeclType	const char *		4061361	0					
ANR	4061386	Identifier	arch		4061361	1					
ANR	4061387	AssignmentExpression	"* arch = r_config_get ( core -> config , ""asm.arch"" )"		4061361	2		=			
ANR	4061388	Identifier	arch		4061361	0					
ANR	4061389	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		4061361	1					
ANR	4061390	Callee	r_config_get		4061361	0					
ANR	4061391	Identifier	r_config_get		4061361	0					
ANR	4061392	ArgumentList	core -> config		4061361	1					
ANR	4061393	Argument	core -> config		4061361	0					
ANR	4061394	PtrMemberAccess	core -> config		4061361	0					
ANR	4061395	Identifier	core		4061361	0					
ANR	4061396	Identifier	config		4061361	1					
ANR	4061397	Argument	"""asm.arch"""		4061361	1					
ANR	4061398	PrimaryExpression	"""asm.arch"""		4061361	0					
ANR	4061399	IfStatement	if ( ! arch || ! * arch )		4061361	4					
ANR	4061400	Condition	! arch || ! * arch	454:5:12300:12314	4061361	0	True				
ANR	4061401	OrExpression	! arch || ! * arch		4061361	0		||			
ANR	4061402	UnaryOperationExpression	! arch		4061361	0					
ANR	4061403	UnaryOperator	!		4061361	0					
ANR	4061404	Identifier	arch		4061361	1					
ANR	4061405	UnaryOperationExpression	! * arch		4061361	1					
ANR	4061406	UnaryOperator	!		4061361	0					
ANR	4061407	UnaryOperationExpression	* arch		4061361	1					
ANR	4061408	UnaryOperator	*		4061361	0					
ANR	4061409	Identifier	arch		4061361	1					
ANR	4061410	CompoundStatement		6:22:163:163	4061361	1					
ANR	4061411	ReturnStatement	return ;	455:2:12321:12327	4061361	0	True				
ANR	4061412	ExpressionStatement	r_list_purge ( node -> options )	457:1:12333:12361	4061361	5	True				
ANR	4061413	CallExpression	r_list_purge ( node -> options )		4061361	0					
ANR	4061414	Callee	r_list_purge		4061361	0					
ANR	4061415	Identifier	r_list_purge		4061361	0					
ANR	4061416	ArgumentList	node -> options		4061361	1					
ANR	4061417	Argument	node -> options		4061361	0					
ANR	4061418	PtrMemberAccess	node -> options		4061361	0					
ANR	4061419	Identifier	node		4061361	0					
ANR	4061420	Identifier	options		4061361	1					
ANR	4061421	Statement	r_list_foreach	458:1:12364:12377	4061361	6	True				
ANR	4061422	Statement	(	458:16:12379:12379	4061361	7	True				
ANR	4061423	Statement	core	458:17:12380:12383	4061361	8	True				
ANR	4061424	Statement	->	458:21:12384:12385	4061361	9	True				
ANR	4061425	Statement	assembler	458:23:12386:12394	4061361	10	True				
ANR	4061426	Statement	->	458:32:12395:12396	4061361	11	True				
ANR	4061427	Statement	plugins	458:34:12397:12403	4061361	12	True				
ANR	4061428	Statement	","	458:41:12404:12404	4061361	13	True				
ANR	4061429	Statement	iter	458:43:12406:12409	4061361	14	True				
ANR	4061430	Statement	","	458:47:12410:12410	4061361	15	True				
ANR	4061431	Statement	h	458:49:12412:12412	4061361	16	True				
ANR	4061432	Statement	)	458:50:12413:12413	4061361	17	True				
ANR	4061433	CompoundStatement		10:52:261:261	4061361	18					
ANR	4061434	IfStatement	"if ( h -> cpus && ! strcmp ( arch , h -> name ) )"		4061361	0					
ANR	4061435	Condition	"h -> cpus && ! strcmp ( arch , h -> name )"	459:6:12423:12456	4061361	0	True				
ANR	4061436	AndExpression	"h -> cpus && ! strcmp ( arch , h -> name )"		4061361	0		&&			
ANR	4061437	PtrMemberAccess	h -> cpus		4061361	0					
ANR	4061438	Identifier	h		4061361	0					
ANR	4061439	Identifier	cpus		4061361	1					
ANR	4061440	UnaryOperationExpression	"! strcmp ( arch , h -> name )"		4061361	1					
ANR	4061441	UnaryOperator	!		4061361	0					
ANR	4061442	CallExpression	"strcmp ( arch , h -> name )"		4061361	1					
ANR	4061443	Callee	strcmp		4061361	0					
ANR	4061444	Identifier	strcmp		4061361	0					
ANR	4061445	ArgumentList	arch		4061361	1					
ANR	4061446	Argument	arch		4061361	0					
ANR	4061447	Identifier	arch		4061361	0					
ANR	4061448	Argument	h -> name		4061361	1					
ANR	4061449	PtrMemberAccess	h -> name		4061361	0					
ANR	4061450	Identifier	h		4061361	0					
ANR	4061451	Identifier	name		4061361	1					
ANR	4061452	CompoundStatement		13:3:341:372	4061361	1					
ANR	4061453	IdentifierDeclStatement	char * c = strdup ( h -> cpus ) ;	460:3:12464:12490	4061361	0	True				
ANR	4061454	IdentifierDecl	* c = strdup ( h -> cpus )		4061361	0					
ANR	4061455	IdentifierDeclType	char *		4061361	0					
ANR	4061456	Identifier	c		4061361	1					
ANR	4061457	AssignmentExpression	* c = strdup ( h -> cpus )		4061361	2		=			
ANR	4061458	Identifier	c		4061361	0					
ANR	4061459	CallExpression	strdup ( h -> cpus )		4061361	1					
ANR	4061460	Callee	strdup		4061361	0					
ANR	4061461	Identifier	strdup		4061361	0					
ANR	4061462	ArgumentList	h -> cpus		4061361	1					
ANR	4061463	Argument	h -> cpus		4061361	0					
ANR	4061464	PtrMemberAccess	h -> cpus		4061361	0					
ANR	4061465	Identifier	h		4061361	0					
ANR	4061466	Identifier	cpus		4061361	1					
ANR	4061467	IdentifierDeclStatement	"int i , n = r_str_split ( c , ',' ) ;"	461:3:12495:12526	4061361	1	True				
ANR	4061468	IdentifierDecl	i		4061361	0					
ANR	4061469	IdentifierDeclType	int		4061361	0					
ANR	4061470	Identifier	i		4061361	1					
ANR	4061471	IdentifierDecl	"n = r_str_split ( c , ',' )"		4061361	1					
ANR	4061472	IdentifierDeclType	int		4061361	0					
ANR	4061473	Identifier	n		4061361	1					
ANR	4061474	AssignmentExpression	"n = r_str_split ( c , ',' )"		4061361	2		=			
ANR	4061475	Identifier	n		4061361	0					
ANR	4061476	CallExpression	"r_str_split ( c , ',' )"		4061361	1					
ANR	4061477	Callee	r_str_split		4061361	0					
ANR	4061478	Identifier	r_str_split		4061361	0					
ANR	4061479	ArgumentList	c		4061361	1					
ANR	4061480	Argument	c		4061361	0					
ANR	4061481	Identifier	c		4061361	0					
ANR	4061482	Argument	"','"		4061361	1					
ANR	4061483	PrimaryExpression	"','"		4061361	0					
ANR	4061484	ForStatement	for ( i = 0 ; i < n ; i ++ )		4061361	2					
ANR	4061485	ForInit	i = 0 ;	462:8:12536:12541	4061361	0	True				
ANR	4061486	AssignmentExpression	i = 0		4061361	0		=			
ANR	4061487	Identifier	i		4061361	0					
ANR	4061488	PrimaryExpression	0		4061361	1					
ANR	4061489	Condition	i < n	462:15:12543:12547	4061361	1	True				
ANR	4061490	RelationalExpression	i < n		4061361	0		<			
ANR	4061491	Identifier	i		4061361	0					
ANR	4061492	Identifier	n		4061361	1					
ANR	4061493	PostIncDecOperationExpression	i ++	462:22:12550:12552	4061361	2	True				
ANR	4061494	Identifier	i		4061361	0					
ANR	4061495	IncDec	++		4061361	1					
ANR	4061496	CompoundStatement		15:4:407:448	4061361	3					
ANR	4061497	IdentifierDeclStatement	"const char * word = r_str_word_get0 ( c , i ) ;"	463:4:12561:12602	4061361	0	True				
ANR	4061498	IdentifierDecl	"* word = r_str_word_get0 ( c , i )"		4061361	0					
ANR	4061499	IdentifierDeclType	const char *		4061361	0					
ANR	4061500	Identifier	word		4061361	1					
ANR	4061501	AssignmentExpression	"* word = r_str_word_get0 ( c , i )"		4061361	2		=			
ANR	4061502	Identifier	word		4061361	0					
ANR	4061503	CallExpression	"r_str_word_get0 ( c , i )"		4061361	1					
ANR	4061504	Callee	r_str_word_get0		4061361	0					
ANR	4061505	Identifier	r_str_word_get0		4061361	0					
ANR	4061506	ArgumentList	c		4061361	1					
ANR	4061507	Argument	c		4061361	0					
ANR	4061508	Identifier	c		4061361	0					
ANR	4061509	Argument	i		4061361	1					
ANR	4061510	Identifier	i		4061361	0					
ANR	4061511	IfStatement	if ( word && * word )		4061361	1					
ANR	4061512	Condition	word && * word	464:8:12612:12624	4061361	0	True				
ANR	4061513	AndExpression	word && * word		4061361	0		&&			
ANR	4061514	Identifier	word		4061361	0					
ANR	4061515	UnaryOperationExpression	* word		4061361	1					
ANR	4061516	UnaryOperator	*		4061361	0					
ANR	4061517	Identifier	word		4061361	1					
ANR	4061518	CompoundStatement		16:23:473:473	4061361	1					
ANR	4061519	ExpressionStatement	"SETOPTIONS ( node , strdup ( word ) , NULL )"	465:5:12634:12672	4061361	0	True				
ANR	4061520	CallExpression	"SETOPTIONS ( node , strdup ( word ) , NULL )"		4061361	0					
ANR	4061521	Callee	SETOPTIONS		4061361	0					
ANR	4061522	Identifier	SETOPTIONS		4061361	0					
ANR	4061523	ArgumentList	node		4061361	1					
ANR	4061524	Argument	node		4061361	0					
ANR	4061525	Identifier	node		4061361	0					
ANR	4061526	Argument	strdup ( word )		4061361	1					
ANR	4061527	CallExpression	strdup ( word )		4061361	0					
ANR	4061528	Callee	strdup		4061361	0					
ANR	4061529	Identifier	strdup		4061361	0					
ANR	4061530	ArgumentList	word		4061361	1					
ANR	4061531	Argument	word		4061361	0					
ANR	4061532	Identifier	word		4061361	0					
ANR	4061533	Argument	NULL		4061361	2					
ANR	4061534	Identifier	NULL		4061361	0					
ANR	4061535	ExpressionStatement	free ( c )	468:3:12688:12696	4061361	3	True				
ANR	4061536	CallExpression	free ( c )		4061361	0					
ANR	4061537	Callee	free		4061361	0					
ANR	4061538	Identifier	free		4061361	0					
ANR	4061539	ArgumentList	c		4061361	1					
ANR	4061540	Argument	c		4061361	0					
ANR	4061541	Identifier	c		4061361	0					
ANR	4061542	ReturnType	static void		4061361	1					
ANR	4061543	Identifier	update_asmcpu_options		4061361	2					
ANR	4061544	ParameterList	"RCore * core , RConfigNode * node"		4061361	3					
ANR	4061545	Parameter	RCore * core	449:34:12121:12131	4061361	0	True				
ANR	4061546	ParameterType	RCore *		4061361	0					
ANR	4061547	Identifier	core		4061361	1					
ANR	4061548	Parameter	RConfigNode * node	449:47:12134:12150	4061361	1	True				
ANR	4061549	ParameterType	RConfigNode *		4061361	0					
ANR	4061550	Identifier	node		4061361	1					
ANR	4061551	CFGEntryNode	ENTRY		4061361		True				
ANR	4061552	CFGExitNode	EXIT		4061361		True				
ANR	4061553	Symbol	* core		4061361						
ANR	4061554	Symbol	r_config_get		4061361						
ANR	4061555	Symbol	core -> assembler		4061361						
ANR	4061556	Symbol	h -> cpus		4061361						
ANR	4061557	Symbol	h -> name		4061361						
ANR	4061558	Symbol	* arch		4061361						
ANR	4061559	Symbol	* node		4061361						
ANR	4061560	Symbol	core -> config		4061361						
ANR	4061561	Symbol	strcmp		4061361						
ANR	4061562	Symbol	c		4061361						
ANR	4061563	Symbol	NULL		4061361						
ANR	4061564	Symbol	* word		4061361						
ANR	4061565	Symbol	h		4061361						
ANR	4061566	Symbol	iter		4061361						
ANR	4061567	Symbol	i		4061361						
ANR	4061568	Symbol	r_str_word_get0		4061361						
ANR	4061569	Symbol	n		4061361						
ANR	4061570	Symbol	core		4061361						
ANR	4061571	Symbol	node		4061361						
ANR	4061572	Symbol	* h		4061361						
ANR	4061573	Symbol	r_str_split		4061361						
ANR	4061574	Symbol	node -> options		4061361						
ANR	4061575	Symbol	arch		4061361						
ANR	4061576	Symbol	strdup		4061361						
ANR	4061577	Symbol	word		4061361						
ANR	4061578	Function	cb_asmcpu	473:0:12708:13164							
ANR	4061579	FunctionDef	"cb_asmcpu (void * user , void * data)"		4061578	0					
ANR	4061580	CompoundStatement		473:46:12754:13164	4061578	0					
ANR	4061581	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	474:1:12757:12785	4061578	0	True				
ANR	4061582	IdentifierDecl	* core = ( RCore * ) user		4061578	0					
ANR	4061583	IdentifierDeclType	RCore *		4061578	0					
ANR	4061584	Identifier	core		4061578	1					
ANR	4061585	AssignmentExpression	* core = ( RCore * ) user		4061578	2		=			
ANR	4061586	Identifier	core		4061578	0					
ANR	4061587	CastExpression	( RCore * ) user		4061578	1					
ANR	4061588	CastTarget	RCore *		4061578	0					
ANR	4061589	Identifier	user		4061578	1					
ANR	4061590	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	475:1:12788:12828	4061578	1	True				
ANR	4061591	IdentifierDecl	* node = ( RConfigNode * ) data		4061578	0					
ANR	4061592	IdentifierDeclType	RConfigNode *		4061578	0					
ANR	4061593	Identifier	node		4061578	1					
ANR	4061594	AssignmentExpression	* node = ( RConfigNode * ) data		4061578	2		=			
ANR	4061595	Identifier	node		4061578	0					
ANR	4061596	CastExpression	( RConfigNode * ) data		4061578	1					
ANR	4061597	CastTarget	RConfigNode *		4061578	0					
ANR	4061598	Identifier	data		4061578	1					
ANR	4061599	IfStatement	if ( * node -> value == '?' )		4061578	2					
ANR	4061600	Condition	* node -> value == '?'	476:5:12835:12853	4061578	0	True				
ANR	4061601	EqualityExpression	* node -> value == '?'		4061578	0		==			
ANR	4061602	UnaryOperationExpression	* node -> value		4061578	0					
ANR	4061603	UnaryOperator	*		4061578	0					
ANR	4061604	PtrMemberAccess	node -> value		4061578	1					
ANR	4061605	Identifier	node		4061578	0					
ANR	4061606	Identifier	value		4061578	1					
ANR	4061607	PrimaryExpression	'?'		4061578	1					
ANR	4061608	CompoundStatement		4:26:101:101	4061578	1					
ANR	4061609	ExpressionStatement	"update_asmcpu_options ( core , node )"	477:2:12860:12894	4061578	0	True				
ANR	4061610	CallExpression	"update_asmcpu_options ( core , node )"		4061578	0					
ANR	4061611	Callee	update_asmcpu_options		4061578	0					
ANR	4061612	Identifier	update_asmcpu_options		4061578	0					
ANR	4061613	ArgumentList	core		4061578	1					
ANR	4061614	Argument	core		4061578	0					
ANR	4061615	Identifier	core		4061578	0					
ANR	4061616	Argument	node		4061578	1					
ANR	4061617	Identifier	node		4061578	0					
ANR	4061618	ExpressionStatement	"rasm2_list ( core , r_config_get ( core -> config , ""asm.arch"" ) , node -> value [ 1 ] )"	479:2:12957:13031	4061578	1	True				
ANR	4061619	CallExpression	"rasm2_list ( core , r_config_get ( core -> config , ""asm.arch"" ) , node -> value [ 1 ] )"		4061578	0					
ANR	4061620	Callee	rasm2_list		4061578	0					
ANR	4061621	Identifier	rasm2_list		4061578	0					
ANR	4061622	ArgumentList	core		4061578	1					
ANR	4061623	Argument	core		4061578	0					
ANR	4061624	Identifier	core		4061578	0					
ANR	4061625	Argument	"r_config_get ( core -> config , ""asm.arch"" )"		4061578	1					
ANR	4061626	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		4061578	0					
ANR	4061627	Callee	r_config_get		4061578	0					
ANR	4061628	Identifier	r_config_get		4061578	0					
ANR	4061629	ArgumentList	core -> config		4061578	1					
ANR	4061630	Argument	core -> config		4061578	0					
ANR	4061631	PtrMemberAccess	core -> config		4061578	0					
ANR	4061632	Identifier	core		4061578	0					
ANR	4061633	Identifier	config		4061578	1					
ANR	4061634	Argument	"""asm.arch"""		4061578	1					
ANR	4061635	PrimaryExpression	"""asm.arch"""		4061578	0					
ANR	4061636	Argument	node -> value [ 1 ]		4061578	2					
ANR	4061637	ArrayIndexing	node -> value [ 1 ]		4061578	0					
ANR	4061638	PtrMemberAccess	node -> value		4061578	0					
ANR	4061639	Identifier	node		4061578	0					
ANR	4061640	Identifier	value		4061578	1					
ANR	4061641	PrimaryExpression	1		4061578	1					
ANR	4061642	ReturnStatement	return 0 ;	480:2:13035:13043	4061578	2	True				
ANR	4061643	PrimaryExpression	0		4061578	0					
ANR	4061644	ExpressionStatement	"r_asm_set_cpu ( core -> assembler , node -> value )"	482:1:13049:13093	4061578	3	True				
ANR	4061645	CallExpression	"r_asm_set_cpu ( core -> assembler , node -> value )"		4061578	0					
ANR	4061646	Callee	r_asm_set_cpu		4061578	0					
ANR	4061647	Identifier	r_asm_set_cpu		4061578	0					
ANR	4061648	ArgumentList	core -> assembler		4061578	1					
ANR	4061649	Argument	core -> assembler		4061578	0					
ANR	4061650	PtrMemberAccess	core -> assembler		4061578	0					
ANR	4061651	Identifier	core		4061578	0					
ANR	4061652	Identifier	assembler		4061578	1					
ANR	4061653	Argument	node -> value		4061578	1					
ANR	4061654	PtrMemberAccess	node -> value		4061578	0					
ANR	4061655	Identifier	node		4061578	0					
ANR	4061656	Identifier	value		4061578	1					
ANR	4061657	ExpressionStatement	"r_config_set ( core -> config , ""anal.cpu"" , node -> value )"	483:1:13096:13148	4061578	4	True				
ANR	4061658	CallExpression	"r_config_set ( core -> config , ""anal.cpu"" , node -> value )"		4061578	0					
ANR	4061659	Callee	r_config_set		4061578	0					
ANR	4061660	Identifier	r_config_set		4061578	0					
ANR	4061661	ArgumentList	core -> config		4061578	1					
ANR	4061662	Argument	core -> config		4061578	0					
ANR	4061663	PtrMemberAccess	core -> config		4061578	0					
ANR	4061664	Identifier	core		4061578	0					
ANR	4061665	Identifier	config		4061578	1					
ANR	4061666	Argument	"""anal.cpu"""		4061578	1					
ANR	4061667	PrimaryExpression	"""anal.cpu"""		4061578	0					
ANR	4061668	Argument	node -> value		4061578	2					
ANR	4061669	PtrMemberAccess	node -> value		4061578	0					
ANR	4061670	Identifier	node		4061578	0					
ANR	4061671	Identifier	value		4061578	1					
ANR	4061672	ReturnStatement	return true ;	484:1:13151:13162	4061578	5	True				
ANR	4061673	Identifier	true		4061578	0					
ANR	4061674	ReturnType	static bool		4061578	1					
ANR	4061675	Identifier	cb_asmcpu		4061578	2					
ANR	4061676	ParameterList	"void * user , void * data"		4061578	3					
ANR	4061677	Parameter	void * user	473:22:12730:12739	4061578	0	True				
ANR	4061678	ParameterType	void *		4061578	0					
ANR	4061679	Identifier	user		4061578	1					
ANR	4061680	Parameter	void * data	473:34:12742:12751	4061578	1	True				
ANR	4061681	ParameterType	void *		4061578	0					
ANR	4061682	Identifier	data		4061578	1					
ANR	4061683	CFGEntryNode	ENTRY		4061578		True				
ANR	4061684	CFGExitNode	EXIT		4061578		True				
ANR	4061685	Symbol	core -> config		4061578						
ANR	4061686	Symbol	* node -> value		4061578						
ANR	4061687	Symbol	data		4061578						
ANR	4061688	Symbol	r_config_get		4061578						
ANR	4061689	Symbol	* core		4061578						
ANR	4061690	Symbol	core -> assembler		4061578						
ANR	4061691	Symbol	node -> value		4061578						
ANR	4061692	Symbol	core		4061578						
ANR	4061693	Symbol	node		4061578						
ANR	4061694	Symbol	* * node		4061578						
ANR	4061695	Symbol	true		4061578						
ANR	4061696	Symbol	* node		4061578						
ANR	4061697	Symbol	user		4061578						
ANR	4061698	Function	update_asmarch_options	487:0:13167:13441							
ANR	4061699	FunctionDef	"update_asmarch_options (RCore * core , RConfigNode * node)"		4061698	0					
ANR	4061700	CompoundStatement		487:67:13234:13441	4061698	0					
ANR	4061701	IdentifierDeclStatement	RAsmPlugin * h ;	488:1:13237:13250	4061698	0	True				
ANR	4061702	IdentifierDecl	* h		4061698	0					
ANR	4061703	IdentifierDeclType	RAsmPlugin *		4061698	0					
ANR	4061704	Identifier	h		4061698	1					
ANR	4061705	IdentifierDeclStatement	RListIter * iter ;	489:1:13253:13268	4061698	1	True				
ANR	4061706	IdentifierDecl	* iter		4061698	0					
ANR	4061707	IdentifierDeclType	RListIter *		4061698	0					
ANR	4061708	Identifier	iter		4061698	1					
ANR	4061709	IfStatement	if ( core && node && core -> assembler )		4061698	2					
ANR	4061710	Condition	core && node && core -> assembler	490:5:13275:13305	4061698	0	True				
ANR	4061711	AndExpression	core && node && core -> assembler		4061698	0		&&			
ANR	4061712	Identifier	core		4061698	0					
ANR	4061713	AndExpression	node && core -> assembler		4061698	1		&&			
ANR	4061714	Identifier	node		4061698	0					
ANR	4061715	PtrMemberAccess	core -> assembler		4061698	1					
ANR	4061716	Identifier	core		4061698	0					
ANR	4061717	Identifier	assembler		4061698	1					
ANR	4061718	CompoundStatement		4:38:73:73	4061698	1					
ANR	4061719	ExpressionStatement	r_list_purge ( node -> options )	491:2:13312:13340	4061698	0	True				
ANR	4061720	CallExpression	r_list_purge ( node -> options )		4061698	0					
ANR	4061721	Callee	r_list_purge		4061698	0					
ANR	4061722	Identifier	r_list_purge		4061698	0					
ANR	4061723	ArgumentList	node -> options		4061698	1					
ANR	4061724	Argument	node -> options		4061698	0					
ANR	4061725	PtrMemberAccess	node -> options		4061698	0					
ANR	4061726	Identifier	node		4061698	0					
ANR	4061727	Identifier	options		4061698	1					
ANR	4061728	Statement	r_list_foreach	492:2:13344:13357	4061698	1	True				
ANR	4061729	Statement	(	492:17:13359:13359	4061698	2	True				
ANR	4061730	Statement	core	492:18:13360:13363	4061698	3	True				
ANR	4061731	Statement	->	492:22:13364:13365	4061698	4	True				
ANR	4061732	Statement	assembler	492:24:13366:13374	4061698	5	True				
ANR	4061733	Statement	->	492:33:13375:13376	4061698	6	True				
ANR	4061734	Statement	plugins	492:35:13377:13383	4061698	7	True				
ANR	4061735	Statement	","	492:42:13384:13384	4061698	8	True				
ANR	4061736	Statement	iter	492:44:13386:13389	4061698	9	True				
ANR	4061737	Statement	","	492:48:13390:13390	4061698	10	True				
ANR	4061738	Statement	h	492:50:13392:13392	4061698	11	True				
ANR	4061739	Statement	)	492:51:13393:13393	4061698	12	True				
ANR	4061740	CompoundStatement		6:53:160:160	4061698	13					
ANR	4061741	ExpressionStatement	"SETOPTIONS ( node , h -> name , NULL )"	493:3:13400:13432	4061698	0	True				
ANR	4061742	CallExpression	"SETOPTIONS ( node , h -> name , NULL )"		4061698	0					
ANR	4061743	Callee	SETOPTIONS		4061698	0					
ANR	4061744	Identifier	SETOPTIONS		4061698	0					
ANR	4061745	ArgumentList	node		4061698	1					
ANR	4061746	Argument	node		4061698	0					
ANR	4061747	Identifier	node		4061698	0					
ANR	4061748	Argument	h -> name		4061698	1					
ANR	4061749	PtrMemberAccess	h -> name		4061698	0					
ANR	4061750	Identifier	h		4061698	0					
ANR	4061751	Identifier	name		4061698	1					
ANR	4061752	Argument	NULL		4061698	2					
ANR	4061753	Identifier	NULL		4061698	0					
ANR	4061754	ReturnType	static void		4061698	1					
ANR	4061755	Identifier	update_asmarch_options		4061698	2					
ANR	4061756	ParameterList	"RCore * core , RConfigNode * node"		4061698	3					
ANR	4061757	Parameter	RCore * core	487:35:13202:13212	4061698	0	True				
ANR	4061758	ParameterType	RCore *		4061698	0					
ANR	4061759	Identifier	core		4061698	1					
ANR	4061760	Parameter	RConfigNode * node	487:48:13215:13231	4061698	1	True				
ANR	4061761	ParameterType	RConfigNode *		4061698	0					
ANR	4061762	Identifier	node		4061698	1					
ANR	4061763	CFGEntryNode	ENTRY		4061698		True				
ANR	4061764	CFGExitNode	EXIT		4061698		True				
ANR	4061765	Symbol	core		4061698						
ANR	4061766	Symbol	node		4061698						
ANR	4061767	Symbol	* h		4061698						
ANR	4061768	Symbol	NULL		4061698						
ANR	4061769	Symbol	h		4061698						
ANR	4061770	Symbol	* core		4061698						
ANR	4061771	Symbol	node -> options		4061698						
ANR	4061772	Symbol	iter		4061698						
ANR	4061773	Symbol	core -> assembler		4061698						
ANR	4061774	Symbol	* node		4061698						
ANR	4061775	Symbol	h -> name		4061698						
ANR	4061776	Function	cb_asmarch	498:0:13444:17452							
ANR	4061777	FunctionDef	"cb_asmarch (void * user , void * data)"		4061776	0					
ANR	4061778	CompoundStatement		498:47:13491:17452	4061776	0					
ANR	4061779	IdentifierDeclStatement	char asmparser [ 32 ] ;	499:1:13494:13512	4061776	0	True				
ANR	4061780	IdentifierDecl	asmparser [ 32 ]		4061776	0					
ANR	4061781	IdentifierDeclType	char [ 32 ]		4061776	0					
ANR	4061782	Identifier	asmparser		4061776	1					
ANR	4061783	PrimaryExpression	32		4061776	2					
ANR	4061784	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	500:1:13515:13543	4061776	1	True				
ANR	4061785	IdentifierDecl	* core = ( RCore * ) user		4061776	0					
ANR	4061786	IdentifierDeclType	RCore *		4061776	0					
ANR	4061787	Identifier	core		4061776	1					
ANR	4061788	AssignmentExpression	* core = ( RCore * ) user		4061776	2		=			
ANR	4061789	Identifier	core		4061776	0					
ANR	4061790	CastExpression	( RCore * ) user		4061776	1					
ANR	4061791	CastTarget	RCore *		4061776	0					
ANR	4061792	Identifier	user		4061776	1					
ANR	4061793	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	501:1:13546:13586	4061776	2	True				
ANR	4061794	IdentifierDecl	* node = ( RConfigNode * ) data		4061776	0					
ANR	4061795	IdentifierDeclType	RConfigNode *		4061776	0					
ANR	4061796	Identifier	node		4061776	1					
ANR	4061797	AssignmentExpression	* node = ( RConfigNode * ) data		4061776	2		=			
ANR	4061798	Identifier	node		4061776	0					
ANR	4061799	CastExpression	( RConfigNode * ) data		4061776	1					
ANR	4061800	CastTarget	RConfigNode *		4061776	0					
ANR	4061801	Identifier	data		4061776	1					
ANR	4061802	IdentifierDeclStatement	const char * asmos = NULL ;	502:1:13589:13613	4061776	3	True				
ANR	4061803	IdentifierDecl	* asmos = NULL		4061776	0					
ANR	4061804	IdentifierDeclType	const char *		4061776	0					
ANR	4061805	Identifier	asmos		4061776	1					
ANR	4061806	AssignmentExpression	* asmos = NULL		4061776	2		=			
ANR	4061807	Identifier	NULL		4061776	0					
ANR	4061808	Identifier	NULL		4061776	1					
ANR	4061809	IdentifierDeclStatement	int bits = R_SYS_BITS ;	503:1:13616:13637	4061776	4	True				
ANR	4061810	IdentifierDecl	bits = R_SYS_BITS		4061776	0					
ANR	4061811	IdentifierDeclType	int		4061776	0					
ANR	4061812	Identifier	bits		4061776	1					
ANR	4061813	AssignmentExpression	bits = R_SYS_BITS		4061776	2		=			
ANR	4061814	Identifier	R_SYS_BITS		4061776	0					
ANR	4061815	Identifier	R_SYS_BITS		4061776	1					
ANR	4061816	IfStatement	if ( ! * node -> value || ! core || ! core -> assembler )		4061776	5					
ANR	4061817	Condition	! * node -> value || ! core || ! core -> assembler	504:5:13644:13685	4061776	0	True				
ANR	4061818	OrExpression	! * node -> value || ! core || ! core -> assembler		4061776	0		||			
ANR	4061819	UnaryOperationExpression	! * node -> value		4061776	0					
ANR	4061820	UnaryOperator	!		4061776	0					
ANR	4061821	UnaryOperationExpression	* node -> value		4061776	1					
ANR	4061822	UnaryOperator	*		4061776	0					
ANR	4061823	PtrMemberAccess	node -> value		4061776	1					
ANR	4061824	Identifier	node		4061776	0					
ANR	4061825	Identifier	value		4061776	1					
ANR	4061826	OrExpression	! core || ! core -> assembler		4061776	1		||			
ANR	4061827	UnaryOperationExpression	! core		4061776	0					
ANR	4061828	UnaryOperator	!		4061776	0					
ANR	4061829	Identifier	core		4061776	1					
ANR	4061830	UnaryOperationExpression	! core -> assembler		4061776	1					
ANR	4061831	UnaryOperator	!		4061776	0					
ANR	4061832	PtrMemberAccess	core -> assembler		4061776	1					
ANR	4061833	Identifier	core		4061776	0					
ANR	4061834	Identifier	assembler		4061776	1					
ANR	4061835	CompoundStatement		7:49:196:196	4061776	1					
ANR	4061836	ReturnStatement	return false ;	505:2:13692:13704	4061776	0	True				
ANR	4061837	Identifier	false		4061776	0					
ANR	4061838	ExpressionStatement	"asmos = r_config_get ( core -> config , ""asm.os"" )"	507:1:13710:13755	4061776	6	True				
ANR	4061839	AssignmentExpression	"asmos = r_config_get ( core -> config , ""asm.os"" )"		4061776	0		=			
ANR	4061840	Identifier	asmos		4061776	0					
ANR	4061841	CallExpression	"r_config_get ( core -> config , ""asm.os"" )"		4061776	1					
ANR	4061842	Callee	r_config_get		4061776	0					
ANR	4061843	Identifier	r_config_get		4061776	0					
ANR	4061844	ArgumentList	core -> config		4061776	1					
ANR	4061845	Argument	core -> config		4061776	0					
ANR	4061846	PtrMemberAccess	core -> config		4061776	0					
ANR	4061847	Identifier	core		4061776	0					
ANR	4061848	Identifier	config		4061776	1					
ANR	4061849	Argument	"""asm.os"""		4061776	1					
ANR	4061850	PrimaryExpression	"""asm.os"""		4061776	0					
ANR	4061851	IfStatement	if ( core && core -> anal && core -> anal -> bits )		4061776	7					
ANR	4061852	Condition	core && core -> anal && core -> anal -> bits	508:5:13762:13799	4061776	0	True				
ANR	4061853	AndExpression	core && core -> anal && core -> anal -> bits		4061776	0		&&			
ANR	4061854	Identifier	core		4061776	0					
ANR	4061855	AndExpression	core -> anal && core -> anal -> bits		4061776	1		&&			
ANR	4061856	PtrMemberAccess	core -> anal		4061776	0					
ANR	4061857	Identifier	core		4061776	0					
ANR	4061858	Identifier	anal		4061776	1					
ANR	4061859	PtrMemberAccess	core -> anal -> bits		4061776	1					
ANR	4061860	PtrMemberAccess	core -> anal		4061776	0					
ANR	4061861	Identifier	core		4061776	0					
ANR	4061862	Identifier	anal		4061776	1					
ANR	4061863	Identifier	bits		4061776	1					
ANR	4061864	CompoundStatement		11:45:310:310	4061776	1					
ANR	4061865	ExpressionStatement	bits = core -> anal -> bits	509:2:13806:13829	4061776	0	True				
ANR	4061866	AssignmentExpression	bits = core -> anal -> bits		4061776	0		=			
ANR	4061867	Identifier	bits		4061776	0					
ANR	4061868	PtrMemberAccess	core -> anal -> bits		4061776	1					
ANR	4061869	PtrMemberAccess	core -> anal		4061776	0					
ANR	4061870	Identifier	core		4061776	0					
ANR	4061871	Identifier	anal		4061776	1					
ANR	4061872	Identifier	bits		4061776	1					
ANR	4061873	IfStatement	if ( node -> value [ 0 ] == '?' )		4061776	8					
ANR	4061874	Condition	node -> value [ 0 ] == '?'	511:5:13839:13859	4061776	0	True				
ANR	4061875	EqualityExpression	node -> value [ 0 ] == '?'		4061776	0		==			
ANR	4061876	ArrayIndexing	node -> value [ 0 ]		4061776	0					
ANR	4061877	PtrMemberAccess	node -> value		4061776	0					
ANR	4061878	Identifier	node		4061776	0					
ANR	4061879	Identifier	value		4061776	1					
ANR	4061880	PrimaryExpression	0		4061776	1					
ANR	4061881	PrimaryExpression	'?'		4061776	1					
ANR	4061882	CompoundStatement		14:28:370:370	4061776	1					
ANR	4061883	ExpressionStatement	"update_asmarch_options ( core , node )"	512:2:13866:13901	4061776	0	True				
ANR	4061884	CallExpression	"update_asmarch_options ( core , node )"		4061776	0					
ANR	4061885	Callee	update_asmarch_options		4061776	0					
ANR	4061886	Identifier	update_asmarch_options		4061776	0					
ANR	4061887	ArgumentList	core		4061776	1					
ANR	4061888	Argument	core		4061776	0					
ANR	4061889	Identifier	core		4061776	0					
ANR	4061890	Argument	node		4061776	1					
ANR	4061891	Identifier	node		4061776	0					
ANR	4061892	IfStatement	if ( strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?' )		4061776	1					
ANR	4061893	Condition	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'	513:6:13909:13957	4061776	0	True				
ANR	4061894	AndExpression	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'		4061776	0		&&			
ANR	4061895	RelationalExpression	strlen ( node -> value ) > 1		4061776	0		>			
ANR	4061896	CallExpression	strlen ( node -> value )		4061776	0					
ANR	4061897	Callee	strlen		4061776	0					
ANR	4061898	Identifier	strlen		4061776	0					
ANR	4061899	ArgumentList	node -> value		4061776	1					
ANR	4061900	Argument	node -> value		4061776	0					
ANR	4061901	PtrMemberAccess	node -> value		4061776	0					
ANR	4061902	Identifier	node		4061776	0					
ANR	4061903	Identifier	value		4061776	1					
ANR	4061904	PrimaryExpression	1		4061776	1					
ANR	4061905	EqualityExpression	node -> value [ 1 ] == '?'		4061776	1		==			
ANR	4061906	ArrayIndexing	node -> value [ 1 ]		4061776	0					
ANR	4061907	PtrMemberAccess	node -> value		4061776	0					
ANR	4061908	Identifier	node		4061776	0					
ANR	4061909	Identifier	value		4061776	1					
ANR	4061910	PrimaryExpression	1		4061776	1					
ANR	4061911	PrimaryExpression	'?'		4061776	1					
ANR	4061912	CompoundStatement		16:57:468:468	4061776	1					
ANR	4061913	ExpressionStatement	"rasm2_list ( core , NULL , node -> value [ 1 ] )"	515:3:14029:14068	4061776	0	True				
ANR	4061914	CallExpression	"rasm2_list ( core , NULL , node -> value [ 1 ] )"		4061776	0					
ANR	4061915	Callee	rasm2_list		4061776	0					
ANR	4061916	Identifier	rasm2_list		4061776	0					
ANR	4061917	ArgumentList	core		4061776	1					
ANR	4061918	Argument	core		4061776	0					
ANR	4061919	Identifier	core		4061776	0					
ANR	4061920	Argument	NULL		4061776	1					
ANR	4061921	Identifier	NULL		4061776	0					
ANR	4061922	Argument	node -> value [ 1 ]		4061776	2					
ANR	4061923	ArrayIndexing	node -> value [ 1 ]		4061776	0					
ANR	4061924	PtrMemberAccess	node -> value		4061776	0					
ANR	4061925	Identifier	node		4061776	0					
ANR	4061926	Identifier	value		4061776	1					
ANR	4061927	PrimaryExpression	1		4061776	1					
ANR	4061928	ReturnStatement	return false ;	516:3:14073:14085	4061776	1	True				
ANR	4061929	Identifier	false		4061776	0					
ANR	4061930	ElseStatement	else		4061776	0					
ANR	4061931	CompoundStatement		20:9:604:604	4061776	0					
ANR	4061932	ExpressionStatement	print_node_options ( node )	518:3:14101:14126	4061776	0	True				
ANR	4061933	CallExpression	print_node_options ( node )		4061776	0					
ANR	4061934	Callee	print_node_options		4061776	0					
ANR	4061935	Identifier	print_node_options		4061776	0					
ANR	4061936	ArgumentList	node		4061776	1					
ANR	4061937	Argument	node		4061776	0					
ANR	4061938	Identifier	node		4061776	0					
ANR	4061939	ReturnStatement	return false ;	519:3:14131:14143	4061776	1	True				
ANR	4061940	Identifier	false		4061776	0					
ANR	4061941	ExpressionStatement	"r_egg_setup ( core -> egg , node -> value , bits , 0 , R_SYS_OS )"	522:1:14153:14208	4061776	9	True				
ANR	4061942	CallExpression	"r_egg_setup ( core -> egg , node -> value , bits , 0 , R_SYS_OS )"		4061776	0					
ANR	4061943	Callee	r_egg_setup		4061776	0					
ANR	4061944	Identifier	r_egg_setup		4061776	0					
ANR	4061945	ArgumentList	core -> egg		4061776	1					
ANR	4061946	Argument	core -> egg		4061776	0					
ANR	4061947	PtrMemberAccess	core -> egg		4061776	0					
ANR	4061948	Identifier	core		4061776	0					
ANR	4061949	Identifier	egg		4061776	1					
ANR	4061950	Argument	node -> value		4061776	1					
ANR	4061951	PtrMemberAccess	node -> value		4061776	0					
ANR	4061952	Identifier	node		4061776	0					
ANR	4061953	Identifier	value		4061776	1					
ANR	4061954	Argument	bits		4061776	2					
ANR	4061955	Identifier	bits		4061776	0					
ANR	4061956	Argument	0		4061776	3					
ANR	4061957	PrimaryExpression	0		4061776	0					
ANR	4061958	Argument	R_SYS_OS		4061776	4					
ANR	4061959	Identifier	R_SYS_OS		4061776	0					
ANR	4061960	IfStatement	"if ( ! r_asm_use ( core -> assembler , node -> value ) )"		4061776	10					
ANR	4061961	Condition	"! r_asm_use ( core -> assembler , node -> value )"	524:5:14216:14256	4061776	0	True				
ANR	4061962	UnaryOperationExpression	"! r_asm_use ( core -> assembler , node -> value )"		4061776	0					
ANR	4061963	UnaryOperator	!		4061776	0					
ANR	4061964	CallExpression	"r_asm_use ( core -> assembler , node -> value )"		4061776	1					
ANR	4061965	Callee	r_asm_use		4061776	0					
ANR	4061966	Identifier	r_asm_use		4061776	0					
ANR	4061967	ArgumentList	core -> assembler		4061776	1					
ANR	4061968	Argument	core -> assembler		4061776	0					
ANR	4061969	PtrMemberAccess	core -> assembler		4061776	0					
ANR	4061970	Identifier	core		4061776	0					
ANR	4061971	Identifier	assembler		4061776	1					
ANR	4061972	Argument	node -> value		4061776	1					
ANR	4061973	PtrMemberAccess	node -> value		4061776	0					
ANR	4061974	Identifier	node		4061776	0					
ANR	4061975	Identifier	value		4061776	1					
ANR	4061976	CompoundStatement		27:48:767:767	4061776	1					
ANR	4061977	ExpressionStatement	"eprintf ( ""asm.arch: cannot find (%s)\\n"" , node -> value )"	525:2:14263:14316	4061776	0	True				
ANR	4061978	CallExpression	"eprintf ( ""asm.arch: cannot find (%s)\\n"" , node -> value )"		4061776	0					
ANR	4061979	Callee	eprintf		4061776	0					
ANR	4061980	Identifier	eprintf		4061776	0					
ANR	4061981	ArgumentList	"""asm.arch: cannot find (%s)\\n"""		4061776	1					
ANR	4061982	Argument	"""asm.arch: cannot find (%s)\\n"""		4061776	0					
ANR	4061983	PrimaryExpression	"""asm.arch: cannot find (%s)\\n"""		4061776	0					
ANR	4061984	Argument	node -> value		4061776	1					
ANR	4061985	PtrMemberAccess	node -> value		4061776	0					
ANR	4061986	Identifier	node		4061776	0					
ANR	4061987	Identifier	value		4061776	1					
ANR	4061988	ReturnStatement	return false ;	526:2:14320:14332	4061776	1	True				
ANR	4061989	Identifier	false		4061776	0					
ANR	4061990	IdentifierDeclStatement	"char * asm_cpu = strdup ( r_config_get ( core -> config , ""asm.cpu"" ) ) ;"	530:1:14426:14489	4061776	11	True				
ANR	4061991	IdentifierDecl	"* asm_cpu = strdup ( r_config_get ( core -> config , ""asm.cpu"" ) )"		4061776	0					
ANR	4061992	IdentifierDeclType	char *		4061776	0					
ANR	4061993	Identifier	asm_cpu		4061776	1					
ANR	4061994	AssignmentExpression	"* asm_cpu = strdup ( r_config_get ( core -> config , ""asm.cpu"" ) )"		4061776	2		=			
ANR	4061995	Identifier	asm_cpu		4061776	0					
ANR	4061996	CallExpression	"strdup ( r_config_get ( core -> config , ""asm.cpu"" ) )"		4061776	1					
ANR	4061997	Callee	strdup		4061776	0					
ANR	4061998	Identifier	strdup		4061776	0					
ANR	4061999	ArgumentList	"r_config_get ( core -> config , ""asm.cpu"" )"		4061776	1					
ANR	4062000	Argument	"r_config_get ( core -> config , ""asm.cpu"" )"		4061776	0					
ANR	4062001	CallExpression	"r_config_get ( core -> config , ""asm.cpu"" )"		4061776	0					
ANR	4062002	Callee	r_config_get		4061776	0					
ANR	4062003	Identifier	r_config_get		4061776	0					
ANR	4062004	ArgumentList	core -> config		4061776	1					
ANR	4062005	Argument	core -> config		4061776	0					
ANR	4062006	PtrMemberAccess	core -> config		4061776	0					
ANR	4062007	Identifier	core		4061776	0					
ANR	4062008	Identifier	config		4061776	1					
ANR	4062009	Argument	"""asm.cpu"""		4061776	1					
ANR	4062010	PrimaryExpression	"""asm.cpu"""		4061776	0					
ANR	4062011	IfStatement	if ( core -> assembler -> cur )		4061776	12					
ANR	4062012	Condition	core -> assembler -> cur	531:5:14496:14515	4061776	0	True				
ANR	4062013	PtrMemberAccess	core -> assembler -> cur		4061776	0					
ANR	4062014	PtrMemberAccess	core -> assembler		4061776	0					
ANR	4062015	Identifier	core		4061776	0					
ANR	4062016	Identifier	assembler		4061776	1					
ANR	4062017	Identifier	cur		4061776	1					
ANR	4062018	CompoundStatement		35:2:1030:1080	4061776	1					
ANR	4062019	IdentifierDeclStatement	const char * newAsmCPU = core -> assembler -> cur -> cpus ;	532:2:14522:14572	4061776	0	True				
ANR	4062020	IdentifierDecl	* newAsmCPU = core -> assembler -> cur -> cpus		4061776	0					
ANR	4062021	IdentifierDeclType	const char *		4061776	0					
ANR	4062022	Identifier	newAsmCPU		4061776	1					
ANR	4062023	AssignmentExpression	* newAsmCPU = core -> assembler -> cur -> cpus		4061776	2		=			
ANR	4062024	Identifier	newAsmCPU		4061776	0					
ANR	4062025	PtrMemberAccess	core -> assembler -> cur -> cpus		4061776	1					
ANR	4062026	PtrMemberAccess	core -> assembler -> cur		4061776	0					
ANR	4062027	PtrMemberAccess	core -> assembler		4061776	0					
ANR	4062028	Identifier	core		4061776	0					
ANR	4062029	Identifier	assembler		4061776	1					
ANR	4062030	Identifier	cur		4061776	1					
ANR	4062031	Identifier	cpus		4061776	1					
ANR	4062032	IfStatement	if ( newAsmCPU )		4061776	1					
ANR	4062033	Condition	newAsmCPU	533:6:14580:14588	4061776	0	True				
ANR	4062034	Identifier	newAsmCPU		4061776	0					
ANR	4062035	CompoundStatement		36:17:1099:1099	4061776	1					
ANR	4062036	IfStatement	if ( * newAsmCPU )		4061776	0					
ANR	4062037	Condition	* newAsmCPU	534:7:14600:14609	4061776	0	True				
ANR	4062038	UnaryOperationExpression	* newAsmCPU		4061776	0					
ANR	4062039	UnaryOperator	*		4061776	0					
ANR	4062040	Identifier	newAsmCPU		4061776	1					
ANR	4062041	CompoundStatement		39:4:1162:1193	4061776	1					
ANR	4062042	IdentifierDeclStatement	char * nac = strdup ( newAsmCPU ) ;	535:4:14618:14648	4061776	0	True				
ANR	4062043	IdentifierDecl	* nac = strdup ( newAsmCPU )		4061776	0					
ANR	4062044	IdentifierDeclType	char *		4061776	0					
ANR	4062045	Identifier	nac		4061776	1					
ANR	4062046	AssignmentExpression	* nac = strdup ( newAsmCPU )		4061776	2		=			
ANR	4062047	Identifier	nac		4061776	0					
ANR	4062048	CallExpression	strdup ( newAsmCPU )		4061776	1					
ANR	4062049	Callee	strdup		4061776	0					
ANR	4062050	Identifier	strdup		4061776	0					
ANR	4062051	ArgumentList	newAsmCPU		4061776	1					
ANR	4062052	Argument	newAsmCPU		4061776	0					
ANR	4062053	Identifier	newAsmCPU		4061776	0					
ANR	4062054	IdentifierDeclStatement	"char * comma = strchr ( nac , ',' ) ;"	536:4:14654:14685	4061776	1	True				
ANR	4062055	IdentifierDecl	"* comma = strchr ( nac , ',' )"		4061776	0					
ANR	4062056	IdentifierDeclType	char *		4061776	0					
ANR	4062057	Identifier	comma		4061776	1					
ANR	4062058	AssignmentExpression	"* comma = strchr ( nac , ',' )"		4061776	2		=			
ANR	4062059	Identifier	comma		4061776	0					
ANR	4062060	CallExpression	"strchr ( nac , ',' )"		4061776	1					
ANR	4062061	Callee	strchr		4061776	0					
ANR	4062062	Identifier	strchr		4061776	0					
ANR	4062063	ArgumentList	nac		4061776	1					
ANR	4062064	Argument	nac		4061776	0					
ANR	4062065	Identifier	nac		4061776	0					
ANR	4062066	Argument	"','"		4061776	1					
ANR	4062067	PrimaryExpression	"','"		4061776	0					
ANR	4062068	IfStatement	if ( comma )		4061776	2					
ANR	4062069	Condition	comma	537:8:14695:14699	4061776	0	True				
ANR	4062070	Identifier	comma		4061776	0					
ANR	4062071	CompoundStatement		40:15:1210:1210	4061776	1					
ANR	4062072	IfStatement	"if ( ! * asm_cpu || ( * asm_cpu && ! strstr ( nac , asm_cpu ) ) )"		4061776	0					
ANR	4062073	Condition	"! * asm_cpu || ( * asm_cpu && ! strstr ( nac , asm_cpu ) )"	538:9:14713:14760	4061776	0	True				
ANR	4062074	OrExpression	"! * asm_cpu || ( * asm_cpu && ! strstr ( nac , asm_cpu ) )"		4061776	0		||			
ANR	4062075	UnaryOperationExpression	! * asm_cpu		4061776	0					
ANR	4062076	UnaryOperator	!		4061776	0					
ANR	4062077	UnaryOperationExpression	* asm_cpu		4061776	1					
ANR	4062078	UnaryOperator	*		4061776	0					
ANR	4062079	Identifier	asm_cpu		4061776	1					
ANR	4062080	AndExpression	"* asm_cpu && ! strstr ( nac , asm_cpu )"		4061776	1		&&			
ANR	4062081	UnaryOperationExpression	* asm_cpu		4061776	0					
ANR	4062082	UnaryOperator	*		4061776	0					
ANR	4062083	Identifier	asm_cpu		4061776	1					
ANR	4062084	UnaryOperationExpression	"! strstr ( nac , asm_cpu )"		4061776	1					
ANR	4062085	UnaryOperator	!		4061776	0					
ANR	4062086	CallExpression	"strstr ( nac , asm_cpu )"		4061776	1					
ANR	4062087	Callee	strstr		4061776	0					
ANR	4062088	Identifier	strstr		4061776	0					
ANR	4062089	ArgumentList	nac		4061776	1					
ANR	4062090	Argument	nac		4061776	0					
ANR	4062091	Identifier	nac		4061776	0					
ANR	4062092	Argument	asm_cpu		4061776	1					
ANR	4062093	Identifier	asm_cpu		4061776	0					
ANR	4062094	CompoundStatement		41:59:1271:1271	4061776	1					
ANR	4062095	ExpressionStatement	* comma = 0	539:6:14771:14781	4061776	0	True				
ANR	4062096	AssignmentExpression	* comma = 0		4061776	0		=			
ANR	4062097	UnaryOperationExpression	* comma		4061776	0					
ANR	4062098	UnaryOperator	*		4061776	0					
ANR	4062099	Identifier	comma		4061776	1					
ANR	4062100	PrimaryExpression	0		4061776	1					
ANR	4062101	ExpressionStatement	"r_config_set ( core -> config , ""asm.cpu"" , nac )"	540:6:14789:14832	4061776	1	True				
ANR	4062102	CallExpression	"r_config_set ( core -> config , ""asm.cpu"" , nac )"		4061776	0					
ANR	4062103	Callee	r_config_set		4061776	0					
ANR	4062104	Identifier	r_config_set		4061776	0					
ANR	4062105	ArgumentList	core -> config		4061776	1					
ANR	4062106	Argument	core -> config		4061776	0					
ANR	4062107	PtrMemberAccess	core -> config		4061776	0					
ANR	4062108	Identifier	core		4061776	0					
ANR	4062109	Identifier	config		4061776	1					
ANR	4062110	Argument	"""asm.cpu"""		4061776	1					
ANR	4062111	PrimaryExpression	"""asm.cpu"""		4061776	0					
ANR	4062112	Argument	nac		4061776	2					
ANR	4062113	Identifier	nac		4061776	0					
ANR	4062114	ExpressionStatement	free ( nac )	543:4:14851:14861	4061776	3	True				
ANR	4062115	CallExpression	free ( nac )		4061776	0					
ANR	4062116	Callee	free		4061776	0					
ANR	4062117	Identifier	free		4061776	0					
ANR	4062118	ArgumentList	nac		4061776	1					
ANR	4062119	Argument	nac		4061776	0					
ANR	4062120	Identifier	nac		4061776	0					
ANR	4062121	ElseStatement	else		4061776	0					
ANR	4062122	CompoundStatement		47:10:1381:1381	4061776	0					
ANR	4062123	ExpressionStatement	"r_config_set ( core -> config , ""asm.cpu"" , """" )"	545:4:14879:14921	4061776	0	True				
ANR	4062124	CallExpression	"r_config_set ( core -> config , ""asm.cpu"" , """" )"		4061776	0					
ANR	4062125	Callee	r_config_set		4061776	0					
ANR	4062126	Identifier	r_config_set		4061776	0					
ANR	4062127	ArgumentList	core -> config		4061776	1					
ANR	4062128	Argument	core -> config		4061776	0					
ANR	4062129	PtrMemberAccess	core -> config		4061776	0					
ANR	4062130	Identifier	core		4061776	0					
ANR	4062131	Identifier	config		4061776	1					
ANR	4062132	Argument	"""asm.cpu"""		4061776	1					
ANR	4062133	PrimaryExpression	"""asm.cpu"""		4061776	0					
ANR	4062134	Argument	""""""		4061776	2					
ANR	4062135	PrimaryExpression	""""""		4061776	0					
ANR	4062136	ExpressionStatement	bits = core -> assembler -> cur -> bits	548:2:14934:14967	4061776	2	True				
ANR	4062137	AssignmentExpression	bits = core -> assembler -> cur -> bits		4061776	0		=			
ANR	4062138	Identifier	bits		4061776	0					
ANR	4062139	PtrMemberAccess	core -> assembler -> cur -> bits		4061776	1					
ANR	4062140	PtrMemberAccess	core -> assembler -> cur		4061776	0					
ANR	4062141	PtrMemberAccess	core -> assembler		4061776	0					
ANR	4062142	Identifier	core		4061776	0					
ANR	4062143	Identifier	assembler		4061776	1					
ANR	4062144	Identifier	cur		4061776	1					
ANR	4062145	Identifier	bits		4061776	1					
ANR	4062146	IfStatement	if ( 8 & bits )		4061776	3					
ANR	4062147	Condition	8 & bits	549:6:14975:14982	4061776	0	True				
ANR	4062148	BitAndExpression	8 & bits		4061776	0		&			
ANR	4062149	PrimaryExpression	8		4061776	0					
ANR	4062150	Identifier	bits		4061776	1					
ANR	4062151	CompoundStatement		52:16:1493:1493	4061776	1					
ANR	4062152	ExpressionStatement	bits = 8	550:3:14990:14998	4061776	0	True				
ANR	4062153	AssignmentExpression	bits = 8		4061776	0		=			
ANR	4062154	Identifier	bits		4061776	0					
ANR	4062155	PrimaryExpression	8		4061776	1					
ANR	4062156	ElseStatement	else		4061776	0					
ANR	4062157	IfStatement	if ( 16 & bits )		4061776	0					
ANR	4062158	Condition	16 & bits	551:13:15013:15021	4061776	0	True				
ANR	4062159	BitAndExpression	16 & bits		4061776	0		&			
ANR	4062160	PrimaryExpression	16		4061776	0					
ANR	4062161	Identifier	bits		4061776	1					
ANR	4062162	CompoundStatement		54:24:1532:1532	4061776	1					
ANR	4062163	ExpressionStatement	bits = 16	552:3:15029:15038	4061776	0	True				
ANR	4062164	AssignmentExpression	bits = 16		4061776	0		=			
ANR	4062165	Identifier	bits		4061776	0					
ANR	4062166	PrimaryExpression	16		4061776	1					
ANR	4062167	ElseStatement	else		4061776	0					
ANR	4062168	IfStatement	if ( 32 & bits )		4061776	0					
ANR	4062169	Condition	32 & bits	553:13:15053:15061	4061776	0	True				
ANR	4062170	BitAndExpression	32 & bits		4061776	0		&			
ANR	4062171	PrimaryExpression	32		4061776	0					
ANR	4062172	Identifier	bits		4061776	1					
ANR	4062173	CompoundStatement		56:24:1572:1572	4061776	1					
ANR	4062174	ExpressionStatement	bits = 32	554:3:15069:15078	4061776	0	True				
ANR	4062175	AssignmentExpression	bits = 32		4061776	0		=			
ANR	4062176	Identifier	bits		4061776	0					
ANR	4062177	PrimaryExpression	32		4061776	1					
ANR	4062178	ElseStatement	else		4061776	0					
ANR	4062179	CompoundStatement		58:9:1597:1597	4061776	0					
ANR	4062180	ExpressionStatement	bits = 64	556:3:15094:15103	4061776	0	True				
ANR	4062181	AssignmentExpression	bits = 64		4061776	0		=			
ANR	4062182	Identifier	bits		4061776	0					
ANR	4062183	PrimaryExpression	64		4061776	1					
ANR	4062184	ExpressionStatement	"snprintf ( asmparser , sizeof ( asmparser ) , ""%s.pseudo"" , node -> value )"	559:1:15113:15179	4061776	13	True				
ANR	4062185	CallExpression	"snprintf ( asmparser , sizeof ( asmparser ) , ""%s.pseudo"" , node -> value )"		4061776	0					
ANR	4062186	Callee	snprintf		4061776	0					
ANR	4062187	Identifier	snprintf		4061776	0					
ANR	4062188	ArgumentList	asmparser		4061776	1					
ANR	4062189	Argument	asmparser		4061776	0					
ANR	4062190	Identifier	asmparser		4061776	0					
ANR	4062191	Argument	sizeof ( asmparser )		4061776	1					
ANR	4062192	SizeofExpression	sizeof ( asmparser )		4061776	0					
ANR	4062193	Sizeof	sizeof		4061776	0					
ANR	4062194	SizeofOperand	asmparser		4061776	1					
ANR	4062195	Argument	"""%s.pseudo"""		4061776	2					
ANR	4062196	PrimaryExpression	"""%s.pseudo"""		4061776	0					
ANR	4062197	Argument	node -> value		4061776	3					
ANR	4062198	PtrMemberAccess	node -> value		4061776	0					
ANR	4062199	Identifier	node		4061776	0					
ANR	4062200	Identifier	value		4061776	1					
ANR	4062201	ExpressionStatement	"r_config_set ( core -> config , ""asm.parser"" , asmparser )"	560:1:15182:15234	4061776	14	True				
ANR	4062202	CallExpression	"r_config_set ( core -> config , ""asm.parser"" , asmparser )"		4061776	0					
ANR	4062203	Callee	r_config_set		4061776	0					
ANR	4062204	Identifier	r_config_set		4061776	0					
ANR	4062205	ArgumentList	core -> config		4061776	1					
ANR	4062206	Argument	core -> config		4061776	0					
ANR	4062207	PtrMemberAccess	core -> config		4061776	0					
ANR	4062208	Identifier	core		4061776	0					
ANR	4062209	Identifier	config		4061776	1					
ANR	4062210	Argument	"""asm.parser"""		4061776	1					
ANR	4062211	PrimaryExpression	"""asm.parser"""		4061776	0					
ANR	4062212	Argument	asmparser		4061776	2					
ANR	4062213	Identifier	asmparser		4061776	0					
ANR	4062214	IfStatement	if ( core -> assembler -> cur && core -> anal && ! ( core -> assembler -> cur -> bits & core -> anal -> bits ) )		4061776	15					
ANR	4062215	Condition	core -> assembler -> cur && core -> anal && ! ( core -> assembler -> cur -> bits & core -> anal -> bits )	561:5:15241:15331	4061776	0	True				
ANR	4062216	AndExpression	core -> assembler -> cur && core -> anal && ! ( core -> assembler -> cur -> bits & core -> anal -> bits )		4061776	0		&&			
ANR	4062217	PtrMemberAccess	core -> assembler -> cur		4061776	0					
ANR	4062218	PtrMemberAccess	core -> assembler		4061776	0					
ANR	4062219	Identifier	core		4061776	0					
ANR	4062220	Identifier	assembler		4061776	1					
ANR	4062221	Identifier	cur		4061776	1					
ANR	4062222	AndExpression	core -> anal && ! ( core -> assembler -> cur -> bits & core -> anal -> bits )		4061776	1		&&			
ANR	4062223	PtrMemberAccess	core -> anal		4061776	0					
ANR	4062224	Identifier	core		4061776	0					
ANR	4062225	Identifier	anal		4061776	1					
ANR	4062226	UnaryOperationExpression	! ( core -> assembler -> cur -> bits & core -> anal -> bits )		4061776	1					
ANR	4062227	UnaryOperator	!		4061776	0					
ANR	4062228	BitAndExpression	core -> assembler -> cur -> bits & core -> anal -> bits		4061776	1		&			
ANR	4062229	PtrMemberAccess	core -> assembler -> cur -> bits		4061776	0					
ANR	4062230	PtrMemberAccess	core -> assembler -> cur		4061776	0					
ANR	4062231	PtrMemberAccess	core -> assembler		4061776	0					
ANR	4062232	Identifier	core		4061776	0					
ANR	4062233	Identifier	assembler		4061776	1					
ANR	4062234	Identifier	cur		4061776	1					
ANR	4062235	Identifier	bits		4061776	1					
ANR	4062236	PtrMemberAccess	core -> anal -> bits		4061776	1					
ANR	4062237	PtrMemberAccess	core -> anal		4061776	0					
ANR	4062238	Identifier	core		4061776	0					
ANR	4062239	Identifier	anal		4061776	1					
ANR	4062240	Identifier	bits		4061776	1					
ANR	4062241	CompoundStatement		65:55:1842:1842	4061776	1					
ANR	4062242	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"	563:2:15338:15385	4061776	0	True				
ANR	4062243	CallExpression	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"		4061776	0					
ANR	4062244	Callee	r_config_set_i		4061776	0					
ANR	4062245	Identifier	r_config_set_i		4061776	0					
ANR	4062246	ArgumentList	core -> config		4061776	1					
ANR	4062247	Argument	core -> config		4061776	0					
ANR	4062248	PtrMemberAccess	core -> config		4061776	0					
ANR	4062249	Identifier	core		4061776	0					
ANR	4062250	Identifier	config		4061776	1					
ANR	4062251	Argument	"""asm.bits"""		4061776	1					
ANR	4062252	PrimaryExpression	"""asm.bits"""		4061776	0					
ANR	4062253	Argument	bits		4061776	2					
ANR	4062254	Identifier	bits		4061776	0					
ANR	4062255	ExpressionStatement	"r_debug_set_arch ( core -> dbg , node -> value , bits )"	567:1:15460:15507	4061776	16	True				
ANR	4062256	CallExpression	"r_debug_set_arch ( core -> dbg , node -> value , bits )"		4061776	0					
ANR	4062257	Callee	r_debug_set_arch		4061776	0					
ANR	4062258	Identifier	r_debug_set_arch		4061776	0					
ANR	4062259	ArgumentList	core -> dbg		4061776	1					
ANR	4062260	Argument	core -> dbg		4061776	0					
ANR	4062261	PtrMemberAccess	core -> dbg		4061776	0					
ANR	4062262	Identifier	core		4061776	0					
ANR	4062263	Identifier	dbg		4061776	1					
ANR	4062264	Argument	node -> value		4061776	1					
ANR	4062265	PtrMemberAccess	node -> value		4061776	0					
ANR	4062266	Identifier	node		4061776	0					
ANR	4062267	Identifier	value		4061776	1					
ANR	4062268	Argument	bits		4061776	2					
ANR	4062269	Identifier	bits		4061776	0					
ANR	4062270	IfStatement	"if ( ! r_config_set ( core -> config , ""anal.arch"" , node -> value ) )"		4061776	17					
ANR	4062271	Condition	"! r_config_set ( core -> config , ""anal.arch"" , node -> value )"	568:5:15514:15567	4061776	0	True				
ANR	4062272	UnaryOperationExpression	"! r_config_set ( core -> config , ""anal.arch"" , node -> value )"		4061776	0					
ANR	4062273	UnaryOperator	!		4061776	0					
ANR	4062274	CallExpression	"r_config_set ( core -> config , ""anal.arch"" , node -> value )"		4061776	1					
ANR	4062275	Callee	r_config_set		4061776	0					
ANR	4062276	Identifier	r_config_set		4061776	0					
ANR	4062277	ArgumentList	core -> config		4061776	1					
ANR	4062278	Argument	core -> config		4061776	0					
ANR	4062279	PtrMemberAccess	core -> config		4061776	0					
ANR	4062280	Identifier	core		4061776	0					
ANR	4062281	Identifier	config		4061776	1					
ANR	4062282	Argument	"""anal.arch"""		4061776	1					
ANR	4062283	PrimaryExpression	"""anal.arch"""		4061776	0					
ANR	4062284	Argument	node -> value		4061776	2					
ANR	4062285	PtrMemberAccess	node -> value		4061776	0					
ANR	4062286	Identifier	node		4061776	0					
ANR	4062287	Identifier	value		4061776	1					
ANR	4062288	CompoundStatement		72:2:2082:2116	4061776	1					
ANR	4062289	IdentifierDeclStatement	"char * p , * s = strdup ( node -> value ) ;"	569:2:15574:15608	4061776	0	True				
ANR	4062290	IdentifierDecl	* p		4061776	0					
ANR	4062291	IdentifierDeclType	char *		4061776	0					
ANR	4062292	Identifier	p		4061776	1					
ANR	4062293	IdentifierDecl	* s = strdup ( node -> value )		4061776	1					
ANR	4062294	IdentifierDeclType	char *		4061776	0					
ANR	4062295	Identifier	s		4061776	1					
ANR	4062296	AssignmentExpression	* s = strdup ( node -> value )		4061776	2		=			
ANR	4062297	Identifier	s		4061776	0					
ANR	4062298	CallExpression	strdup ( node -> value )		4061776	1					
ANR	4062299	Callee	strdup		4061776	0					
ANR	4062300	Identifier	strdup		4061776	0					
ANR	4062301	ArgumentList	node -> value		4061776	1					
ANR	4062302	Argument	node -> value		4061776	0					
ANR	4062303	PtrMemberAccess	node -> value		4061776	0					
ANR	4062304	Identifier	node		4061776	0					
ANR	4062305	Identifier	value		4061776	1					
ANR	4062306	IfStatement	if ( s )		4061776	1					
ANR	4062307	Condition	s	570:6:15616:15616	4061776	0	True				
ANR	4062308	Identifier	s		4061776	0					
ANR	4062309	CompoundStatement		73:9:2127:2127	4061776	1					
ANR	4062310	ExpressionStatement	"p = strchr ( s , '.' )"	571:3:15624:15643	4061776	0	True				
ANR	4062311	AssignmentExpression	"p = strchr ( s , '.' )"		4061776	0		=			
ANR	4062312	Identifier	p		4061776	0					
ANR	4062313	CallExpression	"strchr ( s , '.' )"		4061776	1					
ANR	4062314	Callee	strchr		4061776	0					
ANR	4062315	Identifier	strchr		4061776	0					
ANR	4062316	ArgumentList	s		4061776	1					
ANR	4062317	Argument	s		4061776	0					
ANR	4062318	Identifier	s		4061776	0					
ANR	4062319	Argument	'.'		4061776	1					
ANR	4062320	PrimaryExpression	'.'		4061776	0					
ANR	4062321	IfStatement	if ( p )		4061776	1					
ANR	4062322	Condition	p	572:7:15652:15652	4061776	0	True				
ANR	4062323	Identifier	p		4061776	0					
ANR	4062324	CompoundStatement		75:10:2163:2163	4061776	1					
ANR	4062325	ExpressionStatement	* p = 0	573:4:15661:15667	4061776	0	True				
ANR	4062326	AssignmentExpression	* p = 0		4061776	0		=			
ANR	4062327	UnaryOperationExpression	* p		4061776	0					
ANR	4062328	UnaryOperator	*		4061776	0					
ANR	4062329	Identifier	p		4061776	1					
ANR	4062330	PrimaryExpression	0		4061776	1					
ANR	4062331	IfStatement	"if ( ! r_config_set ( core -> config , ""anal.arch"" , s ) )"		4061776	2					
ANR	4062332	Condition	"! r_config_set ( core -> config , ""anal.arch"" , s )"	575:7:15681:15724	4061776	0	True				
ANR	4062333	UnaryOperationExpression	"! r_config_set ( core -> config , ""anal.arch"" , s )"		4061776	0					
ANR	4062334	UnaryOperator	!		4061776	0					
ANR	4062335	CallExpression	"r_config_set ( core -> config , ""anal.arch"" , s )"		4061776	1					
ANR	4062336	Callee	r_config_set		4061776	0					
ANR	4062337	Identifier	r_config_set		4061776	0					
ANR	4062338	ArgumentList	core -> config		4061776	1					
ANR	4062339	Argument	core -> config		4061776	0					
ANR	4062340	PtrMemberAccess	core -> config		4061776	0					
ANR	4062341	Identifier	core		4061776	0					
ANR	4062342	Identifier	config		4061776	1					
ANR	4062343	Argument	"""anal.arch"""		4061776	1					
ANR	4062344	PrimaryExpression	"""anal.arch"""		4061776	0					
ANR	4062345	Argument	s		4061776	2					
ANR	4062346	Identifier	s		4061776	0					
ANR	4062347	CompoundStatement		78:53:2235:2235	4061776	1					
ANR	4062348	ExpressionStatement	"r_config_set ( core -> config , ""anal.arch"" , ""null"" )"	577:4:15777:15825	4061776	0	True				
ANR	4062349	CallExpression	"r_config_set ( core -> config , ""anal.arch"" , ""null"" )"		4061776	0					
ANR	4062350	Callee	r_config_set		4061776	0					
ANR	4062351	Identifier	r_config_set		4061776	0					
ANR	4062352	ArgumentList	core -> config		4061776	1					
ANR	4062353	Argument	core -> config		4061776	0					
ANR	4062354	PtrMemberAccess	core -> config		4061776	0					
ANR	4062355	Identifier	core		4061776	0					
ANR	4062356	Identifier	config		4061776	1					
ANR	4062357	Argument	"""anal.arch"""		4061776	1					
ANR	4062358	PrimaryExpression	"""anal.arch"""		4061776	0					
ANR	4062359	Argument	"""null"""		4061776	2					
ANR	4062360	PrimaryExpression	"""null"""		4061776	0					
ANR	4062361	ExpressionStatement	free ( s )	579:3:15835:15843	4061776	3	True				
ANR	4062362	CallExpression	free ( s )		4061776	0					
ANR	4062363	Callee	free		4061776	0					
ANR	4062364	Identifier	free		4061776	0					
ANR	4062365	ArgumentList	s		4061776	1					
ANR	4062366	Argument	s		4061776	0					
ANR	4062367	Identifier	s		4061776	0					
ANR	4062368	IfStatement	if ( core -> anal )		4061776	18					
ANR	4062369	Condition	core -> anal	583:5:15873:15882	4061776	0	True				
ANR	4062370	PtrMemberAccess	core -> anal		4061776	0					
ANR	4062371	Identifier	core		4061776	0					
ANR	4062372	Identifier	anal		4061776	1					
ANR	4062373	CompoundStatement		87:2:2397:2456	4061776	1					
ANR	4062374	IdentifierDeclStatement	"const char * asmcpu = r_config_get ( core -> config , ""asm.cpu"" ) ;"	584:2:15889:15948	4061776	0	True				
ANR	4062375	IdentifierDecl	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		4061776	0					
ANR	4062376	IdentifierDeclType	const char *		4061776	0					
ANR	4062377	Identifier	asmcpu		4061776	1					
ANR	4062378	AssignmentExpression	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		4061776	2		=			
ANR	4062379	Identifier	asmcpu		4061776	0					
ANR	4062380	CallExpression	"r_config_get ( core -> config , ""asm.cpu"" )"		4061776	1					
ANR	4062381	Callee	r_config_get		4061776	0					
ANR	4062382	Identifier	r_config_get		4061776	0					
ANR	4062383	ArgumentList	core -> config		4061776	1					
ANR	4062384	Argument	core -> config		4061776	0					
ANR	4062385	PtrMemberAccess	core -> config		4061776	0					
ANR	4062386	Identifier	core		4061776	0					
ANR	4062387	Identifier	config		4061776	1					
ANR	4062388	Argument	"""asm.cpu"""		4061776	1					
ANR	4062389	PrimaryExpression	"""asm.cpu"""		4061776	0					
ANR	4062390	IfStatement	"if ( ! r_syscall_setup ( core -> anal -> syscall , node -> value , core -> anal -> bits , asmcpu , asmos ) )"		4061776	1					
ANR	4062391	Condition	"! r_syscall_setup ( core -> anal -> syscall , node -> value , core -> anal -> bits , asmcpu , asmos )"	585:6:15956:16039	4061776	0	True				
ANR	4062392	UnaryOperationExpression	"! r_syscall_setup ( core -> anal -> syscall , node -> value , core -> anal -> bits , asmcpu , asmos )"		4061776	0					
ANR	4062393	UnaryOperator	!		4061776	0					
ANR	4062394	CallExpression	"r_syscall_setup ( core -> anal -> syscall , node -> value , core -> anal -> bits , asmcpu , asmos )"		4061776	1					
ANR	4062395	Callee	r_syscall_setup		4061776	0					
ANR	4062396	Identifier	r_syscall_setup		4061776	0					
ANR	4062397	ArgumentList	core -> anal -> syscall		4061776	1					
ANR	4062398	Argument	core -> anal -> syscall		4061776	0					
ANR	4062399	PtrMemberAccess	core -> anal -> syscall		4061776	0					
ANR	4062400	PtrMemberAccess	core -> anal		4061776	0					
ANR	4062401	Identifier	core		4061776	0					
ANR	4062402	Identifier	anal		4061776	1					
ANR	4062403	Identifier	syscall		4061776	1					
ANR	4062404	Argument	node -> value		4061776	1					
ANR	4062405	PtrMemberAccess	node -> value		4061776	0					
ANR	4062406	Identifier	node		4061776	0					
ANR	4062407	Identifier	value		4061776	1					
ANR	4062408	Argument	core -> anal -> bits		4061776	2					
ANR	4062409	PtrMemberAccess	core -> anal -> bits		4061776	0					
ANR	4062410	PtrMemberAccess	core -> anal		4061776	0					
ANR	4062411	Identifier	core		4061776	0					
ANR	4062412	Identifier	anal		4061776	1					
ANR	4062413	Identifier	bits		4061776	1					
ANR	4062414	Argument	asmcpu		4061776	3					
ANR	4062415	Identifier	asmcpu		4061776	0					
ANR	4062416	Argument	asmos		4061776	4					
ANR	4062417	Identifier	asmos		4061776	0					
ANR	4062418	CompoundStatement		88:92:2550:2550	4061776	1					
ANR	4062419	ExpressionStatement	"__setsegoff ( core -> config , node -> value , core -> assembler -> bits )"	592:1:16279:16341	4061776	19	True				
ANR	4062420	CallExpression	"__setsegoff ( core -> config , node -> value , core -> assembler -> bits )"		4061776	0					
ANR	4062421	Callee	__setsegoff		4061776	0					
ANR	4062422	Identifier	__setsegoff		4061776	0					
ANR	4062423	ArgumentList	core -> config		4061776	1					
ANR	4062424	Argument	core -> config		4061776	0					
ANR	4062425	PtrMemberAccess	core -> config		4061776	0					
ANR	4062426	Identifier	core		4061776	0					
ANR	4062427	Identifier	config		4061776	1					
ANR	4062428	Argument	node -> value		4061776	1					
ANR	4062429	PtrMemberAccess	node -> value		4061776	0					
ANR	4062430	Identifier	node		4061776	0					
ANR	4062431	Identifier	value		4061776	1					
ANR	4062432	Argument	core -> assembler -> bits		4061776	2					
ANR	4062433	PtrMemberAccess	core -> assembler -> bits		4061776	0					
ANR	4062434	PtrMemberAccess	core -> assembler		4061776	0					
ANR	4062435	Identifier	core		4061776	0					
ANR	4062436	Identifier	assembler		4061776	1					
ANR	4062437	Identifier	bits		4061776	1					
ANR	4062438	IdentifierDeclStatement	int bigbin = r_bin_is_big_endian ( core -> bin ) ;	595:1:16374:16418	4061776	20	True				
ANR	4062439	IdentifierDecl	bigbin = r_bin_is_big_endian ( core -> bin )		4061776	0					
ANR	4062440	IdentifierDeclType	int		4061776	0					
ANR	4062441	Identifier	bigbin		4061776	1					
ANR	4062442	AssignmentExpression	bigbin = r_bin_is_big_endian ( core -> bin )		4061776	2		=			
ANR	4062443	Identifier	bigbin		4061776	0					
ANR	4062444	CallExpression	r_bin_is_big_endian ( core -> bin )		4061776	1					
ANR	4062445	Callee	r_bin_is_big_endian		4061776	0					
ANR	4062446	Identifier	r_bin_is_big_endian		4061776	0					
ANR	4062447	ArgumentList	core -> bin		4061776	1					
ANR	4062448	Argument	core -> bin		4061776	0					
ANR	4062449	PtrMemberAccess	core -> bin		4061776	0					
ANR	4062450	Identifier	core		4061776	0					
ANR	4062451	Identifier	bin		4061776	1					
ANR	4062452	IfStatement	if ( bigbin == - 1 )		4061776	21					
ANR	4062453	Condition	bigbin == - 1	596:5:16425:16436	4061776	0	True				
ANR	4062454	EqualityExpression	bigbin == - 1		4061776	0		==			
ANR	4062455	Identifier	bigbin		4061776	0					
ANR	4062456	UnaryOperationExpression	- 1		4061776	1					
ANR	4062457	UnaryOperator	-		4061776	0					
ANR	4062458	PrimaryExpression	1		4061776	1					
ANR	4062459	CompoundStatement		99:65:2993:2993	4061776	1					
ANR	4062460	ExpressionStatement	"bigbin = r_config_get_i ( core -> config , ""cfg.bigendian"" )"	597:2:16489:16544	4061776	0	True				
ANR	4062461	AssignmentExpression	"bigbin = r_config_get_i ( core -> config , ""cfg.bigendian"" )"		4061776	0		=			
ANR	4062462	Identifier	bigbin		4061776	0					
ANR	4062463	CallExpression	"r_config_get_i ( core -> config , ""cfg.bigendian"" )"		4061776	1					
ANR	4062464	Callee	r_config_get_i		4061776	0					
ANR	4062465	Identifier	r_config_get_i		4061776	0					
ANR	4062466	ArgumentList	core -> config		4061776	1					
ANR	4062467	Argument	core -> config		4061776	0					
ANR	4062468	PtrMemberAccess	core -> config		4061776	0					
ANR	4062469	Identifier	core		4061776	0					
ANR	4062470	Identifier	config		4061776	1					
ANR	4062471	Argument	"""cfg.bigendian"""		4061776	1					
ANR	4062472	PrimaryExpression	"""cfg.bigendian"""		4061776	0					
ANR	4062473	ExpressionStatement	"r_asm_set_big_endian ( core -> assembler , bigbin )"	601:1:16597:16643	4061776	22	True				
ANR	4062474	CallExpression	"r_asm_set_big_endian ( core -> assembler , bigbin )"		4061776	0					
ANR	4062475	Callee	r_asm_set_big_endian		4061776	0					
ANR	4062476	Identifier	r_asm_set_big_endian		4061776	0					
ANR	4062477	ArgumentList	core -> assembler		4061776	1					
ANR	4062478	Argument	core -> assembler		4061776	0					
ANR	4062479	PtrMemberAccess	core -> assembler		4061776	0					
ANR	4062480	Identifier	core		4061776	0					
ANR	4062481	Identifier	assembler		4061776	1					
ANR	4062482	Argument	bigbin		4061776	1					
ANR	4062483	Identifier	bigbin		4061776	0					
ANR	4062484	ExpressionStatement	core -> print -> big_endian = bigbin	603:1:16688:16720	4061776	23	True				
ANR	4062485	AssignmentExpression	core -> print -> big_endian = bigbin		4061776	0		=			
ANR	4062486	PtrMemberAccess	core -> print -> big_endian		4061776	0					
ANR	4062487	PtrMemberAccess	core -> print		4061776	0					
ANR	4062488	Identifier	core		4061776	0					
ANR	4062489	Identifier	print		4061776	1					
ANR	4062490	Identifier	big_endian		4061776	1					
ANR	4062491	Identifier	bigbin		4061776	1					
ANR	4062492	ExpressionStatement	"r_asm_set_cpu ( core -> assembler , asm_cpu )"	605:1:16724:16764	4061776	24	True				
ANR	4062493	CallExpression	"r_asm_set_cpu ( core -> assembler , asm_cpu )"		4061776	0					
ANR	4062494	Callee	r_asm_set_cpu		4061776	0					
ANR	4062495	Identifier	r_asm_set_cpu		4061776	0					
ANR	4062496	ArgumentList	core -> assembler		4061776	1					
ANR	4062497	Argument	core -> assembler		4061776	0					
ANR	4062498	PtrMemberAccess	core -> assembler		4061776	0					
ANR	4062499	Identifier	core		4061776	0					
ANR	4062500	Identifier	assembler		4061776	1					
ANR	4062501	Argument	asm_cpu		4061776	1					
ANR	4062502	Identifier	asm_cpu		4061776	0					
ANR	4062503	ExpressionStatement	free ( asm_cpu )	606:1:16767:16781	4061776	25	True				
ANR	4062504	CallExpression	free ( asm_cpu )		4061776	0					
ANR	4062505	Callee	free		4061776	0					
ANR	4062506	Identifier	free		4061776	0					
ANR	4062507	ArgumentList	asm_cpu		4061776	1					
ANR	4062508	Argument	asm_cpu		4061776	0					
ANR	4062509	Identifier	asm_cpu		4061776	0					
ANR	4062510	IdentifierDeclStatement	"RConfigNode * asmcpu = r_config_node_get ( core -> config , ""asm.cpu"" ) ;"	607:1:16784:16849	4061776	26	True				
ANR	4062511	IdentifierDecl	"* asmcpu = r_config_node_get ( core -> config , ""asm.cpu"" )"		4061776	0					
ANR	4062512	IdentifierDeclType	RConfigNode *		4061776	0					
ANR	4062513	Identifier	asmcpu		4061776	1					
ANR	4062514	AssignmentExpression	"* asmcpu = r_config_node_get ( core -> config , ""asm.cpu"" )"		4061776	2		=			
ANR	4062515	Identifier	asmcpu		4061776	0					
ANR	4062516	CallExpression	"r_config_node_get ( core -> config , ""asm.cpu"" )"		4061776	1					
ANR	4062517	Callee	r_config_node_get		4061776	0					
ANR	4062518	Identifier	r_config_node_get		4061776	0					
ANR	4062519	ArgumentList	core -> config		4061776	1					
ANR	4062520	Argument	core -> config		4061776	0					
ANR	4062521	PtrMemberAccess	core -> config		4061776	0					
ANR	4062522	Identifier	core		4061776	0					
ANR	4062523	Identifier	config		4061776	1					
ANR	4062524	Argument	"""asm.cpu"""		4061776	1					
ANR	4062525	PrimaryExpression	"""asm.cpu"""		4061776	0					
ANR	4062526	IfStatement	if ( asmcpu )		4061776	27					
ANR	4062527	Condition	asmcpu	608:5:16856:16861	4061776	0	True				
ANR	4062528	Identifier	asmcpu		4061776	0					
ANR	4062529	CompoundStatement		111:13:3372:3372	4061776	1					
ANR	4062530	ExpressionStatement	"update_asmcpu_options ( core , asmcpu )"	609:2:16868:16904	4061776	0	True				
ANR	4062531	CallExpression	"update_asmcpu_options ( core , asmcpu )"		4061776	0					
ANR	4062532	Callee	update_asmcpu_options		4061776	0					
ANR	4062533	Identifier	update_asmcpu_options		4061776	0					
ANR	4062534	ArgumentList	core		4061776	1					
ANR	4062535	Argument	core		4061776	0					
ANR	4062536	Identifier	core		4061776	0					
ANR	4062537	Argument	asmcpu		4061776	1					
ANR	4062538	Identifier	asmcpu		4061776	0					
ANR	4062539	CompoundStatement		115:2:3422:3481	4061776	28					
ANR	4062540	IdentifierDeclStatement	"int v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN ) ;"	612:2:16914:16973	4061776	0	True				
ANR	4062541	IdentifierDecl	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		4061776	0					
ANR	4062542	IdentifierDeclType	int		4061776	0					
ANR	4062543	Identifier	v		4061776	1					
ANR	4062544	AssignmentExpression	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		4061776	2		=			
ANR	4062545	Identifier	v		4061776	0					
ANR	4062546	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		4061776	1					
ANR	4062547	Callee	r_anal_archinfo		4061776	0					
ANR	4062548	Identifier	r_anal_archinfo		4061776	0					
ANR	4062549	ArgumentList	core -> anal		4061776	1					
ANR	4062550	Argument	core -> anal		4061776	0					
ANR	4062551	PtrMemberAccess	core -> anal		4061776	0					
ANR	4062552	Identifier	core		4061776	0					
ANR	4062553	Identifier	anal		4061776	1					
ANR	4062554	Argument	R_ANAL_ARCHINFO_ALIGN		4061776	1					
ANR	4062555	Identifier	R_ANAL_ARCHINFO_ALIGN		4061776	0					
ANR	4062556	IfStatement	if ( v != - 1 )		4061776	1					
ANR	4062557	Condition	v != - 1	613:6:16981:16987	4061776	0	True				
ANR	4062558	EqualityExpression	v != - 1		4061776	0		!=			
ANR	4062559	Identifier	v		4061776	0					
ANR	4062560	UnaryOperationExpression	- 1		4061776	1					
ANR	4062561	UnaryOperator	-		4061776	0					
ANR	4062562	PrimaryExpression	1		4061776	1					
ANR	4062563	CompoundStatement		116:15:3498:3498	4061776	1					
ANR	4062564	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.pcalign"" , v )"	614:3:16995:17042	4061776	0	True				
ANR	4062565	CallExpression	"r_config_set_i ( core -> config , ""asm.pcalign"" , v )"		4061776	0					
ANR	4062566	Callee	r_config_set_i		4061776	0					
ANR	4062567	Identifier	r_config_set_i		4061776	0					
ANR	4062568	ArgumentList	core -> config		4061776	1					
ANR	4062569	Argument	core -> config		4061776	0					
ANR	4062570	PtrMemberAccess	core -> config		4061776	0					
ANR	4062571	Identifier	core		4061776	0					
ANR	4062572	Identifier	config		4061776	1					
ANR	4062573	Argument	"""asm.pcalign"""		4061776	1					
ANR	4062574	PrimaryExpression	"""asm.pcalign"""		4061776	0					
ANR	4062575	Argument	v		4061776	2					
ANR	4062576	Identifier	v		4061776	0					
ANR	4062577	ElseStatement	else		4061776	0					
ANR	4062578	CompoundStatement		118:9:3561:3561	4061776	0					
ANR	4062579	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.pcalign"" , 0 )"	616:3:17058:17105	4061776	0	True				
ANR	4062580	CallExpression	"r_config_set_i ( core -> config , ""asm.pcalign"" , 0 )"		4061776	0					
ANR	4062581	Callee	r_config_set_i		4061776	0					
ANR	4062582	Identifier	r_config_set_i		4061776	0					
ANR	4062583	ArgumentList	core -> config		4061776	1					
ANR	4062584	Argument	core -> config		4061776	0					
ANR	4062585	PtrMemberAccess	core -> config		4061776	0					
ANR	4062586	Identifier	core		4061776	0					
ANR	4062587	Identifier	config		4061776	1					
ANR	4062588	Argument	"""asm.pcalign"""		4061776	1					
ANR	4062589	PrimaryExpression	"""asm.pcalign"""		4061776	0					
ANR	4062590	Argument	0		4061776	2					
ANR	4062591	PrimaryExpression	0		4061776	0					
ANR	4062592	IfStatement	if ( ! core -> anal || ! core -> anal -> sdb_types )		4061776	29					
ANR	4062593	Condition	! core -> anal || ! core -> anal -> sdb_types	624:5:17333:17369	4061776	0	True				
ANR	4062594	OrExpression	! core -> anal || ! core -> anal -> sdb_types		4061776	0		||			
ANR	4062595	UnaryOperationExpression	! core -> anal		4061776	0					
ANR	4062596	UnaryOperator	!		4061776	0					
ANR	4062597	PtrMemberAccess	core -> anal		4061776	1					
ANR	4062598	Identifier	core		4061776	0					
ANR	4062599	Identifier	anal		4061776	1					
ANR	4062600	UnaryOperationExpression	! core -> anal -> sdb_types		4061776	1					
ANR	4062601	UnaryOperator	!		4061776	0					
ANR	4062602	PtrMemberAccess	core -> anal -> sdb_types		4061776	1					
ANR	4062603	PtrMemberAccess	core -> anal		4061776	0					
ANR	4062604	Identifier	core		4061776	0					
ANR	4062605	Identifier	anal		4061776	1					
ANR	4062606	Identifier	sdb_types		4061776	1					
ANR	4062607	CompoundStatement		127:44:3880:3880	4061776	1					
ANR	4062608	ExpressionStatement	r_core_anal_type_init ( core )	625:2:17376:17404	4061776	0	True				
ANR	4062609	CallExpression	r_core_anal_type_init ( core )		4061776	0					
ANR	4062610	Callee	r_core_anal_type_init		4061776	0					
ANR	4062611	Identifier	r_core_anal_type_init		4061776	0					
ANR	4062612	ArgumentList	core		4061776	1					
ANR	4062613	Argument	core		4061776	0					
ANR	4062614	Identifier	core		4061776	0					
ANR	4062615	ExpressionStatement	r_core_anal_cc_init ( core )	627:1:17410:17436	4061776	30	True				
ANR	4062616	CallExpression	r_core_anal_cc_init ( core )		4061776	0					
ANR	4062617	Callee	r_core_anal_cc_init		4061776	0					
ANR	4062618	Identifier	r_core_anal_cc_init		4061776	0					
ANR	4062619	ArgumentList	core		4061776	1					
ANR	4062620	Argument	core		4061776	0					
ANR	4062621	Identifier	core		4061776	0					
ANR	4062622	ReturnStatement	return true ;	628:1:17439:17450	4061776	31	True				
ANR	4062623	Identifier	true		4061776	0					
ANR	4062624	ReturnType	static bool		4061776	1					
ANR	4062625	Identifier	cb_asmarch		4061776	2					
ANR	4062626	ParameterList	"void * user , void * data"		4061776	3					
ANR	4062627	Parameter	void * user	498:23:13467:13476	4061776	0	True				
ANR	4062628	ParameterType	void *		4061776	0					
ANR	4062629	Identifier	user		4061776	1					
ANR	4062630	Parameter	void * data	498:35:13479:13488	4061776	1	True				
ANR	4062631	ParameterType	void *		4061776	0					
ANR	4062632	Identifier	data		4061776	1					
ANR	4062633	CFGEntryNode	ENTRY		4061776		True				
ANR	4062634	CFGExitNode	EXIT		4061776		True				
ANR	4062635	Symbol	r_bin_is_big_endian		4061776						
ANR	4062636	Symbol	data		4061776						
ANR	4062637	Symbol	r_anal_archinfo		4061776						
ANR	4062638	Symbol	strchr		4061776						
ANR	4062639	Symbol	* core -> assembler		4061776						
ANR	4062640	Symbol	strlen		4061776						
ANR	4062641	Symbol	nac		4061776						
ANR	4062642	Symbol	asmos		4061776						
ANR	4062643	Symbol	core -> egg		4061776						
ANR	4062644	Symbol	* node		4061776						
ANR	4062645	Symbol	asmparser		4061776						
ANR	4062646	Symbol	core -> bin		4061776						
ANR	4062647	Symbol	* newAsmCPU		4061776						
ANR	4062648	Symbol	* node -> value		4061776						
ANR	4062649	Symbol	NULL		4061776						
ANR	4062650	Symbol	bits		4061776						
ANR	4062651	Symbol	core -> print -> big_endian		4061776						
ANR	4062652	Symbol	core		4061776						
ANR	4062653	Symbol	node		4061776						
ANR	4062654	Symbol	* * * core		4061776						
ANR	4062655	Symbol	* * node		4061776						
ANR	4062656	Symbol	strstr		4061776						
ANR	4062657	Symbol	bigbin		4061776						
ANR	4062658	Symbol	r_config_get_i		4061776						
ANR	4062659	Symbol	true		4061776						
ANR	4062660	Symbol	core -> assembler -> cur -> bits		4061776						
ANR	4062661	Symbol	core -> print		4061776						
ANR	4062662	Symbol	r_config_node_get		4061776						
ANR	4062663	Symbol	asmcpu		4061776						
ANR	4062664	Symbol	asm_cpu		4061776						
ANR	4062665	Symbol	* core -> assembler -> cur		4061776						
ANR	4062666	Symbol	* core		4061776						
ANR	4062667	Symbol	r_config_get		4061776						
ANR	4062668	Symbol	core -> assembler -> bits		4061776						
ANR	4062669	Symbol	core -> assembler		4061776						
ANR	4062670	Symbol	core -> anal -> sdb_types		4061776						
ANR	4062671	Symbol	core -> anal		4061776						
ANR	4062672	Symbol	R_SYS_BITS		4061776						
ANR	4062673	Symbol	* comma		4061776						
ANR	4062674	Symbol	r_asm_use		4061776						
ANR	4062675	Symbol	newAsmCPU		4061776						
ANR	4062676	Symbol	r_config_set		4061776						
ANR	4062677	Symbol	* * core		4061776						
ANR	4062678	Symbol	core -> config		4061776						
ANR	4062679	Symbol	core -> anal -> bits		4061776						
ANR	4062680	Symbol	false		4061776						
ANR	4062681	Symbol	* asm_cpu		4061776						
ANR	4062682	Symbol	core -> assembler -> cur -> cpus		4061776						
ANR	4062683	Symbol	core -> anal -> syscall		4061776						
ANR	4062684	Symbol	node -> value		4061776						
ANR	4062685	Symbol	p		4061776						
ANR	4062686	Symbol	R_ANAL_ARCHINFO_ALIGN		4061776						
ANR	4062687	Symbol	comma		4061776						
ANR	4062688	Symbol	* core -> print		4061776						
ANR	4062689	Symbol	* core -> anal		4061776						
ANR	4062690	Symbol	s		4061776						
ANR	4062691	Symbol	v		4061776						
ANR	4062692	Symbol	* * core -> assembler		4061776						
ANR	4062693	Symbol	core -> assembler -> cur		4061776						
ANR	4062694	Symbol	* p		4061776						
ANR	4062695	Symbol	strdup		4061776						
ANR	4062696	Symbol	r_syscall_setup		4061776						
ANR	4062697	Symbol	R_SYS_OS		4061776						
ANR	4062698	Symbol	user		4061776						
ANR	4062699	Symbol	core -> dbg		4061776						
ANR	4062700	Function	cb_dbgbpsize	631:0:17455:17630							
ANR	4062701	FunctionDef	"cb_dbgbpsize (void * user , void * data)"		4062700	0					
ANR	4062702	CompoundStatement		631:49:17504:17630	4062700	0					
ANR	4062703	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	632:1:17507:17535	4062700	0	True				
ANR	4062704	IdentifierDecl	* core = ( RCore * ) user		4062700	0					
ANR	4062705	IdentifierDeclType	RCore *		4062700	0					
ANR	4062706	Identifier	core		4062700	1					
ANR	4062707	AssignmentExpression	* core = ( RCore * ) user		4062700	2		=			
ANR	4062708	Identifier	core		4062700	0					
ANR	4062709	CastExpression	( RCore * ) user		4062700	1					
ANR	4062710	CastTarget	RCore *		4062700	0					
ANR	4062711	Identifier	user		4062700	1					
ANR	4062712	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	633:1:17538:17578	4062700	1	True				
ANR	4062713	IdentifierDecl	* node = ( RConfigNode * ) data		4062700	0					
ANR	4062714	IdentifierDeclType	RConfigNode *		4062700	0					
ANR	4062715	Identifier	node		4062700	1					
ANR	4062716	AssignmentExpression	* node = ( RConfigNode * ) data		4062700	2		=			
ANR	4062717	Identifier	node		4062700	0					
ANR	4062718	CastExpression	( RConfigNode * ) data		4062700	1					
ANR	4062719	CastTarget	RConfigNode *		4062700	0					
ANR	4062720	Identifier	data		4062700	1					
ANR	4062721	ExpressionStatement	core -> dbg -> bpsize = node -> i_value	634:1:17581:17614	4062700	2	True				
ANR	4062722	AssignmentExpression	core -> dbg -> bpsize = node -> i_value		4062700	0		=			
ANR	4062723	PtrMemberAccess	core -> dbg -> bpsize		4062700	0					
ANR	4062724	PtrMemberAccess	core -> dbg		4062700	0					
ANR	4062725	Identifier	core		4062700	0					
ANR	4062726	Identifier	dbg		4062700	1					
ANR	4062727	Identifier	bpsize		4062700	1					
ANR	4062728	PtrMemberAccess	node -> i_value		4062700	1					
ANR	4062729	Identifier	node		4062700	0					
ANR	4062730	Identifier	i_value		4062700	1					
ANR	4062731	ReturnStatement	return true ;	635:1:17617:17628	4062700	3	True				
ANR	4062732	Identifier	true		4062700	0					
ANR	4062733	ReturnType	static bool		4062700	1					
ANR	4062734	Identifier	cb_dbgbpsize		4062700	2					
ANR	4062735	ParameterList	"void * user , void * data"		4062700	3					
ANR	4062736	Parameter	void * user	631:25:17480:17489	4062700	0	True				
ANR	4062737	ParameterType	void *		4062700	0					
ANR	4062738	Identifier	user		4062700	1					
ANR	4062739	Parameter	void * data	631:37:17492:17501	4062700	1	True				
ANR	4062740	ParameterType	void *		4062700	0					
ANR	4062741	Identifier	data		4062700	1					
ANR	4062742	CFGEntryNode	ENTRY		4062700		True				
ANR	4062743	CFGExitNode	EXIT		4062700		True				
ANR	4062744	Symbol	core		4062700						
ANR	4062745	Symbol	node		4062700						
ANR	4062746	Symbol	data		4062700						
ANR	4062747	Symbol	* core		4062700						
ANR	4062748	Symbol	true		4062700						
ANR	4062749	Symbol	* node		4062700						
ANR	4062750	Symbol	core -> dbg -> bpsize		4062700						
ANR	4062751	Symbol	user		4062700						
ANR	4062752	Symbol	* core -> dbg		4062700						
ANR	4062753	Symbol	* * core		4062700						
ANR	4062754	Symbol	core -> dbg		4062700						
ANR	4062755	Symbol	node -> i_value		4062700						
ANR	4062756	Function	cb_dbgbtdepth	638:0:17633:17810							
ANR	4062757	FunctionDef	"cb_dbgbtdepth (void * user , void * data)"		4062756	0					
ANR	4062758	CompoundStatement		638:50:17683:17810	4062756	0					
ANR	4062759	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	639:1:17686:17714	4062756	0	True				
ANR	4062760	IdentifierDecl	* core = ( RCore * ) user		4062756	0					
ANR	4062761	IdentifierDeclType	RCore *		4062756	0					
ANR	4062762	Identifier	core		4062756	1					
ANR	4062763	AssignmentExpression	* core = ( RCore * ) user		4062756	2		=			
ANR	4062764	Identifier	core		4062756	0					
ANR	4062765	CastExpression	( RCore * ) user		4062756	1					
ANR	4062766	CastTarget	RCore *		4062756	0					
ANR	4062767	Identifier	user		4062756	1					
ANR	4062768	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	640:1:17717:17757	4062756	1	True				
ANR	4062769	IdentifierDecl	* node = ( RConfigNode * ) data		4062756	0					
ANR	4062770	IdentifierDeclType	RConfigNode *		4062756	0					
ANR	4062771	Identifier	node		4062756	1					
ANR	4062772	AssignmentExpression	* node = ( RConfigNode * ) data		4062756	2		=			
ANR	4062773	Identifier	node		4062756	0					
ANR	4062774	CastExpression	( RConfigNode * ) data		4062756	1					
ANR	4062775	CastTarget	RConfigNode *		4062756	0					
ANR	4062776	Identifier	data		4062756	1					
ANR	4062777	ExpressionStatement	core -> dbg -> btdepth = node -> i_value	641:1:17760:17794	4062756	2	True				
ANR	4062778	AssignmentExpression	core -> dbg -> btdepth = node -> i_value		4062756	0		=			
ANR	4062779	PtrMemberAccess	core -> dbg -> btdepth		4062756	0					
ANR	4062780	PtrMemberAccess	core -> dbg		4062756	0					
ANR	4062781	Identifier	core		4062756	0					
ANR	4062782	Identifier	dbg		4062756	1					
ANR	4062783	Identifier	btdepth		4062756	1					
ANR	4062784	PtrMemberAccess	node -> i_value		4062756	1					
ANR	4062785	Identifier	node		4062756	0					
ANR	4062786	Identifier	i_value		4062756	1					
ANR	4062787	ReturnStatement	return true ;	642:1:17797:17808	4062756	3	True				
ANR	4062788	Identifier	true		4062756	0					
ANR	4062789	ReturnType	static bool		4062756	1					
ANR	4062790	Identifier	cb_dbgbtdepth		4062756	2					
ANR	4062791	ParameterList	"void * user , void * data"		4062756	3					
ANR	4062792	Parameter	void * user	638:26:17659:17668	4062756	0	True				
ANR	4062793	ParameterType	void *		4062756	0					
ANR	4062794	Identifier	user		4062756	1					
ANR	4062795	Parameter	void * data	638:38:17671:17680	4062756	1	True				
ANR	4062796	ParameterType	void *		4062756	0					
ANR	4062797	Identifier	data		4062756	1					
ANR	4062798	CFGEntryNode	ENTRY		4062756		True				
ANR	4062799	CFGExitNode	EXIT		4062756		True				
ANR	4062800	Symbol	core		4062756						
ANR	4062801	Symbol	node		4062756						
ANR	4062802	Symbol	data		4062756						
ANR	4062803	Symbol	* core		4062756						
ANR	4062804	Symbol	core -> dbg -> btdepth		4062756						
ANR	4062805	Symbol	true		4062756						
ANR	4062806	Symbol	* node		4062756						
ANR	4062807	Symbol	user		4062756						
ANR	4062808	Symbol	* core -> dbg		4062756						
ANR	4062809	Symbol	* * core		4062756						
ANR	4062810	Symbol	node -> i_value		4062756						
ANR	4062811	Symbol	core -> dbg		4062756						
ANR	4062812	Function	cb_asmbits	645:0:17813:20259							
ANR	4062813	FunctionDef	"cb_asmbits (void * user , void * data)"		4062812	0					
ANR	4062814	CompoundStatement		645:47:17860:20259	4062812	0					
ANR	4062815	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	646:1:17863:17891	4062812	0	True				
ANR	4062816	IdentifierDecl	* core = ( RCore * ) user		4062812	0					
ANR	4062817	IdentifierDeclType	RCore *		4062812	0					
ANR	4062818	Identifier	core		4062812	1					
ANR	4062819	AssignmentExpression	* core = ( RCore * ) user		4062812	2		=			
ANR	4062820	Identifier	core		4062812	0					
ANR	4062821	CastExpression	( RCore * ) user		4062812	1					
ANR	4062822	CastTarget	RCore *		4062812	0					
ANR	4062823	Identifier	user		4062812	1					
ANR	4062824	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	647:1:17894:17934	4062812	1	True				
ANR	4062825	IdentifierDecl	* node = ( RConfigNode * ) data		4062812	0					
ANR	4062826	IdentifierDeclType	RConfigNode *		4062812	0					
ANR	4062827	Identifier	node		4062812	1					
ANR	4062828	AssignmentExpression	* node = ( RConfigNode * ) data		4062812	2		=			
ANR	4062829	Identifier	node		4062812	0					
ANR	4062830	CastExpression	( RConfigNode * ) data		4062812	1					
ANR	4062831	CastTarget	RConfigNode *		4062812	0					
ANR	4062832	Identifier	data		4062812	1					
ANR	4062833	IdentifierDeclStatement	int ret = 0 ;	648:1:17937:17948	4062812	2	True				
ANR	4062834	IdentifierDecl	ret = 0		4062812	0					
ANR	4062835	IdentifierDeclType	int		4062812	0					
ANR	4062836	Identifier	ret		4062812	1					
ANR	4062837	AssignmentExpression	ret = 0		4062812	2		=			
ANR	4062838	Identifier	ret		4062812	0					
ANR	4062839	PrimaryExpression	0		4062812	1					
ANR	4062840	IfStatement	if ( ! core )		4062812	3					
ANR	4062841	Condition	! core	649:5:17955:17959	4062812	0	True				
ANR	4062842	UnaryOperationExpression	! core		4062812	0					
ANR	4062843	UnaryOperator	!		4062812	0					
ANR	4062844	Identifier	core		4062812	1					
ANR	4062845	CompoundStatement		5:12:101:101	4062812	1					
ANR	4062846	ExpressionStatement	"eprintf ( ""user can't be NULL\\n"" )"	650:2:17966:17998	4062812	0	True				
ANR	4062847	CallExpression	"eprintf ( ""user can't be NULL\\n"" )"		4062812	0					
ANR	4062848	Callee	eprintf		4062812	0					
ANR	4062849	Identifier	eprintf		4062812	0					
ANR	4062850	ArgumentList	"""user can't be NULL\\n"""		4062812	1					
ANR	4062851	Argument	"""user can't be NULL\\n"""		4062812	0					
ANR	4062852	PrimaryExpression	"""user can't be NULL\\n"""		4062812	0					
ANR	4062853	ReturnStatement	return false ;	651:2:18002:18014	4062812	1	True				
ANR	4062854	Identifier	false		4062812	0					
ANR	4062855	IdentifierDeclStatement	int bits = node -> i_value ;	654:1:18021:18045	4062812	4	True				
ANR	4062856	IdentifierDecl	bits = node -> i_value		4062812	0					
ANR	4062857	IdentifierDeclType	int		4062812	0					
ANR	4062858	Identifier	bits		4062812	1					
ANR	4062859	AssignmentExpression	bits = node -> i_value		4062812	2		=			
ANR	4062860	Identifier	bits		4062812	0					
ANR	4062861	PtrMemberAccess	node -> i_value		4062812	1					
ANR	4062862	Identifier	node		4062812	0					
ANR	4062863	Identifier	i_value		4062812	1					
ANR	4062864	IfStatement	if ( bits == core -> assembler -> bits && bits == core -> anal -> bits && bits == core -> dbg -> bits )		4062812	5					
ANR	4062865	Condition	bits == core -> assembler -> bits && bits == core -> anal -> bits && bits == core -> dbg -> bits	657:5:18146:18229	4062812	0	True				
ANR	4062866	AndExpression	bits == core -> assembler -> bits && bits == core -> anal -> bits && bits == core -> dbg -> bits		4062812	0		&&			
ANR	4062867	EqualityExpression	bits == core -> assembler -> bits		4062812	0		==			
ANR	4062868	Identifier	bits		4062812	0					
ANR	4062869	PtrMemberAccess	core -> assembler -> bits		4062812	1					
ANR	4062870	PtrMemberAccess	core -> assembler		4062812	0					
ANR	4062871	Identifier	core		4062812	0					
ANR	4062872	Identifier	assembler		4062812	1					
ANR	4062873	Identifier	bits		4062812	1					
ANR	4062874	AndExpression	bits == core -> anal -> bits && bits == core -> dbg -> bits		4062812	1		&&			
ANR	4062875	EqualityExpression	bits == core -> anal -> bits		4062812	0		==			
ANR	4062876	Identifier	bits		4062812	0					
ANR	4062877	PtrMemberAccess	core -> anal -> bits		4062812	1					
ANR	4062878	PtrMemberAccess	core -> anal		4062812	0					
ANR	4062879	Identifier	core		4062812	0					
ANR	4062880	Identifier	anal		4062812	1					
ANR	4062881	Identifier	bits		4062812	1					
ANR	4062882	EqualityExpression	bits == core -> dbg -> bits		4062812	1		==			
ANR	4062883	Identifier	bits		4062812	0					
ANR	4062884	PtrMemberAccess	core -> dbg -> bits		4062812	1					
ANR	4062885	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4062886	Identifier	core		4062812	0					
ANR	4062887	Identifier	dbg		4062812	1					
ANR	4062888	Identifier	bits		4062812	1					
ANR	4062889	CompoundStatement		13:91:371:371	4062812	1					
ANR	4062890	ReturnStatement	return true ;	659:2:18260:18271	4062812	0	True				
ANR	4062891	Identifier	true		4062812	0					
ANR	4062892	IfStatement	if ( bits > 0 )		4062812	6					
ANR	4062893	Condition	bits > 0	662:5:18288:18295	4062812	0	True				
ANR	4062894	RelationalExpression	bits > 0		4062812	0		>			
ANR	4062895	Identifier	bits		4062812	0					
ANR	4062896	PrimaryExpression	0		4062812	1					
ANR	4062897	CompoundStatement		18:15:437:437	4062812	1					
ANR	4062898	ExpressionStatement	"ret = r_asm_set_bits ( core -> assembler , bits )"	663:2:18302:18346	4062812	0	True				
ANR	4062899	AssignmentExpression	"ret = r_asm_set_bits ( core -> assembler , bits )"		4062812	0		=			
ANR	4062900	Identifier	ret		4062812	0					
ANR	4062901	CallExpression	"r_asm_set_bits ( core -> assembler , bits )"		4062812	1					
ANR	4062902	Callee	r_asm_set_bits		4062812	0					
ANR	4062903	Identifier	r_asm_set_bits		4062812	0					
ANR	4062904	ArgumentList	core -> assembler		4062812	1					
ANR	4062905	Argument	core -> assembler		4062812	0					
ANR	4062906	PtrMemberAccess	core -> assembler		4062812	0					
ANR	4062907	Identifier	core		4062812	0					
ANR	4062908	Identifier	assembler		4062812	1					
ANR	4062909	Argument	bits		4062812	1					
ANR	4062910	Identifier	bits		4062812	0					
ANR	4062911	IfStatement	if ( ! ret )		4062812	1					
ANR	4062912	Condition	! ret	664:6:18354:18357	4062812	0	True				
ANR	4062913	UnaryOperationExpression	! ret		4062812	0					
ANR	4062914	UnaryOperator	!		4062812	0					
ANR	4062915	Identifier	ret		4062812	1					
ANR	4062916	CompoundStatement		21:3:504:540	4062812	1					
ANR	4062917	IdentifierDeclStatement	RAsmPlugin * h = core -> assembler -> cur ;	665:3:18365:18401	4062812	0	True				
ANR	4062918	IdentifierDecl	* h = core -> assembler -> cur		4062812	0					
ANR	4062919	IdentifierDeclType	RAsmPlugin *		4062812	0					
ANR	4062920	Identifier	h		4062812	1					
ANR	4062921	AssignmentExpression	* h = core -> assembler -> cur		4062812	2		=			
ANR	4062922	Identifier	h		4062812	0					
ANR	4062923	PtrMemberAccess	core -> assembler -> cur		4062812	1					
ANR	4062924	PtrMemberAccess	core -> assembler		4062812	0					
ANR	4062925	Identifier	core		4062812	0					
ANR	4062926	Identifier	assembler		4062812	1					
ANR	4062927	Identifier	cur		4062812	1					
ANR	4062928	IfStatement	if ( ! h )		4062812	1					
ANR	4062929	Condition	! h	666:7:18410:18411	4062812	0	True				
ANR	4062930	UnaryOperationExpression	! h		4062812	0					
ANR	4062931	UnaryOperator	!		4062812	0					
ANR	4062932	Identifier	h		4062812	1					
ANR	4062933	CompoundStatement		22:11:553:553	4062812	1					
ANR	4062934	ExpressionStatement	"eprintf ( ""e asm.bits: Cannot set value, no plugins defined yet\\n"" )"	667:4:18420:18486	4062812	0	True				
ANR	4062935	CallExpression	"eprintf ( ""e asm.bits: Cannot set value, no plugins defined yet\\n"" )"		4062812	0					
ANR	4062936	Callee	eprintf		4062812	0					
ANR	4062937	Identifier	eprintf		4062812	0					
ANR	4062938	ArgumentList	"""e asm.bits: Cannot set value, no plugins defined yet\\n"""		4062812	1					
ANR	4062939	Argument	"""e asm.bits: Cannot set value, no plugins defined yet\\n"""		4062812	0					
ANR	4062940	PrimaryExpression	"""e asm.bits: Cannot set value, no plugins defined yet\\n"""		4062812	0					
ANR	4062941	ExpressionStatement	ret = true	668:4:18492:18502	4062812	1	True				
ANR	4062942	AssignmentExpression	ret = true		4062812	0		=			
ANR	4062943	Identifier	ret		4062812	0					
ANR	4062944	Identifier	true		4062812	1					
ANR	4062945	IfStatement	"if ( ! r_anal_set_bits ( core -> anal , bits ) )"		4062812	2					
ANR	4062946	Condition	"! r_anal_set_bits ( core -> anal , bits )"	672:6:18591:18625	4062812	0	True				
ANR	4062947	UnaryOperationExpression	"! r_anal_set_bits ( core -> anal , bits )"		4062812	0					
ANR	4062948	UnaryOperator	!		4062812	0					
ANR	4062949	CallExpression	"r_anal_set_bits ( core -> anal , bits )"		4062812	1					
ANR	4062950	Callee	r_anal_set_bits		4062812	0					
ANR	4062951	Identifier	r_anal_set_bits		4062812	0					
ANR	4062952	ArgumentList	core -> anal		4062812	1					
ANR	4062953	Argument	core -> anal		4062812	0					
ANR	4062954	PtrMemberAccess	core -> anal		4062812	0					
ANR	4062955	Identifier	core		4062812	0					
ANR	4062956	Identifier	anal		4062812	1					
ANR	4062957	Argument	bits		4062812	1					
ANR	4062958	Identifier	bits		4062812	0					
ANR	4062959	CompoundStatement		28:43:767:767	4062812	1					
ANR	4062960	ExpressionStatement	"eprintf ( ""asm.arch: Cannot setup '%d' bits analysis engine\\n"" , bits )"	673:3:18633:18701	4062812	0	True				
ANR	4062961	CallExpression	"eprintf ( ""asm.arch: Cannot setup '%d' bits analysis engine\\n"" , bits )"		4062812	0					
ANR	4062962	Callee	eprintf		4062812	0					
ANR	4062963	Identifier	eprintf		4062812	0					
ANR	4062964	ArgumentList	"""asm.arch: Cannot setup '%d' bits analysis engine\\n"""		4062812	1					
ANR	4062965	Argument	"""asm.arch: Cannot setup '%d' bits analysis engine\\n"""		4062812	0					
ANR	4062966	PrimaryExpression	"""asm.arch: Cannot setup '%d' bits analysis engine\\n"""		4062812	0					
ANR	4062967	Argument	bits		4062812	1					
ANR	4062968	Identifier	bits		4062812	0					
ANR	4062969	ExpressionStatement	core -> print -> bits = bits	675:2:18709:18733	4062812	3	True				
ANR	4062970	AssignmentExpression	core -> print -> bits = bits		4062812	0		=			
ANR	4062971	PtrMemberAccess	core -> print -> bits		4062812	0					
ANR	4062972	PtrMemberAccess	core -> print		4062812	0					
ANR	4062973	Identifier	core		4062812	0					
ANR	4062974	Identifier	print		4062812	1					
ANR	4062975	Identifier	bits		4062812	1					
ANR	4062976	Identifier	bits		4062812	1					
ANR	4062977	IfStatement	if ( core -> dbg && core -> anal && core -> anal -> cur )		4062812	7					
ANR	4062978	Condition	core -> dbg && core -> anal && core -> anal -> cur	677:5:18743:18784	4062812	0	True				
ANR	4062979	AndExpression	core -> dbg && core -> anal && core -> anal -> cur		4062812	0		&&			
ANR	4062980	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4062981	Identifier	core		4062812	0					
ANR	4062982	Identifier	dbg		4062812	1					
ANR	4062983	AndExpression	core -> anal && core -> anal -> cur		4062812	1		&&			
ANR	4062984	PtrMemberAccess	core -> anal		4062812	0					
ANR	4062985	Identifier	core		4062812	0					
ANR	4062986	Identifier	anal		4062812	1					
ANR	4062987	PtrMemberAccess	core -> anal -> cur		4062812	1					
ANR	4062988	PtrMemberAccess	core -> anal		4062812	0					
ANR	4062989	Identifier	core		4062812	0					
ANR	4062990	Identifier	anal		4062812	1					
ANR	4062991	Identifier	cur		4062812	1					
ANR	4062992	CompoundStatement		35:2:991:1056	4062812	1					
ANR	4062993	ExpressionStatement	"r_debug_set_arch ( core -> dbg , core -> anal -> cur -> arch , bits )"	678:2:18791:18848	4062812	0	True				
ANR	4062994	CallExpression	"r_debug_set_arch ( core -> dbg , core -> anal -> cur -> arch , bits )"		4062812	0					
ANR	4062995	Callee	r_debug_set_arch		4062812	0					
ANR	4062996	Identifier	r_debug_set_arch		4062812	0					
ANR	4062997	ArgumentList	core -> dbg		4062812	1					
ANR	4062998	Argument	core -> dbg		4062812	0					
ANR	4062999	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4063000	Identifier	core		4062812	0					
ANR	4063001	Identifier	dbg		4062812	1					
ANR	4063002	Argument	core -> anal -> cur -> arch		4062812	1					
ANR	4063003	PtrMemberAccess	core -> anal -> cur -> arch		4062812	0					
ANR	4063004	PtrMemberAccess	core -> anal -> cur		4062812	0					
ANR	4063005	PtrMemberAccess	core -> anal		4062812	0					
ANR	4063006	Identifier	core		4062812	0					
ANR	4063007	Identifier	anal		4062812	1					
ANR	4063008	Identifier	cur		4062812	1					
ANR	4063009	Identifier	arch		4062812	1					
ANR	4063010	Argument	bits		4062812	2					
ANR	4063011	Identifier	bits		4062812	0					
ANR	4063012	IdentifierDeclStatement	"bool load_from_debug = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	679:2:18852:18917	4062812	1	True				
ANR	4063013	IdentifierDecl	"load_from_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		4062812	0					
ANR	4063014	IdentifierDeclType	bool		4062812	0					
ANR	4063015	Identifier	load_from_debug		4062812	1					
ANR	4063016	AssignmentExpression	"load_from_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		4062812	2		=			
ANR	4063017	Identifier	load_from_debug		4062812	0					
ANR	4063018	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		4062812	1					
ANR	4063019	Callee	r_config_get_i		4062812	0					
ANR	4063020	Identifier	r_config_get_i		4062812	0					
ANR	4063021	ArgumentList	core -> config		4062812	1					
ANR	4063022	Argument	core -> config		4062812	0					
ANR	4063023	PtrMemberAccess	core -> config		4062812	0					
ANR	4063024	Identifier	core		4062812	0					
ANR	4063025	Identifier	config		4062812	1					
ANR	4063026	Argument	"""cfg.debug"""		4062812	1					
ANR	4063027	PrimaryExpression	"""cfg.debug"""		4062812	0					
ANR	4063028	IfStatement	if ( load_from_debug )		4062812	2					
ANR	4063029	Condition	load_from_debug	680:6:18925:18939	4062812	0	True				
ANR	4063030	Identifier	load_from_debug		4062812	0					
ANR	4063031	CompoundStatement		36:23:1081:1081	4062812	1					
ANR	4063032	IfStatement	if ( core -> dbg -> h && core -> dbg -> h -> reg_profile )		4062812	0					
ANR	4063033	Condition	core -> dbg -> h && core -> dbg -> h -> reg_profile	681:7:18951:18991	4062812	0	True				
ANR	4063034	AndExpression	core -> dbg -> h && core -> dbg -> h -> reg_profile		4062812	0		&&			
ANR	4063035	PtrMemberAccess	core -> dbg -> h		4062812	0					
ANR	4063036	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4063037	Identifier	core		4062812	0					
ANR	4063038	Identifier	dbg		4062812	1					
ANR	4063039	Identifier	h		4062812	1					
ANR	4063040	PtrMemberAccess	core -> dbg -> h -> reg_profile		4062812	1					
ANR	4063041	PtrMemberAccess	core -> dbg -> h		4062812	0					
ANR	4063042	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4063043	Identifier	core		4062812	0					
ANR	4063044	Identifier	dbg		4062812	1					
ANR	4063045	Identifier	h		4062812	1					
ANR	4063046	Identifier	reg_profile		4062812	1					
ANR	4063047	CompoundStatement		46:4:1328:1376	4062812	1					
ANR	4063048	ExpressionStatement	core -> dbg -> bits = R_SYS_BITS_32	685:4:19095:19126	4062812	0	True				
ANR	4063049	AssignmentExpression	core -> dbg -> bits = R_SYS_BITS_32		4062812	0		=			
ANR	4063050	PtrMemberAccess	core -> dbg -> bits		4062812	0					
ANR	4063051	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4063052	Identifier	core		4062812	0					
ANR	4063053	Identifier	dbg		4062812	1					
ANR	4063054	Identifier	bits		4062812	1					
ANR	4063055	Identifier	R_SYS_BITS_32		4062812	1					
ANR	4063056	IdentifierDeclStatement	char * rp = core -> dbg -> h -> reg_profile ( core -> dbg ) ;	690:4:19189:19237	4062812	1	True				
ANR	4063057	IdentifierDecl	* rp = core -> dbg -> h -> reg_profile ( core -> dbg )		4062812	0					
ANR	4063058	IdentifierDeclType	char *		4062812	0					
ANR	4063059	Identifier	rp		4062812	1					
ANR	4063060	AssignmentExpression	* rp = core -> dbg -> h -> reg_profile ( core -> dbg )		4062812	2		=			
ANR	4063061	Identifier	rp		4062812	0					
ANR	4063062	CallExpression	core -> dbg -> h -> reg_profile ( core -> dbg )		4062812	1					
ANR	4063063	Callee	core -> dbg -> h -> reg_profile		4062812	0					
ANR	4063064	PtrMemberAccess	core -> dbg -> h -> reg_profile		4062812	0					
ANR	4063065	PtrMemberAccess	core -> dbg -> h		4062812	0					
ANR	4063066	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4063067	Identifier	core		4062812	0					
ANR	4063068	Identifier	dbg		4062812	1					
ANR	4063069	Identifier	h		4062812	1					
ANR	4063070	Identifier	reg_profile		4062812	1					
ANR	4063071	ArgumentList	core -> dbg		4062812	1					
ANR	4063072	Argument	core -> dbg		4062812	0					
ANR	4063073	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4063074	Identifier	core		4062812	0					
ANR	4063075	Identifier	dbg		4062812	1					
ANR	4063076	ExpressionStatement	"r_reg_set_profile_string ( core -> dbg -> reg , rp )"	691:4:19243:19288	4062812	2	True				
ANR	4063077	CallExpression	"r_reg_set_profile_string ( core -> dbg -> reg , rp )"		4062812	0					
ANR	4063078	Callee	r_reg_set_profile_string		4062812	0					
ANR	4063079	Identifier	r_reg_set_profile_string		4062812	0					
ANR	4063080	ArgumentList	core -> dbg -> reg		4062812	1					
ANR	4063081	Argument	core -> dbg -> reg		4062812	0					
ANR	4063082	PtrMemberAccess	core -> dbg -> reg		4062812	0					
ANR	4063083	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4063084	Identifier	core		4062812	0					
ANR	4063085	Identifier	dbg		4062812	1					
ANR	4063086	Identifier	reg		4062812	1					
ANR	4063087	Argument	rp		4062812	1					
ANR	4063088	Identifier	rp		4062812	0					
ANR	4063089	ExpressionStatement	"r_reg_set_profile_string ( core -> anal -> reg , rp )"	692:4:19294:19340	4062812	3	True				
ANR	4063090	CallExpression	"r_reg_set_profile_string ( core -> anal -> reg , rp )"		4062812	0					
ANR	4063091	Callee	r_reg_set_profile_string		4062812	0					
ANR	4063092	Identifier	r_reg_set_profile_string		4062812	0					
ANR	4063093	ArgumentList	core -> anal -> reg		4062812	1					
ANR	4063094	Argument	core -> anal -> reg		4062812	0					
ANR	4063095	PtrMemberAccess	core -> anal -> reg		4062812	0					
ANR	4063096	PtrMemberAccess	core -> anal		4062812	0					
ANR	4063097	Identifier	core		4062812	0					
ANR	4063098	Identifier	anal		4062812	1					
ANR	4063099	Identifier	reg		4062812	1					
ANR	4063100	Argument	rp		4062812	1					
ANR	4063101	Identifier	rp		4062812	0					
ANR	4063102	ExpressionStatement	free ( rp )	693:4:19346:19355	4062812	4	True				
ANR	4063103	CallExpression	free ( rp )		4062812	0					
ANR	4063104	Callee	free		4062812	0					
ANR	4063105	Identifier	free		4062812	0					
ANR	4063106	ArgumentList	rp		4062812	1					
ANR	4063107	Argument	rp		4062812	0					
ANR	4063108	Identifier	rp		4062812	0					
ANR	4063109	ElseStatement	else		4062812	0					
ANR	4063110	CompoundStatement		51:9:1510:1510	4062812	0					
ANR	4063111	ExpressionStatement	( void ) r_anal_set_reg_profile ( core -> anal )	696:3:19376:19417	4062812	0	True				
ANR	4063112	CastExpression	( void ) r_anal_set_reg_profile ( core -> anal )		4062812	0					
ANR	4063113	CastTarget	void		4062812	0					
ANR	4063114	CallExpression	r_anal_set_reg_profile ( core -> anal )		4062812	1					
ANR	4063115	Callee	r_anal_set_reg_profile		4062812	0					
ANR	4063116	Identifier	r_anal_set_reg_profile		4062812	0					
ANR	4063117	ArgumentList	core -> anal		4062812	1					
ANR	4063118	Argument	core -> anal		4062812	0					
ANR	4063119	PtrMemberAccess	core -> anal		4062812	0					
ANR	4063120	Identifier	core		4062812	0					
ANR	4063121	Identifier	anal		4062812	1					
ANR	4063122	ExpressionStatement	r_core_anal_cc_init ( core )	699:1:19427:19453	4062812	8	True				
ANR	4063123	CallExpression	r_core_anal_cc_init ( core )		4062812	0					
ANR	4063124	Callee	r_core_anal_cc_init		4062812	0					
ANR	4063125	Identifier	r_core_anal_cc_init		4062812	0					
ANR	4063126	ArgumentList	core		4062812	1					
ANR	4063127	Argument	core		4062812	0					
ANR	4063128	Identifier	core		4062812	0					
ANR	4063129	IdentifierDeclStatement	"const char * asmos = r_config_get ( core -> config , ""asm.os"" ) ;"	700:1:19456:19513	4062812	9	True				
ANR	4063130	IdentifierDecl	"* asmos = r_config_get ( core -> config , ""asm.os"" )"		4062812	0					
ANR	4063131	IdentifierDeclType	const char *		4062812	0					
ANR	4063132	Identifier	asmos		4062812	1					
ANR	4063133	AssignmentExpression	"* asmos = r_config_get ( core -> config , ""asm.os"" )"		4062812	2		=			
ANR	4063134	Identifier	asmos		4062812	0					
ANR	4063135	CallExpression	"r_config_get ( core -> config , ""asm.os"" )"		4062812	1					
ANR	4063136	Callee	r_config_get		4062812	0					
ANR	4063137	Identifier	r_config_get		4062812	0					
ANR	4063138	ArgumentList	core -> config		4062812	1					
ANR	4063139	Argument	core -> config		4062812	0					
ANR	4063140	PtrMemberAccess	core -> config		4062812	0					
ANR	4063141	Identifier	core		4062812	0					
ANR	4063142	Identifier	config		4062812	1					
ANR	4063143	Argument	"""asm.os"""		4062812	1					
ANR	4063144	PrimaryExpression	"""asm.os"""		4062812	0					
ANR	4063145	IdentifierDeclStatement	"const char * asmarch = r_config_get ( core -> config , ""asm.arch"" ) ;"	701:1:19516:19577	4062812	10	True				
ANR	4063146	IdentifierDecl	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		4062812	0					
ANR	4063147	IdentifierDeclType	const char *		4062812	0					
ANR	4063148	Identifier	asmarch		4062812	1					
ANR	4063149	AssignmentExpression	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		4062812	2		=			
ANR	4063150	Identifier	asmarch		4062812	0					
ANR	4063151	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		4062812	1					
ANR	4063152	Callee	r_config_get		4062812	0					
ANR	4063153	Identifier	r_config_get		4062812	0					
ANR	4063154	ArgumentList	core -> config		4062812	1					
ANR	4063155	Argument	core -> config		4062812	0					
ANR	4063156	PtrMemberAccess	core -> config		4062812	0					
ANR	4063157	Identifier	core		4062812	0					
ANR	4063158	Identifier	config		4062812	1					
ANR	4063159	Argument	"""asm.arch"""		4062812	1					
ANR	4063160	PrimaryExpression	"""asm.arch"""		4062812	0					
ANR	4063161	IdentifierDeclStatement	"const char * asmcpu = r_config_get ( core -> config , ""asm.cpu"" ) ;"	702:1:19580:19639	4062812	11	True				
ANR	4063162	IdentifierDecl	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		4062812	0					
ANR	4063163	IdentifierDeclType	const char *		4062812	0					
ANR	4063164	Identifier	asmcpu		4062812	1					
ANR	4063165	AssignmentExpression	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		4062812	2		=			
ANR	4063166	Identifier	asmcpu		4062812	0					
ANR	4063167	CallExpression	"r_config_get ( core -> config , ""asm.cpu"" )"		4062812	1					
ANR	4063168	Callee	r_config_get		4062812	0					
ANR	4063169	Identifier	r_config_get		4062812	0					
ANR	4063170	ArgumentList	core -> config		4062812	1					
ANR	4063171	Argument	core -> config		4062812	0					
ANR	4063172	PtrMemberAccess	core -> config		4062812	0					
ANR	4063173	Identifier	core		4062812	0					
ANR	4063174	Identifier	config		4062812	1					
ANR	4063175	Argument	"""asm.cpu"""		4062812	1					
ANR	4063176	PrimaryExpression	"""asm.cpu"""		4062812	0					
ANR	4063177	IfStatement	if ( core -> anal )		4062812	12					
ANR	4063178	Condition	core -> anal	703:5:19646:19655	4062812	0	True				
ANR	4063179	PtrMemberAccess	core -> anal		4062812	0					
ANR	4063180	Identifier	core		4062812	0					
ANR	4063181	Identifier	anal		4062812	1					
ANR	4063182	CompoundStatement		59:17:1797:1797	4062812	1					
ANR	4063183	IfStatement	"if ( ! r_syscall_setup ( core -> anal -> syscall , asmarch , bits , asmcpu , asmos ) )"		4062812	0					
ANR	4063184	Condition	"! r_syscall_setup ( core -> anal -> syscall , asmarch , bits , asmcpu , asmos )"	704:6:19666:19733	4062812	0	True				
ANR	4063185	UnaryOperationExpression	"! r_syscall_setup ( core -> anal -> syscall , asmarch , bits , asmcpu , asmos )"		4062812	0					
ANR	4063186	UnaryOperator	!		4062812	0					
ANR	4063187	CallExpression	"r_syscall_setup ( core -> anal -> syscall , asmarch , bits , asmcpu , asmos )"		4062812	1					
ANR	4063188	Callee	r_syscall_setup		4062812	0					
ANR	4063189	Identifier	r_syscall_setup		4062812	0					
ANR	4063190	ArgumentList	core -> anal -> syscall		4062812	1					
ANR	4063191	Argument	core -> anal -> syscall		4062812	0					
ANR	4063192	PtrMemberAccess	core -> anal -> syscall		4062812	0					
ANR	4063193	PtrMemberAccess	core -> anal		4062812	0					
ANR	4063194	Identifier	core		4062812	0					
ANR	4063195	Identifier	anal		4062812	1					
ANR	4063196	Identifier	syscall		4062812	1					
ANR	4063197	Argument	asmarch		4062812	1					
ANR	4063198	Identifier	asmarch		4062812	0					
ANR	4063199	Argument	bits		4062812	2					
ANR	4063200	Identifier	bits		4062812	0					
ANR	4063201	Argument	asmcpu		4062812	3					
ANR	4063202	Identifier	asmcpu		4062812	0					
ANR	4063203	Argument	asmos		4062812	4					
ANR	4063204	Identifier	asmos		4062812	0					
ANR	4063205	CompoundStatement		60:76:1875:1875	4062812	1					
ANR	4063206	ExpressionStatement	"__setsegoff ( core -> config , asmarch , core -> anal -> bits )"	708:2:19881:19934	4062812	1	True				
ANR	4063207	CallExpression	"__setsegoff ( core -> config , asmarch , core -> anal -> bits )"		4062812	0					
ANR	4063208	Callee	__setsegoff		4062812	0					
ANR	4063209	Identifier	__setsegoff		4062812	0					
ANR	4063210	ArgumentList	core -> config		4062812	1					
ANR	4063211	Argument	core -> config		4062812	0					
ANR	4063212	PtrMemberAccess	core -> config		4062812	0					
ANR	4063213	Identifier	core		4062812	0					
ANR	4063214	Identifier	config		4062812	1					
ANR	4063215	Argument	asmarch		4062812	1					
ANR	4063216	Identifier	asmarch		4062812	0					
ANR	4063217	Argument	core -> anal -> bits		4062812	2					
ANR	4063218	PtrMemberAccess	core -> anal -> bits		4062812	0					
ANR	4063219	PtrMemberAccess	core -> anal		4062812	0					
ANR	4063220	Identifier	core		4062812	0					
ANR	4063221	Identifier	anal		4062812	1					
ANR	4063222	Identifier	bits		4062812	1					
ANR	4063223	IfStatement	if ( core -> dbg )		4062812	2					
ANR	4063224	Condition	core -> dbg	709:6:19942:19950	4062812	0	True				
ANR	4063225	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4063226	Identifier	core		4062812	0					
ANR	4063227	Identifier	dbg		4062812	1					
ANR	4063228	CompoundStatement		65:17:2092:2092	4062812	1					
ANR	4063229	ExpressionStatement	"r_bp_use ( core -> dbg -> bp , asmarch , core -> anal -> bits )"	710:3:19958:20009	4062812	0	True				
ANR	4063230	CallExpression	"r_bp_use ( core -> dbg -> bp , asmarch , core -> anal -> bits )"		4062812	0					
ANR	4063231	Callee	r_bp_use		4062812	0					
ANR	4063232	Identifier	r_bp_use		4062812	0					
ANR	4063233	ArgumentList	core -> dbg -> bp		4062812	1					
ANR	4063234	Argument	core -> dbg -> bp		4062812	0					
ANR	4063235	PtrMemberAccess	core -> dbg -> bp		4062812	0					
ANR	4063236	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4063237	Identifier	core		4062812	0					
ANR	4063238	Identifier	dbg		4062812	1					
ANR	4063239	Identifier	bp		4062812	1					
ANR	4063240	Argument	asmarch		4062812	1					
ANR	4063241	Identifier	asmarch		4062812	0					
ANR	4063242	Argument	core -> anal -> bits		4062812	2					
ANR	4063243	PtrMemberAccess	core -> anal -> bits		4062812	0					
ANR	4063244	PtrMemberAccess	core -> anal		4062812	0					
ANR	4063245	Identifier	core		4062812	0					
ANR	4063246	Identifier	anal		4062812	1					
ANR	4063247	Identifier	bits		4062812	1					
ANR	4063248	ExpressionStatement	"r_config_set_i ( core -> config , ""dbg.bpsize"" , r_bp_size ( core -> dbg -> bp ) )"	711:3:20014:20084	4062812	1	True				
ANR	4063249	CallExpression	"r_config_set_i ( core -> config , ""dbg.bpsize"" , r_bp_size ( core -> dbg -> bp ) )"		4062812	0					
ANR	4063250	Callee	r_config_set_i		4062812	0					
ANR	4063251	Identifier	r_config_set_i		4062812	0					
ANR	4063252	ArgumentList	core -> config		4062812	1					
ANR	4063253	Argument	core -> config		4062812	0					
ANR	4063254	PtrMemberAccess	core -> config		4062812	0					
ANR	4063255	Identifier	core		4062812	0					
ANR	4063256	Identifier	config		4062812	1					
ANR	4063257	Argument	"""dbg.bpsize"""		4062812	1					
ANR	4063258	PrimaryExpression	"""dbg.bpsize"""		4062812	0					
ANR	4063259	Argument	r_bp_size ( core -> dbg -> bp )		4062812	2					
ANR	4063260	CallExpression	r_bp_size ( core -> dbg -> bp )		4062812	0					
ANR	4063261	Callee	r_bp_size		4062812	0					
ANR	4063262	Identifier	r_bp_size		4062812	0					
ANR	4063263	ArgumentList	core -> dbg -> bp		4062812	1					
ANR	4063264	Argument	core -> dbg -> bp		4062812	0					
ANR	4063265	PtrMemberAccess	core -> dbg -> bp		4062812	0					
ANR	4063266	PtrMemberAccess	core -> dbg		4062812	0					
ANR	4063267	Identifier	core		4062812	0					
ANR	4063268	Identifier	dbg		4062812	1					
ANR	4063269	Identifier	bp		4062812	1					
ANR	4063270	CompoundStatement		72:2:2256:2315	4062812	13					
ANR	4063271	IdentifierDeclStatement	"int v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN ) ;"	716:2:20117:20176	4062812	0	True				
ANR	4063272	IdentifierDecl	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		4062812	0					
ANR	4063273	IdentifierDeclType	int		4062812	0					
ANR	4063274	Identifier	v		4062812	1					
ANR	4063275	AssignmentExpression	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		4062812	2		=			
ANR	4063276	Identifier	v		4062812	0					
ANR	4063277	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		4062812	1					
ANR	4063278	Callee	r_anal_archinfo		4062812	0					
ANR	4063279	Identifier	r_anal_archinfo		4062812	0					
ANR	4063280	ArgumentList	core -> anal		4062812	1					
ANR	4063281	Argument	core -> anal		4062812	0					
ANR	4063282	PtrMemberAccess	core -> anal		4062812	0					
ANR	4063283	Identifier	core		4062812	0					
ANR	4063284	Identifier	anal		4062812	1					
ANR	4063285	Argument	R_ANAL_ARCHINFO_ALIGN		4062812	1					
ANR	4063286	Identifier	R_ANAL_ARCHINFO_ALIGN		4062812	0					
ANR	4063287	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.pcalign"" , ( v != - 1 ) ? v : 0 )"	717:2:20180:20241	4062812	1	True				
ANR	4063288	CallExpression	"r_config_set_i ( core -> config , ""asm.pcalign"" , ( v != - 1 ) ? v : 0 )"		4062812	0					
ANR	4063289	Callee	r_config_set_i		4062812	0					
ANR	4063290	Identifier	r_config_set_i		4062812	0					
ANR	4063291	ArgumentList	core -> config		4062812	1					
ANR	4063292	Argument	core -> config		4062812	0					
ANR	4063293	PtrMemberAccess	core -> config		4062812	0					
ANR	4063294	Identifier	core		4062812	0					
ANR	4063295	Identifier	config		4062812	1					
ANR	4063296	Argument	"""asm.pcalign"""		4062812	1					
ANR	4063297	PrimaryExpression	"""asm.pcalign"""		4062812	0					
ANR	4063298	Argument	( v != - 1 ) ? v : 0		4062812	2					
ANR	4063299	ConditionalExpression	( v != - 1 ) ? v : 0		4062812	0					
ANR	4063300	Condition	v != - 1		4062812	0					
ANR	4063301	EqualityExpression	v != - 1		4062812	0		!=			
ANR	4063302	Identifier	v		4062812	0					
ANR	4063303	UnaryOperationExpression	- 1		4062812	1					
ANR	4063304	UnaryOperator	-		4062812	0					
ANR	4063305	PrimaryExpression	1		4062812	1					
ANR	4063306	Identifier	v		4062812	1					
ANR	4063307	PrimaryExpression	0		4062812	2					
ANR	4063308	ReturnStatement	return ret ;	719:1:20247:20257	4062812	14	True				
ANR	4063309	Identifier	ret		4062812	0					
ANR	4063310	ReturnType	static bool		4062812	1					
ANR	4063311	Identifier	cb_asmbits		4062812	2					
ANR	4063312	ParameterList	"void * user , void * data"		4062812	3					
ANR	4063313	Parameter	void * user	645:23:17836:17845	4062812	0	True				
ANR	4063314	ParameterType	void *		4062812	0					
ANR	4063315	Identifier	user		4062812	1					
ANR	4063316	Parameter	void * data	645:35:17848:17857	4062812	1	True				
ANR	4063317	ParameterType	void *		4062812	0					
ANR	4063318	Identifier	data		4062812	1					
ANR	4063319	CFGEntryNode	ENTRY		4062812		True				
ANR	4063320	CFGExitNode	EXIT		4062812		True				
ANR	4063321	Symbol	core -> anal -> reg		4062812						
ANR	4063322	Symbol	data		4062812						
ANR	4063323	Symbol	r_anal_archinfo		4062812						
ANR	4063324	Symbol	core -> dbg -> h -> reg_profile		4062812						
ANR	4063325	Symbol	* core -> dbg -> h		4062812						
ANR	4063326	Symbol	core -> dbg -> bp		4062812						
ANR	4063327	Symbol	* core -> assembler		4062812						
ANR	4063328	Symbol	asmos		4062812						
ANR	4063329	Symbol	* * core -> anal		4062812						
ANR	4063330	Symbol	* node		4062812						
ANR	4063331	Symbol	ret		4062812						
ANR	4063332	Symbol	r_anal_set_bits		4062812						
ANR	4063333	Symbol	load_from_debug		4062812						
ANR	4063334	Symbol	* core -> anal -> cur		4062812						
ANR	4063335	Symbol	bits		4062812						
ANR	4063336	Symbol	core -> dbg -> h		4062812						
ANR	4063337	Symbol	node -> i_value		4062812						
ANR	4063338	Symbol	core		4062812						
ANR	4063339	Symbol	node		4062812						
ANR	4063340	Symbol	* * * core		4062812						
ANR	4063341	Symbol	r_config_get_i		4062812						
ANR	4063342	Symbol	true		4062812						
ANR	4063343	Symbol	core -> print		4062812						
ANR	4063344	Symbol	* core -> dbg		4062812						
ANR	4063345	Symbol	rp		4062812						
ANR	4063346	Symbol	r_bp_size		4062812						
ANR	4063347	Symbol	R_SYS_BITS_32		4062812						
ANR	4063348	Symbol	asmcpu		4062812						
ANR	4063349	Symbol	r_asm_set_bits		4062812						
ANR	4063350	Symbol	core -> assembler -> bits		4062812						
ANR	4063351	Symbol	* core		4062812						
ANR	4063352	Symbol	r_config_get		4062812						
ANR	4063353	Symbol	core -> assembler		4062812						
ANR	4063354	Symbol	core -> anal		4062812						
ANR	4063355	Symbol	core -> anal -> cur -> arch		4062812						
ANR	4063356	Symbol	core -> anal -> cur		4062812						
ANR	4063357	Symbol	core -> dbg -> bits		4062812						
ANR	4063358	Symbol	* * core		4062812						
ANR	4063359	Symbol	core -> config		4062812						
ANR	4063360	Symbol	core -> anal -> bits		4062812						
ANR	4063361	Symbol	false		4062812						
ANR	4063362	Symbol	h		4062812						
ANR	4063363	Symbol	core -> anal -> syscall		4062812						
ANR	4063364	Symbol	core -> print -> bits		4062812						
ANR	4063365	Symbol	R_ANAL_ARCHINFO_ALIGN		4062812						
ANR	4063366	Symbol	* core -> print		4062812						
ANR	4063367	Symbol	* core -> anal		4062812						
ANR	4063368	Symbol	core -> dbg -> reg		4062812						
ANR	4063369	Symbol	asmarch		4062812						
ANR	4063370	Symbol	v		4062812						
ANR	4063371	Symbol	core -> assembler -> cur		4062812						
ANR	4063372	Symbol	r_syscall_setup		4062812						
ANR	4063373	Symbol	user		4062812						
ANR	4063374	Symbol	core -> dbg		4062812						
ANR	4063375	Symbol	* * core -> dbg		4062812						
ANR	4063376	Function	update_asmfeatures_options	722:0:20262:20778							
ANR	4063377	FunctionDef	"update_asmfeatures_options (RCore * core , RConfigNode * node)"		4063376	0					
ANR	4063378	CompoundStatement		722:71:20333:20778	4063376	0					
ANR	4063379	IdentifierDeclStatement	"int i , argc ;"	723:1:20336:20347	4063376	0	True				
ANR	4063380	IdentifierDecl	i		4063376	0					
ANR	4063381	IdentifierDeclType	int		4063376	0					
ANR	4063382	Identifier	i		4063376	1					
ANR	4063383	IdentifierDecl	argc		4063376	1					
ANR	4063384	IdentifierDeclType	int		4063376	0					
ANR	4063385	Identifier	argc		4063376	1					
ANR	4063386	IfStatement	if ( core && core -> assembler && core -> assembler -> cur )		4063376	1					
ANR	4063387	Condition	core && core -> assembler && core -> assembler -> cur	725:5:20355:20401	4063376	0	True				
ANR	4063388	AndExpression	core && core -> assembler && core -> assembler -> cur		4063376	0		&&			
ANR	4063389	Identifier	core		4063376	0					
ANR	4063390	AndExpression	core -> assembler && core -> assembler -> cur		4063376	1		&&			
ANR	4063391	PtrMemberAccess	core -> assembler		4063376	0					
ANR	4063392	Identifier	core		4063376	0					
ANR	4063393	Identifier	assembler		4063376	1					
ANR	4063394	PtrMemberAccess	core -> assembler -> cur		4063376	1					
ANR	4063395	PtrMemberAccess	core -> assembler		4063376	0					
ANR	4063396	Identifier	core		4063376	0					
ANR	4063397	Identifier	assembler		4063376	1					
ANR	4063398	Identifier	cur		4063376	1					
ANR	4063399	CompoundStatement		4:54:70:70	4063376	1					
ANR	4063400	IfStatement	if ( core -> assembler -> cur -> features )		4063376	0					
ANR	4063401	Condition	core -> assembler -> cur -> features	726:6:20412:20441	4063376	0	True				
ANR	4063402	PtrMemberAccess	core -> assembler -> cur -> features		4063376	0					
ANR	4063403	PtrMemberAccess	core -> assembler -> cur		4063376	0					
ANR	4063404	PtrMemberAccess	core -> assembler		4063376	0					
ANR	4063405	Identifier	core		4063376	0					
ANR	4063406	Identifier	assembler		4063376	1					
ANR	4063407	Identifier	cur		4063376	1					
ANR	4063408	Identifier	features		4063376	1					
ANR	4063409	CompoundStatement		6:3:115:171	4063376	1					
ANR	4063410	IdentifierDeclStatement	char * features = strdup ( core -> assembler -> cur -> features ) ;	727:3:20449:20505	4063376	0	True				
ANR	4063411	IdentifierDecl	* features = strdup ( core -> assembler -> cur -> features )		4063376	0					
ANR	4063412	IdentifierDeclType	char *		4063376	0					
ANR	4063413	Identifier	features		4063376	1					
ANR	4063414	AssignmentExpression	* features = strdup ( core -> assembler -> cur -> features )		4063376	2		=			
ANR	4063415	Identifier	features		4063376	0					
ANR	4063416	CallExpression	strdup ( core -> assembler -> cur -> features )		4063376	1					
ANR	4063417	Callee	strdup		4063376	0					
ANR	4063418	Identifier	strdup		4063376	0					
ANR	4063419	ArgumentList	core -> assembler -> cur -> features		4063376	1					
ANR	4063420	Argument	core -> assembler -> cur -> features		4063376	0					
ANR	4063421	PtrMemberAccess	core -> assembler -> cur -> features		4063376	0					
ANR	4063422	PtrMemberAccess	core -> assembler -> cur		4063376	0					
ANR	4063423	PtrMemberAccess	core -> assembler		4063376	0					
ANR	4063424	Identifier	core		4063376	0					
ANR	4063425	Identifier	assembler		4063376	1					
ANR	4063426	Identifier	cur		4063376	1					
ANR	4063427	Identifier	features		4063376	1					
ANR	4063428	ExpressionStatement	"argc = r_str_split ( features , ',' )"	728:3:20510:20544	4063376	1	True				
ANR	4063429	AssignmentExpression	"argc = r_str_split ( features , ',' )"		4063376	0		=			
ANR	4063430	Identifier	argc		4063376	0					
ANR	4063431	CallExpression	"r_str_split ( features , ',' )"		4063376	1					
ANR	4063432	Callee	r_str_split		4063376	0					
ANR	4063433	Identifier	r_str_split		4063376	0					
ANR	4063434	ArgumentList	features		4063376	1					
ANR	4063435	Argument	features		4063376	0					
ANR	4063436	Identifier	features		4063376	0					
ANR	4063437	Argument	"','"		4063376	1					
ANR	4063438	PrimaryExpression	"','"		4063376	0					
ANR	4063439	ForStatement	for ( i = 0 ; i < argc ; i ++ )		4063376	2					
ANR	4063440	ForInit	i = 0 ;	729:8:20554:20559	4063376	0	True				
ANR	4063441	AssignmentExpression	i = 0		4063376	0		=			
ANR	4063442	Identifier	i		4063376	0					
ANR	4063443	PrimaryExpression	0		4063376	1					
ANR	4063444	Condition	i < argc	729:15:20561:20568	4063376	1	True				
ANR	4063445	RelationalExpression	i < argc		4063376	0		<			
ANR	4063446	Identifier	i		4063376	0					
ANR	4063447	Identifier	argc		4063376	1					
ANR	4063448	PostIncDecOperationExpression	i ++	729:25:20571:20573	4063376	2	True				
ANR	4063449	Identifier	i		4063376	0					
ANR	4063450	IncDec	++		4063376	1					
ANR	4063451	CompoundStatement		10:4:280:331	4063376	3					
ANR	4063452	ExpressionStatement	node -> options -> free = free	730:4:20582:20608	4063376	0	True				
ANR	4063453	AssignmentExpression	node -> options -> free = free		4063376	0		=			
ANR	4063454	PtrMemberAccess	node -> options -> free		4063376	0					
ANR	4063455	PtrMemberAccess	node -> options		4063376	0					
ANR	4063456	Identifier	node		4063376	0					
ANR	4063457	Identifier	options		4063376	1					
ANR	4063458	Identifier	free		4063376	1					
ANR	4063459	Identifier	free		4063376	1					
ANR	4063460	IdentifierDeclStatement	"const char * feature = r_str_word_get0 ( features , i ) ;"	731:4:20614:20665	4063376	1	True				
ANR	4063461	IdentifierDecl	"* feature = r_str_word_get0 ( features , i )"		4063376	0					
ANR	4063462	IdentifierDeclType	const char *		4063376	0					
ANR	4063463	Identifier	feature		4063376	1					
ANR	4063464	AssignmentExpression	"* feature = r_str_word_get0 ( features , i )"		4063376	2		=			
ANR	4063465	Identifier	feature		4063376	0					
ANR	4063466	CallExpression	"r_str_word_get0 ( features , i )"		4063376	1					
ANR	4063467	Callee	r_str_word_get0		4063376	0					
ANR	4063468	Identifier	r_str_word_get0		4063376	0					
ANR	4063469	ArgumentList	features		4063376	1					
ANR	4063470	Argument	features		4063376	0					
ANR	4063471	Identifier	features		4063376	0					
ANR	4063472	Argument	i		4063376	1					
ANR	4063473	Identifier	i		4063376	0					
ANR	4063474	IfStatement	if ( feature )		4063376	2					
ANR	4063475	Condition	feature	732:8:20675:20681	4063376	0	True				
ANR	4063476	Identifier	feature		4063376	0					
ANR	4063477	CompoundStatement		11:17:350:350	4063376	1					
ANR	4063478	ExpressionStatement	"r_list_append ( node -> options , strdup ( feature ) )"	733:5:20691:20738	4063376	0	True				
ANR	4063479	CallExpression	"r_list_append ( node -> options , strdup ( feature ) )"		4063376	0					
ANR	4063480	Callee	r_list_append		4063376	0					
ANR	4063481	Identifier	r_list_append		4063376	0					
ANR	4063482	ArgumentList	node -> options		4063376	1					
ANR	4063483	Argument	node -> options		4063376	0					
ANR	4063484	PtrMemberAccess	node -> options		4063376	0					
ANR	4063485	Identifier	node		4063376	0					
ANR	4063486	Identifier	options		4063376	1					
ANR	4063487	Argument	strdup ( feature )		4063376	1					
ANR	4063488	CallExpression	strdup ( feature )		4063376	0					
ANR	4063489	Callee	strdup		4063376	0					
ANR	4063490	Identifier	strdup		4063376	0					
ANR	4063491	ArgumentList	feature		4063376	1					
ANR	4063492	Argument	feature		4063376	0					
ANR	4063493	Identifier	feature		4063376	0					
ANR	4063494	ExpressionStatement	free ( features )	736:3:20754:20769	4063376	3	True				
ANR	4063495	CallExpression	free ( features )		4063376	0					
ANR	4063496	Callee	free		4063376	0					
ANR	4063497	Identifier	free		4063376	0					
ANR	4063498	ArgumentList	features		4063376	1					
ANR	4063499	Argument	features		4063376	0					
ANR	4063500	Identifier	features		4063376	0					
ANR	4063501	ReturnType	static void		4063376	1					
ANR	4063502	Identifier	update_asmfeatures_options		4063376	2					
ANR	4063503	ParameterList	"RCore * core , RConfigNode * node"		4063376	3					
ANR	4063504	Parameter	RCore * core	722:39:20301:20311	4063376	0	True				
ANR	4063505	ParameterType	RCore *		4063376	0					
ANR	4063506	Identifier	core		4063376	1					
ANR	4063507	Parameter	RConfigNode * node	722:52:20314:20330	4063376	1	True				
ANR	4063508	ParameterType	RConfigNode *		4063376	0					
ANR	4063509	Identifier	node		4063376	1					
ANR	4063510	CFGEntryNode	ENTRY		4063376		True				
ANR	4063511	CFGExitNode	EXIT		4063376		True				
ANR	4063512	Symbol	argc		4063376						
ANR	4063513	Symbol	* core -> assembler -> cur		4063376						
ANR	4063514	Symbol	* core		4063376						
ANR	4063515	Symbol	i		4063376						
ANR	4063516	Symbol	core -> assembler		4063376						
ANR	4063517	Symbol	r_str_word_get0		4063376						
ANR	4063518	Symbol	core -> assembler -> cur -> features		4063376						
ANR	4063519	Symbol	* core -> assembler		4063376						
ANR	4063520	Symbol	core		4063376						
ANR	4063521	Symbol	node		4063376						
ANR	4063522	Symbol	* * * core		4063376						
ANR	4063523	Symbol	features		4063376						
ANR	4063524	Symbol	* * node		4063376						
ANR	4063525	Symbol	feature		4063376						
ANR	4063526	Symbol	r_str_split		4063376						
ANR	4063527	Symbol	node -> options		4063376						
ANR	4063528	Symbol	node -> options -> free		4063376						
ANR	4063529	Symbol	* node -> options		4063376						
ANR	4063530	Symbol	* * core -> assembler		4063376						
ANR	4063531	Symbol	core -> assembler -> cur		4063376						
ANR	4063532	Symbol	* node		4063376						
ANR	4063533	Symbol	strdup		4063376						
ANR	4063534	Symbol	free		4063376						
ANR	4063535	Symbol	* * core		4063376						
ANR	4063536	Function	cb_flag_realnames	741:0:20781:20966							
ANR	4063537	FunctionDef	"cb_flag_realnames (void * user , void * data)"		4063536	0					
ANR	4063538	CompoundStatement		741:54:20835:20966	4063536	0					
ANR	4063539	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	742:1:20838:20866	4063536	0	True				
ANR	4063540	IdentifierDecl	* core = ( RCore * ) user		4063536	0					
ANR	4063541	IdentifierDeclType	RCore *		4063536	0					
ANR	4063542	Identifier	core		4063536	1					
ANR	4063543	AssignmentExpression	* core = ( RCore * ) user		4063536	2		=			
ANR	4063544	Identifier	core		4063536	0					
ANR	4063545	CastExpression	( RCore * ) user		4063536	1					
ANR	4063546	CastTarget	RCore *		4063536	0					
ANR	4063547	Identifier	user		4063536	1					
ANR	4063548	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	743:1:20869:20909	4063536	1	True				
ANR	4063549	IdentifierDecl	* node = ( RConfigNode * ) data		4063536	0					
ANR	4063550	IdentifierDeclType	RConfigNode *		4063536	0					
ANR	4063551	Identifier	node		4063536	1					
ANR	4063552	AssignmentExpression	* node = ( RConfigNode * ) data		4063536	2		=			
ANR	4063553	Identifier	node		4063536	0					
ANR	4063554	CastExpression	( RConfigNode * ) data		4063536	1					
ANR	4063555	CastTarget	RConfigNode *		4063536	0					
ANR	4063556	Identifier	data		4063536	1					
ANR	4063557	ExpressionStatement	core -> flags -> realnames = node -> i_value	744:1:20912:20950	4063536	2	True				
ANR	4063558	AssignmentExpression	core -> flags -> realnames = node -> i_value		4063536	0		=			
ANR	4063559	PtrMemberAccess	core -> flags -> realnames		4063536	0					
ANR	4063560	PtrMemberAccess	core -> flags		4063536	0					
ANR	4063561	Identifier	core		4063536	0					
ANR	4063562	Identifier	flags		4063536	1					
ANR	4063563	Identifier	realnames		4063536	1					
ANR	4063564	PtrMemberAccess	node -> i_value		4063536	1					
ANR	4063565	Identifier	node		4063536	0					
ANR	4063566	Identifier	i_value		4063536	1					
ANR	4063567	ReturnStatement	return true ;	745:1:20953:20964	4063536	3	True				
ANR	4063568	Identifier	true		4063536	0					
ANR	4063569	ReturnType	static bool		4063536	1					
ANR	4063570	Identifier	cb_flag_realnames		4063536	2					
ANR	4063571	ParameterList	"void * user , void * data"		4063536	3					
ANR	4063572	Parameter	void * user	741:30:20811:20820	4063536	0	True				
ANR	4063573	ParameterType	void *		4063536	0					
ANR	4063574	Identifier	user		4063536	1					
ANR	4063575	Parameter	void * data	741:42:20823:20832	4063536	1	True				
ANR	4063576	ParameterType	void *		4063536	0					
ANR	4063577	Identifier	data		4063536	1					
ANR	4063578	CFGEntryNode	ENTRY		4063536		True				
ANR	4063579	CFGExitNode	EXIT		4063536		True				
ANR	4063580	Symbol	core		4063536						
ANR	4063581	Symbol	node		4063536						
ANR	4063582	Symbol	core -> flags -> realnames		4063536						
ANR	4063583	Symbol	data		4063536						
ANR	4063584	Symbol	* core		4063536						
ANR	4063585	Symbol	true		4063536						
ANR	4063586	Symbol	core -> flags		4063536						
ANR	4063587	Symbol	* node		4063536						
ANR	4063588	Symbol	user		4063536						
ANR	4063589	Symbol	* * core		4063536						
ANR	4063590	Symbol	* core -> flags		4063536						
ANR	4063591	Symbol	node -> i_value		4063536						
ANR	4063592	Function	cb_asmfeatures	748:0:20969:21337							
ANR	4063593	FunctionDef	"cb_asmfeatures (void * user , void * data)"		4063592	0					
ANR	4063594	CompoundStatement		748:51:21020:21337	4063592	0					
ANR	4063595	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	749:1:21023:21051	4063592	0	True				
ANR	4063596	IdentifierDecl	* core = ( RCore * ) user		4063592	0					
ANR	4063597	IdentifierDeclType	RCore *		4063592	0					
ANR	4063598	Identifier	core		4063592	1					
ANR	4063599	AssignmentExpression	* core = ( RCore * ) user		4063592	2		=			
ANR	4063600	Identifier	core		4063592	0					
ANR	4063601	CastExpression	( RCore * ) user		4063592	1					
ANR	4063602	CastTarget	RCore *		4063592	0					
ANR	4063603	Identifier	user		4063592	1					
ANR	4063604	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	750:1:21054:21094	4063592	1	True				
ANR	4063605	IdentifierDecl	* node = ( RConfigNode * ) data		4063592	0					
ANR	4063606	IdentifierDeclType	RConfigNode *		4063592	0					
ANR	4063607	Identifier	node		4063592	1					
ANR	4063608	AssignmentExpression	* node = ( RConfigNode * ) data		4063592	2		=			
ANR	4063609	Identifier	node		4063592	0					
ANR	4063610	CastExpression	( RConfigNode * ) data		4063592	1					
ANR	4063611	CastTarget	RConfigNode *		4063592	0					
ANR	4063612	Identifier	data		4063592	1					
ANR	4063613	IfStatement	if ( * node -> value == '?' )		4063592	2					
ANR	4063614	Condition	* node -> value == '?'	751:5:21101:21119	4063592	0	True				
ANR	4063615	EqualityExpression	* node -> value == '?'		4063592	0		==			
ANR	4063616	UnaryOperationExpression	* node -> value		4063592	0					
ANR	4063617	UnaryOperator	*		4063592	0					
ANR	4063618	PtrMemberAccess	node -> value		4063592	1					
ANR	4063619	Identifier	node		4063592	0					
ANR	4063620	Identifier	value		4063592	1					
ANR	4063621	PrimaryExpression	'?'		4063592	1					
ANR	4063622	CompoundStatement		4:26:101:101	4063592	1					
ANR	4063623	ExpressionStatement	"update_asmfeatures_options ( core , node )"	752:2:21126:21165	4063592	0	True				
ANR	4063624	CallExpression	"update_asmfeatures_options ( core , node )"		4063592	0					
ANR	4063625	Callee	update_asmfeatures_options		4063592	0					
ANR	4063626	Identifier	update_asmfeatures_options		4063592	0					
ANR	4063627	ArgumentList	core		4063592	1					
ANR	4063628	Argument	core		4063592	0					
ANR	4063629	Identifier	core		4063592	0					
ANR	4063630	Argument	node		4063592	1					
ANR	4063631	Identifier	node		4063592	0					
ANR	4063632	ExpressionStatement	print_node_options ( node )	753:2:21169:21194	4063592	1	True				
ANR	4063633	CallExpression	print_node_options ( node )		4063592	0					
ANR	4063634	Callee	print_node_options		4063592	0					
ANR	4063635	Identifier	print_node_options		4063592	0					
ANR	4063636	ArgumentList	node		4063592	1					
ANR	4063637	Argument	node		4063592	0					
ANR	4063638	Identifier	node		4063592	0					
ANR	4063639	ReturnStatement	return 0 ;	754:2:21198:21206	4063592	2	True				
ANR	4063640	PrimaryExpression	0		4063592	0					
ANR	4063641	ExpressionStatement	R_FREE ( core -> assembler -> features )	756:1:21212:21246	4063592	3	True				
ANR	4063642	CallExpression	R_FREE ( core -> assembler -> features )		4063592	0					
ANR	4063643	Callee	R_FREE		4063592	0					
ANR	4063644	Identifier	R_FREE		4063592	0					
ANR	4063645	ArgumentList	core -> assembler -> features		4063592	1					
ANR	4063646	Argument	core -> assembler -> features		4063592	0					
ANR	4063647	PtrMemberAccess	core -> assembler -> features		4063592	0					
ANR	4063648	PtrMemberAccess	core -> assembler		4063592	0					
ANR	4063649	Identifier	core		4063592	0					
ANR	4063650	Identifier	assembler		4063592	1					
ANR	4063651	Identifier	features		4063592	1					
ANR	4063652	IfStatement	if ( node -> value [ 0 ] )		4063592	4					
ANR	4063653	Condition	node -> value [ 0 ]	757:5:21253:21266	4063592	0	True				
ANR	4063654	ArrayIndexing	node -> value [ 0 ]		4063592	0					
ANR	4063655	PtrMemberAccess	node -> value		4063592	0					
ANR	4063656	Identifier	node		4063592	0					
ANR	4063657	Identifier	value		4063592	1					
ANR	4063658	PrimaryExpression	0		4063592	1					
ANR	4063659	CompoundStatement		10:21:248:248	4063592	1					
ANR	4063660	ExpressionStatement	core -> assembler -> features = strdup ( node -> value )	758:2:21273:21321	4063592	0	True				
ANR	4063661	AssignmentExpression	core -> assembler -> features = strdup ( node -> value )		4063592	0		=			
ANR	4063662	PtrMemberAccess	core -> assembler -> features		4063592	0					
ANR	4063663	PtrMemberAccess	core -> assembler		4063592	0					
ANR	4063664	Identifier	core		4063592	0					
ANR	4063665	Identifier	assembler		4063592	1					
ANR	4063666	Identifier	features		4063592	1					
ANR	4063667	CallExpression	strdup ( node -> value )		4063592	1					
ANR	4063668	Callee	strdup		4063592	0					
ANR	4063669	Identifier	strdup		4063592	0					
ANR	4063670	ArgumentList	node -> value		4063592	1					
ANR	4063671	Argument	node -> value		4063592	0					
ANR	4063672	PtrMemberAccess	node -> value		4063592	0					
ANR	4063673	Identifier	node		4063592	0					
ANR	4063674	Identifier	value		4063592	1					
ANR	4063675	ReturnStatement	return 1 ;	760:1:21327:21335	4063592	5	True				
ANR	4063676	PrimaryExpression	1		4063592	0					
ANR	4063677	ReturnType	static bool		4063592	1					
ANR	4063678	Identifier	cb_asmfeatures		4063592	2					
ANR	4063679	ParameterList	"void * user , void * data"		4063592	3					
ANR	4063680	Parameter	void * user	748:27:20996:21005	4063592	0	True				
ANR	4063681	ParameterType	void *		4063592	0					
ANR	4063682	Identifier	user		4063592	1					
ANR	4063683	Parameter	void * data	748:39:21008:21017	4063592	1	True				
ANR	4063684	ParameterType	void *		4063592	0					
ANR	4063685	Identifier	data		4063592	1					
ANR	4063686	CFGEntryNode	ENTRY		4063592		True				
ANR	4063687	CFGExitNode	EXIT		4063592		True				
ANR	4063688	Symbol	* node -> value		4063592						
ANR	4063689	Symbol	data		4063592						
ANR	4063690	Symbol	* core		4063592						
ANR	4063691	Symbol	core -> assembler		4063592						
ANR	4063692	Symbol	node -> value		4063592						
ANR	4063693	Symbol	* core -> assembler		4063592						
ANR	4063694	Symbol	core		4063592						
ANR	4063695	Symbol	node		4063592						
ANR	4063696	Symbol	* * node		4063592						
ANR	4063697	Symbol	core -> assembler -> features		4063592						
ANR	4063698	Symbol	* node		4063592						
ANR	4063699	Symbol	strdup		4063592						
ANR	4063700	Symbol	user		4063592						
ANR	4063701	Symbol	* * core		4063592						
ANR	4063702	Function	cb_asmlineswidth	763:0:21340:21524							
ANR	4063703	FunctionDef	"cb_asmlineswidth (void * user , void * data)"		4063702	0					
ANR	4063704	CompoundStatement		763:53:21393:21524	4063702	0					
ANR	4063705	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	764:1:21396:21424	4063702	0	True				
ANR	4063706	IdentifierDecl	* core = ( RCore * ) user		4063702	0					
ANR	4063707	IdentifierDeclType	RCore *		4063702	0					
ANR	4063708	Identifier	core		4063702	1					
ANR	4063709	AssignmentExpression	* core = ( RCore * ) user		4063702	2		=			
ANR	4063710	Identifier	core		4063702	0					
ANR	4063711	CastExpression	( RCore * ) user		4063702	1					
ANR	4063712	CastTarget	RCore *		4063702	0					
ANR	4063713	Identifier	user		4063702	1					
ANR	4063714	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	765:1:21427:21467	4063702	1	True				
ANR	4063715	IdentifierDecl	* node = ( RConfigNode * ) data		4063702	0					
ANR	4063716	IdentifierDeclType	RConfigNode *		4063702	0					
ANR	4063717	Identifier	node		4063702	1					
ANR	4063718	AssignmentExpression	* node = ( RConfigNode * ) data		4063702	2		=			
ANR	4063719	Identifier	node		4063702	0					
ANR	4063720	CastExpression	( RConfigNode * ) data		4063702	1					
ANR	4063721	CastTarget	RConfigNode *		4063702	0					
ANR	4063722	Identifier	data		4063702	1					
ANR	4063723	ExpressionStatement	core -> anal -> lineswidth = node -> i_value	766:1:21470:21508	4063702	2	True				
ANR	4063724	AssignmentExpression	core -> anal -> lineswidth = node -> i_value		4063702	0		=			
ANR	4063725	PtrMemberAccess	core -> anal -> lineswidth		4063702	0					
ANR	4063726	PtrMemberAccess	core -> anal		4063702	0					
ANR	4063727	Identifier	core		4063702	0					
ANR	4063728	Identifier	anal		4063702	1					
ANR	4063729	Identifier	lineswidth		4063702	1					
ANR	4063730	PtrMemberAccess	node -> i_value		4063702	1					
ANR	4063731	Identifier	node		4063702	0					
ANR	4063732	Identifier	i_value		4063702	1					
ANR	4063733	ReturnStatement	return true ;	767:1:21511:21522	4063702	3	True				
ANR	4063734	Identifier	true		4063702	0					
ANR	4063735	ReturnType	static bool		4063702	1					
ANR	4063736	Identifier	cb_asmlineswidth		4063702	2					
ANR	4063737	ParameterList	"void * user , void * data"		4063702	3					
ANR	4063738	Parameter	void * user	763:29:21369:21378	4063702	0	True				
ANR	4063739	ParameterType	void *		4063702	0					
ANR	4063740	Identifier	user		4063702	1					
ANR	4063741	Parameter	void * data	763:41:21381:21390	4063702	1	True				
ANR	4063742	ParameterType	void *		4063702	0					
ANR	4063743	Identifier	data		4063702	1					
ANR	4063744	CFGEntryNode	ENTRY		4063702		True				
ANR	4063745	CFGExitNode	EXIT		4063702		True				
ANR	4063746	Symbol	core		4063702						
ANR	4063747	Symbol	node		4063702						
ANR	4063748	Symbol	core -> anal -> lineswidth		4063702						
ANR	4063749	Symbol	* core -> anal		4063702						
ANR	4063750	Symbol	data		4063702						
ANR	4063751	Symbol	* core		4063702						
ANR	4063752	Symbol	true		4063702						
ANR	4063753	Symbol	* node		4063702						
ANR	4063754	Symbol	user		4063702						
ANR	4063755	Symbol	core -> anal		4063702						
ANR	4063756	Symbol	* * core		4063702						
ANR	4063757	Symbol	node -> i_value		4063702						
ANR	4063758	Function	cb_emustr	770:0:21527:21738							
ANR	4063759	FunctionDef	"cb_emustr (void * user , void * data)"		4063758	0					
ANR	4063760	CompoundStatement		770:46:21573:21738	4063758	0					
ANR	4063761	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	771:1:21576:21604	4063758	0	True				
ANR	4063762	IdentifierDecl	* core = ( RCore * ) user		4063758	0					
ANR	4063763	IdentifierDeclType	RCore *		4063758	0					
ANR	4063764	Identifier	core		4063758	1					
ANR	4063765	AssignmentExpression	* core = ( RCore * ) user		4063758	2		=			
ANR	4063766	Identifier	core		4063758	0					
ANR	4063767	CastExpression	( RCore * ) user		4063758	1					
ANR	4063768	CastTarget	RCore *		4063758	0					
ANR	4063769	Identifier	user		4063758	1					
ANR	4063770	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	772:1:21607:21647	4063758	1	True				
ANR	4063771	IdentifierDecl	* node = ( RConfigNode * ) data		4063758	0					
ANR	4063772	IdentifierDeclType	RConfigNode *		4063758	0					
ANR	4063773	Identifier	node		4063758	1					
ANR	4063774	AssignmentExpression	* node = ( RConfigNode * ) data		4063758	2		=			
ANR	4063775	Identifier	node		4063758	0					
ANR	4063776	CastExpression	( RConfigNode * ) data		4063758	1					
ANR	4063777	CastTarget	RConfigNode *		4063758	0					
ANR	4063778	Identifier	data		4063758	1					
ANR	4063779	IfStatement	if ( node -> i_value )		4063758	2					
ANR	4063780	Condition	node -> i_value	773:5:21654:21666	4063758	0	True				
ANR	4063781	PtrMemberAccess	node -> i_value		4063758	0					
ANR	4063782	Identifier	node		4063758	0					
ANR	4063783	Identifier	i_value		4063758	1					
ANR	4063784	CompoundStatement		4:20:95:95	4063758	1					
ANR	4063785	ExpressionStatement	"r_config_set ( core -> config , ""asm.emu"" , ""true"" )"	774:2:21673:21719	4063758	0	True				
ANR	4063786	CallExpression	"r_config_set ( core -> config , ""asm.emu"" , ""true"" )"		4063758	0					
ANR	4063787	Callee	r_config_set		4063758	0					
ANR	4063788	Identifier	r_config_set		4063758	0					
ANR	4063789	ArgumentList	core -> config		4063758	1					
ANR	4063790	Argument	core -> config		4063758	0					
ANR	4063791	PtrMemberAccess	core -> config		4063758	0					
ANR	4063792	Identifier	core		4063758	0					
ANR	4063793	Identifier	config		4063758	1					
ANR	4063794	Argument	"""asm.emu"""		4063758	1					
ANR	4063795	PrimaryExpression	"""asm.emu"""		4063758	0					
ANR	4063796	Argument	"""true"""		4063758	2					
ANR	4063797	PrimaryExpression	"""true"""		4063758	0					
ANR	4063798	ReturnStatement	return true ;	776:1:21725:21736	4063758	3	True				
ANR	4063799	Identifier	true		4063758	0					
ANR	4063800	ReturnType	static bool		4063758	1					
ANR	4063801	Identifier	cb_emustr		4063758	2					
ANR	4063802	ParameterList	"void * user , void * data"		4063758	3					
ANR	4063803	Parameter	void * user	770:22:21549:21558	4063758	0	True				
ANR	4063804	ParameterType	void *		4063758	0					
ANR	4063805	Identifier	user		4063758	1					
ANR	4063806	Parameter	void * data	770:34:21561:21570	4063758	1	True				
ANR	4063807	ParameterType	void *		4063758	0					
ANR	4063808	Identifier	data		4063758	1					
ANR	4063809	CFGEntryNode	ENTRY		4063758		True				
ANR	4063810	CFGExitNode	EXIT		4063758		True				
ANR	4063811	Symbol	core -> config		4063758						
ANR	4063812	Symbol	core		4063758						
ANR	4063813	Symbol	node		4063758						
ANR	4063814	Symbol	data		4063758						
ANR	4063815	Symbol	* core		4063758						
ANR	4063816	Symbol	true		4063758						
ANR	4063817	Symbol	* node		4063758						
ANR	4063818	Symbol	user		4063758						
ANR	4063819	Symbol	node -> i_value		4063758						
ANR	4063820	Function	cb_emuskip	779:0:21741:22238							
ANR	4063821	FunctionDef	"cb_emuskip (void * user , void * data)"		4063820	0					
ANR	4063822	CompoundStatement		779:47:21788:22238	4063820	0					
ANR	4063823	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	780:1:21791:21830	4063820	0	True				
ANR	4063824	IdentifierDecl	* node = ( RConfigNode * ) data		4063820	0					
ANR	4063825	IdentifierDeclType	RConfigNode *		4063820	0					
ANR	4063826	Identifier	node		4063820	1					
ANR	4063827	AssignmentExpression	* node = ( RConfigNode * ) data		4063820	2		=			
ANR	4063828	Identifier	node		4063820	0					
ANR	4063829	CastExpression	( RConfigNode * ) data		4063820	1					
ANR	4063830	CastTarget	RConfigNode *		4063820	0					
ANR	4063831	Identifier	data		4063820	1					
ANR	4063832	IfStatement	if ( * node -> value == '?' )		4063820	1					
ANR	4063833	Condition	* node -> value == '?'	781:5:21837:21855	4063820	0	True				
ANR	4063834	EqualityExpression	* node -> value == '?'		4063820	0		==			
ANR	4063835	UnaryOperationExpression	* node -> value		4063820	0					
ANR	4063836	UnaryOperator	*		4063820	0					
ANR	4063837	PtrMemberAccess	node -> value		4063820	1					
ANR	4063838	Identifier	node		4063820	0					
ANR	4063839	Identifier	value		4063820	1					
ANR	4063840	PrimaryExpression	'?'		4063820	1					
ANR	4063841	CompoundStatement		3:26:69:69	4063820	1					
ANR	4063842	IfStatement	if ( strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?' )		4063820	0					
ANR	4063843	Condition	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'	782:6:21866:21914	4063820	0	True				
ANR	4063844	AndExpression	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'		4063820	0		&&			
ANR	4063845	RelationalExpression	strlen ( node -> value ) > 1		4063820	0		>			
ANR	4063846	CallExpression	strlen ( node -> value )		4063820	0					
ANR	4063847	Callee	strlen		4063820	0					
ANR	4063848	Identifier	strlen		4063820	0					
ANR	4063849	ArgumentList	node -> value		4063820	1					
ANR	4063850	Argument	node -> value		4063820	0					
ANR	4063851	PtrMemberAccess	node -> value		4063820	0					
ANR	4063852	Identifier	node		4063820	0					
ANR	4063853	Identifier	value		4063820	1					
ANR	4063854	PrimaryExpression	1		4063820	1					
ANR	4063855	EqualityExpression	node -> value [ 1 ] == '?'		4063820	1		==			
ANR	4063856	ArrayIndexing	node -> value [ 1 ]		4063820	0					
ANR	4063857	PtrMemberAccess	node -> value		4063820	0					
ANR	4063858	Identifier	node		4063820	0					
ANR	4063859	Identifier	value		4063820	1					
ANR	4063860	PrimaryExpression	1		4063820	1					
ANR	4063861	PrimaryExpression	'?'		4063820	1					
ANR	4063862	CompoundStatement		4:57:128:128	4063820	1					
ANR	4063863	Statement	r_cons_printf	783:3:21922:21934	4063820	0	True				
ANR	4063864	Statement	(	783:17:21936:21936	4063820	1	True				
ANR	4063865	Statement	"""Concatenation of meta types encoded as characters:\\n"""	783:18:21937:21990	4063820	2	True				
ANR	4063866	Statement	"""'d': data\\n'c': code\\n's': string\\n'f': format\\n'm': magic\\n"""	784:4:21998:22059	4063820	3	True				
ANR	4063867	Statement	"""'h': hide\\n'C': comment\\n'r': run\\n"""	785:4:22067:22103	4063820	4	True				
ANR	4063868	Statement	"""(default is 'ds' to skip data and strings)\\n"""	786:4:22111:22156	4063820	5	True				
ANR	4063869	Statement	)	786:50:22157:22157	4063820	6	True				
ANR	4063870	ExpressionStatement		786:51:22158:22158	4063820	7	True				
ANR	4063871	ElseStatement	else		4063820	0					
ANR	4063872	CompoundStatement		9:9:380:380	4063820	0					
ANR	4063873	ExpressionStatement	print_node_options ( node )	788:3:22174:22199	4063820	0	True				
ANR	4063874	CallExpression	print_node_options ( node )		4063820	0					
ANR	4063875	Callee	print_node_options		4063820	0					
ANR	4063876	Identifier	print_node_options		4063820	0					
ANR	4063877	ArgumentList	node		4063820	1					
ANR	4063878	Argument	node		4063820	0					
ANR	4063879	Identifier	node		4063820	0					
ANR	4063880	ReturnStatement	return false ;	790:2:22207:22219	4063820	1	True				
ANR	4063881	Identifier	false		4063820	0					
ANR	4063882	ReturnStatement	return true ;	792:1:22225:22236	4063820	2	True				
ANR	4063883	Identifier	true		4063820	0					
ANR	4063884	ReturnType	static bool		4063820	1					
ANR	4063885	Identifier	cb_emuskip		4063820	2					
ANR	4063886	ParameterList	"void * user , void * data"		4063820	3					
ANR	4063887	Parameter	void * user	779:23:21764:21773	4063820	0	True				
ANR	4063888	ParameterType	void *		4063820	0					
ANR	4063889	Identifier	user		4063820	1					
ANR	4063890	Parameter	void * data	779:35:21776:21785	4063820	1	True				
ANR	4063891	ParameterType	void *		4063820	0					
ANR	4063892	Identifier	data		4063820	1					
ANR	4063893	CFGEntryNode	ENTRY		4063820		True				
ANR	4063894	CFGExitNode	EXIT		4063820		True				
ANR	4063895	Symbol	node		4063820						
ANR	4063896	Symbol	strlen		4063820						
ANR	4063897	Symbol	* node -> value		4063820						
ANR	4063898	Symbol	data		4063820						
ANR	4063899	Symbol	* * node		4063820						
ANR	4063900	Symbol	false		4063820						
ANR	4063901	Symbol	true		4063820						
ANR	4063902	Symbol	* node		4063820						
ANR	4063903	Symbol	user		4063820						
ANR	4063904	Symbol	node -> value		4063820						
ANR	4063905	Function	cb_asm_armimm	795:0:22241:22439							
ANR	4063906	FunctionDef	"cb_asm_armimm (void * user , void * data)"		4063905	0					
ANR	4063907	CompoundStatement		795:50:22291:22439	4063905	0					
ANR	4063908	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	796:1:22294:22322	4063905	0	True				
ANR	4063909	IdentifierDecl	* core = ( RCore * ) user		4063905	0					
ANR	4063910	IdentifierDeclType	RCore *		4063905	0					
ANR	4063911	Identifier	core		4063905	1					
ANR	4063912	AssignmentExpression	* core = ( RCore * ) user		4063905	2		=			
ANR	4063913	Identifier	core		4063905	0					
ANR	4063914	CastExpression	( RCore * ) user		4063905	1					
ANR	4063915	CastTarget	RCore *		4063905	0					
ANR	4063916	Identifier	user		4063905	1					
ANR	4063917	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	797:1:22325:22365	4063905	1	True				
ANR	4063918	IdentifierDecl	* node = ( RConfigNode * ) data		4063905	0					
ANR	4063919	IdentifierDeclType	RConfigNode *		4063905	0					
ANR	4063920	Identifier	node		4063905	1					
ANR	4063921	AssignmentExpression	* node = ( RConfigNode * ) data		4063905	2		=			
ANR	4063922	Identifier	node		4063905	0					
ANR	4063923	CastExpression	( RConfigNode * ) data		4063905	1					
ANR	4063924	CastTarget	RConfigNode *		4063905	0					
ANR	4063925	Identifier	data		4063905	1					
ANR	4063926	ExpressionStatement	core -> assembler -> immdisp = node -> i_value ? true : false	798:1:22368:22423	4063905	2	True				
ANR	4063927	AssignmentExpression	core -> assembler -> immdisp = node -> i_value ? true : false		4063905	0		=			
ANR	4063928	PtrMemberAccess	core -> assembler -> immdisp		4063905	0					
ANR	4063929	PtrMemberAccess	core -> assembler		4063905	0					
ANR	4063930	Identifier	core		4063905	0					
ANR	4063931	Identifier	assembler		4063905	1					
ANR	4063932	Identifier	immdisp		4063905	1					
ANR	4063933	ConditionalExpression	node -> i_value ? true : false		4063905	1					
ANR	4063934	Condition	node -> i_value		4063905	0					
ANR	4063935	PtrMemberAccess	node -> i_value		4063905	0					
ANR	4063936	Identifier	node		4063905	0					
ANR	4063937	Identifier	i_value		4063905	1					
ANR	4063938	Identifier	true		4063905	1					
ANR	4063939	Identifier	false		4063905	2					
ANR	4063940	ReturnStatement	return true ;	799:1:22426:22437	4063905	3	True				
ANR	4063941	Identifier	true		4063905	0					
ANR	4063942	ReturnType	static bool		4063905	1					
ANR	4063943	Identifier	cb_asm_armimm		4063905	2					
ANR	4063944	ParameterList	"void * user , void * data"		4063905	3					
ANR	4063945	Parameter	void * user	795:26:22267:22276	4063905	0	True				
ANR	4063946	ParameterType	void *		4063905	0					
ANR	4063947	Identifier	user		4063905	1					
ANR	4063948	Parameter	void * data	795:38:22279:22288	4063905	1	True				
ANR	4063949	ParameterType	void *		4063905	0					
ANR	4063950	Identifier	data		4063905	1					
ANR	4063951	CFGEntryNode	ENTRY		4063905		True				
ANR	4063952	CFGExitNode	EXIT		4063905		True				
ANR	4063953	Symbol	data		4063905						
ANR	4063954	Symbol	false		4063905						
ANR	4063955	Symbol	* core		4063905						
ANR	4063956	Symbol	core -> assembler		4063905						
ANR	4063957	Symbol	node -> i_value		4063905						
ANR	4063958	Symbol	* core -> assembler		4063905						
ANR	4063959	Symbol	core		4063905						
ANR	4063960	Symbol	node		4063905						
ANR	4063961	Symbol	true		4063905						
ANR	4063962	Symbol	* node		4063905						
ANR	4063963	Symbol	user		4063905						
ANR	4063964	Symbol	* * core		4063905						
ANR	4063965	Symbol	core -> assembler -> immdisp		4063905						
ANR	4063966	Function	cb_asm_invhex	802:0:22442:22624							
ANR	4063967	FunctionDef	"cb_asm_invhex (void * user , void * data)"		4063966	0					
ANR	4063968	CompoundStatement		802:50:22492:22624	4063966	0					
ANR	4063969	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	803:1:22495:22523	4063966	0	True				
ANR	4063970	IdentifierDecl	* core = ( RCore * ) user		4063966	0					
ANR	4063971	IdentifierDeclType	RCore *		4063966	0					
ANR	4063972	Identifier	core		4063966	1					
ANR	4063973	AssignmentExpression	* core = ( RCore * ) user		4063966	2		=			
ANR	4063974	Identifier	core		4063966	0					
ANR	4063975	CastExpression	( RCore * ) user		4063966	1					
ANR	4063976	CastTarget	RCore *		4063966	0					
ANR	4063977	Identifier	user		4063966	1					
ANR	4063978	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	804:1:22526:22566	4063966	1	True				
ANR	4063979	IdentifierDecl	* node = ( RConfigNode * ) data		4063966	0					
ANR	4063980	IdentifierDeclType	RConfigNode *		4063966	0					
ANR	4063981	Identifier	node		4063966	1					
ANR	4063982	AssignmentExpression	* node = ( RConfigNode * ) data		4063966	2		=			
ANR	4063983	Identifier	node		4063966	0					
ANR	4063984	CastExpression	( RConfigNode * ) data		4063966	1					
ANR	4063985	CastTarget	RConfigNode *		4063966	0					
ANR	4063986	Identifier	data		4063966	1					
ANR	4063987	ExpressionStatement	core -> assembler -> invhex = node -> i_value	805:1:22569:22608	4063966	2	True				
ANR	4063988	AssignmentExpression	core -> assembler -> invhex = node -> i_value		4063966	0		=			
ANR	4063989	PtrMemberAccess	core -> assembler -> invhex		4063966	0					
ANR	4063990	PtrMemberAccess	core -> assembler		4063966	0					
ANR	4063991	Identifier	core		4063966	0					
ANR	4063992	Identifier	assembler		4063966	1					
ANR	4063993	Identifier	invhex		4063966	1					
ANR	4063994	PtrMemberAccess	node -> i_value		4063966	1					
ANR	4063995	Identifier	node		4063966	0					
ANR	4063996	Identifier	i_value		4063966	1					
ANR	4063997	ReturnStatement	return true ;	806:1:22611:22622	4063966	3	True				
ANR	4063998	Identifier	true		4063966	0					
ANR	4063999	ReturnType	static bool		4063966	1					
ANR	4064000	Identifier	cb_asm_invhex		4063966	2					
ANR	4064001	ParameterList	"void * user , void * data"		4063966	3					
ANR	4064002	Parameter	void * user	802:26:22468:22477	4063966	0	True				
ANR	4064003	ParameterType	void *		4063966	0					
ANR	4064004	Identifier	user		4063966	1					
ANR	4064005	Parameter	void * data	802:38:22480:22489	4063966	1	True				
ANR	4064006	ParameterType	void *		4063966	0					
ANR	4064007	Identifier	data		4063966	1					
ANR	4064008	CFGEntryNode	ENTRY		4063966		True				
ANR	4064009	CFGExitNode	EXIT		4063966		True				
ANR	4064010	Symbol	* core -> assembler		4063966						
ANR	4064011	Symbol	core		4063966						
ANR	4064012	Symbol	node		4063966						
ANR	4064013	Symbol	data		4063966						
ANR	4064014	Symbol	* core		4063966						
ANR	4064015	Symbol	true		4063966						
ANR	4064016	Symbol	core -> assembler -> invhex		4063966						
ANR	4064017	Symbol	core -> assembler		4063966						
ANR	4064018	Symbol	* node		4063966						
ANR	4064019	Symbol	user		4063966						
ANR	4064020	Symbol	* * core		4063966						
ANR	4064021	Symbol	node -> i_value		4063966						
ANR	4064022	Function	cb_asm_pcalign	809:0:22627:22895							
ANR	4064023	FunctionDef	"cb_asm_pcalign (void * user , void * data)"		4064022	0					
ANR	4064024	CompoundStatement		809:51:22678:22895	4064022	0					
ANR	4064025	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	810:1:22681:22709	4064022	0	True				
ANR	4064026	IdentifierDecl	* core = ( RCore * ) user		4064022	0					
ANR	4064027	IdentifierDeclType	RCore *		4064022	0					
ANR	4064028	Identifier	core		4064022	1					
ANR	4064029	AssignmentExpression	* core = ( RCore * ) user		4064022	2		=			
ANR	4064030	Identifier	core		4064022	0					
ANR	4064031	CastExpression	( RCore * ) user		4064022	1					
ANR	4064032	CastTarget	RCore *		4064022	0					
ANR	4064033	Identifier	user		4064022	1					
ANR	4064034	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	811:1:22712:22752	4064022	1	True				
ANR	4064035	IdentifierDecl	* node = ( RConfigNode * ) data		4064022	0					
ANR	4064036	IdentifierDeclType	RConfigNode *		4064022	0					
ANR	4064037	Identifier	node		4064022	1					
ANR	4064038	AssignmentExpression	* node = ( RConfigNode * ) data		4064022	2		=			
ANR	4064039	Identifier	node		4064022	0					
ANR	4064040	CastExpression	( RConfigNode * ) data		4064022	1					
ANR	4064041	CastTarget	RConfigNode *		4064022	0					
ANR	4064042	Identifier	data		4064022	1					
ANR	4064043	IdentifierDeclStatement	int align = node -> i_value ;	812:1:22755:22780	4064022	2	True				
ANR	4064044	IdentifierDecl	align = node -> i_value		4064022	0					
ANR	4064045	IdentifierDeclType	int		4064022	0					
ANR	4064046	Identifier	align		4064022	1					
ANR	4064047	AssignmentExpression	align = node -> i_value		4064022	2		=			
ANR	4064048	Identifier	align		4064022	0					
ANR	4064049	PtrMemberAccess	node -> i_value		4064022	1					
ANR	4064050	Identifier	node		4064022	0					
ANR	4064051	Identifier	i_value		4064022	1					
ANR	4064052	IfStatement	if ( align < 0 )		4064022	3					
ANR	4064053	Condition	align < 0	813:5:22787:22795	4064022	0	True				
ANR	4064054	RelationalExpression	align < 0		4064022	0		<			
ANR	4064055	Identifier	align		4064022	0					
ANR	4064056	PrimaryExpression	0		4064022	1					
ANR	4064057	CompoundStatement		5:16:119:119	4064022	1					
ANR	4064058	ExpressionStatement	align = 0	814:2:22802:22811	4064022	0	True				
ANR	4064059	AssignmentExpression	align = 0		4064022	0		=			
ANR	4064060	Identifier	align		4064022	0					
ANR	4064061	PrimaryExpression	0		4064022	1					
ANR	4064062	ExpressionStatement	core -> assembler -> pcalign = align	816:1:22817:22849	4064022	4	True				
ANR	4064063	AssignmentExpression	core -> assembler -> pcalign = align		4064022	0		=			
ANR	4064064	PtrMemberAccess	core -> assembler -> pcalign		4064022	0					
ANR	4064065	PtrMemberAccess	core -> assembler		4064022	0					
ANR	4064066	Identifier	core		4064022	0					
ANR	4064067	Identifier	assembler		4064022	1					
ANR	4064068	Identifier	pcalign		4064022	1					
ANR	4064069	Identifier	align		4064022	1					
ANR	4064070	ExpressionStatement	core -> anal -> pcalign = align	817:1:22852:22879	4064022	5	True				
ANR	4064071	AssignmentExpression	core -> anal -> pcalign = align		4064022	0		=			
ANR	4064072	PtrMemberAccess	core -> anal -> pcalign		4064022	0					
ANR	4064073	PtrMemberAccess	core -> anal		4064022	0					
ANR	4064074	Identifier	core		4064022	0					
ANR	4064075	Identifier	anal		4064022	1					
ANR	4064076	Identifier	pcalign		4064022	1					
ANR	4064077	Identifier	align		4064022	1					
ANR	4064078	ReturnStatement	return true ;	818:1:22882:22893	4064022	6	True				
ANR	4064079	Identifier	true		4064022	0					
ANR	4064080	ReturnType	static bool		4064022	1					
ANR	4064081	Identifier	cb_asm_pcalign		4064022	2					
ANR	4064082	ParameterList	"void * user , void * data"		4064022	3					
ANR	4064083	Parameter	void * user	809:27:22654:22663	4064022	0	True				
ANR	4064084	ParameterType	void *		4064022	0					
ANR	4064085	Identifier	user		4064022	1					
ANR	4064086	Parameter	void * data	809:39:22666:22675	4064022	1	True				
ANR	4064087	ParameterType	void *		4064022	0					
ANR	4064088	Identifier	data		4064022	1					
ANR	4064089	CFGEntryNode	ENTRY		4064022		True				
ANR	4064090	CFGExitNode	EXIT		4064022		True				
ANR	4064091	Symbol	data		4064022						
ANR	4064092	Symbol	* core		4064022						
ANR	4064093	Symbol	core -> assembler		4064022						
ANR	4064094	Symbol	align		4064022						
ANR	4064095	Symbol	core -> anal		4064022						
ANR	4064096	Symbol	node -> i_value		4064022						
ANR	4064097	Symbol	* core -> assembler		4064022						
ANR	4064098	Symbol	core		4064022						
ANR	4064099	Symbol	node		4064022						
ANR	4064100	Symbol	* core -> anal		4064022						
ANR	4064101	Symbol	core -> assembler -> pcalign		4064022						
ANR	4064102	Symbol	true		4064022						
ANR	4064103	Symbol	* node		4064022						
ANR	4064104	Symbol	user		4064022						
ANR	4064105	Symbol	* * core		4064022						
ANR	4064106	Symbol	core -> anal -> pcalign		4064022						
ANR	4064107	Function	cb_asmos	821:0:22898:23617							
ANR	4064108	FunctionDef	"cb_asmos (void * user , void * data)"		4064107	0					
ANR	4064109	CompoundStatement		821:45:22943:23617	4064107	0					
ANR	4064110	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	822:1:22946:22973	4064107	0	True				
ANR	4064111	IdentifierDecl	* core = ( RCore * ) user		4064107	0					
ANR	4064112	IdentifierDeclType	RCore *		4064107	0					
ANR	4064113	Identifier	core		4064107	1					
ANR	4064114	AssignmentExpression	* core = ( RCore * ) user		4064107	2		=			
ANR	4064115	Identifier	core		4064107	0					
ANR	4064116	CastExpression	( RCore * ) user		4064107	1					
ANR	4064117	CastTarget	RCore *		4064107	0					
ANR	4064118	Identifier	user		4064107	1					
ANR	4064119	IdentifierDeclStatement	"int asmbits = r_config_get_i ( core -> config , ""asm.bits"" ) ;"	823:1:22976:23031	4064107	1	True				
ANR	4064120	IdentifierDecl	"asmbits = r_config_get_i ( core -> config , ""asm.bits"" )"		4064107	0					
ANR	4064121	IdentifierDeclType	int		4064107	0					
ANR	4064122	Identifier	asmbits		4064107	1					
ANR	4064123	AssignmentExpression	"asmbits = r_config_get_i ( core -> config , ""asm.bits"" )"		4064107	2		=			
ANR	4064124	Identifier	asmbits		4064107	0					
ANR	4064125	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		4064107	1					
ANR	4064126	Callee	r_config_get_i		4064107	0					
ANR	4064127	Identifier	r_config_get_i		4064107	0					
ANR	4064128	ArgumentList	core -> config		4064107	1					
ANR	4064129	Argument	core -> config		4064107	0					
ANR	4064130	PtrMemberAccess	core -> config		4064107	0					
ANR	4064131	Identifier	core		4064107	0					
ANR	4064132	Identifier	config		4064107	1					
ANR	4064133	Argument	"""asm.bits"""		4064107	1					
ANR	4064134	PrimaryExpression	"""asm.bits"""		4064107	0					
ANR	4064135	IdentifierDeclStatement	"RConfigNode * asmarch , * node = ( RConfigNode * ) data ;"	824:1:23034:23083	4064107	2	True				
ANR	4064136	IdentifierDecl	* asmarch		4064107	0					
ANR	4064137	IdentifierDeclType	RConfigNode *		4064107	0					
ANR	4064138	Identifier	asmarch		4064107	1					
ANR	4064139	IdentifierDecl	* node = ( RConfigNode * ) data		4064107	1					
ANR	4064140	IdentifierDeclType	RConfigNode *		4064107	0					
ANR	4064141	Identifier	node		4064107	1					
ANR	4064142	AssignmentExpression	* node = ( RConfigNode * ) data		4064107	2		=			
ANR	4064143	Identifier	node		4064107	0					
ANR	4064144	CastExpression	( RConfigNode * ) data		4064107	1					
ANR	4064145	CastTarget	RConfigNode *		4064107	0					
ANR	4064146	Identifier	data		4064107	1					
ANR	4064147	IfStatement	if ( * node -> value == '?' )		4064107	3					
ANR	4064148	Condition	* node -> value == '?'	826:5:23091:23109	4064107	0	True				
ANR	4064149	EqualityExpression	* node -> value == '?'		4064107	0		==			
ANR	4064150	UnaryOperationExpression	* node -> value		4064107	0					
ANR	4064151	UnaryOperator	*		4064107	0					
ANR	4064152	PtrMemberAccess	node -> value		4064107	1					
ANR	4064153	Identifier	node		4064107	0					
ANR	4064154	Identifier	value		4064107	1					
ANR	4064155	PrimaryExpression	'?'		4064107	1					
ANR	4064156	CompoundStatement		6:26:168:168	4064107	1					
ANR	4064157	ExpressionStatement	print_node_options ( node )	827:2:23116:23141	4064107	0	True				
ANR	4064158	CallExpression	print_node_options ( node )		4064107	0					
ANR	4064159	Callee	print_node_options		4064107	0					
ANR	4064160	Identifier	print_node_options		4064107	0					
ANR	4064161	ArgumentList	node		4064107	1					
ANR	4064162	Argument	node		4064107	0					
ANR	4064163	Identifier	node		4064107	0					
ANR	4064164	ReturnStatement	return 0 ;	828:2:23145:23153	4064107	1	True				
ANR	4064165	PrimaryExpression	0		4064107	0					
ANR	4064166	IfStatement	if ( ! node -> value [ 0 ] )		4064107	4					
ANR	4064167	Condition	! node -> value [ 0 ]	830:5:23163:23177	4064107	0	True				
ANR	4064168	UnaryOperationExpression	! node -> value [ 0 ]		4064107	0					
ANR	4064169	UnaryOperator	!		4064107	0					
ANR	4064170	ArrayIndexing	node -> value [ 0 ]		4064107	1					
ANR	4064171	PtrMemberAccess	node -> value		4064107	0					
ANR	4064172	Identifier	node		4064107	0					
ANR	4064173	Identifier	value		4064107	1					
ANR	4064174	PrimaryExpression	0		4064107	1					
ANR	4064175	CompoundStatement		10:22:236:236	4064107	1					
ANR	4064176	ExpressionStatement	free ( node -> value )	831:2:23184:23202	4064107	0	True				
ANR	4064177	CallExpression	free ( node -> value )		4064107	0					
ANR	4064178	Callee	free		4064107	0					
ANR	4064179	Identifier	free		4064107	0					
ANR	4064180	ArgumentList	node -> value		4064107	1					
ANR	4064181	Argument	node -> value		4064107	0					
ANR	4064182	PtrMemberAccess	node -> value		4064107	0					
ANR	4064183	Identifier	node		4064107	0					
ANR	4064184	Identifier	value		4064107	1					
ANR	4064185	ExpressionStatement	node -> value = strdup ( R_SYS_OS )	832:2:23206:23237	4064107	1	True				
ANR	4064186	AssignmentExpression	node -> value = strdup ( R_SYS_OS )		4064107	0		=			
ANR	4064187	PtrMemberAccess	node -> value		4064107	0					
ANR	4064188	Identifier	node		4064107	0					
ANR	4064189	Identifier	value		4064107	1					
ANR	4064190	CallExpression	strdup ( R_SYS_OS )		4064107	1					
ANR	4064191	Callee	strdup		4064107	0					
ANR	4064192	Identifier	strdup		4064107	0					
ANR	4064193	ArgumentList	R_SYS_OS		4064107	1					
ANR	4064194	Argument	R_SYS_OS		4064107	0					
ANR	4064195	Identifier	R_SYS_OS		4064107	0					
ANR	4064196	ExpressionStatement	"asmarch = r_config_node_get ( core -> config , ""asm.arch"" )"	834:1:23243:23297	4064107	5	True				
ANR	4064197	AssignmentExpression	"asmarch = r_config_node_get ( core -> config , ""asm.arch"" )"		4064107	0		=			
ANR	4064198	Identifier	asmarch		4064107	0					
ANR	4064199	CallExpression	"r_config_node_get ( core -> config , ""asm.arch"" )"		4064107	1					
ANR	4064200	Callee	r_config_node_get		4064107	0					
ANR	4064201	Identifier	r_config_node_get		4064107	0					
ANR	4064202	ArgumentList	core -> config		4064107	1					
ANR	4064203	Argument	core -> config		4064107	0					
ANR	4064204	PtrMemberAccess	core -> config		4064107	0					
ANR	4064205	Identifier	core		4064107	0					
ANR	4064206	Identifier	config		4064107	1					
ANR	4064207	Argument	"""asm.arch"""		4064107	1					
ANR	4064208	PrimaryExpression	"""asm.arch"""		4064107	0					
ANR	4064209	IfStatement	if ( asmarch )		4064107	6					
ANR	4064210	Condition	asmarch	835:5:23304:23310	4064107	0	True				
ANR	4064211	Identifier	asmarch		4064107	0					
ANR	4064212	CompoundStatement		16:2:373:432	4064107	1					
ANR	4064213	IdentifierDeclStatement	"const char * asmcpu = r_config_get ( core -> config , ""asm.cpu"" ) ;"	836:2:23317:23376	4064107	0	True				
ANR	4064214	IdentifierDecl	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		4064107	0					
ANR	4064215	IdentifierDeclType	const char *		4064107	0					
ANR	4064216	Identifier	asmcpu		4064107	1					
ANR	4064217	AssignmentExpression	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		4064107	2		=			
ANR	4064218	Identifier	asmcpu		4064107	0					
ANR	4064219	CallExpression	"r_config_get ( core -> config , ""asm.cpu"" )"		4064107	1					
ANR	4064220	Callee	r_config_get		4064107	0					
ANR	4064221	Identifier	r_config_get		4064107	0					
ANR	4064222	ArgumentList	core -> config		4064107	1					
ANR	4064223	Argument	core -> config		4064107	0					
ANR	4064224	PtrMemberAccess	core -> config		4064107	0					
ANR	4064225	Identifier	core		4064107	0					
ANR	4064226	Identifier	config		4064107	1					
ANR	4064227	Argument	"""asm.cpu"""		4064107	1					
ANR	4064228	PrimaryExpression	"""asm.cpu"""		4064107	0					
ANR	4064229	ExpressionStatement	"r_syscall_setup ( core -> anal -> syscall , asmarch -> value , core -> anal -> bits , asmcpu , node -> value )"	837:2:23380:23472	4064107	1	True				
ANR	4064230	CallExpression	"r_syscall_setup ( core -> anal -> syscall , asmarch -> value , core -> anal -> bits , asmcpu , node -> value )"		4064107	0					
ANR	4064231	Callee	r_syscall_setup		4064107	0					
ANR	4064232	Identifier	r_syscall_setup		4064107	0					
ANR	4064233	ArgumentList	core -> anal -> syscall		4064107	1					
ANR	4064234	Argument	core -> anal -> syscall		4064107	0					
ANR	4064235	PtrMemberAccess	core -> anal -> syscall		4064107	0					
ANR	4064236	PtrMemberAccess	core -> anal		4064107	0					
ANR	4064237	Identifier	core		4064107	0					
ANR	4064238	Identifier	anal		4064107	1					
ANR	4064239	Identifier	syscall		4064107	1					
ANR	4064240	Argument	asmarch -> value		4064107	1					
ANR	4064241	PtrMemberAccess	asmarch -> value		4064107	0					
ANR	4064242	Identifier	asmarch		4064107	0					
ANR	4064243	Identifier	value		4064107	1					
ANR	4064244	Argument	core -> anal -> bits		4064107	2					
ANR	4064245	PtrMemberAccess	core -> anal -> bits		4064107	0					
ANR	4064246	PtrMemberAccess	core -> anal		4064107	0					
ANR	4064247	Identifier	core		4064107	0					
ANR	4064248	Identifier	anal		4064107	1					
ANR	4064249	Identifier	bits		4064107	1					
ANR	4064250	Argument	asmcpu		4064107	3					
ANR	4064251	Identifier	asmcpu		4064107	0					
ANR	4064252	Argument	node -> value		4064107	4					
ANR	4064253	PtrMemberAccess	node -> value		4064107	0					
ANR	4064254	Identifier	node		4064107	0					
ANR	4064255	Identifier	value		4064107	1					
ANR	4064256	ExpressionStatement	"__setsegoff ( core -> config , asmarch -> value , asmbits )"	838:2:23476:23527	4064107	2	True				
ANR	4064257	CallExpression	"__setsegoff ( core -> config , asmarch -> value , asmbits )"		4064107	0					
ANR	4064258	Callee	__setsegoff		4064107	0					
ANR	4064259	Identifier	__setsegoff		4064107	0					
ANR	4064260	ArgumentList	core -> config		4064107	1					
ANR	4064261	Argument	core -> config		4064107	0					
ANR	4064262	PtrMemberAccess	core -> config		4064107	0					
ANR	4064263	Identifier	core		4064107	0					
ANR	4064264	Identifier	config		4064107	1					
ANR	4064265	Argument	asmarch -> value		4064107	1					
ANR	4064266	PtrMemberAccess	asmarch -> value		4064107	0					
ANR	4064267	Identifier	asmarch		4064107	0					
ANR	4064268	Identifier	value		4064107	1					
ANR	4064269	Argument	asmbits		4064107	2					
ANR	4064270	Identifier	asmbits		4064107	0					
ANR	4064271	ExpressionStatement	"r_anal_set_os ( core -> anal , node -> value )"	840:1:23533:23572	4064107	7	True				
ANR	4064272	CallExpression	"r_anal_set_os ( core -> anal , node -> value )"		4064107	0					
ANR	4064273	Callee	r_anal_set_os		4064107	0					
ANR	4064274	Identifier	r_anal_set_os		4064107	0					
ANR	4064275	ArgumentList	core -> anal		4064107	1					
ANR	4064276	Argument	core -> anal		4064107	0					
ANR	4064277	PtrMemberAccess	core -> anal		4064107	0					
ANR	4064278	Identifier	core		4064107	0					
ANR	4064279	Identifier	anal		4064107	1					
ANR	4064280	Argument	node -> value		4064107	1					
ANR	4064281	PtrMemberAccess	node -> value		4064107	0					
ANR	4064282	Identifier	node		4064107	0					
ANR	4064283	Identifier	value		4064107	1					
ANR	4064284	ExpressionStatement	r_core_anal_cc_init ( core )	841:1:23575:23601	4064107	8	True				
ANR	4064285	CallExpression	r_core_anal_cc_init ( core )		4064107	0					
ANR	4064286	Callee	r_core_anal_cc_init		4064107	0					
ANR	4064287	Identifier	r_core_anal_cc_init		4064107	0					
ANR	4064288	ArgumentList	core		4064107	1					
ANR	4064289	Argument	core		4064107	0					
ANR	4064290	Identifier	core		4064107	0					
ANR	4064291	ReturnStatement	return true ;	842:1:23604:23615	4064107	9	True				
ANR	4064292	Identifier	true		4064107	0					
ANR	4064293	ReturnType	static bool		4064107	1					
ANR	4064294	Identifier	cb_asmos		4064107	2					
ANR	4064295	ParameterList	"void * user , void * data"		4064107	3					
ANR	4064296	Parameter	void * user	821:21:22919:22928	4064107	0	True				
ANR	4064297	ParameterType	void *		4064107	0					
ANR	4064298	Identifier	user		4064107	1					
ANR	4064299	Parameter	void * data	821:33:22931:22940	4064107	1	True				
ANR	4064300	ParameterType	void *		4064107	0					
ANR	4064301	Identifier	data		4064107	1					
ANR	4064302	CFGEntryNode	ENTRY		4064107		True				
ANR	4064303	CFGExitNode	EXIT		4064107		True				
ANR	4064304	Symbol	asmcpu		4064107						
ANR	4064305	Symbol	data		4064107						
ANR	4064306	Symbol	* core		4064107						
ANR	4064307	Symbol	r_config_get		4064107						
ANR	4064308	Symbol	asmarch -> value		4064107						
ANR	4064309	Symbol	core -> anal		4064107						
ANR	4064310	Symbol	* node		4064107						
ANR	4064311	Symbol	* asmarch		4064107						
ANR	4064312	Symbol	* * core		4064107						
ANR	4064313	Symbol	core -> config		4064107						
ANR	4064314	Symbol	* node -> value		4064107						
ANR	4064315	Symbol	core -> anal -> bits		4064107						
ANR	4064316	Symbol	asmbits		4064107						
ANR	4064317	Symbol	core -> anal -> syscall		4064107						
ANR	4064318	Symbol	node -> value		4064107						
ANR	4064319	Symbol	core		4064107						
ANR	4064320	Symbol	node		4064107						
ANR	4064321	Symbol	* core -> anal		4064107						
ANR	4064322	Symbol	* * node		4064107						
ANR	4064323	Symbol	asmarch		4064107						
ANR	4064324	Symbol	r_config_get_i		4064107						
ANR	4064325	Symbol	true		4064107						
ANR	4064326	Symbol	strdup		4064107						
ANR	4064327	Symbol	R_SYS_OS		4064107						
ANR	4064328	Symbol	user		4064107						
ANR	4064329	Symbol	r_config_node_get		4064107						
ANR	4064330	Function	cb_asmparser	845:0:23620:23792							
ANR	4064331	FunctionDef	"cb_asmparser (void * user , void * data)"		4064330	0					
ANR	4064332	CompoundStatement		845:49:23669:23792	4064330	0					
ANR	4064333	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	846:1:23672:23699	4064330	0	True				
ANR	4064334	IdentifierDecl	* core = ( RCore * ) user		4064330	0					
ANR	4064335	IdentifierDeclType	RCore *		4064330	0					
ANR	4064336	Identifier	core		4064330	1					
ANR	4064337	AssignmentExpression	* core = ( RCore * ) user		4064330	2		=			
ANR	4064338	Identifier	core		4064330	0					
ANR	4064339	CastExpression	( RCore * ) user		4064330	1					
ANR	4064340	CastTarget	RCore *		4064330	0					
ANR	4064341	Identifier	user		4064330	1					
ANR	4064342	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	847:1:23702:23741	4064330	1	True				
ANR	4064343	IdentifierDecl	* node = ( RConfigNode * ) data		4064330	0					
ANR	4064344	IdentifierDeclType	RConfigNode *		4064330	0					
ANR	4064345	Identifier	node		4064330	1					
ANR	4064346	AssignmentExpression	* node = ( RConfigNode * ) data		4064330	2		=			
ANR	4064347	Identifier	node		4064330	0					
ANR	4064348	CastExpression	( RConfigNode * ) data		4064330	1					
ANR	4064349	CastTarget	RConfigNode *		4064330	0					
ANR	4064350	Identifier	data		4064330	1					
ANR	4064351	ReturnStatement	"return r_parse_use ( core -> parser , node -> value ) ;"	848:1:23744:23790	4064330	2	True				
ANR	4064352	CallExpression	"r_parse_use ( core -> parser , node -> value )"		4064330	0					
ANR	4064353	Callee	r_parse_use		4064330	0					
ANR	4064354	Identifier	r_parse_use		4064330	0					
ANR	4064355	ArgumentList	core -> parser		4064330	1					
ANR	4064356	Argument	core -> parser		4064330	0					
ANR	4064357	PtrMemberAccess	core -> parser		4064330	0					
ANR	4064358	Identifier	core		4064330	0					
ANR	4064359	Identifier	parser		4064330	1					
ANR	4064360	Argument	node -> value		4064330	1					
ANR	4064361	PtrMemberAccess	node -> value		4064330	0					
ANR	4064362	Identifier	node		4064330	0					
ANR	4064363	Identifier	value		4064330	1					
ANR	4064364	ReturnType	static bool		4064330	1					
ANR	4064365	Identifier	cb_asmparser		4064330	2					
ANR	4064366	ParameterList	"void * user , void * data"		4064330	3					
ANR	4064367	Parameter	void * user	845:25:23645:23654	4064330	0	True				
ANR	4064368	ParameterType	void *		4064330	0					
ANR	4064369	Identifier	user		4064330	1					
ANR	4064370	Parameter	void * data	845:37:23657:23666	4064330	1	True				
ANR	4064371	ParameterType	void *		4064330	0					
ANR	4064372	Identifier	data		4064330	1					
ANR	4064373	CFGEntryNode	ENTRY		4064330		True				
ANR	4064374	CFGExitNode	EXIT		4064330		True				
ANR	4064375	Symbol	core		4064330						
ANR	4064376	Symbol	node		4064330						
ANR	4064377	Symbol	core -> parser		4064330						
ANR	4064378	Symbol	data		4064330						
ANR	4064379	Symbol	r_parse_use		4064330						
ANR	4064380	Symbol	* core		4064330						
ANR	4064381	Symbol	* node		4064330						
ANR	4064382	Symbol	user		4064330						
ANR	4064383	Symbol	node -> value		4064330						
ANR	4064384	Function	cb_binstrenc	851:0:23795:24215							
ANR	4064385	FunctionDef	"cb_binstrenc (void * user , void * data)"		4064384	0					
ANR	4064386	CompoundStatement		851:50:23845:24215	4064384	0					
ANR	4064387	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	852:1:23848:23887	4064384	0	True				
ANR	4064388	IdentifierDecl	* node = ( RConfigNode * ) data		4064384	0					
ANR	4064389	IdentifierDeclType	RConfigNode *		4064384	0					
ANR	4064390	Identifier	node		4064384	1					
ANR	4064391	AssignmentExpression	* node = ( RConfigNode * ) data		4064384	2		=			
ANR	4064392	Identifier	node		4064384	0					
ANR	4064393	CastExpression	( RConfigNode * ) data		4064384	1					
ANR	4064394	CastTarget	RConfigNode *		4064384	0					
ANR	4064395	Identifier	data		4064384	1					
ANR	4064396	IfStatement	if ( node -> value [ 0 ] == '?' )		4064384	1					
ANR	4064397	Condition	node -> value [ 0 ] == '?'	853:5:23894:23914	4064384	0	True				
ANR	4064398	EqualityExpression	node -> value [ 0 ] == '?'		4064384	0		==			
ANR	4064399	ArrayIndexing	node -> value [ 0 ]		4064384	0					
ANR	4064400	PtrMemberAccess	node -> value		4064384	0					
ANR	4064401	Identifier	node		4064384	0					
ANR	4064402	Identifier	value		4064384	1					
ANR	4064403	PrimaryExpression	0		4064384	1					
ANR	4064404	PrimaryExpression	'?'		4064384	1					
ANR	4064405	CompoundStatement		3:28:71:71	4064384	1					
ANR	4064406	ExpressionStatement	print_node_options ( node )	854:2:23921:23946	4064384	0	True				
ANR	4064407	CallExpression	print_node_options ( node )		4064384	0					
ANR	4064408	Callee	print_node_options		4064384	0					
ANR	4064409	Identifier	print_node_options		4064384	0					
ANR	4064410	ArgumentList	node		4064384	1					
ANR	4064411	Argument	node		4064384	0					
ANR	4064412	Identifier	node		4064384	0					
ANR	4064413	Statement	r_cons_printf	855:2:23950:23962	4064384	1	True				
ANR	4064414	Statement	(	855:16:23964:23964	4064384	2	True				
ANR	4064415	Statement	"""  -- if string's 2nd & 4th bytes are 0 then utf16le else """	855:17:23965:24023	4064384	3	True				
ANR	4064416	Statement	"""if 2nd - 4th & 6th bytes are 0 & no char > 0x10ffff then utf32le else """	856:17:24042:24113	4064384	4	True				
ANR	4064417	Statement	"""if utf8 char detected then utf8 else latin1\\n"""	857:17:24132:24178	4064384	5	True				
ANR	4064418	Statement	)	857:64:24179:24179	4064384	6	True				
ANR	4064419	ExpressionStatement		857:65:24180:24180	4064384	7	True				
ANR	4064420	ReturnStatement	return false ;	858:2:24184:24196	4064384	8	True				
ANR	4064421	Identifier	false		4064384	0					
ANR	4064422	ReturnStatement	return true ;	860:1:24202:24213	4064384	2	True				
ANR	4064423	Identifier	true		4064384	0					
ANR	4064424	ReturnType	static bool		4064384	1					
ANR	4064425	Identifier	cb_binstrenc		4064384	2					
ANR	4064426	ParameterList	"void * user , void * data"		4064384	3					
ANR	4064427	Parameter	void * user	851:26:23821:23830	4064384	0	True				
ANR	4064428	ParameterType	void *		4064384	0					
ANR	4064429	Identifier	user		4064384	1					
ANR	4064430	Parameter	void * data	851:38:23833:23842	4064384	1	True				
ANR	4064431	ParameterType	void *		4064384	0					
ANR	4064432	Identifier	data		4064384	1					
ANR	4064433	CFGEntryNode	ENTRY		4064384		True				
ANR	4064434	CFGExitNode	EXIT		4064384		True				
ANR	4064435	Symbol	node		4064384						
ANR	4064436	Symbol	* node -> value		4064384						
ANR	4064437	Symbol	data		4064384						
ANR	4064438	Symbol	* * node		4064384						
ANR	4064439	Symbol	false		4064384						
ANR	4064440	Symbol	true		4064384						
ANR	4064441	Symbol	* node		4064384						
ANR	4064442	Symbol	user		4064384						
ANR	4064443	Symbol	node -> value		4064384						
ANR	4064444	Function	cb_binfilter	863:0:24218:24391							
ANR	4064445	FunctionDef	"cb_binfilter (void * user , void * data)"		4064444	0					
ANR	4064446	CompoundStatement		863:49:24267:24391	4064444	0					
ANR	4064447	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	864:1:24270:24297	4064444	0	True				
ANR	4064448	IdentifierDecl	* core = ( RCore * ) user		4064444	0					
ANR	4064449	IdentifierDeclType	RCore *		4064444	0					
ANR	4064450	Identifier	core		4064444	1					
ANR	4064451	AssignmentExpression	* core = ( RCore * ) user		4064444	2		=			
ANR	4064452	Identifier	core		4064444	0					
ANR	4064453	CastExpression	( RCore * ) user		4064444	1					
ANR	4064454	CastTarget	RCore *		4064444	0					
ANR	4064455	Identifier	user		4064444	1					
ANR	4064456	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	865:1:24300:24339	4064444	1	True				
ANR	4064457	IdentifierDecl	* node = ( RConfigNode * ) data		4064444	0					
ANR	4064458	IdentifierDeclType	RConfigNode *		4064444	0					
ANR	4064459	Identifier	node		4064444	1					
ANR	4064460	AssignmentExpression	* node = ( RConfigNode * ) data		4064444	2		=			
ANR	4064461	Identifier	node		4064444	0					
ANR	4064462	CastExpression	( RConfigNode * ) data		4064444	1					
ANR	4064463	CastTarget	RConfigNode *		4064444	0					
ANR	4064464	Identifier	data		4064444	1					
ANR	4064465	ExpressionStatement	core -> bin -> filter = node -> i_value	866:1:24342:24375	4064444	2	True				
ANR	4064466	AssignmentExpression	core -> bin -> filter = node -> i_value		4064444	0		=			
ANR	4064467	PtrMemberAccess	core -> bin -> filter		4064444	0					
ANR	4064468	PtrMemberAccess	core -> bin		4064444	0					
ANR	4064469	Identifier	core		4064444	0					
ANR	4064470	Identifier	bin		4064444	1					
ANR	4064471	Identifier	filter		4064444	1					
ANR	4064472	PtrMemberAccess	node -> i_value		4064444	1					
ANR	4064473	Identifier	node		4064444	0					
ANR	4064474	Identifier	i_value		4064444	1					
ANR	4064475	ReturnStatement	return true ;	867:1:24378:24389	4064444	3	True				
ANR	4064476	Identifier	true		4064444	0					
ANR	4064477	ReturnType	static bool		4064444	1					
ANR	4064478	Identifier	cb_binfilter		4064444	2					
ANR	4064479	ParameterList	"void * user , void * data"		4064444	3					
ANR	4064480	Parameter	void * user	863:25:24243:24252	4064444	0	True				
ANR	4064481	ParameterType	void *		4064444	0					
ANR	4064482	Identifier	user		4064444	1					
ANR	4064483	Parameter	void * data	863:37:24255:24264	4064444	1	True				
ANR	4064484	ParameterType	void *		4064444	0					
ANR	4064485	Identifier	data		4064444	1					
ANR	4064486	CFGEntryNode	ENTRY		4064444		True				
ANR	4064487	CFGExitNode	EXIT		4064444		True				
ANR	4064488	Symbol	core		4064444						
ANR	4064489	Symbol	node		4064444						
ANR	4064490	Symbol	data		4064444						
ANR	4064491	Symbol	core -> bin -> filter		4064444						
ANR	4064492	Symbol	* core		4064444						
ANR	4064493	Symbol	true		4064444						
ANR	4064494	Symbol	* node		4064444						
ANR	4064495	Symbol	* core -> bin		4064444						
ANR	4064496	Symbol	user		4064444						
ANR	4064497	Symbol	core -> bin		4064444						
ANR	4064498	Symbol	* * core		4064444						
ANR	4064499	Symbol	node -> i_value		4064444						
ANR	4064500	Function	cb_bdc	871:0:24415:24588							
ANR	4064501	FunctionDef	"cb_bdc (void * user , void * data)"		4064500	0					
ANR	4064502	CompoundStatement		871:43:24458:24588	4064500	0					
ANR	4064503	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	872:1:24461:24488	4064500	0	True				
ANR	4064504	IdentifierDecl	* core = ( RCore * ) user		4064500	0					
ANR	4064505	IdentifierDeclType	RCore *		4064500	0					
ANR	4064506	Identifier	core		4064500	1					
ANR	4064507	AssignmentExpression	* core = ( RCore * ) user		4064500	2		=			
ANR	4064508	Identifier	core		4064500	0					
ANR	4064509	CastExpression	( RCore * ) user		4064500	1					
ANR	4064510	CastTarget	RCore *		4064500	0					
ANR	4064511	Identifier	user		4064500	1					
ANR	4064512	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	873:1:24491:24530	4064500	1	True				
ANR	4064513	IdentifierDecl	* node = ( RConfigNode * ) data		4064500	0					
ANR	4064514	IdentifierDeclType	RConfigNode *		4064500	0					
ANR	4064515	Identifier	node		4064500	1					
ANR	4064516	AssignmentExpression	* node = ( RConfigNode * ) data		4064500	2		=			
ANR	4064517	Identifier	node		4064500	0					
ANR	4064518	CastExpression	( RConfigNode * ) data		4064500	1					
ANR	4064519	CastTarget	RConfigNode *		4064500	0					
ANR	4064520	Identifier	data		4064500	1					
ANR	4064521	ExpressionStatement	core -> bin -> demanglercmd = node -> i_value	874:1:24533:24572	4064500	2	True				
ANR	4064522	AssignmentExpression	core -> bin -> demanglercmd = node -> i_value		4064500	0		=			
ANR	4064523	PtrMemberAccess	core -> bin -> demanglercmd		4064500	0					
ANR	4064524	PtrMemberAccess	core -> bin		4064500	0					
ANR	4064525	Identifier	core		4064500	0					
ANR	4064526	Identifier	bin		4064500	1					
ANR	4064527	Identifier	demanglercmd		4064500	1					
ANR	4064528	PtrMemberAccess	node -> i_value		4064500	1					
ANR	4064529	Identifier	node		4064500	0					
ANR	4064530	Identifier	i_value		4064500	1					
ANR	4064531	ReturnStatement	return true ;	875:1:24575:24586	4064500	3	True				
ANR	4064532	Identifier	true		4064500	0					
ANR	4064533	ReturnType	static bool		4064500	1					
ANR	4064534	Identifier	cb_bdc		4064500	2					
ANR	4064535	ParameterList	"void * user , void * data"		4064500	3					
ANR	4064536	Parameter	void * user	871:19:24434:24443	4064500	0	True				
ANR	4064537	ParameterType	void *		4064500	0					
ANR	4064538	Identifier	user		4064500	1					
ANR	4064539	Parameter	void * data	871:31:24446:24455	4064500	1	True				
ANR	4064540	ParameterType	void *		4064500	0					
ANR	4064541	Identifier	data		4064500	1					
ANR	4064542	CFGEntryNode	ENTRY		4064500		True				
ANR	4064543	CFGExitNode	EXIT		4064500		True				
ANR	4064544	Symbol	core		4064500						
ANR	4064545	Symbol	node		4064500						
ANR	4064546	Symbol	core -> bin -> demanglercmd		4064500						
ANR	4064547	Symbol	data		4064500						
ANR	4064548	Symbol	* core		4064500						
ANR	4064549	Symbol	true		4064500						
ANR	4064550	Symbol	* node		4064500						
ANR	4064551	Symbol	* core -> bin		4064500						
ANR	4064552	Symbol	user		4064500						
ANR	4064553	Symbol	core -> bin		4064500						
ANR	4064554	Symbol	* * core		4064500						
ANR	4064555	Symbol	node -> i_value		4064500						
ANR	4064556	Function	cb_useldr	878:0:24591:24762							
ANR	4064557	FunctionDef	"cb_useldr (void * user , void * data)"		4064556	0					
ANR	4064558	CompoundStatement		878:46:24637:24762	4064556	0					
ANR	4064559	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	879:1:24640:24667	4064556	0	True				
ANR	4064560	IdentifierDecl	* core = ( RCore * ) user		4064556	0					
ANR	4064561	IdentifierDeclType	RCore *		4064556	0					
ANR	4064562	Identifier	core		4064556	1					
ANR	4064563	AssignmentExpression	* core = ( RCore * ) user		4064556	2		=			
ANR	4064564	Identifier	core		4064556	0					
ANR	4064565	CastExpression	( RCore * ) user		4064556	1					
ANR	4064566	CastTarget	RCore *		4064556	0					
ANR	4064567	Identifier	user		4064556	1					
ANR	4064568	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	880:1:24670:24709	4064556	1	True				
ANR	4064569	IdentifierDecl	* node = ( RConfigNode * ) data		4064556	0					
ANR	4064570	IdentifierDeclType	RConfigNode *		4064556	0					
ANR	4064571	Identifier	node		4064556	1					
ANR	4064572	AssignmentExpression	* node = ( RConfigNode * ) data		4064556	2		=			
ANR	4064573	Identifier	node		4064556	0					
ANR	4064574	CastExpression	( RConfigNode * ) data		4064556	1					
ANR	4064575	CastTarget	RConfigNode *		4064556	0					
ANR	4064576	Identifier	data		4064556	1					
ANR	4064577	ExpressionStatement	core -> bin -> use_ldr = node -> i_value	881:1:24712:24746	4064556	2	True				
ANR	4064578	AssignmentExpression	core -> bin -> use_ldr = node -> i_value		4064556	0		=			
ANR	4064579	PtrMemberAccess	core -> bin -> use_ldr		4064556	0					
ANR	4064580	PtrMemberAccess	core -> bin		4064556	0					
ANR	4064581	Identifier	core		4064556	0					
ANR	4064582	Identifier	bin		4064556	1					
ANR	4064583	Identifier	use_ldr		4064556	1					
ANR	4064584	PtrMemberAccess	node -> i_value		4064556	1					
ANR	4064585	Identifier	node		4064556	0					
ANR	4064586	Identifier	i_value		4064556	1					
ANR	4064587	ReturnStatement	return true ;	882:1:24749:24760	4064556	3	True				
ANR	4064588	Identifier	true		4064556	0					
ANR	4064589	ReturnType	static bool		4064556	1					
ANR	4064590	Identifier	cb_useldr		4064556	2					
ANR	4064591	ParameterList	"void * user , void * data"		4064556	3					
ANR	4064592	Parameter	void * user	878:22:24613:24622	4064556	0	True				
ANR	4064593	ParameterType	void *		4064556	0					
ANR	4064594	Identifier	user		4064556	1					
ANR	4064595	Parameter	void * data	878:34:24625:24634	4064556	1	True				
ANR	4064596	ParameterType	void *		4064556	0					
ANR	4064597	Identifier	data		4064556	1					
ANR	4064598	CFGEntryNode	ENTRY		4064556		True				
ANR	4064599	CFGExitNode	EXIT		4064556		True				
ANR	4064600	Symbol	core		4064556						
ANR	4064601	Symbol	node		4064556						
ANR	4064602	Symbol	data		4064556						
ANR	4064603	Symbol	* core		4064556						
ANR	4064604	Symbol	true		4064556						
ANR	4064605	Symbol	* node		4064556						
ANR	4064606	Symbol	core -> bin -> use_ldr		4064556						
ANR	4064607	Symbol	* core -> bin		4064556						
ANR	4064608	Symbol	user		4064556						
ANR	4064609	Symbol	core -> bin		4064556						
ANR	4064610	Symbol	* * core		4064556						
ANR	4064611	Symbol	node -> i_value		4064556						
ANR	4064612	Function	cb_binat	885:0:24765:24928							
ANR	4064613	FunctionDef	"cb_binat (void * user , void * data)"		4064612	0					
ANR	4064614	CompoundStatement		885:45:24810:24928	4064612	0					
ANR	4064615	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	886:1:24813:24840	4064612	0	True				
ANR	4064616	IdentifierDecl	* core = ( RCore * ) user		4064612	0					
ANR	4064617	IdentifierDeclType	RCore *		4064612	0					
ANR	4064618	Identifier	core		4064612	1					
ANR	4064619	AssignmentExpression	* core = ( RCore * ) user		4064612	2		=			
ANR	4064620	Identifier	core		4064612	0					
ANR	4064621	CastExpression	( RCore * ) user		4064612	1					
ANR	4064622	CastTarget	RCore *		4064612	0					
ANR	4064623	Identifier	user		4064612	1					
ANR	4064624	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	887:1:24843:24882	4064612	1	True				
ANR	4064625	IdentifierDecl	* node = ( RConfigNode * ) data		4064612	0					
ANR	4064626	IdentifierDeclType	RConfigNode *		4064612	0					
ANR	4064627	Identifier	node		4064612	1					
ANR	4064628	AssignmentExpression	* node = ( RConfigNode * ) data		4064612	2		=			
ANR	4064629	Identifier	node		4064612	0					
ANR	4064630	CastExpression	( RConfigNode * ) data		4064612	1					
ANR	4064631	CastTarget	RConfigNode *		4064612	0					
ANR	4064632	Identifier	data		4064612	1					
ANR	4064633	ExpressionStatement	core -> binat = node -> i_value	888:1:24885:24912	4064612	2	True				
ANR	4064634	AssignmentExpression	core -> binat = node -> i_value		4064612	0		=			
ANR	4064635	PtrMemberAccess	core -> binat		4064612	0					
ANR	4064636	Identifier	core		4064612	0					
ANR	4064637	Identifier	binat		4064612	1					
ANR	4064638	PtrMemberAccess	node -> i_value		4064612	1					
ANR	4064639	Identifier	node		4064612	0					
ANR	4064640	Identifier	i_value		4064612	1					
ANR	4064641	ReturnStatement	return true ;	889:1:24915:24926	4064612	3	True				
ANR	4064642	Identifier	true		4064612	0					
ANR	4064643	ReturnType	static bool		4064612	1					
ANR	4064644	Identifier	cb_binat		4064612	2					
ANR	4064645	ParameterList	"void * user , void * data"		4064612	3					
ANR	4064646	Parameter	void * user	885:21:24786:24795	4064612	0	True				
ANR	4064647	ParameterType	void *		4064612	0					
ANR	4064648	Identifier	user		4064612	1					
ANR	4064649	Parameter	void * data	885:33:24798:24807	4064612	1	True				
ANR	4064650	ParameterType	void *		4064612	0					
ANR	4064651	Identifier	data		4064612	1					
ANR	4064652	CFGEntryNode	ENTRY		4064612		True				
ANR	4064653	CFGExitNode	EXIT		4064612		True				
ANR	4064654	Symbol	core		4064612						
ANR	4064655	Symbol	node		4064612						
ANR	4064656	Symbol	data		4064612						
ANR	4064657	Symbol	core -> binat		4064612						
ANR	4064658	Symbol	* core		4064612						
ANR	4064659	Symbol	true		4064612						
ANR	4064660	Symbol	* node		4064612						
ANR	4064661	Symbol	user		4064612						
ANR	4064662	Symbol	node -> i_value		4064612						
ANR	4064663	Function	cb_usextr	892:0:24931:25102							
ANR	4064664	FunctionDef	"cb_usextr (void * user , void * data)"		4064663	0					
ANR	4064665	CompoundStatement		892:46:24977:25102	4064663	0					
ANR	4064666	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	893:1:24980:25007	4064663	0	True				
ANR	4064667	IdentifierDecl	* core = ( RCore * ) user		4064663	0					
ANR	4064668	IdentifierDeclType	RCore *		4064663	0					
ANR	4064669	Identifier	core		4064663	1					
ANR	4064670	AssignmentExpression	* core = ( RCore * ) user		4064663	2		=			
ANR	4064671	Identifier	core		4064663	0					
ANR	4064672	CastExpression	( RCore * ) user		4064663	1					
ANR	4064673	CastTarget	RCore *		4064663	0					
ANR	4064674	Identifier	user		4064663	1					
ANR	4064675	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	894:1:25010:25049	4064663	1	True				
ANR	4064676	IdentifierDecl	* node = ( RConfigNode * ) data		4064663	0					
ANR	4064677	IdentifierDeclType	RConfigNode *		4064663	0					
ANR	4064678	Identifier	node		4064663	1					
ANR	4064679	AssignmentExpression	* node = ( RConfigNode * ) data		4064663	2		=			
ANR	4064680	Identifier	node		4064663	0					
ANR	4064681	CastExpression	( RConfigNode * ) data		4064663	1					
ANR	4064682	CastTarget	RConfigNode *		4064663	0					
ANR	4064683	Identifier	data		4064663	1					
ANR	4064684	ExpressionStatement	core -> bin -> use_xtr = node -> i_value	895:1:25052:25086	4064663	2	True				
ANR	4064685	AssignmentExpression	core -> bin -> use_xtr = node -> i_value		4064663	0		=			
ANR	4064686	PtrMemberAccess	core -> bin -> use_xtr		4064663	0					
ANR	4064687	PtrMemberAccess	core -> bin		4064663	0					
ANR	4064688	Identifier	core		4064663	0					
ANR	4064689	Identifier	bin		4064663	1					
ANR	4064690	Identifier	use_xtr		4064663	1					
ANR	4064691	PtrMemberAccess	node -> i_value		4064663	1					
ANR	4064692	Identifier	node		4064663	0					
ANR	4064693	Identifier	i_value		4064663	1					
ANR	4064694	ReturnStatement	return true ;	896:1:25089:25100	4064663	3	True				
ANR	4064695	Identifier	true		4064663	0					
ANR	4064696	ReturnType	static bool		4064663	1					
ANR	4064697	Identifier	cb_usextr		4064663	2					
ANR	4064698	ParameterList	"void * user , void * data"		4064663	3					
ANR	4064699	Parameter	void * user	892:22:24953:24962	4064663	0	True				
ANR	4064700	ParameterType	void *		4064663	0					
ANR	4064701	Identifier	user		4064663	1					
ANR	4064702	Parameter	void * data	892:34:24965:24974	4064663	1	True				
ANR	4064703	ParameterType	void *		4064663	0					
ANR	4064704	Identifier	data		4064663	1					
ANR	4064705	CFGEntryNode	ENTRY		4064663		True				
ANR	4064706	CFGExitNode	EXIT		4064663		True				
ANR	4064707	Symbol	core		4064663						
ANR	4064708	Symbol	node		4064663						
ANR	4064709	Symbol	data		4064663						
ANR	4064710	Symbol	core -> bin -> use_xtr		4064663						
ANR	4064711	Symbol	* core		4064663						
ANR	4064712	Symbol	true		4064663						
ANR	4064713	Symbol	* node		4064663						
ANR	4064714	Symbol	* core -> bin		4064663						
ANR	4064715	Symbol	user		4064663						
ANR	4064716	Symbol	core -> bin		4064663						
ANR	4064717	Symbol	* * core		4064663						
ANR	4064718	Symbol	node -> i_value		4064663						
ANR	4064719	Function	cb_strpurge	899:0:25105:26449							
ANR	4064720	FunctionDef	"cb_strpurge (void * user , void * data)"		4064719	0					
ANR	4064721	CompoundStatement		899:48:25153:26449	4064719	0					
ANR	4064722	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	900:1:25156:25183	4064719	0	True				
ANR	4064723	IdentifierDecl	* core = ( RCore * ) user		4064719	0					
ANR	4064724	IdentifierDeclType	RCore *		4064719	0					
ANR	4064725	Identifier	core		4064719	1					
ANR	4064726	AssignmentExpression	* core = ( RCore * ) user		4064719	2		=			
ANR	4064727	Identifier	core		4064719	0					
ANR	4064728	CastExpression	( RCore * ) user		4064719	1					
ANR	4064729	CastTarget	RCore *		4064719	0					
ANR	4064730	Identifier	user		4064719	1					
ANR	4064731	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	901:1:25186:25225	4064719	1	True				
ANR	4064732	IdentifierDecl	* node = ( RConfigNode * ) data		4064719	0					
ANR	4064733	IdentifierDeclType	RConfigNode *		4064719	0					
ANR	4064734	Identifier	node		4064719	1					
ANR	4064735	AssignmentExpression	* node = ( RConfigNode * ) data		4064719	2		=			
ANR	4064736	Identifier	node		4064719	0					
ANR	4064737	CastExpression	( RConfigNode * ) data		4064719	1					
ANR	4064738	CastTarget	RConfigNode *		4064719	0					
ANR	4064739	Identifier	data		4064719	1					
ANR	4064740	IfStatement	if ( * node -> value == '?' )		4064719	2					
ANR	4064741	Condition	* node -> value == '?'	902:5:25232:25250	4064719	0	True				
ANR	4064742	EqualityExpression	* node -> value == '?'		4064719	0		==			
ANR	4064743	UnaryOperationExpression	* node -> value		4064719	0					
ANR	4064744	UnaryOperator	*		4064719	0					
ANR	4064745	PtrMemberAccess	node -> value		4064719	1					
ANR	4064746	Identifier	node		4064719	0					
ANR	4064747	Identifier	value		4064719	1					
ANR	4064748	PrimaryExpression	'?'		4064719	1					
ANR	4064749	CompoundStatement		4:26:99:99	4064719	1					
ANR	4064750	Statement	r_cons_printf	903:2:25257:25269	4064719	0	True				
ANR	4064751	Statement	(	903:16:25271:25271	4064719	1	True				
ANR	4064752	Statement	"""There can be multiple entries separated by commas. No whitespace before/after entries.\\n"""	904:6:25279:25368	4064719	2	True				
ANR	4064753	Statement	"""Possible entries:\\n"""	905:6:25376:25396	4064719	3	True				
ANR	4064754	Statement	"""  all          : purge all strings\\n"""	906:6:25404:25441	4064719	4	True				
ANR	4064755	Statement	"""  true         : use the false_positive() classifier in cbin.c\\n"""	907:6:25449:25514	4064719	5	True				
ANR	4064756	Statement	"""  addr         : purge string at addr\\n"""	908:6:25522:25562	4064719	6	True				
ANR	4064757	Statement	"""  addr1-addr2  : purge all strings in the range addr1-addr2 inclusive\\n"""	909:6:25570:25642	4064719	7	True				
ANR	4064758	Statement	"""  !addr        : prevent purge of string at addr by prev entries\\n"""	910:6:25650:25717	4064719	8	True				
ANR	4064759	Statement	"""  !addr1-addr2 : prevent purge of strings in range addr1-addr2 inclusive by prev entries\\n"""	911:6:25725:25816	4064719	9	True				
ANR	4064760	Statement	"""Neither !true nor !false is supported.\\n"""	912:6:25824:25865	4064719	10	True				
ANR	4064761	Statement	"""\\n"""	913:6:25873:25876	4064719	11	True				
ANR	4064762	Statement	"""Examples:\\n"""	914:6:25884:25896	4064719	12	True				
ANR	4064763	Statement	"""  e bin.str.purge=true,0-0xff,!0x1a\\n"""	915:6:25904:25942	4064719	13	True				
ANR	4064764	Statement	"""    -- purge strings using the false_positive() classifier in cbin.c and also strings \\n"""	916:6:25950:26039	4064719	14	True				
ANR	4064765	Statement	"""       with addresses in the range 0-0xff, but not the string at 0x1a.\\n"""	917:6:26047:26120	4064719	15	True				
ANR	4064766	Statement	"""  e bin.str.purge=all,!0x1000-0x1fff\\n"""	918:6:26128:26167	4064719	16	True				
ANR	4064767	Statement	"""    -- purge all strings except the strings with addresses in the range 0x1000-0x1fff.\\n"""	919:6:26175:26264	4064719	17	True				
ANR	4064768	Statement	)	919:96:26265:26265	4064719	18	True				
ANR	4064769	ExpressionStatement		919:97:26266:26266	4064719	19	True				
ANR	4064770	ReturnStatement	return false ;	920:2:26270:26282	4064719	20	True				
ANR	4064771	Identifier	false		4064719	0					
ANR	4064772	ExpressionStatement	free ( core -> bin -> strpurge )	922:1:26288:26314	4064719	3	True				
ANR	4064773	CallExpression	free ( core -> bin -> strpurge )		4064719	0					
ANR	4064774	Callee	free		4064719	0					
ANR	4064775	Identifier	free		4064719	0					
ANR	4064776	ArgumentList	core -> bin -> strpurge		4064719	1					
ANR	4064777	Argument	core -> bin -> strpurge		4064719	0					
ANR	4064778	PtrMemberAccess	core -> bin -> strpurge		4064719	0					
ANR	4064779	PtrMemberAccess	core -> bin		4064719	0					
ANR	4064780	Identifier	core		4064719	0					
ANR	4064781	Identifier	bin		4064719	1					
ANR	4064782	Identifier	strpurge		4064719	1					
ANR	4064783	ExpressionStatement	"core -> bin -> strpurge = ! * node -> value || ! strcmp ( node -> value , ""false"" ) ? NULL : strdup ( node -> value )"	923:1:26317:26433	4064719	4	True				
ANR	4064784	AssignmentExpression	"core -> bin -> strpurge = ! * node -> value || ! strcmp ( node -> value , ""false"" ) ? NULL : strdup ( node -> value )"		4064719	0		=			
ANR	4064785	PtrMemberAccess	core -> bin -> strpurge		4064719	0					
ANR	4064786	PtrMemberAccess	core -> bin		4064719	0					
ANR	4064787	Identifier	core		4064719	0					
ANR	4064788	Identifier	bin		4064719	1					
ANR	4064789	Identifier	strpurge		4064719	1					
ANR	4064790	ConditionalExpression	"! * node -> value || ! strcmp ( node -> value , ""false"" ) ? NULL : strdup ( node -> value )"		4064719	1					
ANR	4064791	Condition	"! * node -> value || ! strcmp ( node -> value , ""false"" )"		4064719	0					
ANR	4064792	OrExpression	"! * node -> value || ! strcmp ( node -> value , ""false"" )"		4064719	0		||			
ANR	4064793	UnaryOperationExpression	! * node -> value		4064719	0					
ANR	4064794	UnaryOperator	!		4064719	0					
ANR	4064795	UnaryOperationExpression	* node -> value		4064719	1					
ANR	4064796	UnaryOperator	*		4064719	0					
ANR	4064797	PtrMemberAccess	node -> value		4064719	1					
ANR	4064798	Identifier	node		4064719	0					
ANR	4064799	Identifier	value		4064719	1					
ANR	4064800	UnaryOperationExpression	"! strcmp ( node -> value , ""false"" )"		4064719	1					
ANR	4064801	UnaryOperator	!		4064719	0					
ANR	4064802	CallExpression	"strcmp ( node -> value , ""false"" )"		4064719	1					
ANR	4064803	Callee	strcmp		4064719	0					
ANR	4064804	Identifier	strcmp		4064719	0					
ANR	4064805	ArgumentList	node -> value		4064719	1					
ANR	4064806	Argument	node -> value		4064719	0					
ANR	4064807	PtrMemberAccess	node -> value		4064719	0					
ANR	4064808	Identifier	node		4064719	0					
ANR	4064809	Identifier	value		4064719	1					
ANR	4064810	Argument	"""false"""		4064719	1					
ANR	4064811	PrimaryExpression	"""false"""		4064719	0					
ANR	4064812	Identifier	NULL		4064719	1					
ANR	4064813	CallExpression	strdup ( node -> value )		4064719	2					
ANR	4064814	Callee	strdup		4064719	0					
ANR	4064815	Identifier	strdup		4064719	0					
ANR	4064816	ArgumentList	node -> value		4064719	1					
ANR	4064817	Argument	node -> value		4064719	0					
ANR	4064818	PtrMemberAccess	node -> value		4064719	0					
ANR	4064819	Identifier	node		4064719	0					
ANR	4064820	Identifier	value		4064719	1					
ANR	4064821	ReturnStatement	return true ;	925:1:26436:26447	4064719	5	True				
ANR	4064822	Identifier	true		4064719	0					
ANR	4064823	ReturnType	static bool		4064719	1					
ANR	4064824	Identifier	cb_strpurge		4064719	2					
ANR	4064825	ParameterList	"void * user , void * data"		4064719	3					
ANR	4064826	Parameter	void * user	899:24:25129:25138	4064719	0	True				
ANR	4064827	ParameterType	void *		4064719	0					
ANR	4064828	Identifier	user		4064719	1					
ANR	4064829	Parameter	void * data	899:36:25141:25150	4064719	1	True				
ANR	4064830	ParameterType	void *		4064719	0					
ANR	4064831	Identifier	data		4064719	1					
ANR	4064832	CFGEntryNode	ENTRY		4064719		True				
ANR	4064833	CFGExitNode	EXIT		4064719		True				
ANR	4064834	Symbol	strcmp		4064719						
ANR	4064835	Symbol	* node -> value		4064719						
ANR	4064836	Symbol	NULL		4064719						
ANR	4064837	Symbol	data		4064719						
ANR	4064838	Symbol	false		4064719						
ANR	4064839	Symbol	* core		4064719						
ANR	4064840	Symbol	node -> value		4064719						
ANR	4064841	Symbol	core		4064719						
ANR	4064842	Symbol	node		4064719						
ANR	4064843	Symbol	* * node		4064719						
ANR	4064844	Symbol	core -> bin -> strpurge		4064719						
ANR	4064845	Symbol	true		4064719						
ANR	4064846	Symbol	* node		4064719						
ANR	4064847	Symbol	* core -> bin		4064719						
ANR	4064848	Symbol	strdup		4064719						
ANR	4064849	Symbol	user		4064719						
ANR	4064850	Symbol	core -> bin		4064719						
ANR	4064851	Symbol	* * core		4064719						
ANR	4064852	Function	cb_maxname	928:0:26452:26636							
ANR	4064853	FunctionDef	"cb_maxname (void * user , void * data)"		4064852	0					
ANR	4064854	CompoundStatement		928:48:26500:26636	4064852	0					
ANR	4064855	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	929:1:26503:26542	4064852	0	True				
ANR	4064856	IdentifierDecl	* node = ( RConfigNode * ) data		4064852	0					
ANR	4064857	IdentifierDeclType	RConfigNode *		4064852	0					
ANR	4064858	Identifier	node		4064852	1					
ANR	4064859	AssignmentExpression	* node = ( RConfigNode * ) data		4064852	2		=			
ANR	4064860	Identifier	node		4064852	0					
ANR	4064861	CastExpression	( RConfigNode * ) data		4064852	1					
ANR	4064862	CastTarget	RConfigNode *		4064852	0					
ANR	4064863	Identifier	data		4064852	1					
ANR	4064864	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	930:1:26545:26573	4064852	1	True				
ANR	4064865	IdentifierDecl	* core = ( RCore * ) user		4064852	0					
ANR	4064866	IdentifierDeclType	RCore *		4064852	0					
ANR	4064867	Identifier	core		4064852	1					
ANR	4064868	AssignmentExpression	* core = ( RCore * ) user		4064852	2		=			
ANR	4064869	Identifier	core		4064852	0					
ANR	4064870	CastExpression	( RCore * ) user		4064852	1					
ANR	4064871	CastTarget	RCore *		4064852	0					
ANR	4064872	Identifier	user		4064852	1					
ANR	4064873	ExpressionStatement	core -> parser -> maxflagnamelen = node -> i_value	931:1:26576:26620	4064852	2	True				
ANR	4064874	AssignmentExpression	core -> parser -> maxflagnamelen = node -> i_value		4064852	0		=			
ANR	4064875	PtrMemberAccess	core -> parser -> maxflagnamelen		4064852	0					
ANR	4064876	PtrMemberAccess	core -> parser		4064852	0					
ANR	4064877	Identifier	core		4064852	0					
ANR	4064878	Identifier	parser		4064852	1					
ANR	4064879	Identifier	maxflagnamelen		4064852	1					
ANR	4064880	PtrMemberAccess	node -> i_value		4064852	1					
ANR	4064881	Identifier	node		4064852	0					
ANR	4064882	Identifier	i_value		4064852	1					
ANR	4064883	ReturnStatement	return true ;	932:1:26623:26634	4064852	3	True				
ANR	4064884	Identifier	true		4064852	0					
ANR	4064885	ReturnType	static bool		4064852	1					
ANR	4064886	Identifier	cb_maxname		4064852	2					
ANR	4064887	ParameterList	"void * user , void * data"		4064852	3					
ANR	4064888	Parameter	void * user	928:24:26476:26485	4064852	0	True				
ANR	4064889	ParameterType	void *		4064852	0					
ANR	4064890	Identifier	user		4064852	1					
ANR	4064891	Parameter	void * data	928:36:26488:26497	4064852	1	True				
ANR	4064892	ParameterType	void *		4064852	0					
ANR	4064893	Identifier	data		4064852	1					
ANR	4064894	CFGEntryNode	ENTRY		4064852		True				
ANR	4064895	CFGExitNode	EXIT		4064852		True				
ANR	4064896	Symbol	node		4064852						
ANR	4064897	Symbol	core		4064852						
ANR	4064898	Symbol	core -> parser		4064852						
ANR	4064899	Symbol	data		4064852						
ANR	4064900	Symbol	* core -> parser		4064852						
ANR	4064901	Symbol	* core		4064852						
ANR	4064902	Symbol	true		4064852						
ANR	4064903	Symbol	core -> parser -> maxflagnamelen		4064852						
ANR	4064904	Symbol	* node		4064852						
ANR	4064905	Symbol	user		4064852						
ANR	4064906	Symbol	* * core		4064852						
ANR	4064907	Symbol	node -> i_value		4064852						
ANR	4064908	Function	cb_midflags	935:0:26639:26824							
ANR	4064909	FunctionDef	"cb_midflags (void * user , void * data)"		4064908	0					
ANR	4064910	CompoundStatement		935:49:26688:26824	4064908	0					
ANR	4064911	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	936:1:26691:26730	4064908	0	True				
ANR	4064912	IdentifierDecl	* node = ( RConfigNode * ) data		4064908	0					
ANR	4064913	IdentifierDeclType	RConfigNode *		4064908	0					
ANR	4064914	Identifier	node		4064908	1					
ANR	4064915	AssignmentExpression	* node = ( RConfigNode * ) data		4064908	2		=			
ANR	4064916	Identifier	node		4064908	0					
ANR	4064917	CastExpression	( RConfigNode * ) data		4064908	1					
ANR	4064918	CastTarget	RConfigNode *		4064908	0					
ANR	4064919	Identifier	data		4064908	1					
ANR	4064920	IfStatement	if ( node -> value [ 0 ] == '?' )		4064908	1					
ANR	4064921	Condition	node -> value [ 0 ] == '?'	937:5:26737:26757	4064908	0	True				
ANR	4064922	EqualityExpression	node -> value [ 0 ] == '?'		4064908	0		==			
ANR	4064923	ArrayIndexing	node -> value [ 0 ]		4064908	0					
ANR	4064924	PtrMemberAccess	node -> value		4064908	0					
ANR	4064925	Identifier	node		4064908	0					
ANR	4064926	Identifier	value		4064908	1					
ANR	4064927	PrimaryExpression	0		4064908	1					
ANR	4064928	PrimaryExpression	'?'		4064908	1					
ANR	4064929	CompoundStatement		3:28:71:71	4064908	1					
ANR	4064930	ExpressionStatement	print_node_options ( node )	938:2:26764:26789	4064908	0	True				
ANR	4064931	CallExpression	print_node_options ( node )		4064908	0					
ANR	4064932	Callee	print_node_options		4064908	0					
ANR	4064933	Identifier	print_node_options		4064908	0					
ANR	4064934	ArgumentList	node		4064908	1					
ANR	4064935	Argument	node		4064908	0					
ANR	4064936	Identifier	node		4064908	0					
ANR	4064937	ReturnStatement	return false ;	939:2:26793:26805	4064908	1	True				
ANR	4064938	Identifier	false		4064908	0					
ANR	4064939	ReturnStatement	return true ;	941:1:26811:26822	4064908	2	True				
ANR	4064940	Identifier	true		4064908	0					
ANR	4064941	ReturnType	static bool		4064908	1					
ANR	4064942	Identifier	cb_midflags		4064908	2					
ANR	4064943	ParameterList	"void * user , void * data"		4064908	3					
ANR	4064944	Parameter	void * user	935:25:26664:26673	4064908	0	True				
ANR	4064945	ParameterType	void *		4064908	0					
ANR	4064946	Identifier	user		4064908	1					
ANR	4064947	Parameter	void * data	935:37:26676:26685	4064908	1	True				
ANR	4064948	ParameterType	void *		4064908	0					
ANR	4064949	Identifier	data		4064908	1					
ANR	4064950	CFGEntryNode	ENTRY		4064908		True				
ANR	4064951	CFGExitNode	EXIT		4064908		True				
ANR	4064952	Symbol	node		4064908						
ANR	4064953	Symbol	* node -> value		4064908						
ANR	4064954	Symbol	data		4064908						
ANR	4064955	Symbol	* * node		4064908						
ANR	4064956	Symbol	false		4064908						
ANR	4064957	Symbol	true		4064908						
ANR	4064958	Symbol	* node		4064908						
ANR	4064959	Symbol	user		4064908						
ANR	4064960	Symbol	node -> value		4064908						
ANR	4064961	Function	cb_strfilter	944:0:26827:27481							
ANR	4064962	FunctionDef	"cb_strfilter (void * user , void * data)"		4064961	0					
ANR	4064963	CompoundStatement		944:49:26876:27481	4064961	0					
ANR	4064964	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	945:1:26879:26906	4064961	0	True				
ANR	4064965	IdentifierDecl	* core = ( RCore * ) user		4064961	0					
ANR	4064966	IdentifierDeclType	RCore *		4064961	0					
ANR	4064967	Identifier	core		4064961	1					
ANR	4064968	AssignmentExpression	* core = ( RCore * ) user		4064961	2		=			
ANR	4064969	Identifier	core		4064961	0					
ANR	4064970	CastExpression	( RCore * ) user		4064961	1					
ANR	4064971	CastTarget	RCore *		4064961	0					
ANR	4064972	Identifier	user		4064961	1					
ANR	4064973	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	946:1:26909:26948	4064961	1	True				
ANR	4064974	IdentifierDecl	* node = ( RConfigNode * ) data		4064961	0					
ANR	4064975	IdentifierDeclType	RConfigNode *		4064961	0					
ANR	4064976	Identifier	node		4064961	1					
ANR	4064977	AssignmentExpression	* node = ( RConfigNode * ) data		4064961	2		=			
ANR	4064978	Identifier	node		4064961	0					
ANR	4064979	CastExpression	( RConfigNode * ) data		4064961	1					
ANR	4064980	CastTarget	RConfigNode *		4064961	0					
ANR	4064981	Identifier	data		4064961	1					
ANR	4064982	IfStatement	if ( node -> value [ 0 ] == '?' )		4064961	2					
ANR	4064983	Condition	node -> value [ 0 ] == '?'	947:5:26955:26975	4064961	0	True				
ANR	4064984	EqualityExpression	node -> value [ 0 ] == '?'		4064961	0		==			
ANR	4064985	ArrayIndexing	node -> value [ 0 ]		4064961	0					
ANR	4064986	PtrMemberAccess	node -> value		4064961	0					
ANR	4064987	Identifier	node		4064961	0					
ANR	4064988	Identifier	value		4064961	1					
ANR	4064989	PrimaryExpression	0		4064961	1					
ANR	4064990	PrimaryExpression	'?'		4064961	1					
ANR	4064991	CompoundStatement		4:28:101:101	4064961	1					
ANR	4064992	IfStatement	if ( strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?' )		4064961	0					
ANR	4064993	Condition	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'	948:6:26986:27034	4064961	0	True				
ANR	4064994	AndExpression	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'		4064961	0		&&			
ANR	4064995	RelationalExpression	strlen ( node -> value ) > 1		4064961	0		>			
ANR	4064996	CallExpression	strlen ( node -> value )		4064961	0					
ANR	4064997	Callee	strlen		4064961	0					
ANR	4064998	Identifier	strlen		4064961	0					
ANR	4064999	ArgumentList	node -> value		4064961	1					
ANR	4065000	Argument	node -> value		4064961	0					
ANR	4065001	PtrMemberAccess	node -> value		4064961	0					
ANR	4065002	Identifier	node		4064961	0					
ANR	4065003	Identifier	value		4064961	1					
ANR	4065004	PrimaryExpression	1		4064961	1					
ANR	4065005	EqualityExpression	node -> value [ 1 ] == '?'		4064961	1		==			
ANR	4065006	ArrayIndexing	node -> value [ 1 ]		4064961	0					
ANR	4065007	PtrMemberAccess	node -> value		4064961	0					
ANR	4065008	Identifier	node		4064961	0					
ANR	4065009	Identifier	value		4064961	1					
ANR	4065010	PrimaryExpression	1		4064961	1					
ANR	4065011	PrimaryExpression	'?'		4064961	1					
ANR	4065012	CompoundStatement		5:57:160:160	4064961	1					
ANR	4065013	Statement	r_cons_printf	949:3:27042:27054	4064961	0	True				
ANR	4065014	Statement	(	949:17:27056:27056	4064961	1	True				
ANR	4065015	Statement	"""Valid values for bin.str.filter:\\n"""	949:18:27057:27092	4064961	2	True				
ANR	4065016	Statement	"""a  only alphanumeric printable\\n"""	950:4:27098:27131	4064961	3	True				
ANR	4065017	Statement	"""8  only strings with utf8 chars\\n"""	951:4:27137:27171	4064961	4	True				
ANR	4065018	Statement	"""p  file/directory paths\\n"""	952:4:27177:27203	4064961	5	True				
ANR	4065019	Statement	"""e  email-like addresses\\n"""	953:4:27209:27235	4064961	6	True				
ANR	4065020	Statement	"""u  urls\\n"""	954:4:27241:27251	4064961	7	True				
ANR	4065021	Statement	"""i  IPv4 address-like strings\\n"""	955:4:27257:27288	4064961	8	True				
ANR	4065022	Statement	"""U  only uppercase strings\\n"""	956:4:27294:27322	4064961	9	True				
ANR	4065023	Statement	"""f  format-strings\\n"""	957:4:27328:27348	4064961	10	True				
ANR	4065024	Statement	)	957:25:27349:27349	4064961	11	True				
ANR	4065025	ExpressionStatement		957:26:27350:27350	4064961	12	True				
ANR	4065026	ElseStatement	else		4064961	0					
ANR	4065027	CompoundStatement		15:9:484:484	4064961	0					
ANR	4065028	ExpressionStatement	print_node_options ( node )	959:3:27366:27391	4064961	0	True				
ANR	4065029	CallExpression	print_node_options ( node )		4064961	0					
ANR	4065030	Callee	print_node_options		4064961	0					
ANR	4065031	Identifier	print_node_options		4064961	0					
ANR	4065032	ArgumentList	node		4064961	1					
ANR	4065033	Argument	node		4064961	0					
ANR	4065034	Identifier	node		4064961	0					
ANR	4065035	ReturnStatement	return false ;	961:2:27399:27411	4064961	1	True				
ANR	4065036	Identifier	false		4064961	0					
ANR	4065037	ElseStatement	else		4064961	0					
ANR	4065038	CompoundStatement		19:8:544:544	4064961	0					
ANR	4065039	ExpressionStatement	core -> bin -> strfilter = node -> value [ 0 ]	963:2:27425:27462	4064961	0	True				
ANR	4065040	AssignmentExpression	core -> bin -> strfilter = node -> value [ 0 ]		4064961	0		=			
ANR	4065041	PtrMemberAccess	core -> bin -> strfilter		4064961	0					
ANR	4065042	PtrMemberAccess	core -> bin		4064961	0					
ANR	4065043	Identifier	core		4064961	0					
ANR	4065044	Identifier	bin		4064961	1					
ANR	4065045	Identifier	strfilter		4064961	1					
ANR	4065046	ArrayIndexing	node -> value [ 0 ]		4064961	1					
ANR	4065047	PtrMemberAccess	node -> value		4064961	0					
ANR	4065048	Identifier	node		4064961	0					
ANR	4065049	Identifier	value		4064961	1					
ANR	4065050	PrimaryExpression	0		4064961	1					
ANR	4065051	ReturnStatement	return true ;	965:1:27468:27479	4064961	3	True				
ANR	4065052	Identifier	true		4064961	0					
ANR	4065053	ReturnType	static bool		4064961	1					
ANR	4065054	Identifier	cb_strfilter		4064961	2					
ANR	4065055	ParameterList	"void * user , void * data"		4064961	3					
ANR	4065056	Parameter	void * user	944:25:26852:26861	4064961	0	True				
ANR	4065057	ParameterType	void *		4064961	0					
ANR	4065058	Identifier	user		4064961	1					
ANR	4065059	Parameter	void * data	944:37:26864:26873	4064961	1	True				
ANR	4065060	ParameterType	void *		4064961	0					
ANR	4065061	Identifier	data		4064961	1					
ANR	4065062	CFGEntryNode	ENTRY		4064961		True				
ANR	4065063	CFGExitNode	EXIT		4064961		True				
ANR	4065064	Symbol	* node -> value		4064961						
ANR	4065065	Symbol	data		4064961						
ANR	4065066	Symbol	core -> bin -> strfilter		4064961						
ANR	4065067	Symbol	false		4064961						
ANR	4065068	Symbol	* core		4064961						
ANR	4065069	Symbol	node -> value		4064961						
ANR	4065070	Symbol	core		4064961						
ANR	4065071	Symbol	node		4064961						
ANR	4065072	Symbol	strlen		4064961						
ANR	4065073	Symbol	* * node		4064961						
ANR	4065074	Symbol	true		4064961						
ANR	4065075	Symbol	* node		4064961						
ANR	4065076	Symbol	* core -> bin		4064961						
ANR	4065077	Symbol	user		4064961						
ANR	4065078	Symbol	core -> bin		4064961						
ANR	4065079	Symbol	* * core		4064961						
ANR	4065080	Function	cb_binforce	968:0:27484:27666							
ANR	4065081	FunctionDef	"cb_binforce (void * user , void * data)"		4065080	0					
ANR	4065082	CompoundStatement		968:48:27532:27666	4065080	0					
ANR	4065083	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	969:1:27535:27562	4065080	0	True				
ANR	4065084	IdentifierDecl	* core = ( RCore * ) user		4065080	0					
ANR	4065085	IdentifierDeclType	RCore *		4065080	0					
ANR	4065086	Identifier	core		4065080	1					
ANR	4065087	AssignmentExpression	* core = ( RCore * ) user		4065080	2		=			
ANR	4065088	Identifier	core		4065080	0					
ANR	4065089	CastExpression	( RCore * ) user		4065080	1					
ANR	4065090	CastTarget	RCore *		4065080	0					
ANR	4065091	Identifier	user		4065080	1					
ANR	4065092	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	970:1:27565:27604	4065080	1	True				
ANR	4065093	IdentifierDecl	* node = ( RConfigNode * ) data		4065080	0					
ANR	4065094	IdentifierDeclType	RConfigNode *		4065080	0					
ANR	4065095	Identifier	node		4065080	1					
ANR	4065096	AssignmentExpression	* node = ( RConfigNode * ) data		4065080	2		=			
ANR	4065097	Identifier	node		4065080	0					
ANR	4065098	CastExpression	( RConfigNode * ) data		4065080	1					
ANR	4065099	CastTarget	RConfigNode *		4065080	0					
ANR	4065100	Identifier	data		4065080	1					
ANR	4065101	ExpressionStatement	"r_bin_force_plugin ( core -> bin , node -> value )"	971:1:27607:27650	4065080	2	True				
ANR	4065102	CallExpression	"r_bin_force_plugin ( core -> bin , node -> value )"		4065080	0					
ANR	4065103	Callee	r_bin_force_plugin		4065080	0					
ANR	4065104	Identifier	r_bin_force_plugin		4065080	0					
ANR	4065105	ArgumentList	core -> bin		4065080	1					
ANR	4065106	Argument	core -> bin		4065080	0					
ANR	4065107	PtrMemberAccess	core -> bin		4065080	0					
ANR	4065108	Identifier	core		4065080	0					
ANR	4065109	Identifier	bin		4065080	1					
ANR	4065110	Argument	node -> value		4065080	1					
ANR	4065111	PtrMemberAccess	node -> value		4065080	0					
ANR	4065112	Identifier	node		4065080	0					
ANR	4065113	Identifier	value		4065080	1					
ANR	4065114	ReturnStatement	return true ;	972:1:27653:27664	4065080	3	True				
ANR	4065115	Identifier	true		4065080	0					
ANR	4065116	ReturnType	static bool		4065080	1					
ANR	4065117	Identifier	cb_binforce		4065080	2					
ANR	4065118	ParameterList	"void * user , void * data"		4065080	3					
ANR	4065119	Parameter	void * user	968:24:27508:27517	4065080	0	True				
ANR	4065120	ParameterType	void *		4065080	0					
ANR	4065121	Identifier	user		4065080	1					
ANR	4065122	Parameter	void * data	968:36:27520:27529	4065080	1	True				
ANR	4065123	ParameterType	void *		4065080	0					
ANR	4065124	Identifier	data		4065080	1					
ANR	4065125	CFGEntryNode	ENTRY		4065080		True				
ANR	4065126	CFGExitNode	EXIT		4065080		True				
ANR	4065127	Symbol	core		4065080						
ANR	4065128	Symbol	node		4065080						
ANR	4065129	Symbol	data		4065080						
ANR	4065130	Symbol	* core		4065080						
ANR	4065131	Symbol	true		4065080						
ANR	4065132	Symbol	* node		4065080						
ANR	4065133	Symbol	user		4065080						
ANR	4065134	Symbol	core -> bin		4065080						
ANR	4065135	Symbol	node -> value		4065080						
ANR	4065136	Function	cb_asmsyntax	975:0:27669:28036							
ANR	4065137	FunctionDef	"cb_asmsyntax (void * user , void * data)"		4065136	0					
ANR	4065138	CompoundStatement		975:49:27718:28036	4065136	0					
ANR	4065139	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	976:1:27721:27748	4065136	0	True				
ANR	4065140	IdentifierDecl	* core = ( RCore * ) user		4065136	0					
ANR	4065141	IdentifierDeclType	RCore *		4065136	0					
ANR	4065142	Identifier	core		4065136	1					
ANR	4065143	AssignmentExpression	* core = ( RCore * ) user		4065136	2		=			
ANR	4065144	Identifier	core		4065136	0					
ANR	4065145	CastExpression	( RCore * ) user		4065136	1					
ANR	4065146	CastTarget	RCore *		4065136	0					
ANR	4065147	Identifier	user		4065136	1					
ANR	4065148	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	977:1:27751:27790	4065136	1	True				
ANR	4065149	IdentifierDecl	* node = ( RConfigNode * ) data		4065136	0					
ANR	4065150	IdentifierDeclType	RConfigNode *		4065136	0					
ANR	4065151	Identifier	node		4065136	1					
ANR	4065152	AssignmentExpression	* node = ( RConfigNode * ) data		4065136	2		=			
ANR	4065153	Identifier	node		4065136	0					
ANR	4065154	CastExpression	( RConfigNode * ) data		4065136	1					
ANR	4065155	CastTarget	RConfigNode *		4065136	0					
ANR	4065156	Identifier	data		4065136	1					
ANR	4065157	IfStatement	if ( * node -> value == '?' )		4065136	2					
ANR	4065158	Condition	* node -> value == '?'	978:5:27797:27815	4065136	0	True				
ANR	4065159	EqualityExpression	* node -> value == '?'		4065136	0		==			
ANR	4065160	UnaryOperationExpression	* node -> value		4065136	0					
ANR	4065161	UnaryOperator	*		4065136	0					
ANR	4065162	PtrMemberAccess	node -> value		4065136	1					
ANR	4065163	Identifier	node		4065136	0					
ANR	4065164	Identifier	value		4065136	1					
ANR	4065165	PrimaryExpression	'?'		4065136	1					
ANR	4065166	CompoundStatement		4:26:99:99	4065136	1					
ANR	4065167	ExpressionStatement	print_node_options ( node )	979:2:27822:27847	4065136	0	True				
ANR	4065168	CallExpression	print_node_options ( node )		4065136	0					
ANR	4065169	Callee	print_node_options		4065136	0					
ANR	4065170	Identifier	print_node_options		4065136	0					
ANR	4065171	ArgumentList	node		4065136	1					
ANR	4065172	Argument	node		4065136	0					
ANR	4065173	Identifier	node		4065136	0					
ANR	4065174	ReturnStatement	return false ;	980:2:27851:27863	4065136	1	True				
ANR	4065175	Identifier	false		4065136	0					
ANR	4065176	ElseStatement	else		4065136	0					
ANR	4065177	CompoundStatement		8:2:158:209	4065136	0					
ANR	4065178	IdentifierDeclStatement	int syntax = r_asm_syntax_from_string ( node -> value ) ;	982:2:27877:27928	4065136	0	True				
ANR	4065179	IdentifierDecl	syntax = r_asm_syntax_from_string ( node -> value )		4065136	0					
ANR	4065180	IdentifierDeclType	int		4065136	0					
ANR	4065181	Identifier	syntax		4065136	1					
ANR	4065182	AssignmentExpression	syntax = r_asm_syntax_from_string ( node -> value )		4065136	2		=			
ANR	4065183	Identifier	syntax		4065136	0					
ANR	4065184	CallExpression	r_asm_syntax_from_string ( node -> value )		4065136	1					
ANR	4065185	Callee	r_asm_syntax_from_string		4065136	0					
ANR	4065186	Identifier	r_asm_syntax_from_string		4065136	0					
ANR	4065187	ArgumentList	node -> value		4065136	1					
ANR	4065188	Argument	node -> value		4065136	0					
ANR	4065189	PtrMemberAccess	node -> value		4065136	0					
ANR	4065190	Identifier	node		4065136	0					
ANR	4065191	Identifier	value		4065136	1					
ANR	4065192	IfStatement	if ( syntax == - 1 )		4065136	1					
ANR	4065193	Condition	syntax == - 1	983:6:27936:27947	4065136	0	True				
ANR	4065194	EqualityExpression	syntax == - 1		4065136	0		==			
ANR	4065195	Identifier	syntax		4065136	0					
ANR	4065196	UnaryOperationExpression	- 1		4065136	1					
ANR	4065197	UnaryOperator	-		4065136	0					
ANR	4065198	PrimaryExpression	1		4065136	1					
ANR	4065199	CompoundStatement		9:20:231:231	4065136	1					
ANR	4065200	ReturnStatement	return false ;	984:3:27955:27967	4065136	0	True				
ANR	4065201	Identifier	false		4065136	0					
ANR	4065202	ExpressionStatement	"r_asm_set_syntax ( core -> assembler , syntax )"	986:2:27975:28017	4065136	2	True				
ANR	4065203	CallExpression	"r_asm_set_syntax ( core -> assembler , syntax )"		4065136	0					
ANR	4065204	Callee	r_asm_set_syntax		4065136	0					
ANR	4065205	Identifier	r_asm_set_syntax		4065136	0					
ANR	4065206	ArgumentList	core -> assembler		4065136	1					
ANR	4065207	Argument	core -> assembler		4065136	0					
ANR	4065208	PtrMemberAccess	core -> assembler		4065136	0					
ANR	4065209	Identifier	core		4065136	0					
ANR	4065210	Identifier	assembler		4065136	1					
ANR	4065211	Argument	syntax		4065136	1					
ANR	4065212	Identifier	syntax		4065136	0					
ANR	4065213	ReturnStatement	return true ;	988:1:28023:28034	4065136	3	True				
ANR	4065214	Identifier	true		4065136	0					
ANR	4065215	ReturnType	static bool		4065136	1					
ANR	4065216	Identifier	cb_asmsyntax		4065136	2					
ANR	4065217	ParameterList	"void * user , void * data"		4065136	3					
ANR	4065218	Parameter	void * user	975:25:27694:27703	4065136	0	True				
ANR	4065219	ParameterType	void *		4065136	0					
ANR	4065220	Identifier	user		4065136	1					
ANR	4065221	Parameter	void * data	975:37:27706:27715	4065136	1	True				
ANR	4065222	ParameterType	void *		4065136	0					
ANR	4065223	Identifier	data		4065136	1					
ANR	4065224	CFGEntryNode	ENTRY		4065136		True				
ANR	4065225	CFGExitNode	EXIT		4065136		True				
ANR	4065226	Symbol	* node -> value		4065136						
ANR	4065227	Symbol	data		4065136						
ANR	4065228	Symbol	false		4065136						
ANR	4065229	Symbol	* core		4065136						
ANR	4065230	Symbol	core -> assembler		4065136						
ANR	4065231	Symbol	r_asm_syntax_from_string		4065136						
ANR	4065232	Symbol	node -> value		4065136						
ANR	4065233	Symbol	core		4065136						
ANR	4065234	Symbol	node		4065136						
ANR	4065235	Symbol	* * node		4065136						
ANR	4065236	Symbol	true		4065136						
ANR	4065237	Symbol	syntax		4065136						
ANR	4065238	Symbol	* node		4065136						
ANR	4065239	Symbol	user		4065136						
ANR	4065240	Function	cb_dirzigns	991:0:28039:28253							
ANR	4065241	FunctionDef	"cb_dirzigns (void * user , void * data)"		4065240	0					
ANR	4065242	CompoundStatement		991:48:28087:28253	4065240	0					
ANR	4065243	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	992:1:28090:28117	4065240	0	True				
ANR	4065244	IdentifierDecl	* core = ( RCore * ) user		4065240	0					
ANR	4065245	IdentifierDeclType	RCore *		4065240	0					
ANR	4065246	Identifier	core		4065240	1					
ANR	4065247	AssignmentExpression	* core = ( RCore * ) user		4065240	2		=			
ANR	4065248	Identifier	core		4065240	0					
ANR	4065249	CastExpression	( RCore * ) user		4065240	1					
ANR	4065250	CastTarget	RCore *		4065240	0					
ANR	4065251	Identifier	user		4065240	1					
ANR	4065252	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	993:1:28120:28159	4065240	1	True				
ANR	4065253	IdentifierDecl	* node = ( RConfigNode * ) data		4065240	0					
ANR	4065254	IdentifierDeclType	RConfigNode *		4065240	0					
ANR	4065255	Identifier	node		4065240	1					
ANR	4065256	AssignmentExpression	* node = ( RConfigNode * ) data		4065240	2		=			
ANR	4065257	Identifier	node		4065240	0					
ANR	4065258	CastExpression	( RConfigNode * ) data		4065240	1					
ANR	4065259	CastTarget	RConfigNode *		4065240	0					
ANR	4065260	Identifier	data		4065240	1					
ANR	4065261	ExpressionStatement	free ( core -> anal -> zign_path )	994:1:28162:28190	4065240	2	True				
ANR	4065262	CallExpression	free ( core -> anal -> zign_path )		4065240	0					
ANR	4065263	Callee	free		4065240	0					
ANR	4065264	Identifier	free		4065240	0					
ANR	4065265	ArgumentList	core -> anal -> zign_path		4065240	1					
ANR	4065266	Argument	core -> anal -> zign_path		4065240	0					
ANR	4065267	PtrMemberAccess	core -> anal -> zign_path		4065240	0					
ANR	4065268	PtrMemberAccess	core -> anal		4065240	0					
ANR	4065269	Identifier	core		4065240	0					
ANR	4065270	Identifier	anal		4065240	1					
ANR	4065271	Identifier	zign_path		4065240	1					
ANR	4065272	ExpressionStatement	core -> anal -> zign_path = strdup ( node -> value )	995:1:28193:28237	4065240	3	True				
ANR	4065273	AssignmentExpression	core -> anal -> zign_path = strdup ( node -> value )		4065240	0		=			
ANR	4065274	PtrMemberAccess	core -> anal -> zign_path		4065240	0					
ANR	4065275	PtrMemberAccess	core -> anal		4065240	0					
ANR	4065276	Identifier	core		4065240	0					
ANR	4065277	Identifier	anal		4065240	1					
ANR	4065278	Identifier	zign_path		4065240	1					
ANR	4065279	CallExpression	strdup ( node -> value )		4065240	1					
ANR	4065280	Callee	strdup		4065240	0					
ANR	4065281	Identifier	strdup		4065240	0					
ANR	4065282	ArgumentList	node -> value		4065240	1					
ANR	4065283	Argument	node -> value		4065240	0					
ANR	4065284	PtrMemberAccess	node -> value		4065240	0					
ANR	4065285	Identifier	node		4065240	0					
ANR	4065286	Identifier	value		4065240	1					
ANR	4065287	ReturnStatement	return true ;	996:1:28240:28251	4065240	4	True				
ANR	4065288	Identifier	true		4065240	0					
ANR	4065289	ReturnType	static bool		4065240	1					
ANR	4065290	Identifier	cb_dirzigns		4065240	2					
ANR	4065291	ParameterList	"void * user , void * data"		4065240	3					
ANR	4065292	Parameter	void * user	991:24:28063:28072	4065240	0	True				
ANR	4065293	ParameterType	void *		4065240	0					
ANR	4065294	Identifier	user		4065240	1					
ANR	4065295	Parameter	void * data	991:36:28075:28084	4065240	1	True				
ANR	4065296	ParameterType	void *		4065240	0					
ANR	4065297	Identifier	data		4065240	1					
ANR	4065298	CFGEntryNode	ENTRY		4065240		True				
ANR	4065299	CFGExitNode	EXIT		4065240		True				
ANR	4065300	Symbol	data		4065240						
ANR	4065301	Symbol	* core		4065240						
ANR	4065302	Symbol	core -> anal		4065240						
ANR	4065303	Symbol	node -> value		4065240						
ANR	4065304	Symbol	core		4065240						
ANR	4065305	Symbol	node		4065240						
ANR	4065306	Symbol	* core -> anal		4065240						
ANR	4065307	Symbol	core -> anal -> zign_path		4065240						
ANR	4065308	Symbol	true		4065240						
ANR	4065309	Symbol	* node		4065240						
ANR	4065310	Symbol	strdup		4065240						
ANR	4065311	Symbol	user		4065240						
ANR	4065312	Symbol	* * core		4065240						
ANR	4065313	Function	cb_bigendian	999:0:28256:28830							
ANR	4065314	FunctionDef	"cb_bigendian (void * user , void * data)"		4065313	0					
ANR	4065315	CompoundStatement		999:49:28305:28830	4065313	0					
ANR	4065316	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1000:1:28308:28336	4065313	0	True				
ANR	4065317	IdentifierDecl	* core = ( RCore * ) user		4065313	0					
ANR	4065318	IdentifierDeclType	RCore *		4065313	0					
ANR	4065319	Identifier	core		4065313	1					
ANR	4065320	AssignmentExpression	* core = ( RCore * ) user		4065313	2		=			
ANR	4065321	Identifier	core		4065313	0					
ANR	4065322	CastExpression	( RCore * ) user		4065313	1					
ANR	4065323	CastTarget	RCore *		4065313	0					
ANR	4065324	Identifier	user		4065313	1					
ANR	4065325	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1001:1:28339:28379	4065313	1	True				
ANR	4065326	IdentifierDecl	* node = ( RConfigNode * ) data		4065313	0					
ANR	4065327	IdentifierDeclType	RConfigNode *		4065313	0					
ANR	4065328	Identifier	node		4065313	1					
ANR	4065329	AssignmentExpression	* node = ( RConfigNode * ) data		4065313	2		=			
ANR	4065330	Identifier	node		4065313	0					
ANR	4065331	CastExpression	( RConfigNode * ) data		4065313	1					
ANR	4065332	CastTarget	RConfigNode *		4065313	0					
ANR	4065333	Identifier	data		4065313	1					
ANR	4065334	IdentifierDeclStatement	"bool isbig = r_asm_set_big_endian ( core -> assembler , node -> i_value ) ;"	1003:1:28448:28514	4065313	2	True				
ANR	4065335	IdentifierDecl	"isbig = r_asm_set_big_endian ( core -> assembler , node -> i_value )"		4065313	0					
ANR	4065336	IdentifierDeclType	bool		4065313	0					
ANR	4065337	Identifier	isbig		4065313	1					
ANR	4065338	AssignmentExpression	"isbig = r_asm_set_big_endian ( core -> assembler , node -> i_value )"		4065313	2		=			
ANR	4065339	Identifier	isbig		4065313	0					
ANR	4065340	CallExpression	"r_asm_set_big_endian ( core -> assembler , node -> i_value )"		4065313	1					
ANR	4065341	Callee	r_asm_set_big_endian		4065313	0					
ANR	4065342	Identifier	r_asm_set_big_endian		4065313	0					
ANR	4065343	ArgumentList	core -> assembler		4065313	1					
ANR	4065344	Argument	core -> assembler		4065313	0					
ANR	4065345	PtrMemberAccess	core -> assembler		4065313	0					
ANR	4065346	Identifier	core		4065313	0					
ANR	4065347	Identifier	assembler		4065313	1					
ANR	4065348	Argument	node -> i_value		4065313	1					
ANR	4065349	PtrMemberAccess	node -> i_value		4065313	0					
ANR	4065350	Identifier	node		4065313	0					
ANR	4065351	Identifier	i_value		4065313	1					
ANR	4065352	ExpressionStatement	"r_anal_set_big_endian ( core -> anal , isbig )"	1005:1:28557:28598	4065313	3	True				
ANR	4065353	CallExpression	"r_anal_set_big_endian ( core -> anal , isbig )"		4065313	0					
ANR	4065354	Callee	r_anal_set_big_endian		4065313	0					
ANR	4065355	Identifier	r_anal_set_big_endian		4065313	0					
ANR	4065356	ArgumentList	core -> anal		4065313	1					
ANR	4065357	Argument	core -> anal		4065313	0					
ANR	4065358	PtrMemberAccess	core -> anal		4065313	0					
ANR	4065359	Identifier	core		4065313	0					
ANR	4065360	Identifier	anal		4065313	1					
ANR	4065361	Argument	isbig		4065313	1					
ANR	4065362	Identifier	isbig		4065313	0					
ANR	4065363	IfStatement	if ( core -> dbg && core -> dbg -> bp )		4065313	4					
ANR	4065364	Condition	core -> dbg && core -> dbg -> bp	1007:5:28667:28692	4065313	0	True				
ANR	4065365	AndExpression	core -> dbg && core -> dbg -> bp		4065313	0		&&			
ANR	4065366	PtrMemberAccess	core -> dbg		4065313	0					
ANR	4065367	Identifier	core		4065313	0					
ANR	4065368	Identifier	dbg		4065313	1					
ANR	4065369	PtrMemberAccess	core -> dbg -> bp		4065313	1					
ANR	4065370	PtrMemberAccess	core -> dbg		4065313	0					
ANR	4065371	Identifier	core		4065313	0					
ANR	4065372	Identifier	dbg		4065313	1					
ANR	4065373	Identifier	bp		4065313	1					
ANR	4065374	CompoundStatement		9:33:389:389	4065313	1					
ANR	4065375	ExpressionStatement	core -> dbg -> bp -> endian = isbig	1008:2:28699:28728	4065313	0	True				
ANR	4065376	AssignmentExpression	core -> dbg -> bp -> endian = isbig		4065313	0		=			
ANR	4065377	PtrMemberAccess	core -> dbg -> bp -> endian		4065313	0					
ANR	4065378	PtrMemberAccess	core -> dbg -> bp		4065313	0					
ANR	4065379	PtrMemberAccess	core -> dbg		4065313	0					
ANR	4065380	Identifier	core		4065313	0					
ANR	4065381	Identifier	dbg		4065313	1					
ANR	4065382	Identifier	bp		4065313	1					
ANR	4065383	Identifier	endian		4065313	1					
ANR	4065384	Identifier	isbig		4065313	1					
ANR	4065385	ExpressionStatement	core -> print -> big_endian = node -> i_value	1011:1:28775:28814	4065313	5	True				
ANR	4065386	AssignmentExpression	core -> print -> big_endian = node -> i_value		4065313	0		=			
ANR	4065387	PtrMemberAccess	core -> print -> big_endian		4065313	0					
ANR	4065388	PtrMemberAccess	core -> print		4065313	0					
ANR	4065389	Identifier	core		4065313	0					
ANR	4065390	Identifier	print		4065313	1					
ANR	4065391	Identifier	big_endian		4065313	1					
ANR	4065392	PtrMemberAccess	node -> i_value		4065313	1					
ANR	4065393	Identifier	node		4065313	0					
ANR	4065394	Identifier	i_value		4065313	1					
ANR	4065395	ReturnStatement	return true ;	1012:1:28817:28828	4065313	6	True				
ANR	4065396	Identifier	true		4065313	0					
ANR	4065397	ReturnType	static bool		4065313	1					
ANR	4065398	Identifier	cb_bigendian		4065313	2					
ANR	4065399	ParameterList	"void * user , void * data"		4065313	3					
ANR	4065400	Parameter	void * user	999:25:28281:28290	4065313	0	True				
ANR	4065401	ParameterType	void *		4065313	0					
ANR	4065402	Identifier	user		4065313	1					
ANR	4065403	Parameter	void * data	999:37:28293:28302	4065313	1	True				
ANR	4065404	ParameterType	void *		4065313	0					
ANR	4065405	Identifier	data		4065313	1					
ANR	4065406	CFGEntryNode	ENTRY		4065313		True				
ANR	4065407	CFGExitNode	EXIT		4065313		True				
ANR	4065408	Symbol	data		4065313						
ANR	4065409	Symbol	* core -> dbg -> bp		4065313						
ANR	4065410	Symbol	* core		4065313						
ANR	4065411	Symbol	core -> assembler		4065313						
ANR	4065412	Symbol	core -> print -> big_endian		4065313						
ANR	4065413	Symbol	isbig		4065313						
ANR	4065414	Symbol	core -> dbg -> bp		4065313						
ANR	4065415	Symbol	core -> anal		4065313						
ANR	4065416	Symbol	r_asm_set_big_endian		4065313						
ANR	4065417	Symbol	node -> i_value		4065313						
ANR	4065418	Symbol	core		4065313						
ANR	4065419	Symbol	node		4065313						
ANR	4065420	Symbol	* * * core		4065313						
ANR	4065421	Symbol	* core -> print		4065313						
ANR	4065422	Symbol	true		4065313						
ANR	4065423	Symbol	* node		4065313						
ANR	4065424	Symbol	core -> print		4065313						
ANR	4065425	Symbol	user		4065313						
ANR	4065426	Symbol	* core -> dbg		4065313						
ANR	4065427	Symbol	core -> dbg -> bp -> endian		4065313						
ANR	4065428	Symbol	* * core		4065313						
ANR	4065429	Symbol	core -> dbg		4065313						
ANR	4065430	Symbol	* * core -> dbg		4065313						
ANR	4065431	Function	cb_cfgdatefmt	1015:0:28833:29028							
ANR	4065432	FunctionDef	"cb_cfgdatefmt (void * user , void * data)"		4065431	0					
ANR	4065433	CompoundStatement		1015:50:28883:29028	4065431	0					
ANR	4065434	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1016:1:28886:28913	4065431	0	True				
ANR	4065435	IdentifierDecl	* core = ( RCore * ) user		4065431	0					
ANR	4065436	IdentifierDeclType	RCore *		4065431	0					
ANR	4065437	Identifier	core		4065431	1					
ANR	4065438	AssignmentExpression	* core = ( RCore * ) user		4065431	2		=			
ANR	4065439	Identifier	core		4065431	0					
ANR	4065440	CastExpression	( RCore * ) user		4065431	1					
ANR	4065441	CastTarget	RCore *		4065431	0					
ANR	4065442	Identifier	user		4065431	1					
ANR	4065443	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1017:1:28916:28955	4065431	1	True				
ANR	4065444	IdentifierDecl	* node = ( RConfigNode * ) data		4065431	0					
ANR	4065445	IdentifierDeclType	RConfigNode *		4065431	0					
ANR	4065446	Identifier	node		4065431	1					
ANR	4065447	AssignmentExpression	* node = ( RConfigNode * ) data		4065431	2		=			
ANR	4065448	Identifier	node		4065431	0					
ANR	4065449	CastExpression	( RConfigNode * ) data		4065431	1					
ANR	4065450	CastTarget	RConfigNode *		4065431	0					
ANR	4065451	Identifier	data		4065431	1					
ANR	4065452	ExpressionStatement	"snprintf ( core -> print -> datefmt , 32 , ""%s"" , node -> value )"	1018:1:28958:29012	4065431	2	True				
ANR	4065453	CallExpression	"snprintf ( core -> print -> datefmt , 32 , ""%s"" , node -> value )"		4065431	0					
ANR	4065454	Callee	snprintf		4065431	0					
ANR	4065455	Identifier	snprintf		4065431	0					
ANR	4065456	ArgumentList	core -> print -> datefmt		4065431	1					
ANR	4065457	Argument	core -> print -> datefmt		4065431	0					
ANR	4065458	PtrMemberAccess	core -> print -> datefmt		4065431	0					
ANR	4065459	PtrMemberAccess	core -> print		4065431	0					
ANR	4065460	Identifier	core		4065431	0					
ANR	4065461	Identifier	print		4065431	1					
ANR	4065462	Identifier	datefmt		4065431	1					
ANR	4065463	Argument	32		4065431	1					
ANR	4065464	PrimaryExpression	32		4065431	0					
ANR	4065465	Argument	"""%s"""		4065431	2					
ANR	4065466	PrimaryExpression	"""%s"""		4065431	0					
ANR	4065467	Argument	node -> value		4065431	3					
ANR	4065468	PtrMemberAccess	node -> value		4065431	0					
ANR	4065469	Identifier	node		4065431	0					
ANR	4065470	Identifier	value		4065431	1					
ANR	4065471	ReturnStatement	return true ;	1019:1:29015:29026	4065431	3	True				
ANR	4065472	Identifier	true		4065431	0					
ANR	4065473	ReturnType	static bool		4065431	1					
ANR	4065474	Identifier	cb_cfgdatefmt		4065431	2					
ANR	4065475	ParameterList	"void * user , void * data"		4065431	3					
ANR	4065476	Parameter	void * user	1015:26:28859:28868	4065431	0	True				
ANR	4065477	ParameterType	void *		4065431	0					
ANR	4065478	Identifier	user		4065431	1					
ANR	4065479	Parameter	void * data	1015:38:28871:28880	4065431	1	True				
ANR	4065480	ParameterType	void *		4065431	0					
ANR	4065481	Identifier	data		4065431	1					
ANR	4065482	CFGEntryNode	ENTRY		4065431		True				
ANR	4065483	CFGExitNode	EXIT		4065431		True				
ANR	4065484	Symbol	core		4065431						
ANR	4065485	Symbol	node		4065431						
ANR	4065486	Symbol	* core -> print		4065431						
ANR	4065487	Symbol	data		4065431						
ANR	4065488	Symbol	* core		4065431						
ANR	4065489	Symbol	core -> print -> datefmt		4065431						
ANR	4065490	Symbol	true		4065431						
ANR	4065491	Symbol	* node		4065431						
ANR	4065492	Symbol	core -> print		4065431						
ANR	4065493	Symbol	user		4065431						
ANR	4065494	Symbol	* * core		4065431						
ANR	4065495	Symbol	node -> value		4065431						
ANR	4065496	Function	cb_timezone	1022:0:29031:29207							
ANR	4065497	FunctionDef	"cb_timezone (void * user , void * data)"		4065496	0					
ANR	4065498	CompoundStatement		1022:48:29079:29207	4065496	0					
ANR	4065499	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1023:1:29082:29109	4065496	0	True				
ANR	4065500	IdentifierDecl	* core = ( RCore * ) user		4065496	0					
ANR	4065501	IdentifierDeclType	RCore *		4065496	0					
ANR	4065502	Identifier	core		4065496	1					
ANR	4065503	AssignmentExpression	* core = ( RCore * ) user		4065496	2		=			
ANR	4065504	Identifier	core		4065496	0					
ANR	4065505	CastExpression	( RCore * ) user		4065496	1					
ANR	4065506	CastTarget	RCore *		4065496	0					
ANR	4065507	Identifier	user		4065496	1					
ANR	4065508	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1024:1:29112:29151	4065496	1	True				
ANR	4065509	IdentifierDecl	* node = ( RConfigNode * ) data		4065496	0					
ANR	4065510	IdentifierDeclType	RConfigNode *		4065496	0					
ANR	4065511	Identifier	node		4065496	1					
ANR	4065512	AssignmentExpression	* node = ( RConfigNode * ) data		4065496	2		=			
ANR	4065513	Identifier	node		4065496	0					
ANR	4065514	CastExpression	( RConfigNode * ) data		4065496	1					
ANR	4065515	CastTarget	RConfigNode *		4065496	0					
ANR	4065516	Identifier	data		4065496	1					
ANR	4065517	ExpressionStatement	core -> print -> datezone = node -> i_value	1025:1:29154:29191	4065496	2	True				
ANR	4065518	AssignmentExpression	core -> print -> datezone = node -> i_value		4065496	0		=			
ANR	4065519	PtrMemberAccess	core -> print -> datezone		4065496	0					
ANR	4065520	PtrMemberAccess	core -> print		4065496	0					
ANR	4065521	Identifier	core		4065496	0					
ANR	4065522	Identifier	print		4065496	1					
ANR	4065523	Identifier	datezone		4065496	1					
ANR	4065524	PtrMemberAccess	node -> i_value		4065496	1					
ANR	4065525	Identifier	node		4065496	0					
ANR	4065526	Identifier	i_value		4065496	1					
ANR	4065527	ReturnStatement	return true ;	1026:1:29194:29205	4065496	3	True				
ANR	4065528	Identifier	true		4065496	0					
ANR	4065529	ReturnType	static bool		4065496	1					
ANR	4065530	Identifier	cb_timezone		4065496	2					
ANR	4065531	ParameterList	"void * user , void * data"		4065496	3					
ANR	4065532	Parameter	void * user	1022:24:29055:29064	4065496	0	True				
ANR	4065533	ParameterType	void *		4065496	0					
ANR	4065534	Identifier	user		4065496	1					
ANR	4065535	Parameter	void * data	1022:36:29067:29076	4065496	1	True				
ANR	4065536	ParameterType	void *		4065496	0					
ANR	4065537	Identifier	data		4065496	1					
ANR	4065538	CFGEntryNode	ENTRY		4065496		True				
ANR	4065539	CFGExitNode	EXIT		4065496		True				
ANR	4065540	Symbol	core		4065496						
ANR	4065541	Symbol	node		4065496						
ANR	4065542	Symbol	* core -> print		4065496						
ANR	4065543	Symbol	data		4065496						
ANR	4065544	Symbol	* core		4065496						
ANR	4065545	Symbol	core -> print -> datezone		4065496						
ANR	4065546	Symbol	true		4065496						
ANR	4065547	Symbol	* node		4065496						
ANR	4065548	Symbol	core -> print		4065496						
ANR	4065549	Symbol	user		4065496						
ANR	4065550	Symbol	* * core		4065496						
ANR	4065551	Symbol	node -> i_value		4065496						
ANR	4065552	Function	cb_cfgcorelog	1029:0:29210:29381							
ANR	4065553	FunctionDef	"cb_cfgcorelog (void * user , void * data)"		4065552	0					
ANR	4065554	CompoundStatement		1029:50:29260:29381	4065552	0					
ANR	4065555	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1030:1:29263:29291	4065552	0	True				
ANR	4065556	IdentifierDecl	* core = ( RCore * ) user		4065552	0					
ANR	4065557	IdentifierDeclType	RCore *		4065552	0					
ANR	4065558	Identifier	core		4065552	1					
ANR	4065559	AssignmentExpression	* core = ( RCore * ) user		4065552	2		=			
ANR	4065560	Identifier	core		4065552	0					
ANR	4065561	CastExpression	( RCore * ) user		4065552	1					
ANR	4065562	CastTarget	RCore *		4065552	0					
ANR	4065563	Identifier	user		4065552	1					
ANR	4065564	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1031:1:29294:29334	4065552	1	True				
ANR	4065565	IdentifierDecl	* node = ( RConfigNode * ) data		4065552	0					
ANR	4065566	IdentifierDeclType	RConfigNode *		4065552	0					
ANR	4065567	Identifier	node		4065552	1					
ANR	4065568	AssignmentExpression	* node = ( RConfigNode * ) data		4065552	2		=			
ANR	4065569	Identifier	node		4065552	0					
ANR	4065570	CastExpression	( RConfigNode * ) data		4065552	1					
ANR	4065571	CastTarget	RConfigNode *		4065552	0					
ANR	4065572	Identifier	data		4065552	1					
ANR	4065573	ExpressionStatement	core -> cfglog = node -> i_value	1032:1:29337:29365	4065552	2	True				
ANR	4065574	AssignmentExpression	core -> cfglog = node -> i_value		4065552	0		=			
ANR	4065575	PtrMemberAccess	core -> cfglog		4065552	0					
ANR	4065576	Identifier	core		4065552	0					
ANR	4065577	Identifier	cfglog		4065552	1					
ANR	4065578	PtrMemberAccess	node -> i_value		4065552	1					
ANR	4065579	Identifier	node		4065552	0					
ANR	4065580	Identifier	i_value		4065552	1					
ANR	4065581	ReturnStatement	return true ;	1033:1:29368:29379	4065552	3	True				
ANR	4065582	Identifier	true		4065552	0					
ANR	4065583	ReturnType	static bool		4065552	1					
ANR	4065584	Identifier	cb_cfgcorelog		4065552	2					
ANR	4065585	ParameterList	"void * user , void * data"		4065552	3					
ANR	4065586	Parameter	void * user	1029:26:29236:29245	4065552	0	True				
ANR	4065587	ParameterType	void *		4065552	0					
ANR	4065588	Identifier	user		4065552	1					
ANR	4065589	Parameter	void * data	1029:38:29248:29257	4065552	1	True				
ANR	4065590	ParameterType	void *		4065552	0					
ANR	4065591	Identifier	data		4065552	1					
ANR	4065592	CFGEntryNode	ENTRY		4065552		True				
ANR	4065593	CFGExitNode	EXIT		4065552		True				
ANR	4065594	Symbol	core -> cfglog		4065552						
ANR	4065595	Symbol	core		4065552						
ANR	4065596	Symbol	node		4065552						
ANR	4065597	Symbol	data		4065552						
ANR	4065598	Symbol	* core		4065552						
ANR	4065599	Symbol	true		4065552						
ANR	4065600	Symbol	* node		4065552						
ANR	4065601	Symbol	user		4065552						
ANR	4065602	Symbol	node -> i_value		4065552						
ANR	4065603	Function	cb_cfgdebug	1036:0:29384:30260							
ANR	4065604	FunctionDef	"cb_cfgdebug (void * user , void * data)"		4065603	0					
ANR	4065605	CompoundStatement		1036:48:29432:30260	4065603	0					
ANR	4065606	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1037:1:29435:29462	4065603	0	True				
ANR	4065607	IdentifierDecl	* core = ( RCore * ) user		4065603	0					
ANR	4065608	IdentifierDeclType	RCore *		4065603	0					
ANR	4065609	Identifier	core		4065603	1					
ANR	4065610	AssignmentExpression	* core = ( RCore * ) user		4065603	2		=			
ANR	4065611	Identifier	core		4065603	0					
ANR	4065612	CastExpression	( RCore * ) user		4065603	1					
ANR	4065613	CastTarget	RCore *		4065603	0					
ANR	4065614	Identifier	user		4065603	1					
ANR	4065615	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1038:1:29465:29504	4065603	1	True				
ANR	4065616	IdentifierDecl	* node = ( RConfigNode * ) data		4065603	0					
ANR	4065617	IdentifierDeclType	RConfigNode *		4065603	0					
ANR	4065618	Identifier	node		4065603	1					
ANR	4065619	AssignmentExpression	* node = ( RConfigNode * ) data		4065603	2		=			
ANR	4065620	Identifier	node		4065603	0					
ANR	4065621	CastExpression	( RConfigNode * ) data		4065603	1					
ANR	4065622	CastTarget	RConfigNode *		4065603	0					
ANR	4065623	Identifier	data		4065603	1					
ANR	4065624	IfStatement	if ( ! core )		4065603	2					
ANR	4065625	Condition	! core	1039:5:29511:29515	4065603	0	True				
ANR	4065626	UnaryOperationExpression	! core		4065603	0					
ANR	4065627	UnaryOperator	!		4065603	0					
ANR	4065628	Identifier	core		4065603	1					
ANR	4065629	CompoundStatement		4:12:85:85	4065603	1					
ANR	4065630	ReturnStatement	return false ;	1040:2:29522:29534	4065603	0	True				
ANR	4065631	Identifier	false		4065603	0					
ANR	4065632	IfStatement	if ( core -> io )		4065603	3					
ANR	4065633	Condition	core -> io	1042:5:29544:29551	4065603	0	True				
ANR	4065634	PtrMemberAccess	core -> io		4065603	0					
ANR	4065635	Identifier	core		4065603	0					
ANR	4065636	Identifier	io		4065603	1					
ANR	4065637	CompoundStatement		7:15:121:121	4065603	1					
ANR	4065638	ExpressionStatement	core -> io -> va = ! node -> i_value	1043:2:29558:29587	4065603	0	True				
ANR	4065639	AssignmentExpression	core -> io -> va = ! node -> i_value		4065603	0		=			
ANR	4065640	PtrMemberAccess	core -> io -> va		4065603	0					
ANR	4065641	PtrMemberAccess	core -> io		4065603	0					
ANR	4065642	Identifier	core		4065603	0					
ANR	4065643	Identifier	io		4065603	1					
ANR	4065644	Identifier	va		4065603	1					
ANR	4065645	UnaryOperationExpression	! node -> i_value		4065603	1					
ANR	4065646	UnaryOperator	!		4065603	0					
ANR	4065647	PtrMemberAccess	node -> i_value		4065603	1					
ANR	4065648	Identifier	node		4065603	0					
ANR	4065649	Identifier	i_value		4065603	1					
ANR	4065650	ExpressionStatement	core -> io -> debug = node -> i_value	1044:2:29591:29622	4065603	1	True				
ANR	4065651	AssignmentExpression	core -> io -> debug = node -> i_value		4065603	0		=			
ANR	4065652	PtrMemberAccess	core -> io -> debug		4065603	0					
ANR	4065653	PtrMemberAccess	core -> io		4065603	0					
ANR	4065654	Identifier	core		4065603	0					
ANR	4065655	Identifier	io		4065603	1					
ANR	4065656	Identifier	debug		4065603	1					
ANR	4065657	PtrMemberAccess	node -> i_value		4065603	1					
ANR	4065658	Identifier	node		4065603	0					
ANR	4065659	Identifier	i_value		4065603	1					
ANR	4065660	IfStatement	if ( core -> dbg && node -> i_value )		4065603	4					
ANR	4065661	Condition	core -> dbg && node -> i_value	1046:5:29632:29657	4065603	0	True				
ANR	4065662	AndExpression	core -> dbg && node -> i_value		4065603	0		&&			
ANR	4065663	PtrMemberAccess	core -> dbg		4065603	0					
ANR	4065664	Identifier	core		4065603	0					
ANR	4065665	Identifier	dbg		4065603	1					
ANR	4065666	PtrMemberAccess	node -> i_value		4065603	1					
ANR	4065667	Identifier	node		4065603	0					
ANR	4065668	Identifier	i_value		4065603	1					
ANR	4065669	CompoundStatement		12:2:231:298	4065603	1					
ANR	4065670	IdentifierDeclStatement	"const char * dbgbackend = r_config_get ( core -> config , ""dbg.backend"" ) ;"	1047:2:29664:29731	4065603	0	True				
ANR	4065671	IdentifierDecl	"* dbgbackend = r_config_get ( core -> config , ""dbg.backend"" )"		4065603	0					
ANR	4065672	IdentifierDeclType	const char *		4065603	0					
ANR	4065673	Identifier	dbgbackend		4065603	1					
ANR	4065674	AssignmentExpression	"* dbgbackend = r_config_get ( core -> config , ""dbg.backend"" )"		4065603	2		=			
ANR	4065675	Identifier	dbgbackend		4065603	0					
ANR	4065676	CallExpression	"r_config_get ( core -> config , ""dbg.backend"" )"		4065603	1					
ANR	4065677	Callee	r_config_get		4065603	0					
ANR	4065678	Identifier	r_config_get		4065603	0					
ANR	4065679	ArgumentList	core -> config		4065603	1					
ANR	4065680	Argument	core -> config		4065603	0					
ANR	4065681	PtrMemberAccess	core -> config		4065603	0					
ANR	4065682	Identifier	core		4065603	0					
ANR	4065683	Identifier	config		4065603	1					
ANR	4065684	Argument	"""dbg.backend"""		4065603	1					
ANR	4065685	PrimaryExpression	"""dbg.backend"""		4065603	0					
ANR	4065686	ExpressionStatement	core -> bin -> is_debugger = true	1048:2:29735:29764	4065603	1	True				
ANR	4065687	AssignmentExpression	core -> bin -> is_debugger = true		4065603	0		=			
ANR	4065688	PtrMemberAccess	core -> bin -> is_debugger		4065603	0					
ANR	4065689	PtrMemberAccess	core -> bin		4065603	0					
ANR	4065690	Identifier	core		4065603	0					
ANR	4065691	Identifier	bin		4065603	1					
ANR	4065692	Identifier	is_debugger		4065603	1					
ANR	4065693	Identifier	true		4065603	1					
ANR	4065694	ExpressionStatement	"r_debug_use ( core -> dbg , dbgbackend )"	1049:2:29768:29803	4065603	2	True				
ANR	4065695	CallExpression	"r_debug_use ( core -> dbg , dbgbackend )"		4065603	0					
ANR	4065696	Callee	r_debug_use		4065603	0					
ANR	4065697	Identifier	r_debug_use		4065603	0					
ANR	4065698	ArgumentList	core -> dbg		4065603	1					
ANR	4065699	Argument	core -> dbg		4065603	0					
ANR	4065700	PtrMemberAccess	core -> dbg		4065603	0					
ANR	4065701	Identifier	core		4065603	0					
ANR	4065702	Identifier	dbg		4065603	1					
ANR	4065703	Argument	dbgbackend		4065603	1					
ANR	4065704	Identifier	dbgbackend		4065603	0					
ANR	4065705	IfStatement	"if ( ! strcmp ( r_config_get ( core -> config , ""cmd.prompt"" ) , """" ) )"		4065603	3					
ANR	4065706	Condition	"! strcmp ( r_config_get ( core -> config , ""cmd.prompt"" ) , """" )"	1050:6:29811:29865	4065603	0	True				
ANR	4065707	UnaryOperationExpression	"! strcmp ( r_config_get ( core -> config , ""cmd.prompt"" ) , """" )"		4065603	0					
ANR	4065708	UnaryOperator	!		4065603	0					
ANR	4065709	CallExpression	"strcmp ( r_config_get ( core -> config , ""cmd.prompt"" ) , """" )"		4065603	1					
ANR	4065710	Callee	strcmp		4065603	0					
ANR	4065711	Identifier	strcmp		4065603	0					
ANR	4065712	ArgumentList	"r_config_get ( core -> config , ""cmd.prompt"" )"		4065603	1					
ANR	4065713	Argument	"r_config_get ( core -> config , ""cmd.prompt"" )"		4065603	0					
ANR	4065714	CallExpression	"r_config_get ( core -> config , ""cmd.prompt"" )"		4065603	0					
ANR	4065715	Callee	r_config_get		4065603	0					
ANR	4065716	Identifier	r_config_get		4065603	0					
ANR	4065717	ArgumentList	core -> config		4065603	1					
ANR	4065718	Argument	core -> config		4065603	0					
ANR	4065719	PtrMemberAccess	core -> config		4065603	0					
ANR	4065720	Identifier	core		4065603	0					
ANR	4065721	Identifier	config		4065603	1					
ANR	4065722	Argument	"""cmd.prompt"""		4065603	1					
ANR	4065723	PrimaryExpression	"""cmd.prompt"""		4065603	0					
ANR	4065724	Argument	""""""		4065603	1					
ANR	4065725	PrimaryExpression	""""""		4065603	0					
ANR	4065726	CompoundStatement		15:63:435:435	4065603	1					
ANR	4065727	ExpressionStatement	"r_config_set ( core -> config , ""cmd.prompt"" , "".dr*"" )"	1051:3:29873:29922	4065603	0	True				
ANR	4065728	CallExpression	"r_config_set ( core -> config , ""cmd.prompt"" , "".dr*"" )"		4065603	0					
ANR	4065729	Callee	r_config_set		4065603	0					
ANR	4065730	Identifier	r_config_set		4065603	0					
ANR	4065731	ArgumentList	core -> config		4065603	1					
ANR	4065732	Argument	core -> config		4065603	0					
ANR	4065733	PtrMemberAccess	core -> config		4065603	0					
ANR	4065734	Identifier	core		4065603	0					
ANR	4065735	Identifier	config		4065603	1					
ANR	4065736	Argument	"""cmd.prompt"""		4065603	1					
ANR	4065737	PrimaryExpression	"""cmd.prompt"""		4065603	0					
ANR	4065738	Argument	""".dr*"""		4065603	2					
ANR	4065739	PrimaryExpression	""".dr*"""		4065603	0					
ANR	4065740	IfStatement	"if ( ! strcmp ( dbgbackend , ""bf"" ) )"		4065603	4					
ANR	4065741	Condition	"! strcmp ( dbgbackend , ""bf"" )"	1053:6:29934:29959	4065603	0	True				
ANR	4065742	UnaryOperationExpression	"! strcmp ( dbgbackend , ""bf"" )"		4065603	0					
ANR	4065743	UnaryOperator	!		4065603	0					
ANR	4065744	CallExpression	"strcmp ( dbgbackend , ""bf"" )"		4065603	1					
ANR	4065745	Callee	strcmp		4065603	0					
ANR	4065746	Identifier	strcmp		4065603	0					
ANR	4065747	ArgumentList	dbgbackend		4065603	1					
ANR	4065748	Argument	dbgbackend		4065603	0					
ANR	4065749	Identifier	dbgbackend		4065603	0					
ANR	4065750	Argument	"""bf"""		4065603	1					
ANR	4065751	PrimaryExpression	"""bf"""		4065603	0					
ANR	4065752	CompoundStatement		18:34:529:529	4065603	1					
ANR	4065753	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , ""bf"" )"	1054:3:29967:30012	4065603	0	True				
ANR	4065754	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , ""bf"" )"		4065603	0					
ANR	4065755	Callee	r_config_set		4065603	0					
ANR	4065756	Identifier	r_config_set		4065603	0					
ANR	4065757	ArgumentList	core -> config		4065603	1					
ANR	4065758	Argument	core -> config		4065603	0					
ANR	4065759	PtrMemberAccess	core -> config		4065603	0					
ANR	4065760	Identifier	core		4065603	0					
ANR	4065761	Identifier	config		4065603	1					
ANR	4065762	Argument	"""asm.arch"""		4065603	1					
ANR	4065763	PrimaryExpression	"""asm.arch"""		4065603	0					
ANR	4065764	Argument	"""bf"""		4065603	2					
ANR	4065765	PrimaryExpression	"""bf"""		4065603	0					
ANR	4065766	IfStatement	if ( core -> file )		4065603	5					
ANR	4065767	Condition	core -> file	1056:6:30024:30033	4065603	0	True				
ANR	4065768	PtrMemberAccess	core -> file		4065603	0					
ANR	4065769	Identifier	core		4065603	0					
ANR	4065770	Identifier	file		4065603	1					
ANR	4065771	CompoundStatement		21:18:603:603	4065603	1					
ANR	4065772	ExpressionStatement	"r_debug_select ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) , r_io_fd_get_tid ( core -> io , core -> file -> fd ) )"	1057:3:30041:30160	4065603	0	True				
ANR	4065773	CallExpression	"r_debug_select ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) , r_io_fd_get_tid ( core -> io , core -> file -> fd ) )"		4065603	0					
ANR	4065774	Callee	r_debug_select		4065603	0					
ANR	4065775	Identifier	r_debug_select		4065603	0					
ANR	4065776	ArgumentList	core -> dbg		4065603	1					
ANR	4065777	Argument	core -> dbg		4065603	0					
ANR	4065778	PtrMemberAccess	core -> dbg		4065603	0					
ANR	4065779	Identifier	core		4065603	0					
ANR	4065780	Identifier	dbg		4065603	1					
ANR	4065781	Argument	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		4065603	1					
ANR	4065782	CallExpression	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		4065603	0					
ANR	4065783	Callee	r_io_fd_get_pid		4065603	0					
ANR	4065784	Identifier	r_io_fd_get_pid		4065603	0					
ANR	4065785	ArgumentList	core -> io		4065603	1					
ANR	4065786	Argument	core -> io		4065603	0					
ANR	4065787	PtrMemberAccess	core -> io		4065603	0					
ANR	4065788	Identifier	core		4065603	0					
ANR	4065789	Identifier	io		4065603	1					
ANR	4065790	Argument	core -> file -> fd		4065603	1					
ANR	4065791	PtrMemberAccess	core -> file -> fd		4065603	0					
ANR	4065792	PtrMemberAccess	core -> file		4065603	0					
ANR	4065793	Identifier	core		4065603	0					
ANR	4065794	Identifier	file		4065603	1					
ANR	4065795	Identifier	fd		4065603	1					
ANR	4065796	Argument	"r_io_fd_get_tid ( core -> io , core -> file -> fd )"		4065603	2					
ANR	4065797	CallExpression	"r_io_fd_get_tid ( core -> io , core -> file -> fd )"		4065603	0					
ANR	4065798	Callee	r_io_fd_get_tid		4065603	0					
ANR	4065799	Identifier	r_io_fd_get_tid		4065603	0					
ANR	4065800	ArgumentList	core -> io		4065603	1					
ANR	4065801	Argument	core -> io		4065603	0					
ANR	4065802	PtrMemberAccess	core -> io		4065603	0					
ANR	4065803	Identifier	core		4065603	0					
ANR	4065804	Identifier	io		4065603	1					
ANR	4065805	Argument	core -> file -> fd		4065603	1					
ANR	4065806	PtrMemberAccess	core -> file -> fd		4065603	0					
ANR	4065807	PtrMemberAccess	core -> file		4065603	0					
ANR	4065808	Identifier	core		4065603	0					
ANR	4065809	Identifier	file		4065603	1					
ANR	4065810	Identifier	fd		4065603	1					
ANR	4065811	ElseStatement	else		4065603	0					
ANR	4065812	CompoundStatement		25:8:741:741	4065603	0					
ANR	4065813	ExpressionStatement	"r_debug_use ( core -> dbg , NULL )"	1061:2:30178:30207	4065603	0	True				
ANR	4065814	CallExpression	"r_debug_use ( core -> dbg , NULL )"		4065603	0					
ANR	4065815	Callee	r_debug_use		4065603	0					
ANR	4065816	Identifier	r_debug_use		4065603	0					
ANR	4065817	ArgumentList	core -> dbg		4065603	1					
ANR	4065818	Argument	core -> dbg		4065603	0					
ANR	4065819	PtrMemberAccess	core -> dbg		4065603	0					
ANR	4065820	Identifier	core		4065603	0					
ANR	4065821	Identifier	dbg		4065603	1					
ANR	4065822	Argument	NULL		4065603	1					
ANR	4065823	Identifier	NULL		4065603	0					
ANR	4065824	ExpressionStatement	core -> bin -> is_debugger = false	1062:2:30211:30241	4065603	1	True				
ANR	4065825	AssignmentExpression	core -> bin -> is_debugger = false		4065603	0		=			
ANR	4065826	PtrMemberAccess	core -> bin -> is_debugger		4065603	0					
ANR	4065827	PtrMemberAccess	core -> bin		4065603	0					
ANR	4065828	Identifier	core		4065603	0					
ANR	4065829	Identifier	bin		4065603	1					
ANR	4065830	Identifier	is_debugger		4065603	1					
ANR	4065831	Identifier	false		4065603	1					
ANR	4065832	ReturnStatement	return true ;	1064:1:30247:30258	4065603	5	True				
ANR	4065833	Identifier	true		4065603	0					
ANR	4065834	ReturnType	static bool		4065603	1					
ANR	4065835	Identifier	cb_cfgdebug		4065603	2					
ANR	4065836	ParameterList	"void * user , void * data"		4065603	3					
ANR	4065837	Parameter	void * user	1036:24:29408:29417	4065603	0	True				
ANR	4065838	ParameterType	void *		4065603	0					
ANR	4065839	Identifier	user		4065603	1					
ANR	4065840	Parameter	void * data	1036:36:29420:29429	4065603	1	True				
ANR	4065841	ParameterType	void *		4065603	0					
ANR	4065842	Identifier	data		4065603	1					
ANR	4065843	CFGEntryNode	ENTRY		4065603		True				
ANR	4065844	CFGExitNode	EXIT		4065603		True				
ANR	4065845	Symbol	dbgbackend		4065603						
ANR	4065846	Symbol	data		4065603						
ANR	4065847	Symbol	* core		4065603						
ANR	4065848	Symbol	r_config_get		4065603						
ANR	4065849	Symbol	core -> io		4065603						
ANR	4065850	Symbol	core -> bin -> is_debugger		4065603						
ANR	4065851	Symbol	core -> io -> debug		4065603						
ANR	4065852	Symbol	* node		4065603						
ANR	4065853	Symbol	* core -> bin		4065603						
ANR	4065854	Symbol	core -> bin		4065603						
ANR	4065855	Symbol	* * core		4065603						
ANR	4065856	Symbol	core -> config		4065603						
ANR	4065857	Symbol	strcmp		4065603						
ANR	4065858	Symbol	NULL		4065603						
ANR	4065859	Symbol	core -> file		4065603						
ANR	4065860	Symbol	false		4065603						
ANR	4065861	Symbol	node -> i_value		4065603						
ANR	4065862	Symbol	core -> io -> va		4065603						
ANR	4065863	Symbol	r_io_fd_get_tid		4065603						
ANR	4065864	Symbol	core		4065603						
ANR	4065865	Symbol	node		4065603						
ANR	4065866	Symbol	* core -> io		4065603						
ANR	4065867	Symbol	* core -> file		4065603						
ANR	4065868	Symbol	r_io_fd_get_pid		4065603						
ANR	4065869	Symbol	true		4065603						
ANR	4065870	Symbol	core -> file -> fd		4065603						
ANR	4065871	Symbol	user		4065603						
ANR	4065872	Symbol	core -> dbg		4065603						
ANR	4065873	Function	cb_dirhome	1067:0:30263:30433							
ANR	4065874	FunctionDef	"cb_dirhome (void * user , void * data)"		4065873	0					
ANR	4065875	CompoundStatement		1067:47:30310:30433	4065873	0					
ANR	4065876	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1068:1:30313:30352	4065873	0	True				
ANR	4065877	IdentifierDecl	* node = ( RConfigNode * ) data		4065873	0					
ANR	4065878	IdentifierDeclType	RConfigNode *		4065873	0					
ANR	4065879	Identifier	node		4065873	1					
ANR	4065880	AssignmentExpression	* node = ( RConfigNode * ) data		4065873	2		=			
ANR	4065881	Identifier	node		4065873	0					
ANR	4065882	CastExpression	( RConfigNode * ) data		4065873	1					
ANR	4065883	CastTarget	RConfigNode *		4065873	0					
ANR	4065884	Identifier	data		4065873	1					
ANR	4065885	IfStatement	if ( node -> value )		4065873	1					
ANR	4065886	Condition	node -> value	1069:5:30359:30369	4065873	0	True				
ANR	4065887	PtrMemberAccess	node -> value		4065873	0					
ANR	4065888	Identifier	node		4065873	0					
ANR	4065889	Identifier	value		4065873	1					
ANR	4065890	CompoundStatement		3:18:61:61	4065873	1					
ANR	4065891	ExpressionStatement	"r_sys_setenv ( R_SYS_HOME , node -> value )"	1070:2:30376:30414	4065873	0	True				
ANR	4065892	CallExpression	"r_sys_setenv ( R_SYS_HOME , node -> value )"		4065873	0					
ANR	4065893	Callee	r_sys_setenv		4065873	0					
ANR	4065894	Identifier	r_sys_setenv		4065873	0					
ANR	4065895	ArgumentList	R_SYS_HOME		4065873	1					
ANR	4065896	Argument	R_SYS_HOME		4065873	0					
ANR	4065897	Identifier	R_SYS_HOME		4065873	0					
ANR	4065898	Argument	node -> value		4065873	1					
ANR	4065899	PtrMemberAccess	node -> value		4065873	0					
ANR	4065900	Identifier	node		4065873	0					
ANR	4065901	Identifier	value		4065873	1					
ANR	4065902	ReturnStatement	return true ;	1072:1:30420:30431	4065873	2	True				
ANR	4065903	Identifier	true		4065873	0					
ANR	4065904	ReturnType	static bool		4065873	1					
ANR	4065905	Identifier	cb_dirhome		4065873	2					
ANR	4065906	ParameterList	"void * user , void * data"		4065873	3					
ANR	4065907	Parameter	void * user	1067:23:30286:30295	4065873	0	True				
ANR	4065908	ParameterType	void *		4065873	0					
ANR	4065909	Identifier	user		4065873	1					
ANR	4065910	Parameter	void * data	1067:35:30298:30307	4065873	1	True				
ANR	4065911	ParameterType	void *		4065873	0					
ANR	4065912	Identifier	data		4065873	1					
ANR	4065913	CFGEntryNode	ENTRY		4065873		True				
ANR	4065914	CFGExitNode	EXIT		4065873		True				
ANR	4065915	Symbol	node		4065873						
ANR	4065916	Symbol	data		4065873						
ANR	4065917	Symbol	R_SYS_HOME		4065873						
ANR	4065918	Symbol	true		4065873						
ANR	4065919	Symbol	* node		4065873						
ANR	4065920	Symbol	user		4065873						
ANR	4065921	Symbol	node -> value		4065873						
ANR	4065922	Function	cb_dirtmp	1075:0:30436:30605							
ANR	4065923	FunctionDef	"cb_dirtmp (void * user , void * data)"		4065922	0					
ANR	4065924	CompoundStatement		1075:47:30483:30605	4065922	0					
ANR	4065925	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1076:1:30486:30525	4065922	0	True				
ANR	4065926	IdentifierDecl	* node = ( RConfigNode * ) data		4065922	0					
ANR	4065927	IdentifierDeclType	RConfigNode *		4065922	0					
ANR	4065928	Identifier	node		4065922	1					
ANR	4065929	AssignmentExpression	* node = ( RConfigNode * ) data		4065922	2		=			
ANR	4065930	Identifier	node		4065922	0					
ANR	4065931	CastExpression	( RConfigNode * ) data		4065922	1					
ANR	4065932	CastTarget	RConfigNode *		4065922	0					
ANR	4065933	Identifier	data		4065922	1					
ANR	4065934	IfStatement	if ( node -> value )		4065922	1					
ANR	4065935	Condition	node -> value	1077:5:30532:30542	4065922	0	True				
ANR	4065936	PtrMemberAccess	node -> value		4065922	0					
ANR	4065937	Identifier	node		4065922	0					
ANR	4065938	Identifier	value		4065922	1					
ANR	4065939	CompoundStatement		3:18:61:61	4065922	1					
ANR	4065940	ExpressionStatement	"r_sys_setenv ( R_SYS_TMP , node -> value )"	1078:2:30549:30586	4065922	0	True				
ANR	4065941	CallExpression	"r_sys_setenv ( R_SYS_TMP , node -> value )"		4065922	0					
ANR	4065942	Callee	r_sys_setenv		4065922	0					
ANR	4065943	Identifier	r_sys_setenv		4065922	0					
ANR	4065944	ArgumentList	R_SYS_TMP		4065922	1					
ANR	4065945	Argument	R_SYS_TMP		4065922	0					
ANR	4065946	Identifier	R_SYS_TMP		4065922	0					
ANR	4065947	Argument	node -> value		4065922	1					
ANR	4065948	PtrMemberAccess	node -> value		4065922	0					
ANR	4065949	Identifier	node		4065922	0					
ANR	4065950	Identifier	value		4065922	1					
ANR	4065951	ReturnStatement	return true ;	1080:1:30592:30603	4065922	2	True				
ANR	4065952	Identifier	true		4065922	0					
ANR	4065953	ReturnType	static bool		4065922	1					
ANR	4065954	Identifier	cb_dirtmp		4065922	2					
ANR	4065955	ParameterList	"void * user , void * data"		4065922	3					
ANR	4065956	Parameter	void * user	1075:23:30459:30468	4065922	0	True				
ANR	4065957	ParameterType	void *		4065922	0					
ANR	4065958	Identifier	user		4065922	1					
ANR	4065959	Parameter	void * data	1075:35:30471:30480	4065922	1	True				
ANR	4065960	ParameterType	void *		4065922	0					
ANR	4065961	Identifier	data		4065922	1					
ANR	4065962	CFGEntryNode	ENTRY		4065922		True				
ANR	4065963	CFGExitNode	EXIT		4065922		True				
ANR	4065964	Symbol	node		4065922						
ANR	4065965	Symbol	data		4065922						
ANR	4065966	Symbol	R_SYS_TMP		4065922						
ANR	4065967	Symbol	true		4065922						
ANR	4065968	Symbol	* node		4065922						
ANR	4065969	Symbol	user		4065922						
ANR	4065970	Symbol	node -> value		4065922						
ANR	4065971	Function	cb_dirsrc	1083:0:30608:30812							
ANR	4065972	FunctionDef	"cb_dirsrc (void * user , void * data)"		4065971	0					
ANR	4065973	CompoundStatement		1083:46:30654:30812	4065971	0					
ANR	4065974	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1084:1:30657:30696	4065971	0	True				
ANR	4065975	IdentifierDecl	* node = ( RConfigNode * ) data		4065971	0					
ANR	4065976	IdentifierDeclType	RConfigNode *		4065971	0					
ANR	4065977	Identifier	node		4065971	1					
ANR	4065978	AssignmentExpression	* node = ( RConfigNode * ) data		4065971	2		=			
ANR	4065979	Identifier	node		4065971	0					
ANR	4065980	CastExpression	( RConfigNode * ) data		4065971	1					
ANR	4065981	CastTarget	RConfigNode *		4065971	0					
ANR	4065982	Identifier	data		4065971	1					
ANR	4065983	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1085:1:30699:30726	4065971	1	True				
ANR	4065984	IdentifierDecl	* core = ( RCore * ) user		4065971	0					
ANR	4065985	IdentifierDeclType	RCore *		4065971	0					
ANR	4065986	Identifier	core		4065971	1					
ANR	4065987	AssignmentExpression	* core = ( RCore * ) user		4065971	2		=			
ANR	4065988	Identifier	core		4065971	0					
ANR	4065989	CastExpression	( RCore * ) user		4065971	1					
ANR	4065990	CastTarget	RCore *		4065971	0					
ANR	4065991	Identifier	user		4065971	1					
ANR	4065992	ExpressionStatement	free ( core -> bin -> srcdir )	1086:1:30729:30753	4065971	2	True				
ANR	4065993	CallExpression	free ( core -> bin -> srcdir )		4065971	0					
ANR	4065994	Callee	free		4065971	0					
ANR	4065995	Identifier	free		4065971	0					
ANR	4065996	ArgumentList	core -> bin -> srcdir		4065971	1					
ANR	4065997	Argument	core -> bin -> srcdir		4065971	0					
ANR	4065998	PtrMemberAccess	core -> bin -> srcdir		4065971	0					
ANR	4065999	PtrMemberAccess	core -> bin		4065971	0					
ANR	4066000	Identifier	core		4065971	0					
ANR	4066001	Identifier	bin		4065971	1					
ANR	4066002	Identifier	srcdir		4065971	1					
ANR	4066003	ExpressionStatement	core -> bin -> srcdir = strdup ( node -> value )	1087:1:30756:30796	4065971	3	True				
ANR	4066004	AssignmentExpression	core -> bin -> srcdir = strdup ( node -> value )		4065971	0		=			
ANR	4066005	PtrMemberAccess	core -> bin -> srcdir		4065971	0					
ANR	4066006	PtrMemberAccess	core -> bin		4065971	0					
ANR	4066007	Identifier	core		4065971	0					
ANR	4066008	Identifier	bin		4065971	1					
ANR	4066009	Identifier	srcdir		4065971	1					
ANR	4066010	CallExpression	strdup ( node -> value )		4065971	1					
ANR	4066011	Callee	strdup		4065971	0					
ANR	4066012	Identifier	strdup		4065971	0					
ANR	4066013	ArgumentList	node -> value		4065971	1					
ANR	4066014	Argument	node -> value		4065971	0					
ANR	4066015	PtrMemberAccess	node -> value		4065971	0					
ANR	4066016	Identifier	node		4065971	0					
ANR	4066017	Identifier	value		4065971	1					
ANR	4066018	ReturnStatement	return true ;	1088:1:30799:30810	4065971	4	True				
ANR	4066019	Identifier	true		4065971	0					
ANR	4066020	ReturnType	static bool		4065971	1					
ANR	4066021	Identifier	cb_dirsrc		4065971	2					
ANR	4066022	ParameterList	"void * user , void * data"		4065971	3					
ANR	4066023	Parameter	void * user	1083:22:30630:30639	4065971	0	True				
ANR	4066024	ParameterType	void *		4065971	0					
ANR	4066025	Identifier	user		4065971	1					
ANR	4066026	Parameter	void * data	1083:34:30642:30651	4065971	1	True				
ANR	4066027	ParameterType	void *		4065971	0					
ANR	4066028	Identifier	data		4065971	1					
ANR	4066029	CFGEntryNode	ENTRY		4065971		True				
ANR	4066030	CFGExitNode	EXIT		4065971		True				
ANR	4066031	Symbol	data		4065971						
ANR	4066032	Symbol	* core		4065971						
ANR	4066033	Symbol	core -> bin -> srcdir		4065971						
ANR	4066034	Symbol	node -> value		4065971						
ANR	4066035	Symbol	node		4065971						
ANR	4066036	Symbol	core		4065971						
ANR	4066037	Symbol	true		4065971						
ANR	4066038	Symbol	* node		4065971						
ANR	4066039	Symbol	* core -> bin		4065971						
ANR	4066040	Symbol	strdup		4065971						
ANR	4066041	Symbol	user		4065971						
ANR	4066042	Symbol	core -> bin		4065971						
ANR	4066043	Symbol	* * core		4065971						
ANR	4066044	Function	cb_cfgsanbox	1091:0:30815:31064							
ANR	4066045	FunctionDef	"cb_cfgsanbox (void * user , void * data)"		4066044	0					
ANR	4066046	CompoundStatement		1091:49:30864:31064	4066044	0					
ANR	4066047	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1092:1:30867:30906	4066044	0	True				
ANR	4066048	IdentifierDecl	* node = ( RConfigNode * ) data		4066044	0					
ANR	4066049	IdentifierDeclType	RConfigNode *		4066044	0					
ANR	4066050	Identifier	node		4066044	1					
ANR	4066051	AssignmentExpression	* node = ( RConfigNode * ) data		4066044	2		=			
ANR	4066052	Identifier	node		4066044	0					
ANR	4066053	CastExpression	( RConfigNode * ) data		4066044	1					
ANR	4066054	CastTarget	RConfigNode *		4066044	0					
ANR	4066055	Identifier	data		4066044	1					
ANR	4066056	IdentifierDeclStatement	int ret = r_sandbox_enable ( node -> i_value ) ;	1093:1:30909:30951	4066044	1	True				
ANR	4066057	IdentifierDecl	ret = r_sandbox_enable ( node -> i_value )		4066044	0					
ANR	4066058	IdentifierDeclType	int		4066044	0					
ANR	4066059	Identifier	ret		4066044	1					
ANR	4066060	AssignmentExpression	ret = r_sandbox_enable ( node -> i_value )		4066044	2		=			
ANR	4066061	Identifier	ret		4066044	0					
ANR	4066062	CallExpression	r_sandbox_enable ( node -> i_value )		4066044	1					
ANR	4066063	Callee	r_sandbox_enable		4066044	0					
ANR	4066064	Identifier	r_sandbox_enable		4066044	0					
ANR	4066065	ArgumentList	node -> i_value		4066044	1					
ANR	4066066	Argument	node -> i_value		4066044	0					
ANR	4066067	PtrMemberAccess	node -> i_value		4066044	0					
ANR	4066068	Identifier	node		4066044	0					
ANR	4066069	Identifier	i_value		4066044	1					
ANR	4066070	IfStatement	if ( node -> i_value != ret )		4066044	2					
ANR	4066071	Condition	node -> i_value != ret	1094:5:30958:30977	4066044	0	True				
ANR	4066072	EqualityExpression	node -> i_value != ret		4066044	0		!=			
ANR	4066073	PtrMemberAccess	node -> i_value		4066044	0					
ANR	4066074	Identifier	node		4066044	0					
ANR	4066075	Identifier	i_value		4066044	1					
ANR	4066076	Identifier	ret		4066044	1					
ANR	4066077	CompoundStatement		4:27:115:115	4066044	1					
ANR	4066078	ExpressionStatement	"eprintf ( ""Cannot disable sandbox\\n"" )"	1095:2:30984:31020	4066044	0	True				
ANR	4066079	CallExpression	"eprintf ( ""Cannot disable sandbox\\n"" )"		4066044	0					
ANR	4066080	Callee	eprintf		4066044	0					
ANR	4066081	Identifier	eprintf		4066044	0					
ANR	4066082	ArgumentList	"""Cannot disable sandbox\\n"""		4066044	1					
ANR	4066083	Argument	"""Cannot disable sandbox\\n"""		4066044	0					
ANR	4066084	PrimaryExpression	"""Cannot disable sandbox\\n"""		4066044	0					
ANR	4066085	ReturnStatement	return ( ! node -> i_value && ret ) ? 0 : 1 ;	1097:1:31026:31062	4066044	3	True				
ANR	4066086	ConditionalExpression	( ! node -> i_value && ret ) ? 0 : 1		4066044	0					
ANR	4066087	Condition	! node -> i_value && ret		4066044	0					
ANR	4066088	AndExpression	! node -> i_value && ret		4066044	0		&&			
ANR	4066089	UnaryOperationExpression	! node -> i_value		4066044	0					
ANR	4066090	UnaryOperator	!		4066044	0					
ANR	4066091	PtrMemberAccess	node -> i_value		4066044	1					
ANR	4066092	Identifier	node		4066044	0					
ANR	4066093	Identifier	i_value		4066044	1					
ANR	4066094	Identifier	ret		4066044	1					
ANR	4066095	PrimaryExpression	0		4066044	1					
ANR	4066096	PrimaryExpression	1		4066044	2					
ANR	4066097	ReturnType	static bool		4066044	1					
ANR	4066098	Identifier	cb_cfgsanbox		4066044	2					
ANR	4066099	ParameterList	"void * user , void * data"		4066044	3					
ANR	4066100	Parameter	void * user	1091:25:30840:30849	4066044	0	True				
ANR	4066101	ParameterType	void *		4066044	0					
ANR	4066102	Identifier	user		4066044	1					
ANR	4066103	Parameter	void * data	1091:37:30852:30861	4066044	1	True				
ANR	4066104	ParameterType	void *		4066044	0					
ANR	4066105	Identifier	data		4066044	1					
ANR	4066106	CFGEntryNode	ENTRY		4066044		True				
ANR	4066107	CFGExitNode	EXIT		4066044		True				
ANR	4066108	Symbol	ret		4066044						
ANR	4066109	Symbol	node		4066044						
ANR	4066110	Symbol	data		4066044						
ANR	4066111	Symbol	r_sandbox_enable		4066044						
ANR	4066112	Symbol	* node		4066044						
ANR	4066113	Symbol	user		4066044						
ANR	4066114	Symbol	node -> i_value		4066044						
ANR	4066115	Function	cb_str_escbslash	1100:0:31067:31250							
ANR	4066116	FunctionDef	"cb_str_escbslash (void * user , void * data)"		4066115	0					
ANR	4066117	CompoundStatement		1100:53:31120:31250	4066115	0					
ANR	4066118	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1101:1:31123:31150	4066115	0	True				
ANR	4066119	IdentifierDecl	* core = ( RCore * ) user		4066115	0					
ANR	4066120	IdentifierDeclType	RCore *		4066115	0					
ANR	4066121	Identifier	core		4066115	1					
ANR	4066122	AssignmentExpression	* core = ( RCore * ) user		4066115	2		=			
ANR	4066123	Identifier	core		4066115	0					
ANR	4066124	CastExpression	( RCore * ) user		4066115	1					
ANR	4066125	CastTarget	RCore *		4066115	0					
ANR	4066126	Identifier	user		4066115	1					
ANR	4066127	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1102:1:31153:31192	4066115	1	True				
ANR	4066128	IdentifierDecl	* node = ( RConfigNode * ) data		4066115	0					
ANR	4066129	IdentifierDeclType	RConfigNode *		4066115	0					
ANR	4066130	Identifier	node		4066115	1					
ANR	4066131	AssignmentExpression	* node = ( RConfigNode * ) data		4066115	2		=			
ANR	4066132	Identifier	node		4066115	0					
ANR	4066133	CastExpression	( RConfigNode * ) data		4066115	1					
ANR	4066134	CastTarget	RConfigNode *		4066115	0					
ANR	4066135	Identifier	data		4066115	1					
ANR	4066136	ExpressionStatement	core -> print -> esc_bslash = node -> i_value	1103:1:31195:31234	4066115	2	True				
ANR	4066137	AssignmentExpression	core -> print -> esc_bslash = node -> i_value		4066115	0		=			
ANR	4066138	PtrMemberAccess	core -> print -> esc_bslash		4066115	0					
ANR	4066139	PtrMemberAccess	core -> print		4066115	0					
ANR	4066140	Identifier	core		4066115	0					
ANR	4066141	Identifier	print		4066115	1					
ANR	4066142	Identifier	esc_bslash		4066115	1					
ANR	4066143	PtrMemberAccess	node -> i_value		4066115	1					
ANR	4066144	Identifier	node		4066115	0					
ANR	4066145	Identifier	i_value		4066115	1					
ANR	4066146	ReturnStatement	return true ;	1104:1:31237:31248	4066115	3	True				
ANR	4066147	Identifier	true		4066115	0					
ANR	4066148	ReturnType	static bool		4066115	1					
ANR	4066149	Identifier	cb_str_escbslash		4066115	2					
ANR	4066150	ParameterList	"void * user , void * data"		4066115	3					
ANR	4066151	Parameter	void * user	1100:29:31096:31105	4066115	0	True				
ANR	4066152	ParameterType	void *		4066115	0					
ANR	4066153	Identifier	user		4066115	1					
ANR	4066154	Parameter	void * data	1100:41:31108:31117	4066115	1	True				
ANR	4066155	ParameterType	void *		4066115	0					
ANR	4066156	Identifier	data		4066115	1					
ANR	4066157	CFGEntryNode	ENTRY		4066115		True				
ANR	4066158	CFGExitNode	EXIT		4066115		True				
ANR	4066159	Symbol	core		4066115						
ANR	4066160	Symbol	node		4066115						
ANR	4066161	Symbol	core -> print -> esc_bslash		4066115						
ANR	4066162	Symbol	* core -> print		4066115						
ANR	4066163	Symbol	data		4066115						
ANR	4066164	Symbol	* core		4066115						
ANR	4066165	Symbol	true		4066115						
ANR	4066166	Symbol	* node		4066115						
ANR	4066167	Symbol	core -> print		4066115						
ANR	4066168	Symbol	user		4066115						
ANR	4066169	Symbol	* * core		4066115						
ANR	4066170	Symbol	node -> i_value		4066115						
ANR	4066171	Function	cb_completion_maxtab	1107:0:31253:31485							
ANR	4066172	FunctionDef	"cb_completion_maxtab (void * user , void * data)"		4066171	0					
ANR	4066173	CompoundStatement		1107:58:31311:31485	4066171	0					
ANR	4066174	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1108:8:31321:31348	4066171	0	True				
ANR	4066175	IdentifierDecl	* core = ( RCore * ) user		4066171	0					
ANR	4066176	IdentifierDeclType	RCore *		4066171	0					
ANR	4066177	Identifier	core		4066171	1					
ANR	4066178	AssignmentExpression	* core = ( RCore * ) user		4066171	2		=			
ANR	4066179	Identifier	core		4066171	0					
ANR	4066180	CastExpression	( RCore * ) user		4066171	1					
ANR	4066181	CastTarget	RCore *		4066171	0					
ANR	4066182	Identifier	user		4066171	1					
ANR	4066183	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1109:8:31358:31397	4066171	1	True				
ANR	4066184	IdentifierDecl	* node = ( RConfigNode * ) data		4066171	0					
ANR	4066185	IdentifierDeclType	RConfigNode *		4066171	0					
ANR	4066186	Identifier	node		4066171	1					
ANR	4066187	AssignmentExpression	* node = ( RConfigNode * ) data		4066171	2		=			
ANR	4066188	Identifier	node		4066171	0					
ANR	4066189	CastExpression	( RConfigNode * ) data		4066171	1					
ANR	4066190	CastTarget	RConfigNode *		4066171	0					
ANR	4066191	Identifier	data		4066171	1					
ANR	4066192	ExpressionStatement	core -> cons -> line -> completion . args_limit = node -> i_value	1110:8:31407:31462	4066171	2	True				
ANR	4066193	AssignmentExpression	core -> cons -> line -> completion . args_limit = node -> i_value		4066171	0		=			
ANR	4066194	MemberAccess	core -> cons -> line -> completion . args_limit		4066171	0					
ANR	4066195	PtrMemberAccess	core -> cons -> line -> completion		4066171	0					
ANR	4066196	PtrMemberAccess	core -> cons -> line		4066171	0					
ANR	4066197	PtrMemberAccess	core -> cons		4066171	0					
ANR	4066198	Identifier	core		4066171	0					
ANR	4066199	Identifier	cons		4066171	1					
ANR	4066200	Identifier	line		4066171	1					
ANR	4066201	Identifier	completion		4066171	1					
ANR	4066202	Identifier	args_limit		4066171	1					
ANR	4066203	PtrMemberAccess	node -> i_value		4066171	1					
ANR	4066204	Identifier	node		4066171	0					
ANR	4066205	Identifier	i_value		4066171	1					
ANR	4066206	ReturnStatement	return true ;	1111:8:31472:31483	4066171	3	True				
ANR	4066207	Identifier	true		4066171	0					
ANR	4066208	ReturnType	static bool		4066171	1					
ANR	4066209	Identifier	cb_completion_maxtab		4066171	2					
ANR	4066210	ParameterList	"void * user , void * data"		4066171	3					
ANR	4066211	Parameter	void * user	1107:34:31287:31296	4066171	0	True				
ANR	4066212	ParameterType	void *		4066171	0					
ANR	4066213	Identifier	user		4066171	1					
ANR	4066214	Parameter	void * data	1107:46:31299:31308	4066171	1	True				
ANR	4066215	ParameterType	void *		4066171	0					
ANR	4066216	Identifier	data		4066171	1					
ANR	4066217	CFGEntryNode	ENTRY		4066171		True				
ANR	4066218	CFGExitNode	EXIT		4066171		True				
ANR	4066219	Symbol	data		4066171						
ANR	4066220	Symbol	* core -> cons		4066171						
ANR	4066221	Symbol	* * core -> cons		4066171						
ANR	4066222	Symbol	* core		4066171						
ANR	4066223	Symbol	core -> cons -> line -> completion		4066171						
ANR	4066224	Symbol	node -> i_value		4066171						
ANR	4066225	Symbol	core		4066171						
ANR	4066226	Symbol	node		4066171						
ANR	4066227	Symbol	* * * core		4066171						
ANR	4066228	Symbol	core -> cons		4066171						
ANR	4066229	Symbol	* core -> cons -> line		4066171						
ANR	4066230	Symbol	true		4066171						
ANR	4066231	Symbol	* node		4066171						
ANR	4066232	Symbol	user		4066171						
ANR	4066233	Symbol	core -> cons -> line		4066171						
ANR	4066234	Symbol	* * core		4066171						
ANR	4066235	Symbol	core -> cons -> line -> completion . args_limit		4066171						
ANR	4066236	Function	cb_cfg_fortunes	1114:0:31488:31797							
ANR	4066237	FunctionDef	"cb_cfg_fortunes (void * user , void * data)"		4066236	0					
ANR	4066238	CompoundStatement		1114:52:31540:31797	4066236	0					
ANR	4066239	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1115:1:31543:31570	4066236	0	True				
ANR	4066240	IdentifierDecl	* core = ( RCore * ) user		4066236	0					
ANR	4066241	IdentifierDeclType	RCore *		4066236	0					
ANR	4066242	Identifier	core		4066236	1					
ANR	4066243	AssignmentExpression	* core = ( RCore * ) user		4066236	2		=			
ANR	4066244	Identifier	core		4066236	0					
ANR	4066245	CastExpression	( RCore * ) user		4066236	1					
ANR	4066246	CastTarget	RCore *		4066236	0					
ANR	4066247	Identifier	user		4066236	1					
ANR	4066248	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1116:1:31573:31612	4066236	1	True				
ANR	4066249	IdentifierDecl	* node = ( RConfigNode * ) data		4066236	0					
ANR	4066250	IdentifierDeclType	RConfigNode *		4066236	0					
ANR	4066251	Identifier	node		4066236	1					
ANR	4066252	AssignmentExpression	* node = ( RConfigNode * ) data		4066236	2		=			
ANR	4066253	Identifier	node		4066236	0					
ANR	4066254	CastExpression	( RConfigNode * ) data		4066236	1					
ANR	4066255	CastTarget	RConfigNode *		4066236	0					
ANR	4066256	Identifier	data		4066236	1					
ANR	4066257	IfStatement	if ( node -> value [ 0 ] == '?' )		4066236	2					
ANR	4066258	Condition	node -> value [ 0 ] == '?'	1118:5:31709:31729	4066236	0	True				
ANR	4066259	EqualityExpression	node -> value [ 0 ] == '?'		4066236	0		==			
ANR	4066260	ArrayIndexing	node -> value [ 0 ]		4066236	0					
ANR	4066261	PtrMemberAccess	node -> value		4066236	0					
ANR	4066262	Identifier	node		4066236	0					
ANR	4066263	Identifier	value		4066236	1					
ANR	4066264	PrimaryExpression	0		4066236	1					
ANR	4066265	PrimaryExpression	'?'		4066236	1					
ANR	4066266	CompoundStatement		5:28:191:191	4066236	1					
ANR	4066267	ExpressionStatement	r_core_fortune_list ( core )	1119:2:31736:31762	4066236	0	True				
ANR	4066268	CallExpression	r_core_fortune_list ( core )		4066236	0					
ANR	4066269	Callee	r_core_fortune_list		4066236	0					
ANR	4066270	Identifier	r_core_fortune_list		4066236	0					
ANR	4066271	ArgumentList	core		4066236	1					
ANR	4066272	Argument	core		4066236	0					
ANR	4066273	Identifier	core		4066236	0					
ANR	4066274	ReturnStatement	return false ;	1120:2:31766:31778	4066236	1	True				
ANR	4066275	Identifier	false		4066236	0					
ANR	4066276	ReturnStatement	return true ;	1122:1:31784:31795	4066236	3	True				
ANR	4066277	Identifier	true		4066236	0					
ANR	4066278	ReturnType	static bool		4066236	1					
ANR	4066279	Identifier	cb_cfg_fortunes		4066236	2					
ANR	4066280	ParameterList	"void * user , void * data"		4066236	3					
ANR	4066281	Parameter	void * user	1114:28:31516:31525	4066236	0	True				
ANR	4066282	ParameterType	void *		4066236	0					
ANR	4066283	Identifier	user		4066236	1					
ANR	4066284	Parameter	void * data	1114:40:31528:31537	4066236	1	True				
ANR	4066285	ParameterType	void *		4066236	0					
ANR	4066286	Identifier	data		4066236	1					
ANR	4066287	CFGEntryNode	ENTRY		4066236		True				
ANR	4066288	CFGExitNode	EXIT		4066236		True				
ANR	4066289	Symbol	core		4066236						
ANR	4066290	Symbol	node		4066236						
ANR	4066291	Symbol	* node -> value		4066236						
ANR	4066292	Symbol	data		4066236						
ANR	4066293	Symbol	* * node		4066236						
ANR	4066294	Symbol	false		4066236						
ANR	4066295	Symbol	true		4066236						
ANR	4066296	Symbol	* node		4066236						
ANR	4066297	Symbol	user		4066236						
ANR	4066298	Symbol	node -> value		4066236						
ANR	4066299	Function	cb_cfg_fortunes_type	1125:0:31800:31996							
ANR	4066300	FunctionDef	"cb_cfg_fortunes_type (void * user , void * data)"		4066299	0					
ANR	4066301	CompoundStatement		1125:57:31857:31996	4066299	0					
ANR	4066302	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1126:1:31860:31899	4066299	0	True				
ANR	4066303	IdentifierDecl	* node = ( RConfigNode * ) data		4066299	0					
ANR	4066304	IdentifierDeclType	RConfigNode *		4066299	0					
ANR	4066305	Identifier	node		4066299	1					
ANR	4066306	AssignmentExpression	* node = ( RConfigNode * ) data		4066299	2		=			
ANR	4066307	Identifier	node		4066299	0					
ANR	4066308	CastExpression	( RConfigNode * ) data		4066299	1					
ANR	4066309	CastTarget	RConfigNode *		4066299	0					
ANR	4066310	Identifier	data		4066299	1					
ANR	4066311	IfStatement	if ( node -> value [ 0 ] == '?' )		4066299	1					
ANR	4066312	Condition	node -> value [ 0 ] == '?'	1127:5:31906:31926	4066299	0	True				
ANR	4066313	EqualityExpression	node -> value [ 0 ] == '?'		4066299	0		==			
ANR	4066314	ArrayIndexing	node -> value [ 0 ]		4066299	0					
ANR	4066315	PtrMemberAccess	node -> value		4066299	0					
ANR	4066316	Identifier	node		4066299	0					
ANR	4066317	Identifier	value		4066299	1					
ANR	4066318	PrimaryExpression	0		4066299	1					
ANR	4066319	PrimaryExpression	'?'		4066299	1					
ANR	4066320	CompoundStatement		3:28:71:71	4066299	1					
ANR	4066321	ExpressionStatement	r_core_fortune_list_types ( )	1128:2:31933:31961	4066299	0	True				
ANR	4066322	CallExpression	r_core_fortune_list_types ( )		4066299	0					
ANR	4066323	Callee	r_core_fortune_list_types		4066299	0					
ANR	4066324	Identifier	r_core_fortune_list_types		4066299	0					
ANR	4066325	ArgumentList			4066299	1					
ANR	4066326	ReturnStatement	return false ;	1129:2:31965:31977	4066299	1	True				
ANR	4066327	Identifier	false		4066299	0					
ANR	4066328	ReturnStatement	return true ;	1131:1:31983:31994	4066299	2	True				
ANR	4066329	Identifier	true		4066299	0					
ANR	4066330	ReturnType	static bool		4066299	1					
ANR	4066331	Identifier	cb_cfg_fortunes_type		4066299	2					
ANR	4066332	ParameterList	"void * user , void * data"		4066299	3					
ANR	4066333	Parameter	void * user	1125:33:31833:31842	4066299	0	True				
ANR	4066334	ParameterType	void *		4066299	0					
ANR	4066335	Identifier	user		4066299	1					
ANR	4066336	Parameter	void * data	1125:45:31845:31854	4066299	1	True				
ANR	4066337	ParameterType	void *		4066299	0					
ANR	4066338	Identifier	data		4066299	1					
ANR	4066339	CFGEntryNode	ENTRY		4066299		True				
ANR	4066340	CFGExitNode	EXIT		4066299		True				
ANR	4066341	Symbol	node		4066299						
ANR	4066342	Symbol	* node -> value		4066299						
ANR	4066343	Symbol	data		4066299						
ANR	4066344	Symbol	* * node		4066299						
ANR	4066345	Symbol	false		4066299						
ANR	4066346	Symbol	true		4066299						
ANR	4066347	Symbol	* node		4066299						
ANR	4066348	Symbol	user		4066299						
ANR	4066349	Symbol	node -> value		4066299						
ANR	4066350	Function	check_decompiler	1134:0:31999:32164							
ANR	4066351	FunctionDef	check_decompiler (const char * name)		4066350	0					
ANR	4066352	CompoundStatement		1134:47:32046:32164	4066350	0					
ANR	4066353	IdentifierDeclStatement	char * path = r_file_path ( name ) ;	1135:1:32049:32080	4066350	0	True				
ANR	4066354	IdentifierDecl	* path = r_file_path ( name )		4066350	0					
ANR	4066355	IdentifierDeclType	char *		4066350	0					
ANR	4066356	Identifier	path		4066350	1					
ANR	4066357	AssignmentExpression	* path = r_file_path ( name )		4066350	2		=			
ANR	4066358	Identifier	path		4066350	0					
ANR	4066359	CallExpression	r_file_path ( name )		4066350	1					
ANR	4066360	Callee	r_file_path		4066350	0					
ANR	4066361	Identifier	r_file_path		4066350	0					
ANR	4066362	ArgumentList	name		4066350	1					
ANR	4066363	Argument	name		4066350	0					
ANR	4066364	Identifier	name		4066350	0					
ANR	4066365	IfStatement	if ( path && path [ 0 ] == '/' )		4066350	1					
ANR	4066366	Condition	path && path [ 0 ] == '/'	1136:5:32087:32108	4066350	0	True				
ANR	4066367	AndExpression	path && path [ 0 ] == '/'		4066350	0		&&			
ANR	4066368	Identifier	path		4066350	0					
ANR	4066369	EqualityExpression	path [ 0 ] == '/'		4066350	1		==			
ANR	4066370	ArrayIndexing	path [ 0 ]		4066350	0					
ANR	4066371	Identifier	path		4066350	0					
ANR	4066372	PrimaryExpression	0		4066350	1					
ANR	4066373	PrimaryExpression	'/'		4066350	1					
ANR	4066374	CompoundStatement		3:29:64:64	4066350	1					
ANR	4066375	ExpressionStatement	"r_cons_printf ( ""!*%s\\n"" , name )"	1137:2:32115:32145	4066350	0	True				
ANR	4066376	CallExpression	"r_cons_printf ( ""!*%s\\n"" , name )"		4066350	0					
ANR	4066377	Callee	r_cons_printf		4066350	0					
ANR	4066378	Identifier	r_cons_printf		4066350	0					
ANR	4066379	ArgumentList	"""!*%s\\n"""		4066350	1					
ANR	4066380	Argument	"""!*%s\\n"""		4066350	0					
ANR	4066381	PrimaryExpression	"""!*%s\\n"""		4066350	0					
ANR	4066382	Argument	name		4066350	1					
ANR	4066383	Identifier	name		4066350	0					
ANR	4066384	ExpressionStatement	free ( path )	1139:1:32151:32162	4066350	2	True				
ANR	4066385	CallExpression	free ( path )		4066350	0					
ANR	4066386	Callee	free		4066350	0					
ANR	4066387	Identifier	free		4066350	0					
ANR	4066388	ArgumentList	path		4066350	1					
ANR	4066389	Argument	path		4066350	0					
ANR	4066390	Identifier	path		4066350	0					
ANR	4066391	ReturnType	static void		4066350	1					
ANR	4066392	Identifier	check_decompiler		4066350	2					
ANR	4066393	ParameterList	const char * name		4066350	3					
ANR	4066394	Parameter	const char * name	1134:29:32028:32043	4066350	0	True				
ANR	4066395	ParameterType	const char *		4066350	0					
ANR	4066396	Identifier	name		4066350	1					
ANR	4066397	CFGEntryNode	ENTRY		4066350		True				
ANR	4066398	CFGExitNode	EXIT		4066350		True				
ANR	4066399	Symbol	path		4066350						
ANR	4066400	Symbol	name		4066350						
ANR	4066401	Symbol	* path		4066350						
ANR	4066402	Symbol	r_file_path		4066350						
ANR	4066403	Function	cb_cmdpdc	1142:0:32167:32804							
ANR	4066404	FunctionDef	"cb_cmdpdc (void * user , void * data)"		4066403	0					
ANR	4066405	CompoundStatement		1142:46:32213:32804	4066403	0					
ANR	4066406	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1143:1:32216:32244	4066403	0	True				
ANR	4066407	IdentifierDecl	* core = ( RCore * ) user		4066403	0					
ANR	4066408	IdentifierDeclType	RCore *		4066403	0					
ANR	4066409	Identifier	core		4066403	1					
ANR	4066410	AssignmentExpression	* core = ( RCore * ) user		4066403	2		=			
ANR	4066411	Identifier	core		4066403	0					
ANR	4066412	CastExpression	( RCore * ) user		4066403	1					
ANR	4066413	CastTarget	RCore *		4066403	0					
ANR	4066414	Identifier	user		4066403	1					
ANR	4066415	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1144:1:32247:32286	4066403	1	True				
ANR	4066416	IdentifierDecl	* node = ( RConfigNode * ) data		4066403	0					
ANR	4066417	IdentifierDeclType	RConfigNode *		4066403	0					
ANR	4066418	Identifier	node		4066403	1					
ANR	4066419	AssignmentExpression	* node = ( RConfigNode * ) data		4066403	2		=			
ANR	4066420	Identifier	node		4066403	0					
ANR	4066421	CastExpression	( RConfigNode * ) data		4066403	1					
ANR	4066422	CastTarget	RConfigNode *		4066403	0					
ANR	4066423	Identifier	data		4066403	1					
ANR	4066424	IfStatement	if ( node -> value [ 0 ] == '?' )		4066403	2					
ANR	4066425	Condition	node -> value [ 0 ] == '?'	1145:5:32293:32313	4066403	0	True				
ANR	4066426	EqualityExpression	node -> value [ 0 ] == '?'		4066403	0		==			
ANR	4066427	ArrayIndexing	node -> value [ 0 ]		4066403	0					
ANR	4066428	PtrMemberAccess	node -> value		4066403	0					
ANR	4066429	Identifier	node		4066403	0					
ANR	4066430	Identifier	value		4066403	1					
ANR	4066431	PrimaryExpression	0		4066403	1					
ANR	4066432	PrimaryExpression	'?'		4066403	1					
ANR	4066433	CompoundStatement		18:2:442:508	4066403	1					
ANR	4066434	ExpressionStatement	"r_cons_printf ( ""pdc\\n"" )"	1146:2:32320:32343	4066403	0	True				
ANR	4066435	CallExpression	"r_cons_printf ( ""pdc\\n"" )"		4066403	0					
ANR	4066436	Callee	r_cons_printf		4066403	0					
ANR	4066437	Identifier	r_cons_printf		4066403	0					
ANR	4066438	ArgumentList	"""pdc\\n"""		4066403	1					
ANR	4066439	Argument	"""pdc\\n"""		4066403	0					
ANR	4066440	PrimaryExpression	"""pdc\\n"""		4066403	0					
ANR	4066441	ExpressionStatement	"check_decompiler ( ""r2retdec"" )"	1148:2:32362:32391	4066403	1	True				
ANR	4066442	CallExpression	"check_decompiler ( ""r2retdec"" )"		4066403	0					
ANR	4066443	Callee	check_decompiler		4066403	0					
ANR	4066444	Identifier	check_decompiler		4066403	0					
ANR	4066445	ArgumentList	"""r2retdec"""		4066403	1					
ANR	4066446	Argument	"""r2retdec"""		4066403	0					
ANR	4066447	PrimaryExpression	"""r2retdec"""		4066403	0					
ANR	4066448	IdentifierDeclStatement	RListIter * iter ;	1149:2:32395:32410	4066403	2	True				
ANR	4066449	IdentifierDecl	* iter		4066403	0					
ANR	4066450	IdentifierDeclType	RListIter *		4066403	0					
ANR	4066451	Identifier	iter		4066403	1					
ANR	4066452	IdentifierDeclStatement	RCorePlugin * cp ;	1150:2:32414:32429	4066403	3	True				
ANR	4066453	IdentifierDecl	* cp		4066403	0					
ANR	4066454	IdentifierDeclType	RCorePlugin *		4066403	0					
ANR	4066455	Identifier	cp		4066403	1					
ANR	4066456	Statement	r_list_foreach	1151:2:32433:32446	4066403	4	True				
ANR	4066457	Statement	(	1151:17:32448:32448	4066403	5	True				
ANR	4066458	Statement	core	1151:18:32449:32452	4066403	6	True				
ANR	4066459	Statement	->	1151:22:32453:32454	4066403	7	True				
ANR	4066460	Statement	rcmd	1151:24:32455:32458	4066403	8	True				
ANR	4066461	Statement	->	1151:28:32459:32460	4066403	9	True				
ANR	4066462	Statement	plist	1151:30:32461:32465	4066403	10	True				
ANR	4066463	Statement	","	1151:35:32466:32466	4066403	11	True				
ANR	4066464	Statement	iter	1151:37:32468:32471	4066403	12	True				
ANR	4066465	Statement	","	1151:41:32472:32472	4066403	13	True				
ANR	4066466	Statement	cp	1151:43:32474:32475	4066403	14	True				
ANR	4066467	Statement	)	1151:45:32476:32476	4066403	15	True				
ANR	4066468	CompoundStatement		10:47:264:264	4066403	16					
ANR	4066469	IfStatement	"if ( ! strcmp ( cp -> name , ""r2ghidra"" ) )"		4066403	0					
ANR	4066470	Condition	"! strcmp ( cp -> name , ""r2ghidra"" )"	1152:7:32487:32516	4066403	0	True				
ANR	4066471	UnaryOperationExpression	"! strcmp ( cp -> name , ""r2ghidra"" )"		4066403	0					
ANR	4066472	UnaryOperator	!		4066403	0					
ANR	4066473	CallExpression	"strcmp ( cp -> name , ""r2ghidra"" )"		4066403	1					
ANR	4066474	Callee	strcmp		4066403	0					
ANR	4066475	Identifier	strcmp		4066403	0					
ANR	4066476	ArgumentList	cp -> name		4066403	1					
ANR	4066477	Argument	cp -> name		4066403	0					
ANR	4066478	PtrMemberAccess	cp -> name		4066403	0					
ANR	4066479	Identifier	cp		4066403	0					
ANR	4066480	Identifier	name		4066403	1					
ANR	4066481	Argument	"""r2ghidra"""		4066403	1					
ANR	4066482	PrimaryExpression	"""r2ghidra"""		4066403	0					
ANR	4066483	CompoundStatement		11:39:305:305	4066403	1					
ANR	4066484	ExpressionStatement	"r_cons_printf ( ""pdg\\n"" )"	1153:4:32525:32548	4066403	0	True				
ANR	4066485	CallExpression	"r_cons_printf ( ""pdg\\n"" )"		4066403	0					
ANR	4066486	Callee	r_cons_printf		4066403	0					
ANR	4066487	Identifier	r_cons_printf		4066403	0					
ANR	4066488	ArgumentList	"""pdg\\n"""		4066403	1					
ANR	4066489	Argument	"""pdg\\n"""		4066403	0					
ANR	4066490	PrimaryExpression	"""pdg\\n"""		4066403	0					
ANR	4066491	ExpressionStatement	"check_decompiler ( ""r2ghidra"" )"	1156:2:32561:32590	4066403	17	True				
ANR	4066492	CallExpression	"check_decompiler ( ""r2ghidra"" )"		4066403	0					
ANR	4066493	Callee	check_decompiler		4066403	0					
ANR	4066494	Identifier	check_decompiler		4066403	0					
ANR	4066495	ArgumentList	"""r2ghidra"""		4066403	1					
ANR	4066496	Argument	"""r2ghidra"""		4066403	0					
ANR	4066497	PrimaryExpression	"""r2ghidra"""		4066403	0					
ANR	4066498	ExpressionStatement	"check_decompiler ( ""r2jadx"" )"	1157:2:32594:32621	4066403	18	True				
ANR	4066499	CallExpression	"check_decompiler ( ""r2jadx"" )"		4066403	0					
ANR	4066500	Callee	check_decompiler		4066403	0					
ANR	4066501	Identifier	check_decompiler		4066403	0					
ANR	4066502	ArgumentList	"""r2jadx"""		4066403	1					
ANR	4066503	Argument	"""r2jadx"""		4066403	0					
ANR	4066504	PrimaryExpression	"""r2jadx"""		4066403	0					
ANR	4066505	ExpressionStatement	"check_decompiler ( ""r2snow"" )"	1158:2:32625:32652	4066403	19	True				
ANR	4066506	CallExpression	"check_decompiler ( ""r2snow"" )"		4066403	0					
ANR	4066507	Callee	check_decompiler		4066403	0					
ANR	4066508	Identifier	check_decompiler		4066403	0					
ANR	4066509	ArgumentList	"""r2snow"""		4066403	1					
ANR	4066510	Argument	"""r2snow"""		4066403	0					
ANR	4066511	PrimaryExpression	"""r2snow"""		4066403	0					
ANR	4066512	IdentifierDeclStatement	"RConfigNode * r2dec = r_config_node_get ( core -> config , ""r2dec.asm"" ) ;"	1159:2:32656:32722	4066403	20	True				
ANR	4066513	IdentifierDecl	"* r2dec = r_config_node_get ( core -> config , ""r2dec.asm"" )"		4066403	0					
ANR	4066514	IdentifierDeclType	RConfigNode *		4066403	0					
ANR	4066515	Identifier	r2dec		4066403	1					
ANR	4066516	AssignmentExpression	"* r2dec = r_config_node_get ( core -> config , ""r2dec.asm"" )"		4066403	2		=			
ANR	4066517	Identifier	r2dec		4066403	0					
ANR	4066518	CallExpression	"r_config_node_get ( core -> config , ""r2dec.asm"" )"		4066403	1					
ANR	4066519	Callee	r_config_node_get		4066403	0					
ANR	4066520	Identifier	r_config_node_get		4066403	0					
ANR	4066521	ArgumentList	core -> config		4066403	1					
ANR	4066522	Argument	core -> config		4066403	0					
ANR	4066523	PtrMemberAccess	core -> config		4066403	0					
ANR	4066524	Identifier	core		4066403	0					
ANR	4066525	Identifier	config		4066403	1					
ANR	4066526	Argument	"""r2dec.asm"""		4066403	1					
ANR	4066527	PrimaryExpression	"""r2dec.asm"""		4066403	0					
ANR	4066528	IfStatement	if ( r2dec )		4066403	21					
ANR	4066529	Condition	r2dec	1160:6:32730:32734	4066403	0	True				
ANR	4066530	Identifier	r2dec		4066403	0					
ANR	4066531	CompoundStatement		19:13:523:523	4066403	1					
ANR	4066532	ExpressionStatement	"r_cons_printf ( ""pdd\\n"" )"	1161:3:32742:32765	4066403	0	True				
ANR	4066533	CallExpression	"r_cons_printf ( ""pdd\\n"" )"		4066403	0					
ANR	4066534	Callee	r_cons_printf		4066403	0					
ANR	4066535	Identifier	r_cons_printf		4066403	0					
ANR	4066536	ArgumentList	"""pdd\\n"""		4066403	1					
ANR	4066537	Argument	"""pdd\\n"""		4066403	0					
ANR	4066538	PrimaryExpression	"""pdd\\n"""		4066403	0					
ANR	4066539	ReturnStatement	return false ;	1163:2:32773:32785	4066403	22	True				
ANR	4066540	Identifier	false		4066403	0					
ANR	4066541	ReturnStatement	return true ;	1165:1:32791:32802	4066403	3	True				
ANR	4066542	Identifier	true		4066403	0					
ANR	4066543	ReturnType	static bool		4066403	1					
ANR	4066544	Identifier	cb_cmdpdc		4066403	2					
ANR	4066545	ParameterList	"void * user , void * data"		4066403	3					
ANR	4066546	Parameter	void * user	1142:22:32189:32198	4066403	0	True				
ANR	4066547	ParameterType	void *		4066403	0					
ANR	4066548	Identifier	user		4066403	1					
ANR	4066549	Parameter	void * data	1142:34:32201:32210	4066403	1	True				
ANR	4066550	ParameterType	void *		4066403	0					
ANR	4066551	Identifier	data		4066403	1					
ANR	4066552	CFGEntryNode	ENTRY		4066403		True				
ANR	4066553	CFGExitNode	EXIT		4066403		True				
ANR	4066554	Symbol	strcmp		4066403						
ANR	4066555	Symbol	core -> config		4066403						
ANR	4066556	Symbol	* node -> value		4066403						
ANR	4066557	Symbol	data		4066403						
ANR	4066558	Symbol	* core		4066403						
ANR	4066559	Symbol	false		4066403						
ANR	4066560	Symbol	iter		4066403						
ANR	4066561	Symbol	cp		4066403						
ANR	4066562	Symbol	node -> value		4066403						
ANR	4066563	Symbol	* cp		4066403						
ANR	4066564	Symbol	core		4066403						
ANR	4066565	Symbol	node		4066403						
ANR	4066566	Symbol	* * node		4066403						
ANR	4066567	Symbol	true		4066403						
ANR	4066568	Symbol	* node		4066403						
ANR	4066569	Symbol	r2dec		4066403						
ANR	4066570	Symbol	user		4066403						
ANR	4066571	Symbol	r_config_node_get		4066403						
ANR	4066572	Symbol	cp -> name		4066403						
ANR	4066573	Function	cb_cmdlog	1168:0:32807:33005							
ANR	4066574	FunctionDef	"cb_cmdlog (void * user , void * data)"		4066573	0					
ANR	4066575	CompoundStatement		1168:46:32853:33005	4066573	0					
ANR	4066576	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1169:1:32856:32884	4066573	0	True				
ANR	4066577	IdentifierDecl	* core = ( RCore * ) user		4066573	0					
ANR	4066578	IdentifierDeclType	RCore *		4066573	0					
ANR	4066579	Identifier	core		4066573	1					
ANR	4066580	AssignmentExpression	* core = ( RCore * ) user		4066573	2		=			
ANR	4066581	Identifier	core		4066573	0					
ANR	4066582	CastExpression	( RCore * ) user		4066573	1					
ANR	4066583	CastTarget	RCore *		4066573	0					
ANR	4066584	Identifier	user		4066573	1					
ANR	4066585	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1170:1:32887:32927	4066573	1	True				
ANR	4066586	IdentifierDecl	* node = ( RConfigNode * ) data		4066573	0					
ANR	4066587	IdentifierDeclType	RConfigNode *		4066573	0					
ANR	4066588	Identifier	node		4066573	1					
ANR	4066589	AssignmentExpression	* node = ( RConfigNode * ) data		4066573	2		=			
ANR	4066590	Identifier	node		4066573	0					
ANR	4066591	CastExpression	( RConfigNode * ) data		4066573	1					
ANR	4066592	CastTarget	RConfigNode *		4066573	0					
ANR	4066593	Identifier	data		4066573	1					
ANR	4066594	ExpressionStatement	R_FREE ( core -> cmdlog )	1171:1:32930:32951	4066573	2	True				
ANR	4066595	CallExpression	R_FREE ( core -> cmdlog )		4066573	0					
ANR	4066596	Callee	R_FREE		4066573	0					
ANR	4066597	Identifier	R_FREE		4066573	0					
ANR	4066598	ArgumentList	core -> cmdlog		4066573	1					
ANR	4066599	Argument	core -> cmdlog		4066573	0					
ANR	4066600	PtrMemberAccess	core -> cmdlog		4066573	0					
ANR	4066601	Identifier	core		4066573	0					
ANR	4066602	Identifier	cmdlog		4066573	1					
ANR	4066603	ExpressionStatement	core -> cmdlog = strdup ( node -> value )	1172:1:32954:32989	4066573	3	True				
ANR	4066604	AssignmentExpression	core -> cmdlog = strdup ( node -> value )		4066573	0		=			
ANR	4066605	PtrMemberAccess	core -> cmdlog		4066573	0					
ANR	4066606	Identifier	core		4066573	0					
ANR	4066607	Identifier	cmdlog		4066573	1					
ANR	4066608	CallExpression	strdup ( node -> value )		4066573	1					
ANR	4066609	Callee	strdup		4066573	0					
ANR	4066610	Identifier	strdup		4066573	0					
ANR	4066611	ArgumentList	node -> value		4066573	1					
ANR	4066612	Argument	node -> value		4066573	0					
ANR	4066613	PtrMemberAccess	node -> value		4066573	0					
ANR	4066614	Identifier	node		4066573	0					
ANR	4066615	Identifier	value		4066573	1					
ANR	4066616	ReturnStatement	return true ;	1173:1:32992:33003	4066573	4	True				
ANR	4066617	Identifier	true		4066573	0					
ANR	4066618	ReturnType	static bool		4066573	1					
ANR	4066619	Identifier	cb_cmdlog		4066573	2					
ANR	4066620	ParameterList	"void * user , void * data"		4066573	3					
ANR	4066621	Parameter	void * user	1168:22:32829:32838	4066573	0	True				
ANR	4066622	ParameterType	void *		4066573	0					
ANR	4066623	Identifier	user		4066573	1					
ANR	4066624	Parameter	void * data	1168:34:32841:32850	4066573	1	True				
ANR	4066625	ParameterType	void *		4066573	0					
ANR	4066626	Identifier	data		4066573	1					
ANR	4066627	CFGEntryNode	ENTRY		4066573		True				
ANR	4066628	CFGExitNode	EXIT		4066573		True				
ANR	4066629	Symbol	core		4066573						
ANR	4066630	Symbol	node		4066573						
ANR	4066631	Symbol	data		4066573						
ANR	4066632	Symbol	core -> cmdlog		4066573						
ANR	4066633	Symbol	* core		4066573						
ANR	4066634	Symbol	true		4066573						
ANR	4066635	Symbol	* node		4066573						
ANR	4066636	Symbol	strdup		4066573						
ANR	4066637	Symbol	user		4066573						
ANR	4066638	Symbol	node -> value		4066573						
ANR	4066639	Function	cb_cmdtimes	1176:0:33008:33177							
ANR	4066640	FunctionDef	"cb_cmdtimes (void * user , void * data)"		4066639	0					
ANR	4066641	CompoundStatement		1176:48:33056:33177	4066639	0					
ANR	4066642	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1177:1:33059:33087	4066639	0	True				
ANR	4066643	IdentifierDecl	* core = ( RCore * ) user		4066639	0					
ANR	4066644	IdentifierDeclType	RCore *		4066639	0					
ANR	4066645	Identifier	core		4066639	1					
ANR	4066646	AssignmentExpression	* core = ( RCore * ) user		4066639	2		=			
ANR	4066647	Identifier	core		4066639	0					
ANR	4066648	CastExpression	( RCore * ) user		4066639	1					
ANR	4066649	CastTarget	RCore *		4066639	0					
ANR	4066650	Identifier	user		4066639	1					
ANR	4066651	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1178:1:33090:33130	4066639	1	True				
ANR	4066652	IdentifierDecl	* node = ( RConfigNode * ) data		4066639	0					
ANR	4066653	IdentifierDeclType	RConfigNode *		4066639	0					
ANR	4066654	Identifier	node		4066639	1					
ANR	4066655	AssignmentExpression	* node = ( RConfigNode * ) data		4066639	2		=			
ANR	4066656	Identifier	node		4066639	0					
ANR	4066657	CastExpression	( RConfigNode * ) data		4066639	1					
ANR	4066658	CastTarget	RConfigNode *		4066639	0					
ANR	4066659	Identifier	data		4066639	1					
ANR	4066660	ExpressionStatement	core -> cmdtimes = node -> value	1179:1:33133:33161	4066639	2	True				
ANR	4066661	AssignmentExpression	core -> cmdtimes = node -> value		4066639	0		=			
ANR	4066662	PtrMemberAccess	core -> cmdtimes		4066639	0					
ANR	4066663	Identifier	core		4066639	0					
ANR	4066664	Identifier	cmdtimes		4066639	1					
ANR	4066665	PtrMemberAccess	node -> value		4066639	1					
ANR	4066666	Identifier	node		4066639	0					
ANR	4066667	Identifier	value		4066639	1					
ANR	4066668	ReturnStatement	return true ;	1180:1:33164:33175	4066639	3	True				
ANR	4066669	Identifier	true		4066639	0					
ANR	4066670	ReturnType	static bool		4066639	1					
ANR	4066671	Identifier	cb_cmdtimes		4066639	2					
ANR	4066672	ParameterList	"void * user , void * data"		4066639	3					
ANR	4066673	Parameter	void * user	1176:24:33032:33041	4066639	0	True				
ANR	4066674	ParameterType	void *		4066639	0					
ANR	4066675	Identifier	user		4066639	1					
ANR	4066676	Parameter	void * data	1176:36:33044:33053	4066639	1	True				
ANR	4066677	ParameterType	void *		4066639	0					
ANR	4066678	Identifier	data		4066639	1					
ANR	4066679	CFGEntryNode	ENTRY		4066639		True				
ANR	4066680	CFGExitNode	EXIT		4066639		True				
ANR	4066681	Symbol	core		4066639						
ANR	4066682	Symbol	node		4066639						
ANR	4066683	Symbol	data		4066639						
ANR	4066684	Symbol	* core		4066639						
ANR	4066685	Symbol	true		4066639						
ANR	4066686	Symbol	* node		4066639						
ANR	4066687	Symbol	user		4066639						
ANR	4066688	Symbol	core -> cmdtimes		4066639						
ANR	4066689	Symbol	node -> value		4066639						
ANR	4066690	Function	cb_cmdrepeat	1183:0:33180:33353							
ANR	4066691	FunctionDef	"cb_cmdrepeat (void * user , void * data)"		4066690	0					
ANR	4066692	CompoundStatement		1183:49:33229:33353	4066690	0					
ANR	4066693	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1184:1:33232:33260	4066690	0	True				
ANR	4066694	IdentifierDecl	* core = ( RCore * ) user		4066690	0					
ANR	4066695	IdentifierDeclType	RCore *		4066690	0					
ANR	4066696	Identifier	core		4066690	1					
ANR	4066697	AssignmentExpression	* core = ( RCore * ) user		4066690	2		=			
ANR	4066698	Identifier	core		4066690	0					
ANR	4066699	CastExpression	( RCore * ) user		4066690	1					
ANR	4066700	CastTarget	RCore *		4066690	0					
ANR	4066701	Identifier	user		4066690	1					
ANR	4066702	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1185:1:33263:33303	4066690	1	True				
ANR	4066703	IdentifierDecl	* node = ( RConfigNode * ) data		4066690	0					
ANR	4066704	IdentifierDeclType	RConfigNode *		4066690	0					
ANR	4066705	Identifier	node		4066690	1					
ANR	4066706	AssignmentExpression	* node = ( RConfigNode * ) data		4066690	2		=			
ANR	4066707	Identifier	node		4066690	0					
ANR	4066708	CastExpression	( RConfigNode * ) data		4066690	1					
ANR	4066709	CastTarget	RConfigNode *		4066690	0					
ANR	4066710	Identifier	data		4066690	1					
ANR	4066711	ExpressionStatement	core -> cmdrepeat = node -> i_value	1186:1:33306:33337	4066690	2	True				
ANR	4066712	AssignmentExpression	core -> cmdrepeat = node -> i_value		4066690	0		=			
ANR	4066713	PtrMemberAccess	core -> cmdrepeat		4066690	0					
ANR	4066714	Identifier	core		4066690	0					
ANR	4066715	Identifier	cmdrepeat		4066690	1					
ANR	4066716	PtrMemberAccess	node -> i_value		4066690	1					
ANR	4066717	Identifier	node		4066690	0					
ANR	4066718	Identifier	i_value		4066690	1					
ANR	4066719	ReturnStatement	return true ;	1187:1:33340:33351	4066690	3	True				
ANR	4066720	Identifier	true		4066690	0					
ANR	4066721	ReturnType	static bool		4066690	1					
ANR	4066722	Identifier	cb_cmdrepeat		4066690	2					
ANR	4066723	ParameterList	"void * user , void * data"		4066690	3					
ANR	4066724	Parameter	void * user	1183:25:33205:33214	4066690	0	True				
ANR	4066725	ParameterType	void *		4066690	0					
ANR	4066726	Identifier	user		4066690	1					
ANR	4066727	Parameter	void * data	1183:37:33217:33226	4066690	1	True				
ANR	4066728	ParameterType	void *		4066690	0					
ANR	4066729	Identifier	data		4066690	1					
ANR	4066730	CFGEntryNode	ENTRY		4066690		True				
ANR	4066731	CFGExitNode	EXIT		4066690		True				
ANR	4066732	Symbol	core		4066690						
ANR	4066733	Symbol	node		4066690						
ANR	4066734	Symbol	core -> cmdrepeat		4066690						
ANR	4066735	Symbol	data		4066690						
ANR	4066736	Symbol	* core		4066690						
ANR	4066737	Symbol	true		4066690						
ANR	4066738	Symbol	* node		4066690						
ANR	4066739	Symbol	user		4066690						
ANR	4066740	Symbol	node -> i_value		4066690						
ANR	4066741	Function	cb_scrnull	1190:0:33356:33528							
ANR	4066742	FunctionDef	"cb_scrnull (void * user , void * data)"		4066741	0					
ANR	4066743	CompoundStatement		1190:47:33403:33528	4066741	0					
ANR	4066744	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1191:1:33406:33434	4066741	0	True				
ANR	4066745	IdentifierDecl	* core = ( RCore * ) user		4066741	0					
ANR	4066746	IdentifierDeclType	RCore *		4066741	0					
ANR	4066747	Identifier	core		4066741	1					
ANR	4066748	AssignmentExpression	* core = ( RCore * ) user		4066741	2		=			
ANR	4066749	Identifier	core		4066741	0					
ANR	4066750	CastExpression	( RCore * ) user		4066741	1					
ANR	4066751	CastTarget	RCore *		4066741	0					
ANR	4066752	Identifier	user		4066741	1					
ANR	4066753	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1192:1:33437:33477	4066741	1	True				
ANR	4066754	IdentifierDecl	* node = ( RConfigNode * ) data		4066741	0					
ANR	4066755	IdentifierDeclType	RConfigNode *		4066741	0					
ANR	4066756	Identifier	node		4066741	1					
ANR	4066757	AssignmentExpression	* node = ( RConfigNode * ) data		4066741	2		=			
ANR	4066758	Identifier	node		4066741	0					
ANR	4066759	CastExpression	( RConfigNode * ) data		4066741	1					
ANR	4066760	CastTarget	RConfigNode *		4066741	0					
ANR	4066761	Identifier	data		4066741	1					
ANR	4066762	ExpressionStatement	core -> cons -> null = node -> i_value	1193:1:33480:33512	4066741	2	True				
ANR	4066763	AssignmentExpression	core -> cons -> null = node -> i_value		4066741	0		=			
ANR	4066764	PtrMemberAccess	core -> cons -> null		4066741	0					
ANR	4066765	PtrMemberAccess	core -> cons		4066741	0					
ANR	4066766	Identifier	core		4066741	0					
ANR	4066767	Identifier	cons		4066741	1					
ANR	4066768	Identifier	null		4066741	1					
ANR	4066769	PtrMemberAccess	node -> i_value		4066741	1					
ANR	4066770	Identifier	node		4066741	0					
ANR	4066771	Identifier	i_value		4066741	1					
ANR	4066772	ReturnStatement	return true ;	1194:1:33515:33526	4066741	3	True				
ANR	4066773	Identifier	true		4066741	0					
ANR	4066774	ReturnType	static bool		4066741	1					
ANR	4066775	Identifier	cb_scrnull		4066741	2					
ANR	4066776	ParameterList	"void * user , void * data"		4066741	3					
ANR	4066777	Parameter	void * user	1190:23:33379:33388	4066741	0	True				
ANR	4066778	ParameterType	void *		4066741	0					
ANR	4066779	Identifier	user		4066741	1					
ANR	4066780	Parameter	void * data	1190:35:33391:33400	4066741	1	True				
ANR	4066781	ParameterType	void *		4066741	0					
ANR	4066782	Identifier	data		4066741	1					
ANR	4066783	CFGEntryNode	ENTRY		4066741		True				
ANR	4066784	CFGExitNode	EXIT		4066741		True				
ANR	4066785	Symbol	core		4066741						
ANR	4066786	Symbol	node		4066741						
ANR	4066787	Symbol	core -> cons		4066741						
ANR	4066788	Symbol	data		4066741						
ANR	4066789	Symbol	* core -> cons		4066741						
ANR	4066790	Symbol	core -> cons -> null		4066741						
ANR	4066791	Symbol	* core		4066741						
ANR	4066792	Symbol	true		4066741						
ANR	4066793	Symbol	* node		4066741						
ANR	4066794	Symbol	user		4066741						
ANR	4066795	Symbol	* * core		4066741						
ANR	4066796	Symbol	node -> i_value		4066741						
ANR	4066797	Function	cb_color	1197:0:33531:34118							
ANR	4066798	FunctionDef	"cb_color (void * user , void * data)"		4066797	0					
ANR	4066799	CompoundStatement		1197:45:33576:34118	4066797	0					
ANR	4066800	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1198:1:33579:33607	4066797	0	True				
ANR	4066801	IdentifierDecl	* core = ( RCore * ) user		4066797	0					
ANR	4066802	IdentifierDeclType	RCore *		4066797	0					
ANR	4066803	Identifier	core		4066797	1					
ANR	4066804	AssignmentExpression	* core = ( RCore * ) user		4066797	2		=			
ANR	4066805	Identifier	core		4066797	0					
ANR	4066806	CastExpression	( RCore * ) user		4066797	1					
ANR	4066807	CastTarget	RCore *		4066797	0					
ANR	4066808	Identifier	user		4066797	1					
ANR	4066809	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1199:1:33610:33650	4066797	1	True				
ANR	4066810	IdentifierDecl	* node = ( RConfigNode * ) data		4066797	0					
ANR	4066811	IdentifierDeclType	RConfigNode *		4066797	0					
ANR	4066812	Identifier	node		4066797	1					
ANR	4066813	AssignmentExpression	* node = ( RConfigNode * ) data		4066797	2		=			
ANR	4066814	Identifier	node		4066797	0					
ANR	4066815	CastExpression	( RConfigNode * ) data		4066797	1					
ANR	4066816	CastTarget	RConfigNode *		4066797	0					
ANR	4066817	Identifier	data		4066797	1					
ANR	4066818	IfStatement	if ( node -> i_value )		4066797	2					
ANR	4066819	Condition	node -> i_value	1200:5:33657:33669	4066797	0	True				
ANR	4066820	PtrMemberAccess	node -> i_value		4066797	0					
ANR	4066821	Identifier	node		4066797	0					
ANR	4066822	Identifier	i_value		4066797	1					
ANR	4066823	CompoundStatement		4:20:95:95	4066797	1					
ANR	4066824	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_COLOR	1201:2:33676:33717	4066797	0	True				
ANR	4066825	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_COLOR		4066797	0		|=			
ANR	4066826	PtrMemberAccess	core -> print -> flags		4066797	0					
ANR	4066827	PtrMemberAccess	core -> print		4066797	0					
ANR	4066828	Identifier	core		4066797	0					
ANR	4066829	Identifier	print		4066797	1					
ANR	4066830	Identifier	flags		4066797	1					
ANR	4066831	Identifier	R_PRINT_FLAGS_COLOR		4066797	1					
ANR	4066832	ElseStatement	else		4066797	0					
ANR	4066833	CompoundStatement		6:8:150:150	4066797	0					
ANR	4066834	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_COLOR )	1203:2:33731:33775	4066797	0	True				
ANR	4066835	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_COLOR )		4066797	0		&=			
ANR	4066836	PtrMemberAccess	core -> print -> flags		4066797	0					
ANR	4066837	PtrMemberAccess	core -> print		4066797	0					
ANR	4066838	Identifier	core		4066797	0					
ANR	4066839	Identifier	print		4066797	1					
ANR	4066840	Identifier	flags		4066797	1					
ANR	4066841	Identifier	~R_PRINT_FLAGS_COLOR		4066797	1					
ANR	4066842	IfStatement	"if ( ! strcmp ( node -> value , ""true"" ) )"		4066797	3					
ANR	4066843	Condition	"! strcmp ( node -> value , ""true"" )"	1205:5:33785:33813	4066797	0	True				
ANR	4066844	UnaryOperationExpression	"! strcmp ( node -> value , ""true"" )"		4066797	0					
ANR	4066845	UnaryOperator	!		4066797	0					
ANR	4066846	CallExpression	"strcmp ( node -> value , ""true"" )"		4066797	1					
ANR	4066847	Callee	strcmp		4066797	0					
ANR	4066848	Identifier	strcmp		4066797	0					
ANR	4066849	ArgumentList	node -> value		4066797	1					
ANR	4066850	Argument	node -> value		4066797	0					
ANR	4066851	PtrMemberAccess	node -> value		4066797	0					
ANR	4066852	Identifier	node		4066797	0					
ANR	4066853	Identifier	value		4066797	1					
ANR	4066854	Argument	"""true"""		4066797	1					
ANR	4066855	PrimaryExpression	"""true"""		4066797	0					
ANR	4066856	CompoundStatement		9:36:239:239	4066797	1					
ANR	4066857	ExpressionStatement	node -> i_value = 1	1206:2:33820:33837	4066797	0	True				
ANR	4066858	AssignmentExpression	node -> i_value = 1		4066797	0		=			
ANR	4066859	PtrMemberAccess	node -> i_value		4066797	0					
ANR	4066860	Identifier	node		4066797	0					
ANR	4066861	Identifier	i_value		4066797	1					
ANR	4066862	PrimaryExpression	1		4066797	1					
ANR	4066863	ElseStatement	else		4066797	0					
ANR	4066864	IfStatement	"if ( ! strcmp ( node -> value , ""false"" ) )"		4066797	0					
ANR	4066865	Condition	"! strcmp ( node -> value , ""false"" )"	1207:12:33851:33880	4066797	0	True				
ANR	4066866	UnaryOperationExpression	"! strcmp ( node -> value , ""false"" )"		4066797	0					
ANR	4066867	UnaryOperator	!		4066797	0					
ANR	4066868	CallExpression	"strcmp ( node -> value , ""false"" )"		4066797	1					
ANR	4066869	Callee	strcmp		4066797	0					
ANR	4066870	Identifier	strcmp		4066797	0					
ANR	4066871	ArgumentList	node -> value		4066797	1					
ANR	4066872	Argument	node -> value		4066797	0					
ANR	4066873	PtrMemberAccess	node -> value		4066797	0					
ANR	4066874	Identifier	node		4066797	0					
ANR	4066875	Identifier	value		4066797	1					
ANR	4066876	Argument	"""false"""		4066797	1					
ANR	4066877	PrimaryExpression	"""false"""		4066797	0					
ANR	4066878	CompoundStatement		11:44:306:306	4066797	1					
ANR	4066879	ExpressionStatement	node -> i_value = 0	1208:2:33887:33904	4066797	0	True				
ANR	4066880	AssignmentExpression	node -> i_value = 0		4066797	0		=			
ANR	4066881	PtrMemberAccess	node -> i_value		4066797	0					
ANR	4066882	Identifier	node		4066797	0					
ANR	4066883	Identifier	i_value		4066797	1					
ANR	4066884	PrimaryExpression	0		4066797	1					
ANR	4066885	ExpressionStatement	r_cons_singleton ( ) -> context -> color_mode = ( node -> i_value > COLOR_MODE_16M ) ? COLOR_MODE_16M : node -> i_value	1210:1:33910:34019	4066797	4	True				
ANR	4066886	AssignmentExpression	r_cons_singleton ( ) -> context -> color_mode = ( node -> i_value > COLOR_MODE_16M ) ? COLOR_MODE_16M : node -> i_value		4066797	0		=			
ANR	4066887	PtrMemberAccess	r_cons_singleton ( ) -> context -> color_mode		4066797	0					
ANR	4066888	PtrMemberAccess	r_cons_singleton ( ) -> context		4066797	0					
ANR	4066889	CallExpression	r_cons_singleton ( )		4066797	0					
ANR	4066890	Callee	r_cons_singleton		4066797	0					
ANR	4066891	Identifier	r_cons_singleton		4066797	0					
ANR	4066892	ArgumentList			4066797	1					
ANR	4066893	Identifier	context		4066797	1					
ANR	4066894	Identifier	color_mode		4066797	1					
ANR	4066895	ConditionalExpression	( node -> i_value > COLOR_MODE_16M ) ? COLOR_MODE_16M : node -> i_value		4066797	1					
ANR	4066896	Condition	node -> i_value > COLOR_MODE_16M		4066797	0					
ANR	4066897	RelationalExpression	node -> i_value > COLOR_MODE_16M		4066797	0		>			
ANR	4066898	PtrMemberAccess	node -> i_value		4066797	0					
ANR	4066899	Identifier	node		4066797	0					
ANR	4066900	Identifier	i_value		4066797	1					
ANR	4066901	Identifier	COLOR_MODE_16M		4066797	1					
ANR	4066902	Identifier	COLOR_MODE_16M		4066797	1					
ANR	4066903	PtrMemberAccess	node -> i_value		4066797	2					
ANR	4066904	Identifier	node		4066797	0					
ANR	4066905	Identifier	i_value		4066797	1					
ANR	4066906	ExpressionStatement	r_cons_pal_update_event ( )	1212:1:34022:34048	4066797	5	True				
ANR	4066907	CallExpression	r_cons_pal_update_event ( )		4066797	0					
ANR	4066908	Callee	r_cons_pal_update_event		4066797	0					
ANR	4066909	Identifier	r_cons_pal_update_event		4066797	0					
ANR	4066910	ArgumentList			4066797	1					
ANR	4066911	ExpressionStatement	"r_print_set_flags ( core -> print , core -> print -> flags )"	1213:1:34051:34102	4066797	6	True				
ANR	4066912	CallExpression	"r_print_set_flags ( core -> print , core -> print -> flags )"		4066797	0					
ANR	4066913	Callee	r_print_set_flags		4066797	0					
ANR	4066914	Identifier	r_print_set_flags		4066797	0					
ANR	4066915	ArgumentList	core -> print		4066797	1					
ANR	4066916	Argument	core -> print		4066797	0					
ANR	4066917	PtrMemberAccess	core -> print		4066797	0					
ANR	4066918	Identifier	core		4066797	0					
ANR	4066919	Identifier	print		4066797	1					
ANR	4066920	Argument	core -> print -> flags		4066797	1					
ANR	4066921	PtrMemberAccess	core -> print -> flags		4066797	0					
ANR	4066922	PtrMemberAccess	core -> print		4066797	0					
ANR	4066923	Identifier	core		4066797	0					
ANR	4066924	Identifier	print		4066797	1					
ANR	4066925	Identifier	flags		4066797	1					
ANR	4066926	ReturnStatement	return true ;	1214:1:34105:34116	4066797	7	True				
ANR	4066927	Identifier	true		4066797	0					
ANR	4066928	ReturnType	static bool		4066797	1					
ANR	4066929	Identifier	cb_color		4066797	2					
ANR	4066930	ParameterList	"void * user , void * data"		4066797	3					
ANR	4066931	Parameter	void * user	1197:21:33552:33561	4066797	0	True				
ANR	4066932	ParameterType	void *		4066797	0					
ANR	4066933	Identifier	user		4066797	1					
ANR	4066934	Parameter	void * data	1197:33:33564:33573	4066797	1	True				
ANR	4066935	ParameterType	void *		4066797	0					
ANR	4066936	Identifier	data		4066797	1					
ANR	4066937	CFGEntryNode	ENTRY		4066797		True				
ANR	4066938	CFGExitNode	EXIT		4066797		True				
ANR	4066939	Symbol	strcmp		4066797						
ANR	4066940	Symbol	data		4066797						
ANR	4066941	Symbol	* core		4066797						
ANR	4066942	Symbol	* r_cons_singleton ( ) -> context		4066797						
ANR	4066943	Symbol	* * r_cons_singleton		4066797						
ANR	4066944	Symbol	node -> i_value		4066797						
ANR	4066945	Symbol	node -> value		4066797						
ANR	4066946	Symbol	r_cons_singleton ( ) -> context -> color_mode		4066797						
ANR	4066947	Symbol	core		4066797						
ANR	4066948	Symbol	node		4066797						
ANR	4066949	Symbol	* core -> print		4066797						
ANR	4066950	Symbol	~R_PRINT_FLAGS_COLOR		4066797						
ANR	4066951	Symbol	COLOR_MODE_16M		4066797						
ANR	4066952	Symbol	R_PRINT_FLAGS_COLOR		4066797						
ANR	4066953	Symbol	true		4066797						
ANR	4066954	Symbol	r_cons_singleton		4066797						
ANR	4066955	Symbol	* node		4066797						
ANR	4066956	Symbol	core -> print		4066797						
ANR	4066957	Symbol	user		4066797						
ANR	4066958	Symbol	r_cons_singleton ( ) -> context		4066797						
ANR	4066959	Symbol	core -> print -> flags		4066797						
ANR	4066960	Symbol	* * core		4066797						
ANR	4066961	Symbol	* r_cons_singleton		4066797						
ANR	4066962	Function	cb_color_getter	1217:0:34121:34493							
ANR	4066963	FunctionDef	"cb_color_getter (void * user , RConfigNode * node)"		4066962	0					
ANR	4066964	CompoundStatement		1217:59:34180:34493	4066962	0					
ANR	4066965	ExpressionStatement	( void ) user	1218:1:34183:34193	4066962	0	True				
ANR	4066966	CastExpression	( void ) user		4066962	0					
ANR	4066967	CastTarget	void		4066962	0					
ANR	4066968	Identifier	user		4066962	1					
ANR	4066969	ExpressionStatement	node -> i_value = r_cons_singleton ( ) -> context -> color_mode	1219:1:34196:34252	4066962	1	True				
ANR	4066970	AssignmentExpression	node -> i_value = r_cons_singleton ( ) -> context -> color_mode		4066962	0		=			
ANR	4066971	PtrMemberAccess	node -> i_value		4066962	0					
ANR	4066972	Identifier	node		4066962	0					
ANR	4066973	Identifier	i_value		4066962	1					
ANR	4066974	PtrMemberAccess	r_cons_singleton ( ) -> context -> color_mode		4066962	1					
ANR	4066975	PtrMemberAccess	r_cons_singleton ( ) -> context		4066962	0					
ANR	4066976	CallExpression	r_cons_singleton ( )		4066962	0					
ANR	4066977	Callee	r_cons_singleton		4066962	0					
ANR	4066978	Identifier	r_cons_singleton		4066962	0					
ANR	4066979	ArgumentList			4066962	1					
ANR	4066980	Identifier	context		4066962	1					
ANR	4066981	Identifier	color_mode		4066962	1					
ANR	4066982	IdentifierDeclStatement	char buf [ 128 ] ;	1220:1:34255:34268	4066962	2	True				
ANR	4066983	IdentifierDecl	buf [ 128 ]		4066962	0					
ANR	4066984	IdentifierDeclType	char [ 128 ]		4066962	0					
ANR	4066985	Identifier	buf		4066962	1					
ANR	4066986	PrimaryExpression	128		4066962	2					
ANR	4066987	ExpressionStatement	"r_config_node_value_format_i ( buf , sizeof ( buf ) , r_cons_singleton ( ) -> context -> color_mode , node )"	1221:1:34271:34367	4066962	3	True				
ANR	4066988	CallExpression	"r_config_node_value_format_i ( buf , sizeof ( buf ) , r_cons_singleton ( ) -> context -> color_mode , node )"		4066962	0					
ANR	4066989	Callee	r_config_node_value_format_i		4066962	0					
ANR	4066990	Identifier	r_config_node_value_format_i		4066962	0					
ANR	4066991	ArgumentList	buf		4066962	1					
ANR	4066992	Argument	buf		4066962	0					
ANR	4066993	Identifier	buf		4066962	0					
ANR	4066994	Argument	sizeof ( buf )		4066962	1					
ANR	4066995	SizeofExpression	sizeof ( buf )		4066962	0					
ANR	4066996	Sizeof	sizeof		4066962	0					
ANR	4066997	SizeofOperand	buf		4066962	1					
ANR	4066998	Argument	r_cons_singleton ( ) -> context -> color_mode		4066962	2					
ANR	4066999	PtrMemberAccess	r_cons_singleton ( ) -> context -> color_mode		4066962	0					
ANR	4067000	PtrMemberAccess	r_cons_singleton ( ) -> context		4066962	0					
ANR	4067001	CallExpression	r_cons_singleton ( )		4066962	0					
ANR	4067002	Callee	r_cons_singleton		4066962	0					
ANR	4067003	Identifier	r_cons_singleton		4066962	0					
ANR	4067004	ArgumentList			4066962	1					
ANR	4067005	Identifier	context		4066962	1					
ANR	4067006	Identifier	color_mode		4066962	1					
ANR	4067007	Argument	node		4066962	3					
ANR	4067008	Identifier	node		4066962	0					
ANR	4067009	IfStatement	"if ( ! node -> value || strcmp ( node -> value , buf ) != 0 )"		4066962	4					
ANR	4067010	Condition	"! node -> value || strcmp ( node -> value , buf ) != 0"	1222:5:34374:34419	4066962	0	True				
ANR	4067011	OrExpression	"! node -> value || strcmp ( node -> value , buf ) != 0"		4066962	0		||			
ANR	4067012	UnaryOperationExpression	! node -> value		4066962	0					
ANR	4067013	UnaryOperator	!		4066962	0					
ANR	4067014	PtrMemberAccess	node -> value		4066962	1					
ANR	4067015	Identifier	node		4066962	0					
ANR	4067016	Identifier	value		4066962	1					
ANR	4067017	EqualityExpression	"strcmp ( node -> value , buf ) != 0"		4066962	1		!=			
ANR	4067018	CallExpression	"strcmp ( node -> value , buf )"		4066962	0					
ANR	4067019	Callee	strcmp		4066962	0					
ANR	4067020	Identifier	strcmp		4066962	0					
ANR	4067021	ArgumentList	node -> value		4066962	1					
ANR	4067022	Argument	node -> value		4066962	0					
ANR	4067023	PtrMemberAccess	node -> value		4066962	0					
ANR	4067024	Identifier	node		4066962	0					
ANR	4067025	Identifier	value		4066962	1					
ANR	4067026	Argument	buf		4066962	1					
ANR	4067027	Identifier	buf		4066962	0					
ANR	4067028	PrimaryExpression	0		4066962	1					
ANR	4067029	CompoundStatement		6:53:241:241	4066962	1					
ANR	4067030	ExpressionStatement	free ( node -> value )	1223:2:34426:34444	4066962	0	True				
ANR	4067031	CallExpression	free ( node -> value )		4066962	0					
ANR	4067032	Callee	free		4066962	0					
ANR	4067033	Identifier	free		4066962	0					
ANR	4067034	ArgumentList	node -> value		4066962	1					
ANR	4067035	Argument	node -> value		4066962	0					
ANR	4067036	PtrMemberAccess	node -> value		4066962	0					
ANR	4067037	Identifier	node		4066962	0					
ANR	4067038	Identifier	value		4066962	1					
ANR	4067039	ExpressionStatement	node -> value = strdup ( buf )	1224:2:34448:34474	4066962	1	True				
ANR	4067040	AssignmentExpression	node -> value = strdup ( buf )		4066962	0		=			
ANR	4067041	PtrMemberAccess	node -> value		4066962	0					
ANR	4067042	Identifier	node		4066962	0					
ANR	4067043	Identifier	value		4066962	1					
ANR	4067044	CallExpression	strdup ( buf )		4066962	1					
ANR	4067045	Callee	strdup		4066962	0					
ANR	4067046	Identifier	strdup		4066962	0					
ANR	4067047	ArgumentList	buf		4066962	1					
ANR	4067048	Argument	buf		4066962	0					
ANR	4067049	Identifier	buf		4066962	0					
ANR	4067050	ReturnStatement	return true ;	1226:1:34480:34491	4066962	5	True				
ANR	4067051	Identifier	true		4066962	0					
ANR	4067052	ReturnType	static bool		4066962	1					
ANR	4067053	Identifier	cb_color_getter		4066962	2					
ANR	4067054	ParameterList	"void * user , RConfigNode * node"		4066962	3					
ANR	4067055	Parameter	void * user	1217:28:34149:34158	4066962	0	True				
ANR	4067056	ParameterType	void *		4066962	0					
ANR	4067057	Identifier	user		4066962	1					
ANR	4067058	Parameter	RConfigNode * node	1217:40:34161:34177	4066962	1	True				
ANR	4067059	ParameterType	RConfigNode *		4066962	0					
ANR	4067060	Identifier	node		4066962	1					
ANR	4067061	CFGEntryNode	ENTRY		4066962		True				
ANR	4067062	CFGExitNode	EXIT		4066962		True				
ANR	4067063	Symbol	strcmp		4066962						
ANR	4067064	Symbol	* r_cons_singleton ( ) -> context		4066962						
ANR	4067065	Symbol	* * r_cons_singleton		4066962						
ANR	4067066	Symbol	node -> i_value		4066962						
ANR	4067067	Symbol	node -> value		4066962						
ANR	4067068	Symbol	r_cons_singleton ( ) -> context -> color_mode		4066962						
ANR	4067069	Symbol	node		4066962						
ANR	4067070	Symbol	buf		4066962						
ANR	4067071	Symbol	true		4066962						
ANR	4067072	Symbol	r_cons_singleton		4066962						
ANR	4067073	Symbol	* node		4066962						
ANR	4067074	Symbol	strdup		4066962						
ANR	4067075	Symbol	user		4066962						
ANR	4067076	Symbol	r_cons_singleton ( ) -> context		4066962						
ANR	4067077	Symbol	* r_cons_singleton		4066962						
ANR	4067078	Function	cb_decoff	1229:0:34496:34818							
ANR	4067079	FunctionDef	"cb_decoff (void * user , void * data)"		4067078	0					
ANR	4067080	CompoundStatement		1229:46:34542:34818	4067078	0					
ANR	4067081	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1230:1:34545:34573	4067078	0	True				
ANR	4067082	IdentifierDecl	* core = ( RCore * ) user		4067078	0					
ANR	4067083	IdentifierDeclType	RCore *		4067078	0					
ANR	4067084	Identifier	core		4067078	1					
ANR	4067085	AssignmentExpression	* core = ( RCore * ) user		4067078	2		=			
ANR	4067086	Identifier	core		4067078	0					
ANR	4067087	CastExpression	( RCore * ) user		4067078	1					
ANR	4067088	CastTarget	RCore *		4067078	0					
ANR	4067089	Identifier	user		4067078	1					
ANR	4067090	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1231:1:34576:34616	4067078	1	True				
ANR	4067091	IdentifierDecl	* node = ( RConfigNode * ) data		4067078	0					
ANR	4067092	IdentifierDeclType	RConfigNode *		4067078	0					
ANR	4067093	Identifier	node		4067078	1					
ANR	4067094	AssignmentExpression	* node = ( RConfigNode * ) data		4067078	2		=			
ANR	4067095	Identifier	node		4067078	0					
ANR	4067096	CastExpression	( RConfigNode * ) data		4067078	1					
ANR	4067097	CastTarget	RConfigNode *		4067078	0					
ANR	4067098	Identifier	data		4067078	1					
ANR	4067099	IfStatement	if ( node -> i_value )		4067078	2					
ANR	4067100	Condition	node -> i_value	1232:5:34623:34635	4067078	0	True				
ANR	4067101	PtrMemberAccess	node -> i_value		4067078	0					
ANR	4067102	Identifier	node		4067078	0					
ANR	4067103	Identifier	i_value		4067078	1					
ANR	4067104	CompoundStatement		4:20:95:95	4067078	1					
ANR	4067105	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_ADDRDEC	1233:2:34642:34685	4067078	0	True				
ANR	4067106	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_ADDRDEC		4067078	0		|=			
ANR	4067107	PtrMemberAccess	core -> print -> flags		4067078	0					
ANR	4067108	PtrMemberAccess	core -> print		4067078	0					
ANR	4067109	Identifier	core		4067078	0					
ANR	4067110	Identifier	print		4067078	1					
ANR	4067111	Identifier	flags		4067078	1					
ANR	4067112	Identifier	R_PRINT_FLAGS_ADDRDEC		4067078	1					
ANR	4067113	ElseStatement	else		4067078	0					
ANR	4067114	CompoundStatement		6:8:152:152	4067078	0					
ANR	4067115	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_ADDRDEC )	1235:2:34699:34745	4067078	0	True				
ANR	4067116	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_ADDRDEC )		4067078	0		&=			
ANR	4067117	PtrMemberAccess	core -> print -> flags		4067078	0					
ANR	4067118	PtrMemberAccess	core -> print		4067078	0					
ANR	4067119	Identifier	core		4067078	0					
ANR	4067120	Identifier	print		4067078	1					
ANR	4067121	Identifier	flags		4067078	1					
ANR	4067122	Identifier	~R_PRINT_FLAGS_ADDRDEC		4067078	1					
ANR	4067123	ExpressionStatement	"r_print_set_flags ( core -> print , core -> print -> flags )"	1237:1:34751:34802	4067078	3	True				
ANR	4067124	CallExpression	"r_print_set_flags ( core -> print , core -> print -> flags )"		4067078	0					
ANR	4067125	Callee	r_print_set_flags		4067078	0					
ANR	4067126	Identifier	r_print_set_flags		4067078	0					
ANR	4067127	ArgumentList	core -> print		4067078	1					
ANR	4067128	Argument	core -> print		4067078	0					
ANR	4067129	PtrMemberAccess	core -> print		4067078	0					
ANR	4067130	Identifier	core		4067078	0					
ANR	4067131	Identifier	print		4067078	1					
ANR	4067132	Argument	core -> print -> flags		4067078	1					
ANR	4067133	PtrMemberAccess	core -> print -> flags		4067078	0					
ANR	4067134	PtrMemberAccess	core -> print		4067078	0					
ANR	4067135	Identifier	core		4067078	0					
ANR	4067136	Identifier	print		4067078	1					
ANR	4067137	Identifier	flags		4067078	1					
ANR	4067138	ReturnStatement	return true ;	1238:1:34805:34816	4067078	4	True				
ANR	4067139	Identifier	true		4067078	0					
ANR	4067140	ReturnType	static bool		4067078	1					
ANR	4067141	Identifier	cb_decoff		4067078	2					
ANR	4067142	ParameterList	"void * user , void * data"		4067078	3					
ANR	4067143	Parameter	void * user	1229:22:34518:34527	4067078	0	True				
ANR	4067144	ParameterType	void *		4067078	0					
ANR	4067145	Identifier	user		4067078	1					
ANR	4067146	Parameter	void * data	1229:34:34530:34539	4067078	1	True				
ANR	4067147	ParameterType	void *		4067078	0					
ANR	4067148	Identifier	data		4067078	1					
ANR	4067149	CFGEntryNode	ENTRY		4067078		True				
ANR	4067150	CFGExitNode	EXIT		4067078		True				
ANR	4067151	Symbol	R_PRINT_FLAGS_ADDRDEC		4067078						
ANR	4067152	Symbol	data		4067078						
ANR	4067153	Symbol	* core		4067078						
ANR	4067154	Symbol	node -> i_value		4067078						
ANR	4067155	Symbol	core		4067078						
ANR	4067156	Symbol	node		4067078						
ANR	4067157	Symbol	* core -> print		4067078						
ANR	4067158	Symbol	~R_PRINT_FLAGS_ADDRDEC		4067078						
ANR	4067159	Symbol	true		4067078						
ANR	4067160	Symbol	* node		4067078						
ANR	4067161	Symbol	core -> print		4067078						
ANR	4067162	Symbol	user		4067078						
ANR	4067163	Symbol	* * core		4067078						
ANR	4067164	Symbol	core -> print -> flags		4067078						
ANR	4067165	Function	cb_dbgbep	1241:0:34821:35001							
ANR	4067166	FunctionDef	"cb_dbgbep (void * user , void * data)"		4067165	0					
ANR	4067167	CompoundStatement		1241:46:34867:35001	4067165	0					
ANR	4067168	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1242:1:34870:34909	4067165	0	True				
ANR	4067169	IdentifierDecl	* node = ( RConfigNode * ) data		4067165	0					
ANR	4067170	IdentifierDeclType	RConfigNode *		4067165	0					
ANR	4067171	Identifier	node		4067165	1					
ANR	4067172	AssignmentExpression	* node = ( RConfigNode * ) data		4067165	2		=			
ANR	4067173	Identifier	node		4067165	0					
ANR	4067174	CastExpression	( RConfigNode * ) data		4067165	1					
ANR	4067175	CastTarget	RConfigNode *		4067165	0					
ANR	4067176	Identifier	data		4067165	1					
ANR	4067177	IfStatement	if ( * node -> value == '?' )		4067165	1					
ANR	4067178	Condition	* node -> value == '?'	1243:5:34916:34934	4067165	0	True				
ANR	4067179	EqualityExpression	* node -> value == '?'		4067165	0		==			
ANR	4067180	UnaryOperationExpression	* node -> value		4067165	0					
ANR	4067181	UnaryOperator	*		4067165	0					
ANR	4067182	PtrMemberAccess	node -> value		4067165	1					
ANR	4067183	Identifier	node		4067165	0					
ANR	4067184	Identifier	value		4067165	1					
ANR	4067185	PrimaryExpression	'?'		4067165	1					
ANR	4067186	CompoundStatement		3:26:69:69	4067165	1					
ANR	4067187	ExpressionStatement	print_node_options ( node )	1244:2:34941:34966	4067165	0	True				
ANR	4067188	CallExpression	print_node_options ( node )		4067165	0					
ANR	4067189	Callee	print_node_options		4067165	0					
ANR	4067190	Identifier	print_node_options		4067165	0					
ANR	4067191	ArgumentList	node		4067165	1					
ANR	4067192	Argument	node		4067165	0					
ANR	4067193	Identifier	node		4067165	0					
ANR	4067194	ReturnStatement	return false ;	1245:2:34970:34982	4067165	1	True				
ANR	4067195	Identifier	false		4067165	0					
ANR	4067196	ReturnStatement	return true ;	1247:1:34988:34999	4067165	2	True				
ANR	4067197	Identifier	true		4067165	0					
ANR	4067198	ReturnType	static bool		4067165	1					
ANR	4067199	Identifier	cb_dbgbep		4067165	2					
ANR	4067200	ParameterList	"void * user , void * data"		4067165	3					
ANR	4067201	Parameter	void * user	1241:22:34843:34852	4067165	0	True				
ANR	4067202	ParameterType	void *		4067165	0					
ANR	4067203	Identifier	user		4067165	1					
ANR	4067204	Parameter	void * data	1241:34:34855:34864	4067165	1	True				
ANR	4067205	ParameterType	void *		4067165	0					
ANR	4067206	Identifier	data		4067165	1					
ANR	4067207	CFGEntryNode	ENTRY		4067165		True				
ANR	4067208	CFGExitNode	EXIT		4067165		True				
ANR	4067209	Symbol	node		4067165						
ANR	4067210	Symbol	* node -> value		4067165						
ANR	4067211	Symbol	data		4067165						
ANR	4067212	Symbol	* * node		4067165						
ANR	4067213	Symbol	false		4067165						
ANR	4067214	Symbol	true		4067165						
ANR	4067215	Symbol	* node		4067165						
ANR	4067216	Symbol	user		4067165						
ANR	4067217	Symbol	node -> value		4067165						
ANR	4067218	Function	cb_dbg_btalgo	1250:0:35004:35288							
ANR	4067219	FunctionDef	"cb_dbg_btalgo (void * user , void * data)"		4067218	0					
ANR	4067220	CompoundStatement		1250:50:35054:35288	4067218	0					
ANR	4067221	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1251:1:35057:35084	4067218	0	True				
ANR	4067222	IdentifierDecl	* core = ( RCore * ) user		4067218	0					
ANR	4067223	IdentifierDeclType	RCore *		4067218	0					
ANR	4067224	Identifier	core		4067218	1					
ANR	4067225	AssignmentExpression	* core = ( RCore * ) user		4067218	2		=			
ANR	4067226	Identifier	core		4067218	0					
ANR	4067227	CastExpression	( RCore * ) user		4067218	1					
ANR	4067228	CastTarget	RCore *		4067218	0					
ANR	4067229	Identifier	user		4067218	1					
ANR	4067230	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1252:1:35087:35126	4067218	1	True				
ANR	4067231	IdentifierDecl	* node = ( RConfigNode * ) data		4067218	0					
ANR	4067232	IdentifierDeclType	RConfigNode *		4067218	0					
ANR	4067233	Identifier	node		4067218	1					
ANR	4067234	AssignmentExpression	* node = ( RConfigNode * ) data		4067218	2		=			
ANR	4067235	Identifier	node		4067218	0					
ANR	4067236	CastExpression	( RConfigNode * ) data		4067218	1					
ANR	4067237	CastTarget	RConfigNode *		4067218	0					
ANR	4067238	Identifier	data		4067218	1					
ANR	4067239	IfStatement	if ( * node -> value == '?' )		4067218	2					
ANR	4067240	Condition	* node -> value == '?'	1253:5:35133:35151	4067218	0	True				
ANR	4067241	EqualityExpression	* node -> value == '?'		4067218	0		==			
ANR	4067242	UnaryOperationExpression	* node -> value		4067218	0					
ANR	4067243	UnaryOperator	*		4067218	0					
ANR	4067244	PtrMemberAccess	node -> value		4067218	1					
ANR	4067245	Identifier	node		4067218	0					
ANR	4067246	Identifier	value		4067218	1					
ANR	4067247	PrimaryExpression	'?'		4067218	1					
ANR	4067248	CompoundStatement		4:26:99:99	4067218	1					
ANR	4067249	ExpressionStatement	print_node_options ( node )	1254:2:35158:35183	4067218	0	True				
ANR	4067250	CallExpression	print_node_options ( node )		4067218	0					
ANR	4067251	Callee	print_node_options		4067218	0					
ANR	4067252	Identifier	print_node_options		4067218	0					
ANR	4067253	ArgumentList	node		4067218	1					
ANR	4067254	Argument	node		4067218	0					
ANR	4067255	Identifier	node		4067218	0					
ANR	4067256	ReturnStatement	return false ;	1255:2:35187:35199	4067218	1	True				
ANR	4067257	Identifier	false		4067218	0					
ANR	4067258	ExpressionStatement	free ( core -> dbg -> btalgo )	1257:1:35205:35229	4067218	3	True				
ANR	4067259	CallExpression	free ( core -> dbg -> btalgo )		4067218	0					
ANR	4067260	Callee	free		4067218	0					
ANR	4067261	Identifier	free		4067218	0					
ANR	4067262	ArgumentList	core -> dbg -> btalgo		4067218	1					
ANR	4067263	Argument	core -> dbg -> btalgo		4067218	0					
ANR	4067264	PtrMemberAccess	core -> dbg -> btalgo		4067218	0					
ANR	4067265	PtrMemberAccess	core -> dbg		4067218	0					
ANR	4067266	Identifier	core		4067218	0					
ANR	4067267	Identifier	dbg		4067218	1					
ANR	4067268	Identifier	btalgo		4067218	1					
ANR	4067269	ExpressionStatement	core -> dbg -> btalgo = strdup ( node -> value )	1258:1:35232:35272	4067218	4	True				
ANR	4067270	AssignmentExpression	core -> dbg -> btalgo = strdup ( node -> value )		4067218	0		=			
ANR	4067271	PtrMemberAccess	core -> dbg -> btalgo		4067218	0					
ANR	4067272	PtrMemberAccess	core -> dbg		4067218	0					
ANR	4067273	Identifier	core		4067218	0					
ANR	4067274	Identifier	dbg		4067218	1					
ANR	4067275	Identifier	btalgo		4067218	1					
ANR	4067276	CallExpression	strdup ( node -> value )		4067218	1					
ANR	4067277	Callee	strdup		4067218	0					
ANR	4067278	Identifier	strdup		4067218	0					
ANR	4067279	ArgumentList	node -> value		4067218	1					
ANR	4067280	Argument	node -> value		4067218	0					
ANR	4067281	PtrMemberAccess	node -> value		4067218	0					
ANR	4067282	Identifier	node		4067218	0					
ANR	4067283	Identifier	value		4067218	1					
ANR	4067284	ReturnStatement	return true ;	1259:1:35275:35286	4067218	5	True				
ANR	4067285	Identifier	true		4067218	0					
ANR	4067286	ReturnType	static bool		4067218	1					
ANR	4067287	Identifier	cb_dbg_btalgo		4067218	2					
ANR	4067288	ParameterList	"void * user , void * data"		4067218	3					
ANR	4067289	Parameter	void * user	1250:26:35030:35039	4067218	0	True				
ANR	4067290	ParameterType	void *		4067218	0					
ANR	4067291	Identifier	user		4067218	1					
ANR	4067292	Parameter	void * data	1250:38:35042:35051	4067218	1	True				
ANR	4067293	ParameterType	void *		4067218	0					
ANR	4067294	Identifier	data		4067218	1					
ANR	4067295	CFGEntryNode	ENTRY		4067218		True				
ANR	4067296	CFGExitNode	EXIT		4067218		True				
ANR	4067297	Symbol	* node -> value		4067218						
ANR	4067298	Symbol	data		4067218						
ANR	4067299	Symbol	false		4067218						
ANR	4067300	Symbol	* core		4067218						
ANR	4067301	Symbol	core -> dbg -> btalgo		4067218						
ANR	4067302	Symbol	node -> value		4067218						
ANR	4067303	Symbol	core		4067218						
ANR	4067304	Symbol	node		4067218						
ANR	4067305	Symbol	* * node		4067218						
ANR	4067306	Symbol	true		4067218						
ANR	4067307	Symbol	* node		4067218						
ANR	4067308	Symbol	strdup		4067218						
ANR	4067309	Symbol	user		4067218						
ANR	4067310	Symbol	* core -> dbg		4067218						
ANR	4067311	Symbol	* * core		4067218						
ANR	4067312	Symbol	core -> dbg		4067218						
ANR	4067313	Function	cb_dbg_libs	1262:0:35291:35503							
ANR	4067314	FunctionDef	"cb_dbg_libs (void * user , void * data)"		4067313	0					
ANR	4067315	CompoundStatement		1262:48:35339:35503	4067313	0					
ANR	4067316	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1263:1:35342:35369	4067313	0	True				
ANR	4067317	IdentifierDecl	* core = ( RCore * ) user		4067313	0					
ANR	4067318	IdentifierDeclType	RCore *		4067313	0					
ANR	4067319	Identifier	core		4067313	1					
ANR	4067320	AssignmentExpression	* core = ( RCore * ) user		4067313	2		=			
ANR	4067321	Identifier	core		4067313	0					
ANR	4067322	CastExpression	( RCore * ) user		4067313	1					
ANR	4067323	CastTarget	RCore *		4067313	0					
ANR	4067324	Identifier	user		4067313	1					
ANR	4067325	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1264:1:35372:35411	4067313	1	True				
ANR	4067326	IdentifierDecl	* node = ( RConfigNode * ) data		4067313	0					
ANR	4067327	IdentifierDeclType	RConfigNode *		4067313	0					
ANR	4067328	Identifier	node		4067313	1					
ANR	4067329	AssignmentExpression	* node = ( RConfigNode * ) data		4067313	2		=			
ANR	4067330	Identifier	node		4067313	0					
ANR	4067331	CastExpression	( RConfigNode * ) data		4067313	1					
ANR	4067332	CastTarget	RConfigNode *		4067313	0					
ANR	4067333	Identifier	data		4067313	1					
ANR	4067334	ExpressionStatement	free ( core -> dbg -> glob_libs )	1265:1:35414:35441	4067313	2	True				
ANR	4067335	CallExpression	free ( core -> dbg -> glob_libs )		4067313	0					
ANR	4067336	Callee	free		4067313	0					
ANR	4067337	Identifier	free		4067313	0					
ANR	4067338	ArgumentList	core -> dbg -> glob_libs		4067313	1					
ANR	4067339	Argument	core -> dbg -> glob_libs		4067313	0					
ANR	4067340	PtrMemberAccess	core -> dbg -> glob_libs		4067313	0					
ANR	4067341	PtrMemberAccess	core -> dbg		4067313	0					
ANR	4067342	Identifier	core		4067313	0					
ANR	4067343	Identifier	dbg		4067313	1					
ANR	4067344	Identifier	glob_libs		4067313	1					
ANR	4067345	ExpressionStatement	core -> dbg -> glob_libs = strdup ( node -> value )	1266:1:35444:35487	4067313	3	True				
ANR	4067346	AssignmentExpression	core -> dbg -> glob_libs = strdup ( node -> value )		4067313	0		=			
ANR	4067347	PtrMemberAccess	core -> dbg -> glob_libs		4067313	0					
ANR	4067348	PtrMemberAccess	core -> dbg		4067313	0					
ANR	4067349	Identifier	core		4067313	0					
ANR	4067350	Identifier	dbg		4067313	1					
ANR	4067351	Identifier	glob_libs		4067313	1					
ANR	4067352	CallExpression	strdup ( node -> value )		4067313	1					
ANR	4067353	Callee	strdup		4067313	0					
ANR	4067354	Identifier	strdup		4067313	0					
ANR	4067355	ArgumentList	node -> value		4067313	1					
ANR	4067356	Argument	node -> value		4067313	0					
ANR	4067357	PtrMemberAccess	node -> value		4067313	0					
ANR	4067358	Identifier	node		4067313	0					
ANR	4067359	Identifier	value		4067313	1					
ANR	4067360	ReturnStatement	return true ;	1267:1:35490:35501	4067313	4	True				
ANR	4067361	Identifier	true		4067313	0					
ANR	4067362	ReturnType	static bool		4067313	1					
ANR	4067363	Identifier	cb_dbg_libs		4067313	2					
ANR	4067364	ParameterList	"void * user , void * data"		4067313	3					
ANR	4067365	Parameter	void * user	1262:24:35315:35324	4067313	0	True				
ANR	4067366	ParameterType	void *		4067313	0					
ANR	4067367	Identifier	user		4067313	1					
ANR	4067368	Parameter	void * data	1262:36:35327:35336	4067313	1	True				
ANR	4067369	ParameterType	void *		4067313	0					
ANR	4067370	Identifier	data		4067313	1					
ANR	4067371	CFGEntryNode	ENTRY		4067313		True				
ANR	4067372	CFGExitNode	EXIT		4067313		True				
ANR	4067373	Symbol	data		4067313						
ANR	4067374	Symbol	* core		4067313						
ANR	4067375	Symbol	core -> dbg -> glob_libs		4067313						
ANR	4067376	Symbol	node -> value		4067313						
ANR	4067377	Symbol	core		4067313						
ANR	4067378	Symbol	node		4067313						
ANR	4067379	Symbol	true		4067313						
ANR	4067380	Symbol	* node		4067313						
ANR	4067381	Symbol	strdup		4067313						
ANR	4067382	Symbol	user		4067313						
ANR	4067383	Symbol	* core -> dbg		4067313						
ANR	4067384	Symbol	* * core		4067313						
ANR	4067385	Symbol	core -> dbg		4067313						
ANR	4067386	Function	cb_dbg_unlibs	1270:0:35506:35724							
ANR	4067387	FunctionDef	"cb_dbg_unlibs (void * user , void * data)"		4067386	0					
ANR	4067388	CompoundStatement		1270:50:35556:35724	4067386	0					
ANR	4067389	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1271:1:35559:35586	4067386	0	True				
ANR	4067390	IdentifierDecl	* core = ( RCore * ) user		4067386	0					
ANR	4067391	IdentifierDeclType	RCore *		4067386	0					
ANR	4067392	Identifier	core		4067386	1					
ANR	4067393	AssignmentExpression	* core = ( RCore * ) user		4067386	2		=			
ANR	4067394	Identifier	core		4067386	0					
ANR	4067395	CastExpression	( RCore * ) user		4067386	1					
ANR	4067396	CastTarget	RCore *		4067386	0					
ANR	4067397	Identifier	user		4067386	1					
ANR	4067398	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1272:1:35589:35628	4067386	1	True				
ANR	4067399	IdentifierDecl	* node = ( RConfigNode * ) data		4067386	0					
ANR	4067400	IdentifierDeclType	RConfigNode *		4067386	0					
ANR	4067401	Identifier	node		4067386	1					
ANR	4067402	AssignmentExpression	* node = ( RConfigNode * ) data		4067386	2		=			
ANR	4067403	Identifier	node		4067386	0					
ANR	4067404	CastExpression	( RConfigNode * ) data		4067386	1					
ANR	4067405	CastTarget	RConfigNode *		4067386	0					
ANR	4067406	Identifier	data		4067386	1					
ANR	4067407	ExpressionStatement	free ( core -> dbg -> glob_unlibs )	1273:1:35631:35660	4067386	2	True				
ANR	4067408	CallExpression	free ( core -> dbg -> glob_unlibs )		4067386	0					
ANR	4067409	Callee	free		4067386	0					
ANR	4067410	Identifier	free		4067386	0					
ANR	4067411	ArgumentList	core -> dbg -> glob_unlibs		4067386	1					
ANR	4067412	Argument	core -> dbg -> glob_unlibs		4067386	0					
ANR	4067413	PtrMemberAccess	core -> dbg -> glob_unlibs		4067386	0					
ANR	4067414	PtrMemberAccess	core -> dbg		4067386	0					
ANR	4067415	Identifier	core		4067386	0					
ANR	4067416	Identifier	dbg		4067386	1					
ANR	4067417	Identifier	glob_unlibs		4067386	1					
ANR	4067418	ExpressionStatement	core -> dbg -> glob_unlibs = strdup ( node -> value )	1274:1:35663:35708	4067386	3	True				
ANR	4067419	AssignmentExpression	core -> dbg -> glob_unlibs = strdup ( node -> value )		4067386	0		=			
ANR	4067420	PtrMemberAccess	core -> dbg -> glob_unlibs		4067386	0					
ANR	4067421	PtrMemberAccess	core -> dbg		4067386	0					
ANR	4067422	Identifier	core		4067386	0					
ANR	4067423	Identifier	dbg		4067386	1					
ANR	4067424	Identifier	glob_unlibs		4067386	1					
ANR	4067425	CallExpression	strdup ( node -> value )		4067386	1					
ANR	4067426	Callee	strdup		4067386	0					
ANR	4067427	Identifier	strdup		4067386	0					
ANR	4067428	ArgumentList	node -> value		4067386	1					
ANR	4067429	Argument	node -> value		4067386	0					
ANR	4067430	PtrMemberAccess	node -> value		4067386	0					
ANR	4067431	Identifier	node		4067386	0					
ANR	4067432	Identifier	value		4067386	1					
ANR	4067433	ReturnStatement	return true ;	1275:1:35711:35722	4067386	4	True				
ANR	4067434	Identifier	true		4067386	0					
ANR	4067435	ReturnType	static bool		4067386	1					
ANR	4067436	Identifier	cb_dbg_unlibs		4067386	2					
ANR	4067437	ParameterList	"void * user , void * data"		4067386	3					
ANR	4067438	Parameter	void * user	1270:26:35532:35541	4067386	0	True				
ANR	4067439	ParameterType	void *		4067386	0					
ANR	4067440	Identifier	user		4067386	1					
ANR	4067441	Parameter	void * data	1270:38:35544:35553	4067386	1	True				
ANR	4067442	ParameterType	void *		4067386	0					
ANR	4067443	Identifier	data		4067386	1					
ANR	4067444	CFGEntryNode	ENTRY		4067386		True				
ANR	4067445	CFGExitNode	EXIT		4067386		True				
ANR	4067446	Symbol	data		4067386						
ANR	4067447	Symbol	* core		4067386						
ANR	4067448	Symbol	node -> value		4067386						
ANR	4067449	Symbol	core		4067386						
ANR	4067450	Symbol	node		4067386						
ANR	4067451	Symbol	core -> dbg -> glob_unlibs		4067386						
ANR	4067452	Symbol	true		4067386						
ANR	4067453	Symbol	* node		4067386						
ANR	4067454	Symbol	strdup		4067386						
ANR	4067455	Symbol	user		4067386						
ANR	4067456	Symbol	* core -> dbg		4067386						
ANR	4067457	Symbol	* * core		4067386						
ANR	4067458	Symbol	core -> dbg		4067386						
ANR	4067459	Function	cb_dbg_forks	1278:0:35727:35978							
ANR	4067460	FunctionDef	"cb_dbg_forks (void * user , void * data)"		4067459	0					
ANR	4067461	CompoundStatement		1278:49:35776:35978	4067459	0					
ANR	4067462	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1279:1:35779:35806	4067459	0	True				
ANR	4067463	IdentifierDecl	* core = ( RCore * ) user		4067459	0					
ANR	4067464	IdentifierDeclType	RCore *		4067459	0					
ANR	4067465	Identifier	core		4067459	1					
ANR	4067466	AssignmentExpression	* core = ( RCore * ) user		4067459	2		=			
ANR	4067467	Identifier	core		4067459	0					
ANR	4067468	CastExpression	( RCore * ) user		4067459	1					
ANR	4067469	CastTarget	RCore *		4067459	0					
ANR	4067470	Identifier	user		4067459	1					
ANR	4067471	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1280:1:35809:35848	4067459	1	True				
ANR	4067472	IdentifierDecl	* node = ( RConfigNode * ) data		4067459	0					
ANR	4067473	IdentifierDeclType	RConfigNode *		4067459	0					
ANR	4067474	Identifier	node		4067459	1					
ANR	4067475	AssignmentExpression	* node = ( RConfigNode * ) data		4067459	2		=			
ANR	4067476	Identifier	node		4067459	0					
ANR	4067477	CastExpression	( RConfigNode * ) data		4067459	1					
ANR	4067478	CastTarget	RConfigNode *		4067459	0					
ANR	4067479	Identifier	data		4067459	1					
ANR	4067480	ExpressionStatement	core -> dbg -> trace_forks = node -> i_value	1281:1:35851:35889	4067459	2	True				
ANR	4067481	AssignmentExpression	core -> dbg -> trace_forks = node -> i_value		4067459	0		=			
ANR	4067482	PtrMemberAccess	core -> dbg -> trace_forks		4067459	0					
ANR	4067483	PtrMemberAccess	core -> dbg		4067459	0					
ANR	4067484	Identifier	core		4067459	0					
ANR	4067485	Identifier	dbg		4067459	1					
ANR	4067486	Identifier	trace_forks		4067459	1					
ANR	4067487	PtrMemberAccess	node -> i_value		4067459	1					
ANR	4067488	Identifier	node		4067459	0					
ANR	4067489	Identifier	i_value		4067459	1					
ANR	4067490	IfStatement	if ( core -> io -> debug )		4067459	3					
ANR	4067491	Condition	core -> io -> debug	1282:5:35896:35910	4067459	0	True				
ANR	4067492	PtrMemberAccess	core -> io -> debug		4067459	0					
ANR	4067493	PtrMemberAccess	core -> io		4067459	0					
ANR	4067494	Identifier	core		4067459	0					
ANR	4067495	Identifier	io		4067459	1					
ANR	4067496	Identifier	debug		4067459	1					
ANR	4067497	CompoundStatement		5:22:136:136	4067459	1					
ANR	4067498	ExpressionStatement	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"	1283:2:35917:35959	4067459	0	True				
ANR	4067499	CallExpression	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"		4067459	0					
ANR	4067500	Callee	r_debug_attach		4067459	0					
ANR	4067501	Identifier	r_debug_attach		4067459	0					
ANR	4067502	ArgumentList	core -> dbg		4067459	1					
ANR	4067503	Argument	core -> dbg		4067459	0					
ANR	4067504	PtrMemberAccess	core -> dbg		4067459	0					
ANR	4067505	Identifier	core		4067459	0					
ANR	4067506	Identifier	dbg		4067459	1					
ANR	4067507	Argument	core -> dbg -> pid		4067459	1					
ANR	4067508	PtrMemberAccess	core -> dbg -> pid		4067459	0					
ANR	4067509	PtrMemberAccess	core -> dbg		4067459	0					
ANR	4067510	Identifier	core		4067459	0					
ANR	4067511	Identifier	dbg		4067459	1					
ANR	4067512	Identifier	pid		4067459	1					
ANR	4067513	ReturnStatement	return true ;	1285:1:35965:35976	4067459	4	True				
ANR	4067514	Identifier	true		4067459	0					
ANR	4067515	ReturnType	static bool		4067459	1					
ANR	4067516	Identifier	cb_dbg_forks		4067459	2					
ANR	4067517	ParameterList	"void * user , void * data"		4067459	3					
ANR	4067518	Parameter	void * user	1278:25:35752:35761	4067459	0	True				
ANR	4067519	ParameterType	void *		4067459	0					
ANR	4067520	Identifier	user		4067459	1					
ANR	4067521	Parameter	void * data	1278:37:35764:35773	4067459	1	True				
ANR	4067522	ParameterType	void *		4067459	0					
ANR	4067523	Identifier	data		4067459	1					
ANR	4067524	CFGEntryNode	ENTRY		4067459		True				
ANR	4067525	CFGExitNode	EXIT		4067459		True				
ANR	4067526	Symbol	data		4067459						
ANR	4067527	Symbol	* core		4067459						
ANR	4067528	Symbol	core -> dbg -> trace_forks		4067459						
ANR	4067529	Symbol	node -> i_value		4067459						
ANR	4067530	Symbol	core		4067459						
ANR	4067531	Symbol	node		4067459						
ANR	4067532	Symbol	* core -> io		4067459						
ANR	4067533	Symbol	core -> io		4067459						
ANR	4067534	Symbol	core -> io -> debug		4067459						
ANR	4067535	Symbol	true		4067459						
ANR	4067536	Symbol	* node		4067459						
ANR	4067537	Symbol	user		4067459						
ANR	4067538	Symbol	* core -> dbg		4067459						
ANR	4067539	Symbol	core -> dbg -> pid		4067459						
ANR	4067540	Symbol	* * core		4067459						
ANR	4067541	Symbol	core -> dbg		4067459						
ANR	4067542	Function	cb_dbg_gdb_page_size	1288:0:35981:36360							
ANR	4067543	FunctionDef	"cb_dbg_gdb_page_size (void * user , void * data)"		4067542	0					
ANR	4067544	CompoundStatement		1288:57:36038:36360	4067542	0					
ANR	4067545	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1289:1:36041:36068	4067542	0	True				
ANR	4067546	IdentifierDecl	* core = ( RCore * ) user		4067542	0					
ANR	4067547	IdentifierDeclType	RCore *		4067542	0					
ANR	4067548	Identifier	core		4067542	1					
ANR	4067549	AssignmentExpression	* core = ( RCore * ) user		4067542	2		=			
ANR	4067550	Identifier	core		4067542	0					
ANR	4067551	CastExpression	( RCore * ) user		4067542	1					
ANR	4067552	CastTarget	RCore *		4067542	0					
ANR	4067553	Identifier	user		4067542	1					
ANR	4067554	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1290:1:36071:36110	4067542	1	True				
ANR	4067555	IdentifierDecl	* node = ( RConfigNode * ) data		4067542	0					
ANR	4067556	IdentifierDeclType	RConfigNode *		4067542	0					
ANR	4067557	Identifier	node		4067542	1					
ANR	4067558	AssignmentExpression	* node = ( RConfigNode * ) data		4067542	2		=			
ANR	4067559	Identifier	node		4067542	0					
ANR	4067560	CastExpression	( RConfigNode * ) data		4067542	1					
ANR	4067561	CastTarget	RConfigNode *		4067542	0					
ANR	4067562	Identifier	data		4067542	1					
ANR	4067563	IfStatement	if ( node -> i_value < 64 )		4067542	2					
ANR	4067564	Condition	node -> i_value < 64	1291:5:36117:36134	4067542	0	True				
ANR	4067565	RelationalExpression	node -> i_value < 64		4067542	0		<			
ANR	4067566	PtrMemberAccess	node -> i_value		4067542	0					
ANR	4067567	Identifier	node		4067542	0					
ANR	4067568	Identifier	i_value		4067542	1					
ANR	4067569	PrimaryExpression	64		4067542	1					
ANR	4067570	CompoundStatement		4:25:98:98	4067542	1					
ANR	4067571	ReturnStatement	return false ;	1292:2:36176:36188	4067542	0	True				
ANR	4067572	Identifier	false		4067542	0					
ANR	4067573	IfStatement	if ( isGdbPlugin ( core ) )		4067542	3					
ANR	4067574	Condition	isGdbPlugin ( core )	1294:5:36198:36215	4067542	0	True				
ANR	4067575	CallExpression	isGdbPlugin ( core )		4067542	0					
ANR	4067576	Callee	isGdbPlugin		4067542	0					
ANR	4067577	Identifier	isGdbPlugin		4067542	0					
ANR	4067578	ArgumentList	core		4067542	1					
ANR	4067579	Argument	core		4067542	0					
ANR	4067580	Identifier	core		4067542	0					
ANR	4067581	CompoundStatement		8:2:183:195	4067542	1					
ANR	4067582	IdentifierDeclStatement	char cmd [ 64 ] ;	1295:2:36222:36234	4067542	0	True				
ANR	4067583	IdentifierDecl	cmd [ 64 ]		4067542	0					
ANR	4067584	IdentifierDeclType	char [ 64 ]		4067542	0					
ANR	4067585	Identifier	cmd		4067542	1					
ANR	4067586	PrimaryExpression	64		4067542	2					
ANR	4067587	Statement	snprintf	1296:2:36238:36245	4067542	1	True				
ANR	4067588	Statement	(	1296:11:36247:36247	4067542	2	True				
ANR	4067589	Statement	cmd	1296:12:36248:36250	4067542	3	True				
ANR	4067590	Statement	","	1296:15:36251:36251	4067542	4	True				
ANR	4067591	Statement	sizeof	1296:17:36253:36258	4067542	5	True				
ANR	4067592	Statement	(	1296:24:36260:36260	4067542	6	True				
ANR	4067593	Statement	cmd	1296:25:36261:36263	4067542	7	True				
ANR	4067594	Statement	)	1296:28:36264:36264	4067542	8	True				
ANR	4067595	Statement	","	1296:29:36265:36265	4067542	9	True				
ANR	4067596	Statement	"""page_size %"""	1296:31:36267:36279	4067542	10	True				
ANR	4067597	Statement	PFMT64d	1296:44:36280:36286	4067542	11	True				
ANR	4067598	Statement	","	1296:51:36287:36287	4067542	12	True				
ANR	4067599	Statement	node	1296:53:36289:36292	4067542	13	True				
ANR	4067600	Statement	->	1296:57:36293:36294	4067542	14	True				
ANR	4067601	Statement	i_value	1296:59:36295:36301	4067542	15	True				
ANR	4067602	Statement	)	1296:66:36302:36302	4067542	16	True				
ANR	4067603	ExpressionStatement		1296:67:36303:36303	4067542	17	True				
ANR	4067604	ExpressionStatement	"free ( r_io_system ( core -> io , cmd ) )"	1297:2:36307:36341	4067542	18	True				
ANR	4067605	CallExpression	"free ( r_io_system ( core -> io , cmd ) )"		4067542	0					
ANR	4067606	Callee	free		4067542	0					
ANR	4067607	Identifier	free		4067542	0					
ANR	4067608	ArgumentList	"r_io_system ( core -> io , cmd )"		4067542	1					
ANR	4067609	Argument	"r_io_system ( core -> io , cmd )"		4067542	0					
ANR	4067610	CallExpression	"r_io_system ( core -> io , cmd )"		4067542	0					
ANR	4067611	Callee	r_io_system		4067542	0					
ANR	4067612	Identifier	r_io_system		4067542	0					
ANR	4067613	ArgumentList	core -> io		4067542	1					
ANR	4067614	Argument	core -> io		4067542	0					
ANR	4067615	PtrMemberAccess	core -> io		4067542	0					
ANR	4067616	Identifier	core		4067542	0					
ANR	4067617	Identifier	io		4067542	1					
ANR	4067618	Argument	cmd		4067542	1					
ANR	4067619	Identifier	cmd		4067542	0					
ANR	4067620	ReturnStatement	return true ;	1299:1:36347:36358	4067542	4	True				
ANR	4067621	Identifier	true		4067542	0					
ANR	4067622	ReturnType	static bool		4067542	1					
ANR	4067623	Identifier	cb_dbg_gdb_page_size		4067542	2					
ANR	4067624	ParameterList	"void * user , void * data"		4067542	3					
ANR	4067625	Parameter	void * user	1288:33:36014:36023	4067542	0	True				
ANR	4067626	ParameterType	void *		4067542	0					
ANR	4067627	Identifier	user		4067542	1					
ANR	4067628	Parameter	void * data	1288:45:36026:36035	4067542	1	True				
ANR	4067629	ParameterType	void *		4067542	0					
ANR	4067630	Identifier	data		4067542	1					
ANR	4067631	CFGEntryNode	ENTRY		4067542		True				
ANR	4067632	CFGExitNode	EXIT		4067542		True				
ANR	4067633	Symbol	r_io_system		4067542						
ANR	4067634	Symbol	data		4067542						
ANR	4067635	Symbol	isGdbPlugin		4067542						
ANR	4067636	Symbol	false		4067542						
ANR	4067637	Symbol	* core		4067542						
ANR	4067638	Symbol	node -> i_value		4067542						
ANR	4067639	Symbol	core		4067542						
ANR	4067640	Symbol	node		4067542						
ANR	4067641	Symbol	core -> io		4067542						
ANR	4067642	Symbol	true		4067542						
ANR	4067643	Symbol	* node		4067542						
ANR	4067644	Symbol	cmd		4067542						
ANR	4067645	Symbol	user		4067542						
ANR	4067646	Function	cb_dbg_gdb_retries	1302:0:36363:36703							
ANR	4067647	FunctionDef	"cb_dbg_gdb_retries (void * user , void * data)"		4067646	0					
ANR	4067648	CompoundStatement		1302:55:36418:36703	4067646	0					
ANR	4067649	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1303:1:36421:36448	4067646	0	True				
ANR	4067650	IdentifierDecl	* core = ( RCore * ) user		4067646	0					
ANR	4067651	IdentifierDeclType	RCore *		4067646	0					
ANR	4067652	Identifier	core		4067646	1					
ANR	4067653	AssignmentExpression	* core = ( RCore * ) user		4067646	2		=			
ANR	4067654	Identifier	core		4067646	0					
ANR	4067655	CastExpression	( RCore * ) user		4067646	1					
ANR	4067656	CastTarget	RCore *		4067646	0					
ANR	4067657	Identifier	user		4067646	1					
ANR	4067658	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1304:1:36451:36490	4067646	1	True				
ANR	4067659	IdentifierDecl	* node = ( RConfigNode * ) data		4067646	0					
ANR	4067660	IdentifierDeclType	RConfigNode *		4067646	0					
ANR	4067661	Identifier	node		4067646	1					
ANR	4067662	AssignmentExpression	* node = ( RConfigNode * ) data		4067646	2		=			
ANR	4067663	Identifier	node		4067646	0					
ANR	4067664	CastExpression	( RConfigNode * ) data		4067646	1					
ANR	4067665	CastTarget	RConfigNode *		4067646	0					
ANR	4067666	Identifier	data		4067646	1					
ANR	4067667	IfStatement	if ( node -> i_value <= 0 )		4067646	2					
ANR	4067668	Condition	node -> i_value <= 0	1305:5:36497:36514	4067646	0	True				
ANR	4067669	RelationalExpression	node -> i_value <= 0		4067646	0		<=			
ANR	4067670	PtrMemberAccess	node -> i_value		4067646	0					
ANR	4067671	Identifier	node		4067646	0					
ANR	4067672	Identifier	i_value		4067646	1					
ANR	4067673	PrimaryExpression	0		4067646	1					
ANR	4067674	CompoundStatement		4:25:98:98	4067646	1					
ANR	4067675	ReturnStatement	return false ;	1306:2:36521:36533	4067646	0	True				
ANR	4067676	Identifier	false		4067646	0					
ANR	4067677	IfStatement	if ( isGdbPlugin ( core ) )		4067646	3					
ANR	4067678	Condition	isGdbPlugin ( core )	1308:5:36543:36560	4067646	0	True				
ANR	4067679	CallExpression	isGdbPlugin ( core )		4067646	0					
ANR	4067680	Callee	isGdbPlugin		4067646	0					
ANR	4067681	Identifier	isGdbPlugin		4067646	0					
ANR	4067682	ArgumentList	core		4067646	1					
ANR	4067683	Argument	core		4067646	0					
ANR	4067684	Identifier	core		4067646	0					
ANR	4067685	CompoundStatement		8:2:148:160	4067646	1					
ANR	4067686	IdentifierDeclStatement	char cmd [ 64 ] ;	1309:2:36567:36579	4067646	0	True				
ANR	4067687	IdentifierDecl	cmd [ 64 ]		4067646	0					
ANR	4067688	IdentifierDeclType	char [ 64 ]		4067646	0					
ANR	4067689	Identifier	cmd		4067646	1					
ANR	4067690	PrimaryExpression	64		4067646	2					
ANR	4067691	Statement	snprintf	1310:2:36583:36590	4067646	1	True				
ANR	4067692	Statement	(	1310:11:36592:36592	4067646	2	True				
ANR	4067693	Statement	cmd	1310:12:36593:36595	4067646	3	True				
ANR	4067694	Statement	","	1310:15:36596:36596	4067646	4	True				
ANR	4067695	Statement	sizeof	1310:17:36598:36603	4067646	5	True				
ANR	4067696	Statement	(	1310:24:36605:36605	4067646	6	True				
ANR	4067697	Statement	cmd	1310:25:36606:36608	4067646	7	True				
ANR	4067698	Statement	)	1310:28:36609:36609	4067646	8	True				
ANR	4067699	Statement	","	1310:29:36610:36610	4067646	9	True				
ANR	4067700	Statement	"""retries %"""	1310:31:36612:36622	4067646	10	True				
ANR	4067701	Statement	PFMT64d	1310:42:36623:36629	4067646	11	True				
ANR	4067702	Statement	","	1310:49:36630:36630	4067646	12	True				
ANR	4067703	Statement	node	1310:51:36632:36635	4067646	13	True				
ANR	4067704	Statement	->	1310:55:36636:36637	4067646	14	True				
ANR	4067705	Statement	i_value	1310:57:36638:36644	4067646	15	True				
ANR	4067706	Statement	)	1310:64:36645:36645	4067646	16	True				
ANR	4067707	ExpressionStatement		1310:65:36646:36646	4067646	17	True				
ANR	4067708	ExpressionStatement	"free ( r_io_system ( core -> io , cmd ) )"	1311:2:36650:36684	4067646	18	True				
ANR	4067709	CallExpression	"free ( r_io_system ( core -> io , cmd ) )"		4067646	0					
ANR	4067710	Callee	free		4067646	0					
ANR	4067711	Identifier	free		4067646	0					
ANR	4067712	ArgumentList	"r_io_system ( core -> io , cmd )"		4067646	1					
ANR	4067713	Argument	"r_io_system ( core -> io , cmd )"		4067646	0					
ANR	4067714	CallExpression	"r_io_system ( core -> io , cmd )"		4067646	0					
ANR	4067715	Callee	r_io_system		4067646	0					
ANR	4067716	Identifier	r_io_system		4067646	0					
ANR	4067717	ArgumentList	core -> io		4067646	1					
ANR	4067718	Argument	core -> io		4067646	0					
ANR	4067719	PtrMemberAccess	core -> io		4067646	0					
ANR	4067720	Identifier	core		4067646	0					
ANR	4067721	Identifier	io		4067646	1					
ANR	4067722	Argument	cmd		4067646	1					
ANR	4067723	Identifier	cmd		4067646	0					
ANR	4067724	ReturnStatement	return true ;	1313:1:36690:36701	4067646	4	True				
ANR	4067725	Identifier	true		4067646	0					
ANR	4067726	ReturnType	static bool		4067646	1					
ANR	4067727	Identifier	cb_dbg_gdb_retries		4067646	2					
ANR	4067728	ParameterList	"void * user , void * data"		4067646	3					
ANR	4067729	Parameter	void * user	1302:31:36394:36403	4067646	0	True				
ANR	4067730	ParameterType	void *		4067646	0					
ANR	4067731	Identifier	user		4067646	1					
ANR	4067732	Parameter	void * data	1302:43:36406:36415	4067646	1	True				
ANR	4067733	ParameterType	void *		4067646	0					
ANR	4067734	Identifier	data		4067646	1					
ANR	4067735	CFGEntryNode	ENTRY		4067646		True				
ANR	4067736	CFGExitNode	EXIT		4067646		True				
ANR	4067737	Symbol	r_io_system		4067646						
ANR	4067738	Symbol	data		4067646						
ANR	4067739	Symbol	isGdbPlugin		4067646						
ANR	4067740	Symbol	false		4067646						
ANR	4067741	Symbol	* core		4067646						
ANR	4067742	Symbol	node -> i_value		4067646						
ANR	4067743	Symbol	core		4067646						
ANR	4067744	Symbol	node		4067646						
ANR	4067745	Symbol	core -> io		4067646						
ANR	4067746	Symbol	true		4067646						
ANR	4067747	Symbol	* node		4067646						
ANR	4067748	Symbol	cmd		4067646						
ANR	4067749	Symbol	user		4067646						
ANR	4067750	Function	cb_dbg_execs	1316:0:36706:37080							
ANR	4067751	FunctionDef	"cb_dbg_execs (void * user , void * data)"		4067750	0					
ANR	4067752	CompoundStatement		1316:49:36755:37080	4067750	0					
ANR	4067753	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1317:1:36758:36797	4067750	0	True				
ANR	4067754	IdentifierDecl	* node = ( RConfigNode * ) data		4067750	0					
ANR	4067755	IdentifierDeclType	RConfigNode *		4067750	0					
ANR	4067756	Identifier	node		4067750	1					
ANR	4067757	AssignmentExpression	* node = ( RConfigNode * ) data		4067750	2		=			
ANR	4067758	Identifier	node		4067750	0					
ANR	4067759	CastExpression	( RConfigNode * ) data		4067750	1					
ANR	4067760	CastTarget	RConfigNode *		4067750	0					
ANR	4067761	Identifier	data		4067750	1					
ANR	4067762	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1319:1:36814:36841	4067750	1	True				
ANR	4067763	IdentifierDecl	* core = ( RCore * ) user		4067750	0					
ANR	4067764	IdentifierDeclType	RCore *		4067750	0					
ANR	4067765	Identifier	core		4067750	1					
ANR	4067766	AssignmentExpression	* core = ( RCore * ) user		4067750	2		=			
ANR	4067767	Identifier	core		4067750	0					
ANR	4067768	CastExpression	( RCore * ) user		4067750	1					
ANR	4067769	CastTarget	RCore *		4067750	0					
ANR	4067770	Identifier	user		4067750	1					
ANR	4067771	ExpressionStatement	core -> dbg -> trace_execs = node -> i_value	1320:1:36844:36882	4067750	2	True				
ANR	4067772	AssignmentExpression	core -> dbg -> trace_execs = node -> i_value		4067750	0		=			
ANR	4067773	PtrMemberAccess	core -> dbg -> trace_execs		4067750	0					
ANR	4067774	PtrMemberAccess	core -> dbg		4067750	0					
ANR	4067775	Identifier	core		4067750	0					
ANR	4067776	Identifier	dbg		4067750	1					
ANR	4067777	Identifier	trace_execs		4067750	1					
ANR	4067778	PtrMemberAccess	node -> i_value		4067750	1					
ANR	4067779	Identifier	node		4067750	0					
ANR	4067780	Identifier	i_value		4067750	1					
ANR	4067781	IfStatement	if ( core -> io -> debug )		4067750	3					
ANR	4067782	Condition	core -> io -> debug	1321:5:36889:36903	4067750	0	True				
ANR	4067783	PtrMemberAccess	core -> io -> debug		4067750	0					
ANR	4067784	PtrMemberAccess	core -> io		4067750	0					
ANR	4067785	Identifier	core		4067750	0					
ANR	4067786	Identifier	io		4067750	1					
ANR	4067787	Identifier	debug		4067750	1					
ANR	4067788	CompoundStatement		6:22:150:150	4067750	1					
ANR	4067789	ExpressionStatement	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"	1322:2:36910:36952	4067750	0	True				
ANR	4067790	CallExpression	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"		4067750	0					
ANR	4067791	Callee	r_debug_attach		4067750	0					
ANR	4067792	Identifier	r_debug_attach		4067750	0					
ANR	4067793	ArgumentList	core -> dbg		4067750	1					
ANR	4067794	Argument	core -> dbg		4067750	0					
ANR	4067795	PtrMemberAccess	core -> dbg		4067750	0					
ANR	4067796	Identifier	core		4067750	0					
ANR	4067797	Identifier	dbg		4067750	1					
ANR	4067798	Argument	core -> dbg -> pid		4067750	1					
ANR	4067799	PtrMemberAccess	core -> dbg -> pid		4067750	0					
ANR	4067800	PtrMemberAccess	core -> dbg		4067750	0					
ANR	4067801	Identifier	core		4067750	0					
ANR	4067802	Identifier	dbg		4067750	1					
ANR	4067803	Identifier	pid		4067750	1					
ANR	4067804	ReturnStatement	return true ;	1329:1:37067:37078	4067750	4	True				
ANR	4067805	Identifier	true		4067750	0					
ANR	4067806	ReturnType	static bool		4067750	1					
ANR	4067807	Identifier	cb_dbg_execs		4067750	2					
ANR	4067808	ParameterList	"void * user , void * data"		4067750	3					
ANR	4067809	Parameter	void * user	1316:25:36731:36740	4067750	0	True				
ANR	4067810	ParameterType	void *		4067750	0					
ANR	4067811	Identifier	user		4067750	1					
ANR	4067812	Parameter	void * data	1316:37:36743:36752	4067750	1	True				
ANR	4067813	ParameterType	void *		4067750	0					
ANR	4067814	Identifier	data		4067750	1					
ANR	4067815	CFGEntryNode	ENTRY		4067750		True				
ANR	4067816	CFGExitNode	EXIT		4067750		True				
ANR	4067817	Symbol	data		4067750						
ANR	4067818	Symbol	* core		4067750						
ANR	4067819	Symbol	core -> dbg -> trace_execs		4067750						
ANR	4067820	Symbol	node -> i_value		4067750						
ANR	4067821	Symbol	node		4067750						
ANR	4067822	Symbol	core		4067750						
ANR	4067823	Symbol	* core -> io		4067750						
ANR	4067824	Symbol	core -> io		4067750						
ANR	4067825	Symbol	core -> io -> debug		4067750						
ANR	4067826	Symbol	true		4067750						
ANR	4067827	Symbol	* node		4067750						
ANR	4067828	Symbol	user		4067750						
ANR	4067829	Symbol	* core -> dbg		4067750						
ANR	4067830	Symbol	core -> dbg -> pid		4067750						
ANR	4067831	Symbol	* * core		4067750						
ANR	4067832	Symbol	core -> dbg		4067750						
ANR	4067833	Function	cb_dbg_clone	1332:0:37083:37334							
ANR	4067834	FunctionDef	"cb_dbg_clone (void * user , void * data)"		4067833	0					
ANR	4067835	CompoundStatement		1332:49:37132:37334	4067833	0					
ANR	4067836	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1333:1:37135:37162	4067833	0	True				
ANR	4067837	IdentifierDecl	* core = ( RCore * ) user		4067833	0					
ANR	4067838	IdentifierDeclType	RCore *		4067833	0					
ANR	4067839	Identifier	core		4067833	1					
ANR	4067840	AssignmentExpression	* core = ( RCore * ) user		4067833	2		=			
ANR	4067841	Identifier	core		4067833	0					
ANR	4067842	CastExpression	( RCore * ) user		4067833	1					
ANR	4067843	CastTarget	RCore *		4067833	0					
ANR	4067844	Identifier	user		4067833	1					
ANR	4067845	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1334:1:37165:37204	4067833	1	True				
ANR	4067846	IdentifierDecl	* node = ( RConfigNode * ) data		4067833	0					
ANR	4067847	IdentifierDeclType	RConfigNode *		4067833	0					
ANR	4067848	Identifier	node		4067833	1					
ANR	4067849	AssignmentExpression	* node = ( RConfigNode * ) data		4067833	2		=			
ANR	4067850	Identifier	node		4067833	0					
ANR	4067851	CastExpression	( RConfigNode * ) data		4067833	1					
ANR	4067852	CastTarget	RConfigNode *		4067833	0					
ANR	4067853	Identifier	data		4067833	1					
ANR	4067854	ExpressionStatement	core -> dbg -> trace_clone = node -> i_value	1335:1:37207:37245	4067833	2	True				
ANR	4067855	AssignmentExpression	core -> dbg -> trace_clone = node -> i_value		4067833	0		=			
ANR	4067856	PtrMemberAccess	core -> dbg -> trace_clone		4067833	0					
ANR	4067857	PtrMemberAccess	core -> dbg		4067833	0					
ANR	4067858	Identifier	core		4067833	0					
ANR	4067859	Identifier	dbg		4067833	1					
ANR	4067860	Identifier	trace_clone		4067833	1					
ANR	4067861	PtrMemberAccess	node -> i_value		4067833	1					
ANR	4067862	Identifier	node		4067833	0					
ANR	4067863	Identifier	i_value		4067833	1					
ANR	4067864	IfStatement	if ( core -> io -> debug )		4067833	3					
ANR	4067865	Condition	core -> io -> debug	1336:5:37252:37266	4067833	0	True				
ANR	4067866	PtrMemberAccess	core -> io -> debug		4067833	0					
ANR	4067867	PtrMemberAccess	core -> io		4067833	0					
ANR	4067868	Identifier	core		4067833	0					
ANR	4067869	Identifier	io		4067833	1					
ANR	4067870	Identifier	debug		4067833	1					
ANR	4067871	CompoundStatement		5:22:136:136	4067833	1					
ANR	4067872	ExpressionStatement	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"	1337:2:37273:37315	4067833	0	True				
ANR	4067873	CallExpression	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"		4067833	0					
ANR	4067874	Callee	r_debug_attach		4067833	0					
ANR	4067875	Identifier	r_debug_attach		4067833	0					
ANR	4067876	ArgumentList	core -> dbg		4067833	1					
ANR	4067877	Argument	core -> dbg		4067833	0					
ANR	4067878	PtrMemberAccess	core -> dbg		4067833	0					
ANR	4067879	Identifier	core		4067833	0					
ANR	4067880	Identifier	dbg		4067833	1					
ANR	4067881	Argument	core -> dbg -> pid		4067833	1					
ANR	4067882	PtrMemberAccess	core -> dbg -> pid		4067833	0					
ANR	4067883	PtrMemberAccess	core -> dbg		4067833	0					
ANR	4067884	Identifier	core		4067833	0					
ANR	4067885	Identifier	dbg		4067833	1					
ANR	4067886	Identifier	pid		4067833	1					
ANR	4067887	ReturnStatement	return true ;	1339:1:37321:37332	4067833	4	True				
ANR	4067888	Identifier	true		4067833	0					
ANR	4067889	ReturnType	static bool		4067833	1					
ANR	4067890	Identifier	cb_dbg_clone		4067833	2					
ANR	4067891	ParameterList	"void * user , void * data"		4067833	3					
ANR	4067892	Parameter	void * user	1332:25:37108:37117	4067833	0	True				
ANR	4067893	ParameterType	void *		4067833	0					
ANR	4067894	Identifier	user		4067833	1					
ANR	4067895	Parameter	void * data	1332:37:37120:37129	4067833	1	True				
ANR	4067896	ParameterType	void *		4067833	0					
ANR	4067897	Identifier	data		4067833	1					
ANR	4067898	CFGEntryNode	ENTRY		4067833		True				
ANR	4067899	CFGExitNode	EXIT		4067833		True				
ANR	4067900	Symbol	data		4067833						
ANR	4067901	Symbol	* core		4067833						
ANR	4067902	Symbol	core -> dbg -> trace_clone		4067833						
ANR	4067903	Symbol	node -> i_value		4067833						
ANR	4067904	Symbol	core		4067833						
ANR	4067905	Symbol	node		4067833						
ANR	4067906	Symbol	* core -> io		4067833						
ANR	4067907	Symbol	core -> io		4067833						
ANR	4067908	Symbol	core -> io -> debug		4067833						
ANR	4067909	Symbol	true		4067833						
ANR	4067910	Symbol	* node		4067833						
ANR	4067911	Symbol	user		4067833						
ANR	4067912	Symbol	* core -> dbg		4067833						
ANR	4067913	Symbol	core -> dbg -> pid		4067833						
ANR	4067914	Symbol	* * core		4067833						
ANR	4067915	Symbol	core -> dbg		4067833						
ANR	4067916	Function	cb_dbg_follow_child	1342:0:37337:37523							
ANR	4067917	FunctionDef	"cb_dbg_follow_child (void * user , void * data)"		4067916	0					
ANR	4067918	CompoundStatement		1342:56:37393:37523	4067916	0					
ANR	4067919	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1343:1:37396:37423	4067916	0	True				
ANR	4067920	IdentifierDecl	* core = ( RCore * ) user		4067916	0					
ANR	4067921	IdentifierDeclType	RCore *		4067916	0					
ANR	4067922	Identifier	core		4067916	1					
ANR	4067923	AssignmentExpression	* core = ( RCore * ) user		4067916	2		=			
ANR	4067924	Identifier	core		4067916	0					
ANR	4067925	CastExpression	( RCore * ) user		4067916	1					
ANR	4067926	CastTarget	RCore *		4067916	0					
ANR	4067927	Identifier	user		4067916	1					
ANR	4067928	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1344:1:37426:37465	4067916	1	True				
ANR	4067929	IdentifierDecl	* node = ( RConfigNode * ) data		4067916	0					
ANR	4067930	IdentifierDeclType	RConfigNode *		4067916	0					
ANR	4067931	Identifier	node		4067916	1					
ANR	4067932	AssignmentExpression	* node = ( RConfigNode * ) data		4067916	2		=			
ANR	4067933	Identifier	node		4067916	0					
ANR	4067934	CastExpression	( RConfigNode * ) data		4067916	1					
ANR	4067935	CastTarget	RConfigNode *		4067916	0					
ANR	4067936	Identifier	data		4067916	1					
ANR	4067937	ExpressionStatement	core -> dbg -> follow_child = node -> i_value	1345:1:37468:37507	4067916	2	True				
ANR	4067938	AssignmentExpression	core -> dbg -> follow_child = node -> i_value		4067916	0		=			
ANR	4067939	PtrMemberAccess	core -> dbg -> follow_child		4067916	0					
ANR	4067940	PtrMemberAccess	core -> dbg		4067916	0					
ANR	4067941	Identifier	core		4067916	0					
ANR	4067942	Identifier	dbg		4067916	1					
ANR	4067943	Identifier	follow_child		4067916	1					
ANR	4067944	PtrMemberAccess	node -> i_value		4067916	1					
ANR	4067945	Identifier	node		4067916	0					
ANR	4067946	Identifier	i_value		4067916	1					
ANR	4067947	ReturnStatement	return true ;	1346:1:37510:37521	4067916	3	True				
ANR	4067948	Identifier	true		4067916	0					
ANR	4067949	ReturnType	static bool		4067916	1					
ANR	4067950	Identifier	cb_dbg_follow_child		4067916	2					
ANR	4067951	ParameterList	"void * user , void * data"		4067916	3					
ANR	4067952	Parameter	void * user	1342:32:37369:37378	4067916	0	True				
ANR	4067953	ParameterType	void *		4067916	0					
ANR	4067954	Identifier	user		4067916	1					
ANR	4067955	Parameter	void * data	1342:44:37381:37390	4067916	1	True				
ANR	4067956	ParameterType	void *		4067916	0					
ANR	4067957	Identifier	data		4067916	1					
ANR	4067958	CFGEntryNode	ENTRY		4067916		True				
ANR	4067959	CFGExitNode	EXIT		4067916		True				
ANR	4067960	Symbol	core		4067916						
ANR	4067961	Symbol	node		4067916						
ANR	4067962	Symbol	data		4067916						
ANR	4067963	Symbol	* core		4067916						
ANR	4067964	Symbol	true		4067916						
ANR	4067965	Symbol	* node		4067916						
ANR	4067966	Symbol	user		4067916						
ANR	4067967	Symbol	* core -> dbg		4067916						
ANR	4067968	Symbol	* * core		4067916						
ANR	4067969	Symbol	node -> i_value		4067916						
ANR	4067970	Symbol	core -> dbg -> follow_child		4067916						
ANR	4067971	Symbol	core -> dbg		4067916						
ANR	4067972	Function	cb_dbg_aftersc	1349:0:37526:37786							
ANR	4067973	FunctionDef	"cb_dbg_aftersc (void * user , void * data)"		4067972	0					
ANR	4067974	CompoundStatement		1349:51:37577:37786	4067972	0					
ANR	4067975	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1350:1:37580:37607	4067972	0	True				
ANR	4067976	IdentifierDecl	* core = ( RCore * ) user		4067972	0					
ANR	4067977	IdentifierDeclType	RCore *		4067972	0					
ANR	4067978	Identifier	core		4067972	1					
ANR	4067979	AssignmentExpression	* core = ( RCore * ) user		4067972	2		=			
ANR	4067980	Identifier	core		4067972	0					
ANR	4067981	CastExpression	( RCore * ) user		4067972	1					
ANR	4067982	CastTarget	RCore *		4067972	0					
ANR	4067983	Identifier	user		4067972	1					
ANR	4067984	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1351:1:37610:37649	4067972	1	True				
ANR	4067985	IdentifierDecl	* node = ( RConfigNode * ) data		4067972	0					
ANR	4067986	IdentifierDeclType	RConfigNode *		4067972	0					
ANR	4067987	Identifier	node		4067972	1					
ANR	4067988	AssignmentExpression	* node = ( RConfigNode * ) data		4067972	2		=			
ANR	4067989	Identifier	node		4067972	0					
ANR	4067990	CastExpression	( RConfigNode * ) data		4067972	1					
ANR	4067991	CastTarget	RConfigNode *		4067972	0					
ANR	4067992	Identifier	data		4067972	1					
ANR	4067993	ExpressionStatement	core -> dbg -> trace_aftersyscall = node -> i_value	1352:1:37652:37697	4067972	2	True				
ANR	4067994	AssignmentExpression	core -> dbg -> trace_aftersyscall = node -> i_value		4067972	0		=			
ANR	4067995	PtrMemberAccess	core -> dbg -> trace_aftersyscall		4067972	0					
ANR	4067996	PtrMemberAccess	core -> dbg		4067972	0					
ANR	4067997	Identifier	core		4067972	0					
ANR	4067998	Identifier	dbg		4067972	1					
ANR	4067999	Identifier	trace_aftersyscall		4067972	1					
ANR	4068000	PtrMemberAccess	node -> i_value		4067972	1					
ANR	4068001	Identifier	node		4067972	0					
ANR	4068002	Identifier	i_value		4067972	1					
ANR	4068003	IfStatement	if ( core -> io -> debug )		4067972	3					
ANR	4068004	Condition	core -> io -> debug	1353:5:37704:37718	4067972	0	True				
ANR	4068005	PtrMemberAccess	core -> io -> debug		4067972	0					
ANR	4068006	PtrMemberAccess	core -> io		4067972	0					
ANR	4068007	Identifier	core		4067972	0					
ANR	4068008	Identifier	io		4067972	1					
ANR	4068009	Identifier	debug		4067972	1					
ANR	4068010	CompoundStatement		5:22:143:143	4067972	1					
ANR	4068011	ExpressionStatement	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"	1354:2:37725:37767	4067972	0	True				
ANR	4068012	CallExpression	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"		4067972	0					
ANR	4068013	Callee	r_debug_attach		4067972	0					
ANR	4068014	Identifier	r_debug_attach		4067972	0					
ANR	4068015	ArgumentList	core -> dbg		4067972	1					
ANR	4068016	Argument	core -> dbg		4067972	0					
ANR	4068017	PtrMemberAccess	core -> dbg		4067972	0					
ANR	4068018	Identifier	core		4067972	0					
ANR	4068019	Identifier	dbg		4067972	1					
ANR	4068020	Argument	core -> dbg -> pid		4067972	1					
ANR	4068021	PtrMemberAccess	core -> dbg -> pid		4067972	0					
ANR	4068022	PtrMemberAccess	core -> dbg		4067972	0					
ANR	4068023	Identifier	core		4067972	0					
ANR	4068024	Identifier	dbg		4067972	1					
ANR	4068025	Identifier	pid		4067972	1					
ANR	4068026	ReturnStatement	return true ;	1356:1:37773:37784	4067972	4	True				
ANR	4068027	Identifier	true		4067972	0					
ANR	4068028	ReturnType	static bool		4067972	1					
ANR	4068029	Identifier	cb_dbg_aftersc		4067972	2					
ANR	4068030	ParameterList	"void * user , void * data"		4067972	3					
ANR	4068031	Parameter	void * user	1349:27:37553:37562	4067972	0	True				
ANR	4068032	ParameterType	void *		4067972	0					
ANR	4068033	Identifier	user		4067972	1					
ANR	4068034	Parameter	void * data	1349:39:37565:37574	4067972	1	True				
ANR	4068035	ParameterType	void *		4067972	0					
ANR	4068036	Identifier	data		4067972	1					
ANR	4068037	CFGEntryNode	ENTRY		4067972		True				
ANR	4068038	CFGExitNode	EXIT		4067972		True				
ANR	4068039	Symbol	core -> dbg -> trace_aftersyscall		4067972						
ANR	4068040	Symbol	data		4067972						
ANR	4068041	Symbol	* core		4067972						
ANR	4068042	Symbol	node -> i_value		4067972						
ANR	4068043	Symbol	core		4067972						
ANR	4068044	Symbol	node		4067972						
ANR	4068045	Symbol	* core -> io		4067972						
ANR	4068046	Symbol	core -> io		4067972						
ANR	4068047	Symbol	core -> io -> debug		4067972						
ANR	4068048	Symbol	true		4067972						
ANR	4068049	Symbol	* node		4067972						
ANR	4068050	Symbol	user		4067972						
ANR	4068051	Symbol	* core -> dbg		4067972						
ANR	4068052	Symbol	core -> dbg -> pid		4067972						
ANR	4068053	Symbol	* * core		4067972						
ANR	4068054	Symbol	core -> dbg		4067972						
ANR	4068055	Function	cb_runprofile	1359:0:37789:38076							
ANR	4068056	FunctionDef	"cb_runprofile (void * user , void * data)"		4068055	0					
ANR	4068057	CompoundStatement		1359:50:37839:38076	4068055	0					
ANR	4068058	IdentifierDeclStatement	RCore * r = ( RCore * ) user ;	1360:1:37842:37866	4068055	0	True				
ANR	4068059	IdentifierDecl	* r = ( RCore * ) user		4068055	0					
ANR	4068060	IdentifierDeclType	RCore *		4068055	0					
ANR	4068061	Identifier	r		4068055	1					
ANR	4068062	AssignmentExpression	* r = ( RCore * ) user		4068055	2		=			
ANR	4068063	Identifier	r		4068055	0					
ANR	4068064	CastExpression	( RCore * ) user		4068055	1					
ANR	4068065	CastTarget	RCore *		4068055	0					
ANR	4068066	Identifier	user		4068055	1					
ANR	4068067	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1361:1:37869:37908	4068055	1	True				
ANR	4068068	IdentifierDecl	* node = ( RConfigNode * ) data		4068055	0					
ANR	4068069	IdentifierDeclType	RConfigNode *		4068055	0					
ANR	4068070	Identifier	node		4068055	1					
ANR	4068071	AssignmentExpression	* node = ( RConfigNode * ) data		4068055	2		=			
ANR	4068072	Identifier	node		4068055	0					
ANR	4068073	CastExpression	( RConfigNode * ) data		4068055	1					
ANR	4068074	CastTarget	RConfigNode *		4068055	0					
ANR	4068075	Identifier	data		4068055	1					
ANR	4068076	ExpressionStatement	free ( ( void * ) r -> io -> runprofile )	1362:1:37911:37942	4068055	2	True				
ANR	4068077	CallExpression	free ( ( void * ) r -> io -> runprofile )		4068055	0					
ANR	4068078	Callee	free		4068055	0					
ANR	4068079	Identifier	free		4068055	0					
ANR	4068080	ArgumentList	( void * ) r -> io -> runprofile		4068055	1					
ANR	4068081	Argument	( void * ) r -> io -> runprofile		4068055	0					
ANR	4068082	CastExpression	( void * ) r -> io -> runprofile		4068055	0					
ANR	4068083	CastTarget	void *		4068055	0					
ANR	4068084	PtrMemberAccess	r -> io -> runprofile		4068055	1					
ANR	4068085	PtrMemberAccess	r -> io		4068055	0					
ANR	4068086	Identifier	r		4068055	0					
ANR	4068087	Identifier	io		4068055	1					
ANR	4068088	Identifier	runprofile		4068055	1					
ANR	4068089	IfStatement	if ( ! node || ! * ( node -> value ) )		4068055	3					
ANR	4068090	Condition	! node || ! * ( node -> value )	1363:5:37949:37972	4068055	0	True				
ANR	4068091	OrExpression	! node || ! * ( node -> value )		4068055	0		||			
ANR	4068092	UnaryOperationExpression	! node		4068055	0					
ANR	4068093	UnaryOperator	!		4068055	0					
ANR	4068094	Identifier	node		4068055	1					
ANR	4068095	UnaryOperationExpression	! * ( node -> value )		4068055	1					
ANR	4068096	UnaryOperator	!		4068055	0					
ANR	4068097	UnaryOperationExpression	* ( node -> value )		4068055	1					
ANR	4068098	UnaryOperator	*		4068055	0					
ANR	4068099	PtrMemberAccess	node -> value		4068055	1					
ANR	4068100	Identifier	node		4068055	0					
ANR	4068101	Identifier	value		4068055	1					
ANR	4068102	CompoundStatement		5:31:135:135	4068055	1					
ANR	4068103	ExpressionStatement	r -> io -> runprofile = NULL	1364:2:37979:38003	4068055	0	True				
ANR	4068104	AssignmentExpression	r -> io -> runprofile = NULL		4068055	0		=			
ANR	4068105	PtrMemberAccess	r -> io -> runprofile		4068055	0					
ANR	4068106	PtrMemberAccess	r -> io		4068055	0					
ANR	4068107	Identifier	r		4068055	0					
ANR	4068108	Identifier	io		4068055	1					
ANR	4068109	Identifier	runprofile		4068055	1					
ANR	4068110	Identifier	NULL		4068055	1					
ANR	4068111	ElseStatement	else		4068055	0					
ANR	4068112	CompoundStatement		7:8:173:173	4068055	0					
ANR	4068113	ExpressionStatement	r -> io -> runprofile = strdup ( node -> value )	1366:2:38017:38057	4068055	0	True				
ANR	4068114	AssignmentExpression	r -> io -> runprofile = strdup ( node -> value )		4068055	0		=			
ANR	4068115	PtrMemberAccess	r -> io -> runprofile		4068055	0					
ANR	4068116	PtrMemberAccess	r -> io		4068055	0					
ANR	4068117	Identifier	r		4068055	0					
ANR	4068118	Identifier	io		4068055	1					
ANR	4068119	Identifier	runprofile		4068055	1					
ANR	4068120	CallExpression	strdup ( node -> value )		4068055	1					
ANR	4068121	Callee	strdup		4068055	0					
ANR	4068122	Identifier	strdup		4068055	0					
ANR	4068123	ArgumentList	node -> value		4068055	1					
ANR	4068124	Argument	node -> value		4068055	0					
ANR	4068125	PtrMemberAccess	node -> value		4068055	0					
ANR	4068126	Identifier	node		4068055	0					
ANR	4068127	Identifier	value		4068055	1					
ANR	4068128	ReturnStatement	return true ;	1368:1:38063:38074	4068055	4	True				
ANR	4068129	Identifier	true		4068055	0					
ANR	4068130	ReturnType	static bool		4068055	1					
ANR	4068131	Identifier	cb_runprofile		4068055	2					
ANR	4068132	ParameterList	"void * user , void * data"		4068055	3					
ANR	4068133	Parameter	void * user	1359:26:37815:37824	4068055	0	True				
ANR	4068134	ParameterType	void *		4068055	0					
ANR	4068135	Identifier	user		4068055	1					
ANR	4068136	Parameter	void * data	1359:38:37827:37836	4068055	1	True				
ANR	4068137	ParameterType	void *		4068055	0					
ANR	4068138	Identifier	data		4068055	1					
ANR	4068139	CFGEntryNode	ENTRY		4068055		True				
ANR	4068140	CFGExitNode	EXIT		4068055		True				
ANR	4068141	Symbol	* node -> value		4068055						
ANR	4068142	Symbol	NULL		4068055						
ANR	4068143	Symbol	data		4068055						
ANR	4068144	Symbol	* ( node -> value )		4068055						
ANR	4068145	Symbol	* r -> io		4068055						
ANR	4068146	Symbol	r -> io -> runprofile		4068055						
ANR	4068147	Symbol	node -> value		4068055						
ANR	4068148	Symbol	node		4068055						
ANR	4068149	Symbol	r		4068055						
ANR	4068150	Symbol	* * node		4068055						
ANR	4068151	Symbol	true		4068055						
ANR	4068152	Symbol	* * r		4068055						
ANR	4068153	Symbol	* node		4068055						
ANR	4068154	Symbol	strdup		4068055						
ANR	4068155	Symbol	* r		4068055						
ANR	4068156	Symbol	user		4068055						
ANR	4068157	Symbol	r -> io		4068055						
ANR	4068158	Function	cb_dbg_args	1371:0:38079:38327							
ANR	4068159	FunctionDef	"cb_dbg_args (void * user , void * data)"		4068158	0					
ANR	4068160	CompoundStatement		1371:48:38127:38327	4068158	0					
ANR	4068161	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1372:1:38130:38157	4068158	0	True				
ANR	4068162	IdentifierDecl	* core = ( RCore * ) user		4068158	0					
ANR	4068163	IdentifierDeclType	RCore *		4068158	0					
ANR	4068164	Identifier	core		4068158	1					
ANR	4068165	AssignmentExpression	* core = ( RCore * ) user		4068158	2		=			
ANR	4068166	Identifier	core		4068158	0					
ANR	4068167	CastExpression	( RCore * ) user		4068158	1					
ANR	4068168	CastTarget	RCore *		4068158	0					
ANR	4068169	Identifier	user		4068158	1					
ANR	4068170	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1373:1:38160:38199	4068158	1	True				
ANR	4068171	IdentifierDecl	* node = ( RConfigNode * ) data		4068158	0					
ANR	4068172	IdentifierDeclType	RConfigNode *		4068158	0					
ANR	4068173	Identifier	node		4068158	1					
ANR	4068174	AssignmentExpression	* node = ( RConfigNode * ) data		4068158	2		=			
ANR	4068175	Identifier	node		4068158	0					
ANR	4068176	CastExpression	( RConfigNode * ) data		4068158	1					
ANR	4068177	CastTarget	RConfigNode *		4068158	0					
ANR	4068178	Identifier	data		4068158	1					
ANR	4068179	IfStatement	if ( ! node || ! * ( node -> value ) )		4068158	2					
ANR	4068180	Condition	! node || ! * ( node -> value )	1374:5:38206:38229	4068158	0	True				
ANR	4068181	OrExpression	! node || ! * ( node -> value )		4068158	0		||			
ANR	4068182	UnaryOperationExpression	! node		4068158	0					
ANR	4068183	UnaryOperator	!		4068158	0					
ANR	4068184	Identifier	node		4068158	1					
ANR	4068185	UnaryOperationExpression	! * ( node -> value )		4068158	1					
ANR	4068186	UnaryOperator	!		4068158	0					
ANR	4068187	UnaryOperationExpression	* ( node -> value )		4068158	1					
ANR	4068188	UnaryOperator	*		4068158	0					
ANR	4068189	PtrMemberAccess	node -> value		4068158	1					
ANR	4068190	Identifier	node		4068158	0					
ANR	4068191	Identifier	value		4068158	1					
ANR	4068192	CompoundStatement		4:31:104:104	4068158	1					
ANR	4068193	ExpressionStatement	core -> io -> args = NULL	1375:2:38236:38257	4068158	0	True				
ANR	4068194	AssignmentExpression	core -> io -> args = NULL		4068158	0		=			
ANR	4068195	PtrMemberAccess	core -> io -> args		4068158	0					
ANR	4068196	PtrMemberAccess	core -> io		4068158	0					
ANR	4068197	Identifier	core		4068158	0					
ANR	4068198	Identifier	io		4068158	1					
ANR	4068199	Identifier	args		4068158	1					
ANR	4068200	Identifier	NULL		4068158	1					
ANR	4068201	ElseStatement	else		4068158	0					
ANR	4068202	CompoundStatement		6:8:139:139	4068158	0					
ANR	4068203	ExpressionStatement	core -> io -> args = strdup ( node -> value )	1377:2:38271:38308	4068158	0	True				
ANR	4068204	AssignmentExpression	core -> io -> args = strdup ( node -> value )		4068158	0		=			
ANR	4068205	PtrMemberAccess	core -> io -> args		4068158	0					
ANR	4068206	PtrMemberAccess	core -> io		4068158	0					
ANR	4068207	Identifier	core		4068158	0					
ANR	4068208	Identifier	io		4068158	1					
ANR	4068209	Identifier	args		4068158	1					
ANR	4068210	CallExpression	strdup ( node -> value )		4068158	1					
ANR	4068211	Callee	strdup		4068158	0					
ANR	4068212	Identifier	strdup		4068158	0					
ANR	4068213	ArgumentList	node -> value		4068158	1					
ANR	4068214	Argument	node -> value		4068158	0					
ANR	4068215	PtrMemberAccess	node -> value		4068158	0					
ANR	4068216	Identifier	node		4068158	0					
ANR	4068217	Identifier	value		4068158	1					
ANR	4068218	ReturnStatement	return true ;	1379:1:38314:38325	4068158	3	True				
ANR	4068219	Identifier	true		4068158	0					
ANR	4068220	ReturnType	static bool		4068158	1					
ANR	4068221	Identifier	cb_dbg_args		4068158	2					
ANR	4068222	ParameterList	"void * user , void * data"		4068158	3					
ANR	4068223	Parameter	void * user	1371:24:38103:38112	4068158	0	True				
ANR	4068224	ParameterType	void *		4068158	0					
ANR	4068225	Identifier	user		4068158	1					
ANR	4068226	Parameter	void * data	1371:36:38115:38124	4068158	1	True				
ANR	4068227	ParameterType	void *		4068158	0					
ANR	4068228	Identifier	data		4068158	1					
ANR	4068229	CFGEntryNode	ENTRY		4068158		True				
ANR	4068230	CFGExitNode	EXIT		4068158		True				
ANR	4068231	Symbol	* node -> value		4068158						
ANR	4068232	Symbol	NULL		4068158						
ANR	4068233	Symbol	data		4068158						
ANR	4068234	Symbol	* ( node -> value )		4068158						
ANR	4068235	Symbol	* core		4068158						
ANR	4068236	Symbol	node -> value		4068158						
ANR	4068237	Symbol	core		4068158						
ANR	4068238	Symbol	node		4068158						
ANR	4068239	Symbol	* core -> io		4068158						
ANR	4068240	Symbol	* * node		4068158						
ANR	4068241	Symbol	core -> io		4068158						
ANR	4068242	Symbol	true		4068158						
ANR	4068243	Symbol	* node		4068158						
ANR	4068244	Symbol	core -> io -> args		4068158						
ANR	4068245	Symbol	strdup		4068158						
ANR	4068246	Symbol	user		4068158						
ANR	4068247	Symbol	* * core		4068158						
ANR	4068248	Function	cb_dbgstatus	1382:0:38330:38679							
ANR	4068249	FunctionDef	"cb_dbgstatus (void * user , void * data)"		4068248	0					
ANR	4068250	CompoundStatement		1382:49:38379:38679	4068248	0					
ANR	4068251	IdentifierDeclStatement	RCore * r = ( RCore * ) user ;	1383:1:38382:38406	4068248	0	True				
ANR	4068252	IdentifierDecl	* r = ( RCore * ) user		4068248	0					
ANR	4068253	IdentifierDeclType	RCore *		4068248	0					
ANR	4068254	Identifier	r		4068248	1					
ANR	4068255	AssignmentExpression	* r = ( RCore * ) user		4068248	2		=			
ANR	4068256	Identifier	r		4068248	0					
ANR	4068257	CastExpression	( RCore * ) user		4068248	1					
ANR	4068258	CastTarget	RCore *		4068248	0					
ANR	4068259	Identifier	user		4068248	1					
ANR	4068260	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1384:1:38409:38448	4068248	1	True				
ANR	4068261	IdentifierDecl	* node = ( RConfigNode * ) data		4068248	0					
ANR	4068262	IdentifierDeclType	RConfigNode *		4068248	0					
ANR	4068263	Identifier	node		4068248	1					
ANR	4068264	AssignmentExpression	* node = ( RConfigNode * ) data		4068248	2		=			
ANR	4068265	Identifier	node		4068248	0					
ANR	4068266	CastExpression	( RConfigNode * ) data		4068248	1					
ANR	4068267	CastTarget	RConfigNode *		4068248	0					
ANR	4068268	Identifier	data		4068248	1					
ANR	4068269	IfStatement	"if ( r_config_get_i ( r -> config , ""cfg.debug"" ) )"		4068248	2					
ANR	4068270	Condition	"r_config_get_i ( r -> config , ""cfg.debug"" )"	1385:5:38455:38493	4068248	0	True				
ANR	4068271	CallExpression	"r_config_get_i ( r -> config , ""cfg.debug"" )"		4068248	0					
ANR	4068272	Callee	r_config_get_i		4068248	0					
ANR	4068273	Identifier	r_config_get_i		4068248	0					
ANR	4068274	ArgumentList	r -> config		4068248	1					
ANR	4068275	Argument	r -> config		4068248	0					
ANR	4068276	PtrMemberAccess	r -> config		4068248	0					
ANR	4068277	Identifier	r		4068248	0					
ANR	4068278	Identifier	config		4068248	1					
ANR	4068279	Argument	"""cfg.debug"""		4068248	1					
ANR	4068280	PrimaryExpression	"""cfg.debug"""		4068248	0					
ANR	4068281	CompoundStatement		4:46:116:116	4068248	1					
ANR	4068282	IfStatement	if ( node -> i_value )		4068248	0					
ANR	4068283	Condition	node -> i_value	1386:6:38504:38516	4068248	0	True				
ANR	4068284	PtrMemberAccess	node -> i_value		4068248	0					
ANR	4068285	Identifier	node		4068248	0					
ANR	4068286	Identifier	i_value		4068248	1					
ANR	4068287	CompoundStatement		5:21:139:139	4068248	1					
ANR	4068288	ExpressionStatement	"r_config_set ( r -> config , ""cmd.prompt"" , "".dr*; drd; sr PC;pi 1;s-"" )"	1387:3:38524:38594	4068248	0	True				
ANR	4068289	CallExpression	"r_config_set ( r -> config , ""cmd.prompt"" , "".dr*; drd; sr PC;pi 1;s-"" )"		4068248	0					
ANR	4068290	Callee	r_config_set		4068248	0					
ANR	4068291	Identifier	r_config_set		4068248	0					
ANR	4068292	ArgumentList	r -> config		4068248	1					
ANR	4068293	Argument	r -> config		4068248	0					
ANR	4068294	PtrMemberAccess	r -> config		4068248	0					
ANR	4068295	Identifier	r		4068248	0					
ANR	4068296	Identifier	config		4068248	1					
ANR	4068297	Argument	"""cmd.prompt"""		4068248	1					
ANR	4068298	PrimaryExpression	"""cmd.prompt"""		4068248	0					
ANR	4068299	Argument	""".dr*; drd; sr PC;pi 1;s-"""		4068248	2					
ANR	4068300	PrimaryExpression	""".dr*; drd; sr PC;pi 1;s-"""		4068248	0					
ANR	4068301	ElseStatement	else		4068248	0					
ANR	4068302	CompoundStatement		8:9:225:225	4068248	0					
ANR	4068303	ExpressionStatement	"r_config_set ( r -> config , ""cmd.prompt"" , "".dr*"" )"	1390:3:38610:38656	4068248	0	True				
ANR	4068304	CallExpression	"r_config_set ( r -> config , ""cmd.prompt"" , "".dr*"" )"		4068248	0					
ANR	4068305	Callee	r_config_set		4068248	0					
ANR	4068306	Identifier	r_config_set		4068248	0					
ANR	4068307	ArgumentList	r -> config		4068248	1					
ANR	4068308	Argument	r -> config		4068248	0					
ANR	4068309	PtrMemberAccess	r -> config		4068248	0					
ANR	4068310	Identifier	r		4068248	0					
ANR	4068311	Identifier	config		4068248	1					
ANR	4068312	Argument	"""cmd.prompt"""		4068248	1					
ANR	4068313	PrimaryExpression	"""cmd.prompt"""		4068248	0					
ANR	4068314	Argument	""".dr*"""		4068248	2					
ANR	4068315	PrimaryExpression	""".dr*"""		4068248	0					
ANR	4068316	ReturnStatement	return true ;	1393:1:38666:38677	4068248	3	True				
ANR	4068317	Identifier	true		4068248	0					
ANR	4068318	ReturnType	static bool		4068248	1					
ANR	4068319	Identifier	cb_dbgstatus		4068248	2					
ANR	4068320	ParameterList	"void * user , void * data"		4068248	3					
ANR	4068321	Parameter	void * user	1382:25:38355:38364	4068248	0	True				
ANR	4068322	ParameterType	void *		4068248	0					
ANR	4068323	Identifier	user		4068248	1					
ANR	4068324	Parameter	void * data	1382:37:38367:38376	4068248	1	True				
ANR	4068325	ParameterType	void *		4068248	0					
ANR	4068326	Identifier	data		4068248	1					
ANR	4068327	CFGEntryNode	ENTRY		4068248		True				
ANR	4068328	CFGExitNode	EXIT		4068248		True				
ANR	4068329	Symbol	node		4068248						
ANR	4068330	Symbol	r		4068248						
ANR	4068331	Symbol	data		4068248						
ANR	4068332	Symbol	r_config_get_i		4068248						
ANR	4068333	Symbol	true		4068248						
ANR	4068334	Symbol	* node		4068248						
ANR	4068335	Symbol	* r		4068248						
ANR	4068336	Symbol	user		4068248						
ANR	4068337	Symbol	r -> config		4068248						
ANR	4068338	Symbol	node -> i_value		4068248						
ANR	4068339	Function	cb_dbgbackend	1396:0:38682:39051							
ANR	4068340	FunctionDef	"cb_dbgbackend (void * user , void * data)"		4068339	0					
ANR	4068341	CompoundStatement		1396:50:38732:39051	4068339	0					
ANR	4068342	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1397:1:38735:38762	4068339	0	True				
ANR	4068343	IdentifierDecl	* core = ( RCore * ) user		4068339	0					
ANR	4068344	IdentifierDeclType	RCore *		4068339	0					
ANR	4068345	Identifier	core		4068339	1					
ANR	4068346	AssignmentExpression	* core = ( RCore * ) user		4068339	2		=			
ANR	4068347	Identifier	core		4068339	0					
ANR	4068348	CastExpression	( RCore * ) user		4068339	1					
ANR	4068349	CastTarget	RCore *		4068339	0					
ANR	4068350	Identifier	user		4068339	1					
ANR	4068351	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1398:1:38765:38804	4068339	1	True				
ANR	4068352	IdentifierDecl	* node = ( RConfigNode * ) data		4068339	0					
ANR	4068353	IdentifierDeclType	RConfigNode *		4068339	0					
ANR	4068354	Identifier	node		4068339	1					
ANR	4068355	AssignmentExpression	* node = ( RConfigNode * ) data		4068339	2		=			
ANR	4068356	Identifier	node		4068339	0					
ANR	4068357	CastExpression	( RConfigNode * ) data		4068339	1					
ANR	4068358	CastTarget	RConfigNode *		4068339	0					
ANR	4068359	Identifier	data		4068339	1					
ANR	4068360	IfStatement	"if ( ! strcmp ( node -> value , ""?"" ) )"		4068339	2					
ANR	4068361	Condition	"! strcmp ( node -> value , ""?"" )"	1399:5:38811:38836	4068339	0	True				
ANR	4068362	UnaryOperationExpression	"! strcmp ( node -> value , ""?"" )"		4068339	0					
ANR	4068363	UnaryOperator	!		4068339	0					
ANR	4068364	CallExpression	"strcmp ( node -> value , ""?"" )"		4068339	1					
ANR	4068365	Callee	strcmp		4068339	0					
ANR	4068366	Identifier	strcmp		4068339	0					
ANR	4068367	ArgumentList	node -> value		4068339	1					
ANR	4068368	Argument	node -> value		4068339	0					
ANR	4068369	PtrMemberAccess	node -> value		4068339	0					
ANR	4068370	Identifier	node		4068339	0					
ANR	4068371	Identifier	value		4068339	1					
ANR	4068372	Argument	"""?"""		4068339	1					
ANR	4068373	PrimaryExpression	"""?"""		4068339	0					
ANR	4068374	CompoundStatement		4:33:106:106	4068339	1					
ANR	4068375	ExpressionStatement	"r_debug_plugin_list ( core -> dbg , 'q' )"	1400:2:38843:38879	4068339	0	True				
ANR	4068376	CallExpression	"r_debug_plugin_list ( core -> dbg , 'q' )"		4068339	0					
ANR	4068377	Callee	r_debug_plugin_list		4068339	0					
ANR	4068378	Identifier	r_debug_plugin_list		4068339	0					
ANR	4068379	ArgumentList	core -> dbg		4068339	1					
ANR	4068380	Argument	core -> dbg		4068339	0					
ANR	4068381	PtrMemberAccess	core -> dbg		4068339	0					
ANR	4068382	Identifier	core		4068339	0					
ANR	4068383	Identifier	dbg		4068339	1					
ANR	4068384	Argument	'q'		4068339	1					
ANR	4068385	PrimaryExpression	'q'		4068339	0					
ANR	4068386	ReturnStatement	return false ;	1401:2:38883:38895	4068339	1	True				
ANR	4068387	Identifier	false		4068339	0					
ANR	4068388	IfStatement	"if ( ! strcmp ( node -> value , ""bf"" ) )"		4068339	3					
ANR	4068389	Condition	"! strcmp ( node -> value , ""bf"" )"	1403:5:38905:38931	4068339	0	True				
ANR	4068390	UnaryOperationExpression	"! strcmp ( node -> value , ""bf"" )"		4068339	0					
ANR	4068391	UnaryOperator	!		4068339	0					
ANR	4068392	CallExpression	"strcmp ( node -> value , ""bf"" )"		4068339	1					
ANR	4068393	Callee	strcmp		4068339	0					
ANR	4068394	Identifier	strcmp		4068339	0					
ANR	4068395	ArgumentList	node -> value		4068339	1					
ANR	4068396	Argument	node -> value		4068339	0					
ANR	4068397	PtrMemberAccess	node -> value		4068339	0					
ANR	4068398	Identifier	node		4068339	0					
ANR	4068399	Identifier	value		4068339	1					
ANR	4068400	Argument	"""bf"""		4068339	1					
ANR	4068401	PrimaryExpression	"""bf"""		4068339	0					
ANR	4068402	CompoundStatement		8:34:201:201	4068339	1					
ANR	4068403	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , ""bf"" )"	1405:2:38948:38993	4068339	0	True				
ANR	4068404	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , ""bf"" )"		4068339	0					
ANR	4068405	Callee	r_config_set		4068339	0					
ANR	4068406	Identifier	r_config_set		4068339	0					
ANR	4068407	ArgumentList	core -> config		4068339	1					
ANR	4068408	Argument	core -> config		4068339	0					
ANR	4068409	PtrMemberAccess	core -> config		4068339	0					
ANR	4068410	Identifier	core		4068339	0					
ANR	4068411	Identifier	config		4068339	1					
ANR	4068412	Argument	"""asm.arch"""		4068339	1					
ANR	4068413	PrimaryExpression	"""asm.arch"""		4068339	0					
ANR	4068414	Argument	"""bf"""		4068339	2					
ANR	4068415	PrimaryExpression	"""bf"""		4068339	0					
ANR	4068416	ExpressionStatement	"r_debug_use ( core -> dbg , node -> value )"	1407:1:38999:39035	4068339	4	True				
ANR	4068417	CallExpression	"r_debug_use ( core -> dbg , node -> value )"		4068339	0					
ANR	4068418	Callee	r_debug_use		4068339	0					
ANR	4068419	Identifier	r_debug_use		4068339	0					
ANR	4068420	ArgumentList	core -> dbg		4068339	1					
ANR	4068421	Argument	core -> dbg		4068339	0					
ANR	4068422	PtrMemberAccess	core -> dbg		4068339	0					
ANR	4068423	Identifier	core		4068339	0					
ANR	4068424	Identifier	dbg		4068339	1					
ANR	4068425	Argument	node -> value		4068339	1					
ANR	4068426	PtrMemberAccess	node -> value		4068339	0					
ANR	4068427	Identifier	node		4068339	0					
ANR	4068428	Identifier	value		4068339	1					
ANR	4068429	ReturnStatement	return true ;	1408:1:39038:39049	4068339	5	True				
ANR	4068430	Identifier	true		4068339	0					
ANR	4068431	ReturnType	static bool		4068339	1					
ANR	4068432	Identifier	cb_dbgbackend		4068339	2					
ANR	4068433	ParameterList	"void * user , void * data"		4068339	3					
ANR	4068434	Parameter	void * user	1396:26:38708:38717	4068339	0	True				
ANR	4068435	ParameterType	void *		4068339	0					
ANR	4068436	Identifier	user		4068339	1					
ANR	4068437	Parameter	void * data	1396:38:38720:38729	4068339	1	True				
ANR	4068438	ParameterType	void *		4068339	0					
ANR	4068439	Identifier	data		4068339	1					
ANR	4068440	CFGEntryNode	ENTRY		4068339		True				
ANR	4068441	CFGExitNode	EXIT		4068339		True				
ANR	4068442	Symbol	strcmp		4068339						
ANR	4068443	Symbol	core -> config		4068339						
ANR	4068444	Symbol	core		4068339						
ANR	4068445	Symbol	node		4068339						
ANR	4068446	Symbol	data		4068339						
ANR	4068447	Symbol	* core		4068339						
ANR	4068448	Symbol	false		4068339						
ANR	4068449	Symbol	true		4068339						
ANR	4068450	Symbol	* node		4068339						
ANR	4068451	Symbol	user		4068339						
ANR	4068452	Symbol	node -> value		4068339						
ANR	4068453	Symbol	core -> dbg		4068339						
ANR	4068454	Function	cb_gotolimit	1411:0:39054:39356							
ANR	4068455	FunctionDef	"cb_gotolimit (void * user , void * data)"		4068454	0					
ANR	4068456	CompoundStatement		1411:49:39103:39356	4068454	0					
ANR	4068457	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1412:1:39106:39134	4068454	0	True				
ANR	4068458	IdentifierDecl	* core = ( RCore * ) user		4068454	0					
ANR	4068459	IdentifierDeclType	RCore *		4068454	0					
ANR	4068460	Identifier	core		4068454	1					
ANR	4068461	AssignmentExpression	* core = ( RCore * ) user		4068454	2		=			
ANR	4068462	Identifier	core		4068454	0					
ANR	4068463	CastExpression	( RCore * ) user		4068454	1					
ANR	4068464	CastTarget	RCore *		4068454	0					
ANR	4068465	Identifier	user		4068454	1					
ANR	4068466	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1413:1:39137:39176	4068454	1	True				
ANR	4068467	IdentifierDecl	* node = ( RConfigNode * ) data		4068454	0					
ANR	4068468	IdentifierDeclType	RConfigNode *		4068454	0					
ANR	4068469	Identifier	node		4068454	1					
ANR	4068470	AssignmentExpression	* node = ( RConfigNode * ) data		4068454	2		=			
ANR	4068471	Identifier	node		4068454	0					
ANR	4068472	CastExpression	( RConfigNode * ) data		4068454	1					
ANR	4068473	CastTarget	RConfigNode *		4068454	0					
ANR	4068474	Identifier	data		4068454	1					
ANR	4068475	IfStatement	if ( r_sandbox_enable ( 0 ) )		4068454	2					
ANR	4068476	Condition	r_sandbox_enable ( 0 )	1414:5:39183:39202	4068454	0	True				
ANR	4068477	CallExpression	r_sandbox_enable ( 0 )		4068454	0					
ANR	4068478	Callee	r_sandbox_enable		4068454	0					
ANR	4068479	Identifier	r_sandbox_enable		4068454	0					
ANR	4068480	ArgumentList	0		4068454	1					
ANR	4068481	Argument	0		4068454	0					
ANR	4068482	PrimaryExpression	0		4068454	0					
ANR	4068483	CompoundStatement		4:27:101:101	4068454	1					
ANR	4068484	ExpressionStatement	"eprintf ( ""Cannot change gotolimit\\n"" )"	1415:2:39209:39246	4068454	0	True				
ANR	4068485	CallExpression	"eprintf ( ""Cannot change gotolimit\\n"" )"		4068454	0					
ANR	4068486	Callee	eprintf		4068454	0					
ANR	4068487	Identifier	eprintf		4068454	0					
ANR	4068488	ArgumentList	"""Cannot change gotolimit\\n"""		4068454	1					
ANR	4068489	Argument	"""Cannot change gotolimit\\n"""		4068454	0					
ANR	4068490	PrimaryExpression	"""Cannot change gotolimit\\n"""		4068454	0					
ANR	4068491	ReturnStatement	return false ;	1416:2:39250:39262	4068454	1	True				
ANR	4068492	Identifier	false		4068454	0					
ANR	4068493	IfStatement	if ( core -> anal -> esil )		4068454	3					
ANR	4068494	Condition	core -> anal -> esil	1418:5:39272:39287	4068454	0	True				
ANR	4068495	PtrMemberAccess	core -> anal -> esil		4068454	0					
ANR	4068496	PtrMemberAccess	core -> anal		4068454	0					
ANR	4068497	Identifier	core		4068454	0					
ANR	4068498	Identifier	anal		4068454	1					
ANR	4068499	Identifier	esil		4068454	1					
ANR	4068500	CompoundStatement		8:23:186:186	4068454	1					
ANR	4068501	ExpressionStatement	core -> anal -> esil_goto_limit = node -> i_value	1419:2:39294:39337	4068454	0	True				
ANR	4068502	AssignmentExpression	core -> anal -> esil_goto_limit = node -> i_value		4068454	0		=			
ANR	4068503	PtrMemberAccess	core -> anal -> esil_goto_limit		4068454	0					
ANR	4068504	PtrMemberAccess	core -> anal		4068454	0					
ANR	4068505	Identifier	core		4068454	0					
ANR	4068506	Identifier	anal		4068454	1					
ANR	4068507	Identifier	esil_goto_limit		4068454	1					
ANR	4068508	PtrMemberAccess	node -> i_value		4068454	1					
ANR	4068509	Identifier	node		4068454	0					
ANR	4068510	Identifier	i_value		4068454	1					
ANR	4068511	ReturnStatement	return true ;	1421:1:39343:39354	4068454	4	True				
ANR	4068512	Identifier	true		4068454	0					
ANR	4068513	ReturnType	static bool		4068454	1					
ANR	4068514	Identifier	cb_gotolimit		4068454	2					
ANR	4068515	ParameterList	"void * user , void * data"		4068454	3					
ANR	4068516	Parameter	void * user	1411:25:39079:39088	4068454	0	True				
ANR	4068517	ParameterType	void *		4068454	0					
ANR	4068518	Identifier	user		4068454	1					
ANR	4068519	Parameter	void * data	1411:37:39091:39100	4068454	1	True				
ANR	4068520	ParameterType	void *		4068454	0					
ANR	4068521	Identifier	data		4068454	1					
ANR	4068522	CFGEntryNode	ENTRY		4068454		True				
ANR	4068523	CFGExitNode	EXIT		4068454		True				
ANR	4068524	Symbol	data		4068454						
ANR	4068525	Symbol	r_sandbox_enable		4068454						
ANR	4068526	Symbol	false		4068454						
ANR	4068527	Symbol	* core		4068454						
ANR	4068528	Symbol	core -> anal		4068454						
ANR	4068529	Symbol	node -> i_value		4068454						
ANR	4068530	Symbol	core		4068454						
ANR	4068531	Symbol	node		4068454						
ANR	4068532	Symbol	* core -> anal		4068454						
ANR	4068533	Symbol	core -> anal -> esil_goto_limit		4068454						
ANR	4068534	Symbol	true		4068454						
ANR	4068535	Symbol	* node		4068454						
ANR	4068536	Symbol	core -> anal -> esil		4068454						
ANR	4068537	Symbol	user		4068454						
ANR	4068538	Symbol	* * core		4068454						
ANR	4068539	Function	cb_esilverbose	1424:0:39359:39573							
ANR	4068540	FunctionDef	"cb_esilverbose (void * user , void * data)"		4068539	0					
ANR	4068541	CompoundStatement		1424:52:39411:39573	4068539	0					
ANR	4068542	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1425:1:39414:39442	4068539	0	True				
ANR	4068543	IdentifierDecl	* core = ( RCore * ) user		4068539	0					
ANR	4068544	IdentifierDeclType	RCore *		4068539	0					
ANR	4068545	Identifier	core		4068539	1					
ANR	4068546	AssignmentExpression	* core = ( RCore * ) user		4068539	2		=			
ANR	4068547	Identifier	core		4068539	0					
ANR	4068548	CastExpression	( RCore * ) user		4068539	1					
ANR	4068549	CastTarget	RCore *		4068539	0					
ANR	4068550	Identifier	user		4068539	1					
ANR	4068551	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1426:1:39445:39484	4068539	1	True				
ANR	4068552	IdentifierDecl	* node = ( RConfigNode * ) data		4068539	0					
ANR	4068553	IdentifierDeclType	RConfigNode *		4068539	0					
ANR	4068554	Identifier	node		4068539	1					
ANR	4068555	AssignmentExpression	* node = ( RConfigNode * ) data		4068539	2		=			
ANR	4068556	Identifier	node		4068539	0					
ANR	4068557	CastExpression	( RConfigNode * ) data		4068539	1					
ANR	4068558	CastTarget	RConfigNode *		4068539	0					
ANR	4068559	Identifier	data		4068539	1					
ANR	4068560	IfStatement	if ( core -> anal -> esil )		4068539	2					
ANR	4068561	Condition	core -> anal -> esil	1427:5:39491:39506	4068539	0	True				
ANR	4068562	PtrMemberAccess	core -> anal -> esil		4068539	0					
ANR	4068563	PtrMemberAccess	core -> anal		4068539	0					
ANR	4068564	Identifier	core		4068539	0					
ANR	4068565	Identifier	anal		4068539	1					
ANR	4068566	Identifier	esil		4068539	1					
ANR	4068567	CompoundStatement		4:23:97:97	4068539	1					
ANR	4068568	ExpressionStatement	core -> anal -> esil -> verbose = node -> i_value	1428:2:39513:39554	4068539	0	True				
ANR	4068569	AssignmentExpression	core -> anal -> esil -> verbose = node -> i_value		4068539	0		=			
ANR	4068570	PtrMemberAccess	core -> anal -> esil -> verbose		4068539	0					
ANR	4068571	PtrMemberAccess	core -> anal -> esil		4068539	0					
ANR	4068572	PtrMemberAccess	core -> anal		4068539	0					
ANR	4068573	Identifier	core		4068539	0					
ANR	4068574	Identifier	anal		4068539	1					
ANR	4068575	Identifier	esil		4068539	1					
ANR	4068576	Identifier	verbose		4068539	1					
ANR	4068577	PtrMemberAccess	node -> i_value		4068539	1					
ANR	4068578	Identifier	node		4068539	0					
ANR	4068579	Identifier	i_value		4068539	1					
ANR	4068580	ReturnStatement	return true ;	1430:1:39560:39571	4068539	3	True				
ANR	4068581	Identifier	true		4068539	0					
ANR	4068582	ReturnType	static bool		4068539	1					
ANR	4068583	Identifier	cb_esilverbose		4068539	2					
ANR	4068584	ParameterList	"void * user , void * data"		4068539	3					
ANR	4068585	Parameter	void * user	1424:28:39387:39396	4068539	0	True				
ANR	4068586	ParameterType	void *		4068539	0					
ANR	4068587	Identifier	user		4068539	1					
ANR	4068588	Parameter	void * data	1424:40:39399:39408	4068539	1	True				
ANR	4068589	ParameterType	void *		4068539	0					
ANR	4068590	Identifier	data		4068539	1					
ANR	4068591	CFGEntryNode	ENTRY		4068539		True				
ANR	4068592	CFGExitNode	EXIT		4068539		True				
ANR	4068593	Symbol	data		4068539						
ANR	4068594	Symbol	* core		4068539						
ANR	4068595	Symbol	core -> anal		4068539						
ANR	4068596	Symbol	node -> i_value		4068539						
ANR	4068597	Symbol	core		4068539						
ANR	4068598	Symbol	node		4068539						
ANR	4068599	Symbol	* * * core		4068539						
ANR	4068600	Symbol	* core -> anal		4068539						
ANR	4068601	Symbol	core -> anal -> esil -> verbose		4068539						
ANR	4068602	Symbol	* core -> anal -> esil		4068539						
ANR	4068603	Symbol	true		4068539						
ANR	4068604	Symbol	* * core -> anal		4068539						
ANR	4068605	Symbol	* node		4068539						
ANR	4068606	Symbol	core -> anal -> esil		4068539						
ANR	4068607	Symbol	user		4068539						
ANR	4068608	Symbol	* * core		4068539						
ANR	4068609	Function	cb_esilstackdepth	1433:0:39576:39797							
ANR	4068610	FunctionDef	"cb_esilstackdepth (void * user , void * data)"		4068609	0					
ANR	4068611	CompoundStatement		1433:55:39631:39797	4068609	0					
ANR	4068612	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1434:1:39634:39673	4068609	0	True				
ANR	4068613	IdentifierDecl	* node = ( RConfigNode * ) data		4068609	0					
ANR	4068614	IdentifierDeclType	RConfigNode *		4068609	0					
ANR	4068615	Identifier	node		4068609	1					
ANR	4068616	AssignmentExpression	* node = ( RConfigNode * ) data		4068609	2		=			
ANR	4068617	Identifier	node		4068609	0					
ANR	4068618	CastExpression	( RConfigNode * ) data		4068609	1					
ANR	4068619	CastTarget	RConfigNode *		4068609	0					
ANR	4068620	Identifier	data		4068609	1					
ANR	4068621	IfStatement	if ( node -> i_value < 3 )		4068609	1					
ANR	4068622	Condition	node -> i_value < 3	1435:5:39680:39696	4068609	0	True				
ANR	4068623	RelationalExpression	node -> i_value < 3		4068609	0		<			
ANR	4068624	PtrMemberAccess	node -> i_value		4068609	0					
ANR	4068625	Identifier	node		4068609	0					
ANR	4068626	Identifier	i_value		4068609	1					
ANR	4068627	PrimaryExpression	3		4068609	1					
ANR	4068628	CompoundStatement		3:24:67:67	4068609	1					
ANR	4068629	ExpressionStatement	"eprintf ( ""esil.stack.depth must be greater than 2\\n"" )"	1436:2:39703:39756	4068609	0	True				
ANR	4068630	CallExpression	"eprintf ( ""esil.stack.depth must be greater than 2\\n"" )"		4068609	0					
ANR	4068631	Callee	eprintf		4068609	0					
ANR	4068632	Identifier	eprintf		4068609	0					
ANR	4068633	ArgumentList	"""esil.stack.depth must be greater than 2\\n"""		4068609	1					
ANR	4068634	Argument	"""esil.stack.depth must be greater than 2\\n"""		4068609	0					
ANR	4068635	PrimaryExpression	"""esil.stack.depth must be greater than 2\\n"""		4068609	0					
ANR	4068636	ExpressionStatement	node -> i_value = 32	1437:2:39760:39778	4068609	1	True				
ANR	4068637	AssignmentExpression	node -> i_value = 32		4068609	0		=			
ANR	4068638	PtrMemberAccess	node -> i_value		4068609	0					
ANR	4068639	Identifier	node		4068609	0					
ANR	4068640	Identifier	i_value		4068609	1					
ANR	4068641	PrimaryExpression	32		4068609	1					
ANR	4068642	ReturnStatement	return true ;	1439:1:39784:39795	4068609	2	True				
ANR	4068643	Identifier	true		4068609	0					
ANR	4068644	ReturnType	static bool		4068609	1					
ANR	4068645	Identifier	cb_esilstackdepth		4068609	2					
ANR	4068646	ParameterList	"void * user , void * data"		4068609	3					
ANR	4068647	Parameter	void * user	1433:31:39607:39616	4068609	0	True				
ANR	4068648	ParameterType	void *		4068609	0					
ANR	4068649	Identifier	user		4068609	1					
ANR	4068650	Parameter	void * data	1433:43:39619:39628	4068609	1	True				
ANR	4068651	ParameterType	void *		4068609	0					
ANR	4068652	Identifier	data		4068609	1					
ANR	4068653	CFGEntryNode	ENTRY		4068609		True				
ANR	4068654	CFGExitNode	EXIT		4068609		True				
ANR	4068655	Symbol	node		4068609						
ANR	4068656	Symbol	data		4068609						
ANR	4068657	Symbol	true		4068609						
ANR	4068658	Symbol	* node		4068609						
ANR	4068659	Symbol	user		4068609						
ANR	4068660	Symbol	node -> i_value		4068609						
ANR	4068661	Function	cb_fixrows	1442:0:39800:39959							
ANR	4068662	FunctionDef	"cb_fixrows (void * user , void * data)"		4068661	0					
ANR	4068663	CompoundStatement		1442:47:39847:39959	4068661	0					
ANR	4068664	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1443:1:39850:39890	4068661	0	True				
ANR	4068665	IdentifierDecl	* node = ( RConfigNode * ) data		4068661	0					
ANR	4068666	IdentifierDeclType	RConfigNode *		4068661	0					
ANR	4068667	Identifier	node		4068661	1					
ANR	4068668	AssignmentExpression	* node = ( RConfigNode * ) data		4068661	2		=			
ANR	4068669	Identifier	node		4068661	0					
ANR	4068670	CastExpression	( RConfigNode * ) data		4068661	1					
ANR	4068671	CastTarget	RConfigNode *		4068661	0					
ANR	4068672	Identifier	data		4068661	1					
ANR	4068673	ExpressionStatement	r_cons_singleton ( ) -> fix_rows = ( int ) node -> i_value	1444:1:39893:39943	4068661	1	True				
ANR	4068674	AssignmentExpression	r_cons_singleton ( ) -> fix_rows = ( int ) node -> i_value		4068661	0		=			
ANR	4068675	PtrMemberAccess	r_cons_singleton ( ) -> fix_rows		4068661	0					
ANR	4068676	CallExpression	r_cons_singleton ( )		4068661	0					
ANR	4068677	Callee	r_cons_singleton		4068661	0					
ANR	4068678	Identifier	r_cons_singleton		4068661	0					
ANR	4068679	ArgumentList			4068661	1					
ANR	4068680	Identifier	fix_rows		4068661	1					
ANR	4068681	CastExpression	( int ) node -> i_value		4068661	1					
ANR	4068682	CastTarget	int		4068661	0					
ANR	4068683	PtrMemberAccess	node -> i_value		4068661	1					
ANR	4068684	Identifier	node		4068661	0					
ANR	4068685	Identifier	i_value		4068661	1					
ANR	4068686	ReturnStatement	return true ;	1445:1:39946:39957	4068661	2	True				
ANR	4068687	Identifier	true		4068661	0					
ANR	4068688	ReturnType	static bool		4068661	1					
ANR	4068689	Identifier	cb_fixrows		4068661	2					
ANR	4068690	ParameterList	"void * user , void * data"		4068661	3					
ANR	4068691	Parameter	void * user	1442:23:39823:39832	4068661	0	True				
ANR	4068692	ParameterType	void *		4068661	0					
ANR	4068693	Identifier	user		4068661	1					
ANR	4068694	Parameter	void * data	1442:35:39835:39844	4068661	1	True				
ANR	4068695	ParameterType	void *		4068661	0					
ANR	4068696	Identifier	data		4068661	1					
ANR	4068697	CFGEntryNode	ENTRY		4068661		True				
ANR	4068698	CFGExitNode	EXIT		4068661		True				
ANR	4068699	Symbol	node		4068661						
ANR	4068700	Symbol	data		4068661						
ANR	4068701	Symbol	true		4068661						
ANR	4068702	Symbol	r_cons_singleton		4068661						
ANR	4068703	Symbol	r_cons_singleton ( ) -> fix_rows		4068661						
ANR	4068704	Symbol	* node		4068661						
ANR	4068705	Symbol	user		4068661						
ANR	4068706	Symbol	* r_cons_singleton		4068661						
ANR	4068707	Symbol	node -> i_value		4068661						
ANR	4068708	Function	cb_fixcolumns	1448:0:39962:40127							
ANR	4068709	FunctionDef	"cb_fixcolumns (void * user , void * data)"		4068708	0					
ANR	4068710	CompoundStatement		1448:50:40012:40127	4068708	0					
ANR	4068711	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1449:1:40015:40055	4068708	0	True				
ANR	4068712	IdentifierDecl	* node = ( RConfigNode * ) data		4068708	0					
ANR	4068713	IdentifierDeclType	RConfigNode *		4068708	0					
ANR	4068714	Identifier	node		4068708	1					
ANR	4068715	AssignmentExpression	* node = ( RConfigNode * ) data		4068708	2		=			
ANR	4068716	Identifier	node		4068708	0					
ANR	4068717	CastExpression	( RConfigNode * ) data		4068708	1					
ANR	4068718	CastTarget	RConfigNode *		4068708	0					
ANR	4068719	Identifier	data		4068708	1					
ANR	4068720	ExpressionStatement	r_cons_singleton ( ) -> fix_columns = atoi ( node -> value )	1450:1:40058:40111	4068708	1	True				
ANR	4068721	AssignmentExpression	r_cons_singleton ( ) -> fix_columns = atoi ( node -> value )		4068708	0		=			
ANR	4068722	PtrMemberAccess	r_cons_singleton ( ) -> fix_columns		4068708	0					
ANR	4068723	CallExpression	r_cons_singleton ( )		4068708	0					
ANR	4068724	Callee	r_cons_singleton		4068708	0					
ANR	4068725	Identifier	r_cons_singleton		4068708	0					
ANR	4068726	ArgumentList			4068708	1					
ANR	4068727	Identifier	fix_columns		4068708	1					
ANR	4068728	CallExpression	atoi ( node -> value )		4068708	1					
ANR	4068729	Callee	atoi		4068708	0					
ANR	4068730	Identifier	atoi		4068708	0					
ANR	4068731	ArgumentList	node -> value		4068708	1					
ANR	4068732	Argument	node -> value		4068708	0					
ANR	4068733	PtrMemberAccess	node -> value		4068708	0					
ANR	4068734	Identifier	node		4068708	0					
ANR	4068735	Identifier	value		4068708	1					
ANR	4068736	ReturnStatement	return true ;	1451:1:40114:40125	4068708	2	True				
ANR	4068737	Identifier	true		4068708	0					
ANR	4068738	ReturnType	static bool		4068708	1					
ANR	4068739	Identifier	cb_fixcolumns		4068708	2					
ANR	4068740	ParameterList	"void * user , void * data"		4068708	3					
ANR	4068741	Parameter	void * user	1448:26:39988:39997	4068708	0	True				
ANR	4068742	ParameterType	void *		4068708	0					
ANR	4068743	Identifier	user		4068708	1					
ANR	4068744	Parameter	void * data	1448:38:40000:40009	4068708	1	True				
ANR	4068745	ParameterType	void *		4068708	0					
ANR	4068746	Identifier	data		4068708	1					
ANR	4068747	CFGEntryNode	ENTRY		4068708		True				
ANR	4068748	CFGExitNode	EXIT		4068708		True				
ANR	4068749	Symbol	atoi		4068708						
ANR	4068750	Symbol	node		4068708						
ANR	4068751	Symbol	data		4068708						
ANR	4068752	Symbol	true		4068708						
ANR	4068753	Symbol	r_cons_singleton		4068708						
ANR	4068754	Symbol	* node		4068708						
ANR	4068755	Symbol	r_cons_singleton ( ) -> fix_columns		4068708						
ANR	4068756	Symbol	user		4068708						
ANR	4068757	Symbol	* r_cons_singleton		4068708						
ANR	4068758	Symbol	node -> value		4068708						
ANR	4068759	Function	cb_rows	1454:0:40130:40283							
ANR	4068760	FunctionDef	"cb_rows (void * user , void * data)"		4068759	0					
ANR	4068761	CompoundStatement		1454:44:40174:40283	4068759	0					
ANR	4068762	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1455:1:40177:40217	4068759	0	True				
ANR	4068763	IdentifierDecl	* node = ( RConfigNode * ) data		4068759	0					
ANR	4068764	IdentifierDeclType	RConfigNode *		4068759	0					
ANR	4068765	Identifier	node		4068759	1					
ANR	4068766	AssignmentExpression	* node = ( RConfigNode * ) data		4068759	2		=			
ANR	4068767	Identifier	node		4068759	0					
ANR	4068768	CastExpression	( RConfigNode * ) data		4068759	1					
ANR	4068769	CastTarget	RConfigNode *		4068759	0					
ANR	4068770	Identifier	data		4068759	1					
ANR	4068771	ExpressionStatement	r_cons_singleton ( ) -> force_rows = node -> i_value	1456:1:40220:40267	4068759	1	True				
ANR	4068772	AssignmentExpression	r_cons_singleton ( ) -> force_rows = node -> i_value		4068759	0		=			
ANR	4068773	PtrMemberAccess	r_cons_singleton ( ) -> force_rows		4068759	0					
ANR	4068774	CallExpression	r_cons_singleton ( )		4068759	0					
ANR	4068775	Callee	r_cons_singleton		4068759	0					
ANR	4068776	Identifier	r_cons_singleton		4068759	0					
ANR	4068777	ArgumentList			4068759	1					
ANR	4068778	Identifier	force_rows		4068759	1					
ANR	4068779	PtrMemberAccess	node -> i_value		4068759	1					
ANR	4068780	Identifier	node		4068759	0					
ANR	4068781	Identifier	i_value		4068759	1					
ANR	4068782	ReturnStatement	return true ;	1457:1:40270:40281	4068759	2	True				
ANR	4068783	Identifier	true		4068759	0					
ANR	4068784	ReturnType	static bool		4068759	1					
ANR	4068785	Identifier	cb_rows		4068759	2					
ANR	4068786	ParameterList	"void * user , void * data"		4068759	3					
ANR	4068787	Parameter	void * user	1454:20:40150:40159	4068759	0	True				
ANR	4068788	ParameterType	void *		4068759	0					
ANR	4068789	Identifier	user		4068759	1					
ANR	4068790	Parameter	void * data	1454:32:40162:40171	4068759	1	True				
ANR	4068791	ParameterType	void *		4068759	0					
ANR	4068792	Identifier	data		4068759	1					
ANR	4068793	CFGEntryNode	ENTRY		4068759		True				
ANR	4068794	CFGExitNode	EXIT		4068759		True				
ANR	4068795	Symbol	node		4068759						
ANR	4068796	Symbol	data		4068759						
ANR	4068797	Symbol	true		4068759						
ANR	4068798	Symbol	r_cons_singleton		4068759						
ANR	4068799	Symbol	r_cons_singleton ( ) -> force_rows		4068759						
ANR	4068800	Symbol	* node		4068759						
ANR	4068801	Symbol	user		4068759						
ANR	4068802	Symbol	* r_cons_singleton		4068759						
ANR	4068803	Symbol	node -> i_value		4068759						
ANR	4068804	Function	cb_cmd_hexcursor	1460:0:40286:40463							
ANR	4068805	FunctionDef	"cb_cmd_hexcursor (void * user , void * data)"		4068804	0					
ANR	4068806	CompoundStatement		1460:53:40339:40463	4068804	0					
ANR	4068807	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1461:1:40342:40370	4068804	0	True				
ANR	4068808	IdentifierDecl	* core = ( RCore * ) user		4068804	0					
ANR	4068809	IdentifierDeclType	RCore *		4068804	0					
ANR	4068810	Identifier	core		4068804	1					
ANR	4068811	AssignmentExpression	* core = ( RCore * ) user		4068804	2		=			
ANR	4068812	Identifier	core		4068804	0					
ANR	4068813	CastExpression	( RCore * ) user		4068804	1					
ANR	4068814	CastTarget	RCore *		4068804	0					
ANR	4068815	Identifier	user		4068804	1					
ANR	4068816	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1462:1:40373:40413	4068804	1	True				
ANR	4068817	IdentifierDecl	* node = ( RConfigNode * ) data		4068804	0					
ANR	4068818	IdentifierDeclType	RConfigNode *		4068804	0					
ANR	4068819	Identifier	node		4068804	1					
ANR	4068820	AssignmentExpression	* node = ( RConfigNode * ) data		4068804	2		=			
ANR	4068821	Identifier	node		4068804	0					
ANR	4068822	CastExpression	( RConfigNode * ) data		4068804	1					
ANR	4068823	CastTarget	RConfigNode *		4068804	0					
ANR	4068824	Identifier	data		4068804	1					
ANR	4068825	ExpressionStatement	core -> print -> cfmt = node -> value	1463:1:40416:40447	4068804	2	True				
ANR	4068826	AssignmentExpression	core -> print -> cfmt = node -> value		4068804	0		=			
ANR	4068827	PtrMemberAccess	core -> print -> cfmt		4068804	0					
ANR	4068828	PtrMemberAccess	core -> print		4068804	0					
ANR	4068829	Identifier	core		4068804	0					
ANR	4068830	Identifier	print		4068804	1					
ANR	4068831	Identifier	cfmt		4068804	1					
ANR	4068832	PtrMemberAccess	node -> value		4068804	1					
ANR	4068833	Identifier	node		4068804	0					
ANR	4068834	Identifier	value		4068804	1					
ANR	4068835	ReturnStatement	return true ;	1464:1:40450:40461	4068804	3	True				
ANR	4068836	Identifier	true		4068804	0					
ANR	4068837	ReturnType	static bool		4068804	1					
ANR	4068838	Identifier	cb_cmd_hexcursor		4068804	2					
ANR	4068839	ParameterList	"void * user , void * data"		4068804	3					
ANR	4068840	Parameter	void * user	1460:29:40315:40324	4068804	0	True				
ANR	4068841	ParameterType	void *		4068804	0					
ANR	4068842	Identifier	user		4068804	1					
ANR	4068843	Parameter	void * data	1460:41:40327:40336	4068804	1	True				
ANR	4068844	ParameterType	void *		4068804	0					
ANR	4068845	Identifier	data		4068804	1					
ANR	4068846	CFGEntryNode	ENTRY		4068804		True				
ANR	4068847	CFGExitNode	EXIT		4068804		True				
ANR	4068848	Symbol	core		4068804						
ANR	4068849	Symbol	node		4068804						
ANR	4068850	Symbol	* core -> print		4068804						
ANR	4068851	Symbol	data		4068804						
ANR	4068852	Symbol	* core		4068804						
ANR	4068853	Symbol	true		4068804						
ANR	4068854	Symbol	* node		4068804						
ANR	4068855	Symbol	core -> print		4068804						
ANR	4068856	Symbol	user		4068804						
ANR	4068857	Symbol	* * core		4068804						
ANR	4068858	Symbol	core -> print -> cfmt		4068804						
ANR	4068859	Symbol	node -> value		4068804						
ANR	4068860	Function	cb_hexcompact	1467:0:40466:40738							
ANR	4068861	FunctionDef	"cb_hexcompact (void * user , void * data)"		4068860	0					
ANR	4068862	CompoundStatement		1467:50:40516:40738	4068860	0					
ANR	4068863	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1468:1:40519:40547	4068860	0	True				
ANR	4068864	IdentifierDecl	* core = ( RCore * ) user		4068860	0					
ANR	4068865	IdentifierDeclType	RCore *		4068860	0					
ANR	4068866	Identifier	core		4068860	1					
ANR	4068867	AssignmentExpression	* core = ( RCore * ) user		4068860	2		=			
ANR	4068868	Identifier	core		4068860	0					
ANR	4068869	CastExpression	( RCore * ) user		4068860	1					
ANR	4068870	CastTarget	RCore *		4068860	0					
ANR	4068871	Identifier	user		4068860	1					
ANR	4068872	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1469:1:40550:40590	4068860	1	True				
ANR	4068873	IdentifierDecl	* node = ( RConfigNode * ) data		4068860	0					
ANR	4068874	IdentifierDeclType	RConfigNode *		4068860	0					
ANR	4068875	Identifier	node		4068860	1					
ANR	4068876	AssignmentExpression	* node = ( RConfigNode * ) data		4068860	2		=			
ANR	4068877	Identifier	node		4068860	0					
ANR	4068878	CastExpression	( RConfigNode * ) data		4068860	1					
ANR	4068879	CastTarget	RConfigNode *		4068860	0					
ANR	4068880	Identifier	data		4068860	1					
ANR	4068881	IfStatement	if ( node -> i_value )		4068860	2					
ANR	4068882	Condition	node -> i_value	1470:5:40597:40609	4068860	0	True				
ANR	4068883	PtrMemberAccess	node -> i_value		4068860	0					
ANR	4068884	Identifier	node		4068860	0					
ANR	4068885	Identifier	i_value		4068860	1					
ANR	4068886	CompoundStatement		4:20:95:95	4068860	1					
ANR	4068887	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_COMPACT	1471:2:40616:40659	4068860	0	True				
ANR	4068888	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_COMPACT		4068860	0		|=			
ANR	4068889	PtrMemberAccess	core -> print -> flags		4068860	0					
ANR	4068890	PtrMemberAccess	core -> print		4068860	0					
ANR	4068891	Identifier	core		4068860	0					
ANR	4068892	Identifier	print		4068860	1					
ANR	4068893	Identifier	flags		4068860	1					
ANR	4068894	Identifier	R_PRINT_FLAGS_COMPACT		4068860	1					
ANR	4068895	ElseStatement	else		4068860	0					
ANR	4068896	CompoundStatement		6:8:152:152	4068860	0					
ANR	4068897	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_COMPACT )	1473:2:40673:40719	4068860	0	True				
ANR	4068898	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_COMPACT )		4068860	0		&=			
ANR	4068899	PtrMemberAccess	core -> print -> flags		4068860	0					
ANR	4068900	PtrMemberAccess	core -> print		4068860	0					
ANR	4068901	Identifier	core		4068860	0					
ANR	4068902	Identifier	print		4068860	1					
ANR	4068903	Identifier	flags		4068860	1					
ANR	4068904	Identifier	~R_PRINT_FLAGS_COMPACT		4068860	1					
ANR	4068905	ReturnStatement	return true ;	1475:1:40725:40736	4068860	3	True				
ANR	4068906	Identifier	true		4068860	0					
ANR	4068907	ReturnType	static bool		4068860	1					
ANR	4068908	Identifier	cb_hexcompact		4068860	2					
ANR	4068909	ParameterList	"void * user , void * data"		4068860	3					
ANR	4068910	Parameter	void * user	1467:26:40492:40501	4068860	0	True				
ANR	4068911	ParameterType	void *		4068860	0					
ANR	4068912	Identifier	user		4068860	1					
ANR	4068913	Parameter	void * data	1467:38:40504:40513	4068860	1	True				
ANR	4068914	ParameterType	void *		4068860	0					
ANR	4068915	Identifier	data		4068860	1					
ANR	4068916	CFGEntryNode	ENTRY		4068860		True				
ANR	4068917	CFGExitNode	EXIT		4068860		True				
ANR	4068918	Symbol	data		4068860						
ANR	4068919	Symbol	* core		4068860						
ANR	4068920	Symbol	R_PRINT_FLAGS_COMPACT		4068860						
ANR	4068921	Symbol	node -> i_value		4068860						
ANR	4068922	Symbol	core		4068860						
ANR	4068923	Symbol	node		4068860						
ANR	4068924	Symbol	* core -> print		4068860						
ANR	4068925	Symbol	~R_PRINT_FLAGS_COMPACT		4068860						
ANR	4068926	Symbol	true		4068860						
ANR	4068927	Symbol	* node		4068860						
ANR	4068928	Symbol	core -> print		4068860						
ANR	4068929	Symbol	user		4068860						
ANR	4068930	Symbol	core -> print -> flags		4068860						
ANR	4068931	Symbol	* * core		4068860						
ANR	4068932	Function	cb_hex_pairs	1478:0:40741:40917							
ANR	4068933	FunctionDef	"cb_hex_pairs (void * user , void * data)"		4068932	0					
ANR	4068934	CompoundStatement		1478:49:40790:40917	4068932	0					
ANR	4068935	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1479:1:40793:40821	4068932	0	True				
ANR	4068936	IdentifierDecl	* core = ( RCore * ) user		4068932	0					
ANR	4068937	IdentifierDeclType	RCore *		4068932	0					
ANR	4068938	Identifier	core		4068932	1					
ANR	4068939	AssignmentExpression	* core = ( RCore * ) user		4068932	2		=			
ANR	4068940	Identifier	core		4068932	0					
ANR	4068941	CastExpression	( RCore * ) user		4068932	1					
ANR	4068942	CastTarget	RCore *		4068932	0					
ANR	4068943	Identifier	user		4068932	1					
ANR	4068944	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1480:1:40824:40864	4068932	1	True				
ANR	4068945	IdentifierDecl	* node = ( RConfigNode * ) data		4068932	0					
ANR	4068946	IdentifierDeclType	RConfigNode *		4068932	0					
ANR	4068947	Identifier	node		4068932	1					
ANR	4068948	AssignmentExpression	* node = ( RConfigNode * ) data		4068932	2		=			
ANR	4068949	Identifier	node		4068932	0					
ANR	4068950	CastExpression	( RConfigNode * ) data		4068932	1					
ANR	4068951	CastTarget	RConfigNode *		4068932	0					
ANR	4068952	Identifier	data		4068932	1					
ANR	4068953	ExpressionStatement	core -> print -> pairs = node -> i_value	1481:1:40867:40901	4068932	2	True				
ANR	4068954	AssignmentExpression	core -> print -> pairs = node -> i_value		4068932	0		=			
ANR	4068955	PtrMemberAccess	core -> print -> pairs		4068932	0					
ANR	4068956	PtrMemberAccess	core -> print		4068932	0					
ANR	4068957	Identifier	core		4068932	0					
ANR	4068958	Identifier	print		4068932	1					
ANR	4068959	Identifier	pairs		4068932	1					
ANR	4068960	PtrMemberAccess	node -> i_value		4068932	1					
ANR	4068961	Identifier	node		4068932	0					
ANR	4068962	Identifier	i_value		4068932	1					
ANR	4068963	ReturnStatement	return true ;	1482:1:40904:40915	4068932	3	True				
ANR	4068964	Identifier	true		4068932	0					
ANR	4068965	ReturnType	static bool		4068932	1					
ANR	4068966	Identifier	cb_hex_pairs		4068932	2					
ANR	4068967	ParameterList	"void * user , void * data"		4068932	3					
ANR	4068968	Parameter	void * user	1478:25:40766:40775	4068932	0	True				
ANR	4068969	ParameterType	void *		4068932	0					
ANR	4068970	Identifier	user		4068932	1					
ANR	4068971	Parameter	void * data	1478:37:40778:40787	4068932	1	True				
ANR	4068972	ParameterType	void *		4068932	0					
ANR	4068973	Identifier	data		4068932	1					
ANR	4068974	CFGEntryNode	ENTRY		4068932		True				
ANR	4068975	CFGExitNode	EXIT		4068932		True				
ANR	4068976	Symbol	core		4068932						
ANR	4068977	Symbol	node		4068932						
ANR	4068978	Symbol	* core -> print		4068932						
ANR	4068979	Symbol	data		4068932						
ANR	4068980	Symbol	core -> print -> pairs		4068932						
ANR	4068981	Symbol	* core		4068932						
ANR	4068982	Symbol	true		4068932						
ANR	4068983	Symbol	* node		4068932						
ANR	4068984	Symbol	core -> print		4068932						
ANR	4068985	Symbol	user		4068932						
ANR	4068986	Symbol	* * core		4068932						
ANR	4068987	Symbol	node -> i_value		4068932						
ANR	4068988	Function	cb_hex_section	1485:0:40920:41191							
ANR	4068989	FunctionDef	"cb_hex_section (void * user , void * data)"		4068988	0					
ANR	4068990	CompoundStatement		1485:51:40971:41191	4068988	0					
ANR	4068991	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1486:1:40974:41002	4068988	0	True				
ANR	4068992	IdentifierDecl	* core = ( RCore * ) user		4068988	0					
ANR	4068993	IdentifierDeclType	RCore *		4068988	0					
ANR	4068994	Identifier	core		4068988	1					
ANR	4068995	AssignmentExpression	* core = ( RCore * ) user		4068988	2		=			
ANR	4068996	Identifier	core		4068988	0					
ANR	4068997	CastExpression	( RCore * ) user		4068988	1					
ANR	4068998	CastTarget	RCore *		4068988	0					
ANR	4068999	Identifier	user		4068988	1					
ANR	4069000	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1487:1:41005:41045	4068988	1	True				
ANR	4069001	IdentifierDecl	* node = ( RConfigNode * ) data		4068988	0					
ANR	4069002	IdentifierDeclType	RConfigNode *		4068988	0					
ANR	4069003	Identifier	node		4068988	1					
ANR	4069004	AssignmentExpression	* node = ( RConfigNode * ) data		4068988	2		=			
ANR	4069005	Identifier	node		4068988	0					
ANR	4069006	CastExpression	( RConfigNode * ) data		4068988	1					
ANR	4069007	CastTarget	RConfigNode *		4068988	0					
ANR	4069008	Identifier	data		4068988	1					
ANR	4069009	IfStatement	if ( node -> i_value )		4068988	2					
ANR	4069010	Condition	node -> i_value	1488:5:41052:41064	4068988	0	True				
ANR	4069011	PtrMemberAccess	node -> i_value		4068988	0					
ANR	4069012	Identifier	node		4068988	0					
ANR	4069013	Identifier	i_value		4068988	1					
ANR	4069014	CompoundStatement		4:20:95:95	4068988	1					
ANR	4069015	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_SECTION	1489:2:41071:41114	4068988	0	True				
ANR	4069016	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_SECTION		4068988	0		|=			
ANR	4069017	PtrMemberAccess	core -> print -> flags		4068988	0					
ANR	4069018	PtrMemberAccess	core -> print		4068988	0					
ANR	4069019	Identifier	core		4068988	0					
ANR	4069020	Identifier	print		4068988	1					
ANR	4069021	Identifier	flags		4068988	1					
ANR	4069022	Identifier	R_PRINT_FLAGS_SECTION		4068988	1					
ANR	4069023	ElseStatement	else		4068988	0					
ANR	4069024	CompoundStatement		6:8:152:152	4068988	0					
ANR	4069025	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_SECTION	1491:2:41128:41172	4068988	0	True				
ANR	4069026	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_SECTION		4068988	0		&=			
ANR	4069027	PtrMemberAccess	core -> print -> flags		4068988	0					
ANR	4069028	PtrMemberAccess	core -> print		4068988	0					
ANR	4069029	Identifier	core		4068988	0					
ANR	4069030	Identifier	print		4068988	1					
ANR	4069031	Identifier	flags		4068988	1					
ANR	4069032	Identifier	~R_PRINT_FLAGS_SECTION		4068988	1					
ANR	4069033	ReturnStatement	return true ;	1493:1:41178:41189	4068988	3	True				
ANR	4069034	Identifier	true		4068988	0					
ANR	4069035	ReturnType	static bool		4068988	1					
ANR	4069036	Identifier	cb_hex_section		4068988	2					
ANR	4069037	ParameterList	"void * user , void * data"		4068988	3					
ANR	4069038	Parameter	void * user	1485:27:40947:40956	4068988	0	True				
ANR	4069039	ParameterType	void *		4068988	0					
ANR	4069040	Identifier	user		4068988	1					
ANR	4069041	Parameter	void * data	1485:39:40959:40968	4068988	1	True				
ANR	4069042	ParameterType	void *		4068988	0					
ANR	4069043	Identifier	data		4068988	1					
ANR	4069044	CFGEntryNode	ENTRY		4068988		True				
ANR	4069045	CFGExitNode	EXIT		4068988		True				
ANR	4069046	Symbol	data		4068988						
ANR	4069047	Symbol	* core		4068988						
ANR	4069048	Symbol	node -> i_value		4068988						
ANR	4069049	Symbol	core		4068988						
ANR	4069050	Symbol	node		4068988						
ANR	4069051	Symbol	~R_PRINT_FLAGS_SECTION		4068988						
ANR	4069052	Symbol	* core -> print		4068988						
ANR	4069053	Symbol	true		4068988						
ANR	4069054	Symbol	* node		4068988						
ANR	4069055	Symbol	core -> print		4068988						
ANR	4069056	Symbol	user		4068988						
ANR	4069057	Symbol	core -> print -> flags		4068988						
ANR	4069058	Symbol	R_PRINT_FLAGS_SECTION		4068988						
ANR	4069059	Symbol	* * core		4068988						
ANR	4069060	Function	cb_hex_align	1496:0:41194:41459							
ANR	4069061	FunctionDef	"cb_hex_align (void * user , void * data)"		4069060	0					
ANR	4069062	CompoundStatement		1496:49:41243:41459	4069060	0					
ANR	4069063	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1497:1:41246:41274	4069060	0	True				
ANR	4069064	IdentifierDecl	* core = ( RCore * ) user		4069060	0					
ANR	4069065	IdentifierDeclType	RCore *		4069060	0					
ANR	4069066	Identifier	core		4069060	1					
ANR	4069067	AssignmentExpression	* core = ( RCore * ) user		4069060	2		=			
ANR	4069068	Identifier	core		4069060	0					
ANR	4069069	CastExpression	( RCore * ) user		4069060	1					
ANR	4069070	CastTarget	RCore *		4069060	0					
ANR	4069071	Identifier	user		4069060	1					
ANR	4069072	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1498:1:41277:41317	4069060	1	True				
ANR	4069073	IdentifierDecl	* node = ( RConfigNode * ) data		4069060	0					
ANR	4069074	IdentifierDeclType	RConfigNode *		4069060	0					
ANR	4069075	Identifier	node		4069060	1					
ANR	4069076	AssignmentExpression	* node = ( RConfigNode * ) data		4069060	2		=			
ANR	4069077	Identifier	node		4069060	0					
ANR	4069078	CastExpression	( RConfigNode * ) data		4069060	1					
ANR	4069079	CastTarget	RConfigNode *		4069060	0					
ANR	4069080	Identifier	data		4069060	1					
ANR	4069081	IfStatement	if ( node -> i_value )		4069060	2					
ANR	4069082	Condition	node -> i_value	1499:5:41324:41336	4069060	0	True				
ANR	4069083	PtrMemberAccess	node -> i_value		4069060	0					
ANR	4069084	Identifier	node		4069060	0					
ANR	4069085	Identifier	i_value		4069060	1					
ANR	4069086	CompoundStatement		4:20:95:95	4069060	1					
ANR	4069087	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_ALIGN	1500:2:41343:41384	4069060	0	True				
ANR	4069088	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_ALIGN		4069060	0		|=			
ANR	4069089	PtrMemberAccess	core -> print -> flags		4069060	0					
ANR	4069090	PtrMemberAccess	core -> print		4069060	0					
ANR	4069091	Identifier	core		4069060	0					
ANR	4069092	Identifier	print		4069060	1					
ANR	4069093	Identifier	flags		4069060	1					
ANR	4069094	Identifier	R_PRINT_FLAGS_ALIGN		4069060	1					
ANR	4069095	ElseStatement	else		4069060	0					
ANR	4069096	CompoundStatement		6:8:150:150	4069060	0					
ANR	4069097	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_ALIGN	1502:2:41398:41440	4069060	0	True				
ANR	4069098	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_ALIGN		4069060	0		&=			
ANR	4069099	PtrMemberAccess	core -> print -> flags		4069060	0					
ANR	4069100	PtrMemberAccess	core -> print		4069060	0					
ANR	4069101	Identifier	core		4069060	0					
ANR	4069102	Identifier	print		4069060	1					
ANR	4069103	Identifier	flags		4069060	1					
ANR	4069104	Identifier	~R_PRINT_FLAGS_ALIGN		4069060	1					
ANR	4069105	ReturnStatement	return true ;	1504:1:41446:41457	4069060	3	True				
ANR	4069106	Identifier	true		4069060	0					
ANR	4069107	ReturnType	static bool		4069060	1					
ANR	4069108	Identifier	cb_hex_align		4069060	2					
ANR	4069109	ParameterList	"void * user , void * data"		4069060	3					
ANR	4069110	Parameter	void * user	1496:25:41219:41228	4069060	0	True				
ANR	4069111	ParameterType	void *		4069060	0					
ANR	4069112	Identifier	user		4069060	1					
ANR	4069113	Parameter	void * data	1496:37:41231:41240	4069060	1	True				
ANR	4069114	ParameterType	void *		4069060	0					
ANR	4069115	Identifier	data		4069060	1					
ANR	4069116	CFGEntryNode	ENTRY		4069060		True				
ANR	4069117	CFGExitNode	EXIT		4069060		True				
ANR	4069118	Symbol	data		4069060						
ANR	4069119	Symbol	* core		4069060						
ANR	4069120	Symbol	~R_PRINT_FLAGS_ALIGN		4069060						
ANR	4069121	Symbol	node -> i_value		4069060						
ANR	4069122	Symbol	core		4069060						
ANR	4069123	Symbol	node		4069060						
ANR	4069124	Symbol	* core -> print		4069060						
ANR	4069125	Symbol	true		4069060						
ANR	4069126	Symbol	R_PRINT_FLAGS_ALIGN		4069060						
ANR	4069127	Symbol	* node		4069060						
ANR	4069128	Symbol	core -> print		4069060						
ANR	4069129	Symbol	user		4069060						
ANR	4069130	Symbol	core -> print -> flags		4069060						
ANR	4069131	Symbol	* * core		4069060						
ANR	4069132	Function	cb_io_unalloc	1507:0:41462:41732							
ANR	4069133	FunctionDef	"cb_io_unalloc (void * user , void * data)"		4069132	0					
ANR	4069134	CompoundStatement		1507:50:41512:41732	4069132	0					
ANR	4069135	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1508:1:41515:41543	4069132	0	True				
ANR	4069136	IdentifierDecl	* core = ( RCore * ) user		4069132	0					
ANR	4069137	IdentifierDeclType	RCore *		4069132	0					
ANR	4069138	Identifier	core		4069132	1					
ANR	4069139	AssignmentExpression	* core = ( RCore * ) user		4069132	2		=			
ANR	4069140	Identifier	core		4069132	0					
ANR	4069141	CastExpression	( RCore * ) user		4069132	1					
ANR	4069142	CastTarget	RCore *		4069132	0					
ANR	4069143	Identifier	user		4069132	1					
ANR	4069144	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1509:1:41546:41586	4069132	1	True				
ANR	4069145	IdentifierDecl	* node = ( RConfigNode * ) data		4069132	0					
ANR	4069146	IdentifierDeclType	RConfigNode *		4069132	0					
ANR	4069147	Identifier	node		4069132	1					
ANR	4069148	AssignmentExpression	* node = ( RConfigNode * ) data		4069132	2		=			
ANR	4069149	Identifier	node		4069132	0					
ANR	4069150	CastExpression	( RConfigNode * ) data		4069132	1					
ANR	4069151	CastTarget	RConfigNode *		4069132	0					
ANR	4069152	Identifier	data		4069132	1					
ANR	4069153	IfStatement	if ( node -> i_value )		4069132	2					
ANR	4069154	Condition	node -> i_value	1510:5:41593:41605	4069132	0	True				
ANR	4069155	PtrMemberAccess	node -> i_value		4069132	0					
ANR	4069156	Identifier	node		4069132	0					
ANR	4069157	Identifier	i_value		4069132	1					
ANR	4069158	CompoundStatement		4:20:95:95	4069132	1					
ANR	4069159	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_UNALLOC	1511:2:41612:41655	4069132	0	True				
ANR	4069160	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_UNALLOC		4069132	0		|=			
ANR	4069161	PtrMemberAccess	core -> print -> flags		4069132	0					
ANR	4069162	PtrMemberAccess	core -> print		4069132	0					
ANR	4069163	Identifier	core		4069132	0					
ANR	4069164	Identifier	print		4069132	1					
ANR	4069165	Identifier	flags		4069132	1					
ANR	4069166	Identifier	R_PRINT_FLAGS_UNALLOC		4069132	1					
ANR	4069167	ElseStatement	else		4069132	0					
ANR	4069168	CompoundStatement		6:8:152:152	4069132	0					
ANR	4069169	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_UNALLOC	1513:2:41669:41713	4069132	0	True				
ANR	4069170	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_UNALLOC		4069132	0		&=			
ANR	4069171	PtrMemberAccess	core -> print -> flags		4069132	0					
ANR	4069172	PtrMemberAccess	core -> print		4069132	0					
ANR	4069173	Identifier	core		4069132	0					
ANR	4069174	Identifier	print		4069132	1					
ANR	4069175	Identifier	flags		4069132	1					
ANR	4069176	Identifier	~R_PRINT_FLAGS_UNALLOC		4069132	1					
ANR	4069177	ReturnStatement	return true ;	1515:1:41719:41730	4069132	3	True				
ANR	4069178	Identifier	true		4069132	0					
ANR	4069179	ReturnType	static bool		4069132	1					
ANR	4069180	Identifier	cb_io_unalloc		4069132	2					
ANR	4069181	ParameterList	"void * user , void * data"		4069132	3					
ANR	4069182	Parameter	void * user	1507:26:41488:41497	4069132	0	True				
ANR	4069183	ParameterType	void *		4069132	0					
ANR	4069184	Identifier	user		4069132	1					
ANR	4069185	Parameter	void * data	1507:38:41500:41509	4069132	1	True				
ANR	4069186	ParameterType	void *		4069132	0					
ANR	4069187	Identifier	data		4069132	1					
ANR	4069188	CFGEntryNode	ENTRY		4069132		True				
ANR	4069189	CFGExitNode	EXIT		4069132		True				
ANR	4069190	Symbol	data		4069132						
ANR	4069191	Symbol	* core		4069132						
ANR	4069192	Symbol	~R_PRINT_FLAGS_UNALLOC		4069132						
ANR	4069193	Symbol	node -> i_value		4069132						
ANR	4069194	Symbol	core		4069132						
ANR	4069195	Symbol	node		4069132						
ANR	4069196	Symbol	* core -> print		4069132						
ANR	4069197	Symbol	true		4069132						
ANR	4069198	Symbol	* node		4069132						
ANR	4069199	Symbol	core -> print		4069132						
ANR	4069200	Symbol	user		4069132						
ANR	4069201	Symbol	R_PRINT_FLAGS_UNALLOC		4069132						
ANR	4069202	Symbol	* * core		4069132						
ANR	4069203	Symbol	core -> print -> flags		4069132						
ANR	4069204	Function	cb_io_unalloc_ch	1518:0:41735:41945							
ANR	4069205	FunctionDef	"cb_io_unalloc_ch (void * user , void * data)"		4069204	0					
ANR	4069206	CompoundStatement		1518:53:41788:41945	4069204	0					
ANR	4069207	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1519:1:41791:41819	4069204	0	True				
ANR	4069208	IdentifierDecl	* core = ( RCore * ) user		4069204	0					
ANR	4069209	IdentifierDeclType	RCore *		4069204	0					
ANR	4069210	Identifier	core		4069204	1					
ANR	4069211	AssignmentExpression	* core = ( RCore * ) user		4069204	2		=			
ANR	4069212	Identifier	core		4069204	0					
ANR	4069213	CastExpression	( RCore * ) user		4069204	1					
ANR	4069214	CastTarget	RCore *		4069204	0					
ANR	4069215	Identifier	user		4069204	1					
ANR	4069216	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1520:1:41822:41862	4069204	1	True				
ANR	4069217	IdentifierDecl	* node = ( RConfigNode * ) data		4069204	0					
ANR	4069218	IdentifierDeclType	RConfigNode *		4069204	0					
ANR	4069219	Identifier	node		4069204	1					
ANR	4069220	AssignmentExpression	* node = ( RConfigNode * ) data		4069204	2		=			
ANR	4069221	Identifier	node		4069204	0					
ANR	4069222	CastExpression	( RConfigNode * ) data		4069204	1					
ANR	4069223	CastTarget	RConfigNode *		4069204	0					
ANR	4069224	Identifier	data		4069204	1					
ANR	4069225	ExpressionStatement	core -> print -> io_unalloc_ch = * node -> value ? node -> value [ 0 ] : ' '	1521:1:41865:41929	4069204	2	True				
ANR	4069226	AssignmentExpression	core -> print -> io_unalloc_ch = * node -> value ? node -> value [ 0 ] : ' '		4069204	0		=			
ANR	4069227	PtrMemberAccess	core -> print -> io_unalloc_ch		4069204	0					
ANR	4069228	PtrMemberAccess	core -> print		4069204	0					
ANR	4069229	Identifier	core		4069204	0					
ANR	4069230	Identifier	print		4069204	1					
ANR	4069231	Identifier	io_unalloc_ch		4069204	1					
ANR	4069232	ConditionalExpression	* node -> value ? node -> value [ 0 ] : ' '		4069204	1					
ANR	4069233	Condition	* node -> value		4069204	0					
ANR	4069234	UnaryOperationExpression	* node -> value		4069204	0					
ANR	4069235	UnaryOperator	*		4069204	0					
ANR	4069236	PtrMemberAccess	node -> value		4069204	1					
ANR	4069237	Identifier	node		4069204	0					
ANR	4069238	Identifier	value		4069204	1					
ANR	4069239	ArrayIndexing	node -> value [ 0 ]		4069204	1					
ANR	4069240	PtrMemberAccess	node -> value		4069204	0					
ANR	4069241	Identifier	node		4069204	0					
ANR	4069242	Identifier	value		4069204	1					
ANR	4069243	PrimaryExpression	0		4069204	1					
ANR	4069244	PrimaryExpression	' '		4069204	2					
ANR	4069245	ReturnStatement	return true ;	1522:1:41932:41943	4069204	3	True				
ANR	4069246	Identifier	true		4069204	0					
ANR	4069247	ReturnType	static bool		4069204	1					
ANR	4069248	Identifier	cb_io_unalloc_ch		4069204	2					
ANR	4069249	ParameterList	"void * user , void * data"		4069204	3					
ANR	4069250	Parameter	void * user	1518:29:41764:41773	4069204	0	True				
ANR	4069251	ParameterType	void *		4069204	0					
ANR	4069252	Identifier	user		4069204	1					
ANR	4069253	Parameter	void * data	1518:41:41776:41785	4069204	1	True				
ANR	4069254	ParameterType	void *		4069204	0					
ANR	4069255	Identifier	data		4069204	1					
ANR	4069256	CFGEntryNode	ENTRY		4069204		True				
ANR	4069257	CFGExitNode	EXIT		4069204		True				
ANR	4069258	Symbol	* node -> value		4069204						
ANR	4069259	Symbol	data		4069204						
ANR	4069260	Symbol	* core		4069204						
ANR	4069261	Symbol	node -> value		4069204						
ANR	4069262	Symbol	core		4069204						
ANR	4069263	Symbol	node		4069204						
ANR	4069264	Symbol	* core -> print		4069204						
ANR	4069265	Symbol	* * node		4069204						
ANR	4069266	Symbol	true		4069204						
ANR	4069267	Symbol	* node		4069204						
ANR	4069268	Symbol	core -> print -> io_unalloc_ch		4069204						
ANR	4069269	Symbol	core -> print		4069204						
ANR	4069270	Symbol	user		4069204						
ANR	4069271	Symbol	* * core		4069204						
ANR	4069272	Function	cb_hex_header	1525:0:41948:42216							
ANR	4069273	FunctionDef	"cb_hex_header (void * user , void * data)"		4069272	0					
ANR	4069274	CompoundStatement		1525:50:41998:42216	4069272	0					
ANR	4069275	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1526:1:42001:42029	4069272	0	True				
ANR	4069276	IdentifierDecl	* core = ( RCore * ) user		4069272	0					
ANR	4069277	IdentifierDeclType	RCore *		4069272	0					
ANR	4069278	Identifier	core		4069272	1					
ANR	4069279	AssignmentExpression	* core = ( RCore * ) user		4069272	2		=			
ANR	4069280	Identifier	core		4069272	0					
ANR	4069281	CastExpression	( RCore * ) user		4069272	1					
ANR	4069282	CastTarget	RCore *		4069272	0					
ANR	4069283	Identifier	user		4069272	1					
ANR	4069284	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1527:1:42032:42072	4069272	1	True				
ANR	4069285	IdentifierDecl	* node = ( RConfigNode * ) data		4069272	0					
ANR	4069286	IdentifierDeclType	RConfigNode *		4069272	0					
ANR	4069287	Identifier	node		4069272	1					
ANR	4069288	AssignmentExpression	* node = ( RConfigNode * ) data		4069272	2		=			
ANR	4069289	Identifier	node		4069272	0					
ANR	4069290	CastExpression	( RConfigNode * ) data		4069272	1					
ANR	4069291	CastTarget	RConfigNode *		4069272	0					
ANR	4069292	Identifier	data		4069272	1					
ANR	4069293	IfStatement	if ( node -> i_value )		4069272	2					
ANR	4069294	Condition	node -> i_value	1528:5:42079:42091	4069272	0	True				
ANR	4069295	PtrMemberAccess	node -> i_value		4069272	0					
ANR	4069296	Identifier	node		4069272	0					
ANR	4069297	Identifier	i_value		4069272	1					
ANR	4069298	CompoundStatement		4:20:95:95	4069272	1					
ANR	4069299	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_HEADER	1529:2:42098:42140	4069272	0	True				
ANR	4069300	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_HEADER		4069272	0		|=			
ANR	4069301	PtrMemberAccess	core -> print -> flags		4069272	0					
ANR	4069302	PtrMemberAccess	core -> print		4069272	0					
ANR	4069303	Identifier	core		4069272	0					
ANR	4069304	Identifier	print		4069272	1					
ANR	4069305	Identifier	flags		4069272	1					
ANR	4069306	Identifier	R_PRINT_FLAGS_HEADER		4069272	1					
ANR	4069307	ElseStatement	else		4069272	0					
ANR	4069308	CompoundStatement		6:8:151:151	4069272	0					
ANR	4069309	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_HEADER	1531:2:42154:42197	4069272	0	True				
ANR	4069310	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_HEADER		4069272	0		&=			
ANR	4069311	PtrMemberAccess	core -> print -> flags		4069272	0					
ANR	4069312	PtrMemberAccess	core -> print		4069272	0					
ANR	4069313	Identifier	core		4069272	0					
ANR	4069314	Identifier	print		4069272	1					
ANR	4069315	Identifier	flags		4069272	1					
ANR	4069316	Identifier	~R_PRINT_FLAGS_HEADER		4069272	1					
ANR	4069317	ReturnStatement	return true ;	1533:1:42203:42214	4069272	3	True				
ANR	4069318	Identifier	true		4069272	0					
ANR	4069319	ReturnType	static bool		4069272	1					
ANR	4069320	Identifier	cb_hex_header		4069272	2					
ANR	4069321	ParameterList	"void * user , void * data"		4069272	3					
ANR	4069322	Parameter	void * user	1525:26:41974:41983	4069272	0	True				
ANR	4069323	ParameterType	void *		4069272	0					
ANR	4069324	Identifier	user		4069272	1					
ANR	4069325	Parameter	void * data	1525:38:41986:41995	4069272	1	True				
ANR	4069326	ParameterType	void *		4069272	0					
ANR	4069327	Identifier	data		4069272	1					
ANR	4069328	CFGEntryNode	ENTRY		4069272		True				
ANR	4069329	CFGExitNode	EXIT		4069272		True				
ANR	4069330	Symbol	~R_PRINT_FLAGS_HEADER		4069272						
ANR	4069331	Symbol	data		4069272						
ANR	4069332	Symbol	* core		4069272						
ANR	4069333	Symbol	node -> i_value		4069272						
ANR	4069334	Symbol	core		4069272						
ANR	4069335	Symbol	node		4069272						
ANR	4069336	Symbol	* core -> print		4069272						
ANR	4069337	Symbol	true		4069272						
ANR	4069338	Symbol	* node		4069272						
ANR	4069339	Symbol	core -> print		4069272						
ANR	4069340	Symbol	user		4069272						
ANR	4069341	Symbol	core -> print -> flags		4069272						
ANR	4069342	Symbol	* * core		4069272						
ANR	4069343	Symbol	R_PRINT_FLAGS_HEADER		4069272						
ANR	4069344	Function	cb_hex_bytes	1536:0:42219:42486							
ANR	4069345	FunctionDef	"cb_hex_bytes (void * user , void * data)"		4069344	0					
ANR	4069346	CompoundStatement		1536:49:42268:42486	4069344	0					
ANR	4069347	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1537:1:42271:42299	4069344	0	True				
ANR	4069348	IdentifierDecl	* core = ( RCore * ) user		4069344	0					
ANR	4069349	IdentifierDeclType	RCore *		4069344	0					
ANR	4069350	Identifier	core		4069344	1					
ANR	4069351	AssignmentExpression	* core = ( RCore * ) user		4069344	2		=			
ANR	4069352	Identifier	core		4069344	0					
ANR	4069353	CastExpression	( RCore * ) user		4069344	1					
ANR	4069354	CastTarget	RCore *		4069344	0					
ANR	4069355	Identifier	user		4069344	1					
ANR	4069356	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1538:1:42302:42342	4069344	1	True				
ANR	4069357	IdentifierDecl	* node = ( RConfigNode * ) data		4069344	0					
ANR	4069358	IdentifierDeclType	RConfigNode *		4069344	0					
ANR	4069359	Identifier	node		4069344	1					
ANR	4069360	AssignmentExpression	* node = ( RConfigNode * ) data		4069344	2		=			
ANR	4069361	Identifier	node		4069344	0					
ANR	4069362	CastExpression	( RConfigNode * ) data		4069344	1					
ANR	4069363	CastTarget	RConfigNode *		4069344	0					
ANR	4069364	Identifier	data		4069344	1					
ANR	4069365	IfStatement	if ( node -> i_value )		4069344	2					
ANR	4069366	Condition	node -> i_value	1539:5:42349:42361	4069344	0	True				
ANR	4069367	PtrMemberAccess	node -> i_value		4069344	0					
ANR	4069368	Identifier	node		4069344	0					
ANR	4069369	Identifier	i_value		4069344	1					
ANR	4069370	CompoundStatement		4:20:95:95	4069344	1					
ANR	4069371	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_NONHEX	1540:2:42368:42411	4069344	0	True				
ANR	4069372	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_NONHEX		4069344	0		&=			
ANR	4069373	PtrMemberAccess	core -> print -> flags		4069344	0					
ANR	4069374	PtrMemberAccess	core -> print		4069344	0					
ANR	4069375	Identifier	core		4069344	0					
ANR	4069376	Identifier	print		4069344	1					
ANR	4069377	Identifier	flags		4069344	1					
ANR	4069378	Identifier	~R_PRINT_FLAGS_NONHEX		4069344	1					
ANR	4069379	ElseStatement	else		4069344	0					
ANR	4069380	CompoundStatement		6:8:152:152	4069344	0					
ANR	4069381	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_NONHEX	1542:2:42425:42467	4069344	0	True				
ANR	4069382	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_NONHEX		4069344	0		|=			
ANR	4069383	PtrMemberAccess	core -> print -> flags		4069344	0					
ANR	4069384	PtrMemberAccess	core -> print		4069344	0					
ANR	4069385	Identifier	core		4069344	0					
ANR	4069386	Identifier	print		4069344	1					
ANR	4069387	Identifier	flags		4069344	1					
ANR	4069388	Identifier	R_PRINT_FLAGS_NONHEX		4069344	1					
ANR	4069389	ReturnStatement	return true ;	1544:1:42473:42484	4069344	3	True				
ANR	4069390	Identifier	true		4069344	0					
ANR	4069391	ReturnType	static bool		4069344	1					
ANR	4069392	Identifier	cb_hex_bytes		4069344	2					
ANR	4069393	ParameterList	"void * user , void * data"		4069344	3					
ANR	4069394	Parameter	void * user	1536:25:42244:42253	4069344	0	True				
ANR	4069395	ParameterType	void *		4069344	0					
ANR	4069396	Identifier	user		4069344	1					
ANR	4069397	Parameter	void * data	1536:37:42256:42265	4069344	1	True				
ANR	4069398	ParameterType	void *		4069344	0					
ANR	4069399	Identifier	data		4069344	1					
ANR	4069400	CFGEntryNode	ENTRY		4069344		True				
ANR	4069401	CFGExitNode	EXIT		4069344		True				
ANR	4069402	Symbol	data		4069344						
ANR	4069403	Symbol	* core		4069344						
ANR	4069404	Symbol	R_PRINT_FLAGS_NONHEX		4069344						
ANR	4069405	Symbol	node -> i_value		4069344						
ANR	4069406	Symbol	~R_PRINT_FLAGS_NONHEX		4069344						
ANR	4069407	Symbol	core		4069344						
ANR	4069408	Symbol	node		4069344						
ANR	4069409	Symbol	* core -> print		4069344						
ANR	4069410	Symbol	true		4069344						
ANR	4069411	Symbol	* node		4069344						
ANR	4069412	Symbol	core -> print		4069344						
ANR	4069413	Symbol	user		4069344						
ANR	4069414	Symbol	* * core		4069344						
ANR	4069415	Symbol	core -> print -> flags		4069344						
ANR	4069416	Function	cb_hex_ascii	1547:0:42489:42760							
ANR	4069417	FunctionDef	"cb_hex_ascii (void * user , void * data)"		4069416	0					
ANR	4069418	CompoundStatement		1547:49:42538:42760	4069416	0					
ANR	4069419	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1548:1:42541:42569	4069416	0	True				
ANR	4069420	IdentifierDecl	* core = ( RCore * ) user		4069416	0					
ANR	4069421	IdentifierDeclType	RCore *		4069416	0					
ANR	4069422	Identifier	core		4069416	1					
ANR	4069423	AssignmentExpression	* core = ( RCore * ) user		4069416	2		=			
ANR	4069424	Identifier	core		4069416	0					
ANR	4069425	CastExpression	( RCore * ) user		4069416	1					
ANR	4069426	CastTarget	RCore *		4069416	0					
ANR	4069427	Identifier	user		4069416	1					
ANR	4069428	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1549:1:42572:42612	4069416	1	True				
ANR	4069429	IdentifierDecl	* node = ( RConfigNode * ) data		4069416	0					
ANR	4069430	IdentifierDeclType	RConfigNode *		4069416	0					
ANR	4069431	Identifier	node		4069416	1					
ANR	4069432	AssignmentExpression	* node = ( RConfigNode * ) data		4069416	2		=			
ANR	4069433	Identifier	node		4069416	0					
ANR	4069434	CastExpression	( RConfigNode * ) data		4069416	1					
ANR	4069435	CastTarget	RConfigNode *		4069416	0					
ANR	4069436	Identifier	data		4069416	1					
ANR	4069437	IfStatement	if ( node -> i_value )		4069416	2					
ANR	4069438	Condition	node -> i_value	1550:5:42619:42631	4069416	0	True				
ANR	4069439	PtrMemberAccess	node -> i_value		4069416	0					
ANR	4069440	Identifier	node		4069416	0					
ANR	4069441	Identifier	i_value		4069416	1					
ANR	4069442	CompoundStatement		4:20:95:95	4069416	1					
ANR	4069443	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_NONASCII	1551:2:42638:42683	4069416	0	True				
ANR	4069444	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_NONASCII		4069416	0		&=			
ANR	4069445	PtrMemberAccess	core -> print -> flags		4069416	0					
ANR	4069446	PtrMemberAccess	core -> print		4069416	0					
ANR	4069447	Identifier	core		4069416	0					
ANR	4069448	Identifier	print		4069416	1					
ANR	4069449	Identifier	flags		4069416	1					
ANR	4069450	Identifier	~R_PRINT_FLAGS_NONASCII		4069416	1					
ANR	4069451	ElseStatement	else		4069416	0					
ANR	4069452	CompoundStatement		6:8:154:154	4069416	0					
ANR	4069453	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_NONASCII	1553:2:42697:42741	4069416	0	True				
ANR	4069454	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_NONASCII		4069416	0		|=			
ANR	4069455	PtrMemberAccess	core -> print -> flags		4069416	0					
ANR	4069456	PtrMemberAccess	core -> print		4069416	0					
ANR	4069457	Identifier	core		4069416	0					
ANR	4069458	Identifier	print		4069416	1					
ANR	4069459	Identifier	flags		4069416	1					
ANR	4069460	Identifier	R_PRINT_FLAGS_NONASCII		4069416	1					
ANR	4069461	ReturnStatement	return true ;	1555:1:42747:42758	4069416	3	True				
ANR	4069462	Identifier	true		4069416	0					
ANR	4069463	ReturnType	static bool		4069416	1					
ANR	4069464	Identifier	cb_hex_ascii		4069416	2					
ANR	4069465	ParameterList	"void * user , void * data"		4069416	3					
ANR	4069466	Parameter	void * user	1547:25:42514:42523	4069416	0	True				
ANR	4069467	ParameterType	void *		4069416	0					
ANR	4069468	Identifier	user		4069416	1					
ANR	4069469	Parameter	void * data	1547:37:42526:42535	4069416	1	True				
ANR	4069470	ParameterType	void *		4069416	0					
ANR	4069471	Identifier	data		4069416	1					
ANR	4069472	CFGEntryNode	ENTRY		4069416		True				
ANR	4069473	CFGExitNode	EXIT		4069416		True				
ANR	4069474	Symbol	data		4069416						
ANR	4069475	Symbol	* core		4069416						
ANR	4069476	Symbol	~R_PRINT_FLAGS_NONASCII		4069416						
ANR	4069477	Symbol	node -> i_value		4069416						
ANR	4069478	Symbol	core		4069416						
ANR	4069479	Symbol	node		4069416						
ANR	4069480	Symbol	* core -> print		4069416						
ANR	4069481	Symbol	R_PRINT_FLAGS_NONASCII		4069416						
ANR	4069482	Symbol	true		4069416						
ANR	4069483	Symbol	* node		4069416						
ANR	4069484	Symbol	core -> print		4069416						
ANR	4069485	Symbol	user		4069416						
ANR	4069486	Symbol	* * core		4069416						
ANR	4069487	Symbol	core -> print -> flags		4069416						
ANR	4069488	Function	cb_hex_style	1558:0:42763:43028							
ANR	4069489	FunctionDef	"cb_hex_style (void * user , void * data)"		4069488	0					
ANR	4069490	CompoundStatement		1558:49:42812:43028	4069488	0					
ANR	4069491	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1559:1:42815:42843	4069488	0	True				
ANR	4069492	IdentifierDecl	* core = ( RCore * ) user		4069488	0					
ANR	4069493	IdentifierDeclType	RCore *		4069488	0					
ANR	4069494	Identifier	core		4069488	1					
ANR	4069495	AssignmentExpression	* core = ( RCore * ) user		4069488	2		=			
ANR	4069496	Identifier	core		4069488	0					
ANR	4069497	CastExpression	( RCore * ) user		4069488	1					
ANR	4069498	CastTarget	RCore *		4069488	0					
ANR	4069499	Identifier	user		4069488	1					
ANR	4069500	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1560:1:42846:42886	4069488	1	True				
ANR	4069501	IdentifierDecl	* node = ( RConfigNode * ) data		4069488	0					
ANR	4069502	IdentifierDeclType	RConfigNode *		4069488	0					
ANR	4069503	Identifier	node		4069488	1					
ANR	4069504	AssignmentExpression	* node = ( RConfigNode * ) data		4069488	2		=			
ANR	4069505	Identifier	node		4069488	0					
ANR	4069506	CastExpression	( RConfigNode * ) data		4069488	1					
ANR	4069507	CastTarget	RConfigNode *		4069488	0					
ANR	4069508	Identifier	data		4069488	1					
ANR	4069509	IfStatement	if ( node -> i_value )		4069488	2					
ANR	4069510	Condition	node -> i_value	1561:5:42893:42905	4069488	0	True				
ANR	4069511	PtrMemberAccess	node -> i_value		4069488	0					
ANR	4069512	Identifier	node		4069488	0					
ANR	4069513	Identifier	i_value		4069488	1					
ANR	4069514	CompoundStatement		4:20:95:95	4069488	1					
ANR	4069515	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_STYLE	1562:2:42912:42953	4069488	0	True				
ANR	4069516	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_STYLE		4069488	0		|=			
ANR	4069517	PtrMemberAccess	core -> print -> flags		4069488	0					
ANR	4069518	PtrMemberAccess	core -> print		4069488	0					
ANR	4069519	Identifier	core		4069488	0					
ANR	4069520	Identifier	print		4069488	1					
ANR	4069521	Identifier	flags		4069488	1					
ANR	4069522	Identifier	R_PRINT_FLAGS_STYLE		4069488	1					
ANR	4069523	ElseStatement	else		4069488	0					
ANR	4069524	CompoundStatement		6:8:150:150	4069488	0					
ANR	4069525	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_STYLE	1564:2:42967:43009	4069488	0	True				
ANR	4069526	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_STYLE		4069488	0		&=			
ANR	4069527	PtrMemberAccess	core -> print -> flags		4069488	0					
ANR	4069528	PtrMemberAccess	core -> print		4069488	0					
ANR	4069529	Identifier	core		4069488	0					
ANR	4069530	Identifier	print		4069488	1					
ANR	4069531	Identifier	flags		4069488	1					
ANR	4069532	Identifier	~R_PRINT_FLAGS_STYLE		4069488	1					
ANR	4069533	ReturnStatement	return true ;	1566:1:43015:43026	4069488	3	True				
ANR	4069534	Identifier	true		4069488	0					
ANR	4069535	ReturnType	static bool		4069488	1					
ANR	4069536	Identifier	cb_hex_style		4069488	2					
ANR	4069537	ParameterList	"void * user , void * data"		4069488	3					
ANR	4069538	Parameter	void * user	1558:25:42788:42797	4069488	0	True				
ANR	4069539	ParameterType	void *		4069488	0					
ANR	4069540	Identifier	user		4069488	1					
ANR	4069541	Parameter	void * data	1558:37:42800:42809	4069488	1	True				
ANR	4069542	ParameterType	void *		4069488	0					
ANR	4069543	Identifier	data		4069488	1					
ANR	4069544	CFGEntryNode	ENTRY		4069488		True				
ANR	4069545	CFGExitNode	EXIT		4069488		True				
ANR	4069546	Symbol	R_PRINT_FLAGS_STYLE		4069488						
ANR	4069547	Symbol	data		4069488						
ANR	4069548	Symbol	* core		4069488						
ANR	4069549	Symbol	node -> i_value		4069488						
ANR	4069550	Symbol	core		4069488						
ANR	4069551	Symbol	node		4069488						
ANR	4069552	Symbol	* core -> print		4069488						
ANR	4069553	Symbol	true		4069488						
ANR	4069554	Symbol	* node		4069488						
ANR	4069555	Symbol	core -> print		4069488						
ANR	4069556	Symbol	~R_PRINT_FLAGS_STYLE		4069488						
ANR	4069557	Symbol	user		4069488						
ANR	4069558	Symbol	core -> print -> flags		4069488						
ANR	4069559	Symbol	* * core		4069488						
ANR	4069560	Function	cb_hex_hdroff	1569:0:43031:43299							
ANR	4069561	FunctionDef	"cb_hex_hdroff (void * user , void * data)"		4069560	0					
ANR	4069562	CompoundStatement		1569:50:43081:43299	4069560	0					
ANR	4069563	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1570:1:43084:43112	4069560	0	True				
ANR	4069564	IdentifierDecl	* core = ( RCore * ) user		4069560	0					
ANR	4069565	IdentifierDeclType	RCore *		4069560	0					
ANR	4069566	Identifier	core		4069560	1					
ANR	4069567	AssignmentExpression	* core = ( RCore * ) user		4069560	2		=			
ANR	4069568	Identifier	core		4069560	0					
ANR	4069569	CastExpression	( RCore * ) user		4069560	1					
ANR	4069570	CastTarget	RCore *		4069560	0					
ANR	4069571	Identifier	user		4069560	1					
ANR	4069572	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1571:1:43115:43155	4069560	1	True				
ANR	4069573	IdentifierDecl	* node = ( RConfigNode * ) data		4069560	0					
ANR	4069574	IdentifierDeclType	RConfigNode *		4069560	0					
ANR	4069575	Identifier	node		4069560	1					
ANR	4069576	AssignmentExpression	* node = ( RConfigNode * ) data		4069560	2		=			
ANR	4069577	Identifier	node		4069560	0					
ANR	4069578	CastExpression	( RConfigNode * ) data		4069560	1					
ANR	4069579	CastTarget	RConfigNode *		4069560	0					
ANR	4069580	Identifier	data		4069560	1					
ANR	4069581	IfStatement	if ( node -> i_value )		4069560	2					
ANR	4069582	Condition	node -> i_value	1572:5:43162:43174	4069560	0	True				
ANR	4069583	PtrMemberAccess	node -> i_value		4069560	0					
ANR	4069584	Identifier	node		4069560	0					
ANR	4069585	Identifier	i_value		4069560	1					
ANR	4069586	CompoundStatement		4:20:95:95	4069560	1					
ANR	4069587	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_HDROFF	1573:2:43181:43223	4069560	0	True				
ANR	4069588	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_HDROFF		4069560	0		|=			
ANR	4069589	PtrMemberAccess	core -> print -> flags		4069560	0					
ANR	4069590	PtrMemberAccess	core -> print		4069560	0					
ANR	4069591	Identifier	core		4069560	0					
ANR	4069592	Identifier	print		4069560	1					
ANR	4069593	Identifier	flags		4069560	1					
ANR	4069594	Identifier	R_PRINT_FLAGS_HDROFF		4069560	1					
ANR	4069595	ElseStatement	else		4069560	0					
ANR	4069596	CompoundStatement		6:8:151:151	4069560	0					
ANR	4069597	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_HDROFF	1575:2:43237:43280	4069560	0	True				
ANR	4069598	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_HDROFF		4069560	0		&=			
ANR	4069599	PtrMemberAccess	core -> print -> flags		4069560	0					
ANR	4069600	PtrMemberAccess	core -> print		4069560	0					
ANR	4069601	Identifier	core		4069560	0					
ANR	4069602	Identifier	print		4069560	1					
ANR	4069603	Identifier	flags		4069560	1					
ANR	4069604	Identifier	~R_PRINT_FLAGS_HDROFF		4069560	1					
ANR	4069605	ReturnStatement	return true ;	1577:1:43286:43297	4069560	3	True				
ANR	4069606	Identifier	true		4069560	0					
ANR	4069607	ReturnType	static bool		4069560	1					
ANR	4069608	Identifier	cb_hex_hdroff		4069560	2					
ANR	4069609	ParameterList	"void * user , void * data"		4069560	3					
ANR	4069610	Parameter	void * user	1569:26:43057:43066	4069560	0	True				
ANR	4069611	ParameterType	void *		4069560	0					
ANR	4069612	Identifier	user		4069560	1					
ANR	4069613	Parameter	void * data	1569:38:43069:43078	4069560	1	True				
ANR	4069614	ParameterType	void *		4069560	0					
ANR	4069615	Identifier	data		4069560	1					
ANR	4069616	CFGEntryNode	ENTRY		4069560		True				
ANR	4069617	CFGExitNode	EXIT		4069560		True				
ANR	4069618	Symbol	data		4069560						
ANR	4069619	Symbol	R_PRINT_FLAGS_HDROFF		4069560						
ANR	4069620	Symbol	* core		4069560						
ANR	4069621	Symbol	node -> i_value		4069560						
ANR	4069622	Symbol	core		4069560						
ANR	4069623	Symbol	node		4069560						
ANR	4069624	Symbol	* core -> print		4069560						
ANR	4069625	Symbol	~R_PRINT_FLAGS_HDROFF		4069560						
ANR	4069626	Symbol	true		4069560						
ANR	4069627	Symbol	* node		4069560						
ANR	4069628	Symbol	core -> print		4069560						
ANR	4069629	Symbol	user		4069560						
ANR	4069630	Symbol	core -> print -> flags		4069560						
ANR	4069631	Symbol	* * core		4069560						
ANR	4069632	Function	cb_log_events	1580:0:43302:43478							
ANR	4069633	FunctionDef	"cb_log_events (void * user , void * data)"		4069632	0					
ANR	4069634	CompoundStatement		1580:51:43353:43478	4069632	0					
ANR	4069635	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1581:1:43356:43384	4069632	0	True				
ANR	4069636	IdentifierDecl	* core = ( RCore * ) user		4069632	0					
ANR	4069637	IdentifierDeclType	RCore *		4069632	0					
ANR	4069638	Identifier	core		4069632	1					
ANR	4069639	AssignmentExpression	* core = ( RCore * ) user		4069632	2		=			
ANR	4069640	Identifier	core		4069632	0					
ANR	4069641	CastExpression	( RCore * ) user		4069632	1					
ANR	4069642	CastTarget	RCore *		4069632	0					
ANR	4069643	Identifier	user		4069632	1					
ANR	4069644	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1582:1:43387:43427	4069632	1	True				
ANR	4069645	IdentifierDecl	* node = ( RConfigNode * ) data		4069632	0					
ANR	4069646	IdentifierDeclType	RConfigNode *		4069632	0					
ANR	4069647	Identifier	node		4069632	1					
ANR	4069648	AssignmentExpression	* node = ( RConfigNode * ) data		4069632	2		=			
ANR	4069649	Identifier	node		4069632	0					
ANR	4069650	CastExpression	( RConfigNode * ) data		4069632	1					
ANR	4069651	CastTarget	RConfigNode *		4069632	0					
ANR	4069652	Identifier	data		4069632	1					
ANR	4069653	ExpressionStatement	core -> log_events = node -> i_value	1583:1:43430:43462	4069632	2	True				
ANR	4069654	AssignmentExpression	core -> log_events = node -> i_value		4069632	0		=			
ANR	4069655	PtrMemberAccess	core -> log_events		4069632	0					
ANR	4069656	Identifier	core		4069632	0					
ANR	4069657	Identifier	log_events		4069632	1					
ANR	4069658	PtrMemberAccess	node -> i_value		4069632	1					
ANR	4069659	Identifier	node		4069632	0					
ANR	4069660	Identifier	i_value		4069632	1					
ANR	4069661	ReturnStatement	return true ;	1584:1:43465:43476	4069632	3	True				
ANR	4069662	Identifier	true		4069632	0					
ANR	4069663	ReturnType	static bool		4069632	1					
ANR	4069664	Identifier	cb_log_events		4069632	2					
ANR	4069665	ParameterList	"void * user , void * data"		4069632	3					
ANR	4069666	Parameter	void * user	1580:27:43329:43338	4069632	0	True				
ANR	4069667	ParameterType	void *		4069632	0					
ANR	4069668	Identifier	user		4069632	1					
ANR	4069669	Parameter	void * data	1580:39:43341:43350	4069632	1	True				
ANR	4069670	ParameterType	void *		4069632	0					
ANR	4069671	Identifier	data		4069632	1					
ANR	4069672	CFGEntryNode	ENTRY		4069632		True				
ANR	4069673	CFGExitNode	EXIT		4069632		True				
ANR	4069674	Symbol	core		4069632						
ANR	4069675	Symbol	node		4069632						
ANR	4069676	Symbol	data		4069632						
ANR	4069677	Symbol	* core		4069632						
ANR	4069678	Symbol	true		4069632						
ANR	4069679	Symbol	* node		4069632						
ANR	4069680	Symbol	user		4069632						
ANR	4069681	Symbol	core -> log_events		4069632						
ANR	4069682	Symbol	node -> i_value		4069632						
ANR	4069683	Function	cb_hexcomments	1587:0:43481:43752							
ANR	4069684	FunctionDef	"cb_hexcomments (void * user , void * data)"		4069683	0					
ANR	4069685	CompoundStatement		1587:51:43532:43752	4069683	0					
ANR	4069686	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1588:1:43535:43563	4069683	0	True				
ANR	4069687	IdentifierDecl	* core = ( RCore * ) user		4069683	0					
ANR	4069688	IdentifierDeclType	RCore *		4069683	0					
ANR	4069689	Identifier	core		4069683	1					
ANR	4069690	AssignmentExpression	* core = ( RCore * ) user		4069683	2		=			
ANR	4069691	Identifier	core		4069683	0					
ANR	4069692	CastExpression	( RCore * ) user		4069683	1					
ANR	4069693	CastTarget	RCore *		4069683	0					
ANR	4069694	Identifier	user		4069683	1					
ANR	4069695	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1589:1:43566:43606	4069683	1	True				
ANR	4069696	IdentifierDecl	* node = ( RConfigNode * ) data		4069683	0					
ANR	4069697	IdentifierDeclType	RConfigNode *		4069683	0					
ANR	4069698	Identifier	node		4069683	1					
ANR	4069699	AssignmentExpression	* node = ( RConfigNode * ) data		4069683	2		=			
ANR	4069700	Identifier	node		4069683	0					
ANR	4069701	CastExpression	( RConfigNode * ) data		4069683	1					
ANR	4069702	CastTarget	RConfigNode *		4069683	0					
ANR	4069703	Identifier	data		4069683	1					
ANR	4069704	IfStatement	if ( node -> i_value )		4069683	2					
ANR	4069705	Condition	node -> i_value	1590:5:43613:43625	4069683	0	True				
ANR	4069706	PtrMemberAccess	node -> i_value		4069683	0					
ANR	4069707	Identifier	node		4069683	0					
ANR	4069708	Identifier	i_value		4069683	1					
ANR	4069709	CompoundStatement		4:20:95:95	4069683	1					
ANR	4069710	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_COMMENT	1591:2:43632:43675	4069683	0	True				
ANR	4069711	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_COMMENT		4069683	0		|=			
ANR	4069712	PtrMemberAccess	core -> print -> flags		4069683	0					
ANR	4069713	PtrMemberAccess	core -> print		4069683	0					
ANR	4069714	Identifier	core		4069683	0					
ANR	4069715	Identifier	print		4069683	1					
ANR	4069716	Identifier	flags		4069683	1					
ANR	4069717	Identifier	R_PRINT_FLAGS_COMMENT		4069683	1					
ANR	4069718	ElseStatement	else		4069683	0					
ANR	4069719	CompoundStatement		6:8:152:152	4069683	0					
ANR	4069720	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_COMMENT	1593:2:43689:43733	4069683	0	True				
ANR	4069721	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_COMMENT		4069683	0		&=			
ANR	4069722	PtrMemberAccess	core -> print -> flags		4069683	0					
ANR	4069723	PtrMemberAccess	core -> print		4069683	0					
ANR	4069724	Identifier	core		4069683	0					
ANR	4069725	Identifier	print		4069683	1					
ANR	4069726	Identifier	flags		4069683	1					
ANR	4069727	Identifier	~R_PRINT_FLAGS_COMMENT		4069683	1					
ANR	4069728	ReturnStatement	return true ;	1595:1:43739:43750	4069683	3	True				
ANR	4069729	Identifier	true		4069683	0					
ANR	4069730	ReturnType	static bool		4069683	1					
ANR	4069731	Identifier	cb_hexcomments		4069683	2					
ANR	4069732	ParameterList	"void * user , void * data"		4069683	3					
ANR	4069733	Parameter	void * user	1587:27:43508:43517	4069683	0	True				
ANR	4069734	ParameterType	void *		4069683	0					
ANR	4069735	Identifier	user		4069683	1					
ANR	4069736	Parameter	void * data	1587:39:43520:43529	4069683	1	True				
ANR	4069737	ParameterType	void *		4069683	0					
ANR	4069738	Identifier	data		4069683	1					
ANR	4069739	CFGEntryNode	ENTRY		4069683		True				
ANR	4069740	CFGExitNode	EXIT		4069683		True				
ANR	4069741	Symbol	data		4069683						
ANR	4069742	Symbol	* core		4069683						
ANR	4069743	Symbol	R_PRINT_FLAGS_COMMENT		4069683						
ANR	4069744	Symbol	node -> i_value		4069683						
ANR	4069745	Symbol	core		4069683						
ANR	4069746	Symbol	node		4069683						
ANR	4069747	Symbol	* core -> print		4069683						
ANR	4069748	Symbol	~R_PRINT_FLAGS_COMMENT		4069683						
ANR	4069749	Symbol	true		4069683						
ANR	4069750	Symbol	* node		4069683						
ANR	4069751	Symbol	core -> print		4069683						
ANR	4069752	Symbol	user		4069683						
ANR	4069753	Symbol	core -> print -> flags		4069683						
ANR	4069754	Symbol	* * core		4069683						
ANR	4069755	Function	cb_iopcache	1598:0:43755:44258							
ANR	4069756	FunctionDef	"cb_iopcache (void * user , void * data)"		4069755	0					
ANR	4069757	CompoundStatement		1598:48:43803:44258	4069755	0					
ANR	4069758	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1599:1:43806:43834	4069755	0	True				
ANR	4069759	IdentifierDecl	* core = ( RCore * ) user		4069755	0					
ANR	4069760	IdentifierDeclType	RCore *		4069755	0					
ANR	4069761	Identifier	core		4069755	1					
ANR	4069762	AssignmentExpression	* core = ( RCore * ) user		4069755	2		=			
ANR	4069763	Identifier	core		4069755	0					
ANR	4069764	CastExpression	( RCore * ) user		4069755	1					
ANR	4069765	CastTarget	RCore *		4069755	0					
ANR	4069766	Identifier	user		4069755	1					
ANR	4069767	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1600:1:43837:43877	4069755	1	True				
ANR	4069768	IdentifierDecl	* node = ( RConfigNode * ) data		4069755	0					
ANR	4069769	IdentifierDeclType	RConfigNode *		4069755	0					
ANR	4069770	Identifier	node		4069755	1					
ANR	4069771	AssignmentExpression	* node = ( RConfigNode * ) data		4069755	2		=			
ANR	4069772	Identifier	node		4069755	0					
ANR	4069773	CastExpression	( RConfigNode * ) data		4069755	1					
ANR	4069774	CastTarget	RConfigNode *		4069755	0					
ANR	4069775	Identifier	data		4069755	1					
ANR	4069776	IfStatement	if ( ( bool ) node -> i_value )		4069755	2					
ANR	4069777	Condition	( bool ) node -> i_value	1601:5:43884:43902	4069755	0	True				
ANR	4069778	CastExpression	( bool ) node -> i_value		4069755	0					
ANR	4069779	CastTarget	bool		4069755	0					
ANR	4069780	PtrMemberAccess	node -> i_value		4069755	1					
ANR	4069781	Identifier	node		4069755	0					
ANR	4069782	Identifier	i_value		4069755	1					
ANR	4069783	CompoundStatement		4:26:101:101	4069755	1					
ANR	4069784	IfStatement	if ( core )		4069755	0					
ANR	4069785	Condition	core	1602:6:43913:43916	4069755	0	True				
ANR	4069786	Identifier	core		4069755	0					
ANR	4069787	CompoundStatement		5:12:115:115	4069755	1					
ANR	4069788	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache.read"" , true )"	1603:3:43924:43977	4069755	0	True				
ANR	4069789	CallExpression	"r_config_set_i ( core -> config , ""io.pcache.read"" , true )"		4069755	0					
ANR	4069790	Callee	r_config_set_i		4069755	0					
ANR	4069791	Identifier	r_config_set_i		4069755	0					
ANR	4069792	ArgumentList	core -> config		4069755	1					
ANR	4069793	Argument	core -> config		4069755	0					
ANR	4069794	PtrMemberAccess	core -> config		4069755	0					
ANR	4069795	Identifier	core		4069755	0					
ANR	4069796	Identifier	config		4069755	1					
ANR	4069797	Argument	"""io.pcache.read"""		4069755	1					
ANR	4069798	PrimaryExpression	"""io.pcache.read"""		4069755	0					
ANR	4069799	Argument	true		4069755	2					
ANR	4069800	Identifier	true		4069755	0					
ANR	4069801	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache.write"" , true )"	1604:3:43982:44036	4069755	1	True				
ANR	4069802	CallExpression	"r_config_set_i ( core -> config , ""io.pcache.write"" , true )"		4069755	0					
ANR	4069803	Callee	r_config_set_i		4069755	0					
ANR	4069804	Identifier	r_config_set_i		4069755	0					
ANR	4069805	ArgumentList	core -> config		4069755	1					
ANR	4069806	Argument	core -> config		4069755	0					
ANR	4069807	PtrMemberAccess	core -> config		4069755	0					
ANR	4069808	Identifier	core		4069755	0					
ANR	4069809	Identifier	config		4069755	1					
ANR	4069810	Argument	"""io.pcache.write"""		4069755	1					
ANR	4069811	PrimaryExpression	"""io.pcache.write"""		4069755	0					
ANR	4069812	Argument	true		4069755	2					
ANR	4069813	Identifier	true		4069755	0					
ANR	4069814	ElseStatement	else		4069755	0					
ANR	4069815	CompoundStatement		9:8:246:246	4069755	0					
ANR	4069816	IfStatement	if ( core && core -> io )		4069755	0					
ANR	4069817	Condition	core && core -> io	1607:6:44058:44073	4069755	0	True				
ANR	4069818	AndExpression	core && core -> io		4069755	0		&&			
ANR	4069819	Identifier	core		4069755	0					
ANR	4069820	PtrMemberAccess	core -> io		4069755	1					
ANR	4069821	Identifier	core		4069755	0					
ANR	4069822	Identifier	io		4069755	1					
ANR	4069823	CompoundStatement		10:24:272:272	4069755	1					
ANR	4069824	ExpressionStatement	r_io_desc_cache_fini_all ( core -> io )	1608:3:44081:44116	4069755	0	True				
ANR	4069825	CallExpression	r_io_desc_cache_fini_all ( core -> io )		4069755	0					
ANR	4069826	Callee	r_io_desc_cache_fini_all		4069755	0					
ANR	4069827	Identifier	r_io_desc_cache_fini_all		4069755	0					
ANR	4069828	ArgumentList	core -> io		4069755	1					
ANR	4069829	Argument	core -> io		4069755	0					
ANR	4069830	PtrMemberAccess	core -> io		4069755	0					
ANR	4069831	Identifier	core		4069755	0					
ANR	4069832	Identifier	io		4069755	1					
ANR	4069833	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache.read"" , false )"	1609:3:44121:44175	4069755	1	True				
ANR	4069834	CallExpression	"r_config_set_i ( core -> config , ""io.pcache.read"" , false )"		4069755	0					
ANR	4069835	Callee	r_config_set_i		4069755	0					
ANR	4069836	Identifier	r_config_set_i		4069755	0					
ANR	4069837	ArgumentList	core -> config		4069755	1					
ANR	4069838	Argument	core -> config		4069755	0					
ANR	4069839	PtrMemberAccess	core -> config		4069755	0					
ANR	4069840	Identifier	core		4069755	0					
ANR	4069841	Identifier	config		4069755	1					
ANR	4069842	Argument	"""io.pcache.read"""		4069755	1					
ANR	4069843	PrimaryExpression	"""io.pcache.read"""		4069755	0					
ANR	4069844	Argument	false		4069755	2					
ANR	4069845	Identifier	false		4069755	0					
ANR	4069846	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache.write"" , false )"	1610:3:44180:44235	4069755	2	True				
ANR	4069847	CallExpression	"r_config_set_i ( core -> config , ""io.pcache.write"" , false )"		4069755	0					
ANR	4069848	Callee	r_config_set_i		4069755	0					
ANR	4069849	Identifier	r_config_set_i		4069755	0					
ANR	4069850	ArgumentList	core -> config		4069755	1					
ANR	4069851	Argument	core -> config		4069755	0					
ANR	4069852	PtrMemberAccess	core -> config		4069755	0					
ANR	4069853	Identifier	core		4069755	0					
ANR	4069854	Identifier	config		4069755	1					
ANR	4069855	Argument	"""io.pcache.write"""		4069755	1					
ANR	4069856	PrimaryExpression	"""io.pcache.write"""		4069755	0					
ANR	4069857	Argument	false		4069755	2					
ANR	4069858	Identifier	false		4069755	0					
ANR	4069859	ReturnStatement	return true ;	1613:1:44245:44256	4069755	3	True				
ANR	4069860	Identifier	true		4069755	0					
ANR	4069861	ReturnType	static bool		4069755	1					
ANR	4069862	Identifier	cb_iopcache		4069755	2					
ANR	4069863	ParameterList	"void * user , void * data"		4069755	3					
ANR	4069864	Parameter	void * user	1598:24:43779:43788	4069755	0	True				
ANR	4069865	ParameterType	void *		4069755	0					
ANR	4069866	Identifier	user		4069755	1					
ANR	4069867	Parameter	void * data	1598:36:43791:43800	4069755	1	True				
ANR	4069868	ParameterType	void *		4069755	0					
ANR	4069869	Identifier	data		4069755	1					
ANR	4069870	CFGEntryNode	ENTRY		4069755		True				
ANR	4069871	CFGExitNode	EXIT		4069755		True				
ANR	4069872	Symbol	core -> config		4069755						
ANR	4069873	Symbol	core		4069755						
ANR	4069874	Symbol	node		4069755						
ANR	4069875	Symbol	data		4069755						
ANR	4069876	Symbol	core -> io		4069755						
ANR	4069877	Symbol	true		4069755						
ANR	4069878	Symbol	* core		4069755						
ANR	4069879	Symbol	false		4069755						
ANR	4069880	Symbol	* node		4069755						
ANR	4069881	Symbol	user		4069755						
ANR	4069882	Symbol	node -> i_value		4069755						
ANR	4069883	Function	cb_iopcacheread	1616:0:44261:44715							
ANR	4069884	FunctionDef	"cb_iopcacheread (void * user , void * data)"		4069883	0					
ANR	4069885	CompoundStatement		1616:52:44313:44715	4069883	0					
ANR	4069886	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1617:1:44316:44344	4069883	0	True				
ANR	4069887	IdentifierDecl	* core = ( RCore * ) user		4069883	0					
ANR	4069888	IdentifierDeclType	RCore *		4069883	0					
ANR	4069889	Identifier	core		4069883	1					
ANR	4069890	AssignmentExpression	* core = ( RCore * ) user		4069883	2		=			
ANR	4069891	Identifier	core		4069883	0					
ANR	4069892	CastExpression	( RCore * ) user		4069883	1					
ANR	4069893	CastTarget	RCore *		4069883	0					
ANR	4069894	Identifier	user		4069883	1					
ANR	4069895	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1618:1:44347:44387	4069883	1	True				
ANR	4069896	IdentifierDecl	* node = ( RConfigNode * ) data		4069883	0					
ANR	4069897	IdentifierDeclType	RConfigNode *		4069883	0					
ANR	4069898	Identifier	node		4069883	1					
ANR	4069899	AssignmentExpression	* node = ( RConfigNode * ) data		4069883	2		=			
ANR	4069900	Identifier	node		4069883	0					
ANR	4069901	CastExpression	( RConfigNode * ) data		4069883	1					
ANR	4069902	CastTarget	RConfigNode *		4069883	0					
ANR	4069903	Identifier	data		4069883	1					
ANR	4069904	IfStatement	if ( ( bool ) node -> i_value )		4069883	2					
ANR	4069905	Condition	( bool ) node -> i_value	1619:5:44394:44412	4069883	0	True				
ANR	4069906	CastExpression	( bool ) node -> i_value		4069883	0					
ANR	4069907	CastTarget	bool		4069883	0					
ANR	4069908	PtrMemberAccess	node -> i_value		4069883	1					
ANR	4069909	Identifier	node		4069883	0					
ANR	4069910	Identifier	i_value		4069883	1					
ANR	4069911	CompoundStatement		4:26:101:101	4069883	1					
ANR	4069912	IfStatement	if ( core && core -> io )		4069883	0					
ANR	4069913	Condition	core && core -> io	1620:6:44423:44438	4069883	0	True				
ANR	4069914	AndExpression	core && core -> io		4069883	0		&&			
ANR	4069915	Identifier	core		4069883	0					
ANR	4069916	PtrMemberAccess	core -> io		4069883	1					
ANR	4069917	Identifier	core		4069883	0					
ANR	4069918	Identifier	io		4069883	1					
ANR	4069919	CompoundStatement		5:24:127:127	4069883	1					
ANR	4069920	ExpressionStatement	core -> io -> p_cache |= 1	1621:3:44446:44468	4069883	0	True				
ANR	4069921	AssignmentExpression	core -> io -> p_cache |= 1		4069883	0		|=			
ANR	4069922	PtrMemberAccess	core -> io -> p_cache		4069883	0					
ANR	4069923	PtrMemberAccess	core -> io		4069883	0					
ANR	4069924	Identifier	core		4069883	0					
ANR	4069925	Identifier	io		4069883	1					
ANR	4069926	Identifier	p_cache		4069883	1					
ANR	4069927	PrimaryExpression	1		4069883	1					
ANR	4069928	ElseStatement	else		4069883	0					
ANR	4069929	CompoundStatement		8:8:168:168	4069883	0					
ANR	4069930	IfStatement	if ( core && core -> io && core -> io -> p_cache )		4069883	0					
ANR	4069931	Condition	core && core -> io && core -> io -> p_cache	1624:6:44490:44526	4069883	0	True				
ANR	4069932	AndExpression	core && core -> io && core -> io -> p_cache		4069883	0		&&			
ANR	4069933	Identifier	core		4069883	0					
ANR	4069934	AndExpression	core -> io && core -> io -> p_cache		4069883	1		&&			
ANR	4069935	PtrMemberAccess	core -> io		4069883	0					
ANR	4069936	Identifier	core		4069883	0					
ANR	4069937	Identifier	io		4069883	1					
ANR	4069938	PtrMemberAccess	core -> io -> p_cache		4069883	1					
ANR	4069939	PtrMemberAccess	core -> io		4069883	0					
ANR	4069940	Identifier	core		4069883	0					
ANR	4069941	Identifier	io		4069883	1					
ANR	4069942	Identifier	p_cache		4069883	1					
ANR	4069943	CompoundStatement		9:45:215:215	4069883	1					
ANR	4069944	ExpressionStatement	core -> io -> p_cache &= 2	1625:3:44534:44556	4069883	0	True				
ANR	4069945	AssignmentExpression	core -> io -> p_cache &= 2		4069883	0		&=			
ANR	4069946	PtrMemberAccess	core -> io -> p_cache		4069883	0					
ANR	4069947	PtrMemberAccess	core -> io		4069883	0					
ANR	4069948	Identifier	core		4069883	0					
ANR	4069949	Identifier	io		4069883	1					
ANR	4069950	Identifier	p_cache		4069883	1					
ANR	4069951	PrimaryExpression	2		4069883	1					
ANR	4069952	IfStatement	if ( ! ( core -> io -> p_cache & 2 ) )		4069883	1					
ANR	4069953	Condition	! ( core -> io -> p_cache & 2 )	1626:7:44565:44588	4069883	0	True				
ANR	4069954	UnaryOperationExpression	! ( core -> io -> p_cache & 2 )		4069883	0					
ANR	4069955	UnaryOperator	!		4069883	0					
ANR	4069956	BitAndExpression	core -> io -> p_cache & 2		4069883	1		&			
ANR	4069957	PtrMemberAccess	core -> io -> p_cache		4069883	0					
ANR	4069958	PtrMemberAccess	core -> io		4069883	0					
ANR	4069959	Identifier	core		4069883	0					
ANR	4069960	Identifier	io		4069883	1					
ANR	4069961	Identifier	p_cache		4069883	1					
ANR	4069962	PrimaryExpression	2		4069883	1					
ANR	4069963	CompoundStatement		11:33:277:277	4069883	1					
ANR	4069964	ExpressionStatement	r_io_desc_cache_fini_all ( core -> io )	1627:4:44597:44632	4069883	0	True				
ANR	4069965	CallExpression	r_io_desc_cache_fini_all ( core -> io )		4069883	0					
ANR	4069966	Callee	r_io_desc_cache_fini_all		4069883	0					
ANR	4069967	Identifier	r_io_desc_cache_fini_all		4069883	0					
ANR	4069968	ArgumentList	core -> io		4069883	1					
ANR	4069969	Argument	core -> io		4069883	0					
ANR	4069970	PtrMemberAccess	core -> io		4069883	0					
ANR	4069971	Identifier	core		4069883	0					
ANR	4069972	Identifier	io		4069883	1					
ANR	4069973	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache"" , false )"	1628:4:44638:44687	4069883	1	True				
ANR	4069974	CallExpression	"r_config_set_i ( core -> config , ""io.pcache"" , false )"		4069883	0					
ANR	4069975	Callee	r_config_set_i		4069883	0					
ANR	4069976	Identifier	r_config_set_i		4069883	0					
ANR	4069977	ArgumentList	core -> config		4069883	1					
ANR	4069978	Argument	core -> config		4069883	0					
ANR	4069979	PtrMemberAccess	core -> config		4069883	0					
ANR	4069980	Identifier	core		4069883	0					
ANR	4069981	Identifier	config		4069883	1					
ANR	4069982	Argument	"""io.pcache"""		4069883	1					
ANR	4069983	PrimaryExpression	"""io.pcache"""		4069883	0					
ANR	4069984	Argument	false		4069883	2					
ANR	4069985	Identifier	false		4069883	0					
ANR	4069986	ReturnStatement	return true ;	1632:1:44702:44713	4069883	3	True				
ANR	4069987	Identifier	true		4069883	0					
ANR	4069988	ReturnType	static bool		4069883	1					
ANR	4069989	Identifier	cb_iopcacheread		4069883	2					
ANR	4069990	ParameterList	"void * user , void * data"		4069883	3					
ANR	4069991	Parameter	void * user	1616:28:44289:44298	4069883	0	True				
ANR	4069992	ParameterType	void *		4069883	0					
ANR	4069993	Identifier	user		4069883	1					
ANR	4069994	Parameter	void * data	1616:40:44301:44310	4069883	1	True				
ANR	4069995	ParameterType	void *		4069883	0					
ANR	4069996	Identifier	data		4069883	1					
ANR	4069997	CFGEntryNode	ENTRY		4069883		True				
ANR	4069998	CFGExitNode	EXIT		4069883		True				
ANR	4069999	Symbol	core -> io -> p_cache		4069883						
ANR	4070000	Symbol	core -> config		4069883						
ANR	4070001	Symbol	data		4069883						
ANR	4070002	Symbol	* core		4069883						
ANR	4070003	Symbol	false		4069883						
ANR	4070004	Symbol	node -> i_value		4069883						
ANR	4070005	Symbol	core		4069883						
ANR	4070006	Symbol	node		4069883						
ANR	4070007	Symbol	* core -> io		4069883						
ANR	4070008	Symbol	core -> io		4069883						
ANR	4070009	Symbol	true		4069883						
ANR	4070010	Symbol	* node		4069883						
ANR	4070011	Symbol	user		4069883						
ANR	4070012	Symbol	* * core		4069883						
ANR	4070013	Function	cb_iopcachewrite	1635:0:44718:45173							
ANR	4070014	FunctionDef	"cb_iopcachewrite (void * user , void * data)"		4070013	0					
ANR	4070015	CompoundStatement		1635:53:44771:45173	4070013	0					
ANR	4070016	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1636:1:44774:44802	4070013	0	True				
ANR	4070017	IdentifierDecl	* core = ( RCore * ) user		4070013	0					
ANR	4070018	IdentifierDeclType	RCore *		4070013	0					
ANR	4070019	Identifier	core		4070013	1					
ANR	4070020	AssignmentExpression	* core = ( RCore * ) user		4070013	2		=			
ANR	4070021	Identifier	core		4070013	0					
ANR	4070022	CastExpression	( RCore * ) user		4070013	1					
ANR	4070023	CastTarget	RCore *		4070013	0					
ANR	4070024	Identifier	user		4070013	1					
ANR	4070025	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1637:1:44805:44845	4070013	1	True				
ANR	4070026	IdentifierDecl	* node = ( RConfigNode * ) data		4070013	0					
ANR	4070027	IdentifierDeclType	RConfigNode *		4070013	0					
ANR	4070028	Identifier	node		4070013	1					
ANR	4070029	AssignmentExpression	* node = ( RConfigNode * ) data		4070013	2		=			
ANR	4070030	Identifier	node		4070013	0					
ANR	4070031	CastExpression	( RConfigNode * ) data		4070013	1					
ANR	4070032	CastTarget	RConfigNode *		4070013	0					
ANR	4070033	Identifier	data		4070013	1					
ANR	4070034	IfStatement	if ( ( bool ) node -> i_value )		4070013	2					
ANR	4070035	Condition	( bool ) node -> i_value	1638:5:44852:44870	4070013	0	True				
ANR	4070036	CastExpression	( bool ) node -> i_value		4070013	0					
ANR	4070037	CastTarget	bool		4070013	0					
ANR	4070038	PtrMemberAccess	node -> i_value		4070013	1					
ANR	4070039	Identifier	node		4070013	0					
ANR	4070040	Identifier	i_value		4070013	1					
ANR	4070041	CompoundStatement		4:26:101:101	4070013	1					
ANR	4070042	IfStatement	if ( core && core -> io )		4070013	0					
ANR	4070043	Condition	core && core -> io	1639:6:44881:44896	4070013	0	True				
ANR	4070044	AndExpression	core && core -> io		4070013	0		&&			
ANR	4070045	Identifier	core		4070013	0					
ANR	4070046	PtrMemberAccess	core -> io		4070013	1					
ANR	4070047	Identifier	core		4070013	0					
ANR	4070048	Identifier	io		4070013	1					
ANR	4070049	CompoundStatement		5:24:127:127	4070013	1					
ANR	4070050	ExpressionStatement	core -> io -> p_cache |= 2	1640:3:44904:44926	4070013	0	True				
ANR	4070051	AssignmentExpression	core -> io -> p_cache |= 2		4070013	0		|=			
ANR	4070052	PtrMemberAccess	core -> io -> p_cache		4070013	0					
ANR	4070053	PtrMemberAccess	core -> io		4070013	0					
ANR	4070054	Identifier	core		4070013	0					
ANR	4070055	Identifier	io		4070013	1					
ANR	4070056	Identifier	p_cache		4070013	1					
ANR	4070057	PrimaryExpression	2		4070013	1					
ANR	4070058	ElseStatement	else		4070013	0					
ANR	4070059	CompoundStatement		8:8:168:168	4070013	0					
ANR	4070060	IfStatement	if ( core && core -> io && core -> io -> p_cache )		4070013	0					
ANR	4070061	Condition	core && core -> io && core -> io -> p_cache	1643:6:44948:44984	4070013	0	True				
ANR	4070062	AndExpression	core && core -> io && core -> io -> p_cache		4070013	0		&&			
ANR	4070063	Identifier	core		4070013	0					
ANR	4070064	AndExpression	core -> io && core -> io -> p_cache		4070013	1		&&			
ANR	4070065	PtrMemberAccess	core -> io		4070013	0					
ANR	4070066	Identifier	core		4070013	0					
ANR	4070067	Identifier	io		4070013	1					
ANR	4070068	PtrMemberAccess	core -> io -> p_cache		4070013	1					
ANR	4070069	PtrMemberAccess	core -> io		4070013	0					
ANR	4070070	Identifier	core		4070013	0					
ANR	4070071	Identifier	io		4070013	1					
ANR	4070072	Identifier	p_cache		4070013	1					
ANR	4070073	CompoundStatement		9:45:215:215	4070013	1					
ANR	4070074	ExpressionStatement	core -> io -> p_cache &= 1	1644:3:44992:45014	4070013	0	True				
ANR	4070075	AssignmentExpression	core -> io -> p_cache &= 1		4070013	0		&=			
ANR	4070076	PtrMemberAccess	core -> io -> p_cache		4070013	0					
ANR	4070077	PtrMemberAccess	core -> io		4070013	0					
ANR	4070078	Identifier	core		4070013	0					
ANR	4070079	Identifier	io		4070013	1					
ANR	4070080	Identifier	p_cache		4070013	1					
ANR	4070081	PrimaryExpression	1		4070013	1					
ANR	4070082	IfStatement	if ( ! ( core -> io -> p_cache & 1 ) )		4070013	1					
ANR	4070083	Condition	! ( core -> io -> p_cache & 1 )	1645:7:45023:45046	4070013	0	True				
ANR	4070084	UnaryOperationExpression	! ( core -> io -> p_cache & 1 )		4070013	0					
ANR	4070085	UnaryOperator	!		4070013	0					
ANR	4070086	BitAndExpression	core -> io -> p_cache & 1		4070013	1		&			
ANR	4070087	PtrMemberAccess	core -> io -> p_cache		4070013	0					
ANR	4070088	PtrMemberAccess	core -> io		4070013	0					
ANR	4070089	Identifier	core		4070013	0					
ANR	4070090	Identifier	io		4070013	1					
ANR	4070091	Identifier	p_cache		4070013	1					
ANR	4070092	PrimaryExpression	1		4070013	1					
ANR	4070093	CompoundStatement		11:33:277:277	4070013	1					
ANR	4070094	ExpressionStatement	r_io_desc_cache_fini_all ( core -> io )	1646:4:45055:45090	4070013	0	True				
ANR	4070095	CallExpression	r_io_desc_cache_fini_all ( core -> io )		4070013	0					
ANR	4070096	Callee	r_io_desc_cache_fini_all		4070013	0					
ANR	4070097	Identifier	r_io_desc_cache_fini_all		4070013	0					
ANR	4070098	ArgumentList	core -> io		4070013	1					
ANR	4070099	Argument	core -> io		4070013	0					
ANR	4070100	PtrMemberAccess	core -> io		4070013	0					
ANR	4070101	Identifier	core		4070013	0					
ANR	4070102	Identifier	io		4070013	1					
ANR	4070103	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache"" , false )"	1647:4:45096:45145	4070013	1	True				
ANR	4070104	CallExpression	"r_config_set_i ( core -> config , ""io.pcache"" , false )"		4070013	0					
ANR	4070105	Callee	r_config_set_i		4070013	0					
ANR	4070106	Identifier	r_config_set_i		4070013	0					
ANR	4070107	ArgumentList	core -> config		4070013	1					
ANR	4070108	Argument	core -> config		4070013	0					
ANR	4070109	PtrMemberAccess	core -> config		4070013	0					
ANR	4070110	Identifier	core		4070013	0					
ANR	4070111	Identifier	config		4070013	1					
ANR	4070112	Argument	"""io.pcache"""		4070013	1					
ANR	4070113	PrimaryExpression	"""io.pcache"""		4070013	0					
ANR	4070114	Argument	false		4070013	2					
ANR	4070115	Identifier	false		4070013	0					
ANR	4070116	ReturnStatement	return true ;	1651:1:45160:45171	4070013	3	True				
ANR	4070117	Identifier	true		4070013	0					
ANR	4070118	ReturnType	static bool		4070013	1					
ANR	4070119	Identifier	cb_iopcachewrite		4070013	2					
ANR	4070120	ParameterList	"void * user , void * data"		4070013	3					
ANR	4070121	Parameter	void * user	1635:29:44747:44756	4070013	0	True				
ANR	4070122	ParameterType	void *		4070013	0					
ANR	4070123	Identifier	user		4070013	1					
ANR	4070124	Parameter	void * data	1635:41:44759:44768	4070013	1	True				
ANR	4070125	ParameterType	void *		4070013	0					
ANR	4070126	Identifier	data		4070013	1					
ANR	4070127	CFGEntryNode	ENTRY		4070013		True				
ANR	4070128	CFGExitNode	EXIT		4070013		True				
ANR	4070129	Symbol	core -> io -> p_cache		4070013						
ANR	4070130	Symbol	core -> config		4070013						
ANR	4070131	Symbol	data		4070013						
ANR	4070132	Symbol	* core		4070013						
ANR	4070133	Symbol	false		4070013						
ANR	4070134	Symbol	node -> i_value		4070013						
ANR	4070135	Symbol	core		4070013						
ANR	4070136	Symbol	node		4070013						
ANR	4070137	Symbol	* core -> io		4070013						
ANR	4070138	Symbol	core -> io		4070013						
ANR	4070139	Symbol	true		4070013						
ANR	4070140	Symbol	* node		4070013						
ANR	4070141	Symbol	user		4070013						
ANR	4070142	Symbol	* * core		4070013						
ANR	4070143	Function	r_core_esil_cmd	1654:0:45176:45418							
ANR	4070144	FunctionDef	"r_core_esil_cmd (RAnalEsil * esil , const char * cmd , ut64 a1 , ut64 a2)"		4070143	0					
ANR	4070145	CompoundStatement		1654:79:45255:45418	4070143	0					
ANR	4070146	IfStatement	if ( cmd && * cmd )		4070143	0					
ANR	4070147	Condition	cmd && * cmd	1655:5:45262:45272	4070143	0	True				
ANR	4070148	AndExpression	cmd && * cmd		4070143	0		&&			
ANR	4070149	Identifier	cmd		4070143	0					
ANR	4070150	UnaryOperationExpression	* cmd		4070143	1					
ANR	4070151	UnaryOperator	*		4070143	0					
ANR	4070152	Identifier	cmd		4070143	1					
ANR	4070153	CompoundStatement		3:2:23:53	4070143	1					
ANR	4070154	IdentifierDeclStatement	RCore * core = esil -> anal -> user ;	1656:2:45279:45309	4070143	0	True				
ANR	4070155	IdentifierDecl	* core = esil -> anal -> user		4070143	0					
ANR	4070156	IdentifierDeclType	RCore *		4070143	0					
ANR	4070157	Identifier	core		4070143	1					
ANR	4070158	AssignmentExpression	* core = esil -> anal -> user		4070143	2		=			
ANR	4070159	Identifier	core		4070143	0					
ANR	4070160	PtrMemberAccess	esil -> anal -> user		4070143	1					
ANR	4070161	PtrMemberAccess	esil -> anal		4070143	0					
ANR	4070162	Identifier	esil		4070143	0					
ANR	4070163	Identifier	anal		4070143	1					
ANR	4070164	Identifier	user		4070143	1					
ANR	4070165	Statement	r_core_cmdf	1657:2:45313:45323	4070143	1	True				
ANR	4070166	Statement	(	1657:14:45325:45325	4070143	2	True				
ANR	4070167	Statement	core	1657:15:45326:45329	4070143	3	True				
ANR	4070168	Statement	","	1657:19:45330:45330	4070143	4	True				
ANR	4070169	Statement	"""%s %"""	1657:21:45332:45337	4070143	5	True				
ANR	4070170	Statement	PFMT64d	1657:27:45338:45344	4070143	6	True				
ANR	4070171	Statement	""" %"""	1657:34:45345:45348	4070143	7	True				
ANR	4070172	Statement	PFMT64d	1657:39:45350:45356	4070143	8	True				
ANR	4070173	Statement	","	1657:46:45357:45357	4070143	9	True				
ANR	4070174	Statement	cmd	1657:48:45359:45361	4070143	10	True				
ANR	4070175	Statement	","	1657:51:45362:45362	4070143	11	True				
ANR	4070176	Statement	a1	1657:53:45364:45365	4070143	12	True				
ANR	4070177	Statement	","	1657:55:45366:45366	4070143	13	True				
ANR	4070178	Statement	a2	1657:57:45368:45369	4070143	14	True				
ANR	4070179	Statement	)	1657:59:45370:45370	4070143	15	True				
ANR	4070180	ExpressionStatement		1657:60:45371:45371	4070143	16	True				
ANR	4070181	ReturnStatement	return core -> num -> value ;	1658:2:45375:45398	4070143	17	True				
ANR	4070182	PtrMemberAccess	core -> num -> value		4070143	0					
ANR	4070183	PtrMemberAccess	core -> num		4070143	0					
ANR	4070184	Identifier	core		4070143	0					
ANR	4070185	Identifier	num		4070143	1					
ANR	4070186	Identifier	value		4070143	1					
ANR	4070187	ReturnStatement	return false ;	1660:1:45404:45416	4070143	1	True				
ANR	4070188	Identifier	false		4070143	0					
ANR	4070189	ReturnType	R_API bool		4070143	1					
ANR	4070190	Identifier	r_core_esil_cmd		4070143	2					
ANR	4070191	ParameterList	"RAnalEsil * esil , const char * cmd , ut64 a1 , ut64 a2"		4070143	3					
ANR	4070192	Parameter	RAnalEsil * esil	1654:27:45203:45217	4070143	0	True				
ANR	4070193	ParameterType	RAnalEsil *		4070143	0					
ANR	4070194	Identifier	esil		4070143	1					
ANR	4070195	Parameter	const char * cmd	1654:44:45220:45234	4070143	1	True				
ANR	4070196	ParameterType	const char *		4070143	0					
ANR	4070197	Identifier	cmd		4070143	1					
ANR	4070198	Parameter	ut64 a1	1654:61:45237:45243	4070143	2	True				
ANR	4070199	ParameterType	ut64		4070143	0					
ANR	4070200	Identifier	a1		4070143	1					
ANR	4070201	Parameter	ut64 a2	1654:70:45246:45252	4070143	3	True				
ANR	4070202	ParameterType	ut64		4070143	0					
ANR	4070203	Identifier	a2		4070143	1					
ANR	4070204	CFGEntryNode	ENTRY		4070143		True				
ANR	4070205	CFGExitNode	EXIT		4070143		True				
ANR	4070206	Symbol	esil -> anal -> user		4070143						
ANR	4070207	Symbol	* esil -> anal		4070143						
ANR	4070208	Symbol	* core		4070143						
ANR	4070209	Symbol	false		4070143						
ANR	4070210	Symbol	core -> num -> value		4070143						
ANR	4070211	Symbol	* * esil		4070143						
ANR	4070212	Symbol	a1		4070143						
ANR	4070213	Symbol	a2		4070143						
ANR	4070214	Symbol	core		4070143						
ANR	4070215	Symbol	esil -> anal		4070143						
ANR	4070216	Symbol	* esil		4070143						
ANR	4070217	Symbol	* core -> num		4070143						
ANR	4070218	Symbol	cmd		4070143						
ANR	4070219	Symbol	* cmd		4070143						
ANR	4070220	Symbol	core -> num		4070143						
ANR	4070221	Symbol	esil		4070143						
ANR	4070222	Symbol	* * core		4070143						
ANR	4070223	Function	cb_cmd_esil_ioer	1663:0:45421:45747							
ANR	4070224	FunctionDef	"cb_cmd_esil_ioer (void * user , void * data)"		4070223	0					
ANR	4070225	CompoundStatement		1663:53:45474:45747	4070223	0					
ANR	4070226	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1664:1:45477:45505	4070223	0	True				
ANR	4070227	IdentifierDecl	* core = ( RCore * ) user		4070223	0					
ANR	4070228	IdentifierDeclType	RCore *		4070223	0					
ANR	4070229	Identifier	core		4070223	1					
ANR	4070230	AssignmentExpression	* core = ( RCore * ) user		4070223	2		=			
ANR	4070231	Identifier	core		4070223	0					
ANR	4070232	CastExpression	( RCore * ) user		4070223	1					
ANR	4070233	CastTarget	RCore *		4070223	0					
ANR	4070234	Identifier	user		4070223	1					
ANR	4070235	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1665:1:45508:45548	4070223	1	True				
ANR	4070236	IdentifierDecl	* node = ( RConfigNode * ) data		4070223	0					
ANR	4070237	IdentifierDeclType	RConfigNode *		4070223	0					
ANR	4070238	Identifier	node		4070223	1					
ANR	4070239	AssignmentExpression	* node = ( RConfigNode * ) data		4070223	2		=			
ANR	4070240	Identifier	node		4070223	0					
ANR	4070241	CastExpression	( RConfigNode * ) data		4070223	1					
ANR	4070242	CastTarget	RConfigNode *		4070223	0					
ANR	4070243	Identifier	data		4070223	1					
ANR	4070244	IfStatement	if ( core && core -> anal && core -> anal -> esil )		4070223	2					
ANR	4070245	Condition	core && core -> anal && core -> anal -> esil	1666:5:45555:45592	4070223	0	True				
ANR	4070246	AndExpression	core && core -> anal && core -> anal -> esil		4070223	0		&&			
ANR	4070247	Identifier	core		4070223	0					
ANR	4070248	AndExpression	core -> anal && core -> anal -> esil		4070223	1		&&			
ANR	4070249	PtrMemberAccess	core -> anal		4070223	0					
ANR	4070250	Identifier	core		4070223	0					
ANR	4070251	Identifier	anal		4070223	1					
ANR	4070252	PtrMemberAccess	core -> anal -> esil		4070223	1					
ANR	4070253	PtrMemberAccess	core -> anal		4070223	0					
ANR	4070254	Identifier	core		4070223	0					
ANR	4070255	Identifier	anal		4070223	1					
ANR	4070256	Identifier	esil		4070223	1					
ANR	4070257	CompoundStatement		4:45:120:120	4070223	1					
ANR	4070258	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1667:2:45599:45638	4070223	0	True				
ANR	4070259	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		4070223	0		=			
ANR	4070260	PtrMemberAccess	core -> anal -> esil -> cmd		4070223	0					
ANR	4070261	PtrMemberAccess	core -> anal -> esil		4070223	0					
ANR	4070262	PtrMemberAccess	core -> anal		4070223	0					
ANR	4070263	Identifier	core		4070223	0					
ANR	4070264	Identifier	anal		4070223	1					
ANR	4070265	Identifier	esil		4070223	1					
ANR	4070266	Identifier	cmd		4070223	1					
ANR	4070267	Identifier	r_core_esil_cmd		4070223	1					
ANR	4070268	ExpressionStatement	free ( core -> anal -> esil -> cmd_ioer )	1668:2:45642:45675	4070223	1	True				
ANR	4070269	CallExpression	free ( core -> anal -> esil -> cmd_ioer )		4070223	0					
ANR	4070270	Callee	free		4070223	0					
ANR	4070271	Identifier	free		4070223	0					
ANR	4070272	ArgumentList	core -> anal -> esil -> cmd_ioer		4070223	1					
ANR	4070273	Argument	core -> anal -> esil -> cmd_ioer		4070223	0					
ANR	4070274	PtrMemberAccess	core -> anal -> esil -> cmd_ioer		4070223	0					
ANR	4070275	PtrMemberAccess	core -> anal -> esil		4070223	0					
ANR	4070276	PtrMemberAccess	core -> anal		4070223	0					
ANR	4070277	Identifier	core		4070223	0					
ANR	4070278	Identifier	anal		4070223	1					
ANR	4070279	Identifier	esil		4070223	1					
ANR	4070280	Identifier	cmd_ioer		4070223	1					
ANR	4070281	ExpressionStatement	core -> anal -> esil -> cmd_ioer = strdup ( node -> value )	1669:2:45679:45728	4070223	2	True				
ANR	4070282	AssignmentExpression	core -> anal -> esil -> cmd_ioer = strdup ( node -> value )		4070223	0		=			
ANR	4070283	PtrMemberAccess	core -> anal -> esil -> cmd_ioer		4070223	0					
ANR	4070284	PtrMemberAccess	core -> anal -> esil		4070223	0					
ANR	4070285	PtrMemberAccess	core -> anal		4070223	0					
ANR	4070286	Identifier	core		4070223	0					
ANR	4070287	Identifier	anal		4070223	1					
ANR	4070288	Identifier	esil		4070223	1					
ANR	4070289	Identifier	cmd_ioer		4070223	1					
ANR	4070290	CallExpression	strdup ( node -> value )		4070223	1					
ANR	4070291	Callee	strdup		4070223	0					
ANR	4070292	Identifier	strdup		4070223	0					
ANR	4070293	ArgumentList	node -> value		4070223	1					
ANR	4070294	Argument	node -> value		4070223	0					
ANR	4070295	PtrMemberAccess	node -> value		4070223	0					
ANR	4070296	Identifier	node		4070223	0					
ANR	4070297	Identifier	value		4070223	1					
ANR	4070298	ReturnStatement	return true ;	1671:1:45734:45745	4070223	3	True				
ANR	4070299	Identifier	true		4070223	0					
ANR	4070300	ReturnType	static bool		4070223	1					
ANR	4070301	Identifier	cb_cmd_esil_ioer		4070223	2					
ANR	4070302	ParameterList	"void * user , void * data"		4070223	3					
ANR	4070303	Parameter	void * user	1663:29:45450:45459	4070223	0	True				
ANR	4070304	ParameterType	void *		4070223	0					
ANR	4070305	Identifier	user		4070223	1					
ANR	4070306	Parameter	void * data	1663:41:45462:45471	4070223	1	True				
ANR	4070307	ParameterType	void *		4070223	0					
ANR	4070308	Identifier	data		4070223	1					
ANR	4070309	CFGEntryNode	ENTRY		4070223		True				
ANR	4070310	CFGExitNode	EXIT		4070223		True				
ANR	4070311	Symbol	core -> anal -> esil -> cmd_ioer		4070223						
ANR	4070312	Symbol	data		4070223						
ANR	4070313	Symbol	r_core_esil_cmd		4070223						
ANR	4070314	Symbol	core -> anal -> esil -> cmd		4070223						
ANR	4070315	Symbol	* core		4070223						
ANR	4070316	Symbol	core -> anal		4070223						
ANR	4070317	Symbol	node -> value		4070223						
ANR	4070318	Symbol	core		4070223						
ANR	4070319	Symbol	node		4070223						
ANR	4070320	Symbol	* * * core		4070223						
ANR	4070321	Symbol	* core -> anal		4070223						
ANR	4070322	Symbol	* core -> anal -> esil		4070223						
ANR	4070323	Symbol	true		4070223						
ANR	4070324	Symbol	* * core -> anal		4070223						
ANR	4070325	Symbol	* node		4070223						
ANR	4070326	Symbol	strdup		4070223						
ANR	4070327	Symbol	core -> anal -> esil		4070223						
ANR	4070328	Symbol	user		4070223						
ANR	4070329	Symbol	* * core		4070223						
ANR	4070330	Function	cb_cmd_esil_todo	1674:0:45750:46076							
ANR	4070331	FunctionDef	"cb_cmd_esil_todo (void * user , void * data)"		4070330	0					
ANR	4070332	CompoundStatement		1674:53:45803:46076	4070330	0					
ANR	4070333	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1675:1:45806:45834	4070330	0	True				
ANR	4070334	IdentifierDecl	* core = ( RCore * ) user		4070330	0					
ANR	4070335	IdentifierDeclType	RCore *		4070330	0					
ANR	4070336	Identifier	core		4070330	1					
ANR	4070337	AssignmentExpression	* core = ( RCore * ) user		4070330	2		=			
ANR	4070338	Identifier	core		4070330	0					
ANR	4070339	CastExpression	( RCore * ) user		4070330	1					
ANR	4070340	CastTarget	RCore *		4070330	0					
ANR	4070341	Identifier	user		4070330	1					
ANR	4070342	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1676:1:45837:45877	4070330	1	True				
ANR	4070343	IdentifierDecl	* node = ( RConfigNode * ) data		4070330	0					
ANR	4070344	IdentifierDeclType	RConfigNode *		4070330	0					
ANR	4070345	Identifier	node		4070330	1					
ANR	4070346	AssignmentExpression	* node = ( RConfigNode * ) data		4070330	2		=			
ANR	4070347	Identifier	node		4070330	0					
ANR	4070348	CastExpression	( RConfigNode * ) data		4070330	1					
ANR	4070349	CastTarget	RConfigNode *		4070330	0					
ANR	4070350	Identifier	data		4070330	1					
ANR	4070351	IfStatement	if ( core && core -> anal && core -> anal -> esil )		4070330	2					
ANR	4070352	Condition	core && core -> anal && core -> anal -> esil	1677:5:45884:45921	4070330	0	True				
ANR	4070353	AndExpression	core && core -> anal && core -> anal -> esil		4070330	0		&&			
ANR	4070354	Identifier	core		4070330	0					
ANR	4070355	AndExpression	core -> anal && core -> anal -> esil		4070330	1		&&			
ANR	4070356	PtrMemberAccess	core -> anal		4070330	0					
ANR	4070357	Identifier	core		4070330	0					
ANR	4070358	Identifier	anal		4070330	1					
ANR	4070359	PtrMemberAccess	core -> anal -> esil		4070330	1					
ANR	4070360	PtrMemberAccess	core -> anal		4070330	0					
ANR	4070361	Identifier	core		4070330	0					
ANR	4070362	Identifier	anal		4070330	1					
ANR	4070363	Identifier	esil		4070330	1					
ANR	4070364	CompoundStatement		4:45:120:120	4070330	1					
ANR	4070365	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1678:2:45928:45967	4070330	0	True				
ANR	4070366	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		4070330	0		=			
ANR	4070367	PtrMemberAccess	core -> anal -> esil -> cmd		4070330	0					
ANR	4070368	PtrMemberAccess	core -> anal -> esil		4070330	0					
ANR	4070369	PtrMemberAccess	core -> anal		4070330	0					
ANR	4070370	Identifier	core		4070330	0					
ANR	4070371	Identifier	anal		4070330	1					
ANR	4070372	Identifier	esil		4070330	1					
ANR	4070373	Identifier	cmd		4070330	1					
ANR	4070374	Identifier	r_core_esil_cmd		4070330	1					
ANR	4070375	ExpressionStatement	free ( core -> anal -> esil -> cmd_todo )	1679:2:45971:46004	4070330	1	True				
ANR	4070376	CallExpression	free ( core -> anal -> esil -> cmd_todo )		4070330	0					
ANR	4070377	Callee	free		4070330	0					
ANR	4070378	Identifier	free		4070330	0					
ANR	4070379	ArgumentList	core -> anal -> esil -> cmd_todo		4070330	1					
ANR	4070380	Argument	core -> anal -> esil -> cmd_todo		4070330	0					
ANR	4070381	PtrMemberAccess	core -> anal -> esil -> cmd_todo		4070330	0					
ANR	4070382	PtrMemberAccess	core -> anal -> esil		4070330	0					
ANR	4070383	PtrMemberAccess	core -> anal		4070330	0					
ANR	4070384	Identifier	core		4070330	0					
ANR	4070385	Identifier	anal		4070330	1					
ANR	4070386	Identifier	esil		4070330	1					
ANR	4070387	Identifier	cmd_todo		4070330	1					
ANR	4070388	ExpressionStatement	core -> anal -> esil -> cmd_todo = strdup ( node -> value )	1680:2:46008:46057	4070330	2	True				
ANR	4070389	AssignmentExpression	core -> anal -> esil -> cmd_todo = strdup ( node -> value )		4070330	0		=			
ANR	4070390	PtrMemberAccess	core -> anal -> esil -> cmd_todo		4070330	0					
ANR	4070391	PtrMemberAccess	core -> anal -> esil		4070330	0					
ANR	4070392	PtrMemberAccess	core -> anal		4070330	0					
ANR	4070393	Identifier	core		4070330	0					
ANR	4070394	Identifier	anal		4070330	1					
ANR	4070395	Identifier	esil		4070330	1					
ANR	4070396	Identifier	cmd_todo		4070330	1					
ANR	4070397	CallExpression	strdup ( node -> value )		4070330	1					
ANR	4070398	Callee	strdup		4070330	0					
ANR	4070399	Identifier	strdup		4070330	0					
ANR	4070400	ArgumentList	node -> value		4070330	1					
ANR	4070401	Argument	node -> value		4070330	0					
ANR	4070402	PtrMemberAccess	node -> value		4070330	0					
ANR	4070403	Identifier	node		4070330	0					
ANR	4070404	Identifier	value		4070330	1					
ANR	4070405	ReturnStatement	return true ;	1682:1:46063:46074	4070330	3	True				
ANR	4070406	Identifier	true		4070330	0					
ANR	4070407	ReturnType	static bool		4070330	1					
ANR	4070408	Identifier	cb_cmd_esil_todo		4070330	2					
ANR	4070409	ParameterList	"void * user , void * data"		4070330	3					
ANR	4070410	Parameter	void * user	1674:29:45779:45788	4070330	0	True				
ANR	4070411	ParameterType	void *		4070330	0					
ANR	4070412	Identifier	user		4070330	1					
ANR	4070413	Parameter	void * data	1674:41:45791:45800	4070330	1	True				
ANR	4070414	ParameterType	void *		4070330	0					
ANR	4070415	Identifier	data		4070330	1					
ANR	4070416	CFGEntryNode	ENTRY		4070330		True				
ANR	4070417	CFGExitNode	EXIT		4070330		True				
ANR	4070418	Symbol	data		4070330						
ANR	4070419	Symbol	r_core_esil_cmd		4070330						
ANR	4070420	Symbol	core -> anal -> esil -> cmd		4070330						
ANR	4070421	Symbol	* core		4070330						
ANR	4070422	Symbol	core -> anal		4070330						
ANR	4070423	Symbol	node -> value		4070330						
ANR	4070424	Symbol	core		4070330						
ANR	4070425	Symbol	node		4070330						
ANR	4070426	Symbol	* * * core		4070330						
ANR	4070427	Symbol	core -> anal -> esil -> cmd_todo		4070330						
ANR	4070428	Symbol	* core -> anal		4070330						
ANR	4070429	Symbol	* core -> anal -> esil		4070330						
ANR	4070430	Symbol	true		4070330						
ANR	4070431	Symbol	* * core -> anal		4070330						
ANR	4070432	Symbol	* node		4070330						
ANR	4070433	Symbol	strdup		4070330						
ANR	4070434	Symbol	core -> anal -> esil		4070330						
ANR	4070435	Symbol	user		4070330						
ANR	4070436	Symbol	* * core		4070330						
ANR	4070437	Function	cb_cmd_esil_intr	1685:0:46079:46405							
ANR	4070438	FunctionDef	"cb_cmd_esil_intr (void * user , void * data)"		4070437	0					
ANR	4070439	CompoundStatement		1685:53:46132:46405	4070437	0					
ANR	4070440	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1686:1:46135:46163	4070437	0	True				
ANR	4070441	IdentifierDecl	* core = ( RCore * ) user		4070437	0					
ANR	4070442	IdentifierDeclType	RCore *		4070437	0					
ANR	4070443	Identifier	core		4070437	1					
ANR	4070444	AssignmentExpression	* core = ( RCore * ) user		4070437	2		=			
ANR	4070445	Identifier	core		4070437	0					
ANR	4070446	CastExpression	( RCore * ) user		4070437	1					
ANR	4070447	CastTarget	RCore *		4070437	0					
ANR	4070448	Identifier	user		4070437	1					
ANR	4070449	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1687:1:46166:46206	4070437	1	True				
ANR	4070450	IdentifierDecl	* node = ( RConfigNode * ) data		4070437	0					
ANR	4070451	IdentifierDeclType	RConfigNode *		4070437	0					
ANR	4070452	Identifier	node		4070437	1					
ANR	4070453	AssignmentExpression	* node = ( RConfigNode * ) data		4070437	2		=			
ANR	4070454	Identifier	node		4070437	0					
ANR	4070455	CastExpression	( RConfigNode * ) data		4070437	1					
ANR	4070456	CastTarget	RConfigNode *		4070437	0					
ANR	4070457	Identifier	data		4070437	1					
ANR	4070458	IfStatement	if ( core && core -> anal && core -> anal -> esil )		4070437	2					
ANR	4070459	Condition	core && core -> anal && core -> anal -> esil	1688:5:46213:46250	4070437	0	True				
ANR	4070460	AndExpression	core && core -> anal && core -> anal -> esil		4070437	0		&&			
ANR	4070461	Identifier	core		4070437	0					
ANR	4070462	AndExpression	core -> anal && core -> anal -> esil		4070437	1		&&			
ANR	4070463	PtrMemberAccess	core -> anal		4070437	0					
ANR	4070464	Identifier	core		4070437	0					
ANR	4070465	Identifier	anal		4070437	1					
ANR	4070466	PtrMemberAccess	core -> anal -> esil		4070437	1					
ANR	4070467	PtrMemberAccess	core -> anal		4070437	0					
ANR	4070468	Identifier	core		4070437	0					
ANR	4070469	Identifier	anal		4070437	1					
ANR	4070470	Identifier	esil		4070437	1					
ANR	4070471	CompoundStatement		4:45:120:120	4070437	1					
ANR	4070472	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1689:2:46257:46296	4070437	0	True				
ANR	4070473	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		4070437	0		=			
ANR	4070474	PtrMemberAccess	core -> anal -> esil -> cmd		4070437	0					
ANR	4070475	PtrMemberAccess	core -> anal -> esil		4070437	0					
ANR	4070476	PtrMemberAccess	core -> anal		4070437	0					
ANR	4070477	Identifier	core		4070437	0					
ANR	4070478	Identifier	anal		4070437	1					
ANR	4070479	Identifier	esil		4070437	1					
ANR	4070480	Identifier	cmd		4070437	1					
ANR	4070481	Identifier	r_core_esil_cmd		4070437	1					
ANR	4070482	ExpressionStatement	free ( core -> anal -> esil -> cmd_intr )	1690:2:46300:46333	4070437	1	True				
ANR	4070483	CallExpression	free ( core -> anal -> esil -> cmd_intr )		4070437	0					
ANR	4070484	Callee	free		4070437	0					
ANR	4070485	Identifier	free		4070437	0					
ANR	4070486	ArgumentList	core -> anal -> esil -> cmd_intr		4070437	1					
ANR	4070487	Argument	core -> anal -> esil -> cmd_intr		4070437	0					
ANR	4070488	PtrMemberAccess	core -> anal -> esil -> cmd_intr		4070437	0					
ANR	4070489	PtrMemberAccess	core -> anal -> esil		4070437	0					
ANR	4070490	PtrMemberAccess	core -> anal		4070437	0					
ANR	4070491	Identifier	core		4070437	0					
ANR	4070492	Identifier	anal		4070437	1					
ANR	4070493	Identifier	esil		4070437	1					
ANR	4070494	Identifier	cmd_intr		4070437	1					
ANR	4070495	ExpressionStatement	core -> anal -> esil -> cmd_intr = strdup ( node -> value )	1691:2:46337:46386	4070437	2	True				
ANR	4070496	AssignmentExpression	core -> anal -> esil -> cmd_intr = strdup ( node -> value )		4070437	0		=			
ANR	4070497	PtrMemberAccess	core -> anal -> esil -> cmd_intr		4070437	0					
ANR	4070498	PtrMemberAccess	core -> anal -> esil		4070437	0					
ANR	4070499	PtrMemberAccess	core -> anal		4070437	0					
ANR	4070500	Identifier	core		4070437	0					
ANR	4070501	Identifier	anal		4070437	1					
ANR	4070502	Identifier	esil		4070437	1					
ANR	4070503	Identifier	cmd_intr		4070437	1					
ANR	4070504	CallExpression	strdup ( node -> value )		4070437	1					
ANR	4070505	Callee	strdup		4070437	0					
ANR	4070506	Identifier	strdup		4070437	0					
ANR	4070507	ArgumentList	node -> value		4070437	1					
ANR	4070508	Argument	node -> value		4070437	0					
ANR	4070509	PtrMemberAccess	node -> value		4070437	0					
ANR	4070510	Identifier	node		4070437	0					
ANR	4070511	Identifier	value		4070437	1					
ANR	4070512	ReturnStatement	return true ;	1693:1:46392:46403	4070437	3	True				
ANR	4070513	Identifier	true		4070437	0					
ANR	4070514	ReturnType	static bool		4070437	1					
ANR	4070515	Identifier	cb_cmd_esil_intr		4070437	2					
ANR	4070516	ParameterList	"void * user , void * data"		4070437	3					
ANR	4070517	Parameter	void * user	1685:29:46108:46117	4070437	0	True				
ANR	4070518	ParameterType	void *		4070437	0					
ANR	4070519	Identifier	user		4070437	1					
ANR	4070520	Parameter	void * data	1685:41:46120:46129	4070437	1	True				
ANR	4070521	ParameterType	void *		4070437	0					
ANR	4070522	Identifier	data		4070437	1					
ANR	4070523	CFGEntryNode	ENTRY		4070437		True				
ANR	4070524	CFGExitNode	EXIT		4070437		True				
ANR	4070525	Symbol	data		4070437						
ANR	4070526	Symbol	r_core_esil_cmd		4070437						
ANR	4070527	Symbol	core -> anal -> esil -> cmd		4070437						
ANR	4070528	Symbol	* core		4070437						
ANR	4070529	Symbol	core -> anal		4070437						
ANR	4070530	Symbol	node -> value		4070437						
ANR	4070531	Symbol	core -> anal -> esil -> cmd_intr		4070437						
ANR	4070532	Symbol	core		4070437						
ANR	4070533	Symbol	node		4070437						
ANR	4070534	Symbol	* * * core		4070437						
ANR	4070535	Symbol	* core -> anal		4070437						
ANR	4070536	Symbol	* core -> anal -> esil		4070437						
ANR	4070537	Symbol	true		4070437						
ANR	4070538	Symbol	* * core -> anal		4070437						
ANR	4070539	Symbol	* node		4070437						
ANR	4070540	Symbol	strdup		4070437						
ANR	4070541	Symbol	core -> anal -> esil		4070437						
ANR	4070542	Symbol	user		4070437						
ANR	4070543	Symbol	* * core		4070437						
ANR	4070544	Function	cb_mdevrange	1696:0:46408:46734							
ANR	4070545	FunctionDef	"cb_mdevrange (void * user , void * data)"		4070544	0					
ANR	4070546	CompoundStatement		1696:49:46457:46734	4070544	0					
ANR	4070547	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1697:1:46460:46488	4070544	0	True				
ANR	4070548	IdentifierDecl	* core = ( RCore * ) user		4070544	0					
ANR	4070549	IdentifierDeclType	RCore *		4070544	0					
ANR	4070550	Identifier	core		4070544	1					
ANR	4070551	AssignmentExpression	* core = ( RCore * ) user		4070544	2		=			
ANR	4070552	Identifier	core		4070544	0					
ANR	4070553	CastExpression	( RCore * ) user		4070544	1					
ANR	4070554	CastTarget	RCore *		4070544	0					
ANR	4070555	Identifier	user		4070544	1					
ANR	4070556	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1698:1:46491:46531	4070544	1	True				
ANR	4070557	IdentifierDecl	* node = ( RConfigNode * ) data		4070544	0					
ANR	4070558	IdentifierDeclType	RConfigNode *		4070544	0					
ANR	4070559	Identifier	node		4070544	1					
ANR	4070560	AssignmentExpression	* node = ( RConfigNode * ) data		4070544	2		=			
ANR	4070561	Identifier	node		4070544	0					
ANR	4070562	CastExpression	( RConfigNode * ) data		4070544	1					
ANR	4070563	CastTarget	RConfigNode *		4070544	0					
ANR	4070564	Identifier	data		4070544	1					
ANR	4070565	IfStatement	if ( core && core -> anal && core -> anal -> esil )		4070544	2					
ANR	4070566	Condition	core && core -> anal && core -> anal -> esil	1699:5:46538:46575	4070544	0	True				
ANR	4070567	AndExpression	core && core -> anal && core -> anal -> esil		4070544	0		&&			
ANR	4070568	Identifier	core		4070544	0					
ANR	4070569	AndExpression	core -> anal && core -> anal -> esil		4070544	1		&&			
ANR	4070570	PtrMemberAccess	core -> anal		4070544	0					
ANR	4070571	Identifier	core		4070544	0					
ANR	4070572	Identifier	anal		4070544	1					
ANR	4070573	PtrMemberAccess	core -> anal -> esil		4070544	1					
ANR	4070574	PtrMemberAccess	core -> anal		4070544	0					
ANR	4070575	Identifier	core		4070544	0					
ANR	4070576	Identifier	anal		4070544	1					
ANR	4070577	Identifier	esil		4070544	1					
ANR	4070578	CompoundStatement		4:45:120:120	4070544	1					
ANR	4070579	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1700:2:46582:46621	4070544	0	True				
ANR	4070580	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		4070544	0		=			
ANR	4070581	PtrMemberAccess	core -> anal -> esil -> cmd		4070544	0					
ANR	4070582	PtrMemberAccess	core -> anal -> esil		4070544	0					
ANR	4070583	PtrMemberAccess	core -> anal		4070544	0					
ANR	4070584	Identifier	core		4070544	0					
ANR	4070585	Identifier	anal		4070544	1					
ANR	4070586	Identifier	esil		4070544	1					
ANR	4070587	Identifier	cmd		4070544	1					
ANR	4070588	Identifier	r_core_esil_cmd		4070544	1					
ANR	4070589	ExpressionStatement	free ( core -> anal -> esil -> mdev_range )	1701:2:46625:46660	4070544	1	True				
ANR	4070590	CallExpression	free ( core -> anal -> esil -> mdev_range )		4070544	0					
ANR	4070591	Callee	free		4070544	0					
ANR	4070592	Identifier	free		4070544	0					
ANR	4070593	ArgumentList	core -> anal -> esil -> mdev_range		4070544	1					
ANR	4070594	Argument	core -> anal -> esil -> mdev_range		4070544	0					
ANR	4070595	PtrMemberAccess	core -> anal -> esil -> mdev_range		4070544	0					
ANR	4070596	PtrMemberAccess	core -> anal -> esil		4070544	0					
ANR	4070597	PtrMemberAccess	core -> anal		4070544	0					
ANR	4070598	Identifier	core		4070544	0					
ANR	4070599	Identifier	anal		4070544	1					
ANR	4070600	Identifier	esil		4070544	1					
ANR	4070601	Identifier	mdev_range		4070544	1					
ANR	4070602	ExpressionStatement	core -> anal -> esil -> mdev_range = strdup ( node -> value )	1702:2:46664:46715	4070544	2	True				
ANR	4070603	AssignmentExpression	core -> anal -> esil -> mdev_range = strdup ( node -> value )		4070544	0		=			
ANR	4070604	PtrMemberAccess	core -> anal -> esil -> mdev_range		4070544	0					
ANR	4070605	PtrMemberAccess	core -> anal -> esil		4070544	0					
ANR	4070606	PtrMemberAccess	core -> anal		4070544	0					
ANR	4070607	Identifier	core		4070544	0					
ANR	4070608	Identifier	anal		4070544	1					
ANR	4070609	Identifier	esil		4070544	1					
ANR	4070610	Identifier	mdev_range		4070544	1					
ANR	4070611	CallExpression	strdup ( node -> value )		4070544	1					
ANR	4070612	Callee	strdup		4070544	0					
ANR	4070613	Identifier	strdup		4070544	0					
ANR	4070614	ArgumentList	node -> value		4070544	1					
ANR	4070615	Argument	node -> value		4070544	0					
ANR	4070616	PtrMemberAccess	node -> value		4070544	0					
ANR	4070617	Identifier	node		4070544	0					
ANR	4070618	Identifier	value		4070544	1					
ANR	4070619	ReturnStatement	return true ;	1704:1:46721:46732	4070544	3	True				
ANR	4070620	Identifier	true		4070544	0					
ANR	4070621	ReturnType	static bool		4070544	1					
ANR	4070622	Identifier	cb_mdevrange		4070544	2					
ANR	4070623	ParameterList	"void * user , void * data"		4070544	3					
ANR	4070624	Parameter	void * user	1696:25:46433:46442	4070544	0	True				
ANR	4070625	ParameterType	void *		4070544	0					
ANR	4070626	Identifier	user		4070544	1					
ANR	4070627	Parameter	void * data	1696:37:46445:46454	4070544	1	True				
ANR	4070628	ParameterType	void *		4070544	0					
ANR	4070629	Identifier	data		4070544	1					
ANR	4070630	CFGEntryNode	ENTRY		4070544		True				
ANR	4070631	CFGExitNode	EXIT		4070544		True				
ANR	4070632	Symbol	data		4070544						
ANR	4070633	Symbol	r_core_esil_cmd		4070544						
ANR	4070634	Symbol	core -> anal -> esil -> cmd		4070544						
ANR	4070635	Symbol	* core		4070544						
ANR	4070636	Symbol	core -> anal		4070544						
ANR	4070637	Symbol	node -> value		4070544						
ANR	4070638	Symbol	core		4070544						
ANR	4070639	Symbol	node		4070544						
ANR	4070640	Symbol	* * * core		4070544						
ANR	4070641	Symbol	* core -> anal		4070544						
ANR	4070642	Symbol	* core -> anal -> esil		4070544						
ANR	4070643	Symbol	true		4070544						
ANR	4070644	Symbol	* * core -> anal		4070544						
ANR	4070645	Symbol	* node		4070544						
ANR	4070646	Symbol	strdup		4070544						
ANR	4070647	Symbol	core -> anal -> esil		4070544						
ANR	4070648	Symbol	user		4070544						
ANR	4070649	Symbol	* * core		4070544						
ANR	4070650	Symbol	core -> anal -> esil -> mdev_range		4070544						
ANR	4070651	Function	cb_cmd_esil_step	1707:0:46737:47063							
ANR	4070652	FunctionDef	"cb_cmd_esil_step (void * user , void * data)"		4070651	0					
ANR	4070653	CompoundStatement		1707:53:46790:47063	4070651	0					
ANR	4070654	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1708:1:46793:46821	4070651	0	True				
ANR	4070655	IdentifierDecl	* core = ( RCore * ) user		4070651	0					
ANR	4070656	IdentifierDeclType	RCore *		4070651	0					
ANR	4070657	Identifier	core		4070651	1					
ANR	4070658	AssignmentExpression	* core = ( RCore * ) user		4070651	2		=			
ANR	4070659	Identifier	core		4070651	0					
ANR	4070660	CastExpression	( RCore * ) user		4070651	1					
ANR	4070661	CastTarget	RCore *		4070651	0					
ANR	4070662	Identifier	user		4070651	1					
ANR	4070663	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1709:1:46824:46864	4070651	1	True				
ANR	4070664	IdentifierDecl	* node = ( RConfigNode * ) data		4070651	0					
ANR	4070665	IdentifierDeclType	RConfigNode *		4070651	0					
ANR	4070666	Identifier	node		4070651	1					
ANR	4070667	AssignmentExpression	* node = ( RConfigNode * ) data		4070651	2		=			
ANR	4070668	Identifier	node		4070651	0					
ANR	4070669	CastExpression	( RConfigNode * ) data		4070651	1					
ANR	4070670	CastTarget	RConfigNode *		4070651	0					
ANR	4070671	Identifier	data		4070651	1					
ANR	4070672	IfStatement	if ( core && core -> anal && core -> anal -> esil )		4070651	2					
ANR	4070673	Condition	core && core -> anal && core -> anal -> esil	1710:5:46871:46908	4070651	0	True				
ANR	4070674	AndExpression	core && core -> anal && core -> anal -> esil		4070651	0		&&			
ANR	4070675	Identifier	core		4070651	0					
ANR	4070676	AndExpression	core -> anal && core -> anal -> esil		4070651	1		&&			
ANR	4070677	PtrMemberAccess	core -> anal		4070651	0					
ANR	4070678	Identifier	core		4070651	0					
ANR	4070679	Identifier	anal		4070651	1					
ANR	4070680	PtrMemberAccess	core -> anal -> esil		4070651	1					
ANR	4070681	PtrMemberAccess	core -> anal		4070651	0					
ANR	4070682	Identifier	core		4070651	0					
ANR	4070683	Identifier	anal		4070651	1					
ANR	4070684	Identifier	esil		4070651	1					
ANR	4070685	CompoundStatement		4:45:120:120	4070651	1					
ANR	4070686	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1711:2:46915:46954	4070651	0	True				
ANR	4070687	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		4070651	0		=			
ANR	4070688	PtrMemberAccess	core -> anal -> esil -> cmd		4070651	0					
ANR	4070689	PtrMemberAccess	core -> anal -> esil		4070651	0					
ANR	4070690	PtrMemberAccess	core -> anal		4070651	0					
ANR	4070691	Identifier	core		4070651	0					
ANR	4070692	Identifier	anal		4070651	1					
ANR	4070693	Identifier	esil		4070651	1					
ANR	4070694	Identifier	cmd		4070651	1					
ANR	4070695	Identifier	r_core_esil_cmd		4070651	1					
ANR	4070696	ExpressionStatement	free ( core -> anal -> esil -> cmd_step )	1712:2:46958:46991	4070651	1	True				
ANR	4070697	CallExpression	free ( core -> anal -> esil -> cmd_step )		4070651	0					
ANR	4070698	Callee	free		4070651	0					
ANR	4070699	Identifier	free		4070651	0					
ANR	4070700	ArgumentList	core -> anal -> esil -> cmd_step		4070651	1					
ANR	4070701	Argument	core -> anal -> esil -> cmd_step		4070651	0					
ANR	4070702	PtrMemberAccess	core -> anal -> esil -> cmd_step		4070651	0					
ANR	4070703	PtrMemberAccess	core -> anal -> esil		4070651	0					
ANR	4070704	PtrMemberAccess	core -> anal		4070651	0					
ANR	4070705	Identifier	core		4070651	0					
ANR	4070706	Identifier	anal		4070651	1					
ANR	4070707	Identifier	esil		4070651	1					
ANR	4070708	Identifier	cmd_step		4070651	1					
ANR	4070709	ExpressionStatement	core -> anal -> esil -> cmd_step = strdup ( node -> value )	1713:2:46995:47044	4070651	2	True				
ANR	4070710	AssignmentExpression	core -> anal -> esil -> cmd_step = strdup ( node -> value )		4070651	0		=			
ANR	4070711	PtrMemberAccess	core -> anal -> esil -> cmd_step		4070651	0					
ANR	4070712	PtrMemberAccess	core -> anal -> esil		4070651	0					
ANR	4070713	PtrMemberAccess	core -> anal		4070651	0					
ANR	4070714	Identifier	core		4070651	0					
ANR	4070715	Identifier	anal		4070651	1					
ANR	4070716	Identifier	esil		4070651	1					
ANR	4070717	Identifier	cmd_step		4070651	1					
ANR	4070718	CallExpression	strdup ( node -> value )		4070651	1					
ANR	4070719	Callee	strdup		4070651	0					
ANR	4070720	Identifier	strdup		4070651	0					
ANR	4070721	ArgumentList	node -> value		4070651	1					
ANR	4070722	Argument	node -> value		4070651	0					
ANR	4070723	PtrMemberAccess	node -> value		4070651	0					
ANR	4070724	Identifier	node		4070651	0					
ANR	4070725	Identifier	value		4070651	1					
ANR	4070726	ReturnStatement	return true ;	1715:1:47050:47061	4070651	3	True				
ANR	4070727	Identifier	true		4070651	0					
ANR	4070728	ReturnType	static bool		4070651	1					
ANR	4070729	Identifier	cb_cmd_esil_step		4070651	2					
ANR	4070730	ParameterList	"void * user , void * data"		4070651	3					
ANR	4070731	Parameter	void * user	1707:29:46766:46775	4070651	0	True				
ANR	4070732	ParameterType	void *		4070651	0					
ANR	4070733	Identifier	user		4070651	1					
ANR	4070734	Parameter	void * data	1707:41:46778:46787	4070651	1	True				
ANR	4070735	ParameterType	void *		4070651	0					
ANR	4070736	Identifier	data		4070651	1					
ANR	4070737	CFGEntryNode	ENTRY		4070651		True				
ANR	4070738	CFGExitNode	EXIT		4070651		True				
ANR	4070739	Symbol	data		4070651						
ANR	4070740	Symbol	r_core_esil_cmd		4070651						
ANR	4070741	Symbol	core -> anal -> esil -> cmd		4070651						
ANR	4070742	Symbol	* core		4070651						
ANR	4070743	Symbol	core -> anal		4070651						
ANR	4070744	Symbol	node -> value		4070651						
ANR	4070745	Symbol	core		4070651						
ANR	4070746	Symbol	node		4070651						
ANR	4070747	Symbol	* * * core		4070651						
ANR	4070748	Symbol	* core -> anal		4070651						
ANR	4070749	Symbol	core -> anal -> esil -> cmd_step		4070651						
ANR	4070750	Symbol	* core -> anal -> esil		4070651						
ANR	4070751	Symbol	true		4070651						
ANR	4070752	Symbol	* * core -> anal		4070651						
ANR	4070753	Symbol	* node		4070651						
ANR	4070754	Symbol	strdup		4070651						
ANR	4070755	Symbol	core -> anal -> esil		4070651						
ANR	4070756	Symbol	user		4070651						
ANR	4070757	Symbol	* * core		4070651						
ANR	4070758	Function	cb_cmd_esil_step_out	1718:0:47066:47404							
ANR	4070759	FunctionDef	"cb_cmd_esil_step_out (void * user , void * data)"		4070758	0					
ANR	4070760	CompoundStatement		1718:57:47123:47404	4070758	0					
ANR	4070761	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1719:1:47126:47154	4070758	0	True				
ANR	4070762	IdentifierDecl	* core = ( RCore * ) user		4070758	0					
ANR	4070763	IdentifierDeclType	RCore *		4070758	0					
ANR	4070764	Identifier	core		4070758	1					
ANR	4070765	AssignmentExpression	* core = ( RCore * ) user		4070758	2		=			
ANR	4070766	Identifier	core		4070758	0					
ANR	4070767	CastExpression	( RCore * ) user		4070758	1					
ANR	4070768	CastTarget	RCore *		4070758	0					
ANR	4070769	Identifier	user		4070758	1					
ANR	4070770	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1720:1:47157:47197	4070758	1	True				
ANR	4070771	IdentifierDecl	* node = ( RConfigNode * ) data		4070758	0					
ANR	4070772	IdentifierDeclType	RConfigNode *		4070758	0					
ANR	4070773	Identifier	node		4070758	1					
ANR	4070774	AssignmentExpression	* node = ( RConfigNode * ) data		4070758	2		=			
ANR	4070775	Identifier	node		4070758	0					
ANR	4070776	CastExpression	( RConfigNode * ) data		4070758	1					
ANR	4070777	CastTarget	RConfigNode *		4070758	0					
ANR	4070778	Identifier	data		4070758	1					
ANR	4070779	IfStatement	if ( core && core -> anal && core -> anal -> esil )		4070758	2					
ANR	4070780	Condition	core && core -> anal && core -> anal -> esil	1721:5:47204:47241	4070758	0	True				
ANR	4070781	AndExpression	core && core -> anal && core -> anal -> esil		4070758	0		&&			
ANR	4070782	Identifier	core		4070758	0					
ANR	4070783	AndExpression	core -> anal && core -> anal -> esil		4070758	1		&&			
ANR	4070784	PtrMemberAccess	core -> anal		4070758	0					
ANR	4070785	Identifier	core		4070758	0					
ANR	4070786	Identifier	anal		4070758	1					
ANR	4070787	PtrMemberAccess	core -> anal -> esil		4070758	1					
ANR	4070788	PtrMemberAccess	core -> anal		4070758	0					
ANR	4070789	Identifier	core		4070758	0					
ANR	4070790	Identifier	anal		4070758	1					
ANR	4070791	Identifier	esil		4070758	1					
ANR	4070792	CompoundStatement		4:45:120:120	4070758	1					
ANR	4070793	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1722:2:47248:47287	4070758	0	True				
ANR	4070794	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		4070758	0		=			
ANR	4070795	PtrMemberAccess	core -> anal -> esil -> cmd		4070758	0					
ANR	4070796	PtrMemberAccess	core -> anal -> esil		4070758	0					
ANR	4070797	PtrMemberAccess	core -> anal		4070758	0					
ANR	4070798	Identifier	core		4070758	0					
ANR	4070799	Identifier	anal		4070758	1					
ANR	4070800	Identifier	esil		4070758	1					
ANR	4070801	Identifier	cmd		4070758	1					
ANR	4070802	Identifier	r_core_esil_cmd		4070758	1					
ANR	4070803	ExpressionStatement	free ( core -> anal -> esil -> cmd_step_out )	1723:2:47291:47328	4070758	1	True				
ANR	4070804	CallExpression	free ( core -> anal -> esil -> cmd_step_out )		4070758	0					
ANR	4070805	Callee	free		4070758	0					
ANR	4070806	Identifier	free		4070758	0					
ANR	4070807	ArgumentList	core -> anal -> esil -> cmd_step_out		4070758	1					
ANR	4070808	Argument	core -> anal -> esil -> cmd_step_out		4070758	0					
ANR	4070809	PtrMemberAccess	core -> anal -> esil -> cmd_step_out		4070758	0					
ANR	4070810	PtrMemberAccess	core -> anal -> esil		4070758	0					
ANR	4070811	PtrMemberAccess	core -> anal		4070758	0					
ANR	4070812	Identifier	core		4070758	0					
ANR	4070813	Identifier	anal		4070758	1					
ANR	4070814	Identifier	esil		4070758	1					
ANR	4070815	Identifier	cmd_step_out		4070758	1					
ANR	4070816	ExpressionStatement	core -> anal -> esil -> cmd_step_out = strdup ( node -> value )	1724:2:47332:47385	4070758	2	True				
ANR	4070817	AssignmentExpression	core -> anal -> esil -> cmd_step_out = strdup ( node -> value )		4070758	0		=			
ANR	4070818	PtrMemberAccess	core -> anal -> esil -> cmd_step_out		4070758	0					
ANR	4070819	PtrMemberAccess	core -> anal -> esil		4070758	0					
ANR	4070820	PtrMemberAccess	core -> anal		4070758	0					
ANR	4070821	Identifier	core		4070758	0					
ANR	4070822	Identifier	anal		4070758	1					
ANR	4070823	Identifier	esil		4070758	1					
ANR	4070824	Identifier	cmd_step_out		4070758	1					
ANR	4070825	CallExpression	strdup ( node -> value )		4070758	1					
ANR	4070826	Callee	strdup		4070758	0					
ANR	4070827	Identifier	strdup		4070758	0					
ANR	4070828	ArgumentList	node -> value		4070758	1					
ANR	4070829	Argument	node -> value		4070758	0					
ANR	4070830	PtrMemberAccess	node -> value		4070758	0					
ANR	4070831	Identifier	node		4070758	0					
ANR	4070832	Identifier	value		4070758	1					
ANR	4070833	ReturnStatement	return true ;	1726:1:47391:47402	4070758	3	True				
ANR	4070834	Identifier	true		4070758	0					
ANR	4070835	ReturnType	static bool		4070758	1					
ANR	4070836	Identifier	cb_cmd_esil_step_out		4070758	2					
ANR	4070837	ParameterList	"void * user , void * data"		4070758	3					
ANR	4070838	Parameter	void * user	1718:33:47099:47108	4070758	0	True				
ANR	4070839	ParameterType	void *		4070758	0					
ANR	4070840	Identifier	user		4070758	1					
ANR	4070841	Parameter	void * data	1718:45:47111:47120	4070758	1	True				
ANR	4070842	ParameterType	void *		4070758	0					
ANR	4070843	Identifier	data		4070758	1					
ANR	4070844	CFGEntryNode	ENTRY		4070758		True				
ANR	4070845	CFGExitNode	EXIT		4070758		True				
ANR	4070846	Symbol	data		4070758						
ANR	4070847	Symbol	r_core_esil_cmd		4070758						
ANR	4070848	Symbol	core -> anal -> esil -> cmd		4070758						
ANR	4070849	Symbol	* core		4070758						
ANR	4070850	Symbol	core -> anal		4070758						
ANR	4070851	Symbol	core -> anal -> esil -> cmd_step_out		4070758						
ANR	4070852	Symbol	node -> value		4070758						
ANR	4070853	Symbol	core		4070758						
ANR	4070854	Symbol	node		4070758						
ANR	4070855	Symbol	* * * core		4070758						
ANR	4070856	Symbol	* core -> anal		4070758						
ANR	4070857	Symbol	* core -> anal -> esil		4070758						
ANR	4070858	Symbol	true		4070758						
ANR	4070859	Symbol	* * core -> anal		4070758						
ANR	4070860	Symbol	* node		4070758						
ANR	4070861	Symbol	strdup		4070758						
ANR	4070862	Symbol	core -> anal -> esil		4070758						
ANR	4070863	Symbol	user		4070758						
ANR	4070864	Symbol	* * core		4070758						
ANR	4070865	Function	cb_cmd_esil_mdev	1729:0:47407:47733							
ANR	4070866	FunctionDef	"cb_cmd_esil_mdev (void * user , void * data)"		4070865	0					
ANR	4070867	CompoundStatement		1729:53:47460:47733	4070865	0					
ANR	4070868	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1730:1:47463:47491	4070865	0	True				
ANR	4070869	IdentifierDecl	* core = ( RCore * ) user		4070865	0					
ANR	4070870	IdentifierDeclType	RCore *		4070865	0					
ANR	4070871	Identifier	core		4070865	1					
ANR	4070872	AssignmentExpression	* core = ( RCore * ) user		4070865	2		=			
ANR	4070873	Identifier	core		4070865	0					
ANR	4070874	CastExpression	( RCore * ) user		4070865	1					
ANR	4070875	CastTarget	RCore *		4070865	0					
ANR	4070876	Identifier	user		4070865	1					
ANR	4070877	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1731:1:47494:47534	4070865	1	True				
ANR	4070878	IdentifierDecl	* node = ( RConfigNode * ) data		4070865	0					
ANR	4070879	IdentifierDeclType	RConfigNode *		4070865	0					
ANR	4070880	Identifier	node		4070865	1					
ANR	4070881	AssignmentExpression	* node = ( RConfigNode * ) data		4070865	2		=			
ANR	4070882	Identifier	node		4070865	0					
ANR	4070883	CastExpression	( RConfigNode * ) data		4070865	1					
ANR	4070884	CastTarget	RConfigNode *		4070865	0					
ANR	4070885	Identifier	data		4070865	1					
ANR	4070886	IfStatement	if ( core && core -> anal && core -> anal -> esil )		4070865	2					
ANR	4070887	Condition	core && core -> anal && core -> anal -> esil	1732:5:47541:47578	4070865	0	True				
ANR	4070888	AndExpression	core && core -> anal && core -> anal -> esil		4070865	0		&&			
ANR	4070889	Identifier	core		4070865	0					
ANR	4070890	AndExpression	core -> anal && core -> anal -> esil		4070865	1		&&			
ANR	4070891	PtrMemberAccess	core -> anal		4070865	0					
ANR	4070892	Identifier	core		4070865	0					
ANR	4070893	Identifier	anal		4070865	1					
ANR	4070894	PtrMemberAccess	core -> anal -> esil		4070865	1					
ANR	4070895	PtrMemberAccess	core -> anal		4070865	0					
ANR	4070896	Identifier	core		4070865	0					
ANR	4070897	Identifier	anal		4070865	1					
ANR	4070898	Identifier	esil		4070865	1					
ANR	4070899	CompoundStatement		4:45:120:120	4070865	1					
ANR	4070900	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1733:2:47585:47624	4070865	0	True				
ANR	4070901	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		4070865	0		=			
ANR	4070902	PtrMemberAccess	core -> anal -> esil -> cmd		4070865	0					
ANR	4070903	PtrMemberAccess	core -> anal -> esil		4070865	0					
ANR	4070904	PtrMemberAccess	core -> anal		4070865	0					
ANR	4070905	Identifier	core		4070865	0					
ANR	4070906	Identifier	anal		4070865	1					
ANR	4070907	Identifier	esil		4070865	1					
ANR	4070908	Identifier	cmd		4070865	1					
ANR	4070909	Identifier	r_core_esil_cmd		4070865	1					
ANR	4070910	ExpressionStatement	free ( core -> anal -> esil -> cmd_mdev )	1734:2:47628:47661	4070865	1	True				
ANR	4070911	CallExpression	free ( core -> anal -> esil -> cmd_mdev )		4070865	0					
ANR	4070912	Callee	free		4070865	0					
ANR	4070913	Identifier	free		4070865	0					
ANR	4070914	ArgumentList	core -> anal -> esil -> cmd_mdev		4070865	1					
ANR	4070915	Argument	core -> anal -> esil -> cmd_mdev		4070865	0					
ANR	4070916	PtrMemberAccess	core -> anal -> esil -> cmd_mdev		4070865	0					
ANR	4070917	PtrMemberAccess	core -> anal -> esil		4070865	0					
ANR	4070918	PtrMemberAccess	core -> anal		4070865	0					
ANR	4070919	Identifier	core		4070865	0					
ANR	4070920	Identifier	anal		4070865	1					
ANR	4070921	Identifier	esil		4070865	1					
ANR	4070922	Identifier	cmd_mdev		4070865	1					
ANR	4070923	ExpressionStatement	core -> anal -> esil -> cmd_mdev = strdup ( node -> value )	1735:2:47665:47714	4070865	2	True				
ANR	4070924	AssignmentExpression	core -> anal -> esil -> cmd_mdev = strdup ( node -> value )		4070865	0		=			
ANR	4070925	PtrMemberAccess	core -> anal -> esil -> cmd_mdev		4070865	0					
ANR	4070926	PtrMemberAccess	core -> anal -> esil		4070865	0					
ANR	4070927	PtrMemberAccess	core -> anal		4070865	0					
ANR	4070928	Identifier	core		4070865	0					
ANR	4070929	Identifier	anal		4070865	1					
ANR	4070930	Identifier	esil		4070865	1					
ANR	4070931	Identifier	cmd_mdev		4070865	1					
ANR	4070932	CallExpression	strdup ( node -> value )		4070865	1					
ANR	4070933	Callee	strdup		4070865	0					
ANR	4070934	Identifier	strdup		4070865	0					
ANR	4070935	ArgumentList	node -> value		4070865	1					
ANR	4070936	Argument	node -> value		4070865	0					
ANR	4070937	PtrMemberAccess	node -> value		4070865	0					
ANR	4070938	Identifier	node		4070865	0					
ANR	4070939	Identifier	value		4070865	1					
ANR	4070940	ReturnStatement	return true ;	1737:1:47720:47731	4070865	3	True				
ANR	4070941	Identifier	true		4070865	0					
ANR	4070942	ReturnType	static bool		4070865	1					
ANR	4070943	Identifier	cb_cmd_esil_mdev		4070865	2					
ANR	4070944	ParameterList	"void * user , void * data"		4070865	3					
ANR	4070945	Parameter	void * user	1729:29:47436:47445	4070865	0	True				
ANR	4070946	ParameterType	void *		4070865	0					
ANR	4070947	Identifier	user		4070865	1					
ANR	4070948	Parameter	void * data	1729:41:47448:47457	4070865	1	True				
ANR	4070949	ParameterType	void *		4070865	0					
ANR	4070950	Identifier	data		4070865	1					
ANR	4070951	CFGEntryNode	ENTRY		4070865		True				
ANR	4070952	CFGExitNode	EXIT		4070865		True				
ANR	4070953	Symbol	data		4070865						
ANR	4070954	Symbol	r_core_esil_cmd		4070865						
ANR	4070955	Symbol	core -> anal -> esil -> cmd		4070865						
ANR	4070956	Symbol	* core		4070865						
ANR	4070957	Symbol	core -> anal		4070865						
ANR	4070958	Symbol	core -> anal -> esil -> cmd_mdev		4070865						
ANR	4070959	Symbol	node -> value		4070865						
ANR	4070960	Symbol	core		4070865						
ANR	4070961	Symbol	node		4070865						
ANR	4070962	Symbol	* * * core		4070865						
ANR	4070963	Symbol	* core -> anal		4070865						
ANR	4070964	Symbol	* core -> anal -> esil		4070865						
ANR	4070965	Symbol	true		4070865						
ANR	4070966	Symbol	* * core -> anal		4070865						
ANR	4070967	Symbol	* node		4070865						
ANR	4070968	Symbol	strdup		4070865						
ANR	4070969	Symbol	core -> anal -> esil		4070865						
ANR	4070970	Symbol	user		4070865						
ANR	4070971	Symbol	* * core		4070865						
ANR	4070972	Function	cb_cmd_esil_trap	1740:0:47736:48025							
ANR	4070973	FunctionDef	"cb_cmd_esil_trap (void * user , void * data)"		4070972	0					
ANR	4070974	CompoundStatement		1740:53:47789:48025	4070972	0					
ANR	4070975	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1741:1:47792:47820	4070972	0	True				
ANR	4070976	IdentifierDecl	* core = ( RCore * ) user		4070972	0					
ANR	4070977	IdentifierDeclType	RCore *		4070972	0					
ANR	4070978	Identifier	core		4070972	1					
ANR	4070979	AssignmentExpression	* core = ( RCore * ) user		4070972	2		=			
ANR	4070980	Identifier	core		4070972	0					
ANR	4070981	CastExpression	( RCore * ) user		4070972	1					
ANR	4070982	CastTarget	RCore *		4070972	0					
ANR	4070983	Identifier	user		4070972	1					
ANR	4070984	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1742:1:47823:47863	4070972	1	True				
ANR	4070985	IdentifierDecl	* node = ( RConfigNode * ) data		4070972	0					
ANR	4070986	IdentifierDeclType	RConfigNode *		4070972	0					
ANR	4070987	Identifier	node		4070972	1					
ANR	4070988	AssignmentExpression	* node = ( RConfigNode * ) data		4070972	2		=			
ANR	4070989	Identifier	node		4070972	0					
ANR	4070990	CastExpression	( RConfigNode * ) data		4070972	1					
ANR	4070991	CastTarget	RConfigNode *		4070972	0					
ANR	4070992	Identifier	data		4070972	1					
ANR	4070993	IfStatement	if ( core && core -> anal && core -> anal -> esil )		4070972	2					
ANR	4070994	Condition	core && core -> anal && core -> anal -> esil	1743:5:47870:47907	4070972	0	True				
ANR	4070995	AndExpression	core && core -> anal && core -> anal -> esil		4070972	0		&&			
ANR	4070996	Identifier	core		4070972	0					
ANR	4070997	AndExpression	core -> anal && core -> anal -> esil		4070972	1		&&			
ANR	4070998	PtrMemberAccess	core -> anal		4070972	0					
ANR	4070999	Identifier	core		4070972	0					
ANR	4071000	Identifier	anal		4070972	1					
ANR	4071001	PtrMemberAccess	core -> anal -> esil		4070972	1					
ANR	4071002	PtrMemberAccess	core -> anal		4070972	0					
ANR	4071003	Identifier	core		4070972	0					
ANR	4071004	Identifier	anal		4070972	1					
ANR	4071005	Identifier	esil		4070972	1					
ANR	4071006	CompoundStatement		4:45:120:120	4070972	1					
ANR	4071007	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1744:2:47914:47953	4070972	0	True				
ANR	4071008	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		4070972	0		=			
ANR	4071009	PtrMemberAccess	core -> anal -> esil -> cmd		4070972	0					
ANR	4071010	PtrMemberAccess	core -> anal -> esil		4070972	0					
ANR	4071011	PtrMemberAccess	core -> anal		4070972	0					
ANR	4071012	Identifier	core		4070972	0					
ANR	4071013	Identifier	anal		4070972	1					
ANR	4071014	Identifier	esil		4070972	1					
ANR	4071015	Identifier	cmd		4070972	1					
ANR	4071016	Identifier	r_core_esil_cmd		4070972	1					
ANR	4071017	ExpressionStatement	core -> anal -> esil -> cmd_trap = strdup ( node -> value )	1745:2:47957:48006	4070972	1	True				
ANR	4071018	AssignmentExpression	core -> anal -> esil -> cmd_trap = strdup ( node -> value )		4070972	0		=			
ANR	4071019	PtrMemberAccess	core -> anal -> esil -> cmd_trap		4070972	0					
ANR	4071020	PtrMemberAccess	core -> anal -> esil		4070972	0					
ANR	4071021	PtrMemberAccess	core -> anal		4070972	0					
ANR	4071022	Identifier	core		4070972	0					
ANR	4071023	Identifier	anal		4070972	1					
ANR	4071024	Identifier	esil		4070972	1					
ANR	4071025	Identifier	cmd_trap		4070972	1					
ANR	4071026	CallExpression	strdup ( node -> value )		4070972	1					
ANR	4071027	Callee	strdup		4070972	0					
ANR	4071028	Identifier	strdup		4070972	0					
ANR	4071029	ArgumentList	node -> value		4070972	1					
ANR	4071030	Argument	node -> value		4070972	0					
ANR	4071031	PtrMemberAccess	node -> value		4070972	0					
ANR	4071032	Identifier	node		4070972	0					
ANR	4071033	Identifier	value		4070972	1					
ANR	4071034	ReturnStatement	return true ;	1747:1:48012:48023	4070972	3	True				
ANR	4071035	Identifier	true		4070972	0					
ANR	4071036	ReturnType	static bool		4070972	1					
ANR	4071037	Identifier	cb_cmd_esil_trap		4070972	2					
ANR	4071038	ParameterList	"void * user , void * data"		4070972	3					
ANR	4071039	Parameter	void * user	1740:29:47765:47774	4070972	0	True				
ANR	4071040	ParameterType	void *		4070972	0					
ANR	4071041	Identifier	user		4070972	1					
ANR	4071042	Parameter	void * data	1740:41:47777:47786	4070972	1	True				
ANR	4071043	ParameterType	void *		4070972	0					
ANR	4071044	Identifier	data		4070972	1					
ANR	4071045	CFGEntryNode	ENTRY		4070972		True				
ANR	4071046	CFGExitNode	EXIT		4070972		True				
ANR	4071047	Symbol	data		4070972						
ANR	4071048	Symbol	r_core_esil_cmd		4070972						
ANR	4071049	Symbol	core -> anal -> esil -> cmd		4070972						
ANR	4071050	Symbol	* core		4070972						
ANR	4071051	Symbol	core -> anal		4070972						
ANR	4071052	Symbol	node -> value		4070972						
ANR	4071053	Symbol	core		4070972						
ANR	4071054	Symbol	node		4070972						
ANR	4071055	Symbol	* * * core		4070972						
ANR	4071056	Symbol	* core -> anal		4070972						
ANR	4071057	Symbol	core -> anal -> esil -> cmd_trap		4070972						
ANR	4071058	Symbol	* core -> anal -> esil		4070972						
ANR	4071059	Symbol	true		4070972						
ANR	4071060	Symbol	* * core -> anal		4070972						
ANR	4071061	Symbol	* node		4070972						
ANR	4071062	Symbol	strdup		4070972						
ANR	4071063	Symbol	core -> anal -> esil		4070972						
ANR	4071064	Symbol	user		4070972						
ANR	4071065	Symbol	* * core		4070972						
ANR	4071066	Function	cb_fsview	1750:0:48028:48501							
ANR	4071067	FunctionDef	"cb_fsview (void * user , void * data)"		4071066	0					
ANR	4071068	CompoundStatement		1750:46:48074:48501	4071066	0					
ANR	4071069	IdentifierDeclStatement	int type = R_FS_VIEW_NORMAL ;	1751:1:48077:48104	4071066	0	True				
ANR	4071070	IdentifierDecl	type = R_FS_VIEW_NORMAL		4071066	0					
ANR	4071071	IdentifierDeclType	int		4071066	0					
ANR	4071072	Identifier	type		4071066	1					
ANR	4071073	AssignmentExpression	type = R_FS_VIEW_NORMAL		4071066	2		=			
ANR	4071074	Identifier	R_FS_VIEW_NORMAL		4071066	0					
ANR	4071075	Identifier	R_FS_VIEW_NORMAL		4071066	1					
ANR	4071076	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1752:1:48107:48135	4071066	1	True				
ANR	4071077	IdentifierDecl	* core = ( RCore * ) user		4071066	0					
ANR	4071078	IdentifierDeclType	RCore *		4071066	0					
ANR	4071079	Identifier	core		4071066	1					
ANR	4071080	AssignmentExpression	* core = ( RCore * ) user		4071066	2		=			
ANR	4071081	Identifier	core		4071066	0					
ANR	4071082	CastExpression	( RCore * ) user		4071066	1					
ANR	4071083	CastTarget	RCore *		4071066	0					
ANR	4071084	Identifier	user		4071066	1					
ANR	4071085	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1753:1:48138:48178	4071066	2	True				
ANR	4071086	IdentifierDecl	* node = ( RConfigNode * ) data		4071066	0					
ANR	4071087	IdentifierDeclType	RConfigNode *		4071066	0					
ANR	4071088	Identifier	node		4071066	1					
ANR	4071089	AssignmentExpression	* node = ( RConfigNode * ) data		4071066	2		=			
ANR	4071090	Identifier	node		4071066	0					
ANR	4071091	CastExpression	( RConfigNode * ) data		4071066	1					
ANR	4071092	CastTarget	RConfigNode *		4071066	0					
ANR	4071093	Identifier	data		4071066	1					
ANR	4071094	IfStatement	if ( * node -> value == '?' )		4071066	3					
ANR	4071095	Condition	* node -> value == '?'	1754:5:48185:48203	4071066	0	True				
ANR	4071096	EqualityExpression	* node -> value == '?'		4071066	0		==			
ANR	4071097	UnaryOperationExpression	* node -> value		4071066	0					
ANR	4071098	UnaryOperator	*		4071066	0					
ANR	4071099	PtrMemberAccess	node -> value		4071066	1					
ANR	4071100	Identifier	node		4071066	0					
ANR	4071101	Identifier	value		4071066	1					
ANR	4071102	PrimaryExpression	'?'		4071066	1					
ANR	4071103	CompoundStatement		5:26:131:131	4071066	1					
ANR	4071104	ExpressionStatement	print_node_options ( node )	1755:2:48210:48235	4071066	0	True				
ANR	4071105	CallExpression	print_node_options ( node )		4071066	0					
ANR	4071106	Callee	print_node_options		4071066	0					
ANR	4071107	Identifier	print_node_options		4071066	0					
ANR	4071108	ArgumentList	node		4071066	1					
ANR	4071109	Argument	node		4071066	0					
ANR	4071110	Identifier	node		4071066	0					
ANR	4071111	ReturnStatement	return false ;	1756:2:48239:48251	4071066	1	True				
ANR	4071112	Identifier	false		4071066	0					
ANR	4071113	IfStatement	"if ( ! strcmp ( node -> value , ""all"" ) )"		4071066	4					
ANR	4071114	Condition	"! strcmp ( node -> value , ""all"" )"	1758:5:48261:48288	4071066	0	True				
ANR	4071115	UnaryOperationExpression	"! strcmp ( node -> value , ""all"" )"		4071066	0					
ANR	4071116	UnaryOperator	!		4071066	0					
ANR	4071117	CallExpression	"strcmp ( node -> value , ""all"" )"		4071066	1					
ANR	4071118	Callee	strcmp		4071066	0					
ANR	4071119	Identifier	strcmp		4071066	0					
ANR	4071120	ArgumentList	node -> value		4071066	1					
ANR	4071121	Argument	node -> value		4071066	0					
ANR	4071122	PtrMemberAccess	node -> value		4071066	0					
ANR	4071123	Identifier	node		4071066	0					
ANR	4071124	Identifier	value		4071066	1					
ANR	4071125	Argument	"""all"""		4071066	1					
ANR	4071126	PrimaryExpression	"""all"""		4071066	0					
ANR	4071127	CompoundStatement		9:35:216:216	4071066	1					
ANR	4071128	ExpressionStatement	type = R_FS_VIEW_ALL	1759:2:48295:48315	4071066	0	True				
ANR	4071129	AssignmentExpression	type = R_FS_VIEW_ALL		4071066	0		=			
ANR	4071130	Identifier	type		4071066	0					
ANR	4071131	Identifier	R_FS_VIEW_ALL		4071066	1					
ANR	4071132	IfStatement	"if ( ! strstr ( node -> value , ""del"" ) )"		4071066	5					
ANR	4071133	Condition	"! strstr ( node -> value , ""del"" )"	1761:5:48325:48352	4071066	0	True				
ANR	4071134	UnaryOperationExpression	"! strstr ( node -> value , ""del"" )"		4071066	0					
ANR	4071135	UnaryOperator	!		4071066	0					
ANR	4071136	CallExpression	"strstr ( node -> value , ""del"" )"		4071066	1					
ANR	4071137	Callee	strstr		4071066	0					
ANR	4071138	Identifier	strstr		4071066	0					
ANR	4071139	ArgumentList	node -> value		4071066	1					
ANR	4071140	Argument	node -> value		4071066	0					
ANR	4071141	PtrMemberAccess	node -> value		4071066	0					
ANR	4071142	Identifier	node		4071066	0					
ANR	4071143	Identifier	value		4071066	1					
ANR	4071144	Argument	"""del"""		4071066	1					
ANR	4071145	PrimaryExpression	"""del"""		4071066	0					
ANR	4071146	CompoundStatement		12:35:280:280	4071066	1					
ANR	4071147	ExpressionStatement	type |= R_FS_VIEW_DELETED	1762:2:48359:48384	4071066	0	True				
ANR	4071148	AssignmentExpression	type |= R_FS_VIEW_DELETED		4071066	0		|=			
ANR	4071149	Identifier	type		4071066	0					
ANR	4071150	Identifier	R_FS_VIEW_DELETED		4071066	1					
ANR	4071151	IfStatement	"if ( ! strstr ( node -> value , ""spe"" ) )"		4071066	6					
ANR	4071152	Condition	"! strstr ( node -> value , ""spe"" )"	1764:5:48394:48421	4071066	0	True				
ANR	4071153	UnaryOperationExpression	"! strstr ( node -> value , ""spe"" )"		4071066	0					
ANR	4071154	UnaryOperator	!		4071066	0					
ANR	4071155	CallExpression	"strstr ( node -> value , ""spe"" )"		4071066	1					
ANR	4071156	Callee	strstr		4071066	0					
ANR	4071157	Identifier	strstr		4071066	0					
ANR	4071158	ArgumentList	node -> value		4071066	1					
ANR	4071159	Argument	node -> value		4071066	0					
ANR	4071160	PtrMemberAccess	node -> value		4071066	0					
ANR	4071161	Identifier	node		4071066	0					
ANR	4071162	Identifier	value		4071066	1					
ANR	4071163	Argument	"""spe"""		4071066	1					
ANR	4071164	PrimaryExpression	"""spe"""		4071066	0					
ANR	4071165	CompoundStatement		15:35:349:349	4071066	1					
ANR	4071166	ExpressionStatement	type |= R_FS_VIEW_SPECIAL	1765:2:48428:48453	4071066	0	True				
ANR	4071167	AssignmentExpression	type |= R_FS_VIEW_SPECIAL		4071066	0		|=			
ANR	4071168	Identifier	type		4071066	0					
ANR	4071169	Identifier	R_FS_VIEW_SPECIAL		4071066	1					
ANR	4071170	ExpressionStatement	"r_fs_view ( core -> fs , type )"	1767:1:48459:48485	4071066	7	True				
ANR	4071171	CallExpression	"r_fs_view ( core -> fs , type )"		4071066	0					
ANR	4071172	Callee	r_fs_view		4071066	0					
ANR	4071173	Identifier	r_fs_view		4071066	0					
ANR	4071174	ArgumentList	core -> fs		4071066	1					
ANR	4071175	Argument	core -> fs		4071066	0					
ANR	4071176	PtrMemberAccess	core -> fs		4071066	0					
ANR	4071177	Identifier	core		4071066	0					
ANR	4071178	Identifier	fs		4071066	1					
ANR	4071179	Argument	type		4071066	1					
ANR	4071180	Identifier	type		4071066	0					
ANR	4071181	ReturnStatement	return true ;	1768:1:48488:48499	4071066	8	True				
ANR	4071182	Identifier	true		4071066	0					
ANR	4071183	ReturnType	static bool		4071066	1					
ANR	4071184	Identifier	cb_fsview		4071066	2					
ANR	4071185	ParameterList	"void * user , void * data"		4071066	3					
ANR	4071186	Parameter	void * user	1750:22:48050:48059	4071066	0	True				
ANR	4071187	ParameterType	void *		4071066	0					
ANR	4071188	Identifier	user		4071066	1					
ANR	4071189	Parameter	void * data	1750:34:48062:48071	4071066	1	True				
ANR	4071190	ParameterType	void *		4071066	0					
ANR	4071191	Identifier	data		4071066	1					
ANR	4071192	CFGEntryNode	ENTRY		4071066		True				
ANR	4071193	CFGExitNode	EXIT		4071066		True				
ANR	4071194	Symbol	strcmp		4071066						
ANR	4071195	Symbol	* node -> value		4071066						
ANR	4071196	Symbol	R_FS_VIEW_SPECIAL		4071066						
ANR	4071197	Symbol	data		4071066						
ANR	4071198	Symbol	R_FS_VIEW_NORMAL		4071066						
ANR	4071199	Symbol	false		4071066						
ANR	4071200	Symbol	* core		4071066						
ANR	4071201	Symbol	type		4071066						
ANR	4071202	Symbol	R_FS_VIEW_DELETED		4071066						
ANR	4071203	Symbol	R_FS_VIEW_ALL		4071066						
ANR	4071204	Symbol	node -> value		4071066						
ANR	4071205	Symbol	core		4071066						
ANR	4071206	Symbol	node		4071066						
ANR	4071207	Symbol	* * node		4071066						
ANR	4071208	Symbol	strstr		4071066						
ANR	4071209	Symbol	true		4071066						
ANR	4071210	Symbol	* node		4071066						
ANR	4071211	Symbol	core -> fs		4071066						
ANR	4071212	Symbol	user		4071066						
ANR	4071213	Function	cb_cmddepth	1771:0:48504:48712							
ANR	4071214	FunctionDef	"cb_cmddepth (void * user , void * data)"		4071213	0					
ANR	4071215	CompoundStatement		1771:48:48552:48712	4071213	0					
ANR	4071216	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1772:1:48555:48582	4071213	0	True				
ANR	4071217	IdentifierDecl	* core = ( RCore * ) user		4071213	0					
ANR	4071218	IdentifierDeclType	RCore *		4071213	0					
ANR	4071219	Identifier	core		4071213	1					
ANR	4071220	AssignmentExpression	* core = ( RCore * ) user		4071213	2		=			
ANR	4071221	Identifier	core		4071213	0					
ANR	4071222	CastExpression	( RCore * ) user		4071213	1					
ANR	4071223	CastTarget	RCore *		4071213	0					
ANR	4071224	Identifier	user		4071213	1					
ANR	4071225	IdentifierDeclStatement	"int c = R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 ) ;"	1773:1:48585:48633	4071213	1	True				
ANR	4071226	IdentifierDecl	"c = R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 )"		4071213	0					
ANR	4071227	IdentifierDeclType	int		4071213	0					
ANR	4071228	Identifier	c		4071213	1					
ANR	4071229	AssignmentExpression	"c = R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 )"		4071213	2		=			
ANR	4071230	Identifier	c		4071213	0					
ANR	4071231	CallExpression	"R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 )"		4071213	1					
ANR	4071232	Callee	R_MAX		4071213	0					
ANR	4071233	Identifier	R_MAX		4071213	0					
ANR	4071234	ArgumentList	( ( RConfigNode * ) data ) -> i_value		4071213	1					
ANR	4071235	Argument	( ( RConfigNode * ) data ) -> i_value		4071213	0					
ANR	4071236	PtrMemberAccess	( ( RConfigNode * ) data ) -> i_value		4071213	0					
ANR	4071237	CastExpression	( RConfigNode * ) data		4071213	0					
ANR	4071238	CastTarget	RConfigNode *		4071213	0					
ANR	4071239	Identifier	data		4071213	1					
ANR	4071240	Identifier	i_value		4071213	1					
ANR	4071241	Argument	0		4071213	1					
ANR	4071242	PrimaryExpression	0		4071213	0					
ANR	4071243	ExpressionStatement	core -> max_cmd_depth = c	1774:1:48636:48659	4071213	2	True				
ANR	4071244	AssignmentExpression	core -> max_cmd_depth = c		4071213	0		=			
ANR	4071245	PtrMemberAccess	core -> max_cmd_depth		4071213	0					
ANR	4071246	Identifier	core		4071213	0					
ANR	4071247	Identifier	max_cmd_depth		4071213	1					
ANR	4071248	Identifier	c		4071213	1					
ANR	4071249	ExpressionStatement	core -> cons -> context -> cmd_depth = c	1775:1:48662:48696	4071213	3	True				
ANR	4071250	AssignmentExpression	core -> cons -> context -> cmd_depth = c		4071213	0		=			
ANR	4071251	PtrMemberAccess	core -> cons -> context -> cmd_depth		4071213	0					
ANR	4071252	PtrMemberAccess	core -> cons -> context		4071213	0					
ANR	4071253	PtrMemberAccess	core -> cons		4071213	0					
ANR	4071254	Identifier	core		4071213	0					
ANR	4071255	Identifier	cons		4071213	1					
ANR	4071256	Identifier	context		4071213	1					
ANR	4071257	Identifier	cmd_depth		4071213	1					
ANR	4071258	Identifier	c		4071213	1					
ANR	4071259	ReturnStatement	return true ;	1776:1:48699:48710	4071213	4	True				
ANR	4071260	Identifier	true		4071213	0					
ANR	4071261	ReturnType	static bool		4071213	1					
ANR	4071262	Identifier	cb_cmddepth		4071213	2					
ANR	4071263	ParameterList	"void * user , void * data"		4071213	3					
ANR	4071264	Parameter	void * user	1771:24:48528:48537	4071213	0	True				
ANR	4071265	ParameterType	void *		4071213	0					
ANR	4071266	Identifier	user		4071213	1					
ANR	4071267	Parameter	void * data	1771:36:48540:48549	4071213	1	True				
ANR	4071268	ParameterType	void *		4071213	0					
ANR	4071269	Identifier	data		4071213	1					
ANR	4071270	CFGEntryNode	ENTRY		4071213		True				
ANR	4071271	CFGExitNode	EXIT		4071213		True				
ANR	4071272	Symbol	c		4071213						
ANR	4071273	Symbol	data		4071213						
ANR	4071274	Symbol	* core -> cons		4071213						
ANR	4071275	Symbol	* * core -> cons		4071213						
ANR	4071276	Symbol	* core		4071213						
ANR	4071277	Symbol	core -> max_cmd_depth		4071213						
ANR	4071278	Symbol	( ( RConfigNode * ) data ) -> i_value		4071213						
ANR	4071279	Symbol	core		4071213						
ANR	4071280	Symbol	* * * core		4071213						
ANR	4071281	Symbol	core -> cons		4071213						
ANR	4071282	Symbol	* core -> cons -> context		4071213						
ANR	4071283	Symbol	R_MAX		4071213						
ANR	4071284	Symbol	true		4071213						
ANR	4071285	Symbol	user		4071213						
ANR	4071286	Symbol	* data		4071213						
ANR	4071287	Symbol	* * core		4071213						
ANR	4071288	Symbol	core -> cons -> context		4071213						
ANR	4071289	Symbol	core -> cons -> context -> cmd_depth		4071213						
ANR	4071290	Function	cb_hexcols	1779:0:48715:48933							
ANR	4071291	FunctionDef	"cb_hexcols (void * user , void * data)"		4071290	0					
ANR	4071292	CompoundStatement		1779:47:48762:48933	4071290	0					
ANR	4071293	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1780:1:48765:48792	4071290	0	True				
ANR	4071294	IdentifierDecl	* core = ( RCore * ) user		4071290	0					
ANR	4071295	IdentifierDeclType	RCore *		4071290	0					
ANR	4071296	Identifier	core		4071290	1					
ANR	4071297	AssignmentExpression	* core = ( RCore * ) user		4071290	2		=			
ANR	4071298	Identifier	core		4071290	0					
ANR	4071299	CastExpression	( RCore * ) user		4071290	1					
ANR	4071300	CastTarget	RCore *		4071290	0					
ANR	4071301	Identifier	user		4071290	1					
ANR	4071302	IdentifierDeclStatement	"int c = R_MIN ( 1024 , R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 ) ) ;"	1781:1:48795:48857	4071290	1	True				
ANR	4071303	IdentifierDecl	"c = R_MIN ( 1024 , R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 ) )"		4071290	0					
ANR	4071304	IdentifierDeclType	int		4071290	0					
ANR	4071305	Identifier	c		4071290	1					
ANR	4071306	AssignmentExpression	"c = R_MIN ( 1024 , R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 ) )"		4071290	2		=			
ANR	4071307	Identifier	c		4071290	0					
ANR	4071308	CallExpression	"R_MIN ( 1024 , R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 ) )"		4071290	1					
ANR	4071309	Callee	R_MIN		4071290	0					
ANR	4071310	Identifier	R_MIN		4071290	0					
ANR	4071311	ArgumentList	1024		4071290	1					
ANR	4071312	Argument	1024		4071290	0					
ANR	4071313	PrimaryExpression	1024		4071290	0					
ANR	4071314	Argument	"R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 )"		4071290	1					
ANR	4071315	CallExpression	"R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 )"		4071290	0					
ANR	4071316	Callee	R_MAX		4071290	0					
ANR	4071317	Identifier	R_MAX		4071290	0					
ANR	4071318	ArgumentList	( ( RConfigNode * ) data ) -> i_value		4071290	1					
ANR	4071319	Argument	( ( RConfigNode * ) data ) -> i_value		4071290	0					
ANR	4071320	PtrMemberAccess	( ( RConfigNode * ) data ) -> i_value		4071290	0					
ANR	4071321	CastExpression	( RConfigNode * ) data		4071290	0					
ANR	4071322	CastTarget	RConfigNode *		4071290	0					
ANR	4071323	Identifier	data		4071290	1					
ANR	4071324	Identifier	i_value		4071290	1					
ANR	4071325	Argument	0		4071290	1					
ANR	4071326	PrimaryExpression	0		4071290	0					
ANR	4071327	ExpressionStatement	core -> print -> cols = c	1782:1:48860:48881	4071290	2	True				
ANR	4071328	AssignmentExpression	core -> print -> cols = c		4071290	0		=			
ANR	4071329	PtrMemberAccess	core -> print -> cols		4071290	0					
ANR	4071330	PtrMemberAccess	core -> print		4071290	0					
ANR	4071331	Identifier	core		4071290	0					
ANR	4071332	Identifier	print		4071290	1					
ANR	4071333	Identifier	cols		4071290	1					
ANR	4071334	Identifier	c		4071290	1					
ANR	4071335	ExpressionStatement	core -> dbg -> regcols = c / 4	1783:1:48893:48917	4071290	3	True				
ANR	4071336	AssignmentExpression	core -> dbg -> regcols = c / 4		4071290	0		=			
ANR	4071337	PtrMemberAccess	core -> dbg -> regcols		4071290	0					
ANR	4071338	PtrMemberAccess	core -> dbg		4071290	0					
ANR	4071339	Identifier	core		4071290	0					
ANR	4071340	Identifier	dbg		4071290	1					
ANR	4071341	Identifier	regcols		4071290	1					
ANR	4071342	MultiplicativeExpression	c / 4		4071290	1		/			
ANR	4071343	Identifier	c		4071290	0					
ANR	4071344	PrimaryExpression	4		4071290	1					
ANR	4071345	ReturnStatement	return true ;	1784:1:48920:48931	4071290	4	True				
ANR	4071346	Identifier	true		4071290	0					
ANR	4071347	ReturnType	static bool		4071290	1					
ANR	4071348	Identifier	cb_hexcols		4071290	2					
ANR	4071349	ParameterList	"void * user , void * data"		4071290	3					
ANR	4071350	Parameter	void * user	1779:23:48738:48747	4071290	0	True				
ANR	4071351	ParameterType	void *		4071290	0					
ANR	4071352	Identifier	user		4071290	1					
ANR	4071353	Parameter	void * data	1779:35:48750:48759	4071290	1	True				
ANR	4071354	ParameterType	void *		4071290	0					
ANR	4071355	Identifier	data		4071290	1					
ANR	4071356	CFGEntryNode	ENTRY		4071290		True				
ANR	4071357	CFGExitNode	EXIT		4071290		True				
ANR	4071358	Symbol	c		4071290						
ANR	4071359	Symbol	data		4071290						
ANR	4071360	Symbol	core -> print -> cols		4071290						
ANR	4071361	Symbol	* core		4071290						
ANR	4071362	Symbol	R_MIN		4071290						
ANR	4071363	Symbol	( ( RConfigNode * ) data ) -> i_value		4071290						
ANR	4071364	Symbol	core		4071290						
ANR	4071365	Symbol	* core -> print		4071290						
ANR	4071366	Symbol	R_MAX		4071290						
ANR	4071367	Symbol	true		4071290						
ANR	4071368	Symbol	core -> print		4071290						
ANR	4071369	Symbol	user		4071290						
ANR	4071370	Symbol	* data		4071290						
ANR	4071371	Symbol	* core -> dbg		4071290						
ANR	4071372	Symbol	* * core		4071290						
ANR	4071373	Symbol	core -> dbg -> regcols		4071290						
ANR	4071374	Symbol	core -> dbg		4071290						
ANR	4071375	Function	cb_hexstride	1787:0:48936:49092							
ANR	4071376	FunctionDef	"cb_hexstride (void * user , void * data)"		4071375	0					
ANR	4071377	CompoundStatement		1787:49:48985:49092	4071375	0					
ANR	4071378	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1788:1:48988:49027	4071375	0	True				
ANR	4071379	IdentifierDecl	* node = ( RConfigNode * ) data		4071375	0					
ANR	4071380	IdentifierDeclType	RConfigNode *		4071375	0					
ANR	4071381	Identifier	node		4071375	1					
ANR	4071382	AssignmentExpression	* node = ( RConfigNode * ) data		4071375	2		=			
ANR	4071383	Identifier	node		4071375	0					
ANR	4071384	CastExpression	( RConfigNode * ) data		4071375	1					
ANR	4071385	CastTarget	RConfigNode *		4071375	0					
ANR	4071386	Identifier	data		4071375	1					
ANR	4071387	ExpressionStatement	( ( RCore * ) user ) -> print -> stride = node -> i_value	1789:1:49030:49076	4071375	1	True				
ANR	4071388	AssignmentExpression	( ( RCore * ) user ) -> print -> stride = node -> i_value		4071375	0		=			
ANR	4071389	PtrMemberAccess	( ( RCore * ) user ) -> print -> stride		4071375	0					
ANR	4071390	PtrMemberAccess	( ( RCore * ) user ) -> print		4071375	0					
ANR	4071391	CastExpression	( RCore * ) user		4071375	0					
ANR	4071392	CastTarget	RCore *		4071375	0					
ANR	4071393	Identifier	user		4071375	1					
ANR	4071394	Identifier	print		4071375	1					
ANR	4071395	Identifier	stride		4071375	1					
ANR	4071396	PtrMemberAccess	node -> i_value		4071375	1					
ANR	4071397	Identifier	node		4071375	0					
ANR	4071398	Identifier	i_value		4071375	1					
ANR	4071399	ReturnStatement	return true ;	1790:1:49079:49090	4071375	2	True				
ANR	4071400	Identifier	true		4071375	0					
ANR	4071401	ReturnType	static bool		4071375	1					
ANR	4071402	Identifier	cb_hexstride		4071375	2					
ANR	4071403	ParameterList	"void * user , void * data"		4071375	3					
ANR	4071404	Parameter	void * user	1787:25:48961:48970	4071375	0	True				
ANR	4071405	ParameterType	void *		4071375	0					
ANR	4071406	Identifier	user		4071375	1					
ANR	4071407	Parameter	void * data	1787:37:48973:48982	4071375	1	True				
ANR	4071408	ParameterType	void *		4071375	0					
ANR	4071409	Identifier	data		4071375	1					
ANR	4071410	CFGEntryNode	ENTRY		4071375		True				
ANR	4071411	CFGExitNode	EXIT		4071375		True				
ANR	4071412	Symbol	node		4071375						
ANR	4071413	Symbol	* ( ( RCore * ) user ) -> print		4071375						
ANR	4071414	Symbol	data		4071375						
ANR	4071415	Symbol	* user		4071375						
ANR	4071416	Symbol	( ( RCore * ) user ) -> print -> stride		4071375						
ANR	4071417	Symbol	true		4071375						
ANR	4071418	Symbol	* * user		4071375						
ANR	4071419	Symbol	* node		4071375						
ANR	4071420	Symbol	( ( RCore * ) user ) -> print		4071375						
ANR	4071421	Symbol	user		4071375						
ANR	4071422	Symbol	node -> i_value		4071375						
ANR	4071423	Function	cb_search_kwidx	1793:0:49095:49275							
ANR	4071424	FunctionDef	"cb_search_kwidx (void * user , void * data)"		4071423	0					
ANR	4071425	CompoundStatement		1793:52:49147:49275	4071423	0					
ANR	4071426	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1794:1:49150:49178	4071423	0	True				
ANR	4071427	IdentifierDecl	* core = ( RCore * ) user		4071423	0					
ANR	4071428	IdentifierDeclType	RCore *		4071423	0					
ANR	4071429	Identifier	core		4071423	1					
ANR	4071430	AssignmentExpression	* core = ( RCore * ) user		4071423	2		=			
ANR	4071431	Identifier	core		4071423	0					
ANR	4071432	CastExpression	( RCore * ) user		4071423	1					
ANR	4071433	CastTarget	RCore *		4071423	0					
ANR	4071434	Identifier	user		4071423	1					
ANR	4071435	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1795:1:49181:49221	4071423	1	True				
ANR	4071436	IdentifierDecl	* node = ( RConfigNode * ) data		4071423	0					
ANR	4071437	IdentifierDeclType	RConfigNode *		4071423	0					
ANR	4071438	Identifier	node		4071423	1					
ANR	4071439	AssignmentExpression	* node = ( RConfigNode * ) data		4071423	2		=			
ANR	4071440	Identifier	node		4071423	0					
ANR	4071441	CastExpression	( RConfigNode * ) data		4071423	1					
ANR	4071442	CastTarget	RConfigNode *		4071423	0					
ANR	4071443	Identifier	data		4071423	1					
ANR	4071444	ExpressionStatement	core -> search -> n_kws = node -> i_value	1796:1:49224:49259	4071423	2	True				
ANR	4071445	AssignmentExpression	core -> search -> n_kws = node -> i_value		4071423	0		=			
ANR	4071446	PtrMemberAccess	core -> search -> n_kws		4071423	0					
ANR	4071447	PtrMemberAccess	core -> search		4071423	0					
ANR	4071448	Identifier	core		4071423	0					
ANR	4071449	Identifier	search		4071423	1					
ANR	4071450	Identifier	n_kws		4071423	1					
ANR	4071451	PtrMemberAccess	node -> i_value		4071423	1					
ANR	4071452	Identifier	node		4071423	0					
ANR	4071453	Identifier	i_value		4071423	1					
ANR	4071454	ReturnStatement	return true ;	1797:1:49262:49273	4071423	3	True				
ANR	4071455	Identifier	true		4071423	0					
ANR	4071456	ReturnType	static bool		4071423	1					
ANR	4071457	Identifier	cb_search_kwidx		4071423	2					
ANR	4071458	ParameterList	"void * user , void * data"		4071423	3					
ANR	4071459	Parameter	void * user	1793:28:49123:49132	4071423	0	True				
ANR	4071460	ParameterType	void *		4071423	0					
ANR	4071461	Identifier	user		4071423	1					
ANR	4071462	Parameter	void * data	1793:40:49135:49144	4071423	1	True				
ANR	4071463	ParameterType	void *		4071423	0					
ANR	4071464	Identifier	data		4071423	1					
ANR	4071465	CFGEntryNode	ENTRY		4071423		True				
ANR	4071466	CFGExitNode	EXIT		4071423		True				
ANR	4071467	Symbol	core		4071423						
ANR	4071468	Symbol	node		4071423						
ANR	4071469	Symbol	data		4071423						
ANR	4071470	Symbol	core -> search -> n_kws		4071423						
ANR	4071471	Symbol	* core		4071423						
ANR	4071472	Symbol	true		4071423						
ANR	4071473	Symbol	* node		4071423						
ANR	4071474	Symbol	* core -> search		4071423						
ANR	4071475	Symbol	user		4071423						
ANR	4071476	Symbol	core -> search		4071423						
ANR	4071477	Symbol	* * core		4071423						
ANR	4071478	Symbol	node -> i_value		4071423						
ANR	4071479	Function	cb_io_cache_mode	1800:0:49278:49515							
ANR	4071480	FunctionDef	"cb_io_cache_mode (void * user , void * data)"		4071479	0					
ANR	4071481	CompoundStatement		1800:53:49331:49515	4071479	0					
ANR	4071482	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1801:1:49334:49361	4071479	0	True				
ANR	4071483	IdentifierDecl	* core = ( RCore * ) user		4071479	0					
ANR	4071484	IdentifierDeclType	RCore *		4071479	0					
ANR	4071485	Identifier	core		4071479	1					
ANR	4071486	AssignmentExpression	* core = ( RCore * ) user		4071479	2		=			
ANR	4071487	Identifier	core		4071479	0					
ANR	4071488	CastExpression	( RCore * ) user		4071479	1					
ANR	4071489	CastTarget	RCore *		4071479	0					
ANR	4071490	Identifier	user		4071479	1					
ANR	4071491	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1802:1:49364:49403	4071479	1	True				
ANR	4071492	IdentifierDecl	* node = ( RConfigNode * ) data		4071479	0					
ANR	4071493	IdentifierDeclType	RConfigNode *		4071479	0					
ANR	4071494	Identifier	node		4071479	1					
ANR	4071495	AssignmentExpression	* node = ( RConfigNode * ) data		4071479	2		=			
ANR	4071496	Identifier	node		4071479	0					
ANR	4071497	CastExpression	( RConfigNode * ) data		4071479	1					
ANR	4071498	CastTarget	RConfigNode *		4071479	0					
ANR	4071499	Identifier	data		4071479	1					
ANR	4071500	IfStatement	if ( node -> i_value )		4071479	2					
ANR	4071501	Condition	node -> i_value	1803:5:49410:49422	4071479	0	True				
ANR	4071502	PtrMemberAccess	node -> i_value		4071479	0					
ANR	4071503	Identifier	node		4071479	0					
ANR	4071504	Identifier	i_value		4071479	1					
ANR	4071505	CompoundStatement		4:20:93:93	4071479	1					
ANR	4071506	ExpressionStatement	core -> io -> cachemode = true	1804:2:49429:49455	4071479	0	True				
ANR	4071507	AssignmentExpression	core -> io -> cachemode = true		4071479	0		=			
ANR	4071508	PtrMemberAccess	core -> io -> cachemode		4071479	0					
ANR	4071509	PtrMemberAccess	core -> io		4071479	0					
ANR	4071510	Identifier	core		4071479	0					
ANR	4071511	Identifier	io		4071479	1					
ANR	4071512	Identifier	cachemode		4071479	1					
ANR	4071513	Identifier	true		4071479	1					
ANR	4071514	ElseStatement	else		4071479	0					
ANR	4071515	CompoundStatement		6:8:133:133	4071479	0					
ANR	4071516	ExpressionStatement	core -> io -> cachemode = false	1806:2:49469:49496	4071479	0	True				
ANR	4071517	AssignmentExpression	core -> io -> cachemode = false		4071479	0		=			
ANR	4071518	PtrMemberAccess	core -> io -> cachemode		4071479	0					
ANR	4071519	PtrMemberAccess	core -> io		4071479	0					
ANR	4071520	Identifier	core		4071479	0					
ANR	4071521	Identifier	io		4071479	1					
ANR	4071522	Identifier	cachemode		4071479	1					
ANR	4071523	Identifier	false		4071479	1					
ANR	4071524	ReturnStatement	return true ;	1808:1:49502:49513	4071479	3	True				
ANR	4071525	Identifier	true		4071479	0					
ANR	4071526	ReturnType	static bool		4071479	1					
ANR	4071527	Identifier	cb_io_cache_mode		4071479	2					
ANR	4071528	ParameterList	"void * user , void * data"		4071479	3					
ANR	4071529	Parameter	void * user	1800:29:49307:49316	4071479	0	True				
ANR	4071530	ParameterType	void *		4071479	0					
ANR	4071531	Identifier	user		4071479	1					
ANR	4071532	Parameter	void * data	1800:41:49319:49328	4071479	1	True				
ANR	4071533	ParameterType	void *		4071479	0					
ANR	4071534	Identifier	data		4071479	1					
ANR	4071535	CFGEntryNode	ENTRY		4071479		True				
ANR	4071536	CFGExitNode	EXIT		4071479		True				
ANR	4071537	Symbol	data		4071479						
ANR	4071538	Symbol	* core		4071479						
ANR	4071539	Symbol	false		4071479						
ANR	4071540	Symbol	node -> i_value		4071479						
ANR	4071541	Symbol	core		4071479						
ANR	4071542	Symbol	node		4071479						
ANR	4071543	Symbol	core -> io -> cachemode		4071479						
ANR	4071544	Symbol	* core -> io		4071479						
ANR	4071545	Symbol	core -> io		4071479						
ANR	4071546	Symbol	true		4071479						
ANR	4071547	Symbol	* node		4071479						
ANR	4071548	Symbol	user		4071479						
ANR	4071549	Symbol	* * core		4071479						
ANR	4071550	Function	cb_io_cache_read	1811:0:49518:49759							
ANR	4071551	FunctionDef	"cb_io_cache_read (void * user , void * data)"		4071550	0					
ANR	4071552	CompoundStatement		1811:53:49571:49759	4071550	0					
ANR	4071553	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1812:1:49574:49601	4071550	0	True				
ANR	4071554	IdentifierDecl	* core = ( RCore * ) user		4071550	0					
ANR	4071555	IdentifierDeclType	RCore *		4071550	0					
ANR	4071556	Identifier	core		4071550	1					
ANR	4071557	AssignmentExpression	* core = ( RCore * ) user		4071550	2		=			
ANR	4071558	Identifier	core		4071550	0					
ANR	4071559	CastExpression	( RCore * ) user		4071550	1					
ANR	4071560	CastTarget	RCore *		4071550	0					
ANR	4071561	Identifier	user		4071550	1					
ANR	4071562	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1813:1:49604:49643	4071550	1	True				
ANR	4071563	IdentifierDecl	* node = ( RConfigNode * ) data		4071550	0					
ANR	4071564	IdentifierDeclType	RConfigNode *		4071550	0					
ANR	4071565	Identifier	node		4071550	1					
ANR	4071566	AssignmentExpression	* node = ( RConfigNode * ) data		4071550	2		=			
ANR	4071567	Identifier	node		4071550	0					
ANR	4071568	CastExpression	( RConfigNode * ) data		4071550	1					
ANR	4071569	CastTarget	RConfigNode *		4071550	0					
ANR	4071570	Identifier	data		4071550	1					
ANR	4071571	IfStatement	if ( node -> i_value )		4071550	2					
ANR	4071572	Condition	node -> i_value	1814:5:49650:49662	4071550	0	True				
ANR	4071573	PtrMemberAccess	node -> i_value		4071550	0					
ANR	4071574	Identifier	node		4071550	0					
ANR	4071575	Identifier	i_value		4071550	1					
ANR	4071576	CompoundStatement		4:20:93:93	4071550	1					
ANR	4071577	ExpressionStatement	core -> io -> cached |= R_PERM_R	1815:2:49669:49697	4071550	0	True				
ANR	4071578	AssignmentExpression	core -> io -> cached |= R_PERM_R		4071550	0		|=			
ANR	4071579	PtrMemberAccess	core -> io -> cached		4071550	0					
ANR	4071580	PtrMemberAccess	core -> io		4071550	0					
ANR	4071581	Identifier	core		4071550	0					
ANR	4071582	Identifier	io		4071550	1					
ANR	4071583	Identifier	cached		4071550	1					
ANR	4071584	Identifier	R_PERM_R		4071550	1					
ANR	4071585	ElseStatement	else		4071550	0					
ANR	4071586	CompoundStatement		6:8:135:135	4071550	0					
ANR	4071587	ExpressionStatement	core -> io -> cached &= ~R_PERM_R	1817:2:49711:49740	4071550	0	True				
ANR	4071588	AssignmentExpression	core -> io -> cached &= ~R_PERM_R		4071550	0		&=			
ANR	4071589	PtrMemberAccess	core -> io -> cached		4071550	0					
ANR	4071590	PtrMemberAccess	core -> io		4071550	0					
ANR	4071591	Identifier	core		4071550	0					
ANR	4071592	Identifier	io		4071550	1					
ANR	4071593	Identifier	cached		4071550	1					
ANR	4071594	Identifier	~R_PERM_R		4071550	1					
ANR	4071595	ReturnStatement	return true ;	1819:1:49746:49757	4071550	3	True				
ANR	4071596	Identifier	true		4071550	0					
ANR	4071597	ReturnType	static bool		4071550	1					
ANR	4071598	Identifier	cb_io_cache_read		4071550	2					
ANR	4071599	ParameterList	"void * user , void * data"		4071550	3					
ANR	4071600	Parameter	void * user	1811:29:49547:49556	4071550	0	True				
ANR	4071601	ParameterType	void *		4071550	0					
ANR	4071602	Identifier	user		4071550	1					
ANR	4071603	Parameter	void * data	1811:41:49559:49568	4071550	1	True				
ANR	4071604	ParameterType	void *		4071550	0					
ANR	4071605	Identifier	data		4071550	1					
ANR	4071606	CFGEntryNode	ENTRY		4071550		True				
ANR	4071607	CFGExitNode	EXIT		4071550		True				
ANR	4071608	Symbol	data		4071550						
ANR	4071609	Symbol	* core		4071550						
ANR	4071610	Symbol	node -> i_value		4071550						
ANR	4071611	Symbol	core		4071550						
ANR	4071612	Symbol	node		4071550						
ANR	4071613	Symbol	* core -> io		4071550						
ANR	4071614	Symbol	core -> io		4071550						
ANR	4071615	Symbol	R_PERM_R		4071550						
ANR	4071616	Symbol	true		4071550						
ANR	4071617	Symbol	* node		4071550						
ANR	4071618	Symbol	~R_PERM_R		4071550						
ANR	4071619	Symbol	user		4071550						
ANR	4071620	Symbol	core -> io -> cached		4071550						
ANR	4071621	Symbol	* * core		4071550						
ANR	4071622	Function	cb_io_cache_write	1822:0:49762:50004							
ANR	4071623	FunctionDef	"cb_io_cache_write (void * user , void * data)"		4071622	0					
ANR	4071624	CompoundStatement		1822:54:49816:50004	4071622	0					
ANR	4071625	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1823:1:49819:49846	4071622	0	True				
ANR	4071626	IdentifierDecl	* core = ( RCore * ) user		4071622	0					
ANR	4071627	IdentifierDeclType	RCore *		4071622	0					
ANR	4071628	Identifier	core		4071622	1					
ANR	4071629	AssignmentExpression	* core = ( RCore * ) user		4071622	2		=			
ANR	4071630	Identifier	core		4071622	0					
ANR	4071631	CastExpression	( RCore * ) user		4071622	1					
ANR	4071632	CastTarget	RCore *		4071622	0					
ANR	4071633	Identifier	user		4071622	1					
ANR	4071634	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1824:1:49849:49888	4071622	1	True				
ANR	4071635	IdentifierDecl	* node = ( RConfigNode * ) data		4071622	0					
ANR	4071636	IdentifierDeclType	RConfigNode *		4071622	0					
ANR	4071637	Identifier	node		4071622	1					
ANR	4071638	AssignmentExpression	* node = ( RConfigNode * ) data		4071622	2		=			
ANR	4071639	Identifier	node		4071622	0					
ANR	4071640	CastExpression	( RConfigNode * ) data		4071622	1					
ANR	4071641	CastTarget	RConfigNode *		4071622	0					
ANR	4071642	Identifier	data		4071622	1					
ANR	4071643	IfStatement	if ( node -> i_value )		4071622	2					
ANR	4071644	Condition	node -> i_value	1825:5:49895:49907	4071622	0	True				
ANR	4071645	PtrMemberAccess	node -> i_value		4071622	0					
ANR	4071646	Identifier	node		4071622	0					
ANR	4071647	Identifier	i_value		4071622	1					
ANR	4071648	CompoundStatement		4:20:93:93	4071622	1					
ANR	4071649	ExpressionStatement	core -> io -> cached |= R_PERM_W	1826:2:49914:49942	4071622	0	True				
ANR	4071650	AssignmentExpression	core -> io -> cached |= R_PERM_W		4071622	0		|=			
ANR	4071651	PtrMemberAccess	core -> io -> cached		4071622	0					
ANR	4071652	PtrMemberAccess	core -> io		4071622	0					
ANR	4071653	Identifier	core		4071622	0					
ANR	4071654	Identifier	io		4071622	1					
ANR	4071655	Identifier	cached		4071622	1					
ANR	4071656	Identifier	R_PERM_W		4071622	1					
ANR	4071657	ElseStatement	else		4071622	0					
ANR	4071658	CompoundStatement		6:8:135:135	4071622	0					
ANR	4071659	ExpressionStatement	core -> io -> cached &= ~R_PERM_W	1828:2:49956:49985	4071622	0	True				
ANR	4071660	AssignmentExpression	core -> io -> cached &= ~R_PERM_W		4071622	0		&=			
ANR	4071661	PtrMemberAccess	core -> io -> cached		4071622	0					
ANR	4071662	PtrMemberAccess	core -> io		4071622	0					
ANR	4071663	Identifier	core		4071622	0					
ANR	4071664	Identifier	io		4071622	1					
ANR	4071665	Identifier	cached		4071622	1					
ANR	4071666	Identifier	~R_PERM_W		4071622	1					
ANR	4071667	ReturnStatement	return true ;	1830:1:49991:50002	4071622	3	True				
ANR	4071668	Identifier	true		4071622	0					
ANR	4071669	ReturnType	static bool		4071622	1					
ANR	4071670	Identifier	cb_io_cache_write		4071622	2					
ANR	4071671	ParameterList	"void * user , void * data"		4071622	3					
ANR	4071672	Parameter	void * user	1822:30:49792:49801	4071622	0	True				
ANR	4071673	ParameterType	void *		4071622	0					
ANR	4071674	Identifier	user		4071622	1					
ANR	4071675	Parameter	void * data	1822:42:49804:49813	4071622	1	True				
ANR	4071676	ParameterType	void *		4071622	0					
ANR	4071677	Identifier	data		4071622	1					
ANR	4071678	CFGEntryNode	ENTRY		4071622		True				
ANR	4071679	CFGExitNode	EXIT		4071622		True				
ANR	4071680	Symbol	data		4071622						
ANR	4071681	Symbol	~R_PERM_W		4071622						
ANR	4071682	Symbol	* core		4071622						
ANR	4071683	Symbol	node -> i_value		4071622						
ANR	4071684	Symbol	core		4071622						
ANR	4071685	Symbol	node		4071622						
ANR	4071686	Symbol	* core -> io		4071622						
ANR	4071687	Symbol	R_PERM_W		4071622						
ANR	4071688	Symbol	core -> io		4071622						
ANR	4071689	Symbol	true		4071622						
ANR	4071690	Symbol	* node		4071622						
ANR	4071691	Symbol	user		4071622						
ANR	4071692	Symbol	core -> io -> cached		4071622						
ANR	4071693	Symbol	* * core		4071622						
ANR	4071694	Function	cb_io_cache	1833:0:50007:50148							
ANR	4071695	FunctionDef	"cb_io_cache (void * user , void * data)"		4071694	0					
ANR	4071696	CompoundStatement		1833:48:50055:50148	4071694	0					
ANR	4071697	ExpressionStatement	"( void ) cb_io_cache_read ( user , data )"	1834:1:50058:50093	4071694	0	True				
ANR	4071698	CastExpression	"( void ) cb_io_cache_read ( user , data )"		4071694	0					
ANR	4071699	CastTarget	void		4071694	0					
ANR	4071700	CallExpression	"cb_io_cache_read ( user , data )"		4071694	1					
ANR	4071701	Callee	cb_io_cache_read		4071694	0					
ANR	4071702	Identifier	cb_io_cache_read		4071694	0					
ANR	4071703	ArgumentList	user		4071694	1					
ANR	4071704	Argument	user		4071694	0					
ANR	4071705	Identifier	user		4071694	0					
ANR	4071706	Argument	data		4071694	1					
ANR	4071707	Identifier	data		4071694	0					
ANR	4071708	ExpressionStatement	"( void ) cb_io_cache_write ( user , data )"	1835:1:50096:50132	4071694	1	True				
ANR	4071709	CastExpression	"( void ) cb_io_cache_write ( user , data )"		4071694	0					
ANR	4071710	CastTarget	void		4071694	0					
ANR	4071711	CallExpression	"cb_io_cache_write ( user , data )"		4071694	1					
ANR	4071712	Callee	cb_io_cache_write		4071694	0					
ANR	4071713	Identifier	cb_io_cache_write		4071694	0					
ANR	4071714	ArgumentList	user		4071694	1					
ANR	4071715	Argument	user		4071694	0					
ANR	4071716	Identifier	user		4071694	0					
ANR	4071717	Argument	data		4071694	1					
ANR	4071718	Identifier	data		4071694	0					
ANR	4071719	ReturnStatement	return true ;	1836:1:50135:50146	4071694	2	True				
ANR	4071720	Identifier	true		4071694	0					
ANR	4071721	ReturnType	static bool		4071694	1					
ANR	4071722	Identifier	cb_io_cache		4071694	2					
ANR	4071723	ParameterList	"void * user , void * data"		4071694	3					
ANR	4071724	Parameter	void * user	1833:24:50031:50040	4071694	0	True				
ANR	4071725	ParameterType	void *		4071694	0					
ANR	4071726	Identifier	user		4071694	1					
ANR	4071727	Parameter	void * data	1833:36:50043:50052	4071694	1	True				
ANR	4071728	ParameterType	void *		4071694	0					
ANR	4071729	Identifier	data		4071694	1					
ANR	4071730	CFGEntryNode	ENTRY		4071694		True				
ANR	4071731	CFGExitNode	EXIT		4071694		True				
ANR	4071732	Symbol	data		4071694						
ANR	4071733	Symbol	true		4071694						
ANR	4071734	Symbol	user		4071694						
ANR	4071735	Function	cb_ioaslr	1839:0:50151:50364							
ANR	4071736	FunctionDef	"cb_ioaslr (void * user , void * data)"		4071735	0					
ANR	4071737	CompoundStatement		1839:46:50197:50364	4071735	0					
ANR	4071738	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1840:1:50200:50228	4071735	0	True				
ANR	4071739	IdentifierDecl	* core = ( RCore * ) user		4071735	0					
ANR	4071740	IdentifierDeclType	RCore *		4071735	0					
ANR	4071741	Identifier	core		4071735	1					
ANR	4071742	AssignmentExpression	* core = ( RCore * ) user		4071735	2		=			
ANR	4071743	Identifier	core		4071735	0					
ANR	4071744	CastExpression	( RCore * ) user		4071735	1					
ANR	4071745	CastTarget	RCore *		4071735	0					
ANR	4071746	Identifier	user		4071735	1					
ANR	4071747	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1841:1:50231:50271	4071735	1	True				
ANR	4071748	IdentifierDecl	* node = ( RConfigNode * ) data		4071735	0					
ANR	4071749	IdentifierDeclType	RConfigNode *		4071735	0					
ANR	4071750	Identifier	node		4071735	1					
ANR	4071751	AssignmentExpression	* node = ( RConfigNode * ) data		4071735	2		=			
ANR	4071752	Identifier	node		4071735	0					
ANR	4071753	CastExpression	( RConfigNode * ) data		4071735	1					
ANR	4071754	CastTarget	RConfigNode *		4071735	0					
ANR	4071755	Identifier	data		4071735	1					
ANR	4071756	IfStatement	if ( node -> i_value != core -> io -> aslr )		4071735	2					
ANR	4071757	Condition	node -> i_value != core -> io -> aslr	1842:5:50278:50308	4071735	0	True				
ANR	4071758	EqualityExpression	node -> i_value != core -> io -> aslr		4071735	0		!=			
ANR	4071759	PtrMemberAccess	node -> i_value		4071735	0					
ANR	4071760	Identifier	node		4071735	0					
ANR	4071761	Identifier	i_value		4071735	1					
ANR	4071762	PtrMemberAccess	core -> io -> aslr		4071735	1					
ANR	4071763	PtrMemberAccess	core -> io		4071735	0					
ANR	4071764	Identifier	core		4071735	0					
ANR	4071765	Identifier	io		4071735	1					
ANR	4071766	Identifier	aslr		4071735	1					
ANR	4071767	CompoundStatement		4:38:113:113	4071735	1					
ANR	4071768	ExpressionStatement	core -> io -> aslr = node -> i_value	1843:2:50315:50345	4071735	0	True				
ANR	4071769	AssignmentExpression	core -> io -> aslr = node -> i_value		4071735	0		=			
ANR	4071770	PtrMemberAccess	core -> io -> aslr		4071735	0					
ANR	4071771	PtrMemberAccess	core -> io		4071735	0					
ANR	4071772	Identifier	core		4071735	0					
ANR	4071773	Identifier	io		4071735	1					
ANR	4071774	Identifier	aslr		4071735	1					
ANR	4071775	PtrMemberAccess	node -> i_value		4071735	1					
ANR	4071776	Identifier	node		4071735	0					
ANR	4071777	Identifier	i_value		4071735	1					
ANR	4071778	ReturnStatement	return true ;	1845:1:50351:50362	4071735	3	True				
ANR	4071779	Identifier	true		4071735	0					
ANR	4071780	ReturnType	static bool		4071735	1					
ANR	4071781	Identifier	cb_ioaslr		4071735	2					
ANR	4071782	ParameterList	"void * user , void * data"		4071735	3					
ANR	4071783	Parameter	void * user	1839:22:50173:50182	4071735	0	True				
ANR	4071784	ParameterType	void *		4071735	0					
ANR	4071785	Identifier	user		4071735	1					
ANR	4071786	Parameter	void * data	1839:34:50185:50194	4071735	1	True				
ANR	4071787	ParameterType	void *		4071735	0					
ANR	4071788	Identifier	data		4071735	1					
ANR	4071789	CFGEntryNode	ENTRY		4071735		True				
ANR	4071790	CFGExitNode	EXIT		4071735		True				
ANR	4071791	Symbol	core -> io -> aslr		4071735						
ANR	4071792	Symbol	core		4071735						
ANR	4071793	Symbol	node		4071735						
ANR	4071794	Symbol	* core -> io		4071735						
ANR	4071795	Symbol	data		4071735						
ANR	4071796	Symbol	core -> io		4071735						
ANR	4071797	Symbol	* core		4071735						
ANR	4071798	Symbol	true		4071735						
ANR	4071799	Symbol	* node		4071735						
ANR	4071800	Symbol	user		4071735						
ANR	4071801	Symbol	* * core		4071735						
ANR	4071802	Symbol	node -> i_value		4071735						
ANR	4071803	Function	cb_io_pava	1848:0:50367:50650							
ANR	4071804	FunctionDef	"cb_io_pava (void * user , void * data)"		4071803	0					
ANR	4071805	CompoundStatement		1848:47:50414:50650	4071803	0					
ANR	4071806	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1849:1:50417:50445	4071803	0	True				
ANR	4071807	IdentifierDecl	* core = ( RCore * ) user		4071803	0					
ANR	4071808	IdentifierDeclType	RCore *		4071803	0					
ANR	4071809	Identifier	core		4071803	1					
ANR	4071810	AssignmentExpression	* core = ( RCore * ) user		4071803	2		=			
ANR	4071811	Identifier	core		4071803	0					
ANR	4071812	CastExpression	( RCore * ) user		4071803	1					
ANR	4071813	CastTarget	RCore *		4071803	0					
ANR	4071814	Identifier	user		4071803	1					
ANR	4071815	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1850:1:50448:50488	4071803	1	True				
ANR	4071816	IdentifierDecl	* node = ( RConfigNode * ) data		4071803	0					
ANR	4071817	IdentifierDeclType	RConfigNode *		4071803	0					
ANR	4071818	Identifier	node		4071803	1					
ANR	4071819	AssignmentExpression	* node = ( RConfigNode * ) data		4071803	2		=			
ANR	4071820	Identifier	node		4071803	0					
ANR	4071821	CastExpression	( RConfigNode * ) data		4071803	1					
ANR	4071822	CastTarget	RConfigNode *		4071803	0					
ANR	4071823	Identifier	data		4071803	1					
ANR	4071824	ExpressionStatement	core -> print -> pava = node -> i_value	1851:1:50491:50524	4071803	2	True				
ANR	4071825	AssignmentExpression	core -> print -> pava = node -> i_value		4071803	0		=			
ANR	4071826	PtrMemberAccess	core -> print -> pava		4071803	0					
ANR	4071827	PtrMemberAccess	core -> print		4071803	0					
ANR	4071828	Identifier	core		4071803	0					
ANR	4071829	Identifier	print		4071803	1					
ANR	4071830	Identifier	pava		4071803	1					
ANR	4071831	PtrMemberAccess	node -> i_value		4071803	1					
ANR	4071832	Identifier	node		4071803	0					
ANR	4071833	Identifier	i_value		4071803	1					
ANR	4071834	IfStatement	if ( node -> i_value && core -> io -> va )		4071803	3					
ANR	4071835	Condition	node -> i_value && core -> io -> va	1852:5:50531:50559	4071803	0	True				
ANR	4071836	AndExpression	node -> i_value && core -> io -> va		4071803	0		&&			
ANR	4071837	PtrMemberAccess	node -> i_value		4071803	0					
ANR	4071838	Identifier	node		4071803	0					
ANR	4071839	Identifier	i_value		4071803	1					
ANR	4071840	PtrMemberAccess	core -> io -> va		4071803	1					
ANR	4071841	PtrMemberAccess	core -> io		4071803	0					
ANR	4071842	Identifier	core		4071803	0					
ANR	4071843	Identifier	io		4071803	1					
ANR	4071844	Identifier	va		4071803	1					
ANR	4071845	CompoundStatement		5:36:147:147	4071803	1					
ANR	4071846	ExpressionStatement	"eprintf ( ""WARNING: You may probably want to disable io.va too\\n"" )"	1853:2:50566:50631	4071803	0	True				
ANR	4071847	CallExpression	"eprintf ( ""WARNING: You may probably want to disable io.va too\\n"" )"		4071803	0					
ANR	4071848	Callee	eprintf		4071803	0					
ANR	4071849	Identifier	eprintf		4071803	0					
ANR	4071850	ArgumentList	"""WARNING: You may probably want to disable io.va too\\n"""		4071803	1					
ANR	4071851	Argument	"""WARNING: You may probably want to disable io.va too\\n"""		4071803	0					
ANR	4071852	PrimaryExpression	"""WARNING: You may probably want to disable io.va too\\n"""		4071803	0					
ANR	4071853	ReturnStatement	return true ;	1855:1:50637:50648	4071803	4	True				
ANR	4071854	Identifier	true		4071803	0					
ANR	4071855	ReturnType	static bool		4071803	1					
ANR	4071856	Identifier	cb_io_pava		4071803	2					
ANR	4071857	ParameterList	"void * user , void * data"		4071803	3					
ANR	4071858	Parameter	void * user	1848:23:50390:50399	4071803	0	True				
ANR	4071859	ParameterType	void *		4071803	0					
ANR	4071860	Identifier	user		4071803	1					
ANR	4071861	Parameter	void * data	1848:35:50402:50411	4071803	1	True				
ANR	4071862	ParameterType	void *		4071803	0					
ANR	4071863	Identifier	data		4071803	1					
ANR	4071864	CFGEntryNode	ENTRY		4071803		True				
ANR	4071865	CFGExitNode	EXIT		4071803		True				
ANR	4071866	Symbol	core -> print -> pava		4071803						
ANR	4071867	Symbol	data		4071803						
ANR	4071868	Symbol	* core		4071803						
ANR	4071869	Symbol	node -> i_value		4071803						
ANR	4071870	Symbol	core -> io -> va		4071803						
ANR	4071871	Symbol	core		4071803						
ANR	4071872	Symbol	node		4071803						
ANR	4071873	Symbol	* core -> io		4071803						
ANR	4071874	Symbol	* core -> print		4071803						
ANR	4071875	Symbol	core -> io		4071803						
ANR	4071876	Symbol	true		4071803						
ANR	4071877	Symbol	* node		4071803						
ANR	4071878	Symbol	core -> print		4071803						
ANR	4071879	Symbol	user		4071803						
ANR	4071880	Symbol	* * core		4071803						
ANR	4071881	Function	cb_iova	1858:0:50653:51120							
ANR	4071882	FunctionDef	"cb_iova (void * user , void * data)"		4071881	0					
ANR	4071883	CompoundStatement		1858:44:50697:51120	4071881	0					
ANR	4071884	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1859:1:50700:50728	4071881	0	True				
ANR	4071885	IdentifierDecl	* core = ( RCore * ) user		4071881	0					
ANR	4071886	IdentifierDeclType	RCore *		4071881	0					
ANR	4071887	Identifier	core		4071881	1					
ANR	4071888	AssignmentExpression	* core = ( RCore * ) user		4071881	2		=			
ANR	4071889	Identifier	core		4071881	0					
ANR	4071890	CastExpression	( RCore * ) user		4071881	1					
ANR	4071891	CastTarget	RCore *		4071881	0					
ANR	4071892	Identifier	user		4071881	1					
ANR	4071893	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1860:1:50731:50771	4071881	1	True				
ANR	4071894	IdentifierDecl	* node = ( RConfigNode * ) data		4071881	0					
ANR	4071895	IdentifierDeclType	RConfigNode *		4071881	0					
ANR	4071896	Identifier	node		4071881	1					
ANR	4071897	AssignmentExpression	* node = ( RConfigNode * ) data		4071881	2		=			
ANR	4071898	Identifier	node		4071881	0					
ANR	4071899	CastExpression	( RConfigNode * ) data		4071881	1					
ANR	4071900	CastTarget	RConfigNode *		4071881	0					
ANR	4071901	Identifier	data		4071881	1					
ANR	4071902	IfStatement	if ( node -> i_value != core -> io -> va )		4071881	2					
ANR	4071903	Condition	node -> i_value != core -> io -> va	1861:5:50778:50806	4071881	0	True				
ANR	4071904	EqualityExpression	node -> i_value != core -> io -> va		4071881	0		!=			
ANR	4071905	PtrMemberAccess	node -> i_value		4071881	0					
ANR	4071906	Identifier	node		4071881	0					
ANR	4071907	Identifier	i_value		4071881	1					
ANR	4071908	PtrMemberAccess	core -> io -> va		4071881	1					
ANR	4071909	PtrMemberAccess	core -> io		4071881	0					
ANR	4071910	Identifier	core		4071881	0					
ANR	4071911	Identifier	io		4071881	1					
ANR	4071912	Identifier	va		4071881	1					
ANR	4071913	CompoundStatement		4:36:111:111	4071881	1					
ANR	4071914	ExpressionStatement	core -> io -> va = node -> i_value	1862:2:50813:50841	4071881	0	True				
ANR	4071915	AssignmentExpression	core -> io -> va = node -> i_value		4071881	0		=			
ANR	4071916	PtrMemberAccess	core -> io -> va		4071881	0					
ANR	4071917	PtrMemberAccess	core -> io		4071881	0					
ANR	4071918	Identifier	core		4071881	0					
ANR	4071919	Identifier	io		4071881	1					
ANR	4071920	Identifier	va		4071881	1					
ANR	4071921	PtrMemberAccess	node -> i_value		4071881	1					
ANR	4071922	Identifier	node		4071881	0					
ANR	4071923	Identifier	i_value		4071881	1					
ANR	4071924	IfStatement	if ( core -> io -> desc )		4071881	1					
ANR	4071925	Condition	core -> io -> desc	1864:6:50910:50923	4071881	0	True				
ANR	4071926	PtrMemberAccess	core -> io -> desc		4071881	0					
ANR	4071927	PtrMemberAccess	core -> io		4071881	0					
ANR	4071928	Identifier	core		4071881	0					
ANR	4071929	Identifier	io		4071881	1					
ANR	4071930	Identifier	desc		4071881	1					
ANR	4071931	CompoundStatement		7:22:228:228	4071881	1					
ANR	4071932	ExpressionStatement	r_core_block_read ( core )	1865:3:50931:50955	4071881	0	True				
ANR	4071933	CallExpression	r_core_block_read ( core )		4071881	0					
ANR	4071934	Callee	r_core_block_read		4071881	0					
ANR	4071935	Identifier	r_core_block_read		4071881	0					
ANR	4071936	ArgumentList	core		4071881	1					
ANR	4071937	Argument	core		4071881	0					
ANR	4071938	Identifier	core		4071881	0					
ANR	4071939	IfStatement	if ( r_list_length ( r_bin_get_sections ( core -> bin ) ) > 0 )		4071881	2					
ANR	4071940	Condition	r_list_length ( r_bin_get_sections ( core -> bin ) ) > 0	1869:6:51007:51056	4071881	0	True				
ANR	4071941	RelationalExpression	r_list_length ( r_bin_get_sections ( core -> bin ) ) > 0		4071881	0		>			
ANR	4071942	CallExpression	r_list_length ( r_bin_get_sections ( core -> bin ) )		4071881	0					
ANR	4071943	Callee	r_list_length		4071881	0					
ANR	4071944	Identifier	r_list_length		4071881	0					
ANR	4071945	ArgumentList	r_bin_get_sections ( core -> bin )		4071881	1					
ANR	4071946	Argument	r_bin_get_sections ( core -> bin )		4071881	0					
ANR	4071947	CallExpression	r_bin_get_sections ( core -> bin )		4071881	0					
ANR	4071948	Callee	r_bin_get_sections		4071881	0					
ANR	4071949	Identifier	r_bin_get_sections		4071881	0					
ANR	4071950	ArgumentList	core -> bin		4071881	1					
ANR	4071951	Argument	core -> bin		4071881	0					
ANR	4071952	PtrMemberAccess	core -> bin		4071881	0					
ANR	4071953	Identifier	core		4071881	0					
ANR	4071954	Identifier	bin		4071881	1					
ANR	4071955	PrimaryExpression	0		4071881	1					
ANR	4071956	CompoundStatement		12:58:361:361	4071881	1					
ANR	4071957	ExpressionStatement	"r_core_cmd0 ( core , "".ia*"" )"	1870:3:51064:51090	4071881	0	True				
ANR	4071958	CallExpression	"r_core_cmd0 ( core , "".ia*"" )"		4071881	0					
ANR	4071959	Callee	r_core_cmd0		4071881	0					
ANR	4071960	Identifier	r_core_cmd0		4071881	0					
ANR	4071961	ArgumentList	core		4071881	1					
ANR	4071962	Argument	core		4071881	0					
ANR	4071963	Identifier	core		4071881	0					
ANR	4071964	Argument	""".ia*"""		4071881	1					
ANR	4071965	PrimaryExpression	""".ia*"""		4071881	0					
ANR	4071966	ReturnStatement	return true ;	1874:1:51107:51118	4071881	3	True				
ANR	4071967	Identifier	true		4071881	0					
ANR	4071968	ReturnType	static bool		4071881	1					
ANR	4071969	Identifier	cb_iova		4071881	2					
ANR	4071970	ParameterList	"void * user , void * data"		4071881	3					
ANR	4071971	Parameter	void * user	1858:20:50673:50682	4071881	0	True				
ANR	4071972	ParameterType	void *		4071881	0					
ANR	4071973	Identifier	user		4071881	1					
ANR	4071974	Parameter	void * data	1858:32:50685:50694	4071881	1	True				
ANR	4071975	ParameterType	void *		4071881	0					
ANR	4071976	Identifier	data		4071881	1					
ANR	4071977	CFGEntryNode	ENTRY		4071881		True				
ANR	4071978	CFGExitNode	EXIT		4071881		True				
ANR	4071979	Symbol	data		4071881						
ANR	4071980	Symbol	* core		4071881						
ANR	4071981	Symbol	core -> io -> desc		4071881						
ANR	4071982	Symbol	core -> io -> va		4071881						
ANR	4071983	Symbol	node -> i_value		4071881						
ANR	4071984	Symbol	core		4071881						
ANR	4071985	Symbol	node		4071881						
ANR	4071986	Symbol	* core -> io		4071881						
ANR	4071987	Symbol	core -> io		4071881						
ANR	4071988	Symbol	true		4071881						
ANR	4071989	Symbol	* node		4071881						
ANR	4071990	Symbol	user		4071881						
ANR	4071991	Symbol	core -> bin		4071881						
ANR	4071992	Symbol	* * core		4071881						
ANR	4071993	Symbol	r_list_length		4071881						
ANR	4071994	Symbol	r_bin_get_sections		4071881						
ANR	4071995	Function	cb_ioff	1877:0:51123:51288							
ANR	4071996	FunctionDef	"cb_ioff (void * user , void * data)"		4071995	0					
ANR	4071997	CompoundStatement		1877:44:51167:51288	4071995	0					
ANR	4071998	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1878:1:51170:51198	4071995	0	True				
ANR	4071999	IdentifierDecl	* core = ( RCore * ) user		4071995	0					
ANR	4072000	IdentifierDeclType	RCore *		4071995	0					
ANR	4072001	Identifier	core		4071995	1					
ANR	4072002	AssignmentExpression	* core = ( RCore * ) user		4071995	2		=			
ANR	4072003	Identifier	core		4071995	0					
ANR	4072004	CastExpression	( RCore * ) user		4071995	1					
ANR	4072005	CastTarget	RCore *		4071995	0					
ANR	4072006	Identifier	user		4071995	1					
ANR	4072007	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1879:1:51201:51241	4071995	1	True				
ANR	4072008	IdentifierDecl	* node = ( RConfigNode * ) data		4071995	0					
ANR	4072009	IdentifierDeclType	RConfigNode *		4071995	0					
ANR	4072010	Identifier	node		4071995	1					
ANR	4072011	AssignmentExpression	* node = ( RConfigNode * ) data		4071995	2		=			
ANR	4072012	Identifier	node		4071995	0					
ANR	4072013	CastExpression	( RConfigNode * ) data		4071995	1					
ANR	4072014	CastTarget	RConfigNode *		4071995	0					
ANR	4072015	Identifier	data		4071995	1					
ANR	4072016	ExpressionStatement	core -> io -> ff = node -> i_value	1880:1:51244:51272	4071995	2	True				
ANR	4072017	AssignmentExpression	core -> io -> ff = node -> i_value		4071995	0		=			
ANR	4072018	PtrMemberAccess	core -> io -> ff		4071995	0					
ANR	4072019	PtrMemberAccess	core -> io		4071995	0					
ANR	4072020	Identifier	core		4071995	0					
ANR	4072021	Identifier	io		4071995	1					
ANR	4072022	Identifier	ff		4071995	1					
ANR	4072023	PtrMemberAccess	node -> i_value		4071995	1					
ANR	4072024	Identifier	node		4071995	0					
ANR	4072025	Identifier	i_value		4071995	1					
ANR	4072026	ReturnStatement	return true ;	1881:1:51275:51286	4071995	3	True				
ANR	4072027	Identifier	true		4071995	0					
ANR	4072028	ReturnType	static bool		4071995	1					
ANR	4072029	Identifier	cb_ioff		4071995	2					
ANR	4072030	ParameterList	"void * user , void * data"		4071995	3					
ANR	4072031	Parameter	void * user	1877:20:51143:51152	4071995	0	True				
ANR	4072032	ParameterType	void *		4071995	0					
ANR	4072033	Identifier	user		4071995	1					
ANR	4072034	Parameter	void * data	1877:32:51155:51164	4071995	1	True				
ANR	4072035	ParameterType	void *		4071995	0					
ANR	4072036	Identifier	data		4071995	1					
ANR	4072037	CFGEntryNode	ENTRY		4071995		True				
ANR	4072038	CFGExitNode	EXIT		4071995		True				
ANR	4072039	Symbol	core		4071995						
ANR	4072040	Symbol	node		4071995						
ANR	4072041	Symbol	* core -> io		4071995						
ANR	4072042	Symbol	core -> io -> ff		4071995						
ANR	4072043	Symbol	data		4071995						
ANR	4072044	Symbol	core -> io		4071995						
ANR	4072045	Symbol	* core		4071995						
ANR	4072046	Symbol	true		4071995						
ANR	4072047	Symbol	* node		4071995						
ANR	4072048	Symbol	user		4071995						
ANR	4072049	Symbol	* * core		4071995						
ANR	4072050	Symbol	node -> i_value		4071995						
ANR	4072051	Function	cb_io_oxff	1884:0:51291:51461							
ANR	4072052	FunctionDef	"cb_io_oxff (void * user , void * data)"		4072051	0					
ANR	4072053	CompoundStatement		1884:47:51338:51461	4072051	0					
ANR	4072054	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1885:1:51341:51369	4072051	0	True				
ANR	4072055	IdentifierDecl	* core = ( RCore * ) user		4072051	0					
ANR	4072056	IdentifierDeclType	RCore *		4072051	0					
ANR	4072057	Identifier	core		4072051	1					
ANR	4072058	AssignmentExpression	* core = ( RCore * ) user		4072051	2		=			
ANR	4072059	Identifier	core		4072051	0					
ANR	4072060	CastExpression	( RCore * ) user		4072051	1					
ANR	4072061	CastTarget	RCore *		4072051	0					
ANR	4072062	Identifier	user		4072051	1					
ANR	4072063	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1886:1:51372:51412	4072051	1	True				
ANR	4072064	IdentifierDecl	* node = ( RConfigNode * ) data		4072051	0					
ANR	4072065	IdentifierDeclType	RConfigNode *		4072051	0					
ANR	4072066	Identifier	node		4072051	1					
ANR	4072067	AssignmentExpression	* node = ( RConfigNode * ) data		4072051	2		=			
ANR	4072068	Identifier	node		4072051	0					
ANR	4072069	CastExpression	( RConfigNode * ) data		4072051	1					
ANR	4072070	CastTarget	RConfigNode *		4072051	0					
ANR	4072071	Identifier	data		4072051	1					
ANR	4072072	ExpressionStatement	core -> io -> Oxff = node -> i_value	1887:1:51415:51445	4072051	2	True				
ANR	4072073	AssignmentExpression	core -> io -> Oxff = node -> i_value		4072051	0		=			
ANR	4072074	PtrMemberAccess	core -> io -> Oxff		4072051	0					
ANR	4072075	PtrMemberAccess	core -> io		4072051	0					
ANR	4072076	Identifier	core		4072051	0					
ANR	4072077	Identifier	io		4072051	1					
ANR	4072078	Identifier	Oxff		4072051	1					
ANR	4072079	PtrMemberAccess	node -> i_value		4072051	1					
ANR	4072080	Identifier	node		4072051	0					
ANR	4072081	Identifier	i_value		4072051	1					
ANR	4072082	ReturnStatement	return true ;	1888:1:51448:51459	4072051	3	True				
ANR	4072083	Identifier	true		4072051	0					
ANR	4072084	ReturnType	static bool		4072051	1					
ANR	4072085	Identifier	cb_io_oxff		4072051	2					
ANR	4072086	ParameterList	"void * user , void * data"		4072051	3					
ANR	4072087	Parameter	void * user	1884:23:51314:51323	4072051	0	True				
ANR	4072088	ParameterType	void *		4072051	0					
ANR	4072089	Identifier	user		4072051	1					
ANR	4072090	Parameter	void * data	1884:35:51326:51335	4072051	1	True				
ANR	4072091	ParameterType	void *		4072051	0					
ANR	4072092	Identifier	data		4072051	1					
ANR	4072093	CFGEntryNode	ENTRY		4072051		True				
ANR	4072094	CFGExitNode	EXIT		4072051		True				
ANR	4072095	Symbol	core		4072051						
ANR	4072096	Symbol	node		4072051						
ANR	4072097	Symbol	* core -> io		4072051						
ANR	4072098	Symbol	data		4072051						
ANR	4072099	Symbol	core -> io		4072051						
ANR	4072100	Symbol	* core		4072051						
ANR	4072101	Symbol	true		4072051						
ANR	4072102	Symbol	* node		4072051						
ANR	4072103	Symbol	user		4072051						
ANR	4072104	Symbol	* * core		4072051						
ANR	4072105	Symbol	node -> i_value		4072051						
ANR	4072106	Symbol	core -> io -> Oxff		4072051						
ANR	4072107	Function	cb_filepath	1891:0:51464:51940							
ANR	4072108	FunctionDef	"cb_filepath (void * user , void * data)"		4072107	0					
ANR	4072109	CompoundStatement		1891:48:51512:51940	4072107	0					
ANR	4072110	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1892:1:51515:51543	4072107	0	True				
ANR	4072111	IdentifierDecl	* core = ( RCore * ) user		4072107	0					
ANR	4072112	IdentifierDeclType	RCore *		4072107	0					
ANR	4072113	Identifier	core		4072107	1					
ANR	4072114	AssignmentExpression	* core = ( RCore * ) user		4072107	2		=			
ANR	4072115	Identifier	core		4072107	0					
ANR	4072116	CastExpression	( RCore * ) user		4072107	1					
ANR	4072117	CastTarget	RCore *		4072107	0					
ANR	4072118	Identifier	user		4072107	1					
ANR	4072119	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1893:1:51546:51586	4072107	1	True				
ANR	4072120	IdentifierDecl	* node = ( RConfigNode * ) data		4072107	0					
ANR	4072121	IdentifierDeclType	RConfigNode *		4072107	0					
ANR	4072122	Identifier	node		4072107	1					
ANR	4072123	AssignmentExpression	* node = ( RConfigNode * ) data		4072107	2		=			
ANR	4072124	Identifier	node		4072107	0					
ANR	4072125	CastExpression	( RConfigNode * ) data		4072107	1					
ANR	4072126	CastTarget	RConfigNode *		4072107	0					
ANR	4072127	Identifier	data		4072107	1					
ANR	4072128	IdentifierDeclStatement	"char * pikaboo = strstr ( node -> value , ""://"" ) ;"	1894:1:51589:51632	4072107	2	True				
ANR	4072129	IdentifierDecl	"* pikaboo = strstr ( node -> value , ""://"" )"		4072107	0					
ANR	4072130	IdentifierDeclType	char *		4072107	0					
ANR	4072131	Identifier	pikaboo		4072107	1					
ANR	4072132	AssignmentExpression	"* pikaboo = strstr ( node -> value , ""://"" )"		4072107	2		=			
ANR	4072133	Identifier	pikaboo		4072107	0					
ANR	4072134	CallExpression	"strstr ( node -> value , ""://"" )"		4072107	1					
ANR	4072135	Callee	strstr		4072107	0					
ANR	4072136	Identifier	strstr		4072107	0					
ANR	4072137	ArgumentList	node -> value		4072107	1					
ANR	4072138	Argument	node -> value		4072107	0					
ANR	4072139	PtrMemberAccess	node -> value		4072107	0					
ANR	4072140	Identifier	node		4072107	0					
ANR	4072141	Identifier	value		4072107	1					
ANR	4072142	Argument	"""://"""		4072107	1					
ANR	4072143	PrimaryExpression	"""://"""		4072107	0					
ANR	4072144	IfStatement	if ( pikaboo )		4072107	3					
ANR	4072145	Condition	pikaboo	1895:5:51639:51645	4072107	0	True				
ANR	4072146	Identifier	pikaboo		4072107	0					
ANR	4072147	CompoundStatement		5:14:135:135	4072107	1					
ANR	4072148	IfStatement	if ( pikaboo [ 3 ] == '/' )		4072107	0					
ANR	4072149	Condition	pikaboo [ 3 ] == '/'	1896:6:51656:51672	4072107	0	True				
ANR	4072150	EqualityExpression	pikaboo [ 3 ] == '/'		4072107	0		==			
ANR	4072151	ArrayIndexing	pikaboo [ 3 ]		4072107	0					
ANR	4072152	Identifier	pikaboo		4072107	0					
ANR	4072153	PrimaryExpression	3		4072107	1					
ANR	4072154	PrimaryExpression	'/'		4072107	1					
ANR	4072155	CompoundStatement		8:3:229:255	4072107	1					
ANR	4072156	ExpressionStatement	"r_config_set ( core -> config , ""file.lastpath"" , node -> value )"	1897:3:51680:51737	4072107	0	True				
ANR	4072157	CallExpression	"r_config_set ( core -> config , ""file.lastpath"" , node -> value )"		4072107	0					
ANR	4072158	Callee	r_config_set		4072107	0					
ANR	4072159	Identifier	r_config_set		4072107	0					
ANR	4072160	ArgumentList	core -> config		4072107	1					
ANR	4072161	Argument	core -> config		4072107	0					
ANR	4072162	PtrMemberAccess	core -> config		4072107	0					
ANR	4072163	Identifier	core		4072107	0					
ANR	4072164	Identifier	config		4072107	1					
ANR	4072165	Argument	"""file.lastpath"""		4072107	1					
ANR	4072166	PrimaryExpression	"""file.lastpath"""		4072107	0					
ANR	4072167	Argument	node -> value		4072107	2					
ANR	4072168	PtrMemberAccess	node -> value		4072107	0					
ANR	4072169	Identifier	node		4072107	0					
ANR	4072170	Identifier	value		4072107	1					
ANR	4072171	IdentifierDeclStatement	char * ovalue = node -> value ;	1898:3:51742:51768	4072107	1	True				
ANR	4072172	IdentifierDecl	* ovalue = node -> value		4072107	0					
ANR	4072173	IdentifierDeclType	char *		4072107	0					
ANR	4072174	Identifier	ovalue		4072107	1					
ANR	4072175	AssignmentExpression	* ovalue = node -> value		4072107	2		=			
ANR	4072176	Identifier	ovalue		4072107	0					
ANR	4072177	PtrMemberAccess	node -> value		4072107	1					
ANR	4072178	Identifier	node		4072107	0					
ANR	4072179	Identifier	value		4072107	1					
ANR	4072180	ExpressionStatement	node -> value = strdup ( pikaboo + 3 )	1899:3:51773:51807	4072107	2	True				
ANR	4072181	AssignmentExpression	node -> value = strdup ( pikaboo + 3 )		4072107	0		=			
ANR	4072182	PtrMemberAccess	node -> value		4072107	0					
ANR	4072183	Identifier	node		4072107	0					
ANR	4072184	Identifier	value		4072107	1					
ANR	4072185	CallExpression	strdup ( pikaboo + 3 )		4072107	1					
ANR	4072186	Callee	strdup		4072107	0					
ANR	4072187	Identifier	strdup		4072107	0					
ANR	4072188	ArgumentList	pikaboo + 3		4072107	1					
ANR	4072189	Argument	pikaboo + 3		4072107	0					
ANR	4072190	AdditiveExpression	pikaboo + 3		4072107	0		+			
ANR	4072191	Identifier	pikaboo		4072107	0					
ANR	4072192	PrimaryExpression	3		4072107	1					
ANR	4072193	ExpressionStatement	free ( ovalue )	1900:3:51812:51825	4072107	3	True				
ANR	4072194	CallExpression	free ( ovalue )		4072107	0					
ANR	4072195	Callee	free		4072107	0					
ANR	4072196	Identifier	free		4072107	0					
ANR	4072197	ArgumentList	ovalue		4072107	1					
ANR	4072198	Argument	ovalue		4072107	0					
ANR	4072199	Identifier	ovalue		4072107	0					
ANR	4072200	ReturnStatement	return true ;	1901:3:51830:51841	4072107	4	True				
ANR	4072201	Identifier	true		4072107	0					
ANR	4072202	ReturnStatement	return false ;	1903:2:51849:51861	4072107	1	True				
ANR	4072203	Identifier	false		4072107	0					
ANR	4072204	ExpressionStatement	"r_config_set ( core -> config , ""file.lastpath"" , node -> value )"	1905:1:51867:51924	4072107	4	True				
ANR	4072205	CallExpression	"r_config_set ( core -> config , ""file.lastpath"" , node -> value )"		4072107	0					
ANR	4072206	Callee	r_config_set		4072107	0					
ANR	4072207	Identifier	r_config_set		4072107	0					
ANR	4072208	ArgumentList	core -> config		4072107	1					
ANR	4072209	Argument	core -> config		4072107	0					
ANR	4072210	PtrMemberAccess	core -> config		4072107	0					
ANR	4072211	Identifier	core		4072107	0					
ANR	4072212	Identifier	config		4072107	1					
ANR	4072213	Argument	"""file.lastpath"""		4072107	1					
ANR	4072214	PrimaryExpression	"""file.lastpath"""		4072107	0					
ANR	4072215	Argument	node -> value		4072107	2					
ANR	4072216	PtrMemberAccess	node -> value		4072107	0					
ANR	4072217	Identifier	node		4072107	0					
ANR	4072218	Identifier	value		4072107	1					
ANR	4072219	ReturnStatement	return true ;	1906:1:51927:51938	4072107	5	True				
ANR	4072220	Identifier	true		4072107	0					
ANR	4072221	ReturnType	static bool		4072107	1					
ANR	4072222	Identifier	cb_filepath		4072107	2					
ANR	4072223	ParameterList	"void * user , void * data"		4072107	3					
ANR	4072224	Parameter	void * user	1891:24:51488:51497	4072107	0	True				
ANR	4072225	ParameterType	void *		4072107	0					
ANR	4072226	Identifier	user		4072107	1					
ANR	4072227	Parameter	void * data	1891:36:51500:51509	4072107	1	True				
ANR	4072228	ParameterType	void *		4072107	0					
ANR	4072229	Identifier	data		4072107	1					
ANR	4072230	CFGEntryNode	ENTRY		4072107		True				
ANR	4072231	CFGExitNode	EXIT		4072107		True				
ANR	4072232	Symbol	core -> config		4072107						
ANR	4072233	Symbol	data		4072107						
ANR	4072234	Symbol	* pikaboo		4072107						
ANR	4072235	Symbol	* core		4072107						
ANR	4072236	Symbol	false		4072107						
ANR	4072237	Symbol	pikaboo		4072107						
ANR	4072238	Symbol	node -> value		4072107						
ANR	4072239	Symbol	core		4072107						
ANR	4072240	Symbol	node		4072107						
ANR	4072241	Symbol	ovalue		4072107						
ANR	4072242	Symbol	strstr		4072107						
ANR	4072243	Symbol	true		4072107						
ANR	4072244	Symbol	* node		4072107						
ANR	4072245	Symbol	strdup		4072107						
ANR	4072246	Symbol	user		4072107						
ANR	4072247	Function	cb_ioautofd	1909:0:51943:52116							
ANR	4072248	FunctionDef	"cb_ioautofd (void * user , void * data)"		4072247	0					
ANR	4072249	CompoundStatement		1909:48:51991:52116	4072247	0					
ANR	4072250	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1910:1:51994:52022	4072247	0	True				
ANR	4072251	IdentifierDecl	* core = ( RCore * ) user		4072247	0					
ANR	4072252	IdentifierDeclType	RCore *		4072247	0					
ANR	4072253	Identifier	core		4072247	1					
ANR	4072254	AssignmentExpression	* core = ( RCore * ) user		4072247	2		=			
ANR	4072255	Identifier	core		4072247	0					
ANR	4072256	CastExpression	( RCore * ) user		4072247	1					
ANR	4072257	CastTarget	RCore *		4072247	0					
ANR	4072258	Identifier	user		4072247	1					
ANR	4072259	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1911:1:52025:52065	4072247	1	True				
ANR	4072260	IdentifierDecl	* node = ( RConfigNode * ) data		4072247	0					
ANR	4072261	IdentifierDeclType	RConfigNode *		4072247	0					
ANR	4072262	Identifier	node		4072247	1					
ANR	4072263	AssignmentExpression	* node = ( RConfigNode * ) data		4072247	2		=			
ANR	4072264	Identifier	node		4072247	0					
ANR	4072265	CastExpression	( RConfigNode * ) data		4072247	1					
ANR	4072266	CastTarget	RConfigNode *		4072247	0					
ANR	4072267	Identifier	data		4072247	1					
ANR	4072268	ExpressionStatement	core -> io -> autofd = node -> i_value	1912:1:52068:52100	4072247	2	True				
ANR	4072269	AssignmentExpression	core -> io -> autofd = node -> i_value		4072247	0		=			
ANR	4072270	PtrMemberAccess	core -> io -> autofd		4072247	0					
ANR	4072271	PtrMemberAccess	core -> io		4072247	0					
ANR	4072272	Identifier	core		4072247	0					
ANR	4072273	Identifier	io		4072247	1					
ANR	4072274	Identifier	autofd		4072247	1					
ANR	4072275	PtrMemberAccess	node -> i_value		4072247	1					
ANR	4072276	Identifier	node		4072247	0					
ANR	4072277	Identifier	i_value		4072247	1					
ANR	4072278	ReturnStatement	return true ;	1913:1:52103:52114	4072247	3	True				
ANR	4072279	Identifier	true		4072247	0					
ANR	4072280	ReturnType	static bool		4072247	1					
ANR	4072281	Identifier	cb_ioautofd		4072247	2					
ANR	4072282	ParameterList	"void * user , void * data"		4072247	3					
ANR	4072283	Parameter	void * user	1909:24:51967:51976	4072247	0	True				
ANR	4072284	ParameterType	void *		4072247	0					
ANR	4072285	Identifier	user		4072247	1					
ANR	4072286	Parameter	void * data	1909:36:51979:51988	4072247	1	True				
ANR	4072287	ParameterType	void *		4072247	0					
ANR	4072288	Identifier	data		4072247	1					
ANR	4072289	CFGEntryNode	ENTRY		4072247		True				
ANR	4072290	CFGExitNode	EXIT		4072247		True				
ANR	4072291	Symbol	core -> io -> autofd		4072247						
ANR	4072292	Symbol	core		4072247						
ANR	4072293	Symbol	node		4072247						
ANR	4072294	Symbol	* core -> io		4072247						
ANR	4072295	Symbol	data		4072247						
ANR	4072296	Symbol	core -> io		4072247						
ANR	4072297	Symbol	* core		4072247						
ANR	4072298	Symbol	true		4072247						
ANR	4072299	Symbol	* node		4072247						
ANR	4072300	Symbol	user		4072247						
ANR	4072301	Symbol	* * core		4072247						
ANR	4072302	Symbol	node -> i_value		4072247						
ANR	4072303	Function	cb_scr_color_grep	1916:0:52119:52347							
ANR	4072304	FunctionDef	"cb_scr_color_grep (void * user , void * data)"		4072303	0					
ANR	4072305	CompoundStatement		1916:54:52173:52347	4072303	0					
ANR	4072306	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1917:1:52176:52204	4072303	0	True				
ANR	4072307	IdentifierDecl	* core = ( RCore * ) user		4072303	0					
ANR	4072308	IdentifierDeclType	RCore *		4072303	0					
ANR	4072309	Identifier	core		4072303	1					
ANR	4072310	AssignmentExpression	* core = ( RCore * ) user		4072303	2		=			
ANR	4072311	Identifier	core		4072303	0					
ANR	4072312	CastExpression	( RCore * ) user		4072303	1					
ANR	4072313	CastTarget	RCore *		4072303	0					
ANR	4072314	Identifier	user		4072303	1					
ANR	4072315	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1918:1:52207:52247	4072303	1	True				
ANR	4072316	IdentifierDecl	* node = ( RConfigNode * ) data		4072303	0					
ANR	4072317	IdentifierDeclType	RConfigNode *		4072303	0					
ANR	4072318	Identifier	node		4072303	1					
ANR	4072319	AssignmentExpression	* node = ( RConfigNode * ) data		4072303	2		=			
ANR	4072320	Identifier	node		4072303	0					
ANR	4072321	CastExpression	( RConfigNode * ) data		4072303	1					
ANR	4072322	CastTarget	RConfigNode *		4072303	0					
ANR	4072323	Identifier	data		4072303	1					
ANR	4072324	ExpressionStatement	core -> cons -> grep_color = node -> i_value	1921:1:52293:52331	4072303	2	True				
ANR	4072325	AssignmentExpression	core -> cons -> grep_color = node -> i_value		4072303	0		=			
ANR	4072326	PtrMemberAccess	core -> cons -> grep_color		4072303	0					
ANR	4072327	PtrMemberAccess	core -> cons		4072303	0					
ANR	4072328	Identifier	core		4072303	0					
ANR	4072329	Identifier	cons		4072303	1					
ANR	4072330	Identifier	grep_color		4072303	1					
ANR	4072331	PtrMemberAccess	node -> i_value		4072303	1					
ANR	4072332	Identifier	node		4072303	0					
ANR	4072333	Identifier	i_value		4072303	1					
ANR	4072334	ReturnStatement	return true ;	1922:1:52334:52345	4072303	3	True				
ANR	4072335	Identifier	true		4072303	0					
ANR	4072336	ReturnType	static bool		4072303	1					
ANR	4072337	Identifier	cb_scr_color_grep		4072303	2					
ANR	4072338	ParameterList	"void * user , void * data"		4072303	3					
ANR	4072339	Parameter	void * user	1916:30:52149:52158	4072303	0	True				
ANR	4072340	ParameterType	void *		4072303	0					
ANR	4072341	Identifier	user		4072303	1					
ANR	4072342	Parameter	void * data	1916:42:52161:52170	4072303	1	True				
ANR	4072343	ParameterType	void *		4072303	0					
ANR	4072344	Identifier	data		4072303	1					
ANR	4072345	CFGEntryNode	ENTRY		4072303		True				
ANR	4072346	CFGExitNode	EXIT		4072303		True				
ANR	4072347	Symbol	core		4072303						
ANR	4072348	Symbol	node		4072303						
ANR	4072349	Symbol	core -> cons		4072303						
ANR	4072350	Symbol	data		4072303						
ANR	4072351	Symbol	* core -> cons		4072303						
ANR	4072352	Symbol	core -> cons -> grep_color		4072303						
ANR	4072353	Symbol	* core		4072303						
ANR	4072354	Symbol	true		4072303						
ANR	4072355	Symbol	* node		4072303						
ANR	4072356	Symbol	user		4072303						
ANR	4072357	Symbol	* * core		4072303						
ANR	4072358	Symbol	node -> i_value		4072303						
ANR	4072359	Function	cb_scr_color_grep_highlight	1925:0:52350:52549							
ANR	4072360	FunctionDef	"cb_scr_color_grep_highlight (void * user , void * data)"		4072359	0					
ANR	4072361	CompoundStatement		1925:64:52414:52549	4072359	0					
ANR	4072362	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1926:1:52417:52445	4072359	0	True				
ANR	4072363	IdentifierDecl	* core = ( RCore * ) user		4072359	0					
ANR	4072364	IdentifierDeclType	RCore *		4072359	0					
ANR	4072365	Identifier	core		4072359	1					
ANR	4072366	AssignmentExpression	* core = ( RCore * ) user		4072359	2		=			
ANR	4072367	Identifier	core		4072359	0					
ANR	4072368	CastExpression	( RCore * ) user		4072359	1					
ANR	4072369	CastTarget	RCore *		4072359	0					
ANR	4072370	Identifier	user		4072359	1					
ANR	4072371	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1927:1:52448:52488	4072359	1	True				
ANR	4072372	IdentifierDecl	* node = ( RConfigNode * ) data		4072359	0					
ANR	4072373	IdentifierDeclType	RConfigNode *		4072359	0					
ANR	4072374	Identifier	node		4072359	1					
ANR	4072375	AssignmentExpression	* node = ( RConfigNode * ) data		4072359	2		=			
ANR	4072376	Identifier	node		4072359	0					
ANR	4072377	CastExpression	( RConfigNode * ) data		4072359	1					
ANR	4072378	CastTarget	RConfigNode *		4072359	0					
ANR	4072379	Identifier	data		4072359	1					
ANR	4072380	ExpressionStatement	core -> cons -> grep_highlight = node -> i_value	1928:1:52491:52533	4072359	2	True				
ANR	4072381	AssignmentExpression	core -> cons -> grep_highlight = node -> i_value		4072359	0		=			
ANR	4072382	PtrMemberAccess	core -> cons -> grep_highlight		4072359	0					
ANR	4072383	PtrMemberAccess	core -> cons		4072359	0					
ANR	4072384	Identifier	core		4072359	0					
ANR	4072385	Identifier	cons		4072359	1					
ANR	4072386	Identifier	grep_highlight		4072359	1					
ANR	4072387	PtrMemberAccess	node -> i_value		4072359	1					
ANR	4072388	Identifier	node		4072359	0					
ANR	4072389	Identifier	i_value		4072359	1					
ANR	4072390	ReturnStatement	return true ;	1929:1:52536:52547	4072359	3	True				
ANR	4072391	Identifier	true		4072359	0					
ANR	4072392	ReturnType	static bool		4072359	1					
ANR	4072393	Identifier	cb_scr_color_grep_highlight		4072359	2					
ANR	4072394	ParameterList	"void * user , void * data"		4072359	3					
ANR	4072395	Parameter	void * user	1925:40:52390:52399	4072359	0	True				
ANR	4072396	ParameterType	void *		4072359	0					
ANR	4072397	Identifier	user		4072359	1					
ANR	4072398	Parameter	void * data	1925:52:52402:52411	4072359	1	True				
ANR	4072399	ParameterType	void *		4072359	0					
ANR	4072400	Identifier	data		4072359	1					
ANR	4072401	CFGEntryNode	ENTRY		4072359		True				
ANR	4072402	CFGExitNode	EXIT		4072359		True				
ANR	4072403	Symbol	core		4072359						
ANR	4072404	Symbol	node		4072359						
ANR	4072405	Symbol	core -> cons		4072359						
ANR	4072406	Symbol	data		4072359						
ANR	4072407	Symbol	core -> cons -> grep_highlight		4072359						
ANR	4072408	Symbol	* core -> cons		4072359						
ANR	4072409	Symbol	* core		4072359						
ANR	4072410	Symbol	true		4072359						
ANR	4072411	Symbol	* node		4072359						
ANR	4072412	Symbol	user		4072359						
ANR	4072413	Symbol	* * core		4072359						
ANR	4072414	Symbol	node -> i_value		4072359						
ANR	4072415	Function	cb_pager	1932:0:52552:52951							
ANR	4072416	FunctionDef	"cb_pager (void * user , void * data)"		4072415	0					
ANR	4072417	CompoundStatement		1932:45:52597:52951	4072415	0					
ANR	4072418	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1933:1:52600:52628	4072415	0	True				
ANR	4072419	IdentifierDecl	* core = ( RCore * ) user		4072415	0					
ANR	4072420	IdentifierDeclType	RCore *		4072415	0					
ANR	4072421	Identifier	core		4072415	1					
ANR	4072422	AssignmentExpression	* core = ( RCore * ) user		4072415	2		=			
ANR	4072423	Identifier	core		4072415	0					
ANR	4072424	CastExpression	( RCore * ) user		4072415	1					
ANR	4072425	CastTarget	RCore *		4072415	0					
ANR	4072426	Identifier	user		4072415	1					
ANR	4072427	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1934:1:52631:52671	4072415	1	True				
ANR	4072428	IdentifierDecl	* node = ( RConfigNode * ) data		4072415	0					
ANR	4072429	IdentifierDeclType	RConfigNode *		4072415	0					
ANR	4072430	Identifier	node		4072415	1					
ANR	4072431	AssignmentExpression	* node = ( RConfigNode * ) data		4072415	2		=			
ANR	4072432	Identifier	node		4072415	0					
ANR	4072433	CastExpression	( RConfigNode * ) data		4072415	1					
ANR	4072434	CastTarget	RConfigNode *		4072415	0					
ANR	4072435	Identifier	data		4072415	1					
ANR	4072436	IfStatement	"if ( ! strcmp ( node -> value , ""?"" ) )"		4072415	2					
ANR	4072437	Condition	"! strcmp ( node -> value , ""?"" )"	1935:5:52678:52703	4072415	0	True				
ANR	4072438	UnaryOperationExpression	"! strcmp ( node -> value , ""?"" )"		4072415	0					
ANR	4072439	UnaryOperator	!		4072415	0					
ANR	4072440	CallExpression	"strcmp ( node -> value , ""?"" )"		4072415	1					
ANR	4072441	Callee	strcmp		4072415	0					
ANR	4072442	Identifier	strcmp		4072415	0					
ANR	4072443	ArgumentList	node -> value		4072415	1					
ANR	4072444	Argument	node -> value		4072415	0					
ANR	4072445	PtrMemberAccess	node -> value		4072415	0					
ANR	4072446	Identifier	node		4072415	0					
ANR	4072447	Identifier	value		4072415	1					
ANR	4072448	Argument	"""?"""		4072415	1					
ANR	4072449	PrimaryExpression	"""?"""		4072415	0					
ANR	4072450	CompoundStatement		4:33:108:108	4072415	1					
ANR	4072451	ExpressionStatement	"eprintf ( ""Usage: scr.pager must be '..' for internal less, or the path to a program in $PATH"" )"	1936:2:52710:52804	4072415	0	True				
ANR	4072452	CallExpression	"eprintf ( ""Usage: scr.pager must be '..' for internal less, or the path to a program in $PATH"" )"		4072415	0					
ANR	4072453	Callee	eprintf		4072415	0					
ANR	4072454	Identifier	eprintf		4072415	0					
ANR	4072455	ArgumentList	"""Usage: scr.pager must be '..' for internal less, or the path to a program in $PATH"""		4072415	1					
ANR	4072456	Argument	"""Usage: scr.pager must be '..' for internal less, or the path to a program in $PATH"""		4072415	0					
ANR	4072457	PrimaryExpression	"""Usage: scr.pager must be '..' for internal less, or the path to a program in $PATH"""		4072415	0					
ANR	4072458	ReturnStatement	return false ;	1937:2:52808:52820	4072415	1	True				
ANR	4072459	Identifier	false		4072415	0					
ANR	4072460	ExpressionStatement	free ( core -> cons -> pager )	1940:1:52868:52892	4072415	3	True				
ANR	4072461	CallExpression	free ( core -> cons -> pager )		4072415	0					
ANR	4072462	Callee	free		4072415	0					
ANR	4072463	Identifier	free		4072415	0					
ANR	4072464	ArgumentList	core -> cons -> pager		4072415	1					
ANR	4072465	Argument	core -> cons -> pager		4072415	0					
ANR	4072466	PtrMemberAccess	core -> cons -> pager		4072415	0					
ANR	4072467	PtrMemberAccess	core -> cons		4072415	0					
ANR	4072468	Identifier	core		4072415	0					
ANR	4072469	Identifier	cons		4072415	1					
ANR	4072470	Identifier	pager		4072415	1					
ANR	4072471	ExpressionStatement	core -> cons -> pager = strdup ( node -> value )	1941:1:52895:52935	4072415	4	True				
ANR	4072472	AssignmentExpression	core -> cons -> pager = strdup ( node -> value )		4072415	0		=			
ANR	4072473	PtrMemberAccess	core -> cons -> pager		4072415	0					
ANR	4072474	PtrMemberAccess	core -> cons		4072415	0					
ANR	4072475	Identifier	core		4072415	0					
ANR	4072476	Identifier	cons		4072415	1					
ANR	4072477	Identifier	pager		4072415	1					
ANR	4072478	CallExpression	strdup ( node -> value )		4072415	1					
ANR	4072479	Callee	strdup		4072415	0					
ANR	4072480	Identifier	strdup		4072415	0					
ANR	4072481	ArgumentList	node -> value		4072415	1					
ANR	4072482	Argument	node -> value		4072415	0					
ANR	4072483	PtrMemberAccess	node -> value		4072415	0					
ANR	4072484	Identifier	node		4072415	0					
ANR	4072485	Identifier	value		4072415	1					
ANR	4072486	ReturnStatement	return true ;	1942:1:52938:52949	4072415	5	True				
ANR	4072487	Identifier	true		4072415	0					
ANR	4072488	ReturnType	static bool		4072415	1					
ANR	4072489	Identifier	cb_pager		4072415	2					
ANR	4072490	ParameterList	"void * user , void * data"		4072415	3					
ANR	4072491	Parameter	void * user	1932:21:52573:52582	4072415	0	True				
ANR	4072492	ParameterType	void *		4072415	0					
ANR	4072493	Identifier	user		4072415	1					
ANR	4072494	Parameter	void * data	1932:33:52585:52594	4072415	1	True				
ANR	4072495	ParameterType	void *		4072415	0					
ANR	4072496	Identifier	data		4072415	1					
ANR	4072497	CFGEntryNode	ENTRY		4072415		True				
ANR	4072498	CFGExitNode	EXIT		4072415		True				
ANR	4072499	Symbol	strcmp		4072415						
ANR	4072500	Symbol	data		4072415						
ANR	4072501	Symbol	* core -> cons		4072415						
ANR	4072502	Symbol	false		4072415						
ANR	4072503	Symbol	* core		4072415						
ANR	4072504	Symbol	node -> value		4072415						
ANR	4072505	Symbol	core		4072415						
ANR	4072506	Symbol	node		4072415						
ANR	4072507	Symbol	core -> cons		4072415						
ANR	4072508	Symbol	true		4072415						
ANR	4072509	Symbol	* node		4072415						
ANR	4072510	Symbol	strdup		4072415						
ANR	4072511	Symbol	user		4072415						
ANR	4072512	Symbol	* * core		4072415						
ANR	4072513	Symbol	core -> cons -> pager		4072415						
ANR	4072514	Function	cb_breaklines	1945:0:52954:53114							
ANR	4072515	FunctionDef	"cb_breaklines (void * user , void * data)"		4072514	0					
ANR	4072516	CompoundStatement		1945:50:53004:53114	4072514	0					
ANR	4072517	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1946:1:53007:53047	4072514	0	True				
ANR	4072518	IdentifierDecl	* node = ( RConfigNode * ) data		4072514	0					
ANR	4072519	IdentifierDeclType	RConfigNode *		4072514	0					
ANR	4072520	Identifier	node		4072514	1					
ANR	4072521	AssignmentExpression	* node = ( RConfigNode * ) data		4072514	2		=			
ANR	4072522	Identifier	node		4072514	0					
ANR	4072523	CastExpression	( RConfigNode * ) data		4072514	1					
ANR	4072524	CastTarget	RConfigNode *		4072514	0					
ANR	4072525	Identifier	data		4072514	1					
ANR	4072526	ExpressionStatement	r_cons_singleton ( ) -> break_lines = node -> i_value	1947:1:53050:53098	4072514	1	True				
ANR	4072527	AssignmentExpression	r_cons_singleton ( ) -> break_lines = node -> i_value		4072514	0		=			
ANR	4072528	PtrMemberAccess	r_cons_singleton ( ) -> break_lines		4072514	0					
ANR	4072529	CallExpression	r_cons_singleton ( )		4072514	0					
ANR	4072530	Callee	r_cons_singleton		4072514	0					
ANR	4072531	Identifier	r_cons_singleton		4072514	0					
ANR	4072532	ArgumentList			4072514	1					
ANR	4072533	Identifier	break_lines		4072514	1					
ANR	4072534	PtrMemberAccess	node -> i_value		4072514	1					
ANR	4072535	Identifier	node		4072514	0					
ANR	4072536	Identifier	i_value		4072514	1					
ANR	4072537	ReturnStatement	return true ;	1948:1:53101:53112	4072514	2	True				
ANR	4072538	Identifier	true		4072514	0					
ANR	4072539	ReturnType	static bool		4072514	1					
ANR	4072540	Identifier	cb_breaklines		4072514	2					
ANR	4072541	ParameterList	"void * user , void * data"		4072514	3					
ANR	4072542	Parameter	void * user	1945:26:52980:52989	4072514	0	True				
ANR	4072543	ParameterType	void *		4072514	0					
ANR	4072544	Identifier	user		4072514	1					
ANR	4072545	Parameter	void * data	1945:38:52992:53001	4072514	1	True				
ANR	4072546	ParameterType	void *		4072514	0					
ANR	4072547	Identifier	data		4072514	1					
ANR	4072548	CFGEntryNode	ENTRY		4072514		True				
ANR	4072549	CFGExitNode	EXIT		4072514		True				
ANR	4072550	Symbol	node		4072514						
ANR	4072551	Symbol	data		4072514						
ANR	4072552	Symbol	r_cons_singleton ( ) -> break_lines		4072514						
ANR	4072553	Symbol	true		4072514						
ANR	4072554	Symbol	r_cons_singleton		4072514						
ANR	4072555	Symbol	* node		4072514						
ANR	4072556	Symbol	user		4072514						
ANR	4072557	Symbol	* r_cons_singleton		4072514						
ANR	4072558	Symbol	node -> i_value		4072514						
ANR	4072559	Function	cb_scr_gadgets	1951:0:53117:53293							
ANR	4072560	FunctionDef	"cb_scr_gadgets (void * user , void * data)"		4072559	0					
ANR	4072561	CompoundStatement		1951:51:53168:53293	4072559	0					
ANR	4072562	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1952:1:53171:53198	4072559	0	True				
ANR	4072563	IdentifierDecl	* core = ( RCore * ) user		4072559	0					
ANR	4072564	IdentifierDeclType	RCore *		4072559	0					
ANR	4072565	Identifier	core		4072559	1					
ANR	4072566	AssignmentExpression	* core = ( RCore * ) user		4072559	2		=			
ANR	4072567	Identifier	core		4072559	0					
ANR	4072568	CastExpression	( RCore * ) user		4072559	1					
ANR	4072569	CastTarget	RCore *		4072559	0					
ANR	4072570	Identifier	user		4072559	1					
ANR	4072571	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1953:1:53201:53241	4072559	1	True				
ANR	4072572	IdentifierDecl	* node = ( RConfigNode * ) data		4072559	0					
ANR	4072573	IdentifierDeclType	RConfigNode *		4072559	0					
ANR	4072574	Identifier	node		4072559	1					
ANR	4072575	AssignmentExpression	* node = ( RConfigNode * ) data		4072559	2		=			
ANR	4072576	Identifier	node		4072559	0					
ANR	4072577	CastExpression	( RConfigNode * ) data		4072559	1					
ANR	4072578	CastTarget	RConfigNode *		4072559	0					
ANR	4072579	Identifier	data		4072559	1					
ANR	4072580	ExpressionStatement	core -> scr_gadgets = node -> i_value	1954:1:53244:53277	4072559	2	True				
ANR	4072581	AssignmentExpression	core -> scr_gadgets = node -> i_value		4072559	0		=			
ANR	4072582	PtrMemberAccess	core -> scr_gadgets		4072559	0					
ANR	4072583	Identifier	core		4072559	0					
ANR	4072584	Identifier	scr_gadgets		4072559	1					
ANR	4072585	PtrMemberAccess	node -> i_value		4072559	1					
ANR	4072586	Identifier	node		4072559	0					
ANR	4072587	Identifier	i_value		4072559	1					
ANR	4072588	ReturnStatement	return true ;	1955:1:53280:53291	4072559	3	True				
ANR	4072589	Identifier	true		4072559	0					
ANR	4072590	ReturnType	static bool		4072559	1					
ANR	4072591	Identifier	cb_scr_gadgets		4072559	2					
ANR	4072592	ParameterList	"void * user , void * data"		4072559	3					
ANR	4072593	Parameter	void * user	1951:27:53144:53153	4072559	0	True				
ANR	4072594	ParameterType	void *		4072559	0					
ANR	4072595	Identifier	user		4072559	1					
ANR	4072596	Parameter	void * data	1951:39:53156:53165	4072559	1	True				
ANR	4072597	ParameterType	void *		4072559	0					
ANR	4072598	Identifier	data		4072559	1					
ANR	4072599	CFGEntryNode	ENTRY		4072559		True				
ANR	4072600	CFGExitNode	EXIT		4072559		True				
ANR	4072601	Symbol	core		4072559						
ANR	4072602	Symbol	node		4072559						
ANR	4072603	Symbol	data		4072559						
ANR	4072604	Symbol	* core		4072559						
ANR	4072605	Symbol	true		4072559						
ANR	4072606	Symbol	core -> scr_gadgets		4072559						
ANR	4072607	Symbol	* node		4072559						
ANR	4072608	Symbol	user		4072559						
ANR	4072609	Symbol	node -> i_value		4072559						
ANR	4072610	Function	cb_fps	1958:0:53296:53441							
ANR	4072611	FunctionDef	"cb_fps (void * user , void * data)"		4072610	0					
ANR	4072612	CompoundStatement		1958:43:53339:53441	4072610	0					
ANR	4072613	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1959:1:53342:53382	4072610	0	True				
ANR	4072614	IdentifierDecl	* node = ( RConfigNode * ) data		4072610	0					
ANR	4072615	IdentifierDeclType	RConfigNode *		4072610	0					
ANR	4072616	Identifier	node		4072610	1					
ANR	4072617	AssignmentExpression	* node = ( RConfigNode * ) data		4072610	2		=			
ANR	4072618	Identifier	node		4072610	0					
ANR	4072619	CastExpression	( RConfigNode * ) data		4072610	1					
ANR	4072620	CastTarget	RConfigNode *		4072610	0					
ANR	4072621	Identifier	data		4072610	1					
ANR	4072622	ExpressionStatement	r_cons_singleton ( ) -> fps = node -> i_value	1960:1:53385:53425	4072610	1	True				
ANR	4072623	AssignmentExpression	r_cons_singleton ( ) -> fps = node -> i_value		4072610	0		=			
ANR	4072624	PtrMemberAccess	r_cons_singleton ( ) -> fps		4072610	0					
ANR	4072625	CallExpression	r_cons_singleton ( )		4072610	0					
ANR	4072626	Callee	r_cons_singleton		4072610	0					
ANR	4072627	Identifier	r_cons_singleton		4072610	0					
ANR	4072628	ArgumentList			4072610	1					
ANR	4072629	Identifier	fps		4072610	1					
ANR	4072630	PtrMemberAccess	node -> i_value		4072610	1					
ANR	4072631	Identifier	node		4072610	0					
ANR	4072632	Identifier	i_value		4072610	1					
ANR	4072633	ReturnStatement	return true ;	1961:1:53428:53439	4072610	2	True				
ANR	4072634	Identifier	true		4072610	0					
ANR	4072635	ReturnType	static bool		4072610	1					
ANR	4072636	Identifier	cb_fps		4072610	2					
ANR	4072637	ParameterList	"void * user , void * data"		4072610	3					
ANR	4072638	Parameter	void * user	1958:19:53315:53324	4072610	0	True				
ANR	4072639	ParameterType	void *		4072610	0					
ANR	4072640	Identifier	user		4072610	1					
ANR	4072641	Parameter	void * data	1958:31:53327:53336	4072610	1	True				
ANR	4072642	ParameterType	void *		4072610	0					
ANR	4072643	Identifier	data		4072610	1					
ANR	4072644	CFGEntryNode	ENTRY		4072610		True				
ANR	4072645	CFGExitNode	EXIT		4072610		True				
ANR	4072646	Symbol	node		4072610						
ANR	4072647	Symbol	data		4072610						
ANR	4072648	Symbol	true		4072610						
ANR	4072649	Symbol	r_cons_singleton		4072610						
ANR	4072650	Symbol	* node		4072610						
ANR	4072651	Symbol	r_cons_singleton ( ) -> fps		4072610						
ANR	4072652	Symbol	user		4072610						
ANR	4072653	Symbol	* r_cons_singleton		4072610						
ANR	4072654	Symbol	node -> i_value		4072610						
ANR	4072655	Function	cb_scrbreakword	1964:0:53444:53649							
ANR	4072656	FunctionDef	"cb_scrbreakword (void * user , void * data)"		4072655	0					
ANR	4072657	CompoundStatement		1964:52:53496:53649	4072655	0					
ANR	4072658	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1965:1:53499:53538	4072655	0	True				
ANR	4072659	IdentifierDecl	* node = ( RConfigNode * ) data		4072655	0					
ANR	4072660	IdentifierDeclType	RConfigNode *		4072655	0					
ANR	4072661	Identifier	node		4072655	1					
ANR	4072662	AssignmentExpression	* node = ( RConfigNode * ) data		4072655	2		=			
ANR	4072663	Identifier	node		4072655	0					
ANR	4072664	CastExpression	( RConfigNode * ) data		4072655	1					
ANR	4072665	CastTarget	RConfigNode *		4072655	0					
ANR	4072666	Identifier	data		4072655	1					
ANR	4072667	IfStatement	if ( * node -> value )		4072655	1					
ANR	4072668	Condition	* node -> value	1966:5:53545:53556	4072655	0	True				
ANR	4072669	UnaryOperationExpression	* node -> value		4072655	0					
ANR	4072670	UnaryOperator	*		4072655	0					
ANR	4072671	PtrMemberAccess	node -> value		4072655	1					
ANR	4072672	Identifier	node		4072655	0					
ANR	4072673	Identifier	value		4072655	1					
ANR	4072674	CompoundStatement		3:19:62:62	4072655	1					
ANR	4072675	ExpressionStatement	r_cons_breakword ( node -> value )	1967:2:53563:53593	4072655	0	True				
ANR	4072676	CallExpression	r_cons_breakword ( node -> value )		4072655	0					
ANR	4072677	Callee	r_cons_breakword		4072655	0					
ANR	4072678	Identifier	r_cons_breakword		4072655	0					
ANR	4072679	ArgumentList	node -> value		4072655	1					
ANR	4072680	Argument	node -> value		4072655	0					
ANR	4072681	PtrMemberAccess	node -> value		4072655	0					
ANR	4072682	Identifier	node		4072655	0					
ANR	4072683	Identifier	value		4072655	1					
ANR	4072684	ElseStatement	else		4072655	0					
ANR	4072685	CompoundStatement		5:8:106:106	4072655	0					
ANR	4072686	ExpressionStatement	r_cons_breakword ( NULL )	1969:2:53607:53630	4072655	0	True				
ANR	4072687	CallExpression	r_cons_breakword ( NULL )		4072655	0					
ANR	4072688	Callee	r_cons_breakword		4072655	0					
ANR	4072689	Identifier	r_cons_breakword		4072655	0					
ANR	4072690	ArgumentList	NULL		4072655	1					
ANR	4072691	Argument	NULL		4072655	0					
ANR	4072692	Identifier	NULL		4072655	0					
ANR	4072693	ReturnStatement	return true ;	1971:1:53636:53647	4072655	2	True				
ANR	4072694	Identifier	true		4072655	0					
ANR	4072695	ReturnType	static bool		4072655	1					
ANR	4072696	Identifier	cb_scrbreakword		4072655	2					
ANR	4072697	ParameterList	"void * user , void * data"		4072655	3					
ANR	4072698	Parameter	void * user	1964:28:53472:53481	4072655	0	True				
ANR	4072699	ParameterType	void *		4072655	0					
ANR	4072700	Identifier	user		4072655	1					
ANR	4072701	Parameter	void * data	1964:40:53484:53493	4072655	1	True				
ANR	4072702	ParameterType	void *		4072655	0					
ANR	4072703	Identifier	data		4072655	1					
ANR	4072704	CFGEntryNode	ENTRY		4072655		True				
ANR	4072705	CFGExitNode	EXIT		4072655		True				
ANR	4072706	Symbol	node		4072655						
ANR	4072707	Symbol	* node -> value		4072655						
ANR	4072708	Symbol	NULL		4072655						
ANR	4072709	Symbol	data		4072655						
ANR	4072710	Symbol	* * node		4072655						
ANR	4072711	Symbol	true		4072655						
ANR	4072712	Symbol	* node		4072655						
ANR	4072713	Symbol	user		4072655						
ANR	4072714	Symbol	node -> value		4072655						
ANR	4072715	Function	cb_scrcolumns	1974:0:53652:53881							
ANR	4072716	FunctionDef	"cb_scrcolumns (void * user , void * data)"		4072715	0					
ANR	4072717	CompoundStatement		1974:50:53702:53881	4072715	0					
ANR	4072718	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1975:1:53705:53744	4072715	0	True				
ANR	4072719	IdentifierDecl	* node = ( RConfigNode * ) data		4072715	0					
ANR	4072720	IdentifierDeclType	RConfigNode *		4072715	0					
ANR	4072721	Identifier	node		4072715	1					
ANR	4072722	AssignmentExpression	* node = ( RConfigNode * ) data		4072715	2		=			
ANR	4072723	Identifier	node		4072715	0					
ANR	4072724	CastExpression	( RConfigNode * ) data		4072715	1					
ANR	4072725	CastTarget	RConfigNode *		4072715	0					
ANR	4072726	Identifier	data		4072715	1					
ANR	4072727	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1976:1:53747:53774	4072715	1	True				
ANR	4072728	IdentifierDecl	* core = ( RCore * ) user		4072715	0					
ANR	4072729	IdentifierDeclType	RCore *		4072715	0					
ANR	4072730	Identifier	core		4072715	1					
ANR	4072731	AssignmentExpression	* core = ( RCore * ) user		4072715	2		=			
ANR	4072732	Identifier	core		4072715	0					
ANR	4072733	CastExpression	( RCore * ) user		4072715	1					
ANR	4072734	CastTarget	RCore *		4072715	0					
ANR	4072735	Identifier	user		4072715	1					
ANR	4072736	IdentifierDeclStatement	int n = atoi ( node -> value ) ;	1977:1:53777:53803	4072715	2	True				
ANR	4072737	IdentifierDecl	n = atoi ( node -> value )		4072715	0					
ANR	4072738	IdentifierDeclType	int		4072715	0					
ANR	4072739	Identifier	n		4072715	1					
ANR	4072740	AssignmentExpression	n = atoi ( node -> value )		4072715	2		=			
ANR	4072741	Identifier	n		4072715	0					
ANR	4072742	CallExpression	atoi ( node -> value )		4072715	1					
ANR	4072743	Callee	atoi		4072715	0					
ANR	4072744	Identifier	atoi		4072715	0					
ANR	4072745	ArgumentList	node -> value		4072715	1					
ANR	4072746	Argument	node -> value		4072715	0					
ANR	4072747	PtrMemberAccess	node -> value		4072715	0					
ANR	4072748	Identifier	node		4072715	0					
ANR	4072749	Identifier	value		4072715	1					
ANR	4072750	ExpressionStatement	core -> cons -> force_columns = n	1978:1:53806:53835	4072715	3	True				
ANR	4072751	AssignmentExpression	core -> cons -> force_columns = n		4072715	0		=			
ANR	4072752	PtrMemberAccess	core -> cons -> force_columns		4072715	0					
ANR	4072753	PtrMemberAccess	core -> cons		4072715	0					
ANR	4072754	Identifier	core		4072715	0					
ANR	4072755	Identifier	cons		4072715	1					
ANR	4072756	Identifier	force_columns		4072715	1					
ANR	4072757	Identifier	n		4072715	1					
ANR	4072758	ExpressionStatement	core -> dbg -> regcols = n / 20	1979:1:53838:53865	4072715	4	True				
ANR	4072759	AssignmentExpression	core -> dbg -> regcols = n / 20		4072715	0		=			
ANR	4072760	PtrMemberAccess	core -> dbg -> regcols		4072715	0					
ANR	4072761	PtrMemberAccess	core -> dbg		4072715	0					
ANR	4072762	Identifier	core		4072715	0					
ANR	4072763	Identifier	dbg		4072715	1					
ANR	4072764	Identifier	regcols		4072715	1					
ANR	4072765	MultiplicativeExpression	n / 20		4072715	1		/			
ANR	4072766	Identifier	n		4072715	0					
ANR	4072767	PrimaryExpression	20		4072715	1					
ANR	4072768	ReturnStatement	return true ;	1980:1:53868:53879	4072715	5	True				
ANR	4072769	Identifier	true		4072715	0					
ANR	4072770	ReturnType	static bool		4072715	1					
ANR	4072771	Identifier	cb_scrcolumns		4072715	2					
ANR	4072772	ParameterList	"void * user , void * data"		4072715	3					
ANR	4072773	Parameter	void * user	1974:26:53678:53687	4072715	0	True				
ANR	4072774	ParameterType	void *		4072715	0					
ANR	4072775	Identifier	user		4072715	1					
ANR	4072776	Parameter	void * data	1974:38:53690:53699	4072715	1	True				
ANR	4072777	ParameterType	void *		4072715	0					
ANR	4072778	Identifier	data		4072715	1					
ANR	4072779	CFGEntryNode	ENTRY		4072715		True				
ANR	4072780	CFGExitNode	EXIT		4072715		True				
ANR	4072781	Symbol	atoi		4072715						
ANR	4072782	Symbol	core -> cons -> force_columns		4072715						
ANR	4072783	Symbol	data		4072715						
ANR	4072784	Symbol	* core -> cons		4072715						
ANR	4072785	Symbol	* core		4072715						
ANR	4072786	Symbol	n		4072715						
ANR	4072787	Symbol	node -> value		4072715						
ANR	4072788	Symbol	node		4072715						
ANR	4072789	Symbol	core		4072715						
ANR	4072790	Symbol	core -> cons		4072715						
ANR	4072791	Symbol	true		4072715						
ANR	4072792	Symbol	* node		4072715						
ANR	4072793	Symbol	user		4072715						
ANR	4072794	Symbol	* core -> dbg		4072715						
ANR	4072795	Symbol	* * core		4072715						
ANR	4072796	Symbol	core -> dbg -> regcols		4072715						
ANR	4072797	Symbol	core -> dbg		4072715						
ANR	4072798	Function	cb_scrfgets	1983:0:53884:54094							
ANR	4072799	FunctionDef	"cb_scrfgets (void * user , void * data)"		4072798	0					
ANR	4072800	CompoundStatement		1983:48:53932:54094	4072798	0					
ANR	4072801	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1984:1:53935:53963	4072798	0	True				
ANR	4072802	IdentifierDecl	* core = ( RCore * ) user		4072798	0					
ANR	4072803	IdentifierDeclType	RCore *		4072798	0					
ANR	4072804	Identifier	core		4072798	1					
ANR	4072805	AssignmentExpression	* core = ( RCore * ) user		4072798	2		=			
ANR	4072806	Identifier	core		4072798	0					
ANR	4072807	CastExpression	( RCore * ) user		4072798	1					
ANR	4072808	CastTarget	RCore *		4072798	0					
ANR	4072809	Identifier	user		4072798	1					
ANR	4072810	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1985:1:53966:54005	4072798	1	True				
ANR	4072811	IdentifierDecl	* node = ( RConfigNode * ) data		4072798	0					
ANR	4072812	IdentifierDeclType	RConfigNode *		4072798	0					
ANR	4072813	Identifier	node		4072798	1					
ANR	4072814	AssignmentExpression	* node = ( RConfigNode * ) data		4072798	2		=			
ANR	4072815	Identifier	node		4072798	0					
ANR	4072816	CastExpression	( RConfigNode * ) data		4072798	1					
ANR	4072817	CastTarget	RConfigNode *		4072798	0					
ANR	4072818	Identifier	data		4072798	1					
ANR	4072819	ExpressionStatement	core -> cons -> user_fgets = node -> i_value ? NULL : ( void * ) r_core_fgets	1986:1:54008:54078	4072798	2	True				
ANR	4072820	AssignmentExpression	core -> cons -> user_fgets = node -> i_value ? NULL : ( void * ) r_core_fgets		4072798	0		=			
ANR	4072821	PtrMemberAccess	core -> cons -> user_fgets		4072798	0					
ANR	4072822	PtrMemberAccess	core -> cons		4072798	0					
ANR	4072823	Identifier	core		4072798	0					
ANR	4072824	Identifier	cons		4072798	1					
ANR	4072825	Identifier	user_fgets		4072798	1					
ANR	4072826	ConditionalExpression	node -> i_value ? NULL : ( void * ) r_core_fgets		4072798	1					
ANR	4072827	Condition	node -> i_value		4072798	0					
ANR	4072828	PtrMemberAccess	node -> i_value		4072798	0					
ANR	4072829	Identifier	node		4072798	0					
ANR	4072830	Identifier	i_value		4072798	1					
ANR	4072831	Identifier	NULL		4072798	1					
ANR	4072832	CastExpression	( void * ) r_core_fgets		4072798	2					
ANR	4072833	CastTarget	void *		4072798	0					
ANR	4072834	Identifier	r_core_fgets		4072798	1					
ANR	4072835	ReturnStatement	return true ;	1988:1:54081:54092	4072798	3	True				
ANR	4072836	Identifier	true		4072798	0					
ANR	4072837	ReturnType	static bool		4072798	1					
ANR	4072838	Identifier	cb_scrfgets		4072798	2					
ANR	4072839	ParameterList	"void * user , void * data"		4072798	3					
ANR	4072840	Parameter	void * user	1983:24:53908:53917	4072798	0	True				
ANR	4072841	ParameterType	void *		4072798	0					
ANR	4072842	Identifier	user		4072798	1					
ANR	4072843	Parameter	void * data	1983:36:53920:53929	4072798	1	True				
ANR	4072844	ParameterType	void *		4072798	0					
ANR	4072845	Identifier	data		4072798	1					
ANR	4072846	CFGEntryNode	ENTRY		4072798		True				
ANR	4072847	CFGExitNode	EXIT		4072798		True				
ANR	4072848	Symbol	r_core_fgets		4072798						
ANR	4072849	Symbol	NULL		4072798						
ANR	4072850	Symbol	data		4072798						
ANR	4072851	Symbol	* core -> cons		4072798						
ANR	4072852	Symbol	core -> cons -> user_fgets		4072798						
ANR	4072853	Symbol	* core		4072798						
ANR	4072854	Symbol	node -> i_value		4072798						
ANR	4072855	Symbol	core		4072798						
ANR	4072856	Symbol	node		4072798						
ANR	4072857	Symbol	core -> cons		4072798						
ANR	4072858	Symbol	true		4072798						
ANR	4072859	Symbol	* node		4072798						
ANR	4072860	Symbol	user		4072798						
ANR	4072861	Symbol	* * core		4072798						
ANR	4072862	Function	cb_scrhtml	1991:0:54097:54327							
ANR	4072863	FunctionDef	"cb_scrhtml (void * user , void * data)"		4072862	0					
ANR	4072864	CompoundStatement		1991:47:54144:54327	4072862	0					
ANR	4072865	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1992:1:54147:54187	4072862	0	True				
ANR	4072866	IdentifierDecl	* node = ( RConfigNode * ) data		4072862	0					
ANR	4072867	IdentifierDeclType	RConfigNode *		4072862	0					
ANR	4072868	Identifier	node		4072862	1					
ANR	4072869	AssignmentExpression	* node = ( RConfigNode * ) data		4072862	2		=			
ANR	4072870	Identifier	node		4072862	0					
ANR	4072871	CastExpression	( RConfigNode * ) data		4072862	1					
ANR	4072872	CastTarget	RConfigNode *		4072862	0					
ANR	4072873	Identifier	data		4072862	1					
ANR	4072874	ExpressionStatement	r_cons_singleton ( ) -> is_html = node -> i_value	1993:1:54190:54234	4072862	1	True				
ANR	4072875	AssignmentExpression	r_cons_singleton ( ) -> is_html = node -> i_value		4072862	0		=			
ANR	4072876	PtrMemberAccess	r_cons_singleton ( ) -> is_html		4072862	0					
ANR	4072877	CallExpression	r_cons_singleton ( )		4072862	0					
ANR	4072878	Callee	r_cons_singleton		4072862	0					
ANR	4072879	Identifier	r_cons_singleton		4072862	0					
ANR	4072880	ArgumentList			4072862	1					
ANR	4072881	Identifier	is_html		4072862	1					
ANR	4072882	PtrMemberAccess	node -> i_value		4072862	1					
ANR	4072883	Identifier	node		4072862	0					
ANR	4072884	Identifier	i_value		4072862	1					
ANR	4072885	ReturnStatement	return true ;	1995:1:54314:54325	4072862	2	True				
ANR	4072886	Identifier	true		4072862	0					
ANR	4072887	ReturnType	static bool		4072862	1					
ANR	4072888	Identifier	cb_scrhtml		4072862	2					
ANR	4072889	ParameterList	"void * user , void * data"		4072862	3					
ANR	4072890	Parameter	void * user	1991:23:54120:54129	4072862	0	True				
ANR	4072891	ParameterType	void *		4072862	0					
ANR	4072892	Identifier	user		4072862	1					
ANR	4072893	Parameter	void * data	1991:35:54132:54141	4072862	1	True				
ANR	4072894	ParameterType	void *		4072862	0					
ANR	4072895	Identifier	data		4072862	1					
ANR	4072896	CFGEntryNode	ENTRY		4072862		True				
ANR	4072897	CFGExitNode	EXIT		4072862		True				
ANR	4072898	Symbol	node		4072862						
ANR	4072899	Symbol	data		4072862						
ANR	4072900	Symbol	true		4072862						
ANR	4072901	Symbol	r_cons_singleton		4072862						
ANR	4072902	Symbol	* node		4072862						
ANR	4072903	Symbol	user		4072862						
ANR	4072904	Symbol	* r_cons_singleton		4072862						
ANR	4072905	Symbol	r_cons_singleton ( ) -> is_html		4072862						
ANR	4072906	Symbol	node -> i_value		4072862						
ANR	4072907	Function	cb_scrhighlight	1998:0:54330:54474							
ANR	4072908	FunctionDef	"cb_scrhighlight (void * user , void * data)"		4072907	0					
ANR	4072909	CompoundStatement		1998:52:54382:54474	4072907	0					
ANR	4072910	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1999:1:54385:54425	4072907	0	True				
ANR	4072911	IdentifierDecl	* node = ( RConfigNode * ) data		4072907	0					
ANR	4072912	IdentifierDeclType	RConfigNode *		4072907	0					
ANR	4072913	Identifier	node		4072907	1					
ANR	4072914	AssignmentExpression	* node = ( RConfigNode * ) data		4072907	2		=			
ANR	4072915	Identifier	node		4072907	0					
ANR	4072916	CastExpression	( RConfigNode * ) data		4072907	1					
ANR	4072917	CastTarget	RConfigNode *		4072907	0					
ANR	4072918	Identifier	data		4072907	1					
ANR	4072919	ExpressionStatement	r_cons_highlight ( node -> value )	2000:1:54428:54458	4072907	1	True				
ANR	4072920	CallExpression	r_cons_highlight ( node -> value )		4072907	0					
ANR	4072921	Callee	r_cons_highlight		4072907	0					
ANR	4072922	Identifier	r_cons_highlight		4072907	0					
ANR	4072923	ArgumentList	node -> value		4072907	1					
ANR	4072924	Argument	node -> value		4072907	0					
ANR	4072925	PtrMemberAccess	node -> value		4072907	0					
ANR	4072926	Identifier	node		4072907	0					
ANR	4072927	Identifier	value		4072907	1					
ANR	4072928	ReturnStatement	return true ;	2001:1:54461:54472	4072907	2	True				
ANR	4072929	Identifier	true		4072907	0					
ANR	4072930	ReturnType	static bool		4072907	1					
ANR	4072931	Identifier	cb_scrhighlight		4072907	2					
ANR	4072932	ParameterList	"void * user , void * data"		4072907	3					
ANR	4072933	Parameter	void * user	1998:28:54358:54367	4072907	0	True				
ANR	4072934	ParameterType	void *		4072907	0					
ANR	4072935	Identifier	user		4072907	1					
ANR	4072936	Parameter	void * data	1998:40:54370:54379	4072907	1	True				
ANR	4072937	ParameterType	void *		4072907	0					
ANR	4072938	Identifier	data		4072907	1					
ANR	4072939	CFGEntryNode	ENTRY		4072907		True				
ANR	4072940	CFGExitNode	EXIT		4072907		True				
ANR	4072941	Symbol	node		4072907						
ANR	4072942	Symbol	data		4072907						
ANR	4072943	Symbol	true		4072907						
ANR	4072944	Symbol	* node		4072907						
ANR	4072945	Symbol	user		4072907						
ANR	4072946	Symbol	node -> value		4072907						
ANR	4072947	Function	scr_ansicon	2005:0:54493:55376							
ANR	4072948	FunctionDef	"scr_ansicon (void * user , void * data)"		4072947	0					
ANR	4072949	CompoundStatement		2005:47:54540:55376	4072947	0					
ANR	4072950	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2006:1:54543:54583	4072947	0	True				
ANR	4072951	IdentifierDecl	* node = ( RConfigNode * ) data		4072947	0					
ANR	4072952	IdentifierDeclType	RConfigNode *		4072947	0					
ANR	4072953	Identifier	node		4072947	1					
ANR	4072954	AssignmentExpression	* node = ( RConfigNode * ) data		4072947	2		=			
ANR	4072955	Identifier	node		4072947	0					
ANR	4072956	CastExpression	( RConfigNode * ) data		4072947	1					
ANR	4072957	CastTarget	RConfigNode *		4072947	0					
ANR	4072958	Identifier	data		4072947	1					
ANR	4072959	IfStatement	"if ( ! strcmp ( node -> value , ""true"" ) )"		4072947	1					
ANR	4072960	Condition	"! strcmp ( node -> value , ""true"" )"	2007:5:54590:54618	4072947	0	True				
ANR	4072961	UnaryOperationExpression	"! strcmp ( node -> value , ""true"" )"		4072947	0					
ANR	4072962	UnaryOperator	!		4072947	0					
ANR	4072963	CallExpression	"strcmp ( node -> value , ""true"" )"		4072947	1					
ANR	4072964	Callee	strcmp		4072947	0					
ANR	4072965	Identifier	strcmp		4072947	0					
ANR	4072966	ArgumentList	node -> value		4072947	1					
ANR	4072967	Argument	node -> value		4072947	0					
ANR	4072968	PtrMemberAccess	node -> value		4072947	0					
ANR	4072969	Identifier	node		4072947	0					
ANR	4072970	Identifier	value		4072947	1					
ANR	4072971	Argument	"""true"""		4072947	1					
ANR	4072972	PrimaryExpression	"""true"""		4072947	0					
ANR	4072973	CompoundStatement		3:36:80:80	4072947	1					
ANR	4072974	ExpressionStatement	node -> i_value = 1	2008:2:54625:54642	4072947	0	True				
ANR	4072975	AssignmentExpression	node -> i_value = 1		4072947	0		=			
ANR	4072976	PtrMemberAccess	node -> i_value		4072947	0					
ANR	4072977	Identifier	node		4072947	0					
ANR	4072978	Identifier	i_value		4072947	1					
ANR	4072979	PrimaryExpression	1		4072947	1					
ANR	4072980	ExpressionStatement	r_line_singleton ( ) -> ansicon = r_cons_singleton ( ) -> ansicon = node -> i_value	2010:1:54648:54723	4072947	2	True				
ANR	4072981	AssignmentExpression	r_line_singleton ( ) -> ansicon = r_cons_singleton ( ) -> ansicon = node -> i_value		4072947	0		=			
ANR	4072982	PtrMemberAccess	r_line_singleton ( ) -> ansicon		4072947	0					
ANR	4072983	CallExpression	r_line_singleton ( )		4072947	0					
ANR	4072984	Callee	r_line_singleton		4072947	0					
ANR	4072985	Identifier	r_line_singleton		4072947	0					
ANR	4072986	ArgumentList			4072947	1					
ANR	4072987	Identifier	ansicon		4072947	1					
ANR	4072988	AssignmentExpression	r_cons_singleton ( ) -> ansicon = node -> i_value		4072947	1		=			
ANR	4072989	PtrMemberAccess	r_cons_singleton ( ) -> ansicon		4072947	0					
ANR	4072990	CallExpression	r_cons_singleton ( )		4072947	0					
ANR	4072991	Callee	r_cons_singleton		4072947	0					
ANR	4072992	Identifier	r_cons_singleton		4072947	0					
ANR	4072993	ArgumentList			4072947	1					
ANR	4072994	Identifier	ansicon		4072947	1					
ANR	4072995	PtrMemberAccess	node -> i_value		4072947	1					
ANR	4072996	Identifier	node		4072947	0					
ANR	4072997	Identifier	i_value		4072947	1					
ANR	4072998	IdentifierDeclStatement	"HANDLE streams [ ] = { GetStdHandle ( STD_OUTPUT_HANDLE ) , GetStdHandle ( STD_ERROR_HANDLE ) } ;"	2011:1:54726:54814	4072947	3	True				
ANR	4072999	IdentifierDecl	"streams [ ] = { GetStdHandle ( STD_OUTPUT_HANDLE ) , GetStdHandle ( STD_ERROR_HANDLE ) }"		4072947	0					
ANR	4073000	IdentifierDeclType	HANDLE [ ]		4072947	0					
ANR	4073001	Identifier	streams		4072947	1					
ANR	4073002	AssignmentExpression	"streams [ ] = { GetStdHandle ( STD_OUTPUT_HANDLE ) , GetStdHandle ( STD_ERROR_HANDLE ) }"		4072947	2		=			
ANR	4073003	Identifier	streams		4072947	0					
ANR	4073004	InitializerList	GetStdHandle ( STD_OUTPUT_HANDLE )		4072947	1					
ANR	4073005	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		4072947	0					
ANR	4073006	Callee	GetStdHandle		4072947	0					
ANR	4073007	Identifier	GetStdHandle		4072947	0					
ANR	4073008	ArgumentList	STD_OUTPUT_HANDLE		4072947	1					
ANR	4073009	Argument	STD_OUTPUT_HANDLE		4072947	0					
ANR	4073010	Identifier	STD_OUTPUT_HANDLE		4072947	0					
ANR	4073011	CallExpression	GetStdHandle ( STD_ERROR_HANDLE )		4072947	1					
ANR	4073012	Callee	GetStdHandle		4072947	0					
ANR	4073013	Identifier	GetStdHandle		4072947	0					
ANR	4073014	ArgumentList	STD_ERROR_HANDLE		4072947	1					
ANR	4073015	Argument	STD_ERROR_HANDLE		4072947	0					
ANR	4073016	Identifier	STD_ERROR_HANDLE		4072947	0					
ANR	4073017	IdentifierDeclStatement	DWORD mode ;	2012:1:54817:54827	4072947	4	True				
ANR	4073018	IdentifierDecl	mode		4072947	0					
ANR	4073019	IdentifierDeclType	DWORD		4072947	0					
ANR	4073020	Identifier	mode		4072947	1					
ANR	4073021	IdentifierDeclStatement	int i ;	2013:1:54830:54835	4072947	5	True				
ANR	4073022	IdentifierDecl	i		4072947	0					
ANR	4073023	IdentifierDeclType	int		4072947	0					
ANR	4073024	Identifier	i		4072947	1					
ANR	4073025	IfStatement	if ( node -> i_value == 1 )		4072947	6					
ANR	4073026	Condition	node -> i_value == 1	2014:5:54842:54859	4072947	0	True				
ANR	4073027	EqualityExpression	node -> i_value == 1		4072947	0		==			
ANR	4073028	PtrMemberAccess	node -> i_value		4072947	0					
ANR	4073029	Identifier	node		4072947	0					
ANR	4073030	Identifier	i_value		4072947	1					
ANR	4073031	PrimaryExpression	1		4072947	1					
ANR	4073032	CompoundStatement		10:25:321:321	4072947	1					
ANR	4073033	ForStatement	for ( i = 0 ; i < R_ARRAY_SIZE ( streams ) ; i ++ )		4072947	0					
ANR	4073034	ForInit	i = 0 ;	2015:7:54957:54962	4072947	0	True				
ANR	4073035	AssignmentExpression	i = 0		4072947	0		=			
ANR	4073036	Identifier	i		4072947	0					
ANR	4073037	PrimaryExpression	0		4072947	1					
ANR	4073038	Condition	i < R_ARRAY_SIZE ( streams )	2015:14:54964:54989	4072947	1	True				
ANR	4073039	RelationalExpression	i < R_ARRAY_SIZE ( streams )		4072947	0		<			
ANR	4073040	Identifier	i		4072947	0					
ANR	4073041	CallExpression	R_ARRAY_SIZE ( streams )		4072947	1					
ANR	4073042	Callee	R_ARRAY_SIZE		4072947	0					
ANR	4073043	Identifier	R_ARRAY_SIZE		4072947	0					
ANR	4073044	ArgumentList	streams		4072947	1					
ANR	4073045	Argument	streams		4072947	0					
ANR	4073046	Identifier	streams		4072947	0					
ANR	4073047	PostIncDecOperationExpression	i ++	2015:42:54992:54994	4072947	2	True				
ANR	4073048	Identifier	i		4072947	0					
ANR	4073049	IncDec	++		4072947	1					
ANR	4073050	CompoundStatement		11:47:456:456	4072947	3					
ANR	4073051	ExpressionStatement	"GetConsoleMode ( streams [ i ] , & mode )"	2016:3:55002:55036	4072947	0	True				
ANR	4073052	CallExpression	"GetConsoleMode ( streams [ i ] , & mode )"		4072947	0					
ANR	4073053	Callee	GetConsoleMode		4072947	0					
ANR	4073054	Identifier	GetConsoleMode		4072947	0					
ANR	4073055	ArgumentList	streams [ i ]		4072947	1					
ANR	4073056	Argument	streams [ i ]		4072947	0					
ANR	4073057	ArrayIndexing	streams [ i ]		4072947	0					
ANR	4073058	Identifier	streams		4072947	0					
ANR	4073059	Identifier	i		4072947	1					
ANR	4073060	Argument	& mode		4072947	1					
ANR	4073061	UnaryOperationExpression	& mode		4072947	0					
ANR	4073062	UnaryOperator	&		4072947	0					
ANR	4073063	Identifier	mode		4072947	1					
ANR	4073064	ExpressionStatement	"SetConsoleMode ( streams [ i ] , mode | ENABLE_PROCESSED_OUTPUT | ENABLE_VIRTUAL_TERMINAL_PROCESSING )"	2017:3:55041:55156	4072947	1	True				
ANR	4073065	CallExpression	"SetConsoleMode ( streams [ i ] , mode | ENABLE_PROCESSED_OUTPUT | ENABLE_VIRTUAL_TERMINAL_PROCESSING )"		4072947	0					
ANR	4073066	Callee	SetConsoleMode		4072947	0					
ANR	4073067	Identifier	SetConsoleMode		4072947	0					
ANR	4073068	ArgumentList	streams [ i ]		4072947	1					
ANR	4073069	Argument	streams [ i ]		4072947	0					
ANR	4073070	ArrayIndexing	streams [ i ]		4072947	0					
ANR	4073071	Identifier	streams		4072947	0					
ANR	4073072	Identifier	i		4072947	1					
ANR	4073073	Argument	mode | ENABLE_PROCESSED_OUTPUT | ENABLE_VIRTUAL_TERMINAL_PROCESSING		4072947	1					
ANR	4073074	InclusiveOrExpression	mode | ENABLE_PROCESSED_OUTPUT | ENABLE_VIRTUAL_TERMINAL_PROCESSING		4072947	0		|			
ANR	4073075	Identifier	mode		4072947	0					
ANR	4073076	InclusiveOrExpression	ENABLE_PROCESSED_OUTPUT | ENABLE_VIRTUAL_TERMINAL_PROCESSING		4072947	1		|			
ANR	4073077	Identifier	ENABLE_PROCESSED_OUTPUT		4072947	0					
ANR	4073078	Identifier	ENABLE_VIRTUAL_TERMINAL_PROCESSING		4072947	1					
ANR	4073079	ElseStatement	else		4072947	0					
ANR	4073080	CompoundStatement		16:8:629:629	4072947	0					
ANR	4073081	ForStatement	for ( i = 0 ; i < R_ARRAY_SIZE ( streams ) ; i ++ )		4072947	0					
ANR	4073082	ForInit	i = 0 ;	2021:7:55179:55184	4072947	0	True				
ANR	4073083	AssignmentExpression	i = 0		4072947	0		=			
ANR	4073084	Identifier	i		4072947	0					
ANR	4073085	PrimaryExpression	0		4072947	1					
ANR	4073086	Condition	i < R_ARRAY_SIZE ( streams )	2021:14:55186:55211	4072947	1	True				
ANR	4073087	RelationalExpression	i < R_ARRAY_SIZE ( streams )		4072947	0		<			
ANR	4073088	Identifier	i		4072947	0					
ANR	4073089	CallExpression	R_ARRAY_SIZE ( streams )		4072947	1					
ANR	4073090	Callee	R_ARRAY_SIZE		4072947	0					
ANR	4073091	Identifier	R_ARRAY_SIZE		4072947	0					
ANR	4073092	ArgumentList	streams		4072947	1					
ANR	4073093	Argument	streams		4072947	0					
ANR	4073094	Identifier	streams		4072947	0					
ANR	4073095	PostIncDecOperationExpression	i ++	2021:42:55214:55216	4072947	2	True				
ANR	4073096	Identifier	i		4072947	0					
ANR	4073097	IncDec	++		4072947	1					
ANR	4073098	CompoundStatement		17:47:678:678	4072947	3					
ANR	4073099	ExpressionStatement	"GetConsoleMode ( streams [ i ] , & mode )"	2022:3:55224:55258	4072947	0	True				
ANR	4073100	CallExpression	"GetConsoleMode ( streams [ i ] , & mode )"		4072947	0					
ANR	4073101	Callee	GetConsoleMode		4072947	0					
ANR	4073102	Identifier	GetConsoleMode		4072947	0					
ANR	4073103	ArgumentList	streams [ i ]		4072947	1					
ANR	4073104	Argument	streams [ i ]		4072947	0					
ANR	4073105	ArrayIndexing	streams [ i ]		4072947	0					
ANR	4073106	Identifier	streams		4072947	0					
ANR	4073107	Identifier	i		4072947	1					
ANR	4073108	Argument	& mode		4072947	1					
ANR	4073109	UnaryOperationExpression	& mode		4072947	0					
ANR	4073110	UnaryOperator	&		4072947	0					
ANR	4073111	Identifier	mode		4072947	1					
ANR	4073112	ExpressionStatement	"SetConsoleMode ( streams [ i ] , mode & ~ENABLE_VIRTUAL_TERMINAL_PROCESSING )"	2023:3:55263:55353	4072947	1	True				
ANR	4073113	CallExpression	"SetConsoleMode ( streams [ i ] , mode & ~ENABLE_VIRTUAL_TERMINAL_PROCESSING )"		4072947	0					
ANR	4073114	Callee	SetConsoleMode		4072947	0					
ANR	4073115	Identifier	SetConsoleMode		4072947	0					
ANR	4073116	ArgumentList	streams [ i ]		4072947	1					
ANR	4073117	Argument	streams [ i ]		4072947	0					
ANR	4073118	ArrayIndexing	streams [ i ]		4072947	0					
ANR	4073119	Identifier	streams		4072947	0					
ANR	4073120	Identifier	i		4072947	1					
ANR	4073121	Argument	mode & ~ENABLE_VIRTUAL_TERMINAL_PROCESSING		4072947	1					
ANR	4073122	BitAndExpression	mode & ~ENABLE_VIRTUAL_TERMINAL_PROCESSING		4072947	0		&			
ANR	4073123	Identifier	mode		4072947	0					
ANR	4073124	Identifier	~ENABLE_VIRTUAL_TERMINAL_PROCESSING		4072947	1					
ANR	4073125	ReturnStatement	return true ;	2027:1:55363:55374	4072947	7	True				
ANR	4073126	Identifier	true		4072947	0					
ANR	4073127	ReturnType	static int		4072947	1					
ANR	4073128	Identifier	scr_ansicon		4072947	2					
ANR	4073129	ParameterList	"void * user , void * data"		4072947	3					
ANR	4073130	Parameter	void * user	2005:23:54516:54525	4072947	0	True				
ANR	4073131	ParameterType	void *		4072947	0					
ANR	4073132	Identifier	user		4072947	1					
ANR	4073133	Parameter	void * data	2005:35:54528:54537	4072947	1	True				
ANR	4073134	ParameterType	void *		4072947	0					
ANR	4073135	Identifier	data		4072947	1					
ANR	4073136	CFGEntryNode	ENTRY		4072947		True				
ANR	4073137	CFGExitNode	EXIT		4072947		True				
ANR	4073138	Symbol	GetStdHandle		4072947						
ANR	4073139	Symbol	data		4072947						
ANR	4073140	Symbol	r_line_singleton		4072947						
ANR	4073141	Symbol	* streams		4072947						
ANR	4073142	Symbol	r_cons_singleton ( ) -> ansicon		4072947						
ANR	4073143	Symbol	ENABLE_PROCESSED_OUTPUT		4072947						
ANR	4073144	Symbol	mode		4072947						
ANR	4073145	Symbol	& mode		4072947						
ANR	4073146	Symbol	r_cons_singleton		4072947						
ANR	4073147	Symbol	* node		4072947						
ANR	4073148	Symbol	strcmp		4072947						
ANR	4073149	Symbol	STD_ERROR_HANDLE		4072947						
ANR	4073150	Symbol	STD_OUTPUT_HANDLE		4072947						
ANR	4073151	Symbol	streams		4072947						
ANR	4073152	Symbol	i		4072947						
ANR	4073153	Symbol	r_line_singleton ( ) -> ansicon		4072947						
ANR	4073154	Symbol	~ENABLE_VIRTUAL_TERMINAL_PROCESSING		4072947						
ANR	4073155	Symbol	node -> value		4072947						
ANR	4073156	Symbol	node -> i_value		4072947						
ANR	4073157	Symbol	node		4072947						
ANR	4073158	Symbol	* i		4072947						
ANR	4073159	Symbol	* r_line_singleton		4072947						
ANR	4073160	Symbol	R_ARRAY_SIZE		4072947						
ANR	4073161	Symbol	true		4072947						
ANR	4073162	Symbol	user		4072947						
ANR	4073163	Symbol	ENABLE_VIRTUAL_TERMINAL_PROCESSING		4072947						
ANR	4073164	Symbol	* r_cons_singleton		4072947						
ANR	4073165	Function	cb_screcho	2031:0:55386:55536							
ANR	4073166	FunctionDef	"cb_screcho (void * user , void * data)"		4073165	0					
ANR	4073167	CompoundStatement		2031:47:55433:55536	4073165	0					
ANR	4073168	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2032:1:55436:55476	4073165	0	True				
ANR	4073169	IdentifierDecl	* node = ( RConfigNode * ) data		4073165	0					
ANR	4073170	IdentifierDeclType	RConfigNode *		4073165	0					
ANR	4073171	Identifier	node		4073165	1					
ANR	4073172	AssignmentExpression	* node = ( RConfigNode * ) data		4073165	2		=			
ANR	4073173	Identifier	node		4073165	0					
ANR	4073174	CastExpression	( RConfigNode * ) data		4073165	1					
ANR	4073175	CastTarget	RConfigNode *		4073165	0					
ANR	4073176	Identifier	data		4073165	1					
ANR	4073177	ExpressionStatement	r_cons_singleton ( ) -> echo = node -> i_value	2033:1:55479:55520	4073165	1	True				
ANR	4073178	AssignmentExpression	r_cons_singleton ( ) -> echo = node -> i_value		4073165	0		=			
ANR	4073179	PtrMemberAccess	r_cons_singleton ( ) -> echo		4073165	0					
ANR	4073180	CallExpression	r_cons_singleton ( )		4073165	0					
ANR	4073181	Callee	r_cons_singleton		4073165	0					
ANR	4073182	Identifier	r_cons_singleton		4073165	0					
ANR	4073183	ArgumentList			4073165	1					
ANR	4073184	Identifier	echo		4073165	1					
ANR	4073185	PtrMemberAccess	node -> i_value		4073165	1					
ANR	4073186	Identifier	node		4073165	0					
ANR	4073187	Identifier	i_value		4073165	1					
ANR	4073188	ReturnStatement	return true ;	2034:1:55523:55534	4073165	2	True				
ANR	4073189	Identifier	true		4073165	0					
ANR	4073190	ReturnType	static bool		4073165	1					
ANR	4073191	Identifier	cb_screcho		4073165	2					
ANR	4073192	ParameterList	"void * user , void * data"		4073165	3					
ANR	4073193	Parameter	void * user	2031:23:55409:55418	4073165	0	True				
ANR	4073194	ParameterType	void *		4073165	0					
ANR	4073195	Identifier	user		4073165	1					
ANR	4073196	Parameter	void * data	2031:35:55421:55430	4073165	1	True				
ANR	4073197	ParameterType	void *		4073165	0					
ANR	4073198	Identifier	data		4073165	1					
ANR	4073199	CFGEntryNode	ENTRY		4073165		True				
ANR	4073200	CFGExitNode	EXIT		4073165		True				
ANR	4073201	Symbol	node		4073165						
ANR	4073202	Symbol	data		4073165						
ANR	4073203	Symbol	true		4073165						
ANR	4073204	Symbol	r_cons_singleton		4073165						
ANR	4073205	Symbol	* node		4073165						
ANR	4073206	Symbol	r_cons_singleton ( ) -> echo		4073165						
ANR	4073207	Symbol	user		4073165						
ANR	4073208	Symbol	* r_cons_singleton		4073165						
ANR	4073209	Symbol	node -> i_value		4073165						
ANR	4073210	Function	cb_scrlinesleep	2037:0:55539:55699							
ANR	4073211	FunctionDef	"cb_scrlinesleep (void * user , void * data)"		4073210	0					
ANR	4073212	CompoundStatement		2037:52:55591:55699	4073210	0					
ANR	4073213	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2038:1:55594:55634	4073210	0	True				
ANR	4073214	IdentifierDecl	* node = ( RConfigNode * ) data		4073210	0					
ANR	4073215	IdentifierDeclType	RConfigNode *		4073210	0					
ANR	4073216	Identifier	node		4073210	1					
ANR	4073217	AssignmentExpression	* node = ( RConfigNode * ) data		4073210	2		=			
ANR	4073218	Identifier	node		4073210	0					
ANR	4073219	CastExpression	( RConfigNode * ) data		4073210	1					
ANR	4073220	CastTarget	RConfigNode *		4073210	0					
ANR	4073221	Identifier	data		4073210	1					
ANR	4073222	ExpressionStatement	r_cons_singleton ( ) -> linesleep = node -> i_value	2039:1:55637:55683	4073210	1	True				
ANR	4073223	AssignmentExpression	r_cons_singleton ( ) -> linesleep = node -> i_value		4073210	0		=			
ANR	4073224	PtrMemberAccess	r_cons_singleton ( ) -> linesleep		4073210	0					
ANR	4073225	CallExpression	r_cons_singleton ( )		4073210	0					
ANR	4073226	Callee	r_cons_singleton		4073210	0					
ANR	4073227	Identifier	r_cons_singleton		4073210	0					
ANR	4073228	ArgumentList			4073210	1					
ANR	4073229	Identifier	linesleep		4073210	1					
ANR	4073230	PtrMemberAccess	node -> i_value		4073210	1					
ANR	4073231	Identifier	node		4073210	0					
ANR	4073232	Identifier	i_value		4073210	1					
ANR	4073233	ReturnStatement	return true ;	2040:1:55686:55697	4073210	2	True				
ANR	4073234	Identifier	true		4073210	0					
ANR	4073235	ReturnType	static bool		4073210	1					
ANR	4073236	Identifier	cb_scrlinesleep		4073210	2					
ANR	4073237	ParameterList	"void * user , void * data"		4073210	3					
ANR	4073238	Parameter	void * user	2037:28:55567:55576	4073210	0	True				
ANR	4073239	ParameterType	void *		4073210	0					
ANR	4073240	Identifier	user		4073210	1					
ANR	4073241	Parameter	void * data	2037:40:55579:55588	4073210	1	True				
ANR	4073242	ParameterType	void *		4073210	0					
ANR	4073243	Identifier	data		4073210	1					
ANR	4073244	CFGEntryNode	ENTRY		4073210		True				
ANR	4073245	CFGExitNode	EXIT		4073210		True				
ANR	4073246	Symbol	node		4073210						
ANR	4073247	Symbol	data		4073210						
ANR	4073248	Symbol	true		4073210						
ANR	4073249	Symbol	r_cons_singleton		4073210						
ANR	4073250	Symbol	* node		4073210						
ANR	4073251	Symbol	r_cons_singleton ( ) -> linesleep		4073210						
ANR	4073252	Symbol	user		4073210						
ANR	4073253	Symbol	* r_cons_singleton		4073210						
ANR	4073254	Symbol	node -> i_value		4073210						
ANR	4073255	Function	cb_scrpagesize	2043:0:55702:55859							
ANR	4073256	FunctionDef	"cb_scrpagesize (void * user , void * data)"		4073255	0					
ANR	4073257	CompoundStatement		2043:51:55753:55859	4073255	0					
ANR	4073258	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2044:1:55756:55796	4073255	0	True				
ANR	4073259	IdentifierDecl	* node = ( RConfigNode * ) data		4073255	0					
ANR	4073260	IdentifierDeclType	RConfigNode *		4073255	0					
ANR	4073261	Identifier	node		4073255	1					
ANR	4073262	AssignmentExpression	* node = ( RConfigNode * ) data		4073255	2		=			
ANR	4073263	Identifier	node		4073255	0					
ANR	4073264	CastExpression	( RConfigNode * ) data		4073255	1					
ANR	4073265	CastTarget	RConfigNode *		4073255	0					
ANR	4073266	Identifier	data		4073255	1					
ANR	4073267	ExpressionStatement	r_cons_singleton ( ) -> pagesize = node -> i_value	2045:1:55799:55843	4073255	1	True				
ANR	4073268	AssignmentExpression	r_cons_singleton ( ) -> pagesize = node -> i_value		4073255	0		=			
ANR	4073269	PtrMemberAccess	r_cons_singleton ( ) -> pagesize		4073255	0					
ANR	4073270	CallExpression	r_cons_singleton ( )		4073255	0					
ANR	4073271	Callee	r_cons_singleton		4073255	0					
ANR	4073272	Identifier	r_cons_singleton		4073255	0					
ANR	4073273	ArgumentList			4073255	1					
ANR	4073274	Identifier	pagesize		4073255	1					
ANR	4073275	PtrMemberAccess	node -> i_value		4073255	1					
ANR	4073276	Identifier	node		4073255	0					
ANR	4073277	Identifier	i_value		4073255	1					
ANR	4073278	ReturnStatement	return true ;	2046:1:55846:55857	4073255	2	True				
ANR	4073279	Identifier	true		4073255	0					
ANR	4073280	ReturnType	static bool		4073255	1					
ANR	4073281	Identifier	cb_scrpagesize		4073255	2					
ANR	4073282	ParameterList	"void * user , void * data"		4073255	3					
ANR	4073283	Parameter	void * user	2043:27:55729:55738	4073255	0	True				
ANR	4073284	ParameterType	void *		4073255	0					
ANR	4073285	Identifier	user		4073255	1					
ANR	4073286	Parameter	void * data	2043:39:55741:55750	4073255	1	True				
ANR	4073287	ParameterType	void *		4073255	0					
ANR	4073288	Identifier	data		4073255	1					
ANR	4073289	CFGEntryNode	ENTRY		4073255		True				
ANR	4073290	CFGExitNode	EXIT		4073255		True				
ANR	4073291	Symbol	node		4073255						
ANR	4073292	Symbol	data		4073255						
ANR	4073293	Symbol	true		4073255						
ANR	4073294	Symbol	r_cons_singleton		4073255						
ANR	4073295	Symbol	* node		4073255						
ANR	4073296	Symbol	user		4073255						
ANR	4073297	Symbol	* r_cons_singleton		4073255						
ANR	4073298	Symbol	r_cons_singleton ( ) -> pagesize		4073255						
ANR	4073299	Symbol	node -> i_value		4073255						
ANR	4073300	Function	cb_scrflush	2049:0:55862:56014							
ANR	4073301	FunctionDef	"cb_scrflush (void * user , void * data)"		4073300	0					
ANR	4073302	CompoundStatement		2049:48:55910:56014	4073300	0					
ANR	4073303	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2050:1:55913:55953	4073300	0	True				
ANR	4073304	IdentifierDecl	* node = ( RConfigNode * ) data		4073300	0					
ANR	4073305	IdentifierDeclType	RConfigNode *		4073300	0					
ANR	4073306	Identifier	node		4073300	1					
ANR	4073307	AssignmentExpression	* node = ( RConfigNode * ) data		4073300	2		=			
ANR	4073308	Identifier	node		4073300	0					
ANR	4073309	CastExpression	( RConfigNode * ) data		4073300	1					
ANR	4073310	CastTarget	RConfigNode *		4073300	0					
ANR	4073311	Identifier	data		4073300	1					
ANR	4073312	ExpressionStatement	r_cons_singleton ( ) -> flush = node -> i_value	2051:1:55956:55998	4073300	1	True				
ANR	4073313	AssignmentExpression	r_cons_singleton ( ) -> flush = node -> i_value		4073300	0		=			
ANR	4073314	PtrMemberAccess	r_cons_singleton ( ) -> flush		4073300	0					
ANR	4073315	CallExpression	r_cons_singleton ( )		4073300	0					
ANR	4073316	Callee	r_cons_singleton		4073300	0					
ANR	4073317	Identifier	r_cons_singleton		4073300	0					
ANR	4073318	ArgumentList			4073300	1					
ANR	4073319	Identifier	flush		4073300	1					
ANR	4073320	PtrMemberAccess	node -> i_value		4073300	1					
ANR	4073321	Identifier	node		4073300	0					
ANR	4073322	Identifier	i_value		4073300	1					
ANR	4073323	ReturnStatement	return true ;	2052:1:56001:56012	4073300	2	True				
ANR	4073324	Identifier	true		4073300	0					
ANR	4073325	ReturnType	static bool		4073300	1					
ANR	4073326	Identifier	cb_scrflush		4073300	2					
ANR	4073327	ParameterList	"void * user , void * data"		4073300	3					
ANR	4073328	Parameter	void * user	2049:24:55886:55895	4073300	0	True				
ANR	4073329	ParameterType	void *		4073300	0					
ANR	4073330	Identifier	user		4073300	1					
ANR	4073331	Parameter	void * data	2049:36:55898:55907	4073300	1	True				
ANR	4073332	ParameterType	void *		4073300	0					
ANR	4073333	Identifier	data		4073300	1					
ANR	4073334	CFGEntryNode	ENTRY		4073300		True				
ANR	4073335	CFGExitNode	EXIT		4073300		True				
ANR	4073336	Symbol	node		4073300						
ANR	4073337	Symbol	data		4073300						
ANR	4073338	Symbol	true		4073300						
ANR	4073339	Symbol	r_cons_singleton		4073300						
ANR	4073340	Symbol	* node		4073300						
ANR	4073341	Symbol	r_cons_singleton ( ) -> flush		4073300						
ANR	4073342	Symbol	user		4073300						
ANR	4073343	Symbol	* r_cons_singleton		4073300						
ANR	4073344	Symbol	node -> i_value		4073300						
ANR	4073345	Function	cb_scrstrconv	2055:0:56017:57001							
ANR	4073346	FunctionDef	"cb_scrstrconv (void * user , void * data)"		4073345	0					
ANR	4073347	CompoundStatement		2055:50:56067:57001	4073345	0					
ANR	4073348	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2056:1:56070:56097	4073345	0	True				
ANR	4073349	IdentifierDecl	* core = ( RCore * ) user		4073345	0					
ANR	4073350	IdentifierDeclType	RCore *		4073345	0					
ANR	4073351	Identifier	core		4073345	1					
ANR	4073352	AssignmentExpression	* core = ( RCore * ) user		4073345	2		=			
ANR	4073353	Identifier	core		4073345	0					
ANR	4073354	CastExpression	( RCore * ) user		4073345	1					
ANR	4073355	CastTarget	RCore *		4073345	0					
ANR	4073356	Identifier	user		4073345	1					
ANR	4073357	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2057:1:56100:56139	4073345	1	True				
ANR	4073358	IdentifierDecl	* node = ( RConfigNode * ) data		4073345	0					
ANR	4073359	IdentifierDeclType	RConfigNode *		4073345	0					
ANR	4073360	Identifier	node		4073345	1					
ANR	4073361	AssignmentExpression	* node = ( RConfigNode * ) data		4073345	2		=			
ANR	4073362	Identifier	node		4073345	0					
ANR	4073363	CastExpression	( RConfigNode * ) data		4073345	1					
ANR	4073364	CastTarget	RConfigNode *		4073345	0					
ANR	4073365	Identifier	data		4073345	1					
ANR	4073366	IfStatement	if ( node -> value [ 0 ] == '?' )		4073345	2					
ANR	4073367	Condition	node -> value [ 0 ] == '?'	2058:5:56146:56166	4073345	0	True				
ANR	4073368	EqualityExpression	node -> value [ 0 ] == '?'		4073345	0		==			
ANR	4073369	ArrayIndexing	node -> value [ 0 ]		4073345	0					
ANR	4073370	PtrMemberAccess	node -> value		4073345	0					
ANR	4073371	Identifier	node		4073345	0					
ANR	4073372	Identifier	value		4073345	1					
ANR	4073373	PrimaryExpression	0		4073345	1					
ANR	4073374	PrimaryExpression	'?'		4073345	1					
ANR	4073375	CompoundStatement		4:28:101:101	4073345	1					
ANR	4073376	IfStatement	if ( strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?' )		4073345	0					
ANR	4073377	Condition	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'	2059:6:56177:56225	4073345	0	True				
ANR	4073378	AndExpression	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'		4073345	0		&&			
ANR	4073379	RelationalExpression	strlen ( node -> value ) > 1		4073345	0		>			
ANR	4073380	CallExpression	strlen ( node -> value )		4073345	0					
ANR	4073381	Callee	strlen		4073345	0					
ANR	4073382	Identifier	strlen		4073345	0					
ANR	4073383	ArgumentList	node -> value		4073345	1					
ANR	4073384	Argument	node -> value		4073345	0					
ANR	4073385	PtrMemberAccess	node -> value		4073345	0					
ANR	4073386	Identifier	node		4073345	0					
ANR	4073387	Identifier	value		4073345	1					
ANR	4073388	PrimaryExpression	1		4073345	1					
ANR	4073389	EqualityExpression	node -> value [ 1 ] == '?'		4073345	1		==			
ANR	4073390	ArrayIndexing	node -> value [ 1 ]		4073345	0					
ANR	4073391	PtrMemberAccess	node -> value		4073345	0					
ANR	4073392	Identifier	node		4073345	0					
ANR	4073393	Identifier	value		4073345	1					
ANR	4073394	PrimaryExpression	1		4073345	1					
ANR	4073395	PrimaryExpression	'?'		4073345	1					
ANR	4073396	CompoundStatement		5:57:160:160	4073345	1					
ANR	4073397	Statement	r_cons_printf	2060:3:56233:56245	4073345	0	True				
ANR	4073398	Statement	(	2060:17:56247:56247	4073345	1	True				
ANR	4073399	Statement	"""Valid values for scr.strconv:\\n"""	2060:18:56248:56280	4073345	2	True				
ANR	4073400	Statement	"""  asciiesc  convert to ascii with non-ascii chars escaped\\n"""	2061:4:56286:56346	4073345	3	True				
ANR	4073401	Statement	"""  asciidot  convert to ascii with non-ascii chars turned into a dot (except control chars stated below)\\n"""	2062:4:56352:56458	4073345	4	True				
ANR	4073402	Statement	"""\\n"""	2063:4:56464:56467	4073345	5	True				
ANR	4073403	Statement	"""Ascii chars are in the range 0x20-0x7e. Always escaped control chars are alert (\\\\a),\\n"""	2064:4:56473:56561	4073345	6	True				
ANR	4073404	Statement	"""backspace (\\\\b), formfeed (\\\\f), newline (\\\\n), carriage return (\\\\r), horizontal tab (\\\\t)\\n"""	2065:4:56567:56661	4073345	7	True				
ANR	4073405	Statement	"""and vertical tab (\\\\v). Also, double quotes (\\\\\\"") are always escaped, but backslashes (\\\\\\\\)\\n"""	2066:4:56667:56763	4073345	8	True				
ANR	4073406	Statement	"""are only escaped if str.escbslash = true.\\n"""	2067:4:56769:56813	4073345	9	True				
ANR	4073407	Statement	)	2067:49:56814:56814	4073345	10	True				
ANR	4073408	ExpressionStatement		2067:50:56815:56815	4073345	11	True				
ANR	4073409	ElseStatement	else		4073345	0					
ANR	4073410	CompoundStatement		14:9:758:758	4073345	0					
ANR	4073411	ExpressionStatement	print_node_options ( node )	2069:3:56831:56856	4073345	0	True				
ANR	4073412	CallExpression	print_node_options ( node )		4073345	0					
ANR	4073413	Callee	print_node_options		4073345	0					
ANR	4073414	Identifier	print_node_options		4073345	0					
ANR	4073415	ArgumentList	node		4073345	1					
ANR	4073416	Argument	node		4073345	0					
ANR	4073417	Identifier	node		4073345	0					
ANR	4073418	ReturnStatement	return false ;	2071:2:56864:56876	4073345	1	True				
ANR	4073419	Identifier	false		4073345	0					
ANR	4073420	ElseStatement	else		4073345	0					
ANR	4073421	CompoundStatement		18:8:818:818	4073345	0					
ANR	4073422	ExpressionStatement	free ( ( char * ) core -> print -> strconv_mode )	2073:2:56890:56930	4073345	0	True				
ANR	4073423	CallExpression	free ( ( char * ) core -> print -> strconv_mode )		4073345	0					
ANR	4073424	Callee	free		4073345	0					
ANR	4073425	Identifier	free		4073345	0					
ANR	4073426	ArgumentList	( char * ) core -> print -> strconv_mode		4073345	1					
ANR	4073427	Argument	( char * ) core -> print -> strconv_mode		4073345	0					
ANR	4073428	CastExpression	( char * ) core -> print -> strconv_mode		4073345	0					
ANR	4073429	CastTarget	char *		4073345	0					
ANR	4073430	PtrMemberAccess	core -> print -> strconv_mode		4073345	1					
ANR	4073431	PtrMemberAccess	core -> print		4073345	0					
ANR	4073432	Identifier	core		4073345	0					
ANR	4073433	Identifier	print		4073345	1					
ANR	4073434	Identifier	strconv_mode		4073345	1					
ANR	4073435	ExpressionStatement	core -> print -> strconv_mode = strdup ( node -> value )	2074:2:56934:56982	4073345	1	True				
ANR	4073436	AssignmentExpression	core -> print -> strconv_mode = strdup ( node -> value )		4073345	0		=			
ANR	4073437	PtrMemberAccess	core -> print -> strconv_mode		4073345	0					
ANR	4073438	PtrMemberAccess	core -> print		4073345	0					
ANR	4073439	Identifier	core		4073345	0					
ANR	4073440	Identifier	print		4073345	1					
ANR	4073441	Identifier	strconv_mode		4073345	1					
ANR	4073442	CallExpression	strdup ( node -> value )		4073345	1					
ANR	4073443	Callee	strdup		4073345	0					
ANR	4073444	Identifier	strdup		4073345	0					
ANR	4073445	ArgumentList	node -> value		4073345	1					
ANR	4073446	Argument	node -> value		4073345	0					
ANR	4073447	PtrMemberAccess	node -> value		4073345	0					
ANR	4073448	Identifier	node		4073345	0					
ANR	4073449	Identifier	value		4073345	1					
ANR	4073450	ReturnStatement	return true ;	2076:1:56988:56999	4073345	3	True				
ANR	4073451	Identifier	true		4073345	0					
ANR	4073452	ReturnType	static bool		4073345	1					
ANR	4073453	Identifier	cb_scrstrconv		4073345	2					
ANR	4073454	ParameterList	"void * user , void * data"		4073345	3					
ANR	4073455	Parameter	void * user	2055:26:56043:56052	4073345	0	True				
ANR	4073456	ParameterType	void *		4073345	0					
ANR	4073457	Identifier	user		4073345	1					
ANR	4073458	Parameter	void * data	2055:38:56055:56064	4073345	1	True				
ANR	4073459	ParameterType	void *		4073345	0					
ANR	4073460	Identifier	data		4073345	1					
ANR	4073461	CFGEntryNode	ENTRY		4073345		True				
ANR	4073462	CFGExitNode	EXIT		4073345		True				
ANR	4073463	Symbol	* node -> value		4073345						
ANR	4073464	Symbol	core -> print -> strconv_mode		4073345						
ANR	4073465	Symbol	data		4073345						
ANR	4073466	Symbol	false		4073345						
ANR	4073467	Symbol	* core		4073345						
ANR	4073468	Symbol	node -> value		4073345						
ANR	4073469	Symbol	core		4073345						
ANR	4073470	Symbol	node		4073345						
ANR	4073471	Symbol	strlen		4073345						
ANR	4073472	Symbol	* core -> print		4073345						
ANR	4073473	Symbol	* * node		4073345						
ANR	4073474	Symbol	true		4073345						
ANR	4073475	Symbol	* node		4073345						
ANR	4073476	Symbol	strdup		4073345						
ANR	4073477	Symbol	core -> print		4073345						
ANR	4073478	Symbol	user		4073345						
ANR	4073479	Symbol	* * core		4073345						
ANR	4073480	Function	cb_graphformat	2079:0:57004:57220							
ANR	4073481	FunctionDef	"cb_graphformat (void * user , void * data)"		4073480	0					
ANR	4073482	CompoundStatement		2079:51:57055:57220	4073480	0					
ANR	4073483	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2080:1:57058:57098	4073480	0	True				
ANR	4073484	IdentifierDecl	* node = ( RConfigNode * ) data		4073480	0					
ANR	4073485	IdentifierDeclType	RConfigNode *		4073480	0					
ANR	4073486	Identifier	node		4073480	1					
ANR	4073487	AssignmentExpression	* node = ( RConfigNode * ) data		4073480	2		=			
ANR	4073488	Identifier	node		4073480	0					
ANR	4073489	CastExpression	( RConfigNode * ) data		4073480	1					
ANR	4073490	CastTarget	RConfigNode *		4073480	0					
ANR	4073491	Identifier	data		4073480	1					
ANR	4073492	IfStatement	"if ( ! strcmp ( node -> value , ""?"" ) )"		4073480	1					
ANR	4073493	Condition	"! strcmp ( node -> value , ""?"" )"	2081:5:57105:57130	4073480	0	True				
ANR	4073494	UnaryOperationExpression	"! strcmp ( node -> value , ""?"" )"		4073480	0					
ANR	4073495	UnaryOperator	!		4073480	0					
ANR	4073496	CallExpression	"strcmp ( node -> value , ""?"" )"		4073480	1					
ANR	4073497	Callee	strcmp		4073480	0					
ANR	4073498	Identifier	strcmp		4073480	0					
ANR	4073499	ArgumentList	node -> value		4073480	1					
ANR	4073500	Argument	node -> value		4073480	0					
ANR	4073501	PtrMemberAccess	node -> value		4073480	0					
ANR	4073502	Identifier	node		4073480	0					
ANR	4073503	Identifier	value		4073480	1					
ANR	4073504	Argument	"""?"""		4073480	1					
ANR	4073505	PrimaryExpression	"""?"""		4073480	0					
ANR	4073506	CompoundStatement		3:33:77:77	4073480	1					
ANR	4073507	ExpressionStatement	"r_cons_printf ( ""png\\njpg\\npdf\\nps\\nsvg\\njson\\n"" )"	2082:2:57137:57185	4073480	0	True				
ANR	4073508	CallExpression	"r_cons_printf ( ""png\\njpg\\npdf\\nps\\nsvg\\njson\\n"" )"		4073480	0					
ANR	4073509	Callee	r_cons_printf		4073480	0					
ANR	4073510	Identifier	r_cons_printf		4073480	0					
ANR	4073511	ArgumentList	"""png\\njpg\\npdf\\nps\\nsvg\\njson\\n"""		4073480	1					
ANR	4073512	Argument	"""png\\njpg\\npdf\\nps\\nsvg\\njson\\n"""		4073480	0					
ANR	4073513	PrimaryExpression	"""png\\njpg\\npdf\\nps\\nsvg\\njson\\n"""		4073480	0					
ANR	4073514	ReturnStatement	return false ;	2083:2:57189:57201	4073480	1	True				
ANR	4073515	Identifier	false		4073480	0					
ANR	4073516	ReturnStatement	return true ;	2085:1:57207:57218	4073480	2	True				
ANR	4073517	Identifier	true		4073480	0					
ANR	4073518	ReturnType	static bool		4073480	1					
ANR	4073519	Identifier	cb_graphformat		4073480	2					
ANR	4073520	ParameterList	"void * user , void * data"		4073480	3					
ANR	4073521	Parameter	void * user	2079:27:57031:57040	4073480	0	True				
ANR	4073522	ParameterType	void *		4073480	0					
ANR	4073523	Identifier	user		4073480	1					
ANR	4073524	Parameter	void * data	2079:39:57043:57052	4073480	1	True				
ANR	4073525	ParameterType	void *		4073480	0					
ANR	4073526	Identifier	data		4073480	1					
ANR	4073527	CFGEntryNode	ENTRY		4073480		True				
ANR	4073528	CFGExitNode	EXIT		4073480		True				
ANR	4073529	Symbol	strcmp		4073480						
ANR	4073530	Symbol	node		4073480						
ANR	4073531	Symbol	data		4073480						
ANR	4073532	Symbol	false		4073480						
ANR	4073533	Symbol	true		4073480						
ANR	4073534	Symbol	* node		4073480						
ANR	4073535	Symbol	user		4073480						
ANR	4073536	Symbol	node -> value		4073480						
ANR	4073537	Function	cb_exectrap	2089:0:57224:57449							
ANR	4073538	FunctionDef	"cb_exectrap (void * user , void * data)"		4073537	0					
ANR	4073539	CompoundStatement		2089:48:57272:57449	4073537	0					
ANR	4073540	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2090:1:57275:57315	4073537	0	True				
ANR	4073541	IdentifierDecl	* node = ( RConfigNode * ) data		4073537	0					
ANR	4073542	IdentifierDeclType	RConfigNode *		4073537	0					
ANR	4073543	Identifier	node		4073537	1					
ANR	4073544	AssignmentExpression	* node = ( RConfigNode * ) data		4073537	2		=			
ANR	4073545	Identifier	node		4073537	0					
ANR	4073546	CastExpression	( RConfigNode * ) data		4073537	1					
ANR	4073547	CastTarget	RConfigNode *		4073537	0					
ANR	4073548	Identifier	data		4073537	1					
ANR	4073549	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2091:1:57318:57345	4073537	1	True				
ANR	4073550	IdentifierDecl	* core = ( RCore * ) user		4073537	0					
ANR	4073551	IdentifierDeclType	RCore *		4073537	0					
ANR	4073552	Identifier	core		4073537	1					
ANR	4073553	AssignmentExpression	* core = ( RCore * ) user		4073537	2		=			
ANR	4073554	Identifier	core		4073537	0					
ANR	4073555	CastExpression	( RCore * ) user		4073537	1					
ANR	4073556	CastTarget	RCore *		4073537	0					
ANR	4073557	Identifier	user		4073537	1					
ANR	4073558	IfStatement	if ( core -> anal && core -> anal -> esil )		4073537	2					
ANR	4073559	Condition	core -> anal && core -> anal -> esil	2092:5:57352:57381	4073537	0	True				
ANR	4073560	AndExpression	core -> anal && core -> anal -> esil		4073537	0		&&			
ANR	4073561	PtrMemberAccess	core -> anal		4073537	0					
ANR	4073562	Identifier	core		4073537	0					
ANR	4073563	Identifier	anal		4073537	1					
ANR	4073564	PtrMemberAccess	core -> anal -> esil		4073537	1					
ANR	4073565	PtrMemberAccess	core -> anal		4073537	0					
ANR	4073566	Identifier	core		4073537	0					
ANR	4073567	Identifier	anal		4073537	1					
ANR	4073568	Identifier	esil		4073537	1					
ANR	4073569	CompoundStatement		4:37:111:111	4073537	1					
ANR	4073570	ExpressionStatement	core -> anal -> esil -> exectrap = node -> i_value	2093:2:57388:57430	4073537	0	True				
ANR	4073571	AssignmentExpression	core -> anal -> esil -> exectrap = node -> i_value		4073537	0		=			
ANR	4073572	PtrMemberAccess	core -> anal -> esil -> exectrap		4073537	0					
ANR	4073573	PtrMemberAccess	core -> anal -> esil		4073537	0					
ANR	4073574	PtrMemberAccess	core -> anal		4073537	0					
ANR	4073575	Identifier	core		4073537	0					
ANR	4073576	Identifier	anal		4073537	1					
ANR	4073577	Identifier	esil		4073537	1					
ANR	4073578	Identifier	exectrap		4073537	1					
ANR	4073579	PtrMemberAccess	node -> i_value		4073537	1					
ANR	4073580	Identifier	node		4073537	0					
ANR	4073581	Identifier	i_value		4073537	1					
ANR	4073582	ReturnStatement	return true ;	2095:1:57436:57447	4073537	3	True				
ANR	4073583	Identifier	true		4073537	0					
ANR	4073584	ReturnType	static bool		4073537	1					
ANR	4073585	Identifier	cb_exectrap		4073537	2					
ANR	4073586	ParameterList	"void * user , void * data"		4073537	3					
ANR	4073587	Parameter	void * user	2089:24:57248:57257	4073537	0	True				
ANR	4073588	ParameterType	void *		4073537	0					
ANR	4073589	Identifier	user		4073537	1					
ANR	4073590	Parameter	void * data	2089:36:57260:57269	4073537	1	True				
ANR	4073591	ParameterType	void *		4073537	0					
ANR	4073592	Identifier	data		4073537	1					
ANR	4073593	CFGEntryNode	ENTRY		4073537		True				
ANR	4073594	CFGExitNode	EXIT		4073537		True				
ANR	4073595	Symbol	data		4073537						
ANR	4073596	Symbol	* core		4073537						
ANR	4073597	Symbol	core -> anal		4073537						
ANR	4073598	Symbol	node -> i_value		4073537						
ANR	4073599	Symbol	node		4073537						
ANR	4073600	Symbol	core		4073537						
ANR	4073601	Symbol	* * * core		4073537						
ANR	4073602	Symbol	* core -> anal		4073537						
ANR	4073603	Symbol	core -> anal -> esil -> exectrap		4073537						
ANR	4073604	Symbol	* core -> anal -> esil		4073537						
ANR	4073605	Symbol	true		4073537						
ANR	4073606	Symbol	* * core -> anal		4073537						
ANR	4073607	Symbol	* node		4073537						
ANR	4073608	Symbol	core -> anal -> esil		4073537						
ANR	4073609	Symbol	user		4073537						
ANR	4073610	Symbol	* * core		4073537						
ANR	4073611	Function	cb_iotrap	2098:0:57452:57673							
ANR	4073612	FunctionDef	"cb_iotrap (void * user , void * data)"		4073611	0					
ANR	4073613	CompoundStatement		2098:46:57498:57673	4073611	0					
ANR	4073614	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2099:1:57501:57541	4073611	0	True				
ANR	4073615	IdentifierDecl	* node = ( RConfigNode * ) data		4073611	0					
ANR	4073616	IdentifierDeclType	RConfigNode *		4073611	0					
ANR	4073617	Identifier	node		4073611	1					
ANR	4073618	AssignmentExpression	* node = ( RConfigNode * ) data		4073611	2		=			
ANR	4073619	Identifier	node		4073611	0					
ANR	4073620	CastExpression	( RConfigNode * ) data		4073611	1					
ANR	4073621	CastTarget	RConfigNode *		4073611	0					
ANR	4073622	Identifier	data		4073611	1					
ANR	4073623	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2100:1:57544:57571	4073611	1	True				
ANR	4073624	IdentifierDecl	* core = ( RCore * ) user		4073611	0					
ANR	4073625	IdentifierDeclType	RCore *		4073611	0					
ANR	4073626	Identifier	core		4073611	1					
ANR	4073627	AssignmentExpression	* core = ( RCore * ) user		4073611	2		=			
ANR	4073628	Identifier	core		4073611	0					
ANR	4073629	CastExpression	( RCore * ) user		4073611	1					
ANR	4073630	CastTarget	RCore *		4073611	0					
ANR	4073631	Identifier	user		4073611	1					
ANR	4073632	IfStatement	if ( core -> anal && core -> anal -> esil )		4073611	2					
ANR	4073633	Condition	core -> anal && core -> anal -> esil	2101:5:57578:57607	4073611	0	True				
ANR	4073634	AndExpression	core -> anal && core -> anal -> esil		4073611	0		&&			
ANR	4073635	PtrMemberAccess	core -> anal		4073611	0					
ANR	4073636	Identifier	core		4073611	0					
ANR	4073637	Identifier	anal		4073611	1					
ANR	4073638	PtrMemberAccess	core -> anal -> esil		4073611	1					
ANR	4073639	PtrMemberAccess	core -> anal		4073611	0					
ANR	4073640	Identifier	core		4073611	0					
ANR	4073641	Identifier	anal		4073611	1					
ANR	4073642	Identifier	esil		4073611	1					
ANR	4073643	CompoundStatement		4:37:111:111	4073611	1					
ANR	4073644	ExpressionStatement	core -> anal -> esil -> iotrap = node -> i_value	2102:2:57614:57654	4073611	0	True				
ANR	4073645	AssignmentExpression	core -> anal -> esil -> iotrap = node -> i_value		4073611	0		=			
ANR	4073646	PtrMemberAccess	core -> anal -> esil -> iotrap		4073611	0					
ANR	4073647	PtrMemberAccess	core -> anal -> esil		4073611	0					
ANR	4073648	PtrMemberAccess	core -> anal		4073611	0					
ANR	4073649	Identifier	core		4073611	0					
ANR	4073650	Identifier	anal		4073611	1					
ANR	4073651	Identifier	esil		4073611	1					
ANR	4073652	Identifier	iotrap		4073611	1					
ANR	4073653	PtrMemberAccess	node -> i_value		4073611	1					
ANR	4073654	Identifier	node		4073611	0					
ANR	4073655	Identifier	i_value		4073611	1					
ANR	4073656	ReturnStatement	return true ;	2104:1:57660:57671	4073611	3	True				
ANR	4073657	Identifier	true		4073611	0					
ANR	4073658	ReturnType	static bool		4073611	1					
ANR	4073659	Identifier	cb_iotrap		4073611	2					
ANR	4073660	ParameterList	"void * user , void * data"		4073611	3					
ANR	4073661	Parameter	void * user	2098:22:57474:57483	4073611	0	True				
ANR	4073662	ParameterType	void *		4073611	0					
ANR	4073663	Identifier	user		4073611	1					
ANR	4073664	Parameter	void * data	2098:34:57486:57495	4073611	1	True				
ANR	4073665	ParameterType	void *		4073611	0					
ANR	4073666	Identifier	data		4073611	1					
ANR	4073667	CFGEntryNode	ENTRY		4073611		True				
ANR	4073668	CFGExitNode	EXIT		4073611		True				
ANR	4073669	Symbol	data		4073611						
ANR	4073670	Symbol	* core		4073611						
ANR	4073671	Symbol	core -> anal -> esil -> iotrap		4073611						
ANR	4073672	Symbol	core -> anal		4073611						
ANR	4073673	Symbol	node -> i_value		4073611						
ANR	4073674	Symbol	node		4073611						
ANR	4073675	Symbol	core		4073611						
ANR	4073676	Symbol	* * * core		4073611						
ANR	4073677	Symbol	* core -> anal		4073611						
ANR	4073678	Symbol	* core -> anal -> esil		4073611						
ANR	4073679	Symbol	true		4073611						
ANR	4073680	Symbol	* * core -> anal		4073611						
ANR	4073681	Symbol	* node		4073611						
ANR	4073682	Symbol	core -> anal -> esil		4073611						
ANR	4073683	Symbol	user		4073611						
ANR	4073684	Symbol	* * core		4073611						
ANR	4073685	Function	cb_scr_bgfill	2107:0:57676:57999							
ANR	4073686	FunctionDef	"cb_scr_bgfill (void * user , void * data)"		4073685	0					
ANR	4073687	CompoundStatement		2107:50:57726:57999	4073685	0					
ANR	4073688	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2108:1:57729:57756	4073685	0	True				
ANR	4073689	IdentifierDecl	* core = ( RCore * ) user		4073685	0					
ANR	4073690	IdentifierDeclType	RCore *		4073685	0					
ANR	4073691	Identifier	core		4073685	1					
ANR	4073692	AssignmentExpression	* core = ( RCore * ) user		4073685	2		=			
ANR	4073693	Identifier	core		4073685	0					
ANR	4073694	CastExpression	( RCore * ) user		4073685	1					
ANR	4073695	CastTarget	RCore *		4073685	0					
ANR	4073696	Identifier	user		4073685	1					
ANR	4073697	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2109:1:57759:57799	4073685	1	True				
ANR	4073698	IdentifierDecl	* node = ( RConfigNode * ) data		4073685	0					
ANR	4073699	IdentifierDeclType	RConfigNode *		4073685	0					
ANR	4073700	Identifier	node		4073685	1					
ANR	4073701	AssignmentExpression	* node = ( RConfigNode * ) data		4073685	2		=			
ANR	4073702	Identifier	node		4073685	0					
ANR	4073703	CastExpression	( RConfigNode * ) data		4073685	1					
ANR	4073704	CastTarget	RConfigNode *		4073685	0					
ANR	4073705	Identifier	data		4073685	1					
ANR	4073706	IfStatement	if ( node -> i_value )		4073685	2					
ANR	4073707	Condition	node -> i_value	2110:5:57806:57818	4073685	0	True				
ANR	4073708	PtrMemberAccess	node -> i_value		4073685	0					
ANR	4073709	Identifier	node		4073685	0					
ANR	4073710	Identifier	i_value		4073685	1					
ANR	4073711	CompoundStatement		4:20:94:94	4073685	1					
ANR	4073712	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_BGFILL	2111:2:57825:57867	4073685	0	True				
ANR	4073713	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_BGFILL		4073685	0		|=			
ANR	4073714	PtrMemberAccess	core -> print -> flags		4073685	0					
ANR	4073715	PtrMemberAccess	core -> print		4073685	0					
ANR	4073716	Identifier	core		4073685	0					
ANR	4073717	Identifier	print		4073685	1					
ANR	4073718	Identifier	flags		4073685	1					
ANR	4073719	Identifier	R_PRINT_FLAGS_BGFILL		4073685	1					
ANR	4073720	ElseStatement	else		4073685	0					
ANR	4073721	CompoundStatement		6:8:150:150	4073685	0					
ANR	4073722	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_BGFILL )	2113:2:57881:57926	4073685	0	True				
ANR	4073723	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_BGFILL )		4073685	0		&=			
ANR	4073724	PtrMemberAccess	core -> print -> flags		4073685	0					
ANR	4073725	PtrMemberAccess	core -> print		4073685	0					
ANR	4073726	Identifier	core		4073685	0					
ANR	4073727	Identifier	print		4073685	1					
ANR	4073728	Identifier	flags		4073685	1					
ANR	4073729	Identifier	~R_PRINT_FLAGS_BGFILL		4073685	1					
ANR	4073730	ExpressionStatement	"r_print_set_flags ( core -> print , core -> print -> flags )"	2115:1:57932:57983	4073685	3	True				
ANR	4073731	CallExpression	"r_print_set_flags ( core -> print , core -> print -> flags )"		4073685	0					
ANR	4073732	Callee	r_print_set_flags		4073685	0					
ANR	4073733	Identifier	r_print_set_flags		4073685	0					
ANR	4073734	ArgumentList	core -> print		4073685	1					
ANR	4073735	Argument	core -> print		4073685	0					
ANR	4073736	PtrMemberAccess	core -> print		4073685	0					
ANR	4073737	Identifier	core		4073685	0					
ANR	4073738	Identifier	print		4073685	1					
ANR	4073739	Argument	core -> print -> flags		4073685	1					
ANR	4073740	PtrMemberAccess	core -> print -> flags		4073685	0					
ANR	4073741	PtrMemberAccess	core -> print		4073685	0					
ANR	4073742	Identifier	core		4073685	0					
ANR	4073743	Identifier	print		4073685	1					
ANR	4073744	Identifier	flags		4073685	1					
ANR	4073745	ReturnStatement	return true ;	2116:1:57986:57997	4073685	4	True				
ANR	4073746	Identifier	true		4073685	0					
ANR	4073747	ReturnType	static bool		4073685	1					
ANR	4073748	Identifier	cb_scr_bgfill		4073685	2					
ANR	4073749	ParameterList	"void * user , void * data"		4073685	3					
ANR	4073750	Parameter	void * user	2107:26:57702:57711	4073685	0	True				
ANR	4073751	ParameterType	void *		4073685	0					
ANR	4073752	Identifier	user		4073685	1					
ANR	4073753	Parameter	void * data	2107:38:57714:57723	4073685	1	True				
ANR	4073754	ParameterType	void *		4073685	0					
ANR	4073755	Identifier	data		4073685	1					
ANR	4073756	CFGEntryNode	ENTRY		4073685		True				
ANR	4073757	CFGExitNode	EXIT		4073685		True				
ANR	4073758	Symbol	R_PRINT_FLAGS_BGFILL		4073685						
ANR	4073759	Symbol	data		4073685						
ANR	4073760	Symbol	* core		4073685						
ANR	4073761	Symbol	node -> i_value		4073685						
ANR	4073762	Symbol	core		4073685						
ANR	4073763	Symbol	node		4073685						
ANR	4073764	Symbol	* core -> print		4073685						
ANR	4073765	Symbol	~R_PRINT_FLAGS_BGFILL		4073685						
ANR	4073766	Symbol	true		4073685						
ANR	4073767	Symbol	* node		4073685						
ANR	4073768	Symbol	core -> print		4073685						
ANR	4073769	Symbol	user		4073685						
ANR	4073770	Symbol	* * core		4073685						
ANR	4073771	Symbol	core -> print -> flags		4073685						
ANR	4073772	Function	cb_scrint	2119:0:58002:58235							
ANR	4073773	FunctionDef	"cb_scrint (void * user , void * data)"		4073772	0					
ANR	4073774	CompoundStatement		2119:46:58048:58235	4073772	0					
ANR	4073775	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2120:1:58051:58091	4073772	0	True				
ANR	4073776	IdentifierDecl	* node = ( RConfigNode * ) data		4073772	0					
ANR	4073777	IdentifierDeclType	RConfigNode *		4073772	0					
ANR	4073778	Identifier	node		4073772	1					
ANR	4073779	AssignmentExpression	* node = ( RConfigNode * ) data		4073772	2		=			
ANR	4073780	Identifier	node		4073772	0					
ANR	4073781	CastExpression	( RConfigNode * ) data		4073772	1					
ANR	4073782	CastTarget	RConfigNode *		4073772	0					
ANR	4073783	Identifier	data		4073772	1					
ANR	4073784	IfStatement	if ( node -> i_value && r_sandbox_enable ( 0 ) )		4073772	1					
ANR	4073785	Condition	node -> i_value && r_sandbox_enable ( 0 )	2121:5:58098:58134	4073772	0	True				
ANR	4073786	AndExpression	node -> i_value && r_sandbox_enable ( 0 )		4073772	0		&&			
ANR	4073787	PtrMemberAccess	node -> i_value		4073772	0					
ANR	4073788	Identifier	node		4073772	0					
ANR	4073789	Identifier	i_value		4073772	1					
ANR	4073790	CallExpression	r_sandbox_enable ( 0 )		4073772	1					
ANR	4073791	Callee	r_sandbox_enable		4073772	0					
ANR	4073792	Identifier	r_sandbox_enable		4073772	0					
ANR	4073793	ArgumentList	0		4073772	1					
ANR	4073794	Argument	0		4073772	0					
ANR	4073795	PrimaryExpression	0		4073772	0					
ANR	4073796	CompoundStatement		3:44:88:88	4073772	1					
ANR	4073797	ReturnStatement	return false ;	2122:2:58141:58153	4073772	0	True				
ANR	4073798	Identifier	false		4073772	0					
ANR	4073799	ExpressionStatement	r_cons_singleton ( ) -> context -> is_interactive = node -> i_value	2124:1:58159:58219	4073772	2	True				
ANR	4073800	AssignmentExpression	r_cons_singleton ( ) -> context -> is_interactive = node -> i_value		4073772	0		=			
ANR	4073801	PtrMemberAccess	r_cons_singleton ( ) -> context -> is_interactive		4073772	0					
ANR	4073802	PtrMemberAccess	r_cons_singleton ( ) -> context		4073772	0					
ANR	4073803	CallExpression	r_cons_singleton ( )		4073772	0					
ANR	4073804	Callee	r_cons_singleton		4073772	0					
ANR	4073805	Identifier	r_cons_singleton		4073772	0					
ANR	4073806	ArgumentList			4073772	1					
ANR	4073807	Identifier	context		4073772	1					
ANR	4073808	Identifier	is_interactive		4073772	1					
ANR	4073809	PtrMemberAccess	node -> i_value		4073772	1					
ANR	4073810	Identifier	node		4073772	0					
ANR	4073811	Identifier	i_value		4073772	1					
ANR	4073812	ReturnStatement	return true ;	2125:1:58222:58233	4073772	3	True				
ANR	4073813	Identifier	true		4073772	0					
ANR	4073814	ReturnType	static bool		4073772	1					
ANR	4073815	Identifier	cb_scrint		4073772	2					
ANR	4073816	ParameterList	"void * user , void * data"		4073772	3					
ANR	4073817	Parameter	void * user	2119:22:58024:58033	4073772	0	True				
ANR	4073818	ParameterType	void *		4073772	0					
ANR	4073819	Identifier	user		4073772	1					
ANR	4073820	Parameter	void * data	2119:34:58036:58045	4073772	1	True				
ANR	4073821	ParameterType	void *		4073772	0					
ANR	4073822	Identifier	data		4073772	1					
ANR	4073823	CFGEntryNode	ENTRY		4073772		True				
ANR	4073824	CFGExitNode	EXIT		4073772		True				
ANR	4073825	Symbol	data		4073772						
ANR	4073826	Symbol	r_sandbox_enable		4073772						
ANR	4073827	Symbol	false		4073772						
ANR	4073828	Symbol	* r_cons_singleton ( ) -> context		4073772						
ANR	4073829	Symbol	* * r_cons_singleton		4073772						
ANR	4073830	Symbol	node -> i_value		4073772						
ANR	4073831	Symbol	node		4073772						
ANR	4073832	Symbol	r_cons_singleton ( ) -> context -> is_interactive		4073772						
ANR	4073833	Symbol	true		4073772						
ANR	4073834	Symbol	r_cons_singleton		4073772						
ANR	4073835	Symbol	* node		4073772						
ANR	4073836	Symbol	user		4073772						
ANR	4073837	Symbol	r_cons_singleton ( ) -> context		4073772						
ANR	4073838	Symbol	* r_cons_singleton		4073772						
ANR	4073839	Function	cb_scrnkey	2128:0:58238:58452							
ANR	4073840	FunctionDef	"cb_scrnkey (void * user , void * data)"		4073839	0					
ANR	4073841	CompoundStatement		2128:47:58285:58452	4073839	0					
ANR	4073842	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2129:1:58288:58327	4073839	0	True				
ANR	4073843	IdentifierDecl	* node = ( RConfigNode * ) data		4073839	0					
ANR	4073844	IdentifierDeclType	RConfigNode *		4073839	0					
ANR	4073845	Identifier	node		4073839	1					
ANR	4073846	AssignmentExpression	* node = ( RConfigNode * ) data		4073839	2		=			
ANR	4073847	Identifier	node		4073839	0					
ANR	4073848	CastExpression	( RConfigNode * ) data		4073839	1					
ANR	4073849	CastTarget	RConfigNode *		4073839	0					
ANR	4073850	Identifier	data		4073839	1					
ANR	4073851	IfStatement	"if ( ! strcmp ( node -> value , ""help"" ) || * node -> value == '?' )"		4073839	1					
ANR	4073852	Condition	"! strcmp ( node -> value , ""help"" ) || * node -> value == '?'"	2130:5:58334:58385	4073839	0	True				
ANR	4073853	OrExpression	"! strcmp ( node -> value , ""help"" ) || * node -> value == '?'"		4073839	0		||			
ANR	4073854	UnaryOperationExpression	"! strcmp ( node -> value , ""help"" )"		4073839	0					
ANR	4073855	UnaryOperator	!		4073839	0					
ANR	4073856	CallExpression	"strcmp ( node -> value , ""help"" )"		4073839	1					
ANR	4073857	Callee	strcmp		4073839	0					
ANR	4073858	Identifier	strcmp		4073839	0					
ANR	4073859	ArgumentList	node -> value		4073839	1					
ANR	4073860	Argument	node -> value		4073839	0					
ANR	4073861	PtrMemberAccess	node -> value		4073839	0					
ANR	4073862	Identifier	node		4073839	0					
ANR	4073863	Identifier	value		4073839	1					
ANR	4073864	Argument	"""help"""		4073839	1					
ANR	4073865	PrimaryExpression	"""help"""		4073839	0					
ANR	4073866	EqualityExpression	* node -> value == '?'		4073839	1		==			
ANR	4073867	UnaryOperationExpression	* node -> value		4073839	0					
ANR	4073868	UnaryOperator	*		4073839	0					
ANR	4073869	PtrMemberAccess	node -> value		4073839	1					
ANR	4073870	Identifier	node		4073839	0					
ANR	4073871	Identifier	value		4073839	1					
ANR	4073872	PrimaryExpression	'?'		4073839	1					
ANR	4073873	CompoundStatement		3:59:102:102	4073839	1					
ANR	4073874	ExpressionStatement	print_node_options ( node )	2131:2:58392:58417	4073839	0	True				
ANR	4073875	CallExpression	print_node_options ( node )		4073839	0					
ANR	4073876	Callee	print_node_options		4073839	0					
ANR	4073877	Identifier	print_node_options		4073839	0					
ANR	4073878	ArgumentList	node		4073839	1					
ANR	4073879	Argument	node		4073839	0					
ANR	4073880	Identifier	node		4073839	0					
ANR	4073881	ReturnStatement	return false ;	2132:2:58421:58433	4073839	1	True				
ANR	4073882	Identifier	false		4073839	0					
ANR	4073883	ReturnStatement	return true ;	2134:1:58439:58450	4073839	2	True				
ANR	4073884	Identifier	true		4073839	0					
ANR	4073885	ReturnType	static bool		4073839	1					
ANR	4073886	Identifier	cb_scrnkey		4073839	2					
ANR	4073887	ParameterList	"void * user , void * data"		4073839	3					
ANR	4073888	Parameter	void * user	2128:23:58261:58270	4073839	0	True				
ANR	4073889	ParameterType	void *		4073839	0					
ANR	4073890	Identifier	user		4073839	1					
ANR	4073891	Parameter	void * data	2128:35:58273:58282	4073839	1	True				
ANR	4073892	ParameterType	void *		4073839	0					
ANR	4073893	Identifier	data		4073839	1					
ANR	4073894	CFGEntryNode	ENTRY		4073839		True				
ANR	4073895	CFGExitNode	EXIT		4073839		True				
ANR	4073896	Symbol	strcmp		4073839						
ANR	4073897	Symbol	node		4073839						
ANR	4073898	Symbol	* node -> value		4073839						
ANR	4073899	Symbol	data		4073839						
ANR	4073900	Symbol	* * node		4073839						
ANR	4073901	Symbol	false		4073839						
ANR	4073902	Symbol	true		4073839						
ANR	4073903	Symbol	* node		4073839						
ANR	4073904	Symbol	user		4073839						
ANR	4073905	Symbol	node -> value		4073839						
ANR	4073906	Function	cb_scr_histblock	2137:0:58455:58639							
ANR	4073907	FunctionDef	"cb_scr_histblock (void * user , void * data)"		4073906	0					
ANR	4073908	CompoundStatement		2137:53:58508:58639	4073906	0					
ANR	4073909	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2138:1:58511:58539	4073906	0	True				
ANR	4073910	IdentifierDecl	* core = ( RCore * ) user		4073906	0					
ANR	4073911	IdentifierDeclType	RCore *		4073906	0					
ANR	4073912	Identifier	core		4073906	1					
ANR	4073913	AssignmentExpression	* core = ( RCore * ) user		4073906	2		=			
ANR	4073914	Identifier	core		4073906	0					
ANR	4073915	CastExpression	( RCore * ) user		4073906	1					
ANR	4073916	CastTarget	RCore *		4073906	0					
ANR	4073917	Identifier	user		4073906	1					
ANR	4073918	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2139:1:58542:58582	4073906	1	True				
ANR	4073919	IdentifierDecl	* node = ( RConfigNode * ) data		4073906	0					
ANR	4073920	IdentifierDeclType	RConfigNode *		4073906	0					
ANR	4073921	Identifier	node		4073906	1					
ANR	4073922	AssignmentExpression	* node = ( RConfigNode * ) data		4073906	2		=			
ANR	4073923	Identifier	node		4073906	0					
ANR	4073924	CastExpression	( RConfigNode * ) data		4073906	1					
ANR	4073925	CastTarget	RConfigNode *		4073906	0					
ANR	4073926	Identifier	data		4073906	1					
ANR	4073927	ExpressionStatement	core -> print -> histblock = node -> i_value	2140:1:58585:58623	4073906	2	True				
ANR	4073928	AssignmentExpression	core -> print -> histblock = node -> i_value		4073906	0		=			
ANR	4073929	PtrMemberAccess	core -> print -> histblock		4073906	0					
ANR	4073930	PtrMemberAccess	core -> print		4073906	0					
ANR	4073931	Identifier	core		4073906	0					
ANR	4073932	Identifier	print		4073906	1					
ANR	4073933	Identifier	histblock		4073906	1					
ANR	4073934	PtrMemberAccess	node -> i_value		4073906	1					
ANR	4073935	Identifier	node		4073906	0					
ANR	4073936	Identifier	i_value		4073906	1					
ANR	4073937	ReturnStatement	return true ;	2141:1:58626:58637	4073906	3	True				
ANR	4073938	Identifier	true		4073906	0					
ANR	4073939	ReturnType	static bool		4073906	1					
ANR	4073940	Identifier	cb_scr_histblock		4073906	2					
ANR	4073941	ParameterList	"void * user , void * data"		4073906	3					
ANR	4073942	Parameter	void * user	2137:29:58484:58493	4073906	0	True				
ANR	4073943	ParameterType	void *		4073906	0					
ANR	4073944	Identifier	user		4073906	1					
ANR	4073945	Parameter	void * data	2137:41:58496:58505	4073906	1	True				
ANR	4073946	ParameterType	void *		4073906	0					
ANR	4073947	Identifier	data		4073906	1					
ANR	4073948	CFGEntryNode	ENTRY		4073906		True				
ANR	4073949	CFGExitNode	EXIT		4073906		True				
ANR	4073950	Symbol	core		4073906						
ANR	4073951	Symbol	node		4073906						
ANR	4073952	Symbol	* core -> print		4073906						
ANR	4073953	Symbol	data		4073906						
ANR	4073954	Symbol	* core		4073906						
ANR	4073955	Symbol	true		4073906						
ANR	4073956	Symbol	* node		4073906						
ANR	4073957	Symbol	core -> print -> histblock		4073906						
ANR	4073958	Symbol	core -> print		4073906						
ANR	4073959	Symbol	user		4073906						
ANR	4073960	Symbol	* * core		4073906						
ANR	4073961	Symbol	node -> i_value		4073906						
ANR	4073962	Function	cb_scrprompt	2144:0:58642:58866							
ANR	4073963	FunctionDef	"cb_scrprompt (void * user , void * data)"		4073962	0					
ANR	4073964	CompoundStatement		2144:49:58691:58866	4073962	0					
ANR	4073965	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2145:1:58694:58721	4073962	0	True				
ANR	4073966	IdentifierDecl	* core = ( RCore * ) user		4073962	0					
ANR	4073967	IdentifierDeclType	RCore *		4073962	0					
ANR	4073968	Identifier	core		4073962	1					
ANR	4073969	AssignmentExpression	* core = ( RCore * ) user		4073962	2		=			
ANR	4073970	Identifier	core		4073962	0					
ANR	4073971	CastExpression	( RCore * ) user		4073962	1					
ANR	4073972	CastTarget	RCore *		4073962	0					
ANR	4073973	Identifier	user		4073962	1					
ANR	4073974	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2146:1:58724:58764	4073962	1	True				
ANR	4073975	IdentifierDecl	* node = ( RConfigNode * ) data		4073962	0					
ANR	4073976	IdentifierDeclType	RConfigNode *		4073962	0					
ANR	4073977	Identifier	node		4073962	1					
ANR	4073978	AssignmentExpression	* node = ( RConfigNode * ) data		4073962	2		=			
ANR	4073979	Identifier	node		4073962	0					
ANR	4073980	CastExpression	( RConfigNode * ) data		4073962	1					
ANR	4073981	CastTarget	RConfigNode *		4073962	0					
ANR	4073982	Identifier	data		4073962	1					
ANR	4073983	ExpressionStatement	core -> print -> scr_prompt = node -> i_value	2147:1:58767:58806	4073962	2	True				
ANR	4073984	AssignmentExpression	core -> print -> scr_prompt = node -> i_value		4073962	0		=			
ANR	4073985	PtrMemberAccess	core -> print -> scr_prompt		4073962	0					
ANR	4073986	PtrMemberAccess	core -> print		4073962	0					
ANR	4073987	Identifier	core		4073962	0					
ANR	4073988	Identifier	print		4073962	1					
ANR	4073989	Identifier	scr_prompt		4073962	1					
ANR	4073990	PtrMemberAccess	node -> i_value		4073962	1					
ANR	4073991	Identifier	node		4073962	0					
ANR	4073992	Identifier	i_value		4073962	1					
ANR	4073993	ExpressionStatement	r_line_singleton ( ) -> echo = node -> i_value	2148:1:58809:58850	4073962	3	True				
ANR	4073994	AssignmentExpression	r_line_singleton ( ) -> echo = node -> i_value		4073962	0		=			
ANR	4073995	PtrMemberAccess	r_line_singleton ( ) -> echo		4073962	0					
ANR	4073996	CallExpression	r_line_singleton ( )		4073962	0					
ANR	4073997	Callee	r_line_singleton		4073962	0					
ANR	4073998	Identifier	r_line_singleton		4073962	0					
ANR	4073999	ArgumentList			4073962	1					
ANR	4074000	Identifier	echo		4073962	1					
ANR	4074001	PtrMemberAccess	node -> i_value		4073962	1					
ANR	4074002	Identifier	node		4073962	0					
ANR	4074003	Identifier	i_value		4073962	1					
ANR	4074004	ReturnStatement	return true ;	2149:1:58853:58864	4073962	4	True				
ANR	4074005	Identifier	true		4073962	0					
ANR	4074006	ReturnType	static bool		4073962	1					
ANR	4074007	Identifier	cb_scrprompt		4073962	2					
ANR	4074008	ParameterList	"void * user , void * data"		4073962	3					
ANR	4074009	Parameter	void * user	2144:25:58667:58676	4073962	0	True				
ANR	4074010	ParameterType	void *		4073962	0					
ANR	4074011	Identifier	user		4073962	1					
ANR	4074012	Parameter	void * data	2144:37:58679:58688	4073962	1	True				
ANR	4074013	ParameterType	void *		4073962	0					
ANR	4074014	Identifier	data		4073962	1					
ANR	4074015	CFGEntryNode	ENTRY		4073962		True				
ANR	4074016	CFGExitNode	EXIT		4073962		True				
ANR	4074017	Symbol	r_line_singleton ( ) -> echo		4073962						
ANR	4074018	Symbol	data		4073962						
ANR	4074019	Symbol	r_line_singleton		4073962						
ANR	4074020	Symbol	* core		4073962						
ANR	4074021	Symbol	node -> i_value		4073962						
ANR	4074022	Symbol	core		4073962						
ANR	4074023	Symbol	node		4073962						
ANR	4074024	Symbol	* core -> print		4073962						
ANR	4074025	Symbol	* r_line_singleton		4073962						
ANR	4074026	Symbol	core -> print -> scr_prompt		4073962						
ANR	4074027	Symbol	true		4073962						
ANR	4074028	Symbol	* node		4073962						
ANR	4074029	Symbol	core -> print		4073962						
ANR	4074030	Symbol	user		4073962						
ANR	4074031	Symbol	* * core		4073962						
ANR	4074032	Function	cb_scrrows	2152:0:58869:59043							
ANR	4074033	FunctionDef	"cb_scrrows (void * user , void * data)"		4074032	0					
ANR	4074034	CompoundStatement		2152:47:58916:59043	4074032	0					
ANR	4074035	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2153:1:58919:58958	4074032	0	True				
ANR	4074036	IdentifierDecl	* node = ( RConfigNode * ) data		4074032	0					
ANR	4074037	IdentifierDeclType	RConfigNode *		4074032	0					
ANR	4074038	Identifier	node		4074032	1					
ANR	4074039	AssignmentExpression	* node = ( RConfigNode * ) data		4074032	2		=			
ANR	4074040	Identifier	node		4074032	0					
ANR	4074041	CastExpression	( RConfigNode * ) data		4074032	1					
ANR	4074042	CastTarget	RConfigNode *		4074032	0					
ANR	4074043	Identifier	data		4074032	1					
ANR	4074044	IdentifierDeclStatement	int n = atoi ( node -> value ) ;	2154:1:58961:58987	4074032	1	True				
ANR	4074045	IdentifierDecl	n = atoi ( node -> value )		4074032	0					
ANR	4074046	IdentifierDeclType	int		4074032	0					
ANR	4074047	Identifier	n		4074032	1					
ANR	4074048	AssignmentExpression	n = atoi ( node -> value )		4074032	2		=			
ANR	4074049	Identifier	n		4074032	0					
ANR	4074050	CallExpression	atoi ( node -> value )		4074032	1					
ANR	4074051	Callee	atoi		4074032	0					
ANR	4074052	Identifier	atoi		4074032	0					
ANR	4074053	ArgumentList	node -> value		4074032	1					
ANR	4074054	Argument	node -> value		4074032	0					
ANR	4074055	PtrMemberAccess	node -> value		4074032	0					
ANR	4074056	Identifier	node		4074032	0					
ANR	4074057	Identifier	value		4074032	1					
ANR	4074058	ExpressionStatement	( ( RCore * ) user ) -> cons -> force_rows = n	2155:1:58990:59027	4074032	2	True				
ANR	4074059	AssignmentExpression	( ( RCore * ) user ) -> cons -> force_rows = n		4074032	0		=			
ANR	4074060	PtrMemberAccess	( ( RCore * ) user ) -> cons -> force_rows		4074032	0					
ANR	4074061	PtrMemberAccess	( ( RCore * ) user ) -> cons		4074032	0					
ANR	4074062	CastExpression	( RCore * ) user		4074032	0					
ANR	4074063	CastTarget	RCore *		4074032	0					
ANR	4074064	Identifier	user		4074032	1					
ANR	4074065	Identifier	cons		4074032	1					
ANR	4074066	Identifier	force_rows		4074032	1					
ANR	4074067	Identifier	n		4074032	1					
ANR	4074068	ReturnStatement	return true ;	2156:1:59030:59041	4074032	3	True				
ANR	4074069	Identifier	true		4074032	0					
ANR	4074070	ReturnType	static bool		4074032	1					
ANR	4074071	Identifier	cb_scrrows		4074032	2					
ANR	4074072	ParameterList	"void * user , void * data"		4074032	3					
ANR	4074073	Parameter	void * user	2152:23:58892:58901	4074032	0	True				
ANR	4074074	ParameterType	void *		4074032	0					
ANR	4074075	Identifier	user		4074032	1					
ANR	4074076	Parameter	void * data	2152:35:58904:58913	4074032	1	True				
ANR	4074077	ParameterType	void *		4074032	0					
ANR	4074078	Identifier	data		4074032	1					
ANR	4074079	CFGEntryNode	ENTRY		4074032		True				
ANR	4074080	CFGExitNode	EXIT		4074032		True				
ANR	4074081	Symbol	atoi		4074032						
ANR	4074082	Symbol	( ( RCore * ) user ) -> cons -> force_rows		4074032						
ANR	4074083	Symbol	data		4074032						
ANR	4074084	Symbol	* user		4074032						
ANR	4074085	Symbol	* ( ( RCore * ) user ) -> cons		4074032						
ANR	4074086	Symbol	* * user		4074032						
ANR	4074087	Symbol	n		4074032						
ANR	4074088	Symbol	node -> value		4074032						
ANR	4074089	Symbol	node		4074032						
ANR	4074090	Symbol	true		4074032						
ANR	4074091	Symbol	* node		4074032						
ANR	4074092	Symbol	user		4074032						
ANR	4074093	Symbol	( ( RCore * ) user ) -> cons		4074032						
ANR	4074094	Function	cb_contiguous	2159:0:59046:59228							
ANR	4074095	FunctionDef	"cb_contiguous (void * user , void * data)"		4074094	0					
ANR	4074096	CompoundStatement		2159:50:59096:59228	4074094	0					
ANR	4074097	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2160:1:59099:59126	4074094	0	True				
ANR	4074098	IdentifierDecl	* core = ( RCore * ) user		4074094	0					
ANR	4074099	IdentifierDeclType	RCore *		4074094	0					
ANR	4074100	Identifier	core		4074094	1					
ANR	4074101	AssignmentExpression	* core = ( RCore * ) user		4074094	2		=			
ANR	4074102	Identifier	core		4074094	0					
ANR	4074103	CastExpression	( RCore * ) user		4074094	1					
ANR	4074104	CastTarget	RCore *		4074094	0					
ANR	4074105	Identifier	user		4074094	1					
ANR	4074106	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2161:1:59129:59169	4074094	1	True				
ANR	4074107	IdentifierDecl	* node = ( RConfigNode * ) data		4074094	0					
ANR	4074108	IdentifierDeclType	RConfigNode *		4074094	0					
ANR	4074109	Identifier	node		4074094	1					
ANR	4074110	AssignmentExpression	* node = ( RConfigNode * ) data		4074094	2		=			
ANR	4074111	Identifier	node		4074094	0					
ANR	4074112	CastExpression	( RConfigNode * ) data		4074094	1					
ANR	4074113	CastTarget	RConfigNode *		4074094	0					
ANR	4074114	Identifier	data		4074094	1					
ANR	4074115	ExpressionStatement	core -> search -> contiguous = node -> i_value	2162:1:59172:59212	4074094	2	True				
ANR	4074116	AssignmentExpression	core -> search -> contiguous = node -> i_value		4074094	0		=			
ANR	4074117	PtrMemberAccess	core -> search -> contiguous		4074094	0					
ANR	4074118	PtrMemberAccess	core -> search		4074094	0					
ANR	4074119	Identifier	core		4074094	0					
ANR	4074120	Identifier	search		4074094	1					
ANR	4074121	Identifier	contiguous		4074094	1					
ANR	4074122	PtrMemberAccess	node -> i_value		4074094	1					
ANR	4074123	Identifier	node		4074094	0					
ANR	4074124	Identifier	i_value		4074094	1					
ANR	4074125	ReturnStatement	return true ;	2163:1:59215:59226	4074094	3	True				
ANR	4074126	Identifier	true		4074094	0					
ANR	4074127	ReturnType	static bool		4074094	1					
ANR	4074128	Identifier	cb_contiguous		4074094	2					
ANR	4074129	ParameterList	"void * user , void * data"		4074094	3					
ANR	4074130	Parameter	void * user	2159:26:59072:59081	4074094	0	True				
ANR	4074131	ParameterType	void *		4074094	0					
ANR	4074132	Identifier	user		4074094	1					
ANR	4074133	Parameter	void * data	2159:38:59084:59093	4074094	1	True				
ANR	4074134	ParameterType	void *		4074094	0					
ANR	4074135	Identifier	data		4074094	1					
ANR	4074136	CFGEntryNode	ENTRY		4074094		True				
ANR	4074137	CFGExitNode	EXIT		4074094		True				
ANR	4074138	Symbol	core		4074094						
ANR	4074139	Symbol	node		4074094						
ANR	4074140	Symbol	data		4074094						
ANR	4074141	Symbol	* core		4074094						
ANR	4074142	Symbol	true		4074094						
ANR	4074143	Symbol	core -> search -> contiguous		4074094						
ANR	4074144	Symbol	* core -> search		4074094						
ANR	4074145	Symbol	* node		4074094						
ANR	4074146	Symbol	user		4074094						
ANR	4074147	Symbol	core -> search		4074094						
ANR	4074148	Symbol	* * core		4074094						
ANR	4074149	Symbol	node -> i_value		4074094						
ANR	4074150	Function	cb_searchalign	2166:0:59231:59448							
ANR	4074151	FunctionDef	"cb_searchalign (void * user , void * data)"		4074150	0					
ANR	4074152	CompoundStatement		2166:51:59282:59448	4074150	0					
ANR	4074153	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2167:1:59285:59312	4074150	0	True				
ANR	4074154	IdentifierDecl	* core = ( RCore * ) user		4074150	0					
ANR	4074155	IdentifierDeclType	RCore *		4074150	0					
ANR	4074156	Identifier	core		4074150	1					
ANR	4074157	AssignmentExpression	* core = ( RCore * ) user		4074150	2		=			
ANR	4074158	Identifier	core		4074150	0					
ANR	4074159	CastExpression	( RCore * ) user		4074150	1					
ANR	4074160	CastTarget	RCore *		4074150	0					
ANR	4074161	Identifier	user		4074150	1					
ANR	4074162	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2168:1:59315:59355	4074150	1	True				
ANR	4074163	IdentifierDecl	* node = ( RConfigNode * ) data		4074150	0					
ANR	4074164	IdentifierDeclType	RConfigNode *		4074150	0					
ANR	4074165	Identifier	node		4074150	1					
ANR	4074166	AssignmentExpression	* node = ( RConfigNode * ) data		4074150	2		=			
ANR	4074167	Identifier	node		4074150	0					
ANR	4074168	CastExpression	( RConfigNode * ) data		4074150	1					
ANR	4074169	CastTarget	RConfigNode *		4074150	0					
ANR	4074170	Identifier	data		4074150	1					
ANR	4074171	ExpressionStatement	core -> search -> align = node -> i_value	2169:1:59358:59393	4074150	2	True				
ANR	4074172	AssignmentExpression	core -> search -> align = node -> i_value		4074150	0		=			
ANR	4074173	PtrMemberAccess	core -> search -> align		4074150	0					
ANR	4074174	PtrMemberAccess	core -> search		4074150	0					
ANR	4074175	Identifier	core		4074150	0					
ANR	4074176	Identifier	search		4074150	1					
ANR	4074177	Identifier	align		4074150	1					
ANR	4074178	PtrMemberAccess	node -> i_value		4074150	1					
ANR	4074179	Identifier	node		4074150	0					
ANR	4074180	Identifier	i_value		4074150	1					
ANR	4074181	ExpressionStatement	core -> print -> addrmod = node -> i_value	2170:1:59396:59432	4074150	3	True				
ANR	4074182	AssignmentExpression	core -> print -> addrmod = node -> i_value		4074150	0		=			
ANR	4074183	PtrMemberAccess	core -> print -> addrmod		4074150	0					
ANR	4074184	PtrMemberAccess	core -> print		4074150	0					
ANR	4074185	Identifier	core		4074150	0					
ANR	4074186	Identifier	print		4074150	1					
ANR	4074187	Identifier	addrmod		4074150	1					
ANR	4074188	PtrMemberAccess	node -> i_value		4074150	1					
ANR	4074189	Identifier	node		4074150	0					
ANR	4074190	Identifier	i_value		4074150	1					
ANR	4074191	ReturnStatement	return true ;	2171:1:59435:59446	4074150	4	True				
ANR	4074192	Identifier	true		4074150	0					
ANR	4074193	ReturnType	static bool		4074150	1					
ANR	4074194	Identifier	cb_searchalign		4074150	2					
ANR	4074195	ParameterList	"void * user , void * data"		4074150	3					
ANR	4074196	Parameter	void * user	2166:27:59258:59267	4074150	0	True				
ANR	4074197	ParameterType	void *		4074150	0					
ANR	4074198	Identifier	user		4074150	1					
ANR	4074199	Parameter	void * data	2166:39:59270:59279	4074150	1	True				
ANR	4074200	ParameterType	void *		4074150	0					
ANR	4074201	Identifier	data		4074150	1					
ANR	4074202	CFGEntryNode	ENTRY		4074150		True				
ANR	4074203	CFGExitNode	EXIT		4074150		True				
ANR	4074204	Symbol	data		4074150						
ANR	4074205	Symbol	* core		4074150						
ANR	4074206	Symbol	* core -> search		4074150						
ANR	4074207	Symbol	node -> i_value		4074150						
ANR	4074208	Symbol	core		4074150						
ANR	4074209	Symbol	node		4074150						
ANR	4074210	Symbol	* core -> print		4074150						
ANR	4074211	Symbol	core -> search -> align		4074150						
ANR	4074212	Symbol	true		4074150						
ANR	4074213	Symbol	* node		4074150						
ANR	4074214	Symbol	core -> print -> addrmod		4074150						
ANR	4074215	Symbol	core -> print		4074150						
ANR	4074216	Symbol	user		4074150						
ANR	4074217	Symbol	core -> search		4074150						
ANR	4074218	Symbol	* * core		4074150						
ANR	4074219	Function	cb_segoff	2174:0:59451:59732							
ANR	4074220	FunctionDef	"cb_segoff (void * user , void * data)"		4074219	0					
ANR	4074221	CompoundStatement		2174:46:59497:59732	4074219	0					
ANR	4074222	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2175:1:59500:59528	4074219	0	True				
ANR	4074223	IdentifierDecl	* core = ( RCore * ) user		4074219	0					
ANR	4074224	IdentifierDeclType	RCore *		4074219	0					
ANR	4074225	Identifier	core		4074219	1					
ANR	4074226	AssignmentExpression	* core = ( RCore * ) user		4074219	2		=			
ANR	4074227	Identifier	core		4074219	0					
ANR	4074228	CastExpression	( RCore * ) user		4074219	1					
ANR	4074229	CastTarget	RCore *		4074219	0					
ANR	4074230	Identifier	user		4074219	1					
ANR	4074231	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2176:1:59531:59571	4074219	1	True				
ANR	4074232	IdentifierDecl	* node = ( RConfigNode * ) data		4074219	0					
ANR	4074233	IdentifierDeclType	RConfigNode *		4074219	0					
ANR	4074234	Identifier	node		4074219	1					
ANR	4074235	AssignmentExpression	* node = ( RConfigNode * ) data		4074219	2		=			
ANR	4074236	Identifier	node		4074219	0					
ANR	4074237	CastExpression	( RConfigNode * ) data		4074219	1					
ANR	4074238	CastTarget	RConfigNode *		4074219	0					
ANR	4074239	Identifier	data		4074219	1					
ANR	4074240	IfStatement	if ( node -> i_value )		4074219	2					
ANR	4074241	Condition	node -> i_value	2177:5:59578:59590	4074219	0	True				
ANR	4074242	PtrMemberAccess	node -> i_value		4074219	0					
ANR	4074243	Identifier	node		4074219	0					
ANR	4074244	Identifier	i_value		4074219	1					
ANR	4074245	CompoundStatement		4:20:95:95	4074219	1					
ANR	4074246	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_SEGOFF	2178:2:59597:59639	4074219	0	True				
ANR	4074247	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_SEGOFF		4074219	0		|=			
ANR	4074248	PtrMemberAccess	core -> print -> flags		4074219	0					
ANR	4074249	PtrMemberAccess	core -> print		4074219	0					
ANR	4074250	Identifier	core		4074219	0					
ANR	4074251	Identifier	print		4074219	1					
ANR	4074252	Identifier	flags		4074219	1					
ANR	4074253	Identifier	R_PRINT_FLAGS_SEGOFF		4074219	1					
ANR	4074254	ElseStatement	else		4074219	0					
ANR	4074255	CompoundStatement		6:8:151:151	4074219	0					
ANR	4074256	ExpressionStatement	core -> print -> flags &= ( ( ( ut32 ) - 1 ) & ( ~R_PRINT_FLAGS_SEGOFF ) )	2180:2:59653:59713	4074219	0	True				
ANR	4074257	AssignmentExpression	core -> print -> flags &= ( ( ( ut32 ) - 1 ) & ( ~R_PRINT_FLAGS_SEGOFF ) )		4074219	0		&=			
ANR	4074258	PtrMemberAccess	core -> print -> flags		4074219	0					
ANR	4074259	PtrMemberAccess	core -> print		4074219	0					
ANR	4074260	Identifier	core		4074219	0					
ANR	4074261	Identifier	print		4074219	1					
ANR	4074262	Identifier	flags		4074219	1					
ANR	4074263	BitAndExpression	( ( ut32 ) - 1 ) & ( ~R_PRINT_FLAGS_SEGOFF )		4074219	1		&			
ANR	4074264	CastExpression	( ut32 ) - 1		4074219	0					
ANR	4074265	CastTarget	ut32		4074219	0					
ANR	4074266	UnaryOperationExpression	- 1		4074219	1					
ANR	4074267	UnaryOperator	-		4074219	0					
ANR	4074268	PrimaryExpression	1		4074219	1					
ANR	4074269	Identifier	~R_PRINT_FLAGS_SEGOFF		4074219	1					
ANR	4074270	ReturnStatement	return true ;	2182:1:59719:59730	4074219	3	True				
ANR	4074271	Identifier	true		4074219	0					
ANR	4074272	ReturnType	static bool		4074219	1					
ANR	4074273	Identifier	cb_segoff		4074219	2					
ANR	4074274	ParameterList	"void * user , void * data"		4074219	3					
ANR	4074275	Parameter	void * user	2174:22:59473:59482	4074219	0	True				
ANR	4074276	ParameterType	void *		4074219	0					
ANR	4074277	Identifier	user		4074219	1					
ANR	4074278	Parameter	void * data	2174:34:59485:59494	4074219	1	True				
ANR	4074279	ParameterType	void *		4074219	0					
ANR	4074280	Identifier	data		4074219	1					
ANR	4074281	CFGEntryNode	ENTRY		4074219		True				
ANR	4074282	CFGExitNode	EXIT		4074219		True				
ANR	4074283	Symbol	~R_PRINT_FLAGS_SEGOFF		4074219						
ANR	4074284	Symbol	data		4074219						
ANR	4074285	Symbol	* core		4074219						
ANR	4074286	Symbol	node -> i_value		4074219						
ANR	4074287	Symbol	core		4074219						
ANR	4074288	Symbol	node		4074219						
ANR	4074289	Symbol	* core -> print		4074219						
ANR	4074290	Symbol	R_PRINT_FLAGS_SEGOFF		4074219						
ANR	4074291	Symbol	true		4074219						
ANR	4074292	Symbol	* node		4074219						
ANR	4074293	Symbol	core -> print		4074219						
ANR	4074294	Symbol	user		4074219						
ANR	4074295	Symbol	* * core		4074219						
ANR	4074296	Symbol	core -> print -> flags		4074219						
ANR	4074297	Function	cb_seggrn	2185:0:59735:59988							
ANR	4074298	FunctionDef	"cb_seggrn (void * user , void * data)"		4074297	0					
ANR	4074299	CompoundStatement		2185:46:59781:59988	4074297	0					
ANR	4074300	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2186:1:59784:59812	4074297	0	True				
ANR	4074301	IdentifierDecl	* core = ( RCore * ) user		4074297	0					
ANR	4074302	IdentifierDeclType	RCore *		4074297	0					
ANR	4074303	Identifier	core		4074297	1					
ANR	4074304	AssignmentExpression	* core = ( RCore * ) user		4074297	2		=			
ANR	4074305	Identifier	core		4074297	0					
ANR	4074306	CastExpression	( RCore * ) user		4074297	1					
ANR	4074307	CastTarget	RCore *		4074297	0					
ANR	4074308	Identifier	user		4074297	1					
ANR	4074309	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2187:1:59815:59855	4074297	1	True				
ANR	4074310	IdentifierDecl	* node = ( RConfigNode * ) data		4074297	0					
ANR	4074311	IdentifierDeclType	RConfigNode *		4074297	0					
ANR	4074312	Identifier	node		4074297	1					
ANR	4074313	AssignmentExpression	* node = ( RConfigNode * ) data		4074297	2		=			
ANR	4074314	Identifier	node		4074297	0					
ANR	4074315	CastExpression	( RConfigNode * ) data		4074297	1					
ANR	4074316	CastTarget	RConfigNode *		4074297	0					
ANR	4074317	Identifier	data		4074297	1					
ANR	4074318	ExpressionStatement	core -> assembler -> seggrn = node -> i_value	2188:1:59858:59897	4074297	2	True				
ANR	4074319	AssignmentExpression	core -> assembler -> seggrn = node -> i_value		4074297	0		=			
ANR	4074320	PtrMemberAccess	core -> assembler -> seggrn		4074297	0					
ANR	4074321	PtrMemberAccess	core -> assembler		4074297	0					
ANR	4074322	Identifier	core		4074297	0					
ANR	4074323	Identifier	assembler		4074297	1					
ANR	4074324	Identifier	seggrn		4074297	1					
ANR	4074325	PtrMemberAccess	node -> i_value		4074297	1					
ANR	4074326	Identifier	node		4074297	0					
ANR	4074327	Identifier	i_value		4074297	1					
ANR	4074328	ExpressionStatement	core -> anal -> seggrn = node -> i_value	2189:1:59900:59934	4074297	3	True				
ANR	4074329	AssignmentExpression	core -> anal -> seggrn = node -> i_value		4074297	0		=			
ANR	4074330	PtrMemberAccess	core -> anal -> seggrn		4074297	0					
ANR	4074331	PtrMemberAccess	core -> anal		4074297	0					
ANR	4074332	Identifier	core		4074297	0					
ANR	4074333	Identifier	anal		4074297	1					
ANR	4074334	Identifier	seggrn		4074297	1					
ANR	4074335	PtrMemberAccess	node -> i_value		4074297	1					
ANR	4074336	Identifier	node		4074297	0					
ANR	4074337	Identifier	i_value		4074297	1					
ANR	4074338	ExpressionStatement	core -> print -> seggrn = node -> i_value	2190:1:59937:59972	4074297	4	True				
ANR	4074339	AssignmentExpression	core -> print -> seggrn = node -> i_value		4074297	0		=			
ANR	4074340	PtrMemberAccess	core -> print -> seggrn		4074297	0					
ANR	4074341	PtrMemberAccess	core -> print		4074297	0					
ANR	4074342	Identifier	core		4074297	0					
ANR	4074343	Identifier	print		4074297	1					
ANR	4074344	Identifier	seggrn		4074297	1					
ANR	4074345	PtrMemberAccess	node -> i_value		4074297	1					
ANR	4074346	Identifier	node		4074297	0					
ANR	4074347	Identifier	i_value		4074297	1					
ANR	4074348	ReturnStatement	return true ;	2191:1:59975:59986	4074297	5	True				
ANR	4074349	Identifier	true		4074297	0					
ANR	4074350	ReturnType	static bool		4074297	1					
ANR	4074351	Identifier	cb_seggrn		4074297	2					
ANR	4074352	ParameterList	"void * user , void * data"		4074297	3					
ANR	4074353	Parameter	void * user	2185:22:59757:59766	4074297	0	True				
ANR	4074354	ParameterType	void *		4074297	0					
ANR	4074355	Identifier	user		4074297	1					
ANR	4074356	Parameter	void * data	2185:34:59769:59778	4074297	1	True				
ANR	4074357	ParameterType	void *		4074297	0					
ANR	4074358	Identifier	data		4074297	1					
ANR	4074359	CFGEntryNode	ENTRY		4074297		True				
ANR	4074360	CFGExitNode	EXIT		4074297		True				
ANR	4074361	Symbol	core -> assembler -> seggrn		4074297						
ANR	4074362	Symbol	data		4074297						
ANR	4074363	Symbol	* core		4074297						
ANR	4074364	Symbol	core -> assembler		4074297						
ANR	4074365	Symbol	core -> anal		4074297						
ANR	4074366	Symbol	node -> i_value		4074297						
ANR	4074367	Symbol	* core -> assembler		4074297						
ANR	4074368	Symbol	core		4074297						
ANR	4074369	Symbol	node		4074297						
ANR	4074370	Symbol	core -> anal -> seggrn		4074297						
ANR	4074371	Symbol	* core -> print		4074297						
ANR	4074372	Symbol	* core -> anal		4074297						
ANR	4074373	Symbol	core -> print -> seggrn		4074297						
ANR	4074374	Symbol	true		4074297						
ANR	4074375	Symbol	* node		4074297						
ANR	4074376	Symbol	core -> print		4074297						
ANR	4074377	Symbol	user		4074297						
ANR	4074378	Symbol	* * core		4074297						
ANR	4074379	Function	cb_stopthreads	2195:0:59992:60179							
ANR	4074380	FunctionDef	"cb_stopthreads (void * user , void * data)"		4074379	0					
ANR	4074381	CompoundStatement		2195:51:60043:60179	4074379	0					
ANR	4074382	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2196:1:60046:60074	4074379	0	True				
ANR	4074383	IdentifierDecl	* core = ( RCore * ) user		4074379	0					
ANR	4074384	IdentifierDeclType	RCore *		4074379	0					
ANR	4074385	Identifier	core		4074379	1					
ANR	4074386	AssignmentExpression	* core = ( RCore * ) user		4074379	2		=			
ANR	4074387	Identifier	core		4074379	0					
ANR	4074388	CastExpression	( RCore * ) user		4074379	1					
ANR	4074389	CastTarget	RCore *		4074379	0					
ANR	4074390	Identifier	user		4074379	1					
ANR	4074391	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2197:1:60077:60117	4074379	1	True				
ANR	4074392	IdentifierDecl	* node = ( RConfigNode * ) data		4074379	0					
ANR	4074393	IdentifierDeclType	RConfigNode *		4074379	0					
ANR	4074394	Identifier	node		4074379	1					
ANR	4074395	AssignmentExpression	* node = ( RConfigNode * ) data		4074379	2		=			
ANR	4074396	Identifier	node		4074379	0					
ANR	4074397	CastExpression	( RConfigNode * ) data		4074379	1					
ANR	4074398	CastTarget	RConfigNode *		4074379	0					
ANR	4074399	Identifier	data		4074379	1					
ANR	4074400	ExpressionStatement	core -> dbg -> stop_all_threads = node -> i_value	2198:1:60120:60163	4074379	2	True				
ANR	4074401	AssignmentExpression	core -> dbg -> stop_all_threads = node -> i_value		4074379	0		=			
ANR	4074402	PtrMemberAccess	core -> dbg -> stop_all_threads		4074379	0					
ANR	4074403	PtrMemberAccess	core -> dbg		4074379	0					
ANR	4074404	Identifier	core		4074379	0					
ANR	4074405	Identifier	dbg		4074379	1					
ANR	4074406	Identifier	stop_all_threads		4074379	1					
ANR	4074407	PtrMemberAccess	node -> i_value		4074379	1					
ANR	4074408	Identifier	node		4074379	0					
ANR	4074409	Identifier	i_value		4074379	1					
ANR	4074410	ReturnStatement	return true ;	2199:1:60166:60177	4074379	3	True				
ANR	4074411	Identifier	true		4074379	0					
ANR	4074412	ReturnType	static bool		4074379	1					
ANR	4074413	Identifier	cb_stopthreads		4074379	2					
ANR	4074414	ParameterList	"void * user , void * data"		4074379	3					
ANR	4074415	Parameter	void * user	2195:27:60019:60028	4074379	0	True				
ANR	4074416	ParameterType	void *		4074379	0					
ANR	4074417	Identifier	user		4074379	1					
ANR	4074418	Parameter	void * data	2195:39:60031:60040	4074379	1	True				
ANR	4074419	ParameterType	void *		4074379	0					
ANR	4074420	Identifier	data		4074379	1					
ANR	4074421	CFGEntryNode	ENTRY		4074379		True				
ANR	4074422	CFGExitNode	EXIT		4074379		True				
ANR	4074423	Symbol	core		4074379						
ANR	4074424	Symbol	node		4074379						
ANR	4074425	Symbol	data		4074379						
ANR	4074426	Symbol	* core		4074379						
ANR	4074427	Symbol	true		4074379						
ANR	4074428	Symbol	* node		4074379						
ANR	4074429	Symbol	core -> dbg -> stop_all_threads		4074379						
ANR	4074430	Symbol	user		4074379						
ANR	4074431	Symbol	* core -> dbg		4074379						
ANR	4074432	Symbol	* * core		4074379						
ANR	4074433	Symbol	core -> dbg		4074379						
ANR	4074434	Symbol	node -> i_value		4074379						
ANR	4074435	Function	cb_scr_prompt_popup	2202:0:60182:60383							
ANR	4074436	FunctionDef	"cb_scr_prompt_popup (void * user , void * data)"		4074435	0					
ANR	4074437	CompoundStatement		2202:56:60238:60383	4074435	0					
ANR	4074438	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2203:1:60241:60269	4074435	0	True				
ANR	4074439	IdentifierDecl	* core = ( RCore * ) user		4074435	0					
ANR	4074440	IdentifierDeclType	RCore *		4074435	0					
ANR	4074441	Identifier	core		4074435	1					
ANR	4074442	AssignmentExpression	* core = ( RCore * ) user		4074435	2		=			
ANR	4074443	Identifier	core		4074435	0					
ANR	4074444	CastExpression	( RCore * ) user		4074435	1					
ANR	4074445	CastTarget	RCore *		4074435	0					
ANR	4074446	Identifier	user		4074435	1					
ANR	4074447	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2204:1:60272:60312	4074435	1	True				
ANR	4074448	IdentifierDecl	* node = ( RConfigNode * ) data		4074435	0					
ANR	4074449	IdentifierDeclType	RConfigNode *		4074435	0					
ANR	4074450	Identifier	node		4074435	1					
ANR	4074451	AssignmentExpression	* node = ( RConfigNode * ) data		4074435	2		=			
ANR	4074452	Identifier	node		4074435	0					
ANR	4074453	CastExpression	( RConfigNode * ) data		4074435	1					
ANR	4074454	CastTarget	RConfigNode *		4074435	0					
ANR	4074455	Identifier	data		4074435	1					
ANR	4074456	ExpressionStatement	core -> cons -> show_autocomplete_widget = node -> i_value	2205:1:60315:60367	4074435	2	True				
ANR	4074457	AssignmentExpression	core -> cons -> show_autocomplete_widget = node -> i_value		4074435	0		=			
ANR	4074458	PtrMemberAccess	core -> cons -> show_autocomplete_widget		4074435	0					
ANR	4074459	PtrMemberAccess	core -> cons		4074435	0					
ANR	4074460	Identifier	core		4074435	0					
ANR	4074461	Identifier	cons		4074435	1					
ANR	4074462	Identifier	show_autocomplete_widget		4074435	1					
ANR	4074463	PtrMemberAccess	node -> i_value		4074435	1					
ANR	4074464	Identifier	node		4074435	0					
ANR	4074465	Identifier	i_value		4074435	1					
ANR	4074466	ReturnStatement	return true ;	2206:1:60370:60381	4074435	3	True				
ANR	4074467	Identifier	true		4074435	0					
ANR	4074468	ReturnType	static bool		4074435	1					
ANR	4074469	Identifier	cb_scr_prompt_popup		4074435	2					
ANR	4074470	ParameterList	"void * user , void * data"		4074435	3					
ANR	4074471	Parameter	void * user	2202:32:60214:60223	4074435	0	True				
ANR	4074472	ParameterType	void *		4074435	0					
ANR	4074473	Identifier	user		4074435	1					
ANR	4074474	Parameter	void * data	2202:44:60226:60235	4074435	1	True				
ANR	4074475	ParameterType	void *		4074435	0					
ANR	4074476	Identifier	data		4074435	1					
ANR	4074477	CFGEntryNode	ENTRY		4074435		True				
ANR	4074478	CFGExitNode	EXIT		4074435		True				
ANR	4074479	Symbol	core		4074435						
ANR	4074480	Symbol	node		4074435						
ANR	4074481	Symbol	core -> cons		4074435						
ANR	4074482	Symbol	data		4074435						
ANR	4074483	Symbol	* core -> cons		4074435						
ANR	4074484	Symbol	core -> cons -> show_autocomplete_widget		4074435						
ANR	4074485	Symbol	* core		4074435						
ANR	4074486	Symbol	true		4074435						
ANR	4074487	Symbol	* node		4074435						
ANR	4074488	Symbol	user		4074435						
ANR	4074489	Symbol	* * core		4074435						
ANR	4074490	Symbol	node -> i_value		4074435						
ANR	4074491	Function	cb_swstep	2209:0:60386:60558							
ANR	4074492	FunctionDef	"cb_swstep (void * user , void * data)"		4074491	0					
ANR	4074493	CompoundStatement		2209:46:60432:60558	4074491	0					
ANR	4074494	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2210:1:60435:60463	4074491	0	True				
ANR	4074495	IdentifierDecl	* core = ( RCore * ) user		4074491	0					
ANR	4074496	IdentifierDeclType	RCore *		4074491	0					
ANR	4074497	Identifier	core		4074491	1					
ANR	4074498	AssignmentExpression	* core = ( RCore * ) user		4074491	2		=			
ANR	4074499	Identifier	core		4074491	0					
ANR	4074500	CastExpression	( RCore * ) user		4074491	1					
ANR	4074501	CastTarget	RCore *		4074491	0					
ANR	4074502	Identifier	user		4074491	1					
ANR	4074503	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2211:1:60466:60506	4074491	1	True				
ANR	4074504	IdentifierDecl	* node = ( RConfigNode * ) data		4074491	0					
ANR	4074505	IdentifierDeclType	RConfigNode *		4074491	0					
ANR	4074506	Identifier	node		4074491	1					
ANR	4074507	AssignmentExpression	* node = ( RConfigNode * ) data		4074491	2		=			
ANR	4074508	Identifier	node		4074491	0					
ANR	4074509	CastExpression	( RConfigNode * ) data		4074491	1					
ANR	4074510	CastTarget	RConfigNode *		4074491	0					
ANR	4074511	Identifier	data		4074491	1					
ANR	4074512	ExpressionStatement	core -> dbg -> swstep = node -> i_value	2212:1:60509:60542	4074491	2	True				
ANR	4074513	AssignmentExpression	core -> dbg -> swstep = node -> i_value		4074491	0		=			
ANR	4074514	PtrMemberAccess	core -> dbg -> swstep		4074491	0					
ANR	4074515	PtrMemberAccess	core -> dbg		4074491	0					
ANR	4074516	Identifier	core		4074491	0					
ANR	4074517	Identifier	dbg		4074491	1					
ANR	4074518	Identifier	swstep		4074491	1					
ANR	4074519	PtrMemberAccess	node -> i_value		4074491	1					
ANR	4074520	Identifier	node		4074491	0					
ANR	4074521	Identifier	i_value		4074491	1					
ANR	4074522	ReturnStatement	return true ;	2213:1:60545:60556	4074491	3	True				
ANR	4074523	Identifier	true		4074491	0					
ANR	4074524	ReturnType	static bool		4074491	1					
ANR	4074525	Identifier	cb_swstep		4074491	2					
ANR	4074526	ParameterList	"void * user , void * data"		4074491	3					
ANR	4074527	Parameter	void * user	2209:22:60408:60417	4074491	0	True				
ANR	4074528	ParameterType	void *		4074491	0					
ANR	4074529	Identifier	user		4074491	1					
ANR	4074530	Parameter	void * data	2209:34:60420:60429	4074491	1	True				
ANR	4074531	ParameterType	void *		4074491	0					
ANR	4074532	Identifier	data		4074491	1					
ANR	4074533	CFGEntryNode	ENTRY		4074491		True				
ANR	4074534	CFGExitNode	EXIT		4074491		True				
ANR	4074535	Symbol	core		4074491						
ANR	4074536	Symbol	node		4074491						
ANR	4074537	Symbol	data		4074491						
ANR	4074538	Symbol	* core		4074491						
ANR	4074539	Symbol	true		4074491						
ANR	4074540	Symbol	* node		4074491						
ANR	4074541	Symbol	user		4074491						
ANR	4074542	Symbol	core -> dbg -> swstep		4074491						
ANR	4074543	Symbol	* core -> dbg		4074491						
ANR	4074544	Symbol	* * core		4074491						
ANR	4074545	Symbol	node -> i_value		4074491						
ANR	4074546	Symbol	core -> dbg		4074491						
ANR	4074547	Function	cb_consbreak	2216:0:60561:60739							
ANR	4074548	FunctionDef	"cb_consbreak (void * user , void * data)"		4074547	0					
ANR	4074549	CompoundStatement		2216:49:60610:60739	4074547	0					
ANR	4074550	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2217:1:60613:60641	4074547	0	True				
ANR	4074551	IdentifierDecl	* core = ( RCore * ) user		4074547	0					
ANR	4074552	IdentifierDeclType	RCore *		4074547	0					
ANR	4074553	Identifier	core		4074547	1					
ANR	4074554	AssignmentExpression	* core = ( RCore * ) user		4074547	2		=			
ANR	4074555	Identifier	core		4074547	0					
ANR	4074556	CastExpression	( RCore * ) user		4074547	1					
ANR	4074557	CastTarget	RCore *		4074547	0					
ANR	4074558	Identifier	user		4074547	1					
ANR	4074559	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2218:1:60644:60684	4074547	1	True				
ANR	4074560	IdentifierDecl	* node = ( RConfigNode * ) data		4074547	0					
ANR	4074561	IdentifierDeclType	RConfigNode *		4074547	0					
ANR	4074562	Identifier	node		4074547	1					
ANR	4074563	AssignmentExpression	* node = ( RConfigNode * ) data		4074547	2		=			
ANR	4074564	Identifier	node		4074547	0					
ANR	4074565	CastExpression	( RConfigNode * ) data		4074547	1					
ANR	4074566	CastTarget	RConfigNode *		4074547	0					
ANR	4074567	Identifier	data		4074547	1					
ANR	4074568	ExpressionStatement	core -> dbg -> consbreak = node -> i_value	2219:1:60687:60723	4074547	2	True				
ANR	4074569	AssignmentExpression	core -> dbg -> consbreak = node -> i_value		4074547	0		=			
ANR	4074570	PtrMemberAccess	core -> dbg -> consbreak		4074547	0					
ANR	4074571	PtrMemberAccess	core -> dbg		4074547	0					
ANR	4074572	Identifier	core		4074547	0					
ANR	4074573	Identifier	dbg		4074547	1					
ANR	4074574	Identifier	consbreak		4074547	1					
ANR	4074575	PtrMemberAccess	node -> i_value		4074547	1					
ANR	4074576	Identifier	node		4074547	0					
ANR	4074577	Identifier	i_value		4074547	1					
ANR	4074578	ReturnStatement	return true ;	2220:1:60726:60737	4074547	3	True				
ANR	4074579	Identifier	true		4074547	0					
ANR	4074580	ReturnType	static bool		4074547	1					
ANR	4074581	Identifier	cb_consbreak		4074547	2					
ANR	4074582	ParameterList	"void * user , void * data"		4074547	3					
ANR	4074583	Parameter	void * user	2216:25:60586:60595	4074547	0	True				
ANR	4074584	ParameterType	void *		4074547	0					
ANR	4074585	Identifier	user		4074547	1					
ANR	4074586	Parameter	void * data	2216:37:60598:60607	4074547	1	True				
ANR	4074587	ParameterType	void *		4074547	0					
ANR	4074588	Identifier	data		4074547	1					
ANR	4074589	CFGEntryNode	ENTRY		4074547		True				
ANR	4074590	CFGExitNode	EXIT		4074547		True				
ANR	4074591	Symbol	core		4074547						
ANR	4074592	Symbol	node		4074547						
ANR	4074593	Symbol	data		4074547						
ANR	4074594	Symbol	core -> dbg -> consbreak		4074547						
ANR	4074595	Symbol	* core		4074547						
ANR	4074596	Symbol	true		4074547						
ANR	4074597	Symbol	* node		4074547						
ANR	4074598	Symbol	user		4074547						
ANR	4074599	Symbol	* core -> dbg		4074547						
ANR	4074600	Symbol	* * core		4074547						
ANR	4074601	Symbol	node -> i_value		4074547						
ANR	4074602	Symbol	core -> dbg		4074547						
ANR	4074603	Function	cb_teefile	2223:0:60742:60893							
ANR	4074604	FunctionDef	"cb_teefile (void * user , void * data)"		4074603	0					
ANR	4074605	CompoundStatement		2223:47:60789:60893	4074603	0					
ANR	4074606	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2224:1:60792:60832	4074603	0	True				
ANR	4074607	IdentifierDecl	* node = ( RConfigNode * ) data		4074603	0					
ANR	4074608	IdentifierDeclType	RConfigNode *		4074603	0					
ANR	4074609	Identifier	node		4074603	1					
ANR	4074610	AssignmentExpression	* node = ( RConfigNode * ) data		4074603	2		=			
ANR	4074611	Identifier	node		4074603	0					
ANR	4074612	CastExpression	( RConfigNode * ) data		4074603	1					
ANR	4074613	CastTarget	RConfigNode *		4074603	0					
ANR	4074614	Identifier	data		4074603	1					
ANR	4074615	ExpressionStatement	r_cons_singleton ( ) -> teefile = node -> value	2225:1:60835:60877	4074603	1	True				
ANR	4074616	AssignmentExpression	r_cons_singleton ( ) -> teefile = node -> value		4074603	0		=			
ANR	4074617	PtrMemberAccess	r_cons_singleton ( ) -> teefile		4074603	0					
ANR	4074618	CallExpression	r_cons_singleton ( )		4074603	0					
ANR	4074619	Callee	r_cons_singleton		4074603	0					
ANR	4074620	Identifier	r_cons_singleton		4074603	0					
ANR	4074621	ArgumentList			4074603	1					
ANR	4074622	Identifier	teefile		4074603	1					
ANR	4074623	PtrMemberAccess	node -> value		4074603	1					
ANR	4074624	Identifier	node		4074603	0					
ANR	4074625	Identifier	value		4074603	1					
ANR	4074626	ReturnStatement	return true ;	2226:1:60880:60891	4074603	2	True				
ANR	4074627	Identifier	true		4074603	0					
ANR	4074628	ReturnType	static bool		4074603	1					
ANR	4074629	Identifier	cb_teefile		4074603	2					
ANR	4074630	ParameterList	"void * user , void * data"		4074603	3					
ANR	4074631	Parameter	void * user	2223:23:60765:60774	4074603	0	True				
ANR	4074632	ParameterType	void *		4074603	0					
ANR	4074633	Identifier	user		4074603	1					
ANR	4074634	Parameter	void * data	2223:35:60777:60786	4074603	1	True				
ANR	4074635	ParameterType	void *		4074603	0					
ANR	4074636	Identifier	data		4074603	1					
ANR	4074637	CFGEntryNode	ENTRY		4074603		True				
ANR	4074638	CFGExitNode	EXIT		4074603		True				
ANR	4074639	Symbol	node		4074603						
ANR	4074640	Symbol	data		4074603						
ANR	4074641	Symbol	true		4074603						
ANR	4074642	Symbol	r_cons_singleton		4074603						
ANR	4074643	Symbol	* node		4074603						
ANR	4074644	Symbol	r_cons_singleton ( ) -> teefile		4074603						
ANR	4074645	Symbol	user		4074603						
ANR	4074646	Symbol	* r_cons_singleton		4074603						
ANR	4074647	Symbol	node -> value		4074603						
ANR	4074648	Function	cb_trace	2229:0:60896:61075							
ANR	4074649	FunctionDef	"cb_trace (void * user , void * data)"		4074648	0					
ANR	4074650	CompoundStatement		2229:45:60941:61075	4074648	0					
ANR	4074651	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2230:1:60944:60972	4074648	0	True				
ANR	4074652	IdentifierDecl	* core = ( RCore * ) user		4074648	0					
ANR	4074653	IdentifierDeclType	RCore *		4074648	0					
ANR	4074654	Identifier	core		4074648	1					
ANR	4074655	AssignmentExpression	* core = ( RCore * ) user		4074648	2		=			
ANR	4074656	Identifier	core		4074648	0					
ANR	4074657	CastExpression	( RCore * ) user		4074648	1					
ANR	4074658	CastTarget	RCore *		4074648	0					
ANR	4074659	Identifier	user		4074648	1					
ANR	4074660	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2231:1:60975:61015	4074648	1	True				
ANR	4074661	IdentifierDecl	* node = ( RConfigNode * ) data		4074648	0					
ANR	4074662	IdentifierDeclType	RConfigNode *		4074648	0					
ANR	4074663	Identifier	node		4074648	1					
ANR	4074664	AssignmentExpression	* node = ( RConfigNode * ) data		4074648	2		=			
ANR	4074665	Identifier	node		4074648	0					
ANR	4074666	CastExpression	( RConfigNode * ) data		4074648	1					
ANR	4074667	CastTarget	RConfigNode *		4074648	0					
ANR	4074668	Identifier	data		4074648	1					
ANR	4074669	ExpressionStatement	core -> dbg -> trace -> enabled = node -> i_value	2232:1:61018:61059	4074648	2	True				
ANR	4074670	AssignmentExpression	core -> dbg -> trace -> enabled = node -> i_value		4074648	0		=			
ANR	4074671	PtrMemberAccess	core -> dbg -> trace -> enabled		4074648	0					
ANR	4074672	PtrMemberAccess	core -> dbg -> trace		4074648	0					
ANR	4074673	PtrMemberAccess	core -> dbg		4074648	0					
ANR	4074674	Identifier	core		4074648	0					
ANR	4074675	Identifier	dbg		4074648	1					
ANR	4074676	Identifier	trace		4074648	1					
ANR	4074677	Identifier	enabled		4074648	1					
ANR	4074678	PtrMemberAccess	node -> i_value		4074648	1					
ANR	4074679	Identifier	node		4074648	0					
ANR	4074680	Identifier	i_value		4074648	1					
ANR	4074681	ReturnStatement	return true ;	2233:1:61062:61073	4074648	3	True				
ANR	4074682	Identifier	true		4074648	0					
ANR	4074683	ReturnType	static bool		4074648	1					
ANR	4074684	Identifier	cb_trace		4074648	2					
ANR	4074685	ParameterList	"void * user , void * data"		4074648	3					
ANR	4074686	Parameter	void * user	2229:21:60917:60926	4074648	0	True				
ANR	4074687	ParameterType	void *		4074648	0					
ANR	4074688	Identifier	user		4074648	1					
ANR	4074689	Parameter	void * data	2229:33:60929:60938	4074648	1	True				
ANR	4074690	ParameterType	void *		4074648	0					
ANR	4074691	Identifier	data		4074648	1					
ANR	4074692	CFGEntryNode	ENTRY		4074648		True				
ANR	4074693	CFGExitNode	EXIT		4074648		True				
ANR	4074694	Symbol	data		4074648						
ANR	4074695	Symbol	* core		4074648						
ANR	4074696	Symbol	* core -> dbg -> trace		4074648						
ANR	4074697	Symbol	node -> i_value		4074648						
ANR	4074698	Symbol	core		4074648						
ANR	4074699	Symbol	node		4074648						
ANR	4074700	Symbol	* * * core		4074648						
ANR	4074701	Symbol	core -> dbg -> trace -> enabled		4074648						
ANR	4074702	Symbol	core -> dbg -> trace		4074648						
ANR	4074703	Symbol	true		4074648						
ANR	4074704	Symbol	* node		4074648						
ANR	4074705	Symbol	user		4074648						
ANR	4074706	Symbol	* core -> dbg		4074648						
ANR	4074707	Symbol	* * core		4074648						
ANR	4074708	Symbol	* * core -> dbg		4074648						
ANR	4074709	Symbol	core -> dbg		4074648						
ANR	4074710	Function	cb_tracetag	2236:0:61078:61256							
ANR	4074711	FunctionDef	"cb_tracetag (void * user , void * data)"		4074710	0					
ANR	4074712	CompoundStatement		2236:48:61126:61256	4074710	0					
ANR	4074713	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2237:1:61129:61157	4074710	0	True				
ANR	4074714	IdentifierDecl	* core = ( RCore * ) user		4074710	0					
ANR	4074715	IdentifierDeclType	RCore *		4074710	0					
ANR	4074716	Identifier	core		4074710	1					
ANR	4074717	AssignmentExpression	* core = ( RCore * ) user		4074710	2		=			
ANR	4074718	Identifier	core		4074710	0					
ANR	4074719	CastExpression	( RCore * ) user		4074710	1					
ANR	4074720	CastTarget	RCore *		4074710	0					
ANR	4074721	Identifier	user		4074710	1					
ANR	4074722	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2238:1:61160:61200	4074710	1	True				
ANR	4074723	IdentifierDecl	* node = ( RConfigNode * ) data		4074710	0					
ANR	4074724	IdentifierDeclType	RConfigNode *		4074710	0					
ANR	4074725	Identifier	node		4074710	1					
ANR	4074726	AssignmentExpression	* node = ( RConfigNode * ) data		4074710	2		=			
ANR	4074727	Identifier	node		4074710	0					
ANR	4074728	CastExpression	( RConfigNode * ) data		4074710	1					
ANR	4074729	CastTarget	RConfigNode *		4074710	0					
ANR	4074730	Identifier	data		4074710	1					
ANR	4074731	ExpressionStatement	core -> dbg -> trace -> tag = node -> i_value	2239:1:61203:61240	4074710	2	True				
ANR	4074732	AssignmentExpression	core -> dbg -> trace -> tag = node -> i_value		4074710	0		=			
ANR	4074733	PtrMemberAccess	core -> dbg -> trace -> tag		4074710	0					
ANR	4074734	PtrMemberAccess	core -> dbg -> trace		4074710	0					
ANR	4074735	PtrMemberAccess	core -> dbg		4074710	0					
ANR	4074736	Identifier	core		4074710	0					
ANR	4074737	Identifier	dbg		4074710	1					
ANR	4074738	Identifier	trace		4074710	1					
ANR	4074739	Identifier	tag		4074710	1					
ANR	4074740	PtrMemberAccess	node -> i_value		4074710	1					
ANR	4074741	Identifier	node		4074710	0					
ANR	4074742	Identifier	i_value		4074710	1					
ANR	4074743	ReturnStatement	return true ;	2240:1:61243:61254	4074710	3	True				
ANR	4074744	Identifier	true		4074710	0					
ANR	4074745	ReturnType	static bool		4074710	1					
ANR	4074746	Identifier	cb_tracetag		4074710	2					
ANR	4074747	ParameterList	"void * user , void * data"		4074710	3					
ANR	4074748	Parameter	void * user	2236:24:61102:61111	4074710	0	True				
ANR	4074749	ParameterType	void *		4074710	0					
ANR	4074750	Identifier	user		4074710	1					
ANR	4074751	Parameter	void * data	2236:36:61114:61123	4074710	1	True				
ANR	4074752	ParameterType	void *		4074710	0					
ANR	4074753	Identifier	data		4074710	1					
ANR	4074754	CFGEntryNode	ENTRY		4074710		True				
ANR	4074755	CFGExitNode	EXIT		4074710		True				
ANR	4074756	Symbol	data		4074710						
ANR	4074757	Symbol	core -> dbg -> trace -> tag		4074710						
ANR	4074758	Symbol	* core		4074710						
ANR	4074759	Symbol	* core -> dbg -> trace		4074710						
ANR	4074760	Symbol	node -> i_value		4074710						
ANR	4074761	Symbol	core		4074710						
ANR	4074762	Symbol	node		4074710						
ANR	4074763	Symbol	* * * core		4074710						
ANR	4074764	Symbol	core -> dbg -> trace		4074710						
ANR	4074765	Symbol	true		4074710						
ANR	4074766	Symbol	* node		4074710						
ANR	4074767	Symbol	user		4074710						
ANR	4074768	Symbol	* core -> dbg		4074710						
ANR	4074769	Symbol	* * core		4074710						
ANR	4074770	Symbol	core -> dbg		4074710						
ANR	4074771	Symbol	* * core -> dbg		4074710						
ANR	4074772	Function	cb_utf8	2243:0:61259:61432							
ANR	4074773	FunctionDef	"cb_utf8 (void * user , void * data)"		4074772	0					
ANR	4074774	CompoundStatement		2243:44:61303:61432	4074772	0					
ANR	4074775	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2244:1:61306:61334	4074772	0	True				
ANR	4074776	IdentifierDecl	* core = ( RCore * ) user		4074772	0					
ANR	4074777	IdentifierDeclType	RCore *		4074772	0					
ANR	4074778	Identifier	core		4074772	1					
ANR	4074779	AssignmentExpression	* core = ( RCore * ) user		4074772	2		=			
ANR	4074780	Identifier	core		4074772	0					
ANR	4074781	CastExpression	( RCore * ) user		4074772	1					
ANR	4074782	CastTarget	RCore *		4074772	0					
ANR	4074783	Identifier	user		4074772	1					
ANR	4074784	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2245:1:61337:61377	4074772	1	True				
ANR	4074785	IdentifierDecl	* node = ( RConfigNode * ) data		4074772	0					
ANR	4074786	IdentifierDeclType	RConfigNode *		4074772	0					
ANR	4074787	Identifier	node		4074772	1					
ANR	4074788	AssignmentExpression	* node = ( RConfigNode * ) data		4074772	2		=			
ANR	4074789	Identifier	node		4074772	0					
ANR	4074790	CastExpression	( RConfigNode * ) data		4074772	1					
ANR	4074791	CastTarget	RConfigNode *		4074772	0					
ANR	4074792	Identifier	data		4074772	1					
ANR	4074793	ExpressionStatement	core -> cons -> use_utf8 = node -> i_value	2246:1:61380:61416	4074772	2	True				
ANR	4074794	AssignmentExpression	core -> cons -> use_utf8 = node -> i_value		4074772	0		=			
ANR	4074795	PtrMemberAccess	core -> cons -> use_utf8		4074772	0					
ANR	4074796	PtrMemberAccess	core -> cons		4074772	0					
ANR	4074797	Identifier	core		4074772	0					
ANR	4074798	Identifier	cons		4074772	1					
ANR	4074799	Identifier	use_utf8		4074772	1					
ANR	4074800	PtrMemberAccess	node -> i_value		4074772	1					
ANR	4074801	Identifier	node		4074772	0					
ANR	4074802	Identifier	i_value		4074772	1					
ANR	4074803	ReturnStatement	return true ;	2247:1:61419:61430	4074772	3	True				
ANR	4074804	Identifier	true		4074772	0					
ANR	4074805	ReturnType	static bool		4074772	1					
ANR	4074806	Identifier	cb_utf8		4074772	2					
ANR	4074807	ParameterList	"void * user , void * data"		4074772	3					
ANR	4074808	Parameter	void * user	2243:20:61279:61288	4074772	0	True				
ANR	4074809	ParameterType	void *		4074772	0					
ANR	4074810	Identifier	user		4074772	1					
ANR	4074811	Parameter	void * data	2243:32:61291:61300	4074772	1	True				
ANR	4074812	ParameterType	void *		4074772	0					
ANR	4074813	Identifier	data		4074772	1					
ANR	4074814	CFGEntryNode	ENTRY		4074772		True				
ANR	4074815	CFGExitNode	EXIT		4074772		True				
ANR	4074816	Symbol	core		4074772						
ANR	4074817	Symbol	node		4074772						
ANR	4074818	Symbol	core -> cons -> use_utf8		4074772						
ANR	4074819	Symbol	core -> cons		4074772						
ANR	4074820	Symbol	data		4074772						
ANR	4074821	Symbol	* core -> cons		4074772						
ANR	4074822	Symbol	* core		4074772						
ANR	4074823	Symbol	true		4074772						
ANR	4074824	Symbol	* node		4074772						
ANR	4074825	Symbol	user		4074772						
ANR	4074826	Symbol	* * core		4074772						
ANR	4074827	Symbol	node -> i_value		4074772						
ANR	4074828	Function	cb_utf8_curvy	2250:0:61435:61620							
ANR	4074829	FunctionDef	"cb_utf8_curvy (void * user , void * data)"		4074828	0					
ANR	4074830	CompoundStatement		2250:50:61485:61620	4074828	0					
ANR	4074831	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2251:1:61488:61516	4074828	0	True				
ANR	4074832	IdentifierDecl	* core = ( RCore * ) user		4074828	0					
ANR	4074833	IdentifierDeclType	RCore *		4074828	0					
ANR	4074834	Identifier	core		4074828	1					
ANR	4074835	AssignmentExpression	* core = ( RCore * ) user		4074828	2		=			
ANR	4074836	Identifier	core		4074828	0					
ANR	4074837	CastExpression	( RCore * ) user		4074828	1					
ANR	4074838	CastTarget	RCore *		4074828	0					
ANR	4074839	Identifier	user		4074828	1					
ANR	4074840	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2252:1:61519:61559	4074828	1	True				
ANR	4074841	IdentifierDecl	* node = ( RConfigNode * ) data		4074828	0					
ANR	4074842	IdentifierDeclType	RConfigNode *		4074828	0					
ANR	4074843	Identifier	node		4074828	1					
ANR	4074844	AssignmentExpression	* node = ( RConfigNode * ) data		4074828	2		=			
ANR	4074845	Identifier	node		4074828	0					
ANR	4074846	CastExpression	( RConfigNode * ) data		4074828	1					
ANR	4074847	CastTarget	RConfigNode *		4074828	0					
ANR	4074848	Identifier	data		4074828	1					
ANR	4074849	ExpressionStatement	core -> cons -> use_utf8_curvy = node -> i_value	2253:1:61562:61604	4074828	2	True				
ANR	4074850	AssignmentExpression	core -> cons -> use_utf8_curvy = node -> i_value		4074828	0		=			
ANR	4074851	PtrMemberAccess	core -> cons -> use_utf8_curvy		4074828	0					
ANR	4074852	PtrMemberAccess	core -> cons		4074828	0					
ANR	4074853	Identifier	core		4074828	0					
ANR	4074854	Identifier	cons		4074828	1					
ANR	4074855	Identifier	use_utf8_curvy		4074828	1					
ANR	4074856	PtrMemberAccess	node -> i_value		4074828	1					
ANR	4074857	Identifier	node		4074828	0					
ANR	4074858	Identifier	i_value		4074828	1					
ANR	4074859	ReturnStatement	return true ;	2254:1:61607:61618	4074828	3	True				
ANR	4074860	Identifier	true		4074828	0					
ANR	4074861	ReturnType	static bool		4074828	1					
ANR	4074862	Identifier	cb_utf8_curvy		4074828	2					
ANR	4074863	ParameterList	"void * user , void * data"		4074828	3					
ANR	4074864	Parameter	void * user	2250:26:61461:61470	4074828	0	True				
ANR	4074865	ParameterType	void *		4074828	0					
ANR	4074866	Identifier	user		4074828	1					
ANR	4074867	Parameter	void * data	2250:38:61473:61482	4074828	1	True				
ANR	4074868	ParameterType	void *		4074828	0					
ANR	4074869	Identifier	data		4074828	1					
ANR	4074870	CFGEntryNode	ENTRY		4074828		True				
ANR	4074871	CFGExitNode	EXIT		4074828		True				
ANR	4074872	Symbol	core		4074828						
ANR	4074873	Symbol	node		4074828						
ANR	4074874	Symbol	core -> cons -> use_utf8_curvy		4074828						
ANR	4074875	Symbol	core -> cons		4074828						
ANR	4074876	Symbol	data		4074828						
ANR	4074877	Symbol	* core -> cons		4074828						
ANR	4074878	Symbol	* core		4074828						
ANR	4074879	Symbol	true		4074828						
ANR	4074880	Symbol	* node		4074828						
ANR	4074881	Symbol	user		4074828						
ANR	4074882	Symbol	* * core		4074828						
ANR	4074883	Symbol	node -> i_value		4074828						
ANR	4074884	Function	cb_dotted	2257:0:61623:61802							
ANR	4074885	FunctionDef	"cb_dotted (void * user , void * data)"		4074884	0					
ANR	4074886	CompoundStatement		2257:46:61669:61802	4074884	0					
ANR	4074887	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2258:1:61672:61700	4074884	0	True				
ANR	4074888	IdentifierDecl	* core = ( RCore * ) user		4074884	0					
ANR	4074889	IdentifierDeclType	RCore *		4074884	0					
ANR	4074890	Identifier	core		4074884	1					
ANR	4074891	AssignmentExpression	* core = ( RCore * ) user		4074884	2		=			
ANR	4074892	Identifier	core		4074884	0					
ANR	4074893	CastExpression	( RCore * ) user		4074884	1					
ANR	4074894	CastTarget	RCore *		4074884	0					
ANR	4074895	Identifier	user		4074884	1					
ANR	4074896	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2259:1:61703:61743	4074884	1	True				
ANR	4074897	IdentifierDecl	* node = ( RConfigNode * ) data		4074884	0					
ANR	4074898	IdentifierDeclType	RConfigNode *		4074884	0					
ANR	4074899	Identifier	node		4074884	1					
ANR	4074900	AssignmentExpression	* node = ( RConfigNode * ) data		4074884	2		=			
ANR	4074901	Identifier	node		4074884	0					
ANR	4074902	CastExpression	( RConfigNode * ) data		4074884	1					
ANR	4074903	CastTarget	RConfigNode *		4074884	0					
ANR	4074904	Identifier	data		4074884	1					
ANR	4074905	ExpressionStatement	core -> cons -> dotted_lines = node -> i_value	2260:1:61746:61786	4074884	2	True				
ANR	4074906	AssignmentExpression	core -> cons -> dotted_lines = node -> i_value		4074884	0		=			
ANR	4074907	PtrMemberAccess	core -> cons -> dotted_lines		4074884	0					
ANR	4074908	PtrMemberAccess	core -> cons		4074884	0					
ANR	4074909	Identifier	core		4074884	0					
ANR	4074910	Identifier	cons		4074884	1					
ANR	4074911	Identifier	dotted_lines		4074884	1					
ANR	4074912	PtrMemberAccess	node -> i_value		4074884	1					
ANR	4074913	Identifier	node		4074884	0					
ANR	4074914	Identifier	i_value		4074884	1					
ANR	4074915	ReturnStatement	return true ;	2261:1:61789:61800	4074884	3	True				
ANR	4074916	Identifier	true		4074884	0					
ANR	4074917	ReturnType	static bool		4074884	1					
ANR	4074918	Identifier	cb_dotted		4074884	2					
ANR	4074919	ParameterList	"void * user , void * data"		4074884	3					
ANR	4074920	Parameter	void * user	2257:22:61645:61654	4074884	0	True				
ANR	4074921	ParameterType	void *		4074884	0					
ANR	4074922	Identifier	user		4074884	1					
ANR	4074923	Parameter	void * data	2257:34:61657:61666	4074884	1	True				
ANR	4074924	ParameterType	void *		4074884	0					
ANR	4074925	Identifier	data		4074884	1					
ANR	4074926	CFGEntryNode	ENTRY		4074884		True				
ANR	4074927	CFGExitNode	EXIT		4074884		True				
ANR	4074928	Symbol	core		4074884						
ANR	4074929	Symbol	node		4074884						
ANR	4074930	Symbol	core -> cons		4074884						
ANR	4074931	Symbol	data		4074884						
ANR	4074932	Symbol	* core -> cons		4074884						
ANR	4074933	Symbol	* core		4074884						
ANR	4074934	Symbol	true		4074884						
ANR	4074935	Symbol	* node		4074884						
ANR	4074936	Symbol	core -> cons -> dotted_lines		4074884						
ANR	4074937	Symbol	user		4074884						
ANR	4074938	Symbol	* * core		4074884						
ANR	4074939	Symbol	node -> i_value		4074884						
ANR	4074940	Function	cb_zoombyte	2264:0:61805:62236							
ANR	4074941	FunctionDef	"cb_zoombyte (void * user , void * data)"		4074940	0					
ANR	4074942	CompoundStatement		2264:48:61853:62236	4074940	0					
ANR	4074943	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2265:1:61856:61884	4074940	0	True				
ANR	4074944	IdentifierDecl	* core = ( RCore * ) user		4074940	0					
ANR	4074945	IdentifierDeclType	RCore *		4074940	0					
ANR	4074946	Identifier	core		4074940	1					
ANR	4074947	AssignmentExpression	* core = ( RCore * ) user		4074940	2		=			
ANR	4074948	Identifier	core		4074940	0					
ANR	4074949	CastExpression	( RCore * ) user		4074940	1					
ANR	4074950	CastTarget	RCore *		4074940	0					
ANR	4074951	Identifier	user		4074940	1					
ANR	4074952	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2266:1:61887:61927	4074940	1	True				
ANR	4074953	IdentifierDecl	* node = ( RConfigNode * ) data		4074940	0					
ANR	4074954	IdentifierDeclType	RConfigNode *		4074940	0					
ANR	4074955	Identifier	node		4074940	1					
ANR	4074956	AssignmentExpression	* node = ( RConfigNode * ) data		4074940	2		=			
ANR	4074957	Identifier	node		4074940	0					
ANR	4074958	CastExpression	( RConfigNode * ) data		4074940	1					
ANR	4074959	CastTarget	RConfigNode *		4074940	0					
ANR	4074960	Identifier	data		4074940	1					
ANR	4074961	SwitchStatement	switch ( * node -> value )		4074940	2					
ANR	4074962	Condition	* node -> value	2267:9:61938:61949	4074940	0	True				
ANR	4074963	UnaryOperationExpression	* node -> value		4074940	0					
ANR	4074964	UnaryOperator	*		4074940	0					
ANR	4074965	PtrMemberAccess	node -> value		4074940	1					
ANR	4074966	Identifier	node		4074940	0					
ANR	4074967	Identifier	value		4074940	1					
ANR	4074968	CompoundStatement		4:23:98:98	4074940	1					
ANR	4074969	Label	case 'p' :	2268:1:61955:61963	4074940	0	True				
ANR	4074970	Label	case 'f' :	2268:11:61965:61973	4074940	1	True				
ANR	4074971	Label	case 's' :	2268:21:61975:61983	4074940	2	True				
ANR	4074972	Label	case '0' :	2268:31:61985:61993	4074940	3	True				
ANR	4074973	Label	case 'F' :	2269:1:61996:62004	4074940	4	True				
ANR	4074974	Label	case 'e' :	2269:11:62006:62014	4074940	5	True				
ANR	4074975	Label	case 'h' :	2269:21:62016:62024	4074940	6	True				
ANR	4074976	ExpressionStatement	core -> print -> zoom -> mode = * node -> value	2270:2:62028:62066	4074940	7	True				
ANR	4074977	AssignmentExpression	core -> print -> zoom -> mode = * node -> value		4074940	0		=			
ANR	4074978	PtrMemberAccess	core -> print -> zoom -> mode		4074940	0					
ANR	4074979	PtrMemberAccess	core -> print -> zoom		4074940	0					
ANR	4074980	PtrMemberAccess	core -> print		4074940	0					
ANR	4074981	Identifier	core		4074940	0					
ANR	4074982	Identifier	print		4074940	1					
ANR	4074983	Identifier	zoom		4074940	1					
ANR	4074984	Identifier	mode		4074940	1					
ANR	4074985	UnaryOperationExpression	* node -> value		4074940	1					
ANR	4074986	UnaryOperator	*		4074940	0					
ANR	4074987	PtrMemberAccess	node -> value		4074940	1					
ANR	4074988	Identifier	node		4074940	0					
ANR	4074989	Identifier	value		4074940	1					
ANR	4074990	BreakStatement	break ;	2271:2:62070:62075	4074940	8	True				
ANR	4074991	Label	default :	2272:1:62078:62085	4074940	9	True				
ANR	4074992	Identifier	default		4074940	0					
ANR	4074993	ExpressionStatement	"eprintf ( ""Invalid zoom.byte value. See pz? for help\\n"" )"	2273:2:62089:62144	4074940	10	True				
ANR	4074994	CallExpression	"eprintf ( ""Invalid zoom.byte value. See pz? for help\\n"" )"		4074940	0					
ANR	4074995	Callee	eprintf		4074940	0					
ANR	4074996	Identifier	eprintf		4074940	0					
ANR	4074997	ArgumentList	"""Invalid zoom.byte value. See pz? for help\\n"""		4074940	1					
ANR	4074998	Argument	"""Invalid zoom.byte value. See pz? for help\\n"""		4074940	0					
ANR	4074999	PrimaryExpression	"""Invalid zoom.byte value. See pz? for help\\n"""		4074940	0					
ANR	4075000	ExpressionStatement	"r_cons_printf ( ""pzp\\npzf\\npzs\\npz0\\npzF\\npze\\npzh\\n"" )"	2274:2:62148:62201	4074940	11	True				
ANR	4075001	CallExpression	"r_cons_printf ( ""pzp\\npzf\\npzs\\npz0\\npzF\\npze\\npzh\\n"" )"		4074940	0					
ANR	4075002	Callee	r_cons_printf		4074940	0					
ANR	4075003	Identifier	r_cons_printf		4074940	0					
ANR	4075004	ArgumentList	"""pzp\\npzf\\npzs\\npz0\\npzF\\npze\\npzh\\n"""		4074940	1					
ANR	4075005	Argument	"""pzp\\npzf\\npzs\\npz0\\npzF\\npze\\npzh\\n"""		4074940	0					
ANR	4075006	PrimaryExpression	"""pzp\\npzf\\npzs\\npz0\\npzF\\npze\\npzh\\n"""		4074940	0					
ANR	4075007	ReturnStatement	return false ;	2275:2:62205:62217	4074940	12	True				
ANR	4075008	Identifier	false		4074940	0					
ANR	4075009	ReturnStatement	return true ;	2277:1:62223:62234	4074940	3	True				
ANR	4075010	Identifier	true		4074940	0					
ANR	4075011	ReturnType	static bool		4074940	1					
ANR	4075012	Identifier	cb_zoombyte		4074940	2					
ANR	4075013	ParameterList	"void * user , void * data"		4074940	3					
ANR	4075014	Parameter	void * user	2264:24:61829:61838	4074940	0	True				
ANR	4075015	ParameterType	void *		4074940	0					
ANR	4075016	Identifier	user		4074940	1					
ANR	4075017	Parameter	void * data	2264:36:61841:61850	4074940	1	True				
ANR	4075018	ParameterType	void *		4074940	0					
ANR	4075019	Identifier	data		4074940	1					
ANR	4075020	CFGEntryNode	ENTRY		4074940		True				
ANR	4075021	CFGExitNode	EXIT		4074940		True				
ANR	4075022	Symbol	* core -> print -> zoom		4074940						
ANR	4075023	Symbol	* node -> value		4074940						
ANR	4075024	Symbol	data		4074940						
ANR	4075025	Symbol	* * core -> print		4074940						
ANR	4075026	Symbol	* core		4074940						
ANR	4075027	Symbol	false		4074940						
ANR	4075028	Symbol	node -> value		4074940						
ANR	4075029	Symbol	core -> print -> zoom -> mode		4074940						
ANR	4075030	Symbol	core		4074940						
ANR	4075031	Symbol	node		4074940						
ANR	4075032	Symbol	core -> print -> zoom		4074940						
ANR	4075033	Symbol	* * * core		4074940						
ANR	4075034	Symbol	* core -> print		4074940						
ANR	4075035	Symbol	* * node		4074940						
ANR	4075036	Symbol	true		4074940						
ANR	4075037	Symbol	* node		4074940						
ANR	4075038	Symbol	core -> print		4074940						
ANR	4075039	Symbol	user		4074940						
ANR	4075040	Symbol	* * core		4074940						
ANR	4075041	Function	cb_analex	2280:0:62239:62412							
ANR	4075042	FunctionDef	"cb_analex (void * user , void * data)"		4075041	0					
ANR	4075043	CompoundStatement		2280:46:62285:62412	4075041	0					
ANR	4075044	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2281:1:62288:62316	4075041	0	True				
ANR	4075045	IdentifierDecl	* core = ( RCore * ) user		4075041	0					
ANR	4075046	IdentifierDeclType	RCore *		4075041	0					
ANR	4075047	Identifier	core		4075041	1					
ANR	4075048	AssignmentExpression	* core = ( RCore * ) user		4075041	2		=			
ANR	4075049	Identifier	core		4075041	0					
ANR	4075050	CastExpression	( RCore * ) user		4075041	1					
ANR	4075051	CastTarget	RCore *		4075041	0					
ANR	4075052	Identifier	user		4075041	1					
ANR	4075053	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2282:1:62319:62359	4075041	1	True				
ANR	4075054	IdentifierDecl	* node = ( RConfigNode * ) data		4075041	0					
ANR	4075055	IdentifierDeclType	RConfigNode *		4075041	0					
ANR	4075056	Identifier	node		4075041	1					
ANR	4075057	AssignmentExpression	* node = ( RConfigNode * ) data		4075041	2		=			
ANR	4075058	Identifier	node		4075041	0					
ANR	4075059	CastExpression	( RConfigNode * ) data		4075041	1					
ANR	4075060	CastTarget	RConfigNode *		4075041	0					
ANR	4075061	Identifier	data		4075041	1					
ANR	4075062	ExpressionStatement	core -> anal -> use_ex = node -> i_value	2283:1:62362:62396	4075041	2	True				
ANR	4075063	AssignmentExpression	core -> anal -> use_ex = node -> i_value		4075041	0		=			
ANR	4075064	PtrMemberAccess	core -> anal -> use_ex		4075041	0					
ANR	4075065	PtrMemberAccess	core -> anal		4075041	0					
ANR	4075066	Identifier	core		4075041	0					
ANR	4075067	Identifier	anal		4075041	1					
ANR	4075068	Identifier	use_ex		4075041	1					
ANR	4075069	PtrMemberAccess	node -> i_value		4075041	1					
ANR	4075070	Identifier	node		4075041	0					
ANR	4075071	Identifier	i_value		4075041	1					
ANR	4075072	ReturnStatement	return true ;	2284:1:62399:62410	4075041	3	True				
ANR	4075073	Identifier	true		4075041	0					
ANR	4075074	ReturnType	static bool		4075041	1					
ANR	4075075	Identifier	cb_analex		4075041	2					
ANR	4075076	ParameterList	"void * user , void * data"		4075041	3					
ANR	4075077	Parameter	void * user	2280:22:62261:62270	4075041	0	True				
ANR	4075078	ParameterType	void *		4075041	0					
ANR	4075079	Identifier	user		4075041	1					
ANR	4075080	Parameter	void * data	2280:34:62273:62282	4075041	1	True				
ANR	4075081	ParameterType	void *		4075041	0					
ANR	4075082	Identifier	data		4075041	1					
ANR	4075083	CFGEntryNode	ENTRY		4075041		True				
ANR	4075084	CFGExitNode	EXIT		4075041		True				
ANR	4075085	Symbol	core		4075041						
ANR	4075086	Symbol	node		4075041						
ANR	4075087	Symbol	* core -> anal		4075041						
ANR	4075088	Symbol	data		4075041						
ANR	4075089	Symbol	* core		4075041						
ANR	4075090	Symbol	true		4075041						
ANR	4075091	Symbol	* node		4075041						
ANR	4075092	Symbol	user		4075041						
ANR	4075093	Symbol	core -> anal		4075041						
ANR	4075094	Symbol	* * core		4075041						
ANR	4075095	Symbol	core -> anal -> use_ex		4075041						
ANR	4075096	Symbol	node -> i_value		4075041						
ANR	4075097	Function	cb_analverbose	2287:0:62415:62594							
ANR	4075098	FunctionDef	"cb_analverbose (void * user , void * data)"		4075097	0					
ANR	4075099	CompoundStatement		2287:51:62466:62594	4075097	0					
ANR	4075100	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2288:1:62469:62497	4075097	0	True				
ANR	4075101	IdentifierDecl	* core = ( RCore * ) user		4075097	0					
ANR	4075102	IdentifierDeclType	RCore *		4075097	0					
ANR	4075103	Identifier	core		4075097	1					
ANR	4075104	AssignmentExpression	* core = ( RCore * ) user		4075097	2		=			
ANR	4075105	Identifier	core		4075097	0					
ANR	4075106	CastExpression	( RCore * ) user		4075097	1					
ANR	4075107	CastTarget	RCore *		4075097	0					
ANR	4075108	Identifier	user		4075097	1					
ANR	4075109	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2289:1:62500:62540	4075097	1	True				
ANR	4075110	IdentifierDecl	* node = ( RConfigNode * ) data		4075097	0					
ANR	4075111	IdentifierDeclType	RConfigNode *		4075097	0					
ANR	4075112	Identifier	node		4075097	1					
ANR	4075113	AssignmentExpression	* node = ( RConfigNode * ) data		4075097	2		=			
ANR	4075114	Identifier	node		4075097	0					
ANR	4075115	CastExpression	( RConfigNode * ) data		4075097	1					
ANR	4075116	CastTarget	RConfigNode *		4075097	0					
ANR	4075117	Identifier	data		4075097	1					
ANR	4075118	ExpressionStatement	core -> anal -> verbose = node -> i_value	2290:1:62543:62578	4075097	2	True				
ANR	4075119	AssignmentExpression	core -> anal -> verbose = node -> i_value		4075097	0		=			
ANR	4075120	PtrMemberAccess	core -> anal -> verbose		4075097	0					
ANR	4075121	PtrMemberAccess	core -> anal		4075097	0					
ANR	4075122	Identifier	core		4075097	0					
ANR	4075123	Identifier	anal		4075097	1					
ANR	4075124	Identifier	verbose		4075097	1					
ANR	4075125	PtrMemberAccess	node -> i_value		4075097	1					
ANR	4075126	Identifier	node		4075097	0					
ANR	4075127	Identifier	i_value		4075097	1					
ANR	4075128	ReturnStatement	return true ;	2291:1:62581:62592	4075097	3	True				
ANR	4075129	Identifier	true		4075097	0					
ANR	4075130	ReturnType	static bool		4075097	1					
ANR	4075131	Identifier	cb_analverbose		4075097	2					
ANR	4075132	ParameterList	"void * user , void * data"		4075097	3					
ANR	4075133	Parameter	void * user	2287:27:62442:62451	4075097	0	True				
ANR	4075134	ParameterType	void *		4075097	0					
ANR	4075135	Identifier	user		4075097	1					
ANR	4075136	Parameter	void * data	2287:39:62454:62463	4075097	1	True				
ANR	4075137	ParameterType	void *		4075097	0					
ANR	4075138	Identifier	data		4075097	1					
ANR	4075139	CFGEntryNode	ENTRY		4075097		True				
ANR	4075140	CFGExitNode	EXIT		4075097		True				
ANR	4075141	Symbol	core -> anal -> verbose		4075097						
ANR	4075142	Symbol	core		4075097						
ANR	4075143	Symbol	node		4075097						
ANR	4075144	Symbol	* core -> anal		4075097						
ANR	4075145	Symbol	data		4075097						
ANR	4075146	Symbol	* core		4075097						
ANR	4075147	Symbol	true		4075097						
ANR	4075148	Symbol	* node		4075097						
ANR	4075149	Symbol	user		4075097						
ANR	4075150	Symbol	core -> anal		4075097						
ANR	4075151	Symbol	* * core		4075097						
ANR	4075152	Symbol	node -> i_value		4075097						
ANR	4075153	Function	cb_binverbose	2294:0:62597:62774							
ANR	4075154	FunctionDef	"cb_binverbose (void * user , void * data)"		4075153	0					
ANR	4075155	CompoundStatement		2294:50:62647:62774	4075153	0					
ANR	4075156	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2295:1:62650:62678	4075153	0	True				
ANR	4075157	IdentifierDecl	* core = ( RCore * ) user		4075153	0					
ANR	4075158	IdentifierDeclType	RCore *		4075153	0					
ANR	4075159	Identifier	core		4075153	1					
ANR	4075160	AssignmentExpression	* core = ( RCore * ) user		4075153	2		=			
ANR	4075161	Identifier	core		4075153	0					
ANR	4075162	CastExpression	( RCore * ) user		4075153	1					
ANR	4075163	CastTarget	RCore *		4075153	0					
ANR	4075164	Identifier	user		4075153	1					
ANR	4075165	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2296:1:62681:62721	4075153	1	True				
ANR	4075166	IdentifierDecl	* node = ( RConfigNode * ) data		4075153	0					
ANR	4075167	IdentifierDeclType	RConfigNode *		4075153	0					
ANR	4075168	Identifier	node		4075153	1					
ANR	4075169	AssignmentExpression	* node = ( RConfigNode * ) data		4075153	2		=			
ANR	4075170	Identifier	node		4075153	0					
ANR	4075171	CastExpression	( RConfigNode * ) data		4075153	1					
ANR	4075172	CastTarget	RConfigNode *		4075153	0					
ANR	4075173	Identifier	data		4075153	1					
ANR	4075174	ExpressionStatement	core -> bin -> verbose = node -> i_value	2297:1:62724:62758	4075153	2	True				
ANR	4075175	AssignmentExpression	core -> bin -> verbose = node -> i_value		4075153	0		=			
ANR	4075176	PtrMemberAccess	core -> bin -> verbose		4075153	0					
ANR	4075177	PtrMemberAccess	core -> bin		4075153	0					
ANR	4075178	Identifier	core		4075153	0					
ANR	4075179	Identifier	bin		4075153	1					
ANR	4075180	Identifier	verbose		4075153	1					
ANR	4075181	PtrMemberAccess	node -> i_value		4075153	1					
ANR	4075182	Identifier	node		4075153	0					
ANR	4075183	Identifier	i_value		4075153	1					
ANR	4075184	ReturnStatement	return true ;	2298:1:62761:62772	4075153	3	True				
ANR	4075185	Identifier	true		4075153	0					
ANR	4075186	ReturnType	static bool		4075153	1					
ANR	4075187	Identifier	cb_binverbose		4075153	2					
ANR	4075188	ParameterList	"void * user , void * data"		4075153	3					
ANR	4075189	Parameter	void * user	2294:26:62623:62632	4075153	0	True				
ANR	4075190	ParameterType	void *		4075153	0					
ANR	4075191	Identifier	user		4075153	1					
ANR	4075192	Parameter	void * data	2294:38:62635:62644	4075153	1	True				
ANR	4075193	ParameterType	void *		4075153	0					
ANR	4075194	Identifier	data		4075153	1					
ANR	4075195	CFGEntryNode	ENTRY		4075153		True				
ANR	4075196	CFGExitNode	EXIT		4075153		True				
ANR	4075197	Symbol	core		4075153						
ANR	4075198	Symbol	node		4075153						
ANR	4075199	Symbol	data		4075153						
ANR	4075200	Symbol	core -> bin -> verbose		4075153						
ANR	4075201	Symbol	* core		4075153						
ANR	4075202	Symbol	true		4075153						
ANR	4075203	Symbol	* node		4075153						
ANR	4075204	Symbol	* core -> bin		4075153						
ANR	4075205	Symbol	user		4075153						
ANR	4075206	Symbol	core -> bin		4075153						
ANR	4075207	Symbol	* * core		4075153						
ANR	4075208	Symbol	node -> i_value		4075153						
ANR	4075209	Function	cb_rawstr	2301:0:62777:62949							
ANR	4075210	FunctionDef	"cb_rawstr (void * user , void * data)"		4075209	0					
ANR	4075211	CompoundStatement		2301:46:62823:62949	4075209	0					
ANR	4075212	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2302:1:62826:62854	4075209	0	True				
ANR	4075213	IdentifierDecl	* core = ( RCore * ) user		4075209	0					
ANR	4075214	IdentifierDeclType	RCore *		4075209	0					
ANR	4075215	Identifier	core		4075209	1					
ANR	4075216	AssignmentExpression	* core = ( RCore * ) user		4075209	2		=			
ANR	4075217	Identifier	core		4075209	0					
ANR	4075218	CastExpression	( RCore * ) user		4075209	1					
ANR	4075219	CastTarget	RCore *		4075209	0					
ANR	4075220	Identifier	user		4075209	1					
ANR	4075221	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2303:1:62857:62897	4075209	1	True				
ANR	4075222	IdentifierDecl	* node = ( RConfigNode * ) data		4075209	0					
ANR	4075223	IdentifierDeclType	RConfigNode *		4075209	0					
ANR	4075224	Identifier	node		4075209	1					
ANR	4075225	AssignmentExpression	* node = ( RConfigNode * ) data		4075209	2		=			
ANR	4075226	Identifier	node		4075209	0					
ANR	4075227	CastExpression	( RConfigNode * ) data		4075209	1					
ANR	4075228	CastTarget	RConfigNode *		4075209	0					
ANR	4075229	Identifier	data		4075209	1					
ANR	4075230	ExpressionStatement	core -> bin -> rawstr = node -> i_value	2304:1:62900:62933	4075209	2	True				
ANR	4075231	AssignmentExpression	core -> bin -> rawstr = node -> i_value		4075209	0		=			
ANR	4075232	PtrMemberAccess	core -> bin -> rawstr		4075209	0					
ANR	4075233	PtrMemberAccess	core -> bin		4075209	0					
ANR	4075234	Identifier	core		4075209	0					
ANR	4075235	Identifier	bin		4075209	1					
ANR	4075236	Identifier	rawstr		4075209	1					
ANR	4075237	PtrMemberAccess	node -> i_value		4075209	1					
ANR	4075238	Identifier	node		4075209	0					
ANR	4075239	Identifier	i_value		4075209	1					
ANR	4075240	ReturnStatement	return true ;	2305:1:62936:62947	4075209	3	True				
ANR	4075241	Identifier	true		4075209	0					
ANR	4075242	ReturnType	static bool		4075209	1					
ANR	4075243	Identifier	cb_rawstr		4075209	2					
ANR	4075244	ParameterList	"void * user , void * data"		4075209	3					
ANR	4075245	Parameter	void * user	2301:22:62799:62808	4075209	0	True				
ANR	4075246	ParameterType	void *		4075209	0					
ANR	4075247	Identifier	user		4075209	1					
ANR	4075248	Parameter	void * data	2301:34:62811:62820	4075209	1	True				
ANR	4075249	ParameterType	void *		4075209	0					
ANR	4075250	Identifier	data		4075209	1					
ANR	4075251	CFGEntryNode	ENTRY		4075209		True				
ANR	4075252	CFGExitNode	EXIT		4075209		True				
ANR	4075253	Symbol	core		4075209						
ANR	4075254	Symbol	node		4075209						
ANR	4075255	Symbol	data		4075209						
ANR	4075256	Symbol	core -> bin -> rawstr		4075209						
ANR	4075257	Symbol	* core		4075209						
ANR	4075258	Symbol	true		4075209						
ANR	4075259	Symbol	* node		4075209						
ANR	4075260	Symbol	* core -> bin		4075209						
ANR	4075261	Symbol	user		4075209						
ANR	4075262	Symbol	core -> bin		4075209						
ANR	4075263	Symbol	* * core		4075209						
ANR	4075264	Symbol	node -> i_value		4075209						
ANR	4075265	Function	cb_debase64	2308:0:62952:63128							
ANR	4075266	FunctionDef	"cb_debase64 (void * user , void * data)"		4075265	0					
ANR	4075267	CompoundStatement		2308:48:63000:63128	4075265	0					
ANR	4075268	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2309:1:63003:63031	4075265	0	True				
ANR	4075269	IdentifierDecl	* core = ( RCore * ) user		4075265	0					
ANR	4075270	IdentifierDeclType	RCore *		4075265	0					
ANR	4075271	Identifier	core		4075265	1					
ANR	4075272	AssignmentExpression	* core = ( RCore * ) user		4075265	2		=			
ANR	4075273	Identifier	core		4075265	0					
ANR	4075274	CastExpression	( RCore * ) user		4075265	1					
ANR	4075275	CastTarget	RCore *		4075265	0					
ANR	4075276	Identifier	user		4075265	1					
ANR	4075277	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2310:1:63034:63074	4075265	1	True				
ANR	4075278	IdentifierDecl	* node = ( RConfigNode * ) data		4075265	0					
ANR	4075279	IdentifierDeclType	RConfigNode *		4075265	0					
ANR	4075280	Identifier	node		4075265	1					
ANR	4075281	AssignmentExpression	* node = ( RConfigNode * ) data		4075265	2		=			
ANR	4075282	Identifier	node		4075265	0					
ANR	4075283	CastExpression	( RConfigNode * ) data		4075265	1					
ANR	4075284	CastTarget	RConfigNode *		4075265	0					
ANR	4075285	Identifier	data		4075265	1					
ANR	4075286	ExpressionStatement	core -> bin -> debase64 = node -> i_value	2311:1:63077:63112	4075265	2	True				
ANR	4075287	AssignmentExpression	core -> bin -> debase64 = node -> i_value		4075265	0		=			
ANR	4075288	PtrMemberAccess	core -> bin -> debase64		4075265	0					
ANR	4075289	PtrMemberAccess	core -> bin		4075265	0					
ANR	4075290	Identifier	core		4075265	0					
ANR	4075291	Identifier	bin		4075265	1					
ANR	4075292	Identifier	debase64		4075265	1					
ANR	4075293	PtrMemberAccess	node -> i_value		4075265	1					
ANR	4075294	Identifier	node		4075265	0					
ANR	4075295	Identifier	i_value		4075265	1					
ANR	4075296	ReturnStatement	return true ;	2312:1:63115:63126	4075265	3	True				
ANR	4075297	Identifier	true		4075265	0					
ANR	4075298	ReturnType	static bool		4075265	1					
ANR	4075299	Identifier	cb_debase64		4075265	2					
ANR	4075300	ParameterList	"void * user , void * data"		4075265	3					
ANR	4075301	Parameter	void * user	2308:24:62976:62985	4075265	0	True				
ANR	4075302	ParameterType	void *		4075265	0					
ANR	4075303	Identifier	user		4075265	1					
ANR	4075304	Parameter	void * data	2308:36:62988:62997	4075265	1	True				
ANR	4075305	ParameterType	void *		4075265	0					
ANR	4075306	Identifier	data		4075265	1					
ANR	4075307	CFGEntryNode	ENTRY		4075265		True				
ANR	4075308	CFGExitNode	EXIT		4075265		True				
ANR	4075309	Symbol	core		4075265						
ANR	4075310	Symbol	node		4075265						
ANR	4075311	Symbol	data		4075265						
ANR	4075312	Symbol	* core		4075265						
ANR	4075313	Symbol	true		4075265						
ANR	4075314	Symbol	* node		4075265						
ANR	4075315	Symbol	* core -> bin		4075265						
ANR	4075316	Symbol	user		4075265						
ANR	4075317	Symbol	core -> bin		4075265						
ANR	4075318	Symbol	* * core		4075265						
ANR	4075319	Symbol	core -> bin -> debase64		4075265						
ANR	4075320	Symbol	node -> i_value		4075265						
ANR	4075321	Function	cb_binstrings	2315:0:63131:63412							
ANR	4075322	FunctionDef	"cb_binstrings (void * user , void * data)"		4075321	0					
ANR	4075323	CompoundStatement		2315:50:63181:63412	4075321	0					
ANR	4075324	IdentifierDeclStatement	const ut32 req = R_BIN_REQ_STRINGS ;	2316:1:63184:63218	4075321	0	True				
ANR	4075325	IdentifierDecl	req = R_BIN_REQ_STRINGS		4075321	0					
ANR	4075326	IdentifierDeclType	const ut32		4075321	0					
ANR	4075327	Identifier	req		4075321	1					
ANR	4075328	AssignmentExpression	req = R_BIN_REQ_STRINGS		4075321	2		=			
ANR	4075329	Identifier	R_BIN_REQ_STRINGS		4075321	0					
ANR	4075330	Identifier	R_BIN_REQ_STRINGS		4075321	1					
ANR	4075331	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2317:1:63221:63249	4075321	1	True				
ANR	4075332	IdentifierDecl	* core = ( RCore * ) user		4075321	0					
ANR	4075333	IdentifierDeclType	RCore *		4075321	0					
ANR	4075334	Identifier	core		4075321	1					
ANR	4075335	AssignmentExpression	* core = ( RCore * ) user		4075321	2		=			
ANR	4075336	Identifier	core		4075321	0					
ANR	4075337	CastExpression	( RCore * ) user		4075321	1					
ANR	4075338	CastTarget	RCore *		4075321	0					
ANR	4075339	Identifier	user		4075321	1					
ANR	4075340	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2318:1:63252:63292	4075321	2	True				
ANR	4075341	IdentifierDecl	* node = ( RConfigNode * ) data		4075321	0					
ANR	4075342	IdentifierDeclType	RConfigNode *		4075321	0					
ANR	4075343	Identifier	node		4075321	1					
ANR	4075344	AssignmentExpression	* node = ( RConfigNode * ) data		4075321	2		=			
ANR	4075345	Identifier	node		4075321	0					
ANR	4075346	CastExpression	( RConfigNode * ) data		4075321	1					
ANR	4075347	CastTarget	RConfigNode *		4075321	0					
ANR	4075348	Identifier	data		4075321	1					
ANR	4075349	IfStatement	if ( node -> i_value )		4075321	3					
ANR	4075350	Condition	node -> i_value	2319:5:63299:63311	4075321	0	True				
ANR	4075351	PtrMemberAccess	node -> i_value		4075321	0					
ANR	4075352	Identifier	node		4075321	0					
ANR	4075353	Identifier	i_value		4075321	1					
ANR	4075354	CompoundStatement		5:20:132:132	4075321	1					
ANR	4075355	ExpressionStatement	core -> bin -> filter_rules |= req	2320:2:63318:63348	4075321	0	True				
ANR	4075356	AssignmentExpression	core -> bin -> filter_rules |= req		4075321	0		|=			
ANR	4075357	PtrMemberAccess	core -> bin -> filter_rules		4075321	0					
ANR	4075358	PtrMemberAccess	core -> bin		4075321	0					
ANR	4075359	Identifier	core		4075321	0					
ANR	4075360	Identifier	bin		4075321	1					
ANR	4075361	Identifier	filter_rules		4075321	1					
ANR	4075362	Identifier	req		4075321	1					
ANR	4075363	ElseStatement	else		4075321	0					
ANR	4075364	CompoundStatement		7:8:176:176	4075321	0					
ANR	4075365	ExpressionStatement	core -> bin -> filter_rules &= ~req	2322:2:63362:63393	4075321	0	True				
ANR	4075366	AssignmentExpression	core -> bin -> filter_rules &= ~req		4075321	0		&=			
ANR	4075367	PtrMemberAccess	core -> bin -> filter_rules		4075321	0					
ANR	4075368	PtrMemberAccess	core -> bin		4075321	0					
ANR	4075369	Identifier	core		4075321	0					
ANR	4075370	Identifier	bin		4075321	1					
ANR	4075371	Identifier	filter_rules		4075321	1					
ANR	4075372	Identifier	~req		4075321	1					
ANR	4075373	ReturnStatement	return true ;	2324:1:63399:63410	4075321	4	True				
ANR	4075374	Identifier	true		4075321	0					
ANR	4075375	ReturnType	static bool		4075321	1					
ANR	4075376	Identifier	cb_binstrings		4075321	2					
ANR	4075377	ParameterList	"void * user , void * data"		4075321	3					
ANR	4075378	Parameter	void * user	2315:26:63157:63166	4075321	0	True				
ANR	4075379	ParameterType	void *		4075321	0					
ANR	4075380	Identifier	user		4075321	1					
ANR	4075381	Parameter	void * data	2315:38:63169:63178	4075321	1	True				
ANR	4075382	ParameterType	void *		4075321	0					
ANR	4075383	Identifier	data		4075321	1					
ANR	4075384	CFGEntryNode	ENTRY		4075321		True				
ANR	4075385	CFGExitNode	EXIT		4075321		True				
ANR	4075386	Symbol	data		4075321						
ANR	4075387	Symbol	R_BIN_REQ_STRINGS		4075321						
ANR	4075388	Symbol	* core		4075321						
ANR	4075389	Symbol	node -> i_value		4075321						
ANR	4075390	Symbol	core		4075321						
ANR	4075391	Symbol	node		4075321						
ANR	4075392	Symbol	core -> bin -> filter_rules		4075321						
ANR	4075393	Symbol	true		4075321						
ANR	4075394	Symbol	* node		4075321						
ANR	4075395	Symbol	~req		4075321						
ANR	4075396	Symbol	* core -> bin		4075321						
ANR	4075397	Symbol	user		4075321						
ANR	4075398	Symbol	core -> bin		4075321						
ANR	4075399	Symbol	* * core		4075321						
ANR	4075400	Symbol	req		4075321						
ANR	4075401	Function	cb_bindbginfo	2327:0:63415:63644							
ANR	4075402	FunctionDef	"cb_bindbginfo (void * user , void * data)"		4075401	0					
ANR	4075403	CompoundStatement		2327:50:63465:63644	4075401	0					
ANR	4075404	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2328:1:63468:63496	4075401	0	True				
ANR	4075405	IdentifierDecl	* core = ( RCore * ) user		4075401	0					
ANR	4075406	IdentifierDeclType	RCore *		4075401	0					
ANR	4075407	Identifier	core		4075401	1					
ANR	4075408	AssignmentExpression	* core = ( RCore * ) user		4075401	2		=			
ANR	4075409	Identifier	core		4075401	0					
ANR	4075410	CastExpression	( RCore * ) user		4075401	1					
ANR	4075411	CastTarget	RCore *		4075401	0					
ANR	4075412	Identifier	user		4075401	1					
ANR	4075413	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2329:1:63499:63539	4075401	1	True				
ANR	4075414	IdentifierDecl	* node = ( RConfigNode * ) data		4075401	0					
ANR	4075415	IdentifierDeclType	RConfigNode *		4075401	0					
ANR	4075416	Identifier	node		4075401	1					
ANR	4075417	AssignmentExpression	* node = ( RConfigNode * ) data		4075401	2		=			
ANR	4075418	Identifier	node		4075401	0					
ANR	4075419	CastExpression	( RConfigNode * ) data		4075401	1					
ANR	4075420	CastTarget	RConfigNode *		4075401	0					
ANR	4075421	Identifier	data		4075401	1					
ANR	4075422	IfStatement	if ( ! core || ! core -> bin )		4075401	2					
ANR	4075423	Condition	! core || ! core -> bin	2330:5:63546:63564	4075401	0	True				
ANR	4075424	OrExpression	! core || ! core -> bin		4075401	0		||			
ANR	4075425	UnaryOperationExpression	! core		4075401	0					
ANR	4075426	UnaryOperator	!		4075401	0					
ANR	4075427	Identifier	core		4075401	1					
ANR	4075428	UnaryOperationExpression	! core -> bin		4075401	1					
ANR	4075429	UnaryOperator	!		4075401	0					
ANR	4075430	PtrMemberAccess	core -> bin		4075401	1					
ANR	4075431	Identifier	core		4075401	0					
ANR	4075432	Identifier	bin		4075401	1					
ANR	4075433	CompoundStatement		4:26:101:101	4075401	1					
ANR	4075434	ReturnStatement	return false ;	2331:2:63571:63583	4075401	0	True				
ANR	4075435	Identifier	false		4075401	0					
ANR	4075436	ExpressionStatement	core -> bin -> want_dbginfo = node -> i_value	2333:1:63589:63628	4075401	3	True				
ANR	4075437	AssignmentExpression	core -> bin -> want_dbginfo = node -> i_value		4075401	0		=			
ANR	4075438	PtrMemberAccess	core -> bin -> want_dbginfo		4075401	0					
ANR	4075439	PtrMemberAccess	core -> bin		4075401	0					
ANR	4075440	Identifier	core		4075401	0					
ANR	4075441	Identifier	bin		4075401	1					
ANR	4075442	Identifier	want_dbginfo		4075401	1					
ANR	4075443	PtrMemberAccess	node -> i_value		4075401	1					
ANR	4075444	Identifier	node		4075401	0					
ANR	4075445	Identifier	i_value		4075401	1					
ANR	4075446	ReturnStatement	return true ;	2334:1:63631:63642	4075401	4	True				
ANR	4075447	Identifier	true		4075401	0					
ANR	4075448	ReturnType	static bool		4075401	1					
ANR	4075449	Identifier	cb_bindbginfo		4075401	2					
ANR	4075450	ParameterList	"void * user , void * data"		4075401	3					
ANR	4075451	Parameter	void * user	2327:26:63441:63450	4075401	0	True				
ANR	4075452	ParameterType	void *		4075401	0					
ANR	4075453	Identifier	user		4075401	1					
ANR	4075454	Parameter	void * data	2327:38:63453:63462	4075401	1	True				
ANR	4075455	ParameterType	void *		4075401	0					
ANR	4075456	Identifier	data		4075401	1					
ANR	4075457	CFGEntryNode	ENTRY		4075401		True				
ANR	4075458	CFGExitNode	EXIT		4075401		True				
ANR	4075459	Symbol	data		4075401						
ANR	4075460	Symbol	* core		4075401						
ANR	4075461	Symbol	false		4075401						
ANR	4075462	Symbol	node -> i_value		4075401						
ANR	4075463	Symbol	core		4075401						
ANR	4075464	Symbol	node		4075401						
ANR	4075465	Symbol	core -> bin -> want_dbginfo		4075401						
ANR	4075466	Symbol	true		4075401						
ANR	4075467	Symbol	* node		4075401						
ANR	4075468	Symbol	* core -> bin		4075401						
ANR	4075469	Symbol	user		4075401						
ANR	4075470	Symbol	core -> bin		4075401						
ANR	4075471	Symbol	* * core		4075401						
ANR	4075472	Function	cb_binprefix	2337:0:63647:64228							
ANR	4075473	FunctionDef	"cb_binprefix (void * user , void * data)"		4075472	0					
ANR	4075474	CompoundStatement		2337:49:63696:64228	4075472	0					
ANR	4075475	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2338:1:63699:63727	4075472	0	True				
ANR	4075476	IdentifierDecl	* core = ( RCore * ) user		4075472	0					
ANR	4075477	IdentifierDeclType	RCore *		4075472	0					
ANR	4075478	Identifier	core		4075472	1					
ANR	4075479	AssignmentExpression	* core = ( RCore * ) user		4075472	2		=			
ANR	4075480	Identifier	core		4075472	0					
ANR	4075481	CastExpression	( RCore * ) user		4075472	1					
ANR	4075482	CastTarget	RCore *		4075472	0					
ANR	4075483	Identifier	user		4075472	1					
ANR	4075484	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2339:1:63730:63770	4075472	1	True				
ANR	4075485	IdentifierDecl	* node = ( RConfigNode * ) data		4075472	0					
ANR	4075486	IdentifierDeclType	RConfigNode *		4075472	0					
ANR	4075487	Identifier	node		4075472	1					
ANR	4075488	AssignmentExpression	* node = ( RConfigNode * ) data		4075472	2		=			
ANR	4075489	Identifier	node		4075472	0					
ANR	4075490	CastExpression	( RConfigNode * ) data		4075472	1					
ANR	4075491	CastTarget	RConfigNode *		4075472	0					
ANR	4075492	Identifier	data		4075472	1					
ANR	4075493	IfStatement	if ( ! core || ! core -> bin )		4075472	2					
ANR	4075494	Condition	! core || ! core -> bin	2340:5:63777:63795	4075472	0	True				
ANR	4075495	OrExpression	! core || ! core -> bin		4075472	0		||			
ANR	4075496	UnaryOperationExpression	! core		4075472	0					
ANR	4075497	UnaryOperator	!		4075472	0					
ANR	4075498	Identifier	core		4075472	1					
ANR	4075499	UnaryOperationExpression	! core -> bin		4075472	1					
ANR	4075500	UnaryOperator	!		4075472	0					
ANR	4075501	PtrMemberAccess	core -> bin		4075472	1					
ANR	4075502	Identifier	core		4075472	0					
ANR	4075503	Identifier	bin		4075472	1					
ANR	4075504	CompoundStatement		4:26:101:101	4075472	1					
ANR	4075505	ReturnStatement	return false ;	2341:2:63802:63814	4075472	0	True				
ANR	4075506	Identifier	false		4075472	0					
ANR	4075507	IfStatement	if ( node -> value && * node -> value )		4075472	3					
ANR	4075508	Condition	node -> value && * node -> value	2343:5:63824:63850	4075472	0	True				
ANR	4075509	AndExpression	node -> value && * node -> value		4075472	0		&&			
ANR	4075510	PtrMemberAccess	node -> value		4075472	0					
ANR	4075511	Identifier	node		4075472	0					
ANR	4075512	Identifier	value		4075472	1					
ANR	4075513	UnaryOperationExpression	* node -> value		4075472	1					
ANR	4075514	UnaryOperator	*		4075472	0					
ANR	4075515	PtrMemberAccess	node -> value		4075472	1					
ANR	4075516	Identifier	node		4075472	0					
ANR	4075517	Identifier	value		4075472	1					
ANR	4075518	CompoundStatement		7:34:156:156	4075472	1					
ANR	4075519	IfStatement	"if ( ! strcmp ( node -> value , ""auto"" ) )"		4075472	0					
ANR	4075520	Condition	"! strcmp ( node -> value , ""auto"" )"	2344:6:63861:63889	4075472	0	True				
ANR	4075521	UnaryOperationExpression	"! strcmp ( node -> value , ""auto"" )"		4075472	0					
ANR	4075522	UnaryOperator	!		4075472	0					
ANR	4075523	CallExpression	"strcmp ( node -> value , ""auto"" )"		4075472	1					
ANR	4075524	Callee	strcmp		4075472	0					
ANR	4075525	Identifier	strcmp		4075472	0					
ANR	4075526	ArgumentList	node -> value		4075472	1					
ANR	4075527	Argument	node -> value		4075472	0					
ANR	4075528	PtrMemberAccess	node -> value		4075472	0					
ANR	4075529	Identifier	node		4075472	0					
ANR	4075530	Identifier	value		4075472	1					
ANR	4075531	Argument	"""auto"""		4075472	1					
ANR	4075532	PrimaryExpression	"""auto"""		4075472	0					
ANR	4075533	CompoundStatement		12:3:250:304	4075472	1					
ANR	4075534	IfStatement	if ( ! core -> bin -> file )		4075472	0					
ANR	4075535	Condition	! core -> bin -> file	2345:7:63901:63916	4075472	0	True				
ANR	4075536	UnaryOperationExpression	! core -> bin -> file		4075472	0					
ANR	4075537	UnaryOperator	!		4075472	0					
ANR	4075538	PtrMemberAccess	core -> bin -> file		4075472	1					
ANR	4075539	PtrMemberAccess	core -> bin		4075472	0					
ANR	4075540	Identifier	core		4075472	0					
ANR	4075541	Identifier	bin		4075472	1					
ANR	4075542	Identifier	file		4075472	1					
ANR	4075543	CompoundStatement		9:25:222:222	4075472	1					
ANR	4075544	ReturnStatement	return false ;	2346:4:63925:63937	4075472	0	True				
ANR	4075545	Identifier	false		4075472	0					
ANR	4075546	IdentifierDeclStatement	char * name = ( char * ) r_file_basename ( core -> bin -> file ) ;	2348:3:63947:64001	4075472	1	True				
ANR	4075547	IdentifierDecl	* name = ( char * ) r_file_basename ( core -> bin -> file )		4075472	0					
ANR	4075548	IdentifierDeclType	char *		4075472	0					
ANR	4075549	Identifier	name		4075472	1					
ANR	4075550	AssignmentExpression	* name = ( char * ) r_file_basename ( core -> bin -> file )		4075472	2		=			
ANR	4075551	Identifier	name		4075472	0					
ANR	4075552	CastExpression	( char * ) r_file_basename ( core -> bin -> file )		4075472	1					
ANR	4075553	CastTarget	char *		4075472	0					
ANR	4075554	CallExpression	r_file_basename ( core -> bin -> file )		4075472	1					
ANR	4075555	Callee	r_file_basename		4075472	0					
ANR	4075556	Identifier	r_file_basename		4075472	0					
ANR	4075557	ArgumentList	core -> bin -> file		4075472	1					
ANR	4075558	Argument	core -> bin -> file		4075472	0					
ANR	4075559	PtrMemberAccess	core -> bin -> file		4075472	0					
ANR	4075560	PtrMemberAccess	core -> bin		4075472	0					
ANR	4075561	Identifier	core		4075472	0					
ANR	4075562	Identifier	bin		4075472	1					
ANR	4075563	Identifier	file		4075472	1					
ANR	4075564	IfStatement	if ( name )		4075472	2					
ANR	4075565	Condition	name	2349:7:64010:64013	4075472	0	True				
ANR	4075566	Identifier	name		4075472	0					
ANR	4075567	CompoundStatement		13:13:319:319	4075472	1					
ANR	4075568	ExpressionStatement	"r_name_filter ( name , strlen ( name ) )"	2350:4:64022:64057	4075472	0	True				
ANR	4075569	CallExpression	"r_name_filter ( name , strlen ( name ) )"		4075472	0					
ANR	4075570	Callee	r_name_filter		4075472	0					
ANR	4075571	Identifier	r_name_filter		4075472	0					
ANR	4075572	ArgumentList	name		4075472	1					
ANR	4075573	Argument	name		4075472	0					
ANR	4075574	Identifier	name		4075472	0					
ANR	4075575	Argument	strlen ( name )		4075472	1					
ANR	4075576	CallExpression	strlen ( name )		4075472	0					
ANR	4075577	Callee	strlen		4075472	0					
ANR	4075578	Identifier	strlen		4075472	0					
ANR	4075579	ArgumentList	name		4075472	1					
ANR	4075580	Argument	name		4075472	0					
ANR	4075581	Identifier	name		4075472	0					
ANR	4075582	ExpressionStatement	"r_str_filter ( name , strlen ( name ) )"	2351:4:64063:64097	4075472	1	True				
ANR	4075583	CallExpression	"r_str_filter ( name , strlen ( name ) )"		4075472	0					
ANR	4075584	Callee	r_str_filter		4075472	0					
ANR	4075585	Identifier	r_str_filter		4075472	0					
ANR	4075586	ArgumentList	name		4075472	1					
ANR	4075587	Argument	name		4075472	0					
ANR	4075588	Identifier	name		4075472	0					
ANR	4075589	Argument	strlen ( name )		4075472	1					
ANR	4075590	CallExpression	strlen ( name )		4075472	0					
ANR	4075591	Callee	strlen		4075472	0					
ANR	4075592	Identifier	strlen		4075472	0					
ANR	4075593	ArgumentList	name		4075472	1					
ANR	4075594	Argument	name		4075472	0					
ANR	4075595	Identifier	name		4075472	0					
ANR	4075596	ExpressionStatement	core -> bin -> prefix = strdup ( name )	2352:4:64103:64136	4075472	2	True				
ANR	4075597	AssignmentExpression	core -> bin -> prefix = strdup ( name )		4075472	0		=			
ANR	4075598	PtrMemberAccess	core -> bin -> prefix		4075472	0					
ANR	4075599	PtrMemberAccess	core -> bin		4075472	0					
ANR	4075600	Identifier	core		4075472	0					
ANR	4075601	Identifier	bin		4075472	1					
ANR	4075602	Identifier	prefix		4075472	1					
ANR	4075603	CallExpression	strdup ( name )		4075472	1					
ANR	4075604	Callee	strdup		4075472	0					
ANR	4075605	Identifier	strdup		4075472	0					
ANR	4075606	ArgumentList	name		4075472	1					
ANR	4075607	Argument	name		4075472	0					
ANR	4075608	Identifier	name		4075472	0					
ANR	4075609	ExpressionStatement	free ( name )	2353:4:64142:64153	4075472	3	True				
ANR	4075610	CallExpression	free ( name )		4075472	0					
ANR	4075611	Callee	free		4075472	0					
ANR	4075612	Identifier	free		4075472	0					
ANR	4075613	ArgumentList	name		4075472	1					
ANR	4075614	Argument	name		4075472	0					
ANR	4075615	Identifier	name		4075472	0					
ANR	4075616	ElseStatement	else		4075472	0					
ANR	4075617	CompoundStatement		19:9:472:472	4075472	0					
ANR	4075618	ExpressionStatement	core -> bin -> prefix = node -> value	2356:3:64174:64205	4075472	0	True				
ANR	4075619	AssignmentExpression	core -> bin -> prefix = node -> value		4075472	0		=			
ANR	4075620	PtrMemberAccess	core -> bin -> prefix		4075472	0					
ANR	4075621	PtrMemberAccess	core -> bin		4075472	0					
ANR	4075622	Identifier	core		4075472	0					
ANR	4075623	Identifier	bin		4075472	1					
ANR	4075624	Identifier	prefix		4075472	1					
ANR	4075625	PtrMemberAccess	node -> value		4075472	1					
ANR	4075626	Identifier	node		4075472	0					
ANR	4075627	Identifier	value		4075472	1					
ANR	4075628	ReturnStatement	return true ;	2359:1:64215:64226	4075472	4	True				
ANR	4075629	Identifier	true		4075472	0					
ANR	4075630	ReturnType	static bool		4075472	1					
ANR	4075631	Identifier	cb_binprefix		4075472	2					
ANR	4075632	ParameterList	"void * user , void * data"		4075472	3					
ANR	4075633	Parameter	void * user	2337:25:63672:63681	4075472	0	True				
ANR	4075634	ParameterType	void *		4075472	0					
ANR	4075635	Identifier	user		4075472	1					
ANR	4075636	Parameter	void * data	2337:37:63684:63693	4075472	1	True				
ANR	4075637	ParameterType	void *		4075472	0					
ANR	4075638	Identifier	data		4075472	1					
ANR	4075639	CFGEntryNode	ENTRY		4075472		True				
ANR	4075640	CFGExitNode	EXIT		4075472		True				
ANR	4075641	Symbol	strcmp		4075472						
ANR	4075642	Symbol	* node -> value		4075472						
ANR	4075643	Symbol	data		4075472						
ANR	4075644	Symbol	core -> bin -> file		4075472						
ANR	4075645	Symbol	* core		4075472						
ANR	4075646	Symbol	false		4075472						
ANR	4075647	Symbol	r_file_basename		4075472						
ANR	4075648	Symbol	node -> value		4075472						
ANR	4075649	Symbol	core		4075472						
ANR	4075650	Symbol	node		4075472						
ANR	4075651	Symbol	strlen		4075472						
ANR	4075652	Symbol	* * node		4075472						
ANR	4075653	Symbol	name		4075472						
ANR	4075654	Symbol	core -> bin -> prefix		4075472						
ANR	4075655	Symbol	true		4075472						
ANR	4075656	Symbol	* node		4075472						
ANR	4075657	Symbol	* core -> bin		4075472						
ANR	4075658	Symbol	strdup		4075472						
ANR	4075659	Symbol	user		4075472						
ANR	4075660	Symbol	core -> bin		4075472						
ANR	4075661	Symbol	* * core		4075472						
ANR	4075662	Function	cb_binmaxstrbuf	2362:0:64231:64595							
ANR	4075663	FunctionDef	"cb_binmaxstrbuf (void * user , void * data)"		4075662	0					
ANR	4075664	CompoundStatement		2362:52:64283:64595	4075662	0					
ANR	4075665	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2363:1:64286:64314	4075662	0	True				
ANR	4075666	IdentifierDecl	* core = ( RCore * ) user		4075662	0					
ANR	4075667	IdentifierDeclType	RCore *		4075662	0					
ANR	4075668	Identifier	core		4075662	1					
ANR	4075669	AssignmentExpression	* core = ( RCore * ) user		4075662	2		=			
ANR	4075670	Identifier	core		4075662	0					
ANR	4075671	CastExpression	( RCore * ) user		4075662	1					
ANR	4075672	CastTarget	RCore *		4075662	0					
ANR	4075673	Identifier	user		4075662	1					
ANR	4075674	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2364:1:64317:64357	4075662	1	True				
ANR	4075675	IdentifierDecl	* node = ( RConfigNode * ) data		4075662	0					
ANR	4075676	IdentifierDeclType	RConfigNode *		4075662	0					
ANR	4075677	Identifier	node		4075662	1					
ANR	4075678	AssignmentExpression	* node = ( RConfigNode * ) data		4075662	2		=			
ANR	4075679	Identifier	node		4075662	0					
ANR	4075680	CastExpression	( RConfigNode * ) data		4075662	1					
ANR	4075681	CastTarget	RConfigNode *		4075662	0					
ANR	4075682	Identifier	data		4075662	1					
ANR	4075683	IfStatement	if ( core -> bin )		4075662	2					
ANR	4075684	Condition	core -> bin	2365:5:64364:64372	4075662	0	True				
ANR	4075685	PtrMemberAccess	core -> bin		4075662	0					
ANR	4075686	Identifier	core		4075662	0					
ANR	4075687	Identifier	bin		4075662	1					
ANR	4075688	CompoundStatement		6:2:120:153	4075662	1					
ANR	4075689	IdentifierDeclStatement	int v = node -> i_value ;	2366:2:64379:64400	4075662	0	True				
ANR	4075690	IdentifierDecl	v = node -> i_value		4075662	0					
ANR	4075691	IdentifierDeclType	int		4075662	0					
ANR	4075692	Identifier	v		4075662	1					
ANR	4075693	AssignmentExpression	v = node -> i_value		4075662	2		=			
ANR	4075694	Identifier	v		4075662	0					
ANR	4075695	PtrMemberAccess	node -> i_value		4075662	1					
ANR	4075696	Identifier	node		4075662	0					
ANR	4075697	Identifier	i_value		4075662	1					
ANR	4075698	IdentifierDeclStatement	ut64 old_v = core -> bin -> maxstrbuf ;	2367:2:64404:64437	4075662	1	True				
ANR	4075699	IdentifierDecl	old_v = core -> bin -> maxstrbuf		4075662	0					
ANR	4075700	IdentifierDeclType	ut64		4075662	0					
ANR	4075701	Identifier	old_v		4075662	1					
ANR	4075702	AssignmentExpression	old_v = core -> bin -> maxstrbuf		4075662	2		=			
ANR	4075703	Identifier	old_v		4075662	0					
ANR	4075704	PtrMemberAccess	core -> bin -> maxstrbuf		4075662	1					
ANR	4075705	PtrMemberAccess	core -> bin		4075662	0					
ANR	4075706	Identifier	core		4075662	0					
ANR	4075707	Identifier	bin		4075662	1					
ANR	4075708	Identifier	maxstrbuf		4075662	1					
ANR	4075709	IfStatement	if ( v < 1 )		4075662	2					
ANR	4075710	Condition	v < 1	2368:6:64445:64449	4075662	0	True				
ANR	4075711	RelationalExpression	v < 1		4075662	0		<			
ANR	4075712	Identifier	v		4075662	0					
ANR	4075713	PrimaryExpression	1		4075662	1					
ANR	4075714	CompoundStatement		7:13:168:168	4075662	1					
ANR	4075715	ExpressionStatement	v = 4	2369:3:64457:64462	4075662	0	True				
ANR	4075716	AssignmentExpression	v = 4		4075662	0		=			
ANR	4075717	Identifier	v		4075662	0					
ANR	4075718	PrimaryExpression	4		4075662	1					
ANR	4075719	ExpressionStatement	core -> bin -> maxstrbuf = v	2371:2:64478:64502	4075662	3	True				
ANR	4075720	AssignmentExpression	core -> bin -> maxstrbuf = v		4075662	0		=			
ANR	4075721	PtrMemberAccess	core -> bin -> maxstrbuf		4075662	0					
ANR	4075722	PtrMemberAccess	core -> bin		4075662	0					
ANR	4075723	Identifier	core		4075662	0					
ANR	4075724	Identifier	bin		4075662	1					
ANR	4075725	Identifier	maxstrbuf		4075662	1					
ANR	4075726	Identifier	v		4075662	1					
ANR	4075727	IfStatement	if ( v > old_v )		4075662	4					
ANR	4075728	Condition	v > old_v	2372:6:64510:64516	4075662	0	True				
ANR	4075729	RelationalExpression	v > old_v		4075662	0		>			
ANR	4075730	Identifier	v		4075662	0					
ANR	4075731	Identifier	old_v		4075662	1					
ANR	4075732	CompoundStatement		11:15:235:235	4075662	1					
ANR	4075733	ExpressionStatement	r_core_bin_refresh_strings ( core )	2373:3:64524:64557	4075662	0	True				
ANR	4075734	CallExpression	r_core_bin_refresh_strings ( core )		4075662	0					
ANR	4075735	Callee	r_core_bin_refresh_strings		4075662	0					
ANR	4075736	Identifier	r_core_bin_refresh_strings		4075662	0					
ANR	4075737	ArgumentList	core		4075662	1					
ANR	4075738	Argument	core		4075662	0					
ANR	4075739	Identifier	core		4075662	0					
ANR	4075740	ReturnStatement	return true ;	2375:2:64565:64576	4075662	5	True				
ANR	4075741	Identifier	true		4075662	0					
ANR	4075742	ReturnStatement	return true ;	2377:1:64582:64593	4075662	3	True				
ANR	4075743	Identifier	true		4075662	0					
ANR	4075744	ReturnType	static bool		4075662	1					
ANR	4075745	Identifier	cb_binmaxstrbuf		4075662	2					
ANR	4075746	ParameterList	"void * user , void * data"		4075662	3					
ANR	4075747	Parameter	void * user	2362:28:64259:64268	4075662	0	True				
ANR	4075748	ParameterType	void *		4075662	0					
ANR	4075749	Identifier	user		4075662	1					
ANR	4075750	Parameter	void * data	2362:40:64271:64280	4075662	1	True				
ANR	4075751	ParameterType	void *		4075662	0					
ANR	4075752	Identifier	data		4075662	1					
ANR	4075753	CFGEntryNode	ENTRY		4075662		True				
ANR	4075754	CFGExitNode	EXIT		4075662		True				
ANR	4075755	Symbol	data		4075662						
ANR	4075756	Symbol	* core		4075662						
ANR	4075757	Symbol	node -> i_value		4075662						
ANR	4075758	Symbol	old_v		4075662						
ANR	4075759	Symbol	core		4075662						
ANR	4075760	Symbol	node		4075662						
ANR	4075761	Symbol	v		4075662						
ANR	4075762	Symbol	true		4075662						
ANR	4075763	Symbol	* node		4075662						
ANR	4075764	Symbol	core -> bin -> maxstrbuf		4075662						
ANR	4075765	Symbol	* core -> bin		4075662						
ANR	4075766	Symbol	user		4075662						
ANR	4075767	Symbol	core -> bin		4075662						
ANR	4075768	Symbol	* * core		4075662						
ANR	4075769	Function	cb_binmaxstr	2380:0:64598:64958							
ANR	4075770	FunctionDef	"cb_binmaxstr (void * user , void * data)"		4075769	0					
ANR	4075771	CompoundStatement		2380:49:64647:64958	4075769	0					
ANR	4075772	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2381:1:64650:64678	4075769	0	True				
ANR	4075773	IdentifierDecl	* core = ( RCore * ) user		4075769	0					
ANR	4075774	IdentifierDeclType	RCore *		4075769	0					
ANR	4075775	Identifier	core		4075769	1					
ANR	4075776	AssignmentExpression	* core = ( RCore * ) user		4075769	2		=			
ANR	4075777	Identifier	core		4075769	0					
ANR	4075778	CastExpression	( RCore * ) user		4075769	1					
ANR	4075779	CastTarget	RCore *		4075769	0					
ANR	4075780	Identifier	user		4075769	1					
ANR	4075781	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2382:1:64681:64721	4075769	1	True				
ANR	4075782	IdentifierDecl	* node = ( RConfigNode * ) data		4075769	0					
ANR	4075783	IdentifierDeclType	RConfigNode *		4075769	0					
ANR	4075784	Identifier	node		4075769	1					
ANR	4075785	AssignmentExpression	* node = ( RConfigNode * ) data		4075769	2		=			
ANR	4075786	Identifier	node		4075769	0					
ANR	4075787	CastExpression	( RConfigNode * ) data		4075769	1					
ANR	4075788	CastTarget	RConfigNode *		4075769	0					
ANR	4075789	Identifier	data		4075769	1					
ANR	4075790	IfStatement	if ( core -> bin )		4075769	2					
ANR	4075791	Condition	core -> bin	2383:5:64728:64736	4075769	0	True				
ANR	4075792	PtrMemberAccess	core -> bin		4075769	0					
ANR	4075793	Identifier	core		4075769	0					
ANR	4075794	Identifier	bin		4075769	1					
ANR	4075795	CompoundStatement		5:2:95:116	4075769	1					
ANR	4075796	IdentifierDeclStatement	int v = node -> i_value ;	2384:2:64743:64764	4075769	0	True				
ANR	4075797	IdentifierDecl	v = node -> i_value		4075769	0					
ANR	4075798	IdentifierDeclType	int		4075769	0					
ANR	4075799	Identifier	v		4075769	1					
ANR	4075800	AssignmentExpression	v = node -> i_value		4075769	2		=			
ANR	4075801	Identifier	v		4075769	0					
ANR	4075802	PtrMemberAccess	node -> i_value		4075769	1					
ANR	4075803	Identifier	node		4075769	0					
ANR	4075804	Identifier	i_value		4075769	1					
ANR	4075805	IfStatement	if ( v < 1 )		4075769	1					
ANR	4075806	Condition	v < 1	2385:6:64772:64776	4075769	0	True				
ANR	4075807	RelationalExpression	v < 1		4075769	0		<			
ANR	4075808	Identifier	v		4075769	0					
ANR	4075809	PrimaryExpression	1		4075769	1					
ANR	4075810	CompoundStatement		6:13:131:131	4075769	1					
ANR	4075811	ExpressionStatement	v = 4	2386:3:64784:64789	4075769	0	True				
ANR	4075812	AssignmentExpression	v = 4		4075769	0		=			
ANR	4075813	Identifier	v		4075769	0					
ANR	4075814	PrimaryExpression	4		4075769	1					
ANR	4075815	ExpressionStatement	core -> bin -> maxstrlen = v	2388:2:64805:64829	4075769	2	True				
ANR	4075816	AssignmentExpression	core -> bin -> maxstrlen = v		4075769	0		=			
ANR	4075817	PtrMemberAccess	core -> bin -> maxstrlen		4075769	0					
ANR	4075818	PtrMemberAccess	core -> bin		4075769	0					
ANR	4075819	Identifier	core		4075769	0					
ANR	4075820	Identifier	bin		4075769	1					
ANR	4075821	Identifier	maxstrlen		4075769	1					
ANR	4075822	Identifier	v		4075769	1					
ANR	4075823	ExpressionStatement	r_core_bin_refresh_strings ( core )	2390:2:64891:64924	4075769	3	True				
ANR	4075824	CallExpression	r_core_bin_refresh_strings ( core )		4075769	0					
ANR	4075825	Callee	r_core_bin_refresh_strings		4075769	0					
ANR	4075826	Identifier	r_core_bin_refresh_strings		4075769	0					
ANR	4075827	ArgumentList	core		4075769	1					
ANR	4075828	Argument	core		4075769	0					
ANR	4075829	Identifier	core		4075769	0					
ANR	4075830	ReturnStatement	return true ;	2391:2:64928:64939	4075769	4	True				
ANR	4075831	Identifier	true		4075769	0					
ANR	4075832	ReturnStatement	return true ;	2393:1:64945:64956	4075769	3	True				
ANR	4075833	Identifier	true		4075769	0					
ANR	4075834	ReturnType	static bool		4075769	1					
ANR	4075835	Identifier	cb_binmaxstr		4075769	2					
ANR	4075836	ParameterList	"void * user , void * data"		4075769	3					
ANR	4075837	Parameter	void * user	2380:25:64623:64632	4075769	0	True				
ANR	4075838	ParameterType	void *		4075769	0					
ANR	4075839	Identifier	user		4075769	1					
ANR	4075840	Parameter	void * data	2380:37:64635:64644	4075769	1	True				
ANR	4075841	ParameterType	void *		4075769	0					
ANR	4075842	Identifier	data		4075769	1					
ANR	4075843	CFGEntryNode	ENTRY		4075769		True				
ANR	4075844	CFGExitNode	EXIT		4075769		True				
ANR	4075845	Symbol	data		4075769						
ANR	4075846	Symbol	core -> bin -> maxstrlen		4075769						
ANR	4075847	Symbol	* core		4075769						
ANR	4075848	Symbol	node -> i_value		4075769						
ANR	4075849	Symbol	core		4075769						
ANR	4075850	Symbol	node		4075769						
ANR	4075851	Symbol	v		4075769						
ANR	4075852	Symbol	true		4075769						
ANR	4075853	Symbol	* node		4075769						
ANR	4075854	Symbol	* core -> bin		4075769						
ANR	4075855	Symbol	user		4075769						
ANR	4075856	Symbol	core -> bin		4075769						
ANR	4075857	Symbol	* * core		4075769						
ANR	4075858	Function	cb_binminstr	2396:0:64961:65321							
ANR	4075859	FunctionDef	"cb_binminstr (void * user , void * data)"		4075858	0					
ANR	4075860	CompoundStatement		2396:49:65010:65321	4075858	0					
ANR	4075861	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2397:1:65013:65041	4075858	0	True				
ANR	4075862	IdentifierDecl	* core = ( RCore * ) user		4075858	0					
ANR	4075863	IdentifierDeclType	RCore *		4075858	0					
ANR	4075864	Identifier	core		4075858	1					
ANR	4075865	AssignmentExpression	* core = ( RCore * ) user		4075858	2		=			
ANR	4075866	Identifier	core		4075858	0					
ANR	4075867	CastExpression	( RCore * ) user		4075858	1					
ANR	4075868	CastTarget	RCore *		4075858	0					
ANR	4075869	Identifier	user		4075858	1					
ANR	4075870	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2398:1:65044:65084	4075858	1	True				
ANR	4075871	IdentifierDecl	* node = ( RConfigNode * ) data		4075858	0					
ANR	4075872	IdentifierDeclType	RConfigNode *		4075858	0					
ANR	4075873	Identifier	node		4075858	1					
ANR	4075874	AssignmentExpression	* node = ( RConfigNode * ) data		4075858	2		=			
ANR	4075875	Identifier	node		4075858	0					
ANR	4075876	CastExpression	( RConfigNode * ) data		4075858	1					
ANR	4075877	CastTarget	RConfigNode *		4075858	0					
ANR	4075878	Identifier	data		4075858	1					
ANR	4075879	IfStatement	if ( core -> bin )		4075858	2					
ANR	4075880	Condition	core -> bin	2399:5:65091:65099	4075858	0	True				
ANR	4075881	PtrMemberAccess	core -> bin		4075858	0					
ANR	4075882	Identifier	core		4075858	0					
ANR	4075883	Identifier	bin		4075858	1					
ANR	4075884	CompoundStatement		5:2:95:116	4075858	1					
ANR	4075885	IdentifierDeclStatement	int v = node -> i_value ;	2400:2:65106:65127	4075858	0	True				
ANR	4075886	IdentifierDecl	v = node -> i_value		4075858	0					
ANR	4075887	IdentifierDeclType	int		4075858	0					
ANR	4075888	Identifier	v		4075858	1					
ANR	4075889	AssignmentExpression	v = node -> i_value		4075858	2		=			
ANR	4075890	Identifier	v		4075858	0					
ANR	4075891	PtrMemberAccess	node -> i_value		4075858	1					
ANR	4075892	Identifier	node		4075858	0					
ANR	4075893	Identifier	i_value		4075858	1					
ANR	4075894	IfStatement	if ( v < 1 )		4075858	1					
ANR	4075895	Condition	v < 1	2401:6:65135:65139	4075858	0	True				
ANR	4075896	RelationalExpression	v < 1		4075858	0		<			
ANR	4075897	Identifier	v		4075858	0					
ANR	4075898	PrimaryExpression	1		4075858	1					
ANR	4075899	CompoundStatement		6:13:131:131	4075858	1					
ANR	4075900	ExpressionStatement	v = 4	2402:3:65147:65152	4075858	0	True				
ANR	4075901	AssignmentExpression	v = 4		4075858	0		=			
ANR	4075902	Identifier	v		4075858	0					
ANR	4075903	PrimaryExpression	4		4075858	1					
ANR	4075904	ExpressionStatement	core -> bin -> minstrlen = v	2404:2:65168:65192	4075858	2	True				
ANR	4075905	AssignmentExpression	core -> bin -> minstrlen = v		4075858	0		=			
ANR	4075906	PtrMemberAccess	core -> bin -> minstrlen		4075858	0					
ANR	4075907	PtrMemberAccess	core -> bin		4075858	0					
ANR	4075908	Identifier	core		4075858	0					
ANR	4075909	Identifier	bin		4075858	1					
ANR	4075910	Identifier	minstrlen		4075858	1					
ANR	4075911	Identifier	v		4075858	1					
ANR	4075912	ExpressionStatement	r_core_bin_refresh_strings ( core )	2406:2:65254:65287	4075858	3	True				
ANR	4075913	CallExpression	r_core_bin_refresh_strings ( core )		4075858	0					
ANR	4075914	Callee	r_core_bin_refresh_strings		4075858	0					
ANR	4075915	Identifier	r_core_bin_refresh_strings		4075858	0					
ANR	4075916	ArgumentList	core		4075858	1					
ANR	4075917	Argument	core		4075858	0					
ANR	4075918	Identifier	core		4075858	0					
ANR	4075919	ReturnStatement	return true ;	2407:2:65291:65302	4075858	4	True				
ANR	4075920	Identifier	true		4075858	0					
ANR	4075921	ReturnStatement	return true ;	2409:1:65308:65319	4075858	3	True				
ANR	4075922	Identifier	true		4075858	0					
ANR	4075923	ReturnType	static bool		4075858	1					
ANR	4075924	Identifier	cb_binminstr		4075858	2					
ANR	4075925	ParameterList	"void * user , void * data"		4075858	3					
ANR	4075926	Parameter	void * user	2396:25:64986:64995	4075858	0	True				
ANR	4075927	ParameterType	void *		4075858	0					
ANR	4075928	Identifier	user		4075858	1					
ANR	4075929	Parameter	void * data	2396:37:64998:65007	4075858	1	True				
ANR	4075930	ParameterType	void *		4075858	0					
ANR	4075931	Identifier	data		4075858	1					
ANR	4075932	CFGEntryNode	ENTRY		4075858		True				
ANR	4075933	CFGExitNode	EXIT		4075858		True				
ANR	4075934	Symbol	data		4075858						
ANR	4075935	Symbol	* core		4075858						
ANR	4075936	Symbol	node -> i_value		4075858						
ANR	4075937	Symbol	core		4075858						
ANR	4075938	Symbol	node		4075858						
ANR	4075939	Symbol	v		4075858						
ANR	4075940	Symbol	true		4075858						
ANR	4075941	Symbol	* node		4075858						
ANR	4075942	Symbol	* core -> bin		4075858						
ANR	4075943	Symbol	user		4075858						
ANR	4075944	Symbol	core -> bin		4075858						
ANR	4075945	Symbol	core -> bin -> minstrlen		4075858						
ANR	4075946	Symbol	* * core		4075858						
ANR	4075947	Function	cb_searchin	2412:0:65324:66903							
ANR	4075948	FunctionDef	"cb_searchin (void * user , void * data)"		4075947	0					
ANR	4075949	CompoundStatement		2412:48:65372:66903	4075947	0					
ANR	4075950	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2413:1:65375:65401	4075947	0	True				
ANR	4075951	IdentifierDecl	* core = ( RCore * ) user		4075947	0					
ANR	4075952	IdentifierDeclType	RCore *		4075947	0					
ANR	4075953	Identifier	core		4075947	1					
ANR	4075954	AssignmentExpression	* core = ( RCore * ) user		4075947	2		=			
ANR	4075955	Identifier	core		4075947	0					
ANR	4075956	CastExpression	( RCore * ) user		4075947	1					
ANR	4075957	CastTarget	RCore *		4075947	0					
ANR	4075958	Identifier	user		4075947	1					
ANR	4075959	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2414:1:65404:65443	4075947	1	True				
ANR	4075960	IdentifierDecl	* node = ( RConfigNode * ) data		4075947	0					
ANR	4075961	IdentifierDeclType	RConfigNode *		4075947	0					
ANR	4075962	Identifier	node		4075947	1					
ANR	4075963	AssignmentExpression	* node = ( RConfigNode * ) data		4075947	2		=			
ANR	4075964	Identifier	node		4075947	0					
ANR	4075965	CastExpression	( RConfigNode * ) data		4075947	1					
ANR	4075966	CastTarget	RConfigNode *		4075947	0					
ANR	4075967	Identifier	data		4075947	1					
ANR	4075968	IfStatement	if ( node -> value [ 0 ] == '?' )		4075947	2					
ANR	4075969	Condition	node -> value [ 0 ] == '?'	2415:5:65450:65470	4075947	0	True				
ANR	4075970	EqualityExpression	node -> value [ 0 ] == '?'		4075947	0		==			
ANR	4075971	ArrayIndexing	node -> value [ 0 ]		4075947	0					
ANR	4075972	PtrMemberAccess	node -> value		4075947	0					
ANR	4075973	Identifier	node		4075947	0					
ANR	4075974	Identifier	value		4075947	1					
ANR	4075975	PrimaryExpression	0		4075947	1					
ANR	4075976	PrimaryExpression	'?'		4075947	1					
ANR	4075977	CompoundStatement		4:28:100:100	4075947	1					
ANR	4075978	IfStatement	if ( strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?' )		4075947	0					
ANR	4075979	Condition	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'	2416:6:65481:65529	4075947	0	True				
ANR	4075980	AndExpression	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'		4075947	0		&&			
ANR	4075981	RelationalExpression	strlen ( node -> value ) > 1		4075947	0		>			
ANR	4075982	CallExpression	strlen ( node -> value )		4075947	0					
ANR	4075983	Callee	strlen		4075947	0					
ANR	4075984	Identifier	strlen		4075947	0					
ANR	4075985	ArgumentList	node -> value		4075947	1					
ANR	4075986	Argument	node -> value		4075947	0					
ANR	4075987	PtrMemberAccess	node -> value		4075947	0					
ANR	4075988	Identifier	node		4075947	0					
ANR	4075989	Identifier	value		4075947	1					
ANR	4075990	PrimaryExpression	1		4075947	1					
ANR	4075991	EqualityExpression	node -> value [ 1 ] == '?'		4075947	1		==			
ANR	4075992	ArrayIndexing	node -> value [ 1 ]		4075947	0					
ANR	4075993	PtrMemberAccess	node -> value		4075947	0					
ANR	4075994	Identifier	node		4075947	0					
ANR	4075995	Identifier	value		4075947	1					
ANR	4075996	PrimaryExpression	1		4075947	1					
ANR	4075997	PrimaryExpression	'?'		4075947	1					
ANR	4075998	CompoundStatement		5:57:159:159	4075947	1					
ANR	4075999	Statement	r_cons_printf	2417:3:65537:65549	4075947	0	True				
ANR	4076000	Statement	(	2417:17:65551:65551	4075947	1	True				
ANR	4076001	Statement	"""Valid values for search.in (depends on .from/.to and io.va):\\n"""	2417:18:65552:65615	4075947	2	True				
ANR	4076002	Statement	"""raw                search in raw io (ignoring bounds)\\n"""	2418:3:65620:65676	4075947	3	True				
ANR	4076003	Statement	"""block              search in the current block\\n"""	2419:3:65681:65730	4075947	4	True				
ANR	4076004	Statement	"""io.map             search in current map\\n"""	2420:3:65735:65778	4075947	5	True				
ANR	4076005	Statement	"""io.sky.[rwx]       search in all skyline segments\\n"""	2421:3:65783:65835	4075947	6	True				
ANR	4076006	Statement	"""io.maps            search in all maps\\n"""	2422:3:65840:65880	4075947	7	True				
ANR	4076007	Statement	"""io.maps.[rwx]      search in all r-w-x io maps\\n"""	2423:3:65885:65934	4075947	8	True				
ANR	4076008	Statement	"""bin.segment        search in current mapped segment\\n"""	2424:3:65939:65993	4075947	9	True				
ANR	4076009	Statement	"""bin.segments       search in all mapped segments\\n"""	2425:3:65998:66049	4075947	10	True				
ANR	4076010	Statement	"""bin.segments.[rwx] search in all r-w-x segments\\n"""	2426:3:66054:66104	4075947	11	True				
ANR	4076011	Statement	"""bin.section        search in current mapped section\\n"""	2427:3:66109:66163	4075947	12	True				
ANR	4076012	Statement	"""bin.sections       search in all mapped sections\\n"""	2428:3:66168:66219	4075947	13	True				
ANR	4076013	Statement	"""bin.sections.[rwx] search in all r-w-x sections\\n"""	2429:3:66224:66274	4075947	14	True				
ANR	4076014	Statement	"""dbg.stack          search in the stack\\n"""	2430:3:66279:66320	4075947	15	True				
ANR	4076015	Statement	"""dbg.heap           search in the heap\\n"""	2431:3:66325:66365	4075947	16	True				
ANR	4076016	Statement	"""dbg.map            search in current memory map\\n"""	2432:3:66370:66420	4075947	17	True				
ANR	4076017	Statement	"""dbg.maps           search in all memory maps\\n"""	2433:3:66425:66472	4075947	18	True				
ANR	4076018	Statement	"""dbg.maps.[rwx]     search in all executable marked memory maps\\n"""	2434:3:66477:66542	4075947	19	True				
ANR	4076019	Statement	"""anal.fcn           search in the current function\\n"""	2435:3:66547:66599	4075947	20	True				
ANR	4076020	Statement	"""anal.bb            search in the current basic-block\\n"""	2436:3:66604:66659	4075947	21	True				
ANR	4076021	Statement	)	2436:59:66660:66660	4075947	22	True				
ANR	4076022	ExpressionStatement		2436:60:66661:66661	4075947	23	True				
ANR	4076023	ElseStatement	else		4075947	0					
ANR	4076024	CompoundStatement		26:9:1299:1299	4075947	0					
ANR	4076025	ExpressionStatement	print_node_options ( node )	2438:3:66677:66702	4075947	0	True				
ANR	4076026	CallExpression	print_node_options ( node )		4075947	0					
ANR	4076027	Callee	print_node_options		4075947	0					
ANR	4076028	Identifier	print_node_options		4075947	0					
ANR	4076029	ArgumentList	node		4075947	1					
ANR	4076030	Argument	node		4075947	0					
ANR	4076031	Identifier	node		4075947	0					
ANR	4076032	ReturnStatement	return false ;	2440:2:66710:66722	4075947	1	True				
ANR	4076033	Identifier	false		4075947	0					
ANR	4076034	IfStatement	"if ( r_str_startswith ( node -> name , ""anal"" ) )"		4075947	3					
ANR	4076035	Condition	"r_str_startswith ( node -> name , ""anal"" )"	2443:5:66780:66816	4075947	0	True				
ANR	4076036	CallExpression	"r_str_startswith ( node -> name , ""anal"" )"		4075947	0					
ANR	4076037	Callee	r_str_startswith		4075947	0					
ANR	4076038	Identifier	r_str_startswith		4075947	0					
ANR	4076039	ArgumentList	node -> name		4075947	1					
ANR	4076040	Argument	node -> name		4075947	0					
ANR	4076041	PtrMemberAccess	node -> name		4075947	0					
ANR	4076042	Identifier	node		4075947	0					
ANR	4076043	Identifier	name		4075947	1					
ANR	4076044	Argument	"""anal"""		4075947	1					
ANR	4076045	PrimaryExpression	"""anal"""		4075947	0					
ANR	4076046	CompoundStatement		32:44:1446:1446	4075947	1					
ANR	4076047	ExpressionStatement	"core -> anal -> opt . noncode = ( strchr ( node -> value , 'x' ) == NULL )"	2444:2:66823:66884	4075947	0	True				
ANR	4076048	AssignmentExpression	"core -> anal -> opt . noncode = ( strchr ( node -> value , 'x' ) == NULL )"		4075947	0		=			
ANR	4076049	MemberAccess	core -> anal -> opt . noncode		4075947	0					
ANR	4076050	PtrMemberAccess	core -> anal -> opt		4075947	0					
ANR	4076051	PtrMemberAccess	core -> anal		4075947	0					
ANR	4076052	Identifier	core		4075947	0					
ANR	4076053	Identifier	anal		4075947	1					
ANR	4076054	Identifier	opt		4075947	1					
ANR	4076055	Identifier	noncode		4075947	1					
ANR	4076056	EqualityExpression	"strchr ( node -> value , 'x' ) == NULL"		4075947	1		==			
ANR	4076057	CallExpression	"strchr ( node -> value , 'x' )"		4075947	0					
ANR	4076058	Callee	strchr		4075947	0					
ANR	4076059	Identifier	strchr		4075947	0					
ANR	4076060	ArgumentList	node -> value		4075947	1					
ANR	4076061	Argument	node -> value		4075947	0					
ANR	4076062	PtrMemberAccess	node -> value		4075947	0					
ANR	4076063	Identifier	node		4075947	0					
ANR	4076064	Identifier	value		4075947	1					
ANR	4076065	Argument	'x'		4075947	1					
ANR	4076066	PrimaryExpression	'x'		4075947	0					
ANR	4076067	Identifier	NULL		4075947	1					
ANR	4076068	ReturnStatement	return true ;	2446:1:66890:66901	4075947	4	True				
ANR	4076069	Identifier	true		4075947	0					
ANR	4076070	ReturnType	static bool		4075947	1					
ANR	4076071	Identifier	cb_searchin		4075947	2					
ANR	4076072	ParameterList	"void * user , void * data"		4075947	3					
ANR	4076073	Parameter	void * user	2412:24:65348:65357	4075947	0	True				
ANR	4076074	ParameterType	void *		4075947	0					
ANR	4076075	Identifier	user		4075947	1					
ANR	4076076	Parameter	void * data	2412:36:65360:65369	4075947	1	True				
ANR	4076077	ParameterType	void *		4075947	0					
ANR	4076078	Identifier	data		4075947	1					
ANR	4076079	CFGEntryNode	ENTRY		4075947		True				
ANR	4076080	CFGExitNode	EXIT		4075947		True				
ANR	4076081	Symbol	r_str_startswith		4075947						
ANR	4076082	Symbol	core -> anal -> opt		4075947						
ANR	4076083	Symbol	* node -> value		4075947						
ANR	4076084	Symbol	NULL		4075947						
ANR	4076085	Symbol	data		4075947						
ANR	4076086	Symbol	false		4075947						
ANR	4076087	Symbol	* core		4075947						
ANR	4076088	Symbol	strchr		4075947						
ANR	4076089	Symbol	core -> anal		4075947						
ANR	4076090	Symbol	node -> value		4075947						
ANR	4076091	Symbol	core		4075947						
ANR	4076092	Symbol	node		4075947						
ANR	4076093	Symbol	strlen		4075947						
ANR	4076094	Symbol	node -> name		4075947						
ANR	4076095	Symbol	* core -> anal		4075947						
ANR	4076096	Symbol	* * node		4075947						
ANR	4076097	Symbol	true		4075947						
ANR	4076098	Symbol	* node		4075947						
ANR	4076099	Symbol	core -> anal -> opt . noncode		4075947						
ANR	4076100	Symbol	user		4075947						
ANR	4076101	Symbol	* * core		4075947						
ANR	4076102	Function	__dbg_swstep_getter	2449:0:66906:67049							
ANR	4076103	FunctionDef	"__dbg_swstep_getter (void * user , RConfigNode * node)"		4076102	0					
ANR	4076104	CompoundStatement		2449:62:66968:67049	4076102	0					
ANR	4076105	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2450:1:66971:66997	4076102	0	True				
ANR	4076106	IdentifierDecl	* core = ( RCore * ) user		4076102	0					
ANR	4076107	IdentifierDeclType	RCore *		4076102	0					
ANR	4076108	Identifier	core		4076102	1					
ANR	4076109	AssignmentExpression	* core = ( RCore * ) user		4076102	2		=			
ANR	4076110	Identifier	core		4076102	0					
ANR	4076111	CastExpression	( RCore * ) user		4076102	1					
ANR	4076112	CastTarget	RCore *		4076102	0					
ANR	4076113	Identifier	user		4076102	1					
ANR	4076114	ExpressionStatement	node -> i_value = core -> dbg -> swstep	2451:1:67000:67033	4076102	1	True				
ANR	4076115	AssignmentExpression	node -> i_value = core -> dbg -> swstep		4076102	0		=			
ANR	4076116	PtrMemberAccess	node -> i_value		4076102	0					
ANR	4076117	Identifier	node		4076102	0					
ANR	4076118	Identifier	i_value		4076102	1					
ANR	4076119	PtrMemberAccess	core -> dbg -> swstep		4076102	1					
ANR	4076120	PtrMemberAccess	core -> dbg		4076102	0					
ANR	4076121	Identifier	core		4076102	0					
ANR	4076122	Identifier	dbg		4076102	1					
ANR	4076123	Identifier	swstep		4076102	1					
ANR	4076124	ReturnStatement	return true ;	2452:1:67036:67047	4076102	2	True				
ANR	4076125	Identifier	true		4076102	0					
ANR	4076126	ReturnType	static int		4076102	1					
ANR	4076127	Identifier	__dbg_swstep_getter		4076102	2					
ANR	4076128	ParameterList	"void * user , RConfigNode * node"		4076102	3					
ANR	4076129	Parameter	void * user	2449:31:66937:66946	4076102	0	True				
ANR	4076130	ParameterType	void *		4076102	0					
ANR	4076131	Identifier	user		4076102	1					
ANR	4076132	Parameter	RConfigNode * node	2449:43:66949:66965	4076102	1	True				
ANR	4076133	ParameterType	RConfigNode *		4076102	0					
ANR	4076134	Identifier	node		4076102	1					
ANR	4076135	CFGEntryNode	ENTRY		4076102		True				
ANR	4076136	CFGExitNode	EXIT		4076102		True				
ANR	4076137	Symbol	node		4076102						
ANR	4076138	Symbol	core		4076102						
ANR	4076139	Symbol	* core		4076102						
ANR	4076140	Symbol	true		4076102						
ANR	4076141	Symbol	* node		4076102						
ANR	4076142	Symbol	user		4076102						
ANR	4076143	Symbol	core -> dbg -> swstep		4076102						
ANR	4076144	Symbol	* core -> dbg		4076102						
ANR	4076145	Symbol	* * core		4076102						
ANR	4076146	Symbol	node -> i_value		4076102						
ANR	4076147	Symbol	core -> dbg		4076102						
ANR	4076148	Function	cb_dirpfx	2455:0:67052:67151							
ANR	4076149	FunctionDef	"cb_dirpfx (RCore * core , RConfigNode * node)"		4076148	0					
ANR	4076150	CompoundStatement		2455:54:67106:67151	4076148	0					
ANR	4076151	ExpressionStatement	r_sys_prefix ( node -> value )	2456:1:67109:67135	4076148	0	True				
ANR	4076152	CallExpression	r_sys_prefix ( node -> value )		4076148	0					
ANR	4076153	Callee	r_sys_prefix		4076148	0					
ANR	4076154	Identifier	r_sys_prefix		4076148	0					
ANR	4076155	ArgumentList	node -> value		4076148	1					
ANR	4076156	Argument	node -> value		4076148	0					
ANR	4076157	PtrMemberAccess	node -> value		4076148	0					
ANR	4076158	Identifier	node		4076148	0					
ANR	4076159	Identifier	value		4076148	1					
ANR	4076160	ReturnStatement	return true ;	2457:1:67138:67149	4076148	1	True				
ANR	4076161	Identifier	true		4076148	0					
ANR	4076162	ReturnType	static bool		4076148	1					
ANR	4076163	Identifier	cb_dirpfx		4076148	2					
ANR	4076164	ParameterList	"RCore * core , RConfigNode * node"		4076148	3					
ANR	4076165	Parameter	RCore * core	2455:22:67074:67084	4076148	0	True				
ANR	4076166	ParameterType	RCore *		4076148	0					
ANR	4076167	Identifier	core		4076148	1					
ANR	4076168	Parameter	RConfigNode * node	2455:35:67087:67103	4076148	1	True				
ANR	4076169	ParameterType	RConfigNode *		4076148	0					
ANR	4076170	Identifier	node		4076148	1					
ANR	4076171	CFGEntryNode	ENTRY		4076148		True				
ANR	4076172	CFGExitNode	EXIT		4076148		True				
ANR	4076173	Symbol	core		4076148						
ANR	4076174	Symbol	node		4076148						
ANR	4076175	Symbol	true		4076148						
ANR	4076176	Symbol	* node		4076148						
ANR	4076177	Symbol	node -> value		4076148						
ANR	4076178	Function	cb_anal_roregs	2460:0:67154:67387							
ANR	4076179	FunctionDef	"cb_anal_roregs (RCore * core , RConfigNode * node)"		4076178	0					
ANR	4076180	CompoundStatement		2460:59:67213:67387	4076178	0					
ANR	4076181	IfStatement	if ( core && core -> anal && core -> anal -> reg )		4076178	0					
ANR	4076182	Condition	core && core -> anal && core -> anal -> reg	2461:5:67220:67256	4076178	0	True				
ANR	4076183	AndExpression	core && core -> anal && core -> anal -> reg		4076178	0		&&			
ANR	4076184	Identifier	core		4076178	0					
ANR	4076185	AndExpression	core -> anal && core -> anal -> reg		4076178	1		&&			
ANR	4076186	PtrMemberAccess	core -> anal		4076178	0					
ANR	4076187	Identifier	core		4076178	0					
ANR	4076188	Identifier	anal		4076178	1					
ANR	4076189	PtrMemberAccess	core -> anal -> reg		4076178	1					
ANR	4076190	PtrMemberAccess	core -> anal		4076178	0					
ANR	4076191	Identifier	core		4076178	0					
ANR	4076192	Identifier	anal		4076178	1					
ANR	4076193	Identifier	reg		4076178	1					
ANR	4076194	CompoundStatement		2:44:45:45	4076178	1					
ANR	4076195	ExpressionStatement	r_list_free ( core -> anal -> reg -> roregs )	2462:2:67263:67300	4076178	0	True				
ANR	4076196	CallExpression	r_list_free ( core -> anal -> reg -> roregs )		4076178	0					
ANR	4076197	Callee	r_list_free		4076178	0					
ANR	4076198	Identifier	r_list_free		4076178	0					
ANR	4076199	ArgumentList	core -> anal -> reg -> roregs		4076178	1					
ANR	4076200	Argument	core -> anal -> reg -> roregs		4076178	0					
ANR	4076201	PtrMemberAccess	core -> anal -> reg -> roregs		4076178	0					
ANR	4076202	PtrMemberAccess	core -> anal -> reg		4076178	0					
ANR	4076203	PtrMemberAccess	core -> anal		4076178	0					
ANR	4076204	Identifier	core		4076178	0					
ANR	4076205	Identifier	anal		4076178	1					
ANR	4076206	Identifier	reg		4076178	1					
ANR	4076207	Identifier	roregs		4076178	1					
ANR	4076208	ExpressionStatement	"core -> anal -> reg -> roregs = r_str_split_duplist ( node -> value , "","" )"	2463:2:67304:67368	4076178	1	True				
ANR	4076209	AssignmentExpression	"core -> anal -> reg -> roregs = r_str_split_duplist ( node -> value , "","" )"		4076178	0		=			
ANR	4076210	PtrMemberAccess	core -> anal -> reg -> roregs		4076178	0					
ANR	4076211	PtrMemberAccess	core -> anal -> reg		4076178	0					
ANR	4076212	PtrMemberAccess	core -> anal		4076178	0					
ANR	4076213	Identifier	core		4076178	0					
ANR	4076214	Identifier	anal		4076178	1					
ANR	4076215	Identifier	reg		4076178	1					
ANR	4076216	Identifier	roregs		4076178	1					
ANR	4076217	CallExpression	"r_str_split_duplist ( node -> value , "","" )"		4076178	1					
ANR	4076218	Callee	r_str_split_duplist		4076178	0					
ANR	4076219	Identifier	r_str_split_duplist		4076178	0					
ANR	4076220	ArgumentList	node -> value		4076178	1					
ANR	4076221	Argument	node -> value		4076178	0					
ANR	4076222	PtrMemberAccess	node -> value		4076178	0					
ANR	4076223	Identifier	node		4076178	0					
ANR	4076224	Identifier	value		4076178	1					
ANR	4076225	Argument	""","""		4076178	1					
ANR	4076226	PrimaryExpression	""","""		4076178	0					
ANR	4076227	ReturnStatement	return true ;	2465:1:67374:67385	4076178	1	True				
ANR	4076228	Identifier	true		4076178	0					
ANR	4076229	ReturnType	static bool		4076178	1					
ANR	4076230	Identifier	cb_anal_roregs		4076178	2					
ANR	4076231	ParameterList	"RCore * core , RConfigNode * node"		4076178	3					
ANR	4076232	Parameter	RCore * core	2460:27:67181:67191	4076178	0	True				
ANR	4076233	ParameterType	RCore *		4076178	0					
ANR	4076234	Identifier	core		4076178	1					
ANR	4076235	Parameter	RConfigNode * node	2460:40:67194:67210	4076178	1	True				
ANR	4076236	ParameterType	RConfigNode *		4076178	0					
ANR	4076237	Identifier	node		4076178	1					
ANR	4076238	CFGEntryNode	ENTRY		4076178		True				
ANR	4076239	CFGExitNode	EXIT		4076178		True				
ANR	4076240	Symbol	core -> anal -> reg		4076178						
ANR	4076241	Symbol	* core		4076178						
ANR	4076242	Symbol	core -> anal		4076178						
ANR	4076243	Symbol	node -> value		4076178						
ANR	4076244	Symbol	core		4076178						
ANR	4076245	Symbol	node		4076178						
ANR	4076246	Symbol	* * * core		4076178						
ANR	4076247	Symbol	* core -> anal		4076178						
ANR	4076248	Symbol	core -> anal -> reg -> roregs		4076178						
ANR	4076249	Symbol	true		4076178						
ANR	4076250	Symbol	* * core -> anal		4076178						
ANR	4076251	Symbol	* node		4076178						
ANR	4076252	Symbol	* core -> anal -> reg		4076178						
ANR	4076253	Symbol	r_str_split_duplist		4076178						
ANR	4076254	Symbol	* * core		4076178						
ANR	4076255	Function	cb_anal_gp	2468:0:67390:67494							
ANR	4076256	FunctionDef	"cb_anal_gp (RCore * core , RConfigNode * node)"		4076255	0					
ANR	4076257	CompoundStatement		2468:55:67445:67494	4076255	0					
ANR	4076258	ExpressionStatement	core -> anal -> gp = node -> i_value	2469:1:67448:67478	4076255	0	True				
ANR	4076259	AssignmentExpression	core -> anal -> gp = node -> i_value		4076255	0		=			
ANR	4076260	PtrMemberAccess	core -> anal -> gp		4076255	0					
ANR	4076261	PtrMemberAccess	core -> anal		4076255	0					
ANR	4076262	Identifier	core		4076255	0					
ANR	4076263	Identifier	anal		4076255	1					
ANR	4076264	Identifier	gp		4076255	1					
ANR	4076265	PtrMemberAccess	node -> i_value		4076255	1					
ANR	4076266	Identifier	node		4076255	0					
ANR	4076267	Identifier	i_value		4076255	1					
ANR	4076268	ReturnStatement	return true ;	2470:1:67481:67492	4076255	1	True				
ANR	4076269	Identifier	true		4076255	0					
ANR	4076270	ReturnType	static bool		4076255	1					
ANR	4076271	Identifier	cb_anal_gp		4076255	2					
ANR	4076272	ParameterList	"RCore * core , RConfigNode * node"		4076255	3					
ANR	4076273	Parameter	RCore * core	2468:23:67413:67423	4076255	0	True				
ANR	4076274	ParameterType	RCore *		4076255	0					
ANR	4076275	Identifier	core		4076255	1					
ANR	4076276	Parameter	RConfigNode * node	2468:36:67426:67442	4076255	1	True				
ANR	4076277	ParameterType	RConfigNode *		4076255	0					
ANR	4076278	Identifier	node		4076255	1					
ANR	4076279	CFGEntryNode	ENTRY		4076255		True				
ANR	4076280	CFGExitNode	EXIT		4076255		True				
ANR	4076281	Symbol	core		4076255						
ANR	4076282	Symbol	node		4076255						
ANR	4076283	Symbol	* core -> anal		4076255						
ANR	4076284	Symbol	* core		4076255						
ANR	4076285	Symbol	true		4076255						
ANR	4076286	Symbol	* node		4076255						
ANR	4076287	Symbol	core -> anal -> gp		4076255						
ANR	4076288	Symbol	core -> anal		4076255						
ANR	4076289	Symbol	* * core		4076255						
ANR	4076290	Symbol	node -> i_value		4076255						
ANR	4076291	Function	cb_anal_from	2473:0:67497:67754							
ANR	4076292	FunctionDef	"cb_anal_from (RCore * core , RConfigNode * node)"		4076291	0					
ANR	4076293	CompoundStatement		2473:57:67554:67754	4076291	0					
ANR	4076294	IfStatement	"if ( r_config_get_i ( core -> config , ""anal.limits"" ) )"		4076291	0					
ANR	4076295	Condition	"r_config_get_i ( core -> config , ""anal.limits"" )"	2474:5:67561:67604	4076291	0	True				
ANR	4076296	CallExpression	"r_config_get_i ( core -> config , ""anal.limits"" )"		4076291	0					
ANR	4076297	Callee	r_config_get_i		4076291	0					
ANR	4076298	Identifier	r_config_get_i		4076291	0					
ANR	4076299	ArgumentList	core -> config		4076291	1					
ANR	4076300	Argument	core -> config		4076291	0					
ANR	4076301	PtrMemberAccess	core -> config		4076291	0					
ANR	4076302	Identifier	core		4076291	0					
ANR	4076303	Identifier	config		4076291	1					
ANR	4076304	Argument	"""anal.limits"""		4076291	1					
ANR	4076305	PrimaryExpression	"""anal.limits"""		4076291	0					
ANR	4076306	CompoundStatement		2:51:52:52	4076291	1					
ANR	4076307	ExpressionStatement	"r_anal_set_limits ( core -> anal , r_config_get_i ( core -> config , ""anal.from"" ) , r_config_get_i ( core -> config , ""anal.to"" ) )"	2475:2:67611:67735	4076291	0	True				
ANR	4076308	CallExpression	"r_anal_set_limits ( core -> anal , r_config_get_i ( core -> config , ""anal.from"" ) , r_config_get_i ( core -> config , ""anal.to"" ) )"		4076291	0					
ANR	4076309	Callee	r_anal_set_limits		4076291	0					
ANR	4076310	Identifier	r_anal_set_limits		4076291	0					
ANR	4076311	ArgumentList	core -> anal		4076291	1					
ANR	4076312	Argument	core -> anal		4076291	0					
ANR	4076313	PtrMemberAccess	core -> anal		4076291	0					
ANR	4076314	Identifier	core		4076291	0					
ANR	4076315	Identifier	anal		4076291	1					
ANR	4076316	Argument	"r_config_get_i ( core -> config , ""anal.from"" )"		4076291	1					
ANR	4076317	CallExpression	"r_config_get_i ( core -> config , ""anal.from"" )"		4076291	0					
ANR	4076318	Callee	r_config_get_i		4076291	0					
ANR	4076319	Identifier	r_config_get_i		4076291	0					
ANR	4076320	ArgumentList	core -> config		4076291	1					
ANR	4076321	Argument	core -> config		4076291	0					
ANR	4076322	PtrMemberAccess	core -> config		4076291	0					
ANR	4076323	Identifier	core		4076291	0					
ANR	4076324	Identifier	config		4076291	1					
ANR	4076325	Argument	"""anal.from"""		4076291	1					
ANR	4076326	PrimaryExpression	"""anal.from"""		4076291	0					
ANR	4076327	Argument	"r_config_get_i ( core -> config , ""anal.to"" )"		4076291	2					
ANR	4076328	CallExpression	"r_config_get_i ( core -> config , ""anal.to"" )"		4076291	0					
ANR	4076329	Callee	r_config_get_i		4076291	0					
ANR	4076330	Identifier	r_config_get_i		4076291	0					
ANR	4076331	ArgumentList	core -> config		4076291	1					
ANR	4076332	Argument	core -> config		4076291	0					
ANR	4076333	PtrMemberAccess	core -> config		4076291	0					
ANR	4076334	Identifier	core		4076291	0					
ANR	4076335	Identifier	config		4076291	1					
ANR	4076336	Argument	"""anal.to"""		4076291	1					
ANR	4076337	PrimaryExpression	"""anal.to"""		4076291	0					
ANR	4076338	ReturnStatement	return true ;	2479:1:67741:67752	4076291	1	True				
ANR	4076339	Identifier	true		4076291	0					
ANR	4076340	ReturnType	static bool		4076291	1					
ANR	4076341	Identifier	cb_anal_from		4076291	2					
ANR	4076342	ParameterList	"RCore * core , RConfigNode * node"		4076291	3					
ANR	4076343	Parameter	RCore * core	2473:25:67522:67532	4076291	0	True				
ANR	4076344	ParameterType	RCore *		4076291	0					
ANR	4076345	Identifier	core		4076291	1					
ANR	4076346	Parameter	RConfigNode * node	2473:38:67535:67551	4076291	1	True				
ANR	4076347	ParameterType	RConfigNode *		4076291	0					
ANR	4076348	Identifier	node		4076291	1					
ANR	4076349	CFGEntryNode	ENTRY		4076291		True				
ANR	4076350	CFGExitNode	EXIT		4076291		True				
ANR	4076351	Symbol	core -> config		4076291						
ANR	4076352	Symbol	core		4076291						
ANR	4076353	Symbol	node		4076291						
ANR	4076354	Symbol	r_config_get_i		4076291						
ANR	4076355	Symbol	* core		4076291						
ANR	4076356	Symbol	true		4076291						
ANR	4076357	Symbol	core -> anal		4076291						
ANR	4076358	Function	cb_anal_limits	2482:0:67757:68056							
ANR	4076359	FunctionDef	"cb_anal_limits (void * user , RConfigNode * node)"		4076358	0					
ANR	4076360	CompoundStatement		2482:58:67815:68056	4076358	0					
ANR	4076361	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2483:1:67818:67844	4076358	0	True				
ANR	4076362	IdentifierDecl	* core = ( RCore * ) user		4076358	0					
ANR	4076363	IdentifierDeclType	RCore *		4076358	0					
ANR	4076364	Identifier	core		4076358	1					
ANR	4076365	AssignmentExpression	* core = ( RCore * ) user		4076358	2		=			
ANR	4076366	Identifier	core		4076358	0					
ANR	4076367	CastExpression	( RCore * ) user		4076358	1					
ANR	4076368	CastTarget	RCore *		4076358	0					
ANR	4076369	Identifier	user		4076358	1					
ANR	4076370	IfStatement	if ( node -> i_value )		4076358	1					
ANR	4076371	Condition	node -> i_value	2484:5:67851:67863	4076358	0	True				
ANR	4076372	PtrMemberAccess	node -> i_value		4076358	0					
ANR	4076373	Identifier	node		4076358	0					
ANR	4076374	Identifier	i_value		4076358	1					
ANR	4076375	CompoundStatement		3:20:50:50	4076358	1					
ANR	4076376	ExpressionStatement	"r_anal_set_limits ( core -> anal , r_config_get_i ( core -> config , ""anal.from"" ) , r_config_get_i ( core -> config , ""anal.to"" ) )"	2485:2:67870:67994	4076358	0	True				
ANR	4076377	CallExpression	"r_anal_set_limits ( core -> anal , r_config_get_i ( core -> config , ""anal.from"" ) , r_config_get_i ( core -> config , ""anal.to"" ) )"		4076358	0					
ANR	4076378	Callee	r_anal_set_limits		4076358	0					
ANR	4076379	Identifier	r_anal_set_limits		4076358	0					
ANR	4076380	ArgumentList	core -> anal		4076358	1					
ANR	4076381	Argument	core -> anal		4076358	0					
ANR	4076382	PtrMemberAccess	core -> anal		4076358	0					
ANR	4076383	Identifier	core		4076358	0					
ANR	4076384	Identifier	anal		4076358	1					
ANR	4076385	Argument	"r_config_get_i ( core -> config , ""anal.from"" )"		4076358	1					
ANR	4076386	CallExpression	"r_config_get_i ( core -> config , ""anal.from"" )"		4076358	0					
ANR	4076387	Callee	r_config_get_i		4076358	0					
ANR	4076388	Identifier	r_config_get_i		4076358	0					
ANR	4076389	ArgumentList	core -> config		4076358	1					
ANR	4076390	Argument	core -> config		4076358	0					
ANR	4076391	PtrMemberAccess	core -> config		4076358	0					
ANR	4076392	Identifier	core		4076358	0					
ANR	4076393	Identifier	config		4076358	1					
ANR	4076394	Argument	"""anal.from"""		4076358	1					
ANR	4076395	PrimaryExpression	"""anal.from"""		4076358	0					
ANR	4076396	Argument	"r_config_get_i ( core -> config , ""anal.to"" )"		4076358	2					
ANR	4076397	CallExpression	"r_config_get_i ( core -> config , ""anal.to"" )"		4076358	0					
ANR	4076398	Callee	r_config_get_i		4076358	0					
ANR	4076399	Identifier	r_config_get_i		4076358	0					
ANR	4076400	ArgumentList	core -> config		4076358	1					
ANR	4076401	Argument	core -> config		4076358	0					
ANR	4076402	PtrMemberAccess	core -> config		4076358	0					
ANR	4076403	Identifier	core		4076358	0					
ANR	4076404	Identifier	config		4076358	1					
ANR	4076405	Argument	"""anal.to"""		4076358	1					
ANR	4076406	PrimaryExpression	"""anal.to"""		4076358	0					
ANR	4076407	ElseStatement	else		4076358	0					
ANR	4076408	CompoundStatement		7:8:188:188	4076358	0					
ANR	4076409	ExpressionStatement	r_anal_unset_limits ( core -> anal )	2489:2:68008:68040	4076358	0	True				
ANR	4076410	CallExpression	r_anal_unset_limits ( core -> anal )		4076358	0					
ANR	4076411	Callee	r_anal_unset_limits		4076358	0					
ANR	4076412	Identifier	r_anal_unset_limits		4076358	0					
ANR	4076413	ArgumentList	core -> anal		4076358	1					
ANR	4076414	Argument	core -> anal		4076358	0					
ANR	4076415	PtrMemberAccess	core -> anal		4076358	0					
ANR	4076416	Identifier	core		4076358	0					
ANR	4076417	Identifier	anal		4076358	1					
ANR	4076418	ReturnStatement	return 1 ;	2491:1:68046:68054	4076358	2	True				
ANR	4076419	PrimaryExpression	1		4076358	0					
ANR	4076420	ReturnType	static bool		4076358	1					
ANR	4076421	Identifier	cb_anal_limits		4076358	2					
ANR	4076422	ParameterList	"void * user , RConfigNode * node"		4076358	3					
ANR	4076423	Parameter	void * user	2482:27:67784:67793	4076358	0	True				
ANR	4076424	ParameterType	void *		4076358	0					
ANR	4076425	Identifier	user		4076358	1					
ANR	4076426	Parameter	RConfigNode * node	2482:39:67796:67812	4076358	1	True				
ANR	4076427	ParameterType	RConfigNode *		4076358	0					
ANR	4076428	Identifier	node		4076358	1					
ANR	4076429	CFGEntryNode	ENTRY		4076358		True				
ANR	4076430	CFGExitNode	EXIT		4076358		True				
ANR	4076431	Symbol	core -> config		4076358						
ANR	4076432	Symbol	node		4076358						
ANR	4076433	Symbol	core		4076358						
ANR	4076434	Symbol	r_config_get_i		4076358						
ANR	4076435	Symbol	* core		4076358						
ANR	4076436	Symbol	* node		4076358						
ANR	4076437	Symbol	user		4076358						
ANR	4076438	Symbol	core -> anal		4076358						
ANR	4076439	Symbol	node -> i_value		4076358						
ANR	4076440	Function	cb_anal_rnr	2494:0:68059:68205							
ANR	4076441	FunctionDef	"cb_anal_rnr (void * user , RConfigNode * node)"		4076440	0					
ANR	4076442	CompoundStatement		2494:55:68114:68205	4076440	0					
ANR	4076443	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2495:1:68117:68143	4076440	0	True				
ANR	4076444	IdentifierDecl	* core = ( RCore * ) user		4076440	0					
ANR	4076445	IdentifierDeclType	RCore *		4076440	0					
ANR	4076446	Identifier	core		4076440	1					
ANR	4076447	AssignmentExpression	* core = ( RCore * ) user		4076440	2		=			
ANR	4076448	Identifier	core		4076440	0					
ANR	4076449	CastExpression	( RCore * ) user		4076440	1					
ANR	4076450	CastTarget	RCore *		4076440	0					
ANR	4076451	Identifier	user		4076440	1					
ANR	4076452	ExpressionStatement	core -> anal -> recursive_noreturn = node -> i_value	2496:1:68146:68192	4076440	1	True				
ANR	4076453	AssignmentExpression	core -> anal -> recursive_noreturn = node -> i_value		4076440	0		=			
ANR	4076454	PtrMemberAccess	core -> anal -> recursive_noreturn		4076440	0					
ANR	4076455	PtrMemberAccess	core -> anal		4076440	0					
ANR	4076456	Identifier	core		4076440	0					
ANR	4076457	Identifier	anal		4076440	1					
ANR	4076458	Identifier	recursive_noreturn		4076440	1					
ANR	4076459	PtrMemberAccess	node -> i_value		4076440	1					
ANR	4076460	Identifier	node		4076440	0					
ANR	4076461	Identifier	i_value		4076440	1					
ANR	4076462	ReturnStatement	return 1 ;	2497:1:68195:68203	4076440	2	True				
ANR	4076463	PrimaryExpression	1		4076440	0					
ANR	4076464	ReturnType	static bool		4076440	1					
ANR	4076465	Identifier	cb_anal_rnr		4076440	2					
ANR	4076466	ParameterList	"void * user , RConfigNode * node"		4076440	3					
ANR	4076467	Parameter	void * user	2494:24:68083:68092	4076440	0	True				
ANR	4076468	ParameterType	void *		4076440	0					
ANR	4076469	Identifier	user		4076440	1					
ANR	4076470	Parameter	RConfigNode * node	2494:36:68095:68111	4076440	1	True				
ANR	4076471	ParameterType	RConfigNode *		4076440	0					
ANR	4076472	Identifier	node		4076440	1					
ANR	4076473	CFGEntryNode	ENTRY		4076440		True				
ANR	4076474	CFGExitNode	EXIT		4076440		True				
ANR	4076475	Symbol	core -> anal -> recursive_noreturn		4076440						
ANR	4076476	Symbol	node		4076440						
ANR	4076477	Symbol	core		4076440						
ANR	4076478	Symbol	* core -> anal		4076440						
ANR	4076479	Symbol	* core		4076440						
ANR	4076480	Symbol	* node		4076440						
ANR	4076481	Symbol	user		4076440						
ANR	4076482	Symbol	core -> anal		4076440						
ANR	4076483	Symbol	* * core		4076440						
ANR	4076484	Symbol	node -> i_value		4076440						
ANR	4076485	Function	cb_anal_jmptbl	2500:0:68208:68388							
ANR	4076486	FunctionDef	"cb_anal_jmptbl (void * user , void * data)"		4076485	0					
ANR	4076487	CompoundStatement		2500:51:68259:68388	4076485	0					
ANR	4076488	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2501:1:68262:68289	4076485	0	True				
ANR	4076489	IdentifierDecl	* core = ( RCore * ) user		4076485	0					
ANR	4076490	IdentifierDeclType	RCore *		4076485	0					
ANR	4076491	Identifier	core		4076485	1					
ANR	4076492	AssignmentExpression	* core = ( RCore * ) user		4076485	2		=			
ANR	4076493	Identifier	core		4076485	0					
ANR	4076494	CastExpression	( RCore * ) user		4076485	1					
ANR	4076495	CastTarget	RCore *		4076485	0					
ANR	4076496	Identifier	user		4076485	1					
ANR	4076497	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2502:1:68292:68331	4076485	1	True				
ANR	4076498	IdentifierDecl	* node = ( RConfigNode * ) data		4076485	0					
ANR	4076499	IdentifierDeclType	RConfigNode *		4076485	0					
ANR	4076500	Identifier	node		4076485	1					
ANR	4076501	AssignmentExpression	* node = ( RConfigNode * ) data		4076485	2		=			
ANR	4076502	Identifier	node		4076485	0					
ANR	4076503	CastExpression	( RConfigNode * ) data		4076485	1					
ANR	4076504	CastTarget	RConfigNode *		4076485	0					
ANR	4076505	Identifier	data		4076485	1					
ANR	4076506	ExpressionStatement	core -> anal -> opt . jmptbl = node -> i_value	2503:1:68334:68372	4076485	2	True				
ANR	4076507	AssignmentExpression	core -> anal -> opt . jmptbl = node -> i_value		4076485	0		=			
ANR	4076508	MemberAccess	core -> anal -> opt . jmptbl		4076485	0					
ANR	4076509	PtrMemberAccess	core -> anal -> opt		4076485	0					
ANR	4076510	PtrMemberAccess	core -> anal		4076485	0					
ANR	4076511	Identifier	core		4076485	0					
ANR	4076512	Identifier	anal		4076485	1					
ANR	4076513	Identifier	opt		4076485	1					
ANR	4076514	Identifier	jmptbl		4076485	1					
ANR	4076515	PtrMemberAccess	node -> i_value		4076485	1					
ANR	4076516	Identifier	node		4076485	0					
ANR	4076517	Identifier	i_value		4076485	1					
ANR	4076518	ReturnStatement	return true ;	2504:1:68375:68386	4076485	3	True				
ANR	4076519	Identifier	true		4076485	0					
ANR	4076520	ReturnType	static bool		4076485	1					
ANR	4076521	Identifier	cb_anal_jmptbl		4076485	2					
ANR	4076522	ParameterList	"void * user , void * data"		4076485	3					
ANR	4076523	Parameter	void * user	2500:27:68235:68244	4076485	0	True				
ANR	4076524	ParameterType	void *		4076485	0					
ANR	4076525	Identifier	user		4076485	1					
ANR	4076526	Parameter	void * data	2500:39:68247:68256	4076485	1	True				
ANR	4076527	ParameterType	void *		4076485	0					
ANR	4076528	Identifier	data		4076485	1					
ANR	4076529	CFGEntryNode	ENTRY		4076485		True				
ANR	4076530	CFGExitNode	EXIT		4076485		True				
ANR	4076531	Symbol	core -> anal -> opt		4076485						
ANR	4076532	Symbol	data		4076485						
ANR	4076533	Symbol	* core		4076485						
ANR	4076534	Symbol	core -> anal		4076485						
ANR	4076535	Symbol	node -> i_value		4076485						
ANR	4076536	Symbol	core		4076485						
ANR	4076537	Symbol	node		4076485						
ANR	4076538	Symbol	* core -> anal		4076485						
ANR	4076539	Symbol	true		4076485						
ANR	4076540	Symbol	* node		4076485						
ANR	4076541	Symbol	user		4076485						
ANR	4076542	Symbol	core -> anal -> opt . jmptbl		4076485						
ANR	4076543	Symbol	* * core		4076485						
ANR	4076544	Function	cb_anal_cjmpref	2507:0:68391:68573							
ANR	4076545	FunctionDef	"cb_anal_cjmpref (void * user , void * data)"		4076544	0					
ANR	4076546	CompoundStatement		2507:52:68443:68573	4076544	0					
ANR	4076547	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2508:1:68446:68473	4076544	0	True				
ANR	4076548	IdentifierDecl	* core = ( RCore * ) user		4076544	0					
ANR	4076549	IdentifierDeclType	RCore *		4076544	0					
ANR	4076550	Identifier	core		4076544	1					
ANR	4076551	AssignmentExpression	* core = ( RCore * ) user		4076544	2		=			
ANR	4076552	Identifier	core		4076544	0					
ANR	4076553	CastExpression	( RCore * ) user		4076544	1					
ANR	4076554	CastTarget	RCore *		4076544	0					
ANR	4076555	Identifier	user		4076544	1					
ANR	4076556	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2509:1:68476:68515	4076544	1	True				
ANR	4076557	IdentifierDecl	* node = ( RConfigNode * ) data		4076544	0					
ANR	4076558	IdentifierDeclType	RConfigNode *		4076544	0					
ANR	4076559	Identifier	node		4076544	1					
ANR	4076560	AssignmentExpression	* node = ( RConfigNode * ) data		4076544	2		=			
ANR	4076561	Identifier	node		4076544	0					
ANR	4076562	CastExpression	( RConfigNode * ) data		4076544	1					
ANR	4076563	CastTarget	RConfigNode *		4076544	0					
ANR	4076564	Identifier	data		4076544	1					
ANR	4076565	ExpressionStatement	core -> anal -> opt . cjmpref = node -> i_value	2510:1:68518:68557	4076544	2	True				
ANR	4076566	AssignmentExpression	core -> anal -> opt . cjmpref = node -> i_value		4076544	0		=			
ANR	4076567	MemberAccess	core -> anal -> opt . cjmpref		4076544	0					
ANR	4076568	PtrMemberAccess	core -> anal -> opt		4076544	0					
ANR	4076569	PtrMemberAccess	core -> anal		4076544	0					
ANR	4076570	Identifier	core		4076544	0					
ANR	4076571	Identifier	anal		4076544	1					
ANR	4076572	Identifier	opt		4076544	1					
ANR	4076573	Identifier	cjmpref		4076544	1					
ANR	4076574	PtrMemberAccess	node -> i_value		4076544	1					
ANR	4076575	Identifier	node		4076544	0					
ANR	4076576	Identifier	i_value		4076544	1					
ANR	4076577	ReturnStatement	return true ;	2511:1:68560:68571	4076544	3	True				
ANR	4076578	Identifier	true		4076544	0					
ANR	4076579	ReturnType	static bool		4076544	1					
ANR	4076580	Identifier	cb_anal_cjmpref		4076544	2					
ANR	4076581	ParameterList	"void * user , void * data"		4076544	3					
ANR	4076582	Parameter	void * user	2507:28:68419:68428	4076544	0	True				
ANR	4076583	ParameterType	void *		4076544	0					
ANR	4076584	Identifier	user		4076544	1					
ANR	4076585	Parameter	void * data	2507:40:68431:68440	4076544	1	True				
ANR	4076586	ParameterType	void *		4076544	0					
ANR	4076587	Identifier	data		4076544	1					
ANR	4076588	CFGEntryNode	ENTRY		4076544		True				
ANR	4076589	CFGExitNode	EXIT		4076544		True				
ANR	4076590	Symbol	core -> anal -> opt		4076544						
ANR	4076591	Symbol	data		4076544						
ANR	4076592	Symbol	* core		4076544						
ANR	4076593	Symbol	core -> anal		4076544						
ANR	4076594	Symbol	node -> i_value		4076544						
ANR	4076595	Symbol	core		4076544						
ANR	4076596	Symbol	node		4076544						
ANR	4076597	Symbol	core -> anal -> opt . cjmpref		4076544						
ANR	4076598	Symbol	* core -> anal		4076544						
ANR	4076599	Symbol	true		4076544						
ANR	4076600	Symbol	* node		4076544						
ANR	4076601	Symbol	user		4076544						
ANR	4076602	Symbol	* * core		4076544						
ANR	4076603	Function	cb_anal_jmpref	2514:0:68576:68756							
ANR	4076604	FunctionDef	"cb_anal_jmpref (void * user , void * data)"		4076603	0					
ANR	4076605	CompoundStatement		2514:51:68627:68756	4076603	0					
ANR	4076606	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2515:1:68630:68657	4076603	0	True				
ANR	4076607	IdentifierDecl	* core = ( RCore * ) user		4076603	0					
ANR	4076608	IdentifierDeclType	RCore *		4076603	0					
ANR	4076609	Identifier	core		4076603	1					
ANR	4076610	AssignmentExpression	* core = ( RCore * ) user		4076603	2		=			
ANR	4076611	Identifier	core		4076603	0					
ANR	4076612	CastExpression	( RCore * ) user		4076603	1					
ANR	4076613	CastTarget	RCore *		4076603	0					
ANR	4076614	Identifier	user		4076603	1					
ANR	4076615	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2516:1:68660:68699	4076603	1	True				
ANR	4076616	IdentifierDecl	* node = ( RConfigNode * ) data		4076603	0					
ANR	4076617	IdentifierDeclType	RConfigNode *		4076603	0					
ANR	4076618	Identifier	node		4076603	1					
ANR	4076619	AssignmentExpression	* node = ( RConfigNode * ) data		4076603	2		=			
ANR	4076620	Identifier	node		4076603	0					
ANR	4076621	CastExpression	( RConfigNode * ) data		4076603	1					
ANR	4076622	CastTarget	RConfigNode *		4076603	0					
ANR	4076623	Identifier	data		4076603	1					
ANR	4076624	ExpressionStatement	core -> anal -> opt . jmpref = node -> i_value	2517:1:68702:68740	4076603	2	True				
ANR	4076625	AssignmentExpression	core -> anal -> opt . jmpref = node -> i_value		4076603	0		=			
ANR	4076626	MemberAccess	core -> anal -> opt . jmpref		4076603	0					
ANR	4076627	PtrMemberAccess	core -> anal -> opt		4076603	0					
ANR	4076628	PtrMemberAccess	core -> anal		4076603	0					
ANR	4076629	Identifier	core		4076603	0					
ANR	4076630	Identifier	anal		4076603	1					
ANR	4076631	Identifier	opt		4076603	1					
ANR	4076632	Identifier	jmpref		4076603	1					
ANR	4076633	PtrMemberAccess	node -> i_value		4076603	1					
ANR	4076634	Identifier	node		4076603	0					
ANR	4076635	Identifier	i_value		4076603	1					
ANR	4076636	ReturnStatement	return true ;	2518:1:68743:68754	4076603	3	True				
ANR	4076637	Identifier	true		4076603	0					
ANR	4076638	ReturnType	static bool		4076603	1					
ANR	4076639	Identifier	cb_anal_jmpref		4076603	2					
ANR	4076640	ParameterList	"void * user , void * data"		4076603	3					
ANR	4076641	Parameter	void * user	2514:27:68603:68612	4076603	0	True				
ANR	4076642	ParameterType	void *		4076603	0					
ANR	4076643	Identifier	user		4076603	1					
ANR	4076644	Parameter	void * data	2514:39:68615:68624	4076603	1	True				
ANR	4076645	ParameterType	void *		4076603	0					
ANR	4076646	Identifier	data		4076603	1					
ANR	4076647	CFGEntryNode	ENTRY		4076603		True				
ANR	4076648	CFGExitNode	EXIT		4076603		True				
ANR	4076649	Symbol	core -> anal -> opt		4076603						
ANR	4076650	Symbol	core -> anal -> opt . jmpref		4076603						
ANR	4076651	Symbol	data		4076603						
ANR	4076652	Symbol	* core		4076603						
ANR	4076653	Symbol	core -> anal		4076603						
ANR	4076654	Symbol	node -> i_value		4076603						
ANR	4076655	Symbol	core		4076603						
ANR	4076656	Symbol	node		4076603						
ANR	4076657	Symbol	* core -> anal		4076603						
ANR	4076658	Symbol	true		4076603						
ANR	4076659	Symbol	* node		4076603						
ANR	4076660	Symbol	user		4076603						
ANR	4076661	Symbol	* * core		4076603						
ANR	4076662	Function	cb_anal_jmpabove	2521:0:68759:68943							
ANR	4076663	FunctionDef	"cb_anal_jmpabove (void * user , void * data)"		4076662	0					
ANR	4076664	CompoundStatement		2521:53:68812:68943	4076662	0					
ANR	4076665	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2522:1:68815:68842	4076662	0	True				
ANR	4076666	IdentifierDecl	* core = ( RCore * ) user		4076662	0					
ANR	4076667	IdentifierDeclType	RCore *		4076662	0					
ANR	4076668	Identifier	core		4076662	1					
ANR	4076669	AssignmentExpression	* core = ( RCore * ) user		4076662	2		=			
ANR	4076670	Identifier	core		4076662	0					
ANR	4076671	CastExpression	( RCore * ) user		4076662	1					
ANR	4076672	CastTarget	RCore *		4076662	0					
ANR	4076673	Identifier	user		4076662	1					
ANR	4076674	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2523:1:68845:68884	4076662	1	True				
ANR	4076675	IdentifierDecl	* node = ( RConfigNode * ) data		4076662	0					
ANR	4076676	IdentifierDeclType	RConfigNode *		4076662	0					
ANR	4076677	Identifier	node		4076662	1					
ANR	4076678	AssignmentExpression	* node = ( RConfigNode * ) data		4076662	2		=			
ANR	4076679	Identifier	node		4076662	0					
ANR	4076680	CastExpression	( RConfigNode * ) data		4076662	1					
ANR	4076681	CastTarget	RConfigNode *		4076662	0					
ANR	4076682	Identifier	data		4076662	1					
ANR	4076683	ExpressionStatement	core -> anal -> opt . jmpabove = node -> i_value	2524:1:68887:68927	4076662	2	True				
ANR	4076684	AssignmentExpression	core -> anal -> opt . jmpabove = node -> i_value		4076662	0		=			
ANR	4076685	MemberAccess	core -> anal -> opt . jmpabove		4076662	0					
ANR	4076686	PtrMemberAccess	core -> anal -> opt		4076662	0					
ANR	4076687	PtrMemberAccess	core -> anal		4076662	0					
ANR	4076688	Identifier	core		4076662	0					
ANR	4076689	Identifier	anal		4076662	1					
ANR	4076690	Identifier	opt		4076662	1					
ANR	4076691	Identifier	jmpabove		4076662	1					
ANR	4076692	PtrMemberAccess	node -> i_value		4076662	1					
ANR	4076693	Identifier	node		4076662	0					
ANR	4076694	Identifier	i_value		4076662	1					
ANR	4076695	ReturnStatement	return true ;	2525:1:68930:68941	4076662	3	True				
ANR	4076696	Identifier	true		4076662	0					
ANR	4076697	ReturnType	static bool		4076662	1					
ANR	4076698	Identifier	cb_anal_jmpabove		4076662	2					
ANR	4076699	ParameterList	"void * user , void * data"		4076662	3					
ANR	4076700	Parameter	void * user	2521:29:68788:68797	4076662	0	True				
ANR	4076701	ParameterType	void *		4076662	0					
ANR	4076702	Identifier	user		4076662	1					
ANR	4076703	Parameter	void * data	2521:41:68800:68809	4076662	1	True				
ANR	4076704	ParameterType	void *		4076662	0					
ANR	4076705	Identifier	data		4076662	1					
ANR	4076706	CFGEntryNode	ENTRY		4076662		True				
ANR	4076707	CFGExitNode	EXIT		4076662		True				
ANR	4076708	Symbol	core -> anal -> opt		4076662						
ANR	4076709	Symbol	data		4076662						
ANR	4076710	Symbol	core -> anal -> opt . jmpabove		4076662						
ANR	4076711	Symbol	* core		4076662						
ANR	4076712	Symbol	core -> anal		4076662						
ANR	4076713	Symbol	node -> i_value		4076662						
ANR	4076714	Symbol	core		4076662						
ANR	4076715	Symbol	node		4076662						
ANR	4076716	Symbol	* core -> anal		4076662						
ANR	4076717	Symbol	true		4076662						
ANR	4076718	Symbol	* node		4076662						
ANR	4076719	Symbol	user		4076662						
ANR	4076720	Symbol	* * core		4076662						
ANR	4076721	Function	cb_anal_loads	2528:0:68946:69124							
ANR	4076722	FunctionDef	"cb_anal_loads (void * user , void * data)"		4076721	0					
ANR	4076723	CompoundStatement		2528:50:68996:69124	4076721	0					
ANR	4076724	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2529:1:68999:69026	4076721	0	True				
ANR	4076725	IdentifierDecl	* core = ( RCore * ) user		4076721	0					
ANR	4076726	IdentifierDeclType	RCore *		4076721	0					
ANR	4076727	Identifier	core		4076721	1					
ANR	4076728	AssignmentExpression	* core = ( RCore * ) user		4076721	2		=			
ANR	4076729	Identifier	core		4076721	0					
ANR	4076730	CastExpression	( RCore * ) user		4076721	1					
ANR	4076731	CastTarget	RCore *		4076721	0					
ANR	4076732	Identifier	user		4076721	1					
ANR	4076733	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2530:1:69029:69068	4076721	1	True				
ANR	4076734	IdentifierDecl	* node = ( RConfigNode * ) data		4076721	0					
ANR	4076735	IdentifierDeclType	RConfigNode *		4076721	0					
ANR	4076736	Identifier	node		4076721	1					
ANR	4076737	AssignmentExpression	* node = ( RConfigNode * ) data		4076721	2		=			
ANR	4076738	Identifier	node		4076721	0					
ANR	4076739	CastExpression	( RConfigNode * ) data		4076721	1					
ANR	4076740	CastTarget	RConfigNode *		4076721	0					
ANR	4076741	Identifier	data		4076721	1					
ANR	4076742	ExpressionStatement	core -> anal -> opt . loads = node -> i_value	2531:1:69071:69108	4076721	2	True				
ANR	4076743	AssignmentExpression	core -> anal -> opt . loads = node -> i_value		4076721	0		=			
ANR	4076744	MemberAccess	core -> anal -> opt . loads		4076721	0					
ANR	4076745	PtrMemberAccess	core -> anal -> opt		4076721	0					
ANR	4076746	PtrMemberAccess	core -> anal		4076721	0					
ANR	4076747	Identifier	core		4076721	0					
ANR	4076748	Identifier	anal		4076721	1					
ANR	4076749	Identifier	opt		4076721	1					
ANR	4076750	Identifier	loads		4076721	1					
ANR	4076751	PtrMemberAccess	node -> i_value		4076721	1					
ANR	4076752	Identifier	node		4076721	0					
ANR	4076753	Identifier	i_value		4076721	1					
ANR	4076754	ReturnStatement	return true ;	2532:1:69111:69122	4076721	3	True				
ANR	4076755	Identifier	true		4076721	0					
ANR	4076756	ReturnType	static bool		4076721	1					
ANR	4076757	Identifier	cb_anal_loads		4076721	2					
ANR	4076758	ParameterList	"void * user , void * data"		4076721	3					
ANR	4076759	Parameter	void * user	2528:26:68972:68981	4076721	0	True				
ANR	4076760	ParameterType	void *		4076721	0					
ANR	4076761	Identifier	user		4076721	1					
ANR	4076762	Parameter	void * data	2528:38:68984:68993	4076721	1	True				
ANR	4076763	ParameterType	void *		4076721	0					
ANR	4076764	Identifier	data		4076721	1					
ANR	4076765	CFGEntryNode	ENTRY		4076721		True				
ANR	4076766	CFGExitNode	EXIT		4076721		True				
ANR	4076767	Symbol	core -> anal -> opt		4076721						
ANR	4076768	Symbol	data		4076721						
ANR	4076769	Symbol	* core		4076721						
ANR	4076770	Symbol	core -> anal		4076721						
ANR	4076771	Symbol	node -> i_value		4076721						
ANR	4076772	Symbol	core		4076721						
ANR	4076773	Symbol	node		4076721						
ANR	4076774	Symbol	* core -> anal		4076721						
ANR	4076775	Symbol	true		4076721						
ANR	4076776	Symbol	core -> anal -> opt . loads		4076721						
ANR	4076777	Symbol	* node		4076721						
ANR	4076778	Symbol	user		4076721						
ANR	4076779	Symbol	* * core		4076721						
ANR	4076780	Function	cb_anal_followdatarefs	2535:0:69127:69323							
ANR	4076781	FunctionDef	"cb_anal_followdatarefs (void * user , void * data)"		4076780	0					
ANR	4076782	CompoundStatement		2535:59:69186:69323	4076780	0					
ANR	4076783	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2536:1:69189:69216	4076780	0	True				
ANR	4076784	IdentifierDecl	* core = ( RCore * ) user		4076780	0					
ANR	4076785	IdentifierDeclType	RCore *		4076780	0					
ANR	4076786	Identifier	core		4076780	1					
ANR	4076787	AssignmentExpression	* core = ( RCore * ) user		4076780	2		=			
ANR	4076788	Identifier	core		4076780	0					
ANR	4076789	CastExpression	( RCore * ) user		4076780	1					
ANR	4076790	CastTarget	RCore *		4076780	0					
ANR	4076791	Identifier	user		4076780	1					
ANR	4076792	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2537:1:69219:69258	4076780	1	True				
ANR	4076793	IdentifierDecl	* node = ( RConfigNode * ) data		4076780	0					
ANR	4076794	IdentifierDeclType	RConfigNode *		4076780	0					
ANR	4076795	Identifier	node		4076780	1					
ANR	4076796	AssignmentExpression	* node = ( RConfigNode * ) data		4076780	2		=			
ANR	4076797	Identifier	node		4076780	0					
ANR	4076798	CastExpression	( RConfigNode * ) data		4076780	1					
ANR	4076799	CastTarget	RConfigNode *		4076780	0					
ANR	4076800	Identifier	data		4076780	1					
ANR	4076801	ExpressionStatement	core -> anal -> opt . followdatarefs = node -> i_value	2538:1:69261:69307	4076780	2	True				
ANR	4076802	AssignmentExpression	core -> anal -> opt . followdatarefs = node -> i_value		4076780	0		=			
ANR	4076803	MemberAccess	core -> anal -> opt . followdatarefs		4076780	0					
ANR	4076804	PtrMemberAccess	core -> anal -> opt		4076780	0					
ANR	4076805	PtrMemberAccess	core -> anal		4076780	0					
ANR	4076806	Identifier	core		4076780	0					
ANR	4076807	Identifier	anal		4076780	1					
ANR	4076808	Identifier	opt		4076780	1					
ANR	4076809	Identifier	followdatarefs		4076780	1					
ANR	4076810	PtrMemberAccess	node -> i_value		4076780	1					
ANR	4076811	Identifier	node		4076780	0					
ANR	4076812	Identifier	i_value		4076780	1					
ANR	4076813	ReturnStatement	return true ;	2539:1:69310:69321	4076780	3	True				
ANR	4076814	Identifier	true		4076780	0					
ANR	4076815	ReturnType	static bool		4076780	1					
ANR	4076816	Identifier	cb_anal_followdatarefs		4076780	2					
ANR	4076817	ParameterList	"void * user , void * data"		4076780	3					
ANR	4076818	Parameter	void * user	2535:35:69162:69171	4076780	0	True				
ANR	4076819	ParameterType	void *		4076780	0					
ANR	4076820	Identifier	user		4076780	1					
ANR	4076821	Parameter	void * data	2535:47:69174:69183	4076780	1	True				
ANR	4076822	ParameterType	void *		4076780	0					
ANR	4076823	Identifier	data		4076780	1					
ANR	4076824	CFGEntryNode	ENTRY		4076780		True				
ANR	4076825	CFGExitNode	EXIT		4076780		True				
ANR	4076826	Symbol	core -> anal -> opt		4076780						
ANR	4076827	Symbol	data		4076780						
ANR	4076828	Symbol	* core		4076780						
ANR	4076829	Symbol	core -> anal		4076780						
ANR	4076830	Symbol	core -> anal -> opt . followdatarefs		4076780						
ANR	4076831	Symbol	node -> i_value		4076780						
ANR	4076832	Symbol	core		4076780						
ANR	4076833	Symbol	node		4076780						
ANR	4076834	Symbol	* core -> anal		4076780						
ANR	4076835	Symbol	true		4076780						
ANR	4076836	Symbol	* node		4076780						
ANR	4076837	Symbol	user		4076780						
ANR	4076838	Symbol	* * core		4076780						
ANR	4076839	Function	cb_anal_jmpmid	2542:0:69326:69506							
ANR	4076840	FunctionDef	"cb_anal_jmpmid (void * user , void * data)"		4076839	0					
ANR	4076841	CompoundStatement		2542:51:69377:69506	4076839	0					
ANR	4076842	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2543:1:69380:69407	4076839	0	True				
ANR	4076843	IdentifierDecl	* core = ( RCore * ) user		4076839	0					
ANR	4076844	IdentifierDeclType	RCore *		4076839	0					
ANR	4076845	Identifier	core		4076839	1					
ANR	4076846	AssignmentExpression	* core = ( RCore * ) user		4076839	2		=			
ANR	4076847	Identifier	core		4076839	0					
ANR	4076848	CastExpression	( RCore * ) user		4076839	1					
ANR	4076849	CastTarget	RCore *		4076839	0					
ANR	4076850	Identifier	user		4076839	1					
ANR	4076851	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2544:1:69410:69449	4076839	1	True				
ANR	4076852	IdentifierDecl	* node = ( RConfigNode * ) data		4076839	0					
ANR	4076853	IdentifierDeclType	RConfigNode *		4076839	0					
ANR	4076854	Identifier	node		4076839	1					
ANR	4076855	AssignmentExpression	* node = ( RConfigNode * ) data		4076839	2		=			
ANR	4076856	Identifier	node		4076839	0					
ANR	4076857	CastExpression	( RConfigNode * ) data		4076839	1					
ANR	4076858	CastTarget	RConfigNode *		4076839	0					
ANR	4076859	Identifier	data		4076839	1					
ANR	4076860	ExpressionStatement	core -> anal -> opt . jmpmid = node -> i_value	2545:1:69452:69490	4076839	2	True				
ANR	4076861	AssignmentExpression	core -> anal -> opt . jmpmid = node -> i_value		4076839	0		=			
ANR	4076862	MemberAccess	core -> anal -> opt . jmpmid		4076839	0					
ANR	4076863	PtrMemberAccess	core -> anal -> opt		4076839	0					
ANR	4076864	PtrMemberAccess	core -> anal		4076839	0					
ANR	4076865	Identifier	core		4076839	0					
ANR	4076866	Identifier	anal		4076839	1					
ANR	4076867	Identifier	opt		4076839	1					
ANR	4076868	Identifier	jmpmid		4076839	1					
ANR	4076869	PtrMemberAccess	node -> i_value		4076839	1					
ANR	4076870	Identifier	node		4076839	0					
ANR	4076871	Identifier	i_value		4076839	1					
ANR	4076872	ReturnStatement	return true ;	2546:1:69493:69504	4076839	3	True				
ANR	4076873	Identifier	true		4076839	0					
ANR	4076874	ReturnType	static bool		4076839	1					
ANR	4076875	Identifier	cb_anal_jmpmid		4076839	2					
ANR	4076876	ParameterList	"void * user , void * data"		4076839	3					
ANR	4076877	Parameter	void * user	2542:27:69353:69362	4076839	0	True				
ANR	4076878	ParameterType	void *		4076839	0					
ANR	4076879	Identifier	user		4076839	1					
ANR	4076880	Parameter	void * data	2542:39:69365:69374	4076839	1	True				
ANR	4076881	ParameterType	void *		4076839	0					
ANR	4076882	Identifier	data		4076839	1					
ANR	4076883	CFGEntryNode	ENTRY		4076839		True				
ANR	4076884	CFGExitNode	EXIT		4076839		True				
ANR	4076885	Symbol	core -> anal -> opt		4076839						
ANR	4076886	Symbol	data		4076839						
ANR	4076887	Symbol	* core		4076839						
ANR	4076888	Symbol	core -> anal		4076839						
ANR	4076889	Symbol	node -> i_value		4076839						
ANR	4076890	Symbol	core		4076839						
ANR	4076891	Symbol	node		4076839						
ANR	4076892	Symbol	* core -> anal		4076839						
ANR	4076893	Symbol	core -> anal -> opt . jmpmid		4076839						
ANR	4076894	Symbol	true		4076839						
ANR	4076895	Symbol	* node		4076839						
ANR	4076896	Symbol	user		4076839						
ANR	4076897	Symbol	* * core		4076839						
ANR	4076898	Function	cb_anal_searchstringrefs	2549:0:69509:69709							
ANR	4076899	FunctionDef	"cb_anal_searchstringrefs (void * user , void * data)"		4076898	0					
ANR	4076900	CompoundStatement		2549:61:69570:69709	4076898	0					
ANR	4076901	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2550:1:69573:69600	4076898	0	True				
ANR	4076902	IdentifierDecl	* core = ( RCore * ) user		4076898	0					
ANR	4076903	IdentifierDeclType	RCore *		4076898	0					
ANR	4076904	Identifier	core		4076898	1					
ANR	4076905	AssignmentExpression	* core = ( RCore * ) user		4076898	2		=			
ANR	4076906	Identifier	core		4076898	0					
ANR	4076907	CastExpression	( RCore * ) user		4076898	1					
ANR	4076908	CastTarget	RCore *		4076898	0					
ANR	4076909	Identifier	user		4076898	1					
ANR	4076910	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2551:1:69603:69642	4076898	1	True				
ANR	4076911	IdentifierDecl	* node = ( RConfigNode * ) data		4076898	0					
ANR	4076912	IdentifierDeclType	RConfigNode *		4076898	0					
ANR	4076913	Identifier	node		4076898	1					
ANR	4076914	AssignmentExpression	* node = ( RConfigNode * ) data		4076898	2		=			
ANR	4076915	Identifier	node		4076898	0					
ANR	4076916	CastExpression	( RConfigNode * ) data		4076898	1					
ANR	4076917	CastTarget	RConfigNode *		4076898	0					
ANR	4076918	Identifier	data		4076898	1					
ANR	4076919	ExpressionStatement	core -> anal -> opt . searchstringrefs = node -> i_value	2552:1:69645:69693	4076898	2	True				
ANR	4076920	AssignmentExpression	core -> anal -> opt . searchstringrefs = node -> i_value		4076898	0		=			
ANR	4076921	MemberAccess	core -> anal -> opt . searchstringrefs		4076898	0					
ANR	4076922	PtrMemberAccess	core -> anal -> opt		4076898	0					
ANR	4076923	PtrMemberAccess	core -> anal		4076898	0					
ANR	4076924	Identifier	core		4076898	0					
ANR	4076925	Identifier	anal		4076898	1					
ANR	4076926	Identifier	opt		4076898	1					
ANR	4076927	Identifier	searchstringrefs		4076898	1					
ANR	4076928	PtrMemberAccess	node -> i_value		4076898	1					
ANR	4076929	Identifier	node		4076898	0					
ANR	4076930	Identifier	i_value		4076898	1					
ANR	4076931	ReturnStatement	return true ;	2553:1:69696:69707	4076898	3	True				
ANR	4076932	Identifier	true		4076898	0					
ANR	4076933	ReturnType	static bool		4076898	1					
ANR	4076934	Identifier	cb_anal_searchstringrefs		4076898	2					
ANR	4076935	ParameterList	"void * user , void * data"		4076898	3					
ANR	4076936	Parameter	void * user	2549:37:69546:69555	4076898	0	True				
ANR	4076937	ParameterType	void *		4076898	0					
ANR	4076938	Identifier	user		4076898	1					
ANR	4076939	Parameter	void * data	2549:49:69558:69567	4076898	1	True				
ANR	4076940	ParameterType	void *		4076898	0					
ANR	4076941	Identifier	data		4076898	1					
ANR	4076942	CFGEntryNode	ENTRY		4076898		True				
ANR	4076943	CFGExitNode	EXIT		4076898		True				
ANR	4076944	Symbol	core -> anal -> opt . searchstringrefs		4076898						
ANR	4076945	Symbol	core -> anal -> opt		4076898						
ANR	4076946	Symbol	data		4076898						
ANR	4076947	Symbol	* core		4076898						
ANR	4076948	Symbol	core -> anal		4076898						
ANR	4076949	Symbol	node -> i_value		4076898						
ANR	4076950	Symbol	core		4076898						
ANR	4076951	Symbol	node		4076898						
ANR	4076952	Symbol	* core -> anal		4076898						
ANR	4076953	Symbol	true		4076898						
ANR	4076954	Symbol	* node		4076898						
ANR	4076955	Symbol	user		4076898						
ANR	4076956	Symbol	* * core		4076898						
ANR	4076957	Function	cb_anal_pushret	2556:0:69712:69894							
ANR	4076958	FunctionDef	"cb_anal_pushret (void * user , void * data)"		4076957	0					
ANR	4076959	CompoundStatement		2556:52:69764:69894	4076957	0					
ANR	4076960	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2557:1:69767:69794	4076957	0	True				
ANR	4076961	IdentifierDecl	* core = ( RCore * ) user		4076957	0					
ANR	4076962	IdentifierDeclType	RCore *		4076957	0					
ANR	4076963	Identifier	core		4076957	1					
ANR	4076964	AssignmentExpression	* core = ( RCore * ) user		4076957	2		=			
ANR	4076965	Identifier	core		4076957	0					
ANR	4076966	CastExpression	( RCore * ) user		4076957	1					
ANR	4076967	CastTarget	RCore *		4076957	0					
ANR	4076968	Identifier	user		4076957	1					
ANR	4076969	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2558:1:69797:69836	4076957	1	True				
ANR	4076970	IdentifierDecl	* node = ( RConfigNode * ) data		4076957	0					
ANR	4076971	IdentifierDeclType	RConfigNode *		4076957	0					
ANR	4076972	Identifier	node		4076957	1					
ANR	4076973	AssignmentExpression	* node = ( RConfigNode * ) data		4076957	2		=			
ANR	4076974	Identifier	node		4076957	0					
ANR	4076975	CastExpression	( RConfigNode * ) data		4076957	1					
ANR	4076976	CastTarget	RConfigNode *		4076957	0					
ANR	4076977	Identifier	data		4076957	1					
ANR	4076978	ExpressionStatement	core -> anal -> opt . pushret = node -> i_value	2559:1:69839:69878	4076957	2	True				
ANR	4076979	AssignmentExpression	core -> anal -> opt . pushret = node -> i_value		4076957	0		=			
ANR	4076980	MemberAccess	core -> anal -> opt . pushret		4076957	0					
ANR	4076981	PtrMemberAccess	core -> anal -> opt		4076957	0					
ANR	4076982	PtrMemberAccess	core -> anal		4076957	0					
ANR	4076983	Identifier	core		4076957	0					
ANR	4076984	Identifier	anal		4076957	1					
ANR	4076985	Identifier	opt		4076957	1					
ANR	4076986	Identifier	pushret		4076957	1					
ANR	4076987	PtrMemberAccess	node -> i_value		4076957	1					
ANR	4076988	Identifier	node		4076957	0					
ANR	4076989	Identifier	i_value		4076957	1					
ANR	4076990	ReturnStatement	return true ;	2560:1:69881:69892	4076957	3	True				
ANR	4076991	Identifier	true		4076957	0					
ANR	4076992	ReturnType	static bool		4076957	1					
ANR	4076993	Identifier	cb_anal_pushret		4076957	2					
ANR	4076994	ParameterList	"void * user , void * data"		4076957	3					
ANR	4076995	Parameter	void * user	2556:28:69740:69749	4076957	0	True				
ANR	4076996	ParameterType	void *		4076957	0					
ANR	4076997	Identifier	user		4076957	1					
ANR	4076998	Parameter	void * data	2556:40:69752:69761	4076957	1	True				
ANR	4076999	ParameterType	void *		4076957	0					
ANR	4077000	Identifier	data		4076957	1					
ANR	4077001	CFGEntryNode	ENTRY		4076957		True				
ANR	4077002	CFGExitNode	EXIT		4076957		True				
ANR	4077003	Symbol	core -> anal -> opt		4076957						
ANR	4077004	Symbol	data		4076957						
ANR	4077005	Symbol	* core		4076957						
ANR	4077006	Symbol	core -> anal		4076957						
ANR	4077007	Symbol	node -> i_value		4076957						
ANR	4077008	Symbol	core		4076957						
ANR	4077009	Symbol	node		4076957						
ANR	4077010	Symbol	* core -> anal		4076957						
ANR	4077011	Symbol	true		4076957						
ANR	4077012	Symbol	* node		4076957						
ANR	4077013	Symbol	user		4076957						
ANR	4077014	Symbol	core -> anal -> opt . pushret		4076957						
ANR	4077015	Symbol	* * core		4076957						
ANR	4077016	Function	cb_anal_brokenrefs	2563:0:69897:70095							
ANR	4077017	FunctionDef	"cb_anal_brokenrefs (void * user , void * data)"		4077016	0					
ANR	4077018	CompoundStatement		2563:55:69952:70095	4077016	0					
ANR	4077019	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2564:1:69955:69982	4077016	0	True				
ANR	4077020	IdentifierDecl	* core = ( RCore * ) user		4077016	0					
ANR	4077021	IdentifierDeclType	RCore *		4077016	0					
ANR	4077022	Identifier	core		4077016	1					
ANR	4077023	AssignmentExpression	* core = ( RCore * ) user		4077016	2		=			
ANR	4077024	Identifier	core		4077016	0					
ANR	4077025	CastExpression	( RCore * ) user		4077016	1					
ANR	4077026	CastTarget	RCore *		4077016	0					
ANR	4077027	Identifier	user		4077016	1					
ANR	4077028	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2565:1:69985:70024	4077016	1	True				
ANR	4077029	IdentifierDecl	* node = ( RConfigNode * ) data		4077016	0					
ANR	4077030	IdentifierDeclType	RConfigNode *		4077016	0					
ANR	4077031	Identifier	node		4077016	1					
ANR	4077032	AssignmentExpression	* node = ( RConfigNode * ) data		4077016	2		=			
ANR	4077033	Identifier	node		4077016	0					
ANR	4077034	CastExpression	( RConfigNode * ) data		4077016	1					
ANR	4077035	CastTarget	RConfigNode *		4077016	0					
ANR	4077036	Identifier	data		4077016	1					
ANR	4077037	ExpressionStatement	core -> anal -> opt . followbrokenfcnsrefs = node -> i_value	2566:1:70027:70079	4077016	2	True				
ANR	4077038	AssignmentExpression	core -> anal -> opt . followbrokenfcnsrefs = node -> i_value		4077016	0		=			
ANR	4077039	MemberAccess	core -> anal -> opt . followbrokenfcnsrefs		4077016	0					
ANR	4077040	PtrMemberAccess	core -> anal -> opt		4077016	0					
ANR	4077041	PtrMemberAccess	core -> anal		4077016	0					
ANR	4077042	Identifier	core		4077016	0					
ANR	4077043	Identifier	anal		4077016	1					
ANR	4077044	Identifier	opt		4077016	1					
ANR	4077045	Identifier	followbrokenfcnsrefs		4077016	1					
ANR	4077046	PtrMemberAccess	node -> i_value		4077016	1					
ANR	4077047	Identifier	node		4077016	0					
ANR	4077048	Identifier	i_value		4077016	1					
ANR	4077049	ReturnStatement	return true ;	2567:1:70082:70093	4077016	3	True				
ANR	4077050	Identifier	true		4077016	0					
ANR	4077051	ReturnType	static bool		4077016	1					
ANR	4077052	Identifier	cb_anal_brokenrefs		4077016	2					
ANR	4077053	ParameterList	"void * user , void * data"		4077016	3					
ANR	4077054	Parameter	void * user	2563:31:69928:69937	4077016	0	True				
ANR	4077055	ParameterType	void *		4077016	0					
ANR	4077056	Identifier	user		4077016	1					
ANR	4077057	Parameter	void * data	2563:43:69940:69949	4077016	1	True				
ANR	4077058	ParameterType	void *		4077016	0					
ANR	4077059	Identifier	data		4077016	1					
ANR	4077060	CFGEntryNode	ENTRY		4077016		True				
ANR	4077061	CFGExitNode	EXIT		4077016		True				
ANR	4077062	Symbol	core -> anal -> opt		4077016						
ANR	4077063	Symbol	data		4077016						
ANR	4077064	Symbol	core -> anal -> opt . followbrokenfcnsrefs		4077016						
ANR	4077065	Symbol	* core		4077016						
ANR	4077066	Symbol	core -> anal		4077016						
ANR	4077067	Symbol	node -> i_value		4077016						
ANR	4077068	Symbol	core		4077016						
ANR	4077069	Symbol	node		4077016						
ANR	4077070	Symbol	* core -> anal		4077016						
ANR	4077071	Symbol	true		4077016						
ANR	4077072	Symbol	* node		4077016						
ANR	4077073	Symbol	user		4077016						
ANR	4077074	Symbol	* * core		4077016						
ANR	4077075	Function	cb_anal_trycatch	2570:0:70098:70282							
ANR	4077076	FunctionDef	"cb_anal_trycatch (void * user , void * data)"		4077075	0					
ANR	4077077	CompoundStatement		2570:53:70151:70282	4077075	0					
ANR	4077078	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2571:1:70154:70181	4077075	0	True				
ANR	4077079	IdentifierDecl	* core = ( RCore * ) user		4077075	0					
ANR	4077080	IdentifierDeclType	RCore *		4077075	0					
ANR	4077081	Identifier	core		4077075	1					
ANR	4077082	AssignmentExpression	* core = ( RCore * ) user		4077075	2		=			
ANR	4077083	Identifier	core		4077075	0					
ANR	4077084	CastExpression	( RCore * ) user		4077075	1					
ANR	4077085	CastTarget	RCore *		4077075	0					
ANR	4077086	Identifier	user		4077075	1					
ANR	4077087	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2572:1:70184:70223	4077075	1	True				
ANR	4077088	IdentifierDecl	* node = ( RConfigNode * ) data		4077075	0					
ANR	4077089	IdentifierDeclType	RConfigNode *		4077075	0					
ANR	4077090	Identifier	node		4077075	1					
ANR	4077091	AssignmentExpression	* node = ( RConfigNode * ) data		4077075	2		=			
ANR	4077092	Identifier	node		4077075	0					
ANR	4077093	CastExpression	( RConfigNode * ) data		4077075	1					
ANR	4077094	CastTarget	RConfigNode *		4077075	0					
ANR	4077095	Identifier	data		4077075	1					
ANR	4077096	ExpressionStatement	core -> anal -> opt . trycatch = node -> i_value	2573:1:70226:70266	4077075	2	True				
ANR	4077097	AssignmentExpression	core -> anal -> opt . trycatch = node -> i_value		4077075	0		=			
ANR	4077098	MemberAccess	core -> anal -> opt . trycatch		4077075	0					
ANR	4077099	PtrMemberAccess	core -> anal -> opt		4077075	0					
ANR	4077100	PtrMemberAccess	core -> anal		4077075	0					
ANR	4077101	Identifier	core		4077075	0					
ANR	4077102	Identifier	anal		4077075	1					
ANR	4077103	Identifier	opt		4077075	1					
ANR	4077104	Identifier	trycatch		4077075	1					
ANR	4077105	PtrMemberAccess	node -> i_value		4077075	1					
ANR	4077106	Identifier	node		4077075	0					
ANR	4077107	Identifier	i_value		4077075	1					
ANR	4077108	ReturnStatement	return true ;	2574:1:70269:70280	4077075	3	True				
ANR	4077109	Identifier	true		4077075	0					
ANR	4077110	ReturnType	static bool		4077075	1					
ANR	4077111	Identifier	cb_anal_trycatch		4077075	2					
ANR	4077112	ParameterList	"void * user , void * data"		4077075	3					
ANR	4077113	Parameter	void * user	2570:29:70127:70136	4077075	0	True				
ANR	4077114	ParameterType	void *		4077075	0					
ANR	4077115	Identifier	user		4077075	1					
ANR	4077116	Parameter	void * data	2570:41:70139:70148	4077075	1	True				
ANR	4077117	ParameterType	void *		4077075	0					
ANR	4077118	Identifier	data		4077075	1					
ANR	4077119	CFGEntryNode	ENTRY		4077075		True				
ANR	4077120	CFGExitNode	EXIT		4077075		True				
ANR	4077121	Symbol	core -> anal -> opt		4077075						
ANR	4077122	Symbol	data		4077075						
ANR	4077123	Symbol	* core		4077075						
ANR	4077124	Symbol	core -> anal		4077075						
ANR	4077125	Symbol	node -> i_value		4077075						
ANR	4077126	Symbol	core		4077075						
ANR	4077127	Symbol	node		4077075						
ANR	4077128	Symbol	core -> anal -> opt . trycatch		4077075						
ANR	4077129	Symbol	* core -> anal		4077075						
ANR	4077130	Symbol	true		4077075						
ANR	4077131	Symbol	* node		4077075						
ANR	4077132	Symbol	user		4077075						
ANR	4077133	Symbol	* * core		4077075						
ANR	4077134	Function	cb_anal_bb_max_size	2577:0:70285:70475							
ANR	4077135	FunctionDef	"cb_anal_bb_max_size (void * user , void * data)"		4077134	0					
ANR	4077136	CompoundStatement		2577:56:70341:70475	4077134	0					
ANR	4077137	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2578:1:70344:70371	4077134	0	True				
ANR	4077138	IdentifierDecl	* core = ( RCore * ) user		4077134	0					
ANR	4077139	IdentifierDeclType	RCore *		4077134	0					
ANR	4077140	Identifier	core		4077134	1					
ANR	4077141	AssignmentExpression	* core = ( RCore * ) user		4077134	2		=			
ANR	4077142	Identifier	core		4077134	0					
ANR	4077143	CastExpression	( RCore * ) user		4077134	1					
ANR	4077144	CastTarget	RCore *		4077134	0					
ANR	4077145	Identifier	user		4077134	1					
ANR	4077146	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2579:1:70374:70413	4077134	1	True				
ANR	4077147	IdentifierDecl	* node = ( RConfigNode * ) data		4077134	0					
ANR	4077148	IdentifierDeclType	RConfigNode *		4077134	0					
ANR	4077149	Identifier	node		4077134	1					
ANR	4077150	AssignmentExpression	* node = ( RConfigNode * ) data		4077134	2		=			
ANR	4077151	Identifier	node		4077134	0					
ANR	4077152	CastExpression	( RConfigNode * ) data		4077134	1					
ANR	4077153	CastTarget	RConfigNode *		4077134	0					
ANR	4077154	Identifier	data		4077134	1					
ANR	4077155	ExpressionStatement	core -> anal -> opt . bb_max_size = node -> i_value	2580:1:70416:70459	4077134	2	True				
ANR	4077156	AssignmentExpression	core -> anal -> opt . bb_max_size = node -> i_value		4077134	0		=			
ANR	4077157	MemberAccess	core -> anal -> opt . bb_max_size		4077134	0					
ANR	4077158	PtrMemberAccess	core -> anal -> opt		4077134	0					
ANR	4077159	PtrMemberAccess	core -> anal		4077134	0					
ANR	4077160	Identifier	core		4077134	0					
ANR	4077161	Identifier	anal		4077134	1					
ANR	4077162	Identifier	opt		4077134	1					
ANR	4077163	Identifier	bb_max_size		4077134	1					
ANR	4077164	PtrMemberAccess	node -> i_value		4077134	1					
ANR	4077165	Identifier	node		4077134	0					
ANR	4077166	Identifier	i_value		4077134	1					
ANR	4077167	ReturnStatement	return true ;	2581:1:70462:70473	4077134	3	True				
ANR	4077168	Identifier	true		4077134	0					
ANR	4077169	ReturnType	static bool		4077134	1					
ANR	4077170	Identifier	cb_anal_bb_max_size		4077134	2					
ANR	4077171	ParameterList	"void * user , void * data"		4077134	3					
ANR	4077172	Parameter	void * user	2577:32:70317:70326	4077134	0	True				
ANR	4077173	ParameterType	void *		4077134	0					
ANR	4077174	Identifier	user		4077134	1					
ANR	4077175	Parameter	void * data	2577:44:70329:70338	4077134	1	True				
ANR	4077176	ParameterType	void *		4077134	0					
ANR	4077177	Identifier	data		4077134	1					
ANR	4077178	CFGEntryNode	ENTRY		4077134		True				
ANR	4077179	CFGExitNode	EXIT		4077134		True				
ANR	4077180	Symbol	core -> anal -> opt		4077134						
ANR	4077181	Symbol	data		4077134						
ANR	4077182	Symbol	* core		4077134						
ANR	4077183	Symbol	core -> anal		4077134						
ANR	4077184	Symbol	node -> i_value		4077134						
ANR	4077185	Symbol	core -> anal -> opt . bb_max_size		4077134						
ANR	4077186	Symbol	core		4077134						
ANR	4077187	Symbol	node		4077134						
ANR	4077188	Symbol	* core -> anal		4077134						
ANR	4077189	Symbol	true		4077134						
ANR	4077190	Symbol	* node		4077134						
ANR	4077191	Symbol	user		4077134						
ANR	4077192	Symbol	* * core		4077134						
ANR	4077193	Function	cb_anal_cpp_abi	2584:0:70478:71009							
ANR	4077194	FunctionDef	"cb_anal_cpp_abi (void * user , void * data)"		4077193	0					
ANR	4077195	CompoundStatement		2584:52:70530:71009	4077193	0					
ANR	4077196	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2585:1:70533:70560	4077193	0	True				
ANR	4077197	IdentifierDecl	* core = ( RCore * ) user		4077193	0					
ANR	4077198	IdentifierDeclType	RCore *		4077193	0					
ANR	4077199	Identifier	core		4077193	1					
ANR	4077200	AssignmentExpression	* core = ( RCore * ) user		4077193	2		=			
ANR	4077201	Identifier	core		4077193	0					
ANR	4077202	CastExpression	( RCore * ) user		4077193	1					
ANR	4077203	CastTarget	RCore *		4077193	0					
ANR	4077204	Identifier	user		4077193	1					
ANR	4077205	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2586:1:70563:70602	4077193	1	True				
ANR	4077206	IdentifierDecl	* node = ( RConfigNode * ) data		4077193	0					
ANR	4077207	IdentifierDeclType	RConfigNode *		4077193	0					
ANR	4077208	Identifier	node		4077193	1					
ANR	4077209	AssignmentExpression	* node = ( RConfigNode * ) data		4077193	2		=			
ANR	4077210	Identifier	node		4077193	0					
ANR	4077211	CastExpression	( RConfigNode * ) data		4077193	1					
ANR	4077212	CastTarget	RConfigNode *		4077193	0					
ANR	4077213	Identifier	data		4077193	1					
ANR	4077214	IfStatement	if ( * node -> value == '?' )		4077193	2					
ANR	4077215	Condition	* node -> value == '?'	2588:5:70610:70628	4077193	0	True				
ANR	4077216	EqualityExpression	* node -> value == '?'		4077193	0		==			
ANR	4077217	UnaryOperationExpression	* node -> value		4077193	0					
ANR	4077218	UnaryOperator	*		4077193	0					
ANR	4077219	PtrMemberAccess	node -> value		4077193	1					
ANR	4077220	Identifier	node		4077193	0					
ANR	4077221	Identifier	value		4077193	1					
ANR	4077222	PrimaryExpression	'?'		4077193	1					
ANR	4077223	CompoundStatement		5:26:100:100	4077193	1					
ANR	4077224	ExpressionStatement	print_node_options ( node )	2589:2:70635:70660	4077193	0	True				
ANR	4077225	CallExpression	print_node_options ( node )		4077193	0					
ANR	4077226	Callee	print_node_options		4077193	0					
ANR	4077227	Identifier	print_node_options		4077193	0					
ANR	4077228	ArgumentList	node		4077193	1					
ANR	4077229	Argument	node		4077193	0					
ANR	4077230	Identifier	node		4077193	0					
ANR	4077231	ReturnStatement	return false ;	2590:2:70664:70676	4077193	1	True				
ANR	4077232	Identifier	false		4077193	0					
ANR	4077233	IfStatement	if ( * node -> value )		4077193	3					
ANR	4077234	Condition	* node -> value	2593:5:70687:70698	4077193	0	True				
ANR	4077235	UnaryOperationExpression	* node -> value		4077193	0					
ANR	4077236	UnaryOperator	*		4077193	0					
ANR	4077237	PtrMemberAccess	node -> value		4077193	1					
ANR	4077238	Identifier	node		4077193	0					
ANR	4077239	Identifier	value		4077193	1					
ANR	4077240	CompoundStatement		10:19:170:170	4077193	1					
ANR	4077241	IfStatement	"if ( strcmp ( node -> value , ""itanium"" ) == 0 )"		4077193	0					
ANR	4077242	Condition	"strcmp ( node -> value , ""itanium"" ) == 0"	2594:6:70709:70744	4077193	0	True				
ANR	4077243	EqualityExpression	"strcmp ( node -> value , ""itanium"" ) == 0"		4077193	0		==			
ANR	4077244	CallExpression	"strcmp ( node -> value , ""itanium"" )"		4077193	0					
ANR	4077245	Callee	strcmp		4077193	0					
ANR	4077246	Identifier	strcmp		4077193	0					
ANR	4077247	ArgumentList	node -> value		4077193	1					
ANR	4077248	Argument	node -> value		4077193	0					
ANR	4077249	PtrMemberAccess	node -> value		4077193	0					
ANR	4077250	Identifier	node		4077193	0					
ANR	4077251	Identifier	value		4077193	1					
ANR	4077252	Argument	"""itanium"""		4077193	1					
ANR	4077253	PrimaryExpression	"""itanium"""		4077193	0					
ANR	4077254	PrimaryExpression	0		4077193	1					
ANR	4077255	CompoundStatement		11:44:216:216	4077193	1					
ANR	4077256	ExpressionStatement	core -> anal -> cpp_abi = R_ANAL_CPP_ABI_ITANIUM	2595:3:70752:70796	4077193	0	True				
ANR	4077257	AssignmentExpression	core -> anal -> cpp_abi = R_ANAL_CPP_ABI_ITANIUM		4077193	0		=			
ANR	4077258	PtrMemberAccess	core -> anal -> cpp_abi		4077193	0					
ANR	4077259	PtrMemberAccess	core -> anal		4077193	0					
ANR	4077260	Identifier	core		4077193	0					
ANR	4077261	Identifier	anal		4077193	1					
ANR	4077262	Identifier	cpp_abi		4077193	1					
ANR	4077263	Identifier	R_ANAL_CPP_ABI_ITANIUM		4077193	1					
ANR	4077264	ReturnStatement	return true ;	2596:3:70801:70812	4077193	1	True				
ANR	4077265	Identifier	true		4077193	0					
ANR	4077266	ElseStatement	else		4077193	0					
ANR	4077267	IfStatement	"if ( strcmp ( node -> value , ""msvc"" ) == 0 )"		4077193	0					
ANR	4077268	Condition	"strcmp ( node -> value , ""msvc"" ) == 0"	2597:13:70827:70859	4077193	0	True				
ANR	4077269	EqualityExpression	"strcmp ( node -> value , ""msvc"" ) == 0"		4077193	0		==			
ANR	4077270	CallExpression	"strcmp ( node -> value , ""msvc"" )"		4077193	0					
ANR	4077271	Callee	strcmp		4077193	0					
ANR	4077272	Identifier	strcmp		4077193	0					
ANR	4077273	ArgumentList	node -> value		4077193	1					
ANR	4077274	Argument	node -> value		4077193	0					
ANR	4077275	PtrMemberAccess	node -> value		4077193	0					
ANR	4077276	Identifier	node		4077193	0					
ANR	4077277	Identifier	value		4077193	1					
ANR	4077278	Argument	"""msvc"""		4077193	1					
ANR	4077279	PrimaryExpression	"""msvc"""		4077193	0					
ANR	4077280	PrimaryExpression	0		4077193	1					
ANR	4077281	CompoundStatement		14:48:331:331	4077193	1					
ANR	4077282	ExpressionStatement	core -> anal -> cpp_abi = R_ANAL_CPP_ABI_MSVC	2598:3:70867:70908	4077193	0	True				
ANR	4077283	AssignmentExpression	core -> anal -> cpp_abi = R_ANAL_CPP_ABI_MSVC		4077193	0		=			
ANR	4077284	PtrMemberAccess	core -> anal -> cpp_abi		4077193	0					
ANR	4077285	PtrMemberAccess	core -> anal		4077193	0					
ANR	4077286	Identifier	core		4077193	0					
ANR	4077287	Identifier	anal		4077193	1					
ANR	4077288	Identifier	cpp_abi		4077193	1					
ANR	4077289	Identifier	R_ANAL_CPP_ABI_MSVC		4077193	1					
ANR	4077290	ReturnStatement	return true ;	2599:3:70913:70924	4077193	1	True				
ANR	4077291	Identifier	true		4077193	0					
ANR	4077292	ExpressionStatement	"eprintf ( ""anal.cpp.abi: cannot find '%s'\\n"" , node -> value )"	2601:2:70932:70989	4077193	1	True				
ANR	4077293	CallExpression	"eprintf ( ""anal.cpp.abi: cannot find '%s'\\n"" , node -> value )"		4077193	0					
ANR	4077294	Callee	eprintf		4077193	0					
ANR	4077295	Identifier	eprintf		4077193	0					
ANR	4077296	ArgumentList	"""anal.cpp.abi: cannot find '%s'\\n"""		4077193	1					
ANR	4077297	Argument	"""anal.cpp.abi: cannot find '%s'\\n"""		4077193	0					
ANR	4077298	PrimaryExpression	"""anal.cpp.abi: cannot find '%s'\\n"""		4077193	0					
ANR	4077299	Argument	node -> value		4077193	1					
ANR	4077300	PtrMemberAccess	node -> value		4077193	0					
ANR	4077301	Identifier	node		4077193	0					
ANR	4077302	Identifier	value		4077193	1					
ANR	4077303	ReturnStatement	return false ;	2603:1:70995:71007	4077193	4	True				
ANR	4077304	Identifier	false		4077193	0					
ANR	4077305	ReturnType	static bool		4077193	1					
ANR	4077306	Identifier	cb_anal_cpp_abi		4077193	2					
ANR	4077307	ParameterList	"void * user , void * data"		4077193	3					
ANR	4077308	Parameter	void * user	2584:28:70506:70515	4077193	0	True				
ANR	4077309	ParameterType	void *		4077193	0					
ANR	4077310	Identifier	user		4077193	1					
ANR	4077311	Parameter	void * data	2584:40:70518:70527	4077193	1	True				
ANR	4077312	ParameterType	void *		4077193	0					
ANR	4077313	Identifier	data		4077193	1					
ANR	4077314	CFGEntryNode	ENTRY		4077193		True				
ANR	4077315	CFGExitNode	EXIT		4077193		True				
ANR	4077316	Symbol	strcmp		4077193						
ANR	4077317	Symbol	* node -> value		4077193						
ANR	4077318	Symbol	data		4077193						
ANR	4077319	Symbol	R_ANAL_CPP_ABI_ITANIUM		4077193						
ANR	4077320	Symbol	false		4077193						
ANR	4077321	Symbol	* core		4077193						
ANR	4077322	Symbol	core -> anal		4077193						
ANR	4077323	Symbol	node -> value		4077193						
ANR	4077324	Symbol	core		4077193						
ANR	4077325	Symbol	node		4077193						
ANR	4077326	Symbol	* core -> anal		4077193						
ANR	4077327	Symbol	* * node		4077193						
ANR	4077328	Symbol	core -> anal -> cpp_abi		4077193						
ANR	4077329	Symbol	true		4077193						
ANR	4077330	Symbol	* node		4077193						
ANR	4077331	Symbol	user		4077193						
ANR	4077332	Symbol	R_ANAL_CPP_ABI_MSVC		4077193						
ANR	4077333	Symbol	* * core		4077193						
ANR	4077334	Function	cb_linesto	2606:0:71012:71829							
ANR	4077335	FunctionDef	"cb_linesto (void * user , void * data)"		4077334	0					
ANR	4077336	CompoundStatement		2606:47:71059:71829	4077334	0					
ANR	4077337	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2607:1:71062:71089	4077334	0	True				
ANR	4077338	IdentifierDecl	* core = ( RCore * ) user		4077334	0					
ANR	4077339	IdentifierDeclType	RCore *		4077334	0					
ANR	4077340	Identifier	core		4077334	1					
ANR	4077341	AssignmentExpression	* core = ( RCore * ) user		4077334	2		=			
ANR	4077342	Identifier	core		4077334	0					
ANR	4077343	CastExpression	( RCore * ) user		4077334	1					
ANR	4077344	CastTarget	RCore *		4077334	0					
ANR	4077345	Identifier	user		4077334	1					
ANR	4077346	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2608:1:71092:71131	4077334	1	True				
ANR	4077347	IdentifierDecl	* node = ( RConfigNode * ) data		4077334	0					
ANR	4077348	IdentifierDeclType	RConfigNode *		4077334	0					
ANR	4077349	Identifier	node		4077334	1					
ANR	4077350	AssignmentExpression	* node = ( RConfigNode * ) data		4077334	2		=			
ANR	4077351	Identifier	node		4077334	0					
ANR	4077352	CastExpression	( RConfigNode * ) data		4077334	1					
ANR	4077353	CastTarget	RConfigNode *		4077334	0					
ANR	4077354	Identifier	data		4077334	1					
ANR	4077355	IdentifierDeclStatement	"ut64 from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" ) ;"	2609:1:71134:71195	4077334	2	True				
ANR	4077356	IdentifierDecl	"from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		4077334	0					
ANR	4077357	IdentifierDeclType	ut64		4077334	0					
ANR	4077358	Identifier	from		4077334	1					
ANR	4077359	AssignmentExpression	"from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		4077334	2		=			
ANR	4077360	Identifier	from		4077334	0					
ANR	4077361	CastExpression	"( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		4077334	1					
ANR	4077362	CastTarget	ut64		4077334	0					
ANR	4077363	CallExpression	"r_config_get_i ( core -> config , ""lines.from"" )"		4077334	1					
ANR	4077364	Callee	r_config_get_i		4077334	0					
ANR	4077365	Identifier	r_config_get_i		4077334	0					
ANR	4077366	ArgumentList	core -> config		4077334	1					
ANR	4077367	Argument	core -> config		4077334	0					
ANR	4077368	PtrMemberAccess	core -> config		4077334	0					
ANR	4077369	Identifier	core		4077334	0					
ANR	4077370	Identifier	config		4077334	1					
ANR	4077371	Argument	"""lines.from"""		4077334	1					
ANR	4077372	PrimaryExpression	"""lines.from"""		4077334	0					
ANR	4077373	IdentifierDeclStatement	int io_sz = r_io_size ( core -> io ) ;	2610:1:71198:71230	4077334	3	True				
ANR	4077374	IdentifierDecl	io_sz = r_io_size ( core -> io )		4077334	0					
ANR	4077375	IdentifierDeclType	int		4077334	0					
ANR	4077376	Identifier	io_sz		4077334	1					
ANR	4077377	AssignmentExpression	io_sz = r_io_size ( core -> io )		4077334	2		=			
ANR	4077378	Identifier	io_sz		4077334	0					
ANR	4077379	CallExpression	r_io_size ( core -> io )		4077334	1					
ANR	4077380	Callee	r_io_size		4077334	0					
ANR	4077381	Identifier	r_io_size		4077334	0					
ANR	4077382	ArgumentList	core -> io		4077334	1					
ANR	4077383	Argument	core -> io		4077334	0					
ANR	4077384	PtrMemberAccess	core -> io		4077334	0					
ANR	4077385	Identifier	core		4077334	0					
ANR	4077386	Identifier	io		4077334	1					
ANR	4077387	IdentifierDeclStatement	"ut64 to = r_num_math ( core -> num , node -> value ) ;"	2611:1:71233:71278	4077334	4	True				
ANR	4077388	IdentifierDecl	"to = r_num_math ( core -> num , node -> value )"		4077334	0					
ANR	4077389	IdentifierDeclType	ut64		4077334	0					
ANR	4077390	Identifier	to		4077334	1					
ANR	4077391	AssignmentExpression	"to = r_num_math ( core -> num , node -> value )"		4077334	2		=			
ANR	4077392	Identifier	to		4077334	0					
ANR	4077393	CallExpression	"r_num_math ( core -> num , node -> value )"		4077334	1					
ANR	4077394	Callee	r_num_math		4077334	0					
ANR	4077395	Identifier	r_num_math		4077334	0					
ANR	4077396	ArgumentList	core -> num		4077334	1					
ANR	4077397	Argument	core -> num		4077334	0					
ANR	4077398	PtrMemberAccess	core -> num		4077334	0					
ANR	4077399	Identifier	core		4077334	0					
ANR	4077400	Identifier	num		4077334	1					
ANR	4077401	Argument	node -> value		4077334	1					
ANR	4077402	PtrMemberAccess	node -> value		4077334	0					
ANR	4077403	Identifier	node		4077334	0					
ANR	4077404	Identifier	value		4077334	1					
ANR	4077405	IfStatement	if ( to == 0 )		4077334	5					
ANR	4077406	Condition	to == 0	2612:5:71285:71291	4077334	0	True				
ANR	4077407	EqualityExpression	to == 0		4077334	0		==			
ANR	4077408	Identifier	to		4077334	0					
ANR	4077409	PrimaryExpression	0		4077334	1					
ANR	4077410	CompoundStatement		7:14:234:234	4077334	1					
ANR	4077411	ExpressionStatement	core -> print -> lines_cache_sz = - 1	2613:2:71298:71330	4077334	0	True				
ANR	4077412	AssignmentExpression	core -> print -> lines_cache_sz = - 1		4077334	0		=			
ANR	4077413	PtrMemberAccess	core -> print -> lines_cache_sz		4077334	0					
ANR	4077414	PtrMemberAccess	core -> print		4077334	0					
ANR	4077415	Identifier	core		4077334	0					
ANR	4077416	Identifier	print		4077334	1					
ANR	4077417	Identifier	lines_cache_sz		4077334	1					
ANR	4077418	UnaryOperationExpression	- 1		4077334	1					
ANR	4077419	UnaryOperator	-		4077334	0					
ANR	4077420	PrimaryExpression	1		4077334	1					
ANR	4077421	ReturnStatement	return true ;	2614:2:71377:71388	4077334	1	True				
ANR	4077422	Identifier	true		4077334	0					
ANR	4077423	IfStatement	if ( to > from + io_sz )		4077334	6					
ANR	4077424	Condition	to > from + io_sz	2616:5:71398:71414	4077334	0	True				
ANR	4077425	RelationalExpression	to > from + io_sz		4077334	0		>			
ANR	4077426	Identifier	to		4077334	0					
ANR	4077427	AdditiveExpression	from + io_sz		4077334	1		+			
ANR	4077428	Identifier	from		4077334	0					
ANR	4077429	Identifier	io_sz		4077334	1					
ANR	4077430	CompoundStatement		11:24:357:357	4077334	1					
ANR	4077431	Statement	eprintf	2617:2:71421:71427	4077334	0	True				
ANR	4077432	Statement	(	2617:10:71429:71429	4077334	1	True				
ANR	4077433	Statement	"""ERROR: \\""lines.to\\"" can't exceed addr 0x%08"""	2617:11:71430:71474	4077334	2	True				
ANR	4077434	Statement	PFMT64x	2617:56:71475:71481	4077334	3	True				
ANR	4077435	Statement	""" 0x%08"""	2618:3:71486:71493	4077334	4	True				
ANR	4077436	Statement	PFMT64x	2618:11:71494:71500	4077334	5	True				
ANR	4077437	Statement	""" %d\\n"""	2618:18:71501:71507	4077334	6	True				
ANR	4077438	Statement	","	2618:25:71508:71508	4077334	7	True				
ANR	4077439	Statement	from	2618:27:71510:71513	4077334	8	True				
ANR	4077440	Statement	","	2618:31:71514:71514	4077334	9	True				
ANR	4077441	Statement	to	2618:33:71516:71517	4077334	10	True				
ANR	4077442	Statement	","	2618:35:71518:71518	4077334	11	True				
ANR	4077443	Statement	io_sz	2618:37:71520:71524	4077334	12	True				
ANR	4077444	Statement	)	2618:42:71525:71525	4077334	13	True				
ANR	4077445	ExpressionStatement		2618:43:71526:71526	4077334	14	True				
ANR	4077446	ReturnStatement	return true ;	2619:2:71530:71541	4077334	15	True				
ANR	4077447	Identifier	true		4077334	0					
ANR	4077448	IfStatement	if ( to > from )		4077334	7					
ANR	4077449	Condition	to > from	2621:5:71551:71559	4077334	0	True				
ANR	4077450	RelationalExpression	to > from		4077334	0		>			
ANR	4077451	Identifier	to		4077334	0					
ANR	4077452	Identifier	from		4077334	1					
ANR	4077453	CompoundStatement		16:16:502:502	4077334	1					
ANR	4077454	ExpressionStatement	"core -> print -> lines_cache_sz = r_core_lines_initcache ( core , from , to )"	2622:2:71566:71635	4077334	0	True				
ANR	4077455	AssignmentExpression	"core -> print -> lines_cache_sz = r_core_lines_initcache ( core , from , to )"		4077334	0		=			
ANR	4077456	PtrMemberAccess	core -> print -> lines_cache_sz		4077334	0					
ANR	4077457	PtrMemberAccess	core -> print		4077334	0					
ANR	4077458	Identifier	core		4077334	0					
ANR	4077459	Identifier	print		4077334	1					
ANR	4077460	Identifier	lines_cache_sz		4077334	1					
ANR	4077461	CallExpression	"r_core_lines_initcache ( core , from , to )"		4077334	1					
ANR	4077462	Callee	r_core_lines_initcache		4077334	0					
ANR	4077463	Identifier	r_core_lines_initcache		4077334	0					
ANR	4077464	ArgumentList	core		4077334	1					
ANR	4077465	Argument	core		4077334	0					
ANR	4077466	Identifier	core		4077334	0					
ANR	4077467	Argument	from		4077334	1					
ANR	4077468	Identifier	from		4077334	0					
ANR	4077469	Argument	to		4077334	2					
ANR	4077470	Identifier	to		4077334	0					
ANR	4077471	ElseStatement	else		4077334	0					
ANR	4077472	CompoundStatement		19:8:676:676	4077334	0					
ANR	4077473	Statement	eprintf	2625:2:71740:71746	4077334	0	True				
ANR	4077474	Statement	(	2625:10:71748:71748	4077334	1	True				
ANR	4077475	Statement	"""Invalid range 0x%08"""	2625:11:71749:71769	4077334	2	True				
ANR	4077476	Statement	PFMT64x	2625:32:71770:71776	4077334	3	True				
ANR	4077477	Statement	""" .. 0x%08"""	2625:39:71777:71787	4077334	4	True				
ANR	4077478	Statement	PFMT64x	2625:50:71788:71794	4077334	5	True				
ANR	4077479	Statement	"""\\n"""	2625:57:71795:71798	4077334	6	True				
ANR	4077480	Statement	","	2625:61:71799:71799	4077334	7	True				
ANR	4077481	Statement	from	2625:63:71801:71804	4077334	8	True				
ANR	4077482	Statement	","	2625:67:71805:71805	4077334	9	True				
ANR	4077483	Statement	to	2625:69:71807:71808	4077334	10	True				
ANR	4077484	Statement	)	2625:71:71809:71809	4077334	11	True				
ANR	4077485	ExpressionStatement		2625:72:71810:71810	4077334	12	True				
ANR	4077486	ReturnStatement	return true ;	2627:1:71816:71827	4077334	8	True				
ANR	4077487	Identifier	true		4077334	0					
ANR	4077488	ReturnType	static bool		4077334	1					
ANR	4077489	Identifier	cb_linesto		4077334	2					
ANR	4077490	ParameterList	"void * user , void * data"		4077334	3					
ANR	4077491	Parameter	void * user	2606:23:71035:71044	4077334	0	True				
ANR	4077492	ParameterType	void *		4077334	0					
ANR	4077493	Identifier	user		4077334	1					
ANR	4077494	Parameter	void * data	2606:35:71047:71056	4077334	1	True				
ANR	4077495	ParameterType	void *		4077334	0					
ANR	4077496	Identifier	data		4077334	1					
ANR	4077497	CFGEntryNode	ENTRY		4077334		True				
ANR	4077498	CFGExitNode	EXIT		4077334		True				
ANR	4077499	Symbol	core -> config		4077334						
ANR	4077500	Symbol	r_core_lines_initcache		4077334						
ANR	4077501	Symbol	data		4077334						
ANR	4077502	Symbol	* core		4077334						
ANR	4077503	Symbol	node -> value		4077334						
ANR	4077504	Symbol	r_num_math		4077334						
ANR	4077505	Symbol	core		4077334						
ANR	4077506	Symbol	node		4077334						
ANR	4077507	Symbol	* core -> print		4077334						
ANR	4077508	Symbol	core -> io		4077334						
ANR	4077509	Symbol	r_config_get_i		4077334						
ANR	4077510	Symbol	true		4077334						
ANR	4077511	Symbol	from		4077334						
ANR	4077512	Symbol	* node		4077334						
ANR	4077513	Symbol	io_sz		4077334						
ANR	4077514	Symbol	to		4077334						
ANR	4077515	Symbol	core -> print -> lines_cache_sz		4077334						
ANR	4077516	Symbol	r_io_size		4077334						
ANR	4077517	Symbol	core -> num		4077334						
ANR	4077518	Symbol	core -> print		4077334						
ANR	4077519	Symbol	user		4077334						
ANR	4077520	Symbol	* * core		4077334						
ANR	4077521	Function	cb_linesabs	2630:0:71832:72469							
ANR	4077522	FunctionDef	"cb_linesabs (void * user , void * data)"		4077521	0					
ANR	4077523	CompoundStatement		2630:48:71880:72469	4077521	0					
ANR	4077524	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2631:1:71883:71910	4077521	0	True				
ANR	4077525	IdentifierDecl	* core = ( RCore * ) user		4077521	0					
ANR	4077526	IdentifierDeclType	RCore *		4077521	0					
ANR	4077527	Identifier	core		4077521	1					
ANR	4077528	AssignmentExpression	* core = ( RCore * ) user		4077521	2		=			
ANR	4077529	Identifier	core		4077521	0					
ANR	4077530	CastExpression	( RCore * ) user		4077521	1					
ANR	4077531	CastTarget	RCore *		4077521	0					
ANR	4077532	Identifier	user		4077521	1					
ANR	4077533	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2632:1:71913:71952	4077521	1	True				
ANR	4077534	IdentifierDecl	* node = ( RConfigNode * ) data		4077521	0					
ANR	4077535	IdentifierDeclType	RConfigNode *		4077521	0					
ANR	4077536	Identifier	node		4077521	1					
ANR	4077537	AssignmentExpression	* node = ( RConfigNode * ) data		4077521	2		=			
ANR	4077538	Identifier	node		4077521	0					
ANR	4077539	CastExpression	( RConfigNode * ) data		4077521	1					
ANR	4077540	CastTarget	RConfigNode *		4077521	0					
ANR	4077541	Identifier	data		4077521	1					
ANR	4077542	ExpressionStatement	core -> print -> lines_abs = node -> i_value	2633:1:71955:71993	4077521	2	True				
ANR	4077543	AssignmentExpression	core -> print -> lines_abs = node -> i_value		4077521	0		=			
ANR	4077544	PtrMemberAccess	core -> print -> lines_abs		4077521	0					
ANR	4077545	PtrMemberAccess	core -> print		4077521	0					
ANR	4077546	Identifier	core		4077521	0					
ANR	4077547	Identifier	print		4077521	1					
ANR	4077548	Identifier	lines_abs		4077521	1					
ANR	4077549	PtrMemberAccess	node -> i_value		4077521	1					
ANR	4077550	Identifier	node		4077521	0					
ANR	4077551	Identifier	i_value		4077521	1					
ANR	4077552	IfStatement	if ( core -> print -> lines_abs && core -> print -> lines_cache_sz <= 0 )		4077521	3					
ANR	4077553	Condition	core -> print -> lines_abs && core -> print -> lines_cache_sz <= 0	2634:5:72000:72057	4077521	0	True				
ANR	4077554	AndExpression	core -> print -> lines_abs && core -> print -> lines_cache_sz <= 0		4077521	0		&&			
ANR	4077555	PtrMemberAccess	core -> print -> lines_abs		4077521	0					
ANR	4077556	PtrMemberAccess	core -> print		4077521	0					
ANR	4077557	Identifier	core		4077521	0					
ANR	4077558	Identifier	print		4077521	1					
ANR	4077559	Identifier	lines_abs		4077521	1					
ANR	4077560	RelationalExpression	core -> print -> lines_cache_sz <= 0		4077521	1		<=			
ANR	4077561	PtrMemberAccess	core -> print -> lines_cache_sz		4077521	0					
ANR	4077562	PtrMemberAccess	core -> print		4077521	0					
ANR	4077563	Identifier	core		4077521	0					
ANR	4077564	Identifier	print		4077521	1					
ANR	4077565	Identifier	lines_cache_sz		4077521	1					
ANR	4077566	PrimaryExpression	0		4077521	1					
ANR	4077567	CompoundStatement		7:2:248:305	4077521	1					
ANR	4077568	IdentifierDeclStatement	"ut64 from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" ) ;"	2635:2:72064:72125	4077521	0	True				
ANR	4077569	IdentifierDecl	"from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		4077521	0					
ANR	4077570	IdentifierDeclType	ut64		4077521	0					
ANR	4077571	Identifier	from		4077521	1					
ANR	4077572	AssignmentExpression	"from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		4077521	2		=			
ANR	4077573	Identifier	from		4077521	0					
ANR	4077574	CastExpression	"( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		4077521	1					
ANR	4077575	CastTarget	ut64		4077521	0					
ANR	4077576	CallExpression	"r_config_get_i ( core -> config , ""lines.from"" )"		4077521	1					
ANR	4077577	Callee	r_config_get_i		4077521	0					
ANR	4077578	Identifier	r_config_get_i		4077521	0					
ANR	4077579	ArgumentList	core -> config		4077521	1					
ANR	4077580	Argument	core -> config		4077521	0					
ANR	4077581	PtrMemberAccess	core -> config		4077521	0					
ANR	4077582	Identifier	core		4077521	0					
ANR	4077583	Identifier	config		4077521	1					
ANR	4077584	Argument	"""lines.from"""		4077521	1					
ANR	4077585	PrimaryExpression	"""lines.from"""		4077521	0					
ANR	4077586	IdentifierDeclStatement	"ut64 to = ( ut64 ) r_config_get_i ( core -> config , ""lines.to"" ) ;"	2636:2:72129:72186	4077521	1	True				
ANR	4077587	IdentifierDecl	"to = ( ut64 ) r_config_get_i ( core -> config , ""lines.to"" )"		4077521	0					
ANR	4077588	IdentifierDeclType	ut64		4077521	0					
ANR	4077589	Identifier	to		4077521	1					
ANR	4077590	AssignmentExpression	"to = ( ut64 ) r_config_get_i ( core -> config , ""lines.to"" )"		4077521	2		=			
ANR	4077591	Identifier	to		4077521	0					
ANR	4077592	CastExpression	"( ut64 ) r_config_get_i ( core -> config , ""lines.to"" )"		4077521	1					
ANR	4077593	CastTarget	ut64		4077521	0					
ANR	4077594	CallExpression	"r_config_get_i ( core -> config , ""lines.to"" )"		4077521	1					
ANR	4077595	Callee	r_config_get_i		4077521	0					
ANR	4077596	Identifier	r_config_get_i		4077521	0					
ANR	4077597	ArgumentList	core -> config		4077521	1					
ANR	4077598	Argument	core -> config		4077521	0					
ANR	4077599	PtrMemberAccess	core -> config		4077521	0					
ANR	4077600	Identifier	core		4077521	0					
ANR	4077601	Identifier	config		4077521	1					
ANR	4077602	Argument	"""lines.to"""		4077521	1					
ANR	4077603	PrimaryExpression	"""lines.to"""		4077521	0					
ANR	4077604	ExpressionStatement	"core -> print -> lines_cache_sz = r_core_lines_initcache ( core , from , to )"	2637:2:72190:72259	4077521	2	True				
ANR	4077605	AssignmentExpression	"core -> print -> lines_cache_sz = r_core_lines_initcache ( core , from , to )"		4077521	0		=			
ANR	4077606	PtrMemberAccess	core -> print -> lines_cache_sz		4077521	0					
ANR	4077607	PtrMemberAccess	core -> print		4077521	0					
ANR	4077608	Identifier	core		4077521	0					
ANR	4077609	Identifier	print		4077521	1					
ANR	4077610	Identifier	lines_cache_sz		4077521	1					
ANR	4077611	CallExpression	"r_core_lines_initcache ( core , from , to )"		4077521	1					
ANR	4077612	Callee	r_core_lines_initcache		4077521	0					
ANR	4077613	Identifier	r_core_lines_initcache		4077521	0					
ANR	4077614	ArgumentList	core		4077521	1					
ANR	4077615	Argument	core		4077521	0					
ANR	4077616	Identifier	core		4077521	0					
ANR	4077617	Argument	from		4077521	1					
ANR	4077618	Identifier	from		4077521	0					
ANR	4077619	Argument	to		4077521	2					
ANR	4077620	Identifier	to		4077521	0					
ANR	4077621	IfStatement	if ( core -> print -> lines_cache_sz == - 1 )		4077521	3					
ANR	4077622	Condition	core -> print -> lines_cache_sz == - 1	2638:6:72267:72299	4077521	0	True				
ANR	4077623	EqualityExpression	core -> print -> lines_cache_sz == - 1		4077521	0		==			
ANR	4077624	PtrMemberAccess	core -> print -> lines_cache_sz		4077521	0					
ANR	4077625	PtrMemberAccess	core -> print		4077521	0					
ANR	4077626	Identifier	core		4077521	0					
ANR	4077627	Identifier	print		4077521	1					
ANR	4077628	Identifier	lines_cache_sz		4077521	1					
ANR	4077629	UnaryOperationExpression	- 1		4077521	1					
ANR	4077630	UnaryOperator	-		4077521	0					
ANR	4077631	PrimaryExpression	1		4077521	1					
ANR	4077632	CompoundStatement		9:41:421:421	4077521	1					
ANR	4077633	ExpressionStatement	"eprintf ( ""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"" )"	2639:3:72307:72371	4077521	0	True				
ANR	4077634	CallExpression	"eprintf ( ""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"" )"		4077521	0					
ANR	4077635	Callee	eprintf		4077521	0					
ANR	4077636	Identifier	eprintf		4077521	0					
ANR	4077637	ArgumentList	"""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"""		4077521	1					
ANR	4077638	Argument	"""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"""		4077521	0					
ANR	4077639	PrimaryExpression	"""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"""		4077521	0					
ANR	4077640	ElseStatement	else		4077521	0					
ANR	4077641	CompoundStatement		11:9:501:501	4077521	0					
ANR	4077642	ExpressionStatement	"eprintf ( ""Found %d lines\\n"" , core -> print -> lines_cache_sz - 1 )"	2641:3:72387:72446	4077521	0	True				
ANR	4077643	CallExpression	"eprintf ( ""Found %d lines\\n"" , core -> print -> lines_cache_sz - 1 )"		4077521	0					
ANR	4077644	Callee	eprintf		4077521	0					
ANR	4077645	Identifier	eprintf		4077521	0					
ANR	4077646	ArgumentList	"""Found %d lines\\n"""		4077521	1					
ANR	4077647	Argument	"""Found %d lines\\n"""		4077521	0					
ANR	4077648	PrimaryExpression	"""Found %d lines\\n"""		4077521	0					
ANR	4077649	Argument	core -> print -> lines_cache_sz - 1		4077521	1					
ANR	4077650	AdditiveExpression	core -> print -> lines_cache_sz - 1		4077521	0		-			
ANR	4077651	PtrMemberAccess	core -> print -> lines_cache_sz		4077521	0					
ANR	4077652	PtrMemberAccess	core -> print		4077521	0					
ANR	4077653	Identifier	core		4077521	0					
ANR	4077654	Identifier	print		4077521	1					
ANR	4077655	Identifier	lines_cache_sz		4077521	1					
ANR	4077656	PrimaryExpression	1		4077521	1					
ANR	4077657	ReturnStatement	return true ;	2644:1:72456:72467	4077521	4	True				
ANR	4077658	Identifier	true		4077521	0					
ANR	4077659	ReturnType	static bool		4077521	1					
ANR	4077660	Identifier	cb_linesabs		4077521	2					
ANR	4077661	ParameterList	"void * user , void * data"		4077521	3					
ANR	4077662	Parameter	void * user	2630:24:71856:71865	4077521	0	True				
ANR	4077663	ParameterType	void *		4077521	0					
ANR	4077664	Identifier	user		4077521	1					
ANR	4077665	Parameter	void * data	2630:36:71868:71877	4077521	1	True				
ANR	4077666	ParameterType	void *		4077521	0					
ANR	4077667	Identifier	data		4077521	1					
ANR	4077668	CFGEntryNode	ENTRY		4077521		True				
ANR	4077669	CFGExitNode	EXIT		4077521		True				
ANR	4077670	Symbol	core -> config		4077521						
ANR	4077671	Symbol	r_core_lines_initcache		4077521						
ANR	4077672	Symbol	data		4077521						
ANR	4077673	Symbol	* core		4077521						
ANR	4077674	Symbol	node -> i_value		4077521						
ANR	4077675	Symbol	core		4077521						
ANR	4077676	Symbol	node		4077521						
ANR	4077677	Symbol	* core -> print		4077521						
ANR	4077678	Symbol	r_config_get_i		4077521						
ANR	4077679	Symbol	true		4077521						
ANR	4077680	Symbol	* node		4077521						
ANR	4077681	Symbol	from		4077521						
ANR	4077682	Symbol	core -> print -> lines_cache_sz		4077521						
ANR	4077683	Symbol	to		4077521						
ANR	4077684	Symbol	core -> print		4077521						
ANR	4077685	Symbol	user		4077521						
ANR	4077686	Symbol	core -> print -> lines_abs		4077521						
ANR	4077687	Symbol	* * core		4077521						
ANR	4077688	Function	cb_malloc	2647:0:72472:72773							
ANR	4077689	FunctionDef	"cb_malloc (void * user , void * data)"		4077688	0					
ANR	4077690	CompoundStatement		2647:46:72518:72773	4077688	0					
ANR	4077691	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2648:2:72522:72549	4077688	0	True				
ANR	4077692	IdentifierDecl	* core = ( RCore * ) user		4077688	0					
ANR	4077693	IdentifierDeclType	RCore *		4077688	0					
ANR	4077694	Identifier	core		4077688	1					
ANR	4077695	AssignmentExpression	* core = ( RCore * ) user		4077688	2		=			
ANR	4077696	Identifier	core		4077688	0					
ANR	4077697	CastExpression	( RCore * ) user		4077688	1					
ANR	4077698	CastTarget	RCore *		4077688	0					
ANR	4077699	Identifier	user		4077688	1					
ANR	4077700	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2649:2:72553:72592	4077688	1	True				
ANR	4077701	IdentifierDecl	* node = ( RConfigNode * ) data		4077688	0					
ANR	4077702	IdentifierDeclType	RConfigNode *		4077688	0					
ANR	4077703	Identifier	node		4077688	1					
ANR	4077704	AssignmentExpression	* node = ( RConfigNode * ) data		4077688	2		=			
ANR	4077705	Identifier	node		4077688	0					
ANR	4077706	CastExpression	( RConfigNode * ) data		4077688	1					
ANR	4077707	CastTarget	RConfigNode *		4077688	0					
ANR	4077708	Identifier	data		4077688	1					
ANR	4077709	IfStatement	if ( node -> value )		4077688	2					
ANR	4077710	Condition	node -> value	2651:6:72601:72611	4077688	0	True				
ANR	4077711	PtrMemberAccess	node -> value		4077688	0					
ANR	4077712	Identifier	node		4077688	0					
ANR	4077713	Identifier	value		4077688	1					
ANR	4077714	CompoundStatement		5:19:95:95	4077688	1					
ANR	4077715	IfStatement	"if ( ! strcmp ( ""jemalloc"" , node -> value ) || ! strcmp ( ""glibc"" , node -> value ) )"		4077688	0					
ANR	4077716	Condition	"! strcmp ( ""jemalloc"" , node -> value ) || ! strcmp ( ""glibc"" , node -> value )"	2652:7:72623:72689	4077688	0	True				
ANR	4077717	OrExpression	"! strcmp ( ""jemalloc"" , node -> value ) || ! strcmp ( ""glibc"" , node -> value )"		4077688	0		||			
ANR	4077718	UnaryOperationExpression	"! strcmp ( ""jemalloc"" , node -> value )"		4077688	0					
ANR	4077719	UnaryOperator	!		4077688	0					
ANR	4077720	CallExpression	"strcmp ( ""jemalloc"" , node -> value )"		4077688	1					
ANR	4077721	Callee	strcmp		4077688	0					
ANR	4077722	Identifier	strcmp		4077688	0					
ANR	4077723	ArgumentList	"""jemalloc"""		4077688	1					
ANR	4077724	Argument	"""jemalloc"""		4077688	0					
ANR	4077725	PrimaryExpression	"""jemalloc"""		4077688	0					
ANR	4077726	Argument	node -> value		4077688	1					
ANR	4077727	PtrMemberAccess	node -> value		4077688	0					
ANR	4077728	Identifier	node		4077688	0					
ANR	4077729	Identifier	value		4077688	1					
ANR	4077730	UnaryOperationExpression	"! strcmp ( ""glibc"" , node -> value )"		4077688	1					
ANR	4077731	UnaryOperator	!		4077688	0					
ANR	4077732	CallExpression	"strcmp ( ""glibc"" , node -> value )"		4077688	1					
ANR	4077733	Callee	strcmp		4077688	0					
ANR	4077734	Identifier	strcmp		4077688	0					
ANR	4077735	ArgumentList	"""glibc"""		4077688	1					
ANR	4077736	Argument	"""glibc"""		4077688	0					
ANR	4077737	PrimaryExpression	"""glibc"""		4077688	0					
ANR	4077738	Argument	node -> value		4077688	1					
ANR	4077739	PtrMemberAccess	node -> value		4077688	0					
ANR	4077740	Identifier	node		4077688	0					
ANR	4077741	Identifier	value		4077688	1					
ANR	4077742	CompoundStatement		6:76:173:173	4077688	1					
ANR	4077743	IfStatement	if ( core -> dbg )		4077688	0					
ANR	4077744	Condition	core -> dbg	2653:7:72701:72709	4077688	0	True				
ANR	4077745	PtrMemberAccess	core -> dbg		4077688	0					
ANR	4077746	Identifier	core		4077688	0					
ANR	4077747	Identifier	dbg		4077688	1					
ANR	4077748	CompoundStatement		7:18:193:193	4077688	1					
ANR	4077749	ExpressionStatement	core -> dbg -> malloc = data	2654:4:72718:72742	4077688	0	True				
ANR	4077750	AssignmentExpression	core -> dbg -> malloc = data		4077688	0		=			
ANR	4077751	PtrMemberAccess	core -> dbg -> malloc		4077688	0					
ANR	4077752	PtrMemberAccess	core -> dbg		4077688	0					
ANR	4077753	Identifier	core		4077688	0					
ANR	4077754	Identifier	dbg		4077688	1					
ANR	4077755	Identifier	malloc		4077688	1					
ANR	4077756	Identifier	data		4077688	1					
ANR	4077757	ReturnStatement	return true ;	2659:1:72760:72771	4077688	3	True				
ANR	4077758	Identifier	true		4077688	0					
ANR	4077759	ReturnType	static bool		4077688	1					
ANR	4077760	Identifier	cb_malloc		4077688	2					
ANR	4077761	ParameterList	"void * user , void * data"		4077688	3					
ANR	4077762	Parameter	void * user	2647:22:72494:72503	4077688	0	True				
ANR	4077763	ParameterType	void *		4077688	0					
ANR	4077764	Identifier	user		4077688	1					
ANR	4077765	Parameter	void * data	2647:34:72506:72515	4077688	1	True				
ANR	4077766	ParameterType	void *		4077688	0					
ANR	4077767	Identifier	data		4077688	1					
ANR	4077768	CFGEntryNode	ENTRY		4077688		True				
ANR	4077769	CFGExitNode	EXIT		4077688		True				
ANR	4077770	Symbol	strcmp		4077688						
ANR	4077771	Symbol	data		4077688						
ANR	4077772	Symbol	* core		4077688						
ANR	4077773	Symbol	node -> value		4077688						
ANR	4077774	Symbol	core		4077688						
ANR	4077775	Symbol	node		4077688						
ANR	4077776	Symbol	core -> dbg -> malloc		4077688						
ANR	4077777	Symbol	true		4077688						
ANR	4077778	Symbol	* node		4077688						
ANR	4077779	Symbol	user		4077688						
ANR	4077780	Symbol	* core -> dbg		4077688						
ANR	4077781	Symbol	* * core		4077688						
ANR	4077782	Symbol	core -> dbg		4077688						
ANR	4077783	Function	cb_dbgsnap	2662:0:72776:72983							
ANR	4077784	FunctionDef	"cb_dbgsnap (void * user , void * data)"		4077783	0					
ANR	4077785	CompoundStatement		2662:47:72823:72983	4077783	0					
ANR	4077786	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2663:1:72826:72853	4077783	0	True				
ANR	4077787	IdentifierDecl	* core = ( RCore * ) user		4077783	0					
ANR	4077788	IdentifierDeclType	RCore *		4077783	0					
ANR	4077789	Identifier	core		4077783	1					
ANR	4077790	AssignmentExpression	* core = ( RCore * ) user		4077783	2		=			
ANR	4077791	Identifier	core		4077783	0					
ANR	4077792	CastExpression	( RCore * ) user		4077783	1					
ANR	4077793	CastTarget	RCore *		4077783	0					
ANR	4077794	Identifier	user		4077783	1					
ANR	4077795	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2664:1:72856:72895	4077783	1	True				
ANR	4077796	IdentifierDecl	* node = ( RConfigNode * ) data		4077783	0					
ANR	4077797	IdentifierDeclType	RConfigNode *		4077783	0					
ANR	4077798	Identifier	node		4077783	1					
ANR	4077799	AssignmentExpression	* node = ( RConfigNode * ) data		4077783	2		=			
ANR	4077800	Identifier	node		4077783	0					
ANR	4077801	CastExpression	( RConfigNode * ) data		4077783	1					
ANR	4077802	CastTarget	RConfigNode *		4077783	0					
ANR	4077803	Identifier	data		4077783	1					
ANR	4077804	IfStatement	if ( node -> value )		4077783	2					
ANR	4077805	Condition	node -> value	2666:5:72903:72913	4077783	0	True				
ANR	4077806	PtrMemberAccess	node -> value		4077783	0					
ANR	4077807	Identifier	node		4077783	0					
ANR	4077808	Identifier	value		4077783	1					
ANR	4077809	CompoundStatement		5:17:91:91	4077783	1					
ANR	4077810	ExpressionStatement	"r_debug_session_path ( core -> dbg , node -> value )"	2667:2:72919:72964	4077783	0	True				
ANR	4077811	CallExpression	"r_debug_session_path ( core -> dbg , node -> value )"		4077783	0					
ANR	4077812	Callee	r_debug_session_path		4077783	0					
ANR	4077813	Identifier	r_debug_session_path		4077783	0					
ANR	4077814	ArgumentList	core -> dbg		4077783	1					
ANR	4077815	Argument	core -> dbg		4077783	0					
ANR	4077816	PtrMemberAccess	core -> dbg		4077783	0					
ANR	4077817	Identifier	core		4077783	0					
ANR	4077818	Identifier	dbg		4077783	1					
ANR	4077819	Argument	node -> value		4077783	1					
ANR	4077820	PtrMemberAccess	node -> value		4077783	0					
ANR	4077821	Identifier	node		4077783	0					
ANR	4077822	Identifier	value		4077783	1					
ANR	4077823	ReturnStatement	return true ;	2669:1:72970:72981	4077783	3	True				
ANR	4077824	Identifier	true		4077783	0					
ANR	4077825	ReturnType	static bool		4077783	1					
ANR	4077826	Identifier	cb_dbgsnap		4077783	2					
ANR	4077827	ParameterList	"void * user , void * data"		4077783	3					
ANR	4077828	Parameter	void * user	2662:23:72799:72808	4077783	0	True				
ANR	4077829	ParameterType	void *		4077783	0					
ANR	4077830	Identifier	user		4077783	1					
ANR	4077831	Parameter	void * data	2662:35:72811:72820	4077783	1	True				
ANR	4077832	ParameterType	void *		4077783	0					
ANR	4077833	Identifier	data		4077783	1					
ANR	4077834	CFGEntryNode	ENTRY		4077783		True				
ANR	4077835	CFGExitNode	EXIT		4077783		True				
ANR	4077836	Symbol	core		4077783						
ANR	4077837	Symbol	node		4077783						
ANR	4077838	Symbol	data		4077783						
ANR	4077839	Symbol	* core		4077783						
ANR	4077840	Symbol	true		4077783						
ANR	4077841	Symbol	* node		4077783						
ANR	4077842	Symbol	user		4077783						
ANR	4077843	Symbol	node -> value		4077783						
ANR	4077844	Symbol	core -> dbg		4077783						
ANR	4077845	Function	cb_log_config_level	2672:0:72986:73277							
ANR	4077846	FunctionDef	"cb_log_config_level (void * coreptr , void * nodeptr)"		4077845	0					
ANR	4077847	CompoundStatement		2672:62:73048:73277	4077845	0					
ANR	4077848	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) nodeptr ;	2673:1:73051:73093	4077845	0	True				
ANR	4077849	IdentifierDecl	* node = ( RConfigNode * ) nodeptr		4077845	0					
ANR	4077850	IdentifierDeclType	RConfigNode *		4077845	0					
ANR	4077851	Identifier	node		4077845	1					
ANR	4077852	AssignmentExpression	* node = ( RConfigNode * ) nodeptr		4077845	2		=			
ANR	4077853	Identifier	node		4077845	0					
ANR	4077854	CastExpression	( RConfigNode * ) nodeptr		4077845	1					
ANR	4077855	CastTarget	RConfigNode *		4077845	0					
ANR	4077856	Identifier	nodeptr		4077845	1					
ANR	4077857	IdentifierDeclStatement	const char * value = node -> value ;	2674:1:73096:73127	4077845	1	True				
ANR	4077858	IdentifierDecl	* value = node -> value		4077845	0					
ANR	4077859	IdentifierDeclType	const char *		4077845	0					
ANR	4077860	Identifier	value		4077845	1					
ANR	4077861	AssignmentExpression	* value = node -> value		4077845	2		=			
ANR	4077862	Identifier	value		4077845	0					
ANR	4077863	PtrMemberAccess	node -> value		4077845	1					
ANR	4077864	Identifier	node		4077845	0					
ANR	4077865	Identifier	value		4077845	1					
ANR	4077866	IdentifierDeclStatement	char * bad_data = NULL ;	2675:1:73130:73151	4077845	2	True				
ANR	4077867	IdentifierDecl	* bad_data = NULL		4077845	0					
ANR	4077868	IdentifierDeclType	char *		4077845	0					
ANR	4077869	Identifier	bad_data		4077845	1					
ANR	4077870	AssignmentExpression	* bad_data = NULL		4077845	2		=			
ANR	4077871	Identifier	NULL		4077845	0					
ANR	4077872	Identifier	NULL		4077845	1					
ANR	4077873	IdentifierDeclStatement	"long int ival = strtol ( value , & bad_data , 10 ) ;"	2676:1:73154:73199	4077845	3	True				
ANR	4077874	IdentifierDecl	"ival = strtol ( value , & bad_data , 10 )"		4077845	0					
ANR	4077875	IdentifierDeclType	long int		4077845	0					
ANR	4077876	Identifier	ival		4077845	1					
ANR	4077877	AssignmentExpression	"ival = strtol ( value , & bad_data , 10 )"		4077845	2		=			
ANR	4077878	Identifier	ival		4077845	0					
ANR	4077879	CallExpression	"strtol ( value , & bad_data , 10 )"		4077845	1					
ANR	4077880	Callee	strtol		4077845	0					
ANR	4077881	Identifier	strtol		4077845	0					
ANR	4077882	ArgumentList	value		4077845	1					
ANR	4077883	Argument	value		4077845	0					
ANR	4077884	Identifier	value		4077845	0					
ANR	4077885	Argument	& bad_data		4077845	1					
ANR	4077886	UnaryOperationExpression	& bad_data		4077845	0					
ANR	4077887	UnaryOperator	&		4077845	0					
ANR	4077888	Identifier	bad_data		4077845	1					
ANR	4077889	Argument	10		4077845	2					
ANR	4077890	PrimaryExpression	10		4077845	0					
ANR	4077891	IfStatement	if ( * bad_data )		4077845	4					
ANR	4077892	Condition	* bad_data	2677:5:73206:73214	4077845	0	True				
ANR	4077893	UnaryOperationExpression	* bad_data		4077845	0					
ANR	4077894	UnaryOperator	*		4077845	0					
ANR	4077895	Identifier	bad_data		4077845	1					
ANR	4077896	CompoundStatement		6:16:168:168	4077845	1					
ANR	4077897	ReturnStatement	return false ;	2678:2:73221:73233	4077845	0	True				
ANR	4077898	Identifier	false		4077845	0					
ANR	4077899	ExpressionStatement	r_log_set_level ( ival )	2680:1:73239:73261	4077845	5	True				
ANR	4077900	CallExpression	r_log_set_level ( ival )		4077845	0					
ANR	4077901	Callee	r_log_set_level		4077845	0					
ANR	4077902	Identifier	r_log_set_level		4077845	0					
ANR	4077903	ArgumentList	ival		4077845	1					
ANR	4077904	Argument	ival		4077845	0					
ANR	4077905	Identifier	ival		4077845	0					
ANR	4077906	ReturnStatement	return true ;	2681:1:73264:73275	4077845	6	True				
ANR	4077907	Identifier	true		4077845	0					
ANR	4077908	ReturnType	static bool		4077845	1					
ANR	4077909	Identifier	cb_log_config_level		4077845	2					
ANR	4077910	ParameterList	"void * coreptr , void * nodeptr"		4077845	3					
ANR	4077911	Parameter	void * coreptr	2672:32:73018:73030	4077845	0	True				
ANR	4077912	ParameterType	void *		4077845	0					
ANR	4077913	Identifier	coreptr		4077845	1					
ANR	4077914	Parameter	void * nodeptr	2672:47:73033:73045	4077845	1	True				
ANR	4077915	ParameterType	void *		4077845	0					
ANR	4077916	Identifier	nodeptr		4077845	1					
ANR	4077917	CFGEntryNode	ENTRY		4077845		True				
ANR	4077918	CFGExitNode	EXIT		4077845		True				
ANR	4077919	Symbol	* bad_data		4077845						
ANR	4077920	Symbol	NULL		4077845						
ANR	4077921	Symbol	nodeptr		4077845						
ANR	4077922	Symbol	coreptr		4077845						
ANR	4077923	Symbol	false		4077845						
ANR	4077924	Symbol	ival		4077845						
ANR	4077925	Symbol	& bad_data		4077845						
ANR	4077926	Symbol	node -> value		4077845						
ANR	4077927	Symbol	node		4077845						
ANR	4077928	Symbol	strtol		4077845						
ANR	4077929	Symbol	true		4077845						
ANR	4077930	Symbol	bad_data		4077845						
ANR	4077931	Symbol	* node		4077845						
ANR	4077932	Symbol	value		4077845						
ANR	4077933	Function	cb_log_config_traplevel	2684:0:73280:73579							
ANR	4077934	FunctionDef	"cb_log_config_traplevel (void * coreptr , void * nodeptr)"		4077933	0					
ANR	4077935	CompoundStatement		2684:66:73346:73579	4077933	0					
ANR	4077936	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) nodeptr ;	2685:1:73349:73391	4077933	0	True				
ANR	4077937	IdentifierDecl	* node = ( RConfigNode * ) nodeptr		4077933	0					
ANR	4077938	IdentifierDeclType	RConfigNode *		4077933	0					
ANR	4077939	Identifier	node		4077933	1					
ANR	4077940	AssignmentExpression	* node = ( RConfigNode * ) nodeptr		4077933	2		=			
ANR	4077941	Identifier	node		4077933	0					
ANR	4077942	CastExpression	( RConfigNode * ) nodeptr		4077933	1					
ANR	4077943	CastTarget	RConfigNode *		4077933	0					
ANR	4077944	Identifier	nodeptr		4077933	1					
ANR	4077945	IdentifierDeclStatement	const char * value = node -> value ;	2686:1:73394:73425	4077933	1	True				
ANR	4077946	IdentifierDecl	* value = node -> value		4077933	0					
ANR	4077947	IdentifierDeclType	const char *		4077933	0					
ANR	4077948	Identifier	value		4077933	1					
ANR	4077949	AssignmentExpression	* value = node -> value		4077933	2		=			
ANR	4077950	Identifier	value		4077933	0					
ANR	4077951	PtrMemberAccess	node -> value		4077933	1					
ANR	4077952	Identifier	node		4077933	0					
ANR	4077953	Identifier	value		4077933	1					
ANR	4077954	IdentifierDeclStatement	char * bad_data = NULL ;	2687:1:73428:73449	4077933	2	True				
ANR	4077955	IdentifierDecl	* bad_data = NULL		4077933	0					
ANR	4077956	IdentifierDeclType	char *		4077933	0					
ANR	4077957	Identifier	bad_data		4077933	1					
ANR	4077958	AssignmentExpression	* bad_data = NULL		4077933	2		=			
ANR	4077959	Identifier	NULL		4077933	0					
ANR	4077960	Identifier	NULL		4077933	1					
ANR	4077961	IdentifierDeclStatement	"long int ival = strtol ( value , & bad_data , 10 ) ;"	2688:1:73452:73497	4077933	3	True				
ANR	4077962	IdentifierDecl	"ival = strtol ( value , & bad_data , 10 )"		4077933	0					
ANR	4077963	IdentifierDeclType	long int		4077933	0					
ANR	4077964	Identifier	ival		4077933	1					
ANR	4077965	AssignmentExpression	"ival = strtol ( value , & bad_data , 10 )"		4077933	2		=			
ANR	4077966	Identifier	ival		4077933	0					
ANR	4077967	CallExpression	"strtol ( value , & bad_data , 10 )"		4077933	1					
ANR	4077968	Callee	strtol		4077933	0					
ANR	4077969	Identifier	strtol		4077933	0					
ANR	4077970	ArgumentList	value		4077933	1					
ANR	4077971	Argument	value		4077933	0					
ANR	4077972	Identifier	value		4077933	0					
ANR	4077973	Argument	& bad_data		4077933	1					
ANR	4077974	UnaryOperationExpression	& bad_data		4077933	0					
ANR	4077975	UnaryOperator	&		4077933	0					
ANR	4077976	Identifier	bad_data		4077933	1					
ANR	4077977	Argument	10		4077933	2					
ANR	4077978	PrimaryExpression	10		4077933	0					
ANR	4077979	IfStatement	if ( * bad_data )		4077933	4					
ANR	4077980	Condition	* bad_data	2689:5:73504:73512	4077933	0	True				
ANR	4077981	UnaryOperationExpression	* bad_data		4077933	0					
ANR	4077982	UnaryOperator	*		4077933	0					
ANR	4077983	Identifier	bad_data		4077933	1					
ANR	4077984	CompoundStatement		6:16:168:168	4077933	1					
ANR	4077985	ReturnStatement	return false ;	2690:2:73519:73531	4077933	0	True				
ANR	4077986	Identifier	false		4077933	0					
ANR	4077987	ExpressionStatement	r_log_set_traplevel ( ival )	2692:1:73537:73563	4077933	5	True				
ANR	4077988	CallExpression	r_log_set_traplevel ( ival )		4077933	0					
ANR	4077989	Callee	r_log_set_traplevel		4077933	0					
ANR	4077990	Identifier	r_log_set_traplevel		4077933	0					
ANR	4077991	ArgumentList	ival		4077933	1					
ANR	4077992	Argument	ival		4077933	0					
ANR	4077993	Identifier	ival		4077933	0					
ANR	4077994	ReturnStatement	return true ;	2693:1:73566:73577	4077933	6	True				
ANR	4077995	Identifier	true		4077933	0					
ANR	4077996	ReturnType	static bool		4077933	1					
ANR	4077997	Identifier	cb_log_config_traplevel		4077933	2					
ANR	4077998	ParameterList	"void * coreptr , void * nodeptr"		4077933	3					
ANR	4077999	Parameter	void * coreptr	2684:36:73316:73328	4077933	0	True				
ANR	4078000	ParameterType	void *		4077933	0					
ANR	4078001	Identifier	coreptr		4077933	1					
ANR	4078002	Parameter	void * nodeptr	2684:51:73331:73343	4077933	1	True				
ANR	4078003	ParameterType	void *		4077933	0					
ANR	4078004	Identifier	nodeptr		4077933	1					
ANR	4078005	CFGEntryNode	ENTRY		4077933		True				
ANR	4078006	CFGExitNode	EXIT		4077933		True				
ANR	4078007	Symbol	* bad_data		4077933						
ANR	4078008	Symbol	NULL		4077933						
ANR	4078009	Symbol	nodeptr		4077933						
ANR	4078010	Symbol	coreptr		4077933						
ANR	4078011	Symbol	false		4077933						
ANR	4078012	Symbol	ival		4077933						
ANR	4078013	Symbol	& bad_data		4077933						
ANR	4078014	Symbol	node -> value		4077933						
ANR	4078015	Symbol	node		4077933						
ANR	4078016	Symbol	strtol		4077933						
ANR	4078017	Symbol	true		4077933						
ANR	4078018	Symbol	bad_data		4077933						
ANR	4078019	Symbol	* node		4077933						
ANR	4078020	Symbol	value		4077933						
ANR	4078021	Function	cb_log_config_file	2696:0:73582:73763							
ANR	4078022	FunctionDef	"cb_log_config_file (void * coreptr , void * nodeptr)"		4078021	0					
ANR	4078023	CompoundStatement		2696:61:73643:73763	4078021	0					
ANR	4078024	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) nodeptr ;	2697:1:73646:73688	4078021	0	True				
ANR	4078025	IdentifierDecl	* node = ( RConfigNode * ) nodeptr		4078021	0					
ANR	4078026	IdentifierDeclType	RConfigNode *		4078021	0					
ANR	4078027	Identifier	node		4078021	1					
ANR	4078028	AssignmentExpression	* node = ( RConfigNode * ) nodeptr		4078021	2		=			
ANR	4078029	Identifier	node		4078021	0					
ANR	4078030	CastExpression	( RConfigNode * ) nodeptr		4078021	1					
ANR	4078031	CastTarget	RConfigNode *		4078021	0					
ANR	4078032	Identifier	nodeptr		4078021	1					
ANR	4078033	IdentifierDeclStatement	const char * value = node -> value ;	2698:1:73691:73722	4078021	1	True				
ANR	4078034	IdentifierDecl	* value = node -> value		4078021	0					
ANR	4078035	IdentifierDeclType	const char *		4078021	0					
ANR	4078036	Identifier	value		4078021	1					
ANR	4078037	AssignmentExpression	* value = node -> value		4078021	2		=			
ANR	4078038	Identifier	value		4078021	0					
ANR	4078039	PtrMemberAccess	node -> value		4078021	1					
ANR	4078040	Identifier	node		4078021	0					
ANR	4078041	Identifier	value		4078021	1					
ANR	4078042	ExpressionStatement	r_log_set_file ( value )	2699:1:73725:73747	4078021	2	True				
ANR	4078043	CallExpression	r_log_set_file ( value )		4078021	0					
ANR	4078044	Callee	r_log_set_file		4078021	0					
ANR	4078045	Identifier	r_log_set_file		4078021	0					
ANR	4078046	ArgumentList	value		4078021	1					
ANR	4078047	Argument	value		4078021	0					
ANR	4078048	Identifier	value		4078021	0					
ANR	4078049	ReturnStatement	return true ;	2700:1:73750:73761	4078021	3	True				
ANR	4078050	Identifier	true		4078021	0					
ANR	4078051	ReturnType	static bool		4078021	1					
ANR	4078052	Identifier	cb_log_config_file		4078021	2					
ANR	4078053	ParameterList	"void * coreptr , void * nodeptr"		4078021	3					
ANR	4078054	Parameter	void * coreptr	2696:31:73613:73625	4078021	0	True				
ANR	4078055	ParameterType	void *		4078021	0					
ANR	4078056	Identifier	coreptr		4078021	1					
ANR	4078057	Parameter	void * nodeptr	2696:46:73628:73640	4078021	1	True				
ANR	4078058	ParameterType	void *		4078021	0					
ANR	4078059	Identifier	nodeptr		4078021	1					
ANR	4078060	CFGEntryNode	ENTRY		4078021		True				
ANR	4078061	CFGExitNode	EXIT		4078021		True				
ANR	4078062	Symbol	node		4078021						
ANR	4078063	Symbol	nodeptr		4078021						
ANR	4078064	Symbol	coreptr		4078021						
ANR	4078065	Symbol	true		4078021						
ANR	4078066	Symbol	* node		4078021						
ANR	4078067	Symbol	value		4078021						
ANR	4078068	Symbol	node -> value		4078021						
ANR	4078069	Function	cb_log_config_srcinfo	2703:0:73766:74047							
ANR	4078070	FunctionDef	"cb_log_config_srcinfo (void * coreptr , void * nodeptr)"		4078069	0					
ANR	4078071	CompoundStatement		2703:64:73830:74047	4078069	0					
ANR	4078072	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) nodeptr ;	2704:1:73833:73875	4078069	0	True				
ANR	4078073	IdentifierDecl	* node = ( RConfigNode * ) nodeptr		4078069	0					
ANR	4078074	IdentifierDeclType	RConfigNode *		4078069	0					
ANR	4078075	Identifier	node		4078069	1					
ANR	4078076	AssignmentExpression	* node = ( RConfigNode * ) nodeptr		4078069	2		=			
ANR	4078077	Identifier	node		4078069	0					
ANR	4078078	CastExpression	( RConfigNode * ) nodeptr		4078069	1					
ANR	4078079	CastTarget	RConfigNode *		4078069	0					
ANR	4078080	Identifier	nodeptr		4078069	1					
ANR	4078081	IdentifierDeclStatement	const char * value = node -> value ;	2705:1:73878:73909	4078069	1	True				
ANR	4078082	IdentifierDecl	* value = node -> value		4078069	0					
ANR	4078083	IdentifierDeclType	const char *		4078069	0					
ANR	4078084	Identifier	value		4078069	1					
ANR	4078085	AssignmentExpression	* value = node -> value		4078069	2		=			
ANR	4078086	Identifier	value		4078069	0					
ANR	4078087	PtrMemberAccess	node -> value		4078069	1					
ANR	4078088	Identifier	node		4078069	0					
ANR	4078089	Identifier	value		4078069	1					
ANR	4078090	SwitchStatement	switch ( value [ 0 ] )		4078069	2					
ANR	4078091	Condition	value [ 0 ]	2706:9:73920:73927	4078069	0	True				
ANR	4078092	ArrayIndexing	value [ 0 ]		4078069	0					
ANR	4078093	Identifier	value		4078069	0					
ANR	4078094	PrimaryExpression	0		4078069	1					
ANR	4078095	CompoundStatement		4:19:99:99	4078069	1					
ANR	4078096	Label	case 't' :	2707:1:73933:73941	4078069	0	True				
ANR	4078097	Label	case 'T' :	2708:1:73944:73952	4078069	1	True				
ANR	4078098	ExpressionStatement	r_log_set_srcinfo ( true )	2709:2:73956:73980	4078069	2	True				
ANR	4078099	CallExpression	r_log_set_srcinfo ( true )		4078069	0					
ANR	4078100	Callee	r_log_set_srcinfo		4078069	0					
ANR	4078101	Identifier	r_log_set_srcinfo		4078069	0					
ANR	4078102	ArgumentList	true		4078069	1					
ANR	4078103	Argument	true		4078069	0					
ANR	4078104	Identifier	true		4078069	0					
ANR	4078105	BreakStatement	break ;	2710:2:73984:73989	4078069	3	True				
ANR	4078106	Label	default :	2711:1:73992:73999	4078069	4	True				
ANR	4078107	Identifier	default		4078069	0					
ANR	4078108	ExpressionStatement	r_log_set_srcinfo ( false )	2712:2:74003:74028	4078069	5	True				
ANR	4078109	CallExpression	r_log_set_srcinfo ( false )		4078069	0					
ANR	4078110	Callee	r_log_set_srcinfo		4078069	0					
ANR	4078111	Identifier	r_log_set_srcinfo		4078069	0					
ANR	4078112	ArgumentList	false		4078069	1					
ANR	4078113	Argument	false		4078069	0					
ANR	4078114	Identifier	false		4078069	0					
ANR	4078115	ReturnStatement	return true ;	2714:1:74034:74045	4078069	3	True				
ANR	4078116	Identifier	true		4078069	0					
ANR	4078117	ReturnType	static bool		4078069	1					
ANR	4078118	Identifier	cb_log_config_srcinfo		4078069	2					
ANR	4078119	ParameterList	"void * coreptr , void * nodeptr"		4078069	3					
ANR	4078120	Parameter	void * coreptr	2703:34:73800:73812	4078069	0	True				
ANR	4078121	ParameterType	void *		4078069	0					
ANR	4078122	Identifier	coreptr		4078069	1					
ANR	4078123	Parameter	void * nodeptr	2703:49:73815:73827	4078069	1	True				
ANR	4078124	ParameterType	void *		4078069	0					
ANR	4078125	Identifier	nodeptr		4078069	1					
ANR	4078126	CFGEntryNode	ENTRY		4078069		True				
ANR	4078127	CFGExitNode	EXIT		4078069		True				
ANR	4078128	Symbol	node		4078069						
ANR	4078129	Symbol	nodeptr		4078069						
ANR	4078130	Symbol	* value		4078069						
ANR	4078131	Symbol	coreptr		4078069						
ANR	4078132	Symbol	true		4078069						
ANR	4078133	Symbol	false		4078069						
ANR	4078134	Symbol	* node		4078069						
ANR	4078135	Symbol	value		4078069						
ANR	4078136	Symbol	node -> value		4078069						
ANR	4078137	Function	cb_log_config_colors	2717:0:74050:74328							
ANR	4078138	FunctionDef	"cb_log_config_colors (void * coreptr , void * nodeptr)"		4078137	0					
ANR	4078139	CompoundStatement		2717:63:74113:74328	4078137	0					
ANR	4078140	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) nodeptr ;	2718:1:74116:74158	4078137	0	True				
ANR	4078141	IdentifierDecl	* node = ( RConfigNode * ) nodeptr		4078137	0					
ANR	4078142	IdentifierDeclType	RConfigNode *		4078137	0					
ANR	4078143	Identifier	node		4078137	1					
ANR	4078144	AssignmentExpression	* node = ( RConfigNode * ) nodeptr		4078137	2		=			
ANR	4078145	Identifier	node		4078137	0					
ANR	4078146	CastExpression	( RConfigNode * ) nodeptr		4078137	1					
ANR	4078147	CastTarget	RConfigNode *		4078137	0					
ANR	4078148	Identifier	nodeptr		4078137	1					
ANR	4078149	IdentifierDeclStatement	const char * value = node -> value ;	2719:1:74161:74192	4078137	1	True				
ANR	4078150	IdentifierDecl	* value = node -> value		4078137	0					
ANR	4078151	IdentifierDeclType	const char *		4078137	0					
ANR	4078152	Identifier	value		4078137	1					
ANR	4078153	AssignmentExpression	* value = node -> value		4078137	2		=			
ANR	4078154	Identifier	value		4078137	0					
ANR	4078155	PtrMemberAccess	node -> value		4078137	1					
ANR	4078156	Identifier	node		4078137	0					
ANR	4078157	Identifier	value		4078137	1					
ANR	4078158	SwitchStatement	switch ( value [ 0 ] )		4078137	2					
ANR	4078159	Condition	value [ 0 ]	2720:9:74203:74210	4078137	0	True				
ANR	4078160	ArrayIndexing	value [ 0 ]		4078137	0					
ANR	4078161	Identifier	value		4078137	0					
ANR	4078162	PrimaryExpression	0		4078137	1					
ANR	4078163	CompoundStatement		4:19:99:99	4078137	1					
ANR	4078164	Label	case 't' :	2721:1:74216:74224	4078137	0	True				
ANR	4078165	Label	case 'T' :	2722:1:74227:74235	4078137	1	True				
ANR	4078166	ExpressionStatement	r_log_set_colors ( true )	2723:2:74239:74262	4078137	2	True				
ANR	4078167	CallExpression	r_log_set_colors ( true )		4078137	0					
ANR	4078168	Callee	r_log_set_colors		4078137	0					
ANR	4078169	Identifier	r_log_set_colors		4078137	0					
ANR	4078170	ArgumentList	true		4078137	1					
ANR	4078171	Argument	true		4078137	0					
ANR	4078172	Identifier	true		4078137	0					
ANR	4078173	BreakStatement	break ;	2724:2:74266:74271	4078137	3	True				
ANR	4078174	Label	default :	2725:1:74274:74281	4078137	4	True				
ANR	4078175	Identifier	default		4078137	0					
ANR	4078176	ExpressionStatement	r_log_set_colors ( false )	2726:2:74285:74309	4078137	5	True				
ANR	4078177	CallExpression	r_log_set_colors ( false )		4078137	0					
ANR	4078178	Callee	r_log_set_colors		4078137	0					
ANR	4078179	Identifier	r_log_set_colors		4078137	0					
ANR	4078180	ArgumentList	false		4078137	1					
ANR	4078181	Argument	false		4078137	0					
ANR	4078182	Identifier	false		4078137	0					
ANR	4078183	ReturnStatement	return true ;	2728:1:74315:74326	4078137	3	True				
ANR	4078184	Identifier	true		4078137	0					
ANR	4078185	ReturnType	static bool		4078137	1					
ANR	4078186	Identifier	cb_log_config_colors		4078137	2					
ANR	4078187	ParameterList	"void * coreptr , void * nodeptr"		4078137	3					
ANR	4078188	Parameter	void * coreptr	2717:33:74083:74095	4078137	0	True				
ANR	4078189	ParameterType	void *		4078137	0					
ANR	4078190	Identifier	coreptr		4078137	1					
ANR	4078191	Parameter	void * nodeptr	2717:48:74098:74110	4078137	1	True				
ANR	4078192	ParameterType	void *		4078137	0					
ANR	4078193	Identifier	nodeptr		4078137	1					
ANR	4078194	CFGEntryNode	ENTRY		4078137		True				
ANR	4078195	CFGExitNode	EXIT		4078137		True				
ANR	4078196	Symbol	node		4078137						
ANR	4078197	Symbol	nodeptr		4078137						
ANR	4078198	Symbol	* value		4078137						
ANR	4078199	Symbol	coreptr		4078137						
ANR	4078200	Symbol	true		4078137						
ANR	4078201	Symbol	false		4078137						
ANR	4078202	Symbol	* node		4078137						
ANR	4078203	Symbol	value		4078137						
ANR	4078204	Symbol	node -> value		4078137						
ANR	4078205	Function	cb_dbg_verbose	2731:0:74331:74628							
ANR	4078206	FunctionDef	"cb_dbg_verbose (void * user , void * data)"		4078205	0					
ANR	4078207	CompoundStatement		2731:51:74382:74628	4078205	0					
ANR	4078208	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2732:1:74385:74412	4078205	0	True				
ANR	4078209	IdentifierDecl	* core = ( RCore * ) user		4078205	0					
ANR	4078210	IdentifierDeclType	RCore *		4078205	0					
ANR	4078211	Identifier	core		4078205	1					
ANR	4078212	AssignmentExpression	* core = ( RCore * ) user		4078205	2		=			
ANR	4078213	Identifier	core		4078205	0					
ANR	4078214	CastExpression	( RCore * ) user		4078205	1					
ANR	4078215	CastTarget	RCore *		4078205	0					
ANR	4078216	Identifier	user		4078205	1					
ANR	4078217	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2733:1:74415:74454	4078205	1	True				
ANR	4078218	IdentifierDecl	* node = ( RConfigNode * ) data		4078205	0					
ANR	4078219	IdentifierDeclType	RConfigNode *		4078205	0					
ANR	4078220	Identifier	node		4078205	1					
ANR	4078221	AssignmentExpression	* node = ( RConfigNode * ) data		4078205	2		=			
ANR	4078222	Identifier	node		4078205	0					
ANR	4078223	CastExpression	( RConfigNode * ) data		4078205	1					
ANR	4078224	CastTarget	RConfigNode *		4078205	0					
ANR	4078225	Identifier	data		4078205	1					
ANR	4078226	IdentifierDeclStatement	const char * value = node -> value ;	2734:1:74457:74488	4078205	2	True				
ANR	4078227	IdentifierDecl	* value = node -> value		4078205	0					
ANR	4078228	IdentifierDeclType	const char *		4078205	0					
ANR	4078229	Identifier	value		4078205	1					
ANR	4078230	AssignmentExpression	* value = node -> value		4078205	2		=			
ANR	4078231	Identifier	value		4078205	0					
ANR	4078232	PtrMemberAccess	node -> value		4078205	1					
ANR	4078233	Identifier	node		4078205	0					
ANR	4078234	Identifier	value		4078205	1					
ANR	4078235	SwitchStatement	switch ( value [ 0 ] )		4078205	3					
ANR	4078236	Condition	value [ 0 ]	2735:9:74499:74506	4078205	0	True				
ANR	4078237	ArrayIndexing	value [ 0 ]		4078205	0					
ANR	4078238	Identifier	value		4078205	0					
ANR	4078239	PrimaryExpression	0		4078205	1					
ANR	4078240	CompoundStatement		5:19:126:126	4078205	1					
ANR	4078241	Label	case 't' :	2736:1:74512:74520	4078205	0	True				
ANR	4078242	Label	case 'T' :	2737:1:74523:74531	4078205	1	True				
ANR	4078243	ExpressionStatement	core -> dbg -> verbose = true	2738:2:74535:74560	4078205	2	True				
ANR	4078244	AssignmentExpression	core -> dbg -> verbose = true		4078205	0		=			
ANR	4078245	PtrMemberAccess	core -> dbg -> verbose		4078205	0					
ANR	4078246	PtrMemberAccess	core -> dbg		4078205	0					
ANR	4078247	Identifier	core		4078205	0					
ANR	4078248	Identifier	dbg		4078205	1					
ANR	4078249	Identifier	verbose		4078205	1					
ANR	4078250	Identifier	true		4078205	1					
ANR	4078251	BreakStatement	break ;	2739:2:74564:74569	4078205	3	True				
ANR	4078252	Label	default :	2740:1:74572:74579	4078205	4	True				
ANR	4078253	Identifier	default		4078205	0					
ANR	4078254	ExpressionStatement	core -> dbg -> verbose = false	2741:2:74583:74609	4078205	5	True				
ANR	4078255	AssignmentExpression	core -> dbg -> verbose = false		4078205	0		=			
ANR	4078256	PtrMemberAccess	core -> dbg -> verbose		4078205	0					
ANR	4078257	PtrMemberAccess	core -> dbg		4078205	0					
ANR	4078258	Identifier	core		4078205	0					
ANR	4078259	Identifier	dbg		4078205	1					
ANR	4078260	Identifier	verbose		4078205	1					
ANR	4078261	Identifier	false		4078205	1					
ANR	4078262	ReturnStatement	return true ;	2743:1:74615:74626	4078205	4	True				
ANR	4078263	Identifier	true		4078205	0					
ANR	4078264	ReturnType	static bool		4078205	1					
ANR	4078265	Identifier	cb_dbg_verbose		4078205	2					
ANR	4078266	ParameterList	"void * user , void * data"		4078205	3					
ANR	4078267	Parameter	void * user	2731:27:74358:74367	4078205	0	True				
ANR	4078268	ParameterType	void *		4078205	0					
ANR	4078269	Identifier	user		4078205	1					
ANR	4078270	Parameter	void * data	2731:39:74370:74379	4078205	1	True				
ANR	4078271	ParameterType	void *		4078205	0					
ANR	4078272	Identifier	data		4078205	1					
ANR	4078273	CFGEntryNode	ENTRY		4078205		True				
ANR	4078274	CFGExitNode	EXIT		4078205		True				
ANR	4078275	Symbol	data		4078205						
ANR	4078276	Symbol	* core		4078205						
ANR	4078277	Symbol	false		4078205						
ANR	4078278	Symbol	core -> dbg -> verbose		4078205						
ANR	4078279	Symbol	node -> value		4078205						
ANR	4078280	Symbol	core		4078205						
ANR	4078281	Symbol	node		4078205						
ANR	4078282	Symbol	* value		4078205						
ANR	4078283	Symbol	true		4078205						
ANR	4078284	Symbol	* node		4078205						
ANR	4078285	Symbol	user		4078205						
ANR	4078286	Symbol	value		4078205						
ANR	4078287	Symbol	* core -> dbg		4078205						
ANR	4078288	Symbol	* * core		4078205						
ANR	4078289	Symbol	core -> dbg		4078205						
ANR	4078290	Function	r_core_config_init	2746:0:74631:129824							
ANR	4078291	FunctionDef	r_core_config_init (RCore * core)		4078290	0					
ANR	4078292	CompoundStatement		2746:42:74673:129824	4078290	0					
ANR	4078293	IdentifierDeclStatement	int i ;	2747:1:74676:74681	4078290	0	True				
ANR	4078294	IdentifierDecl	i		4078290	0					
ANR	4078295	IdentifierDeclType	int		4078290	0					
ANR	4078296	Identifier	i		4078290	1					
ANR	4078297	IdentifierDeclStatement	"char buf [ 128 ] , * p , * tmpdir ;"	2748:1:74684:74710	4078290	1	True				
ANR	4078298	IdentifierDecl	buf [ 128 ]		4078290	0					
ANR	4078299	IdentifierDeclType	char [ 128 ]		4078290	0					
ANR	4078300	Identifier	buf		4078290	1					
ANR	4078301	PrimaryExpression	128		4078290	2					
ANR	4078302	IdentifierDecl	* p		4078290	1					
ANR	4078303	IdentifierDeclType	char *		4078290	0					
ANR	4078304	Identifier	p		4078290	1					
ANR	4078305	IdentifierDecl	* tmpdir		4078290	2					
ANR	4078306	IdentifierDeclType	char *		4078290	0					
ANR	4078307	Identifier	tmpdir		4078290	1					
ANR	4078308	IdentifierDeclStatement	RConfigNode * n ;	2749:1:74713:74727	4078290	2	True				
ANR	4078309	IdentifierDecl	* n		4078290	0					
ANR	4078310	IdentifierDeclType	RConfigNode *		4078290	0					
ANR	4078311	Identifier	n		4078290	1					
ANR	4078312	IdentifierDeclStatement	RConfig * cfg = core -> config = r_config_new ( core ) ;	2750:1:74730:74779	4078290	3	True				
ANR	4078313	IdentifierDecl	* cfg = core -> config = r_config_new ( core )		4078290	0					
ANR	4078314	IdentifierDeclType	RConfig *		4078290	0					
ANR	4078315	Identifier	cfg		4078290	1					
ANR	4078316	AssignmentExpression	* cfg = core -> config = r_config_new ( core )		4078290	2		=			
ANR	4078317	Identifier	cfg		4078290	0					
ANR	4078318	AssignmentExpression	core -> config = r_config_new ( core )		4078290	1		=			
ANR	4078319	PtrMemberAccess	core -> config		4078290	0					
ANR	4078320	Identifier	core		4078290	0					
ANR	4078321	Identifier	config		4078290	1					
ANR	4078322	CallExpression	r_config_new ( core )		4078290	1					
ANR	4078323	Callee	r_config_new		4078290	0					
ANR	4078324	Identifier	r_config_new		4078290	0					
ANR	4078325	ArgumentList	core		4078290	1					
ANR	4078326	Argument	core		4078290	0					
ANR	4078327	Identifier	core		4078290	0					
ANR	4078328	IfStatement	if ( ! cfg )		4078290	4					
ANR	4078329	Condition	! cfg	2751:5:74786:74789	4078290	0	True				
ANR	4078330	UnaryOperationExpression	! cfg		4078290	0					
ANR	4078331	UnaryOperator	!		4078290	0					
ANR	4078332	Identifier	cfg		4078290	1					
ANR	4078333	CompoundStatement		6:11:118:118	4078290	1					
ANR	4078334	ReturnStatement	return 0 ;	2752:2:74796:74804	4078290	0	True				
ANR	4078335	PrimaryExpression	0		4078290	0					
ANR	4078336	ExpressionStatement	cfg -> cb_printf = r_cons_printf	2754:1:74810:74840	4078290	5	True				
ANR	4078337	AssignmentExpression	cfg -> cb_printf = r_cons_printf		4078290	0		=			
ANR	4078338	PtrMemberAccess	cfg -> cb_printf		4078290	0					
ANR	4078339	Identifier	cfg		4078290	0					
ANR	4078340	Identifier	cb_printf		4078290	1					
ANR	4078341	Identifier	r_cons_printf		4078290	1					
ANR	4078342	ExpressionStatement	cfg -> num = core -> num	2755:1:74843:74863	4078290	6	True				
ANR	4078343	AssignmentExpression	cfg -> num = core -> num		4078290	0		=			
ANR	4078344	PtrMemberAccess	cfg -> num		4078290	0					
ANR	4078345	Identifier	cfg		4078290	0					
ANR	4078346	Identifier	num		4078290	1					
ANR	4078347	PtrMemberAccess	core -> num		4078290	1					
ANR	4078348	Identifier	core		4078290	0					
ANR	4078349	Identifier	num		4078290	1					
ANR	4078350	CompoundStatement		15:2:310:348	4078290	7					
ANR	4078351	IdentifierDeclStatement	"char * pfx = r_sys_getenv ( ""R2_PREFIX"" ) ;"	2758:2:74927:74964	4078290	0	True				
ANR	4078352	IdentifierDecl	"* pfx = r_sys_getenv ( ""R2_PREFIX"" )"		4078290	0					
ANR	4078353	IdentifierDeclType	char *		4078290	0					
ANR	4078354	Identifier	pfx		4078290	1					
ANR	4078355	AssignmentExpression	"* pfx = r_sys_getenv ( ""R2_PREFIX"" )"		4078290	2		=			
ANR	4078356	Identifier	pfx		4078290	0					
ANR	4078357	CallExpression	"r_sys_getenv ( ""R2_PREFIX"" )"		4078290	1					
ANR	4078358	Callee	r_sys_getenv		4078290	0					
ANR	4078359	Identifier	r_sys_getenv		4078290	0					
ANR	4078360	ArgumentList	"""R2_PREFIX"""		4078290	1					
ANR	4078361	Argument	"""R2_PREFIX"""		4078290	0					
ANR	4078362	PrimaryExpression	"""R2_PREFIX"""		4078290	0					
ANR	4078363	IdentifierDeclStatement	char * invoke_dir = r_sys_prefix ( NULL ) ;	2760:2:74984:75022	4078290	1	True				
ANR	4078364	IdentifierDecl	* invoke_dir = r_sys_prefix ( NULL )		4078290	0					
ANR	4078365	IdentifierDeclType	char *		4078290	0					
ANR	4078366	Identifier	invoke_dir		4078290	1					
ANR	4078367	AssignmentExpression	* invoke_dir = r_sys_prefix ( NULL )		4078290	2		=			
ANR	4078368	Identifier	invoke_dir		4078290	0					
ANR	4078369	CallExpression	r_sys_prefix ( NULL )		4078290	1					
ANR	4078370	Callee	r_sys_prefix		4078290	0					
ANR	4078371	Identifier	r_sys_prefix		4078290	0					
ANR	4078372	ArgumentList	NULL		4078290	1					
ANR	4078373	Argument	NULL		4078290	0					
ANR	4078374	Identifier	NULL		4078290	0					
ANR	4078375	IfStatement	if ( ! pfx && invoke_dir )		4078290	2					
ANR	4078376	Condition	! pfx && invoke_dir	2761:6:75030:75047	4078290	0	True				
ANR	4078377	AndExpression	! pfx && invoke_dir		4078290	0		&&			
ANR	4078378	UnaryOperationExpression	! pfx		4078290	0					
ANR	4078379	UnaryOperator	!		4078290	0					
ANR	4078380	Identifier	pfx		4078290	1					
ANR	4078381	Identifier	invoke_dir		4078290	1					
ANR	4078382	CompoundStatement		16:26:376:376	4078290	1					
ANR	4078383	ExpressionStatement	pfx = strdup ( invoke_dir )	2762:3:75055:75080	4078290	0	True				
ANR	4078384	AssignmentExpression	pfx = strdup ( invoke_dir )		4078290	0		=			
ANR	4078385	Identifier	pfx		4078290	0					
ANR	4078386	CallExpression	strdup ( invoke_dir )		4078290	1					
ANR	4078387	Callee	strdup		4078290	0					
ANR	4078388	Identifier	strdup		4078290	0					
ANR	4078389	ArgumentList	invoke_dir		4078290	1					
ANR	4078390	Argument	invoke_dir		4078290	0					
ANR	4078391	Identifier	invoke_dir		4078290	0					
ANR	4078392	IfStatement	if ( ! pfx )		4078290	3					
ANR	4078393	Condition	! pfx	2765:6:75099:75102	4078290	0	True				
ANR	4078394	UnaryOperationExpression	! pfx		4078290	0					
ANR	4078395	UnaryOperator	!		4078290	0					
ANR	4078396	Identifier	pfx		4078290	1					
ANR	4078397	CompoundStatement		20:12:431:431	4078290	1					
ANR	4078398	ExpressionStatement	pfx = strdup ( R2_PREFIX )	2766:3:75110:75134	4078290	0	True				
ANR	4078399	AssignmentExpression	pfx = strdup ( R2_PREFIX )		4078290	0		=			
ANR	4078400	Identifier	pfx		4078290	0					
ANR	4078401	CallExpression	strdup ( R2_PREFIX )		4078290	1					
ANR	4078402	Callee	strdup		4078290	0					
ANR	4078403	Identifier	strdup		4078290	0					
ANR	4078404	ArgumentList	R2_PREFIX		4078290	1					
ANR	4078405	Argument	R2_PREFIX		4078290	0					
ANR	4078406	Identifier	R2_PREFIX		4078290	0					
ANR	4078407	ExpressionStatement	"SETCB ( ""dir.prefix"" , pfx , ( RConfigCallback ) & cb_dirpfx , ""Default prefix r2 was compiled for"" )"	2768:2:75142:75234	4078290	4	True				
ANR	4078408	CallExpression	"SETCB ( ""dir.prefix"" , pfx , ( RConfigCallback ) & cb_dirpfx , ""Default prefix r2 was compiled for"" )"		4078290	0					
ANR	4078409	Callee	SETCB		4078290	0					
ANR	4078410	Identifier	SETCB		4078290	0					
ANR	4078411	ArgumentList	"""dir.prefix"""		4078290	1					
ANR	4078412	Argument	"""dir.prefix"""		4078290	0					
ANR	4078413	PrimaryExpression	"""dir.prefix"""		4078290	0					
ANR	4078414	Argument	pfx		4078290	1					
ANR	4078415	Identifier	pfx		4078290	0					
ANR	4078416	Argument	( RConfigCallback ) & cb_dirpfx		4078290	2					
ANR	4078417	CastExpression	( RConfigCallback ) & cb_dirpfx		4078290	0					
ANR	4078418	CastTarget	RConfigCallback		4078290	0					
ANR	4078419	UnaryOperationExpression	& cb_dirpfx		4078290	1					
ANR	4078420	UnaryOperator	&		4078290	0					
ANR	4078421	Identifier	cb_dirpfx		4078290	1					
ANR	4078422	Argument	"""Default prefix r2 was compiled for"""		4078290	3					
ANR	4078423	PrimaryExpression	"""Default prefix r2 was compiled for"""		4078290	0					
ANR	4078424	ExpressionStatement	free ( pfx )	2769:2:75238:75248	4078290	5	True				
ANR	4078425	CallExpression	free ( pfx )		4078290	0					
ANR	4078426	Callee	free		4078290	0					
ANR	4078427	Identifier	free		4078290	0					
ANR	4078428	ArgumentList	pfx		4078290	1					
ANR	4078429	Argument	pfx		4078290	0					
ANR	4078430	Identifier	pfx		4078290	0					
ANR	4078431	CompoundStatement		28:2:690:725	4078290	8					
ANR	4078432	IdentifierDeclStatement	char * h = r_sys_getenv ( R_SYS_HOME ) ;	2773:2:75364:75399	4078290	0	True				
ANR	4078433	IdentifierDecl	* h = r_sys_getenv ( R_SYS_HOME )		4078290	0					
ANR	4078434	IdentifierDeclType	char *		4078290	0					
ANR	4078435	Identifier	h		4078290	1					
ANR	4078436	AssignmentExpression	* h = r_sys_getenv ( R_SYS_HOME )		4078290	2		=			
ANR	4078437	Identifier	h		4078290	0					
ANR	4078438	CallExpression	r_sys_getenv ( R_SYS_HOME )		4078290	1					
ANR	4078439	Callee	r_sys_getenv		4078290	0					
ANR	4078440	Identifier	r_sys_getenv		4078290	0					
ANR	4078441	ArgumentList	R_SYS_HOME		4078290	1					
ANR	4078442	Argument	R_SYS_HOME		4078290	0					
ANR	4078443	Identifier	R_SYS_HOME		4078290	0					
ANR	4078444	IfStatement	if ( h )		4078290	1					
ANR	4078445	Condition	h	2774:6:75407:75407	4078290	0	True				
ANR	4078446	Identifier	h		4078290	0					
ANR	4078447	CompoundStatement		29:9:736:736	4078290	1					
ANR	4078448	IfStatement	"if ( ! strcmp ( h , ""/"" ) )"		4078290	0					
ANR	4078449	Condition	"! strcmp ( h , ""/"" )"	2775:7:75419:75434	4078290	0	True				
ANR	4078450	UnaryOperationExpression	"! strcmp ( h , ""/"" )"		4078290	0					
ANR	4078451	UnaryOperator	!		4078290	0					
ANR	4078452	CallExpression	"strcmp ( h , ""/"" )"		4078290	1					
ANR	4078453	Callee	strcmp		4078290	0					
ANR	4078454	Identifier	strcmp		4078290	0					
ANR	4078455	ArgumentList	h		4078290	1					
ANR	4078456	Argument	h		4078290	0					
ANR	4078457	Identifier	h		4078290	0					
ANR	4078458	Argument	"""/"""		4078290	1					
ANR	4078459	PrimaryExpression	"""/"""		4078290	0					
ANR	4078460	CompoundStatement		30:25:763:763	4078290	1					
ANR	4078461	ExpressionStatement	"r_sys_setenv ( R_SYS_HOME , ""/data/local/tmp"" )"	2776:4:75443:75487	4078290	0	True				
ANR	4078462	CallExpression	"r_sys_setenv ( R_SYS_HOME , ""/data/local/tmp"" )"		4078290	0					
ANR	4078463	Callee	r_sys_setenv		4078290	0					
ANR	4078464	Identifier	r_sys_setenv		4078290	0					
ANR	4078465	ArgumentList	R_SYS_HOME		4078290	1					
ANR	4078466	Argument	R_SYS_HOME		4078290	0					
ANR	4078467	Identifier	R_SYS_HOME		4078290	0					
ANR	4078468	Argument	"""/data/local/tmp"""		4078290	1					
ANR	4078469	PrimaryExpression	"""/data/local/tmp"""		4078290	0					
ANR	4078470	ExpressionStatement	free ( h )	2778:3:75497:75505	4078290	1	True				
ANR	4078471	CallExpression	free ( h )		4078290	0					
ANR	4078472	Callee	free		4078290	0					
ANR	4078473	Identifier	free		4078290	0					
ANR	4078474	ArgumentList	h		4078290	1					
ANR	4078475	Argument	h		4078290	0					
ANR	4078476	Identifier	h		4078290	0					
ANR	4078477	ExpressionStatement	"SETCB ( ""cmd.times"" , """" , & cb_cmdtimes , ""Run when a command is repeated (number prefix)"" )"	2782:8:75529:75616	4078290	9	True				
ANR	4078478	CallExpression	"SETCB ( ""cmd.times"" , """" , & cb_cmdtimes , ""Run when a command is repeated (number prefix)"" )"		4078290	0					
ANR	4078479	Callee	SETCB		4078290	0					
ANR	4078480	Identifier	SETCB		4078290	0					
ANR	4078481	ArgumentList	"""cmd.times"""		4078290	1					
ANR	4078482	Argument	"""cmd.times"""		4078290	0					
ANR	4078483	PrimaryExpression	"""cmd.times"""		4078290	0					
ANR	4078484	Argument	""""""		4078290	1					
ANR	4078485	PrimaryExpression	""""""		4078290	0					
ANR	4078486	Argument	& cb_cmdtimes		4078290	2					
ANR	4078487	UnaryOperationExpression	& cb_cmdtimes		4078290	0					
ANR	4078488	UnaryOperator	&		4078290	0					
ANR	4078489	Identifier	cb_cmdtimes		4078290	1					
ANR	4078490	Argument	"""Run when a command is repeated (number prefix)"""		4078290	3					
ANR	4078491	PrimaryExpression	"""Run when a command is repeated (number prefix)"""		4078290	0					
ANR	4078492	ExpressionStatement	"SETPREF ( ""pdb.useragent"" , ""Microsoft-Symbol-Server/6.11.0001.402"" , ""User agent for Microsoft symbol server"" )"	2784:1:75630:75738	4078290	10	True				
ANR	4078493	CallExpression	"SETPREF ( ""pdb.useragent"" , ""Microsoft-Symbol-Server/6.11.0001.402"" , ""User agent for Microsoft symbol server"" )"		4078290	0					
ANR	4078494	Callee	SETPREF		4078290	0					
ANR	4078495	Identifier	SETPREF		4078290	0					
ANR	4078496	ArgumentList	"""pdb.useragent"""		4078290	1					
ANR	4078497	Argument	"""pdb.useragent"""		4078290	0					
ANR	4078498	PrimaryExpression	"""pdb.useragent"""		4078290	0					
ANR	4078499	Argument	"""Microsoft-Symbol-Server/6.11.0001.402"""		4078290	1					
ANR	4078500	PrimaryExpression	"""Microsoft-Symbol-Server/6.11.0001.402"""		4078290	0					
ANR	4078501	Argument	"""User agent for Microsoft symbol server"""		4078290	2					
ANR	4078502	PrimaryExpression	"""User agent for Microsoft symbol server"""		4078290	0					
ANR	4078503	ExpressionStatement	"SETPREF ( ""pdb.server"" , ""https://msdl.microsoft.com/download/symbols"" , ""Base URL for Microsoft symbol server"" )"	2785:1:75741:75850	4078290	11	True				
ANR	4078504	CallExpression	"SETPREF ( ""pdb.server"" , ""https://msdl.microsoft.com/download/symbols"" , ""Base URL for Microsoft symbol server"" )"		4078290	0					
ANR	4078505	Callee	SETPREF		4078290	0					
ANR	4078506	Identifier	SETPREF		4078290	0					
ANR	4078507	ArgumentList	"""pdb.server"""		4078290	1					
ANR	4078508	Argument	"""pdb.server"""		4078290	0					
ANR	4078509	PrimaryExpression	"""pdb.server"""		4078290	0					
ANR	4078510	Argument	"""https://msdl.microsoft.com/download/symbols"""		4078290	1					
ANR	4078511	PrimaryExpression	"""https://msdl.microsoft.com/download/symbols"""		4078290	0					
ANR	4078512	Argument	"""Base URL for Microsoft symbol server"""		4078290	2					
ANR	4078513	PrimaryExpression	"""Base URL for Microsoft symbol server"""		4078290	0					
ANR	4078514	CompoundStatement		42:2:1183:1223	4078290	12					
ANR	4078515	IdentifierDeclStatement	char * pdb_path = r_str_home ( R2_HOME_PDB ) ;	2787:2:75857:75897	4078290	0	True				
ANR	4078516	IdentifierDecl	* pdb_path = r_str_home ( R2_HOME_PDB )		4078290	0					
ANR	4078517	IdentifierDeclType	char *		4078290	0					
ANR	4078518	Identifier	pdb_path		4078290	1					
ANR	4078519	AssignmentExpression	* pdb_path = r_str_home ( R2_HOME_PDB )		4078290	2		=			
ANR	4078520	Identifier	pdb_path		4078290	0					
ANR	4078521	CallExpression	r_str_home ( R2_HOME_PDB )		4078290	1					
ANR	4078522	Callee	r_str_home		4078290	0					
ANR	4078523	Identifier	r_str_home		4078290	0					
ANR	4078524	ArgumentList	R2_HOME_PDB		4078290	1					
ANR	4078525	Argument	R2_HOME_PDB		4078290	0					
ANR	4078526	Identifier	R2_HOME_PDB		4078290	0					
ANR	4078527	ExpressionStatement	"SETPREF ( ""pdb.symstore"" , pdb_path , ""Path to downstream symbol store"" )"	2788:2:75901:75970	4078290	1	True				
ANR	4078528	CallExpression	"SETPREF ( ""pdb.symstore"" , pdb_path , ""Path to downstream symbol store"" )"		4078290	0					
ANR	4078529	Callee	SETPREF		4078290	0					
ANR	4078530	Identifier	SETPREF		4078290	0					
ANR	4078531	ArgumentList	"""pdb.symstore"""		4078290	1					
ANR	4078532	Argument	"""pdb.symstore"""		4078290	0					
ANR	4078533	PrimaryExpression	"""pdb.symstore"""		4078290	0					
ANR	4078534	Argument	pdb_path		4078290	1					
ANR	4078535	Identifier	pdb_path		4078290	0					
ANR	4078536	Argument	"""Path to downstream symbol store"""		4078290	2					
ANR	4078537	PrimaryExpression	"""Path to downstream symbol store"""		4078290	0					
ANR	4078538	ExpressionStatement	R_FREE ( pdb_path )	2789:2:75974:75990	4078290	2	True				
ANR	4078539	CallExpression	R_FREE ( pdb_path )		4078290	0					
ANR	4078540	Callee	R_FREE		4078290	0					
ANR	4078541	Identifier	R_FREE		4078290	0					
ANR	4078542	ArgumentList	pdb_path		4078290	1					
ANR	4078543	Argument	pdb_path		4078290	0					
ANR	4078544	Identifier	pdb_path		4078290	0					
ANR	4078545	ExpressionStatement	"SETI ( ""pdb.extract"" , 1 , ""Avoid extract of the pdb file, just download"" )"	2791:1:75996:76067	4078290	13	True				
ANR	4078546	CallExpression	"SETI ( ""pdb.extract"" , 1 , ""Avoid extract of the pdb file, just download"" )"		4078290	0					
ANR	4078547	Callee	SETI		4078290	0					
ANR	4078548	Identifier	SETI		4078290	0					
ANR	4078549	ArgumentList	"""pdb.extract"""		4078290	1					
ANR	4078550	Argument	"""pdb.extract"""		4078290	0					
ANR	4078551	PrimaryExpression	"""pdb.extract"""		4078290	0					
ANR	4078552	Argument	1		4078290	1					
ANR	4078553	PrimaryExpression	1		4078290	0					
ANR	4078554	Argument	"""Avoid extract of the pdb file, just download"""		4078290	2					
ANR	4078555	PrimaryExpression	"""Avoid extract of the pdb file, just download"""		4078290	0					
ANR	4078556	ExpressionStatement	"SETI ( ""pdb.autoload"" , false , ""Automatically load the required pdb files for loaded DLLs"" )"	2792:1:76070:76159	4078290	14	True				
ANR	4078557	CallExpression	"SETI ( ""pdb.autoload"" , false , ""Automatically load the required pdb files for loaded DLLs"" )"		4078290	0					
ANR	4078558	Callee	SETI		4078290	0					
ANR	4078559	Identifier	SETI		4078290	0					
ANR	4078560	ArgumentList	"""pdb.autoload"""		4078290	1					
ANR	4078561	Argument	"""pdb.autoload"""		4078290	0					
ANR	4078562	PrimaryExpression	"""pdb.autoload"""		4078290	0					
ANR	4078563	Argument	false		4078290	1					
ANR	4078564	Identifier	false		4078290	0					
ANR	4078565	Argument	"""Automatically load the required pdb files for loaded DLLs"""		4078290	2					
ANR	4078566	PrimaryExpression	"""Automatically load the required pdb files for loaded DLLs"""		4078290	0					
ANR	4078567	ExpressionStatement	"SETPREF ( ""anal.fcnprefix"" , ""fcn"" , ""Prefix new function names with this"" )"	2795:1:76175:76248	4078290	15	True				
ANR	4078568	CallExpression	"SETPREF ( ""anal.fcnprefix"" , ""fcn"" , ""Prefix new function names with this"" )"		4078290	0					
ANR	4078569	Callee	SETPREF		4078290	0					
ANR	4078570	Identifier	SETPREF		4078290	0					
ANR	4078571	ArgumentList	"""anal.fcnprefix"""		4078290	1					
ANR	4078572	Argument	"""anal.fcnprefix"""		4078290	0					
ANR	4078573	PrimaryExpression	"""anal.fcnprefix"""		4078290	0					
ANR	4078574	Argument	"""fcn"""		4078290	1					
ANR	4078575	PrimaryExpression	"""fcn"""		4078290	0					
ANR	4078576	Argument	"""Prefix new function names with this"""		4078290	2					
ANR	4078577	PrimaryExpression	"""Prefix new function names with this"""		4078290	0					
ANR	4078578	ExpressionStatement	"SETCB ( ""anal.ex"" , ""true"" , & cb_analex , ""Use the anal extension methods from the selected plugin if available"" )"	2796:1:76251:76360	4078290	16	True				
ANR	4078579	CallExpression	"SETCB ( ""anal.ex"" , ""true"" , & cb_analex , ""Use the anal extension methods from the selected plugin if available"" )"		4078290	0					
ANR	4078580	Callee	SETCB		4078290	0					
ANR	4078581	Identifier	SETCB		4078290	0					
ANR	4078582	ArgumentList	"""anal.ex"""		4078290	1					
ANR	4078583	Argument	"""anal.ex"""		4078290	0					
ANR	4078584	PrimaryExpression	"""anal.ex"""		4078290	0					
ANR	4078585	Argument	"""true"""		4078290	1					
ANR	4078586	PrimaryExpression	"""true"""		4078290	0					
ANR	4078587	Argument	& cb_analex		4078290	2					
ANR	4078588	UnaryOperationExpression	& cb_analex		4078290	0					
ANR	4078589	UnaryOperator	&		4078290	0					
ANR	4078590	Identifier	cb_analex		4078290	1					
ANR	4078591	Argument	"""Use the anal extension methods from the selected plugin if available"""		4078290	3					
ANR	4078592	PrimaryExpression	"""Use the anal extension methods from the selected plugin if available"""		4078290	0					
ANR	4078593	ExpressionStatement	"SETCB ( ""anal.verbose"" , ""false"" , & cb_analverbose , ""Show RAnal warnings when analyzing code"" )"	2797:1:76363:76454	4078290	17	True				
ANR	4078594	CallExpression	"SETCB ( ""anal.verbose"" , ""false"" , & cb_analverbose , ""Show RAnal warnings when analyzing code"" )"		4078290	0					
ANR	4078595	Callee	SETCB		4078290	0					
ANR	4078596	Identifier	SETCB		4078290	0					
ANR	4078597	ArgumentList	"""anal.verbose"""		4078290	1					
ANR	4078598	Argument	"""anal.verbose"""		4078290	0					
ANR	4078599	PrimaryExpression	"""anal.verbose"""		4078290	0					
ANR	4078600	Argument	"""false"""		4078290	1					
ANR	4078601	PrimaryExpression	"""false"""		4078290	0					
ANR	4078602	Argument	& cb_analverbose		4078290	2					
ANR	4078603	UnaryOperationExpression	& cb_analverbose		4078290	0					
ANR	4078604	UnaryOperator	&		4078290	0					
ANR	4078605	Identifier	cb_analverbose		4078290	1					
ANR	4078606	Argument	"""Show RAnal warnings when analyzing code"""		4078290	3					
ANR	4078607	PrimaryExpression	"""Show RAnal warnings when analyzing code"""		4078290	0					
ANR	4078608	ExpressionStatement	"SETPREF ( ""anal.a2f"" , ""false"" , ""Use the new WIP analysis algorithm (core/p/a2f), anal.depth ignored atm"" )"	2798:1:76457:76562	4078290	18	True				
ANR	4078609	CallExpression	"SETPREF ( ""anal.a2f"" , ""false"" , ""Use the new WIP analysis algorithm (core/p/a2f), anal.depth ignored atm"" )"		4078290	0					
ANR	4078610	Callee	SETPREF		4078290	0					
ANR	4078611	Identifier	SETPREF		4078290	0					
ANR	4078612	ArgumentList	"""anal.a2f"""		4078290	1					
ANR	4078613	Argument	"""anal.a2f"""		4078290	0					
ANR	4078614	PrimaryExpression	"""anal.a2f"""		4078290	0					
ANR	4078615	Argument	"""false"""		4078290	1					
ANR	4078616	PrimaryExpression	"""false"""		4078290	0					
ANR	4078617	Argument	"""Use the new WIP analysis algorithm (core/p/a2f), anal.depth ignored atm"""		4078290	2					
ANR	4078618	PrimaryExpression	"""Use the new WIP analysis algorithm (core/p/a2f), anal.depth ignored atm"""		4078290	0					
ANR	4078619	ExpressionStatement	"SETCB ( ""anal.roregs"" , ""gp,zero"" , ( RConfigCallback ) & cb_anal_roregs , ""Comma separated list of register names to be readonly"" )"	2799:1:76565:76688	4078290	19	True				
ANR	4078620	CallExpression	"SETCB ( ""anal.roregs"" , ""gp,zero"" , ( RConfigCallback ) & cb_anal_roregs , ""Comma separated list of register names to be readonly"" )"		4078290	0					
ANR	4078621	Callee	SETCB		4078290	0					
ANR	4078622	Identifier	SETCB		4078290	0					
ANR	4078623	ArgumentList	"""anal.roregs"""		4078290	1					
ANR	4078624	Argument	"""anal.roregs"""		4078290	0					
ANR	4078625	PrimaryExpression	"""anal.roregs"""		4078290	0					
ANR	4078626	Argument	"""gp,zero"""		4078290	1					
ANR	4078627	PrimaryExpression	"""gp,zero"""		4078290	0					
ANR	4078628	Argument	( RConfigCallback ) & cb_anal_roregs		4078290	2					
ANR	4078629	CastExpression	( RConfigCallback ) & cb_anal_roregs		4078290	0					
ANR	4078630	CastTarget	RConfigCallback		4078290	0					
ANR	4078631	UnaryOperationExpression	& cb_anal_roregs		4078290	1					
ANR	4078632	UnaryOperator	&		4078290	0					
ANR	4078633	Identifier	cb_anal_roregs		4078290	1					
ANR	4078634	Argument	"""Comma separated list of register names to be readonly"""		4078290	3					
ANR	4078635	PrimaryExpression	"""Comma separated list of register names to be readonly"""		4078290	0					
ANR	4078636	ExpressionStatement	"SETICB ( ""anal.gp"" , 0 , ( RConfigCallback ) & cb_anal_gp , ""Set the value of the GP register (MIPS)"" )"	2800:1:76691:76785	4078290	20	True				
ANR	4078637	CallExpression	"SETICB ( ""anal.gp"" , 0 , ( RConfigCallback ) & cb_anal_gp , ""Set the value of the GP register (MIPS)"" )"		4078290	0					
ANR	4078638	Callee	SETICB		4078290	0					
ANR	4078639	Identifier	SETICB		4078290	0					
ANR	4078640	ArgumentList	"""anal.gp"""		4078290	1					
ANR	4078641	Argument	"""anal.gp"""		4078290	0					
ANR	4078642	PrimaryExpression	"""anal.gp"""		4078290	0					
ANR	4078643	Argument	0		4078290	1					
ANR	4078644	PrimaryExpression	0		4078290	0					
ANR	4078645	Argument	( RConfigCallback ) & cb_anal_gp		4078290	2					
ANR	4078646	CastExpression	( RConfigCallback ) & cb_anal_gp		4078290	0					
ANR	4078647	CastTarget	RConfigCallback		4078290	0					
ANR	4078648	UnaryOperationExpression	& cb_anal_gp		4078290	1					
ANR	4078649	UnaryOperator	&		4078290	0					
ANR	4078650	Identifier	cb_anal_gp		4078290	1					
ANR	4078651	Argument	"""Set the value of the GP register (MIPS)"""		4078290	3					
ANR	4078652	PrimaryExpression	"""Set the value of the GP register (MIPS)"""		4078290	0					
ANR	4078653	ExpressionStatement	"SETPREF ( ""anal.gpfixed"" , ""true"" , ""Set gp register to anal.gp before emulating each instruction in aae"" )"	2801:1:76788:76891	4078290	21	True				
ANR	4078654	CallExpression	"SETPREF ( ""anal.gpfixed"" , ""true"" , ""Set gp register to anal.gp before emulating each instruction in aae"" )"		4078290	0					
ANR	4078655	Callee	SETPREF		4078290	0					
ANR	4078656	Identifier	SETPREF		4078290	0					
ANR	4078657	ArgumentList	"""anal.gpfixed"""		4078290	1					
ANR	4078658	Argument	"""anal.gpfixed"""		4078290	0					
ANR	4078659	PrimaryExpression	"""anal.gpfixed"""		4078290	0					
ANR	4078660	Argument	"""true"""		4078290	1					
ANR	4078661	PrimaryExpression	"""true"""		4078290	0					
ANR	4078662	Argument	"""Set gp register to anal.gp before emulating each instruction in aae"""		4078290	2					
ANR	4078663	PrimaryExpression	"""Set gp register to anal.gp before emulating each instruction in aae"""		4078290	0					
ANR	4078664	ExpressionStatement	"SETCB ( ""anal.limits"" , ""false"" , ( RConfigCallback ) & cb_anal_limits , ""Restrict analysis to address range [anal.from:anal.to]"" )"	2802:1:76894:77016	4078290	22	True				
ANR	4078665	CallExpression	"SETCB ( ""anal.limits"" , ""false"" , ( RConfigCallback ) & cb_anal_limits , ""Restrict analysis to address range [anal.from:anal.to]"" )"		4078290	0					
ANR	4078666	Callee	SETCB		4078290	0					
ANR	4078667	Identifier	SETCB		4078290	0					
ANR	4078668	ArgumentList	"""anal.limits"""		4078290	1					
ANR	4078669	Argument	"""anal.limits"""		4078290	0					
ANR	4078670	PrimaryExpression	"""anal.limits"""		4078290	0					
ANR	4078671	Argument	"""false"""		4078290	1					
ANR	4078672	PrimaryExpression	"""false"""		4078290	0					
ANR	4078673	Argument	( RConfigCallback ) & cb_anal_limits		4078290	2					
ANR	4078674	CastExpression	( RConfigCallback ) & cb_anal_limits		4078290	0					
ANR	4078675	CastTarget	RConfigCallback		4078290	0					
ANR	4078676	UnaryOperationExpression	& cb_anal_limits		4078290	1					
ANR	4078677	UnaryOperator	&		4078290	0					
ANR	4078678	Identifier	cb_anal_limits		4078290	1					
ANR	4078679	Argument	"""Restrict analysis to address range [anal.from:anal.to]"""		4078290	3					
ANR	4078680	PrimaryExpression	"""Restrict analysis to address range [anal.from:anal.to]"""		4078290	0					
ANR	4078681	ExpressionStatement	"SETCB ( ""anal.rnr"" , ""false"" , ( RConfigCallback ) & cb_anal_rnr , ""Recursive no return checks (EXPERIMENTAL)"" )"	2803:1:77019:77122	4078290	23	True				
ANR	4078682	CallExpression	"SETCB ( ""anal.rnr"" , ""false"" , ( RConfigCallback ) & cb_anal_rnr , ""Recursive no return checks (EXPERIMENTAL)"" )"		4078290	0					
ANR	4078683	Callee	SETCB		4078290	0					
ANR	4078684	Identifier	SETCB		4078290	0					
ANR	4078685	ArgumentList	"""anal.rnr"""		4078290	1					
ANR	4078686	Argument	"""anal.rnr"""		4078290	0					
ANR	4078687	PrimaryExpression	"""anal.rnr"""		4078290	0					
ANR	4078688	Argument	"""false"""		4078290	1					
ANR	4078689	PrimaryExpression	"""false"""		4078290	0					
ANR	4078690	Argument	( RConfigCallback ) & cb_anal_rnr		4078290	2					
ANR	4078691	CastExpression	( RConfigCallback ) & cb_anal_rnr		4078290	0					
ANR	4078692	CastTarget	RConfigCallback		4078290	0					
ANR	4078693	UnaryOperationExpression	& cb_anal_rnr		4078290	1					
ANR	4078694	UnaryOperator	&		4078290	0					
ANR	4078695	Identifier	cb_anal_rnr		4078290	1					
ANR	4078696	Argument	"""Recursive no return checks (EXPERIMENTAL)"""		4078290	3					
ANR	4078697	PrimaryExpression	"""Recursive no return checks (EXPERIMENTAL)"""		4078290	0					
ANR	4078698	ExpressionStatement	"SETCB ( ""anal.limits"" , ""false"" , ( RConfigCallback ) & cb_anal_limits , ""Restrict analysis to address range [anal.from:anal.to]"" )"	2804:1:77125:77247	4078290	24	True				
ANR	4078699	CallExpression	"SETCB ( ""anal.limits"" , ""false"" , ( RConfigCallback ) & cb_anal_limits , ""Restrict analysis to address range [anal.from:anal.to]"" )"		4078290	0					
ANR	4078700	Callee	SETCB		4078290	0					
ANR	4078701	Identifier	SETCB		4078290	0					
ANR	4078702	ArgumentList	"""anal.limits"""		4078290	1					
ANR	4078703	Argument	"""anal.limits"""		4078290	0					
ANR	4078704	PrimaryExpression	"""anal.limits"""		4078290	0					
ANR	4078705	Argument	"""false"""		4078290	1					
ANR	4078706	PrimaryExpression	"""false"""		4078290	0					
ANR	4078707	Argument	( RConfigCallback ) & cb_anal_limits		4078290	2					
ANR	4078708	CastExpression	( RConfigCallback ) & cb_anal_limits		4078290	0					
ANR	4078709	CastTarget	RConfigCallback		4078290	0					
ANR	4078710	UnaryOperationExpression	& cb_anal_limits		4078290	1					
ANR	4078711	UnaryOperator	&		4078290	0					
ANR	4078712	Identifier	cb_anal_limits		4078290	1					
ANR	4078713	Argument	"""Restrict analysis to address range [anal.from:anal.to]"""		4078290	3					
ANR	4078714	PrimaryExpression	"""Restrict analysis to address range [anal.from:anal.to]"""		4078290	0					
ANR	4078715	ExpressionStatement	"SETICB ( ""anal.from"" , - 1 , ( RConfigCallback ) & cb_anal_from , ""Lower limit on the address range for analysis"" )"	2805:1:77250:77355	4078290	25	True				
ANR	4078716	CallExpression	"SETICB ( ""anal.from"" , - 1 , ( RConfigCallback ) & cb_anal_from , ""Lower limit on the address range for analysis"" )"		4078290	0					
ANR	4078717	Callee	SETICB		4078290	0					
ANR	4078718	Identifier	SETICB		4078290	0					
ANR	4078719	ArgumentList	"""anal.from"""		4078290	1					
ANR	4078720	Argument	"""anal.from"""		4078290	0					
ANR	4078721	PrimaryExpression	"""anal.from"""		4078290	0					
ANR	4078722	Argument	- 1		4078290	1					
ANR	4078723	UnaryOperationExpression	- 1		4078290	0					
ANR	4078724	UnaryOperator	-		4078290	0					
ANR	4078725	PrimaryExpression	1		4078290	1					
ANR	4078726	Argument	( RConfigCallback ) & cb_anal_from		4078290	2					
ANR	4078727	CastExpression	( RConfigCallback ) & cb_anal_from		4078290	0					
ANR	4078728	CastTarget	RConfigCallback		4078290	0					
ANR	4078729	UnaryOperationExpression	& cb_anal_from		4078290	1					
ANR	4078730	UnaryOperator	&		4078290	0					
ANR	4078731	Identifier	cb_anal_from		4078290	1					
ANR	4078732	Argument	"""Lower limit on the address range for analysis"""		4078290	3					
ANR	4078733	PrimaryExpression	"""Lower limit on the address range for analysis"""		4078290	0					
ANR	4078734	ExpressionStatement	"SETICB ( ""anal.to"" , - 1 , ( RConfigCallback ) & cb_anal_from , ""Upper limit on the address range for analysis"" )"	2806:1:77358:77461	4078290	26	True				
ANR	4078735	CallExpression	"SETICB ( ""anal.to"" , - 1 , ( RConfigCallback ) & cb_anal_from , ""Upper limit on the address range for analysis"" )"		4078290	0					
ANR	4078736	Callee	SETICB		4078290	0					
ANR	4078737	Identifier	SETICB		4078290	0					
ANR	4078738	ArgumentList	"""anal.to"""		4078290	1					
ANR	4078739	Argument	"""anal.to"""		4078290	0					
ANR	4078740	PrimaryExpression	"""anal.to"""		4078290	0					
ANR	4078741	Argument	- 1		4078290	1					
ANR	4078742	UnaryOperationExpression	- 1		4078290	0					
ANR	4078743	UnaryOperator	-		4078290	0					
ANR	4078744	PrimaryExpression	1		4078290	1					
ANR	4078745	Argument	( RConfigCallback ) & cb_anal_from		4078290	2					
ANR	4078746	CastExpression	( RConfigCallback ) & cb_anal_from		4078290	0					
ANR	4078747	CastTarget	RConfigCallback		4078290	0					
ANR	4078748	UnaryOperationExpression	& cb_anal_from		4078290	1					
ANR	4078749	UnaryOperator	&		4078290	0					
ANR	4078750	Identifier	cb_anal_from		4078290	1					
ANR	4078751	Argument	"""Upper limit on the address range for analysis"""		4078290	3					
ANR	4078752	PrimaryExpression	"""Upper limit on the address range for analysis"""		4078290	0					
ANR	4078753	ExpressionStatement	"n = NODECB ( ""anal.in"" , ""io.maps.x"" , & cb_searchin )"	2807:1:77464:77513	4078290	27	True				
ANR	4078754	AssignmentExpression	"n = NODECB ( ""anal.in"" , ""io.maps.x"" , & cb_searchin )"		4078290	0		=			
ANR	4078755	Identifier	n		4078290	0					
ANR	4078756	CallExpression	"NODECB ( ""anal.in"" , ""io.maps.x"" , & cb_searchin )"		4078290	1					
ANR	4078757	Callee	NODECB		4078290	0					
ANR	4078758	Identifier	NODECB		4078290	0					
ANR	4078759	ArgumentList	"""anal.in"""		4078290	1					
ANR	4078760	Argument	"""anal.in"""		4078290	0					
ANR	4078761	PrimaryExpression	"""anal.in"""		4078290	0					
ANR	4078762	Argument	"""io.maps.x"""		4078290	1					
ANR	4078763	PrimaryExpression	"""io.maps.x"""		4078290	0					
ANR	4078764	Argument	& cb_searchin		4078290	2					
ANR	4078765	UnaryOperationExpression	& cb_searchin		4078290	0					
ANR	4078766	UnaryOperator	&		4078290	0					
ANR	4078767	Identifier	cb_searchin		4078290	1					
ANR	4078768	ExpressionStatement	"SETDESC ( n , ""Specify search boundaries for analysis"" )"	2808:1:77516:77569	4078290	28	True				
ANR	4078769	CallExpression	"SETDESC ( n , ""Specify search boundaries for analysis"" )"		4078290	0					
ANR	4078770	Callee	SETDESC		4078290	0					
ANR	4078771	Identifier	SETDESC		4078290	0					
ANR	4078772	ArgumentList	n		4078290	1					
ANR	4078773	Argument	n		4078290	0					
ANR	4078774	Identifier	n		4078290	0					
ANR	4078775	Argument	"""Specify search boundaries for analysis"""		4078290	1					
ANR	4078776	PrimaryExpression	"""Specify search boundaries for analysis"""		4078290	0					
ANR	4078777	ExpressionStatement	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.segment"" , ""bin.segments"" , ""bin.segments.x"" , ""bin.segments.r"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"	2809:1:77572:78094	4078290	29	True				
ANR	4078778	CallExpression	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.segment"" , ""bin.segments"" , ""bin.segments.x"" , ""bin.segments.r"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"		4078290	0					
ANR	4078779	Callee	SETOPTIONS		4078290	0					
ANR	4078780	Identifier	SETOPTIONS		4078290	0					
ANR	4078781	ArgumentList	n		4078290	1					
ANR	4078782	Argument	n		4078290	0					
ANR	4078783	Identifier	n		4078290	0					
ANR	4078784	Argument	"""raw"""		4078290	1					
ANR	4078785	PrimaryExpression	"""raw"""		4078290	0					
ANR	4078786	Argument	"""block"""		4078290	2					
ANR	4078787	PrimaryExpression	"""block"""		4078290	0					
ANR	4078788	Argument	"""bin.segment"""		4078290	3					
ANR	4078789	PrimaryExpression	"""bin.segment"""		4078290	0					
ANR	4078790	Argument	"""bin.segments"""		4078290	4					
ANR	4078791	PrimaryExpression	"""bin.segments"""		4078290	0					
ANR	4078792	Argument	"""bin.segments.x"""		4078290	5					
ANR	4078793	PrimaryExpression	"""bin.segments.x"""		4078290	0					
ANR	4078794	Argument	"""bin.segments.r"""		4078290	6					
ANR	4078795	PrimaryExpression	"""bin.segments.r"""		4078290	0					
ANR	4078796	Argument	"""bin.section"""		4078290	7					
ANR	4078797	PrimaryExpression	"""bin.section"""		4078290	0					
ANR	4078798	Argument	"""bin.sections"""		4078290	8					
ANR	4078799	PrimaryExpression	"""bin.sections"""		4078290	0					
ANR	4078800	Argument	"""bin.sections.rwx"""		4078290	9					
ANR	4078801	PrimaryExpression	"""bin.sections.rwx"""		4078290	0					
ANR	4078802	Argument	"""bin.sections.r"""		4078290	10					
ANR	4078803	PrimaryExpression	"""bin.sections.r"""		4078290	0					
ANR	4078804	Argument	"""bin.sections.rw"""		4078290	11					
ANR	4078805	PrimaryExpression	"""bin.sections.rw"""		4078290	0					
ANR	4078806	Argument	"""bin.sections.rx"""		4078290	12					
ANR	4078807	PrimaryExpression	"""bin.sections.rx"""		4078290	0					
ANR	4078808	Argument	"""bin.sections.wx"""		4078290	13					
ANR	4078809	PrimaryExpression	"""bin.sections.wx"""		4078290	0					
ANR	4078810	Argument	"""bin.sections.x"""		4078290	14					
ANR	4078811	PrimaryExpression	"""bin.sections.x"""		4078290	0					
ANR	4078812	Argument	"""io.map"""		4078290	15					
ANR	4078813	PrimaryExpression	"""io.map"""		4078290	0					
ANR	4078814	Argument	"""io.maps"""		4078290	16					
ANR	4078815	PrimaryExpression	"""io.maps"""		4078290	0					
ANR	4078816	Argument	"""io.maps.rwx"""		4078290	17					
ANR	4078817	PrimaryExpression	"""io.maps.rwx"""		4078290	0					
ANR	4078818	Argument	"""io.maps.r"""		4078290	18					
ANR	4078819	PrimaryExpression	"""io.maps.r"""		4078290	0					
ANR	4078820	Argument	"""io.maps.rw"""		4078290	19					
ANR	4078821	PrimaryExpression	"""io.maps.rw"""		4078290	0					
ANR	4078822	Argument	"""io.maps.rx"""		4078290	20					
ANR	4078823	PrimaryExpression	"""io.maps.rx"""		4078290	0					
ANR	4078824	Argument	"""io.maps.wx"""		4078290	21					
ANR	4078825	PrimaryExpression	"""io.maps.wx"""		4078290	0					
ANR	4078826	Argument	"""io.maps.x"""		4078290	22					
ANR	4078827	PrimaryExpression	"""io.maps.x"""		4078290	0					
ANR	4078828	Argument	"""dbg.stack"""		4078290	23					
ANR	4078829	PrimaryExpression	"""dbg.stack"""		4078290	0					
ANR	4078830	Argument	"""dbg.heap"""		4078290	24					
ANR	4078831	PrimaryExpression	"""dbg.heap"""		4078290	0					
ANR	4078832	Argument	"""dbg.map"""		4078290	25					
ANR	4078833	PrimaryExpression	"""dbg.map"""		4078290	0					
ANR	4078834	Argument	"""dbg.maps"""		4078290	26					
ANR	4078835	PrimaryExpression	"""dbg.maps"""		4078290	0					
ANR	4078836	Argument	"""dbg.maps.rwx"""		4078290	27					
ANR	4078837	PrimaryExpression	"""dbg.maps.rwx"""		4078290	0					
ANR	4078838	Argument	"""dbg.maps.r"""		4078290	28					
ANR	4078839	PrimaryExpression	"""dbg.maps.r"""		4078290	0					
ANR	4078840	Argument	"""dbg.maps.rw"""		4078290	29					
ANR	4078841	PrimaryExpression	"""dbg.maps.rw"""		4078290	0					
ANR	4078842	Argument	"""dbg.maps.rx"""		4078290	30					
ANR	4078843	PrimaryExpression	"""dbg.maps.rx"""		4078290	0					
ANR	4078844	Argument	"""dbg.maps.wx"""		4078290	31					
ANR	4078845	PrimaryExpression	"""dbg.maps.wx"""		4078290	0					
ANR	4078846	Argument	"""dbg.maps.x"""		4078290	32					
ANR	4078847	PrimaryExpression	"""dbg.maps.x"""		4078290	0					
ANR	4078848	Argument	"""anal.fcn"""		4078290	33					
ANR	4078849	PrimaryExpression	"""anal.fcn"""		4078290	0					
ANR	4078850	Argument	"""anal.bb"""		4078290	34					
ANR	4078851	PrimaryExpression	"""anal.bb"""		4078290	0					
ANR	4078852	Argument	NULL		4078290	35					
ANR	4078853	Identifier	NULL		4078290	0					
ANR	4078854	ExpressionStatement	"SETI ( ""anal.timeout"" , 0 , ""Stop analyzing after a couple of seconds"" )"	2816:1:78097:78165	4078290	30	True				
ANR	4078855	CallExpression	"SETI ( ""anal.timeout"" , 0 , ""Stop analyzing after a couple of seconds"" )"		4078290	0					
ANR	4078856	Callee	SETI		4078290	0					
ANR	4078857	Identifier	SETI		4078290	0					
ANR	4078858	ArgumentList	"""anal.timeout"""		4078290	1					
ANR	4078859	Argument	"""anal.timeout"""		4078290	0					
ANR	4078860	PrimaryExpression	"""anal.timeout"""		4078290	0					
ANR	4078861	Argument	0		4078290	1					
ANR	4078862	PrimaryExpression	0		4078290	0					
ANR	4078863	Argument	"""Stop analyzing after a couple of seconds"""		4078290	2					
ANR	4078864	PrimaryExpression	"""Stop analyzing after a couple of seconds"""		4078290	0					
ANR	4078865	ExpressionStatement	"SETCB ( ""anal.armthumb"" , ""false"" , & cb_analarmthumb , ""aae computes arm/thumb changes (lot of false positives ahead)"" )"	2818:1:78169:78284	4078290	31	True				
ANR	4078866	CallExpression	"SETCB ( ""anal.armthumb"" , ""false"" , & cb_analarmthumb , ""aae computes arm/thumb changes (lot of false positives ahead)"" )"		4078290	0					
ANR	4078867	Callee	SETCB		4078290	0					
ANR	4078868	Identifier	SETCB		4078290	0					
ANR	4078869	ArgumentList	"""anal.armthumb"""		4078290	1					
ANR	4078870	Argument	"""anal.armthumb"""		4078290	0					
ANR	4078871	PrimaryExpression	"""anal.armthumb"""		4078290	0					
ANR	4078872	Argument	"""false"""		4078290	1					
ANR	4078873	PrimaryExpression	"""false"""		4078290	0					
ANR	4078874	Argument	& cb_analarmthumb		4078290	2					
ANR	4078875	UnaryOperationExpression	& cb_analarmthumb		4078290	0					
ANR	4078876	UnaryOperator	&		4078290	0					
ANR	4078877	Identifier	cb_analarmthumb		4078290	1					
ANR	4078878	Argument	"""aae computes arm/thumb changes (lot of false positives ahead)"""		4078290	3					
ANR	4078879	PrimaryExpression	"""aae computes arm/thumb changes (lot of false positives ahead)"""		4078290	0					
ANR	4078880	ExpressionStatement	"SETCB ( ""anal.jmp.eob"" , ""false"" , & cb_analeobjmp , ""jmp is end of block mode (option)"" )"	2819:1:78287:78371	4078290	32	True				
ANR	4078881	CallExpression	"SETCB ( ""anal.jmp.eob"" , ""false"" , & cb_analeobjmp , ""jmp is end of block mode (option)"" )"		4078290	0					
ANR	4078882	Callee	SETCB		4078290	0					
ANR	4078883	Identifier	SETCB		4078290	0					
ANR	4078884	ArgumentList	"""anal.jmp.eob"""		4078290	1					
ANR	4078885	Argument	"""anal.jmp.eob"""		4078290	0					
ANR	4078886	PrimaryExpression	"""anal.jmp.eob"""		4078290	0					
ANR	4078887	Argument	"""false"""		4078290	1					
ANR	4078888	PrimaryExpression	"""false"""		4078290	0					
ANR	4078889	Argument	& cb_analeobjmp		4078290	2					
ANR	4078890	UnaryOperationExpression	& cb_analeobjmp		4078290	0					
ANR	4078891	UnaryOperator	&		4078290	0					
ANR	4078892	Identifier	cb_analeobjmp		4078290	1					
ANR	4078893	Argument	"""jmp is end of block mode (option)"""		4078290	3					
ANR	4078894	PrimaryExpression	"""jmp is end of block mode (option)"""		4078290	0					
ANR	4078895	ExpressionStatement	"SETCB ( ""anal.jmp.after"" , ""true"" , & cb_analafterjmp , ""Continue analysis after jmp/ujmp"" )"	2820:1:78374:78460	4078290	33	True				
ANR	4078896	CallExpression	"SETCB ( ""anal.jmp.after"" , ""true"" , & cb_analafterjmp , ""Continue analysis after jmp/ujmp"" )"		4078290	0					
ANR	4078897	Callee	SETCB		4078290	0					
ANR	4078898	Identifier	SETCB		4078290	0					
ANR	4078899	ArgumentList	"""anal.jmp.after"""		4078290	1					
ANR	4078900	Argument	"""anal.jmp.after"""		4078290	0					
ANR	4078901	PrimaryExpression	"""anal.jmp.after"""		4078290	0					
ANR	4078902	Argument	"""true"""		4078290	1					
ANR	4078903	PrimaryExpression	"""true"""		4078290	0					
ANR	4078904	Argument	& cb_analafterjmp		4078290	2					
ANR	4078905	UnaryOperationExpression	& cb_analafterjmp		4078290	0					
ANR	4078906	UnaryOperator	&		4078290	0					
ANR	4078907	Identifier	cb_analafterjmp		4078290	1					
ANR	4078908	Argument	"""Continue analysis after jmp/ujmp"""		4078290	3					
ANR	4078909	PrimaryExpression	"""Continue analysis after jmp/ujmp"""		4078290	0					
ANR	4078910	ExpressionStatement	"SETCB ( ""anal.endsize"" , ""true"" , & cb_anal_endsize , ""Adjust function size at the end of the analysis (known to be buggy)"" )"	2821:1:78463:78582	4078290	34	True				
ANR	4078911	CallExpression	"SETCB ( ""anal.endsize"" , ""true"" , & cb_anal_endsize , ""Adjust function size at the end of the analysis (known to be buggy)"" )"		4078290	0					
ANR	4078912	Callee	SETCB		4078290	0					
ANR	4078913	Identifier	SETCB		4078290	0					
ANR	4078914	ArgumentList	"""anal.endsize"""		4078290	1					
ANR	4078915	Argument	"""anal.endsize"""		4078290	0					
ANR	4078916	PrimaryExpression	"""anal.endsize"""		4078290	0					
ANR	4078917	Argument	"""true"""		4078290	1					
ANR	4078918	PrimaryExpression	"""true"""		4078290	0					
ANR	4078919	Argument	& cb_anal_endsize		4078290	2					
ANR	4078920	UnaryOperationExpression	& cb_anal_endsize		4078290	0					
ANR	4078921	UnaryOperator	&		4078290	0					
ANR	4078922	Identifier	cb_anal_endsize		4078290	1					
ANR	4078923	Argument	"""Adjust function size at the end of the analysis (known to be buggy)"""		4078290	3					
ANR	4078924	PrimaryExpression	"""Adjust function size at the end of the analysis (known to be buggy)"""		4078290	0					
ANR	4078925	ExpressionStatement	"SETICB ( ""anal.depth"" , 64 , & cb_analdepth , ""Max depth at code analysis"" )"	2822:1:78585:78655	4078290	35	True				
ANR	4078926	CallExpression	"SETICB ( ""anal.depth"" , 64 , & cb_analdepth , ""Max depth at code analysis"" )"		4078290	0					
ANR	4078927	Callee	SETICB		4078290	0					
ANR	4078928	Identifier	SETICB		4078290	0					
ANR	4078929	ArgumentList	"""anal.depth"""		4078290	1					
ANR	4078930	Argument	"""anal.depth"""		4078290	0					
ANR	4078931	PrimaryExpression	"""anal.depth"""		4078290	0					
ANR	4078932	Argument	64		4078290	1					
ANR	4078933	PrimaryExpression	64		4078290	0					
ANR	4078934	Argument	& cb_analdepth		4078290	2					
ANR	4078935	UnaryOperationExpression	& cb_analdepth		4078290	0					
ANR	4078936	UnaryOperator	&		4078290	0					
ANR	4078937	Identifier	cb_analdepth		4078290	1					
ANR	4078938	Argument	"""Max depth at code analysis"""		4078290	3					
ANR	4078939	PrimaryExpression	"""Max depth at code analysis"""		4078290	0					
ANR	4078940	ExpressionStatement	"SETICB ( ""anal.graph_depth"" , 256 , & cb_analgraphdepth , ""Max depth for path search"" )"	2823:1:78710:78791	4078290	36	True				
ANR	4078941	CallExpression	"SETICB ( ""anal.graph_depth"" , 256 , & cb_analgraphdepth , ""Max depth for path search"" )"		4078290	0					
ANR	4078942	Callee	SETICB		4078290	0					
ANR	4078943	Identifier	SETICB		4078290	0					
ANR	4078944	ArgumentList	"""anal.graph_depth"""		4078290	1					
ANR	4078945	Argument	"""anal.graph_depth"""		4078290	0					
ANR	4078946	PrimaryExpression	"""anal.graph_depth"""		4078290	0					
ANR	4078947	Argument	256		4078290	1					
ANR	4078948	PrimaryExpression	256		4078290	0					
ANR	4078949	Argument	& cb_analgraphdepth		4078290	2					
ANR	4078950	UnaryOperationExpression	& cb_analgraphdepth		4078290	0					
ANR	4078951	UnaryOperator	&		4078290	0					
ANR	4078952	Identifier	cb_analgraphdepth		4078290	1					
ANR	4078953	Argument	"""Max depth for path search"""		4078290	3					
ANR	4078954	PrimaryExpression	"""Max depth for path search"""		4078290	0					
ANR	4078955	ExpressionStatement	"SETICB ( ""anal.sleep"" , 0 , & cb_analsleep , ""Sleep N usecs every so often during analysis. Avoid 100% CPU usage"" )"	2824:1:78794:78903	4078290	37	True				
ANR	4078956	CallExpression	"SETICB ( ""anal.sleep"" , 0 , & cb_analsleep , ""Sleep N usecs every so often during analysis. Avoid 100% CPU usage"" )"		4078290	0					
ANR	4078957	Callee	SETICB		4078290	0					
ANR	4078958	Identifier	SETICB		4078290	0					
ANR	4078959	ArgumentList	"""anal.sleep"""		4078290	1					
ANR	4078960	Argument	"""anal.sleep"""		4078290	0					
ANR	4078961	PrimaryExpression	"""anal.sleep"""		4078290	0					
ANR	4078962	Argument	0		4078290	1					
ANR	4078963	PrimaryExpression	0		4078290	0					
ANR	4078964	Argument	& cb_analsleep		4078290	2					
ANR	4078965	UnaryOperationExpression	& cb_analsleep		4078290	0					
ANR	4078966	UnaryOperator	&		4078290	0					
ANR	4078967	Identifier	cb_analsleep		4078290	1					
ANR	4078968	Argument	"""Sleep N usecs every so often during analysis. Avoid 100% CPU usage"""		4078290	3					
ANR	4078969	PrimaryExpression	"""Sleep N usecs every so often during analysis. Avoid 100% CPU usage"""		4078290	0					
ANR	4078970	ExpressionStatement	"SETCB ( ""anal.ignbithints"" , ""false"" , & cb_anal_ignbithints , ""Ignore the ahb hints (only obey asm.bits)"" )"	2825:1:78906:79008	4078290	38	True				
ANR	4078971	CallExpression	"SETCB ( ""anal.ignbithints"" , ""false"" , & cb_anal_ignbithints , ""Ignore the ahb hints (only obey asm.bits)"" )"		4078290	0					
ANR	4078972	Callee	SETCB		4078290	0					
ANR	4078973	Identifier	SETCB		4078290	0					
ANR	4078974	ArgumentList	"""anal.ignbithints"""		4078290	1					
ANR	4078975	Argument	"""anal.ignbithints"""		4078290	0					
ANR	4078976	PrimaryExpression	"""anal.ignbithints"""		4078290	0					
ANR	4078977	Argument	"""false"""		4078290	1					
ANR	4078978	PrimaryExpression	"""false"""		4078290	0					
ANR	4078979	Argument	& cb_anal_ignbithints		4078290	2					
ANR	4078980	UnaryOperationExpression	& cb_anal_ignbithints		4078290	0					
ANR	4078981	UnaryOperator	&		4078290	0					
ANR	4078982	Identifier	cb_anal_ignbithints		4078290	1					
ANR	4078983	Argument	"""Ignore the ahb hints (only obey asm.bits)"""		4078290	3					
ANR	4078984	PrimaryExpression	"""Ignore the ahb hints (only obey asm.bits)"""		4078290	0					
ANR	4078985	ExpressionStatement	"SETPREF ( ""anal.calls"" , ""false"" , ""Make basic af analysis walk into calls"" )"	2826:1:79011:79084	4078290	39	True				
ANR	4078986	CallExpression	"SETPREF ( ""anal.calls"" , ""false"" , ""Make basic af analysis walk into calls"" )"		4078290	0					
ANR	4078987	Callee	SETPREF		4078290	0					
ANR	4078988	Identifier	SETPREF		4078290	0					
ANR	4078989	ArgumentList	"""anal.calls"""		4078290	1					
ANR	4078990	Argument	"""anal.calls"""		4078290	0					
ANR	4078991	PrimaryExpression	"""anal.calls"""		4078290	0					
ANR	4078992	Argument	"""false"""		4078290	1					
ANR	4078993	PrimaryExpression	"""false"""		4078290	0					
ANR	4078994	Argument	"""Make basic af analysis walk into calls"""		4078290	2					
ANR	4078995	PrimaryExpression	"""Make basic af analysis walk into calls"""		4078290	0					
ANR	4078996	ExpressionStatement	"SETPREF ( ""anal.autoname"" , ""false"" , ""Speculatively set a name for the functions, may result in some false positives"" )"	2827:1:79087:79203	4078290	40	True				
ANR	4078997	CallExpression	"SETPREF ( ""anal.autoname"" , ""false"" , ""Speculatively set a name for the functions, may result in some false positives"" )"		4078290	0					
ANR	4078998	Callee	SETPREF		4078290	0					
ANR	4078999	Identifier	SETPREF		4078290	0					
ANR	4079000	ArgumentList	"""anal.autoname"""		4078290	1					
ANR	4079001	Argument	"""anal.autoname"""		4078290	0					
ANR	4079002	PrimaryExpression	"""anal.autoname"""		4078290	0					
ANR	4079003	Argument	"""false"""		4078290	1					
ANR	4079004	PrimaryExpression	"""false"""		4078290	0					
ANR	4079005	Argument	"""Speculatively set a name for the functions, may result in some false positives"""		4078290	2					
ANR	4079006	PrimaryExpression	"""Speculatively set a name for the functions, may result in some false positives"""		4078290	0					
ANR	4079007	ExpressionStatement	"SETPREF ( ""anal.hasnext"" , ""false"" , ""Continue analysis after each function"" )"	2828:1:79206:79280	4078290	41	True				
ANR	4079008	CallExpression	"SETPREF ( ""anal.hasnext"" , ""false"" , ""Continue analysis after each function"" )"		4078290	0					
ANR	4079009	Callee	SETPREF		4078290	0					
ANR	4079010	Identifier	SETPREF		4078290	0					
ANR	4079011	ArgumentList	"""anal.hasnext"""		4078290	1					
ANR	4079012	Argument	"""anal.hasnext"""		4078290	0					
ANR	4079013	PrimaryExpression	"""anal.hasnext"""		4078290	0					
ANR	4079014	Argument	"""false"""		4078290	1					
ANR	4079015	PrimaryExpression	"""false"""		4078290	0					
ANR	4079016	Argument	"""Continue analysis after each function"""		4078290	2					
ANR	4079017	PrimaryExpression	"""Continue analysis after each function"""		4078290	0					
ANR	4079018	ExpressionStatement	"SETPREF ( ""anal.esil"" , ""false"" , ""Use the new ESIL code analysis"" )"	2829:1:79283:79347	4078290	42	True				
ANR	4079019	CallExpression	"SETPREF ( ""anal.esil"" , ""false"" , ""Use the new ESIL code analysis"" )"		4078290	0					
ANR	4079020	Callee	SETPREF		4078290	0					
ANR	4079021	Identifier	SETPREF		4078290	0					
ANR	4079022	ArgumentList	"""anal.esil"""		4078290	1					
ANR	4079023	Argument	"""anal.esil"""		4078290	0					
ANR	4079024	PrimaryExpression	"""anal.esil"""		4078290	0					
ANR	4079025	Argument	"""false"""		4078290	1					
ANR	4079026	PrimaryExpression	"""false"""		4078290	0					
ANR	4079027	Argument	"""Use the new ESIL code analysis"""		4078290	2					
ANR	4079028	PrimaryExpression	"""Use the new ESIL code analysis"""		4078290	0					
ANR	4079029	ExpressionStatement	"SETCB ( ""anal.strings"" , ""false"" , & cb_analstrings , ""Identify and register strings during analysis (aar only)"" )"	2830:1:79350:79458	4078290	43	True				
ANR	4079030	CallExpression	"SETCB ( ""anal.strings"" , ""false"" , & cb_analstrings , ""Identify and register strings during analysis (aar only)"" )"		4078290	0					
ANR	4079031	Callee	SETCB		4078290	0					
ANR	4079032	Identifier	SETCB		4078290	0					
ANR	4079033	ArgumentList	"""anal.strings"""		4078290	1					
ANR	4079034	Argument	"""anal.strings"""		4078290	0					
ANR	4079035	PrimaryExpression	"""anal.strings"""		4078290	0					
ANR	4079036	Argument	"""false"""		4078290	1					
ANR	4079037	PrimaryExpression	"""false"""		4078290	0					
ANR	4079038	Argument	& cb_analstrings		4078290	2					
ANR	4079039	UnaryOperationExpression	& cb_analstrings		4078290	0					
ANR	4079040	UnaryOperator	&		4078290	0					
ANR	4079041	Identifier	cb_analstrings		4078290	1					
ANR	4079042	Argument	"""Identify and register strings during analysis (aar only)"""		4078290	3					
ANR	4079043	PrimaryExpression	"""Identify and register strings during analysis (aar only)"""		4078290	0					
ANR	4079044	ExpressionStatement	"SETPREF ( ""anal.types.spec"" , ""gcc"" , ""Set profile for specifying format chars used in type analysis"" )"	2831:1:79461:79561	4078290	44	True				
ANR	4079045	CallExpression	"SETPREF ( ""anal.types.spec"" , ""gcc"" , ""Set profile for specifying format chars used in type analysis"" )"		4078290	0					
ANR	4079046	Callee	SETPREF		4078290	0					
ANR	4079047	Identifier	SETPREF		4078290	0					
ANR	4079048	ArgumentList	"""anal.types.spec"""		4078290	1					
ANR	4079049	Argument	"""anal.types.spec"""		4078290	0					
ANR	4079050	PrimaryExpression	"""anal.types.spec"""		4078290	0					
ANR	4079051	Argument	"""gcc"""		4078290	1					
ANR	4079052	PrimaryExpression	"""gcc"""		4078290	0					
ANR	4079053	Argument	"""Set profile for specifying format chars used in type analysis"""		4078290	2					
ANR	4079054	PrimaryExpression	"""Set profile for specifying format chars used in type analysis"""		4078290	0					
ANR	4079055	ExpressionStatement	"SETPREF ( ""anal.types.verbose"" , ""false"" , ""Verbose output from type analysis"" )"	2832:1:79564:79640	4078290	45	True				
ANR	4079056	CallExpression	"SETPREF ( ""anal.types.verbose"" , ""false"" , ""Verbose output from type analysis"" )"		4078290	0					
ANR	4079057	Callee	SETPREF		4078290	0					
ANR	4079058	Identifier	SETPREF		4078290	0					
ANR	4079059	ArgumentList	"""anal.types.verbose"""		4078290	1					
ANR	4079060	Argument	"""anal.types.verbose"""		4078290	0					
ANR	4079061	PrimaryExpression	"""anal.types.verbose"""		4078290	0					
ANR	4079062	Argument	"""false"""		4078290	1					
ANR	4079063	PrimaryExpression	"""false"""		4078290	0					
ANR	4079064	Argument	"""Verbose output from type analysis"""		4078290	2					
ANR	4079065	PrimaryExpression	"""Verbose output from type analysis"""		4078290	0					
ANR	4079066	ExpressionStatement	"SETPREF ( ""anal.types.constraint"" , ""false"" , ""Enable constraint types analysis for variables"" )"	2833:1:79643:79735	4078290	46	True				
ANR	4079067	CallExpression	"SETPREF ( ""anal.types.constraint"" , ""false"" , ""Enable constraint types analysis for variables"" )"		4078290	0					
ANR	4079068	Callee	SETPREF		4078290	0					
ANR	4079069	Identifier	SETPREF		4078290	0					
ANR	4079070	ArgumentList	"""anal.types.constraint"""		4078290	1					
ANR	4079071	Argument	"""anal.types.constraint"""		4078290	0					
ANR	4079072	PrimaryExpression	"""anal.types.constraint"""		4078290	0					
ANR	4079073	Argument	"""false"""		4078290	1					
ANR	4079074	PrimaryExpression	"""false"""		4078290	0					
ANR	4079075	Argument	"""Enable constraint types analysis for variables"""		4078290	2					
ANR	4079076	PrimaryExpression	"""Enable constraint types analysis for variables"""		4078290	0					
ANR	4079077	ExpressionStatement	"SETCB ( ""anal.vars"" , ""true"" , & cb_analvars , ""Analyze local variables and arguments"" )"	2834:1:79738:79820	4078290	47	True				
ANR	4079078	CallExpression	"SETCB ( ""anal.vars"" , ""true"" , & cb_analvars , ""Analyze local variables and arguments"" )"		4078290	0					
ANR	4079079	Callee	SETCB		4078290	0					
ANR	4079080	Identifier	SETCB		4078290	0					
ANR	4079081	ArgumentList	"""anal.vars"""		4078290	1					
ANR	4079082	Argument	"""anal.vars"""		4078290	0					
ANR	4079083	PrimaryExpression	"""anal.vars"""		4078290	0					
ANR	4079084	Argument	"""true"""		4078290	1					
ANR	4079085	PrimaryExpression	"""true"""		4078290	0					
ANR	4079086	Argument	& cb_analvars		4078290	2					
ANR	4079087	UnaryOperationExpression	& cb_analvars		4078290	0					
ANR	4079088	UnaryOperator	&		4078290	0					
ANR	4079089	Identifier	cb_analvars		4078290	1					
ANR	4079090	Argument	"""Analyze local variables and arguments"""		4078290	3					
ANR	4079091	PrimaryExpression	"""Analyze local variables and arguments"""		4078290	0					
ANR	4079092	ExpressionStatement	"SETPREF ( ""anal.vinfun"" , ""true"" , ""Search values in functions (aav) (false by default to only find on non-code)"" )"	2835:1:79823:79935	4078290	48	True				
ANR	4079093	CallExpression	"SETPREF ( ""anal.vinfun"" , ""true"" , ""Search values in functions (aav) (false by default to only find on non-code)"" )"		4078290	0					
ANR	4079094	Callee	SETPREF		4078290	0					
ANR	4079095	Identifier	SETPREF		4078290	0					
ANR	4079096	ArgumentList	"""anal.vinfun"""		4078290	1					
ANR	4079097	Argument	"""anal.vinfun"""		4078290	0					
ANR	4079098	PrimaryExpression	"""anal.vinfun"""		4078290	0					
ANR	4079099	Argument	"""true"""		4078290	1					
ANR	4079100	PrimaryExpression	"""true"""		4078290	0					
ANR	4079101	Argument	"""Search values in functions (aav) (false by default to only find on non-code)"""		4078290	2					
ANR	4079102	PrimaryExpression	"""Search values in functions (aav) (false by default to only find on non-code)"""		4078290	0					
ANR	4079103	ExpressionStatement	"SETPREF ( ""anal.vinfunrange"" , ""false"" , ""Search values outside function ranges (requires anal.vinfun=false)\\n"" )"	2836:1:79938:80048	4078290	49	True				
ANR	4079104	CallExpression	"SETPREF ( ""anal.vinfunrange"" , ""false"" , ""Search values outside function ranges (requires anal.vinfun=false)\\n"" )"		4078290	0					
ANR	4079105	Callee	SETPREF		4078290	0					
ANR	4079106	Identifier	SETPREF		4078290	0					
ANR	4079107	ArgumentList	"""anal.vinfunrange"""		4078290	1					
ANR	4079108	Argument	"""anal.vinfunrange"""		4078290	0					
ANR	4079109	PrimaryExpression	"""anal.vinfunrange"""		4078290	0					
ANR	4079110	Argument	"""false"""		4078290	1					
ANR	4079111	PrimaryExpression	"""false"""		4078290	0					
ANR	4079112	Argument	"""Search values outside function ranges (requires anal.vinfun=false)\\n"""		4078290	2					
ANR	4079113	PrimaryExpression	"""Search values outside function ranges (requires anal.vinfun=false)\\n"""		4078290	0					
ANR	4079114	ExpressionStatement	"SETCB ( ""anal.nopskip"" , ""true"" , & cb_analnopskip , ""Skip nops at the beginning of functions"" )"	2837:1:80051:80141	4078290	50	True				
ANR	4079115	CallExpression	"SETCB ( ""anal.nopskip"" , ""true"" , & cb_analnopskip , ""Skip nops at the beginning of functions"" )"		4078290	0					
ANR	4079116	Callee	SETCB		4078290	0					
ANR	4079117	Identifier	SETCB		4078290	0					
ANR	4079118	ArgumentList	"""anal.nopskip"""		4078290	1					
ANR	4079119	Argument	"""anal.nopskip"""		4078290	0					
ANR	4079120	PrimaryExpression	"""anal.nopskip"""		4078290	0					
ANR	4079121	Argument	"""true"""		4078290	1					
ANR	4079122	PrimaryExpression	"""true"""		4078290	0					
ANR	4079123	Argument	& cb_analnopskip		4078290	2					
ANR	4079124	UnaryOperationExpression	& cb_analnopskip		4078290	0					
ANR	4079125	UnaryOperator	&		4078290	0					
ANR	4079126	Identifier	cb_analnopskip		4078290	1					
ANR	4079127	Argument	"""Skip nops at the beginning of functions"""		4078290	3					
ANR	4079128	PrimaryExpression	"""Skip nops at the beginning of functions"""		4078290	0					
ANR	4079129	ExpressionStatement	"SETCB ( ""anal.hpskip"" , ""false"" , & cb_analhpskip , ""Skip `mov reg, reg` and `lea reg, [reg] at the beginning of functions"" )"	2838:1:80144:80263	4078290	51	True				
ANR	4079130	CallExpression	"SETCB ( ""anal.hpskip"" , ""false"" , & cb_analhpskip , ""Skip `mov reg, reg` and `lea reg, [reg] at the beginning of functions"" )"		4078290	0					
ANR	4079131	Callee	SETCB		4078290	0					
ANR	4079132	Identifier	SETCB		4078290	0					
ANR	4079133	ArgumentList	"""anal.hpskip"""		4078290	1					
ANR	4079134	Argument	"""anal.hpskip"""		4078290	0					
ANR	4079135	PrimaryExpression	"""anal.hpskip"""		4078290	0					
ANR	4079136	Argument	"""false"""		4078290	1					
ANR	4079137	PrimaryExpression	"""false"""		4078290	0					
ANR	4079138	Argument	& cb_analhpskip		4078290	2					
ANR	4079139	UnaryOperationExpression	& cb_analhpskip		4078290	0					
ANR	4079140	UnaryOperator	&		4078290	0					
ANR	4079141	Identifier	cb_analhpskip		4078290	1					
ANR	4079142	Argument	"""Skip `mov reg, reg` and `lea reg, [reg] at the beginning of functions"""		4078290	3					
ANR	4079143	PrimaryExpression	"""Skip `mov reg, reg` and `lea reg, [reg] at the beginning of functions"""		4078290	0					
ANR	4079144	ExpressionStatement	"n = NODECB ( ""anal.arch"" , R_SYS_ARCH , & cb_analarch )"	2839:1:80266:80316	4078290	52	True				
ANR	4079145	AssignmentExpression	"n = NODECB ( ""anal.arch"" , R_SYS_ARCH , & cb_analarch )"		4078290	0		=			
ANR	4079146	Identifier	n		4078290	0					
ANR	4079147	CallExpression	"NODECB ( ""anal.arch"" , R_SYS_ARCH , & cb_analarch )"		4078290	1					
ANR	4079148	Callee	NODECB		4078290	0					
ANR	4079149	Identifier	NODECB		4078290	0					
ANR	4079150	ArgumentList	"""anal.arch"""		4078290	1					
ANR	4079151	Argument	"""anal.arch"""		4078290	0					
ANR	4079152	PrimaryExpression	"""anal.arch"""		4078290	0					
ANR	4079153	Argument	R_SYS_ARCH		4078290	1					
ANR	4079154	Identifier	R_SYS_ARCH		4078290	0					
ANR	4079155	Argument	& cb_analarch		4078290	2					
ANR	4079156	UnaryOperationExpression	& cb_analarch		4078290	0					
ANR	4079157	UnaryOperator	&		4078290	0					
ANR	4079158	Identifier	cb_analarch		4078290	1					
ANR	4079159	ExpressionStatement	"SETDESC ( n , ""Select the architecture to use"" )"	2840:1:80319:80364	4078290	53	True				
ANR	4079160	CallExpression	"SETDESC ( n , ""Select the architecture to use"" )"		4078290	0					
ANR	4079161	Callee	SETDESC		4078290	0					
ANR	4079162	Identifier	SETDESC		4078290	0					
ANR	4079163	ArgumentList	n		4078290	1					
ANR	4079164	Argument	n		4078290	0					
ANR	4079165	Identifier	n		4078290	0					
ANR	4079166	Argument	"""Select the architecture to use"""		4078290	1					
ANR	4079167	PrimaryExpression	"""Select the architecture to use"""		4078290	0					
ANR	4079168	ExpressionStatement	"update_analarch_options ( core , n )"	2841:1:80367:80400	4078290	54	True				
ANR	4079169	CallExpression	"update_analarch_options ( core , n )"		4078290	0					
ANR	4079170	Callee	update_analarch_options		4078290	0					
ANR	4079171	Identifier	update_analarch_options		4078290	0					
ANR	4079172	ArgumentList	core		4078290	1					
ANR	4079173	Argument	core		4078290	0					
ANR	4079174	Identifier	core		4078290	0					
ANR	4079175	Argument	n		4078290	1					
ANR	4079176	Identifier	n		4078290	0					
ANR	4079177	ExpressionStatement	"SETCB ( ""anal.cpu"" , R_SYS_ARCH , & cb_analcpu , ""Specify the anal.cpu to use"" )"	2842:1:80403:80477	4078290	55	True				
ANR	4079178	CallExpression	"SETCB ( ""anal.cpu"" , R_SYS_ARCH , & cb_analcpu , ""Specify the anal.cpu to use"" )"		4078290	0					
ANR	4079179	Callee	SETCB		4078290	0					
ANR	4079180	Identifier	SETCB		4078290	0					
ANR	4079181	ArgumentList	"""anal.cpu"""		4078290	1					
ANR	4079182	Argument	"""anal.cpu"""		4078290	0					
ANR	4079183	PrimaryExpression	"""anal.cpu"""		4078290	0					
ANR	4079184	Argument	R_SYS_ARCH		4078290	1					
ANR	4079185	Identifier	R_SYS_ARCH		4078290	0					
ANR	4079186	Argument	& cb_analcpu		4078290	2					
ANR	4079187	UnaryOperationExpression	& cb_analcpu		4078290	0					
ANR	4079188	UnaryOperator	&		4078290	0					
ANR	4079189	Identifier	cb_analcpu		4078290	1					
ANR	4079190	Argument	"""Specify the anal.cpu to use"""		4078290	3					
ANR	4079191	PrimaryExpression	"""Specify the anal.cpu to use"""		4078290	0					
ANR	4079192	ExpressionStatement	"SETPREF ( ""anal.prelude"" , """" , ""Specify an hexpair to find preludes in code"" )"	2843:1:80480:80555	4078290	56	True				
ANR	4079193	CallExpression	"SETPREF ( ""anal.prelude"" , """" , ""Specify an hexpair to find preludes in code"" )"		4078290	0					
ANR	4079194	Callee	SETPREF		4078290	0					
ANR	4079195	Identifier	SETPREF		4078290	0					
ANR	4079196	ArgumentList	"""anal.prelude"""		4078290	1					
ANR	4079197	Argument	"""anal.prelude"""		4078290	0					
ANR	4079198	PrimaryExpression	"""anal.prelude"""		4078290	0					
ANR	4079199	Argument	""""""		4078290	1					
ANR	4079200	PrimaryExpression	""""""		4078290	0					
ANR	4079201	Argument	"""Specify an hexpair to find preludes in code"""		4078290	2					
ANR	4079202	PrimaryExpression	"""Specify an hexpair to find preludes in code"""		4078290	0					
ANR	4079203	ExpressionStatement	"SETCB ( ""anal.recont"" , ""false"" , & cb_analrecont , ""End block after splitting a basic block instead of error"" )"	2844:1:80558:80664	4078290	57	True				
ANR	4079204	CallExpression	"SETCB ( ""anal.recont"" , ""false"" , & cb_analrecont , ""End block after splitting a basic block instead of error"" )"		4078290	0					
ANR	4079205	Callee	SETCB		4078290	0					
ANR	4079206	Identifier	SETCB		4078290	0					
ANR	4079207	ArgumentList	"""anal.recont"""		4078290	1					
ANR	4079208	Argument	"""anal.recont"""		4078290	0					
ANR	4079209	PrimaryExpression	"""anal.recont"""		4078290	0					
ANR	4079210	Argument	"""false"""		4078290	1					
ANR	4079211	PrimaryExpression	"""false"""		4078290	0					
ANR	4079212	Argument	& cb_analrecont		4078290	2					
ANR	4079213	UnaryOperationExpression	& cb_analrecont		4078290	0					
ANR	4079214	UnaryOperator	&		4078290	0					
ANR	4079215	Identifier	cb_analrecont		4078290	1					
ANR	4079216	Argument	"""End block after splitting a basic block instead of error"""		4078290	3					
ANR	4079217	PrimaryExpression	"""End block after splitting a basic block instead of error"""		4078290	0					
ANR	4079218	ExpressionStatement	"SETCB ( ""anal.jmp.indir"" , ""false"" , & cb_analijmp , ""Follow the indirect jumps in function analysis"" )"	2845:1:80678:80775	4078290	58	True				
ANR	4079219	CallExpression	"SETCB ( ""anal.jmp.indir"" , ""false"" , & cb_analijmp , ""Follow the indirect jumps in function analysis"" )"		4078290	0					
ANR	4079220	Callee	SETCB		4078290	0					
ANR	4079221	Identifier	SETCB		4078290	0					
ANR	4079222	ArgumentList	"""anal.jmp.indir"""		4078290	1					
ANR	4079223	Argument	"""anal.jmp.indir"""		4078290	0					
ANR	4079224	PrimaryExpression	"""anal.jmp.indir"""		4078290	0					
ANR	4079225	Argument	"""false"""		4078290	1					
ANR	4079226	PrimaryExpression	"""false"""		4078290	0					
ANR	4079227	Argument	& cb_analijmp		4078290	2					
ANR	4079228	UnaryOperationExpression	& cb_analijmp		4078290	0					
ANR	4079229	UnaryOperator	&		4078290	0					
ANR	4079230	Identifier	cb_analijmp		4078290	1					
ANR	4079231	Argument	"""Follow the indirect jumps in function analysis"""		4078290	3					
ANR	4079232	PrimaryExpression	"""Follow the indirect jumps in function analysis"""		4078290	0					
ANR	4079233	ExpressionStatement	"SETI ( ""anal.ptrdepth"" , 3 , ""Maximum number of nested pointers to follow in analysis"" )"	2846:1:80789:80873	4078290	59	True				
ANR	4079234	CallExpression	"SETI ( ""anal.ptrdepth"" , 3 , ""Maximum number of nested pointers to follow in analysis"" )"		4078290	0					
ANR	4079235	Callee	SETI		4078290	0					
ANR	4079236	Identifier	SETI		4078290	0					
ANR	4079237	ArgumentList	"""anal.ptrdepth"""		4078290	1					
ANR	4079238	Argument	"""anal.ptrdepth"""		4078290	0					
ANR	4079239	PrimaryExpression	"""anal.ptrdepth"""		4078290	0					
ANR	4079240	Argument	3		4078290	1					
ANR	4079241	PrimaryExpression	3		4078290	0					
ANR	4079242	Argument	"""Maximum number of nested pointers to follow in analysis"""		4078290	2					
ANR	4079243	PrimaryExpression	"""Maximum number of nested pointers to follow in analysis"""		4078290	0					
ANR	4079244	ExpressionStatement	"SETICB ( ""asm.lines.maxref"" , 0 , & cb_analmaxrefs , ""Maximum number of reflines to be analyzed and displayed in asm.lines with pd"" )"	2847:1:80876:81003	4078290	60	True				
ANR	4079245	CallExpression	"SETICB ( ""asm.lines.maxref"" , 0 , & cb_analmaxrefs , ""Maximum number of reflines to be analyzed and displayed in asm.lines with pd"" )"		4078290	0					
ANR	4079246	Callee	SETICB		4078290	0					
ANR	4079247	Identifier	SETICB		4078290	0					
ANR	4079248	ArgumentList	"""asm.lines.maxref"""		4078290	1					
ANR	4079249	Argument	"""asm.lines.maxref"""		4078290	0					
ANR	4079250	PrimaryExpression	"""asm.lines.maxref"""		4078290	0					
ANR	4079251	Argument	0		4078290	1					
ANR	4079252	PrimaryExpression	0		4078290	0					
ANR	4079253	Argument	& cb_analmaxrefs		4078290	2					
ANR	4079254	UnaryOperationExpression	& cb_analmaxrefs		4078290	0					
ANR	4079255	UnaryOperator	&		4078290	0					
ANR	4079256	Identifier	cb_analmaxrefs		4078290	1					
ANR	4079257	Argument	"""Maximum number of reflines to be analyzed and displayed in asm.lines with pd"""		4078290	3					
ANR	4079258	PrimaryExpression	"""Maximum number of reflines to be analyzed and displayed in asm.lines with pd"""		4078290	0					
ANR	4079259	ExpressionStatement	"SETCB ( ""anal.jmp.tbl"" , ""true"" , & cb_anal_jmptbl , ""Analyze jump tables in switch statements"" )"	2849:1:81007:81098	4078290	61	True				
ANR	4079260	CallExpression	"SETCB ( ""anal.jmp.tbl"" , ""true"" , & cb_anal_jmptbl , ""Analyze jump tables in switch statements"" )"		4078290	0					
ANR	4079261	Callee	SETCB		4078290	0					
ANR	4079262	Identifier	SETCB		4078290	0					
ANR	4079263	ArgumentList	"""anal.jmp.tbl"""		4078290	1					
ANR	4079264	Argument	"""anal.jmp.tbl"""		4078290	0					
ANR	4079265	PrimaryExpression	"""anal.jmp.tbl"""		4078290	0					
ANR	4079266	Argument	"""true"""		4078290	1					
ANR	4079267	PrimaryExpression	"""true"""		4078290	0					
ANR	4079268	Argument	& cb_anal_jmptbl		4078290	2					
ANR	4079269	UnaryOperationExpression	& cb_anal_jmptbl		4078290	0					
ANR	4079270	UnaryOperator	&		4078290	0					
ANR	4079271	Identifier	cb_anal_jmptbl		4078290	1					
ANR	4079272	Argument	"""Analyze jump tables in switch statements"""		4078290	3					
ANR	4079273	PrimaryExpression	"""Analyze jump tables in switch statements"""		4078290	0					
ANR	4079274	ExpressionStatement	"SETCB ( ""anal.jmp.cref"" , ""false"" , & cb_anal_cjmpref , ""Create references for conditional jumps"" )"	2851:1:81102:81195	4078290	62	True				
ANR	4079275	CallExpression	"SETCB ( ""anal.jmp.cref"" , ""false"" , & cb_anal_cjmpref , ""Create references for conditional jumps"" )"		4078290	0					
ANR	4079276	Callee	SETCB		4078290	0					
ANR	4079277	Identifier	SETCB		4078290	0					
ANR	4079278	ArgumentList	"""anal.jmp.cref"""		4078290	1					
ANR	4079279	Argument	"""anal.jmp.cref"""		4078290	0					
ANR	4079280	PrimaryExpression	"""anal.jmp.cref"""		4078290	0					
ANR	4079281	Argument	"""false"""		4078290	1					
ANR	4079282	PrimaryExpression	"""false"""		4078290	0					
ANR	4079283	Argument	& cb_anal_cjmpref		4078290	2					
ANR	4079284	UnaryOperationExpression	& cb_anal_cjmpref		4078290	0					
ANR	4079285	UnaryOperator	&		4078290	0					
ANR	4079286	Identifier	cb_anal_cjmpref		4078290	1					
ANR	4079287	Argument	"""Create references for conditional jumps"""		4078290	3					
ANR	4079288	PrimaryExpression	"""Create references for conditional jumps"""		4078290	0					
ANR	4079289	ExpressionStatement	"SETCB ( ""anal.jmp.ref"" , ""true"" , & cb_anal_jmpref , ""Create references for unconditional jumps"" )"	2852:1:81198:81290	4078290	63	True				
ANR	4079290	CallExpression	"SETCB ( ""anal.jmp.ref"" , ""true"" , & cb_anal_jmpref , ""Create references for unconditional jumps"" )"		4078290	0					
ANR	4079291	Callee	SETCB		4078290	0					
ANR	4079292	Identifier	SETCB		4078290	0					
ANR	4079293	ArgumentList	"""anal.jmp.ref"""		4078290	1					
ANR	4079294	Argument	"""anal.jmp.ref"""		4078290	0					
ANR	4079295	PrimaryExpression	"""anal.jmp.ref"""		4078290	0					
ANR	4079296	Argument	"""true"""		4078290	1					
ANR	4079297	PrimaryExpression	"""true"""		4078290	0					
ANR	4079298	Argument	& cb_anal_jmpref		4078290	2					
ANR	4079299	UnaryOperationExpression	& cb_anal_jmpref		4078290	0					
ANR	4079300	UnaryOperator	&		4078290	0					
ANR	4079301	Identifier	cb_anal_jmpref		4078290	1					
ANR	4079302	Argument	"""Create references for unconditional jumps"""		4078290	3					
ANR	4079303	PrimaryExpression	"""Create references for unconditional jumps"""		4078290	0					
ANR	4079304	ExpressionStatement	"SETCB ( ""anal.jmp.above"" , ""true"" , & cb_anal_jmpabove , ""Jump above function pointer"" )"	2854:1:81294:81376	4078290	64	True				
ANR	4079305	CallExpression	"SETCB ( ""anal.jmp.above"" , ""true"" , & cb_anal_jmpabove , ""Jump above function pointer"" )"		4078290	0					
ANR	4079306	Callee	SETCB		4078290	0					
ANR	4079307	Identifier	SETCB		4078290	0					
ANR	4079308	ArgumentList	"""anal.jmp.above"""		4078290	1					
ANR	4079309	Argument	"""anal.jmp.above"""		4078290	0					
ANR	4079310	PrimaryExpression	"""anal.jmp.above"""		4078290	0					
ANR	4079311	Argument	"""true"""		4078290	1					
ANR	4079312	PrimaryExpression	"""true"""		4078290	0					
ANR	4079313	Argument	& cb_anal_jmpabove		4078290	2					
ANR	4079314	UnaryOperationExpression	& cb_anal_jmpabove		4078290	0					
ANR	4079315	UnaryOperator	&		4078290	0					
ANR	4079316	Identifier	cb_anal_jmpabove		4078290	1					
ANR	4079317	Argument	"""Jump above function pointer"""		4078290	3					
ANR	4079318	PrimaryExpression	"""Jump above function pointer"""		4078290	0					
ANR	4079319	ExpressionStatement	"SETCB ( ""anal.loads"" , ""false"" , & cb_anal_loads , ""Define as dword/string/qword when analyzing load instructions"" )"	2855:1:81379:81489	4078290	65	True				
ANR	4079320	CallExpression	"SETCB ( ""anal.loads"" , ""false"" , & cb_anal_loads , ""Define as dword/string/qword when analyzing load instructions"" )"		4078290	0					
ANR	4079321	Callee	SETCB		4078290	0					
ANR	4079322	Identifier	SETCB		4078290	0					
ANR	4079323	ArgumentList	"""anal.loads"""		4078290	1					
ANR	4079324	Argument	"""anal.loads"""		4078290	0					
ANR	4079325	PrimaryExpression	"""anal.loads"""		4078290	0					
ANR	4079326	Argument	"""false"""		4078290	1					
ANR	4079327	PrimaryExpression	"""false"""		4078290	0					
ANR	4079328	Argument	& cb_anal_loads		4078290	2					
ANR	4079329	UnaryOperationExpression	& cb_anal_loads		4078290	0					
ANR	4079330	UnaryOperator	&		4078290	0					
ANR	4079331	Identifier	cb_anal_loads		4078290	1					
ANR	4079332	Argument	"""Define as dword/string/qword when analyzing load instructions"""		4078290	3					
ANR	4079333	PrimaryExpression	"""Define as dword/string/qword when analyzing load instructions"""		4078290	0					
ANR	4079334	ExpressionStatement	"SETCB ( ""anal.datarefs"" , ""false"" , & cb_anal_followdatarefs , ""Follow data references for code coverage"" )"	2856:1:81492:81593	4078290	66	True				
ANR	4079335	CallExpression	"SETCB ( ""anal.datarefs"" , ""false"" , & cb_anal_followdatarefs , ""Follow data references for code coverage"" )"		4078290	0					
ANR	4079336	Callee	SETCB		4078290	0					
ANR	4079337	Identifier	SETCB		4078290	0					
ANR	4079338	ArgumentList	"""anal.datarefs"""		4078290	1					
ANR	4079339	Argument	"""anal.datarefs"""		4078290	0					
ANR	4079340	PrimaryExpression	"""anal.datarefs"""		4078290	0					
ANR	4079341	Argument	"""false"""		4078290	1					
ANR	4079342	PrimaryExpression	"""false"""		4078290	0					
ANR	4079343	Argument	& cb_anal_followdatarefs		4078290	2					
ANR	4079344	UnaryOperationExpression	& cb_anal_followdatarefs		4078290	0					
ANR	4079345	UnaryOperator	&		4078290	0					
ANR	4079346	Identifier	cb_anal_followdatarefs		4078290	1					
ANR	4079347	Argument	"""Follow data references for code coverage"""		4078290	3					
ANR	4079348	PrimaryExpression	"""Follow data references for code coverage"""		4078290	0					
ANR	4079349	ExpressionStatement	"SETCB ( ""anal.brokenrefs"" , ""false"" , & cb_anal_brokenrefs , ""Follow function references as well if function analysis was failed"" )"	2857:1:81596:81721	4078290	67	True				
ANR	4079350	CallExpression	"SETCB ( ""anal.brokenrefs"" , ""false"" , & cb_anal_brokenrefs , ""Follow function references as well if function analysis was failed"" )"		4078290	0					
ANR	4079351	Callee	SETCB		4078290	0					
ANR	4079352	Identifier	SETCB		4078290	0					
ANR	4079353	ArgumentList	"""anal.brokenrefs"""		4078290	1					
ANR	4079354	Argument	"""anal.brokenrefs"""		4078290	0					
ANR	4079355	PrimaryExpression	"""anal.brokenrefs"""		4078290	0					
ANR	4079356	Argument	"""false"""		4078290	1					
ANR	4079357	PrimaryExpression	"""false"""		4078290	0					
ANR	4079358	Argument	& cb_anal_brokenrefs		4078290	2					
ANR	4079359	UnaryOperationExpression	& cb_anal_brokenrefs		4078290	0					
ANR	4079360	UnaryOperator	&		4078290	0					
ANR	4079361	Identifier	cb_anal_brokenrefs		4078290	1					
ANR	4079362	Argument	"""Follow function references as well if function analysis was failed"""		4078290	3					
ANR	4079363	PrimaryExpression	"""Follow function references as well if function analysis was failed"""		4078290	0					
ANR	4079364	ExpressionStatement	"SETCB ( ""anal.jmp.mid"" , ""true"" , & cb_anal_jmpmid , ""Continue analysis after jump to middle of instruction (x86 only)"" )"	2858:1:81724:81839	4078290	68	True				
ANR	4079365	CallExpression	"SETCB ( ""anal.jmp.mid"" , ""true"" , & cb_anal_jmpmid , ""Continue analysis after jump to middle of instruction (x86 only)"" )"		4078290	0					
ANR	4079366	Callee	SETCB		4078290	0					
ANR	4079367	Identifier	SETCB		4078290	0					
ANR	4079368	ArgumentList	"""anal.jmp.mid"""		4078290	1					
ANR	4079369	Argument	"""anal.jmp.mid"""		4078290	0					
ANR	4079370	PrimaryExpression	"""anal.jmp.mid"""		4078290	0					
ANR	4079371	Argument	"""true"""		4078290	1					
ANR	4079372	PrimaryExpression	"""true"""		4078290	0					
ANR	4079373	Argument	& cb_anal_jmpmid		4078290	2					
ANR	4079374	UnaryOperationExpression	& cb_anal_jmpmid		4078290	0					
ANR	4079375	UnaryOperator	&		4078290	0					
ANR	4079376	Identifier	cb_anal_jmpmid		4078290	1					
ANR	4079377	Argument	"""Continue analysis after jump to middle of instruction (x86 only)"""		4078290	3					
ANR	4079378	PrimaryExpression	"""Continue analysis after jump to middle of instruction (x86 only)"""		4078290	0					
ANR	4079379	ExpressionStatement	"SETCB ( ""anal.refstr"" , ""false"" , & cb_anal_searchstringrefs , ""Search string references in data references"" )"	2860:1:81843:81947	4078290	69	True				
ANR	4079380	CallExpression	"SETCB ( ""anal.refstr"" , ""false"" , & cb_anal_searchstringrefs , ""Search string references in data references"" )"		4078290	0					
ANR	4079381	Callee	SETCB		4078290	0					
ANR	4079382	Identifier	SETCB		4078290	0					
ANR	4079383	ArgumentList	"""anal.refstr"""		4078290	1					
ANR	4079384	Argument	"""anal.refstr"""		4078290	0					
ANR	4079385	PrimaryExpression	"""anal.refstr"""		4078290	0					
ANR	4079386	Argument	"""false"""		4078290	1					
ANR	4079387	PrimaryExpression	"""false"""		4078290	0					
ANR	4079388	Argument	& cb_anal_searchstringrefs		4078290	2					
ANR	4079389	UnaryOperationExpression	& cb_anal_searchstringrefs		4078290	0					
ANR	4079390	UnaryOperator	&		4078290	0					
ANR	4079391	Identifier	cb_anal_searchstringrefs		4078290	1					
ANR	4079392	Argument	"""Search string references in data references"""		4078290	3					
ANR	4079393	PrimaryExpression	"""Search string references in data references"""		4078290	0					
ANR	4079394	ExpressionStatement	"SETCB ( ""anal.trycatch"" , ""false"" , & cb_anal_trycatch , ""Honor try.X.Y.{from,to,catch} flags"" )"	2861:1:81950:82040	4078290	70	True				
ANR	4079395	CallExpression	"SETCB ( ""anal.trycatch"" , ""false"" , & cb_anal_trycatch , ""Honor try.X.Y.{from,to,catch} flags"" )"		4078290	0					
ANR	4079396	Callee	SETCB		4078290	0					
ANR	4079397	Identifier	SETCB		4078290	0					
ANR	4079398	ArgumentList	"""anal.trycatch"""		4078290	1					
ANR	4079399	Argument	"""anal.trycatch"""		4078290	0					
ANR	4079400	PrimaryExpression	"""anal.trycatch"""		4078290	0					
ANR	4079401	Argument	"""false"""		4078290	1					
ANR	4079402	PrimaryExpression	"""false"""		4078290	0					
ANR	4079403	Argument	& cb_anal_trycatch		4078290	2					
ANR	4079404	UnaryOperationExpression	& cb_anal_trycatch		4078290	0					
ANR	4079405	UnaryOperator	&		4078290	0					
ANR	4079406	Identifier	cb_anal_trycatch		4078290	1					
ANR	4079407	Argument	"""Honor try.X.Y.{from,to,catch} flags"""		4078290	3					
ANR	4079408	PrimaryExpression	"""Honor try.X.Y.{from,to,catch} flags"""		4078290	0					
ANR	4079409	ExpressionStatement	"SETCB ( ""anal.bb.maxsize"" , ""512K"" , & cb_anal_bb_max_size , ""Maximum basic block size"" )"	2862:1:82043:82126	4078290	71	True				
ANR	4079410	CallExpression	"SETCB ( ""anal.bb.maxsize"" , ""512K"" , & cb_anal_bb_max_size , ""Maximum basic block size"" )"		4078290	0					
ANR	4079411	Callee	SETCB		4078290	0					
ANR	4079412	Identifier	SETCB		4078290	0					
ANR	4079413	ArgumentList	"""anal.bb.maxsize"""		4078290	1					
ANR	4079414	Argument	"""anal.bb.maxsize"""		4078290	0					
ANR	4079415	PrimaryExpression	"""anal.bb.maxsize"""		4078290	0					
ANR	4079416	Argument	"""512K"""		4078290	1					
ANR	4079417	PrimaryExpression	"""512K"""		4078290	0					
ANR	4079418	Argument	& cb_anal_bb_max_size		4078290	2					
ANR	4079419	UnaryOperationExpression	& cb_anal_bb_max_size		4078290	0					
ANR	4079420	UnaryOperator	&		4078290	0					
ANR	4079421	Identifier	cb_anal_bb_max_size		4078290	1					
ANR	4079422	Argument	"""Maximum basic block size"""		4078290	3					
ANR	4079423	PrimaryExpression	"""Maximum basic block size"""		4078290	0					
ANR	4079424	ExpressionStatement	"SETCB ( ""anal.pushret"" , ""false"" , & cb_anal_pushret , ""Analyze push+ret as jmp"" )"	2863:1:82129:82205	4078290	72	True				
ANR	4079425	CallExpression	"SETCB ( ""anal.pushret"" , ""false"" , & cb_anal_pushret , ""Analyze push+ret as jmp"" )"		4078290	0					
ANR	4079426	Callee	SETCB		4078290	0					
ANR	4079427	Identifier	SETCB		4078290	0					
ANR	4079428	ArgumentList	"""anal.pushret"""		4078290	1					
ANR	4079429	Argument	"""anal.pushret"""		4078290	0					
ANR	4079430	PrimaryExpression	"""anal.pushret"""		4078290	0					
ANR	4079431	Argument	"""false"""		4078290	1					
ANR	4079432	PrimaryExpression	"""false"""		4078290	0					
ANR	4079433	Argument	& cb_anal_pushret		4078290	2					
ANR	4079434	UnaryOperationExpression	& cb_anal_pushret		4078290	0					
ANR	4079435	UnaryOperator	&		4078290	0					
ANR	4079436	Identifier	cb_anal_pushret		4078290	1					
ANR	4079437	Argument	"""Analyze push+ret as jmp"""		4078290	3					
ANR	4079438	PrimaryExpression	"""Analyze push+ret as jmp"""		4078290	0					
ANR	4079439	ExpressionStatement	"n = NODECB ( ""anal.cpp.abi"" , ""itanium"" , & cb_anal_cpp_abi )"	2865:1:82209:82265	4078290	73	True				
ANR	4079440	AssignmentExpression	"n = NODECB ( ""anal.cpp.abi"" , ""itanium"" , & cb_anal_cpp_abi )"		4078290	0		=			
ANR	4079441	Identifier	n		4078290	0					
ANR	4079442	CallExpression	"NODECB ( ""anal.cpp.abi"" , ""itanium"" , & cb_anal_cpp_abi )"		4078290	1					
ANR	4079443	Callee	NODECB		4078290	0					
ANR	4079444	Identifier	NODECB		4078290	0					
ANR	4079445	ArgumentList	"""anal.cpp.abi"""		4078290	1					
ANR	4079446	Argument	"""anal.cpp.abi"""		4078290	0					
ANR	4079447	PrimaryExpression	"""anal.cpp.abi"""		4078290	0					
ANR	4079448	Argument	"""itanium"""		4078290	1					
ANR	4079449	PrimaryExpression	"""itanium"""		4078290	0					
ANR	4079450	Argument	& cb_anal_cpp_abi		4078290	2					
ANR	4079451	UnaryOperationExpression	& cb_anal_cpp_abi		4078290	0					
ANR	4079452	UnaryOperator	&		4078290	0					
ANR	4079453	Identifier	cb_anal_cpp_abi		4078290	1					
ANR	4079454	ExpressionStatement	"SETDESC ( n , ""Select C++ ABI (Compiler)"" )"	2866:1:82268:82308	4078290	74	True				
ANR	4079455	CallExpression	"SETDESC ( n , ""Select C++ ABI (Compiler)"" )"		4078290	0					
ANR	4079456	Callee	SETDESC		4078290	0					
ANR	4079457	Identifier	SETDESC		4078290	0					
ANR	4079458	ArgumentList	n		4078290	1					
ANR	4079459	Argument	n		4078290	0					
ANR	4079460	Identifier	n		4078290	0					
ANR	4079461	Argument	"""Select C++ ABI (Compiler)"""		4078290	1					
ANR	4079462	PrimaryExpression	"""Select C++ ABI (Compiler)"""		4078290	0					
ANR	4079463	ExpressionStatement	"SETOPTIONS ( n , ""itanium"" , ""msvc"" , NULL )"	2867:1:82311:82350	4078290	75	True				
ANR	4079464	CallExpression	"SETOPTIONS ( n , ""itanium"" , ""msvc"" , NULL )"		4078290	0					
ANR	4079465	Callee	SETOPTIONS		4078290	0					
ANR	4079466	Identifier	SETOPTIONS		4078290	0					
ANR	4079467	ArgumentList	n		4078290	1					
ANR	4079468	Argument	n		4078290	0					
ANR	4079469	Identifier	n		4078290	0					
ANR	4079470	Argument	"""itanium"""		4078290	1					
ANR	4079471	PrimaryExpression	"""itanium"""		4078290	0					
ANR	4079472	Argument	"""msvc"""		4078290	2					
ANR	4079473	PrimaryExpression	"""msvc"""		4078290	0					
ANR	4079474	Argument	NULL		4078290	3					
ANR	4079475	Identifier	NULL		4078290	0					
ANR	4079476	ExpressionStatement	"SETCB ( ""dbg.malloc"" , ""glibc"" , & cb_malloc , ""Choose malloc structure parser"" )"	2870:2:82420:82495	4078290	76	True				
ANR	4079477	CallExpression	"SETCB ( ""dbg.malloc"" , ""glibc"" , & cb_malloc , ""Choose malloc structure parser"" )"		4078290	0					
ANR	4079478	Callee	SETCB		4078290	0					
ANR	4079479	Identifier	SETCB		4078290	0					
ANR	4079480	ArgumentList	"""dbg.malloc"""		4078290	1					
ANR	4079481	Argument	"""dbg.malloc"""		4078290	0					
ANR	4079482	PrimaryExpression	"""dbg.malloc"""		4078290	0					
ANR	4079483	Argument	"""glibc"""		4078290	1					
ANR	4079484	PrimaryExpression	"""glibc"""		4078290	0					
ANR	4079485	Argument	& cb_malloc		4078290	2					
ANR	4079486	UnaryOperationExpression	& cb_malloc		4078290	0					
ANR	4079487	UnaryOperator	&		4078290	0					
ANR	4079488	Identifier	cb_malloc		4078290	1					
ANR	4079489	Argument	"""Choose malloc structure parser"""		4078290	3					
ANR	4079490	PrimaryExpression	"""Choose malloc structure parser"""		4078290	0					
ANR	4079491	ExpressionStatement	"SETPREF ( ""dbg.glibc.tcache"" , ""true"" , ""Set glib tcache parsing"" )"	2875:1:82617:82680	4078290	77	True				
ANR	4079492	CallExpression	"SETPREF ( ""dbg.glibc.tcache"" , ""true"" , ""Set glib tcache parsing"" )"		4078290	0					
ANR	4079493	Callee	SETPREF		4078290	0					
ANR	4079494	Identifier	SETPREF		4078290	0					
ANR	4079495	ArgumentList	"""dbg.glibc.tcache"""		4078290	1					
ANR	4079496	Argument	"""dbg.glibc.tcache"""		4078290	0					
ANR	4079497	PrimaryExpression	"""dbg.glibc.tcache"""		4078290	0					
ANR	4079498	Argument	"""true"""		4078290	1					
ANR	4079499	PrimaryExpression	"""true"""		4078290	0					
ANR	4079500	Argument	"""Set glib tcache parsing"""		4078290	2					
ANR	4079501	PrimaryExpression	"""Set glib tcache parsing"""		4078290	0					
ANR	4079502	ExpressionStatement	"SETI ( ""dbg.glibc.ma_offset"" , 0x000000 , ""Main_arena offset from his symbol"" )"	2880:1:82778:82853	4078290	78	True				
ANR	4079503	CallExpression	"SETI ( ""dbg.glibc.ma_offset"" , 0x000000 , ""Main_arena offset from his symbol"" )"		4078290	0					
ANR	4079504	Callee	SETI		4078290	0					
ANR	4079505	Identifier	SETI		4078290	0					
ANR	4079506	ArgumentList	"""dbg.glibc.ma_offset"""		4078290	1					
ANR	4079507	Argument	"""dbg.glibc.ma_offset"""		4078290	0					
ANR	4079508	PrimaryExpression	"""dbg.glibc.ma_offset"""		4078290	0					
ANR	4079509	Argument	0x000000		4078290	1					
ANR	4079510	PrimaryExpression	0x000000		4078290	0					
ANR	4079511	Argument	"""Main_arena offset from his symbol"""		4078290	2					
ANR	4079512	PrimaryExpression	"""Main_arena offset from his symbol"""		4078290	0					
ANR	4079513	ExpressionStatement	"SETI ( ""dbg.glibc.fc_offset"" , 0x00240 , ""First chunk offset from brk_start"" )"	2881:1:82856:82930	4078290	79	True				
ANR	4079514	CallExpression	"SETI ( ""dbg.glibc.fc_offset"" , 0x00240 , ""First chunk offset from brk_start"" )"		4078290	0					
ANR	4079515	Callee	SETI		4078290	0					
ANR	4079516	Identifier	SETI		4078290	0					
ANR	4079517	ArgumentList	"""dbg.glibc.fc_offset"""		4078290	1					
ANR	4079518	Argument	"""dbg.glibc.fc_offset"""		4078290	0					
ANR	4079519	PrimaryExpression	"""dbg.glibc.fc_offset"""		4078290	0					
ANR	4079520	Argument	0x00240		4078290	1					
ANR	4079521	PrimaryExpression	0x00240		4078290	0					
ANR	4079522	Argument	"""First chunk offset from brk_start"""		4078290	2					
ANR	4079523	PrimaryExpression	"""First chunk offset from brk_start"""		4078290	0					
ANR	4079524	ExpressionStatement	"SETPREF ( ""dbg.libc.dbglib"" , """" , ""Set libc debug library file"" )"	2886:1:83099:83161	4078290	80	True				
ANR	4079525	CallExpression	"SETPREF ( ""dbg.libc.dbglib"" , """" , ""Set libc debug library file"" )"		4078290	0					
ANR	4079526	Callee	SETPREF		4078290	0					
ANR	4079527	Identifier	SETPREF		4078290	0					
ANR	4079528	ArgumentList	"""dbg.libc.dbglib"""		4078290	1					
ANR	4079529	Argument	"""dbg.libc.dbglib"""		4078290	0					
ANR	4079530	PrimaryExpression	"""dbg.libc.dbglib"""		4078290	0					
ANR	4079531	Argument	""""""		4078290	1					
ANR	4079532	PrimaryExpression	""""""		4078290	0					
ANR	4079533	Argument	"""Set libc debug library file"""		4078290	2					
ANR	4079534	PrimaryExpression	"""Set libc debug library file"""		4078290	0					
ANR	4079535	ExpressionStatement	"SETPREF ( ""esil.prestep"" , ""true"" , ""Step before esil evaluation in `de` commands"" )"	2888:1:83165:83245	4078290	81	True				
ANR	4079536	CallExpression	"SETPREF ( ""esil.prestep"" , ""true"" , ""Step before esil evaluation in `de` commands"" )"		4078290	0					
ANR	4079537	Callee	SETPREF		4078290	0					
ANR	4079538	Identifier	SETPREF		4078290	0					
ANR	4079539	ArgumentList	"""esil.prestep"""		4078290	1					
ANR	4079540	Argument	"""esil.prestep"""		4078290	0					
ANR	4079541	PrimaryExpression	"""esil.prestep"""		4078290	0					
ANR	4079542	Argument	"""true"""		4078290	1					
ANR	4079543	PrimaryExpression	"""true"""		4078290	0					
ANR	4079544	Argument	"""Step before esil evaluation in `de` commands"""		4078290	2					
ANR	4079545	PrimaryExpression	"""Step before esil evaluation in `de` commands"""		4078290	0					
ANR	4079546	ExpressionStatement	"SETPREF ( ""esil.fillstack"" , """" , ""Initialize ESIL stack with (random, debrujn, sequence, zeros, ...)"" )"	2889:1:83248:83348	4078290	82	True				
ANR	4079547	CallExpression	"SETPREF ( ""esil.fillstack"" , """" , ""Initialize ESIL stack with (random, debrujn, sequence, zeros, ...)"" )"		4078290	0					
ANR	4079548	Callee	SETPREF		4078290	0					
ANR	4079549	Identifier	SETPREF		4078290	0					
ANR	4079550	ArgumentList	"""esil.fillstack"""		4078290	1					
ANR	4079551	Argument	"""esil.fillstack"""		4078290	0					
ANR	4079552	PrimaryExpression	"""esil.fillstack"""		4078290	0					
ANR	4079553	Argument	""""""		4078290	1					
ANR	4079554	PrimaryExpression	""""""		4078290	0					
ANR	4079555	Argument	"""Initialize ESIL stack with (random, debrujn, sequence, zeros, ...)"""		4078290	2					
ANR	4079556	PrimaryExpression	"""Initialize ESIL stack with (random, debrujn, sequence, zeros, ...)"""		4078290	0					
ANR	4079557	ExpressionStatement	"SETICB ( ""esil.verbose"" , 0 , & cb_esilverbose , ""Show ESIL verbose level (0, 1, 2)"" )"	2890:1:83351:83431	4078290	83	True				
ANR	4079558	CallExpression	"SETICB ( ""esil.verbose"" , 0 , & cb_esilverbose , ""Show ESIL verbose level (0, 1, 2)"" )"		4078290	0					
ANR	4079559	Callee	SETICB		4078290	0					
ANR	4079560	Identifier	SETICB		4078290	0					
ANR	4079561	ArgumentList	"""esil.verbose"""		4078290	1					
ANR	4079562	Argument	"""esil.verbose"""		4078290	0					
ANR	4079563	PrimaryExpression	"""esil.verbose"""		4078290	0					
ANR	4079564	Argument	0		4078290	1					
ANR	4079565	PrimaryExpression	0		4078290	0					
ANR	4079566	Argument	& cb_esilverbose		4078290	2					
ANR	4079567	UnaryOperationExpression	& cb_esilverbose		4078290	0					
ANR	4079568	UnaryOperator	&		4078290	0					
ANR	4079569	Identifier	cb_esilverbose		4078290	1					
ANR	4079570	Argument	"""Show ESIL verbose level (0, 1, 2)"""		4078290	3					
ANR	4079571	PrimaryExpression	"""Show ESIL verbose level (0, 1, 2)"""		4078290	0					
ANR	4079572	ExpressionStatement	"SETICB ( ""esil.gotolimit"" , core -> anal -> esil_goto_limit , & cb_gotolimit , ""Maximum number of gotos per ESIL expression"" )"	2891:1:83434:83550	4078290	84	True				
ANR	4079573	CallExpression	"SETICB ( ""esil.gotolimit"" , core -> anal -> esil_goto_limit , & cb_gotolimit , ""Maximum number of gotos per ESIL expression"" )"		4078290	0					
ANR	4079574	Callee	SETICB		4078290	0					
ANR	4079575	Identifier	SETICB		4078290	0					
ANR	4079576	ArgumentList	"""esil.gotolimit"""		4078290	1					
ANR	4079577	Argument	"""esil.gotolimit"""		4078290	0					
ANR	4079578	PrimaryExpression	"""esil.gotolimit"""		4078290	0					
ANR	4079579	Argument	core -> anal -> esil_goto_limit		4078290	1					
ANR	4079580	PtrMemberAccess	core -> anal -> esil_goto_limit		4078290	0					
ANR	4079581	PtrMemberAccess	core -> anal		4078290	0					
ANR	4079582	Identifier	core		4078290	0					
ANR	4079583	Identifier	anal		4078290	1					
ANR	4079584	Identifier	esil_goto_limit		4078290	1					
ANR	4079585	Argument	& cb_gotolimit		4078290	2					
ANR	4079586	UnaryOperationExpression	& cb_gotolimit		4078290	0					
ANR	4079587	UnaryOperator	&		4078290	0					
ANR	4079588	Identifier	cb_gotolimit		4078290	1					
ANR	4079589	Argument	"""Maximum number of gotos per ESIL expression"""		4078290	3					
ANR	4079590	PrimaryExpression	"""Maximum number of gotos per ESIL expression"""		4078290	0					
ANR	4079591	ExpressionStatement	"SETICB ( ""esil.stack.depth"" , 32 , & cb_esilstackdepth , ""Number of elements that can be pushed on the esilstack"" )"	2892:1:83553:83662	4078290	85	True				
ANR	4079592	CallExpression	"SETICB ( ""esil.stack.depth"" , 32 , & cb_esilstackdepth , ""Number of elements that can be pushed on the esilstack"" )"		4078290	0					
ANR	4079593	Callee	SETICB		4078290	0					
ANR	4079594	Identifier	SETICB		4078290	0					
ANR	4079595	ArgumentList	"""esil.stack.depth"""		4078290	1					
ANR	4079596	Argument	"""esil.stack.depth"""		4078290	0					
ANR	4079597	PrimaryExpression	"""esil.stack.depth"""		4078290	0					
ANR	4079598	Argument	32		4078290	1					
ANR	4079599	PrimaryExpression	32		4078290	0					
ANR	4079600	Argument	& cb_esilstackdepth		4078290	2					
ANR	4079601	UnaryOperationExpression	& cb_esilstackdepth		4078290	0					
ANR	4079602	UnaryOperator	&		4078290	0					
ANR	4079603	Identifier	cb_esilstackdepth		4078290	1					
ANR	4079604	Argument	"""Number of elements that can be pushed on the esilstack"""		4078290	3					
ANR	4079605	PrimaryExpression	"""Number of elements that can be pushed on the esilstack"""		4078290	0					
ANR	4079606	ExpressionStatement	"SETI ( ""esil.stack.size"" , 0xf0000 , ""Set stack size in ESIL VM"" )"	2893:1:83665:83727	4078290	86	True				
ANR	4079607	CallExpression	"SETI ( ""esil.stack.size"" , 0xf0000 , ""Set stack size in ESIL VM"" )"		4078290	0					
ANR	4079608	Callee	SETI		4078290	0					
ANR	4079609	Identifier	SETI		4078290	0					
ANR	4079610	ArgumentList	"""esil.stack.size"""		4078290	1					
ANR	4079611	Argument	"""esil.stack.size"""		4078290	0					
ANR	4079612	PrimaryExpression	"""esil.stack.size"""		4078290	0					
ANR	4079613	Argument	0xf0000		4078290	1					
ANR	4079614	PrimaryExpression	0xf0000		4078290	0					
ANR	4079615	Argument	"""Set stack size in ESIL VM"""		4078290	2					
ANR	4079616	PrimaryExpression	"""Set stack size in ESIL VM"""		4078290	0					
ANR	4079617	ExpressionStatement	"SETI ( ""esil.stack.addr"" , 0x100000 , ""Set stack address in ESIL VM"" )"	2894:1:83730:83796	4078290	87	True				
ANR	4079618	CallExpression	"SETI ( ""esil.stack.addr"" , 0x100000 , ""Set stack address in ESIL VM"" )"		4078290	0					
ANR	4079619	Callee	SETI		4078290	0					
ANR	4079620	Identifier	SETI		4078290	0					
ANR	4079621	ArgumentList	"""esil.stack.addr"""		4078290	1					
ANR	4079622	Argument	"""esil.stack.addr"""		4078290	0					
ANR	4079623	PrimaryExpression	"""esil.stack.addr"""		4078290	0					
ANR	4079624	Argument	0x100000		4078290	1					
ANR	4079625	PrimaryExpression	0x100000		4078290	0					
ANR	4079626	Argument	"""Set stack address in ESIL VM"""		4078290	2					
ANR	4079627	PrimaryExpression	"""Set stack address in ESIL VM"""		4078290	0					
ANR	4079628	ExpressionStatement	"SETPREF ( ""esil.stack.pattern"" , ""0"" , ""Specify fill pattern to initialize the stack (0, w, d, i)"" )"	2895:1:83799:83895	4078290	88	True				
ANR	4079629	CallExpression	"SETPREF ( ""esil.stack.pattern"" , ""0"" , ""Specify fill pattern to initialize the stack (0, w, d, i)"" )"		4078290	0					
ANR	4079630	Callee	SETPREF		4078290	0					
ANR	4079631	Identifier	SETPREF		4078290	0					
ANR	4079632	ArgumentList	"""esil.stack.pattern"""		4078290	1					
ANR	4079633	Argument	"""esil.stack.pattern"""		4078290	0					
ANR	4079634	PrimaryExpression	"""esil.stack.pattern"""		4078290	0					
ANR	4079635	Argument	"""0"""		4078290	1					
ANR	4079636	PrimaryExpression	"""0"""		4078290	0					
ANR	4079637	Argument	"""Specify fill pattern to initialize the stack (0, w, d, i)"""		4078290	2					
ANR	4079638	PrimaryExpression	"""Specify fill pattern to initialize the stack (0, w, d, i)"""		4078290	0					
ANR	4079639	ExpressionStatement	"SETI ( ""esil.addr.size"" , 64 , ""Maximum address size in accessed by the ESIL VM"" )"	2896:1:83898:83976	4078290	89	True				
ANR	4079640	CallExpression	"SETI ( ""esil.addr.size"" , 64 , ""Maximum address size in accessed by the ESIL VM"" )"		4078290	0					
ANR	4079641	Callee	SETI		4078290	0					
ANR	4079642	Identifier	SETI		4078290	0					
ANR	4079643	ArgumentList	"""esil.addr.size"""		4078290	1					
ANR	4079644	Argument	"""esil.addr.size"""		4078290	0					
ANR	4079645	PrimaryExpression	"""esil.addr.size"""		4078290	0					
ANR	4079646	Argument	64		4078290	1					
ANR	4079647	PrimaryExpression	64		4078290	0					
ANR	4079648	Argument	"""Maximum address size in accessed by the ESIL VM"""		4078290	2					
ANR	4079649	PrimaryExpression	"""Maximum address size in accessed by the ESIL VM"""		4078290	0					
ANR	4079650	ExpressionStatement	"SETPREF ( ""esil.breakoninvalid"" , ""false"" , ""Break esil execution when instruction is invalid"" )"	2897:1:83979:84071	4078290	90	True				
ANR	4079651	CallExpression	"SETPREF ( ""esil.breakoninvalid"" , ""false"" , ""Break esil execution when instruction is invalid"" )"		4078290	0					
ANR	4079652	Callee	SETPREF		4078290	0					
ANR	4079653	Identifier	SETPREF		4078290	0					
ANR	4079654	ArgumentList	"""esil.breakoninvalid"""		4078290	1					
ANR	4079655	Argument	"""esil.breakoninvalid"""		4078290	0					
ANR	4079656	PrimaryExpression	"""esil.breakoninvalid"""		4078290	0					
ANR	4079657	Argument	"""false"""		4078290	1					
ANR	4079658	PrimaryExpression	"""false"""		4078290	0					
ANR	4079659	Argument	"""Break esil execution when instruction is invalid"""		4078290	2					
ANR	4079660	PrimaryExpression	"""Break esil execution when instruction is invalid"""		4078290	0					
ANR	4079661	ExpressionStatement	"SETI ( ""esil.timeout"" , 0 , ""A timeout (in seconds) for when we should give up emulating"" )"	2898:1:84074:84161	4078290	91	True				
ANR	4079662	CallExpression	"SETI ( ""esil.timeout"" , 0 , ""A timeout (in seconds) for when we should give up emulating"" )"		4078290	0					
ANR	4079663	Callee	SETI		4078290	0					
ANR	4079664	Identifier	SETI		4078290	0					
ANR	4079665	ArgumentList	"""esil.timeout"""		4078290	1					
ANR	4079666	Argument	"""esil.timeout"""		4078290	0					
ANR	4079667	PrimaryExpression	"""esil.timeout"""		4078290	0					
ANR	4079668	Argument	0		4078290	1					
ANR	4079669	PrimaryExpression	0		4078290	0					
ANR	4079670	Argument	"""A timeout (in seconds) for when we should give up emulating"""		4078290	2					
ANR	4079671	PrimaryExpression	"""A timeout (in seconds) for when we should give up emulating"""		4078290	0					
ANR	4079672	ExpressionStatement	"n = NODECB ( ""asm.os"" , R_SYS_OS , & cb_asmos )"	2901:1:84235:84277	4078290	92	True				
ANR	4079673	AssignmentExpression	"n = NODECB ( ""asm.os"" , R_SYS_OS , & cb_asmos )"		4078290	0		=			
ANR	4079674	Identifier	n		4078290	0					
ANR	4079675	CallExpression	"NODECB ( ""asm.os"" , R_SYS_OS , & cb_asmos )"		4078290	1					
ANR	4079676	Callee	NODECB		4078290	0					
ANR	4079677	Identifier	NODECB		4078290	0					
ANR	4079678	ArgumentList	"""asm.os"""		4078290	1					
ANR	4079679	Argument	"""asm.os"""		4078290	0					
ANR	4079680	PrimaryExpression	"""asm.os"""		4078290	0					
ANR	4079681	Argument	R_SYS_OS		4078290	1					
ANR	4079682	Identifier	R_SYS_OS		4078290	0					
ANR	4079683	Argument	& cb_asmos		4078290	2					
ANR	4079684	UnaryOperationExpression	& cb_asmos		4078290	0					
ANR	4079685	UnaryOperator	&		4078290	0					
ANR	4079686	Identifier	cb_asmos		4078290	1					
ANR	4079687	ExpressionStatement	"SETDESC ( n , ""Select operating system (kernel)"" )"	2902:1:84280:84327	4078290	93	True				
ANR	4079688	CallExpression	"SETDESC ( n , ""Select operating system (kernel)"" )"		4078290	0					
ANR	4079689	Callee	SETDESC		4078290	0					
ANR	4079690	Identifier	SETDESC		4078290	0					
ANR	4079691	ArgumentList	n		4078290	1					
ANR	4079692	Argument	n		4078290	0					
ANR	4079693	Identifier	n		4078290	0					
ANR	4079694	Argument	"""Select operating system (kernel)"""		4078290	1					
ANR	4079695	PrimaryExpression	"""Select operating system (kernel)"""		4078290	0					
ANR	4079696	ExpressionStatement	"SETOPTIONS ( n , ""ios"" , ""dos"" , ""darwin"" , ""linux"" , ""freebsd"" , ""openbsd"" , ""netbsd"" , ""windows"" , ""s110"" , NULL )"	2903:1:84330:84434	4078290	94	True				
ANR	4079697	CallExpression	"SETOPTIONS ( n , ""ios"" , ""dos"" , ""darwin"" , ""linux"" , ""freebsd"" , ""openbsd"" , ""netbsd"" , ""windows"" , ""s110"" , NULL )"		4078290	0					
ANR	4079698	Callee	SETOPTIONS		4078290	0					
ANR	4079699	Identifier	SETOPTIONS		4078290	0					
ANR	4079700	ArgumentList	n		4078290	1					
ANR	4079701	Argument	n		4078290	0					
ANR	4079702	Identifier	n		4078290	0					
ANR	4079703	Argument	"""ios"""		4078290	1					
ANR	4079704	PrimaryExpression	"""ios"""		4078290	0					
ANR	4079705	Argument	"""dos"""		4078290	2					
ANR	4079706	PrimaryExpression	"""dos"""		4078290	0					
ANR	4079707	Argument	"""darwin"""		4078290	3					
ANR	4079708	PrimaryExpression	"""darwin"""		4078290	0					
ANR	4079709	Argument	"""linux"""		4078290	4					
ANR	4079710	PrimaryExpression	"""linux"""		4078290	0					
ANR	4079711	Argument	"""freebsd"""		4078290	5					
ANR	4079712	PrimaryExpression	"""freebsd"""		4078290	0					
ANR	4079713	Argument	"""openbsd"""		4078290	6					
ANR	4079714	PrimaryExpression	"""openbsd"""		4078290	0					
ANR	4079715	Argument	"""netbsd"""		4078290	7					
ANR	4079716	PrimaryExpression	"""netbsd"""		4078290	0					
ANR	4079717	Argument	"""windows"""		4078290	8					
ANR	4079718	PrimaryExpression	"""windows"""		4078290	0					
ANR	4079719	Argument	"""s110"""		4078290	9					
ANR	4079720	PrimaryExpression	"""s110"""		4078290	0					
ANR	4079721	Argument	NULL		4078290	10					
ANR	4079722	Identifier	NULL		4078290	0					
ANR	4079723	ExpressionStatement	"SETI ( ""asm.xrefs.fold"" , 5 , ""Maximum number of xrefs to be displayed as list (use columns above)"" )"	2904:1:84437:84535	4078290	95	True				
ANR	4079724	CallExpression	"SETI ( ""asm.xrefs.fold"" , 5 , ""Maximum number of xrefs to be displayed as list (use columns above)"" )"		4078290	0					
ANR	4079725	Callee	SETI		4078290	0					
ANR	4079726	Identifier	SETI		4078290	0					
ANR	4079727	ArgumentList	"""asm.xrefs.fold"""		4078290	1					
ANR	4079728	Argument	"""asm.xrefs.fold"""		4078290	0					
ANR	4079729	PrimaryExpression	"""asm.xrefs.fold"""		4078290	0					
ANR	4079730	Argument	5		4078290	1					
ANR	4079731	PrimaryExpression	5		4078290	0					
ANR	4079732	Argument	"""Maximum number of xrefs to be displayed as list (use columns above)"""		4078290	2					
ANR	4079733	PrimaryExpression	"""Maximum number of xrefs to be displayed as list (use columns above)"""		4078290	0					
ANR	4079734	ExpressionStatement	"SETPREF ( ""asm.xrefs.code"" , ""true"" , ""Show the code xrefs (generated by jumps instead of calls)"" )"	2905:1:84538:84634	4078290	96	True				
ANR	4079735	CallExpression	"SETPREF ( ""asm.xrefs.code"" , ""true"" , ""Show the code xrefs (generated by jumps instead of calls)"" )"		4078290	0					
ANR	4079736	Callee	SETPREF		4078290	0					
ANR	4079737	Identifier	SETPREF		4078290	0					
ANR	4079738	ArgumentList	"""asm.xrefs.code"""		4078290	1					
ANR	4079739	Argument	"""asm.xrefs.code"""		4078290	0					
ANR	4079740	PrimaryExpression	"""asm.xrefs.code"""		4078290	0					
ANR	4079741	Argument	"""true"""		4078290	1					
ANR	4079742	PrimaryExpression	"""true"""		4078290	0					
ANR	4079743	Argument	"""Show the code xrefs (generated by jumps instead of calls)"""		4078290	2					
ANR	4079744	PrimaryExpression	"""Show the code xrefs (generated by jumps instead of calls)"""		4078290	0					
ANR	4079745	ExpressionStatement	"SETI ( ""asm.xrefs.max"" , 20 , ""Maximum number of xrefs to be displayed without folding"" )"	2906:1:84637:84723	4078290	97	True				
ANR	4079746	CallExpression	"SETI ( ""asm.xrefs.max"" , 20 , ""Maximum number of xrefs to be displayed without folding"" )"		4078290	0					
ANR	4079747	Callee	SETI		4078290	0					
ANR	4079748	Identifier	SETI		4078290	0					
ANR	4079749	ArgumentList	"""asm.xrefs.max"""		4078290	1					
ANR	4079750	Argument	"""asm.xrefs.max"""		4078290	0					
ANR	4079751	PrimaryExpression	"""asm.xrefs.max"""		4078290	0					
ANR	4079752	Argument	20		4078290	1					
ANR	4079753	PrimaryExpression	20		4078290	0					
ANR	4079754	Argument	"""Maximum number of xrefs to be displayed without folding"""		4078290	2					
ANR	4079755	PrimaryExpression	"""Maximum number of xrefs to be displayed without folding"""		4078290	0					
ANR	4079756	ExpressionStatement	"SETCB ( ""asm.invhex"" , ""false"" , & cb_asm_invhex , ""Show invalid instructions as hexadecimal numbers"" )"	2907:1:84726:84823	4078290	98	True				
ANR	4079757	CallExpression	"SETCB ( ""asm.invhex"" , ""false"" , & cb_asm_invhex , ""Show invalid instructions as hexadecimal numbers"" )"		4078290	0					
ANR	4079758	Callee	SETCB		4078290	0					
ANR	4079759	Identifier	SETCB		4078290	0					
ANR	4079760	ArgumentList	"""asm.invhex"""		4078290	1					
ANR	4079761	Argument	"""asm.invhex"""		4078290	0					
ANR	4079762	PrimaryExpression	"""asm.invhex"""		4078290	0					
ANR	4079763	Argument	"""false"""		4078290	1					
ANR	4079764	PrimaryExpression	"""false"""		4078290	0					
ANR	4079765	Argument	& cb_asm_invhex		4078290	2					
ANR	4079766	UnaryOperationExpression	& cb_asm_invhex		4078290	0					
ANR	4079767	UnaryOperator	&		4078290	0					
ANR	4079768	Identifier	cb_asm_invhex		4078290	1					
ANR	4079769	Argument	"""Show invalid instructions as hexadecimal numbers"""		4078290	3					
ANR	4079770	PrimaryExpression	"""Show invalid instructions as hexadecimal numbers"""		4078290	0					
ANR	4079771	ExpressionStatement	"SETPREF ( ""asm.instr"" , ""true"" , ""Display the disassembled instruction"" )"	2908:1:84826:84895	4078290	99	True				
ANR	4079772	CallExpression	"SETPREF ( ""asm.instr"" , ""true"" , ""Display the disassembled instruction"" )"		4078290	0					
ANR	4079773	Callee	SETPREF		4078290	0					
ANR	4079774	Identifier	SETPREF		4078290	0					
ANR	4079775	ArgumentList	"""asm.instr"""		4078290	1					
ANR	4079776	Argument	"""asm.instr"""		4078290	0					
ANR	4079777	PrimaryExpression	"""asm.instr"""		4078290	0					
ANR	4079778	Argument	"""true"""		4078290	1					
ANR	4079779	PrimaryExpression	"""true"""		4078290	0					
ANR	4079780	Argument	"""Display the disassembled instruction"""		4078290	2					
ANR	4079781	PrimaryExpression	"""Display the disassembled instruction"""		4078290	0					
ANR	4079782	ExpressionStatement	"SETPREF ( ""asm.meta"" , ""true"" , ""Display the code/data/format conversions in disasm"" )"	2909:1:84898:84980	4078290	100	True				
ANR	4079783	CallExpression	"SETPREF ( ""asm.meta"" , ""true"" , ""Display the code/data/format conversions in disasm"" )"		4078290	0					
ANR	4079784	Callee	SETPREF		4078290	0					
ANR	4079785	Identifier	SETPREF		4078290	0					
ANR	4079786	ArgumentList	"""asm.meta"""		4078290	1					
ANR	4079787	Argument	"""asm.meta"""		4078290	0					
ANR	4079788	PrimaryExpression	"""asm.meta"""		4078290	0					
ANR	4079789	Argument	"""true"""		4078290	1					
ANR	4079790	PrimaryExpression	"""true"""		4078290	0					
ANR	4079791	Argument	"""Display the code/data/format conversions in disasm"""		4078290	2					
ANR	4079792	PrimaryExpression	"""Display the code/data/format conversions in disasm"""		4078290	0					
ANR	4079793	ExpressionStatement	"SETPREF ( ""asm.bytes"" , ""true"" , ""Display the bytes of each instruction"" )"	2910:1:84983:85053	4078290	101	True				
ANR	4079794	CallExpression	"SETPREF ( ""asm.bytes"" , ""true"" , ""Display the bytes of each instruction"" )"		4078290	0					
ANR	4079795	Callee	SETPREF		4078290	0					
ANR	4079796	Identifier	SETPREF		4078290	0					
ANR	4079797	ArgumentList	"""asm.bytes"""		4078290	1					
ANR	4079798	Argument	"""asm.bytes"""		4078290	0					
ANR	4079799	PrimaryExpression	"""asm.bytes"""		4078290	0					
ANR	4079800	Argument	"""true"""		4078290	1					
ANR	4079801	PrimaryExpression	"""true"""		4078290	0					
ANR	4079802	Argument	"""Display the bytes of each instruction"""		4078290	2					
ANR	4079803	PrimaryExpression	"""Display the bytes of each instruction"""		4078290	0					
ANR	4079804	ExpressionStatement	"SETI ( ""asm.types"" , 1 , ""Display the fcn types in calls (0=no,1=quiet,2=verbose)"" )"	2911:1:85056:85136	4078290	102	True				
ANR	4079805	CallExpression	"SETI ( ""asm.types"" , 1 , ""Display the fcn types in calls (0=no,1=quiet,2=verbose)"" )"		4078290	0					
ANR	4079806	Callee	SETI		4078290	0					
ANR	4079807	Identifier	SETI		4078290	0					
ANR	4079808	ArgumentList	"""asm.types"""		4078290	1					
ANR	4079809	Argument	"""asm.types"""		4078290	0					
ANR	4079810	PrimaryExpression	"""asm.types"""		4078290	0					
ANR	4079811	Argument	1		4078290	1					
ANR	4079812	PrimaryExpression	1		4078290	0					
ANR	4079813	Argument	"""Display the fcn types in calls (0=no,1=quiet,2=verbose)"""		4078290	2					
ANR	4079814	PrimaryExpression	"""Display the fcn types in calls (0=no,1=quiet,2=verbose)"""		4078290	0					
ANR	4079815	ExpressionStatement	"SETPREF ( ""asm.midcursor"" , ""false"" , ""Cursor in visual disasm mode breaks the instruction"" )"	2912:1:85139:85228	4078290	103	True				
ANR	4079816	CallExpression	"SETPREF ( ""asm.midcursor"" , ""false"" , ""Cursor in visual disasm mode breaks the instruction"" )"		4078290	0					
ANR	4079817	Callee	SETPREF		4078290	0					
ANR	4079818	Identifier	SETPREF		4078290	0					
ANR	4079819	ArgumentList	"""asm.midcursor"""		4078290	1					
ANR	4079820	Argument	"""asm.midcursor"""		4078290	0					
ANR	4079821	PrimaryExpression	"""asm.midcursor"""		4078290	0					
ANR	4079822	Argument	"""false"""		4078290	1					
ANR	4079823	PrimaryExpression	"""false"""		4078290	0					
ANR	4079824	Argument	"""Cursor in visual disasm mode breaks the instruction"""		4078290	2					
ANR	4079825	PrimaryExpression	"""Cursor in visual disasm mode breaks the instruction"""		4078290	0					
ANR	4079826	ExpressionStatement	"SETPREF ( ""asm.cmt.flgrefs"" , ""true"" , ""Show comment flags associated to branch reference"" )"	2913:1:85231:85319	4078290	104	True				
ANR	4079827	CallExpression	"SETPREF ( ""asm.cmt.flgrefs"" , ""true"" , ""Show comment flags associated to branch reference"" )"		4078290	0					
ANR	4079828	Callee	SETPREF		4078290	0					
ANR	4079829	Identifier	SETPREF		4078290	0					
ANR	4079830	ArgumentList	"""asm.cmt.flgrefs"""		4078290	1					
ANR	4079831	Argument	"""asm.cmt.flgrefs"""		4078290	0					
ANR	4079832	PrimaryExpression	"""asm.cmt.flgrefs"""		4078290	0					
ANR	4079833	Argument	"""true"""		4078290	1					
ANR	4079834	PrimaryExpression	"""true"""		4078290	0					
ANR	4079835	Argument	"""Show comment flags associated to branch reference"""		4078290	2					
ANR	4079836	PrimaryExpression	"""Show comment flags associated to branch reference"""		4078290	0					
ANR	4079837	ExpressionStatement	"SETPREF ( ""asm.cmt.right"" , ""true"" , ""Show comments at right of disassembly if they fit in screen"" )"	2914:1:85322:85418	4078290	105	True				
ANR	4079838	CallExpression	"SETPREF ( ""asm.cmt.right"" , ""true"" , ""Show comments at right of disassembly if they fit in screen"" )"		4078290	0					
ANR	4079839	Callee	SETPREF		4078290	0					
ANR	4079840	Identifier	SETPREF		4078290	0					
ANR	4079841	ArgumentList	"""asm.cmt.right"""		4078290	1					
ANR	4079842	Argument	"""asm.cmt.right"""		4078290	0					
ANR	4079843	PrimaryExpression	"""asm.cmt.right"""		4078290	0					
ANR	4079844	Argument	"""true"""		4078290	1					
ANR	4079845	PrimaryExpression	"""true"""		4078290	0					
ANR	4079846	Argument	"""Show comments at right of disassembly if they fit in screen"""		4078290	2					
ANR	4079847	PrimaryExpression	"""Show comments at right of disassembly if they fit in screen"""		4078290	0					
ANR	4079848	ExpressionStatement	"SETI ( ""asm.cmt.col"" , 71 , ""Column to align comments"" )"	2915:1:85421:85473	4078290	106	True				
ANR	4079849	CallExpression	"SETI ( ""asm.cmt.col"" , 71 , ""Column to align comments"" )"		4078290	0					
ANR	4079850	Callee	SETI		4078290	0					
ANR	4079851	Identifier	SETI		4078290	0					
ANR	4079852	ArgumentList	"""asm.cmt.col"""		4078290	1					
ANR	4079853	Argument	"""asm.cmt.col"""		4078290	0					
ANR	4079854	PrimaryExpression	"""asm.cmt.col"""		4078290	0					
ANR	4079855	Argument	71		4078290	1					
ANR	4079856	PrimaryExpression	71		4078290	0					
ANR	4079857	Argument	"""Column to align comments"""		4078290	2					
ANR	4079858	PrimaryExpression	"""Column to align comments"""		4078290	0					
ANR	4079859	ExpressionStatement	"SETICB ( ""asm.pcalign"" , 0 , & cb_asm_pcalign , ""Only recognize as valid instructions aligned to this value"" )"	2916:1:85476:85580	4078290	107	True				
ANR	4079860	CallExpression	"SETICB ( ""asm.pcalign"" , 0 , & cb_asm_pcalign , ""Only recognize as valid instructions aligned to this value"" )"		4078290	0					
ANR	4079861	Callee	SETICB		4078290	0					
ANR	4079862	Identifier	SETICB		4078290	0					
ANR	4079863	ArgumentList	"""asm.pcalign"""		4078290	1					
ANR	4079864	Argument	"""asm.pcalign"""		4078290	0					
ANR	4079865	PrimaryExpression	"""asm.pcalign"""		4078290	0					
ANR	4079866	Argument	0		4078290	1					
ANR	4079867	PrimaryExpression	0		4078290	0					
ANR	4079868	Argument	& cb_asm_pcalign		4078290	2					
ANR	4079869	UnaryOperationExpression	& cb_asm_pcalign		4078290	0					
ANR	4079870	UnaryOperator	&		4078290	0					
ANR	4079871	Identifier	cb_asm_pcalign		4078290	1					
ANR	4079872	Argument	"""Only recognize as valid instructions aligned to this value"""		4078290	3					
ANR	4079873	PrimaryExpression	"""Only recognize as valid instructions aligned to this value"""		4078290	0					
ANR	4079874	ExpressionStatement	"SETPREF ( ""asm.calls"" , ""true"" , ""Show callee function related info as comments in disasm"" )"	2918:1:85617:85705	4078290	108	True				
ANR	4079875	CallExpression	"SETPREF ( ""asm.calls"" , ""true"" , ""Show callee function related info as comments in disasm"" )"		4078290	0					
ANR	4079876	Callee	SETPREF		4078290	0					
ANR	4079877	Identifier	SETPREF		4078290	0					
ANR	4079878	ArgumentList	"""asm.calls"""		4078290	1					
ANR	4079879	Argument	"""asm.calls"""		4078290	0					
ANR	4079880	PrimaryExpression	"""asm.calls"""		4078290	0					
ANR	4079881	Argument	"""true"""		4078290	1					
ANR	4079882	PrimaryExpression	"""true"""		4078290	0					
ANR	4079883	Argument	"""Show callee function related info as comments in disasm"""		4078290	2					
ANR	4079884	PrimaryExpression	"""Show callee function related info as comments in disasm"""		4078290	0					
ANR	4079885	ExpressionStatement	"SETPREF ( ""asm.comments"" , ""true"" , ""Show comments in disassembly view"" )"	2919:1:85708:85777	4078290	109	True				
ANR	4079886	CallExpression	"SETPREF ( ""asm.comments"" , ""true"" , ""Show comments in disassembly view"" )"		4078290	0					
ANR	4079887	Callee	SETPREF		4078290	0					
ANR	4079888	Identifier	SETPREF		4078290	0					
ANR	4079889	ArgumentList	"""asm.comments"""		4078290	1					
ANR	4079890	Argument	"""asm.comments"""		4078290	0					
ANR	4079891	PrimaryExpression	"""asm.comments"""		4078290	0					
ANR	4079892	Argument	"""true"""		4078290	1					
ANR	4079893	PrimaryExpression	"""true"""		4078290	0					
ANR	4079894	Argument	"""Show comments in disassembly view"""		4078290	2					
ANR	4079895	PrimaryExpression	"""Show comments in disassembly view"""		4078290	0					
ANR	4079896	ExpressionStatement	"SETPREF ( ""asm.usercomments"" , ""false"" , ""Show user comments even if asm.comments is false"" )"	2920:1:85780:85869	4078290	110	True				
ANR	4079897	CallExpression	"SETPREF ( ""asm.usercomments"" , ""false"" , ""Show user comments even if asm.comments is false"" )"		4078290	0					
ANR	4079898	Callee	SETPREF		4078290	0					
ANR	4079899	Identifier	SETPREF		4078290	0					
ANR	4079900	ArgumentList	"""asm.usercomments"""		4078290	1					
ANR	4079901	Argument	"""asm.usercomments"""		4078290	0					
ANR	4079902	PrimaryExpression	"""asm.usercomments"""		4078290	0					
ANR	4079903	Argument	"""false"""		4078290	1					
ANR	4079904	PrimaryExpression	"""false"""		4078290	0					
ANR	4079905	Argument	"""Show user comments even if asm.comments is false"""		4078290	2					
ANR	4079906	PrimaryExpression	"""Show user comments even if asm.comments is false"""		4078290	0					
ANR	4079907	ExpressionStatement	"SETPREF ( ""asm.jmpsub"" , ""true"" , ""Always substitute jump, call and branch targets in disassembly"" )"	2921:1:85872:85968	4078290	111	True				
ANR	4079908	CallExpression	"SETPREF ( ""asm.jmpsub"" , ""true"" , ""Always substitute jump, call and branch targets in disassembly"" )"		4078290	0					
ANR	4079909	Callee	SETPREF		4078290	0					
ANR	4079910	Identifier	SETPREF		4078290	0					
ANR	4079911	ArgumentList	"""asm.jmpsub"""		4078290	1					
ANR	4079912	Argument	"""asm.jmpsub"""		4078290	0					
ANR	4079913	PrimaryExpression	"""asm.jmpsub"""		4078290	0					
ANR	4079914	Argument	"""true"""		4078290	1					
ANR	4079915	PrimaryExpression	"""true"""		4078290	0					
ANR	4079916	Argument	"""Always substitute jump, call and branch targets in disassembly"""		4078290	2					
ANR	4079917	PrimaryExpression	"""Always substitute jump, call and branch targets in disassembly"""		4078290	0					
ANR	4079918	ExpressionStatement	"SETPREF ( ""asm.hints"" , ""true"" , ""Disable all asm.hint* if false"" )"	2922:1:85971:86034	4078290	112	True				
ANR	4079919	CallExpression	"SETPREF ( ""asm.hints"" , ""true"" , ""Disable all asm.hint* if false"" )"		4078290	0					
ANR	4079920	Callee	SETPREF		4078290	0					
ANR	4079921	Identifier	SETPREF		4078290	0					
ANR	4079922	ArgumentList	"""asm.hints"""		4078290	1					
ANR	4079923	Argument	"""asm.hints"""		4078290	0					
ANR	4079924	PrimaryExpression	"""asm.hints"""		4078290	0					
ANR	4079925	Argument	"""true"""		4078290	1					
ANR	4079926	PrimaryExpression	"""true"""		4078290	0					
ANR	4079927	Argument	"""Disable all asm.hint* if false"""		4078290	2					
ANR	4079928	PrimaryExpression	"""Disable all asm.hint* if false"""		4078290	0					
ANR	4079929	ExpressionStatement	"SETPREF ( ""asm.hint.jmp"" , ""false"" , ""Show jump hints [numbers] in disasm"" )"	2923:1:86037:86109	4078290	113	True				
ANR	4079930	CallExpression	"SETPREF ( ""asm.hint.jmp"" , ""false"" , ""Show jump hints [numbers] in disasm"" )"		4078290	0					
ANR	4079931	Callee	SETPREF		4078290	0					
ANR	4079932	Identifier	SETPREF		4078290	0					
ANR	4079933	ArgumentList	"""asm.hint.jmp"""		4078290	1					
ANR	4079934	Argument	"""asm.hint.jmp"""		4078290	0					
ANR	4079935	PrimaryExpression	"""asm.hint.jmp"""		4078290	0					
ANR	4079936	Argument	"""false"""		4078290	1					
ANR	4079937	PrimaryExpression	"""false"""		4078290	0					
ANR	4079938	Argument	"""Show jump hints [numbers] in disasm"""		4078290	2					
ANR	4079939	PrimaryExpression	"""Show jump hints [numbers] in disasm"""		4078290	0					
ANR	4079940	ExpressionStatement	"SETPREF ( ""asm.hint.call"" , ""true"" , ""Show call hints [numbers] in disarm"" )"	2924:1:86112:86184	4078290	114	True				
ANR	4079941	CallExpression	"SETPREF ( ""asm.hint.call"" , ""true"" , ""Show call hints [numbers] in disarm"" )"		4078290	0					
ANR	4079942	Callee	SETPREF		4078290	0					
ANR	4079943	Identifier	SETPREF		4078290	0					
ANR	4079944	ArgumentList	"""asm.hint.call"""		4078290	1					
ANR	4079945	Argument	"""asm.hint.call"""		4078290	0					
ANR	4079946	PrimaryExpression	"""asm.hint.call"""		4078290	0					
ANR	4079947	Argument	"""true"""		4078290	1					
ANR	4079948	PrimaryExpression	"""true"""		4078290	0					
ANR	4079949	Argument	"""Show call hints [numbers] in disarm"""		4078290	2					
ANR	4079950	PrimaryExpression	"""Show call hints [numbers] in disarm"""		4078290	0					
ANR	4079951	ExpressionStatement	"SETPREF ( ""asm.hint.lea"" , ""false"" , ""Show LEA hints [numbers] in disasm"" )"	2925:1:86187:86258	4078290	115	True				
ANR	4079952	CallExpression	"SETPREF ( ""asm.hint.lea"" , ""false"" , ""Show LEA hints [numbers] in disasm"" )"		4078290	0					
ANR	4079953	Callee	SETPREF		4078290	0					
ANR	4079954	Identifier	SETPREF		4078290	0					
ANR	4079955	ArgumentList	"""asm.hint.lea"""		4078290	1					
ANR	4079956	Argument	"""asm.hint.lea"""		4078290	0					
ANR	4079957	PrimaryExpression	"""asm.hint.lea"""		4078290	0					
ANR	4079958	Argument	"""false"""		4078290	1					
ANR	4079959	PrimaryExpression	"""false"""		4078290	0					
ANR	4079960	Argument	"""Show LEA hints [numbers] in disasm"""		4078290	2					
ANR	4079961	PrimaryExpression	"""Show LEA hints [numbers] in disasm"""		4078290	0					
ANR	4079962	ExpressionStatement	"SETPREF ( ""asm.hint.emu"" , ""false"" , ""Show asm.emu hints [numbers] in disasm"" )"	2926:1:86261:86336	4078290	116	True				
ANR	4079963	CallExpression	"SETPREF ( ""asm.hint.emu"" , ""false"" , ""Show asm.emu hints [numbers] in disasm"" )"		4078290	0					
ANR	4079964	Callee	SETPREF		4078290	0					
ANR	4079965	Identifier	SETPREF		4078290	0					
ANR	4079966	ArgumentList	"""asm.hint.emu"""		4078290	1					
ANR	4079967	Argument	"""asm.hint.emu"""		4078290	0					
ANR	4079968	PrimaryExpression	"""asm.hint.emu"""		4078290	0					
ANR	4079969	Argument	"""false"""		4078290	1					
ANR	4079970	PrimaryExpression	"""false"""		4078290	0					
ANR	4079971	Argument	"""Show asm.emu hints [numbers] in disasm"""		4078290	2					
ANR	4079972	PrimaryExpression	"""Show asm.emu hints [numbers] in disasm"""		4078290	0					
ANR	4079973	ExpressionStatement	"SETPREF ( ""asm.hint.cdiv"" , ""false"" , ""Show CDIV hints optimization hint"" )"	2927:1:86339:86410	4078290	117	True				
ANR	4079974	CallExpression	"SETPREF ( ""asm.hint.cdiv"" , ""false"" , ""Show CDIV hints optimization hint"" )"		4078290	0					
ANR	4079975	Callee	SETPREF		4078290	0					
ANR	4079976	Identifier	SETPREF		4078290	0					
ANR	4079977	ArgumentList	"""asm.hint.cdiv"""		4078290	1					
ANR	4079978	Argument	"""asm.hint.cdiv"""		4078290	0					
ANR	4079979	PrimaryExpression	"""asm.hint.cdiv"""		4078290	0					
ANR	4079980	Argument	"""false"""		4078290	1					
ANR	4079981	PrimaryExpression	"""false"""		4078290	0					
ANR	4079982	Argument	"""Show CDIV hints optimization hint"""		4078290	2					
ANR	4079983	PrimaryExpression	"""Show CDIV hints optimization hint"""		4078290	0					
ANR	4079984	ExpressionStatement	"SETI ( ""asm.hint.pos"" , 1 , ""Shortcut hint position (-1, 0, 1)"" )"	2928:1:86413:86474	4078290	118	True				
ANR	4079985	CallExpression	"SETI ( ""asm.hint.pos"" , 1 , ""Shortcut hint position (-1, 0, 1)"" )"		4078290	0					
ANR	4079986	Callee	SETI		4078290	0					
ANR	4079987	Identifier	SETI		4078290	0					
ANR	4079988	ArgumentList	"""asm.hint.pos"""		4078290	1					
ANR	4079989	Argument	"""asm.hint.pos"""		4078290	0					
ANR	4079990	PrimaryExpression	"""asm.hint.pos"""		4078290	0					
ANR	4079991	Argument	1		4078290	1					
ANR	4079992	PrimaryExpression	1		4078290	0					
ANR	4079993	Argument	"""Shortcut hint position (-1, 0, 1)"""		4078290	2					
ANR	4079994	PrimaryExpression	"""Shortcut hint position (-1, 0, 1)"""		4078290	0					
ANR	4079995	ExpressionStatement	"SETPREF ( ""asm.slow"" , ""true"" , ""Perform slow analysis operations in disasm"" )"	2929:1:86477:86551	4078290	119	True				
ANR	4079996	CallExpression	"SETPREF ( ""asm.slow"" , ""true"" , ""Perform slow analysis operations in disasm"" )"		4078290	0					
ANR	4079997	Callee	SETPREF		4078290	0					
ANR	4079998	Identifier	SETPREF		4078290	0					
ANR	4079999	ArgumentList	"""asm.slow"""		4078290	1					
ANR	4080000	Argument	"""asm.slow"""		4078290	0					
ANR	4080001	PrimaryExpression	"""asm.slow"""		4078290	0					
ANR	4080002	Argument	"""true"""		4078290	1					
ANR	4080003	PrimaryExpression	"""true"""		4078290	0					
ANR	4080004	Argument	"""Perform slow analysis operations in disasm"""		4078290	2					
ANR	4080005	PrimaryExpression	"""Perform slow analysis operations in disasm"""		4078290	0					
ANR	4080006	ExpressionStatement	"SETPREF ( ""asm.decode"" , ""false"" , ""Use code analysis as a disassembler"" )"	2930:1:86554:86624	4078290	120	True				
ANR	4080007	CallExpression	"SETPREF ( ""asm.decode"" , ""false"" , ""Use code analysis as a disassembler"" )"		4078290	0					
ANR	4080008	Callee	SETPREF		4078290	0					
ANR	4080009	Identifier	SETPREF		4078290	0					
ANR	4080010	ArgumentList	"""asm.decode"""		4078290	1					
ANR	4080011	Argument	"""asm.decode"""		4078290	0					
ANR	4080012	PrimaryExpression	"""asm.decode"""		4078290	0					
ANR	4080013	Argument	"""false"""		4078290	1					
ANR	4080014	PrimaryExpression	"""false"""		4078290	0					
ANR	4080015	Argument	"""Use code analysis as a disassembler"""		4078290	2					
ANR	4080016	PrimaryExpression	"""Use code analysis as a disassembler"""		4078290	0					
ANR	4080017	ExpressionStatement	"SETICB ( ""asm.imm.arm"" , false , & cb_asm_armimm , ""Display # for immediates in ARM"" )"	2931:1:86627:86708	4078290	121	True				
ANR	4080018	CallExpression	"SETICB ( ""asm.imm.arm"" , false , & cb_asm_armimm , ""Display # for immediates in ARM"" )"		4078290	0					
ANR	4080019	Callee	SETICB		4078290	0					
ANR	4080020	Identifier	SETICB		4078290	0					
ANR	4080021	ArgumentList	"""asm.imm.arm"""		4078290	1					
ANR	4080022	Argument	"""asm.imm.arm"""		4078290	0					
ANR	4080023	PrimaryExpression	"""asm.imm.arm"""		4078290	0					
ANR	4080024	Argument	false		4078290	1					
ANR	4080025	Identifier	false		4078290	0					
ANR	4080026	Argument	& cb_asm_armimm		4078290	2					
ANR	4080027	UnaryOperationExpression	& cb_asm_armimm		4078290	0					
ANR	4080028	UnaryOperator	&		4078290	0					
ANR	4080029	Identifier	cb_asm_armimm		4078290	1					
ANR	4080030	Argument	"""Display # for immediates in ARM"""		4078290	3					
ANR	4080031	PrimaryExpression	"""Display # for immediates in ARM"""		4078290	0					
ANR	4080032	ExpressionStatement	"SETPREF ( ""asm.imm.str"" , ""true"" , ""Show immediates values as strings"" )"	2932:1:86711:86779	4078290	122	True				
ANR	4080033	CallExpression	"SETPREF ( ""asm.imm.str"" , ""true"" , ""Show immediates values as strings"" )"		4078290	0					
ANR	4080034	Callee	SETPREF		4078290	0					
ANR	4080035	Identifier	SETPREF		4078290	0					
ANR	4080036	ArgumentList	"""asm.imm.str"""		4078290	1					
ANR	4080037	Argument	"""asm.imm.str"""		4078290	0					
ANR	4080038	PrimaryExpression	"""asm.imm.str"""		4078290	0					
ANR	4080039	Argument	"""true"""		4078290	1					
ANR	4080040	PrimaryExpression	"""true"""		4078290	0					
ANR	4080041	Argument	"""Show immediates values as strings"""		4078290	2					
ANR	4080042	PrimaryExpression	"""Show immediates values as strings"""		4078290	0					
ANR	4080043	ExpressionStatement	"SETPREF ( ""asm.imm.trim"" , ""false"" , ""Remove all offsets and constants from disassembly"" )"	2933:1:86782:86868	4078290	123	True				
ANR	4080044	CallExpression	"SETPREF ( ""asm.imm.trim"" , ""false"" , ""Remove all offsets and constants from disassembly"" )"		4078290	0					
ANR	4080045	Callee	SETPREF		4078290	0					
ANR	4080046	Identifier	SETPREF		4078290	0					
ANR	4080047	ArgumentList	"""asm.imm.trim"""		4078290	1					
ANR	4080048	Argument	"""asm.imm.trim"""		4078290	0					
ANR	4080049	PrimaryExpression	"""asm.imm.trim"""		4078290	0					
ANR	4080050	Argument	"""false"""		4078290	1					
ANR	4080051	PrimaryExpression	"""false"""		4078290	0					
ANR	4080052	Argument	"""Remove all offsets and constants from disassembly"""		4078290	2					
ANR	4080053	PrimaryExpression	"""Remove all offsets and constants from disassembly"""		4078290	0					
ANR	4080054	ExpressionStatement	"SETPREF ( ""asm.indent"" , ""false"" , ""Indent disassembly based on reflines depth"" )"	2934:1:86871:86948	4078290	124	True				
ANR	4080055	CallExpression	"SETPREF ( ""asm.indent"" , ""false"" , ""Indent disassembly based on reflines depth"" )"		4078290	0					
ANR	4080056	Callee	SETPREF		4078290	0					
ANR	4080057	Identifier	SETPREF		4078290	0					
ANR	4080058	ArgumentList	"""asm.indent"""		4078290	1					
ANR	4080059	Argument	"""asm.indent"""		4078290	0					
ANR	4080060	PrimaryExpression	"""asm.indent"""		4078290	0					
ANR	4080061	Argument	"""false"""		4078290	1					
ANR	4080062	PrimaryExpression	"""false"""		4078290	0					
ANR	4080063	Argument	"""Indent disassembly based on reflines depth"""		4078290	2					
ANR	4080064	PrimaryExpression	"""Indent disassembly based on reflines depth"""		4078290	0					
ANR	4080065	ExpressionStatement	"SETI ( ""asm.indentspace"" , 2 , ""How many spaces to indent the code"" )"	2935:1:86951:87016	4078290	125	True				
ANR	4080066	CallExpression	"SETI ( ""asm.indentspace"" , 2 , ""How many spaces to indent the code"" )"		4078290	0					
ANR	4080067	Callee	SETI		4078290	0					
ANR	4080068	Identifier	SETI		4078290	0					
ANR	4080069	ArgumentList	"""asm.indentspace"""		4078290	1					
ANR	4080070	Argument	"""asm.indentspace"""		4078290	0					
ANR	4080071	PrimaryExpression	"""asm.indentspace"""		4078290	0					
ANR	4080072	Argument	2		4078290	1					
ANR	4080073	PrimaryExpression	2		4078290	0					
ANR	4080074	Argument	"""How many spaces to indent the code"""		4078290	2					
ANR	4080075	PrimaryExpression	"""How many spaces to indent the code"""		4078290	0					
ANR	4080076	ExpressionStatement	"SETPREF ( ""asm.dwarf"" , ""false"" , ""Show dwarf comment at disassembly"" )"	2936:1:87019:87086	4078290	126	True				
ANR	4080077	CallExpression	"SETPREF ( ""asm.dwarf"" , ""false"" , ""Show dwarf comment at disassembly"" )"		4078290	0					
ANR	4080078	Callee	SETPREF		4078290	0					
ANR	4080079	Identifier	SETPREF		4078290	0					
ANR	4080080	ArgumentList	"""asm.dwarf"""		4078290	1					
ANR	4080081	Argument	"""asm.dwarf"""		4078290	0					
ANR	4080082	PrimaryExpression	"""asm.dwarf"""		4078290	0					
ANR	4080083	Argument	"""false"""		4078290	1					
ANR	4080084	PrimaryExpression	"""false"""		4078290	0					
ANR	4080085	Argument	"""Show dwarf comment at disassembly"""		4078290	2					
ANR	4080086	PrimaryExpression	"""Show dwarf comment at disassembly"""		4078290	0					
ANR	4080087	ExpressionStatement	"SETPREF ( ""asm.dwarf.abspath"" , ""false"" , ""Show absolute path in asm.dwarf"" )"	2937:1:87089:87162	4078290	127	True				
ANR	4080088	CallExpression	"SETPREF ( ""asm.dwarf.abspath"" , ""false"" , ""Show absolute path in asm.dwarf"" )"		4078290	0					
ANR	4080089	Callee	SETPREF		4078290	0					
ANR	4080090	Identifier	SETPREF		4078290	0					
ANR	4080091	ArgumentList	"""asm.dwarf.abspath"""		4078290	1					
ANR	4080092	Argument	"""asm.dwarf.abspath"""		4078290	0					
ANR	4080093	PrimaryExpression	"""asm.dwarf.abspath"""		4078290	0					
ANR	4080094	Argument	"""false"""		4078290	1					
ANR	4080095	PrimaryExpression	"""false"""		4078290	0					
ANR	4080096	Argument	"""Show absolute path in asm.dwarf"""		4078290	2					
ANR	4080097	PrimaryExpression	"""Show absolute path in asm.dwarf"""		4078290	0					
ANR	4080098	ExpressionStatement	"SETPREF ( ""asm.dwarf.file"" , ""true"" , ""Show filename of asm.dwarf in pd"" )"	2938:1:87165:87235	4078290	128	True				
ANR	4080099	CallExpression	"SETPREF ( ""asm.dwarf.file"" , ""true"" , ""Show filename of asm.dwarf in pd"" )"		4078290	0					
ANR	4080100	Callee	SETPREF		4078290	0					
ANR	4080101	Identifier	SETPREF		4078290	0					
ANR	4080102	ArgumentList	"""asm.dwarf.file"""		4078290	1					
ANR	4080103	Argument	"""asm.dwarf.file"""		4078290	0					
ANR	4080104	PrimaryExpression	"""asm.dwarf.file"""		4078290	0					
ANR	4080105	Argument	"""true"""		4078290	1					
ANR	4080106	PrimaryExpression	"""true"""		4078290	0					
ANR	4080107	Argument	"""Show filename of asm.dwarf in pd"""		4078290	2					
ANR	4080108	PrimaryExpression	"""Show filename of asm.dwarf in pd"""		4078290	0					
ANR	4080109	ExpressionStatement	"SETPREF ( ""asm.esil"" , ""false"" , ""Show ESIL instead of mnemonic"" )"	2939:1:87238:87300	4078290	129	True				
ANR	4080110	CallExpression	"SETPREF ( ""asm.esil"" , ""false"" , ""Show ESIL instead of mnemonic"" )"		4078290	0					
ANR	4080111	Callee	SETPREF		4078290	0					
ANR	4080112	Identifier	SETPREF		4078290	0					
ANR	4080113	ArgumentList	"""asm.esil"""		4078290	1					
ANR	4080114	Argument	"""asm.esil"""		4078290	0					
ANR	4080115	PrimaryExpression	"""asm.esil"""		4078290	0					
ANR	4080116	Argument	"""false"""		4078290	1					
ANR	4080117	PrimaryExpression	"""false"""		4078290	0					
ANR	4080118	Argument	"""Show ESIL instead of mnemonic"""		4078290	2					
ANR	4080119	PrimaryExpression	"""Show ESIL instead of mnemonic"""		4078290	0					
ANR	4080120	ExpressionStatement	"SETPREF ( ""asm.nodup"" , ""false"" , ""Do not show dupped instructions (collapse disasm)"" )"	2940:1:87303:87386	4078290	130	True				
ANR	4080121	CallExpression	"SETPREF ( ""asm.nodup"" , ""false"" , ""Do not show dupped instructions (collapse disasm)"" )"		4078290	0					
ANR	4080122	Callee	SETPREF		4078290	0					
ANR	4080123	Identifier	SETPREF		4078290	0					
ANR	4080124	ArgumentList	"""asm.nodup"""		4078290	1					
ANR	4080125	Argument	"""asm.nodup"""		4078290	0					
ANR	4080126	PrimaryExpression	"""asm.nodup"""		4078290	0					
ANR	4080127	Argument	"""false"""		4078290	1					
ANR	4080128	PrimaryExpression	"""false"""		4078290	0					
ANR	4080129	Argument	"""Do not show dupped instructions (collapse disasm)"""		4078290	2					
ANR	4080130	PrimaryExpression	"""Do not show dupped instructions (collapse disasm)"""		4078290	0					
ANR	4080131	ExpressionStatement	"SETPREF ( ""asm.emu"" , ""false"" , ""Run ESIL emulation analysis on disasm"" )"	2941:1:87389:87458	4078290	131	True				
ANR	4080132	CallExpression	"SETPREF ( ""asm.emu"" , ""false"" , ""Run ESIL emulation analysis on disasm"" )"		4078290	0					
ANR	4080133	Callee	SETPREF		4078290	0					
ANR	4080134	Identifier	SETPREF		4078290	0					
ANR	4080135	ArgumentList	"""asm.emu"""		4078290	1					
ANR	4080136	Argument	"""asm.emu"""		4078290	0					
ANR	4080137	PrimaryExpression	"""asm.emu"""		4078290	0					
ANR	4080138	Argument	"""false"""		4078290	1					
ANR	4080139	PrimaryExpression	"""false"""		4078290	0					
ANR	4080140	Argument	"""Run ESIL emulation analysis on disasm"""		4078290	2					
ANR	4080141	PrimaryExpression	"""Run ESIL emulation analysis on disasm"""		4078290	0					
ANR	4080142	ExpressionStatement	"SETPREF ( ""emu.pre"" , ""false"" , ""Run ESIL emulation starting at the closest flag in pd"" )"	2942:1:87461:87546	4078290	132	True				
ANR	4080143	CallExpression	"SETPREF ( ""emu.pre"" , ""false"" , ""Run ESIL emulation starting at the closest flag in pd"" )"		4078290	0					
ANR	4080144	Callee	SETPREF		4078290	0					
ANR	4080145	Identifier	SETPREF		4078290	0					
ANR	4080146	ArgumentList	"""emu.pre"""		4078290	1					
ANR	4080147	Argument	"""emu.pre"""		4078290	0					
ANR	4080148	PrimaryExpression	"""emu.pre"""		4078290	0					
ANR	4080149	Argument	"""false"""		4078290	1					
ANR	4080150	PrimaryExpression	"""false"""		4078290	0					
ANR	4080151	Argument	"""Run ESIL emulation starting at the closest flag in pd"""		4078290	2					
ANR	4080152	PrimaryExpression	"""Run ESIL emulation starting at the closest flag in pd"""		4078290	0					
ANR	4080153	ExpressionStatement	"SETPREF ( ""asm.refptr"" , ""true"" , ""Show refpointer information in disasm"" )"	2943:1:87549:87620	4078290	133	True				
ANR	4080154	CallExpression	"SETPREF ( ""asm.refptr"" , ""true"" , ""Show refpointer information in disasm"" )"		4078290	0					
ANR	4080155	Callee	SETPREF		4078290	0					
ANR	4080156	Identifier	SETPREF		4078290	0					
ANR	4080157	ArgumentList	"""asm.refptr"""		4078290	1					
ANR	4080158	Argument	"""asm.refptr"""		4078290	0					
ANR	4080159	PrimaryExpression	"""asm.refptr"""		4078290	0					
ANR	4080160	Argument	"""true"""		4078290	1					
ANR	4080161	PrimaryExpression	"""true"""		4078290	0					
ANR	4080162	Argument	"""Show refpointer information in disasm"""		4078290	2					
ANR	4080163	PrimaryExpression	"""Show refpointer information in disasm"""		4078290	0					
ANR	4080164	ExpressionStatement	"SETPREF ( ""emu.lazy"" , ""false"" , ""Do not emulate all instructions with aae (optimization)"" )"	2944:1:87623:87711	4078290	134	True				
ANR	4080165	CallExpression	"SETPREF ( ""emu.lazy"" , ""false"" , ""Do not emulate all instructions with aae (optimization)"" )"		4078290	0					
ANR	4080166	Callee	SETPREF		4078290	0					
ANR	4080167	Identifier	SETPREF		4078290	0					
ANR	4080168	ArgumentList	"""emu.lazy"""		4078290	1					
ANR	4080169	Argument	"""emu.lazy"""		4078290	0					
ANR	4080170	PrimaryExpression	"""emu.lazy"""		4078290	0					
ANR	4080171	Argument	"""false"""		4078290	1					
ANR	4080172	PrimaryExpression	"""false"""		4078290	0					
ANR	4080173	Argument	"""Do not emulate all instructions with aae (optimization)"""		4078290	2					
ANR	4080174	PrimaryExpression	"""Do not emulate all instructions with aae (optimization)"""		4078290	0					
ANR	4080175	ExpressionStatement	"SETPREF ( ""emu.stack"" , ""false"" , ""Create a temporary fake stack when emulating in disasm (asm.emu)"" )"	2945:1:87714:87812	4078290	135	True				
ANR	4080176	CallExpression	"SETPREF ( ""emu.stack"" , ""false"" , ""Create a temporary fake stack when emulating in disasm (asm.emu)"" )"		4078290	0					
ANR	4080177	Callee	SETPREF		4078290	0					
ANR	4080178	Identifier	SETPREF		4078290	0					
ANR	4080179	ArgumentList	"""emu.stack"""		4078290	1					
ANR	4080180	Argument	"""emu.stack"""		4078290	0					
ANR	4080181	PrimaryExpression	"""emu.stack"""		4078290	0					
ANR	4080182	Argument	"""false"""		4078290	1					
ANR	4080183	PrimaryExpression	"""false"""		4078290	0					
ANR	4080184	Argument	"""Create a temporary fake stack when emulating in disasm (asm.emu)"""		4078290	2					
ANR	4080185	PrimaryExpression	"""Create a temporary fake stack when emulating in disasm (asm.emu)"""		4078290	0					
ANR	4080186	ExpressionStatement	"SETCB ( ""emu.str"" , ""false"" , & cb_emustr , ""Show only strings if any in the asm.emu output"" )"	2946:1:87815:87903	4078290	136	True				
ANR	4080187	CallExpression	"SETCB ( ""emu.str"" , ""false"" , & cb_emustr , ""Show only strings if any in the asm.emu output"" )"		4078290	0					
ANR	4080188	Callee	SETCB		4078290	0					
ANR	4080189	Identifier	SETCB		4078290	0					
ANR	4080190	ArgumentList	"""emu.str"""		4078290	1					
ANR	4080191	Argument	"""emu.str"""		4078290	0					
ANR	4080192	PrimaryExpression	"""emu.str"""		4078290	0					
ANR	4080193	Argument	"""false"""		4078290	1					
ANR	4080194	PrimaryExpression	"""false"""		4078290	0					
ANR	4080195	Argument	& cb_emustr		4078290	2					
ANR	4080196	UnaryOperationExpression	& cb_emustr		4078290	0					
ANR	4080197	UnaryOperator	&		4078290	0					
ANR	4080198	Identifier	cb_emustr		4078290	1					
ANR	4080199	Argument	"""Show only strings if any in the asm.emu output"""		4078290	3					
ANR	4080200	PrimaryExpression	"""Show only strings if any in the asm.emu output"""		4078290	0					
ANR	4080201	ExpressionStatement	"SETPREF ( ""emu.str.lea"" , ""true"" , ""Disable this in ARM64 code to remove some false positives"" )"	2947:1:87906:87998	4078290	137	True				
ANR	4080202	CallExpression	"SETPREF ( ""emu.str.lea"" , ""true"" , ""Disable this in ARM64 code to remove some false positives"" )"		4078290	0					
ANR	4080203	Callee	SETPREF		4078290	0					
ANR	4080204	Identifier	SETPREF		4078290	0					
ANR	4080205	ArgumentList	"""emu.str.lea"""		4078290	1					
ANR	4080206	Argument	"""emu.str.lea"""		4078290	0					
ANR	4080207	PrimaryExpression	"""emu.str.lea"""		4078290	0					
ANR	4080208	Argument	"""true"""		4078290	1					
ANR	4080209	PrimaryExpression	"""true"""		4078290	0					
ANR	4080210	Argument	"""Disable this in ARM64 code to remove some false positives"""		4078290	2					
ANR	4080211	PrimaryExpression	"""Disable this in ARM64 code to remove some false positives"""		4078290	0					
ANR	4080212	ExpressionStatement	"SETPREF ( ""emu.str.off"" , ""false"" , ""Always show offset when printing asm.emu strings"" )"	2948:1:88001:88085	4078290	138	True				
ANR	4080213	CallExpression	"SETPREF ( ""emu.str.off"" , ""false"" , ""Always show offset when printing asm.emu strings"" )"		4078290	0					
ANR	4080214	Callee	SETPREF		4078290	0					
ANR	4080215	Identifier	SETPREF		4078290	0					
ANR	4080216	ArgumentList	"""emu.str.off"""		4078290	1					
ANR	4080217	Argument	"""emu.str.off"""		4078290	0					
ANR	4080218	PrimaryExpression	"""emu.str.off"""		4078290	0					
ANR	4080219	Argument	"""false"""		4078290	1					
ANR	4080220	PrimaryExpression	"""false"""		4078290	0					
ANR	4080221	Argument	"""Always show offset when printing asm.emu strings"""		4078290	2					
ANR	4080222	PrimaryExpression	"""Always show offset when printing asm.emu strings"""		4078290	0					
ANR	4080223	ExpressionStatement	"SETPREF ( ""emu.str.inv"" , ""true"" , ""Color-invert emu.str strings"" )"	2949:1:88088:88151	4078290	139	True				
ANR	4080224	CallExpression	"SETPREF ( ""emu.str.inv"" , ""true"" , ""Color-invert emu.str strings"" )"		4078290	0					
ANR	4080225	Callee	SETPREF		4078290	0					
ANR	4080226	Identifier	SETPREF		4078290	0					
ANR	4080227	ArgumentList	"""emu.str.inv"""		4078290	1					
ANR	4080228	Argument	"""emu.str.inv"""		4078290	0					
ANR	4080229	PrimaryExpression	"""emu.str.inv"""		4078290	0					
ANR	4080230	Argument	"""true"""		4078290	1					
ANR	4080231	PrimaryExpression	"""true"""		4078290	0					
ANR	4080232	Argument	"""Color-invert emu.str strings"""		4078290	2					
ANR	4080233	PrimaryExpression	"""Color-invert emu.str strings"""		4078290	0					
ANR	4080234	ExpressionStatement	"SETPREF ( ""emu.str.flag"" , ""true"" , ""Also show flag (if any) for asm.emu string"" )"	2950:1:88154:88232	4078290	140	True				
ANR	4080235	CallExpression	"SETPREF ( ""emu.str.flag"" , ""true"" , ""Also show flag (if any) for asm.emu string"" )"		4078290	0					
ANR	4080236	Callee	SETPREF		4078290	0					
ANR	4080237	Identifier	SETPREF		4078290	0					
ANR	4080238	ArgumentList	"""emu.str.flag"""		4078290	1					
ANR	4080239	Argument	"""emu.str.flag"""		4078290	0					
ANR	4080240	PrimaryExpression	"""emu.str.flag"""		4078290	0					
ANR	4080241	Argument	"""true"""		4078290	1					
ANR	4080242	PrimaryExpression	"""true"""		4078290	0					
ANR	4080243	Argument	"""Also show flag (if any) for asm.emu string"""		4078290	2					
ANR	4080244	PrimaryExpression	"""Also show flag (if any) for asm.emu string"""		4078290	0					
ANR	4080245	ExpressionStatement	"SETPREF ( ""emu.write"" , ""false"" , ""Allow asm.emu to modify memory (WARNING)"" )"	2951:1:88235:88309	4078290	141	True				
ANR	4080246	CallExpression	"SETPREF ( ""emu.write"" , ""false"" , ""Allow asm.emu to modify memory (WARNING)"" )"		4078290	0					
ANR	4080247	Callee	SETPREF		4078290	0					
ANR	4080248	Identifier	SETPREF		4078290	0					
ANR	4080249	ArgumentList	"""emu.write"""		4078290	1					
ANR	4080250	Argument	"""emu.write"""		4078290	0					
ANR	4080251	PrimaryExpression	"""emu.write"""		4078290	0					
ANR	4080252	Argument	"""false"""		4078290	1					
ANR	4080253	PrimaryExpression	"""false"""		4078290	0					
ANR	4080254	Argument	"""Allow asm.emu to modify memory (WARNING)"""		4078290	2					
ANR	4080255	PrimaryExpression	"""Allow asm.emu to modify memory (WARNING)"""		4078290	0					
ANR	4080256	ExpressionStatement	"SETPREF ( ""emu.ssa"" , ""false"" , ""Perform SSA checks and show the ssa reg names as comments"" )"	2952:1:88312:88401	4078290	142	True				
ANR	4080257	CallExpression	"SETPREF ( ""emu.ssa"" , ""false"" , ""Perform SSA checks and show the ssa reg names as comments"" )"		4078290	0					
ANR	4080258	Callee	SETPREF		4078290	0					
ANR	4080259	Identifier	SETPREF		4078290	0					
ANR	4080260	ArgumentList	"""emu.ssa"""		4078290	1					
ANR	4080261	Argument	"""emu.ssa"""		4078290	0					
ANR	4080262	PrimaryExpression	"""emu.ssa"""		4078290	0					
ANR	4080263	Argument	"""false"""		4078290	1					
ANR	4080264	PrimaryExpression	"""false"""		4078290	0					
ANR	4080265	Argument	"""Perform SSA checks and show the ssa reg names as comments"""		4078290	2					
ANR	4080266	PrimaryExpression	"""Perform SSA checks and show the ssa reg names as comments"""		4078290	0					
ANR	4080267	ExpressionStatement	"n = NODECB ( ""emu.skip"" , ""ds"" , & cb_emuskip )"	2953:1:88404:88446	4078290	143	True				
ANR	4080268	AssignmentExpression	"n = NODECB ( ""emu.skip"" , ""ds"" , & cb_emuskip )"		4078290	0		=			
ANR	4080269	Identifier	n		4078290	0					
ANR	4080270	CallExpression	"NODECB ( ""emu.skip"" , ""ds"" , & cb_emuskip )"		4078290	1					
ANR	4080271	Callee	NODECB		4078290	0					
ANR	4080272	Identifier	NODECB		4078290	0					
ANR	4080273	ArgumentList	"""emu.skip"""		4078290	1					
ANR	4080274	Argument	"""emu.skip"""		4078290	0					
ANR	4080275	PrimaryExpression	"""emu.skip"""		4078290	0					
ANR	4080276	Argument	"""ds"""		4078290	1					
ANR	4080277	PrimaryExpression	"""ds"""		4078290	0					
ANR	4080278	Argument	& cb_emuskip		4078290	2					
ANR	4080279	UnaryOperationExpression	& cb_emuskip		4078290	0					
ANR	4080280	UnaryOperator	&		4078290	0					
ANR	4080281	Identifier	cb_emuskip		4078290	1					
ANR	4080282	ExpressionStatement	"SETDESC ( n , ""Skip metadata of given types in asm.emu"" )"	2954:1:88449:88503	4078290	144	True				
ANR	4080283	CallExpression	"SETDESC ( n , ""Skip metadata of given types in asm.emu"" )"		4078290	0					
ANR	4080284	Callee	SETDESC		4078290	0					
ANR	4080285	Identifier	SETDESC		4078290	0					
ANR	4080286	ArgumentList	n		4078290	1					
ANR	4080287	Argument	n		4078290	0					
ANR	4080288	Identifier	n		4078290	0					
ANR	4080289	Argument	"""Skip metadata of given types in asm.emu"""		4078290	1					
ANR	4080290	PrimaryExpression	"""Skip metadata of given types in asm.emu"""		4078290	0					
ANR	4080291	ExpressionStatement	"SETOPTIONS ( n , ""d"" , ""c"" , ""s"" , ""f"" , ""m"" , ""h"" , ""C"" , ""r"" , NULL )"	2955:1:88506:88566	4078290	145	True				
ANR	4080292	CallExpression	"SETOPTIONS ( n , ""d"" , ""c"" , ""s"" , ""f"" , ""m"" , ""h"" , ""C"" , ""r"" , NULL )"		4078290	0					
ANR	4080293	Callee	SETOPTIONS		4078290	0					
ANR	4080294	Identifier	SETOPTIONS		4078290	0					
ANR	4080295	ArgumentList	n		4078290	1					
ANR	4080296	Argument	n		4078290	0					
ANR	4080297	Identifier	n		4078290	0					
ANR	4080298	Argument	"""d"""		4078290	1					
ANR	4080299	PrimaryExpression	"""d"""		4078290	0					
ANR	4080300	Argument	"""c"""		4078290	2					
ANR	4080301	PrimaryExpression	"""c"""		4078290	0					
ANR	4080302	Argument	"""s"""		4078290	3					
ANR	4080303	PrimaryExpression	"""s"""		4078290	0					
ANR	4080304	Argument	"""f"""		4078290	4					
ANR	4080305	PrimaryExpression	"""f"""		4078290	0					
ANR	4080306	Argument	"""m"""		4078290	5					
ANR	4080307	PrimaryExpression	"""m"""		4078290	0					
ANR	4080308	Argument	"""h"""		4078290	6					
ANR	4080309	PrimaryExpression	"""h"""		4078290	0					
ANR	4080310	Argument	"""C"""		4078290	7					
ANR	4080311	PrimaryExpression	"""C"""		4078290	0					
ANR	4080312	Argument	"""r"""		4078290	8					
ANR	4080313	PrimaryExpression	"""r"""		4078290	0					
ANR	4080314	Argument	NULL		4078290	9					
ANR	4080315	Identifier	NULL		4078290	0					
ANR	4080316	ExpressionStatement	"SETPREF ( ""asm.filter"" , ""true"" , ""Replace numeric values by flags (e.g. 0x4003e0 -> sym.imp.printf)"" )"	2956:1:88569:88668	4078290	146	True				
ANR	4080317	CallExpression	"SETPREF ( ""asm.filter"" , ""true"" , ""Replace numeric values by flags (e.g. 0x4003e0 -> sym.imp.printf)"" )"		4078290	0					
ANR	4080318	Callee	SETPREF		4078290	0					
ANR	4080319	Identifier	SETPREF		4078290	0					
ANR	4080320	ArgumentList	"""asm.filter"""		4078290	1					
ANR	4080321	Argument	"""asm.filter"""		4078290	0					
ANR	4080322	PrimaryExpression	"""asm.filter"""		4078290	0					
ANR	4080323	Argument	"""true"""		4078290	1					
ANR	4080324	PrimaryExpression	"""true"""		4078290	0					
ANR	4080325	Argument	"""Replace numeric values by flags (e.g. 0x4003e0 -> sym.imp.printf)"""		4078290	2					
ANR	4080326	PrimaryExpression	"""Replace numeric values by flags (e.g. 0x4003e0 -> sym.imp.printf)"""		4078290	0					
ANR	4080327	ExpressionStatement	"SETPREF ( ""asm.strip"" , """" , ""strip all instructions given comma separated types"" )"	2957:1:88671:88750	4078290	147	True				
ANR	4080328	CallExpression	"SETPREF ( ""asm.strip"" , """" , ""strip all instructions given comma separated types"" )"		4078290	0					
ANR	4080329	Callee	SETPREF		4078290	0					
ANR	4080330	Identifier	SETPREF		4078290	0					
ANR	4080331	ArgumentList	"""asm.strip"""		4078290	1					
ANR	4080332	Argument	"""asm.strip"""		4078290	0					
ANR	4080333	PrimaryExpression	"""asm.strip"""		4078290	0					
ANR	4080334	Argument	""""""		4078290	1					
ANR	4080335	PrimaryExpression	""""""		4078290	0					
ANR	4080336	Argument	"""strip all instructions given comma separated types"""		4078290	2					
ANR	4080337	PrimaryExpression	"""strip all instructions given comma separated types"""		4078290	0					
ANR	4080338	ExpressionStatement	"SETPREF ( ""asm.optype"" , ""false"" , ""show opcode type next to the instruction bytes"" )"	2958:1:88753:88834	4078290	148	True				
ANR	4080339	CallExpression	"SETPREF ( ""asm.optype"" , ""false"" , ""show opcode type next to the instruction bytes"" )"		4078290	0					
ANR	4080340	Callee	SETPREF		4078290	0					
ANR	4080341	Identifier	SETPREF		4078290	0					
ANR	4080342	ArgumentList	"""asm.optype"""		4078290	1					
ANR	4080343	Argument	"""asm.optype"""		4078290	0					
ANR	4080344	PrimaryExpression	"""asm.optype"""		4078290	0					
ANR	4080345	Argument	"""false"""		4078290	1					
ANR	4080346	PrimaryExpression	"""false"""		4078290	0					
ANR	4080347	Argument	"""show opcode type next to the instruction bytes"""		4078290	2					
ANR	4080348	PrimaryExpression	"""show opcode type next to the instruction bytes"""		4078290	0					
ANR	4080349	ExpressionStatement	"SETPREF ( ""asm.lines.fcn"" , ""true"" , ""Show function boundary lines"" )"	2959:1:88837:88902	4078290	149	True				
ANR	4080350	CallExpression	"SETPREF ( ""asm.lines.fcn"" , ""true"" , ""Show function boundary lines"" )"		4078290	0					
ANR	4080351	Callee	SETPREF		4078290	0					
ANR	4080352	Identifier	SETPREF		4078290	0					
ANR	4080353	ArgumentList	"""asm.lines.fcn"""		4078290	1					
ANR	4080354	Argument	"""asm.lines.fcn"""		4078290	0					
ANR	4080355	PrimaryExpression	"""asm.lines.fcn"""		4078290	0					
ANR	4080356	Argument	"""true"""		4078290	1					
ANR	4080357	PrimaryExpression	"""true"""		4078290	0					
ANR	4080358	Argument	"""Show function boundary lines"""		4078290	2					
ANR	4080359	PrimaryExpression	"""Show function boundary lines"""		4078290	0					
ANR	4080360	ExpressionStatement	"SETPREF ( ""asm.flags"" , ""true"" , ""Show flags"" )"	2960:1:88905:88948	4078290	150	True				
ANR	4080361	CallExpression	"SETPREF ( ""asm.flags"" , ""true"" , ""Show flags"" )"		4078290	0					
ANR	4080362	Callee	SETPREF		4078290	0					
ANR	4080363	Identifier	SETPREF		4078290	0					
ANR	4080364	ArgumentList	"""asm.flags"""		4078290	1					
ANR	4080365	Argument	"""asm.flags"""		4078290	0					
ANR	4080366	PrimaryExpression	"""asm.flags"""		4078290	0					
ANR	4080367	Argument	"""true"""		4078290	1					
ANR	4080368	PrimaryExpression	"""true"""		4078290	0					
ANR	4080369	Argument	"""Show flags"""		4078290	2					
ANR	4080370	PrimaryExpression	"""Show flags"""		4078290	0					
ANR	4080371	ExpressionStatement	"SETICB ( ""asm.flags.maxname"" , 0 , & cb_maxname , ""Maximum length of flag name with smart chopping"" )"	2961:1:88951:89046	4078290	151	True				
ANR	4080372	CallExpression	"SETICB ( ""asm.flags.maxname"" , 0 , & cb_maxname , ""Maximum length of flag name with smart chopping"" )"		4078290	0					
ANR	4080373	Callee	SETICB		4078290	0					
ANR	4080374	Identifier	SETICB		4078290	0					
ANR	4080375	ArgumentList	"""asm.flags.maxname"""		4078290	1					
ANR	4080376	Argument	"""asm.flags.maxname"""		4078290	0					
ANR	4080377	PrimaryExpression	"""asm.flags.maxname"""		4078290	0					
ANR	4080378	Argument	0		4078290	1					
ANR	4080379	PrimaryExpression	0		4078290	0					
ANR	4080380	Argument	& cb_maxname		4078290	2					
ANR	4080381	UnaryOperationExpression	& cb_maxname		4078290	0					
ANR	4080382	UnaryOperator	&		4078290	0					
ANR	4080383	Identifier	cb_maxname		4078290	1					
ANR	4080384	Argument	"""Maximum length of flag name with smart chopping"""		4078290	3					
ANR	4080385	PrimaryExpression	"""Maximum length of flag name with smart chopping"""		4078290	0					
ANR	4080386	ExpressionStatement	"SETI ( ""asm.flags.limit"" , 0 , ""Maximum number of flags to show in a single offset"" )"	2962:1:89049:89130	4078290	152	True				
ANR	4080387	CallExpression	"SETI ( ""asm.flags.limit"" , 0 , ""Maximum number of flags to show in a single offset"" )"		4078290	0					
ANR	4080388	Callee	SETI		4078290	0					
ANR	4080389	Identifier	SETI		4078290	0					
ANR	4080390	ArgumentList	"""asm.flags.limit"""		4078290	1					
ANR	4080391	Argument	"""asm.flags.limit"""		4078290	0					
ANR	4080392	PrimaryExpression	"""asm.flags.limit"""		4078290	0					
ANR	4080393	Argument	0		4078290	1					
ANR	4080394	PrimaryExpression	0		4078290	0					
ANR	4080395	Argument	"""Maximum number of flags to show in a single offset"""		4078290	2					
ANR	4080396	PrimaryExpression	"""Maximum number of flags to show in a single offset"""		4078290	0					
ANR	4080397	ExpressionStatement	"SETPREF ( ""asm.flags.offset"" , ""false"" , ""Show offset in flags"" )"	2963:1:89133:89194	4078290	153	True				
ANR	4080398	CallExpression	"SETPREF ( ""asm.flags.offset"" , ""false"" , ""Show offset in flags"" )"		4078290	0					
ANR	4080399	Callee	SETPREF		4078290	0					
ANR	4080400	Identifier	SETPREF		4078290	0					
ANR	4080401	ArgumentList	"""asm.flags.offset"""		4078290	1					
ANR	4080402	Argument	"""asm.flags.offset"""		4078290	0					
ANR	4080403	PrimaryExpression	"""asm.flags.offset"""		4078290	0					
ANR	4080404	Argument	"""false"""		4078290	1					
ANR	4080405	PrimaryExpression	"""false"""		4078290	0					
ANR	4080406	Argument	"""Show offset in flags"""		4078290	2					
ANR	4080407	PrimaryExpression	"""Show offset in flags"""		4078290	0					
ANR	4080408	ExpressionStatement	"SETPREF ( ""asm.flags.inbytes"" , ""false"" , ""Display flags inside the bytes space"" )"	2964:1:89197:89276	4078290	154	True				
ANR	4080409	CallExpression	"SETPREF ( ""asm.flags.inbytes"" , ""false"" , ""Display flags inside the bytes space"" )"		4078290	0					
ANR	4080410	Callee	SETPREF		4078290	0					
ANR	4080411	Identifier	SETPREF		4078290	0					
ANR	4080412	ArgumentList	"""asm.flags.inbytes"""		4078290	1					
ANR	4080413	Argument	"""asm.flags.inbytes"""		4078290	0					
ANR	4080414	PrimaryExpression	"""asm.flags.inbytes"""		4078290	0					
ANR	4080415	Argument	"""false"""		4078290	1					
ANR	4080416	PrimaryExpression	"""false"""		4078290	0					
ANR	4080417	Argument	"""Display flags inside the bytes space"""		4078290	2					
ANR	4080418	PrimaryExpression	"""Display flags inside the bytes space"""		4078290	0					
ANR	4080419	ExpressionStatement	"SETPREF ( ""asm.flags.inline"" , ""false"" , ""Display flags in line separated by commas instead of newlines"" )"	2965:1:89279:89382	4078290	155	True				
ANR	4080420	CallExpression	"SETPREF ( ""asm.flags.inline"" , ""false"" , ""Display flags in line separated by commas instead of newlines"" )"		4078290	0					
ANR	4080421	Callee	SETPREF		4078290	0					
ANR	4080422	Identifier	SETPREF		4078290	0					
ANR	4080423	ArgumentList	"""asm.flags.inline"""		4078290	1					
ANR	4080424	Argument	"""asm.flags.inline"""		4078290	0					
ANR	4080425	PrimaryExpression	"""asm.flags.inline"""		4078290	0					
ANR	4080426	Argument	"""false"""		4078290	1					
ANR	4080427	PrimaryExpression	"""false"""		4078290	0					
ANR	4080428	Argument	"""Display flags in line separated by commas instead of newlines"""		4078290	2					
ANR	4080429	PrimaryExpression	"""Display flags in line separated by commas instead of newlines"""		4078290	0					
ANR	4080430	ExpressionStatement	"n = NODEICB ( ""asm.flags.middle"" , 2 , & cb_midflags )"	2966:1:89385:89434	4078290	156	True				
ANR	4080431	AssignmentExpression	"n = NODEICB ( ""asm.flags.middle"" , 2 , & cb_midflags )"		4078290	0		=			
ANR	4080432	Identifier	n		4078290	0					
ANR	4080433	CallExpression	"NODEICB ( ""asm.flags.middle"" , 2 , & cb_midflags )"		4078290	1					
ANR	4080434	Callee	NODEICB		4078290	0					
ANR	4080435	Identifier	NODEICB		4078290	0					
ANR	4080436	ArgumentList	"""asm.flags.middle"""		4078290	1					
ANR	4080437	Argument	"""asm.flags.middle"""		4078290	0					
ANR	4080438	PrimaryExpression	"""asm.flags.middle"""		4078290	0					
ANR	4080439	Argument	2		4078290	1					
ANR	4080440	PrimaryExpression	2		4078290	0					
ANR	4080441	Argument	& cb_midflags		4078290	2					
ANR	4080442	UnaryOperationExpression	& cb_midflags		4078290	0					
ANR	4080443	UnaryOperator	&		4078290	0					
ANR	4080444	Identifier	cb_midflags		4078290	1					
ANR	4080445	ExpressionStatement	"SETOPTIONS ( n , ""0 = do not show flag"" , ""1 = show without realign"" , ""2 = realign at middle flag"" , ""3 = realign at middle flag if sym.*"" , NULL )"	2967:1:89437:89580	4078290	157	True				
ANR	4080446	CallExpression	"SETOPTIONS ( n , ""0 = do not show flag"" , ""1 = show without realign"" , ""2 = realign at middle flag"" , ""3 = realign at middle flag if sym.*"" , NULL )"		4078290	0					
ANR	4080447	Callee	SETOPTIONS		4078290	0					
ANR	4080448	Identifier	SETOPTIONS		4078290	0					
ANR	4080449	ArgumentList	n		4078290	1					
ANR	4080450	Argument	n		4078290	0					
ANR	4080451	Identifier	n		4078290	0					
ANR	4080452	Argument	"""0 = do not show flag"""		4078290	1					
ANR	4080453	PrimaryExpression	"""0 = do not show flag"""		4078290	0					
ANR	4080454	Argument	"""1 = show without realign"""		4078290	2					
ANR	4080455	PrimaryExpression	"""1 = show without realign"""		4078290	0					
ANR	4080456	Argument	"""2 = realign at middle flag"""		4078290	3					
ANR	4080457	PrimaryExpression	"""2 = realign at middle flag"""		4078290	0					
ANR	4080458	Argument	"""3 = realign at middle flag if sym.*"""		4078290	4					
ANR	4080459	PrimaryExpression	"""3 = realign at middle flag if sym.*"""		4078290	0					
ANR	4080460	Argument	NULL		4078290	5					
ANR	4080461	Identifier	NULL		4078290	0					
ANR	4080462	ExpressionStatement	"SETDESC ( n , ""Realign disassembly if there is a flag in the middle of an instruction"" )"	2969:1:89583:89668	4078290	158	True				
ANR	4080463	CallExpression	"SETDESC ( n , ""Realign disassembly if there is a flag in the middle of an instruction"" )"		4078290	0					
ANR	4080464	Callee	SETDESC		4078290	0					
ANR	4080465	Identifier	SETDESC		4078290	0					
ANR	4080466	ArgumentList	n		4078290	1					
ANR	4080467	Argument	n		4078290	0					
ANR	4080468	Identifier	n		4078290	0					
ANR	4080469	Argument	"""Realign disassembly if there is a flag in the middle of an instruction"""		4078290	1					
ANR	4080470	PrimaryExpression	"""Realign disassembly if there is a flag in the middle of an instruction"""		4078290	0					
ANR	4080471	ExpressionStatement	"SETCB ( ""asm.flags.real"" , ""false"" , & cb_flag_realnames , ""Show flags' unfiltered realnames instead of names, except realnames from demangling"" )"	2970:1:89671:89819	4078290	159	True				
ANR	4080472	CallExpression	"SETCB ( ""asm.flags.real"" , ""false"" , & cb_flag_realnames , ""Show flags' unfiltered realnames instead of names, except realnames from demangling"" )"		4078290	0					
ANR	4080473	Callee	SETCB		4078290	0					
ANR	4080474	Identifier	SETCB		4078290	0					
ANR	4080475	ArgumentList	"""asm.flags.real"""		4078290	1					
ANR	4080476	Argument	"""asm.flags.real"""		4078290	0					
ANR	4080477	PrimaryExpression	"""asm.flags.real"""		4078290	0					
ANR	4080478	Argument	"""false"""		4078290	1					
ANR	4080479	PrimaryExpression	"""false"""		4078290	0					
ANR	4080480	Argument	& cb_flag_realnames		4078290	2					
ANR	4080481	UnaryOperationExpression	& cb_flag_realnames		4078290	0					
ANR	4080482	UnaryOperator	&		4078290	0					
ANR	4080483	Identifier	cb_flag_realnames		4078290	1					
ANR	4080484	Argument	"""Show flags' unfiltered realnames instead of names, except realnames from demangling"""		4078290	3					
ANR	4080485	PrimaryExpression	"""Show flags' unfiltered realnames instead of names, except realnames from demangling"""		4078290	0					
ANR	4080486	ExpressionStatement	"SETPREF ( ""asm.bb.line"" , ""false"" , ""Show empty line after every basic block"" )"	2972:1:89822:89897	4078290	160	True				
ANR	4080487	CallExpression	"SETPREF ( ""asm.bb.line"" , ""false"" , ""Show empty line after every basic block"" )"		4078290	0					
ANR	4080488	Callee	SETPREF		4078290	0					
ANR	4080489	Identifier	SETPREF		4078290	0					
ANR	4080490	ArgumentList	"""asm.bb.line"""		4078290	1					
ANR	4080491	Argument	"""asm.bb.line"""		4078290	0					
ANR	4080492	PrimaryExpression	"""asm.bb.line"""		4078290	0					
ANR	4080493	Argument	"""false"""		4078290	1					
ANR	4080494	PrimaryExpression	"""false"""		4078290	0					
ANR	4080495	Argument	"""Show empty line after every basic block"""		4078290	2					
ANR	4080496	PrimaryExpression	"""Show empty line after every basic block"""		4078290	0					
ANR	4080497	ExpressionStatement	"SETPREF ( ""asm.bb.middle"" , ""true"" , ""Realign disassembly if a basic block starts in the middle of an instruction"" )"	2973:1:89900:90012	4078290	161	True				
ANR	4080498	CallExpression	"SETPREF ( ""asm.bb.middle"" , ""true"" , ""Realign disassembly if a basic block starts in the middle of an instruction"" )"		4078290	0					
ANR	4080499	Callee	SETPREF		4078290	0					
ANR	4080500	Identifier	SETPREF		4078290	0					
ANR	4080501	ArgumentList	"""asm.bb.middle"""		4078290	1					
ANR	4080502	Argument	"""asm.bb.middle"""		4078290	0					
ANR	4080503	PrimaryExpression	"""asm.bb.middle"""		4078290	0					
ANR	4080504	Argument	"""true"""		4078290	1					
ANR	4080505	PrimaryExpression	"""true"""		4078290	0					
ANR	4080506	Argument	"""Realign disassembly if a basic block starts in the middle of an instruction"""		4078290	2					
ANR	4080507	PrimaryExpression	"""Realign disassembly if a basic block starts in the middle of an instruction"""		4078290	0					
ANR	4080508	ExpressionStatement	"SETPREF ( ""asm.lbytes"" , ""true"" , ""Align disasm bytes to left"" )"	2974:1:90015:90075	4078290	162	True				
ANR	4080509	CallExpression	"SETPREF ( ""asm.lbytes"" , ""true"" , ""Align disasm bytes to left"" )"		4078290	0					
ANR	4080510	Callee	SETPREF		4078290	0					
ANR	4080511	Identifier	SETPREF		4078290	0					
ANR	4080512	ArgumentList	"""asm.lbytes"""		4078290	1					
ANR	4080513	Argument	"""asm.lbytes"""		4078290	0					
ANR	4080514	PrimaryExpression	"""asm.lbytes"""		4078290	0					
ANR	4080515	Argument	"""true"""		4078290	1					
ANR	4080516	PrimaryExpression	"""true"""		4078290	0					
ANR	4080517	Argument	"""Align disasm bytes to left"""		4078290	2					
ANR	4080518	PrimaryExpression	"""Align disasm bytes to left"""		4078290	0					
ANR	4080519	ExpressionStatement	"SETPREF ( ""asm.lines"" , ""true"" , ""Show ASCII-art lines at disassembly"" )"	2975:1:90078:90146	4078290	163	True				
ANR	4080520	CallExpression	"SETPREF ( ""asm.lines"" , ""true"" , ""Show ASCII-art lines at disassembly"" )"		4078290	0					
ANR	4080521	Callee	SETPREF		4078290	0					
ANR	4080522	Identifier	SETPREF		4078290	0					
ANR	4080523	ArgumentList	"""asm.lines"""		4078290	1					
ANR	4080524	Argument	"""asm.lines"""		4078290	0					
ANR	4080525	PrimaryExpression	"""asm.lines"""		4078290	0					
ANR	4080526	Argument	"""true"""		4078290	1					
ANR	4080527	PrimaryExpression	"""true"""		4078290	0					
ANR	4080528	Argument	"""Show ASCII-art lines at disassembly"""		4078290	2					
ANR	4080529	PrimaryExpression	"""Show ASCII-art lines at disassembly"""		4078290	0					
ANR	4080530	ExpressionStatement	"SETPREF ( ""asm.lines.bb"" , ""true"" , ""Show flow lines at jumps"" )"	2976:1:90149:90209	4078290	164	True				
ANR	4080531	CallExpression	"SETPREF ( ""asm.lines.bb"" , ""true"" , ""Show flow lines at jumps"" )"		4078290	0					
ANR	4080532	Callee	SETPREF		4078290	0					
ANR	4080533	Identifier	SETPREF		4078290	0					
ANR	4080534	ArgumentList	"""asm.lines.bb"""		4078290	1					
ANR	4080535	Argument	"""asm.lines.bb"""		4078290	0					
ANR	4080536	PrimaryExpression	"""asm.lines.bb"""		4078290	0					
ANR	4080537	Argument	"""true"""		4078290	1					
ANR	4080538	PrimaryExpression	"""true"""		4078290	0					
ANR	4080539	Argument	"""Show flow lines at jumps"""		4078290	2					
ANR	4080540	PrimaryExpression	"""Show flow lines at jumps"""		4078290	0					
ANR	4080541	ExpressionStatement	"SETPREF ( ""asm.lines.call"" , ""false"" , ""Enable call lines"" )"	2977:1:90212:90268	4078290	165	True				
ANR	4080542	CallExpression	"SETPREF ( ""asm.lines.call"" , ""false"" , ""Enable call lines"" )"		4078290	0					
ANR	4080543	Callee	SETPREF		4078290	0					
ANR	4080544	Identifier	SETPREF		4078290	0					
ANR	4080545	ArgumentList	"""asm.lines.call"""		4078290	1					
ANR	4080546	Argument	"""asm.lines.call"""		4078290	0					
ANR	4080547	PrimaryExpression	"""asm.lines.call"""		4078290	0					
ANR	4080548	Argument	"""false"""		4078290	1					
ANR	4080549	PrimaryExpression	"""false"""		4078290	0					
ANR	4080550	Argument	"""Enable call lines"""		4078290	2					
ANR	4080551	PrimaryExpression	"""Enable call lines"""		4078290	0					
ANR	4080552	ExpressionStatement	"SETPREF ( ""asm.lines.ret"" , ""false"" , ""Show separator lines after ret"" )"	2978:1:90271:90339	4078290	166	True				
ANR	4080553	CallExpression	"SETPREF ( ""asm.lines.ret"" , ""false"" , ""Show separator lines after ret"" )"		4078290	0					
ANR	4080554	Callee	SETPREF		4078290	0					
ANR	4080555	Identifier	SETPREF		4078290	0					
ANR	4080556	ArgumentList	"""asm.lines.ret"""		4078290	1					
ANR	4080557	Argument	"""asm.lines.ret"""		4078290	0					
ANR	4080558	PrimaryExpression	"""asm.lines.ret"""		4078290	0					
ANR	4080559	Argument	"""false"""		4078290	1					
ANR	4080560	PrimaryExpression	"""false"""		4078290	0					
ANR	4080561	Argument	"""Show separator lines after ret"""		4078290	2					
ANR	4080562	PrimaryExpression	"""Show separator lines after ret"""		4078290	0					
ANR	4080563	ExpressionStatement	"SETPREF ( ""asm.lines.out"" , ""true"" , ""Show out of block lines"" )"	2979:1:90342:90402	4078290	167	True				
ANR	4080564	CallExpression	"SETPREF ( ""asm.lines.out"" , ""true"" , ""Show out of block lines"" )"		4078290	0					
ANR	4080565	Callee	SETPREF		4078290	0					
ANR	4080566	Identifier	SETPREF		4078290	0					
ANR	4080567	ArgumentList	"""asm.lines.out"""		4078290	1					
ANR	4080568	Argument	"""asm.lines.out"""		4078290	0					
ANR	4080569	PrimaryExpression	"""asm.lines.out"""		4078290	0					
ANR	4080570	Argument	"""true"""		4078290	1					
ANR	4080571	PrimaryExpression	"""true"""		4078290	0					
ANR	4080572	Argument	"""Show out of block lines"""		4078290	2					
ANR	4080573	PrimaryExpression	"""Show out of block lines"""		4078290	0					
ANR	4080574	ExpressionStatement	"SETPREF ( ""asm.lines.right"" , ""false"" , ""Show lines before opcode instead of offset"" )"	2980:1:90405:90487	4078290	168	True				
ANR	4080575	CallExpression	"SETPREF ( ""asm.lines.right"" , ""false"" , ""Show lines before opcode instead of offset"" )"		4078290	0					
ANR	4080576	Callee	SETPREF		4078290	0					
ANR	4080577	Identifier	SETPREF		4078290	0					
ANR	4080578	ArgumentList	"""asm.lines.right"""		4078290	1					
ANR	4080579	Argument	"""asm.lines.right"""		4078290	0					
ANR	4080580	PrimaryExpression	"""asm.lines.right"""		4078290	0					
ANR	4080581	Argument	"""false"""		4078290	1					
ANR	4080582	PrimaryExpression	"""false"""		4078290	0					
ANR	4080583	Argument	"""Show lines before opcode instead of offset"""		4078290	2					
ANR	4080584	PrimaryExpression	"""Show lines before opcode instead of offset"""		4078290	0					
ANR	4080585	ExpressionStatement	"SETPREF ( ""asm.lines.wide"" , ""false"" , ""Put a space between lines"" )"	2981:1:90490:90554	4078290	169	True				
ANR	4080586	CallExpression	"SETPREF ( ""asm.lines.wide"" , ""false"" , ""Put a space between lines"" )"		4078290	0					
ANR	4080587	Callee	SETPREF		4078290	0					
ANR	4080588	Identifier	SETPREF		4078290	0					
ANR	4080589	ArgumentList	"""asm.lines.wide"""		4078290	1					
ANR	4080590	Argument	"""asm.lines.wide"""		4078290	0					
ANR	4080591	PrimaryExpression	"""asm.lines.wide"""		4078290	0					
ANR	4080592	Argument	"""false"""		4078290	1					
ANR	4080593	PrimaryExpression	"""false"""		4078290	0					
ANR	4080594	Argument	"""Put a space between lines"""		4078290	2					
ANR	4080595	PrimaryExpression	"""Put a space between lines"""		4078290	0					
ANR	4080596	ExpressionStatement	"SETPREF ( ""asm.fcnsig"" , ""true"" , ""Show function signature in disasm"" )"	2982:1:90557:90624	4078290	170	True				
ANR	4080597	CallExpression	"SETPREF ( ""asm.fcnsig"" , ""true"" , ""Show function signature in disasm"" )"		4078290	0					
ANR	4080598	Callee	SETPREF		4078290	0					
ANR	4080599	Identifier	SETPREF		4078290	0					
ANR	4080600	ArgumentList	"""asm.fcnsig"""		4078290	1					
ANR	4080601	Argument	"""asm.fcnsig"""		4078290	0					
ANR	4080602	PrimaryExpression	"""asm.fcnsig"""		4078290	0					
ANR	4080603	Argument	"""true"""		4078290	1					
ANR	4080604	PrimaryExpression	"""true"""		4078290	0					
ANR	4080605	Argument	"""Show function signature in disasm"""		4078290	2					
ANR	4080606	PrimaryExpression	"""Show function signature in disasm"""		4078290	0					
ANR	4080607	ExpressionStatement	"SETICB ( ""asm.lines.width"" , 7 , & cb_asmlineswidth , ""Number of columns for program flow arrows"" )"	2983:1:90627:90720	4078290	171	True				
ANR	4080608	CallExpression	"SETICB ( ""asm.lines.width"" , 7 , & cb_asmlineswidth , ""Number of columns for program flow arrows"" )"		4078290	0					
ANR	4080609	Callee	SETICB		4078290	0					
ANR	4080610	Identifier	SETICB		4078290	0					
ANR	4080611	ArgumentList	"""asm.lines.width"""		4078290	1					
ANR	4080612	Argument	"""asm.lines.width"""		4078290	0					
ANR	4080613	PrimaryExpression	"""asm.lines.width"""		4078290	0					
ANR	4080614	Argument	7		4078290	1					
ANR	4080615	PrimaryExpression	7		4078290	0					
ANR	4080616	Argument	& cb_asmlineswidth		4078290	2					
ANR	4080617	UnaryOperationExpression	& cb_asmlineswidth		4078290	0					
ANR	4080618	UnaryOperator	&		4078290	0					
ANR	4080619	Identifier	cb_asmlineswidth		4078290	1					
ANR	4080620	Argument	"""Number of columns for program flow arrows"""		4078290	3					
ANR	4080621	PrimaryExpression	"""Number of columns for program flow arrows"""		4078290	0					
ANR	4080622	ExpressionStatement	"SETICB ( ""asm.var.submin"" , 0x100 , & cb_asmvarsubmin , ""Minimum value to substitute in instructions (asm.var.sub)"" )"	2984:1:90723:90834	4078290	172	True				
ANR	4080623	CallExpression	"SETICB ( ""asm.var.submin"" , 0x100 , & cb_asmvarsubmin , ""Minimum value to substitute in instructions (asm.var.sub)"" )"		4078290	0					
ANR	4080624	Callee	SETICB		4078290	0					
ANR	4080625	Identifier	SETICB		4078290	0					
ANR	4080626	ArgumentList	"""asm.var.submin"""		4078290	1					
ANR	4080627	Argument	"""asm.var.submin"""		4078290	0					
ANR	4080628	PrimaryExpression	"""asm.var.submin"""		4078290	0					
ANR	4080629	Argument	0x100		4078290	1					
ANR	4080630	PrimaryExpression	0x100		4078290	0					
ANR	4080631	Argument	& cb_asmvarsubmin		4078290	2					
ANR	4080632	UnaryOperationExpression	& cb_asmvarsubmin		4078290	0					
ANR	4080633	UnaryOperator	&		4078290	0					
ANR	4080634	Identifier	cb_asmvarsubmin		4078290	1					
ANR	4080635	Argument	"""Minimum value to substitute in instructions (asm.var.sub)"""		4078290	3					
ANR	4080636	PrimaryExpression	"""Minimum value to substitute in instructions (asm.var.sub)"""		4078290	0					
ANR	4080637	ExpressionStatement	"SETCB ( ""asm.tailsub"" , ""false"" , & cb_asmtailsub , ""Replace addresses with prefix .. syntax"" )"	2985:1:90837:90926	4078290	173	True				
ANR	4080638	CallExpression	"SETCB ( ""asm.tailsub"" , ""false"" , & cb_asmtailsub , ""Replace addresses with prefix .. syntax"" )"		4078290	0					
ANR	4080639	Callee	SETCB		4078290	0					
ANR	4080640	Identifier	SETCB		4078290	0					
ANR	4080641	ArgumentList	"""asm.tailsub"""		4078290	1					
ANR	4080642	Argument	"""asm.tailsub"""		4078290	0					
ANR	4080643	PrimaryExpression	"""asm.tailsub"""		4078290	0					
ANR	4080644	Argument	"""false"""		4078290	1					
ANR	4080645	PrimaryExpression	"""false"""		4078290	0					
ANR	4080646	Argument	& cb_asmtailsub		4078290	2					
ANR	4080647	UnaryOperationExpression	& cb_asmtailsub		4078290	0					
ANR	4080648	UnaryOperator	&		4078290	0					
ANR	4080649	Identifier	cb_asmtailsub		4078290	1					
ANR	4080650	Argument	"""Replace addresses with prefix .. syntax"""		4078290	3					
ANR	4080651	PrimaryExpression	"""Replace addresses with prefix .. syntax"""		4078290	0					
ANR	4080652	ExpressionStatement	"SETPREF ( ""asm.middle"" , ""false"" , ""Allow disassembling jumps in the middle of an instruction"" )"	2986:1:90929:91021	4078290	174	True				
ANR	4080653	CallExpression	"SETPREF ( ""asm.middle"" , ""false"" , ""Allow disassembling jumps in the middle of an instruction"" )"		4078290	0					
ANR	4080654	Callee	SETPREF		4078290	0					
ANR	4080655	Identifier	SETPREF		4078290	0					
ANR	4080656	ArgumentList	"""asm.middle"""		4078290	1					
ANR	4080657	Argument	"""asm.middle"""		4078290	0					
ANR	4080658	PrimaryExpression	"""asm.middle"""		4078290	0					
ANR	4080659	Argument	"""false"""		4078290	1					
ANR	4080660	PrimaryExpression	"""false"""		4078290	0					
ANR	4080661	Argument	"""Allow disassembling jumps in the middle of an instruction"""		4078290	2					
ANR	4080662	PrimaryExpression	"""Allow disassembling jumps in the middle of an instruction"""		4078290	0					
ANR	4080663	ExpressionStatement	"SETPREF ( ""asm.noisy"" , ""true"" , ""Show comments considered noisy but possibly useful"" )"	2987:1:91024:91107	4078290	175	True				
ANR	4080664	CallExpression	"SETPREF ( ""asm.noisy"" , ""true"" , ""Show comments considered noisy but possibly useful"" )"		4078290	0					
ANR	4080665	Callee	SETPREF		4078290	0					
ANR	4080666	Identifier	SETPREF		4078290	0					
ANR	4080667	ArgumentList	"""asm.noisy"""		4078290	1					
ANR	4080668	Argument	"""asm.noisy"""		4078290	0					
ANR	4080669	PrimaryExpression	"""asm.noisy"""		4078290	0					
ANR	4080670	Argument	"""true"""		4078290	1					
ANR	4080671	PrimaryExpression	"""true"""		4078290	0					
ANR	4080672	Argument	"""Show comments considered noisy but possibly useful"""		4078290	2					
ANR	4080673	PrimaryExpression	"""Show comments considered noisy but possibly useful"""		4078290	0					
ANR	4080674	ExpressionStatement	"SETPREF ( ""asm.offset"" , ""true"" , ""Show offsets at disassembly"" )"	2988:1:91110:91171	4078290	176	True				
ANR	4080675	CallExpression	"SETPREF ( ""asm.offset"" , ""true"" , ""Show offsets at disassembly"" )"		4078290	0					
ANR	4080676	Callee	SETPREF		4078290	0					
ANR	4080677	Identifier	SETPREF		4078290	0					
ANR	4080678	ArgumentList	"""asm.offset"""		4078290	1					
ANR	4080679	Argument	"""asm.offset"""		4078290	0					
ANR	4080680	PrimaryExpression	"""asm.offset"""		4078290	0					
ANR	4080681	Argument	"""true"""		4078290	1					
ANR	4080682	PrimaryExpression	"""true"""		4078290	0					
ANR	4080683	Argument	"""Show offsets at disassembly"""		4078290	2					
ANR	4080684	PrimaryExpression	"""Show offsets at disassembly"""		4078290	0					
ANR	4080685	ExpressionStatement	"SETPREF ( ""scr.square"" , ""true"" , ""Use square pixels or not"" )"	2989:1:91174:91232	4078290	177	True				
ANR	4080686	CallExpression	"SETPREF ( ""scr.square"" , ""true"" , ""Use square pixels or not"" )"		4078290	0					
ANR	4080687	Callee	SETPREF		4078290	0					
ANR	4080688	Identifier	SETPREF		4078290	0					
ANR	4080689	ArgumentList	"""scr.square"""		4078290	1					
ANR	4080690	Argument	"""scr.square"""		4078290	0					
ANR	4080691	PrimaryExpression	"""scr.square"""		4078290	0					
ANR	4080692	Argument	"""true"""		4078290	1					
ANR	4080693	PrimaryExpression	"""true"""		4078290	0					
ANR	4080694	Argument	"""Use square pixels or not"""		4078290	2					
ANR	4080695	PrimaryExpression	"""Use square pixels or not"""		4078290	0					
ANR	4080696	ExpressionStatement	"SETCB ( ""scr.prompt.vi"" , ""false"" , & cb_scr_vi , ""Use vi mode for input prompt"" )"	2990:1:91235:91311	4078290	178	True				
ANR	4080697	CallExpression	"SETCB ( ""scr.prompt.vi"" , ""false"" , & cb_scr_vi , ""Use vi mode for input prompt"" )"		4078290	0					
ANR	4080698	Callee	SETCB		4078290	0					
ANR	4080699	Identifier	SETCB		4078290	0					
ANR	4080700	ArgumentList	"""scr.prompt.vi"""		4078290	1					
ANR	4080701	Argument	"""scr.prompt.vi"""		4078290	0					
ANR	4080702	PrimaryExpression	"""scr.prompt.vi"""		4078290	0					
ANR	4080703	Argument	"""false"""		4078290	1					
ANR	4080704	PrimaryExpression	"""false"""		4078290	0					
ANR	4080705	Argument	& cb_scr_vi		4078290	2					
ANR	4080706	UnaryOperationExpression	& cb_scr_vi		4078290	0					
ANR	4080707	UnaryOperator	&		4078290	0					
ANR	4080708	Identifier	cb_scr_vi		4078290	1					
ANR	4080709	Argument	"""Use vi mode for input prompt"""		4078290	3					
ANR	4080710	PrimaryExpression	"""Use vi mode for input prompt"""		4078290	0					
ANR	4080711	ExpressionStatement	"SETCB ( ""scr.wideoff"" , ""false"" , & cb_scr_wideoff , ""Adjust offsets to match asm.bits"" )"	2991:1:91314:91397	4078290	179	True				
ANR	4080712	CallExpression	"SETCB ( ""scr.wideoff"" , ""false"" , & cb_scr_wideoff , ""Adjust offsets to match asm.bits"" )"		4078290	0					
ANR	4080713	Callee	SETCB		4078290	0					
ANR	4080714	Identifier	SETCB		4078290	0					
ANR	4080715	ArgumentList	"""scr.wideoff"""		4078290	1					
ANR	4080716	Argument	"""scr.wideoff"""		4078290	0					
ANR	4080717	PrimaryExpression	"""scr.wideoff"""		4078290	0					
ANR	4080718	Argument	"""false"""		4078290	1					
ANR	4080719	PrimaryExpression	"""false"""		4078290	0					
ANR	4080720	Argument	& cb_scr_wideoff		4078290	2					
ANR	4080721	UnaryOperationExpression	& cb_scr_wideoff		4078290	0					
ANR	4080722	UnaryOperator	&		4078290	0					
ANR	4080723	Identifier	cb_scr_wideoff		4078290	1					
ANR	4080724	Argument	"""Adjust offsets to match asm.bits"""		4078290	3					
ANR	4080725	PrimaryExpression	"""Adjust offsets to match asm.bits"""		4078290	0					
ANR	4080726	ExpressionStatement	"SETCB ( ""scr.rainbow"" , ""false"" , & cb_scrrainbow , ""Shows rainbow colors depending of address"" )"	2992:1:91400:91491	4078290	180	True				
ANR	4080727	CallExpression	"SETCB ( ""scr.rainbow"" , ""false"" , & cb_scrrainbow , ""Shows rainbow colors depending of address"" )"		4078290	0					
ANR	4080728	Callee	SETCB		4078290	0					
ANR	4080729	Identifier	SETCB		4078290	0					
ANR	4080730	ArgumentList	"""scr.rainbow"""		4078290	1					
ANR	4080731	Argument	"""scr.rainbow"""		4078290	0					
ANR	4080732	PrimaryExpression	"""scr.rainbow"""		4078290	0					
ANR	4080733	Argument	"""false"""		4078290	1					
ANR	4080734	PrimaryExpression	"""false"""		4078290	0					
ANR	4080735	Argument	& cb_scrrainbow		4078290	2					
ANR	4080736	UnaryOperationExpression	& cb_scrrainbow		4078290	0					
ANR	4080737	UnaryOperator	&		4078290	0					
ANR	4080738	Identifier	cb_scrrainbow		4078290	1					
ANR	4080739	Argument	"""Shows rainbow colors depending of address"""		4078290	3					
ANR	4080740	PrimaryExpression	"""Shows rainbow colors depending of address"""		4078290	0					
ANR	4080741	ExpressionStatement	"SETCB ( ""scr.last"" , ""true"" , & cb_scrlast , ""Cache last output after flush to make _ command work (disable for performance)"" )"	2993:1:91494:91615	4078290	181	True				
ANR	4080742	CallExpression	"SETCB ( ""scr.last"" , ""true"" , & cb_scrlast , ""Cache last output after flush to make _ command work (disable for performance)"" )"		4078290	0					
ANR	4080743	Callee	SETCB		4078290	0					
ANR	4080744	Identifier	SETCB		4078290	0					
ANR	4080745	ArgumentList	"""scr.last"""		4078290	1					
ANR	4080746	Argument	"""scr.last"""		4078290	0					
ANR	4080747	PrimaryExpression	"""scr.last"""		4078290	0					
ANR	4080748	Argument	"""true"""		4078290	1					
ANR	4080749	PrimaryExpression	"""true"""		4078290	0					
ANR	4080750	Argument	& cb_scrlast		4078290	2					
ANR	4080751	UnaryOperationExpression	& cb_scrlast		4078290	0					
ANR	4080752	UnaryOperator	&		4078290	0					
ANR	4080753	Identifier	cb_scrlast		4078290	1					
ANR	4080754	Argument	"""Cache last output after flush to make _ command work (disable for performance)"""		4078290	3					
ANR	4080755	PrimaryExpression	"""Cache last output after flush to make _ command work (disable for performance)"""		4078290	0					
ANR	4080756	ExpressionStatement	"SETPREF ( ""asm.reloff"" , ""false"" , ""Show relative offsets instead of absolute address in disasm"" )"	2994:1:91618:91712	4078290	182	True				
ANR	4080757	CallExpression	"SETPREF ( ""asm.reloff"" , ""false"" , ""Show relative offsets instead of absolute address in disasm"" )"		4078290	0					
ANR	4080758	Callee	SETPREF		4078290	0					
ANR	4080759	Identifier	SETPREF		4078290	0					
ANR	4080760	ArgumentList	"""asm.reloff"""		4078290	1					
ANR	4080761	Argument	"""asm.reloff"""		4078290	0					
ANR	4080762	PrimaryExpression	"""asm.reloff"""		4078290	0					
ANR	4080763	Argument	"""false"""		4078290	1					
ANR	4080764	PrimaryExpression	"""false"""		4078290	0					
ANR	4080765	Argument	"""Show relative offsets instead of absolute address in disasm"""		4078290	2					
ANR	4080766	PrimaryExpression	"""Show relative offsets instead of absolute address in disasm"""		4078290	0					
ANR	4080767	ExpressionStatement	"SETPREF ( ""asm.reloff.flags"" , ""false"" , ""Show relative offsets to flags (not only functions)"" )"	2995:1:91715:91807	4078290	183	True				
ANR	4080768	CallExpression	"SETPREF ( ""asm.reloff.flags"" , ""false"" , ""Show relative offsets to flags (not only functions)"" )"		4078290	0					
ANR	4080769	Callee	SETPREF		4078290	0					
ANR	4080770	Identifier	SETPREF		4078290	0					
ANR	4080771	ArgumentList	"""asm.reloff.flags"""		4078290	1					
ANR	4080772	Argument	"""asm.reloff.flags"""		4078290	0					
ANR	4080773	PrimaryExpression	"""asm.reloff.flags"""		4078290	0					
ANR	4080774	Argument	"""false"""		4078290	1					
ANR	4080775	PrimaryExpression	"""false"""		4078290	0					
ANR	4080776	Argument	"""Show relative offsets to flags (not only functions)"""		4078290	2					
ANR	4080777	PrimaryExpression	"""Show relative offsets to flags (not only functions)"""		4078290	0					
ANR	4080778	ExpressionStatement	"SETPREF ( ""asm.section"" , ""false"" , ""Show section name before offset"" )"	2996:1:91810:91877	4078290	184	True				
ANR	4080779	CallExpression	"SETPREF ( ""asm.section"" , ""false"" , ""Show section name before offset"" )"		4078290	0					
ANR	4080780	Callee	SETPREF		4078290	0					
ANR	4080781	Identifier	SETPREF		4078290	0					
ANR	4080782	ArgumentList	"""asm.section"""		4078290	1					
ANR	4080783	Argument	"""asm.section"""		4078290	0					
ANR	4080784	PrimaryExpression	"""asm.section"""		4078290	0					
ANR	4080785	Argument	"""false"""		4078290	1					
ANR	4080786	PrimaryExpression	"""false"""		4078290	0					
ANR	4080787	Argument	"""Show section name before offset"""		4078290	2					
ANR	4080788	PrimaryExpression	"""Show section name before offset"""		4078290	0					
ANR	4080789	ExpressionStatement	"SETPREF ( ""asm.section.perm"" , ""false"" , ""Show section permissions in the disasm"" )"	2997:1:91880:91959	4078290	185	True				
ANR	4080790	CallExpression	"SETPREF ( ""asm.section.perm"" , ""false"" , ""Show section permissions in the disasm"" )"		4078290	0					
ANR	4080791	Callee	SETPREF		4078290	0					
ANR	4080792	Identifier	SETPREF		4078290	0					
ANR	4080793	ArgumentList	"""asm.section.perm"""		4078290	1					
ANR	4080794	Argument	"""asm.section.perm"""		4078290	0					
ANR	4080795	PrimaryExpression	"""asm.section.perm"""		4078290	0					
ANR	4080796	Argument	"""false"""		4078290	1					
ANR	4080797	PrimaryExpression	"""false"""		4078290	0					
ANR	4080798	Argument	"""Show section permissions in the disasm"""		4078290	2					
ANR	4080799	PrimaryExpression	"""Show section permissions in the disasm"""		4078290	0					
ANR	4080800	ExpressionStatement	"SETPREF ( ""asm.section.name"" , ""true"" , ""Show section name in the disasm"" )"	2998:1:91962:92033	4078290	186	True				
ANR	4080801	CallExpression	"SETPREF ( ""asm.section.name"" , ""true"" , ""Show section name in the disasm"" )"		4078290	0					
ANR	4080802	Callee	SETPREF		4078290	0					
ANR	4080803	Identifier	SETPREF		4078290	0					
ANR	4080804	ArgumentList	"""asm.section.name"""		4078290	1					
ANR	4080805	Argument	"""asm.section.name"""		4078290	0					
ANR	4080806	PrimaryExpression	"""asm.section.name"""		4078290	0					
ANR	4080807	Argument	"""true"""		4078290	1					
ANR	4080808	PrimaryExpression	"""true"""		4078290	0					
ANR	4080809	Argument	"""Show section name in the disasm"""		4078290	2					
ANR	4080810	PrimaryExpression	"""Show section name in the disasm"""		4078290	0					
ANR	4080811	ExpressionStatement	"SETI ( ""asm.section.col"" , 20 , ""Columns width to show asm.section"" )"	2999:1:92036:92101	4078290	187	True				
ANR	4080812	CallExpression	"SETI ( ""asm.section.col"" , 20 , ""Columns width to show asm.section"" )"		4078290	0					
ANR	4080813	Callee	SETI		4078290	0					
ANR	4080814	Identifier	SETI		4078290	0					
ANR	4080815	ArgumentList	"""asm.section.col"""		4078290	1					
ANR	4080816	Argument	"""asm.section.col"""		4078290	0					
ANR	4080817	PrimaryExpression	"""asm.section.col"""		4078290	0					
ANR	4080818	Argument	20		4078290	1					
ANR	4080819	PrimaryExpression	20		4078290	0					
ANR	4080820	Argument	"""Columns width to show asm.section"""		4078290	2					
ANR	4080821	PrimaryExpression	"""Columns width to show asm.section"""		4078290	0					
ANR	4080822	ExpressionStatement	"SETCB ( ""asm.section.sub"" , ""false"" , & cb_asmsecsub , ""Show offsets in disasm prefixed with section/map name"" )"	3000:1:92104:92210	4078290	188	True				
ANR	4080823	CallExpression	"SETCB ( ""asm.section.sub"" , ""false"" , & cb_asmsecsub , ""Show offsets in disasm prefixed with section/map name"" )"		4078290	0					
ANR	4080824	Callee	SETCB		4078290	0					
ANR	4080825	Identifier	SETCB		4078290	0					
ANR	4080826	ArgumentList	"""asm.section.sub"""		4078290	1					
ANR	4080827	Argument	"""asm.section.sub"""		4078290	0					
ANR	4080828	PrimaryExpression	"""asm.section.sub"""		4078290	0					
ANR	4080829	Argument	"""false"""		4078290	1					
ANR	4080830	PrimaryExpression	"""false"""		4078290	0					
ANR	4080831	Argument	& cb_asmsecsub		4078290	2					
ANR	4080832	UnaryOperationExpression	& cb_asmsecsub		4078290	0					
ANR	4080833	UnaryOperator	&		4078290	0					
ANR	4080834	Identifier	cb_asmsecsub		4078290	1					
ANR	4080835	Argument	"""Show offsets in disasm prefixed with section/map name"""		4078290	3					
ANR	4080836	PrimaryExpression	"""Show offsets in disasm prefixed with section/map name"""		4078290	0					
ANR	4080837	ExpressionStatement	"SETCB ( ""asm.pseudo"" , ""false"" , & cb_asmpseudo , ""Enable pseudo syntax"" )"	3001:1:92213:92281	4078290	189	True				
ANR	4080838	CallExpression	"SETCB ( ""asm.pseudo"" , ""false"" , & cb_asmpseudo , ""Enable pseudo syntax"" )"		4078290	0					
ANR	4080839	Callee	SETCB		4078290	0					
ANR	4080840	Identifier	SETCB		4078290	0					
ANR	4080841	ArgumentList	"""asm.pseudo"""		4078290	1					
ANR	4080842	Argument	"""asm.pseudo"""		4078290	0					
ANR	4080843	PrimaryExpression	"""asm.pseudo"""		4078290	0					
ANR	4080844	Argument	"""false"""		4078290	1					
ANR	4080845	PrimaryExpression	"""false"""		4078290	0					
ANR	4080846	Argument	& cb_asmpseudo		4078290	2					
ANR	4080847	UnaryOperationExpression	& cb_asmpseudo		4078290	0					
ANR	4080848	UnaryOperator	&		4078290	0					
ANR	4080849	Identifier	cb_asmpseudo		4078290	1					
ANR	4080850	Argument	"""Enable pseudo syntax"""		4078290	3					
ANR	4080851	PrimaryExpression	"""Enable pseudo syntax"""		4078290	0					
ANR	4080852	ExpressionStatement	"SETPREF ( ""asm.size"" , ""false"" , ""Show size of opcodes in disassembly (pd)"" )"	3002:1:92284:92357	4078290	190	True				
ANR	4080853	CallExpression	"SETPREF ( ""asm.size"" , ""false"" , ""Show size of opcodes in disassembly (pd)"" )"		4078290	0					
ANR	4080854	Callee	SETPREF		4078290	0					
ANR	4080855	Identifier	SETPREF		4078290	0					
ANR	4080856	ArgumentList	"""asm.size"""		4078290	1					
ANR	4080857	Argument	"""asm.size"""		4078290	0					
ANR	4080858	PrimaryExpression	"""asm.size"""		4078290	0					
ANR	4080859	Argument	"""false"""		4078290	1					
ANR	4080860	PrimaryExpression	"""false"""		4078290	0					
ANR	4080861	Argument	"""Show size of opcodes in disassembly (pd)"""		4078290	2					
ANR	4080862	PrimaryExpression	"""Show size of opcodes in disassembly (pd)"""		4078290	0					
ANR	4080863	ExpressionStatement	"SETPREF ( ""asm.stackptr"" , ""false"" , ""Show stack pointer at disassembly"" )"	3003:1:92360:92430	4078290	191	True				
ANR	4080864	CallExpression	"SETPREF ( ""asm.stackptr"" , ""false"" , ""Show stack pointer at disassembly"" )"		4078290	0					
ANR	4080865	Callee	SETPREF		4078290	0					
ANR	4080866	Identifier	SETPREF		4078290	0					
ANR	4080867	ArgumentList	"""asm.stackptr"""		4078290	1					
ANR	4080868	Argument	"""asm.stackptr"""		4078290	0					
ANR	4080869	PrimaryExpression	"""asm.stackptr"""		4078290	0					
ANR	4080870	Argument	"""false"""		4078290	1					
ANR	4080871	PrimaryExpression	"""false"""		4078290	0					
ANR	4080872	Argument	"""Show stack pointer at disassembly"""		4078290	2					
ANR	4080873	PrimaryExpression	"""Show stack pointer at disassembly"""		4078290	0					
ANR	4080874	ExpressionStatement	"SETPREF ( ""asm.cyclespace"" , ""false"" , ""Indent instructions depending on CPU-cycles"" )"	3004:1:92433:92515	4078290	192	True				
ANR	4080875	CallExpression	"SETPREF ( ""asm.cyclespace"" , ""false"" , ""Indent instructions depending on CPU-cycles"" )"		4078290	0					
ANR	4080876	Callee	SETPREF		4078290	0					
ANR	4080877	Identifier	SETPREF		4078290	0					
ANR	4080878	ArgumentList	"""asm.cyclespace"""		4078290	1					
ANR	4080879	Argument	"""asm.cyclespace"""		4078290	0					
ANR	4080880	PrimaryExpression	"""asm.cyclespace"""		4078290	0					
ANR	4080881	Argument	"""false"""		4078290	1					
ANR	4080882	PrimaryExpression	"""false"""		4078290	0					
ANR	4080883	Argument	"""Indent instructions depending on CPU-cycles"""		4078290	2					
ANR	4080884	PrimaryExpression	"""Indent instructions depending on CPU-cycles"""		4078290	0					
ANR	4080885	ExpressionStatement	"SETPREF ( ""asm.cycles"" , ""false"" , ""Show CPU-cycles taken by instruction at disassembly"" )"	3005:1:92518:92604	4078290	193	True				
ANR	4080886	CallExpression	"SETPREF ( ""asm.cycles"" , ""false"" , ""Show CPU-cycles taken by instruction at disassembly"" )"		4078290	0					
ANR	4080887	Callee	SETPREF		4078290	0					
ANR	4080888	Identifier	SETPREF		4078290	0					
ANR	4080889	ArgumentList	"""asm.cycles"""		4078290	1					
ANR	4080890	Argument	"""asm.cycles"""		4078290	0					
ANR	4080891	PrimaryExpression	"""asm.cycles"""		4078290	0					
ANR	4080892	Argument	"""false"""		4078290	1					
ANR	4080893	PrimaryExpression	"""false"""		4078290	0					
ANR	4080894	Argument	"""Show CPU-cycles taken by instruction at disassembly"""		4078290	2					
ANR	4080895	PrimaryExpression	"""Show CPU-cycles taken by instruction at disassembly"""		4078290	0					
ANR	4080896	ExpressionStatement	"SETI ( ""asm.tabs"" , 0 , ""Use tabs in disassembly"" )"	3006:1:92607:92654	4078290	194	True				
ANR	4080897	CallExpression	"SETI ( ""asm.tabs"" , 0 , ""Use tabs in disassembly"" )"		4078290	0					
ANR	4080898	Callee	SETI		4078290	0					
ANR	4080899	Identifier	SETI		4078290	0					
ANR	4080900	ArgumentList	"""asm.tabs"""		4078290	1					
ANR	4080901	Argument	"""asm.tabs"""		4078290	0					
ANR	4080902	PrimaryExpression	"""asm.tabs"""		4078290	0					
ANR	4080903	Argument	0		4078290	1					
ANR	4080904	PrimaryExpression	0		4078290	0					
ANR	4080905	Argument	"""Use tabs in disassembly"""		4078290	2					
ANR	4080906	PrimaryExpression	"""Use tabs in disassembly"""		4078290	0					
ANR	4080907	ExpressionStatement	"SETPREF ( ""asm.tabs.once"" , ""false"" , ""Only tabulate the opcode, not the arguments"" )"	3007:1:92657:92738	4078290	195	True				
ANR	4080908	CallExpression	"SETPREF ( ""asm.tabs.once"" , ""false"" , ""Only tabulate the opcode, not the arguments"" )"		4078290	0					
ANR	4080909	Callee	SETPREF		4078290	0					
ANR	4080910	Identifier	SETPREF		4078290	0					
ANR	4080911	ArgumentList	"""asm.tabs.once"""		4078290	1					
ANR	4080912	Argument	"""asm.tabs.once"""		4078290	0					
ANR	4080913	PrimaryExpression	"""asm.tabs.once"""		4078290	0					
ANR	4080914	Argument	"""false"""		4078290	1					
ANR	4080915	PrimaryExpression	"""false"""		4078290	0					
ANR	4080916	Argument	"""Only tabulate the opcode, not the arguments"""		4078290	2					
ANR	4080917	PrimaryExpression	"""Only tabulate the opcode, not the arguments"""		4078290	0					
ANR	4080918	ExpressionStatement	"SETI ( ""asm.tabs.off"" , 0 , ""tabulate spaces after the offset"" )"	3008:1:92741:92801	4078290	196	True				
ANR	4080919	CallExpression	"SETI ( ""asm.tabs.off"" , 0 , ""tabulate spaces after the offset"" )"		4078290	0					
ANR	4080920	Callee	SETI		4078290	0					
ANR	4080921	Identifier	SETI		4078290	0					
ANR	4080922	ArgumentList	"""asm.tabs.off"""		4078290	1					
ANR	4080923	Argument	"""asm.tabs.off"""		4078290	0					
ANR	4080924	PrimaryExpression	"""asm.tabs.off"""		4078290	0					
ANR	4080925	Argument	0		4078290	1					
ANR	4080926	PrimaryExpression	0		4078290	0					
ANR	4080927	Argument	"""tabulate spaces after the offset"""		4078290	2					
ANR	4080928	PrimaryExpression	"""tabulate spaces after the offset"""		4078290	0					
ANR	4080929	ExpressionStatement	"SETPREF ( ""asm.trace"" , ""false"" , ""Show execution traces for each opcode"" )"	3009:1:92804:92875	4078290	197	True				
ANR	4080930	CallExpression	"SETPREF ( ""asm.trace"" , ""false"" , ""Show execution traces for each opcode"" )"		4078290	0					
ANR	4080931	Callee	SETPREF		4078290	0					
ANR	4080932	Identifier	SETPREF		4078290	0					
ANR	4080933	ArgumentList	"""asm.trace"""		4078290	1					
ANR	4080934	Argument	"""asm.trace"""		4078290	0					
ANR	4080935	PrimaryExpression	"""asm.trace"""		4078290	0					
ANR	4080936	Argument	"""false"""		4078290	1					
ANR	4080937	PrimaryExpression	"""false"""		4078290	0					
ANR	4080938	Argument	"""Show execution traces for each opcode"""		4078290	2					
ANR	4080939	PrimaryExpression	"""Show execution traces for each opcode"""		4078290	0					
ANR	4080940	ExpressionStatement	"SETPREF ( ""asm.tracespace"" , ""false"" , ""Indent disassembly with trace.count information"" )"	3010:1:92878:92964	4078290	198	True				
ANR	4080941	CallExpression	"SETPREF ( ""asm.tracespace"" , ""false"" , ""Indent disassembly with trace.count information"" )"		4078290	0					
ANR	4080942	Callee	SETPREF		4078290	0					
ANR	4080943	Identifier	SETPREF		4078290	0					
ANR	4080944	ArgumentList	"""asm.tracespace"""		4078290	1					
ANR	4080945	Argument	"""asm.tracespace"""		4078290	0					
ANR	4080946	PrimaryExpression	"""asm.tracespace"""		4078290	0					
ANR	4080947	Argument	"""false"""		4078290	1					
ANR	4080948	PrimaryExpression	"""false"""		4078290	0					
ANR	4080949	Argument	"""Indent disassembly with trace.count information"""		4078290	2					
ANR	4080950	PrimaryExpression	"""Indent disassembly with trace.count information"""		4078290	0					
ANR	4080951	ExpressionStatement	"SETPREF ( ""asm.ucase"" , ""false"" , ""Use uppercase syntax at disassembly"" )"	3011:1:92967:93036	4078290	199	True				
ANR	4080952	CallExpression	"SETPREF ( ""asm.ucase"" , ""false"" , ""Use uppercase syntax at disassembly"" )"		4078290	0					
ANR	4080953	Callee	SETPREF		4078290	0					
ANR	4080954	Identifier	SETPREF		4078290	0					
ANR	4080955	ArgumentList	"""asm.ucase"""		4078290	1					
ANR	4080956	Argument	"""asm.ucase"""		4078290	0					
ANR	4080957	PrimaryExpression	"""asm.ucase"""		4078290	0					
ANR	4080958	Argument	"""false"""		4078290	1					
ANR	4080959	PrimaryExpression	"""false"""		4078290	0					
ANR	4080960	Argument	"""Use uppercase syntax at disassembly"""		4078290	2					
ANR	4080961	PrimaryExpression	"""Use uppercase syntax at disassembly"""		4078290	0					
ANR	4080962	ExpressionStatement	"SETPREF ( ""asm.capitalize"" , ""false"" , ""Use camelcase at disassembly"" )"	3012:1:93039:93106	4078290	200	True				
ANR	4080963	CallExpression	"SETPREF ( ""asm.capitalize"" , ""false"" , ""Use camelcase at disassembly"" )"		4078290	0					
ANR	4080964	Callee	SETPREF		4078290	0					
ANR	4080965	Identifier	SETPREF		4078290	0					
ANR	4080966	ArgumentList	"""asm.capitalize"""		4078290	1					
ANR	4080967	Argument	"""asm.capitalize"""		4078290	0					
ANR	4080968	PrimaryExpression	"""asm.capitalize"""		4078290	0					
ANR	4080969	Argument	"""false"""		4078290	1					
ANR	4080970	PrimaryExpression	"""false"""		4078290	0					
ANR	4080971	Argument	"""Use camelcase at disassembly"""		4078290	2					
ANR	4080972	PrimaryExpression	"""Use camelcase at disassembly"""		4078290	0					
ANR	4080973	ExpressionStatement	"SETPREF ( ""asm.var"" , ""true"" , ""Show local function variables in disassembly"" )"	3013:1:93109:93184	4078290	201	True				
ANR	4080974	CallExpression	"SETPREF ( ""asm.var"" , ""true"" , ""Show local function variables in disassembly"" )"		4078290	0					
ANR	4080975	Callee	SETPREF		4078290	0					
ANR	4080976	Identifier	SETPREF		4078290	0					
ANR	4080977	ArgumentList	"""asm.var"""		4078290	1					
ANR	4080978	Argument	"""asm.var"""		4078290	0					
ANR	4080979	PrimaryExpression	"""asm.var"""		4078290	0					
ANR	4080980	Argument	"""true"""		4078290	1					
ANR	4080981	PrimaryExpression	"""true"""		4078290	0					
ANR	4080982	Argument	"""Show local function variables in disassembly"""		4078290	2					
ANR	4080983	PrimaryExpression	"""Show local function variables in disassembly"""		4078290	0					
ANR	4080984	ExpressionStatement	"SETPREF ( ""asm.var.access"" , ""false"" , ""Show accesses of local variables"" )"	3014:1:93187:93258	4078290	202	True				
ANR	4080985	CallExpression	"SETPREF ( ""asm.var.access"" , ""false"" , ""Show accesses of local variables"" )"		4078290	0					
ANR	4080986	Callee	SETPREF		4078290	0					
ANR	4080987	Identifier	SETPREF		4078290	0					
ANR	4080988	ArgumentList	"""asm.var.access"""		4078290	1					
ANR	4080989	Argument	"""asm.var.access"""		4078290	0					
ANR	4080990	PrimaryExpression	"""asm.var.access"""		4078290	0					
ANR	4080991	Argument	"""false"""		4078290	1					
ANR	4080992	PrimaryExpression	"""false"""		4078290	0					
ANR	4080993	Argument	"""Show accesses of local variables"""		4078290	2					
ANR	4080994	PrimaryExpression	"""Show accesses of local variables"""		4078290	0					
ANR	4080995	ExpressionStatement	"SETPREF ( ""asm.var.sub"" , ""true"" , ""Substitute variables in disassembly"" )"	3015:1:93261:93331	4078290	203	True				
ANR	4080996	CallExpression	"SETPREF ( ""asm.var.sub"" , ""true"" , ""Substitute variables in disassembly"" )"		4078290	0					
ANR	4080997	Callee	SETPREF		4078290	0					
ANR	4080998	Identifier	SETPREF		4078290	0					
ANR	4080999	ArgumentList	"""asm.var.sub"""		4078290	1					
ANR	4081000	Argument	"""asm.var.sub"""		4078290	0					
ANR	4081001	PrimaryExpression	"""asm.var.sub"""		4078290	0					
ANR	4081002	Argument	"""true"""		4078290	1					
ANR	4081003	PrimaryExpression	"""true"""		4078290	0					
ANR	4081004	Argument	"""Substitute variables in disassembly"""		4078290	2					
ANR	4081005	PrimaryExpression	"""Substitute variables in disassembly"""		4078290	0					
ANR	4081006	ExpressionStatement	"SETI ( ""asm.var.summary"" , 0 , ""Show variables summary instead of full list in disasm (0, 1, 2)"" )"	3016:1:93334:93428	4078290	204	True				
ANR	4081007	CallExpression	"SETI ( ""asm.var.summary"" , 0 , ""Show variables summary instead of full list in disasm (0, 1, 2)"" )"		4078290	0					
ANR	4081008	Callee	SETI		4078290	0					
ANR	4081009	Identifier	SETI		4078290	0					
ANR	4081010	ArgumentList	"""asm.var.summary"""		4078290	1					
ANR	4081011	Argument	"""asm.var.summary"""		4078290	0					
ANR	4081012	PrimaryExpression	"""asm.var.summary"""		4078290	0					
ANR	4081013	Argument	0		4078290	1					
ANR	4081014	PrimaryExpression	0		4078290	0					
ANR	4081015	Argument	"""Show variables summary instead of full list in disasm (0, 1, 2)"""		4078290	2					
ANR	4081016	PrimaryExpression	"""Show variables summary instead of full list in disasm (0, 1, 2)"""		4078290	0					
ANR	4081017	ExpressionStatement	"SETPREF ( ""asm.var.subonly"" , ""true"" , ""Substitute the entire variable expression with the local variable name (e.g. [local10h] instead of [ebp+local10h])"" )"	3017:1:93431:93584	4078290	205	True				
ANR	4081018	CallExpression	"SETPREF ( ""asm.var.subonly"" , ""true"" , ""Substitute the entire variable expression with the local variable name (e.g. [local10h] instead of [ebp+local10h])"" )"		4078290	0					
ANR	4081019	Callee	SETPREF		4078290	0					
ANR	4081020	Identifier	SETPREF		4078290	0					
ANR	4081021	ArgumentList	"""asm.var.subonly"""		4078290	1					
ANR	4081022	Argument	"""asm.var.subonly"""		4078290	0					
ANR	4081023	PrimaryExpression	"""asm.var.subonly"""		4078290	0					
ANR	4081024	Argument	"""true"""		4078290	1					
ANR	4081025	PrimaryExpression	"""true"""		4078290	0					
ANR	4081026	Argument	"""Substitute the entire variable expression with the local variable name (e.g. [local10h] instead of [ebp+local10h])"""		4078290	2					
ANR	4081027	PrimaryExpression	"""Substitute the entire variable expression with the local variable name (e.g. [local10h] instead of [ebp+local10h])"""		4078290	0					
ANR	4081028	ExpressionStatement	"SETPREF ( ""asm.regsub"" , ""false"" , ""Substitute register names with their associated role name (drp~=)"" )"	3018:1:93587:93687	4078290	206	True				
ANR	4081029	CallExpression	"SETPREF ( ""asm.regsub"" , ""false"" , ""Substitute register names with their associated role name (drp~=)"" )"		4078290	0					
ANR	4081030	Callee	SETPREF		4078290	0					
ANR	4081031	Identifier	SETPREF		4078290	0					
ANR	4081032	ArgumentList	"""asm.regsub"""		4078290	1					
ANR	4081033	Argument	"""asm.regsub"""		4078290	0					
ANR	4081034	PrimaryExpression	"""asm.regsub"""		4078290	0					
ANR	4081035	Argument	"""false"""		4078290	1					
ANR	4081036	PrimaryExpression	"""false"""		4078290	0					
ANR	4081037	Argument	"""Substitute register names with their associated role name (drp~=)"""		4078290	2					
ANR	4081038	PrimaryExpression	"""Substitute register names with their associated role name (drp~=)"""		4078290	0					
ANR	4081039	ExpressionStatement	"SETPREF ( ""asm.relsub"" , ""true"" , ""Substitute pc relative expressions in disasm"" )"	3019:1:93690:93768	4078290	207	True				
ANR	4081040	CallExpression	"SETPREF ( ""asm.relsub"" , ""true"" , ""Substitute pc relative expressions in disasm"" )"		4078290	0					
ANR	4081041	Callee	SETPREF		4078290	0					
ANR	4081042	Identifier	SETPREF		4078290	0					
ANR	4081043	ArgumentList	"""asm.relsub"""		4078290	1					
ANR	4081044	Argument	"""asm.relsub"""		4078290	0					
ANR	4081045	PrimaryExpression	"""asm.relsub"""		4078290	0					
ANR	4081046	Argument	"""true"""		4078290	1					
ANR	4081047	PrimaryExpression	"""true"""		4078290	0					
ANR	4081048	Argument	"""Substitute pc relative expressions in disasm"""		4078290	2					
ANR	4081049	PrimaryExpression	"""Substitute pc relative expressions in disasm"""		4078290	0					
ANR	4081050	ExpressionStatement	"SETPREF ( ""asm.cmt.fold"" , ""false"" , ""Fold comments, toggle with Vz"" )"	3020:1:93771:93837	4078290	208	True				
ANR	4081051	CallExpression	"SETPREF ( ""asm.cmt.fold"" , ""false"" , ""Fold comments, toggle with Vz"" )"		4078290	0					
ANR	4081052	Callee	SETPREF		4078290	0					
ANR	4081053	Identifier	SETPREF		4078290	0					
ANR	4081054	ArgumentList	"""asm.cmt.fold"""		4078290	1					
ANR	4081055	Argument	"""asm.cmt.fold"""		4078290	0					
ANR	4081056	PrimaryExpression	"""asm.cmt.fold"""		4078290	0					
ANR	4081057	Argument	"""false"""		4078290	1					
ANR	4081058	PrimaryExpression	"""false"""		4078290	0					
ANR	4081059	Argument	"""Fold comments, toggle with Vz"""		4078290	2					
ANR	4081060	PrimaryExpression	"""Fold comments, toggle with Vz"""		4078290	0					
ANR	4081061	ExpressionStatement	"SETPREF ( ""asm.family"" , ""false"" , ""Show family name in disasm"" )"	3021:1:93840:93901	4078290	209	True				
ANR	4081062	CallExpression	"SETPREF ( ""asm.family"" , ""false"" , ""Show family name in disasm"" )"		4078290	0					
ANR	4081063	Callee	SETPREF		4078290	0					
ANR	4081064	Identifier	SETPREF		4078290	0					
ANR	4081065	ArgumentList	"""asm.family"""		4078290	1					
ANR	4081066	Argument	"""asm.family"""		4078290	0					
ANR	4081067	PrimaryExpression	"""asm.family"""		4078290	0					
ANR	4081068	Argument	"""false"""		4078290	1					
ANR	4081069	PrimaryExpression	"""false"""		4078290	0					
ANR	4081070	Argument	"""Show family name in disasm"""		4078290	2					
ANR	4081071	PrimaryExpression	"""Show family name in disasm"""		4078290	0					
ANR	4081072	ExpressionStatement	"SETPREF ( ""asm.symbol"" , ""false"" , ""Show symbol+delta instead of absolute offset"" )"	3022:1:93904:93983	4078290	210	True				
ANR	4081073	CallExpression	"SETPREF ( ""asm.symbol"" , ""false"" , ""Show symbol+delta instead of absolute offset"" )"		4078290	0					
ANR	4081074	Callee	SETPREF		4078290	0					
ANR	4081075	Identifier	SETPREF		4078290	0					
ANR	4081076	ArgumentList	"""asm.symbol"""		4078290	1					
ANR	4081077	Argument	"""asm.symbol"""		4078290	0					
ANR	4081078	PrimaryExpression	"""asm.symbol"""		4078290	0					
ANR	4081079	Argument	"""false"""		4078290	1					
ANR	4081080	PrimaryExpression	"""false"""		4078290	0					
ANR	4081081	Argument	"""Show symbol+delta instead of absolute offset"""		4078290	2					
ANR	4081082	PrimaryExpression	"""Show symbol+delta instead of absolute offset"""		4078290	0					
ANR	4081083	ExpressionStatement	"SETPREF ( ""asm.anal"" , ""false"" , ""Analyze code and refs while disassembling (see anal.strings)"" )"	3023:1:93986:94079	4078290	211	True				
ANR	4081084	CallExpression	"SETPREF ( ""asm.anal"" , ""false"" , ""Analyze code and refs while disassembling (see anal.strings)"" )"		4078290	0					
ANR	4081085	Callee	SETPREF		4078290	0					
ANR	4081086	Identifier	SETPREF		4078290	0					
ANR	4081087	ArgumentList	"""asm.anal"""		4078290	1					
ANR	4081088	Argument	"""asm.anal"""		4078290	0					
ANR	4081089	PrimaryExpression	"""asm.anal"""		4078290	0					
ANR	4081090	Argument	"""false"""		4078290	1					
ANR	4081091	PrimaryExpression	"""false"""		4078290	0					
ANR	4081092	Argument	"""Analyze code and refs while disassembling (see anal.strings)"""		4078290	2					
ANR	4081093	PrimaryExpression	"""Analyze code and refs while disassembling (see anal.strings)"""		4078290	0					
ANR	4081094	ExpressionStatement	"SETI ( ""asm.symbol.col"" , 40 , ""Columns width to show asm.section"" )"	3024:1:94082:94146	4078290	212	True				
ANR	4081095	CallExpression	"SETI ( ""asm.symbol.col"" , 40 , ""Columns width to show asm.section"" )"		4078290	0					
ANR	4081096	Callee	SETI		4078290	0					
ANR	4081097	Identifier	SETI		4078290	0					
ANR	4081098	ArgumentList	"""asm.symbol.col"""		4078290	1					
ANR	4081099	Argument	"""asm.symbol.col"""		4078290	0					
ANR	4081100	PrimaryExpression	"""asm.symbol.col"""		4078290	0					
ANR	4081101	Argument	40		4078290	1					
ANR	4081102	PrimaryExpression	40		4078290	0					
ANR	4081103	Argument	"""Columns width to show asm.section"""		4078290	2					
ANR	4081104	PrimaryExpression	"""Columns width to show asm.section"""		4078290	0					
ANR	4081105	ExpressionStatement	"SETCB ( ""asm.assembler"" , """" , & cb_asmassembler , ""Set the plugin name to use when assembling"" )"	3025:1:94149:94240	4078290	213	True				
ANR	4081106	CallExpression	"SETCB ( ""asm.assembler"" , """" , & cb_asmassembler , ""Set the plugin name to use when assembling"" )"		4078290	0					
ANR	4081107	Callee	SETCB		4078290	0					
ANR	4081108	Identifier	SETCB		4078290	0					
ANR	4081109	ArgumentList	"""asm.assembler"""		4078290	1					
ANR	4081110	Argument	"""asm.assembler"""		4078290	0					
ANR	4081111	PrimaryExpression	"""asm.assembler"""		4078290	0					
ANR	4081112	Argument	""""""		4078290	1					
ANR	4081113	PrimaryExpression	""""""		4078290	0					
ANR	4081114	Argument	& cb_asmassembler		4078290	2					
ANR	4081115	UnaryOperationExpression	& cb_asmassembler		4078290	0					
ANR	4081116	UnaryOperator	&		4078290	0					
ANR	4081117	Identifier	cb_asmassembler		4078290	1					
ANR	4081118	Argument	"""Set the plugin name to use when assembling"""		4078290	3					
ANR	4081119	PrimaryExpression	"""Set the plugin name to use when assembling"""		4078290	0					
ANR	4081120	ExpressionStatement	"SETPREF ( ""asm.minicols"" , ""false"" , ""Only show the instruction in the column disasm"" )"	3026:1:94243:94326	4078290	214	True				
ANR	4081121	CallExpression	"SETPREF ( ""asm.minicols"" , ""false"" , ""Only show the instruction in the column disasm"" )"		4078290	0					
ANR	4081122	Callee	SETPREF		4078290	0					
ANR	4081123	Identifier	SETPREF		4078290	0					
ANR	4081124	ArgumentList	"""asm.minicols"""		4078290	1					
ANR	4081125	Argument	"""asm.minicols"""		4078290	0					
ANR	4081126	PrimaryExpression	"""asm.minicols"""		4078290	0					
ANR	4081127	Argument	"""false"""		4078290	1					
ANR	4081128	PrimaryExpression	"""false"""		4078290	0					
ANR	4081129	Argument	"""Only show the instruction in the column disasm"""		4078290	2					
ANR	4081130	PrimaryExpression	"""Only show the instruction in the column disasm"""		4078290	0					
ANR	4081131	IdentifierDeclStatement	"RConfigNode * asmcpu = NODECB ( ""asm.cpu"" , R_SYS_ARCH , & cb_asmcpu ) ;"	3027:1:94329:94393	4078290	215	True				
ANR	4081132	IdentifierDecl	"* asmcpu = NODECB ( ""asm.cpu"" , R_SYS_ARCH , & cb_asmcpu )"		4078290	0					
ANR	4081133	IdentifierDeclType	RConfigNode *		4078290	0					
ANR	4081134	Identifier	asmcpu		4078290	1					
ANR	4081135	AssignmentExpression	"* asmcpu = NODECB ( ""asm.cpu"" , R_SYS_ARCH , & cb_asmcpu )"		4078290	2		=			
ANR	4081136	Identifier	asmcpu		4078290	0					
ANR	4081137	CallExpression	"NODECB ( ""asm.cpu"" , R_SYS_ARCH , & cb_asmcpu )"		4078290	1					
ANR	4081138	Callee	NODECB		4078290	0					
ANR	4081139	Identifier	NODECB		4078290	0					
ANR	4081140	ArgumentList	"""asm.cpu"""		4078290	1					
ANR	4081141	Argument	"""asm.cpu"""		4078290	0					
ANR	4081142	PrimaryExpression	"""asm.cpu"""		4078290	0					
ANR	4081143	Argument	R_SYS_ARCH		4078290	1					
ANR	4081144	Identifier	R_SYS_ARCH		4078290	0					
ANR	4081145	Argument	& cb_asmcpu		4078290	2					
ANR	4081146	UnaryOperationExpression	& cb_asmcpu		4078290	0					
ANR	4081147	UnaryOperator	&		4078290	0					
ANR	4081148	Identifier	cb_asmcpu		4078290	1					
ANR	4081149	ExpressionStatement	"SETDESC ( asmcpu , ""Set the kind of asm.arch cpu"" )"	3028:1:94396:94444	4078290	216	True				
ANR	4081150	CallExpression	"SETDESC ( asmcpu , ""Set the kind of asm.arch cpu"" )"		4078290	0					
ANR	4081151	Callee	SETDESC		4078290	0					
ANR	4081152	Identifier	SETDESC		4078290	0					
ANR	4081153	ArgumentList	asmcpu		4078290	1					
ANR	4081154	Argument	asmcpu		4078290	0					
ANR	4081155	Identifier	asmcpu		4078290	0					
ANR	4081156	Argument	"""Set the kind of asm.arch cpu"""		4078290	1					
ANR	4081157	PrimaryExpression	"""Set the kind of asm.arch cpu"""		4078290	0					
ANR	4081158	IdentifierDeclStatement	"RConfigNode * asmarch = NODECB ( ""asm.arch"" , R_SYS_ARCH , & cb_asmarch ) ;"	3029:1:94447:94514	4078290	217	True				
ANR	4081159	IdentifierDecl	"* asmarch = NODECB ( ""asm.arch"" , R_SYS_ARCH , & cb_asmarch )"		4078290	0					
ANR	4081160	IdentifierDeclType	RConfigNode *		4078290	0					
ANR	4081161	Identifier	asmarch		4078290	1					
ANR	4081162	AssignmentExpression	"* asmarch = NODECB ( ""asm.arch"" , R_SYS_ARCH , & cb_asmarch )"		4078290	2		=			
ANR	4081163	Identifier	asmarch		4078290	0					
ANR	4081164	CallExpression	"NODECB ( ""asm.arch"" , R_SYS_ARCH , & cb_asmarch )"		4078290	1					
ANR	4081165	Callee	NODECB		4078290	0					
ANR	4081166	Identifier	NODECB		4078290	0					
ANR	4081167	ArgumentList	"""asm.arch"""		4078290	1					
ANR	4081168	Argument	"""asm.arch"""		4078290	0					
ANR	4081169	PrimaryExpression	"""asm.arch"""		4078290	0					
ANR	4081170	Argument	R_SYS_ARCH		4078290	1					
ANR	4081171	Identifier	R_SYS_ARCH		4078290	0					
ANR	4081172	Argument	& cb_asmarch		4078290	2					
ANR	4081173	UnaryOperationExpression	& cb_asmarch		4078290	0					
ANR	4081174	UnaryOperator	&		4078290	0					
ANR	4081175	Identifier	cb_asmarch		4078290	1					
ANR	4081176	ExpressionStatement	"SETDESC ( asmarch , ""Set the arch to be used by asm"" )"	3030:1:94517:94568	4078290	218	True				
ANR	4081177	CallExpression	"SETDESC ( asmarch , ""Set the arch to be used by asm"" )"		4078290	0					
ANR	4081178	Callee	SETDESC		4078290	0					
ANR	4081179	Identifier	SETDESC		4078290	0					
ANR	4081180	ArgumentList	asmarch		4078290	1					
ANR	4081181	Argument	asmarch		4078290	0					
ANR	4081182	Identifier	asmarch		4078290	0					
ANR	4081183	Argument	"""Set the arch to be used by asm"""		4078290	1					
ANR	4081184	PrimaryExpression	"""Set the arch to be used by asm"""		4078290	0					
ANR	4081185	ExpressionStatement	"update_asmarch_options ( core , asmarch )"	3032:1:94652:94690	4078290	219	True				
ANR	4081186	CallExpression	"update_asmarch_options ( core , asmarch )"		4078290	0					
ANR	4081187	Callee	update_asmarch_options		4078290	0					
ANR	4081188	Identifier	update_asmarch_options		4078290	0					
ANR	4081189	ArgumentList	core		4078290	1					
ANR	4081190	Argument	core		4078290	0					
ANR	4081191	Identifier	core		4078290	0					
ANR	4081192	Argument	asmarch		4078290	1					
ANR	4081193	Identifier	asmarch		4078290	0					
ANR	4081194	ExpressionStatement	"update_asmcpu_options ( core , asmcpu )"	3033:1:94693:94729	4078290	220	True				
ANR	4081195	CallExpression	"update_asmcpu_options ( core , asmcpu )"		4078290	0					
ANR	4081196	Callee	update_asmcpu_options		4078290	0					
ANR	4081197	Identifier	update_asmcpu_options		4078290	0					
ANR	4081198	ArgumentList	core		4078290	1					
ANR	4081199	Argument	core		4078290	0					
ANR	4081200	Identifier	core		4078290	0					
ANR	4081201	Argument	asmcpu		4078290	1					
ANR	4081202	Identifier	asmcpu		4078290	0					
ANR	4081203	ExpressionStatement	"n = NODECB ( ""asm.features"" , """" , & cb_asmfeatures )"	3034:1:94732:94780	4078290	221	True				
ANR	4081204	AssignmentExpression	"n = NODECB ( ""asm.features"" , """" , & cb_asmfeatures )"		4078290	0		=			
ANR	4081205	Identifier	n		4078290	0					
ANR	4081206	CallExpression	"NODECB ( ""asm.features"" , """" , & cb_asmfeatures )"		4078290	1					
ANR	4081207	Callee	NODECB		4078290	0					
ANR	4081208	Identifier	NODECB		4078290	0					
ANR	4081209	ArgumentList	"""asm.features"""		4078290	1					
ANR	4081210	Argument	"""asm.features"""		4078290	0					
ANR	4081211	PrimaryExpression	"""asm.features"""		4078290	0					
ANR	4081212	Argument	""""""		4078290	1					
ANR	4081213	PrimaryExpression	""""""		4078290	0					
ANR	4081214	Argument	& cb_asmfeatures		4078290	2					
ANR	4081215	UnaryOperationExpression	& cb_asmfeatures		4078290	0					
ANR	4081216	UnaryOperator	&		4078290	0					
ANR	4081217	Identifier	cb_asmfeatures		4078290	1					
ANR	4081218	ExpressionStatement	"SETDESC ( n , ""Specify supported features by the target CPU"" )"	3035:1:94783:94842	4078290	222	True				
ANR	4081219	CallExpression	"SETDESC ( n , ""Specify supported features by the target CPU"" )"		4078290	0					
ANR	4081220	Callee	SETDESC		4078290	0					
ANR	4081221	Identifier	SETDESC		4078290	0					
ANR	4081222	ArgumentList	n		4078290	1					
ANR	4081223	Argument	n		4078290	0					
ANR	4081224	Identifier	n		4078290	0					
ANR	4081225	Argument	"""Specify supported features by the target CPU"""		4078290	1					
ANR	4081226	PrimaryExpression	"""Specify supported features by the target CPU"""		4078290	0					
ANR	4081227	ExpressionStatement	"update_asmfeatures_options ( core , n )"	3036:1:94845:94881	4078290	223	True				
ANR	4081228	CallExpression	"update_asmfeatures_options ( core , n )"		4078290	0					
ANR	4081229	Callee	update_asmfeatures_options		4078290	0					
ANR	4081230	Identifier	update_asmfeatures_options		4078290	0					
ANR	4081231	ArgumentList	core		4078290	1					
ANR	4081232	Argument	core		4078290	0					
ANR	4081233	Identifier	core		4078290	0					
ANR	4081234	Argument	n		4078290	1					
ANR	4081235	Identifier	n		4078290	0					
ANR	4081236	ExpressionStatement	"SETCB ( ""asm.parser"" , ""x86.pseudo"" , & cb_asmparser , ""Set the asm parser to use"" )"	3037:1:94884:94962	4078290	224	True				
ANR	4081237	CallExpression	"SETCB ( ""asm.parser"" , ""x86.pseudo"" , & cb_asmparser , ""Set the asm parser to use"" )"		4078290	0					
ANR	4081238	Callee	SETCB		4078290	0					
ANR	4081239	Identifier	SETCB		4078290	0					
ANR	4081240	ArgumentList	"""asm.parser"""		4078290	1					
ANR	4081241	Argument	"""asm.parser"""		4078290	0					
ANR	4081242	PrimaryExpression	"""asm.parser"""		4078290	0					
ANR	4081243	Argument	"""x86.pseudo"""		4078290	1					
ANR	4081244	PrimaryExpression	"""x86.pseudo"""		4078290	0					
ANR	4081245	Argument	& cb_asmparser		4078290	2					
ANR	4081246	UnaryOperationExpression	& cb_asmparser		4078290	0					
ANR	4081247	UnaryOperator	&		4078290	0					
ANR	4081248	Identifier	cb_asmparser		4078290	1					
ANR	4081249	Argument	"""Set the asm parser to use"""		4078290	3					
ANR	4081250	PrimaryExpression	"""Set the asm parser to use"""		4078290	0					
ANR	4081251	ExpressionStatement	"SETCB ( ""asm.segoff"" , ""false"" , & cb_segoff , ""Show segmented address in prompt (x86-16)"" )"	3038:1:94965:95051	4078290	225	True				
ANR	4081252	CallExpression	"SETCB ( ""asm.segoff"" , ""false"" , & cb_segoff , ""Show segmented address in prompt (x86-16)"" )"		4078290	0					
ANR	4081253	Callee	SETCB		4078290	0					
ANR	4081254	Identifier	SETCB		4078290	0					
ANR	4081255	ArgumentList	"""asm.segoff"""		4078290	1					
ANR	4081256	Argument	"""asm.segoff"""		4078290	0					
ANR	4081257	PrimaryExpression	"""asm.segoff"""		4078290	0					
ANR	4081258	Argument	"""false"""		4078290	1					
ANR	4081259	PrimaryExpression	"""false"""		4078290	0					
ANR	4081260	Argument	& cb_segoff		4078290	2					
ANR	4081261	UnaryOperationExpression	& cb_segoff		4078290	0					
ANR	4081262	UnaryOperator	&		4078290	0					
ANR	4081263	Identifier	cb_segoff		4078290	1					
ANR	4081264	Argument	"""Show segmented address in prompt (x86-16)"""		4078290	3					
ANR	4081265	PrimaryExpression	"""Show segmented address in prompt (x86-16)"""		4078290	0					
ANR	4081266	ExpressionStatement	"SETCB ( ""asm.decoff"" , ""false"" , & cb_decoff , ""Show segmented address in prompt (x86-16)"" )"	3039:1:95054:95140	4078290	226	True				
ANR	4081267	CallExpression	"SETCB ( ""asm.decoff"" , ""false"" , & cb_decoff , ""Show segmented address in prompt (x86-16)"" )"		4078290	0					
ANR	4081268	Callee	SETCB		4078290	0					
ANR	4081269	Identifier	SETCB		4078290	0					
ANR	4081270	ArgumentList	"""asm.decoff"""		4078290	1					
ANR	4081271	Argument	"""asm.decoff"""		4078290	0					
ANR	4081272	PrimaryExpression	"""asm.decoff"""		4078290	0					
ANR	4081273	Argument	"""false"""		4078290	1					
ANR	4081274	PrimaryExpression	"""false"""		4078290	0					
ANR	4081275	Argument	& cb_decoff		4078290	2					
ANR	4081276	UnaryOperationExpression	& cb_decoff		4078290	0					
ANR	4081277	UnaryOperator	&		4078290	0					
ANR	4081278	Identifier	cb_decoff		4078290	1					
ANR	4081279	Argument	"""Show segmented address in prompt (x86-16)"""		4078290	3					
ANR	4081280	PrimaryExpression	"""Show segmented address in prompt (x86-16)"""		4078290	0					
ANR	4081281	ExpressionStatement	"SETICB ( ""asm.seggrn"" , 4 , & cb_seggrn , ""Segment granularity in bits (x86-16)"" )"	3040:1:95143:95219	4078290	227	True				
ANR	4081282	CallExpression	"SETICB ( ""asm.seggrn"" , 4 , & cb_seggrn , ""Segment granularity in bits (x86-16)"" )"		4078290	0					
ANR	4081283	Callee	SETICB		4078290	0					
ANR	4081284	Identifier	SETICB		4078290	0					
ANR	4081285	ArgumentList	"""asm.seggrn"""		4078290	1					
ANR	4081286	Argument	"""asm.seggrn"""		4078290	0					
ANR	4081287	PrimaryExpression	"""asm.seggrn"""		4078290	0					
ANR	4081288	Argument	4		4078290	1					
ANR	4081289	PrimaryExpression	4		4078290	0					
ANR	4081290	Argument	& cb_seggrn		4078290	2					
ANR	4081291	UnaryOperationExpression	& cb_seggrn		4078290	0					
ANR	4081292	UnaryOperator	&		4078290	0					
ANR	4081293	Identifier	cb_seggrn		4078290	1					
ANR	4081294	Argument	"""Segment granularity in bits (x86-16)"""		4078290	3					
ANR	4081295	PrimaryExpression	"""Segment granularity in bits (x86-16)"""		4078290	0					
ANR	4081296	ExpressionStatement	"n = NODECB ( ""asm.syntax"" , ""intel"" , & cb_asmsyntax )"	3041:1:95222:95271	4078290	228	True				
ANR	4081297	AssignmentExpression	"n = NODECB ( ""asm.syntax"" , ""intel"" , & cb_asmsyntax )"		4078290	0		=			
ANR	4081298	Identifier	n		4078290	0					
ANR	4081299	CallExpression	"NODECB ( ""asm.syntax"" , ""intel"" , & cb_asmsyntax )"		4078290	1					
ANR	4081300	Callee	NODECB		4078290	0					
ANR	4081301	Identifier	NODECB		4078290	0					
ANR	4081302	ArgumentList	"""asm.syntax"""		4078290	1					
ANR	4081303	Argument	"""asm.syntax"""		4078290	0					
ANR	4081304	PrimaryExpression	"""asm.syntax"""		4078290	0					
ANR	4081305	Argument	"""intel"""		4078290	1					
ANR	4081306	PrimaryExpression	"""intel"""		4078290	0					
ANR	4081307	Argument	& cb_asmsyntax		4078290	2					
ANR	4081308	UnaryOperationExpression	& cb_asmsyntax		4078290	0					
ANR	4081309	UnaryOperator	&		4078290	0					
ANR	4081310	Identifier	cb_asmsyntax		4078290	1					
ANR	4081311	ExpressionStatement	"SETDESC ( n , ""Select assembly syntax"" )"	3042:1:95274:95311	4078290	229	True				
ANR	4081312	CallExpression	"SETDESC ( n , ""Select assembly syntax"" )"		4078290	0					
ANR	4081313	Callee	SETDESC		4078290	0					
ANR	4081314	Identifier	SETDESC		4078290	0					
ANR	4081315	ArgumentList	n		4078290	1					
ANR	4081316	Argument	n		4078290	0					
ANR	4081317	Identifier	n		4078290	0					
ANR	4081318	Argument	"""Select assembly syntax"""		4078290	1					
ANR	4081319	PrimaryExpression	"""Select assembly syntax"""		4078290	0					
ANR	4081320	ExpressionStatement	"SETOPTIONS ( n , ""att"" , ""intel"" , ""masm"" , ""jz"" , ""regnum"" , NULL )"	3043:1:95314:95374	4078290	230	True				
ANR	4081321	CallExpression	"SETOPTIONS ( n , ""att"" , ""intel"" , ""masm"" , ""jz"" , ""regnum"" , NULL )"		4078290	0					
ANR	4081322	Callee	SETOPTIONS		4078290	0					
ANR	4081323	Identifier	SETOPTIONS		4078290	0					
ANR	4081324	ArgumentList	n		4078290	1					
ANR	4081325	Argument	n		4078290	0					
ANR	4081326	Identifier	n		4078290	0					
ANR	4081327	Argument	"""att"""		4078290	1					
ANR	4081328	PrimaryExpression	"""att"""		4078290	0					
ANR	4081329	Argument	"""intel"""		4078290	2					
ANR	4081330	PrimaryExpression	"""intel"""		4078290	0					
ANR	4081331	Argument	"""masm"""		4078290	3					
ANR	4081332	PrimaryExpression	"""masm"""		4078290	0					
ANR	4081333	Argument	"""jz"""		4078290	4					
ANR	4081334	PrimaryExpression	"""jz"""		4078290	0					
ANR	4081335	Argument	"""regnum"""		4078290	5					
ANR	4081336	PrimaryExpression	"""regnum"""		4078290	0					
ANR	4081337	Argument	NULL		4078290	6					
ANR	4081338	Identifier	NULL		4078290	0					
ANR	4081339	ExpressionStatement	"SETI ( ""asm.nbytes"" , 6 , ""Number of bytes for each opcode at disassembly"" )"	3044:1:95377:95449	4078290	231	True				
ANR	4081340	CallExpression	"SETI ( ""asm.nbytes"" , 6 , ""Number of bytes for each opcode at disassembly"" )"		4078290	0					
ANR	4081341	Callee	SETI		4078290	0					
ANR	4081342	Identifier	SETI		4078290	0					
ANR	4081343	ArgumentList	"""asm.nbytes"""		4078290	1					
ANR	4081344	Argument	"""asm.nbytes"""		4078290	0					
ANR	4081345	PrimaryExpression	"""asm.nbytes"""		4078290	0					
ANR	4081346	Argument	6		4078290	1					
ANR	4081347	PrimaryExpression	6		4078290	0					
ANR	4081348	Argument	"""Number of bytes for each opcode at disassembly"""		4078290	2					
ANR	4081349	PrimaryExpression	"""Number of bytes for each opcode at disassembly"""		4078290	0					
ANR	4081350	ExpressionStatement	"SETPREF ( ""asm.bytespace"" , ""false"" , ""Separate hexadecimal bytes with a whitespace"" )"	3045:1:95452:95534	4078290	232	True				
ANR	4081351	CallExpression	"SETPREF ( ""asm.bytespace"" , ""false"" , ""Separate hexadecimal bytes with a whitespace"" )"		4078290	0					
ANR	4081352	Callee	SETPREF		4078290	0					
ANR	4081353	Identifier	SETPREF		4078290	0					
ANR	4081354	ArgumentList	"""asm.bytespace"""		4078290	1					
ANR	4081355	Argument	"""asm.bytespace"""		4078290	0					
ANR	4081356	PrimaryExpression	"""asm.bytespace"""		4078290	0					
ANR	4081357	Argument	"""false"""		4078290	1					
ANR	4081358	PrimaryExpression	"""false"""		4078290	0					
ANR	4081359	Argument	"""Separate hexadecimal bytes with a whitespace"""		4078290	2					
ANR	4081360	PrimaryExpression	"""Separate hexadecimal bytes with a whitespace"""		4078290	0					
ANR	4081361	ExpressionStatement	"SETICB ( ""asm.bits"" , 64 , & cb_asmbits , ""Word size in bits at assembler"" )"	3047:1:95569:95639	4078290	233	True				
ANR	4081362	CallExpression	"SETICB ( ""asm.bits"" , 64 , & cb_asmbits , ""Word size in bits at assembler"" )"		4078290	0					
ANR	4081363	Callee	SETICB		4078290	0					
ANR	4081364	Identifier	SETICB		4078290	0					
ANR	4081365	ArgumentList	"""asm.bits"""		4078290	1					
ANR	4081366	Argument	"""asm.bits"""		4078290	0					
ANR	4081367	PrimaryExpression	"""asm.bits"""		4078290	0					
ANR	4081368	Argument	64		4078290	1					
ANR	4081369	PrimaryExpression	64		4078290	0					
ANR	4081370	Argument	& cb_asmbits		4078290	2					
ANR	4081371	UnaryOperationExpression	& cb_asmbits		4078290	0					
ANR	4081372	UnaryOperator	&		4078290	0					
ANR	4081373	Identifier	cb_asmbits		4078290	1					
ANR	4081374	Argument	"""Word size in bits at assembler"""		4078290	3					
ANR	4081375	PrimaryExpression	"""Word size in bits at assembler"""		4078290	0					
ANR	4081376	ExpressionStatement	"SETPREF ( ""asm.functions"" , ""true"" , ""Show functions in disassembly"" )"	3051:1:95728:95794	4078290	234	True				
ANR	4081377	CallExpression	"SETPREF ( ""asm.functions"" , ""true"" , ""Show functions in disassembly"" )"		4078290	0					
ANR	4081378	Callee	SETPREF		4078290	0					
ANR	4081379	Identifier	SETPREF		4078290	0					
ANR	4081380	ArgumentList	"""asm.functions"""		4078290	1					
ANR	4081381	Argument	"""asm.functions"""		4078290	0					
ANR	4081382	PrimaryExpression	"""asm.functions"""		4078290	0					
ANR	4081383	Argument	"""true"""		4078290	1					
ANR	4081384	PrimaryExpression	"""true"""		4078290	0					
ANR	4081385	Argument	"""Show functions in disassembly"""		4078290	2					
ANR	4081386	PrimaryExpression	"""Show functions in disassembly"""		4078290	0					
ANR	4081387	ExpressionStatement	"SETPREF ( ""asm.xrefs"" , ""true"" , ""Show xrefs in disassembly"" )"	3052:1:95797:95855	4078290	235	True				
ANR	4081388	CallExpression	"SETPREF ( ""asm.xrefs"" , ""true"" , ""Show xrefs in disassembly"" )"		4078290	0					
ANR	4081389	Callee	SETPREF		4078290	0					
ANR	4081390	Identifier	SETPREF		4078290	0					
ANR	4081391	ArgumentList	"""asm.xrefs"""		4078290	1					
ANR	4081392	Argument	"""asm.xrefs"""		4078290	0					
ANR	4081393	PrimaryExpression	"""asm.xrefs"""		4078290	0					
ANR	4081394	Argument	"""true"""		4078290	1					
ANR	4081395	PrimaryExpression	"""true"""		4078290	0					
ANR	4081396	Argument	"""Show xrefs in disassembly"""		4078290	2					
ANR	4081397	PrimaryExpression	"""Show xrefs in disassembly"""		4078290	0					
ANR	4081398	ExpressionStatement	"SETPREF ( ""asm.demangle"" , ""true"" , ""Show demangled symbols in disasm"" )"	3053:1:95858:95926	4078290	236	True				
ANR	4081399	CallExpression	"SETPREF ( ""asm.demangle"" , ""true"" , ""Show demangled symbols in disasm"" )"		4078290	0					
ANR	4081400	Callee	SETPREF		4078290	0					
ANR	4081401	Identifier	SETPREF		4078290	0					
ANR	4081402	ArgumentList	"""asm.demangle"""		4078290	1					
ANR	4081403	Argument	"""asm.demangle"""		4078290	0					
ANR	4081404	PrimaryExpression	"""asm.demangle"""		4078290	0					
ANR	4081405	Argument	"""true"""		4078290	1					
ANR	4081406	PrimaryExpression	"""true"""		4078290	0					
ANR	4081407	Argument	"""Show demangled symbols in disasm"""		4078290	2					
ANR	4081408	PrimaryExpression	"""Show demangled symbols in disasm"""		4078290	0					
ANR	4081409	ExpressionStatement	"SETPREF ( ""asm.describe"" , ""false"" , ""Show opcode description"" )"	3054:1:95929:95989	4078290	237	True				
ANR	4081410	CallExpression	"SETPREF ( ""asm.describe"" , ""false"" , ""Show opcode description"" )"		4078290	0					
ANR	4081411	Callee	SETPREF		4078290	0					
ANR	4081412	Identifier	SETPREF		4078290	0					
ANR	4081413	ArgumentList	"""asm.describe"""		4078290	1					
ANR	4081414	Argument	"""asm.describe"""		4078290	0					
ANR	4081415	PrimaryExpression	"""asm.describe"""		4078290	0					
ANR	4081416	Argument	"""false"""		4078290	1					
ANR	4081417	PrimaryExpression	"""false"""		4078290	0					
ANR	4081418	Argument	"""Show opcode description"""		4078290	2					
ANR	4081419	PrimaryExpression	"""Show opcode description"""		4078290	0					
ANR	4081420	ExpressionStatement	"SETPREF ( ""asm.highlight"" , """" , ""Highlight current line"" )"	3055:1:95992:96047	4078290	238	True				
ANR	4081421	CallExpression	"SETPREF ( ""asm.highlight"" , """" , ""Highlight current line"" )"		4078290	0					
ANR	4081422	Callee	SETPREF		4078290	0					
ANR	4081423	Identifier	SETPREF		4078290	0					
ANR	4081424	ArgumentList	"""asm.highlight"""		4078290	1					
ANR	4081425	Argument	"""asm.highlight"""		4078290	0					
ANR	4081426	PrimaryExpression	"""asm.highlight"""		4078290	0					
ANR	4081427	Argument	""""""		4078290	1					
ANR	4081428	PrimaryExpression	""""""		4078290	0					
ANR	4081429	Argument	"""Highlight current line"""		4078290	2					
ANR	4081430	PrimaryExpression	"""Highlight current line"""		4078290	0					
ANR	4081431	ExpressionStatement	"SETPREF ( ""asm.marks"" , ""true"" , ""Show marks before the disassembly"" )"	3056:1:96050:96116	4078290	239	True				
ANR	4081432	CallExpression	"SETPREF ( ""asm.marks"" , ""true"" , ""Show marks before the disassembly"" )"		4078290	0					
ANR	4081433	Callee	SETPREF		4078290	0					
ANR	4081434	Identifier	SETPREF		4078290	0					
ANR	4081435	ArgumentList	"""asm.marks"""		4078290	1					
ANR	4081436	Argument	"""asm.marks"""		4078290	0					
ANR	4081437	PrimaryExpression	"""asm.marks"""		4078290	0					
ANR	4081438	Argument	"""true"""		4078290	1					
ANR	4081439	PrimaryExpression	"""true"""		4078290	0					
ANR	4081440	Argument	"""Show marks before the disassembly"""		4078290	2					
ANR	4081441	PrimaryExpression	"""Show marks before the disassembly"""		4078290	0					
ANR	4081442	ExpressionStatement	"SETPREF ( ""asm.cmt.refs"" , ""false"" , ""Show flag and comments from refs in disasm"" )"	3057:1:96119:96198	4078290	240	True				
ANR	4081443	CallExpression	"SETPREF ( ""asm.cmt.refs"" , ""false"" , ""Show flag and comments from refs in disasm"" )"		4078290	0					
ANR	4081444	Callee	SETPREF		4078290	0					
ANR	4081445	Identifier	SETPREF		4078290	0					
ANR	4081446	ArgumentList	"""asm.cmt.refs"""		4078290	1					
ANR	4081447	Argument	"""asm.cmt.refs"""		4078290	0					
ANR	4081448	PrimaryExpression	"""asm.cmt.refs"""		4078290	0					
ANR	4081449	Argument	"""false"""		4078290	1					
ANR	4081450	PrimaryExpression	"""false"""		4078290	0					
ANR	4081451	Argument	"""Show flag and comments from refs in disasm"""		4078290	2					
ANR	4081452	PrimaryExpression	"""Show flag and comments from refs in disasm"""		4078290	0					
ANR	4081453	ExpressionStatement	"SETPREF ( ""asm.cmt.patch"" , ""false"" , ""Show patch comments in disasm"" )"	3058:1:96201:96268	4078290	241	True				
ANR	4081454	CallExpression	"SETPREF ( ""asm.cmt.patch"" , ""false"" , ""Show patch comments in disasm"" )"		4078290	0					
ANR	4081455	Callee	SETPREF		4078290	0					
ANR	4081456	Identifier	SETPREF		4078290	0					
ANR	4081457	ArgumentList	"""asm.cmt.patch"""		4078290	1					
ANR	4081458	Argument	"""asm.cmt.patch"""		4078290	0					
ANR	4081459	PrimaryExpression	"""asm.cmt.patch"""		4078290	0					
ANR	4081460	Argument	"""false"""		4078290	1					
ANR	4081461	PrimaryExpression	"""false"""		4078290	0					
ANR	4081462	Argument	"""Show patch comments in disasm"""		4078290	2					
ANR	4081463	PrimaryExpression	"""Show patch comments in disasm"""		4078290	0					
ANR	4081464	ExpressionStatement	"SETPREF ( ""asm.cmt.off"" , ""nodup"" , ""Show offset comment in disasm (true, false, nodup)"" )"	3059:1:96271:96357	4078290	242	True				
ANR	4081465	CallExpression	"SETPREF ( ""asm.cmt.off"" , ""nodup"" , ""Show offset comment in disasm (true, false, nodup)"" )"		4078290	0					
ANR	4081466	Callee	SETPREF		4078290	0					
ANR	4081467	Identifier	SETPREF		4078290	0					
ANR	4081468	ArgumentList	"""asm.cmt.off"""		4078290	1					
ANR	4081469	Argument	"""asm.cmt.off"""		4078290	0					
ANR	4081470	PrimaryExpression	"""asm.cmt.off"""		4078290	0					
ANR	4081471	Argument	"""nodup"""		4078290	1					
ANR	4081472	PrimaryExpression	"""nodup"""		4078290	0					
ANR	4081473	Argument	"""Show offset comment in disasm (true, false, nodup)"""		4078290	2					
ANR	4081474	PrimaryExpression	"""Show offset comment in disasm (true, false, nodup)"""		4078290	0					
ANR	4081475	ExpressionStatement	"SETPREF ( ""asm.payloads"" , ""false"" , ""Show payload bytes in disasm"" )"	3060:1:96360:96425	4078290	243	True				
ANR	4081476	CallExpression	"SETPREF ( ""asm.payloads"" , ""false"" , ""Show payload bytes in disasm"" )"		4078290	0					
ANR	4081477	Callee	SETPREF		4078290	0					
ANR	4081478	Identifier	SETPREF		4078290	0					
ANR	4081479	ArgumentList	"""asm.payloads"""		4078290	1					
ANR	4081480	Argument	"""asm.payloads"""		4078290	0					
ANR	4081481	PrimaryExpression	"""asm.payloads"""		4078290	0					
ANR	4081482	Argument	"""false"""		4078290	1					
ANR	4081483	PrimaryExpression	"""false"""		4078290	0					
ANR	4081484	Argument	"""Show payload bytes in disasm"""		4078290	2					
ANR	4081485	PrimaryExpression	"""Show payload bytes in disasm"""		4078290	0					
ANR	4081486	ExpressionStatement	"SETPREF ( ""bin.hashlimit"" , ""10M"" , ""Only compute hash when opening a file if smaller than this size"" )"	3063:1:96440:96539	4078290	244	True				
ANR	4081487	CallExpression	"SETPREF ( ""bin.hashlimit"" , ""10M"" , ""Only compute hash when opening a file if smaller than this size"" )"		4078290	0					
ANR	4081488	Callee	SETPREF		4078290	0					
ANR	4081489	Identifier	SETPREF		4078290	0					
ANR	4081490	ArgumentList	"""bin.hashlimit"""		4078290	1					
ANR	4081491	Argument	"""bin.hashlimit"""		4078290	0					
ANR	4081492	PrimaryExpression	"""bin.hashlimit"""		4078290	0					
ANR	4081493	Argument	"""10M"""		4078290	1					
ANR	4081494	PrimaryExpression	"""10M"""		4078290	0					
ANR	4081495	Argument	"""Only compute hash when opening a file if smaller than this size"""		4078290	2					
ANR	4081496	PrimaryExpression	"""Only compute hash when opening a file if smaller than this size"""		4078290	0					
ANR	4081497	ExpressionStatement	"SETCB ( ""bin.usextr"" , ""true"" , & cb_usextr , ""Use extract plugins when loading files"" )"	3064:1:96542:96624	4078290	245	True				
ANR	4081498	CallExpression	"SETCB ( ""bin.usextr"" , ""true"" , & cb_usextr , ""Use extract plugins when loading files"" )"		4078290	0					
ANR	4081499	Callee	SETCB		4078290	0					
ANR	4081500	Identifier	SETCB		4078290	0					
ANR	4081501	ArgumentList	"""bin.usextr"""		4078290	1					
ANR	4081502	Argument	"""bin.usextr"""		4078290	0					
ANR	4081503	PrimaryExpression	"""bin.usextr"""		4078290	0					
ANR	4081504	Argument	"""true"""		4078290	1					
ANR	4081505	PrimaryExpression	"""true"""		4078290	0					
ANR	4081506	Argument	& cb_usextr		4078290	2					
ANR	4081507	UnaryOperationExpression	& cb_usextr		4078290	0					
ANR	4081508	UnaryOperator	&		4078290	0					
ANR	4081509	Identifier	cb_usextr		4078290	1					
ANR	4081510	Argument	"""Use extract plugins when loading files"""		4078290	3					
ANR	4081511	PrimaryExpression	"""Use extract plugins when loading files"""		4078290	0					
ANR	4081512	ExpressionStatement	"SETCB ( ""bin.useldr"" , ""true"" , & cb_useldr , ""Use loader plugins when loading files"" )"	3065:1:96627:96708	4078290	246	True				
ANR	4081513	CallExpression	"SETCB ( ""bin.useldr"" , ""true"" , & cb_useldr , ""Use loader plugins when loading files"" )"		4078290	0					
ANR	4081514	Callee	SETCB		4078290	0					
ANR	4081515	Identifier	SETCB		4078290	0					
ANR	4081516	ArgumentList	"""bin.useldr"""		4078290	1					
ANR	4081517	Argument	"""bin.useldr"""		4078290	0					
ANR	4081518	PrimaryExpression	"""bin.useldr"""		4078290	0					
ANR	4081519	Argument	"""true"""		4078290	1					
ANR	4081520	PrimaryExpression	"""true"""		4078290	0					
ANR	4081521	Argument	& cb_useldr		4078290	2					
ANR	4081522	UnaryOperationExpression	& cb_useldr		4078290	0					
ANR	4081523	UnaryOperator	&		4078290	0					
ANR	4081524	Identifier	cb_useldr		4078290	1					
ANR	4081525	Argument	"""Use loader plugins when loading files"""		4078290	3					
ANR	4081526	PrimaryExpression	"""Use loader plugins when loading files"""		4078290	0					
ANR	4081527	ExpressionStatement	"SETCB ( ""bin.str.purge"" , """" , & cb_strpurge , ""Purge strings (e bin.str.purge=? provides more detail)"" )"	3066:1:96711:96810	4078290	247	True				
ANR	4081528	CallExpression	"SETCB ( ""bin.str.purge"" , """" , & cb_strpurge , ""Purge strings (e bin.str.purge=? provides more detail)"" )"		4078290	0					
ANR	4081529	Callee	SETCB		4078290	0					
ANR	4081530	Identifier	SETCB		4078290	0					
ANR	4081531	ArgumentList	"""bin.str.purge"""		4078290	1					
ANR	4081532	Argument	"""bin.str.purge"""		4078290	0					
ANR	4081533	PrimaryExpression	"""bin.str.purge"""		4078290	0					
ANR	4081534	Argument	""""""		4078290	1					
ANR	4081535	PrimaryExpression	""""""		4078290	0					
ANR	4081536	Argument	& cb_strpurge		4078290	2					
ANR	4081537	UnaryOperationExpression	& cb_strpurge		4078290	0					
ANR	4081538	UnaryOperator	&		4078290	0					
ANR	4081539	Identifier	cb_strpurge		4078290	1					
ANR	4081540	Argument	"""Purge strings (e bin.str.purge=? provides more detail)"""		4078290	3					
ANR	4081541	PrimaryExpression	"""Purge strings (e bin.str.purge=? provides more detail)"""		4078290	0					
ANR	4081542	ExpressionStatement	"SETPREF ( ""bin.b64str"" , ""false"" , ""Try to debase64 the strings"" )"	3067:1:96813:96875	4078290	248	True				
ANR	4081543	CallExpression	"SETPREF ( ""bin.b64str"" , ""false"" , ""Try to debase64 the strings"" )"		4078290	0					
ANR	4081544	Callee	SETPREF		4078290	0					
ANR	4081545	Identifier	SETPREF		4078290	0					
ANR	4081546	ArgumentList	"""bin.b64str"""		4078290	1					
ANR	4081547	Argument	"""bin.b64str"""		4078290	0					
ANR	4081548	PrimaryExpression	"""bin.b64str"""		4078290	0					
ANR	4081549	Argument	"""false"""		4078290	1					
ANR	4081550	PrimaryExpression	"""false"""		4078290	0					
ANR	4081551	Argument	"""Try to debase64 the strings"""		4078290	2					
ANR	4081552	PrimaryExpression	"""Try to debase64 the strings"""		4078290	0					
ANR	4081553	ExpressionStatement	"SETCB ( ""bin.at"" , ""false"" , & cb_binat , ""RBin.cur depends on RCore.offset"" )"	3068:1:96878:96950	4078290	249	True				
ANR	4081554	CallExpression	"SETCB ( ""bin.at"" , ""false"" , & cb_binat , ""RBin.cur depends on RCore.offset"" )"		4078290	0					
ANR	4081555	Callee	SETCB		4078290	0					
ANR	4081556	Identifier	SETCB		4078290	0					
ANR	4081557	ArgumentList	"""bin.at"""		4078290	1					
ANR	4081558	Argument	"""bin.at"""		4078290	0					
ANR	4081559	PrimaryExpression	"""bin.at"""		4078290	0					
ANR	4081560	Argument	"""false"""		4078290	1					
ANR	4081561	PrimaryExpression	"""false"""		4078290	0					
ANR	4081562	Argument	& cb_binat		4078290	2					
ANR	4081563	UnaryOperationExpression	& cb_binat		4078290	0					
ANR	4081564	UnaryOperator	&		4078290	0					
ANR	4081565	Identifier	cb_binat		4078290	1					
ANR	4081566	Argument	"""RBin.cur depends on RCore.offset"""		4078290	3					
ANR	4081567	PrimaryExpression	"""RBin.cur depends on RCore.offset"""		4078290	0					
ANR	4081568	ExpressionStatement	"SETPREF ( ""bin.libs"" , ""false"" , ""Try to load libraries after loading main binary"" )"	3069:1:96953:97033	4078290	250	True				
ANR	4081569	CallExpression	"SETPREF ( ""bin.libs"" , ""false"" , ""Try to load libraries after loading main binary"" )"		4078290	0					
ANR	4081570	Callee	SETPREF		4078290	0					
ANR	4081571	Identifier	SETPREF		4078290	0					
ANR	4081572	ArgumentList	"""bin.libs"""		4078290	1					
ANR	4081573	Argument	"""bin.libs"""		4078290	0					
ANR	4081574	PrimaryExpression	"""bin.libs"""		4078290	0					
ANR	4081575	Argument	"""false"""		4078290	1					
ANR	4081576	PrimaryExpression	"""false"""		4078290	0					
ANR	4081577	Argument	"""Try to load libraries after loading main binary"""		4078290	2					
ANR	4081578	PrimaryExpression	"""Try to load libraries after loading main binary"""		4078290	0					
ANR	4081579	ExpressionStatement	"n = NODECB ( ""bin.str.filter"" , """" , & cb_strfilter )"	3070:1:97036:97084	4078290	251	True				
ANR	4081580	AssignmentExpression	"n = NODECB ( ""bin.str.filter"" , """" , & cb_strfilter )"		4078290	0		=			
ANR	4081581	Identifier	n		4078290	0					
ANR	4081582	CallExpression	"NODECB ( ""bin.str.filter"" , """" , & cb_strfilter )"		4078290	1					
ANR	4081583	Callee	NODECB		4078290	0					
ANR	4081584	Identifier	NODECB		4078290	0					
ANR	4081585	ArgumentList	"""bin.str.filter"""		4078290	1					
ANR	4081586	Argument	"""bin.str.filter"""		4078290	0					
ANR	4081587	PrimaryExpression	"""bin.str.filter"""		4078290	0					
ANR	4081588	Argument	""""""		4078290	1					
ANR	4081589	PrimaryExpression	""""""		4078290	0					
ANR	4081590	Argument	& cb_strfilter		4078290	2					
ANR	4081591	UnaryOperationExpression	& cb_strfilter		4078290	0					
ANR	4081592	UnaryOperator	&		4078290	0					
ANR	4081593	Identifier	cb_strfilter		4078290	1					
ANR	4081594	ExpressionStatement	"SETDESC ( n , ""Filter strings"" )"	3071:1:97087:97116	4078290	252	True				
ANR	4081595	CallExpression	"SETDESC ( n , ""Filter strings"" )"		4078290	0					
ANR	4081596	Callee	SETDESC		4078290	0					
ANR	4081597	Identifier	SETDESC		4078290	0					
ANR	4081598	ArgumentList	n		4078290	1					
ANR	4081599	Argument	n		4078290	0					
ANR	4081600	Identifier	n		4078290	0					
ANR	4081601	Argument	"""Filter strings"""		4078290	1					
ANR	4081602	PrimaryExpression	"""Filter strings"""		4078290	0					
ANR	4081603	ExpressionStatement	"SETOPTIONS ( n , ""a"" , ""8"" , ""p"" , ""e"" , ""u"" , ""i"" , ""U"" , ""f"" , NULL )"	3072:1:97119:97179	4078290	253	True				
ANR	4081604	CallExpression	"SETOPTIONS ( n , ""a"" , ""8"" , ""p"" , ""e"" , ""u"" , ""i"" , ""U"" , ""f"" , NULL )"		4078290	0					
ANR	4081605	Callee	SETOPTIONS		4078290	0					
ANR	4081606	Identifier	SETOPTIONS		4078290	0					
ANR	4081607	ArgumentList	n		4078290	1					
ANR	4081608	Argument	n		4078290	0					
ANR	4081609	Identifier	n		4078290	0					
ANR	4081610	Argument	"""a"""		4078290	1					
ANR	4081611	PrimaryExpression	"""a"""		4078290	0					
ANR	4081612	Argument	"""8"""		4078290	2					
ANR	4081613	PrimaryExpression	"""8"""		4078290	0					
ANR	4081614	Argument	"""p"""		4078290	3					
ANR	4081615	PrimaryExpression	"""p"""		4078290	0					
ANR	4081616	Argument	"""e"""		4078290	4					
ANR	4081617	PrimaryExpression	"""e"""		4078290	0					
ANR	4081618	Argument	"""u"""		4078290	5					
ANR	4081619	PrimaryExpression	"""u"""		4078290	0					
ANR	4081620	Argument	"""i"""		4078290	6					
ANR	4081621	PrimaryExpression	"""i"""		4078290	0					
ANR	4081622	Argument	"""U"""		4078290	7					
ANR	4081623	PrimaryExpression	"""U"""		4078290	0					
ANR	4081624	Argument	"""f"""		4078290	8					
ANR	4081625	PrimaryExpression	"""f"""		4078290	0					
ANR	4081626	Argument	NULL		4078290	9					
ANR	4081627	Identifier	NULL		4078290	0					
ANR	4081628	ExpressionStatement	"SETCB ( ""bin.filter"" , ""true"" , & cb_binfilter , ""Filter symbol names to fix dupped names"" )"	3073:1:97182:97268	4078290	254	True				
ANR	4081629	CallExpression	"SETCB ( ""bin.filter"" , ""true"" , & cb_binfilter , ""Filter symbol names to fix dupped names"" )"		4078290	0					
ANR	4081630	Callee	SETCB		4078290	0					
ANR	4081631	Identifier	SETCB		4078290	0					
ANR	4081632	ArgumentList	"""bin.filter"""		4078290	1					
ANR	4081633	Argument	"""bin.filter"""		4078290	0					
ANR	4081634	PrimaryExpression	"""bin.filter"""		4078290	0					
ANR	4081635	Argument	"""true"""		4078290	1					
ANR	4081636	PrimaryExpression	"""true"""		4078290	0					
ANR	4081637	Argument	& cb_binfilter		4078290	2					
ANR	4081638	UnaryOperationExpression	& cb_binfilter		4078290	0					
ANR	4081639	UnaryOperator	&		4078290	0					
ANR	4081640	Identifier	cb_binfilter		4078290	1					
ANR	4081641	Argument	"""Filter symbol names to fix dupped names"""		4078290	3					
ANR	4081642	PrimaryExpression	"""Filter symbol names to fix dupped names"""		4078290	0					
ANR	4081643	ExpressionStatement	"SETCB ( ""bin.force"" , """" , & cb_binforce , ""Force that rbin plugin"" )"	3074:1:97271:97334	4078290	255	True				
ANR	4081644	CallExpression	"SETCB ( ""bin.force"" , """" , & cb_binforce , ""Force that rbin plugin"" )"		4078290	0					
ANR	4081645	Callee	SETCB		4078290	0					
ANR	4081646	Identifier	SETCB		4078290	0					
ANR	4081647	ArgumentList	"""bin.force"""		4078290	1					
ANR	4081648	Argument	"""bin.force"""		4078290	0					
ANR	4081649	PrimaryExpression	"""bin.force"""		4078290	0					
ANR	4081650	Argument	""""""		4078290	1					
ANR	4081651	PrimaryExpression	""""""		4078290	0					
ANR	4081652	Argument	& cb_binforce		4078290	2					
ANR	4081653	UnaryOperationExpression	& cb_binforce		4078290	0					
ANR	4081654	UnaryOperator	&		4078290	0					
ANR	4081655	Identifier	cb_binforce		4078290	1					
ANR	4081656	Argument	"""Force that rbin plugin"""		4078290	3					
ANR	4081657	PrimaryExpression	"""Force that rbin plugin"""		4078290	0					
ANR	4081658	ExpressionStatement	"SETPREF ( ""bin.lang"" , """" , ""Language for bin.demangle"" )"	3075:1:97337:97390	4078290	256	True				
ANR	4081659	CallExpression	"SETPREF ( ""bin.lang"" , """" , ""Language for bin.demangle"" )"		4078290	0					
ANR	4081660	Callee	SETPREF		4078290	0					
ANR	4081661	Identifier	SETPREF		4078290	0					
ANR	4081662	ArgumentList	"""bin.lang"""		4078290	1					
ANR	4081663	Argument	"""bin.lang"""		4078290	0					
ANR	4081664	PrimaryExpression	"""bin.lang"""		4078290	0					
ANR	4081665	Argument	""""""		4078290	1					
ANR	4081666	PrimaryExpression	""""""		4078290	0					
ANR	4081667	Argument	"""Language for bin.demangle"""		4078290	2					
ANR	4081668	PrimaryExpression	"""Language for bin.demangle"""		4078290	0					
ANR	4081669	ExpressionStatement	"SETPREF ( ""bin.demangle"" , ""true"" , ""Import demangled symbols from RBin"" )"	3076:1:97393:97463	4078290	257	True				
ANR	4081670	CallExpression	"SETPREF ( ""bin.demangle"" , ""true"" , ""Import demangled symbols from RBin"" )"		4078290	0					
ANR	4081671	Callee	SETPREF		4078290	0					
ANR	4081672	Identifier	SETPREF		4078290	0					
ANR	4081673	ArgumentList	"""bin.demangle"""		4078290	1					
ANR	4081674	Argument	"""bin.demangle"""		4078290	0					
ANR	4081675	PrimaryExpression	"""bin.demangle"""		4078290	0					
ANR	4081676	Argument	"""true"""		4078290	1					
ANR	4081677	PrimaryExpression	"""true"""		4078290	0					
ANR	4081678	Argument	"""Import demangled symbols from RBin"""		4078290	2					
ANR	4081679	PrimaryExpression	"""Import demangled symbols from RBin"""		4078290	0					
ANR	4081680	ExpressionStatement	"SETPREF ( ""bin.demangle.libs"" , ""false"" , ""Show library name on demangled symbols names"" )"	3077:1:97466:97552	4078290	258	True				
ANR	4081681	CallExpression	"SETPREF ( ""bin.demangle.libs"" , ""false"" , ""Show library name on demangled symbols names"" )"		4078290	0					
ANR	4081682	Callee	SETPREF		4078290	0					
ANR	4081683	Identifier	SETPREF		4078290	0					
ANR	4081684	ArgumentList	"""bin.demangle.libs"""		4078290	1					
ANR	4081685	Argument	"""bin.demangle.libs"""		4078290	0					
ANR	4081686	PrimaryExpression	"""bin.demangle.libs"""		4078290	0					
ANR	4081687	Argument	"""false"""		4078290	1					
ANR	4081688	PrimaryExpression	"""false"""		4078290	0					
ANR	4081689	Argument	"""Show library name on demangled symbols names"""		4078290	2					
ANR	4081690	PrimaryExpression	"""Show library name on demangled symbols names"""		4078290	0					
ANR	4081691	ExpressionStatement	"SETCB ( ""bin.demanglecmd"" , ""false"" , & cb_bdc , ""run xcrun swift-demangle and similar if available (SLOW)"" )"	3078:1:97555:97658	4078290	259	True				
ANR	4081692	CallExpression	"SETCB ( ""bin.demanglecmd"" , ""false"" , & cb_bdc , ""run xcrun swift-demangle and similar if available (SLOW)"" )"		4078290	0					
ANR	4081693	Callee	SETCB		4078290	0					
ANR	4081694	Identifier	SETCB		4078290	0					
ANR	4081695	ArgumentList	"""bin.demanglecmd"""		4078290	1					
ANR	4081696	Argument	"""bin.demanglecmd"""		4078290	0					
ANR	4081697	PrimaryExpression	"""bin.demanglecmd"""		4078290	0					
ANR	4081698	Argument	"""false"""		4078290	1					
ANR	4081699	PrimaryExpression	"""false"""		4078290	0					
ANR	4081700	Argument	& cb_bdc		4078290	2					
ANR	4081701	UnaryOperationExpression	& cb_bdc		4078290	0					
ANR	4081702	UnaryOperator	&		4078290	0					
ANR	4081703	Identifier	cb_bdc		4078290	1					
ANR	4081704	Argument	"""run xcrun swift-demangle and similar if available (SLOW)"""		4078290	3					
ANR	4081705	PrimaryExpression	"""run xcrun swift-demangle and similar if available (SLOW)"""		4078290	0					
ANR	4081706	ExpressionStatement	"SETI ( ""bin.baddr"" , - 1 , ""Base address of the binary"" )"	3079:1:97661:97713	4078290	260	True				
ANR	4081707	CallExpression	"SETI ( ""bin.baddr"" , - 1 , ""Base address of the binary"" )"		4078290	0					
ANR	4081708	Callee	SETI		4078290	0					
ANR	4081709	Identifier	SETI		4078290	0					
ANR	4081710	ArgumentList	"""bin.baddr"""		4078290	1					
ANR	4081711	Argument	"""bin.baddr"""		4078290	0					
ANR	4081712	PrimaryExpression	"""bin.baddr"""		4078290	0					
ANR	4081713	Argument	- 1		4078290	1					
ANR	4081714	UnaryOperationExpression	- 1		4078290	0					
ANR	4081715	UnaryOperator	-		4078290	0					
ANR	4081716	PrimaryExpression	1		4078290	1					
ANR	4081717	Argument	"""Base address of the binary"""		4078290	2					
ANR	4081718	PrimaryExpression	"""Base address of the binary"""		4078290	0					
ANR	4081719	ExpressionStatement	"SETI ( ""bin.laddr"" , 0 , ""Base address for loading library ('*.so')"" )"	3080:1:97716:97782	4078290	261	True				
ANR	4081720	CallExpression	"SETI ( ""bin.laddr"" , 0 , ""Base address for loading library ('*.so')"" )"		4078290	0					
ANR	4081721	Callee	SETI		4078290	0					
ANR	4081722	Identifier	SETI		4078290	0					
ANR	4081723	ArgumentList	"""bin.laddr"""		4078290	1					
ANR	4081724	Argument	"""bin.laddr"""		4078290	0					
ANR	4081725	PrimaryExpression	"""bin.laddr"""		4078290	0					
ANR	4081726	Argument	0		4078290	1					
ANR	4081727	PrimaryExpression	0		4078290	0					
ANR	4081728	Argument	"""Base address for loading library ('*.so')"""		4078290	2					
ANR	4081729	PrimaryExpression	"""Base address for loading library ('*.so')"""		4078290	0					
ANR	4081730	ExpressionStatement	"SETCB ( ""bin.dbginfo"" , ""true"" , & cb_bindbginfo , ""Load debug information at startup if available"" )"	3081:1:97785:97880	4078290	262	True				
ANR	4081731	CallExpression	"SETCB ( ""bin.dbginfo"" , ""true"" , & cb_bindbginfo , ""Load debug information at startup if available"" )"		4078290	0					
ANR	4081732	Callee	SETCB		4078290	0					
ANR	4081733	Identifier	SETCB		4078290	0					
ANR	4081734	ArgumentList	"""bin.dbginfo"""		4078290	1					
ANR	4081735	Argument	"""bin.dbginfo"""		4078290	0					
ANR	4081736	PrimaryExpression	"""bin.dbginfo"""		4078290	0					
ANR	4081737	Argument	"""true"""		4078290	1					
ANR	4081738	PrimaryExpression	"""true"""		4078290	0					
ANR	4081739	Argument	& cb_bindbginfo		4078290	2					
ANR	4081740	UnaryOperationExpression	& cb_bindbginfo		4078290	0					
ANR	4081741	UnaryOperator	&		4078290	0					
ANR	4081742	Identifier	cb_bindbginfo		4078290	1					
ANR	4081743	Argument	"""Load debug information at startup if available"""		4078290	3					
ANR	4081744	PrimaryExpression	"""Load debug information at startup if available"""		4078290	0					
ANR	4081745	ExpressionStatement	"SETPREF ( ""bin.relocs"" , ""true"" , ""Load relocs information at startup if available"" )"	3082:1:97883:97964	4078290	263	True				
ANR	4081746	CallExpression	"SETPREF ( ""bin.relocs"" , ""true"" , ""Load relocs information at startup if available"" )"		4078290	0					
ANR	4081747	Callee	SETPREF		4078290	0					
ANR	4081748	Identifier	SETPREF		4078290	0					
ANR	4081749	ArgumentList	"""bin.relocs"""		4078290	1					
ANR	4081750	Argument	"""bin.relocs"""		4078290	0					
ANR	4081751	PrimaryExpression	"""bin.relocs"""		4078290	0					
ANR	4081752	Argument	"""true"""		4078290	1					
ANR	4081753	PrimaryExpression	"""true"""		4078290	0					
ANR	4081754	Argument	"""Load relocs information at startup if available"""		4078290	2					
ANR	4081755	PrimaryExpression	"""Load relocs information at startup if available"""		4078290	0					
ANR	4081756	ExpressionStatement	"SETICB ( ""bin.minstr"" , 0 , & cb_binminstr , ""Minimum string length for r_bin"" )"	3083:1:97967:98041	4078290	264	True				
ANR	4081757	CallExpression	"SETICB ( ""bin.minstr"" , 0 , & cb_binminstr , ""Minimum string length for r_bin"" )"		4078290	0					
ANR	4081758	Callee	SETICB		4078290	0					
ANR	4081759	Identifier	SETICB		4078290	0					
ANR	4081760	ArgumentList	"""bin.minstr"""		4078290	1					
ANR	4081761	Argument	"""bin.minstr"""		4078290	0					
ANR	4081762	PrimaryExpression	"""bin.minstr"""		4078290	0					
ANR	4081763	Argument	0		4078290	1					
ANR	4081764	PrimaryExpression	0		4078290	0					
ANR	4081765	Argument	& cb_binminstr		4078290	2					
ANR	4081766	UnaryOperationExpression	& cb_binminstr		4078290	0					
ANR	4081767	UnaryOperator	&		4078290	0					
ANR	4081768	Identifier	cb_binminstr		4078290	1					
ANR	4081769	Argument	"""Minimum string length for r_bin"""		4078290	3					
ANR	4081770	PrimaryExpression	"""Minimum string length for r_bin"""		4078290	0					
ANR	4081771	ExpressionStatement	"SETICB ( ""bin.maxstr"" , 0 , & cb_binmaxstr , ""Maximum string length for r_bin"" )"	3084:1:98044:98118	4078290	265	True				
ANR	4081772	CallExpression	"SETICB ( ""bin.maxstr"" , 0 , & cb_binmaxstr , ""Maximum string length for r_bin"" )"		4078290	0					
ANR	4081773	Callee	SETICB		4078290	0					
ANR	4081774	Identifier	SETICB		4078290	0					
ANR	4081775	ArgumentList	"""bin.maxstr"""		4078290	1					
ANR	4081776	Argument	"""bin.maxstr"""		4078290	0					
ANR	4081777	PrimaryExpression	"""bin.maxstr"""		4078290	0					
ANR	4081778	Argument	0		4078290	1					
ANR	4081779	PrimaryExpression	0		4078290	0					
ANR	4081780	Argument	& cb_binmaxstr		4078290	2					
ANR	4081781	UnaryOperationExpression	& cb_binmaxstr		4078290	0					
ANR	4081782	UnaryOperator	&		4078290	0					
ANR	4081783	Identifier	cb_binmaxstr		4078290	1					
ANR	4081784	Argument	"""Maximum string length for r_bin"""		4078290	3					
ANR	4081785	PrimaryExpression	"""Maximum string length for r_bin"""		4078290	0					
ANR	4081786	ExpressionStatement	"SETICB ( ""bin.maxstrbuf"" , 1024 * 1024 * 10 , & cb_binmaxstrbuf , ""Maximum size of range to load strings from"" )"	3085:1:98121:98224	4078290	266	True				
ANR	4081787	CallExpression	"SETICB ( ""bin.maxstrbuf"" , 1024 * 1024 * 10 , & cb_binmaxstrbuf , ""Maximum size of range to load strings from"" )"		4078290	0					
ANR	4081788	Callee	SETICB		4078290	0					
ANR	4081789	Identifier	SETICB		4078290	0					
ANR	4081790	ArgumentList	"""bin.maxstrbuf"""		4078290	1					
ANR	4081791	Argument	"""bin.maxstrbuf"""		4078290	0					
ANR	4081792	PrimaryExpression	"""bin.maxstrbuf"""		4078290	0					
ANR	4081793	Argument	1024 * 1024 * 10		4078290	1					
ANR	4081794	MultiplicativeExpression	1024 * 1024 * 10		4078290	0		*			
ANR	4081795	PrimaryExpression	1024		4078290	0					
ANR	4081796	MultiplicativeExpression	1024 * 10		4078290	1		*			
ANR	4081797	PrimaryExpression	1024		4078290	0					
ANR	4081798	PrimaryExpression	10		4078290	1					
ANR	4081799	Argument	& cb_binmaxstrbuf		4078290	2					
ANR	4081800	UnaryOperationExpression	& cb_binmaxstrbuf		4078290	0					
ANR	4081801	UnaryOperator	&		4078290	0					
ANR	4081802	Identifier	cb_binmaxstrbuf		4078290	1					
ANR	4081803	Argument	"""Maximum size of range to load strings from"""		4078290	3					
ANR	4081804	PrimaryExpression	"""Maximum size of range to load strings from"""		4078290	0					
ANR	4081805	ExpressionStatement	"n = NODECB ( ""bin.str.enc"" , ""guess"" , & cb_binstrenc )"	3086:1:98227:98277	4078290	267	True				
ANR	4081806	AssignmentExpression	"n = NODECB ( ""bin.str.enc"" , ""guess"" , & cb_binstrenc )"		4078290	0		=			
ANR	4081807	Identifier	n		4078290	0					
ANR	4081808	CallExpression	"NODECB ( ""bin.str.enc"" , ""guess"" , & cb_binstrenc )"		4078290	1					
ANR	4081809	Callee	NODECB		4078290	0					
ANR	4081810	Identifier	NODECB		4078290	0					
ANR	4081811	ArgumentList	"""bin.str.enc"""		4078290	1					
ANR	4081812	Argument	"""bin.str.enc"""		4078290	0					
ANR	4081813	PrimaryExpression	"""bin.str.enc"""		4078290	0					
ANR	4081814	Argument	"""guess"""		4078290	1					
ANR	4081815	PrimaryExpression	"""guess"""		4078290	0					
ANR	4081816	Argument	& cb_binstrenc		4078290	2					
ANR	4081817	UnaryOperationExpression	& cb_binstrenc		4078290	0					
ANR	4081818	UnaryOperator	&		4078290	0					
ANR	4081819	Identifier	cb_binstrenc		4078290	1					
ANR	4081820	ExpressionStatement	"SETDESC ( n , ""Default string encoding of binary"" )"	3087:1:98280:98328	4078290	268	True				
ANR	4081821	CallExpression	"SETDESC ( n , ""Default string encoding of binary"" )"		4078290	0					
ANR	4081822	Callee	SETDESC		4078290	0					
ANR	4081823	Identifier	SETDESC		4078290	0					
ANR	4081824	ArgumentList	n		4078290	1					
ANR	4081825	Argument	n		4078290	0					
ANR	4081826	Identifier	n		4078290	0					
ANR	4081827	Argument	"""Default string encoding of binary"""		4078290	1					
ANR	4081828	PrimaryExpression	"""Default string encoding of binary"""		4078290	0					
ANR	4081829	ExpressionStatement	"SETOPTIONS ( n , ""latin1"" , ""utf8"" , ""utf16le"" , ""utf32le"" , ""guess"" , NULL )"	3088:1:98331:98400	4078290	269	True				
ANR	4081830	CallExpression	"SETOPTIONS ( n , ""latin1"" , ""utf8"" , ""utf16le"" , ""utf32le"" , ""guess"" , NULL )"		4078290	0					
ANR	4081831	Callee	SETOPTIONS		4078290	0					
ANR	4081832	Identifier	SETOPTIONS		4078290	0					
ANR	4081833	ArgumentList	n		4078290	1					
ANR	4081834	Argument	n		4078290	0					
ANR	4081835	Identifier	n		4078290	0					
ANR	4081836	Argument	"""latin1"""		4078290	1					
ANR	4081837	PrimaryExpression	"""latin1"""		4078290	0					
ANR	4081838	Argument	"""utf8"""		4078290	2					
ANR	4081839	PrimaryExpression	"""utf8"""		4078290	0					
ANR	4081840	Argument	"""utf16le"""		4078290	3					
ANR	4081841	PrimaryExpression	"""utf16le"""		4078290	0					
ANR	4081842	Argument	"""utf32le"""		4078290	4					
ANR	4081843	PrimaryExpression	"""utf32le"""		4078290	0					
ANR	4081844	Argument	"""guess"""		4078290	5					
ANR	4081845	PrimaryExpression	"""guess"""		4078290	0					
ANR	4081846	Argument	NULL		4078290	6					
ANR	4081847	Identifier	NULL		4078290	0					
ANR	4081848	ExpressionStatement	"SETCB ( ""bin.prefix"" , NULL , & cb_binprefix , ""Prefix all symbols/sections/relocs with a specific string"" )"	3089:1:98403:98505	4078290	270	True				
ANR	4081849	CallExpression	"SETCB ( ""bin.prefix"" , NULL , & cb_binprefix , ""Prefix all symbols/sections/relocs with a specific string"" )"		4078290	0					
ANR	4081850	Callee	SETCB		4078290	0					
ANR	4081851	Identifier	SETCB		4078290	0					
ANR	4081852	ArgumentList	"""bin.prefix"""		4078290	1					
ANR	4081853	Argument	"""bin.prefix"""		4078290	0					
ANR	4081854	PrimaryExpression	"""bin.prefix"""		4078290	0					
ANR	4081855	Argument	NULL		4078290	1					
ANR	4081856	Identifier	NULL		4078290	0					
ANR	4081857	Argument	& cb_binprefix		4078290	2					
ANR	4081858	UnaryOperationExpression	& cb_binprefix		4078290	0					
ANR	4081859	UnaryOperator	&		4078290	0					
ANR	4081860	Identifier	cb_binprefix		4078290	1					
ANR	4081861	Argument	"""Prefix all symbols/sections/relocs with a specific string"""		4078290	3					
ANR	4081862	PrimaryExpression	"""Prefix all symbols/sections/relocs with a specific string"""		4078290	0					
ANR	4081863	ExpressionStatement	"SETCB ( ""bin.rawstr"" , ""false"" , & cb_rawstr , ""Load strings from raw binaries"" )"	3090:1:98508:98583	4078290	271	True				
ANR	4081864	CallExpression	"SETCB ( ""bin.rawstr"" , ""false"" , & cb_rawstr , ""Load strings from raw binaries"" )"		4078290	0					
ANR	4081865	Callee	SETCB		4078290	0					
ANR	4081866	Identifier	SETCB		4078290	0					
ANR	4081867	ArgumentList	"""bin.rawstr"""		4078290	1					
ANR	4081868	Argument	"""bin.rawstr"""		4078290	0					
ANR	4081869	PrimaryExpression	"""bin.rawstr"""		4078290	0					
ANR	4081870	Argument	"""false"""		4078290	1					
ANR	4081871	PrimaryExpression	"""false"""		4078290	0					
ANR	4081872	Argument	& cb_rawstr		4078290	2					
ANR	4081873	UnaryOperationExpression	& cb_rawstr		4078290	0					
ANR	4081874	UnaryOperator	&		4078290	0					
ANR	4081875	Identifier	cb_rawstr		4078290	1					
ANR	4081876	Argument	"""Load strings from raw binaries"""		4078290	3					
ANR	4081877	PrimaryExpression	"""Load strings from raw binaries"""		4078290	0					
ANR	4081878	ExpressionStatement	"SETCB ( ""bin.strings"" , ""true"" , & cb_binstrings , ""Load strings from rbin on startup"" )"	3091:1:98586:98668	4078290	272	True				
ANR	4081879	CallExpression	"SETCB ( ""bin.strings"" , ""true"" , & cb_binstrings , ""Load strings from rbin on startup"" )"		4078290	0					
ANR	4081880	Callee	SETCB		4078290	0					
ANR	4081881	Identifier	SETCB		4078290	0					
ANR	4081882	ArgumentList	"""bin.strings"""		4078290	1					
ANR	4081883	Argument	"""bin.strings"""		4078290	0					
ANR	4081884	PrimaryExpression	"""bin.strings"""		4078290	0					
ANR	4081885	Argument	"""true"""		4078290	1					
ANR	4081886	PrimaryExpression	"""true"""		4078290	0					
ANR	4081887	Argument	& cb_binstrings		4078290	2					
ANR	4081888	UnaryOperationExpression	& cb_binstrings		4078290	0					
ANR	4081889	UnaryOperator	&		4078290	0					
ANR	4081890	Identifier	cb_binstrings		4078290	1					
ANR	4081891	Argument	"""Load strings from rbin on startup"""		4078290	3					
ANR	4081892	PrimaryExpression	"""Load strings from rbin on startup"""		4078290	0					
ANR	4081893	ExpressionStatement	"SETCB ( ""bin.debase64"" , ""false"" , & cb_debase64 , ""Try to debase64 all strings"" )"	3092:1:98671:98747	4078290	273	True				
ANR	4081894	CallExpression	"SETCB ( ""bin.debase64"" , ""false"" , & cb_debase64 , ""Try to debase64 all strings"" )"		4078290	0					
ANR	4081895	Callee	SETCB		4078290	0					
ANR	4081896	Identifier	SETCB		4078290	0					
ANR	4081897	ArgumentList	"""bin.debase64"""		4078290	1					
ANR	4081898	Argument	"""bin.debase64"""		4078290	0					
ANR	4081899	PrimaryExpression	"""bin.debase64"""		4078290	0					
ANR	4081900	Argument	"""false"""		4078290	1					
ANR	4081901	PrimaryExpression	"""false"""		4078290	0					
ANR	4081902	Argument	& cb_debase64		4078290	2					
ANR	4081903	UnaryOperationExpression	& cb_debase64		4078290	0					
ANR	4081904	UnaryOperator	&		4078290	0					
ANR	4081905	Identifier	cb_debase64		4078290	1					
ANR	4081906	Argument	"""Try to debase64 all strings"""		4078290	3					
ANR	4081907	PrimaryExpression	"""Try to debase64 all strings"""		4078290	0					
ANR	4081908	ExpressionStatement	"SETPREF ( ""bin.classes"" , ""true"" , ""Load classes from rbin on startup"" )"	3093:1:98750:98818	4078290	274	True				
ANR	4081909	CallExpression	"SETPREF ( ""bin.classes"" , ""true"" , ""Load classes from rbin on startup"" )"		4078290	0					
ANR	4081910	Callee	SETPREF		4078290	0					
ANR	4081911	Identifier	SETPREF		4078290	0					
ANR	4081912	ArgumentList	"""bin.classes"""		4078290	1					
ANR	4081913	Argument	"""bin.classes"""		4078290	0					
ANR	4081914	PrimaryExpression	"""bin.classes"""		4078290	0					
ANR	4081915	Argument	"""true"""		4078290	1					
ANR	4081916	PrimaryExpression	"""true"""		4078290	0					
ANR	4081917	Argument	"""Load classes from rbin on startup"""		4078290	2					
ANR	4081918	PrimaryExpression	"""Load classes from rbin on startup"""		4078290	0					
ANR	4081919	ExpressionStatement	"SETCB ( ""bin.verbose"" , ""false"" , & cb_binverbose , ""Show RBin warnings when loading binaries"" )"	3094:1:98821:98911	4078290	275	True				
ANR	4081920	CallExpression	"SETCB ( ""bin.verbose"" , ""false"" , & cb_binverbose , ""Show RBin warnings when loading binaries"" )"		4078290	0					
ANR	4081921	Callee	SETCB		4078290	0					
ANR	4081922	Identifier	SETCB		4078290	0					
ANR	4081923	ArgumentList	"""bin.verbose"""		4078290	1					
ANR	4081924	Argument	"""bin.verbose"""		4078290	0					
ANR	4081925	PrimaryExpression	"""bin.verbose"""		4078290	0					
ANR	4081926	Argument	"""false"""		4078290	1					
ANR	4081927	PrimaryExpression	"""false"""		4078290	0					
ANR	4081928	Argument	& cb_binverbose		4078290	2					
ANR	4081929	UnaryOperationExpression	& cb_binverbose		4078290	0					
ANR	4081930	UnaryOperator	&		4078290	0					
ANR	4081931	Identifier	cb_binverbose		4078290	1					
ANR	4081932	Argument	"""Show RBin warnings when loading binaries"""		4078290	3					
ANR	4081933	PrimaryExpression	"""Show RBin warnings when loading binaries"""		4078290	0					
ANR	4081934	ExpressionStatement	"SETPREF ( ""prj.name"" , """" , ""Name of current project"" )"	3097:1:98926:98977	4078290	276	True				
ANR	4081935	CallExpression	"SETPREF ( ""prj.name"" , """" , ""Name of current project"" )"		4078290	0					
ANR	4081936	Callee	SETPREF		4078290	0					
ANR	4081937	Identifier	SETPREF		4078290	0					
ANR	4081938	ArgumentList	"""prj.name"""		4078290	1					
ANR	4081939	Argument	"""prj.name"""		4078290	0					
ANR	4081940	PrimaryExpression	"""prj.name"""		4078290	0					
ANR	4081941	Argument	""""""		4078290	1					
ANR	4081942	PrimaryExpression	""""""		4078290	0					
ANR	4081943	Argument	"""Name of current project"""		4078290	2					
ANR	4081944	PrimaryExpression	"""Name of current project"""		4078290	0					
ANR	4081945	ExpressionStatement	"SETPREF ( ""prj.files"" , ""false"" , ""Save the target binary inside the project directory"" )"	3098:1:98980:99065	4078290	277	True				
ANR	4081946	CallExpression	"SETPREF ( ""prj.files"" , ""false"" , ""Save the target binary inside the project directory"" )"		4078290	0					
ANR	4081947	Callee	SETPREF		4078290	0					
ANR	4081948	Identifier	SETPREF		4078290	0					
ANR	4081949	ArgumentList	"""prj.files"""		4078290	1					
ANR	4081950	Argument	"""prj.files"""		4078290	0					
ANR	4081951	PrimaryExpression	"""prj.files"""		4078290	0					
ANR	4081952	Argument	"""false"""		4078290	1					
ANR	4081953	PrimaryExpression	"""false"""		4078290	0					
ANR	4081954	Argument	"""Save the target binary inside the project directory"""		4078290	2					
ANR	4081955	PrimaryExpression	"""Save the target binary inside the project directory"""		4078290	0					
ANR	4081956	ExpressionStatement	"SETPREF ( ""prj.git"" , ""false"" , ""Every project is a git repo and saving is committing"" )"	3099:1:99068:99152	4078290	278	True				
ANR	4081957	CallExpression	"SETPREF ( ""prj.git"" , ""false"" , ""Every project is a git repo and saving is committing"" )"		4078290	0					
ANR	4081958	Callee	SETPREF		4078290	0					
ANR	4081959	Identifier	SETPREF		4078290	0					
ANR	4081960	ArgumentList	"""prj.git"""		4078290	1					
ANR	4081961	Argument	"""prj.git"""		4078290	0					
ANR	4081962	PrimaryExpression	"""prj.git"""		4078290	0					
ANR	4081963	Argument	"""false"""		4078290	1					
ANR	4081964	PrimaryExpression	"""false"""		4078290	0					
ANR	4081965	Argument	"""Every project is a git repo and saving is committing"""		4078290	2					
ANR	4081966	PrimaryExpression	"""Every project is a git repo and saving is committing"""		4078290	0					
ANR	4081967	ExpressionStatement	"SETPREF ( ""prj.zip"" , ""false"" , ""Use ZIP format for project files"" )"	3100:1:99155:99219	4078290	279	True				
ANR	4081968	CallExpression	"SETPREF ( ""prj.zip"" , ""false"" , ""Use ZIP format for project files"" )"		4078290	0					
ANR	4081969	Callee	SETPREF		4078290	0					
ANR	4081970	Identifier	SETPREF		4078290	0					
ANR	4081971	ArgumentList	"""prj.zip"""		4078290	1					
ANR	4081972	Argument	"""prj.zip"""		4078290	0					
ANR	4081973	PrimaryExpression	"""prj.zip"""		4078290	0					
ANR	4081974	Argument	"""false"""		4078290	1					
ANR	4081975	PrimaryExpression	"""false"""		4078290	0					
ANR	4081976	Argument	"""Use ZIP format for project files"""		4078290	2					
ANR	4081977	PrimaryExpression	"""Use ZIP format for project files"""		4078290	0					
ANR	4081978	ExpressionStatement	"SETPREF ( ""prj.gpg"" , ""false"" , ""TODO: Encrypt project with GnuPGv2"" )"	3101:1:99222:99288	4078290	280	True				
ANR	4081979	CallExpression	"SETPREF ( ""prj.gpg"" , ""false"" , ""TODO: Encrypt project with GnuPGv2"" )"		4078290	0					
ANR	4081980	Callee	SETPREF		4078290	0					
ANR	4081981	Identifier	SETPREF		4078290	0					
ANR	4081982	ArgumentList	"""prj.gpg"""		4078290	1					
ANR	4081983	Argument	"""prj.gpg"""		4078290	0					
ANR	4081984	PrimaryExpression	"""prj.gpg"""		4078290	0					
ANR	4081985	Argument	"""false"""		4078290	1					
ANR	4081986	PrimaryExpression	"""false"""		4078290	0					
ANR	4081987	Argument	"""TODO: Encrypt project with GnuPGv2"""		4078290	2					
ANR	4081988	PrimaryExpression	"""TODO: Encrypt project with GnuPGv2"""		4078290	0					
ANR	4081989	ExpressionStatement	"SETPREF ( ""prj.simple"" , ""false"" , ""Use simple project saving style (functions, comments, options)"" )"	3102:1:99291:99388	4078290	281	True				
ANR	4081990	CallExpression	"SETPREF ( ""prj.simple"" , ""false"" , ""Use simple project saving style (functions, comments, options)"" )"		4078290	0					
ANR	4081991	Callee	SETPREF		4078290	0					
ANR	4081992	Identifier	SETPREF		4078290	0					
ANR	4081993	ArgumentList	"""prj.simple"""		4078290	1					
ANR	4081994	Argument	"""prj.simple"""		4078290	0					
ANR	4081995	PrimaryExpression	"""prj.simple"""		4078290	0					
ANR	4081996	Argument	"""false"""		4078290	1					
ANR	4081997	PrimaryExpression	"""false"""		4078290	0					
ANR	4081998	Argument	"""Use simple project saving style (functions, comments, options)"""		4078290	2					
ANR	4081999	PrimaryExpression	"""Use simple project saving style (functions, comments, options)"""		4078290	0					
ANR	4082000	ExpressionStatement	"SETPREF ( ""cfg.r2wars"" , ""false"" , ""Enable some tweaks for the r2wars game"" )"	3105:1:99403:99476	4078290	282	True				
ANR	4082001	CallExpression	"SETPREF ( ""cfg.r2wars"" , ""false"" , ""Enable some tweaks for the r2wars game"" )"		4078290	0					
ANR	4082002	Callee	SETPREF		4078290	0					
ANR	4082003	Identifier	SETPREF		4078290	0					
ANR	4082004	ArgumentList	"""cfg.r2wars"""		4078290	1					
ANR	4082005	Argument	"""cfg.r2wars"""		4078290	0					
ANR	4082006	PrimaryExpression	"""cfg.r2wars"""		4078290	0					
ANR	4082007	Argument	"""false"""		4078290	1					
ANR	4082008	PrimaryExpression	"""false"""		4078290	0					
ANR	4082009	Argument	"""Enable some tweaks for the r2wars game"""		4078290	2					
ANR	4082010	PrimaryExpression	"""Enable some tweaks for the r2wars game"""		4078290	0					
ANR	4082011	ExpressionStatement	"SETPREF ( ""cfg.plugins"" , ""true"" , ""Load plugins at startup"" )"	3106:1:99479:99537	4078290	283	True				
ANR	4082012	CallExpression	"SETPREF ( ""cfg.plugins"" , ""true"" , ""Load plugins at startup"" )"		4078290	0					
ANR	4082013	Callee	SETPREF		4078290	0					
ANR	4082014	Identifier	SETPREF		4078290	0					
ANR	4082015	ArgumentList	"""cfg.plugins"""		4078290	1					
ANR	4082016	Argument	"""cfg.plugins"""		4078290	0					
ANR	4082017	PrimaryExpression	"""cfg.plugins"""		4078290	0					
ANR	4082018	Argument	"""true"""		4078290	1					
ANR	4082019	PrimaryExpression	"""true"""		4078290	0					
ANR	4082020	Argument	"""Load plugins at startup"""		4078290	2					
ANR	4082021	PrimaryExpression	"""Load plugins at startup"""		4078290	0					
ANR	4082022	ExpressionStatement	"SETCB ( ""time.fmt"" , ""%Y-%m-%d %H:%M:%S %z"" , & cb_cfgdatefmt , ""Date format (%Y-%m-%d %H:%M:%S %z)"" )"	3107:1:99540:99636	4078290	284	True				
ANR	4082023	CallExpression	"SETCB ( ""time.fmt"" , ""%Y-%m-%d %H:%M:%S %z"" , & cb_cfgdatefmt , ""Date format (%Y-%m-%d %H:%M:%S %z)"" )"		4078290	0					
ANR	4082024	Callee	SETCB		4078290	0					
ANR	4082025	Identifier	SETCB		4078290	0					
ANR	4082026	ArgumentList	"""time.fmt"""		4078290	1					
ANR	4082027	Argument	"""time.fmt"""		4078290	0					
ANR	4082028	PrimaryExpression	"""time.fmt"""		4078290	0					
ANR	4082029	Argument	"""%Y-%m-%d %H:%M:%S %z"""		4078290	1					
ANR	4082030	PrimaryExpression	"""%Y-%m-%d %H:%M:%S %z"""		4078290	0					
ANR	4082031	Argument	& cb_cfgdatefmt		4078290	2					
ANR	4082032	UnaryOperationExpression	& cb_cfgdatefmt		4078290	0					
ANR	4082033	UnaryOperator	&		4078290	0					
ANR	4082034	Identifier	cb_cfgdatefmt		4078290	1					
ANR	4082035	Argument	"""Date format (%Y-%m-%d %H:%M:%S %z)"""		4078290	3					
ANR	4082036	PrimaryExpression	"""Date format (%Y-%m-%d %H:%M:%S %z)"""		4078290	0					
ANR	4082037	ExpressionStatement	"SETICB ( ""time.zone"" , 0 , & cb_timezone , ""Time zone, in hours relative to GMT: +2, -1,.."" )"	3108:1:99639:99726	4078290	285	True				
ANR	4082038	CallExpression	"SETICB ( ""time.zone"" , 0 , & cb_timezone , ""Time zone, in hours relative to GMT: +2, -1,.."" )"		4078290	0					
ANR	4082039	Callee	SETICB		4078290	0					
ANR	4082040	Identifier	SETICB		4078290	0					
ANR	4082041	ArgumentList	"""time.zone"""		4078290	1					
ANR	4082042	Argument	"""time.zone"""		4078290	0					
ANR	4082043	PrimaryExpression	"""time.zone"""		4078290	0					
ANR	4082044	Argument	0		4078290	1					
ANR	4082045	PrimaryExpression	0		4078290	0					
ANR	4082046	Argument	& cb_timezone		4078290	2					
ANR	4082047	UnaryOperationExpression	& cb_timezone		4078290	0					
ANR	4082048	UnaryOperator	&		4078290	0					
ANR	4082049	Identifier	cb_timezone		4078290	1					
ANR	4082050	Argument	"""Time zone, in hours relative to GMT: +2, -1,.."""		4078290	3					
ANR	4082051	PrimaryExpression	"""Time zone, in hours relative to GMT: +2, -1,.."""		4078290	0					
ANR	4082052	ExpressionStatement	"SETCB ( ""cfg.corelog"" , ""false"" , & cb_cfgcorelog , ""Log changes using the T api needed for realtime syncing"" )"	3109:1:99729:99834	4078290	286	True				
ANR	4082053	CallExpression	"SETCB ( ""cfg.corelog"" , ""false"" , & cb_cfgcorelog , ""Log changes using the T api needed for realtime syncing"" )"		4078290	0					
ANR	4082054	Callee	SETCB		4078290	0					
ANR	4082055	Identifier	SETCB		4078290	0					
ANR	4082056	ArgumentList	"""cfg.corelog"""		4078290	1					
ANR	4082057	Argument	"""cfg.corelog"""		4078290	0					
ANR	4082058	PrimaryExpression	"""cfg.corelog"""		4078290	0					
ANR	4082059	Argument	"""false"""		4078290	1					
ANR	4082060	PrimaryExpression	"""false"""		4078290	0					
ANR	4082061	Argument	& cb_cfgcorelog		4078290	2					
ANR	4082062	UnaryOperationExpression	& cb_cfgcorelog		4078290	0					
ANR	4082063	UnaryOperator	&		4078290	0					
ANR	4082064	Identifier	cb_cfgcorelog		4078290	1					
ANR	4082065	Argument	"""Log changes using the T api needed for realtime syncing"""		4078290	3					
ANR	4082066	PrimaryExpression	"""Log changes using the T api needed for realtime syncing"""		4078290	0					
ANR	4082067	ExpressionStatement	"SETPREF ( ""cfg.newtab"" , ""false"" , ""Show descriptions in command completion"" )"	3110:1:99837:99911	4078290	287	True				
ANR	4082068	CallExpression	"SETPREF ( ""cfg.newtab"" , ""false"" , ""Show descriptions in command completion"" )"		4078290	0					
ANR	4082069	Callee	SETPREF		4078290	0					
ANR	4082070	Identifier	SETPREF		4078290	0					
ANR	4082071	ArgumentList	"""cfg.newtab"""		4078290	1					
ANR	4082072	Argument	"""cfg.newtab"""		4078290	0					
ANR	4082073	PrimaryExpression	"""cfg.newtab"""		4078290	0					
ANR	4082074	Argument	"""false"""		4078290	1					
ANR	4082075	PrimaryExpression	"""false"""		4078290	0					
ANR	4082076	Argument	"""Show descriptions in command completion"""		4078290	2					
ANR	4082077	PrimaryExpression	"""Show descriptions in command completion"""		4078290	0					
ANR	4082078	ExpressionStatement	"SETCB ( ""cfg.debug"" , ""false"" , & cb_cfgdebug , ""Debugger mode"" )"	3111:1:99914:99973	4078290	288	True				
ANR	4082079	CallExpression	"SETCB ( ""cfg.debug"" , ""false"" , & cb_cfgdebug , ""Debugger mode"" )"		4078290	0					
ANR	4082080	Callee	SETCB		4078290	0					
ANR	4082081	Identifier	SETCB		4078290	0					
ANR	4082082	ArgumentList	"""cfg.debug"""		4078290	1					
ANR	4082083	Argument	"""cfg.debug"""		4078290	0					
ANR	4082084	PrimaryExpression	"""cfg.debug"""		4078290	0					
ANR	4082085	Argument	"""false"""		4078290	1					
ANR	4082086	PrimaryExpression	"""false"""		4078290	0					
ANR	4082087	Argument	& cb_cfgdebug		4078290	2					
ANR	4082088	UnaryOperationExpression	& cb_cfgdebug		4078290	0					
ANR	4082089	UnaryOperator	&		4078290	0					
ANR	4082090	Identifier	cb_cfgdebug		4078290	1					
ANR	4082091	Argument	"""Debugger mode"""		4078290	3					
ANR	4082092	PrimaryExpression	"""Debugger mode"""		4078290	0					
ANR	4082093	ExpressionStatement	"p = r_sys_getenv ( ""EDITOR"" )"	3112:1:99976:100003	4078290	289	True				
ANR	4082094	AssignmentExpression	"p = r_sys_getenv ( ""EDITOR"" )"		4078290	0		=			
ANR	4082095	Identifier	p		4078290	0					
ANR	4082096	CallExpression	"r_sys_getenv ( ""EDITOR"" )"		4078290	1					
ANR	4082097	Callee	r_sys_getenv		4078290	0					
ANR	4082098	Identifier	r_sys_getenv		4078290	0					
ANR	4082099	ArgumentList	"""EDITOR"""		4078290	1					
ANR	4082100	Argument	"""EDITOR"""		4078290	0					
ANR	4082101	PrimaryExpression	"""EDITOR"""		4078290	0					
ANR	4082102	ExpressionStatement	"r_config_set ( cfg , ""cfg.editor"" , p ? p : ""notepad"" )"	3114:1:100022:100071	4078290	290	True				
ANR	4082103	CallExpression	"r_config_set ( cfg , ""cfg.editor"" , p ? p : ""notepad"" )"		4078290	0					
ANR	4082104	Callee	r_config_set		4078290	0					
ANR	4082105	Identifier	r_config_set		4078290	0					
ANR	4082106	ArgumentList	cfg		4078290	1					
ANR	4082107	Argument	cfg		4078290	0					
ANR	4082108	Identifier	cfg		4078290	0					
ANR	4082109	Argument	"""cfg.editor"""		4078290	1					
ANR	4082110	PrimaryExpression	"""cfg.editor"""		4078290	0					
ANR	4082111	Argument	"p ? p : ""notepad"""		4078290	2					
ANR	4082112	ConditionalExpression	"p ? p : ""notepad"""		4078290	0					
ANR	4082113	Condition	p		4078290	0					
ANR	4082114	Identifier	p		4078290	0					
ANR	4082115	Identifier	p		4078290	1					
ANR	4082116	PrimaryExpression	"""notepad"""		4078290	2					
ANR	4082117	ExpressionStatement	free ( p )	3118:1:100134:100142	4078290	291	True				
ANR	4082118	CallExpression	free ( p )		4078290	0					
ANR	4082119	Callee	free		4078290	0					
ANR	4082120	Identifier	free		4078290	0					
ANR	4082121	ArgumentList	p		4078290	1					
ANR	4082122	Argument	p		4078290	0					
ANR	4082123	Identifier	p		4078290	0					
ANR	4082124	ExpressionStatement	"r_config_desc ( cfg , ""cfg.editor"" , ""Select default editor program"" )"	3119:1:100145:100211	4078290	292	True				
ANR	4082125	CallExpression	"r_config_desc ( cfg , ""cfg.editor"" , ""Select default editor program"" )"		4078290	0					
ANR	4082126	Callee	r_config_desc		4078290	0					
ANR	4082127	Identifier	r_config_desc		4078290	0					
ANR	4082128	ArgumentList	cfg		4078290	1					
ANR	4082129	Argument	cfg		4078290	0					
ANR	4082130	Identifier	cfg		4078290	0					
ANR	4082131	Argument	"""cfg.editor"""		4078290	1					
ANR	4082132	PrimaryExpression	"""cfg.editor"""		4078290	0					
ANR	4082133	Argument	"""Select default editor program"""		4078290	2					
ANR	4082134	PrimaryExpression	"""Select default editor program"""		4078290	0					
ANR	4082135	ExpressionStatement	"SETPREF ( ""cfg.user"" , r_sys_whoami ( buf ) , ""Set current username/pid"" )"	3120:1:100214:100282	4078290	293	True				
ANR	4082136	CallExpression	"SETPREF ( ""cfg.user"" , r_sys_whoami ( buf ) , ""Set current username/pid"" )"		4078290	0					
ANR	4082137	Callee	SETPREF		4078290	0					
ANR	4082138	Identifier	SETPREF		4078290	0					
ANR	4082139	ArgumentList	"""cfg.user"""		4078290	1					
ANR	4082140	Argument	"""cfg.user"""		4078290	0					
ANR	4082141	PrimaryExpression	"""cfg.user"""		4078290	0					
ANR	4082142	Argument	r_sys_whoami ( buf )		4078290	1					
ANR	4082143	CallExpression	r_sys_whoami ( buf )		4078290	0					
ANR	4082144	Callee	r_sys_whoami		4078290	0					
ANR	4082145	Identifier	r_sys_whoami		4078290	0					
ANR	4082146	ArgumentList	buf		4078290	1					
ANR	4082147	Argument	buf		4078290	0					
ANR	4082148	Identifier	buf		4078290	0					
ANR	4082149	Argument	"""Set current username/pid"""		4078290	2					
ANR	4082150	PrimaryExpression	"""Set current username/pid"""		4078290	0					
ANR	4082151	ExpressionStatement	"SETCB ( ""cfg.fortunes"" , ""true"" , & cb_cfg_fortunes , ""If enabled show tips at start"" )"	3121:1:100285:100366	4078290	294	True				
ANR	4082152	CallExpression	"SETCB ( ""cfg.fortunes"" , ""true"" , & cb_cfg_fortunes , ""If enabled show tips at start"" )"		4078290	0					
ANR	4082153	Callee	SETCB		4078290	0					
ANR	4082154	Identifier	SETCB		4078290	0					
ANR	4082155	ArgumentList	"""cfg.fortunes"""		4078290	1					
ANR	4082156	Argument	"""cfg.fortunes"""		4078290	0					
ANR	4082157	PrimaryExpression	"""cfg.fortunes"""		4078290	0					
ANR	4082158	Argument	"""true"""		4078290	1					
ANR	4082159	PrimaryExpression	"""true"""		4078290	0					
ANR	4082160	Argument	& cb_cfg_fortunes		4078290	2					
ANR	4082161	UnaryOperationExpression	& cb_cfg_fortunes		4078290	0					
ANR	4082162	UnaryOperator	&		4078290	0					
ANR	4082163	Identifier	cb_cfg_fortunes		4078290	1					
ANR	4082164	Argument	"""If enabled show tips at start"""		4078290	3					
ANR	4082165	PrimaryExpression	"""If enabled show tips at start"""		4078290	0					
ANR	4082166	ExpressionStatement	"SETCB ( ""cfg.fortunes.type"" , ""tips,fun"" , & cb_cfg_fortunes_type , ""Type of fortunes to show (tips, fun, nsfw, creepy)"" )"	3122:1:100369:100485	4078290	295	True				
ANR	4082167	CallExpression	"SETCB ( ""cfg.fortunes.type"" , ""tips,fun"" , & cb_cfg_fortunes_type , ""Type of fortunes to show (tips, fun, nsfw, creepy)"" )"		4078290	0					
ANR	4082168	Callee	SETCB		4078290	0					
ANR	4082169	Identifier	SETCB		4078290	0					
ANR	4082170	ArgumentList	"""cfg.fortunes.type"""		4078290	1					
ANR	4082171	Argument	"""cfg.fortunes.type"""		4078290	0					
ANR	4082172	PrimaryExpression	"""cfg.fortunes.type"""		4078290	0					
ANR	4082173	Argument	"""tips,fun"""		4078290	1					
ANR	4082174	PrimaryExpression	"""tips,fun"""		4078290	0					
ANR	4082175	Argument	& cb_cfg_fortunes_type		4078290	2					
ANR	4082176	UnaryOperationExpression	& cb_cfg_fortunes_type		4078290	0					
ANR	4082177	UnaryOperator	&		4078290	0					
ANR	4082178	Identifier	cb_cfg_fortunes_type		4078290	1					
ANR	4082179	Argument	"""Type of fortunes to show (tips, fun, nsfw, creepy)"""		4078290	3					
ANR	4082180	PrimaryExpression	"""Type of fortunes to show (tips, fun, nsfw, creepy)"""		4078290	0					
ANR	4082181	ExpressionStatement	"SETPREF ( ""cfg.fortunes.clippy"" , ""false"" , ""Use ?E instead of ?e"" )"	3123:1:100488:100552	4078290	296	True				
ANR	4082182	CallExpression	"SETPREF ( ""cfg.fortunes.clippy"" , ""false"" , ""Use ?E instead of ?e"" )"		4078290	0					
ANR	4082183	Callee	SETPREF		4078290	0					
ANR	4082184	Identifier	SETPREF		4078290	0					
ANR	4082185	ArgumentList	"""cfg.fortunes.clippy"""		4078290	1					
ANR	4082186	Argument	"""cfg.fortunes.clippy"""		4078290	0					
ANR	4082187	PrimaryExpression	"""cfg.fortunes.clippy"""		4078290	0					
ANR	4082188	Argument	"""false"""		4078290	1					
ANR	4082189	PrimaryExpression	"""false"""		4078290	0					
ANR	4082190	Argument	"""Use ?E instead of ?e"""		4078290	2					
ANR	4082191	PrimaryExpression	"""Use ?E instead of ?e"""		4078290	0					
ANR	4082192	ExpressionStatement	"SETPREF ( ""cfg.fortunes.tts"" , ""false"" , ""Speak out the fortune"" )"	3124:1:100555:100617	4078290	297	True				
ANR	4082193	CallExpression	"SETPREF ( ""cfg.fortunes.tts"" , ""false"" , ""Speak out the fortune"" )"		4078290	0					
ANR	4082194	Callee	SETPREF		4078290	0					
ANR	4082195	Identifier	SETPREF		4078290	0					
ANR	4082196	ArgumentList	"""cfg.fortunes.tts"""		4078290	1					
ANR	4082197	Argument	"""cfg.fortunes.tts"""		4078290	0					
ANR	4082198	PrimaryExpression	"""cfg.fortunes.tts"""		4078290	0					
ANR	4082199	Argument	"""false"""		4078290	1					
ANR	4082200	PrimaryExpression	"""false"""		4078290	0					
ANR	4082201	Argument	"""Speak out the fortune"""		4078290	2					
ANR	4082202	PrimaryExpression	"""Speak out the fortune"""		4078290	0					
ANR	4082203	ExpressionStatement	"SETPREF ( ""cfg.prefixdump"" , ""dump"" , ""Filename prefix for automated dumps"" )"	3125:1:100620:100693	4078290	298	True				
ANR	4082204	CallExpression	"SETPREF ( ""cfg.prefixdump"" , ""dump"" , ""Filename prefix for automated dumps"" )"		4078290	0					
ANR	4082205	Callee	SETPREF		4078290	0					
ANR	4082206	Identifier	SETPREF		4078290	0					
ANR	4082207	ArgumentList	"""cfg.prefixdump"""		4078290	1					
ANR	4082208	Argument	"""cfg.prefixdump"""		4078290	0					
ANR	4082209	PrimaryExpression	"""cfg.prefixdump"""		4078290	0					
ANR	4082210	Argument	"""dump"""		4078290	1					
ANR	4082211	PrimaryExpression	"""dump"""		4078290	0					
ANR	4082212	Argument	"""Filename prefix for automated dumps"""		4078290	2					
ANR	4082213	PrimaryExpression	"""Filename prefix for automated dumps"""		4078290	0					
ANR	4082214	ExpressionStatement	"SETCB ( ""cfg.sandbox"" , ""false"" , & cb_cfgsanbox , ""Sandbox mode disables systems and open on upper directories"" )"	3126:1:100696:100804	4078290	299	True				
ANR	4082215	CallExpression	"SETCB ( ""cfg.sandbox"" , ""false"" , & cb_cfgsanbox , ""Sandbox mode disables systems and open on upper directories"" )"		4078290	0					
ANR	4082216	Callee	SETCB		4078290	0					
ANR	4082217	Identifier	SETCB		4078290	0					
ANR	4082218	ArgumentList	"""cfg.sandbox"""		4078290	1					
ANR	4082219	Argument	"""cfg.sandbox"""		4078290	0					
ANR	4082220	PrimaryExpression	"""cfg.sandbox"""		4078290	0					
ANR	4082221	Argument	"""false"""		4078290	1					
ANR	4082222	PrimaryExpression	"""false"""		4078290	0					
ANR	4082223	Argument	& cb_cfgsanbox		4078290	2					
ANR	4082224	UnaryOperationExpression	& cb_cfgsanbox		4078290	0					
ANR	4082225	UnaryOperator	&		4078290	0					
ANR	4082226	Identifier	cb_cfgsanbox		4078290	1					
ANR	4082227	Argument	"""Sandbox mode disables systems and open on upper directories"""		4078290	3					
ANR	4082228	PrimaryExpression	"""Sandbox mode disables systems and open on upper directories"""		4078290	0					
ANR	4082229	ExpressionStatement	"SETPREF ( ""cfg.wseek"" , ""false"" , ""Seek after write"" )"	3127:1:100807:100857	4078290	300	True				
ANR	4082230	CallExpression	"SETPREF ( ""cfg.wseek"" , ""false"" , ""Seek after write"" )"		4078290	0					
ANR	4082231	Callee	SETPREF		4078290	0					
ANR	4082232	Identifier	SETPREF		4078290	0					
ANR	4082233	ArgumentList	"""cfg.wseek"""		4078290	1					
ANR	4082234	Argument	"""cfg.wseek"""		4078290	0					
ANR	4082235	PrimaryExpression	"""cfg.wseek"""		4078290	0					
ANR	4082236	Argument	"""false"""		4078290	1					
ANR	4082237	PrimaryExpression	"""false"""		4078290	0					
ANR	4082238	Argument	"""Seek after write"""		4078290	2					
ANR	4082239	PrimaryExpression	"""Seek after write"""		4078290	0					
ANR	4082240	ExpressionStatement	"SETCB ( ""cfg.bigendian"" , ""false"" , & cb_bigendian , ""Use little (false) or big (true) endianness"" )"	3128:1:100860:100954	4078290	301	True				
ANR	4082241	CallExpression	"SETCB ( ""cfg.bigendian"" , ""false"" , & cb_bigendian , ""Use little (false) or big (true) endianness"" )"		4078290	0					
ANR	4082242	Callee	SETCB		4078290	0					
ANR	4082243	Identifier	SETCB		4078290	0					
ANR	4082244	ArgumentList	"""cfg.bigendian"""		4078290	1					
ANR	4082245	Argument	"""cfg.bigendian"""		4078290	0					
ANR	4082246	PrimaryExpression	"""cfg.bigendian"""		4078290	0					
ANR	4082247	Argument	"""false"""		4078290	1					
ANR	4082248	PrimaryExpression	"""false"""		4078290	0					
ANR	4082249	Argument	& cb_bigendian		4078290	2					
ANR	4082250	UnaryOperationExpression	& cb_bigendian		4078290	0					
ANR	4082251	UnaryOperator	&		4078290	0					
ANR	4082252	Identifier	cb_bigendian		4078290	1					
ANR	4082253	Argument	"""Use little (false) or big (true) endianness"""		4078290	3					
ANR	4082254	PrimaryExpression	"""Use little (false) or big (true) endianness"""		4078290	0					
ANR	4082255	ExpressionStatement	"p = r_sys_getenv ( ""R2_LOGLEVEL"" )"	3132:1:100997:101029	4078290	302	True				
ANR	4082256	AssignmentExpression	"p = r_sys_getenv ( ""R2_LOGLEVEL"" )"		4078290	0		=			
ANR	4082257	Identifier	p		4078290	0					
ANR	4082258	CallExpression	"r_sys_getenv ( ""R2_LOGLEVEL"" )"		4078290	1					
ANR	4082259	Callee	r_sys_getenv		4078290	0					
ANR	4082260	Identifier	r_sys_getenv		4078290	0					
ANR	4082261	ArgumentList	"""R2_LOGLEVEL"""		4078290	1					
ANR	4082262	Argument	"""R2_LOGLEVEL"""		4078290	0					
ANR	4082263	PrimaryExpression	"""R2_LOGLEVEL"""		4078290	0					
ANR	4082264	Statement	SETICB	3133:1:101032:101037	4078290	303	True				
ANR	4082265	Statement	(	3133:8:101039:101039	4078290	304	True				
ANR	4082266	Statement	"""log.level"""	3133:9:101040:101050	4078290	305	True				
ANR	4082267	Statement	","	3133:20:101051:101051	4078290	306	True				
ANR	4082268	Statement	p	3133:22:101053:101053	4078290	307	True				
ANR	4082269	Statement	?	3133:24:101055:101055	4078290	308	True				
ANR	4082270	Statement	atoi	3133:26:101057:101060	4078290	309	True				
ANR	4082271	Statement	(	3133:30:101061:101061	4078290	310	True				
ANR	4082272	Statement	p	3133:31:101062:101062	4078290	311	True				
ANR	4082273	Statement	)	3133:32:101063:101063	4078290	312	True				
ANR	4082274	Statement	:	3133:34:101065:101065	4078290	313	True				
ANR	4082275	Statement	R_DEFAULT_LOGLVL	3133:36:101067:101082	4078290	314	True				
ANR	4082276	Statement	","	3133:52:101083:101083	4078290	315	True				
ANR	4082277	Statement	cb_log_config_level	3133:54:101085:101103	4078290	316	True				
ANR	4082278	Statement	","	3133:73:101104:101104	4078290	317	True				
ANR	4082279	Statement	"""Target log level/severity"""	3133:75:101106:101132	4078290	318	True				
ANR	4082280	Statement	""" (0:SILLY, 1:DEBUG, 2:VERBOSE, 3:INFO, 4:WARN, 5:ERROR, 6:FATAL)"""	3134:2:101137:101202	4078290	319	True				
ANR	4082281	Statement	)	3135:1:101205:101205	4078290	320	True				
ANR	4082282	ExpressionStatement		3135:2:101206:101206	4078290	321	True				
ANR	4082283	ExpressionStatement	free ( p )	3136:1:101209:101217	4078290	322	True				
ANR	4082284	CallExpression	free ( p )		4078290	0					
ANR	4082285	Callee	free		4078290	0					
ANR	4082286	Identifier	free		4078290	0					
ANR	4082287	ArgumentList	p		4078290	1					
ANR	4082288	Argument	p		4078290	0					
ANR	4082289	Identifier	p		4078290	0					
ANR	4082290	ExpressionStatement	"p = r_sys_getenv ( ""R2_LOGTRAPLEVEL"" )"	3138:1:101257:101293	4078290	323	True				
ANR	4082291	AssignmentExpression	"p = r_sys_getenv ( ""R2_LOGTRAPLEVEL"" )"		4078290	0		=			
ANR	4082292	Identifier	p		4078290	0					
ANR	4082293	CallExpression	"r_sys_getenv ( ""R2_LOGTRAPLEVEL"" )"		4078290	1					
ANR	4082294	Callee	r_sys_getenv		4078290	0					
ANR	4082295	Identifier	r_sys_getenv		4078290	0					
ANR	4082296	ArgumentList	"""R2_LOGTRAPLEVEL"""		4078290	1					
ANR	4082297	Argument	"""R2_LOGTRAPLEVEL"""		4078290	0					
ANR	4082298	PrimaryExpression	"""R2_LOGTRAPLEVEL"""		4078290	0					
ANR	4082299	Statement	SETICB	3139:1:101296:101301	4078290	324	True				
ANR	4082300	Statement	(	3139:8:101303:101303	4078290	325	True				
ANR	4082301	Statement	"""log.traplevel"""	3139:9:101304:101318	4078290	326	True				
ANR	4082302	Statement	","	3139:24:101319:101319	4078290	327	True				
ANR	4082303	Statement	p	3139:26:101321:101321	4078290	328	True				
ANR	4082304	Statement	?	3139:28:101323:101323	4078290	329	True				
ANR	4082305	Statement	atoi	3139:30:101325:101328	4078290	330	True				
ANR	4082306	Statement	(	3139:34:101329:101329	4078290	331	True				
ANR	4082307	Statement	p	3139:35:101330:101330	4078290	332	True				
ANR	4082308	Statement	)	3139:36:101331:101331	4078290	333	True				
ANR	4082309	Statement	:	3139:38:101333:101333	4078290	334	True				
ANR	4082310	Statement	R_LOGLVL_FATAL	3139:40:101335:101348	4078290	335	True				
ANR	4082311	Statement	","	3139:54:101349:101349	4078290	336	True				
ANR	4082312	Statement	cb_log_config_traplevel	3139:56:101351:101373	4078290	337	True				
ANR	4082313	Statement	","	3139:79:101374:101374	4078290	338	True				
ANR	4082314	Statement	"""Log level for trapping R2 when hit"""	3139:81:101376:101411	4078290	339	True				
ANR	4082315	Statement	""" (0:SILLY, 1:VERBOSE, 2:DEBUG, 3:INFO, 4:WARN, 5:ERROR, 6:FATAL)"""	3140:2:101416:101481	4078290	340	True				
ANR	4082316	Statement	)	3141:1:101484:101484	4078290	341	True				
ANR	4082317	ExpressionStatement		3141:2:101485:101485	4078290	342	True				
ANR	4082318	ExpressionStatement	free ( p )	3142:1:101488:101496	4078290	343	True				
ANR	4082319	CallExpression	free ( p )		4078290	0					
ANR	4082320	Callee	free		4078290	0					
ANR	4082321	Identifier	free		4078290	0					
ANR	4082322	ArgumentList	p		4078290	1					
ANR	4082323	Argument	p		4078290	0					
ANR	4082324	Identifier	p		4078290	0					
ANR	4082325	ExpressionStatement	"p = r_sys_getenv ( ""R2_LOGFILE"" )"	3144:1:101525:101556	4078290	344	True				
ANR	4082326	AssignmentExpression	"p = r_sys_getenv ( ""R2_LOGFILE"" )"		4078290	0		=			
ANR	4082327	Identifier	p		4078290	0					
ANR	4082328	CallExpression	"r_sys_getenv ( ""R2_LOGFILE"" )"		4078290	1					
ANR	4082329	Callee	r_sys_getenv		4078290	0					
ANR	4082330	Identifier	r_sys_getenv		4078290	0					
ANR	4082331	ArgumentList	"""R2_LOGFILE"""		4078290	1					
ANR	4082332	Argument	"""R2_LOGFILE"""		4078290	0					
ANR	4082333	PrimaryExpression	"""R2_LOGFILE"""		4078290	0					
ANR	4082334	ExpressionStatement	"SETCB ( ""log.file"" , p ? p : """" , cb_log_config_file , ""Logging output filename / path"" )"	3145:1:101559:101643	4078290	345	True				
ANR	4082335	CallExpression	"SETCB ( ""log.file"" , p ? p : """" , cb_log_config_file , ""Logging output filename / path"" )"		4078290	0					
ANR	4082336	Callee	SETCB		4078290	0					
ANR	4082337	Identifier	SETCB		4078290	0					
ANR	4082338	ArgumentList	"""log.file"""		4078290	1					
ANR	4082339	Argument	"""log.file"""		4078290	0					
ANR	4082340	PrimaryExpression	"""log.file"""		4078290	0					
ANR	4082341	Argument	"p ? p : """""		4078290	1					
ANR	4082342	ConditionalExpression	"p ? p : """""		4078290	0					
ANR	4082343	Condition	p		4078290	0					
ANR	4082344	Identifier	p		4078290	0					
ANR	4082345	Identifier	p		4078290	1					
ANR	4082346	PrimaryExpression	""""""		4078290	2					
ANR	4082347	Argument	cb_log_config_file		4078290	2					
ANR	4082348	Identifier	cb_log_config_file		4078290	0					
ANR	4082349	Argument	"""Logging output filename / path"""		4078290	3					
ANR	4082350	PrimaryExpression	"""Logging output filename / path"""		4078290	0					
ANR	4082351	ExpressionStatement	free ( p )	3146:1:101646:101654	4078290	346	True				
ANR	4082352	CallExpression	free ( p )		4078290	0					
ANR	4082353	Callee	free		4078290	0					
ANR	4082354	Identifier	free		4078290	0					
ANR	4082355	ArgumentList	p		4078290	1					
ANR	4082356	Argument	p		4078290	0					
ANR	4082357	Identifier	p		4078290	0					
ANR	4082358	ExpressionStatement	"p = r_sys_getenv ( ""R2_LOGSRCINFO"" )"	3148:1:101689:101723	4078290	347	True				
ANR	4082359	AssignmentExpression	"p = r_sys_getenv ( ""R2_LOGSRCINFO"" )"		4078290	0		=			
ANR	4082360	Identifier	p		4078290	0					
ANR	4082361	CallExpression	"r_sys_getenv ( ""R2_LOGSRCINFO"" )"		4078290	1					
ANR	4082362	Callee	r_sys_getenv		4078290	0					
ANR	4082363	Identifier	r_sys_getenv		4078290	0					
ANR	4082364	ArgumentList	"""R2_LOGSRCINFO"""		4078290	1					
ANR	4082365	Argument	"""R2_LOGSRCINFO"""		4078290	0					
ANR	4082366	PrimaryExpression	"""R2_LOGSRCINFO"""		4078290	0					
ANR	4082367	ExpressionStatement	"SETCB ( ""log.srcinfo"" , p ? p : ""false"" , cb_log_config_srcinfo , ""Should the log output contain src info (filename:lineno)"" )"	3149:1:101726:101847	4078290	348	True				
ANR	4082368	CallExpression	"SETCB ( ""log.srcinfo"" , p ? p : ""false"" , cb_log_config_srcinfo , ""Should the log output contain src info (filename:lineno)"" )"		4078290	0					
ANR	4082369	Callee	SETCB		4078290	0					
ANR	4082370	Identifier	SETCB		4078290	0					
ANR	4082371	ArgumentList	"""log.srcinfo"""		4078290	1					
ANR	4082372	Argument	"""log.srcinfo"""		4078290	0					
ANR	4082373	PrimaryExpression	"""log.srcinfo"""		4078290	0					
ANR	4082374	Argument	"p ? p : ""false"""		4078290	1					
ANR	4082375	ConditionalExpression	"p ? p : ""false"""		4078290	0					
ANR	4082376	Condition	p		4078290	0					
ANR	4082377	Identifier	p		4078290	0					
ANR	4082378	Identifier	p		4078290	1					
ANR	4082379	PrimaryExpression	"""false"""		4078290	2					
ANR	4082380	Argument	cb_log_config_srcinfo		4078290	2					
ANR	4082381	Identifier	cb_log_config_srcinfo		4078290	0					
ANR	4082382	Argument	"""Should the log output contain src info (filename:lineno)"""		4078290	3					
ANR	4082383	PrimaryExpression	"""Should the log output contain src info (filename:lineno)"""		4078290	0					
ANR	4082384	ExpressionStatement	free ( p )	3150:1:101850:101858	4078290	349	True				
ANR	4082385	CallExpression	free ( p )		4078290	0					
ANR	4082386	Callee	free		4078290	0					
ANR	4082387	Identifier	free		4078290	0					
ANR	4082388	ArgumentList	p		4078290	1					
ANR	4082389	Argument	p		4078290	0					
ANR	4082390	Identifier	p		4078290	0					
ANR	4082391	ExpressionStatement	"p = r_sys_getenv ( ""R2_LOGCOLORS"" )"	3152:1:101891:101924	4078290	350	True				
ANR	4082392	AssignmentExpression	"p = r_sys_getenv ( ""R2_LOGCOLORS"" )"		4078290	0		=			
ANR	4082393	Identifier	p		4078290	0					
ANR	4082394	CallExpression	"r_sys_getenv ( ""R2_LOGCOLORS"" )"		4078290	1					
ANR	4082395	Callee	r_sys_getenv		4078290	0					
ANR	4082396	Identifier	r_sys_getenv		4078290	0					
ANR	4082397	ArgumentList	"""R2_LOGCOLORS"""		4078290	1					
ANR	4082398	Argument	"""R2_LOGCOLORS"""		4078290	0					
ANR	4082399	PrimaryExpression	"""R2_LOGCOLORS"""		4078290	0					
ANR	4082400	ExpressionStatement	"SETCB ( ""log.colors"" , p ? p : ""false"" , cb_log_config_colors , ""Should the log output use colors (TODO)"" )"	3153:1:101927:102029	4078290	351	True				
ANR	4082401	CallExpression	"SETCB ( ""log.colors"" , p ? p : ""false"" , cb_log_config_colors , ""Should the log output use colors (TODO)"" )"		4078290	0					
ANR	4082402	Callee	SETCB		4078290	0					
ANR	4082403	Identifier	SETCB		4078290	0					
ANR	4082404	ArgumentList	"""log.colors"""		4078290	1					
ANR	4082405	Argument	"""log.colors"""		4078290	0					
ANR	4082406	PrimaryExpression	"""log.colors"""		4078290	0					
ANR	4082407	Argument	"p ? p : ""false"""		4078290	1					
ANR	4082408	ConditionalExpression	"p ? p : ""false"""		4078290	0					
ANR	4082409	Condition	p		4078290	0					
ANR	4082410	Identifier	p		4078290	0					
ANR	4082411	Identifier	p		4078290	1					
ANR	4082412	PrimaryExpression	"""false"""		4078290	2					
ANR	4082413	Argument	cb_log_config_colors		4078290	2					
ANR	4082414	Identifier	cb_log_config_colors		4078290	0					
ANR	4082415	Argument	"""Should the log output use colors (TODO)"""		4078290	3					
ANR	4082416	PrimaryExpression	"""Should the log output use colors (TODO)"""		4078290	0					
ANR	4082417	ExpressionStatement	free ( p )	3154:1:102032:102040	4078290	352	True				
ANR	4082418	CallExpression	free ( p )		4078290	0					
ANR	4082419	Callee	free		4078290	0					
ANR	4082420	Identifier	free		4078290	0					
ANR	4082421	ArgumentList	p		4078290	1					
ANR	4082422	Argument	p		4078290	0					
ANR	4082423	Identifier	p		4078290	0					
ANR	4082424	ExpressionStatement	"SETCB ( ""log.events"" , ""false"" , & cb_log_events , ""Remote HTTP server to sync events with"" )"	3156:1:102044:102131	4078290	353	True				
ANR	4082425	CallExpression	"SETCB ( ""log.events"" , ""false"" , & cb_log_events , ""Remote HTTP server to sync events with"" )"		4078290	0					
ANR	4082426	Callee	SETCB		4078290	0					
ANR	4082427	Identifier	SETCB		4078290	0					
ANR	4082428	ArgumentList	"""log.events"""		4078290	1					
ANR	4082429	Argument	"""log.events"""		4078290	0					
ANR	4082430	PrimaryExpression	"""log.events"""		4078290	0					
ANR	4082431	Argument	"""false"""		4078290	1					
ANR	4082432	PrimaryExpression	"""false"""		4078290	0					
ANR	4082433	Argument	& cb_log_events		4078290	2					
ANR	4082434	UnaryOperationExpression	& cb_log_events		4078290	0					
ANR	4082435	UnaryOperator	&		4078290	0					
ANR	4082436	Identifier	cb_log_events		4078290	1					
ANR	4082437	Argument	"""Remote HTTP server to sync events with"""		4078290	3					
ANR	4082438	PrimaryExpression	"""Remote HTTP server to sync events with"""		4078290	0					
ANR	4082439	ExpressionStatement	"SETPREF ( ""zign.prefix"" , ""sign"" , ""Default prefix for zignatures matches"" )"	3159:1:102144:102216	4078290	354	True				
ANR	4082440	CallExpression	"SETPREF ( ""zign.prefix"" , ""sign"" , ""Default prefix for zignatures matches"" )"		4078290	0					
ANR	4082441	Callee	SETPREF		4078290	0					
ANR	4082442	Identifier	SETPREF		4078290	0					
ANR	4082443	ArgumentList	"""zign.prefix"""		4078290	1					
ANR	4082444	Argument	"""zign.prefix"""		4078290	0					
ANR	4082445	PrimaryExpression	"""zign.prefix"""		4078290	0					
ANR	4082446	Argument	"""sign"""		4078290	1					
ANR	4082447	PrimaryExpression	"""sign"""		4078290	0					
ANR	4082448	Argument	"""Default prefix for zignatures matches"""		4078290	2					
ANR	4082449	PrimaryExpression	"""Default prefix for zignatures matches"""		4078290	0					
ANR	4082450	ExpressionStatement	"SETI ( ""zign.maxsz"" , 500 , ""Maximum zignature length"" )"	3160:1:102219:102271	4078290	355	True				
ANR	4082451	CallExpression	"SETI ( ""zign.maxsz"" , 500 , ""Maximum zignature length"" )"		4078290	0					
ANR	4082452	Callee	SETI		4078290	0					
ANR	4082453	Identifier	SETI		4078290	0					
ANR	4082454	ArgumentList	"""zign.maxsz"""		4078290	1					
ANR	4082455	Argument	"""zign.maxsz"""		4078290	0					
ANR	4082456	PrimaryExpression	"""zign.maxsz"""		4078290	0					
ANR	4082457	Argument	500		4078290	1					
ANR	4082458	PrimaryExpression	500		4078290	0					
ANR	4082459	Argument	"""Maximum zignature length"""		4078290	2					
ANR	4082460	PrimaryExpression	"""Maximum zignature length"""		4078290	0					
ANR	4082461	ExpressionStatement	"SETI ( ""zign.minsz"" , 16 , ""Minimum zignature length for matching"" )"	3161:1:102274:102338	4078290	356	True				
ANR	4082462	CallExpression	"SETI ( ""zign.minsz"" , 16 , ""Minimum zignature length for matching"" )"		4078290	0					
ANR	4082463	Callee	SETI		4078290	0					
ANR	4082464	Identifier	SETI		4078290	0					
ANR	4082465	ArgumentList	"""zign.minsz"""		4078290	1					
ANR	4082466	Argument	"""zign.minsz"""		4078290	0					
ANR	4082467	PrimaryExpression	"""zign.minsz"""		4078290	0					
ANR	4082468	Argument	16		4078290	1					
ANR	4082469	PrimaryExpression	16		4078290	0					
ANR	4082470	Argument	"""Minimum zignature length for matching"""		4078290	2					
ANR	4082471	PrimaryExpression	"""Minimum zignature length for matching"""		4078290	0					
ANR	4082472	ExpressionStatement	"SETI ( ""zign.mincc"" , 10 , ""Minimum cyclomatic complexity for matching"" )"	3162:1:102341:102410	4078290	357	True				
ANR	4082473	CallExpression	"SETI ( ""zign.mincc"" , 10 , ""Minimum cyclomatic complexity for matching"" )"		4078290	0					
ANR	4082474	Callee	SETI		4078290	0					
ANR	4082475	Identifier	SETI		4078290	0					
ANR	4082476	ArgumentList	"""zign.mincc"""		4078290	1					
ANR	4082477	Argument	"""zign.mincc"""		4078290	0					
ANR	4082478	PrimaryExpression	"""zign.mincc"""		4078290	0					
ANR	4082479	Argument	10		4078290	1					
ANR	4082480	PrimaryExpression	10		4078290	0					
ANR	4082481	Argument	"""Minimum cyclomatic complexity for matching"""		4078290	2					
ANR	4082482	PrimaryExpression	"""Minimum cyclomatic complexity for matching"""		4078290	0					
ANR	4082483	ExpressionStatement	"SETPREF ( ""zign.graph"" , ""true"" , ""Use graph metrics for matching"" )"	3163:1:102413:102477	4078290	358	True				
ANR	4082484	CallExpression	"SETPREF ( ""zign.graph"" , ""true"" , ""Use graph metrics for matching"" )"		4078290	0					
ANR	4082485	Callee	SETPREF		4078290	0					
ANR	4082486	Identifier	SETPREF		4078290	0					
ANR	4082487	ArgumentList	"""zign.graph"""		4078290	1					
ANR	4082488	Argument	"""zign.graph"""		4078290	0					
ANR	4082489	PrimaryExpression	"""zign.graph"""		4078290	0					
ANR	4082490	Argument	"""true"""		4078290	1					
ANR	4082491	PrimaryExpression	"""true"""		4078290	0					
ANR	4082492	Argument	"""Use graph metrics for matching"""		4078290	2					
ANR	4082493	PrimaryExpression	"""Use graph metrics for matching"""		4078290	0					
ANR	4082494	ExpressionStatement	"SETPREF ( ""zign.bytes"" , ""true"" , ""Use bytes patterns for matching"" )"	3164:1:102480:102545	4078290	359	True				
ANR	4082495	CallExpression	"SETPREF ( ""zign.bytes"" , ""true"" , ""Use bytes patterns for matching"" )"		4078290	0					
ANR	4082496	Callee	SETPREF		4078290	0					
ANR	4082497	Identifier	SETPREF		4078290	0					
ANR	4082498	ArgumentList	"""zign.bytes"""		4078290	1					
ANR	4082499	Argument	"""zign.bytes"""		4078290	0					
ANR	4082500	PrimaryExpression	"""zign.bytes"""		4078290	0					
ANR	4082501	Argument	"""true"""		4078290	1					
ANR	4082502	PrimaryExpression	"""true"""		4078290	0					
ANR	4082503	Argument	"""Use bytes patterns for matching"""		4078290	2					
ANR	4082504	PrimaryExpression	"""Use bytes patterns for matching"""		4078290	0					
ANR	4082505	ExpressionStatement	"SETPREF ( ""zign.offset"" , ""true"" , ""Use original offset for matching"" )"	3165:1:102548:102615	4078290	360	True				
ANR	4082506	CallExpression	"SETPREF ( ""zign.offset"" , ""true"" , ""Use original offset for matching"" )"		4078290	0					
ANR	4082507	Callee	SETPREF		4078290	0					
ANR	4082508	Identifier	SETPREF		4078290	0					
ANR	4082509	ArgumentList	"""zign.offset"""		4078290	1					
ANR	4082510	Argument	"""zign.offset"""		4078290	0					
ANR	4082511	PrimaryExpression	"""zign.offset"""		4078290	0					
ANR	4082512	Argument	"""true"""		4078290	1					
ANR	4082513	PrimaryExpression	"""true"""		4078290	0					
ANR	4082514	Argument	"""Use original offset for matching"""		4078290	2					
ANR	4082515	PrimaryExpression	"""Use original offset for matching"""		4078290	0					
ANR	4082516	ExpressionStatement	"SETPREF ( ""zign.refs"" , ""true"" , ""Use references for matching"" )"	3166:1:102618:102678	4078290	361	True				
ANR	4082517	CallExpression	"SETPREF ( ""zign.refs"" , ""true"" , ""Use references for matching"" )"		4078290	0					
ANR	4082518	Callee	SETPREF		4078290	0					
ANR	4082519	Identifier	SETPREF		4078290	0					
ANR	4082520	ArgumentList	"""zign.refs"""		4078290	1					
ANR	4082521	Argument	"""zign.refs"""		4078290	0					
ANR	4082522	PrimaryExpression	"""zign.refs"""		4078290	0					
ANR	4082523	Argument	"""true"""		4078290	1					
ANR	4082524	PrimaryExpression	"""true"""		4078290	0					
ANR	4082525	Argument	"""Use references for matching"""		4078290	2					
ANR	4082526	PrimaryExpression	"""Use references for matching"""		4078290	0					
ANR	4082527	ExpressionStatement	"SETPREF ( ""zign.hash"" , ""true"" , ""Use Hash for matching"" )"	3167:1:102681:102735	4078290	362	True				
ANR	4082528	CallExpression	"SETPREF ( ""zign.hash"" , ""true"" , ""Use Hash for matching"" )"		4078290	0					
ANR	4082529	Callee	SETPREF		4078290	0					
ANR	4082530	Identifier	SETPREF		4078290	0					
ANR	4082531	ArgumentList	"""zign.hash"""		4078290	1					
ANR	4082532	Argument	"""zign.hash"""		4078290	0					
ANR	4082533	PrimaryExpression	"""zign.hash"""		4078290	0					
ANR	4082534	Argument	"""true"""		4078290	1					
ANR	4082535	PrimaryExpression	"""true"""		4078290	0					
ANR	4082536	Argument	"""Use Hash for matching"""		4078290	2					
ANR	4082537	PrimaryExpression	"""Use Hash for matching"""		4078290	0					
ANR	4082538	Statement	SETPREF	3168:1:102738:102744	4078290	363	True				
ANR	4082539	Statement	(	3168:9:102746:102746	4078290	364	True				
ANR	4082540	Statement	"""zign.autoload"""	3168:10:102747:102761	4078290	365	True				
ANR	4082541	Statement	","	3168:25:102762:102762	4078290	366	True				
ANR	4082542	Statement	"""false"""	3168:27:102764:102770	4078290	367	True				
ANR	4082543	Statement	","	3168:34:102771:102771	4078290	368	True				
ANR	4082544	Statement	"""Autoload all zignatures located in """	3168:36:102773:102809	4078290	369	True				
ANR	4082545	Statement	R_JOIN_2_PATHS	3168:74:102811:102824	4078290	370	True				
ANR	4082546	Statement	(	3168:89:102826:102826	4078290	371	True				
ANR	4082547	Statement	"""~"""	3168:90:102827:102829	4078290	372	True				
ANR	4082548	Statement	","	3168:93:102830:102830	4078290	373	True				
ANR	4082549	Statement	R2_HOME_ZIGNS	3168:95:102832:102844	4078290	374	True				
ANR	4082550	Statement	)	3168:108:102845:102845	4078290	375	True				
ANR	4082551	Statement	)	3168:109:102846:102846	4078290	376	True				
ANR	4082552	ExpressionStatement		3168:110:102847:102847	4078290	377	True				
ANR	4082553	ExpressionStatement	"SETPREF ( ""zign.diff.bthresh"" , ""1.0"" , ""Threshold for diffing zign bytes [0, 1] (see zc?)"" )"	3169:1:102850:102939	4078290	378	True				
ANR	4082554	CallExpression	"SETPREF ( ""zign.diff.bthresh"" , ""1.0"" , ""Threshold for diffing zign bytes [0, 1] (see zc?)"" )"		4078290	0					
ANR	4082555	Callee	SETPREF		4078290	0					
ANR	4082556	Identifier	SETPREF		4078290	0					
ANR	4082557	ArgumentList	"""zign.diff.bthresh"""		4078290	1					
ANR	4082558	Argument	"""zign.diff.bthresh"""		4078290	0					
ANR	4082559	PrimaryExpression	"""zign.diff.bthresh"""		4078290	0					
ANR	4082560	Argument	"""1.0"""		4078290	1					
ANR	4082561	PrimaryExpression	"""1.0"""		4078290	0					
ANR	4082562	Argument	"""Threshold for diffing zign bytes [0, 1] (see zc?)"""		4078290	2					
ANR	4082563	PrimaryExpression	"""Threshold for diffing zign bytes [0, 1] (see zc?)"""		4078290	0					
ANR	4082564	ExpressionStatement	"SETPREF ( ""zign.diff.gthresh"" , ""1.0"" , ""Threshold for diffing zign graphs [0, 1] (see zc?)"" )"	3170:1:102942:103032	4078290	379	True				
ANR	4082565	CallExpression	"SETPREF ( ""zign.diff.gthresh"" , ""1.0"" , ""Threshold for diffing zign graphs [0, 1] (see zc?)"" )"		4078290	0					
ANR	4082566	Callee	SETPREF		4078290	0					
ANR	4082567	Identifier	SETPREF		4078290	0					
ANR	4082568	ArgumentList	"""zign.diff.gthresh"""		4078290	1					
ANR	4082569	Argument	"""zign.diff.gthresh"""		4078290	0					
ANR	4082570	PrimaryExpression	"""zign.diff.gthresh"""		4078290	0					
ANR	4082571	Argument	"""1.0"""		4078290	1					
ANR	4082572	PrimaryExpression	"""1.0"""		4078290	0					
ANR	4082573	Argument	"""Threshold for diffing zign graphs [0, 1] (see zc?)"""		4078290	2					
ANR	4082574	PrimaryExpression	"""Threshold for diffing zign graphs [0, 1] (see zc?)"""		4078290	0					
ANR	4082575	ExpressionStatement	"SETCB ( ""diff.sort"" , ""addr"" , & cb_diff_sort , ""Specify function diff sorting column see (e diff.sort=?)"" )"	3173:1:103048:103150	4078290	380	True				
ANR	4082576	CallExpression	"SETCB ( ""diff.sort"" , ""addr"" , & cb_diff_sort , ""Specify function diff sorting column see (e diff.sort=?)"" )"		4078290	0					
ANR	4082577	Callee	SETCB		4078290	0					
ANR	4082578	Identifier	SETCB		4078290	0					
ANR	4082579	ArgumentList	"""diff.sort"""		4078290	1					
ANR	4082580	Argument	"""diff.sort"""		4078290	0					
ANR	4082581	PrimaryExpression	"""diff.sort"""		4078290	0					
ANR	4082582	Argument	"""addr"""		4078290	1					
ANR	4082583	PrimaryExpression	"""addr"""		4078290	0					
ANR	4082584	Argument	& cb_diff_sort		4078290	2					
ANR	4082585	UnaryOperationExpression	& cb_diff_sort		4078290	0					
ANR	4082586	UnaryOperator	&		4078290	0					
ANR	4082587	Identifier	cb_diff_sort		4078290	1					
ANR	4082588	Argument	"""Specify function diff sorting column see (e diff.sort=?)"""		4078290	3					
ANR	4082589	PrimaryExpression	"""Specify function diff sorting column see (e diff.sort=?)"""		4078290	0					
ANR	4082590	ExpressionStatement	"SETI ( ""diff.from"" , 0 , ""Set source diffing address for px (uses cc command)"" )"	3174:1:103153:103229	4078290	381	True				
ANR	4082591	CallExpression	"SETI ( ""diff.from"" , 0 , ""Set source diffing address for px (uses cc command)"" )"		4078290	0					
ANR	4082592	Callee	SETI		4078290	0					
ANR	4082593	Identifier	SETI		4078290	0					
ANR	4082594	ArgumentList	"""diff.from"""		4078290	1					
ANR	4082595	Argument	"""diff.from"""		4078290	0					
ANR	4082596	PrimaryExpression	"""diff.from"""		4078290	0					
ANR	4082597	Argument	0		4078290	1					
ANR	4082598	PrimaryExpression	0		4078290	0					
ANR	4082599	Argument	"""Set source diffing address for px (uses cc command)"""		4078290	2					
ANR	4082600	PrimaryExpression	"""Set source diffing address for px (uses cc command)"""		4078290	0					
ANR	4082601	ExpressionStatement	"SETI ( ""diff.to"" , 0 , ""Set destination diffing address for px (uses cc command)"" )"	3175:1:103232:103311	4078290	382	True				
ANR	4082602	CallExpression	"SETI ( ""diff.to"" , 0 , ""Set destination diffing address for px (uses cc command)"" )"		4078290	0					
ANR	4082603	Callee	SETI		4078290	0					
ANR	4082604	Identifier	SETI		4078290	0					
ANR	4082605	ArgumentList	"""diff.to"""		4078290	1					
ANR	4082606	Argument	"""diff.to"""		4078290	0					
ANR	4082607	PrimaryExpression	"""diff.to"""		4078290	0					
ANR	4082608	Argument	0		4078290	1					
ANR	4082609	PrimaryExpression	0		4078290	0					
ANR	4082610	Argument	"""Set destination diffing address for px (uses cc command)"""		4078290	2					
ANR	4082611	PrimaryExpression	"""Set destination diffing address for px (uses cc command)"""		4078290	0					
ANR	4082612	ExpressionStatement	"SETPREF ( ""diff.bare"" , ""false"" , ""Never show function names in diff output"" )"	3176:1:103314:103388	4078290	383	True				
ANR	4082613	CallExpression	"SETPREF ( ""diff.bare"" , ""false"" , ""Never show function names in diff output"" )"		4078290	0					
ANR	4082614	Callee	SETPREF		4078290	0					
ANR	4082615	Identifier	SETPREF		4078290	0					
ANR	4082616	ArgumentList	"""diff.bare"""		4078290	1					
ANR	4082617	Argument	"""diff.bare"""		4078290	0					
ANR	4082618	PrimaryExpression	"""diff.bare"""		4078290	0					
ANR	4082619	Argument	"""false"""		4078290	1					
ANR	4082620	PrimaryExpression	"""false"""		4078290	0					
ANR	4082621	Argument	"""Never show function names in diff output"""		4078290	2					
ANR	4082622	PrimaryExpression	"""Never show function names in diff output"""		4078290	0					
ANR	4082623	ExpressionStatement	"SETPREF ( ""diff.levenstein"" , ""false"" , ""Use faster (and buggy) levenstein algorithm for buffer distance diffing"" )"	3177:1:103391:103502	4078290	384	True				
ANR	4082624	CallExpression	"SETPREF ( ""diff.levenstein"" , ""false"" , ""Use faster (and buggy) levenstein algorithm for buffer distance diffing"" )"		4078290	0					
ANR	4082625	Callee	SETPREF		4078290	0					
ANR	4082626	Identifier	SETPREF		4078290	0					
ANR	4082627	ArgumentList	"""diff.levenstein"""		4078290	1					
ANR	4082628	Argument	"""diff.levenstein"""		4078290	0					
ANR	4082629	PrimaryExpression	"""diff.levenstein"""		4078290	0					
ANR	4082630	Argument	"""false"""		4078290	1					
ANR	4082631	PrimaryExpression	"""false"""		4078290	0					
ANR	4082632	Argument	"""Use faster (and buggy) levenstein algorithm for buffer distance diffing"""		4078290	2					
ANR	4082633	PrimaryExpression	"""Use faster (and buggy) levenstein algorithm for buffer distance diffing"""		4078290	0					
ANR	4082634	ExpressionStatement	"SETI ( ""dir.depth"" , 10 , ""Maximum depth when searching recursively for files"" )"	3180:1:103517:103594	4078290	385	True				
ANR	4082635	CallExpression	"SETI ( ""dir.depth"" , 10 , ""Maximum depth when searching recursively for files"" )"		4078290	0					
ANR	4082636	Callee	SETI		4078290	0					
ANR	4082637	Identifier	SETI		4078290	0					
ANR	4082638	ArgumentList	"""dir.depth"""		4078290	1					
ANR	4082639	Argument	"""dir.depth"""		4078290	0					
ANR	4082640	PrimaryExpression	"""dir.depth"""		4078290	0					
ANR	4082641	Argument	10		4078290	1					
ANR	4082642	PrimaryExpression	10		4078290	0					
ANR	4082643	Argument	"""Maximum depth when searching recursively for files"""		4078290	2					
ANR	4082644	PrimaryExpression	"""Maximum depth when searching recursively for files"""		4078290	0					
ANR	4082645	ExpressionStatement	"SETCB ( ""dir.dbgsnap"" , ""."" , & cb_dbgsnap , ""Path to session dump files"" )"	3181:1:103597:103666	4078290	386	True				
ANR	4082646	CallExpression	"SETCB ( ""dir.dbgsnap"" , ""."" , & cb_dbgsnap , ""Path to session dump files"" )"		4078290	0					
ANR	4082647	Callee	SETCB		4078290	0					
ANR	4082648	Identifier	SETCB		4078290	0					
ANR	4082649	ArgumentList	"""dir.dbgsnap"""		4078290	1					
ANR	4082650	Argument	"""dir.dbgsnap"""		4078290	0					
ANR	4082651	PrimaryExpression	"""dir.dbgsnap"""		4078290	0					
ANR	4082652	Argument	"""."""		4078290	1					
ANR	4082653	PrimaryExpression	"""."""		4078290	0					
ANR	4082654	Argument	& cb_dbgsnap		4078290	2					
ANR	4082655	UnaryOperationExpression	& cb_dbgsnap		4078290	0					
ANR	4082656	UnaryOperator	&		4078290	0					
ANR	4082657	Identifier	cb_dbgsnap		4078290	1					
ANR	4082658	Argument	"""Path to session dump files"""		4078290	3					
ANR	4082659	PrimaryExpression	"""Path to session dump files"""		4078290	0					
ANR	4082660	CompoundStatement		438:2:28999:29103	4078290	387					
ANR	4082661	IdentifierDeclStatement	"char * path = r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC ) , r_config_get ( core -> config , ""dir.prefix"" ) ) ;"	3183:2:103673:103777	4078290	0	True				
ANR	4082662	IdentifierDecl	"* path = r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC ) , r_config_get ( core -> config , ""dir.prefix"" ) )"		4078290	0					
ANR	4082663	IdentifierDeclType	char *		4078290	0					
ANR	4082664	Identifier	path		4078290	1					
ANR	4082665	AssignmentExpression	"* path = r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC ) , r_config_get ( core -> config , ""dir.prefix"" ) )"		4078290	2		=			
ANR	4082666	Identifier	path		4078290	0					
ANR	4082667	CallExpression	"r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC ) , r_config_get ( core -> config , ""dir.prefix"" ) )"		4078290	1					
ANR	4082668	Callee	r_str_newf		4078290	0					
ANR	4082669	Identifier	r_str_newf		4078290	0					
ANR	4082670	ArgumentList	"R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC )"		4078290	1					
ANR	4082671	Argument	"R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC )"		4078290	0					
ANR	4082672	CallExpression	"R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC )"		4078290	0					
ANR	4082673	Callee	R_JOIN_2_PATHS		4078290	0					
ANR	4082674	Identifier	R_JOIN_2_PATHS		4078290	0					
ANR	4082675	ArgumentList	"""%s"""		4078290	1					
ANR	4082676	Argument	"""%s"""		4078290	0					
ANR	4082677	PrimaryExpression	"""%s"""		4078290	0					
ANR	4082678	Argument	R2_SDB_MAGIC		4078290	1					
ANR	4082679	Identifier	R2_SDB_MAGIC		4078290	0					
ANR	4082680	Argument	"r_config_get ( core -> config , ""dir.prefix"" )"		4078290	1					
ANR	4082681	CallExpression	"r_config_get ( core -> config , ""dir.prefix"" )"		4078290	0					
ANR	4082682	Callee	r_config_get		4078290	0					
ANR	4082683	Identifier	r_config_get		4078290	0					
ANR	4082684	ArgumentList	core -> config		4078290	1					
ANR	4082685	Argument	core -> config		4078290	0					
ANR	4082686	PtrMemberAccess	core -> config		4078290	0					
ANR	4082687	Identifier	core		4078290	0					
ANR	4082688	Identifier	config		4078290	1					
ANR	4082689	Argument	"""dir.prefix"""		4078290	1					
ANR	4082690	PrimaryExpression	"""dir.prefix"""		4078290	0					
ANR	4082691	ExpressionStatement	"SETPREF ( ""dir.magic"" , path , ""Path to r_magic files"" )"	3184:2:103781:103833	4078290	1	True				
ANR	4082692	CallExpression	"SETPREF ( ""dir.magic"" , path , ""Path to r_magic files"" )"		4078290	0					
ANR	4082693	Callee	SETPREF		4078290	0					
ANR	4082694	Identifier	SETPREF		4078290	0					
ANR	4082695	ArgumentList	"""dir.magic"""		4078290	1					
ANR	4082696	Argument	"""dir.magic"""		4078290	0					
ANR	4082697	PrimaryExpression	"""dir.magic"""		4078290	0					
ANR	4082698	Argument	path		4078290	1					
ANR	4082699	Identifier	path		4078290	0					
ANR	4082700	Argument	"""Path to r_magic files"""		4078290	2					
ANR	4082701	PrimaryExpression	"""Path to r_magic files"""		4078290	0					
ANR	4082702	ExpressionStatement	free ( path )	3185:2:103837:103848	4078290	2	True				
ANR	4082703	CallExpression	free ( path )		4078290	0					
ANR	4082704	Callee	free		4078290	0					
ANR	4082705	Identifier	free		4078290	0					
ANR	4082706	ArgumentList	path		4078290	1					
ANR	4082707	Argument	path		4078290	0					
ANR	4082708	Identifier	path		4078290	0					
ANR	4082709	ExpressionStatement	"path = r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS ) , r_config_get ( core -> config , ""dir.prefix"" ) )"	3186:2:103852:103948	4078290	3	True				
ANR	4082710	AssignmentExpression	"path = r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS ) , r_config_get ( core -> config , ""dir.prefix"" ) )"		4078290	0		=			
ANR	4082711	Identifier	path		4078290	0					
ANR	4082712	CallExpression	"r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS ) , r_config_get ( core -> config , ""dir.prefix"" ) )"		4078290	1					
ANR	4082713	Callee	r_str_newf		4078290	0					
ANR	4082714	Identifier	r_str_newf		4078290	0					
ANR	4082715	ArgumentList	"R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS )"		4078290	1					
ANR	4082716	Argument	"R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS )"		4078290	0					
ANR	4082717	CallExpression	"R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS )"		4078290	0					
ANR	4082718	Callee	R_JOIN_2_PATHS		4078290	0					
ANR	4082719	Identifier	R_JOIN_2_PATHS		4078290	0					
ANR	4082720	ArgumentList	"""%s"""		4078290	1					
ANR	4082721	Argument	"""%s"""		4078290	0					
ANR	4082722	PrimaryExpression	"""%s"""		4078290	0					
ANR	4082723	Argument	R2_PLUGINS		4078290	1					
ANR	4082724	Identifier	R2_PLUGINS		4078290	0					
ANR	4082725	Argument	"r_config_get ( core -> config , ""dir.prefix"" )"		4078290	1					
ANR	4082726	CallExpression	"r_config_get ( core -> config , ""dir.prefix"" )"		4078290	0					
ANR	4082727	Callee	r_config_get		4078290	0					
ANR	4082728	Identifier	r_config_get		4078290	0					
ANR	4082729	ArgumentList	core -> config		4078290	1					
ANR	4082730	Argument	core -> config		4078290	0					
ANR	4082731	PtrMemberAccess	core -> config		4078290	0					
ANR	4082732	Identifier	core		4078290	0					
ANR	4082733	Identifier	config		4078290	1					
ANR	4082734	Argument	"""dir.prefix"""		4078290	1					
ANR	4082735	PrimaryExpression	"""dir.prefix"""		4078290	0					
ANR	4082736	ExpressionStatement	"SETPREF ( ""dir.plugins"" , path , ""Path to plugin files to be loaded at startup"" )"	3187:2:103952:104029	4078290	4	True				
ANR	4082737	CallExpression	"SETPREF ( ""dir.plugins"" , path , ""Path to plugin files to be loaded at startup"" )"		4078290	0					
ANR	4082738	Callee	SETPREF		4078290	0					
ANR	4082739	Identifier	SETPREF		4078290	0					
ANR	4082740	ArgumentList	"""dir.plugins"""		4078290	1					
ANR	4082741	Argument	"""dir.plugins"""		4078290	0					
ANR	4082742	PrimaryExpression	"""dir.plugins"""		4078290	0					
ANR	4082743	Argument	path		4078290	1					
ANR	4082744	Identifier	path		4078290	0					
ANR	4082745	Argument	"""Path to plugin files to be loaded at startup"""		4078290	2					
ANR	4082746	PrimaryExpression	"""Path to plugin files to be loaded at startup"""		4078290	0					
ANR	4082747	ExpressionStatement	free ( path )	3188:2:104033:104044	4078290	5	True				
ANR	4082748	CallExpression	free ( path )		4078290	0					
ANR	4082749	Callee	free		4078290	0					
ANR	4082750	Identifier	free		4078290	0					
ANR	4082751	ArgumentList	path		4078290	1					
ANR	4082752	Argument	path		4078290	0					
ANR	4082753	Identifier	path		4078290	0					
ANR	4082754	ExpressionStatement	"SETCB ( ""dir.source"" , """" , & cb_dirsrc , ""Path to find source files"" )"	3190:1:104050:104115	4078290	388	True				
ANR	4082755	CallExpression	"SETCB ( ""dir.source"" , """" , & cb_dirsrc , ""Path to find source files"" )"		4078290	0					
ANR	4082756	Callee	SETCB		4078290	0					
ANR	4082757	Identifier	SETCB		4078290	0					
ANR	4082758	ArgumentList	"""dir.source"""		4078290	1					
ANR	4082759	Argument	"""dir.source"""		4078290	0					
ANR	4082760	PrimaryExpression	"""dir.source"""		4078290	0					
ANR	4082761	Argument	""""""		4078290	1					
ANR	4082762	PrimaryExpression	""""""		4078290	0					
ANR	4082763	Argument	& cb_dirsrc		4078290	2					
ANR	4082764	UnaryOperationExpression	& cb_dirsrc		4078290	0					
ANR	4082765	UnaryOperator	&		4078290	0					
ANR	4082766	Identifier	cb_dirsrc		4078290	1					
ANR	4082767	Argument	"""Path to find source files"""		4078290	3					
ANR	4082768	PrimaryExpression	"""Path to find source files"""		4078290	0					
ANR	4082769	ExpressionStatement	"SETPREF ( ""dir.types"" , ""/usr/include"" , ""Default path to look for cparse type files"" )"	3191:1:104118:104201	4078290	389	True				
ANR	4082770	CallExpression	"SETPREF ( ""dir.types"" , ""/usr/include"" , ""Default path to look for cparse type files"" )"		4078290	0					
ANR	4082771	Callee	SETPREF		4078290	0					
ANR	4082772	Identifier	SETPREF		4078290	0					
ANR	4082773	ArgumentList	"""dir.types"""		4078290	1					
ANR	4082774	Argument	"""dir.types"""		4078290	0					
ANR	4082775	PrimaryExpression	"""dir.types"""		4078290	0					
ANR	4082776	Argument	"""/usr/include"""		4078290	1					
ANR	4082777	PrimaryExpression	"""/usr/include"""		4078290	0					
ANR	4082778	Argument	"""Default path to look for cparse type files"""		4078290	2					
ANR	4082779	PrimaryExpression	"""Default path to look for cparse type files"""		4078290	0					
ANR	4082780	ExpressionStatement	"SETPREF ( ""dir.libs"" , """" , ""Specify path to find libraries to load when bin.libs=true"" )"	3192:1:104204:104289	4078290	390	True				
ANR	4082781	CallExpression	"SETPREF ( ""dir.libs"" , """" , ""Specify path to find libraries to load when bin.libs=true"" )"		4078290	0					
ANR	4082782	Callee	SETPREF		4078290	0					
ANR	4082783	Identifier	SETPREF		4078290	0					
ANR	4082784	ArgumentList	"""dir.libs"""		4078290	1					
ANR	4082785	Argument	"""dir.libs"""		4078290	0					
ANR	4082786	PrimaryExpression	"""dir.libs"""		4078290	0					
ANR	4082787	Argument	""""""		4078290	1					
ANR	4082788	PrimaryExpression	""""""		4078290	0					
ANR	4082789	Argument	"""Specify path to find libraries to load when bin.libs=true"""		4078290	2					
ANR	4082790	PrimaryExpression	"""Specify path to find libraries to load when bin.libs=true"""		4078290	0					
ANR	4082791	ExpressionStatement	p = r_sys_getenv ( R_SYS_HOME )	3193:1:104292:104321	4078290	391	True				
ANR	4082792	AssignmentExpression	p = r_sys_getenv ( R_SYS_HOME )		4078290	0		=			
ANR	4082793	Identifier	p		4078290	0					
ANR	4082794	CallExpression	r_sys_getenv ( R_SYS_HOME )		4078290	1					
ANR	4082795	Callee	r_sys_getenv		4078290	0					
ANR	4082796	Identifier	r_sys_getenv		4078290	0					
ANR	4082797	ArgumentList	R_SYS_HOME		4078290	1					
ANR	4082798	Argument	R_SYS_HOME		4078290	0					
ANR	4082799	Identifier	R_SYS_HOME		4078290	0					
ANR	4082800	ExpressionStatement	"SETCB ( ""dir.home"" , p , & cb_dirhome , ""Path for the home directory"" )"	3194:1:104324:104389	4078290	392	True				
ANR	4082801	CallExpression	"SETCB ( ""dir.home"" , p , & cb_dirhome , ""Path for the home directory"" )"		4078290	0					
ANR	4082802	Callee	SETCB		4078290	0					
ANR	4082803	Identifier	SETCB		4078290	0					
ANR	4082804	ArgumentList	"""dir.home"""		4078290	1					
ANR	4082805	Argument	"""dir.home"""		4078290	0					
ANR	4082806	PrimaryExpression	"""dir.home"""		4078290	0					
ANR	4082807	Argument	p		4078290	1					
ANR	4082808	Identifier	p		4078290	0					
ANR	4082809	Argument	& cb_dirhome		4078290	2					
ANR	4082810	UnaryOperationExpression	& cb_dirhome		4078290	0					
ANR	4082811	UnaryOperator	&		4078290	0					
ANR	4082812	Identifier	cb_dirhome		4078290	1					
ANR	4082813	Argument	"""Path for the home directory"""		4078290	3					
ANR	4082814	PrimaryExpression	"""Path for the home directory"""		4078290	0					
ANR	4082815	ExpressionStatement	free ( p )	3195:1:104392:104400	4078290	393	True				
ANR	4082816	CallExpression	free ( p )		4078290	0					
ANR	4082817	Callee	free		4078290	0					
ANR	4082818	Identifier	free		4078290	0					
ANR	4082819	ArgumentList	p		4078290	1					
ANR	4082820	Argument	p		4078290	0					
ANR	4082821	Identifier	p		4078290	0					
ANR	4082822	ExpressionStatement	p = r_sys_getenv ( R_SYS_TMP )	3196:1:104403:104431	4078290	394	True				
ANR	4082823	AssignmentExpression	p = r_sys_getenv ( R_SYS_TMP )		4078290	0		=			
ANR	4082824	Identifier	p		4078290	0					
ANR	4082825	CallExpression	r_sys_getenv ( R_SYS_TMP )		4078290	1					
ANR	4082826	Callee	r_sys_getenv		4078290	0					
ANR	4082827	Identifier	r_sys_getenv		4078290	0					
ANR	4082828	ArgumentList	R_SYS_TMP		4078290	1					
ANR	4082829	Argument	R_SYS_TMP		4078290	0					
ANR	4082830	Identifier	R_SYS_TMP		4078290	0					
ANR	4082831	ExpressionStatement	"SETCB ( ""dir.tmp"" , p , & cb_dirtmp , ""Path of the tmp directory"" )"	3197:1:104434:104495	4078290	395	True				
ANR	4082832	CallExpression	"SETCB ( ""dir.tmp"" , p , & cb_dirtmp , ""Path of the tmp directory"" )"		4078290	0					
ANR	4082833	Callee	SETCB		4078290	0					
ANR	4082834	Identifier	SETCB		4078290	0					
ANR	4082835	ArgumentList	"""dir.tmp"""		4078290	1					
ANR	4082836	Argument	"""dir.tmp"""		4078290	0					
ANR	4082837	PrimaryExpression	"""dir.tmp"""		4078290	0					
ANR	4082838	Argument	p		4078290	1					
ANR	4082839	Identifier	p		4078290	0					
ANR	4082840	Argument	& cb_dirtmp		4078290	2					
ANR	4082841	UnaryOperationExpression	& cb_dirtmp		4078290	0					
ANR	4082842	UnaryOperator	&		4078290	0					
ANR	4082843	Identifier	cb_dirtmp		4078290	1					
ANR	4082844	Argument	"""Path of the tmp directory"""		4078290	3					
ANR	4082845	PrimaryExpression	"""Path of the tmp directory"""		4078290	0					
ANR	4082846	ExpressionStatement	free ( p )	3198:1:104498:104506	4078290	396	True				
ANR	4082847	CallExpression	free ( p )		4078290	0					
ANR	4082848	Callee	free		4078290	0					
ANR	4082849	Identifier	free		4078290	0					
ANR	4082850	ArgumentList	p		4078290	1					
ANR	4082851	Argument	p		4078290	0					
ANR	4082852	Identifier	p		4078290	0					
ANR	4082853	ExpressionStatement	"SETPREF ( ""dir.projects"" , ""/data/data/org.radare.radare2installer/radare2/projects"" , ""Default path for projects"" )"	3200:1:104525:104637	4078290	397	True				
ANR	4082854	CallExpression	"SETPREF ( ""dir.projects"" , ""/data/data/org.radare.radare2installer/radare2/projects"" , ""Default path for projects"" )"		4078290	0					
ANR	4082855	Callee	SETPREF		4078290	0					
ANR	4082856	Identifier	SETPREF		4078290	0					
ANR	4082857	ArgumentList	"""dir.projects"""		4078290	1					
ANR	4082858	Argument	"""dir.projects"""		4078290	0					
ANR	4082859	PrimaryExpression	"""dir.projects"""		4078290	0					
ANR	4082860	Argument	"""/data/data/org.radare.radare2installer/radare2/projects"""		4078290	1					
ANR	4082861	PrimaryExpression	"""/data/data/org.radare.radare2installer/radare2/projects"""		4078290	0					
ANR	4082862	Argument	"""Default path for projects"""		4078290	2					
ANR	4082863	PrimaryExpression	"""Default path for projects"""		4078290	0					
ANR	4082864	ExpressionStatement	"SETCB ( ""dir.zigns"" , R_JOIN_2_PATHS ( ""~"" , R2_HOME_ZIGNS ) , & cb_dirzigns , ""Default path for zignatures (see zo command)"" )"	3204:1:104749:104867	4078290	398	True				
ANR	4082865	CallExpression	"SETCB ( ""dir.zigns"" , R_JOIN_2_PATHS ( ""~"" , R2_HOME_ZIGNS ) , & cb_dirzigns , ""Default path for zignatures (see zo command)"" )"		4078290	0					
ANR	4082866	Callee	SETCB		4078290	0					
ANR	4082867	Identifier	SETCB		4078290	0					
ANR	4082868	ArgumentList	"""dir.zigns"""		4078290	1					
ANR	4082869	Argument	"""dir.zigns"""		4078290	0					
ANR	4082870	PrimaryExpression	"""dir.zigns"""		4078290	0					
ANR	4082871	Argument	"R_JOIN_2_PATHS ( ""~"" , R2_HOME_ZIGNS )"		4078290	1					
ANR	4082872	CallExpression	"R_JOIN_2_PATHS ( ""~"" , R2_HOME_ZIGNS )"		4078290	0					
ANR	4082873	Callee	R_JOIN_2_PATHS		4078290	0					
ANR	4082874	Identifier	R_JOIN_2_PATHS		4078290	0					
ANR	4082875	ArgumentList	"""~"""		4078290	1					
ANR	4082876	Argument	"""~"""		4078290	0					
ANR	4082877	PrimaryExpression	"""~"""		4078290	0					
ANR	4082878	Argument	R2_HOME_ZIGNS		4078290	1					
ANR	4082879	Identifier	R2_HOME_ZIGNS		4078290	0					
ANR	4082880	Argument	& cb_dirzigns		4078290	2					
ANR	4082881	UnaryOperationExpression	& cb_dirzigns		4078290	0					
ANR	4082882	UnaryOperator	&		4078290	0					
ANR	4082883	Identifier	cb_dirzigns		4078290	1					
ANR	4082884	Argument	"""Default path for zignatures (see zo command)"""		4078290	3					
ANR	4082885	PrimaryExpression	"""Default path for zignatures (see zo command)"""		4078290	0					
ANR	4082886	ExpressionStatement	"SETPREF ( ""stack.reg"" , ""SP"" , ""Which register to use as stack pointer in the visual debug"" )"	3205:1:104870:104959	4078290	399	True				
ANR	4082887	CallExpression	"SETPREF ( ""stack.reg"" , ""SP"" , ""Which register to use as stack pointer in the visual debug"" )"		4078290	0					
ANR	4082888	Callee	SETPREF		4078290	0					
ANR	4082889	Identifier	SETPREF		4078290	0					
ANR	4082890	ArgumentList	"""stack.reg"""		4078290	1					
ANR	4082891	Argument	"""stack.reg"""		4078290	0					
ANR	4082892	PrimaryExpression	"""stack.reg"""		4078290	0					
ANR	4082893	Argument	"""SP"""		4078290	1					
ANR	4082894	PrimaryExpression	"""SP"""		4078290	0					
ANR	4082895	Argument	"""Which register to use as stack pointer in the visual debug"""		4078290	2					
ANR	4082896	PrimaryExpression	"""Which register to use as stack pointer in the visual debug"""		4078290	0					
ANR	4082897	ExpressionStatement	"SETPREF ( ""stack.bytes"" , ""true"" , ""Show bytes instead of words in stack"" )"	3206:1:104962:105033	4078290	400	True				
ANR	4082898	CallExpression	"SETPREF ( ""stack.bytes"" , ""true"" , ""Show bytes instead of words in stack"" )"		4078290	0					
ANR	4082899	Callee	SETPREF		4078290	0					
ANR	4082900	Identifier	SETPREF		4078290	0					
ANR	4082901	ArgumentList	"""stack.bytes"""		4078290	1					
ANR	4082902	Argument	"""stack.bytes"""		4078290	0					
ANR	4082903	PrimaryExpression	"""stack.bytes"""		4078290	0					
ANR	4082904	Argument	"""true"""		4078290	1					
ANR	4082905	PrimaryExpression	"""true"""		4078290	0					
ANR	4082906	Argument	"""Show bytes instead of words in stack"""		4078290	2					
ANR	4082907	PrimaryExpression	"""Show bytes instead of words in stack"""		4078290	0					
ANR	4082908	ExpressionStatement	"SETPREF ( ""stack.anotated"" , ""false"" , ""Show anotated hexdump in visual debug"" )"	3207:1:105036:105112	4078290	401	True				
ANR	4082909	CallExpression	"SETPREF ( ""stack.anotated"" , ""false"" , ""Show anotated hexdump in visual debug"" )"		4078290	0					
ANR	4082910	Callee	SETPREF		4078290	0					
ANR	4082911	Identifier	SETPREF		4078290	0					
ANR	4082912	ArgumentList	"""stack.anotated"""		4078290	1					
ANR	4082913	Argument	"""stack.anotated"""		4078290	0					
ANR	4082914	PrimaryExpression	"""stack.anotated"""		4078290	0					
ANR	4082915	Argument	"""false"""		4078290	1					
ANR	4082916	PrimaryExpression	"""false"""		4078290	0					
ANR	4082917	Argument	"""Show anotated hexdump in visual debug"""		4078290	2					
ANR	4082918	PrimaryExpression	"""Show anotated hexdump in visual debug"""		4078290	0					
ANR	4082919	ExpressionStatement	"SETI ( ""stack.size"" , 64 , ""Size in bytes of stack hexdump in visual debug"" )"	3208:1:105115:105189	4078290	402	True				
ANR	4082920	CallExpression	"SETI ( ""stack.size"" , 64 , ""Size in bytes of stack hexdump in visual debug"" )"		4078290	0					
ANR	4082921	Callee	SETI		4078290	0					
ANR	4082922	Identifier	SETI		4078290	0					
ANR	4082923	ArgumentList	"""stack.size"""		4078290	1					
ANR	4082924	Argument	"""stack.size"""		4078290	0					
ANR	4082925	PrimaryExpression	"""stack.size"""		4078290	0					
ANR	4082926	Argument	64		4078290	1					
ANR	4082927	PrimaryExpression	64		4078290	0					
ANR	4082928	Argument	"""Size in bytes of stack hexdump in visual debug"""		4078290	2					
ANR	4082929	PrimaryExpression	"""Size in bytes of stack hexdump in visual debug"""		4078290	0					
ANR	4082930	ExpressionStatement	"SETI ( ""stack.delta"" , 0 , ""Delta for the stack dump"" )"	3209:1:105192:105244	4078290	403	True				
ANR	4082931	CallExpression	"SETI ( ""stack.delta"" , 0 , ""Delta for the stack dump"" )"		4078290	0					
ANR	4082932	Callee	SETI		4078290	0					
ANR	4082933	Identifier	SETI		4078290	0					
ANR	4082934	ArgumentList	"""stack.delta"""		4078290	1					
ANR	4082935	Argument	"""stack.delta"""		4078290	0					
ANR	4082936	PrimaryExpression	"""stack.delta"""		4078290	0					
ANR	4082937	Argument	0		4078290	1					
ANR	4082938	PrimaryExpression	0		4078290	0					
ANR	4082939	Argument	"""Delta for the stack dump"""		4078290	2					
ANR	4082940	PrimaryExpression	"""Delta for the stack dump"""		4078290	0					
ANR	4082941	ExpressionStatement	"SETCB ( ""dbg.libs"" , """" , & cb_dbg_libs , ""If set stop when loading matching libname"" )"	3211:1:105248:105329	4078290	404	True				
ANR	4082942	CallExpression	"SETCB ( ""dbg.libs"" , """" , & cb_dbg_libs , ""If set stop when loading matching libname"" )"		4078290	0					
ANR	4082943	Callee	SETCB		4078290	0					
ANR	4082944	Identifier	SETCB		4078290	0					
ANR	4082945	ArgumentList	"""dbg.libs"""		4078290	1					
ANR	4082946	Argument	"""dbg.libs"""		4078290	0					
ANR	4082947	PrimaryExpression	"""dbg.libs"""		4078290	0					
ANR	4082948	Argument	""""""		4078290	1					
ANR	4082949	PrimaryExpression	""""""		4078290	0					
ANR	4082950	Argument	& cb_dbg_libs		4078290	2					
ANR	4082951	UnaryOperationExpression	& cb_dbg_libs		4078290	0					
ANR	4082952	UnaryOperator	&		4078290	0					
ANR	4082953	Identifier	cb_dbg_libs		4078290	1					
ANR	4082954	Argument	"""If set stop when loading matching libname"""		4078290	3					
ANR	4082955	PrimaryExpression	"""If set stop when loading matching libname"""		4078290	0					
ANR	4082956	ExpressionStatement	"SETPREF ( ""dbg.skipover"" , ""false"" , ""Make dso perform a dss (same goes for esil and visual/graph"" )"	3212:1:105332:105428	4078290	405	True				
ANR	4082957	CallExpression	"SETPREF ( ""dbg.skipover"" , ""false"" , ""Make dso perform a dss (same goes for esil and visual/graph"" )"		4078290	0					
ANR	4082958	Callee	SETPREF		4078290	0					
ANR	4082959	Identifier	SETPREF		4078290	0					
ANR	4082960	ArgumentList	"""dbg.skipover"""		4078290	1					
ANR	4082961	Argument	"""dbg.skipover"""		4078290	0					
ANR	4082962	PrimaryExpression	"""dbg.skipover"""		4078290	0					
ANR	4082963	Argument	"""false"""		4078290	1					
ANR	4082964	PrimaryExpression	"""false"""		4078290	0					
ANR	4082965	Argument	"""Make dso perform a dss (same goes for esil and visual/graph"""		4078290	2					
ANR	4082966	PrimaryExpression	"""Make dso perform a dss (same goes for esil and visual/graph"""		4078290	0					
ANR	4082967	ExpressionStatement	"SETI ( ""dbg.hwbp"" , 0 , ""Set HW or SW breakpoints"" )"	3213:1:105431:105479	4078290	406	True				
ANR	4082968	CallExpression	"SETI ( ""dbg.hwbp"" , 0 , ""Set HW or SW breakpoints"" )"		4078290	0					
ANR	4082969	Callee	SETI		4078290	0					
ANR	4082970	Identifier	SETI		4078290	0					
ANR	4082971	ArgumentList	"""dbg.hwbp"""		4078290	1					
ANR	4082972	Argument	"""dbg.hwbp"""		4078290	0					
ANR	4082973	PrimaryExpression	"""dbg.hwbp"""		4078290	0					
ANR	4082974	Argument	0		4078290	1					
ANR	4082975	PrimaryExpression	0		4078290	0					
ANR	4082976	Argument	"""Set HW or SW breakpoints"""		4078290	2					
ANR	4082977	PrimaryExpression	"""Set HW or SW breakpoints"""		4078290	0					
ANR	4082978	ExpressionStatement	"SETCB ( ""dbg.unlibs"" , """" , & cb_dbg_unlibs , ""If set stop when unloading matching libname"" )"	3214:1:105482:105569	4078290	407	True				
ANR	4082979	CallExpression	"SETCB ( ""dbg.unlibs"" , """" , & cb_dbg_unlibs , ""If set stop when unloading matching libname"" )"		4078290	0					
ANR	4082980	Callee	SETCB		4078290	0					
ANR	4082981	Identifier	SETCB		4078290	0					
ANR	4082982	ArgumentList	"""dbg.unlibs"""		4078290	1					
ANR	4082983	Argument	"""dbg.unlibs"""		4078290	0					
ANR	4082984	PrimaryExpression	"""dbg.unlibs"""		4078290	0					
ANR	4082985	Argument	""""""		4078290	1					
ANR	4082986	PrimaryExpression	""""""		4078290	0					
ANR	4082987	Argument	& cb_dbg_unlibs		4078290	2					
ANR	4082988	UnaryOperationExpression	& cb_dbg_unlibs		4078290	0					
ANR	4082989	UnaryOperator	&		4078290	0					
ANR	4082990	Identifier	cb_dbg_unlibs		4078290	1					
ANR	4082991	Argument	"""If set stop when unloading matching libname"""		4078290	3					
ANR	4082992	PrimaryExpression	"""If set stop when unloading matching libname"""		4078290	0					
ANR	4082993	ExpressionStatement	"SETCB ( ""dbg.verbose"" , ""true"" , & cb_dbg_verbose , ""Verbose debug output"" )"	3215:1:105572:105642	4078290	408	True				
ANR	4082994	CallExpression	"SETCB ( ""dbg.verbose"" , ""true"" , & cb_dbg_verbose , ""Verbose debug output"" )"		4078290	0					
ANR	4082995	Callee	SETCB		4078290	0					
ANR	4082996	Identifier	SETCB		4078290	0					
ANR	4082997	ArgumentList	"""dbg.verbose"""		4078290	1					
ANR	4082998	Argument	"""dbg.verbose"""		4078290	0					
ANR	4082999	PrimaryExpression	"""dbg.verbose"""		4078290	0					
ANR	4083000	Argument	"""true"""		4078290	1					
ANR	4083001	PrimaryExpression	"""true"""		4078290	0					
ANR	4083002	Argument	& cb_dbg_verbose		4078290	2					
ANR	4083003	UnaryOperationExpression	& cb_dbg_verbose		4078290	0					
ANR	4083004	UnaryOperator	&		4078290	0					
ANR	4083005	Identifier	cb_dbg_verbose		4078290	1					
ANR	4083006	Argument	"""Verbose debug output"""		4078290	3					
ANR	4083007	PrimaryExpression	"""Verbose debug output"""		4078290	0					
ANR	4083008	ExpressionStatement	"SETPREF ( ""dbg.slow"" , ""false"" , ""Show stack and regs in visual mode in a slow but verbose mode"" )"	3216:1:105645:105739	4078290	409	True				
ANR	4083009	CallExpression	"SETPREF ( ""dbg.slow"" , ""false"" , ""Show stack and regs in visual mode in a slow but verbose mode"" )"		4078290	0					
ANR	4083010	Callee	SETPREF		4078290	0					
ANR	4083011	Identifier	SETPREF		4078290	0					
ANR	4083012	ArgumentList	"""dbg.slow"""		4078290	1					
ANR	4083013	Argument	"""dbg.slow"""		4078290	0					
ANR	4083014	PrimaryExpression	"""dbg.slow"""		4078290	0					
ANR	4083015	Argument	"""false"""		4078290	1					
ANR	4083016	PrimaryExpression	"""false"""		4078290	0					
ANR	4083017	Argument	"""Show stack and regs in visual mode in a slow but verbose mode"""		4078290	2					
ANR	4083018	PrimaryExpression	"""Show stack and regs in visual mode in a slow but verbose mode"""		4078290	0					
ANR	4083019	ExpressionStatement	"SETPREF ( ""dbg.funcarg"" , ""false"" , ""Display arguments to function call in visual mode"" )"	3217:1:105742:105827	4078290	410	True				
ANR	4083020	CallExpression	"SETPREF ( ""dbg.funcarg"" , ""false"" , ""Display arguments to function call in visual mode"" )"		4078290	0					
ANR	4083021	Callee	SETPREF		4078290	0					
ANR	4083022	Identifier	SETPREF		4078290	0					
ANR	4083023	ArgumentList	"""dbg.funcarg"""		4078290	1					
ANR	4083024	Argument	"""dbg.funcarg"""		4078290	0					
ANR	4083025	PrimaryExpression	"""dbg.funcarg"""		4078290	0					
ANR	4083026	Argument	"""false"""		4078290	1					
ANR	4083027	PrimaryExpression	"""false"""		4078290	0					
ANR	4083028	Argument	"""Display arguments to function call in visual mode"""		4078290	2					
ANR	4083029	PrimaryExpression	"""Display arguments to function call in visual mode"""		4078290	0					
ANR	4083030	ExpressionStatement	"SETPREF ( ""dbg.bpinmaps"" , ""true"" , ""Force breakpoints to be inside a valid map"" )"	3219:1:105831:105909	4078290	411	True				
ANR	4083031	CallExpression	"SETPREF ( ""dbg.bpinmaps"" , ""true"" , ""Force breakpoints to be inside a valid map"" )"		4078290	0					
ANR	4083032	Callee	SETPREF		4078290	0					
ANR	4083033	Identifier	SETPREF		4078290	0					
ANR	4083034	ArgumentList	"""dbg.bpinmaps"""		4078290	1					
ANR	4083035	Argument	"""dbg.bpinmaps"""		4078290	0					
ANR	4083036	PrimaryExpression	"""dbg.bpinmaps"""		4078290	0					
ANR	4083037	Argument	"""true"""		4078290	1					
ANR	4083038	PrimaryExpression	"""true"""		4078290	0					
ANR	4083039	Argument	"""Force breakpoints to be inside a valid map"""		4078290	2					
ANR	4083040	PrimaryExpression	"""Force breakpoints to be inside a valid map"""		4078290	0					
ANR	4083041	ExpressionStatement	"SETCB ( ""dbg.forks"" , ""false"" , & cb_dbg_forks , ""Stop execution if fork() is done (see dbg.threads)"" )"	3220:1:105912:106009	4078290	412	True				
ANR	4083042	CallExpression	"SETCB ( ""dbg.forks"" , ""false"" , & cb_dbg_forks , ""Stop execution if fork() is done (see dbg.threads)"" )"		4078290	0					
ANR	4083043	Callee	SETCB		4078290	0					
ANR	4083044	Identifier	SETCB		4078290	0					
ANR	4083045	ArgumentList	"""dbg.forks"""		4078290	1					
ANR	4083046	Argument	"""dbg.forks"""		4078290	0					
ANR	4083047	PrimaryExpression	"""dbg.forks"""		4078290	0					
ANR	4083048	Argument	"""false"""		4078290	1					
ANR	4083049	PrimaryExpression	"""false"""		4078290	0					
ANR	4083050	Argument	& cb_dbg_forks		4078290	2					
ANR	4083051	UnaryOperationExpression	& cb_dbg_forks		4078290	0					
ANR	4083052	UnaryOperator	&		4078290	0					
ANR	4083053	Identifier	cb_dbg_forks		4078290	1					
ANR	4083054	Argument	"""Stop execution if fork() is done (see dbg.threads)"""		4078290	3					
ANR	4083055	PrimaryExpression	"""Stop execution if fork() is done (see dbg.threads)"""		4078290	0					
ANR	4083056	ExpressionStatement	"n = NODECB ( ""dbg.btalgo"" , ""fuzzy"" , & cb_dbg_btalgo )"	3221:1:106012:106062	4078290	413	True				
ANR	4083057	AssignmentExpression	"n = NODECB ( ""dbg.btalgo"" , ""fuzzy"" , & cb_dbg_btalgo )"		4078290	0		=			
ANR	4083058	Identifier	n		4078290	0					
ANR	4083059	CallExpression	"NODECB ( ""dbg.btalgo"" , ""fuzzy"" , & cb_dbg_btalgo )"		4078290	1					
ANR	4083060	Callee	NODECB		4078290	0					
ANR	4083061	Identifier	NODECB		4078290	0					
ANR	4083062	ArgumentList	"""dbg.btalgo"""		4078290	1					
ANR	4083063	Argument	"""dbg.btalgo"""		4078290	0					
ANR	4083064	PrimaryExpression	"""dbg.btalgo"""		4078290	0					
ANR	4083065	Argument	"""fuzzy"""		4078290	1					
ANR	4083066	PrimaryExpression	"""fuzzy"""		4078290	0					
ANR	4083067	Argument	& cb_dbg_btalgo		4078290	2					
ANR	4083068	UnaryOperationExpression	& cb_dbg_btalgo		4078290	0					
ANR	4083069	UnaryOperator	&		4078290	0					
ANR	4083070	Identifier	cb_dbg_btalgo		4078290	1					
ANR	4083071	ExpressionStatement	"SETDESC ( n , ""Select backtrace algorithm"" )"	3222:1:106065:106106	4078290	414	True				
ANR	4083072	CallExpression	"SETDESC ( n , ""Select backtrace algorithm"" )"		4078290	0					
ANR	4083073	Callee	SETDESC		4078290	0					
ANR	4083074	Identifier	SETDESC		4078290	0					
ANR	4083075	ArgumentList	n		4078290	1					
ANR	4083076	Argument	n		4078290	0					
ANR	4083077	Identifier	n		4078290	0					
ANR	4083078	Argument	"""Select backtrace algorithm"""		4078290	1					
ANR	4083079	PrimaryExpression	"""Select backtrace algorithm"""		4078290	0					
ANR	4083080	ExpressionStatement	"SETOPTIONS ( n , ""default"" , ""fuzzy"" , ""anal"" , ""trace"" , NULL )"	3223:1:106109:106166	4078290	415	True				
ANR	4083081	CallExpression	"SETOPTIONS ( n , ""default"" , ""fuzzy"" , ""anal"" , ""trace"" , NULL )"		4078290	0					
ANR	4083082	Callee	SETOPTIONS		4078290	0					
ANR	4083083	Identifier	SETOPTIONS		4078290	0					
ANR	4083084	ArgumentList	n		4078290	1					
ANR	4083085	Argument	n		4078290	0					
ANR	4083086	Identifier	n		4078290	0					
ANR	4083087	Argument	"""default"""		4078290	1					
ANR	4083088	PrimaryExpression	"""default"""		4078290	0					
ANR	4083089	Argument	"""fuzzy"""		4078290	2					
ANR	4083090	PrimaryExpression	"""fuzzy"""		4078290	0					
ANR	4083091	Argument	"""anal"""		4078290	3					
ANR	4083092	PrimaryExpression	"""anal"""		4078290	0					
ANR	4083093	Argument	"""trace"""		4078290	4					
ANR	4083094	PrimaryExpression	"""trace"""		4078290	0					
ANR	4083095	Argument	NULL		4078290	5					
ANR	4083096	Identifier	NULL		4078290	0					
ANR	4083097	ExpressionStatement	"SETCB ( ""dbg.threads"" , ""false"" , & cb_stopthreads , ""Stop all threads when debugger breaks (see dbg.forks)"" )"	3224:1:106169:106273	4078290	416	True				
ANR	4083098	CallExpression	"SETCB ( ""dbg.threads"" , ""false"" , & cb_stopthreads , ""Stop all threads when debugger breaks (see dbg.forks)"" )"		4078290	0					
ANR	4083099	Callee	SETCB		4078290	0					
ANR	4083100	Identifier	SETCB		4078290	0					
ANR	4083101	ArgumentList	"""dbg.threads"""		4078290	1					
ANR	4083102	Argument	"""dbg.threads"""		4078290	0					
ANR	4083103	PrimaryExpression	"""dbg.threads"""		4078290	0					
ANR	4083104	Argument	"""false"""		4078290	1					
ANR	4083105	PrimaryExpression	"""false"""		4078290	0					
ANR	4083106	Argument	& cb_stopthreads		4078290	2					
ANR	4083107	UnaryOperationExpression	& cb_stopthreads		4078290	0					
ANR	4083108	UnaryOperator	&		4078290	0					
ANR	4083109	Identifier	cb_stopthreads		4078290	1					
ANR	4083110	Argument	"""Stop all threads when debugger breaks (see dbg.forks)"""		4078290	3					
ANR	4083111	PrimaryExpression	"""Stop all threads when debugger breaks (see dbg.forks)"""		4078290	0					
ANR	4083112	ExpressionStatement	"SETCB ( ""dbg.clone"" , ""false"" , & cb_dbg_clone , ""Stop execution if new thread is created"" )"	3225:1:106276:106362	4078290	417	True				
ANR	4083113	CallExpression	"SETCB ( ""dbg.clone"" , ""false"" , & cb_dbg_clone , ""Stop execution if new thread is created"" )"		4078290	0					
ANR	4083114	Callee	SETCB		4078290	0					
ANR	4083115	Identifier	SETCB		4078290	0					
ANR	4083116	ArgumentList	"""dbg.clone"""		4078290	1					
ANR	4083117	Argument	"""dbg.clone"""		4078290	0					
ANR	4083118	PrimaryExpression	"""dbg.clone"""		4078290	0					
ANR	4083119	Argument	"""false"""		4078290	1					
ANR	4083120	PrimaryExpression	"""false"""		4078290	0					
ANR	4083121	Argument	& cb_dbg_clone		4078290	2					
ANR	4083122	UnaryOperationExpression	& cb_dbg_clone		4078290	0					
ANR	4083123	UnaryOperator	&		4078290	0					
ANR	4083124	Identifier	cb_dbg_clone		4078290	1					
ANR	4083125	Argument	"""Stop execution if new thread is created"""		4078290	3					
ANR	4083126	PrimaryExpression	"""Stop execution if new thread is created"""		4078290	0					
ANR	4083127	ExpressionStatement	"SETCB ( ""dbg.aftersyscall"" , ""true"" , & cb_dbg_aftersc , ""Stop execution before the syscall is executed (see dcs)"" )"	3226:1:106365:106475	4078290	418	True				
ANR	4083128	CallExpression	"SETCB ( ""dbg.aftersyscall"" , ""true"" , & cb_dbg_aftersc , ""Stop execution before the syscall is executed (see dcs)"" )"		4078290	0					
ANR	4083129	Callee	SETCB		4078290	0					
ANR	4083130	Identifier	SETCB		4078290	0					
ANR	4083131	ArgumentList	"""dbg.aftersyscall"""		4078290	1					
ANR	4083132	Argument	"""dbg.aftersyscall"""		4078290	0					
ANR	4083133	PrimaryExpression	"""dbg.aftersyscall"""		4078290	0					
ANR	4083134	Argument	"""true"""		4078290	1					
ANR	4083135	PrimaryExpression	"""true"""		4078290	0					
ANR	4083136	Argument	& cb_dbg_aftersc		4078290	2					
ANR	4083137	UnaryOperationExpression	& cb_dbg_aftersc		4078290	0					
ANR	4083138	UnaryOperator	&		4078290	0					
ANR	4083139	Identifier	cb_dbg_aftersc		4078290	1					
ANR	4083140	Argument	"""Stop execution before the syscall is executed (see dcs)"""		4078290	3					
ANR	4083141	PrimaryExpression	"""Stop execution before the syscall is executed (see dcs)"""		4078290	0					
ANR	4083142	ExpressionStatement	"SETCB ( ""dbg.profile"" , """" , & cb_runprofile , ""Path to RRunProfile file"" )"	3227:1:106478:106547	4078290	419	True				
ANR	4083143	CallExpression	"SETCB ( ""dbg.profile"" , """" , & cb_runprofile , ""Path to RRunProfile file"" )"		4078290	0					
ANR	4083144	Callee	SETCB		4078290	0					
ANR	4083145	Identifier	SETCB		4078290	0					
ANR	4083146	ArgumentList	"""dbg.profile"""		4078290	1					
ANR	4083147	Argument	"""dbg.profile"""		4078290	0					
ANR	4083148	PrimaryExpression	"""dbg.profile"""		4078290	0					
ANR	4083149	Argument	""""""		4078290	1					
ANR	4083150	PrimaryExpression	""""""		4078290	0					
ANR	4083151	Argument	& cb_runprofile		4078290	2					
ANR	4083152	UnaryOperationExpression	& cb_runprofile		4078290	0					
ANR	4083153	UnaryOperator	&		4078290	0					
ANR	4083154	Identifier	cb_runprofile		4078290	1					
ANR	4083155	Argument	"""Path to RRunProfile file"""		4078290	3					
ANR	4083156	PrimaryExpression	"""Path to RRunProfile file"""		4078290	0					
ANR	4083157	ExpressionStatement	"SETCB ( ""dbg.args"" , """" , & cb_dbg_args , ""Set the args of the program to debug"" )"	3228:1:106550:106626	4078290	420	True				
ANR	4083158	CallExpression	"SETCB ( ""dbg.args"" , """" , & cb_dbg_args , ""Set the args of the program to debug"" )"		4078290	0					
ANR	4083159	Callee	SETCB		4078290	0					
ANR	4083160	Identifier	SETCB		4078290	0					
ANR	4083161	ArgumentList	"""dbg.args"""		4078290	1					
ANR	4083162	Argument	"""dbg.args"""		4078290	0					
ANR	4083163	PrimaryExpression	"""dbg.args"""		4078290	0					
ANR	4083164	Argument	""""""		4078290	1					
ANR	4083165	PrimaryExpression	""""""		4078290	0					
ANR	4083166	Argument	& cb_dbg_args		4078290	2					
ANR	4083167	UnaryOperationExpression	& cb_dbg_args		4078290	0					
ANR	4083168	UnaryOperator	&		4078290	0					
ANR	4083169	Identifier	cb_dbg_args		4078290	1					
ANR	4083170	Argument	"""Set the args of the program to debug"""		4078290	3					
ANR	4083171	PrimaryExpression	"""Set the args of the program to debug"""		4078290	0					
ANR	4083172	ExpressionStatement	"SETCB ( ""dbg.follow.child"" , ""false"" , & cb_dbg_follow_child , ""Continue tracing the child process on fork. By default the parent process is traced"" )"	3229:1:106629:106773	4078290	421	True				
ANR	4083173	CallExpression	"SETCB ( ""dbg.follow.child"" , ""false"" , & cb_dbg_follow_child , ""Continue tracing the child process on fork. By default the parent process is traced"" )"		4078290	0					
ANR	4083174	Callee	SETCB		4078290	0					
ANR	4083175	Identifier	SETCB		4078290	0					
ANR	4083176	ArgumentList	"""dbg.follow.child"""		4078290	1					
ANR	4083177	Argument	"""dbg.follow.child"""		4078290	0					
ANR	4083178	PrimaryExpression	"""dbg.follow.child"""		4078290	0					
ANR	4083179	Argument	"""false"""		4078290	1					
ANR	4083180	PrimaryExpression	"""false"""		4078290	0					
ANR	4083181	Argument	& cb_dbg_follow_child		4078290	2					
ANR	4083182	UnaryOperationExpression	& cb_dbg_follow_child		4078290	0					
ANR	4083183	UnaryOperator	&		4078290	0					
ANR	4083184	Identifier	cb_dbg_follow_child		4078290	1					
ANR	4083185	Argument	"""Continue tracing the child process on fork. By default the parent process is traced"""		4078290	3					
ANR	4083186	PrimaryExpression	"""Continue tracing the child process on fork. By default the parent process is traced"""		4078290	0					
ANR	4083187	ExpressionStatement	"SETCB ( ""dbg.status"" , ""false"" , & cb_dbgstatus , ""Set cmd.prompt to '.dr*' or '.dr*;drd;sr PC;pi 1;s-'"" )"	3231:1:106789:106889	4078290	422	True				
ANR	4083188	CallExpression	"SETCB ( ""dbg.status"" , ""false"" , & cb_dbgstatus , ""Set cmd.prompt to '.dr*' or '.dr*;drd;sr PC;pi 1;s-'"" )"		4078290	0					
ANR	4083189	Callee	SETCB		4078290	0					
ANR	4083190	Identifier	SETCB		4078290	0					
ANR	4083191	ArgumentList	"""dbg.status"""		4078290	1					
ANR	4083192	Argument	"""dbg.status"""		4078290	0					
ANR	4083193	PrimaryExpression	"""dbg.status"""		4078290	0					
ANR	4083194	Argument	"""false"""		4078290	1					
ANR	4083195	PrimaryExpression	"""false"""		4078290	0					
ANR	4083196	Argument	& cb_dbgstatus		4078290	2					
ANR	4083197	UnaryOperationExpression	& cb_dbgstatus		4078290	0					
ANR	4083198	UnaryOperator	&		4078290	0					
ANR	4083199	Identifier	cb_dbgstatus		4078290	1					
ANR	4083200	Argument	"""Set cmd.prompt to '.dr*' or '.dr*;drd;sr PC;pi 1;s-'"""		4078290	3					
ANR	4083201	PrimaryExpression	"""Set cmd.prompt to '.dr*' or '.dr*;drd;sr PC;pi 1;s-'"""		4078290	0					
ANR	4083202	ExpressionStatement	"SETCB ( ""dbg.backend"" , ""native"" , & cb_dbgbackend , ""Select the debugger backend"" )"	3233:1:106905:106983	4078290	423	True				
ANR	4083203	CallExpression	"SETCB ( ""dbg.backend"" , ""native"" , & cb_dbgbackend , ""Select the debugger backend"" )"		4078290	0					
ANR	4083204	Callee	SETCB		4078290	0					
ANR	4083205	Identifier	SETCB		4078290	0					
ANR	4083206	ArgumentList	"""dbg.backend"""		4078290	1					
ANR	4083207	Argument	"""dbg.backend"""		4078290	0					
ANR	4083208	PrimaryExpression	"""dbg.backend"""		4078290	0					
ANR	4083209	Argument	"""native"""		4078290	1					
ANR	4083210	PrimaryExpression	"""native"""		4078290	0					
ANR	4083211	Argument	& cb_dbgbackend		4078290	2					
ANR	4083212	UnaryOperationExpression	& cb_dbgbackend		4078290	0					
ANR	4083213	UnaryOperator	&		4078290	0					
ANR	4083214	Identifier	cb_dbgbackend		4078290	1					
ANR	4083215	Argument	"""Select the debugger backend"""		4078290	3					
ANR	4083216	PrimaryExpression	"""Select the debugger backend"""		4078290	0					
ANR	4083217	ExpressionStatement	"n = NODECB ( ""dbg.bep"" , ""loader"" , & cb_dbgbep )"	3237:1:107078:107122	4078290	424	True				
ANR	4083218	AssignmentExpression	"n = NODECB ( ""dbg.bep"" , ""loader"" , & cb_dbgbep )"		4078290	0		=			
ANR	4083219	Identifier	n		4078290	0					
ANR	4083220	CallExpression	"NODECB ( ""dbg.bep"" , ""loader"" , & cb_dbgbep )"		4078290	1					
ANR	4083221	Callee	NODECB		4078290	0					
ANR	4083222	Identifier	NODECB		4078290	0					
ANR	4083223	ArgumentList	"""dbg.bep"""		4078290	1					
ANR	4083224	Argument	"""dbg.bep"""		4078290	0					
ANR	4083225	PrimaryExpression	"""dbg.bep"""		4078290	0					
ANR	4083226	Argument	"""loader"""		4078290	1					
ANR	4083227	PrimaryExpression	"""loader"""		4078290	0					
ANR	4083228	Argument	& cb_dbgbep		4078290	2					
ANR	4083229	UnaryOperationExpression	& cb_dbgbep		4078290	0					
ANR	4083230	UnaryOperator	&		4078290	0					
ANR	4083231	Identifier	cb_dbgbep		4078290	1					
ANR	4083232	ExpressionStatement	"SETDESC ( n , ""Break on entrypoint"" )"	3238:1:107125:107159	4078290	425	True				
ANR	4083233	CallExpression	"SETDESC ( n , ""Break on entrypoint"" )"		4078290	0					
ANR	4083234	Callee	SETDESC		4078290	0					
ANR	4083235	Identifier	SETDESC		4078290	0					
ANR	4083236	ArgumentList	n		4078290	1					
ANR	4083237	Argument	n		4078290	0					
ANR	4083238	Identifier	n		4078290	0					
ANR	4083239	Argument	"""Break on entrypoint"""		4078290	1					
ANR	4083240	PrimaryExpression	"""Break on entrypoint"""		4078290	0					
ANR	4083241	ExpressionStatement	"SETOPTIONS ( n , ""loader"" , ""entry"" , ""constructor"" , ""main"" , NULL )"	3239:1:107162:107224	4078290	426	True				
ANR	4083242	CallExpression	"SETOPTIONS ( n , ""loader"" , ""entry"" , ""constructor"" , ""main"" , NULL )"		4078290	0					
ANR	4083243	Callee	SETOPTIONS		4078290	0					
ANR	4083244	Identifier	SETOPTIONS		4078290	0					
ANR	4083245	ArgumentList	n		4078290	1					
ANR	4083246	Argument	n		4078290	0					
ANR	4083247	Identifier	n		4078290	0					
ANR	4083248	Argument	"""loader"""		4078290	1					
ANR	4083249	PrimaryExpression	"""loader"""		4078290	0					
ANR	4083250	Argument	"""entry"""		4078290	2					
ANR	4083251	PrimaryExpression	"""entry"""		4078290	0					
ANR	4083252	Argument	"""constructor"""		4078290	3					
ANR	4083253	PrimaryExpression	"""constructor"""		4078290	0					
ANR	4083254	Argument	"""main"""		4078290	4					
ANR	4083255	PrimaryExpression	"""main"""		4078290	0					
ANR	4083256	Argument	NULL		4078290	5					
ANR	4083257	Identifier	NULL		4078290	0					
ANR	4083258	IfStatement	if ( core -> cons -> rows > 30 )		4078290	427					
ANR	4083259	Condition	core -> cons -> rows > 30	3240:5:107231:107251	4078290	0	True				
ANR	4083260	RelationalExpression	core -> cons -> rows > 30		4078290	0		>			
ANR	4083261	PtrMemberAccess	core -> cons -> rows		4078290	0					
ANR	4083262	PtrMemberAccess	core -> cons		4078290	0					
ANR	4083263	Identifier	core		4078290	0					
ANR	4083264	Identifier	cons		4078290	1					
ANR	4083265	Identifier	rows		4078290	1					
ANR	4083266	PrimaryExpression	30		4078290	1					
ANR	4083267	CompoundStatement		495:28:32580:32580	4078290	1					
ANR	4083268	ExpressionStatement	"r_config_set_i ( cfg , ""dbg.follow"" , 64 )"	3241:2:107267:107305	4078290	0	True				
ANR	4083269	CallExpression	"r_config_set_i ( cfg , ""dbg.follow"" , 64 )"		4078290	0					
ANR	4083270	Callee	r_config_set_i		4078290	0					
ANR	4083271	Identifier	r_config_set_i		4078290	0					
ANR	4083272	ArgumentList	cfg		4078290	1					
ANR	4083273	Argument	cfg		4078290	0					
ANR	4083274	Identifier	cfg		4078290	0					
ANR	4083275	Argument	"""dbg.follow"""		4078290	1					
ANR	4083276	PrimaryExpression	"""dbg.follow"""		4078290	0					
ANR	4083277	Argument	64		4078290	2					
ANR	4083278	PrimaryExpression	64		4078290	0					
ANR	4083279	ElseStatement	else		4078290	0					
ANR	4083280	CompoundStatement		497:8:32641:32641	4078290	0					
ANR	4083281	ExpressionStatement	"r_config_set_i ( cfg , ""dbg.follow"" , 32 )"	3243:2:107319:107357	4078290	0	True				
ANR	4083282	CallExpression	"r_config_set_i ( cfg , ""dbg.follow"" , 32 )"		4078290	0					
ANR	4083283	Callee	r_config_set_i		4078290	0					
ANR	4083284	Identifier	r_config_set_i		4078290	0					
ANR	4083285	ArgumentList	cfg		4078290	1					
ANR	4083286	Argument	cfg		4078290	0					
ANR	4083287	Identifier	cfg		4078290	0					
ANR	4083288	Argument	"""dbg.follow"""		4078290	1					
ANR	4083289	PrimaryExpression	"""dbg.follow"""		4078290	0					
ANR	4083290	Argument	32		4078290	2					
ANR	4083291	PrimaryExpression	32		4078290	0					
ANR	4083292	ExpressionStatement	"r_config_desc ( cfg , ""dbg.follow"" , ""Follow program counter when pc > core->offset + dbg.follow"" )"	3245:1:107363:107458	4078290	428	True				
ANR	4083293	CallExpression	"r_config_desc ( cfg , ""dbg.follow"" , ""Follow program counter when pc > core->offset + dbg.follow"" )"		4078290	0					
ANR	4083294	Callee	r_config_desc		4078290	0					
ANR	4083295	Identifier	r_config_desc		4078290	0					
ANR	4083296	ArgumentList	cfg		4078290	1					
ANR	4083297	Argument	cfg		4078290	0					
ANR	4083298	Identifier	cfg		4078290	0					
ANR	4083299	Argument	"""dbg.follow"""		4078290	1					
ANR	4083300	PrimaryExpression	"""dbg.follow"""		4078290	0					
ANR	4083301	Argument	"""Follow program counter when pc > core->offset + dbg.follow"""		4078290	2					
ANR	4083302	PrimaryExpression	"""Follow program counter when pc > core->offset + dbg.follow"""		4078290	0					
ANR	4083303	ExpressionStatement	"SETCB ( ""dbg.swstep"" , ""false"" , & cb_swstep , ""Force use of software steps (code analysis+breakpoint)"" )"	3246:1:107461:107560	4078290	429	True				
ANR	4083304	CallExpression	"SETCB ( ""dbg.swstep"" , ""false"" , & cb_swstep , ""Force use of software steps (code analysis+breakpoint)"" )"		4078290	0					
ANR	4083305	Callee	SETCB		4078290	0					
ANR	4083306	Identifier	SETCB		4078290	0					
ANR	4083307	ArgumentList	"""dbg.swstep"""		4078290	1					
ANR	4083308	Argument	"""dbg.swstep"""		4078290	0					
ANR	4083309	PrimaryExpression	"""dbg.swstep"""		4078290	0					
ANR	4083310	Argument	"""false"""		4078290	1					
ANR	4083311	PrimaryExpression	"""false"""		4078290	0					
ANR	4083312	Argument	& cb_swstep		4078290	2					
ANR	4083313	UnaryOperationExpression	& cb_swstep		4078290	0					
ANR	4083314	UnaryOperator	&		4078290	0					
ANR	4083315	Identifier	cb_swstep		4078290	1					
ANR	4083316	Argument	"""Force use of software steps (code analysis+breakpoint)"""		4078290	3					
ANR	4083317	PrimaryExpression	"""Force use of software steps (code analysis+breakpoint)"""		4078290	0					
ANR	4083318	ExpressionStatement	"SETPREF ( ""dbg.trace.inrange"" , ""false"" , ""While tracing, avoid following calls outside specified range"" )"	3247:1:107563:107665	4078290	430	True				
ANR	4083319	CallExpression	"SETPREF ( ""dbg.trace.inrange"" , ""false"" , ""While tracing, avoid following calls outside specified range"" )"		4078290	0					
ANR	4083320	Callee	SETPREF		4078290	0					
ANR	4083321	Identifier	SETPREF		4078290	0					
ANR	4083322	ArgumentList	"""dbg.trace.inrange"""		4078290	1					
ANR	4083323	Argument	"""dbg.trace.inrange"""		4078290	0					
ANR	4083324	PrimaryExpression	"""dbg.trace.inrange"""		4078290	0					
ANR	4083325	Argument	"""false"""		4078290	1					
ANR	4083326	PrimaryExpression	"""false"""		4078290	0					
ANR	4083327	Argument	"""While tracing, avoid following calls outside specified range"""		4078290	2					
ANR	4083328	PrimaryExpression	"""While tracing, avoid following calls outside specified range"""		4078290	0					
ANR	4083329	ExpressionStatement	"SETPREF ( ""dbg.trace.libs"" , ""true"" , ""Trace library code too"" )"	3248:1:107668:107728	4078290	431	True				
ANR	4083330	CallExpression	"SETPREF ( ""dbg.trace.libs"" , ""true"" , ""Trace library code too"" )"		4078290	0					
ANR	4083331	Callee	SETPREF		4078290	0					
ANR	4083332	Identifier	SETPREF		4078290	0					
ANR	4083333	ArgumentList	"""dbg.trace.libs"""		4078290	1					
ANR	4083334	Argument	"""dbg.trace.libs"""		4078290	0					
ANR	4083335	PrimaryExpression	"""dbg.trace.libs"""		4078290	0					
ANR	4083336	Argument	"""true"""		4078290	1					
ANR	4083337	PrimaryExpression	"""true"""		4078290	0					
ANR	4083338	Argument	"""Trace library code too"""		4078290	2					
ANR	4083339	PrimaryExpression	"""Trace library code too"""		4078290	0					
ANR	4083340	ExpressionStatement	"SETPREF ( ""dbg.exitkills"" , ""true"" , ""Kill process on exit"" )"	3249:1:107731:107788	4078290	432	True				
ANR	4083341	CallExpression	"SETPREF ( ""dbg.exitkills"" , ""true"" , ""Kill process on exit"" )"		4078290	0					
ANR	4083342	Callee	SETPREF		4078290	0					
ANR	4083343	Identifier	SETPREF		4078290	0					
ANR	4083344	ArgumentList	"""dbg.exitkills"""		4078290	1					
ANR	4083345	Argument	"""dbg.exitkills"""		4078290	0					
ANR	4083346	PrimaryExpression	"""dbg.exitkills"""		4078290	0					
ANR	4083347	Argument	"""true"""		4078290	1					
ANR	4083348	PrimaryExpression	"""true"""		4078290	0					
ANR	4083349	Argument	"""Kill process on exit"""		4078290	2					
ANR	4083350	PrimaryExpression	"""Kill process on exit"""		4078290	0					
ANR	4083351	ExpressionStatement	"SETPREF ( ""dbg.exe.path"" , NULL , ""Path to binary being debugged"" )"	3250:1:107791:107854	4078290	433	True				
ANR	4083352	CallExpression	"SETPREF ( ""dbg.exe.path"" , NULL , ""Path to binary being debugged"" )"		4078290	0					
ANR	4083353	Callee	SETPREF		4078290	0					
ANR	4083354	Identifier	SETPREF		4078290	0					
ANR	4083355	ArgumentList	"""dbg.exe.path"""		4078290	1					
ANR	4083356	Argument	"""dbg.exe.path"""		4078290	0					
ANR	4083357	PrimaryExpression	"""dbg.exe.path"""		4078290	0					
ANR	4083358	Argument	NULL		4078290	1					
ANR	4083359	Identifier	NULL		4078290	0					
ANR	4083360	Argument	"""Path to binary being debugged"""		4078290	2					
ANR	4083361	PrimaryExpression	"""Path to binary being debugged"""		4078290	0					
ANR	4083362	ExpressionStatement	"SETCB ( ""dbg.execs"" , ""false"" , & cb_dbg_execs , ""Stop execution if new thread is created"" )"	3251:1:107857:107943	4078290	434	True				
ANR	4083363	CallExpression	"SETCB ( ""dbg.execs"" , ""false"" , & cb_dbg_execs , ""Stop execution if new thread is created"" )"		4078290	0					
ANR	4083364	Callee	SETCB		4078290	0					
ANR	4083365	Identifier	SETCB		4078290	0					
ANR	4083366	ArgumentList	"""dbg.execs"""		4078290	1					
ANR	4083367	Argument	"""dbg.execs"""		4078290	0					
ANR	4083368	PrimaryExpression	"""dbg.execs"""		4078290	0					
ANR	4083369	Argument	"""false"""		4078290	1					
ANR	4083370	PrimaryExpression	"""false"""		4078290	0					
ANR	4083371	Argument	& cb_dbg_execs		4078290	2					
ANR	4083372	UnaryOperationExpression	& cb_dbg_execs		4078290	0					
ANR	4083373	UnaryOperator	&		4078290	0					
ANR	4083374	Identifier	cb_dbg_execs		4078290	1					
ANR	4083375	Argument	"""Stop execution if new thread is created"""		4078290	3					
ANR	4083376	PrimaryExpression	"""Stop execution if new thread is created"""		4078290	0					
ANR	4083377	ExpressionStatement	"SETICB ( ""dbg.gdb.page_size"" , 4096 , & cb_dbg_gdb_page_size , ""Page size on gdb target (useful for QEMU)"" )"	3252:1:107946:108048	4078290	435	True				
ANR	4083378	CallExpression	"SETICB ( ""dbg.gdb.page_size"" , 4096 , & cb_dbg_gdb_page_size , ""Page size on gdb target (useful for QEMU)"" )"		4078290	0					
ANR	4083379	Callee	SETICB		4078290	0					
ANR	4083380	Identifier	SETICB		4078290	0					
ANR	4083381	ArgumentList	"""dbg.gdb.page_size"""		4078290	1					
ANR	4083382	Argument	"""dbg.gdb.page_size"""		4078290	0					
ANR	4083383	PrimaryExpression	"""dbg.gdb.page_size"""		4078290	0					
ANR	4083384	Argument	4096		4078290	1					
ANR	4083385	PrimaryExpression	4096		4078290	0					
ANR	4083386	Argument	& cb_dbg_gdb_page_size		4078290	2					
ANR	4083387	UnaryOperationExpression	& cb_dbg_gdb_page_size		4078290	0					
ANR	4083388	UnaryOperator	&		4078290	0					
ANR	4083389	Identifier	cb_dbg_gdb_page_size		4078290	1					
ANR	4083390	Argument	"""Page size on gdb target (useful for QEMU)"""		4078290	3					
ANR	4083391	PrimaryExpression	"""Page size on gdb target (useful for QEMU)"""		4078290	0					
ANR	4083392	ExpressionStatement	"SETICB ( ""dbg.gdb.retries"" , 10 , & cb_dbg_gdb_retries , ""Number of retries before gdb packet read times out"" )"	3253:1:108051:108156	4078290	436	True				
ANR	4083393	CallExpression	"SETICB ( ""dbg.gdb.retries"" , 10 , & cb_dbg_gdb_retries , ""Number of retries before gdb packet read times out"" )"		4078290	0					
ANR	4083394	Callee	SETICB		4078290	0					
ANR	4083395	Identifier	SETICB		4078290	0					
ANR	4083396	ArgumentList	"""dbg.gdb.retries"""		4078290	1					
ANR	4083397	Argument	"""dbg.gdb.retries"""		4078290	0					
ANR	4083398	PrimaryExpression	"""dbg.gdb.retries"""		4078290	0					
ANR	4083399	Argument	10		4078290	1					
ANR	4083400	PrimaryExpression	10		4078290	0					
ANR	4083401	Argument	& cb_dbg_gdb_retries		4078290	2					
ANR	4083402	UnaryOperationExpression	& cb_dbg_gdb_retries		4078290	0					
ANR	4083403	UnaryOperator	&		4078290	0					
ANR	4083404	Identifier	cb_dbg_gdb_retries		4078290	1					
ANR	4083405	Argument	"""Number of retries before gdb packet read times out"""		4078290	3					
ANR	4083406	PrimaryExpression	"""Number of retries before gdb packet read times out"""		4078290	0					
ANR	4083407	ExpressionStatement	"SETCB ( ""dbg.consbreak"" , ""false"" , & cb_consbreak , ""SIGINT handle for attached processes"" )"	3254:1:108159:108246	4078290	437	True				
ANR	4083408	CallExpression	"SETCB ( ""dbg.consbreak"" , ""false"" , & cb_consbreak , ""SIGINT handle for attached processes"" )"		4078290	0					
ANR	4083409	Callee	SETCB		4078290	0					
ANR	4083410	Identifier	SETCB		4078290	0					
ANR	4083411	ArgumentList	"""dbg.consbreak"""		4078290	1					
ANR	4083412	Argument	"""dbg.consbreak"""		4078290	0					
ANR	4083413	PrimaryExpression	"""dbg.consbreak"""		4078290	0					
ANR	4083414	Argument	"""false"""		4078290	1					
ANR	4083415	PrimaryExpression	"""false"""		4078290	0					
ANR	4083416	Argument	& cb_consbreak		4078290	2					
ANR	4083417	UnaryOperationExpression	& cb_consbreak		4078290	0					
ANR	4083418	UnaryOperator	&		4078290	0					
ANR	4083419	Identifier	cb_consbreak		4078290	1					
ANR	4083420	Argument	"""SIGINT handle for attached processes"""		4078290	3					
ANR	4083421	PrimaryExpression	"""SIGINT handle for attached processes"""		4078290	0					
ANR	4083422	ExpressionStatement	"r_config_set_getter ( cfg , ""dbg.swstep"" , ( RConfigCallback ) __dbg_swstep_getter )"	3256:1:108250:108327	4078290	438	True				
ANR	4083423	CallExpression	"r_config_set_getter ( cfg , ""dbg.swstep"" , ( RConfigCallback ) __dbg_swstep_getter )"		4078290	0					
ANR	4083424	Callee	r_config_set_getter		4078290	0					
ANR	4083425	Identifier	r_config_set_getter		4078290	0					
ANR	4083426	ArgumentList	cfg		4078290	1					
ANR	4083427	Argument	cfg		4078290	0					
ANR	4083428	Identifier	cfg		4078290	0					
ANR	4083429	Argument	"""dbg.swstep"""		4078290	1					
ANR	4083430	PrimaryExpression	"""dbg.swstep"""		4078290	0					
ANR	4083431	Argument	( RConfigCallback ) __dbg_swstep_getter		4078290	2					
ANR	4083432	CastExpression	( RConfigCallback ) __dbg_swstep_getter		4078290	0					
ANR	4083433	CastTarget	RConfigCallback		4078290	0					
ANR	4083434	Identifier	__dbg_swstep_getter		4078290	1					
ANR	4083435	ExpressionStatement	"SETICB ( ""dbg.bpsize"" , 4 , & cb_dbgbpsize , ""Size of software breakpoints"" )"	3260:1:108434:108505	4078290	439	True				
ANR	4083436	CallExpression	"SETICB ( ""dbg.bpsize"" , 4 , & cb_dbgbpsize , ""Size of software breakpoints"" )"		4078290	0					
ANR	4083437	Callee	SETICB		4078290	0					
ANR	4083438	Identifier	SETICB		4078290	0					
ANR	4083439	ArgumentList	"""dbg.bpsize"""		4078290	1					
ANR	4083440	Argument	"""dbg.bpsize"""		4078290	0					
ANR	4083441	PrimaryExpression	"""dbg.bpsize"""		4078290	0					
ANR	4083442	Argument	4		4078290	1					
ANR	4083443	PrimaryExpression	4		4078290	0					
ANR	4083444	Argument	& cb_dbgbpsize		4078290	2					
ANR	4083445	UnaryOperationExpression	& cb_dbgbpsize		4078290	0					
ANR	4083446	UnaryOperator	&		4078290	0					
ANR	4083447	Identifier	cb_dbgbpsize		4078290	1					
ANR	4083448	Argument	"""Size of software breakpoints"""		4078290	3					
ANR	4083449	PrimaryExpression	"""Size of software breakpoints"""		4078290	0					
ANR	4083450	ExpressionStatement	"SETPREF ( ""dbg.bpsysign"" , ""false"" , ""Ignore system breakpoints"" )"	3264:1:108595:108657	4078290	440	True				
ANR	4083451	CallExpression	"SETPREF ( ""dbg.bpsysign"" , ""false"" , ""Ignore system breakpoints"" )"		4078290	0					
ANR	4083452	Callee	SETPREF		4078290	0					
ANR	4083453	Identifier	SETPREF		4078290	0					
ANR	4083454	ArgumentList	"""dbg.bpsysign"""		4078290	1					
ANR	4083455	Argument	"""dbg.bpsysign"""		4078290	0					
ANR	4083456	PrimaryExpression	"""dbg.bpsysign"""		4078290	0					
ANR	4083457	Argument	"""false"""		4078290	1					
ANR	4083458	PrimaryExpression	"""false"""		4078290	0					
ANR	4083459	Argument	"""Ignore system breakpoints"""		4078290	2					
ANR	4083460	PrimaryExpression	"""Ignore system breakpoints"""		4078290	0					
ANR	4083461	ExpressionStatement	"SETICB ( ""dbg.btdepth"" , 128 , & cb_dbgbtdepth , ""Depth of backtrace"" )"	3265:1:108660:108725	4078290	441	True				
ANR	4083462	CallExpression	"SETICB ( ""dbg.btdepth"" , 128 , & cb_dbgbtdepth , ""Depth of backtrace"" )"		4078290	0					
ANR	4083463	Callee	SETICB		4078290	0					
ANR	4083464	Identifier	SETICB		4078290	0					
ANR	4083465	ArgumentList	"""dbg.btdepth"""		4078290	1					
ANR	4083466	Argument	"""dbg.btdepth"""		4078290	0					
ANR	4083467	PrimaryExpression	"""dbg.btdepth"""		4078290	0					
ANR	4083468	Argument	128		4078290	1					
ANR	4083469	PrimaryExpression	128		4078290	0					
ANR	4083470	Argument	& cb_dbgbtdepth		4078290	2					
ANR	4083471	UnaryOperationExpression	& cb_dbgbtdepth		4078290	0					
ANR	4083472	UnaryOperator	&		4078290	0					
ANR	4083473	Identifier	cb_dbgbtdepth		4078290	1					
ANR	4083474	Argument	"""Depth of backtrace"""		4078290	3					
ANR	4083475	PrimaryExpression	"""Depth of backtrace"""		4078290	0					
ANR	4083476	ExpressionStatement	"SETCB ( ""dbg.trace"" , ""false"" , & cb_trace , ""Trace program execution (see asm.trace)"" )"	3266:1:108728:108810	4078290	442	True				
ANR	4083477	CallExpression	"SETCB ( ""dbg.trace"" , ""false"" , & cb_trace , ""Trace program execution (see asm.trace)"" )"		4078290	0					
ANR	4083478	Callee	SETCB		4078290	0					
ANR	4083479	Identifier	SETCB		4078290	0					
ANR	4083480	ArgumentList	"""dbg.trace"""		4078290	1					
ANR	4083481	Argument	"""dbg.trace"""		4078290	0					
ANR	4083482	PrimaryExpression	"""dbg.trace"""		4078290	0					
ANR	4083483	Argument	"""false"""		4078290	1					
ANR	4083484	PrimaryExpression	"""false"""		4078290	0					
ANR	4083485	Argument	& cb_trace		4078290	2					
ANR	4083486	UnaryOperationExpression	& cb_trace		4078290	0					
ANR	4083487	UnaryOperator	&		4078290	0					
ANR	4083488	Identifier	cb_trace		4078290	1					
ANR	4083489	Argument	"""Trace program execution (see asm.trace)"""		4078290	3					
ANR	4083490	PrimaryExpression	"""Trace program execution (see asm.trace)"""		4078290	0					
ANR	4083491	ExpressionStatement	"SETICB ( ""dbg.trace.tag"" , 0 , & cb_tracetag , ""Trace tag"" )"	3267:1:108813:108867	4078290	443	True				
ANR	4083492	CallExpression	"SETICB ( ""dbg.trace.tag"" , 0 , & cb_tracetag , ""Trace tag"" )"		4078290	0					
ANR	4083493	Callee	SETICB		4078290	0					
ANR	4083494	Identifier	SETICB		4078290	0					
ANR	4083495	ArgumentList	"""dbg.trace.tag"""		4078290	1					
ANR	4083496	Argument	"""dbg.trace.tag"""		4078290	0					
ANR	4083497	PrimaryExpression	"""dbg.trace.tag"""		4078290	0					
ANR	4083498	Argument	0		4078290	1					
ANR	4083499	PrimaryExpression	0		4078290	0					
ANR	4083500	Argument	& cb_tracetag		4078290	2					
ANR	4083501	UnaryOperationExpression	& cb_tracetag		4078290	0					
ANR	4083502	UnaryOperator	&		4078290	0					
ANR	4083503	Identifier	cb_tracetag		4078290	1					
ANR	4083504	Argument	"""Trace tag"""		4078290	3					
ANR	4083505	PrimaryExpression	"""Trace tag"""		4078290	0					
ANR	4083506	ExpressionStatement	"SETPREF ( ""cmd.xterm"" , ""xterm -bg black -fg gray -e"" , ""xterm command to spawn with V@"" )"	3271:1:108883:108969	4078290	444	True				
ANR	4083507	CallExpression	"SETPREF ( ""cmd.xterm"" , ""xterm -bg black -fg gray -e"" , ""xterm command to spawn with V@"" )"		4078290	0					
ANR	4083508	Callee	SETPREF		4078290	0					
ANR	4083509	Identifier	SETPREF		4078290	0					
ANR	4083510	ArgumentList	"""cmd.xterm"""		4078290	1					
ANR	4083511	Argument	"""cmd.xterm"""		4078290	0					
ANR	4083512	PrimaryExpression	"""cmd.xterm"""		4078290	0					
ANR	4083513	Argument	"""xterm -bg black -fg gray -e"""		4078290	1					
ANR	4083514	PrimaryExpression	"""xterm -bg black -fg gray -e"""		4078290	0					
ANR	4083515	Argument	"""xterm command to spawn with V@"""		4078290	2					
ANR	4083516	PrimaryExpression	"""xterm command to spawn with V@"""		4078290	0					
ANR	4083517	ExpressionStatement	"SETICB ( ""cmd.depth"" , 10 , & cb_cmddepth , ""Maximum command depth"" )"	3272:1:108972:109035	4078290	445	True				
ANR	4083518	CallExpression	"SETICB ( ""cmd.depth"" , 10 , & cb_cmddepth , ""Maximum command depth"" )"		4078290	0					
ANR	4083519	Callee	SETICB		4078290	0					
ANR	4083520	Identifier	SETICB		4078290	0					
ANR	4083521	ArgumentList	"""cmd.depth"""		4078290	1					
ANR	4083522	Argument	"""cmd.depth"""		4078290	0					
ANR	4083523	PrimaryExpression	"""cmd.depth"""		4078290	0					
ANR	4083524	Argument	10		4078290	1					
ANR	4083525	PrimaryExpression	10		4078290	0					
ANR	4083526	Argument	& cb_cmddepth		4078290	2					
ANR	4083527	UnaryOperationExpression	& cb_cmddepth		4078290	0					
ANR	4083528	UnaryOperator	&		4078290	0					
ANR	4083529	Identifier	cb_cmddepth		4078290	1					
ANR	4083530	Argument	"""Maximum command depth"""		4078290	3					
ANR	4083531	PrimaryExpression	"""Maximum command depth"""		4078290	0					
ANR	4083532	ExpressionStatement	"SETPREF ( ""cmd.bp"" , """" , ""Run when a breakpoint is hit"" )"	3273:1:109038:109092	4078290	446	True				
ANR	4083533	CallExpression	"SETPREF ( ""cmd.bp"" , """" , ""Run when a breakpoint is hit"" )"		4078290	0					
ANR	4083534	Callee	SETPREF		4078290	0					
ANR	4083535	Identifier	SETPREF		4078290	0					
ANR	4083536	ArgumentList	"""cmd.bp"""		4078290	1					
ANR	4083537	Argument	"""cmd.bp"""		4078290	0					
ANR	4083538	PrimaryExpression	"""cmd.bp"""		4078290	0					
ANR	4083539	Argument	""""""		4078290	1					
ANR	4083540	PrimaryExpression	""""""		4078290	0					
ANR	4083541	Argument	"""Run when a breakpoint is hit"""		4078290	2					
ANR	4083542	PrimaryExpression	"""Run when a breakpoint is hit"""		4078290	0					
ANR	4083543	ExpressionStatement	"SETPREF ( ""cmd.onsyscall"" , """" , ""Run when a syscall is hit"" )"	3274:1:109095:109153	4078290	447	True				
ANR	4083544	CallExpression	"SETPREF ( ""cmd.onsyscall"" , """" , ""Run when a syscall is hit"" )"		4078290	0					
ANR	4083545	Callee	SETPREF		4078290	0					
ANR	4083546	Identifier	SETPREF		4078290	0					
ANR	4083547	ArgumentList	"""cmd.onsyscall"""		4078290	1					
ANR	4083548	Argument	"""cmd.onsyscall"""		4078290	0					
ANR	4083549	PrimaryExpression	"""cmd.onsyscall"""		4078290	0					
ANR	4083550	Argument	""""""		4078290	1					
ANR	4083551	PrimaryExpression	""""""		4078290	0					
ANR	4083552	Argument	"""Run when a syscall is hit"""		4078290	2					
ANR	4083553	PrimaryExpression	"""Run when a syscall is hit"""		4078290	0					
ANR	4083554	ExpressionStatement	"SETICB ( ""cmd.hitinfo"" , 1 , & cb_debug_hitinfo , ""Show info when a tracepoint/breakpoint is hit"" )"	3275:1:109156:109249	4078290	448	True				
ANR	4083555	CallExpression	"SETICB ( ""cmd.hitinfo"" , 1 , & cb_debug_hitinfo , ""Show info when a tracepoint/breakpoint is hit"" )"		4078290	0					
ANR	4083556	Callee	SETICB		4078290	0					
ANR	4083557	Identifier	SETICB		4078290	0					
ANR	4083558	ArgumentList	"""cmd.hitinfo"""		4078290	1					
ANR	4083559	Argument	"""cmd.hitinfo"""		4078290	0					
ANR	4083560	PrimaryExpression	"""cmd.hitinfo"""		4078290	0					
ANR	4083561	Argument	1		4078290	1					
ANR	4083562	PrimaryExpression	1		4078290	0					
ANR	4083563	Argument	& cb_debug_hitinfo		4078290	2					
ANR	4083564	UnaryOperationExpression	& cb_debug_hitinfo		4078290	0					
ANR	4083565	UnaryOperator	&		4078290	0					
ANR	4083566	Identifier	cb_debug_hitinfo		4078290	1					
ANR	4083567	Argument	"""Show info when a tracepoint/breakpoint is hit"""		4078290	3					
ANR	4083568	PrimaryExpression	"""Show info when a tracepoint/breakpoint is hit"""		4078290	0					
ANR	4083569	ExpressionStatement	"SETPREF ( ""cmd.stack"" , """" , ""Command to display the stack in visual debug mode"" )"	3276:1:109252:109330	4078290	449	True				
ANR	4083570	CallExpression	"SETPREF ( ""cmd.stack"" , """" , ""Command to display the stack in visual debug mode"" )"		4078290	0					
ANR	4083571	Callee	SETPREF		4078290	0					
ANR	4083572	Identifier	SETPREF		4078290	0					
ANR	4083573	ArgumentList	"""cmd.stack"""		4078290	1					
ANR	4083574	Argument	"""cmd.stack"""		4078290	0					
ANR	4083575	PrimaryExpression	"""cmd.stack"""		4078290	0					
ANR	4083576	Argument	""""""		4078290	1					
ANR	4083577	PrimaryExpression	""""""		4078290	0					
ANR	4083578	Argument	"""Command to display the stack in visual debug mode"""		4078290	2					
ANR	4083579	PrimaryExpression	"""Command to display the stack in visual debug mode"""		4078290	0					
ANR	4083580	ExpressionStatement	"SETPREF ( ""cmd.cprompt"" , """" , ""Column visual prompt commands"" )"	3277:1:109333:109393	4078290	450	True				
ANR	4083581	CallExpression	"SETPREF ( ""cmd.cprompt"" , """" , ""Column visual prompt commands"" )"		4078290	0					
ANR	4083582	Callee	SETPREF		4078290	0					
ANR	4083583	Identifier	SETPREF		4078290	0					
ANR	4083584	ArgumentList	"""cmd.cprompt"""		4078290	1					
ANR	4083585	Argument	"""cmd.cprompt"""		4078290	0					
ANR	4083586	PrimaryExpression	"""cmd.cprompt"""		4078290	0					
ANR	4083587	Argument	""""""		4078290	1					
ANR	4083588	PrimaryExpression	""""""		4078290	0					
ANR	4083589	Argument	"""Column visual prompt commands"""		4078290	2					
ANR	4083590	PrimaryExpression	"""Column visual prompt commands"""		4078290	0					
ANR	4083591	ExpressionStatement	"SETPREF ( ""cmd.gprompt"" , """" , ""Graph visual prompt commands"" )"	3278:1:109396:109455	4078290	451	True				
ANR	4083592	CallExpression	"SETPREF ( ""cmd.gprompt"" , """" , ""Graph visual prompt commands"" )"		4078290	0					
ANR	4083593	Callee	SETPREF		4078290	0					
ANR	4083594	Identifier	SETPREF		4078290	0					
ANR	4083595	ArgumentList	"""cmd.gprompt"""		4078290	1					
ANR	4083596	Argument	"""cmd.gprompt"""		4078290	0					
ANR	4083597	PrimaryExpression	"""cmd.gprompt"""		4078290	0					
ANR	4083598	Argument	""""""		4078290	1					
ANR	4083599	PrimaryExpression	""""""		4078290	0					
ANR	4083600	Argument	"""Graph visual prompt commands"""		4078290	2					
ANR	4083601	PrimaryExpression	"""Graph visual prompt commands"""		4078290	0					
ANR	4083602	ExpressionStatement	"SETPREF ( ""cmd.hit"" , """" , ""Run when a search hit is found"" )"	3279:1:109458:109515	4078290	452	True				
ANR	4083603	CallExpression	"SETPREF ( ""cmd.hit"" , """" , ""Run when a search hit is found"" )"		4078290	0					
ANR	4083604	Callee	SETPREF		4078290	0					
ANR	4083605	Identifier	SETPREF		4078290	0					
ANR	4083606	ArgumentList	"""cmd.hit"""		4078290	1					
ANR	4083607	Argument	"""cmd.hit"""		4078290	0					
ANR	4083608	PrimaryExpression	"""cmd.hit"""		4078290	0					
ANR	4083609	Argument	""""""		4078290	1					
ANR	4083610	PrimaryExpression	""""""		4078290	0					
ANR	4083611	Argument	"""Run when a search hit is found"""		4078290	2					
ANR	4083612	PrimaryExpression	"""Run when a search hit is found"""		4078290	0					
ANR	4083613	ExpressionStatement	"SETPREF ( ""cmd.open"" , """" , ""Run when file is opened"" )"	3280:1:109518:109569	4078290	453	True				
ANR	4083614	CallExpression	"SETPREF ( ""cmd.open"" , """" , ""Run when file is opened"" )"		4078290	0					
ANR	4083615	Callee	SETPREF		4078290	0					
ANR	4083616	Identifier	SETPREF		4078290	0					
ANR	4083617	ArgumentList	"""cmd.open"""		4078290	1					
ANR	4083618	Argument	"""cmd.open"""		4078290	0					
ANR	4083619	PrimaryExpression	"""cmd.open"""		4078290	0					
ANR	4083620	Argument	""""""		4078290	1					
ANR	4083621	PrimaryExpression	""""""		4078290	0					
ANR	4083622	Argument	"""Run when file is opened"""		4078290	2					
ANR	4083623	PrimaryExpression	"""Run when file is opened"""		4078290	0					
ANR	4083624	ExpressionStatement	"SETPREF ( ""cmd.load"" , """" , ""Run when binary is loaded"" )"	3281:1:109572:109625	4078290	454	True				
ANR	4083625	CallExpression	"SETPREF ( ""cmd.load"" , """" , ""Run when binary is loaded"" )"		4078290	0					
ANR	4083626	Callee	SETPREF		4078290	0					
ANR	4083627	Identifier	SETPREF		4078290	0					
ANR	4083628	ArgumentList	"""cmd.load"""		4078290	1					
ANR	4083629	Argument	"""cmd.load"""		4078290	0					
ANR	4083630	PrimaryExpression	"""cmd.load"""		4078290	0					
ANR	4083631	Argument	""""""		4078290	1					
ANR	4083632	PrimaryExpression	""""""		4078290	0					
ANR	4083633	Argument	"""Run when binary is loaded"""		4078290	2					
ANR	4083634	PrimaryExpression	"""Run when binary is loaded"""		4078290	0					
ANR	4083635	IdentifierDeclStatement	"RConfigNode * cmdpdc = NODECB ( ""cmd.pdc"" , """" , & cb_cmdpdc ) ;"	3282:1:109628:109684	4078290	455	True				
ANR	4083636	IdentifierDecl	"* cmdpdc = NODECB ( ""cmd.pdc"" , """" , & cb_cmdpdc )"		4078290	0					
ANR	4083637	IdentifierDeclType	RConfigNode *		4078290	0					
ANR	4083638	Identifier	cmdpdc		4078290	1					
ANR	4083639	AssignmentExpression	"* cmdpdc = NODECB ( ""cmd.pdc"" , """" , & cb_cmdpdc )"		4078290	2		=			
ANR	4083640	Identifier	cmdpdc		4078290	0					
ANR	4083641	CallExpression	"NODECB ( ""cmd.pdc"" , """" , & cb_cmdpdc )"		4078290	1					
ANR	4083642	Callee	NODECB		4078290	0					
ANR	4083643	Identifier	NODECB		4078290	0					
ANR	4083644	ArgumentList	"""cmd.pdc"""		4078290	1					
ANR	4083645	Argument	"""cmd.pdc"""		4078290	0					
ANR	4083646	PrimaryExpression	"""cmd.pdc"""		4078290	0					
ANR	4083647	Argument	""""""		4078290	1					
ANR	4083648	PrimaryExpression	""""""		4078290	0					
ANR	4083649	Argument	& cb_cmdpdc		4078290	2					
ANR	4083650	UnaryOperationExpression	& cb_cmdpdc		4078290	0					
ANR	4083651	UnaryOperator	&		4078290	0					
ANR	4083652	Identifier	cb_cmdpdc		4078290	1					
ANR	4083653	ExpressionStatement	"SETDESC ( cmdpdc , ""Select pseudo-decompiler command to run after pdc"" )"	3283:1:109687:109756	4078290	456	True				
ANR	4083654	CallExpression	"SETDESC ( cmdpdc , ""Select pseudo-decompiler command to run after pdc"" )"		4078290	0					
ANR	4083655	Callee	SETDESC		4078290	0					
ANR	4083656	Identifier	SETDESC		4078290	0					
ANR	4083657	ArgumentList	cmdpdc		4078290	1					
ANR	4083658	Argument	cmdpdc		4078290	0					
ANR	4083659	Identifier	cmdpdc		4078290	0					
ANR	4083660	Argument	"""Select pseudo-decompiler command to run after pdc"""		4078290	1					
ANR	4083661	PrimaryExpression	"""Select pseudo-decompiler command to run after pdc"""		4078290	0					
ANR	4083662	ExpressionStatement	"update_cmdpdc_options ( core , cmdpdc )"	3284:1:109759:109795	4078290	457	True				
ANR	4083663	CallExpression	"update_cmdpdc_options ( core , cmdpdc )"		4078290	0					
ANR	4083664	Callee	update_cmdpdc_options		4078290	0					
ANR	4083665	Identifier	update_cmdpdc_options		4078290	0					
ANR	4083666	ArgumentList	core		4078290	1					
ANR	4083667	Argument	core		4078290	0					
ANR	4083668	Identifier	core		4078290	0					
ANR	4083669	Argument	cmdpdc		4078290	1					
ANR	4083670	Identifier	cmdpdc		4078290	0					
ANR	4083671	ExpressionStatement	"SETCB ( ""cmd.log"" , """" , & cb_cmdlog , ""Every time a new T log is added run this command"" )"	3285:1:109798:109883	4078290	458	True				
ANR	4083672	CallExpression	"SETCB ( ""cmd.log"" , """" , & cb_cmdlog , ""Every time a new T log is added run this command"" )"		4078290	0					
ANR	4083673	Callee	SETCB		4078290	0					
ANR	4083674	Identifier	SETCB		4078290	0					
ANR	4083675	ArgumentList	"""cmd.log"""		4078290	1					
ANR	4083676	Argument	"""cmd.log"""		4078290	0					
ANR	4083677	PrimaryExpression	"""cmd.log"""		4078290	0					
ANR	4083678	Argument	""""""		4078290	1					
ANR	4083679	PrimaryExpression	""""""		4078290	0					
ANR	4083680	Argument	& cb_cmdlog		4078290	2					
ANR	4083681	UnaryOperationExpression	& cb_cmdlog		4078290	0					
ANR	4083682	UnaryOperator	&		4078290	0					
ANR	4083683	Identifier	cb_cmdlog		4078290	1					
ANR	4083684	Argument	"""Every time a new T log is added run this command"""		4078290	3					
ANR	4083685	PrimaryExpression	"""Every time a new T log is added run this command"""		4078290	0					
ANR	4083686	ExpressionStatement	"SETPREF ( ""cmd.prompt"" , """" , ""Prompt commands"" )"	3286:1:109886:109931	4078290	459	True				
ANR	4083687	CallExpression	"SETPREF ( ""cmd.prompt"" , """" , ""Prompt commands"" )"		4078290	0					
ANR	4083688	Callee	SETPREF		4078290	0					
ANR	4083689	Identifier	SETPREF		4078290	0					
ANR	4083690	ArgumentList	"""cmd.prompt"""		4078290	1					
ANR	4083691	Argument	"""cmd.prompt"""		4078290	0					
ANR	4083692	PrimaryExpression	"""cmd.prompt"""		4078290	0					
ANR	4083693	Argument	""""""		4078290	1					
ANR	4083694	PrimaryExpression	""""""		4078290	0					
ANR	4083695	Argument	"""Prompt commands"""		4078290	2					
ANR	4083696	PrimaryExpression	"""Prompt commands"""		4078290	0					
ANR	4083697	ExpressionStatement	"SETCB ( ""cmd.repeat"" , ""false"" , & cb_cmdrepeat , ""Empty command an alias for '..' (repeat last command)"" )"	3287:1:109934:110035	4078290	460	True				
ANR	4083698	CallExpression	"SETCB ( ""cmd.repeat"" , ""false"" , & cb_cmdrepeat , ""Empty command an alias for '..' (repeat last command)"" )"		4078290	0					
ANR	4083699	Callee	SETCB		4078290	0					
ANR	4083700	Identifier	SETCB		4078290	0					
ANR	4083701	ArgumentList	"""cmd.repeat"""		4078290	1					
ANR	4083702	Argument	"""cmd.repeat"""		4078290	0					
ANR	4083703	PrimaryExpression	"""cmd.repeat"""		4078290	0					
ANR	4083704	Argument	"""false"""		4078290	1					
ANR	4083705	PrimaryExpression	"""false"""		4078290	0					
ANR	4083706	Argument	& cb_cmdrepeat		4078290	2					
ANR	4083707	UnaryOperationExpression	& cb_cmdrepeat		4078290	0					
ANR	4083708	UnaryOperator	&		4078290	0					
ANR	4083709	Identifier	cb_cmdrepeat		4078290	1					
ANR	4083710	Argument	"""Empty command an alias for '..' (repeat last command)"""		4078290	3					
ANR	4083711	PrimaryExpression	"""Empty command an alias for '..' (repeat last command)"""		4078290	0					
ANR	4083712	ExpressionStatement	"SETPREF ( ""cmd.fcn.new"" , """" , ""Run when new function is analyzed"" )"	3288:1:110038:110102	4078290	461	True				
ANR	4083713	CallExpression	"SETPREF ( ""cmd.fcn.new"" , """" , ""Run when new function is analyzed"" )"		4078290	0					
ANR	4083714	Callee	SETPREF		4078290	0					
ANR	4083715	Identifier	SETPREF		4078290	0					
ANR	4083716	ArgumentList	"""cmd.fcn.new"""		4078290	1					
ANR	4083717	Argument	"""cmd.fcn.new"""		4078290	0					
ANR	4083718	PrimaryExpression	"""cmd.fcn.new"""		4078290	0					
ANR	4083719	Argument	""""""		4078290	1					
ANR	4083720	PrimaryExpression	""""""		4078290	0					
ANR	4083721	Argument	"""Run when new function is analyzed"""		4078290	2					
ANR	4083722	PrimaryExpression	"""Run when new function is analyzed"""		4078290	0					
ANR	4083723	ExpressionStatement	"SETPREF ( ""cmd.fcn.delete"" , """" , ""Run when a function is deleted"" )"	3289:1:110105:110169	4078290	462	True				
ANR	4083724	CallExpression	"SETPREF ( ""cmd.fcn.delete"" , """" , ""Run when a function is deleted"" )"		4078290	0					
ANR	4083725	Callee	SETPREF		4078290	0					
ANR	4083726	Identifier	SETPREF		4078290	0					
ANR	4083727	ArgumentList	"""cmd.fcn.delete"""		4078290	1					
ANR	4083728	Argument	"""cmd.fcn.delete"""		4078290	0					
ANR	4083729	PrimaryExpression	"""cmd.fcn.delete"""		4078290	0					
ANR	4083730	Argument	""""""		4078290	1					
ANR	4083731	PrimaryExpression	""""""		4078290	0					
ANR	4083732	Argument	"""Run when a function is deleted"""		4078290	2					
ANR	4083733	PrimaryExpression	"""Run when a function is deleted"""		4078290	0					
ANR	4083734	ExpressionStatement	"SETPREF ( ""cmd.fcn.rename"" , """" , ""Run when a function is renamed"" )"	3290:1:110172:110236	4078290	463	True				
ANR	4083735	CallExpression	"SETPREF ( ""cmd.fcn.rename"" , """" , ""Run when a function is renamed"" )"		4078290	0					
ANR	4083736	Callee	SETPREF		4078290	0					
ANR	4083737	Identifier	SETPREF		4078290	0					
ANR	4083738	ArgumentList	"""cmd.fcn.rename"""		4078290	1					
ANR	4083739	Argument	"""cmd.fcn.rename"""		4078290	0					
ANR	4083740	PrimaryExpression	"""cmd.fcn.rename"""		4078290	0					
ANR	4083741	Argument	""""""		4078290	1					
ANR	4083742	PrimaryExpression	""""""		4078290	0					
ANR	4083743	Argument	"""Run when a function is renamed"""		4078290	2					
ANR	4083744	PrimaryExpression	"""Run when a function is renamed"""		4078290	0					
ANR	4083745	ExpressionStatement	"SETPREF ( ""cmd.visual"" , """" , ""Replace current print mode"" )"	3291:1:110239:110295	4078290	464	True				
ANR	4083746	CallExpression	"SETPREF ( ""cmd.visual"" , """" , ""Replace current print mode"" )"		4078290	0					
ANR	4083747	Callee	SETPREF		4078290	0					
ANR	4083748	Identifier	SETPREF		4078290	0					
ANR	4083749	ArgumentList	"""cmd.visual"""		4078290	1					
ANR	4083750	Argument	"""cmd.visual"""		4078290	0					
ANR	4083751	PrimaryExpression	"""cmd.visual"""		4078290	0					
ANR	4083752	Argument	""""""		4078290	1					
ANR	4083753	PrimaryExpression	""""""		4078290	0					
ANR	4083754	Argument	"""Replace current print mode"""		4078290	2					
ANR	4083755	PrimaryExpression	"""Replace current print mode"""		4078290	0					
ANR	4083756	ExpressionStatement	"SETPREF ( ""cmd.vprompt"" , """" , ""Visual prompt commands"" )"	3292:1:110298:110351	4078290	465	True				
ANR	4083757	CallExpression	"SETPREF ( ""cmd.vprompt"" , """" , ""Visual prompt commands"" )"		4078290	0					
ANR	4083758	Callee	SETPREF		4078290	0					
ANR	4083759	Identifier	SETPREF		4078290	0					
ANR	4083760	ArgumentList	"""cmd.vprompt"""		4078290	1					
ANR	4083761	Argument	"""cmd.vprompt"""		4078290	0					
ANR	4083762	PrimaryExpression	"""cmd.vprompt"""		4078290	0					
ANR	4083763	Argument	""""""		4078290	1					
ANR	4083764	PrimaryExpression	""""""		4078290	0					
ANR	4083765	Argument	"""Visual prompt commands"""		4078290	2					
ANR	4083766	PrimaryExpression	"""Visual prompt commands"""		4078290	0					
ANR	4083767	ExpressionStatement	"SETCB ( ""cmd.esil.step"" , """" , & cb_cmd_esil_step , ""Command to run before performing a step in the emulator"" )"	3294:1:110355:110460	4078290	466	True				
ANR	4083768	CallExpression	"SETCB ( ""cmd.esil.step"" , """" , & cb_cmd_esil_step , ""Command to run before performing a step in the emulator"" )"		4078290	0					
ANR	4083769	Callee	SETCB		4078290	0					
ANR	4083770	Identifier	SETCB		4078290	0					
ANR	4083771	ArgumentList	"""cmd.esil.step"""		4078290	1					
ANR	4083772	Argument	"""cmd.esil.step"""		4078290	0					
ANR	4083773	PrimaryExpression	"""cmd.esil.step"""		4078290	0					
ANR	4083774	Argument	""""""		4078290	1					
ANR	4083775	PrimaryExpression	""""""		4078290	0					
ANR	4083776	Argument	& cb_cmd_esil_step		4078290	2					
ANR	4083777	UnaryOperationExpression	& cb_cmd_esil_step		4078290	0					
ANR	4083778	UnaryOperator	&		4078290	0					
ANR	4083779	Identifier	cb_cmd_esil_step		4078290	1					
ANR	4083780	Argument	"""Command to run before performing a step in the emulator"""		4078290	3					
ANR	4083781	PrimaryExpression	"""Command to run before performing a step in the emulator"""		4078290	0					
ANR	4083782	ExpressionStatement	"SETCB ( ""cmd.esil.stepout"" , """" , & cb_cmd_esil_step_out , ""Command to run after performing a step in the emulator"" )"	3295:1:110463:110574	4078290	467	True				
ANR	4083783	CallExpression	"SETCB ( ""cmd.esil.stepout"" , """" , & cb_cmd_esil_step_out , ""Command to run after performing a step in the emulator"" )"		4078290	0					
ANR	4083784	Callee	SETCB		4078290	0					
ANR	4083785	Identifier	SETCB		4078290	0					
ANR	4083786	ArgumentList	"""cmd.esil.stepout"""		4078290	1					
ANR	4083787	Argument	"""cmd.esil.stepout"""		4078290	0					
ANR	4083788	PrimaryExpression	"""cmd.esil.stepout"""		4078290	0					
ANR	4083789	Argument	""""""		4078290	1					
ANR	4083790	PrimaryExpression	""""""		4078290	0					
ANR	4083791	Argument	& cb_cmd_esil_step_out		4078290	2					
ANR	4083792	UnaryOperationExpression	& cb_cmd_esil_step_out		4078290	0					
ANR	4083793	UnaryOperator	&		4078290	0					
ANR	4083794	Identifier	cb_cmd_esil_step_out		4078290	1					
ANR	4083795	Argument	"""Command to run after performing a step in the emulator"""		4078290	3					
ANR	4083796	PrimaryExpression	"""Command to run after performing a step in the emulator"""		4078290	0					
ANR	4083797	ExpressionStatement	"SETCB ( ""cmd.esil.mdev"" , """" , & cb_cmd_esil_mdev , ""Command to run when memory device address is accessed"" )"	3296:1:110577:110680	4078290	468	True				
ANR	4083798	CallExpression	"SETCB ( ""cmd.esil.mdev"" , """" , & cb_cmd_esil_mdev , ""Command to run when memory device address is accessed"" )"		4078290	0					
ANR	4083799	Callee	SETCB		4078290	0					
ANR	4083800	Identifier	SETCB		4078290	0					
ANR	4083801	ArgumentList	"""cmd.esil.mdev"""		4078290	1					
ANR	4083802	Argument	"""cmd.esil.mdev"""		4078290	0					
ANR	4083803	PrimaryExpression	"""cmd.esil.mdev"""		4078290	0					
ANR	4083804	Argument	""""""		4078290	1					
ANR	4083805	PrimaryExpression	""""""		4078290	0					
ANR	4083806	Argument	& cb_cmd_esil_mdev		4078290	2					
ANR	4083807	UnaryOperationExpression	& cb_cmd_esil_mdev		4078290	0					
ANR	4083808	UnaryOperator	&		4078290	0					
ANR	4083809	Identifier	cb_cmd_esil_mdev		4078290	1					
ANR	4083810	Argument	"""Command to run when memory device address is accessed"""		4078290	3					
ANR	4083811	PrimaryExpression	"""Command to run when memory device address is accessed"""		4078290	0					
ANR	4083812	ExpressionStatement	"SETCB ( ""cmd.esil.intr"" , """" , & cb_cmd_esil_intr , ""Command to run when an esil interrupt happens"" )"	3297:1:110683:110778	4078290	469	True				
ANR	4083813	CallExpression	"SETCB ( ""cmd.esil.intr"" , """" , & cb_cmd_esil_intr , ""Command to run when an esil interrupt happens"" )"		4078290	0					
ANR	4083814	Callee	SETCB		4078290	0					
ANR	4083815	Identifier	SETCB		4078290	0					
ANR	4083816	ArgumentList	"""cmd.esil.intr"""		4078290	1					
ANR	4083817	Argument	"""cmd.esil.intr"""		4078290	0					
ANR	4083818	PrimaryExpression	"""cmd.esil.intr"""		4078290	0					
ANR	4083819	Argument	""""""		4078290	1					
ANR	4083820	PrimaryExpression	""""""		4078290	0					
ANR	4083821	Argument	& cb_cmd_esil_intr		4078290	2					
ANR	4083822	UnaryOperationExpression	& cb_cmd_esil_intr		4078290	0					
ANR	4083823	UnaryOperator	&		4078290	0					
ANR	4083824	Identifier	cb_cmd_esil_intr		4078290	1					
ANR	4083825	Argument	"""Command to run when an esil interrupt happens"""		4078290	3					
ANR	4083826	PrimaryExpression	"""Command to run when an esil interrupt happens"""		4078290	0					
ANR	4083827	ExpressionStatement	"SETCB ( ""cmd.esil.trap"" , """" , & cb_cmd_esil_trap , ""Command to run when an esil trap happens"" )"	3298:1:110781:110871	4078290	470	True				
ANR	4083828	CallExpression	"SETCB ( ""cmd.esil.trap"" , """" , & cb_cmd_esil_trap , ""Command to run when an esil trap happens"" )"		4078290	0					
ANR	4083829	Callee	SETCB		4078290	0					
ANR	4083830	Identifier	SETCB		4078290	0					
ANR	4083831	ArgumentList	"""cmd.esil.trap"""		4078290	1					
ANR	4083832	Argument	"""cmd.esil.trap"""		4078290	0					
ANR	4083833	PrimaryExpression	"""cmd.esil.trap"""		4078290	0					
ANR	4083834	Argument	""""""		4078290	1					
ANR	4083835	PrimaryExpression	""""""		4078290	0					
ANR	4083836	Argument	& cb_cmd_esil_trap		4078290	2					
ANR	4083837	UnaryOperationExpression	& cb_cmd_esil_trap		4078290	0					
ANR	4083838	UnaryOperator	&		4078290	0					
ANR	4083839	Identifier	cb_cmd_esil_trap		4078290	1					
ANR	4083840	Argument	"""Command to run when an esil trap happens"""		4078290	3					
ANR	4083841	PrimaryExpression	"""Command to run when an esil trap happens"""		4078290	0					
ANR	4083842	ExpressionStatement	"SETCB ( ""cmd.esil.todo"" , """" , & cb_cmd_esil_todo , ""Command to run when the esil instruction contains TODO"" )"	3299:1:110874:110978	4078290	471	True				
ANR	4083843	CallExpression	"SETCB ( ""cmd.esil.todo"" , """" , & cb_cmd_esil_todo , ""Command to run when the esil instruction contains TODO"" )"		4078290	0					
ANR	4083844	Callee	SETCB		4078290	0					
ANR	4083845	Identifier	SETCB		4078290	0					
ANR	4083846	ArgumentList	"""cmd.esil.todo"""		4078290	1					
ANR	4083847	Argument	"""cmd.esil.todo"""		4078290	0					
ANR	4083848	PrimaryExpression	"""cmd.esil.todo"""		4078290	0					
ANR	4083849	Argument	""""""		4078290	1					
ANR	4083850	PrimaryExpression	""""""		4078290	0					
ANR	4083851	Argument	& cb_cmd_esil_todo		4078290	2					
ANR	4083852	UnaryOperationExpression	& cb_cmd_esil_todo		4078290	0					
ANR	4083853	UnaryOperator	&		4078290	0					
ANR	4083854	Identifier	cb_cmd_esil_todo		4078290	1					
ANR	4083855	Argument	"""Command to run when the esil instruction contains TODO"""		4078290	3					
ANR	4083856	PrimaryExpression	"""Command to run when the esil instruction contains TODO"""		4078290	0					
ANR	4083857	ExpressionStatement	"SETCB ( ""cmd.esil.ioer"" , """" , & cb_cmd_esil_ioer , ""Command to run when esil fails to IO (invalid read/write)"" )"	3300:1:110981:111088	4078290	472	True				
ANR	4083858	CallExpression	"SETCB ( ""cmd.esil.ioer"" , """" , & cb_cmd_esil_ioer , ""Command to run when esil fails to IO (invalid read/write)"" )"		4078290	0					
ANR	4083859	Callee	SETCB		4078290	0					
ANR	4083860	Identifier	SETCB		4078290	0					
ANR	4083861	ArgumentList	"""cmd.esil.ioer"""		4078290	1					
ANR	4083862	Argument	"""cmd.esil.ioer"""		4078290	0					
ANR	4083863	PrimaryExpression	"""cmd.esil.ioer"""		4078290	0					
ANR	4083864	Argument	""""""		4078290	1					
ANR	4083865	PrimaryExpression	""""""		4078290	0					
ANR	4083866	Argument	& cb_cmd_esil_ioer		4078290	2					
ANR	4083867	UnaryOperationExpression	& cb_cmd_esil_ioer		4078290	0					
ANR	4083868	UnaryOperator	&		4078290	0					
ANR	4083869	Identifier	cb_cmd_esil_ioer		4078290	1					
ANR	4083870	Argument	"""Command to run when esil fails to IO (invalid read/write)"""		4078290	3					
ANR	4083871	PrimaryExpression	"""Command to run when esil fails to IO (invalid read/write)"""		4078290	0					
ANR	4083872	ExpressionStatement	"n = NODECB ( ""fs.view"" , ""normal"" , & cb_fsview )"	3303:1:111110:111154	4078290	473	True				
ANR	4083873	AssignmentExpression	"n = NODECB ( ""fs.view"" , ""normal"" , & cb_fsview )"		4078290	0		=			
ANR	4083874	Identifier	n		4078290	0					
ANR	4083875	CallExpression	"NODECB ( ""fs.view"" , ""normal"" , & cb_fsview )"		4078290	1					
ANR	4083876	Callee	NODECB		4078290	0					
ANR	4083877	Identifier	NODECB		4078290	0					
ANR	4083878	ArgumentList	"""fs.view"""		4078290	1					
ANR	4083879	Argument	"""fs.view"""		4078290	0					
ANR	4083880	PrimaryExpression	"""fs.view"""		4078290	0					
ANR	4083881	Argument	"""normal"""		4078290	1					
ANR	4083882	PrimaryExpression	"""normal"""		4078290	0					
ANR	4083883	Argument	& cb_fsview		4078290	2					
ANR	4083884	UnaryOperationExpression	& cb_fsview		4078290	0					
ANR	4083885	UnaryOperator	&		4078290	0					
ANR	4083886	Identifier	cb_fsview		4078290	1					
ANR	4083887	ExpressionStatement	"SETDESC ( n , ""Set visibility options for filesystems"" )"	3304:1:111157:111210	4078290	474	True				
ANR	4083888	CallExpression	"SETDESC ( n , ""Set visibility options for filesystems"" )"		4078290	0					
ANR	4083889	Callee	SETDESC		4078290	0					
ANR	4083890	Identifier	SETDESC		4078290	0					
ANR	4083891	ArgumentList	n		4078290	1					
ANR	4083892	Argument	n		4078290	0					
ANR	4083893	Identifier	n		4078290	0					
ANR	4083894	Argument	"""Set visibility options for filesystems"""		4078290	1					
ANR	4083895	PrimaryExpression	"""Set visibility options for filesystems"""		4078290	0					
ANR	4083896	ExpressionStatement	"SETOPTIONS ( n , ""all"" , ""deleted"" , ""special"" , NULL )"	3305:1:111213:111262	4078290	475	True				
ANR	4083897	CallExpression	"SETOPTIONS ( n , ""all"" , ""deleted"" , ""special"" , NULL )"		4078290	0					
ANR	4083898	Callee	SETOPTIONS		4078290	0					
ANR	4083899	Identifier	SETOPTIONS		4078290	0					
ANR	4083900	ArgumentList	n		4078290	1					
ANR	4083901	Argument	n		4078290	0					
ANR	4083902	Identifier	n		4078290	0					
ANR	4083903	Argument	"""all"""		4078290	1					
ANR	4083904	PrimaryExpression	"""all"""		4078290	0					
ANR	4083905	Argument	"""deleted"""		4078290	2					
ANR	4083906	PrimaryExpression	"""deleted"""		4078290	0					
ANR	4083907	Argument	"""special"""		4078290	3					
ANR	4083908	PrimaryExpression	"""special"""		4078290	0					
ANR	4083909	Argument	NULL		4078290	4					
ANR	4083910	Identifier	NULL		4078290	0					
ANR	4083911	ExpressionStatement	"SETCB ( ""hex.header"" , ""true"" , & cb_hex_header , ""Show header in hexdump"" )"	3308:1:111281:111351	4078290	476	True				
ANR	4083912	CallExpression	"SETCB ( ""hex.header"" , ""true"" , & cb_hex_header , ""Show header in hexdump"" )"		4078290	0					
ANR	4083913	Callee	SETCB		4078290	0					
ANR	4083914	Identifier	SETCB		4078290	0					
ANR	4083915	ArgumentList	"""hex.header"""		4078290	1					
ANR	4083916	Argument	"""hex.header"""		4078290	0					
ANR	4083917	PrimaryExpression	"""hex.header"""		4078290	0					
ANR	4083918	Argument	"""true"""		4078290	1					
ANR	4083919	PrimaryExpression	"""true"""		4078290	0					
ANR	4083920	Argument	& cb_hex_header		4078290	2					
ANR	4083921	UnaryOperationExpression	& cb_hex_header		4078290	0					
ANR	4083922	UnaryOperator	&		4078290	0					
ANR	4083923	Identifier	cb_hex_header		4078290	1					
ANR	4083924	Argument	"""Show header in hexdump"""		4078290	3					
ANR	4083925	PrimaryExpression	"""Show header in hexdump"""		4078290	0					
ANR	4083926	ExpressionStatement	"SETCB ( ""hex.bytes"" , ""true"" , & cb_hex_bytes , ""Show bytes column in hexdump"" )"	3309:1:111354:111428	4078290	477	True				
ANR	4083927	CallExpression	"SETCB ( ""hex.bytes"" , ""true"" , & cb_hex_bytes , ""Show bytes column in hexdump"" )"		4078290	0					
ANR	4083928	Callee	SETCB		4078290	0					
ANR	4083929	Identifier	SETCB		4078290	0					
ANR	4083930	ArgumentList	"""hex.bytes"""		4078290	1					
ANR	4083931	Argument	"""hex.bytes"""		4078290	0					
ANR	4083932	PrimaryExpression	"""hex.bytes"""		4078290	0					
ANR	4083933	Argument	"""true"""		4078290	1					
ANR	4083934	PrimaryExpression	"""true"""		4078290	0					
ANR	4083935	Argument	& cb_hex_bytes		4078290	2					
ANR	4083936	UnaryOperationExpression	& cb_hex_bytes		4078290	0					
ANR	4083937	UnaryOperator	&		4078290	0					
ANR	4083938	Identifier	cb_hex_bytes		4078290	1					
ANR	4083939	Argument	"""Show bytes column in hexdump"""		4078290	3					
ANR	4083940	PrimaryExpression	"""Show bytes column in hexdump"""		4078290	0					
ANR	4083941	ExpressionStatement	"SETCB ( ""hex.ascii"" , ""true"" , & cb_hex_ascii , ""Show ascii column in hexdump"" )"	3310:1:111431:111505	4078290	478	True				
ANR	4083942	CallExpression	"SETCB ( ""hex.ascii"" , ""true"" , & cb_hex_ascii , ""Show ascii column in hexdump"" )"		4078290	0					
ANR	4083943	Callee	SETCB		4078290	0					
ANR	4083944	Identifier	SETCB		4078290	0					
ANR	4083945	ArgumentList	"""hex.ascii"""		4078290	1					
ANR	4083946	Argument	"""hex.ascii"""		4078290	0					
ANR	4083947	PrimaryExpression	"""hex.ascii"""		4078290	0					
ANR	4083948	Argument	"""true"""		4078290	1					
ANR	4083949	PrimaryExpression	"""true"""		4078290	0					
ANR	4083950	Argument	& cb_hex_ascii		4078290	2					
ANR	4083951	UnaryOperationExpression	& cb_hex_ascii		4078290	0					
ANR	4083952	UnaryOperator	&		4078290	0					
ANR	4083953	Identifier	cb_hex_ascii		4078290	1					
ANR	4083954	Argument	"""Show ascii column in hexdump"""		4078290	3					
ANR	4083955	PrimaryExpression	"""Show ascii column in hexdump"""		4078290	0					
ANR	4083956	ExpressionStatement	"SETCB ( ""hex.hdroff"" , ""false"" , & cb_hex_hdroff , ""Show aligned 1 byte in header instead of delta nibble"" )"	3311:1:111508:111610	4078290	479	True				
ANR	4083957	CallExpression	"SETCB ( ""hex.hdroff"" , ""false"" , & cb_hex_hdroff , ""Show aligned 1 byte in header instead of delta nibble"" )"		4078290	0					
ANR	4083958	Callee	SETCB		4078290	0					
ANR	4083959	Identifier	SETCB		4078290	0					
ANR	4083960	ArgumentList	"""hex.hdroff"""		4078290	1					
ANR	4083961	Argument	"""hex.hdroff"""		4078290	0					
ANR	4083962	PrimaryExpression	"""hex.hdroff"""		4078290	0					
ANR	4083963	Argument	"""false"""		4078290	1					
ANR	4083964	PrimaryExpression	"""false"""		4078290	0					
ANR	4083965	Argument	& cb_hex_hdroff		4078290	2					
ANR	4083966	UnaryOperationExpression	& cb_hex_hdroff		4078290	0					
ANR	4083967	UnaryOperator	&		4078290	0					
ANR	4083968	Identifier	cb_hex_hdroff		4078290	1					
ANR	4083969	Argument	"""Show aligned 1 byte in header instead of delta nibble"""		4078290	3					
ANR	4083970	PrimaryExpression	"""Show aligned 1 byte in header instead of delta nibble"""		4078290	0					
ANR	4083971	ExpressionStatement	"SETCB ( ""hex.style"" , ""false"" , & cb_hex_style , ""Improve the hexdump header style"" )"	3312:1:111613:111692	4078290	480	True				
ANR	4083972	CallExpression	"SETCB ( ""hex.style"" , ""false"" , & cb_hex_style , ""Improve the hexdump header style"" )"		4078290	0					
ANR	4083973	Callee	SETCB		4078290	0					
ANR	4083974	Identifier	SETCB		4078290	0					
ANR	4083975	ArgumentList	"""hex.style"""		4078290	1					
ANR	4083976	Argument	"""hex.style"""		4078290	0					
ANR	4083977	PrimaryExpression	"""hex.style"""		4078290	0					
ANR	4083978	Argument	"""false"""		4078290	1					
ANR	4083979	PrimaryExpression	"""false"""		4078290	0					
ANR	4083980	Argument	& cb_hex_style		4078290	2					
ANR	4083981	UnaryOperationExpression	& cb_hex_style		4078290	0					
ANR	4083982	UnaryOperator	&		4078290	0					
ANR	4083983	Identifier	cb_hex_style		4078290	1					
ANR	4083984	Argument	"""Improve the hexdump header style"""		4078290	3					
ANR	4083985	PrimaryExpression	"""Improve the hexdump header style"""		4078290	0					
ANR	4083986	ExpressionStatement	"SETCB ( ""hex.pairs"" , ""true"" , & cb_hex_pairs , ""Show bytes paired in 'px' hexdump"" )"	3313:1:111695:111774	4078290	481	True				
ANR	4083987	CallExpression	"SETCB ( ""hex.pairs"" , ""true"" , & cb_hex_pairs , ""Show bytes paired in 'px' hexdump"" )"		4078290	0					
ANR	4083988	Callee	SETCB		4078290	0					
ANR	4083989	Identifier	SETCB		4078290	0					
ANR	4083990	ArgumentList	"""hex.pairs"""		4078290	1					
ANR	4083991	Argument	"""hex.pairs"""		4078290	0					
ANR	4083992	PrimaryExpression	"""hex.pairs"""		4078290	0					
ANR	4083993	Argument	"""true"""		4078290	1					
ANR	4083994	PrimaryExpression	"""true"""		4078290	0					
ANR	4083995	Argument	& cb_hex_pairs		4078290	2					
ANR	4083996	UnaryOperationExpression	& cb_hex_pairs		4078290	0					
ANR	4083997	UnaryOperator	&		4078290	0					
ANR	4083998	Identifier	cb_hex_pairs		4078290	1					
ANR	4083999	Argument	"""Show bytes paired in 'px' hexdump"""		4078290	3					
ANR	4084000	PrimaryExpression	"""Show bytes paired in 'px' hexdump"""		4078290	0					
ANR	4084001	ExpressionStatement	"SETCB ( ""hex.align"" , ""false"" , & cb_hex_align , ""Align hexdump with flag + flagsize"" )"	3314:1:111777:111858	4078290	482	True				
ANR	4084002	CallExpression	"SETCB ( ""hex.align"" , ""false"" , & cb_hex_align , ""Align hexdump with flag + flagsize"" )"		4078290	0					
ANR	4084003	Callee	SETCB		4078290	0					
ANR	4084004	Identifier	SETCB		4078290	0					
ANR	4084005	ArgumentList	"""hex.align"""		4078290	1					
ANR	4084006	Argument	"""hex.align"""		4078290	0					
ANR	4084007	PrimaryExpression	"""hex.align"""		4078290	0					
ANR	4084008	Argument	"""false"""		4078290	1					
ANR	4084009	PrimaryExpression	"""false"""		4078290	0					
ANR	4084010	Argument	& cb_hex_align		4078290	2					
ANR	4084011	UnaryOperationExpression	& cb_hex_align		4078290	0					
ANR	4084012	UnaryOperator	&		4078290	0					
ANR	4084013	Identifier	cb_hex_align		4078290	1					
ANR	4084014	Argument	"""Align hexdump with flag + flagsize"""		4078290	3					
ANR	4084015	PrimaryExpression	"""Align hexdump with flag + flagsize"""		4078290	0					
ANR	4084016	ExpressionStatement	"SETCB ( ""hex.section"" , ""false"" , & cb_hex_section , ""Show section name before the offset"" )"	3315:1:111861:111947	4078290	483	True				
ANR	4084017	CallExpression	"SETCB ( ""hex.section"" , ""false"" , & cb_hex_section , ""Show section name before the offset"" )"		4078290	0					
ANR	4084018	Callee	SETCB		4078290	0					
ANR	4084019	Identifier	SETCB		4078290	0					
ANR	4084020	ArgumentList	"""hex.section"""		4078290	1					
ANR	4084021	Argument	"""hex.section"""		4078290	0					
ANR	4084022	PrimaryExpression	"""hex.section"""		4078290	0					
ANR	4084023	Argument	"""false"""		4078290	1					
ANR	4084024	PrimaryExpression	"""false"""		4078290	0					
ANR	4084025	Argument	& cb_hex_section		4078290	2					
ANR	4084026	UnaryOperationExpression	& cb_hex_section		4078290	0					
ANR	4084027	UnaryOperator	&		4078290	0					
ANR	4084028	Identifier	cb_hex_section		4078290	1					
ANR	4084029	Argument	"""Show section name before the offset"""		4078290	3					
ANR	4084030	PrimaryExpression	"""Show section name before the offset"""		4078290	0					
ANR	4084031	ExpressionStatement	"SETCB ( ""io.unalloc"" , ""false"" , & cb_io_unalloc , ""Check each byte if it's allocated"" )"	3316:1:111950:112032	4078290	484	True				
ANR	4084032	CallExpression	"SETCB ( ""io.unalloc"" , ""false"" , & cb_io_unalloc , ""Check each byte if it's allocated"" )"		4078290	0					
ANR	4084033	Callee	SETCB		4078290	0					
ANR	4084034	Identifier	SETCB		4078290	0					
ANR	4084035	ArgumentList	"""io.unalloc"""		4078290	1					
ANR	4084036	Argument	"""io.unalloc"""		4078290	0					
ANR	4084037	PrimaryExpression	"""io.unalloc"""		4078290	0					
ANR	4084038	Argument	"""false"""		4078290	1					
ANR	4084039	PrimaryExpression	"""false"""		4078290	0					
ANR	4084040	Argument	& cb_io_unalloc		4078290	2					
ANR	4084041	UnaryOperationExpression	& cb_io_unalloc		4078290	0					
ANR	4084042	UnaryOperator	&		4078290	0					
ANR	4084043	Identifier	cb_io_unalloc		4078290	1					
ANR	4084044	Argument	"""Check each byte if it's allocated"""		4078290	3					
ANR	4084045	PrimaryExpression	"""Check each byte if it's allocated"""		4078290	0					
ANR	4084046	ExpressionStatement	"SETCB ( ""io.unalloc.ch"" , ""."" , & cb_io_unalloc_ch , ""Hexdump char if byte is unallocated"" )"	3317:1:112035:112121	4078290	485	True				
ANR	4084047	CallExpression	"SETCB ( ""io.unalloc.ch"" , ""."" , & cb_io_unalloc_ch , ""Hexdump char if byte is unallocated"" )"		4078290	0					
ANR	4084048	Callee	SETCB		4078290	0					
ANR	4084049	Identifier	SETCB		4078290	0					
ANR	4084050	ArgumentList	"""io.unalloc.ch"""		4078290	1					
ANR	4084051	Argument	"""io.unalloc.ch"""		4078290	0					
ANR	4084052	PrimaryExpression	"""io.unalloc.ch"""		4078290	0					
ANR	4084053	Argument	"""."""		4078290	1					
ANR	4084054	PrimaryExpression	"""."""		4078290	0					
ANR	4084055	Argument	& cb_io_unalloc_ch		4078290	2					
ANR	4084056	UnaryOperationExpression	& cb_io_unalloc_ch		4078290	0					
ANR	4084057	UnaryOperator	&		4078290	0					
ANR	4084058	Identifier	cb_io_unalloc_ch		4078290	1					
ANR	4084059	Argument	"""Hexdump char if byte is unallocated"""		4078290	3					
ANR	4084060	PrimaryExpression	"""Hexdump char if byte is unallocated"""		4078290	0					
ANR	4084061	ExpressionStatement	"SETCB ( ""hex.compact"" , ""false"" , & cb_hexcompact , ""Show smallest 16 byte col hexdump (60 columns)"" )"	3318:1:112124:112220	4078290	486	True				
ANR	4084062	CallExpression	"SETCB ( ""hex.compact"" , ""false"" , & cb_hexcompact , ""Show smallest 16 byte col hexdump (60 columns)"" )"		4078290	0					
ANR	4084063	Callee	SETCB		4078290	0					
ANR	4084064	Identifier	SETCB		4078290	0					
ANR	4084065	ArgumentList	"""hex.compact"""		4078290	1					
ANR	4084066	Argument	"""hex.compact"""		4078290	0					
ANR	4084067	PrimaryExpression	"""hex.compact"""		4078290	0					
ANR	4084068	Argument	"""false"""		4078290	1					
ANR	4084069	PrimaryExpression	"""false"""		4078290	0					
ANR	4084070	Argument	& cb_hexcompact		4078290	2					
ANR	4084071	UnaryOperationExpression	& cb_hexcompact		4078290	0					
ANR	4084072	UnaryOperator	&		4078290	0					
ANR	4084073	Identifier	cb_hexcompact		4078290	1					
ANR	4084074	Argument	"""Show smallest 16 byte col hexdump (60 columns)"""		4078290	3					
ANR	4084075	PrimaryExpression	"""Show smallest 16 byte col hexdump (60 columns)"""		4078290	0					
ANR	4084076	ExpressionStatement	"SETCB ( ""cmd.hexcursor"" , """" , & cb_cmd_hexcursor , ""If set and cursor is enabled display given pf format string"" )"	3319:1:112223:112332	4078290	487	True				
ANR	4084077	CallExpression	"SETCB ( ""cmd.hexcursor"" , """" , & cb_cmd_hexcursor , ""If set and cursor is enabled display given pf format string"" )"		4078290	0					
ANR	4084078	Callee	SETCB		4078290	0					
ANR	4084079	Identifier	SETCB		4078290	0					
ANR	4084080	ArgumentList	"""cmd.hexcursor"""		4078290	1					
ANR	4084081	Argument	"""cmd.hexcursor"""		4078290	0					
ANR	4084082	PrimaryExpression	"""cmd.hexcursor"""		4078290	0					
ANR	4084083	Argument	""""""		4078290	1					
ANR	4084084	PrimaryExpression	""""""		4078290	0					
ANR	4084085	Argument	& cb_cmd_hexcursor		4078290	2					
ANR	4084086	UnaryOperationExpression	& cb_cmd_hexcursor		4078290	0					
ANR	4084087	UnaryOperator	&		4078290	0					
ANR	4084088	Identifier	cb_cmd_hexcursor		4078290	1					
ANR	4084089	Argument	"""If set and cursor is enabled display given pf format string"""		4078290	3					
ANR	4084090	PrimaryExpression	"""If set and cursor is enabled display given pf format string"""		4078290	0					
ANR	4084091	ExpressionStatement	"SETI ( ""hex.flagsz"" , 0 , ""If non zero, overrides the flag size in pxa"" )"	3320:1:112335:112404	4078290	488	True				
ANR	4084092	CallExpression	"SETI ( ""hex.flagsz"" , 0 , ""If non zero, overrides the flag size in pxa"" )"		4078290	0					
ANR	4084093	Callee	SETI		4078290	0					
ANR	4084094	Identifier	SETI		4078290	0					
ANR	4084095	ArgumentList	"""hex.flagsz"""		4078290	1					
ANR	4084096	Argument	"""hex.flagsz"""		4078290	0					
ANR	4084097	PrimaryExpression	"""hex.flagsz"""		4078290	0					
ANR	4084098	Argument	0		4078290	1					
ANR	4084099	PrimaryExpression	0		4078290	0					
ANR	4084100	Argument	"""If non zero, overrides the flag size in pxa"""		4078290	2					
ANR	4084101	PrimaryExpression	"""If non zero, overrides the flag size in pxa"""		4078290	0					
ANR	4084102	ExpressionStatement	"SETICB ( ""hex.cols"" , 16 , & cb_hexcols , ""Number of columns in hexdump"" )"	3321:1:112407:112475	4078290	489	True				
ANR	4084103	CallExpression	"SETICB ( ""hex.cols"" , 16 , & cb_hexcols , ""Number of columns in hexdump"" )"		4078290	0					
ANR	4084104	Callee	SETICB		4078290	0					
ANR	4084105	Identifier	SETICB		4078290	0					
ANR	4084106	ArgumentList	"""hex.cols"""		4078290	1					
ANR	4084107	Argument	"""hex.cols"""		4078290	0					
ANR	4084108	PrimaryExpression	"""hex.cols"""		4078290	0					
ANR	4084109	Argument	16		4078290	1					
ANR	4084110	PrimaryExpression	16		4078290	0					
ANR	4084111	Argument	& cb_hexcols		4078290	2					
ANR	4084112	UnaryOperationExpression	& cb_hexcols		4078290	0					
ANR	4084113	UnaryOperator	&		4078290	0					
ANR	4084114	Identifier	cb_hexcols		4078290	1					
ANR	4084115	Argument	"""Number of columns in hexdump"""		4078290	3					
ANR	4084116	PrimaryExpression	"""Number of columns in hexdump"""		4078290	0					
ANR	4084117	ExpressionStatement	"SETI ( ""hex.depth"" , 5 , ""Maximal level of recurrence while telescoping memory"" )"	3322:1:112478:112555	4078290	490	True				
ANR	4084118	CallExpression	"SETI ( ""hex.depth"" , 5 , ""Maximal level of recurrence while telescoping memory"" )"		4078290	0					
ANR	4084119	Callee	SETI		4078290	0					
ANR	4084120	Identifier	SETI		4078290	0					
ANR	4084121	ArgumentList	"""hex.depth"""		4078290	1					
ANR	4084122	Argument	"""hex.depth"""		4078290	0					
ANR	4084123	PrimaryExpression	"""hex.depth"""		4078290	0					
ANR	4084124	Argument	5		4078290	1					
ANR	4084125	PrimaryExpression	5		4078290	0					
ANR	4084126	Argument	"""Maximal level of recurrence while telescoping memory"""		4078290	2					
ANR	4084127	PrimaryExpression	"""Maximal level of recurrence while telescoping memory"""		4078290	0					
ANR	4084128	ExpressionStatement	"SETPREF ( ""hex.onechar"" , ""false"" , ""Number of columns in hexdump"" )"	3323:1:112558:112622	4078290	491	True				
ANR	4084129	CallExpression	"SETPREF ( ""hex.onechar"" , ""false"" , ""Number of columns in hexdump"" )"		4078290	0					
ANR	4084130	Callee	SETPREF		4078290	0					
ANR	4084131	Identifier	SETPREF		4078290	0					
ANR	4084132	ArgumentList	"""hex.onechar"""		4078290	1					
ANR	4084133	Argument	"""hex.onechar"""		4078290	0					
ANR	4084134	PrimaryExpression	"""hex.onechar"""		4078290	0					
ANR	4084135	Argument	"""false"""		4078290	1					
ANR	4084136	PrimaryExpression	"""false"""		4078290	0					
ANR	4084137	Argument	"""Number of columns in hexdump"""		4078290	2					
ANR	4084138	PrimaryExpression	"""Number of columns in hexdump"""		4078290	0					
ANR	4084139	ExpressionStatement	"SETICB ( ""hex.stride"" , 0 , & cb_hexstride , ""Line stride in hexdump (default is 0)"" )"	3324:1:112625:112705	4078290	492	True				
ANR	4084140	CallExpression	"SETICB ( ""hex.stride"" , 0 , & cb_hexstride , ""Line stride in hexdump (default is 0)"" )"		4078290	0					
ANR	4084141	Callee	SETICB		4078290	0					
ANR	4084142	Identifier	SETICB		4078290	0					
ANR	4084143	ArgumentList	"""hex.stride"""		4078290	1					
ANR	4084144	Argument	"""hex.stride"""		4078290	0					
ANR	4084145	PrimaryExpression	"""hex.stride"""		4078290	0					
ANR	4084146	Argument	0		4078290	1					
ANR	4084147	PrimaryExpression	0		4078290	0					
ANR	4084148	Argument	& cb_hexstride		4078290	2					
ANR	4084149	UnaryOperationExpression	& cb_hexstride		4078290	0					
ANR	4084150	UnaryOperator	&		4078290	0					
ANR	4084151	Identifier	cb_hexstride		4078290	1					
ANR	4084152	Argument	"""Line stride in hexdump (default is 0)"""		4078290	3					
ANR	4084153	PrimaryExpression	"""Line stride in hexdump (default is 0)"""		4078290	0					
ANR	4084154	ExpressionStatement	"SETCB ( ""hex.comments"" , ""true"" , & cb_hexcomments , ""Show comments in 'px' hexdump"" )"	3325:1:112708:112788	4078290	493	True				
ANR	4084155	CallExpression	"SETCB ( ""hex.comments"" , ""true"" , & cb_hexcomments , ""Show comments in 'px' hexdump"" )"		4078290	0					
ANR	4084156	Callee	SETCB		4078290	0					
ANR	4084157	Identifier	SETCB		4078290	0					
ANR	4084158	ArgumentList	"""hex.comments"""		4078290	1					
ANR	4084159	Argument	"""hex.comments"""		4078290	0					
ANR	4084160	PrimaryExpression	"""hex.comments"""		4078290	0					
ANR	4084161	Argument	"""true"""		4078290	1					
ANR	4084162	PrimaryExpression	"""true"""		4078290	0					
ANR	4084163	Argument	& cb_hexcomments		4078290	2					
ANR	4084164	UnaryOperationExpression	& cb_hexcomments		4078290	0					
ANR	4084165	UnaryOperator	&		4078290	0					
ANR	4084166	Identifier	cb_hexcomments		4078290	1					
ANR	4084167	Argument	"""Show comments in 'px' hexdump"""		4078290	3					
ANR	4084168	PrimaryExpression	"""Show comments in 'px' hexdump"""		4078290	0					
ANR	4084169	ExpressionStatement	"SETPREF ( ""http.log"" , ""true"" , ""Show HTTP requests processed"" )"	3328:1:112804:112864	4078290	494	True				
ANR	4084170	CallExpression	"SETPREF ( ""http.log"" , ""true"" , ""Show HTTP requests processed"" )"		4078290	0					
ANR	4084171	Callee	SETPREF		4078290	0					
ANR	4084172	Identifier	SETPREF		4078290	0					
ANR	4084173	ArgumentList	"""http.log"""		4078290	1					
ANR	4084174	Argument	"""http.log"""		4078290	0					
ANR	4084175	PrimaryExpression	"""http.log"""		4078290	0					
ANR	4084176	Argument	"""true"""		4078290	1					
ANR	4084177	PrimaryExpression	"""true"""		4078290	0					
ANR	4084178	Argument	"""Show HTTP requests processed"""		4078290	2					
ANR	4084179	PrimaryExpression	"""Show HTTP requests processed"""		4078290	0					
ANR	4084180	ExpressionStatement	"SETPREF ( ""http.sync"" , """" , ""Remote HTTP server to sync events with"" )"	3329:1:112867:112934	4078290	495	True				
ANR	4084181	CallExpression	"SETPREF ( ""http.sync"" , """" , ""Remote HTTP server to sync events with"" )"		4078290	0					
ANR	4084182	Callee	SETPREF		4078290	0					
ANR	4084183	Identifier	SETPREF		4078290	0					
ANR	4084184	ArgumentList	"""http.sync"""		4078290	1					
ANR	4084185	Argument	"""http.sync"""		4078290	0					
ANR	4084186	PrimaryExpression	"""http.sync"""		4078290	0					
ANR	4084187	Argument	""""""		4078290	1					
ANR	4084188	PrimaryExpression	""""""		4078290	0					
ANR	4084189	Argument	"""Remote HTTP server to sync events with"""		4078290	2					
ANR	4084190	PrimaryExpression	"""Remote HTTP server to sync events with"""		4078290	0					
ANR	4084191	ExpressionStatement	"SETPREF ( ""http.colon"" , ""false"" , ""Only accept the : command"" )"	3330:1:112937:112997	4078290	496	True				
ANR	4084192	CallExpression	"SETPREF ( ""http.colon"" , ""false"" , ""Only accept the : command"" )"		4078290	0					
ANR	4084193	Callee	SETPREF		4078290	0					
ANR	4084194	Identifier	SETPREF		4078290	0					
ANR	4084195	ArgumentList	"""http.colon"""		4078290	1					
ANR	4084196	Argument	"""http.colon"""		4078290	0					
ANR	4084197	PrimaryExpression	"""http.colon"""		4078290	0					
ANR	4084198	Argument	"""false"""		4078290	1					
ANR	4084199	PrimaryExpression	"""false"""		4078290	0					
ANR	4084200	Argument	"""Only accept the : command"""		4078290	2					
ANR	4084201	PrimaryExpression	"""Only accept the : command"""		4078290	0					
ANR	4084202	ExpressionStatement	"SETPREF ( ""http.logfile"" , """" , ""Specify a log file instead of stderr for http requests"" )"	3331:1:113000:113086	4078290	497	True				
ANR	4084203	CallExpression	"SETPREF ( ""http.logfile"" , """" , ""Specify a log file instead of stderr for http requests"" )"		4078290	0					
ANR	4084204	Callee	SETPREF		4078290	0					
ANR	4084205	Identifier	SETPREF		4078290	0					
ANR	4084206	ArgumentList	"""http.logfile"""		4078290	1					
ANR	4084207	Argument	"""http.logfile"""		4078290	0					
ANR	4084208	PrimaryExpression	"""http.logfile"""		4078290	0					
ANR	4084209	Argument	""""""		4078290	1					
ANR	4084210	PrimaryExpression	""""""		4078290	0					
ANR	4084211	Argument	"""Specify a log file instead of stderr for http requests"""		4078290	2					
ANR	4084212	PrimaryExpression	"""Specify a log file instead of stderr for http requests"""		4078290	0					
ANR	4084213	ExpressionStatement	"SETPREF ( ""http.cors"" , ""false"" , ""Enable CORS"" )"	3332:1:113089:113134	4078290	498	True				
ANR	4084214	CallExpression	"SETPREF ( ""http.cors"" , ""false"" , ""Enable CORS"" )"		4078290	0					
ANR	4084215	Callee	SETPREF		4078290	0					
ANR	4084216	Identifier	SETPREF		4078290	0					
ANR	4084217	ArgumentList	"""http.cors"""		4078290	1					
ANR	4084218	Argument	"""http.cors"""		4078290	0					
ANR	4084219	PrimaryExpression	"""http.cors"""		4078290	0					
ANR	4084220	Argument	"""false"""		4078290	1					
ANR	4084221	PrimaryExpression	"""false"""		4078290	0					
ANR	4084222	Argument	"""Enable CORS"""		4078290	2					
ANR	4084223	PrimaryExpression	"""Enable CORS"""		4078290	0					
ANR	4084224	ExpressionStatement	"SETPREF ( ""http.referer"" , """" , ""CSFR protection if set"" )"	3333:1:113137:113191	4078290	499	True				
ANR	4084225	CallExpression	"SETPREF ( ""http.referer"" , """" , ""CSFR protection if set"" )"		4078290	0					
ANR	4084226	Callee	SETPREF		4078290	0					
ANR	4084227	Identifier	SETPREF		4078290	0					
ANR	4084228	ArgumentList	"""http.referer"""		4078290	1					
ANR	4084229	Argument	"""http.referer"""		4078290	0					
ANR	4084230	PrimaryExpression	"""http.referer"""		4078290	0					
ANR	4084231	Argument	""""""		4078290	1					
ANR	4084232	PrimaryExpression	""""""		4078290	0					
ANR	4084233	Argument	"""CSFR protection if set"""		4078290	2					
ANR	4084234	PrimaryExpression	"""CSFR protection if set"""		4078290	0					
ANR	4084235	ExpressionStatement	"SETPREF ( ""http.dirlist"" , ""false"" , ""Enable directory listing"" )"	3334:1:113194:113255	4078290	500	True				
ANR	4084236	CallExpression	"SETPREF ( ""http.dirlist"" , ""false"" , ""Enable directory listing"" )"		4078290	0					
ANR	4084237	Callee	SETPREF		4078290	0					
ANR	4084238	Identifier	SETPREF		4078290	0					
ANR	4084239	ArgumentList	"""http.dirlist"""		4078290	1					
ANR	4084240	Argument	"""http.dirlist"""		4078290	0					
ANR	4084241	PrimaryExpression	"""http.dirlist"""		4078290	0					
ANR	4084242	Argument	"""false"""		4078290	1					
ANR	4084243	PrimaryExpression	"""false"""		4078290	0					
ANR	4084244	Argument	"""Enable directory listing"""		4078290	2					
ANR	4084245	PrimaryExpression	"""Enable directory listing"""		4078290	0					
ANR	4084246	ExpressionStatement	"SETPREF ( ""http.allow"" , """" , ""Only accept clients from the comma separated IP list"" )"	3335:1:113258:113340	4078290	501	True				
ANR	4084247	CallExpression	"SETPREF ( ""http.allow"" , """" , ""Only accept clients from the comma separated IP list"" )"		4078290	0					
ANR	4084248	Callee	SETPREF		4078290	0					
ANR	4084249	Identifier	SETPREF		4078290	0					
ANR	4084250	ArgumentList	"""http.allow"""		4078290	1					
ANR	4084251	Argument	"""http.allow"""		4078290	0					
ANR	4084252	PrimaryExpression	"""http.allow"""		4078290	0					
ANR	4084253	Argument	""""""		4078290	1					
ANR	4084254	PrimaryExpression	""""""		4078290	0					
ANR	4084255	Argument	"""Only accept clients from the comma separated IP list"""		4078290	2					
ANR	4084256	PrimaryExpression	"""Only accept clients from the comma separated IP list"""		4078290	0					
ANR	4084257	ExpressionStatement	"r_config_set ( cfg , ""http.browser"" , ""start"" )"	3337:1:113359:113402	4078290	502	True				
ANR	4084258	CallExpression	"r_config_set ( cfg , ""http.browser"" , ""start"" )"		4078290	0					
ANR	4084259	Callee	r_config_set		4078290	0					
ANR	4084260	Identifier	r_config_set		4078290	0					
ANR	4084261	ArgumentList	cfg		4078290	1					
ANR	4084262	Argument	cfg		4078290	0					
ANR	4084263	Identifier	cfg		4078290	0					
ANR	4084264	Argument	"""http.browser"""		4078290	1					
ANR	4084265	PrimaryExpression	"""http.browser"""		4078290	0					
ANR	4084266	Argument	"""start"""		4078290	2					
ANR	4084267	PrimaryExpression	"""start"""		4078290	0					
ANR	4084268	ExpressionStatement	"SETI ( ""http.maxsize"" , 0 , ""Maximum file size for upload"" )"	3353:1:114028:114084	4078290	503	True				
ANR	4084269	CallExpression	"SETI ( ""http.maxsize"" , 0 , ""Maximum file size for upload"" )"		4078290	0					
ANR	4084270	Callee	SETI		4078290	0					
ANR	4084271	Identifier	SETI		4078290	0					
ANR	4084272	ArgumentList	"""http.maxsize"""		4078290	1					
ANR	4084273	Argument	"""http.maxsize"""		4078290	0					
ANR	4084274	PrimaryExpression	"""http.maxsize"""		4078290	0					
ANR	4084275	Argument	0		4078290	1					
ANR	4084276	PrimaryExpression	0		4078290	0					
ANR	4084277	Argument	"""Maximum file size for upload"""		4078290	2					
ANR	4084278	PrimaryExpression	"""Maximum file size for upload"""		4078290	0					
ANR	4084279	ExpressionStatement	"SETPREF ( ""http.index"" , ""index.html"" , ""Main html file to check in directory"" )"	3354:1:114087:114163	4078290	504	True				
ANR	4084280	CallExpression	"SETPREF ( ""http.index"" , ""index.html"" , ""Main html file to check in directory"" )"		4078290	0					
ANR	4084281	Callee	SETPREF		4078290	0					
ANR	4084282	Identifier	SETPREF		4078290	0					
ANR	4084283	ArgumentList	"""http.index"""		4078290	1					
ANR	4084284	Argument	"""http.index"""		4078290	0					
ANR	4084285	PrimaryExpression	"""http.index"""		4078290	0					
ANR	4084286	Argument	"""index.html"""		4078290	1					
ANR	4084287	PrimaryExpression	"""index.html"""		4078290	0					
ANR	4084288	Argument	"""Main html file to check in directory"""		4078290	2					
ANR	4084289	PrimaryExpression	"""Main html file to check in directory"""		4078290	0					
ANR	4084290	ExpressionStatement	"SETPREF ( ""http.bind"" , ""localhost"" , ""Server address"" )"	3355:1:114166:114218	4078290	505	True				
ANR	4084291	CallExpression	"SETPREF ( ""http.bind"" , ""localhost"" , ""Server address"" )"		4078290	0					
ANR	4084292	Callee	SETPREF		4078290	0					
ANR	4084293	Identifier	SETPREF		4078290	0					
ANR	4084294	ArgumentList	"""http.bind"""		4078290	1					
ANR	4084295	Argument	"""http.bind"""		4078290	0					
ANR	4084296	PrimaryExpression	"""http.bind"""		4078290	0					
ANR	4084297	Argument	"""localhost"""		4078290	1					
ANR	4084298	PrimaryExpression	"""localhost"""		4078290	0					
ANR	4084299	Argument	"""Server address"""		4078290	2					
ANR	4084300	PrimaryExpression	"""Server address"""		4078290	0					
ANR	4084301	ExpressionStatement	"SETPREF ( ""http.homeroot"" , R_JOIN_2_PATHS ( ""~"" , R2_HOME_WWWROOT ) , ""http home root directory"" )"	3356:1:114221:114313	4078290	506	True				
ANR	4084302	CallExpression	"SETPREF ( ""http.homeroot"" , R_JOIN_2_PATHS ( ""~"" , R2_HOME_WWWROOT ) , ""http home root directory"" )"		4078290	0					
ANR	4084303	Callee	SETPREF		4078290	0					
ANR	4084304	Identifier	SETPREF		4078290	0					
ANR	4084305	ArgumentList	"""http.homeroot"""		4078290	1					
ANR	4084306	Argument	"""http.homeroot"""		4078290	0					
ANR	4084307	PrimaryExpression	"""http.homeroot"""		4078290	0					
ANR	4084308	Argument	"R_JOIN_2_PATHS ( ""~"" , R2_HOME_WWWROOT )"		4078290	1					
ANR	4084309	CallExpression	"R_JOIN_2_PATHS ( ""~"" , R2_HOME_WWWROOT )"		4078290	0					
ANR	4084310	Callee	R_JOIN_2_PATHS		4078290	0					
ANR	4084311	Identifier	R_JOIN_2_PATHS		4078290	0					
ANR	4084312	ArgumentList	"""~"""		4078290	1					
ANR	4084313	Argument	"""~"""		4078290	0					
ANR	4084314	PrimaryExpression	"""~"""		4078290	0					
ANR	4084315	Argument	R2_HOME_WWWROOT		4078290	1					
ANR	4084316	Identifier	R2_HOME_WWWROOT		4078290	0					
ANR	4084317	Argument	"""http home root directory"""		4078290	2					
ANR	4084318	PrimaryExpression	"""http home root directory"""		4078290	0					
ANR	4084319	ExpressionStatement	"SETPREF ( ""http.root"" , ""/data/data/org.radare.radare2installer/www"" , ""http root directory"" )"	3358:1:114332:114422	4078290	507	True				
ANR	4084320	CallExpression	"SETPREF ( ""http.root"" , ""/data/data/org.radare.radare2installer/www"" , ""http root directory"" )"		4078290	0					
ANR	4084321	Callee	SETPREF		4078290	0					
ANR	4084322	Identifier	SETPREF		4078290	0					
ANR	4084323	ArgumentList	"""http.root"""		4078290	1					
ANR	4084324	Argument	"""http.root"""		4078290	0					
ANR	4084325	PrimaryExpression	"""http.root"""		4078290	0					
ANR	4084326	Argument	"""/data/data/org.radare.radare2installer/www"""		4078290	1					
ANR	4084327	PrimaryExpression	"""/data/data/org.radare.radare2installer/www"""		4078290	0					
ANR	4084328	Argument	"""http root directory"""		4078290	2					
ANR	4084329	PrimaryExpression	"""http root directory"""		4078290	0					
ANR	4084330	ExpressionStatement	"SETPREF ( ""http.port"" , ""9090"" , ""HTTP server port"" )"	3362:1:114497:114546	4078290	508	True				
ANR	4084331	CallExpression	"SETPREF ( ""http.port"" , ""9090"" , ""HTTP server port"" )"		4078290	0					
ANR	4084332	Callee	SETPREF		4078290	0					
ANR	4084333	Identifier	SETPREF		4078290	0					
ANR	4084334	ArgumentList	"""http.port"""		4078290	1					
ANR	4084335	Argument	"""http.port"""		4078290	0					
ANR	4084336	PrimaryExpression	"""http.port"""		4078290	0					
ANR	4084337	Argument	"""9090"""		4078290	1					
ANR	4084338	PrimaryExpression	"""9090"""		4078290	0					
ANR	4084339	Argument	"""HTTP server port"""		4078290	2					
ANR	4084340	PrimaryExpression	"""HTTP server port"""		4078290	0					
ANR	4084341	ExpressionStatement	"SETPREF ( ""http.maxport"" , ""9999"" , ""Last HTTP server port"" )"	3363:1:114549:114606	4078290	509	True				
ANR	4084342	CallExpression	"SETPREF ( ""http.maxport"" , ""9999"" , ""Last HTTP server port"" )"		4078290	0					
ANR	4084343	Callee	SETPREF		4078290	0					
ANR	4084344	Identifier	SETPREF		4078290	0					
ANR	4084345	ArgumentList	"""http.maxport"""		4078290	1					
ANR	4084346	Argument	"""http.maxport"""		4078290	0					
ANR	4084347	PrimaryExpression	"""http.maxport"""		4078290	0					
ANR	4084348	Argument	"""9999"""		4078290	1					
ANR	4084349	PrimaryExpression	"""9999"""		4078290	0					
ANR	4084350	Argument	"""Last HTTP server port"""		4078290	2					
ANR	4084351	PrimaryExpression	"""Last HTTP server port"""		4078290	0					
ANR	4084352	ExpressionStatement	"SETPREF ( ""http.ui"" , ""m"" , ""Default webui (enyo, m, p, t)"" )"	3364:1:114609:114666	4078290	510	True				
ANR	4084353	CallExpression	"SETPREF ( ""http.ui"" , ""m"" , ""Default webui (enyo, m, p, t)"" )"		4078290	0					
ANR	4084354	Callee	SETPREF		4078290	0					
ANR	4084355	Identifier	SETPREF		4078290	0					
ANR	4084356	ArgumentList	"""http.ui"""		4078290	1					
ANR	4084357	Argument	"""http.ui"""		4078290	0					
ANR	4084358	PrimaryExpression	"""http.ui"""		4078290	0					
ANR	4084359	Argument	"""m"""		4078290	1					
ANR	4084360	PrimaryExpression	"""m"""		4078290	0					
ANR	4084361	Argument	"""Default webui (enyo, m, p, t)"""		4078290	2					
ANR	4084362	PrimaryExpression	"""Default webui (enyo, m, p, t)"""		4078290	0					
ANR	4084363	ExpressionStatement	"SETPREF ( ""http.sandbox"" , ""true"" , ""Sandbox the HTTP server"" )"	3365:1:114669:114728	4078290	511	True				
ANR	4084364	CallExpression	"SETPREF ( ""http.sandbox"" , ""true"" , ""Sandbox the HTTP server"" )"		4078290	0					
ANR	4084365	Callee	SETPREF		4078290	0					
ANR	4084366	Identifier	SETPREF		4078290	0					
ANR	4084367	ArgumentList	"""http.sandbox"""		4078290	1					
ANR	4084368	Argument	"""http.sandbox"""		4078290	0					
ANR	4084369	PrimaryExpression	"""http.sandbox"""		4078290	0					
ANR	4084370	Argument	"""true"""		4078290	1					
ANR	4084371	PrimaryExpression	"""true"""		4078290	0					
ANR	4084372	Argument	"""Sandbox the HTTP server"""		4078290	2					
ANR	4084373	PrimaryExpression	"""Sandbox the HTTP server"""		4078290	0					
ANR	4084374	ExpressionStatement	"SETI ( ""http.timeout"" , 3 , ""Disconnect clients after N seconds of inactivity"" )"	3366:1:114731:114807	4078290	512	True				
ANR	4084375	CallExpression	"SETI ( ""http.timeout"" , 3 , ""Disconnect clients after N seconds of inactivity"" )"		4078290	0					
ANR	4084376	Callee	SETI		4078290	0					
ANR	4084377	Identifier	SETI		4078290	0					
ANR	4084378	ArgumentList	"""http.timeout"""		4078290	1					
ANR	4084379	Argument	"""http.timeout"""		4078290	0					
ANR	4084380	PrimaryExpression	"""http.timeout"""		4078290	0					
ANR	4084381	Argument	3		4078290	1					
ANR	4084382	PrimaryExpression	3		4078290	0					
ANR	4084383	Argument	"""Disconnect clients after N seconds of inactivity"""		4078290	2					
ANR	4084384	PrimaryExpression	"""Disconnect clients after N seconds of inactivity"""		4078290	0					
ANR	4084385	ExpressionStatement	"SETI ( ""http.dietime"" , 0 , ""Kill server after N seconds with no client"" )"	3367:1:114810:114880	4078290	513	True				
ANR	4084386	CallExpression	"SETI ( ""http.dietime"" , 0 , ""Kill server after N seconds with no client"" )"		4078290	0					
ANR	4084387	Callee	SETI		4078290	0					
ANR	4084388	Identifier	SETI		4078290	0					
ANR	4084389	ArgumentList	"""http.dietime"""		4078290	1					
ANR	4084390	Argument	"""http.dietime"""		4078290	0					
ANR	4084391	PrimaryExpression	"""http.dietime"""		4078290	0					
ANR	4084392	Argument	0		4078290	1					
ANR	4084393	PrimaryExpression	0		4078290	0					
ANR	4084394	Argument	"""Kill server after N seconds with no client"""		4078290	2					
ANR	4084395	PrimaryExpression	"""Kill server after N seconds with no client"""		4078290	0					
ANR	4084396	ExpressionStatement	"SETPREF ( ""http.verbose"" , ""false"" , ""Output server logs to stdout"" )"	3368:1:114883:114948	4078290	514	True				
ANR	4084397	CallExpression	"SETPREF ( ""http.verbose"" , ""false"" , ""Output server logs to stdout"" )"		4078290	0					
ANR	4084398	Callee	SETPREF		4078290	0					
ANR	4084399	Identifier	SETPREF		4078290	0					
ANR	4084400	ArgumentList	"""http.verbose"""		4078290	1					
ANR	4084401	Argument	"""http.verbose"""		4078290	0					
ANR	4084402	PrimaryExpression	"""http.verbose"""		4078290	0					
ANR	4084403	Argument	"""false"""		4078290	1					
ANR	4084404	PrimaryExpression	"""false"""		4078290	0					
ANR	4084405	Argument	"""Output server logs to stdout"""		4078290	2					
ANR	4084406	PrimaryExpression	"""Output server logs to stdout"""		4078290	0					
ANR	4084407	ExpressionStatement	"SETPREF ( ""http.upget"" , ""false"" , ""/up/ answers GET requests, in addition to POST"" )"	3369:1:114951:115032	4078290	515	True				
ANR	4084408	CallExpression	"SETPREF ( ""http.upget"" , ""false"" , ""/up/ answers GET requests, in addition to POST"" )"		4078290	0					
ANR	4084409	Callee	SETPREF		4078290	0					
ANR	4084410	Identifier	SETPREF		4078290	0					
ANR	4084411	ArgumentList	"""http.upget"""		4078290	1					
ANR	4084412	Argument	"""http.upget"""		4078290	0					
ANR	4084413	PrimaryExpression	"""http.upget"""		4078290	0					
ANR	4084414	Argument	"""false"""		4078290	1					
ANR	4084415	PrimaryExpression	"""false"""		4078290	0					
ANR	4084416	Argument	"""/up/ answers GET requests, in addition to POST"""		4078290	2					
ANR	4084417	PrimaryExpression	"""/up/ answers GET requests, in addition to POST"""		4078290	0					
ANR	4084418	ExpressionStatement	"SETPREF ( ""http.upload"" , ""false"" , ""Enable file uploads to /up/<filename>"" )"	3370:1:115035:115108	4078290	516	True				
ANR	4084419	CallExpression	"SETPREF ( ""http.upload"" , ""false"" , ""Enable file uploads to /up/<filename>"" )"		4078290	0					
ANR	4084420	Callee	SETPREF		4078290	0					
ANR	4084421	Identifier	SETPREF		4078290	0					
ANR	4084422	ArgumentList	"""http.upload"""		4078290	1					
ANR	4084423	Argument	"""http.upload"""		4078290	0					
ANR	4084424	PrimaryExpression	"""http.upload"""		4078290	0					
ANR	4084425	Argument	"""false"""		4078290	1					
ANR	4084426	PrimaryExpression	"""false"""		4078290	0					
ANR	4084427	Argument	"""Enable file uploads to /up/<filename>"""		4078290	2					
ANR	4084428	PrimaryExpression	"""Enable file uploads to /up/<filename>"""		4078290	0					
ANR	4084429	ExpressionStatement	"SETPREF ( ""http.uri"" , """" , ""Address of HTTP proxy"" )"	3371:1:115111:115160	4078290	517	True				
ANR	4084430	CallExpression	"SETPREF ( ""http.uri"" , """" , ""Address of HTTP proxy"" )"		4078290	0					
ANR	4084431	Callee	SETPREF		4078290	0					
ANR	4084432	Identifier	SETPREF		4078290	0					
ANR	4084433	ArgumentList	"""http.uri"""		4078290	1					
ANR	4084434	Argument	"""http.uri"""		4078290	0					
ANR	4084435	PrimaryExpression	"""http.uri"""		4078290	0					
ANR	4084436	Argument	""""""		4078290	1					
ANR	4084437	PrimaryExpression	""""""		4078290	0					
ANR	4084438	Argument	"""Address of HTTP proxy"""		4078290	2					
ANR	4084439	PrimaryExpression	"""Address of HTTP proxy"""		4078290	0					
ANR	4084440	ExpressionStatement	"SETPREF ( ""http.auth"" , ""false"" , ""Enable/Disable HTTP Authentification"" )"	3372:1:115163:115233	4078290	518	True				
ANR	4084441	CallExpression	"SETPREF ( ""http.auth"" , ""false"" , ""Enable/Disable HTTP Authentification"" )"		4078290	0					
ANR	4084442	Callee	SETPREF		4078290	0					
ANR	4084443	Identifier	SETPREF		4078290	0					
ANR	4084444	ArgumentList	"""http.auth"""		4078290	1					
ANR	4084445	Argument	"""http.auth"""		4078290	0					
ANR	4084446	PrimaryExpression	"""http.auth"""		4078290	0					
ANR	4084447	Argument	"""false"""		4078290	1					
ANR	4084448	PrimaryExpression	"""false"""		4078290	0					
ANR	4084449	Argument	"""Enable/Disable HTTP Authentification"""		4078290	2					
ANR	4084450	PrimaryExpression	"""Enable/Disable HTTP Authentification"""		4078290	0					
ANR	4084451	ExpressionStatement	"SETPREF ( ""http.authtok"" , ""r2admin:r2admin"" , ""HTTP Authentification user:password token"" )"	3373:1:115236:115324	4078290	519	True				
ANR	4084452	CallExpression	"SETPREF ( ""http.authtok"" , ""r2admin:r2admin"" , ""HTTP Authentification user:password token"" )"		4078290	0					
ANR	4084453	Callee	SETPREF		4078290	0					
ANR	4084454	Identifier	SETPREF		4078290	0					
ANR	4084455	ArgumentList	"""http.authtok"""		4078290	1					
ANR	4084456	Argument	"""http.authtok"""		4078290	0					
ANR	4084457	PrimaryExpression	"""http.authtok"""		4078290	0					
ANR	4084458	Argument	"""r2admin:r2admin"""		4078290	1					
ANR	4084459	PrimaryExpression	"""r2admin:r2admin"""		4078290	0					
ANR	4084460	Argument	"""HTTP Authentification user:password token"""		4078290	2					
ANR	4084461	PrimaryExpression	"""HTTP Authentification user:password token"""		4078290	0					
ANR	4084462	ExpressionStatement	"p = r_sys_getenv ( ""R2_HTTP_AUTHFILE"" )"	3374:1:115327:115364	4078290	520	True				
ANR	4084463	AssignmentExpression	"p = r_sys_getenv ( ""R2_HTTP_AUTHFILE"" )"		4078290	0		=			
ANR	4084464	Identifier	p		4078290	0					
ANR	4084465	CallExpression	"r_sys_getenv ( ""R2_HTTP_AUTHFILE"" )"		4078290	1					
ANR	4084466	Callee	r_sys_getenv		4078290	0					
ANR	4084467	Identifier	r_sys_getenv		4078290	0					
ANR	4084468	ArgumentList	"""R2_HTTP_AUTHFILE"""		4078290	1					
ANR	4084469	Argument	"""R2_HTTP_AUTHFILE"""		4078290	0					
ANR	4084470	PrimaryExpression	"""R2_HTTP_AUTHFILE"""		4078290	0					
ANR	4084471	ExpressionStatement	"SETPREF ( ""http.authfile"" , p ? p : """" , ""HTTP Authentification user file"" )"	3375:1:115367:115438	4078290	521	True				
ANR	4084472	CallExpression	"SETPREF ( ""http.authfile"" , p ? p : """" , ""HTTP Authentification user file"" )"		4078290	0					
ANR	4084473	Callee	SETPREF		4078290	0					
ANR	4084474	Identifier	SETPREF		4078290	0					
ANR	4084475	ArgumentList	"""http.authfile"""		4078290	1					
ANR	4084476	Argument	"""http.authfile"""		4078290	0					
ANR	4084477	PrimaryExpression	"""http.authfile"""		4078290	0					
ANR	4084478	Argument	"p ? p : """""		4078290	1					
ANR	4084479	ConditionalExpression	"p ? p : """""		4078290	0					
ANR	4084480	Condition	p		4078290	0					
ANR	4084481	Identifier	p		4078290	0					
ANR	4084482	Identifier	p		4078290	1					
ANR	4084483	PrimaryExpression	""""""		4078290	2					
ANR	4084484	Argument	"""HTTP Authentification user file"""		4078290	2					
ANR	4084485	PrimaryExpression	"""HTTP Authentification user file"""		4078290	0					
ANR	4084486	ExpressionStatement	tmpdir = r_file_tmpdir ( )	3376:1:115441:115466	4078290	522	True				
ANR	4084487	AssignmentExpression	tmpdir = r_file_tmpdir ( )		4078290	0		=			
ANR	4084488	Identifier	tmpdir		4078290	0					
ANR	4084489	CallExpression	r_file_tmpdir ( )		4078290	1					
ANR	4084490	Callee	r_file_tmpdir		4078290	0					
ANR	4084491	Identifier	r_file_tmpdir		4078290	0					
ANR	4084492	ArgumentList			4078290	1					
ANR	4084493	ExpressionStatement	"r_config_set ( cfg , ""http.uproot"" , tmpdir )"	3377:1:115469:115510	4078290	523	True				
ANR	4084494	CallExpression	"r_config_set ( cfg , ""http.uproot"" , tmpdir )"		4078290	0					
ANR	4084495	Callee	r_config_set		4078290	0					
ANR	4084496	Identifier	r_config_set		4078290	0					
ANR	4084497	ArgumentList	cfg		4078290	1					
ANR	4084498	Argument	cfg		4078290	0					
ANR	4084499	Identifier	cfg		4078290	0					
ANR	4084500	Argument	"""http.uproot"""		4078290	1					
ANR	4084501	PrimaryExpression	"""http.uproot"""		4078290	0					
ANR	4084502	Argument	tmpdir		4078290	2					
ANR	4084503	Identifier	tmpdir		4078290	0					
ANR	4084504	ExpressionStatement	free ( tmpdir )	3378:1:115513:115526	4078290	524	True				
ANR	4084505	CallExpression	free ( tmpdir )		4078290	0					
ANR	4084506	Callee	free		4078290	0					
ANR	4084507	Identifier	free		4078290	0					
ANR	4084508	ArgumentList	tmpdir		4078290	1					
ANR	4084509	Argument	tmpdir		4078290	0					
ANR	4084510	Identifier	tmpdir		4078290	0					
ANR	4084511	ExpressionStatement	"r_config_desc ( cfg , ""http.uproot"" , ""Path where files are uploaded"" )"	3379:1:115529:115596	4078290	525	True				
ANR	4084512	CallExpression	"r_config_desc ( cfg , ""http.uproot"" , ""Path where files are uploaded"" )"		4078290	0					
ANR	4084513	Callee	r_config_desc		4078290	0					
ANR	4084514	Identifier	r_config_desc		4078290	0					
ANR	4084515	ArgumentList	cfg		4078290	1					
ANR	4084516	Argument	cfg		4078290	0					
ANR	4084517	Identifier	cfg		4078290	0					
ANR	4084518	Argument	"""http.uproot"""		4078290	1					
ANR	4084519	PrimaryExpression	"""http.uproot"""		4078290	0					
ANR	4084520	Argument	"""Path where files are uploaded"""		4078290	2					
ANR	4084521	PrimaryExpression	"""Path where files are uploaded"""		4078290	0					
ANR	4084522	ExpressionStatement	"SETPREF ( ""tcp.islocal"" , ""false"" , ""Bind a loopback for tcp command server"" )"	3382:1:115611:115685	4078290	526	True				
ANR	4084523	CallExpression	"SETPREF ( ""tcp.islocal"" , ""false"" , ""Bind a loopback for tcp command server"" )"		4078290	0					
ANR	4084524	Callee	SETPREF		4078290	0					
ANR	4084525	Identifier	SETPREF		4078290	0					
ANR	4084526	ArgumentList	"""tcp.islocal"""		4078290	1					
ANR	4084527	Argument	"""tcp.islocal"""		4078290	0					
ANR	4084528	PrimaryExpression	"""tcp.islocal"""		4078290	0					
ANR	4084529	Argument	"""false"""		4078290	1					
ANR	4084530	PrimaryExpression	"""false"""		4078290	0					
ANR	4084531	Argument	"""Bind a loopback for tcp command server"""		4078290	2					
ANR	4084532	PrimaryExpression	"""Bind a loopback for tcp command server"""		4078290	0					
ANR	4084533	ExpressionStatement	"SETPREF ( ""graph.trace"" , ""false"" , ""Fold all non-traced basic blocks"" )"	3385:1:115702:115770	4078290	527	True				
ANR	4084534	CallExpression	"SETPREF ( ""graph.trace"" , ""false"" , ""Fold all non-traced basic blocks"" )"		4078290	0					
ANR	4084535	Callee	SETPREF		4078290	0					
ANR	4084536	Identifier	SETPREF		4078290	0					
ANR	4084537	ArgumentList	"""graph.trace"""		4078290	1					
ANR	4084538	Argument	"""graph.trace"""		4078290	0					
ANR	4084539	PrimaryExpression	"""graph.trace"""		4078290	0					
ANR	4084540	Argument	"""false"""		4078290	1					
ANR	4084541	PrimaryExpression	"""false"""		4078290	0					
ANR	4084542	Argument	"""Fold all non-traced basic blocks"""		4078290	2					
ANR	4084543	PrimaryExpression	"""Fold all non-traced basic blocks"""		4078290	0					
ANR	4084544	ExpressionStatement	"SETPREF ( ""graph.dummy"" , ""true"" , ""Create dummy nodes in the graph for better layout (20% slower)"" )"	3386:1:115773:115870	4078290	528	True				
ANR	4084545	CallExpression	"SETPREF ( ""graph.dummy"" , ""true"" , ""Create dummy nodes in the graph for better layout (20% slower)"" )"		4078290	0					
ANR	4084546	Callee	SETPREF		4078290	0					
ANR	4084547	Identifier	SETPREF		4078290	0					
ANR	4084548	ArgumentList	"""graph.dummy"""		4078290	1					
ANR	4084549	Argument	"""graph.dummy"""		4078290	0					
ANR	4084550	PrimaryExpression	"""graph.dummy"""		4078290	0					
ANR	4084551	Argument	"""true"""		4078290	1					
ANR	4084552	PrimaryExpression	"""true"""		4078290	0					
ANR	4084553	Argument	"""Create dummy nodes in the graph for better layout (20% slower)"""		4078290	2					
ANR	4084554	PrimaryExpression	"""Create dummy nodes in the graph for better layout (20% slower)"""		4078290	0					
ANR	4084555	ExpressionStatement	"SETPREF ( ""graph.few"" , ""false"" , ""Show few basic blocks in the graph"" )"	3387:1:115873:115941	4078290	529	True				
ANR	4084556	CallExpression	"SETPREF ( ""graph.few"" , ""false"" , ""Show few basic blocks in the graph"" )"		4078290	0					
ANR	4084557	Callee	SETPREF		4078290	0					
ANR	4084558	Identifier	SETPREF		4078290	0					
ANR	4084559	ArgumentList	"""graph.few"""		4078290	1					
ANR	4084560	Argument	"""graph.few"""		4078290	0					
ANR	4084561	PrimaryExpression	"""graph.few"""		4078290	0					
ANR	4084562	Argument	"""false"""		4078290	1					
ANR	4084563	PrimaryExpression	"""false"""		4078290	0					
ANR	4084564	Argument	"""Show few basic blocks in the graph"""		4078290	2					
ANR	4084565	PrimaryExpression	"""Show few basic blocks in the graph"""		4078290	0					
ANR	4084566	ExpressionStatement	"SETPREF ( ""graph.comments"" , ""true"" , ""Show disasm comments in graph"" )"	3388:1:115944:116011	4078290	530	True				
ANR	4084567	CallExpression	"SETPREF ( ""graph.comments"" , ""true"" , ""Show disasm comments in graph"" )"		4078290	0					
ANR	4084568	Callee	SETPREF		4078290	0					
ANR	4084569	Identifier	SETPREF		4078290	0					
ANR	4084570	ArgumentList	"""graph.comments"""		4078290	1					
ANR	4084571	Argument	"""graph.comments"""		4078290	0					
ANR	4084572	PrimaryExpression	"""graph.comments"""		4078290	0					
ANR	4084573	Argument	"""true"""		4078290	1					
ANR	4084574	PrimaryExpression	"""true"""		4078290	0					
ANR	4084575	Argument	"""Show disasm comments in graph"""		4078290	2					
ANR	4084576	PrimaryExpression	"""Show disasm comments in graph"""		4078290	0					
ANR	4084577	ExpressionStatement	"SETPREF ( ""graph.cmtright"" , ""false"" , ""Show comments at right"" )"	3389:1:116014:116075	4078290	531	True				
ANR	4084578	CallExpression	"SETPREF ( ""graph.cmtright"" , ""false"" , ""Show comments at right"" )"		4078290	0					
ANR	4084579	Callee	SETPREF		4078290	0					
ANR	4084580	Identifier	SETPREF		4078290	0					
ANR	4084581	ArgumentList	"""graph.cmtright"""		4078290	1					
ANR	4084582	Argument	"""graph.cmtright"""		4078290	0					
ANR	4084583	PrimaryExpression	"""graph.cmtright"""		4078290	0					
ANR	4084584	Argument	"""false"""		4078290	1					
ANR	4084585	PrimaryExpression	"""false"""		4078290	0					
ANR	4084586	Argument	"""Show comments at right"""		4078290	2					
ANR	4084587	PrimaryExpression	"""Show comments at right"""		4078290	0					
ANR	4084588	ExpressionStatement	"SETCB ( ""graph.gv.format"" , ""gif"" , & cb_graphformat , ""Graph image extension when using 'w' format (png, jpg, pdf, ps, svg, json)"" )"	3390:1:116078:116205	4078290	532	True				
ANR	4084589	CallExpression	"SETCB ( ""graph.gv.format"" , ""gif"" , & cb_graphformat , ""Graph image extension when using 'w' format (png, jpg, pdf, ps, svg, json)"" )"		4078290	0					
ANR	4084590	Callee	SETCB		4078290	0					
ANR	4084591	Identifier	SETCB		4078290	0					
ANR	4084592	ArgumentList	"""graph.gv.format"""		4078290	1					
ANR	4084593	Argument	"""graph.gv.format"""		4078290	0					
ANR	4084594	PrimaryExpression	"""graph.gv.format"""		4078290	0					
ANR	4084595	Argument	"""gif"""		4078290	1					
ANR	4084596	PrimaryExpression	"""gif"""		4078290	0					
ANR	4084597	Argument	& cb_graphformat		4078290	2					
ANR	4084598	UnaryOperationExpression	& cb_graphformat		4078290	0					
ANR	4084599	UnaryOperator	&		4078290	0					
ANR	4084600	Identifier	cb_graphformat		4078290	1					
ANR	4084601	Argument	"""Graph image extension when using 'w' format (png, jpg, pdf, ps, svg, json)"""		4078290	3					
ANR	4084602	PrimaryExpression	"""Graph image extension when using 'w' format (png, jpg, pdf, ps, svg, json)"""		4078290	0					
ANR	4084603	ExpressionStatement	"SETPREF ( ""graph.refs"" , ""false"" , ""Graph references in callgraphs (.agc*;aggi)"" )"	3391:1:116208:116286	4078290	533	True				
ANR	4084604	CallExpression	"SETPREF ( ""graph.refs"" , ""false"" , ""Graph references in callgraphs (.agc*;aggi)"" )"		4078290	0					
ANR	4084605	Callee	SETPREF		4078290	0					
ANR	4084606	Identifier	SETPREF		4078290	0					
ANR	4084607	ArgumentList	"""graph.refs"""		4078290	1					
ANR	4084608	Argument	"""graph.refs"""		4078290	0					
ANR	4084609	PrimaryExpression	"""graph.refs"""		4078290	0					
ANR	4084610	Argument	"""false"""		4078290	1					
ANR	4084611	PrimaryExpression	"""false"""		4078290	0					
ANR	4084612	Argument	"""Graph references in callgraphs (.agc*;aggi)"""		4078290	2					
ANR	4084613	PrimaryExpression	"""Graph references in callgraphs (.agc*;aggi)"""		4078290	0					
ANR	4084614	ExpressionStatement	"SETPREF ( ""graph.json.usenames"" , ""true"" , ""Use names instead of addresses in Global Call Graph (agCj)"" )"	3392:1:116289:116390	4078290	534	True				
ANR	4084615	CallExpression	"SETPREF ( ""graph.json.usenames"" , ""true"" , ""Use names instead of addresses in Global Call Graph (agCj)"" )"		4078290	0					
ANR	4084616	Callee	SETPREF		4078290	0					
ANR	4084617	Identifier	SETPREF		4078290	0					
ANR	4084618	ArgumentList	"""graph.json.usenames"""		4078290	1					
ANR	4084619	Argument	"""graph.json.usenames"""		4078290	0					
ANR	4084620	PrimaryExpression	"""graph.json.usenames"""		4078290	0					
ANR	4084621	Argument	"""true"""		4078290	1					
ANR	4084622	PrimaryExpression	"""true"""		4078290	0					
ANR	4084623	Argument	"""Use names instead of addresses in Global Call Graph (agCj)"""		4078290	2					
ANR	4084624	PrimaryExpression	"""Use names instead of addresses in Global Call Graph (agCj)"""		4078290	0					
ANR	4084625	ExpressionStatement	"SETI ( ""graph.edges"" , 2 , ""0=no edges, 1=simple edges, 2=avoid collisions"" )"	3393:1:116393:116466	4078290	535	True				
ANR	4084626	CallExpression	"SETI ( ""graph.edges"" , 2 , ""0=no edges, 1=simple edges, 2=avoid collisions"" )"		4078290	0					
ANR	4084627	Callee	SETI		4078290	0					
ANR	4084628	Identifier	SETI		4078290	0					
ANR	4084629	ArgumentList	"""graph.edges"""		4078290	1					
ANR	4084630	Argument	"""graph.edges"""		4078290	0					
ANR	4084631	PrimaryExpression	"""graph.edges"""		4078290	0					
ANR	4084632	Argument	2		4078290	1					
ANR	4084633	PrimaryExpression	2		4078290	0					
ANR	4084634	Argument	"""0=no edges, 1=simple edges, 2=avoid collisions"""		4078290	2					
ANR	4084635	PrimaryExpression	"""0=no edges, 1=simple edges, 2=avoid collisions"""		4078290	0					
ANR	4084636	ExpressionStatement	"SETI ( ""graph.layout"" , 0 , ""Graph layout (0=vertical, 1=horizontal)"" )"	3394:1:116469:116536	4078290	536	True				
ANR	4084637	CallExpression	"SETI ( ""graph.layout"" , 0 , ""Graph layout (0=vertical, 1=horizontal)"" )"		4078290	0					
ANR	4084638	Callee	SETI		4078290	0					
ANR	4084639	Identifier	SETI		4078290	0					
ANR	4084640	ArgumentList	"""graph.layout"""		4078290	1					
ANR	4084641	Argument	"""graph.layout"""		4078290	0					
ANR	4084642	PrimaryExpression	"""graph.layout"""		4078290	0					
ANR	4084643	Argument	0		4078290	1					
ANR	4084644	PrimaryExpression	0		4078290	0					
ANR	4084645	Argument	"""Graph layout (0=vertical, 1=horizontal)"""		4078290	2					
ANR	4084646	PrimaryExpression	"""Graph layout (0=vertical, 1=horizontal)"""		4078290	0					
ANR	4084647	ExpressionStatement	"SETI ( ""graph.linemode"" , 1 , ""Graph edges (0=diagonal, 1=square)"" )"	3395:1:116539:116603	4078290	537	True				
ANR	4084648	CallExpression	"SETI ( ""graph.linemode"" , 1 , ""Graph edges (0=diagonal, 1=square)"" )"		4078290	0					
ANR	4084649	Callee	SETI		4078290	0					
ANR	4084650	Identifier	SETI		4078290	0					
ANR	4084651	ArgumentList	"""graph.linemode"""		4078290	1					
ANR	4084652	Argument	"""graph.linemode"""		4078290	0					
ANR	4084653	PrimaryExpression	"""graph.linemode"""		4078290	0					
ANR	4084654	Argument	1		4078290	1					
ANR	4084655	PrimaryExpression	1		4078290	0					
ANR	4084656	Argument	"""Graph edges (0=diagonal, 1=square)"""		4078290	2					
ANR	4084657	PrimaryExpression	"""Graph edges (0=diagonal, 1=square)"""		4078290	0					
ANR	4084658	ExpressionStatement	"SETPREF ( ""graph.font"" , ""Courier"" , ""Font for dot graphs"" )"	3396:1:116606:116662	4078290	538	True				
ANR	4084659	CallExpression	"SETPREF ( ""graph.font"" , ""Courier"" , ""Font for dot graphs"" )"		4078290	0					
ANR	4084660	Callee	SETPREF		4078290	0					
ANR	4084661	Identifier	SETPREF		4078290	0					
ANR	4084662	ArgumentList	"""graph.font"""		4078290	1					
ANR	4084663	Argument	"""graph.font"""		4078290	0					
ANR	4084664	PrimaryExpression	"""graph.font"""		4078290	0					
ANR	4084665	Argument	"""Courier"""		4078290	1					
ANR	4084666	PrimaryExpression	"""Courier"""		4078290	0					
ANR	4084667	Argument	"""Font for dot graphs"""		4078290	2					
ANR	4084668	PrimaryExpression	"""Font for dot graphs"""		4078290	0					
ANR	4084669	ExpressionStatement	"SETPREF ( ""graph.offset"" , ""false"" , ""Show offsets in graphs"" )"	3397:1:116665:116724	4078290	539	True				
ANR	4084670	CallExpression	"SETPREF ( ""graph.offset"" , ""false"" , ""Show offsets in graphs"" )"		4078290	0					
ANR	4084671	Callee	SETPREF		4078290	0					
ANR	4084672	Identifier	SETPREF		4078290	0					
ANR	4084673	ArgumentList	"""graph.offset"""		4078290	1					
ANR	4084674	Argument	"""graph.offset"""		4078290	0					
ANR	4084675	PrimaryExpression	"""graph.offset"""		4078290	0					
ANR	4084676	Argument	"""false"""		4078290	1					
ANR	4084677	PrimaryExpression	"""false"""		4078290	0					
ANR	4084678	Argument	"""Show offsets in graphs"""		4078290	2					
ANR	4084679	PrimaryExpression	"""Show offsets in graphs"""		4078290	0					
ANR	4084680	ExpressionStatement	"SETPREF ( ""graph.bytes"" , ""false"" , ""Show opcode bytes in graphs"" )"	3398:1:116727:116790	4078290	540	True				
ANR	4084681	CallExpression	"SETPREF ( ""graph.bytes"" , ""false"" , ""Show opcode bytes in graphs"" )"		4078290	0					
ANR	4084682	Callee	SETPREF		4078290	0					
ANR	4084683	Identifier	SETPREF		4078290	0					
ANR	4084684	ArgumentList	"""graph.bytes"""		4078290	1					
ANR	4084685	Argument	"""graph.bytes"""		4078290	0					
ANR	4084686	PrimaryExpression	"""graph.bytes"""		4078290	0					
ANR	4084687	Argument	"""false"""		4078290	1					
ANR	4084688	PrimaryExpression	"""false"""		4078290	0					
ANR	4084689	Argument	"""Show opcode bytes in graphs"""		4078290	2					
ANR	4084690	PrimaryExpression	"""Show opcode bytes in graphs"""		4078290	0					
ANR	4084691	ExpressionStatement	"SETPREF ( ""graph.web"" , ""false"" , ""Display graph in web browser (VV)"" )"	3399:1:116793:116860	4078290	541	True				
ANR	4084692	CallExpression	"SETPREF ( ""graph.web"" , ""false"" , ""Display graph in web browser (VV)"" )"		4078290	0					
ANR	4084693	Callee	SETPREF		4078290	0					
ANR	4084694	Identifier	SETPREF		4078290	0					
ANR	4084695	ArgumentList	"""graph.web"""		4078290	1					
ANR	4084696	Argument	"""graph.web"""		4078290	0					
ANR	4084697	PrimaryExpression	"""graph.web"""		4078290	0					
ANR	4084698	Argument	"""false"""		4078290	1					
ANR	4084699	PrimaryExpression	"""false"""		4078290	0					
ANR	4084700	Argument	"""Display graph in web browser (VV)"""		4078290	2					
ANR	4084701	PrimaryExpression	"""Display graph in web browser (VV)"""		4078290	0					
ANR	4084702	ExpressionStatement	"SETI ( ""graph.from"" , UT64_MAX , ""Lower bound address when drawing global graphs"" )"	3400:1:116863:116942	4078290	542	True				
ANR	4084703	CallExpression	"SETI ( ""graph.from"" , UT64_MAX , ""Lower bound address when drawing global graphs"" )"		4078290	0					
ANR	4084704	Callee	SETI		4078290	0					
ANR	4084705	Identifier	SETI		4078290	0					
ANR	4084706	ArgumentList	"""graph.from"""		4078290	1					
ANR	4084707	Argument	"""graph.from"""		4078290	0					
ANR	4084708	PrimaryExpression	"""graph.from"""		4078290	0					
ANR	4084709	Argument	UT64_MAX		4078290	1					
ANR	4084710	Identifier	UT64_MAX		4078290	0					
ANR	4084711	Argument	"""Lower bound address when drawing global graphs"""		4078290	2					
ANR	4084712	PrimaryExpression	"""Lower bound address when drawing global graphs"""		4078290	0					
ANR	4084713	ExpressionStatement	"SETI ( ""graph.to"" , UT64_MAX , ""Upper bound address when drawing global graphs"" )"	3401:1:116945:117022	4078290	543	True				
ANR	4084714	CallExpression	"SETI ( ""graph.to"" , UT64_MAX , ""Upper bound address when drawing global graphs"" )"		4078290	0					
ANR	4084715	Callee	SETI		4078290	0					
ANR	4084716	Identifier	SETI		4078290	0					
ANR	4084717	ArgumentList	"""graph.to"""		4078290	1					
ANR	4084718	Argument	"""graph.to"""		4078290	0					
ANR	4084719	PrimaryExpression	"""graph.to"""		4078290	0					
ANR	4084720	Argument	UT64_MAX		4078290	1					
ANR	4084721	Identifier	UT64_MAX		4078290	0					
ANR	4084722	Argument	"""Upper bound address when drawing global graphs"""		4078290	2					
ANR	4084723	PrimaryExpression	"""Upper bound address when drawing global graphs"""		4078290	0					
ANR	4084724	ExpressionStatement	"SETI ( ""graph.scroll"" , 5 , ""Scroll speed in ascii-art graph"" )"	3402:1:117025:117084	4078290	544	True				
ANR	4084725	CallExpression	"SETI ( ""graph.scroll"" , 5 , ""Scroll speed in ascii-art graph"" )"		4078290	0					
ANR	4084726	Callee	SETI		4078290	0					
ANR	4084727	Identifier	SETI		4078290	0					
ANR	4084728	ArgumentList	"""graph.scroll"""		4078290	1					
ANR	4084729	Argument	"""graph.scroll"""		4078290	0					
ANR	4084730	PrimaryExpression	"""graph.scroll"""		4078290	0					
ANR	4084731	Argument	5		4078290	1					
ANR	4084732	PrimaryExpression	5		4078290	0					
ANR	4084733	Argument	"""Scroll speed in ascii-art graph"""		4078290	2					
ANR	4084734	PrimaryExpression	"""Scroll speed in ascii-art graph"""		4078290	0					
ANR	4084735	ExpressionStatement	"SETPREF ( ""graph.invscroll"" , ""false"" , ""Invert scroll direction in ascii-art graph"" )"	3403:1:117087:117169	4078290	545	True				
ANR	4084736	CallExpression	"SETPREF ( ""graph.invscroll"" , ""false"" , ""Invert scroll direction in ascii-art graph"" )"		4078290	0					
ANR	4084737	Callee	SETPREF		4078290	0					
ANR	4084738	Identifier	SETPREF		4078290	0					
ANR	4084739	ArgumentList	"""graph.invscroll"""		4078290	1					
ANR	4084740	Argument	"""graph.invscroll"""		4078290	0					
ANR	4084741	PrimaryExpression	"""graph.invscroll"""		4078290	0					
ANR	4084742	Argument	"""false"""		4078290	1					
ANR	4084743	PrimaryExpression	"""false"""		4078290	0					
ANR	4084744	Argument	"""Invert scroll direction in ascii-art graph"""		4078290	2					
ANR	4084745	PrimaryExpression	"""Invert scroll direction in ascii-art graph"""		4078290	0					
ANR	4084746	ExpressionStatement	"SETPREF ( ""graph.title"" , """" , ""Title of the graph"" )"	3404:1:117172:117221	4078290	546	True				
ANR	4084747	CallExpression	"SETPREF ( ""graph.title"" , """" , ""Title of the graph"" )"		4078290	0					
ANR	4084748	Callee	SETPREF		4078290	0					
ANR	4084749	Identifier	SETPREF		4078290	0					
ANR	4084750	ArgumentList	"""graph.title"""		4078290	1					
ANR	4084751	Argument	"""graph.title"""		4078290	0					
ANR	4084752	PrimaryExpression	"""graph.title"""		4078290	0					
ANR	4084753	Argument	""""""		4078290	1					
ANR	4084754	PrimaryExpression	""""""		4078290	0					
ANR	4084755	Argument	"""Title of the graph"""		4078290	2					
ANR	4084756	PrimaryExpression	"""Title of the graph"""		4078290	0					
ANR	4084757	ExpressionStatement	"SETPREF ( ""graph.body"" , ""true"" , ""Show body of the nodes in the graph"" )"	3405:1:117224:117293	4078290	547	True				
ANR	4084758	CallExpression	"SETPREF ( ""graph.body"" , ""true"" , ""Show body of the nodes in the graph"" )"		4078290	0					
ANR	4084759	Callee	SETPREF		4078290	0					
ANR	4084760	Identifier	SETPREF		4078290	0					
ANR	4084761	ArgumentList	"""graph.body"""		4078290	1					
ANR	4084762	Argument	"""graph.body"""		4078290	0					
ANR	4084763	PrimaryExpression	"""graph.body"""		4078290	0					
ANR	4084764	Argument	"""true"""		4078290	1					
ANR	4084765	PrimaryExpression	"""true"""		4078290	0					
ANR	4084766	Argument	"""Show body of the nodes in the graph"""		4078290	2					
ANR	4084767	PrimaryExpression	"""Show body of the nodes in the graph"""		4078290	0					
ANR	4084768	ExpressionStatement	"SETPREF ( ""graph.bubble"" , ""false"" , ""Show nodes as bubbles"" )"	3406:1:117296:117354	4078290	548	True				
ANR	4084769	CallExpression	"SETPREF ( ""graph.bubble"" , ""false"" , ""Show nodes as bubbles"" )"		4078290	0					
ANR	4084770	Callee	SETPREF		4078290	0					
ANR	4084771	Identifier	SETPREF		4078290	0					
ANR	4084772	ArgumentList	"""graph.bubble"""		4078290	1					
ANR	4084773	Argument	"""graph.bubble"""		4078290	0					
ANR	4084774	PrimaryExpression	"""graph.bubble"""		4078290	0					
ANR	4084775	Argument	"""false"""		4078290	1					
ANR	4084776	PrimaryExpression	"""false"""		4078290	0					
ANR	4084777	Argument	"""Show nodes as bubbles"""		4078290	2					
ANR	4084778	PrimaryExpression	"""Show nodes as bubbles"""		4078290	0					
ANR	4084779	ExpressionStatement	"SETPREF ( ""graph.ntitles"" , ""true"" , ""Display title of node"" )"	3407:1:117357:117415	4078290	549	True				
ANR	4084780	CallExpression	"SETPREF ( ""graph.ntitles"" , ""true"" , ""Display title of node"" )"		4078290	0					
ANR	4084781	Callee	SETPREF		4078290	0					
ANR	4084782	Identifier	SETPREF		4078290	0					
ANR	4084783	ArgumentList	"""graph.ntitles"""		4078290	1					
ANR	4084784	Argument	"""graph.ntitles"""		4078290	0					
ANR	4084785	PrimaryExpression	"""graph.ntitles"""		4078290	0					
ANR	4084786	Argument	"""true"""		4078290	1					
ANR	4084787	PrimaryExpression	"""true"""		4078290	0					
ANR	4084788	Argument	"""Display title of node"""		4078290	2					
ANR	4084789	PrimaryExpression	"""Display title of node"""		4078290	0					
ANR	4084790	ExpressionStatement	"SETPREF ( ""graph.gv.node"" , """" , ""Graphviz node style. (color=gray, style=filled shape=box)"" )"	3408:1:117418:117508	4078290	550	True				
ANR	4084791	CallExpression	"SETPREF ( ""graph.gv.node"" , """" , ""Graphviz node style. (color=gray, style=filled shape=box)"" )"		4078290	0					
ANR	4084792	Callee	SETPREF		4078290	0					
ANR	4084793	Identifier	SETPREF		4078290	0					
ANR	4084794	ArgumentList	"""graph.gv.node"""		4078290	1					
ANR	4084795	Argument	"""graph.gv.node"""		4078290	0					
ANR	4084796	PrimaryExpression	"""graph.gv.node"""		4078290	0					
ANR	4084797	Argument	""""""		4078290	1					
ANR	4084798	PrimaryExpression	""""""		4078290	0					
ANR	4084799	Argument	"""Graphviz node style. (color=gray, style=filled shape=box)"""		4078290	2					
ANR	4084800	PrimaryExpression	"""Graphviz node style. (color=gray, style=filled shape=box)"""		4078290	0					
ANR	4084801	ExpressionStatement	"SETPREF ( ""graph.gv.edge"" , """" , ""Graphviz edge style. (arrowhead=\\""vee\\"")"" )"	3409:1:117511:117584	4078290	551	True				
ANR	4084802	CallExpression	"SETPREF ( ""graph.gv.edge"" , """" , ""Graphviz edge style. (arrowhead=\\""vee\\"")"" )"		4078290	0					
ANR	4084803	Callee	SETPREF		4078290	0					
ANR	4084804	Identifier	SETPREF		4078290	0					
ANR	4084805	ArgumentList	"""graph.gv.edge"""		4078290	1					
ANR	4084806	Argument	"""graph.gv.edge"""		4078290	0					
ANR	4084807	PrimaryExpression	"""graph.gv.edge"""		4078290	0					
ANR	4084808	Argument	""""""		4078290	1					
ANR	4084809	PrimaryExpression	""""""		4078290	0					
ANR	4084810	Argument	"""Graphviz edge style. (arrowhead=\\""vee\\"")"""		4078290	2					
ANR	4084811	PrimaryExpression	"""Graphviz edge style. (arrowhead=\\""vee\\"")"""		4078290	0					
ANR	4084812	ExpressionStatement	"SETPREF ( ""graph.gv.spline"" , """" , ""Graphviz spline style. (splines=\\""ortho\\"")"" )"	3410:1:117587:117664	4078290	552	True				
ANR	4084813	CallExpression	"SETPREF ( ""graph.gv.spline"" , """" , ""Graphviz spline style. (splines=\\""ortho\\"")"" )"		4078290	0					
ANR	4084814	Callee	SETPREF		4078290	0					
ANR	4084815	Identifier	SETPREF		4078290	0					
ANR	4084816	ArgumentList	"""graph.gv.spline"""		4078290	1					
ANR	4084817	Argument	"""graph.gv.spline"""		4078290	0					
ANR	4084818	PrimaryExpression	"""graph.gv.spline"""		4078290	0					
ANR	4084819	Argument	""""""		4078290	1					
ANR	4084820	PrimaryExpression	""""""		4078290	0					
ANR	4084821	Argument	"""Graphviz spline style. (splines=\\""ortho\\"")"""		4078290	2					
ANR	4084822	PrimaryExpression	"""Graphviz spline style. (splines=\\""ortho\\"")"""		4078290	0					
ANR	4084823	ExpressionStatement	"SETPREF ( ""graph.gv.graph"" , """" , ""Graphviz global style attributes. (bgcolor=white)"" )"	3411:1:117667:117750	4078290	553	True				
ANR	4084824	CallExpression	"SETPREF ( ""graph.gv.graph"" , """" , ""Graphviz global style attributes. (bgcolor=white)"" )"		4078290	0					
ANR	4084825	Callee	SETPREF		4078290	0					
ANR	4084826	Identifier	SETPREF		4078290	0					
ANR	4084827	ArgumentList	"""graph.gv.graph"""		4078290	1					
ANR	4084828	Argument	"""graph.gv.graph"""		4078290	0					
ANR	4084829	PrimaryExpression	"""graph.gv.graph"""		4078290	0					
ANR	4084830	Argument	""""""		4078290	1					
ANR	4084831	PrimaryExpression	""""""		4078290	0					
ANR	4084832	Argument	"""Graphviz global style attributes. (bgcolor=white)"""		4078290	2					
ANR	4084833	PrimaryExpression	"""Graphviz global style attributes. (bgcolor=white)"""		4078290	0					
ANR	4084834	ExpressionStatement	"SETPREF ( ""graph.gv.current"" , ""false"" , ""Highlight the current node in graphviz graph."" )"	3412:1:117753:117839	4078290	554	True				
ANR	4084835	CallExpression	"SETPREF ( ""graph.gv.current"" , ""false"" , ""Highlight the current node in graphviz graph."" )"		4078290	0					
ANR	4084836	Callee	SETPREF		4078290	0					
ANR	4084837	Identifier	SETPREF		4078290	0					
ANR	4084838	ArgumentList	"""graph.gv.current"""		4078290	1					
ANR	4084839	Argument	"""graph.gv.current"""		4078290	0					
ANR	4084840	PrimaryExpression	"""graph.gv.current"""		4078290	0					
ANR	4084841	Argument	"""false"""		4078290	1					
ANR	4084842	PrimaryExpression	"""false"""		4078290	0					
ANR	4084843	Argument	"""Highlight the current node in graphviz graph."""		4078290	2					
ANR	4084844	PrimaryExpression	"""Highlight the current node in graphviz graph."""		4078290	0					
ANR	4084845	ExpressionStatement	"SETPREF ( ""graph.nodejmps"" , ""true"" , ""Enables shortcuts for every node."" )"	3413:1:117842:117913	4078290	555	True				
ANR	4084846	CallExpression	"SETPREF ( ""graph.nodejmps"" , ""true"" , ""Enables shortcuts for every node."" )"		4078290	0					
ANR	4084847	Callee	SETPREF		4078290	0					
ANR	4084848	Identifier	SETPREF		4078290	0					
ANR	4084849	ArgumentList	"""graph.nodejmps"""		4078290	1					
ANR	4084850	Argument	"""graph.nodejmps"""		4078290	0					
ANR	4084851	PrimaryExpression	"""graph.nodejmps"""		4078290	0					
ANR	4084852	Argument	"""true"""		4078290	1					
ANR	4084853	PrimaryExpression	"""true"""		4078290	0					
ANR	4084854	Argument	"""Enables shortcuts for every node."""		4078290	2					
ANR	4084855	PrimaryExpression	"""Enables shortcuts for every node."""		4078290	0					
ANR	4084856	ExpressionStatement	"SETPREF ( ""graph.hints"" , ""true"" , ""Show true (t) and false (f) hints for conditional edges in graph"" )"	3414:1:117916:118015	4078290	556	True				
ANR	4084857	CallExpression	"SETPREF ( ""graph.hints"" , ""true"" , ""Show true (t) and false (f) hints for conditional edges in graph"" )"		4078290	0					
ANR	4084858	Callee	SETPREF		4078290	0					
ANR	4084859	Identifier	SETPREF		4078290	0					
ANR	4084860	ArgumentList	"""graph.hints"""		4078290	1					
ANR	4084861	Argument	"""graph.hints"""		4078290	0					
ANR	4084862	PrimaryExpression	"""graph.hints"""		4078290	0					
ANR	4084863	Argument	"""true"""		4078290	1					
ANR	4084864	PrimaryExpression	"""true"""		4078290	0					
ANR	4084865	Argument	"""Show true (t) and false (f) hints for conditional edges in graph"""		4078290	2					
ANR	4084866	PrimaryExpression	"""Show true (t) and false (f) hints for conditional edges in graph"""		4078290	0					
ANR	4084867	ExpressionStatement	"SETCB ( ""graph.dotted"" , ""false"" , & cb_dotted , ""Dotted lines for conditional jumps in graph"" )"	3415:1:118018:118108	4078290	557	True				
ANR	4084868	CallExpression	"SETCB ( ""graph.dotted"" , ""false"" , & cb_dotted , ""Dotted lines for conditional jumps in graph"" )"		4078290	0					
ANR	4084869	Callee	SETCB		4078290	0					
ANR	4084870	Identifier	SETCB		4078290	0					
ANR	4084871	ArgumentList	"""graph.dotted"""		4078290	1					
ANR	4084872	Argument	"""graph.dotted"""		4078290	0					
ANR	4084873	PrimaryExpression	"""graph.dotted"""		4078290	0					
ANR	4084874	Argument	"""false"""		4078290	1					
ANR	4084875	PrimaryExpression	"""false"""		4078290	0					
ANR	4084876	Argument	& cb_dotted		4078290	2					
ANR	4084877	UnaryOperationExpression	& cb_dotted		4078290	0					
ANR	4084878	UnaryOperator	&		4078290	0					
ANR	4084879	Identifier	cb_dotted		4078290	1					
ANR	4084880	Argument	"""Dotted lines for conditional jumps in graph"""		4078290	3					
ANR	4084881	PrimaryExpression	"""Dotted lines for conditional jumps in graph"""		4078290	0					
ANR	4084882	ExpressionStatement	"SETPREF ( ""hud.path"" , """" , ""Set a custom path for the HUD file"" )"	3418:1:118123:118185	4078290	558	True				
ANR	4084883	CallExpression	"SETPREF ( ""hud.path"" , """" , ""Set a custom path for the HUD file"" )"		4078290	0					
ANR	4084884	Callee	SETPREF		4078290	0					
ANR	4084885	Identifier	SETPREF		4078290	0					
ANR	4084886	ArgumentList	"""hud.path"""		4078290	1					
ANR	4084887	Argument	"""hud.path"""		4078290	0					
ANR	4084888	PrimaryExpression	"""hud.path"""		4078290	0					
ANR	4084889	Argument	""""""		4078290	1					
ANR	4084890	PrimaryExpression	""""""		4078290	0					
ANR	4084891	Argument	"""Set a custom path for the HUD file"""		4078290	2					
ANR	4084892	PrimaryExpression	"""Set a custom path for the HUD file"""		4078290	0					
ANR	4084893	ExpressionStatement	"SETCB ( ""esil.exectrap"" , ""false"" , & cb_exectrap , ""trap when executing code in non-executable memory"" )"	3420:1:118189:118288	4078290	559	True				
ANR	4084894	CallExpression	"SETCB ( ""esil.exectrap"" , ""false"" , & cb_exectrap , ""trap when executing code in non-executable memory"" )"		4078290	0					
ANR	4084895	Callee	SETCB		4078290	0					
ANR	4084896	Identifier	SETCB		4078290	0					
ANR	4084897	ArgumentList	"""esil.exectrap"""		4078290	1					
ANR	4084898	Argument	"""esil.exectrap"""		4078290	0					
ANR	4084899	PrimaryExpression	"""esil.exectrap"""		4078290	0					
ANR	4084900	Argument	"""false"""		4078290	1					
ANR	4084901	PrimaryExpression	"""false"""		4078290	0					
ANR	4084902	Argument	& cb_exectrap		4078290	2					
ANR	4084903	UnaryOperationExpression	& cb_exectrap		4078290	0					
ANR	4084904	UnaryOperator	&		4078290	0					
ANR	4084905	Identifier	cb_exectrap		4078290	1					
ANR	4084906	Argument	"""trap when executing code in non-executable memory"""		4078290	3					
ANR	4084907	PrimaryExpression	"""trap when executing code in non-executable memory"""		4078290	0					
ANR	4084908	ExpressionStatement	"SETCB ( ""esil.iotrap"" , ""true"" , & cb_iotrap , ""invalid read or writes produce a trap exception"" )"	3421:1:118291:118383	4078290	560	True				
ANR	4084909	CallExpression	"SETCB ( ""esil.iotrap"" , ""true"" , & cb_iotrap , ""invalid read or writes produce a trap exception"" )"		4078290	0					
ANR	4084910	Callee	SETCB		4078290	0					
ANR	4084911	Identifier	SETCB		4078290	0					
ANR	4084912	ArgumentList	"""esil.iotrap"""		4078290	1					
ANR	4084913	Argument	"""esil.iotrap"""		4078290	0					
ANR	4084914	PrimaryExpression	"""esil.iotrap"""		4078290	0					
ANR	4084915	Argument	"""true"""		4078290	1					
ANR	4084916	PrimaryExpression	"""true"""		4078290	0					
ANR	4084917	Argument	& cb_iotrap		4078290	2					
ANR	4084918	UnaryOperationExpression	& cb_iotrap		4078290	0					
ANR	4084919	UnaryOperator	&		4078290	0					
ANR	4084920	Identifier	cb_iotrap		4078290	1					
ANR	4084921	Argument	"""invalid read or writes produce a trap exception"""		4078290	3					
ANR	4084922	PrimaryExpression	"""invalid read or writes produce a trap exception"""		4078290	0					
ANR	4084923	ExpressionStatement	"SETPREF ( ""esil.romem"" , ""false"" , ""Set memory as read-only for ESIL"" )"	3422:1:118386:118453	4078290	561	True				
ANR	4084924	CallExpression	"SETPREF ( ""esil.romem"" , ""false"" , ""Set memory as read-only for ESIL"" )"		4078290	0					
ANR	4084925	Callee	SETPREF		4078290	0					
ANR	4084926	Identifier	SETPREF		4078290	0					
ANR	4084927	ArgumentList	"""esil.romem"""		4078290	1					
ANR	4084928	Argument	"""esil.romem"""		4078290	0					
ANR	4084929	PrimaryExpression	"""esil.romem"""		4078290	0					
ANR	4084930	Argument	"""false"""		4078290	1					
ANR	4084931	PrimaryExpression	"""false"""		4078290	0					
ANR	4084932	Argument	"""Set memory as read-only for ESIL"""		4078290	2					
ANR	4084933	PrimaryExpression	"""Set memory as read-only for ESIL"""		4078290	0					
ANR	4084934	ExpressionStatement	"SETPREF ( ""esil.stats"" , ""false"" , ""Statistics from ESIL emulation stored in sdb"" )"	3423:1:118456:118535	4078290	562	True				
ANR	4084935	CallExpression	"SETPREF ( ""esil.stats"" , ""false"" , ""Statistics from ESIL emulation stored in sdb"" )"		4078290	0					
ANR	4084936	Callee	SETPREF		4078290	0					
ANR	4084937	Identifier	SETPREF		4078290	0					
ANR	4084938	ArgumentList	"""esil.stats"""		4078290	1					
ANR	4084939	Argument	"""esil.stats"""		4078290	0					
ANR	4084940	PrimaryExpression	"""esil.stats"""		4078290	0					
ANR	4084941	Argument	"""false"""		4078290	1					
ANR	4084942	PrimaryExpression	"""false"""		4078290	0					
ANR	4084943	Argument	"""Statistics from ESIL emulation stored in sdb"""		4078290	2					
ANR	4084944	PrimaryExpression	"""Statistics from ESIL emulation stored in sdb"""		4078290	0					
ANR	4084945	ExpressionStatement	"SETPREF ( ""esil.nonull"" , ""false"" , ""Prevent memory read, memory write at null pointer"" )"	3424:1:118538:118623	4078290	563	True				
ANR	4084946	CallExpression	"SETPREF ( ""esil.nonull"" , ""false"" , ""Prevent memory read, memory write at null pointer"" )"		4078290	0					
ANR	4084947	Callee	SETPREF		4078290	0					
ANR	4084948	Identifier	SETPREF		4078290	0					
ANR	4084949	ArgumentList	"""esil.nonull"""		4078290	1					
ANR	4084950	Argument	"""esil.nonull"""		4078290	0					
ANR	4084951	PrimaryExpression	"""esil.nonull"""		4078290	0					
ANR	4084952	Argument	"""false"""		4078290	1					
ANR	4084953	PrimaryExpression	"""false"""		4078290	0					
ANR	4084954	Argument	"""Prevent memory read, memory write at null pointer"""		4078290	2					
ANR	4084955	PrimaryExpression	"""Prevent memory read, memory write at null pointer"""		4078290	0					
ANR	4084956	ExpressionStatement	"SETCB ( ""esil.mdev.range"" , """" , & cb_mdevrange , ""Specify a range of memory to be handled by cmd.esil.mdev"" )"	3425:1:118626:118730	4078290	564	True				
ANR	4084957	CallExpression	"SETCB ( ""esil.mdev.range"" , """" , & cb_mdevrange , ""Specify a range of memory to be handled by cmd.esil.mdev"" )"		4078290	0					
ANR	4084958	Callee	SETCB		4078290	0					
ANR	4084959	Identifier	SETCB		4078290	0					
ANR	4084960	ArgumentList	"""esil.mdev.range"""		4078290	1					
ANR	4084961	Argument	"""esil.mdev.range"""		4078290	0					
ANR	4084962	PrimaryExpression	"""esil.mdev.range"""		4078290	0					
ANR	4084963	Argument	""""""		4078290	1					
ANR	4084964	PrimaryExpression	""""""		4078290	0					
ANR	4084965	Argument	& cb_mdevrange		4078290	2					
ANR	4084966	UnaryOperationExpression	& cb_mdevrange		4078290	0					
ANR	4084967	UnaryOperator	&		4078290	0					
ANR	4084968	Identifier	cb_mdevrange		4078290	1					
ANR	4084969	Argument	"""Specify a range of memory to be handled by cmd.esil.mdev"""		4078290	3					
ANR	4084970	PrimaryExpression	"""Specify a range of memory to be handled by cmd.esil.mdev"""		4078290	0					
ANR	4084971	ExpressionStatement	"r_config_set_cb ( cfg , ""scr.fgets"" , ""true"" , cb_scrfgets )"	3429:1:118764:118819	4078290	565	True				
ANR	4084972	CallExpression	"r_config_set_cb ( cfg , ""scr.fgets"" , ""true"" , cb_scrfgets )"		4078290	0					
ANR	4084973	Callee	r_config_set_cb		4078290	0					
ANR	4084974	Identifier	r_config_set_cb		4078290	0					
ANR	4084975	ArgumentList	cfg		4078290	1					
ANR	4084976	Argument	cfg		4078290	0					
ANR	4084977	Identifier	cfg		4078290	0					
ANR	4084978	Argument	"""scr.fgets"""		4078290	1					
ANR	4084979	PrimaryExpression	"""scr.fgets"""		4078290	0					
ANR	4084980	Argument	"""true"""		4078290	2					
ANR	4084981	PrimaryExpression	"""true"""		4078290	0					
ANR	4084982	Argument	cb_scrfgets		4078290	3					
ANR	4084983	Identifier	cb_scrfgets		4078290	0					
ANR	4084984	ExpressionStatement	"r_config_desc ( cfg , ""scr.fgets"" , ""Use fgets() instead of dietline for prompt input"" )"	3433:1:118894:118978	4078290	566	True				
ANR	4084985	CallExpression	"r_config_desc ( cfg , ""scr.fgets"" , ""Use fgets() instead of dietline for prompt input"" )"		4078290	0					
ANR	4084986	Callee	r_config_desc		4078290	0					
ANR	4084987	Identifier	r_config_desc		4078290	0					
ANR	4084988	ArgumentList	cfg		4078290	1					
ANR	4084989	Argument	cfg		4078290	0					
ANR	4084990	Identifier	cfg		4078290	0					
ANR	4084991	Argument	"""scr.fgets"""		4078290	1					
ANR	4084992	PrimaryExpression	"""scr.fgets"""		4078290	0					
ANR	4084993	Argument	"""Use fgets() instead of dietline for prompt input"""		4078290	2					
ANR	4084994	PrimaryExpression	"""Use fgets() instead of dietline for prompt input"""		4078290	0					
ANR	4084995	ExpressionStatement	"SETCB ( ""scr.echo"" , ""false"" , & cb_screcho , ""Show rcons output in realtime to stderr and buffer"" )"	3434:1:118981:119075	4078290	567	True				
ANR	4084996	CallExpression	"SETCB ( ""scr.echo"" , ""false"" , & cb_screcho , ""Show rcons output in realtime to stderr and buffer"" )"		4078290	0					
ANR	4084997	Callee	SETCB		4078290	0					
ANR	4084998	Identifier	SETCB		4078290	0					
ANR	4084999	ArgumentList	"""scr.echo"""		4078290	1					
ANR	4085000	Argument	"""scr.echo"""		4078290	0					
ANR	4085001	PrimaryExpression	"""scr.echo"""		4078290	0					
ANR	4085002	Argument	"""false"""		4078290	1					
ANR	4085003	PrimaryExpression	"""false"""		4078290	0					
ANR	4085004	Argument	& cb_screcho		4078290	2					
ANR	4085005	UnaryOperationExpression	& cb_screcho		4078290	0					
ANR	4085006	UnaryOperator	&		4078290	0					
ANR	4085007	Identifier	cb_screcho		4078290	1					
ANR	4085008	Argument	"""Show rcons output in realtime to stderr and buffer"""		4078290	3					
ANR	4085009	PrimaryExpression	"""Show rcons output in realtime to stderr and buffer"""		4078290	0					
ANR	4085010	ExpressionStatement	"SETICB ( ""scr.linesleep"" , 0 , & cb_scrlinesleep , ""Flush sleeping some ms in every line"" )"	3435:1:119078:119163	4078290	568	True				
ANR	4085011	CallExpression	"SETICB ( ""scr.linesleep"" , 0 , & cb_scrlinesleep , ""Flush sleeping some ms in every line"" )"		4078290	0					
ANR	4085012	Callee	SETICB		4078290	0					
ANR	4085013	Identifier	SETICB		4078290	0					
ANR	4085014	ArgumentList	"""scr.linesleep"""		4078290	1					
ANR	4085015	Argument	"""scr.linesleep"""		4078290	0					
ANR	4085016	PrimaryExpression	"""scr.linesleep"""		4078290	0					
ANR	4085017	Argument	0		4078290	1					
ANR	4085018	PrimaryExpression	0		4078290	0					
ANR	4085019	Argument	& cb_scrlinesleep		4078290	2					
ANR	4085020	UnaryOperationExpression	& cb_scrlinesleep		4078290	0					
ANR	4085021	UnaryOperator	&		4078290	0					
ANR	4085022	Identifier	cb_scrlinesleep		4078290	1					
ANR	4085023	Argument	"""Flush sleeping some ms in every line"""		4078290	3					
ANR	4085024	PrimaryExpression	"""Flush sleeping some ms in every line"""		4078290	0					
ANR	4085025	ExpressionStatement	"SETICB ( ""scr.maxtab"" , 4096 , & cb_completion_maxtab , ""Change max number of auto completion suggestions"" )"	3436:1:119166:119268	4078290	569	True				
ANR	4085026	CallExpression	"SETICB ( ""scr.maxtab"" , 4096 , & cb_completion_maxtab , ""Change max number of auto completion suggestions"" )"		4078290	0					
ANR	4085027	Callee	SETICB		4078290	0					
ANR	4085028	Identifier	SETICB		4078290	0					
ANR	4085029	ArgumentList	"""scr.maxtab"""		4078290	1					
ANR	4085030	Argument	"""scr.maxtab"""		4078290	0					
ANR	4085031	PrimaryExpression	"""scr.maxtab"""		4078290	0					
ANR	4085032	Argument	4096		4078290	1					
ANR	4085033	PrimaryExpression	4096		4078290	0					
ANR	4085034	Argument	& cb_completion_maxtab		4078290	2					
ANR	4085035	UnaryOperationExpression	& cb_completion_maxtab		4078290	0					
ANR	4085036	UnaryOperator	&		4078290	0					
ANR	4085037	Identifier	cb_completion_maxtab		4078290	1					
ANR	4085038	Argument	"""Change max number of auto completion suggestions"""		4078290	3					
ANR	4085039	PrimaryExpression	"""Change max number of auto completion suggestions"""		4078290	0					
ANR	4085040	ExpressionStatement	"SETICB ( ""scr.pagesize"" , 1 , & cb_scrpagesize , ""Flush in pages when scr.linesleep is != 0"" )"	3437:1:119271:119359	4078290	570	True				
ANR	4085041	CallExpression	"SETICB ( ""scr.pagesize"" , 1 , & cb_scrpagesize , ""Flush in pages when scr.linesleep is != 0"" )"		4078290	0					
ANR	4085042	Callee	SETICB		4078290	0					
ANR	4085043	Identifier	SETICB		4078290	0					
ANR	4085044	ArgumentList	"""scr.pagesize"""		4078290	1					
ANR	4085045	Argument	"""scr.pagesize"""		4078290	0					
ANR	4085046	PrimaryExpression	"""scr.pagesize"""		4078290	0					
ANR	4085047	Argument	1		4078290	1					
ANR	4085048	PrimaryExpression	1		4078290	0					
ANR	4085049	Argument	& cb_scrpagesize		4078290	2					
ANR	4085050	UnaryOperationExpression	& cb_scrpagesize		4078290	0					
ANR	4085051	UnaryOperator	&		4078290	0					
ANR	4085052	Identifier	cb_scrpagesize		4078290	1					
ANR	4085053	Argument	"""Flush in pages when scr.linesleep is != 0"""		4078290	3					
ANR	4085054	PrimaryExpression	"""Flush in pages when scr.linesleep is != 0"""		4078290	0					
ANR	4085055	ExpressionStatement	"SETCB ( ""scr.flush"" , ""false"" , & cb_scrflush , ""Force flush to console in realtime (breaks scripting)"" )"	3438:1:119362:119461	4078290	571	True				
ANR	4085056	CallExpression	"SETCB ( ""scr.flush"" , ""false"" , & cb_scrflush , ""Force flush to console in realtime (breaks scripting)"" )"		4078290	0					
ANR	4085057	Callee	SETCB		4078290	0					
ANR	4085058	Identifier	SETCB		4078290	0					
ANR	4085059	ArgumentList	"""scr.flush"""		4078290	1					
ANR	4085060	Argument	"""scr.flush"""		4078290	0					
ANR	4085061	PrimaryExpression	"""scr.flush"""		4078290	0					
ANR	4085062	Argument	"""false"""		4078290	1					
ANR	4085063	PrimaryExpression	"""false"""		4078290	0					
ANR	4085064	Argument	& cb_scrflush		4078290	2					
ANR	4085065	UnaryOperationExpression	& cb_scrflush		4078290	0					
ANR	4085066	UnaryOperator	&		4078290	0					
ANR	4085067	Identifier	cb_scrflush		4078290	1					
ANR	4085068	Argument	"""Force flush to console in realtime (breaks scripting)"""		4078290	3					
ANR	4085069	PrimaryExpression	"""Force flush to console in realtime (breaks scripting)"""		4078290	0					
ANR	4085070	ExpressionStatement	"SETPREF ( ""scr.slow"" , ""true"" , ""Do slow stuff on visual mode like RFlag.get_at(true)"" )"	3439:1:119464:119548	4078290	572	True				
ANR	4085071	CallExpression	"SETPREF ( ""scr.slow"" , ""true"" , ""Do slow stuff on visual mode like RFlag.get_at(true)"" )"		4078290	0					
ANR	4085072	Callee	SETPREF		4078290	0					
ANR	4085073	Identifier	SETPREF		4078290	0					
ANR	4085074	ArgumentList	"""scr.slow"""		4078290	1					
ANR	4085075	Argument	"""scr.slow"""		4078290	0					
ANR	4085076	PrimaryExpression	"""scr.slow"""		4078290	0					
ANR	4085077	Argument	"""true"""		4078290	1					
ANR	4085078	PrimaryExpression	"""true"""		4078290	0					
ANR	4085079	Argument	"""Do slow stuff on visual mode like RFlag.get_at(true)"""		4078290	2					
ANR	4085080	PrimaryExpression	"""Do slow stuff on visual mode like RFlag.get_at(true)"""		4078290	0					
ANR	4085081	ExpressionStatement	"SETCB ( ""scr.prompt.popup"" , ""false"" , & cb_scr_prompt_popup , ""Show widget dropdown for autocomplete"" )"	3440:1:119551:119649	4078290	573	True				
ANR	4085082	CallExpression	"SETCB ( ""scr.prompt.popup"" , ""false"" , & cb_scr_prompt_popup , ""Show widget dropdown for autocomplete"" )"		4078290	0					
ANR	4085083	Callee	SETCB		4078290	0					
ANR	4085084	Identifier	SETCB		4078290	0					
ANR	4085085	ArgumentList	"""scr.prompt.popup"""		4078290	1					
ANR	4085086	Argument	"""scr.prompt.popup"""		4078290	0					
ANR	4085087	PrimaryExpression	"""scr.prompt.popup"""		4078290	0					
ANR	4085088	Argument	"""false"""		4078290	1					
ANR	4085089	PrimaryExpression	"""false"""		4078290	0					
ANR	4085090	Argument	& cb_scr_prompt_popup		4078290	2					
ANR	4085091	UnaryOperationExpression	& cb_scr_prompt_popup		4078290	0					
ANR	4085092	UnaryOperator	&		4078290	0					
ANR	4085093	Identifier	cb_scr_prompt_popup		4078290	1					
ANR	4085094	Argument	"""Show widget dropdown for autocomplete"""		4078290	3					
ANR	4085095	PrimaryExpression	"""Show widget dropdown for autocomplete"""		4078290	0					
ANR	4085096	ExpressionStatement	"SETICB ( ""scr.ansicon"" , r_cons_singleton ( ) -> ansicon , & scr_ansicon , ""Use ANSICON mode or not on Windows"" )"	3442:1:119668:119774	4078290	574	True				
ANR	4085097	CallExpression	"SETICB ( ""scr.ansicon"" , r_cons_singleton ( ) -> ansicon , & scr_ansicon , ""Use ANSICON mode or not on Windows"" )"		4078290	0					
ANR	4085098	Callee	SETICB		4078290	0					
ANR	4085099	Identifier	SETICB		4078290	0					
ANR	4085100	ArgumentList	"""scr.ansicon"""		4078290	1					
ANR	4085101	Argument	"""scr.ansicon"""		4078290	0					
ANR	4085102	PrimaryExpression	"""scr.ansicon"""		4078290	0					
ANR	4085103	Argument	r_cons_singleton ( ) -> ansicon		4078290	1					
ANR	4085104	PtrMemberAccess	r_cons_singleton ( ) -> ansicon		4078290	0					
ANR	4085105	CallExpression	r_cons_singleton ( )		4078290	0					
ANR	4085106	Callee	r_cons_singleton		4078290	0					
ANR	4085107	Identifier	r_cons_singleton		4078290	0					
ANR	4085108	ArgumentList			4078290	1					
ANR	4085109	Identifier	ansicon		4078290	1					
ANR	4085110	Argument	& scr_ansicon		4078290	2					
ANR	4085111	UnaryOperationExpression	& scr_ansicon		4078290	0					
ANR	4085112	UnaryOperator	&		4078290	0					
ANR	4085113	Identifier	scr_ansicon		4078290	1					
ANR	4085114	Argument	"""Use ANSICON mode or not on Windows"""		4078290	3					
ANR	4085115	PrimaryExpression	"""Use ANSICON mode or not on Windows"""		4078290	0					
ANR	4085116	ExpressionStatement	"SETPREF ( ""scr.responsive"" , ""true"" , ""Auto-adjust Visual depending on screen (e.g. unset asm.bytes)"" )"	3446:1:119800:119899	4078290	575	True				
ANR	4085117	CallExpression	"SETPREF ( ""scr.responsive"" , ""true"" , ""Auto-adjust Visual depending on screen (e.g. unset asm.bytes)"" )"		4078290	0					
ANR	4085118	Callee	SETPREF		4078290	0					
ANR	4085119	Identifier	SETPREF		4078290	0					
ANR	4085120	ArgumentList	"""scr.responsive"""		4078290	1					
ANR	4085121	Argument	"""scr.responsive"""		4078290	0					
ANR	4085122	PrimaryExpression	"""scr.responsive"""		4078290	0					
ANR	4085123	Argument	"""true"""		4078290	1					
ANR	4085124	PrimaryExpression	"""true"""		4078290	0					
ANR	4085125	Argument	"""Auto-adjust Visual depending on screen (e.g. unset asm.bytes)"""		4078290	2					
ANR	4085126	PrimaryExpression	"""Auto-adjust Visual depending on screen (e.g. unset asm.bytes)"""		4078290	0					
ANR	4085127	ExpressionStatement	"SETI ( ""scr.wheel.speed"" , 1 , ""Mouse wheel speed"" )"	3447:1:119902:119950	4078290	576	True				
ANR	4085128	CallExpression	"SETI ( ""scr.wheel.speed"" , 1 , ""Mouse wheel speed"" )"		4078290	0					
ANR	4085129	Callee	SETI		4078290	0					
ANR	4085130	Identifier	SETI		4078290	0					
ANR	4085131	ArgumentList	"""scr.wheel.speed"""		4078290	1					
ANR	4085132	Argument	"""scr.wheel.speed"""		4078290	0					
ANR	4085133	PrimaryExpression	"""scr.wheel.speed"""		4078290	0					
ANR	4085134	Argument	1		4078290	1					
ANR	4085135	PrimaryExpression	1		4078290	0					
ANR	4085136	Argument	"""Mouse wheel speed"""		4078290	2					
ANR	4085137	PrimaryExpression	"""Mouse wheel speed"""		4078290	0					
ANR	4085138	ExpressionStatement	"SETPREF ( ""scr.wheel.nkey"" , ""false"" , ""Use sn/sp and scr.nkey on wheel instead of scroll"" )"	3452:1:120120:120208	4078290	577	True				
ANR	4085139	CallExpression	"SETPREF ( ""scr.wheel.nkey"" , ""false"" , ""Use sn/sp and scr.nkey on wheel instead of scroll"" )"		4078290	0					
ANR	4085140	Callee	SETPREF		4078290	0					
ANR	4085141	Identifier	SETPREF		4078290	0					
ANR	4085142	ArgumentList	"""scr.wheel.nkey"""		4078290	1					
ANR	4085143	Argument	"""scr.wheel.nkey"""		4078290	0					
ANR	4085144	PrimaryExpression	"""scr.wheel.nkey"""		4078290	0					
ANR	4085145	Argument	"""false"""		4078290	1					
ANR	4085146	PrimaryExpression	"""false"""		4078290	0					
ANR	4085147	Argument	"""Use sn/sp and scr.nkey on wheel instead of scroll"""		4078290	2					
ANR	4085148	PrimaryExpression	"""Use sn/sp and scr.nkey on wheel instead of scroll"""		4078290	0					
ANR	4085149	ExpressionStatement	"SETPREF ( ""scr.wheel"" , ""true"" , ""Mouse wheel in Visual; temporaryly disable/reenable by right click/Enter)"" )"	3454:1:120235:120341	4078290	578	True				
ANR	4085150	CallExpression	"SETPREF ( ""scr.wheel"" , ""true"" , ""Mouse wheel in Visual; temporaryly disable/reenable by right click/Enter)"" )"		4078290	0					
ANR	4085151	Callee	SETPREF		4078290	0					
ANR	4085152	Identifier	SETPREF		4078290	0					
ANR	4085153	ArgumentList	"""scr.wheel"""		4078290	1					
ANR	4085154	Argument	"""scr.wheel"""		4078290	0					
ANR	4085155	PrimaryExpression	"""scr.wheel"""		4078290	0					
ANR	4085156	Argument	"""true"""		4078290	1					
ANR	4085157	PrimaryExpression	"""true"""		4078290	0					
ANR	4085158	Argument	"""Mouse wheel in Visual; temporaryly disable/reenable by right click/Enter)"""		4078290	2					
ANR	4085159	PrimaryExpression	"""Mouse wheel in Visual; temporaryly disable/reenable by right click/Enter)"""		4078290	0					
ANR	4085160	ExpressionStatement	"SETPREF ( ""scr.layout"" , """" , ""Name of the selected layout"" )"	3455:1:120344:120401	4078290	579	True				
ANR	4085161	CallExpression	"SETPREF ( ""scr.layout"" , """" , ""Name of the selected layout"" )"		4078290	0					
ANR	4085162	Callee	SETPREF		4078290	0					
ANR	4085163	Identifier	SETPREF		4078290	0					
ANR	4085164	ArgumentList	"""scr.layout"""		4078290	1					
ANR	4085165	Argument	"""scr.layout"""		4078290	0					
ANR	4085166	PrimaryExpression	"""scr.layout"""		4078290	0					
ANR	4085167	Argument	""""""		4078290	1					
ANR	4085168	PrimaryExpression	""""""		4078290	0					
ANR	4085169	Argument	"""Name of the selected layout"""		4078290	2					
ANR	4085170	PrimaryExpression	"""Name of the selected layout"""		4078290	0					
ANR	4085171	ExpressionStatement	"SETCB ( ""scr.breakword"" , """" , & cb_scrbreakword , ""Emulate console break (^C) when a word is printed (useful for pD)"" )"	3457:1:120507:120621	4078290	580	True				
ANR	4085172	CallExpression	"SETCB ( ""scr.breakword"" , """" , & cb_scrbreakword , ""Emulate console break (^C) when a word is printed (useful for pD)"" )"		4078290	0					
ANR	4085173	Callee	SETCB		4078290	0					
ANR	4085174	Identifier	SETCB		4078290	0					
ANR	4085175	ArgumentList	"""scr.breakword"""		4078290	1					
ANR	4085176	Argument	"""scr.breakword"""		4078290	0					
ANR	4085177	PrimaryExpression	"""scr.breakword"""		4078290	0					
ANR	4085178	Argument	""""""		4078290	1					
ANR	4085179	PrimaryExpression	""""""		4078290	0					
ANR	4085180	Argument	& cb_scrbreakword		4078290	2					
ANR	4085181	UnaryOperationExpression	& cb_scrbreakword		4078290	0					
ANR	4085182	UnaryOperator	&		4078290	0					
ANR	4085183	Identifier	cb_scrbreakword		4078290	1					
ANR	4085184	Argument	"""Emulate console break (^C) when a word is printed (useful for pD)"""		4078290	3					
ANR	4085185	PrimaryExpression	"""Emulate console break (^C) when a word is printed (useful for pD)"""		4078290	0					
ANR	4085186	ExpressionStatement	"SETCB ( ""scr.breaklines"" , ""false"" , & cb_breaklines , ""Break lines in Visual instead of truncating them"" )"	3458:1:120624:120725	4078290	581	True				
ANR	4085187	CallExpression	"SETCB ( ""scr.breaklines"" , ""false"" , & cb_breaklines , ""Break lines in Visual instead of truncating them"" )"		4078290	0					
ANR	4085188	Callee	SETCB		4078290	0					
ANR	4085189	Identifier	SETCB		4078290	0					
ANR	4085190	ArgumentList	"""scr.breaklines"""		4078290	1					
ANR	4085191	Argument	"""scr.breaklines"""		4078290	0					
ANR	4085192	PrimaryExpression	"""scr.breaklines"""		4078290	0					
ANR	4085193	Argument	"""false"""		4078290	1					
ANR	4085194	PrimaryExpression	"""false"""		4078290	0					
ANR	4085195	Argument	& cb_breaklines		4078290	2					
ANR	4085196	UnaryOperationExpression	& cb_breaklines		4078290	0					
ANR	4085197	UnaryOperator	&		4078290	0					
ANR	4085198	Identifier	cb_breaklines		4078290	1					
ANR	4085199	Argument	"""Break lines in Visual instead of truncating them"""		4078290	3					
ANR	4085200	PrimaryExpression	"""Break lines in Visual instead of truncating them"""		4078290	0					
ANR	4085201	ExpressionStatement	"SETCB ( ""scr.gadgets"" , ""true"" , & cb_scr_gadgets , ""Run pg in prompt, visual and panels"" )"	3459:1:120728:120813	4078290	582	True				
ANR	4085202	CallExpression	"SETCB ( ""scr.gadgets"" , ""true"" , & cb_scr_gadgets , ""Run pg in prompt, visual and panels"" )"		4078290	0					
ANR	4085203	Callee	SETCB		4078290	0					
ANR	4085204	Identifier	SETCB		4078290	0					
ANR	4085205	ArgumentList	"""scr.gadgets"""		4078290	1					
ANR	4085206	Argument	"""scr.gadgets"""		4078290	0					
ANR	4085207	PrimaryExpression	"""scr.gadgets"""		4078290	0					
ANR	4085208	Argument	"""true"""		4078290	1					
ANR	4085209	PrimaryExpression	"""true"""		4078290	0					
ANR	4085210	Argument	& cb_scr_gadgets		4078290	2					
ANR	4085211	UnaryOperationExpression	& cb_scr_gadgets		4078290	0					
ANR	4085212	UnaryOperator	&		4078290	0					
ANR	4085213	Identifier	cb_scr_gadgets		4078290	1					
ANR	4085214	Argument	"""Run pg in prompt, visual and panels"""		4078290	3					
ANR	4085215	PrimaryExpression	"""Run pg in prompt, visual and panels"""		4078290	0					
ANR	4085216	ExpressionStatement	"SETICB ( ""scr.columns"" , 0 , & cb_scrcolumns , ""Force console column count (width)"" )"	3460:1:120816:120895	4078290	583	True				
ANR	4085217	CallExpression	"SETICB ( ""scr.columns"" , 0 , & cb_scrcolumns , ""Force console column count (width)"" )"		4078290	0					
ANR	4085218	Callee	SETICB		4078290	0					
ANR	4085219	Identifier	SETICB		4078290	0					
ANR	4085220	ArgumentList	"""scr.columns"""		4078290	1					
ANR	4085221	Argument	"""scr.columns"""		4078290	0					
ANR	4085222	PrimaryExpression	"""scr.columns"""		4078290	0					
ANR	4085223	Argument	0		4078290	1					
ANR	4085224	PrimaryExpression	0		4078290	0					
ANR	4085225	Argument	& cb_scrcolumns		4078290	2					
ANR	4085226	UnaryOperationExpression	& cb_scrcolumns		4078290	0					
ANR	4085227	UnaryOperator	&		4078290	0					
ANR	4085228	Identifier	cb_scrcolumns		4078290	1					
ANR	4085229	Argument	"""Force console column count (width)"""		4078290	3					
ANR	4085230	PrimaryExpression	"""Force console column count (width)"""		4078290	0					
ANR	4085231	ExpressionStatement	"SETPREF ( ""scr.dumpcols"" , ""false"" , ""Prefer pC commands before p ones"" )"	3461:1:120898:120967	4078290	584	True				
ANR	4085232	CallExpression	"SETPREF ( ""scr.dumpcols"" , ""false"" , ""Prefer pC commands before p ones"" )"		4078290	0					
ANR	4085233	Callee	SETPREF		4078290	0					
ANR	4085234	Identifier	SETPREF		4078290	0					
ANR	4085235	ArgumentList	"""scr.dumpcols"""		4078290	1					
ANR	4085236	Argument	"""scr.dumpcols"""		4078290	0					
ANR	4085237	PrimaryExpression	"""scr.dumpcols"""		4078290	0					
ANR	4085238	Argument	"""false"""		4078290	1					
ANR	4085239	PrimaryExpression	"""false"""		4078290	0					
ANR	4085240	Argument	"""Prefer pC commands before p ones"""		4078290	2					
ANR	4085241	PrimaryExpression	"""Prefer pC commands before p ones"""		4078290	0					
ANR	4085242	ExpressionStatement	"SETCB ( ""scr.rows"" , ""0"" , & cb_scrrows , ""Force console row count (height) "" )"	3462:1:120970:121043	4078290	585	True				
ANR	4085243	CallExpression	"SETCB ( ""scr.rows"" , ""0"" , & cb_scrrows , ""Force console row count (height) "" )"		4078290	0					
ANR	4085244	Callee	SETCB		4078290	0					
ANR	4085245	Identifier	SETCB		4078290	0					
ANR	4085246	ArgumentList	"""scr.rows"""		4078290	1					
ANR	4085247	Argument	"""scr.rows"""		4078290	0					
ANR	4085248	PrimaryExpression	"""scr.rows"""		4078290	0					
ANR	4085249	Argument	"""0"""		4078290	1					
ANR	4085250	PrimaryExpression	"""0"""		4078290	0					
ANR	4085251	Argument	& cb_scrrows		4078290	2					
ANR	4085252	UnaryOperationExpression	& cb_scrrows		4078290	0					
ANR	4085253	UnaryOperator	&		4078290	0					
ANR	4085254	Identifier	cb_scrrows		4078290	1					
ANR	4085255	Argument	"""Force console row count (height) """		4078290	3					
ANR	4085256	PrimaryExpression	"""Force console row count (height) """		4078290	0					
ANR	4085257	ExpressionStatement	"SETICB ( ""scr.rows"" , 0 , & cb_rows , ""Force console row count (height) (duplicate?)"" )"	3463:1:121046:121127	4078290	586	True				
ANR	4085258	CallExpression	"SETICB ( ""scr.rows"" , 0 , & cb_rows , ""Force console row count (height) (duplicate?)"" )"		4078290	0					
ANR	4085259	Callee	SETICB		4078290	0					
ANR	4085260	Identifier	SETICB		4078290	0					
ANR	4085261	ArgumentList	"""scr.rows"""		4078290	1					
ANR	4085262	Argument	"""scr.rows"""		4078290	0					
ANR	4085263	PrimaryExpression	"""scr.rows"""		4078290	0					
ANR	4085264	Argument	0		4078290	1					
ANR	4085265	PrimaryExpression	0		4078290	0					
ANR	4085266	Argument	& cb_rows		4078290	2					
ANR	4085267	UnaryOperationExpression	& cb_rows		4078290	0					
ANR	4085268	UnaryOperator	&		4078290	0					
ANR	4085269	Identifier	cb_rows		4078290	1					
ANR	4085270	Argument	"""Force console row count (height) (duplicate?)"""		4078290	3					
ANR	4085271	PrimaryExpression	"""Force console row count (height) (duplicate?)"""		4078290	0					
ANR	4085272	ExpressionStatement	"SETCB ( ""scr.fps"" , ""false"" , & cb_fps , ""Show FPS in Visual"" )"	3464:1:121130:121187	4078290	587	True				
ANR	4085273	CallExpression	"SETCB ( ""scr.fps"" , ""false"" , & cb_fps , ""Show FPS in Visual"" )"		4078290	0					
ANR	4085274	Callee	SETCB		4078290	0					
ANR	4085275	Identifier	SETCB		4078290	0					
ANR	4085276	ArgumentList	"""scr.fps"""		4078290	1					
ANR	4085277	Argument	"""scr.fps"""		4078290	0					
ANR	4085278	PrimaryExpression	"""scr.fps"""		4078290	0					
ANR	4085279	Argument	"""false"""		4078290	1					
ANR	4085280	PrimaryExpression	"""false"""		4078290	0					
ANR	4085281	Argument	& cb_fps		4078290	2					
ANR	4085282	UnaryOperationExpression	& cb_fps		4078290	0					
ANR	4085283	UnaryOperator	&		4078290	0					
ANR	4085284	Identifier	cb_fps		4078290	1					
ANR	4085285	Argument	"""Show FPS in Visual"""		4078290	3					
ANR	4085286	PrimaryExpression	"""Show FPS in Visual"""		4078290	0					
ANR	4085287	ExpressionStatement	"SETICB ( ""scr.fix.rows"" , 0 , & cb_fixrows , ""Workaround for Linux TTY"" )"	3465:1:121190:121257	4078290	588	True				
ANR	4085288	CallExpression	"SETICB ( ""scr.fix.rows"" , 0 , & cb_fixrows , ""Workaround for Linux TTY"" )"		4078290	0					
ANR	4085289	Callee	SETICB		4078290	0					
ANR	4085290	Identifier	SETICB		4078290	0					
ANR	4085291	ArgumentList	"""scr.fix.rows"""		4078290	1					
ANR	4085292	Argument	"""scr.fix.rows"""		4078290	0					
ANR	4085293	PrimaryExpression	"""scr.fix.rows"""		4078290	0					
ANR	4085294	Argument	0		4078290	1					
ANR	4085295	PrimaryExpression	0		4078290	0					
ANR	4085296	Argument	& cb_fixrows		4078290	2					
ANR	4085297	UnaryOperationExpression	& cb_fixrows		4078290	0					
ANR	4085298	UnaryOperator	&		4078290	0					
ANR	4085299	Identifier	cb_fixrows		4078290	1					
ANR	4085300	Argument	"""Workaround for Linux TTY"""		4078290	3					
ANR	4085301	PrimaryExpression	"""Workaround for Linux TTY"""		4078290	0					
ANR	4085302	ExpressionStatement	"SETICB ( ""scr.fix.columns"" , 0 , & cb_fixcolumns , ""Workaround for Prompt iOS SSH client"" )"	3466:1:121260:121345	4078290	589	True				
ANR	4085303	CallExpression	"SETICB ( ""scr.fix.columns"" , 0 , & cb_fixcolumns , ""Workaround for Prompt iOS SSH client"" )"		4078290	0					
ANR	4085304	Callee	SETICB		4078290	0					
ANR	4085305	Identifier	SETICB		4078290	0					
ANR	4085306	ArgumentList	"""scr.fix.columns"""		4078290	1					
ANR	4085307	Argument	"""scr.fix.columns"""		4078290	0					
ANR	4085308	PrimaryExpression	"""scr.fix.columns"""		4078290	0					
ANR	4085309	Argument	0		4078290	1					
ANR	4085310	PrimaryExpression	0		4078290	0					
ANR	4085311	Argument	& cb_fixcolumns		4078290	2					
ANR	4085312	UnaryOperationExpression	& cb_fixcolumns		4078290	0					
ANR	4085313	UnaryOperator	&		4078290	0					
ANR	4085314	Identifier	cb_fixcolumns		4078290	1					
ANR	4085315	Argument	"""Workaround for Prompt iOS SSH client"""		4078290	3					
ANR	4085316	PrimaryExpression	"""Workaround for Prompt iOS SSH client"""		4078290	0					
ANR	4085317	ExpressionStatement	"SETCB ( ""scr.highlight"" , """" , & cb_scrhighlight , ""Highlight that word at RCons level"" )"	3467:1:121348:121431	4078290	590	True				
ANR	4085318	CallExpression	"SETCB ( ""scr.highlight"" , """" , & cb_scrhighlight , ""Highlight that word at RCons level"" )"		4078290	0					
ANR	4085319	Callee	SETCB		4078290	0					
ANR	4085320	Identifier	SETCB		4078290	0					
ANR	4085321	ArgumentList	"""scr.highlight"""		4078290	1					
ANR	4085322	Argument	"""scr.highlight"""		4078290	0					
ANR	4085323	PrimaryExpression	"""scr.highlight"""		4078290	0					
ANR	4085324	Argument	""""""		4078290	1					
ANR	4085325	PrimaryExpression	""""""		4078290	0					
ANR	4085326	Argument	& cb_scrhighlight		4078290	2					
ANR	4085327	UnaryOperationExpression	& cb_scrhighlight		4078290	0					
ANR	4085328	UnaryOperator	&		4078290	0					
ANR	4085329	Identifier	cb_scrhighlight		4078290	1					
ANR	4085330	Argument	"""Highlight that word at RCons level"""		4078290	3					
ANR	4085331	PrimaryExpression	"""Highlight that word at RCons level"""		4078290	0					
ANR	4085332	ExpressionStatement	"SETCB ( ""scr.interactive"" , ""true"" , & cb_scrint , ""Start in interactive mode"" )"	3468:1:121434:121508	4078290	591	True				
ANR	4085333	CallExpression	"SETCB ( ""scr.interactive"" , ""true"" , & cb_scrint , ""Start in interactive mode"" )"		4078290	0					
ANR	4085334	Callee	SETCB		4078290	0					
ANR	4085335	Identifier	SETCB		4078290	0					
ANR	4085336	ArgumentList	"""scr.interactive"""		4078290	1					
ANR	4085337	Argument	"""scr.interactive"""		4078290	0					
ANR	4085338	PrimaryExpression	"""scr.interactive"""		4078290	0					
ANR	4085339	Argument	"""true"""		4078290	1					
ANR	4085340	PrimaryExpression	"""true"""		4078290	0					
ANR	4085341	Argument	& cb_scrint		4078290	2					
ANR	4085342	UnaryOperationExpression	& cb_scrint		4078290	0					
ANR	4085343	UnaryOperator	&		4078290	0					
ANR	4085344	Identifier	cb_scrint		4078290	1					
ANR	4085345	Argument	"""Start in interactive mode"""		4078290	3					
ANR	4085346	PrimaryExpression	"""Start in interactive mode"""		4078290	0					
ANR	4085347	ExpressionStatement	"SETCB ( ""scr.bgfill"" , ""false"" , & cb_scr_bgfill , ""Fill background for ascii art when possible"" )"	3469:1:121511:121603	4078290	592	True				
ANR	4085348	CallExpression	"SETCB ( ""scr.bgfill"" , ""false"" , & cb_scr_bgfill , ""Fill background for ascii art when possible"" )"		4078290	0					
ANR	4085349	Callee	SETCB		4078290	0					
ANR	4085350	Identifier	SETCB		4078290	0					
ANR	4085351	ArgumentList	"""scr.bgfill"""		4078290	1					
ANR	4085352	Argument	"""scr.bgfill"""		4078290	0					
ANR	4085353	PrimaryExpression	"""scr.bgfill"""		4078290	0					
ANR	4085354	Argument	"""false"""		4078290	1					
ANR	4085355	PrimaryExpression	"""false"""		4078290	0					
ANR	4085356	Argument	& cb_scr_bgfill		4078290	2					
ANR	4085357	UnaryOperationExpression	& cb_scr_bgfill		4078290	0					
ANR	4085358	UnaryOperator	&		4078290	0					
ANR	4085359	Identifier	cb_scr_bgfill		4078290	1					
ANR	4085360	Argument	"""Fill background for ascii art when possible"""		4078290	3					
ANR	4085361	PrimaryExpression	"""Fill background for ascii art when possible"""		4078290	0					
ANR	4085362	ExpressionStatement	"SETI ( ""scr.feedback"" , 1 , ""Set visual feedback level (1=arrow on jump, 2=every key (useful for videos))"" )"	3470:1:121606:121710	4078290	593	True				
ANR	4085363	CallExpression	"SETI ( ""scr.feedback"" , 1 , ""Set visual feedback level (1=arrow on jump, 2=every key (useful for videos))"" )"		4078290	0					
ANR	4085364	Callee	SETI		4078290	0					
ANR	4085365	Identifier	SETI		4078290	0					
ANR	4085366	ArgumentList	"""scr.feedback"""		4078290	1					
ANR	4085367	Argument	"""scr.feedback"""		4078290	0					
ANR	4085368	PrimaryExpression	"""scr.feedback"""		4078290	0					
ANR	4085369	Argument	1		4078290	1					
ANR	4085370	PrimaryExpression	1		4078290	0					
ANR	4085371	Argument	"""Set visual feedback level (1=arrow on jump, 2=every key (useful for videos))"""		4078290	2					
ANR	4085372	PrimaryExpression	"""Set visual feedback level (1=arrow on jump, 2=every key (useful for videos))"""		4078290	0					
ANR	4085373	ExpressionStatement	"SETCB ( ""scr.html"" , ""false"" , & cb_scrhtml , ""Disassembly uses HTML syntax"" )"	3471:1:121713:121785	4078290	594	True				
ANR	4085374	CallExpression	"SETCB ( ""scr.html"" , ""false"" , & cb_scrhtml , ""Disassembly uses HTML syntax"" )"		4078290	0					
ANR	4085375	Callee	SETCB		4078290	0					
ANR	4085376	Identifier	SETCB		4078290	0					
ANR	4085377	ArgumentList	"""scr.html"""		4078290	1					
ANR	4085378	Argument	"""scr.html"""		4078290	0					
ANR	4085379	PrimaryExpression	"""scr.html"""		4078290	0					
ANR	4085380	Argument	"""false"""		4078290	1					
ANR	4085381	PrimaryExpression	"""false"""		4078290	0					
ANR	4085382	Argument	& cb_scrhtml		4078290	2					
ANR	4085383	UnaryOperationExpression	& cb_scrhtml		4078290	0					
ANR	4085384	UnaryOperator	&		4078290	0					
ANR	4085385	Identifier	cb_scrhtml		4078290	1					
ANR	4085386	Argument	"""Disassembly uses HTML syntax"""		4078290	3					
ANR	4085387	PrimaryExpression	"""Disassembly uses HTML syntax"""		4078290	0					
ANR	4085388	ExpressionStatement	"n = NODECB ( ""scr.nkey"" , ""flag"" , & cb_scrnkey )"	3472:1:121788:121832	4078290	595	True				
ANR	4085389	AssignmentExpression	"n = NODECB ( ""scr.nkey"" , ""flag"" , & cb_scrnkey )"		4078290	0		=			
ANR	4085390	Identifier	n		4078290	0					
ANR	4085391	CallExpression	"NODECB ( ""scr.nkey"" , ""flag"" , & cb_scrnkey )"		4078290	1					
ANR	4085392	Callee	NODECB		4078290	0					
ANR	4085393	Identifier	NODECB		4078290	0					
ANR	4085394	ArgumentList	"""scr.nkey"""		4078290	1					
ANR	4085395	Argument	"""scr.nkey"""		4078290	0					
ANR	4085396	PrimaryExpression	"""scr.nkey"""		4078290	0					
ANR	4085397	Argument	"""flag"""		4078290	1					
ANR	4085398	PrimaryExpression	"""flag"""		4078290	0					
ANR	4085399	Argument	& cb_scrnkey		4078290	2					
ANR	4085400	UnaryOperationExpression	& cb_scrnkey		4078290	0					
ANR	4085401	UnaryOperator	&		4078290	0					
ANR	4085402	Identifier	cb_scrnkey		4078290	1					
ANR	4085403	ExpressionStatement	"SETDESC ( n , ""Select visual seek mode (affects n/N visual commands)"" )"	3473:1:121835:121903	4078290	596	True				
ANR	4085404	CallExpression	"SETDESC ( n , ""Select visual seek mode (affects n/N visual commands)"" )"		4078290	0					
ANR	4085405	Callee	SETDESC		4078290	0					
ANR	4085406	Identifier	SETDESC		4078290	0					
ANR	4085407	ArgumentList	n		4078290	1					
ANR	4085408	Argument	n		4078290	0					
ANR	4085409	Identifier	n		4078290	0					
ANR	4085410	Argument	"""Select visual seek mode (affects n/N visual commands)"""		4078290	1					
ANR	4085411	PrimaryExpression	"""Select visual seek mode (affects n/N visual commands)"""		4078290	0					
ANR	4085412	ExpressionStatement	"SETOPTIONS ( n , ""fun"" , ""hit"" , ""flag"" , NULL )"	3474:1:121906:121948	4078290	597	True				
ANR	4085413	CallExpression	"SETOPTIONS ( n , ""fun"" , ""hit"" , ""flag"" , NULL )"		4078290	0					
ANR	4085414	Callee	SETOPTIONS		4078290	0					
ANR	4085415	Identifier	SETOPTIONS		4078290	0					
ANR	4085416	ArgumentList	n		4078290	1					
ANR	4085417	Argument	n		4078290	0					
ANR	4085418	Identifier	n		4078290	0					
ANR	4085419	Argument	"""fun"""		4078290	1					
ANR	4085420	PrimaryExpression	"""fun"""		4078290	0					
ANR	4085421	Argument	"""hit"""		4078290	2					
ANR	4085422	PrimaryExpression	"""hit"""		4078290	0					
ANR	4085423	Argument	"""flag"""		4078290	3					
ANR	4085424	PrimaryExpression	"""flag"""		4078290	0					
ANR	4085425	Argument	NULL		4078290	4					
ANR	4085426	Identifier	NULL		4078290	0					
ANR	4085427	ExpressionStatement	"SETCB ( ""scr.pager"" , """" , & cb_pager , ""System program (or '..') to use when output exceeds screen boundaries"" )"	3475:1:121951:122058	4078290	598	True				
ANR	4085428	CallExpression	"SETCB ( ""scr.pager"" , """" , & cb_pager , ""System program (or '..') to use when output exceeds screen boundaries"" )"		4078290	0					
ANR	4085429	Callee	SETCB		4078290	0					
ANR	4085430	Identifier	SETCB		4078290	0					
ANR	4085431	ArgumentList	"""scr.pager"""		4078290	1					
ANR	4085432	Argument	"""scr.pager"""		4078290	0					
ANR	4085433	PrimaryExpression	"""scr.pager"""		4078290	0					
ANR	4085434	Argument	""""""		4078290	1					
ANR	4085435	PrimaryExpression	""""""		4078290	0					
ANR	4085436	Argument	& cb_pager		4078290	2					
ANR	4085437	UnaryOperationExpression	& cb_pager		4078290	0					
ANR	4085438	UnaryOperator	&		4078290	0					
ANR	4085439	Identifier	cb_pager		4078290	1					
ANR	4085440	Argument	"""System program (or '..') to use when output exceeds screen boundaries"""		4078290	3					
ANR	4085441	PrimaryExpression	"""System program (or '..') to use when output exceeds screen boundaries"""		4078290	0					
ANR	4085442	ExpressionStatement	"SETI ( ""scr.scrollbar"" , 0 , ""Show flagzone (fz) scrollbar in visual mode (0=no,1=right,2=top,3=bottom)"" )"	3476:1:122061:122163	4078290	599	True				
ANR	4085443	CallExpression	"SETI ( ""scr.scrollbar"" , 0 , ""Show flagzone (fz) scrollbar in visual mode (0=no,1=right,2=top,3=bottom)"" )"		4078290	0					
ANR	4085444	Callee	SETI		4078290	0					
ANR	4085445	Identifier	SETI		4078290	0					
ANR	4085446	ArgumentList	"""scr.scrollbar"""		4078290	1					
ANR	4085447	Argument	"""scr.scrollbar"""		4078290	0					
ANR	4085448	PrimaryExpression	"""scr.scrollbar"""		4078290	0					
ANR	4085449	Argument	0		4078290	1					
ANR	4085450	PrimaryExpression	0		4078290	0					
ANR	4085451	Argument	"""Show flagzone (fz) scrollbar in visual mode (0=no,1=right,2=top,3=bottom)"""		4078290	2					
ANR	4085452	PrimaryExpression	"""Show flagzone (fz) scrollbar in visual mode (0=no,1=right,2=top,3=bottom)"""		4078290	0					
ANR	4085453	ExpressionStatement	"SETPREF ( ""scr.randpal"" , ""false"" , ""Random color palete or just get the next one from 'eco'"" )"	3477:1:122166:122257	4078290	600	True				
ANR	4085454	CallExpression	"SETPREF ( ""scr.randpal"" , ""false"" , ""Random color palete or just get the next one from 'eco'"" )"		4078290	0					
ANR	4085455	Callee	SETPREF		4078290	0					
ANR	4085456	Identifier	SETPREF		4078290	0					
ANR	4085457	ArgumentList	"""scr.randpal"""		4078290	1					
ANR	4085458	Argument	"""scr.randpal"""		4078290	0					
ANR	4085459	PrimaryExpression	"""scr.randpal"""		4078290	0					
ANR	4085460	Argument	"""false"""		4078290	1					
ANR	4085461	PrimaryExpression	"""false"""		4078290	0					
ANR	4085462	Argument	"""Random color palete or just get the next one from 'eco'"""		4078290	2					
ANR	4085463	PrimaryExpression	"""Random color palete or just get the next one from 'eco'"""		4078290	0					
ANR	4085464	ExpressionStatement	"SETCB ( ""scr.highlight.grep"" , ""false"" , & cb_scr_color_grep_highlight , ""Highlight (INVERT) the grepped words"" )"	3478:1:122260:122367	4078290	601	True				
ANR	4085465	CallExpression	"SETCB ( ""scr.highlight.grep"" , ""false"" , & cb_scr_color_grep_highlight , ""Highlight (INVERT) the grepped words"" )"		4078290	0					
ANR	4085466	Callee	SETCB		4078290	0					
ANR	4085467	Identifier	SETCB		4078290	0					
ANR	4085468	ArgumentList	"""scr.highlight.grep"""		4078290	1					
ANR	4085469	Argument	"""scr.highlight.grep"""		4078290	0					
ANR	4085470	PrimaryExpression	"""scr.highlight.grep"""		4078290	0					
ANR	4085471	Argument	"""false"""		4078290	1					
ANR	4085472	PrimaryExpression	"""false"""		4078290	0					
ANR	4085473	Argument	& cb_scr_color_grep_highlight		4078290	2					
ANR	4085474	UnaryOperationExpression	& cb_scr_color_grep_highlight		4078290	0					
ANR	4085475	UnaryOperator	&		4078290	0					
ANR	4085476	Identifier	cb_scr_color_grep_highlight		4078290	1					
ANR	4085477	Argument	"""Highlight (INVERT) the grepped words"""		4078290	3					
ANR	4085478	PrimaryExpression	"""Highlight (INVERT) the grepped words"""		4078290	0					
ANR	4085479	ExpressionStatement	"SETPREF ( ""scr.prompt.file"" , ""false"" , ""Show user prompt file (used by r2 -q)"" )"	3479:1:122370:122447	4078290	602	True				
ANR	4085480	CallExpression	"SETPREF ( ""scr.prompt.file"" , ""false"" , ""Show user prompt file (used by r2 -q)"" )"		4078290	0					
ANR	4085481	Callee	SETPREF		4078290	0					
ANR	4085482	Identifier	SETPREF		4078290	0					
ANR	4085483	ArgumentList	"""scr.prompt.file"""		4078290	1					
ANR	4085484	Argument	"""scr.prompt.file"""		4078290	0					
ANR	4085485	PrimaryExpression	"""scr.prompt.file"""		4078290	0					
ANR	4085486	Argument	"""false"""		4078290	1					
ANR	4085487	PrimaryExpression	"""false"""		4078290	0					
ANR	4085488	Argument	"""Show user prompt file (used by r2 -q)"""		4078290	2					
ANR	4085489	PrimaryExpression	"""Show user prompt file (used by r2 -q)"""		4078290	0					
ANR	4085490	ExpressionStatement	"SETPREF ( ""scr.prompt.flag"" , ""false"" , ""Show flag name in the prompt"" )"	3480:1:122450:122518	4078290	603	True				
ANR	4085491	CallExpression	"SETPREF ( ""scr.prompt.flag"" , ""false"" , ""Show flag name in the prompt"" )"		4078290	0					
ANR	4085492	Callee	SETPREF		4078290	0					
ANR	4085493	Identifier	SETPREF		4078290	0					
ANR	4085494	ArgumentList	"""scr.prompt.flag"""		4078290	1					
ANR	4085495	Argument	"""scr.prompt.flag"""		4078290	0					
ANR	4085496	PrimaryExpression	"""scr.prompt.flag"""		4078290	0					
ANR	4085497	Argument	"""false"""		4078290	1					
ANR	4085498	PrimaryExpression	"""false"""		4078290	0					
ANR	4085499	Argument	"""Show flag name in the prompt"""		4078290	2					
ANR	4085500	PrimaryExpression	"""Show flag name in the prompt"""		4078290	0					
ANR	4085501	ExpressionStatement	"SETPREF ( ""scr.prompt.sect"" , ""false"" , ""Show section name in the prompt"" )"	3481:1:122521:122592	4078290	604	True				
ANR	4085502	CallExpression	"SETPREF ( ""scr.prompt.sect"" , ""false"" , ""Show section name in the prompt"" )"		4078290	0					
ANR	4085503	Callee	SETPREF		4078290	0					
ANR	4085504	Identifier	SETPREF		4078290	0					
ANR	4085505	ArgumentList	"""scr.prompt.sect"""		4078290	1					
ANR	4085506	Argument	"""scr.prompt.sect"""		4078290	0					
ANR	4085507	PrimaryExpression	"""scr.prompt.sect"""		4078290	0					
ANR	4085508	Argument	"""false"""		4078290	1					
ANR	4085509	PrimaryExpression	"""false"""		4078290	0					
ANR	4085510	Argument	"""Show section name in the prompt"""		4078290	2					
ANR	4085511	PrimaryExpression	"""Show section name in the prompt"""		4078290	0					
ANR	4085512	ExpressionStatement	"SETPREF ( ""scr.tts"" , ""false"" , ""Use tts if available by a command (see ic)"" )"	3482:1:122595:122669	4078290	605	True				
ANR	4085513	CallExpression	"SETPREF ( ""scr.tts"" , ""false"" , ""Use tts if available by a command (see ic)"" )"		4078290	0					
ANR	4085514	Callee	SETPREF		4078290	0					
ANR	4085515	Identifier	SETPREF		4078290	0					
ANR	4085516	ArgumentList	"""scr.tts"""		4078290	1					
ANR	4085517	Argument	"""scr.tts"""		4078290	0					
ANR	4085518	PrimaryExpression	"""scr.tts"""		4078290	0					
ANR	4085519	Argument	"""false"""		4078290	1					
ANR	4085520	PrimaryExpression	"""false"""		4078290	0					
ANR	4085521	Argument	"""Use tts if available by a command (see ic)"""		4078290	2					
ANR	4085522	PrimaryExpression	"""Use tts if available by a command (see ic)"""		4078290	0					
ANR	4085523	ExpressionStatement	"SETCB ( ""scr.hist.block"" , ""true"" , & cb_scr_histblock , ""Use blocks for histogram"" )"	3483:1:122672:122751	4078290	606	True				
ANR	4085524	CallExpression	"SETCB ( ""scr.hist.block"" , ""true"" , & cb_scr_histblock , ""Use blocks for histogram"" )"		4078290	0					
ANR	4085525	Callee	SETCB		4078290	0					
ANR	4085526	Identifier	SETCB		4078290	0					
ANR	4085527	ArgumentList	"""scr.hist.block"""		4078290	1					
ANR	4085528	Argument	"""scr.hist.block"""		4078290	0					
ANR	4085529	PrimaryExpression	"""scr.hist.block"""		4078290	0					
ANR	4085530	Argument	"""true"""		4078290	1					
ANR	4085531	PrimaryExpression	"""true"""		4078290	0					
ANR	4085532	Argument	& cb_scr_histblock		4078290	2					
ANR	4085533	UnaryOperationExpression	& cb_scr_histblock		4078290	0					
ANR	4085534	UnaryOperator	&		4078290	0					
ANR	4085535	Identifier	cb_scr_histblock		4078290	1					
ANR	4085536	Argument	"""Use blocks for histogram"""		4078290	3					
ANR	4085537	PrimaryExpression	"""Use blocks for histogram"""		4078290	0					
ANR	4085538	ExpressionStatement	"SETCB ( ""scr.prompt"" , ""true"" , & cb_scrprompt , ""Show user prompt (used by r2 -q)"" )"	3484:1:122754:122833	4078290	607	True				
ANR	4085539	CallExpression	"SETCB ( ""scr.prompt"" , ""true"" , & cb_scrprompt , ""Show user prompt (used by r2 -q)"" )"		4078290	0					
ANR	4085540	Callee	SETCB		4078290	0					
ANR	4085541	Identifier	SETCB		4078290	0					
ANR	4085542	ArgumentList	"""scr.prompt"""		4078290	1					
ANR	4085543	Argument	"""scr.prompt"""		4078290	0					
ANR	4085544	PrimaryExpression	"""scr.prompt"""		4078290	0					
ANR	4085545	Argument	"""true"""		4078290	1					
ANR	4085546	PrimaryExpression	"""true"""		4078290	0					
ANR	4085547	Argument	& cb_scrprompt		4078290	2					
ANR	4085548	UnaryOperationExpression	& cb_scrprompt		4078290	0					
ANR	4085549	UnaryOperator	&		4078290	0					
ANR	4085550	Identifier	cb_scrprompt		4078290	1					
ANR	4085551	Argument	"""Show user prompt (used by r2 -q)"""		4078290	3					
ANR	4085552	PrimaryExpression	"""Show user prompt (used by r2 -q)"""		4078290	0					
ANR	4085553	ExpressionStatement	"SETCB ( ""scr.tee"" , """" , & cb_teefile , ""Pipe output to file of this name"" )"	3485:1:122836:122906	4078290	608	True				
ANR	4085554	CallExpression	"SETCB ( ""scr.tee"" , """" , & cb_teefile , ""Pipe output to file of this name"" )"		4078290	0					
ANR	4085555	Callee	SETCB		4078290	0					
ANR	4085556	Identifier	SETCB		4078290	0					
ANR	4085557	ArgumentList	"""scr.tee"""		4078290	1					
ANR	4085558	Argument	"""scr.tee"""		4078290	0					
ANR	4085559	PrimaryExpression	"""scr.tee"""		4078290	0					
ANR	4085560	Argument	""""""		4078290	1					
ANR	4085561	PrimaryExpression	""""""		4078290	0					
ANR	4085562	Argument	& cb_teefile		4078290	2					
ANR	4085563	UnaryOperationExpression	& cb_teefile		4078290	0					
ANR	4085564	UnaryOperator	&		4078290	0					
ANR	4085565	Identifier	cb_teefile		4078290	1					
ANR	4085566	Argument	"""Pipe output to file of this name"""		4078290	3					
ANR	4085567	PrimaryExpression	"""Pipe output to file of this name"""		4078290	0					
ANR	4085568	ExpressionStatement	"SETPREF ( ""scr.seek"" , """" , ""Seek to the specified address on startup"" )"	3486:1:122909:122977	4078290	609	True				
ANR	4085569	CallExpression	"SETPREF ( ""scr.seek"" , """" , ""Seek to the specified address on startup"" )"		4078290	0					
ANR	4085570	Callee	SETPREF		4078290	0					
ANR	4085571	Identifier	SETPREF		4078290	0					
ANR	4085572	ArgumentList	"""scr.seek"""		4078290	1					
ANR	4085573	Argument	"""scr.seek"""		4078290	0					
ANR	4085574	PrimaryExpression	"""scr.seek"""		4078290	0					
ANR	4085575	Argument	""""""		4078290	1					
ANR	4085576	PrimaryExpression	""""""		4078290	0					
ANR	4085577	Argument	"""Seek to the specified address on startup"""		4078290	2					
ANR	4085578	PrimaryExpression	"""Seek to the specified address on startup"""		4078290	0					
ANR	4085579	ExpressionStatement	"SETICB ( ""scr.color"" , ( core -> print -> flags & R_PRINT_FLAGS_COLOR ) ? COLOR_MODE_16 : COLOR_MODE_DISABLED , & cb_color , ""Enable colors (0: none, 1: ansi, 2: 256 colors, 3: truecolor)"" )"	3487:1:122980:123152	4078290	610	True				
ANR	4085580	CallExpression	"SETICB ( ""scr.color"" , ( core -> print -> flags & R_PRINT_FLAGS_COLOR ) ? COLOR_MODE_16 : COLOR_MODE_DISABLED , & cb_color , ""Enable colors (0: none, 1: ansi, 2: 256 colors, 3: truecolor)"" )"		4078290	0					
ANR	4085581	Callee	SETICB		4078290	0					
ANR	4085582	Identifier	SETICB		4078290	0					
ANR	4085583	ArgumentList	"""scr.color"""		4078290	1					
ANR	4085584	Argument	"""scr.color"""		4078290	0					
ANR	4085585	PrimaryExpression	"""scr.color"""		4078290	0					
ANR	4085586	Argument	( core -> print -> flags & R_PRINT_FLAGS_COLOR ) ? COLOR_MODE_16 : COLOR_MODE_DISABLED		4078290	1					
ANR	4085587	ConditionalExpression	( core -> print -> flags & R_PRINT_FLAGS_COLOR ) ? COLOR_MODE_16 : COLOR_MODE_DISABLED		4078290	0					
ANR	4085588	Condition	core -> print -> flags & R_PRINT_FLAGS_COLOR		4078290	0					
ANR	4085589	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COLOR		4078290	0		&			
ANR	4085590	PtrMemberAccess	core -> print -> flags		4078290	0					
ANR	4085591	PtrMemberAccess	core -> print		4078290	0					
ANR	4085592	Identifier	core		4078290	0					
ANR	4085593	Identifier	print		4078290	1					
ANR	4085594	Identifier	flags		4078290	1					
ANR	4085595	Identifier	R_PRINT_FLAGS_COLOR		4078290	1					
ANR	4085596	Identifier	COLOR_MODE_16		4078290	1					
ANR	4085597	Identifier	COLOR_MODE_DISABLED		4078290	2					
ANR	4085598	Argument	& cb_color		4078290	2					
ANR	4085599	UnaryOperationExpression	& cb_color		4078290	0					
ANR	4085600	UnaryOperator	&		4078290	0					
ANR	4085601	Identifier	cb_color		4078290	1					
ANR	4085602	Argument	"""Enable colors (0: none, 1: ansi, 2: 256 colors, 3: truecolor)"""		4078290	3					
ANR	4085603	PrimaryExpression	"""Enable colors (0: none, 1: ansi, 2: 256 colors, 3: truecolor)"""		4078290	0					
ANR	4085604	ExpressionStatement	"r_config_set_getter ( cfg , ""scr.color"" , ( RConfigCallback ) cb_color_getter )"	3488:1:123155:123227	4078290	611	True				
ANR	4085605	CallExpression	"r_config_set_getter ( cfg , ""scr.color"" , ( RConfigCallback ) cb_color_getter )"		4078290	0					
ANR	4085606	Callee	r_config_set_getter		4078290	0					
ANR	4085607	Identifier	r_config_set_getter		4078290	0					
ANR	4085608	ArgumentList	cfg		4078290	1					
ANR	4085609	Argument	cfg		4078290	0					
ANR	4085610	Identifier	cfg		4078290	0					
ANR	4085611	Argument	"""scr.color"""		4078290	1					
ANR	4085612	PrimaryExpression	"""scr.color"""		4078290	0					
ANR	4085613	Argument	( RConfigCallback ) cb_color_getter		4078290	2					
ANR	4085614	CastExpression	( RConfigCallback ) cb_color_getter		4078290	0					
ANR	4085615	CastTarget	RConfigCallback		4078290	0					
ANR	4085616	Identifier	cb_color_getter		4078290	1					
ANR	4085617	ExpressionStatement	"SETCB ( ""scr.color.grep"" , ""false"" , & cb_scr_color_grep , ""Enable colors when using ~grep"" )"	3489:1:123230:123317	4078290	612	True				
ANR	4085618	CallExpression	"SETCB ( ""scr.color.grep"" , ""false"" , & cb_scr_color_grep , ""Enable colors when using ~grep"" )"		4078290	0					
ANR	4085619	Callee	SETCB		4078290	0					
ANR	4085620	Identifier	SETCB		4078290	0					
ANR	4085621	ArgumentList	"""scr.color.grep"""		4078290	1					
ANR	4085622	Argument	"""scr.color.grep"""		4078290	0					
ANR	4085623	PrimaryExpression	"""scr.color.grep"""		4078290	0					
ANR	4085624	Argument	"""false"""		4078290	1					
ANR	4085625	PrimaryExpression	"""false"""		4078290	0					
ANR	4085626	Argument	& cb_scr_color_grep		4078290	2					
ANR	4085627	UnaryOperationExpression	& cb_scr_color_grep		4078290	0					
ANR	4085628	UnaryOperator	&		4078290	0					
ANR	4085629	Identifier	cb_scr_color_grep		4078290	1					
ANR	4085630	Argument	"""Enable colors when using ~grep"""		4078290	3					
ANR	4085631	PrimaryExpression	"""Enable colors when using ~grep"""		4078290	0					
ANR	4085632	ExpressionStatement	"SETPREF ( ""scr.color.pipe"" , ""false"" , ""Enable colors when using pipes"" )"	3490:1:123320:123389	4078290	613	True				
ANR	4085633	CallExpression	"SETPREF ( ""scr.color.pipe"" , ""false"" , ""Enable colors when using pipes"" )"		4078290	0					
ANR	4085634	Callee	SETPREF		4078290	0					
ANR	4085635	Identifier	SETPREF		4078290	0					
ANR	4085636	ArgumentList	"""scr.color.pipe"""		4078290	1					
ANR	4085637	Argument	"""scr.color.pipe"""		4078290	0					
ANR	4085638	PrimaryExpression	"""scr.color.pipe"""		4078290	0					
ANR	4085639	Argument	"""false"""		4078290	1					
ANR	4085640	PrimaryExpression	"""false"""		4078290	0					
ANR	4085641	Argument	"""Enable colors when using pipes"""		4078290	2					
ANR	4085642	PrimaryExpression	"""Enable colors when using pipes"""		4078290	0					
ANR	4085643	ExpressionStatement	"SETPREF ( ""scr.color.ops"" , ""true"" , ""Colorize numbers and registers in opcodes"" )"	3491:1:123392:123470	4078290	614	True				
ANR	4085644	CallExpression	"SETPREF ( ""scr.color.ops"" , ""true"" , ""Colorize numbers and registers in opcodes"" )"		4078290	0					
ANR	4085645	Callee	SETPREF		4078290	0					
ANR	4085646	Identifier	SETPREF		4078290	0					
ANR	4085647	ArgumentList	"""scr.color.ops"""		4078290	1					
ANR	4085648	Argument	"""scr.color.ops"""		4078290	0					
ANR	4085649	PrimaryExpression	"""scr.color.ops"""		4078290	0					
ANR	4085650	Argument	"""true"""		4078290	1					
ANR	4085651	PrimaryExpression	"""true"""		4078290	0					
ANR	4085652	Argument	"""Colorize numbers and registers in opcodes"""		4078290	2					
ANR	4085653	PrimaryExpression	"""Colorize numbers and registers in opcodes"""		4078290	0					
ANR	4085654	ExpressionStatement	"SETPREF ( ""scr.color.args"" , ""true"" , ""Colorize arguments and variables of functions"" )"	3492:1:123473:123556	4078290	615	True				
ANR	4085655	CallExpression	"SETPREF ( ""scr.color.args"" , ""true"" , ""Colorize arguments and variables of functions"" )"		4078290	0					
ANR	4085656	Callee	SETPREF		4078290	0					
ANR	4085657	Identifier	SETPREF		4078290	0					
ANR	4085658	ArgumentList	"""scr.color.args"""		4078290	1					
ANR	4085659	Argument	"""scr.color.args"""		4078290	0					
ANR	4085660	PrimaryExpression	"""scr.color.args"""		4078290	0					
ANR	4085661	Argument	"""true"""		4078290	1					
ANR	4085662	PrimaryExpression	"""true"""		4078290	0					
ANR	4085663	Argument	"""Colorize arguments and variables of functions"""		4078290	2					
ANR	4085664	PrimaryExpression	"""Colorize arguments and variables of functions"""		4078290	0					
ANR	4085665	ExpressionStatement	"SETPREF ( ""scr.color.bytes"" , ""true"" , ""Colorize bytes that represent the opcodes of the instruction"" )"	3493:1:123559:123658	4078290	616	True				
ANR	4085666	CallExpression	"SETPREF ( ""scr.color.bytes"" , ""true"" , ""Colorize bytes that represent the opcodes of the instruction"" )"		4078290	0					
ANR	4085667	Callee	SETPREF		4078290	0					
ANR	4085668	Identifier	SETPREF		4078290	0					
ANR	4085669	ArgumentList	"""scr.color.bytes"""		4078290	1					
ANR	4085670	Argument	"""scr.color.bytes"""		4078290	0					
ANR	4085671	PrimaryExpression	"""scr.color.bytes"""		4078290	0					
ANR	4085672	Argument	"""true"""		4078290	1					
ANR	4085673	PrimaryExpression	"""true"""		4078290	0					
ANR	4085674	Argument	"""Colorize bytes that represent the opcodes of the instruction"""		4078290	2					
ANR	4085675	PrimaryExpression	"""Colorize bytes that represent the opcodes of the instruction"""		4078290	0					
ANR	4085676	ExpressionStatement	"SETCB ( ""scr.null"" , ""false"" , & cb_scrnull , ""Show no output"" )"	3494:1:123661:123719	4078290	617	True				
ANR	4085677	CallExpression	"SETCB ( ""scr.null"" , ""false"" , & cb_scrnull , ""Show no output"" )"		4078290	0					
ANR	4085678	Callee	SETCB		4078290	0					
ANR	4085679	Identifier	SETCB		4078290	0					
ANR	4085680	ArgumentList	"""scr.null"""		4078290	1					
ANR	4085681	Argument	"""scr.null"""		4078290	0					
ANR	4085682	PrimaryExpression	"""scr.null"""		4078290	0					
ANR	4085683	Argument	"""false"""		4078290	1					
ANR	4085684	PrimaryExpression	"""false"""		4078290	0					
ANR	4085685	Argument	& cb_scrnull		4078290	2					
ANR	4085686	UnaryOperationExpression	& cb_scrnull		4078290	0					
ANR	4085687	UnaryOperator	&		4078290	0					
ANR	4085688	Identifier	cb_scrnull		4078290	1					
ANR	4085689	Argument	"""Show no output"""		4078290	3					
ANR	4085690	PrimaryExpression	"""Show no output"""		4078290	0					
ANR	4085691	ExpressionStatement	"SETCB ( ""scr.utf8"" , r_str_bool ( r_cons_is_utf8 ( ) ) , & cb_utf8 , ""Show UTF-8 characters instead of ANSI"" )"	3495:1:123722:123822	4078290	618	True				
ANR	4085692	CallExpression	"SETCB ( ""scr.utf8"" , r_str_bool ( r_cons_is_utf8 ( ) ) , & cb_utf8 , ""Show UTF-8 characters instead of ANSI"" )"		4078290	0					
ANR	4085693	Callee	SETCB		4078290	0					
ANR	4085694	Identifier	SETCB		4078290	0					
ANR	4085695	ArgumentList	"""scr.utf8"""		4078290	1					
ANR	4085696	Argument	"""scr.utf8"""		4078290	0					
ANR	4085697	PrimaryExpression	"""scr.utf8"""		4078290	0					
ANR	4085698	Argument	r_str_bool ( r_cons_is_utf8 ( ) )		4078290	1					
ANR	4085699	CallExpression	r_str_bool ( r_cons_is_utf8 ( ) )		4078290	0					
ANR	4085700	Callee	r_str_bool		4078290	0					
ANR	4085701	Identifier	r_str_bool		4078290	0					
ANR	4085702	ArgumentList	r_cons_is_utf8 ( )		4078290	1					
ANR	4085703	Argument	r_cons_is_utf8 ( )		4078290	0					
ANR	4085704	CallExpression	r_cons_is_utf8 ( )		4078290	0					
ANR	4085705	Callee	r_cons_is_utf8		4078290	0					
ANR	4085706	Identifier	r_cons_is_utf8		4078290	0					
ANR	4085707	ArgumentList			4078290	1					
ANR	4085708	Argument	& cb_utf8		4078290	2					
ANR	4085709	UnaryOperationExpression	& cb_utf8		4078290	0					
ANR	4085710	UnaryOperator	&		4078290	0					
ANR	4085711	Identifier	cb_utf8		4078290	1					
ANR	4085712	Argument	"""Show UTF-8 characters instead of ANSI"""		4078290	3					
ANR	4085713	PrimaryExpression	"""Show UTF-8 characters instead of ANSI"""		4078290	0					
ANR	4085714	ExpressionStatement	"SETCB ( ""scr.utf8.curvy"" , ""false"" , & cb_utf8_curvy , ""Show curved UTF-8 corners (requires scr.utf8)"" )"	3496:1:123825:123923	4078290	619	True				
ANR	4085715	CallExpression	"SETCB ( ""scr.utf8.curvy"" , ""false"" , & cb_utf8_curvy , ""Show curved UTF-8 corners (requires scr.utf8)"" )"		4078290	0					
ANR	4085716	Callee	SETCB		4078290	0					
ANR	4085717	Identifier	SETCB		4078290	0					
ANR	4085718	ArgumentList	"""scr.utf8.curvy"""		4078290	1					
ANR	4085719	Argument	"""scr.utf8.curvy"""		4078290	0					
ANR	4085720	PrimaryExpression	"""scr.utf8.curvy"""		4078290	0					
ANR	4085721	Argument	"""false"""		4078290	1					
ANR	4085722	PrimaryExpression	"""false"""		4078290	0					
ANR	4085723	Argument	& cb_utf8_curvy		4078290	2					
ANR	4085724	UnaryOperationExpression	& cb_utf8_curvy		4078290	0					
ANR	4085725	UnaryOperator	&		4078290	0					
ANR	4085726	Identifier	cb_utf8_curvy		4078290	1					
ANR	4085727	Argument	"""Show curved UTF-8 corners (requires scr.utf8)"""		4078290	3					
ANR	4085728	PrimaryExpression	"""Show curved UTF-8 corners (requires scr.utf8)"""		4078290	0					
ANR	4085729	ExpressionStatement	"SETPREF ( ""scr.demo"" , ""false"" , ""Use demoscene effects if available"" )"	3497:1:123926:123993	4078290	620	True				
ANR	4085730	CallExpression	"SETPREF ( ""scr.demo"" , ""false"" , ""Use demoscene effects if available"" )"		4078290	0					
ANR	4085731	Callee	SETPREF		4078290	0					
ANR	4085732	Identifier	SETPREF		4078290	0					
ANR	4085733	ArgumentList	"""scr.demo"""		4078290	1					
ANR	4085734	Argument	"""scr.demo"""		4078290	0					
ANR	4085735	PrimaryExpression	"""scr.demo"""		4078290	0					
ANR	4085736	Argument	"""false"""		4078290	1					
ANR	4085737	PrimaryExpression	"""false"""		4078290	0					
ANR	4085738	Argument	"""Use demoscene effects if available"""		4078290	2					
ANR	4085739	PrimaryExpression	"""Use demoscene effects if available"""		4078290	0					
ANR	4085740	ExpressionStatement	"SETPREF ( ""scr.histsave"" , ""true"" , ""Always save history on exit"" )"	3498:1:123996:124059	4078290	621	True				
ANR	4085741	CallExpression	"SETPREF ( ""scr.histsave"" , ""true"" , ""Always save history on exit"" )"		4078290	0					
ANR	4085742	Callee	SETPREF		4078290	0					
ANR	4085743	Identifier	SETPREF		4078290	0					
ANR	4085744	ArgumentList	"""scr.histsave"""		4078290	1					
ANR	4085745	Argument	"""scr.histsave"""		4078290	0					
ANR	4085746	PrimaryExpression	"""scr.histsave"""		4078290	0					
ANR	4085747	Argument	"""true"""		4078290	1					
ANR	4085748	PrimaryExpression	"""true"""		4078290	0					
ANR	4085749	Argument	"""Always save history on exit"""		4078290	2					
ANR	4085750	PrimaryExpression	"""Always save history on exit"""		4078290	0					
ANR	4085751	ExpressionStatement	"n = NODECB ( ""scr.strconv"" , ""asciiesc"" , & cb_scrstrconv )"	3499:1:124062:124116	4078290	622	True				
ANR	4085752	AssignmentExpression	"n = NODECB ( ""scr.strconv"" , ""asciiesc"" , & cb_scrstrconv )"		4078290	0		=			
ANR	4085753	Identifier	n		4078290	0					
ANR	4085754	CallExpression	"NODECB ( ""scr.strconv"" , ""asciiesc"" , & cb_scrstrconv )"		4078290	1					
ANR	4085755	Callee	NODECB		4078290	0					
ANR	4085756	Identifier	NODECB		4078290	0					
ANR	4085757	ArgumentList	"""scr.strconv"""		4078290	1					
ANR	4085758	Argument	"""scr.strconv"""		4078290	0					
ANR	4085759	PrimaryExpression	"""scr.strconv"""		4078290	0					
ANR	4085760	Argument	"""asciiesc"""		4078290	1					
ANR	4085761	PrimaryExpression	"""asciiesc"""		4078290	0					
ANR	4085762	Argument	& cb_scrstrconv		4078290	2					
ANR	4085763	UnaryOperationExpression	& cb_scrstrconv		4078290	0					
ANR	4085764	UnaryOperator	&		4078290	0					
ANR	4085765	Identifier	cb_scrstrconv		4078290	1					
ANR	4085766	ExpressionStatement	"SETDESC ( n , ""Convert string before display"" )"	3500:1:124119:124163	4078290	623	True				
ANR	4085767	CallExpression	"SETDESC ( n , ""Convert string before display"" )"		4078290	0					
ANR	4085768	Callee	SETDESC		4078290	0					
ANR	4085769	Identifier	SETDESC		4078290	0					
ANR	4085770	ArgumentList	n		4078290	1					
ANR	4085771	Argument	n		4078290	0					
ANR	4085772	Identifier	n		4078290	0					
ANR	4085773	Argument	"""Convert string before display"""		4078290	1					
ANR	4085774	PrimaryExpression	"""Convert string before display"""		4078290	0					
ANR	4085775	ExpressionStatement	"SETOPTIONS ( n , ""asciiesc"" , ""asciidot"" , NULL )"	3501:1:124166:124210	4078290	624	True				
ANR	4085776	CallExpression	"SETOPTIONS ( n , ""asciiesc"" , ""asciidot"" , NULL )"		4078290	0					
ANR	4085777	Callee	SETOPTIONS		4078290	0					
ANR	4085778	Identifier	SETOPTIONS		4078290	0					
ANR	4085779	ArgumentList	n		4078290	1					
ANR	4085780	Argument	n		4078290	0					
ANR	4085781	Identifier	n		4078290	0					
ANR	4085782	Argument	"""asciiesc"""		4078290	1					
ANR	4085783	PrimaryExpression	"""asciiesc"""		4078290	0					
ANR	4085784	Argument	"""asciidot"""		4078290	2					
ANR	4085785	PrimaryExpression	"""asciidot"""		4078290	0					
ANR	4085786	Argument	NULL		4078290	3					
ANR	4085787	Identifier	NULL		4078290	0					
ANR	4085788	ExpressionStatement	"SETPREF ( ""scr.confirmquit"" , ""false"" , ""Confirm on quit"" )"	3502:1:124213:124268	4078290	625	True				
ANR	4085789	CallExpression	"SETPREF ( ""scr.confirmquit"" , ""false"" , ""Confirm on quit"" )"		4078290	0					
ANR	4085790	Callee	SETPREF		4078290	0					
ANR	4085791	Identifier	SETPREF		4078290	0					
ANR	4085792	ArgumentList	"""scr.confirmquit"""		4078290	1					
ANR	4085793	Argument	"""scr.confirmquit"""		4078290	0					
ANR	4085794	PrimaryExpression	"""scr.confirmquit"""		4078290	0					
ANR	4085795	Argument	"""false"""		4078290	1					
ANR	4085796	PrimaryExpression	"""false"""		4078290	0					
ANR	4085797	Argument	"""Confirm on quit"""		4078290	2					
ANR	4085798	PrimaryExpression	"""Confirm on quit"""		4078290	0					
ANR	4085799	ExpressionStatement	"SETCB ( ""str.escbslash"" , ""false"" , & cb_str_escbslash , ""Escape the backslash"" )"	3505:1:124283:124358	4078290	626	True				
ANR	4085800	CallExpression	"SETCB ( ""str.escbslash"" , ""false"" , & cb_str_escbslash , ""Escape the backslash"" )"		4078290	0					
ANR	4085801	Callee	SETCB		4078290	0					
ANR	4085802	Identifier	SETCB		4078290	0					
ANR	4085803	ArgumentList	"""str.escbslash"""		4078290	1					
ANR	4085804	Argument	"""str.escbslash"""		4078290	0					
ANR	4085805	PrimaryExpression	"""str.escbslash"""		4078290	0					
ANR	4085806	Argument	"""false"""		4078290	1					
ANR	4085807	PrimaryExpression	"""false"""		4078290	0					
ANR	4085808	Argument	& cb_str_escbslash		4078290	2					
ANR	4085809	UnaryOperationExpression	& cb_str_escbslash		4078290	0					
ANR	4085810	UnaryOperator	&		4078290	0					
ANR	4085811	Identifier	cb_str_escbslash		4078290	1					
ANR	4085812	Argument	"""Escape the backslash"""		4078290	3					
ANR	4085813	PrimaryExpression	"""Escape the backslash"""		4078290	0					
ANR	4085814	ExpressionStatement	"SETCB ( ""search.contiguous"" , ""true"" , & cb_contiguous , ""Accept contiguous/adjacent search hits"" )"	3508:1:124376:124469	4078290	627	True				
ANR	4085815	CallExpression	"SETCB ( ""search.contiguous"" , ""true"" , & cb_contiguous , ""Accept contiguous/adjacent search hits"" )"		4078290	0					
ANR	4085816	Callee	SETCB		4078290	0					
ANR	4085817	Identifier	SETCB		4078290	0					
ANR	4085818	ArgumentList	"""search.contiguous"""		4078290	1					
ANR	4085819	Argument	"""search.contiguous"""		4078290	0					
ANR	4085820	PrimaryExpression	"""search.contiguous"""		4078290	0					
ANR	4085821	Argument	"""true"""		4078290	1					
ANR	4085822	PrimaryExpression	"""true"""		4078290	0					
ANR	4085823	Argument	& cb_contiguous		4078290	2					
ANR	4085824	UnaryOperationExpression	& cb_contiguous		4078290	0					
ANR	4085825	UnaryOperator	&		4078290	0					
ANR	4085826	Identifier	cb_contiguous		4078290	1					
ANR	4085827	Argument	"""Accept contiguous/adjacent search hits"""		4078290	3					
ANR	4085828	PrimaryExpression	"""Accept contiguous/adjacent search hits"""		4078290	0					
ANR	4085829	ExpressionStatement	"SETICB ( ""search.align"" , 0 , & cb_searchalign , ""Only catch aligned search hits"" )"	3509:1:124472:124549	4078290	628	True				
ANR	4085830	CallExpression	"SETICB ( ""search.align"" , 0 , & cb_searchalign , ""Only catch aligned search hits"" )"		4078290	0					
ANR	4085831	Callee	SETICB		4078290	0					
ANR	4085832	Identifier	SETICB		4078290	0					
ANR	4085833	ArgumentList	"""search.align"""		4078290	1					
ANR	4085834	Argument	"""search.align"""		4078290	0					
ANR	4085835	PrimaryExpression	"""search.align"""		4078290	0					
ANR	4085836	Argument	0		4078290	1					
ANR	4085837	PrimaryExpression	0		4078290	0					
ANR	4085838	Argument	& cb_searchalign		4078290	2					
ANR	4085839	UnaryOperationExpression	& cb_searchalign		4078290	0					
ANR	4085840	UnaryOperator	&		4078290	0					
ANR	4085841	Identifier	cb_searchalign		4078290	1					
ANR	4085842	Argument	"""Only catch aligned search hits"""		4078290	3					
ANR	4085843	PrimaryExpression	"""Only catch aligned search hits"""		4078290	0					
ANR	4085844	ExpressionStatement	"SETI ( ""search.chunk"" , 0 , ""Chunk size for /+ (default size is asm.bits/8"" )"	3510:1:124552:124625	4078290	629	True				
ANR	4085845	CallExpression	"SETI ( ""search.chunk"" , 0 , ""Chunk size for /+ (default size is asm.bits/8"" )"		4078290	0					
ANR	4085846	Callee	SETI		4078290	0					
ANR	4085847	Identifier	SETI		4078290	0					
ANR	4085848	ArgumentList	"""search.chunk"""		4078290	1					
ANR	4085849	Argument	"""search.chunk"""		4078290	0					
ANR	4085850	PrimaryExpression	"""search.chunk"""		4078290	0					
ANR	4085851	Argument	0		4078290	1					
ANR	4085852	PrimaryExpression	0		4078290	0					
ANR	4085853	Argument	"""Chunk size for /+ (default size is asm.bits/8"""		4078290	2					
ANR	4085854	PrimaryExpression	"""Chunk size for /+ (default size is asm.bits/8"""		4078290	0					
ANR	4085855	ExpressionStatement	"SETI ( ""search.esilcombo"" , 8 , ""Stop search after N consecutive hits"" )"	3511:1:124628:124696	4078290	630	True				
ANR	4085856	CallExpression	"SETI ( ""search.esilcombo"" , 8 , ""Stop search after N consecutive hits"" )"		4078290	0					
ANR	4085857	Callee	SETI		4078290	0					
ANR	4085858	Identifier	SETI		4078290	0					
ANR	4085859	ArgumentList	"""search.esilcombo"""		4078290	1					
ANR	4085860	Argument	"""search.esilcombo"""		4078290	0					
ANR	4085861	PrimaryExpression	"""search.esilcombo"""		4078290	0					
ANR	4085862	Argument	8		4078290	1					
ANR	4085863	PrimaryExpression	8		4078290	0					
ANR	4085864	Argument	"""Stop search after N consecutive hits"""		4078290	2					
ANR	4085865	PrimaryExpression	"""Stop search after N consecutive hits"""		4078290	0					
ANR	4085866	ExpressionStatement	"SETI ( ""search.distance"" , 0 , ""Search string distance"" )"	3512:1:124699:124752	4078290	631	True				
ANR	4085867	CallExpression	"SETI ( ""search.distance"" , 0 , ""Search string distance"" )"		4078290	0					
ANR	4085868	Callee	SETI		4078290	0					
ANR	4085869	Identifier	SETI		4078290	0					
ANR	4085870	ArgumentList	"""search.distance"""		4078290	1					
ANR	4085871	Argument	"""search.distance"""		4078290	0					
ANR	4085872	PrimaryExpression	"""search.distance"""		4078290	0					
ANR	4085873	Argument	0		4078290	1					
ANR	4085874	PrimaryExpression	0		4078290	0					
ANR	4085875	Argument	"""Search string distance"""		4078290	2					
ANR	4085876	PrimaryExpression	"""Search string distance"""		4078290	0					
ANR	4085877	ExpressionStatement	"SETPREF ( ""search.flags"" , ""true"" , ""All search results are flagged, otherwise only printed"" )"	3513:1:124755:124845	4078290	632	True				
ANR	4085878	CallExpression	"SETPREF ( ""search.flags"" , ""true"" , ""All search results are flagged, otherwise only printed"" )"		4078290	0					
ANR	4085879	Callee	SETPREF		4078290	0					
ANR	4085880	Identifier	SETPREF		4078290	0					
ANR	4085881	ArgumentList	"""search.flags"""		4078290	1					
ANR	4085882	Argument	"""search.flags"""		4078290	0					
ANR	4085883	PrimaryExpression	"""search.flags"""		4078290	0					
ANR	4085884	Argument	"""true"""		4078290	1					
ANR	4085885	PrimaryExpression	"""true"""		4078290	0					
ANR	4085886	Argument	"""All search results are flagged, otherwise only printed"""		4078290	2					
ANR	4085887	PrimaryExpression	"""All search results are flagged, otherwise only printed"""		4078290	0					
ANR	4085888	ExpressionStatement	"SETPREF ( ""search.overlap"" , ""false"" , ""Look for overlapped search hits"" )"	3514:1:124848:124918	4078290	633	True				
ANR	4085889	CallExpression	"SETPREF ( ""search.overlap"" , ""false"" , ""Look for overlapped search hits"" )"		4078290	0					
ANR	4085890	Callee	SETPREF		4078290	0					
ANR	4085891	Identifier	SETPREF		4078290	0					
ANR	4085892	ArgumentList	"""search.overlap"""		4078290	1					
ANR	4085893	Argument	"""search.overlap"""		4078290	0					
ANR	4085894	PrimaryExpression	"""search.overlap"""		4078290	0					
ANR	4085895	Argument	"""false"""		4078290	1					
ANR	4085896	PrimaryExpression	"""false"""		4078290	0					
ANR	4085897	Argument	"""Look for overlapped search hits"""		4078290	2					
ANR	4085898	PrimaryExpression	"""Look for overlapped search hits"""		4078290	0					
ANR	4085899	ExpressionStatement	"SETI ( ""search.maxhits"" , 0 , ""Maximum number of hits (0: no limit)"" )"	3515:1:124921:124987	4078290	634	True				
ANR	4085900	CallExpression	"SETI ( ""search.maxhits"" , 0 , ""Maximum number of hits (0: no limit)"" )"		4078290	0					
ANR	4085901	Callee	SETI		4078290	0					
ANR	4085902	Identifier	SETI		4078290	0					
ANR	4085903	ArgumentList	"""search.maxhits"""		4078290	1					
ANR	4085904	Argument	"""search.maxhits"""		4078290	0					
ANR	4085905	PrimaryExpression	"""search.maxhits"""		4078290	0					
ANR	4085906	Argument	0		4078290	1					
ANR	4085907	PrimaryExpression	0		4078290	0					
ANR	4085908	Argument	"""Maximum number of hits (0: no limit)"""		4078290	2					
ANR	4085909	PrimaryExpression	"""Maximum number of hits (0: no limit)"""		4078290	0					
ANR	4085910	ExpressionStatement	"SETI ( ""search.from"" , - 1 , ""Search start address"" )"	3516:1:124990:125038	4078290	635	True				
ANR	4085911	CallExpression	"SETI ( ""search.from"" , - 1 , ""Search start address"" )"		4078290	0					
ANR	4085912	Callee	SETI		4078290	0					
ANR	4085913	Identifier	SETI		4078290	0					
ANR	4085914	ArgumentList	"""search.from"""		4078290	1					
ANR	4085915	Argument	"""search.from"""		4078290	0					
ANR	4085916	PrimaryExpression	"""search.from"""		4078290	0					
ANR	4085917	Argument	- 1		4078290	1					
ANR	4085918	UnaryOperationExpression	- 1		4078290	0					
ANR	4085919	UnaryOperator	-		4078290	0					
ANR	4085920	PrimaryExpression	1		4078290	1					
ANR	4085921	Argument	"""Search start address"""		4078290	2					
ANR	4085922	PrimaryExpression	"""Search start address"""		4078290	0					
ANR	4085923	ExpressionStatement	"n = NODECB ( ""search.in"" , ""io.maps"" , & cb_searchin )"	3517:1:125041:125090	4078290	636	True				
ANR	4085924	AssignmentExpression	"n = NODECB ( ""search.in"" , ""io.maps"" , & cb_searchin )"		4078290	0		=			
ANR	4085925	Identifier	n		4078290	0					
ANR	4085926	CallExpression	"NODECB ( ""search.in"" , ""io.maps"" , & cb_searchin )"		4078290	1					
ANR	4085927	Callee	NODECB		4078290	0					
ANR	4085928	Identifier	NODECB		4078290	0					
ANR	4085929	ArgumentList	"""search.in"""		4078290	1					
ANR	4085930	Argument	"""search.in"""		4078290	0					
ANR	4085931	PrimaryExpression	"""search.in"""		4078290	0					
ANR	4085932	Argument	"""io.maps"""		4078290	1					
ANR	4085933	PrimaryExpression	"""io.maps"""		4078290	0					
ANR	4085934	Argument	& cb_searchin		4078290	2					
ANR	4085935	UnaryOperationExpression	& cb_searchin		4078290	0					
ANR	4085936	UnaryOperator	&		4078290	0					
ANR	4085937	Identifier	cb_searchin		4078290	1					
ANR	4085938	ExpressionStatement	"SETDESC ( n , ""Specify search boundaries"" )"	3518:1:125093:125133	4078290	637	True				
ANR	4085939	CallExpression	"SETDESC ( n , ""Specify search boundaries"" )"		4078290	0					
ANR	4085940	Callee	SETDESC		4078290	0					
ANR	4085941	Identifier	SETDESC		4078290	0					
ANR	4085942	ArgumentList	n		4078290	1					
ANR	4085943	Argument	n		4078290	0					
ANR	4085944	Identifier	n		4078290	0					
ANR	4085945	Argument	"""Specify search boundaries"""		4078290	1					
ANR	4085946	PrimaryExpression	"""Specify search boundaries"""		4078290	0					
ANR	4085947	ExpressionStatement	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"	3519:1:125136:125591	4078290	638	True				
ANR	4085948	CallExpression	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"		4078290	0					
ANR	4085949	Callee	SETOPTIONS		4078290	0					
ANR	4085950	Identifier	SETOPTIONS		4078290	0					
ANR	4085951	ArgumentList	n		4078290	1					
ANR	4085952	Argument	n		4078290	0					
ANR	4085953	Identifier	n		4078290	0					
ANR	4085954	Argument	"""raw"""		4078290	1					
ANR	4085955	PrimaryExpression	"""raw"""		4078290	0					
ANR	4085956	Argument	"""block"""		4078290	2					
ANR	4085957	PrimaryExpression	"""block"""		4078290	0					
ANR	4085958	Argument	"""bin.section"""		4078290	3					
ANR	4085959	PrimaryExpression	"""bin.section"""		4078290	0					
ANR	4085960	Argument	"""bin.sections"""		4078290	4					
ANR	4085961	PrimaryExpression	"""bin.sections"""		4078290	0					
ANR	4085962	Argument	"""bin.sections.rwx"""		4078290	5					
ANR	4085963	PrimaryExpression	"""bin.sections.rwx"""		4078290	0					
ANR	4085964	Argument	"""bin.sections.r"""		4078290	6					
ANR	4085965	PrimaryExpression	"""bin.sections.r"""		4078290	0					
ANR	4085966	Argument	"""bin.sections.rw"""		4078290	7					
ANR	4085967	PrimaryExpression	"""bin.sections.rw"""		4078290	0					
ANR	4085968	Argument	"""bin.sections.rx"""		4078290	8					
ANR	4085969	PrimaryExpression	"""bin.sections.rx"""		4078290	0					
ANR	4085970	Argument	"""bin.sections.wx"""		4078290	9					
ANR	4085971	PrimaryExpression	"""bin.sections.wx"""		4078290	0					
ANR	4085972	Argument	"""bin.sections.x"""		4078290	10					
ANR	4085973	PrimaryExpression	"""bin.sections.x"""		4078290	0					
ANR	4085974	Argument	"""io.map"""		4078290	11					
ANR	4085975	PrimaryExpression	"""io.map"""		4078290	0					
ANR	4085976	Argument	"""io.maps"""		4078290	12					
ANR	4085977	PrimaryExpression	"""io.maps"""		4078290	0					
ANR	4085978	Argument	"""io.maps.rwx"""		4078290	13					
ANR	4085979	PrimaryExpression	"""io.maps.rwx"""		4078290	0					
ANR	4085980	Argument	"""io.maps.r"""		4078290	14					
ANR	4085981	PrimaryExpression	"""io.maps.r"""		4078290	0					
ANR	4085982	Argument	"""io.maps.rw"""		4078290	15					
ANR	4085983	PrimaryExpression	"""io.maps.rw"""		4078290	0					
ANR	4085984	Argument	"""io.maps.rx"""		4078290	16					
ANR	4085985	PrimaryExpression	"""io.maps.rx"""		4078290	0					
ANR	4085986	Argument	"""io.maps.wx"""		4078290	17					
ANR	4085987	PrimaryExpression	"""io.maps.wx"""		4078290	0					
ANR	4085988	Argument	"""io.maps.x"""		4078290	18					
ANR	4085989	PrimaryExpression	"""io.maps.x"""		4078290	0					
ANR	4085990	Argument	"""dbg.stack"""		4078290	19					
ANR	4085991	PrimaryExpression	"""dbg.stack"""		4078290	0					
ANR	4085992	Argument	"""dbg.heap"""		4078290	20					
ANR	4085993	PrimaryExpression	"""dbg.heap"""		4078290	0					
ANR	4085994	Argument	"""dbg.map"""		4078290	21					
ANR	4085995	PrimaryExpression	"""dbg.map"""		4078290	0					
ANR	4085996	Argument	"""dbg.maps"""		4078290	22					
ANR	4085997	PrimaryExpression	"""dbg.maps"""		4078290	0					
ANR	4085998	Argument	"""dbg.maps.rwx"""		4078290	23					
ANR	4085999	PrimaryExpression	"""dbg.maps.rwx"""		4078290	0					
ANR	4086000	Argument	"""dbg.maps.r"""		4078290	24					
ANR	4086001	PrimaryExpression	"""dbg.maps.r"""		4078290	0					
ANR	4086002	Argument	"""dbg.maps.rw"""		4078290	25					
ANR	4086003	PrimaryExpression	"""dbg.maps.rw"""		4078290	0					
ANR	4086004	Argument	"""dbg.maps.rx"""		4078290	26					
ANR	4086005	PrimaryExpression	"""dbg.maps.rx"""		4078290	0					
ANR	4086006	Argument	"""dbg.maps.wx"""		4078290	27					
ANR	4086007	PrimaryExpression	"""dbg.maps.wx"""		4078290	0					
ANR	4086008	Argument	"""dbg.maps.x"""		4078290	28					
ANR	4086009	PrimaryExpression	"""dbg.maps.x"""		4078290	0					
ANR	4086010	Argument	"""anal.fcn"""		4078290	29					
ANR	4086011	PrimaryExpression	"""anal.fcn"""		4078290	0					
ANR	4086012	Argument	"""anal.bb"""		4078290	30					
ANR	4086013	PrimaryExpression	"""anal.bb"""		4078290	0					
ANR	4086014	Argument	NULL		4078290	31					
ANR	4086015	Identifier	NULL		4078290	0					
ANR	4086016	ExpressionStatement	"SETICB ( ""search.kwidx"" , 0 , & cb_search_kwidx , ""Store last search index count"" )"	3526:1:125594:125671	4078290	639	True				
ANR	4086017	CallExpression	"SETICB ( ""search.kwidx"" , 0 , & cb_search_kwidx , ""Store last search index count"" )"		4078290	0					
ANR	4086018	Callee	SETICB		4078290	0					
ANR	4086019	Identifier	SETICB		4078290	0					
ANR	4086020	ArgumentList	"""search.kwidx"""		4078290	1					
ANR	4086021	Argument	"""search.kwidx"""		4078290	0					
ANR	4086022	PrimaryExpression	"""search.kwidx"""		4078290	0					
ANR	4086023	Argument	0		4078290	1					
ANR	4086024	PrimaryExpression	0		4078290	0					
ANR	4086025	Argument	& cb_search_kwidx		4078290	2					
ANR	4086026	UnaryOperationExpression	& cb_search_kwidx		4078290	0					
ANR	4086027	UnaryOperator	&		4078290	0					
ANR	4086028	Identifier	cb_search_kwidx		4078290	1					
ANR	4086029	Argument	"""Store last search index count"""		4078290	3					
ANR	4086030	PrimaryExpression	"""Store last search index count"""		4078290	0					
ANR	4086031	ExpressionStatement	"SETPREF ( ""search.prefix"" , ""hit"" , ""Prefix name in search hits label"" )"	3527:1:125674:125742	4078290	640	True				
ANR	4086032	CallExpression	"SETPREF ( ""search.prefix"" , ""hit"" , ""Prefix name in search hits label"" )"		4078290	0					
ANR	4086033	Callee	SETPREF		4078290	0					
ANR	4086034	Identifier	SETPREF		4078290	0					
ANR	4086035	ArgumentList	"""search.prefix"""		4078290	1					
ANR	4086036	Argument	"""search.prefix"""		4078290	0					
ANR	4086037	PrimaryExpression	"""search.prefix"""		4078290	0					
ANR	4086038	Argument	"""hit"""		4078290	1					
ANR	4086039	PrimaryExpression	"""hit"""		4078290	0					
ANR	4086040	Argument	"""Prefix name in search hits label"""		4078290	2					
ANR	4086041	PrimaryExpression	"""Prefix name in search hits label"""		4078290	0					
ANR	4086042	ExpressionStatement	"SETPREF ( ""search.show"" , ""true"" , ""Show search results"" )"	3528:1:125745:125799	4078290	641	True				
ANR	4086043	CallExpression	"SETPREF ( ""search.show"" , ""true"" , ""Show search results"" )"		4078290	0					
ANR	4086044	Callee	SETPREF		4078290	0					
ANR	4086045	Identifier	SETPREF		4078290	0					
ANR	4086046	ArgumentList	"""search.show"""		4078290	1					
ANR	4086047	Argument	"""search.show"""		4078290	0					
ANR	4086048	PrimaryExpression	"""search.show"""		4078290	0					
ANR	4086049	Argument	"""true"""		4078290	1					
ANR	4086050	PrimaryExpression	"""true"""		4078290	0					
ANR	4086051	Argument	"""Show search results"""		4078290	2					
ANR	4086052	PrimaryExpression	"""Show search results"""		4078290	0					
ANR	4086053	ExpressionStatement	"SETI ( ""search.to"" , - 1 , ""Search end address"" )"	3529:1:125802:125846	4078290	642	True				
ANR	4086054	CallExpression	"SETI ( ""search.to"" , - 1 , ""Search end address"" )"		4078290	0					
ANR	4086055	Callee	SETI		4078290	0					
ANR	4086056	Identifier	SETI		4078290	0					
ANR	4086057	ArgumentList	"""search.to"""		4078290	1					
ANR	4086058	Argument	"""search.to"""		4078290	0					
ANR	4086059	PrimaryExpression	"""search.to"""		4078290	0					
ANR	4086060	Argument	- 1		4078290	1					
ANR	4086061	UnaryOperationExpression	- 1		4078290	0					
ANR	4086062	UnaryOperator	-		4078290	0					
ANR	4086063	PrimaryExpression	1		4078290	1					
ANR	4086064	Argument	"""Search end address"""		4078290	2					
ANR	4086065	PrimaryExpression	"""Search end address"""		4078290	0					
ANR	4086066	ExpressionStatement	"SETI ( ""rop.len"" , 5 , ""Maximum ROP gadget length"" )"	3532:1:125861:125909	4078290	643	True				
ANR	4086067	CallExpression	"SETI ( ""rop.len"" , 5 , ""Maximum ROP gadget length"" )"		4078290	0					
ANR	4086068	Callee	SETI		4078290	0					
ANR	4086069	Identifier	SETI		4078290	0					
ANR	4086070	ArgumentList	"""rop.len"""		4078290	1					
ANR	4086071	Argument	"""rop.len"""		4078290	0					
ANR	4086072	PrimaryExpression	"""rop.len"""		4078290	0					
ANR	4086073	Argument	5		4078290	1					
ANR	4086074	PrimaryExpression	5		4078290	0					
ANR	4086075	Argument	"""Maximum ROP gadget length"""		4078290	2					
ANR	4086076	PrimaryExpression	"""Maximum ROP gadget length"""		4078290	0					
ANR	4086077	ExpressionStatement	"SETPREF ( ""rop.sdb"" , ""false"" , ""Cache results in sdb (experimental)"" )"	3533:1:125912:125979	4078290	644	True				
ANR	4086078	CallExpression	"SETPREF ( ""rop.sdb"" , ""false"" , ""Cache results in sdb (experimental)"" )"		4078290	0					
ANR	4086079	Callee	SETPREF		4078290	0					
ANR	4086080	Identifier	SETPREF		4078290	0					
ANR	4086081	ArgumentList	"""rop.sdb"""		4078290	1					
ANR	4086082	Argument	"""rop.sdb"""		4078290	0					
ANR	4086083	PrimaryExpression	"""rop.sdb"""		4078290	0					
ANR	4086084	Argument	"""false"""		4078290	1					
ANR	4086085	PrimaryExpression	"""false"""		4078290	0					
ANR	4086086	Argument	"""Cache results in sdb (experimental)"""		4078290	2					
ANR	4086087	PrimaryExpression	"""Cache results in sdb (experimental)"""		4078290	0					
ANR	4086088	ExpressionStatement	"SETPREF ( ""rop.db"" , ""true"" , ""Categorize rop gadgets in sdb"" )"	3534:1:125982:126041	4078290	645	True				
ANR	4086089	CallExpression	"SETPREF ( ""rop.db"" , ""true"" , ""Categorize rop gadgets in sdb"" )"		4078290	0					
ANR	4086090	Callee	SETPREF		4078290	0					
ANR	4086091	Identifier	SETPREF		4078290	0					
ANR	4086092	ArgumentList	"""rop.db"""		4078290	1					
ANR	4086093	Argument	"""rop.db"""		4078290	0					
ANR	4086094	PrimaryExpression	"""rop.db"""		4078290	0					
ANR	4086095	Argument	"""true"""		4078290	1					
ANR	4086096	PrimaryExpression	"""true"""		4078290	0					
ANR	4086097	Argument	"""Categorize rop gadgets in sdb"""		4078290	2					
ANR	4086098	PrimaryExpression	"""Categorize rop gadgets in sdb"""		4078290	0					
ANR	4086099	ExpressionStatement	"SETPREF ( ""rop.subchains"" , ""false"" , ""Display every length gadget from rop.len=X to 2 in /Rl"" )"	3535:1:126044:126136	4078290	646	True				
ANR	4086100	CallExpression	"SETPREF ( ""rop.subchains"" , ""false"" , ""Display every length gadget from rop.len=X to 2 in /Rl"" )"		4078290	0					
ANR	4086101	Callee	SETPREF		4078290	0					
ANR	4086102	Identifier	SETPREF		4078290	0					
ANR	4086103	ArgumentList	"""rop.subchains"""		4078290	1					
ANR	4086104	Argument	"""rop.subchains"""		4078290	0					
ANR	4086105	PrimaryExpression	"""rop.subchains"""		4078290	0					
ANR	4086106	Argument	"""false"""		4078290	1					
ANR	4086107	PrimaryExpression	"""false"""		4078290	0					
ANR	4086108	Argument	"""Display every length gadget from rop.len=X to 2 in /Rl"""		4078290	2					
ANR	4086109	PrimaryExpression	"""Display every length gadget from rop.len=X to 2 in /Rl"""		4078290	0					
ANR	4086110	ExpressionStatement	"SETPREF ( ""rop.conditional"" , ""false"" , ""Include conditional jump, calls and returns in ropsearch"" )"	3536:1:126139:126235	4078290	647	True				
ANR	4086111	CallExpression	"SETPREF ( ""rop.conditional"" , ""false"" , ""Include conditional jump, calls and returns in ropsearch"" )"		4078290	0					
ANR	4086112	Callee	SETPREF		4078290	0					
ANR	4086113	Identifier	SETPREF		4078290	0					
ANR	4086114	ArgumentList	"""rop.conditional"""		4078290	1					
ANR	4086115	Argument	"""rop.conditional"""		4078290	0					
ANR	4086116	PrimaryExpression	"""rop.conditional"""		4078290	0					
ANR	4086117	Argument	"""false"""		4078290	1					
ANR	4086118	PrimaryExpression	"""false"""		4078290	0					
ANR	4086119	Argument	"""Include conditional jump, calls and returns in ropsearch"""		4078290	2					
ANR	4086120	PrimaryExpression	"""Include conditional jump, calls and returns in ropsearch"""		4078290	0					
ANR	4086121	ExpressionStatement	"SETPREF ( ""rop.comments"" , ""false"" , ""Display comments in rop search output"" )"	3537:1:126238:126312	4078290	648	True				
ANR	4086122	CallExpression	"SETPREF ( ""rop.comments"" , ""false"" , ""Display comments in rop search output"" )"		4078290	0					
ANR	4086123	Callee	SETPREF		4078290	0					
ANR	4086124	Identifier	SETPREF		4078290	0					
ANR	4086125	ArgumentList	"""rop.comments"""		4078290	1					
ANR	4086126	Argument	"""rop.comments"""		4078290	0					
ANR	4086127	PrimaryExpression	"""rop.comments"""		4078290	0					
ANR	4086128	Argument	"""false"""		4078290	1					
ANR	4086129	PrimaryExpression	"""false"""		4078290	0					
ANR	4086130	Argument	"""Display comments in rop search output"""		4078290	2					
ANR	4086131	PrimaryExpression	"""Display comments in rop search output"""		4078290	0					
ANR	4086132	ExpressionStatement	"SETCB ( ""io.cache"" , ""false"" , & cb_io_cache , ""Change both of io.cache.{read,write}"" )"	3540:1:126326:126407	4078290	649	True				
ANR	4086133	CallExpression	"SETCB ( ""io.cache"" , ""false"" , & cb_io_cache , ""Change both of io.cache.{read,write}"" )"		4078290	0					
ANR	4086134	Callee	SETCB		4078290	0					
ANR	4086135	Identifier	SETCB		4078290	0					
ANR	4086136	ArgumentList	"""io.cache"""		4078290	1					
ANR	4086137	Argument	"""io.cache"""		4078290	0					
ANR	4086138	PrimaryExpression	"""io.cache"""		4078290	0					
ANR	4086139	Argument	"""false"""		4078290	1					
ANR	4086140	PrimaryExpression	"""false"""		4078290	0					
ANR	4086141	Argument	& cb_io_cache		4078290	2					
ANR	4086142	UnaryOperationExpression	& cb_io_cache		4078290	0					
ANR	4086143	UnaryOperator	&		4078290	0					
ANR	4086144	Identifier	cb_io_cache		4078290	1					
ANR	4086145	Argument	"""Change both of io.cache.{read,write}"""		4078290	3					
ANR	4086146	PrimaryExpression	"""Change both of io.cache.{read,write}"""		4078290	0					
ANR	4086147	ExpressionStatement	"SETCB ( ""io.cache.auto"" , ""false"" , & cb_io_cache_mode , ""Automatic cache all reads in the IO backend"" )"	3541:1:126410:126508	4078290	650	True				
ANR	4086148	CallExpression	"SETCB ( ""io.cache.auto"" , ""false"" , & cb_io_cache_mode , ""Automatic cache all reads in the IO backend"" )"		4078290	0					
ANR	4086149	Callee	SETCB		4078290	0					
ANR	4086150	Identifier	SETCB		4078290	0					
ANR	4086151	ArgumentList	"""io.cache.auto"""		4078290	1					
ANR	4086152	Argument	"""io.cache.auto"""		4078290	0					
ANR	4086153	PrimaryExpression	"""io.cache.auto"""		4078290	0					
ANR	4086154	Argument	"""false"""		4078290	1					
ANR	4086155	PrimaryExpression	"""false"""		4078290	0					
ANR	4086156	Argument	& cb_io_cache_mode		4078290	2					
ANR	4086157	UnaryOperationExpression	& cb_io_cache_mode		4078290	0					
ANR	4086158	UnaryOperator	&		4078290	0					
ANR	4086159	Identifier	cb_io_cache_mode		4078290	1					
ANR	4086160	Argument	"""Automatic cache all reads in the IO backend"""		4078290	3					
ANR	4086161	PrimaryExpression	"""Automatic cache all reads in the IO backend"""		4078290	0					
ANR	4086162	ExpressionStatement	"SETCB ( ""io.cache.read"" , ""false"" , & cb_io_cache_read , ""Enable read cache for vaddr (or paddr when io.va=0)"" )"	3542:1:126511:126617	4078290	651	True				
ANR	4086163	CallExpression	"SETCB ( ""io.cache.read"" , ""false"" , & cb_io_cache_read , ""Enable read cache for vaddr (or paddr when io.va=0)"" )"		4078290	0					
ANR	4086164	Callee	SETCB		4078290	0					
ANR	4086165	Identifier	SETCB		4078290	0					
ANR	4086166	ArgumentList	"""io.cache.read"""		4078290	1					
ANR	4086167	Argument	"""io.cache.read"""		4078290	0					
ANR	4086168	PrimaryExpression	"""io.cache.read"""		4078290	0					
ANR	4086169	Argument	"""false"""		4078290	1					
ANR	4086170	PrimaryExpression	"""false"""		4078290	0					
ANR	4086171	Argument	& cb_io_cache_read		4078290	2					
ANR	4086172	UnaryOperationExpression	& cb_io_cache_read		4078290	0					
ANR	4086173	UnaryOperator	&		4078290	0					
ANR	4086174	Identifier	cb_io_cache_read		4078290	1					
ANR	4086175	Argument	"""Enable read cache for vaddr (or paddr when io.va=0)"""		4078290	3					
ANR	4086176	PrimaryExpression	"""Enable read cache for vaddr (or paddr when io.va=0)"""		4078290	0					
ANR	4086177	ExpressionStatement	"SETCB ( ""io.cache.write"" , ""false"" , & cb_io_cache_write , ""Enable write cache for vaddr (or paddr when io.va=0)"" )"	3543:1:126620:126729	4078290	652	True				
ANR	4086178	CallExpression	"SETCB ( ""io.cache.write"" , ""false"" , & cb_io_cache_write , ""Enable write cache for vaddr (or paddr when io.va=0)"" )"		4078290	0					
ANR	4086179	Callee	SETCB		4078290	0					
ANR	4086180	Identifier	SETCB		4078290	0					
ANR	4086181	ArgumentList	"""io.cache.write"""		4078290	1					
ANR	4086182	Argument	"""io.cache.write"""		4078290	0					
ANR	4086183	PrimaryExpression	"""io.cache.write"""		4078290	0					
ANR	4086184	Argument	"""false"""		4078290	1					
ANR	4086185	PrimaryExpression	"""false"""		4078290	0					
ANR	4086186	Argument	& cb_io_cache_write		4078290	2					
ANR	4086187	UnaryOperationExpression	& cb_io_cache_write		4078290	0					
ANR	4086188	UnaryOperator	&		4078290	0					
ANR	4086189	Identifier	cb_io_cache_write		4078290	1					
ANR	4086190	Argument	"""Enable write cache for vaddr (or paddr when io.va=0)"""		4078290	3					
ANR	4086191	PrimaryExpression	"""Enable write cache for vaddr (or paddr when io.va=0)"""		4078290	0					
ANR	4086192	ExpressionStatement	"SETCB ( ""io.pcache"" , ""false"" , & cb_iopcache , ""io.cache for p-level"" )"	3544:1:126732:126798	4078290	653	True				
ANR	4086193	CallExpression	"SETCB ( ""io.pcache"" , ""false"" , & cb_iopcache , ""io.cache for p-level"" )"		4078290	0					
ANR	4086194	Callee	SETCB		4078290	0					
ANR	4086195	Identifier	SETCB		4078290	0					
ANR	4086196	ArgumentList	"""io.pcache"""		4078290	1					
ANR	4086197	Argument	"""io.pcache"""		4078290	0					
ANR	4086198	PrimaryExpression	"""io.pcache"""		4078290	0					
ANR	4086199	Argument	"""false"""		4078290	1					
ANR	4086200	PrimaryExpression	"""false"""		4078290	0					
ANR	4086201	Argument	& cb_iopcache		4078290	2					
ANR	4086202	UnaryOperationExpression	& cb_iopcache		4078290	0					
ANR	4086203	UnaryOperator	&		4078290	0					
ANR	4086204	Identifier	cb_iopcache		4078290	1					
ANR	4086205	Argument	"""io.cache for p-level"""		4078290	3					
ANR	4086206	PrimaryExpression	"""io.cache for p-level"""		4078290	0					
ANR	4086207	ExpressionStatement	"SETCB ( ""io.pcache.write"" , ""false"" , & cb_iopcachewrite , ""Enable write-cache"" )"	3545:1:126801:126876	4078290	654	True				
ANR	4086208	CallExpression	"SETCB ( ""io.pcache.write"" , ""false"" , & cb_iopcachewrite , ""Enable write-cache"" )"		4078290	0					
ANR	4086209	Callee	SETCB		4078290	0					
ANR	4086210	Identifier	SETCB		4078290	0					
ANR	4086211	ArgumentList	"""io.pcache.write"""		4078290	1					
ANR	4086212	Argument	"""io.pcache.write"""		4078290	0					
ANR	4086213	PrimaryExpression	"""io.pcache.write"""		4078290	0					
ANR	4086214	Argument	"""false"""		4078290	1					
ANR	4086215	PrimaryExpression	"""false"""		4078290	0					
ANR	4086216	Argument	& cb_iopcachewrite		4078290	2					
ANR	4086217	UnaryOperationExpression	& cb_iopcachewrite		4078290	0					
ANR	4086218	UnaryOperator	&		4078290	0					
ANR	4086219	Identifier	cb_iopcachewrite		4078290	1					
ANR	4086220	Argument	"""Enable write-cache"""		4078290	3					
ANR	4086221	PrimaryExpression	"""Enable write-cache"""		4078290	0					
ANR	4086222	ExpressionStatement	"SETCB ( ""io.pcache.read"" , ""false"" , & cb_iopcacheread , ""Enable read-cache"" )"	3546:1:126879:126951	4078290	655	True				
ANR	4086223	CallExpression	"SETCB ( ""io.pcache.read"" , ""false"" , & cb_iopcacheread , ""Enable read-cache"" )"		4078290	0					
ANR	4086224	Callee	SETCB		4078290	0					
ANR	4086225	Identifier	SETCB		4078290	0					
ANR	4086226	ArgumentList	"""io.pcache.read"""		4078290	1					
ANR	4086227	Argument	"""io.pcache.read"""		4078290	0					
ANR	4086228	PrimaryExpression	"""io.pcache.read"""		4078290	0					
ANR	4086229	Argument	"""false"""		4078290	1					
ANR	4086230	PrimaryExpression	"""false"""		4078290	0					
ANR	4086231	Argument	& cb_iopcacheread		4078290	2					
ANR	4086232	UnaryOperationExpression	& cb_iopcacheread		4078290	0					
ANR	4086233	UnaryOperator	&		4078290	0					
ANR	4086234	Identifier	cb_iopcacheread		4078290	1					
ANR	4086235	Argument	"""Enable read-cache"""		4078290	3					
ANR	4086236	PrimaryExpression	"""Enable read-cache"""		4078290	0					
ANR	4086237	ExpressionStatement	"SETCB ( ""io.ff"" , ""true"" , & cb_ioff , ""Fill invalid buffers with 0xff instead of returning error"" )"	3547:1:126954:127048	4078290	656	True				
ANR	4086238	CallExpression	"SETCB ( ""io.ff"" , ""true"" , & cb_ioff , ""Fill invalid buffers with 0xff instead of returning error"" )"		4078290	0					
ANR	4086239	Callee	SETCB		4078290	0					
ANR	4086240	Identifier	SETCB		4078290	0					
ANR	4086241	ArgumentList	"""io.ff"""		4078290	1					
ANR	4086242	Argument	"""io.ff"""		4078290	0					
ANR	4086243	PrimaryExpression	"""io.ff"""		4078290	0					
ANR	4086244	Argument	"""true"""		4078290	1					
ANR	4086245	PrimaryExpression	"""true"""		4078290	0					
ANR	4086246	Argument	& cb_ioff		4078290	2					
ANR	4086247	UnaryOperationExpression	& cb_ioff		4078290	0					
ANR	4086248	UnaryOperator	&		4078290	0					
ANR	4086249	Identifier	cb_ioff		4078290	1					
ANR	4086250	Argument	"""Fill invalid buffers with 0xff instead of returning error"""		4078290	3					
ANR	4086251	PrimaryExpression	"""Fill invalid buffers with 0xff instead of returning error"""		4078290	0					
ANR	4086252	ExpressionStatement	"SETPREF ( ""io.exec"" , ""true"" , ""See !!r2 -h~-x"" )"	3548:1:127051:127096	4078290	657	True				
ANR	4086253	CallExpression	"SETPREF ( ""io.exec"" , ""true"" , ""See !!r2 -h~-x"" )"		4078290	0					
ANR	4086254	Callee	SETPREF		4078290	0					
ANR	4086255	Identifier	SETPREF		4078290	0					
ANR	4086256	ArgumentList	"""io.exec"""		4078290	1					
ANR	4086257	Argument	"""io.exec"""		4078290	0					
ANR	4086258	PrimaryExpression	"""io.exec"""		4078290	0					
ANR	4086259	Argument	"""true"""		4078290	1					
ANR	4086260	PrimaryExpression	"""true"""		4078290	0					
ANR	4086261	Argument	"""See !!r2 -h~-x"""		4078290	2					
ANR	4086262	PrimaryExpression	"""See !!r2 -h~-x"""		4078290	0					
ANR	4086263	ExpressionStatement	"SETICB ( ""io.0xff"" , 0xff , & cb_io_oxff , ""Use this value instead of 0xff to fill unallocated areas"" )"	3549:1:127099:127196	4078290	658	True				
ANR	4086264	CallExpression	"SETICB ( ""io.0xff"" , 0xff , & cb_io_oxff , ""Use this value instead of 0xff to fill unallocated areas"" )"		4078290	0					
ANR	4086265	Callee	SETICB		4078290	0					
ANR	4086266	Identifier	SETICB		4078290	0					
ANR	4086267	ArgumentList	"""io.0xff"""		4078290	1					
ANR	4086268	Argument	"""io.0xff"""		4078290	0					
ANR	4086269	PrimaryExpression	"""io.0xff"""		4078290	0					
ANR	4086270	Argument	0xff		4078290	1					
ANR	4086271	PrimaryExpression	0xff		4078290	0					
ANR	4086272	Argument	& cb_io_oxff		4078290	2					
ANR	4086273	UnaryOperationExpression	& cb_io_oxff		4078290	0					
ANR	4086274	UnaryOperator	&		4078290	0					
ANR	4086275	Identifier	cb_io_oxff		4078290	1					
ANR	4086276	Argument	"""Use this value instead of 0xff to fill unallocated areas"""		4078290	3					
ANR	4086277	PrimaryExpression	"""Use this value instead of 0xff to fill unallocated areas"""		4078290	0					
ANR	4086278	ExpressionStatement	"SETCB ( ""io.aslr"" , ""false"" , & cb_ioaslr , ""Disable ASLR for spawn and such"" )"	3550:1:127199:127272	4078290	659	True				
ANR	4086279	CallExpression	"SETCB ( ""io.aslr"" , ""false"" , & cb_ioaslr , ""Disable ASLR for spawn and such"" )"		4078290	0					
ANR	4086280	Callee	SETCB		4078290	0					
ANR	4086281	Identifier	SETCB		4078290	0					
ANR	4086282	ArgumentList	"""io.aslr"""		4078290	1					
ANR	4086283	Argument	"""io.aslr"""		4078290	0					
ANR	4086284	PrimaryExpression	"""io.aslr"""		4078290	0					
ANR	4086285	Argument	"""false"""		4078290	1					
ANR	4086286	PrimaryExpression	"""false"""		4078290	0					
ANR	4086287	Argument	& cb_ioaslr		4078290	2					
ANR	4086288	UnaryOperationExpression	& cb_ioaslr		4078290	0					
ANR	4086289	UnaryOperator	&		4078290	0					
ANR	4086290	Identifier	cb_ioaslr		4078290	1					
ANR	4086291	Argument	"""Disable ASLR for spawn and such"""		4078290	3					
ANR	4086292	PrimaryExpression	"""Disable ASLR for spawn and such"""		4078290	0					
ANR	4086293	ExpressionStatement	"SETCB ( ""io.va"" , ""true"" , & cb_iova , ""Use virtual address layout"" )"	3551:1:127275:127338	4078290	660	True				
ANR	4086294	CallExpression	"SETCB ( ""io.va"" , ""true"" , & cb_iova , ""Use virtual address layout"" )"		4078290	0					
ANR	4086295	Callee	SETCB		4078290	0					
ANR	4086296	Identifier	SETCB		4078290	0					
ANR	4086297	ArgumentList	"""io.va"""		4078290	1					
ANR	4086298	Argument	"""io.va"""		4078290	0					
ANR	4086299	PrimaryExpression	"""io.va"""		4078290	0					
ANR	4086300	Argument	"""true"""		4078290	1					
ANR	4086301	PrimaryExpression	"""true"""		4078290	0					
ANR	4086302	Argument	& cb_iova		4078290	2					
ANR	4086303	UnaryOperationExpression	& cb_iova		4078290	0					
ANR	4086304	UnaryOperator	&		4078290	0					
ANR	4086305	Identifier	cb_iova		4078290	1					
ANR	4086306	Argument	"""Use virtual address layout"""		4078290	3					
ANR	4086307	PrimaryExpression	"""Use virtual address layout"""		4078290	0					
ANR	4086308	ExpressionStatement	"SETCB ( ""io.pava"" , ""false"" , & cb_io_pava , ""Use EXPERIMENTAL paddr -> vaddr address mode"" )"	3552:1:127341:127428	4078290	661	True				
ANR	4086309	CallExpression	"SETCB ( ""io.pava"" , ""false"" , & cb_io_pava , ""Use EXPERIMENTAL paddr -> vaddr address mode"" )"		4078290	0					
ANR	4086310	Callee	SETCB		4078290	0					
ANR	4086311	Identifier	SETCB		4078290	0					
ANR	4086312	ArgumentList	"""io.pava"""		4078290	1					
ANR	4086313	Argument	"""io.pava"""		4078290	0					
ANR	4086314	PrimaryExpression	"""io.pava"""		4078290	0					
ANR	4086315	Argument	"""false"""		4078290	1					
ANR	4086316	PrimaryExpression	"""false"""		4078290	0					
ANR	4086317	Argument	& cb_io_pava		4078290	2					
ANR	4086318	UnaryOperationExpression	& cb_io_pava		4078290	0					
ANR	4086319	UnaryOperator	&		4078290	0					
ANR	4086320	Identifier	cb_io_pava		4078290	1					
ANR	4086321	Argument	"""Use EXPERIMENTAL paddr -> vaddr address mode"""		4078290	3					
ANR	4086322	PrimaryExpression	"""Use EXPERIMENTAL paddr -> vaddr address mode"""		4078290	0					
ANR	4086323	ExpressionStatement	"SETCB ( ""io.autofd"" , ""true"" , & cb_ioautofd , ""Change fd when opening a new file"" )"	3553:1:127431:127509	4078290	662	True				
ANR	4086324	CallExpression	"SETCB ( ""io.autofd"" , ""true"" , & cb_ioautofd , ""Change fd when opening a new file"" )"		4078290	0					
ANR	4086325	Callee	SETCB		4078290	0					
ANR	4086326	Identifier	SETCB		4078290	0					
ANR	4086327	ArgumentList	"""io.autofd"""		4078290	1					
ANR	4086328	Argument	"""io.autofd"""		4078290	0					
ANR	4086329	PrimaryExpression	"""io.autofd"""		4078290	0					
ANR	4086330	Argument	"""true"""		4078290	1					
ANR	4086331	PrimaryExpression	"""true"""		4078290	0					
ANR	4086332	Argument	& cb_ioautofd		4078290	2					
ANR	4086333	UnaryOperationExpression	& cb_ioautofd		4078290	0					
ANR	4086334	UnaryOperator	&		4078290	0					
ANR	4086335	Identifier	cb_ioautofd		4078290	1					
ANR	4086336	Argument	"""Change fd when opening a new file"""		4078290	3					
ANR	4086337	PrimaryExpression	"""Change fd when opening a new file"""		4078290	0					
ANR	4086338	ExpressionStatement	"SETPREF ( ""file.desc"" , """" , ""User defined file description (used by projects)"" )"	3556:1:127525:127602	4078290	663	True				
ANR	4086339	CallExpression	"SETPREF ( ""file.desc"" , """" , ""User defined file description (used by projects)"" )"		4078290	0					
ANR	4086340	Callee	SETPREF		4078290	0					
ANR	4086341	Identifier	SETPREF		4078290	0					
ANR	4086342	ArgumentList	"""file.desc"""		4078290	1					
ANR	4086343	Argument	"""file.desc"""		4078290	0					
ANR	4086344	PrimaryExpression	"""file.desc"""		4078290	0					
ANR	4086345	Argument	""""""		4078290	1					
ANR	4086346	PrimaryExpression	""""""		4078290	0					
ANR	4086347	Argument	"""User defined file description (used by projects)"""		4078290	2					
ANR	4086348	PrimaryExpression	"""User defined file description (used by projects)"""		4078290	0					
ANR	4086349	ExpressionStatement	"SETPREF ( ""file.md5"" , """" , ""MD5 sum of current file"" )"	3557:1:127605:127656	4078290	664	True				
ANR	4086350	CallExpression	"SETPREF ( ""file.md5"" , """" , ""MD5 sum of current file"" )"		4078290	0					
ANR	4086351	Callee	SETPREF		4078290	0					
ANR	4086352	Identifier	SETPREF		4078290	0					
ANR	4086353	ArgumentList	"""file.md5"""		4078290	1					
ANR	4086354	Argument	"""file.md5"""		4078290	0					
ANR	4086355	PrimaryExpression	"""file.md5"""		4078290	0					
ANR	4086356	Argument	""""""		4078290	1					
ANR	4086357	PrimaryExpression	""""""		4078290	0					
ANR	4086358	Argument	"""MD5 sum of current file"""		4078290	2					
ANR	4086359	PrimaryExpression	"""MD5 sum of current file"""		4078290	0					
ANR	4086360	ExpressionStatement	"SETPREF ( ""file.info"" , ""true"" , ""RBin info loaded"" )"	3558:1:127659:127708	4078290	665	True				
ANR	4086361	CallExpression	"SETPREF ( ""file.info"" , ""true"" , ""RBin info loaded"" )"		4078290	0					
ANR	4086362	Callee	SETPREF		4078290	0					
ANR	4086363	Identifier	SETPREF		4078290	0					
ANR	4086364	ArgumentList	"""file.info"""		4078290	1					
ANR	4086365	Argument	"""file.info"""		4078290	0					
ANR	4086366	PrimaryExpression	"""file.info"""		4078290	0					
ANR	4086367	Argument	"""true"""		4078290	1					
ANR	4086368	PrimaryExpression	"""true"""		4078290	0					
ANR	4086369	Argument	"""RBin info loaded"""		4078290	2					
ANR	4086370	PrimaryExpression	"""RBin info loaded"""		4078290	0					
ANR	4086371	ExpressionStatement	"SETPREF ( ""file.offset"" , """" , ""Offset where the file will be mapped at"" )"	3559:1:127711:127781	4078290	666	True				
ANR	4086372	CallExpression	"SETPREF ( ""file.offset"" , """" , ""Offset where the file will be mapped at"" )"		4078290	0					
ANR	4086373	Callee	SETPREF		4078290	0					
ANR	4086374	Identifier	SETPREF		4078290	0					
ANR	4086375	ArgumentList	"""file.offset"""		4078290	1					
ANR	4086376	Argument	"""file.offset"""		4078290	0					
ANR	4086377	PrimaryExpression	"""file.offset"""		4078290	0					
ANR	4086378	Argument	""""""		4078290	1					
ANR	4086379	PrimaryExpression	""""""		4078290	0					
ANR	4086380	Argument	"""Offset where the file will be mapped at"""		4078290	2					
ANR	4086381	PrimaryExpression	"""Offset where the file will be mapped at"""		4078290	0					
ANR	4086382	ExpressionStatement	"SETCB ( ""file.path"" , """" , & cb_filepath , ""Path of current file"" )"	3560:1:127784:127845	4078290	667	True				
ANR	4086383	CallExpression	"SETCB ( ""file.path"" , """" , & cb_filepath , ""Path of current file"" )"		4078290	0					
ANR	4086384	Callee	SETCB		4078290	0					
ANR	4086385	Identifier	SETCB		4078290	0					
ANR	4086386	ArgumentList	"""file.path"""		4078290	1					
ANR	4086387	Argument	"""file.path"""		4078290	0					
ANR	4086388	PrimaryExpression	"""file.path"""		4078290	0					
ANR	4086389	Argument	""""""		4078290	1					
ANR	4086390	PrimaryExpression	""""""		4078290	0					
ANR	4086391	Argument	& cb_filepath		4078290	2					
ANR	4086392	UnaryOperationExpression	& cb_filepath		4078290	0					
ANR	4086393	UnaryOperator	&		4078290	0					
ANR	4086394	Identifier	cb_filepath		4078290	1					
ANR	4086395	Argument	"""Path of current file"""		4078290	3					
ANR	4086396	PrimaryExpression	"""Path of current file"""		4078290	0					
ANR	4086397	ExpressionStatement	"SETPREF ( ""file.lastpath"" , """" , ""Path of current file"" )"	3561:1:127848:127901	4078290	668	True				
ANR	4086398	CallExpression	"SETPREF ( ""file.lastpath"" , """" , ""Path of current file"" )"		4078290	0					
ANR	4086399	Callee	SETPREF		4078290	0					
ANR	4086400	Identifier	SETPREF		4078290	0					
ANR	4086401	ArgumentList	"""file.lastpath"""		4078290	1					
ANR	4086402	Argument	"""file.lastpath"""		4078290	0					
ANR	4086403	PrimaryExpression	"""file.lastpath"""		4078290	0					
ANR	4086404	Argument	""""""		4078290	1					
ANR	4086405	PrimaryExpression	""""""		4078290	0					
ANR	4086406	Argument	"""Path of current file"""		4078290	2					
ANR	4086407	PrimaryExpression	"""Path of current file"""		4078290	0					
ANR	4086408	ExpressionStatement	"SETPREF ( ""file.type"" , """" , ""Type of current file"" )"	3562:1:127904:127953	4078290	669	True				
ANR	4086409	CallExpression	"SETPREF ( ""file.type"" , """" , ""Type of current file"" )"		4078290	0					
ANR	4086410	Callee	SETPREF		4078290	0					
ANR	4086411	Identifier	SETPREF		4078290	0					
ANR	4086412	ArgumentList	"""file.type"""		4078290	1					
ANR	4086413	Argument	"""file.type"""		4078290	0					
ANR	4086414	PrimaryExpression	"""file.type"""		4078290	0					
ANR	4086415	Argument	""""""		4078290	1					
ANR	4086416	PrimaryExpression	""""""		4078290	0					
ANR	4086417	Argument	"""Type of current file"""		4078290	2					
ANR	4086418	PrimaryExpression	"""Type of current file"""		4078290	0					
ANR	4086419	ExpressionStatement	"SETI ( ""file.loadalign"" , 1024 , ""Alignment of load addresses"" )"	3563:1:127956:128016	4078290	670	True				
ANR	4086420	CallExpression	"SETI ( ""file.loadalign"" , 1024 , ""Alignment of load addresses"" )"		4078290	0					
ANR	4086421	Callee	SETI		4078290	0					
ANR	4086422	Identifier	SETI		4078290	0					
ANR	4086423	ArgumentList	"""file.loadalign"""		4078290	1					
ANR	4086424	Argument	"""file.loadalign"""		4078290	0					
ANR	4086425	PrimaryExpression	"""file.loadalign"""		4078290	0					
ANR	4086426	Argument	1024		4078290	1					
ANR	4086427	PrimaryExpression	1024		4078290	0					
ANR	4086428	Argument	"""Alignment of load addresses"""		4078290	2					
ANR	4086429	PrimaryExpression	"""Alignment of load addresses"""		4078290	0					
ANR	4086430	ExpressionStatement	"SETI ( ""file.openmany"" , 1 , ""Maximum number of files opened at once"" )"	3564:1:128019:128086	4078290	671	True				
ANR	4086431	CallExpression	"SETI ( ""file.openmany"" , 1 , ""Maximum number of files opened at once"" )"		4078290	0					
ANR	4086432	Callee	SETI		4078290	0					
ANR	4086433	Identifier	SETI		4078290	0					
ANR	4086434	ArgumentList	"""file.openmany"""		4078290	1					
ANR	4086435	Argument	"""file.openmany"""		4078290	0					
ANR	4086436	PrimaryExpression	"""file.openmany"""		4078290	0					
ANR	4086437	Argument	1		4078290	1					
ANR	4086438	PrimaryExpression	1		4078290	0					
ANR	4086439	Argument	"""Maximum number of files opened at once"""		4078290	2					
ANR	4086440	PrimaryExpression	"""Maximum number of files opened at once"""		4078290	0					
ANR	4086441	ExpressionStatement	"SETPREF ( ""file.location"" , """" , ""Is the file 'local', 'remote', or 'memory'"" )"	3565:1:128089:128164	4078290	672	True				
ANR	4086442	CallExpression	"SETPREF ( ""file.location"" , """" , ""Is the file 'local', 'remote', or 'memory'"" )"		4078290	0					
ANR	4086443	Callee	SETPREF		4078290	0					
ANR	4086444	Identifier	SETPREF		4078290	0					
ANR	4086445	ArgumentList	"""file.location"""		4078290	1					
ANR	4086446	Argument	"""file.location"""		4078290	0					
ANR	4086447	PrimaryExpression	"""file.location"""		4078290	0					
ANR	4086448	Argument	""""""		4078290	1					
ANR	4086449	PrimaryExpression	""""""		4078290	0					
ANR	4086450	Argument	"""Is the file 'local', 'remote', or 'memory'"""		4078290	2					
ANR	4086451	PrimaryExpression	"""Is the file 'local', 'remote', or 'memory'"""		4078290	0					
ANR	4086452	ExpressionStatement	"SETI ( ""magic.depth"" , 100 , ""Recursivity depth in magic description strings"" )"	3567:1:128180:128255	4078290	673	True				
ANR	4086453	CallExpression	"SETI ( ""magic.depth"" , 100 , ""Recursivity depth in magic description strings"" )"		4078290	0					
ANR	4086454	Callee	SETI		4078290	0					
ANR	4086455	Identifier	SETI		4078290	0					
ANR	4086456	ArgumentList	"""magic.depth"""		4078290	1					
ANR	4086457	Argument	"""magic.depth"""		4078290	0					
ANR	4086458	PrimaryExpression	"""magic.depth"""		4078290	0					
ANR	4086459	Argument	100		4078290	1					
ANR	4086460	PrimaryExpression	100		4078290	0					
ANR	4086461	Argument	"""Recursivity depth in magic description strings"""		4078290	2					
ANR	4086462	PrimaryExpression	"""Recursivity depth in magic description strings"""		4078290	0					
ANR	4086463	ExpressionStatement	"SETPREF ( ""rap.loop"" , ""true"" , ""Run rap as a forever-listening daemon (=:9090)"" )"	3570:1:128270:128348	4078290	674	True				
ANR	4086464	CallExpression	"SETPREF ( ""rap.loop"" , ""true"" , ""Run rap as a forever-listening daemon (=:9090)"" )"		4078290	0					
ANR	4086465	Callee	SETPREF		4078290	0					
ANR	4086466	Identifier	SETPREF		4078290	0					
ANR	4086467	ArgumentList	"""rap.loop"""		4078290	1					
ANR	4086468	Argument	"""rap.loop"""		4078290	0					
ANR	4086469	PrimaryExpression	"""rap.loop"""		4078290	0					
ANR	4086470	Argument	"""true"""		4078290	1					
ANR	4086471	PrimaryExpression	"""true"""		4078290	0					
ANR	4086472	Argument	"""Run rap as a forever-listening daemon (=:9090)"""		4078290	2					
ANR	4086473	PrimaryExpression	"""Run rap as a forever-listening daemon (=:9090)"""		4078290	0					
ANR	4086474	ExpressionStatement	"SETPREF ( ""key.s"" , """" , ""override step into action"" )"	3573:1:128365:128415	4078290	675	True				
ANR	4086475	CallExpression	"SETPREF ( ""key.s"" , """" , ""override step into action"" )"		4078290	0					
ANR	4086476	Callee	SETPREF		4078290	0					
ANR	4086477	Identifier	SETPREF		4078290	0					
ANR	4086478	ArgumentList	"""key.s"""		4078290	1					
ANR	4086479	Argument	"""key.s"""		4078290	0					
ANR	4086480	PrimaryExpression	"""key.s"""		4078290	0					
ANR	4086481	Argument	""""""		4078290	1					
ANR	4086482	PrimaryExpression	""""""		4078290	0					
ANR	4086483	Argument	"""override step into action"""		4078290	2					
ANR	4086484	PrimaryExpression	"""override step into action"""		4078290	0					
ANR	4086485	ExpressionStatement	"SETPREF ( ""key.S"" , """" , ""override step over action"" )"	3574:1:128418:128468	4078290	676	True				
ANR	4086486	CallExpression	"SETPREF ( ""key.S"" , """" , ""override step over action"" )"		4078290	0					
ANR	4086487	Callee	SETPREF		4078290	0					
ANR	4086488	Identifier	SETPREF		4078290	0					
ANR	4086489	ArgumentList	"""key.S"""		4078290	1					
ANR	4086490	Argument	"""key.S"""		4078290	0					
ANR	4086491	PrimaryExpression	"""key.S"""		4078290	0					
ANR	4086492	Argument	""""""		4078290	1					
ANR	4086493	PrimaryExpression	""""""		4078290	0					
ANR	4086494	Argument	"""override step over action"""		4078290	2					
ANR	4086495	PrimaryExpression	"""override step over action"""		4078290	0					
ANR	4086496	ForStatement	for ( i = 1 ; i < 13 ; i ++ )		4078290	677					
ANR	4086497	ForInit	i = 1 ;	3575:6:128476:128481	4078290	0	True				
ANR	4086498	AssignmentExpression	i = 1		4078290	0		=			
ANR	4086499	Identifier	i		4078290	0					
ANR	4086500	PrimaryExpression	1		4078290	1					
ANR	4086501	Condition	i < 13	3575:13:128483:128488	4078290	1	True				
ANR	4086502	RelationalExpression	i < 13		4078290	0		<			
ANR	4086503	Identifier	i		4078290	0					
ANR	4086504	PrimaryExpression	13		4078290	1					
ANR	4086505	PostIncDecOperationExpression	i ++	3575:21:128491:128493	4078290	2	True				
ANR	4086506	Identifier	i		4078290	0					
ANR	4086507	IncDec	++		4078290	1					
ANR	4086508	CompoundStatement		830:26:53822:53822	4078290	3					
ANR	4086509	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""key.f%d"" , i )"	3576:2:128500:128542	4078290	0	True				
ANR	4086510	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""key.f%d"" , i )"		4078290	0					
ANR	4086511	Callee	snprintf		4078290	0					
ANR	4086512	Identifier	snprintf		4078290	0					
ANR	4086513	ArgumentList	buf		4078290	1					
ANR	4086514	Argument	buf		4078290	0					
ANR	4086515	Identifier	buf		4078290	0					
ANR	4086516	Argument	sizeof ( buf )		4078290	1					
ANR	4086517	SizeofExpression	sizeof ( buf )		4078290	0					
ANR	4086518	Sizeof	sizeof		4078290	0					
ANR	4086519	SizeofOperand	buf		4078290	1					
ANR	4086520	Argument	"""key.f%d"""		4078290	2					
ANR	4086521	PrimaryExpression	"""key.f%d"""		4078290	0					
ANR	4086522	Argument	i		4078290	3					
ANR	4086523	Identifier	i		4078290	0					
ANR	4086524	ExpressionStatement	"snprintf ( buf + 10 , sizeof ( buf ) - 10 , ""Run this when F%d key is pressed in visual mode"" , i )"	3577:2:128546:128642	4078290	1	True				
ANR	4086525	CallExpression	"snprintf ( buf + 10 , sizeof ( buf ) - 10 , ""Run this when F%d key is pressed in visual mode"" , i )"		4078290	0					
ANR	4086526	Callee	snprintf		4078290	0					
ANR	4086527	Identifier	snprintf		4078290	0					
ANR	4086528	ArgumentList	buf + 10		4078290	1					
ANR	4086529	Argument	buf + 10		4078290	0					
ANR	4086530	AdditiveExpression	buf + 10		4078290	0		+			
ANR	4086531	Identifier	buf		4078290	0					
ANR	4086532	PrimaryExpression	10		4078290	1					
ANR	4086533	Argument	sizeof ( buf ) - 10		4078290	1					
ANR	4086534	AdditiveExpression	sizeof ( buf ) - 10		4078290	0		-			
ANR	4086535	SizeofExpression	sizeof ( buf )		4078290	0					
ANR	4086536	Sizeof	sizeof		4078290	0					
ANR	4086537	SizeofOperand	buf		4078290	1					
ANR	4086538	PrimaryExpression	10		4078290	1					
ANR	4086539	Argument	"""Run this when F%d key is pressed in visual mode"""		4078290	2					
ANR	4086540	PrimaryExpression	"""Run this when F%d key is pressed in visual mode"""		4078290	0					
ANR	4086541	Argument	i		4078290	3					
ANR	4086542	Identifier	i		4078290	0					
ANR	4086543	SwitchStatement	switch ( i )		4078290	2					
ANR	4086544	Condition	i	3579:10:128654:128654	4078290	0	True				
ANR	4086545	Identifier	i		4078290	0					
ANR	4086546	CompoundStatement		834:13:53983:53983	4078290	1					
ANR	4086547	Label	default :	3580:3:128662:128669	4078290	0	True				
ANR	4086548	Identifier	default		4078290	0					
ANR	4086549	ExpressionStatement	"p = """""	3580:12:128671:128677	4078290	1	True				
ANR	4086550	AssignmentExpression	"p = """""		4078290	0		=			
ANR	4086551	Identifier	p		4078290	0					
ANR	4086552	PrimaryExpression	""""""		4078290	1					
ANR	4086553	BreakStatement	break ;	3580:20:128679:128684	4078290	2	True				
ANR	4086554	ExpressionStatement	"r_config_set ( cfg , buf , p )"	3582:2:128692:128718	4078290	3	True				
ANR	4086555	CallExpression	"r_config_set ( cfg , buf , p )"		4078290	0					
ANR	4086556	Callee	r_config_set		4078290	0					
ANR	4086557	Identifier	r_config_set		4078290	0					
ANR	4086558	ArgumentList	cfg		4078290	1					
ANR	4086559	Argument	cfg		4078290	0					
ANR	4086560	Identifier	cfg		4078290	0					
ANR	4086561	Argument	buf		4078290	1					
ANR	4086562	Identifier	buf		4078290	0					
ANR	4086563	Argument	p		4078290	2					
ANR	4086564	Identifier	p		4078290	0					
ANR	4086565	ExpressionStatement	"r_config_desc ( cfg , buf , buf + 10 )"	3583:2:128722:128754	4078290	4	True				
ANR	4086566	CallExpression	"r_config_desc ( cfg , buf , buf + 10 )"		4078290	0					
ANR	4086567	Callee	r_config_desc		4078290	0					
ANR	4086568	Identifier	r_config_desc		4078290	0					
ANR	4086569	ArgumentList	cfg		4078290	1					
ANR	4086570	Argument	cfg		4078290	0					
ANR	4086571	Identifier	cfg		4078290	0					
ANR	4086572	Argument	buf		4078290	1					
ANR	4086573	Identifier	buf		4078290	0					
ANR	4086574	Argument	buf + 10		4078290	2					
ANR	4086575	AdditiveExpression	buf + 10		4078290	0		+			
ANR	4086576	Identifier	buf		4078290	0					
ANR	4086577	PrimaryExpression	10		4078290	1					
ANR	4086578	ExpressionStatement	"SETCB ( ""zoom.byte"" , ""h"" , & cb_zoombyte , ""Zoom callback to calculate each byte (See pz? for help)"" )"	3587:1:128773:128870	4078290	678	True				
ANR	4086579	CallExpression	"SETCB ( ""zoom.byte"" , ""h"" , & cb_zoombyte , ""Zoom callback to calculate each byte (See pz? for help)"" )"		4078290	0					
ANR	4086580	Callee	SETCB		4078290	0					
ANR	4086581	Identifier	SETCB		4078290	0					
ANR	4086582	ArgumentList	"""zoom.byte"""		4078290	1					
ANR	4086583	Argument	"""zoom.byte"""		4078290	0					
ANR	4086584	PrimaryExpression	"""zoom.byte"""		4078290	0					
ANR	4086585	Argument	"""h"""		4078290	1					
ANR	4086586	PrimaryExpression	"""h"""		4078290	0					
ANR	4086587	Argument	& cb_zoombyte		4078290	2					
ANR	4086588	UnaryOperationExpression	& cb_zoombyte		4078290	0					
ANR	4086589	UnaryOperator	&		4078290	0					
ANR	4086590	Identifier	cb_zoombyte		4078290	1					
ANR	4086591	Argument	"""Zoom callback to calculate each byte (See pz? for help)"""		4078290	3					
ANR	4086592	PrimaryExpression	"""Zoom callback to calculate each byte (See pz? for help)"""		4078290	0					
ANR	4086593	ExpressionStatement	"SETI ( ""zoom.from"" , 0 , ""Zoom start address"" )"	3588:1:128873:128916	4078290	679	True				
ANR	4086594	CallExpression	"SETI ( ""zoom.from"" , 0 , ""Zoom start address"" )"		4078290	0					
ANR	4086595	Callee	SETI		4078290	0					
ANR	4086596	Identifier	SETI		4078290	0					
ANR	4086597	ArgumentList	"""zoom.from"""		4078290	1					
ANR	4086598	Argument	"""zoom.from"""		4078290	0					
ANR	4086599	PrimaryExpression	"""zoom.from"""		4078290	0					
ANR	4086600	Argument	0		4078290	1					
ANR	4086601	PrimaryExpression	0		4078290	0					
ANR	4086602	Argument	"""Zoom start address"""		4078290	2					
ANR	4086603	PrimaryExpression	"""Zoom start address"""		4078290	0					
ANR	4086604	ExpressionStatement	"SETI ( ""zoom.maxsz"" , 512 , ""Zoom max size of block"" )"	3589:1:128919:128969	4078290	680	True				
ANR	4086605	CallExpression	"SETI ( ""zoom.maxsz"" , 512 , ""Zoom max size of block"" )"		4078290	0					
ANR	4086606	Callee	SETI		4078290	0					
ANR	4086607	Identifier	SETI		4078290	0					
ANR	4086608	ArgumentList	"""zoom.maxsz"""		4078290	1					
ANR	4086609	Argument	"""zoom.maxsz"""		4078290	0					
ANR	4086610	PrimaryExpression	"""zoom.maxsz"""		4078290	0					
ANR	4086611	Argument	512		4078290	1					
ANR	4086612	PrimaryExpression	512		4078290	0					
ANR	4086613	Argument	"""Zoom max size of block"""		4078290	2					
ANR	4086614	PrimaryExpression	"""Zoom max size of block"""		4078290	0					
ANR	4086615	ExpressionStatement	"SETI ( ""zoom.to"" , 0 , ""Zoom end address"" )"	3590:1:128972:129011	4078290	681	True				
ANR	4086616	CallExpression	"SETI ( ""zoom.to"" , 0 , ""Zoom end address"" )"		4078290	0					
ANR	4086617	Callee	SETI		4078290	0					
ANR	4086618	Identifier	SETI		4078290	0					
ANR	4086619	ArgumentList	"""zoom.to"""		4078290	1					
ANR	4086620	Argument	"""zoom.to"""		4078290	0					
ANR	4086621	PrimaryExpression	"""zoom.to"""		4078290	0					
ANR	4086622	Argument	0		4078290	1					
ANR	4086623	PrimaryExpression	0		4078290	0					
ANR	4086624	Argument	"""Zoom end address"""		4078290	2					
ANR	4086625	PrimaryExpression	"""Zoom end address"""		4078290	0					
ANR	4086626	ExpressionStatement	"n = NODECB ( ""zoom.in"" , ""io.map"" , & cb_searchin )"	3591:1:129014:129060	4078290	682	True				
ANR	4086627	AssignmentExpression	"n = NODECB ( ""zoom.in"" , ""io.map"" , & cb_searchin )"		4078290	0		=			
ANR	4086628	Identifier	n		4078290	0					
ANR	4086629	CallExpression	"NODECB ( ""zoom.in"" , ""io.map"" , & cb_searchin )"		4078290	1					
ANR	4086630	Callee	NODECB		4078290	0					
ANR	4086631	Identifier	NODECB		4078290	0					
ANR	4086632	ArgumentList	"""zoom.in"""		4078290	1					
ANR	4086633	Argument	"""zoom.in"""		4078290	0					
ANR	4086634	PrimaryExpression	"""zoom.in"""		4078290	0					
ANR	4086635	Argument	"""io.map"""		4078290	1					
ANR	4086636	PrimaryExpression	"""io.map"""		4078290	0					
ANR	4086637	Argument	& cb_searchin		4078290	2					
ANR	4086638	UnaryOperationExpression	& cb_searchin		4078290	0					
ANR	4086639	UnaryOperator	&		4078290	0					
ANR	4086640	Identifier	cb_searchin		4078290	1					
ANR	4086641	ExpressionStatement	"SETDESC ( n , ""Specify  boundaries for zoom"" )"	3592:1:129063:129106	4078290	683	True				
ANR	4086642	CallExpression	"SETDESC ( n , ""Specify  boundaries for zoom"" )"		4078290	0					
ANR	4086643	Callee	SETDESC		4078290	0					
ANR	4086644	Identifier	SETDESC		4078290	0					
ANR	4086645	ArgumentList	n		4078290	1					
ANR	4086646	Argument	n		4078290	0					
ANR	4086647	Identifier	n		4078290	0					
ANR	4086648	Argument	"""Specify  boundaries for zoom"""		4078290	1					
ANR	4086649	PrimaryExpression	"""Specify  boundaries for zoom"""		4078290	0					
ANR	4086650	ExpressionStatement	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"	3593:1:129109:129564	4078290	684	True				
ANR	4086651	CallExpression	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"		4078290	0					
ANR	4086652	Callee	SETOPTIONS		4078290	0					
ANR	4086653	Identifier	SETOPTIONS		4078290	0					
ANR	4086654	ArgumentList	n		4078290	1					
ANR	4086655	Argument	n		4078290	0					
ANR	4086656	Identifier	n		4078290	0					
ANR	4086657	Argument	"""raw"""		4078290	1					
ANR	4086658	PrimaryExpression	"""raw"""		4078290	0					
ANR	4086659	Argument	"""block"""		4078290	2					
ANR	4086660	PrimaryExpression	"""block"""		4078290	0					
ANR	4086661	Argument	"""bin.section"""		4078290	3					
ANR	4086662	PrimaryExpression	"""bin.section"""		4078290	0					
ANR	4086663	Argument	"""bin.sections"""		4078290	4					
ANR	4086664	PrimaryExpression	"""bin.sections"""		4078290	0					
ANR	4086665	Argument	"""bin.sections.rwx"""		4078290	5					
ANR	4086666	PrimaryExpression	"""bin.sections.rwx"""		4078290	0					
ANR	4086667	Argument	"""bin.sections.r"""		4078290	6					
ANR	4086668	PrimaryExpression	"""bin.sections.r"""		4078290	0					
ANR	4086669	Argument	"""bin.sections.rw"""		4078290	7					
ANR	4086670	PrimaryExpression	"""bin.sections.rw"""		4078290	0					
ANR	4086671	Argument	"""bin.sections.rx"""		4078290	8					
ANR	4086672	PrimaryExpression	"""bin.sections.rx"""		4078290	0					
ANR	4086673	Argument	"""bin.sections.wx"""		4078290	9					
ANR	4086674	PrimaryExpression	"""bin.sections.wx"""		4078290	0					
ANR	4086675	Argument	"""bin.sections.x"""		4078290	10					
ANR	4086676	PrimaryExpression	"""bin.sections.x"""		4078290	0					
ANR	4086677	Argument	"""io.map"""		4078290	11					
ANR	4086678	PrimaryExpression	"""io.map"""		4078290	0					
ANR	4086679	Argument	"""io.maps"""		4078290	12					
ANR	4086680	PrimaryExpression	"""io.maps"""		4078290	0					
ANR	4086681	Argument	"""io.maps.rwx"""		4078290	13					
ANR	4086682	PrimaryExpression	"""io.maps.rwx"""		4078290	0					
ANR	4086683	Argument	"""io.maps.r"""		4078290	14					
ANR	4086684	PrimaryExpression	"""io.maps.r"""		4078290	0					
ANR	4086685	Argument	"""io.maps.rw"""		4078290	15					
ANR	4086686	PrimaryExpression	"""io.maps.rw"""		4078290	0					
ANR	4086687	Argument	"""io.maps.rx"""		4078290	16					
ANR	4086688	PrimaryExpression	"""io.maps.rx"""		4078290	0					
ANR	4086689	Argument	"""io.maps.wx"""		4078290	17					
ANR	4086690	PrimaryExpression	"""io.maps.wx"""		4078290	0					
ANR	4086691	Argument	"""io.maps.x"""		4078290	18					
ANR	4086692	PrimaryExpression	"""io.maps.x"""		4078290	0					
ANR	4086693	Argument	"""dbg.stack"""		4078290	19					
ANR	4086694	PrimaryExpression	"""dbg.stack"""		4078290	0					
ANR	4086695	Argument	"""dbg.heap"""		4078290	20					
ANR	4086696	PrimaryExpression	"""dbg.heap"""		4078290	0					
ANR	4086697	Argument	"""dbg.map"""		4078290	21					
ANR	4086698	PrimaryExpression	"""dbg.map"""		4078290	0					
ANR	4086699	Argument	"""dbg.maps"""		4078290	22					
ANR	4086700	PrimaryExpression	"""dbg.maps"""		4078290	0					
ANR	4086701	Argument	"""dbg.maps.rwx"""		4078290	23					
ANR	4086702	PrimaryExpression	"""dbg.maps.rwx"""		4078290	0					
ANR	4086703	Argument	"""dbg.maps.r"""		4078290	24					
ANR	4086704	PrimaryExpression	"""dbg.maps.r"""		4078290	0					
ANR	4086705	Argument	"""dbg.maps.rw"""		4078290	25					
ANR	4086706	PrimaryExpression	"""dbg.maps.rw"""		4078290	0					
ANR	4086707	Argument	"""dbg.maps.rx"""		4078290	26					
ANR	4086708	PrimaryExpression	"""dbg.maps.rx"""		4078290	0					
ANR	4086709	Argument	"""dbg.maps.wx"""		4078290	27					
ANR	4086710	PrimaryExpression	"""dbg.maps.wx"""		4078290	0					
ANR	4086711	Argument	"""dbg.maps.x"""		4078290	28					
ANR	4086712	PrimaryExpression	"""dbg.maps.x"""		4078290	0					
ANR	4086713	Argument	"""anal.fcn"""		4078290	29					
ANR	4086714	PrimaryExpression	"""anal.fcn"""		4078290	0					
ANR	4086715	Argument	"""anal.bb"""		4078290	30					
ANR	4086716	PrimaryExpression	"""anal.bb"""		4078290	0					
ANR	4086717	Argument	NULL		4078290	31					
ANR	4086718	Identifier	NULL		4078290	0					
ANR	4086719	ExpressionStatement	"SETI ( ""lines.from"" , 0 , ""Start address for line seek"" )"	3601:1:129580:129633	4078290	685	True				
ANR	4086720	CallExpression	"SETI ( ""lines.from"" , 0 , ""Start address for line seek"" )"		4078290	0					
ANR	4086721	Callee	SETI		4078290	0					
ANR	4086722	Identifier	SETI		4078290	0					
ANR	4086723	ArgumentList	"""lines.from"""		4078290	1					
ANR	4086724	Argument	"""lines.from"""		4078290	0					
ANR	4086725	PrimaryExpression	"""lines.from"""		4078290	0					
ANR	4086726	Argument	0		4078290	1					
ANR	4086727	PrimaryExpression	0		4078290	0					
ANR	4086728	Argument	"""Start address for line seek"""		4078290	2					
ANR	4086729	PrimaryExpression	"""Start address for line seek"""		4078290	0					
ANR	4086730	ExpressionStatement	"SETCB ( ""lines.to"" , ""$s"" , & cb_linesto , ""End address for line seek"" )"	3602:1:129636:129702	4078290	686	True				
ANR	4086731	CallExpression	"SETCB ( ""lines.to"" , ""$s"" , & cb_linesto , ""End address for line seek"" )"		4078290	0					
ANR	4086732	Callee	SETCB		4078290	0					
ANR	4086733	Identifier	SETCB		4078290	0					
ANR	4086734	ArgumentList	"""lines.to"""		4078290	1					
ANR	4086735	Argument	"""lines.to"""		4078290	0					
ANR	4086736	PrimaryExpression	"""lines.to"""		4078290	0					
ANR	4086737	Argument	"""$s"""		4078290	1					
ANR	4086738	PrimaryExpression	"""$s"""		4078290	0					
ANR	4086739	Argument	& cb_linesto		4078290	2					
ANR	4086740	UnaryOperationExpression	& cb_linesto		4078290	0					
ANR	4086741	UnaryOperator	&		4078290	0					
ANR	4086742	Identifier	cb_linesto		4078290	1					
ANR	4086743	Argument	"""End address for line seek"""		4078290	3					
ANR	4086744	PrimaryExpression	"""End address for line seek"""		4078290	0					
ANR	4086745	ExpressionStatement	"SETCB ( ""lines.abs"" , ""false"" , & cb_linesabs , ""Enable absolute line numbers"" )"	3603:1:129705:129779	4078290	687	True				
ANR	4086746	CallExpression	"SETCB ( ""lines.abs"" , ""false"" , & cb_linesabs , ""Enable absolute line numbers"" )"		4078290	0					
ANR	4086747	Callee	SETCB		4078290	0					
ANR	4086748	Identifier	SETCB		4078290	0					
ANR	4086749	ArgumentList	"""lines.abs"""		4078290	1					
ANR	4086750	Argument	"""lines.abs"""		4078290	0					
ANR	4086751	PrimaryExpression	"""lines.abs"""		4078290	0					
ANR	4086752	Argument	"""false"""		4078290	1					
ANR	4086753	PrimaryExpression	"""false"""		4078290	0					
ANR	4086754	Argument	& cb_linesabs		4078290	2					
ANR	4086755	UnaryOperationExpression	& cb_linesabs		4078290	0					
ANR	4086756	UnaryOperator	&		4078290	0					
ANR	4086757	Identifier	cb_linesabs		4078290	1					
ANR	4086758	Argument	"""Enable absolute line numbers"""		4078290	3					
ANR	4086759	PrimaryExpression	"""Enable absolute line numbers"""		4078290	0					
ANR	4086760	ExpressionStatement	"r_config_lock ( cfg , true )"	3605:1:129783:129808	4078290	688	True				
ANR	4086761	CallExpression	"r_config_lock ( cfg , true )"		4078290	0					
ANR	4086762	Callee	r_config_lock		4078290	0					
ANR	4086763	Identifier	r_config_lock		4078290	0					
ANR	4086764	ArgumentList	cfg		4078290	1					
ANR	4086765	Argument	cfg		4078290	0					
ANR	4086766	Identifier	cfg		4078290	0					
ANR	4086767	Argument	true		4078290	1					
ANR	4086768	Identifier	true		4078290	0					
ANR	4086769	ReturnStatement	return true ;	3606:1:129811:129822	4078290	689	True				
ANR	4086770	Identifier	true		4078290	0					
ANR	4086771	ReturnType	R_API int		4078290	1					
ANR	4086772	Identifier	r_core_config_init		4078290	2					
ANR	4086773	ParameterList	RCore * core		4078290	3					
ANR	4086774	Parameter	RCore * core	2746:29:74660:74670	4078290	0	True				
ANR	4086775	ParameterType	RCore *		4078290	0					
ANR	4086776	Identifier	core		4078290	1					
ANR	4086777	CFGEntryNode	ENTRY		4078290		True				
ANR	4086778	CFGExitNode	EXIT		4078290		True				
ANR	4086779	Symbol	& cb_hex_ascii		4078290						
ANR	4086780	Symbol	& scr_ansicon		4078290						
ANR	4086781	Symbol	& cb_binminstr		4078290						
ANR	4086782	Symbol	& cb_mdevrange		4078290						
ANR	4086783	Symbol	& cb_runprofile		4078290						
ANR	4086784	Symbol	R_SYS_ARCH		4078290						
ANR	4086785	Symbol	& cb_analijmp		4078290						
ANR	4086786	Symbol	& cb_dirtmp		4078290						
ANR	4086787	Symbol	r_cons_singleton ( ) -> ansicon		4078290						
ANR	4086788	Symbol	R2_HOME_PDB		4078290						
ANR	4086789	Symbol	path		4078290						
ANR	4086790	Symbol	& cb_analsleep		4078290						
ANR	4086791	Symbol	& cb_zoombyte		4078290						
ANR	4086792	Symbol	& cb_useldr		4078290						
ANR	4086793	Symbol	& cb_fixrows		4078290						
ANR	4086794	Symbol	& cb_graphformat		4078290						
ANR	4086795	Symbol	& cb_io_cache_mode		4078290						
ANR	4086796	Symbol	& cb_hexcols		4078290						
ANR	4086797	Symbol	& cb_anal_roregs		4078290						
ANR	4086798	Symbol	R2_SDB_MAGIC		4078290						
ANR	4086799	Symbol	& cb_dirzigns		4078290						
ANR	4086800	Symbol	& cb_dirpfx		4078290						
ANR	4086801	Symbol	cfg -> cb_printf		4078290						
ANR	4086802	Symbol	& cb_analstrings		4078290						
ANR	4086803	Symbol	& cb_scrflush		4078290						
ANR	4086804	Symbol	tmpdir		4078290						
ANR	4086805	Symbol	& cb_maxname		4078290						
ANR	4086806	Symbol	& cb_io_cache_read		4078290						
ANR	4086807	Symbol	& cb_binmaxstr		4078290						
ANR	4086808	Symbol	& cb_analverbose		4078290						
ANR	4086809	Symbol	r_cons_is_utf8		4078290						
ANR	4086810	Symbol	& cb_iopcacheread		4078290						
ANR	4086811	Symbol	& cb_rawstr		4078290						
ANR	4086812	Symbol	& cb_dbg_clone		4078290						
ANR	4086813	Symbol	core -> print -> flags		4078290						
ANR	4086814	Symbol	& cb_dbg_args		4078290						
ANR	4086815	Symbol	R2_HOME_WWWROOT		4078290						
ANR	4086816	Symbol	* core		4078290						
ANR	4086817	Symbol	& cb_tracetag		4078290						
ANR	4086818	Symbol	r_sys_prefix		4078290						
ANR	4086819	Symbol	core -> anal		4078290						
ANR	4086820	Symbol	COLOR_MODE_16		4078290						
ANR	4086821	Symbol	core -> cons		4078290						
ANR	4086822	Symbol	& cb_segoff		4078290						
ANR	4086823	Symbol	& cb_scrnkey		4078290						
ANR	4086824	Symbol	& cb_asmpseudo		4078290						
ANR	4086825	Symbol	& cb_utf8_curvy		4078290						
ANR	4086826	Symbol	& cb_esilstackdepth		4078290						
ANR	4086827	Symbol	& cb_dbgsnap		4078290						
ANR	4086828	Symbol	cfg		4078290						
ANR	4086829	Symbol	& cb_analgraphdepth		4078290						
ANR	4086830	Symbol	h		4078290						
ANR	4086831	Symbol	i		4078290						
ANR	4086832	Symbol	& cb_cmdlog		4078290						
ANR	4086833	Symbol	cmdpdc		4078290						
ANR	4086834	Symbol	& cb_diff_sort		4078290						
ANR	4086835	Symbol	n		4078290						
ANR	4086836	Symbol	& cb_asmarch		4078290						
ANR	4086837	Symbol	p		4078290						
ANR	4086838	Symbol	& cb_cmdrepeat		4078290						
ANR	4086839	Symbol	buf		4078290						
ANR	4086840	Symbol	NODECB		4078290						
ANR	4086841	Symbol	* core -> print		4078290						
ANR	4086842	Symbol	& cb_cfg_fortunes_type		4078290						
ANR	4086843	Symbol	& cb_iopcachewrite		4078290						
ANR	4086844	Symbol	& cb_analarmthumb		4078290						
ANR	4086845	Symbol	* r_cons_singleton		4078290						
ANR	4086846	Symbol	& cb_trace		4078290						
ANR	4086847	Symbol	& cb_anal_bb_max_size		4078290						
ANR	4086848	Symbol	& cb_dbg_execs		4078290						
ANR	4086849	Symbol	& cb_io_cache		4078290						
ANR	4086850	Symbol	& cb_analmaxrefs		4078290						
ANR	4086851	Symbol	& cb_anal_rnr		4078290						
ANR	4086852	Symbol	& cb_fsview		4078290						
ANR	4086853	Symbol	& cb_scrstrconv		4078290						
ANR	4086854	Symbol	& cb_cmd_esil_step_out		4078290						
ANR	4086855	Symbol	& cb_anal_ignbithints		4078290						
ANR	4086856	Symbol	& cb_dbg_gdb_page_size		4078290						
ANR	4086857	Symbol	& cb_scrhighlight		4078290						
ANR	4086858	Symbol	& cb_anal_pushret		4078290						
ANR	4086859	Symbol	r_config_new		4078290						
ANR	4086860	Symbol	& cb_dbgstatus		4078290						
ANR	4086861	Symbol	& cb_asmparser		4078290						
ANR	4086862	Symbol	& cb_cmd_esil_trap		4078290						
ANR	4086863	Symbol	& cb_dotted		4078290						
ANR	4086864	Symbol	& cb_analvars		4078290						
ANR	4086865	Symbol	& cb_anal_cpp_abi		4078290						
ANR	4086866	Symbol	& cb_cmddepth		4078290						
ANR	4086867	Symbol	& cb_analrecont		4078290						
ANR	4086868	Symbol	& cb_dbg_libs		4078290						
ANR	4086869	Symbol	R_JOIN_2_PATHS		4078290						
ANR	4086870	Symbol	& cb_asmlineswidth		4078290						
ANR	4086871	Symbol	& cb_io_cache_write		4078290						
ANR	4086872	Symbol	& cb_pager		4078290						
ANR	4086873	Symbol	& cb_linesto		4078290						
ANR	4086874	Symbol	& cb_cmd_esil_step		4078290						
ANR	4086875	Symbol	R_SYS_TMP		4078290						
ANR	4086876	Symbol	& cb_dbg_unlibs		4078290						
ANR	4086877	Symbol	& cb_analex		4078290						
ANR	4086878	Symbol	& cb_scrcolumns		4078290						
ANR	4086879	Symbol	& cb_ioautofd		4078290						
ANR	4086880	Symbol	& cb_anal_jmpref		4078290						
ANR	4086881	Symbol	& cb_anal_jmpabove		4078290						
ANR	4086882	Symbol	& cb_analarch		4078290						
ANR	4086883	Symbol	& cb_analnopskip		4078290						
ANR	4086884	Symbol	& cb_scr_color_grep_highlight		4078290						
ANR	4086885	Symbol	& cb_debase64		4078290						
ANR	4086886	Symbol	& cb_fixcolumns		4078290						
ANR	4086887	Symbol	& cb_scrlast		4078290						
ANR	4086888	Symbol	& cb_cmd_hexcursor		4078290						
ANR	4086889	Symbol	& cb_bigendian		4078290						
ANR	4086890	Symbol	false		4078290						
ANR	4086891	Symbol	& cb_binforce		4078290						
ANR	4086892	Symbol	& cb_dbgbpsize		4078290						
ANR	4086893	Symbol	& cb_analafterjmp		4078290						
ANR	4086894	Symbol	asmarch		4078290						
ANR	4086895	Symbol	& cb_fps		4078290						
ANR	4086896	Symbol	& cb_cfg_fortunes		4078290						
ANR	4086897	Symbol	& cb_dirhome		4078290						
ANR	4086898	Symbol	& cb_scr_histblock		4078290						
ANR	4086899	Symbol	strdup		4078290						
ANR	4086900	Symbol	& cb_asmcpu		4078290						
ANR	4086901	Symbol	& cb_asmsyntax		4078290						
ANR	4086902	Symbol	& cb_strpurge		4078290						
ANR	4086903	Symbol	& cb_dbg_forks		4078290						
ANR	4086904	Symbol	& cb_breaklines		4078290						
ANR	4086905	Symbol	& cb_anal_cjmpref		4078290						
ANR	4086906	Symbol	& cb_iotrap		4078290						
ANR	4086907	Symbol	& cb_scr_wideoff		4078290						
ANR	4086908	Symbol	& cb_timezone		4078290						
ANR	4086909	Symbol	r_sys_getenv		4078290						
ANR	4086910	Symbol	COLOR_MODE_DISABLED		4078290						
ANR	4086911	Symbol	& cb_cmd_esil_mdev		4078290						
ANR	4086912	Symbol	cb_log_config_file		4078290						
ANR	4086913	Symbol	& cb_anal_loads		4078290						
ANR	4086914	Symbol	& cb_binat		4078290						
ANR	4086915	Symbol	& cb_decoff		4078290						
ANR	4086916	Symbol	& cb_bdc		4078290						
ANR	4086917	Symbol	__dbg_swstep_getter		4078290						
ANR	4086918	Symbol	& cb_usextr		4078290						
ANR	4086919	Symbol	& cb_hex_hdroff		4078290						
ANR	4086920	Symbol	& cb_scr_gadgets		4078290						
ANR	4086921	Symbol	& cb_iopcache		4078290						
ANR	4086922	Symbol	& cb_asm_invhex		4078290						
ANR	4086923	Symbol	& cb_anal_searchstringrefs		4078290						
ANR	4086924	Symbol	& cb_asm_armimm		4078290						
ANR	4086925	Symbol	& cb_dbg_verbose		4078290						
ANR	4086926	Symbol	& cb_io_unalloc		4078290						
ANR	4086927	Symbol	& cb_searchin		4078290						
ANR	4086928	Symbol	& cb_scrrainbow		4078290						
ANR	4086929	Symbol	r_file_tmpdir		4078290						
ANR	4086930	Symbol	& cb_anal_from		4078290						
ANR	4086931	Symbol	& cb_asmos		4078290						
ANR	4086932	Symbol	& cb_analdepth		4078290						
ANR	4086933	Symbol	* cfg		4078290						
ANR	4086934	Symbol	invoke_dir		4078290						
ANR	4086935	Symbol	& cb_hex_bytes		4078290						
ANR	4086936	Symbol	cb_scrfgets		4078290						
ANR	4086937	Symbol	& cb_scrbreakword		4078290						
ANR	4086938	Symbol	& cb_analeobjmp		4078290						
ANR	4086939	Symbol	r_sys_whoami		4078290						
ANR	4086940	Symbol	asmcpu		4078290						
ANR	4086941	Symbol	& cb_dirsrc		4078290						
ANR	4086942	Symbol	pfx		4078290						
ANR	4086943	Symbol	& cb_anal_trycatch		4078290						
ANR	4086944	Symbol	& cb_exectrap		4078290						
ANR	4086945	Symbol	* core -> cons		4078290						
ANR	4086946	Symbol	& cb_binfilter		4078290						
ANR	4086947	Symbol	r_config_get		4078290						
ANR	4086948	Symbol	& cb_hex_header		4078290						
ANR	4086949	Symbol	& cb_io_pava		4078290						
ANR	4086950	Symbol	& cb_cfgsanbox		4078290						
ANR	4086951	Symbol	& cb_scr_color_grep		4078290						
ANR	4086952	Symbol	& cb_esilverbose		4078290						
ANR	4086953	Symbol	& cb_screcho		4078290						
ANR	4086954	Symbol	& cb_anal_gp		4078290						
ANR	4086955	Symbol	& cb_color		4078290						
ANR	4086956	Symbol	& cb_log_events		4078290						
ANR	4086957	Symbol	& cb_utf8		4078290						
ANR	4086958	Symbol	& cb_searchalign		4078290						
ANR	4086959	Symbol	& cb_filepath		4078290						
ANR	4086960	Symbol	R_PRINT_FLAGS_COLOR		4078290						
ANR	4086961	Symbol	& cb_analhpskip		4078290						
ANR	4086962	Symbol	& cb_dbgbtdepth		4078290						
ANR	4086963	Symbol	& cb_cmd_esil_todo		4078290						
ANR	4086964	Symbol	& cb_io_oxff		4078290						
ANR	4086965	Symbol	& cb_cmd_esil_ioer		4078290						
ANR	4086966	Symbol	& cb_hex_pairs		4078290						
ANR	4086967	Symbol	& cb_scrpagesize		4078290						
ANR	4086968	Symbol	& cb_scrprompt		4078290						
ANR	4086969	Symbol	& cb_asmtailsub		4078290						
ANR	4086970	Symbol	& cb_emustr		4078290						
ANR	4086971	Symbol	& cb_hex_style		4078290						
ANR	4086972	Symbol	& cb_teefile		4078290						
ANR	4086973	Symbol	cb_color_getter		4078290						
ANR	4086974	Symbol	core -> cons -> rows		4078290						
ANR	4086975	Symbol	& cb_anal_jmpmid		4078290						
ANR	4086976	Symbol	& cb_cmd_esil_intr		4078290						
ANR	4086977	Symbol	& cb_asmfeatures		4078290						
ANR	4086978	Symbol	& cb_analcpu		4078290						
ANR	4086979	Symbol	* core -> anal		4078290						
ANR	4086980	Symbol	& cb_dbg_follow_child		4078290						
ANR	4086981	Symbol	& cb_flag_realnames		4078290						
ANR	4086982	Symbol	& cb_ioaslr		4078290						
ANR	4086983	Symbol	& cb_scr_vi		4078290						
ANR	4086984	Symbol	cb_log_config_colors		4078290						
ANR	4086985	Symbol	& cb_midflags		4078290						
ANR	4086986	Symbol	& cb_linesabs		4078290						
ANR	4086987	Symbol	R_SYS_OS		4078290						
ANR	4086988	Symbol	& cb_scr_bgfill		4078290						
ANR	4086989	Symbol	& cb_asmsecsub		4078290						
ANR	4086990	Symbol	& cb_cfgdatefmt		4078290						
ANR	4086991	Symbol	& cb_cmdpdc		4078290						
ANR	4086992	Symbol	R2_PLUGINS		4078290						
ANR	4086993	Symbol	& cb_asmassembler		4078290						
ANR	4086994	Symbol	R_SYS_HOME		4078290						
ANR	4086995	Symbol	& cb_malloc		4078290						
ANR	4086996	Symbol	& cb_cfgdebug		4078290						
ANR	4086997	Symbol	& cb_hexcomments		4078290						
ANR	4086998	Symbol	R2_HOME_ZIGNS		4078290						
ANR	4086999	Symbol	& cb_completion_maxtab		4078290						
ANR	4087000	Symbol	& cb_bindbginfo		4078290						
ANR	4087001	Symbol	cfg -> num		4078290						
ANR	4087002	Symbol	core -> num		4078290						
ANR	4087003	Symbol	& cb_search_kwidx		4078290						
ANR	4087004	Symbol	& cb_binstrings		4078290						
ANR	4087005	Symbol	& cb_asmbits		4078290						
ANR	4087006	Symbol	strcmp		4078290						
ANR	4087007	Symbol	& cb_asmvarsubmin		4078290						
ANR	4087008	Symbol	& cb_scr_prompt_popup		4078290						
ANR	4087009	Symbol	& cb_str_escbslash		4078290						
ANR	4087010	Symbol	NULL		4078290						
ANR	4087011	Symbol	& cb_binmaxstrbuf		4078290						
ANR	4087012	Symbol	& cb_stopthreads		4078290						
ANR	4087013	Symbol	& cb_scrrows		4078290						
ANR	4087014	Symbol	& cb_dbg_aftersc		4078290						
ANR	4087015	Symbol	& cb_scrlinesleep		4078290						
ANR	4087016	Symbol	& cb_anal_brokenrefs		4078290						
ANR	4087017	Symbol	& cb_swstep		4078290						
ANR	4087018	Symbol	cb_log_config_srcinfo		4078290						
ANR	4087019	Symbol	& cb_dbgbackend		4078290						
ANR	4087020	Symbol	core		4078290						
ANR	4087021	Symbol	& cb_binverbose		4078290						
ANR	4087022	Symbol	& cb_ioff		4078290						
ANR	4087023	Symbol	& cb_binstrenc		4078290						
ANR	4087024	Symbol	true		4078290						
ANR	4087025	Symbol	& cb_hex_align		4078290						
ANR	4087026	Symbol	& cb_anal_followdatarefs		4078290						
ANR	4087027	Symbol	& cb_emuskip		4078290						
ANR	4087028	Symbol	& cb_hexstride		4078290						
ANR	4087029	Symbol	core -> print		4078290						
ANR	4087030	Symbol	& cb_rows		4078290						
ANR	4087031	Symbol	& cb_anal_limits		4078290						
ANR	4087032	Symbol	& cb_cfgcorelog		4078290						
ANR	4087033	Symbol	& cb_iova		4078290						
ANR	4087034	Symbol	pdb_path		4078290						
ANR	4087035	Symbol	& cb_gotolimit		4078290						
ANR	4087036	Symbol	r_str_newf		4078290						
ANR	4087037	Symbol	core -> anal -> esil_goto_limit		4078290						
ANR	4087038	Symbol	& cb_scrint		4078290						
ANR	4087039	Symbol	& cb_scrhtml		4078290						
ANR	4087040	Symbol	r_cons_singleton		4078290						
ANR	4087041	Symbol	UT64_MAX		4078290						
ANR	4087042	Symbol	& cb_cmdtimes		4078290						
ANR	4087043	Symbol	r_str_home		4078290						
ANR	4087044	Symbol	* * core		4078290						
ANR	4087045	Symbol	& cb_dbgbep		4078290						
ANR	4087046	Symbol	core -> config		4078290						
ANR	4087047	Symbol	& cb_strfilter		4078290						
ANR	4087048	Symbol	r_str_bool		4078290						
ANR	4087049	Symbol	& cb_contiguous		4078290						
ANR	4087050	Symbol	& cb_seggrn		4078290						
ANR	4087051	Symbol	& cb_dbg_gdb_retries		4078290						
ANR	4087052	Symbol	& cb_consbreak		4078290						
ANR	4087053	Symbol	& cb_anal_jmptbl		4078290						
ANR	4087054	Symbol	& cb_io_unalloc_ch		4078290						
ANR	4087055	Symbol	R2_PREFIX		4078290						
ANR	4087056	Symbol	& cb_dbg_btalgo		4078290						
ANR	4087057	Symbol	& cb_binprefix		4078290						
ANR	4087058	Symbol	& cb_hexcompact		4078290						
ANR	4087059	Symbol	& cb_anal_endsize		4078290						
ANR	4087060	Symbol	& cb_asm_pcalign		4078290						
ANR	4087061	Symbol	& cb_debug_hitinfo		4078290						
ANR	4087062	Symbol	NODEICB		4078290						
ANR	4087063	Symbol	& cb_scrnull		4078290						
ANR	4087064	Symbol	& cb_hex_section		4078290						
ANR	4087065	Symbol	r_cons_printf		4078290						
ANR	4087066	Function	r_core_config_update	3609:0:129827:129981							
ANR	4087067	FunctionDef	r_core_config_update (RCore * core)		4087066	0					
ANR	4087068	CompoundStatement		3609:45:129872:129981	4087066	0					
ANR	4087069	IdentifierDeclStatement	"RConfigNode * cmdpdc = r_config_node_get ( core -> config , ""cmd.pdc"" ) ;"	3610:1:129875:129940	4087066	0	True				
ANR	4087070	IdentifierDecl	"* cmdpdc = r_config_node_get ( core -> config , ""cmd.pdc"" )"		4087066	0					
ANR	4087071	IdentifierDeclType	RConfigNode *		4087066	0					
ANR	4087072	Identifier	cmdpdc		4087066	1					
ANR	4087073	AssignmentExpression	"* cmdpdc = r_config_node_get ( core -> config , ""cmd.pdc"" )"		4087066	2		=			
ANR	4087074	Identifier	cmdpdc		4087066	0					
ANR	4087075	CallExpression	"r_config_node_get ( core -> config , ""cmd.pdc"" )"		4087066	1					
ANR	4087076	Callee	r_config_node_get		4087066	0					
ANR	4087077	Identifier	r_config_node_get		4087066	0					
ANR	4087078	ArgumentList	core -> config		4087066	1					
ANR	4087079	Argument	core -> config		4087066	0					
ANR	4087080	PtrMemberAccess	core -> config		4087066	0					
ANR	4087081	Identifier	core		4087066	0					
ANR	4087082	Identifier	config		4087066	1					
ANR	4087083	Argument	"""cmd.pdc"""		4087066	1					
ANR	4087084	PrimaryExpression	"""cmd.pdc"""		4087066	0					
ANR	4087085	ExpressionStatement	"update_cmdpdc_options ( core , cmdpdc )"	3611:1:129943:129979	4087066	1	True				
ANR	4087086	CallExpression	"update_cmdpdc_options ( core , cmdpdc )"		4087066	0					
ANR	4087087	Callee	update_cmdpdc_options		4087066	0					
ANR	4087088	Identifier	update_cmdpdc_options		4087066	0					
ANR	4087089	ArgumentList	core		4087066	1					
ANR	4087090	Argument	core		4087066	0					
ANR	4087091	Identifier	core		4087066	0					
ANR	4087092	Argument	cmdpdc		4087066	1					
ANR	4087093	Identifier	cmdpdc		4087066	0					
ANR	4087094	ReturnType	R_API void		4087066	1					
ANR	4087095	Identifier	r_core_config_update		4087066	2					
ANR	4087096	ParameterList	RCore * core		4087066	3					
ANR	4087097	Parameter	RCore * core	3609:32:129859:129869	4087066	0	True				
ANR	4087098	ParameterType	RCore *		4087066	0					
ANR	4087099	Identifier	core		4087066	1					
ANR	4087100	CFGEntryNode	ENTRY		4087066		True				
ANR	4087101	CFGExitNode	EXIT		4087066		True				
ANR	4087102	Symbol	core -> config		4087066						
ANR	4087103	Symbol	core		4087066						
ANR	4087104	Symbol	* core		4087066						
ANR	4087105	Symbol	cmdpdc		4087066						
ANR	4087106	Symbol	r_config_node_get		4087066						
