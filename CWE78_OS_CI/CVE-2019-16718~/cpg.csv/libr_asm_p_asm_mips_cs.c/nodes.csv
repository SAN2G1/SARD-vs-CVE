command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3502456	File	data/converged/CVE-2019-16718~_radare2/libr_asm_p_asm_mips_cs.c								
ANR	3502457	DeclStmt									
ANR	3502458	Decl							R_IPI int	"R_IPI int ( const char * str , ut64 pc , ut8 * out )"	mips_assemble
ANR	3502459	DeclStmt									
ANR	3502460	Decl							csh	csh	cd
ANR	3502461	Function	disassemble	12:0:232:1690							
ANR	3502462	FunctionDef	"disassemble (RAsm * a , RAsmOp * op , const ut8 * buf , int len)"		3502461	0					
ANR	3502463	CompoundStatement		12:69:301:1690	3502461	0					
ANR	3502464	IdentifierDeclStatement	cs_insn * insn ;	13:1:304:317	3502461	0	True				
ANR	3502465	IdentifierDecl	* insn		3502461	0					
ANR	3502466	IdentifierDeclType	cs_insn *		3502461	0					
ANR	3502467	Identifier	insn		3502461	1					
ANR	3502468	IdentifierDeclStatement	"int mode , n , ret = - 1 ;"	14:1:320:341	3502461	1	True				
ANR	3502469	IdentifierDecl	mode		3502461	0					
ANR	3502470	IdentifierDeclType	int		3502461	0					
ANR	3502471	Identifier	mode		3502461	1					
ANR	3502472	IdentifierDecl	n		3502461	1					
ANR	3502473	IdentifierDeclType	int		3502461	0					
ANR	3502474	Identifier	n		3502461	1					
ANR	3502475	IdentifierDecl	ret = - 1		3502461	2					
ANR	3502476	IdentifierDeclType	int		3502461	0					
ANR	3502477	Identifier	ret		3502461	1					
ANR	3502478	AssignmentExpression	ret = - 1		3502461	2		=			
ANR	3502479	Identifier	ret		3502461	0					
ANR	3502480	UnaryOperationExpression	- 1		3502461	1					
ANR	3502481	UnaryOperator	-		3502461	0					
ANR	3502482	PrimaryExpression	1		3502461	1					
ANR	3502483	ExpressionStatement	mode = ( a -> big_endian ) ? CS_MODE_BIG_ENDIAN : CS_MODE_LITTLE_ENDIAN	15:1:344:409	3502461	2	True				
ANR	3502484	AssignmentExpression	mode = ( a -> big_endian ) ? CS_MODE_BIG_ENDIAN : CS_MODE_LITTLE_ENDIAN		3502461	0		=			
ANR	3502485	Identifier	mode		3502461	0					
ANR	3502486	ConditionalExpression	( a -> big_endian ) ? CS_MODE_BIG_ENDIAN : CS_MODE_LITTLE_ENDIAN		3502461	1					
ANR	3502487	Condition	a -> big_endian		3502461	0					
ANR	3502488	PtrMemberAccess	a -> big_endian		3502461	0					
ANR	3502489	Identifier	a		3502461	0					
ANR	3502490	Identifier	big_endian		3502461	1					
ANR	3502491	Identifier	CS_MODE_BIG_ENDIAN		3502461	1					
ANR	3502492	Identifier	CS_MODE_LITTLE_ENDIAN		3502461	2					
ANR	3502493	IfStatement	if ( ! op )		3502461	3					
ANR	3502494	Condition	! op	16:5:416:418	3502461	0	True				
ANR	3502495	UnaryOperationExpression	! op		3502461	0					
ANR	3502496	UnaryOperator	!		3502461	0					
ANR	3502497	Identifier	op		3502461	1					
ANR	3502498	CompoundStatement		5:10:119:119	3502461	1					
ANR	3502499	ReturnStatement	return 0 ;	17:2:425:433	3502461	0	True				
ANR	3502500	PrimaryExpression	0		3502461	0					
ANR	3502501	IfStatement	if ( a -> cpu && * a -> cpu )		3502461	4					
ANR	3502502	Condition	a -> cpu && * a -> cpu	19:5:443:459	3502461	0	True				
ANR	3502503	AndExpression	a -> cpu && * a -> cpu		3502461	0		&&			
ANR	3502504	PtrMemberAccess	a -> cpu		3502461	0					
ANR	3502505	Identifier	a		3502461	0					
ANR	3502506	Identifier	cpu		3502461	1					
ANR	3502507	UnaryOperationExpression	* a -> cpu		3502461	1					
ANR	3502508	UnaryOperator	*		3502461	0					
ANR	3502509	PtrMemberAccess	a -> cpu		3502461	1					
ANR	3502510	Identifier	a		3502461	0					
ANR	3502511	Identifier	cpu		3502461	1					
ANR	3502512	CompoundStatement		8:24:160:160	3502461	1					
ANR	3502513	IfStatement	"if ( ! strcmp ( a -> cpu , ""micro"" ) )"		3502461	0					
ANR	3502514	Condition	"! strcmp ( a -> cpu , ""micro"" )"	20:6:470:494	3502461	0	True				
ANR	3502515	UnaryOperationExpression	"! strcmp ( a -> cpu , ""micro"" )"		3502461	0					
ANR	3502516	UnaryOperator	!		3502461	0					
ANR	3502517	CallExpression	"strcmp ( a -> cpu , ""micro"" )"		3502461	1					
ANR	3502518	Callee	strcmp		3502461	0					
ANR	3502519	Identifier	strcmp		3502461	0					
ANR	3502520	ArgumentList	a -> cpu		3502461	1					
ANR	3502521	Argument	a -> cpu		3502461	0					
ANR	3502522	PtrMemberAccess	a -> cpu		3502461	0					
ANR	3502523	Identifier	a		3502461	0					
ANR	3502524	Identifier	cpu		3502461	1					
ANR	3502525	Argument	"""micro"""		3502461	1					
ANR	3502526	PrimaryExpression	"""micro"""		3502461	0					
ANR	3502527	CompoundStatement		9:33:195:195	3502461	1					
ANR	3502528	ExpressionStatement	mode |= CS_MODE_MICRO	21:3:502:523	3502461	0	True				
ANR	3502529	AssignmentExpression	mode |= CS_MODE_MICRO		3502461	0		|=			
ANR	3502530	Identifier	mode		3502461	0					
ANR	3502531	Identifier	CS_MODE_MICRO		3502461	1					
ANR	3502532	ElseStatement	else		3502461	0					
ANR	3502533	IfStatement	"if ( ! strcmp ( a -> cpu , ""r6"" ) )"		3502461	0					
ANR	3502534	Condition	"! strcmp ( a -> cpu , ""r6"" )"	22:13:538:559	3502461	0	True				
ANR	3502535	UnaryOperationExpression	"! strcmp ( a -> cpu , ""r6"" )"		3502461	0					
ANR	3502536	UnaryOperator	!		3502461	0					
ANR	3502537	CallExpression	"strcmp ( a -> cpu , ""r6"" )"		3502461	1					
ANR	3502538	Callee	strcmp		3502461	0					
ANR	3502539	Identifier	strcmp		3502461	0					
ANR	3502540	ArgumentList	a -> cpu		3502461	1					
ANR	3502541	Argument	a -> cpu		3502461	0					
ANR	3502542	PtrMemberAccess	a -> cpu		3502461	0					
ANR	3502543	Identifier	a		3502461	0					
ANR	3502544	Identifier	cpu		3502461	1					
ANR	3502545	Argument	"""r6"""		3502461	1					
ANR	3502546	PrimaryExpression	"""r6"""		3502461	0					
ANR	3502547	CompoundStatement		11:37:260:260	3502461	1					
ANR	3502548	ExpressionStatement	mode |= CS_MODE_MIPS32R6	23:3:567:591	3502461	0	True				
ANR	3502549	AssignmentExpression	mode |= CS_MODE_MIPS32R6		3502461	0		|=			
ANR	3502550	Identifier	mode		3502461	0					
ANR	3502551	Identifier	CS_MODE_MIPS32R6		3502461	1					
ANR	3502552	ElseStatement	else		3502461	0					
ANR	3502553	IfStatement	"if ( ! strcmp ( a -> cpu , ""v3"" ) )"		3502461	0					
ANR	3502554	Condition	"! strcmp ( a -> cpu , ""v3"" )"	24:13:606:627	3502461	0	True				
ANR	3502555	UnaryOperationExpression	"! strcmp ( a -> cpu , ""v3"" )"		3502461	0					
ANR	3502556	UnaryOperator	!		3502461	0					
ANR	3502557	CallExpression	"strcmp ( a -> cpu , ""v3"" )"		3502461	1					
ANR	3502558	Callee	strcmp		3502461	0					
ANR	3502559	Identifier	strcmp		3502461	0					
ANR	3502560	ArgumentList	a -> cpu		3502461	1					
ANR	3502561	Argument	a -> cpu		3502461	0					
ANR	3502562	PtrMemberAccess	a -> cpu		3502461	0					
ANR	3502563	Identifier	a		3502461	0					
ANR	3502564	Identifier	cpu		3502461	1					
ANR	3502565	Argument	"""v3"""		3502461	1					
ANR	3502566	PrimaryExpression	"""v3"""		3502461	0					
ANR	3502567	CompoundStatement		13:37:328:328	3502461	1					
ANR	3502568	ExpressionStatement	mode |= CS_MODE_MIPS3	25:3:635:656	3502461	0	True				
ANR	3502569	AssignmentExpression	mode |= CS_MODE_MIPS3		3502461	0		|=			
ANR	3502570	Identifier	mode		3502461	0					
ANR	3502571	Identifier	CS_MODE_MIPS3		3502461	1					
ANR	3502572	ElseStatement	else		3502461	0					
ANR	3502573	IfStatement	"if ( ! strcmp ( a -> cpu , ""v2"" ) )"		3502461	0					
ANR	3502574	Condition	"! strcmp ( a -> cpu , ""v2"" )"	26:13:671:692	3502461	0	True				
ANR	3502575	UnaryOperationExpression	"! strcmp ( a -> cpu , ""v2"" )"		3502461	0					
ANR	3502576	UnaryOperator	!		3502461	0					
ANR	3502577	CallExpression	"strcmp ( a -> cpu , ""v2"" )"		3502461	1					
ANR	3502578	Callee	strcmp		3502461	0					
ANR	3502579	Identifier	strcmp		3502461	0					
ANR	3502580	ArgumentList	a -> cpu		3502461	1					
ANR	3502581	Argument	a -> cpu		3502461	0					
ANR	3502582	PtrMemberAccess	a -> cpu		3502461	0					
ANR	3502583	Identifier	a		3502461	0					
ANR	3502584	Identifier	cpu		3502461	1					
ANR	3502585	Argument	"""v2"""		3502461	1					
ANR	3502586	PrimaryExpression	"""v2"""		3502461	0					
ANR	3502587	CompoundStatement		15:37:393:393	3502461	1					
ANR	3502588	ExpressionStatement	mode |= CS_MODE_MIPS2	28:3:721:742	3502461	0	True				
ANR	3502589	AssignmentExpression	mode |= CS_MODE_MIPS2		3502461	0		|=			
ANR	3502590	Identifier	mode		3502461	0					
ANR	3502591	Identifier	CS_MODE_MIPS2		3502461	1					
ANR	3502592	ExpressionStatement	mode |= ( a -> bits == 64 ) ? CS_MODE_MIPS64 : CS_MODE_MIPS32	32:1:759:815	3502461	5	True				
ANR	3502593	AssignmentExpression	mode |= ( a -> bits == 64 ) ? CS_MODE_MIPS64 : CS_MODE_MIPS32		3502461	0		|=			
ANR	3502594	Identifier	mode		3502461	0					
ANR	3502595	ConditionalExpression	( a -> bits == 64 ) ? CS_MODE_MIPS64 : CS_MODE_MIPS32		3502461	1					
ANR	3502596	Condition	a -> bits == 64		3502461	0					
ANR	3502597	EqualityExpression	a -> bits == 64		3502461	0		==			
ANR	3502598	PtrMemberAccess	a -> bits		3502461	0					
ANR	3502599	Identifier	a		3502461	0					
ANR	3502600	Identifier	bits		3502461	1					
ANR	3502601	PrimaryExpression	64		3502461	1					
ANR	3502602	Identifier	CS_MODE_MIPS64		3502461	1					
ANR	3502603	Identifier	CS_MODE_MIPS32		3502461	2					
ANR	3502604	ExpressionStatement	"memset ( op , 0 , sizeof ( RAsmOp ) )"	33:1:818:849	3502461	6	True				
ANR	3502605	CallExpression	"memset ( op , 0 , sizeof ( RAsmOp ) )"		3502461	0					
ANR	3502606	Callee	memset		3502461	0					
ANR	3502607	Identifier	memset		3502461	0					
ANR	3502608	ArgumentList	op		3502461	1					
ANR	3502609	Argument	op		3502461	0					
ANR	3502610	Identifier	op		3502461	0					
ANR	3502611	Argument	0		3502461	1					
ANR	3502612	PrimaryExpression	0		3502461	0					
ANR	3502613	Argument	sizeof ( RAsmOp )		3502461	2					
ANR	3502614	SizeofExpression	sizeof ( RAsmOp )		3502461	0					
ANR	3502615	Sizeof	sizeof		3502461	0					
ANR	3502616	SizeofOperand	RAsmOp		3502461	1					
ANR	3502617	ExpressionStatement	op -> size = 4	34:1:852:864	3502461	7	True				
ANR	3502618	AssignmentExpression	op -> size = 4		3502461	0		=			
ANR	3502619	PtrMemberAccess	op -> size		3502461	0					
ANR	3502620	Identifier	op		3502461	0					
ANR	3502621	Identifier	size		3502461	1					
ANR	3502622	PrimaryExpression	4		3502461	1					
ANR	3502623	IfStatement	if ( cd != 0 )		3502461	8					
ANR	3502624	Condition	cd != 0	35:5:871:877	3502461	0	True				
ANR	3502625	EqualityExpression	cd != 0		3502461	0		!=			
ANR	3502626	Identifier	cd		3502461	0					
ANR	3502627	PrimaryExpression	0		3502461	1					
ANR	3502628	CompoundStatement		24:14:578:578	3502461	1					
ANR	3502629	ExpressionStatement	cs_close ( & cd )	36:2:884:898	3502461	0	True				
ANR	3502630	CallExpression	cs_close ( & cd )		3502461	0					
ANR	3502631	Callee	cs_close		3502461	0					
ANR	3502632	Identifier	cs_close		3502461	0					
ANR	3502633	ArgumentList	& cd		3502461	1					
ANR	3502634	Argument	& cd		3502461	0					
ANR	3502635	UnaryOperationExpression	& cd		3502461	0					
ANR	3502636	UnaryOperator	&		3502461	0					
ANR	3502637	Identifier	cd		3502461	1					
ANR	3502638	ExpressionStatement	"ret = cs_open ( CS_ARCH_MIPS , mode , & cd )"	38:1:904:943	3502461	9	True				
ANR	3502639	AssignmentExpression	"ret = cs_open ( CS_ARCH_MIPS , mode , & cd )"		3502461	0		=			
ANR	3502640	Identifier	ret		3502461	0					
ANR	3502641	CallExpression	"cs_open ( CS_ARCH_MIPS , mode , & cd )"		3502461	1					
ANR	3502642	Callee	cs_open		3502461	0					
ANR	3502643	Identifier	cs_open		3502461	0					
ANR	3502644	ArgumentList	CS_ARCH_MIPS		3502461	1					
ANR	3502645	Argument	CS_ARCH_MIPS		3502461	0					
ANR	3502646	Identifier	CS_ARCH_MIPS		3502461	0					
ANR	3502647	Argument	mode		3502461	1					
ANR	3502648	Identifier	mode		3502461	0					
ANR	3502649	Argument	& cd		3502461	2					
ANR	3502650	UnaryOperationExpression	& cd		3502461	0					
ANR	3502651	UnaryOperator	&		3502461	0					
ANR	3502652	Identifier	cd		3502461	1					
ANR	3502653	IfStatement	if ( ret )		3502461	10					
ANR	3502654	Condition	ret	39:5:950:952	3502461	0	True				
ANR	3502655	Identifier	ret		3502461	0					
ANR	3502656	CompoundStatement		28:10:653:653	3502461	1					
ANR	3502657	GotoStatement	goto fin ;	40:2:959:967	3502461	0	True				
ANR	3502658	Identifier	fin		3502461	0					
ANR	3502659	IfStatement	if ( a -> syntax == R_ASM_SYNTAX_REGNUM )		3502461	11					
ANR	3502660	Condition	a -> syntax == R_ASM_SYNTAX_REGNUM	42:5:977:1008	3502461	0	True				
ANR	3502661	EqualityExpression	a -> syntax == R_ASM_SYNTAX_REGNUM		3502461	0		==			
ANR	3502662	PtrMemberAccess	a -> syntax		3502461	0					
ANR	3502663	Identifier	a		3502461	0					
ANR	3502664	Identifier	syntax		3502461	1					
ANR	3502665	Identifier	R_ASM_SYNTAX_REGNUM		3502461	1					
ANR	3502666	CompoundStatement		31:39:709:709	3502461	1					
ANR	3502667	ExpressionStatement	"cs_option ( cd , CS_OPT_SYNTAX , CS_OPT_SYNTAX_NOREGNAME )"	43:2:1015:1069	3502461	0	True				
ANR	3502668	CallExpression	"cs_option ( cd , CS_OPT_SYNTAX , CS_OPT_SYNTAX_NOREGNAME )"		3502461	0					
ANR	3502669	Callee	cs_option		3502461	0					
ANR	3502670	Identifier	cs_option		3502461	0					
ANR	3502671	ArgumentList	cd		3502461	1					
ANR	3502672	Argument	cd		3502461	0					
ANR	3502673	Identifier	cd		3502461	0					
ANR	3502674	Argument	CS_OPT_SYNTAX		3502461	1					
ANR	3502675	Identifier	CS_OPT_SYNTAX		3502461	0					
ANR	3502676	Argument	CS_OPT_SYNTAX_NOREGNAME		3502461	2					
ANR	3502677	Identifier	CS_OPT_SYNTAX_NOREGNAME		3502461	0					
ANR	3502678	ElseStatement	else		3502461	0					
ANR	3502679	CompoundStatement		33:8:777:777	3502461	0					
ANR	3502680	ExpressionStatement	"cs_option ( cd , CS_OPT_SYNTAX , CS_OPT_SYNTAX_DEFAULT )"	45:2:1083:1135	3502461	0	True				
ANR	3502681	CallExpression	"cs_option ( cd , CS_OPT_SYNTAX , CS_OPT_SYNTAX_DEFAULT )"		3502461	0					
ANR	3502682	Callee	cs_option		3502461	0					
ANR	3502683	Identifier	cs_option		3502461	0					
ANR	3502684	ArgumentList	cd		3502461	1					
ANR	3502685	Argument	cd		3502461	0					
ANR	3502686	Identifier	cd		3502461	0					
ANR	3502687	Argument	CS_OPT_SYNTAX		3502461	1					
ANR	3502688	Identifier	CS_OPT_SYNTAX		3502461	0					
ANR	3502689	Argument	CS_OPT_SYNTAX_DEFAULT		3502461	2					
ANR	3502690	Identifier	CS_OPT_SYNTAX_DEFAULT		3502461	0					
ANR	3502691	ExpressionStatement	"cs_option ( cd , CS_OPT_DETAIL , CS_OPT_OFF )"	47:1:1141:1182	3502461	12	True				
ANR	3502692	CallExpression	"cs_option ( cd , CS_OPT_DETAIL , CS_OPT_OFF )"		3502461	0					
ANR	3502693	Callee	cs_option		3502461	0					
ANR	3502694	Identifier	cs_option		3502461	0					
ANR	3502695	ArgumentList	cd		3502461	1					
ANR	3502696	Argument	cd		3502461	0					
ANR	3502697	Identifier	cd		3502461	0					
ANR	3502698	Argument	CS_OPT_DETAIL		3502461	1					
ANR	3502699	Identifier	CS_OPT_DETAIL		3502461	0					
ANR	3502700	Argument	CS_OPT_OFF		3502461	2					
ANR	3502701	Identifier	CS_OPT_OFF		3502461	0					
ANR	3502702	ExpressionStatement	"n = cs_disasm ( cd , ( ut8 * ) buf , len , a -> pc , 1 , & insn )"	48:1:1185:1236	3502461	13	True				
ANR	3502703	AssignmentExpression	"n = cs_disasm ( cd , ( ut8 * ) buf , len , a -> pc , 1 , & insn )"		3502461	0		=			
ANR	3502704	Identifier	n		3502461	0					
ANR	3502705	CallExpression	"cs_disasm ( cd , ( ut8 * ) buf , len , a -> pc , 1 , & insn )"		3502461	1					
ANR	3502706	Callee	cs_disasm		3502461	0					
ANR	3502707	Identifier	cs_disasm		3502461	0					
ANR	3502708	ArgumentList	cd		3502461	1					
ANR	3502709	Argument	cd		3502461	0					
ANR	3502710	Identifier	cd		3502461	0					
ANR	3502711	Argument	( ut8 * ) buf		3502461	1					
ANR	3502712	CastExpression	( ut8 * ) buf		3502461	0					
ANR	3502713	CastTarget	ut8 *		3502461	0					
ANR	3502714	Identifier	buf		3502461	1					
ANR	3502715	Argument	len		3502461	2					
ANR	3502716	Identifier	len		3502461	0					
ANR	3502717	Argument	a -> pc		3502461	3					
ANR	3502718	PtrMemberAccess	a -> pc		3502461	0					
ANR	3502719	Identifier	a		3502461	0					
ANR	3502720	Identifier	pc		3502461	1					
ANR	3502721	Argument	1		3502461	4					
ANR	3502722	PrimaryExpression	1		3502461	0					
ANR	3502723	Argument	& insn		3502461	5					
ANR	3502724	UnaryOperationExpression	& insn		3502461	0					
ANR	3502725	UnaryOperator	&		3502461	0					
ANR	3502726	Identifier	insn		3502461	1					
ANR	3502727	IfStatement	if ( n < 1 )		3502461	14					
ANR	3502728	Condition	n < 1	49:5:1243:1247	3502461	0	True				
ANR	3502729	RelationalExpression	n < 1		3502461	0		<			
ANR	3502730	Identifier	n		3502461	0					
ANR	3502731	PrimaryExpression	1		3502461	1					
ANR	3502732	CompoundStatement		38:12:948:948	3502461	1					
ANR	3502733	ExpressionStatement	"r_asm_op_set_asm ( op , ""invalid"" )"	50:2:1254:1286	3502461	0	True				
ANR	3502734	CallExpression	"r_asm_op_set_asm ( op , ""invalid"" )"		3502461	0					
ANR	3502735	Callee	r_asm_op_set_asm		3502461	0					
ANR	3502736	Identifier	r_asm_op_set_asm		3502461	0					
ANR	3502737	ArgumentList	op		3502461	1					
ANR	3502738	Argument	op		3502461	0					
ANR	3502739	Identifier	op		3502461	0					
ANR	3502740	Argument	"""invalid"""		3502461	1					
ANR	3502741	PrimaryExpression	"""invalid"""		3502461	0					
ANR	3502742	ExpressionStatement	op -> size = 4	51:2:1290:1302	3502461	1	True				
ANR	3502743	AssignmentExpression	op -> size = 4		3502461	0		=			
ANR	3502744	PtrMemberAccess	op -> size		3502461	0					
ANR	3502745	Identifier	op		3502461	0					
ANR	3502746	Identifier	size		3502461	1					
ANR	3502747	PrimaryExpression	4		3502461	1					
ANR	3502748	GotoStatement	goto beach ;	52:2:1306:1316	3502461	2	True				
ANR	3502749	Identifier	beach		3502461	0					
ANR	3502750	IfStatement	if ( insn -> size < 1 )		3502461	15					
ANR	3502751	Condition	insn -> size < 1	54:5:1326:1339	3502461	0	True				
ANR	3502752	RelationalExpression	insn -> size < 1		3502461	0		<			
ANR	3502753	PtrMemberAccess	insn -> size		3502461	0					
ANR	3502754	Identifier	insn		3502461	0					
ANR	3502755	Identifier	size		3502461	1					
ANR	3502756	PrimaryExpression	1		3502461	1					
ANR	3502757	CompoundStatement		43:21:1040:1040	3502461	1					
ANR	3502758	GotoStatement	goto beach ;	55:2:1346:1356	3502461	0	True				
ANR	3502759	Identifier	beach		3502461	0					
ANR	3502760	ExpressionStatement	op -> size = insn -> size	57:1:1362:1383	3502461	16	True				
ANR	3502761	AssignmentExpression	op -> size = insn -> size		3502461	0		=			
ANR	3502762	PtrMemberAccess	op -> size		3502461	0					
ANR	3502763	Identifier	op		3502461	0					
ANR	3502764	Identifier	size		3502461	1					
ANR	3502765	PtrMemberAccess	insn -> size		3502461	1					
ANR	3502766	Identifier	insn		3502461	0					
ANR	3502767	Identifier	size		3502461	1					
ANR	3502768	IdentifierDeclStatement	"char * str = r_str_newf ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str ) ;"	58:1:1386:1475	3502461	17	True				
ANR	3502769	IdentifierDecl	"* str = r_str_newf ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str )"		3502461	0					
ANR	3502770	IdentifierDeclType	char *		3502461	0					
ANR	3502771	Identifier	str		3502461	1					
ANR	3502772	AssignmentExpression	"* str = r_str_newf ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str )"		3502461	2		=			
ANR	3502773	Identifier	str		3502461	0					
ANR	3502774	CallExpression	"r_str_newf ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str )"		3502461	1					
ANR	3502775	Callee	r_str_newf		3502461	0					
ANR	3502776	Identifier	r_str_newf		3502461	0					
ANR	3502777	ArgumentList	"""%s%s%s"""		3502461	1					
ANR	3502778	Argument	"""%s%s%s"""		3502461	0					
ANR	3502779	PrimaryExpression	"""%s%s%s"""		3502461	0					
ANR	3502780	Argument	insn -> mnemonic		3502461	1					
ANR	3502781	PtrMemberAccess	insn -> mnemonic		3502461	0					
ANR	3502782	Identifier	insn		3502461	0					
ANR	3502783	Identifier	mnemonic		3502461	1					
ANR	3502784	Argument	"insn -> op_str [ 0 ] ? "" "" : """""		3502461	2					
ANR	3502785	ConditionalExpression	"insn -> op_str [ 0 ] ? "" "" : """""		3502461	0					
ANR	3502786	Condition	insn -> op_str [ 0 ]		3502461	0					
ANR	3502787	ArrayIndexing	insn -> op_str [ 0 ]		3502461	0					
ANR	3502788	PtrMemberAccess	insn -> op_str		3502461	0					
ANR	3502789	Identifier	insn		3502461	0					
ANR	3502790	Identifier	op_str		3502461	1					
ANR	3502791	PrimaryExpression	0		3502461	1					
ANR	3502792	PrimaryExpression	""" """		3502461	1					
ANR	3502793	PrimaryExpression	""""""		3502461	2					
ANR	3502794	Argument	insn -> op_str		3502461	3					
ANR	3502795	PtrMemberAccess	insn -> op_str		3502461	0					
ANR	3502796	Identifier	insn		3502461	0					
ANR	3502797	Identifier	op_str		3502461	1					
ANR	3502798	IfStatement	if ( str )		3502461	18					
ANR	3502799	Condition	str	59:5:1482:1484	3502461	0	True				
ANR	3502800	Identifier	str		3502461	0					
ANR	3502801	CompoundStatement		48:10:1185:1185	3502461	1					
ANR	3502802	ExpressionStatement	"r_str_replace_char ( str , '$' , 0 )"	60:2:1491:1523	3502461	0	True				
ANR	3502803	CallExpression	"r_str_replace_char ( str , '$' , 0 )"		3502461	0					
ANR	3502804	Callee	r_str_replace_char		3502461	0					
ANR	3502805	Identifier	r_str_replace_char		3502461	0					
ANR	3502806	ArgumentList	str		3502461	1					
ANR	3502807	Argument	str		3502461	0					
ANR	3502808	Identifier	str		3502461	0					
ANR	3502809	Argument	'$'		3502461	1					
ANR	3502810	PrimaryExpression	'$'		3502461	0					
ANR	3502811	Argument	0		3502461	2					
ANR	3502812	PrimaryExpression	0		3502461	0					
ANR	3502813	ExpressionStatement	"r_asm_op_set_asm ( op , str )"	62:2:1575:1601	3502461	1	True				
ANR	3502814	CallExpression	"r_asm_op_set_asm ( op , str )"		3502461	0					
ANR	3502815	Callee	r_asm_op_set_asm		3502461	0					
ANR	3502816	Identifier	r_asm_op_set_asm		3502461	0					
ANR	3502817	ArgumentList	op		3502461	1					
ANR	3502818	Argument	op		3502461	0					
ANR	3502819	Identifier	op		3502461	0					
ANR	3502820	Argument	str		3502461	1					
ANR	3502821	Identifier	str		3502461	0					
ANR	3502822	ExpressionStatement	free ( str )	63:2:1605:1615	3502461	2	True				
ANR	3502823	CallExpression	free ( str )		3502461	0					
ANR	3502824	Callee	free		3502461	0					
ANR	3502825	Identifier	free		3502461	0					
ANR	3502826	ArgumentList	str		3502461	1					
ANR	3502827	Argument	str		3502461	0					
ANR	3502828	Identifier	str		3502461	0					
ANR	3502829	ExpressionStatement	"cs_free ( insn , n )"	65:1:1621:1638	3502461	19	True				
ANR	3502830	CallExpression	"cs_free ( insn , n )"		3502461	0					
ANR	3502831	Callee	cs_free		3502461	0					
ANR	3502832	Identifier	cs_free		3502461	0					
ANR	3502833	ArgumentList	insn		3502461	1					
ANR	3502834	Argument	insn		3502461	0					
ANR	3502835	Identifier	insn		3502461	0					
ANR	3502836	Argument	n		3502461	1					
ANR	3502837	Identifier	n		3502461	0					
ANR	3502838	Label	beach :	66:0:1640:1645	3502461	20	True				
ANR	3502839	Identifier	beach		3502461	0					
ANR	3502840	Label	fin :	68:0:1667:1670	3502461	21	True				
ANR	3502841	Identifier	fin		3502461	0					
ANR	3502842	ReturnStatement	return op -> size ;	69:1:1673:1688	3502461	22	True				
ANR	3502843	PtrMemberAccess	op -> size		3502461	0					
ANR	3502844	Identifier	op		3502461	0					
ANR	3502845	Identifier	size		3502461	1					
ANR	3502846	ReturnType	static int		3502461	1					
ANR	3502847	Identifier	disassemble		3502461	2					
ANR	3502848	ParameterList	"RAsm * a , RAsmOp * op , const ut8 * buf , int len"		3502461	3					
ANR	3502849	Parameter	RAsm * a	12:23:255:261	3502461	0	True				
ANR	3502850	ParameterType	RAsm *		3502461	0					
ANR	3502851	Identifier	a		3502461	1					
ANR	3502852	Parameter	RAsmOp * op	12:32:264:273	3502461	1	True				
ANR	3502853	ParameterType	RAsmOp *		3502461	0					
ANR	3502854	Identifier	op		3502461	1					
ANR	3502855	Parameter	const ut8 * buf	12:44:276:289	3502461	2	True				
ANR	3502856	ParameterType	const ut8 *		3502461	0					
ANR	3502857	Identifier	buf		3502461	1					
ANR	3502858	Parameter	int len	12:60:292:298	3502461	3	True				
ANR	3502859	ParameterType	int		3502461	0					
ANR	3502860	Identifier	len		3502461	1					
ANR	3502861	CFGEntryNode	ENTRY		3502461		True				
ANR	3502862	CFGExitNode	EXIT		3502461		True				
ANR	3502863	Symbol	CS_OPT_OFF		3502461						
ANR	3502864	Symbol	* insn -> op_str		3502461						
ANR	3502865	Symbol	* op		3502461						
ANR	3502866	Symbol	a -> big_endian		3502461						
ANR	3502867	Symbol	a -> cpu		3502461						
ANR	3502868	Symbol	CS_MODE_BIG_ENDIAN		3502461						
ANR	3502869	Symbol	& cd		3502461						
ANR	3502870	Symbol	r_str_newf		3502461						
ANR	3502871	Symbol	cs_open		3502461						
ANR	3502872	Symbol	CS_MODE_MIPS32		3502461						
ANR	3502873	Symbol	mode		3502461						
ANR	3502874	Symbol	CS_MODE_LITTLE_ENDIAN		3502461						
ANR	3502875	Symbol	len		3502461						
ANR	3502876	Symbol	insn -> mnemonic		3502461						
ANR	3502877	Symbol	CS_MODE_MIPS2		3502461						
ANR	3502878	Symbol	CS_MODE_MIPS3		3502461						
ANR	3502879	Symbol	insn -> size		3502461						
ANR	3502880	Symbol	a -> bits		3502461						
ANR	3502881	Symbol	insn -> op_str		3502461						
ANR	3502882	Symbol	ret		3502461						
ANR	3502883	Symbol	strcmp		3502461						
ANR	3502884	Symbol	a		3502461						
ANR	3502885	Symbol	op		3502461						
ANR	3502886	Symbol	cd		3502461						
ANR	3502887	Symbol	CS_MODE_MICRO		3502461						
ANR	3502888	Symbol	* insn		3502461						
ANR	3502889	Symbol	* * a		3502461						
ANR	3502890	Symbol	* a		3502461						
ANR	3502891	Symbol	cs_disasm		3502461						
ANR	3502892	Symbol	a -> pc		3502461						
ANR	3502893	Symbol	n		3502461						
ANR	3502894	Symbol	CS_MODE_MIPS64		3502461						
ANR	3502895	Symbol	CS_OPT_SYNTAX		3502461						
ANR	3502896	Symbol	str		3502461						
ANR	3502897	Symbol	insn		3502461						
ANR	3502898	Symbol	buf		3502461						
ANR	3502899	Symbol	CS_OPT_SYNTAX_NOREGNAME		3502461						
ANR	3502900	Symbol	CS_OPT_DETAIL		3502461						
ANR	3502901	Symbol	a -> syntax		3502461						
ANR	3502902	Symbol	* * insn		3502461						
ANR	3502903	Symbol	& insn		3502461						
ANR	3502904	Symbol	CS_MODE_MIPS32R6		3502461						
ANR	3502905	Symbol	* a -> cpu		3502461						
ANR	3502906	Symbol	op -> size		3502461						
ANR	3502907	Symbol	CS_ARCH_MIPS		3502461						
ANR	3502908	Symbol	R_ASM_SYNTAX_REGNUM		3502461						
ANR	3502909	Symbol	CS_OPT_SYNTAX_DEFAULT		3502461						
ANR	3502910	Function	assemble	72:0:1693:2008							
ANR	3502911	FunctionDef	"assemble (RAsm * a , RAsmOp * op , const char * str)"		3502910	0					
ANR	3502912	CompoundStatement		72:58:1751:2008	3502910	0					
ANR	3502913	IdentifierDeclStatement	ut8 * opbuf = ( ut8 * ) r_strbuf_get ( & op -> buf ) ;	73:1:1754:1796	3502910	0	True				
ANR	3502914	IdentifierDecl	* opbuf = ( ut8 * ) r_strbuf_get ( & op -> buf )		3502910	0					
ANR	3502915	IdentifierDeclType	ut8 *		3502910	0					
ANR	3502916	Identifier	opbuf		3502910	1					
ANR	3502917	AssignmentExpression	* opbuf = ( ut8 * ) r_strbuf_get ( & op -> buf )		3502910	2		=			
ANR	3502918	Identifier	opbuf		3502910	0					
ANR	3502919	CastExpression	( ut8 * ) r_strbuf_get ( & op -> buf )		3502910	1					
ANR	3502920	CastTarget	ut8 *		3502910	0					
ANR	3502921	CallExpression	r_strbuf_get ( & op -> buf )		3502910	1					
ANR	3502922	Callee	r_strbuf_get		3502910	0					
ANR	3502923	Identifier	r_strbuf_get		3502910	0					
ANR	3502924	ArgumentList	& op -> buf		3502910	1					
ANR	3502925	Argument	& op -> buf		3502910	0					
ANR	3502926	UnaryOperationExpression	& op -> buf		3502910	0					
ANR	3502927	UnaryOperator	&		3502910	0					
ANR	3502928	PtrMemberAccess	op -> buf		3502910	1					
ANR	3502929	Identifier	op		3502910	0					
ANR	3502930	Identifier	buf		3502910	1					
ANR	3502931	IdentifierDeclStatement	"int ret = mips_assemble ( str , a -> pc , opbuf ) ;"	74:1:1799:1842	3502910	1	True				
ANR	3502932	IdentifierDecl	"ret = mips_assemble ( str , a -> pc , opbuf )"		3502910	0					
ANR	3502933	IdentifierDeclType	int		3502910	0					
ANR	3502934	Identifier	ret		3502910	1					
ANR	3502935	AssignmentExpression	"ret = mips_assemble ( str , a -> pc , opbuf )"		3502910	2		=			
ANR	3502936	Identifier	ret		3502910	0					
ANR	3502937	CallExpression	"mips_assemble ( str , a -> pc , opbuf )"		3502910	1					
ANR	3502938	Callee	mips_assemble		3502910	0					
ANR	3502939	Identifier	mips_assemble		3502910	0					
ANR	3502940	ArgumentList	str		3502910	1					
ANR	3502941	Argument	str		3502910	0					
ANR	3502942	Identifier	str		3502910	0					
ANR	3502943	Argument	a -> pc		3502910	1					
ANR	3502944	PtrMemberAccess	a -> pc		3502910	0					
ANR	3502945	Identifier	a		3502910	0					
ANR	3502946	Identifier	pc		3502910	1					
ANR	3502947	Argument	opbuf		3502910	2					
ANR	3502948	Identifier	opbuf		3502910	0					
ANR	3502949	IfStatement	if ( a -> big_endian )		3502910	2					
ANR	3502950	Condition	a -> big_endian	75:5:1849:1861	3502910	0	True				
ANR	3502951	PtrMemberAccess	a -> big_endian		3502910	0					
ANR	3502952	Identifier	a		3502910	0					
ANR	3502953	Identifier	big_endian		3502910	1					
ANR	3502954	CompoundStatement		6:2:136:152	3502910	1					
ANR	3502955	IdentifierDeclStatement	ut8 * buf = opbuf ;	76:2:1868:1884	3502910	0	True				
ANR	3502956	IdentifierDecl	* buf = opbuf		3502910	0					
ANR	3502957	IdentifierDeclType	ut8 *		3502910	0					
ANR	3502958	Identifier	buf		3502910	1					
ANR	3502959	AssignmentExpression	* buf = opbuf		3502910	2		=			
ANR	3502960	Identifier	opbuf		3502910	0					
ANR	3502961	Identifier	opbuf		3502910	1					
ANR	3502962	IdentifierDeclStatement	ut8 tmp = buf [ 0 ] ;	77:2:1888:1904	3502910	1	True				
ANR	3502963	IdentifierDecl	tmp = buf [ 0 ]		3502910	0					
ANR	3502964	IdentifierDeclType	ut8		3502910	0					
ANR	3502965	Identifier	tmp		3502910	1					
ANR	3502966	AssignmentExpression	tmp = buf [ 0 ]		3502910	2		=			
ANR	3502967	Identifier	tmp		3502910	0					
ANR	3502968	ArrayIndexing	buf [ 0 ]		3502910	1					
ANR	3502969	Identifier	buf		3502910	0					
ANR	3502970	PrimaryExpression	0		3502910	1					
ANR	3502971	ExpressionStatement	buf [ 0 ] = buf [ 3 ]	78:2:1908:1923	3502910	2	True				
ANR	3502972	AssignmentExpression	buf [ 0 ] = buf [ 3 ]		3502910	0		=			
ANR	3502973	ArrayIndexing	buf [ 0 ]		3502910	0					
ANR	3502974	Identifier	buf		3502910	0					
ANR	3502975	PrimaryExpression	0		3502910	1					
ANR	3502976	ArrayIndexing	buf [ 3 ]		3502910	1					
ANR	3502977	Identifier	buf		3502910	0					
ANR	3502978	PrimaryExpression	3		3502910	1					
ANR	3502979	ExpressionStatement	buf [ 3 ] = tmp	79:2:1927:1939	3502910	3	True				
ANR	3502980	AssignmentExpression	buf [ 3 ] = tmp		3502910	0		=			
ANR	3502981	ArrayIndexing	buf [ 3 ]		3502910	0					
ANR	3502982	Identifier	buf		3502910	0					
ANR	3502983	PrimaryExpression	3		3502910	1					
ANR	3502984	Identifier	tmp		3502910	1					
ANR	3502985	ExpressionStatement	tmp = buf [ 1 ]	80:2:1943:1955	3502910	4	True				
ANR	3502986	AssignmentExpression	tmp = buf [ 1 ]		3502910	0		=			
ANR	3502987	Identifier	tmp		3502910	0					
ANR	3502988	ArrayIndexing	buf [ 1 ]		3502910	1					
ANR	3502989	Identifier	buf		3502910	0					
ANR	3502990	PrimaryExpression	1		3502910	1					
ANR	3502991	ExpressionStatement	buf [ 1 ] = buf [ 2 ]	81:2:1959:1974	3502910	5	True				
ANR	3502992	AssignmentExpression	buf [ 1 ] = buf [ 2 ]		3502910	0		=			
ANR	3502993	ArrayIndexing	buf [ 1 ]		3502910	0					
ANR	3502994	Identifier	buf		3502910	0					
ANR	3502995	PrimaryExpression	1		3502910	1					
ANR	3502996	ArrayIndexing	buf [ 2 ]		3502910	1					
ANR	3502997	Identifier	buf		3502910	0					
ANR	3502998	PrimaryExpression	2		3502910	1					
ANR	3502999	ExpressionStatement	buf [ 2 ] = tmp	82:2:1978:1990	3502910	6	True				
ANR	3503000	AssignmentExpression	buf [ 2 ] = tmp		3502910	0		=			
ANR	3503001	ArrayIndexing	buf [ 2 ]		3502910	0					
ANR	3503002	Identifier	buf		3502910	0					
ANR	3503003	PrimaryExpression	2		3502910	1					
ANR	3503004	Identifier	tmp		3502910	1					
ANR	3503005	ReturnStatement	return ret ;	84:1:1996:2006	3502910	3	True				
ANR	3503006	Identifier	ret		3502910	0					
ANR	3503007	ReturnType	static int		3502910	1					
ANR	3503008	Identifier	assemble		3502910	2					
ANR	3503009	ParameterList	"RAsm * a , RAsmOp * op , const char * str"		3502910	3					
ANR	3503010	Parameter	RAsm * a	72:20:1713:1719	3502910	0	True				
ANR	3503011	ParameterType	RAsm *		3502910	0					
ANR	3503012	Identifier	a		3502910	1					
ANR	3503013	Parameter	RAsmOp * op	72:29:1722:1731	3502910	1	True				
ANR	3503014	ParameterType	RAsmOp *		3502910	0					
ANR	3503015	Identifier	op		3502910	1					
ANR	3503016	Parameter	const char * str	72:41:1734:1748	3502910	2	True				
ANR	3503017	ParameterType	const char *		3502910	0					
ANR	3503018	Identifier	str		3502910	1					
ANR	3503019	CFGEntryNode	ENTRY		3502910		True				
ANR	3503020	CFGExitNode	EXIT		3502910		True				
ANR	3503021	Symbol	ret		3502910						
ANR	3503022	Symbol	a		3502910						
ANR	3503023	Symbol	op		3502910						
ANR	3503024	Symbol	opbuf		3502910						
ANR	3503025	Symbol	* buf		3502910						
ANR	3503026	Symbol	mips_assemble		3502910						
ANR	3503027	Symbol	a -> big_endian		3502910						
ANR	3503028	Symbol	* a		3502910						
ANR	3503029	Symbol	a -> pc		3502910						
ANR	3503030	Symbol	str		3502910						
ANR	3503031	Symbol	& op -> buf		3502910						
ANR	3503032	Symbol	buf		3502910						
ANR	3503033	Symbol	r_strbuf_get		3502910						
ANR	3503034	Symbol	tmp		3502910						
ANR	3503035	DeclStmt									
ANR	3503036	Decl							RAsmPlugin	RAsmPlugin	r_asm_plugin_mips_cs
ANR	3503037	DeclStmt									
ANR	3503038	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
