command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5112201	File	data/converged/CVE-2019-16718~_radare2/libr_util_debruijn.c								
ANR	5112202	DeclStmt									
ANR	5112203	Decl							const char	const char *	debruijn_charset
ANR	5112204	Function	de_bruijn_seq	14:0:555:1543							
ANR	5112205	FunctionDef	"de_bruijn_seq (int prenecklace_len_t , int lyndon_prefix_len_p , int order , int maxlen , int size , int * prenecklace_a , char * sequence , const char * charset)"		5112204	0					
ANR	5112206	CompoundStatement		15:81:721:1543	5112204	0					
ANR	5112207	IdentifierDeclStatement	int j ;	16:1:724:729	5112204	0	True				
ANR	5112208	IdentifierDecl	j		5112204	0					
ANR	5112209	IdentifierDeclType	int		5112204	0					
ANR	5112210	Identifier	j		5112204	1					
ANR	5112211	IfStatement	if ( ! charset || ! sequence || strlen ( sequence ) == maxlen )		5112204	1					
ANR	5112212	Condition	! charset || ! sequence || strlen ( sequence ) == maxlen	17:5:736:787	5112204	0	True				
ANR	5112213	OrExpression	! charset || ! sequence || strlen ( sequence ) == maxlen		5112204	0		||			
ANR	5112214	UnaryOperationExpression	! charset		5112204	0					
ANR	5112215	UnaryOperator	!		5112204	0					
ANR	5112216	Identifier	charset		5112204	1					
ANR	5112217	OrExpression	! sequence || strlen ( sequence ) == maxlen		5112204	1		||			
ANR	5112218	UnaryOperationExpression	! sequence		5112204	0					
ANR	5112219	UnaryOperator	!		5112204	0					
ANR	5112220	Identifier	sequence		5112204	1					
ANR	5112221	EqualityExpression	strlen ( sequence ) == maxlen		5112204	1		==			
ANR	5112222	CallExpression	strlen ( sequence )		5112204	0					
ANR	5112223	Callee	strlen		5112204	0					
ANR	5112224	Identifier	strlen		5112204	0					
ANR	5112225	ArgumentList	sequence		5112204	1					
ANR	5112226	Argument	sequence		5112204	0					
ANR	5112227	Identifier	sequence		5112204	0					
ANR	5112228	Identifier	maxlen		5112204	1					
ANR	5112229	CompoundStatement		3:59:68:68	5112204	1					
ANR	5112230	ReturnStatement	return ;	18:2:794:800	5112204	0	True				
ANR	5112231	IfStatement	if ( prenecklace_len_t > order )		5112204	2					
ANR	5112232	Condition	prenecklace_len_t > order	20:5:810:834	5112204	0	True				
ANR	5112233	RelationalExpression	prenecklace_len_t > order		5112204	0		>			
ANR	5112234	Identifier	prenecklace_len_t		5112204	0					
ANR	5112235	Identifier	order		5112204	1					
ANR	5112236	CompoundStatement		6:32:115:115	5112204	1					
ANR	5112237	IfStatement	if ( order % lyndon_prefix_len_p == 0 )		5112204	0					
ANR	5112238	Condition	order % lyndon_prefix_len_p == 0	21:6:845:876	5112204	0	True				
ANR	5112239	EqualityExpression	order % lyndon_prefix_len_p == 0		5112204	0		==			
ANR	5112240	MultiplicativeExpression	order % lyndon_prefix_len_p		5112204	0		%			
ANR	5112241	Identifier	order		5112204	0					
ANR	5112242	Identifier	lyndon_prefix_len_p		5112204	1					
ANR	5112243	PrimaryExpression	0		5112204	1					
ANR	5112244	CompoundStatement		7:40:157:157	5112204	1					
ANR	5112245	ForStatement	for ( j = 1 ; j <= lyndon_prefix_len_p ; ++ j )		5112204	0					
ANR	5112246	ForInit	j = 1 ;	22:8:889:894	5112204	0	True				
ANR	5112247	AssignmentExpression	j = 1		5112204	0		=			
ANR	5112248	Identifier	j		5112204	0					
ANR	5112249	PrimaryExpression	1		5112204	1					
ANR	5112250	Condition	j <= lyndon_prefix_len_p	22:15:896:919	5112204	1	True				
ANR	5112251	RelationalExpression	j <= lyndon_prefix_len_p		5112204	0		<=			
ANR	5112252	Identifier	j		5112204	0					
ANR	5112253	Identifier	lyndon_prefix_len_p		5112204	1					
ANR	5112254	UnaryExpression	++ j	22:41:922:924	5112204	2	True				
ANR	5112255	IncDec	++		5112204	0					
ANR	5112256	Identifier	j		5112204	1					
ANR	5112257	CompoundStatement		8:46:205:205	5112204	3					
ANR	5112258	ExpressionStatement	sequence [ strlen ( sequence ) ] = charset [ prenecklace_a [ j ] ]	23:4:933:987	5112204	0	True				
ANR	5112259	AssignmentExpression	sequence [ strlen ( sequence ) ] = charset [ prenecklace_a [ j ] ]		5112204	0		=			
ANR	5112260	ArrayIndexing	sequence [ strlen ( sequence ) ]		5112204	0					
ANR	5112261	Identifier	sequence		5112204	0					
ANR	5112262	CallExpression	strlen ( sequence )		5112204	1					
ANR	5112263	Callee	strlen		5112204	0					
ANR	5112264	Identifier	strlen		5112204	0					
ANR	5112265	ArgumentList	sequence		5112204	1					
ANR	5112266	Argument	sequence		5112204	0					
ANR	5112267	Identifier	sequence		5112204	0					
ANR	5112268	ArrayIndexing	charset [ prenecklace_a [ j ] ]		5112204	1					
ANR	5112269	Identifier	charset		5112204	0					
ANR	5112270	ArrayIndexing	prenecklace_a [ j ]		5112204	1					
ANR	5112271	Identifier	prenecklace_a		5112204	0					
ANR	5112272	Identifier	j		5112204	1					
ANR	5112273	IfStatement	if ( strlen ( sequence ) == maxlen )		5112204	1					
ANR	5112274	Condition	strlen ( sequence ) == maxlen	24:8:997:1023	5112204	0	True				
ANR	5112275	EqualityExpression	strlen ( sequence ) == maxlen		5112204	0		==			
ANR	5112276	CallExpression	strlen ( sequence )		5112204	0					
ANR	5112277	Callee	strlen		5112204	0					
ANR	5112278	Identifier	strlen		5112204	0					
ANR	5112279	ArgumentList	sequence		5112204	1					
ANR	5112280	Argument	sequence		5112204	0					
ANR	5112281	Identifier	sequence		5112204	0					
ANR	5112282	Identifier	maxlen		5112204	1					
ANR	5112283	CompoundStatement		10:37:304:304	5112204	1					
ANR	5112284	ReturnStatement	return ;	25:5:1033:1039	5112204	0	True				
ANR	5112285	ElseStatement	else		5112204	0					
ANR	5112286	CompoundStatement		15:8:342:342	5112204	0					
ANR	5112287	ExpressionStatement	prenecklace_a [ prenecklace_len_t ] = prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ]	30:2:1068:1160	5112204	0	True				
ANR	5112288	AssignmentExpression	prenecklace_a [ prenecklace_len_t ] = prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ]		5112204	0		=			
ANR	5112289	ArrayIndexing	prenecklace_a [ prenecklace_len_t ]		5112204	0					
ANR	5112290	Identifier	prenecklace_a		5112204	0					
ANR	5112291	Identifier	prenecklace_len_t		5112204	1					
ANR	5112292	ArrayIndexing	prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ]		5112204	1					
ANR	5112293	Identifier	prenecklace_a		5112204	0					
ANR	5112294	AdditiveExpression	prenecklace_len_t - lyndon_prefix_len_p		5112204	1		-			
ANR	5112295	Identifier	prenecklace_len_t		5112204	0					
ANR	5112296	Identifier	lyndon_prefix_len_p		5112204	1					
ANR	5112297	ExpressionStatement	"de_bruijn_seq ( prenecklace_len_t + 1 , lyndon_prefix_len_p , order , maxlen , size , prenecklace_a , sequence , charset )"	32:2:1164:1280	5112204	1	True				
ANR	5112298	CallExpression	"de_bruijn_seq ( prenecklace_len_t + 1 , lyndon_prefix_len_p , order , maxlen , size , prenecklace_a , sequence , charset )"		5112204	0					
ANR	5112299	Callee	de_bruijn_seq		5112204	0					
ANR	5112300	Identifier	de_bruijn_seq		5112204	0					
ANR	5112301	ArgumentList	prenecklace_len_t + 1		5112204	1					
ANR	5112302	Argument	prenecklace_len_t + 1		5112204	0					
ANR	5112303	AdditiveExpression	prenecklace_len_t + 1		5112204	0		+			
ANR	5112304	Identifier	prenecklace_len_t		5112204	0					
ANR	5112305	PrimaryExpression	1		5112204	1					
ANR	5112306	Argument	lyndon_prefix_len_p		5112204	1					
ANR	5112307	Identifier	lyndon_prefix_len_p		5112204	0					
ANR	5112308	Argument	order		5112204	2					
ANR	5112309	Identifier	order		5112204	0					
ANR	5112310	Argument	maxlen		5112204	3					
ANR	5112311	Identifier	maxlen		5112204	0					
ANR	5112312	Argument	size		5112204	4					
ANR	5112313	Identifier	size		5112204	0					
ANR	5112314	Argument	prenecklace_a		5112204	5					
ANR	5112315	Identifier	prenecklace_a		5112204	0					
ANR	5112316	Argument	sequence		5112204	6					
ANR	5112317	Identifier	sequence		5112204	0					
ANR	5112318	Argument	charset		5112204	7					
ANR	5112319	Identifier	charset		5112204	0					
ANR	5112320	ForStatement	for ( j = prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ] + 1 ; j < size ; ++ j )		5112204	2					
ANR	5112321	ForInit	j = prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ] + 1 ;	34:7:1289:1351	5112204	0	True				
ANR	5112322	AssignmentExpression	j = prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ] + 1		5112204	0		=			
ANR	5112323	Identifier	j		5112204	0					
ANR	5112324	AdditiveExpression	prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ] + 1		5112204	1		+			
ANR	5112325	ArrayIndexing	prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ]		5112204	0					
ANR	5112326	Identifier	prenecklace_a		5112204	0					
ANR	5112327	AdditiveExpression	prenecklace_len_t - lyndon_prefix_len_p		5112204	1		-			
ANR	5112328	Identifier	prenecklace_len_t		5112204	0					
ANR	5112329	Identifier	lyndon_prefix_len_p		5112204	1					
ANR	5112330	PrimaryExpression	1		5112204	1					
ANR	5112331	Condition	j < size	35:4:1357:1364	5112204	1	True				
ANR	5112332	RelationalExpression	j < size		5112204	0		<			
ANR	5112333	Identifier	j		5112204	0					
ANR	5112334	Identifier	size		5112204	1					
ANR	5112335	UnaryExpression	++ j	35:14:1367:1369	5112204	2	True				
ANR	5112336	IncDec	++		5112204	0					
ANR	5112337	Identifier	j		5112204	1					
ANR	5112338	CompoundStatement		21:19:650:650	5112204	3					
ANR	5112339	ExpressionStatement	prenecklace_a [ prenecklace_len_t ] = j	36:3:1377:1413	5112204	0	True				
ANR	5112340	AssignmentExpression	prenecklace_a [ prenecklace_len_t ] = j		5112204	0		=			
ANR	5112341	ArrayIndexing	prenecklace_a [ prenecklace_len_t ]		5112204	0					
ANR	5112342	Identifier	prenecklace_a		5112204	0					
ANR	5112343	Identifier	prenecklace_len_t		5112204	1					
ANR	5112344	Identifier	j		5112204	1					
ANR	5112345	ExpressionStatement	"de_bruijn_seq ( prenecklace_len_t + 1 , prenecklace_len_t , order , maxlen , size , prenecklace_a , sequence , charset )"	37:3:1418:1534	5112204	1	True				
ANR	5112346	CallExpression	"de_bruijn_seq ( prenecklace_len_t + 1 , prenecklace_len_t , order , maxlen , size , prenecklace_a , sequence , charset )"		5112204	0					
ANR	5112347	Callee	de_bruijn_seq		5112204	0					
ANR	5112348	Identifier	de_bruijn_seq		5112204	0					
ANR	5112349	ArgumentList	prenecklace_len_t + 1		5112204	1					
ANR	5112350	Argument	prenecklace_len_t + 1		5112204	0					
ANR	5112351	AdditiveExpression	prenecklace_len_t + 1		5112204	0		+			
ANR	5112352	Identifier	prenecklace_len_t		5112204	0					
ANR	5112353	PrimaryExpression	1		5112204	1					
ANR	5112354	Argument	prenecklace_len_t		5112204	1					
ANR	5112355	Identifier	prenecklace_len_t		5112204	0					
ANR	5112356	Argument	order		5112204	2					
ANR	5112357	Identifier	order		5112204	0					
ANR	5112358	Argument	maxlen		5112204	3					
ANR	5112359	Identifier	maxlen		5112204	0					
ANR	5112360	Argument	size		5112204	4					
ANR	5112361	Identifier	size		5112204	0					
ANR	5112362	Argument	prenecklace_a		5112204	5					
ANR	5112363	Identifier	prenecklace_a		5112204	0					
ANR	5112364	Argument	sequence		5112204	6					
ANR	5112365	Identifier	sequence		5112204	0					
ANR	5112366	Argument	charset		5112204	7					
ANR	5112367	Identifier	charset		5112204	0					
ANR	5112368	ReturnType	static void		5112204	1					
ANR	5112369	Identifier	de_bruijn_seq		5112204	2					
ANR	5112370	ParameterList	"int prenecklace_len_t , int lyndon_prefix_len_p , int order , int maxlen , int size , int * prenecklace_a , char * sequence , const char * charset"		5112204	3					
ANR	5112371	Parameter	int prenecklace_len_t	14:26:581:601	5112204	0	True				
ANR	5112372	ParameterType	int		5112204	0					
ANR	5112373	Identifier	prenecklace_len_t		5112204	1					
ANR	5112374	Parameter	int lyndon_prefix_len_p	14:49:604:626	5112204	1	True				
ANR	5112375	ParameterType	int		5112204	0					
ANR	5112376	Identifier	lyndon_prefix_len_p		5112204	1					
ANR	5112377	Parameter	int order	14:74:629:637	5112204	2	True				
ANR	5112378	ParameterType	int		5112204	0					
ANR	5112379	Identifier	order		5112204	1					
ANR	5112380	Parameter	int maxlen	15:2:642:651	5112204	3	True				
ANR	5112381	ParameterType	int		5112204	0					
ANR	5112382	Identifier	maxlen		5112204	1					
ANR	5112383	Parameter	int size	15:14:654:661	5112204	4	True				
ANR	5112384	ParameterType	int		5112204	0					
ANR	5112385	Identifier	size		5112204	1					
ANR	5112386	Parameter	int * prenecklace_a	15:24:664:681	5112204	5	True				
ANR	5112387	ParameterType	int *		5112204	0					
ANR	5112388	Identifier	prenecklace_a		5112204	1					
ANR	5112389	Parameter	char * sequence	15:44:684:697	5112204	6	True				
ANR	5112390	ParameterType	char *		5112204	0					
ANR	5112391	Identifier	sequence		5112204	1					
ANR	5112392	Parameter	const char * charset	15:60:700:718	5112204	7	True				
ANR	5112393	ParameterType	const char *		5112204	0					
ANR	5112394	Identifier	charset		5112204	1					
ANR	5112395	CFGEntryNode	ENTRY		5112204		True				
ANR	5112396	CFGExitNode	EXIT		5112204		True				
ANR	5112397	Symbol	charset		5112204						
ANR	5112398	Symbol	* * j		5112204						
ANR	5112399	Symbol	* lyndon_prefix_len_p		5112204						
ANR	5112400	Symbol	* * prenecklace_a		5112204						
ANR	5112401	Symbol	j		5112204						
ANR	5112402	Symbol	* prenecklace_a		5112204						
ANR	5112403	Symbol	prenecklace_a		5112204						
ANR	5112404	Symbol	* prenecklace_len_t		5112204						
ANR	5112405	Symbol	sequence		5112204						
ANR	5112406	Symbol	strlen		5112204						
ANR	5112407	Symbol	prenecklace_len_t		5112204						
ANR	5112408	Symbol	size		5112204						
ANR	5112409	Symbol	* j		5112204						
ANR	5112410	Symbol	* strlen		5112204						
ANR	5112411	Symbol	lyndon_prefix_len_p		5112204						
ANR	5112412	Symbol	* charset		5112204						
ANR	5112413	Symbol	* sequence		5112204						
ANR	5112414	Symbol	maxlen		5112204						
ANR	5112415	Symbol	order		5112204						
ANR	5112416	Function	de_bruijn	46:0:1682:2149							
ANR	5112417	FunctionDef	"de_bruijn (const char * charset , int order , int maxlen)"		5112416	0					
ANR	5112418	CompoundStatement		46:67:1749:2149	5112416	0					
ANR	5112419	IfStatement	if ( ! charset )		5112416	0					
ANR	5112420	Condition	! charset	47:5:1756:1763	5112416	0	True				
ANR	5112421	UnaryOperationExpression	! charset		5112416	0					
ANR	5112422	UnaryOperator	!		5112416	0					
ANR	5112423	Identifier	charset		5112416	1					
ANR	5112424	CompoundStatement		2:15:16:16	5112416	1					
ANR	5112425	ReturnStatement	return NULL ;	48:2:1770:1781	5112416	0	True				
ANR	5112426	Identifier	NULL		5112416	0					
ANR	5112427	IdentifierDeclStatement	int size = strlen ( charset ) ;	50:1:1787:1814	5112416	1	True				
ANR	5112428	IdentifierDecl	size = strlen ( charset )		5112416	0					
ANR	5112429	IdentifierDeclType	int		5112416	0					
ANR	5112430	Identifier	size		5112416	1					
ANR	5112431	AssignmentExpression	size = strlen ( charset )		5112416	2		=			
ANR	5112432	Identifier	size		5112416	0					
ANR	5112433	CallExpression	strlen ( charset )		5112416	1					
ANR	5112434	Callee	strlen		5112416	0					
ANR	5112435	Identifier	strlen		5112416	0					
ANR	5112436	ArgumentList	charset		5112416	1					
ANR	5112437	Argument	charset		5112416	0					
ANR	5112438	Identifier	charset		5112416	0					
ANR	5112439	IdentifierDeclStatement	"int * prenecklace_a = calloc ( size * order , sizeof ( int ) ) ;"	51:1:1817:1873	5112416	2	True				
ANR	5112440	IdentifierDecl	"* prenecklace_a = calloc ( size * order , sizeof ( int ) )"		5112416	0					
ANR	5112441	IdentifierDeclType	int *		5112416	0					
ANR	5112442	Identifier	prenecklace_a		5112416	1					
ANR	5112443	AssignmentExpression	"* prenecklace_a = calloc ( size * order , sizeof ( int ) )"		5112416	2		=			
ANR	5112444	Identifier	prenecklace_a		5112416	0					
ANR	5112445	CallExpression	"calloc ( size * order , sizeof ( int ) )"		5112416	1					
ANR	5112446	Callee	calloc		5112416	0					
ANR	5112447	Identifier	calloc		5112416	0					
ANR	5112448	ArgumentList	size * order		5112416	1					
ANR	5112449	Argument	size * order		5112416	0					
ANR	5112450	MultiplicativeExpression	size * order		5112416	0		*			
ANR	5112451	Identifier	size		5112416	0					
ANR	5112452	Identifier	order		5112416	1					
ANR	5112453	Argument	sizeof ( int )		5112416	1					
ANR	5112454	SizeofExpression	sizeof ( int )		5112416	0					
ANR	5112455	Sizeof	sizeof		5112416	0					
ANR	5112456	SizeofOperand	int		5112416	1					
ANR	5112457	IfStatement	if ( ! prenecklace_a )		5112416	3					
ANR	5112458	Condition	! prenecklace_a	52:5:1880:1893	5112416	0	True				
ANR	5112459	UnaryOperationExpression	! prenecklace_a		5112416	0					
ANR	5112460	UnaryOperator	!		5112416	0					
ANR	5112461	Identifier	prenecklace_a		5112416	1					
ANR	5112462	CompoundStatement		7:21:146:146	5112416	1					
ANR	5112463	ReturnStatement	return NULL ;	53:2:1900:1911	5112416	0	True				
ANR	5112464	Identifier	NULL		5112416	0					
ANR	5112465	IdentifierDeclStatement	"char * sequence = calloc ( maxlen + 1 , sizeof ( char ) ) ;"	55:1:1917:1968	5112416	4	True				
ANR	5112466	IdentifierDecl	"* sequence = calloc ( maxlen + 1 , sizeof ( char ) )"		5112416	0					
ANR	5112467	IdentifierDeclType	char *		5112416	0					
ANR	5112468	Identifier	sequence		5112416	1					
ANR	5112469	AssignmentExpression	"* sequence = calloc ( maxlen + 1 , sizeof ( char ) )"		5112416	2		=			
ANR	5112470	Identifier	sequence		5112416	0					
ANR	5112471	CallExpression	"calloc ( maxlen + 1 , sizeof ( char ) )"		5112416	1					
ANR	5112472	Callee	calloc		5112416	0					
ANR	5112473	Identifier	calloc		5112416	0					
ANR	5112474	ArgumentList	maxlen + 1		5112416	1					
ANR	5112475	Argument	maxlen + 1		5112416	0					
ANR	5112476	AdditiveExpression	maxlen + 1		5112416	0		+			
ANR	5112477	Identifier	maxlen		5112416	0					
ANR	5112478	PrimaryExpression	1		5112416	1					
ANR	5112479	Argument	sizeof ( char )		5112416	1					
ANR	5112480	SizeofExpression	sizeof ( char )		5112416	0					
ANR	5112481	Sizeof	sizeof		5112416	0					
ANR	5112482	SizeofOperand	char		5112416	1					
ANR	5112483	IfStatement	if ( ! sequence )		5112416	5					
ANR	5112484	Condition	! sequence	56:5:1975:1983	5112416	0	True				
ANR	5112485	UnaryOperationExpression	! sequence		5112416	0					
ANR	5112486	UnaryOperator	!		5112416	0					
ANR	5112487	Identifier	sequence		5112416	1					
ANR	5112488	CompoundStatement		11:16:236:236	5112416	1					
ANR	5112489	ExpressionStatement	free ( prenecklace_a )	57:2:1990:2010	5112416	0	True				
ANR	5112490	CallExpression	free ( prenecklace_a )		5112416	0					
ANR	5112491	Callee	free		5112416	0					
ANR	5112492	Identifier	free		5112416	0					
ANR	5112493	ArgumentList	prenecklace_a		5112416	1					
ANR	5112494	Argument	prenecklace_a		5112416	0					
ANR	5112495	Identifier	prenecklace_a		5112416	0					
ANR	5112496	ReturnStatement	return NULL ;	58:2:2014:2025	5112416	1	True				
ANR	5112497	Identifier	NULL		5112416	0					
ANR	5112498	ExpressionStatement	"de_bruijn_seq ( 1 , 1 , order , maxlen , size , prenecklace_a , sequence , charset )"	60:1:2031:2106	5112416	6	True				
ANR	5112499	CallExpression	"de_bruijn_seq ( 1 , 1 , order , maxlen , size , prenecklace_a , sequence , charset )"		5112416	0					
ANR	5112500	Callee	de_bruijn_seq		5112416	0					
ANR	5112501	Identifier	de_bruijn_seq		5112416	0					
ANR	5112502	ArgumentList	1		5112416	1					
ANR	5112503	Argument	1		5112416	0					
ANR	5112504	PrimaryExpression	1		5112416	0					
ANR	5112505	Argument	1		5112416	1					
ANR	5112506	PrimaryExpression	1		5112416	0					
ANR	5112507	Argument	order		5112416	2					
ANR	5112508	Identifier	order		5112416	0					
ANR	5112509	Argument	maxlen		5112416	3					
ANR	5112510	Identifier	maxlen		5112416	0					
ANR	5112511	Argument	size		5112416	4					
ANR	5112512	Identifier	size		5112416	0					
ANR	5112513	Argument	prenecklace_a		5112416	5					
ANR	5112514	Identifier	prenecklace_a		5112416	0					
ANR	5112515	Argument	sequence		5112416	6					
ANR	5112516	Identifier	sequence		5112416	0					
ANR	5112517	Argument	charset		5112416	7					
ANR	5112518	Identifier	charset		5112416	0					
ANR	5112519	ExpressionStatement	free ( prenecklace_a )	61:1:2109:2129	5112416	7	True				
ANR	5112520	CallExpression	free ( prenecklace_a )		5112416	0					
ANR	5112521	Callee	free		5112416	0					
ANR	5112522	Identifier	free		5112416	0					
ANR	5112523	ArgumentList	prenecklace_a		5112416	1					
ANR	5112524	Argument	prenecklace_a		5112416	0					
ANR	5112525	Identifier	prenecklace_a		5112416	0					
ANR	5112526	ReturnStatement	return sequence ;	62:1:2132:2147	5112416	8	True				
ANR	5112527	Identifier	sequence		5112416	0					
ANR	5112528	ReturnType	static char *		5112416	1					
ANR	5112529	Identifier	de_bruijn		5112416	2					
ANR	5112530	ParameterList	"const char * charset , int order , int maxlen"		5112416	3					
ANR	5112531	Parameter	const char * charset	46:23:1705:1723	5112416	0	True				
ANR	5112532	ParameterType	const char *		5112416	0					
ANR	5112533	Identifier	charset		5112416	1					
ANR	5112534	Parameter	int order	46:44:1726:1734	5112416	1	True				
ANR	5112535	ParameterType	int		5112416	0					
ANR	5112536	Identifier	order		5112416	1					
ANR	5112537	Parameter	int maxlen	46:55:1737:1746	5112416	2	True				
ANR	5112538	ParameterType	int		5112416	0					
ANR	5112539	Identifier	maxlen		5112416	1					
ANR	5112540	CFGEntryNode	ENTRY		5112416		True				
ANR	5112541	CFGExitNode	EXIT		5112416		True				
ANR	5112542	Symbol	charset		5112416						
ANR	5112543	Symbol	strlen		5112416						
ANR	5112544	Symbol	sequence		5112416						
ANR	5112545	Symbol	NULL		5112416						
ANR	5112546	Symbol	size		5112416						
ANR	5112547	Symbol	calloc		5112416						
ANR	5112548	Symbol	prenecklace_a		5112416						
ANR	5112549	Symbol	maxlen		5112416						
ANR	5112550	Symbol	order		5112416						
ANR	5112551	Function	r_debruijn_pattern	69:0:2354:3182							
ANR	5112552	FunctionDef	"r_debruijn_pattern (int size , int start , const char * charset)"		5112551	0					
ANR	5112553	CompoundStatement		69:73:2427:3182	5112551	0					
ANR	5112554	IdentifierDeclStatement	"char * pat , * pat2 ;"	70:1:2430:2446	5112551	0	True				
ANR	5112555	IdentifierDecl	* pat		5112551	0					
ANR	5112556	IdentifierDeclType	char *		5112551	0					
ANR	5112557	Identifier	pat		5112551	1					
ANR	5112558	IdentifierDecl	* pat2		5112551	1					
ANR	5112559	IdentifierDeclType	char *		5112551	0					
ANR	5112560	Identifier	pat2		5112551	1					
ANR	5112561	IdentifierDeclStatement	ut64 len ;	71:1:2449:2457	5112551	1	True				
ANR	5112562	IdentifierDecl	len		5112551	0					
ANR	5112563	IdentifierDeclType	ut64		5112551	0					
ANR	5112564	Identifier	len		5112551	1					
ANR	5112565	IfStatement	if ( ! charset )		5112551	2					
ANR	5112566	Condition	! charset	72:5:2464:2471	5112551	0	True				
ANR	5112567	UnaryOperationExpression	! charset		5112551	0					
ANR	5112568	UnaryOperator	!		5112551	0					
ANR	5112569	Identifier	charset		5112551	1					
ANR	5112570	CompoundStatement		4:15:46:46	5112551	1					
ANR	5112571	ExpressionStatement	charset = debruijn_charset	73:2:2478:2504	5112551	0	True				
ANR	5112572	AssignmentExpression	charset = debruijn_charset		5112551	0		=			
ANR	5112573	Identifier	charset		5112551	0					
ANR	5112574	Identifier	debruijn_charset		5112551	1					
ANR	5112575	IfStatement	if ( start >= size )		5112551	3					
ANR	5112576	Condition	start >= size	75:5:2514:2526	5112551	0	True				
ANR	5112577	RelationalExpression	start >= size		5112551	0		>=			
ANR	5112578	Identifier	start		5112551	0					
ANR	5112579	Identifier	size		5112551	1					
ANR	5112580	CompoundStatement		7:20:101:101	5112551	1					
ANR	5112581	ReturnStatement	return ( char * ) NULL ;	76:2:2533:2551	5112551	0	True				
ANR	5112582	CastExpression	( char * ) NULL		5112551	0					
ANR	5112583	CastTarget	char *		5112551	0					
ANR	5112584	Identifier	NULL		5112551	1					
ANR	5112585	ExpressionStatement	"pat = de_bruijn ( charset , 3 , size )"	78:1:2557:2614	5112551	4	True				
ANR	5112586	AssignmentExpression	"pat = de_bruijn ( charset , 3 , size )"		5112551	0		=			
ANR	5112587	Identifier	pat		5112551	0					
ANR	5112588	CallExpression	"de_bruijn ( charset , 3 , size )"		5112551	1					
ANR	5112589	Callee	de_bruijn		5112551	0					
ANR	5112590	Identifier	de_bruijn		5112551	0					
ANR	5112591	ArgumentList	charset		5112551	1					
ANR	5112592	Argument	charset		5112551	0					
ANR	5112593	Identifier	charset		5112551	0					
ANR	5112594	Argument	3		5112551	1					
ANR	5112595	PrimaryExpression	3		5112551	0					
ANR	5112596	Argument	size		5112551	2					
ANR	5112597	Identifier	size		5112551	0					
ANR	5112598	IfStatement	if ( ! pat )		5112551	5					
ANR	5112599	Condition	! pat	79:5:2621:2624	5112551	0	True				
ANR	5112600	UnaryOperationExpression	! pat		5112551	0					
ANR	5112601	UnaryOperator	!		5112551	0					
ANR	5112602	Identifier	pat		5112551	1					
ANR	5112603	CompoundStatement		11:11:199:199	5112551	1					
ANR	5112604	ReturnStatement	return NULL ;	80:2:2631:2642	5112551	0	True				
ANR	5112605	Identifier	NULL		5112551	0					
ANR	5112606	IfStatement	if ( start == 0 )		5112551	6					
ANR	5112607	Condition	start == 0	82:5:2652:2661	5112551	0	True				
ANR	5112608	EqualityExpression	start == 0		5112551	0		==			
ANR	5112609	Identifier	start		5112551	0					
ANR	5112610	PrimaryExpression	0		5112551	1					
ANR	5112611	CompoundStatement		14:17:236:236	5112551	1					
ANR	5112612	ExpressionStatement	len = strlen ( pat )	83:2:2668:2686	5112551	0	True				
ANR	5112613	AssignmentExpression	len = strlen ( pat )		5112551	0		=			
ANR	5112614	Identifier	len		5112551	0					
ANR	5112615	CallExpression	strlen ( pat )		5112551	1					
ANR	5112616	Callee	strlen		5112551	0					
ANR	5112617	Identifier	strlen		5112551	0					
ANR	5112618	ArgumentList	pat		5112551	1					
ANR	5112619	Argument	pat		5112551	0					
ANR	5112620	Identifier	pat		5112551	0					
ANR	5112621	IfStatement	if ( size != len )		5112551	1					
ANR	5112622	Condition	size != len	84:6:2694:2704	5112551	0	True				
ANR	5112623	EqualityExpression	size != len		5112551	0		!=			
ANR	5112624	Identifier	size		5112551	0					
ANR	5112625	Identifier	len		5112551	1					
ANR	5112626	CompoundStatement		16:19:279:279	5112551	1					
ANR	5112627	Statement	eprintf	85:3:2712:2718	5112551	0	True				
ANR	5112628	Statement	(	85:11:2720:2720	5112551	1	True				
ANR	5112629	Statement	"""warning: requested pattern of length %d, """	85:12:2721:2763	5112551	2	True				
ANR	5112630	Statement	"""generated length %"""	86:5:2770:2789	5112551	3	True				
ANR	5112631	Statement	PFMT64d	86:25:2790:2796	5112551	4	True				
ANR	5112632	Statement	"""\\n"""	86:32:2797:2800	5112551	5	True				
ANR	5112633	Statement	","	86:36:2801:2801	5112551	6	True				
ANR	5112634	Statement	size	86:38:2803:2806	5112551	7	True				
ANR	5112635	Statement	","	86:42:2807:2807	5112551	8	True				
ANR	5112636	Statement	len	86:44:2809:2811	5112551	9	True				
ANR	5112637	Statement	)	86:47:2812:2812	5112551	10	True				
ANR	5112638	ExpressionStatement		86:48:2813:2813	5112551	11	True				
ANR	5112639	ReturnStatement	return pat ;	88:2:2821:2831	5112551	2	True				
ANR	5112640	Identifier	pat		5112551	0					
ANR	5112641	ExpressionStatement	"pat2 = calloc ( ( size - start ) + 1 , sizeof ( char ) )"	90:1:2837:2885	5112551	7	True				
ANR	5112642	AssignmentExpression	"pat2 = calloc ( ( size - start ) + 1 , sizeof ( char ) )"		5112551	0		=			
ANR	5112643	Identifier	pat2		5112551	0					
ANR	5112644	CallExpression	"calloc ( ( size - start ) + 1 , sizeof ( char ) )"		5112551	1					
ANR	5112645	Callee	calloc		5112551	0					
ANR	5112646	Identifier	calloc		5112551	0					
ANR	5112647	ArgumentList	( size - start ) + 1		5112551	1					
ANR	5112648	Argument	( size - start ) + 1		5112551	0					
ANR	5112649	AdditiveExpression	( size - start ) + 1		5112551	0		+			
ANR	5112650	AdditiveExpression	size - start		5112551	0		-			
ANR	5112651	Identifier	size		5112551	0					
ANR	5112652	Identifier	start		5112551	1					
ANR	5112653	PrimaryExpression	1		5112551	1					
ANR	5112654	Argument	sizeof ( char )		5112551	1					
ANR	5112655	SizeofExpression	sizeof ( char )		5112551	0					
ANR	5112656	Sizeof	sizeof		5112551	0					
ANR	5112657	SizeofOperand	char		5112551	1					
ANR	5112658	IfStatement	if ( ! pat2 )		5112551	8					
ANR	5112659	Condition	! pat2	91:5:2892:2896	5112551	0	True				
ANR	5112660	UnaryOperationExpression	! pat2		5112551	0					
ANR	5112661	UnaryOperator	!		5112551	0					
ANR	5112662	Identifier	pat2		5112551	1					
ANR	5112663	CompoundStatement		23:12:471:471	5112551	1					
ANR	5112664	ExpressionStatement	free ( pat )	92:2:2903:2913	5112551	0	True				
ANR	5112665	CallExpression	free ( pat )		5112551	0					
ANR	5112666	Callee	free		5112551	0					
ANR	5112667	Identifier	free		5112551	0					
ANR	5112668	ArgumentList	pat		5112551	1					
ANR	5112669	Argument	pat		5112551	0					
ANR	5112670	Identifier	pat		5112551	0					
ANR	5112671	ReturnStatement	return NULL ;	93:2:2917:2928	5112551	1	True				
ANR	5112672	Identifier	NULL		5112551	0					
ANR	5112673	ExpressionStatement	"strncpy ( pat2 , pat + start , size - start )"	95:1:2934:2975	5112551	9	True				
ANR	5112674	CallExpression	"strncpy ( pat2 , pat + start , size - start )"		5112551	0					
ANR	5112675	Callee	strncpy		5112551	0					
ANR	5112676	Identifier	strncpy		5112551	0					
ANR	5112677	ArgumentList	pat2		5112551	1					
ANR	5112678	Argument	pat2		5112551	0					
ANR	5112679	Identifier	pat2		5112551	0					
ANR	5112680	Argument	pat + start		5112551	1					
ANR	5112681	AdditiveExpression	pat + start		5112551	0		+			
ANR	5112682	Identifier	pat		5112551	0					
ANR	5112683	Identifier	start		5112551	1					
ANR	5112684	Argument	size - start		5112551	2					
ANR	5112685	AdditiveExpression	size - start		5112551	0		-			
ANR	5112686	Identifier	size		5112551	0					
ANR	5112687	Identifier	start		5112551	1					
ANR	5112688	ExpressionStatement	pat2 [ size - start ] = 0	96:1:2978:2998	5112551	10	True				
ANR	5112689	AssignmentExpression	pat2 [ size - start ] = 0		5112551	0		=			
ANR	5112690	ArrayIndexing	pat2 [ size - start ]		5112551	0					
ANR	5112691	Identifier	pat2		5112551	0					
ANR	5112692	AdditiveExpression	size - start		5112551	1		-			
ANR	5112693	Identifier	size		5112551	0					
ANR	5112694	Identifier	start		5112551	1					
ANR	5112695	PrimaryExpression	0		5112551	1					
ANR	5112696	ExpressionStatement	free ( pat )	97:1:3001:3011	5112551	11	True				
ANR	5112697	CallExpression	free ( pat )		5112551	0					
ANR	5112698	Callee	free		5112551	0					
ANR	5112699	Identifier	free		5112551	0					
ANR	5112700	ArgumentList	pat		5112551	1					
ANR	5112701	Argument	pat		5112551	0					
ANR	5112702	Identifier	pat		5112551	0					
ANR	5112703	ExpressionStatement	len = strlen ( pat2 )	98:1:3014:3033	5112551	12	True				
ANR	5112704	AssignmentExpression	len = strlen ( pat2 )		5112551	0		=			
ANR	5112705	Identifier	len		5112551	0					
ANR	5112706	CallExpression	strlen ( pat2 )		5112551	1					
ANR	5112707	Callee	strlen		5112551	0					
ANR	5112708	Identifier	strlen		5112551	0					
ANR	5112709	ArgumentList	pat2		5112551	1					
ANR	5112710	Argument	pat2		5112551	0					
ANR	5112711	Identifier	pat2		5112551	0					
ANR	5112712	IfStatement	if ( size != len )		5112551	13					
ANR	5112713	Condition	size != len	99:5:3040:3050	5112551	0	True				
ANR	5112714	EqualityExpression	size != len		5112551	0		!=			
ANR	5112715	Identifier	size		5112551	0					
ANR	5112716	Identifier	len		5112551	1					
ANR	5112717	CompoundStatement		31:18:625:625	5112551	1					
ANR	5112718	Statement	eprintf	100:2:3057:3063	5112551	0	True				
ANR	5112719	Statement	(	100:10:3065:3065	5112551	1	True				
ANR	5112720	Statement	"""warning: requested pattern of length %d, """	100:11:3066:3108	5112551	2	True				
ANR	5112721	Statement	"""generated length %"""	101:5:3115:3134	5112551	3	True				
ANR	5112722	Statement	PFMT64d	101:25:3135:3141	5112551	4	True				
ANR	5112723	Statement	"""\\n"""	101:32:3142:3145	5112551	5	True				
ANR	5112724	Statement	","	101:36:3146:3146	5112551	6	True				
ANR	5112725	Statement	size	102:5:3153:3156	5112551	7	True				
ANR	5112726	Statement	","	102:9:3157:3157	5112551	8	True				
ANR	5112727	Statement	len	102:11:3159:3161	5112551	9	True				
ANR	5112728	Statement	)	102:14:3162:3162	5112551	10	True				
ANR	5112729	ExpressionStatement		102:15:3163:3163	5112551	11	True				
ANR	5112730	ReturnStatement	return pat2 ;	104:1:3169:3180	5112551	14	True				
ANR	5112731	Identifier	pat2		5112551	0					
ANR	5112732	ReturnType	R_API char *		5112551	1					
ANR	5112733	Identifier	r_debruijn_pattern		5112551	2					
ANR	5112734	ParameterList	"int size , int start , const char * charset"		5112551	3					
ANR	5112735	Parameter	int size	69:31:2385:2392	5112551	0	True				
ANR	5112736	ParameterType	int		5112551	0					
ANR	5112737	Identifier	size		5112551	1					
ANR	5112738	Parameter	int start	69:41:2395:2403	5112551	1	True				
ANR	5112739	ParameterType	int		5112551	0					
ANR	5112740	Identifier	start		5112551	1					
ANR	5112741	Parameter	const char * charset	69:52:2406:2424	5112551	2	True				
ANR	5112742	ParameterType	const char *		5112551	0					
ANR	5112743	Identifier	charset		5112551	1					
ANR	5112744	CFGEntryNode	ENTRY		5112551		True				
ANR	5112745	CFGExitNode	EXIT		5112551		True				
ANR	5112746	Symbol	charset		5112551						
ANR	5112747	Symbol	debruijn_charset		5112551						
ANR	5112748	Symbol	pat		5112551						
ANR	5112749	Symbol	NULL		5112551						
ANR	5112750	Symbol	* pat2		5112551						
ANR	5112751	Symbol	* start		5112551						
ANR	5112752	Symbol	start		5112551						
ANR	5112753	Symbol	calloc		5112551						
ANR	5112754	Symbol	strlen		5112551						
ANR	5112755	Symbol	* size		5112551						
ANR	5112756	Symbol	size		5112551						
ANR	5112757	Symbol	len		5112551						
ANR	5112758	Symbol	pat2		5112551						
ANR	5112759	Symbol	de_bruijn		5112551						
ANR	5112760	Function	r_debruijn_offset	108:0:3257:4014							
ANR	5112761	FunctionDef	"r_debruijn_offset (ut64 value , bool is_big_endian)"		5112760	0					
ANR	5112762	CompoundStatement		108:60:3317:4014	5112760	0					
ANR	5112763	IdentifierDeclStatement	"char * needle , * pattern , buf [ 9 ] ;"	109:1:3320:3350	5112760	0	True				
ANR	5112764	IdentifierDecl	* needle		5112760	0					
ANR	5112765	IdentifierDeclType	char *		5112760	0					
ANR	5112766	Identifier	needle		5112760	1					
ANR	5112767	IdentifierDecl	* pattern		5112760	1					
ANR	5112768	IdentifierDeclType	char *		5112760	0					
ANR	5112769	Identifier	pattern		5112760	1					
ANR	5112770	IdentifierDecl	buf [ 9 ]		5112760	2					
ANR	5112771	IdentifierDeclType	char [ 9 ]		5112760	0					
ANR	5112772	Identifier	buf		5112760	1					
ANR	5112773	PrimaryExpression	9		5112760	2					
ANR	5112774	IdentifierDeclStatement	int retval = - 1 ;	110:1:3353:3368	5112760	1	True				
ANR	5112775	IdentifierDecl	retval = - 1		5112760	0					
ANR	5112776	IdentifierDeclType	int		5112760	0					
ANR	5112777	Identifier	retval		5112760	1					
ANR	5112778	AssignmentExpression	retval = - 1		5112760	2		=			
ANR	5112779	Identifier	retval		5112760	0					
ANR	5112780	UnaryOperationExpression	- 1		5112760	1					
ANR	5112781	UnaryOperator	-		5112760	0					
ANR	5112782	PrimaryExpression	1		5112760	1					
ANR	5112783	IdentifierDeclStatement	char * pch ;	111:1:3371:3380	5112760	2	True				
ANR	5112784	IdentifierDecl	* pch		5112760	0					
ANR	5112785	IdentifierDeclType	char *		5112760	0					
ANR	5112786	Identifier	pch		5112760	1					
ANR	5112787	IdentifierDeclStatement	"int lens [ 2 ] = { 0x1000 , 0x10000 } ;"	114:1:3510:3541	5112760	3	True				
ANR	5112788	IdentifierDecl	"lens [ 2 ] = { 0x1000 , 0x10000 }"		5112760	0					
ANR	5112789	IdentifierDeclType	int [ 2 ]		5112760	0					
ANR	5112790	Identifier	lens		5112760	1					
ANR	5112791	PrimaryExpression	2		5112760	2					
ANR	5112792	AssignmentExpression	"lens [ 2 ] = { 0x1000 , 0x10000 }"		5112760	3		=			
ANR	5112793	Identifier	lens		5112760	0					
ANR	5112794	InitializerList	0x1000		5112760	1					
ANR	5112795	PrimaryExpression	0x1000		5112760	0					
ANR	5112796	PrimaryExpression	0x10000		5112760	1					
ANR	5112797	IdentifierDeclStatement	int j ;	115:1:3544:3549	5112760	4	True				
ANR	5112798	IdentifierDecl	j		5112760	0					
ANR	5112799	IdentifierDeclType	int		5112760	0					
ANR	5112800	Identifier	j		5112760	1					
ANR	5112801	IfStatement	if ( value == 0 )		5112760	5					
ANR	5112802	Condition	value == 0	117:5:3557:3566	5112760	0	True				
ANR	5112803	EqualityExpression	value == 0		5112760	0		==			
ANR	5112804	Identifier	value		5112760	0					
ANR	5112805	PrimaryExpression	0		5112760	1					
ANR	5112806	CompoundStatement		10:17:251:251	5112760	1					
ANR	5112807	ReturnStatement	return - 1 ;	118:2:3573:3582	5112760	0	True				
ANR	5112808	UnaryOperationExpression	- 1		5112760	0					
ANR	5112809	UnaryOperator	-		5112760	0					
ANR	5112810	PrimaryExpression	1		5112760	1					
ANR	5112811	ForStatement	for ( j = 0 ; j < 2 && retval == - 1 ; ++ j )		5112760	6					
ANR	5112812	ForInit	j = 0 ;	121:6:3594:3599	5112760	0	True				
ANR	5112813	AssignmentExpression	j = 0		5112760	0		=			
ANR	5112814	Identifier	j		5112760	0					
ANR	5112815	PrimaryExpression	0		5112760	1					
ANR	5112816	Condition	j < 2 && retval == - 1	121:13:3601:3621	5112760	1	True				
ANR	5112817	AndExpression	j < 2 && retval == - 1		5112760	0		&&			
ANR	5112818	RelationalExpression	j < 2		5112760	0		<			
ANR	5112819	Identifier	j		5112760	0					
ANR	5112820	PrimaryExpression	2		5112760	1					
ANR	5112821	EqualityExpression	retval == - 1		5112760	1		==			
ANR	5112822	Identifier	retval		5112760	0					
ANR	5112823	UnaryOperationExpression	- 1		5112760	1					
ANR	5112824	UnaryOperator	-		5112760	0					
ANR	5112825	PrimaryExpression	1		5112760	1					
ANR	5112826	UnaryExpression	++ j	121:36:3624:3626	5112760	2	True				
ANR	5112827	IncDec	++		5112760	0					
ANR	5112828	Identifier	j		5112760	1					
ANR	5112829	CompoundStatement		14:41:311:311	5112760	3					
ANR	5112830	ExpressionStatement	"pattern = r_debruijn_pattern ( lens [ j ] , 0 , debruijn_charset )"	122:2:3633:3692	5112760	0	True				
ANR	5112831	AssignmentExpression	"pattern = r_debruijn_pattern ( lens [ j ] , 0 , debruijn_charset )"		5112760	0		=			
ANR	5112832	Identifier	pattern		5112760	0					
ANR	5112833	CallExpression	"r_debruijn_pattern ( lens [ j ] , 0 , debruijn_charset )"		5112760	1					
ANR	5112834	Callee	r_debruijn_pattern		5112760	0					
ANR	5112835	Identifier	r_debruijn_pattern		5112760	0					
ANR	5112836	ArgumentList	lens [ j ]		5112760	1					
ANR	5112837	Argument	lens [ j ]		5112760	0					
ANR	5112838	ArrayIndexing	lens [ j ]		5112760	0					
ANR	5112839	Identifier	lens		5112760	0					
ANR	5112840	Identifier	j		5112760	1					
ANR	5112841	Argument	0		5112760	1					
ANR	5112842	PrimaryExpression	0		5112760	0					
ANR	5112843	Argument	debruijn_charset		5112760	2					
ANR	5112844	Identifier	debruijn_charset		5112760	0					
ANR	5112845	ExpressionStatement	buf [ 8 ] = '\\0'	124:2:3697:3710	5112760	1	True				
ANR	5112846	AssignmentExpression	buf [ 8 ] = '\\0'		5112760	0		=			
ANR	5112847	ArrayIndexing	buf [ 8 ]		5112760	0					
ANR	5112848	Identifier	buf		5112760	0					
ANR	5112849	PrimaryExpression	8		5112760	1					
ANR	5112850	PrimaryExpression	'\\0'		5112760	1					
ANR	5112851	IfStatement	if ( is_big_endian )		5112760	2					
ANR	5112852	Condition	is_big_endian	125:6:3718:3730	5112760	0	True				
ANR	5112853	Identifier	is_big_endian		5112760	0					
ANR	5112854	CompoundStatement		18:21:415:415	5112760	1					
ANR	5112855	ExpressionStatement	"r_write_be64 ( buf , value )"	126:3:3738:3763	5112760	0	True				
ANR	5112856	CallExpression	"r_write_be64 ( buf , value )"		5112760	0					
ANR	5112857	Callee	r_write_be64		5112760	0					
ANR	5112858	Identifier	r_write_be64		5112760	0					
ANR	5112859	ArgumentList	buf		5112760	1					
ANR	5112860	Argument	buf		5112760	0					
ANR	5112861	Identifier	buf		5112760	0					
ANR	5112862	Argument	value		5112760	1					
ANR	5112863	Identifier	value		5112760	0					
ANR	5112864	ElseStatement	else		5112760	0					
ANR	5112865	CompoundStatement		20:9:456:456	5112760	0					
ANR	5112866	ExpressionStatement	"r_write_le64 ( buf , value )"	128:3:3779:3804	5112760	0	True				
ANR	5112867	CallExpression	"r_write_le64 ( buf , value )"		5112760	0					
ANR	5112868	Callee	r_write_le64		5112760	0					
ANR	5112869	Identifier	r_write_le64		5112760	0					
ANR	5112870	ArgumentList	buf		5112760	1					
ANR	5112871	Argument	buf		5112760	0					
ANR	5112872	Identifier	buf		5112760	0					
ANR	5112873	Argument	value		5112760	1					
ANR	5112874	Identifier	value		5112760	0					
ANR	5112875	ForStatement	for ( needle = buf ; ! * needle ; needle ++ )		5112760	3					
ANR	5112876	ForInit	needle = buf ;	130:7:3817:3829	5112760	0	True				
ANR	5112877	AssignmentExpression	needle = buf		5112760	0		=			
ANR	5112878	Identifier	needle		5112760	0					
ANR	5112879	Identifier	buf		5112760	1					
ANR	5112880	Condition	! * needle	130:21:3831:3838	5112760	1	True				
ANR	5112881	UnaryOperationExpression	! * needle		5112760	0					
ANR	5112882	UnaryOperator	!		5112760	0					
ANR	5112883	UnaryOperationExpression	* needle		5112760	1					
ANR	5112884	UnaryOperator	*		5112760	0					
ANR	5112885	Identifier	needle		5112760	1					
ANR	5112886	PostIncDecOperationExpression	needle ++	130:31:3841:3848	5112760	2	True				
ANR	5112887	Identifier	needle		5112760	0					
ANR	5112888	IncDec	++		5112760	1					
ANR	5112889	CompoundStatement		23:41:533:533	5112760	3					
ANR	5112890	ExpressionStatement	"pch = strstr ( pattern , needle )"	134:2:3885:3915	5112760	4	True				
ANR	5112891	AssignmentExpression	"pch = strstr ( pattern , needle )"		5112760	0		=			
ANR	5112892	Identifier	pch		5112760	0					
ANR	5112893	CallExpression	"strstr ( pattern , needle )"		5112760	1					
ANR	5112894	Callee	strstr		5112760	0					
ANR	5112895	Identifier	strstr		5112760	0					
ANR	5112896	ArgumentList	pattern		5112760	1					
ANR	5112897	Argument	pattern		5112760	0					
ANR	5112898	Identifier	pattern		5112760	0					
ANR	5112899	Argument	needle		5112760	1					
ANR	5112900	Identifier	needle		5112760	0					
ANR	5112901	IfStatement	if ( pch )		5112760	5					
ANR	5112902	Condition	pch	136:6:3924:3926	5112760	0	True				
ANR	5112903	Identifier	pch		5112760	0					
ANR	5112904	CompoundStatement		29:11:611:611	5112760	1					
ANR	5112905	ExpressionStatement	retval = ( int ) ( size_t ) ( pch - pattern )	137:3:3934:3971	5112760	0	True				
ANR	5112906	AssignmentExpression	retval = ( int ) ( size_t ) ( pch - pattern )		5112760	0		=			
ANR	5112907	Identifier	retval		5112760	0					
ANR	5112908	CastExpression	( int ) ( size_t ) ( pch - pattern )		5112760	1					
ANR	5112909	CastTarget	int		5112760	0					
ANR	5112910	CastExpression	( size_t ) ( pch - pattern )		5112760	1					
ANR	5112911	CastTarget	size_t		5112760	0					
ANR	5112912	AdditiveExpression	pch - pattern		5112760	1		-			
ANR	5112913	Identifier	pch		5112760	0					
ANR	5112914	Identifier	pattern		5112760	1					
ANR	5112915	ExpressionStatement	free ( pattern )	139:2:3979:3993	5112760	6	True				
ANR	5112916	CallExpression	free ( pattern )		5112760	0					
ANR	5112917	Callee	free		5112760	0					
ANR	5112918	Identifier	free		5112760	0					
ANR	5112919	ArgumentList	pattern		5112760	1					
ANR	5112920	Argument	pattern		5112760	0					
ANR	5112921	Identifier	pattern		5112760	0					
ANR	5112922	ReturnStatement	return retval ;	141:1:3999:4012	5112760	7	True				
ANR	5112923	Identifier	retval		5112760	0					
ANR	5112924	ReturnType	R_API int		5112760	1					
ANR	5112925	Identifier	r_debruijn_offset		5112760	2					
ANR	5112926	ParameterList	"ut64 value , bool is_big_endian"		5112760	3					
ANR	5112927	Parameter	ut64 value	108:28:3285:3294	5112760	0	True				
ANR	5112928	ParameterType	ut64		5112760	0					
ANR	5112929	Identifier	value		5112760	1					
ANR	5112930	Parameter	bool is_big_endian	108:40:3297:3314	5112760	1	True				
ANR	5112931	ParameterType	bool		5112760	0					
ANR	5112932	Identifier	is_big_endian		5112760	1					
ANR	5112933	CFGEntryNode	ENTRY		5112760		True				
ANR	5112934	CFGExitNode	EXIT		5112760		True				
ANR	5112935	Symbol	debruijn_charset		5112760						
ANR	5112936	Symbol	* buf		5112760						
ANR	5112937	Symbol	r_debruijn_pattern		5112760						
ANR	5112938	Symbol	pattern		5112760						
ANR	5112939	Symbol	* needle		5112760						
ANR	5112940	Symbol	j		5112760						
ANR	5112941	Symbol	lens		5112760						
ANR	5112942	Symbol	retval		5112760						
ANR	5112943	Symbol	buf		5112760						
ANR	5112944	Symbol	pch		5112760						
ANR	5112945	Symbol	* j		5112760						
ANR	5112946	Symbol	* lens		5112760						
ANR	5112947	Symbol	strstr		5112760						
ANR	5112948	Symbol	is_big_endian		5112760						
ANR	5112949	Symbol	needle		5112760						
ANR	5112950	Symbol	value		5112760						
