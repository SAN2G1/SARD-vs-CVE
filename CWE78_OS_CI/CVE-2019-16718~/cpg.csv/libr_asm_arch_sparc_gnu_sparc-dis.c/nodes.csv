command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3311509	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_sparc_gnu_sparc-dis.c								
ANR	3311510	DeclStmt									
ANR	3311511	Decl							const sparc_opcode	const sparc_opcode * *	sorted_opcodes
ANR	3311512	DeclStmt									
ANR	3311513	Decl							int	int [ 4 ]	opcode_bits
ANR	3311514	ClassDef	sparc_opcode_hash	65:8:2306:2416							
ANR	3311515	DeclStmt									
ANR	3311516	Decl							struct sparc_opcode_hash	struct sparc_opcode_hash *	next
ANR	3311517	DeclStmt									
ANR	3311518	Decl							const sparc_opcode	const sparc_opcode *	opcode
ANR	3311519	DeclStmt									
ANR	3311520	Decl							sparc_opcode_hash	sparc_opcode_hash	sparc_opcode_hash
ANR	3311521	DeclStmt									
ANR	3311522	Decl							sparc_opcode_hash	sparc_opcode_hash * [ HASH_SIZE ]	opcode_hash_table
ANR	3311523	DeclStmt									
ANR	3311524	Decl							char	char * [ ]	reg_names
ANR	3311525	DeclStmt									
ANR	3311526	Decl							char	char * [ ]	v9_priv_reg_names
ANR	3311527	DeclStmt									
ANR	3311528	Decl							char	char * [ ]	v9_hpriv_reg_names
ANR	3311529	DeclStmt									
ANR	3311530	Decl							char	char * [ ]	v9a_asr_reg_names
ANR	3311531	Function	is_delayed_branch	205:0:6551:6901							
ANR	3311532	FunctionDef	is_delayed_branch (unsigned long insn)		3311531	0					
ANR	3311533	CompoundStatement		207:0:6601:6901	3311531	0					
ANR	3311534	IdentifierDeclStatement	sparc_opcode_hash * op ;	208:2:6605:6626	3311531	0	True				
ANR	3311535	IdentifierDecl	* op		3311531	0					
ANR	3311536	IdentifierDeclType	sparc_opcode_hash *		3311531	0					
ANR	3311537	Identifier	op		3311531	1					
ANR	3311538	ForStatement	for ( op = opcode_hash_table [ HASH_INSN ( insn ) ] ; op ; op = op -> next )		3311531	1					
ANR	3311539	ForInit	op = opcode_hash_table [ HASH_INSN ( insn ) ] ;	210:7:6636:6676	3311531	0	True				
ANR	3311540	AssignmentExpression	op = opcode_hash_table [ HASH_INSN ( insn ) ]		3311531	0		=			
ANR	3311541	Identifier	op		3311531	0					
ANR	3311542	ArrayIndexing	opcode_hash_table [ HASH_INSN ( insn ) ]		3311531	1					
ANR	3311543	Identifier	opcode_hash_table		3311531	0					
ANR	3311544	CallExpression	HASH_INSN ( insn )		3311531	1					
ANR	3311545	Callee	HASH_INSN		3311531	0					
ANR	3311546	Identifier	HASH_INSN		3311531	0					
ANR	3311547	ArgumentList	insn		3311531	1					
ANR	3311548	Argument	insn		3311531	0					
ANR	3311549	Identifier	insn		3311531	0					
ANR	3311550	Condition	op	210:49:6678:6679	3311531	1	True				
ANR	3311551	Identifier	op		3311531	0					
ANR	3311552	AssignmentExpression	op = op -> next	210:53:6682:6694	3311531	2	True	=			
ANR	3311553	Identifier	op		3311531	0					
ANR	3311554	PtrMemberAccess	op -> next		3311531	1					
ANR	3311555	Identifier	op		3311531	0					
ANR	3311556	Identifier	next		3311531	1					
ANR	3311557	CompoundStatement		6:6:107:146	3311531	3					
ANR	3311558	IdentifierDeclStatement	const sparc_opcode * opcode = op -> opcode ;	212:6:6709:6748	3311531	0	True				
ANR	3311559	IdentifierDecl	* opcode = op -> opcode		3311531	0					
ANR	3311560	IdentifierDeclType	const sparc_opcode *		3311531	0					
ANR	3311561	Identifier	opcode		3311531	1					
ANR	3311562	AssignmentExpression	* opcode = op -> opcode		3311531	2		=			
ANR	3311563	Identifier	opcode		3311531	0					
ANR	3311564	PtrMemberAccess	op -> opcode		3311531	1					
ANR	3311565	Identifier	op		3311531	0					
ANR	3311566	Identifier	opcode		3311531	1					
ANR	3311567	IfStatement	if ( ( opcode -> match & insn ) == opcode -> match && ( opcode -> lose & insn ) == 0 )		3311531	1					
ANR	3311568	Condition	( opcode -> match & insn ) == opcode -> match && ( opcode -> lose & insn ) == 0	214:10:6761:6829	3311531	0	True				
ANR	3311569	AndExpression	( opcode -> match & insn ) == opcode -> match && ( opcode -> lose & insn ) == 0		3311531	0		&&			
ANR	3311570	EqualityExpression	( opcode -> match & insn ) == opcode -> match		3311531	0		==			
ANR	3311571	BitAndExpression	opcode -> match & insn		3311531	0		&			
ANR	3311572	PtrMemberAccess	opcode -> match		3311531	0					
ANR	3311573	Identifier	opcode		3311531	0					
ANR	3311574	Identifier	match		3311531	1					
ANR	3311575	Identifier	insn		3311531	1					
ANR	3311576	PtrMemberAccess	opcode -> match		3311531	1					
ANR	3311577	Identifier	opcode		3311531	0					
ANR	3311578	Identifier	match		3311531	1					
ANR	3311579	EqualityExpression	( opcode -> lose & insn ) == 0		3311531	1		==			
ANR	3311580	BitAndExpression	opcode -> lose & insn		3311531	0		&			
ANR	3311581	PtrMemberAccess	opcode -> lose		3311531	0					
ANR	3311582	Identifier	opcode		3311531	0					
ANR	3311583	Identifier	lose		3311531	1					
ANR	3311584	Identifier	insn		3311531	1					
ANR	3311585	PrimaryExpression	0		3311531	1					
ANR	3311586	CompoundStatement		8:81:230:230	3311531	1					
ANR	3311587	ReturnStatement	return opcode -> flags & F_DELAYED ;	215:7:6841:6873	3311531	0	True				
ANR	3311588	BitAndExpression	opcode -> flags & F_DELAYED		3311531	0		&			
ANR	3311589	PtrMemberAccess	opcode -> flags		3311531	0					
ANR	3311590	Identifier	opcode		3311531	0					
ANR	3311591	Identifier	flags		3311531	1					
ANR	3311592	Identifier	F_DELAYED		3311531	1					
ANR	3311593	ReturnStatement	return 0 ;	218:2:6891:6899	3311531	2	True				
ANR	3311594	PrimaryExpression	0		3311531	0					
ANR	3311595	ReturnType	static int		3311531	1					
ANR	3311596	Identifier	is_delayed_branch		3311531	2					
ANR	3311597	ParameterList	unsigned long insn		3311531	3					
ANR	3311598	Parameter	unsigned long insn	206:19:6581:6598	3311531	0	True				
ANR	3311599	ParameterType	unsigned long		3311531	0					
ANR	3311600	Identifier	insn		3311531	1					
ANR	3311601	CFGEntryNode	ENTRY		3311531		True				
ANR	3311602	CFGExitNode	EXIT		3311531		True				
ANR	3311603	Symbol	op		3311531						
ANR	3311604	Symbol	op -> opcode		3311531						
ANR	3311605	Symbol	* op		3311531						
ANR	3311606	Symbol	* HASH_INSN		3311531						
ANR	3311607	Symbol	* opcode_hash_table		3311531						
ANR	3311608	Symbol	op -> next		3311531						
ANR	3311609	Symbol	opcode		3311531						
ANR	3311610	Symbol	F_DELAYED		3311531						
ANR	3311611	Symbol	insn		3311531						
ANR	3311612	Symbol	opcode_hash_table		3311531						
ANR	3311613	Symbol	opcode -> match		3311531						
ANR	3311614	Symbol	opcode -> flags		3311531						
ANR	3311615	Symbol	HASH_INSN		3311531						
ANR	3311616	Symbol	opcode -> lose		3311531						
ANR	3311617	Symbol	* opcode		3311531						
ANR	3311618	DeclStmt									
ANR	3311619	Decl							unsigned int	unsigned int	current_arch_mask
ANR	3311620	Function	compute_arch_mask	229:0:7154:8204							
ANR	3311621	FunctionDef	compute_arch_mask (unsigned long mach)		3311620	0					
ANR	3311622	CompoundStatement		231:0:7204:8204	3311620	0					
ANR	3311623	SwitchStatement	switch ( mach )		3311620	0					
ANR	3311624	Condition	mach	232:10:7216:7219	3311620	0	True				
ANR	3311625	Identifier	mach		3311620	0					
ANR	3311626	CompoundStatement		3:4:21:21	3311620	1					
ANR	3311627	Label	case 0 :	234:4:7232:7239	3311620	0	True				
ANR	3311628	Label	case bfd_mach_sparc :	235:4:7245:7265	3311620	1	True				
ANR	3311629	Identifier	bfd_mach_sparc		3311620	0					
ANR	3311630	ReturnStatement	return SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_V8 ) ;	236:6:7273:7325	3311620	2	True				
ANR	3311631	CallExpression	SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_V8 )		3311620	0					
ANR	3311632	Callee	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311633	Identifier	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311634	ArgumentList	SPARC_OPCODE_ARCH_V8		3311620	1					
ANR	3311635	Argument	SPARC_OPCODE_ARCH_V8		3311620	0					
ANR	3311636	Identifier	SPARC_OPCODE_ARCH_V8		3311620	0					
ANR	3311637	Label	case bfd_mach_sparc_sparclet :	237:4:7331:7360	3311620	3	True				
ANR	3311638	Identifier	bfd_mach_sparc_sparclet		3311620	0					
ANR	3311639	ReturnStatement	return SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_SPARCLET ) ;	238:6:7368:7426	3311620	4	True				
ANR	3311640	CallExpression	SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_SPARCLET )		3311620	0					
ANR	3311641	Callee	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311642	Identifier	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311643	ArgumentList	SPARC_OPCODE_ARCH_SPARCLET		3311620	1					
ANR	3311644	Argument	SPARC_OPCODE_ARCH_SPARCLET		3311620	0					
ANR	3311645	Identifier	SPARC_OPCODE_ARCH_SPARCLET		3311620	0					
ANR	3311646	Label	case bfd_mach_sparc_sparclite :	239:4:7432:7462	3311620	5	True				
ANR	3311647	Identifier	bfd_mach_sparc_sparclite		3311620	0					
ANR	3311648	Label	case bfd_mach_sparc_sparclite_le :	240:4:7468:7501	3311620	6	True				
ANR	3311649	Identifier	bfd_mach_sparc_sparclite_le		3311620	0					
ANR	3311650	ReturnStatement	return ( SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_SPARCLITE ) | SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_V8 ) ) ;	244:6:7696:7812	3311620	7	True				
ANR	3311651	InclusiveOrExpression	SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_SPARCLITE ) | SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_V8 )		3311620	0		|			
ANR	3311652	CallExpression	SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_SPARCLITE )		3311620	0					
ANR	3311653	Callee	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311654	Identifier	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311655	ArgumentList	SPARC_OPCODE_ARCH_SPARCLITE		3311620	1					
ANR	3311656	Argument	SPARC_OPCODE_ARCH_SPARCLITE		3311620	0					
ANR	3311657	Identifier	SPARC_OPCODE_ARCH_SPARCLITE		3311620	0					
ANR	3311658	CallExpression	SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_V8 )		3311620	1					
ANR	3311659	Callee	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311660	Identifier	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311661	ArgumentList	SPARC_OPCODE_ARCH_V8		3311620	1					
ANR	3311662	Argument	SPARC_OPCODE_ARCH_V8		3311620	0					
ANR	3311663	Identifier	SPARC_OPCODE_ARCH_V8		3311620	0					
ANR	3311664	Label	case bfd_mach_sparc_v8plus :	246:4:7818:7845	3311620	8	True				
ANR	3311665	Identifier	bfd_mach_sparc_v8plus		3311620	0					
ANR	3311666	Label	case bfd_mach_sparc_v9 :	247:4:7851:7874	3311620	9	True				
ANR	3311667	Identifier	bfd_mach_sparc_v9		3311620	0					
ANR	3311668	ReturnStatement	return SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_V9 ) ;	248:6:7882:7934	3311620	10	True				
ANR	3311669	CallExpression	SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_V9 )		3311620	0					
ANR	3311670	Callee	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311671	Identifier	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311672	ArgumentList	SPARC_OPCODE_ARCH_V9		3311620	1					
ANR	3311673	Argument	SPARC_OPCODE_ARCH_V9		3311620	0					
ANR	3311674	Identifier	SPARC_OPCODE_ARCH_V9		3311620	0					
ANR	3311675	Label	case bfd_mach_sparc_v8plusa :	249:4:7940:7968	3311620	11	True				
ANR	3311676	Identifier	bfd_mach_sparc_v8plusa		3311620	0					
ANR	3311677	Label	case bfd_mach_sparc_v9a :	250:4:7974:7998	3311620	12	True				
ANR	3311678	Identifier	bfd_mach_sparc_v9a		3311620	0					
ANR	3311679	ReturnStatement	return SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_V9A ) ;	251:6:8006:8059	3311620	13	True				
ANR	3311680	CallExpression	SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_V9A )		3311620	0					
ANR	3311681	Callee	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311682	Identifier	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311683	ArgumentList	SPARC_OPCODE_ARCH_V9A		3311620	1					
ANR	3311684	Argument	SPARC_OPCODE_ARCH_V9A		3311620	0					
ANR	3311685	Identifier	SPARC_OPCODE_ARCH_V9A		3311620	0					
ANR	3311686	Label	case bfd_mach_sparc_v8plusb :	252:4:8065:8093	3311620	14	True				
ANR	3311687	Identifier	bfd_mach_sparc_v8plusb		3311620	0					
ANR	3311688	Label	case bfd_mach_sparc_v9b :	253:4:8099:8123	3311620	15	True				
ANR	3311689	Identifier	bfd_mach_sparc_v9b		3311620	0					
ANR	3311690	ReturnStatement	return SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_V9B ) ;	254:6:8131:8184	3311620	16	True				
ANR	3311691	CallExpression	SPARC_OPCODE_ARCH_MASK ( SPARC_OPCODE_ARCH_V9B )		3311620	0					
ANR	3311692	Callee	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311693	Identifier	SPARC_OPCODE_ARCH_MASK		3311620	0					
ANR	3311694	ArgumentList	SPARC_OPCODE_ARCH_V9B		3311620	1					
ANR	3311695	Argument	SPARC_OPCODE_ARCH_V9B		3311620	0					
ANR	3311696	Identifier	SPARC_OPCODE_ARCH_V9B		3311620	0					
ANR	3311697	ExpressionStatement	abort ( )	256:2:8194:8202	3311620	1	True				
ANR	3311698	CallExpression	abort ( )		3311620	0					
ANR	3311699	Callee	abort		3311620	0					
ANR	3311700	Identifier	abort		3311620	0					
ANR	3311701	ArgumentList			3311620	1					
ANR	3311702	ReturnType	static int		3311620	1					
ANR	3311703	Identifier	compute_arch_mask		3311620	2					
ANR	3311704	ParameterList	unsigned long mach		3311620	3					
ANR	3311705	Parameter	unsigned long mach	230:19:7184:7201	3311620	0	True				
ANR	3311706	ParameterType	unsigned long		3311620	0					
ANR	3311707	Identifier	mach		3311620	1					
ANR	3311708	CFGEntryNode	ENTRY		3311620		True				
ANR	3311709	CFGExitNode	EXIT		3311620		True				
ANR	3311710	Symbol	SPARC_OPCODE_ARCH_SPARCLET		3311620						
ANR	3311711	Symbol	SPARC_OPCODE_ARCH_MASK		3311620						
ANR	3311712	Symbol	SPARC_OPCODE_ARCH_V9		3311620						
ANR	3311713	Symbol	SPARC_OPCODE_ARCH_V8		3311620						
ANR	3311714	Symbol	mach		3311620						
ANR	3311715	Symbol	SPARC_OPCODE_ARCH_V9B		3311620						
ANR	3311716	Symbol	SPARC_OPCODE_ARCH_SPARCLITE		3311620						
ANR	3311717	Symbol	SPARC_OPCODE_ARCH_V9A		3311620						
ANR	3311718	Function	compare_opcodes	261:0:8240:12475							
ANR	3311719	FunctionDef	"compare_opcodes (const void * a , const void * b)"		3311718	0					
ANR	3311720	CompoundStatement		263:0:8300:12475	3311718	0					
ANR	3311721	IdentifierDeclStatement	sparc_opcode * op0 = * ( sparc_opcode * * ) a ;	264:2:8304:8345	3311718	0	True				
ANR	3311722	IdentifierDecl	* op0 = * ( sparc_opcode * * ) a		3311718	0					
ANR	3311723	IdentifierDeclType	sparc_opcode *		3311718	0					
ANR	3311724	Identifier	op0		3311718	1					
ANR	3311725	AssignmentExpression	* op0 = * ( sparc_opcode * * ) a		3311718	2		=			
ANR	3311726	Identifier	op0		3311718	0					
ANR	3311727	UnaryOperationExpression	* ( sparc_opcode * * ) a		3311718	1					
ANR	3311728	UnaryOperator	*		3311718	0					
ANR	3311729	CastExpression	( sparc_opcode * * ) a		3311718	1					
ANR	3311730	CastTarget	sparc_opcode * *		3311718	0					
ANR	3311731	Identifier	a		3311718	1					
ANR	3311732	IdentifierDeclStatement	sparc_opcode * op1 = * ( sparc_opcode * * ) b ;	265:2:8349:8390	3311718	1	True				
ANR	3311733	IdentifierDecl	* op1 = * ( sparc_opcode * * ) b		3311718	0					
ANR	3311734	IdentifierDeclType	sparc_opcode *		3311718	0					
ANR	3311735	Identifier	op1		3311718	1					
ANR	3311736	AssignmentExpression	* op1 = * ( sparc_opcode * * ) b		3311718	2		=			
ANR	3311737	Identifier	op1		3311718	0					
ANR	3311738	UnaryOperationExpression	* ( sparc_opcode * * ) b		3311718	1					
ANR	3311739	UnaryOperator	*		3311718	0					
ANR	3311740	CastExpression	( sparc_opcode * * ) b		3311718	1					
ANR	3311741	CastTarget	sparc_opcode * *		3311718	0					
ANR	3311742	Identifier	b		3311718	1					
ANR	3311743	IdentifierDeclStatement	"unsigned long int match0 = op0 -> match , match1 = op1 -> match ;"	266:2:8394:8452	3311718	2	True				
ANR	3311744	IdentifierDecl	match0 = op0 -> match		3311718	0					
ANR	3311745	IdentifierDeclType	unsigned long int		3311718	0					
ANR	3311746	Identifier	match0		3311718	1					
ANR	3311747	AssignmentExpression	match0 = op0 -> match		3311718	2		=			
ANR	3311748	Identifier	match0		3311718	0					
ANR	3311749	PtrMemberAccess	op0 -> match		3311718	1					
ANR	3311750	Identifier	op0		3311718	0					
ANR	3311751	Identifier	match		3311718	1					
ANR	3311752	IdentifierDecl	match1 = op1 -> match		3311718	1					
ANR	3311753	IdentifierDeclType	unsigned long int		3311718	0					
ANR	3311754	Identifier	match1		3311718	1					
ANR	3311755	AssignmentExpression	match1 = op1 -> match		3311718	2		=			
ANR	3311756	Identifier	match1		3311718	0					
ANR	3311757	PtrMemberAccess	op1 -> match		3311718	1					
ANR	3311758	Identifier	op1		3311718	0					
ANR	3311759	Identifier	match		3311718	1					
ANR	3311760	IdentifierDeclStatement	"unsigned long int lose0 = op0 -> lose , lose1 = op1 -> lose ;"	267:2:8456:8510	3311718	3	True				
ANR	3311761	IdentifierDecl	lose0 = op0 -> lose		3311718	0					
ANR	3311762	IdentifierDeclType	unsigned long int		3311718	0					
ANR	3311763	Identifier	lose0		3311718	1					
ANR	3311764	AssignmentExpression	lose0 = op0 -> lose		3311718	2		=			
ANR	3311765	Identifier	lose0		3311718	0					
ANR	3311766	PtrMemberAccess	op0 -> lose		3311718	1					
ANR	3311767	Identifier	op0		3311718	0					
ANR	3311768	Identifier	lose		3311718	1					
ANR	3311769	IdentifierDecl	lose1 = op1 -> lose		3311718	1					
ANR	3311770	IdentifierDeclType	unsigned long int		3311718	0					
ANR	3311771	Identifier	lose1		3311718	1					
ANR	3311772	AssignmentExpression	lose1 = op1 -> lose		3311718	2		=			
ANR	3311773	Identifier	lose1		3311718	0					
ANR	3311774	PtrMemberAccess	op1 -> lose		3311718	1					
ANR	3311775	Identifier	op1		3311718	0					
ANR	3311776	Identifier	lose		3311718	1					
ANR	3311777	Statement	register	268:2:8514:8521	3311718	4	True				
ANR	3311778	IdentifierDeclStatement	unsigned int i ;	268:11:8523:8537	3311718	5	True				
ANR	3311779	IdentifierDecl	i		3311718	0					
ANR	3311780	IdentifierDeclType	unsigned int		3311718	0					
ANR	3311781	Identifier	i		3311718	1					
ANR	3311782	IfStatement	if ( op0 -> architecture & current_arch_mask )		3311718	6					
ANR	3311783	Condition	op0 -> architecture & current_arch_mask	275:6:8891:8927	3311718	0	True				
ANR	3311784	BitAndExpression	op0 -> architecture & current_arch_mask		3311718	0		&			
ANR	3311785	PtrMemberAccess	op0 -> architecture		3311718	0					
ANR	3311786	Identifier	op0		3311718	0					
ANR	3311787	Identifier	architecture		3311718	1					
ANR	3311788	Identifier	current_arch_mask		3311718	1					
ANR	3311789	CompoundStatement		14:4:633:633	3311718	1					
ANR	3311790	IfStatement	if ( ! ( op1 -> architecture & current_arch_mask ) )		3311718	0					
ANR	3311791	Condition	! ( op1 -> architecture & current_arch_mask )	277:7:8943:8982	3311718	0	True				
ANR	3311792	UnaryOperationExpression	! ( op1 -> architecture & current_arch_mask )		3311718	0					
ANR	3311793	UnaryOperator	!		3311718	0					
ANR	3311794	BitAndExpression	op1 -> architecture & current_arch_mask		3311718	1		&			
ANR	3311795	PtrMemberAccess	op1 -> architecture		3311718	0					
ANR	3311796	Identifier	op1		3311718	0					
ANR	3311797	Identifier	architecture		3311718	1					
ANR	3311798	Identifier	current_arch_mask		3311718	1					
ANR	3311799	CompoundStatement		15:49:684:684	3311718	1					
ANR	3311800	ReturnStatement	return - 1 ;	278:4:8991:9000	3311718	0	True				
ANR	3311801	UnaryOperationExpression	- 1		3311718	0					
ANR	3311802	UnaryOperator	-		3311718	0					
ANR	3311803	PrimaryExpression	1		3311718	1					
ANR	3311804	ElseStatement	else		3311718	0					
ANR	3311805	CompoundStatement		20:4:723:723	3311718	0					
ANR	3311806	IfStatement	if ( op1 -> architecture & current_arch_mask )		3311718	0					
ANR	3311807	Condition	op1 -> architecture & current_arch_mask	283:9:9035:9071	3311718	0	True				
ANR	3311808	BitAndExpression	op1 -> architecture & current_arch_mask		3311718	0		&			
ANR	3311809	PtrMemberAccess	op1 -> architecture		3311718	0					
ANR	3311810	Identifier	op1		3311718	0					
ANR	3311811	Identifier	architecture		3311718	1					
ANR	3311812	Identifier	current_arch_mask		3311718	1					
ANR	3311813	CompoundStatement		21:48:773:773	3311718	1					
ANR	3311814	ReturnStatement	return 1 ;	284:6:9082:9090	3311718	0	True				
ANR	3311815	PrimaryExpression	1		3311718	0					
ANR	3311816	ElseStatement	else		3311718	0					
ANR	3311817	IfStatement	if ( op0 -> architecture != op1 -> architecture )		3311718	0					
ANR	3311818	Condition	op0 -> architecture != op1 -> architecture	285:16:9108:9145	3311718	0	True				
ANR	3311819	EqualityExpression	op0 -> architecture != op1 -> architecture		3311718	0		!=			
ANR	3311820	PtrMemberAccess	op0 -> architecture		3311718	0					
ANR	3311821	Identifier	op0		3311718	0					
ANR	3311822	Identifier	architecture		3311718	1					
ANR	3311823	PtrMemberAccess	op1 -> architecture		3311718	1					
ANR	3311824	Identifier	op1		3311718	0					
ANR	3311825	Identifier	architecture		3311718	1					
ANR	3311826	CompoundStatement		23:56:847:847	3311718	1					
ANR	3311827	ReturnStatement	return op0 -> architecture - op1 -> architecture ;	286:6:9156:9200	3311718	0	True				
ANR	3311828	AdditiveExpression	op0 -> architecture - op1 -> architecture		3311718	0		-			
ANR	3311829	PtrMemberAccess	op0 -> architecture		3311718	0					
ANR	3311830	Identifier	op0		3311718	0					
ANR	3311831	Identifier	architecture		3311718	1					
ANR	3311832	PtrMemberAccess	op1 -> architecture		3311718	1					
ANR	3311833	Identifier	op1		3311718	0					
ANR	3311834	Identifier	architecture		3311718	1					
ANR	3311835	IfStatement	if ( match0 & lose0 )		3311718	7					
ANR	3311836	Condition	match0 & lose0	292:6:9324:9337	3311718	0	True				
ANR	3311837	BitAndExpression	match0 & lose0		3311718	0		&			
ANR	3311838	Identifier	match0		3311718	0					
ANR	3311839	Identifier	lose0		3311718	1					
ANR	3311840	CompoundStatement		31:4:1043:1043	3311718	1					
ANR	3311841	ExpressionStatement	"fprintf ( stderr , _ ( ""Internal error:  bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"" ) , op0 -> name , match0 , lose0 )"	294:6:9352:9493	3311718	0	True				
ANR	3311842	CallExpression	"fprintf ( stderr , _ ( ""Internal error:  bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"" ) , op0 -> name , match0 , lose0 )"		3311718	0					
ANR	3311843	Callee	fprintf		3311718	0					
ANR	3311844	Identifier	fprintf		3311718	0					
ANR	3311845	ArgumentList	stderr		3311718	1					
ANR	3311846	Argument	stderr		3311718	0					
ANR	3311847	Identifier	stderr		3311718	0					
ANR	3311848	Argument	"_ ( ""Internal error:  bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"" )"		3311718	1					
ANR	3311849	CallExpression	"_ ( ""Internal error:  bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"" )"		3311718	0					
ANR	3311850	Callee	_		3311718	0					
ANR	3311851	Identifier	_		3311718	0					
ANR	3311852	ArgumentList	"""Internal error:  bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"""		3311718	1					
ANR	3311853	Argument	"""Internal error:  bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"""		3311718	0					
ANR	3311854	PrimaryExpression	"""Internal error:  bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"""		3311718	0					
ANR	3311855	Argument	op0 -> name		3311718	2					
ANR	3311856	PtrMemberAccess	op0 -> name		3311718	0					
ANR	3311857	Identifier	op0		3311718	0					
ANR	3311858	Identifier	name		3311718	1					
ANR	3311859	Argument	match0		3311718	3					
ANR	3311860	Identifier	match0		3311718	0					
ANR	3311861	Argument	lose0		3311718	4					
ANR	3311862	Identifier	lose0		3311718	0					
ANR	3311863	ExpressionStatement	op0 -> lose &= ~op0 -> match	299:6:9501:9525	3311718	1	True				
ANR	3311864	AssignmentExpression	op0 -> lose &= ~op0 -> match		3311718	0		&=			
ANR	3311865	PtrMemberAccess	op0 -> lose		3311718	0					
ANR	3311866	Identifier	op0		3311718	0					
ANR	3311867	Identifier	lose		3311718	1					
ANR	3311868	PtrMemberAccess	~op0 -> match		3311718	1					
ANR	3311869	Identifier	~op0		3311718	0					
ANR	3311870	Identifier	match		3311718	1					
ANR	3311871	ExpressionStatement	lose0 = op0 -> lose	300:6:9533:9550	3311718	2	True				
ANR	3311872	AssignmentExpression	lose0 = op0 -> lose		3311718	0		=			
ANR	3311873	Identifier	lose0		3311718	0					
ANR	3311874	PtrMemberAccess	op0 -> lose		3311718	1					
ANR	3311875	Identifier	op0		3311718	0					
ANR	3311876	Identifier	lose		3311718	1					
ANR	3311877	IfStatement	if ( match1 & lose1 )		3311718	8					
ANR	3311878	Condition	match1 & lose1	303:6:9565:9578	3311718	0	True				
ANR	3311879	BitAndExpression	match1 & lose1		3311718	0		&			
ANR	3311880	Identifier	match1		3311718	0					
ANR	3311881	Identifier	lose1		3311718	1					
ANR	3311882	CompoundStatement		42:4:1284:1284	3311718	1					
ANR	3311883	ExpressionStatement	"fprintf ( stderr , _ ( ""Internal error: bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"" ) , op1 -> name , match1 , lose1 )"	305:6:9593:9733	3311718	0	True				
ANR	3311884	CallExpression	"fprintf ( stderr , _ ( ""Internal error: bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"" ) , op1 -> name , match1 , lose1 )"		3311718	0					
ANR	3311885	Callee	fprintf		3311718	0					
ANR	3311886	Identifier	fprintf		3311718	0					
ANR	3311887	ArgumentList	stderr		3311718	1					
ANR	3311888	Argument	stderr		3311718	0					
ANR	3311889	Identifier	stderr		3311718	0					
ANR	3311890	Argument	"_ ( ""Internal error: bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"" )"		3311718	1					
ANR	3311891	CallExpression	"_ ( ""Internal error: bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"" )"		3311718	0					
ANR	3311892	Callee	_		3311718	0					
ANR	3311893	Identifier	_		3311718	0					
ANR	3311894	ArgumentList	"""Internal error: bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"""		3311718	1					
ANR	3311895	Argument	"""Internal error: bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"""		3311718	0					
ANR	3311896	PrimaryExpression	"""Internal error: bad sparc-opcode.h: \\""%s\\"", %#.8lx, %#.8lx\\n"""		3311718	0					
ANR	3311897	Argument	op1 -> name		3311718	2					
ANR	3311898	PtrMemberAccess	op1 -> name		3311718	0					
ANR	3311899	Identifier	op1		3311718	0					
ANR	3311900	Identifier	name		3311718	1					
ANR	3311901	Argument	match1		3311718	3					
ANR	3311902	Identifier	match1		3311718	0					
ANR	3311903	Argument	lose1		3311718	4					
ANR	3311904	Identifier	lose1		3311718	0					
ANR	3311905	ExpressionStatement	op1 -> lose &= ~op1 -> match	310:6:9741:9765	3311718	1	True				
ANR	3311906	AssignmentExpression	op1 -> lose &= ~op1 -> match		3311718	0		&=			
ANR	3311907	PtrMemberAccess	op1 -> lose		3311718	0					
ANR	3311908	Identifier	op1		3311718	0					
ANR	3311909	Identifier	lose		3311718	1					
ANR	3311910	PtrMemberAccess	~op1 -> match		3311718	1					
ANR	3311911	Identifier	~op1		3311718	0					
ANR	3311912	Identifier	match		3311718	1					
ANR	3311913	ExpressionStatement	lose1 = op1 -> lose	311:6:9773:9790	3311718	2	True				
ANR	3311914	AssignmentExpression	lose1 = op1 -> lose		3311718	0		=			
ANR	3311915	Identifier	lose1		3311718	0					
ANR	3311916	PtrMemberAccess	op1 -> lose		3311718	1					
ANR	3311917	Identifier	op1		3311718	0					
ANR	3311918	Identifier	lose		3311718	1					
ANR	3311919	ForStatement	for ( i = 0 ; i < 32 ; ++ i )		3311718	9					
ANR	3311920	ForInit	i = 0 ;	316:7:9951:9956	3311718	0	True				
ANR	3311921	AssignmentExpression	i = 0		3311718	0		=			
ANR	3311922	Identifier	i		3311718	0					
ANR	3311923	PrimaryExpression	0		3311718	1					
ANR	3311924	Condition	i < 32	316:14:9958:9963	3311718	1	True				
ANR	3311925	RelationalExpression	i < 32		3311718	0		<			
ANR	3311926	Identifier	i		3311718	0					
ANR	3311927	PrimaryExpression	32		3311718	1					
ANR	3311928	UnaryExpression	++ i	316:22:9966:9968	3311718	2	True				
ANR	3311929	IncDec	++		3311718	0					
ANR	3311930	Identifier	i		3311718	1					
ANR	3311931	CompoundStatement		58:6:1752:1778	3311718	3					
ANR	3311932	IdentifierDeclStatement	unsigned long int x = 1 << i ;	318:6:9983:10011	3311718	0	True				
ANR	3311933	IdentifierDecl	x = 1 << i		3311718	0					
ANR	3311934	IdentifierDeclType	unsigned long int		3311718	0					
ANR	3311935	Identifier	x		3311718	1					
ANR	3311936	AssignmentExpression	x = 1 << i		3311718	2		=			
ANR	3311937	Identifier	x		3311718	0					
ANR	3311938	ShiftExpression	1 << i		3311718	1		<<			
ANR	3311939	PrimaryExpression	1		3311718	0					
ANR	3311940	Identifier	i		3311718	1					
ANR	3311941	IdentifierDeclStatement	int x0 = ( match0 & x ) != 0 ;	319:6:10019:10045	3311718	1	True				
ANR	3311942	IdentifierDecl	x0 = ( match0 & x ) != 0		3311718	0					
ANR	3311943	IdentifierDeclType	int		3311718	0					
ANR	3311944	Identifier	x0		3311718	1					
ANR	3311945	AssignmentExpression	x0 = ( match0 & x ) != 0		3311718	2		=			
ANR	3311946	Identifier	x0		3311718	0					
ANR	3311947	EqualityExpression	( match0 & x ) != 0		3311718	1		!=			
ANR	3311948	BitAndExpression	match0 & x		3311718	0		&			
ANR	3311949	Identifier	match0		3311718	0					
ANR	3311950	Identifier	x		3311718	1					
ANR	3311951	PrimaryExpression	0		3311718	1					
ANR	3311952	IdentifierDeclStatement	int x1 = ( match1 & x ) != 0 ;	320:6:10053:10079	3311718	2	True				
ANR	3311953	IdentifierDecl	x1 = ( match1 & x ) != 0		3311718	0					
ANR	3311954	IdentifierDeclType	int		3311718	0					
ANR	3311955	Identifier	x1		3311718	1					
ANR	3311956	AssignmentExpression	x1 = ( match1 & x ) != 0		3311718	2		=			
ANR	3311957	Identifier	x1		3311718	0					
ANR	3311958	EqualityExpression	( match1 & x ) != 0		3311718	1		!=			
ANR	3311959	BitAndExpression	match1 & x		3311718	0		&			
ANR	3311960	Identifier	match1		3311718	0					
ANR	3311961	Identifier	x		3311718	1					
ANR	3311962	PrimaryExpression	0		3311718	1					
ANR	3311963	IfStatement	if ( x0 != x1 )		3311718	3					
ANR	3311964	Condition	x0 != x1	322:10:10092:10099	3311718	0	True				
ANR	3311965	EqualityExpression	x0 != x1		3311718	0		!=			
ANR	3311966	Identifier	x0		3311718	0					
ANR	3311967	Identifier	x1		3311718	1					
ANR	3311968	CompoundStatement		60:20:1801:1801	3311718	1					
ANR	3311969	ReturnStatement	return x1 - x0 ;	323:7:10111:10125	3311718	0	True				
ANR	3311970	AdditiveExpression	x1 - x0		3311718	0		-			
ANR	3311971	Identifier	x1		3311718	0					
ANR	3311972	Identifier	x0		3311718	1					
ANR	3311973	ForStatement	for ( i = 0 ; i < 32 ; ++ i )		3311718	10					
ANR	3311974	ForInit	i = 0 ;	327:7:10149:10154	3311718	0	True				
ANR	3311975	AssignmentExpression	i = 0		3311718	0		=			
ANR	3311976	Identifier	i		3311718	0					
ANR	3311977	PrimaryExpression	0		3311718	1					
ANR	3311978	Condition	i < 32	327:14:10156:10161	3311718	1	True				
ANR	3311979	RelationalExpression	i < 32		3311718	0		<			
ANR	3311980	Identifier	i		3311718	0					
ANR	3311981	PrimaryExpression	32		3311718	1					
ANR	3311982	UnaryExpression	++ i	327:22:10164:10166	3311718	2	True				
ANR	3311983	IncDec	++		3311718	0					
ANR	3311984	Identifier	i		3311718	1					
ANR	3311985	CompoundStatement		69:6:1949:1974	3311718	3					
ANR	3311986	IdentifierDeclStatement	unsigned long int x = 1 << i ;	329:6:10181:10209	3311718	0	True				
ANR	3311987	IdentifierDecl	x = 1 << i		3311718	0					
ANR	3311988	IdentifierDeclType	unsigned long int		3311718	0					
ANR	3311989	Identifier	x		3311718	1					
ANR	3311990	AssignmentExpression	x = 1 << i		3311718	2		=			
ANR	3311991	Identifier	x		3311718	0					
ANR	3311992	ShiftExpression	1 << i		3311718	1		<<			
ANR	3311993	PrimaryExpression	1		3311718	0					
ANR	3311994	Identifier	i		3311718	1					
ANR	3311995	IdentifierDeclStatement	int x0 = ( lose0 & x ) != 0 ;	330:6:10217:10242	3311718	1	True				
ANR	3311996	IdentifierDecl	x0 = ( lose0 & x ) != 0		3311718	0					
ANR	3311997	IdentifierDeclType	int		3311718	0					
ANR	3311998	Identifier	x0		3311718	1					
ANR	3311999	AssignmentExpression	x0 = ( lose0 & x ) != 0		3311718	2		=			
ANR	3312000	Identifier	x0		3311718	0					
ANR	3312001	EqualityExpression	( lose0 & x ) != 0		3311718	1		!=			
ANR	3312002	BitAndExpression	lose0 & x		3311718	0		&			
ANR	3312003	Identifier	lose0		3311718	0					
ANR	3312004	Identifier	x		3311718	1					
ANR	3312005	PrimaryExpression	0		3311718	1					
ANR	3312006	IdentifierDeclStatement	int x1 = ( lose1 & x ) != 0 ;	331:6:10250:10275	3311718	2	True				
ANR	3312007	IdentifierDecl	x1 = ( lose1 & x ) != 0		3311718	0					
ANR	3312008	IdentifierDeclType	int		3311718	0					
ANR	3312009	Identifier	x1		3311718	1					
ANR	3312010	AssignmentExpression	x1 = ( lose1 & x ) != 0		3311718	2		=			
ANR	3312011	Identifier	x1		3311718	0					
ANR	3312012	EqualityExpression	( lose1 & x ) != 0		3311718	1		!=			
ANR	3312013	BitAndExpression	lose1 & x		3311718	0		&			
ANR	3312014	Identifier	lose1		3311718	0					
ANR	3312015	Identifier	x		3311718	1					
ANR	3312016	PrimaryExpression	0		3311718	1					
ANR	3312017	IfStatement	if ( x0 != x1 )		3311718	3					
ANR	3312018	Condition	x0 != x1	333:10:10288:10295	3311718	0	True				
ANR	3312019	EqualityExpression	x0 != x1		3311718	0		!=			
ANR	3312020	Identifier	x0		3311718	0					
ANR	3312021	Identifier	x1		3311718	1					
ANR	3312022	CompoundStatement		71:20:1997:1997	3311718	1					
ANR	3312023	ReturnStatement	return x1 - x0 ;	334:7:10307:10321	3311718	0	True				
ANR	3312024	AdditiveExpression	x1 - x0		3311718	0		-			
ANR	3312025	Identifier	x1		3311718	0					
ANR	3312026	Identifier	x0		3311718	1					
ANR	3312027	CompoundStatement		81:4:2266:2330	3311718	11					
ANR	3312028	IdentifierDeclStatement	int alias_diff = ( op0 -> flags & F_ALIAS ) - ( op1 -> flags & F_ALIAS ) ;	343:4:10567:10631	3311718	0	True				
ANR	3312029	IdentifierDecl	alias_diff = ( op0 -> flags & F_ALIAS ) - ( op1 -> flags & F_ALIAS )		3311718	0					
ANR	3312030	IdentifierDeclType	int		3311718	0					
ANR	3312031	Identifier	alias_diff		3311718	1					
ANR	3312032	AssignmentExpression	alias_diff = ( op0 -> flags & F_ALIAS ) - ( op1 -> flags & F_ALIAS )		3311718	2		=			
ANR	3312033	Identifier	alias_diff		3311718	0					
ANR	3312034	AdditiveExpression	( op0 -> flags & F_ALIAS ) - ( op1 -> flags & F_ALIAS )		3311718	1		-			
ANR	3312035	BitAndExpression	op0 -> flags & F_ALIAS		3311718	0		&			
ANR	3312036	PtrMemberAccess	op0 -> flags		3311718	0					
ANR	3312037	Identifier	op0		3311718	0					
ANR	3312038	Identifier	flags		3311718	1					
ANR	3312039	Identifier	F_ALIAS		3311718	1					
ANR	3312040	BitAndExpression	op1 -> flags & F_ALIAS		3311718	1		&			
ANR	3312041	PtrMemberAccess	op1 -> flags		3311718	0					
ANR	3312042	Identifier	op1		3311718	0					
ANR	3312043	Identifier	flags		3311718	1					
ANR	3312044	Identifier	F_ALIAS		3311718	1					
ANR	3312045	IfStatement	if ( alias_diff != 0 )		3311718	1					
ANR	3312046	Condition	alias_diff != 0	345:8:10642:10656	3311718	0	True				
ANR	3312047	EqualityExpression	alias_diff != 0		3311718	0		!=			
ANR	3312048	Identifier	alias_diff		3311718	0					
ANR	3312049	PrimaryExpression	0		3311718	1					
ANR	3312050	CompoundStatement		83:25:2358:2358	3311718	1					
ANR	3312051	ReturnStatement	return alias_diff ;	347:5:10717:10734	3311718	0	True				
ANR	3312052	Identifier	alias_diff		3311718	0					
ANR	3312053	ExpressionStatement	"i = strcmp ( op0 -> name , op1 -> name )"	353:2:10883:10916	3311718	12	True				
ANR	3312054	AssignmentExpression	"i = strcmp ( op0 -> name , op1 -> name )"		3311718	0		=			
ANR	3312055	Identifier	i		3311718	0					
ANR	3312056	CallExpression	"strcmp ( op0 -> name , op1 -> name )"		3311718	1					
ANR	3312057	Callee	strcmp		3311718	0					
ANR	3312058	Identifier	strcmp		3311718	0					
ANR	3312059	ArgumentList	op0 -> name		3311718	1					
ANR	3312060	Argument	op0 -> name		3311718	0					
ANR	3312061	PtrMemberAccess	op0 -> name		3311718	0					
ANR	3312062	Identifier	op0		3311718	0					
ANR	3312063	Identifier	name		3311718	1					
ANR	3312064	Argument	op1 -> name		3311718	1					
ANR	3312065	PtrMemberAccess	op1 -> name		3311718	0					
ANR	3312066	Identifier	op1		3311718	0					
ANR	3312067	Identifier	name		3311718	1					
ANR	3312068	IfStatement	if ( i )		3311718	13					
ANR	3312069	Condition	i	354:6:10924:10924	3311718	0	True				
ANR	3312070	Identifier	i		3311718	0					
ANR	3312071	CompoundStatement		93:4:2630:2630	3311718	1					
ANR	3312072	IfStatement	if ( op0 -> flags & F_ALIAS )		3311718	0					
ANR	3312073	Condition	op0 -> flags & F_ALIAS	356:7:10940:10959	3311718	0	True				
ANR	3312074	BitAndExpression	op0 -> flags & F_ALIAS		3311718	0		&			
ANR	3312075	PtrMemberAccess	op0 -> flags		3311718	0					
ANR	3312076	Identifier	op0		3311718	0					
ANR	3312077	Identifier	flags		3311718	1					
ANR	3312078	Identifier	F_ALIAS		3311718	1					
ANR	3312079	CompoundStatement		94:29:2661:2661	3311718	1					
ANR	3312080	ReturnStatement	return i ;	357:4:11014:11022	3311718	0	True				
ANR	3312081	Identifier	i		3311718	0					
ANR	3312082	ElseStatement	else		3311718	0					
ANR	3312083	CompoundStatement		96:10:2733:2733	3311718	0					
ANR	3312084	ExpressionStatement	"fprintf ( stderr , _ ( ""Internal error: bad sparc-opcode.h: \\""%s\\"" == \\""%s\\""\\n"" ) , op0 -> name , op1 -> name )"	359:4:11040:11179	3311718	0	True				
ANR	3312085	CallExpression	"fprintf ( stderr , _ ( ""Internal error: bad sparc-opcode.h: \\""%s\\"" == \\""%s\\""\\n"" ) , op0 -> name , op1 -> name )"		3311718	0					
ANR	3312086	Callee	fprintf		3311718	0					
ANR	3312087	Identifier	fprintf		3311718	0					
ANR	3312088	ArgumentList	stderr		3311718	1					
ANR	3312089	Argument	stderr		3311718	0					
ANR	3312090	Identifier	stderr		3311718	0					
ANR	3312091	Argument	"_ ( ""Internal error: bad sparc-opcode.h: \\""%s\\"" == \\""%s\\""\\n"" )"		3311718	1					
ANR	3312092	CallExpression	"_ ( ""Internal error: bad sparc-opcode.h: \\""%s\\"" == \\""%s\\""\\n"" )"		3311718	0					
ANR	3312093	Callee	_		3311718	0					
ANR	3312094	Identifier	_		3311718	0					
ANR	3312095	ArgumentList	"""Internal error: bad sparc-opcode.h: \\""%s\\"" == \\""%s\\""\\n"""		3311718	1					
ANR	3312096	Argument	"""Internal error: bad sparc-opcode.h: \\""%s\\"" == \\""%s\\""\\n"""		3311718	0					
ANR	3312097	PrimaryExpression	"""Internal error: bad sparc-opcode.h: \\""%s\\"" == \\""%s\\""\\n"""		3311718	0					
ANR	3312098	Argument	op0 -> name		3311718	2					
ANR	3312099	PtrMemberAccess	op0 -> name		3311718	0					
ANR	3312100	Identifier	op0		3311718	0					
ANR	3312101	Identifier	name		3311718	1					
ANR	3312102	Argument	op1 -> name		3311718	3					
ANR	3312103	PtrMemberAccess	op1 -> name		3311718	0					
ANR	3312104	Identifier	op1		3311718	0					
ANR	3312105	Identifier	name		3311718	1					
ANR	3312106	CompoundStatement		106:4:2940:2997	3311718	14					
ANR	3312107	IdentifierDeclStatement	int length_diff = strlen ( op0 -> args ) - strlen ( op1 -> args ) ;	368:4:11241:11298	3311718	0	True				
ANR	3312108	IdentifierDecl	length_diff = strlen ( op0 -> args ) - strlen ( op1 -> args )		3311718	0					
ANR	3312109	IdentifierDeclType	int		3311718	0					
ANR	3312110	Identifier	length_diff		3311718	1					
ANR	3312111	AssignmentExpression	length_diff = strlen ( op0 -> args ) - strlen ( op1 -> args )		3311718	2		=			
ANR	3312112	Identifier	length_diff		3311718	0					
ANR	3312113	AdditiveExpression	strlen ( op0 -> args ) - strlen ( op1 -> args )		3311718	1		-			
ANR	3312114	CallExpression	strlen ( op0 -> args )		3311718	0					
ANR	3312115	Callee	strlen		3311718	0					
ANR	3312116	Identifier	strlen		3311718	0					
ANR	3312117	ArgumentList	op0 -> args		3311718	1					
ANR	3312118	Argument	op0 -> args		3311718	0					
ANR	3312119	PtrMemberAccess	op0 -> args		3311718	0					
ANR	3312120	Identifier	op0		3311718	0					
ANR	3312121	Identifier	args		3311718	1					
ANR	3312122	CallExpression	strlen ( op1 -> args )		3311718	1					
ANR	3312123	Callee	strlen		3311718	0					
ANR	3312124	Identifier	strlen		3311718	0					
ANR	3312125	ArgumentList	op1 -> args		3311718	1					
ANR	3312126	Argument	op1 -> args		3311718	0					
ANR	3312127	PtrMemberAccess	op1 -> args		3311718	0					
ANR	3312128	Identifier	op1		3311718	0					
ANR	3312129	Identifier	args		3311718	1					
ANR	3312130	IfStatement	if ( length_diff != 0 )		3311718	1					
ANR	3312131	Condition	length_diff != 0	370:8:11309:11324	3311718	0	True				
ANR	3312132	EqualityExpression	length_diff != 0		3311718	0		!=			
ANR	3312133	Identifier	length_diff		3311718	0					
ANR	3312134	PrimaryExpression	0		3311718	1					
ANR	3312135	CompoundStatement		108:26:3026:3026	3311718	1					
ANR	3312136	ReturnStatement	return length_diff ;	372:5:11386:11404	3311718	0	True				
ANR	3312137	Identifier	length_diff		3311718	0					
ANR	3312138	CompoundStatement		117:4:3202:3245	3311718	15					
ANR	3312139	IdentifierDeclStatement	"char * p0 = ( char * ) strchr ( op0 -> args , '+' ) ;"	378:4:11454:11497	3311718	0	True				
ANR	3312140	IdentifierDecl	"* p0 = ( char * ) strchr ( op0 -> args , '+' )"		3311718	0					
ANR	3312141	IdentifierDeclType	char *		3311718	0					
ANR	3312142	Identifier	p0		3311718	1					
ANR	3312143	AssignmentExpression	"* p0 = ( char * ) strchr ( op0 -> args , '+' )"		3311718	2		=			
ANR	3312144	Identifier	p0		3311718	0					
ANR	3312145	CastExpression	"( char * ) strchr ( op0 -> args , '+' )"		3311718	1					
ANR	3312146	CastTarget	char *		3311718	0					
ANR	3312147	CallExpression	"strchr ( op0 -> args , '+' )"		3311718	1					
ANR	3312148	Callee	strchr		3311718	0					
ANR	3312149	Identifier	strchr		3311718	0					
ANR	3312150	ArgumentList	op0 -> args		3311718	1					
ANR	3312151	Argument	op0 -> args		3311718	0					
ANR	3312152	PtrMemberAccess	op0 -> args		3311718	0					
ANR	3312153	Identifier	op0		3311718	0					
ANR	3312154	Identifier	args		3311718	1					
ANR	3312155	Argument	'+'		3311718	1					
ANR	3312156	PrimaryExpression	'+'		3311718	0					
ANR	3312157	IdentifierDeclStatement	"char * p1 = ( char * ) strchr ( op1 -> args , '+' ) ;"	379:4:11503:11546	3311718	1	True				
ANR	3312158	IdentifierDecl	"* p1 = ( char * ) strchr ( op1 -> args , '+' )"		3311718	0					
ANR	3312159	IdentifierDeclType	char *		3311718	0					
ANR	3312160	Identifier	p1		3311718	1					
ANR	3312161	AssignmentExpression	"* p1 = ( char * ) strchr ( op1 -> args , '+' )"		3311718	2		=			
ANR	3312162	Identifier	p1		3311718	0					
ANR	3312163	CastExpression	"( char * ) strchr ( op1 -> args , '+' )"		3311718	1					
ANR	3312164	CastTarget	char *		3311718	0					
ANR	3312165	CallExpression	"strchr ( op1 -> args , '+' )"		3311718	1					
ANR	3312166	Callee	strchr		3311718	0					
ANR	3312167	Identifier	strchr		3311718	0					
ANR	3312168	ArgumentList	op1 -> args		3311718	1					
ANR	3312169	Argument	op1 -> args		3311718	0					
ANR	3312170	PtrMemberAccess	op1 -> args		3311718	0					
ANR	3312171	Identifier	op1		3311718	0					
ANR	3312172	Identifier	args		3311718	1					
ANR	3312173	Argument	'+'		3311718	1					
ANR	3312174	PrimaryExpression	'+'		3311718	0					
ANR	3312175	IfStatement	if ( p0 && p1 )		3311718	2					
ANR	3312176	Condition	p0 && p1	381:8:11557:11564	3311718	0	True				
ANR	3312177	AndExpression	p0 && p1		3311718	0		&&			
ANR	3312178	Identifier	p0		3311718	0					
ANR	3312179	Identifier	p1		3311718	1					
ANR	3312180	CompoundStatement		120:6:3272:3272	3311718	1					
ANR	3312181	IfStatement	if ( p0 [ - 1 ] == 'i' && p1 [ 1 ] == 'i' )		3311718	0					
ANR	3312182	Condition	p0 [ - 1 ] == 'i' && p1 [ 1 ] == 'i'	386:5:11727:11755	3311718	0	True				
ANR	3312183	AndExpression	p0 [ - 1 ] == 'i' && p1 [ 1 ] == 'i'		3311718	0		&&			
ANR	3312184	EqualityExpression	p0 [ - 1 ] == 'i'		3311718	0		==			
ANR	3312185	ArrayIndexing	p0 [ - 1 ]		3311718	0					
ANR	3312186	Identifier	p0		3311718	0					
ANR	3312187	UnaryOperationExpression	- 1		3311718	1					
ANR	3312188	UnaryOperator	-		3311718	0					
ANR	3312189	PrimaryExpression	1		3311718	1					
ANR	3312190	PrimaryExpression	'i'		3311718	1					
ANR	3312191	EqualityExpression	p1 [ 1 ] == 'i'		3311718	1		==			
ANR	3312192	ArrayIndexing	p1 [ 1 ]		3311718	0					
ANR	3312193	Identifier	p1		3311718	0					
ANR	3312194	PrimaryExpression	1		3311718	1					
ANR	3312195	PrimaryExpression	'i'		3311718	1					
ANR	3312196	CompoundStatement		124:36:3457:3457	3311718	1					
ANR	3312197	ReturnStatement	return 1 ;	388:2:11817:11825	3311718	0	True				
ANR	3312198	PrimaryExpression	1		3311718	0					
ANR	3312199	IfStatement	if ( p0 [ 1 ] == 'i' && p1 [ - 1 ] == 'i' )		3311718	1					
ANR	3312200	Condition	p0 [ 1 ] == 'i' && p1 [ - 1 ] == 'i'	390:5:11835:11863	3311718	0	True				
ANR	3312201	AndExpression	p0 [ 1 ] == 'i' && p1 [ - 1 ] == 'i'		3311718	0		&&			
ANR	3312202	EqualityExpression	p0 [ 1 ] == 'i'		3311718	0		==			
ANR	3312203	ArrayIndexing	p0 [ 1 ]		3311718	0					
ANR	3312204	Identifier	p0		3311718	0					
ANR	3312205	PrimaryExpression	1		3311718	1					
ANR	3312206	PrimaryExpression	'i'		3311718	1					
ANR	3312207	EqualityExpression	p1 [ - 1 ] == 'i'		3311718	1		==			
ANR	3312208	ArrayIndexing	p1 [ - 1 ]		3311718	0					
ANR	3312209	Identifier	p1		3311718	0					
ANR	3312210	UnaryOperationExpression	- 1		3311718	1					
ANR	3312211	UnaryOperator	-		3311718	0					
ANR	3312212	PrimaryExpression	1		3311718	1					
ANR	3312213	PrimaryExpression	'i'		3311718	1					
ANR	3312214	CompoundStatement		128:36:3565:3565	3311718	1					
ANR	3312215	ReturnStatement	return - 1 ;	392:2:11925:11934	3311718	0	True				
ANR	3312216	UnaryOperationExpression	- 1		3311718	0					
ANR	3312217	UnaryOperator	-		3311718	0					
ANR	3312218	PrimaryExpression	1		3311718	1					
ANR	3312219	CompoundStatement		138:4:3737:3780	3311718	16					
ANR	3312220	IdentifierDeclStatement	"int i0 = strncmp ( op0 -> args , ""i,1"" , 3 ) == 0 ;"	399:4:11989:12032	3311718	0	True				
ANR	3312221	IdentifierDecl	"i0 = strncmp ( op0 -> args , ""i,1"" , 3 ) == 0"		3311718	0					
ANR	3312222	IdentifierDeclType	int		3311718	0					
ANR	3312223	Identifier	i0		3311718	1					
ANR	3312224	AssignmentExpression	"i0 = strncmp ( op0 -> args , ""i,1"" , 3 ) == 0"		3311718	2		=			
ANR	3312225	Identifier	i0		3311718	0					
ANR	3312226	EqualityExpression	"strncmp ( op0 -> args , ""i,1"" , 3 ) == 0"		3311718	1		==			
ANR	3312227	CallExpression	"strncmp ( op0 -> args , ""i,1"" , 3 )"		3311718	0					
ANR	3312228	Callee	strncmp		3311718	0					
ANR	3312229	Identifier	strncmp		3311718	0					
ANR	3312230	ArgumentList	op0 -> args		3311718	1					
ANR	3312231	Argument	op0 -> args		3311718	0					
ANR	3312232	PtrMemberAccess	op0 -> args		3311718	0					
ANR	3312233	Identifier	op0		3311718	0					
ANR	3312234	Identifier	args		3311718	1					
ANR	3312235	Argument	"""i,1"""		3311718	1					
ANR	3312236	PrimaryExpression	"""i,1"""		3311718	0					
ANR	3312237	Argument	3		3311718	2					
ANR	3312238	PrimaryExpression	3		3311718	0					
ANR	3312239	PrimaryExpression	0		3311718	1					
ANR	3312240	IdentifierDeclStatement	"int i1 = strncmp ( op1 -> args , ""i,1"" , 3 ) == 0 ;"	400:4:12038:12081	3311718	1	True				
ANR	3312241	IdentifierDecl	"i1 = strncmp ( op1 -> args , ""i,1"" , 3 ) == 0"		3311718	0					
ANR	3312242	IdentifierDeclType	int		3311718	0					
ANR	3312243	Identifier	i1		3311718	1					
ANR	3312244	AssignmentExpression	"i1 = strncmp ( op1 -> args , ""i,1"" , 3 ) == 0"		3311718	2		=			
ANR	3312245	Identifier	i1		3311718	0					
ANR	3312246	EqualityExpression	"strncmp ( op1 -> args , ""i,1"" , 3 ) == 0"		3311718	1		==			
ANR	3312247	CallExpression	"strncmp ( op1 -> args , ""i,1"" , 3 )"		3311718	0					
ANR	3312248	Callee	strncmp		3311718	0					
ANR	3312249	Identifier	strncmp		3311718	0					
ANR	3312250	ArgumentList	op1 -> args		3311718	1					
ANR	3312251	Argument	op1 -> args		3311718	0					
ANR	3312252	PtrMemberAccess	op1 -> args		3311718	0					
ANR	3312253	Identifier	op1		3311718	0					
ANR	3312254	Identifier	args		3311718	1					
ANR	3312255	Argument	"""i,1"""		3311718	1					
ANR	3312256	PrimaryExpression	"""i,1"""		3311718	0					
ANR	3312257	Argument	3		3311718	2					
ANR	3312258	PrimaryExpression	3		3311718	0					
ANR	3312259	PrimaryExpression	0		3311718	1					
ANR	3312260	IfStatement	if ( i0 ^ i1 )		3311718	2					
ANR	3312261	Condition	i0 ^ i1	402:8:12092:12098	3311718	0	True				
ANR	3312262	ExclusiveOrExpression	i0 ^ i1		3311718	0		^			
ANR	3312263	Identifier	i0		3311718	0					
ANR	3312264	Identifier	i1		3311718	1					
ANR	3312265	CompoundStatement		140:17:3800:3800	3311718	1					
ANR	3312266	ReturnStatement	return i0 - i1 ;	403:5:12108:12122	3311718	0	True				
ANR	3312267	AdditiveExpression	i0 - i1		3311718	0		-			
ANR	3312268	Identifier	i0		3311718	0					
ANR	3312269	Identifier	i1		3311718	1					
ANR	3312270	ReturnStatement	return 0 ;	413:2:12465:12473	3311718	17	True				
ANR	3312271	PrimaryExpression	0		3311718	0					
ANR	3312272	ReturnType	static int		3311718	1					
ANR	3312273	Identifier	compare_opcodes		3311718	2					
ANR	3312274	ParameterList	"const void * a , const void * b"		3311718	3					
ANR	3312275	Parameter	const void * a	262:17:8268:8281	3311718	0	True				
ANR	3312276	ParameterType	const void *		3311718	0					
ANR	3312277	Identifier	a		3311718	1					
ANR	3312278	Parameter	const void * b	262:33:8284:8297	3311718	1	True				
ANR	3312279	ParameterType	const void *		3311718	0					
ANR	3312280	Identifier	b		3311718	1					
ANR	3312281	CFGEntryNode	ENTRY		3311718		True				
ANR	3312282	CFGExitNode	EXIT		3311718		True				
ANR	3312283	Symbol	match1		3311718						
ANR	3312284	Symbol	op1 -> args		3311718						
ANR	3312285	Symbol	match0		3311718						
ANR	3312286	Symbol	~op1		3311718						
ANR	3312287	Symbol	strchr		3311718						
ANR	3312288	Symbol	~op1 -> match		3311718						
ANR	3312289	Symbol	~op0		3311718						
ANR	3312290	Symbol	strlen		3311718						
ANR	3312291	Symbol	strncmp		3311718						
ANR	3312292	Symbol	length_diff		3311718						
ANR	3312293	Symbol	op1 -> match		3311718						
ANR	3312294	Symbol	* op0		3311718						
ANR	3312295	Symbol	* op1		3311718						
ANR	3312296	Symbol	lose1		3311718						
ANR	3312297	Symbol	op1 -> architecture		3311718						
ANR	3312298	Symbol	lose0		3311718						
ANR	3312299	Symbol	~op0 -> match		3311718						
ANR	3312300	Symbol	strcmp		3311718						
ANR	3312301	Symbol	* ( sparc_opcode * * ) a		3311718						
ANR	3312302	Symbol	* ( sparc_opcode * * ) b		3311718						
ANR	3312303	Symbol	stderr		3311718						
ANR	3312304	Symbol	op0 -> match		3311718						
ANR	3312305	Symbol	op1 -> name		3311718						
ANR	3312306	Symbol	op1 -> lose		3311718						
ANR	3312307	Symbol	current_arch_mask		3311718						
ANR	3312308	Symbol	x0		3311718						
ANR	3312309	Symbol	x1		3311718						
ANR	3312310	Symbol	F_ALIAS		3311718						
ANR	3312311	Symbol	op0 -> args		3311718						
ANR	3312312	Symbol	p0		3311718						
ANR	3312313	Symbol	* ~op1		3311718						
ANR	3312314	Symbol	p1		3311718						
ANR	3312315	Symbol	op0 -> flags		3311718						
ANR	3312316	Symbol	* ~op0		3311718						
ANR	3312317	Symbol	op0 -> architecture		3311718						
ANR	3312318	Symbol	_		3311718						
ANR	3312319	Symbol	a		3311718						
ANR	3312320	Symbol	b		3311718						
ANR	3312321	Symbol	* p1		3311718						
ANR	3312322	Symbol	alias_diff		3311718						
ANR	3312323	Symbol	* p0		3311718						
ANR	3312324	Symbol	i0		3311718						
ANR	3312325	Symbol	i1		3311718						
ANR	3312326	Symbol	i		3311718						
ANR	3312327	Symbol	op0 -> name		3311718						
ANR	3312328	Symbol	* a		3311718						
ANR	3312329	Symbol	* b		3311718						
ANR	3312330	Symbol	op0		3311718						
ANR	3312331	Symbol	op1		3311718						
ANR	3312332	Symbol	op0 -> lose		3311718						
ANR	3312333	Symbol	x		3311718						
ANR	3312334	Symbol	op1 -> flags		3311718						
ANR	3312335	Function	build_hash_table	419:0:12596:13872							
ANR	3312336	FunctionDef	"build_hash_table (const sparc_opcode * * opcode_table , sparc_opcode_hash * * hash_table , int num_opcodes)"		3312335	0					
ANR	3312337	CompoundStatement		423:0:12718:13872	3312335	0					
ANR	3312338	IdentifierDeclStatement	int i ;	424:2:12722:12727	3312335	0	True				
ANR	3312339	IdentifierDecl	i		3312335	0					
ANR	3312340	IdentifierDeclType	int		3312335	0					
ANR	3312341	Identifier	i		3312335	1					
ANR	3312342	IdentifierDeclStatement	int hash_count [ HASH_SIZE ] ;	425:2:12731:12756	3312335	1	True				
ANR	3312343	IdentifierDecl	hash_count [ HASH_SIZE ]		3312335	0					
ANR	3312344	IdentifierDeclType	int [ HASH_SIZE ]		3312335	0					
ANR	3312345	Identifier	hash_count		3312335	1					
ANR	3312346	Identifier	HASH_SIZE		3312335	2					
ANR	3312347	Statement	static	426:2:12760:12765	3312335	2	True				
ANR	3312348	IdentifierDeclStatement	sparc_opcode_hash * hash_buf = NULL ;	426:9:12767:12801	3312335	3	True				
ANR	3312349	IdentifierDecl	* hash_buf = NULL		3312335	0					
ANR	3312350	IdentifierDeclType	sparc_opcode_hash *		3312335	0					
ANR	3312351	Identifier	hash_buf		3312335	1					
ANR	3312352	AssignmentExpression	* hash_buf = NULL		3312335	2		=			
ANR	3312353	Identifier	NULL		3312335	0					
ANR	3312354	Identifier	NULL		3312335	1					
ANR	3312355	ExpressionStatement	"memset ( hash_table , 0 , HASH_SIZE * sizeof ( hash_table [ 0 ] ) )"	431:2:12900:12958	3312335	4	True				
ANR	3312356	CallExpression	"memset ( hash_table , 0 , HASH_SIZE * sizeof ( hash_table [ 0 ] ) )"		3312335	0					
ANR	3312357	Callee	memset		3312335	0					
ANR	3312358	Identifier	memset		3312335	0					
ANR	3312359	ArgumentList	hash_table		3312335	1					
ANR	3312360	Argument	hash_table		3312335	0					
ANR	3312361	Identifier	hash_table		3312335	0					
ANR	3312362	Argument	0		3312335	1					
ANR	3312363	PrimaryExpression	0		3312335	0					
ANR	3312364	Argument	HASH_SIZE * sizeof ( hash_table [ 0 ] )		3312335	2					
ANR	3312365	MultiplicativeExpression	HASH_SIZE * sizeof ( hash_table [ 0 ] )		3312335	0		*			
ANR	3312366	Identifier	HASH_SIZE		3312335	0					
ANR	3312367	SizeofExpression	sizeof ( hash_table [ 0 ] )		3312335	1					
ANR	3312368	Sizeof	sizeof		3312335	0					
ANR	3312369	ArrayIndexing	hash_table [ 0 ]		3312335	1					
ANR	3312370	Identifier	hash_table		3312335	0					
ANR	3312371	PrimaryExpression	0		3312335	1					
ANR	3312372	ExpressionStatement	"memset ( hash_count , 0 , HASH_SIZE * sizeof ( hash_count [ 0 ] ) )"	432:2:12962:13020	3312335	5	True				
ANR	3312373	CallExpression	"memset ( hash_count , 0 , HASH_SIZE * sizeof ( hash_count [ 0 ] ) )"		3312335	0					
ANR	3312374	Callee	memset		3312335	0					
ANR	3312375	Identifier	memset		3312335	0					
ANR	3312376	ArgumentList	hash_count		3312335	1					
ANR	3312377	Argument	hash_count		3312335	0					
ANR	3312378	Identifier	hash_count		3312335	0					
ANR	3312379	Argument	0		3312335	1					
ANR	3312380	PrimaryExpression	0		3312335	0					
ANR	3312381	Argument	HASH_SIZE * sizeof ( hash_count [ 0 ] )		3312335	2					
ANR	3312382	MultiplicativeExpression	HASH_SIZE * sizeof ( hash_count [ 0 ] )		3312335	0		*			
ANR	3312383	Identifier	HASH_SIZE		3312335	0					
ANR	3312384	SizeofExpression	sizeof ( hash_count [ 0 ] )		3312335	1					
ANR	3312385	Sizeof	sizeof		3312335	0					
ANR	3312386	ArrayIndexing	hash_count [ 0 ]		3312335	1					
ANR	3312387	Identifier	hash_count		3312335	0					
ANR	3312388	PrimaryExpression	0		3312335	1					
ANR	3312389	IfStatement	if ( hash_buf != NULL )		3312335	6					
ANR	3312390	Condition	hash_buf != NULL	433:6:13028:13043	3312335	0	True				
ANR	3312391	EqualityExpression	hash_buf != NULL		3312335	0		!=			
ANR	3312392	Identifier	hash_buf		3312335	0					
ANR	3312393	Identifier	NULL		3312335	1					
ANR	3312394	CompoundStatement		11:24:327:327	3312335	1					
ANR	3312395	ExpressionStatement	free ( hash_buf )	434:3:13051:13066	3312335	0	True				
ANR	3312396	CallExpression	free ( hash_buf )		3312335	0					
ANR	3312397	Callee	free		3312335	0					
ANR	3312398	Identifier	free		3312335	0					
ANR	3312399	ArgumentList	hash_buf		3312335	1					
ANR	3312400	Argument	hash_buf		3312335	0					
ANR	3312401	Identifier	hash_buf		3312335	0					
ANR	3312402	ExpressionStatement	"hash_buf = calloc ( sizeof ( * hash_buf ) , num_opcodes )"	436:2:13074:13126	3312335	7	True				
ANR	3312403	AssignmentExpression	"hash_buf = calloc ( sizeof ( * hash_buf ) , num_opcodes )"		3312335	0		=			
ANR	3312404	Identifier	hash_buf		3312335	0					
ANR	3312405	CallExpression	"calloc ( sizeof ( * hash_buf ) , num_opcodes )"		3312335	1					
ANR	3312406	Callee	calloc		3312335	0					
ANR	3312407	Identifier	calloc		3312335	0					
ANR	3312408	ArgumentList	sizeof ( * hash_buf )		3312335	1					
ANR	3312409	Argument	sizeof ( * hash_buf )		3312335	0					
ANR	3312410	SizeofExpression	sizeof ( * hash_buf )		3312335	0					
ANR	3312411	Sizeof	sizeof		3312335	0					
ANR	3312412	UnaryOperationExpression	* hash_buf		3312335	1					
ANR	3312413	UnaryOperator	*		3312335	0					
ANR	3312414	Identifier	hash_buf		3312335	1					
ANR	3312415	Argument	num_opcodes		3312335	1					
ANR	3312416	Identifier	num_opcodes		3312335	0					
ANR	3312417	IfStatement	if ( ! hash_buf )		3312335	8					
ANR	3312418	Condition	! hash_buf	437:6:13134:13142	3312335	0	True				
ANR	3312419	UnaryOperationExpression	! hash_buf		3312335	0					
ANR	3312420	UnaryOperator	!		3312335	0					
ANR	3312421	Identifier	hash_buf		3312335	1					
ANR	3312422	CompoundStatement		15:17:426:426	3312335	1					
ANR	3312423	ReturnStatement	return ;	438:4:13151:13157	3312335	0	True				
ANR	3312424	ForStatement	for ( i = num_opcodes - 1 ; i >= 0 ; -- i )		3312335	9					
ANR	3312425	ForInit	i = num_opcodes - 1 ;	440:7:13170:13189	3312335	0	True				
ANR	3312426	AssignmentExpression	i = num_opcodes - 1		3312335	0		=			
ANR	3312427	Identifier	i		3312335	0					
ANR	3312428	AdditiveExpression	num_opcodes - 1		3312335	1		-			
ANR	3312429	Identifier	num_opcodes		3312335	0					
ANR	3312430	PrimaryExpression	1		3312335	1					
ANR	3312431	Condition	i >= 0	440:28:13191:13196	3312335	1	True				
ANR	3312432	RelationalExpression	i >= 0		3312335	0		>=			
ANR	3312433	Identifier	i		3312335	0					
ANR	3312434	PrimaryExpression	0		3312335	1					
ANR	3312435	UnaryExpression	-- i	440:36:13199:13201	3312335	2	True				
ANR	3312436	IncDec	--		3312335	0					
ANR	3312437	Identifier	i		3312335	1					
ANR	3312438	CompoundStatement		21:6:550:585	3312335	3					
ANR	3312439	IdentifierDeclStatement	int hash = HASH_INSN ( opcode_table [ i ] -> match ) ;	442:6:13216:13261	3312335	0	True				
ANR	3312440	IdentifierDecl	hash = HASH_INSN ( opcode_table [ i ] -> match )		3312335	0					
ANR	3312441	IdentifierDeclType	int		3312335	0					
ANR	3312442	Identifier	hash		3312335	1					
ANR	3312443	AssignmentExpression	hash = HASH_INSN ( opcode_table [ i ] -> match )		3312335	2		=			
ANR	3312444	Identifier	hash		3312335	0					
ANR	3312445	CallExpression	HASH_INSN ( opcode_table [ i ] -> match )		3312335	1					
ANR	3312446	Callee	HASH_INSN		3312335	0					
ANR	3312447	Identifier	HASH_INSN		3312335	0					
ANR	3312448	ArgumentList	opcode_table [ i ] -> match		3312335	1					
ANR	3312449	Argument	opcode_table [ i ] -> match		3312335	0					
ANR	3312450	PtrMemberAccess	opcode_table [ i ] -> match		3312335	0					
ANR	3312451	ArrayIndexing	opcode_table [ i ]		3312335	0					
ANR	3312452	Identifier	opcode_table		3312335	0					
ANR	3312453	Identifier	i		3312335	1					
ANR	3312454	Identifier	match		3312335	1					
ANR	3312455	IdentifierDeclStatement	sparc_opcode_hash * h = & hash_buf [ i ] ;	443:6:13269:13304	3312335	1	True				
ANR	3312456	IdentifierDecl	* h = & hash_buf [ i ]		3312335	0					
ANR	3312457	IdentifierDeclType	sparc_opcode_hash *		3312335	0					
ANR	3312458	Identifier	h		3312335	1					
ANR	3312459	AssignmentExpression	* h = & hash_buf [ i ]		3312335	2		=			
ANR	3312460	Identifier	h		3312335	0					
ANR	3312461	UnaryOperationExpression	& hash_buf [ i ]		3312335	1					
ANR	3312462	UnaryOperator	&		3312335	0					
ANR	3312463	ArrayIndexing	hash_buf [ i ]		3312335	1					
ANR	3312464	Identifier	hash_buf		3312335	0					
ANR	3312465	Identifier	i		3312335	1					
ANR	3312466	ExpressionStatement	h -> next = hash_table [ hash ]	445:6:13313:13339	3312335	2	True				
ANR	3312467	AssignmentExpression	h -> next = hash_table [ hash ]		3312335	0		=			
ANR	3312468	PtrMemberAccess	h -> next		3312335	0					
ANR	3312469	Identifier	h		3312335	0					
ANR	3312470	Identifier	next		3312335	1					
ANR	3312471	ArrayIndexing	hash_table [ hash ]		3312335	1					
ANR	3312472	Identifier	hash_table		3312335	0					
ANR	3312473	Identifier	hash		3312335	1					
ANR	3312474	ExpressionStatement	h -> opcode = opcode_table [ i ]	446:6:13347:13374	3312335	3	True				
ANR	3312475	AssignmentExpression	h -> opcode = opcode_table [ i ]		3312335	0		=			
ANR	3312476	PtrMemberAccess	h -> opcode		3312335	0					
ANR	3312477	Identifier	h		3312335	0					
ANR	3312478	Identifier	opcode		3312335	1					
ANR	3312479	ArrayIndexing	opcode_table [ i ]		3312335	1					
ANR	3312480	Identifier	opcode_table		3312335	0					
ANR	3312481	Identifier	i		3312335	1					
ANR	3312482	ExpressionStatement	hash_table [ hash ] = h	447:6:13382:13402	3312335	4	True				
ANR	3312483	AssignmentExpression	hash_table [ hash ] = h		3312335	0		=			
ANR	3312484	ArrayIndexing	hash_table [ hash ]		3312335	0					
ANR	3312485	Identifier	hash_table		3312335	0					
ANR	3312486	Identifier	hash		3312335	1					
ANR	3312487	Identifier	h		3312335	1					
ANR	3312488	ExpressionStatement	++ hash_count [ hash ]	448:6:13410:13428	3312335	5	True				
ANR	3312489	UnaryExpression	++ hash_count [ hash ]		3312335	0					
ANR	3312490	IncDec	++		3312335	0					
ANR	3312491	ArrayIndexing	hash_count [ hash ]		3312335	1					
ANR	3312492	Identifier	hash_count		3312335	0					
ANR	3312493	Identifier	hash		3312335	1					
ANR	3312494	CompoundStatement		32:4:800:809	3312335	10					
ANR	3312495	IdentifierDeclStatement	"int min_count = num_opcodes , max_count = 0 ;"	453:4:13471:13513	3312335	0	True				
ANR	3312496	IdentifierDecl	min_count = num_opcodes		3312335	0					
ANR	3312497	IdentifierDeclType	int		3312335	0					
ANR	3312498	Identifier	min_count		3312335	1					
ANR	3312499	AssignmentExpression	min_count = num_opcodes		3312335	2		=			
ANR	3312500	Identifier	num_opcodes		3312335	0					
ANR	3312501	Identifier	num_opcodes		3312335	1					
ANR	3312502	IdentifierDecl	max_count = 0		3312335	1					
ANR	3312503	IdentifierDeclType	int		3312335	0					
ANR	3312504	Identifier	max_count		3312335	1					
ANR	3312505	AssignmentExpression	max_count = 0		3312335	2		=			
ANR	3312506	Identifier	max_count		3312335	0					
ANR	3312507	PrimaryExpression	0		3312335	1					
ANR	3312508	IdentifierDeclStatement	int total ;	454:4:13519:13528	3312335	1	True				
ANR	3312509	IdentifierDecl	total		3312335	0					
ANR	3312510	IdentifierDeclType	int		3312335	0					
ANR	3312511	Identifier	total		3312335	1					
ANR	3312512	ForStatement	for ( i = 0 ; i < HASH_SIZE ; ++ i )		3312335	2					
ANR	3312513	ForInit	i = 0 ;	456:9:13540:13545	3312335	0	True				
ANR	3312514	AssignmentExpression	i = 0		3312335	0		=			
ANR	3312515	Identifier	i		3312335	0					
ANR	3312516	PrimaryExpression	0		3312335	1					
ANR	3312517	Condition	i < HASH_SIZE	456:16:13547:13559	3312335	1	True				
ANR	3312518	RelationalExpression	i < HASH_SIZE		3312335	0		<			
ANR	3312519	Identifier	i		3312335	0					
ANR	3312520	Identifier	HASH_SIZE		3312335	1					
ANR	3312521	UnaryExpression	++ i	456:31:13562:13564	3312335	2	True				
ANR	3312522	IncDec	++		3312335	0					
ANR	3312523	Identifier	i		3312335	1					
ANR	3312524	CompoundStatement		35:6:854:854	3312335	3					
ANR	3312525	IfStatement	if ( hash_count [ i ] < min_count )		3312335	0					
ANR	3312526	Condition	hash_count [ i ] < min_count	458:12:13587:13611	3312335	0	True				
ANR	3312527	RelationalExpression	hash_count [ i ] < min_count		3312335	0		<			
ANR	3312528	ArrayIndexing	hash_count [ i ]		3312335	0					
ANR	3312529	Identifier	hash_count		3312335	0					
ANR	3312530	Identifier	i		3312335	1					
ANR	3312531	Identifier	min_count		3312335	1					
ANR	3312532	ExpressionStatement	min_count = hash_count [ i ]	459:3:13617:13642	3312335	1	True				
ANR	3312533	AssignmentExpression	min_count = hash_count [ i ]		3312335	0		=			
ANR	3312534	Identifier	min_count		3312335	0					
ANR	3312535	ArrayIndexing	hash_count [ i ]		3312335	1					
ANR	3312536	Identifier	hash_count		3312335	0					
ANR	3312537	Identifier	i		3312335	1					
ANR	3312538	IfStatement	if ( hash_count [ i ] > max_count )		3312335	1					
ANR	3312539	Condition	hash_count [ i ] > max_count	460:5:13649:13673	3312335	0	True				
ANR	3312540	RelationalExpression	hash_count [ i ] > max_count		3312335	0		>			
ANR	3312541	ArrayIndexing	hash_count [ i ]		3312335	0					
ANR	3312542	Identifier	hash_count		3312335	0					
ANR	3312543	Identifier	i		3312335	1					
ANR	3312544	Identifier	max_count		3312335	1					
ANR	3312545	ExpressionStatement	max_count = hash_count [ i ]	461:3:13679:13704	3312335	1	True				
ANR	3312546	AssignmentExpression	max_count = hash_count [ i ]		3312335	0		=			
ANR	3312547	Identifier	max_count		3312335	0					
ANR	3312548	ArrayIndexing	hash_count [ i ]		3312335	1					
ANR	3312549	Identifier	hash_count		3312335	0					
ANR	3312550	Identifier	i		3312335	1					
ANR	3312551	ExpressionStatement	total += hash_count [ i ]	462:1:13707:13729	3312335	2	True				
ANR	3312552	AssignmentExpression	total += hash_count [ i ]		3312335	0		+=			
ANR	3312553	Identifier	total		3312335	0					
ANR	3312554	ArrayIndexing	hash_count [ i ]		3312335	1					
ANR	3312555	Identifier	hash_count		3312335	0					
ANR	3312556	Identifier	i		3312335	1					
ANR	3312557	ExpressionStatement	"printf ( ""Opcode hash table stats: min %d, max %d, ave %f\\n"" , min_count , max_count , ( double ) total / HASH_SIZE )"	465:4:13744:13859	3312335	3	True				
ANR	3312558	CallExpression	"printf ( ""Opcode hash table stats: min %d, max %d, ave %f\\n"" , min_count , max_count , ( double ) total / HASH_SIZE )"		3312335	0					
ANR	3312559	Callee	printf		3312335	0					
ANR	3312560	Identifier	printf		3312335	0					
ANR	3312561	ArgumentList	"""Opcode hash table stats: min %d, max %d, ave %f\\n"""		3312335	1					
ANR	3312562	Argument	"""Opcode hash table stats: min %d, max %d, ave %f\\n"""		3312335	0					
ANR	3312563	PrimaryExpression	"""Opcode hash table stats: min %d, max %d, ave %f\\n"""		3312335	0					
ANR	3312564	Argument	min_count		3312335	1					
ANR	3312565	Identifier	min_count		3312335	0					
ANR	3312566	Argument	max_count		3312335	2					
ANR	3312567	Identifier	max_count		3312335	0					
ANR	3312568	Argument	( double ) total / HASH_SIZE		3312335	3					
ANR	3312569	MultiplicativeExpression	( double ) total / HASH_SIZE		3312335	0		/			
ANR	3312570	CastExpression	( double ) total		3312335	0					
ANR	3312571	CastTarget	double		3312335	0					
ANR	3312572	Identifier	total		3312335	1					
ANR	3312573	Identifier	HASH_SIZE		3312335	1					
ANR	3312574	ReturnType	static void		3312335	1					
ANR	3312575	Identifier	build_hash_table		3312335	2					
ANR	3312576	ParameterList	"const sparc_opcode * * opcode_table , sparc_opcode_hash * * hash_table , int num_opcodes"		3312335	3					
ANR	3312577	Parameter	const sparc_opcode * * opcode_table	420:18:12626:12658	3312335	0	True				
ANR	3312578	ParameterType	const sparc_opcode * *		3312335	0					
ANR	3312579	Identifier	opcode_table		3312335	1					
ANR	3312580	Parameter	sparc_opcode_hash * * hash_table	421:4:12665:12694	3312335	1	True				
ANR	3312581	ParameterType	sparc_opcode_hash * *		3312335	0					
ANR	3312582	Identifier	hash_table		3312335	1					
ANR	3312583	Parameter	int num_opcodes	422:4:12701:12715	3312335	2	True				
ANR	3312584	ParameterType	int		3312335	0					
ANR	3312585	Identifier	num_opcodes		3312335	1					
ANR	3312586	CFGEntryNode	ENTRY		3312335		True				
ANR	3312587	CFGExitNode	EXIT		3312335		True				
ANR	3312588	Symbol	opcode_table		3312335						
ANR	3312589	Symbol	hash_table		3312335						
ANR	3312590	Symbol	* hash_table		3312335						
ANR	3312591	Symbol	calloc		3312335						
ANR	3312592	Symbol	* hash_buf		3312335						
ANR	3312593	Symbol	num_opcodes		3312335						
ANR	3312594	Symbol	min_count		3312335						
ANR	3312595	Symbol	max_count		3312335						
ANR	3312596	Symbol	total		3312335						
ANR	3312597	Symbol	h -> opcode		3312335						
ANR	3312598	Symbol	hash_buf		3312335						
ANR	3312599	Symbol	HASH_INSN		3312335						
ANR	3312600	Symbol	* hash		3312335						
ANR	3312601	Symbol	HASH_SIZE		3312335						
ANR	3312602	Symbol	* * i		3312335						
ANR	3312603	Symbol	NULL		3312335						
ANR	3312604	Symbol	h -> next		3312335						
ANR	3312605	Symbol	* hash_count		3312335						
ANR	3312606	Symbol	hash_count		3312335						
ANR	3312607	Symbol	h		3312335						
ANR	3312608	Symbol	i		3312335						
ANR	3312609	Symbol	* opcode_table		3312335						
ANR	3312610	Symbol	* h		3312335						
ANR	3312611	Symbol	* i		3312335						
ANR	3312612	Symbol	* * opcode_table		3312335						
ANR	3312613	Symbol	opcode_table [ i ] -> match		3312335						
ANR	3312614	Symbol	hash		3312335						
ANR	3312615	Function	print_insn_sparc	479:0:14236:28870							
ANR	3312616	FunctionDef	"print_insn_sparc (bfd_vma memaddr , disassemble_info * info)"		3312615	0					
ANR	3312617	CompoundStatement		481:0:14299:28870	3312615	0					
ANR	3312618	IdentifierDeclStatement	FILE * stream = info -> stream ;	482:2:14303:14330	3312615	0	True				
ANR	3312619	IdentifierDecl	* stream = info -> stream		3312615	0					
ANR	3312620	IdentifierDeclType	FILE *		3312615	0					
ANR	3312621	Identifier	stream		3312615	1					
ANR	3312622	AssignmentExpression	* stream = info -> stream		3312615	2		=			
ANR	3312623	Identifier	stream		3312615	0					
ANR	3312624	PtrMemberAccess	info -> stream		3312615	1					
ANR	3312625	Identifier	info		3312615	0					
ANR	3312626	Identifier	stream		3312615	1					
ANR	3312627	IdentifierDeclStatement	bfd_byte buffer [ 4 ] ;	483:2:14334:14352	3312615	1	True				
ANR	3312628	IdentifierDecl	buffer [ 4 ]		3312615	0					
ANR	3312629	IdentifierDeclType	bfd_byte [ 4 ]		3312615	0					
ANR	3312630	Identifier	buffer		3312615	1					
ANR	3312631	PrimaryExpression	4		3312615	2					
ANR	3312632	IdentifierDeclStatement	unsigned long insn ;	484:2:14356:14374	3312615	2	True				
ANR	3312633	IdentifierDecl	insn		3312615	0					
ANR	3312634	IdentifierDeclType	unsigned long		3312615	0					
ANR	3312635	Identifier	insn		3312615	1					
ANR	3312636	IdentifierDeclStatement	sparc_opcode_hash * op ;	485:2:14378:14399	3312615	3	True				
ANR	3312637	IdentifierDecl	* op		3312615	0					
ANR	3312638	IdentifierDeclType	sparc_opcode_hash *		3312615	0					
ANR	3312639	Identifier	op		3312615	1					
ANR	3312640	Statement	static	487:2:14458:14463	3312615	4	True				
ANR	3312641	IdentifierDeclStatement	int opcodes_initialized = 0 ;	487:9:14465:14492	3312615	5	True				
ANR	3312642	IdentifierDecl	opcodes_initialized = 0		3312615	0					
ANR	3312643	IdentifierDeclType	int		3312615	0					
ANR	3312644	Identifier	opcodes_initialized		3312615	1					
ANR	3312645	AssignmentExpression	opcodes_initialized = 0		3312615	2		=			
ANR	3312646	Identifier	opcodes_initialized		3312615	0					
ANR	3312647	PrimaryExpression	0		3312615	1					
ANR	3312648	Statement	static	489:2:14535:14540	3312615	6	True				
ANR	3312649	IdentifierDeclStatement	unsigned long current_mach = 0 ;	489:9:14542:14572	3312615	7	True				
ANR	3312650	IdentifierDecl	current_mach = 0		3312615	0					
ANR	3312651	IdentifierDeclType	unsigned long		3312615	0					
ANR	3312652	Identifier	current_mach		3312615	1					
ANR	3312653	AssignmentExpression	current_mach = 0		3312615	2		=			
ANR	3312654	Identifier	current_mach		3312615	0					
ANR	3312655	PrimaryExpression	0		3312615	1					
ANR	3312656	IdentifierDeclStatement	bfd_vma ( * getword ) ( const void * ) ;	490:2:14576:14609	3312615	8	True				
ANR	3312657	IdentifierDecl	( * getword ) ( const void * )		3312615	0					
ANR	3312658	IdentifierDeclType	bfd_vma ( * ) ( const void * )		3312615	0					
ANR	3312659	Identifier	getword		3312615	1					
ANR	3312660	IfStatement	if ( ! opcodes_initialized || info -> mach != current_mach )		3312615	9					
ANR	3312661	Condition	! opcodes_initialized || info -> mach != current_mach	492:6:14618:14673	3312615	0	True				
ANR	3312662	OrExpression	! opcodes_initialized || info -> mach != current_mach		3312615	0		||			
ANR	3312663	UnaryOperationExpression	! opcodes_initialized		3312615	0					
ANR	3312664	UnaryOperator	!		3312615	0					
ANR	3312665	Identifier	opcodes_initialized		3312615	1					
ANR	3312666	EqualityExpression	info -> mach != current_mach		3312615	1		!=			
ANR	3312667	PtrMemberAccess	info -> mach		3312615	0					
ANR	3312668	Identifier	info		3312615	0					
ANR	3312669	Identifier	mach		3312615	1					
ANR	3312670	Identifier	current_mach		3312615	1					
ANR	3312671	CompoundStatement		15:6:388:393	3312615	1					
ANR	3312672	IdentifierDeclStatement	int i ;	495:6:14688:14693	3312615	0	True				
ANR	3312673	IdentifierDecl	i		3312615	0					
ANR	3312674	IdentifierDeclType	int		3312615	0					
ANR	3312675	Identifier	i		3312615	1					
ANR	3312676	ExpressionStatement	current_arch_mask = compute_arch_mask ( info -> mach )	497:6:14702:14752	3312615	1	True				
ANR	3312677	AssignmentExpression	current_arch_mask = compute_arch_mask ( info -> mach )		3312615	0		=			
ANR	3312678	Identifier	current_arch_mask		3312615	0					
ANR	3312679	CallExpression	compute_arch_mask ( info -> mach )		3312615	1					
ANR	3312680	Callee	compute_arch_mask		3312615	0					
ANR	3312681	Identifier	compute_arch_mask		3312615	0					
ANR	3312682	ArgumentList	info -> mach		3312615	1					
ANR	3312683	Argument	info -> mach		3312615	0					
ANR	3312684	PtrMemberAccess	info -> mach		3312615	0					
ANR	3312685	Identifier	info		3312615	0					
ANR	3312686	Identifier	mach		3312615	1					
ANR	3312687	IfStatement	if ( ! opcodes_initialized )		3312615	2					
ANR	3312688	Condition	! opcodes_initialized	499:10:14765:14784	3312615	0	True				
ANR	3312689	UnaryOperationExpression	! opcodes_initialized		3312615	0					
ANR	3312690	UnaryOperator	!		3312615	0					
ANR	3312691	Identifier	opcodes_initialized		3312615	1					
ANR	3312692	CompoundStatement		19:32:487:487	3312615	1					
ANR	3312693	ExpressionStatement	sorted_opcodes = xmalloc ( sparc_num_opcodes * sizeof ( sparc_opcode * ) )	500:7:14796:14874	3312615	0	True				
ANR	3312694	AssignmentExpression	sorted_opcodes = xmalloc ( sparc_num_opcodes * sizeof ( sparc_opcode * ) )		3312615	0		=			
ANR	3312695	Identifier	sorted_opcodes		3312615	0					
ANR	3312696	CallExpression	xmalloc ( sparc_num_opcodes * sizeof ( sparc_opcode * ) )		3312615	1					
ANR	3312697	Callee	xmalloc		3312615	0					
ANR	3312698	Identifier	xmalloc		3312615	0					
ANR	3312699	ArgumentList	sparc_num_opcodes * sizeof ( sparc_opcode * )		3312615	1					
ANR	3312700	Argument	sparc_num_opcodes * sizeof ( sparc_opcode * )		3312615	0					
ANR	3312701	MultiplicativeExpression	sparc_num_opcodes * sizeof ( sparc_opcode * )		3312615	0		*			
ANR	3312702	Identifier	sparc_num_opcodes		3312615	0					
ANR	3312703	SizeofExpression	sizeof ( sparc_opcode * )		3312615	1					
ANR	3312704	Sizeof	sizeof		3312615	0					
ANR	3312705	SizeofOperand	sparc_opcode *		3312615	1					
ANR	3312706	ForStatement	for ( i = 0 ; i < sparc_num_opcodes ; ++ i )		3312615	3					
ANR	3312707	ForInit	i = 0 ;	504:11:14952:14957	3312615	0	True				
ANR	3312708	AssignmentExpression	i = 0		3312615	0		=			
ANR	3312709	Identifier	i		3312615	0					
ANR	3312710	PrimaryExpression	0		3312615	1					
ANR	3312711	Condition	i < sparc_num_opcodes	504:18:14959:14979	3312615	1	True				
ANR	3312712	RelationalExpression	i < sparc_num_opcodes		3312615	0		<			
ANR	3312713	Identifier	i		3312615	0					
ANR	3312714	Identifier	sparc_num_opcodes		3312615	1					
ANR	3312715	UnaryExpression	++ i	504:41:14982:14984	3312615	2	True				
ANR	3312716	IncDec	++		3312615	0					
ANR	3312717	Identifier	i		3312615	1					
ANR	3312718	CompoundStatement		24:46:687:687	3312615	3					
ANR	3312719	ExpressionStatement	sorted_opcodes [ i ] = & sparc_opcodes [ i ]	505:7:14996:15033	3312615	0	True				
ANR	3312720	AssignmentExpression	sorted_opcodes [ i ] = & sparc_opcodes [ i ]		3312615	0		=			
ANR	3312721	ArrayIndexing	sorted_opcodes [ i ]		3312615	0					
ANR	3312722	Identifier	sorted_opcodes		3312615	0					
ANR	3312723	Identifier	i		3312615	1					
ANR	3312724	UnaryOperationExpression	& sparc_opcodes [ i ]		3312615	1					
ANR	3312725	UnaryOperator	&		3312615	0					
ANR	3312726	ArrayIndexing	sparc_opcodes [ i ]		3312615	1					
ANR	3312727	Identifier	sparc_opcodes		3312615	0					
ANR	3312728	Identifier	i		3312615	1					
ANR	3312729	ExpressionStatement	"qsort ( ( char * ) sorted_opcodes , sparc_num_opcodes , sizeof ( sorted_opcodes [ 0 ] ) , compare_opcodes )"	507:6:15049:15150	3312615	4	True				
ANR	3312730	CallExpression	"qsort ( ( char * ) sorted_opcodes , sparc_num_opcodes , sizeof ( sorted_opcodes [ 0 ] ) , compare_opcodes )"		3312615	0					
ANR	3312731	Callee	qsort		3312615	0					
ANR	3312732	Identifier	qsort		3312615	0					
ANR	3312733	ArgumentList	( char * ) sorted_opcodes		3312615	1					
ANR	3312734	Argument	( char * ) sorted_opcodes		3312615	0					
ANR	3312735	CastExpression	( char * ) sorted_opcodes		3312615	0					
ANR	3312736	CastTarget	char *		3312615	0					
ANR	3312737	Identifier	sorted_opcodes		3312615	1					
ANR	3312738	Argument	sparc_num_opcodes		3312615	1					
ANR	3312739	Identifier	sparc_num_opcodes		3312615	0					
ANR	3312740	Argument	sizeof ( sorted_opcodes [ 0 ] )		3312615	2					
ANR	3312741	SizeofExpression	sizeof ( sorted_opcodes [ 0 ] )		3312615	0					
ANR	3312742	Sizeof	sizeof		3312615	0					
ANR	3312743	ArrayIndexing	sorted_opcodes [ 0 ]		3312615	1					
ANR	3312744	Identifier	sorted_opcodes		3312615	0					
ANR	3312745	PrimaryExpression	0		3312615	1					
ANR	3312746	Argument	compare_opcodes		3312615	3					
ANR	3312747	Identifier	compare_opcodes		3312615	0					
ANR	3312748	ExpressionStatement	"build_hash_table ( sorted_opcodes , opcode_hash_table , sparc_num_opcodes )"	510:6:15159:15230	3312615	5	True				
ANR	3312749	CallExpression	"build_hash_table ( sorted_opcodes , opcode_hash_table , sparc_num_opcodes )"		3312615	0					
ANR	3312750	Callee	build_hash_table		3312615	0					
ANR	3312751	Identifier	build_hash_table		3312615	0					
ANR	3312752	ArgumentList	sorted_opcodes		3312615	1					
ANR	3312753	Argument	sorted_opcodes		3312615	0					
ANR	3312754	Identifier	sorted_opcodes		3312615	0					
ANR	3312755	Argument	opcode_hash_table		3312615	1					
ANR	3312756	Identifier	opcode_hash_table		3312615	0					
ANR	3312757	Argument	sparc_num_opcodes		3312615	2					
ANR	3312758	Identifier	sparc_num_opcodes		3312615	0					
ANR	3312759	ExpressionStatement	current_mach = info -> mach	511:6:15238:15263	3312615	6	True				
ANR	3312760	AssignmentExpression	current_mach = info -> mach		3312615	0		=			
ANR	3312761	Identifier	current_mach		3312615	0					
ANR	3312762	PtrMemberAccess	info -> mach		3312615	1					
ANR	3312763	Identifier	info		3312615	0					
ANR	3312764	Identifier	mach		3312615	1					
ANR	3312765	ExpressionStatement	opcodes_initialized = 1	512:6:15271:15294	3312615	7	True				
ANR	3312766	AssignmentExpression	opcodes_initialized = 1		3312615	0		=			
ANR	3312767	Identifier	opcodes_initialized		3312615	0					
ANR	3312768	PrimaryExpression	1		3312615	1					
ANR	3312769	CompoundStatement		36:4:1011:1096	3312615	10					
ANR	3312770	IdentifierDeclStatement	"int status = ( * info -> read_memory_func ) ( memaddr , buffer , sizeof ( buffer ) , info ) ;"	516:4:15311:15396	3312615	0	True				
ANR	3312771	IdentifierDecl	"status = ( * info -> read_memory_func ) ( memaddr , buffer , sizeof ( buffer ) , info )"		3312615	0					
ANR	3312772	IdentifierDeclType	int		3312615	0					
ANR	3312773	Identifier	status		3312615	1					
ANR	3312774	AssignmentExpression	"status = ( * info -> read_memory_func ) ( memaddr , buffer , sizeof ( buffer ) , info )"		3312615	2		=			
ANR	3312775	Identifier	status		3312615	0					
ANR	3312776	CallExpression	"( * info -> read_memory_func ) ( memaddr , buffer , sizeof ( buffer ) , info )"		3312615	1					
ANR	3312777	Callee	* info -> read_memory_func		3312615	0					
ANR	3312778	UnaryOperationExpression	* info -> read_memory_func		3312615	0					
ANR	3312779	UnaryOperator	*		3312615	0					
ANR	3312780	PtrMemberAccess	info -> read_memory_func		3312615	1					
ANR	3312781	Identifier	info		3312615	0					
ANR	3312782	Identifier	read_memory_func		3312615	1					
ANR	3312783	ArgumentList	memaddr		3312615	1					
ANR	3312784	Argument	memaddr		3312615	0					
ANR	3312785	Identifier	memaddr		3312615	0					
ANR	3312786	Argument	buffer		3312615	1					
ANR	3312787	Identifier	buffer		3312615	0					
ANR	3312788	Argument	sizeof ( buffer )		3312615	2					
ANR	3312789	SizeofExpression	sizeof ( buffer )		3312615	0					
ANR	3312790	Sizeof	sizeof		3312615	0					
ANR	3312791	SizeofOperand	buffer		3312615	1					
ANR	3312792	Argument	info		3312615	3					
ANR	3312793	Identifier	info		3312615	0					
ANR	3312794	IfStatement	if ( status != 0 )		3312615	1					
ANR	3312795	Condition	status != 0	519:8:15407:15417	3312615	0	True				
ANR	3312796	EqualityExpression	status != 0		3312615	0		!=			
ANR	3312797	Identifier	status		3312615	0					
ANR	3312798	PrimaryExpression	0		3312615	1					
ANR	3312799	CompoundStatement		40:6:1126:1126	3312615	1					
ANR	3312800	ExpressionStatement	"( * info -> memory_error_func ) ( status , memaddr , info )"	521:1:15429:15479	3312615	0	True				
ANR	3312801	CallExpression	"( * info -> memory_error_func ) ( status , memaddr , info )"		3312615	0					
ANR	3312802	Callee	* info -> memory_error_func		3312615	0					
ANR	3312803	UnaryOperationExpression	* info -> memory_error_func		3312615	0					
ANR	3312804	UnaryOperator	*		3312615	0					
ANR	3312805	PtrMemberAccess	info -> memory_error_func		3312615	1					
ANR	3312806	Identifier	info		3312615	0					
ANR	3312807	Identifier	memory_error_func		3312615	1					
ANR	3312808	ArgumentList	status		3312615	1					
ANR	3312809	Argument	status		3312615	0					
ANR	3312810	Identifier	status		3312615	0					
ANR	3312811	Argument	memaddr		3312615	1					
ANR	3312812	Identifier	memaddr		3312615	0					
ANR	3312813	Argument	info		3312615	2					
ANR	3312814	Identifier	info		3312615	0					
ANR	3312815	ReturnStatement	return - 1 ;	522:1:15482:15491	3312615	1	True				
ANR	3312816	UnaryOperationExpression	- 1		3312615	0					
ANR	3312817	UnaryOperator	-		3312615	0					
ANR	3312818	PrimaryExpression	1		3312615	1					
ANR	3312819	IfStatement	if ( info -> endian == BFD_ENDIAN_BIG || info -> mach == bfd_mach_sparc_sparclite )		3312615	11					
ANR	3312820	Condition	info -> endian == BFD_ENDIAN_BIG || info -> mach == bfd_mach_sparc_sparclite	528:6:15659:15730	3312615	0	True				
ANR	3312821	OrExpression	info -> endian == BFD_ENDIAN_BIG || info -> mach == bfd_mach_sparc_sparclite		3312615	0		||			
ANR	3312822	EqualityExpression	info -> endian == BFD_ENDIAN_BIG		3312615	0		==			
ANR	3312823	PtrMemberAccess	info -> endian		3312615	0					
ANR	3312824	Identifier	info		3312615	0					
ANR	3312825	Identifier	endian		3312615	1					
ANR	3312826	Identifier	BFD_ENDIAN_BIG		3312615	1					
ANR	3312827	EqualityExpression	info -> mach == bfd_mach_sparc_sparclite		3312615	1		==			
ANR	3312828	PtrMemberAccess	info -> mach		3312615	0					
ANR	3312829	Identifier	info		3312615	0					
ANR	3312830	Identifier	mach		3312615	1					
ANR	3312831	Identifier	bfd_mach_sparc_sparclite		3312615	1					
ANR	3312832	CompoundStatement		48:80:1433:1433	3312615	1					
ANR	3312833	ExpressionStatement	getword = bfd_getb32	529:3:15738:15758	3312615	0	True				
ANR	3312834	AssignmentExpression	getword = bfd_getb32		3312615	0		=			
ANR	3312835	Identifier	getword		3312615	0					
ANR	3312836	Identifier	bfd_getb32		3312615	1					
ANR	3312837	ElseStatement	else		3312615	0					
ANR	3312838	CompoundStatement		50:9:1469:1469	3312615	0					
ANR	3312839	ExpressionStatement	getword = bfd_getl32	531:3:15774:15794	3312615	0	True				
ANR	3312840	AssignmentExpression	getword = bfd_getl32		3312615	0		=			
ANR	3312841	Identifier	getword		3312615	0					
ANR	3312842	Identifier	bfd_getl32		3312615	1					
ANR	3312843	ExpressionStatement	insn = getword ( buffer )	534:2:15803:15826	3312615	12	True				
ANR	3312844	AssignmentExpression	insn = getword ( buffer )		3312615	0		=			
ANR	3312845	Identifier	insn		3312615	0					
ANR	3312846	CallExpression	getword ( buffer )		3312615	1					
ANR	3312847	Callee	getword		3312615	0					
ANR	3312848	Identifier	getword		3312615	0					
ANR	3312849	ArgumentList	buffer		3312615	1					
ANR	3312850	Argument	buffer		3312615	0					
ANR	3312851	Identifier	buffer		3312615	0					
ANR	3312852	ExpressionStatement	info -> insn_info_valid = 1	536:2:15831:15856	3312615	13	True				
ANR	3312853	AssignmentExpression	info -> insn_info_valid = 1		3312615	0		=			
ANR	3312854	PtrMemberAccess	info -> insn_info_valid		3312615	0					
ANR	3312855	Identifier	info		3312615	0					
ANR	3312856	Identifier	insn_info_valid		3312615	1					
ANR	3312857	PrimaryExpression	1		3312615	1					
ANR	3312858	ExpressionStatement	info -> insn_type = dis_nonbranch	537:2:15893:15924	3312615	14	True				
ANR	3312859	AssignmentExpression	info -> insn_type = dis_nonbranch		3312615	0		=			
ANR	3312860	PtrMemberAccess	info -> insn_type		3312615	0					
ANR	3312861	Identifier	info		3312615	0					
ANR	3312862	Identifier	insn_type		3312615	1					
ANR	3312863	Identifier	dis_nonbranch		3312615	1					
ANR	3312864	ExpressionStatement	info -> branch_delay_insns = 0	538:2:15960:15988	3312615	15	True				
ANR	3312865	AssignmentExpression	info -> branch_delay_insns = 0		3312615	0		=			
ANR	3312866	PtrMemberAccess	info -> branch_delay_insns		3312615	0					
ANR	3312867	Identifier	info		3312615	0					
ANR	3312868	Identifier	branch_delay_insns		3312615	1					
ANR	3312869	PrimaryExpression	0		3312615	1					
ANR	3312870	ExpressionStatement	info -> target = 0	539:2:16018:16034	3312615	16	True				
ANR	3312871	AssignmentExpression	info -> target = 0		3312615	0		=			
ANR	3312872	PtrMemberAccess	info -> target		3312615	0					
ANR	3312873	Identifier	info		3312615	0					
ANR	3312874	Identifier	target		3312615	1					
ANR	3312875	PrimaryExpression	0		3312615	1					
ANR	3312876	ForStatement	for ( op = opcode_hash_table [ HASH_INSN ( insn ) ] ; op ; op = op -> next )		3312615	17					
ANR	3312877	ForInit	op = opcode_hash_table [ HASH_INSN ( insn ) ] ;	541:7:16078:16118	3312615	0	True				
ANR	3312878	AssignmentExpression	op = opcode_hash_table [ HASH_INSN ( insn ) ]		3312615	0		=			
ANR	3312879	Identifier	op		3312615	0					
ANR	3312880	ArrayIndexing	opcode_hash_table [ HASH_INSN ( insn ) ]		3312615	1					
ANR	3312881	Identifier	opcode_hash_table		3312615	0					
ANR	3312882	CallExpression	HASH_INSN ( insn )		3312615	1					
ANR	3312883	Callee	HASH_INSN		3312615	0					
ANR	3312884	Identifier	HASH_INSN		3312615	0					
ANR	3312885	ArgumentList	insn		3312615	1					
ANR	3312886	Argument	insn		3312615	0					
ANR	3312887	Identifier	insn		3312615	0					
ANR	3312888	Condition	op	541:49:16120:16121	3312615	1	True				
ANR	3312889	Identifier	op		3312615	0					
ANR	3312890	AssignmentExpression	op = op -> next	541:53:16124:16136	3312615	2	True	=			
ANR	3312891	Identifier	op		3312615	0					
ANR	3312892	PtrMemberAccess	op -> next		3312615	1					
ANR	3312893	Identifier	op		3312615	0					
ANR	3312894	Identifier	next		3312615	1					
ANR	3312895	CompoundStatement		63:6:1851:1890	3312615	3					
ANR	3312896	IdentifierDeclStatement	const sparc_opcode * opcode = op -> opcode ;	543:6:16151:16190	3312615	0	True				
ANR	3312897	IdentifierDecl	* opcode = op -> opcode		3312615	0					
ANR	3312898	IdentifierDeclType	const sparc_opcode *		3312615	0					
ANR	3312899	Identifier	opcode		3312615	1					
ANR	3312900	AssignmentExpression	* opcode = op -> opcode		3312615	2		=			
ANR	3312901	Identifier	opcode		3312615	0					
ANR	3312902	PtrMemberAccess	op -> opcode		3312615	1					
ANR	3312903	Identifier	op		3312615	0					
ANR	3312904	Identifier	opcode		3312615	1					
ANR	3312905	IfStatement	if ( ! ( opcode -> architecture & current_arch_mask ) )		3312615	1					
ANR	3312906	Condition	! ( opcode -> architecture & current_arch_mask )	546:10:16282:16324	3312615	0	True				
ANR	3312907	UnaryOperationExpression	! ( opcode -> architecture & current_arch_mask )		3312615	0					
ANR	3312908	UnaryOperator	!		3312615	0					
ANR	3312909	BitAndExpression	opcode -> architecture & current_arch_mask		3312615	1		&			
ANR	3312910	PtrMemberAccess	opcode -> architecture		3312615	0					
ANR	3312911	Identifier	opcode		3312615	0					
ANR	3312912	Identifier	architecture		3312615	1					
ANR	3312913	Identifier	current_arch_mask		3312615	1					
ANR	3312914	CompoundStatement		66:55:2027:2027	3312615	1					
ANR	3312915	ContinueStatement	continue ;	547:7:16336:16344	3312615	0	True				
ANR	3312916	IfStatement	if ( ( opcode -> match & insn ) == opcode -> match && ( opcode -> lose & insn ) == 0 )		3312615	2					
ANR	3312917	Condition	( opcode -> match & insn ) == opcode -> match && ( opcode -> lose & insn ) == 0	550:10:16365:16436	3312615	0	True				
ANR	3312918	AndExpression	( opcode -> match & insn ) == opcode -> match && ( opcode -> lose & insn ) == 0		3312615	0		&&			
ANR	3312919	EqualityExpression	( opcode -> match & insn ) == opcode -> match		3312615	0		==			
ANR	3312920	BitAndExpression	opcode -> match & insn		3312615	0		&			
ANR	3312921	PtrMemberAccess	opcode -> match		3312615	0					
ANR	3312922	Identifier	opcode		3312615	0					
ANR	3312923	Identifier	match		3312615	1					
ANR	3312924	Identifier	insn		3312615	1					
ANR	3312925	PtrMemberAccess	opcode -> match		3312615	1					
ANR	3312926	Identifier	opcode		3312615	0					
ANR	3312927	Identifier	match		3312615	1					
ANR	3312928	EqualityExpression	( opcode -> lose & insn ) == 0		3312615	1		==			
ANR	3312929	BitAndExpression	opcode -> lose & insn		3312615	0		&			
ANR	3312930	PtrMemberAccess	opcode -> lose		3312615	0					
ANR	3312931	Identifier	opcode		3312615	0					
ANR	3312932	Identifier	lose		3312615	1					
ANR	3312933	Identifier	insn		3312615	1					
ANR	3312934	PrimaryExpression	0		3312615	1					
ANR	3312935	CompoundStatement		83:3:2508:2527	3312615	1					
ANR	3312936	IdentifierDeclStatement	int imm_added_to_rs1 = 0 ;	555:3:16574:16598	3312615	0	True				
ANR	3312937	IdentifierDecl	imm_added_to_rs1 = 0		3312615	0					
ANR	3312938	IdentifierDeclType	int		3312615	0					
ANR	3312939	Identifier	imm_added_to_rs1		3312615	1					
ANR	3312940	AssignmentExpression	imm_added_to_rs1 = 0		3312615	2		=			
ANR	3312941	Identifier	imm_added_to_rs1		3312615	0					
ANR	3312942	PrimaryExpression	0		3312615	1					
ANR	3312943	IdentifierDeclStatement	int imm_ored_to_rs1 = 0 ;	556:3:16603:16626	3312615	1	True				
ANR	3312944	IdentifierDecl	imm_ored_to_rs1 = 0		3312615	0					
ANR	3312945	IdentifierDeclType	int		3312615	0					
ANR	3312946	Identifier	imm_ored_to_rs1		3312615	1					
ANR	3312947	AssignmentExpression	imm_ored_to_rs1 = 0		3312615	2		=			
ANR	3312948	Identifier	imm_ored_to_rs1		3312615	0					
ANR	3312949	PrimaryExpression	0		3312615	1					
ANR	3312950	IdentifierDeclStatement	int found_plus = 0 ;	560:3:16732:16750	3312615	2	True				
ANR	3312951	IdentifierDecl	found_plus = 0		3312615	0					
ANR	3312952	IdentifierDeclType	int		3312615	0					
ANR	3312953	Identifier	found_plus		3312615	1					
ANR	3312954	AssignmentExpression	found_plus = 0		3312615	2		=			
ANR	3312955	Identifier	found_plus		3312615	0					
ANR	3312956	PrimaryExpression	0		3312615	1					
ANR	3312957	IdentifierDeclStatement	int is_annulled = 0 ;	563:3:16808:16827	3312615	3	True				
ANR	3312958	IdentifierDecl	is_annulled = 0		3312615	0					
ANR	3312959	IdentifierDeclType	int		3312615	0					
ANR	3312960	Identifier	is_annulled		3312615	1					
ANR	3312961	AssignmentExpression	is_annulled = 0		3312615	2		=			
ANR	3312962	Identifier	is_annulled		3312615	0					
ANR	3312963	PrimaryExpression	0		3312615	1					
ANR	3312964	IfStatement	if ( opcode -> match == 0x80102000 )		3312615	4					
ANR	3312965	Condition	opcode -> match == 0x80102000	567:7:16933:16959	3312615	0	True				
ANR	3312966	EqualityExpression	opcode -> match == 0x80102000		3312615	0		==			
ANR	3312967	PtrMemberAccess	opcode -> match		3312615	0					
ANR	3312968	Identifier	opcode		3312615	0					
ANR	3312969	Identifier	match		3312615	1					
ANR	3312970	PrimaryExpression	0x80102000		3312615	1					
ANR	3312971	CompoundStatement		87:36:2662:2662	3312615	1					
ANR	3312972	ExpressionStatement	imm_ored_to_rs1 = 1	568:4:16977:16996	3312615	0	True				
ANR	3312973	AssignmentExpression	imm_ored_to_rs1 = 1		3312615	0		=			
ANR	3312974	Identifier	imm_ored_to_rs1		3312615	0					
ANR	3312975	PrimaryExpression	1		3312615	1					
ANR	3312976	IfStatement	if ( opcode -> match == 0x80002000 )		3312615	5					
ANR	3312977	Condition	opcode -> match == 0x80002000	570:7:17010:17036	3312615	0	True				
ANR	3312978	EqualityExpression	opcode -> match == 0x80002000		3312615	0		==			
ANR	3312979	PtrMemberAccess	opcode -> match		3312615	0					
ANR	3312980	Identifier	opcode		3312615	0					
ANR	3312981	Identifier	match		3312615	1					
ANR	3312982	PrimaryExpression	0x80002000		3312615	1					
ANR	3312983	CompoundStatement		90:36:2739:2739	3312615	1					
ANR	3312984	ExpressionStatement	imm_added_to_rs1 = 1	571:4:17055:17075	3312615	0	True				
ANR	3312985	AssignmentExpression	imm_added_to_rs1 = 1		3312615	0		=			
ANR	3312986	Identifier	imm_added_to_rs1		3312615	0					
ANR	3312987	PrimaryExpression	1		3312615	1					
ANR	3312988	IfStatement	"if ( X_RS1 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'r' ) != 0 )"		3312615	6					
ANR	3312989	Condition	"X_RS1 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'r' ) != 0"	574:7:17090:17151	3312615	0	True				
ANR	3312990	AndExpression	"X_RS1 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'r' ) != 0"		3312615	0		&&			
ANR	3312991	EqualityExpression	X_RS1 ( insn ) != X_RD ( insn )		3312615	0		!=			
ANR	3312992	CallExpression	X_RS1 ( insn )		3312615	0					
ANR	3312993	Callee	X_RS1		3312615	0					
ANR	3312994	Identifier	X_RS1		3312615	0					
ANR	3312995	ArgumentList	insn		3312615	1					
ANR	3312996	Argument	insn		3312615	0					
ANR	3312997	Identifier	insn		3312615	0					
ANR	3312998	CallExpression	X_RD ( insn )		3312615	1					
ANR	3312999	Callee	X_RD		3312615	0					
ANR	3313000	Identifier	X_RD		3312615	0					
ANR	3313001	ArgumentList	insn		3312615	1					
ANR	3313002	Argument	insn		3312615	0					
ANR	3313003	Identifier	insn		3312615	0					
ANR	3313004	EqualityExpression	"strchr ( opcode -> args , 'r' ) != 0"		3312615	1		!=			
ANR	3313005	CallExpression	"strchr ( opcode -> args , 'r' )"		3312615	0					
ANR	3313006	Callee	strchr		3312615	0					
ANR	3313007	Identifier	strchr		3312615	0					
ANR	3313008	ArgumentList	opcode -> args		3312615	1					
ANR	3313009	Argument	opcode -> args		3312615	0					
ANR	3313010	PtrMemberAccess	opcode -> args		3312615	0					
ANR	3313011	Identifier	opcode		3312615	0					
ANR	3313012	Identifier	args		3312615	1					
ANR	3313013	Argument	'r'		3312615	1					
ANR	3313014	PrimaryExpression	'r'		3312615	0					
ANR	3313015	PrimaryExpression	0		3312615	1					
ANR	3313016	CompoundStatement		94:71:2854:2854	3312615	1					
ANR	3313017	ContinueStatement	continue ;	576:4:17228:17236	3312615	0	True				
ANR	3313018	IfStatement	"if ( X_RS2 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'O' ) != 0 )"		3312615	7					
ANR	3313019	Condition	"X_RS2 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'O' ) != 0"	578:7:17250:17311	3312615	0	True				
ANR	3313020	AndExpression	"X_RS2 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'O' ) != 0"		3312615	0		&&			
ANR	3313021	EqualityExpression	X_RS2 ( insn ) != X_RD ( insn )		3312615	0		!=			
ANR	3313022	CallExpression	X_RS2 ( insn )		3312615	0					
ANR	3313023	Callee	X_RS2		3312615	0					
ANR	3313024	Identifier	X_RS2		3312615	0					
ANR	3313025	ArgumentList	insn		3312615	1					
ANR	3313026	Argument	insn		3312615	0					
ANR	3313027	Identifier	insn		3312615	0					
ANR	3313028	CallExpression	X_RD ( insn )		3312615	1					
ANR	3313029	Callee	X_RD		3312615	0					
ANR	3313030	Identifier	X_RD		3312615	0					
ANR	3313031	ArgumentList	insn		3312615	1					
ANR	3313032	Argument	insn		3312615	0					
ANR	3313033	Identifier	insn		3312615	0					
ANR	3313034	EqualityExpression	"strchr ( opcode -> args , 'O' ) != 0"		3312615	1		!=			
ANR	3313035	CallExpression	"strchr ( opcode -> args , 'O' )"		3312615	0					
ANR	3313036	Callee	strchr		3312615	0					
ANR	3313037	Identifier	strchr		3312615	0					
ANR	3313038	ArgumentList	opcode -> args		3312615	1					
ANR	3313039	Argument	opcode -> args		3312615	0					
ANR	3313040	PtrMemberAccess	opcode -> args		3312615	0					
ANR	3313041	Identifier	opcode		3312615	0					
ANR	3313042	Identifier	args		3312615	1					
ANR	3313043	Argument	'O'		3312615	1					
ANR	3313044	PrimaryExpression	'O'		3312615	0					
ANR	3313045	PrimaryExpression	0		3312615	1					
ANR	3313046	CompoundStatement		98:71:3014:3014	3312615	1					
ANR	3313047	ContinueStatement	continue ;	580:4:17388:17396	3312615	0	True				
ANR	3313048	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%s"" , opcode -> name )"	583:3:17407:17457	3312615	8	True				
ANR	3313049	CallExpression	"( * info -> fprintf_func ) ( stream , ""%s"" , opcode -> name )"		3312615	0					
ANR	3313050	Callee	* info -> fprintf_func		3312615	0					
ANR	3313051	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313052	UnaryOperator	*		3312615	0					
ANR	3313053	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313054	Identifier	info		3312615	0					
ANR	3313055	Identifier	fprintf_func		3312615	1					
ANR	3313056	ArgumentList	stream		3312615	1					
ANR	3313057	Argument	stream		3312615	0					
ANR	3313058	Identifier	stream		3312615	0					
ANR	3313059	Argument	"""%s"""		3312615	1					
ANR	3313060	PrimaryExpression	"""%s"""		3312615	0					
ANR	3313061	Argument	opcode -> name		3312615	2					
ANR	3313062	PtrMemberAccess	opcode -> name		3312615	0					
ANR	3313063	Identifier	opcode		3312615	0					
ANR	3313064	Identifier	name		3312615	1					
ANR	3313065	CompoundStatement		107:5:3190:3206	3312615	9					
ANR	3313066	IdentifierDeclStatement	const char * s ;	586:5:17470:17483	3312615	0	True				
ANR	3313067	IdentifierDecl	* s		3312615	0					
ANR	3313068	IdentifierDeclType	const char *		3312615	0					
ANR	3313069	Identifier	s		3312615	1					
ANR	3313070	IdentifierDeclStatement	int brackets = 0 ;	587:5:17490:17506	3312615	1	True				
ANR	3313071	IdentifierDecl	brackets = 0		3312615	0					
ANR	3313072	IdentifierDeclType	int		3312615	0					
ANR	3313073	Identifier	brackets		3312615	1					
ANR	3313074	AssignmentExpression	brackets = 0		3312615	2		=			
ANR	3313075	Identifier	brackets		3312615	0					
ANR	3313076	PrimaryExpression	0		3312615	1					
ANR	3313077	ForStatement	for ( s = opcode -> args ; * s != '\\0' ; ++ s )		3312615	2					
ANR	3313078	ForInit	s = opcode -> args ;	589:10:17519:17535	3312615	0	True				
ANR	3313079	AssignmentExpression	s = opcode -> args		3312615	0		=			
ANR	3313080	Identifier	s		3312615	0					
ANR	3313081	PtrMemberAccess	opcode -> args		3312615	1					
ANR	3313082	Identifier	opcode		3312615	0					
ANR	3313083	Identifier	args		3312615	1					
ANR	3313084	Condition	* s != '\\0'	589:28:17537:17546	3312615	1	True				
ANR	3313085	EqualityExpression	* s != '\\0'		3312615	0		!=			
ANR	3313086	UnaryOperationExpression	* s		3312615	0					
ANR	3313087	UnaryOperator	*		3312615	0					
ANR	3313088	Identifier	s		3312615	1					
ANR	3313089	PrimaryExpression	'\\0'		3312615	1					
ANR	3313090	UnaryExpression	++ s	589:40:17549:17551	3312615	2	True				
ANR	3313091	IncDec	++		3312615	0					
ANR	3313092	Identifier	s		3312615	1					
ANR	3313093	CompoundStatement		110:7:3261:3261	3312615	3					
ANR	3313094	WhileStatement	"while ( * s == ',' )"		3312615	0					
ANR	3313095	Condition	"* s == ','"	591:9:17572:17580	3312615	0	True				
ANR	3313096	EqualityExpression	"* s == ','"		3312615	0		==			
ANR	3313097	UnaryOperationExpression	* s		3312615	0					
ANR	3313098	UnaryOperator	*		3312615	0					
ANR	3313099	Identifier	s		3312615	1					
ANR	3313100	PrimaryExpression	"','"		3312615	1					
ANR	3313101	CompoundStatement		112:4:3287:3287	3312615	1					
ANR	3313102	ExpressionStatement	"( * info -> fprintf_func ) ( stream , "","" )"	593:6:17595:17630	3312615	0	True				
ANR	3313103	CallExpression	"( * info -> fprintf_func ) ( stream , "","" )"		3312615	0					
ANR	3313104	Callee	* info -> fprintf_func		3312615	0					
ANR	3313105	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313106	UnaryOperator	*		3312615	0					
ANR	3313107	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313108	Identifier	info		3312615	0					
ANR	3313109	Identifier	fprintf_func		3312615	1					
ANR	3313110	ArgumentList	stream		3312615	1					
ANR	3313111	Argument	stream		3312615	0					
ANR	3313112	Identifier	stream		3312615	0					
ANR	3313113	Argument	""","""		3312615	1					
ANR	3313114	PrimaryExpression	""","""		3312615	0					
ANR	3313115	ExpressionStatement	++ s	594:6:17638:17641	3312615	1	True				
ANR	3313116	UnaryExpression	++ s		3312615	0					
ANR	3313117	IncDec	++		3312615	0					
ANR	3313118	Identifier	s		3312615	1					
ANR	3313119	SwitchStatement	switch ( * s )		3312615	2					
ANR	3313120	Condition	* s	595:14:17657:17658	3312615	0	True				
ANR	3313121	UnaryOperationExpression	* s		3312615	0					
ANR	3313122	UnaryOperator	*		3312615	0					
ANR	3313123	Identifier	s		3312615	1					
ANR	3313124	CompoundStatement		116:8:3369:3369	3312615	1					
ANR	3313125	Label	case 'a' :	597:8:17679:17687	3312615	0	True				
ANR	3313126	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""a"" )"	598:3:17692:17727	3312615	1	True				
ANR	3313127	CallExpression	"( * info -> fprintf_func ) ( stream , ""a"" )"		3312615	0					
ANR	3313128	Callee	* info -> fprintf_func		3312615	0					
ANR	3313129	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313130	UnaryOperator	*		3312615	0					
ANR	3313131	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313132	Identifier	info		3312615	0					
ANR	3313133	Identifier	fprintf_func		3312615	1					
ANR	3313134	ArgumentList	stream		3312615	1					
ANR	3313135	Argument	stream		3312615	0					
ANR	3313136	Identifier	stream		3312615	0					
ANR	3313137	Argument	"""a"""		3312615	1					
ANR	3313138	PrimaryExpression	"""a"""		3312615	0					
ANR	3313139	ExpressionStatement	is_annulled = 1	599:3:17732:17747	3312615	2	True				
ANR	3313140	AssignmentExpression	is_annulled = 1		3312615	0		=			
ANR	3313141	Identifier	is_annulled		3312615	0					
ANR	3313142	PrimaryExpression	1		3312615	1					
ANR	3313143	ExpressionStatement	++ s	600:3:17752:17755	3312615	3	True				
ANR	3313144	UnaryExpression	++ s		3312615	0					
ANR	3313145	IncDec	++		3312615	0					
ANR	3313146	Identifier	s		3312615	1					
ANR	3313147	ContinueStatement	continue ;	601:3:17760:17768	3312615	4	True				
ANR	3313148	Label	case 'N' :	602:8:17778:17786	3312615	5	True				
ANR	3313149	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""pn"" )"	603:3:17791:17827	3312615	6	True				
ANR	3313150	CallExpression	"( * info -> fprintf_func ) ( stream , ""pn"" )"		3312615	0					
ANR	3313151	Callee	* info -> fprintf_func		3312615	0					
ANR	3313152	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313153	UnaryOperator	*		3312615	0					
ANR	3313154	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313155	Identifier	info		3312615	0					
ANR	3313156	Identifier	fprintf_func		3312615	1					
ANR	3313157	ArgumentList	stream		3312615	1					
ANR	3313158	Argument	stream		3312615	0					
ANR	3313159	Identifier	stream		3312615	0					
ANR	3313160	Argument	"""pn"""		3312615	1					
ANR	3313161	PrimaryExpression	"""pn"""		3312615	0					
ANR	3313162	ExpressionStatement	++ s	604:3:17832:17835	3312615	7	True				
ANR	3313163	UnaryExpression	++ s		3312615	0					
ANR	3313164	IncDec	++		3312615	0					
ANR	3313165	Identifier	s		3312615	1					
ANR	3313166	ContinueStatement	continue ;	605:3:17840:17848	3312615	8	True				
ANR	3313167	Label	case 'T' :	607:8:17859:17867	3312615	9	True				
ANR	3313168	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""pt"" )"	608:3:17872:17908	3312615	10	True				
ANR	3313169	CallExpression	"( * info -> fprintf_func ) ( stream , ""pt"" )"		3312615	0					
ANR	3313170	Callee	* info -> fprintf_func		3312615	0					
ANR	3313171	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313172	UnaryOperator	*		3312615	0					
ANR	3313173	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313174	Identifier	info		3312615	0					
ANR	3313175	Identifier	fprintf_func		3312615	1					
ANR	3313176	ArgumentList	stream		3312615	1					
ANR	3313177	Argument	stream		3312615	0					
ANR	3313178	Identifier	stream		3312615	0					
ANR	3313179	Argument	"""pt"""		3312615	1					
ANR	3313180	PrimaryExpression	"""pt"""		3312615	0					
ANR	3313181	ExpressionStatement	++ s	609:3:17913:17916	3312615	11	True				
ANR	3313182	UnaryExpression	++ s		3312615	0					
ANR	3313183	IncDec	++		3312615	0					
ANR	3313184	Identifier	s		3312615	1					
ANR	3313185	ContinueStatement	continue ;	610:3:17921:17929	3312615	12	True				
ANR	3313186	Label	default :	612:8:17940:17947	3312615	13	True				
ANR	3313187	Identifier	default		3312615	0					
ANR	3313188	BreakStatement	break ;	613:3:17952:17957	3312615	14	True				
ANR	3313189	IfStatement	if ( * s != '[' && ! brackets )		3312615	1					
ANR	3313190	Condition	* s != '[' && ! brackets	617:8:17984:18005	3312615	0	True				
ANR	3313191	AndExpression	* s != '[' && ! brackets		3312615	0		&&			
ANR	3313192	EqualityExpression	* s != '['		3312615	0		!=			
ANR	3313193	UnaryOperationExpression	* s		3312615	0					
ANR	3313194	UnaryOperator	*		3312615	0					
ANR	3313195	Identifier	s		3312615	1					
ANR	3313196	PrimaryExpression	'['		3312615	1					
ANR	3313197	UnaryOperationExpression	! brackets		3312615	1					
ANR	3313198	UnaryOperator	!		3312615	0					
ANR	3313199	Identifier	brackets		3312615	1					
ANR	3313200	CompoundStatement		137:32:3708:3708	3312615	1					
ANR	3313201	ExpressionStatement	"( * info -> fprintf_func ) ( stream , "" "" )"	618:8:18018:18053	3312615	0	True				
ANR	3313202	CallExpression	"( * info -> fprintf_func ) ( stream , "" "" )"		3312615	0					
ANR	3313203	Callee	* info -> fprintf_func		3312615	0					
ANR	3313204	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313205	UnaryOperator	*		3312615	0					
ANR	3313206	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313207	Identifier	info		3312615	0					
ANR	3313208	Identifier	fprintf_func		3312615	1					
ANR	3313209	ArgumentList	stream		3312615	1					
ANR	3313210	Argument	stream		3312615	0					
ANR	3313211	Identifier	stream		3312615	0					
ANR	3313212	Argument	""" """		3312615	1					
ANR	3313213	PrimaryExpression	""" """		3312615	0					
ANR	3313214	ElseStatement	else		3312615	0					
ANR	3313215	IfStatement	if ( * s == ']' )		3312615	0					
ANR	3313216	Condition	* s == ']'	619:15:18070:18078	3312615	0	True				
ANR	3313217	EqualityExpression	* s == ']'		3312615	0		==			
ANR	3313218	UnaryOperationExpression	* s		3312615	0					
ANR	3313219	UnaryOperator	*		3312615	0					
ANR	3313220	Identifier	s		3312615	1					
ANR	3313221	PrimaryExpression	']'		3312615	1					
ANR	3313222	CompoundStatement		139:26:3781:3781	3312615	1					
ANR	3313223	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%c"" , * s )"	620:8:18091:18131	3312615	0	True				
ANR	3313224	CallExpression	"( * info -> fprintf_func ) ( stream , ""%c"" , * s )"		3312615	0					
ANR	3313225	Callee	* info -> fprintf_func		3312615	0					
ANR	3313226	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313227	UnaryOperator	*		3312615	0					
ANR	3313228	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313229	Identifier	info		3312615	0					
ANR	3313230	Identifier	fprintf_func		3312615	1					
ANR	3313231	ArgumentList	stream		3312615	1					
ANR	3313232	Argument	stream		3312615	0					
ANR	3313233	Identifier	stream		3312615	0					
ANR	3313234	Argument	"""%c"""		3312615	1					
ANR	3313235	PrimaryExpression	"""%c"""		3312615	0					
ANR	3313236	Argument	* s		3312615	2					
ANR	3313237	UnaryOperationExpression	* s		3312615	0					
ANR	3313238	UnaryOperator	*		3312615	0					
ANR	3313239	Identifier	s		3312615	1					
ANR	3313240	ExpressionStatement	brackets = 0	621:8:18141:18153	3312615	1	True				
ANR	3313241	AssignmentExpression	brackets = 0		3312615	0		=			
ANR	3313242	Identifier	brackets		3312615	0					
ANR	3313243	PrimaryExpression	0		3312615	1					
ANR	3313244	ContinueStatement	continue ;	622:8:18163:18171	3312615	2	True				
ANR	3313245	ElseStatement	else		3312615	0					
ANR	3313246	IfStatement	if ( * s == '[' )		3312615	0					
ANR	3313247	Condition	* s == '['	623:15:18188:18196	3312615	0	True				
ANR	3313248	EqualityExpression	* s == '['		3312615	0		==			
ANR	3313249	UnaryOperationExpression	* s		3312615	0					
ANR	3313250	UnaryOperator	*		3312615	0					
ANR	3313251	Identifier	s		3312615	1					
ANR	3313252	PrimaryExpression	'['		3312615	1					
ANR	3313253	CompoundStatement		143:26:3899:3899	3312615	1					
ANR	3313254	ExpressionStatement	"( * info -> fprintf_func ) ( stream , "" %c"" , * s )"	624:8:18209:18250	3312615	0	True				
ANR	3313255	CallExpression	"( * info -> fprintf_func ) ( stream , "" %c"" , * s )"		3312615	0					
ANR	3313256	Callee	* info -> fprintf_func		3312615	0					
ANR	3313257	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313258	UnaryOperator	*		3312615	0					
ANR	3313259	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313260	Identifier	info		3312615	0					
ANR	3313261	Identifier	fprintf_func		3312615	1					
ANR	3313262	ArgumentList	stream		3312615	1					
ANR	3313263	Argument	stream		3312615	0					
ANR	3313264	Identifier	stream		3312615	0					
ANR	3313265	Argument	""" %c"""		3312615	1					
ANR	3313266	PrimaryExpression	""" %c"""		3312615	0					
ANR	3313267	Argument	* s		3312615	2					
ANR	3313268	UnaryOperationExpression	* s		3312615	0					
ANR	3313269	UnaryOperator	*		3312615	0					
ANR	3313270	Identifier	s		3312615	1					
ANR	3313271	ExpressionStatement	brackets = 1	625:8:18260:18272	3312615	1	True				
ANR	3313272	AssignmentExpression	brackets = 1		3312615	0		=			
ANR	3313273	Identifier	brackets		3312615	0					
ANR	3313274	PrimaryExpression	1		3312615	1					
ANR	3313275	ContinueStatement	continue ;	626:8:18282:18290	3312615	2	True				
ANR	3313276	SwitchStatement	switch ( * s )		3312615	2					
ANR	3313277	Condition	* s	629:10:18309:18310	3312615	0	True				
ANR	3313278	UnaryOperationExpression	* s		3312615	0					
ANR	3313279	UnaryOperator	*		3312615	0					
ANR	3313280	Identifier	s		3312615	1					
ANR	3313281	CompoundStatement		150:4:4017:4017	3312615	1					
ANR	3313282	Label	case '+' :	631:4:18323:18331	3312615	0	True				
ANR	3313283	ExpressionStatement	found_plus = 1	632:6:18339:18353	3312615	1	True				
ANR	3313284	AssignmentExpression	found_plus = 1		3312615	0		=			
ANR	3313285	Identifier	found_plus		3312615	0					
ANR	3313286	PrimaryExpression	1		3312615	1					
ANR	3313287	Label	default :	635:4:18387:18394	3312615	2	True				
ANR	3313288	Identifier	default		3312615	0					
ANR	3313289	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%c"" , * s )"	636:6:18402:18442	3312615	3	True				
ANR	3313290	CallExpression	"( * info -> fprintf_func ) ( stream , ""%c"" , * s )"		3312615	0					
ANR	3313291	Callee	* info -> fprintf_func		3312615	0					
ANR	3313292	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313293	UnaryOperator	*		3312615	0					
ANR	3313294	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313295	Identifier	info		3312615	0					
ANR	3313296	Identifier	fprintf_func		3312615	1					
ANR	3313297	ArgumentList	stream		3312615	1					
ANR	3313298	Argument	stream		3312615	0					
ANR	3313299	Identifier	stream		3312615	0					
ANR	3313300	Argument	"""%c"""		3312615	1					
ANR	3313301	PrimaryExpression	"""%c"""		3312615	0					
ANR	3313302	Argument	* s		3312615	2					
ANR	3313303	UnaryOperationExpression	* s		3312615	0					
ANR	3313304	UnaryOperator	*		3312615	0					
ANR	3313305	Identifier	s		3312615	1					
ANR	3313306	BreakStatement	break ;	637:6:18450:18455	3312615	4	True				
ANR	3313307	Label	case '#' :	639:4:18462:18470	3312615	5	True				
ANR	3313308	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""0"" )"	640:6:18478:18513	3312615	6	True				
ANR	3313309	CallExpression	"( * info -> fprintf_func ) ( stream , ""0"" )"		3312615	0					
ANR	3313310	Callee	* info -> fprintf_func		3312615	0					
ANR	3313311	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313312	UnaryOperator	*		3312615	0					
ANR	3313313	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313314	Identifier	info		3312615	0					
ANR	3313315	Identifier	fprintf_func		3312615	1					
ANR	3313316	ArgumentList	stream		3312615	1					
ANR	3313317	Argument	stream		3312615	0					
ANR	3313318	Identifier	stream		3312615	0					
ANR	3313319	Argument	"""0"""		3312615	1					
ANR	3313320	PrimaryExpression	"""0"""		3312615	0					
ANR	3313321	BreakStatement	break ;	641:6:18521:18526	3312615	7	True				
ANR	3313322	Statement	define	643:1:18530:18535	3312615	8	True				
ANR	3313323	Statement	reg	643:8:18537:18539	3312615	9	True				
ANR	3313324	Statement	(	643:11:18540:18540	3312615	10	True				
ANR	3313325	Statement	n	643:12:18541:18541	3312615	11	True				
ANR	3313326	Statement	)	643:13:18542:18542	3312615	12	True				
ANR	3313327	Statement	(	643:15:18544:18544	3312615	13	True				
ANR	3313328	Statement	*	643:16:18545:18545	3312615	14	True				
ANR	3313329	Statement	info	643:17:18546:18549	3312615	15	True				
ANR	3313330	Statement	->	643:21:18550:18551	3312615	16	True				
ANR	3313331	Statement	fprintf_func	643:23:18552:18563	3312615	17	True				
ANR	3313332	Statement	)	643:35:18564:18564	3312615	18	True				
ANR	3313333	Statement	(	643:37:18566:18566	3312615	19	True				
ANR	3313334	Statement	stream	643:38:18567:18572	3312615	20	True				
ANR	3313335	Statement	","	643:44:18573:18573	3312615	21	True				
ANR	3313336	Statement	"""%%%s"""	643:46:18575:18580	3312615	22	True				
ANR	3313337	Statement	","	643:52:18581:18581	3312615	23	True				
ANR	3313338	Statement	reg_names	643:54:18583:18591	3312615	24	True				
ANR	3313339	Statement	[	643:63:18592:18592	3312615	25	True				
ANR	3313340	Statement	n	643:64:18593:18593	3312615	26	True				
ANR	3313341	Statement	]	643:65:18594:18594	3312615	27	True				
ANR	3313342	Statement	)	643:66:18595:18595	3312615	28	True				
ANR	3313343	Label	case '1' :	644:4:18601:18609	3312615	29	True				
ANR	3313344	Label	case 'r' :	645:4:18615:18623	3312615	30	True				
ANR	3313345	ExpressionStatement	reg ( X_RS1 ( insn ) )	646:6:18631:18649	3312615	31	True				
ANR	3313346	CallExpression	reg ( X_RS1 ( insn ) )		3312615	0					
ANR	3313347	Callee	reg		3312615	0					
ANR	3313348	Identifier	reg		3312615	0					
ANR	3313349	ArgumentList	X_RS1 ( insn )		3312615	1					
ANR	3313350	Argument	X_RS1 ( insn )		3312615	0					
ANR	3313351	CallExpression	X_RS1 ( insn )		3312615	0					
ANR	3313352	Callee	X_RS1		3312615	0					
ANR	3313353	Identifier	X_RS1		3312615	0					
ANR	3313354	ArgumentList	insn		3312615	1					
ANR	3313355	Argument	insn		3312615	0					
ANR	3313356	Identifier	insn		3312615	0					
ANR	3313357	BreakStatement	break ;	647:6:18657:18662	3312615	32	True				
ANR	3313358	Label	case '2' :	649:4:18669:18677	3312615	33	True				
ANR	3313359	Label	case 'O' :	650:4:18683:18691	3312615	34	True				
ANR	3313360	ExpressionStatement	reg ( X_RS2 ( insn ) )	651:6:18699:18717	3312615	35	True				
ANR	3313361	CallExpression	reg ( X_RS2 ( insn ) )		3312615	0					
ANR	3313362	Callee	reg		3312615	0					
ANR	3313363	Identifier	reg		3312615	0					
ANR	3313364	ArgumentList	X_RS2 ( insn )		3312615	1					
ANR	3313365	Argument	X_RS2 ( insn )		3312615	0					
ANR	3313366	CallExpression	X_RS2 ( insn )		3312615	0					
ANR	3313367	Callee	X_RS2		3312615	0					
ANR	3313368	Identifier	X_RS2		3312615	0					
ANR	3313369	ArgumentList	insn		3312615	1					
ANR	3313370	Argument	insn		3312615	0					
ANR	3313371	Identifier	insn		3312615	0					
ANR	3313372	BreakStatement	break ;	652:6:18725:18730	3312615	36	True				
ANR	3313373	Label	case 'd' :	654:4:18737:18745	3312615	37	True				
ANR	3313374	ExpressionStatement	reg ( X_RD ( insn ) )	655:6:18753:18770	3312615	38	True				
ANR	3313375	CallExpression	reg ( X_RD ( insn ) )		3312615	0					
ANR	3313376	Callee	reg		3312615	0					
ANR	3313377	Identifier	reg		3312615	0					
ANR	3313378	ArgumentList	X_RD ( insn )		3312615	1					
ANR	3313379	Argument	X_RD ( insn )		3312615	0					
ANR	3313380	CallExpression	X_RD ( insn )		3312615	0					
ANR	3313381	Callee	X_RD		3312615	0					
ANR	3313382	Identifier	X_RD		3312615	0					
ANR	3313383	ArgumentList	insn		3312615	1					
ANR	3313384	Argument	insn		3312615	0					
ANR	3313385	Identifier	insn		3312615	0					
ANR	3313386	BreakStatement	break ;	656:6:18778:18783	3312615	39	True				
ANR	3313387	Statement	undef	657:1:18786:18790	3312615	40	True				
ANR	3313388	Statement	reg	657:7:18792:18794	3312615	41	True				
ANR	3313389	Statement	define	659:1:18798:18803	3312615	42	True				
ANR	3313390	Statement	freg	659:8:18805:18808	3312615	43	True				
ANR	3313391	Statement	(	659:12:18809:18809	3312615	44	True				
ANR	3313392	Statement	n	659:13:18810:18810	3312615	45	True				
ANR	3313393	Statement	)	659:14:18811:18811	3312615	46	True				
ANR	3313394	Statement	(	659:17:18814:18814	3312615	47	True				
ANR	3313395	Statement	*	659:18:18815:18815	3312615	48	True				
ANR	3313396	Statement	info	659:19:18816:18819	3312615	49	True				
ANR	3313397	Statement	->	659:23:18820:18821	3312615	50	True				
ANR	3313398	Statement	fprintf_func	659:25:18822:18833	3312615	51	True				
ANR	3313399	Statement	)	659:37:18834:18834	3312615	52	True				
ANR	3313400	Statement	(	659:39:18836:18836	3312615	53	True				
ANR	3313401	Statement	stream	659:40:18837:18842	3312615	54	True				
ANR	3313402	Statement	","	659:46:18843:18843	3312615	55	True				
ANR	3313403	Statement	"""%%%s"""	659:48:18845:18850	3312615	56	True				
ANR	3313404	Statement	","	659:54:18851:18851	3312615	57	True				
ANR	3313405	Statement	freg_names	659:56:18853:18862	3312615	58	True				
ANR	3313406	Statement	[	659:66:18863:18863	3312615	59	True				
ANR	3313407	Statement	n	659:67:18864:18864	3312615	60	True				
ANR	3313408	Statement	]	659:68:18865:18865	3312615	61	True				
ANR	3313409	Statement	)	659:69:18866:18866	3312615	62	True				
ANR	3313410	Statement	define	660:1:18869:18874	3312615	63	True				
ANR	3313411	Statement	fregx	660:8:18876:18880	3312615	64	True				
ANR	3313412	Statement	(	660:13:18881:18881	3312615	65	True				
ANR	3313413	Statement	n	660:14:18882:18882	3312615	66	True				
ANR	3313414	Statement	)	660:15:18883:18883	3312615	67	True				
ANR	3313415	Statement	(	660:17:18885:18885	3312615	68	True				
ANR	3313416	Statement	*	660:18:18886:18886	3312615	69	True				
ANR	3313417	Statement	info	660:19:18887:18890	3312615	70	True				
ANR	3313418	Statement	->	660:23:18891:18892	3312615	71	True				
ANR	3313419	Statement	fprintf_func	660:25:18893:18904	3312615	72	True				
ANR	3313420	Statement	)	660:37:18905:18905	3312615	73	True				
ANR	3313421	Statement	(	660:39:18907:18907	3312615	74	True				
ANR	3313422	Statement	stream	660:40:18908:18913	3312615	75	True				
ANR	3313423	Statement	","	660:46:18914:18914	3312615	76	True				
ANR	3313424	Statement	"""%%%s"""	660:48:18916:18921	3312615	77	True				
ANR	3313425	Statement	","	660:54:18922:18922	3312615	78	True				
ANR	3313426	Statement	freg_names	660:56:18924:18933	3312615	79	True				
ANR	3313427	Statement	[	660:66:18934:18934	3312615	80	True				
ANR	3313428	Statement	(	660:67:18935:18935	3312615	81	True				
ANR	3313429	Statement	(	660:68:18936:18936	3312615	82	True				
ANR	3313430	Statement	n	660:69:18937:18937	3312615	83	True				
ANR	3313431	Statement	)	660:70:18938:18938	3312615	84	True				
ANR	3313432	Statement	&	660:72:18940:18940	3312615	85	True				
ANR	3313433	Statement	~1	660:74:18942:18943	3312615	86	True				
ANR	3313434	Statement	)	660:76:18944:18944	3312615	87	True				
ANR	3313435	Statement	|	660:78:18946:18946	3312615	88	True				
ANR	3313436	Statement	(	660:80:18948:18948	3312615	89	True				
ANR	3313437	Statement	(	660:81:18949:18949	3312615	90	True				
ANR	3313438	Statement	(	660:82:18950:18950	3312615	91	True				
ANR	3313439	Statement	n	660:83:18951:18951	3312615	92	True				
ANR	3313440	Statement	)	660:84:18952:18952	3312615	93	True				
ANR	3313441	Statement	&	660:86:18954:18954	3312615	94	True				
ANR	3313442	Statement	1	660:88:18956:18956	3312615	95	True				
ANR	3313443	Statement	)	660:89:18957:18957	3312615	96	True				
ANR	3313444	Statement	<<	660:91:18959:18960	3312615	97	True				
ANR	3313445	Statement	5	660:94:18962:18962	3312615	98	True				
ANR	3313446	Statement	)	660:95:18963:18963	3312615	99	True				
ANR	3313447	Statement	]	660:96:18964:18964	3312615	100	True				
ANR	3313448	Statement	)	660:97:18965:18965	3312615	101	True				
ANR	3313449	Label	case 'e' :	661:4:18971:18979	3312615	102	True				
ANR	3313450	ExpressionStatement	freg ( X_RS1 ( insn ) )	662:6:18987:19006	3312615	103	True				
ANR	3313451	CallExpression	freg ( X_RS1 ( insn ) )		3312615	0					
ANR	3313452	Callee	freg		3312615	0					
ANR	3313453	Identifier	freg		3312615	0					
ANR	3313454	ArgumentList	X_RS1 ( insn )		3312615	1					
ANR	3313455	Argument	X_RS1 ( insn )		3312615	0					
ANR	3313456	CallExpression	X_RS1 ( insn )		3312615	0					
ANR	3313457	Callee	X_RS1		3312615	0					
ANR	3313458	Identifier	X_RS1		3312615	0					
ANR	3313459	ArgumentList	insn		3312615	1					
ANR	3313460	Argument	insn		3312615	0					
ANR	3313461	Identifier	insn		3312615	0					
ANR	3313462	BreakStatement	break ;	663:6:19014:19019	3312615	104	True				
ANR	3313463	Label	case 'v' :	664:4:19025:19033	3312615	105	True				
ANR	3313464	Label	case 'V' :	665:4:19059:19067	3312615	106	True				
ANR	3313465	ExpressionStatement	fregx ( X_RS1 ( insn ) )	666:6:19102:19122	3312615	107	True				
ANR	3313466	CallExpression	fregx ( X_RS1 ( insn ) )		3312615	0					
ANR	3313467	Callee	fregx		3312615	0					
ANR	3313468	Identifier	fregx		3312615	0					
ANR	3313469	ArgumentList	X_RS1 ( insn )		3312615	1					
ANR	3313470	Argument	X_RS1 ( insn )		3312615	0					
ANR	3313471	CallExpression	X_RS1 ( insn )		3312615	0					
ANR	3313472	Callee	X_RS1		3312615	0					
ANR	3313473	Identifier	X_RS1		3312615	0					
ANR	3313474	ArgumentList	insn		3312615	1					
ANR	3313475	Argument	insn		3312615	0					
ANR	3313476	Identifier	insn		3312615	0					
ANR	3313477	BreakStatement	break ;	667:6:19130:19135	3312615	108	True				
ANR	3313478	Label	case 'f' :	669:4:19142:19150	3312615	109	True				
ANR	3313479	ExpressionStatement	freg ( X_RS2 ( insn ) )	670:6:19158:19177	3312615	110	True				
ANR	3313480	CallExpression	freg ( X_RS2 ( insn ) )		3312615	0					
ANR	3313481	Callee	freg		3312615	0					
ANR	3313482	Identifier	freg		3312615	0					
ANR	3313483	ArgumentList	X_RS2 ( insn )		3312615	1					
ANR	3313484	Argument	X_RS2 ( insn )		3312615	0					
ANR	3313485	CallExpression	X_RS2 ( insn )		3312615	0					
ANR	3313486	Callee	X_RS2		3312615	0					
ANR	3313487	Identifier	X_RS2		3312615	0					
ANR	3313488	ArgumentList	insn		3312615	1					
ANR	3313489	Argument	insn		3312615	0					
ANR	3313490	Identifier	insn		3312615	0					
ANR	3313491	BreakStatement	break ;	671:6:19185:19190	3312615	111	True				
ANR	3313492	Label	case 'B' :	672:4:19196:19204	3312615	112	True				
ANR	3313493	Label	case 'R' :	673:4:19230:19238	3312615	113	True				
ANR	3313494	ExpressionStatement	fregx ( X_RS2 ( insn ) )	674:6:19273:19293	3312615	114	True				
ANR	3313495	CallExpression	fregx ( X_RS2 ( insn ) )		3312615	0					
ANR	3313496	Callee	fregx		3312615	0					
ANR	3313497	Identifier	fregx		3312615	0					
ANR	3313498	ArgumentList	X_RS2 ( insn )		3312615	1					
ANR	3313499	Argument	X_RS2 ( insn )		3312615	0					
ANR	3313500	CallExpression	X_RS2 ( insn )		3312615	0					
ANR	3313501	Callee	X_RS2		3312615	0					
ANR	3313502	Identifier	X_RS2		3312615	0					
ANR	3313503	ArgumentList	insn		3312615	1					
ANR	3313504	Argument	insn		3312615	0					
ANR	3313505	Identifier	insn		3312615	0					
ANR	3313506	BreakStatement	break ;	675:6:19301:19306	3312615	115	True				
ANR	3313507	Label	case 'g' :	677:4:19313:19321	3312615	116	True				
ANR	3313508	ExpressionStatement	freg ( X_RD ( insn ) )	678:6:19329:19347	3312615	117	True				
ANR	3313509	CallExpression	freg ( X_RD ( insn ) )		3312615	0					
ANR	3313510	Callee	freg		3312615	0					
ANR	3313511	Identifier	freg		3312615	0					
ANR	3313512	ArgumentList	X_RD ( insn )		3312615	1					
ANR	3313513	Argument	X_RD ( insn )		3312615	0					
ANR	3313514	CallExpression	X_RD ( insn )		3312615	0					
ANR	3313515	Callee	X_RD		3312615	0					
ANR	3313516	Identifier	X_RD		3312615	0					
ANR	3313517	ArgumentList	insn		3312615	1					
ANR	3313518	Argument	insn		3312615	0					
ANR	3313519	Identifier	insn		3312615	0					
ANR	3313520	BreakStatement	break ;	679:6:19355:19360	3312615	118	True				
ANR	3313521	Label	case 'H' :	680:4:19366:19374	3312615	119	True				
ANR	3313522	Label	case 'J' :	681:4:19400:19408	3312615	120	True				
ANR	3313523	ExpressionStatement	fregx ( X_RD ( insn ) )	682:6:19443:19462	3312615	121	True				
ANR	3313524	CallExpression	fregx ( X_RD ( insn ) )		3312615	0					
ANR	3313525	Callee	fregx		3312615	0					
ANR	3313526	Identifier	fregx		3312615	0					
ANR	3313527	ArgumentList	X_RD ( insn )		3312615	1					
ANR	3313528	Argument	X_RD ( insn )		3312615	0					
ANR	3313529	CallExpression	X_RD ( insn )		3312615	0					
ANR	3313530	Callee	X_RD		3312615	0					
ANR	3313531	Identifier	X_RD		3312615	0					
ANR	3313532	ArgumentList	insn		3312615	1					
ANR	3313533	Argument	insn		3312615	0					
ANR	3313534	Identifier	insn		3312615	0					
ANR	3313535	BreakStatement	break ;	683:6:19470:19475	3312615	122	True				
ANR	3313536	Statement	undef	684:1:19478:19482	3312615	123	True				
ANR	3313537	Statement	freg	684:7:19484:19487	3312615	124	True				
ANR	3313538	Statement	undef	685:1:19490:19494	3312615	125	True				
ANR	3313539	Statement	fregx	685:7:19496:19500	3312615	126	True				
ANR	3313540	Statement	define	687:1:19504:19509	3312615	127	True				
ANR	3313541	Statement	creg	687:8:19511:19514	3312615	128	True				
ANR	3313542	Statement	(	687:12:19515:19515	3312615	129	True				
ANR	3313543	Statement	n	687:13:19516:19516	3312615	130	True				
ANR	3313544	Statement	)	687:14:19517:19517	3312615	131	True				
ANR	3313545	Statement	(	687:16:19519:19519	3312615	132	True				
ANR	3313546	Statement	*	687:17:19520:19520	3312615	133	True				
ANR	3313547	Statement	info	687:18:19521:19524	3312615	134	True				
ANR	3313548	Statement	->	687:22:19525:19526	3312615	135	True				
ANR	3313549	Statement	fprintf_func	687:24:19527:19538	3312615	136	True				
ANR	3313550	Statement	)	687:36:19539:19539	3312615	137	True				
ANR	3313551	Statement	(	687:38:19541:19541	3312615	138	True				
ANR	3313552	Statement	stream	687:39:19542:19547	3312615	139	True				
ANR	3313553	Statement	","	687:45:19548:19548	3312615	140	True				
ANR	3313554	Statement	"""%%c%u"""	687:47:19550:19556	3312615	141	True				
ANR	3313555	Statement	","	687:54:19557:19557	3312615	142	True				
ANR	3313556	Statement	(	687:56:19559:19559	3312615	143	True				
ANR	3313557	Statement	unsigned	687:57:19560:19567	3312615	144	True				
ANR	3313558	Statement	int	687:66:19569:19571	3312615	145	True				
ANR	3313559	Statement	)	687:69:19572:19572	3312615	146	True				
ANR	3313560	Statement	(	687:71:19574:19574	3312615	147	True				
ANR	3313561	Statement	n	687:72:19575:19575	3312615	148	True				
ANR	3313562	Statement	)	687:73:19576:19576	3312615	149	True				
ANR	3313563	Statement	)	687:74:19577:19577	3312615	150	True				
ANR	3313564	Label	case 'b' :	688:4:19583:19591	3312615	151	True				
ANR	3313565	ExpressionStatement	creg ( X_RS1 ( insn ) )	689:6:19599:19618	3312615	152	True				
ANR	3313566	CallExpression	creg ( X_RS1 ( insn ) )		3312615	0					
ANR	3313567	Callee	creg		3312615	0					
ANR	3313568	Identifier	creg		3312615	0					
ANR	3313569	ArgumentList	X_RS1 ( insn )		3312615	1					
ANR	3313570	Argument	X_RS1 ( insn )		3312615	0					
ANR	3313571	CallExpression	X_RS1 ( insn )		3312615	0					
ANR	3313572	Callee	X_RS1		3312615	0					
ANR	3313573	Identifier	X_RS1		3312615	0					
ANR	3313574	ArgumentList	insn		3312615	1					
ANR	3313575	Argument	insn		3312615	0					
ANR	3313576	Identifier	insn		3312615	0					
ANR	3313577	BreakStatement	break ;	690:6:19626:19631	3312615	153	True				
ANR	3313578	Label	case 'c' :	692:4:19638:19646	3312615	154	True				
ANR	3313579	ExpressionStatement	creg ( X_RS2 ( insn ) )	693:6:19654:19673	3312615	155	True				
ANR	3313580	CallExpression	creg ( X_RS2 ( insn ) )		3312615	0					
ANR	3313581	Callee	creg		3312615	0					
ANR	3313582	Identifier	creg		3312615	0					
ANR	3313583	ArgumentList	X_RS2 ( insn )		3312615	1					
ANR	3313584	Argument	X_RS2 ( insn )		3312615	0					
ANR	3313585	CallExpression	X_RS2 ( insn )		3312615	0					
ANR	3313586	Callee	X_RS2		3312615	0					
ANR	3313587	Identifier	X_RS2		3312615	0					
ANR	3313588	ArgumentList	insn		3312615	1					
ANR	3313589	Argument	insn		3312615	0					
ANR	3313590	Identifier	insn		3312615	0					
ANR	3313591	BreakStatement	break ;	694:6:19681:19686	3312615	156	True				
ANR	3313592	Label	case 'D' :	696:4:19693:19701	3312615	157	True				
ANR	3313593	ExpressionStatement	creg ( X_RD ( insn ) )	697:6:19709:19727	3312615	158	True				
ANR	3313594	CallExpression	creg ( X_RD ( insn ) )		3312615	0					
ANR	3313595	Callee	creg		3312615	0					
ANR	3313596	Identifier	creg		3312615	0					
ANR	3313597	ArgumentList	X_RD ( insn )		3312615	1					
ANR	3313598	Argument	X_RD ( insn )		3312615	0					
ANR	3313599	CallExpression	X_RD ( insn )		3312615	0					
ANR	3313600	Callee	X_RD		3312615	0					
ANR	3313601	Identifier	X_RD		3312615	0					
ANR	3313602	ArgumentList	insn		3312615	1					
ANR	3313603	Argument	insn		3312615	0					
ANR	3313604	Identifier	insn		3312615	0					
ANR	3313605	BreakStatement	break ;	698:6:19735:19740	3312615	159	True				
ANR	3313606	Statement	undef	699:1:19743:19747	3312615	160	True				
ANR	3313607	Statement	creg	699:7:19749:19752	3312615	161	True				
ANR	3313608	Label	case 'h' :	701:4:19759:19767	3312615	162	True				
ANR	3313609	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%hi(%#x)"" , ( ( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( insn ) << 10 ) ) )"	702:6:19775:19891	3312615	163	True				
ANR	3313610	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%hi(%#x)"" , ( ( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( insn ) << 10 ) ) )"		3312615	0					
ANR	3313611	Callee	* info -> fprintf_func		3312615	0					
ANR	3313612	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313613	UnaryOperator	*		3312615	0					
ANR	3313614	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313615	Identifier	info		3312615	0					
ANR	3313616	Identifier	fprintf_func		3312615	1					
ANR	3313617	ArgumentList	stream		3312615	1					
ANR	3313618	Argument	stream		3312615	0					
ANR	3313619	Identifier	stream		3312615	0					
ANR	3313620	Argument	"""%%hi(%#x)"""		3312615	1					
ANR	3313621	PrimaryExpression	"""%%hi(%#x)"""		3312615	0					
ANR	3313622	Argument	( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( insn ) << 10 )		3312615	2					
ANR	3313623	BitAndExpression	( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( insn ) << 10 )		3312615	0		&			
ANR	3313624	CastExpression	( unsigned ) 0xFFFFFFFF		3312615	0					
ANR	3313625	CastTarget	unsigned		3312615	0					
ANR	3313626	PrimaryExpression	0xFFFFFFFF		3312615	1					
ANR	3313627	ShiftExpression	( int ) X_IMM22 ( insn ) << 10		3312615	1		<<			
ANR	3313628	CastExpression	( int ) X_IMM22 ( insn )		3312615	0					
ANR	3313629	CastTarget	int		3312615	0					
ANR	3313630	CallExpression	X_IMM22 ( insn )		3312615	1					
ANR	3313631	Callee	X_IMM22		3312615	0					
ANR	3313632	Identifier	X_IMM22		3312615	0					
ANR	3313633	ArgumentList	insn		3312615	1					
ANR	3313634	Argument	insn		3312615	0					
ANR	3313635	Identifier	insn		3312615	0					
ANR	3313636	PrimaryExpression	10		3312615	1					
ANR	3313637	BreakStatement	break ;	705:6:19899:19904	3312615	164	True				
ANR	3313638	Label	case 'i' :	707:4:19911:19919	3312615	165	True				
ANR	3313639	Label	case 'I' :	708:4:19950:19958	3312615	166	True				
ANR	3313640	Label	case 'j' :	709:4:19989:19997	3312615	167	True				
ANR	3313641	CompoundStatement		231:8:5740:5747	3312615	168					
ANR	3313642	IdentifierDeclStatement	int imm ;	711:8:20040:20047	3312615	0	True				
ANR	3313643	IdentifierDecl	imm		3312615	0					
ANR	3313644	IdentifierDeclType	int		3312615	0					
ANR	3313645	Identifier	imm		3312615	1					
ANR	3313646	IfStatement	if ( * s == 'i' )		3312615	1					
ANR	3313647	Condition	* s == 'i'	713:12:20062:20070	3312615	0	True				
ANR	3313648	EqualityExpression	* s == 'i'		3312615	0		==			
ANR	3313649	UnaryOperationExpression	* s		3312615	0					
ANR	3313650	UnaryOperator	*		3312615	0					
ANR	3313651	Identifier	s		3312615	1					
ANR	3313652	PrimaryExpression	'i'		3312615	1					
ANR	3313653	CompoundStatement		233:23:5773:5773	3312615	1					
ANR	3313654	ExpressionStatement	"imm = X_SIMM ( insn , 13 )"	714:9:20084:20107	3312615	0	True				
ANR	3313655	AssignmentExpression	"imm = X_SIMM ( insn , 13 )"		3312615	0		=			
ANR	3313656	Identifier	imm		3312615	0					
ANR	3313657	CallExpression	"X_SIMM ( insn , 13 )"		3312615	1					
ANR	3313658	Callee	X_SIMM		3312615	0					
ANR	3313659	Identifier	X_SIMM		3312615	0					
ANR	3313660	ArgumentList	insn		3312615	1					
ANR	3313661	Argument	insn		3312615	0					
ANR	3313662	Identifier	insn		3312615	0					
ANR	3313663	Argument	13		3312615	1					
ANR	3313664	PrimaryExpression	13		3312615	0					
ANR	3313665	ElseStatement	else		3312615	0					
ANR	3313666	IfStatement	if ( * s == 'I' )		3312615	0					
ANR	3313667	Condition	* s == 'I'	715:19:20128:20136	3312615	0	True				
ANR	3313668	EqualityExpression	* s == 'I'		3312615	0		==			
ANR	3313669	UnaryOperationExpression	* s		3312615	0					
ANR	3313670	UnaryOperator	*		3312615	0					
ANR	3313671	Identifier	s		3312615	1					
ANR	3313672	PrimaryExpression	'I'		3312615	1					
ANR	3313673	CompoundStatement		235:30:5839:5839	3312615	1					
ANR	3313674	ExpressionStatement	"imm = X_SIMM ( insn , 11 )"	716:9:20150:20173	3312615	0	True				
ANR	3313675	AssignmentExpression	"imm = X_SIMM ( insn , 11 )"		3312615	0		=			
ANR	3313676	Identifier	imm		3312615	0					
ANR	3313677	CallExpression	"X_SIMM ( insn , 11 )"		3312615	1					
ANR	3313678	Callee	X_SIMM		3312615	0					
ANR	3313679	Identifier	X_SIMM		3312615	0					
ANR	3313680	ArgumentList	insn		3312615	1					
ANR	3313681	Argument	insn		3312615	0					
ANR	3313682	Identifier	insn		3312615	0					
ANR	3313683	Argument	11		3312615	1					
ANR	3313684	PrimaryExpression	11		3312615	0					
ANR	3313685	ElseStatement	else		3312615	0					
ANR	3313686	CompoundStatement		237:15:5890:5890	3312615	0					
ANR	3313687	ExpressionStatement	"imm = X_SIMM ( insn , 10 )"	718:9:20201:20224	3312615	0	True				
ANR	3313688	AssignmentExpression	"imm = X_SIMM ( insn , 10 )"		3312615	0		=			
ANR	3313689	Identifier	imm		3312615	0					
ANR	3313690	CallExpression	"X_SIMM ( insn , 10 )"		3312615	1					
ANR	3313691	Callee	X_SIMM		3312615	0					
ANR	3313692	Identifier	X_SIMM		3312615	0					
ANR	3313693	ArgumentList	insn		3312615	1					
ANR	3313694	Argument	insn		3312615	0					
ANR	3313695	Identifier	insn		3312615	0					
ANR	3313696	Argument	10		3312615	1					
ANR	3313697	PrimaryExpression	10		3312615	0					
ANR	3313698	IfStatement	if ( found_plus )		3312615	2					
ANR	3313699	Condition	found_plus	728:12:20490:20499	3312615	0	True				
ANR	3313700	Identifier	found_plus		3312615	0					
ANR	3313701	CompoundStatement		248:24:6202:6202	3312615	1					
ANR	3313702	ExpressionStatement	imm_added_to_rs1 = 1	729:9:20513:20533	3312615	0	True				
ANR	3313703	AssignmentExpression	imm_added_to_rs1 = 1		3312615	0		=			
ANR	3313704	Identifier	imm_added_to_rs1		3312615	0					
ANR	3313705	PrimaryExpression	1		3312615	1					
ANR	3313706	IfStatement	if ( imm <= 9 )		3312615	3					
ANR	3313707	Condition	imm <= 9	732:12:20558:20565	3312615	0	True				
ANR	3313708	RelationalExpression	imm <= 9		3312615	0		<=			
ANR	3313709	Identifier	imm		3312615	0					
ANR	3313710	PrimaryExpression	9		3312615	1					
ANR	3313711	CompoundStatement		252:22:6268:6268	3312615	1					
ANR	3313712	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%d"" , imm )"	733:9:20579:20620	3312615	0	True				
ANR	3313713	CallExpression	"( * info -> fprintf_func ) ( stream , ""%d"" , imm )"		3312615	0					
ANR	3313714	Callee	* info -> fprintf_func		3312615	0					
ANR	3313715	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313716	UnaryOperator	*		3312615	0					
ANR	3313717	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313718	Identifier	info		3312615	0					
ANR	3313719	Identifier	fprintf_func		3312615	1					
ANR	3313720	ArgumentList	stream		3312615	1					
ANR	3313721	Argument	stream		3312615	0					
ANR	3313722	Identifier	stream		3312615	0					
ANR	3313723	Argument	"""%d"""		3312615	1					
ANR	3313724	PrimaryExpression	"""%d"""		3312615	0					
ANR	3313725	Argument	imm		3312615	2					
ANR	3313726	Identifier	imm		3312615	0					
ANR	3313727	ElseStatement	else		3312615	0					
ANR	3313728	CompoundStatement		254:15:6337:6337	3312615	0					
ANR	3313729	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%#x"" , imm )"	735:9:20648:20690	3312615	0	True				
ANR	3313730	CallExpression	"( * info -> fprintf_func ) ( stream , ""%#x"" , imm )"		3312615	0					
ANR	3313731	Callee	* info -> fprintf_func		3312615	0					
ANR	3313732	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3313733	UnaryOperator	*		3312615	0					
ANR	3313734	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3313735	Identifier	info		3312615	0					
ANR	3313736	Identifier	fprintf_func		3312615	1					
ANR	3313737	ArgumentList	stream		3312615	1					
ANR	3313738	Argument	stream		3312615	0					
ANR	3313739	Identifier	stream		3312615	0					
ANR	3313740	Argument	"""%#x"""		3312615	1					
ANR	3313741	PrimaryExpression	"""%#x"""		3312615	0					
ANR	3313742	Argument	imm		3312615	2					
ANR	3313743	Identifier	imm		3312615	0					
ANR	3313744	BreakStatement	break ;	738:6:20716:20721	3312615	169	True				
ANR	3313745	Label	case 'X' :	740:4:20728:20736	3312615	170	True				
ANR	3313746	Label	case 'Y' :	741:4:20775:20783	3312615	171	True				
ANR	3313747	CompoundStatement		263:8:6534:6575	3312615	172					
ANR	3313748	IdentifierDeclStatement	"int imm = X_IMM ( insn , * s == 'X' ? 5 : 6 ) ;"	743:8:20834:20875	3312615	0	True				
ANR	3313749	IdentifierDecl	"imm = X_IMM ( insn , * s == 'X' ? 5 : 6 )"		3312615	0					
ANR	3313750	IdentifierDeclType	int		3312615	0					
ANR	3313751	Identifier	imm		3312615	1					
ANR	3313752	AssignmentExpression	"imm = X_IMM ( insn , * s == 'X' ? 5 : 6 )"		3312615	2		=			
ANR	3313753	Identifier	imm		3312615	0					
ANR	3313754	CallExpression	"X_IMM ( insn , * s == 'X' ? 5 : 6 )"		3312615	1					
ANR	3313755	Callee	X_IMM		3312615	0					
ANR	3313756	Identifier	X_IMM		3312615	0					
ANR	3313757	ArgumentList	insn		3312615	1					
ANR	3313758	Argument	insn		3312615	0					
ANR	3313759	Identifier	insn		3312615	0					
ANR	3313760	Argument	* s == 'X' ? 5 : 6		3312615	1					
ANR	3313761	ConditionalExpression	* s == 'X' ? 5 : 6		3312615	0					
ANR	3313762	Condition	* s == 'X'		3312615	0					
ANR	3313763	EqualityExpression	* s == 'X'		3312615	0		==			
ANR	3313764	UnaryOperationExpression	* s		3312615	0					
ANR	3313765	UnaryOperator	*		3312615	0					
ANR	3313766	Identifier	s		3312615	1					
ANR	3313767	PrimaryExpression	'X'		3312615	1					
ANR	3313768	PrimaryExpression	5		3312615	1					
ANR	3313769	PrimaryExpression	6		3312615	2					
ANR	3313770	IfStatement	if ( imm <= 9 )		3312615	1					
ANR	3313771	Condition	imm <= 9	745:12:20890:20897	3312615	0	True				
ANR	3313772	RelationalExpression	imm <= 9		3312615	0		<=			
ANR	3313773	Identifier	imm		3312615	0					
ANR	3313774	PrimaryExpression	9		3312615	1					
ANR	3313775	CompoundStatement		265:22:6600:6600	3312615	1					
ANR	3313776	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""%d"" , imm )"	746:9:20911:20951	3312615	0	True				
ANR	3313777	CallExpression	"( info -> fprintf_func ) ( stream , ""%d"" , imm )"		3312615	0					
ANR	3313778	Callee	info -> fprintf_func		3312615	0					
ANR	3313779	PtrMemberAccess	info -> fprintf_func		3312615	0					
ANR	3313780	Identifier	info		3312615	0					
ANR	3313781	Identifier	fprintf_func		3312615	1					
ANR	3313782	ArgumentList	stream		3312615	1					
ANR	3313783	Argument	stream		3312615	0					
ANR	3313784	Identifier	stream		3312615	0					
ANR	3313785	Argument	"""%d"""		3312615	1					
ANR	3313786	PrimaryExpression	"""%d"""		3312615	0					
ANR	3313787	Argument	imm		3312615	2					
ANR	3313788	Identifier	imm		3312615	0					
ANR	3313789	ElseStatement	else		3312615	0					
ANR	3313790	CompoundStatement		267:15:6668:6668	3312615	0					
ANR	3313791	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""%#x"" , ( unsigned ) imm )"	748:9:20979:21030	3312615	0	True				
ANR	3313792	CallExpression	"( info -> fprintf_func ) ( stream , ""%#x"" , ( unsigned ) imm )"		3312615	0					
ANR	3313793	Callee	info -> fprintf_func		3312615	0					
ANR	3313794	PtrMemberAccess	info -> fprintf_func		3312615	0					
ANR	3313795	Identifier	info		3312615	0					
ANR	3313796	Identifier	fprintf_func		3312615	1					
ANR	3313797	ArgumentList	stream		3312615	1					
ANR	3313798	Argument	stream		3312615	0					
ANR	3313799	Identifier	stream		3312615	0					
ANR	3313800	Argument	"""%#x"""		3312615	1					
ANR	3313801	PrimaryExpression	"""%#x"""		3312615	0					
ANR	3313802	Argument	( unsigned ) imm		3312615	2					
ANR	3313803	CastExpression	( unsigned ) imm		3312615	0					
ANR	3313804	CastTarget	unsigned		3312615	0					
ANR	3313805	Identifier	imm		3312615	1					
ANR	3313806	BreakStatement	break ;	751:6:21056:21061	3312615	173	True				
ANR	3313807	Label	case '3' :	753:4:21068:21076	3312615	174	True				
ANR	3313808	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""%ld"" , X_IMM ( insn , 3 ) )"	754:6:21084:21137	3312615	175	True				
ANR	3313809	CallExpression	"( info -> fprintf_func ) ( stream , ""%ld"" , X_IMM ( insn , 3 ) )"		3312615	0					
ANR	3313810	Callee	info -> fprintf_func		3312615	0					
ANR	3313811	PtrMemberAccess	info -> fprintf_func		3312615	0					
ANR	3313812	Identifier	info		3312615	0					
ANR	3313813	Identifier	fprintf_func		3312615	1					
ANR	3313814	ArgumentList	stream		3312615	1					
ANR	3313815	Argument	stream		3312615	0					
ANR	3313816	Identifier	stream		3312615	0					
ANR	3313817	Argument	"""%ld"""		3312615	1					
ANR	3313818	PrimaryExpression	"""%ld"""		3312615	0					
ANR	3313819	Argument	"X_IMM ( insn , 3 )"		3312615	2					
ANR	3313820	CallExpression	"X_IMM ( insn , 3 )"		3312615	0					
ANR	3313821	Callee	X_IMM		3312615	0					
ANR	3313822	Identifier	X_IMM		3312615	0					
ANR	3313823	ArgumentList	insn		3312615	1					
ANR	3313824	Argument	insn		3312615	0					
ANR	3313825	Identifier	insn		3312615	0					
ANR	3313826	Argument	3		3312615	1					
ANR	3313827	PrimaryExpression	3		3312615	0					
ANR	3313828	BreakStatement	break ;	755:6:21145:21150	3312615	176	True				
ANR	3313829	Label	case 'K' :	757:4:21157:21165	3312615	177	True				
ANR	3313830	CompoundStatement		281:8:6960:6976	3312615	178					
ANR	3313831	IdentifierDeclStatement	int mask = X_MEMBAR ( insn ) ;	759:8:21183:21209	3312615	0	True				
ANR	3313832	IdentifierDecl	mask = X_MEMBAR ( insn )		3312615	0					
ANR	3313833	IdentifierDeclType	int		3312615	0					
ANR	3313834	Identifier	mask		3312615	1					
ANR	3313835	AssignmentExpression	mask = X_MEMBAR ( insn )		3312615	2		=			
ANR	3313836	Identifier	mask		3312615	0					
ANR	3313837	CallExpression	X_MEMBAR ( insn )		3312615	1					
ANR	3313838	Callee	X_MEMBAR		3312615	0					
ANR	3313839	Identifier	X_MEMBAR		3312615	0					
ANR	3313840	ArgumentList	insn		3312615	1					
ANR	3313841	Argument	insn		3312615	0					
ANR	3313842	Identifier	insn		3312615	0					
ANR	3313843	IdentifierDeclStatement	"int bit = 0x40 , printed_one = 0 ;"	760:8:21219:21250	3312615	1	True				
ANR	3313844	IdentifierDecl	bit = 0x40		3312615	0					
ANR	3313845	IdentifierDeclType	int		3312615	0					
ANR	3313846	Identifier	bit		3312615	1					
ANR	3313847	AssignmentExpression	bit = 0x40		3312615	2		=			
ANR	3313848	Identifier	bit		3312615	0					
ANR	3313849	PrimaryExpression	0x40		3312615	1					
ANR	3313850	IdentifierDecl	printed_one = 0		3312615	1					
ANR	3313851	IdentifierDeclType	int		3312615	0					
ANR	3313852	Identifier	printed_one		3312615	1					
ANR	3313853	AssignmentExpression	printed_one = 0		3312615	2		=			
ANR	3313854	Identifier	printed_one		3312615	0					
ANR	3313855	PrimaryExpression	0		3312615	1					
ANR	3313856	IdentifierDeclStatement	const char * name ;	761:8:21260:21276	3312615	2	True				
ANR	3313857	IdentifierDecl	* name		3312615	0					
ANR	3313858	IdentifierDeclType	const char *		3312615	0					
ANR	3313859	Identifier	name		3312615	1					
ANR	3313860	IfStatement	if ( mask == 0 )		3312615	3					
ANR	3313861	Condition	mask == 0	763:12:21291:21299	3312615	0	True				
ANR	3313862	EqualityExpression	mask == 0		3312615	0		==			
ANR	3313863	Identifier	mask		3312615	0					
ANR	3313864	PrimaryExpression	0		3312615	1					
ANR	3313865	CompoundStatement		283:23:7002:7002	3312615	1					
ANR	3313866	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""0"" )"	764:9:21313:21347	3312615	0	True				
ANR	3313867	CallExpression	"( info -> fprintf_func ) ( stream , ""0"" )"		3312615	0					
ANR	3313868	Callee	info -> fprintf_func		3312615	0					
ANR	3313869	PtrMemberAccess	info -> fprintf_func		3312615	0					
ANR	3313870	Identifier	info		3312615	0					
ANR	3313871	Identifier	fprintf_func		3312615	1					
ANR	3313872	ArgumentList	stream		3312615	1					
ANR	3313873	Argument	stream		3312615	0					
ANR	3313874	Identifier	stream		3312615	0					
ANR	3313875	Argument	"""0"""		3312615	1					
ANR	3313876	PrimaryExpression	"""0"""		3312615	0					
ANR	3313877	ElseStatement	else		3312615	0					
ANR	3313878	CompoundStatement		285:15:7064:7064	3312615	0					
ANR	3313879	WhileStatement	while ( bit )		3312615	0					
ANR	3313880	Condition	bit	766:16:21382:21384	3312615	0	True				
ANR	3313881	Identifier	bit		3312615	0					
ANR	3313882	CompoundStatement		286:21:7087:7087	3312615	1					
ANR	3313883	IfStatement	if ( mask & bit )		3312615	0					
ANR	3313884	Condition	mask & bit	767:14:21403:21412	3312615	0	True				
ANR	3313885	BitAndExpression	mask & bit		3312615	0		&			
ANR	3313886	Identifier	mask		3312615	0					
ANR	3313887	Identifier	bit		3312615	1					
ANR	3313888	CompoundStatement		287:26:7115:7115	3312615	1					
ANR	3313889	IfStatement	if ( printed_one )		3312615	0					
ANR	3313890	Condition	printed_one	768:15:21432:21442	3312615	0	True				
ANR	3313891	Identifier	printed_one		3312615	0					
ANR	3313892	CompoundStatement		288:28:7145:7145	3312615	1					
ANR	3313893	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""|"" )"	769:12:21459:21493	3312615	0	True				
ANR	3313894	CallExpression	"( info -> fprintf_func ) ( stream , ""|"" )"		3312615	0					
ANR	3313895	Callee	info -> fprintf_func		3312615	0					
ANR	3313896	PtrMemberAccess	info -> fprintf_func		3312615	0					
ANR	3313897	Identifier	info		3312615	0					
ANR	3313898	Identifier	fprintf_func		3312615	1					
ANR	3313899	ArgumentList	stream		3312615	1					
ANR	3313900	Argument	stream		3312615	0					
ANR	3313901	Identifier	stream		3312615	0					
ANR	3313902	Argument	"""|"""		3312615	1					
ANR	3313903	PrimaryExpression	"""|"""		3312615	0					
ANR	3313904	ExpressionStatement	name = sparc_decode_membar ( bit )	771:11:21519:21551	3312615	1	True				
ANR	3313905	AssignmentExpression	name = sparc_decode_membar ( bit )		3312615	0		=			
ANR	3313906	Identifier	name		3312615	0					
ANR	3313907	CallExpression	sparc_decode_membar ( bit )		3312615	1					
ANR	3313908	Callee	sparc_decode_membar		3312615	0					
ANR	3313909	Identifier	sparc_decode_membar		3312615	0					
ANR	3313910	ArgumentList	bit		3312615	1					
ANR	3313911	Argument	bit		3312615	0					
ANR	3313912	Identifier	bit		3312615	0					
ANR	3313913	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""%s"" , name )"	772:11:21564:21605	3312615	2	True				
ANR	3313914	CallExpression	"( info -> fprintf_func ) ( stream , ""%s"" , name )"		3312615	0					
ANR	3313915	Callee	info -> fprintf_func		3312615	0					
ANR	3313916	PtrMemberAccess	info -> fprintf_func		3312615	0					
ANR	3313917	Identifier	info		3312615	0					
ANR	3313918	Identifier	fprintf_func		3312615	1					
ANR	3313919	ArgumentList	stream		3312615	1					
ANR	3313920	Argument	stream		3312615	0					
ANR	3313921	Identifier	stream		3312615	0					
ANR	3313922	Argument	"""%s"""		3312615	1					
ANR	3313923	PrimaryExpression	"""%s"""		3312615	0					
ANR	3313924	Argument	name		3312615	2					
ANR	3313925	Identifier	name		3312615	0					
ANR	3313926	ExpressionStatement	printed_one = 1	773:11:21618:21633	3312615	3	True				
ANR	3313927	AssignmentExpression	printed_one = 1		3312615	0		=			
ANR	3313928	Identifier	printed_one		3312615	0					
ANR	3313929	PrimaryExpression	1		3312615	1					
ANR	3313930	ExpressionStatement	bit >>= 1	775:10:21657:21666	3312615	1	True				
ANR	3313931	AssignmentExpression	bit >>= 1		3312615	0		>>=			
ANR	3313932	Identifier	bit		3312615	0					
ANR	3313933	PrimaryExpression	1		3312615	1					
ANR	3313934	BreakStatement	break ;	778:8:21697:21702	3312615	4	True				
ANR	3313935	Label	case 'k' :	781:4:21717:21725	3312615	179	True				
ANR	3313936	ExpressionStatement	"info -> target = memaddr + SEX ( X_DISP16 ( insn ) , 16 ) * 4"	782:6:21733:21787	3312615	180	True				
ANR	3313937	AssignmentExpression	"info -> target = memaddr + SEX ( X_DISP16 ( insn ) , 16 ) * 4"		3312615	0		=			
ANR	3313938	PtrMemberAccess	info -> target		3312615	0					
ANR	3313939	Identifier	info		3312615	0					
ANR	3313940	Identifier	target		3312615	1					
ANR	3313941	AdditiveExpression	"memaddr + SEX ( X_DISP16 ( insn ) , 16 ) * 4"		3312615	1		+			
ANR	3313942	Identifier	memaddr		3312615	0					
ANR	3313943	MultiplicativeExpression	"SEX ( X_DISP16 ( insn ) , 16 ) * 4"		3312615	1		*			
ANR	3313944	CallExpression	"SEX ( X_DISP16 ( insn ) , 16 )"		3312615	0					
ANR	3313945	Callee	SEX		3312615	0					
ANR	3313946	Identifier	SEX		3312615	0					
ANR	3313947	ArgumentList	X_DISP16 ( insn )		3312615	1					
ANR	3313948	Argument	X_DISP16 ( insn )		3312615	0					
ANR	3313949	CallExpression	X_DISP16 ( insn )		3312615	0					
ANR	3313950	Callee	X_DISP16		3312615	0					
ANR	3313951	Identifier	X_DISP16		3312615	0					
ANR	3313952	ArgumentList	insn		3312615	1					
ANR	3313953	Argument	insn		3312615	0					
ANR	3313954	Identifier	insn		3312615	0					
ANR	3313955	Argument	16		3312615	1					
ANR	3313956	PrimaryExpression	16		3312615	0					
ANR	3313957	PrimaryExpression	4		3312615	1					
ANR	3313958	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	783:6:21795:21843	3312615	181	True				
ANR	3313959	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		3312615	0					
ANR	3313960	Callee	* info -> print_address_func		3312615	0					
ANR	3313961	UnaryOperationExpression	* info -> print_address_func		3312615	0					
ANR	3313962	UnaryOperator	*		3312615	0					
ANR	3313963	PtrMemberAccess	info -> print_address_func		3312615	1					
ANR	3313964	Identifier	info		3312615	0					
ANR	3313965	Identifier	print_address_func		3312615	1					
ANR	3313966	ArgumentList	info -> target		3312615	1					
ANR	3313967	Argument	info -> target		3312615	0					
ANR	3313968	PtrMemberAccess	info -> target		3312615	0					
ANR	3313969	Identifier	info		3312615	0					
ANR	3313970	Identifier	target		3312615	1					
ANR	3313971	Argument	info		3312615	1					
ANR	3313972	Identifier	info		3312615	0					
ANR	3313973	BreakStatement	break ;	784:6:21851:21856	3312615	182	True				
ANR	3313974	Label	case 'G' :	786:4:21863:21871	3312615	183	True				
ANR	3313975	ExpressionStatement	"info -> target = memaddr + SEX ( X_DISP19 ( insn ) , 19 ) * 4"	787:6:21879:21933	3312615	184	True				
ANR	3313976	AssignmentExpression	"info -> target = memaddr + SEX ( X_DISP19 ( insn ) , 19 ) * 4"		3312615	0		=			
ANR	3313977	PtrMemberAccess	info -> target		3312615	0					
ANR	3313978	Identifier	info		3312615	0					
ANR	3313979	Identifier	target		3312615	1					
ANR	3313980	AdditiveExpression	"memaddr + SEX ( X_DISP19 ( insn ) , 19 ) * 4"		3312615	1		+			
ANR	3313981	Identifier	memaddr		3312615	0					
ANR	3313982	MultiplicativeExpression	"SEX ( X_DISP19 ( insn ) , 19 ) * 4"		3312615	1		*			
ANR	3313983	CallExpression	"SEX ( X_DISP19 ( insn ) , 19 )"		3312615	0					
ANR	3313984	Callee	SEX		3312615	0					
ANR	3313985	Identifier	SEX		3312615	0					
ANR	3313986	ArgumentList	X_DISP19 ( insn )		3312615	1					
ANR	3313987	Argument	X_DISP19 ( insn )		3312615	0					
ANR	3313988	CallExpression	X_DISP19 ( insn )		3312615	0					
ANR	3313989	Callee	X_DISP19		3312615	0					
ANR	3313990	Identifier	X_DISP19		3312615	0					
ANR	3313991	ArgumentList	insn		3312615	1					
ANR	3313992	Argument	insn		3312615	0					
ANR	3313993	Identifier	insn		3312615	0					
ANR	3313994	Argument	19		3312615	1					
ANR	3313995	PrimaryExpression	19		3312615	0					
ANR	3313996	PrimaryExpression	4		3312615	1					
ANR	3313997	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	788:6:21941:21989	3312615	185	True				
ANR	3313998	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		3312615	0					
ANR	3313999	Callee	* info -> print_address_func		3312615	0					
ANR	3314000	UnaryOperationExpression	* info -> print_address_func		3312615	0					
ANR	3314001	UnaryOperator	*		3312615	0					
ANR	3314002	PtrMemberAccess	info -> print_address_func		3312615	1					
ANR	3314003	Identifier	info		3312615	0					
ANR	3314004	Identifier	print_address_func		3312615	1					
ANR	3314005	ArgumentList	info -> target		3312615	1					
ANR	3314006	Argument	info -> target		3312615	0					
ANR	3314007	PtrMemberAccess	info -> target		3312615	0					
ANR	3314008	Identifier	info		3312615	0					
ANR	3314009	Identifier	target		3312615	1					
ANR	3314010	Argument	info		3312615	1					
ANR	3314011	Identifier	info		3312615	0					
ANR	3314012	BreakStatement	break ;	789:6:21997:22002	3312615	186	True				
ANR	3314013	Label	case '6' :	791:4:22009:22017	3312615	187	True				
ANR	3314014	Label	case '7' :	792:4:22023:22031	3312615	188	True				
ANR	3314015	Label	case '8' :	793:4:22037:22045	3312615	189	True				
ANR	3314016	Label	case '9' :	794:4:22051:22059	3312615	190	True				
ANR	3314017	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%fcc%c"" , * s - '6' + '0' )"	795:6:22067:22124	3312615	191	True				
ANR	3314018	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%fcc%c"" , * s - '6' + '0' )"		3312615	0					
ANR	3314019	Callee	* info -> fprintf_func		3312615	0					
ANR	3314020	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314021	UnaryOperator	*		3312615	0					
ANR	3314022	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314023	Identifier	info		3312615	0					
ANR	3314024	Identifier	fprintf_func		3312615	1					
ANR	3314025	ArgumentList	stream		3312615	1					
ANR	3314026	Argument	stream		3312615	0					
ANR	3314027	Identifier	stream		3312615	0					
ANR	3314028	Argument	"""%%fcc%c"""		3312615	1					
ANR	3314029	PrimaryExpression	"""%%fcc%c"""		3312615	0					
ANR	3314030	Argument	* s - '6' + '0'		3312615	2					
ANR	3314031	AdditiveExpression	* s - '6' + '0'		3312615	0		-			
ANR	3314032	UnaryOperationExpression	* s		3312615	0					
ANR	3314033	UnaryOperator	*		3312615	0					
ANR	3314034	Identifier	s		3312615	1					
ANR	3314035	AdditiveExpression	'6' + '0'		3312615	1		+			
ANR	3314036	PrimaryExpression	'6'		3312615	0					
ANR	3314037	PrimaryExpression	'0'		3312615	1					
ANR	3314038	BreakStatement	break ;	796:6:22132:22137	3312615	192	True				
ANR	3314039	Label	case 'z' :	798:4:22144:22152	3312615	193	True				
ANR	3314040	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%icc"" )"	799:6:22160:22199	3312615	194	True				
ANR	3314041	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%icc"" )"		3312615	0					
ANR	3314042	Callee	* info -> fprintf_func		3312615	0					
ANR	3314043	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314044	UnaryOperator	*		3312615	0					
ANR	3314045	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314046	Identifier	info		3312615	0					
ANR	3314047	Identifier	fprintf_func		3312615	1					
ANR	3314048	ArgumentList	stream		3312615	1					
ANR	3314049	Argument	stream		3312615	0					
ANR	3314050	Identifier	stream		3312615	0					
ANR	3314051	Argument	"""%%icc"""		3312615	1					
ANR	3314052	PrimaryExpression	"""%%icc"""		3312615	0					
ANR	3314053	BreakStatement	break ;	800:6:22207:22212	3312615	195	True				
ANR	3314054	Label	case 'Z' :	802:4:22219:22227	3312615	196	True				
ANR	3314055	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%xcc"" )"	803:6:22235:22274	3312615	197	True				
ANR	3314056	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%xcc"" )"		3312615	0					
ANR	3314057	Callee	* info -> fprintf_func		3312615	0					
ANR	3314058	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314059	UnaryOperator	*		3312615	0					
ANR	3314060	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314061	Identifier	info		3312615	0					
ANR	3314062	Identifier	fprintf_func		3312615	1					
ANR	3314063	ArgumentList	stream		3312615	1					
ANR	3314064	Argument	stream		3312615	0					
ANR	3314065	Identifier	stream		3312615	0					
ANR	3314066	Argument	"""%%xcc"""		3312615	1					
ANR	3314067	PrimaryExpression	"""%%xcc"""		3312615	0					
ANR	3314068	BreakStatement	break ;	804:6:22282:22287	3312615	198	True				
ANR	3314069	Label	case 'E' :	806:4:22294:22302	3312615	199	True				
ANR	3314070	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%ccr"" )"	807:6:22310:22349	3312615	200	True				
ANR	3314071	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%ccr"" )"		3312615	0					
ANR	3314072	Callee	* info -> fprintf_func		3312615	0					
ANR	3314073	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314074	UnaryOperator	*		3312615	0					
ANR	3314075	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314076	Identifier	info		3312615	0					
ANR	3314077	Identifier	fprintf_func		3312615	1					
ANR	3314078	ArgumentList	stream		3312615	1					
ANR	3314079	Argument	stream		3312615	0					
ANR	3314080	Identifier	stream		3312615	0					
ANR	3314081	Argument	"""%%ccr"""		3312615	1					
ANR	3314082	PrimaryExpression	"""%%ccr"""		3312615	0					
ANR	3314083	BreakStatement	break ;	808:6:22357:22362	3312615	201	True				
ANR	3314084	Label	case 's' :	810:4:22369:22377	3312615	202	True				
ANR	3314085	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%fprs"" )"	811:6:22385:22425	3312615	203	True				
ANR	3314086	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%fprs"" )"		3312615	0					
ANR	3314087	Callee	* info -> fprintf_func		3312615	0					
ANR	3314088	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314089	UnaryOperator	*		3312615	0					
ANR	3314090	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314091	Identifier	info		3312615	0					
ANR	3314092	Identifier	fprintf_func		3312615	1					
ANR	3314093	ArgumentList	stream		3312615	1					
ANR	3314094	Argument	stream		3312615	0					
ANR	3314095	Identifier	stream		3312615	0					
ANR	3314096	Argument	"""%%fprs"""		3312615	1					
ANR	3314097	PrimaryExpression	"""%%fprs"""		3312615	0					
ANR	3314098	BreakStatement	break ;	812:6:22433:22438	3312615	204	True				
ANR	3314099	Label	case 'o' :	814:4:22445:22453	3312615	205	True				
ANR	3314100	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%asi"" )"	815:6:22461:22500	3312615	206	True				
ANR	3314101	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%asi"" )"		3312615	0					
ANR	3314102	Callee	* info -> fprintf_func		3312615	0					
ANR	3314103	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314104	UnaryOperator	*		3312615	0					
ANR	3314105	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314106	Identifier	info		3312615	0					
ANR	3314107	Identifier	fprintf_func		3312615	1					
ANR	3314108	ArgumentList	stream		3312615	1					
ANR	3314109	Argument	stream		3312615	0					
ANR	3314110	Identifier	stream		3312615	0					
ANR	3314111	Argument	"""%%asi"""		3312615	1					
ANR	3314112	PrimaryExpression	"""%%asi"""		3312615	0					
ANR	3314113	BreakStatement	break ;	816:6:22508:22513	3312615	207	True				
ANR	3314114	Label	case 'W' :	818:4:22520:22528	3312615	208	True				
ANR	3314115	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%tick"" )"	819:6:22536:22576	3312615	209	True				
ANR	3314116	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%tick"" )"		3312615	0					
ANR	3314117	Callee	* info -> fprintf_func		3312615	0					
ANR	3314118	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314119	UnaryOperator	*		3312615	0					
ANR	3314120	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314121	Identifier	info		3312615	0					
ANR	3314122	Identifier	fprintf_func		3312615	1					
ANR	3314123	ArgumentList	stream		3312615	1					
ANR	3314124	Argument	stream		3312615	0					
ANR	3314125	Identifier	stream		3312615	0					
ANR	3314126	Argument	"""%%tick"""		3312615	1					
ANR	3314127	PrimaryExpression	"""%%tick"""		3312615	0					
ANR	3314128	BreakStatement	break ;	820:6:22584:22589	3312615	210	True				
ANR	3314129	Label	case 'P' :	822:4:22596:22604	3312615	211	True				
ANR	3314130	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%pc"" )"	823:6:22612:22650	3312615	212	True				
ANR	3314131	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%pc"" )"		3312615	0					
ANR	3314132	Callee	* info -> fprintf_func		3312615	0					
ANR	3314133	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314134	UnaryOperator	*		3312615	0					
ANR	3314135	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314136	Identifier	info		3312615	0					
ANR	3314137	Identifier	fprintf_func		3312615	1					
ANR	3314138	ArgumentList	stream		3312615	1					
ANR	3314139	Argument	stream		3312615	0					
ANR	3314140	Identifier	stream		3312615	0					
ANR	3314141	Argument	"""%%pc"""		3312615	1					
ANR	3314142	PrimaryExpression	"""%%pc"""		3312615	0					
ANR	3314143	BreakStatement	break ;	824:6:22658:22663	3312615	213	True				
ANR	3314144	Label	case '?' :	826:4:22670:22678	3312615	214	True				
ANR	3314145	IfStatement	if ( X_RS1 ( insn ) == 31 )		3312615	215					
ANR	3314146	Condition	X_RS1 ( insn ) == 31	827:9:22689:22706	3312615	0	True				
ANR	3314147	EqualityExpression	X_RS1 ( insn ) == 31		3312615	0		==			
ANR	3314148	CallExpression	X_RS1 ( insn )		3312615	0					
ANR	3314149	Callee	X_RS1		3312615	0					
ANR	3314150	Identifier	X_RS1		3312615	0					
ANR	3314151	ArgumentList	insn		3312615	1					
ANR	3314152	Argument	insn		3312615	0					
ANR	3314153	Identifier	insn		3312615	0					
ANR	3314154	PrimaryExpression	31		3312615	1					
ANR	3314155	CompoundStatement		347:29:8409:8409	3312615	1					
ANR	3314156	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%ver"" )"	828:6:22717:22756	3312615	0	True				
ANR	3314157	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%ver"" )"		3312615	0					
ANR	3314158	Callee	* info -> fprintf_func		3312615	0					
ANR	3314159	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314160	UnaryOperator	*		3312615	0					
ANR	3314161	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314162	Identifier	info		3312615	0					
ANR	3314163	Identifier	fprintf_func		3312615	1					
ANR	3314164	ArgumentList	stream		3312615	1					
ANR	3314165	Argument	stream		3312615	0					
ANR	3314166	Identifier	stream		3312615	0					
ANR	3314167	Argument	"""%%ver"""		3312615	1					
ANR	3314168	PrimaryExpression	"""%%ver"""		3312615	0					
ANR	3314169	ElseStatement	else		3312615	0					
ANR	3314170	IfStatement	if ( ( unsigned ) X_RS1 ( insn ) < 17 )		3312615	0					
ANR	3314171	Condition	( unsigned ) X_RS1 ( insn ) < 17	829:16:22774:22800	3312615	0	True				
ANR	3314172	RelationalExpression	( unsigned ) X_RS1 ( insn ) < 17		3312615	0		<			
ANR	3314173	CastExpression	( unsigned ) X_RS1 ( insn )		3312615	0					
ANR	3314174	CastTarget	unsigned		3312615	0					
ANR	3314175	CallExpression	X_RS1 ( insn )		3312615	1					
ANR	3314176	Callee	X_RS1		3312615	0					
ANR	3314177	Identifier	X_RS1		3312615	0					
ANR	3314178	ArgumentList	insn		3312615	1					
ANR	3314179	Argument	insn		3312615	0					
ANR	3314180	Identifier	insn		3312615	0					
ANR	3314181	PrimaryExpression	17		3312615	1					
ANR	3314182	CompoundStatement		349:45:8503:8503	3312615	1					
ANR	3314183	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_priv_reg_names [ X_RS1 ( insn ) ] )"	830:6:22811:22889	3312615	0	True				
ANR	3314184	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_priv_reg_names [ X_RS1 ( insn ) ] )"		3312615	0					
ANR	3314185	Callee	* info -> fprintf_func		3312615	0					
ANR	3314186	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314187	UnaryOperator	*		3312615	0					
ANR	3314188	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314189	Identifier	info		3312615	0					
ANR	3314190	Identifier	fprintf_func		3312615	1					
ANR	3314191	ArgumentList	stream		3312615	1					
ANR	3314192	Argument	stream		3312615	0					
ANR	3314193	Identifier	stream		3312615	0					
ANR	3314194	Argument	"""%%%s"""		3312615	1					
ANR	3314195	PrimaryExpression	"""%%%s"""		3312615	0					
ANR	3314196	Argument	v9_priv_reg_names [ X_RS1 ( insn ) ]		3312615	2					
ANR	3314197	ArrayIndexing	v9_priv_reg_names [ X_RS1 ( insn ) ]		3312615	0					
ANR	3314198	Identifier	v9_priv_reg_names		3312615	0					
ANR	3314199	CallExpression	X_RS1 ( insn )		3312615	1					
ANR	3314200	Callee	X_RS1		3312615	0					
ANR	3314201	Identifier	X_RS1		3312615	0					
ANR	3314202	ArgumentList	insn		3312615	1					
ANR	3314203	Argument	insn		3312615	0					
ANR	3314204	Identifier	insn		3312615	0					
ANR	3314205	ElseStatement	else		3312615	0					
ANR	3314206	CompoundStatement		352:12:8603:8603	3312615	0					
ANR	3314207	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	833:6:22911:22955	3312615	0	True				
ANR	3314208	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		3312615	0					
ANR	3314209	Callee	* info -> fprintf_func		3312615	0					
ANR	3314210	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314211	UnaryOperator	*		3312615	0					
ANR	3314212	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314213	Identifier	info		3312615	0					
ANR	3314214	Identifier	fprintf_func		3312615	1					
ANR	3314215	ArgumentList	stream		3312615	1					
ANR	3314216	Argument	stream		3312615	0					
ANR	3314217	Identifier	stream		3312615	0					
ANR	3314218	Argument	"""%%reserved"""		3312615	1					
ANR	3314219	PrimaryExpression	"""%%reserved"""		3312615	0					
ANR	3314220	BreakStatement	break ;	835:5:22969:22974	3312615	216	True				
ANR	3314221	Label	case '!' :	837:4:22981:22989	3312615	217	True				
ANR	3314222	IfStatement	if ( ( unsigned ) X_RD ( insn ) < 17 )		3312615	218					
ANR	3314223	Condition	( unsigned ) X_RD ( insn ) < 17	838:9:23000:23025	3312615	0	True				
ANR	3314224	RelationalExpression	( unsigned ) X_RD ( insn ) < 17		3312615	0		<			
ANR	3314225	CastExpression	( unsigned ) X_RD ( insn )		3312615	0					
ANR	3314226	CastTarget	unsigned		3312615	0					
ANR	3314227	CallExpression	X_RD ( insn )		3312615	1					
ANR	3314228	Callee	X_RD		3312615	0					
ANR	3314229	Identifier	X_RD		3312615	0					
ANR	3314230	ArgumentList	insn		3312615	1					
ANR	3314231	Argument	insn		3312615	0					
ANR	3314232	Identifier	insn		3312615	0					
ANR	3314233	PrimaryExpression	17		3312615	1					
ANR	3314234	CompoundStatement		358:37:8728:8728	3312615	1					
ANR	3314235	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_priv_reg_names [ X_RD ( insn ) ] )"	839:6:23036:23113	3312615	0	True				
ANR	3314236	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_priv_reg_names [ X_RD ( insn ) ] )"		3312615	0					
ANR	3314237	Callee	* info -> fprintf_func		3312615	0					
ANR	3314238	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314239	UnaryOperator	*		3312615	0					
ANR	3314240	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314241	Identifier	info		3312615	0					
ANR	3314242	Identifier	fprintf_func		3312615	1					
ANR	3314243	ArgumentList	stream		3312615	1					
ANR	3314244	Argument	stream		3312615	0					
ANR	3314245	Identifier	stream		3312615	0					
ANR	3314246	Argument	"""%%%s"""		3312615	1					
ANR	3314247	PrimaryExpression	"""%%%s"""		3312615	0					
ANR	3314248	Argument	v9_priv_reg_names [ X_RD ( insn ) ]		3312615	2					
ANR	3314249	ArrayIndexing	v9_priv_reg_names [ X_RD ( insn ) ]		3312615	0					
ANR	3314250	Identifier	v9_priv_reg_names		3312615	0					
ANR	3314251	CallExpression	X_RD ( insn )		3312615	1					
ANR	3314252	Callee	X_RD		3312615	0					
ANR	3314253	Identifier	X_RD		3312615	0					
ANR	3314254	ArgumentList	insn		3312615	1					
ANR	3314255	Argument	insn		3312615	0					
ANR	3314256	Identifier	insn		3312615	0					
ANR	3314257	ElseStatement	else		3312615	0					
ANR	3314258	CompoundStatement		361:12:8827:8827	3312615	0					
ANR	3314259	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	842:6:23135:23179	3312615	0	True				
ANR	3314260	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		3312615	0					
ANR	3314261	Callee	* info -> fprintf_func		3312615	0					
ANR	3314262	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314263	UnaryOperator	*		3312615	0					
ANR	3314264	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314265	Identifier	info		3312615	0					
ANR	3314266	Identifier	fprintf_func		3312615	1					
ANR	3314267	ArgumentList	stream		3312615	1					
ANR	3314268	Argument	stream		3312615	0					
ANR	3314269	Identifier	stream		3312615	0					
ANR	3314270	Argument	"""%%reserved"""		3312615	1					
ANR	3314271	PrimaryExpression	"""%%reserved"""		3312615	0					
ANR	3314272	BreakStatement	break ;	844:5:23193:23198	3312615	219	True				
ANR	3314273	Label	case '$' :	846:4:23205:23213	3312615	220	True				
ANR	3314274	IfStatement	if ( ( unsigned ) X_RS1 ( insn ) < 32 )		3312615	221					
ANR	3314275	Condition	( unsigned ) X_RS1 ( insn ) < 32	847:9:23224:23250	3312615	0	True				
ANR	3314276	RelationalExpression	( unsigned ) X_RS1 ( insn ) < 32		3312615	0		<			
ANR	3314277	CastExpression	( unsigned ) X_RS1 ( insn )		3312615	0					
ANR	3314278	CastTarget	unsigned		3312615	0					
ANR	3314279	CallExpression	X_RS1 ( insn )		3312615	1					
ANR	3314280	Callee	X_RS1		3312615	0					
ANR	3314281	Identifier	X_RS1		3312615	0					
ANR	3314282	ArgumentList	insn		3312615	1					
ANR	3314283	Argument	insn		3312615	0					
ANR	3314284	Identifier	insn		3312615	0					
ANR	3314285	PrimaryExpression	32		3312615	1					
ANR	3314286	CompoundStatement		367:38:8953:8953	3312615	1					
ANR	3314287	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_hpriv_reg_names [ X_RS1 ( insn ) ] )"	848:6:23261:23340	3312615	0	True				
ANR	3314288	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_hpriv_reg_names [ X_RS1 ( insn ) ] )"		3312615	0					
ANR	3314289	Callee	* info -> fprintf_func		3312615	0					
ANR	3314290	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314291	UnaryOperator	*		3312615	0					
ANR	3314292	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314293	Identifier	info		3312615	0					
ANR	3314294	Identifier	fprintf_func		3312615	1					
ANR	3314295	ArgumentList	stream		3312615	1					
ANR	3314296	Argument	stream		3312615	0					
ANR	3314297	Identifier	stream		3312615	0					
ANR	3314298	Argument	"""%%%s"""		3312615	1					
ANR	3314299	PrimaryExpression	"""%%%s"""		3312615	0					
ANR	3314300	Argument	v9_hpriv_reg_names [ X_RS1 ( insn ) ]		3312615	2					
ANR	3314301	ArrayIndexing	v9_hpriv_reg_names [ X_RS1 ( insn ) ]		3312615	0					
ANR	3314302	Identifier	v9_hpriv_reg_names		3312615	0					
ANR	3314303	CallExpression	X_RS1 ( insn )		3312615	1					
ANR	3314304	Callee	X_RS1		3312615	0					
ANR	3314305	Identifier	X_RS1		3312615	0					
ANR	3314306	ArgumentList	insn		3312615	1					
ANR	3314307	Argument	insn		3312615	0					
ANR	3314308	Identifier	insn		3312615	0					
ANR	3314309	ElseStatement	else		3312615	0					
ANR	3314310	CompoundStatement		370:12:9054:9054	3312615	0					
ANR	3314311	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	851:6:23362:23406	3312615	0	True				
ANR	3314312	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		3312615	0					
ANR	3314313	Callee	* info -> fprintf_func		3312615	0					
ANR	3314314	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314315	UnaryOperator	*		3312615	0					
ANR	3314316	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314317	Identifier	info		3312615	0					
ANR	3314318	Identifier	fprintf_func		3312615	1					
ANR	3314319	ArgumentList	stream		3312615	1					
ANR	3314320	Argument	stream		3312615	0					
ANR	3314321	Identifier	stream		3312615	0					
ANR	3314322	Argument	"""%%reserved"""		3312615	1					
ANR	3314323	PrimaryExpression	"""%%reserved"""		3312615	0					
ANR	3314324	BreakStatement	break ;	853:5:23420:23425	3312615	222	True				
ANR	3314325	Label	case '%' :	855:4:23432:23440	3312615	223	True				
ANR	3314326	IfStatement	if ( ( unsigned ) X_RD ( insn ) < 32 )		3312615	224					
ANR	3314327	Condition	( unsigned ) X_RD ( insn ) < 32	856:9:23451:23476	3312615	0	True				
ANR	3314328	RelationalExpression	( unsigned ) X_RD ( insn ) < 32		3312615	0		<			
ANR	3314329	CastExpression	( unsigned ) X_RD ( insn )		3312615	0					
ANR	3314330	CastTarget	unsigned		3312615	0					
ANR	3314331	CallExpression	X_RD ( insn )		3312615	1					
ANR	3314332	Callee	X_RD		3312615	0					
ANR	3314333	Identifier	X_RD		3312615	0					
ANR	3314334	ArgumentList	insn		3312615	1					
ANR	3314335	Argument	insn		3312615	0					
ANR	3314336	Identifier	insn		3312615	0					
ANR	3314337	PrimaryExpression	32		3312615	1					
ANR	3314338	CompoundStatement		376:37:9179:9179	3312615	1					
ANR	3314339	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_hpriv_reg_names [ X_RD ( insn ) ] )"	857:6:23487:23565	3312615	0	True				
ANR	3314340	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_hpriv_reg_names [ X_RD ( insn ) ] )"		3312615	0					
ANR	3314341	Callee	* info -> fprintf_func		3312615	0					
ANR	3314342	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314343	UnaryOperator	*		3312615	0					
ANR	3314344	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314345	Identifier	info		3312615	0					
ANR	3314346	Identifier	fprintf_func		3312615	1					
ANR	3314347	ArgumentList	stream		3312615	1					
ANR	3314348	Argument	stream		3312615	0					
ANR	3314349	Identifier	stream		3312615	0					
ANR	3314350	Argument	"""%%%s"""		3312615	1					
ANR	3314351	PrimaryExpression	"""%%%s"""		3312615	0					
ANR	3314352	Argument	v9_hpriv_reg_names [ X_RD ( insn ) ]		3312615	2					
ANR	3314353	ArrayIndexing	v9_hpriv_reg_names [ X_RD ( insn ) ]		3312615	0					
ANR	3314354	Identifier	v9_hpriv_reg_names		3312615	0					
ANR	3314355	CallExpression	X_RD ( insn )		3312615	1					
ANR	3314356	Callee	X_RD		3312615	0					
ANR	3314357	Identifier	X_RD		3312615	0					
ANR	3314358	ArgumentList	insn		3312615	1					
ANR	3314359	Argument	insn		3312615	0					
ANR	3314360	Identifier	insn		3312615	0					
ANR	3314361	ElseStatement	else		3312615	0					
ANR	3314362	CompoundStatement		379:12:9279:9279	3312615	0					
ANR	3314363	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	860:6:23587:23631	3312615	0	True				
ANR	3314364	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		3312615	0					
ANR	3314365	Callee	* info -> fprintf_func		3312615	0					
ANR	3314366	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314367	UnaryOperator	*		3312615	0					
ANR	3314368	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314369	Identifier	info		3312615	0					
ANR	3314370	Identifier	fprintf_func		3312615	1					
ANR	3314371	ArgumentList	stream		3312615	1					
ANR	3314372	Argument	stream		3312615	0					
ANR	3314373	Identifier	stream		3312615	0					
ANR	3314374	Argument	"""%%reserved"""		3312615	1					
ANR	3314375	PrimaryExpression	"""%%reserved"""		3312615	0					
ANR	3314376	BreakStatement	break ;	862:5:23645:23650	3312615	225	True				
ANR	3314377	Label	case '/' :	864:4:23657:23665	3312615	226	True				
ANR	3314378	IfStatement	if ( X_RS1 ( insn ) < 16 || X_RS1 ( insn ) > 25 )		3312615	227					
ANR	3314379	Condition	X_RS1 ( insn ) < 16 || X_RS1 ( insn ) > 25	865:9:23676:23713	3312615	0	True				
ANR	3314380	OrExpression	X_RS1 ( insn ) < 16 || X_RS1 ( insn ) > 25		3312615	0		||			
ANR	3314381	RelationalExpression	X_RS1 ( insn ) < 16		3312615	0		<			
ANR	3314382	CallExpression	X_RS1 ( insn )		3312615	0					
ANR	3314383	Callee	X_RS1		3312615	0					
ANR	3314384	Identifier	X_RS1		3312615	0					
ANR	3314385	ArgumentList	insn		3312615	1					
ANR	3314386	Argument	insn		3312615	0					
ANR	3314387	Identifier	insn		3312615	0					
ANR	3314388	PrimaryExpression	16		3312615	1					
ANR	3314389	RelationalExpression	X_RS1 ( insn ) > 25		3312615	1		>			
ANR	3314390	CallExpression	X_RS1 ( insn )		3312615	0					
ANR	3314391	Callee	X_RS1		3312615	0					
ANR	3314392	Identifier	X_RS1		3312615	0					
ANR	3314393	ArgumentList	insn		3312615	1					
ANR	3314394	Argument	insn		3312615	0					
ANR	3314395	Identifier	insn		3312615	0					
ANR	3314396	PrimaryExpression	25		3312615	1					
ANR	3314397	CompoundStatement		385:49:9416:9416	3312615	1					
ANR	3314398	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	866:6:23724:23768	3312615	0	True				
ANR	3314399	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		3312615	0					
ANR	3314400	Callee	* info -> fprintf_func		3312615	0					
ANR	3314401	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314402	UnaryOperator	*		3312615	0					
ANR	3314403	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314404	Identifier	info		3312615	0					
ANR	3314405	Identifier	fprintf_func		3312615	1					
ANR	3314406	ArgumentList	stream		3312615	1					
ANR	3314407	Argument	stream		3312615	0					
ANR	3314408	Identifier	stream		3312615	0					
ANR	3314409	Argument	"""%%reserved"""		3312615	1					
ANR	3314410	PrimaryExpression	"""%%reserved"""		3312615	0					
ANR	3314411	ElseStatement	else		3312615	0					
ANR	3314412	CompoundStatement		387:12:9482:9482	3312615	0					
ANR	3314413	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9a_asr_reg_names [ X_RS1 ( insn ) - 16 ] )"	868:6:23790:23873	3312615	0	True				
ANR	3314414	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9a_asr_reg_names [ X_RS1 ( insn ) - 16 ] )"		3312615	0					
ANR	3314415	Callee	* info -> fprintf_func		3312615	0					
ANR	3314416	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314417	UnaryOperator	*		3312615	0					
ANR	3314418	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314419	Identifier	info		3312615	0					
ANR	3314420	Identifier	fprintf_func		3312615	1					
ANR	3314421	ArgumentList	stream		3312615	1					
ANR	3314422	Argument	stream		3312615	0					
ANR	3314423	Identifier	stream		3312615	0					
ANR	3314424	Argument	"""%%%s"""		3312615	1					
ANR	3314425	PrimaryExpression	"""%%%s"""		3312615	0					
ANR	3314426	Argument	v9a_asr_reg_names [ X_RS1 ( insn ) - 16 ]		3312615	2					
ANR	3314427	ArrayIndexing	v9a_asr_reg_names [ X_RS1 ( insn ) - 16 ]		3312615	0					
ANR	3314428	Identifier	v9a_asr_reg_names		3312615	0					
ANR	3314429	AdditiveExpression	X_RS1 ( insn ) - 16		3312615	1		-			
ANR	3314430	CallExpression	X_RS1 ( insn )		3312615	0					
ANR	3314431	Callee	X_RS1		3312615	0					
ANR	3314432	Identifier	X_RS1		3312615	0					
ANR	3314433	ArgumentList	insn		3312615	1					
ANR	3314434	Argument	insn		3312615	0					
ANR	3314435	Identifier	insn		3312615	0					
ANR	3314436	PrimaryExpression	16		3312615	1					
ANR	3314437	BreakStatement	break ;	871:5:23887:23892	3312615	228	True				
ANR	3314438	Label	case '_' :	873:4:23899:23907	3312615	229	True				
ANR	3314439	IfStatement	if ( X_RD ( insn ) < 16 || X_RD ( insn ) > 25 )		3312615	230					
ANR	3314440	Condition	X_RD ( insn ) < 16 || X_RD ( insn ) > 25	874:9:23918:23953	3312615	0	True				
ANR	3314441	OrExpression	X_RD ( insn ) < 16 || X_RD ( insn ) > 25		3312615	0		||			
ANR	3314442	RelationalExpression	X_RD ( insn ) < 16		3312615	0		<			
ANR	3314443	CallExpression	X_RD ( insn )		3312615	0					
ANR	3314444	Callee	X_RD		3312615	0					
ANR	3314445	Identifier	X_RD		3312615	0					
ANR	3314446	ArgumentList	insn		3312615	1					
ANR	3314447	Argument	insn		3312615	0					
ANR	3314448	Identifier	insn		3312615	0					
ANR	3314449	PrimaryExpression	16		3312615	1					
ANR	3314450	RelationalExpression	X_RD ( insn ) > 25		3312615	1		>			
ANR	3314451	CallExpression	X_RD ( insn )		3312615	0					
ANR	3314452	Callee	X_RD		3312615	0					
ANR	3314453	Identifier	X_RD		3312615	0					
ANR	3314454	ArgumentList	insn		3312615	1					
ANR	3314455	Argument	insn		3312615	0					
ANR	3314456	Identifier	insn		3312615	0					
ANR	3314457	PrimaryExpression	25		3312615	1					
ANR	3314458	CompoundStatement		394:47:9656:9656	3312615	1					
ANR	3314459	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	875:6:23964:24008	3312615	0	True				
ANR	3314460	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		3312615	0					
ANR	3314461	Callee	* info -> fprintf_func		3312615	0					
ANR	3314462	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314463	UnaryOperator	*		3312615	0					
ANR	3314464	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314465	Identifier	info		3312615	0					
ANR	3314466	Identifier	fprintf_func		3312615	1					
ANR	3314467	ArgumentList	stream		3312615	1					
ANR	3314468	Argument	stream		3312615	0					
ANR	3314469	Identifier	stream		3312615	0					
ANR	3314470	Argument	"""%%reserved"""		3312615	1					
ANR	3314471	PrimaryExpression	"""%%reserved"""		3312615	0					
ANR	3314472	ElseStatement	else		3312615	0					
ANR	3314473	CompoundStatement		396:12:9722:9722	3312615	0					
ANR	3314474	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9a_asr_reg_names [ X_RD ( insn ) - 16 ] )"	877:6:24030:24112	3312615	0	True				
ANR	3314475	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9a_asr_reg_names [ X_RD ( insn ) - 16 ] )"		3312615	0					
ANR	3314476	Callee	* info -> fprintf_func		3312615	0					
ANR	3314477	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314478	UnaryOperator	*		3312615	0					
ANR	3314479	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314480	Identifier	info		3312615	0					
ANR	3314481	Identifier	fprintf_func		3312615	1					
ANR	3314482	ArgumentList	stream		3312615	1					
ANR	3314483	Argument	stream		3312615	0					
ANR	3314484	Identifier	stream		3312615	0					
ANR	3314485	Argument	"""%%%s"""		3312615	1					
ANR	3314486	PrimaryExpression	"""%%%s"""		3312615	0					
ANR	3314487	Argument	v9a_asr_reg_names [ X_RD ( insn ) - 16 ]		3312615	2					
ANR	3314488	ArrayIndexing	v9a_asr_reg_names [ X_RD ( insn ) - 16 ]		3312615	0					
ANR	3314489	Identifier	v9a_asr_reg_names		3312615	0					
ANR	3314490	AdditiveExpression	X_RD ( insn ) - 16		3312615	1		-			
ANR	3314491	CallExpression	X_RD ( insn )		3312615	0					
ANR	3314492	Callee	X_RD		3312615	0					
ANR	3314493	Identifier	X_RD		3312615	0					
ANR	3314494	ArgumentList	insn		3312615	1					
ANR	3314495	Argument	insn		3312615	0					
ANR	3314496	Identifier	insn		3312615	0					
ANR	3314497	PrimaryExpression	16		3312615	1					
ANR	3314498	BreakStatement	break ;	880:5:24126:24131	3312615	231	True				
ANR	3314499	Label	case '*' :	882:4:24138:24146	3312615	232	True				
ANR	3314500	CompoundStatement		404:8:9864:9918	3312615	233					
ANR	3314501	IdentifierDeclStatement	const char * name = sparc_decode_prefetch ( X_RD ( insn ) ) ;	884:8:24164:24218	3312615	0	True				
ANR	3314502	IdentifierDecl	* name = sparc_decode_prefetch ( X_RD ( insn ) )		3312615	0					
ANR	3314503	IdentifierDeclType	const char *		3312615	0					
ANR	3314504	Identifier	name		3312615	1					
ANR	3314505	AssignmentExpression	* name = sparc_decode_prefetch ( X_RD ( insn ) )		3312615	2		=			
ANR	3314506	Identifier	name		3312615	0					
ANR	3314507	CallExpression	sparc_decode_prefetch ( X_RD ( insn ) )		3312615	1					
ANR	3314508	Callee	sparc_decode_prefetch		3312615	0					
ANR	3314509	Identifier	sparc_decode_prefetch		3312615	0					
ANR	3314510	ArgumentList	X_RD ( insn )		3312615	1					
ANR	3314511	Argument	X_RD ( insn )		3312615	0					
ANR	3314512	CallExpression	X_RD ( insn )		3312615	0					
ANR	3314513	Callee	X_RD		3312615	0					
ANR	3314514	Identifier	X_RD		3312615	0					
ANR	3314515	ArgumentList	insn		3312615	1					
ANR	3314516	Argument	insn		3312615	0					
ANR	3314517	Identifier	insn		3312615	0					
ANR	3314518	IfStatement	if ( name )		3312615	1					
ANR	3314519	Condition	name	886:12:24233:24236	3312615	0	True				
ANR	3314520	Identifier	name		3312615	0					
ANR	3314521	CompoundStatement		406:18:9939:9939	3312615	1					
ANR	3314522	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"	887:9:24250:24292	3312615	0	True				
ANR	3314523	CallExpression	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"		3312615	0					
ANR	3314524	Callee	* info -> fprintf_func		3312615	0					
ANR	3314525	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314526	UnaryOperator	*		3312615	0					
ANR	3314527	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314528	Identifier	info		3312615	0					
ANR	3314529	Identifier	fprintf_func		3312615	1					
ANR	3314530	ArgumentList	stream		3312615	1					
ANR	3314531	Argument	stream		3312615	0					
ANR	3314532	Identifier	stream		3312615	0					
ANR	3314533	Argument	"""%s"""		3312615	1					
ANR	3314534	PrimaryExpression	"""%s"""		3312615	0					
ANR	3314535	Argument	name		3312615	2					
ANR	3314536	Identifier	name		3312615	0					
ANR	3314537	ElseStatement	else		3312615	0					
ANR	3314538	CompoundStatement		408:15:10009:10009	3312615	0					
ANR	3314539	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%ld"" , X_RD ( insn ) )"	889:9:24320:24370	3312615	0	True				
ANR	3314540	CallExpression	"( * info -> fprintf_func ) ( stream , ""%ld"" , X_RD ( insn ) )"		3312615	0					
ANR	3314541	Callee	* info -> fprintf_func		3312615	0					
ANR	3314542	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314543	UnaryOperator	*		3312615	0					
ANR	3314544	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314545	Identifier	info		3312615	0					
ANR	3314546	Identifier	fprintf_func		3312615	1					
ANR	3314547	ArgumentList	stream		3312615	1					
ANR	3314548	Argument	stream		3312615	0					
ANR	3314549	Identifier	stream		3312615	0					
ANR	3314550	Argument	"""%ld"""		3312615	1					
ANR	3314551	PrimaryExpression	"""%ld"""		3312615	0					
ANR	3314552	Argument	X_RD ( insn )		3312615	2					
ANR	3314553	CallExpression	X_RD ( insn )		3312615	0					
ANR	3314554	Callee	X_RD		3312615	0					
ANR	3314555	Identifier	X_RD		3312615	0					
ANR	3314556	ArgumentList	insn		3312615	1					
ANR	3314557	Argument	insn		3312615	0					
ANR	3314558	Identifier	insn		3312615	0					
ANR	3314559	BreakStatement	break ;	891:8:24390:24395	3312615	2	True				
ANR	3314560	Label	case 'M' :	894:4:24410:24418	3312615	234	True				
ANR	3314561	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%asr%ld"" , X_RS1 ( insn ) )"	895:6:24426:24482	3312615	235	True				
ANR	3314562	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%asr%ld"" , X_RS1 ( insn ) )"		3312615	0					
ANR	3314563	Callee	* info -> fprintf_func		3312615	0					
ANR	3314564	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314565	UnaryOperator	*		3312615	0					
ANR	3314566	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314567	Identifier	info		3312615	0					
ANR	3314568	Identifier	fprintf_func		3312615	1					
ANR	3314569	ArgumentList	stream		3312615	1					
ANR	3314570	Argument	stream		3312615	0					
ANR	3314571	Identifier	stream		3312615	0					
ANR	3314572	Argument	"""%%asr%ld"""		3312615	1					
ANR	3314573	PrimaryExpression	"""%%asr%ld"""		3312615	0					
ANR	3314574	Argument	X_RS1 ( insn )		3312615	2					
ANR	3314575	CallExpression	X_RS1 ( insn )		3312615	0					
ANR	3314576	Callee	X_RS1		3312615	0					
ANR	3314577	Identifier	X_RS1		3312615	0					
ANR	3314578	ArgumentList	insn		3312615	1					
ANR	3314579	Argument	insn		3312615	0					
ANR	3314580	Identifier	insn		3312615	0					
ANR	3314581	BreakStatement	break ;	896:6:24490:24495	3312615	236	True				
ANR	3314582	Label	case 'm' :	898:4:24502:24510	3312615	237	True				
ANR	3314583	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%asr%ld"" , X_RD ( insn ) )"	899:6:24518:24573	3312615	238	True				
ANR	3314584	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%asr%ld"" , X_RD ( insn ) )"		3312615	0					
ANR	3314585	Callee	* info -> fprintf_func		3312615	0					
ANR	3314586	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314587	UnaryOperator	*		3312615	0					
ANR	3314588	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314589	Identifier	info		3312615	0					
ANR	3314590	Identifier	fprintf_func		3312615	1					
ANR	3314591	ArgumentList	stream		3312615	1					
ANR	3314592	Argument	stream		3312615	0					
ANR	3314593	Identifier	stream		3312615	0					
ANR	3314594	Argument	"""%%asr%ld"""		3312615	1					
ANR	3314595	PrimaryExpression	"""%%asr%ld"""		3312615	0					
ANR	3314596	Argument	X_RD ( insn )		3312615	2					
ANR	3314597	CallExpression	X_RD ( insn )		3312615	0					
ANR	3314598	Callee	X_RD		3312615	0					
ANR	3314599	Identifier	X_RD		3312615	0					
ANR	3314600	ArgumentList	insn		3312615	1					
ANR	3314601	Argument	insn		3312615	0					
ANR	3314602	Identifier	insn		3312615	0					
ANR	3314603	BreakStatement	break ;	900:6:24581:24586	3312615	239	True				
ANR	3314604	Label	case 'L' :	902:4:24593:24601	3312615	240	True				
ANR	3314605	ExpressionStatement	"info -> target = memaddr + SEX ( X_DISP30 ( insn ) , 30 ) * 4"	903:6:24609:24663	3312615	241	True				
ANR	3314606	AssignmentExpression	"info -> target = memaddr + SEX ( X_DISP30 ( insn ) , 30 ) * 4"		3312615	0		=			
ANR	3314607	PtrMemberAccess	info -> target		3312615	0					
ANR	3314608	Identifier	info		3312615	0					
ANR	3314609	Identifier	target		3312615	1					
ANR	3314610	AdditiveExpression	"memaddr + SEX ( X_DISP30 ( insn ) , 30 ) * 4"		3312615	1		+			
ANR	3314611	Identifier	memaddr		3312615	0					
ANR	3314612	MultiplicativeExpression	"SEX ( X_DISP30 ( insn ) , 30 ) * 4"		3312615	1		*			
ANR	3314613	CallExpression	"SEX ( X_DISP30 ( insn ) , 30 )"		3312615	0					
ANR	3314614	Callee	SEX		3312615	0					
ANR	3314615	Identifier	SEX		3312615	0					
ANR	3314616	ArgumentList	X_DISP30 ( insn )		3312615	1					
ANR	3314617	Argument	X_DISP30 ( insn )		3312615	0					
ANR	3314618	CallExpression	X_DISP30 ( insn )		3312615	0					
ANR	3314619	Callee	X_DISP30		3312615	0					
ANR	3314620	Identifier	X_DISP30		3312615	0					
ANR	3314621	ArgumentList	insn		3312615	1					
ANR	3314622	Argument	insn		3312615	0					
ANR	3314623	Identifier	insn		3312615	0					
ANR	3314624	Argument	30		3312615	1					
ANR	3314625	PrimaryExpression	30		3312615	0					
ANR	3314626	PrimaryExpression	4		3312615	1					
ANR	3314627	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	904:6:24671:24719	3312615	242	True				
ANR	3314628	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		3312615	0					
ANR	3314629	Callee	* info -> print_address_func		3312615	0					
ANR	3314630	UnaryOperationExpression	* info -> print_address_func		3312615	0					
ANR	3314631	UnaryOperator	*		3312615	0					
ANR	3314632	PtrMemberAccess	info -> print_address_func		3312615	1					
ANR	3314633	Identifier	info		3312615	0					
ANR	3314634	Identifier	print_address_func		3312615	1					
ANR	3314635	ArgumentList	info -> target		3312615	1					
ANR	3314636	Argument	info -> target		3312615	0					
ANR	3314637	PtrMemberAccess	info -> target		3312615	0					
ANR	3314638	Identifier	info		3312615	0					
ANR	3314639	Identifier	target		3312615	1					
ANR	3314640	Argument	info		3312615	1					
ANR	3314641	Identifier	info		3312615	0					
ANR	3314642	BreakStatement	break ;	905:6:24727:24732	3312615	243	True				
ANR	3314643	Label	case 'n' :	907:4:24739:24747	3312615	244	True				
ANR	3314644	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%#x"" , SEX ( X_DISP22 ( insn ) , 22 ) )"	908:6:24755:24827	3312615	245	True				
ANR	3314645	CallExpression	"( * info -> fprintf_func ) ( stream , ""%#x"" , SEX ( X_DISP22 ( insn ) , 22 ) )"		3312615	0					
ANR	3314646	Callee	* info -> fprintf_func		3312615	0					
ANR	3314647	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314648	UnaryOperator	*		3312615	0					
ANR	3314649	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314650	Identifier	info		3312615	0					
ANR	3314651	Identifier	fprintf_func		3312615	1					
ANR	3314652	ArgumentList	stream		3312615	1					
ANR	3314653	Argument	stream		3312615	0					
ANR	3314654	Identifier	stream		3312615	0					
ANR	3314655	Argument	"""%#x"""		3312615	1					
ANR	3314656	PrimaryExpression	"""%#x"""		3312615	0					
ANR	3314657	Argument	"SEX ( X_DISP22 ( insn ) , 22 )"		3312615	2					
ANR	3314658	CallExpression	"SEX ( X_DISP22 ( insn ) , 22 )"		3312615	0					
ANR	3314659	Callee	SEX		3312615	0					
ANR	3314660	Identifier	SEX		3312615	0					
ANR	3314661	ArgumentList	X_DISP22 ( insn )		3312615	1					
ANR	3314662	Argument	X_DISP22 ( insn )		3312615	0					
ANR	3314663	CallExpression	X_DISP22 ( insn )		3312615	0					
ANR	3314664	Callee	X_DISP22		3312615	0					
ANR	3314665	Identifier	X_DISP22		3312615	0					
ANR	3314666	ArgumentList	insn		3312615	1					
ANR	3314667	Argument	insn		3312615	0					
ANR	3314668	Identifier	insn		3312615	0					
ANR	3314669	Argument	22		3312615	1					
ANR	3314670	PrimaryExpression	22		3312615	0					
ANR	3314671	BreakStatement	break ;	910:6:24835:24840	3312615	246	True				
ANR	3314672	Label	case 'l' :	912:4:24847:24855	3312615	247	True				
ANR	3314673	ExpressionStatement	"info -> target = memaddr + SEX ( X_DISP22 ( insn ) , 22 ) * 4"	913:6:24863:24917	3312615	248	True				
ANR	3314674	AssignmentExpression	"info -> target = memaddr + SEX ( X_DISP22 ( insn ) , 22 ) * 4"		3312615	0		=			
ANR	3314675	PtrMemberAccess	info -> target		3312615	0					
ANR	3314676	Identifier	info		3312615	0					
ANR	3314677	Identifier	target		3312615	1					
ANR	3314678	AdditiveExpression	"memaddr + SEX ( X_DISP22 ( insn ) , 22 ) * 4"		3312615	1		+			
ANR	3314679	Identifier	memaddr		3312615	0					
ANR	3314680	MultiplicativeExpression	"SEX ( X_DISP22 ( insn ) , 22 ) * 4"		3312615	1		*			
ANR	3314681	CallExpression	"SEX ( X_DISP22 ( insn ) , 22 )"		3312615	0					
ANR	3314682	Callee	SEX		3312615	0					
ANR	3314683	Identifier	SEX		3312615	0					
ANR	3314684	ArgumentList	X_DISP22 ( insn )		3312615	1					
ANR	3314685	Argument	X_DISP22 ( insn )		3312615	0					
ANR	3314686	CallExpression	X_DISP22 ( insn )		3312615	0					
ANR	3314687	Callee	X_DISP22		3312615	0					
ANR	3314688	Identifier	X_DISP22		3312615	0					
ANR	3314689	ArgumentList	insn		3312615	1					
ANR	3314690	Argument	insn		3312615	0					
ANR	3314691	Identifier	insn		3312615	0					
ANR	3314692	Argument	22		3312615	1					
ANR	3314693	PrimaryExpression	22		3312615	0					
ANR	3314694	PrimaryExpression	4		3312615	1					
ANR	3314695	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	914:6:24925:24973	3312615	249	True				
ANR	3314696	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		3312615	0					
ANR	3314697	Callee	* info -> print_address_func		3312615	0					
ANR	3314698	UnaryOperationExpression	* info -> print_address_func		3312615	0					
ANR	3314699	UnaryOperator	*		3312615	0					
ANR	3314700	PtrMemberAccess	info -> print_address_func		3312615	1					
ANR	3314701	Identifier	info		3312615	0					
ANR	3314702	Identifier	print_address_func		3312615	1					
ANR	3314703	ArgumentList	info -> target		3312615	1					
ANR	3314704	Argument	info -> target		3312615	0					
ANR	3314705	PtrMemberAccess	info -> target		3312615	0					
ANR	3314706	Identifier	info		3312615	0					
ANR	3314707	Identifier	target		3312615	1					
ANR	3314708	Argument	info		3312615	1					
ANR	3314709	Identifier	info		3312615	0					
ANR	3314710	BreakStatement	break ;	915:6:24981:24986	3312615	250	True				
ANR	3314711	Label	case 'A' :	917:4:24993:25001	3312615	251	True				
ANR	3314712	CompoundStatement		439:8:10719:10769	3312615	252					
ANR	3314713	IdentifierDeclStatement	const char * name = sparc_decode_asi ( X_ASI ( insn ) ) ;	919:8:25019:25069	3312615	0	True				
ANR	3314714	IdentifierDecl	* name = sparc_decode_asi ( X_ASI ( insn ) )		3312615	0					
ANR	3314715	IdentifierDeclType	const char *		3312615	0					
ANR	3314716	Identifier	name		3312615	1					
ANR	3314717	AssignmentExpression	* name = sparc_decode_asi ( X_ASI ( insn ) )		3312615	2		=			
ANR	3314718	Identifier	name		3312615	0					
ANR	3314719	CallExpression	sparc_decode_asi ( X_ASI ( insn ) )		3312615	1					
ANR	3314720	Callee	sparc_decode_asi		3312615	0					
ANR	3314721	Identifier	sparc_decode_asi		3312615	0					
ANR	3314722	ArgumentList	X_ASI ( insn )		3312615	1					
ANR	3314723	Argument	X_ASI ( insn )		3312615	0					
ANR	3314724	CallExpression	X_ASI ( insn )		3312615	0					
ANR	3314725	Callee	X_ASI		3312615	0					
ANR	3314726	Identifier	X_ASI		3312615	0					
ANR	3314727	ArgumentList	insn		3312615	1					
ANR	3314728	Argument	insn		3312615	0					
ANR	3314729	Identifier	insn		3312615	0					
ANR	3314730	IfStatement	if ( name )		3312615	1					
ANR	3314731	Condition	name	921:12:25084:25087	3312615	0	True				
ANR	3314732	Identifier	name		3312615	0					
ANR	3314733	CompoundStatement		441:18:10790:10790	3312615	1					
ANR	3314734	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"	922:9:25101:25143	3312615	0	True				
ANR	3314735	CallExpression	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"		3312615	0					
ANR	3314736	Callee	* info -> fprintf_func		3312615	0					
ANR	3314737	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314738	UnaryOperator	*		3312615	0					
ANR	3314739	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314740	Identifier	info		3312615	0					
ANR	3314741	Identifier	fprintf_func		3312615	1					
ANR	3314742	ArgumentList	stream		3312615	1					
ANR	3314743	Argument	stream		3312615	0					
ANR	3314744	Identifier	stream		3312615	0					
ANR	3314745	Argument	"""%s"""		3312615	1					
ANR	3314746	PrimaryExpression	"""%s"""		3312615	0					
ANR	3314747	Argument	name		3312615	2					
ANR	3314748	Identifier	name		3312615	0					
ANR	3314749	ElseStatement	else		3312615	0					
ANR	3314750	CompoundStatement		443:15:10860:10860	3312615	0					
ANR	3314751	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""(%ld)"" , X_ASI ( insn ) )"	924:9:25171:25224	3312615	0	True				
ANR	3314752	CallExpression	"( * info -> fprintf_func ) ( stream , ""(%ld)"" , X_ASI ( insn ) )"		3312615	0					
ANR	3314753	Callee	* info -> fprintf_func		3312615	0					
ANR	3314754	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314755	UnaryOperator	*		3312615	0					
ANR	3314756	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314757	Identifier	info		3312615	0					
ANR	3314758	Identifier	fprintf_func		3312615	1					
ANR	3314759	ArgumentList	stream		3312615	1					
ANR	3314760	Argument	stream		3312615	0					
ANR	3314761	Identifier	stream		3312615	0					
ANR	3314762	Argument	"""(%ld)"""		3312615	1					
ANR	3314763	PrimaryExpression	"""(%ld)"""		3312615	0					
ANR	3314764	Argument	X_ASI ( insn )		3312615	2					
ANR	3314765	CallExpression	X_ASI ( insn )		3312615	0					
ANR	3314766	Callee	X_ASI		3312615	0					
ANR	3314767	Identifier	X_ASI		3312615	0					
ANR	3314768	ArgumentList	insn		3312615	1					
ANR	3314769	Argument	insn		3312615	0					
ANR	3314770	Identifier	insn		3312615	0					
ANR	3314771	BreakStatement	break ;	926:8:25244:25249	3312615	2	True				
ANR	3314772	Label	case 'C' :	929:4:25264:25272	3312615	253	True				
ANR	3314773	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%csr"" )"	930:6:25280:25319	3312615	254	True				
ANR	3314774	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%csr"" )"		3312615	0					
ANR	3314775	Callee	* info -> fprintf_func		3312615	0					
ANR	3314776	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314777	UnaryOperator	*		3312615	0					
ANR	3314778	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314779	Identifier	info		3312615	0					
ANR	3314780	Identifier	fprintf_func		3312615	1					
ANR	3314781	ArgumentList	stream		3312615	1					
ANR	3314782	Argument	stream		3312615	0					
ANR	3314783	Identifier	stream		3312615	0					
ANR	3314784	Argument	"""%%csr"""		3312615	1					
ANR	3314785	PrimaryExpression	"""%%csr"""		3312615	0					
ANR	3314786	BreakStatement	break ;	931:6:25327:25332	3312615	255	True				
ANR	3314787	Label	case 'F' :	933:4:25339:25347	3312615	256	True				
ANR	3314788	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%fsr"" )"	934:6:25355:25394	3312615	257	True				
ANR	3314789	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%fsr"" )"		3312615	0					
ANR	3314790	Callee	* info -> fprintf_func		3312615	0					
ANR	3314791	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314792	UnaryOperator	*		3312615	0					
ANR	3314793	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314794	Identifier	info		3312615	0					
ANR	3314795	Identifier	fprintf_func		3312615	1					
ANR	3314796	ArgumentList	stream		3312615	1					
ANR	3314797	Argument	stream		3312615	0					
ANR	3314798	Identifier	stream		3312615	0					
ANR	3314799	Argument	"""%%fsr"""		3312615	1					
ANR	3314800	PrimaryExpression	"""%%fsr"""		3312615	0					
ANR	3314801	BreakStatement	break ;	935:6:25402:25407	3312615	258	True				
ANR	3314802	Label	case 'p' :	937:4:25414:25422	3312615	259	True				
ANR	3314803	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%psr"" )"	938:6:25430:25469	3312615	260	True				
ANR	3314804	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%psr"" )"		3312615	0					
ANR	3314805	Callee	* info -> fprintf_func		3312615	0					
ANR	3314806	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314807	UnaryOperator	*		3312615	0					
ANR	3314808	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314809	Identifier	info		3312615	0					
ANR	3314810	Identifier	fprintf_func		3312615	1					
ANR	3314811	ArgumentList	stream		3312615	1					
ANR	3314812	Argument	stream		3312615	0					
ANR	3314813	Identifier	stream		3312615	0					
ANR	3314814	Argument	"""%%psr"""		3312615	1					
ANR	3314815	PrimaryExpression	"""%%psr"""		3312615	0					
ANR	3314816	BreakStatement	break ;	939:6:25477:25482	3312615	261	True				
ANR	3314817	Label	case 'q' :	941:4:25489:25497	3312615	262	True				
ANR	3314818	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%fq"" )"	942:6:25505:25543	3312615	263	True				
ANR	3314819	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%fq"" )"		3312615	0					
ANR	3314820	Callee	* info -> fprintf_func		3312615	0					
ANR	3314821	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314822	UnaryOperator	*		3312615	0					
ANR	3314823	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314824	Identifier	info		3312615	0					
ANR	3314825	Identifier	fprintf_func		3312615	1					
ANR	3314826	ArgumentList	stream		3312615	1					
ANR	3314827	Argument	stream		3312615	0					
ANR	3314828	Identifier	stream		3312615	0					
ANR	3314829	Argument	"""%%fq"""		3312615	1					
ANR	3314830	PrimaryExpression	"""%%fq"""		3312615	0					
ANR	3314831	BreakStatement	break ;	943:6:25551:25556	3312615	264	True				
ANR	3314832	Label	case 'Q' :	945:4:25563:25571	3312615	265	True				
ANR	3314833	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%cq"" )"	946:6:25579:25617	3312615	266	True				
ANR	3314834	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%cq"" )"		3312615	0					
ANR	3314835	Callee	* info -> fprintf_func		3312615	0					
ANR	3314836	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314837	UnaryOperator	*		3312615	0					
ANR	3314838	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314839	Identifier	info		3312615	0					
ANR	3314840	Identifier	fprintf_func		3312615	1					
ANR	3314841	ArgumentList	stream		3312615	1					
ANR	3314842	Argument	stream		3312615	0					
ANR	3314843	Identifier	stream		3312615	0					
ANR	3314844	Argument	"""%%cq"""		3312615	1					
ANR	3314845	PrimaryExpression	"""%%cq"""		3312615	0					
ANR	3314846	BreakStatement	break ;	947:6:25625:25630	3312615	267	True				
ANR	3314847	Label	case 't' :	949:4:25637:25645	3312615	268	True				
ANR	3314848	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%tbr"" )"	950:6:25653:25692	3312615	269	True				
ANR	3314849	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%tbr"" )"		3312615	0					
ANR	3314850	Callee	* info -> fprintf_func		3312615	0					
ANR	3314851	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314852	UnaryOperator	*		3312615	0					
ANR	3314853	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314854	Identifier	info		3312615	0					
ANR	3314855	Identifier	fprintf_func		3312615	1					
ANR	3314856	ArgumentList	stream		3312615	1					
ANR	3314857	Argument	stream		3312615	0					
ANR	3314858	Identifier	stream		3312615	0					
ANR	3314859	Argument	"""%%tbr"""		3312615	1					
ANR	3314860	PrimaryExpression	"""%%tbr"""		3312615	0					
ANR	3314861	BreakStatement	break ;	951:6:25700:25705	3312615	270	True				
ANR	3314862	Label	case 'w' :	953:4:25712:25720	3312615	271	True				
ANR	3314863	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%wim"" )"	954:6:25728:25767	3312615	272	True				
ANR	3314864	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%wim"" )"		3312615	0					
ANR	3314865	Callee	* info -> fprintf_func		3312615	0					
ANR	3314866	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314867	UnaryOperator	*		3312615	0					
ANR	3314868	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314869	Identifier	info		3312615	0					
ANR	3314870	Identifier	fprintf_func		3312615	1					
ANR	3314871	ArgumentList	stream		3312615	1					
ANR	3314872	Argument	stream		3312615	0					
ANR	3314873	Identifier	stream		3312615	0					
ANR	3314874	Argument	"""%%wim"""		3312615	1					
ANR	3314875	PrimaryExpression	"""%%wim"""		3312615	0					
ANR	3314876	BreakStatement	break ;	955:6:25775:25780	3312615	273	True				
ANR	3314877	Label	case 'x' :	957:4:25787:25795	3312615	274	True				
ANR	3314878	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%ld"" , ( ( X_LDST_I ( insn ) << 8 ) + X_ASI ( insn ) ) )"	958:6:25803:25898	3312615	275	True				
ANR	3314879	CallExpression	"( * info -> fprintf_func ) ( stream , ""%ld"" , ( ( X_LDST_I ( insn ) << 8 ) + X_ASI ( insn ) ) )"		3312615	0					
ANR	3314880	Callee	* info -> fprintf_func		3312615	0					
ANR	3314881	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314882	UnaryOperator	*		3312615	0					
ANR	3314883	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314884	Identifier	info		3312615	0					
ANR	3314885	Identifier	fprintf_func		3312615	1					
ANR	3314886	ArgumentList	stream		3312615	1					
ANR	3314887	Argument	stream		3312615	0					
ANR	3314888	Identifier	stream		3312615	0					
ANR	3314889	Argument	"""%ld"""		3312615	1					
ANR	3314890	PrimaryExpression	"""%ld"""		3312615	0					
ANR	3314891	Argument	( X_LDST_I ( insn ) << 8 ) + X_ASI ( insn )		3312615	2					
ANR	3314892	AdditiveExpression	( X_LDST_I ( insn ) << 8 ) + X_ASI ( insn )		3312615	0		+			
ANR	3314893	ShiftExpression	X_LDST_I ( insn ) << 8		3312615	0		<<			
ANR	3314894	CallExpression	X_LDST_I ( insn )		3312615	0					
ANR	3314895	Callee	X_LDST_I		3312615	0					
ANR	3314896	Identifier	X_LDST_I		3312615	0					
ANR	3314897	ArgumentList	insn		3312615	1					
ANR	3314898	Argument	insn		3312615	0					
ANR	3314899	Identifier	insn		3312615	0					
ANR	3314900	PrimaryExpression	8		3312615	1					
ANR	3314901	CallExpression	X_ASI ( insn )		3312615	1					
ANR	3314902	Callee	X_ASI		3312615	0					
ANR	3314903	Identifier	X_ASI		3312615	0					
ANR	3314904	ArgumentList	insn		3312615	1					
ANR	3314905	Argument	insn		3312615	0					
ANR	3314906	Identifier	insn		3312615	0					
ANR	3314907	BreakStatement	break ;	961:6:25906:25911	3312615	276	True				
ANR	3314908	Label	case 'y' :	963:4:25918:25926	3312615	277	True				
ANR	3314909	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%y"" )"	964:6:25934:25971	3312615	278	True				
ANR	3314910	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%y"" )"		3312615	0					
ANR	3314911	Callee	* info -> fprintf_func		3312615	0					
ANR	3314912	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314913	UnaryOperator	*		3312615	0					
ANR	3314914	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314915	Identifier	info		3312615	0					
ANR	3314916	Identifier	fprintf_func		3312615	1					
ANR	3314917	ArgumentList	stream		3312615	1					
ANR	3314918	Argument	stream		3312615	0					
ANR	3314919	Identifier	stream		3312615	0					
ANR	3314920	Argument	"""%%y"""		3312615	1					
ANR	3314921	PrimaryExpression	"""%%y"""		3312615	0					
ANR	3314922	BreakStatement	break ;	965:6:25979:25984	3312615	279	True				
ANR	3314923	Label	case 'u' :	967:4:25991:25999	3312615	280	True				
ANR	3314924	Label	case 'U' :	968:4:26005:26013	3312615	281	True				
ANR	3314925	CompoundStatement		491:8:11789:11841	3312615	282					
ANR	3314926	IdentifierDeclStatement	int val = * s == 'U' ? X_RS1 ( insn ) : X_RD ( insn ) ;	970:8:26031:26079	3312615	0	True				
ANR	3314927	IdentifierDecl	val = * s == 'U' ? X_RS1 ( insn ) : X_RD ( insn )		3312615	0					
ANR	3314928	IdentifierDeclType	int		3312615	0					
ANR	3314929	Identifier	val		3312615	1					
ANR	3314930	AssignmentExpression	val = * s == 'U' ? X_RS1 ( insn ) : X_RD ( insn )		3312615	2		=			
ANR	3314931	Identifier	val		3312615	0					
ANR	3314932	ConditionalExpression	* s == 'U' ? X_RS1 ( insn ) : X_RD ( insn )		3312615	1					
ANR	3314933	Condition	* s == 'U'		3312615	0					
ANR	3314934	EqualityExpression	* s == 'U'		3312615	0		==			
ANR	3314935	UnaryOperationExpression	* s		3312615	0					
ANR	3314936	UnaryOperator	*		3312615	0					
ANR	3314937	Identifier	s		3312615	1					
ANR	3314938	PrimaryExpression	'U'		3312615	1					
ANR	3314939	CallExpression	X_RS1 ( insn )		3312615	1					
ANR	3314940	Callee	X_RS1		3312615	0					
ANR	3314941	Identifier	X_RS1		3312615	0					
ANR	3314942	ArgumentList	insn		3312615	1					
ANR	3314943	Argument	insn		3312615	0					
ANR	3314944	Identifier	insn		3312615	0					
ANR	3314945	CallExpression	X_RD ( insn )		3312615	2					
ANR	3314946	Callee	X_RD		3312615	0					
ANR	3314947	Identifier	X_RD		3312615	0					
ANR	3314948	ArgumentList	insn		3312615	1					
ANR	3314949	Argument	insn		3312615	0					
ANR	3314950	Identifier	insn		3312615	0					
ANR	3314951	IdentifierDeclStatement	const char * name = sparc_decode_sparclet_cpreg ( val ) ;	971:8:26089:26141	3312615	1	True				
ANR	3314952	IdentifierDecl	* name = sparc_decode_sparclet_cpreg ( val )		3312615	0					
ANR	3314953	IdentifierDeclType	const char *		3312615	0					
ANR	3314954	Identifier	name		3312615	1					
ANR	3314955	AssignmentExpression	* name = sparc_decode_sparclet_cpreg ( val )		3312615	2		=			
ANR	3314956	Identifier	name		3312615	0					
ANR	3314957	CallExpression	sparc_decode_sparclet_cpreg ( val )		3312615	1					
ANR	3314958	Callee	sparc_decode_sparclet_cpreg		3312615	0					
ANR	3314959	Identifier	sparc_decode_sparclet_cpreg		3312615	0					
ANR	3314960	ArgumentList	val		3312615	1					
ANR	3314961	Argument	val		3312615	0					
ANR	3314962	Identifier	val		3312615	0					
ANR	3314963	IfStatement	if ( name )		3312615	2					
ANR	3314964	Condition	name	973:12:26156:26159	3312615	0	True				
ANR	3314965	Identifier	name		3312615	0					
ANR	3314966	CompoundStatement		493:18:11862:11862	3312615	1					
ANR	3314967	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"	974:9:26173:26215	3312615	0	True				
ANR	3314968	CallExpression	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"		3312615	0					
ANR	3314969	Callee	* info -> fprintf_func		3312615	0					
ANR	3314970	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314971	UnaryOperator	*		3312615	0					
ANR	3314972	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314973	Identifier	info		3312615	0					
ANR	3314974	Identifier	fprintf_func		3312615	1					
ANR	3314975	ArgumentList	stream		3312615	1					
ANR	3314976	Argument	stream		3312615	0					
ANR	3314977	Identifier	stream		3312615	0					
ANR	3314978	Argument	"""%s"""		3312615	1					
ANR	3314979	PrimaryExpression	"""%s"""		3312615	0					
ANR	3314980	Argument	name		3312615	2					
ANR	3314981	Identifier	name		3312615	0					
ANR	3314982	ElseStatement	else		3312615	0					
ANR	3314983	CompoundStatement		495:15:11932:11932	3312615	0					
ANR	3314984	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%cpreg(%d)"" , val )"	976:9:26243:26293	3312615	0	True				
ANR	3314985	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%cpreg(%d)"" , val )"		3312615	0					
ANR	3314986	Callee	* info -> fprintf_func		3312615	0					
ANR	3314987	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3314988	UnaryOperator	*		3312615	0					
ANR	3314989	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3314990	Identifier	info		3312615	0					
ANR	3314991	Identifier	fprintf_func		3312615	1					
ANR	3314992	ArgumentList	stream		3312615	1					
ANR	3314993	Argument	stream		3312615	0					
ANR	3314994	Identifier	stream		3312615	0					
ANR	3314995	Argument	"""%%cpreg(%d)"""		3312615	1					
ANR	3314996	PrimaryExpression	"""%%cpreg(%d)"""		3312615	0					
ANR	3314997	Argument	val		3312615	2					
ANR	3314998	Identifier	val		3312615	0					
ANR	3314999	BreakStatement	break ;	978:8:26313:26318	3312615	3	True				
ANR	3315000	IfStatement	if ( imm_ored_to_rs1 || imm_added_to_rs1 )		3312615	10					
ANR	3315001	Condition	imm_ored_to_rs1 || imm_added_to_rs1	990:7:26665:26699	3312615	0	True				
ANR	3315002	OrExpression	imm_ored_to_rs1 || imm_added_to_rs1		3312615	0		||			
ANR	3315003	Identifier	imm_ored_to_rs1		3312615	0					
ANR	3315004	Identifier	imm_added_to_rs1		3312615	1					
ANR	3315005	CompoundStatement		513:7:12448:12459	3312615	1					
ANR	3315006	IdentifierDeclStatement	unsigned long prev_insn ;	992:7:26716:26739	3312615	0	True				
ANR	3315007	IdentifierDecl	prev_insn		3312615	0					
ANR	3315008	IdentifierDeclType	unsigned long		3312615	0					
ANR	3315009	Identifier	prev_insn		3312615	1					
ANR	3315010	IdentifierDeclStatement	int errcode ;	993:7:26748:26759	3312615	1	True				
ANR	3315011	IdentifierDecl	errcode		3312615	0					
ANR	3315012	IdentifierDeclType	int		3312615	0					
ANR	3315013	Identifier	errcode		3312615	1					
ANR	3315014	IfStatement	if ( memaddr >= 4 )		3312615	2					
ANR	3315015	Condition	memaddr >= 4	995:11:26773:26784	3312615	0	True				
ANR	3315016	RelationalExpression	memaddr >= 4		3312615	0		>=			
ANR	3315017	Identifier	memaddr		3312615	0					
ANR	3315018	PrimaryExpression	4		3312615	1					
ANR	3315019	CompoundStatement		515:25:12487:12487	3312615	1					
ANR	3315020	ExpressionStatement	"errcode = ( * info -> read_memory_func ) ( memaddr - 4 , buffer , sizeof ( buffer ) , info )"	996:8:26797:26886	3312615	0	True				
ANR	3315021	AssignmentExpression	"errcode = ( * info -> read_memory_func ) ( memaddr - 4 , buffer , sizeof ( buffer ) , info )"		3312615	0		=			
ANR	3315022	Identifier	errcode		3312615	0					
ANR	3315023	CallExpression	"( * info -> read_memory_func ) ( memaddr - 4 , buffer , sizeof ( buffer ) , info )"		3312615	1					
ANR	3315024	Callee	* info -> read_memory_func		3312615	0					
ANR	3315025	UnaryOperationExpression	* info -> read_memory_func		3312615	0					
ANR	3315026	UnaryOperator	*		3312615	0					
ANR	3315027	PtrMemberAccess	info -> read_memory_func		3312615	1					
ANR	3315028	Identifier	info		3312615	0					
ANR	3315029	Identifier	read_memory_func		3312615	1					
ANR	3315030	ArgumentList	memaddr - 4		3312615	1					
ANR	3315031	Argument	memaddr - 4		3312615	0					
ANR	3315032	AdditiveExpression	memaddr - 4		3312615	0		-			
ANR	3315033	Identifier	memaddr		3312615	0					
ANR	3315034	PrimaryExpression	4		3312615	1					
ANR	3315035	Argument	buffer		3312615	1					
ANR	3315036	Identifier	buffer		3312615	0					
ANR	3315037	Argument	sizeof ( buffer )		3312615	2					
ANR	3315038	SizeofExpression	sizeof ( buffer )		3312615	0					
ANR	3315039	Sizeof	sizeof		3312615	0					
ANR	3315040	SizeofOperand	buffer		3312615	1					
ANR	3315041	Argument	info		3312615	3					
ANR	3315042	Identifier	info		3312615	0					
ANR	3315043	ElseStatement	else		3312615	0					
ANR	3315044	CompoundStatement		518:14:12602:12602	3312615	0					
ANR	3315045	ExpressionStatement	errcode = 1	999:8:26912:26923	3312615	0	True				
ANR	3315046	AssignmentExpression	errcode = 1		3312615	0		=			
ANR	3315047	Identifier	errcode		3312615	0					
ANR	3315048	PrimaryExpression	1		3312615	1					
ANR	3315049	ExpressionStatement	prev_insn = getword ( buffer )	1002:7:26942:26970	3312615	3	True				
ANR	3315050	AssignmentExpression	prev_insn = getword ( buffer )		3312615	0		=			
ANR	3315051	Identifier	prev_insn		3312615	0					
ANR	3315052	CallExpression	getword ( buffer )		3312615	1					
ANR	3315053	Callee	getword		3312615	0					
ANR	3315054	Identifier	getword		3312615	0					
ANR	3315055	ArgumentList	buffer		3312615	1					
ANR	3315056	Argument	buffer		3312615	0					
ANR	3315057	Identifier	buffer		3312615	0					
ANR	3315058	IfStatement	if ( errcode == 0 )		3312615	4					
ANR	3315059	Condition	errcode == 0	1004:11:26984:26995	3312615	0	True				
ANR	3315060	EqualityExpression	errcode == 0		3312615	0		==			
ANR	3315061	Identifier	errcode		3312615	0					
ANR	3315062	PrimaryExpression	0		3312615	1					
ANR	3315063	CompoundStatement		525:2:12700:12700	3312615	1					
ANR	3315064	IfStatement	if ( is_delayed_branch ( prev_insn ) )		3312615	0					
ANR	3315065	Condition	is_delayed_branch ( prev_insn )	1014:8:27242:27270	3312615	0	True				
ANR	3315066	CallExpression	is_delayed_branch ( prev_insn )		3312615	0					
ANR	3315067	Callee	is_delayed_branch		3312615	0					
ANR	3315068	Identifier	is_delayed_branch		3312615	0					
ANR	3315069	ArgumentList	prev_insn		3312615	1					
ANR	3315070	Argument	prev_insn		3312615	0					
ANR	3315071	Identifier	prev_insn		3312615	0					
ANR	3315072	CompoundStatement		535:6:12979:12979	3312615	1					
ANR	3315073	IfStatement	if ( memaddr >= 8 )		3312615	0					
ANR	3315074	Condition	memaddr >= 8	1016:9:27290:27301	3312615	0	True				
ANR	3315075	RelationalExpression	memaddr >= 8		3312615	0		>=			
ANR	3315076	Identifier	memaddr		3312615	0					
ANR	3315077	PrimaryExpression	8		3312615	1					
ANR	3315078	CompoundStatement		536:23:13004:13004	3312615	1					
ANR	3315079	ExpressionStatement	"errcode = ( * info -> read_memory_func ) ( memaddr - 8 , buffer , sizeof ( buffer ) , info )"	1017:6:27312:27392	3312615	0	True				
ANR	3315080	AssignmentExpression	"errcode = ( * info -> read_memory_func ) ( memaddr - 8 , buffer , sizeof ( buffer ) , info )"		3312615	0		=			
ANR	3315081	Identifier	errcode		3312615	0					
ANR	3315082	CallExpression	"( * info -> read_memory_func ) ( memaddr - 8 , buffer , sizeof ( buffer ) , info )"		3312615	1					
ANR	3315083	Callee	* info -> read_memory_func		3312615	0					
ANR	3315084	UnaryOperationExpression	* info -> read_memory_func		3312615	0					
ANR	3315085	UnaryOperator	*		3312615	0					
ANR	3315086	PtrMemberAccess	info -> read_memory_func		3312615	1					
ANR	3315087	Identifier	info		3312615	0					
ANR	3315088	Identifier	read_memory_func		3312615	1					
ANR	3315089	ArgumentList	memaddr - 8		3312615	1					
ANR	3315090	Argument	memaddr - 8		3312615	0					
ANR	3315091	AdditiveExpression	memaddr - 8		3312615	0		-			
ANR	3315092	Identifier	memaddr		3312615	0					
ANR	3315093	PrimaryExpression	8		3312615	1					
ANR	3315094	Argument	buffer		3312615	1					
ANR	3315095	Identifier	buffer		3312615	0					
ANR	3315096	Argument	sizeof ( buffer )		3312615	2					
ANR	3315097	SizeofExpression	sizeof ( buffer )		3312615	0					
ANR	3315098	Sizeof	sizeof		3312615	0					
ANR	3315099	SizeofOperand	buffer		3312615	1					
ANR	3315100	Argument	info		3312615	3					
ANR	3315101	Identifier	info		3312615	0					
ANR	3315102	ElseStatement	else		3312615	0					
ANR	3315103	CompoundStatement		538:12:13106:13106	3312615	0					
ANR	3315104	ExpressionStatement	errcode = 1	1019:6:27414:27425	3312615	0	True				
ANR	3315105	AssignmentExpression	errcode = 1		3312615	0		=			
ANR	3315106	Identifier	errcode		3312615	0					
ANR	3315107	PrimaryExpression	1		3312615	1					
ANR	3315108	ExpressionStatement	prev_insn = getword ( buffer )	1022:5:27440:27468	3312615	1	True				
ANR	3315109	AssignmentExpression	prev_insn = getword ( buffer )		3312615	0		=			
ANR	3315110	Identifier	prev_insn		3312615	0					
ANR	3315111	CallExpression	getword ( buffer )		3312615	1					
ANR	3315112	Callee	getword		3312615	0					
ANR	3315113	Identifier	getword		3312615	0					
ANR	3315114	ArgumentList	buffer		3312615	1					
ANR	3315115	Argument	buffer		3312615	0					
ANR	3315116	Identifier	buffer		3312615	0					
ANR	3315117	IfStatement	if ( errcode == 0 )		3312615	5					
ANR	3315118	Condition	errcode == 0	1028:11:27602:27613	3312615	0	True				
ANR	3315119	EqualityExpression	errcode == 0		3312615	0		==			
ANR	3315120	Identifier	errcode		3312615	0					
ANR	3315121	PrimaryExpression	0		3312615	1					
ANR	3315122	CompoundStatement		549:2:13318:13318	3312615	1					
ANR	3315123	IfStatement	if ( ( prev_insn & 0xc1c00000 ) == 0x01000000 && X_RD ( prev_insn ) == X_RS1 ( insn ) )		3312615	0					
ANR	3315124	Condition	( prev_insn & 0xc1c00000 ) == 0x01000000 && X_RD ( prev_insn ) == X_RS1 ( insn )	1031:8:27673:27754	3312615	0	True				
ANR	3315125	AndExpression	( prev_insn & 0xc1c00000 ) == 0x01000000 && X_RD ( prev_insn ) == X_RS1 ( insn )		3312615	0		&&			
ANR	3315126	EqualityExpression	( prev_insn & 0xc1c00000 ) == 0x01000000		3312615	0		==			
ANR	3315127	BitAndExpression	prev_insn & 0xc1c00000		3312615	0		&			
ANR	3315128	Identifier	prev_insn		3312615	0					
ANR	3315129	PrimaryExpression	0xc1c00000		3312615	1					
ANR	3315130	PrimaryExpression	0x01000000		3312615	1					
ANR	3315131	EqualityExpression	X_RD ( prev_insn ) == X_RS1 ( insn )		3312615	1		==			
ANR	3315132	CallExpression	X_RD ( prev_insn )		3312615	0					
ANR	3315133	Callee	X_RD		3312615	0					
ANR	3315134	Identifier	X_RD		3312615	0					
ANR	3315135	ArgumentList	prev_insn		3312615	1					
ANR	3315136	Argument	prev_insn		3312615	0					
ANR	3315137	Identifier	prev_insn		3312615	0					
ANR	3315138	CallExpression	X_RS1 ( insn )		3312615	1					
ANR	3315139	Callee	X_RS1		3312615	0					
ANR	3315140	Identifier	X_RS1		3312615	0					
ANR	3315141	ArgumentList	insn		3312615	1					
ANR	3315142	Argument	insn		3312615	0					
ANR	3315143	Identifier	insn		3312615	0					
ANR	3315144	CompoundStatement		553:6:13463:13463	3312615	1					
ANR	3315145	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""\\t! "" )"	1034:8:27773:27811	3312615	0	True				
ANR	3315146	CallExpression	"( * info -> fprintf_func ) ( stream , ""\\t! "" )"		3312615	0					
ANR	3315147	Callee	* info -> fprintf_func		3312615	0					
ANR	3315148	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3315149	UnaryOperator	*		3312615	0					
ANR	3315150	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3315151	Identifier	info		3312615	0					
ANR	3315152	Identifier	fprintf_func		3312615	1					
ANR	3315153	ArgumentList	stream		3312615	1					
ANR	3315154	Argument	stream		3312615	0					
ANR	3315155	Identifier	stream		3312615	0					
ANR	3315156	Argument	"""\\t! """		3312615	1					
ANR	3315157	PrimaryExpression	"""\\t! """		3312615	0					
ANR	3315158	ExpressionStatement	info -> target = ( ( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( prev_insn ) << 10 ) )	1035:8:27821:27902	3312615	1	True				
ANR	3315159	AssignmentExpression	info -> target = ( ( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( prev_insn ) << 10 ) )		3312615	0		=			
ANR	3315160	PtrMemberAccess	info -> target		3312615	0					
ANR	3315161	Identifier	info		3312615	0					
ANR	3315162	Identifier	target		3312615	1					
ANR	3315163	BitAndExpression	( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( prev_insn ) << 10 )		3312615	1		&			
ANR	3315164	CastExpression	( unsigned ) 0xFFFFFFFF		3312615	0					
ANR	3315165	CastTarget	unsigned		3312615	0					
ANR	3315166	PrimaryExpression	0xFFFFFFFF		3312615	1					
ANR	3315167	ShiftExpression	( int ) X_IMM22 ( prev_insn ) << 10		3312615	1		<<			
ANR	3315168	CastExpression	( int ) X_IMM22 ( prev_insn )		3312615	0					
ANR	3315169	CastTarget	int		3312615	0					
ANR	3315170	CallExpression	X_IMM22 ( prev_insn )		3312615	1					
ANR	3315171	Callee	X_IMM22		3312615	0					
ANR	3315172	Identifier	X_IMM22		3312615	0					
ANR	3315173	ArgumentList	prev_insn		3312615	1					
ANR	3315174	Argument	prev_insn		3312615	0					
ANR	3315175	Identifier	prev_insn		3312615	0					
ANR	3315176	PrimaryExpression	10		3312615	1					
ANR	3315177	IfStatement	if ( imm_added_to_rs1 )		3312615	2					
ANR	3315178	Condition	imm_added_to_rs1	1038:12:27916:27931	3312615	0	True				
ANR	3315179	Identifier	imm_added_to_rs1		3312615	0					
ANR	3315180	CompoundStatement		558:30:13634:13634	3312615	1					
ANR	3315181	ExpressionStatement	"info -> target += X_SIMM ( insn , 13 )"	1039:9:27945:27978	3312615	0	True				
ANR	3315182	AssignmentExpression	"info -> target += X_SIMM ( insn , 13 )"		3312615	0		+=			
ANR	3315183	PtrMemberAccess	info -> target		3312615	0					
ANR	3315184	Identifier	info		3312615	0					
ANR	3315185	Identifier	target		3312615	1					
ANR	3315186	CallExpression	"X_SIMM ( insn , 13 )"		3312615	1					
ANR	3315187	Callee	X_SIMM		3312615	0					
ANR	3315188	Identifier	X_SIMM		3312615	0					
ANR	3315189	ArgumentList	insn		3312615	1					
ANR	3315190	Argument	insn		3312615	0					
ANR	3315191	Identifier	insn		3312615	0					
ANR	3315192	Argument	13		3312615	1					
ANR	3315193	PrimaryExpression	13		3312615	0					
ANR	3315194	ElseStatement	else		3312615	0					
ANR	3315195	CompoundStatement		560:15:13695:13695	3312615	0					
ANR	3315196	ExpressionStatement	"info -> target |= X_SIMM ( insn , 13 )"	1041:9:28006:28039	3312615	0	True				
ANR	3315197	AssignmentExpression	"info -> target |= X_SIMM ( insn , 13 )"		3312615	0		|=			
ANR	3315198	PtrMemberAccess	info -> target		3312615	0					
ANR	3315199	Identifier	info		3312615	0					
ANR	3315200	Identifier	target		3312615	1					
ANR	3315201	CallExpression	"X_SIMM ( insn , 13 )"		3312615	1					
ANR	3315202	Callee	X_SIMM		3312615	0					
ANR	3315203	Identifier	X_SIMM		3312615	0					
ANR	3315204	ArgumentList	insn		3312615	1					
ANR	3315205	Argument	insn		3312615	0					
ANR	3315206	Identifier	insn		3312615	0					
ANR	3315207	Argument	13		3312615	1					
ANR	3315208	PrimaryExpression	13		3312615	0					
ANR	3315209	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	1043:8:28059:28107	3312615	3	True				
ANR	3315210	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		3312615	0					
ANR	3315211	Callee	* info -> print_address_func		3312615	0					
ANR	3315212	UnaryOperationExpression	* info -> print_address_func		3312615	0					
ANR	3315213	UnaryOperator	*		3312615	0					
ANR	3315214	PtrMemberAccess	info -> print_address_func		3312615	1					
ANR	3315215	Identifier	info		3312615	0					
ANR	3315216	Identifier	print_address_func		3312615	1					
ANR	3315217	ArgumentList	info -> target		3312615	1					
ANR	3315218	Argument	info -> target		3312615	0					
ANR	3315219	PtrMemberAccess	info -> target		3312615	0					
ANR	3315220	Identifier	info		3312615	0					
ANR	3315221	Identifier	target		3312615	1					
ANR	3315222	Argument	info		3312615	1					
ANR	3315223	Identifier	info		3312615	0					
ANR	3315224	ExpressionStatement	info -> insn_type = dis_dref	1044:8:28117:28143	3312615	4	True				
ANR	3315225	AssignmentExpression	info -> insn_type = dis_dref		3312615	0		=			
ANR	3315226	PtrMemberAccess	info -> insn_type		3312615	0					
ANR	3315227	Identifier	info		3312615	0					
ANR	3315228	Identifier	insn_type		3312615	1					
ANR	3315229	Identifier	dis_dref		3312615	1					
ANR	3315230	ExpressionStatement	info -> data_size = 4	1045:8:28153:28172	3312615	5	True				
ANR	3315231	AssignmentExpression	info -> data_size = 4		3312615	0		=			
ANR	3315232	PtrMemberAccess	info -> data_size		3312615	0					
ANR	3315233	Identifier	info		3312615	0					
ANR	3315234	Identifier	data_size		3312615	1					
ANR	3315235	PrimaryExpression	4		3312615	1					
ANR	3315236	IfStatement	if ( opcode -> flags & ( F_UNBR | F_CONDBR | F_JSR ) )		3312615	11					
ANR	3315237	Condition	opcode -> flags & ( F_UNBR | F_CONDBR | F_JSR )	1050:7:28217:28255	3312615	0	True				
ANR	3315238	BitAndExpression	opcode -> flags & ( F_UNBR | F_CONDBR | F_JSR )		3312615	0		&			
ANR	3315239	PtrMemberAccess	opcode -> flags		3312615	0					
ANR	3315240	Identifier	opcode		3312615	0					
ANR	3315241	Identifier	flags		3312615	1					
ANR	3315242	InclusiveOrExpression	F_UNBR | F_CONDBR | F_JSR		3312615	1		|			
ANR	3315243	Identifier	F_UNBR		3312615	0					
ANR	3315244	InclusiveOrExpression	F_CONDBR | F_JSR		3312615	1		|			
ANR	3315245	Identifier	F_CONDBR		3312615	0					
ANR	3315246	Identifier	F_JSR		3312615	1					
ANR	3315247	CompoundStatement		571:5:13963:13963	3312615	1					
ANR	3315248	ExpressionStatement	( void ) is_annulled	1053:7:28319:28337	3312615	0	True				
ANR	3315249	CastExpression	( void ) is_annulled		3312615	0					
ANR	3315250	CastTarget	void		3312615	0					
ANR	3315251	Identifier	is_annulled		3312615	1					
ANR	3315252	IfStatement	if ( opcode -> flags & F_UNBR )		3312615	1					
ANR	3315253	Condition	opcode -> flags & F_UNBR	1054:11:28350:28371	3312615	0	True				
ANR	3315254	BitAndExpression	opcode -> flags & F_UNBR		3312615	0		&			
ANR	3315255	PtrMemberAccess	opcode -> flags		3312615	0					
ANR	3315256	Identifier	opcode		3312615	0					
ANR	3315257	Identifier	flags		3312615	1					
ANR	3315258	Identifier	F_UNBR		3312615	1					
ANR	3315259	CompoundStatement		574:35:14074:14074	3312615	1					
ANR	3315260	ExpressionStatement	info -> insn_type = dis_branch	1055:8:28384:28412	3312615	0	True				
ANR	3315261	AssignmentExpression	info -> insn_type = dis_branch		3312615	0		=			
ANR	3315262	PtrMemberAccess	info -> insn_type		3312615	0					
ANR	3315263	Identifier	info		3312615	0					
ANR	3315264	Identifier	insn_type		3312615	1					
ANR	3315265	Identifier	dis_branch		3312615	1					
ANR	3315266	IfStatement	if ( opcode -> flags & F_CONDBR )		3312615	2					
ANR	3315267	Condition	opcode -> flags & F_CONDBR	1057:11:28434:28457	3312615	0	True				
ANR	3315268	BitAndExpression	opcode -> flags & F_CONDBR		3312615	0		&			
ANR	3315269	PtrMemberAccess	opcode -> flags		3312615	0					
ANR	3315270	Identifier	opcode		3312615	0					
ANR	3315271	Identifier	flags		3312615	1					
ANR	3315272	Identifier	F_CONDBR		3312615	1					
ANR	3315273	CompoundStatement		577:37:14160:14160	3312615	1					
ANR	3315274	ExpressionStatement	info -> insn_type = dis_condbranch	1058:8:28470:28502	3312615	0	True				
ANR	3315275	AssignmentExpression	info -> insn_type = dis_condbranch		3312615	0		=			
ANR	3315276	PtrMemberAccess	info -> insn_type		3312615	0					
ANR	3315277	Identifier	info		3312615	0					
ANR	3315278	Identifier	insn_type		3312615	1					
ANR	3315279	Identifier	dis_condbranch		3312615	1					
ANR	3315280	IfStatement	if ( opcode -> flags & F_JSR )		3312615	3					
ANR	3315281	Condition	opcode -> flags & F_JSR	1060:11:28524:28544	3312615	0	True				
ANR	3315282	BitAndExpression	opcode -> flags & F_JSR		3312615	0		&			
ANR	3315283	PtrMemberAccess	opcode -> flags		3312615	0					
ANR	3315284	Identifier	opcode		3312615	0					
ANR	3315285	Identifier	flags		3312615	1					
ANR	3315286	Identifier	F_JSR		3312615	1					
ANR	3315287	CompoundStatement		580:34:14247:14247	3312615	1					
ANR	3315288	ExpressionStatement	info -> insn_type = dis_jsr	1061:8:28557:28582	3312615	0	True				
ANR	3315289	AssignmentExpression	info -> insn_type = dis_jsr		3312615	0		=			
ANR	3315290	PtrMemberAccess	info -> insn_type		3312615	0					
ANR	3315291	Identifier	info		3312615	0					
ANR	3315292	Identifier	insn_type		3312615	1					
ANR	3315293	Identifier	dis_jsr		3312615	1					
ANR	3315294	IfStatement	if ( opcode -> flags & F_DELAYED )		3312615	4					
ANR	3315295	Condition	opcode -> flags & F_DELAYED	1063:11:28604:28628	3312615	0	True				
ANR	3315296	BitAndExpression	opcode -> flags & F_DELAYED		3312615	0		&			
ANR	3315297	PtrMemberAccess	opcode -> flags		3312615	0					
ANR	3315298	Identifier	opcode		3312615	0					
ANR	3315299	Identifier	flags		3312615	1					
ANR	3315300	Identifier	F_DELAYED		3312615	1					
ANR	3315301	CompoundStatement		583:38:14331:14331	3312615	1					
ANR	3315302	ExpressionStatement	info -> branch_delay_insns = 1	1064:8:28641:28669	3312615	0	True				
ANR	3315303	AssignmentExpression	info -> branch_delay_insns = 1		3312615	0		=			
ANR	3315304	PtrMemberAccess	info -> branch_delay_insns		3312615	0					
ANR	3315305	Identifier	info		3312615	0					
ANR	3315306	Identifier	branch_delay_insns		3312615	1					
ANR	3315307	PrimaryExpression	1		3312615	1					
ANR	3315308	ReturnStatement	return sizeof ( buffer ) ;	1068:3:28691:28713	3312615	12	True				
ANR	3315309	SizeofExpression	sizeof ( buffer )		3312615	0					
ANR	3315310	Sizeof	sizeof		3312615	0					
ANR	3315311	SizeofOperand	buffer		3312615	1					
ANR	3315312	ExpressionStatement	info -> insn_type = dis_noninsn	1072:2:28727:28756	3312615	18	True				
ANR	3315313	AssignmentExpression	info -> insn_type = dis_noninsn		3312615	0		=			
ANR	3315314	PtrMemberAccess	info -> insn_type		3312615	0					
ANR	3315315	Identifier	info		3312615	0					
ANR	3315316	Identifier	insn_type		3312615	1					
ANR	3315317	Identifier	dis_noninsn		3312615	1					
ANR	3315318	ExpressionStatement	"( * info -> fprintf_func ) ( stream , _ ( ""unknown"" ) )"	1073:2:28798:28842	3312615	19	True				
ANR	3315319	CallExpression	"( * info -> fprintf_func ) ( stream , _ ( ""unknown"" ) )"		3312615	0					
ANR	3315320	Callee	* info -> fprintf_func		3312615	0					
ANR	3315321	UnaryOperationExpression	* info -> fprintf_func		3312615	0					
ANR	3315322	UnaryOperator	*		3312615	0					
ANR	3315323	PtrMemberAccess	info -> fprintf_func		3312615	1					
ANR	3315324	Identifier	info		3312615	0					
ANR	3315325	Identifier	fprintf_func		3312615	1					
ANR	3315326	ArgumentList	stream		3312615	1					
ANR	3315327	Argument	stream		3312615	0					
ANR	3315328	Identifier	stream		3312615	0					
ANR	3315329	Argument	"_ ( ""unknown"" )"		3312615	1					
ANR	3315330	CallExpression	"_ ( ""unknown"" )"		3312615	0					
ANR	3315331	Callee	_		3312615	0					
ANR	3315332	Identifier	_		3312615	0					
ANR	3315333	ArgumentList	"""unknown"""		3312615	1					
ANR	3315334	Argument	"""unknown"""		3312615	0					
ANR	3315335	PrimaryExpression	"""unknown"""		3312615	0					
ANR	3315336	ReturnStatement	return sizeof ( buffer ) ;	1074:2:28846:28868	3312615	20	True				
ANR	3315337	SizeofExpression	sizeof ( buffer )		3312615	0					
ANR	3315338	Sizeof	sizeof		3312615	0					
ANR	3315339	SizeofOperand	buffer		3312615	1					
ANR	3315340	ReturnType	int		3312615	1					
ANR	3315341	Identifier	print_insn_sparc		3312615	2					
ANR	3315342	ParameterList	"bfd_vma memaddr , disassemble_info * info"		3312615	3					
ANR	3315343	Parameter	bfd_vma memaddr	480:18:14258:14272	3312615	0	True				
ANR	3315344	ParameterType	bfd_vma		3312615	0					
ANR	3315345	Identifier	memaddr		3312615	1					
ANR	3315346	Parameter	disassemble_info * info	480:35:14275:14296	3312615	1	True				
ANR	3315347	ParameterType	disassemble_info *		3312615	0					
ANR	3315348	Identifier	info		3312615	1					
ANR	3315349	CFGEntryNode	ENTRY		3312615		True				
ANR	3315350	CFGExitNode	EXIT		3312615		True				
ANR	3315351	Symbol	errcode		3312615						
ANR	3315352	Symbol	sparc_num_opcodes		3312615						
ANR	3315353	Symbol	X_DISP16		3312615						
ANR	3315354	Symbol	strchr		3312615						
ANR	3315355	Symbol	bfd_mach_sparc_sparclite		3312615						
ANR	3315356	Symbol	bit		3312615						
ANR	3315357	Symbol	info -> fprintf_func		3312615						
ANR	3315358	Symbol	xmalloc		3312615						
ANR	3315359	Symbol	sparc_decode_prefetch		3312615						
ANR	3315360	Symbol	* v9a_asr_reg_names		3312615						
ANR	3315361	Symbol	X_DISP19		3312615						
ANR	3315362	Symbol	prev_insn		3312615						
ANR	3315363	Symbol	val		3312615						
ANR	3315364	Symbol	sparc_decode_asi		3312615						
ANR	3315365	Symbol	X_DISP22		3312615						
ANR	3315366	Symbol	brackets		3312615						
ANR	3315367	Symbol	current_arch_mask		3312615						
ANR	3315368	Symbol	F_DELAYED		3312615						
ANR	3315369	Symbol	* X_RD		3312615						
ANR	3315370	Symbol	opcode -> lose		3312615						
ANR	3315371	Symbol	status		3312615						
ANR	3315372	Symbol	op -> opcode		3312615						
ANR	3315373	Symbol	X_IMM		3312615						
ANR	3315374	Symbol	X_LDST_I		3312615						
ANR	3315375	Symbol	SEX		3312615						
ANR	3315376	Symbol	info -> branch_delay_insns		3312615						
ANR	3315377	Symbol	X_DISP30		3312615						
ANR	3315378	Symbol	info -> stream		3312615						
ANR	3315379	Symbol	compute_arch_mask		3312615						
ANR	3315380	Symbol	X_RD		3312615						
ANR	3315381	Symbol	opcode_hash_table		3312615						
ANR	3315382	Symbol	imm_ored_to_rs1		3312615						
ANR	3315383	Symbol	stream		3312615						
ANR	3315384	Symbol	opcodes_initialized		3312615						
ANR	3315385	Symbol	* X_RS1		3312615						
ANR	3315386	Symbol	printed_one		3312615						
ANR	3315387	Symbol	* info -> read_memory_func		3312615						
ANR	3315388	Symbol	_		3312615						
ANR	3315389	Symbol	imm_added_to_rs1		3312615						
ANR	3315390	Symbol	i		3312615						
ANR	3315391	Symbol	X_IMM22		3312615						
ANR	3315392	Symbol	info -> memory_error_func		3312615						
ANR	3315393	Symbol	sorted_opcodes		3312615						
ANR	3315394	Symbol	insn		3312615						
ANR	3315395	Symbol	X_SIMM		3312615						
ANR	3315396	Symbol	v9_hpriv_reg_names		3312615						
ANR	3315397	Symbol	s		3312615						
ANR	3315398	Symbol	current_mach		3312615						
ANR	3315399	Symbol	* info		3312615						
ANR	3315400	Symbol	bfd_getl32		3312615						
ANR	3315401	Symbol	dis_branch		3312615						
ANR	3315402	Symbol	* sorted_opcodes		3312615						
ANR	3315403	Symbol	opcode -> args		3312615						
ANR	3315404	Symbol	* opcode		3312615						
ANR	3315405	Symbol	compare_opcodes		3312615						
ANR	3315406	Symbol	is_annulled		3312615						
ANR	3315407	Symbol	is_delayed_branch		3312615						
ANR	3315408	Symbol	* op		3312615						
ANR	3315409	Symbol	* v9_priv_reg_names		3312615						
ANR	3315410	Symbol	dis_jsr		3312615						
ANR	3315411	Symbol	dis_noninsn		3312615						
ANR	3315412	Symbol	* opcode_hash_table		3312615						
ANR	3315413	Symbol	info -> data_size		3312615						
ANR	3315414	Symbol	opcode		3312615						
ANR	3315415	Symbol	sparc_decode_membar		3312615						
ANR	3315416	Symbol	v9a_asr_reg_names		3312615						
ANR	3315417	Symbol	dis_nonbranch		3312615						
ANR	3315418	Symbol	opcode -> flags		3312615						
ANR	3315419	Symbol	sparc_decode_sparclet_cpreg		3312615						
ANR	3315420	Symbol	buffer		3312615						
ANR	3315421	Symbol	HASH_INSN		3312615						
ANR	3315422	Symbol	info		3312615						
ANR	3315423	Symbol	opcode -> name		3312615						
ANR	3315424	Symbol	* HASH_INSN		3312615						
ANR	3315425	Symbol	info -> endian		3312615						
ANR	3315426	Symbol	X_RS1		3312615						
ANR	3315427	Symbol	X_RS2		3312615						
ANR	3315428	Symbol	F_JSR		3312615						
ANR	3315429	Symbol	info -> read_memory_func		3312615						
ANR	3315430	Symbol	name		3312615						
ANR	3315431	Symbol	info -> insn_info_valid		3312615						
ANR	3315432	Symbol	* * info		3312615						
ANR	3315433	Symbol	memaddr		3312615						
ANR	3315434	Symbol	imm		3312615						
ANR	3315435	Symbol	X_MEMBAR		3312615						
ANR	3315436	Symbol	dis_dref		3312615						
ANR	3315437	Symbol	* v9_hpriv_reg_names		3312615						
ANR	3315438	Symbol	info -> target		3312615						
ANR	3315439	Symbol	BFD_ENDIAN_BIG		3312615						
ANR	3315440	Symbol	info -> print_address_func		3312615						
ANR	3315441	Symbol	F_UNBR		3312615						
ANR	3315442	Symbol	info -> insn_type		3312615						
ANR	3315443	Symbol	opcode -> architecture		3312615						
ANR	3315444	Symbol	mask		3312615						
ANR	3315445	Symbol	F_CONDBR		3312615						
ANR	3315446	Symbol	op		3312615						
ANR	3315447	Symbol	bfd_getb32		3312615						
ANR	3315448	Symbol	info -> mach		3312615						
ANR	3315449	Symbol	op -> next		3312615						
ANR	3315450	Symbol	sparc_opcodes		3312615						
ANR	3315451	Symbol	dis_condbranch		3312615						
ANR	3315452	Symbol	found_plus		3312615						
ANR	3315453	Symbol	v9_priv_reg_names		3312615						
ANR	3315454	Symbol	opcode -> match		3312615						
ANR	3315455	Symbol	* i		3312615						
ANR	3315456	Symbol	X_ASI		3312615						
ANR	3315457	Symbol	getword		3312615						
ANR	3315458	Symbol	* s		3312615						
