command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1318425	File	data/converged/CVE-2019-16718~_radare2/elf.c								
ANR	1318426	Function	UTX_MUL	49:0:1297:1378							
ANR	1318427	FunctionDef	"UTX_MUL (ut64 * r , ut64 a , ut64 b)"		1318426	0					
ANR	1318428	CompoundStatement		49:51:1348:1378	1318426	0					
ANR	1318429	ReturnStatement	"return UT64_MUL ( r , a , b ) ;"	50:1:1351:1376	1318426	0	True				
ANR	1318430	CallExpression	"UT64_MUL ( r , a , b )"		1318426	0					
ANR	1318431	Callee	UT64_MUL		1318426	0					
ANR	1318432	Identifier	UT64_MUL		1318426	0					
ANR	1318433	ArgumentList	r		1318426	1					
ANR	1318434	Argument	r		1318426	0					
ANR	1318435	Identifier	r		1318426	0					
ANR	1318436	Argument	a		1318426	1					
ANR	1318437	Identifier	a		1318426	0					
ANR	1318438	Argument	b		1318426	2					
ANR	1318439	Identifier	b		1318426	0					
ANR	1318440	ReturnType	static inline int		1318426	1					
ANR	1318441	Identifier	UTX_MUL		1318426	2					
ANR	1318442	ParameterList	"ut64 * r , ut64 a , ut64 b"		1318426	3					
ANR	1318443	Parameter	ut64 * r	49:26:1323:1329	1318426	0	True				
ANR	1318444	ParameterType	ut64 *		1318426	0					
ANR	1318445	Identifier	r		1318426	1					
ANR	1318446	Parameter	ut64 a	49:35:1332:1337	1318426	1	True				
ANR	1318447	ParameterType	ut64		1318426	0					
ANR	1318448	Identifier	a		1318426	1					
ANR	1318449	Parameter	ut64 b	49:43:1340:1345	1318426	2	True				
ANR	1318450	ParameterType	ut64		1318426	0					
ANR	1318451	Identifier	b		1318426	1					
ANR	1318452	CFGEntryNode	ENTRY		1318426		True				
ANR	1318453	CFGExitNode	EXIT		1318426		True				
ANR	1318454	Symbol	a		1318426						
ANR	1318455	Symbol	r		1318426						
ANR	1318456	Symbol	b		1318426						
ANR	1318457	Symbol	UT64_MUL		1318426						
ANR	1318458	Function	UTX_MUL	53:0:1386:1510							
ANR	1318459	FunctionDef	"UTX_MUL (ut64 * r , ut64 a , ut64 b)"		1318458	0					
ANR	1318460	CompoundStatement		53:51:1437:1510	1318458	0					
ANR	1318461	IdentifierDeclStatement	ut32 r2 = * r ;	54:1:1440:1452	1318458	0	True				
ANR	1318462	IdentifierDecl	r2 = * r		1318458	0					
ANR	1318463	IdentifierDeclType	ut32		1318458	0					
ANR	1318464	Identifier	r2		1318458	1					
ANR	1318465	AssignmentExpression	r2 = * r		1318458	2		=			
ANR	1318466	Identifier	r2		1318458	0					
ANR	1318467	UnaryOperationExpression	* r		1318458	1					
ANR	1318468	UnaryOperator	*		1318458	0					
ANR	1318469	Identifier	r		1318458	1					
ANR	1318470	IdentifierDeclStatement	"int res = UT32_MUL ( & r2 , a , b ) ;"	55:1:1455:1485	1318458	1	True				
ANR	1318471	IdentifierDecl	"res = UT32_MUL ( & r2 , a , b )"		1318458	0					
ANR	1318472	IdentifierDeclType	int		1318458	0					
ANR	1318473	Identifier	res		1318458	1					
ANR	1318474	AssignmentExpression	"res = UT32_MUL ( & r2 , a , b )"		1318458	2		=			
ANR	1318475	Identifier	res		1318458	0					
ANR	1318476	CallExpression	"UT32_MUL ( & r2 , a , b )"		1318458	1					
ANR	1318477	Callee	UT32_MUL		1318458	0					
ANR	1318478	Identifier	UT32_MUL		1318458	0					
ANR	1318479	ArgumentList	& r2		1318458	1					
ANR	1318480	Argument	& r2		1318458	0					
ANR	1318481	UnaryOperationExpression	& r2		1318458	0					
ANR	1318482	UnaryOperator	&		1318458	0					
ANR	1318483	Identifier	r2		1318458	1					
ANR	1318484	Argument	a		1318458	1					
ANR	1318485	Identifier	a		1318458	0					
ANR	1318486	Argument	b		1318458	2					
ANR	1318487	Identifier	b		1318458	0					
ANR	1318488	ExpressionStatement	* r = r2	56:1:1488:1495	1318458	2	True				
ANR	1318489	AssignmentExpression	* r = r2		1318458	0		=			
ANR	1318490	UnaryOperationExpression	* r		1318458	0					
ANR	1318491	UnaryOperator	*		1318458	0					
ANR	1318492	Identifier	r		1318458	1					
ANR	1318493	Identifier	r2		1318458	1					
ANR	1318494	ReturnStatement	return res ;	57:1:1498:1508	1318458	3	True				
ANR	1318495	Identifier	res		1318458	0					
ANR	1318496	ReturnType	static inline int		1318458	1					
ANR	1318497	Identifier	UTX_MUL		1318458	2					
ANR	1318498	ParameterList	"ut64 * r , ut64 a , ut64 b"		1318458	3					
ANR	1318499	Parameter	ut64 * r	53:26:1412:1418	1318458	0	True				
ANR	1318500	ParameterType	ut64 *		1318458	0					
ANR	1318501	Identifier	r		1318458	1					
ANR	1318502	Parameter	ut64 a	53:35:1421:1426	1318458	1	True				
ANR	1318503	ParameterType	ut64		1318458	0					
ANR	1318504	Identifier	a		1318458	1					
ANR	1318505	Parameter	ut64 b	53:43:1429:1434	1318458	2	True				
ANR	1318506	ParameterType	ut64		1318458	0					
ANR	1318507	Identifier	b		1318458	1					
ANR	1318508	CFGEntryNode	ENTRY		1318458		True				
ANR	1318509	CFGExitNode	EXIT		1318458		True				
ANR	1318510	Symbol	r2		1318458						
ANR	1318511	Symbol	UT32_MUL		1318458						
ANR	1318512	Symbol	a		1318458						
ANR	1318513	Symbol	res		1318458						
ANR	1318514	Symbol	r		1318458						
ANR	1318515	Symbol	b		1318458						
ANR	1318516	Symbol	& r2		1318458						
ANR	1318517	Symbol	* r		1318458						
ANR	1318518	ClassDef	<unnamed>	65:0:1604:1658							
ANR	1318519	ClassDef	reginfo	74:8:1670:1729							
ANR	1318520	DeclStmt									
ANR	1318521	Decl							ut32	ut32	regsize
ANR	1318522	DeclStmt									
ANR	1318523	Decl							ut32	ut32	regdelta
ANR	1318524	DeclStmt									
ANR	1318525	Decl							reginfo	reginfo	reginfo_t
ANR	1318526	DeclStmt									
ANR	1318527	Decl							reginfo_t	reginfo_t [ ARCH_LEN ]	reginf
ANR	1318528	Function	__strnlen	87:0:1852:2037							
ANR	1318529	FunctionDef	"__strnlen (const char * str , int len)"		1318528	0					
ANR	1318530	CompoundStatement		87:54:1906:2037	1318528	0					
ANR	1318531	IdentifierDeclStatement	int l = 0 ;	88:1:1909:1918	1318528	0	True				
ANR	1318532	IdentifierDecl	l = 0		1318528	0					
ANR	1318533	IdentifierDeclType	int		1318528	0					
ANR	1318534	Identifier	l		1318528	1					
ANR	1318535	AssignmentExpression	l = 0		1318528	2		=			
ANR	1318536	Identifier	l		1318528	0					
ANR	1318537	PrimaryExpression	0		1318528	1					
ANR	1318538	WhileStatement	while ( IS_PRINTABLE ( * str ) && -- len )		1318528	1					
ANR	1318539	Condition	IS_PRINTABLE ( * str ) && -- len	89:8:1928:1955	1318528	0	True				
ANR	1318540	AndExpression	IS_PRINTABLE ( * str ) && -- len		1318528	0		&&			
ANR	1318541	CallExpression	IS_PRINTABLE ( * str )		1318528	0					
ANR	1318542	Callee	IS_PRINTABLE		1318528	0					
ANR	1318543	Identifier	IS_PRINTABLE		1318528	0					
ANR	1318544	ArgumentList	* str		1318528	1					
ANR	1318545	Argument	* str		1318528	0					
ANR	1318546	UnaryOperationExpression	* str		1318528	0					
ANR	1318547	UnaryOperator	*		1318528	0					
ANR	1318548	Identifier	str		1318528	1					
ANR	1318549	UnaryExpression	-- len		1318528	1					
ANR	1318550	IncDec	--		1318528	0					
ANR	1318551	Identifier	len		1318528	1					
ANR	1318552	CompoundStatement		3:38:51:51	1318528	1					
ANR	1318553	IfStatement	if ( ( ( ut8 ) * str ) == 0xff )		1318528	0					
ANR	1318554	Condition	( ( ut8 ) * str ) == 0xff	90:6:1966:1984	1318528	0	True				
ANR	1318555	EqualityExpression	( ( ut8 ) * str ) == 0xff		1318528	0		==			
ANR	1318556	CastExpression	( ut8 ) * str		1318528	0					
ANR	1318557	CastTarget	ut8		1318528	0					
ANR	1318558	UnaryOperationExpression	* str		1318528	1					
ANR	1318559	UnaryOperator	*		1318528	0					
ANR	1318560	Identifier	str		1318528	1					
ANR	1318561	PrimaryExpression	0xff		1318528	1					
ANR	1318562	CompoundStatement		4:27:80:80	1318528	1					
ANR	1318563	BreakStatement	break ;	91:3:1992:1997	1318528	0	True				
ANR	1318564	ExpressionStatement	str ++	93:2:2005:2010	1318528	1	True				
ANR	1318565	PostIncDecOperationExpression	str ++		1318528	0					
ANR	1318566	Identifier	str		1318528	0					
ANR	1318567	IncDec	++		1318528	1					
ANR	1318568	ExpressionStatement	l ++	94:2:2014:2017	1318528	2	True				
ANR	1318569	PostIncDecOperationExpression	l ++		1318528	0					
ANR	1318570	Identifier	l		1318528	0					
ANR	1318571	IncDec	++		1318528	1					
ANR	1318572	ReturnStatement	return l + 1 ;	96:1:2023:2035	1318528	2	True				
ANR	1318573	AdditiveExpression	l + 1		1318528	0		+			
ANR	1318574	Identifier	l		1318528	0					
ANR	1318575	PrimaryExpression	1		1318528	1					
ANR	1318576	ReturnType	static inline int		1318528	1					
ANR	1318577	Identifier	__strnlen		1318528	2					
ANR	1318578	ParameterList	"const char * str , int len"		1318528	3					
ANR	1318579	Parameter	const char * str	87:28:1880:1894	1318528	0	True				
ANR	1318580	ParameterType	const char *		1318528	0					
ANR	1318581	Identifier	str		1318528	1					
ANR	1318582	Parameter	int len	87:45:1897:1903	1318528	1	True				
ANR	1318583	ParameterType	int		1318528	0					
ANR	1318584	Identifier	len		1318528	1					
ANR	1318585	CFGEntryNode	ENTRY		1318528		True				
ANR	1318586	CFGExitNode	EXIT		1318528		True				
ANR	1318587	Symbol	str		1318528						
ANR	1318588	Symbol	IS_PRINTABLE		1318528						
ANR	1318589	Symbol	len		1318528						
ANR	1318590	Symbol	* str		1318528						
ANR	1318591	Symbol	l		1318528						
ANR	1318592	Function	is_bin_etrel	99:0:2040:2116							
ANR	1318593	FunctionDef	is_bin_etrel (ELFOBJ * bin)		1318592	0					
ANR	1318594	CompoundStatement		99:38:2078:2116	1318592	0					
ANR	1318595	ReturnStatement	return bin -> ehdr . e_type == ET_REL ;	100:1:2081:2114	1318592	0	True				
ANR	1318596	EqualityExpression	bin -> ehdr . e_type == ET_REL		1318592	0		==			
ANR	1318597	MemberAccess	bin -> ehdr . e_type		1318592	0					
ANR	1318598	PtrMemberAccess	bin -> ehdr		1318592	0					
ANR	1318599	Identifier	bin		1318592	0					
ANR	1318600	Identifier	ehdr		1318592	1					
ANR	1318601	Identifier	e_type		1318592	1					
ANR	1318602	Identifier	ET_REL		1318592	1					
ANR	1318603	ReturnType	static bool		1318592	1					
ANR	1318604	Identifier	is_bin_etrel		1318592	2					
ANR	1318605	ParameterList	ELFOBJ * bin		1318592	3					
ANR	1318606	Parameter	ELFOBJ * bin	99:25:2065:2075	1318592	0	True				
ANR	1318607	ParameterType	ELFOBJ *		1318592	0					
ANR	1318608	Identifier	bin		1318592	1					
ANR	1318609	CFGEntryNode	ENTRY		1318592		True				
ANR	1318610	CFGExitNode	EXIT		1318592		True				
ANR	1318611	Symbol	bin -> ehdr . e_type		1318592						
ANR	1318612	Symbol	ET_REL		1318592						
ANR	1318613	Symbol	bin		1318592						
ANR	1318614	Symbol	bin -> ehdr		1318592						
ANR	1318615	Symbol	* bin		1318592						
ANR	1318616	Function	__is_valid_ident	103:0:2119:2285							
ANR	1318617	FunctionDef	__is_valid_ident (ELFOBJ * bin)		1318616	0					
ANR	1318618	CompoundStatement		103:42:2161:2285	1318616	0					
ANR	1318619	ReturnStatement	"return ! strncmp ( ( char * ) bin -> ehdr . e_ident , ELFMAG , SELFMAG ) || ! strncmp ( ( char * ) bin -> ehdr . e_ident , CGCMAG , SCGCMAG ) ;"	104:1:2164:2283	1318616	0	True				
ANR	1318620	OrExpression	"! strncmp ( ( char * ) bin -> ehdr . e_ident , ELFMAG , SELFMAG ) || ! strncmp ( ( char * ) bin -> ehdr . e_ident , CGCMAG , SCGCMAG )"		1318616	0		||			
ANR	1318621	UnaryOperationExpression	"! strncmp ( ( char * ) bin -> ehdr . e_ident , ELFMAG , SELFMAG )"		1318616	0					
ANR	1318622	UnaryOperator	!		1318616	0					
ANR	1318623	CallExpression	"strncmp ( ( char * ) bin -> ehdr . e_ident , ELFMAG , SELFMAG )"		1318616	1					
ANR	1318624	Callee	strncmp		1318616	0					
ANR	1318625	Identifier	strncmp		1318616	0					
ANR	1318626	ArgumentList	( char * ) bin -> ehdr . e_ident		1318616	1					
ANR	1318627	Argument	( char * ) bin -> ehdr . e_ident		1318616	0					
ANR	1318628	CastExpression	( char * ) bin -> ehdr . e_ident		1318616	0					
ANR	1318629	CastTarget	char *		1318616	0					
ANR	1318630	MemberAccess	bin -> ehdr . e_ident		1318616	1					
ANR	1318631	PtrMemberAccess	bin -> ehdr		1318616	0					
ANR	1318632	Identifier	bin		1318616	0					
ANR	1318633	Identifier	ehdr		1318616	1					
ANR	1318634	Identifier	e_ident		1318616	1					
ANR	1318635	Argument	ELFMAG		1318616	1					
ANR	1318636	Identifier	ELFMAG		1318616	0					
ANR	1318637	Argument	SELFMAG		1318616	2					
ANR	1318638	Identifier	SELFMAG		1318616	0					
ANR	1318639	UnaryOperationExpression	"! strncmp ( ( char * ) bin -> ehdr . e_ident , CGCMAG , SCGCMAG )"		1318616	1					
ANR	1318640	UnaryOperator	!		1318616	0					
ANR	1318641	CallExpression	"strncmp ( ( char * ) bin -> ehdr . e_ident , CGCMAG , SCGCMAG )"		1318616	1					
ANR	1318642	Callee	strncmp		1318616	0					
ANR	1318643	Identifier	strncmp		1318616	0					
ANR	1318644	ArgumentList	( char * ) bin -> ehdr . e_ident		1318616	1					
ANR	1318645	Argument	( char * ) bin -> ehdr . e_ident		1318616	0					
ANR	1318646	CastExpression	( char * ) bin -> ehdr . e_ident		1318616	0					
ANR	1318647	CastTarget	char *		1318616	0					
ANR	1318648	MemberAccess	bin -> ehdr . e_ident		1318616	1					
ANR	1318649	PtrMemberAccess	bin -> ehdr		1318616	0					
ANR	1318650	Identifier	bin		1318616	0					
ANR	1318651	Identifier	ehdr		1318616	1					
ANR	1318652	Identifier	e_ident		1318616	1					
ANR	1318653	Argument	CGCMAG		1318616	1					
ANR	1318654	Identifier	CGCMAG		1318616	0					
ANR	1318655	Argument	SCGCMAG		1318616	2					
ANR	1318656	Identifier	SCGCMAG		1318616	0					
ANR	1318657	ReturnType	static bool		1318616	1					
ANR	1318658	Identifier	__is_valid_ident		1318616	2					
ANR	1318659	ParameterList	ELFOBJ * bin		1318616	3					
ANR	1318660	Parameter	ELFOBJ * bin	103:29:2148:2158	1318616	0	True				
ANR	1318661	ParameterType	ELFOBJ *		1318616	0					
ANR	1318662	Identifier	bin		1318616	1					
ANR	1318663	CFGEntryNode	ENTRY		1318616		True				
ANR	1318664	CFGExitNode	EXIT		1318616		True				
ANR	1318665	Symbol	strncmp		1318616						
ANR	1318666	Symbol	SELFMAG		1318616						
ANR	1318667	Symbol	SCGCMAG		1318616						
ANR	1318668	Symbol	bin		1318616						
ANR	1318669	Symbol	bin -> ehdr . e_ident		1318616						
ANR	1318670	Symbol	bin -> ehdr		1318616						
ANR	1318671	Symbol	CGCMAG		1318616						
ANR	1318672	Symbol	ELFMAG		1318616						
ANR	1318673	Symbol	* bin		1318616						
ANR	1318674	Function	init_ehdr	108:0:2288:8009							
ANR	1318675	FunctionDef	init_ehdr (ELFOBJ * bin)		1318674	0					
ANR	1318676	CompoundStatement		108:35:2323:8009	1318674	0					
ANR	1318677	IdentifierDeclStatement	ut8 e_ident [ EI_NIDENT ] ;	109:1:2326:2348	1318674	0	True				
ANR	1318678	IdentifierDecl	e_ident [ EI_NIDENT ]		1318674	0					
ANR	1318679	IdentifierDeclType	ut8 [ EI_NIDENT ]		1318674	0					
ANR	1318680	Identifier	e_ident		1318674	1					
ANR	1318681	Identifier	EI_NIDENT		1318674	2					
ANR	1318682	IdentifierDeclStatement	ut8 ehdr [ sizeof ( Elf_ ( Ehdr ) ) ] = { 0 } ;	110:1:2351:2388	1318674	1	True				
ANR	1318683	IdentifierDecl	ehdr [ sizeof ( Elf_ ( Ehdr ) ) ] = { 0 }		1318674	0					
ANR	1318684	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Ehdr ) ) ]		1318674	0					
ANR	1318685	Identifier	ehdr		1318674	1					
ANR	1318686	SizeofExpression	sizeof ( Elf_ ( Ehdr ) )		1318674	2					
ANR	1318687	Sizeof	sizeof		1318674	0					
ANR	1318688	CallExpression	Elf_ ( Ehdr )		1318674	1					
ANR	1318689	Callee	Elf_		1318674	0					
ANR	1318690	Identifier	Elf_		1318674	0					
ANR	1318691	ArgumentList	Ehdr		1318674	1					
ANR	1318692	Argument	Ehdr		1318674	0					
ANR	1318693	Identifier	Ehdr		1318674	0					
ANR	1318694	AssignmentExpression	ehdr [ sizeof ( Elf_ ( Ehdr ) ) ] = { 0 }		1318674	3		=			
ANR	1318695	Identifier	ehdr		1318674	0					
ANR	1318696	InitializerList	0		1318674	1					
ANR	1318697	PrimaryExpression	0		1318674	0					
ANR	1318698	IdentifierDeclStatement	"int i , len ;"	111:1:2391:2401	1318674	2	True				
ANR	1318699	IdentifierDecl	i		1318674	0					
ANR	1318700	IdentifierDeclType	int		1318674	0					
ANR	1318701	Identifier	i		1318674	1					
ANR	1318702	IdentifierDecl	len		1318674	1					
ANR	1318703	IdentifierDeclType	int		1318674	0					
ANR	1318704	Identifier	len		1318674	1					
ANR	1318705	IfStatement	"if ( r_buf_read_at ( bin -> b , 0 , e_ident , EI_NIDENT ) == - 1 )"		1318674	3					
ANR	1318706	Condition	"r_buf_read_at ( bin -> b , 0 , e_ident , EI_NIDENT ) == - 1"	112:5:2408:2458	1318674	0	True				
ANR	1318707	EqualityExpression	"r_buf_read_at ( bin -> b , 0 , e_ident , EI_NIDENT ) == - 1"		1318674	0		==			
ANR	1318708	CallExpression	"r_buf_read_at ( bin -> b , 0 , e_ident , EI_NIDENT )"		1318674	0					
ANR	1318709	Callee	r_buf_read_at		1318674	0					
ANR	1318710	Identifier	r_buf_read_at		1318674	0					
ANR	1318711	ArgumentList	bin -> b		1318674	1					
ANR	1318712	Argument	bin -> b		1318674	0					
ANR	1318713	PtrMemberAccess	bin -> b		1318674	0					
ANR	1318714	Identifier	bin		1318674	0					
ANR	1318715	Identifier	b		1318674	1					
ANR	1318716	Argument	0		1318674	1					
ANR	1318717	PrimaryExpression	0		1318674	0					
ANR	1318718	Argument	e_ident		1318674	2					
ANR	1318719	Identifier	e_ident		1318674	0					
ANR	1318720	Argument	EI_NIDENT		1318674	3					
ANR	1318721	Identifier	EI_NIDENT		1318674	0					
ANR	1318722	UnaryOperationExpression	- 1		1318674	1					
ANR	1318723	UnaryOperator	-		1318674	0					
ANR	1318724	PrimaryExpression	1		1318674	1					
ANR	1318725	CompoundStatement		5:58:137:137	1318674	1					
ANR	1318726	ExpressionStatement	"bprintf ( ""read (magic)\\n"" )"	113:2:2465:2491	1318674	0	True				
ANR	1318727	CallExpression	"bprintf ( ""read (magic)\\n"" )"		1318674	0					
ANR	1318728	Callee	bprintf		1318674	0					
ANR	1318729	Identifier	bprintf		1318674	0					
ANR	1318730	ArgumentList	"""read (magic)\\n"""		1318674	1					
ANR	1318731	Argument	"""read (magic)\\n"""		1318674	0					
ANR	1318732	PrimaryExpression	"""read (magic)\\n"""		1318674	0					
ANR	1318733	ReturnStatement	return false ;	114:2:2495:2507	1318674	1	True				
ANR	1318734	Identifier	false		1318674	0					
ANR	1318735	Statement	sdb_set	116:1:2513:2519	1318674	4	True				
ANR	1318736	Statement	(	116:9:2521:2521	1318674	5	True				
ANR	1318737	Statement	bin	116:10:2522:2524	1318674	6	True				
ANR	1318738	Statement	->	116:13:2525:2526	1318674	7	True				
ANR	1318739	Statement	kv	116:15:2527:2528	1318674	8	True				
ANR	1318740	Statement	","	116:17:2529:2529	1318674	9	True				
ANR	1318741	Statement	"""elf_type.cparse"""	116:19:2531:2547	1318674	10	True				
ANR	1318742	Statement	","	116:36:2548:2548	1318674	11	True				
ANR	1318743	Statement	"""enum elf_type { ET_NONE=0, ET_REL=1,"""	116:38:2550:2587	1318674	12	True				
ANR	1318744	Statement	""" ET_EXEC=2, ET_DYN=3, ET_CORE=4, ET_LOOS=0xfe00, ET_HIOS=0xfeff,"""	117:3:2592:2657	1318674	13	True				
ANR	1318745	Statement	""" ET_LOPROC=0xff00, ET_HIPROC=0xffff };"""	118:3:2662:2701	1318674	14	True				
ANR	1318746	Statement	","	118:43:2702:2702	1318674	15	True				
ANR	1318747	Statement	0	118:45:2704:2704	1318674	16	True				
ANR	1318748	Statement	)	118:46:2705:2705	1318674	17	True				
ANR	1318749	ExpressionStatement		118:47:2706:2706	1318674	18	True				
ANR	1318750	Statement	sdb_set	119:1:2709:2715	1318674	19	True				
ANR	1318751	Statement	(	119:9:2717:2717	1318674	20	True				
ANR	1318752	Statement	bin	119:10:2718:2720	1318674	21	True				
ANR	1318753	Statement	->	119:13:2721:2722	1318674	22	True				
ANR	1318754	Statement	kv	119:15:2723:2724	1318674	23	True				
ANR	1318755	Statement	","	119:17:2725:2725	1318674	24	True				
ANR	1318756	Statement	"""elf_machine.cparse"""	119:19:2727:2746	1318674	25	True				
ANR	1318757	Statement	","	119:39:2747:2747	1318674	26	True				
ANR	1318758	Statement	"""enum elf_machine {EM_NONE=0, EM_M32=1,"""	119:41:2749:2788	1318674	27	True				
ANR	1318759	Statement	""" EM_SPARC=2, EM_386=3, EM_68K=4, EM_88K=5, EM_IAMCU=6, EM_860=7, EM_MIPS=8,"""	120:3:2793:2869	1318674	28	True				
ANR	1318760	Statement	""" EM_S370=9, EM_MIPS_RS3_LE=10, EM_RS6000=11, EM_PARISC=15, EM_nCUBE=16,"""	121:3:2874:2946	1318674	29	True				
ANR	1318761	Statement	""" EM_VPP500=17, EM_SPARC32PLUS=18, EM_960=19, EM_PPC=20, EM_PPC64=21, EM_S390=22,"""	122:3:2951:3032	1318674	30	True				
ANR	1318762	Statement	""" EM_SPU=23, EM_V800=36, EM_FR20=37, EM_RH32=38, EM_RCE=39, EM_ARM=40,"""	123:3:3037:3107	1318674	31	True				
ANR	1318763	Statement	""" EM_ALPHA=41, EM_SH=42, EM_SPARCV9=43, EM_TRICORE=44, EM_ARC=45, EM_H8_300=46,"""	124:3:3112:3191	1318674	32	True				
ANR	1318764	Statement	""" EM_H8_300H=47, EM_H8S=48, EM_H8_500=49, EM_IA_64=50, EM_MIPS_X=51,"""	125:3:3196:3264	1318674	33	True				
ANR	1318765	Statement	""" EM_COLDFIRE=52, EM_68HC12=53, EM_MMA=54, EM_PCP=55, EM_NCPU=56, EM_NDR1=57,"""	126:3:3269:3346	1318674	34	True				
ANR	1318766	Statement	""" EM_STARCORE=58, EM_ME16=59, EM_ST100=60, EM_TINYJ=61, EM_X86_64=62, EM_PDSP=63,"""	127:3:3351:3432	1318674	35	True				
ANR	1318767	Statement	""" EM_PDP10=64, EM_PDP11=65, EM_FX66=66, EM_ST9PLUS=67, EM_ST7=68, EM_68HC16=69,"""	128:3:3437:3516	1318674	36	True				
ANR	1318768	Statement	""" EM_68HC11=70, EM_68HC08=71, EM_68HC05=72, EM_SVX=73, EM_ST19=74, EM_VAX=75,"""	129:3:3521:3598	1318674	37	True				
ANR	1318769	Statement	""" EM_CRIS=76, EM_JAVELIN=77, EM_FIREPATH=78, EM_ZSP=79, EM_MMIX=80, EM_HUANY=81,"""	130:3:3603:3683	1318674	38	True				
ANR	1318770	Statement	""" EM_PRISM=82, EM_AVR=83, EM_FR30=84, EM_D10V=85, EM_D30V=86, EM_V850=87,"""	131:3:3688:3761	1318674	39	True				
ANR	1318771	Statement	""" EM_M32R=88, EM_MN10300=89, EM_MN10200=90, EM_PJ=91, EM_OPENRISC=92,"""	132:3:3766:3835	1318674	40	True				
ANR	1318772	Statement	""" EM_ARC_COMPACT=93, EM_XTENSA=94, EM_VIDEOCORE=95, EM_TMM_GPP=96, EM_NS32K=97,"""	133:3:3840:3919	1318674	41	True				
ANR	1318773	Statement	""" EM_TPC=98, EM_SNP1K=99, EM_ST200=100, EM_IP2K=101, EM_MAX=102, EM_CR=103,"""	134:3:3924:3999	1318674	42	True				
ANR	1318774	Statement	""" EM_F2MC16=104, EM_MSP430=105, EM_BLACKFIN=106, EM_SE_C33=107, EM_SEP=108,"""	135:3:4004:4079	1318674	43	True				
ANR	1318775	Statement	""" EM_ARCA=109, EM_UNICORE=110, EM_EXCESS=111, EM_DXP=112, EM_ALTERA_NIOS2=113,"""	136:3:4084:4162	1318674	44	True				
ANR	1318776	Statement	""" EM_CRX=114, EM_XGATE=115, EM_C166=116, EM_M16C=117, EM_DSPIC30F=118, EM_CE=119,"""	137:3:4167:4248	1318674	45	True				
ANR	1318777	Statement	""" EM_M32C=120, EM_TSK3000=131, EM_RS08=132, EM_SHARC=133, EM_ECOG2=134,"""	138:3:4253:4324	1318674	46	True				
ANR	1318778	Statement	""" EM_SCORE7=135, EM_DSP24=136, EM_VIDEOCORE3=137, EM_LATTICEMICO32=138,"""	139:3:4329:4400	1318674	47	True				
ANR	1318779	Statement	""" EM_SE_C17=139, EM_TI_C6000=140, EM_TI_C2000=141, EM_TI_C5500=142,"""	140:3:4405:4472	1318674	48	True				
ANR	1318780	Statement	""" EM_TI_ARP32=143, EM_TI_PRU=144,"""	141:3:4477:4510	1318674	49	True				
ANR	1318781	Statement	""" EM_MMDSP_PLUS=160, EM_CYPRESS_M8C=161, EM_R32C=162, EM_TRIMEDIA=163,"""	142:3:4515:4585	1318674	50	True				
ANR	1318782	Statement	""" EM_HEXAGON=164, EM_8051=165, EM_STXP7X=166, EM_NDS32=167,"""	143:3:4590:4649	1318674	51	True				
ANR	1318783	Statement	""" EM_ECOG1X=168, EM_MAXQ30=169, EM_XIMO16=170, EM_MANIK=171, EM_CRAYNV2=172,"""	144:3:4654:4730	1318674	52	True				
ANR	1318784	Statement	""" EM_RX=173, EM_METAG=174, EM_MCST_ELBRUS=175, EM_ECOG16=176, EM_CR16=177,"""	145:3:4735:4809	1318674	53	True				
ANR	1318785	Statement	""" EM_ETPU=178, EM_SLE9X=179, EM_L10M=180, EM_K10M=181, EM_AARCH64=183,"""	146:3:4814:4884	1318674	54	True				
ANR	1318786	Statement	""" EM_AVR32=185, EM_STM8=186, EM_TILE64=187, EM_TILEPRO=188, EM_CUDA=190,"""	147:3:4889:4961	1318674	55	True				
ANR	1318787	Statement	""" EM_TILEGX=191, EM_CLOUDSHIELD=192, EM_COREA_1ST=193, EM_COREA_2ND=194,"""	148:3:4966:5038	1318674	56	True				
ANR	1318788	Statement	""" EM_ARC_COMPACT2=195, EM_OPEN8=196, EM_RL78=197, EM_VIDEOCORE5=198,"""	149:3:5043:5111	1318674	57	True				
ANR	1318789	Statement	""" EM_78KOR=199, EM_56800EX=200, EM_BA1=201, EM_BA2=202, EM_XCORE=203,"""	150:3:5116:5185	1318674	58	True				
ANR	1318790	Statement	""" EM_MCHP_PIC=204, EM_INTEL205=205, EM_INTEL206=206, EM_INTEL207=207,"""	151:3:5190:5259	1318674	59	True				
ANR	1318791	Statement	""" EM_INTEL208=208, EM_INTEL209=209, EM_KM32=210, EM_KMX32=211, EM_KMX16=212,"""	152:3:5264:5340	1318674	60	True				
ANR	1318792	Statement	""" EM_KMX8=213, EM_KVARC=214, EM_CDP=215, EM_COGE=216, EM_COOL=217, EM_NORC=218,"""	153:3:5345:5424	1318674	61	True				
ANR	1318793	Statement	""" EM_CSR_KALIMBA=219, EM_AMDGPU=224, EM_RISCV=243, EM_LANAI=244, EM_BPF=247,"""	154:3:5429:5505	1318674	62	True				
ANR	1318794	Statement	""" EM_CSKY=252}"""	155:3:5510:5524	1318674	63	True				
ANR	1318795	Statement	","	155:18:5525:5525	1318674	64	True				
ANR	1318796	Statement	0	155:20:5527:5527	1318674	65	True				
ANR	1318797	Statement	)	155:21:5528:5528	1318674	66	True				
ANR	1318798	ExpressionStatement		155:22:5529:5529	1318674	67	True				
ANR	1318799	ExpressionStatement	"sdb_set ( bin -> kv , ""elf_class.cparse"" , ""enum elf_class {ELFCLASSNONE=0, ELFCLASS32=1, ELFCLASS64=2};"" , 0 )"	156:1:5532:5636	1318674	68	True				
ANR	1318800	CallExpression	"sdb_set ( bin -> kv , ""elf_class.cparse"" , ""enum elf_class {ELFCLASSNONE=0, ELFCLASS32=1, ELFCLASS64=2};"" , 0 )"		1318674	0					
ANR	1318801	Callee	sdb_set		1318674	0					
ANR	1318802	Identifier	sdb_set		1318674	0					
ANR	1318803	ArgumentList	bin -> kv		1318674	1					
ANR	1318804	Argument	bin -> kv		1318674	0					
ANR	1318805	PtrMemberAccess	bin -> kv		1318674	0					
ANR	1318806	Identifier	bin		1318674	0					
ANR	1318807	Identifier	kv		1318674	1					
ANR	1318808	Argument	"""elf_class.cparse"""		1318674	1					
ANR	1318809	PrimaryExpression	"""elf_class.cparse"""		1318674	0					
ANR	1318810	Argument	"""enum elf_class {ELFCLASSNONE=0, ELFCLASS32=1, ELFCLASS64=2};"""		1318674	2					
ANR	1318811	PrimaryExpression	"""enum elf_class {ELFCLASSNONE=0, ELFCLASS32=1, ELFCLASS64=2};"""		1318674	0					
ANR	1318812	Argument	0		1318674	3					
ANR	1318813	PrimaryExpression	0		1318674	0					
ANR	1318814	ExpressionStatement	"sdb_set ( bin -> kv , ""elf_data.cparse"" , ""enum elf_data {ELFDATANONE=0, ELFDATA2LSB=1, ELFDATA2MSB=2};"" , 0 )"	157:1:5639:5742	1318674	69	True				
ANR	1318815	CallExpression	"sdb_set ( bin -> kv , ""elf_data.cparse"" , ""enum elf_data {ELFDATANONE=0, ELFDATA2LSB=1, ELFDATA2MSB=2};"" , 0 )"		1318674	0					
ANR	1318816	Callee	sdb_set		1318674	0					
ANR	1318817	Identifier	sdb_set		1318674	0					
ANR	1318818	ArgumentList	bin -> kv		1318674	1					
ANR	1318819	Argument	bin -> kv		1318674	0					
ANR	1318820	PtrMemberAccess	bin -> kv		1318674	0					
ANR	1318821	Identifier	bin		1318674	0					
ANR	1318822	Identifier	kv		1318674	1					
ANR	1318823	Argument	"""elf_data.cparse"""		1318674	1					
ANR	1318824	PrimaryExpression	"""elf_data.cparse"""		1318674	0					
ANR	1318825	Argument	"""enum elf_data {ELFDATANONE=0, ELFDATA2LSB=1, ELFDATA2MSB=2};"""		1318674	2					
ANR	1318826	PrimaryExpression	"""enum elf_data {ELFDATANONE=0, ELFDATA2LSB=1, ELFDATA2MSB=2};"""		1318674	0					
ANR	1318827	Argument	0		1318674	3					
ANR	1318828	PrimaryExpression	0		1318674	0					
ANR	1318829	ExpressionStatement	"sdb_set ( bin -> kv , ""elf_hdr_version.cparse"" , ""enum elf_hdr_version {EV_NONE=0, EV_CURRENT=1};"" , 0 )"	158:1:5745:5842	1318674	70	True				
ANR	1318830	CallExpression	"sdb_set ( bin -> kv , ""elf_hdr_version.cparse"" , ""enum elf_hdr_version {EV_NONE=0, EV_CURRENT=1};"" , 0 )"		1318674	0					
ANR	1318831	Callee	sdb_set		1318674	0					
ANR	1318832	Identifier	sdb_set		1318674	0					
ANR	1318833	ArgumentList	bin -> kv		1318674	1					
ANR	1318834	Argument	bin -> kv		1318674	0					
ANR	1318835	PtrMemberAccess	bin -> kv		1318674	0					
ANR	1318836	Identifier	bin		1318674	0					
ANR	1318837	Identifier	kv		1318674	1					
ANR	1318838	Argument	"""elf_hdr_version.cparse"""		1318674	1					
ANR	1318839	PrimaryExpression	"""elf_hdr_version.cparse"""		1318674	0					
ANR	1318840	Argument	"""enum elf_hdr_version {EV_NONE=0, EV_CURRENT=1};"""		1318674	2					
ANR	1318841	PrimaryExpression	"""enum elf_hdr_version {EV_NONE=0, EV_CURRENT=1};"""		1318674	0					
ANR	1318842	Argument	0		1318674	3					
ANR	1318843	PrimaryExpression	0		1318674	0					
ANR	1318844	ExpressionStatement	"sdb_set ( bin -> kv , ""elf_obj_version.cparse"" , ""enum elf_obj_version {EV_NONE=0, EV_CURRENT=1};"" , 0 )"	159:1:5845:5942	1318674	71	True				
ANR	1318845	CallExpression	"sdb_set ( bin -> kv , ""elf_obj_version.cparse"" , ""enum elf_obj_version {EV_NONE=0, EV_CURRENT=1};"" , 0 )"		1318674	0					
ANR	1318846	Callee	sdb_set		1318674	0					
ANR	1318847	Identifier	sdb_set		1318674	0					
ANR	1318848	ArgumentList	bin -> kv		1318674	1					
ANR	1318849	Argument	bin -> kv		1318674	0					
ANR	1318850	PtrMemberAccess	bin -> kv		1318674	0					
ANR	1318851	Identifier	bin		1318674	0					
ANR	1318852	Identifier	kv		1318674	1					
ANR	1318853	Argument	"""elf_obj_version.cparse"""		1318674	1					
ANR	1318854	PrimaryExpression	"""elf_obj_version.cparse"""		1318674	0					
ANR	1318855	Argument	"""enum elf_obj_version {EV_NONE=0, EV_CURRENT=1};"""		1318674	2					
ANR	1318856	PrimaryExpression	"""enum elf_obj_version {EV_NONE=0, EV_CURRENT=1};"""		1318674	0					
ANR	1318857	Argument	0		1318674	3					
ANR	1318858	PrimaryExpression	0		1318674	0					
ANR	1318859	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_header.offset"" , 0 , 0 )"	160:1:5945:5993	1318674	72	True				
ANR	1318860	CallExpression	"sdb_num_set ( bin -> kv , ""elf_header.offset"" , 0 , 0 )"		1318674	0					
ANR	1318861	Callee	sdb_num_set		1318674	0					
ANR	1318862	Identifier	sdb_num_set		1318674	0					
ANR	1318863	ArgumentList	bin -> kv		1318674	1					
ANR	1318864	Argument	bin -> kv		1318674	0					
ANR	1318865	PtrMemberAccess	bin -> kv		1318674	0					
ANR	1318866	Identifier	bin		1318674	0					
ANR	1318867	Identifier	kv		1318674	1					
ANR	1318868	Argument	"""elf_header.offset"""		1318674	1					
ANR	1318869	PrimaryExpression	"""elf_header.offset"""		1318674	0					
ANR	1318870	Argument	0		1318674	2					
ANR	1318871	PrimaryExpression	0		1318674	0					
ANR	1318872	Argument	0		1318674	3					
ANR	1318873	PrimaryExpression	0		1318674	0					
ANR	1318874	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_header.size"" , sizeof ( Elf_ ( Ehdr ) ) , 0 )"	161:1:5996:6060	1318674	73	True				
ANR	1318875	CallExpression	"sdb_num_set ( bin -> kv , ""elf_header.size"" , sizeof ( Elf_ ( Ehdr ) ) , 0 )"		1318674	0					
ANR	1318876	Callee	sdb_num_set		1318674	0					
ANR	1318877	Identifier	sdb_num_set		1318674	0					
ANR	1318878	ArgumentList	bin -> kv		1318674	1					
ANR	1318879	Argument	bin -> kv		1318674	0					
ANR	1318880	PtrMemberAccess	bin -> kv		1318674	0					
ANR	1318881	Identifier	bin		1318674	0					
ANR	1318882	Identifier	kv		1318674	1					
ANR	1318883	Argument	"""elf_header.size"""		1318674	1					
ANR	1318884	PrimaryExpression	"""elf_header.size"""		1318674	0					
ANR	1318885	Argument	sizeof ( Elf_ ( Ehdr ) )		1318674	2					
ANR	1318886	SizeofExpression	sizeof ( Elf_ ( Ehdr ) )		1318674	0					
ANR	1318887	Sizeof	sizeof		1318674	0					
ANR	1318888	CallExpression	Elf_ ( Ehdr )		1318674	1					
ANR	1318889	Callee	Elf_		1318674	0					
ANR	1318890	Identifier	Elf_		1318674	0					
ANR	1318891	ArgumentList	Ehdr		1318674	1					
ANR	1318892	Argument	Ehdr		1318674	0					
ANR	1318893	Identifier	Ehdr		1318674	0					
ANR	1318894	Argument	0		1318674	3					
ANR	1318895	PrimaryExpression	0		1318674	0					
ANR	1318896	Statement	sdb_set	162:1:6063:6069	1318674	74	True				
ANR	1318897	Statement	(	162:9:6071:6071	1318674	75	True				
ANR	1318898	Statement	bin	162:10:6072:6074	1318674	76	True				
ANR	1318899	Statement	->	162:13:6075:6076	1318674	77	True				
ANR	1318900	Statement	kv	162:15:6077:6078	1318674	78	True				
ANR	1318901	Statement	","	162:17:6079:6079	1318674	79	True				
ANR	1318902	Statement	"""elf_ident.format"""	162:19:6081:6098	1318674	80	True				
ANR	1318903	Statement	","	162:37:6099:6099	1318674	81	True				
ANR	1318904	Statement	"""[4]z[1]E[1]E[1]E.::"""	162:39:6101:6121	1318674	82	True				
ANR	1318905	Statement	""" magic (elf_class)class (elf_data)data (elf_hdr_version)version"""	163:10:6133:6197	1318674	83	True				
ANR	1318906	Statement	","	163:75:6198:6198	1318674	84	True				
ANR	1318907	Statement	0	163:77:6200:6200	1318674	85	True				
ANR	1318908	Statement	)	163:78:6201:6201	1318674	86	True				
ANR	1318909	ExpressionStatement		163:79:6202:6202	1318674	87	True				
ANR	1318910	Statement	sdb_set	165:1:6221:6227	1318674	88	True				
ANR	1318911	Statement	(	165:9:6229:6229	1318674	89	True				
ANR	1318912	Statement	bin	165:10:6230:6232	1318674	90	True				
ANR	1318913	Statement	->	165:13:6233:6234	1318674	91	True				
ANR	1318914	Statement	kv	165:15:6235:6236	1318674	92	True				
ANR	1318915	Statement	","	165:17:6237:6237	1318674	93	True				
ANR	1318916	Statement	"""elf_header.format"""	165:19:6239:6257	1318674	94	True				
ANR	1318917	Statement	","	165:38:6258:6258	1318674	95	True				
ANR	1318918	Statement	"""?[2]E[2]E[4]Eqqqxwwwwww"""	165:40:6260:6284	1318674	96	True				
ANR	1318919	Statement	""" (elf_ident)ident (elf_type)type (elf_machine)machine (elf_obj_version)version"""	166:2:6288:6367	1318674	97	True				
ANR	1318920	Statement	""" entry phoff shoff flags ehsize phentsize phnum shentsize shnum shstrndx"""	167:2:6371:6444	1318674	98	True				
ANR	1318921	Statement	","	167:76:6445:6445	1318674	99	True				
ANR	1318922	Statement	0	167:78:6447:6447	1318674	100	True				
ANR	1318923	Statement	)	167:79:6448:6448	1318674	101	True				
ANR	1318924	ExpressionStatement		167:80:6449:6449	1318674	102	True				
ANR	1318925	ExpressionStatement	bin -> endian = ( e_ident [ EI_DATA ] == ELFDATA2MSB ) ? 1 : 0	173:1:6696:6749	1318674	103	True				
ANR	1318926	AssignmentExpression	bin -> endian = ( e_ident [ EI_DATA ] == ELFDATA2MSB ) ? 1 : 0		1318674	0		=			
ANR	1318927	PtrMemberAccess	bin -> endian		1318674	0					
ANR	1318928	Identifier	bin		1318674	0					
ANR	1318929	Identifier	endian		1318674	1					
ANR	1318930	ConditionalExpression	( e_ident [ EI_DATA ] == ELFDATA2MSB ) ? 1 : 0		1318674	1					
ANR	1318931	Condition	e_ident [ EI_DATA ] == ELFDATA2MSB		1318674	0					
ANR	1318932	EqualityExpression	e_ident [ EI_DATA ] == ELFDATA2MSB		1318674	0		==			
ANR	1318933	ArrayIndexing	e_ident [ EI_DATA ]		1318674	0					
ANR	1318934	Identifier	e_ident		1318674	0					
ANR	1318935	Identifier	EI_DATA		1318674	1					
ANR	1318936	Identifier	ELFDATA2MSB		1318674	1					
ANR	1318937	PrimaryExpression	1		1318674	1					
ANR	1318938	PrimaryExpression	0		1318674	2					
ANR	1318939	ExpressionStatement	"memset ( & bin -> ehdr , 0 , sizeof ( Elf_ ( Ehdr ) ) )"	174:1:6752:6795	1318674	104	True				
ANR	1318940	CallExpression	"memset ( & bin -> ehdr , 0 , sizeof ( Elf_ ( Ehdr ) ) )"		1318674	0					
ANR	1318941	Callee	memset		1318674	0					
ANR	1318942	Identifier	memset		1318674	0					
ANR	1318943	ArgumentList	& bin -> ehdr		1318674	1					
ANR	1318944	Argument	& bin -> ehdr		1318674	0					
ANR	1318945	UnaryOperationExpression	& bin -> ehdr		1318674	0					
ANR	1318946	UnaryOperator	&		1318674	0					
ANR	1318947	PtrMemberAccess	bin -> ehdr		1318674	1					
ANR	1318948	Identifier	bin		1318674	0					
ANR	1318949	Identifier	ehdr		1318674	1					
ANR	1318950	Argument	0		1318674	1					
ANR	1318951	PrimaryExpression	0		1318674	0					
ANR	1318952	Argument	sizeof ( Elf_ ( Ehdr ) )		1318674	2					
ANR	1318953	SizeofExpression	sizeof ( Elf_ ( Ehdr ) )		1318674	0					
ANR	1318954	Sizeof	sizeof		1318674	0					
ANR	1318955	CallExpression	Elf_ ( Ehdr )		1318674	1					
ANR	1318956	Callee	Elf_		1318674	0					
ANR	1318957	Identifier	Elf_		1318674	0					
ANR	1318958	ArgumentList	Ehdr		1318674	1					
ANR	1318959	Argument	Ehdr		1318674	0					
ANR	1318960	Identifier	Ehdr		1318674	0					
ANR	1318961	ExpressionStatement	"len = r_buf_read_at ( bin -> b , 0 , ehdr , sizeof ( ehdr ) )"	175:1:6798:6850	1318674	105	True				
ANR	1318962	AssignmentExpression	"len = r_buf_read_at ( bin -> b , 0 , ehdr , sizeof ( ehdr ) )"		1318674	0		=			
ANR	1318963	Identifier	len		1318674	0					
ANR	1318964	CallExpression	"r_buf_read_at ( bin -> b , 0 , ehdr , sizeof ( ehdr ) )"		1318674	1					
ANR	1318965	Callee	r_buf_read_at		1318674	0					
ANR	1318966	Identifier	r_buf_read_at		1318674	0					
ANR	1318967	ArgumentList	bin -> b		1318674	1					
ANR	1318968	Argument	bin -> b		1318674	0					
ANR	1318969	PtrMemberAccess	bin -> b		1318674	0					
ANR	1318970	Identifier	bin		1318674	0					
ANR	1318971	Identifier	b		1318674	1					
ANR	1318972	Argument	0		1318674	1					
ANR	1318973	PrimaryExpression	0		1318674	0					
ANR	1318974	Argument	ehdr		1318674	2					
ANR	1318975	Identifier	ehdr		1318674	0					
ANR	1318976	Argument	sizeof ( ehdr )		1318674	3					
ANR	1318977	SizeofExpression	sizeof ( ehdr )		1318674	0					
ANR	1318978	Sizeof	sizeof		1318674	0					
ANR	1318979	SizeofOperand	ehdr		1318674	1					
ANR	1318980	IfStatement	if ( len < 32 )		1318674	106					
ANR	1318981	Condition	len < 32	176:5:6857:6864	1318674	0	True				
ANR	1318982	RelationalExpression	len < 32		1318674	0		<			
ANR	1318983	Identifier	len		1318674	0					
ANR	1318984	PrimaryExpression	32		1318674	1					
ANR	1318985	CompoundStatement		69:15:4543:4543	1318674	1					
ANR	1318986	ExpressionStatement	"bprintf ( ""read (ehdr)\\n"" )"	177:2:6908:6933	1318674	0	True				
ANR	1318987	CallExpression	"bprintf ( ""read (ehdr)\\n"" )"		1318674	0					
ANR	1318988	Callee	bprintf		1318674	0					
ANR	1318989	Identifier	bprintf		1318674	0					
ANR	1318990	ArgumentList	"""read (ehdr)\\n"""		1318674	1					
ANR	1318991	Argument	"""read (ehdr)\\n"""		1318674	0					
ANR	1318992	PrimaryExpression	"""read (ehdr)\\n"""		1318674	0					
ANR	1318993	ReturnStatement	return false ;	178:2:6937:6949	1318674	1	True				
ANR	1318994	Identifier	false		1318674	0					
ANR	1318995	ExpressionStatement	"memcpy ( & bin -> ehdr . e_ident , ehdr , 16 )"	181:1:6986:7023	1318674	107	True				
ANR	1318996	CallExpression	"memcpy ( & bin -> ehdr . e_ident , ehdr , 16 )"		1318674	0					
ANR	1318997	Callee	memcpy		1318674	0					
ANR	1318998	Identifier	memcpy		1318674	0					
ANR	1318999	ArgumentList	& bin -> ehdr . e_ident		1318674	1					
ANR	1319000	Argument	& bin -> ehdr . e_ident		1318674	0					
ANR	1319001	UnaryOperationExpression	& bin -> ehdr . e_ident		1318674	0					
ANR	1319002	UnaryOperator	&		1318674	0					
ANR	1319003	MemberAccess	bin -> ehdr . e_ident		1318674	1					
ANR	1319004	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319005	Identifier	bin		1318674	0					
ANR	1319006	Identifier	ehdr		1318674	1					
ANR	1319007	Identifier	e_ident		1318674	1					
ANR	1319008	Argument	ehdr		1318674	1					
ANR	1319009	Identifier	ehdr		1318674	0					
ANR	1319010	Argument	16		1318674	2					
ANR	1319011	PrimaryExpression	16		1318674	0					
ANR	1319012	IfStatement	if ( ! __is_valid_ident ( bin ) )		1318674	108					
ANR	1319013	Condition	! __is_valid_ident ( bin )	182:5:7030:7052	1318674	0	True				
ANR	1319014	UnaryOperationExpression	! __is_valid_ident ( bin )		1318674	0					
ANR	1319015	UnaryOperator	!		1318674	0					
ANR	1319016	CallExpression	__is_valid_ident ( bin )		1318674	1					
ANR	1319017	Callee	__is_valid_ident		1318674	0					
ANR	1319018	Identifier	__is_valid_ident		1318674	0					
ANR	1319019	ArgumentList	bin		1318674	1					
ANR	1319020	Argument	bin		1318674	0					
ANR	1319021	Identifier	bin		1318674	0					
ANR	1319022	CompoundStatement		75:30:4731:4731	1318674	1					
ANR	1319023	ReturnStatement	return false ;	183:2:7059:7071	1318674	0	True				
ANR	1319024	Identifier	false		1318674	0					
ANR	1319025	ExpressionStatement	i = 16	185:1:7077:7083	1318674	109	True				
ANR	1319026	AssignmentExpression	i = 16		1318674	0		=			
ANR	1319027	Identifier	i		1318674	0					
ANR	1319028	PrimaryExpression	16		1318674	1					
ANR	1319029	ExpressionStatement	"bin -> ehdr . e_type = READ16 ( ehdr , i )"	187:1:7135:7170	1318674	110	True				
ANR	1319030	AssignmentExpression	"bin -> ehdr . e_type = READ16 ( ehdr , i )"		1318674	0		=			
ANR	1319031	MemberAccess	bin -> ehdr . e_type		1318674	0					
ANR	1319032	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319033	Identifier	bin		1318674	0					
ANR	1319034	Identifier	ehdr		1318674	1					
ANR	1319035	Identifier	e_type		1318674	1					
ANR	1319036	CallExpression	"READ16 ( ehdr , i )"		1318674	1					
ANR	1319037	Callee	READ16		1318674	0					
ANR	1319038	Identifier	READ16		1318674	0					
ANR	1319039	ArgumentList	ehdr		1318674	1					
ANR	1319040	Argument	ehdr		1318674	0					
ANR	1319041	Identifier	ehdr		1318674	0					
ANR	1319042	Argument	i		1318674	1					
ANR	1319043	Identifier	i		1318674	0					
ANR	1319044	ExpressionStatement	"bin -> ehdr . e_machine = READ16 ( ehdr , i )"	188:1:7173:7211	1318674	111	True				
ANR	1319045	AssignmentExpression	"bin -> ehdr . e_machine = READ16 ( ehdr , i )"		1318674	0		=			
ANR	1319046	MemberAccess	bin -> ehdr . e_machine		1318674	0					
ANR	1319047	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319048	Identifier	bin		1318674	0					
ANR	1319049	Identifier	ehdr		1318674	1					
ANR	1319050	Identifier	e_machine		1318674	1					
ANR	1319051	CallExpression	"READ16 ( ehdr , i )"		1318674	1					
ANR	1319052	Callee	READ16		1318674	0					
ANR	1319053	Identifier	READ16		1318674	0					
ANR	1319054	ArgumentList	ehdr		1318674	1					
ANR	1319055	Argument	ehdr		1318674	0					
ANR	1319056	Identifier	ehdr		1318674	0					
ANR	1319057	Argument	i		1318674	1					
ANR	1319058	Identifier	i		1318674	0					
ANR	1319059	ExpressionStatement	"bin -> ehdr . e_version = READ32 ( ehdr , i )"	189:1:7214:7252	1318674	112	True				
ANR	1319060	AssignmentExpression	"bin -> ehdr . e_version = READ32 ( ehdr , i )"		1318674	0		=			
ANR	1319061	MemberAccess	bin -> ehdr . e_version		1318674	0					
ANR	1319062	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319063	Identifier	bin		1318674	0					
ANR	1319064	Identifier	ehdr		1318674	1					
ANR	1319065	Identifier	e_version		1318674	1					
ANR	1319066	CallExpression	"READ32 ( ehdr , i )"		1318674	1					
ANR	1319067	Callee	READ32		1318674	0					
ANR	1319068	Identifier	READ32		1318674	0					
ANR	1319069	ArgumentList	ehdr		1318674	1					
ANR	1319070	Argument	ehdr		1318674	0					
ANR	1319071	Identifier	ehdr		1318674	0					
ANR	1319072	Argument	i		1318674	1					
ANR	1319073	Identifier	i		1318674	0					
ANR	1319074	ExpressionStatement	"bin -> ehdr . e_entry = READ64 ( ehdr , i )"	191:1:7271:7307	1318674	113	True				
ANR	1319075	AssignmentExpression	"bin -> ehdr . e_entry = READ64 ( ehdr , i )"		1318674	0		=			
ANR	1319076	MemberAccess	bin -> ehdr . e_entry		1318674	0					
ANR	1319077	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319078	Identifier	bin		1318674	0					
ANR	1319079	Identifier	ehdr		1318674	1					
ANR	1319080	Identifier	e_entry		1318674	1					
ANR	1319081	CallExpression	"READ64 ( ehdr , i )"		1318674	1					
ANR	1319082	Callee	READ64		1318674	0					
ANR	1319083	Identifier	READ64		1318674	0					
ANR	1319084	ArgumentList	ehdr		1318674	1					
ANR	1319085	Argument	ehdr		1318674	0					
ANR	1319086	Identifier	ehdr		1318674	0					
ANR	1319087	Argument	i		1318674	1					
ANR	1319088	Identifier	i		1318674	0					
ANR	1319089	ExpressionStatement	"bin -> ehdr . e_phoff = READ64 ( ehdr , i )"	192:1:7310:7346	1318674	114	True				
ANR	1319090	AssignmentExpression	"bin -> ehdr . e_phoff = READ64 ( ehdr , i )"		1318674	0		=			
ANR	1319091	MemberAccess	bin -> ehdr . e_phoff		1318674	0					
ANR	1319092	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319093	Identifier	bin		1318674	0					
ANR	1319094	Identifier	ehdr		1318674	1					
ANR	1319095	Identifier	e_phoff		1318674	1					
ANR	1319096	CallExpression	"READ64 ( ehdr , i )"		1318674	1					
ANR	1319097	Callee	READ64		1318674	0					
ANR	1319098	Identifier	READ64		1318674	0					
ANR	1319099	ArgumentList	ehdr		1318674	1					
ANR	1319100	Argument	ehdr		1318674	0					
ANR	1319101	Identifier	ehdr		1318674	0					
ANR	1319102	Argument	i		1318674	1					
ANR	1319103	Identifier	i		1318674	0					
ANR	1319104	ExpressionStatement	"bin -> ehdr . e_shoff = READ64 ( ehdr , i )"	193:1:7349:7385	1318674	115	True				
ANR	1319105	AssignmentExpression	"bin -> ehdr . e_shoff = READ64 ( ehdr , i )"		1318674	0		=			
ANR	1319106	MemberAccess	bin -> ehdr . e_shoff		1318674	0					
ANR	1319107	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319108	Identifier	bin		1318674	0					
ANR	1319109	Identifier	ehdr		1318674	1					
ANR	1319110	Identifier	e_shoff		1318674	1					
ANR	1319111	CallExpression	"READ64 ( ehdr , i )"		1318674	1					
ANR	1319112	Callee	READ64		1318674	0					
ANR	1319113	Identifier	READ64		1318674	0					
ANR	1319114	ArgumentList	ehdr		1318674	1					
ANR	1319115	Argument	ehdr		1318674	0					
ANR	1319116	Identifier	ehdr		1318674	0					
ANR	1319117	Argument	i		1318674	1					
ANR	1319118	Identifier	i		1318674	0					
ANR	1319119	ExpressionStatement	"bin -> ehdr . e_flags = READ32 ( ehdr , i )"	199:1:7518:7554	1318674	116	True				
ANR	1319120	AssignmentExpression	"bin -> ehdr . e_flags = READ32 ( ehdr , i )"		1318674	0		=			
ANR	1319121	MemberAccess	bin -> ehdr . e_flags		1318674	0					
ANR	1319122	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319123	Identifier	bin		1318674	0					
ANR	1319124	Identifier	ehdr		1318674	1					
ANR	1319125	Identifier	e_flags		1318674	1					
ANR	1319126	CallExpression	"READ32 ( ehdr , i )"		1318674	1					
ANR	1319127	Callee	READ32		1318674	0					
ANR	1319128	Identifier	READ32		1318674	0					
ANR	1319129	ArgumentList	ehdr		1318674	1					
ANR	1319130	Argument	ehdr		1318674	0					
ANR	1319131	Identifier	ehdr		1318674	0					
ANR	1319132	Argument	i		1318674	1					
ANR	1319133	Identifier	i		1318674	0					
ANR	1319134	ExpressionStatement	"bin -> ehdr . e_ehsize = READ16 ( ehdr , i )"	200:1:7557:7594	1318674	117	True				
ANR	1319135	AssignmentExpression	"bin -> ehdr . e_ehsize = READ16 ( ehdr , i )"		1318674	0		=			
ANR	1319136	MemberAccess	bin -> ehdr . e_ehsize		1318674	0					
ANR	1319137	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319138	Identifier	bin		1318674	0					
ANR	1319139	Identifier	ehdr		1318674	1					
ANR	1319140	Identifier	e_ehsize		1318674	1					
ANR	1319141	CallExpression	"READ16 ( ehdr , i )"		1318674	1					
ANR	1319142	Callee	READ16		1318674	0					
ANR	1319143	Identifier	READ16		1318674	0					
ANR	1319144	ArgumentList	ehdr		1318674	1					
ANR	1319145	Argument	ehdr		1318674	0					
ANR	1319146	Identifier	ehdr		1318674	0					
ANR	1319147	Argument	i		1318674	1					
ANR	1319148	Identifier	i		1318674	0					
ANR	1319149	ExpressionStatement	"bin -> ehdr . e_phentsize = READ16 ( ehdr , i )"	201:1:7597:7637	1318674	118	True				
ANR	1319150	AssignmentExpression	"bin -> ehdr . e_phentsize = READ16 ( ehdr , i )"		1318674	0		=			
ANR	1319151	MemberAccess	bin -> ehdr . e_phentsize		1318674	0					
ANR	1319152	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319153	Identifier	bin		1318674	0					
ANR	1319154	Identifier	ehdr		1318674	1					
ANR	1319155	Identifier	e_phentsize		1318674	1					
ANR	1319156	CallExpression	"READ16 ( ehdr , i )"		1318674	1					
ANR	1319157	Callee	READ16		1318674	0					
ANR	1319158	Identifier	READ16		1318674	0					
ANR	1319159	ArgumentList	ehdr		1318674	1					
ANR	1319160	Argument	ehdr		1318674	0					
ANR	1319161	Identifier	ehdr		1318674	0					
ANR	1319162	Argument	i		1318674	1					
ANR	1319163	Identifier	i		1318674	0					
ANR	1319164	ExpressionStatement	"bin -> ehdr . e_phnum = READ16 ( ehdr , i )"	202:1:7640:7676	1318674	119	True				
ANR	1319165	AssignmentExpression	"bin -> ehdr . e_phnum = READ16 ( ehdr , i )"		1318674	0		=			
ANR	1319166	MemberAccess	bin -> ehdr . e_phnum		1318674	0					
ANR	1319167	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319168	Identifier	bin		1318674	0					
ANR	1319169	Identifier	ehdr		1318674	1					
ANR	1319170	Identifier	e_phnum		1318674	1					
ANR	1319171	CallExpression	"READ16 ( ehdr , i )"		1318674	1					
ANR	1319172	Callee	READ16		1318674	0					
ANR	1319173	Identifier	READ16		1318674	0					
ANR	1319174	ArgumentList	ehdr		1318674	1					
ANR	1319175	Argument	ehdr		1318674	0					
ANR	1319176	Identifier	ehdr		1318674	0					
ANR	1319177	Argument	i		1318674	1					
ANR	1319178	Identifier	i		1318674	0					
ANR	1319179	ExpressionStatement	"bin -> ehdr . e_shentsize = READ16 ( ehdr , i )"	203:1:7679:7719	1318674	120	True				
ANR	1319180	AssignmentExpression	"bin -> ehdr . e_shentsize = READ16 ( ehdr , i )"		1318674	0		=			
ANR	1319181	MemberAccess	bin -> ehdr . e_shentsize		1318674	0					
ANR	1319182	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319183	Identifier	bin		1318674	0					
ANR	1319184	Identifier	ehdr		1318674	1					
ANR	1319185	Identifier	e_shentsize		1318674	1					
ANR	1319186	CallExpression	"READ16 ( ehdr , i )"		1318674	1					
ANR	1319187	Callee	READ16		1318674	0					
ANR	1319188	Identifier	READ16		1318674	0					
ANR	1319189	ArgumentList	ehdr		1318674	1					
ANR	1319190	Argument	ehdr		1318674	0					
ANR	1319191	Identifier	ehdr		1318674	0					
ANR	1319192	Argument	i		1318674	1					
ANR	1319193	Identifier	i		1318674	0					
ANR	1319194	ExpressionStatement	"bin -> ehdr . e_shnum = READ16 ( ehdr , i )"	204:1:7722:7758	1318674	121	True				
ANR	1319195	AssignmentExpression	"bin -> ehdr . e_shnum = READ16 ( ehdr , i )"		1318674	0		=			
ANR	1319196	MemberAccess	bin -> ehdr . e_shnum		1318674	0					
ANR	1319197	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319198	Identifier	bin		1318674	0					
ANR	1319199	Identifier	ehdr		1318674	1					
ANR	1319200	Identifier	e_shnum		1318674	1					
ANR	1319201	CallExpression	"READ16 ( ehdr , i )"		1318674	1					
ANR	1319202	Callee	READ16		1318674	0					
ANR	1319203	Identifier	READ16		1318674	0					
ANR	1319204	ArgumentList	ehdr		1318674	1					
ANR	1319205	Argument	ehdr		1318674	0					
ANR	1319206	Identifier	ehdr		1318674	0					
ANR	1319207	Argument	i		1318674	1					
ANR	1319208	Identifier	i		1318674	0					
ANR	1319209	ExpressionStatement	"bin -> ehdr . e_shstrndx = READ16 ( ehdr , i )"	205:1:7761:7800	1318674	122	True				
ANR	1319210	AssignmentExpression	"bin -> ehdr . e_shstrndx = READ16 ( ehdr , i )"		1318674	0		=			
ANR	1319211	MemberAccess	bin -> ehdr . e_shstrndx		1318674	0					
ANR	1319212	PtrMemberAccess	bin -> ehdr		1318674	0					
ANR	1319213	Identifier	bin		1318674	0					
ANR	1319214	Identifier	ehdr		1318674	1					
ANR	1319215	Identifier	e_shstrndx		1318674	1					
ANR	1319216	CallExpression	"READ16 ( ehdr , i )"		1318674	1					
ANR	1319217	Callee	READ16		1318674	0					
ANR	1319218	Identifier	READ16		1318674	0					
ANR	1319219	ArgumentList	ehdr		1318674	1					
ANR	1319220	Argument	ehdr		1318674	0					
ANR	1319221	Identifier	ehdr		1318674	0					
ANR	1319222	Argument	i		1318674	1					
ANR	1319223	Identifier	i		1318674	0					
ANR	1319224	ReturnStatement	return true ;	206:1:7803:7814	1318674	123	True				
ANR	1319225	Identifier	true		1318674	0					
ANR	1319226	ReturnType	static bool		1318674	1					
ANR	1319227	Identifier	init_ehdr		1318674	2					
ANR	1319228	ParameterList	ELFOBJ * bin		1318674	3					
ANR	1319229	Parameter	ELFOBJ * bin	108:22:2310:2320	1318674	0	True				
ANR	1319230	ParameterType	ELFOBJ *		1318674	0					
ANR	1319231	Identifier	bin		1318674	1					
ANR	1319232	CFGEntryNode	ENTRY		1318674		True				
ANR	1319233	CFGExitNode	EXIT		1318674		True				
ANR	1319234	Symbol	bin -> ehdr . e_shnum		1318674						
ANR	1319235	Symbol	bin -> b		1318674						
ANR	1319236	Symbol	bin		1318674						
ANR	1319237	Symbol	bin -> kv		1318674						
ANR	1319238	Symbol	READ64		1318674						
ANR	1319239	Symbol	* bin		1318674						
ANR	1319240	Symbol	bin -> ehdr . e_phoff		1318674						
ANR	1319241	Symbol	len		1318674						
ANR	1319242	Symbol	bin -> ehdr . e_flags		1318674						
ANR	1319243	Symbol	bin -> ehdr . e_shstrndx		1318674						
ANR	1319244	Symbol	bin -> ehdr		1318674						
ANR	1319245	Symbol	ehdr		1318674						
ANR	1319246	Symbol	EI_DATA		1318674						
ANR	1319247	Symbol	Elf_		1318674						
ANR	1319248	Symbol	& bin -> ehdr . e_ident		1318674						
ANR	1319249	Symbol	bin -> ehdr . e_type		1318674						
ANR	1319250	Symbol	ELFDATA2MSB		1318674						
ANR	1319251	Symbol	READ16		1318674						
ANR	1319252	Symbol	bin -> ehdr . e_phentsize		1318674						
ANR	1319253	Symbol	bin -> ehdr . e_entry		1318674						
ANR	1319254	Symbol	false		1318674						
ANR	1319255	Symbol	* e_ident		1318674						
ANR	1319256	Symbol	i		1318674						
ANR	1319257	Symbol	bin -> ehdr . e_version		1318674						
ANR	1319258	Symbol	bin -> ehdr . e_ehsize		1318674						
ANR	1319259	Symbol	EI_NIDENT		1318674						
ANR	1319260	Symbol	bin -> ehdr . e_phnum		1318674						
ANR	1319261	Symbol	bin -> ehdr . e_shentsize		1318674						
ANR	1319262	Symbol	READ32		1318674						
ANR	1319263	Symbol	__is_valid_ident		1318674						
ANR	1319264	Symbol	Ehdr		1318674						
ANR	1319265	Symbol	* EI_DATA		1318674						
ANR	1319266	Symbol	& bin -> ehdr		1318674						
ANR	1319267	Symbol	bin -> endian		1318674						
ANR	1319268	Symbol	bin -> ehdr . e_machine		1318674						
ANR	1319269	Symbol	r_buf_read_at		1318674						
ANR	1319270	Symbol	true		1318674						
ANR	1319271	Symbol	bin -> ehdr . e_shoff		1318674						
ANR	1319272	Symbol	e_ident		1318674						
ANR	1319273	Function	read_phdr	212:0:8012:9647							
ANR	1319274	FunctionDef	"read_phdr (ELFOBJ * bin , bool linux_kernel_hack)"		1319273	0					
ANR	1319275	CompoundStatement		212:59:8071:9647	1319273	0					
ANR	1319276	IdentifierDeclStatement	bool phdr_found = false ;	213:1:8074:8097	1319273	0	True				
ANR	1319277	IdentifierDecl	phdr_found = false		1319273	0					
ANR	1319278	IdentifierDeclType	bool		1319273	0					
ANR	1319279	Identifier	phdr_found		1319273	1					
ANR	1319280	AssignmentExpression	phdr_found = false		1319273	2		=			
ANR	1319281	Identifier	false		1319273	0					
ANR	1319282	Identifier	false		1319273	1					
ANR	1319283	IdentifierDeclStatement	int i ;	214:1:8100:8105	1319273	1	True				
ANR	1319284	IdentifierDecl	i		1319273	0					
ANR	1319285	IdentifierDeclType	int		1319273	0					
ANR	1319286	Identifier	i		1319273	1					
ANR	1319287	IdentifierDeclStatement	const bool is_elf64 = true ;	216:1:8124:8150	1319273	2	True				
ANR	1319288	IdentifierDecl	is_elf64 = true		1319273	0					
ANR	1319289	IdentifierDeclType	const bool		1319273	0					
ANR	1319290	Identifier	is_elf64		1319273	1					
ANR	1319291	AssignmentExpression	is_elf64 = true		1319273	2		=			
ANR	1319292	Identifier	true		1319273	0					
ANR	1319293	Identifier	true		1319273	1					
ANR	1319294	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		1319273	3					
ANR	1319295	ForInit	i = 0 ;	221:6:8202:8207	1319273	0	True				
ANR	1319296	AssignmentExpression	i = 0		1319273	0		=			
ANR	1319297	Identifier	i		1319273	0					
ANR	1319298	PrimaryExpression	0		1319273	1					
ANR	1319299	Condition	i < bin -> ehdr . e_phnum	221:13:8209:8229	1319273	1	True				
ANR	1319300	RelationalExpression	i < bin -> ehdr . e_phnum		1319273	0		<			
ANR	1319301	Identifier	i		1319273	0					
ANR	1319302	MemberAccess	bin -> ehdr . e_phnum		1319273	1					
ANR	1319303	PtrMemberAccess	bin -> ehdr		1319273	0					
ANR	1319304	Identifier	bin		1319273	0					
ANR	1319305	Identifier	ehdr		1319273	1					
ANR	1319306	Identifier	e_phnum		1319273	1					
ANR	1319307	PostIncDecOperationExpression	i ++	221:36:8232:8234	1319273	2	True				
ANR	1319308	Identifier	i		1319273	0					
ANR	1319309	IncDec	++		1319273	1					
ANR	1319310	CompoundStatement		13:2:223:327	1319273	3					
ANR	1319311	IdentifierDeclStatement	ut8 phdr [ sizeof ( Elf_ ( Phdr ) ) ] = { 0 } ;	222:2:8241:8278	1319273	0	True				
ANR	1319312	IdentifierDecl	phdr [ sizeof ( Elf_ ( Phdr ) ) ] = { 0 }		1319273	0					
ANR	1319313	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Phdr ) ) ]		1319273	0					
ANR	1319314	Identifier	phdr		1319273	1					
ANR	1319315	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		1319273	2					
ANR	1319316	Sizeof	sizeof		1319273	0					
ANR	1319317	CallExpression	Elf_ ( Phdr )		1319273	1					
ANR	1319318	Callee	Elf_		1319273	0					
ANR	1319319	Identifier	Elf_		1319273	0					
ANR	1319320	ArgumentList	Phdr		1319273	1					
ANR	1319321	Argument	Phdr		1319273	0					
ANR	1319322	Identifier	Phdr		1319273	0					
ANR	1319323	AssignmentExpression	phdr [ sizeof ( Elf_ ( Phdr ) ) ] = { 0 }		1319273	3		=			
ANR	1319324	Identifier	phdr		1319273	0					
ANR	1319325	InitializerList	0		1319273	1					
ANR	1319326	PrimaryExpression	0		1319273	0					
ANR	1319327	IdentifierDeclStatement	int j = 0 ;	223:2:8282:8291	1319273	1	True				
ANR	1319328	IdentifierDecl	j = 0		1319273	0					
ANR	1319329	IdentifierDeclType	int		1319273	0					
ANR	1319330	Identifier	j		1319273	1					
ANR	1319331	AssignmentExpression	j = 0		1319273	2		=			
ANR	1319332	Identifier	j		1319273	0					
ANR	1319333	PrimaryExpression	0		1319273	1					
ANR	1319334	IdentifierDeclStatement	"int len = r_buf_read_at ( bin -> b , bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) ) , phdr , sizeof ( Elf_ ( Phdr ) ) ) ;"	224:2:8295:8399	1319273	2	True				
ANR	1319335	IdentifierDecl	"len = r_buf_read_at ( bin -> b , bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) ) , phdr , sizeof ( Elf_ ( Phdr ) ) )"		1319273	0					
ANR	1319336	IdentifierDeclType	int		1319273	0					
ANR	1319337	Identifier	len		1319273	1					
ANR	1319338	AssignmentExpression	"len = r_buf_read_at ( bin -> b , bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) ) , phdr , sizeof ( Elf_ ( Phdr ) ) )"		1319273	2		=			
ANR	1319339	Identifier	len		1319273	0					
ANR	1319340	CallExpression	"r_buf_read_at ( bin -> b , bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) ) , phdr , sizeof ( Elf_ ( Phdr ) ) )"		1319273	1					
ANR	1319341	Callee	r_buf_read_at		1319273	0					
ANR	1319342	Identifier	r_buf_read_at		1319273	0					
ANR	1319343	ArgumentList	bin -> b		1319273	1					
ANR	1319344	Argument	bin -> b		1319273	0					
ANR	1319345	PtrMemberAccess	bin -> b		1319273	0					
ANR	1319346	Identifier	bin		1319273	0					
ANR	1319347	Identifier	b		1319273	1					
ANR	1319348	Argument	bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) )		1319273	1					
ANR	1319349	AdditiveExpression	bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) )		1319273	0		+			
ANR	1319350	MemberAccess	bin -> ehdr . e_phoff		1319273	0					
ANR	1319351	PtrMemberAccess	bin -> ehdr		1319273	0					
ANR	1319352	Identifier	bin		1319273	0					
ANR	1319353	Identifier	ehdr		1319273	1					
ANR	1319354	Identifier	e_phoff		1319273	1					
ANR	1319355	MultiplicativeExpression	i * sizeof ( Elf_ ( Phdr ) )		1319273	1		*			
ANR	1319356	Identifier	i		1319273	0					
ANR	1319357	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		1319273	1					
ANR	1319358	Sizeof	sizeof		1319273	0					
ANR	1319359	CallExpression	Elf_ ( Phdr )		1319273	1					
ANR	1319360	Callee	Elf_		1319273	0					
ANR	1319361	Identifier	Elf_		1319273	0					
ANR	1319362	ArgumentList	Phdr		1319273	1					
ANR	1319363	Argument	Phdr		1319273	0					
ANR	1319364	Identifier	Phdr		1319273	0					
ANR	1319365	Argument	phdr		1319273	2					
ANR	1319366	Identifier	phdr		1319273	0					
ANR	1319367	Argument	sizeof ( Elf_ ( Phdr ) )		1319273	3					
ANR	1319368	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		1319273	0					
ANR	1319369	Sizeof	sizeof		1319273	0					
ANR	1319370	CallExpression	Elf_ ( Phdr )		1319273	1					
ANR	1319371	Callee	Elf_		1319273	0					
ANR	1319372	Identifier	Elf_		1319273	0					
ANR	1319373	ArgumentList	Phdr		1319273	1					
ANR	1319374	Argument	Phdr		1319273	0					
ANR	1319375	Identifier	Phdr		1319273	0					
ANR	1319376	IfStatement	if ( len < 1 )		1319273	3					
ANR	1319377	Condition	len < 1	225:6:8407:8413	1319273	0	True				
ANR	1319378	RelationalExpression	len < 1		1319273	0		<			
ANR	1319379	Identifier	len		1319273	0					
ANR	1319380	PrimaryExpression	1		1319273	1					
ANR	1319381	CompoundStatement		14:15:344:344	1319273	1					
ANR	1319382	ExpressionStatement	"bprintf ( ""read (phdr)\\n"" )"	226:3:8421:8446	1319273	0	True				
ANR	1319383	CallExpression	"bprintf ( ""read (phdr)\\n"" )"		1319273	0					
ANR	1319384	Callee	bprintf		1319273	0					
ANR	1319385	Identifier	bprintf		1319273	0					
ANR	1319386	ArgumentList	"""read (phdr)\\n"""		1319273	1					
ANR	1319387	Argument	"""read (phdr)\\n"""		1319273	0					
ANR	1319388	PrimaryExpression	"""read (phdr)\\n"""		1319273	0					
ANR	1319389	ExpressionStatement	R_FREE ( bin -> phdr )	227:3:8451:8469	1319273	1	True				
ANR	1319390	CallExpression	R_FREE ( bin -> phdr )		1319273	0					
ANR	1319391	Callee	R_FREE		1319273	0					
ANR	1319392	Identifier	R_FREE		1319273	0					
ANR	1319393	ArgumentList	bin -> phdr		1319273	1					
ANR	1319394	Argument	bin -> phdr		1319273	0					
ANR	1319395	PtrMemberAccess	bin -> phdr		1319273	0					
ANR	1319396	Identifier	bin		1319273	0					
ANR	1319397	Identifier	phdr		1319273	1					
ANR	1319398	ReturnStatement	return false ;	228:3:8474:8486	1319273	2	True				
ANR	1319399	Identifier	false		1319273	0					
ANR	1319400	ExpressionStatement	"bin -> phdr [ i ] . p_type = READ32 ( phdr , j )"	230:2:8494:8532	1319273	4	True				
ANR	1319401	AssignmentExpression	"bin -> phdr [ i ] . p_type = READ32 ( phdr , j )"		1319273	0		=			
ANR	1319402	MemberAccess	bin -> phdr [ i ] . p_type		1319273	0					
ANR	1319403	ArrayIndexing	bin -> phdr [ i ]		1319273	0					
ANR	1319404	PtrMemberAccess	bin -> phdr		1319273	0					
ANR	1319405	Identifier	bin		1319273	0					
ANR	1319406	Identifier	phdr		1319273	1					
ANR	1319407	Identifier	i		1319273	1					
ANR	1319408	Identifier	p_type		1319273	1					
ANR	1319409	CallExpression	"READ32 ( phdr , j )"		1319273	1					
ANR	1319410	Callee	READ32		1319273	0					
ANR	1319411	Identifier	READ32		1319273	0					
ANR	1319412	ArgumentList	phdr		1319273	1					
ANR	1319413	Argument	phdr		1319273	0					
ANR	1319414	Identifier	phdr		1319273	0					
ANR	1319415	Argument	j		1319273	1					
ANR	1319416	Identifier	j		1319273	0					
ANR	1319417	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_PHDR )		1319273	5					
ANR	1319418	Condition	bin -> phdr [ i ] . p_type == PT_PHDR	231:6:8540:8569	1319273	0	True				
ANR	1319419	EqualityExpression	bin -> phdr [ i ] . p_type == PT_PHDR		1319273	0		==			
ANR	1319420	MemberAccess	bin -> phdr [ i ] . p_type		1319273	0					
ANR	1319421	ArrayIndexing	bin -> phdr [ i ]		1319273	0					
ANR	1319422	PtrMemberAccess	bin -> phdr		1319273	0					
ANR	1319423	Identifier	bin		1319273	0					
ANR	1319424	Identifier	phdr		1319273	1					
ANR	1319425	Identifier	i		1319273	1					
ANR	1319426	Identifier	p_type		1319273	1					
ANR	1319427	Identifier	PT_PHDR		1319273	1					
ANR	1319428	CompoundStatement		20:38:500:500	1319273	1					
ANR	1319429	ExpressionStatement	phdr_found = true	232:3:8577:8594	1319273	0	True				
ANR	1319430	AssignmentExpression	phdr_found = true		1319273	0		=			
ANR	1319431	Identifier	phdr_found		1319273	0					
ANR	1319432	Identifier	true		1319273	1					
ANR	1319433	IfStatement	if ( is_elf64 )		1319273	6					
ANR	1319434	Condition	is_elf64	235:6:8607:8614	1319273	0	True				
ANR	1319435	Identifier	is_elf64		1319273	0					
ANR	1319436	CompoundStatement		24:16:545:545	1319273	1					
ANR	1319437	ExpressionStatement	"bin -> phdr [ i ] . p_flags = READ32 ( phdr , j )"	236:3:8622:8661	1319273	0	True				
ANR	1319438	AssignmentExpression	"bin -> phdr [ i ] . p_flags = READ32 ( phdr , j )"		1319273	0		=			
ANR	1319439	MemberAccess	bin -> phdr [ i ] . p_flags		1319273	0					
ANR	1319440	ArrayIndexing	bin -> phdr [ i ]		1319273	0					
ANR	1319441	PtrMemberAccess	bin -> phdr		1319273	0					
ANR	1319442	Identifier	bin		1319273	0					
ANR	1319443	Identifier	phdr		1319273	1					
ANR	1319444	Identifier	i		1319273	1					
ANR	1319445	Identifier	p_flags		1319273	1					
ANR	1319446	CallExpression	"READ32 ( phdr , j )"		1319273	1					
ANR	1319447	Callee	READ32		1319273	0					
ANR	1319448	Identifier	READ32		1319273	0					
ANR	1319449	ArgumentList	phdr		1319273	1					
ANR	1319450	Argument	phdr		1319273	0					
ANR	1319451	Identifier	phdr		1319273	0					
ANR	1319452	Argument	j		1319273	1					
ANR	1319453	Identifier	j		1319273	0					
ANR	1319454	ExpressionStatement	"bin -> phdr [ i ] . p_offset = READWORD ( phdr , j )"	238:2:8669:8711	1319273	7	True				
ANR	1319455	AssignmentExpression	"bin -> phdr [ i ] . p_offset = READWORD ( phdr , j )"		1319273	0		=			
ANR	1319456	MemberAccess	bin -> phdr [ i ] . p_offset		1319273	0					
ANR	1319457	ArrayIndexing	bin -> phdr [ i ]		1319273	0					
ANR	1319458	PtrMemberAccess	bin -> phdr		1319273	0					
ANR	1319459	Identifier	bin		1319273	0					
ANR	1319460	Identifier	phdr		1319273	1					
ANR	1319461	Identifier	i		1319273	1					
ANR	1319462	Identifier	p_offset		1319273	1					
ANR	1319463	CallExpression	"READWORD ( phdr , j )"		1319273	1					
ANR	1319464	Callee	READWORD		1319273	0					
ANR	1319465	Identifier	READWORD		1319273	0					
ANR	1319466	ArgumentList	phdr		1319273	1					
ANR	1319467	Argument	phdr		1319273	0					
ANR	1319468	Identifier	phdr		1319273	0					
ANR	1319469	Argument	j		1319273	1					
ANR	1319470	Identifier	j		1319273	0					
ANR	1319471	ExpressionStatement	"bin -> phdr [ i ] . p_vaddr = READWORD ( phdr , j )"	239:2:8715:8756	1319273	8	True				
ANR	1319472	AssignmentExpression	"bin -> phdr [ i ] . p_vaddr = READWORD ( phdr , j )"		1319273	0		=			
ANR	1319473	MemberAccess	bin -> phdr [ i ] . p_vaddr		1319273	0					
ANR	1319474	ArrayIndexing	bin -> phdr [ i ]		1319273	0					
ANR	1319475	PtrMemberAccess	bin -> phdr		1319273	0					
ANR	1319476	Identifier	bin		1319273	0					
ANR	1319477	Identifier	phdr		1319273	1					
ANR	1319478	Identifier	i		1319273	1					
ANR	1319479	Identifier	p_vaddr		1319273	1					
ANR	1319480	CallExpression	"READWORD ( phdr , j )"		1319273	1					
ANR	1319481	Callee	READWORD		1319273	0					
ANR	1319482	Identifier	READWORD		1319273	0					
ANR	1319483	ArgumentList	phdr		1319273	1					
ANR	1319484	Argument	phdr		1319273	0					
ANR	1319485	Identifier	phdr		1319273	0					
ANR	1319486	Argument	j		1319273	1					
ANR	1319487	Identifier	j		1319273	0					
ANR	1319488	ExpressionStatement	"bin -> phdr [ i ] . p_paddr = READWORD ( phdr , j )"	240:2:8760:8801	1319273	9	True				
ANR	1319489	AssignmentExpression	"bin -> phdr [ i ] . p_paddr = READWORD ( phdr , j )"		1319273	0		=			
ANR	1319490	MemberAccess	bin -> phdr [ i ] . p_paddr		1319273	0					
ANR	1319491	ArrayIndexing	bin -> phdr [ i ]		1319273	0					
ANR	1319492	PtrMemberAccess	bin -> phdr		1319273	0					
ANR	1319493	Identifier	bin		1319273	0					
ANR	1319494	Identifier	phdr		1319273	1					
ANR	1319495	Identifier	i		1319273	1					
ANR	1319496	Identifier	p_paddr		1319273	1					
ANR	1319497	CallExpression	"READWORD ( phdr , j )"		1319273	1					
ANR	1319498	Callee	READWORD		1319273	0					
ANR	1319499	Identifier	READWORD		1319273	0					
ANR	1319500	ArgumentList	phdr		1319273	1					
ANR	1319501	Argument	phdr		1319273	0					
ANR	1319502	Identifier	phdr		1319273	0					
ANR	1319503	Argument	j		1319273	1					
ANR	1319504	Identifier	j		1319273	0					
ANR	1319505	ExpressionStatement	"bin -> phdr [ i ] . p_filesz = READWORD ( phdr , j )"	241:2:8805:8847	1319273	10	True				
ANR	1319506	AssignmentExpression	"bin -> phdr [ i ] . p_filesz = READWORD ( phdr , j )"		1319273	0		=			
ANR	1319507	MemberAccess	bin -> phdr [ i ] . p_filesz		1319273	0					
ANR	1319508	ArrayIndexing	bin -> phdr [ i ]		1319273	0					
ANR	1319509	PtrMemberAccess	bin -> phdr		1319273	0					
ANR	1319510	Identifier	bin		1319273	0					
ANR	1319511	Identifier	phdr		1319273	1					
ANR	1319512	Identifier	i		1319273	1					
ANR	1319513	Identifier	p_filesz		1319273	1					
ANR	1319514	CallExpression	"READWORD ( phdr , j )"		1319273	1					
ANR	1319515	Callee	READWORD		1319273	0					
ANR	1319516	Identifier	READWORD		1319273	0					
ANR	1319517	ArgumentList	phdr		1319273	1					
ANR	1319518	Argument	phdr		1319273	0					
ANR	1319519	Identifier	phdr		1319273	0					
ANR	1319520	Argument	j		1319273	1					
ANR	1319521	Identifier	j		1319273	0					
ANR	1319522	ExpressionStatement	"bin -> phdr [ i ] . p_memsz = READWORD ( phdr , j )"	242:2:8851:8892	1319273	11	True				
ANR	1319523	AssignmentExpression	"bin -> phdr [ i ] . p_memsz = READWORD ( phdr , j )"		1319273	0		=			
ANR	1319524	MemberAccess	bin -> phdr [ i ] . p_memsz		1319273	0					
ANR	1319525	ArrayIndexing	bin -> phdr [ i ]		1319273	0					
ANR	1319526	PtrMemberAccess	bin -> phdr		1319273	0					
ANR	1319527	Identifier	bin		1319273	0					
ANR	1319528	Identifier	phdr		1319273	1					
ANR	1319529	Identifier	i		1319273	1					
ANR	1319530	Identifier	p_memsz		1319273	1					
ANR	1319531	CallExpression	"READWORD ( phdr , j )"		1319273	1					
ANR	1319532	Callee	READWORD		1319273	0					
ANR	1319533	Identifier	READWORD		1319273	0					
ANR	1319534	ArgumentList	phdr		1319273	1					
ANR	1319535	Argument	phdr		1319273	0					
ANR	1319536	Identifier	phdr		1319273	0					
ANR	1319537	Argument	j		1319273	1					
ANR	1319538	Identifier	j		1319273	0					
ANR	1319539	IfStatement	if ( ! is_elf64 )		1319273	12					
ANR	1319540	Condition	! is_elf64	243:6:8900:8908	1319273	0	True				
ANR	1319541	UnaryOperationExpression	! is_elf64		1319273	0					
ANR	1319542	UnaryOperator	!		1319273	0					
ANR	1319543	Identifier	is_elf64		1319273	1					
ANR	1319544	CompoundStatement		32:17:839:839	1319273	1					
ANR	1319545	ExpressionStatement	"bin -> phdr [ i ] . p_flags = READ32 ( phdr , j )"	244:3:8916:8955	1319273	0	True				
ANR	1319546	AssignmentExpression	"bin -> phdr [ i ] . p_flags = READ32 ( phdr , j )"		1319273	0		=			
ANR	1319547	MemberAccess	bin -> phdr [ i ] . p_flags		1319273	0					
ANR	1319548	ArrayIndexing	bin -> phdr [ i ]		1319273	0					
ANR	1319549	PtrMemberAccess	bin -> phdr		1319273	0					
ANR	1319550	Identifier	bin		1319273	0					
ANR	1319551	Identifier	phdr		1319273	1					
ANR	1319552	Identifier	i		1319273	1					
ANR	1319553	Identifier	p_flags		1319273	1					
ANR	1319554	CallExpression	"READ32 ( phdr , j )"		1319273	1					
ANR	1319555	Callee	READ32		1319273	0					
ANR	1319556	Identifier	READ32		1319273	0					
ANR	1319557	ArgumentList	phdr		1319273	1					
ANR	1319558	Argument	phdr		1319273	0					
ANR	1319559	Identifier	phdr		1319273	0					
ANR	1319560	Argument	j		1319273	1					
ANR	1319561	Identifier	j		1319273	0					
ANR	1319562	ExpressionStatement	"bin -> phdr [ i ] . p_align = READWORD ( phdr , j )"	247:2:9056:9097	1319273	13	True				
ANR	1319563	AssignmentExpression	"bin -> phdr [ i ] . p_align = READWORD ( phdr , j )"		1319273	0		=			
ANR	1319564	MemberAccess	bin -> phdr [ i ] . p_align		1319273	0					
ANR	1319565	ArrayIndexing	bin -> phdr [ i ]		1319273	0					
ANR	1319566	PtrMemberAccess	bin -> phdr		1319273	0					
ANR	1319567	Identifier	bin		1319273	0					
ANR	1319568	Identifier	phdr		1319273	1					
ANR	1319569	Identifier	i		1319273	1					
ANR	1319570	Identifier	p_align		1319273	1					
ANR	1319571	CallExpression	"READWORD ( phdr , j )"		1319273	1					
ANR	1319572	Callee	READWORD		1319273	0					
ANR	1319573	Identifier	READWORD		1319273	0					
ANR	1319574	ArgumentList	phdr		1319273	1					
ANR	1319575	Argument	phdr		1319273	0					
ANR	1319576	Identifier	phdr		1319273	0					
ANR	1319577	Argument	j		1319273	1					
ANR	1319578	Identifier	j		1319273	0					
ANR	1319579	IfStatement	if ( linux_kernel_hack && phdr_found )		1319273	4					
ANR	1319580	Condition	linux_kernel_hack && phdr_found	256:5:9430:9460	1319273	0	True				
ANR	1319581	AndExpression	linux_kernel_hack && phdr_found		1319273	0		&&			
ANR	1319582	Identifier	linux_kernel_hack		1319273	0					
ANR	1319583	Identifier	phdr_found		1319273	1					
ANR	1319584	CompoundStatement		46:2:1395:1443	1319273	1					
ANR	1319585	IdentifierDeclStatement	ut64 load_addr = Elf_ ( r_bin_elf_get_baddr ) ( bin ) ;	257:2:9467:9515	1319273	0	True				
ANR	1319586	IdentifierDecl	load_addr = Elf_ ( r_bin_elf_get_baddr ) ( bin )		1319273	0					
ANR	1319587	IdentifierDeclType	ut64		1319273	0					
ANR	1319588	Identifier	load_addr		1319273	1					
ANR	1319589	AssignmentExpression	load_addr = Elf_ ( r_bin_elf_get_baddr ) ( bin )		1319273	2		=			
ANR	1319590	Identifier	load_addr		1319273	0					
ANR	1319591	CallExpression	Elf_ ( r_bin_elf_get_baddr ) ( bin )		1319273	1					
ANR	1319592	Callee	Elf_ ( r_bin_elf_get_baddr )		1319273	0					
ANR	1319593	CallExpression	Elf_ ( r_bin_elf_get_baddr )		1319273	0					
ANR	1319594	Callee	Elf_		1319273	0					
ANR	1319595	Identifier	Elf_		1319273	0					
ANR	1319596	ArgumentList	r_bin_elf_get_baddr		1319273	1					
ANR	1319597	Argument	r_bin_elf_get_baddr		1319273	0					
ANR	1319598	Identifier	r_bin_elf_get_baddr		1319273	0					
ANR	1319599	ArgumentList	bin		1319273	1					
ANR	1319600	Argument	bin		1319273	0					
ANR	1319601	Identifier	bin		1319273	0					
ANR	1319602	ExpressionStatement	"bin -> ehdr . e_phoff = Elf_ ( r_bin_elf_v2p ) ( bin , load_addr + bin -> ehdr . e_phoff )"	258:2:9519:9595	1319273	1	True				
ANR	1319603	AssignmentExpression	"bin -> ehdr . e_phoff = Elf_ ( r_bin_elf_v2p ) ( bin , load_addr + bin -> ehdr . e_phoff )"		1319273	0		=			
ANR	1319604	MemberAccess	bin -> ehdr . e_phoff		1319273	0					
ANR	1319605	PtrMemberAccess	bin -> ehdr		1319273	0					
ANR	1319606	Identifier	bin		1319273	0					
ANR	1319607	Identifier	ehdr		1319273	1					
ANR	1319608	Identifier	e_phoff		1319273	1					
ANR	1319609	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , load_addr + bin -> ehdr . e_phoff )"		1319273	1					
ANR	1319610	Callee	Elf_ ( r_bin_elf_v2p )		1319273	0					
ANR	1319611	CallExpression	Elf_ ( r_bin_elf_v2p )		1319273	0					
ANR	1319612	Callee	Elf_		1319273	0					
ANR	1319613	Identifier	Elf_		1319273	0					
ANR	1319614	ArgumentList	r_bin_elf_v2p		1319273	1					
ANR	1319615	Argument	r_bin_elf_v2p		1319273	0					
ANR	1319616	Identifier	r_bin_elf_v2p		1319273	0					
ANR	1319617	ArgumentList	bin		1319273	1					
ANR	1319618	Argument	bin		1319273	0					
ANR	1319619	Identifier	bin		1319273	0					
ANR	1319620	Argument	load_addr + bin -> ehdr . e_phoff		1319273	1					
ANR	1319621	AdditiveExpression	load_addr + bin -> ehdr . e_phoff		1319273	0		+			
ANR	1319622	Identifier	load_addr		1319273	0					
ANR	1319623	MemberAccess	bin -> ehdr . e_phoff		1319273	1					
ANR	1319624	PtrMemberAccess	bin -> ehdr		1319273	0					
ANR	1319625	Identifier	bin		1319273	0					
ANR	1319626	Identifier	ehdr		1319273	1					
ANR	1319627	Identifier	e_phoff		1319273	1					
ANR	1319628	ReturnStatement	"return read_phdr ( bin , false ) ;"	259:2:9599:9628	1319273	2	True				
ANR	1319629	CallExpression	"read_phdr ( bin , false )"		1319273	0					
ANR	1319630	Callee	read_phdr		1319273	0					
ANR	1319631	Identifier	read_phdr		1319273	0					
ANR	1319632	ArgumentList	bin		1319273	1					
ANR	1319633	Argument	bin		1319273	0					
ANR	1319634	Identifier	bin		1319273	0					
ANR	1319635	Argument	false		1319273	1					
ANR	1319636	Identifier	false		1319273	0					
ANR	1319637	ReturnStatement	return true ;	261:1:9634:9645	1319273	5	True				
ANR	1319638	Identifier	true		1319273	0					
ANR	1319639	ReturnType	static bool		1319273	1					
ANR	1319640	Identifier	read_phdr		1319273	2					
ANR	1319641	ParameterList	"ELFOBJ * bin , bool linux_kernel_hack"		1319273	3					
ANR	1319642	Parameter	ELFOBJ * bin	212:22:8034:8044	1319273	0	True				
ANR	1319643	ParameterType	ELFOBJ *		1319273	0					
ANR	1319644	Identifier	bin		1319273	1					
ANR	1319645	Parameter	bool linux_kernel_hack	212:35:8047:8068	1319273	1	True				
ANR	1319646	ParameterType	bool		1319273	0					
ANR	1319647	Identifier	linux_kernel_hack		1319273	1					
ANR	1319648	CFGEntryNode	ENTRY		1319273		True				
ANR	1319649	CFGExitNode	EXIT		1319273		True				
ANR	1319650	Symbol	bin -> b		1319273						
ANR	1319651	Symbol	Phdr		1319273						
ANR	1319652	Symbol	bin		1319273						
ANR	1319653	Symbol	bin -> phdr [ i ] . p_memsz		1319273						
ANR	1319654	Symbol	PT_PHDR		1319273						
ANR	1319655	Symbol	linux_kernel_hack		1319273						
ANR	1319656	Symbol	bin -> phdr		1319273						
ANR	1319657	Symbol	* bin		1319273						
ANR	1319658	Symbol	bin -> ehdr . e_phoff		1319273						
ANR	1319659	Symbol	bin -> phdr [ i ] . p_filesz		1319273						
ANR	1319660	Symbol	phdr_found		1319273						
ANR	1319661	Symbol	r_bin_elf_get_baddr		1319273						
ANR	1319662	Symbol	len		1319273						
ANR	1319663	Symbol	bin -> ehdr		1319273						
ANR	1319664	Symbol	bin -> phdr [ i ] . p_align		1319273						
ANR	1319665	Symbol	* * bin		1319273						
ANR	1319666	Symbol	bin -> phdr [ i ] . p_flags		1319273						
ANR	1319667	Symbol	r_bin_elf_v2p		1319273						
ANR	1319668	Symbol	bin -> phdr [ i ] . p_vaddr		1319273						
ANR	1319669	Symbol	Elf_		1319273						
ANR	1319670	Symbol	READWORD		1319273						
ANR	1319671	Symbol	load_addr		1319273						
ANR	1319672	Symbol	false		1319273						
ANR	1319673	Symbol	i		1319273						
ANR	1319674	Symbol	j		1319273						
ANR	1319675	Symbol	bin -> ehdr . e_phnum		1319273						
ANR	1319676	Symbol	READ32		1319273						
ANR	1319677	Symbol	is_elf64		1319273						
ANR	1319678	Symbol	* bin -> phdr		1319273						
ANR	1319679	Symbol	read_phdr		1319273						
ANR	1319680	Symbol	bin -> phdr [ i ] . p_offset		1319273						
ANR	1319681	Symbol	phdr		1319273						
ANR	1319682	Symbol	* i		1319273						
ANR	1319683	Symbol	true		1319273						
ANR	1319684	Symbol	r_buf_read_at		1319273						
ANR	1319685	Symbol	bin -> phdr [ i ] . p_type		1319273						
ANR	1319686	Symbol	bin -> phdr [ i ] . p_paddr		1319273						
ANR	1319687	Function	init_phdr	264:0:9650:11637							
ANR	1319688	FunctionDef	init_phdr (ELFOBJ * bin)		1319687	0					
ANR	1319689	CompoundStatement		264:34:9684:11637	1319687	0					
ANR	1319690	IdentifierDeclStatement	ut32 phdr_size ;	265:1:9687:9701	1319687	0	True				
ANR	1319691	IdentifierDecl	phdr_size		1319687	0					
ANR	1319692	IdentifierDeclType	ut32		1319687	0					
ANR	1319693	Identifier	phdr_size		1319687	1					
ANR	1319694	ExpressionStatement	"r_return_val_if_fail ( ! bin -> phdr , false )"	267:1:9705:9745	1319687	1	True				
ANR	1319695	CallExpression	"r_return_val_if_fail ( ! bin -> phdr , false )"		1319687	0					
ANR	1319696	Callee	r_return_val_if_fail		1319687	0					
ANR	1319697	Identifier	r_return_val_if_fail		1319687	0					
ANR	1319698	ArgumentList	! bin -> phdr		1319687	1					
ANR	1319699	Argument	! bin -> phdr		1319687	0					
ANR	1319700	UnaryOperationExpression	! bin -> phdr		1319687	0					
ANR	1319701	UnaryOperator	!		1319687	0					
ANR	1319702	PtrMemberAccess	bin -> phdr		1319687	1					
ANR	1319703	Identifier	bin		1319687	0					
ANR	1319704	Identifier	phdr		1319687	1					
ANR	1319705	Argument	false		1319687	1					
ANR	1319706	Identifier	false		1319687	0					
ANR	1319707	IfStatement	if ( ! bin -> ehdr . e_phnum )		1319687	2					
ANR	1319708	Condition	! bin -> ehdr . e_phnum	269:5:9753:9770	1319687	0	True				
ANR	1319709	UnaryOperationExpression	! bin -> ehdr . e_phnum		1319687	0					
ANR	1319710	UnaryOperator	!		1319687	0					
ANR	1319711	MemberAccess	bin -> ehdr . e_phnum		1319687	1					
ANR	1319712	PtrMemberAccess	bin -> ehdr		1319687	0					
ANR	1319713	Identifier	bin		1319687	0					
ANR	1319714	Identifier	ehdr		1319687	1					
ANR	1319715	Identifier	e_phnum		1319687	1					
ANR	1319716	CompoundStatement		6:25:88:88	1319687	1					
ANR	1319717	ReturnStatement	return false ;	270:2:9777:9789	1319687	0	True				
ANR	1319718	Identifier	false		1319687	0					
ANR	1319719	IfStatement	"if ( ! UT32_MUL ( & phdr_size , ( ut32 ) bin -> ehdr . e_phnum , sizeof ( Elf_ ( Phdr ) ) ) )"		1319687	3					
ANR	1319720	Condition	"! UT32_MUL ( & phdr_size , ( ut32 ) bin -> ehdr . e_phnum , sizeof ( Elf_ ( Phdr ) ) )"	272:5:9799:9866	1319687	0	True				
ANR	1319721	UnaryOperationExpression	"! UT32_MUL ( & phdr_size , ( ut32 ) bin -> ehdr . e_phnum , sizeof ( Elf_ ( Phdr ) ) )"		1319687	0					
ANR	1319722	UnaryOperator	!		1319687	0					
ANR	1319723	CallExpression	"UT32_MUL ( & phdr_size , ( ut32 ) bin -> ehdr . e_phnum , sizeof ( Elf_ ( Phdr ) ) )"		1319687	1					
ANR	1319724	Callee	UT32_MUL		1319687	0					
ANR	1319725	Identifier	UT32_MUL		1319687	0					
ANR	1319726	ArgumentList	& phdr_size		1319687	1					
ANR	1319727	Argument	& phdr_size		1319687	0					
ANR	1319728	UnaryOperationExpression	& phdr_size		1319687	0					
ANR	1319729	UnaryOperator	&		1319687	0					
ANR	1319730	Identifier	phdr_size		1319687	1					
ANR	1319731	Argument	( ut32 ) bin -> ehdr . e_phnum		1319687	1					
ANR	1319732	CastExpression	( ut32 ) bin -> ehdr . e_phnum		1319687	0					
ANR	1319733	CastTarget	ut32		1319687	0					
ANR	1319734	MemberAccess	bin -> ehdr . e_phnum		1319687	1					
ANR	1319735	PtrMemberAccess	bin -> ehdr		1319687	0					
ANR	1319736	Identifier	bin		1319687	0					
ANR	1319737	Identifier	ehdr		1319687	1					
ANR	1319738	Identifier	e_phnum		1319687	1					
ANR	1319739	Argument	sizeof ( Elf_ ( Phdr ) )		1319687	2					
ANR	1319740	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		1319687	0					
ANR	1319741	Sizeof	sizeof		1319687	0					
ANR	1319742	CallExpression	Elf_ ( Phdr )		1319687	1					
ANR	1319743	Callee	Elf_		1319687	0					
ANR	1319744	Identifier	Elf_		1319687	0					
ANR	1319745	ArgumentList	Phdr		1319687	1					
ANR	1319746	Argument	Phdr		1319687	0					
ANR	1319747	Identifier	Phdr		1319687	0					
ANR	1319748	CompoundStatement		9:75:184:184	1319687	1					
ANR	1319749	ReturnStatement	return false ;	273:2:9873:9885	1319687	0	True				
ANR	1319750	Identifier	false		1319687	0					
ANR	1319751	IfStatement	if ( ! phdr_size )		1319687	4					
ANR	1319752	Condition	! phdr_size	275:5:9895:9904	1319687	0	True				
ANR	1319753	UnaryOperationExpression	! phdr_size		1319687	0					
ANR	1319754	UnaryOperator	!		1319687	0					
ANR	1319755	Identifier	phdr_size		1319687	1					
ANR	1319756	CompoundStatement		12:17:222:222	1319687	1					
ANR	1319757	ReturnStatement	return false ;	276:2:9911:9923	1319687	0	True				
ANR	1319758	Identifier	false		1319687	0					
ANR	1319759	IfStatement	if ( phdr_size > bin -> size )		1319687	5					
ANR	1319760	Condition	phdr_size > bin -> size	278:5:9933:9953	1319687	0	True				
ANR	1319761	RelationalExpression	phdr_size > bin -> size		1319687	0		>			
ANR	1319762	Identifier	phdr_size		1319687	0					
ANR	1319763	PtrMemberAccess	bin -> size		1319687	1					
ANR	1319764	Identifier	bin		1319687	0					
ANR	1319765	Identifier	size		1319687	1					
ANR	1319766	CompoundStatement		15:28:271:271	1319687	1					
ANR	1319767	ReturnStatement	return false ;	279:2:9960:9972	1319687	0	True				
ANR	1319768	Identifier	false		1319687	0					
ANR	1319769	IfStatement	if ( phdr_size > ( ut32 ) bin -> size )		1319687	6					
ANR	1319770	Condition	phdr_size > ( ut32 ) bin -> size	281:5:9982:10008	1319687	0	True				
ANR	1319771	RelationalExpression	phdr_size > ( ut32 ) bin -> size		1319687	0		>			
ANR	1319772	Identifier	phdr_size		1319687	0					
ANR	1319773	CastExpression	( ut32 ) bin -> size		1319687	1					
ANR	1319774	CastTarget	ut32		1319687	0					
ANR	1319775	PtrMemberAccess	bin -> size		1319687	1					
ANR	1319776	Identifier	bin		1319687	0					
ANR	1319777	Identifier	size		1319687	1					
ANR	1319778	CompoundStatement		18:34:326:326	1319687	1					
ANR	1319779	ReturnStatement	return false ;	282:2:10015:10027	1319687	0	True				
ANR	1319780	Identifier	false		1319687	0					
ANR	1319781	IfStatement	if ( bin -> ehdr . e_phoff > bin -> size )		1319687	7					
ANR	1319782	Condition	bin -> ehdr . e_phoff > bin -> size	284:5:10037:10065	1319687	0	True				
ANR	1319783	RelationalExpression	bin -> ehdr . e_phoff > bin -> size		1319687	0		>			
ANR	1319784	MemberAccess	bin -> ehdr . e_phoff		1319687	0					
ANR	1319785	PtrMemberAccess	bin -> ehdr		1319687	0					
ANR	1319786	Identifier	bin		1319687	0					
ANR	1319787	Identifier	ehdr		1319687	1					
ANR	1319788	Identifier	e_phoff		1319687	1					
ANR	1319789	PtrMemberAccess	bin -> size		1319687	1					
ANR	1319790	Identifier	bin		1319687	0					
ANR	1319791	Identifier	size		1319687	1					
ANR	1319792	CompoundStatement		21:36:383:383	1319687	1					
ANR	1319793	ReturnStatement	return false ;	285:2:10072:10084	1319687	0	True				
ANR	1319794	Identifier	false		1319687	0					
ANR	1319795	IfStatement	if ( bin -> ehdr . e_phoff + phdr_size > bin -> size )		1319687	8					
ANR	1319796	Condition	bin -> ehdr . e_phoff + phdr_size > bin -> size	287:5:10094:10134	1319687	0	True				
ANR	1319797	RelationalExpression	bin -> ehdr . e_phoff + phdr_size > bin -> size		1319687	0		>			
ANR	1319798	AdditiveExpression	bin -> ehdr . e_phoff + phdr_size		1319687	0		+			
ANR	1319799	MemberAccess	bin -> ehdr . e_phoff		1319687	0					
ANR	1319800	PtrMemberAccess	bin -> ehdr		1319687	0					
ANR	1319801	Identifier	bin		1319687	0					
ANR	1319802	Identifier	ehdr		1319687	1					
ANR	1319803	Identifier	e_phoff		1319687	1					
ANR	1319804	Identifier	phdr_size		1319687	1					
ANR	1319805	PtrMemberAccess	bin -> size		1319687	1					
ANR	1319806	Identifier	bin		1319687	0					
ANR	1319807	Identifier	size		1319687	1					
ANR	1319808	CompoundStatement		24:48:452:452	1319687	1					
ANR	1319809	ReturnStatement	return false ;	288:2:10141:10153	1319687	0	True				
ANR	1319810	Identifier	false		1319687	0					
ANR	1319811	IfStatement	"if ( ! ( bin -> phdr = R_NEWS0 ( Elf_ ( Phdr ) , bin -> ehdr . e_phnum ) ) )"		1319687	9					
ANR	1319812	Condition	"! ( bin -> phdr = R_NEWS0 ( Elf_ ( Phdr ) , bin -> ehdr . e_phnum ) )"	290:5:10163:10216	1319687	0	True				
ANR	1319813	UnaryOperationExpression	"! ( bin -> phdr = R_NEWS0 ( Elf_ ( Phdr ) , bin -> ehdr . e_phnum ) )"		1319687	0					
ANR	1319814	UnaryOperator	!		1319687	0					
ANR	1319815	AssignmentExpression	"bin -> phdr = R_NEWS0 ( Elf_ ( Phdr ) , bin -> ehdr . e_phnum )"		1319687	1		=			
ANR	1319816	PtrMemberAccess	bin -> phdr		1319687	0					
ANR	1319817	Identifier	bin		1319687	0					
ANR	1319818	Identifier	phdr		1319687	1					
ANR	1319819	CallExpression	"R_NEWS0 ( Elf_ ( Phdr ) , bin -> ehdr . e_phnum )"		1319687	1					
ANR	1319820	Callee	R_NEWS0		1319687	0					
ANR	1319821	Identifier	R_NEWS0		1319687	0					
ANR	1319822	ArgumentList	Elf_ ( Phdr )		1319687	1					
ANR	1319823	Argument	Elf_ ( Phdr )		1319687	0					
ANR	1319824	CallExpression	Elf_ ( Phdr )		1319687	0					
ANR	1319825	Callee	Elf_		1319687	0					
ANR	1319826	Identifier	Elf_		1319687	0					
ANR	1319827	ArgumentList	Phdr		1319687	1					
ANR	1319828	Argument	Phdr		1319687	0					
ANR	1319829	Identifier	Phdr		1319687	0					
ANR	1319830	Argument	bin -> ehdr . e_phnum		1319687	1					
ANR	1319831	MemberAccess	bin -> ehdr . e_phnum		1319687	0					
ANR	1319832	PtrMemberAccess	bin -> ehdr		1319687	0					
ANR	1319833	Identifier	bin		1319687	0					
ANR	1319834	Identifier	ehdr		1319687	1					
ANR	1319835	Identifier	e_phnum		1319687	1					
ANR	1319836	CompoundStatement		27:61:534:534	1319687	1					
ANR	1319837	ExpressionStatement	"perror ( ""malloc (phdr)"" )"	291:2:10223:10247	1319687	0	True				
ANR	1319838	CallExpression	"perror ( ""malloc (phdr)"" )"		1319687	0					
ANR	1319839	Callee	perror		1319687	0					
ANR	1319840	Identifier	perror		1319687	0					
ANR	1319841	ArgumentList	"""malloc (phdr)"""		1319687	1					
ANR	1319842	Argument	"""malloc (phdr)"""		1319687	0					
ANR	1319843	PrimaryExpression	"""malloc (phdr)"""		1319687	0					
ANR	1319844	ReturnStatement	return false ;	292:2:10251:10263	1319687	1	True				
ANR	1319845	Identifier	false		1319687	0					
ANR	1319846	IdentifierDeclStatement	bool linux_kern_hack = false ;	295:1:10270:10298	1319687	10	True				
ANR	1319847	IdentifierDecl	linux_kern_hack = false		1319687	0					
ANR	1319848	IdentifierDeclType	bool		1319687	0					
ANR	1319849	Identifier	linux_kern_hack		1319687	1					
ANR	1319850	AssignmentExpression	linux_kern_hack = false		1319687	2		=			
ANR	1319851	Identifier	false		1319687	0					
ANR	1319852	Identifier	false		1319687	1					
ANR	1319853	IdentifierDeclStatement	const int _128K = 1024 * 128 ;	297:1:10353:10381	1319687	11	True				
ANR	1319854	IdentifierDecl	_128K = 1024 * 128		1319687	0					
ANR	1319855	IdentifierDeclType	const int		1319687	0					
ANR	1319856	Identifier	_128K		1319687	1					
ANR	1319857	AssignmentExpression	_128K = 1024 * 128		1319687	2		=			
ANR	1319858	Identifier	_128K		1319687	0					
ANR	1319859	MultiplicativeExpression	1024 * 128		1319687	1		*			
ANR	1319860	PrimaryExpression	1024		1319687	0					
ANR	1319861	PrimaryExpression	128		1319687	1					
ANR	1319862	IfStatement	if ( r_buf_size ( bin -> b ) > _128K && ( bin -> ehdr . e_machine == EM_X86_64 || bin -> ehdr . e_machine == EM_386 ) )		1319687	12					
ANR	1319863	Condition	r_buf_size ( bin -> b ) > _128K && ( bin -> ehdr . e_machine == EM_X86_64 || bin -> ehdr . e_machine == EM_386 )	298:5:10388:10485	1319687	0	True				
ANR	1319864	AndExpression	r_buf_size ( bin -> b ) > _128K && ( bin -> ehdr . e_machine == EM_X86_64 || bin -> ehdr . e_machine == EM_386 )		1319687	0		&&			
ANR	1319865	RelationalExpression	r_buf_size ( bin -> b ) > _128K		1319687	0		>			
ANR	1319866	CallExpression	r_buf_size ( bin -> b )		1319687	0					
ANR	1319867	Callee	r_buf_size		1319687	0					
ANR	1319868	Identifier	r_buf_size		1319687	0					
ANR	1319869	ArgumentList	bin -> b		1319687	1					
ANR	1319870	Argument	bin -> b		1319687	0					
ANR	1319871	PtrMemberAccess	bin -> b		1319687	0					
ANR	1319872	Identifier	bin		1319687	0					
ANR	1319873	Identifier	b		1319687	1					
ANR	1319874	Identifier	_128K		1319687	1					
ANR	1319875	OrExpression	bin -> ehdr . e_machine == EM_X86_64 || bin -> ehdr . e_machine == EM_386		1319687	1		||			
ANR	1319876	EqualityExpression	bin -> ehdr . e_machine == EM_X86_64		1319687	0		==			
ANR	1319877	MemberAccess	bin -> ehdr . e_machine		1319687	0					
ANR	1319878	PtrMemberAccess	bin -> ehdr		1319687	0					
ANR	1319879	Identifier	bin		1319687	0					
ANR	1319880	Identifier	ehdr		1319687	1					
ANR	1319881	Identifier	e_machine		1319687	1					
ANR	1319882	Identifier	EM_X86_64		1319687	1					
ANR	1319883	EqualityExpression	bin -> ehdr . e_machine == EM_386		1319687	1		==			
ANR	1319884	MemberAccess	bin -> ehdr . e_machine		1319687	0					
ANR	1319885	PtrMemberAccess	bin -> ehdr		1319687	0					
ANR	1319886	Identifier	bin		1319687	0					
ANR	1319887	Identifier	ehdr		1319687	1					
ANR	1319888	Identifier	e_machine		1319687	1					
ANR	1319889	Identifier	EM_386		1319687	1					
ANR	1319890	CompoundStatement		35:105:803:803	1319687	1					
ANR	1319891	ExpressionStatement	linux_kern_hack = true	299:2:10492:10514	1319687	0	True				
ANR	1319892	AssignmentExpression	linux_kern_hack = true		1319687	0		=			
ANR	1319893	Identifier	linux_kern_hack		1319687	0					
ANR	1319894	Identifier	true		1319687	1					
ANR	1319895	IfStatement	"if ( ! read_phdr ( bin , linux_kern_hack ) )"		1319687	13					
ANR	1319896	Condition	"! read_phdr ( bin , linux_kern_hack )"	301:5:10524:10556	1319687	0	True				
ANR	1319897	UnaryOperationExpression	"! read_phdr ( bin , linux_kern_hack )"		1319687	0					
ANR	1319898	UnaryOperator	!		1319687	0					
ANR	1319899	CallExpression	"read_phdr ( bin , linux_kern_hack )"		1319687	1					
ANR	1319900	Callee	read_phdr		1319687	0					
ANR	1319901	Identifier	read_phdr		1319687	0					
ANR	1319902	ArgumentList	bin		1319687	1					
ANR	1319903	Argument	bin		1319687	0					
ANR	1319904	Identifier	bin		1319687	0					
ANR	1319905	Argument	linux_kern_hack		1319687	1					
ANR	1319906	Identifier	linux_kern_hack		1319687	0					
ANR	1319907	CompoundStatement		38:40:874:874	1319687	1					
ANR	1319908	ReturnStatement	return false ;	302:2:10563:10575	1319687	0	True				
ANR	1319909	Identifier	false		1319687	0					
ANR	1319910	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_phdr.offset"" , bin -> ehdr . e_phoff , 0 )"	305:1:10582:10644	1319687	14	True				
ANR	1319911	CallExpression	"sdb_num_set ( bin -> kv , ""elf_phdr.offset"" , bin -> ehdr . e_phoff , 0 )"		1319687	0					
ANR	1319912	Callee	sdb_num_set		1319687	0					
ANR	1319913	Identifier	sdb_num_set		1319687	0					
ANR	1319914	ArgumentList	bin -> kv		1319687	1					
ANR	1319915	Argument	bin -> kv		1319687	0					
ANR	1319916	PtrMemberAccess	bin -> kv		1319687	0					
ANR	1319917	Identifier	bin		1319687	0					
ANR	1319918	Identifier	kv		1319687	1					
ANR	1319919	Argument	"""elf_phdr.offset"""		1319687	1					
ANR	1319920	PrimaryExpression	"""elf_phdr.offset"""		1319687	0					
ANR	1319921	Argument	bin -> ehdr . e_phoff		1319687	2					
ANR	1319922	MemberAccess	bin -> ehdr . e_phoff		1319687	0					
ANR	1319923	PtrMemberAccess	bin -> ehdr		1319687	0					
ANR	1319924	Identifier	bin		1319687	0					
ANR	1319925	Identifier	ehdr		1319687	1					
ANR	1319926	Identifier	e_phoff		1319687	1					
ANR	1319927	Argument	0		1319687	3					
ANR	1319928	PrimaryExpression	0		1319687	0					
ANR	1319929	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_phdr.size"" , sizeof ( Elf_ ( Phdr ) ) , 0 )"	306:1:10647:10709	1319687	15	True				
ANR	1319930	CallExpression	"sdb_num_set ( bin -> kv , ""elf_phdr.size"" , sizeof ( Elf_ ( Phdr ) ) , 0 )"		1319687	0					
ANR	1319931	Callee	sdb_num_set		1319687	0					
ANR	1319932	Identifier	sdb_num_set		1319687	0					
ANR	1319933	ArgumentList	bin -> kv		1319687	1					
ANR	1319934	Argument	bin -> kv		1319687	0					
ANR	1319935	PtrMemberAccess	bin -> kv		1319687	0					
ANR	1319936	Identifier	bin		1319687	0					
ANR	1319937	Identifier	kv		1319687	1					
ANR	1319938	Argument	"""elf_phdr.size"""		1319687	1					
ANR	1319939	PrimaryExpression	"""elf_phdr.size"""		1319687	0					
ANR	1319940	Argument	sizeof ( Elf_ ( Phdr ) )		1319687	2					
ANR	1319941	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		1319687	0					
ANR	1319942	Sizeof	sizeof		1319687	0					
ANR	1319943	CallExpression	Elf_ ( Phdr )		1319687	1					
ANR	1319944	Callee	Elf_		1319687	0					
ANR	1319945	Identifier	Elf_		1319687	0					
ANR	1319946	ArgumentList	Phdr		1319687	1					
ANR	1319947	Argument	Phdr		1319687	0					
ANR	1319948	Identifier	Phdr		1319687	0					
ANR	1319949	Argument	0		1319687	3					
ANR	1319950	PrimaryExpression	0		1319687	0					
ANR	1319951	Statement	sdb_set	307:1:10712:10718	1319687	16	True				
ANR	1319952	Statement	(	307:9:10720:10720	1319687	17	True				
ANR	1319953	Statement	bin	307:10:10721:10723	1319687	18	True				
ANR	1319954	Statement	->	307:13:10724:10725	1319687	19	True				
ANR	1319955	Statement	kv	307:15:10726:10727	1319687	20	True				
ANR	1319956	Statement	","	307:17:10728:10728	1319687	21	True				
ANR	1319957	Statement	"""elf_p_type.cparse"""	307:19:10730:10748	1319687	22	True				
ANR	1319958	Statement	","	307:38:10749:10749	1319687	23	True				
ANR	1319959	Statement	"""enum elf_p_type {PT_NULL=0,PT_LOAD=1,PT_DYNAMIC=2,"""	307:40:10751:10802	1319687	24	True				
ANR	1319960	Statement	"""PT_INTERP=3,PT_NOTE=4,PT_SHLIB=5,PT_PHDR=6,PT_LOOS=0x60000000,"""	308:2:10806:10869	1319687	25	True				
ANR	1319961	Statement	"""PT_HIOS=0x6fffffff,PT_LOPROC=0x70000000,PT_HIPROC=0x7fffffff};"""	309:2:10873:10936	1319687	26	True				
ANR	1319962	Statement	","	309:66:10937:10937	1319687	27	True				
ANR	1319963	Statement	0	310:2:10941:10941	1319687	28	True				
ANR	1319964	Statement	)	310:3:10942:10942	1319687	29	True				
ANR	1319965	ExpressionStatement		310:4:10943:10943	1319687	30	True				
ANR	1319966	Statement	sdb_set	311:1:10946:10952	1319687	31	True				
ANR	1319967	Statement	(	311:9:10954:10954	1319687	32	True				
ANR	1319968	Statement	bin	311:10:10955:10957	1319687	33	True				
ANR	1319969	Statement	->	311:13:10958:10959	1319687	34	True				
ANR	1319970	Statement	kv	311:15:10960:10961	1319687	35	True				
ANR	1319971	Statement	","	311:17:10962:10962	1319687	36	True				
ANR	1319972	Statement	"""elf_p_flags.cparse"""	311:19:10964:10983	1319687	37	True				
ANR	1319973	Statement	","	311:39:10984:10984	1319687	38	True				
ANR	1319974	Statement	"""enum elf_p_flags {PF_None=0,PF_Exec=1,"""	311:41:10986:11025	1319687	39	True				
ANR	1319975	Statement	"""PF_Write=2,PF_Write_Exec=3,PF_Read=4,PF_Read_Exec=5,PF_Read_Write=6,"""	312:3:11030:11099	1319687	40	True				
ANR	1319976	Statement	"""PF_Read_Write_Exec=7};"""	313:3:11104:11127	1319687	41	True				
ANR	1319977	Statement	","	313:27:11128:11128	1319687	42	True				
ANR	1319978	Statement	0	313:29:11130:11130	1319687	43	True				
ANR	1319979	Statement	)	313:30:11131:11131	1319687	44	True				
ANR	1319980	ExpressionStatement		313:31:11132:11132	1319687	45	True				
ANR	1319981	Statement	sdb_set	315:1:11151:11157	1319687	46	True				
ANR	1319982	Statement	(	315:9:11159:11159	1319687	47	True				
ANR	1319983	Statement	bin	315:10:11160:11162	1319687	48	True				
ANR	1319984	Statement	->	315:13:11163:11164	1319687	49	True				
ANR	1319985	Statement	kv	315:15:11165:11166	1319687	50	True				
ANR	1319986	Statement	","	315:17:11167:11167	1319687	51	True				
ANR	1319987	Statement	"""elf_phdr.format"""	315:19:11169:11185	1319687	52	True				
ANR	1319988	Statement	","	315:36:11186:11186	1319687	53	True				
ANR	1319989	Statement	"""[4]E[4]Eqqqqqq (elf_p_type)type (elf_p_flags)flags"""	315:38:11188:11239	1319687	54	True				
ANR	1319990	Statement	""" offset vaddr paddr filesz memsz align"""	316:3:11244:11283	1319687	55	True				
ANR	1319991	Statement	","	316:43:11284:11284	1319687	56	True				
ANR	1319992	Statement	0	316:45:11286:11286	1319687	57	True				
ANR	1319993	Statement	)	316:46:11287:11287	1319687	58	True				
ANR	1319994	ExpressionStatement		316:47:11288:11288	1319687	59	True				
ANR	1319995	ReturnStatement	return true ;	321:1:11444:11455	1319687	60	True				
ANR	1319996	Identifier	true		1319687	0					
ANR	1319997	ReturnType	static int		1319687	1					
ANR	1319998	Identifier	init_phdr		1319687	2					
ANR	1319999	ParameterList	ELFOBJ * bin		1319687	3					
ANR	1320000	Parameter	ELFOBJ * bin	264:21:9671:9681	1319687	0	True				
ANR	1320001	ParameterType	ELFOBJ *		1319687	0					
ANR	1320002	Identifier	bin		1319687	1					
ANR	1320003	CFGEntryNode	ENTRY		1319687		True				
ANR	1320004	CFGExitNode	EXIT		1319687		True				
ANR	1320005	Symbol	Elf_		1319687						
ANR	1320006	Symbol	UT32_MUL		1319687						
ANR	1320007	Symbol	bin -> size		1319687						
ANR	1320008	Symbol	_128K		1319687						
ANR	1320009	Symbol	bin -> b		1319687						
ANR	1320010	Symbol	Phdr		1319687						
ANR	1320011	Symbol	bin		1319687						
ANR	1320012	Symbol	false		1319687						
ANR	1320013	Symbol	phdr_size		1319687						
ANR	1320014	Symbol	bin -> phdr		1319687						
ANR	1320015	Symbol	bin -> ehdr . e_phnum		1319687						
ANR	1320016	Symbol	EM_X86_64		1319687						
ANR	1320017	Symbol	bin -> kv		1319687						
ANR	1320018	Symbol	linux_kern_hack		1319687						
ANR	1320019	Symbol	* bin		1319687						
ANR	1320020	Symbol	read_phdr		1319687						
ANR	1320021	Symbol	bin -> ehdr . e_phoff		1319687						
ANR	1320022	Symbol	& phdr_size		1319687						
ANR	1320023	Symbol	bin -> ehdr		1319687						
ANR	1320024	Symbol	R_NEWS0		1319687						
ANR	1320025	Symbol	bin -> ehdr . e_machine		1319687						
ANR	1320026	Symbol	true		1319687						
ANR	1320027	Symbol	EM_386		1319687						
ANR	1320028	Symbol	r_buf_size		1319687						
ANR	1320029	Function	init_shdr	327:0:11640:14383							
ANR	1320030	FunctionDef	init_shdr (ELFOBJ * bin)		1320029	0					
ANR	1320031	CompoundStatement		327:34:11674:14383	1320029	0					
ANR	1320032	IdentifierDeclStatement	ut32 shdr_size ;	328:1:11677:11691	1320029	0	True				
ANR	1320033	IdentifierDecl	shdr_size		1320029	0					
ANR	1320034	IdentifierDeclType	ut32		1320029	0					
ANR	1320035	Identifier	shdr_size		1320029	1					
ANR	1320036	IdentifierDeclStatement	ut8 shdr [ sizeof ( Elf_ ( Shdr ) ) ] = { 0 } ;	329:1:11694:11731	1320029	1	True				
ANR	1320037	IdentifierDecl	shdr [ sizeof ( Elf_ ( Shdr ) ) ] = { 0 }		1320029	0					
ANR	1320038	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Shdr ) ) ]		1320029	0					
ANR	1320039	Identifier	shdr		1320029	1					
ANR	1320040	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		1320029	2					
ANR	1320041	Sizeof	sizeof		1320029	0					
ANR	1320042	CallExpression	Elf_ ( Shdr )		1320029	1					
ANR	1320043	Callee	Elf_		1320029	0					
ANR	1320044	Identifier	Elf_		1320029	0					
ANR	1320045	ArgumentList	Shdr		1320029	1					
ANR	1320046	Argument	Shdr		1320029	0					
ANR	1320047	Identifier	Shdr		1320029	0					
ANR	1320048	AssignmentExpression	shdr [ sizeof ( Elf_ ( Shdr ) ) ] = { 0 }		1320029	3		=			
ANR	1320049	Identifier	shdr		1320029	0					
ANR	1320050	InitializerList	0		1320029	1					
ANR	1320051	PrimaryExpression	0		1320029	0					
ANR	1320052	IdentifierDeclStatement	"int i , j , len ;"	330:1:11734:11747	1320029	2	True				
ANR	1320053	IdentifierDecl	i		1320029	0					
ANR	1320054	IdentifierDeclType	int		1320029	0					
ANR	1320055	Identifier	i		1320029	1					
ANR	1320056	IdentifierDecl	j		1320029	1					
ANR	1320057	IdentifierDeclType	int		1320029	0					
ANR	1320058	Identifier	j		1320029	1					
ANR	1320059	IdentifierDecl	len		1320029	2					
ANR	1320060	IdentifierDeclType	int		1320029	0					
ANR	1320061	Identifier	len		1320029	1					
ANR	1320062	ExpressionStatement	"r_return_val_if_fail ( bin && ! bin -> shdr , false )"	332:1:11751:11798	1320029	3	True				
ANR	1320063	CallExpression	"r_return_val_if_fail ( bin && ! bin -> shdr , false )"		1320029	0					
ANR	1320064	Callee	r_return_val_if_fail		1320029	0					
ANR	1320065	Identifier	r_return_val_if_fail		1320029	0					
ANR	1320066	ArgumentList	bin && ! bin -> shdr		1320029	1					
ANR	1320067	Argument	bin && ! bin -> shdr		1320029	0					
ANR	1320068	AndExpression	bin && ! bin -> shdr		1320029	0		&&			
ANR	1320069	Identifier	bin		1320029	0					
ANR	1320070	UnaryOperationExpression	! bin -> shdr		1320029	1					
ANR	1320071	UnaryOperator	!		1320029	0					
ANR	1320072	PtrMemberAccess	bin -> shdr		1320029	1					
ANR	1320073	Identifier	bin		1320029	0					
ANR	1320074	Identifier	shdr		1320029	1					
ANR	1320075	Argument	false		1320029	1					
ANR	1320076	Identifier	false		1320029	0					
ANR	1320077	IfStatement	"if ( ! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) ) )"		1320029	4					
ANR	1320078	Condition	"! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"	334:5:11806:11867	1320029	0	True				
ANR	1320079	UnaryOperationExpression	"! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"		1320029	0					
ANR	1320080	UnaryOperator	!		1320029	0					
ANR	1320081	CallExpression	"UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"		1320029	1					
ANR	1320082	Callee	UT32_MUL		1320029	0					
ANR	1320083	Identifier	UT32_MUL		1320029	0					
ANR	1320084	ArgumentList	& shdr_size		1320029	1					
ANR	1320085	Argument	& shdr_size		1320029	0					
ANR	1320086	UnaryOperationExpression	& shdr_size		1320029	0					
ANR	1320087	UnaryOperator	&		1320029	0					
ANR	1320088	Identifier	shdr_size		1320029	1					
ANR	1320089	Argument	bin -> ehdr . e_shnum		1320029	1					
ANR	1320090	MemberAccess	bin -> ehdr . e_shnum		1320029	0					
ANR	1320091	PtrMemberAccess	bin -> ehdr		1320029	0					
ANR	1320092	Identifier	bin		1320029	0					
ANR	1320093	Identifier	ehdr		1320029	1					
ANR	1320094	Identifier	e_shnum		1320029	1					
ANR	1320095	Argument	sizeof ( Elf_ ( Shdr ) )		1320029	2					
ANR	1320096	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		1320029	0					
ANR	1320097	Sizeof	sizeof		1320029	0					
ANR	1320098	CallExpression	Elf_ ( Shdr )		1320029	1					
ANR	1320099	Callee	Elf_		1320029	0					
ANR	1320100	Identifier	Elf_		1320029	0					
ANR	1320101	ArgumentList	Shdr		1320029	1					
ANR	1320102	Argument	Shdr		1320029	0					
ANR	1320103	Identifier	Shdr		1320029	0					
ANR	1320104	CompoundStatement		8:69:195:195	1320029	1					
ANR	1320105	ReturnStatement	return false ;	335:2:11874:11886	1320029	0	True				
ANR	1320106	Identifier	false		1320029	0					
ANR	1320107	IfStatement	if ( shdr_size < 1 )		1320029	5					
ANR	1320108	Condition	shdr_size < 1	337:5:11896:11908	1320029	0	True				
ANR	1320109	RelationalExpression	shdr_size < 1		1320029	0		<			
ANR	1320110	Identifier	shdr_size		1320029	0					
ANR	1320111	PrimaryExpression	1		1320029	1					
ANR	1320112	CompoundStatement		11:20:236:236	1320029	1					
ANR	1320113	ReturnStatement	return false ;	338:2:11915:11927	1320029	0	True				
ANR	1320114	Identifier	false		1320029	0					
ANR	1320115	IfStatement	if ( shdr_size > bin -> size )		1320029	6					
ANR	1320116	Condition	shdr_size > bin -> size	340:5:11937:11957	1320029	0	True				
ANR	1320117	RelationalExpression	shdr_size > bin -> size		1320029	0		>			
ANR	1320118	Identifier	shdr_size		1320029	0					
ANR	1320119	PtrMemberAccess	bin -> size		1320029	1					
ANR	1320120	Identifier	bin		1320029	0					
ANR	1320121	Identifier	size		1320029	1					
ANR	1320122	CompoundStatement		14:28:285:285	1320029	1					
ANR	1320123	ReturnStatement	return false ;	341:2:11964:11976	1320029	0	True				
ANR	1320124	Identifier	false		1320029	0					
ANR	1320125	IfStatement	if ( bin -> ehdr . e_shoff > bin -> size )		1320029	7					
ANR	1320126	Condition	bin -> ehdr . e_shoff > bin -> size	343:5:11986:12014	1320029	0	True				
ANR	1320127	RelationalExpression	bin -> ehdr . e_shoff > bin -> size		1320029	0		>			
ANR	1320128	MemberAccess	bin -> ehdr . e_shoff		1320029	0					
ANR	1320129	PtrMemberAccess	bin -> ehdr		1320029	0					
ANR	1320130	Identifier	bin		1320029	0					
ANR	1320131	Identifier	ehdr		1320029	1					
ANR	1320132	Identifier	e_shoff		1320029	1					
ANR	1320133	PtrMemberAccess	bin -> size		1320029	1					
ANR	1320134	Identifier	bin		1320029	0					
ANR	1320135	Identifier	size		1320029	1					
ANR	1320136	CompoundStatement		17:36:342:342	1320029	1					
ANR	1320137	ReturnStatement	return false ;	344:2:12021:12033	1320029	0	True				
ANR	1320138	Identifier	false		1320029	0					
ANR	1320139	IfStatement	if ( bin -> ehdr . e_shoff + shdr_size > bin -> size )		1320029	8					
ANR	1320140	Condition	bin -> ehdr . e_shoff + shdr_size > bin -> size	346:5:12043:12083	1320029	0	True				
ANR	1320141	RelationalExpression	bin -> ehdr . e_shoff + shdr_size > bin -> size		1320029	0		>			
ANR	1320142	AdditiveExpression	bin -> ehdr . e_shoff + shdr_size		1320029	0		+			
ANR	1320143	MemberAccess	bin -> ehdr . e_shoff		1320029	0					
ANR	1320144	PtrMemberAccess	bin -> ehdr		1320029	0					
ANR	1320145	Identifier	bin		1320029	0					
ANR	1320146	Identifier	ehdr		1320029	1					
ANR	1320147	Identifier	e_shoff		1320029	1					
ANR	1320148	Identifier	shdr_size		1320029	1					
ANR	1320149	PtrMemberAccess	bin -> size		1320029	1					
ANR	1320150	Identifier	bin		1320029	0					
ANR	1320151	Identifier	size		1320029	1					
ANR	1320152	CompoundStatement		20:48:411:411	1320029	1					
ANR	1320153	ReturnStatement	return false ;	347:2:12090:12102	1320029	0	True				
ANR	1320154	Identifier	false		1320029	0					
ANR	1320155	IfStatement	"if ( ! ( bin -> shdr = R_NEWS0 ( Elf_ ( Shdr ) , bin -> ehdr . e_shnum ) ) )"		1320029	9					
ANR	1320156	Condition	"! ( bin -> shdr = R_NEWS0 ( Elf_ ( Shdr ) , bin -> ehdr . e_shnum ) )"	349:5:12112:12165	1320029	0	True				
ANR	1320157	UnaryOperationExpression	"! ( bin -> shdr = R_NEWS0 ( Elf_ ( Shdr ) , bin -> ehdr . e_shnum ) )"		1320029	0					
ANR	1320158	UnaryOperator	!		1320029	0					
ANR	1320159	AssignmentExpression	"bin -> shdr = R_NEWS0 ( Elf_ ( Shdr ) , bin -> ehdr . e_shnum )"		1320029	1		=			
ANR	1320160	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320161	Identifier	bin		1320029	0					
ANR	1320162	Identifier	shdr		1320029	1					
ANR	1320163	CallExpression	"R_NEWS0 ( Elf_ ( Shdr ) , bin -> ehdr . e_shnum )"		1320029	1					
ANR	1320164	Callee	R_NEWS0		1320029	0					
ANR	1320165	Identifier	R_NEWS0		1320029	0					
ANR	1320166	ArgumentList	Elf_ ( Shdr )		1320029	1					
ANR	1320167	Argument	Elf_ ( Shdr )		1320029	0					
ANR	1320168	CallExpression	Elf_ ( Shdr )		1320029	0					
ANR	1320169	Callee	Elf_		1320029	0					
ANR	1320170	Identifier	Elf_		1320029	0					
ANR	1320171	ArgumentList	Shdr		1320029	1					
ANR	1320172	Argument	Shdr		1320029	0					
ANR	1320173	Identifier	Shdr		1320029	0					
ANR	1320174	Argument	bin -> ehdr . e_shnum		1320029	1					
ANR	1320175	MemberAccess	bin -> ehdr . e_shnum		1320029	0					
ANR	1320176	PtrMemberAccess	bin -> ehdr		1320029	0					
ANR	1320177	Identifier	bin		1320029	0					
ANR	1320178	Identifier	ehdr		1320029	1					
ANR	1320179	Identifier	e_shnum		1320029	1					
ANR	1320180	CompoundStatement		23:61:493:493	1320029	1					
ANR	1320181	ExpressionStatement	"perror ( ""malloc (shdr)"" )"	350:2:12172:12196	1320029	0	True				
ANR	1320182	CallExpression	"perror ( ""malloc (shdr)"" )"		1320029	0					
ANR	1320183	Callee	perror		1320029	0					
ANR	1320184	Identifier	perror		1320029	0					
ANR	1320185	ArgumentList	"""malloc (shdr)"""		1320029	1					
ANR	1320186	Argument	"""malloc (shdr)"""		1320029	0					
ANR	1320187	PrimaryExpression	"""malloc (shdr)"""		1320029	0					
ANR	1320188	ReturnStatement	return false ;	351:2:12200:12212	1320029	1	True				
ANR	1320189	Identifier	false		1320029	0					
ANR	1320190	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_shdr.offset"" , bin -> ehdr . e_shoff , 0 )"	353:1:12218:12280	1320029	10	True				
ANR	1320191	CallExpression	"sdb_num_set ( bin -> kv , ""elf_shdr.offset"" , bin -> ehdr . e_shoff , 0 )"		1320029	0					
ANR	1320192	Callee	sdb_num_set		1320029	0					
ANR	1320193	Identifier	sdb_num_set		1320029	0					
ANR	1320194	ArgumentList	bin -> kv		1320029	1					
ANR	1320195	Argument	bin -> kv		1320029	0					
ANR	1320196	PtrMemberAccess	bin -> kv		1320029	0					
ANR	1320197	Identifier	bin		1320029	0					
ANR	1320198	Identifier	kv		1320029	1					
ANR	1320199	Argument	"""elf_shdr.offset"""		1320029	1					
ANR	1320200	PrimaryExpression	"""elf_shdr.offset"""		1320029	0					
ANR	1320201	Argument	bin -> ehdr . e_shoff		1320029	2					
ANR	1320202	MemberAccess	bin -> ehdr . e_shoff		1320029	0					
ANR	1320203	PtrMemberAccess	bin -> ehdr		1320029	0					
ANR	1320204	Identifier	bin		1320029	0					
ANR	1320205	Identifier	ehdr		1320029	1					
ANR	1320206	Identifier	e_shoff		1320029	1					
ANR	1320207	Argument	0		1320029	3					
ANR	1320208	PrimaryExpression	0		1320029	0					
ANR	1320209	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_shdr.size"" , sizeof ( Elf_ ( Shdr ) ) , 0 )"	354:1:12283:12345	1320029	11	True				
ANR	1320210	CallExpression	"sdb_num_set ( bin -> kv , ""elf_shdr.size"" , sizeof ( Elf_ ( Shdr ) ) , 0 )"		1320029	0					
ANR	1320211	Callee	sdb_num_set		1320029	0					
ANR	1320212	Identifier	sdb_num_set		1320029	0					
ANR	1320213	ArgumentList	bin -> kv		1320029	1					
ANR	1320214	Argument	bin -> kv		1320029	0					
ANR	1320215	PtrMemberAccess	bin -> kv		1320029	0					
ANR	1320216	Identifier	bin		1320029	0					
ANR	1320217	Identifier	kv		1320029	1					
ANR	1320218	Argument	"""elf_shdr.size"""		1320029	1					
ANR	1320219	PrimaryExpression	"""elf_shdr.size"""		1320029	0					
ANR	1320220	Argument	sizeof ( Elf_ ( Shdr ) )		1320029	2					
ANR	1320221	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		1320029	0					
ANR	1320222	Sizeof	sizeof		1320029	0					
ANR	1320223	CallExpression	Elf_ ( Shdr )		1320029	1					
ANR	1320224	Callee	Elf_		1320029	0					
ANR	1320225	Identifier	Elf_		1320029	0					
ANR	1320226	ArgumentList	Shdr		1320029	1					
ANR	1320227	Argument	Shdr		1320029	0					
ANR	1320228	Identifier	Shdr		1320029	0					
ANR	1320229	Argument	0		1320029	3					
ANR	1320230	PrimaryExpression	0		1320029	0					
ANR	1320231	Statement	sdb_set	355:1:12348:12354	1320029	12	True				
ANR	1320232	Statement	(	355:9:12356:12356	1320029	13	True				
ANR	1320233	Statement	bin	355:10:12357:12359	1320029	14	True				
ANR	1320234	Statement	->	355:13:12360:12361	1320029	15	True				
ANR	1320235	Statement	kv	355:15:12362:12363	1320029	16	True				
ANR	1320236	Statement	","	355:17:12364:12364	1320029	17	True				
ANR	1320237	Statement	"""elf_s_type.cparse"""	355:19:12366:12384	1320029	18	True				
ANR	1320238	Statement	","	355:38:12385:12385	1320029	19	True				
ANR	1320239	Statement	"""enum elf_s_type {SHT_NULL=0,SHT_PROGBITS=1,"""	355:40:12387:12431	1320029	20	True				
ANR	1320240	Statement	"""SHT_SYMTAB=2,SHT_STRTAB=3,SHT_RELA=4,SHT_HASH=5,SHT_DYNAMIC=6,SHT_NOTE=7,"""	356:3:12436:12510	1320029	21	True				
ANR	1320241	Statement	"""SHT_NOBITS=8,SHT_REL=9,SHT_SHLIB=10,SHT_DYNSYM=11,SHT_LOOS=0x60000000,"""	357:3:12515:12586	1320029	22	True				
ANR	1320242	Statement	"""SHT_HIOS=0x6fffffff,SHT_LOPROC=0x70000000,SHT_HIPROC=0x7fffffff};"""	358:3:12591:12657	1320029	23	True				
ANR	1320243	Statement	","	358:70:12658:12658	1320029	24	True				
ANR	1320244	Statement	0	358:72:12660:12660	1320029	25	True				
ANR	1320245	Statement	)	358:73:12661:12661	1320029	26	True				
ANR	1320246	ExpressionStatement		358:74:12662:12662	1320029	27	True				
ANR	1320247	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; i ++ )		1320029	28					
ANR	1320248	ForInit	i = 0 ;	360:6:12671:12676	1320029	0	True				
ANR	1320249	AssignmentExpression	i = 0		1320029	0		=			
ANR	1320250	Identifier	i		1320029	0					
ANR	1320251	PrimaryExpression	0		1320029	1					
ANR	1320252	Condition	i < bin -> ehdr . e_shnum	360:13:12678:12698	1320029	1	True				
ANR	1320253	RelationalExpression	i < bin -> ehdr . e_shnum		1320029	0		<			
ANR	1320254	Identifier	i		1320029	0					
ANR	1320255	MemberAccess	bin -> ehdr . e_shnum		1320029	1					
ANR	1320256	PtrMemberAccess	bin -> ehdr		1320029	0					
ANR	1320257	Identifier	bin		1320029	0					
ANR	1320258	Identifier	ehdr		1320029	1					
ANR	1320259	Identifier	e_shnum		1320029	1					
ANR	1320260	PostIncDecOperationExpression	i ++	360:36:12701:12703	1320029	2	True				
ANR	1320261	Identifier	i		1320029	0					
ANR	1320262	IncDec	++		1320029	1					
ANR	1320263	CompoundStatement		34:41:1031:1031	1320029	3					
ANR	1320264	ExpressionStatement	j = 0	361:2:12710:12715	1320029	0	True				
ANR	1320265	AssignmentExpression	j = 0		1320029	0		=			
ANR	1320266	Identifier	j		1320029	0					
ANR	1320267	PrimaryExpression	0		1320029	1					
ANR	1320268	ExpressionStatement	"len = r_buf_read_at ( bin -> b , bin -> ehdr . e_shoff + i * sizeof ( Elf_ ( Shdr ) ) , shdr , sizeof ( Elf_ ( Shdr ) ) )"	362:2:12719:12819	1320029	1	True				
ANR	1320269	AssignmentExpression	"len = r_buf_read_at ( bin -> b , bin -> ehdr . e_shoff + i * sizeof ( Elf_ ( Shdr ) ) , shdr , sizeof ( Elf_ ( Shdr ) ) )"		1320029	0		=			
ANR	1320270	Identifier	len		1320029	0					
ANR	1320271	CallExpression	"r_buf_read_at ( bin -> b , bin -> ehdr . e_shoff + i * sizeof ( Elf_ ( Shdr ) ) , shdr , sizeof ( Elf_ ( Shdr ) ) )"		1320029	1					
ANR	1320272	Callee	r_buf_read_at		1320029	0					
ANR	1320273	Identifier	r_buf_read_at		1320029	0					
ANR	1320274	ArgumentList	bin -> b		1320029	1					
ANR	1320275	Argument	bin -> b		1320029	0					
ANR	1320276	PtrMemberAccess	bin -> b		1320029	0					
ANR	1320277	Identifier	bin		1320029	0					
ANR	1320278	Identifier	b		1320029	1					
ANR	1320279	Argument	bin -> ehdr . e_shoff + i * sizeof ( Elf_ ( Shdr ) )		1320029	1					
ANR	1320280	AdditiveExpression	bin -> ehdr . e_shoff + i * sizeof ( Elf_ ( Shdr ) )		1320029	0		+			
ANR	1320281	MemberAccess	bin -> ehdr . e_shoff		1320029	0					
ANR	1320282	PtrMemberAccess	bin -> ehdr		1320029	0					
ANR	1320283	Identifier	bin		1320029	0					
ANR	1320284	Identifier	ehdr		1320029	1					
ANR	1320285	Identifier	e_shoff		1320029	1					
ANR	1320286	MultiplicativeExpression	i * sizeof ( Elf_ ( Shdr ) )		1320029	1		*			
ANR	1320287	Identifier	i		1320029	0					
ANR	1320288	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		1320029	1					
ANR	1320289	Sizeof	sizeof		1320029	0					
ANR	1320290	CallExpression	Elf_ ( Shdr )		1320029	1					
ANR	1320291	Callee	Elf_		1320029	0					
ANR	1320292	Identifier	Elf_		1320029	0					
ANR	1320293	ArgumentList	Shdr		1320029	1					
ANR	1320294	Argument	Shdr		1320029	0					
ANR	1320295	Identifier	Shdr		1320029	0					
ANR	1320296	Argument	shdr		1320029	2					
ANR	1320297	Identifier	shdr		1320029	0					
ANR	1320298	Argument	sizeof ( Elf_ ( Shdr ) )		1320029	3					
ANR	1320299	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		1320029	0					
ANR	1320300	Sizeof	sizeof		1320029	0					
ANR	1320301	CallExpression	Elf_ ( Shdr )		1320029	1					
ANR	1320302	Callee	Elf_		1320029	0					
ANR	1320303	Identifier	Elf_		1320029	0					
ANR	1320304	ArgumentList	Shdr		1320029	1					
ANR	1320305	Argument	Shdr		1320029	0					
ANR	1320306	Identifier	Shdr		1320029	0					
ANR	1320307	IfStatement	if ( len < 1 )		1320029	2					
ANR	1320308	Condition	len < 1	363:6:12827:12833	1320029	0	True				
ANR	1320309	RelationalExpression	len < 1		1320029	0		<			
ANR	1320310	Identifier	len		1320029	0					
ANR	1320311	PrimaryExpression	1		1320029	1					
ANR	1320312	CompoundStatement		37:15:1161:1161	1320029	1					
ANR	1320313	Statement	bprintf	364:3:12841:12847	1320029	0	True				
ANR	1320314	Statement	(	364:11:12849:12849	1320029	1	True				
ANR	1320315	Statement	"""read (shdr) at 0x%"""	364:12:12850:12869	1320029	2	True				
ANR	1320316	Statement	PFMT64x	364:33:12871:12877	1320029	3	True				
ANR	1320317	Statement	"""\\n"""	364:41:12879:12882	1320029	4	True				
ANR	1320318	Statement	","	364:45:12883:12883	1320029	5	True				
ANR	1320319	Statement	(	364:47:12885:12885	1320029	6	True				
ANR	1320320	Statement	ut64	364:48:12886:12889	1320029	7	True				
ANR	1320321	Statement	)	364:52:12890:12890	1320029	8	True				
ANR	1320322	Statement	bin	364:54:12892:12894	1320029	9	True				
ANR	1320323	Statement	->	364:57:12895:12896	1320029	10	True				
ANR	1320324	Statement	ehdr	364:59:12897:12900	1320029	11	True				
ANR	1320325	Statement	.	364:63:12901:12901	1320029	12	True				
ANR	1320326	Statement	e_shoff	364:64:12902:12908	1320029	13	True				
ANR	1320327	Statement	)	364:71:12909:12909	1320029	14	True				
ANR	1320328	ExpressionStatement		364:72:12910:12910	1320029	15	True				
ANR	1320329	ExpressionStatement	R_FREE ( bin -> shdr )	365:3:12915:12933	1320029	16	True				
ANR	1320330	CallExpression	R_FREE ( bin -> shdr )		1320029	0					
ANR	1320331	Callee	R_FREE		1320029	0					
ANR	1320332	Identifier	R_FREE		1320029	0					
ANR	1320333	ArgumentList	bin -> shdr		1320029	1					
ANR	1320334	Argument	bin -> shdr		1320029	0					
ANR	1320335	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320336	Identifier	bin		1320029	0					
ANR	1320337	Identifier	shdr		1320029	1					
ANR	1320338	ReturnStatement	return false ;	366:3:12938:12950	1320029	17	True				
ANR	1320339	Identifier	false		1320029	0					
ANR	1320340	ExpressionStatement	"bin -> shdr [ i ] . sh_name = READ32 ( shdr , j )"	368:2:12958:12997	1320029	3	True				
ANR	1320341	AssignmentExpression	"bin -> shdr [ i ] . sh_name = READ32 ( shdr , j )"		1320029	0		=			
ANR	1320342	MemberAccess	bin -> shdr [ i ] . sh_name		1320029	0					
ANR	1320343	ArrayIndexing	bin -> shdr [ i ]		1320029	0					
ANR	1320344	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320345	Identifier	bin		1320029	0					
ANR	1320346	Identifier	shdr		1320029	1					
ANR	1320347	Identifier	i		1320029	1					
ANR	1320348	Identifier	sh_name		1320029	1					
ANR	1320349	CallExpression	"READ32 ( shdr , j )"		1320029	1					
ANR	1320350	Callee	READ32		1320029	0					
ANR	1320351	Identifier	READ32		1320029	0					
ANR	1320352	ArgumentList	shdr		1320029	1					
ANR	1320353	Argument	shdr		1320029	0					
ANR	1320354	Identifier	shdr		1320029	0					
ANR	1320355	Argument	j		1320029	1					
ANR	1320356	Identifier	j		1320029	0					
ANR	1320357	ExpressionStatement	"bin -> shdr [ i ] . sh_type = READ32 ( shdr , j )"	369:2:13001:13040	1320029	4	True				
ANR	1320358	AssignmentExpression	"bin -> shdr [ i ] . sh_type = READ32 ( shdr , j )"		1320029	0		=			
ANR	1320359	MemberAccess	bin -> shdr [ i ] . sh_type		1320029	0					
ANR	1320360	ArrayIndexing	bin -> shdr [ i ]		1320029	0					
ANR	1320361	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320362	Identifier	bin		1320029	0					
ANR	1320363	Identifier	shdr		1320029	1					
ANR	1320364	Identifier	i		1320029	1					
ANR	1320365	Identifier	sh_type		1320029	1					
ANR	1320366	CallExpression	"READ32 ( shdr , j )"		1320029	1					
ANR	1320367	Callee	READ32		1320029	0					
ANR	1320368	Identifier	READ32		1320029	0					
ANR	1320369	ArgumentList	shdr		1320029	1					
ANR	1320370	Argument	shdr		1320029	0					
ANR	1320371	Identifier	shdr		1320029	0					
ANR	1320372	Argument	j		1320029	1					
ANR	1320373	Identifier	j		1320029	0					
ANR	1320374	ExpressionStatement	"bin -> shdr [ i ] . sh_flags = READWORD ( shdr , j )"	370:2:13044:13086	1320029	5	True				
ANR	1320375	AssignmentExpression	"bin -> shdr [ i ] . sh_flags = READWORD ( shdr , j )"		1320029	0		=			
ANR	1320376	MemberAccess	bin -> shdr [ i ] . sh_flags		1320029	0					
ANR	1320377	ArrayIndexing	bin -> shdr [ i ]		1320029	0					
ANR	1320378	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320379	Identifier	bin		1320029	0					
ANR	1320380	Identifier	shdr		1320029	1					
ANR	1320381	Identifier	i		1320029	1					
ANR	1320382	Identifier	sh_flags		1320029	1					
ANR	1320383	CallExpression	"READWORD ( shdr , j )"		1320029	1					
ANR	1320384	Callee	READWORD		1320029	0					
ANR	1320385	Identifier	READWORD		1320029	0					
ANR	1320386	ArgumentList	shdr		1320029	1					
ANR	1320387	Argument	shdr		1320029	0					
ANR	1320388	Identifier	shdr		1320029	0					
ANR	1320389	Argument	j		1320029	1					
ANR	1320390	Identifier	j		1320029	0					
ANR	1320391	ExpressionStatement	"bin -> shdr [ i ] . sh_addr = READWORD ( shdr , j )"	371:2:13090:13131	1320029	6	True				
ANR	1320392	AssignmentExpression	"bin -> shdr [ i ] . sh_addr = READWORD ( shdr , j )"		1320029	0		=			
ANR	1320393	MemberAccess	bin -> shdr [ i ] . sh_addr		1320029	0					
ANR	1320394	ArrayIndexing	bin -> shdr [ i ]		1320029	0					
ANR	1320395	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320396	Identifier	bin		1320029	0					
ANR	1320397	Identifier	shdr		1320029	1					
ANR	1320398	Identifier	i		1320029	1					
ANR	1320399	Identifier	sh_addr		1320029	1					
ANR	1320400	CallExpression	"READWORD ( shdr , j )"		1320029	1					
ANR	1320401	Callee	READWORD		1320029	0					
ANR	1320402	Identifier	READWORD		1320029	0					
ANR	1320403	ArgumentList	shdr		1320029	1					
ANR	1320404	Argument	shdr		1320029	0					
ANR	1320405	Identifier	shdr		1320029	0					
ANR	1320406	Argument	j		1320029	1					
ANR	1320407	Identifier	j		1320029	0					
ANR	1320408	ExpressionStatement	"bin -> shdr [ i ] . sh_offset = READWORD ( shdr , j )"	372:2:13135:13178	1320029	7	True				
ANR	1320409	AssignmentExpression	"bin -> shdr [ i ] . sh_offset = READWORD ( shdr , j )"		1320029	0		=			
ANR	1320410	MemberAccess	bin -> shdr [ i ] . sh_offset		1320029	0					
ANR	1320411	ArrayIndexing	bin -> shdr [ i ]		1320029	0					
ANR	1320412	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320413	Identifier	bin		1320029	0					
ANR	1320414	Identifier	shdr		1320029	1					
ANR	1320415	Identifier	i		1320029	1					
ANR	1320416	Identifier	sh_offset		1320029	1					
ANR	1320417	CallExpression	"READWORD ( shdr , j )"		1320029	1					
ANR	1320418	Callee	READWORD		1320029	0					
ANR	1320419	Identifier	READWORD		1320029	0					
ANR	1320420	ArgumentList	shdr		1320029	1					
ANR	1320421	Argument	shdr		1320029	0					
ANR	1320422	Identifier	shdr		1320029	0					
ANR	1320423	Argument	j		1320029	1					
ANR	1320424	Identifier	j		1320029	0					
ANR	1320425	ExpressionStatement	"bin -> shdr [ i ] . sh_size = READWORD ( shdr , j )"	373:2:13182:13223	1320029	8	True				
ANR	1320426	AssignmentExpression	"bin -> shdr [ i ] . sh_size = READWORD ( shdr , j )"		1320029	0		=			
ANR	1320427	MemberAccess	bin -> shdr [ i ] . sh_size		1320029	0					
ANR	1320428	ArrayIndexing	bin -> shdr [ i ]		1320029	0					
ANR	1320429	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320430	Identifier	bin		1320029	0					
ANR	1320431	Identifier	shdr		1320029	1					
ANR	1320432	Identifier	i		1320029	1					
ANR	1320433	Identifier	sh_size		1320029	1					
ANR	1320434	CallExpression	"READWORD ( shdr , j )"		1320029	1					
ANR	1320435	Callee	READWORD		1320029	0					
ANR	1320436	Identifier	READWORD		1320029	0					
ANR	1320437	ArgumentList	shdr		1320029	1					
ANR	1320438	Argument	shdr		1320029	0					
ANR	1320439	Identifier	shdr		1320029	0					
ANR	1320440	Argument	j		1320029	1					
ANR	1320441	Identifier	j		1320029	0					
ANR	1320442	ExpressionStatement	"bin -> shdr [ i ] . sh_link = READ32 ( shdr , j )"	374:2:13227:13266	1320029	9	True				
ANR	1320443	AssignmentExpression	"bin -> shdr [ i ] . sh_link = READ32 ( shdr , j )"		1320029	0		=			
ANR	1320444	MemberAccess	bin -> shdr [ i ] . sh_link		1320029	0					
ANR	1320445	ArrayIndexing	bin -> shdr [ i ]		1320029	0					
ANR	1320446	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320447	Identifier	bin		1320029	0					
ANR	1320448	Identifier	shdr		1320029	1					
ANR	1320449	Identifier	i		1320029	1					
ANR	1320450	Identifier	sh_link		1320029	1					
ANR	1320451	CallExpression	"READ32 ( shdr , j )"		1320029	1					
ANR	1320452	Callee	READ32		1320029	0					
ANR	1320453	Identifier	READ32		1320029	0					
ANR	1320454	ArgumentList	shdr		1320029	1					
ANR	1320455	Argument	shdr		1320029	0					
ANR	1320456	Identifier	shdr		1320029	0					
ANR	1320457	Argument	j		1320029	1					
ANR	1320458	Identifier	j		1320029	0					
ANR	1320459	ExpressionStatement	"bin -> shdr [ i ] . sh_info = READ32 ( shdr , j )"	375:2:13270:13309	1320029	10	True				
ANR	1320460	AssignmentExpression	"bin -> shdr [ i ] . sh_info = READ32 ( shdr , j )"		1320029	0		=			
ANR	1320461	MemberAccess	bin -> shdr [ i ] . sh_info		1320029	0					
ANR	1320462	ArrayIndexing	bin -> shdr [ i ]		1320029	0					
ANR	1320463	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320464	Identifier	bin		1320029	0					
ANR	1320465	Identifier	shdr		1320029	1					
ANR	1320466	Identifier	i		1320029	1					
ANR	1320467	Identifier	sh_info		1320029	1					
ANR	1320468	CallExpression	"READ32 ( shdr , j )"		1320029	1					
ANR	1320469	Callee	READ32		1320029	0					
ANR	1320470	Identifier	READ32		1320029	0					
ANR	1320471	ArgumentList	shdr		1320029	1					
ANR	1320472	Argument	shdr		1320029	0					
ANR	1320473	Identifier	shdr		1320029	0					
ANR	1320474	Argument	j		1320029	1					
ANR	1320475	Identifier	j		1320029	0					
ANR	1320476	ExpressionStatement	"bin -> shdr [ i ] . sh_addralign = READWORD ( shdr , j )"	376:2:13313:13359	1320029	11	True				
ANR	1320477	AssignmentExpression	"bin -> shdr [ i ] . sh_addralign = READWORD ( shdr , j )"		1320029	0		=			
ANR	1320478	MemberAccess	bin -> shdr [ i ] . sh_addralign		1320029	0					
ANR	1320479	ArrayIndexing	bin -> shdr [ i ]		1320029	0					
ANR	1320480	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320481	Identifier	bin		1320029	0					
ANR	1320482	Identifier	shdr		1320029	1					
ANR	1320483	Identifier	i		1320029	1					
ANR	1320484	Identifier	sh_addralign		1320029	1					
ANR	1320485	CallExpression	"READWORD ( shdr , j )"		1320029	1					
ANR	1320486	Callee	READWORD		1320029	0					
ANR	1320487	Identifier	READWORD		1320029	0					
ANR	1320488	ArgumentList	shdr		1320029	1					
ANR	1320489	Argument	shdr		1320029	0					
ANR	1320490	Identifier	shdr		1320029	0					
ANR	1320491	Argument	j		1320029	1					
ANR	1320492	Identifier	j		1320029	0					
ANR	1320493	ExpressionStatement	"bin -> shdr [ i ] . sh_entsize = READWORD ( shdr , j )"	377:2:13363:13407	1320029	12	True				
ANR	1320494	AssignmentExpression	"bin -> shdr [ i ] . sh_entsize = READWORD ( shdr , j )"		1320029	0		=			
ANR	1320495	MemberAccess	bin -> shdr [ i ] . sh_entsize		1320029	0					
ANR	1320496	ArrayIndexing	bin -> shdr [ i ]		1320029	0					
ANR	1320497	PtrMemberAccess	bin -> shdr		1320029	0					
ANR	1320498	Identifier	bin		1320029	0					
ANR	1320499	Identifier	shdr		1320029	1					
ANR	1320500	Identifier	i		1320029	1					
ANR	1320501	Identifier	sh_entsize		1320029	1					
ANR	1320502	CallExpression	"READWORD ( shdr , j )"		1320029	1					
ANR	1320503	Callee	READWORD		1320029	0					
ANR	1320504	Identifier	READWORD		1320029	0					
ANR	1320505	ArgumentList	shdr		1320029	1					
ANR	1320506	Argument	shdr		1320029	0					
ANR	1320507	Identifier	shdr		1320029	0					
ANR	1320508	Argument	j		1320029	1					
ANR	1320509	Identifier	j		1320029	0					
ANR	1320510	Statement	sdb_set	381:1:13430:13436	1320029	29	True				
ANR	1320511	Statement	(	381:9:13438:13438	1320029	30	True				
ANR	1320512	Statement	bin	381:10:13439:13441	1320029	31	True				
ANR	1320513	Statement	->	381:13:13442:13443	1320029	32	True				
ANR	1320514	Statement	kv	381:15:13444:13445	1320029	33	True				
ANR	1320515	Statement	","	381:17:13446:13446	1320029	34	True				
ANR	1320516	Statement	"""elf_s_flags_64.cparse"""	381:19:13448:13470	1320029	35	True				
ANR	1320517	Statement	","	381:42:13471:13471	1320029	36	True				
ANR	1320518	Statement	"""enum elf_s_flags_64 {SF64_None=0,SF64_Exec=1,"""	381:44:13473:13519	1320029	37	True				
ANR	1320519	Statement	"""SF64_Alloc=2,SF64_Alloc_Exec=3,SF64_Write=4,SF64_Write_Exec=5,"""	382:3:13524:13587	1320029	38	True				
ANR	1320520	Statement	"""SF64_Write_Alloc=6,SF64_Write_Alloc_Exec=7};"""	383:3:13592:13637	1320029	39	True				
ANR	1320521	Statement	","	383:49:13638:13638	1320029	40	True				
ANR	1320522	Statement	0	383:51:13640:13640	1320029	41	True				
ANR	1320523	Statement	)	383:52:13641:13641	1320029	42	True				
ANR	1320524	ExpressionStatement		383:53:13642:13642	1320029	43	True				
ANR	1320525	Statement	sdb_set	384:1:13645:13651	1320029	44	True				
ANR	1320526	Statement	(	384:9:13653:13653	1320029	45	True				
ANR	1320527	Statement	bin	384:10:13654:13656	1320029	46	True				
ANR	1320528	Statement	->	384:13:13657:13658	1320029	47	True				
ANR	1320529	Statement	kv	384:15:13659:13660	1320029	48	True				
ANR	1320530	Statement	","	384:17:13661:13661	1320029	49	True				
ANR	1320531	Statement	"""elf_shdr.format"""	384:19:13663:13679	1320029	50	True				
ANR	1320532	Statement	","	384:36:13680:13680	1320029	51	True				
ANR	1320533	Statement	"""x[4]E[8]Eqqqxxqq name (elf_s_type)type"""	384:38:13682:13721	1320029	52	True				
ANR	1320534	Statement	""" (elf_s_flags_64)flags addr offset size link info addralign entsize"""	385:3:13726:13794	1320029	53	True				
ANR	1320535	Statement	","	385:72:13795:13795	1320029	54	True				
ANR	1320536	Statement	0	385:74:13797:13797	1320029	55	True				
ANR	1320537	Statement	)	385:75:13798:13798	1320029	56	True				
ANR	1320538	ExpressionStatement		385:76:13799:13799	1320029	57	True				
ANR	1320539	ReturnStatement	return true ;	393:1:14187:14198	1320029	58	True				
ANR	1320540	Identifier	true		1320029	0					
ANR	1320541	ReturnType	static int		1320029	1					
ANR	1320542	Identifier	init_shdr		1320029	2					
ANR	1320543	ParameterList	ELFOBJ * bin		1320029	3					
ANR	1320544	Parameter	ELFOBJ * bin	327:21:11661:11671	1320029	0	True				
ANR	1320545	ParameterType	ELFOBJ *		1320029	0					
ANR	1320546	Identifier	bin		1320029	1					
ANR	1320547	CFGEntryNode	ENTRY		1320029		True				
ANR	1320548	CFGExitNode	EXIT		1320029		True				
ANR	1320549	Symbol	bin -> ehdr . e_shnum		1320029						
ANR	1320550	Symbol	bin -> size		1320029						
ANR	1320551	Symbol	bin -> b		1320029						
ANR	1320552	Symbol	bin		1320029						
ANR	1320553	Symbol	* bin -> shdr		1320029						
ANR	1320554	Symbol	bin -> kv		1320029						
ANR	1320555	Symbol	* bin		1320029						
ANR	1320556	Symbol	len		1320029						
ANR	1320557	Symbol	bin -> shdr [ i ] . sh_flags		1320029						
ANR	1320558	Symbol	bin -> shdr [ i ] . sh_entsize		1320029						
ANR	1320559	Symbol	shdr		1320029						
ANR	1320560	Symbol	bin -> ehdr		1320029						
ANR	1320561	Symbol	R_NEWS0		1320029						
ANR	1320562	Symbol	* * bin		1320029						
ANR	1320563	Symbol	UT32_MUL		1320029						
ANR	1320564	Symbol	Elf_		1320029						
ANR	1320565	Symbol	READWORD		1320029						
ANR	1320566	Symbol	& shdr_size		1320029						
ANR	1320567	Symbol	Shdr		1320029						
ANR	1320568	Symbol	bin -> shdr [ i ] . sh_size		1320029						
ANR	1320569	Symbol	false		1320029						
ANR	1320570	Symbol	i		1320029						
ANR	1320571	Symbol	j		1320029						
ANR	1320572	Symbol	bin -> shdr [ i ] . sh_name		1320029						
ANR	1320573	Symbol	READ32		1320029						
ANR	1320574	Symbol	bin -> shdr		1320029						
ANR	1320575	Symbol	bin -> shdr [ i ] . sh_addr		1320029						
ANR	1320576	Symbol	bin -> shdr [ i ] . sh_info		1320029						
ANR	1320577	Symbol	bin -> shdr [ i ] . sh_offset		1320029						
ANR	1320578	Symbol	bin -> shdr [ i ] . sh_addralign		1320029						
ANR	1320579	Symbol	* i		1320029						
ANR	1320580	Symbol	r_buf_read_at		1320029						
ANR	1320581	Symbol	true		1320029						
ANR	1320582	Symbol	bin -> ehdr . e_shoff		1320029						
ANR	1320583	Symbol	bin -> shdr [ i ] . sh_type		1320029						
ANR	1320584	Symbol	shdr_size		1320029						
ANR	1320585	Symbol	bin -> shdr [ i ] . sh_link		1320029						
ANR	1320586	Function	init_strtab	403:0:14550:16014							
ANR	1320587	FunctionDef	init_strtab (ELFOBJ * bin)		1320586	0					
ANR	1320588	CompoundStatement		403:36:14586:16014	1320586	0					
ANR	1320589	ExpressionStatement	"r_return_val_if_fail ( ! bin -> strtab , false )"	404:1:14589:14631	1320586	0	True				
ANR	1320590	CallExpression	"r_return_val_if_fail ( ! bin -> strtab , false )"		1320586	0					
ANR	1320591	Callee	r_return_val_if_fail		1320586	0					
ANR	1320592	Identifier	r_return_val_if_fail		1320586	0					
ANR	1320593	ArgumentList	! bin -> strtab		1320586	1					
ANR	1320594	Argument	! bin -> strtab		1320586	0					
ANR	1320595	UnaryOperationExpression	! bin -> strtab		1320586	0					
ANR	1320596	UnaryOperator	!		1320586	0					
ANR	1320597	PtrMemberAccess	bin -> strtab		1320586	1					
ANR	1320598	Identifier	bin		1320586	0					
ANR	1320599	Identifier	strtab		1320586	1					
ANR	1320600	Argument	false		1320586	1					
ANR	1320601	Identifier	false		1320586	0					
ANR	1320602	IfStatement	if ( ! bin -> shdr )		1320586	1					
ANR	1320603	Condition	! bin -> shdr	406:5:14639:14648	1320586	0	True				
ANR	1320604	UnaryOperationExpression	! bin -> shdr		1320586	0					
ANR	1320605	UnaryOperator	!		1320586	0					
ANR	1320606	PtrMemberAccess	bin -> shdr		1320586	1					
ANR	1320607	Identifier	bin		1320586	0					
ANR	1320608	Identifier	shdr		1320586	1					
ANR	1320609	CompoundStatement		4:17:64:64	1320586	1					
ANR	1320610	ReturnStatement	return false ;	407:2:14655:14667	1320586	0	True				
ANR	1320611	Identifier	false		1320586	0					
ANR	1320612	Statement	Elf_	410:1:14674:14677	1320586	2	True				
ANR	1320613	ExpressionStatement	( Half ) shstrndx = bin -> ehdr . e_shstrndx	410:5:14678:14716	1320586	3	True				
ANR	1320614	AssignmentExpression	( Half ) shstrndx = bin -> ehdr . e_shstrndx		1320586	0		=			
ANR	1320615	CastExpression	( Half ) shstrndx		1320586	0					
ANR	1320616	CastTarget	Half		1320586	0					
ANR	1320617	Identifier	shstrndx		1320586	1					
ANR	1320618	MemberAccess	bin -> ehdr . e_shstrndx		1320586	1					
ANR	1320619	PtrMemberAccess	bin -> ehdr		1320586	0					
ANR	1320620	Identifier	bin		1320586	0					
ANR	1320621	Identifier	ehdr		1320586	1					
ANR	1320622	Identifier	e_shstrndx		1320586	1					
ANR	1320623	IfStatement	"if ( shstrndx != SHN_UNDEF && ! is_shidx_valid ( bin , shstrndx ) )"		1320586	4					
ANR	1320624	Condition	"shstrndx != SHN_UNDEF && ! is_shidx_valid ( bin , shstrndx )"	411:5:14723:14778	1320586	0	True				
ANR	1320625	AndExpression	"shstrndx != SHN_UNDEF && ! is_shidx_valid ( bin , shstrndx )"		1320586	0		&&			
ANR	1320626	EqualityExpression	shstrndx != SHN_UNDEF		1320586	0		!=			
ANR	1320627	Identifier	shstrndx		1320586	0					
ANR	1320628	Identifier	SHN_UNDEF		1320586	1					
ANR	1320629	UnaryOperationExpression	"! is_shidx_valid ( bin , shstrndx )"		1320586	1					
ANR	1320630	UnaryOperator	!		1320586	0					
ANR	1320631	CallExpression	"is_shidx_valid ( bin , shstrndx )"		1320586	1					
ANR	1320632	Callee	is_shidx_valid		1320586	0					
ANR	1320633	Identifier	is_shidx_valid		1320586	0					
ANR	1320634	ArgumentList	bin		1320586	1					
ANR	1320635	Argument	bin		1320586	0					
ANR	1320636	Identifier	bin		1320586	0					
ANR	1320637	Argument	shstrndx		1320586	1					
ANR	1320638	Identifier	shstrndx		1320586	0					
ANR	1320639	CompoundStatement		9:63:194:194	1320586	1					
ANR	1320640	ReturnStatement	return false ;	412:2:14785:14797	1320586	0	True				
ANR	1320641	Identifier	false		1320586	0					
ANR	1320642	IfStatement	if ( bin -> shdr [ shstrndx ] . sh_size > UT32_MAX )		1320586	5					
ANR	1320643	Condition	bin -> shdr [ shstrndx ] . sh_size > UT32_MAX	416:5:14900:14937	1320586	0	True				
ANR	1320644	RelationalExpression	bin -> shdr [ shstrndx ] . sh_size > UT32_MAX		1320586	0		>			
ANR	1320645	MemberAccess	bin -> shdr [ shstrndx ] . sh_size		1320586	0					
ANR	1320646	ArrayIndexing	bin -> shdr [ shstrndx ]		1320586	0					
ANR	1320647	PtrMemberAccess	bin -> shdr		1320586	0					
ANR	1320648	Identifier	bin		1320586	0					
ANR	1320649	Identifier	shdr		1320586	1					
ANR	1320650	Identifier	shstrndx		1320586	1					
ANR	1320651	Identifier	sh_size		1320586	1					
ANR	1320652	Identifier	UT32_MAX		1320586	1					
ANR	1320653	CompoundStatement		14:45:353:353	1320586	1					
ANR	1320654	ReturnStatement	return false ;	417:2:14944:14956	1320586	0	True				
ANR	1320655	Identifier	false		1320586	0					
ANR	1320656	IfStatement	if ( ! bin -> shdr [ shstrndx ] . sh_size )		1320586	6					
ANR	1320657	Condition	! bin -> shdr [ shstrndx ] . sh_size	419:5:14966:14993	1320586	0	True				
ANR	1320658	UnaryOperationExpression	! bin -> shdr [ shstrndx ] . sh_size		1320586	0					
ANR	1320659	UnaryOperator	!		1320586	0					
ANR	1320660	MemberAccess	bin -> shdr [ shstrndx ] . sh_size		1320586	1					
ANR	1320661	ArrayIndexing	bin -> shdr [ shstrndx ]		1320586	0					
ANR	1320662	PtrMemberAccess	bin -> shdr		1320586	0					
ANR	1320663	Identifier	bin		1320586	0					
ANR	1320664	Identifier	shdr		1320586	1					
ANR	1320665	Identifier	shstrndx		1320586	1					
ANR	1320666	Identifier	sh_size		1320586	1					
ANR	1320667	CompoundStatement		17:35:409:409	1320586	1					
ANR	1320668	ReturnStatement	return false ;	420:2:15000:15012	1320586	0	True				
ANR	1320669	Identifier	false		1320586	0					
ANR	1320670	ExpressionStatement	bin -> shstrtab_section = bin -> strtab_section = & bin -> shdr [ shstrndx ]	422:1:15018:15084	1320586	7	True				
ANR	1320671	AssignmentExpression	bin -> shstrtab_section = bin -> strtab_section = & bin -> shdr [ shstrndx ]		1320586	0		=			
ANR	1320672	PtrMemberAccess	bin -> shstrtab_section		1320586	0					
ANR	1320673	Identifier	bin		1320586	0					
ANR	1320674	Identifier	shstrtab_section		1320586	1					
ANR	1320675	AssignmentExpression	bin -> strtab_section = & bin -> shdr [ shstrndx ]		1320586	1		=			
ANR	1320676	PtrMemberAccess	bin -> strtab_section		1320586	0					
ANR	1320677	Identifier	bin		1320586	0					
ANR	1320678	Identifier	strtab_section		1320586	1					
ANR	1320679	UnaryOperationExpression	& bin -> shdr [ shstrndx ]		1320586	1					
ANR	1320680	UnaryOperator	&		1320586	0					
ANR	1320681	ArrayIndexing	bin -> shdr [ shstrndx ]		1320586	1					
ANR	1320682	PtrMemberAccess	bin -> shdr		1320586	0					
ANR	1320683	Identifier	bin		1320586	0					
ANR	1320684	Identifier	shdr		1320586	1					
ANR	1320685	Identifier	shstrndx		1320586	1					
ANR	1320686	ExpressionStatement	bin -> shstrtab_size = bin -> shstrtab_section -> sh_size	423:1:15087:15138	1320586	8	True				
ANR	1320687	AssignmentExpression	bin -> shstrtab_size = bin -> shstrtab_section -> sh_size		1320586	0		=			
ANR	1320688	PtrMemberAccess	bin -> shstrtab_size		1320586	0					
ANR	1320689	Identifier	bin		1320586	0					
ANR	1320690	Identifier	shstrtab_size		1320586	1					
ANR	1320691	PtrMemberAccess	bin -> shstrtab_section -> sh_size		1320586	1					
ANR	1320692	PtrMemberAccess	bin -> shstrtab_section		1320586	0					
ANR	1320693	Identifier	bin		1320586	0					
ANR	1320694	Identifier	shstrtab_section		1320586	1					
ANR	1320695	Identifier	sh_size		1320586	1					
ANR	1320696	IfStatement	if ( bin -> shstrtab_size > bin -> size )		1320586	9					
ANR	1320697	Condition	bin -> shstrtab_size > bin -> size	424:5:15145:15174	1320586	0	True				
ANR	1320698	RelationalExpression	bin -> shstrtab_size > bin -> size		1320586	0		>			
ANR	1320699	PtrMemberAccess	bin -> shstrtab_size		1320586	0					
ANR	1320700	Identifier	bin		1320586	0					
ANR	1320701	Identifier	shstrtab_size		1320586	1					
ANR	1320702	PtrMemberAccess	bin -> size		1320586	1					
ANR	1320703	Identifier	bin		1320586	0					
ANR	1320704	Identifier	size		1320586	1					
ANR	1320705	CompoundStatement		22:37:590:590	1320586	1					
ANR	1320706	ReturnStatement	return false ;	425:2:15181:15193	1320586	0	True				
ANR	1320707	Identifier	false		1320586	0					
ANR	1320708	IfStatement	if ( bin -> shstrtab_section -> sh_offset > bin -> size )		1320586	10					
ANR	1320709	Condition	bin -> shstrtab_section -> sh_offset > bin -> size	427:5:15203:15246	1320586	0	True				
ANR	1320710	RelationalExpression	bin -> shstrtab_section -> sh_offset > bin -> size		1320586	0		>			
ANR	1320711	PtrMemberAccess	bin -> shstrtab_section -> sh_offset		1320586	0					
ANR	1320712	PtrMemberAccess	bin -> shstrtab_section		1320586	0					
ANR	1320713	Identifier	bin		1320586	0					
ANR	1320714	Identifier	shstrtab_section		1320586	1					
ANR	1320715	Identifier	sh_offset		1320586	1					
ANR	1320716	PtrMemberAccess	bin -> size		1320586	1					
ANR	1320717	Identifier	bin		1320586	0					
ANR	1320718	Identifier	size		1320586	1					
ANR	1320719	CompoundStatement		25:51:662:662	1320586	1					
ANR	1320720	ReturnStatement	return false ;	428:2:15253:15265	1320586	0	True				
ANR	1320721	Identifier	false		1320586	0					
ANR	1320722	IfStatement	if ( bin -> shstrtab_section -> sh_offset + bin -> shstrtab_section -> sh_size > bin -> size )		1320586	11					
ANR	1320723	Condition	bin -> shstrtab_section -> sh_offset + bin -> shstrtab_section -> sh_size > bin -> size	430:5:15275:15351	1320586	0	True				
ANR	1320724	RelationalExpression	bin -> shstrtab_section -> sh_offset + bin -> shstrtab_section -> sh_size > bin -> size		1320586	0		>			
ANR	1320725	AdditiveExpression	bin -> shstrtab_section -> sh_offset + bin -> shstrtab_section -> sh_size		1320586	0		+			
ANR	1320726	PtrMemberAccess	bin -> shstrtab_section -> sh_offset		1320586	0					
ANR	1320727	PtrMemberAccess	bin -> shstrtab_section		1320586	0					
ANR	1320728	Identifier	bin		1320586	0					
ANR	1320729	Identifier	shstrtab_section		1320586	1					
ANR	1320730	Identifier	sh_offset		1320586	1					
ANR	1320731	PtrMemberAccess	bin -> shstrtab_section -> sh_size		1320586	1					
ANR	1320732	PtrMemberAccess	bin -> shstrtab_section		1320586	0					
ANR	1320733	Identifier	bin		1320586	0					
ANR	1320734	Identifier	shstrtab_section		1320586	1					
ANR	1320735	Identifier	sh_size		1320586	1					
ANR	1320736	PtrMemberAccess	bin -> size		1320586	1					
ANR	1320737	Identifier	bin		1320586	0					
ANR	1320738	Identifier	size		1320586	1					
ANR	1320739	CompoundStatement		28:84:767:767	1320586	1					
ANR	1320740	ReturnStatement	return false ;	431:2:15358:15370	1320586	0	True				
ANR	1320741	Identifier	false		1320586	0					
ANR	1320742	IfStatement	"if ( ! ( bin -> shstrtab = calloc ( 1 , bin -> shstrtab_size + 1 ) ) )"		1320586	12					
ANR	1320743	Condition	"! ( bin -> shstrtab = calloc ( 1 , bin -> shstrtab_size + 1 ) )"	434:5:15381:15433	1320586	0	True				
ANR	1320744	UnaryOperationExpression	"! ( bin -> shstrtab = calloc ( 1 , bin -> shstrtab_size + 1 ) )"		1320586	0					
ANR	1320745	UnaryOperator	!		1320586	0					
ANR	1320746	AssignmentExpression	"bin -> shstrtab = calloc ( 1 , bin -> shstrtab_size + 1 )"		1320586	1		=			
ANR	1320747	PtrMemberAccess	bin -> shstrtab		1320586	0					
ANR	1320748	Identifier	bin		1320586	0					
ANR	1320749	Identifier	shstrtab		1320586	1					
ANR	1320750	CallExpression	"calloc ( 1 , bin -> shstrtab_size + 1 )"		1320586	1					
ANR	1320751	Callee	calloc		1320586	0					
ANR	1320752	Identifier	calloc		1320586	0					
ANR	1320753	ArgumentList	1		1320586	1					
ANR	1320754	Argument	1		1320586	0					
ANR	1320755	PrimaryExpression	1		1320586	0					
ANR	1320756	Argument	bin -> shstrtab_size + 1		1320586	1					
ANR	1320757	AdditiveExpression	bin -> shstrtab_size + 1		1320586	0		+			
ANR	1320758	PtrMemberAccess	bin -> shstrtab_size		1320586	0					
ANR	1320759	Identifier	bin		1320586	0					
ANR	1320760	Identifier	shstrtab_size		1320586	1					
ANR	1320761	PrimaryExpression	1		1320586	1					
ANR	1320762	CompoundStatement		32:60:849:849	1320586	1					
ANR	1320763	ExpressionStatement	"perror ( ""malloc"" )"	435:2:15440:15457	1320586	0	True				
ANR	1320764	CallExpression	"perror ( ""malloc"" )"		1320586	0					
ANR	1320765	Callee	perror		1320586	0					
ANR	1320766	Identifier	perror		1320586	0					
ANR	1320767	ArgumentList	"""malloc"""		1320586	1					
ANR	1320768	Argument	"""malloc"""		1320586	0					
ANR	1320769	PrimaryExpression	"""malloc"""		1320586	0					
ANR	1320770	ExpressionStatement	bin -> shstrtab = NULL	436:2:15461:15481	1320586	1	True				
ANR	1320771	AssignmentExpression	bin -> shstrtab = NULL		1320586	0		=			
ANR	1320772	PtrMemberAccess	bin -> shstrtab		1320586	0					
ANR	1320773	Identifier	bin		1320586	0					
ANR	1320774	Identifier	shstrtab		1320586	1					
ANR	1320775	Identifier	NULL		1320586	1					
ANR	1320776	ReturnStatement	return false ;	437:2:15485:15497	1320586	2	True				
ANR	1320777	Identifier	false		1320586	0					
ANR	1320778	IdentifierDeclStatement	"int res = r_buf_read_at ( bin -> b , bin -> shstrtab_section -> sh_offset , ( ut8 * ) bin -> shstrtab , bin -> shstrtab_section -> sh_size ) ;"	439:1:15503:15624	1320586	13	True				
ANR	1320779	IdentifierDecl	"res = r_buf_read_at ( bin -> b , bin -> shstrtab_section -> sh_offset , ( ut8 * ) bin -> shstrtab , bin -> shstrtab_section -> sh_size )"		1320586	0					
ANR	1320780	IdentifierDeclType	int		1320586	0					
ANR	1320781	Identifier	res		1320586	1					
ANR	1320782	AssignmentExpression	"res = r_buf_read_at ( bin -> b , bin -> shstrtab_section -> sh_offset , ( ut8 * ) bin -> shstrtab , bin -> shstrtab_section -> sh_size )"		1320586	2		=			
ANR	1320783	Identifier	res		1320586	0					
ANR	1320784	CallExpression	"r_buf_read_at ( bin -> b , bin -> shstrtab_section -> sh_offset , ( ut8 * ) bin -> shstrtab , bin -> shstrtab_section -> sh_size )"		1320586	1					
ANR	1320785	Callee	r_buf_read_at		1320586	0					
ANR	1320786	Identifier	r_buf_read_at		1320586	0					
ANR	1320787	ArgumentList	bin -> b		1320586	1					
ANR	1320788	Argument	bin -> b		1320586	0					
ANR	1320789	PtrMemberAccess	bin -> b		1320586	0					
ANR	1320790	Identifier	bin		1320586	0					
ANR	1320791	Identifier	b		1320586	1					
ANR	1320792	Argument	bin -> shstrtab_section -> sh_offset		1320586	1					
ANR	1320793	PtrMemberAccess	bin -> shstrtab_section -> sh_offset		1320586	0					
ANR	1320794	PtrMemberAccess	bin -> shstrtab_section		1320586	0					
ANR	1320795	Identifier	bin		1320586	0					
ANR	1320796	Identifier	shstrtab_section		1320586	1					
ANR	1320797	Identifier	sh_offset		1320586	1					
ANR	1320798	Argument	( ut8 * ) bin -> shstrtab		1320586	2					
ANR	1320799	CastExpression	( ut8 * ) bin -> shstrtab		1320586	0					
ANR	1320800	CastTarget	ut8 *		1320586	0					
ANR	1320801	PtrMemberAccess	bin -> shstrtab		1320586	1					
ANR	1320802	Identifier	bin		1320586	0					
ANR	1320803	Identifier	shstrtab		1320586	1					
ANR	1320804	Argument	bin -> shstrtab_section -> sh_size		1320586	3					
ANR	1320805	PtrMemberAccess	bin -> shstrtab_section -> sh_size		1320586	0					
ANR	1320806	PtrMemberAccess	bin -> shstrtab_section		1320586	0					
ANR	1320807	Identifier	bin		1320586	0					
ANR	1320808	Identifier	shstrtab_section		1320586	1					
ANR	1320809	Identifier	sh_size		1320586	1					
ANR	1320810	IfStatement	if ( res < 1 )		1320586	14					
ANR	1320811	Condition	res < 1	441:5:15631:15637	1320586	0	True				
ANR	1320812	RelationalExpression	res < 1		1320586	0		<			
ANR	1320813	Identifier	res		1320586	0					
ANR	1320814	PrimaryExpression	1		1320586	1					
ANR	1320815	CompoundStatement		39:14:1053:1053	1320586	1					
ANR	1320816	Statement	bprintf	442:2:15644:15650	1320586	0	True				
ANR	1320817	Statement	(	442:10:15652:15652	1320586	1	True				
ANR	1320818	Statement	"""read (shstrtab) at 0x%"""	442:11:15653:15676	1320586	2	True				
ANR	1320819	Statement	PFMT64x	442:36:15678:15684	1320586	3	True				
ANR	1320820	Statement	"""\\n"""	442:44:15686:15689	1320586	4	True				
ANR	1320821	Statement	","	442:48:15690:15690	1320586	5	True				
ANR	1320822	Statement	(	442:50:15692:15692	1320586	6	True				
ANR	1320823	Statement	ut64	442:51:15693:15696	1320586	7	True				
ANR	1320824	Statement	)	442:55:15697:15697	1320586	8	True				
ANR	1320825	Statement	bin	442:57:15699:15701	1320586	9	True				
ANR	1320826	Statement	->	442:60:15702:15703	1320586	10	True				
ANR	1320827	Statement	shstrtab_section	442:62:15704:15719	1320586	11	True				
ANR	1320828	Statement	->	442:78:15720:15721	1320586	12	True				
ANR	1320829	Statement	sh_offset	442:80:15722:15730	1320586	13	True				
ANR	1320830	Statement	)	442:89:15731:15731	1320586	14	True				
ANR	1320831	ExpressionStatement		442:90:15732:15732	1320586	15	True				
ANR	1320832	ExpressionStatement	R_FREE ( bin -> shstrtab )	443:2:15736:15758	1320586	16	True				
ANR	1320833	CallExpression	R_FREE ( bin -> shstrtab )		1320586	0					
ANR	1320834	Callee	R_FREE		1320586	0					
ANR	1320835	Identifier	R_FREE		1320586	0					
ANR	1320836	ArgumentList	bin -> shstrtab		1320586	1					
ANR	1320837	Argument	bin -> shstrtab		1320586	0					
ANR	1320838	PtrMemberAccess	bin -> shstrtab		1320586	0					
ANR	1320839	Identifier	bin		1320586	0					
ANR	1320840	Identifier	shstrtab		1320586	1					
ANR	1320841	ReturnStatement	return false ;	444:2:15762:15774	1320586	17	True				
ANR	1320842	Identifier	false		1320586	0					
ANR	1320843	ExpressionStatement	bin -> shstrtab [ bin -> shstrtab_section -> sh_size ] = '\\0'	446:1:15780:15832	1320586	15	True				
ANR	1320844	AssignmentExpression	bin -> shstrtab [ bin -> shstrtab_section -> sh_size ] = '\\0'		1320586	0		=			
ANR	1320845	ArrayIndexing	bin -> shstrtab [ bin -> shstrtab_section -> sh_size ]		1320586	0					
ANR	1320846	PtrMemberAccess	bin -> shstrtab		1320586	0					
ANR	1320847	Identifier	bin		1320586	0					
ANR	1320848	Identifier	shstrtab		1320586	1					
ANR	1320849	PtrMemberAccess	bin -> shstrtab_section -> sh_size		1320586	1					
ANR	1320850	PtrMemberAccess	bin -> shstrtab_section		1320586	0					
ANR	1320851	Identifier	bin		1320586	0					
ANR	1320852	Identifier	shstrtab_section		1320586	1					
ANR	1320853	Identifier	sh_size		1320586	1					
ANR	1320854	PrimaryExpression	'\\0'		1320586	1					
ANR	1320855	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_shstrtab.offset"" , bin -> shstrtab_section -> sh_offset , 0 )"	448:1:15836:15917	1320586	16	True				
ANR	1320856	CallExpression	"sdb_num_set ( bin -> kv , ""elf_shstrtab.offset"" , bin -> shstrtab_section -> sh_offset , 0 )"		1320586	0					
ANR	1320857	Callee	sdb_num_set		1320586	0					
ANR	1320858	Identifier	sdb_num_set		1320586	0					
ANR	1320859	ArgumentList	bin -> kv		1320586	1					
ANR	1320860	Argument	bin -> kv		1320586	0					
ANR	1320861	PtrMemberAccess	bin -> kv		1320586	0					
ANR	1320862	Identifier	bin		1320586	0					
ANR	1320863	Identifier	kv		1320586	1					
ANR	1320864	Argument	"""elf_shstrtab.offset"""		1320586	1					
ANR	1320865	PrimaryExpression	"""elf_shstrtab.offset"""		1320586	0					
ANR	1320866	Argument	bin -> shstrtab_section -> sh_offset		1320586	2					
ANR	1320867	PtrMemberAccess	bin -> shstrtab_section -> sh_offset		1320586	0					
ANR	1320868	PtrMemberAccess	bin -> shstrtab_section		1320586	0					
ANR	1320869	Identifier	bin		1320586	0					
ANR	1320870	Identifier	shstrtab_section		1320586	1					
ANR	1320871	Identifier	sh_offset		1320586	1					
ANR	1320872	Argument	0		1320586	3					
ANR	1320873	PrimaryExpression	0		1320586	0					
ANR	1320874	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_shstrtab.size"" , bin -> shstrtab_section -> sh_size , 0 )"	449:1:15920:15997	1320586	17	True				
ANR	1320875	CallExpression	"sdb_num_set ( bin -> kv , ""elf_shstrtab.size"" , bin -> shstrtab_section -> sh_size , 0 )"		1320586	0					
ANR	1320876	Callee	sdb_num_set		1320586	0					
ANR	1320877	Identifier	sdb_num_set		1320586	0					
ANR	1320878	ArgumentList	bin -> kv		1320586	1					
ANR	1320879	Argument	bin -> kv		1320586	0					
ANR	1320880	PtrMemberAccess	bin -> kv		1320586	0					
ANR	1320881	Identifier	bin		1320586	0					
ANR	1320882	Identifier	kv		1320586	1					
ANR	1320883	Argument	"""elf_shstrtab.size"""		1320586	1					
ANR	1320884	PrimaryExpression	"""elf_shstrtab.size"""		1320586	0					
ANR	1320885	Argument	bin -> shstrtab_section -> sh_size		1320586	2					
ANR	1320886	PtrMemberAccess	bin -> shstrtab_section -> sh_size		1320586	0					
ANR	1320887	PtrMemberAccess	bin -> shstrtab_section		1320586	0					
ANR	1320888	Identifier	bin		1320586	0					
ANR	1320889	Identifier	shstrtab_section		1320586	1					
ANR	1320890	Identifier	sh_size		1320586	1					
ANR	1320891	Argument	0		1320586	3					
ANR	1320892	PrimaryExpression	0		1320586	0					
ANR	1320893	ReturnStatement	return true ;	451:1:16001:16012	1320586	18	True				
ANR	1320894	Identifier	true		1320586	0					
ANR	1320895	ReturnType	static int		1320586	1					
ANR	1320896	Identifier	init_strtab		1320586	2					
ANR	1320897	ParameterList	ELFOBJ * bin		1320586	3					
ANR	1320898	Parameter	ELFOBJ * bin	403:23:14573:14583	1320586	0	True				
ANR	1320899	ParameterType	ELFOBJ *		1320586	0					
ANR	1320900	Identifier	bin		1320586	1					
ANR	1320901	CFGEntryNode	ENTRY		1320586		True				
ANR	1320902	CFGExitNode	EXIT		1320586		True				
ANR	1320903	Symbol	UT32_MAX		1320586						
ANR	1320904	Symbol	bin -> shstrtab_section -> sh_size		1320586						
ANR	1320905	Symbol	bin -> size		1320586						
ANR	1320906	Symbol	shstrndx		1320586						
ANR	1320907	Symbol	bin -> b		1320586						
ANR	1320908	Symbol	* bin -> shstrtab_section -> sh_size		1320586						
ANR	1320909	Symbol	* * * bin		1320586						
ANR	1320910	Symbol	bin		1320586						
ANR	1320911	Symbol	bin -> shstrtab_size		1320586						
ANR	1320912	Symbol	bin -> shstrtab		1320586						
ANR	1320913	Symbol	* bin -> shdr		1320586						
ANR	1320914	Symbol	bin -> shdr [ shstrndx ] . sh_size		1320586						
ANR	1320915	Symbol	calloc		1320586						
ANR	1320916	Symbol	bin -> kv		1320586						
ANR	1320917	Symbol	* bin		1320586						
ANR	1320918	Symbol	bin -> shstrtab_section		1320586						
ANR	1320919	Symbol	bin -> ehdr . e_shstrndx		1320586						
ANR	1320920	Symbol	bin -> ehdr		1320586						
ANR	1320921	Symbol	* * bin -> shstrtab_section		1320586						
ANR	1320922	Symbol	* * bin		1320586						
ANR	1320923	Symbol	bin -> strtab		1320586						
ANR	1320924	Symbol	SHN_UNDEF		1320586						
ANR	1320925	Symbol	bin -> strtab_section		1320586						
ANR	1320926	Symbol	res		1320586						
ANR	1320927	Symbol	* shstrndx		1320586						
ANR	1320928	Symbol	NULL		1320586						
ANR	1320929	Symbol	* bin -> shstrtab_section		1320586						
ANR	1320930	Symbol	false		1320586						
ANR	1320931	Symbol	bin -> shstrtab_section -> sh_offset		1320586						
ANR	1320932	Symbol	bin -> shdr		1320586						
ANR	1320933	Symbol	r_buf_read_at		1320586						
ANR	1320934	Symbol	* bin -> shstrtab		1320586						
ANR	1320935	Symbol	true		1320586						
ANR	1320936	Symbol	is_shidx_valid		1320586						
ANR	1320937	Function	get_dynamic_segment	454:19:16036:16430							
ANR	1320938	FunctionDef	get_dynamic_segment (ELFOBJ * bin)		1320937	0					
ANR	1320939	CompoundStatement		454:52:16069:16430	1320937	0					
ANR	1320940	IdentifierDeclStatement	int i ;	455:1:16072:16077	1320937	0	True				
ANR	1320941	IdentifierDecl	i		1320937	0					
ANR	1320942	IdentifierDeclType	int		1320937	0					
ANR	1320943	Identifier	i		1320937	1					
ANR	1320944	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		1320937	1					
ANR	1320945	ForInit	i = 0 ;	456:6:16085:16090	1320937	0	True				
ANR	1320946	AssignmentExpression	i = 0		1320937	0		=			
ANR	1320947	Identifier	i		1320937	0					
ANR	1320948	PrimaryExpression	0		1320937	1					
ANR	1320949	Condition	i < bin -> ehdr . e_phnum	456:13:16092:16112	1320937	1	True				
ANR	1320950	RelationalExpression	i < bin -> ehdr . e_phnum		1320937	0		<			
ANR	1320951	Identifier	i		1320937	0					
ANR	1320952	MemberAccess	bin -> ehdr . e_phnum		1320937	1					
ANR	1320953	PtrMemberAccess	bin -> ehdr		1320937	0					
ANR	1320954	Identifier	bin		1320937	0					
ANR	1320955	Identifier	ehdr		1320937	1					
ANR	1320956	Identifier	e_phnum		1320937	1					
ANR	1320957	PostIncDecOperationExpression	i ++	456:36:16115:16117	1320937	2	True				
ANR	1320958	Identifier	i		1320937	0					
ANR	1320959	IncDec	++		1320937	1					
ANR	1320960	CompoundStatement		3:41:50:50	1320937	3					
ANR	1320961	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_DYNAMIC )		1320937	0					
ANR	1320962	Condition	bin -> phdr [ i ] . p_type == PT_DYNAMIC	457:6:16128:16160	1320937	0	True				
ANR	1320963	EqualityExpression	bin -> phdr [ i ] . p_type == PT_DYNAMIC		1320937	0		==			
ANR	1320964	MemberAccess	bin -> phdr [ i ] . p_type		1320937	0					
ANR	1320965	ArrayIndexing	bin -> phdr [ i ]		1320937	0					
ANR	1320966	PtrMemberAccess	bin -> phdr		1320937	0					
ANR	1320967	Identifier	bin		1320937	0					
ANR	1320968	Identifier	phdr		1320937	1					
ANR	1320969	Identifier	i		1320937	1					
ANR	1320970	Identifier	p_type		1320937	1					
ANR	1320971	Identifier	PT_DYNAMIC		1320937	1					
ANR	1320972	CompoundStatement		4:41:93:93	1320937	1					
ANR	1320973	IfStatement	if ( bin -> phdr [ i ] . p_filesz > bin -> size )		1320937	0					
ANR	1320974	Condition	bin -> phdr [ i ] . p_filesz > bin -> size	458:7:16172:16204	1320937	0	True				
ANR	1320975	RelationalExpression	bin -> phdr [ i ] . p_filesz > bin -> size		1320937	0		>			
ANR	1320976	MemberAccess	bin -> phdr [ i ] . p_filesz		1320937	0					
ANR	1320977	ArrayIndexing	bin -> phdr [ i ]		1320937	0					
ANR	1320978	PtrMemberAccess	bin -> phdr		1320937	0					
ANR	1320979	Identifier	bin		1320937	0					
ANR	1320980	Identifier	phdr		1320937	1					
ANR	1320981	Identifier	i		1320937	1					
ANR	1320982	Identifier	p_filesz		1320937	1					
ANR	1320983	PtrMemberAccess	bin -> size		1320937	1					
ANR	1320984	Identifier	bin		1320937	0					
ANR	1320985	Identifier	size		1320937	1					
ANR	1320986	CompoundStatement		5:42:137:137	1320937	1					
ANR	1320987	ReturnStatement	return NULL ;	459:4:16213:16224	1320937	0	True				
ANR	1320988	Identifier	NULL		1320937	0					
ANR	1320989	IfStatement	if ( bin -> phdr [ i ] . p_offset > bin -> size )		1320937	1					
ANR	1320990	Condition	bin -> phdr [ i ] . p_offset > bin -> size	461:7:16238:16270	1320937	0	True				
ANR	1320991	RelationalExpression	bin -> phdr [ i ] . p_offset > bin -> size		1320937	0		>			
ANR	1320992	MemberAccess	bin -> phdr [ i ] . p_offset		1320937	0					
ANR	1320993	ArrayIndexing	bin -> phdr [ i ]		1320937	0					
ANR	1320994	PtrMemberAccess	bin -> phdr		1320937	0					
ANR	1320995	Identifier	bin		1320937	0					
ANR	1320996	Identifier	phdr		1320937	1					
ANR	1320997	Identifier	i		1320937	1					
ANR	1320998	Identifier	p_offset		1320937	1					
ANR	1320999	PtrMemberAccess	bin -> size		1320937	1					
ANR	1321000	Identifier	bin		1320937	0					
ANR	1321001	Identifier	size		1320937	1					
ANR	1321002	CompoundStatement		8:42:203:203	1320937	1					
ANR	1321003	ReturnStatement	return NULL ;	462:4:16279:16290	1320937	0	True				
ANR	1321004	Identifier	NULL		1320937	0					
ANR	1321005	IfStatement	if ( bin -> phdr [ i ] . p_offset + sizeof ( Elf_ ( Dyn ) ) > bin -> size )		1320937	2					
ANR	1321006	Condition	bin -> phdr [ i ] . p_offset + sizeof ( Elf_ ( Dyn ) ) > bin -> size	464:7:16304:16357	1320937	0	True				
ANR	1321007	RelationalExpression	bin -> phdr [ i ] . p_offset + sizeof ( Elf_ ( Dyn ) ) > bin -> size		1320937	0		>			
ANR	1321008	AdditiveExpression	bin -> phdr [ i ] . p_offset + sizeof ( Elf_ ( Dyn ) )		1320937	0		+			
ANR	1321009	MemberAccess	bin -> phdr [ i ] . p_offset		1320937	0					
ANR	1321010	ArrayIndexing	bin -> phdr [ i ]		1320937	0					
ANR	1321011	PtrMemberAccess	bin -> phdr		1320937	0					
ANR	1321012	Identifier	bin		1320937	0					
ANR	1321013	Identifier	phdr		1320937	1					
ANR	1321014	Identifier	i		1320937	1					
ANR	1321015	Identifier	p_offset		1320937	1					
ANR	1321016	SizeofExpression	sizeof ( Elf_ ( Dyn ) )		1320937	1					
ANR	1321017	Sizeof	sizeof		1320937	0					
ANR	1321018	CallExpression	Elf_ ( Dyn )		1320937	1					
ANR	1321019	Callee	Elf_		1320937	0					
ANR	1321020	Identifier	Elf_		1320937	0					
ANR	1321021	ArgumentList	Dyn		1320937	1					
ANR	1321022	Argument	Dyn		1320937	0					
ANR	1321023	Identifier	Dyn		1320937	0					
ANR	1321024	PtrMemberAccess	bin -> size		1320937	1					
ANR	1321025	Identifier	bin		1320937	0					
ANR	1321026	Identifier	size		1320937	1					
ANR	1321027	CompoundStatement		11:63:290:290	1320937	1					
ANR	1321028	ReturnStatement	return NULL ;	465:4:16366:16377	1320937	0	True				
ANR	1321029	Identifier	NULL		1320937	0					
ANR	1321030	ReturnStatement	return & bin -> phdr [ i ] ;	467:3:16387:16407	1320937	3	True				
ANR	1321031	UnaryOperationExpression	& bin -> phdr [ i ]		1320937	0					
ANR	1321032	UnaryOperator	&		1320937	0					
ANR	1321033	ArrayIndexing	bin -> phdr [ i ]		1320937	1					
ANR	1321034	PtrMemberAccess	bin -> phdr		1320937	0					
ANR	1321035	Identifier	bin		1320937	0					
ANR	1321036	Identifier	phdr		1320937	1					
ANR	1321037	Identifier	i		1320937	1					
ANR	1321038	ReturnStatement	return NULL ;	470:1:16417:16428	1320937	2	True				
ANR	1321039	Identifier	NULL		1320937	0					
ANR	1321040	Identifier	get_dynamic_segment		1320937	1					
ANR	1321041	ParameterList	ELFOBJ * bin		1320937	2					
ANR	1321042	Parameter	ELFOBJ * bin	454:39:16056:16066	1320937	0	True				
ANR	1321043	ParameterType	ELFOBJ *		1320937	0					
ANR	1321044	Identifier	bin		1320937	1					
ANR	1321045	CFGEntryNode	ENTRY		1320937		True				
ANR	1321046	CFGExitNode	EXIT		1320937		True				
ANR	1321047	Symbol	Elf_		1320937						
ANR	1321048	Symbol	bin -> size		1320937						
ANR	1321049	Symbol	NULL		1320937						
ANR	1321050	Symbol	bin		1320937						
ANR	1321051	Symbol	i		1320937						
ANR	1321052	Symbol	bin -> phdr		1320937						
ANR	1321053	Symbol	bin -> ehdr . e_phnum		1320937						
ANR	1321054	Symbol	PT_DYNAMIC		1320937						
ANR	1321055	Symbol	* bin		1320937						
ANR	1321056	Symbol	* bin -> phdr		1320937						
ANR	1321057	Symbol	bin -> phdr [ i ] . p_filesz		1320937						
ANR	1321058	Symbol	bin -> phdr [ i ] . p_offset		1320937						
ANR	1321059	Symbol	* i		1320937						
ANR	1321060	Symbol	bin -> ehdr		1320937						
ANR	1321061	Symbol	Dyn		1320937						
ANR	1321062	Symbol	bin -> phdr [ i ] . p_type		1320937						
ANR	1321063	Symbol	* * bin		1320937						
ANR	1321064	DeclStmt									
ANR	1321065	Decl							int	int	r
ANR	1321066	DeclStmt									
ANR	1321067	Decl							int	int	res
ANR	1321068	DeclStmt									
ANR	1321069	Decl							ut8	ut8 [ sizeof ( Elf_ ( Dyn ) ) ]	sdyn
ANR	1321070	DeclStmt									
ANR	1321071	Decl							int	int	j
ANR	1321072	DeclStmt									
ANR	1321073	Decl							int	int	len
ANR	1321074	Function	init_dynamic_section	509:0:17391:19794							
ANR	1321075	FunctionDef	init_dynamic_section (ELFOBJ * bin)		1321074	0					
ANR	1321076	CompoundStatement		509:45:17436:19794	1321074	0					
ANR	1321077	ExpressionStatement	Elf_ ( Dyn ) * dyn = NULL	510:1:17439:17460	1321074	0	True				
ANR	1321078	AssignmentExpression	Elf_ ( Dyn ) * dyn = NULL		1321074	0		=			
ANR	1321079	MultiplicativeExpression	Elf_ ( Dyn ) * dyn		1321074	0		*			
ANR	1321080	CallExpression	Elf_ ( Dyn )		1321074	0					
ANR	1321081	Callee	Elf_		1321074	0					
ANR	1321082	Identifier	Elf_		1321074	0					
ANR	1321083	ArgumentList	Dyn		1321074	1					
ANR	1321084	Argument	Dyn		1321074	0					
ANR	1321085	Identifier	Dyn		1321074	0					
ANR	1321086	Identifier	dyn		1321074	1					
ANR	1321087	Identifier	NULL		1321074	1					
ANR	1321088	IdentifierDeclStatement	ut64 strtabaddr = 0 ;	511:1:17463:17482	1321074	1	True				
ANR	1321089	IdentifierDecl	strtabaddr = 0		1321074	0					
ANR	1321090	IdentifierDeclType	ut64		1321074	0					
ANR	1321091	Identifier	strtabaddr		1321074	1					
ANR	1321092	AssignmentExpression	strtabaddr = 0		1321074	2		=			
ANR	1321093	Identifier	strtabaddr		1321074	0					
ANR	1321094	PrimaryExpression	0		1321074	1					
ANR	1321095	IdentifierDeclStatement	char * strtab = NULL ;	512:1:17485:17504	1321074	2	True				
ANR	1321096	IdentifierDecl	* strtab = NULL		1321074	0					
ANR	1321097	IdentifierDeclType	char *		1321074	0					
ANR	1321098	Identifier	strtab		1321074	1					
ANR	1321099	AssignmentExpression	* strtab = NULL		1321074	2		=			
ANR	1321100	Identifier	NULL		1321074	0					
ANR	1321101	Identifier	NULL		1321074	1					
ANR	1321102	IdentifierDeclStatement	"size_t relentry = 0 , strsize = 0 ;"	513:1:17507:17539	1321074	3	True				
ANR	1321103	IdentifierDecl	relentry = 0		1321074	0					
ANR	1321104	IdentifierDeclType	size_t		1321074	0					
ANR	1321105	Identifier	relentry		1321074	1					
ANR	1321106	AssignmentExpression	relentry = 0		1321074	2		=			
ANR	1321107	Identifier	relentry		1321074	0					
ANR	1321108	PrimaryExpression	0		1321074	1					
ANR	1321109	IdentifierDecl	strsize = 0		1321074	1					
ANR	1321110	IdentifierDeclType	size_t		1321074	0					
ANR	1321111	Identifier	strsize		1321074	1					
ANR	1321112	AssignmentExpression	strsize = 0		1321074	2		=			
ANR	1321113	Identifier	strsize		1321074	0					
ANR	1321114	PrimaryExpression	0		1321074	1					
ANR	1321115	IdentifierDeclStatement	"int i , len , r ;"	514:1:17542:17555	1321074	4	True				
ANR	1321116	IdentifierDecl	i		1321074	0					
ANR	1321117	IdentifierDeclType	int		1321074	0					
ANR	1321118	Identifier	i		1321074	1					
ANR	1321119	IdentifierDecl	len		1321074	1					
ANR	1321120	IdentifierDeclType	int		1321074	0					
ANR	1321121	Identifier	len		1321074	1					
ANR	1321122	IdentifierDecl	r		1321074	2					
ANR	1321123	IdentifierDeclType	int		1321074	0					
ANR	1321124	Identifier	r		1321074	1					
ANR	1321125	IdentifierDeclStatement	ut8 sdyn [ sizeof ( Elf_ ( Dyn ) ) ] = { 0 } ;	515:1:17558:17594	1321074	5	True				
ANR	1321126	IdentifierDecl	sdyn [ sizeof ( Elf_ ( Dyn ) ) ] = { 0 }		1321074	0					
ANR	1321127	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Dyn ) ) ]		1321074	0					
ANR	1321128	Identifier	sdyn		1321074	1					
ANR	1321129	SizeofExpression	sizeof ( Elf_ ( Dyn ) )		1321074	2					
ANR	1321130	Sizeof	sizeof		1321074	0					
ANR	1321131	CallExpression	Elf_ ( Dyn )		1321074	1					
ANR	1321132	Callee	Elf_		1321074	0					
ANR	1321133	Identifier	Elf_		1321074	0					
ANR	1321134	ArgumentList	Dyn		1321074	1					
ANR	1321135	Argument	Dyn		1321074	0					
ANR	1321136	Identifier	Dyn		1321074	0					
ANR	1321137	AssignmentExpression	sdyn [ sizeof ( Elf_ ( Dyn ) ) ] = { 0 }		1321074	3		=			
ANR	1321138	Identifier	sdyn		1321074	0					
ANR	1321139	InitializerList	0		1321074	1					
ANR	1321140	PrimaryExpression	0		1321074	0					
ANR	1321141	IdentifierDeclStatement	"ut64 dyn_size = 0 , loaded_offset ;"	516:1:17597:17629	1321074	6	True				
ANR	1321142	IdentifierDecl	dyn_size = 0		1321074	0					
ANR	1321143	IdentifierDeclType	ut64		1321074	0					
ANR	1321144	Identifier	dyn_size		1321074	1					
ANR	1321145	AssignmentExpression	dyn_size = 0		1321074	2		=			
ANR	1321146	Identifier	dyn_size		1321074	0					
ANR	1321147	PrimaryExpression	0		1321074	1					
ANR	1321148	IdentifierDecl	loaded_offset		1321074	1					
ANR	1321149	IdentifierDeclType	ut64		1321074	0					
ANR	1321150	Identifier	loaded_offset		1321074	1					
ANR	1321151	ExpressionStatement	"r_return_val_if_fail ( bin , false )"	518:1:17633:17666	1321074	7	True				
ANR	1321152	CallExpression	"r_return_val_if_fail ( bin , false )"		1321074	0					
ANR	1321153	Callee	r_return_val_if_fail		1321074	0					
ANR	1321154	Identifier	r_return_val_if_fail		1321074	0					
ANR	1321155	ArgumentList	bin		1321074	1					
ANR	1321156	Argument	bin		1321074	0					
ANR	1321157	Identifier	bin		1321074	0					
ANR	1321158	Argument	false		1321074	1					
ANR	1321159	Identifier	false		1321074	0					
ANR	1321160	IfStatement	if ( ! bin -> phdr || ! bin -> ehdr . e_phnum )		1321074	8					
ANR	1321161	Condition	! bin -> phdr || ! bin -> ehdr . e_phnum	519:5:17673:17704	1321074	0	True				
ANR	1321162	OrExpression	! bin -> phdr || ! bin -> ehdr . e_phnum		1321074	0		||			
ANR	1321163	UnaryOperationExpression	! bin -> phdr		1321074	0					
ANR	1321164	UnaryOperator	!		1321074	0					
ANR	1321165	PtrMemberAccess	bin -> phdr		1321074	1					
ANR	1321166	Identifier	bin		1321074	0					
ANR	1321167	Identifier	phdr		1321074	1					
ANR	1321168	UnaryOperationExpression	! bin -> ehdr . e_phnum		1321074	1					
ANR	1321169	UnaryOperator	!		1321074	0					
ANR	1321170	MemberAccess	bin -> ehdr . e_phnum		1321074	1					
ANR	1321171	PtrMemberAccess	bin -> ehdr		1321074	0					
ANR	1321172	Identifier	bin		1321074	0					
ANR	1321173	Identifier	ehdr		1321074	1					
ANR	1321174	Identifier	e_phnum		1321074	1					
ANR	1321175	CompoundStatement		11:39:270:270	1321074	1					
ANR	1321176	ReturnStatement	return false ;	520:2:17711:17723	1321074	0	True				
ANR	1321177	Identifier	false		1321074	0					
ANR	1321178	ExpressionStatement	Elf_ ( Phdr ) * dyn_phdr = get_dynamic_segment ( bin )	523:1:17730:17778	1321074	9	True				
ANR	1321179	AssignmentExpression	Elf_ ( Phdr ) * dyn_phdr = get_dynamic_segment ( bin )		1321074	0		=			
ANR	1321180	MultiplicativeExpression	Elf_ ( Phdr ) * dyn_phdr		1321074	0		*			
ANR	1321181	CallExpression	Elf_ ( Phdr )		1321074	0					
ANR	1321182	Callee	Elf_		1321074	0					
ANR	1321183	Identifier	Elf_		1321074	0					
ANR	1321184	ArgumentList	Phdr		1321074	1					
ANR	1321185	Argument	Phdr		1321074	0					
ANR	1321186	Identifier	Phdr		1321074	0					
ANR	1321187	Identifier	dyn_phdr		1321074	1					
ANR	1321188	CallExpression	get_dynamic_segment ( bin )		1321074	1					
ANR	1321189	Callee	get_dynamic_segment		1321074	0					
ANR	1321190	Identifier	get_dynamic_segment		1321074	0					
ANR	1321191	ArgumentList	bin		1321074	1					
ANR	1321192	Argument	bin		1321074	0					
ANR	1321193	Identifier	bin		1321074	0					
ANR	1321194	IfStatement	if ( ! dyn_phdr )		1321074	10					
ANR	1321195	Condition	! dyn_phdr	524:5:17785:17793	1321074	0	True				
ANR	1321196	UnaryOperationExpression	! dyn_phdr		1321074	0					
ANR	1321197	UnaryOperator	!		1321074	0					
ANR	1321198	Identifier	dyn_phdr		1321074	1					
ANR	1321199	CompoundStatement		16:16:359:359	1321074	1					
ANR	1321200	ReturnStatement	return false ;	525:2:17800:17812	1321074	0	True				
ANR	1321201	Identifier	false		1321074	0					
ANR	1321202	ExpressionStatement	dyn_size = dyn_phdr -> p_filesz	527:1:17818:17847	1321074	11	True				
ANR	1321203	AssignmentExpression	dyn_size = dyn_phdr -> p_filesz		1321074	0		=			
ANR	1321204	Identifier	dyn_size		1321074	0					
ANR	1321205	PtrMemberAccess	dyn_phdr -> p_filesz		1321074	1					
ANR	1321206	Identifier	dyn_phdr		1321074	0					
ANR	1321207	Identifier	p_filesz		1321074	1					
ANR	1321208	IdentifierDeclStatement	"int entries = compute_dyn_entries ( bin , dyn_phdr , dyn_size ) ;"	529:1:17851:17910	1321074	12	True				
ANR	1321209	IdentifierDecl	"entries = compute_dyn_entries ( bin , dyn_phdr , dyn_size )"		1321074	0					
ANR	1321210	IdentifierDeclType	int		1321074	0					
ANR	1321211	Identifier	entries		1321074	1					
ANR	1321212	AssignmentExpression	"entries = compute_dyn_entries ( bin , dyn_phdr , dyn_size )"		1321074	2		=			
ANR	1321213	Identifier	entries		1321074	0					
ANR	1321214	CallExpression	"compute_dyn_entries ( bin , dyn_phdr , dyn_size )"		1321074	1					
ANR	1321215	Callee	compute_dyn_entries		1321074	0					
ANR	1321216	Identifier	compute_dyn_entries		1321074	0					
ANR	1321217	ArgumentList	bin		1321074	1					
ANR	1321218	Argument	bin		1321074	0					
ANR	1321219	Identifier	bin		1321074	0					
ANR	1321220	Argument	dyn_phdr		1321074	1					
ANR	1321221	Identifier	dyn_phdr		1321074	0					
ANR	1321222	Argument	dyn_size		1321074	2					
ANR	1321223	Identifier	dyn_size		1321074	0					
ANR	1321224	IfStatement	if ( entries < 0 )		1321074	13					
ANR	1321225	Condition	entries < 0	530:5:17917:17927	1321074	0	True				
ANR	1321226	RelationalExpression	entries < 0		1321074	0		<			
ANR	1321227	Identifier	entries		1321074	0					
ANR	1321228	PrimaryExpression	0		1321074	1					
ANR	1321229	CompoundStatement		22:18:493:493	1321074	1					
ANR	1321230	ReturnStatement	return false ;	531:2:17934:17946	1321074	0	True				
ANR	1321231	Identifier	false		1321074	0					
ANR	1321232	ExpressionStatement	"dyn = R_NEWS0 ( Elf_ ( Dyn ) , entries )"	534:1:17953:17987	1321074	14	True				
ANR	1321233	AssignmentExpression	"dyn = R_NEWS0 ( Elf_ ( Dyn ) , entries )"		1321074	0		=			
ANR	1321234	Identifier	dyn		1321074	0					
ANR	1321235	CallExpression	"R_NEWS0 ( Elf_ ( Dyn ) , entries )"		1321074	1					
ANR	1321236	Callee	R_NEWS0		1321074	0					
ANR	1321237	Identifier	R_NEWS0		1321074	0					
ANR	1321238	ArgumentList	Elf_ ( Dyn )		1321074	1					
ANR	1321239	Argument	Elf_ ( Dyn )		1321074	0					
ANR	1321240	CallExpression	Elf_ ( Dyn )		1321074	0					
ANR	1321241	Callee	Elf_		1321074	0					
ANR	1321242	Identifier	Elf_		1321074	0					
ANR	1321243	ArgumentList	Dyn		1321074	1					
ANR	1321244	Argument	Dyn		1321074	0					
ANR	1321245	Identifier	Dyn		1321074	0					
ANR	1321246	Argument	entries		1321074	1					
ANR	1321247	Identifier	entries		1321074	0					
ANR	1321248	IfStatement	if ( ! dyn )		1321074	15					
ANR	1321249	Condition	! dyn	535:5:17994:17997	1321074	0	True				
ANR	1321250	UnaryOperationExpression	! dyn		1321074	0					
ANR	1321251	UnaryOperator	!		1321074	0					
ANR	1321252	Identifier	dyn		1321074	1					
ANR	1321253	CompoundStatement		27:11:563:563	1321074	1					
ANR	1321254	ReturnStatement	return false ;	536:2:18004:18016	1321074	0	True				
ANR	1321255	Identifier	false		1321074	0					
ANR	1321256	IfStatement	"if ( ! UTX_MUL ( & dyn_size , entries , sizeof ( Elf_ ( Dyn ) ) ) )"		1321074	16					
ANR	1321257	Condition	"! UTX_MUL ( & dyn_size , entries , sizeof ( Elf_ ( Dyn ) ) )"	538:5:18026:18074	1321074	0	True				
ANR	1321258	UnaryOperationExpression	"! UTX_MUL ( & dyn_size , entries , sizeof ( Elf_ ( Dyn ) ) )"		1321074	0					
ANR	1321259	UnaryOperator	!		1321074	0					
ANR	1321260	CallExpression	"UTX_MUL ( & dyn_size , entries , sizeof ( Elf_ ( Dyn ) ) )"		1321074	1					
ANR	1321261	Callee	UTX_MUL		1321074	0					
ANR	1321262	Identifier	UTX_MUL		1321074	0					
ANR	1321263	ArgumentList	& dyn_size		1321074	1					
ANR	1321264	Argument	& dyn_size		1321074	0					
ANR	1321265	UnaryOperationExpression	& dyn_size		1321074	0					
ANR	1321266	UnaryOperator	&		1321074	0					
ANR	1321267	Identifier	dyn_size		1321074	1					
ANR	1321268	Argument	entries		1321074	1					
ANR	1321269	Identifier	entries		1321074	0					
ANR	1321270	Argument	sizeof ( Elf_ ( Dyn ) )		1321074	2					
ANR	1321271	SizeofExpression	sizeof ( Elf_ ( Dyn ) )		1321074	0					
ANR	1321272	Sizeof	sizeof		1321074	0					
ANR	1321273	CallExpression	Elf_ ( Dyn )		1321074	1					
ANR	1321274	Callee	Elf_		1321074	0					
ANR	1321275	Identifier	Elf_		1321074	0					
ANR	1321276	ArgumentList	Dyn		1321074	1					
ANR	1321277	Argument	Dyn		1321074	0					
ANR	1321278	Identifier	Dyn		1321074	0					
ANR	1321279	CompoundStatement		30:56:640:640	1321074	1					
ANR	1321280	GotoStatement	goto beach ;	539:2:18081:18091	1321074	0	True				
ANR	1321281	Identifier	beach		1321074	0					
ANR	1321282	ExpressionStatement	"loaded_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn_phdr -> p_vaddr )"	541:1:18097:18161	1321074	17	True				
ANR	1321283	AssignmentExpression	"loaded_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn_phdr -> p_vaddr )"		1321074	0		=			
ANR	1321284	Identifier	loaded_offset		1321074	0					
ANR	1321285	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn_phdr -> p_vaddr )"		1321074	1					
ANR	1321286	Callee	Elf_ ( r_bin_elf_v2p_new )		1321074	0					
ANR	1321287	CallExpression	Elf_ ( r_bin_elf_v2p_new )		1321074	0					
ANR	1321288	Callee	Elf_		1321074	0					
ANR	1321289	Identifier	Elf_		1321074	0					
ANR	1321290	ArgumentList	r_bin_elf_v2p_new		1321074	1					
ANR	1321291	Argument	r_bin_elf_v2p_new		1321074	0					
ANR	1321292	Identifier	r_bin_elf_v2p_new		1321074	0					
ANR	1321293	ArgumentList	bin		1321074	1					
ANR	1321294	Argument	bin		1321074	0					
ANR	1321295	Identifier	bin		1321074	0					
ANR	1321296	Argument	dyn_phdr -> p_vaddr		1321074	1					
ANR	1321297	PtrMemberAccess	dyn_phdr -> p_vaddr		1321074	0					
ANR	1321298	Identifier	dyn_phdr		1321074	0					
ANR	1321299	Identifier	p_vaddr		1321074	1					
ANR	1321300	IfStatement	if ( loaded_offset == UT64_MAX )		1321074	18					
ANR	1321301	Condition	loaded_offset == UT64_MAX	542:5:18168:18192	1321074	0	True				
ANR	1321302	EqualityExpression	loaded_offset == UT64_MAX		1321074	0		==			
ANR	1321303	Identifier	loaded_offset		1321074	0					
ANR	1321304	Identifier	UT64_MAX		1321074	1					
ANR	1321305	CompoundStatement		34:32:758:758	1321074	1					
ANR	1321306	GotoStatement	goto beach ;	543:2:18199:18209	1321074	0	True				
ANR	1321307	Identifier	beach		1321074	0					
ANR	1321308	IfStatement	if ( ! dyn_size || loaded_offset + dyn_size > bin -> size )		1321074	19					
ANR	1321309	Condition	! dyn_size || loaded_offset + dyn_size > bin -> size	546:5:18220:18268	1321074	0	True				
ANR	1321310	OrExpression	! dyn_size || loaded_offset + dyn_size > bin -> size		1321074	0		||			
ANR	1321311	UnaryOperationExpression	! dyn_size		1321074	0					
ANR	1321312	UnaryOperator	!		1321074	0					
ANR	1321313	Identifier	dyn_size		1321074	1					
ANR	1321314	RelationalExpression	loaded_offset + dyn_size > bin -> size		1321074	1		>			
ANR	1321315	AdditiveExpression	loaded_offset + dyn_size		1321074	0		+			
ANR	1321316	Identifier	loaded_offset		1321074	0					
ANR	1321317	Identifier	dyn_size		1321074	1					
ANR	1321318	PtrMemberAccess	bin -> size		1321074	1					
ANR	1321319	Identifier	bin		1321074	0					
ANR	1321320	Identifier	size		1321074	1					
ANR	1321321	CompoundStatement		38:56:834:834	1321074	1					
ANR	1321322	GotoStatement	goto beach ;	547:2:18275:18285	1321074	0	True				
ANR	1321323	Identifier	beach		1321074	0					
ANR	1321324	ForStatement	for ( i = 0 ; i < entries ; i ++ )		1321074	20					
ANR	1321325	ForInit	i = 0 ;	549:6:18296:18301	1321074	0	True				
ANR	1321326	AssignmentExpression	i = 0		1321074	0		=			
ANR	1321327	Identifier	i		1321074	0					
ANR	1321328	PrimaryExpression	0		1321074	1					
ANR	1321329	Condition	i < entries	549:13:18303:18313	1321074	1	True				
ANR	1321330	RelationalExpression	i < entries		1321074	0		<			
ANR	1321331	Identifier	i		1321074	0					
ANR	1321332	Identifier	entries		1321074	1					
ANR	1321333	PostIncDecOperationExpression	i ++	549:26:18316:18318	1321074	2	True				
ANR	1321334	Identifier	i		1321074	0					
ANR	1321335	IncDec	++		1321074	1					
ANR	1321336	CompoundStatement		42:2:888:897	1321074	3					
ANR	1321337	IdentifierDeclStatement	int j = 0 ;	550:2:18325:18334	1321074	0	True				
ANR	1321338	IdentifierDecl	j = 0		1321074	0					
ANR	1321339	IdentifierDeclType	int		1321074	0					
ANR	1321340	Identifier	j		1321074	1					
ANR	1321341	AssignmentExpression	j = 0		1321074	2		=			
ANR	1321342	Identifier	j		1321074	0					
ANR	1321343	PrimaryExpression	0		1321074	1					
ANR	1321344	ExpressionStatement	"len = r_buf_read_at ( bin -> b , loaded_offset + i * sizeof ( Elf_ ( Dyn ) ) , sdyn , sizeof ( Elf_ ( Dyn ) ) )"	551:2:18338:18432	1321074	1	True				
ANR	1321345	AssignmentExpression	"len = r_buf_read_at ( bin -> b , loaded_offset + i * sizeof ( Elf_ ( Dyn ) ) , sdyn , sizeof ( Elf_ ( Dyn ) ) )"		1321074	0		=			
ANR	1321346	Identifier	len		1321074	0					
ANR	1321347	CallExpression	"r_buf_read_at ( bin -> b , loaded_offset + i * sizeof ( Elf_ ( Dyn ) ) , sdyn , sizeof ( Elf_ ( Dyn ) ) )"		1321074	1					
ANR	1321348	Callee	r_buf_read_at		1321074	0					
ANR	1321349	Identifier	r_buf_read_at		1321074	0					
ANR	1321350	ArgumentList	bin -> b		1321074	1					
ANR	1321351	Argument	bin -> b		1321074	0					
ANR	1321352	PtrMemberAccess	bin -> b		1321074	0					
ANR	1321353	Identifier	bin		1321074	0					
ANR	1321354	Identifier	b		1321074	1					
ANR	1321355	Argument	loaded_offset + i * sizeof ( Elf_ ( Dyn ) )		1321074	1					
ANR	1321356	AdditiveExpression	loaded_offset + i * sizeof ( Elf_ ( Dyn ) )		1321074	0		+			
ANR	1321357	Identifier	loaded_offset		1321074	0					
ANR	1321358	MultiplicativeExpression	i * sizeof ( Elf_ ( Dyn ) )		1321074	1		*			
ANR	1321359	Identifier	i		1321074	0					
ANR	1321360	SizeofExpression	sizeof ( Elf_ ( Dyn ) )		1321074	1					
ANR	1321361	Sizeof	sizeof		1321074	0					
ANR	1321362	CallExpression	Elf_ ( Dyn )		1321074	1					
ANR	1321363	Callee	Elf_		1321074	0					
ANR	1321364	Identifier	Elf_		1321074	0					
ANR	1321365	ArgumentList	Dyn		1321074	1					
ANR	1321366	Argument	Dyn		1321074	0					
ANR	1321367	Identifier	Dyn		1321074	0					
ANR	1321368	Argument	sdyn		1321074	2					
ANR	1321369	Identifier	sdyn		1321074	0					
ANR	1321370	Argument	sizeof ( Elf_ ( Dyn ) )		1321074	3					
ANR	1321371	SizeofExpression	sizeof ( Elf_ ( Dyn ) )		1321074	0					
ANR	1321372	Sizeof	sizeof		1321074	0					
ANR	1321373	CallExpression	Elf_ ( Dyn )		1321074	1					
ANR	1321374	Callee	Elf_		1321074	0					
ANR	1321375	Identifier	Elf_		1321074	0					
ANR	1321376	ArgumentList	Dyn		1321074	1					
ANR	1321377	Argument	Dyn		1321074	0					
ANR	1321378	Identifier	Dyn		1321074	0					
ANR	1321379	IfStatement	if ( len < 1 )		1321074	2					
ANR	1321380	Condition	len < 1	552:6:18440:18446	1321074	0	True				
ANR	1321381	RelationalExpression	len < 1		1321074	0		<			
ANR	1321382	Identifier	len		1321074	0					
ANR	1321383	PrimaryExpression	1		1321074	1					
ANR	1321384	CompoundStatement		44:15:1012:1012	1321074	1					
ANR	1321385	ExpressionStatement	"bprintf ( ""read (dyn)\\n"" )"	553:3:18454:18478	1321074	0	True				
ANR	1321386	CallExpression	"bprintf ( ""read (dyn)\\n"" )"		1321074	0					
ANR	1321387	Callee	bprintf		1321074	0					
ANR	1321388	Identifier	bprintf		1321074	0					
ANR	1321389	ArgumentList	"""read (dyn)\\n"""		1321074	1					
ANR	1321390	Argument	"""read (dyn)\\n"""		1321074	0					
ANR	1321391	PrimaryExpression	"""read (dyn)\\n"""		1321074	0					
ANR	1321392	GotoStatement	goto beach ;	554:3:18483:18493	1321074	1	True				
ANR	1321393	Identifier	beach		1321074	0					
ANR	1321394	ExpressionStatement	"dyn [ i ] . d_tag = READWORD ( sdyn , j )"	556:2:18501:18534	1321074	3	True				
ANR	1321395	AssignmentExpression	"dyn [ i ] . d_tag = READWORD ( sdyn , j )"		1321074	0		=			
ANR	1321396	MemberAccess	dyn [ i ] . d_tag		1321074	0					
ANR	1321397	ArrayIndexing	dyn [ i ]		1321074	0					
ANR	1321398	Identifier	dyn		1321074	0					
ANR	1321399	Identifier	i		1321074	1					
ANR	1321400	Identifier	d_tag		1321074	1					
ANR	1321401	CallExpression	"READWORD ( sdyn , j )"		1321074	1					
ANR	1321402	Callee	READWORD		1321074	0					
ANR	1321403	Identifier	READWORD		1321074	0					
ANR	1321404	ArgumentList	sdyn		1321074	1					
ANR	1321405	Argument	sdyn		1321074	0					
ANR	1321406	Identifier	sdyn		1321074	0					
ANR	1321407	Argument	j		1321074	1					
ANR	1321408	Identifier	j		1321074	0					
ANR	1321409	ExpressionStatement	"dyn [ i ] . d_un . d_ptr = READWORD ( sdyn , j )"	557:2:18538:18576	1321074	4	True				
ANR	1321410	AssignmentExpression	"dyn [ i ] . d_un . d_ptr = READWORD ( sdyn , j )"		1321074	0		=			
ANR	1321411	MemberAccess	dyn [ i ] . d_un . d_ptr		1321074	0					
ANR	1321412	MemberAccess	dyn [ i ] . d_un		1321074	0					
ANR	1321413	ArrayIndexing	dyn [ i ]		1321074	0					
ANR	1321414	Identifier	dyn		1321074	0					
ANR	1321415	Identifier	i		1321074	1					
ANR	1321416	Identifier	d_un		1321074	1					
ANR	1321417	Identifier	d_ptr		1321074	1					
ANR	1321418	CallExpression	"READWORD ( sdyn , j )"		1321074	1					
ANR	1321419	Callee	READWORD		1321074	0					
ANR	1321420	Identifier	READWORD		1321074	0					
ANR	1321421	ArgumentList	sdyn		1321074	1					
ANR	1321422	Argument	sdyn		1321074	0					
ANR	1321423	Identifier	sdyn		1321074	0					
ANR	1321424	Argument	j		1321074	1					
ANR	1321425	Identifier	j		1321074	0					
ANR	1321426	SwitchStatement	switch ( dyn [ i ] . d_tag )		1321074	5					
ANR	1321427	Condition	dyn [ i ] . d_tag	559:10:18589:18600	1321074	0	True				
ANR	1321428	MemberAccess	dyn [ i ] . d_tag		1321074	0					
ANR	1321429	ArrayIndexing	dyn [ i ]		1321074	0					
ANR	1321430	Identifier	dyn		1321074	0					
ANR	1321431	Identifier	i		1321074	1					
ANR	1321432	Identifier	d_tag		1321074	1					
ANR	1321433	CompoundStatement		51:24:1166:1166	1321074	1					
ANR	1321434	Label	case DT_STRTAB :	560:2:18607:18621	1321074	0	True				
ANR	1321435	Identifier	DT_STRTAB		1321074	0					
ANR	1321436	ExpressionStatement	"strtabaddr = Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn [ i ] . d_un . d_ptr )"	561:3:18626:18687	1321074	1	True				
ANR	1321437	AssignmentExpression	"strtabaddr = Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn [ i ] . d_un . d_ptr )"		1321074	0		=			
ANR	1321438	Identifier	strtabaddr		1321074	0					
ANR	1321439	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn [ i ] . d_un . d_ptr )"		1321074	1					
ANR	1321440	Callee	Elf_ ( r_bin_elf_v2p_new )		1321074	0					
ANR	1321441	CallExpression	Elf_ ( r_bin_elf_v2p_new )		1321074	0					
ANR	1321442	Callee	Elf_		1321074	0					
ANR	1321443	Identifier	Elf_		1321074	0					
ANR	1321444	ArgumentList	r_bin_elf_v2p_new		1321074	1					
ANR	1321445	Argument	r_bin_elf_v2p_new		1321074	0					
ANR	1321446	Identifier	r_bin_elf_v2p_new		1321074	0					
ANR	1321447	ArgumentList	bin		1321074	1					
ANR	1321448	Argument	bin		1321074	0					
ANR	1321449	Identifier	bin		1321074	0					
ANR	1321450	Argument	dyn [ i ] . d_un . d_ptr		1321074	1					
ANR	1321451	MemberAccess	dyn [ i ] . d_un . d_ptr		1321074	0					
ANR	1321452	MemberAccess	dyn [ i ] . d_un		1321074	0					
ANR	1321453	ArrayIndexing	dyn [ i ]		1321074	0					
ANR	1321454	Identifier	dyn		1321074	0					
ANR	1321455	Identifier	i		1321074	1					
ANR	1321456	Identifier	d_un		1321074	1					
ANR	1321457	Identifier	d_ptr		1321074	1					
ANR	1321458	BreakStatement	break ;	562:3:18692:18697	1321074	2	True				
ANR	1321459	Label	case DT_STRSZ :	563:2:18701:18714	1321074	3	True				
ANR	1321460	Identifier	DT_STRSZ		1321074	0					
ANR	1321461	ExpressionStatement	strsize = dyn [ i ] . d_un . d_val	564:3:18719:18746	1321074	4	True				
ANR	1321462	AssignmentExpression	strsize = dyn [ i ] . d_un . d_val		1321074	0		=			
ANR	1321463	Identifier	strsize		1321074	0					
ANR	1321464	MemberAccess	dyn [ i ] . d_un . d_val		1321074	1					
ANR	1321465	MemberAccess	dyn [ i ] . d_un		1321074	0					
ANR	1321466	ArrayIndexing	dyn [ i ]		1321074	0					
ANR	1321467	Identifier	dyn		1321074	0					
ANR	1321468	Identifier	i		1321074	1					
ANR	1321469	Identifier	d_un		1321074	1					
ANR	1321470	Identifier	d_val		1321074	1					
ANR	1321471	BreakStatement	break ;	565:3:18751:18756	1321074	5	True				
ANR	1321472	Label	case DT_PLTREL :	566:2:18760:18774	1321074	6	True				
ANR	1321473	Identifier	DT_PLTREL		1321074	0					
ANR	1321474	ExpressionStatement	bin -> is_rela = dyn [ i ] . d_un . d_val	567:3:18779:18811	1321074	7	True				
ANR	1321475	AssignmentExpression	bin -> is_rela = dyn [ i ] . d_un . d_val		1321074	0		=			
ANR	1321476	PtrMemberAccess	bin -> is_rela		1321074	0					
ANR	1321477	Identifier	bin		1321074	0					
ANR	1321478	Identifier	is_rela		1321074	1					
ANR	1321479	MemberAccess	dyn [ i ] . d_un . d_val		1321074	1					
ANR	1321480	MemberAccess	dyn [ i ] . d_un		1321074	0					
ANR	1321481	ArrayIndexing	dyn [ i ]		1321074	0					
ANR	1321482	Identifier	dyn		1321074	0					
ANR	1321483	Identifier	i		1321074	1					
ANR	1321484	Identifier	d_un		1321074	1					
ANR	1321485	Identifier	d_val		1321074	1					
ANR	1321486	BreakStatement	break ;	568:3:18816:18821	1321074	8	True				
ANR	1321487	Label	case DT_RELAENT :	569:2:18825:18840	1321074	9	True				
ANR	1321488	Identifier	DT_RELAENT		1321074	0					
ANR	1321489	ExpressionStatement	relentry = dyn [ i ] . d_un . d_val	570:3:18845:18873	1321074	10	True				
ANR	1321490	AssignmentExpression	relentry = dyn [ i ] . d_un . d_val		1321074	0		=			
ANR	1321491	Identifier	relentry		1321074	0					
ANR	1321492	MemberAccess	dyn [ i ] . d_un . d_val		1321074	1					
ANR	1321493	MemberAccess	dyn [ i ] . d_un		1321074	0					
ANR	1321494	ArrayIndexing	dyn [ i ]		1321074	0					
ANR	1321495	Identifier	dyn		1321074	0					
ANR	1321496	Identifier	i		1321074	1					
ANR	1321497	Identifier	d_un		1321074	1					
ANR	1321498	Identifier	d_val		1321074	1					
ANR	1321499	BreakStatement	break ;	571:3:18878:18883	1321074	11	True				
ANR	1321500	Label	default :	572:2:18887:18894	1321074	12	True				
ANR	1321501	Identifier	default		1321074	0					
ANR	1321502	IfStatement	if ( ( dyn [ i ] . d_tag >= DT_VERSYM ) && ( dyn [ i ] . d_tag <= DT_VERNEEDNUM ) )		1321074	13					
ANR	1321503	Condition	( dyn [ i ] . d_tag >= DT_VERSYM ) && ( dyn [ i ] . d_tag <= DT_VERNEEDNUM )	573:7:18903:18964	1321074	0	True				
ANR	1321504	AndExpression	( dyn [ i ] . d_tag >= DT_VERSYM ) && ( dyn [ i ] . d_tag <= DT_VERNEEDNUM )		1321074	0		&&			
ANR	1321505	RelationalExpression	dyn [ i ] . d_tag >= DT_VERSYM		1321074	0		>=			
ANR	1321506	MemberAccess	dyn [ i ] . d_tag		1321074	0					
ANR	1321507	ArrayIndexing	dyn [ i ]		1321074	0					
ANR	1321508	Identifier	dyn		1321074	0					
ANR	1321509	Identifier	i		1321074	1					
ANR	1321510	Identifier	d_tag		1321074	1					
ANR	1321511	Identifier	DT_VERSYM		1321074	1					
ANR	1321512	RelationalExpression	dyn [ i ] . d_tag <= DT_VERNEEDNUM		1321074	1		<=			
ANR	1321513	MemberAccess	dyn [ i ] . d_tag		1321074	0					
ANR	1321514	ArrayIndexing	dyn [ i ]		1321074	0					
ANR	1321515	Identifier	dyn		1321074	0					
ANR	1321516	Identifier	i		1321074	1					
ANR	1321517	Identifier	d_tag		1321074	1					
ANR	1321518	Identifier	DT_VERNEEDNUM		1321074	1					
ANR	1321519	CompoundStatement		65:71:1530:1530	1321074	1					
ANR	1321520	ExpressionStatement	bin -> version_info [ DT_VERSIONTAGIDX ( dyn [ i ] . d_tag ) ] = dyn [ i ] . d_un . d_val	574:4:18973:19043	1321074	0	True				
ANR	1321521	AssignmentExpression	bin -> version_info [ DT_VERSIONTAGIDX ( dyn [ i ] . d_tag ) ] = dyn [ i ] . d_un . d_val		1321074	0		=			
ANR	1321522	ArrayIndexing	bin -> version_info [ DT_VERSIONTAGIDX ( dyn [ i ] . d_tag ) ]		1321074	0					
ANR	1321523	PtrMemberAccess	bin -> version_info		1321074	0					
ANR	1321524	Identifier	bin		1321074	0					
ANR	1321525	Identifier	version_info		1321074	1					
ANR	1321526	CallExpression	DT_VERSIONTAGIDX ( dyn [ i ] . d_tag )		1321074	1					
ANR	1321527	Callee	DT_VERSIONTAGIDX		1321074	0					
ANR	1321528	Identifier	DT_VERSIONTAGIDX		1321074	0					
ANR	1321529	ArgumentList	dyn [ i ] . d_tag		1321074	1					
ANR	1321530	Argument	dyn [ i ] . d_tag		1321074	0					
ANR	1321531	MemberAccess	dyn [ i ] . d_tag		1321074	0					
ANR	1321532	ArrayIndexing	dyn [ i ]		1321074	0					
ANR	1321533	Identifier	dyn		1321074	0					
ANR	1321534	Identifier	i		1321074	1					
ANR	1321535	Identifier	d_tag		1321074	1					
ANR	1321536	MemberAccess	dyn [ i ] . d_un . d_val		1321074	1					
ANR	1321537	MemberAccess	dyn [ i ] . d_un		1321074	0					
ANR	1321538	ArrayIndexing	dyn [ i ]		1321074	0					
ANR	1321539	Identifier	dyn		1321074	0					
ANR	1321540	Identifier	i		1321074	1					
ANR	1321541	Identifier	d_un		1321074	1					
ANR	1321542	Identifier	d_val		1321074	1					
ANR	1321543	BreakStatement	break ;	576:3:19053:19058	1321074	14	True				
ANR	1321544	IfStatement	if ( ! bin -> is_rela )		1321074	21					
ANR	1321545	Condition	! bin -> is_rela	579:5:19072:19084	1321074	0	True				
ANR	1321546	UnaryOperationExpression	! bin -> is_rela		1321074	0					
ANR	1321547	UnaryOperator	!		1321074	0					
ANR	1321548	PtrMemberAccess	bin -> is_rela		1321074	1					
ANR	1321549	Identifier	bin		1321074	0					
ANR	1321550	Identifier	is_rela		1321074	1					
ANR	1321551	CompoundStatement		71:20:1650:1650	1321074	1					
ANR	1321552	ExpressionStatement	bin -> is_rela = sizeof ( Elf_ ( Rela ) ) == relentry ? DT_RELA : DT_REL	580:2:19091:19154	1321074	0	True				
ANR	1321553	AssignmentExpression	bin -> is_rela = sizeof ( Elf_ ( Rela ) ) == relentry ? DT_RELA : DT_REL		1321074	0		=			
ANR	1321554	PtrMemberAccess	bin -> is_rela		1321074	0					
ANR	1321555	Identifier	bin		1321074	0					
ANR	1321556	Identifier	is_rela		1321074	1					
ANR	1321557	ConditionalExpression	sizeof ( Elf_ ( Rela ) ) == relentry ? DT_RELA : DT_REL		1321074	1					
ANR	1321558	Condition	sizeof ( Elf_ ( Rela ) ) == relentry		1321074	0					
ANR	1321559	EqualityExpression	sizeof ( Elf_ ( Rela ) ) == relentry		1321074	0		==			
ANR	1321560	SizeofExpression	sizeof ( Elf_ ( Rela ) )		1321074	0					
ANR	1321561	Sizeof	sizeof		1321074	0					
ANR	1321562	CallExpression	Elf_ ( Rela )		1321074	1					
ANR	1321563	Callee	Elf_		1321074	0					
ANR	1321564	Identifier	Elf_		1321074	0					
ANR	1321565	ArgumentList	Rela		1321074	1					
ANR	1321566	Argument	Rela		1321074	0					
ANR	1321567	Identifier	Rela		1321074	0					
ANR	1321568	Identifier	relentry		1321074	1					
ANR	1321569	Identifier	DT_RELA		1321074	1					
ANR	1321570	Identifier	DT_REL		1321074	2					
ANR	1321571	IfStatement	if ( strtabaddr == UT64_MAX || strtabaddr > bin -> size || strsize > ST32_MAX || ! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size )		1321074	22					
ANR	1321572	Condition	strtabaddr == UT64_MAX || strtabaddr > bin -> size || strsize > ST32_MAX || ! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size	582:5:19164:19304	1321074	0	True				
ANR	1321573	OrExpression	strtabaddr == UT64_MAX || strtabaddr > bin -> size || strsize > ST32_MAX || ! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size		1321074	0		||			
ANR	1321574	EqualityExpression	strtabaddr == UT64_MAX		1321074	0		==			
ANR	1321575	Identifier	strtabaddr		1321074	0					
ANR	1321576	Identifier	UT64_MAX		1321074	1					
ANR	1321577	OrExpression	strtabaddr > bin -> size || strsize > ST32_MAX || ! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size		1321074	1		||			
ANR	1321578	RelationalExpression	strtabaddr > bin -> size		1321074	0		>			
ANR	1321579	Identifier	strtabaddr		1321074	0					
ANR	1321580	PtrMemberAccess	bin -> size		1321074	1					
ANR	1321581	Identifier	bin		1321074	0					
ANR	1321582	Identifier	size		1321074	1					
ANR	1321583	OrExpression	strsize > ST32_MAX || ! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size		1321074	1		||			
ANR	1321584	RelationalExpression	strsize > ST32_MAX		1321074	0		>			
ANR	1321585	Identifier	strsize		1321074	0					
ANR	1321586	Identifier	ST32_MAX		1321074	1					
ANR	1321587	OrExpression	! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size		1321074	1		||			
ANR	1321588	UnaryOperationExpression	! strsize		1321074	0					
ANR	1321589	UnaryOperator	!		1321074	0					
ANR	1321590	Identifier	strsize		1321074	1					
ANR	1321591	OrExpression	strsize > bin -> size || strtabaddr + strsize > bin -> size		1321074	1		||			
ANR	1321592	RelationalExpression	strsize > bin -> size		1321074	0		>			
ANR	1321593	Identifier	strsize		1321074	0					
ANR	1321594	PtrMemberAccess	bin -> size		1321074	1					
ANR	1321595	Identifier	bin		1321074	0					
ANR	1321596	Identifier	size		1321074	1					
ANR	1321597	RelationalExpression	strtabaddr + strsize > bin -> size		1321074	1		>			
ANR	1321598	AdditiveExpression	strtabaddr + strsize		1321074	0		+			
ANR	1321599	Identifier	strtabaddr		1321074	0					
ANR	1321600	Identifier	strsize		1321074	1					
ANR	1321601	PtrMemberAccess	bin -> size		1321074	1					
ANR	1321602	Identifier	bin		1321074	0					
ANR	1321603	Identifier	size		1321074	1					
ANR	1321604	CompoundStatement		74:148:1870:1870	1321074	1					
ANR	1321605	IfStatement	if ( ! strtabaddr )		1321074	0					
ANR	1321606	Condition	! strtabaddr	583:6:19315:19325	1321074	0	True				
ANR	1321607	UnaryOperationExpression	! strtabaddr		1321074	0					
ANR	1321608	UnaryOperator	!		1321074	0					
ANR	1321609	Identifier	strtabaddr		1321074	1					
ANR	1321610	CompoundStatement		75:19:1891:1891	1321074	1					
ANR	1321611	ExpressionStatement	"bprintf ( ""DT_STRTAB not found or invalid\\n"" )"	584:3:19333:19377	1321074	0	True				
ANR	1321612	CallExpression	"bprintf ( ""DT_STRTAB not found or invalid\\n"" )"		1321074	0					
ANR	1321613	Callee	bprintf		1321074	0					
ANR	1321614	Identifier	bprintf		1321074	0					
ANR	1321615	ArgumentList	"""DT_STRTAB not found or invalid\\n"""		1321074	1					
ANR	1321616	Argument	"""DT_STRTAB not found or invalid\\n"""		1321074	0					
ANR	1321617	PrimaryExpression	"""DT_STRTAB not found or invalid\\n"""		1321074	0					
ANR	1321618	GotoStatement	goto beach ;	586:2:19385:19395	1321074	1	True				
ANR	1321619	Identifier	beach		1321074	0					
ANR	1321620	ExpressionStatement	"strtab = ( char * ) calloc ( 1 , strsize + 1 )"	588:1:19401:19441	1321074	23	True				
ANR	1321621	AssignmentExpression	"strtab = ( char * ) calloc ( 1 , strsize + 1 )"		1321074	0		=			
ANR	1321622	Identifier	strtab		1321074	0					
ANR	1321623	CastExpression	"( char * ) calloc ( 1 , strsize + 1 )"		1321074	1					
ANR	1321624	CastTarget	char *		1321074	0					
ANR	1321625	CallExpression	"calloc ( 1 , strsize + 1 )"		1321074	1					
ANR	1321626	Callee	calloc		1321074	0					
ANR	1321627	Identifier	calloc		1321074	0					
ANR	1321628	ArgumentList	1		1321074	1					
ANR	1321629	Argument	1		1321074	0					
ANR	1321630	PrimaryExpression	1		1321074	0					
ANR	1321631	Argument	strsize + 1		1321074	1					
ANR	1321632	AdditiveExpression	strsize + 1		1321074	0		+			
ANR	1321633	Identifier	strsize		1321074	0					
ANR	1321634	PrimaryExpression	1		1321074	1					
ANR	1321635	IfStatement	if ( ! strtab )		1321074	24					
ANR	1321636	Condition	! strtab	589:5:19448:19454	1321074	0	True				
ANR	1321637	UnaryOperationExpression	! strtab		1321074	0					
ANR	1321638	UnaryOperator	!		1321074	0					
ANR	1321639	Identifier	strtab		1321074	1					
ANR	1321640	CompoundStatement		81:14:2020:2020	1321074	1					
ANR	1321641	GotoStatement	goto beach ;	590:2:19461:19471	1321074	0	True				
ANR	1321642	Identifier	beach		1321074	0					
ANR	1321643	ExpressionStatement	"r = r_buf_read_at ( bin -> b , strtabaddr , ( ut8 * ) strtab , strsize )"	592:1:19477:19539	1321074	25	True				
ANR	1321644	AssignmentExpression	"r = r_buf_read_at ( bin -> b , strtabaddr , ( ut8 * ) strtab , strsize )"		1321074	0		=			
ANR	1321645	Identifier	r		1321074	0					
ANR	1321646	CallExpression	"r_buf_read_at ( bin -> b , strtabaddr , ( ut8 * ) strtab , strsize )"		1321074	1					
ANR	1321647	Callee	r_buf_read_at		1321074	0					
ANR	1321648	Identifier	r_buf_read_at		1321074	0					
ANR	1321649	ArgumentList	bin -> b		1321074	1					
ANR	1321650	Argument	bin -> b		1321074	0					
ANR	1321651	PtrMemberAccess	bin -> b		1321074	0					
ANR	1321652	Identifier	bin		1321074	0					
ANR	1321653	Identifier	b		1321074	1					
ANR	1321654	Argument	strtabaddr		1321074	1					
ANR	1321655	Identifier	strtabaddr		1321074	0					
ANR	1321656	Argument	( ut8 * ) strtab		1321074	2					
ANR	1321657	CastExpression	( ut8 * ) strtab		1321074	0					
ANR	1321658	CastTarget	ut8 *		1321074	0					
ANR	1321659	Identifier	strtab		1321074	1					
ANR	1321660	Argument	strsize		1321074	3					
ANR	1321661	Identifier	strsize		1321074	0					
ANR	1321662	IfStatement	if ( r < 1 )		1321074	26					
ANR	1321663	Condition	r < 1	593:5:19546:19550	1321074	0	True				
ANR	1321664	RelationalExpression	r < 1		1321074	0		<			
ANR	1321665	Identifier	r		1321074	0					
ANR	1321666	PrimaryExpression	1		1321074	1					
ANR	1321667	CompoundStatement		85:12:2116:2116	1321074	1					
ANR	1321668	ExpressionStatement	free ( strtab )	594:2:19557:19570	1321074	0	True				
ANR	1321669	CallExpression	free ( strtab )		1321074	0					
ANR	1321670	Callee	free		1321074	0					
ANR	1321671	Identifier	free		1321074	0					
ANR	1321672	ArgumentList	strtab		1321074	1					
ANR	1321673	Argument	strtab		1321074	0					
ANR	1321674	Identifier	strtab		1321074	0					
ANR	1321675	GotoStatement	goto beach ;	595:2:19574:19584	1321074	1	True				
ANR	1321676	Identifier	beach		1321074	0					
ANR	1321677	ExpressionStatement	bin -> dyn_buf = dyn	597:1:19590:19608	1321074	27	True				
ANR	1321678	AssignmentExpression	bin -> dyn_buf = dyn		1321074	0		=			
ANR	1321679	PtrMemberAccess	bin -> dyn_buf		1321074	0					
ANR	1321680	Identifier	bin		1321074	0					
ANR	1321681	Identifier	dyn_buf		1321074	1					
ANR	1321682	Identifier	dyn		1321074	1					
ANR	1321683	ExpressionStatement	bin -> dyn_entries = entries	598:1:19611:19637	1321074	28	True				
ANR	1321684	AssignmentExpression	bin -> dyn_entries = entries		1321074	0		=			
ANR	1321685	PtrMemberAccess	bin -> dyn_entries		1321074	0					
ANR	1321686	Identifier	bin		1321074	0					
ANR	1321687	Identifier	dyn_entries		1321074	1					
ANR	1321688	Identifier	entries		1321074	1					
ANR	1321689	ExpressionStatement	bin -> strtab = strtab	599:1:19640:19660	1321074	29	True				
ANR	1321690	AssignmentExpression	bin -> strtab = strtab		1321074	0		=			
ANR	1321691	PtrMemberAccess	bin -> strtab		1321074	0					
ANR	1321692	Identifier	bin		1321074	0					
ANR	1321693	Identifier	strtab		1321074	1					
ANR	1321694	Identifier	strtab		1321074	1					
ANR	1321695	ExpressionStatement	bin -> strtab_size = strsize	600:1:19663:19689	1321074	30	True				
ANR	1321696	AssignmentExpression	bin -> strtab_size = strsize		1321074	0		=			
ANR	1321697	PtrMemberAccess	bin -> strtab_size		1321074	0					
ANR	1321698	Identifier	bin		1321074	0					
ANR	1321699	Identifier	strtab_size		1321074	1					
ANR	1321700	Identifier	strsize		1321074	1					
ANR	1321701	ExpressionStatement	"init_dynamic_section_sdb ( bin , strtabaddr , strsize )"	601:1:19692:19743	1321074	31	True				
ANR	1321702	CallExpression	"init_dynamic_section_sdb ( bin , strtabaddr , strsize )"		1321074	0					
ANR	1321703	Callee	init_dynamic_section_sdb		1321074	0					
ANR	1321704	Identifier	init_dynamic_section_sdb		1321074	0					
ANR	1321705	ArgumentList	bin		1321074	1					
ANR	1321706	Argument	bin		1321074	0					
ANR	1321707	Identifier	bin		1321074	0					
ANR	1321708	Argument	strtabaddr		1321074	1					
ANR	1321709	Identifier	strtabaddr		1321074	0					
ANR	1321710	Argument	strsize		1321074	2					
ANR	1321711	Identifier	strsize		1321074	0					
ANR	1321712	ReturnStatement	return true ;	602:1:19746:19757	1321074	32	True				
ANR	1321713	Identifier	true		1321074	0					
ANR	1321714	Label	beach :	603:0:19759:19764	1321074	33	True				
ANR	1321715	Identifier	beach		1321074	0					
ANR	1321716	ExpressionStatement	free ( dyn )	604:1:19767:19777	1321074	34	True				
ANR	1321717	CallExpression	free ( dyn )		1321074	0					
ANR	1321718	Callee	free		1321074	0					
ANR	1321719	Identifier	free		1321074	0					
ANR	1321720	ArgumentList	dyn		1321074	1					
ANR	1321721	Argument	dyn		1321074	0					
ANR	1321722	Identifier	dyn		1321074	0					
ANR	1321723	ReturnStatement	return false ;	605:1:19780:19792	1321074	35	True				
ANR	1321724	Identifier	false		1321074	0					
ANR	1321725	ReturnType	static int		1321074	1					
ANR	1321726	Identifier	init_dynamic_section		1321074	2					
ANR	1321727	ParameterList	ELFOBJ * bin		1321074	3					
ANR	1321728	Parameter	ELFOBJ * bin	509:32:17423:17433	1321074	0	True				
ANR	1321729	ParameterType	ELFOBJ *		1321074	0					
ANR	1321730	Identifier	bin		1321074	1					
ANR	1321731	CFGEntryNode	ENTRY		1321074		True				
ANR	1321732	CFGExitNode	EXIT		1321074		True				
ANR	1321733	Symbol	bin -> size		1321074						
ANR	1321734	Symbol	bin -> b		1321074						
ANR	1321735	Symbol	* DT_VERSIONTAGIDX		1321074						
ANR	1321736	Symbol	Phdr		1321074						
ANR	1321737	Symbol	strtabaddr		1321074						
ANR	1321738	Symbol	ST32_MAX		1321074						
ANR	1321739	Symbol	bin		1321074						
ANR	1321740	Symbol	bin -> phdr		1321074						
ANR	1321741	Symbol	strtab		1321074						
ANR	1321742	Symbol	sdyn		1321074						
ANR	1321743	Symbol	len		1321074						
ANR	1321744	Symbol	compute_dyn_entries		1321074						
ANR	1321745	Symbol	* bin -> version_info		1321074						
ANR	1321746	Symbol	bin -> ehdr		1321074						
ANR	1321747	Symbol	dyn [ i ] . d_un . d_ptr		1321074						
ANR	1321748	Symbol	DT_VERSIONTAGIDX		1321074						
ANR	1321749	Symbol	DT_REL		1321074						
ANR	1321750	Symbol	bin -> strtab		1321074						
ANR	1321751	Symbol	bin -> strtab_size		1321074						
ANR	1321752	Symbol	& dyn_size		1321074						
ANR	1321753	Symbol	READWORD		1321074						
ANR	1321754	Symbol	bin -> dyn_buf		1321074						
ANR	1321755	Symbol	NULL		1321074						
ANR	1321756	Symbol	bin -> dyn_entries		1321074						
ANR	1321757	Symbol	bin -> ehdr . e_phnum		1321074						
ANR	1321758	Symbol	dyn_phdr -> p_filesz		1321074						
ANR	1321759	Symbol	Rela		1321074						
ANR	1321760	Symbol	entries		1321074						
ANR	1321761	Symbol	UTX_MUL		1321074						
ANR	1321762	Symbol	true		1321074						
ANR	1321763	Symbol	DT_VERNEEDNUM		1321074						
ANR	1321764	Symbol	dyn_phdr -> p_vaddr		1321074						
ANR	1321765	Symbol	* dyn_phdr		1321074						
ANR	1321766	Symbol	calloc		1321074						
ANR	1321767	Symbol	get_dynamic_segment		1321074						
ANR	1321768	Symbol	* bin		1321074						
ANR	1321769	Symbol	loaded_offset		1321074						
ANR	1321770	Symbol	relentry		1321074						
ANR	1321771	Symbol	dyn [ i ] . d_un . d_val		1321074						
ANR	1321772	Symbol	R_NEWS0		1321074						
ANR	1321773	Symbol	Dyn		1321074						
ANR	1321774	Symbol	* * bin		1321074						
ANR	1321775	Symbol	UT64_MAX		1321074						
ANR	1321776	Symbol	* dyn		1321074						
ANR	1321777	Symbol	dyn [ i ] . d_tag		1321074						
ANR	1321778	Symbol	Elf_		1321074						
ANR	1321779	Symbol	dyn [ i ] . d_un		1321074						
ANR	1321780	Symbol	DT_VERSYM		1321074						
ANR	1321781	Symbol	dyn_phdr		1321074						
ANR	1321782	Symbol	false		1321074						
ANR	1321783	Symbol	DT_RELA		1321074						
ANR	1321784	Symbol	strsize		1321074						
ANR	1321785	Symbol	i		1321074						
ANR	1321786	Symbol	dyn_size		1321074						
ANR	1321787	Symbol	j		1321074						
ANR	1321788	Symbol	bin -> is_rela		1321074						
ANR	1321789	Symbol	r		1321074						
ANR	1321790	Symbol	* i		1321074						
ANR	1321791	Symbol	dyn		1321074						
ANR	1321792	Symbol	r_bin_elf_v2p_new		1321074						
ANR	1321793	Symbol	r_buf_read_at		1321074						
ANR	1321794	Symbol	bin -> version_info		1321074						
ANR	1321795	Function	get_section_by_name	608:0:19797:20100							
ANR	1321796	FunctionDef	"get_section_by_name (ELFOBJ * bin , const char * section_name)"		1321795	0					
ANR	1321797	CompoundStatement		608:82:19879:20100	1321795	0					
ANR	1321798	IdentifierDeclStatement	int i ;	609:1:19882:19887	1321795	0	True				
ANR	1321799	IdentifierDecl	i		1321795	0					
ANR	1321800	IdentifierDeclType	int		1321795	0					
ANR	1321801	Identifier	i		1321795	1					
ANR	1321802	IfStatement	if ( bin -> g_sections )		1321795	1					
ANR	1321803	Condition	bin -> g_sections	610:5:19894:19908	1321795	0	True				
ANR	1321804	PtrMemberAccess	bin -> g_sections		1321795	0					
ANR	1321805	Identifier	bin		1321795	0					
ANR	1321806	Identifier	g_sections		1321795	1					
ANR	1321807	CompoundStatement		3:22:31:31	1321795	1					
ANR	1321808	ForStatement	for ( i = 0 ; ! bin -> g_sections [ i ] . last ; i ++ )		1321795	0					
ANR	1321809	ForInit	i = 0 ;	611:7:19920:19925	1321795	0	True				
ANR	1321810	AssignmentExpression	i = 0		1321795	0		=			
ANR	1321811	Identifier	i		1321795	0					
ANR	1321812	PrimaryExpression	0		1321795	1					
ANR	1321813	Condition	! bin -> g_sections [ i ] . last	611:14:19927:19950	1321795	1	True				
ANR	1321814	UnaryOperationExpression	! bin -> g_sections [ i ] . last		1321795	0					
ANR	1321815	UnaryOperator	!		1321795	0					
ANR	1321816	MemberAccess	bin -> g_sections [ i ] . last		1321795	1					
ANR	1321817	ArrayIndexing	bin -> g_sections [ i ]		1321795	0					
ANR	1321818	PtrMemberAccess	bin -> g_sections		1321795	0					
ANR	1321819	Identifier	bin		1321795	0					
ANR	1321820	Identifier	g_sections		1321795	1					
ANR	1321821	Identifier	i		1321795	1					
ANR	1321822	Identifier	last		1321795	1					
ANR	1321823	PostIncDecOperationExpression	i ++	611:40:19953:19955	1321795	2	True				
ANR	1321824	Identifier	i		1321795	0					
ANR	1321825	IncDec	++		1321795	1					
ANR	1321826	CompoundStatement		4:45:78:78	1321795	3					
ANR	1321827	IfStatement	"if ( ! strncmp ( bin -> g_sections [ i ] . name , section_name , ELF_STRING_LENGTH - 1 ) )"		1321795	0					
ANR	1321828	Condition	"! strncmp ( bin -> g_sections [ i ] . name , section_name , ELF_STRING_LENGTH - 1 )"	612:7:19967:20037	1321795	0	True				
ANR	1321829	UnaryOperationExpression	"! strncmp ( bin -> g_sections [ i ] . name , section_name , ELF_STRING_LENGTH - 1 )"		1321795	0					
ANR	1321830	UnaryOperator	!		1321795	0					
ANR	1321831	CallExpression	"strncmp ( bin -> g_sections [ i ] . name , section_name , ELF_STRING_LENGTH - 1 )"		1321795	1					
ANR	1321832	Callee	strncmp		1321795	0					
ANR	1321833	Identifier	strncmp		1321795	0					
ANR	1321834	ArgumentList	bin -> g_sections [ i ] . name		1321795	1					
ANR	1321835	Argument	bin -> g_sections [ i ] . name		1321795	0					
ANR	1321836	MemberAccess	bin -> g_sections [ i ] . name		1321795	0					
ANR	1321837	ArrayIndexing	bin -> g_sections [ i ]		1321795	0					
ANR	1321838	PtrMemberAccess	bin -> g_sections		1321795	0					
ANR	1321839	Identifier	bin		1321795	0					
ANR	1321840	Identifier	g_sections		1321795	1					
ANR	1321841	Identifier	i		1321795	1					
ANR	1321842	Identifier	name		1321795	1					
ANR	1321843	Argument	section_name		1321795	1					
ANR	1321844	Identifier	section_name		1321795	0					
ANR	1321845	Argument	ELF_STRING_LENGTH - 1		1321795	2					
ANR	1321846	AdditiveExpression	ELF_STRING_LENGTH - 1		1321795	0		-			
ANR	1321847	Identifier	ELF_STRING_LENGTH		1321795	0					
ANR	1321848	PrimaryExpression	1		1321795	1					
ANR	1321849	CompoundStatement		5:80:160:160	1321795	1					
ANR	1321850	ReturnStatement	return & bin -> g_sections [ i ] ;	613:4:20046:20072	1321795	0	True				
ANR	1321851	UnaryOperationExpression	& bin -> g_sections [ i ]		1321795	0					
ANR	1321852	UnaryOperator	&		1321795	0					
ANR	1321853	ArrayIndexing	bin -> g_sections [ i ]		1321795	1					
ANR	1321854	PtrMemberAccess	bin -> g_sections		1321795	0					
ANR	1321855	Identifier	bin		1321795	0					
ANR	1321856	Identifier	g_sections		1321795	1					
ANR	1321857	Identifier	i		1321795	1					
ANR	1321858	ReturnStatement	return NULL ;	617:1:20087:20098	1321795	2	True				
ANR	1321859	Identifier	NULL		1321795	0					
ANR	1321860	ReturnType	static RBinElfSection *		1321795	1					
ANR	1321861	Identifier	get_section_by_name		1321795	2					
ANR	1321862	ParameterList	"ELFOBJ * bin , const char * section_name"		1321795	3					
ANR	1321863	Parameter	ELFOBJ * bin	608:43:19840:19850	1321795	0	True				
ANR	1321864	ParameterType	ELFOBJ *		1321795	0					
ANR	1321865	Identifier	bin		1321795	1					
ANR	1321866	Parameter	const char * section_name	608:56:19853:19876	1321795	1	True				
ANR	1321867	ParameterType	const char *		1321795	0					
ANR	1321868	Identifier	section_name		1321795	1					
ANR	1321869	CFGEntryNode	ENTRY		1321795		True				
ANR	1321870	CFGExitNode	EXIT		1321795		True				
ANR	1321871	Symbol	NULL		1321795						
ANR	1321872	Symbol	* bin -> g_sections		1321795						
ANR	1321873	Symbol	bin		1321795						
ANR	1321874	Symbol	section_name		1321795						
ANR	1321875	Symbol	i		1321795						
ANR	1321876	Symbol	ELF_STRING_LENGTH		1321795						
ANR	1321877	Symbol	* bin		1321795						
ANR	1321878	Symbol	bin -> g_sections		1321795						
ANR	1321879	Symbol	strncmp		1321795						
ANR	1321880	Symbol	* i		1321795						
ANR	1321881	Symbol	bin -> g_sections [ i ] . name		1321795						
ANR	1321882	Symbol	* * bin		1321795						
ANR	1321883	Symbol	bin -> g_sections [ i ] . last		1321795						
ANR	1321884	Function	get_ver_flags	620:0:20103:20488							
ANR	1321885	FunctionDef	get_ver_flags (ut32 flags)		1321884	0					
ANR	1321886	CompoundStatement		620:39:20142:20488	1321884	0					
ANR	1321887	Statement	static	621:1:20145:20150	1321884	0	True				
ANR	1321888	IdentifierDeclStatement	char buff [ 32 ] ;	621:8:20152:20165	1321884	1	True				
ANR	1321889	IdentifierDecl	buff [ 32 ]		1321884	0					
ANR	1321890	IdentifierDeclType	char [ 32 ]		1321884	0					
ANR	1321891	Identifier	buff		1321884	1					
ANR	1321892	PrimaryExpression	32		1321884	2					
ANR	1321893	ExpressionStatement	buff [ 0 ] = 0	622:1:20168:20179	1321884	2	True				
ANR	1321894	AssignmentExpression	buff [ 0 ] = 0		1321884	0		=			
ANR	1321895	ArrayIndexing	buff [ 0 ]		1321884	0					
ANR	1321896	Identifier	buff		1321884	0					
ANR	1321897	PrimaryExpression	0		1321884	1					
ANR	1321898	PrimaryExpression	0		1321884	1					
ANR	1321899	IfStatement	if ( ! flags )		1321884	3					
ANR	1321900	Condition	! flags	624:5:20187:20192	1321884	0	True				
ANR	1321901	UnaryOperationExpression	! flags		1321884	0					
ANR	1321902	UnaryOperator	!		1321884	0					
ANR	1321903	Identifier	flags		1321884	1					
ANR	1321904	CompoundStatement		5:13:52:52	1321884	1					
ANR	1321905	ReturnStatement	"return ""none"" ;"	625:2:20199:20212	1321884	0	True				
ANR	1321906	PrimaryExpression	"""none"""		1321884	0					
ANR	1321907	IfStatement	if ( flags & VER_FLG_BASE )		1321884	4					
ANR	1321908	Condition	flags & VER_FLG_BASE	627:5:20222:20241	1321884	0	True				
ANR	1321909	BitAndExpression	flags & VER_FLG_BASE		1321884	0		&			
ANR	1321910	Identifier	flags		1321884	0					
ANR	1321911	Identifier	VER_FLG_BASE		1321884	1					
ANR	1321912	CompoundStatement		8:27:101:101	1321884	1					
ANR	1321913	ExpressionStatement	"strcpy ( buff , ""BASE "" )"	628:2:20248:20270	1321884	0	True				
ANR	1321914	CallExpression	"strcpy ( buff , ""BASE "" )"		1321884	0					
ANR	1321915	Callee	strcpy		1321884	0					
ANR	1321916	Identifier	strcpy		1321884	0					
ANR	1321917	ArgumentList	buff		1321884	1					
ANR	1321918	Argument	buff		1321884	0					
ANR	1321919	Identifier	buff		1321884	0					
ANR	1321920	Argument	"""BASE """		1321884	1					
ANR	1321921	PrimaryExpression	"""BASE """		1321884	0					
ANR	1321922	IfStatement	if ( flags & VER_FLG_WEAK )		1321884	5					
ANR	1321923	Condition	flags & VER_FLG_WEAK	630:5:20280:20299	1321884	0	True				
ANR	1321924	BitAndExpression	flags & VER_FLG_WEAK		1321884	0		&			
ANR	1321925	Identifier	flags		1321884	0					
ANR	1321926	Identifier	VER_FLG_WEAK		1321884	1					
ANR	1321927	CompoundStatement		11:27:159:159	1321884	1					
ANR	1321928	IfStatement	if ( flags & VER_FLG_BASE )		1321884	0					
ANR	1321929	Condition	flags & VER_FLG_BASE	631:6:20310:20329	1321884	0	True				
ANR	1321930	BitAndExpression	flags & VER_FLG_BASE		1321884	0		&			
ANR	1321931	Identifier	flags		1321884	0					
ANR	1321932	Identifier	VER_FLG_BASE		1321884	1					
ANR	1321933	CompoundStatement		12:28:189:189	1321884	1					
ANR	1321934	ExpressionStatement	"strcat ( buff , ""| "" )"	632:3:20337:20356	1321884	0	True				
ANR	1321935	CallExpression	"strcat ( buff , ""| "" )"		1321884	0					
ANR	1321936	Callee	strcat		1321884	0					
ANR	1321937	Identifier	strcat		1321884	0					
ANR	1321938	ArgumentList	buff		1321884	1					
ANR	1321939	Argument	buff		1321884	0					
ANR	1321940	Identifier	buff		1321884	0					
ANR	1321941	Argument	"""| """		1321884	1					
ANR	1321942	PrimaryExpression	"""| """		1321884	0					
ANR	1321943	ExpressionStatement	"strcat ( buff , ""WEAK "" )"	634:2:20364:20386	1321884	1	True				
ANR	1321944	CallExpression	"strcat ( buff , ""WEAK "" )"		1321884	0					
ANR	1321945	Callee	strcat		1321884	0					
ANR	1321946	Identifier	strcat		1321884	0					
ANR	1321947	ArgumentList	buff		1321884	1					
ANR	1321948	Argument	buff		1321884	0					
ANR	1321949	Identifier	buff		1321884	0					
ANR	1321950	Argument	"""WEAK """		1321884	1					
ANR	1321951	PrimaryExpression	"""WEAK """		1321884	0					
ANR	1321952	IfStatement	if ( flags & ~ ( VER_FLG_BASE | VER_FLG_WEAK ) )		1321884	6					
ANR	1321953	Condition	flags & ~ ( VER_FLG_BASE | VER_FLG_WEAK )	637:5:20397:20434	1321884	0	True				
ANR	1321954	BitAndExpression	flags & ~ ( VER_FLG_BASE | VER_FLG_WEAK )		1321884	0		&			
ANR	1321955	Identifier	flags		1321884	0					
ANR	1321956	UnaryOperationExpression	~ ( VER_FLG_BASE | VER_FLG_WEAK )		1321884	1					
ANR	1321957	UnaryOperator	~		1321884	0					
ANR	1321958	InclusiveOrExpression	VER_FLG_BASE | VER_FLG_WEAK		1321884	1		|			
ANR	1321959	Identifier	VER_FLG_BASE		1321884	0					
ANR	1321960	Identifier	VER_FLG_WEAK		1321884	1					
ANR	1321961	CompoundStatement		18:45:294:294	1321884	1					
ANR	1321962	ExpressionStatement	"strcat ( buff , ""| <unknown>"" )"	638:2:20441:20469	1321884	0	True				
ANR	1321963	CallExpression	"strcat ( buff , ""| <unknown>"" )"		1321884	0					
ANR	1321964	Callee	strcat		1321884	0					
ANR	1321965	Identifier	strcat		1321884	0					
ANR	1321966	ArgumentList	buff		1321884	1					
ANR	1321967	Argument	buff		1321884	0					
ANR	1321968	Identifier	buff		1321884	0					
ANR	1321969	Argument	"""| <unknown>"""		1321884	1					
ANR	1321970	PrimaryExpression	"""| <unknown>"""		1321884	0					
ANR	1321971	ReturnStatement	return buff ;	640:1:20475:20486	1321884	7	True				
ANR	1321972	Identifier	buff		1321884	0					
ANR	1321973	ReturnType	static char *		1321884	1					
ANR	1321974	Identifier	get_ver_flags		1321884	2					
ANR	1321975	ParameterList	ut32 flags		1321884	3					
ANR	1321976	Parameter	ut32 flags	620:27:20130:20139	1321884	0	True				
ANR	1321977	ParameterType	ut32		1321884	0					
ANR	1321978	Identifier	flags		1321884	1					
ANR	1321979	CFGEntryNode	ENTRY		1321884		True				
ANR	1321980	CFGExitNode	EXIT		1321884		True				
ANR	1321981	Symbol	VER_FLG_BASE		1321884						
ANR	1321982	Symbol	* buff		1321884						
ANR	1321983	Symbol	VER_FLG_WEAK		1321884						
ANR	1321984	Symbol	flags		1321884						
ANR	1321985	Symbol	buff		1321884						
ANR	1321986	DeclStmt									
ANR	1321987	Decl							int	int	i
ANR	1321988	DeclStmt									
ANR	1321989	Decl							const ut64	const ut64	num_entries
ANR	1321990	DeclStmt									
ANR	1321991	Decl							const char	const char *	section_name
ANR	1321992	DeclStmt									
ANR	1321993	Decl							const char	const char *	link_section_name
ANR	1321994	DeclStmt									
ANR	1321995	Decl							Sdb	Sdb *	sdb
ANR	1321996	DeclStmt									
ANR	1321997	Decl							ut8	ut8 *	edata
ANR	1321998	DeclStmt									
ANR	1321999	Decl							ut16	ut16 *	data
ANR	1322000	DeclStmt									
ANR	1322001	Decl							ut64	ut64	off
ANR	1322002	DeclStmt									
ANR	1322003	Decl							char	char *	tmp_val
ANR	1322004	DeclStmt									
ANR	1322005	Decl							int	int	j
ANR	1322006	DeclStmt									
ANR	1322007	Decl							int	int	check_def
ANR	1322008	DeclStmt									
ANR	1322009	Decl							char	char [ 32 ]	key
ANR	1322010	DeclStmt									
ANR	1322011	Decl							int	int	k
ANR	1322012	DeclStmt									
ANR	1322013	Decl							ut8	ut8 [ sizeof ( Elf_ ( Verneed ) ) ]	svn
ANR	1322014	DeclStmt									
ANR	1322015	Decl							ut64	ut64	offset
ANR	1322016	DeclStmt									
ANR	1322017	Decl							ut8	ut8 [ sizeof ( Elf_ ( Vernaux ) ) ]	svna
ANR	1322018	DeclStmt									
ANR	1322019	Decl							ut64	ut64	a_off
ANR	1322020	DeclStmt									
ANR	1322021	Decl							ut64	ut64	vinfoaddr
ANR	1322022	DeclStmt									
ANR	1322023	Decl							ut8	ut8 [ sizeof ( Elf_ ( Verdef ) ) ]	svd
ANR	1322024	DeclStmt									
ANR	1322025	Decl							ut64	ut64	offset
ANR	1322026	DeclStmt									
ANR	1322027	Decl							ut8	ut8 [ sizeof ( Elf_ ( Verdaux ) ) ]	svda
ANR	1322028	DeclStmt									
ANR	1322029	Decl							ut64	ut64	off_vda
ANR	1322030	DeclStmt									
ANR	1322031	Decl							const char	const char *	name
ANR	1322032	DeclStmt									
ANR	1322033	Decl							const char	const char *	section_name
ANR	1322034	DeclStmt									
ANR	1322035	Decl							const char	const char *	link_section_name
ANR	1322036	DeclStmt									
ANR	1322037	Decl							char	char *	end
ANR	1322038	DeclStmt									
ANR	1322039	Decl							ut8	ut8 [ sizeof ( Elf_ ( Verdef ) ) ]	dfs
ANR	1322040	DeclStmt									
ANR	1322041	Decl							Sdb	Sdb *	sdb
ANR	1322042	DeclStmt									
ANR	1322043	Decl							ut32	ut32	cnt
ANR	1322044	DeclStmt									
ANR	1322045	Decl							size_t	size_t	i
ANR	1322046	DeclStmt									
ANR	1322047	Decl							Sdb	Sdb *	sdb_verdef
ANR	1322048	DeclStmt									
ANR	1322049	Decl							char	char *	vstart
ANR	1322050	DeclStmt									
ANR	1322051	Decl							size_t	size_t	vstart_off
ANR	1322052	DeclStmt									
ANR	1322053	Decl							char	char [ 32 ]	key
ANR	1322054	DeclStmt									
ANR	1322055	Decl							int	int	j
ANR	1322056	DeclStmt									
ANR	1322057	Decl							int	int	isum
ANR	1322058	DeclStmt									
ANR	1322059	Decl							int	int	vdaux
ANR	1322060	DeclStmt									
ANR	1322061	Decl							int	int	k
ANR	1322062	DeclStmt									
ANR	1322063	Decl							Sdb	Sdb *	sdb_parent
ANR	1322064	DeclStmt									
ANR	1322065	Decl							ut8	ut8 *	end
ANR	1322066	Decl							ut8	ut8 *	need
ANR	1322067	DeclStmt									
ANR	1322068	Decl							const char	const char *	section_name
ANR	1322069	DeclStmt									
ANR	1322070	Decl							const char	const char *	link_section_name
ANR	1322071	DeclStmt									
ANR	1322072	Decl							Sdb	Sdb *	sdb_vernaux
ANR	1322073	DeclStmt									
ANR	1322074	Decl							Sdb	Sdb *	sdb_version
ANR	1322075	DeclStmt									
ANR	1322076	Decl							Sdb	Sdb *	sdb
ANR	1322077	DeclStmt									
ANR	1322078	Decl							ut64	ut64	i
ANR	1322079	DeclStmt									
ANR	1322080	Decl							int	int	cnt
ANR	1322081	DeclStmt									
ANR	1322082	Decl							int	int	j
ANR	1322083	Decl							int	int	isum
ANR	1322084	DeclStmt									
ANR	1322085	Decl							ut8	ut8 *	vstart
ANR	1322086	DeclStmt									
ANR	1322087	Decl							char	char [ 32 ]	key
ANR	1322088	DeclStmt									
ANR	1322089	Decl							char	char *	s
ANR	1322090	DeclStmt									
ANR	1322091	Decl							st32	st32	vnaux
ANR	1322092	DeclStmt									
ANR	1322093	Decl							ut32	ut32	vn_cnt
ANR	1322094	DeclStmt									
ANR	1322095	Decl							int	int	k
ANR	1322096	DeclStmt									
ANR	1322097	Decl							char	char [ 16 ]	name
ANR	1322098	DeclStmt									
ANR	1322099	Decl							char	char *	key
ANR	1322100	DeclStmt									
ANR	1322101	Decl							char	char *	val
ANR	1322102	Function	store_versioninfo	1117:0:34641:35916							
ANR	1322103	FunctionDef	store_versioninfo (ELFOBJ * bin)		1322102	0					
ANR	1322104	CompoundStatement		1117:43:34684:35916	1322102	0					
ANR	1322105	IdentifierDeclStatement	Sdb * sdb_versioninfo = NULL ;	1118:1:34687:34714	1322102	0	True				
ANR	1322106	IdentifierDecl	* sdb_versioninfo = NULL		1322102	0					
ANR	1322107	IdentifierDeclType	Sdb *		1322102	0					
ANR	1322108	Identifier	sdb_versioninfo		1322102	1					
ANR	1322109	AssignmentExpression	* sdb_versioninfo = NULL		1322102	2		=			
ANR	1322110	Identifier	NULL		1322102	0					
ANR	1322111	Identifier	NULL		1322102	1					
ANR	1322112	IdentifierDeclStatement	int num_verdef = 0 ;	1119:1:34717:34735	1322102	1	True				
ANR	1322113	IdentifierDecl	num_verdef = 0		1322102	0					
ANR	1322114	IdentifierDeclType	int		1322102	0					
ANR	1322115	Identifier	num_verdef		1322102	1					
ANR	1322116	AssignmentExpression	num_verdef = 0		1322102	2		=			
ANR	1322117	Identifier	num_verdef		1322102	0					
ANR	1322118	PrimaryExpression	0		1322102	1					
ANR	1322119	IdentifierDeclStatement	int num_verneed = 0 ;	1120:1:34738:34757	1322102	2	True				
ANR	1322120	IdentifierDecl	num_verneed = 0		1322102	0					
ANR	1322121	IdentifierDeclType	int		1322102	0					
ANR	1322122	Identifier	num_verneed		1322102	1					
ANR	1322123	AssignmentExpression	num_verneed = 0		1322102	2		=			
ANR	1322124	Identifier	num_verneed		1322102	0					
ANR	1322125	PrimaryExpression	0		1322102	1					
ANR	1322126	IdentifierDeclStatement	int num_versym = 0 ;	1121:1:34760:34778	1322102	3	True				
ANR	1322127	IdentifierDecl	num_versym = 0		1322102	0					
ANR	1322128	IdentifierDeclType	int		1322102	0					
ANR	1322129	Identifier	num_versym		1322102	1					
ANR	1322130	AssignmentExpression	num_versym = 0		1322102	2		=			
ANR	1322131	Identifier	num_versym		1322102	0					
ANR	1322132	PrimaryExpression	0		1322102	1					
ANR	1322133	IdentifierDeclStatement	int i ;	1122:1:34781:34786	1322102	4	True				
ANR	1322134	IdentifierDecl	i		1322102	0					
ANR	1322135	IdentifierDeclType	int		1322102	0					
ANR	1322136	Identifier	i		1322102	1					
ANR	1322137	IfStatement	if ( ! bin || ! bin -> shdr )		1322102	5					
ANR	1322138	Condition	! bin || ! bin -> shdr	1124:5:34794:34811	1322102	0	True				
ANR	1322139	OrExpression	! bin || ! bin -> shdr		1322102	0		||			
ANR	1322140	UnaryOperationExpression	! bin		1322102	0					
ANR	1322141	UnaryOperator	!		1322102	0					
ANR	1322142	Identifier	bin		1322102	1					
ANR	1322143	UnaryOperationExpression	! bin -> shdr		1322102	1					
ANR	1322144	UnaryOperator	!		1322102	0					
ANR	1322145	PtrMemberAccess	bin -> shdr		1322102	1					
ANR	1322146	Identifier	bin		1322102	0					
ANR	1322147	Identifier	shdr		1322102	1					
ANR	1322148	CompoundStatement		8:25:129:129	1322102	1					
ANR	1322149	ReturnStatement	return NULL ;	1125:2:34818:34829	1322102	0	True				
ANR	1322150	Identifier	NULL		1322102	0					
ANR	1322151	IfStatement	if ( ! ( sdb_versioninfo = sdb_new0 ( ) ) )		1322102	6					
ANR	1322152	Condition	! ( sdb_versioninfo = sdb_new0 ( ) )	1127:5:34839:34870	1322102	0	True				
ANR	1322153	UnaryOperationExpression	! ( sdb_versioninfo = sdb_new0 ( ) )		1322102	0					
ANR	1322154	UnaryOperator	!		1322102	0					
ANR	1322155	AssignmentExpression	sdb_versioninfo = sdb_new0 ( )		1322102	1		=			
ANR	1322156	Identifier	sdb_versioninfo		1322102	0					
ANR	1322157	CallExpression	sdb_new0 ( )		1322102	1					
ANR	1322158	Callee	sdb_new0		1322102	0					
ANR	1322159	Identifier	sdb_new0		1322102	0					
ANR	1322160	ArgumentList			1322102	1					
ANR	1322161	CompoundStatement		11:39:188:188	1322102	1					
ANR	1322162	ReturnStatement	return NULL ;	1128:2:34877:34888	1322102	0	True				
ANR	1322163	Identifier	NULL		1322102	0					
ANR	1322164	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; i ++ )		1322102	7					
ANR	1322165	ForInit	i = 0 ;	1131:6:34900:34905	1322102	0	True				
ANR	1322166	AssignmentExpression	i = 0		1322102	0		=			
ANR	1322167	Identifier	i		1322102	0					
ANR	1322168	PrimaryExpression	0		1322102	1					
ANR	1322169	Condition	i < bin -> ehdr . e_shnum	1131:13:34907:34927	1322102	1	True				
ANR	1322170	RelationalExpression	i < bin -> ehdr . e_shnum		1322102	0		<			
ANR	1322171	Identifier	i		1322102	0					
ANR	1322172	MemberAccess	bin -> ehdr . e_shnum		1322102	1					
ANR	1322173	PtrMemberAccess	bin -> ehdr		1322102	0					
ANR	1322174	Identifier	bin		1322102	0					
ANR	1322175	Identifier	ehdr		1322102	1					
ANR	1322176	Identifier	e_shnum		1322102	1					
ANR	1322177	PostIncDecOperationExpression	i ++	1131:36:34930:34932	1322102	2	True				
ANR	1322178	Identifier	i		1322102	0					
ANR	1322179	IncDec	++		1322102	1					
ANR	1322180	CompoundStatement		23:2:435:478	1322102	3					
ANR	1322181	IdentifierDeclStatement	Sdb * sdb = NULL ;	1132:2:34939:34954	1322102	0	True				
ANR	1322182	IdentifierDecl	* sdb = NULL		1322102	0					
ANR	1322183	IdentifierDeclType	Sdb *		1322102	0					
ANR	1322184	Identifier	sdb		1322102	1					
ANR	1322185	AssignmentExpression	* sdb = NULL		1322102	2		=			
ANR	1322186	Identifier	NULL		1322102	0					
ANR	1322187	Identifier	NULL		1322102	1					
ANR	1322188	IdentifierDeclStatement	char key [ 32 ] = { 0 } ;	1133:2:34958:34976	1322102	1	True				
ANR	1322189	IdentifierDecl	key [ 32 ] = { 0 }		1322102	0					
ANR	1322190	IdentifierDeclType	char [ 32 ]		1322102	0					
ANR	1322191	Identifier	key		1322102	1					
ANR	1322192	PrimaryExpression	32		1322102	2					
ANR	1322193	AssignmentExpression	key [ 32 ] = { 0 }		1322102	3		=			
ANR	1322194	Identifier	key		1322102	0					
ANR	1322195	InitializerList	0		1322102	1					
ANR	1322196	PrimaryExpression	0		1322102	0					
ANR	1322197	IdentifierDeclStatement	int size = bin -> shdr [ i ] . sh_size ;	1134:2:34980:35011	1322102	2	True				
ANR	1322198	IdentifierDecl	size = bin -> shdr [ i ] . sh_size		1322102	0					
ANR	1322199	IdentifierDeclType	int		1322102	0					
ANR	1322200	Identifier	size		1322102	1					
ANR	1322201	AssignmentExpression	size = bin -> shdr [ i ] . sh_size		1322102	2		=			
ANR	1322202	Identifier	size		1322102	0					
ANR	1322203	MemberAccess	bin -> shdr [ i ] . sh_size		1322102	1					
ANR	1322204	ArrayIndexing	bin -> shdr [ i ]		1322102	0					
ANR	1322205	PtrMemberAccess	bin -> shdr		1322102	0					
ANR	1322206	Identifier	bin		1322102	0					
ANR	1322207	Identifier	shdr		1322102	1					
ANR	1322208	Identifier	i		1322102	1					
ANR	1322209	Identifier	sh_size		1322102	1					
ANR	1322210	IfStatement	if ( size - ( i * sizeof ( Elf_ ( Shdr ) ) > bin -> size ) )		1322102	3					
ANR	1322211	Condition	size - ( i * sizeof ( Elf_ ( Shdr ) ) > bin -> size )	1136:6:35020:35063	1322102	0	True				
ANR	1322212	AdditiveExpression	size - ( i * sizeof ( Elf_ ( Shdr ) ) > bin -> size )		1322102	0		-			
ANR	1322213	Identifier	size		1322102	0					
ANR	1322214	RelationalExpression	i * sizeof ( Elf_ ( Shdr ) ) > bin -> size		1322102	1		>			
ANR	1322215	MultiplicativeExpression	i * sizeof ( Elf_ ( Shdr ) )		1322102	0		*			
ANR	1322216	Identifier	i		1322102	0					
ANR	1322217	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		1322102	1					
ANR	1322218	Sizeof	sizeof		1322102	0					
ANR	1322219	CallExpression	Elf_ ( Shdr )		1322102	1					
ANR	1322220	Callee	Elf_		1322102	0					
ANR	1322221	Identifier	Elf_		1322102	0					
ANR	1322222	ArgumentList	Shdr		1322102	1					
ANR	1322223	Argument	Shdr		1322102	0					
ANR	1322224	Identifier	Shdr		1322102	0					
ANR	1322225	PtrMemberAccess	bin -> size		1322102	1					
ANR	1322226	Identifier	bin		1322102	0					
ANR	1322227	Identifier	size		1322102	1					
ANR	1322228	CompoundStatement		20:52:381:381	1322102	1					
ANR	1322229	ExpressionStatement	size = bin -> size - ( i * sizeof ( Elf_ ( Shdr ) ) )	1137:3:35071:35112	1322102	0	True				
ANR	1322230	AssignmentExpression	size = bin -> size - ( i * sizeof ( Elf_ ( Shdr ) ) )		1322102	0		=			
ANR	1322231	Identifier	size		1322102	0					
ANR	1322232	AdditiveExpression	bin -> size - ( i * sizeof ( Elf_ ( Shdr ) ) )		1322102	1		-			
ANR	1322233	PtrMemberAccess	bin -> size		1322102	0					
ANR	1322234	Identifier	bin		1322102	0					
ANR	1322235	Identifier	size		1322102	1					
ANR	1322236	MultiplicativeExpression	i * sizeof ( Elf_ ( Shdr ) )		1322102	1		*			
ANR	1322237	Identifier	i		1322102	0					
ANR	1322238	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		1322102	1					
ANR	1322239	Sizeof	sizeof		1322102	0					
ANR	1322240	CallExpression	Elf_ ( Shdr )		1322102	1					
ANR	1322241	Callee	Elf_		1322102	0					
ANR	1322242	Identifier	Elf_		1322102	0					
ANR	1322243	ArgumentList	Shdr		1322102	1					
ANR	1322244	Argument	Shdr		1322102	0					
ANR	1322245	Identifier	Shdr		1322102	0					
ANR	1322246	IdentifierDeclStatement	int left = size - ( i * sizeof ( Elf_ ( Shdr ) ) ) ;	1139:2:35120:35163	1322102	4	True				
ANR	1322247	IdentifierDecl	left = size - ( i * sizeof ( Elf_ ( Shdr ) ) )		1322102	0					
ANR	1322248	IdentifierDeclType	int		1322102	0					
ANR	1322249	Identifier	left		1322102	1					
ANR	1322250	AssignmentExpression	left = size - ( i * sizeof ( Elf_ ( Shdr ) ) )		1322102	2		=			
ANR	1322251	Identifier	left		1322102	0					
ANR	1322252	AdditiveExpression	size - ( i * sizeof ( Elf_ ( Shdr ) ) )		1322102	1		-			
ANR	1322253	Identifier	size		1322102	0					
ANR	1322254	MultiplicativeExpression	i * sizeof ( Elf_ ( Shdr ) )		1322102	1		*			
ANR	1322255	Identifier	i		1322102	0					
ANR	1322256	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		1322102	1					
ANR	1322257	Sizeof	sizeof		1322102	0					
ANR	1322258	CallExpression	Elf_ ( Shdr )		1322102	1					
ANR	1322259	Callee	Elf_		1322102	0					
ANR	1322260	Identifier	Elf_		1322102	0					
ANR	1322261	ArgumentList	Shdr		1322102	1					
ANR	1322262	Argument	Shdr		1322102	0					
ANR	1322263	Identifier	Shdr		1322102	0					
ANR	1322264	ExpressionStatement	"left = R_MIN ( left , bin -> shdr [ i ] . sh_size )"	1140:2:35167:35208	1322102	5	True				
ANR	1322265	AssignmentExpression	"left = R_MIN ( left , bin -> shdr [ i ] . sh_size )"		1322102	0		=			
ANR	1322266	Identifier	left		1322102	0					
ANR	1322267	CallExpression	"R_MIN ( left , bin -> shdr [ i ] . sh_size )"		1322102	1					
ANR	1322268	Callee	R_MIN		1322102	0					
ANR	1322269	Identifier	R_MIN		1322102	0					
ANR	1322270	ArgumentList	left		1322102	1					
ANR	1322271	Argument	left		1322102	0					
ANR	1322272	Identifier	left		1322102	0					
ANR	1322273	Argument	bin -> shdr [ i ] . sh_size		1322102	1					
ANR	1322274	MemberAccess	bin -> shdr [ i ] . sh_size		1322102	0					
ANR	1322275	ArrayIndexing	bin -> shdr [ i ]		1322102	0					
ANR	1322276	PtrMemberAccess	bin -> shdr		1322102	0					
ANR	1322277	Identifier	bin		1322102	0					
ANR	1322278	Identifier	shdr		1322102	1					
ANR	1322279	Identifier	i		1322102	1					
ANR	1322280	Identifier	sh_size		1322102	1					
ANR	1322281	IfStatement	if ( left < 0 )		1322102	6					
ANR	1322282	Condition	left < 0	1141:6:35216:35223	1322102	0	True				
ANR	1322283	RelationalExpression	left < 0		1322102	0		<			
ANR	1322284	Identifier	left		1322102	0					
ANR	1322285	PrimaryExpression	0		1322102	1					
ANR	1322286	CompoundStatement		25:16:541:541	1322102	1					
ANR	1322287	BreakStatement	break ;	1142:3:35231:35236	1322102	0	True				
ANR	1322288	SwitchStatement	switch ( bin -> shdr [ i ] . sh_type )		1322102	7					
ANR	1322289	Condition	bin -> shdr [ i ] . sh_type	1144:10:35252:35271	1322102	0	True				
ANR	1322290	MemberAccess	bin -> shdr [ i ] . sh_type		1322102	0					
ANR	1322291	ArrayIndexing	bin -> shdr [ i ]		1322102	0					
ANR	1322292	PtrMemberAccess	bin -> shdr		1322102	0					
ANR	1322293	Identifier	bin		1322102	0					
ANR	1322294	Identifier	shdr		1322102	1					
ANR	1322295	Identifier	i		1322102	1					
ANR	1322296	Identifier	sh_type		1322102	1					
ANR	1322297	CompoundStatement		28:32:589:589	1322102	1					
ANR	1322298	Label	case SHT_GNU_verdef :	1145:2:35278:35297	1322102	0	True				
ANR	1322299	Identifier	SHT_GNU_verdef		1322102	0					
ANR	1322300	ExpressionStatement	"sdb = store_versioninfo_gnu_verdef ( bin , & bin -> shdr [ i ] , left )"	1146:3:35302:35363	1322102	1	True				
ANR	1322301	AssignmentExpression	"sdb = store_versioninfo_gnu_verdef ( bin , & bin -> shdr [ i ] , left )"		1322102	0		=			
ANR	1322302	Identifier	sdb		1322102	0					
ANR	1322303	CallExpression	"store_versioninfo_gnu_verdef ( bin , & bin -> shdr [ i ] , left )"		1322102	1					
ANR	1322304	Callee	store_versioninfo_gnu_verdef		1322102	0					
ANR	1322305	Identifier	store_versioninfo_gnu_verdef		1322102	0					
ANR	1322306	ArgumentList	bin		1322102	1					
ANR	1322307	Argument	bin		1322102	0					
ANR	1322308	Identifier	bin		1322102	0					
ANR	1322309	Argument	& bin -> shdr [ i ]		1322102	1					
ANR	1322310	UnaryOperationExpression	& bin -> shdr [ i ]		1322102	0					
ANR	1322311	UnaryOperator	&		1322102	0					
ANR	1322312	ArrayIndexing	bin -> shdr [ i ]		1322102	1					
ANR	1322313	PtrMemberAccess	bin -> shdr		1322102	0					
ANR	1322314	Identifier	bin		1322102	0					
ANR	1322315	Identifier	shdr		1322102	1					
ANR	1322316	Identifier	i		1322102	1					
ANR	1322317	Argument	left		1322102	2					
ANR	1322318	Identifier	left		1322102	0					
ANR	1322319	ExpressionStatement	"snprintf ( key , sizeof ( key ) , ""verdef%d"" , num_verdef ++ )"	1147:3:35368:35422	1322102	2	True				
ANR	1322320	CallExpression	"snprintf ( key , sizeof ( key ) , ""verdef%d"" , num_verdef ++ )"		1322102	0					
ANR	1322321	Callee	snprintf		1322102	0					
ANR	1322322	Identifier	snprintf		1322102	0					
ANR	1322323	ArgumentList	key		1322102	1					
ANR	1322324	Argument	key		1322102	0					
ANR	1322325	Identifier	key		1322102	0					
ANR	1322326	Argument	sizeof ( key )		1322102	1					
ANR	1322327	SizeofExpression	sizeof ( key )		1322102	0					
ANR	1322328	Sizeof	sizeof		1322102	0					
ANR	1322329	SizeofOperand	key		1322102	1					
ANR	1322330	Argument	"""verdef%d"""		1322102	2					
ANR	1322331	PrimaryExpression	"""verdef%d"""		1322102	0					
ANR	1322332	Argument	num_verdef ++		1322102	3					
ANR	1322333	PostIncDecOperationExpression	num_verdef ++		1322102	0					
ANR	1322334	Identifier	num_verdef		1322102	0					
ANR	1322335	IncDec	++		1322102	1					
ANR	1322336	ExpressionStatement	"sdb_ns_set ( sdb_versioninfo , key , sdb )"	1148:3:35427:35465	1322102	3	True				
ANR	1322337	CallExpression	"sdb_ns_set ( sdb_versioninfo , key , sdb )"		1322102	0					
ANR	1322338	Callee	sdb_ns_set		1322102	0					
ANR	1322339	Identifier	sdb_ns_set		1322102	0					
ANR	1322340	ArgumentList	sdb_versioninfo		1322102	1					
ANR	1322341	Argument	sdb_versioninfo		1322102	0					
ANR	1322342	Identifier	sdb_versioninfo		1322102	0					
ANR	1322343	Argument	key		1322102	1					
ANR	1322344	Identifier	key		1322102	0					
ANR	1322345	Argument	sdb		1322102	2					
ANR	1322346	Identifier	sdb		1322102	0					
ANR	1322347	BreakStatement	break ;	1149:3:35470:35475	1322102	4	True				
ANR	1322348	Label	case SHT_GNU_verneed :	1150:2:35479:35499	1322102	5	True				
ANR	1322349	Identifier	SHT_GNU_verneed		1322102	0					
ANR	1322350	ExpressionStatement	"sdb = store_versioninfo_gnu_verneed ( bin , & bin -> shdr [ i ] , left )"	1151:3:35504:35566	1322102	6	True				
ANR	1322351	AssignmentExpression	"sdb = store_versioninfo_gnu_verneed ( bin , & bin -> shdr [ i ] , left )"		1322102	0		=			
ANR	1322352	Identifier	sdb		1322102	0					
ANR	1322353	CallExpression	"store_versioninfo_gnu_verneed ( bin , & bin -> shdr [ i ] , left )"		1322102	1					
ANR	1322354	Callee	store_versioninfo_gnu_verneed		1322102	0					
ANR	1322355	Identifier	store_versioninfo_gnu_verneed		1322102	0					
ANR	1322356	ArgumentList	bin		1322102	1					
ANR	1322357	Argument	bin		1322102	0					
ANR	1322358	Identifier	bin		1322102	0					
ANR	1322359	Argument	& bin -> shdr [ i ]		1322102	1					
ANR	1322360	UnaryOperationExpression	& bin -> shdr [ i ]		1322102	0					
ANR	1322361	UnaryOperator	&		1322102	0					
ANR	1322362	ArrayIndexing	bin -> shdr [ i ]		1322102	1					
ANR	1322363	PtrMemberAccess	bin -> shdr		1322102	0					
ANR	1322364	Identifier	bin		1322102	0					
ANR	1322365	Identifier	shdr		1322102	1					
ANR	1322366	Identifier	i		1322102	1					
ANR	1322367	Argument	left		1322102	2					
ANR	1322368	Identifier	left		1322102	0					
ANR	1322369	ExpressionStatement	"snprintf ( key , sizeof ( key ) , ""verneed%d"" , num_verneed ++ )"	1152:3:35571:35627	1322102	7	True				
ANR	1322370	CallExpression	"snprintf ( key , sizeof ( key ) , ""verneed%d"" , num_verneed ++ )"		1322102	0					
ANR	1322371	Callee	snprintf		1322102	0					
ANR	1322372	Identifier	snprintf		1322102	0					
ANR	1322373	ArgumentList	key		1322102	1					
ANR	1322374	Argument	key		1322102	0					
ANR	1322375	Identifier	key		1322102	0					
ANR	1322376	Argument	sizeof ( key )		1322102	1					
ANR	1322377	SizeofExpression	sizeof ( key )		1322102	0					
ANR	1322378	Sizeof	sizeof		1322102	0					
ANR	1322379	SizeofOperand	key		1322102	1					
ANR	1322380	Argument	"""verneed%d"""		1322102	2					
ANR	1322381	PrimaryExpression	"""verneed%d"""		1322102	0					
ANR	1322382	Argument	num_verneed ++		1322102	3					
ANR	1322383	PostIncDecOperationExpression	num_verneed ++		1322102	0					
ANR	1322384	Identifier	num_verneed		1322102	0					
ANR	1322385	IncDec	++		1322102	1					
ANR	1322386	ExpressionStatement	"sdb_ns_set ( sdb_versioninfo , key , sdb )"	1153:3:35632:35670	1322102	8	True				
ANR	1322387	CallExpression	"sdb_ns_set ( sdb_versioninfo , key , sdb )"		1322102	0					
ANR	1322388	Callee	sdb_ns_set		1322102	0					
ANR	1322389	Identifier	sdb_ns_set		1322102	0					
ANR	1322390	ArgumentList	sdb_versioninfo		1322102	1					
ANR	1322391	Argument	sdb_versioninfo		1322102	0					
ANR	1322392	Identifier	sdb_versioninfo		1322102	0					
ANR	1322393	Argument	key		1322102	1					
ANR	1322394	Identifier	key		1322102	0					
ANR	1322395	Argument	sdb		1322102	2					
ANR	1322396	Identifier	sdb		1322102	0					
ANR	1322397	BreakStatement	break ;	1154:3:35675:35680	1322102	9	True				
ANR	1322398	Label	case SHT_GNU_versym :	1155:2:35684:35703	1322102	10	True				
ANR	1322399	Identifier	SHT_GNU_versym		1322102	0					
ANR	1322400	ExpressionStatement	"sdb = store_versioninfo_gnu_versym ( bin , & bin -> shdr [ i ] , left )"	1156:3:35708:35769	1322102	11	True				
ANR	1322401	AssignmentExpression	"sdb = store_versioninfo_gnu_versym ( bin , & bin -> shdr [ i ] , left )"		1322102	0		=			
ANR	1322402	Identifier	sdb		1322102	0					
ANR	1322403	CallExpression	"store_versioninfo_gnu_versym ( bin , & bin -> shdr [ i ] , left )"		1322102	1					
ANR	1322404	Callee	store_versioninfo_gnu_versym		1322102	0					
ANR	1322405	Identifier	store_versioninfo_gnu_versym		1322102	0					
ANR	1322406	ArgumentList	bin		1322102	1					
ANR	1322407	Argument	bin		1322102	0					
ANR	1322408	Identifier	bin		1322102	0					
ANR	1322409	Argument	& bin -> shdr [ i ]		1322102	1					
ANR	1322410	UnaryOperationExpression	& bin -> shdr [ i ]		1322102	0					
ANR	1322411	UnaryOperator	&		1322102	0					
ANR	1322412	ArrayIndexing	bin -> shdr [ i ]		1322102	1					
ANR	1322413	PtrMemberAccess	bin -> shdr		1322102	0					
ANR	1322414	Identifier	bin		1322102	0					
ANR	1322415	Identifier	shdr		1322102	1					
ANR	1322416	Identifier	i		1322102	1					
ANR	1322417	Argument	left		1322102	2					
ANR	1322418	Identifier	left		1322102	0					
ANR	1322419	ExpressionStatement	"snprintf ( key , sizeof ( key ) , ""versym%d"" , num_versym ++ )"	1157:3:35774:35828	1322102	12	True				
ANR	1322420	CallExpression	"snprintf ( key , sizeof ( key ) , ""versym%d"" , num_versym ++ )"		1322102	0					
ANR	1322421	Callee	snprintf		1322102	0					
ANR	1322422	Identifier	snprintf		1322102	0					
ANR	1322423	ArgumentList	key		1322102	1					
ANR	1322424	Argument	key		1322102	0					
ANR	1322425	Identifier	key		1322102	0					
ANR	1322426	Argument	sizeof ( key )		1322102	1					
ANR	1322427	SizeofExpression	sizeof ( key )		1322102	0					
ANR	1322428	Sizeof	sizeof		1322102	0					
ANR	1322429	SizeofOperand	key		1322102	1					
ANR	1322430	Argument	"""versym%d"""		1322102	2					
ANR	1322431	PrimaryExpression	"""versym%d"""		1322102	0					
ANR	1322432	Argument	num_versym ++		1322102	3					
ANR	1322433	PostIncDecOperationExpression	num_versym ++		1322102	0					
ANR	1322434	Identifier	num_versym		1322102	0					
ANR	1322435	IncDec	++		1322102	1					
ANR	1322436	ExpressionStatement	"sdb_ns_set ( sdb_versioninfo , key , sdb )"	1158:3:35833:35871	1322102	13	True				
ANR	1322437	CallExpression	"sdb_ns_set ( sdb_versioninfo , key , sdb )"		1322102	0					
ANR	1322438	Callee	sdb_ns_set		1322102	0					
ANR	1322439	Identifier	sdb_ns_set		1322102	0					
ANR	1322440	ArgumentList	sdb_versioninfo		1322102	1					
ANR	1322441	Argument	sdb_versioninfo		1322102	0					
ANR	1322442	Identifier	sdb_versioninfo		1322102	0					
ANR	1322443	Argument	key		1322102	1					
ANR	1322444	Identifier	key		1322102	0					
ANR	1322445	Argument	sdb		1322102	2					
ANR	1322446	Identifier	sdb		1322102	0					
ANR	1322447	BreakStatement	break ;	1159:3:35876:35881	1322102	14	True				
ANR	1322448	ReturnStatement	return sdb_versioninfo ;	1163:1:35892:35914	1322102	8	True				
ANR	1322449	Identifier	sdb_versioninfo		1322102	0					
ANR	1322450	ReturnType	static Sdb *		1322102	1					
ANR	1322451	Identifier	store_versioninfo		1322102	2					
ANR	1322452	ParameterList	ELFOBJ * bin		1322102	3					
ANR	1322453	Parameter	ELFOBJ * bin	1117:30:34671:34681	1322102	0	True				
ANR	1322454	ParameterType	ELFOBJ *		1322102	0					
ANR	1322455	Identifier	bin		1322102	1					
ANR	1322456	CFGEntryNode	ENTRY		1322102		True				
ANR	1322457	CFGExitNode	EXIT		1322102		True				
ANR	1322458	Symbol	bin -> ehdr . e_shnum		1322102						
ANR	1322459	Symbol	bin -> size		1322102						
ANR	1322460	Symbol	bin		1322102						
ANR	1322461	Symbol	* bin -> shdr		1322102						
ANR	1322462	Symbol	* bin		1322102						
ANR	1322463	Symbol	store_versioninfo_gnu_verdef		1322102						
ANR	1322464	Symbol	store_versioninfo_gnu_versym		1322102						
ANR	1322465	Symbol	bin -> ehdr		1322102						
ANR	1322466	Symbol	num_versym		1322102						
ANR	1322467	Symbol	* * bin		1322102						
ANR	1322468	Symbol	sdb_versioninfo		1322102						
ANR	1322469	Symbol	store_versioninfo_gnu_verneed		1322102						
ANR	1322470	Symbol	num_verdef		1322102						
ANR	1322471	Symbol	key		1322102						
ANR	1322472	Symbol	Elf_		1322102						
ANR	1322473	Symbol	sdb_new0		1322102						
ANR	1322474	Symbol	NULL		1322102						
ANR	1322475	Symbol	Shdr		1322102						
ANR	1322476	Symbol	bin -> shdr [ i ] . sh_size		1322102						
ANR	1322477	Symbol	i		1322102						
ANR	1322478	Symbol	R_MIN		1322102						
ANR	1322479	Symbol	bin -> shdr		1322102						
ANR	1322480	Symbol	sdb		1322102						
ANR	1322481	Symbol	* i		1322102						
ANR	1322482	Symbol	size		1322102						
ANR	1322483	Symbol	left		1322102						
ANR	1322484	Symbol	bin -> shdr [ i ] . sh_type		1322102						
ANR	1322485	Symbol	num_verneed		1322102						
ANR	1322486	Function	init_dynstr	1166:0:35919:37040							
ANR	1322487	FunctionDef	init_dynstr (ELFOBJ * bin)		1322486	0					
ANR	1322488	CompoundStatement		1166:37:35956:37040	1322486	0					
ANR	1322489	IdentifierDeclStatement	"int i , r ;"	1167:1:35959:35967	1322486	0	True				
ANR	1322490	IdentifierDecl	i		1322486	0					
ANR	1322491	IdentifierDeclType	int		1322486	0					
ANR	1322492	Identifier	i		1322486	1					
ANR	1322493	IdentifierDecl	r		1322486	1					
ANR	1322494	IdentifierDeclType	int		1322486	0					
ANR	1322495	Identifier	r		1322486	1					
ANR	1322496	IdentifierDeclStatement	const char * section_name = NULL ;	1168:1:35970:36001	1322486	1	True				
ANR	1322497	IdentifierDecl	* section_name = NULL		1322486	0					
ANR	1322498	IdentifierDeclType	const char *		1322486	0					
ANR	1322499	Identifier	section_name		1322486	1					
ANR	1322500	AssignmentExpression	* section_name = NULL		1322486	2		=			
ANR	1322501	Identifier	NULL		1322486	0					
ANR	1322502	Identifier	NULL		1322486	1					
ANR	1322503	IfStatement	if ( ! bin || ! bin -> shdr )		1322486	2					
ANR	1322504	Condition	! bin || ! bin -> shdr	1169:5:36008:36025	1322486	0	True				
ANR	1322505	OrExpression	! bin || ! bin -> shdr		1322486	0		||			
ANR	1322506	UnaryOperationExpression	! bin		1322486	0					
ANR	1322507	UnaryOperator	!		1322486	0					
ANR	1322508	Identifier	bin		1322486	1					
ANR	1322509	UnaryOperationExpression	! bin -> shdr		1322486	1					
ANR	1322510	UnaryOperator	!		1322486	0					
ANR	1322511	PtrMemberAccess	bin -> shdr		1322486	1					
ANR	1322512	Identifier	bin		1322486	0					
ANR	1322513	Identifier	shdr		1322486	1					
ANR	1322514	CompoundStatement		4:25:71:71	1322486	1					
ANR	1322515	ReturnStatement	return false ;	1170:2:36032:36044	1322486	0	True				
ANR	1322516	Identifier	false		1322486	0					
ANR	1322517	IfStatement	if ( ! bin -> shstrtab )		1322486	3					
ANR	1322518	Condition	! bin -> shstrtab	1172:5:36054:36067	1322486	0	True				
ANR	1322519	UnaryOperationExpression	! bin -> shstrtab		1322486	0					
ANR	1322520	UnaryOperator	!		1322486	0					
ANR	1322521	PtrMemberAccess	bin -> shstrtab		1322486	1					
ANR	1322522	Identifier	bin		1322486	0					
ANR	1322523	Identifier	shstrtab		1322486	1					
ANR	1322524	CompoundStatement		7:21:113:113	1322486	1					
ANR	1322525	ReturnStatement	return false ;	1173:2:36074:36086	1322486	0	True				
ANR	1322526	Identifier	false		1322486	0					
ANR	1322527	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; ++ i )		1322486	4					
ANR	1322528	ForInit	i = 0 ;	1175:6:36097:36102	1322486	0	True				
ANR	1322529	AssignmentExpression	i = 0		1322486	0		=			
ANR	1322530	Identifier	i		1322486	0					
ANR	1322531	PrimaryExpression	0		1322486	1					
ANR	1322532	Condition	i < bin -> ehdr . e_shnum	1175:13:36104:36124	1322486	1	True				
ANR	1322533	RelationalExpression	i < bin -> ehdr . e_shnum		1322486	0		<			
ANR	1322534	Identifier	i		1322486	0					
ANR	1322535	MemberAccess	bin -> ehdr . e_shnum		1322486	1					
ANR	1322536	PtrMemberAccess	bin -> ehdr		1322486	0					
ANR	1322537	Identifier	bin		1322486	0					
ANR	1322538	Identifier	ehdr		1322486	1					
ANR	1322539	Identifier	e_shnum		1322486	1					
ANR	1322540	UnaryExpression	++ i	1175:36:36127:36129	1322486	2	True				
ANR	1322541	IncDec	++		1322486	0					
ANR	1322542	Identifier	i		1322486	1					
ANR	1322543	CompoundStatement		10:41:175:175	1322486	3					
ANR	1322544	IfStatement	if ( bin -> shdr [ i ] . sh_name > bin -> shstrtab_size )		1322486	0					
ANR	1322545	Condition	bin -> shdr [ i ] . sh_name > bin -> shstrtab_size	1176:6:36140:36180	1322486	0	True				
ANR	1322546	RelationalExpression	bin -> shdr [ i ] . sh_name > bin -> shstrtab_size		1322486	0		>			
ANR	1322547	MemberAccess	bin -> shdr [ i ] . sh_name		1322486	0					
ANR	1322548	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322549	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322550	Identifier	bin		1322486	0					
ANR	1322551	Identifier	shdr		1322486	1					
ANR	1322552	Identifier	i		1322486	1					
ANR	1322553	Identifier	sh_name		1322486	1					
ANR	1322554	PtrMemberAccess	bin -> shstrtab_size		1322486	1					
ANR	1322555	Identifier	bin		1322486	0					
ANR	1322556	Identifier	shstrtab_size		1322486	1					
ANR	1322557	CompoundStatement		11:49:226:226	1322486	1					
ANR	1322558	ReturnStatement	return false ;	1177:3:36188:36200	1322486	0	True				
ANR	1322559	Identifier	false		1322486	0					
ANR	1322560	ExpressionStatement	section_name = & bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]	1179:2:36208:36259	1322486	1	True				
ANR	1322561	AssignmentExpression	section_name = & bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		1322486	0		=			
ANR	1322562	Identifier	section_name		1322486	0					
ANR	1322563	UnaryOperationExpression	& bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		1322486	1					
ANR	1322564	UnaryOperator	&		1322486	0					
ANR	1322565	ArrayIndexing	bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		1322486	1					
ANR	1322566	PtrMemberAccess	bin -> shstrtab		1322486	0					
ANR	1322567	Identifier	bin		1322486	0					
ANR	1322568	Identifier	shstrtab		1322486	1					
ANR	1322569	MemberAccess	bin -> shdr [ i ] . sh_name		1322486	1					
ANR	1322570	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322571	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322572	Identifier	bin		1322486	0					
ANR	1322573	Identifier	shdr		1322486	1					
ANR	1322574	Identifier	i		1322486	1					
ANR	1322575	Identifier	sh_name		1322486	1					
ANR	1322576	IfStatement	"if ( bin -> shdr [ i ] . sh_type == SHT_STRTAB && ! strcmp ( section_name , "".dynstr"" ) )"		1322486	2					
ANR	1322577	Condition	"bin -> shdr [ i ] . sh_type == SHT_STRTAB && ! strcmp ( section_name , "".dynstr"" )"	1180:6:36267:36337	1322486	0	True				
ANR	1322578	AndExpression	"bin -> shdr [ i ] . sh_type == SHT_STRTAB && ! strcmp ( section_name , "".dynstr"" )"		1322486	0		&&			
ANR	1322579	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_STRTAB		1322486	0		==			
ANR	1322580	MemberAccess	bin -> shdr [ i ] . sh_type		1322486	0					
ANR	1322581	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322582	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322583	Identifier	bin		1322486	0					
ANR	1322584	Identifier	shdr		1322486	1					
ANR	1322585	Identifier	i		1322486	1					
ANR	1322586	Identifier	sh_type		1322486	1					
ANR	1322587	Identifier	SHT_STRTAB		1322486	1					
ANR	1322588	UnaryOperationExpression	"! strcmp ( section_name , "".dynstr"" )"		1322486	1					
ANR	1322589	UnaryOperator	!		1322486	0					
ANR	1322590	CallExpression	"strcmp ( section_name , "".dynstr"" )"		1322486	1					
ANR	1322591	Callee	strcmp		1322486	0					
ANR	1322592	Identifier	strcmp		1322486	0					
ANR	1322593	ArgumentList	section_name		1322486	1					
ANR	1322594	Argument	section_name		1322486	0					
ANR	1322595	Identifier	section_name		1322486	0					
ANR	1322596	Argument	""".dynstr"""		1322486	1					
ANR	1322597	PrimaryExpression	""".dynstr"""		1322486	0					
ANR	1322598	CompoundStatement		15:79:383:383	1322486	1					
ANR	1322599	IfStatement	"if ( ! ( bin -> dynstr = ( char * ) calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) ) ) )"		1322486	0					
ANR	1322600	Condition	"! ( bin -> dynstr = ( char * ) calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) ) )"	1181:7:36349:36421	1322486	0	True				
ANR	1322601	UnaryOperationExpression	"! ( bin -> dynstr = ( char * ) calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) ) )"		1322486	0					
ANR	1322602	UnaryOperator	!		1322486	0					
ANR	1322603	AssignmentExpression	"bin -> dynstr = ( char * ) calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) )"		1322486	1		=			
ANR	1322604	PtrMemberAccess	bin -> dynstr		1322486	0					
ANR	1322605	Identifier	bin		1322486	0					
ANR	1322606	Identifier	dynstr		1322486	1					
ANR	1322607	CastExpression	"( char * ) calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) )"		1322486	1					
ANR	1322608	CastTarget	char *		1322486	0					
ANR	1322609	CallExpression	"calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) )"		1322486	1					
ANR	1322610	Callee	calloc		1322486	0					
ANR	1322611	Identifier	calloc		1322486	0					
ANR	1322612	ArgumentList	bin -> shdr [ i ] . sh_size + 1		1322486	1					
ANR	1322613	Argument	bin -> shdr [ i ] . sh_size + 1		1322486	0					
ANR	1322614	AdditiveExpression	bin -> shdr [ i ] . sh_size + 1		1322486	0		+			
ANR	1322615	MemberAccess	bin -> shdr [ i ] . sh_size		1322486	0					
ANR	1322616	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322617	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322618	Identifier	bin		1322486	0					
ANR	1322619	Identifier	shdr		1322486	1					
ANR	1322620	Identifier	i		1322486	1					
ANR	1322621	Identifier	sh_size		1322486	1					
ANR	1322622	PrimaryExpression	1		1322486	1					
ANR	1322623	Argument	sizeof ( char )		1322486	1					
ANR	1322624	SizeofExpression	sizeof ( char )		1322486	0					
ANR	1322625	Sizeof	sizeof		1322486	0					
ANR	1322626	SizeofOperand	char		1322486	1					
ANR	1322627	CompoundStatement		16:82:467:467	1322486	1					
ANR	1322628	ExpressionStatement	"bprintf ( ""Cannot allocate memory for dynamic strings\\n"" )"	1182:4:36430:36485	1322486	0	True				
ANR	1322629	CallExpression	"bprintf ( ""Cannot allocate memory for dynamic strings\\n"" )"		1322486	0					
ANR	1322630	Callee	bprintf		1322486	0					
ANR	1322631	Identifier	bprintf		1322486	0					
ANR	1322632	ArgumentList	"""Cannot allocate memory for dynamic strings\\n"""		1322486	1					
ANR	1322633	Argument	"""Cannot allocate memory for dynamic strings\\n"""		1322486	0					
ANR	1322634	PrimaryExpression	"""Cannot allocate memory for dynamic strings\\n"""		1322486	0					
ANR	1322635	ReturnStatement	return false ;	1183:4:36491:36503	1322486	1	True				
ANR	1322636	Identifier	false		1322486	0					
ANR	1322637	IfStatement	if ( bin -> shdr [ i ] . sh_offset > bin -> size )		1322486	1					
ANR	1322638	Condition	bin -> shdr [ i ] . sh_offset > bin -> size	1185:7:36517:36550	1322486	0	True				
ANR	1322639	RelationalExpression	bin -> shdr [ i ] . sh_offset > bin -> size		1322486	0		>			
ANR	1322640	MemberAccess	bin -> shdr [ i ] . sh_offset		1322486	0					
ANR	1322641	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322642	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322643	Identifier	bin		1322486	0					
ANR	1322644	Identifier	shdr		1322486	1					
ANR	1322645	Identifier	i		1322486	1					
ANR	1322646	Identifier	sh_offset		1322486	1					
ANR	1322647	PtrMemberAccess	bin -> size		1322486	1					
ANR	1322648	Identifier	bin		1322486	0					
ANR	1322649	Identifier	size		1322486	1					
ANR	1322650	CompoundStatement		20:43:596:596	1322486	1					
ANR	1322651	ReturnStatement	return false ;	1186:4:36559:36571	1322486	0	True				
ANR	1322652	Identifier	false		1322486	0					
ANR	1322653	IfStatement	if ( bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size > bin -> size )		1322486	2					
ANR	1322654	Condition	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size > bin -> size	1188:7:36585:36641	1322486	0	True				
ANR	1322655	RelationalExpression	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size > bin -> size		1322486	0		>			
ANR	1322656	AdditiveExpression	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size		1322486	0		+			
ANR	1322657	MemberAccess	bin -> shdr [ i ] . sh_offset		1322486	0					
ANR	1322658	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322659	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322660	Identifier	bin		1322486	0					
ANR	1322661	Identifier	shdr		1322486	1					
ANR	1322662	Identifier	i		1322486	1					
ANR	1322663	Identifier	sh_offset		1322486	1					
ANR	1322664	MemberAccess	bin -> shdr [ i ] . sh_size		1322486	1					
ANR	1322665	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322666	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322667	Identifier	bin		1322486	0					
ANR	1322668	Identifier	shdr		1322486	1					
ANR	1322669	Identifier	i		1322486	1					
ANR	1322670	Identifier	sh_size		1322486	1					
ANR	1322671	PtrMemberAccess	bin -> size		1322486	1					
ANR	1322672	Identifier	bin		1322486	0					
ANR	1322673	Identifier	size		1322486	1					
ANR	1322674	CompoundStatement		23:66:687:687	1322486	1					
ANR	1322675	ReturnStatement	return false ;	1189:4:36650:36662	1322486	0	True				
ANR	1322676	Identifier	false		1322486	0					
ANR	1322677	IfStatement	if ( bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size < bin -> shdr [ i ] . sh_size )		1322486	3					
ANR	1322678	Condition	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size < bin -> shdr [ i ] . sh_size	1191:7:36676:36743	1322486	0	True				
ANR	1322679	RelationalExpression	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size < bin -> shdr [ i ] . sh_size		1322486	0		<			
ANR	1322680	AdditiveExpression	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size		1322486	0		+			
ANR	1322681	MemberAccess	bin -> shdr [ i ] . sh_offset		1322486	0					
ANR	1322682	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322683	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322684	Identifier	bin		1322486	0					
ANR	1322685	Identifier	shdr		1322486	1					
ANR	1322686	Identifier	i		1322486	1					
ANR	1322687	Identifier	sh_offset		1322486	1					
ANR	1322688	MemberAccess	bin -> shdr [ i ] . sh_size		1322486	1					
ANR	1322689	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322690	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322691	Identifier	bin		1322486	0					
ANR	1322692	Identifier	shdr		1322486	1					
ANR	1322693	Identifier	i		1322486	1					
ANR	1322694	Identifier	sh_size		1322486	1					
ANR	1322695	MemberAccess	bin -> shdr [ i ] . sh_size		1322486	1					
ANR	1322696	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322697	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322698	Identifier	bin		1322486	0					
ANR	1322699	Identifier	shdr		1322486	1					
ANR	1322700	Identifier	i		1322486	1					
ANR	1322701	Identifier	sh_size		1322486	1					
ANR	1322702	CompoundStatement		26:77:789:789	1322486	1					
ANR	1322703	ReturnStatement	return false ;	1192:4:36752:36764	1322486	0	True				
ANR	1322704	Identifier	false		1322486	0					
ANR	1322705	ExpressionStatement	"r = r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset , ( ut8 * ) bin -> dynstr , bin -> shdr [ i ] . sh_size )"	1194:3:36774:36865	1322486	4	True				
ANR	1322706	AssignmentExpression	"r = r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset , ( ut8 * ) bin -> dynstr , bin -> shdr [ i ] . sh_size )"		1322486	0		=			
ANR	1322707	Identifier	r		1322486	0					
ANR	1322708	CallExpression	"r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset , ( ut8 * ) bin -> dynstr , bin -> shdr [ i ] . sh_size )"		1322486	1					
ANR	1322709	Callee	r_buf_read_at		1322486	0					
ANR	1322710	Identifier	r_buf_read_at		1322486	0					
ANR	1322711	ArgumentList	bin -> b		1322486	1					
ANR	1322712	Argument	bin -> b		1322486	0					
ANR	1322713	PtrMemberAccess	bin -> b		1322486	0					
ANR	1322714	Identifier	bin		1322486	0					
ANR	1322715	Identifier	b		1322486	1					
ANR	1322716	Argument	bin -> shdr [ i ] . sh_offset		1322486	1					
ANR	1322717	MemberAccess	bin -> shdr [ i ] . sh_offset		1322486	0					
ANR	1322718	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322719	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322720	Identifier	bin		1322486	0					
ANR	1322721	Identifier	shdr		1322486	1					
ANR	1322722	Identifier	i		1322486	1					
ANR	1322723	Identifier	sh_offset		1322486	1					
ANR	1322724	Argument	( ut8 * ) bin -> dynstr		1322486	2					
ANR	1322725	CastExpression	( ut8 * ) bin -> dynstr		1322486	0					
ANR	1322726	CastTarget	ut8 *		1322486	0					
ANR	1322727	PtrMemberAccess	bin -> dynstr		1322486	1					
ANR	1322728	Identifier	bin		1322486	0					
ANR	1322729	Identifier	dynstr		1322486	1					
ANR	1322730	Argument	bin -> shdr [ i ] . sh_size		1322486	3					
ANR	1322731	MemberAccess	bin -> shdr [ i ] . sh_size		1322486	0					
ANR	1322732	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322733	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322734	Identifier	bin		1322486	0					
ANR	1322735	Identifier	shdr		1322486	1					
ANR	1322736	Identifier	i		1322486	1					
ANR	1322737	Identifier	sh_size		1322486	1					
ANR	1322738	IfStatement	if ( r < 1 )		1322486	5					
ANR	1322739	Condition	r < 1	1195:7:36874:36878	1322486	0	True				
ANR	1322740	RelationalExpression	r < 1		1322486	0		<			
ANR	1322741	Identifier	r		1322486	0					
ANR	1322742	PrimaryExpression	1		1322486	1					
ANR	1322743	CompoundStatement		30:14:924:924	1322486	1					
ANR	1322744	ExpressionStatement	R_FREE ( bin -> dynstr )	1196:4:36887:36907	1322486	0	True				
ANR	1322745	CallExpression	R_FREE ( bin -> dynstr )		1322486	0					
ANR	1322746	Callee	R_FREE		1322486	0					
ANR	1322747	Identifier	R_FREE		1322486	0					
ANR	1322748	ArgumentList	bin -> dynstr		1322486	1					
ANR	1322749	Argument	bin -> dynstr		1322486	0					
ANR	1322750	PtrMemberAccess	bin -> dynstr		1322486	0					
ANR	1322751	Identifier	bin		1322486	0					
ANR	1322752	Identifier	dynstr		1322486	1					
ANR	1322753	ExpressionStatement	bin -> dynstr_size = 0	1197:4:36913:36933	1322486	1	True				
ANR	1322754	AssignmentExpression	bin -> dynstr_size = 0		1322486	0		=			
ANR	1322755	PtrMemberAccess	bin -> dynstr_size		1322486	0					
ANR	1322756	Identifier	bin		1322486	0					
ANR	1322757	Identifier	dynstr_size		1322486	1					
ANR	1322758	PrimaryExpression	0		1322486	1					
ANR	1322759	ReturnStatement	return false ;	1198:4:36939:36951	1322486	2	True				
ANR	1322760	Identifier	false		1322486	0					
ANR	1322761	ExpressionStatement	bin -> dynstr_size = bin -> shdr [ i ] . sh_size	1200:3:36961:37000	1322486	6	True				
ANR	1322762	AssignmentExpression	bin -> dynstr_size = bin -> shdr [ i ] . sh_size		1322486	0		=			
ANR	1322763	PtrMemberAccess	bin -> dynstr_size		1322486	0					
ANR	1322764	Identifier	bin		1322486	0					
ANR	1322765	Identifier	dynstr_size		1322486	1					
ANR	1322766	MemberAccess	bin -> shdr [ i ] . sh_size		1322486	1					
ANR	1322767	ArrayIndexing	bin -> shdr [ i ]		1322486	0					
ANR	1322768	PtrMemberAccess	bin -> shdr		1322486	0					
ANR	1322769	Identifier	bin		1322486	0					
ANR	1322770	Identifier	shdr		1322486	1					
ANR	1322771	Identifier	i		1322486	1					
ANR	1322772	Identifier	sh_size		1322486	1					
ANR	1322773	ReturnStatement	return true ;	1201:3:37005:37016	1322486	7	True				
ANR	1322774	Identifier	true		1322486	0					
ANR	1322775	ReturnStatement	return false ;	1204:1:37026:37038	1322486	5	True				
ANR	1322776	Identifier	false		1322486	0					
ANR	1322777	ReturnType	static bool		1322486	1					
ANR	1322778	Identifier	init_dynstr		1322486	2					
ANR	1322779	ParameterList	ELFOBJ * bin		1322486	3					
ANR	1322780	Parameter	ELFOBJ * bin	1166:24:35943:35953	1322486	0	True				
ANR	1322781	ParameterType	ELFOBJ *		1322486	0					
ANR	1322782	Identifier	bin		1322486	1					
ANR	1322783	CFGEntryNode	ENTRY		1322486		True				
ANR	1322784	CFGExitNode	EXIT		1322486		True				
ANR	1322785	Symbol	bin -> ehdr . e_shnum		1322486						
ANR	1322786	Symbol	bin -> size		1322486						
ANR	1322787	Symbol	bin -> b		1322486						
ANR	1322788	Symbol	bin		1322486						
ANR	1322789	Symbol	bin -> shstrtab_size		1322486						
ANR	1322790	Symbol	bin -> shstrtab		1322486						
ANR	1322791	Symbol	* bin -> shdr		1322486						
ANR	1322792	Symbol	calloc		1322486						
ANR	1322793	Symbol	* bin		1322486						
ANR	1322794	Symbol	bin -> ehdr		1322486						
ANR	1322795	Symbol	* * bin		1322486						
ANR	1322796	Symbol	bin -> dynstr		1322486						
ANR	1322797	Symbol	strcmp		1322486						
ANR	1322798	Symbol	bin -> dynstr_size		1322486						
ANR	1322799	Symbol	NULL		1322486						
ANR	1322800	Symbol	section_name		1322486						
ANR	1322801	Symbol	bin -> shdr [ i ] . sh_size		1322486						
ANR	1322802	Symbol	false		1322486						
ANR	1322803	Symbol	i		1322486						
ANR	1322804	Symbol	bin -> shdr [ i ] . sh_name		1322486						
ANR	1322805	Symbol	SHT_STRTAB		1322486						
ANR	1322806	Symbol	bin -> shdr		1322486						
ANR	1322807	Symbol	bin -> shdr [ i ] . sh_offset		1322486						
ANR	1322808	Symbol	r		1322486						
ANR	1322809	Symbol	* i		1322486						
ANR	1322810	Symbol	r_buf_read_at		1322486						
ANR	1322811	Symbol	true		1322486						
ANR	1322812	Symbol	bin -> shdr [ i ] . sh_type		1322486						
ANR	1322813	Function	elf_init	1207:0:37043:38064							
ANR	1322814	FunctionDef	elf_init (ELFOBJ * bin)		1322813	0					
ANR	1322815	CompoundStatement		1207:34:37077:38064	1322813	0					
ANR	1322816	IfStatement	if ( ! init_ehdr ( bin ) )		1322813	0					
ANR	1322817	Condition	! init_ehdr ( bin )	1209:5:37109:37124	1322813	0	True				
ANR	1322818	UnaryOperationExpression	! init_ehdr ( bin )		1322813	0					
ANR	1322819	UnaryOperator	!		1322813	0					
ANR	1322820	CallExpression	init_ehdr ( bin )		1322813	1					
ANR	1322821	Callee	init_ehdr		1322813	0					
ANR	1322822	Identifier	init_ehdr		1322813	0					
ANR	1322823	ArgumentList	bin		1322813	1					
ANR	1322824	Argument	bin		1322813	0					
ANR	1322825	Identifier	bin		1322813	0					
ANR	1322826	CompoundStatement		3:23:49:49	1322813	1					
ANR	1322827	ReturnStatement	return false ;	1210:2:37131:37143	1322813	0	True				
ANR	1322828	Identifier	false		1322813	0					
ANR	1322829	IfStatement	if ( ! init_phdr ( bin ) && ! is_bin_etrel ( bin ) )		1322813	1					
ANR	1322830	Condition	! init_phdr ( bin ) && ! is_bin_etrel ( bin )	1212:5:37153:37191	1322813	0	True				
ANR	1322831	AndExpression	! init_phdr ( bin ) && ! is_bin_etrel ( bin )		1322813	0		&&			
ANR	1322832	UnaryOperationExpression	! init_phdr ( bin )		1322813	0					
ANR	1322833	UnaryOperator	!		1322813	0					
ANR	1322834	CallExpression	init_phdr ( bin )		1322813	1					
ANR	1322835	Callee	init_phdr		1322813	0					
ANR	1322836	Identifier	init_phdr		1322813	0					
ANR	1322837	ArgumentList	bin		1322813	1					
ANR	1322838	Argument	bin		1322813	0					
ANR	1322839	Identifier	bin		1322813	0					
ANR	1322840	UnaryOperationExpression	! is_bin_etrel ( bin )		1322813	1					
ANR	1322841	UnaryOperator	!		1322813	0					
ANR	1322842	CallExpression	is_bin_etrel ( bin )		1322813	1					
ANR	1322843	Callee	is_bin_etrel		1322813	0					
ANR	1322844	Identifier	is_bin_etrel		1322813	0					
ANR	1322845	ArgumentList	bin		1322813	1					
ANR	1322846	Argument	bin		1322813	0					
ANR	1322847	Identifier	bin		1322813	0					
ANR	1322848	CompoundStatement		6:46:116:116	1322813	1					
ANR	1322849	ExpressionStatement	"bprintf ( ""Cannot initialize program headers\\n"" )"	1213:2:37198:37245	1322813	0	True				
ANR	1322850	CallExpression	"bprintf ( ""Cannot initialize program headers\\n"" )"		1322813	0					
ANR	1322851	Callee	bprintf		1322813	0					
ANR	1322852	Identifier	bprintf		1322813	0					
ANR	1322853	ArgumentList	"""Cannot initialize program headers\\n"""		1322813	1					
ANR	1322854	Argument	"""Cannot initialize program headers\\n"""		1322813	0					
ANR	1322855	PrimaryExpression	"""Cannot initialize program headers\\n"""		1322813	0					
ANR	1322856	IfStatement	if ( bin -> ehdr . e_type != ET_CORE )		1322813	2					
ANR	1322857	Condition	bin -> ehdr . e_type != ET_CORE	1215:5:37255:37281	1322813	0	True				
ANR	1322858	EqualityExpression	bin -> ehdr . e_type != ET_CORE		1322813	0		!=			
ANR	1322859	MemberAccess	bin -> ehdr . e_type		1322813	0					
ANR	1322860	PtrMemberAccess	bin -> ehdr		1322813	0					
ANR	1322861	Identifier	bin		1322813	0					
ANR	1322862	Identifier	ehdr		1322813	1					
ANR	1322863	Identifier	e_type		1322813	1					
ANR	1322864	Identifier	ET_CORE		1322813	1					
ANR	1322865	CompoundStatement		9:34:206:206	1322813	1					
ANR	1322866	IfStatement	if ( ! init_shdr ( bin ) )		1322813	0					
ANR	1322867	Condition	! init_shdr ( bin )	1216:6:37292:37307	1322813	0	True				
ANR	1322868	UnaryOperationExpression	! init_shdr ( bin )		1322813	0					
ANR	1322869	UnaryOperator	!		1322813	0					
ANR	1322870	CallExpression	init_shdr ( bin )		1322813	1					
ANR	1322871	Callee	init_shdr		1322813	0					
ANR	1322872	Identifier	init_shdr		1322813	0					
ANR	1322873	ArgumentList	bin		1322813	1					
ANR	1322874	Argument	bin		1322813	0					
ANR	1322875	Identifier	bin		1322813	0					
ANR	1322876	CompoundStatement		10:24:232:232	1322813	1					
ANR	1322877	ExpressionStatement	"bprintf ( ""Cannot initialize section headers\\n"" )"	1217:3:37315:37362	1322813	0	True				
ANR	1322878	CallExpression	"bprintf ( ""Cannot initialize section headers\\n"" )"		1322813	0					
ANR	1322879	Callee	bprintf		1322813	0					
ANR	1322880	Identifier	bprintf		1322813	0					
ANR	1322881	ArgumentList	"""Cannot initialize section headers\\n"""		1322813	1					
ANR	1322882	Argument	"""Cannot initialize section headers\\n"""		1322813	0					
ANR	1322883	PrimaryExpression	"""Cannot initialize section headers\\n"""		1322813	0					
ANR	1322884	IfStatement	if ( ! init_strtab ( bin ) )		1322813	1					
ANR	1322885	Condition	! init_strtab ( bin )	1219:6:37374:37391	1322813	0	True				
ANR	1322886	UnaryOperationExpression	! init_strtab ( bin )		1322813	0					
ANR	1322887	UnaryOperator	!		1322813	0					
ANR	1322888	CallExpression	init_strtab ( bin )		1322813	1					
ANR	1322889	Callee	init_strtab		1322813	0					
ANR	1322890	Identifier	init_strtab		1322813	0					
ANR	1322891	ArgumentList	bin		1322813	1					
ANR	1322892	Argument	bin		1322813	0					
ANR	1322893	Identifier	bin		1322813	0					
ANR	1322894	CompoundStatement		13:26:316:316	1322813	1					
ANR	1322895	ExpressionStatement	"bprintf ( ""Cannot initialize strings table\\n"" )"	1220:3:37399:37444	1322813	0	True				
ANR	1322896	CallExpression	"bprintf ( ""Cannot initialize strings table\\n"" )"		1322813	0					
ANR	1322897	Callee	bprintf		1322813	0					
ANR	1322898	Identifier	bprintf		1322813	0					
ANR	1322899	ArgumentList	"""Cannot initialize strings table\\n"""		1322813	1					
ANR	1322900	Argument	"""Cannot initialize strings table\\n"""		1322813	0					
ANR	1322901	PrimaryExpression	"""Cannot initialize strings table\\n"""		1322813	0					
ANR	1322902	IfStatement	if ( ! init_dynstr ( bin ) && ! is_bin_etrel ( bin ) )		1322813	2					
ANR	1322903	Condition	! init_dynstr ( bin ) && ! is_bin_etrel ( bin )	1222:6:37456:37496	1322813	0	True				
ANR	1322904	AndExpression	! init_dynstr ( bin ) && ! is_bin_etrel ( bin )		1322813	0		&&			
ANR	1322905	UnaryOperationExpression	! init_dynstr ( bin )		1322813	0					
ANR	1322906	UnaryOperator	!		1322813	0					
ANR	1322907	CallExpression	init_dynstr ( bin )		1322813	1					
ANR	1322908	Callee	init_dynstr		1322813	0					
ANR	1322909	Identifier	init_dynstr		1322813	0					
ANR	1322910	ArgumentList	bin		1322813	1					
ANR	1322911	Argument	bin		1322813	0					
ANR	1322912	Identifier	bin		1322813	0					
ANR	1322913	UnaryOperationExpression	! is_bin_etrel ( bin )		1322813	1					
ANR	1322914	UnaryOperator	!		1322813	0					
ANR	1322915	CallExpression	is_bin_etrel ( bin )		1322813	1					
ANR	1322916	Callee	is_bin_etrel		1322813	0					
ANR	1322917	Identifier	is_bin_etrel		1322813	0					
ANR	1322918	ArgumentList	bin		1322813	1					
ANR	1322919	Argument	bin		1322813	0					
ANR	1322920	Identifier	bin		1322813	0					
ANR	1322921	CompoundStatement		16:49:421:421	1322813	1					
ANR	1322922	ExpressionStatement	"bprintf ( ""Cannot initialize dynamic strings\\n"" )"	1223:3:37504:37551	1322813	0	True				
ANR	1322923	CallExpression	"bprintf ( ""Cannot initialize dynamic strings\\n"" )"		1322813	0					
ANR	1322924	Callee	bprintf		1322813	0					
ANR	1322925	Identifier	bprintf		1322813	0					
ANR	1322926	ArgumentList	"""Cannot initialize dynamic strings\\n"""		1322813	1					
ANR	1322927	Argument	"""Cannot initialize dynamic strings\\n"""		1322813	0					
ANR	1322928	PrimaryExpression	"""Cannot initialize dynamic strings\\n"""		1322813	0					
ANR	1322929	ExpressionStatement	bin -> baddr = Elf_ ( r_bin_elf_get_baddr ) ( bin )	1225:2:37559:37603	1322813	3	True				
ANR	1322930	AssignmentExpression	bin -> baddr = Elf_ ( r_bin_elf_get_baddr ) ( bin )		1322813	0		=			
ANR	1322931	PtrMemberAccess	bin -> baddr		1322813	0					
ANR	1322932	Identifier	bin		1322813	0					
ANR	1322933	Identifier	baddr		1322813	1					
ANR	1322934	CallExpression	Elf_ ( r_bin_elf_get_baddr ) ( bin )		1322813	1					
ANR	1322935	Callee	Elf_ ( r_bin_elf_get_baddr )		1322813	0					
ANR	1322936	CallExpression	Elf_ ( r_bin_elf_get_baddr )		1322813	0					
ANR	1322937	Callee	Elf_		1322813	0					
ANR	1322938	Identifier	Elf_		1322813	0					
ANR	1322939	ArgumentList	r_bin_elf_get_baddr		1322813	1					
ANR	1322940	Argument	r_bin_elf_get_baddr		1322813	0					
ANR	1322941	Identifier	r_bin_elf_get_baddr		1322813	0					
ANR	1322942	ArgumentList	bin		1322813	1					
ANR	1322943	Argument	bin		1322813	0					
ANR	1322944	Identifier	bin		1322813	0					
ANR	1322945	IfStatement	if ( ! init_dynamic_section ( bin ) && ! Elf_ ( r_bin_elf_is_static ) ( bin ) && ! is_bin_etrel ( bin ) )		1322813	4					
ANR	1322946	Condition	! init_dynamic_section ( bin ) && ! Elf_ ( r_bin_elf_is_static ) ( bin ) && ! is_bin_etrel ( bin )	1226:6:37611:37696	1322813	0	True				
ANR	1322947	AndExpression	! init_dynamic_section ( bin ) && ! Elf_ ( r_bin_elf_is_static ) ( bin ) && ! is_bin_etrel ( bin )		1322813	0		&&			
ANR	1322948	UnaryOperationExpression	! init_dynamic_section ( bin )		1322813	0					
ANR	1322949	UnaryOperator	!		1322813	0					
ANR	1322950	CallExpression	init_dynamic_section ( bin )		1322813	1					
ANR	1322951	Callee	init_dynamic_section		1322813	0					
ANR	1322952	Identifier	init_dynamic_section		1322813	0					
ANR	1322953	ArgumentList	bin		1322813	1					
ANR	1322954	Argument	bin		1322813	0					
ANR	1322955	Identifier	bin		1322813	0					
ANR	1322956	AndExpression	! Elf_ ( r_bin_elf_is_static ) ( bin ) && ! is_bin_etrel ( bin )		1322813	1		&&			
ANR	1322957	UnaryOperationExpression	! Elf_ ( r_bin_elf_is_static ) ( bin )		1322813	0					
ANR	1322958	UnaryOperator	!		1322813	0					
ANR	1322959	CallExpression	Elf_ ( r_bin_elf_is_static ) ( bin )		1322813	1					
ANR	1322960	Callee	Elf_ ( r_bin_elf_is_static )		1322813	0					
ANR	1322961	CallExpression	Elf_ ( r_bin_elf_is_static )		1322813	0					
ANR	1322962	Callee	Elf_		1322813	0					
ANR	1322963	Identifier	Elf_		1322813	0					
ANR	1322964	ArgumentList	r_bin_elf_is_static		1322813	1					
ANR	1322965	Argument	r_bin_elf_is_static		1322813	0					
ANR	1322966	Identifier	r_bin_elf_is_static		1322813	0					
ANR	1322967	ArgumentList	bin		1322813	1					
ANR	1322968	Argument	bin		1322813	0					
ANR	1322969	Identifier	bin		1322813	0					
ANR	1322970	UnaryOperationExpression	! is_bin_etrel ( bin )		1322813	1					
ANR	1322971	UnaryOperator	!		1322813	0					
ANR	1322972	CallExpression	is_bin_etrel ( bin )		1322813	1					
ANR	1322973	Callee	is_bin_etrel		1322813	0					
ANR	1322974	Identifier	is_bin_etrel		1322813	0					
ANR	1322975	ArgumentList	bin		1322813	1					
ANR	1322976	Argument	bin		1322813	0					
ANR	1322977	Identifier	bin		1322813	0					
ANR	1322978	CompoundStatement		20:94:621:621	1322813	1					
ANR	1322979	ExpressionStatement	"bprintf ( ""Cannot initialize dynamic section\\n"" )"	1227:3:37704:37751	1322813	0	True				
ANR	1322980	CallExpression	"bprintf ( ""Cannot initialize dynamic section\\n"" )"		1322813	0					
ANR	1322981	Callee	bprintf		1322813	0					
ANR	1322982	Identifier	bprintf		1322813	0					
ANR	1322983	ArgumentList	"""Cannot initialize dynamic section\\n"""		1322813	1					
ANR	1322984	Argument	"""Cannot initialize dynamic section\\n"""		1322813	0					
ANR	1322985	PrimaryExpression	"""Cannot initialize dynamic section\\n"""		1322813	0					
ANR	1322986	ExpressionStatement	bin -> imports_by_ord_size = 0	1231:1:37762:37790	1322813	3	True				
ANR	1322987	AssignmentExpression	bin -> imports_by_ord_size = 0		1322813	0		=			
ANR	1322988	PtrMemberAccess	bin -> imports_by_ord_size		1322813	0					
ANR	1322989	Identifier	bin		1322813	0					
ANR	1322990	Identifier	imports_by_ord_size		1322813	1					
ANR	1322991	PrimaryExpression	0		1322813	1					
ANR	1322992	ExpressionStatement	bin -> imports_by_ord = NULL	1232:1:37793:37819	1322813	4	True				
ANR	1322993	AssignmentExpression	bin -> imports_by_ord = NULL		1322813	0		=			
ANR	1322994	PtrMemberAccess	bin -> imports_by_ord		1322813	0					
ANR	1322995	Identifier	bin		1322813	0					
ANR	1322996	Identifier	imports_by_ord		1322813	1					
ANR	1322997	Identifier	NULL		1322813	1					
ANR	1322998	ExpressionStatement	bin -> symbols_by_ord_size = 0	1233:1:37822:37850	1322813	5	True				
ANR	1322999	AssignmentExpression	bin -> symbols_by_ord_size = 0		1322813	0		=			
ANR	1323000	PtrMemberAccess	bin -> symbols_by_ord_size		1322813	0					
ANR	1323001	Identifier	bin		1322813	0					
ANR	1323002	Identifier	symbols_by_ord_size		1322813	1					
ANR	1323003	PrimaryExpression	0		1322813	1					
ANR	1323004	ExpressionStatement	bin -> symbols_by_ord = NULL	1234:1:37853:37879	1322813	6	True				
ANR	1323005	AssignmentExpression	bin -> symbols_by_ord = NULL		1322813	0		=			
ANR	1323006	PtrMemberAccess	bin -> symbols_by_ord		1322813	0					
ANR	1323007	Identifier	bin		1322813	0					
ANR	1323008	Identifier	symbols_by_ord		1322813	1					
ANR	1323009	Identifier	NULL		1322813	1					
ANR	1323010	ExpressionStatement	bin -> g_sections = Elf_ ( r_bin_elf_get_sections ) ( bin )	1235:1:37882:37934	1322813	7	True				
ANR	1323011	AssignmentExpression	bin -> g_sections = Elf_ ( r_bin_elf_get_sections ) ( bin )		1322813	0		=			
ANR	1323012	PtrMemberAccess	bin -> g_sections		1322813	0					
ANR	1323013	Identifier	bin		1322813	0					
ANR	1323014	Identifier	g_sections		1322813	1					
ANR	1323015	CallExpression	Elf_ ( r_bin_elf_get_sections ) ( bin )		1322813	1					
ANR	1323016	Callee	Elf_ ( r_bin_elf_get_sections )		1322813	0					
ANR	1323017	CallExpression	Elf_ ( r_bin_elf_get_sections )		1322813	0					
ANR	1323018	Callee	Elf_		1322813	0					
ANR	1323019	Identifier	Elf_		1322813	0					
ANR	1323020	ArgumentList	r_bin_elf_get_sections		1322813	1					
ANR	1323021	Argument	r_bin_elf_get_sections		1322813	0					
ANR	1323022	Identifier	r_bin_elf_get_sections		1322813	0					
ANR	1323023	ArgumentList	bin		1322813	1					
ANR	1323024	Argument	bin		1322813	0					
ANR	1323025	Identifier	bin		1322813	0					
ANR	1323026	ExpressionStatement	bin -> boffset = Elf_ ( r_bin_elf_get_boffset ) ( bin )	1236:1:37937:37985	1322813	8	True				
ANR	1323027	AssignmentExpression	bin -> boffset = Elf_ ( r_bin_elf_get_boffset ) ( bin )		1322813	0		=			
ANR	1323028	PtrMemberAccess	bin -> boffset		1322813	0					
ANR	1323029	Identifier	bin		1322813	0					
ANR	1323030	Identifier	boffset		1322813	1					
ANR	1323031	CallExpression	Elf_ ( r_bin_elf_get_boffset ) ( bin )		1322813	1					
ANR	1323032	Callee	Elf_ ( r_bin_elf_get_boffset )		1322813	0					
ANR	1323033	CallExpression	Elf_ ( r_bin_elf_get_boffset )		1322813	0					
ANR	1323034	Callee	Elf_		1322813	0					
ANR	1323035	Identifier	Elf_		1322813	0					
ANR	1323036	ArgumentList	r_bin_elf_get_boffset		1322813	1					
ANR	1323037	Argument	r_bin_elf_get_boffset		1322813	0					
ANR	1323038	Identifier	r_bin_elf_get_boffset		1322813	0					
ANR	1323039	ArgumentList	bin		1322813	1					
ANR	1323040	Argument	bin		1322813	0					
ANR	1323041	Identifier	bin		1322813	0					
ANR	1323042	ExpressionStatement	"sdb_ns_set ( bin -> kv , ""versioninfo"" , store_versioninfo ( bin ) )"	1237:1:37988:38048	1322813	9	True				
ANR	1323043	CallExpression	"sdb_ns_set ( bin -> kv , ""versioninfo"" , store_versioninfo ( bin ) )"		1322813	0					
ANR	1323044	Callee	sdb_ns_set		1322813	0					
ANR	1323045	Identifier	sdb_ns_set		1322813	0					
ANR	1323046	ArgumentList	bin -> kv		1322813	1					
ANR	1323047	Argument	bin -> kv		1322813	0					
ANR	1323048	PtrMemberAccess	bin -> kv		1322813	0					
ANR	1323049	Identifier	bin		1322813	0					
ANR	1323050	Identifier	kv		1322813	1					
ANR	1323051	Argument	"""versioninfo"""		1322813	1					
ANR	1323052	PrimaryExpression	"""versioninfo"""		1322813	0					
ANR	1323053	Argument	store_versioninfo ( bin )		1322813	2					
ANR	1323054	CallExpression	store_versioninfo ( bin )		1322813	0					
ANR	1323055	Callee	store_versioninfo		1322813	0					
ANR	1323056	Identifier	store_versioninfo		1322813	0					
ANR	1323057	ArgumentList	bin		1322813	1					
ANR	1323058	Argument	bin		1322813	0					
ANR	1323059	Identifier	bin		1322813	0					
ANR	1323060	ReturnStatement	return true ;	1238:1:38051:38062	1322813	10	True				
ANR	1323061	Identifier	true		1322813	0					
ANR	1323062	ReturnType	static bool		1322813	1					
ANR	1323063	Identifier	elf_init		1322813	2					
ANR	1323064	ParameterList	ELFOBJ * bin		1322813	3					
ANR	1323065	Parameter	ELFOBJ * bin	1207:21:37064:37074	1322813	0	True				
ANR	1323066	ParameterType	ELFOBJ *		1322813	0					
ANR	1323067	Identifier	bin		1322813	1					
ANR	1323068	CFGEntryNode	ENTRY		1322813		True				
ANR	1323069	CFGExitNode	EXIT		1322813		True				
ANR	1323070	Symbol	init_dynstr		1322813						
ANR	1323071	Symbol	bin		1322813						
ANR	1323072	Symbol	is_bin_etrel		1322813						
ANR	1323073	Symbol	bin -> kv		1322813						
ANR	1323074	Symbol	* bin		1322813						
ANR	1323075	Symbol	bin -> g_sections		1322813						
ANR	1323076	Symbol	bin -> symbols_by_ord		1322813						
ANR	1323077	Symbol	ET_CORE		1322813						
ANR	1323078	Symbol	init_shdr		1322813						
ANR	1323079	Symbol	r_bin_elf_get_baddr		1322813						
ANR	1323080	Symbol	r_bin_elf_is_static		1322813						
ANR	1323081	Symbol	init_dynamic_section		1322813						
ANR	1323082	Symbol	bin -> ehdr		1322813						
ANR	1323083	Symbol	bin -> imports_by_ord_size		1322813						
ANR	1323084	Symbol	init_ehdr		1322813						
ANR	1323085	Symbol	bin -> symbols_by_ord_size		1322813						
ANR	1323086	Symbol	bin -> ehdr . e_type		1322813						
ANR	1323087	Symbol	Elf_		1322813						
ANR	1323088	Symbol	bin -> imports_by_ord		1322813						
ANR	1323089	Symbol	store_versioninfo		1322813						
ANR	1323090	Symbol	r_bin_elf_get_boffset		1322813						
ANR	1323091	Symbol	NULL		1322813						
ANR	1323092	Symbol	r_bin_elf_get_sections		1322813						
ANR	1323093	Symbol	false		1322813						
ANR	1323094	Symbol	init_strtab		1322813						
ANR	1323095	Symbol	bin -> baddr		1322813						
ANR	1323096	Symbol	bin -> boffset		1322813						
ANR	1323097	Symbol	init_phdr		1322813						
ANR	1323098	Symbol	true		1322813						
ANR	1323099	Function	r_bin_elf_get_section_offset	1241:0:38067:38280							
ANR	1323100	FunctionDef	"r_bin_elf_get_section_offset (ELFOBJ * bin , const char * section_name)"		1323099	0					
ANR	1323101	CompoundStatement		1241:79:38146:38280	1323099	0					
ANR	1323102	IdentifierDeclStatement	"RBinElfSection * section = get_section_by_name ( bin , section_name ) ;"	1242:1:38149:38214	1323099	0	True				
ANR	1323103	IdentifierDecl	"* section = get_section_by_name ( bin , section_name )"		1323099	0					
ANR	1323104	IdentifierDeclType	RBinElfSection *		1323099	0					
ANR	1323105	Identifier	section		1323099	1					
ANR	1323106	AssignmentExpression	"* section = get_section_by_name ( bin , section_name )"		1323099	2		=			
ANR	1323107	Identifier	section		1323099	0					
ANR	1323108	CallExpression	"get_section_by_name ( bin , section_name )"		1323099	1					
ANR	1323109	Callee	get_section_by_name		1323099	0					
ANR	1323110	Identifier	get_section_by_name		1323099	0					
ANR	1323111	ArgumentList	bin		1323099	1					
ANR	1323112	Argument	bin		1323099	0					
ANR	1323113	Identifier	bin		1323099	0					
ANR	1323114	Argument	section_name		1323099	1					
ANR	1323115	Identifier	section_name		1323099	0					
ANR	1323116	IfStatement	if ( ! section )		1323099	1					
ANR	1323117	Condition	! section	1243:5:38221:38228	1323099	0	True				
ANR	1323118	UnaryOperationExpression	! section		1323099	0					
ANR	1323119	UnaryOperator	!		1323099	0					
ANR	1323120	Identifier	section		1323099	1					
ANR	1323121	CompoundStatement		3:15:84:84	1323099	1					
ANR	1323122	ReturnStatement	return UT64_MAX ;	1244:2:38235:38250	1323099	0	True				
ANR	1323123	Identifier	UT64_MAX		1323099	0					
ANR	1323124	ReturnStatement	return section -> offset ;	1246:1:38256:38278	1323099	2	True				
ANR	1323125	PtrMemberAccess	section -> offset		1323099	0					
ANR	1323126	Identifier	section		1323099	0					
ANR	1323127	Identifier	offset		1323099	1					
ANR	1323128	ReturnType	ut64 Elf_		1323099	1					
ANR	1323129	Identifier	( r_bin_elf_get_section_offset )		1323099	2					
ANR	1323130	Identifier	r_bin_elf_get_section_offset		1323099	3					
ANR	1323131	ParameterList	"ELFOBJ * bin , const char * section_name"		1323099	4					
ANR	1323132	Parameter	ELFOBJ * bin	1241:40:38107:38117	1323099	0	True				
ANR	1323133	ParameterType	ELFOBJ *		1323099	0					
ANR	1323134	Identifier	bin		1323099	1					
ANR	1323135	Parameter	const char * section_name	1241:53:38120:38143	1323099	1	True				
ANR	1323136	ParameterType	const char *		1323099	0					
ANR	1323137	Identifier	section_name		1323099	1					
ANR	1323138	CFGEntryNode	ENTRY		1323099		True				
ANR	1323139	CFGExitNode	EXIT		1323099		True				
ANR	1323140	Symbol	* section		1323099						
ANR	1323141	Symbol	bin		1323099						
ANR	1323142	Symbol	section_name		1323099						
ANR	1323143	Symbol	get_section_by_name		1323099						
ANR	1323144	Symbol	section		1323099						
ANR	1323145	Symbol	UT64_MAX		1323099						
ANR	1323146	Symbol	section -> offset		1323099						
ANR	1323147	Function	r_bin_elf_get_section_addr	1249:0:38283:38471							
ANR	1323148	FunctionDef	"r_bin_elf_get_section_addr (ELFOBJ * bin , const char * section_name)"		1323147	0					
ANR	1323149	CompoundStatement		1249:77:38360:38471	1323147	0					
ANR	1323150	IdentifierDeclStatement	"RBinElfSection * section = get_section_by_name ( bin , section_name ) ;"	1250:1:38363:38428	1323147	0	True				
ANR	1323151	IdentifierDecl	"* section = get_section_by_name ( bin , section_name )"		1323147	0					
ANR	1323152	IdentifierDeclType	RBinElfSection *		1323147	0					
ANR	1323153	Identifier	section		1323147	1					
ANR	1323154	AssignmentExpression	"* section = get_section_by_name ( bin , section_name )"		1323147	2		=			
ANR	1323155	Identifier	section		1323147	0					
ANR	1323156	CallExpression	"get_section_by_name ( bin , section_name )"		1323147	1					
ANR	1323157	Callee	get_section_by_name		1323147	0					
ANR	1323158	Identifier	get_section_by_name		1323147	0					
ANR	1323159	ArgumentList	bin		1323147	1					
ANR	1323160	Argument	bin		1323147	0					
ANR	1323161	Identifier	bin		1323147	0					
ANR	1323162	Argument	section_name		1323147	1					
ANR	1323163	Identifier	section_name		1323147	0					
ANR	1323164	ReturnStatement	return section ? section -> rva : UT64_MAX ;	1251:1:38431:38469	1323147	1	True				
ANR	1323165	ConditionalExpression	section ? section -> rva : UT64_MAX		1323147	0					
ANR	1323166	Condition	section		1323147	0					
ANR	1323167	Identifier	section		1323147	0					
ANR	1323168	PtrMemberAccess	section -> rva		1323147	1					
ANR	1323169	Identifier	section		1323147	0					
ANR	1323170	Identifier	rva		1323147	1					
ANR	1323171	Identifier	UT64_MAX		1323147	2					
ANR	1323172	ReturnType	ut64 Elf_		1323147	1					
ANR	1323173	Identifier	( r_bin_elf_get_section_addr )		1323147	2					
ANR	1323174	Identifier	r_bin_elf_get_section_addr		1323147	3					
ANR	1323175	ParameterList	"ELFOBJ * bin , const char * section_name"		1323147	4					
ANR	1323176	Parameter	ELFOBJ * bin	1249:38:38321:38331	1323147	0	True				
ANR	1323177	ParameterType	ELFOBJ *		1323147	0					
ANR	1323178	Identifier	bin		1323147	1					
ANR	1323179	Parameter	const char * section_name	1249:51:38334:38357	1323147	1	True				
ANR	1323180	ParameterType	const char *		1323147	0					
ANR	1323181	Identifier	section_name		1323147	1					
ANR	1323182	CFGEntryNode	ENTRY		1323147		True				
ANR	1323183	CFGExitNode	EXIT		1323147		True				
ANR	1323184	Symbol	* section		1323147						
ANR	1323185	Symbol	bin		1323147						
ANR	1323186	Symbol	section_name		1323147						
ANR	1323187	Symbol	section -> rva		1323147						
ANR	1323188	Symbol	get_section_by_name		1323147						
ANR	1323189	Symbol	section		1323147						
ANR	1323190	Symbol	UT64_MAX		1323147						
ANR	1323191	Function	r_bin_elf_get_section_addr_end	1254:0:38474:38682							
ANR	1323192	FunctionDef	"r_bin_elf_get_section_addr_end (ELFOBJ * bin , const char * section_name)"		1323191	0					
ANR	1323193	CompoundStatement		1254:81:38555:38682	1323191	0					
ANR	1323194	IdentifierDeclStatement	"RBinElfSection * section = get_section_by_name ( bin , section_name ) ;"	1255:1:38558:38623	1323191	0	True				
ANR	1323195	IdentifierDecl	"* section = get_section_by_name ( bin , section_name )"		1323191	0					
ANR	1323196	IdentifierDeclType	RBinElfSection *		1323191	0					
ANR	1323197	Identifier	section		1323191	1					
ANR	1323198	AssignmentExpression	"* section = get_section_by_name ( bin , section_name )"		1323191	2		=			
ANR	1323199	Identifier	section		1323191	0					
ANR	1323200	CallExpression	"get_section_by_name ( bin , section_name )"		1323191	1					
ANR	1323201	Callee	get_section_by_name		1323191	0					
ANR	1323202	Identifier	get_section_by_name		1323191	0					
ANR	1323203	ArgumentList	bin		1323191	1					
ANR	1323204	Argument	bin		1323191	0					
ANR	1323205	Identifier	bin		1323191	0					
ANR	1323206	Argument	section_name		1323191	1					
ANR	1323207	Identifier	section_name		1323191	0					
ANR	1323208	ReturnStatement	return section ? section -> rva + section -> size : UT64_MAX ;	1256:1:38626:38680	1323191	1	True				
ANR	1323209	ConditionalExpression	section ? section -> rva + section -> size : UT64_MAX		1323191	0					
ANR	1323210	Condition	section		1323191	0					
ANR	1323211	Identifier	section		1323191	0					
ANR	1323212	AdditiveExpression	section -> rva + section -> size		1323191	1		+			
ANR	1323213	PtrMemberAccess	section -> rva		1323191	0					
ANR	1323214	Identifier	section		1323191	0					
ANR	1323215	Identifier	rva		1323191	1					
ANR	1323216	PtrMemberAccess	section -> size		1323191	1					
ANR	1323217	Identifier	section		1323191	0					
ANR	1323218	Identifier	size		1323191	1					
ANR	1323219	Identifier	UT64_MAX		1323191	2					
ANR	1323220	ReturnType	ut64 Elf_		1323191	1					
ANR	1323221	Identifier	( r_bin_elf_get_section_addr_end )		1323191	2					
ANR	1323222	Identifier	r_bin_elf_get_section_addr_end		1323191	3					
ANR	1323223	ParameterList	"ELFOBJ * bin , const char * section_name"		1323191	4					
ANR	1323224	Parameter	ELFOBJ * bin	1254:42:38516:38526	1323191	0	True				
ANR	1323225	ParameterType	ELFOBJ *		1323191	0					
ANR	1323226	Identifier	bin		1323191	1					
ANR	1323227	Parameter	const char * section_name	1254:55:38529:38552	1323191	1	True				
ANR	1323228	ParameterType	const char *		1323191	0					
ANR	1323229	Identifier	section_name		1323191	1					
ANR	1323230	CFGEntryNode	ENTRY		1323191		True				
ANR	1323231	CFGExitNode	EXIT		1323191		True				
ANR	1323232	Symbol	* section		1323191						
ANR	1323233	Symbol	bin		1323191						
ANR	1323234	Symbol	section_name		1323191						
ANR	1323235	Symbol	section -> rva		1323191						
ANR	1323236	Symbol	get_section_by_name		1323191						
ANR	1323237	Symbol	section -> size		1323191						
ANR	1323238	Symbol	section		1323191						
ANR	1323239	Symbol	UT64_MAX		1323191						
ANR	1323240	ClassDef	ht_rel_t	1264:0:38914:39006							
ANR	1323241	ClassDef	<unnamed>	1265:1:38933:38981							
ANR	1323242	DeclStmt									
ANR	1323243	Decl									r
ANR	1323244	DeclStmt									
ANR	1323245	Decl							bool	bool	is_rela
ANR	1323246	DeclStmt									
ANR	1323247	Decl							int	int	k
ANR	1323248	Function	get_rel_sec	1273:0:39010:39228							
ANR	1323249	FunctionDef	"get_rel_sec (ELFOBJ * bin , const char * * sects)"		1323248	0					
ANR	1323250	CompoundStatement		1273:68:39078:39228	1323248	0					
ANR	1323251	IdentifierDeclStatement	RBinElfSection * rel_sec = NULL ;	1274:1:39081:39111	1323248	0	True				
ANR	1323252	IdentifierDecl	* rel_sec = NULL		1323248	0					
ANR	1323253	IdentifierDeclType	RBinElfSection *		1323248	0					
ANR	1323254	Identifier	rel_sec		1323248	1					
ANR	1323255	AssignmentExpression	* rel_sec = NULL		1323248	2		=			
ANR	1323256	Identifier	NULL		1323248	0					
ANR	1323257	Identifier	NULL		1323248	1					
ANR	1323258	IdentifierDeclStatement	int j = 0 ;	1275:1:39114:39123	1323248	1	True				
ANR	1323259	IdentifierDecl	j = 0		1323248	0					
ANR	1323260	IdentifierDeclType	int		1323248	0					
ANR	1323261	Identifier	j		1323248	1					
ANR	1323262	AssignmentExpression	j = 0		1323248	2		=			
ANR	1323263	Identifier	j		1323248	0					
ANR	1323264	PrimaryExpression	0		1323248	1					
ANR	1323265	WhileStatement	while ( ! rel_sec && sects [ j ] )		1323248	2					
ANR	1323266	Condition	! rel_sec && sects [ j ]	1276:8:39133:39152	1323248	0	True				
ANR	1323267	AndExpression	! rel_sec && sects [ j ]		1323248	0		&&			
ANR	1323268	UnaryOperationExpression	! rel_sec		1323248	0					
ANR	1323269	UnaryOperator	!		1323248	0					
ANR	1323270	Identifier	rel_sec		1323248	1					
ANR	1323271	ArrayIndexing	sects [ j ]		1323248	1					
ANR	1323272	Identifier	sects		1323248	0					
ANR	1323273	Identifier	j		1323248	1					
ANR	1323274	CompoundStatement		4:30:76:76	1323248	1					
ANR	1323275	ExpressionStatement	"rel_sec = get_section_by_name ( bin , sects [ j ++ ] )"	1277:2:39159:39206	1323248	0	True				
ANR	1323276	AssignmentExpression	"rel_sec = get_section_by_name ( bin , sects [ j ++ ] )"		1323248	0		=			
ANR	1323277	Identifier	rel_sec		1323248	0					
ANR	1323278	CallExpression	"get_section_by_name ( bin , sects [ j ++ ] )"		1323248	1					
ANR	1323279	Callee	get_section_by_name		1323248	0					
ANR	1323280	Identifier	get_section_by_name		1323248	0					
ANR	1323281	ArgumentList	bin		1323248	1					
ANR	1323282	Argument	bin		1323248	0					
ANR	1323283	Identifier	bin		1323248	0					
ANR	1323284	Argument	sects [ j ++ ]		1323248	1					
ANR	1323285	ArrayIndexing	sects [ j ++ ]		1323248	0					
ANR	1323286	Identifier	sects		1323248	0					
ANR	1323287	PostIncDecOperationExpression	j ++		1323248	1					
ANR	1323288	Identifier	j		1323248	0					
ANR	1323289	IncDec	++		1323248	1					
ANR	1323290	ReturnStatement	return rel_sec ;	1279:1:39212:39226	1323248	3	True				
ANR	1323291	Identifier	rel_sec		1323248	0					
ANR	1323292	ReturnType	static RBinElfSection *		1323248	1					
ANR	1323293	Identifier	get_rel_sec		1323248	2					
ANR	1323294	ParameterList	"ELFOBJ * bin , const char * * sects"		1323248	3					
ANR	1323295	Parameter	ELFOBJ * bin	1273:35:39045:39055	1323248	0	True				
ANR	1323296	ParameterType	ELFOBJ *		1323248	0					
ANR	1323297	Identifier	bin		1323248	1					
ANR	1323298	Parameter	const char * * sects	1273:48:39058:39075	1323248	1	True				
ANR	1323299	ParameterType	const char * *		1323248	0					
ANR	1323300	Identifier	sects		1323248	1					
ANR	1323301	CFGEntryNode	ENTRY		1323248		True				
ANR	1323302	CFGExitNode	EXIT		1323248		True				
ANR	1323303	Symbol	sects		1323248						
ANR	1323304	Symbol	NULL		1323248						
ANR	1323305	Symbol	* j		1323248						
ANR	1323306	Symbol	rel_sec		1323248						
ANR	1323307	Symbol	bin		1323248						
ANR	1323308	Symbol	get_section_by_name		1323248						
ANR	1323309	Symbol	j		1323248						
ANR	1323310	Symbol	* sects		1323248						
ANR	1323311	DeclStmt									
ANR	1323312	Decl							int	int	l
ANR	1323313	DeclStmt									
ANR	1323314	Decl							int	int	l
ANR	1323315	Function	read_ht_rel	1295:0:39560:39882							
ANR	1323316	FunctionDef	"read_ht_rel (ELFOBJ * bin , ut8 * rl , int k)"		1323315	0					
ANR	1323317	CompoundStatement		1295:65:39625:39882	1323315	0					
ANR	1323318	Statement	struct	1296:1:39628:39633	1323315	0	True				
ANR	1323319	Statement	ht_rel_t	1296:8:39635:39642	1323315	1	True				
ANR	1323320	Statement	*	1296:17:39644:39644	1323315	2	True				
ANR	1323321	Statement	rel	1296:18:39645:39647	1323315	3	True				
ANR	1323322	Statement	=	1296:22:39649:39649	1323315	4	True				
ANR	1323323	Statement	R_NEW0	1296:24:39651:39656	1323315	5	True				
ANR	1323324	Statement	(	1296:31:39658:39658	1323315	6	True				
ANR	1323325	Statement	struct	1296:32:39659:39664	1323315	7	True				
ANR	1323326	Statement	ht_rel_t	1296:39:39666:39673	1323315	8	True				
ANR	1323327	Statement	)	1296:47:39674:39674	1323315	9	True				
ANR	1323328	ExpressionStatement		1296:48:39675:39675	1323315	10	True				
ANR	1323329	IfStatement	if ( ! rel )		1323315	11					
ANR	1323330	Condition	! rel	1297:5:39682:39685	1323315	0	True				
ANR	1323331	UnaryOperationExpression	! rel		1323315	0					
ANR	1323332	UnaryOperator	!		1323315	0					
ANR	1323333	Identifier	rel		1323315	1					
ANR	1323334	CompoundStatement		3:11:62:62	1323315	1					
ANR	1323335	ReturnStatement	return NULL ;	1298:2:39692:39703	1323315	0	True				
ANR	1323336	Identifier	NULL		1323315	0					
ANR	1323337	ExpressionStatement	rel -> is_rela = bin -> is_rela == DT_RELA	1301:1:39710:39748	1323315	12	True				
ANR	1323338	AssignmentExpression	rel -> is_rela = bin -> is_rela == DT_RELA		1323315	0		=			
ANR	1323339	PtrMemberAccess	rel -> is_rela		1323315	0					
ANR	1323340	Identifier	rel		1323315	0					
ANR	1323341	Identifier	is_rela		1323315	1					
ANR	1323342	EqualityExpression	bin -> is_rela == DT_RELA		1323315	1		==			
ANR	1323343	PtrMemberAccess	bin -> is_rela		1323315	0					
ANR	1323344	Identifier	bin		1323315	0					
ANR	1323345	Identifier	is_rela		1323315	1					
ANR	1323346	Identifier	DT_RELA		1323315	1					
ANR	1323347	ExpressionStatement	rel -> k = k	1302:1:39751:39761	1323315	13	True				
ANR	1323348	AssignmentExpression	rel -> k = k		1323315	0		=			
ANR	1323349	PtrMemberAccess	rel -> k		1323315	0					
ANR	1323350	Identifier	rel		1323315	0					
ANR	1323351	Identifier	k		1323315	1					
ANR	1323352	Identifier	k		1323315	1					
ANR	1323353	IfStatement	if ( rel -> is_rela )		1323315	14					
ANR	1323354	Condition	rel -> is_rela	1303:5:39768:39779	1323315	0	True				
ANR	1323355	PtrMemberAccess	rel -> is_rela		1323315	0					
ANR	1323356	Identifier	rel		1323315	0					
ANR	1323357	Identifier	is_rela		1323315	1					
ANR	1323358	CompoundStatement		9:19:156:156	1323315	1					
ANR	1323359	ExpressionStatement	"read_rela ( bin , & rel -> r . rela , rl )"	1304:2:39786:39819	1323315	0	True				
ANR	1323360	CallExpression	"read_rela ( bin , & rel -> r . rela , rl )"		1323315	0					
ANR	1323361	Callee	read_rela		1323315	0					
ANR	1323362	Identifier	read_rela		1323315	0					
ANR	1323363	ArgumentList	bin		1323315	1					
ANR	1323364	Argument	bin		1323315	0					
ANR	1323365	Identifier	bin		1323315	0					
ANR	1323366	Argument	& rel -> r . rela		1323315	1					
ANR	1323367	UnaryOperationExpression	& rel -> r . rela		1323315	0					
ANR	1323368	UnaryOperator	&		1323315	0					
ANR	1323369	MemberAccess	rel -> r . rela		1323315	1					
ANR	1323370	PtrMemberAccess	rel -> r		1323315	0					
ANR	1323371	Identifier	rel		1323315	0					
ANR	1323372	Identifier	r		1323315	1					
ANR	1323373	Identifier	rela		1323315	1					
ANR	1323374	Argument	rl		1323315	2					
ANR	1323375	Identifier	rl		1323315	0					
ANR	1323376	ElseStatement	else		1323315	0					
ANR	1323377	CompoundStatement		11:8:203:203	1323315	0					
ANR	1323378	ExpressionStatement	"read_rel ( bin , & rel -> r . rel , rl )"	1306:2:39833:39864	1323315	0	True				
ANR	1323379	CallExpression	"read_rel ( bin , & rel -> r . rel , rl )"		1323315	0					
ANR	1323380	Callee	read_rel		1323315	0					
ANR	1323381	Identifier	read_rel		1323315	0					
ANR	1323382	ArgumentList	bin		1323315	1					
ANR	1323383	Argument	bin		1323315	0					
ANR	1323384	Identifier	bin		1323315	0					
ANR	1323385	Argument	& rel -> r . rel		1323315	1					
ANR	1323386	UnaryOperationExpression	& rel -> r . rel		1323315	0					
ANR	1323387	UnaryOperator	&		1323315	0					
ANR	1323388	MemberAccess	rel -> r . rel		1323315	1					
ANR	1323389	PtrMemberAccess	rel -> r		1323315	0					
ANR	1323390	Identifier	rel		1323315	0					
ANR	1323391	Identifier	r		1323315	1					
ANR	1323392	Identifier	rel		1323315	1					
ANR	1323393	Argument	rl		1323315	2					
ANR	1323394	Identifier	rl		1323315	0					
ANR	1323395	ReturnStatement	return rel ;	1308:1:39870:39880	1323315	15	True				
ANR	1323396	Identifier	rel		1323315	0					
ANR	1323397	ReturnType	static struct ht_rel_t *		1323315	1					
ANR	1323398	Identifier	read_ht_rel		1323315	2					
ANR	1323399	ParameterList	"ELFOBJ * bin , ut8 * rl , int k"		1323315	3					
ANR	1323400	Parameter	ELFOBJ * bin	1295:36:39596:39606	1323315	0	True				
ANR	1323401	ParameterType	ELFOBJ *		1323315	0					
ANR	1323402	Identifier	bin		1323315	1					
ANR	1323403	Parameter	ut8 * rl	1295:49:39609:39615	1323315	1	True				
ANR	1323404	ParameterType	ut8 *		1323315	0					
ANR	1323405	Identifier	rl		1323315	1					
ANR	1323406	Parameter	int k	1295:58:39618:39622	1323315	2	True				
ANR	1323407	ParameterType	int		1323315	0					
ANR	1323408	Identifier	k		1323315	1					
ANR	1323409	CFGEntryNode	ENTRY		1323315		True				
ANR	1323410	CFGExitNode	EXIT		1323315		True				
ANR	1323411	Symbol	NULL		1323315						
ANR	1323412	Symbol	* rel		1323315						
ANR	1323413	Symbol	& rel -> r . rela		1323315						
ANR	1323414	Symbol	bin		1323315						
ANR	1323415	Symbol	& rel -> r . rel		1323315						
ANR	1323416	Symbol	DT_RELA		1323315						
ANR	1323417	Symbol	bin -> is_rela		1323315						
ANR	1323418	Symbol	k		1323315						
ANR	1323419	Symbol	* bin		1323315						
ANR	1323420	Symbol	rel -> is_rela		1323315						
ANR	1323421	Symbol	rel -> r		1323315						
ANR	1323422	Symbol	& rel -> r		1323315						
ANR	1323423	Symbol	rel		1323315						
ANR	1323424	Symbol	rl		1323315						
ANR	1323425	Symbol	rel -> k		1323315						
ANR	1323426	Function	rel_cache_free	1311:0:39885:39945							
ANR	1323427	FunctionDef	rel_cache_free (HtUPKv * kv)		1323426	0					
ANR	1323428	CompoundStatement		1311:39:39924:39945	1323426	0					
ANR	1323429	ExpressionStatement	free ( kv -> value )	1312:1:39927:39943	1323426	0	True				
ANR	1323430	CallExpression	free ( kv -> value )		1323426	0					
ANR	1323431	Callee	free		1323426	0					
ANR	1323432	Identifier	free		1323426	0					
ANR	1323433	ArgumentList	kv -> value		1323426	1					
ANR	1323434	Argument	kv -> value		1323426	0					
ANR	1323435	PtrMemberAccess	kv -> value		1323426	0					
ANR	1323436	Identifier	kv		1323426	0					
ANR	1323437	Identifier	value		1323426	1					
ANR	1323438	ReturnType	static void		1323426	1					
ANR	1323439	Identifier	rel_cache_free		1323426	2					
ANR	1323440	ParameterList	HtUPKv * kv		1323426	3					
ANR	1323441	Parameter	HtUPKv * kv	1311:27:39912:39921	1323426	0	True				
ANR	1323442	ParameterType	HtUPKv *		1323426	0					
ANR	1323443	Identifier	kv		1323426	1					
ANR	1323444	CFGEntryNode	ENTRY		1323426		True				
ANR	1323445	CFGExitNode	EXIT		1323426		True				
ANR	1323446	Symbol	* kv		1323426						
ANR	1323447	Symbol	kv -> value		1323426						
ANR	1323448	Symbol	kv		1323426						
ANR	1323449	Function	rel_cache_new	1315:0:39948:41198							
ANR	1323450	FunctionDef	rel_cache_new (ELFOBJ * bin)		1323449	0					
ANR	1323451	CompoundStatement		1315:40:39988:41198	1323449	0					
ANR	1323452	IdentifierDeclStatement	ut8 rl [ MAX_REL_RELA_SZ ] = { 0 } ;	1316:1:39991:40022	1323449	0	True				
ANR	1323453	IdentifierDecl	rl [ MAX_REL_RELA_SZ ] = { 0 }		1323449	0					
ANR	1323454	IdentifierDeclType	ut8 [ MAX_REL_RELA_SZ ]		1323449	0					
ANR	1323455	Identifier	rl		1323449	1					
ANR	1323456	Identifier	MAX_REL_RELA_SZ		1323449	2					
ANR	1323457	AssignmentExpression	rl [ MAX_REL_RELA_SZ ] = { 0 }		1323449	3		=			
ANR	1323458	Identifier	MAX_REL_RELA_SZ		1323449	0					
ANR	1323459	InitializerList	0		1323449	1					
ANR	1323460	PrimaryExpression	0		1323449	0					
ANR	1323461	IdentifierDeclStatement	RBinElfSection * rel_sec = NULL ;	1317:1:40025:40055	1323449	1	True				
ANR	1323462	IdentifierDecl	* rel_sec = NULL		1323449	0					
ANR	1323463	IdentifierDeclType	RBinElfSection *		1323449	0					
ANR	1323464	Identifier	rel_sec		1323449	1					
ANR	1323465	AssignmentExpression	* rel_sec = NULL		1323449	2		=			
ANR	1323466	Identifier	NULL		1323449	0					
ANR	1323467	Identifier	NULL		1323449	1					
ANR	1323468	IdentifierDeclStatement	"int j , k , tsize , nrel ;"	1318:1:40058:40079	1323449	2	True				
ANR	1323469	IdentifierDecl	j		1323449	0					
ANR	1323470	IdentifierDeclType	int		1323449	0					
ANR	1323471	Identifier	j		1323449	1					
ANR	1323472	IdentifierDecl	k		1323449	1					
ANR	1323473	IdentifierDeclType	int		1323449	0					
ANR	1323474	Identifier	k		1323449	1					
ANR	1323475	IdentifierDecl	tsize		1323449	2					
ANR	1323476	IdentifierDeclType	int		1323449	0					
ANR	1323477	Identifier	tsize		1323449	1					
ANR	1323478	IdentifierDecl	nrel		1323449	3					
ANR	1323479	IdentifierDeclType	int		1323449	0					
ANR	1323480	Identifier	nrel		1323449	1					
ANR	1323481	IdentifierDeclStatement	"const char * rel_sect [ ] = { "".rel.plt"" , "".rela.plt"" , "".rel.dyn"" , "".rela.dyn"" , NULL } ;"	1319:1:40082:40165	1323449	3	True				
ANR	1323482	IdentifierDecl	"* rel_sect [ ] = { "".rel.plt"" , "".rela.plt"" , "".rel.dyn"" , "".rela.dyn"" , NULL }"		1323449	0					
ANR	1323483	IdentifierDeclType	const char * [ ]		1323449	0					
ANR	1323484	Identifier	rel_sect		1323449	1					
ANR	1323485	AssignmentExpression	"* rel_sect [ ] = { "".rel.plt"" , "".rela.plt"" , "".rel.dyn"" , "".rela.dyn"" , NULL }"		1323449	2		=			
ANR	1323486	Identifier	rel_sect		1323449	0					
ANR	1323487	InitializerList	""".rel.plt"""		1323449	1					
ANR	1323488	PrimaryExpression	""".rel.plt"""		1323449	0					
ANR	1323489	PrimaryExpression	""".rela.plt"""		1323449	1					
ANR	1323490	PrimaryExpression	""".rel.dyn"""		1323449	2					
ANR	1323491	PrimaryExpression	""".rela.dyn"""		1323449	3					
ANR	1323492	Identifier	NULL		1323449	4					
ANR	1323493	IdentifierDeclStatement	"const char * rela_sect [ ] = { "".rela.plt"" , "".rel.plt"" , "".rela.dyn"" , "".rel.dyn"" , NULL } ;"	1320:1:40168:40252	1323449	4	True				
ANR	1323494	IdentifierDecl	"* rela_sect [ ] = { "".rela.plt"" , "".rel.plt"" , "".rela.dyn"" , "".rel.dyn"" , NULL }"		1323449	0					
ANR	1323495	IdentifierDeclType	const char * [ ]		1323449	0					
ANR	1323496	Identifier	rela_sect		1323449	1					
ANR	1323497	AssignmentExpression	"* rela_sect [ ] = { "".rela.plt"" , "".rel.plt"" , "".rela.dyn"" , "".rel.dyn"" , NULL }"		1323449	2		=			
ANR	1323498	Identifier	rela_sect		1323449	0					
ANR	1323499	InitializerList	""".rela.plt"""		1323449	1					
ANR	1323500	PrimaryExpression	""".rela.plt"""		1323449	0					
ANR	1323501	PrimaryExpression	""".rel.plt"""		1323449	1					
ANR	1323502	PrimaryExpression	""".rela.dyn"""		1323449	2					
ANR	1323503	PrimaryExpression	""".rel.dyn"""		1323449	3					
ANR	1323504	Identifier	NULL		1323449	4					
ANR	1323505	IdentifierDeclStatement	HtUP * rel_cache ;	1321:1:40255:40270	1323449	5	True				
ANR	1323506	IdentifierDecl	* rel_cache		1323449	0					
ANR	1323507	IdentifierDeclType	HtUP *		1323449	0					
ANR	1323508	Identifier	rel_cache		1323449	1					
ANR	1323509	IfStatement	if ( ( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr )		1323449	6					
ANR	1323510	Condition	( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr	1323:5:40278:40319	1323449	0	True				
ANR	1323511	AndExpression	( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr		1323449	0		&&			
ANR	1323512	OrExpression	! bin -> shdr || ! bin -> strtab		1323449	0		||			
ANR	1323513	UnaryOperationExpression	! bin -> shdr		1323449	0					
ANR	1323514	UnaryOperator	!		1323449	0					
ANR	1323515	PtrMemberAccess	bin -> shdr		1323449	1					
ANR	1323516	Identifier	bin		1323449	0					
ANR	1323517	Identifier	shdr		1323449	1					
ANR	1323518	UnaryOperationExpression	! bin -> strtab		1323449	1					
ANR	1323519	UnaryOperator	!		1323449	0					
ANR	1323520	PtrMemberAccess	bin -> strtab		1323449	1					
ANR	1323521	Identifier	bin		1323449	0					
ANR	1323522	Identifier	strtab		1323449	1					
ANR	1323523	UnaryOperationExpression	! bin -> phdr		1323449	1					
ANR	1323524	UnaryOperator	!		1323449	0					
ANR	1323525	PtrMemberAccess	bin -> phdr		1323449	1					
ANR	1323526	Identifier	bin		1323449	0					
ANR	1323527	Identifier	phdr		1323449	1					
ANR	1323528	CompoundStatement		9:49:333:333	1323449	1					
ANR	1323529	ReturnStatement	return NULL ;	1324:2:40326:40337	1323449	0	True				
ANR	1323530	Identifier	NULL		1323449	0					
ANR	1323531	IfStatement	if ( bin -> is_rela == DT_REL )		1323449	7					
ANR	1323532	Condition	bin -> is_rela == DT_REL	1327:5:40348:40369	1323449	0	True				
ANR	1323533	EqualityExpression	bin -> is_rela == DT_REL		1323449	0		==			
ANR	1323534	PtrMemberAccess	bin -> is_rela		1323449	0					
ANR	1323535	Identifier	bin		1323449	0					
ANR	1323536	Identifier	is_rela		1323449	1					
ANR	1323537	Identifier	DT_REL		1323449	1					
ANR	1323538	CompoundStatement		13:29:383:383	1323449	1					
ANR	1323539	ExpressionStatement	"rel_sec = get_rel_sec ( bin , rel_sect )"	1328:2:40376:40413	1323449	0	True				
ANR	1323540	AssignmentExpression	"rel_sec = get_rel_sec ( bin , rel_sect )"		1323449	0		=			
ANR	1323541	Identifier	rel_sec		1323449	0					
ANR	1323542	CallExpression	"get_rel_sec ( bin , rel_sect )"		1323449	1					
ANR	1323543	Callee	get_rel_sec		1323449	0					
ANR	1323544	Identifier	get_rel_sec		1323449	0					
ANR	1323545	ArgumentList	bin		1323449	1					
ANR	1323546	Argument	bin		1323449	0					
ANR	1323547	Identifier	bin		1323449	0					
ANR	1323548	Argument	rel_sect		1323449	1					
ANR	1323549	Identifier	rel_sect		1323449	0					
ANR	1323550	ExpressionStatement	tsize = sizeof ( Elf_ ( Rel ) )	1329:2:40417:40443	1323449	1	True				
ANR	1323551	AssignmentExpression	tsize = sizeof ( Elf_ ( Rel ) )		1323449	0		=			
ANR	1323552	Identifier	tsize		1323449	0					
ANR	1323553	SizeofExpression	sizeof ( Elf_ ( Rel ) )		1323449	1					
ANR	1323554	Sizeof	sizeof		1323449	0					
ANR	1323555	CallExpression	Elf_ ( Rel )		1323449	1					
ANR	1323556	Callee	Elf_		1323449	0					
ANR	1323557	Identifier	Elf_		1323449	0					
ANR	1323558	ArgumentList	Rel		1323449	1					
ANR	1323559	Argument	Rel		1323449	0					
ANR	1323560	Identifier	Rel		1323449	0					
ANR	1323561	ElseStatement	else		1323449	0					
ANR	1323562	IfStatement	if ( bin -> is_rela == DT_RELA )		1323449	0					
ANR	1323563	Condition	bin -> is_rela == DT_RELA	1330:12:40457:40479	1323449	0	True				
ANR	1323564	EqualityExpression	bin -> is_rela == DT_RELA		1323449	0		==			
ANR	1323565	PtrMemberAccess	bin -> is_rela		1323449	0					
ANR	1323566	Identifier	bin		1323449	0					
ANR	1323567	Identifier	is_rela		1323449	1					
ANR	1323568	Identifier	DT_RELA		1323449	1					
ANR	1323569	CompoundStatement		16:37:493:493	1323449	1					
ANR	1323570	ExpressionStatement	"rel_sec = get_rel_sec ( bin , rela_sect )"	1331:2:40486:40524	1323449	0	True				
ANR	1323571	AssignmentExpression	"rel_sec = get_rel_sec ( bin , rela_sect )"		1323449	0		=			
ANR	1323572	Identifier	rel_sec		1323449	0					
ANR	1323573	CallExpression	"get_rel_sec ( bin , rela_sect )"		1323449	1					
ANR	1323574	Callee	get_rel_sec		1323449	0					
ANR	1323575	Identifier	get_rel_sec		1323449	0					
ANR	1323576	ArgumentList	bin		1323449	1					
ANR	1323577	Argument	bin		1323449	0					
ANR	1323578	Identifier	bin		1323449	0					
ANR	1323579	Argument	rela_sect		1323449	1					
ANR	1323580	Identifier	rela_sect		1323449	0					
ANR	1323581	ExpressionStatement	tsize = sizeof ( Elf_ ( Rela ) )	1332:2:40528:40555	1323449	1	True				
ANR	1323582	AssignmentExpression	tsize = sizeof ( Elf_ ( Rela ) )		1323449	0		=			
ANR	1323583	Identifier	tsize		1323449	0					
ANR	1323584	SizeofExpression	sizeof ( Elf_ ( Rela ) )		1323449	1					
ANR	1323585	Sizeof	sizeof		1323449	0					
ANR	1323586	CallExpression	Elf_ ( Rela )		1323449	1					
ANR	1323587	Callee	Elf_		1323449	0					
ANR	1323588	Identifier	Elf_		1323449	0					
ANR	1323589	ArgumentList	Rela		1323449	1					
ANR	1323590	Argument	Rela		1323449	0					
ANR	1323591	Identifier	Rela		1323449	0					
ANR	1323592	IfStatement	if ( ! rel_sec || rel_sec -> size < 1 )		1323449	8					
ANR	1323593	Condition	! rel_sec || rel_sec -> size < 1	1334:5:40565:40593	1323449	0	True				
ANR	1323594	OrExpression	! rel_sec || rel_sec -> size < 1		1323449	0		||			
ANR	1323595	UnaryOperationExpression	! rel_sec		1323449	0					
ANR	1323596	UnaryOperator	!		1323449	0					
ANR	1323597	Identifier	rel_sec		1323449	1					
ANR	1323598	RelationalExpression	rel_sec -> size < 1		1323449	1		<			
ANR	1323599	PtrMemberAccess	rel_sec -> size		1323449	0					
ANR	1323600	Identifier	rel_sec		1323449	0					
ANR	1323601	Identifier	size		1323449	1					
ANR	1323602	PrimaryExpression	1		1323449	1					
ANR	1323603	CompoundStatement		20:36:607:607	1323449	1					
ANR	1323604	ReturnStatement	return NULL ;	1335:2:40600:40611	1323449	0	True				
ANR	1323605	Identifier	NULL		1323449	0					
ANR	1323606	ExpressionStatement	nrel = ( ut32 ) ( ( int ) rel_sec -> size / ( int ) tsize )	1338:1:40618:40665	1323449	9	True				
ANR	1323607	AssignmentExpression	nrel = ( ut32 ) ( ( int ) rel_sec -> size / ( int ) tsize )		1323449	0		=			
ANR	1323608	Identifier	nrel		1323449	0					
ANR	1323609	CastExpression	( ut32 ) ( ( int ) rel_sec -> size / ( int ) tsize )		1323449	1					
ANR	1323610	CastTarget	ut32		1323449	0					
ANR	1323611	MultiplicativeExpression	( int ) rel_sec -> size / ( int ) tsize		1323449	1		/			
ANR	1323612	CastExpression	( int ) rel_sec -> size		1323449	0					
ANR	1323613	CastTarget	int		1323449	0					
ANR	1323614	PtrMemberAccess	rel_sec -> size		1323449	1					
ANR	1323615	Identifier	rel_sec		1323449	0					
ANR	1323616	Identifier	size		1323449	1					
ANR	1323617	CastExpression	( int ) tsize		1323449	1					
ANR	1323618	CastTarget	int		1323449	0					
ANR	1323619	Identifier	tsize		1323449	1					
ANR	1323620	IfStatement	if ( nrel < 1 )		1323449	10					
ANR	1323621	Condition	nrel < 1	1339:5:40672:40679	1323449	0	True				
ANR	1323622	RelationalExpression	nrel < 1		1323449	0		<			
ANR	1323623	Identifier	nrel		1323449	0					
ANR	1323624	PrimaryExpression	1		1323449	1					
ANR	1323625	CompoundStatement		25:15:693:693	1323449	1					
ANR	1323626	ReturnStatement	return NULL ;	1340:2:40686:40697	1323449	0	True				
ANR	1323627	Identifier	NULL		1323449	0					
ANR	1323628	IdentifierDeclStatement	"const int htsize = R_MIN ( nrel , 1024 ) ;"	1343:1:40704:40741	1323449	11	True				
ANR	1323629	IdentifierDecl	"htsize = R_MIN ( nrel , 1024 )"		1323449	0					
ANR	1323630	IdentifierDeclType	const int		1323449	0					
ANR	1323631	Identifier	htsize		1323449	1					
ANR	1323632	AssignmentExpression	"htsize = R_MIN ( nrel , 1024 )"		1323449	2		=			
ANR	1323633	Identifier	htsize		1323449	0					
ANR	1323634	CallExpression	"R_MIN ( nrel , 1024 )"		1323449	1					
ANR	1323635	Callee	R_MIN		1323449	0					
ANR	1323636	Identifier	R_MIN		1323449	0					
ANR	1323637	ArgumentList	nrel		1323449	1					
ANR	1323638	Argument	nrel		1323449	0					
ANR	1323639	Identifier	nrel		1323449	0					
ANR	1323640	Argument	1024		1323449	1					
ANR	1323641	PrimaryExpression	1024		1323449	0					
ANR	1323642	ExpressionStatement	"rel_cache = ht_up_new_size ( htsize , NULL , rel_cache_free , NULL )"	1344:1:40744:40807	1323449	12	True				
ANR	1323643	AssignmentExpression	"rel_cache = ht_up_new_size ( htsize , NULL , rel_cache_free , NULL )"		1323449	0		=			
ANR	1323644	Identifier	rel_cache		1323449	0					
ANR	1323645	CallExpression	"ht_up_new_size ( htsize , NULL , rel_cache_free , NULL )"		1323449	1					
ANR	1323646	Callee	ht_up_new_size		1323449	0					
ANR	1323647	Identifier	ht_up_new_size		1323449	0					
ANR	1323648	ArgumentList	htsize		1323449	1					
ANR	1323649	Argument	htsize		1323449	0					
ANR	1323650	Identifier	htsize		1323449	0					
ANR	1323651	Argument	NULL		1323449	1					
ANR	1323652	Identifier	NULL		1323449	0					
ANR	1323653	Argument	rel_cache_free		1323449	2					
ANR	1323654	Identifier	rel_cache_free		1323449	0					
ANR	1323655	Argument	NULL		1323449	3					
ANR	1323656	Identifier	NULL		1323449	0					
ANR	1323657	ForStatement	"for ( j = k = 0 ; j < rel_sec -> size && k < nrel ; j += tsize , k ++ )"		1323449	13					
ANR	1323658	ForInit	j = k = 0 ;	1346:6:40816:40825	1323449	0	True				
ANR	1323659	AssignmentExpression	j = k = 0		1323449	0		=			
ANR	1323660	Identifier	j		1323449	0					
ANR	1323661	AssignmentExpression	k = 0		1323449	1		=			
ANR	1323662	Identifier	k		1323449	0					
ANR	1323663	PrimaryExpression	0		1323449	1					
ANR	1323664	Condition	j < rel_sec -> size && k < nrel	1346:17:40827:40855	1323449	1	True				
ANR	1323665	AndExpression	j < rel_sec -> size && k < nrel		1323449	0		&&			
ANR	1323666	RelationalExpression	j < rel_sec -> size		1323449	0		<			
ANR	1323667	Identifier	j		1323449	0					
ANR	1323668	PtrMemberAccess	rel_sec -> size		1323449	1					
ANR	1323669	Identifier	rel_sec		1323449	0					
ANR	1323670	Identifier	size		1323449	1					
ANR	1323671	RelationalExpression	k < nrel		1323449	1		<			
ANR	1323672	Identifier	k		1323449	0					
ANR	1323673	Identifier	nrel		1323449	1					
ANR	1323674	Expression	"j += tsize , k ++"	1346:48:40858:40872	1323449	2	True				
ANR	1323675	AssignmentExpression	j += tsize		1323449	0		+=			
ANR	1323676	Identifier	j		1323449	0					
ANR	1323677	Identifier	tsize		1323449	1					
ANR	1323678	PostIncDecOperationExpression	k ++		1323449	1					
ANR	1323679	Identifier	k		1323449	0					
ANR	1323680	IncDec	++		1323449	1					
ANR	1323681	CompoundStatement		37:2:994:1041	1323449	3					
ANR	1323682	IdentifierDeclStatement	"int len = r_buf_read_at ( bin -> b , rel_sec -> offset + j , rl , tsize ) ;"	1347:2:40879:40943	1323449	0	True				
ANR	1323683	IdentifierDecl	"len = r_buf_read_at ( bin -> b , rel_sec -> offset + j , rl , tsize )"		1323449	0					
ANR	1323684	IdentifierDeclType	int		1323449	0					
ANR	1323685	Identifier	len		1323449	1					
ANR	1323686	AssignmentExpression	"len = r_buf_read_at ( bin -> b , rel_sec -> offset + j , rl , tsize )"		1323449	2		=			
ANR	1323687	Identifier	len		1323449	0					
ANR	1323688	CallExpression	"r_buf_read_at ( bin -> b , rel_sec -> offset + j , rl , tsize )"		1323449	1					
ANR	1323689	Callee	r_buf_read_at		1323449	0					
ANR	1323690	Identifier	r_buf_read_at		1323449	0					
ANR	1323691	ArgumentList	bin -> b		1323449	1					
ANR	1323692	Argument	bin -> b		1323449	0					
ANR	1323693	PtrMemberAccess	bin -> b		1323449	0					
ANR	1323694	Identifier	bin		1323449	0					
ANR	1323695	Identifier	b		1323449	1					
ANR	1323696	Argument	rel_sec -> offset + j		1323449	1					
ANR	1323697	AdditiveExpression	rel_sec -> offset + j		1323449	0		+			
ANR	1323698	PtrMemberAccess	rel_sec -> offset		1323449	0					
ANR	1323699	Identifier	rel_sec		1323449	0					
ANR	1323700	Identifier	offset		1323449	1					
ANR	1323701	Identifier	j		1323449	1					
ANR	1323702	Argument	rl		1323449	2					
ANR	1323703	Identifier	rl		1323449	0					
ANR	1323704	Argument	tsize		1323449	3					
ANR	1323705	Identifier	tsize		1323449	0					
ANR	1323706	IfStatement	if ( len != tsize )		1323449	1					
ANR	1323707	Condition	len != tsize	1348:6:40951:40962	1323449	0	True				
ANR	1323708	EqualityExpression	len != tsize		1323449	0		!=			
ANR	1323709	Identifier	len		1323449	0					
ANR	1323710	Identifier	tsize		1323449	1					
ANR	1323711	CompoundStatement		34:20:976:976	1323449	1					
ANR	1323712	BreakStatement	break ;	1349:3:40970:40975	1323449	0	True				
ANR	1323713	IdentifierDeclStatement	"struct ht_rel_t * rel = read_ht_rel ( bin , rl , k ) ;"	1351:2:40983:41030	1323449	2	True				
ANR	1323714	IdentifierDecl	"* rel = read_ht_rel ( bin , rl , k )"		1323449	0					
ANR	1323715	IdentifierDeclType	struct ht_rel_t *		1323449	0					
ANR	1323716	Identifier	rel		1323449	1					
ANR	1323717	AssignmentExpression	"* rel = read_ht_rel ( bin , rl , k )"		1323449	2		=			
ANR	1323718	Identifier	rel		1323449	0					
ANR	1323719	CallExpression	"read_ht_rel ( bin , rl , k )"		1323449	1					
ANR	1323720	Callee	read_ht_rel		1323449	0					
ANR	1323721	Identifier	read_ht_rel		1323449	0					
ANR	1323722	ArgumentList	bin		1323449	1					
ANR	1323723	Argument	bin		1323449	0					
ANR	1323724	Identifier	bin		1323449	0					
ANR	1323725	Argument	rl		1323449	1					
ANR	1323726	Identifier	rl		1323449	0					
ANR	1323727	Argument	k		1323449	2					
ANR	1323728	Identifier	k		1323449	0					
ANR	1323729	IfStatement	if ( ! rel )		1323449	3					
ANR	1323730	Condition	! rel	1352:6:41038:41041	1323449	0	True				
ANR	1323731	UnaryOperationExpression	! rel		1323449	0					
ANR	1323732	UnaryOperator	!		1323449	0					
ANR	1323733	Identifier	rel		1323449	1					
ANR	1323734	CompoundStatement		38:12:1055:1055	1323449	1					
ANR	1323735	GotoStatement	goto out ;	1353:3:41049:41057	1323449	0	True				
ANR	1323736	Identifier	out		1323449	0					
ANR	1323737	IfStatement	"if ( ! ht_up_insert ( rel_cache , REL_SYM , rel ) )"		1323449	4					
ANR	1323738	Condition	"! ht_up_insert ( rel_cache , REL_SYM , rel )"	1356:6:41070:41108	1323449	0	True				
ANR	1323739	UnaryOperationExpression	"! ht_up_insert ( rel_cache , REL_SYM , rel )"		1323449	0					
ANR	1323740	UnaryOperator	!		1323449	0					
ANR	1323741	CallExpression	"ht_up_insert ( rel_cache , REL_SYM , rel )"		1323449	1					
ANR	1323742	Callee	ht_up_insert		1323449	0					
ANR	1323743	Identifier	ht_up_insert		1323449	0					
ANR	1323744	ArgumentList	rel_cache		1323449	1					
ANR	1323745	Argument	rel_cache		1323449	0					
ANR	1323746	Identifier	rel_cache		1323449	0					
ANR	1323747	Argument	REL_SYM		1323449	1					
ANR	1323748	Identifier	REL_SYM		1323449	0					
ANR	1323749	Argument	rel		1323449	2					
ANR	1323750	Identifier	rel		1323449	0					
ANR	1323751	CompoundStatement		42:47:1122:1122	1323449	1					
ANR	1323752	ExpressionStatement	free ( rel )	1357:3:41116:41126	1323449	0	True				
ANR	1323753	CallExpression	free ( rel )		1323449	0					
ANR	1323754	Callee	free		1323449	0					
ANR	1323755	Identifier	free		1323449	0					
ANR	1323756	ArgumentList	rel		1323449	1					
ANR	1323757	Argument	rel		1323449	0					
ANR	1323758	Identifier	rel		1323449	0					
ANR	1323759	ReturnStatement	return rel_cache ;	1360:1:41136:41152	1323449	14	True				
ANR	1323760	Identifier	rel_cache		1323449	0					
ANR	1323761	Label	out :	1361:0:41154:41157	1323449	15	True				
ANR	1323762	Identifier	out		1323449	0					
ANR	1323763	ExpressionStatement	ht_up_free ( rel_cache )	1362:1:41160:41182	1323449	16	True				
ANR	1323764	CallExpression	ht_up_free ( rel_cache )		1323449	0					
ANR	1323765	Callee	ht_up_free		1323449	0					
ANR	1323766	Identifier	ht_up_free		1323449	0					
ANR	1323767	ArgumentList	rel_cache		1323449	1					
ANR	1323768	Argument	rel_cache		1323449	0					
ANR	1323769	Identifier	rel_cache		1323449	0					
ANR	1323770	ReturnStatement	return NULL ;	1363:1:41185:41196	1323449	17	True				
ANR	1323771	Identifier	NULL		1323449	0					
ANR	1323772	ReturnType	static HtUP *		1323449	1					
ANR	1323773	Identifier	rel_cache_new		1323449	2					
ANR	1323774	ParameterList	ELFOBJ * bin		1323449	3					
ANR	1323775	Parameter	ELFOBJ * bin	1315:27:39975:39985	1323449	0	True				
ANR	1323776	ParameterType	ELFOBJ *		1323449	0					
ANR	1323777	Identifier	bin		1323449	1					
ANR	1323778	CFGEntryNode	ENTRY		1323449		True				
ANR	1323779	CFGExitNode	EXIT		1323449		True				
ANR	1323780	Symbol	bin -> b		1323449						
ANR	1323781	Symbol	read_ht_rel		1323449						
ANR	1323782	Symbol	bin		1323449						
ANR	1323783	Symbol	bin -> phdr		1323449						
ANR	1323784	Symbol	get_rel_sec		1323449						
ANR	1323785	Symbol	* bin		1323449						
ANR	1323786	Symbol	ht_up_insert		1323449						
ANR	1323787	Symbol	len		1323449						
ANR	1323788	Symbol	rel_sec		1323449						
ANR	1323789	Symbol	rel_cache_free		1323449						
ANR	1323790	Symbol	nrel		1323449						
ANR	1323791	Symbol	rel		1323449						
ANR	1323792	Symbol	rela_sect		1323449						
ANR	1323793	Symbol	htsize		1323449						
ANR	1323794	Symbol	rel_sec -> offset		1323449						
ANR	1323795	Symbol	bin -> strtab		1323449						
ANR	1323796	Symbol	DT_REL		1323449						
ANR	1323797	Symbol	Elf_		1323449						
ANR	1323798	Symbol	rel_sec -> size		1323449						
ANR	1323799	Symbol	MAX_REL_RELA_SZ		1323449						
ANR	1323800	Symbol	NULL		1323449						
ANR	1323801	Symbol	DT_RELA		1323449						
ANR	1323802	Symbol	j		1323449						
ANR	1323803	Symbol	bin -> is_rela		1323449						
ANR	1323804	Symbol	R_MIN		1323449						
ANR	1323805	Symbol	k		1323449						
ANR	1323806	Symbol	* rel_sec		1323449						
ANR	1323807	Symbol	tsize		1323449						
ANR	1323808	Symbol	Rela		1323449						
ANR	1323809	Symbol	bin -> shdr		1323449						
ANR	1323810	Symbol	rel_cache		1323449						
ANR	1323811	Symbol	Rel		1323449						
ANR	1323812	Symbol	ht_up_new_size		1323449						
ANR	1323813	Symbol	r_buf_read_at		1323449						
ANR	1323814	Symbol	REL_SYM		1323449						
ANR	1323815	Symbol	rl		1323449						
ANR	1323816	Symbol	rel_sect		1323449						
ANR	1323817	Function	get_dyn_entry	1366:0:41201:41668							
ANR	1323818	FunctionDef	"get_dyn_entry (ELFOBJ * bin , int dyn_entry)"		1323817	0					
ANR	1323819	CompoundStatement		1366:54:41255:41668	1323817	0					
ANR	1323820	IdentifierDeclStatement	int i ;	1367:1:41258:41263	1323817	0	True				
ANR	1323821	IdentifierDecl	i		1323817	0					
ANR	1323822	IdentifierDeclType	int		1323817	0					
ANR	1323823	Identifier	i		1323817	1					
ANR	1323824	ForStatement	for ( i = 0 ; i < bin -> dyn_entries ; i ++ )		1323817	1					
ANR	1323825	ForInit	i = 0 ;	1368:6:41271:41276	1323817	0	True				
ANR	1323826	AssignmentExpression	i = 0		1323817	0		=			
ANR	1323827	Identifier	i		1323817	0					
ANR	1323828	PrimaryExpression	0		1323817	1					
ANR	1323829	Condition	i < bin -> dyn_entries	1368:13:41278:41297	1323817	1	True				
ANR	1323830	RelationalExpression	i < bin -> dyn_entries		1323817	0		<			
ANR	1323831	Identifier	i		1323817	0					
ANR	1323832	PtrMemberAccess	bin -> dyn_entries		1323817	1					
ANR	1323833	Identifier	bin		1323817	0					
ANR	1323834	Identifier	dyn_entries		1323817	1					
ANR	1323835	PostIncDecOperationExpression	i ++	1368:35:41300:41302	1323817	2	True				
ANR	1323836	Identifier	i		1323817	0					
ANR	1323837	IncDec	++		1323817	1					
ANR	1323838	CompoundStatement		3:40:49:49	1323817	3					
ANR	1323839	IfStatement	if ( bin -> dyn_buf [ i ] . d_tag == dyn_entry )		1323817	0					
ANR	1323840	Condition	bin -> dyn_buf [ i ] . d_tag == dyn_entry	1369:6:41313:41346	1323817	0	True				
ANR	1323841	EqualityExpression	bin -> dyn_buf [ i ] . d_tag == dyn_entry		1323817	0		==			
ANR	1323842	MemberAccess	bin -> dyn_buf [ i ] . d_tag		1323817	0					
ANR	1323843	ArrayIndexing	bin -> dyn_buf [ i ]		1323817	0					
ANR	1323844	PtrMemberAccess	bin -> dyn_buf		1323817	0					
ANR	1323845	Identifier	bin		1323817	0					
ANR	1323846	Identifier	dyn_buf		1323817	1					
ANR	1323847	Identifier	i		1323817	1					
ANR	1323848	Identifier	d_tag		1323817	1					
ANR	1323849	Identifier	dyn_entry		1323817	1					
ANR	1323850	CompoundStatement		4:42:93:93	1323817	1					
ANR	1323851	SwitchStatement	switch ( bin -> dyn_buf [ i ] . d_tag )		1323817	0					
ANR	1323852	Condition	bin -> dyn_buf [ i ] . d_tag	1370:11:41362:41382	1323817	0	True				
ANR	1323853	MemberAccess	bin -> dyn_buf [ i ] . d_tag		1323817	0					
ANR	1323854	ArrayIndexing	bin -> dyn_buf [ i ]		1323817	0					
ANR	1323855	PtrMemberAccess	bin -> dyn_buf		1323817	0					
ANR	1323856	Identifier	bin		1323817	0					
ANR	1323857	Identifier	dyn_buf		1323817	1					
ANR	1323858	Identifier	i		1323817	1					
ANR	1323859	Identifier	d_tag		1323817	1					
ANR	1323860	CompoundStatement		5:34:129:129	1323817	1					
ANR	1323861	Label	case DT_REL :	1371:3:41390:41401	1323817	0	True				
ANR	1323862	Identifier	DT_REL		1323817	0					
ANR	1323863	Label	case DT_RELA :	1372:3:41406:41418	1323817	1	True				
ANR	1323864	Identifier	DT_RELA		1323817	0					
ANR	1323865	Label	case DT_PLTGOT :	1373:3:41423:41437	1323817	2	True				
ANR	1323866	Identifier	DT_PLTGOT		1323817	0					
ANR	1323867	Label	case DT_JMPREL :	1374:3:41442:41456	1323817	3	True				
ANR	1323868	Identifier	DT_JMPREL		1323817	0					
ANR	1323869	ReturnStatement	return bin -> dyn_buf [ i ] . d_un . d_ptr ;	1375:4:41462:41495	1323817	4	True				
ANR	1323870	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_ptr		1323817	0					
ANR	1323871	MemberAccess	bin -> dyn_buf [ i ] . d_un		1323817	0					
ANR	1323872	ArrayIndexing	bin -> dyn_buf [ i ]		1323817	0					
ANR	1323873	PtrMemberAccess	bin -> dyn_buf		1323817	0					
ANR	1323874	Identifier	bin		1323817	0					
ANR	1323875	Identifier	dyn_buf		1323817	1					
ANR	1323876	Identifier	i		1323817	1					
ANR	1323877	Identifier	d_un		1323817	1					
ANR	1323878	Identifier	d_ptr		1323817	1					
ANR	1323879	Label	case DT_RELSZ :	1376:3:41500:41513	1323817	5	True				
ANR	1323880	Identifier	DT_RELSZ		1323817	0					
ANR	1323881	Label	case DT_RELASZ :	1377:3:41518:41532	1323817	6	True				
ANR	1323882	Identifier	DT_RELASZ		1323817	0					
ANR	1323883	Label	case DT_PLTRELSZ :	1378:3:41537:41553	1323817	7	True				
ANR	1323884	Identifier	DT_PLTRELSZ		1323817	0					
ANR	1323885	ReturnStatement	return bin -> dyn_buf [ i ] . d_un . d_val ;	1379:4:41559:41592	1323817	8	True				
ANR	1323886	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_val		1323817	0					
ANR	1323887	MemberAccess	bin -> dyn_buf [ i ] . d_un		1323817	0					
ANR	1323888	ArrayIndexing	bin -> dyn_buf [ i ]		1323817	0					
ANR	1323889	PtrMemberAccess	bin -> dyn_buf		1323817	0					
ANR	1323890	Identifier	bin		1323817	0					
ANR	1323891	Identifier	dyn_buf		1323817	1					
ANR	1323892	Identifier	i		1323817	1					
ANR	1323893	Identifier	d_un		1323817	1					
ANR	1323894	Identifier	d_val		1323817	1					
ANR	1323895	Label	default :	1380:3:41597:41604	1323817	9	True				
ANR	1323896	Identifier	default		1323817	0					
ANR	1323897	ExpressionStatement	r_warn_if_reached ( )	1381:4:41610:41630	1323817	10	True				
ANR	1323898	CallExpression	r_warn_if_reached ( )		1323817	0					
ANR	1323899	Callee	r_warn_if_reached		1323817	0					
ANR	1323900	Identifier	r_warn_if_reached		1323817	0					
ANR	1323901	ArgumentList			1323817	1					
ANR	1323902	BreakStatement	break ;	1382:4:41636:41641	1323817	11	True				
ANR	1323903	ReturnStatement	return - 1 ;	1387:1:41657:41666	1323817	2	True				
ANR	1323904	UnaryOperationExpression	- 1		1323817	0					
ANR	1323905	UnaryOperator	-		1323817	0					
ANR	1323906	PrimaryExpression	1		1323817	1					
ANR	1323907	ReturnType	static ut64		1323817	1					
ANR	1323908	Identifier	get_dyn_entry		1323817	2					
ANR	1323909	ParameterList	"ELFOBJ * bin , int dyn_entry"		1323817	3					
ANR	1323910	Parameter	ELFOBJ * bin	1366:26:41227:41237	1323817	0	True				
ANR	1323911	ParameterType	ELFOBJ *		1323817	0					
ANR	1323912	Identifier	bin		1323817	1					
ANR	1323913	Parameter	int dyn_entry	1366:39:41240:41252	1323817	1	True				
ANR	1323914	ParameterType	int		1323817	0					
ANR	1323915	Identifier	dyn_entry		1323817	1					
ANR	1323916	CFGEntryNode	ENTRY		1323817		True				
ANR	1323917	CFGExitNode	EXIT		1323817		True				
ANR	1323918	Symbol	bin -> dyn_buf		1323817						
ANR	1323919	Symbol	bin		1323817						
ANR	1323920	Symbol	bin -> dyn_entries		1323817						
ANR	1323921	Symbol	i		1323817						
ANR	1323922	Symbol	* bin		1323817						
ANR	1323923	Symbol	bin -> dyn_buf [ i ] . d_tag		1323817						
ANR	1323924	Symbol	* i		1323817						
ANR	1323925	Symbol	bin -> dyn_buf [ i ] . d_un		1323817						
ANR	1323926	Symbol	bin -> dyn_buf [ i ] . d_un . d_ptr		1323817						
ANR	1323927	Symbol	dyn_entry		1323817						
ANR	1323928	Symbol	* * bin		1323817						
ANR	1323929	Symbol	bin -> dyn_buf [ i ] . d_un . d_val		1323817						
ANR	1323930	Symbol	* bin -> dyn_buf		1323817						
ANR	1323931	Function	get_got_addr	1390:0:41671:41977							
ANR	1323932	FunctionDef	get_got_addr (ELFOBJ * bin)		1323931	0					
ANR	1323933	CompoundStatement		1390:38:41709:41977	1323931	0					
ANR	1323934	IdentifierDeclStatement	"ut64 ret = get_dyn_entry ( bin , DT_PLTGOT ) ;"	1391:1:41712:41753	1323931	0	True				
ANR	1323935	IdentifierDecl	"ret = get_dyn_entry ( bin , DT_PLTGOT )"		1323931	0					
ANR	1323936	IdentifierDeclType	ut64		1323931	0					
ANR	1323937	Identifier	ret		1323931	1					
ANR	1323938	AssignmentExpression	"ret = get_dyn_entry ( bin , DT_PLTGOT )"		1323931	2		=			
ANR	1323939	Identifier	ret		1323931	0					
ANR	1323940	CallExpression	"get_dyn_entry ( bin , DT_PLTGOT )"		1323931	1					
ANR	1323941	Callee	get_dyn_entry		1323931	0					
ANR	1323942	Identifier	get_dyn_entry		1323931	0					
ANR	1323943	ArgumentList	bin		1323931	1					
ANR	1323944	Argument	bin		1323931	0					
ANR	1323945	Identifier	bin		1323931	0					
ANR	1323946	Argument	DT_PLTGOT		1323931	1					
ANR	1323947	Identifier	DT_PLTGOT		1323931	0					
ANR	1323948	IfStatement	if ( ret != - 1 )		1323931	1					
ANR	1323949	Condition	ret != - 1	1392:5:41760:41768	1323931	0	True				
ANR	1323950	EqualityExpression	ret != - 1		1323931	0		!=			
ANR	1323951	Identifier	ret		1323931	0					
ANR	1323952	UnaryOperationExpression	- 1		1323931	1					
ANR	1323953	UnaryOperator	-		1323931	0					
ANR	1323954	PrimaryExpression	1		1323931	1					
ANR	1323955	CompoundStatement		3:16:61:61	1323931	1					
ANR	1323956	ReturnStatement	return ret ;	1393:2:41775:41785	1323931	0	True				
ANR	1323957	Identifier	ret		1323931	0					
ANR	1323958	ExpressionStatement	"ret = Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got"" )"	1396:1:41792:41844	1323931	2	True				
ANR	1323959	AssignmentExpression	"ret = Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got"" )"		1323931	0		=			
ANR	1323960	Identifier	ret		1323931	0					
ANR	1323961	CallExpression	"Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got"" )"		1323931	1					
ANR	1323962	Callee	Elf_ ( r_bin_elf_get_section_addr )		1323931	0					
ANR	1323963	CallExpression	Elf_ ( r_bin_elf_get_section_addr )		1323931	0					
ANR	1323964	Callee	Elf_		1323931	0					
ANR	1323965	Identifier	Elf_		1323931	0					
ANR	1323966	ArgumentList	r_bin_elf_get_section_addr		1323931	1					
ANR	1323967	Argument	r_bin_elf_get_section_addr		1323931	0					
ANR	1323968	Identifier	r_bin_elf_get_section_addr		1323931	0					
ANR	1323969	ArgumentList	bin		1323931	1					
ANR	1323970	Argument	bin		1323931	0					
ANR	1323971	Identifier	bin		1323931	0					
ANR	1323972	Argument	""".got"""		1323931	1					
ANR	1323973	PrimaryExpression	""".got"""		1323931	0					
ANR	1323974	IfStatement	if ( ret )		1323931	3					
ANR	1323975	Condition	ret	1397:5:41851:41853	1323931	0	True				
ANR	1323976	Identifier	ret		1323931	0					
ANR	1323977	CompoundStatement		8:10:146:146	1323931	1					
ANR	1323978	ReturnStatement	return ret ;	1398:2:41860:41870	1323931	0	True				
ANR	1323979	Identifier	ret		1323931	0					
ANR	1323980	ExpressionStatement	"ret = Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got.plt"" )"	1401:1:41877:41933	1323931	4	True				
ANR	1323981	AssignmentExpression	"ret = Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got.plt"" )"		1323931	0		=			
ANR	1323982	Identifier	ret		1323931	0					
ANR	1323983	CallExpression	"Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got.plt"" )"		1323931	1					
ANR	1323984	Callee	Elf_ ( r_bin_elf_get_section_addr )		1323931	0					
ANR	1323985	CallExpression	Elf_ ( r_bin_elf_get_section_addr )		1323931	0					
ANR	1323986	Callee	Elf_		1323931	0					
ANR	1323987	Identifier	Elf_		1323931	0					
ANR	1323988	ArgumentList	r_bin_elf_get_section_addr		1323931	1					
ANR	1323989	Argument	r_bin_elf_get_section_addr		1323931	0					
ANR	1323990	Identifier	r_bin_elf_get_section_addr		1323931	0					
ANR	1323991	ArgumentList	bin		1323931	1					
ANR	1323992	Argument	bin		1323931	0					
ANR	1323993	Identifier	bin		1323931	0					
ANR	1323994	Argument	""".got.plt"""		1323931	1					
ANR	1323995	PrimaryExpression	""".got.plt"""		1323931	0					
ANR	1323996	IfStatement	if ( ret )		1323931	5					
ANR	1323997	Condition	ret	1402:5:41940:41942	1323931	0	True				
ANR	1323998	Identifier	ret		1323931	0					
ANR	1323999	CompoundStatement		13:10:235:235	1323931	1					
ANR	1324000	ReturnStatement	return ret ;	1403:2:41949:41959	1323931	0	True				
ANR	1324001	Identifier	ret		1323931	0					
ANR	1324002	ReturnStatement	return - 1 ;	1406:1:41966:41975	1323931	6	True				
ANR	1324003	UnaryOperationExpression	- 1		1323931	0					
ANR	1324004	UnaryOperator	-		1323931	0					
ANR	1324005	PrimaryExpression	1		1323931	1					
ANR	1324006	ReturnType	static ut64		1323931	1					
ANR	1324007	Identifier	get_got_addr		1323931	2					
ANR	1324008	ParameterList	ELFOBJ * bin		1323931	3					
ANR	1324009	Parameter	ELFOBJ * bin	1390:25:41696:41706	1323931	0	True				
ANR	1324010	ParameterType	ELFOBJ *		1323931	0					
ANR	1324011	Identifier	bin		1323931	1					
ANR	1324012	CFGEntryNode	ENTRY		1323931		True				
ANR	1324013	CFGExitNode	EXIT		1323931		True				
ANR	1324014	Symbol	ret		1323931						
ANR	1324015	Symbol	Elf_		1323931						
ANR	1324016	Symbol	get_dyn_entry		1323931						
ANR	1324017	Symbol	bin		1323931						
ANR	1324018	Symbol	r_bin_elf_get_section_addr		1323931						
ANR	1324019	Symbol	DT_PLTGOT		1323931						
ANR	1324020	Function	get_import_addr_ppc	1409:0:41980:42773							
ANR	1324021	FunctionDef	"get_import_addr_ppc (ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section , int nrel)"		1324020	0					
ANR	1324022	CompoundStatement		1409:106:42086:42773	1324020	0					
ANR	1324023	IdentifierDeclStatement	ut8 buf [ 4 ] = { 0 } ;	1410:1:42089:42107	1324020	0	True				
ANR	1324024	IdentifierDecl	buf [ 4 ] = { 0 }		1324020	0					
ANR	1324025	IdentifierDeclType	ut8 [ 4 ]		1324020	0					
ANR	1324026	Identifier	buf		1324020	1					
ANR	1324027	PrimaryExpression	4		1324020	2					
ANR	1324028	AssignmentExpression	buf [ 4 ] = { 0 }		1324020	3		=			
ANR	1324029	Identifier	buf		1324020	0					
ANR	1324030	InitializerList	0		1324020	1					
ANR	1324031	PrimaryExpression	0		1324020	0					
ANR	1324032	IfStatement	if ( ! plt_section )		1324020	1					
ANR	1324033	Condition	! plt_section	1411:5:42114:42125	1324020	0	True				
ANR	1324034	UnaryOperationExpression	! plt_section		1324020	0					
ANR	1324035	UnaryOperator	!		1324020	0					
ANR	1324036	Identifier	plt_section		1324020	1					
ANR	1324037	CompoundStatement		3:19:41:41	1324020	1					
ANR	1324038	ReturnStatement	return - 1 ;	1412:2:42132:42141	1324020	0	True				
ANR	1324039	UnaryOperationExpression	- 1		1324020	0					
ANR	1324040	UnaryOperator	-		1324020	0					
ANR	1324041	PrimaryExpression	1		1324020	1					
ANR	1324042	IdentifierDeclStatement	"int len = r_buf_read_at ( bin -> b , plt_section -> offset , buf , sizeof ( buf ) ) ;"	1414:1:42147:42219	1324020	2	True				
ANR	1324043	IdentifierDecl	"len = r_buf_read_at ( bin -> b , plt_section -> offset , buf , sizeof ( buf ) )"		1324020	0					
ANR	1324044	IdentifierDeclType	int		1324020	0					
ANR	1324045	Identifier	len		1324020	1					
ANR	1324046	AssignmentExpression	"len = r_buf_read_at ( bin -> b , plt_section -> offset , buf , sizeof ( buf ) )"		1324020	2		=			
ANR	1324047	Identifier	len		1324020	0					
ANR	1324048	CallExpression	"r_buf_read_at ( bin -> b , plt_section -> offset , buf , sizeof ( buf ) )"		1324020	1					
ANR	1324049	Callee	r_buf_read_at		1324020	0					
ANR	1324050	Identifier	r_buf_read_at		1324020	0					
ANR	1324051	ArgumentList	bin -> b		1324020	1					
ANR	1324052	Argument	bin -> b		1324020	0					
ANR	1324053	PtrMemberAccess	bin -> b		1324020	0					
ANR	1324054	Identifier	bin		1324020	0					
ANR	1324055	Identifier	b		1324020	1					
ANR	1324056	Argument	plt_section -> offset		1324020	1					
ANR	1324057	PtrMemberAccess	plt_section -> offset		1324020	0					
ANR	1324058	Identifier	plt_section		1324020	0					
ANR	1324059	Identifier	offset		1324020	1					
ANR	1324060	Argument	buf		1324020	2					
ANR	1324061	Identifier	buf		1324020	0					
ANR	1324062	Argument	sizeof ( buf )		1324020	3					
ANR	1324063	SizeofExpression	sizeof ( buf )		1324020	0					
ANR	1324064	Sizeof	sizeof		1324020	0					
ANR	1324065	SizeofOperand	buf		1324020	1					
ANR	1324066	IfStatement	if ( len < 4 )		1324020	3					
ANR	1324067	Condition	len < 4	1415:5:42226:42232	1324020	0	True				
ANR	1324068	RelationalExpression	len < 4		1324020	0		<			
ANR	1324069	Identifier	len		1324020	0					
ANR	1324070	PrimaryExpression	4		1324020	1					
ANR	1324071	CompoundStatement		7:14:148:148	1324020	1					
ANR	1324072	ReturnStatement	return - 1 ;	1416:2:42239:42248	1324020	0	True				
ANR	1324073	UnaryOperationExpression	- 1		1324020	0					
ANR	1324074	UnaryOperator	-		1324020	0					
ANR	1324075	PrimaryExpression	1		1324020	1					
ANR	1324076	IfStatement	if ( bin -> endian )		1324020	4					
ANR	1324077	Condition	bin -> endian	1419:5:42259:42269	1324020	0	True				
ANR	1324078	PtrMemberAccess	bin -> endian		1324020	0					
ANR	1324079	Identifier	bin		1324020	0					
ANR	1324080	Identifier	endian		1324020	1					
ANR	1324081	CompoundStatement		12:2:189:218	1324020	1					
ANR	1324082	IdentifierDeclStatement	ut64 base = r_read_be32 ( buf ) ;	1420:2:42276:42305	1324020	0	True				
ANR	1324083	IdentifierDecl	base = r_read_be32 ( buf )		1324020	0					
ANR	1324084	IdentifierDeclType	ut64		1324020	0					
ANR	1324085	Identifier	base		1324020	1					
ANR	1324086	AssignmentExpression	base = r_read_be32 ( buf )		1324020	2		=			
ANR	1324087	Identifier	base		1324020	0					
ANR	1324088	CallExpression	r_read_be32 ( buf )		1324020	1					
ANR	1324089	Callee	r_read_be32		1324020	0					
ANR	1324090	Identifier	r_read_be32		1324020	0					
ANR	1324091	ArgumentList	buf		1324020	1					
ANR	1324092	Argument	buf		1324020	0					
ANR	1324093	Identifier	buf		1324020	0					
ANR	1324094	ExpressionStatement	base -= ( nrel * 16 )	1421:2:42309:42328	1324020	1	True				
ANR	1324095	AssignmentExpression	base -= ( nrel * 16 )		1324020	0		-=			
ANR	1324096	Identifier	base		1324020	0					
ANR	1324097	MultiplicativeExpression	nrel * 16		1324020	1		*			
ANR	1324098	Identifier	nrel		1324020	0					
ANR	1324099	PrimaryExpression	16		1324020	1					
ANR	1324100	ExpressionStatement	base += ( rel -> k * 16 )	1422:2:42332:42353	1324020	2	True				
ANR	1324101	AssignmentExpression	base += ( rel -> k * 16 )		1324020	0		+=			
ANR	1324102	Identifier	base		1324020	0					
ANR	1324103	MultiplicativeExpression	rel -> k * 16		1324020	1		*			
ANR	1324104	PtrMemberAccess	rel -> k		1324020	0					
ANR	1324105	Identifier	rel		1324020	0					
ANR	1324106	Identifier	k		1324020	1					
ANR	1324107	PrimaryExpression	16		1324020	1					
ANR	1324108	ReturnStatement	return base ;	1423:2:42357:42368	1324020	3	True				
ANR	1324109	Identifier	base		1324020	0					
ANR	1324110	IdentifierDeclStatement	ut64 base = r_read_le32 ( buf ) ;	1435:1:42678:42707	1324020	5	True				
ANR	1324111	IdentifierDecl	base = r_read_le32 ( buf )		1324020	0					
ANR	1324112	IdentifierDeclType	ut64		1324020	0					
ANR	1324113	Identifier	base		1324020	1					
ANR	1324114	AssignmentExpression	base = r_read_le32 ( buf )		1324020	2		=			
ANR	1324115	Identifier	base		1324020	0					
ANR	1324116	CallExpression	r_read_le32 ( buf )		1324020	1					
ANR	1324117	Callee	r_read_le32		1324020	0					
ANR	1324118	Identifier	r_read_le32		1324020	0					
ANR	1324119	ArgumentList	buf		1324020	1					
ANR	1324120	Argument	buf		1324020	0					
ANR	1324121	Identifier	buf		1324020	0					
ANR	1324122	ExpressionStatement	base -= ( nrel * 12 ) + 20	1436:1:42710:42734	1324020	6	True				
ANR	1324123	AssignmentExpression	base -= ( nrel * 12 ) + 20		1324020	0		-=			
ANR	1324124	Identifier	base		1324020	0					
ANR	1324125	AdditiveExpression	( nrel * 12 ) + 20		1324020	1		+			
ANR	1324126	MultiplicativeExpression	nrel * 12		1324020	0		*			
ANR	1324127	Identifier	nrel		1324020	0					
ANR	1324128	PrimaryExpression	12		1324020	1					
ANR	1324129	PrimaryExpression	20		1324020	1					
ANR	1324130	ExpressionStatement	base += ( rel -> k * 8 )	1437:1:42737:42757	1324020	7	True				
ANR	1324131	AssignmentExpression	base += ( rel -> k * 8 )		1324020	0		+=			
ANR	1324132	Identifier	base		1324020	0					
ANR	1324133	MultiplicativeExpression	rel -> k * 8		1324020	1		*			
ANR	1324134	PtrMemberAccess	rel -> k		1324020	0					
ANR	1324135	Identifier	rel		1324020	0					
ANR	1324136	Identifier	k		1324020	1					
ANR	1324137	PrimaryExpression	8		1324020	1					
ANR	1324138	ReturnStatement	return base ;	1438:1:42760:42771	1324020	8	True				
ANR	1324139	Identifier	base		1324020	0					
ANR	1324140	ReturnType	static ut64		1324020	1					
ANR	1324141	Identifier	get_import_addr_ppc		1324020	2					
ANR	1324142	ParameterList	"ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section , int nrel"		1324020	3					
ANR	1324143	Parameter	ELFOBJ * bin	1409:32:42012:42022	1324020	0	True				
ANR	1324144	ParameterType	ELFOBJ *		1324020	0					
ANR	1324145	Identifier	bin		1324020	1					
ANR	1324146	Parameter	struct ht_rel_t * rel	1409:45:42025:42044	1324020	1	True				
ANR	1324147	ParameterType	struct ht_rel_t *		1324020	0					
ANR	1324148	Identifier	rel		1324020	1					
ANR	1324149	Parameter	RBinElfSection * plt_section	1409:67:42047:42073	1324020	2	True				
ANR	1324150	ParameterType	RBinElfSection *		1324020	0					
ANR	1324151	Identifier	plt_section		1324020	1					
ANR	1324152	Parameter	int nrel	1409:96:42076:42083	1324020	3	True				
ANR	1324153	ParameterType	int		1324020	0					
ANR	1324154	Identifier	nrel		1324020	1					
ANR	1324155	CFGEntryNode	ENTRY		1324020		True				
ANR	1324156	CFGExitNode	EXIT		1324020		True				
ANR	1324157	Symbol	bin -> b		1324020						
ANR	1324158	Symbol	* rel		1324020						
ANR	1324159	Symbol	r_read_le32		1324020						
ANR	1324160	Symbol	plt_section -> offset		1324020						
ANR	1324161	Symbol	bin		1324020						
ANR	1324162	Symbol	r_read_be32		1324020						
ANR	1324163	Symbol	* bin		1324020						
ANR	1324164	Symbol	buf		1324020						
ANR	1324165	Symbol	len		1324020						
ANR	1324166	Symbol	plt_section		1324020						
ANR	1324167	Symbol	* plt_section		1324020						
ANR	1324168	Symbol	bin -> endian		1324020						
ANR	1324169	Symbol	rel		1324020						
ANR	1324170	Symbol	nrel		1324020						
ANR	1324171	Symbol	r_buf_read_at		1324020						
ANR	1324172	Symbol	rel -> k		1324020						
ANR	1324173	Symbol	base		1324020						
ANR	1324174	Function	get_import_addr_sparc	1441:0:42776:43196							
ANR	1324175	FunctionDef	"get_import_addr_sparc (ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section)"		1324174	0					
ANR	1324176	CompoundStatement		1441:98:42874:43196	1324174	0					
ANR	1324177	IfStatement	if ( ! plt_section )		1324174	0					
ANR	1324178	Condition	! plt_section	1442:5:42881:42892	1324174	0	True				
ANR	1324179	UnaryOperationExpression	! plt_section		1324174	0					
ANR	1324180	UnaryOperator	!		1324174	0					
ANR	1324181	Identifier	plt_section		1324174	1					
ANR	1324182	CompoundStatement		2:19:20:20	1324174	1					
ANR	1324183	ReturnStatement	return UT64_MAX ;	1443:2:42899:42914	1324174	0	True				
ANR	1324184	Identifier	UT64_MAX		1324174	0					
ANR	1324185	IdentifierDeclStatement	ut64 plt_addr = plt_section -> rva ;	1445:1:42920:42952	1324174	1	True				
ANR	1324186	IdentifierDecl	plt_addr = plt_section -> rva		1324174	0					
ANR	1324187	IdentifierDeclType	ut64		1324174	0					
ANR	1324188	Identifier	plt_addr		1324174	1					
ANR	1324189	AssignmentExpression	plt_addr = plt_section -> rva		1324174	2		=			
ANR	1324190	Identifier	plt_addr		1324174	0					
ANR	1324191	PtrMemberAccess	plt_section -> rva		1324174	1					
ANR	1324192	Identifier	plt_section		1324174	0					
ANR	1324193	Identifier	rva		1324174	1					
ANR	1324194	SwitchStatement	switch ( REL_TYPE )		1324174	2					
ANR	1324195	Condition	REL_TYPE	1446:9:42963:42970	1324174	0	True				
ANR	1324196	Identifier	REL_TYPE		1324174	0					
ANR	1324197	CompoundStatement		6:19:98:98	1324174	1					
ANR	1324198	Label	case R_SPARC_JMP_SLOT :	1447:1:42976:42997	1324174	0	True				
ANR	1324199	Identifier	R_SPARC_JMP_SLOT		1324174	0					
ANR	1324200	ExpressionStatement	plt_addr += rel -> k * 12 + 20	1448:2:43001:43029	1324174	1	True				
ANR	1324201	AssignmentExpression	plt_addr += rel -> k * 12 + 20		1324174	0		+=			
ANR	1324202	Identifier	plt_addr		1324174	0					
ANR	1324203	AdditiveExpression	rel -> k * 12 + 20		1324174	1		+			
ANR	1324204	MultiplicativeExpression	rel -> k * 12		1324174	0		*			
ANR	1324205	PtrMemberAccess	rel -> k		1324174	0					
ANR	1324206	Identifier	rel		1324174	0					
ANR	1324207	Identifier	k		1324174	1					
ANR	1324208	PrimaryExpression	12		1324174	1					
ANR	1324209	PrimaryExpression	20		1324174	1					
ANR	1324210	IfStatement	if ( plt_addr & 1 )		1324174	2					
ANR	1324211	Condition	plt_addr & 1	1450:6:43055:43066	1324174	0	True				
ANR	1324212	BitAndExpression	plt_addr & 1		1324174	0		&			
ANR	1324213	Identifier	plt_addr		1324174	0					
ANR	1324214	PrimaryExpression	1		1324174	1					
ANR	1324215	CompoundStatement		10:20:194:194	1324174	1					
ANR	1324216	ExpressionStatement	plt_addr --	1451:3:43074:43084	1324174	0	True				
ANR	1324217	PostIncDecOperationExpression	plt_addr --		1324174	0					
ANR	1324218	Identifier	plt_addr		1324174	0					
ANR	1324219	IncDec	--		1324174	1					
ANR	1324220	ReturnStatement	return plt_addr ;	1453:2:43092:43107	1324174	3	True				
ANR	1324221	Identifier	plt_addr		1324174	0					
ANR	1324222	Label	default :	1454:1:43110:43117	1324174	4	True				
ANR	1324223	Identifier	default		1324174	0					
ANR	1324224	ExpressionStatement	"bprintf ( ""Unknown sparc reloc type %d\\n"" , REL_TYPE )"	1455:2:43121:43172	1324174	5	True				
ANR	1324225	CallExpression	"bprintf ( ""Unknown sparc reloc type %d\\n"" , REL_TYPE )"		1324174	0					
ANR	1324226	Callee	bprintf		1324174	0					
ANR	1324227	Identifier	bprintf		1324174	0					
ANR	1324228	ArgumentList	"""Unknown sparc reloc type %d\\n"""		1324174	1					
ANR	1324229	Argument	"""Unknown sparc reloc type %d\\n"""		1324174	0					
ANR	1324230	PrimaryExpression	"""Unknown sparc reloc type %d\\n"""		1324174	0					
ANR	1324231	Argument	REL_TYPE		1324174	1					
ANR	1324232	Identifier	REL_TYPE		1324174	0					
ANR	1324233	ReturnStatement	return UT64_MAX ;	1456:2:43176:43191	1324174	6	True				
ANR	1324234	Identifier	UT64_MAX		1324174	0					
ANR	1324235	ReturnType	static ut64		1324174	1					
ANR	1324236	Identifier	get_import_addr_sparc		1324174	2					
ANR	1324237	ParameterList	"ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section"		1324174	3					
ANR	1324238	Parameter	ELFOBJ * bin	1441:34:42810:42820	1324174	0	True				
ANR	1324239	ParameterType	ELFOBJ *		1324174	0					
ANR	1324240	Identifier	bin		1324174	1					
ANR	1324241	Parameter	struct ht_rel_t * rel	1441:47:42823:42842	1324174	1	True				
ANR	1324242	ParameterType	struct ht_rel_t *		1324174	0					
ANR	1324243	Identifier	rel		1324174	1					
ANR	1324244	Parameter	RBinElfSection * plt_section	1441:69:42845:42871	1324174	2	True				
ANR	1324245	ParameterType	RBinElfSection *		1324174	0					
ANR	1324246	Identifier	plt_section		1324174	1					
ANR	1324247	CFGEntryNode	ENTRY		1324174		True				
ANR	1324248	CFGExitNode	EXIT		1324174		True				
ANR	1324249	Symbol	plt_section -> rva		1324174						
ANR	1324250	Symbol	REL_TYPE		1324174						
ANR	1324251	Symbol	* rel		1324174						
ANR	1324252	Symbol	plt_section		1324174						
ANR	1324253	Symbol	bin		1324174						
ANR	1324254	Symbol	* plt_section		1324174						
ANR	1324255	Symbol	plt_addr		1324174						
ANR	1324256	Symbol	rel		1324174						
ANR	1324257	Symbol	UT64_MAX		1324174						
ANR	1324258	Symbol	rel -> k		1324174						
ANR	1324259	Function	get_import_addr_arm	1460:0:43199:43701							
ANR	1324260	FunctionDef	"get_import_addr_arm (ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section)"		1324259	0					
ANR	1324261	CompoundStatement		1460:96:43295:43701	1324259	0					
ANR	1324262	IfStatement	if ( ! plt_section )		1324259	0					
ANR	1324263	Condition	! plt_section	1461:5:43302:43313	1324259	0	True				
ANR	1324264	UnaryOperationExpression	! plt_section		1324259	0					
ANR	1324265	UnaryOperator	!		1324259	0					
ANR	1324266	Identifier	plt_section		1324259	1					
ANR	1324267	CompoundStatement		2:19:20:20	1324259	1					
ANR	1324268	ReturnStatement	return UT32_MAX ;	1462:2:43320:43335	1324259	0	True				
ANR	1324269	Identifier	UT32_MAX		1324259	0					
ANR	1324270	IdentifierDeclStatement	ut64 plt_addr = plt_section -> rva ;	1464:1:43341:43373	1324259	1	True				
ANR	1324271	IdentifierDecl	plt_addr = plt_section -> rva		1324259	0					
ANR	1324272	IdentifierDeclType	ut64		1324259	0					
ANR	1324273	Identifier	plt_addr		1324259	1					
ANR	1324274	AssignmentExpression	plt_addr = plt_section -> rva		1324259	2		=			
ANR	1324275	Identifier	plt_addr		1324259	0					
ANR	1324276	PtrMemberAccess	plt_section -> rva		1324259	1					
ANR	1324277	Identifier	plt_section		1324259	0					
ANR	1324278	Identifier	rva		1324259	1					
ANR	1324279	SwitchStatement	switch ( REL_TYPE )		1324259	2					
ANR	1324280	Condition	REL_TYPE	1465:9:43384:43391	1324259	0	True				
ANR	1324281	Identifier	REL_TYPE		1324259	0					
ANR	1324282	CompoundStatement		6:19:98:98	1324259	1					
ANR	1324283	Label	case R_ARM_JUMP_SLOT :	1466:1:43397:43417	1324259	0	True				
ANR	1324284	Identifier	R_ARM_JUMP_SLOT		1324259	0					
ANR	1324285	CompoundStatement		7:23:123:123	1324259	1					
ANR	1324286	ExpressionStatement	plt_addr += rel -> k * 12 + 20	1467:2:43423:43451	1324259	0	True				
ANR	1324287	AssignmentExpression	plt_addr += rel -> k * 12 + 20		1324259	0		+=			
ANR	1324288	Identifier	plt_addr		1324259	0					
ANR	1324289	AdditiveExpression	rel -> k * 12 + 20		1324259	1		+			
ANR	1324290	MultiplicativeExpression	rel -> k * 12		1324259	0		*			
ANR	1324291	PtrMemberAccess	rel -> k		1324259	0					
ANR	1324292	Identifier	rel		1324259	0					
ANR	1324293	Identifier	k		1324259	1					
ANR	1324294	PrimaryExpression	12		1324259	1					
ANR	1324295	PrimaryExpression	20		1324259	1					
ANR	1324296	IfStatement	if ( plt_addr & 1 )		1324259	1					
ANR	1324297	Condition	plt_addr & 1	1469:6:43477:43488	1324259	0	True				
ANR	1324298	BitAndExpression	plt_addr & 1		1324259	0		&			
ANR	1324299	Identifier	plt_addr		1324259	0					
ANR	1324300	PrimaryExpression	1		1324259	1					
ANR	1324301	CompoundStatement		10:20:195:195	1324259	1					
ANR	1324302	ExpressionStatement	plt_addr --	1470:3:43496:43506	1324259	0	True				
ANR	1324303	PostIncDecOperationExpression	plt_addr --		1324259	0					
ANR	1324304	Identifier	plt_addr		1324259	0					
ANR	1324305	IncDec	--		1324259	1					
ANR	1324306	ReturnStatement	return plt_addr ;	1472:2:43514:43529	1324259	2	True				
ANR	1324307	Identifier	plt_addr		1324259	0					
ANR	1324308	Label	case R_AARCH64_JUMP_SLOT :	1474:1:43535:43559	1324259	2	True				
ANR	1324309	Identifier	R_AARCH64_JUMP_SLOT		1324259	0					
ANR	1324310	ReturnStatement	return plt_addr + rel -> k * 16 + 32 ;	1475:2:43563:43597	1324259	3	True				
ANR	1324311	AdditiveExpression	plt_addr + rel -> k * 16 + 32		1324259	0		+			
ANR	1324312	Identifier	plt_addr		1324259	0					
ANR	1324313	AdditiveExpression	rel -> k * 16 + 32		1324259	1		+			
ANR	1324314	MultiplicativeExpression	rel -> k * 16		1324259	0		*			
ANR	1324315	PtrMemberAccess	rel -> k		1324259	0					
ANR	1324316	Identifier	rel		1324259	0					
ANR	1324317	Identifier	k		1324259	1					
ANR	1324318	PrimaryExpression	16		1324259	1					
ANR	1324319	PrimaryExpression	32		1324259	1					
ANR	1324320	Label	default :	1476:1:43600:43607	1324259	4	True				
ANR	1324321	Identifier	default		1324259	0					
ANR	1324322	ExpressionStatement	"bprintf ( ""Unsupported relocation type for imports %d\\n"" , REL_TYPE )"	1477:2:43611:43677	1324259	5	True				
ANR	1324323	CallExpression	"bprintf ( ""Unsupported relocation type for imports %d\\n"" , REL_TYPE )"		1324259	0					
ANR	1324324	Callee	bprintf		1324259	0					
ANR	1324325	Identifier	bprintf		1324259	0					
ANR	1324326	ArgumentList	"""Unsupported relocation type for imports %d\\n"""		1324259	1					
ANR	1324327	Argument	"""Unsupported relocation type for imports %d\\n"""		1324259	0					
ANR	1324328	PrimaryExpression	"""Unsupported relocation type for imports %d\\n"""		1324259	0					
ANR	1324329	Argument	REL_TYPE		1324259	1					
ANR	1324330	Identifier	REL_TYPE		1324259	0					
ANR	1324331	ReturnStatement	return UT64_MAX ;	1478:2:43681:43696	1324259	6	True				
ANR	1324332	Identifier	UT64_MAX		1324259	0					
ANR	1324333	ReturnType	static ut64		1324259	1					
ANR	1324334	Identifier	get_import_addr_arm		1324259	2					
ANR	1324335	ParameterList	"ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section"		1324259	3					
ANR	1324336	Parameter	ELFOBJ * bin	1460:32:43231:43241	1324259	0	True				
ANR	1324337	ParameterType	ELFOBJ *		1324259	0					
ANR	1324338	Identifier	bin		1324259	1					
ANR	1324339	Parameter	struct ht_rel_t * rel	1460:45:43244:43263	1324259	1	True				
ANR	1324340	ParameterType	struct ht_rel_t *		1324259	0					
ANR	1324341	Identifier	rel		1324259	1					
ANR	1324342	Parameter	RBinElfSection * plt_section	1460:67:43266:43292	1324259	2	True				
ANR	1324343	ParameterType	RBinElfSection *		1324259	0					
ANR	1324344	Identifier	plt_section		1324259	1					
ANR	1324345	CFGEntryNode	ENTRY		1324259		True				
ANR	1324346	CFGExitNode	EXIT		1324259		True				
ANR	1324347	Symbol	UT32_MAX		1324259						
ANR	1324348	Symbol	plt_section -> rva		1324259						
ANR	1324349	Symbol	REL_TYPE		1324259						
ANR	1324350	Symbol	* rel		1324259						
ANR	1324351	Symbol	plt_section		1324259						
ANR	1324352	Symbol	bin		1324259						
ANR	1324353	Symbol	* plt_section		1324259						
ANR	1324354	Symbol	plt_addr		1324259						
ANR	1324355	Symbol	rel		1324259						
ANR	1324356	Symbol	rel -> k		1324259						
ANR	1324357	Symbol	UT64_MAX		1324259						
ANR	1324358	Function	get_import_addr_x86	1482:0:43704:47243							
ANR	1324359	FunctionDef	"get_import_addr_x86 (ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section)"		1324358	0					
ANR	1324360	CompoundStatement		1482:96:43800:47243	1324358	0					
ANR	1324361	IdentifierDeclStatement	"ut64 plt_addr , plt_sym_addr = - 1 ;"	1483:1:43803:43835	1324358	0	True				
ANR	1324362	IdentifierDecl	plt_addr		1324358	0					
ANR	1324363	IdentifierDeclType	ut64		1324358	0					
ANR	1324364	Identifier	plt_addr		1324358	1					
ANR	1324365	IdentifierDecl	plt_sym_addr = - 1		1324358	1					
ANR	1324366	IdentifierDeclType	ut64		1324358	0					
ANR	1324367	Identifier	plt_sym_addr		1324358	1					
ANR	1324368	AssignmentExpression	plt_sym_addr = - 1		1324358	2		=			
ANR	1324369	Identifier	plt_sym_addr		1324358	0					
ANR	1324370	UnaryOperationExpression	- 1		1324358	1					
ANR	1324371	UnaryOperator	-		1324358	0					
ANR	1324372	PrimaryExpression	1		1324358	1					
ANR	1324373	IdentifierDeclStatement	ut8 buf [ sizeof ( Elf_ ( Addr ) ) ] ;	1484:1:43838:43866	1324358	1	True				
ANR	1324374	IdentifierDecl	buf [ sizeof ( Elf_ ( Addr ) ) ]		1324358	0					
ANR	1324375	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Addr ) ) ]		1324358	0					
ANR	1324376	Identifier	buf		1324358	1					
ANR	1324377	SizeofExpression	sizeof ( Elf_ ( Addr ) )		1324358	2					
ANR	1324378	Sizeof	sizeof		1324358	0					
ANR	1324379	CallExpression	Elf_ ( Addr )		1324358	1					
ANR	1324380	Callee	Elf_		1324358	0					
ANR	1324381	Identifier	Elf_		1324358	0					
ANR	1324382	ArgumentList	Addr		1324358	1					
ANR	1324383	Argument	Addr		1324358	0					
ANR	1324384	Identifier	Addr		1324358	0					
ANR	1324385	IdentifierDeclStatement	int len ;	1485:1:43869:43876	1324358	2	True				
ANR	1324386	IdentifierDecl	len		1324358	0					
ANR	1324387	IdentifierDeclType	int		1324358	0					
ANR	1324388	Identifier	len		1324358	1					
ANR	1324389	IdentifierDeclStatement	"RBinElfSection * pltsec_section = get_section_by_name ( bin , "".plt.sec"" ) ;"	1487:1:43880:43950	1324358	3	True				
ANR	1324390	IdentifierDecl	"* pltsec_section = get_section_by_name ( bin , "".plt.sec"" )"		1324358	0					
ANR	1324391	IdentifierDeclType	RBinElfSection *		1324358	0					
ANR	1324392	Identifier	pltsec_section		1324358	1					
ANR	1324393	AssignmentExpression	"* pltsec_section = get_section_by_name ( bin , "".plt.sec"" )"		1324358	2		=			
ANR	1324394	Identifier	pltsec_section		1324358	0					
ANR	1324395	CallExpression	"get_section_by_name ( bin , "".plt.sec"" )"		1324358	1					
ANR	1324396	Callee	get_section_by_name		1324358	0					
ANR	1324397	Identifier	get_section_by_name		1324358	0					
ANR	1324398	ArgumentList	bin		1324358	1					
ANR	1324399	Argument	bin		1324358	0					
ANR	1324400	Identifier	bin		1324358	0					
ANR	1324401	Argument	""".plt.sec"""		1324358	1					
ANR	1324402	PrimaryExpression	""".plt.sec"""		1324358	0					
ANR	1324403	IdentifierDeclStatement	ut64 got_addr = get_got_addr ( bin ) ;	1488:1:43953:43987	1324358	4	True				
ANR	1324404	IdentifierDecl	got_addr = get_got_addr ( bin )		1324358	0					
ANR	1324405	IdentifierDeclType	ut64		1324358	0					
ANR	1324406	Identifier	got_addr		1324358	1					
ANR	1324407	AssignmentExpression	got_addr = get_got_addr ( bin )		1324358	2		=			
ANR	1324408	Identifier	got_addr		1324358	0					
ANR	1324409	CallExpression	get_got_addr ( bin )		1324358	1					
ANR	1324410	Callee	get_got_addr		1324358	0					
ANR	1324411	Identifier	get_got_addr		1324358	0					
ANR	1324412	ArgumentList	bin		1324358	1					
ANR	1324413	Argument	bin		1324358	0					
ANR	1324414	Identifier	bin		1324358	0					
ANR	1324415	IfStatement	if ( got_addr == - 1 )		1324358	5					
ANR	1324416	Condition	got_addr == - 1	1489:5:43994:44007	1324358	0	True				
ANR	1324417	EqualityExpression	got_addr == - 1		1324358	0		==			
ANR	1324418	Identifier	got_addr		1324358	0					
ANR	1324419	UnaryOperationExpression	- 1		1324358	1					
ANR	1324420	UnaryOperator	-		1324358	0					
ANR	1324421	PrimaryExpression	1		1324358	1					
ANR	1324422	CompoundStatement		8:21:209:209	1324358	1					
ANR	1324423	ReturnStatement	return UT64_MAX ;	1490:2:44014:44029	1324358	0	True				
ANR	1324424	Identifier	UT64_MAX		1324358	0					
ANR	1324425	IdentifierDeclStatement	"ut64 got_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , got_addr ) ;"	1493:1:44036:44093	1324358	6	True				
ANR	1324426	IdentifierDecl	"got_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , got_addr )"		1324358	0					
ANR	1324427	IdentifierDeclType	ut64		1324358	0					
ANR	1324428	Identifier	got_offset		1324358	1					
ANR	1324429	AssignmentExpression	"got_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , got_addr )"		1324358	2		=			
ANR	1324430	Identifier	got_offset		1324358	0					
ANR	1324431	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , got_addr )"		1324358	1					
ANR	1324432	Callee	Elf_ ( r_bin_elf_v2p_new )		1324358	0					
ANR	1324433	CallExpression	Elf_ ( r_bin_elf_v2p_new )		1324358	0					
ANR	1324434	Callee	Elf_		1324358	0					
ANR	1324435	Identifier	Elf_		1324358	0					
ANR	1324436	ArgumentList	r_bin_elf_v2p_new		1324358	1					
ANR	1324437	Argument	r_bin_elf_v2p_new		1324358	0					
ANR	1324438	Identifier	r_bin_elf_v2p_new		1324358	0					
ANR	1324439	ArgumentList	bin		1324358	1					
ANR	1324440	Argument	bin		1324358	0					
ANR	1324441	Identifier	bin		1324358	0					
ANR	1324442	Argument	got_addr		1324358	1					
ANR	1324443	Identifier	got_addr		1324358	0					
ANR	1324444	IfStatement	if ( got_offset == UT64_MAX )		1324358	7					
ANR	1324445	Condition	got_offset == UT64_MAX	1494:5:44100:44121	1324358	0	True				
ANR	1324446	EqualityExpression	got_offset == UT64_MAX		1324358	0		==			
ANR	1324447	Identifier	got_offset		1324358	0					
ANR	1324448	Identifier	UT64_MAX		1324358	1					
ANR	1324449	CompoundStatement		13:29:323:323	1324358	1					
ANR	1324450	ReturnStatement	return UT64_MAX ;	1495:2:44128:44143	1324358	0	True				
ANR	1324451	Identifier	UT64_MAX		1324358	0					
ANR	1324452	IdentifierDeclStatement	ut64 of = REL_OFFSET - got_addr + got_offset ;	1498:1:44150:44194	1324358	8	True				
ANR	1324453	IdentifierDecl	of = REL_OFFSET - got_addr + got_offset		1324358	0					
ANR	1324454	IdentifierDeclType	ut64		1324358	0					
ANR	1324455	Identifier	of		1324358	1					
ANR	1324456	AssignmentExpression	of = REL_OFFSET - got_addr + got_offset		1324358	2		=			
ANR	1324457	Identifier	of		1324358	0					
ANR	1324458	AdditiveExpression	REL_OFFSET - got_addr + got_offset		1324358	1		-			
ANR	1324459	Identifier	REL_OFFSET		1324358	0					
ANR	1324460	AdditiveExpression	got_addr + got_offset		1324358	1		+			
ANR	1324461	Identifier	got_addr		1324358	0					
ANR	1324462	Identifier	got_offset		1324358	1					
ANR	1324463	SwitchStatement	switch ( REL_TYPE )		1324358	9					
ANR	1324464	Condition	REL_TYPE	1500:9:44206:44213	1324358	0	True				
ANR	1324465	Identifier	REL_TYPE		1324358	0					
ANR	1324466	CompoundStatement		19:19:415:415	1324358	1					
ANR	1324467	Label	case 1 :	1501:1:44219:44225	1324358	0	True				
ANR	1324468	Label	case R_386_GLOB_DAT :	1505:1:44345:44364	1324358	1	True				
ANR	1324469	Identifier	R_386_GLOB_DAT		1324358	0					
ANR	1324470	Label	case R_386_JMP_SLOT :	1506:1:44367:44386	1324358	2	True				
ANR	1324471	Identifier	R_386_JMP_SLOT		1324358	0					
ANR	1324472	IfStatement	if ( of > bin -> size || of + sizeof ( Elf_ ( Addr ) ) >= bin -> size )		1324358	3					
ANR	1324473	Condition	of > bin -> size || of + sizeof ( Elf_ ( Addr ) ) >= bin -> size	1507:6:44394:44448	1324358	0	True				
ANR	1324474	OrExpression	of > bin -> size || of + sizeof ( Elf_ ( Addr ) ) >= bin -> size		1324358	0		||			
ANR	1324475	RelationalExpression	of > bin -> size		1324358	0		>			
ANR	1324476	Identifier	of		1324358	0					
ANR	1324477	PtrMemberAccess	bin -> size		1324358	1					
ANR	1324478	Identifier	bin		1324358	0					
ANR	1324479	Identifier	size		1324358	1					
ANR	1324480	RelationalExpression	of + sizeof ( Elf_ ( Addr ) ) >= bin -> size		1324358	1		>=			
ANR	1324481	AdditiveExpression	of + sizeof ( Elf_ ( Addr ) )		1324358	0		+			
ANR	1324482	Identifier	of		1324358	0					
ANR	1324483	SizeofExpression	sizeof ( Elf_ ( Addr ) )		1324358	1					
ANR	1324484	Sizeof	sizeof		1324358	0					
ANR	1324485	CallExpression	Elf_ ( Addr )		1324358	1					
ANR	1324486	Callee	Elf_		1324358	0					
ANR	1324487	Identifier	Elf_		1324358	0					
ANR	1324488	ArgumentList	Addr		1324358	1					
ANR	1324489	Argument	Addr		1324358	0					
ANR	1324490	Identifier	Addr		1324358	0					
ANR	1324491	PtrMemberAccess	bin -> size		1324358	1					
ANR	1324492	Identifier	bin		1324358	0					
ANR	1324493	Identifier	size		1324358	1					
ANR	1324494	CompoundStatement		26:63:650:650	1324358	1					
ANR	1324495	ReturnStatement	return UT64_MAX ;	1508:3:44456:44471	1324358	0	True				
ANR	1324496	Identifier	UT64_MAX		1324358	0					
ANR	1324497	ExpressionStatement	"len = r_buf_read_at ( bin -> b , of , buf , sizeof ( Elf_ ( Addr ) ) )"	1511:2:44480:44538	1324358	4	True				
ANR	1324498	AssignmentExpression	"len = r_buf_read_at ( bin -> b , of , buf , sizeof ( Elf_ ( Addr ) ) )"		1324358	0		=			
ANR	1324499	Identifier	len		1324358	0					
ANR	1324500	CallExpression	"r_buf_read_at ( bin -> b , of , buf , sizeof ( Elf_ ( Addr ) ) )"		1324358	1					
ANR	1324501	Callee	r_buf_read_at		1324358	0					
ANR	1324502	Identifier	r_buf_read_at		1324358	0					
ANR	1324503	ArgumentList	bin -> b		1324358	1					
ANR	1324504	Argument	bin -> b		1324358	0					
ANR	1324505	PtrMemberAccess	bin -> b		1324358	0					
ANR	1324506	Identifier	bin		1324358	0					
ANR	1324507	Identifier	b		1324358	1					
ANR	1324508	Argument	of		1324358	1					
ANR	1324509	Identifier	of		1324358	0					
ANR	1324510	Argument	buf		1324358	2					
ANR	1324511	Identifier	buf		1324358	0					
ANR	1324512	Argument	sizeof ( Elf_ ( Addr ) )		1324358	3					
ANR	1324513	SizeofExpression	sizeof ( Elf_ ( Addr ) )		1324358	0					
ANR	1324514	Sizeof	sizeof		1324358	0					
ANR	1324515	CallExpression	Elf_ ( Addr )		1324358	1					
ANR	1324516	Callee	Elf_		1324358	0					
ANR	1324517	Identifier	Elf_		1324358	0					
ANR	1324518	ArgumentList	Addr		1324358	1					
ANR	1324519	Argument	Addr		1324358	0					
ANR	1324520	Identifier	Addr		1324358	0					
ANR	1324521	IfStatement	if ( len < - 1 )		1324358	5					
ANR	1324522	Condition	len < - 1	1512:6:44546:44553	1324358	0	True				
ANR	1324523	RelationalExpression	len < - 1		1324358	0		<			
ANR	1324524	Identifier	len		1324358	0					
ANR	1324525	UnaryOperationExpression	- 1		1324358	1					
ANR	1324526	UnaryOperator	-		1324358	0					
ANR	1324527	PrimaryExpression	1		1324358	1					
ANR	1324528	CompoundStatement		31:16:755:755	1324358	1					
ANR	1324529	ReturnStatement	return UT64_MAX ;	1513:3:44561:44576	1324358	0	True				
ANR	1324530	Identifier	UT64_MAX		1324358	0					
ANR	1324531	ExpressionStatement	plt_sym_addr = sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )	1515:2:44584:44669	1324358	6	True				
ANR	1324532	AssignmentExpression	plt_sym_addr = sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )		1324358	0		=			
ANR	1324533	Identifier	plt_sym_addr		1324358	0					
ANR	1324534	ConditionalExpression	sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )		1324358	1					
ANR	1324535	Condition	sizeof ( Elf_ ( Addr ) ) == 4		1324358	0					
ANR	1324536	EqualityExpression	sizeof ( Elf_ ( Addr ) ) == 4		1324358	0		==			
ANR	1324537	SizeofExpression	sizeof ( Elf_ ( Addr ) )		1324358	0					
ANR	1324538	Sizeof	sizeof		1324358	0					
ANR	1324539	CallExpression	Elf_ ( Addr )		1324358	1					
ANR	1324540	Callee	Elf_		1324358	0					
ANR	1324541	Identifier	Elf_		1324358	0					
ANR	1324542	ArgumentList	Addr		1324358	1					
ANR	1324543	Argument	Addr		1324358	0					
ANR	1324544	Identifier	Addr		1324358	0					
ANR	1324545	PrimaryExpression	4		1324358	1					
ANR	1324546	CallExpression	r_read_le32 ( buf )		1324358	1					
ANR	1324547	Callee	r_read_le32		1324358	0					
ANR	1324548	Identifier	r_read_le32		1324358	0					
ANR	1324549	ArgumentList	buf		1324358	1					
ANR	1324550	Argument	buf		1324358	0					
ANR	1324551	Identifier	buf		1324358	0					
ANR	1324552	CallExpression	r_read_le64 ( buf )		1324358	2					
ANR	1324553	Callee	r_read_le64		1324358	0					
ANR	1324554	Identifier	r_read_le64		1324358	0					
ANR	1324555	ArgumentList	buf		1324358	1					
ANR	1324556	Argument	buf		1324358	0					
ANR	1324557	Identifier	buf		1324358	0					
ANR	1324558	IfStatement	if ( ! plt_sym_addr )		1324358	7					
ANR	1324559	Condition	! plt_sym_addr	1519:6:44678:44690	1324358	0	True				
ANR	1324560	UnaryOperationExpression	! plt_sym_addr		1324358	0					
ANR	1324561	UnaryOperator	!		1324358	0					
ANR	1324562	Identifier	plt_sym_addr		1324358	1					
ANR	1324563	CompoundStatement		41:3:1018:1075	1324358	1					
ANR	1324564	IdentifierDeclStatement	"RBinElfSection * s = get_section_by_name ( bin , "".plt.got"" ) ;"	1522:3:44819:44876	1324358	0	True				
ANR	1324565	IdentifierDecl	"* s = get_section_by_name ( bin , "".plt.got"" )"		1324358	0					
ANR	1324566	IdentifierDeclType	RBinElfSection *		1324358	0					
ANR	1324567	Identifier	s		1324358	1					
ANR	1324568	AssignmentExpression	"* s = get_section_by_name ( bin , "".plt.got"" )"		1324358	2		=			
ANR	1324569	Identifier	s		1324358	0					
ANR	1324570	CallExpression	"get_section_by_name ( bin , "".plt.got"" )"		1324358	1					
ANR	1324571	Callee	get_section_by_name		1324358	0					
ANR	1324572	Identifier	get_section_by_name		1324358	0					
ANR	1324573	ArgumentList	bin		1324358	1					
ANR	1324574	Argument	bin		1324358	0					
ANR	1324575	Identifier	bin		1324358	0					
ANR	1324576	Argument	""".plt.got"""		1324358	1					
ANR	1324577	PrimaryExpression	""".plt.got"""		1324358	0					
ANR	1324578	IfStatement	if ( Elf_ ( r_bin_elf_has_relro ) ( bin ) < R_ELF_PART_RELRO || ! s )		1324358	1					
ANR	1324579	Condition	Elf_ ( r_bin_elf_has_relro ) ( bin ) < R_ELF_PART_RELRO || ! s	1523:7:44885:44940	1324358	0	True				
ANR	1324580	OrExpression	Elf_ ( r_bin_elf_has_relro ) ( bin ) < R_ELF_PART_RELRO || ! s		1324358	0		||			
ANR	1324581	RelationalExpression	Elf_ ( r_bin_elf_has_relro ) ( bin ) < R_ELF_PART_RELRO		1324358	0		<			
ANR	1324582	CallExpression	Elf_ ( r_bin_elf_has_relro ) ( bin )		1324358	0					
ANR	1324583	Callee	Elf_ ( r_bin_elf_has_relro )		1324358	0					
ANR	1324584	CallExpression	Elf_ ( r_bin_elf_has_relro )		1324358	0					
ANR	1324585	Callee	Elf_		1324358	0					
ANR	1324586	Identifier	Elf_		1324358	0					
ANR	1324587	ArgumentList	r_bin_elf_has_relro		1324358	1					
ANR	1324588	Argument	r_bin_elf_has_relro		1324358	0					
ANR	1324589	Identifier	r_bin_elf_has_relro		1324358	0					
ANR	1324590	ArgumentList	bin		1324358	1					
ANR	1324591	Argument	bin		1324358	0					
ANR	1324592	Identifier	bin		1324358	0					
ANR	1324593	Identifier	R_ELF_PART_RELRO		1324358	1					
ANR	1324594	UnaryOperationExpression	! s		1324358	1					
ANR	1324595	UnaryOperator	!		1324358	0					
ANR	1324596	Identifier	s		1324358	1					
ANR	1324597	CompoundStatement		42:65:1142:1142	1324358	1					
ANR	1324598	ReturnStatement	return 0 ;	1524:4:44949:44957	1324358	0	True				
ANR	1324599	PrimaryExpression	0		1324358	0					
ANR	1324600	ExpressionStatement	plt_addr = s -> offset	1526:3:44967:44987	1324358	2	True				
ANR	1324601	AssignmentExpression	plt_addr = s -> offset		1324358	0		=			
ANR	1324602	Identifier	plt_addr		1324358	0					
ANR	1324603	PtrMemberAccess	s -> offset		1324358	1					
ANR	1324604	Identifier	s		1324358	0					
ANR	1324605	Identifier	offset		1324358	1					
ANR	1324606	ExpressionStatement	of = of + got_addr - got_offset	1527:3:44992:45023	1324358	3	True				
ANR	1324607	AssignmentExpression	of = of + got_addr - got_offset		1324358	0		=			
ANR	1324608	Identifier	of		1324358	0					
ANR	1324609	AdditiveExpression	of + got_addr - got_offset		1324358	1		+			
ANR	1324610	Identifier	of		1324358	0					
ANR	1324611	AdditiveExpression	got_addr - got_offset		1324358	1		-			
ANR	1324612	Identifier	got_addr		1324358	0					
ANR	1324613	Identifier	got_offset		1324358	1					
ANR	1324614	WhileStatement	while ( plt_addr + 2 + 4 < s -> offset + s -> size )		1324358	4					
ANR	1324615	Condition	plt_addr + 2 + 4 < s -> offset + s -> size	1528:10:45035:45072	1324358	0	True				
ANR	1324616	RelationalExpression	plt_addr + 2 + 4 < s -> offset + s -> size		1324358	0		<			
ANR	1324617	AdditiveExpression	plt_addr + 2 + 4		1324358	0		+			
ANR	1324618	Identifier	plt_addr		1324358	0					
ANR	1324619	AdditiveExpression	2 + 4		1324358	1		+			
ANR	1324620	PrimaryExpression	2		1324358	0					
ANR	1324621	PrimaryExpression	4		1324358	1					
ANR	1324622	AdditiveExpression	s -> offset + s -> size		1324358	1		+			
ANR	1324623	PtrMemberAccess	s -> offset		1324358	0					
ANR	1324624	Identifier	s		1324358	0					
ANR	1324625	Identifier	offset		1324358	1					
ANR	1324626	PtrMemberAccess	s -> size		1324358	1					
ANR	1324627	Identifier	s		1324358	0					
ANR	1324628	Identifier	size		1324358	1					
ANR	1324629	CompoundStatement		47:50:1274:1274	1324358	1					
ANR	1324630	ExpressionStatement	"len = r_buf_read_at ( bin -> b , plt_addr + 2 , buf , 4 )"	1544:4:45589:45639	1324358	0	True				
ANR	1324631	AssignmentExpression	"len = r_buf_read_at ( bin -> b , plt_addr + 2 , buf , 4 )"		1324358	0		=			
ANR	1324632	Identifier	len		1324358	0					
ANR	1324633	CallExpression	"r_buf_read_at ( bin -> b , plt_addr + 2 , buf , 4 )"		1324358	1					
ANR	1324634	Callee	r_buf_read_at		1324358	0					
ANR	1324635	Identifier	r_buf_read_at		1324358	0					
ANR	1324636	ArgumentList	bin -> b		1324358	1					
ANR	1324637	Argument	bin -> b		1324358	0					
ANR	1324638	PtrMemberAccess	bin -> b		1324358	0					
ANR	1324639	Identifier	bin		1324358	0					
ANR	1324640	Identifier	b		1324358	1					
ANR	1324641	Argument	plt_addr + 2		1324358	1					
ANR	1324642	AdditiveExpression	plt_addr + 2		1324358	0		+			
ANR	1324643	Identifier	plt_addr		1324358	0					
ANR	1324644	PrimaryExpression	2		1324358	1					
ANR	1324645	Argument	buf		1324358	2					
ANR	1324646	Identifier	buf		1324358	0					
ANR	1324647	Argument	4		1324358	3					
ANR	1324648	PrimaryExpression	4		1324358	0					
ANR	1324649	IfStatement	if ( len < - 1 )		1324358	1					
ANR	1324650	Condition	len < - 1	1545:8:45649:45656	1324358	0	True				
ANR	1324651	RelationalExpression	len < - 1		1324358	0		<			
ANR	1324652	Identifier	len		1324358	0					
ANR	1324653	UnaryOperationExpression	- 1		1324358	1					
ANR	1324654	UnaryOperator	-		1324358	0					
ANR	1324655	PrimaryExpression	1		1324358	1					
ANR	1324656	CompoundStatement		64:18:1858:1858	1324358	1					
ANR	1324657	ReturnStatement	return UT64_MAX ;	1546:5:45666:45681	1324358	0	True				
ANR	1324658	Identifier	UT64_MAX		1324358	0					
ANR	1324659	ExpressionStatement	plt_sym_addr = sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )	1548:4:45693:45782	1324358	2	True				
ANR	1324660	AssignmentExpression	plt_sym_addr = sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )		1324358	0		=			
ANR	1324661	Identifier	plt_sym_addr		1324358	0					
ANR	1324662	ConditionalExpression	sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )		1324358	1					
ANR	1324663	Condition	sizeof ( Elf_ ( Addr ) ) == 4		1324358	0					
ANR	1324664	EqualityExpression	sizeof ( Elf_ ( Addr ) ) == 4		1324358	0		==			
ANR	1324665	SizeofExpression	sizeof ( Elf_ ( Addr ) )		1324358	0					
ANR	1324666	Sizeof	sizeof		1324358	0					
ANR	1324667	CallExpression	Elf_ ( Addr )		1324358	1					
ANR	1324668	Callee	Elf_		1324358	0					
ANR	1324669	Identifier	Elf_		1324358	0					
ANR	1324670	ArgumentList	Addr		1324358	1					
ANR	1324671	Argument	Addr		1324358	0					
ANR	1324672	Identifier	Addr		1324358	0					
ANR	1324673	PrimaryExpression	4		1324358	1					
ANR	1324674	CallExpression	r_read_le32 ( buf )		1324358	1					
ANR	1324675	Callee	r_read_le32		1324358	0					
ANR	1324676	Identifier	r_read_le32		1324358	0					
ANR	1324677	ArgumentList	buf		1324358	1					
ANR	1324678	Argument	buf		1324358	0					
ANR	1324679	Identifier	buf		1324358	0					
ANR	1324680	CallExpression	r_read_le64 ( buf )		1324358	2					
ANR	1324681	Callee	r_read_le64		1324358	0					
ANR	1324682	Identifier	r_read_le64		1324358	0					
ANR	1324683	ArgumentList	buf		1324358	1					
ANR	1324684	Argument	buf		1324358	0					
ANR	1324685	Identifier	buf		1324358	0					
ANR	1324686	IfStatement	"if ( ( plt_addr + 6 + Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr ) ) == of )"		1324358	3					
ANR	1324687	Condition	"( plt_addr + 6 + Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr ) ) == of"	1553:8:45816:45877	1324358	0	True				
ANR	1324688	EqualityExpression	"( plt_addr + 6 + Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr ) ) == of"		1324358	0		==			
ANR	1324689	AdditiveExpression	"plt_addr + 6 + Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr )"		1324358	0		+			
ANR	1324690	Identifier	plt_addr		1324358	0					
ANR	1324691	AdditiveExpression	"6 + Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr )"		1324358	1		+			
ANR	1324692	PrimaryExpression	6		1324358	0					
ANR	1324693	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr )"		1324358	1					
ANR	1324694	Callee	Elf_ ( r_bin_elf_v2p )		1324358	0					
ANR	1324695	CallExpression	Elf_ ( r_bin_elf_v2p )		1324358	0					
ANR	1324696	Callee	Elf_		1324358	0					
ANR	1324697	Identifier	Elf_		1324358	0					
ANR	1324698	ArgumentList	r_bin_elf_v2p		1324358	1					
ANR	1324699	Argument	r_bin_elf_v2p		1324358	0					
ANR	1324700	Identifier	r_bin_elf_v2p		1324358	0					
ANR	1324701	ArgumentList	bin		1324358	1					
ANR	1324702	Argument	bin		1324358	0					
ANR	1324703	Identifier	bin		1324358	0					
ANR	1324704	Argument	plt_sym_addr		1324358	1					
ANR	1324705	Identifier	plt_sym_addr		1324358	0					
ANR	1324706	Identifier	of		1324358	1					
ANR	1324707	CompoundStatement		72:72:2079:2079	1324358	1					
ANR	1324708	ReturnStatement	return plt_addr ;	1554:5:45887:45902	1324358	0	True				
ANR	1324709	Identifier	plt_addr		1324358	0					
ANR	1324710	IfStatement	if ( plt_sym_addr == of )		1324358	4					
ANR	1324711	Condition	plt_sym_addr == of	1556:8:45918:45935	1324358	0	True				
ANR	1324712	EqualityExpression	plt_sym_addr == of		1324358	0		==			
ANR	1324713	Identifier	plt_sym_addr		1324358	0					
ANR	1324714	Identifier	of		1324358	1					
ANR	1324715	CompoundStatement		75:28:2137:2137	1324358	1					
ANR	1324716	ReturnStatement	return plt_addr ;	1557:5:45945:45960	1324358	0	True				
ANR	1324717	Identifier	plt_addr		1324358	0					
ANR	1324718	ExpressionStatement	plt_addr += 8	1559:4:45972:45985	1324358	5	True				
ANR	1324719	AssignmentExpression	plt_addr += 8		1324358	0		+=			
ANR	1324720	Identifier	plt_addr		1324358	0					
ANR	1324721	PrimaryExpression	8		1324358	1					
ANR	1324722	ReturnStatement	return plt_sym_addr ;	1561:3:45995:46014	1324358	5	True				
ANR	1324723	Identifier	plt_sym_addr		1324358	0					
ANR	1324724	ElseStatement	else		1324358	0					
ANR	1324725	CompoundStatement		82:3:2229:2294	1324358	0					
ANR	1324726	IdentifierDeclStatement	"ut64 plt_sym_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , plt_sym_addr ) ;"	1563:3:46030:46095	1324358	0	True				
ANR	1324727	IdentifierDecl	"plt_sym_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , plt_sym_addr )"		1324358	0					
ANR	1324728	IdentifierDeclType	ut64		1324358	0					
ANR	1324729	Identifier	plt_sym_offset		1324358	1					
ANR	1324730	AssignmentExpression	"plt_sym_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , plt_sym_addr )"		1324358	2		=			
ANR	1324731	Identifier	plt_sym_offset		1324358	0					
ANR	1324732	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , plt_sym_addr )"		1324358	1					
ANR	1324733	Callee	Elf_ ( r_bin_elf_v2p_new )		1324358	0					
ANR	1324734	CallExpression	Elf_ ( r_bin_elf_v2p_new )		1324358	0					
ANR	1324735	Callee	Elf_		1324358	0					
ANR	1324736	Identifier	Elf_		1324358	0					
ANR	1324737	ArgumentList	r_bin_elf_v2p_new		1324358	1					
ANR	1324738	Argument	r_bin_elf_v2p_new		1324358	0					
ANR	1324739	Identifier	r_bin_elf_v2p_new		1324358	0					
ANR	1324740	ArgumentList	bin		1324358	1					
ANR	1324741	Argument	bin		1324358	0					
ANR	1324742	Identifier	bin		1324358	0					
ANR	1324743	Argument	plt_sym_addr		1324358	1					
ANR	1324744	Identifier	plt_sym_addr		1324358	0					
ANR	1324745	IfStatement	if ( plt_sym_offset != UT64_MAX )		1324358	1					
ANR	1324746	Condition	plt_sym_offset != UT64_MAX	1564:7:46104:46129	1324358	0	True				
ANR	1324747	EqualityExpression	plt_sym_offset != UT64_MAX		1324358	0		!=			
ANR	1324748	Identifier	plt_sym_offset		1324358	0					
ANR	1324749	Identifier	UT64_MAX		1324358	1					
ANR	1324750	CompoundStatement		83:35:2331:2331	1324358	1					
ANR	1324751	ExpressionStatement	"len = r_buf_read_at ( bin -> b , plt_sym_offset - 6 , buf , sizeof ( buf ) )"	1565:4:46138:46205	1324358	0	True				
ANR	1324752	AssignmentExpression	"len = r_buf_read_at ( bin -> b , plt_sym_offset - 6 , buf , sizeof ( buf ) )"		1324358	0		=			
ANR	1324753	Identifier	len		1324358	0					
ANR	1324754	CallExpression	"r_buf_read_at ( bin -> b , plt_sym_offset - 6 , buf , sizeof ( buf ) )"		1324358	1					
ANR	1324755	Callee	r_buf_read_at		1324358	0					
ANR	1324756	Identifier	r_buf_read_at		1324358	0					
ANR	1324757	ArgumentList	bin -> b		1324358	1					
ANR	1324758	Argument	bin -> b		1324358	0					
ANR	1324759	PtrMemberAccess	bin -> b		1324358	0					
ANR	1324760	Identifier	bin		1324358	0					
ANR	1324761	Identifier	b		1324358	1					
ANR	1324762	Argument	plt_sym_offset - 6		1324358	1					
ANR	1324763	AdditiveExpression	plt_sym_offset - 6		1324358	0		-			
ANR	1324764	Identifier	plt_sym_offset		1324358	0					
ANR	1324765	PrimaryExpression	6		1324358	1					
ANR	1324766	Argument	buf		1324358	2					
ANR	1324767	Identifier	buf		1324358	0					
ANR	1324768	Argument	sizeof ( buf )		1324358	3					
ANR	1324769	SizeofExpression	sizeof ( buf )		1324358	0					
ANR	1324770	Sizeof	sizeof		1324358	0					
ANR	1324771	SizeofOperand	buf		1324358	1					
ANR	1324772	IfStatement	if ( len > 0 && buf [ 0 ] != 0xff )		1324358	1					
ANR	1324773	Condition	len > 0 && buf [ 0 ] != 0xff	1566:8:46215:46239	1324358	0	True				
ANR	1324774	AndExpression	len > 0 && buf [ 0 ] != 0xff		1324358	0		&&			
ANR	1324775	RelationalExpression	len > 0		1324358	0		>			
ANR	1324776	Identifier	len		1324358	0					
ANR	1324777	PrimaryExpression	0		1324358	1					
ANR	1324778	EqualityExpression	buf [ 0 ] != 0xff		1324358	1		!=			
ANR	1324779	ArrayIndexing	buf [ 0 ]		1324358	0					
ANR	1324780	Identifier	buf		1324358	0					
ANR	1324781	PrimaryExpression	0		1324358	1					
ANR	1324782	PrimaryExpression	0xff		1324358	1					
ANR	1324783	CompoundStatement		85:35:2441:2441	1324358	1					
ANR	1324784	IfStatement	if ( pltsec_section )		1324358	0					
ANR	1324785	Condition	pltsec_section	1582:9:46674:46687	1324358	0	True				
ANR	1324786	Identifier	pltsec_section		1324358	0					
ANR	1324787	CompoundStatement		101:25:2889:2889	1324358	1					
ANR	1324788	ReturnStatement	return pltsec_section -> rva + rel -> k * 16 ;	1586:6:46820:46860	1324358	0	True				
ANR	1324789	AdditiveExpression	pltsec_section -> rva + rel -> k * 16		1324358	0		+			
ANR	1324790	PtrMemberAccess	pltsec_section -> rva		1324358	0					
ANR	1324791	Identifier	pltsec_section		1324358	0					
ANR	1324792	Identifier	rva		1324358	1					
ANR	1324793	MultiplicativeExpression	rel -> k * 16		1324358	1		*			
ANR	1324794	PtrMemberAccess	rel -> k		1324358	0					
ANR	1324795	Identifier	rel		1324358	0					
ANR	1324796	Identifier	k		1324358	1					
ANR	1324797	PrimaryExpression	16		1324358	1					
ANR	1324798	ReturnStatement	return plt_sym_addr ;	1590:5:46950:46969	1324358	1	True				
ANR	1324799	Identifier	plt_sym_addr		1324358	0					
ANR	1324800	ReturnStatement	return plt_sym_addr - 6 ;	1599:3:47118:47141	1324358	2	True				
ANR	1324801	AdditiveExpression	plt_sym_addr - 6		1324358	0		-			
ANR	1324802	Identifier	plt_sym_addr		1324358	0					
ANR	1324803	PrimaryExpression	6		1324358	1					
ANR	1324804	Label	default :	1601:1:47148:47155	1324358	8	True				
ANR	1324805	Identifier	default		1324358	0					
ANR	1324806	ExpressionStatement	"bprintf ( ""Unsupported relocation type for imports %d\\n"" , REL_TYPE )"	1602:2:47159:47225	1324358	9	True				
ANR	1324807	CallExpression	"bprintf ( ""Unsupported relocation type for imports %d\\n"" , REL_TYPE )"		1324358	0					
ANR	1324808	Callee	bprintf		1324358	0					
ANR	1324809	Identifier	bprintf		1324358	0					
ANR	1324810	ArgumentList	"""Unsupported relocation type for imports %d\\n"""		1324358	1					
ANR	1324811	Argument	"""Unsupported relocation type for imports %d\\n"""		1324358	0					
ANR	1324812	PrimaryExpression	"""Unsupported relocation type for imports %d\\n"""		1324358	0					
ANR	1324813	Argument	REL_TYPE		1324358	1					
ANR	1324814	Identifier	REL_TYPE		1324358	0					
ANR	1324815	ReturnStatement	return of ;	1603:2:47229:47238	1324358	10	True				
ANR	1324816	Identifier	of		1324358	0					
ANR	1324817	ReturnType	static ut64		1324358	1					
ANR	1324818	Identifier	get_import_addr_x86		1324358	2					
ANR	1324819	ParameterList	"ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section"		1324358	3					
ANR	1324820	Parameter	ELFOBJ * bin	1482:32:43736:43746	1324358	0	True				
ANR	1324821	ParameterType	ELFOBJ *		1324358	0					
ANR	1324822	Identifier	bin		1324358	1					
ANR	1324823	Parameter	struct ht_rel_t * rel	1482:45:43749:43768	1324358	1	True				
ANR	1324824	ParameterType	struct ht_rel_t *		1324358	0					
ANR	1324825	Identifier	rel		1324358	1					
ANR	1324826	Parameter	RBinElfSection * plt_section	1482:67:43771:43797	1324358	2	True				
ANR	1324827	ParameterType	RBinElfSection *		1324358	0					
ANR	1324828	Identifier	plt_section		1324358	1					
ANR	1324829	CFGEntryNode	ENTRY		1324358		True				
ANR	1324830	CFGExitNode	EXIT		1324358		True				
ANR	1324831	Symbol	REL_TYPE		1324358						
ANR	1324832	Symbol	bin -> size		1324358						
ANR	1324833	Symbol	bin -> b		1324358						
ANR	1324834	Symbol	s -> size		1324358						
ANR	1324835	Symbol	got_addr		1324358						
ANR	1324836	Symbol	* rel		1324358						
ANR	1324837	Symbol	r_read_le64		1324358						
ANR	1324838	Symbol	bin		1324358						
ANR	1324839	Symbol	pltsec_section		1324358						
ANR	1324840	Symbol	s -> offset		1324358						
ANR	1324841	Symbol	Addr		1324358						
ANR	1324842	Symbol	got_offset		1324358						
ANR	1324843	Symbol	* bin		1324358						
ANR	1324844	Symbol	plt_sym_addr		1324358						
ANR	1324845	Symbol	REL_OFFSET		1324358						
ANR	1324846	Symbol	len		1324358						
ANR	1324847	Symbol	plt_section		1324358						
ANR	1324848	Symbol	of		1324358						
ANR	1324849	Symbol	rel		1324358						
ANR	1324850	Symbol	r_bin_elf_has_relro		1324358						
ANR	1324851	Symbol	UT64_MAX		1324358						
ANR	1324852	Symbol	r_bin_elf_v2p		1324358						
ANR	1324853	Symbol	rel -> k		1324358						
ANR	1324854	Symbol	Elf_		1324358						
ANR	1324855	Symbol	* pltsec_section		1324358						
ANR	1324856	Symbol	* buf		1324358						
ANR	1324857	Symbol	r_read_le32		1324358						
ANR	1324858	Symbol	plt_addr		1324358						
ANR	1324859	Symbol	pltsec_section -> rva		1324358						
ANR	1324860	Symbol	get_section_by_name		1324358						
ANR	1324861	Symbol	get_got_addr		1324358						
ANR	1324862	Symbol	buf		1324358						
ANR	1324863	Symbol	s		1324358						
ANR	1324864	Symbol	R_ELF_PART_RELRO		1324358						
ANR	1324865	Symbol	r_bin_elf_v2p_new		1324358						
ANR	1324866	Symbol	r_buf_read_at		1324358						
ANR	1324867	Symbol	plt_sym_offset		1324358						
ANR	1324868	Symbol	* s		1324358						
ANR	1324869	Function	get_import_addr_mips	1607:0:47246:48176							
ANR	1324870	FunctionDef	"get_import_addr_mips (ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section)"		1324869	0					
ANR	1324871	CompoundStatement		1607:97:47343:48176	1324869	0					
ANR	1324872	IdentifierDeclStatement	"RBinElfSection * s = get_section_by_name ( bin , "".rela.plt"" ) ;"	1608:1:47346:47404	1324869	0	True				
ANR	1324873	IdentifierDecl	"* s = get_section_by_name ( bin , "".rela.plt"" )"		1324869	0					
ANR	1324874	IdentifierDeclType	RBinElfSection *		1324869	0					
ANR	1324875	Identifier	s		1324869	1					
ANR	1324876	AssignmentExpression	"* s = get_section_by_name ( bin , "".rela.plt"" )"		1324869	2		=			
ANR	1324877	Identifier	s		1324869	0					
ANR	1324878	CallExpression	"get_section_by_name ( bin , "".rela.plt"" )"		1324869	1					
ANR	1324879	Callee	get_section_by_name		1324869	0					
ANR	1324880	Identifier	get_section_by_name		1324869	0					
ANR	1324881	ArgumentList	bin		1324869	1					
ANR	1324882	Argument	bin		1324869	0					
ANR	1324883	Identifier	bin		1324869	0					
ANR	1324884	Argument	""".rela.plt"""		1324869	1					
ANR	1324885	PrimaryExpression	""".rela.plt"""		1324869	0					
ANR	1324886	IfStatement	if ( s )		1324869	1					
ANR	1324887	Condition	s	1609:5:47411:47411	1324869	0	True				
ANR	1324888	Identifier	s		1324869	0					
ANR	1324889	CompoundStatement		7:2:146:218	1324869	1					
ANR	1324890	IdentifierDeclStatement	ut8 buf [ 1024 ] ;	1610:2:47418:47431	1324869	0	True				
ANR	1324891	IdentifierDecl	buf [ 1024 ]		1324869	0					
ANR	1324892	IdentifierDeclType	ut8 [ 1024 ]		1324869	0					
ANR	1324893	Identifier	buf		1324869	1					
ANR	1324894	PrimaryExpression	1024		1324869	2					
ANR	1324895	IdentifierDeclStatement	const ut8 * base ;	1611:2:47435:47450	1324869	1	True				
ANR	1324896	IdentifierDecl	* base		1324869	0					
ANR	1324897	IdentifierDeclType	const ut8 *		1324869	0					
ANR	1324898	Identifier	base		1324869	1					
ANR	1324899	IdentifierDeclStatement	ut64 plt_addr = s -> rva + s -> size ;	1612:2:47454:47486	1324869	2	True				
ANR	1324900	IdentifierDecl	plt_addr = s -> rva + s -> size		1324869	0					
ANR	1324901	IdentifierDeclType	ut64		1324869	0					
ANR	1324902	Identifier	plt_addr		1324869	1					
ANR	1324903	AssignmentExpression	plt_addr = s -> rva + s -> size		1324869	2		=			
ANR	1324904	Identifier	plt_addr		1324869	0					
ANR	1324905	AdditiveExpression	s -> rva + s -> size		1324869	1		+			
ANR	1324906	PtrMemberAccess	s -> rva		1324869	0					
ANR	1324907	Identifier	s		1324869	0					
ANR	1324908	Identifier	rva		1324869	1					
ANR	1324909	PtrMemberAccess	s -> size		1324869	1					
ANR	1324910	Identifier	s		1324869	0					
ANR	1324911	Identifier	size		1324869	1					
ANR	1324912	IdentifierDeclStatement	"int len = r_buf_read_at ( bin -> b , s -> offset + s -> size , buf , sizeof ( buf ) ) ;"	1613:2:47490:47562	1324869	3	True				
ANR	1324913	IdentifierDecl	"len = r_buf_read_at ( bin -> b , s -> offset + s -> size , buf , sizeof ( buf ) )"		1324869	0					
ANR	1324914	IdentifierDeclType	int		1324869	0					
ANR	1324915	Identifier	len		1324869	1					
ANR	1324916	AssignmentExpression	"len = r_buf_read_at ( bin -> b , s -> offset + s -> size , buf , sizeof ( buf ) )"		1324869	2		=			
ANR	1324917	Identifier	len		1324869	0					
ANR	1324918	CallExpression	"r_buf_read_at ( bin -> b , s -> offset + s -> size , buf , sizeof ( buf ) )"		1324869	1					
ANR	1324919	Callee	r_buf_read_at		1324869	0					
ANR	1324920	Identifier	r_buf_read_at		1324869	0					
ANR	1324921	ArgumentList	bin -> b		1324869	1					
ANR	1324922	Argument	bin -> b		1324869	0					
ANR	1324923	PtrMemberAccess	bin -> b		1324869	0					
ANR	1324924	Identifier	bin		1324869	0					
ANR	1324925	Identifier	b		1324869	1					
ANR	1324926	Argument	s -> offset + s -> size		1324869	1					
ANR	1324927	AdditiveExpression	s -> offset + s -> size		1324869	0		+			
ANR	1324928	PtrMemberAccess	s -> offset		1324869	0					
ANR	1324929	Identifier	s		1324869	0					
ANR	1324930	Identifier	offset		1324869	1					
ANR	1324931	PtrMemberAccess	s -> size		1324869	1					
ANR	1324932	Identifier	s		1324869	0					
ANR	1324933	Identifier	size		1324869	1					
ANR	1324934	Argument	buf		1324869	2					
ANR	1324935	Identifier	buf		1324869	0					
ANR	1324936	Argument	sizeof ( buf )		1324869	3					
ANR	1324937	SizeofExpression	sizeof ( buf )		1324869	0					
ANR	1324938	Sizeof	sizeof		1324869	0					
ANR	1324939	SizeofOperand	buf		1324869	1					
ANR	1324940	IfStatement	if ( len != sizeof ( buf ) )		1324869	4					
ANR	1324941	Condition	len != sizeof ( buf )	1614:6:47570:47588	1324869	0	True				
ANR	1324942	EqualityExpression	len != sizeof ( buf )		1324869	0		!=			
ANR	1324943	Identifier	len		1324869	0					
ANR	1324944	SizeofExpression	sizeof ( buf )		1324869	1					
ANR	1324945	Sizeof	sizeof		1324869	0					
ANR	1324946	SizeofOperand	buf		1324869	1					
ANR	1324947	CompoundStatement		8:27:247:247	1324869	1					
ANR	1324948	ExpressionStatement	"base = r_mem_mem_aligned ( buf , sizeof ( buf ) , ( const ut8 * ) ""\\x3c\\x0f\\x00"" , 3 , 4 )"	1617:2:47610:47689	1324869	5	True				
ANR	1324949	AssignmentExpression	"base = r_mem_mem_aligned ( buf , sizeof ( buf ) , ( const ut8 * ) ""\\x3c\\x0f\\x00"" , 3 , 4 )"		1324869	0		=			
ANR	1324950	Identifier	base		1324869	0					
ANR	1324951	CallExpression	"r_mem_mem_aligned ( buf , sizeof ( buf ) , ( const ut8 * ) ""\\x3c\\x0f\\x00"" , 3 , 4 )"		1324869	1					
ANR	1324952	Callee	r_mem_mem_aligned		1324869	0					
ANR	1324953	Identifier	r_mem_mem_aligned		1324869	0					
ANR	1324954	ArgumentList	buf		1324869	1					
ANR	1324955	Argument	buf		1324869	0					
ANR	1324956	Identifier	buf		1324869	0					
ANR	1324957	Argument	sizeof ( buf )		1324869	1					
ANR	1324958	SizeofExpression	sizeof ( buf )		1324869	0					
ANR	1324959	Sizeof	sizeof		1324869	0					
ANR	1324960	SizeofOperand	buf		1324869	1					
ANR	1324961	Argument	"( const ut8 * ) ""\\x3c\\x0f\\x00"""		1324869	2					
ANR	1324962	CastExpression	"( const ut8 * ) ""\\x3c\\x0f\\x00"""		1324869	0					
ANR	1324963	CastTarget	const ut8 *		1324869	0					
ANR	1324964	PrimaryExpression	"""\\x3c\\x0f\\x00"""		1324869	1					
ANR	1324965	Argument	3		1324869	3					
ANR	1324966	PrimaryExpression	3		1324869	0					
ANR	1324967	Argument	4		1324869	4					
ANR	1324968	PrimaryExpression	4		1324869	0					
ANR	1324969	IfStatement	if ( base )		1324869	6					
ANR	1324970	Condition	base	1618:6:47697:47700	1324869	0	True				
ANR	1324971	Identifier	base		1324869	0					
ANR	1324972	CompoundStatement		12:12:359:359	1324869	1					
ANR	1324973	ExpressionStatement	plt_addr += ( int ) ( size_t ) ( base - buf )	1619:3:47708:47746	1324869	0	True				
ANR	1324974	AssignmentExpression	plt_addr += ( int ) ( size_t ) ( base - buf )		1324869	0		+=			
ANR	1324975	Identifier	plt_addr		1324869	0					
ANR	1324976	CastExpression	( int ) ( size_t ) ( base - buf )		1324869	1					
ANR	1324977	CastTarget	int		1324869	0					
ANR	1324978	CastExpression	( size_t ) ( base - buf )		1324869	1					
ANR	1324979	CastTarget	size_t		1324869	0					
ANR	1324980	AdditiveExpression	base - buf		1324869	1		-			
ANR	1324981	Identifier	base		1324869	0					
ANR	1324982	Identifier	buf		1324869	1					
ANR	1324983	ElseStatement	else		1324869	0					
ANR	1324984	CompoundStatement		14:9:413:413	1324869	0					
ANR	1324985	ExpressionStatement	plt_addr += MIPS_PLT_OFFSET + 8	1621:3:47762:47793	1324869	0	True				
ANR	1324986	AssignmentExpression	plt_addr += MIPS_PLT_OFFSET + 8		1324869	0		+=			
ANR	1324987	Identifier	plt_addr		1324869	0					
ANR	1324988	AdditiveExpression	MIPS_PLT_OFFSET + 8		1324869	1		+			
ANR	1324989	Identifier	MIPS_PLT_OFFSET		1324869	0					
ANR	1324990	PrimaryExpression	8		1324869	1					
ANR	1324991	ExpressionStatement	plt_addr += rel -> k * 16	1623:2:47819:47842	1324869	7	True				
ANR	1324992	AssignmentExpression	plt_addr += rel -> k * 16		1324869	0		+=			
ANR	1324993	Identifier	plt_addr		1324869	0					
ANR	1324994	MultiplicativeExpression	rel -> k * 16		1324869	1		*			
ANR	1324995	PtrMemberAccess	rel -> k		1324869	0					
ANR	1324996	Identifier	rel		1324869	0					
ANR	1324997	Identifier	k		1324869	1					
ANR	1324998	PrimaryExpression	16		1324869	1					
ANR	1324999	ReturnStatement	return plt_addr ;	1624:2:47846:47861	1324869	8	True				
ANR	1325000	Identifier	plt_addr		1324869	0					
ANR	1325001	IfStatement	if ( plt_section )		1324869	2					
ANR	1325002	Condition	plt_section	1626:5:47871:47881	1324869	0	True				
ANR	1325003	Identifier	plt_section		1324869	0					
ANR	1325004	CompoundStatement		22:2:590:619	1324869	1					
ANR	1325005	IdentifierDeclStatement	const int sizeOfProcedureLinkageTable = 32 ;	1627:2:47888:47930	1324869	0	True				
ANR	1325006	IdentifierDecl	sizeOfProcedureLinkageTable = 32		1324869	0					
ANR	1325007	IdentifierDeclType	const int		1324869	0					
ANR	1325008	Identifier	sizeOfProcedureLinkageTable		1324869	1					
ANR	1325009	AssignmentExpression	sizeOfProcedureLinkageTable = 32		1324869	2		=			
ANR	1325010	Identifier	sizeOfProcedureLinkageTable		1324869	0					
ANR	1325011	PrimaryExpression	32		1324869	1					
ANR	1325012	IdentifierDeclStatement	const int sizeOfPltEntry = 16 ;	1628:2:47934:47963	1324869	1	True				
ANR	1325013	IdentifierDecl	sizeOfPltEntry = 16		1324869	0					
ANR	1325014	IdentifierDeclType	const int		1324869	0					
ANR	1325015	Identifier	sizeOfPltEntry		1324869	1					
ANR	1325016	AssignmentExpression	sizeOfPltEntry = 16		1324869	2		=			
ANR	1325017	Identifier	sizeOfPltEntry		1324869	0					
ANR	1325018	PrimaryExpression	16		1324869	1					
ANR	1325019	ReturnStatement	return plt_section -> rva + sizeOfProcedureLinkageTable + ( rel -> k * sizeOfPltEntry ) ;	1629:2:47967:48048	1324869	2	True				
ANR	1325020	AdditiveExpression	plt_section -> rva + sizeOfProcedureLinkageTable + ( rel -> k * sizeOfPltEntry )		1324869	0		+			
ANR	1325021	PtrMemberAccess	plt_section -> rva		1324869	0					
ANR	1325022	Identifier	plt_section		1324869	0					
ANR	1325023	Identifier	rva		1324869	1					
ANR	1325024	AdditiveExpression	sizeOfProcedureLinkageTable + ( rel -> k * sizeOfPltEntry )		1324869	1		+			
ANR	1325025	Identifier	sizeOfProcedureLinkageTable		1324869	0					
ANR	1325026	MultiplicativeExpression	rel -> k * sizeOfPltEntry		1324869	1		*			
ANR	1325027	PtrMemberAccess	rel -> k		1324869	0					
ANR	1325028	Identifier	rel		1324869	0					
ANR	1325029	Identifier	k		1324869	1					
ANR	1325030	Identifier	sizeOfPltEntry		1324869	1					
ANR	1325031	Statement	eprintf	1632:1:48055:48061	1324869	3	True				
ANR	1325032	Statement	(	1632:9:48063:48063	1324869	4	True				
ANR	1325033	Statement	"""Unsupported relocs type %"""	1632:10:48064:48090	1324869	5	True				
ANR	1325034	Statement	PFMT64u	1632:38:48092:48098	1324869	6	True				
ANR	1325035	Statement	""" for arch %d\\n"""	1632:46:48100:48115	1324869	7	True				
ANR	1325036	Statement	","	1632:62:48116:48116	1324869	8	True				
ANR	1325037	Statement	(	1633:2:48120:48120	1324869	9	True				
ANR	1325038	Statement	ut64	1633:3:48121:48124	1324869	10	True				
ANR	1325039	Statement	)	1633:7:48125:48125	1324869	11	True				
ANR	1325040	Statement	REL_TYPE	1633:8:48126:48133	1324869	12	True				
ANR	1325041	Statement	","	1633:16:48134:48134	1324869	13	True				
ANR	1325042	Statement	bin	1633:18:48136:48138	1324869	14	True				
ANR	1325043	Statement	->	1633:21:48139:48140	1324869	15	True				
ANR	1325044	Statement	ehdr	1633:23:48141:48144	1324869	16	True				
ANR	1325045	Statement	.	1633:27:48145:48145	1324869	17	True				
ANR	1325046	Statement	e_machine	1633:28:48146:48154	1324869	18	True				
ANR	1325047	Statement	)	1633:37:48155:48155	1324869	19	True				
ANR	1325048	ExpressionStatement		1633:38:48156:48156	1324869	20	True				
ANR	1325049	ReturnStatement	return UT64_MAX ;	1634:1:48159:48174	1324869	21	True				
ANR	1325050	Identifier	UT64_MAX		1324869	0					
ANR	1325051	ReturnType	static ut64		1324869	1					
ANR	1325052	Identifier	get_import_addr_mips		1324869	2					
ANR	1325053	ParameterList	"ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section"		1324869	3					
ANR	1325054	Parameter	ELFOBJ * bin	1607:33:47279:47289	1324869	0	True				
ANR	1325055	ParameterType	ELFOBJ *		1324869	0					
ANR	1325056	Identifier	bin		1324869	1					
ANR	1325057	Parameter	struct ht_rel_t * rel	1607:46:47292:47311	1324869	1	True				
ANR	1325058	ParameterType	struct ht_rel_t *		1324869	0					
ANR	1325059	Identifier	rel		1324869	1					
ANR	1325060	Parameter	RBinElfSection * plt_section	1607:68:47314:47340	1324869	2	True				
ANR	1325061	ParameterType	RBinElfSection *		1324869	0					
ANR	1325062	Identifier	plt_section		1324869	1					
ANR	1325063	CFGEntryNode	ENTRY		1324869		True				
ANR	1325064	CFGExitNode	EXIT		1324869		True				
ANR	1325065	Symbol	s -> size		1324869						
ANR	1325066	Symbol	bin -> b		1324869						
ANR	1325067	Symbol	* rel		1324869						
ANR	1325068	Symbol	bin		1324869						
ANR	1325069	Symbol	s -> rva		1324869						
ANR	1325070	Symbol	s -> offset		1324869						
ANR	1325071	Symbol	* bin		1324869						
ANR	1325072	Symbol	sizeOfPltEntry		1324869						
ANR	1325073	Symbol	len		1324869						
ANR	1325074	Symbol	plt_section		1324869						
ANR	1325075	Symbol	* plt_section		1324869						
ANR	1325076	Symbol	rel		1324869						
ANR	1325077	Symbol	rel -> k		1324869						
ANR	1325078	Symbol	UT64_MAX		1324869						
ANR	1325079	Symbol	sizeOfProcedureLinkageTable		1324869						
ANR	1325080	Symbol	plt_addr		1324869						
ANR	1325081	Symbol	get_section_by_name		1324869						
ANR	1325082	Symbol	plt_section -> rva		1324869						
ANR	1325083	Symbol	buf		1324869						
ANR	1325084	Symbol	s		1324869						
ANR	1325085	Symbol	r_mem_mem_aligned		1324869						
ANR	1325086	Symbol	r_buf_read_at		1324869						
ANR	1325087	Symbol	* s		1324869						
ANR	1325088	Symbol	MIPS_PLT_OFFSET		1324869						
ANR	1325089	Symbol	base		1324869						
ANR	1325090	Function	get_import_addr	1637:0:48179:49357							
ANR	1325091	FunctionDef	"get_import_addr (ELFOBJ * bin , int sym)"		1325090	0					
ANR	1325092	CompoundStatement		1637:50:48229:49357	1325090	0					
ANR	1325093	IdentifierDeclStatement	int nrel ;	1638:1:48232:48240	1325090	0	True				
ANR	1325094	IdentifierDecl	nrel		1325090	0					
ANR	1325095	IdentifierDeclType	int		1325090	0					
ANR	1325096	Identifier	nrel		1325090	1					
ANR	1325097	IfStatement	if ( ( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr )		1325090	1					
ANR	1325098	Condition	( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr	1640:5:48248:48289	1325090	0	True				
ANR	1325099	AndExpression	( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr		1325090	0		&&			
ANR	1325100	OrExpression	! bin -> shdr || ! bin -> strtab		1325090	0		||			
ANR	1325101	UnaryOperationExpression	! bin -> shdr		1325090	0					
ANR	1325102	UnaryOperator	!		1325090	0					
ANR	1325103	PtrMemberAccess	bin -> shdr		1325090	1					
ANR	1325104	Identifier	bin		1325090	0					
ANR	1325105	Identifier	shdr		1325090	1					
ANR	1325106	UnaryOperationExpression	! bin -> strtab		1325090	1					
ANR	1325107	UnaryOperator	!		1325090	0					
ANR	1325108	PtrMemberAccess	bin -> strtab		1325090	1					
ANR	1325109	Identifier	bin		1325090	0					
ANR	1325110	Identifier	strtab		1325090	1					
ANR	1325111	UnaryOperationExpression	! bin -> phdr		1325090	1					
ANR	1325112	UnaryOperator	!		1325090	0					
ANR	1325113	PtrMemberAccess	bin -> phdr		1325090	1					
ANR	1325114	Identifier	bin		1325090	0					
ANR	1325115	Identifier	phdr		1325090	1					
ANR	1325116	CompoundStatement		4:49:62:62	1325090	1					
ANR	1325117	ReturnStatement	return UT64_MAX ;	1641:2:48296:48311	1325090	0	True				
ANR	1325118	Identifier	UT64_MAX		1325090	0					
ANR	1325119	IfStatement	if ( ! bin -> rel_cache )		1325090	2					
ANR	1325120	Condition	! bin -> rel_cache	1645:5:48369:48383	1325090	0	True				
ANR	1325121	UnaryOperationExpression	! bin -> rel_cache		1325090	0					
ANR	1325122	UnaryOperator	!		1325090	0					
ANR	1325123	PtrMemberAccess	bin -> rel_cache		1325090	1					
ANR	1325124	Identifier	bin		1325090	0					
ANR	1325125	Identifier	rel_cache		1325090	1					
ANR	1325126	CompoundStatement		9:22:156:156	1325090	1					
ANR	1325127	ExpressionStatement	bin -> rel_cache = rel_cache_new ( bin )	1646:2:48390:48426	1325090	0	True				
ANR	1325128	AssignmentExpression	bin -> rel_cache = rel_cache_new ( bin )		1325090	0		=			
ANR	1325129	PtrMemberAccess	bin -> rel_cache		1325090	0					
ANR	1325130	Identifier	bin		1325090	0					
ANR	1325131	Identifier	rel_cache		1325090	1					
ANR	1325132	CallExpression	rel_cache_new ( bin )		1325090	1					
ANR	1325133	Callee	rel_cache_new		1325090	0					
ANR	1325134	Identifier	rel_cache_new		1325090	0					
ANR	1325135	ArgumentList	bin		1325090	1					
ANR	1325136	Argument	bin		1325090	0					
ANR	1325137	Identifier	bin		1325090	0					
ANR	1325138	IfStatement	if ( ! bin -> rel_cache )		1325090	1					
ANR	1325139	Condition	! bin -> rel_cache	1647:6:48434:48448	1325090	0	True				
ANR	1325140	UnaryOperationExpression	! bin -> rel_cache		1325090	0					
ANR	1325141	UnaryOperator	!		1325090	0					
ANR	1325142	PtrMemberAccess	bin -> rel_cache		1325090	1					
ANR	1325143	Identifier	bin		1325090	0					
ANR	1325144	Identifier	rel_cache		1325090	1					
ANR	1325145	CompoundStatement		11:23:221:221	1325090	1					
ANR	1325146	ReturnStatement	return UT64_MAX ;	1648:3:48456:48471	1325090	0	True				
ANR	1325147	Identifier	UT64_MAX		1325090	0					
ANR	1325148	IdentifierDeclStatement	"struct ht_rel_t * rel = ht_up_find ( bin -> rel_cache , sym , NULL ) ;"	1653:1:48518:48579	1325090	3	True				
ANR	1325149	IdentifierDecl	"* rel = ht_up_find ( bin -> rel_cache , sym , NULL )"		1325090	0					
ANR	1325150	IdentifierDeclType	struct ht_rel_t *		1325090	0					
ANR	1325151	Identifier	rel		1325090	1					
ANR	1325152	AssignmentExpression	"* rel = ht_up_find ( bin -> rel_cache , sym , NULL )"		1325090	2		=			
ANR	1325153	Identifier	rel		1325090	0					
ANR	1325154	CallExpression	"ht_up_find ( bin -> rel_cache , sym , NULL )"		1325090	1					
ANR	1325155	Callee	ht_up_find		1325090	0					
ANR	1325156	Identifier	ht_up_find		1325090	0					
ANR	1325157	ArgumentList	bin -> rel_cache		1325090	1					
ANR	1325158	Argument	bin -> rel_cache		1325090	0					
ANR	1325159	PtrMemberAccess	bin -> rel_cache		1325090	0					
ANR	1325160	Identifier	bin		1325090	0					
ANR	1325161	Identifier	rel_cache		1325090	1					
ANR	1325162	Argument	sym		1325090	1					
ANR	1325163	Identifier	sym		1325090	0					
ANR	1325164	Argument	NULL		1325090	2					
ANR	1325165	Identifier	NULL		1325090	0					
ANR	1325166	IfStatement	if ( ! rel )		1325090	4					
ANR	1325167	Condition	! rel	1654:5:48586:48589	1325090	0	True				
ANR	1325168	UnaryOperationExpression	! rel		1325090	0					
ANR	1325169	UnaryOperator	!		1325090	0					
ANR	1325170	Identifier	rel		1325090	1					
ANR	1325171	CompoundStatement		18:11:362:362	1325090	1					
ANR	1325172	ReturnStatement	return UT64_MAX ;	1655:2:48596:48611	1325090	0	True				
ANR	1325173	Identifier	UT64_MAX		1325090	0					
ANR	1325174	IdentifierDeclStatement	"RBinElfSection * plt_section = get_section_by_name ( bin , "".plt"" ) ;"	1658:1:48618:48681	1325090	5	True				
ANR	1325175	IdentifierDecl	"* plt_section = get_section_by_name ( bin , "".plt"" )"		1325090	0					
ANR	1325176	IdentifierDeclType	RBinElfSection *		1325090	0					
ANR	1325177	Identifier	plt_section		1325090	1					
ANR	1325178	AssignmentExpression	"* plt_section = get_section_by_name ( bin , "".plt"" )"		1325090	2		=			
ANR	1325179	Identifier	plt_section		1325090	0					
ANR	1325180	CallExpression	"get_section_by_name ( bin , "".plt"" )"		1325090	1					
ANR	1325181	Callee	get_section_by_name		1325090	0					
ANR	1325182	Identifier	get_section_by_name		1325090	0					
ANR	1325183	ArgumentList	bin		1325090	1					
ANR	1325184	Argument	bin		1325090	0					
ANR	1325185	Identifier	bin		1325090	0					
ANR	1325186	Argument	""".plt"""		1325090	1					
ANR	1325187	PrimaryExpression	""".plt"""		1325090	0					
ANR	1325188	ExpressionStatement	nrel = bin -> rel_cache -> count	1659:1:48684:48712	1325090	6	True				
ANR	1325189	AssignmentExpression	nrel = bin -> rel_cache -> count		1325090	0		=			
ANR	1325190	Identifier	nrel		1325090	0					
ANR	1325191	PtrMemberAccess	bin -> rel_cache -> count		1325090	1					
ANR	1325192	PtrMemberAccess	bin -> rel_cache		1325090	0					
ANR	1325193	Identifier	bin		1325090	0					
ANR	1325194	Identifier	rel_cache		1325090	1					
ANR	1325195	Identifier	count		1325090	1					
ANR	1325196	SwitchStatement	switch ( bin -> ehdr . e_machine )		1325090	7					
ANR	1325197	Condition	bin -> ehdr . e_machine	1661:9:48724:48742	1325090	0	True				
ANR	1325198	MemberAccess	bin -> ehdr . e_machine		1325090	0					
ANR	1325199	PtrMemberAccess	bin -> ehdr		1325090	0					
ANR	1325200	Identifier	bin		1325090	0					
ANR	1325201	Identifier	ehdr		1325090	1					
ANR	1325202	Identifier	e_machine		1325090	1					
ANR	1325203	CompoundStatement		25:30:515:515	1325090	1					
ANR	1325204	Label	case EM_PPC :	1662:1:48748:48759	1325090	0	True				
ANR	1325205	Identifier	EM_PPC		1325090	0					
ANR	1325206	Label	case EM_PPC64 :	1663:1:48762:48775	1325090	1	True				
ANR	1325207	Identifier	EM_PPC64		1325090	0					
ANR	1325208	ReturnStatement	"return get_import_addr_ppc ( bin , rel , plt_section , nrel ) ;"	1664:2:48779:48835	1325090	2	True				
ANR	1325209	CallExpression	"get_import_addr_ppc ( bin , rel , plt_section , nrel )"		1325090	0					
ANR	1325210	Callee	get_import_addr_ppc		1325090	0					
ANR	1325211	Identifier	get_import_addr_ppc		1325090	0					
ANR	1325212	ArgumentList	bin		1325090	1					
ANR	1325213	Argument	bin		1325090	0					
ANR	1325214	Identifier	bin		1325090	0					
ANR	1325215	Argument	rel		1325090	1					
ANR	1325216	Identifier	rel		1325090	0					
ANR	1325217	Argument	plt_section		1325090	2					
ANR	1325218	Identifier	plt_section		1325090	0					
ANR	1325219	Argument	nrel		1325090	3					
ANR	1325220	Identifier	nrel		1325090	0					
ANR	1325221	Label	case EM_SPARC :	1665:1:48838:48851	1325090	3	True				
ANR	1325222	Identifier	EM_SPARC		1325090	0					
ANR	1325223	Label	case EM_SPARCV9 :	1666:1:48854:48869	1325090	4	True				
ANR	1325224	Identifier	EM_SPARCV9		1325090	0					
ANR	1325225	Label	case EM_SPARC32PLUS :	1667:1:48872:48891	1325090	5	True				
ANR	1325226	Identifier	EM_SPARC32PLUS		1325090	0					
ANR	1325227	ReturnStatement	"return get_import_addr_sparc ( bin , rel , plt_section ) ;"	1668:2:48895:48947	1325090	6	True				
ANR	1325228	CallExpression	"get_import_addr_sparc ( bin , rel , plt_section )"		1325090	0					
ANR	1325229	Callee	get_import_addr_sparc		1325090	0					
ANR	1325230	Identifier	get_import_addr_sparc		1325090	0					
ANR	1325231	ArgumentList	bin		1325090	1					
ANR	1325232	Argument	bin		1325090	0					
ANR	1325233	Identifier	bin		1325090	0					
ANR	1325234	Argument	rel		1325090	1					
ANR	1325235	Identifier	rel		1325090	0					
ANR	1325236	Argument	plt_section		1325090	2					
ANR	1325237	Identifier	plt_section		1325090	0					
ANR	1325238	Label	case EM_ARM :	1669:1:48950:48961	1325090	7	True				
ANR	1325239	Identifier	EM_ARM		1325090	0					
ANR	1325240	Label	case EM_AARCH64 :	1670:1:48964:48979	1325090	8	True				
ANR	1325241	Identifier	EM_AARCH64		1325090	0					
ANR	1325242	ReturnStatement	"return get_import_addr_arm ( bin , rel , plt_section ) ;"	1671:2:48983:49033	1325090	9	True				
ANR	1325243	CallExpression	"get_import_addr_arm ( bin , rel , plt_section )"		1325090	0					
ANR	1325244	Callee	get_import_addr_arm		1325090	0					
ANR	1325245	Identifier	get_import_addr_arm		1325090	0					
ANR	1325246	ArgumentList	bin		1325090	1					
ANR	1325247	Argument	bin		1325090	0					
ANR	1325248	Identifier	bin		1325090	0					
ANR	1325249	Argument	rel		1325090	1					
ANR	1325250	Identifier	rel		1325090	0					
ANR	1325251	Argument	plt_section		1325090	2					
ANR	1325252	Identifier	plt_section		1325090	0					
ANR	1325253	Label	case EM_386 :	1672:1:49036:49047	1325090	10	True				
ANR	1325254	Identifier	EM_386		1325090	0					
ANR	1325255	Label	case EM_X86_64 :	1673:1:49050:49064	1325090	11	True				
ANR	1325256	Identifier	EM_X86_64		1325090	0					
ANR	1325257	ReturnStatement	"return get_import_addr_x86 ( bin , rel , plt_section ) ;"	1674:2:49068:49118	1325090	12	True				
ANR	1325258	CallExpression	"get_import_addr_x86 ( bin , rel , plt_section )"		1325090	0					
ANR	1325259	Callee	get_import_addr_x86		1325090	0					
ANR	1325260	Identifier	get_import_addr_x86		1325090	0					
ANR	1325261	ArgumentList	bin		1325090	1					
ANR	1325262	Argument	bin		1325090	0					
ANR	1325263	Identifier	bin		1325090	0					
ANR	1325264	Argument	rel		1325090	1					
ANR	1325265	Identifier	rel		1325090	0					
ANR	1325266	Argument	plt_section		1325090	2					
ANR	1325267	Identifier	plt_section		1325090	0					
ANR	1325268	Label	case EM_MIPS :	1675:1:49121:49133	1325090	13	True				
ANR	1325269	Identifier	EM_MIPS		1325090	0					
ANR	1325270	ReturnStatement	"return get_import_addr_mips ( bin , rel , plt_section ) ;"	1676:2:49165:49216	1325090	14	True				
ANR	1325271	CallExpression	"get_import_addr_mips ( bin , rel , plt_section )"		1325090	0					
ANR	1325272	Callee	get_import_addr_mips		1325090	0					
ANR	1325273	Identifier	get_import_addr_mips		1325090	0					
ANR	1325274	ArgumentList	bin		1325090	1					
ANR	1325275	Argument	bin		1325090	0					
ANR	1325276	Identifier	bin		1325090	0					
ANR	1325277	Argument	rel		1325090	1					
ANR	1325278	Identifier	rel		1325090	0					
ANR	1325279	Argument	plt_section		1325090	2					
ANR	1325280	Identifier	plt_section		1325090	0					
ANR	1325281	Label	default :	1677:1:49219:49226	1325090	15	True				
ANR	1325282	Identifier	default		1325090	0					
ANR	1325283	Statement	eprintf	1678:2:49230:49236	1325090	16	True				
ANR	1325284	Statement	(	1678:10:49238:49238	1325090	17	True				
ANR	1325285	Statement	"""Unsupported relocs type %"""	1678:11:49239:49265	1325090	18	True				
ANR	1325286	Statement	PFMT64u	1678:39:49267:49273	1325090	19	True				
ANR	1325287	Statement	""" for arch %d\\n"""	1678:47:49275:49290	1325090	20	True				
ANR	1325288	Statement	","	1678:63:49291:49291	1325090	21	True				
ANR	1325289	Statement	(	1679:3:49296:49296	1325090	22	True				
ANR	1325290	Statement	ut64	1679:4:49297:49300	1325090	23	True				
ANR	1325291	Statement	)	1679:8:49301:49301	1325090	24	True				
ANR	1325292	Statement	REL_TYPE	1679:10:49303:49310	1325090	25	True				
ANR	1325293	Statement	","	1679:18:49311:49311	1325090	26	True				
ANR	1325294	Statement	bin	1679:20:49313:49315	1325090	27	True				
ANR	1325295	Statement	->	1679:23:49316:49317	1325090	28	True				
ANR	1325296	Statement	ehdr	1679:25:49318:49321	1325090	29	True				
ANR	1325297	Statement	.	1679:29:49322:49322	1325090	30	True				
ANR	1325298	Statement	e_machine	1679:30:49323:49331	1325090	31	True				
ANR	1325299	Statement	)	1679:39:49332:49332	1325090	32	True				
ANR	1325300	ExpressionStatement		1679:40:49333:49333	1325090	33	True				
ANR	1325301	ReturnStatement	return UT64_MAX ;	1680:2:49337:49352	1325090	34	True				
ANR	1325302	Identifier	UT64_MAX		1325090	0					
ANR	1325303	ReturnType	static ut64		1325090	1					
ANR	1325304	Identifier	get_import_addr		1325090	2					
ANR	1325305	ParameterList	"ELFOBJ * bin , int sym"		1325090	3					
ANR	1325306	Parameter	ELFOBJ * bin	1637:28:48207:48217	1325090	0	True				
ANR	1325307	ParameterType	ELFOBJ *		1325090	0					
ANR	1325308	Identifier	bin		1325090	1					
ANR	1325309	Parameter	int sym	1637:41:48220:48226	1325090	1	True				
ANR	1325310	ParameterType	int		1325090	0					
ANR	1325311	Identifier	sym		1325090	1					
ANR	1325312	CFGEntryNode	ENTRY		1325090		True				
ANR	1325313	CFGExitNode	EXIT		1325090		True				
ANR	1325314	Symbol	ht_up_find		1325090						
ANR	1325315	Symbol	get_import_addr_x86		1325090						
ANR	1325316	Symbol	get_import_addr_mips		1325090						
ANR	1325317	Symbol	bin		1325090						
ANR	1325318	Symbol	sym		1325090						
ANR	1325319	Symbol	bin -> phdr		1325090						
ANR	1325320	Symbol	rel_cache_new		1325090						
ANR	1325321	Symbol	* bin		1325090						
ANR	1325322	Symbol	plt_section		1325090						
ANR	1325323	Symbol	bin -> ehdr		1325090						
ANR	1325324	Symbol	nrel		1325090						
ANR	1325325	Symbol	rel		1325090						
ANR	1325326	Symbol	bin -> rel_cache		1325090						
ANR	1325327	Symbol	* * bin		1325090						
ANR	1325328	Symbol	UT64_MAX		1325090						
ANR	1325329	Symbol	bin -> strtab		1325090						
ANR	1325330	Symbol	get_import_addr_ppc		1325090						
ANR	1325331	Symbol	NULL		1325090						
ANR	1325332	Symbol	get_import_addr_arm		1325090						
ANR	1325333	Symbol	get_section_by_name		1325090						
ANR	1325334	Symbol	get_import_addr_sparc		1325090						
ANR	1325335	Symbol	bin -> shdr		1325090						
ANR	1325336	Symbol	bin -> ehdr . e_machine		1325090						
ANR	1325337	Symbol	bin -> rel_cache -> count		1325090						
ANR	1325338	Symbol	* bin -> rel_cache		1325090						
ANR	1325339	Function	r_bin_elf_has_nx	1684:0:49360:49596							
ANR	1325340	FunctionDef	r_bin_elf_has_nx (ELFOBJ * bin)		1325339	0					
ANR	1325341	CompoundStatement		1684:40:49400:49596	1325339	0					
ANR	1325342	IdentifierDeclStatement	int i ;	1685:1:49403:49408	1325339	0	True				
ANR	1325343	IdentifierDecl	i		1325339	0					
ANR	1325344	IdentifierDeclType	int		1325339	0					
ANR	1325345	Identifier	i		1325339	1					
ANR	1325346	IfStatement	if ( bin && bin -> phdr )		1325339	1					
ANR	1325347	Condition	bin && bin -> phdr	1686:5:49415:49430	1325339	0	True				
ANR	1325348	AndExpression	bin && bin -> phdr		1325339	0		&&			
ANR	1325349	Identifier	bin		1325339	0					
ANR	1325350	PtrMemberAccess	bin -> phdr		1325339	1					
ANR	1325351	Identifier	bin		1325339	0					
ANR	1325352	Identifier	phdr		1325339	1					
ANR	1325353	CompoundStatement		3:23:32:32	1325339	1					
ANR	1325354	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		1325339	0					
ANR	1325355	ForInit	i = 0 ;	1687:7:49442:49447	1325339	0	True				
ANR	1325356	AssignmentExpression	i = 0		1325339	0		=			
ANR	1325357	Identifier	i		1325339	0					
ANR	1325358	PrimaryExpression	0		1325339	1					
ANR	1325359	Condition	i < bin -> ehdr . e_phnum	1687:14:49449:49469	1325339	1	True				
ANR	1325360	RelationalExpression	i < bin -> ehdr . e_phnum		1325339	0		<			
ANR	1325361	Identifier	i		1325339	0					
ANR	1325362	MemberAccess	bin -> ehdr . e_phnum		1325339	1					
ANR	1325363	PtrMemberAccess	bin -> ehdr		1325339	0					
ANR	1325364	Identifier	bin		1325339	0					
ANR	1325365	Identifier	ehdr		1325339	1					
ANR	1325366	Identifier	e_phnum		1325339	1					
ANR	1325367	PostIncDecOperationExpression	i ++	1687:37:49472:49474	1325339	2	True				
ANR	1325368	Identifier	i		1325339	0					
ANR	1325369	IncDec	++		1325339	1					
ANR	1325370	CompoundStatement		4:42:76:76	1325339	3					
ANR	1325371	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_GNU_STACK )		1325339	0					
ANR	1325372	Condition	bin -> phdr [ i ] . p_type == PT_GNU_STACK	1688:7:49486:49520	1325339	0	True				
ANR	1325373	EqualityExpression	bin -> phdr [ i ] . p_type == PT_GNU_STACK		1325339	0		==			
ANR	1325374	MemberAccess	bin -> phdr [ i ] . p_type		1325339	0					
ANR	1325375	ArrayIndexing	bin -> phdr [ i ]		1325339	0					
ANR	1325376	PtrMemberAccess	bin -> phdr		1325339	0					
ANR	1325377	Identifier	bin		1325339	0					
ANR	1325378	Identifier	phdr		1325339	1					
ANR	1325379	Identifier	i		1325339	1					
ANR	1325380	Identifier	p_type		1325339	1					
ANR	1325381	Identifier	PT_GNU_STACK		1325339	1					
ANR	1325382	CompoundStatement		5:44:122:122	1325339	1					
ANR	1325383	ReturnStatement	return ( ! ( bin -> phdr [ i ] . p_flags & 1 ) ) ? 1 : 0 ;	1689:4:49529:49571	1325339	0	True				
ANR	1325384	ConditionalExpression	( ! ( bin -> phdr [ i ] . p_flags & 1 ) ) ? 1 : 0		1325339	0					
ANR	1325385	Condition	! ( bin -> phdr [ i ] . p_flags & 1 )		1325339	0					
ANR	1325386	UnaryOperationExpression	! ( bin -> phdr [ i ] . p_flags & 1 )		1325339	0					
ANR	1325387	UnaryOperator	!		1325339	0					
ANR	1325388	BitAndExpression	bin -> phdr [ i ] . p_flags & 1		1325339	1		&			
ANR	1325389	MemberAccess	bin -> phdr [ i ] . p_flags		1325339	0					
ANR	1325390	ArrayIndexing	bin -> phdr [ i ]		1325339	0					
ANR	1325391	PtrMemberAccess	bin -> phdr		1325339	0					
ANR	1325392	Identifier	bin		1325339	0					
ANR	1325393	Identifier	phdr		1325339	1					
ANR	1325394	Identifier	i		1325339	1					
ANR	1325395	Identifier	p_flags		1325339	1					
ANR	1325396	PrimaryExpression	1		1325339	1					
ANR	1325397	PrimaryExpression	1		1325339	1					
ANR	1325398	PrimaryExpression	0		1325339	2					
ANR	1325399	ReturnStatement	return 0 ;	1693:1:49586:49594	1325339	2	True				
ANR	1325400	PrimaryExpression	0		1325339	0					
ANR	1325401	ReturnType	int Elf_		1325339	1					
ANR	1325402	Identifier	( r_bin_elf_has_nx )		1325339	2					
ANR	1325403	Identifier	r_bin_elf_has_nx		1325339	3					
ANR	1325404	ParameterList	ELFOBJ * bin		1325339	4					
ANR	1325405	Parameter	ELFOBJ * bin	1684:27:49387:49397	1325339	0	True				
ANR	1325406	ParameterType	ELFOBJ *		1325339	0					
ANR	1325407	Identifier	bin		1325339	1					
ANR	1325408	CFGEntryNode	ENTRY		1325339		True				
ANR	1325409	CFGExitNode	EXIT		1325339		True				
ANR	1325410	Symbol	PT_GNU_STACK		1325339						
ANR	1325411	Symbol	* i		1325339						
ANR	1325412	Symbol	bin		1325339						
ANR	1325413	Symbol	bin -> ehdr		1325339						
ANR	1325414	Symbol	i		1325339						
ANR	1325415	Symbol	bin -> phdr		1325339						
ANR	1325416	Symbol	bin -> phdr [ i ] . p_type		1325339						
ANR	1325417	Symbol	bin -> ehdr . e_phnum		1325339						
ANR	1325418	Symbol	* * bin		1325339						
ANR	1325419	Symbol	bin -> phdr [ i ] . p_flags		1325339						
ANR	1325420	Symbol	* bin		1325339						
ANR	1325421	Symbol	* bin -> phdr		1325339						
ANR	1325422	Function	r_bin_elf_has_relro	1696:0:49599:50480							
ANR	1325423	FunctionDef	r_bin_elf_has_relro (ELFOBJ * bin)		1325422	0					
ANR	1325424	CompoundStatement		1696:43:49642:50480	1325422	0					
ANR	1325425	IdentifierDeclStatement	int i ;	1697:1:49645:49650	1325422	0	True				
ANR	1325426	IdentifierDecl	i		1325422	0					
ANR	1325427	IdentifierDeclType	int		1325422	0					
ANR	1325428	Identifier	i		1325422	1					
ANR	1325429	IdentifierDeclStatement	bool haveBindNow = false ;	1698:1:49653:49677	1325422	1	True				
ANR	1325430	IdentifierDecl	haveBindNow = false		1325422	0					
ANR	1325431	IdentifierDeclType	bool		1325422	0					
ANR	1325432	Identifier	haveBindNow		1325422	1					
ANR	1325433	AssignmentExpression	haveBindNow = false		1325422	2		=			
ANR	1325434	Identifier	false		1325422	0					
ANR	1325435	Identifier	false		1325422	1					
ANR	1325436	IdentifierDeclStatement	bool haveGnuRelro = false ;	1699:1:49680:49705	1325422	2	True				
ANR	1325437	IdentifierDecl	haveGnuRelro = false		1325422	0					
ANR	1325438	IdentifierDeclType	bool		1325422	0					
ANR	1325439	Identifier	haveGnuRelro		1325422	1					
ANR	1325440	AssignmentExpression	haveGnuRelro = false		1325422	2		=			
ANR	1325441	Identifier	false		1325422	0					
ANR	1325442	Identifier	false		1325422	1					
ANR	1325443	IfStatement	if ( bin && bin -> dyn_buf )		1325422	3					
ANR	1325444	Condition	bin && bin -> dyn_buf	1700:5:49712:49730	1325422	0	True				
ANR	1325445	AndExpression	bin && bin -> dyn_buf		1325422	0		&&			
ANR	1325446	Identifier	bin		1325422	0					
ANR	1325447	PtrMemberAccess	bin -> dyn_buf		1325422	1					
ANR	1325448	Identifier	bin		1325422	0					
ANR	1325449	Identifier	dyn_buf		1325422	1					
ANR	1325450	CompoundStatement		5:26:90:90	1325422	1					
ANR	1325451	ForStatement	for ( i = 0 ; i < bin -> dyn_entries ; i ++ )		1325422	0					
ANR	1325452	ForInit	i = 0 ;	1701:7:49742:49747	1325422	0	True				
ANR	1325453	AssignmentExpression	i = 0		1325422	0		=			
ANR	1325454	Identifier	i		1325422	0					
ANR	1325455	PrimaryExpression	0		1325422	1					
ANR	1325456	Condition	i < bin -> dyn_entries	1701:14:49749:49768	1325422	1	True				
ANR	1325457	RelationalExpression	i < bin -> dyn_entries		1325422	0		<			
ANR	1325458	Identifier	i		1325422	0					
ANR	1325459	PtrMemberAccess	bin -> dyn_entries		1325422	1					
ANR	1325460	Identifier	bin		1325422	0					
ANR	1325461	Identifier	dyn_entries		1325422	1					
ANR	1325462	PostIncDecOperationExpression	i ++	1701:36:49771:49773	1325422	2	True				
ANR	1325463	Identifier	i		1325422	0					
ANR	1325464	IncDec	++		1325422	1					
ANR	1325465	CompoundStatement		6:41:133:133	1325422	3					
ANR	1325466	SwitchStatement	switch ( bin -> dyn_buf [ i ] . d_tag )		1325422	0					
ANR	1325467	Condition	bin -> dyn_buf [ i ] . d_tag	1702:11:49789:49809	1325422	0	True				
ANR	1325468	MemberAccess	bin -> dyn_buf [ i ] . d_tag		1325422	0					
ANR	1325469	ArrayIndexing	bin -> dyn_buf [ i ]		1325422	0					
ANR	1325470	PtrMemberAccess	bin -> dyn_buf		1325422	0					
ANR	1325471	Identifier	bin		1325422	0					
ANR	1325472	Identifier	dyn_buf		1325422	1					
ANR	1325473	Identifier	i		1325422	1					
ANR	1325474	Identifier	d_tag		1325422	1					
ANR	1325475	CompoundStatement		7:34:169:169	1325422	1					
ANR	1325476	Label	case DT_BIND_NOW :	1703:3:49817:49833	1325422	0	True				
ANR	1325477	Identifier	DT_BIND_NOW		1325422	0					
ANR	1325478	ExpressionStatement	haveBindNow = true	1704:4:49839:49857	1325422	1	True				
ANR	1325479	AssignmentExpression	haveBindNow = true		1325422	0		=			
ANR	1325480	Identifier	haveBindNow		1325422	0					
ANR	1325481	Identifier	true		1325422	1					
ANR	1325482	BreakStatement	break ;	1705:4:49863:49868	1325422	2	True				
ANR	1325483	Label	case DT_FLAGS :	1706:3:49873:49886	1325422	3	True				
ANR	1325484	Identifier	DT_FLAGS		1325422	0					
ANR	1325485	ForStatement	for ( i ++ ; i < bin -> dyn_entries ; i ++ )		1325422	4					
ANR	1325486	ForInit	i ++ ;	1707:9:49897:49900	1325422	0	True				
ANR	1325487	PostIncDecOperationExpression	i ++		1325422	0					
ANR	1325488	Identifier	i		1325422	0					
ANR	1325489	IncDec	++		1325422	1					
ANR	1325490	Condition	i < bin -> dyn_entries	1707:14:49902:49921	1325422	1	True				
ANR	1325491	RelationalExpression	i < bin -> dyn_entries		1325422	0		<			
ANR	1325492	Identifier	i		1325422	0					
ANR	1325493	PtrMemberAccess	bin -> dyn_entries		1325422	1					
ANR	1325494	Identifier	bin		1325422	0					
ANR	1325495	Identifier	dyn_entries		1325422	1					
ANR	1325496	PostIncDecOperationExpression	i ++	1707:37:49925:49927	1325422	2	True				
ANR	1325497	Identifier	i		1325422	0					
ANR	1325498	IncDec	++		1325422	1					
ANR	1325499	CompoundStatement		13:5:294:327	1325422	3					
ANR	1325500	IdentifierDeclStatement	ut32 dTag = bin -> dyn_buf [ i ] . d_tag ;	1708:5:49937:49970	1325422	0	True				
ANR	1325501	IdentifierDecl	dTag = bin -> dyn_buf [ i ] . d_tag		1325422	0					
ANR	1325502	IdentifierDeclType	ut32		1325422	0					
ANR	1325503	Identifier	dTag		1325422	1					
ANR	1325504	AssignmentExpression	dTag = bin -> dyn_buf [ i ] . d_tag		1325422	2		=			
ANR	1325505	Identifier	dTag		1325422	0					
ANR	1325506	MemberAccess	bin -> dyn_buf [ i ] . d_tag		1325422	1					
ANR	1325507	ArrayIndexing	bin -> dyn_buf [ i ]		1325422	0					
ANR	1325508	PtrMemberAccess	bin -> dyn_buf		1325422	0					
ANR	1325509	Identifier	bin		1325422	0					
ANR	1325510	Identifier	dyn_buf		1325422	1					
ANR	1325511	Identifier	i		1325422	1					
ANR	1325512	Identifier	d_tag		1325422	1					
ANR	1325513	IfStatement	if ( ! dTag )		1325422	1					
ANR	1325514	Condition	! dTag	1709:9:49981:49985	1325422	0	True				
ANR	1325515	UnaryOperationExpression	! dTag		1325422	0					
ANR	1325516	UnaryOperator	!		1325422	0					
ANR	1325517	Identifier	dTag		1325422	1					
ANR	1325518	CompoundStatement		14:16:345:345	1325422	1					
ANR	1325519	BreakStatement	break ;	1710:6:49996:50001	1325422	0	True				
ANR	1325520	SwitchStatement	switch ( dTag )		1325422	2					
ANR	1325521	Condition	dTag	1712:13:50023:50026	1325422	0	True				
ANR	1325522	Identifier	dTag		1325422	0					
ANR	1325523	CompoundStatement		17:19:386:386	1325422	1					
ANR	1325524	Label	case DT_FLAGS_1 :	1713:5:50036:50051	1325422	0	True				
ANR	1325525	Identifier	DT_FLAGS_1		1325422	0					
ANR	1325526	IfStatement	if ( bin -> dyn_buf [ i ] . d_un . d_val & DF_1_NOW )		1325422	1					
ANR	1325527	Condition	bin -> dyn_buf [ i ] . d_un . d_val & DF_1_NOW	1714:10:50063:50099	1325422	0	True				
ANR	1325528	BitAndExpression	bin -> dyn_buf [ i ] . d_un . d_val & DF_1_NOW		1325422	0		&			
ANR	1325529	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_val		1325422	0					
ANR	1325530	MemberAccess	bin -> dyn_buf [ i ] . d_un		1325422	0					
ANR	1325531	ArrayIndexing	bin -> dyn_buf [ i ]		1325422	0					
ANR	1325532	PtrMemberAccess	bin -> dyn_buf		1325422	0					
ANR	1325533	Identifier	bin		1325422	0					
ANR	1325534	Identifier	dyn_buf		1325422	1					
ANR	1325535	Identifier	i		1325422	1					
ANR	1325536	Identifier	d_un		1325422	1					
ANR	1325537	Identifier	d_val		1325422	1					
ANR	1325538	Identifier	DF_1_NOW		1325422	1					
ANR	1325539	CompoundStatement		19:49:459:459	1325422	1					
ANR	1325540	ExpressionStatement	haveBindNow = true	1715:7:50111:50129	1325422	0	True				
ANR	1325541	AssignmentExpression	haveBindNow = true		1325422	0		=			
ANR	1325542	Identifier	haveBindNow		1325422	0					
ANR	1325543	Identifier	true		1325422	1					
ANR	1325544	BreakStatement	break ;	1716:7:50138:50143	1325422	1	True				
ANR	1325545	BreakStatement	break ;	1720:4:50170:50175	1325422	5	True				
ANR	1325546	IfStatement	if ( bin && bin -> phdr )		1325422	4					
ANR	1325547	Condition	bin && bin -> phdr	1724:5:50194:50209	1325422	0	True				
ANR	1325548	AndExpression	bin && bin -> phdr		1325422	0		&&			
ANR	1325549	Identifier	bin		1325422	0					
ANR	1325550	PtrMemberAccess	bin -> phdr		1325422	1					
ANR	1325551	Identifier	bin		1325422	0					
ANR	1325552	Identifier	phdr		1325422	1					
ANR	1325553	CompoundStatement		29:23:569:569	1325422	1					
ANR	1325554	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		1325422	0					
ANR	1325555	ForInit	i = 0 ;	1725:7:50221:50226	1325422	0	True				
ANR	1325556	AssignmentExpression	i = 0		1325422	0		=			
ANR	1325557	Identifier	i		1325422	0					
ANR	1325558	PrimaryExpression	0		1325422	1					
ANR	1325559	Condition	i < bin -> ehdr . e_phnum	1725:14:50228:50248	1325422	1	True				
ANR	1325560	RelationalExpression	i < bin -> ehdr . e_phnum		1325422	0		<			
ANR	1325561	Identifier	i		1325422	0					
ANR	1325562	MemberAccess	bin -> ehdr . e_phnum		1325422	1					
ANR	1325563	PtrMemberAccess	bin -> ehdr		1325422	0					
ANR	1325564	Identifier	bin		1325422	0					
ANR	1325565	Identifier	ehdr		1325422	1					
ANR	1325566	Identifier	e_phnum		1325422	1					
ANR	1325567	PostIncDecOperationExpression	i ++	1725:37:50251:50253	1325422	2	True				
ANR	1325568	Identifier	i		1325422	0					
ANR	1325569	IncDec	++		1325422	1					
ANR	1325570	CompoundStatement		30:42:613:613	1325422	3					
ANR	1325571	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_GNU_RELRO )		1325422	0					
ANR	1325572	Condition	bin -> phdr [ i ] . p_type == PT_GNU_RELRO	1726:7:50265:50299	1325422	0	True				
ANR	1325573	EqualityExpression	bin -> phdr [ i ] . p_type == PT_GNU_RELRO		1325422	0		==			
ANR	1325574	MemberAccess	bin -> phdr [ i ] . p_type		1325422	0					
ANR	1325575	ArrayIndexing	bin -> phdr [ i ]		1325422	0					
ANR	1325576	PtrMemberAccess	bin -> phdr		1325422	0					
ANR	1325577	Identifier	bin		1325422	0					
ANR	1325578	Identifier	phdr		1325422	1					
ANR	1325579	Identifier	i		1325422	1					
ANR	1325580	Identifier	p_type		1325422	1					
ANR	1325581	Identifier	PT_GNU_RELRO		1325422	1					
ANR	1325582	CompoundStatement		31:44:659:659	1325422	1					
ANR	1325583	ExpressionStatement	haveGnuRelro = true	1727:4:50308:50327	1325422	0	True				
ANR	1325584	AssignmentExpression	haveGnuRelro = true		1325422	0		=			
ANR	1325585	Identifier	haveGnuRelro		1325422	0					
ANR	1325586	Identifier	true		1325422	1					
ANR	1325587	BreakStatement	break ;	1728:4:50333:50338	1325422	1	True				
ANR	1325588	IfStatement	if ( haveGnuRelro )		1325422	5					
ANR	1325589	Condition	haveGnuRelro	1732:5:50357:50368	1325422	0	True				
ANR	1325590	Identifier	haveGnuRelro		1325422	0					
ANR	1325591	CompoundStatement		37:19:728:728	1325422	1					
ANR	1325592	IfStatement	if ( haveBindNow )		1325422	0					
ANR	1325593	Condition	haveBindNow	1733:6:50379:50389	1325422	0	True				
ANR	1325594	Identifier	haveBindNow		1325422	0					
ANR	1325595	CompoundStatement		38:19:749:749	1325422	1					
ANR	1325596	ReturnStatement	return R_ELF_FULL_RELRO ;	1734:3:50397:50420	1325422	0	True				
ANR	1325597	Identifier	R_ELF_FULL_RELRO		1325422	0					
ANR	1325598	ReturnStatement	return R_ELF_PART_RELRO ;	1736:2:50428:50451	1325422	1	True				
ANR	1325599	Identifier	R_ELF_PART_RELRO		1325422	0					
ANR	1325600	ReturnStatement	return R_ELF_NO_RELRO ;	1738:1:50457:50478	1325422	6	True				
ANR	1325601	Identifier	R_ELF_NO_RELRO		1325422	0					
ANR	1325602	ReturnType	int Elf_		1325422	1					
ANR	1325603	Identifier	( r_bin_elf_has_relro )		1325422	2					
ANR	1325604	Identifier	r_bin_elf_has_relro		1325422	3					
ANR	1325605	ParameterList	ELFOBJ * bin		1325422	4					
ANR	1325606	Parameter	ELFOBJ * bin	1696:30:49629:49639	1325422	0	True				
ANR	1325607	ParameterType	ELFOBJ *		1325422	0					
ANR	1325608	Identifier	bin		1325422	1					
ANR	1325609	CFGEntryNode	ENTRY		1325422		True				
ANR	1325610	CFGExitNode	EXIT		1325422		True				
ANR	1325611	Symbol	bin		1325422						
ANR	1325612	Symbol	bin -> phdr		1325422						
ANR	1325613	Symbol	* bin		1325422						
ANR	1325614	Symbol	DF_1_NOW		1325422						
ANR	1325615	Symbol	R_ELF_FULL_RELRO		1325422						
ANR	1325616	Symbol	R_ELF_NO_RELRO		1325422						
ANR	1325617	Symbol	bin -> ehdr		1325422						
ANR	1325618	Symbol	* * bin		1325422						
ANR	1325619	Symbol	bin -> dyn_buf [ i ] . d_un . d_val		1325422						
ANR	1325620	Symbol	* bin -> dyn_buf		1325422						
ANR	1325621	Symbol	PT_GNU_RELRO		1325422						
ANR	1325622	Symbol	bin -> dyn_buf		1325422						
ANR	1325623	Symbol	bin -> dyn_entries		1325422						
ANR	1325624	Symbol	false		1325422						
ANR	1325625	Symbol	i		1325422						
ANR	1325626	Symbol	bin -> ehdr . e_phnum		1325422						
ANR	1325627	Symbol	bin -> dyn_buf [ i ] . d_tag		1325422						
ANR	1325628	Symbol	* bin -> phdr		1325422						
ANR	1325629	Symbol	haveBindNow		1325422						
ANR	1325630	Symbol	* i		1325422						
ANR	1325631	Symbol	bin -> dyn_buf [ i ] . d_un		1325422						
ANR	1325632	Symbol	R_ELF_PART_RELRO		1325422						
ANR	1325633	Symbol	haveGnuRelro		1325422						
ANR	1325634	Symbol	true		1325422						
ANR	1325635	Symbol	dTag		1325422						
ANR	1325636	Symbol	bin -> phdr [ i ] . p_type		1325422						
ANR	1325637	Function	r_bin_elf_get_baddr	1749:0:50733:51291							
ANR	1325638	FunctionDef	r_bin_elf_get_baddr (ELFOBJ * bin)		1325637	0					
ANR	1325639	CompoundStatement		1749:44:50777:51291	1325637	0					
ANR	1325640	IdentifierDeclStatement	int i ;	1750:1:50780:50785	1325637	0	True				
ANR	1325641	IdentifierDecl	i		1325637	0					
ANR	1325642	IdentifierDeclType	int		1325637	0					
ANR	1325643	Identifier	i		1325637	1					
ANR	1325644	IdentifierDeclStatement	"ut64 tmp , base = UT64_MAX ;"	1751:1:50788:50813	1325637	1	True				
ANR	1325645	IdentifierDecl	tmp		1325637	0					
ANR	1325646	IdentifierDeclType	ut64		1325637	0					
ANR	1325647	Identifier	tmp		1325637	1					
ANR	1325648	IdentifierDecl	base = UT64_MAX		1325637	1					
ANR	1325649	IdentifierDeclType	ut64		1325637	0					
ANR	1325650	Identifier	base		1325637	1					
ANR	1325651	AssignmentExpression	base = UT64_MAX		1325637	2		=			
ANR	1325652	Identifier	UT64_MAX		1325637	0					
ANR	1325653	Identifier	UT64_MAX		1325637	1					
ANR	1325654	IfStatement	if ( ! bin )		1325637	2					
ANR	1325655	Condition	! bin	1752:5:50820:50823	1325637	0	True				
ANR	1325656	UnaryOperationExpression	! bin		1325637	0					
ANR	1325657	UnaryOperator	!		1325637	0					
ANR	1325658	Identifier	bin		1325637	1					
ANR	1325659	CompoundStatement		4:11:48:48	1325637	1					
ANR	1325660	ReturnStatement	return 0 ;	1753:2:50830:50838	1325637	0	True				
ANR	1325661	PrimaryExpression	0		1325637	0					
ANR	1325662	IfStatement	if ( bin -> phdr )		1325637	3					
ANR	1325663	Condition	bin -> phdr	1755:5:50848:50856	1325637	0	True				
ANR	1325664	PtrMemberAccess	bin -> phdr		1325637	0					
ANR	1325665	Identifier	bin		1325637	0					
ANR	1325666	Identifier	phdr		1325637	1					
ANR	1325667	CompoundStatement		7:16:81:81	1325637	1					
ANR	1325668	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		1325637	0					
ANR	1325669	ForInit	i = 0 ;	1756:7:50868:50873	1325637	0	True				
ANR	1325670	AssignmentExpression	i = 0		1325637	0		=			
ANR	1325671	Identifier	i		1325637	0					
ANR	1325672	PrimaryExpression	0		1325637	1					
ANR	1325673	Condition	i < bin -> ehdr . e_phnum	1756:14:50875:50895	1325637	1	True				
ANR	1325674	RelationalExpression	i < bin -> ehdr . e_phnum		1325637	0		<			
ANR	1325675	Identifier	i		1325637	0					
ANR	1325676	MemberAccess	bin -> ehdr . e_phnum		1325637	1					
ANR	1325677	PtrMemberAccess	bin -> ehdr		1325637	0					
ANR	1325678	Identifier	bin		1325637	0					
ANR	1325679	Identifier	ehdr		1325637	1					
ANR	1325680	Identifier	e_phnum		1325637	1					
ANR	1325681	PostIncDecOperationExpression	i ++	1756:37:50898:50900	1325637	2	True				
ANR	1325682	Identifier	i		1325637	0					
ANR	1325683	IncDec	++		1325637	1					
ANR	1325684	CompoundStatement		8:42:125:125	1325637	3					
ANR	1325685	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_LOAD )		1325637	0					
ANR	1325686	Condition	bin -> phdr [ i ] . p_type == PT_LOAD	1757:7:50912:50941	1325637	0	True				
ANR	1325687	EqualityExpression	bin -> phdr [ i ] . p_type == PT_LOAD		1325637	0		==			
ANR	1325688	MemberAccess	bin -> phdr [ i ] . p_type		1325637	0					
ANR	1325689	ArrayIndexing	bin -> phdr [ i ]		1325637	0					
ANR	1325690	PtrMemberAccess	bin -> phdr		1325637	0					
ANR	1325691	Identifier	bin		1325637	0					
ANR	1325692	Identifier	phdr		1325637	1					
ANR	1325693	Identifier	i		1325637	1					
ANR	1325694	Identifier	p_type		1325637	1					
ANR	1325695	Identifier	PT_LOAD		1325637	1					
ANR	1325696	CompoundStatement		9:39:166:166	1325637	1					
ANR	1325697	ExpressionStatement	tmp = ( ut64 ) bin -> phdr [ i ] . p_vaddr & ELF_PAGE_MASK	1758:4:50950:50998	1325637	0	True				
ANR	1325698	AssignmentExpression	tmp = ( ut64 ) bin -> phdr [ i ] . p_vaddr & ELF_PAGE_MASK		1325637	0		=			
ANR	1325699	Identifier	tmp		1325637	0					
ANR	1325700	BitAndExpression	( ut64 ) bin -> phdr [ i ] . p_vaddr & ELF_PAGE_MASK		1325637	1		&			
ANR	1325701	CastExpression	( ut64 ) bin -> phdr [ i ] . p_vaddr		1325637	0					
ANR	1325702	CastTarget	ut64		1325637	0					
ANR	1325703	MemberAccess	bin -> phdr [ i ] . p_vaddr		1325637	1					
ANR	1325704	ArrayIndexing	bin -> phdr [ i ]		1325637	0					
ANR	1325705	PtrMemberAccess	bin -> phdr		1325637	0					
ANR	1325706	Identifier	bin		1325637	0					
ANR	1325707	Identifier	phdr		1325637	1					
ANR	1325708	Identifier	i		1325637	1					
ANR	1325709	Identifier	p_vaddr		1325637	1					
ANR	1325710	Identifier	ELF_PAGE_MASK		1325637	1					
ANR	1325711	ExpressionStatement	tmp = tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )	1759:4:51004:51044	1325637	1	True				
ANR	1325712	AssignmentExpression	tmp = tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )		1325637	0		=			
ANR	1325713	Identifier	tmp		1325637	0					
ANR	1325714	AdditiveExpression	tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )		1325637	1		-			
ANR	1325715	Identifier	tmp		1325637	0					
ANR	1325716	MultiplicativeExpression	tmp % ( 1 << ELF_PAGE_SIZE )		1325637	1		%			
ANR	1325717	Identifier	tmp		1325637	0					
ANR	1325718	ShiftExpression	1 << ELF_PAGE_SIZE		1325637	1		<<			
ANR	1325719	PrimaryExpression	1		1325637	0					
ANR	1325720	Identifier	ELF_PAGE_SIZE		1325637	1					
ANR	1325721	IfStatement	if ( tmp < base )		1325637	2					
ANR	1325722	Condition	tmp < base	1760:8:51054:51063	1325637	0	True				
ANR	1325723	RelationalExpression	tmp < base		1325637	0		<			
ANR	1325724	Identifier	tmp		1325637	0					
ANR	1325725	Identifier	base		1325637	1					
ANR	1325726	CompoundStatement		12:20:288:288	1325637	1					
ANR	1325727	ExpressionStatement	base = tmp	1761:5:51073:51083	1325637	0	True				
ANR	1325728	AssignmentExpression	base = tmp		1325637	0		=			
ANR	1325729	Identifier	base		1325637	0					
ANR	1325730	Identifier	tmp		1325637	1					
ANR	1325731	IfStatement	if ( base == UT64_MAX && is_bin_etrel ( bin ) )		1325637	4					
ANR	1325732	Condition	base == UT64_MAX && is_bin_etrel ( bin )	1766:5:51108:51145	1325637	0	True				
ANR	1325733	AndExpression	base == UT64_MAX && is_bin_etrel ( bin )		1325637	0		&&			
ANR	1325734	EqualityExpression	base == UT64_MAX		1325637	0		==			
ANR	1325735	Identifier	base		1325637	0					
ANR	1325736	Identifier	UT64_MAX		1325637	1					
ANR	1325737	CallExpression	is_bin_etrel ( bin )		1325637	1					
ANR	1325738	Callee	is_bin_etrel		1325637	0					
ANR	1325739	Identifier	is_bin_etrel		1325637	0					
ANR	1325740	ArgumentList	bin		1325637	1					
ANR	1325741	Argument	bin		1325637	0					
ANR	1325742	Identifier	bin		1325637	0					
ANR	1325743	CompoundStatement		18:45:370:370	1325637	1					
ANR	1325744	ReturnStatement	return 0x08000000 ;	1769:2:51234:51251	1325637	0	True				
ANR	1325745	PrimaryExpression	0x08000000		1325637	0					
ANR	1325746	ReturnStatement	return base == UT64_MAX ? 0 : base ;	1771:1:51257:51289	1325637	5	True				
ANR	1325747	ConditionalExpression	base == UT64_MAX ? 0 : base		1325637	0					
ANR	1325748	Condition	base == UT64_MAX		1325637	0					
ANR	1325749	EqualityExpression	base == UT64_MAX		1325637	0		==			
ANR	1325750	Identifier	base		1325637	0					
ANR	1325751	Identifier	UT64_MAX		1325637	1					
ANR	1325752	PrimaryExpression	0		1325637	1					
ANR	1325753	Identifier	base		1325637	2					
ANR	1325754	ReturnType	ut64 Elf_		1325637	1					
ANR	1325755	Identifier	( r_bin_elf_get_baddr )		1325637	2					
ANR	1325756	Identifier	r_bin_elf_get_baddr		1325637	3					
ANR	1325757	ParameterList	ELFOBJ * bin		1325637	4					
ANR	1325758	Parameter	ELFOBJ * bin	1749:31:50764:50774	1325637	0	True				
ANR	1325759	ParameterType	ELFOBJ *		1325637	0					
ANR	1325760	Identifier	bin		1325637	1					
ANR	1325761	CFGEntryNode	ENTRY		1325637		True				
ANR	1325762	CFGExitNode	EXIT		1325637		True				
ANR	1325763	Symbol	ELF_PAGE_MASK		1325637						
ANR	1325764	Symbol	bin		1325637						
ANR	1325765	Symbol	i		1325637						
ANR	1325766	Symbol	bin -> phdr		1325637						
ANR	1325767	Symbol	PT_LOAD		1325637						
ANR	1325768	Symbol	is_bin_etrel		1325637						
ANR	1325769	Symbol	bin -> ehdr . e_phnum		1325637						
ANR	1325770	Symbol	* bin		1325637						
ANR	1325771	Symbol	* bin -> phdr		1325637						
ANR	1325772	Symbol	ELF_PAGE_SIZE		1325637						
ANR	1325773	Symbol	* i		1325637						
ANR	1325774	Symbol	tmp		1325637						
ANR	1325775	Symbol	bin -> ehdr		1325637						
ANR	1325776	Symbol	bin -> phdr [ i ] . p_type		1325637						
ANR	1325777	Symbol	* * bin		1325637						
ANR	1325778	Symbol	UT64_MAX		1325637						
ANR	1325779	Symbol	base		1325637						
ANR	1325780	Symbol	bin -> phdr [ i ] . p_vaddr		1325637						
ANR	1325781	Function	r_bin_elf_get_boffset	1774:0:51294:51712							
ANR	1325782	FunctionDef	r_bin_elf_get_boffset (ELFOBJ * bin)		1325781	0					
ANR	1325783	CompoundStatement		1774:46:51340:51712	1325781	0					
ANR	1325784	IdentifierDeclStatement	int i ;	1775:1:51343:51348	1325781	0	True				
ANR	1325785	IdentifierDecl	i		1325781	0					
ANR	1325786	IdentifierDeclType	int		1325781	0					
ANR	1325787	Identifier	i		1325781	1					
ANR	1325788	IdentifierDeclStatement	"ut64 tmp , base = UT64_MAX ;"	1776:1:51351:51376	1325781	1	True				
ANR	1325789	IdentifierDecl	tmp		1325781	0					
ANR	1325790	IdentifierDeclType	ut64		1325781	0					
ANR	1325791	Identifier	tmp		1325781	1					
ANR	1325792	IdentifierDecl	base = UT64_MAX		1325781	1					
ANR	1325793	IdentifierDeclType	ut64		1325781	0					
ANR	1325794	Identifier	base		1325781	1					
ANR	1325795	AssignmentExpression	base = UT64_MAX		1325781	2		=			
ANR	1325796	Identifier	UT64_MAX		1325781	0					
ANR	1325797	Identifier	UT64_MAX		1325781	1					
ANR	1325798	ExpressionStatement	"r_return_val_if_fail ( bin , 0 )"	1777:1:51379:51408	1325781	2	True				
ANR	1325799	CallExpression	"r_return_val_if_fail ( bin , 0 )"		1325781	0					
ANR	1325800	Callee	r_return_val_if_fail		1325781	0					
ANR	1325801	Identifier	r_return_val_if_fail		1325781	0					
ANR	1325802	ArgumentList	bin		1325781	1					
ANR	1325803	Argument	bin		1325781	0					
ANR	1325804	Identifier	bin		1325781	0					
ANR	1325805	Argument	0		1325781	1					
ANR	1325806	PrimaryExpression	0		1325781	0					
ANR	1325807	IfStatement	if ( ! bin -> phdr )		1325781	3					
ANR	1325808	Condition	! bin -> phdr	1779:5:51416:51425	1325781	0	True				
ANR	1325809	UnaryOperationExpression	! bin -> phdr		1325781	0					
ANR	1325810	UnaryOperator	!		1325781	0					
ANR	1325811	PtrMemberAccess	bin -> phdr		1325781	1					
ANR	1325812	Identifier	bin		1325781	0					
ANR	1325813	Identifier	phdr		1325781	1					
ANR	1325814	CompoundStatement		6:17:87:87	1325781	1					
ANR	1325815	ReturnStatement	return 0 ;	1780:2:51432:51440	1325781	0	True				
ANR	1325816	PrimaryExpression	0		1325781	0					
ANR	1325817	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		1325781	4					
ANR	1325818	ForInit	i = 0 ;	1783:6:51452:51457	1325781	0	True				
ANR	1325819	AssignmentExpression	i = 0		1325781	0		=			
ANR	1325820	Identifier	i		1325781	0					
ANR	1325821	PrimaryExpression	0		1325781	1					
ANR	1325822	Condition	i < bin -> ehdr . e_phnum	1783:13:51459:51479	1325781	1	True				
ANR	1325823	RelationalExpression	i < bin -> ehdr . e_phnum		1325781	0		<			
ANR	1325824	Identifier	i		1325781	0					
ANR	1325825	MemberAccess	bin -> ehdr . e_phnum		1325781	1					
ANR	1325826	PtrMemberAccess	bin -> ehdr		1325781	0					
ANR	1325827	Identifier	bin		1325781	0					
ANR	1325828	Identifier	ehdr		1325781	1					
ANR	1325829	Identifier	e_phnum		1325781	1					
ANR	1325830	PostIncDecOperationExpression	i ++	1783:36:51482:51484	1325781	2	True				
ANR	1325831	Identifier	i		1325781	0					
ANR	1325832	IncDec	++		1325781	1					
ANR	1325833	CompoundStatement		10:41:146:146	1325781	3					
ANR	1325834	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_LOAD )		1325781	0					
ANR	1325835	Condition	bin -> phdr [ i ] . p_type == PT_LOAD	1784:6:51495:51524	1325781	0	True				
ANR	1325836	EqualityExpression	bin -> phdr [ i ] . p_type == PT_LOAD		1325781	0		==			
ANR	1325837	MemberAccess	bin -> phdr [ i ] . p_type		1325781	0					
ANR	1325838	ArrayIndexing	bin -> phdr [ i ]		1325781	0					
ANR	1325839	PtrMemberAccess	bin -> phdr		1325781	0					
ANR	1325840	Identifier	bin		1325781	0					
ANR	1325841	Identifier	phdr		1325781	1					
ANR	1325842	Identifier	i		1325781	1					
ANR	1325843	Identifier	p_type		1325781	1					
ANR	1325844	Identifier	PT_LOAD		1325781	1					
ANR	1325845	CompoundStatement		11:38:186:186	1325781	1					
ANR	1325846	ExpressionStatement	tmp = ( ut64 ) bin -> phdr [ i ] . p_offset & ELF_PAGE_MASK	1785:3:51532:51581	1325781	0	True				
ANR	1325847	AssignmentExpression	tmp = ( ut64 ) bin -> phdr [ i ] . p_offset & ELF_PAGE_MASK		1325781	0		=			
ANR	1325848	Identifier	tmp		1325781	0					
ANR	1325849	BitAndExpression	( ut64 ) bin -> phdr [ i ] . p_offset & ELF_PAGE_MASK		1325781	1		&			
ANR	1325850	CastExpression	( ut64 ) bin -> phdr [ i ] . p_offset		1325781	0					
ANR	1325851	CastTarget	ut64		1325781	0					
ANR	1325852	MemberAccess	bin -> phdr [ i ] . p_offset		1325781	1					
ANR	1325853	ArrayIndexing	bin -> phdr [ i ]		1325781	0					
ANR	1325854	PtrMemberAccess	bin -> phdr		1325781	0					
ANR	1325855	Identifier	bin		1325781	0					
ANR	1325856	Identifier	phdr		1325781	1					
ANR	1325857	Identifier	i		1325781	1					
ANR	1325858	Identifier	p_offset		1325781	1					
ANR	1325859	Identifier	ELF_PAGE_MASK		1325781	1					
ANR	1325860	ExpressionStatement	tmp = tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )	1786:3:51586:51626	1325781	1	True				
ANR	1325861	AssignmentExpression	tmp = tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )		1325781	0		=			
ANR	1325862	Identifier	tmp		1325781	0					
ANR	1325863	AdditiveExpression	tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )		1325781	1		-			
ANR	1325864	Identifier	tmp		1325781	0					
ANR	1325865	MultiplicativeExpression	tmp % ( 1 << ELF_PAGE_SIZE )		1325781	1		%			
ANR	1325866	Identifier	tmp		1325781	0					
ANR	1325867	ShiftExpression	1 << ELF_PAGE_SIZE		1325781	1		<<			
ANR	1325868	PrimaryExpression	1		1325781	0					
ANR	1325869	Identifier	ELF_PAGE_SIZE		1325781	1					
ANR	1325870	IfStatement	if ( tmp < base )		1325781	2					
ANR	1325871	Condition	tmp < base	1787:7:51635:51644	1325781	0	True				
ANR	1325872	RelationalExpression	tmp < base		1325781	0		<			
ANR	1325873	Identifier	tmp		1325781	0					
ANR	1325874	Identifier	base		1325781	1					
ANR	1325875	CompoundStatement		14:19:306:306	1325781	1					
ANR	1325876	ExpressionStatement	base = tmp	1788:4:51653:51663	1325781	0	True				
ANR	1325877	AssignmentExpression	base = tmp		1325781	0		=			
ANR	1325878	Identifier	base		1325781	0					
ANR	1325879	Identifier	tmp		1325781	1					
ANR	1325880	ReturnStatement	return base == UT64_MAX ? 0 : base ;	1792:1:51678:51710	1325781	5	True				
ANR	1325881	ConditionalExpression	base == UT64_MAX ? 0 : base		1325781	0					
ANR	1325882	Condition	base == UT64_MAX		1325781	0					
ANR	1325883	EqualityExpression	base == UT64_MAX		1325781	0		==			
ANR	1325884	Identifier	base		1325781	0					
ANR	1325885	Identifier	UT64_MAX		1325781	1					
ANR	1325886	PrimaryExpression	0		1325781	1					
ANR	1325887	Identifier	base		1325781	2					
ANR	1325888	ReturnType	ut64 Elf_		1325781	1					
ANR	1325889	Identifier	( r_bin_elf_get_boffset )		1325781	2					
ANR	1325890	Identifier	r_bin_elf_get_boffset		1325781	3					
ANR	1325891	ParameterList	ELFOBJ * bin		1325781	4					
ANR	1325892	Parameter	ELFOBJ * bin	1774:33:51327:51337	1325781	0	True				
ANR	1325893	ParameterType	ELFOBJ *		1325781	0					
ANR	1325894	Identifier	bin		1325781	1					
ANR	1325895	CFGEntryNode	ENTRY		1325781		True				
ANR	1325896	CFGExitNode	EXIT		1325781		True				
ANR	1325897	Symbol	ELF_PAGE_MASK		1325781						
ANR	1325898	Symbol	bin		1325781						
ANR	1325899	Symbol	i		1325781						
ANR	1325900	Symbol	bin -> phdr		1325781						
ANR	1325901	Symbol	PT_LOAD		1325781						
ANR	1325902	Symbol	bin -> ehdr . e_phnum		1325781						
ANR	1325903	Symbol	* bin		1325781						
ANR	1325904	Symbol	* bin -> phdr		1325781						
ANR	1325905	Symbol	ELF_PAGE_SIZE		1325781						
ANR	1325906	Symbol	bin -> phdr [ i ] . p_offset		1325781						
ANR	1325907	Symbol	* i		1325781						
ANR	1325908	Symbol	tmp		1325781						
ANR	1325909	Symbol	bin -> ehdr		1325781						
ANR	1325910	Symbol	bin -> phdr [ i ] . p_type		1325781						
ANR	1325911	Symbol	* * bin		1325781						
ANR	1325912	Symbol	UT64_MAX		1325781						
ANR	1325913	Symbol	base		1325781						
ANR	1325914	Function	r_bin_elf_get_init_offset	1795:0:51715:52184							
ANR	1325915	FunctionDef	r_bin_elf_get_init_offset (ELFOBJ * bin)		1325914	0					
ANR	1325916	CompoundStatement		1795:50:51765:52184	1325914	0					
ANR	1325917	IdentifierDeclStatement	ut64 entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin ) ;	1796:1:51768:51819	1325914	0	True				
ANR	1325918	IdentifierDecl	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1325914	0					
ANR	1325919	IdentifierDeclType	ut64		1325914	0					
ANR	1325920	Identifier	entry		1325914	1					
ANR	1325921	AssignmentExpression	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1325914	2		=			
ANR	1325922	Identifier	entry		1325914	0					
ANR	1325923	CallExpression	Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1325914	1					
ANR	1325924	Callee	Elf_ ( r_bin_elf_get_entry_offset )		1325914	0					
ANR	1325925	CallExpression	Elf_ ( r_bin_elf_get_entry_offset )		1325914	0					
ANR	1325926	Callee	Elf_		1325914	0					
ANR	1325927	Identifier	Elf_		1325914	0					
ANR	1325928	ArgumentList	r_bin_elf_get_entry_offset		1325914	1					
ANR	1325929	Argument	r_bin_elf_get_entry_offset		1325914	0					
ANR	1325930	Identifier	r_bin_elf_get_entry_offset		1325914	0					
ANR	1325931	ArgumentList	bin		1325914	1					
ANR	1325932	Argument	bin		1325914	0					
ANR	1325933	Identifier	bin		1325914	0					
ANR	1325934	IdentifierDeclStatement	ut8 buf [ 128 ] ;	1797:1:51822:51834	1325914	1	True				
ANR	1325935	IdentifierDecl	buf [ 128 ]		1325914	0					
ANR	1325936	IdentifierDeclType	ut8 [ 128 ]		1325914	0					
ANR	1325937	Identifier	buf		1325914	1					
ANR	1325938	PrimaryExpression	128		1325914	2					
ANR	1325939	IfStatement	if ( ! bin || entry == UT64_MAX )		1325914	2					
ANR	1325940	Condition	! bin || entry == UT64_MAX	1798:5:51841:51865	1325914	0	True				
ANR	1325941	OrExpression	! bin || entry == UT64_MAX		1325914	0		||			
ANR	1325942	UnaryOperationExpression	! bin		1325914	0					
ANR	1325943	UnaryOperator	!		1325914	0					
ANR	1325944	Identifier	bin		1325914	1					
ANR	1325945	EqualityExpression	entry == UT64_MAX		1325914	1		==			
ANR	1325946	Identifier	entry		1325914	0					
ANR	1325947	Identifier	UT64_MAX		1325914	1					
ANR	1325948	CompoundStatement		4:32:102:102	1325914	1					
ANR	1325949	ReturnStatement	return UT64_MAX ;	1799:2:51872:51887	1325914	0	True				
ANR	1325950	Identifier	UT64_MAX		1325914	0					
ANR	1325951	IfStatement	"if ( r_buf_read_at ( bin -> b , entry + 16 , buf , sizeof ( buf ) ) < 1 )"		1325914	3					
ANR	1325952	Condition	"r_buf_read_at ( bin -> b , entry + 16 , buf , sizeof ( buf ) ) < 1"	1801:5:51897:51953	1325914	0	True				
ANR	1325953	RelationalExpression	"r_buf_read_at ( bin -> b , entry + 16 , buf , sizeof ( buf ) ) < 1"		1325914	0		<			
ANR	1325954	CallExpression	"r_buf_read_at ( bin -> b , entry + 16 , buf , sizeof ( buf ) )"		1325914	0					
ANR	1325955	Callee	r_buf_read_at		1325914	0					
ANR	1325956	Identifier	r_buf_read_at		1325914	0					
ANR	1325957	ArgumentList	bin -> b		1325914	1					
ANR	1325958	Argument	bin -> b		1325914	0					
ANR	1325959	PtrMemberAccess	bin -> b		1325914	0					
ANR	1325960	Identifier	bin		1325914	0					
ANR	1325961	Identifier	b		1325914	1					
ANR	1325962	Argument	entry + 16		1325914	1					
ANR	1325963	AdditiveExpression	entry + 16		1325914	0		+			
ANR	1325964	Identifier	entry		1325914	0					
ANR	1325965	PrimaryExpression	16		1325914	1					
ANR	1325966	Argument	buf		1325914	2					
ANR	1325967	Identifier	buf		1325914	0					
ANR	1325968	Argument	sizeof ( buf )		1325914	3					
ANR	1325969	SizeofExpression	sizeof ( buf )		1325914	0					
ANR	1325970	Sizeof	sizeof		1325914	0					
ANR	1325971	SizeofOperand	buf		1325914	1					
ANR	1325972	PrimaryExpression	1		1325914	1					
ANR	1325973	CompoundStatement		7:64:190:190	1325914	1					
ANR	1325974	ExpressionStatement	"bprintf ( ""read (init_offset)\\n"" )"	1802:2:51960:51992	1325914	0	True				
ANR	1325975	CallExpression	"bprintf ( ""read (init_offset)\\n"" )"		1325914	0					
ANR	1325976	Callee	bprintf		1325914	0					
ANR	1325977	Identifier	bprintf		1325914	0					
ANR	1325978	ArgumentList	"""read (init_offset)\\n"""		1325914	1					
ANR	1325979	Argument	"""read (init_offset)\\n"""		1325914	0					
ANR	1325980	PrimaryExpression	"""read (init_offset)\\n"""		1325914	0					
ANR	1325981	ReturnStatement	return 0 ;	1803:2:51996:52004	1325914	1	True				
ANR	1325982	PrimaryExpression	0		1325914	0					
ANR	1325983	IfStatement	if ( buf [ 0 ] == 0x68 )		1325914	4					
ANR	1325984	Condition	buf [ 0 ] == 0x68	1805:5:52014:52027	1325914	0	True				
ANR	1325985	EqualityExpression	buf [ 0 ] == 0x68		1325914	0		==			
ANR	1325986	ArrayIndexing	buf [ 0 ]		1325914	0					
ANR	1325987	Identifier	buf		1325914	0					
ANR	1325988	PrimaryExpression	0		1325914	1					
ANR	1325989	PrimaryExpression	0x68		1325914	1					
ANR	1325990	CompoundStatement		12:2:288:297	1325914	1					
ANR	1325991	IdentifierDeclStatement	ut64 addr ;	1806:2:52054:52063	1325914	0	True				
ANR	1325992	IdentifierDecl	addr		1325914	0					
ANR	1325993	IdentifierDeclType	ut64		1325914	0					
ANR	1325994	Identifier	addr		1325914	1					
ANR	1325995	ExpressionStatement	"memmove ( buf , buf + 1 , 4 )"	1807:2:52067:52092	1325914	1	True				
ANR	1325996	CallExpression	"memmove ( buf , buf + 1 , 4 )"		1325914	0					
ANR	1325997	Callee	memmove		1325914	0					
ANR	1325998	Identifier	memmove		1325914	0					
ANR	1325999	ArgumentList	buf		1325914	1					
ANR	1326000	Argument	buf		1325914	0					
ANR	1326001	Identifier	buf		1325914	0					
ANR	1326002	Argument	buf + 1		1325914	1					
ANR	1326003	AdditiveExpression	buf + 1		1325914	0		+			
ANR	1326004	Identifier	buf		1325914	0					
ANR	1326005	PrimaryExpression	1		1325914	1					
ANR	1326006	Argument	4		1325914	2					
ANR	1326007	PrimaryExpression	4		1325914	0					
ANR	1326008	ExpressionStatement	addr = ( ut64 ) r_read_le32 ( buf )	1808:2:52096:52126	1325914	2	True				
ANR	1326009	AssignmentExpression	addr = ( ut64 ) r_read_le32 ( buf )		1325914	0		=			
ANR	1326010	Identifier	addr		1325914	0					
ANR	1326011	CastExpression	( ut64 ) r_read_le32 ( buf )		1325914	1					
ANR	1326012	CastTarget	ut64		1325914	0					
ANR	1326013	CallExpression	r_read_le32 ( buf )		1325914	1					
ANR	1326014	Callee	r_read_le32		1325914	0					
ANR	1326015	Identifier	r_read_le32		1325914	0					
ANR	1326016	ArgumentList	buf		1325914	1					
ANR	1326017	Argument	buf		1325914	0					
ANR	1326018	Identifier	buf		1325914	0					
ANR	1326019	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , addr ) ;"	1809:2:52130:52168	1325914	3	True				
ANR	1326020	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , addr )"		1325914	0					
ANR	1326021	Callee	Elf_ ( r_bin_elf_v2p )		1325914	0					
ANR	1326022	CallExpression	Elf_ ( r_bin_elf_v2p )		1325914	0					
ANR	1326023	Callee	Elf_		1325914	0					
ANR	1326024	Identifier	Elf_		1325914	0					
ANR	1326025	ArgumentList	r_bin_elf_v2p		1325914	1					
ANR	1326026	Argument	r_bin_elf_v2p		1325914	0					
ANR	1326027	Identifier	r_bin_elf_v2p		1325914	0					
ANR	1326028	ArgumentList	bin		1325914	1					
ANR	1326029	Argument	bin		1325914	0					
ANR	1326030	Identifier	bin		1325914	0					
ANR	1326031	Argument	addr		1325914	1					
ANR	1326032	Identifier	addr		1325914	0					
ANR	1326033	ReturnStatement	return 0 ;	1811:1:52174:52182	1325914	5	True				
ANR	1326034	PrimaryExpression	0		1325914	0					
ANR	1326035	ReturnType	ut64 Elf_		1325914	1					
ANR	1326036	Identifier	( r_bin_elf_get_init_offset )		1325914	2					
ANR	1326037	Identifier	r_bin_elf_get_init_offset		1325914	3					
ANR	1326038	ParameterList	ELFOBJ * bin		1325914	4					
ANR	1326039	Parameter	ELFOBJ * bin	1795:37:51752:51762	1325914	0	True				
ANR	1326040	ParameterType	ELFOBJ *		1325914	0					
ANR	1326041	Identifier	bin		1325914	1					
ANR	1326042	CFGEntryNode	ENTRY		1325914		True				
ANR	1326043	CFGExitNode	EXIT		1325914		True				
ANR	1326044	Symbol	Elf_		1325914						
ANR	1326045	Symbol	bin -> b		1325914						
ANR	1326046	Symbol	* buf		1325914						
ANR	1326047	Symbol	r_read_le32		1325914						
ANR	1326048	Symbol	bin		1325914						
ANR	1326049	Symbol	* bin		1325914						
ANR	1326050	Symbol	entry		1325914						
ANR	1326051	Symbol	buf		1325914						
ANR	1326052	Symbol	r_buf_read_at		1325914						
ANR	1326053	Symbol	UT64_MAX		1325914						
ANR	1326054	Symbol	addr		1325914						
ANR	1326055	Symbol	r_bin_elf_v2p		1325914						
ANR	1326056	Symbol	r_bin_elf_get_entry_offset		1325914						
ANR	1326057	Function	r_bin_elf_get_fini_offset	1814:0:52187:52648							
ANR	1326058	FunctionDef	r_bin_elf_get_fini_offset (ELFOBJ * bin)		1326057	0					
ANR	1326059	CompoundStatement		1814:50:52237:52648	1326057	0					
ANR	1326060	IdentifierDeclStatement	ut64 entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin ) ;	1815:1:52240:52291	1326057	0	True				
ANR	1326061	IdentifierDecl	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1326057	0					
ANR	1326062	IdentifierDeclType	ut64		1326057	0					
ANR	1326063	Identifier	entry		1326057	1					
ANR	1326064	AssignmentExpression	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1326057	2		=			
ANR	1326065	Identifier	entry		1326057	0					
ANR	1326066	CallExpression	Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1326057	1					
ANR	1326067	Callee	Elf_ ( r_bin_elf_get_entry_offset )		1326057	0					
ANR	1326068	CallExpression	Elf_ ( r_bin_elf_get_entry_offset )		1326057	0					
ANR	1326069	Callee	Elf_		1326057	0					
ANR	1326070	Identifier	Elf_		1326057	0					
ANR	1326071	ArgumentList	r_bin_elf_get_entry_offset		1326057	1					
ANR	1326072	Argument	r_bin_elf_get_entry_offset		1326057	0					
ANR	1326073	Identifier	r_bin_elf_get_entry_offset		1326057	0					
ANR	1326074	ArgumentList	bin		1326057	1					
ANR	1326075	Argument	bin		1326057	0					
ANR	1326076	Identifier	bin		1326057	0					
ANR	1326077	IdentifierDeclStatement	ut8 buf [ 512 ] ;	1816:1:52294:52306	1326057	1	True				
ANR	1326078	IdentifierDecl	buf [ 512 ]		1326057	0					
ANR	1326079	IdentifierDeclType	ut8 [ 512 ]		1326057	0					
ANR	1326080	Identifier	buf		1326057	1					
ANR	1326081	PrimaryExpression	512		1326057	2					
ANR	1326082	IfStatement	if ( ! bin || entry == UT64_MAX )		1326057	2					
ANR	1326083	Condition	! bin || entry == UT64_MAX	1817:5:52313:52337	1326057	0	True				
ANR	1326084	OrExpression	! bin || entry == UT64_MAX		1326057	0		||			
ANR	1326085	UnaryOperationExpression	! bin		1326057	0					
ANR	1326086	UnaryOperator	!		1326057	0					
ANR	1326087	Identifier	bin		1326057	1					
ANR	1326088	EqualityExpression	entry == UT64_MAX		1326057	1		==			
ANR	1326089	Identifier	entry		1326057	0					
ANR	1326090	Identifier	UT64_MAX		1326057	1					
ANR	1326091	CompoundStatement		4:32:102:102	1326057	1					
ANR	1326092	ReturnStatement	return UT64_MAX ;	1818:2:52344:52359	1326057	0	True				
ANR	1326093	Identifier	UT64_MAX		1326057	0					
ANR	1326094	IfStatement	"if ( r_buf_read_at ( bin -> b , entry + 11 , buf , sizeof ( buf ) ) == - 1 )"		1326057	3					
ANR	1326095	Condition	"r_buf_read_at ( bin -> b , entry + 11 , buf , sizeof ( buf ) ) == - 1"	1820:5:52369:52427	1326057	0	True				
ANR	1326096	EqualityExpression	"r_buf_read_at ( bin -> b , entry + 11 , buf , sizeof ( buf ) ) == - 1"		1326057	0		==			
ANR	1326097	CallExpression	"r_buf_read_at ( bin -> b , entry + 11 , buf , sizeof ( buf ) )"		1326057	0					
ANR	1326098	Callee	r_buf_read_at		1326057	0					
ANR	1326099	Identifier	r_buf_read_at		1326057	0					
ANR	1326100	ArgumentList	bin -> b		1326057	1					
ANR	1326101	Argument	bin -> b		1326057	0					
ANR	1326102	PtrMemberAccess	bin -> b		1326057	0					
ANR	1326103	Identifier	bin		1326057	0					
ANR	1326104	Identifier	b		1326057	1					
ANR	1326105	Argument	entry + 11		1326057	1					
ANR	1326106	AdditiveExpression	entry + 11		1326057	0		+			
ANR	1326107	Identifier	entry		1326057	0					
ANR	1326108	PrimaryExpression	11		1326057	1					
ANR	1326109	Argument	buf		1326057	2					
ANR	1326110	Identifier	buf		1326057	0					
ANR	1326111	Argument	sizeof ( buf )		1326057	3					
ANR	1326112	SizeofExpression	sizeof ( buf )		1326057	0					
ANR	1326113	Sizeof	sizeof		1326057	0					
ANR	1326114	SizeofOperand	buf		1326057	1					
ANR	1326115	UnaryOperationExpression	- 1		1326057	1					
ANR	1326116	UnaryOperator	-		1326057	0					
ANR	1326117	PrimaryExpression	1		1326057	1					
ANR	1326118	CompoundStatement		7:66:192:192	1326057	1					
ANR	1326119	ExpressionStatement	"bprintf ( ""read (get_fini)\\n"" )"	1821:2:52434:52463	1326057	0	True				
ANR	1326120	CallExpression	"bprintf ( ""read (get_fini)\\n"" )"		1326057	0					
ANR	1326121	Callee	bprintf		1326057	0					
ANR	1326122	Identifier	bprintf		1326057	0					
ANR	1326123	ArgumentList	"""read (get_fini)\\n"""		1326057	1					
ANR	1326124	Argument	"""read (get_fini)\\n"""		1326057	0					
ANR	1326125	PrimaryExpression	"""read (get_fini)\\n"""		1326057	0					
ANR	1326126	ReturnStatement	return 0 ;	1822:2:52467:52475	1326057	1	True				
ANR	1326127	PrimaryExpression	0		1326057	0					
ANR	1326128	IfStatement	if ( * buf == 0x68 )		1326057	4					
ANR	1326129	Condition	* buf == 0x68	1824:5:52485:52496	1326057	0	True				
ANR	1326130	EqualityExpression	* buf == 0x68		1326057	0		==			
ANR	1326131	UnaryOperationExpression	* buf		1326057	0					
ANR	1326132	UnaryOperator	*		1326057	0					
ANR	1326133	Identifier	buf		1326057	1					
ANR	1326134	PrimaryExpression	0x68		1326057	1					
ANR	1326135	CompoundStatement		13:2:317:352	1326057	1					
ANR	1326136	ExpressionStatement	"memmove ( buf , buf + 1 , 4 )"	1825:2:52526:52551	1326057	0	True				
ANR	1326137	CallExpression	"memmove ( buf , buf + 1 , 4 )"		1326057	0					
ANR	1326138	Callee	memmove		1326057	0					
ANR	1326139	Identifier	memmove		1326057	0					
ANR	1326140	ArgumentList	buf		1326057	1					
ANR	1326141	Argument	buf		1326057	0					
ANR	1326142	Identifier	buf		1326057	0					
ANR	1326143	Argument	buf + 1		1326057	1					
ANR	1326144	AdditiveExpression	buf + 1		1326057	0		+			
ANR	1326145	Identifier	buf		1326057	0					
ANR	1326146	PrimaryExpression	1		1326057	1					
ANR	1326147	Argument	4		1326057	2					
ANR	1326148	PrimaryExpression	4		1326057	0					
ANR	1326149	IdentifierDeclStatement	ut64 addr = ( ut64 ) r_read_le32 ( buf ) ;	1826:2:52555:52590	1326057	1	True				
ANR	1326150	IdentifierDecl	addr = ( ut64 ) r_read_le32 ( buf )		1326057	0					
ANR	1326151	IdentifierDeclType	ut64		1326057	0					
ANR	1326152	Identifier	addr		1326057	1					
ANR	1326153	AssignmentExpression	addr = ( ut64 ) r_read_le32 ( buf )		1326057	2		=			
ANR	1326154	Identifier	addr		1326057	0					
ANR	1326155	CastExpression	( ut64 ) r_read_le32 ( buf )		1326057	1					
ANR	1326156	CastTarget	ut64		1326057	0					
ANR	1326157	CallExpression	r_read_le32 ( buf )		1326057	1					
ANR	1326158	Callee	r_read_le32		1326057	0					
ANR	1326159	Identifier	r_read_le32		1326057	0					
ANR	1326160	ArgumentList	buf		1326057	1					
ANR	1326161	Argument	buf		1326057	0					
ANR	1326162	Identifier	buf		1326057	0					
ANR	1326163	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , addr ) ;"	1827:2:52594:52632	1326057	2	True				
ANR	1326164	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , addr )"		1326057	0					
ANR	1326165	Callee	Elf_ ( r_bin_elf_v2p )		1326057	0					
ANR	1326166	CallExpression	Elf_ ( r_bin_elf_v2p )		1326057	0					
ANR	1326167	Callee	Elf_		1326057	0					
ANR	1326168	Identifier	Elf_		1326057	0					
ANR	1326169	ArgumentList	r_bin_elf_v2p		1326057	1					
ANR	1326170	Argument	r_bin_elf_v2p		1326057	0					
ANR	1326171	Identifier	r_bin_elf_v2p		1326057	0					
ANR	1326172	ArgumentList	bin		1326057	1					
ANR	1326173	Argument	bin		1326057	0					
ANR	1326174	Identifier	bin		1326057	0					
ANR	1326175	Argument	addr		1326057	1					
ANR	1326176	Identifier	addr		1326057	0					
ANR	1326177	ReturnStatement	return 0 ;	1829:1:52638:52646	1326057	5	True				
ANR	1326178	PrimaryExpression	0		1326057	0					
ANR	1326179	ReturnType	ut64 Elf_		1326057	1					
ANR	1326180	Identifier	( r_bin_elf_get_fini_offset )		1326057	2					
ANR	1326181	Identifier	r_bin_elf_get_fini_offset		1326057	3					
ANR	1326182	ParameterList	ELFOBJ * bin		1326057	4					
ANR	1326183	Parameter	ELFOBJ * bin	1814:37:52224:52234	1326057	0	True				
ANR	1326184	ParameterType	ELFOBJ *		1326057	0					
ANR	1326185	Identifier	bin		1326057	1					
ANR	1326186	CFGEntryNode	ENTRY		1326057		True				
ANR	1326187	CFGExitNode	EXIT		1326057		True				
ANR	1326188	Symbol	Elf_		1326057						
ANR	1326189	Symbol	bin -> b		1326057						
ANR	1326190	Symbol	* buf		1326057						
ANR	1326191	Symbol	r_read_le32		1326057						
ANR	1326192	Symbol	bin		1326057						
ANR	1326193	Symbol	* bin		1326057						
ANR	1326194	Symbol	entry		1326057						
ANR	1326195	Symbol	buf		1326057						
ANR	1326196	Symbol	r_buf_read_at		1326057						
ANR	1326197	Symbol	UT64_MAX		1326057						
ANR	1326198	Symbol	addr		1326057						
ANR	1326199	Symbol	r_bin_elf_v2p		1326057						
ANR	1326200	Symbol	r_bin_elf_get_entry_offset		1326057						
ANR	1326201	Function	r_bin_elf_get_entry_offset	1832:0:52651:53116							
ANR	1326202	FunctionDef	r_bin_elf_get_entry_offset (ELFOBJ * bin)		1326201	0					
ANR	1326203	CompoundStatement		1832:51:52702:53116	1326201	0					
ANR	1326204	ExpressionStatement	"r_return_val_if_fail ( bin , UT64_MAX )"	1833:1:52705:52741	1326201	0	True				
ANR	1326205	CallExpression	"r_return_val_if_fail ( bin , UT64_MAX )"		1326201	0					
ANR	1326206	Callee	r_return_val_if_fail		1326201	0					
ANR	1326207	Identifier	r_return_val_if_fail		1326201	0					
ANR	1326208	ArgumentList	bin		1326201	1					
ANR	1326209	Argument	bin		1326201	0					
ANR	1326210	Identifier	bin		1326201	0					
ANR	1326211	Argument	UT64_MAX		1326201	1					
ANR	1326212	Identifier	UT64_MAX		1326201	0					
ANR	1326213	IdentifierDeclStatement	ut64 entry = bin -> ehdr . e_entry ;	1834:1:52744:52774	1326201	1	True				
ANR	1326214	IdentifierDecl	entry = bin -> ehdr . e_entry		1326201	0					
ANR	1326215	IdentifierDeclType	ut64		1326201	0					
ANR	1326216	Identifier	entry		1326201	1					
ANR	1326217	AssignmentExpression	entry = bin -> ehdr . e_entry		1326201	2		=			
ANR	1326218	Identifier	entry		1326201	0					
ANR	1326219	MemberAccess	bin -> ehdr . e_entry		1326201	1					
ANR	1326220	PtrMemberAccess	bin -> ehdr		1326201	0					
ANR	1326221	Identifier	bin		1326201	0					
ANR	1326222	Identifier	ehdr		1326201	1					
ANR	1326223	Identifier	e_entry		1326201	1					
ANR	1326224	IfStatement	if ( ! entry )		1326201	2					
ANR	1326225	Condition	! entry	1835:5:52781:52786	1326201	0	True				
ANR	1326226	UnaryOperationExpression	! entry		1326201	0					
ANR	1326227	UnaryOperator	!		1326201	0					
ANR	1326228	Identifier	entry		1326201	1					
ANR	1326229	CompoundStatement		4:13:86:86	1326201	1					
ANR	1326230	ExpressionStatement	"entry = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".init.text"" )"	1836:2:52793:52854	1326201	0	True				
ANR	1326231	AssignmentExpression	"entry = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".init.text"" )"		1326201	0		=			
ANR	1326232	Identifier	entry		1326201	0					
ANR	1326233	CallExpression	"Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".init.text"" )"		1326201	1					
ANR	1326234	Callee	Elf_ ( r_bin_elf_get_section_offset )		1326201	0					
ANR	1326235	CallExpression	Elf_ ( r_bin_elf_get_section_offset )		1326201	0					
ANR	1326236	Callee	Elf_		1326201	0					
ANR	1326237	Identifier	Elf_		1326201	0					
ANR	1326238	ArgumentList	r_bin_elf_get_section_offset		1326201	1					
ANR	1326239	Argument	r_bin_elf_get_section_offset		1326201	0					
ANR	1326240	Identifier	r_bin_elf_get_section_offset		1326201	0					
ANR	1326241	ArgumentList	bin		1326201	1					
ANR	1326242	Argument	bin		1326201	0					
ANR	1326243	Identifier	bin		1326201	0					
ANR	1326244	Argument	""".init.text"""		1326201	1					
ANR	1326245	PrimaryExpression	""".init.text"""		1326201	0					
ANR	1326246	IfStatement	if ( entry != UT64_MAX )		1326201	1					
ANR	1326247	Condition	entry != UT64_MAX	1837:6:52862:52878	1326201	0	True				
ANR	1326248	EqualityExpression	entry != UT64_MAX		1326201	0		!=			
ANR	1326249	Identifier	entry		1326201	0					
ANR	1326250	Identifier	UT64_MAX		1326201	1					
ANR	1326251	CompoundStatement		6:25:178:178	1326201	1					
ANR	1326252	ReturnStatement	return entry ;	1838:3:52886:52898	1326201	0	True				
ANR	1326253	Identifier	entry		1326201	0					
ANR	1326254	ExpressionStatement	"entry = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".text"" )"	1840:2:52906:52962	1326201	2	True				
ANR	1326255	AssignmentExpression	"entry = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".text"" )"		1326201	0		=			
ANR	1326256	Identifier	entry		1326201	0					
ANR	1326257	CallExpression	"Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".text"" )"		1326201	1					
ANR	1326258	Callee	Elf_ ( r_bin_elf_get_section_offset )		1326201	0					
ANR	1326259	CallExpression	Elf_ ( r_bin_elf_get_section_offset )		1326201	0					
ANR	1326260	Callee	Elf_		1326201	0					
ANR	1326261	Identifier	Elf_		1326201	0					
ANR	1326262	ArgumentList	r_bin_elf_get_section_offset		1326201	1					
ANR	1326263	Argument	r_bin_elf_get_section_offset		1326201	0					
ANR	1326264	Identifier	r_bin_elf_get_section_offset		1326201	0					
ANR	1326265	ArgumentList	bin		1326201	1					
ANR	1326266	Argument	bin		1326201	0					
ANR	1326267	Identifier	bin		1326201	0					
ANR	1326268	Argument	""".text"""		1326201	1					
ANR	1326269	PrimaryExpression	""".text"""		1326201	0					
ANR	1326270	IfStatement	if ( entry != UT64_MAX )		1326201	3					
ANR	1326271	Condition	entry != UT64_MAX	1841:6:52970:52986	1326201	0	True				
ANR	1326272	EqualityExpression	entry != UT64_MAX		1326201	0		!=			
ANR	1326273	Identifier	entry		1326201	0					
ANR	1326274	Identifier	UT64_MAX		1326201	1					
ANR	1326275	CompoundStatement		10:25:286:286	1326201	1					
ANR	1326276	ReturnStatement	return entry ;	1842:3:52994:53006	1326201	0	True				
ANR	1326277	Identifier	entry		1326201	0					
ANR	1326278	ReturnStatement	"return Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".init"" ) ;"	1844:2:53014:53069	1326201	4	True				
ANR	1326279	CallExpression	"Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".init"" )"		1326201	0					
ANR	1326280	Callee	Elf_ ( r_bin_elf_get_section_offset )		1326201	0					
ANR	1326281	CallExpression	Elf_ ( r_bin_elf_get_section_offset )		1326201	0					
ANR	1326282	Callee	Elf_		1326201	0					
ANR	1326283	Identifier	Elf_		1326201	0					
ANR	1326284	ArgumentList	r_bin_elf_get_section_offset		1326201	1					
ANR	1326285	Argument	r_bin_elf_get_section_offset		1326201	0					
ANR	1326286	Identifier	r_bin_elf_get_section_offset		1326201	0					
ANR	1326287	ArgumentList	bin		1326201	1					
ANR	1326288	Argument	bin		1326201	0					
ANR	1326289	Identifier	bin		1326201	0					
ANR	1326290	Argument	""".init"""		1326201	1					
ANR	1326291	PrimaryExpression	""".init"""		1326201	0					
ANR	1326292	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , entry ) ;"	1846:1:53075:53114	1326201	3	True				
ANR	1326293	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , entry )"		1326201	0					
ANR	1326294	Callee	Elf_ ( r_bin_elf_v2p )		1326201	0					
ANR	1326295	CallExpression	Elf_ ( r_bin_elf_v2p )		1326201	0					
ANR	1326296	Callee	Elf_		1326201	0					
ANR	1326297	Identifier	Elf_		1326201	0					
ANR	1326298	ArgumentList	r_bin_elf_v2p		1326201	1					
ANR	1326299	Argument	r_bin_elf_v2p		1326201	0					
ANR	1326300	Identifier	r_bin_elf_v2p		1326201	0					
ANR	1326301	ArgumentList	bin		1326201	1					
ANR	1326302	Argument	bin		1326201	0					
ANR	1326303	Identifier	bin		1326201	0					
ANR	1326304	Argument	entry		1326201	1					
ANR	1326305	Identifier	entry		1326201	0					
ANR	1326306	ReturnType	ut64 Elf_		1326201	1					
ANR	1326307	Identifier	( r_bin_elf_get_entry_offset )		1326201	2					
ANR	1326308	Identifier	r_bin_elf_get_entry_offset		1326201	3					
ANR	1326309	ParameterList	ELFOBJ * bin		1326201	4					
ANR	1326310	Parameter	ELFOBJ * bin	1832:38:52689:52699	1326201	0	True				
ANR	1326311	ParameterType	ELFOBJ *		1326201	0					
ANR	1326312	Identifier	bin		1326201	1					
ANR	1326313	CFGEntryNode	ENTRY		1326201		True				
ANR	1326314	CFGExitNode	EXIT		1326201		True				
ANR	1326315	Symbol	Elf_		1326201						
ANR	1326316	Symbol	entry		1326201						
ANR	1326317	Symbol	bin		1326201						
ANR	1326318	Symbol	bin -> ehdr		1326201						
ANR	1326319	Symbol	bin -> ehdr . e_entry		1326201						
ANR	1326320	Symbol	UT64_MAX		1326201						
ANR	1326321	Symbol	r_bin_elf_v2p		1326201						
ANR	1326322	Symbol	* bin		1326201						
ANR	1326323	Symbol	r_bin_elf_get_section_offset		1326201						
ANR	1326324	Function	getmainsymbol	1849:0:53119:53412							
ANR	1326325	FunctionDef	getmainsymbol (ELFOBJ * bin)		1326324	0					
ANR	1326326	CompoundStatement		1849:39:53158:53412	1326324	0					
ANR	1326327	IdentifierDeclStatement	struct r_bin_elf_symbol_t * symbol ;	1850:1:53161:53194	1326324	0	True				
ANR	1326328	IdentifierDecl	* symbol		1326324	0					
ANR	1326329	IdentifierDeclType	struct r_bin_elf_symbol_t *		1326324	0					
ANR	1326330	Identifier	symbol		1326324	1					
ANR	1326331	IdentifierDeclStatement	int i ;	1851:1:53197:53202	1326324	1	True				
ANR	1326332	IdentifierDecl	i		1326324	0					
ANR	1326333	IdentifierDeclType	int		1326324	0					
ANR	1326334	Identifier	i		1326324	1					
ANR	1326335	IfStatement	if ( ! ( symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin ) ) )		1326324	2					
ANR	1326336	Condition	! ( symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin ) )	1852:5:53209:53253	1326324	0	True				
ANR	1326337	UnaryOperationExpression	! ( symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin ) )		1326324	0					
ANR	1326338	UnaryOperator	!		1326324	0					
ANR	1326339	AssignmentExpression	symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin )		1326324	1		=			
ANR	1326340	Identifier	symbol		1326324	0					
ANR	1326341	CallExpression	Elf_ ( r_bin_elf_get_symbols ) ( bin )		1326324	1					
ANR	1326342	Callee	Elf_ ( r_bin_elf_get_symbols )		1326324	0					
ANR	1326343	CallExpression	Elf_ ( r_bin_elf_get_symbols )		1326324	0					
ANR	1326344	Callee	Elf_		1326324	0					
ANR	1326345	Identifier	Elf_		1326324	0					
ANR	1326346	ArgumentList	r_bin_elf_get_symbols		1326324	1					
ANR	1326347	Argument	r_bin_elf_get_symbols		1326324	0					
ANR	1326348	Identifier	r_bin_elf_get_symbols		1326324	0					
ANR	1326349	ArgumentList	bin		1326324	1					
ANR	1326350	Argument	bin		1326324	0					
ANR	1326351	Identifier	bin		1326324	0					
ANR	1326352	CompoundStatement		4:52:97:97	1326324	1					
ANR	1326353	ReturnStatement	return UT64_MAX ;	1853:2:53260:53275	1326324	0	True				
ANR	1326354	Identifier	UT64_MAX		1326324	0					
ANR	1326355	ForStatement	for ( i = 0 ; ! symbol [ i ] . last ; i ++ )		1326324	3					
ANR	1326356	ForInit	i = 0 ;	1855:6:53286:53291	1326324	0	True				
ANR	1326357	AssignmentExpression	i = 0		1326324	0		=			
ANR	1326358	Identifier	i		1326324	0					
ANR	1326359	PrimaryExpression	0		1326324	1					
ANR	1326360	Condition	! symbol [ i ] . last	1855:13:53293:53307	1326324	1	True				
ANR	1326361	UnaryOperationExpression	! symbol [ i ] . last		1326324	0					
ANR	1326362	UnaryOperator	!		1326324	0					
ANR	1326363	MemberAccess	symbol [ i ] . last		1326324	1					
ANR	1326364	ArrayIndexing	symbol [ i ]		1326324	0					
ANR	1326365	Identifier	symbol		1326324	0					
ANR	1326366	Identifier	i		1326324	1					
ANR	1326367	Identifier	last		1326324	1					
ANR	1326368	PostIncDecOperationExpression	i ++	1855:30:53310:53312	1326324	2	True				
ANR	1326369	Identifier	i		1326324	0					
ANR	1326370	IncDec	++		1326324	1					
ANR	1326371	CompoundStatement		7:35:156:156	1326324	3					
ANR	1326372	IfStatement	"if ( ! strcmp ( symbol [ i ] . name , ""main"" ) )"		1326324	0					
ANR	1326373	Condition	"! strcmp ( symbol [ i ] . name , ""main"" )"	1856:6:53323:53354	1326324	0	True				
ANR	1326374	UnaryOperationExpression	"! strcmp ( symbol [ i ] . name , ""main"" )"		1326324	0					
ANR	1326375	UnaryOperator	!		1326324	0					
ANR	1326376	CallExpression	"strcmp ( symbol [ i ] . name , ""main"" )"		1326324	1					
ANR	1326377	Callee	strcmp		1326324	0					
ANR	1326378	Identifier	strcmp		1326324	0					
ANR	1326379	ArgumentList	symbol [ i ] . name		1326324	1					
ANR	1326380	Argument	symbol [ i ] . name		1326324	0					
ANR	1326381	MemberAccess	symbol [ i ] . name		1326324	0					
ANR	1326382	ArrayIndexing	symbol [ i ]		1326324	0					
ANR	1326383	Identifier	symbol		1326324	0					
ANR	1326384	Identifier	i		1326324	1					
ANR	1326385	Identifier	name		1326324	1					
ANR	1326386	Argument	"""main"""		1326324	1					
ANR	1326387	PrimaryExpression	"""main"""		1326324	0					
ANR	1326388	CompoundStatement		8:40:198:198	1326324	1					
ANR	1326389	ReturnStatement	return symbol [ i ] . offset ;	1857:3:53362:53385	1326324	0	True				
ANR	1326390	MemberAccess	symbol [ i ] . offset		1326324	0					
ANR	1326391	ArrayIndexing	symbol [ i ]		1326324	0					
ANR	1326392	Identifier	symbol		1326324	0					
ANR	1326393	Identifier	i		1326324	1					
ANR	1326394	Identifier	offset		1326324	1					
ANR	1326395	ReturnStatement	return UT64_MAX ;	1860:1:53395:53410	1326324	4	True				
ANR	1326396	Identifier	UT64_MAX		1326324	0					
ANR	1326397	ReturnType	static ut64		1326324	1					
ANR	1326398	Identifier	getmainsymbol		1326324	2					
ANR	1326399	ParameterList	ELFOBJ * bin		1326324	3					
ANR	1326400	Parameter	ELFOBJ * bin	1849:26:53145:53155	1326324	0	True				
ANR	1326401	ParameterType	ELFOBJ *		1326324	0					
ANR	1326402	Identifier	bin		1326324	1					
ANR	1326403	CFGEntryNode	ENTRY		1326324		True				
ANR	1326404	CFGExitNode	EXIT		1326324		True				
ANR	1326405	Symbol	Elf_		1326324						
ANR	1326406	Symbol	symbol [ i ] . last		1326324						
ANR	1326407	Symbol	strcmp		1326324						
ANR	1326408	Symbol	symbol		1326324						
ANR	1326409	Symbol	* i		1326324						
ANR	1326410	Symbol	symbol [ i ] . name		1326324						
ANR	1326411	Symbol	bin		1326324						
ANR	1326412	Symbol	i		1326324						
ANR	1326413	Symbol	r_bin_elf_get_symbols		1326324						
ANR	1326414	Symbol	UT64_MAX		1326324						
ANR	1326415	Symbol	* symbol		1326324						
ANR	1326416	Symbol	symbol [ i ] . offset		1326324						
ANR	1326417	Function	r_bin_elf_get_main_offset	1863:0:53415:58297							
ANR	1326418	FunctionDef	r_bin_elf_get_main_offset (ELFOBJ * bin)		1326417	0					
ANR	1326419	CompoundStatement		1863:50:53465:58297	1326417	0					
ANR	1326420	IdentifierDeclStatement	ut64 entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin ) ;	1864:1:53468:53519	1326417	0	True				
ANR	1326421	IdentifierDecl	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1326417	0					
ANR	1326422	IdentifierDeclType	ut64		1326417	0					
ANR	1326423	Identifier	entry		1326417	1					
ANR	1326424	AssignmentExpression	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1326417	2		=			
ANR	1326425	Identifier	entry		1326417	0					
ANR	1326426	CallExpression	Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1326417	1					
ANR	1326427	Callee	Elf_ ( r_bin_elf_get_entry_offset )		1326417	0					
ANR	1326428	CallExpression	Elf_ ( r_bin_elf_get_entry_offset )		1326417	0					
ANR	1326429	Callee	Elf_		1326417	0					
ANR	1326430	Identifier	Elf_		1326417	0					
ANR	1326431	ArgumentList	r_bin_elf_get_entry_offset		1326417	1					
ANR	1326432	Argument	r_bin_elf_get_entry_offset		1326417	0					
ANR	1326433	Identifier	r_bin_elf_get_entry_offset		1326417	0					
ANR	1326434	ArgumentList	bin		1326417	1					
ANR	1326435	Argument	bin		1326417	0					
ANR	1326436	Identifier	bin		1326417	0					
ANR	1326437	IdentifierDeclStatement	ut8 buf [ 256 ] ;	1865:1:53522:53534	1326417	1	True				
ANR	1326438	IdentifierDecl	buf [ 256 ]		1326417	0					
ANR	1326439	IdentifierDeclType	ut8 [ 256 ]		1326417	0					
ANR	1326440	Identifier	buf		1326417	1					
ANR	1326441	PrimaryExpression	256		1326417	2					
ANR	1326442	IfStatement	if ( ! bin || entry == UT64_MAX )		1326417	2					
ANR	1326443	Condition	! bin || entry == UT64_MAX	1866:5:53541:53565	1326417	0	True				
ANR	1326444	OrExpression	! bin || entry == UT64_MAX		1326417	0		||			
ANR	1326445	UnaryOperationExpression	! bin		1326417	0					
ANR	1326446	UnaryOperator	!		1326417	0					
ANR	1326447	Identifier	bin		1326417	1					
ANR	1326448	EqualityExpression	entry == UT64_MAX		1326417	1		==			
ANR	1326449	Identifier	entry		1326417	0					
ANR	1326450	Identifier	UT64_MAX		1326417	1					
ANR	1326451	CompoundStatement		4:32:102:102	1326417	1					
ANR	1326452	ReturnStatement	return UT64_MAX ;	1867:2:53572:53587	1326417	0	True				
ANR	1326453	Identifier	UT64_MAX		1326417	0					
ANR	1326454	IfStatement	if ( entry > bin -> size || ( entry + sizeof ( buf ) ) > bin -> size )		1326417	3					
ANR	1326455	Condition	entry > bin -> size || ( entry + sizeof ( buf ) ) > bin -> size	1869:5:53597:53651	1326417	0	True				
ANR	1326456	OrExpression	entry > bin -> size || ( entry + sizeof ( buf ) ) > bin -> size		1326417	0		||			
ANR	1326457	RelationalExpression	entry > bin -> size		1326417	0		>			
ANR	1326458	Identifier	entry		1326417	0					
ANR	1326459	PtrMemberAccess	bin -> size		1326417	1					
ANR	1326460	Identifier	bin		1326417	0					
ANR	1326461	Identifier	size		1326417	1					
ANR	1326462	RelationalExpression	( entry + sizeof ( buf ) ) > bin -> size		1326417	1		>			
ANR	1326463	AdditiveExpression	entry + sizeof ( buf )		1326417	0		+			
ANR	1326464	Identifier	entry		1326417	0					
ANR	1326465	SizeofExpression	sizeof ( buf )		1326417	1					
ANR	1326466	Sizeof	sizeof		1326417	0					
ANR	1326467	SizeofOperand	buf		1326417	1					
ANR	1326468	PtrMemberAccess	bin -> size		1326417	1					
ANR	1326469	Identifier	bin		1326417	0					
ANR	1326470	Identifier	size		1326417	1					
ANR	1326471	CompoundStatement		7:62:188:188	1326417	1					
ANR	1326472	ReturnStatement	return UT64_MAX ;	1870:2:53658:53673	1326417	0	True				
ANR	1326473	Identifier	UT64_MAX		1326417	0					
ANR	1326474	IfStatement	"if ( r_buf_read_at ( bin -> b , entry , buf , sizeof ( buf ) ) < 1 )"		1326417	4					
ANR	1326475	Condition	"r_buf_read_at ( bin -> b , entry , buf , sizeof ( buf ) ) < 1"	1873:5:53722:53773	1326417	0	True				
ANR	1326476	RelationalExpression	"r_buf_read_at ( bin -> b , entry , buf , sizeof ( buf ) ) < 1"		1326417	0		<			
ANR	1326477	CallExpression	"r_buf_read_at ( bin -> b , entry , buf , sizeof ( buf ) )"		1326417	0					
ANR	1326478	Callee	r_buf_read_at		1326417	0					
ANR	1326479	Identifier	r_buf_read_at		1326417	0					
ANR	1326480	ArgumentList	bin -> b		1326417	1					
ANR	1326481	Argument	bin -> b		1326417	0					
ANR	1326482	PtrMemberAccess	bin -> b		1326417	0					
ANR	1326483	Identifier	bin		1326417	0					
ANR	1326484	Identifier	b		1326417	1					
ANR	1326485	Argument	entry		1326417	1					
ANR	1326486	Identifier	entry		1326417	0					
ANR	1326487	Argument	buf		1326417	2					
ANR	1326488	Identifier	buf		1326417	0					
ANR	1326489	Argument	sizeof ( buf )		1326417	3					
ANR	1326490	SizeofExpression	sizeof ( buf )		1326417	0					
ANR	1326491	Sizeof	sizeof		1326417	0					
ANR	1326492	SizeofOperand	buf		1326417	1					
ANR	1326493	PrimaryExpression	1		1326417	1					
ANR	1326494	CompoundStatement		11:59:310:310	1326417	1					
ANR	1326495	ExpressionStatement	"bprintf ( ""read (main)\\n"" )"	1874:2:53780:53805	1326417	0	True				
ANR	1326496	CallExpression	"bprintf ( ""read (main)\\n"" )"		1326417	0					
ANR	1326497	Callee	bprintf		1326417	0					
ANR	1326498	Identifier	bprintf		1326417	0					
ANR	1326499	ArgumentList	"""read (main)\\n"""		1326417	1					
ANR	1326500	Argument	"""read (main)\\n"""		1326417	0					
ANR	1326501	PrimaryExpression	"""read (main)\\n"""		1326417	0					
ANR	1326502	ReturnStatement	return UT64_MAX ;	1875:2:53809:53824	1326417	1	True				
ANR	1326503	Identifier	UT64_MAX		1326417	0					
ANR	1326504	IfStatement	if ( buf [ 0x18 + 3 ] == 0x58 && buf [ 0x2f ] == 0x00 )		1326417	5					
ANR	1326505	Condition	buf [ 0x18 + 3 ] == 0x58 && buf [ 0x2f ] == 0x00	1878:5:53844:53883	1326417	0	True				
ANR	1326506	AndExpression	buf [ 0x18 + 3 ] == 0x58 && buf [ 0x2f ] == 0x00		1326417	0		&&			
ANR	1326507	EqualityExpression	buf [ 0x18 + 3 ] == 0x58		1326417	0		==			
ANR	1326508	ArrayIndexing	buf [ 0x18 + 3 ]		1326417	0					
ANR	1326509	Identifier	buf		1326417	0					
ANR	1326510	AdditiveExpression	0x18 + 3		1326417	1		+			
ANR	1326511	PrimaryExpression	0x18		1326417	0					
ANR	1326512	PrimaryExpression	3		1326417	1					
ANR	1326513	PrimaryExpression	0x58		1326417	1					
ANR	1326514	EqualityExpression	buf [ 0x2f ] == 0x00		1326417	1		==			
ANR	1326515	ArrayIndexing	buf [ 0x2f ]		1326417	0					
ANR	1326516	Identifier	buf		1326417	0					
ANR	1326517	PrimaryExpression	0x2f		1326417	1					
ANR	1326518	PrimaryExpression	0x00		1326417	1					
ANR	1326519	CompoundStatement		18:2:479:520	1326417	1					
ANR	1326520	IdentifierDeclStatement	"ut32 entry_vaddr = Elf_ ( r_bin_elf_p2v ) ( bin , entry ) ;"	1879:2:53890:53941	1326417	0	True				
ANR	1326521	IdentifierDecl	"entry_vaddr = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		1326417	0					
ANR	1326522	IdentifierDeclType	ut32		1326417	0					
ANR	1326523	Identifier	entry_vaddr		1326417	1					
ANR	1326524	AssignmentExpression	"entry_vaddr = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		1326417	2		=			
ANR	1326525	Identifier	entry_vaddr		1326417	0					
ANR	1326526	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		1326417	1					
ANR	1326527	Callee	Elf_ ( r_bin_elf_p2v )		1326417	0					
ANR	1326528	CallExpression	Elf_ ( r_bin_elf_p2v )		1326417	0					
ANR	1326529	Callee	Elf_		1326417	0					
ANR	1326530	Identifier	Elf_		1326417	0					
ANR	1326531	ArgumentList	r_bin_elf_p2v		1326417	1					
ANR	1326532	Argument	r_bin_elf_p2v		1326417	0					
ANR	1326533	Identifier	r_bin_elf_p2v		1326417	0					
ANR	1326534	ArgumentList	bin		1326417	1					
ANR	1326535	Argument	bin		1326417	0					
ANR	1326536	Identifier	bin		1326417	0					
ANR	1326537	Argument	entry		1326417	1					
ANR	1326538	Identifier	entry		1326417	0					
ANR	1326539	IdentifierDeclStatement	ut32 main_addr = r_read_le32 ( & buf [ 0x30 ] ) ;	1880:2:53945:53986	1326417	1	True				
ANR	1326540	IdentifierDecl	main_addr = r_read_le32 ( & buf [ 0x30 ] )		1326417	0					
ANR	1326541	IdentifierDeclType	ut32		1326417	0					
ANR	1326542	Identifier	main_addr		1326417	1					
ANR	1326543	AssignmentExpression	main_addr = r_read_le32 ( & buf [ 0x30 ] )		1326417	2		=			
ANR	1326544	Identifier	main_addr		1326417	0					
ANR	1326545	CallExpression	r_read_le32 ( & buf [ 0x30 ] )		1326417	1					
ANR	1326546	Callee	r_read_le32		1326417	0					
ANR	1326547	Identifier	r_read_le32		1326417	0					
ANR	1326548	ArgumentList	& buf [ 0x30 ]		1326417	1					
ANR	1326549	Argument	& buf [ 0x30 ]		1326417	0					
ANR	1326550	UnaryOperationExpression	& buf [ 0x30 ]		1326417	0					
ANR	1326551	UnaryOperator	&		1326417	0					
ANR	1326552	ArrayIndexing	buf [ 0x30 ]		1326417	1					
ANR	1326553	Identifier	buf		1326417	0					
ANR	1326554	PrimaryExpression	0x30		1326417	1					
ANR	1326555	IfStatement	if ( ( main_addr >> 16 ) == ( entry_vaddr >> 16 ) )		1326417	2					
ANR	1326556	Condition	( main_addr >> 16 ) == ( entry_vaddr >> 16 )	1881:6:53994:54033	1326417	0	True				
ANR	1326557	EqualityExpression	( main_addr >> 16 ) == ( entry_vaddr >> 16 )		1326417	0		==			
ANR	1326558	ShiftExpression	main_addr >> 16		1326417	0		>>			
ANR	1326559	Identifier	main_addr		1326417	0					
ANR	1326560	PrimaryExpression	16		1326417	1					
ANR	1326561	ShiftExpression	entry_vaddr >> 16		1326417	1		>>			
ANR	1326562	Identifier	entry_vaddr		1326417	0					
ANR	1326563	PrimaryExpression	16		1326417	1					
ANR	1326564	CompoundStatement		19:48:570:570	1326417	1					
ANR	1326565	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , main_addr ) ;"	1882:3:54041:54084	1326417	0	True				
ANR	1326566	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , main_addr )"		1326417	0					
ANR	1326567	Callee	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1326568	CallExpression	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1326569	Callee	Elf_		1326417	0					
ANR	1326570	Identifier	Elf_		1326417	0					
ANR	1326571	ArgumentList	r_bin_elf_v2p		1326417	1					
ANR	1326572	Argument	r_bin_elf_v2p		1326417	0					
ANR	1326573	Identifier	r_bin_elf_v2p		1326417	0					
ANR	1326574	ArgumentList	bin		1326417	1					
ANR	1326575	Argument	bin		1326417	0					
ANR	1326576	Identifier	bin		1326417	0					
ANR	1326577	Argument	main_addr		1326417	1					
ANR	1326578	Identifier	main_addr		1326417	0					
ANR	1326579	IfStatement	if ( entry & 1 )		1326417	6					
ANR	1326580	Condition	entry & 1	1889:5:54166:54174	1326417	0	True				
ANR	1326581	BitAndExpression	entry & 1		1326417	0		&			
ANR	1326582	Identifier	entry		1326417	0					
ANR	1326583	PrimaryExpression	1		1326417	1					
ANR	1326584	CompoundStatement		28:2:715:728	1326417	1					
ANR	1326585	IdentifierDeclStatement	int delta = 0 ;	1890:2:54181:54194	1326417	0	True				
ANR	1326586	IdentifierDecl	delta = 0		1326417	0					
ANR	1326587	IdentifierDeclType	int		1326417	0					
ANR	1326588	Identifier	delta		1326417	1					
ANR	1326589	AssignmentExpression	delta = 0		1326417	2		=			
ANR	1326590	Identifier	delta		1326417	0					
ANR	1326591	PrimaryExpression	0		1326417	1					
ANR	1326592	IfStatement	"if ( ! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"" , 11 ) )"		1326417	1					
ANR	1326593	Condition	"! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"" , 11 )"	1892:6:54229:54293	1326417	0	True				
ANR	1326594	UnaryOperationExpression	"! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"" , 11 )"		1326417	0					
ANR	1326595	UnaryOperator	!		1326417	0					
ANR	1326596	CallExpression	"memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"" , 11 )"		1326417	1					
ANR	1326597	Callee	memcmp		1326417	0					
ANR	1326598	Identifier	memcmp		1326417	0					
ANR	1326599	ArgumentList	buf		1326417	1					
ANR	1326600	Argument	buf		1326417	0					
ANR	1326601	Identifier	buf		1326417	0					
ANR	1326602	Argument	"""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"""		1326417	1					
ANR	1326603	PrimaryExpression	"""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"""		1326417	0					
ANR	1326604	Argument	11		1326417	2					
ANR	1326605	PrimaryExpression	11		1326417	0					
ANR	1326606	CompoundStatement		30:73:830:830	1326417	1					
ANR	1326607	ExpressionStatement	delta = 0x28	1894:3:54345:54357	1326417	0	True				
ANR	1326608	AssignmentExpression	delta = 0x28		1326417	0		=			
ANR	1326609	Identifier	delta		1326417	0					
ANR	1326610	PrimaryExpression	0x28		1326417	1					
ANR	1326611	ElseStatement	else		1326417	0					
ANR	1326612	IfStatement	"if ( ! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"" , 11 ) )"		1326417	0					
ANR	1326613	Condition	"! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"" , 11 )"	1895:13:54372:54436	1326417	0	True				
ANR	1326614	UnaryOperationExpression	"! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"" , 11 )"		1326417	0					
ANR	1326615	UnaryOperator	!		1326417	0					
ANR	1326616	CallExpression	"memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"" , 11 )"		1326417	1					
ANR	1326617	Callee	memcmp		1326417	0					
ANR	1326618	Identifier	memcmp		1326417	0					
ANR	1326619	ArgumentList	buf		1326417	1					
ANR	1326620	Argument	buf		1326417	0					
ANR	1326621	Identifier	buf		1326417	0					
ANR	1326622	Argument	"""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"""		1326417	1					
ANR	1326623	PrimaryExpression	"""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"""		1326417	0					
ANR	1326624	Argument	11		1326417	2					
ANR	1326625	PrimaryExpression	11		1326417	0					
ANR	1326626	CompoundStatement		33:80:973:973	1326417	1					
ANR	1326627	ExpressionStatement	delta = 0x30	1897:3:54495:54507	1326417	0	True				
ANR	1326628	AssignmentExpression	delta = 0x30		1326417	0		=			
ANR	1326629	Identifier	delta		1326417	0					
ANR	1326630	PrimaryExpression	0x30		1326417	1					
ANR	1326631	IfStatement	if ( delta )		1326417	2					
ANR	1326632	Condition	delta	1899:6:54519:54523	1326417	0	True				
ANR	1326633	Identifier	delta		1326417	0					
ANR	1326634	CompoundStatement		38:3:1065:1134	1326417	1					
ANR	1326635	IdentifierDeclStatement	"ut64 pa = Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ delta - 1 ] ) & ~1 ) ;"	1900:3:54531:54600	1326417	0	True				
ANR	1326636	IdentifierDecl	"pa = Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ delta - 1 ] ) & ~1 )"		1326417	0					
ANR	1326637	IdentifierDeclType	ut64		1326417	0					
ANR	1326638	Identifier	pa		1326417	1					
ANR	1326639	AssignmentExpression	"pa = Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ delta - 1 ] ) & ~1 )"		1326417	2		=			
ANR	1326640	Identifier	pa		1326417	0					
ANR	1326641	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ delta - 1 ] ) & ~1 )"		1326417	1					
ANR	1326642	Callee	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1326643	CallExpression	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1326644	Callee	Elf_		1326417	0					
ANR	1326645	Identifier	Elf_		1326417	0					
ANR	1326646	ArgumentList	r_bin_elf_v2p		1326417	1					
ANR	1326647	Argument	r_bin_elf_v2p		1326417	0					
ANR	1326648	Identifier	r_bin_elf_v2p		1326417	0					
ANR	1326649	ArgumentList	bin		1326417	1					
ANR	1326650	Argument	bin		1326417	0					
ANR	1326651	Identifier	bin		1326417	0					
ANR	1326652	Argument	r_read_le32 ( & buf [ delta - 1 ] ) & ~1		1326417	1					
ANR	1326653	BitAndExpression	r_read_le32 ( & buf [ delta - 1 ] ) & ~1		1326417	0		&			
ANR	1326654	CallExpression	r_read_le32 ( & buf [ delta - 1 ] )		1326417	0					
ANR	1326655	Callee	r_read_le32		1326417	0					
ANR	1326656	Identifier	r_read_le32		1326417	0					
ANR	1326657	ArgumentList	& buf [ delta - 1 ]		1326417	1					
ANR	1326658	Argument	& buf [ delta - 1 ]		1326417	0					
ANR	1326659	UnaryOperationExpression	& buf [ delta - 1 ]		1326417	0					
ANR	1326660	UnaryOperator	&		1326417	0					
ANR	1326661	ArrayIndexing	buf [ delta - 1 ]		1326417	1					
ANR	1326662	Identifier	buf		1326417	0					
ANR	1326663	AdditiveExpression	delta - 1		1326417	1		-			
ANR	1326664	Identifier	delta		1326417	0					
ANR	1326665	PrimaryExpression	1		1326417	1					
ANR	1326666	Identifier	~1		1326417	1					
ANR	1326667	IfStatement	if ( pa < r_buf_size ( bin -> b ) )		1326417	1					
ANR	1326668	Condition	pa < r_buf_size ( bin -> b )	1901:7:54609:54632	1326417	0	True				
ANR	1326669	RelationalExpression	pa < r_buf_size ( bin -> b )		1326417	0		<			
ANR	1326670	Identifier	pa		1326417	0					
ANR	1326671	CallExpression	r_buf_size ( bin -> b )		1326417	1					
ANR	1326672	Callee	r_buf_size		1326417	0					
ANR	1326673	Identifier	r_buf_size		1326417	0					
ANR	1326674	ArgumentList	bin -> b		1326417	1					
ANR	1326675	Argument	bin -> b		1326417	0					
ANR	1326676	PtrMemberAccess	bin -> b		1326417	0					
ANR	1326677	Identifier	bin		1326417	0					
ANR	1326678	Identifier	b		1326417	1					
ANR	1326679	CompoundStatement		39:33:1169:1169	1326417	1					
ANR	1326680	ReturnStatement	return pa ;	1902:4:54641:54650	1326417	0	True				
ANR	1326681	Identifier	pa		1326417	0					
ANR	1326682	ElseStatement	else		1326417	0					
ANR	1326683	CompoundStatement		43:8:1203:1203	1326417	0					
ANR	1326684	IfStatement	"if ( ! memcmp ( buf , ""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"" , 8 ) )"		1326417	0					
ANR	1326685	Condition	"! memcmp ( buf , ""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"" , 8 )"	1907:6:54708:54759	1326417	0	True				
ANR	1326686	UnaryOperationExpression	"! memcmp ( buf , ""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"" , 8 )"		1326417	0					
ANR	1326687	UnaryOperator	!		1326417	0					
ANR	1326688	CallExpression	"memcmp ( buf , ""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"" , 8 )"		1326417	1					
ANR	1326689	Callee	memcmp		1326417	0					
ANR	1326690	Identifier	memcmp		1326417	0					
ANR	1326691	ArgumentList	buf		1326417	1					
ANR	1326692	Argument	buf		1326417	0					
ANR	1326693	Identifier	buf		1326417	0					
ANR	1326694	Argument	"""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"""		1326417	1					
ANR	1326695	PrimaryExpression	"""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"""		1326417	0					
ANR	1326696	Argument	8		1326417	2					
ANR	1326697	PrimaryExpression	8		1326417	0					
ANR	1326698	CompoundStatement		45:60:1296:1296	1326417	1					
ANR	1326699	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0x34 ] ) & ~1 ) ;"	1908:3:54767:54830	1326417	0	True				
ANR	1326700	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0x34 ] ) & ~1 )"		1326417	0					
ANR	1326701	Callee	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1326702	CallExpression	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1326703	Callee	Elf_		1326417	0					
ANR	1326704	Identifier	Elf_		1326417	0					
ANR	1326705	ArgumentList	r_bin_elf_v2p		1326417	1					
ANR	1326706	Argument	r_bin_elf_v2p		1326417	0					
ANR	1326707	Identifier	r_bin_elf_v2p		1326417	0					
ANR	1326708	ArgumentList	bin		1326417	1					
ANR	1326709	Argument	bin		1326417	0					
ANR	1326710	Identifier	bin		1326417	0					
ANR	1326711	Argument	r_read_le32 ( & buf [ 0x34 ] ) & ~1		1326417	1					
ANR	1326712	BitAndExpression	r_read_le32 ( & buf [ 0x34 ] ) & ~1		1326417	0		&			
ANR	1326713	CallExpression	r_read_le32 ( & buf [ 0x34 ] )		1326417	0					
ANR	1326714	Callee	r_read_le32		1326417	0					
ANR	1326715	Identifier	r_read_le32		1326417	0					
ANR	1326716	ArgumentList	& buf [ 0x34 ]		1326417	1					
ANR	1326717	Argument	& buf [ 0x34 ]		1326417	0					
ANR	1326718	UnaryOperationExpression	& buf [ 0x34 ]		1326417	0					
ANR	1326719	UnaryOperator	&		1326417	0					
ANR	1326720	ArrayIndexing	buf [ 0x34 ]		1326417	1					
ANR	1326721	Identifier	buf		1326417	0					
ANR	1326722	PrimaryExpression	0x34		1326417	1					
ANR	1326723	Identifier	~1		1326417	1					
ANR	1326724	ElseStatement	else		1326417	0					
ANR	1326725	IfStatement	"if ( ! memcmp ( buf , ""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"" , 8 ) )"		1326417	0					
ANR	1326726	Condition	"! memcmp ( buf , ""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"" , 8 )"	1909:13:54845:54896	1326417	0	True				
ANR	1326727	UnaryOperationExpression	"! memcmp ( buf , ""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"" , 8 )"		1326417	0					
ANR	1326728	UnaryOperator	!		1326417	0					
ANR	1326729	CallExpression	"memcmp ( buf , ""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"" , 8 )"		1326417	1					
ANR	1326730	Callee	memcmp		1326417	0					
ANR	1326731	Identifier	memcmp		1326417	0					
ANR	1326732	ArgumentList	buf		1326417	1					
ANR	1326733	Argument	buf		1326417	0					
ANR	1326734	Identifier	buf		1326417	0					
ANR	1326735	Argument	"""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"""		1326417	1					
ANR	1326736	PrimaryExpression	"""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"""		1326417	0					
ANR	1326737	Argument	8		1326417	2					
ANR	1326738	PrimaryExpression	8		1326417	0					
ANR	1326739	CompoundStatement		47:67:1433:1433	1326417	1					
ANR	1326740	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0x30 ] ) & ~1 ) ;"	1910:3:54904:54967	1326417	0	True				
ANR	1326741	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0x30 ] ) & ~1 )"		1326417	0					
ANR	1326742	Callee	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1326743	CallExpression	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1326744	Callee	Elf_		1326417	0					
ANR	1326745	Identifier	Elf_		1326417	0					
ANR	1326746	ArgumentList	r_bin_elf_v2p		1326417	1					
ANR	1326747	Argument	r_bin_elf_v2p		1326417	0					
ANR	1326748	Identifier	r_bin_elf_v2p		1326417	0					
ANR	1326749	ArgumentList	bin		1326417	1					
ANR	1326750	Argument	bin		1326417	0					
ANR	1326751	Identifier	bin		1326417	0					
ANR	1326752	Argument	r_read_le32 ( & buf [ 0x30 ] ) & ~1		1326417	1					
ANR	1326753	BitAndExpression	r_read_le32 ( & buf [ 0x30 ] ) & ~1		1326417	0		&			
ANR	1326754	CallExpression	r_read_le32 ( & buf [ 0x30 ] )		1326417	0					
ANR	1326755	Callee	r_read_le32		1326417	0					
ANR	1326756	Identifier	r_read_le32		1326417	0					
ANR	1326757	ArgumentList	& buf [ 0x30 ]		1326417	1					
ANR	1326758	Argument	& buf [ 0x30 ]		1326417	0					
ANR	1326759	UnaryOperationExpression	& buf [ 0x30 ]		1326417	0					
ANR	1326760	UnaryOperator	&		1326417	0					
ANR	1326761	ArrayIndexing	buf [ 0x30 ]		1326417	1					
ANR	1326762	Identifier	buf		1326417	0					
ANR	1326763	PrimaryExpression	0x30		1326417	1					
ANR	1326764	Identifier	~1		1326417	1					
ANR	1326765	IfStatement	"if ( ! memcmp ( buf , ""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"" , 8 ) )"		1326417	7					
ANR	1326766	Condition	"! memcmp ( buf , ""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"" , 8 )"	1916:5:55040:55091	1326417	0	True				
ANR	1326767	UnaryOperationExpression	"! memcmp ( buf , ""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"" , 8 )"		1326417	0					
ANR	1326768	UnaryOperator	!		1326417	0					
ANR	1326769	CallExpression	"memcmp ( buf , ""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"" , 8 )"		1326417	1					
ANR	1326770	Callee	memcmp		1326417	0					
ANR	1326771	Identifier	memcmp		1326417	0					
ANR	1326772	ArgumentList	buf		1326417	1					
ANR	1326773	Argument	buf		1326417	0					
ANR	1326774	Identifier	buf		1326417	0					
ANR	1326775	Argument	"""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"""		1326417	1					
ANR	1326776	PrimaryExpression	"""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"""		1326417	0					
ANR	1326777	Argument	8		1326417	2					
ANR	1326778	PrimaryExpression	8		1326417	0					
ANR	1326779	CompoundStatement		65:2:1878:1893	1326417	1					
ANR	1326780	IdentifierDeclStatement	ut64 got_offset ;	1927:2:55344:55359	1326417	0	True				
ANR	1326781	IdentifierDecl	got_offset		1326417	0					
ANR	1326782	IdentifierDeclType	ut64		1326417	0					
ANR	1326783	Identifier	got_offset		1326417	1					
ANR	1326784	IfStatement	"if ( ( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" ) ) != - 1 || ( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" ) ) != - 1 )"		1326417	1					
ANR	1326785	Condition	"( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" ) ) != - 1 || ( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" ) ) != - 1"	1928:6:55367:55518	1326417	0	True				
ANR	1326786	OrExpression	"( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" ) ) != - 1 || ( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" ) ) != - 1"		1326417	0		||			
ANR	1326787	EqualityExpression	"( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" ) ) != - 1"		1326417	0		!=			
ANR	1326788	AssignmentExpression	"got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" )"		1326417	0		=			
ANR	1326789	Identifier	got_offset		1326417	0					
ANR	1326790	CallExpression	"Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" )"		1326417	1					
ANR	1326791	Callee	Elf_ ( r_bin_elf_get_section_offset )		1326417	0					
ANR	1326792	CallExpression	Elf_ ( r_bin_elf_get_section_offset )		1326417	0					
ANR	1326793	Callee	Elf_		1326417	0					
ANR	1326794	Identifier	Elf_		1326417	0					
ANR	1326795	ArgumentList	r_bin_elf_get_section_offset		1326417	1					
ANR	1326796	Argument	r_bin_elf_get_section_offset		1326417	0					
ANR	1326797	Identifier	r_bin_elf_get_section_offset		1326417	0					
ANR	1326798	ArgumentList	bin		1326417	1					
ANR	1326799	Argument	bin		1326417	0					
ANR	1326800	Identifier	bin		1326417	0					
ANR	1326801	Argument	""".got"""		1326417	1					
ANR	1326802	PrimaryExpression	""".got"""		1326417	0					
ANR	1326803	UnaryOperationExpression	- 1		1326417	1					
ANR	1326804	UnaryOperator	-		1326417	0					
ANR	1326805	PrimaryExpression	1		1326417	1					
ANR	1326806	EqualityExpression	"( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" ) ) != - 1"		1326417	1		!=			
ANR	1326807	AssignmentExpression	"got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" )"		1326417	0		=			
ANR	1326808	Identifier	got_offset		1326417	0					
ANR	1326809	CallExpression	"Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" )"		1326417	1					
ANR	1326810	Callee	Elf_ ( r_bin_elf_get_section_offset )		1326417	0					
ANR	1326811	CallExpression	Elf_ ( r_bin_elf_get_section_offset )		1326417	0					
ANR	1326812	Callee	Elf_		1326417	0					
ANR	1326813	Identifier	Elf_		1326417	0					
ANR	1326814	ArgumentList	r_bin_elf_get_section_offset		1326417	1					
ANR	1326815	Argument	r_bin_elf_get_section_offset		1326417	0					
ANR	1326816	Identifier	r_bin_elf_get_section_offset		1326417	0					
ANR	1326817	ArgumentList	bin		1326417	1					
ANR	1326818	Argument	bin		1326417	0					
ANR	1326819	Identifier	bin		1326417	0					
ANR	1326820	Argument	""".got.plt"""		1326417	1					
ANR	1326821	PrimaryExpression	""".got.plt"""		1326417	0					
ANR	1326822	UnaryOperationExpression	- 1		1326417	1					
ANR	1326823	UnaryOperator	-		1326417	0					
ANR	1326824	PrimaryExpression	1		1326417	1					
ANR	1326825	CompoundStatement		70:3:2102:2112	1326417	1					
ANR	1326826	IdentifierDeclStatement	const ut64 gp = got_offset + 0x7ff0 ;	1931:3:55528:55563	1326417	0	True				
ANR	1326827	IdentifierDecl	gp = got_offset + 0x7ff0		1326417	0					
ANR	1326828	IdentifierDeclType	const ut64		1326417	0					
ANR	1326829	Identifier	gp		1326417	1					
ANR	1326830	AssignmentExpression	gp = got_offset + 0x7ff0		1326417	2		=			
ANR	1326831	Identifier	gp		1326417	0					
ANR	1326832	AdditiveExpression	got_offset + 0x7ff0		1326417	1		+			
ANR	1326833	Identifier	got_offset		1326417	0					
ANR	1326834	PrimaryExpression	0x7ff0		1326417	1					
ANR	1326835	IdentifierDeclStatement	unsigned i ;	1932:3:55568:55578	1326417	1	True				
ANR	1326836	IdentifierDecl	i		1326417	0					
ANR	1326837	IdentifierDeclType	unsigned		1326417	0					
ANR	1326838	Identifier	i		1326417	1					
ANR	1326839	ForStatement	for ( i = 0 ; i < sizeof ( buf ) / sizeof ( buf [ 0 ] ) ; i += 4 )		1326417	2					
ANR	1326840	ForInit	i = 0 ;	1933:8:55588:55593	1326417	0	True				
ANR	1326841	AssignmentExpression	i = 0		1326417	0		=			
ANR	1326842	Identifier	i		1326417	0					
ANR	1326843	PrimaryExpression	0		1326417	1					
ANR	1326844	Condition	i < sizeof ( buf ) / sizeof ( buf [ 0 ] )	1933:15:55595:55626	1326417	1	True				
ANR	1326845	RelationalExpression	i < sizeof ( buf ) / sizeof ( buf [ 0 ] )		1326417	0		<			
ANR	1326846	Identifier	i		1326417	0					
ANR	1326847	MultiplicativeExpression	sizeof ( buf ) / sizeof ( buf [ 0 ] )		1326417	1		/			
ANR	1326848	SizeofExpression	sizeof ( buf )		1326417	0					
ANR	1326849	Sizeof	sizeof		1326417	0					
ANR	1326850	SizeofOperand	buf		1326417	1					
ANR	1326851	SizeofExpression	sizeof ( buf [ 0 ] )		1326417	1					
ANR	1326852	Sizeof	sizeof		1326417	0					
ANR	1326853	ArrayIndexing	buf [ 0 ]		1326417	1					
ANR	1326854	Identifier	buf		1326417	0					
ANR	1326855	PrimaryExpression	0		1326417	1					
ANR	1326856	AssignmentExpression	i += 4	1933:49:55629:55634	1326417	2	True	+=			
ANR	1326857	Identifier	i		1326417	0					
ANR	1326858	PrimaryExpression	4		1326417	1					
ANR	1326859	CompoundStatement		72:4:2177:2217	1326417	3					
ANR	1326860	IdentifierDeclStatement	const ut32 instr = r_read_le32 ( & buf [ i ] ) ;	1934:4:55643:55683	1326417	0	True				
ANR	1326861	IdentifierDecl	instr = r_read_le32 ( & buf [ i ] )		1326417	0					
ANR	1326862	IdentifierDeclType	const ut32		1326417	0					
ANR	1326863	Identifier	instr		1326417	1					
ANR	1326864	AssignmentExpression	instr = r_read_le32 ( & buf [ i ] )		1326417	2		=			
ANR	1326865	Identifier	instr		1326417	0					
ANR	1326866	CallExpression	r_read_le32 ( & buf [ i ] )		1326417	1					
ANR	1326867	Callee	r_read_le32		1326417	0					
ANR	1326868	Identifier	r_read_le32		1326417	0					
ANR	1326869	ArgumentList	& buf [ i ]		1326417	1					
ANR	1326870	Argument	& buf [ i ]		1326417	0					
ANR	1326871	UnaryOperationExpression	& buf [ i ]		1326417	0					
ANR	1326872	UnaryOperator	&		1326417	0					
ANR	1326873	ArrayIndexing	buf [ i ]		1326417	1					
ANR	1326874	Identifier	buf		1326417	0					
ANR	1326875	Identifier	i		1326417	1					
ANR	1326876	IfStatement	if ( ( instr & 0xffff0000 ) == 0x8f840000 )		1326417	1					
ANR	1326877	Condition	( instr & 0xffff0000 ) == 0x8f840000	1935:8:55693:55726	1326417	0	True				
ANR	1326878	EqualityExpression	( instr & 0xffff0000 ) == 0x8f840000		1326417	0		==			
ANR	1326879	BitAndExpression	instr & 0xffff0000		1326417	0		&			
ANR	1326880	Identifier	instr		1326417	0					
ANR	1326881	PrimaryExpression	0xffff0000		1326417	1					
ANR	1326882	PrimaryExpression	0x8f840000		1326417	1					
ANR	1326883	CompoundStatement		74:5:2291:2329	1326417	1					
ANR	1326884	IdentifierDeclStatement	const short delta = instr & 0x0000ffff ;	1936:5:55757:55795	1326417	0	True				
ANR	1326885	IdentifierDecl	delta = instr & 0x0000ffff		1326417	0					
ANR	1326886	IdentifierDeclType	const short		1326417	0					
ANR	1326887	Identifier	delta		1326417	1					
ANR	1326888	AssignmentExpression	delta = instr & 0x0000ffff		1326417	2		=			
ANR	1326889	Identifier	delta		1326417	0					
ANR	1326890	BitAndExpression	instr & 0x0000ffff		1326417	1		&			
ANR	1326891	Identifier	instr		1326417	0					
ANR	1326892	PrimaryExpression	0x0000ffff		1326417	1					
ANR	1326893	ExpressionStatement	"r_buf_read_at ( bin -> b , gp + delta , buf , 4 )"	1937:5:55802:55869	1326417	1	True				
ANR	1326894	CallExpression	"r_buf_read_at ( bin -> b , gp + delta , buf , 4 )"		1326417	0					
ANR	1326895	Callee	r_buf_read_at		1326417	0					
ANR	1326896	Identifier	r_buf_read_at		1326417	0					
ANR	1326897	ArgumentList	bin -> b		1326417	1					
ANR	1326898	Argument	bin -> b		1326417	0					
ANR	1326899	PtrMemberAccess	bin -> b		1326417	0					
ANR	1326900	Identifier	bin		1326417	0					
ANR	1326901	Identifier	b		1326417	1					
ANR	1326902	Argument	gp + delta		1326417	1					
ANR	1326903	AdditiveExpression	gp + delta		1326417	0		+			
ANR	1326904	Identifier	gp		1326417	0					
ANR	1326905	Identifier	delta		1326417	1					
ANR	1326906	Argument	buf		1326417	2					
ANR	1326907	Identifier	buf		1326417	0					
ANR	1326908	Argument	4		1326417	3					
ANR	1326909	PrimaryExpression	4		1326417	0					
ANR	1326910	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0 ] ) ) ;"	1938:5:55876:55931	1326417	2	True				
ANR	1326911	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0 ] ) )"		1326417	0					
ANR	1326912	Callee	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1326913	CallExpression	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1326914	Callee	Elf_		1326417	0					
ANR	1326915	Identifier	Elf_		1326417	0					
ANR	1326916	ArgumentList	r_bin_elf_v2p		1326417	1					
ANR	1326917	Argument	r_bin_elf_v2p		1326417	0					
ANR	1326918	Identifier	r_bin_elf_v2p		1326417	0					
ANR	1326919	ArgumentList	bin		1326417	1					
ANR	1326920	Argument	bin		1326417	0					
ANR	1326921	Identifier	bin		1326417	0					
ANR	1326922	Argument	r_read_le32 ( & buf [ 0 ] )		1326417	1					
ANR	1326923	CallExpression	r_read_le32 ( & buf [ 0 ] )		1326417	0					
ANR	1326924	Callee	r_read_le32		1326417	0					
ANR	1326925	Identifier	r_read_le32		1326417	0					
ANR	1326926	ArgumentList	& buf [ 0 ]		1326417	1					
ANR	1326927	Argument	& buf [ 0 ]		1326417	0					
ANR	1326928	UnaryOperationExpression	& buf [ 0 ]		1326417	0					
ANR	1326929	UnaryOperator	&		1326417	0					
ANR	1326930	ArrayIndexing	buf [ 0 ]		1326417	1					
ANR	1326931	Identifier	buf		1326417	0					
ANR	1326932	PrimaryExpression	0		1326417	1					
ANR	1326933	ReturnStatement	return 0 ;	1943:2:55951:55959	1326417	2	True				
ANR	1326934	PrimaryExpression	0		1326417	0					
ANR	1326935	IfStatement	"if ( buf [ 0 ] == 0xe8 && ! memcmp ( buf + 5 , ""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"" , 12 ) )"		1326417	8					
ANR	1326936	Condition	"buf [ 0 ] == 0xe8 && ! memcmp ( buf + 5 , ""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"" , 12 )"	1946:5:55981:56071	1326417	0	True				
ANR	1326937	AndExpression	"buf [ 0 ] == 0xe8 && ! memcmp ( buf + 5 , ""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"" , 12 )"		1326417	0		&&			
ANR	1326938	EqualityExpression	buf [ 0 ] == 0xe8		1326417	0		==			
ANR	1326939	ArrayIndexing	buf [ 0 ]		1326417	0					
ANR	1326940	Identifier	buf		1326417	0					
ANR	1326941	PrimaryExpression	0		1326417	1					
ANR	1326942	PrimaryExpression	0xe8		1326417	1					
ANR	1326943	UnaryOperationExpression	"! memcmp ( buf + 5 , ""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"" , 12 )"		1326417	1					
ANR	1326944	UnaryOperator	!		1326417	0					
ANR	1326945	CallExpression	"memcmp ( buf + 5 , ""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"" , 12 )"		1326417	1					
ANR	1326946	Callee	memcmp		1326417	0					
ANR	1326947	Identifier	memcmp		1326417	0					
ANR	1326948	ArgumentList	buf + 5		1326417	1					
ANR	1326949	Argument	buf + 5		1326417	0					
ANR	1326950	AdditiveExpression	buf + 5		1326417	0		+			
ANR	1326951	Identifier	buf		1326417	0					
ANR	1326952	PrimaryExpression	5		1326417	1					
ANR	1326953	Argument	"""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"""		1326417	1					
ANR	1326954	PrimaryExpression	"""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"""		1326417	0					
ANR	1326955	Argument	12		1326417	2					
ANR	1326956	PrimaryExpression	12		1326417	0					
ANR	1326957	CompoundStatement		87:2:2729:2786	1326417	1					
ANR	1326958	IdentifierDeclStatement	size_t SIZEOF_CALL = 5 ;	1947:2:56078:56100	1326417	0	True				
ANR	1326959	IdentifierDecl	SIZEOF_CALL = 5		1326417	0					
ANR	1326960	IdentifierDeclType	size_t		1326417	0					
ANR	1326961	Identifier	SIZEOF_CALL		1326417	1					
ANR	1326962	AssignmentExpression	SIZEOF_CALL = 5		1326417	2		=			
ANR	1326963	Identifier	SIZEOF_CALL		1326417	0					
ANR	1326964	PrimaryExpression	5		1326417	1					
ANR	1326965	IdentifierDeclStatement	ut64 rel_addr = ( ut64 ) ( ( int ) ( buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 ) ) ) ;	1948:2:56104:56191	1326417	1	True				
ANR	1326966	IdentifierDecl	rel_addr = ( ut64 ) ( ( int ) ( buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 ) ) )		1326417	0					
ANR	1326967	IdentifierDeclType	ut64		1326417	0					
ANR	1326968	Identifier	rel_addr		1326417	1					
ANR	1326969	AssignmentExpression	rel_addr = ( ut64 ) ( ( int ) ( buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 ) ) )		1326417	2		=			
ANR	1326970	Identifier	rel_addr		1326417	0					
ANR	1326971	CastExpression	( ut64 ) ( ( int ) ( buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 ) ) )		1326417	1					
ANR	1326972	CastTarget	ut64		1326417	0					
ANR	1326973	CastExpression	( int ) ( buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 ) )		1326417	1					
ANR	1326974	CastTarget	int		1326417	0					
ANR	1326975	AdditiveExpression	buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 )		1326417	1		+			
ANR	1326976	ArrayIndexing	buf [ 1 ]		1326417	0					
ANR	1326977	Identifier	buf		1326417	0					
ANR	1326978	PrimaryExpression	1		1326417	1					
ANR	1326979	AdditiveExpression	( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 )		1326417	1		+			
ANR	1326980	ShiftExpression	buf [ 2 ] << 8		1326417	0		<<			
ANR	1326981	ArrayIndexing	buf [ 2 ]		1326417	0					
ANR	1326982	Identifier	buf		1326417	0					
ANR	1326983	PrimaryExpression	2		1326417	1					
ANR	1326984	PrimaryExpression	8		1326417	1					
ANR	1326985	AdditiveExpression	( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 )		1326417	1		+			
ANR	1326986	ShiftExpression	buf [ 3 ] << 16		1326417	0		<<			
ANR	1326987	ArrayIndexing	buf [ 3 ]		1326417	0					
ANR	1326988	Identifier	buf		1326417	0					
ANR	1326989	PrimaryExpression	3		1326417	1					
ANR	1326990	PrimaryExpression	16		1326417	1					
ANR	1326991	ShiftExpression	buf [ 4 ] << 24		1326417	1		<<			
ANR	1326992	ArrayIndexing	buf [ 4 ]		1326417	0					
ANR	1326993	Identifier	buf		1326417	0					
ANR	1326994	PrimaryExpression	4		1326417	1					
ANR	1326995	PrimaryExpression	24		1326417	1					
ANR	1326996	IdentifierDeclStatement	"ut64 addr = Elf_ ( r_bin_elf_p2v ) ( bin , entry + SIZEOF_CALL ) ;"	1949:2:56195:56252	1326417	2	True				
ANR	1326997	IdentifierDecl	"addr = Elf_ ( r_bin_elf_p2v ) ( bin , entry + SIZEOF_CALL )"		1326417	0					
ANR	1326998	IdentifierDeclType	ut64		1326417	0					
ANR	1326999	Identifier	addr		1326417	1					
ANR	1327000	AssignmentExpression	"addr = Elf_ ( r_bin_elf_p2v ) ( bin , entry + SIZEOF_CALL )"		1326417	2		=			
ANR	1327001	Identifier	addr		1326417	0					
ANR	1327002	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , entry + SIZEOF_CALL )"		1326417	1					
ANR	1327003	Callee	Elf_ ( r_bin_elf_p2v )		1326417	0					
ANR	1327004	CallExpression	Elf_ ( r_bin_elf_p2v )		1326417	0					
ANR	1327005	Callee	Elf_		1326417	0					
ANR	1327006	Identifier	Elf_		1326417	0					
ANR	1327007	ArgumentList	r_bin_elf_p2v		1326417	1					
ANR	1327008	Argument	r_bin_elf_p2v		1326417	0					
ANR	1327009	Identifier	r_bin_elf_p2v		1326417	0					
ANR	1327010	ArgumentList	bin		1326417	1					
ANR	1327011	Argument	bin		1326417	0					
ANR	1327012	Identifier	bin		1326417	0					
ANR	1327013	Argument	entry + SIZEOF_CALL		1326417	1					
ANR	1327014	AdditiveExpression	entry + SIZEOF_CALL		1326417	0		+			
ANR	1327015	Identifier	entry		1326417	0					
ANR	1327016	Identifier	SIZEOF_CALL		1326417	1					
ANR	1327017	ExpressionStatement	addr += rel_addr	1950:2:56256:56272	1326417	3	True				
ANR	1327018	AssignmentExpression	addr += rel_addr		1326417	0		+=			
ANR	1327019	Identifier	addr		1326417	0					
ANR	1327020	Identifier	rel_addr		1326417	1					
ANR	1327021	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , addr ) ;"	1951:2:56276:56314	1326417	4	True				
ANR	1327022	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , addr )"		1326417	0					
ANR	1327023	Callee	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1327024	CallExpression	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1327025	Callee	Elf_		1326417	0					
ANR	1327026	Identifier	Elf_		1326417	0					
ANR	1327027	ArgumentList	r_bin_elf_v2p		1326417	1					
ANR	1327028	Argument	r_bin_elf_v2p		1326417	0					
ANR	1327029	Identifier	r_bin_elf_v2p		1326417	0					
ANR	1327030	ArgumentList	bin		1326417	1					
ANR	1327031	Argument	bin		1326417	0					
ANR	1327032	Identifier	bin		1326417	0					
ANR	1327033	Argument	addr		1326417	1					
ANR	1327034	Identifier	addr		1326417	0					
ANR	1327035	IfStatement	if ( buf [ 0x00 ] == 0x48 && buf [ 0x1e ] == 0x8d && buf [ 0x11 ] == 0xe8 )		1326417	9					
ANR	1327036	Condition	buf [ 0x00 ] == 0x48 && buf [ 0x1e ] == 0x8d && buf [ 0x11 ] == 0xe8	1954:5:56336:56394	1326417	0	True				
ANR	1327037	AndExpression	buf [ 0x00 ] == 0x48 && buf [ 0x1e ] == 0x8d && buf [ 0x11 ] == 0xe8		1326417	0		&&			
ANR	1327038	EqualityExpression	buf [ 0x00 ] == 0x48		1326417	0		==			
ANR	1327039	ArrayIndexing	buf [ 0x00 ]		1326417	0					
ANR	1327040	Identifier	buf		1326417	0					
ANR	1327041	PrimaryExpression	0x00		1326417	1					
ANR	1327042	PrimaryExpression	0x48		1326417	1					
ANR	1327043	AndExpression	buf [ 0x1e ] == 0x8d && buf [ 0x11 ] == 0xe8		1326417	1		&&			
ANR	1327044	EqualityExpression	buf [ 0x1e ] == 0x8d		1326417	0		==			
ANR	1327045	ArrayIndexing	buf [ 0x1e ]		1326417	0					
ANR	1327046	Identifier	buf		1326417	0					
ANR	1327047	PrimaryExpression	0x1e		1326417	1					
ANR	1327048	PrimaryExpression	0x8d		1326417	1					
ANR	1327049	EqualityExpression	buf [ 0x11 ] == 0xe8		1326417	1		==			
ANR	1327050	ArrayIndexing	buf [ 0x11 ]		1326417	0					
ANR	1327051	Identifier	buf		1326417	0					
ANR	1327052	PrimaryExpression	0x11		1326417	1					
ANR	1327053	PrimaryExpression	0xe8		1326417	1					
ANR	1327054	CompoundStatement		95:2:3028:3074	1326417	1					
ANR	1327055	IdentifierDeclStatement	ut32 * pmain = ( ut32 * ) ( buf + 0x30 ) ;	1955:2:56401:56434	1326417	0	True				
ANR	1327056	IdentifierDecl	* pmain = ( ut32 * ) ( buf + 0x30 )		1326417	0					
ANR	1327057	IdentifierDeclType	ut32 *		1326417	0					
ANR	1327058	Identifier	pmain		1326417	1					
ANR	1327059	AssignmentExpression	* pmain = ( ut32 * ) ( buf + 0x30 )		1326417	2		=			
ANR	1327060	Identifier	pmain		1326417	0					
ANR	1327061	CastExpression	( ut32 * ) ( buf + 0x30 )		1326417	1					
ANR	1327062	CastTarget	ut32 *		1326417	0					
ANR	1327063	AdditiveExpression	buf + 0x30		1326417	1		+			
ANR	1327064	Identifier	buf		1326417	0					
ANR	1327065	PrimaryExpression	0x30		1326417	1					
ANR	1327066	IdentifierDeclStatement	"ut64 vmain = Elf_ ( r_bin_elf_p2v ) ( bin , ( ut64 ) * pmain ) ;"	1956:2:56438:56490	1326417	1	True				
ANR	1327067	IdentifierDecl	"vmain = Elf_ ( r_bin_elf_p2v ) ( bin , ( ut64 ) * pmain )"		1326417	0					
ANR	1327068	IdentifierDeclType	ut64		1326417	0					
ANR	1327069	Identifier	vmain		1326417	1					
ANR	1327070	AssignmentExpression	"vmain = Elf_ ( r_bin_elf_p2v ) ( bin , ( ut64 ) * pmain )"		1326417	2		=			
ANR	1327071	Identifier	vmain		1326417	0					
ANR	1327072	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , ( ut64 ) * pmain )"		1326417	1					
ANR	1327073	Callee	Elf_ ( r_bin_elf_p2v )		1326417	0					
ANR	1327074	CallExpression	Elf_ ( r_bin_elf_p2v )		1326417	0					
ANR	1327075	Callee	Elf_		1326417	0					
ANR	1327076	Identifier	Elf_		1326417	0					
ANR	1327077	ArgumentList	r_bin_elf_p2v		1326417	1					
ANR	1327078	Argument	r_bin_elf_p2v		1326417	0					
ANR	1327079	Identifier	r_bin_elf_p2v		1326417	0					
ANR	1327080	ArgumentList	bin		1326417	1					
ANR	1327081	Argument	bin		1326417	0					
ANR	1327082	Identifier	bin		1326417	0					
ANR	1327083	Argument	( ut64 ) * pmain		1326417	1					
ANR	1327084	CastExpression	( ut64 ) * pmain		1326417	0					
ANR	1327085	CastTarget	ut64		1326417	0					
ANR	1327086	UnaryOperationExpression	* pmain		1326417	1					
ANR	1327087	UnaryOperator	*		1326417	0					
ANR	1327088	Identifier	pmain		1326417	1					
ANR	1327089	IdentifierDeclStatement	"ut64 ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry ) ;"	1957:2:56494:56540	1326417	2	True				
ANR	1327090	IdentifierDecl	"ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		1326417	0					
ANR	1327091	IdentifierDeclType	ut64		1326417	0					
ANR	1327092	Identifier	ventry		1326417	1					
ANR	1327093	AssignmentExpression	"ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		1326417	2		=			
ANR	1327094	Identifier	ventry		1326417	0					
ANR	1327095	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		1326417	1					
ANR	1327096	Callee	Elf_ ( r_bin_elf_p2v )		1326417	0					
ANR	1327097	CallExpression	Elf_ ( r_bin_elf_p2v )		1326417	0					
ANR	1327098	Callee	Elf_		1326417	0					
ANR	1327099	Identifier	Elf_		1326417	0					
ANR	1327100	ArgumentList	r_bin_elf_p2v		1326417	1					
ANR	1327101	Argument	r_bin_elf_p2v		1326417	0					
ANR	1327102	Identifier	r_bin_elf_p2v		1326417	0					
ANR	1327103	ArgumentList	bin		1326417	1					
ANR	1327104	Argument	bin		1326417	0					
ANR	1327105	Identifier	bin		1326417	0					
ANR	1327106	Argument	entry		1326417	1					
ANR	1327107	Identifier	entry		1326417	0					
ANR	1327108	IfStatement	if ( vmain >> 16 == ventry >> 16 )		1326417	3					
ANR	1327109	Condition	vmain >> 16 == ventry >> 16	1958:6:56548:56574	1326417	0	True				
ANR	1327110	EqualityExpression	vmain >> 16 == ventry >> 16		1326417	0		==			
ANR	1327111	ShiftExpression	vmain >> 16		1326417	0		>>			
ANR	1327112	Identifier	vmain		1326417	0					
ANR	1327113	PrimaryExpression	16		1326417	1					
ANR	1327114	ShiftExpression	ventry >> 16		1326417	1		>>			
ANR	1327115	Identifier	ventry		1326417	0					
ANR	1327116	PrimaryExpression	16		1326417	1					
ANR	1327117	CompoundStatement		96:35:3111:3111	1326417	1					
ANR	1327118	ReturnStatement	return ( ut64 ) vmain ;	1959:3:56582:56600	1326417	0	True				
ANR	1327119	CastExpression	( ut64 ) vmain		1326417	0					
ANR	1327120	CastTarget	ut64		1326417	0					
ANR	1327121	Identifier	vmain		1326417	1					
ANR	1327122	IfStatement	if ( buf [ 0x1d ] == 0x48 && buf [ 0x1e ] == 0x8b )		1326417	10					
ANR	1327123	Condition	buf [ 0x1d ] == 0x48 && buf [ 0x1e ] == 0x8b	1963:5:56626:56663	1326417	0	True				
ANR	1327124	AndExpression	buf [ 0x1d ] == 0x48 && buf [ 0x1e ] == 0x8b		1326417	0		&&			
ANR	1327125	EqualityExpression	buf [ 0x1d ] == 0x48		1326417	0		==			
ANR	1327126	ArrayIndexing	buf [ 0x1d ]		1326417	0					
ANR	1327127	Identifier	buf		1326417	0					
ANR	1327128	PrimaryExpression	0x1d		1326417	1					
ANR	1327129	PrimaryExpression	0x48		1326417	1					
ANR	1327130	EqualityExpression	buf [ 0x1e ] == 0x8b		1326417	1		==			
ANR	1327131	ArrayIndexing	buf [ 0x1e ]		1326417	0					
ANR	1327132	Identifier	buf		1326417	0					
ANR	1327133	PrimaryExpression	0x1e		1326417	1					
ANR	1327134	PrimaryExpression	0x8b		1326417	1					
ANR	1327135	CompoundStatement		101:45:3200:3200	1326417	1					
ANR	1327136	IfStatement	"if ( ! memcmp ( buf , ""\\x31\\xed\\x49\\x89"" , 4 ) )"		1326417	0					
ANR	1327137	Condition	"! memcmp ( buf , ""\\x31\\xed\\x49\\x89"" , 4 )"	1964:6:56674:56709	1326417	0	True				
ANR	1327138	UnaryOperationExpression	"! memcmp ( buf , ""\\x31\\xed\\x49\\x89"" , 4 )"		1326417	0					
ANR	1327139	UnaryOperator	!		1326417	0					
ANR	1327140	CallExpression	"memcmp ( buf , ""\\x31\\xed\\x49\\x89"" , 4 )"		1326417	1					
ANR	1327141	Callee	memcmp		1326417	0					
ANR	1327142	Identifier	memcmp		1326417	0					
ANR	1327143	ArgumentList	buf		1326417	1					
ANR	1327144	Argument	buf		1326417	0					
ANR	1327145	Identifier	buf		1326417	0					
ANR	1327146	Argument	"""\\x31\\xed\\x49\\x89"""		1326417	1					
ANR	1327147	PrimaryExpression	"""\\x31\\xed\\x49\\x89"""		1326417	0					
ANR	1327148	Argument	4		1326417	2					
ANR	1327149	PrimaryExpression	4		1326417	0					
ANR	1327150	CompoundStatement		104:3:3281:3310	1326417	1					
ANR	1327151	IdentifierDeclStatement	"ut64 maddr , baddr ;"	1965:3:56725:56742	1326417	0	True				
ANR	1327152	IdentifierDecl	maddr		1326417	0					
ANR	1327153	IdentifierDeclType	ut64		1326417	0					
ANR	1327154	Identifier	maddr		1326417	1					
ANR	1327155	IdentifierDecl	baddr		1326417	1					
ANR	1327156	IdentifierDeclType	ut64		1326417	0					
ANR	1327157	Identifier	baddr		1326417	1					
ANR	1327158	IdentifierDeclStatement	ut8 n32s [ sizeof ( ut32 ) ] = { 0 } ;	1966:3:56747:56776	1326417	1	True				
ANR	1327159	IdentifierDecl	n32s [ sizeof ( ut32 ) ] = { 0 }		1326417	0					
ANR	1327160	IdentifierDeclType	ut8 [ sizeof ( ut32 ) ]		1326417	0					
ANR	1327161	Identifier	n32s		1326417	1					
ANR	1327162	SizeofExpression	sizeof ( ut32 )		1326417	2					
ANR	1327163	Sizeof	sizeof		1326417	0					
ANR	1327164	SizeofOperand	ut32		1326417	1					
ANR	1327165	AssignmentExpression	n32s [ sizeof ( ut32 ) ] = { 0 }		1326417	3		=			
ANR	1327166	Identifier	n32s		1326417	0					
ANR	1327167	InitializerList	0		1326417	1					
ANR	1327168	PrimaryExpression	0		1326417	0					
ANR	1327169	ExpressionStatement	maddr = entry + 0x24 + r_read_le32 ( buf + 0x20 )	1967:3:56781:56828	1326417	2	True				
ANR	1327170	AssignmentExpression	maddr = entry + 0x24 + r_read_le32 ( buf + 0x20 )		1326417	0		=			
ANR	1327171	Identifier	maddr		1326417	0					
ANR	1327172	AdditiveExpression	entry + 0x24 + r_read_le32 ( buf + 0x20 )		1326417	1		+			
ANR	1327173	Identifier	entry		1326417	0					
ANR	1327174	AdditiveExpression	0x24 + r_read_le32 ( buf + 0x20 )		1326417	1		+			
ANR	1327175	PrimaryExpression	0x24		1326417	0					
ANR	1327176	CallExpression	r_read_le32 ( buf + 0x20 )		1326417	1					
ANR	1327177	Callee	r_read_le32		1326417	0					
ANR	1327178	Identifier	r_read_le32		1326417	0					
ANR	1327179	ArgumentList	buf + 0x20		1326417	1					
ANR	1327180	Argument	buf + 0x20		1326417	0					
ANR	1327181	AdditiveExpression	buf + 0x20		1326417	0		+			
ANR	1327182	Identifier	buf		1326417	0					
ANR	1327183	PrimaryExpression	0x20		1326417	1					
ANR	1327184	IfStatement	"if ( r_buf_read_at ( bin -> b , maddr , n32s , sizeof ( ut32 ) ) == - 1 )"		1326417	3					
ANR	1327185	Condition	"r_buf_read_at ( bin -> b , maddr , n32s , sizeof ( ut32 ) ) == - 1"	1968:7:56837:56892	1326417	0	True				
ANR	1327186	EqualityExpression	"r_buf_read_at ( bin -> b , maddr , n32s , sizeof ( ut32 ) ) == - 1"		1326417	0		==			
ANR	1327187	CallExpression	"r_buf_read_at ( bin -> b , maddr , n32s , sizeof ( ut32 ) )"		1326417	0					
ANR	1327188	Callee	r_buf_read_at		1326417	0					
ANR	1327189	Identifier	r_buf_read_at		1326417	0					
ANR	1327190	ArgumentList	bin -> b		1326417	1					
ANR	1327191	Argument	bin -> b		1326417	0					
ANR	1327192	PtrMemberAccess	bin -> b		1326417	0					
ANR	1327193	Identifier	bin		1326417	0					
ANR	1327194	Identifier	b		1326417	1					
ANR	1327195	Argument	maddr		1326417	1					
ANR	1327196	Identifier	maddr		1326417	0					
ANR	1327197	Argument	n32s		1326417	2					
ANR	1327198	Identifier	n32s		1326417	0					
ANR	1327199	Argument	sizeof ( ut32 )		1326417	3					
ANR	1327200	SizeofExpression	sizeof ( ut32 )		1326417	0					
ANR	1327201	Sizeof	sizeof		1326417	0					
ANR	1327202	SizeofOperand	ut32		1326417	1					
ANR	1327203	UnaryOperationExpression	- 1		1326417	1					
ANR	1327204	UnaryOperator	-		1326417	0					
ANR	1327205	PrimaryExpression	1		1326417	1					
ANR	1327206	CompoundStatement		106:65:3429:3429	1326417	1					
ANR	1327207	ExpressionStatement	"bprintf ( ""read (maddr) 2\\n"" )"	1969:4:56901:56929	1326417	0	True				
ANR	1327208	CallExpression	"bprintf ( ""read (maddr) 2\\n"" )"		1326417	0					
ANR	1327209	Callee	bprintf		1326417	0					
ANR	1327210	Identifier	bprintf		1326417	0					
ANR	1327211	ArgumentList	"""read (maddr) 2\\n"""		1326417	1					
ANR	1327212	Argument	"""read (maddr) 2\\n"""		1326417	0					
ANR	1327213	PrimaryExpression	"""read (maddr) 2\\n"""		1326417	0					
ANR	1327214	ReturnStatement	return 0 ;	1970:4:56935:56943	1326417	1	True				
ANR	1327215	PrimaryExpression	0		1326417	0					
ANR	1327216	ExpressionStatement	maddr = ( ut64 ) r_read_le32 ( & n32s [ 0 ] )	1972:3:56953:56989	1326417	4	True				
ANR	1327217	AssignmentExpression	maddr = ( ut64 ) r_read_le32 ( & n32s [ 0 ] )		1326417	0		=			
ANR	1327218	Identifier	maddr		1326417	0					
ANR	1327219	CastExpression	( ut64 ) r_read_le32 ( & n32s [ 0 ] )		1326417	1					
ANR	1327220	CastTarget	ut64		1326417	0					
ANR	1327221	CallExpression	r_read_le32 ( & n32s [ 0 ] )		1326417	1					
ANR	1327222	Callee	r_read_le32		1326417	0					
ANR	1327223	Identifier	r_read_le32		1326417	0					
ANR	1327224	ArgumentList	& n32s [ 0 ]		1326417	1					
ANR	1327225	Argument	& n32s [ 0 ]		1326417	0					
ANR	1327226	UnaryOperationExpression	& n32s [ 0 ]		1326417	0					
ANR	1327227	UnaryOperator	&		1326417	0					
ANR	1327228	ArrayIndexing	n32s [ 0 ]		1326417	1					
ANR	1327229	Identifier	n32s		1326417	0					
ANR	1327230	PrimaryExpression	0		1326417	1					
ANR	1327231	ExpressionStatement	baddr = ( bin -> ehdr . e_entry >> 16 ) << 16	1973:3:56994:57033	1326417	5	True				
ANR	1327232	AssignmentExpression	baddr = ( bin -> ehdr . e_entry >> 16 ) << 16		1326417	0		=			
ANR	1327233	Identifier	baddr		1326417	0					
ANR	1327234	ShiftExpression	( bin -> ehdr . e_entry >> 16 ) << 16		1326417	1		<<			
ANR	1327235	ShiftExpression	bin -> ehdr . e_entry >> 16		1326417	0		>>			
ANR	1327236	MemberAccess	bin -> ehdr . e_entry		1326417	0					
ANR	1327237	PtrMemberAccess	bin -> ehdr		1326417	0					
ANR	1327238	Identifier	bin		1326417	0					
ANR	1327239	Identifier	ehdr		1326417	1					
ANR	1327240	Identifier	e_entry		1326417	1					
ANR	1327241	PrimaryExpression	16		1326417	1					
ANR	1327242	PrimaryExpression	16		1326417	1					
ANR	1327243	IfStatement	if ( bin -> phdr )		1326417	6					
ANR	1327244	Condition	bin -> phdr	1974:7:57042:57050	1326417	0	True				
ANR	1327245	PtrMemberAccess	bin -> phdr		1326417	0					
ANR	1327246	Identifier	bin		1326417	0					
ANR	1327247	Identifier	phdr		1326417	1					
ANR	1327248	CompoundStatement		112:18:3587:3587	1326417	1					
ANR	1327249	ExpressionStatement	baddr = Elf_ ( r_bin_elf_get_baddr ) ( bin )	1975:4:57059:57098	1326417	0	True				
ANR	1327250	AssignmentExpression	baddr = Elf_ ( r_bin_elf_get_baddr ) ( bin )		1326417	0		=			
ANR	1327251	Identifier	baddr		1326417	0					
ANR	1327252	CallExpression	Elf_ ( r_bin_elf_get_baddr ) ( bin )		1326417	1					
ANR	1327253	Callee	Elf_ ( r_bin_elf_get_baddr )		1326417	0					
ANR	1327254	CallExpression	Elf_ ( r_bin_elf_get_baddr )		1326417	0					
ANR	1327255	Callee	Elf_		1326417	0					
ANR	1327256	Identifier	Elf_		1326417	0					
ANR	1327257	ArgumentList	r_bin_elf_get_baddr		1326417	1					
ANR	1327258	Argument	r_bin_elf_get_baddr		1326417	0					
ANR	1327259	Identifier	r_bin_elf_get_baddr		1326417	0					
ANR	1327260	ArgumentList	bin		1326417	1					
ANR	1327261	Argument	bin		1326417	0					
ANR	1327262	Identifier	bin		1326417	0					
ANR	1327263	ExpressionStatement	maddr += baddr	1977:3:57108:57122	1326417	7	True				
ANR	1327264	AssignmentExpression	maddr += baddr		1326417	0		+=			
ANR	1327265	Identifier	maddr		1326417	0					
ANR	1327266	Identifier	baddr		1326417	1					
ANR	1327267	ReturnStatement	return maddr ;	1978:3:57127:57139	1326417	8	True				
ANR	1327268	Identifier	maddr		1326417	0					
ANR	1327269	IfStatement	"if ( ! memcmp ( buf , ""\\x49\\x89\\xd9"" , 3 ) && buf [ 156 ] == 0xe8 )"		1326417	11					
ANR	1327270	Condition	"! memcmp ( buf , ""\\x49\\x89\\xd9"" , 3 ) && buf [ 156 ] == 0xe8"	1983:5:57184:57235	1326417	0	True				
ANR	1327271	AndExpression	"! memcmp ( buf , ""\\x49\\x89\\xd9"" , 3 ) && buf [ 156 ] == 0xe8"		1326417	0		&&			
ANR	1327272	UnaryOperationExpression	"! memcmp ( buf , ""\\x49\\x89\\xd9"" , 3 )"		1326417	0					
ANR	1327273	UnaryOperator	!		1326417	0					
ANR	1327274	CallExpression	"memcmp ( buf , ""\\x49\\x89\\xd9"" , 3 )"		1326417	1					
ANR	1327275	Callee	memcmp		1326417	0					
ANR	1327276	Identifier	memcmp		1326417	0					
ANR	1327277	ArgumentList	buf		1326417	1					
ANR	1327278	Argument	buf		1326417	0					
ANR	1327279	Identifier	buf		1326417	0					
ANR	1327280	Argument	"""\\x49\\x89\\xd9"""		1326417	1					
ANR	1327281	PrimaryExpression	"""\\x49\\x89\\xd9"""		1326417	0					
ANR	1327282	Argument	3		1326417	2					
ANR	1327283	PrimaryExpression	3		1326417	0					
ANR	1327284	EqualityExpression	buf [ 156 ] == 0xe8		1326417	1		==			
ANR	1327285	ArrayIndexing	buf [ 156 ]		1326417	0					
ANR	1327286	Identifier	buf		1326417	0					
ANR	1327287	PrimaryExpression	156		1326417	1					
ANR	1327288	PrimaryExpression	0xe8		1326417	1					
ANR	1327289	CompoundStatement		121:59:3772:3772	1326417	1					
ANR	1327290	ReturnStatement	return r_read_le32 ( & buf [ 157 ] ) + entry + 156 + 5 ;	1984:2:57253:57301	1326417	0	True				
ANR	1327291	AdditiveExpression	r_read_le32 ( & buf [ 157 ] ) + entry + 156 + 5		1326417	0		+			
ANR	1327292	CallExpression	r_read_le32 ( & buf [ 157 ] )		1326417	0					
ANR	1327293	Callee	r_read_le32		1326417	0					
ANR	1327294	Identifier	r_read_le32		1326417	0					
ANR	1327295	ArgumentList	& buf [ 157 ]		1326417	1					
ANR	1327296	Argument	& buf [ 157 ]		1326417	0					
ANR	1327297	UnaryOperationExpression	& buf [ 157 ]		1326417	0					
ANR	1327298	UnaryOperator	&		1326417	0					
ANR	1327299	ArrayIndexing	buf [ 157 ]		1326417	1					
ANR	1327300	Identifier	buf		1326417	0					
ANR	1327301	PrimaryExpression	157		1326417	1					
ANR	1327302	AdditiveExpression	entry + 156 + 5		1326417	1		+			
ANR	1327303	Identifier	entry		1326417	0					
ANR	1327304	AdditiveExpression	156 + 5		1326417	1		+			
ANR	1327305	PrimaryExpression	156		1326417	0					
ANR	1327306	PrimaryExpression	5		1326417	1					
ANR	1327307	IfStatement	"if ( ! memcmp ( buf + 29 , ""\\x48\\xc7\\xc7"" , 3 ) )"		1326417	12					
ANR	1327308	Condition	"! memcmp ( buf + 29 , ""\\x48\\xc7\\xc7"" , 3 )"	1986:5:57311:57345	1326417	0	True				
ANR	1327309	UnaryOperationExpression	"! memcmp ( buf + 29 , ""\\x48\\xc7\\xc7"" , 3 )"		1326417	0					
ANR	1327310	UnaryOperator	!		1326417	0					
ANR	1327311	CallExpression	"memcmp ( buf + 29 , ""\\x48\\xc7\\xc7"" , 3 )"		1326417	1					
ANR	1327312	Callee	memcmp		1326417	0					
ANR	1327313	Identifier	memcmp		1326417	0					
ANR	1327314	ArgumentList	buf + 29		1326417	1					
ANR	1327315	Argument	buf + 29		1326417	0					
ANR	1327316	AdditiveExpression	buf + 29		1326417	0		+			
ANR	1327317	Identifier	buf		1326417	0					
ANR	1327318	PrimaryExpression	29		1326417	1					
ANR	1327319	Argument	"""\\x48\\xc7\\xc7"""		1326417	1					
ANR	1327320	PrimaryExpression	"""\\x48\\xc7\\xc7"""		1326417	0					
ANR	1327321	Argument	3		1326417	2					
ANR	1327322	PrimaryExpression	3		1326417	0					
ANR	1327323	CompoundStatement		125:2:3895:3939	1326417	1					
ANR	1327324	IdentifierDeclStatement	ut64 addr = ( ut64 ) r_read_le32 ( & buf [ 29 + 3 ] ) ;	1987:2:57361:57405	1326417	0	True				
ANR	1327325	IdentifierDecl	addr = ( ut64 ) r_read_le32 ( & buf [ 29 + 3 ] )		1326417	0					
ANR	1327326	IdentifierDeclType	ut64		1326417	0					
ANR	1327327	Identifier	addr		1326417	1					
ANR	1327328	AssignmentExpression	addr = ( ut64 ) r_read_le32 ( & buf [ 29 + 3 ] )		1326417	2		=			
ANR	1327329	Identifier	addr		1326417	0					
ANR	1327330	CastExpression	( ut64 ) r_read_le32 ( & buf [ 29 + 3 ] )		1326417	1					
ANR	1327331	CastTarget	ut64		1326417	0					
ANR	1327332	CallExpression	r_read_le32 ( & buf [ 29 + 3 ] )		1326417	1					
ANR	1327333	Callee	r_read_le32		1326417	0					
ANR	1327334	Identifier	r_read_le32		1326417	0					
ANR	1327335	ArgumentList	& buf [ 29 + 3 ]		1326417	1					
ANR	1327336	Argument	& buf [ 29 + 3 ]		1326417	0					
ANR	1327337	UnaryOperationExpression	& buf [ 29 + 3 ]		1326417	0					
ANR	1327338	UnaryOperator	&		1326417	0					
ANR	1327339	ArrayIndexing	buf [ 29 + 3 ]		1326417	1					
ANR	1327340	Identifier	buf		1326417	0					
ANR	1327341	AdditiveExpression	29 + 3		1326417	1		+			
ANR	1327342	PrimaryExpression	29		1326417	0					
ANR	1327343	PrimaryExpression	3		1326417	1					
ANR	1327344	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , addr ) ;"	1988:2:57409:57447	1326417	1	True				
ANR	1327345	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , addr )"		1326417	0					
ANR	1327346	Callee	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1327347	CallExpression	Elf_ ( r_bin_elf_v2p )		1326417	0					
ANR	1327348	Callee	Elf_		1326417	0					
ANR	1327349	Identifier	Elf_		1326417	0					
ANR	1327350	ArgumentList	r_bin_elf_v2p		1326417	1					
ANR	1327351	Argument	r_bin_elf_v2p		1326417	0					
ANR	1327352	Identifier	r_bin_elf_v2p		1326417	0					
ANR	1327353	ArgumentList	bin		1326417	1					
ANR	1327354	Argument	bin		1326417	0					
ANR	1327355	Identifier	bin		1326417	0					
ANR	1327356	Argument	addr		1326417	1					
ANR	1327357	Identifier	addr		1326417	0					
ANR	1327358	IdentifierDeclStatement	int bo = 29 ;	1997:1:57641:57652	1326417	13	True				
ANR	1327359	IdentifierDecl	bo = 29		1326417	0					
ANR	1327360	IdentifierDeclType	int		1326417	0					
ANR	1327361	Identifier	bo		1326417	1					
ANR	1327362	AssignmentExpression	bo = 29		1326417	2		=			
ANR	1327363	Identifier	bo		1326417	0					
ANR	1327364	PrimaryExpression	29		1326417	1					
ANR	1327365	IfStatement	if ( buf [ 0 ] == 0xf3 && buf [ 1 ] == 0x0f && buf [ 2 ] == 0x1e && buf [ 3 ] == 0xfa )		1326417	14					
ANR	1327366	Condition	buf [ 0 ] == 0xf3 && buf [ 1 ] == 0x0f && buf [ 2 ] == 0x1e && buf [ 3 ] == 0xfa	1998:5:57715:57782	1326417	0	True				
ANR	1327367	AndExpression	buf [ 0 ] == 0xf3 && buf [ 1 ] == 0x0f && buf [ 2 ] == 0x1e && buf [ 3 ] == 0xfa		1326417	0		&&			
ANR	1327368	EqualityExpression	buf [ 0 ] == 0xf3		1326417	0		==			
ANR	1327369	ArrayIndexing	buf [ 0 ]		1326417	0					
ANR	1327370	Identifier	buf		1326417	0					
ANR	1327371	PrimaryExpression	0		1326417	1					
ANR	1327372	PrimaryExpression	0xf3		1326417	1					
ANR	1327373	AndExpression	buf [ 1 ] == 0x0f && buf [ 2 ] == 0x1e && buf [ 3 ] == 0xfa		1326417	1		&&			
ANR	1327374	EqualityExpression	buf [ 1 ] == 0x0f		1326417	0		==			
ANR	1327375	ArrayIndexing	buf [ 1 ]		1326417	0					
ANR	1327376	Identifier	buf		1326417	0					
ANR	1327377	PrimaryExpression	1		1326417	1					
ANR	1327378	PrimaryExpression	0x0f		1326417	1					
ANR	1327379	AndExpression	buf [ 2 ] == 0x1e && buf [ 3 ] == 0xfa		1326417	1		&&			
ANR	1327380	EqualityExpression	buf [ 2 ] == 0x1e		1326417	0		==			
ANR	1327381	ArrayIndexing	buf [ 2 ]		1326417	0					
ANR	1327382	Identifier	buf		1326417	0					
ANR	1327383	PrimaryExpression	2		1326417	1					
ANR	1327384	PrimaryExpression	0x1e		1326417	1					
ANR	1327385	EqualityExpression	buf [ 3 ] == 0xfa		1326417	1		==			
ANR	1327386	ArrayIndexing	buf [ 3 ]		1326417	0					
ANR	1327387	Identifier	buf		1326417	0					
ANR	1327388	PrimaryExpression	3		1326417	1					
ANR	1327389	PrimaryExpression	0xfa		1326417	1					
ANR	1327390	CompoundStatement		136:75:4319:4319	1326417	1					
ANR	1327391	ExpressionStatement	bo = 33	2000:2:57846:57853	1326417	0	True				
ANR	1327392	AssignmentExpression	bo = 33		1326417	0		=			
ANR	1327393	Identifier	bo		1326417	0					
ANR	1327394	PrimaryExpression	33		1326417	1					
ANR	1327395	IfStatement	if ( buf [ bo ] == 0x48 && buf [ bo + 1 ] == 0x8d )		1326417	15					
ANR	1327396	Condition	buf [ bo ] == 0x48 && buf [ bo + 1 ] == 0x8d	2002:5:57863:57900	1326417	0	True				
ANR	1327397	AndExpression	buf [ bo ] == 0x48 && buf [ bo + 1 ] == 0x8d		1326417	0		&&			
ANR	1327398	EqualityExpression	buf [ bo ] == 0x48		1326417	0		==			
ANR	1327399	ArrayIndexing	buf [ bo ]		1326417	0					
ANR	1327400	Identifier	buf		1326417	0					
ANR	1327401	Identifier	bo		1326417	1					
ANR	1327402	PrimaryExpression	0x48		1326417	1					
ANR	1327403	EqualityExpression	buf [ bo + 1 ] == 0x8d		1326417	1		==			
ANR	1327404	ArrayIndexing	buf [ bo + 1 ]		1326417	0					
ANR	1327405	Identifier	buf		1326417	0					
ANR	1327406	AdditiveExpression	bo + 1		1326417	1		+			
ANR	1327407	Identifier	bo		1326417	0					
ANR	1327408	PrimaryExpression	1		1326417	1					
ANR	1327409	PrimaryExpression	0x8d		1326417	1					
ANR	1327410	CompoundStatement		144:2:4590:4636	1326417	1					
ANR	1327411	IdentifierDeclStatement	ut8 * p = buf + bo + 3 ;	2003:2:57938:57959	1326417	0	True				
ANR	1327412	IdentifierDecl	* p = buf + bo + 3		1326417	0					
ANR	1327413	IdentifierDeclType	ut8 *		1326417	0					
ANR	1327414	Identifier	p		1326417	1					
ANR	1327415	AssignmentExpression	* p = buf + bo + 3		1326417	2		=			
ANR	1327416	Identifier	p		1326417	0					
ANR	1327417	AdditiveExpression	buf + bo + 3		1326417	1		+			
ANR	1327418	Identifier	buf		1326417	0					
ANR	1327419	AdditiveExpression	bo + 3		1326417	1		+			
ANR	1327420	Identifier	bo		1326417	0					
ANR	1327421	PrimaryExpression	3		1326417	1					
ANR	1327422	IdentifierDeclStatement	st32 maindelta = ( st32 ) r_read_le32 ( p ) ;	2004:2:57963:58001	1326417	1	True				
ANR	1327423	IdentifierDecl	maindelta = ( st32 ) r_read_le32 ( p )		1326417	0					
ANR	1327424	IdentifierDeclType	st32		1326417	0					
ANR	1327425	Identifier	maindelta		1326417	1					
ANR	1327426	AssignmentExpression	maindelta = ( st32 ) r_read_le32 ( p )		1326417	2		=			
ANR	1327427	Identifier	maindelta		1326417	0					
ANR	1327428	CastExpression	( st32 ) r_read_le32 ( p )		1326417	1					
ANR	1327429	CastTarget	st32		1326417	0					
ANR	1327430	CallExpression	r_read_le32 ( p )		1326417	1					
ANR	1327431	Callee	r_read_le32		1326417	0					
ANR	1327432	Identifier	r_read_le32		1326417	0					
ANR	1327433	ArgumentList	p		1326417	1					
ANR	1327434	Argument	p		1326417	0					
ANR	1327435	Identifier	p		1326417	0					
ANR	1327436	IdentifierDeclStatement	ut64 vmain = ( ut64 ) ( entry + bo + maindelta ) + 7 ;	2005:2:58005:58052	1326417	2	True				
ANR	1327437	IdentifierDecl	vmain = ( ut64 ) ( entry + bo + maindelta ) + 7		1326417	0					
ANR	1327438	IdentifierDeclType	ut64		1326417	0					
ANR	1327439	Identifier	vmain		1326417	1					
ANR	1327440	AssignmentExpression	vmain = ( ut64 ) ( entry + bo + maindelta ) + 7		1326417	2		=			
ANR	1327441	Identifier	vmain		1326417	0					
ANR	1327442	AdditiveExpression	( ut64 ) ( entry + bo + maindelta ) + 7		1326417	1		+			
ANR	1327443	CastExpression	( ut64 ) ( entry + bo + maindelta )		1326417	0					
ANR	1327444	CastTarget	ut64		1326417	0					
ANR	1327445	AdditiveExpression	entry + bo + maindelta		1326417	1		+			
ANR	1327446	Identifier	entry		1326417	0					
ANR	1327447	AdditiveExpression	bo + maindelta		1326417	1		+			
ANR	1327448	Identifier	bo		1326417	0					
ANR	1327449	Identifier	maindelta		1326417	1					
ANR	1327450	PrimaryExpression	7		1326417	1					
ANR	1327451	IdentifierDeclStatement	"ut64 ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry ) ;"	2006:2:58056:58102	1326417	3	True				
ANR	1327452	IdentifierDecl	"ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		1326417	0					
ANR	1327453	IdentifierDeclType	ut64		1326417	0					
ANR	1327454	Identifier	ventry		1326417	1					
ANR	1327455	AssignmentExpression	"ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		1326417	2		=			
ANR	1327456	Identifier	ventry		1326417	0					
ANR	1327457	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		1326417	1					
ANR	1327458	Callee	Elf_ ( r_bin_elf_p2v )		1326417	0					
ANR	1327459	CallExpression	Elf_ ( r_bin_elf_p2v )		1326417	0					
ANR	1327460	Callee	Elf_		1326417	0					
ANR	1327461	Identifier	Elf_		1326417	0					
ANR	1327462	ArgumentList	r_bin_elf_p2v		1326417	1					
ANR	1327463	Argument	r_bin_elf_p2v		1326417	0					
ANR	1327464	Identifier	r_bin_elf_p2v		1326417	0					
ANR	1327465	ArgumentList	bin		1326417	1					
ANR	1327466	Argument	bin		1326417	0					
ANR	1327467	Identifier	bin		1326417	0					
ANR	1327468	Argument	entry		1326417	1					
ANR	1327469	Identifier	entry		1326417	0					
ANR	1327470	IfStatement	if ( vmain >> 16 == ventry >> 16 )		1326417	4					
ANR	1327471	Condition	vmain >> 16 == ventry >> 16	2007:6:58110:58132	1326417	0	True				
ANR	1327472	EqualityExpression	vmain >> 16 == ventry >> 16		1326417	0		==			
ANR	1327473	ShiftExpression	vmain >> 16		1326417	0		>>			
ANR	1327474	Identifier	vmain		1326417	0					
ANR	1327475	PrimaryExpression	16		1326417	1					
ANR	1327476	ShiftExpression	ventry >> 16		1326417	1		>>			
ANR	1327477	Identifier	ventry		1326417	0					
ANR	1327478	PrimaryExpression	16		1326417	1					
ANR	1327479	CompoundStatement		145:31:4669:4669	1326417	1					
ANR	1327480	ReturnStatement	return ( ut64 ) vmain ;	2008:3:58140:58158	1326417	0	True				
ANR	1327481	CastExpression	( ut64 ) vmain		1326417	0					
ANR	1327482	CastTarget	ut64		1326417	0					
ANR	1327483	Identifier	vmain		1326417	1					
ANR	1327484	CompoundStatement		152:2:4740:4768	1326417	16					
ANR	1327485	IdentifierDeclStatement	ut64 m = getmainsymbol ( bin ) ;	2014:2:58206:58234	1326417	0	True				
ANR	1327486	IdentifierDecl	m = getmainsymbol ( bin )		1326417	0					
ANR	1327487	IdentifierDeclType	ut64		1326417	0					
ANR	1327488	Identifier	m		1326417	1					
ANR	1327489	AssignmentExpression	m = getmainsymbol ( bin )		1326417	2		=			
ANR	1327490	Identifier	m		1326417	0					
ANR	1327491	CallExpression	getmainsymbol ( bin )		1326417	1					
ANR	1327492	Callee	getmainsymbol		1326417	0					
ANR	1327493	Identifier	getmainsymbol		1326417	0					
ANR	1327494	ArgumentList	bin		1326417	1					
ANR	1327495	Argument	bin		1326417	0					
ANR	1327496	Identifier	bin		1326417	0					
ANR	1327497	IfStatement	if ( m != UT64_MAX )		1326417	1					
ANR	1327498	Condition	m != UT64_MAX	2015:6:58242:58254	1326417	0	True				
ANR	1327499	EqualityExpression	m != UT64_MAX		1326417	0		!=			
ANR	1327500	Identifier	m		1326417	0					
ANR	1327501	Identifier	UT64_MAX		1326417	1					
ANR	1327502	CompoundStatement		153:21:4791:4791	1326417	1					
ANR	1327503	ReturnStatement	return m ;	2016:3:58262:58270	1326417	0	True				
ANR	1327504	Identifier	m		1326417	0					
ANR	1327505	ReturnStatement	return UT64_MAX ;	2019:1:58280:58295	1326417	17	True				
ANR	1327506	Identifier	UT64_MAX		1326417	0					
ANR	1327507	ReturnType	ut64 Elf_		1326417	1					
ANR	1327508	Identifier	( r_bin_elf_get_main_offset )		1326417	2					
ANR	1327509	Identifier	r_bin_elf_get_main_offset		1326417	3					
ANR	1327510	ParameterList	ELFOBJ * bin		1326417	4					
ANR	1327511	Parameter	ELFOBJ * bin	1863:37:53452:53462	1326417	0	True				
ANR	1327512	ParameterType	ELFOBJ *		1326417	0					
ANR	1327513	Identifier	bin		1326417	1					
ANR	1327514	CFGEntryNode	ENTRY		1326417		True				
ANR	1327515	CFGExitNode	EXIT		1326417		True				
ANR	1327516	Symbol	bin -> size		1326417						
ANR	1327517	Symbol	baddr		1326417						
ANR	1327518	Symbol	bin -> b		1326417						
ANR	1327519	Symbol	bin		1326417						
ANR	1327520	Symbol	delta		1326417						
ANR	1327521	Symbol	bin -> phdr		1326417						
ANR	1327522	Symbol	* pmain		1326417						
ANR	1327523	Symbol	bo		1326417						
ANR	1327524	Symbol	* bin		1326417						
ANR	1327525	Symbol	got_offset		1326417						
ANR	1327526	Symbol	* bo		1326417						
ANR	1327527	Symbol	r_bin_elf_get_baddr		1326417						
ANR	1327528	Symbol	memcmp		1326417						
ANR	1327529	Symbol	SIZEOF_CALL		1326417						
ANR	1327530	Symbol	maindelta		1326417						
ANR	1327531	Symbol	instr		1326417						
ANR	1327532	Symbol	bin -> ehdr		1326417						
ANR	1327533	Symbol	rel_addr		1326417						
ANR	1327534	Symbol	UT64_MAX		1326417						
ANR	1327535	Symbol	r_bin_elf_p2v		1326417						
ANR	1327536	Symbol	r_bin_elf_v2p		1326417						
ANR	1327537	Symbol	addr		1326417						
ANR	1327538	Symbol	r_bin_elf_get_entry_offset		1326417						
ANR	1327539	Symbol	vmain		1326417						
ANR	1327540	Symbol	Elf_		1326417						
ANR	1327541	Symbol	* buf		1326417						
ANR	1327542	Symbol	ventry		1326417						
ANR	1327543	Symbol	r_read_le32		1326417						
ANR	1327544	Symbol	getmainsymbol		1326417						
ANR	1327545	Symbol	bin -> ehdr . e_entry		1326417						
ANR	1327546	Symbol	gp		1326417						
ANR	1327547	Symbol	i		1326417						
ANR	1327548	Symbol	m		1326417						
ANR	1327549	Symbol	r_bin_elf_get_section_offset		1326417						
ANR	1327550	Symbol	p		1326417						
ANR	1327551	Symbol	entry		1326417						
ANR	1327552	Symbol	pa		1326417						
ANR	1327553	Symbol	buf		1326417						
ANR	1327554	Symbol	~1		1326417						
ANR	1327555	Symbol	maddr		1326417						
ANR	1327556	Symbol	pmain		1326417						
ANR	1327557	Symbol	n32s		1326417						
ANR	1327558	Symbol	entry_vaddr		1326417						
ANR	1327559	Symbol	main_addr		1326417						
ANR	1327560	Symbol	r_buf_read_at		1326417						
ANR	1327561	Symbol	r_buf_size		1326417						
ANR	1327562	Function	r_bin_elf_get_stripped	2022:0:58300:58520							
ANR	1327563	FunctionDef	r_bin_elf_get_stripped (ELFOBJ * bin)		1327562	0					
ANR	1327564	CompoundStatement		2022:47:58347:58520	1327562	0					
ANR	1327565	IdentifierDeclStatement	int i ;	2023:1:58350:58355	1327562	0	True				
ANR	1327566	IdentifierDecl	i		1327562	0					
ANR	1327567	IdentifierDeclType	int		1327562	0					
ANR	1327568	Identifier	i		1327562	1					
ANR	1327569	IfStatement	if ( ! bin -> shdr )		1327562	1					
ANR	1327570	Condition	! bin -> shdr	2024:5:58362:58371	1327562	0	True				
ANR	1327571	UnaryOperationExpression	! bin -> shdr		1327562	0					
ANR	1327572	UnaryOperator	!		1327562	0					
ANR	1327573	PtrMemberAccess	bin -> shdr		1327562	1					
ANR	1327574	Identifier	bin		1327562	0					
ANR	1327575	Identifier	shdr		1327562	1					
ANR	1327576	CompoundStatement		3:17:26:26	1327562	1					
ANR	1327577	ReturnStatement	return false ;	2025:2:58378:58390	1327562	0	True				
ANR	1327578	Identifier	false		1327562	0					
ANR	1327579	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; i ++ )		1327562	2					
ANR	1327580	ForInit	i = 0 ;	2027:6:58401:58406	1327562	0	True				
ANR	1327581	AssignmentExpression	i = 0		1327562	0		=			
ANR	1327582	Identifier	i		1327562	0					
ANR	1327583	PrimaryExpression	0		1327562	1					
ANR	1327584	Condition	i < bin -> ehdr . e_shnum	2027:13:58408:58428	1327562	1	True				
ANR	1327585	RelationalExpression	i < bin -> ehdr . e_shnum		1327562	0		<			
ANR	1327586	Identifier	i		1327562	0					
ANR	1327587	MemberAccess	bin -> ehdr . e_shnum		1327562	1					
ANR	1327588	PtrMemberAccess	bin -> ehdr		1327562	0					
ANR	1327589	Identifier	bin		1327562	0					
ANR	1327590	Identifier	ehdr		1327562	1					
ANR	1327591	Identifier	e_shnum		1327562	1					
ANR	1327592	PostIncDecOperationExpression	i ++	2027:36:58431:58433	1327562	2	True				
ANR	1327593	Identifier	i		1327562	0					
ANR	1327594	IncDec	++		1327562	1					
ANR	1327595	CompoundStatement		6:41:88:88	1327562	3					
ANR	1327596	IfStatement	if ( bin -> shdr [ i ] . sh_type == SHT_SYMTAB )		1327562	0					
ANR	1327597	Condition	bin -> shdr [ i ] . sh_type == SHT_SYMTAB	2028:6:58444:58477	1327562	0	True				
ANR	1327598	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_SYMTAB		1327562	0		==			
ANR	1327599	MemberAccess	bin -> shdr [ i ] . sh_type		1327562	0					
ANR	1327600	ArrayIndexing	bin -> shdr [ i ]		1327562	0					
ANR	1327601	PtrMemberAccess	bin -> shdr		1327562	0					
ANR	1327602	Identifier	bin		1327562	0					
ANR	1327603	Identifier	shdr		1327562	1					
ANR	1327604	Identifier	i		1327562	1					
ANR	1327605	Identifier	sh_type		1327562	1					
ANR	1327606	Identifier	SHT_SYMTAB		1327562	1					
ANR	1327607	CompoundStatement		7:42:132:132	1327562	1					
ANR	1327608	ReturnStatement	return false ;	2029:3:58485:58497	1327562	0	True				
ANR	1327609	Identifier	false		1327562	0					
ANR	1327610	ReturnStatement	return true ;	2032:1:58507:58518	1327562	3	True				
ANR	1327611	Identifier	true		1327562	0					
ANR	1327612	ReturnType	bool Elf_		1327562	1					
ANR	1327613	Identifier	( r_bin_elf_get_stripped )		1327562	2					
ANR	1327614	Identifier	r_bin_elf_get_stripped		1327562	3					
ANR	1327615	ParameterList	ELFOBJ * bin		1327562	4					
ANR	1327616	Parameter	ELFOBJ * bin	2022:34:58334:58344	1327562	0	True				
ANR	1327617	ParameterType	ELFOBJ *		1327562	0					
ANR	1327618	Identifier	bin		1327562	1					
ANR	1327619	CFGEntryNode	ENTRY		1327562		True				
ANR	1327620	CFGExitNode	EXIT		1327562		True				
ANR	1327621	Symbol	bin -> ehdr . e_shnum		1327562						
ANR	1327622	Symbol	SHT_SYMTAB		1327562						
ANR	1327623	Symbol	bin		1327562						
ANR	1327624	Symbol	false		1327562						
ANR	1327625	Symbol	i		1327562						
ANR	1327626	Symbol	* bin -> shdr		1327562						
ANR	1327627	Symbol	* bin		1327562						
ANR	1327628	Symbol	bin -> shdr		1327562						
ANR	1327629	Symbol	* i		1327562						
ANR	1327630	Symbol	bin -> ehdr		1327562						
ANR	1327631	Symbol	true		1327562						
ANR	1327632	Symbol	bin -> shdr [ i ] . sh_type		1327562						
ANR	1327633	Symbol	* * bin		1327562						
ANR	1327634	Function	r_bin_elf_intrp	2035:6:58529:59257							
ANR	1327635	FunctionDef	r_bin_elf_intrp (ELFOBJ * bin)		1327634	0					
ANR	1327636	CompoundStatement		2035:41:58564:59257	1327634	0					
ANR	1327637	IdentifierDeclStatement	int i ;	2036:1:58567:58572	1327634	0	True				
ANR	1327638	IdentifierDecl	i		1327634	0					
ANR	1327639	IdentifierDeclType	int		1327634	0					
ANR	1327640	Identifier	i		1327634	1					
ANR	1327641	IfStatement	if ( ! bin || ! bin -> phdr )		1327634	1					
ANR	1327642	Condition	! bin || ! bin -> phdr	2037:5:58579:58596	1327634	0	True				
ANR	1327643	OrExpression	! bin || ! bin -> phdr		1327634	0		||			
ANR	1327644	UnaryOperationExpression	! bin		1327634	0					
ANR	1327645	UnaryOperator	!		1327634	0					
ANR	1327646	Identifier	bin		1327634	1					
ANR	1327647	UnaryOperationExpression	! bin -> phdr		1327634	1					
ANR	1327648	UnaryOperator	!		1327634	0					
ANR	1327649	PtrMemberAccess	bin -> phdr		1327634	1					
ANR	1327650	Identifier	bin		1327634	0					
ANR	1327651	Identifier	phdr		1327634	1					
ANR	1327652	CompoundStatement		3:25:34:34	1327634	1					
ANR	1327653	ReturnStatement	return NULL ;	2038:2:58603:58614	1327634	0	True				
ANR	1327654	Identifier	NULL		1327634	0					
ANR	1327655	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		1327634	2					
ANR	1327656	ForInit	i = 0 ;	2040:6:58625:58630	1327634	0	True				
ANR	1327657	AssignmentExpression	i = 0		1327634	0		=			
ANR	1327658	Identifier	i		1327634	0					
ANR	1327659	PrimaryExpression	0		1327634	1					
ANR	1327660	Condition	i < bin -> ehdr . e_phnum	2040:13:58632:58652	1327634	1	True				
ANR	1327661	RelationalExpression	i < bin -> ehdr . e_phnum		1327634	0		<			
ANR	1327662	Identifier	i		1327634	0					
ANR	1327663	MemberAccess	bin -> ehdr . e_phnum		1327634	1					
ANR	1327664	PtrMemberAccess	bin -> ehdr		1327634	0					
ANR	1327665	Identifier	bin		1327634	0					
ANR	1327666	Identifier	ehdr		1327634	1					
ANR	1327667	Identifier	e_phnum		1327634	1					
ANR	1327668	PostIncDecOperationExpression	i ++	2040:36:58655:58657	1327634	2	True				
ANR	1327669	Identifier	i		1327634	0					
ANR	1327670	IncDec	++		1327634	1					
ANR	1327671	CompoundStatement		6:41:95:95	1327634	3					
ANR	1327672	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_INTERP )		1327634	0					
ANR	1327673	Condition	bin -> phdr [ i ] . p_type == PT_INTERP	2041:6:58668:58699	1327634	0	True				
ANR	1327674	EqualityExpression	bin -> phdr [ i ] . p_type == PT_INTERP		1327634	0		==			
ANR	1327675	MemberAccess	bin -> phdr [ i ] . p_type		1327634	0					
ANR	1327676	ArrayIndexing	bin -> phdr [ i ]		1327634	0					
ANR	1327677	PtrMemberAccess	bin -> phdr		1327634	0					
ANR	1327678	Identifier	bin		1327634	0					
ANR	1327679	Identifier	phdr		1327634	1					
ANR	1327680	Identifier	i		1327634	1					
ANR	1327681	Identifier	p_type		1327634	1					
ANR	1327682	Identifier	PT_INTERP		1327634	1					
ANR	1327683	CompoundStatement		15:3:400:427	1327634	1					
ANR	1327684	IdentifierDeclStatement	ut64 addr = bin -> phdr [ i ] . p_offset ;	2042:3:58707:58740	1327634	0	True				
ANR	1327685	IdentifierDecl	addr = bin -> phdr [ i ] . p_offset		1327634	0					
ANR	1327686	IdentifierDeclType	ut64		1327634	0					
ANR	1327687	Identifier	addr		1327634	1					
ANR	1327688	AssignmentExpression	addr = bin -> phdr [ i ] . p_offset		1327634	2		=			
ANR	1327689	Identifier	addr		1327634	0					
ANR	1327690	MemberAccess	bin -> phdr [ i ] . p_offset		1327634	1					
ANR	1327691	ArrayIndexing	bin -> phdr [ i ]		1327634	0					
ANR	1327692	PtrMemberAccess	bin -> phdr		1327634	0					
ANR	1327693	Identifier	bin		1327634	0					
ANR	1327694	Identifier	phdr		1327634	1					
ANR	1327695	Identifier	i		1327634	1					
ANR	1327696	Identifier	p_offset		1327634	1					
ANR	1327697	IdentifierDeclStatement	int sz = bin -> phdr [ i ] . p_filesz ;	2043:3:58745:58775	1327634	1	True				
ANR	1327698	IdentifierDecl	sz = bin -> phdr [ i ] . p_filesz		1327634	0					
ANR	1327699	IdentifierDeclType	int		1327634	0					
ANR	1327700	Identifier	sz		1327634	1					
ANR	1327701	AssignmentExpression	sz = bin -> phdr [ i ] . p_filesz		1327634	2		=			
ANR	1327702	Identifier	sz		1327634	0					
ANR	1327703	MemberAccess	bin -> phdr [ i ] . p_filesz		1327634	1					
ANR	1327704	ArrayIndexing	bin -> phdr [ i ]		1327634	0					
ANR	1327705	PtrMemberAccess	bin -> phdr		1327634	0					
ANR	1327706	Identifier	bin		1327634	0					
ANR	1327707	Identifier	phdr		1327634	1					
ANR	1327708	Identifier	i		1327634	1					
ANR	1327709	Identifier	p_filesz		1327634	1					
ANR	1327710	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_header.intrp_addr"" , addr , 0 )"	2044:3:58780:58835	1327634	2	True				
ANR	1327711	CallExpression	"sdb_num_set ( bin -> kv , ""elf_header.intrp_addr"" , addr , 0 )"		1327634	0					
ANR	1327712	Callee	sdb_num_set		1327634	0					
ANR	1327713	Identifier	sdb_num_set		1327634	0					
ANR	1327714	ArgumentList	bin -> kv		1327634	1					
ANR	1327715	Argument	bin -> kv		1327634	0					
ANR	1327716	PtrMemberAccess	bin -> kv		1327634	0					
ANR	1327717	Identifier	bin		1327634	0					
ANR	1327718	Identifier	kv		1327634	1					
ANR	1327719	Argument	"""elf_header.intrp_addr"""		1327634	1					
ANR	1327720	PrimaryExpression	"""elf_header.intrp_addr"""		1327634	0					
ANR	1327721	Argument	addr		1327634	2					
ANR	1327722	Identifier	addr		1327634	0					
ANR	1327723	Argument	0		1327634	3					
ANR	1327724	PrimaryExpression	0		1327634	0					
ANR	1327725	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_header.intrp_size"" , sz , 0 )"	2045:3:58840:58893	1327634	3	True				
ANR	1327726	CallExpression	"sdb_num_set ( bin -> kv , ""elf_header.intrp_size"" , sz , 0 )"		1327634	0					
ANR	1327727	Callee	sdb_num_set		1327634	0					
ANR	1327728	Identifier	sdb_num_set		1327634	0					
ANR	1327729	ArgumentList	bin -> kv		1327634	1					
ANR	1327730	Argument	bin -> kv		1327634	0					
ANR	1327731	PtrMemberAccess	bin -> kv		1327634	0					
ANR	1327732	Identifier	bin		1327634	0					
ANR	1327733	Identifier	kv		1327634	1					
ANR	1327734	Argument	"""elf_header.intrp_size"""		1327634	1					
ANR	1327735	PrimaryExpression	"""elf_header.intrp_size"""		1327634	0					
ANR	1327736	Argument	sz		1327634	2					
ANR	1327737	Identifier	sz		1327634	0					
ANR	1327738	Argument	0		1327634	3					
ANR	1327739	PrimaryExpression	0		1327634	0					
ANR	1327740	IfStatement	if ( sz < 1 || sz > r_buf_size ( bin -> b ) )		1327634	4					
ANR	1327741	Condition	sz < 1 || sz > r_buf_size ( bin -> b )	2046:7:58902:58935	1327634	0	True				
ANR	1327742	OrExpression	sz < 1 || sz > r_buf_size ( bin -> b )		1327634	0		||			
ANR	1327743	RelationalExpression	sz < 1		1327634	0		<			
ANR	1327744	Identifier	sz		1327634	0					
ANR	1327745	PrimaryExpression	1		1327634	1					
ANR	1327746	RelationalExpression	sz > r_buf_size ( bin -> b )		1327634	1		>			
ANR	1327747	Identifier	sz		1327634	0					
ANR	1327748	CallExpression	r_buf_size ( bin -> b )		1327634	1					
ANR	1327749	Callee	r_buf_size		1327634	0					
ANR	1327750	Identifier	r_buf_size		1327634	0					
ANR	1327751	ArgumentList	bin -> b		1327634	1					
ANR	1327752	Argument	bin -> b		1327634	0					
ANR	1327753	PtrMemberAccess	bin -> b		1327634	0					
ANR	1327754	Identifier	bin		1327634	0					
ANR	1327755	Identifier	b		1327634	1					
ANR	1327756	CompoundStatement		12:43:373:373	1327634	1					
ANR	1327757	ReturnStatement	return NULL ;	2047:4:58944:58955	1327634	0	True				
ANR	1327758	Identifier	NULL		1327634	0					
ANR	1327759	IdentifierDeclStatement	char * str = malloc ( sz + 1 ) ;	2049:3:58965:58992	1327634	5	True				
ANR	1327760	IdentifierDecl	* str = malloc ( sz + 1 )		1327634	0					
ANR	1327761	IdentifierDeclType	char *		1327634	0					
ANR	1327762	Identifier	str		1327634	1					
ANR	1327763	AssignmentExpression	* str = malloc ( sz + 1 )		1327634	2		=			
ANR	1327764	Identifier	str		1327634	0					
ANR	1327765	CallExpression	malloc ( sz + 1 )		1327634	1					
ANR	1327766	Callee	malloc		1327634	0					
ANR	1327767	Identifier	malloc		1327634	0					
ANR	1327768	ArgumentList	sz + 1		1327634	1					
ANR	1327769	Argument	sz + 1		1327634	0					
ANR	1327770	AdditiveExpression	sz + 1		1327634	0		+			
ANR	1327771	Identifier	sz		1327634	0					
ANR	1327772	PrimaryExpression	1		1327634	1					
ANR	1327773	IfStatement	if ( ! str )		1327634	6					
ANR	1327774	Condition	! str	2050:7:59001:59004	1327634	0	True				
ANR	1327775	UnaryOperationExpression	! str		1327634	0					
ANR	1327776	UnaryOperator	!		1327634	0					
ANR	1327777	Identifier	str		1327634	1					
ANR	1327778	CompoundStatement		16:13:442:442	1327634	1					
ANR	1327779	ReturnStatement	return NULL ;	2051:4:59013:59024	1327634	0	True				
ANR	1327780	Identifier	NULL		1327634	0					
ANR	1327781	IfStatement	"if ( r_buf_read_at ( bin -> b , addr , ( ut8 * ) str , sz ) < 1 )"		1327634	7					
ANR	1327782	Condition	"r_buf_read_at ( bin -> b , addr , ( ut8 * ) str , sz ) < 1"	2053:7:59038:59084	1327634	0	True				
ANR	1327783	RelationalExpression	"r_buf_read_at ( bin -> b , addr , ( ut8 * ) str , sz ) < 1"		1327634	0		<			
ANR	1327784	CallExpression	"r_buf_read_at ( bin -> b , addr , ( ut8 * ) str , sz )"		1327634	0					
ANR	1327785	Callee	r_buf_read_at		1327634	0					
ANR	1327786	Identifier	r_buf_read_at		1327634	0					
ANR	1327787	ArgumentList	bin -> b		1327634	1					
ANR	1327788	Argument	bin -> b		1327634	0					
ANR	1327789	PtrMemberAccess	bin -> b		1327634	0					
ANR	1327790	Identifier	bin		1327634	0					
ANR	1327791	Identifier	b		1327634	1					
ANR	1327792	Argument	addr		1327634	1					
ANR	1327793	Identifier	addr		1327634	0					
ANR	1327794	Argument	( ut8 * ) str		1327634	2					
ANR	1327795	CastExpression	( ut8 * ) str		1327634	0					
ANR	1327796	CastTarget	ut8 *		1327634	0					
ANR	1327797	Identifier	str		1327634	1					
ANR	1327798	Argument	sz		1327634	3					
ANR	1327799	Identifier	sz		1327634	0					
ANR	1327800	PrimaryExpression	1		1327634	1					
ANR	1327801	CompoundStatement		19:56:522:522	1327634	1					
ANR	1327802	ExpressionStatement	"bprintf ( ""read (main)\\n"" )"	2054:4:59093:59118	1327634	0	True				
ANR	1327803	CallExpression	"bprintf ( ""read (main)\\n"" )"		1327634	0					
ANR	1327804	Callee	bprintf		1327634	0					
ANR	1327805	Identifier	bprintf		1327634	0					
ANR	1327806	ArgumentList	"""read (main)\\n"""		1327634	1					
ANR	1327807	Argument	"""read (main)\\n"""		1327634	0					
ANR	1327808	PrimaryExpression	"""read (main)\\n"""		1327634	0					
ANR	1327809	ExpressionStatement	free ( str )	2055:4:59124:59134	1327634	1	True				
ANR	1327810	CallExpression	free ( str )		1327634	0					
ANR	1327811	Callee	free		1327634	0					
ANR	1327812	Identifier	free		1327634	0					
ANR	1327813	ArgumentList	str		1327634	1					
ANR	1327814	Argument	str		1327634	0					
ANR	1327815	Identifier	str		1327634	0					
ANR	1327816	ReturnStatement	return 0 ;	2056:4:59140:59148	1327634	2	True				
ANR	1327817	PrimaryExpression	0		1327634	0					
ANR	1327818	ExpressionStatement	str [ sz ] = 0	2058:3:59158:59169	1327634	8	True				
ANR	1327819	AssignmentExpression	str [ sz ] = 0		1327634	0		=			
ANR	1327820	ArrayIndexing	str [ sz ]		1327634	0					
ANR	1327821	Identifier	str		1327634	0					
ANR	1327822	Identifier	sz		1327634	1					
ANR	1327823	PrimaryExpression	0		1327634	1					
ANR	1327824	ExpressionStatement	"sdb_set ( bin -> kv , ""elf_header.intrp"" , str , 0 )"	2059:3:59174:59219	1327634	9	True				
ANR	1327825	CallExpression	"sdb_set ( bin -> kv , ""elf_header.intrp"" , str , 0 )"		1327634	0					
ANR	1327826	Callee	sdb_set		1327634	0					
ANR	1327827	Identifier	sdb_set		1327634	0					
ANR	1327828	ArgumentList	bin -> kv		1327634	1					
ANR	1327829	Argument	bin -> kv		1327634	0					
ANR	1327830	PtrMemberAccess	bin -> kv		1327634	0					
ANR	1327831	Identifier	bin		1327634	0					
ANR	1327832	Identifier	kv		1327634	1					
ANR	1327833	Argument	"""elf_header.intrp"""		1327634	1					
ANR	1327834	PrimaryExpression	"""elf_header.intrp"""		1327634	0					
ANR	1327835	Argument	str		1327634	2					
ANR	1327836	Identifier	str		1327634	0					
ANR	1327837	Argument	0		1327634	3					
ANR	1327838	PrimaryExpression	0		1327634	0					
ANR	1327839	ReturnStatement	return str ;	2060:3:59224:59234	1327634	10	True				
ANR	1327840	Identifier	str		1327634	0					
ANR	1327841	ReturnStatement	return NULL ;	2063:1:59244:59255	1327634	3	True				
ANR	1327842	Identifier	NULL		1327634	0					
ANR	1327843	ReturnType	Elf_		1327634	1					
ANR	1327844	Identifier	( r_bin_elf_intrp )		1327634	2					
ANR	1327845	Identifier	r_bin_elf_intrp		1327634	3					
ANR	1327846	ParameterList	ELFOBJ * bin		1327634	4					
ANR	1327847	Parameter	ELFOBJ * bin	2035:28:58551:58561	1327634	0	True				
ANR	1327848	ParameterType	ELFOBJ *		1327634	0					
ANR	1327849	Identifier	bin		1327634	1					
ANR	1327850	CFGEntryNode	ENTRY		1327634		True				
ANR	1327851	CFGExitNode	EXIT		1327634		True				
ANR	1327852	Symbol	malloc		1327634						
ANR	1327853	Symbol	bin -> b		1327634						
ANR	1327854	Symbol	NULL		1327634						
ANR	1327855	Symbol	bin		1327634						
ANR	1327856	Symbol	sz		1327634						
ANR	1327857	Symbol	i		1327634						
ANR	1327858	Symbol	bin -> phdr		1327634						
ANR	1327859	Symbol	bin -> ehdr . e_phnum		1327634						
ANR	1327860	Symbol	bin -> kv		1327634						
ANR	1327861	Symbol	* bin		1327634						
ANR	1327862	Symbol	* sz		1327634						
ANR	1327863	Symbol	* bin -> phdr		1327634						
ANR	1327864	Symbol	bin -> phdr [ i ] . p_filesz		1327634						
ANR	1327865	Symbol	str		1327634						
ANR	1327866	Symbol	bin -> phdr [ i ] . p_offset		1327634						
ANR	1327867	Symbol	* i		1327634						
ANR	1327868	Symbol	PT_INTERP		1327634						
ANR	1327869	Symbol	bin -> ehdr		1327634						
ANR	1327870	Symbol	r_buf_read_at		1327634						
ANR	1327871	Symbol	bin -> phdr [ i ] . p_type		1327634						
ANR	1327872	Symbol	* * bin		1327634						
ANR	1327873	Symbol	* str		1327634						
ANR	1327874	Symbol	addr		1327634						
ANR	1327875	Symbol	r_buf_size		1327634						
ANR	1327876	Function	r_bin_elf_is_static	2066:0:59260:59515							
ANR	1327877	FunctionDef	r_bin_elf_is_static (ELFOBJ * bin)		1327876	0					
ANR	1327878	CompoundStatement		2066:44:59304:59515	1327876	0					
ANR	1327879	IdentifierDeclStatement	int i ;	2067:1:59307:59312	1327876	0	True				
ANR	1327880	IdentifierDecl	i		1327876	0					
ANR	1327881	IdentifierDeclType	int		1327876	0					
ANR	1327882	Identifier	i		1327876	1					
ANR	1327883	IfStatement	if ( ! bin -> phdr )		1327876	1					
ANR	1327884	Condition	! bin -> phdr	2068:5:59319:59328	1327876	0	True				
ANR	1327885	UnaryOperationExpression	! bin -> phdr		1327876	0					
ANR	1327886	UnaryOperator	!		1327876	0					
ANR	1327887	PtrMemberAccess	bin -> phdr		1327876	1					
ANR	1327888	Identifier	bin		1327876	0					
ANR	1327889	Identifier	phdr		1327876	1					
ANR	1327890	CompoundStatement		3:17:26:26	1327876	1					
ANR	1327891	ReturnStatement	return false ;	2069:2:59335:59347	1327876	0	True				
ANR	1327892	Identifier	false		1327876	0					
ANR	1327893	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		1327876	2					
ANR	1327894	ForInit	i = 0 ;	2071:6:59358:59363	1327876	0	True				
ANR	1327895	AssignmentExpression	i = 0		1327876	0		=			
ANR	1327896	Identifier	i		1327876	0					
ANR	1327897	PrimaryExpression	0		1327876	1					
ANR	1327898	Condition	i < bin -> ehdr . e_phnum	2071:13:59365:59385	1327876	1	True				
ANR	1327899	RelationalExpression	i < bin -> ehdr . e_phnum		1327876	0		<			
ANR	1327900	Identifier	i		1327876	0					
ANR	1327901	MemberAccess	bin -> ehdr . e_phnum		1327876	1					
ANR	1327902	PtrMemberAccess	bin -> ehdr		1327876	0					
ANR	1327903	Identifier	bin		1327876	0					
ANR	1327904	Identifier	ehdr		1327876	1					
ANR	1327905	Identifier	e_phnum		1327876	1					
ANR	1327906	PostIncDecOperationExpression	i ++	2071:36:59388:59390	1327876	2	True				
ANR	1327907	Identifier	i		1327876	0					
ANR	1327908	IncDec	++		1327876	1					
ANR	1327909	CompoundStatement		6:41:88:88	1327876	3					
ANR	1327910	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_INTERP || bin -> phdr [ i ] . p_type == PT_DYNAMIC )		1327876	0					
ANR	1327911	Condition	bin -> phdr [ i ] . p_type == PT_INTERP || bin -> phdr [ i ] . p_type == PT_DYNAMIC	2072:6:59401:59472	1327876	0	True				
ANR	1327912	OrExpression	bin -> phdr [ i ] . p_type == PT_INTERP || bin -> phdr [ i ] . p_type == PT_DYNAMIC		1327876	0		||			
ANR	1327913	EqualityExpression	bin -> phdr [ i ] . p_type == PT_INTERP		1327876	0		==			
ANR	1327914	MemberAccess	bin -> phdr [ i ] . p_type		1327876	0					
ANR	1327915	ArrayIndexing	bin -> phdr [ i ]		1327876	0					
ANR	1327916	PtrMemberAccess	bin -> phdr		1327876	0					
ANR	1327917	Identifier	bin		1327876	0					
ANR	1327918	Identifier	phdr		1327876	1					
ANR	1327919	Identifier	i		1327876	1					
ANR	1327920	Identifier	p_type		1327876	1					
ANR	1327921	Identifier	PT_INTERP		1327876	1					
ANR	1327922	EqualityExpression	bin -> phdr [ i ] . p_type == PT_DYNAMIC		1327876	1		==			
ANR	1327923	MemberAccess	bin -> phdr [ i ] . p_type		1327876	0					
ANR	1327924	ArrayIndexing	bin -> phdr [ i ]		1327876	0					
ANR	1327925	PtrMemberAccess	bin -> phdr		1327876	0					
ANR	1327926	Identifier	bin		1327876	0					
ANR	1327927	Identifier	phdr		1327876	1					
ANR	1327928	Identifier	i		1327876	1					
ANR	1327929	Identifier	p_type		1327876	1					
ANR	1327930	Identifier	PT_DYNAMIC		1327876	1					
ANR	1327931	CompoundStatement		8:38:170:170	1327876	1					
ANR	1327932	ReturnStatement	return false ;	2074:3:59480:59492	1327876	0	True				
ANR	1327933	Identifier	false		1327876	0					
ANR	1327934	ReturnStatement	return true ;	2077:1:59502:59513	1327876	3	True				
ANR	1327935	Identifier	true		1327876	0					
ANR	1327936	ReturnType	bool Elf_		1327876	1					
ANR	1327937	Identifier	( r_bin_elf_is_static )		1327876	2					
ANR	1327938	Identifier	r_bin_elf_is_static		1327876	3					
ANR	1327939	ParameterList	ELFOBJ * bin		1327876	4					
ANR	1327940	Parameter	ELFOBJ * bin	2066:31:59291:59301	1327876	0	True				
ANR	1327941	ParameterType	ELFOBJ *		1327876	0					
ANR	1327942	Identifier	bin		1327876	1					
ANR	1327943	CFGEntryNode	ENTRY		1327876		True				
ANR	1327944	CFGExitNode	EXIT		1327876		True				
ANR	1327945	Symbol	bin		1327876						
ANR	1327946	Symbol	false		1327876						
ANR	1327947	Symbol	i		1327876						
ANR	1327948	Symbol	bin -> phdr		1327876						
ANR	1327949	Symbol	bin -> ehdr . e_phnum		1327876						
ANR	1327950	Symbol	PT_DYNAMIC		1327876						
ANR	1327951	Symbol	* bin		1327876						
ANR	1327952	Symbol	* bin -> phdr		1327876						
ANR	1327953	Symbol	* i		1327876						
ANR	1327954	Symbol	PT_INTERP		1327876						
ANR	1327955	Symbol	bin -> ehdr		1327876						
ANR	1327956	Symbol	true		1327876						
ANR	1327957	Symbol	bin -> phdr [ i ] . p_type		1327876						
ANR	1327958	Symbol	* * bin		1327876						
ANR	1327959	Function	r_bin_elf_get_data_encoding	2080:6:59524:59866							
ANR	1327960	FunctionDef	r_bin_elf_get_data_encoding (ELFOBJ * bin)		1327959	0					
ANR	1327961	CompoundStatement		2080:53:59571:59866	1327959	0					
ANR	1327962	SwitchStatement	switch ( bin -> ehdr . e_ident [ EI_DATA ] )		1327959	0					
ANR	1327963	Condition	bin -> ehdr . e_ident [ EI_DATA ]	2081:9:59582:59607	1327959	0	True				
ANR	1327964	ArrayIndexing	bin -> ehdr . e_ident [ EI_DATA ]		1327959	0					
ANR	1327965	MemberAccess	bin -> ehdr . e_ident		1327959	0					
ANR	1327966	PtrMemberAccess	bin -> ehdr		1327959	0					
ANR	1327967	Identifier	bin		1327959	0					
ANR	1327968	Identifier	ehdr		1327959	1					
ANR	1327969	Identifier	e_ident		1327959	1					
ANR	1327970	Identifier	EI_DATA		1327959	1					
ANR	1327971	CompoundStatement		2:37:38:38	1327959	1					
ANR	1327972	Label	case ELFDATANONE :	2082:1:59613:59629	1327959	0	True				
ANR	1327973	Identifier	ELFDATANONE		1327959	0					
ANR	1327974	ReturnStatement	"return strdup ( ""none"" ) ;"	2082:19:59631:59653	1327959	1	True				
ANR	1327975	CallExpression	"strdup ( ""none"" )"		1327959	0					
ANR	1327976	Callee	strdup		1327959	0					
ANR	1327977	Identifier	strdup		1327959	0					
ANR	1327978	ArgumentList	"""none"""		1327959	1					
ANR	1327979	Argument	"""none"""		1327959	0					
ANR	1327980	PrimaryExpression	"""none"""		1327959	0					
ANR	1327981	Label	case ELFDATA2LSB :	2083:1:59656:59672	1327959	2	True				
ANR	1327982	Identifier	ELFDATA2LSB		1327959	0					
ANR	1327983	ReturnStatement	"return strdup ( ""2's complement, little endian"" ) ;"	2083:19:59674:59721	1327959	3	True				
ANR	1327984	CallExpression	"strdup ( ""2's complement, little endian"" )"		1327959	0					
ANR	1327985	Callee	strdup		1327959	0					
ANR	1327986	Identifier	strdup		1327959	0					
ANR	1327987	ArgumentList	"""2's complement, little endian"""		1327959	1					
ANR	1327988	Argument	"""2's complement, little endian"""		1327959	0					
ANR	1327989	PrimaryExpression	"""2's complement, little endian"""		1327959	0					
ANR	1327990	Label	case ELFDATA2MSB :	2084:1:59724:59740	1327959	4	True				
ANR	1327991	Identifier	ELFDATA2MSB		1327959	0					
ANR	1327992	ReturnStatement	"return strdup ( ""2's complement, big endian"" ) ;"	2084:19:59742:59786	1327959	5	True				
ANR	1327993	CallExpression	"strdup ( ""2's complement, big endian"" )"		1327959	0					
ANR	1327994	Callee	strdup		1327959	0					
ANR	1327995	Identifier	strdup		1327959	0					
ANR	1327996	ArgumentList	"""2's complement, big endian"""		1327959	1					
ANR	1327997	Argument	"""2's complement, big endian"""		1327959	0					
ANR	1327998	PrimaryExpression	"""2's complement, big endian"""		1327959	0					
ANR	1327999	Label	default :	2085:1:59789:59796	1327959	6	True				
ANR	1328000	Identifier	default		1327959	0					
ANR	1328001	ReturnStatement	"return r_str_newf ( ""<unknown: %x>"" , bin -> ehdr . e_ident [ EI_DATA ] ) ;"	2085:10:59798:59861	1327959	7	True				
ANR	1328002	CallExpression	"r_str_newf ( ""<unknown: %x>"" , bin -> ehdr . e_ident [ EI_DATA ] )"		1327959	0					
ANR	1328003	Callee	r_str_newf		1327959	0					
ANR	1328004	Identifier	r_str_newf		1327959	0					
ANR	1328005	ArgumentList	"""<unknown: %x>"""		1327959	1					
ANR	1328006	Argument	"""<unknown: %x>"""		1327959	0					
ANR	1328007	PrimaryExpression	"""<unknown: %x>"""		1327959	0					
ANR	1328008	Argument	bin -> ehdr . e_ident [ EI_DATA ]		1327959	1					
ANR	1328009	ArrayIndexing	bin -> ehdr . e_ident [ EI_DATA ]		1327959	0					
ANR	1328010	MemberAccess	bin -> ehdr . e_ident		1327959	0					
ANR	1328011	PtrMemberAccess	bin -> ehdr		1327959	0					
ANR	1328012	Identifier	bin		1327959	0					
ANR	1328013	Identifier	ehdr		1327959	1					
ANR	1328014	Identifier	e_ident		1327959	1					
ANR	1328015	Identifier	EI_DATA		1327959	1					
ANR	1328016	ReturnType	Elf_		1327959	1					
ANR	1328017	Identifier	( r_bin_elf_get_data_encoding )		1327959	2					
ANR	1328018	Identifier	r_bin_elf_get_data_encoding		1327959	3					
ANR	1328019	ParameterList	ELFOBJ * bin		1327959	4					
ANR	1328020	Parameter	ELFOBJ * bin	2080:40:59558:59568	1327959	0	True				
ANR	1328021	ParameterType	ELFOBJ *		1327959	0					
ANR	1328022	Identifier	bin		1327959	1					
ANR	1328023	CFGEntryNode	ENTRY		1327959		True				
ANR	1328024	CFGExitNode	EXIT		1327959		True				
ANR	1328025	Symbol	* EI_DATA		1327959						
ANR	1328026	Symbol	* bin -> ehdr		1327959						
ANR	1328027	Symbol	bin		1327959						
ANR	1328028	Symbol	bin -> ehdr . e_ident		1327959						
ANR	1328029	Symbol	bin -> ehdr		1327959						
ANR	1328030	Symbol	* * bin		1327959						
ANR	1328031	Symbol	strdup		1327959						
ANR	1328032	Symbol	r_str_newf		1327959						
ANR	1328033	Symbol	* bin -> ehdr . e_ident		1327959						
ANR	1328034	Symbol	* bin		1327959						
ANR	1328035	Symbol	EI_DATA		1327959						
ANR	1328036	Function	r_bin_elf_has_va	2089:0:59869:59925							
ANR	1328037	FunctionDef	r_bin_elf_has_va (ELFOBJ * bin)		1328036	0					
ANR	1328038	CompoundStatement		2089:40:59909:59925	1328036	0					
ANR	1328039	ReturnStatement	return true ;	2090:1:59912:59923	1328036	0	True				
ANR	1328040	Identifier	true		1328036	0					
ANR	1328041	ReturnType	int Elf_		1328036	1					
ANR	1328042	Identifier	( r_bin_elf_has_va )		1328036	2					
ANR	1328043	Identifier	r_bin_elf_has_va		1328036	3					
ANR	1328044	ParameterList	ELFOBJ * bin		1328036	4					
ANR	1328045	Parameter	ELFOBJ * bin	2089:27:59896:59906	1328036	0	True				
ANR	1328046	ParameterType	ELFOBJ *		1328036	0					
ANR	1328047	Identifier	bin		1328036	1					
ANR	1328048	CFGEntryNode	ENTRY		1328036		True				
ANR	1328049	CFGExitNode	EXIT		1328036		True				
ANR	1328050	Symbol	bin		1328036						
ANR	1328051	Symbol	true		1328036						
ANR	1328052	Function	r_bin_elf_get_arch	2093:6:59934:61273							
ANR	1328053	FunctionDef	r_bin_elf_get_arch (ELFOBJ * bin)		1328052	0					
ANR	1328054	CompoundStatement		2093:44:59972:61273	1328052	0					
ANR	1328055	SwitchStatement	switch ( bin -> ehdr . e_machine )		1328052	0					
ANR	1328056	Condition	bin -> ehdr . e_machine	2094:9:59983:60001	1328052	0	True				
ANR	1328057	MemberAccess	bin -> ehdr . e_machine		1328052	0					
ANR	1328058	PtrMemberAccess	bin -> ehdr		1328052	0					
ANR	1328059	Identifier	bin		1328052	0					
ANR	1328060	Identifier	ehdr		1328052	1					
ANR	1328061	Identifier	e_machine		1328052	1					
ANR	1328062	CompoundStatement		2:30:31:31	1328052	1					
ANR	1328063	Label	case EM_ARC :	2095:1:60007:60018	1328052	0	True				
ANR	1328064	Identifier	EM_ARC		1328052	0					
ANR	1328065	Label	case EM_ARC_A5 :	2096:1:60021:60035	1328052	1	True				
ANR	1328066	Identifier	EM_ARC_A5		1328052	0					
ANR	1328067	ReturnStatement	"return strdup ( ""arc"" ) ;"	2097:2:60039:60060	1328052	2	True				
ANR	1328068	CallExpression	"strdup ( ""arc"" )"		1328052	0					
ANR	1328069	Callee	strdup		1328052	0					
ANR	1328070	Identifier	strdup		1328052	0					
ANR	1328071	ArgumentList	"""arc"""		1328052	1					
ANR	1328072	Argument	"""arc"""		1328052	0					
ANR	1328073	PrimaryExpression	"""arc"""		1328052	0					
ANR	1328074	Label	case EM_AVR :	2098:1:60063:60074	1328052	3	True				
ANR	1328075	Identifier	EM_AVR		1328052	0					
ANR	1328076	ReturnStatement	"return strdup ( ""avr"" ) ;"	2098:14:60076:60097	1328052	4	True				
ANR	1328077	CallExpression	"strdup ( ""avr"" )"		1328052	0					
ANR	1328078	Callee	strdup		1328052	0					
ANR	1328079	Identifier	strdup		1328052	0					
ANR	1328080	ArgumentList	"""avr"""		1328052	1					
ANR	1328081	Argument	"""avr"""		1328052	0					
ANR	1328082	PrimaryExpression	"""avr"""		1328052	0					
ANR	1328083	Label	case EM_CRIS :	2099:1:60100:60112	1328052	5	True				
ANR	1328084	Identifier	EM_CRIS		1328052	0					
ANR	1328085	ReturnStatement	"return strdup ( ""cris"" ) ;"	2099:15:60114:60136	1328052	6	True				
ANR	1328086	CallExpression	"strdup ( ""cris"" )"		1328052	0					
ANR	1328087	Callee	strdup		1328052	0					
ANR	1328088	Identifier	strdup		1328052	0					
ANR	1328089	ArgumentList	"""cris"""		1328052	1					
ANR	1328090	Argument	"""cris"""		1328052	0					
ANR	1328091	PrimaryExpression	"""cris"""		1328052	0					
ANR	1328092	Label	case EM_68K :	2100:1:60139:60150	1328052	7	True				
ANR	1328093	Identifier	EM_68K		1328052	0					
ANR	1328094	ReturnStatement	"return strdup ( ""m68k"" ) ;"	2100:14:60152:60174	1328052	8	True				
ANR	1328095	CallExpression	"strdup ( ""m68k"" )"		1328052	0					
ANR	1328096	Callee	strdup		1328052	0					
ANR	1328097	Identifier	strdup		1328052	0					
ANR	1328098	ArgumentList	"""m68k"""		1328052	1					
ANR	1328099	Argument	"""m68k"""		1328052	0					
ANR	1328100	PrimaryExpression	"""m68k"""		1328052	0					
ANR	1328101	Label	case EM_MIPS :	2101:1:60177:60189	1328052	9	True				
ANR	1328102	Identifier	EM_MIPS		1328052	0					
ANR	1328103	Label	case EM_MIPS_RS3_LE :	2102:1:60192:60211	1328052	10	True				
ANR	1328104	Identifier	EM_MIPS_RS3_LE		1328052	0					
ANR	1328105	Label	case EM_MIPS_X :	2103:1:60214:60228	1328052	11	True				
ANR	1328106	Identifier	EM_MIPS_X		1328052	0					
ANR	1328107	ReturnStatement	"return strdup ( ""mips"" ) ;"	2104:2:60232:60254	1328052	12	True				
ANR	1328108	CallExpression	"strdup ( ""mips"" )"		1328052	0					
ANR	1328109	Callee	strdup		1328052	0					
ANR	1328110	Identifier	strdup		1328052	0					
ANR	1328111	ArgumentList	"""mips"""		1328052	1					
ANR	1328112	Argument	"""mips"""		1328052	0					
ANR	1328113	PrimaryExpression	"""mips"""		1328052	0					
ANR	1328114	Label	case EM_MCST_ELBRUS :	2105:1:60257:60276	1328052	13	True				
ANR	1328115	Identifier	EM_MCST_ELBRUS		1328052	0					
ANR	1328116	ReturnStatement	"return strdup ( ""elbrus"" ) ;"	2106:2:60280:60304	1328052	14	True				
ANR	1328117	CallExpression	"strdup ( ""elbrus"" )"		1328052	0					
ANR	1328118	Callee	strdup		1328052	0					
ANR	1328119	Identifier	strdup		1328052	0					
ANR	1328120	ArgumentList	"""elbrus"""		1328052	1					
ANR	1328121	Argument	"""elbrus"""		1328052	0					
ANR	1328122	PrimaryExpression	"""elbrus"""		1328052	0					
ANR	1328123	Label	case EM_TRICORE :	2107:1:60307:60322	1328052	15	True				
ANR	1328124	Identifier	EM_TRICORE		1328052	0					
ANR	1328125	ReturnStatement	"return strdup ( ""tricore"" ) ;"	2108:2:60326:60351	1328052	16	True				
ANR	1328126	CallExpression	"strdup ( ""tricore"" )"		1328052	0					
ANR	1328127	Callee	strdup		1328052	0					
ANR	1328128	Identifier	strdup		1328052	0					
ANR	1328129	ArgumentList	"""tricore"""		1328052	1					
ANR	1328130	Argument	"""tricore"""		1328052	0					
ANR	1328131	PrimaryExpression	"""tricore"""		1328052	0					
ANR	1328132	Label	case EM_RCE :	2109:1:60354:60365	1328052	17	True				
ANR	1328133	Identifier	EM_RCE		1328052	0					
ANR	1328134	ReturnStatement	"return strdup ( ""mcore"" ) ;"	2110:2:60369:60392	1328052	18	True				
ANR	1328135	CallExpression	"strdup ( ""mcore"" )"		1328052	0					
ANR	1328136	Callee	strdup		1328052	0					
ANR	1328137	Identifier	strdup		1328052	0					
ANR	1328138	ArgumentList	"""mcore"""		1328052	1					
ANR	1328139	Argument	"""mcore"""		1328052	0					
ANR	1328140	PrimaryExpression	"""mcore"""		1328052	0					
ANR	1328141	Label	case EM_ARM :	2111:1:60395:60406	1328052	19	True				
ANR	1328142	Identifier	EM_ARM		1328052	0					
ANR	1328143	Label	case EM_AARCH64 :	2112:1:60409:60424	1328052	20	True				
ANR	1328144	Identifier	EM_AARCH64		1328052	0					
ANR	1328145	ReturnStatement	"return strdup ( ""arm"" ) ;"	2113:2:60428:60449	1328052	21	True				
ANR	1328146	CallExpression	"strdup ( ""arm"" )"		1328052	0					
ANR	1328147	Callee	strdup		1328052	0					
ANR	1328148	Identifier	strdup		1328052	0					
ANR	1328149	ArgumentList	"""arm"""		1328052	1					
ANR	1328150	Argument	"""arm"""		1328052	0					
ANR	1328151	PrimaryExpression	"""arm"""		1328052	0					
ANR	1328152	Label	case EM_HEXAGON :	2114:1:60452:60467	1328052	22	True				
ANR	1328153	Identifier	EM_HEXAGON		1328052	0					
ANR	1328154	ReturnStatement	"return strdup ( ""hexagon"" ) ;"	2115:2:60471:60496	1328052	23	True				
ANR	1328155	CallExpression	"strdup ( ""hexagon"" )"		1328052	0					
ANR	1328156	Callee	strdup		1328052	0					
ANR	1328157	Identifier	strdup		1328052	0					
ANR	1328158	ArgumentList	"""hexagon"""		1328052	1					
ANR	1328159	Argument	"""hexagon"""		1328052	0					
ANR	1328160	PrimaryExpression	"""hexagon"""		1328052	0					
ANR	1328161	Label	case EM_BLACKFIN :	2116:1:60499:60515	1328052	24	True				
ANR	1328162	Identifier	EM_BLACKFIN		1328052	0					
ANR	1328163	ReturnStatement	"return strdup ( ""blackfin"" ) ;"	2117:2:60519:60545	1328052	25	True				
ANR	1328164	CallExpression	"strdup ( ""blackfin"" )"		1328052	0					
ANR	1328165	Callee	strdup		1328052	0					
ANR	1328166	Identifier	strdup		1328052	0					
ANR	1328167	ArgumentList	"""blackfin"""		1328052	1					
ANR	1328168	Argument	"""blackfin"""		1328052	0					
ANR	1328169	PrimaryExpression	"""blackfin"""		1328052	0					
ANR	1328170	Label	case EM_SPARC :	2118:1:60548:60561	1328052	26	True				
ANR	1328171	Identifier	EM_SPARC		1328052	0					
ANR	1328172	Label	case EM_SPARC32PLUS :	2119:1:60564:60583	1328052	27	True				
ANR	1328173	Identifier	EM_SPARC32PLUS		1328052	0					
ANR	1328174	Label	case EM_SPARCV9 :	2120:1:60586:60601	1328052	28	True				
ANR	1328175	Identifier	EM_SPARCV9		1328052	0					
ANR	1328176	ReturnStatement	"return strdup ( ""sparc"" ) ;"	2121:2:60605:60628	1328052	29	True				
ANR	1328177	CallExpression	"strdup ( ""sparc"" )"		1328052	0					
ANR	1328178	Callee	strdup		1328052	0					
ANR	1328179	Identifier	strdup		1328052	0					
ANR	1328180	ArgumentList	"""sparc"""		1328052	1					
ANR	1328181	Argument	"""sparc"""		1328052	0					
ANR	1328182	PrimaryExpression	"""sparc"""		1328052	0					
ANR	1328183	Label	case EM_PPC :	2122:1:60631:60642	1328052	30	True				
ANR	1328184	Identifier	EM_PPC		1328052	0					
ANR	1328185	Label	case EM_PPC64 :	2123:1:60645:60658	1328052	31	True				
ANR	1328186	Identifier	EM_PPC64		1328052	0					
ANR	1328187	ReturnStatement	"return strdup ( ""ppc"" ) ;"	2124:2:60662:60683	1328052	32	True				
ANR	1328188	CallExpression	"strdup ( ""ppc"" )"		1328052	0					
ANR	1328189	Callee	strdup		1328052	0					
ANR	1328190	Identifier	strdup		1328052	0					
ANR	1328191	ArgumentList	"""ppc"""		1328052	1					
ANR	1328192	Argument	"""ppc"""		1328052	0					
ANR	1328193	PrimaryExpression	"""ppc"""		1328052	0					
ANR	1328194	Label	case EM_PARISC :	2125:1:60686:60700	1328052	33	True				
ANR	1328195	Identifier	EM_PARISC		1328052	0					
ANR	1328196	ReturnStatement	"return strdup ( ""hppa"" ) ;"	2126:2:60704:60726	1328052	34	True				
ANR	1328197	CallExpression	"strdup ( ""hppa"" )"		1328052	0					
ANR	1328198	Callee	strdup		1328052	0					
ANR	1328199	Identifier	strdup		1328052	0					
ANR	1328200	ArgumentList	"""hppa"""		1328052	1					
ANR	1328201	Argument	"""hppa"""		1328052	0					
ANR	1328202	PrimaryExpression	"""hppa"""		1328052	0					
ANR	1328203	Label	case EM_PROPELLER :	2127:1:60729:60746	1328052	35	True				
ANR	1328204	Identifier	EM_PROPELLER		1328052	0					
ANR	1328205	ReturnStatement	"return strdup ( ""propeller"" ) ;"	2128:2:60750:60777	1328052	36	True				
ANR	1328206	CallExpression	"strdup ( ""propeller"" )"		1328052	0					
ANR	1328207	Callee	strdup		1328052	0					
ANR	1328208	Identifier	strdup		1328052	0					
ANR	1328209	ArgumentList	"""propeller"""		1328052	1					
ANR	1328210	Argument	"""propeller"""		1328052	0					
ANR	1328211	PrimaryExpression	"""propeller"""		1328052	0					
ANR	1328212	Label	case EM_MICROBLAZE :	2129:1:60780:60798	1328052	37	True				
ANR	1328213	Identifier	EM_MICROBLAZE		1328052	0					
ANR	1328214	ReturnStatement	"return strdup ( ""microblaze.gnu"" ) ;"	2130:2:60802:60834	1328052	38	True				
ANR	1328215	CallExpression	"strdup ( ""microblaze.gnu"" )"		1328052	0					
ANR	1328216	Callee	strdup		1328052	0					
ANR	1328217	Identifier	strdup		1328052	0					
ANR	1328218	ArgumentList	"""microblaze.gnu"""		1328052	1					
ANR	1328219	Argument	"""microblaze.gnu"""		1328052	0					
ANR	1328220	PrimaryExpression	"""microblaze.gnu"""		1328052	0					
ANR	1328221	Label	case EM_RISCV :	2131:1:60837:60850	1328052	39	True				
ANR	1328222	Identifier	EM_RISCV		1328052	0					
ANR	1328223	ReturnStatement	"return strdup ( ""riscv"" ) ;"	2132:2:60854:60877	1328052	40	True				
ANR	1328224	CallExpression	"strdup ( ""riscv"" )"		1328052	0					
ANR	1328225	Callee	strdup		1328052	0					
ANR	1328226	Identifier	strdup		1328052	0					
ANR	1328227	ArgumentList	"""riscv"""		1328052	1					
ANR	1328228	Argument	"""riscv"""		1328052	0					
ANR	1328229	PrimaryExpression	"""riscv"""		1328052	0					
ANR	1328230	Label	case EM_VAX :	2133:1:60880:60891	1328052	41	True				
ANR	1328231	Identifier	EM_VAX		1328052	0					
ANR	1328232	ReturnStatement	"return strdup ( ""vax"" ) ;"	2134:2:60895:60916	1328052	42	True				
ANR	1328233	CallExpression	"strdup ( ""vax"" )"		1328052	0					
ANR	1328234	Callee	strdup		1328052	0					
ANR	1328235	Identifier	strdup		1328052	0					
ANR	1328236	ArgumentList	"""vax"""		1328052	1					
ANR	1328237	Argument	"""vax"""		1328052	0					
ANR	1328238	PrimaryExpression	"""vax"""		1328052	0					
ANR	1328239	Label	case EM_XTENSA :	2135:1:60919:60933	1328052	43	True				
ANR	1328240	Identifier	EM_XTENSA		1328052	0					
ANR	1328241	ReturnStatement	"return strdup ( ""xtensa"" ) ;"	2136:2:60937:60961	1328052	44	True				
ANR	1328242	CallExpression	"strdup ( ""xtensa"" )"		1328052	0					
ANR	1328243	Callee	strdup		1328052	0					
ANR	1328244	Identifier	strdup		1328052	0					
ANR	1328245	ArgumentList	"""xtensa"""		1328052	1					
ANR	1328246	Argument	"""xtensa"""		1328052	0					
ANR	1328247	PrimaryExpression	"""xtensa"""		1328052	0					
ANR	1328248	Label	case EM_LANAI :	2137:1:60964:60977	1328052	45	True				
ANR	1328249	Identifier	EM_LANAI		1328052	0					
ANR	1328250	ReturnStatement	"return strdup ( ""lanai"" ) ;"	2138:2:60981:61004	1328052	46	True				
ANR	1328251	CallExpression	"strdup ( ""lanai"" )"		1328052	0					
ANR	1328252	Callee	strdup		1328052	0					
ANR	1328253	Identifier	strdup		1328052	0					
ANR	1328254	ArgumentList	"""lanai"""		1328052	1					
ANR	1328255	Argument	"""lanai"""		1328052	0					
ANR	1328256	PrimaryExpression	"""lanai"""		1328052	0					
ANR	1328257	Label	case EM_VIDEOCORE3 :	2139:1:61007:61025	1328052	47	True				
ANR	1328258	Identifier	EM_VIDEOCORE3		1328052	0					
ANR	1328259	Label	case EM_VIDEOCORE4 :	2140:1:61028:61046	1328052	48	True				
ANR	1328260	Identifier	EM_VIDEOCORE4		1328052	0					
ANR	1328261	ReturnStatement	"return strdup ( ""vc4"" ) ;"	2141:2:61050:61071	1328052	49	True				
ANR	1328262	CallExpression	"strdup ( ""vc4"" )"		1328052	0					
ANR	1328263	Callee	strdup		1328052	0					
ANR	1328264	Identifier	strdup		1328052	0					
ANR	1328265	ArgumentList	"""vc4"""		1328052	1					
ANR	1328266	Argument	"""vc4"""		1328052	0					
ANR	1328267	PrimaryExpression	"""vc4"""		1328052	0					
ANR	1328268	Label	case EM_MSP430 :	2142:1:61074:61088	1328052	50	True				
ANR	1328269	Identifier	EM_MSP430		1328052	0					
ANR	1328270	ReturnStatement	"return strdup ( ""msp430"" ) ;"	2143:2:61092:61116	1328052	51	True				
ANR	1328271	CallExpression	"strdup ( ""msp430"" )"		1328052	0					
ANR	1328272	Callee	strdup		1328052	0					
ANR	1328273	Identifier	strdup		1328052	0					
ANR	1328274	ArgumentList	"""msp430"""		1328052	1					
ANR	1328275	Argument	"""msp430"""		1328052	0					
ANR	1328276	PrimaryExpression	"""msp430"""		1328052	0					
ANR	1328277	Label	case EM_SH :	2144:1:61119:61129	1328052	52	True				
ANR	1328278	Identifier	EM_SH		1328052	0					
ANR	1328279	ReturnStatement	"return strdup ( ""sh"" ) ;"	2145:2:61133:61153	1328052	53	True				
ANR	1328280	CallExpression	"strdup ( ""sh"" )"		1328052	0					
ANR	1328281	Callee	strdup		1328052	0					
ANR	1328282	Identifier	strdup		1328052	0					
ANR	1328283	ArgumentList	"""sh"""		1328052	1					
ANR	1328284	Argument	"""sh"""		1328052	0					
ANR	1328285	PrimaryExpression	"""sh"""		1328052	0					
ANR	1328286	Label	case EM_V850 :	2146:1:61156:61168	1328052	54	True				
ANR	1328287	Identifier	EM_V850		1328052	0					
ANR	1328288	ReturnStatement	"return strdup ( ""v850"" ) ;"	2147:2:61172:61194	1328052	55	True				
ANR	1328289	CallExpression	"strdup ( ""v850"" )"		1328052	0					
ANR	1328290	Callee	strdup		1328052	0					
ANR	1328291	Identifier	strdup		1328052	0					
ANR	1328292	ArgumentList	"""v850"""		1328052	1					
ANR	1328293	Argument	"""v850"""		1328052	0					
ANR	1328294	PrimaryExpression	"""v850"""		1328052	0					
ANR	1328295	Label	case EM_IA_64 :	2148:1:61197:61210	1328052	56	True				
ANR	1328296	Identifier	EM_IA_64		1328052	0					
ANR	1328297	ReturnStatement	"return strdup ( ""ia64"" ) ;"	2149:2:61214:61235	1328052	57	True				
ANR	1328298	CallExpression	"strdup ( ""ia64"" )"		1328052	0					
ANR	1328299	Callee	strdup		1328052	0					
ANR	1328300	Identifier	strdup		1328052	0					
ANR	1328301	ArgumentList	"""ia64"""		1328052	1					
ANR	1328302	Argument	"""ia64"""		1328052	0					
ANR	1328303	PrimaryExpression	"""ia64"""		1328052	0					
ANR	1328304	Label	default :	2150:1:61238:61245	1328052	58	True				
ANR	1328305	Identifier	default		1328052	0					
ANR	1328306	ReturnStatement	"return strdup ( ""x86"" ) ;"	2150:10:61247:61268	1328052	59	True				
ANR	1328307	CallExpression	"strdup ( ""x86"" )"		1328052	0					
ANR	1328308	Callee	strdup		1328052	0					
ANR	1328309	Identifier	strdup		1328052	0					
ANR	1328310	ArgumentList	"""x86"""		1328052	1					
ANR	1328311	Argument	"""x86"""		1328052	0					
ANR	1328312	PrimaryExpression	"""x86"""		1328052	0					
ANR	1328313	ReturnType	Elf_		1328052	1					
ANR	1328314	Identifier	( r_bin_elf_get_arch )		1328052	2					
ANR	1328315	Identifier	r_bin_elf_get_arch		1328052	3					
ANR	1328316	ParameterList	ELFOBJ * bin		1328052	4					
ANR	1328317	Parameter	ELFOBJ * bin	2093:31:59959:59969	1328052	0	True				
ANR	1328318	ParameterType	ELFOBJ *		1328052	0					
ANR	1328319	Identifier	bin		1328052	1					
ANR	1328320	CFGEntryNode	ENTRY		1328052		True				
ANR	1328321	CFGExitNode	EXIT		1328052		True				
ANR	1328322	Symbol	bin		1328052						
ANR	1328323	Symbol	bin -> ehdr		1328052						
ANR	1328324	Symbol	bin -> ehdr . e_machine		1328052						
ANR	1328325	Symbol	strdup		1328052						
ANR	1328326	Symbol	* bin		1328052						
ANR	1328327	Function	r_bin_elf_get_machine_name	2156:6:61345:72509							
ANR	1328328	FunctionDef	r_bin_elf_get_machine_name (ELFOBJ * bin)		1328327	0					
ANR	1328329	CompoundStatement		2156:52:61391:72509	1328327	0					
ANR	1328330	SwitchStatement	switch ( bin -> ehdr . e_machine )		1328327	0					
ANR	1328331	Condition	bin -> ehdr . e_machine	2157:9:61402:61420	1328327	0	True				
ANR	1328332	MemberAccess	bin -> ehdr . e_machine		1328327	0					
ANR	1328333	PtrMemberAccess	bin -> ehdr		1328327	0					
ANR	1328334	Identifier	bin		1328327	0					
ANR	1328335	Identifier	ehdr		1328327	1					
ANR	1328336	Identifier	e_machine		1328327	1					
ANR	1328337	CompoundStatement		2:30:31:31	1328327	1					
ANR	1328338	Label	case EM_NONE :	2158:1:61426:61438	1328327	0	True				
ANR	1328339	Identifier	EM_NONE		1328327	0					
ANR	1328340	ReturnStatement	"return strdup ( ""No machine"" ) ;"	2158:24:61449:61477	1328327	1	True				
ANR	1328341	CallExpression	"strdup ( ""No machine"" )"		1328327	0					
ANR	1328342	Callee	strdup		1328327	0					
ANR	1328343	Identifier	strdup		1328327	0					
ANR	1328344	ArgumentList	"""No machine"""		1328327	1					
ANR	1328345	Argument	"""No machine"""		1328327	0					
ANR	1328346	PrimaryExpression	"""No machine"""		1328327	0					
ANR	1328347	Label	case EM_M32 :	2159:1:61480:61491	1328327	2	True				
ANR	1328348	Identifier	EM_M32		1328327	0					
ANR	1328349	ReturnStatement	"return strdup ( ""AT&T WE 32100"" ) ;"	2159:24:61503:61534	1328327	3	True				
ANR	1328350	CallExpression	"strdup ( ""AT&T WE 32100"" )"		1328327	0					
ANR	1328351	Callee	strdup		1328327	0					
ANR	1328352	Identifier	strdup		1328327	0					
ANR	1328353	ArgumentList	"""AT&T WE 32100"""		1328327	1					
ANR	1328354	Argument	"""AT&T WE 32100"""		1328327	0					
ANR	1328355	PrimaryExpression	"""AT&T WE 32100"""		1328327	0					
ANR	1328356	Label	case EM_SPARC :	2160:1:61537:61550	1328327	4	True				
ANR	1328357	Identifier	EM_SPARC		1328327	0					
ANR	1328358	ReturnStatement	"return strdup ( ""SUN SPARC"" ) ;"	2160:24:61560:61587	1328327	5	True				
ANR	1328359	CallExpression	"strdup ( ""SUN SPARC"" )"		1328327	0					
ANR	1328360	Callee	strdup		1328327	0					
ANR	1328361	Identifier	strdup		1328327	0					
ANR	1328362	ArgumentList	"""SUN SPARC"""		1328327	1					
ANR	1328363	Argument	"""SUN SPARC"""		1328327	0					
ANR	1328364	PrimaryExpression	"""SUN SPARC"""		1328327	0					
ANR	1328365	Label	case EM_386 :	2161:1:61590:61601	1328327	6	True				
ANR	1328366	Identifier	EM_386		1328327	0					
ANR	1328367	ReturnStatement	"return strdup ( ""Intel 80386"" ) ;"	2161:24:61613:61642	1328327	7	True				
ANR	1328368	CallExpression	"strdup ( ""Intel 80386"" )"		1328327	0					
ANR	1328369	Callee	strdup		1328327	0					
ANR	1328370	Identifier	strdup		1328327	0					
ANR	1328371	ArgumentList	"""Intel 80386"""		1328327	1					
ANR	1328372	Argument	"""Intel 80386"""		1328327	0					
ANR	1328373	PrimaryExpression	"""Intel 80386"""		1328327	0					
ANR	1328374	Label	case EM_68K :	2162:1:61645:61656	1328327	8	True				
ANR	1328375	Identifier	EM_68K		1328327	0					
ANR	1328376	ReturnStatement	"return strdup ( ""Motorola m68k family"" ) ;"	2162:24:61668:61706	1328327	9	True				
ANR	1328377	CallExpression	"strdup ( ""Motorola m68k family"" )"		1328327	0					
ANR	1328378	Callee	strdup		1328327	0					
ANR	1328379	Identifier	strdup		1328327	0					
ANR	1328380	ArgumentList	"""Motorola m68k family"""		1328327	1					
ANR	1328381	Argument	"""Motorola m68k family"""		1328327	0					
ANR	1328382	PrimaryExpression	"""Motorola m68k family"""		1328327	0					
ANR	1328383	Label	case EM_88K :	2163:1:61709:61720	1328327	10	True				
ANR	1328384	Identifier	EM_88K		1328327	0					
ANR	1328385	ReturnStatement	"return strdup ( ""Motorola m88k family"" ) ;"	2163:24:61732:61770	1328327	11	True				
ANR	1328386	CallExpression	"strdup ( ""Motorola m88k family"" )"		1328327	0					
ANR	1328387	Callee	strdup		1328327	0					
ANR	1328388	Identifier	strdup		1328327	0					
ANR	1328389	ArgumentList	"""Motorola m88k family"""		1328327	1					
ANR	1328390	Argument	"""Motorola m88k family"""		1328327	0					
ANR	1328391	PrimaryExpression	"""Motorola m88k family"""		1328327	0					
ANR	1328392	Label	case EM_860 :	2164:1:61773:61784	1328327	12	True				
ANR	1328393	Identifier	EM_860		1328327	0					
ANR	1328394	ReturnStatement	"return strdup ( ""Intel 80860"" ) ;"	2164:24:61796:61825	1328327	13	True				
ANR	1328395	CallExpression	"strdup ( ""Intel 80860"" )"		1328327	0					
ANR	1328396	Callee	strdup		1328327	0					
ANR	1328397	Identifier	strdup		1328327	0					
ANR	1328398	ArgumentList	"""Intel 80860"""		1328327	1					
ANR	1328399	Argument	"""Intel 80860"""		1328327	0					
ANR	1328400	PrimaryExpression	"""Intel 80860"""		1328327	0					
ANR	1328401	Label	case EM_MIPS :	2165:1:61828:61840	1328327	14	True				
ANR	1328402	Identifier	EM_MIPS		1328327	0					
ANR	1328403	ReturnStatement	"return strdup ( ""MIPS R3000"" ) ;"	2165:24:61851:61879	1328327	15	True				
ANR	1328404	CallExpression	"strdup ( ""MIPS R3000"" )"		1328327	0					
ANR	1328405	Callee	strdup		1328327	0					
ANR	1328406	Identifier	strdup		1328327	0					
ANR	1328407	ArgumentList	"""MIPS R3000"""		1328327	1					
ANR	1328408	Argument	"""MIPS R3000"""		1328327	0					
ANR	1328409	PrimaryExpression	"""MIPS R3000"""		1328327	0					
ANR	1328410	Label	case EM_S370 :	2166:1:61882:61894	1328327	16	True				
ANR	1328411	Identifier	EM_S370		1328327	0					
ANR	1328412	ReturnStatement	"return strdup ( ""IBM System/370"" ) ;"	2166:24:61905:61937	1328327	17	True				
ANR	1328413	CallExpression	"strdup ( ""IBM System/370"" )"		1328327	0					
ANR	1328414	Callee	strdup		1328327	0					
ANR	1328415	Identifier	strdup		1328327	0					
ANR	1328416	ArgumentList	"""IBM System/370"""		1328327	1					
ANR	1328417	Argument	"""IBM System/370"""		1328327	0					
ANR	1328418	PrimaryExpression	"""IBM System/370"""		1328327	0					
ANR	1328419	Label	case EM_MIPS_RS3_LE :	2167:1:61940:61959	1328327	18	True				
ANR	1328420	Identifier	EM_MIPS_RS3_LE		1328327	0					
ANR	1328421	ReturnStatement	"return strdup ( ""MIPS R3000 little-endian"" ) ;"	2167:24:61963:62005	1328327	19	True				
ANR	1328422	CallExpression	"strdup ( ""MIPS R3000 little-endian"" )"		1328327	0					
ANR	1328423	Callee	strdup		1328327	0					
ANR	1328424	Identifier	strdup		1328327	0					
ANR	1328425	ArgumentList	"""MIPS R3000 little-endian"""		1328327	1					
ANR	1328426	Argument	"""MIPS R3000 little-endian"""		1328327	0					
ANR	1328427	PrimaryExpression	"""MIPS R3000 little-endian"""		1328327	0					
ANR	1328428	Label	case EM_PARISC :	2168:1:62008:62022	1328327	20	True				
ANR	1328429	Identifier	EM_PARISC		1328327	0					
ANR	1328430	ReturnStatement	"return strdup ( ""HPPA"" ) ;"	2168:24:62031:62053	1328327	21	True				
ANR	1328431	CallExpression	"strdup ( ""HPPA"" )"		1328327	0					
ANR	1328432	Callee	strdup		1328327	0					
ANR	1328433	Identifier	strdup		1328327	0					
ANR	1328434	ArgumentList	"""HPPA"""		1328327	1					
ANR	1328435	Argument	"""HPPA"""		1328327	0					
ANR	1328436	PrimaryExpression	"""HPPA"""		1328327	0					
ANR	1328437	Label	case EM_VPP500 :	2169:1:62056:62070	1328327	22	True				
ANR	1328438	Identifier	EM_VPP500		1328327	0					
ANR	1328439	ReturnStatement	"return strdup ( ""Fujitsu VPP500"" ) ;"	2169:24:62079:62111	1328327	23	True				
ANR	1328440	CallExpression	"strdup ( ""Fujitsu VPP500"" )"		1328327	0					
ANR	1328441	Callee	strdup		1328327	0					
ANR	1328442	Identifier	strdup		1328327	0					
ANR	1328443	ArgumentList	"""Fujitsu VPP500"""		1328327	1					
ANR	1328444	Argument	"""Fujitsu VPP500"""		1328327	0					
ANR	1328445	PrimaryExpression	"""Fujitsu VPP500"""		1328327	0					
ANR	1328446	Label	case EM_SPARC32PLUS :	2170:1:62114:62133	1328327	24	True				
ANR	1328447	Identifier	EM_SPARC32PLUS		1328327	0					
ANR	1328448	ReturnStatement	"return strdup ( ""Sun's \\""v8plus\\"""" ) ;"	2170:24:62137:62171	1328327	25	True				
ANR	1328449	CallExpression	"strdup ( ""Sun's \\""v8plus\\"""" )"		1328327	0					
ANR	1328450	Callee	strdup		1328327	0					
ANR	1328451	Identifier	strdup		1328327	0					
ANR	1328452	ArgumentList	"""Sun's \\""v8plus\\"""""		1328327	1					
ANR	1328453	Argument	"""Sun's \\""v8plus\\"""""		1328327	0					
ANR	1328454	PrimaryExpression	"""Sun's \\""v8plus\\"""""		1328327	0					
ANR	1328455	Label	case EM_960 :	2171:1:62174:62185	1328327	26	True				
ANR	1328456	Identifier	EM_960		1328327	0					
ANR	1328457	ReturnStatement	"return strdup ( ""Intel 80960"" ) ;"	2171:24:62197:62226	1328327	27	True				
ANR	1328458	CallExpression	"strdup ( ""Intel 80960"" )"		1328327	0					
ANR	1328459	Callee	strdup		1328327	0					
ANR	1328460	Identifier	strdup		1328327	0					
ANR	1328461	ArgumentList	"""Intel 80960"""		1328327	1					
ANR	1328462	Argument	"""Intel 80960"""		1328327	0					
ANR	1328463	PrimaryExpression	"""Intel 80960"""		1328327	0					
ANR	1328464	Label	case EM_PPC :	2172:1:62229:62240	1328327	28	True				
ANR	1328465	Identifier	EM_PPC		1328327	0					
ANR	1328466	ReturnStatement	"return strdup ( ""PowerPC"" ) ;"	2172:24:62252:62277	1328327	29	True				
ANR	1328467	CallExpression	"strdup ( ""PowerPC"" )"		1328327	0					
ANR	1328468	Callee	strdup		1328327	0					
ANR	1328469	Identifier	strdup		1328327	0					
ANR	1328470	ArgumentList	"""PowerPC"""		1328327	1					
ANR	1328471	Argument	"""PowerPC"""		1328327	0					
ANR	1328472	PrimaryExpression	"""PowerPC"""		1328327	0					
ANR	1328473	Label	case EM_PPC64 :	2173:1:62280:62293	1328327	30	True				
ANR	1328474	Identifier	EM_PPC64		1328327	0					
ANR	1328475	ReturnStatement	"return strdup ( ""PowerPC 64-bit"" ) ;"	2173:24:62303:62335	1328327	31	True				
ANR	1328476	CallExpression	"strdup ( ""PowerPC 64-bit"" )"		1328327	0					
ANR	1328477	Callee	strdup		1328327	0					
ANR	1328478	Identifier	strdup		1328327	0					
ANR	1328479	ArgumentList	"""PowerPC 64-bit"""		1328327	1					
ANR	1328480	Argument	"""PowerPC 64-bit"""		1328327	0					
ANR	1328481	PrimaryExpression	"""PowerPC 64-bit"""		1328327	0					
ANR	1328482	Label	case EM_S390 :	2174:1:62338:62350	1328327	32	True				
ANR	1328483	Identifier	EM_S390		1328327	0					
ANR	1328484	ReturnStatement	"return strdup ( ""IBM S390"" ) ;"	2174:24:62361:62387	1328327	33	True				
ANR	1328485	CallExpression	"strdup ( ""IBM S390"" )"		1328327	0					
ANR	1328486	Callee	strdup		1328327	0					
ANR	1328487	Identifier	strdup		1328327	0					
ANR	1328488	ArgumentList	"""IBM S390"""		1328327	1					
ANR	1328489	Argument	"""IBM S390"""		1328327	0					
ANR	1328490	PrimaryExpression	"""IBM S390"""		1328327	0					
ANR	1328491	Label	case EM_V800 :	2175:1:62390:62402	1328327	34	True				
ANR	1328492	Identifier	EM_V800		1328327	0					
ANR	1328493	ReturnStatement	"return strdup ( ""NEC V800 series"" ) ;"	2175:24:62413:62446	1328327	35	True				
ANR	1328494	CallExpression	"strdup ( ""NEC V800 series"" )"		1328327	0					
ANR	1328495	Callee	strdup		1328327	0					
ANR	1328496	Identifier	strdup		1328327	0					
ANR	1328497	ArgumentList	"""NEC V800 series"""		1328327	1					
ANR	1328498	Argument	"""NEC V800 series"""		1328327	0					
ANR	1328499	PrimaryExpression	"""NEC V800 series"""		1328327	0					
ANR	1328500	Label	case EM_FR20 :	2176:1:62449:62461	1328327	36	True				
ANR	1328501	Identifier	EM_FR20		1328327	0					
ANR	1328502	ReturnStatement	"return strdup ( ""Fujitsu FR20"" ) ;"	2176:24:62472:62502	1328327	37	True				
ANR	1328503	CallExpression	"strdup ( ""Fujitsu FR20"" )"		1328327	0					
ANR	1328504	Callee	strdup		1328327	0					
ANR	1328505	Identifier	strdup		1328327	0					
ANR	1328506	ArgumentList	"""Fujitsu FR20"""		1328327	1					
ANR	1328507	Argument	"""Fujitsu FR20"""		1328327	0					
ANR	1328508	PrimaryExpression	"""Fujitsu FR20"""		1328327	0					
ANR	1328509	Label	case EM_RH32 :	2177:1:62505:62517	1328327	38	True				
ANR	1328510	Identifier	EM_RH32		1328327	0					
ANR	1328511	ReturnStatement	"return strdup ( ""TRW RH-32"" ) ;"	2177:24:62528:62555	1328327	39	True				
ANR	1328512	CallExpression	"strdup ( ""TRW RH-32"" )"		1328327	0					
ANR	1328513	Callee	strdup		1328327	0					
ANR	1328514	Identifier	strdup		1328327	0					
ANR	1328515	ArgumentList	"""TRW RH-32"""		1328327	1					
ANR	1328516	Argument	"""TRW RH-32"""		1328327	0					
ANR	1328517	PrimaryExpression	"""TRW RH-32"""		1328327	0					
ANR	1328518	Label	case EM_RCE :	2178:1:62558:62569	1328327	40	True				
ANR	1328519	Identifier	EM_RCE		1328327	0					
ANR	1328520	ReturnStatement	"return strdup ( ""Motorola RCE"" ) ;"	2178:24:62581:62611	1328327	41	True				
ANR	1328521	CallExpression	"strdup ( ""Motorola RCE"" )"		1328327	0					
ANR	1328522	Callee	strdup		1328327	0					
ANR	1328523	Identifier	strdup		1328327	0					
ANR	1328524	ArgumentList	"""Motorola RCE"""		1328327	1					
ANR	1328525	Argument	"""Motorola RCE"""		1328327	0					
ANR	1328526	PrimaryExpression	"""Motorola RCE"""		1328327	0					
ANR	1328527	Label	case EM_ARM :	2179:1:62614:62625	1328327	42	True				
ANR	1328528	Identifier	EM_ARM		1328327	0					
ANR	1328529	ReturnStatement	"return strdup ( ""ARM"" ) ;"	2179:24:62637:62658	1328327	43	True				
ANR	1328530	CallExpression	"strdup ( ""ARM"" )"		1328327	0					
ANR	1328531	Callee	strdup		1328327	0					
ANR	1328532	Identifier	strdup		1328327	0					
ANR	1328533	ArgumentList	"""ARM"""		1328327	1					
ANR	1328534	Argument	"""ARM"""		1328327	0					
ANR	1328535	PrimaryExpression	"""ARM"""		1328327	0					
ANR	1328536	Label	case EM_BLACKFIN :	2180:1:62661:62677	1328327	44	True				
ANR	1328537	Identifier	EM_BLACKFIN		1328327	0					
ANR	1328538	ReturnStatement	"return strdup ( ""Analog Devices Blackfin"" ) ;"	2180:24:62684:62725	1328327	45	True				
ANR	1328539	CallExpression	"strdup ( ""Analog Devices Blackfin"" )"		1328327	0					
ANR	1328540	Callee	strdup		1328327	0					
ANR	1328541	Identifier	strdup		1328327	0					
ANR	1328542	ArgumentList	"""Analog Devices Blackfin"""		1328327	1					
ANR	1328543	Argument	"""Analog Devices Blackfin"""		1328327	0					
ANR	1328544	PrimaryExpression	"""Analog Devices Blackfin"""		1328327	0					
ANR	1328545	Label	case EM_FAKE_ALPHA :	2181:1:62728:62746	1328327	46	True				
ANR	1328546	Identifier	EM_FAKE_ALPHA		1328327	0					
ANR	1328547	ReturnStatement	"return strdup ( ""Digital Alpha"" ) ;"	2181:24:62751:62782	1328327	47	True				
ANR	1328548	CallExpression	"strdup ( ""Digital Alpha"" )"		1328327	0					
ANR	1328549	Callee	strdup		1328327	0					
ANR	1328550	Identifier	strdup		1328327	0					
ANR	1328551	ArgumentList	"""Digital Alpha"""		1328327	1					
ANR	1328552	Argument	"""Digital Alpha"""		1328327	0					
ANR	1328553	PrimaryExpression	"""Digital Alpha"""		1328327	0					
ANR	1328554	Label	case EM_SH :	2182:1:62785:62795	1328327	48	True				
ANR	1328555	Identifier	EM_SH		1328327	0					
ANR	1328556	ReturnStatement	"return strdup ( ""Hitachi SH"" ) ;"	2182:24:62808:62836	1328327	49	True				
ANR	1328557	CallExpression	"strdup ( ""Hitachi SH"" )"		1328327	0					
ANR	1328558	Callee	strdup		1328327	0					
ANR	1328559	Identifier	strdup		1328327	0					
ANR	1328560	ArgumentList	"""Hitachi SH"""		1328327	1					
ANR	1328561	Argument	"""Hitachi SH"""		1328327	0					
ANR	1328562	PrimaryExpression	"""Hitachi SH"""		1328327	0					
ANR	1328563	Label	case EM_SPARCV9 :	2183:1:62839:62854	1328327	50	True				
ANR	1328564	Identifier	EM_SPARCV9		1328327	0					
ANR	1328565	ReturnStatement	"return strdup ( ""SPARC v9 64-bit"" ) ;"	2183:24:62862:62895	1328327	51	True				
ANR	1328566	CallExpression	"strdup ( ""SPARC v9 64-bit"" )"		1328327	0					
ANR	1328567	Callee	strdup		1328327	0					
ANR	1328568	Identifier	strdup		1328327	0					
ANR	1328569	ArgumentList	"""SPARC v9 64-bit"""		1328327	1					
ANR	1328570	Argument	"""SPARC v9 64-bit"""		1328327	0					
ANR	1328571	PrimaryExpression	"""SPARC v9 64-bit"""		1328327	0					
ANR	1328572	Label	case EM_TRICORE :	2184:1:62898:62913	1328327	52	True				
ANR	1328573	Identifier	EM_TRICORE		1328327	0					
ANR	1328574	ReturnStatement	"return strdup ( ""Siemens Tricore"" ) ;"	2184:24:62921:62954	1328327	53	True				
ANR	1328575	CallExpression	"strdup ( ""Siemens Tricore"" )"		1328327	0					
ANR	1328576	Callee	strdup		1328327	0					
ANR	1328577	Identifier	strdup		1328327	0					
ANR	1328578	ArgumentList	"""Siemens Tricore"""		1328327	1					
ANR	1328579	Argument	"""Siemens Tricore"""		1328327	0					
ANR	1328580	PrimaryExpression	"""Siemens Tricore"""		1328327	0					
ANR	1328581	Label	case EM_ARC :	2185:1:62957:62968	1328327	54	True				
ANR	1328582	Identifier	EM_ARC		1328327	0					
ANR	1328583	ReturnStatement	"return strdup ( ""Argonaut RISC Core"" ) ;"	2185:24:62980:63016	1328327	55	True				
ANR	1328584	CallExpression	"strdup ( ""Argonaut RISC Core"" )"		1328327	0					
ANR	1328585	Callee	strdup		1328327	0					
ANR	1328586	Identifier	strdup		1328327	0					
ANR	1328587	ArgumentList	"""Argonaut RISC Core"""		1328327	1					
ANR	1328588	Argument	"""Argonaut RISC Core"""		1328327	0					
ANR	1328589	PrimaryExpression	"""Argonaut RISC Core"""		1328327	0					
ANR	1328590	Label	case EM_H8_300 :	2186:1:63019:63033	1328327	56	True				
ANR	1328591	Identifier	EM_H8_300		1328327	0					
ANR	1328592	ReturnStatement	"return strdup ( ""Hitachi H8/300"" ) ;"	2186:24:63042:63074	1328327	57	True				
ANR	1328593	CallExpression	"strdup ( ""Hitachi H8/300"" )"		1328327	0					
ANR	1328594	Callee	strdup		1328327	0					
ANR	1328595	Identifier	strdup		1328327	0					
ANR	1328596	ArgumentList	"""Hitachi H8/300"""		1328327	1					
ANR	1328597	Argument	"""Hitachi H8/300"""		1328327	0					
ANR	1328598	PrimaryExpression	"""Hitachi H8/300"""		1328327	0					
ANR	1328599	Label	case EM_H8_300H :	2187:1:63077:63092	1328327	58	True				
ANR	1328600	Identifier	EM_H8_300H		1328327	0					
ANR	1328601	ReturnStatement	"return strdup ( ""Hitachi H8/300H"" ) ;"	2187:24:63100:63133	1328327	59	True				
ANR	1328602	CallExpression	"strdup ( ""Hitachi H8/300H"" )"		1328327	0					
ANR	1328603	Callee	strdup		1328327	0					
ANR	1328604	Identifier	strdup		1328327	0					
ANR	1328605	ArgumentList	"""Hitachi H8/300H"""		1328327	1					
ANR	1328606	Argument	"""Hitachi H8/300H"""		1328327	0					
ANR	1328607	PrimaryExpression	"""Hitachi H8/300H"""		1328327	0					
ANR	1328608	Label	case EM_H8S :	2188:1:63136:63147	1328327	60	True				
ANR	1328609	Identifier	EM_H8S		1328327	0					
ANR	1328610	ReturnStatement	"return strdup ( ""Hitachi H8S"" ) ;"	2188:24:63159:63188	1328327	61	True				
ANR	1328611	CallExpression	"strdup ( ""Hitachi H8S"" )"		1328327	0					
ANR	1328612	Callee	strdup		1328327	0					
ANR	1328613	Identifier	strdup		1328327	0					
ANR	1328614	ArgumentList	"""Hitachi H8S"""		1328327	1					
ANR	1328615	Argument	"""Hitachi H8S"""		1328327	0					
ANR	1328616	PrimaryExpression	"""Hitachi H8S"""		1328327	0					
ANR	1328617	Label	case EM_H8_500 :	2189:1:63191:63205	1328327	62	True				
ANR	1328618	Identifier	EM_H8_500		1328327	0					
ANR	1328619	ReturnStatement	"return strdup ( ""Hitachi H8/500"" ) ;"	2189:24:63214:63246	1328327	63	True				
ANR	1328620	CallExpression	"strdup ( ""Hitachi H8/500"" )"		1328327	0					
ANR	1328621	Callee	strdup		1328327	0					
ANR	1328622	Identifier	strdup		1328327	0					
ANR	1328623	ArgumentList	"""Hitachi H8/500"""		1328327	1					
ANR	1328624	Argument	"""Hitachi H8/500"""		1328327	0					
ANR	1328625	PrimaryExpression	"""Hitachi H8/500"""		1328327	0					
ANR	1328626	Label	case EM_IA_64 :	2190:1:63249:63262	1328327	64	True				
ANR	1328627	Identifier	EM_IA_64		1328327	0					
ANR	1328628	ReturnStatement	"return strdup ( ""Intel Merced"" ) ;"	2190:24:63272:63302	1328327	65	True				
ANR	1328629	CallExpression	"strdup ( ""Intel Merced"" )"		1328327	0					
ANR	1328630	Callee	strdup		1328327	0					
ANR	1328631	Identifier	strdup		1328327	0					
ANR	1328632	ArgumentList	"""Intel Merced"""		1328327	1					
ANR	1328633	Argument	"""Intel Merced"""		1328327	0					
ANR	1328634	PrimaryExpression	"""Intel Merced"""		1328327	0					
ANR	1328635	Label	case EM_MIPS_X :	2191:1:63305:63319	1328327	66	True				
ANR	1328636	Identifier	EM_MIPS_X		1328327	0					
ANR	1328637	ReturnStatement	"return strdup ( ""Stanford MIPS-X"" ) ;"	2191:24:63328:63361	1328327	67	True				
ANR	1328638	CallExpression	"strdup ( ""Stanford MIPS-X"" )"		1328327	0					
ANR	1328639	Callee	strdup		1328327	0					
ANR	1328640	Identifier	strdup		1328327	0					
ANR	1328641	ArgumentList	"""Stanford MIPS-X"""		1328327	1					
ANR	1328642	Argument	"""Stanford MIPS-X"""		1328327	0					
ANR	1328643	PrimaryExpression	"""Stanford MIPS-X"""		1328327	0					
ANR	1328644	Label	case EM_COLDFIRE :	2192:1:63364:63380	1328327	68	True				
ANR	1328645	Identifier	EM_COLDFIRE		1328327	0					
ANR	1328646	ReturnStatement	"return strdup ( ""Motorola Coldfire"" ) ;"	2192:24:63387:63422	1328327	69	True				
ANR	1328647	CallExpression	"strdup ( ""Motorola Coldfire"" )"		1328327	0					
ANR	1328648	Callee	strdup		1328327	0					
ANR	1328649	Identifier	strdup		1328327	0					
ANR	1328650	ArgumentList	"""Motorola Coldfire"""		1328327	1					
ANR	1328651	Argument	"""Motorola Coldfire"""		1328327	0					
ANR	1328652	PrimaryExpression	"""Motorola Coldfire"""		1328327	0					
ANR	1328653	Label	case EM_68HC12 :	2193:1:63425:63439	1328327	70	True				
ANR	1328654	Identifier	EM_68HC12		1328327	0					
ANR	1328655	ReturnStatement	"return strdup ( ""Motorola M68HC12"" ) ;"	2193:24:63448:63482	1328327	71	True				
ANR	1328656	CallExpression	"strdup ( ""Motorola M68HC12"" )"		1328327	0					
ANR	1328657	Callee	strdup		1328327	0					
ANR	1328658	Identifier	strdup		1328327	0					
ANR	1328659	ArgumentList	"""Motorola M68HC12"""		1328327	1					
ANR	1328660	Argument	"""Motorola M68HC12"""		1328327	0					
ANR	1328661	PrimaryExpression	"""Motorola M68HC12"""		1328327	0					
ANR	1328662	Label	case EM_MMA :	2194:1:63485:63496	1328327	72	True				
ANR	1328663	Identifier	EM_MMA		1328327	0					
ANR	1328664	ReturnStatement	"return strdup ( ""Fujitsu MMA Multimedia Accelerator"" ) ;"	2194:24:63508:63560	1328327	73	True				
ANR	1328665	CallExpression	"strdup ( ""Fujitsu MMA Multimedia Accelerator"" )"		1328327	0					
ANR	1328666	Callee	strdup		1328327	0					
ANR	1328667	Identifier	strdup		1328327	0					
ANR	1328668	ArgumentList	"""Fujitsu MMA Multimedia Accelerator"""		1328327	1					
ANR	1328669	Argument	"""Fujitsu MMA Multimedia Accelerator"""		1328327	0					
ANR	1328670	PrimaryExpression	"""Fujitsu MMA Multimedia Accelerator"""		1328327	0					
ANR	1328671	Label	case EM_PCP :	2195:1:63563:63574	1328327	74	True				
ANR	1328672	Identifier	EM_PCP		1328327	0					
ANR	1328673	ReturnStatement	"return strdup ( ""Siemens PCP"" ) ;"	2195:24:63586:63615	1328327	75	True				
ANR	1328674	CallExpression	"strdup ( ""Siemens PCP"" )"		1328327	0					
ANR	1328675	Callee	strdup		1328327	0					
ANR	1328676	Identifier	strdup		1328327	0					
ANR	1328677	ArgumentList	"""Siemens PCP"""		1328327	1					
ANR	1328678	Argument	"""Siemens PCP"""		1328327	0					
ANR	1328679	PrimaryExpression	"""Siemens PCP"""		1328327	0					
ANR	1328680	Label	case EM_NCPU :	2196:1:63618:63630	1328327	76	True				
ANR	1328681	Identifier	EM_NCPU		1328327	0					
ANR	1328682	ReturnStatement	"return strdup ( ""Sony nCPU embeeded RISC"" ) ;"	2196:24:63641:63682	1328327	77	True				
ANR	1328683	CallExpression	"strdup ( ""Sony nCPU embeeded RISC"" )"		1328327	0					
ANR	1328684	Callee	strdup		1328327	0					
ANR	1328685	Identifier	strdup		1328327	0					
ANR	1328686	ArgumentList	"""Sony nCPU embeeded RISC"""		1328327	1					
ANR	1328687	Argument	"""Sony nCPU embeeded RISC"""		1328327	0					
ANR	1328688	PrimaryExpression	"""Sony nCPU embeeded RISC"""		1328327	0					
ANR	1328689	Label	case EM_NDR1 :	2197:1:63685:63697	1328327	78	True				
ANR	1328690	Identifier	EM_NDR1		1328327	0					
ANR	1328691	ReturnStatement	"return strdup ( ""Denso NDR1 microprocessor"" ) ;"	2197:24:63708:63751	1328327	79	True				
ANR	1328692	CallExpression	"strdup ( ""Denso NDR1 microprocessor"" )"		1328327	0					
ANR	1328693	Callee	strdup		1328327	0					
ANR	1328694	Identifier	strdup		1328327	0					
ANR	1328695	ArgumentList	"""Denso NDR1 microprocessor"""		1328327	1					
ANR	1328696	Argument	"""Denso NDR1 microprocessor"""		1328327	0					
ANR	1328697	PrimaryExpression	"""Denso NDR1 microprocessor"""		1328327	0					
ANR	1328698	Label	case EM_STARCORE :	2198:1:63754:63770	1328327	80	True				
ANR	1328699	Identifier	EM_STARCORE		1328327	0					
ANR	1328700	ReturnStatement	"return strdup ( ""Motorola Start*Core processor"" ) ;"	2198:24:63777:63824	1328327	81	True				
ANR	1328701	CallExpression	"strdup ( ""Motorola Start*Core processor"" )"		1328327	0					
ANR	1328702	Callee	strdup		1328327	0					
ANR	1328703	Identifier	strdup		1328327	0					
ANR	1328704	ArgumentList	"""Motorola Start*Core processor"""		1328327	1					
ANR	1328705	Argument	"""Motorola Start*Core processor"""		1328327	0					
ANR	1328706	PrimaryExpression	"""Motorola Start*Core processor"""		1328327	0					
ANR	1328707	Label	case EM_ME16 :	2199:1:63827:63839	1328327	82	True				
ANR	1328708	Identifier	EM_ME16		1328327	0					
ANR	1328709	ReturnStatement	"return strdup ( ""Toyota ME16 processor"" ) ;"	2199:24:63850:63889	1328327	83	True				
ANR	1328710	CallExpression	"strdup ( ""Toyota ME16 processor"" )"		1328327	0					
ANR	1328711	Callee	strdup		1328327	0					
ANR	1328712	Identifier	strdup		1328327	0					
ANR	1328713	ArgumentList	"""Toyota ME16 processor"""		1328327	1					
ANR	1328714	Argument	"""Toyota ME16 processor"""		1328327	0					
ANR	1328715	PrimaryExpression	"""Toyota ME16 processor"""		1328327	0					
ANR	1328716	Label	case EM_ST100 :	2200:1:63892:63905	1328327	84	True				
ANR	1328717	Identifier	EM_ST100		1328327	0					
ANR	1328718	ReturnStatement	"return strdup ( ""STMicroelectronic ST100 processor"" ) ;"	2200:24:63915:63966	1328327	85	True				
ANR	1328719	CallExpression	"strdup ( ""STMicroelectronic ST100 processor"" )"		1328327	0					
ANR	1328720	Callee	strdup		1328327	0					
ANR	1328721	Identifier	strdup		1328327	0					
ANR	1328722	ArgumentList	"""STMicroelectronic ST100 processor"""		1328327	1					
ANR	1328723	Argument	"""STMicroelectronic ST100 processor"""		1328327	0					
ANR	1328724	PrimaryExpression	"""STMicroelectronic ST100 processor"""		1328327	0					
ANR	1328725	Label	case EM_TINYJ :	2201:1:63969:63982	1328327	86	True				
ANR	1328726	Identifier	EM_TINYJ		1328327	0					
ANR	1328727	ReturnStatement	"return strdup ( ""Advanced Logic Corp. Tinyj emb.fam"" ) ;"	2201:24:63992:64044	1328327	87	True				
ANR	1328728	CallExpression	"strdup ( ""Advanced Logic Corp. Tinyj emb.fam"" )"		1328327	0					
ANR	1328729	Callee	strdup		1328327	0					
ANR	1328730	Identifier	strdup		1328327	0					
ANR	1328731	ArgumentList	"""Advanced Logic Corp. Tinyj emb.fam"""		1328327	1					
ANR	1328732	Argument	"""Advanced Logic Corp. Tinyj emb.fam"""		1328327	0					
ANR	1328733	PrimaryExpression	"""Advanced Logic Corp. Tinyj emb.fam"""		1328327	0					
ANR	1328734	Label	case EM_X86_64 :	2202:1:64047:64061	1328327	88	True				
ANR	1328735	Identifier	EM_X86_64		1328327	0					
ANR	1328736	ReturnStatement	"return strdup ( ""AMD x86-64 architecture"" ) ;"	2202:24:64070:64111	1328327	89	True				
ANR	1328737	CallExpression	"strdup ( ""AMD x86-64 architecture"" )"		1328327	0					
ANR	1328738	Callee	strdup		1328327	0					
ANR	1328739	Identifier	strdup		1328327	0					
ANR	1328740	ArgumentList	"""AMD x86-64 architecture"""		1328327	1					
ANR	1328741	Argument	"""AMD x86-64 architecture"""		1328327	0					
ANR	1328742	PrimaryExpression	"""AMD x86-64 architecture"""		1328327	0					
ANR	1328743	Label	case EM_LANAI :	2203:1:64114:64127	1328327	90	True				
ANR	1328744	Identifier	EM_LANAI		1328327	0					
ANR	1328745	ReturnStatement	"return strdup ( ""32bit LANAI architecture"" ) ;"	2203:24:64137:64179	1328327	91	True				
ANR	1328746	CallExpression	"strdup ( ""32bit LANAI architecture"" )"		1328327	0					
ANR	1328747	Callee	strdup		1328327	0					
ANR	1328748	Identifier	strdup		1328327	0					
ANR	1328749	ArgumentList	"""32bit LANAI architecture"""		1328327	1					
ANR	1328750	Argument	"""32bit LANAI architecture"""		1328327	0					
ANR	1328751	PrimaryExpression	"""32bit LANAI architecture"""		1328327	0					
ANR	1328752	Label	case EM_PDSP :	2204:1:64182:64194	1328327	92	True				
ANR	1328753	Identifier	EM_PDSP		1328327	0					
ANR	1328754	ReturnStatement	"return strdup ( ""Sony DSP Processor"" ) ;"	2204:24:64205:64241	1328327	93	True				
ANR	1328755	CallExpression	"strdup ( ""Sony DSP Processor"" )"		1328327	0					
ANR	1328756	Callee	strdup		1328327	0					
ANR	1328757	Identifier	strdup		1328327	0					
ANR	1328758	ArgumentList	"""Sony DSP Processor"""		1328327	1					
ANR	1328759	Argument	"""Sony DSP Processor"""		1328327	0					
ANR	1328760	PrimaryExpression	"""Sony DSP Processor"""		1328327	0					
ANR	1328761	Label	case EM_PDP10 :	2205:1:64244:64257	1328327	94	True				
ANR	1328762	Identifier	EM_PDP10		1328327	0					
ANR	1328763	ReturnStatement	"return strdup ( ""Digital Equipment Corp. PDP-10"" ) ;"	2205:24:64267:64315	1328327	95	True				
ANR	1328764	CallExpression	"strdup ( ""Digital Equipment Corp. PDP-10"" )"		1328327	0					
ANR	1328765	Callee	strdup		1328327	0					
ANR	1328766	Identifier	strdup		1328327	0					
ANR	1328767	ArgumentList	"""Digital Equipment Corp. PDP-10"""		1328327	1					
ANR	1328768	Argument	"""Digital Equipment Corp. PDP-10"""		1328327	0					
ANR	1328769	PrimaryExpression	"""Digital Equipment Corp. PDP-10"""		1328327	0					
ANR	1328770	Label	case EM_PDP11 :	2206:1:64318:64331	1328327	96	True				
ANR	1328771	Identifier	EM_PDP11		1328327	0					
ANR	1328772	ReturnStatement	"return strdup ( ""Digital Equipment Corp. PDP-11"" ) ;"	2206:24:64341:64389	1328327	97	True				
ANR	1328773	CallExpression	"strdup ( ""Digital Equipment Corp. PDP-11"" )"		1328327	0					
ANR	1328774	Callee	strdup		1328327	0					
ANR	1328775	Identifier	strdup		1328327	0					
ANR	1328776	ArgumentList	"""Digital Equipment Corp. PDP-11"""		1328327	1					
ANR	1328777	Argument	"""Digital Equipment Corp. PDP-11"""		1328327	0					
ANR	1328778	PrimaryExpression	"""Digital Equipment Corp. PDP-11"""		1328327	0					
ANR	1328779	Label	case EM_FX66 :	2207:1:64392:64404	1328327	98	True				
ANR	1328780	Identifier	EM_FX66		1328327	0					
ANR	1328781	ReturnStatement	"return strdup ( ""Siemens FX66 microcontroller"" ) ;"	2207:24:64415:64461	1328327	99	True				
ANR	1328782	CallExpression	"strdup ( ""Siemens FX66 microcontroller"" )"		1328327	0					
ANR	1328783	Callee	strdup		1328327	0					
ANR	1328784	Identifier	strdup		1328327	0					
ANR	1328785	ArgumentList	"""Siemens FX66 microcontroller"""		1328327	1					
ANR	1328786	Argument	"""Siemens FX66 microcontroller"""		1328327	0					
ANR	1328787	PrimaryExpression	"""Siemens FX66 microcontroller"""		1328327	0					
ANR	1328788	Label	case EM_ST9PLUS :	2208:1:64464:64479	1328327	100	True				
ANR	1328789	Identifier	EM_ST9PLUS		1328327	0					
ANR	1328790	ReturnStatement	"return strdup ( ""STMicroelectronics ST9+ 8/16 mc"" ) ;"	2208:24:64487:64536	1328327	101	True				
ANR	1328791	CallExpression	"strdup ( ""STMicroelectronics ST9+ 8/16 mc"" )"		1328327	0					
ANR	1328792	Callee	strdup		1328327	0					
ANR	1328793	Identifier	strdup		1328327	0					
ANR	1328794	ArgumentList	"""STMicroelectronics ST9+ 8/16 mc"""		1328327	1					
ANR	1328795	Argument	"""STMicroelectronics ST9+ 8/16 mc"""		1328327	0					
ANR	1328796	PrimaryExpression	"""STMicroelectronics ST9+ 8/16 mc"""		1328327	0					
ANR	1328797	Label	case EM_ST7 :	2209:1:64539:64550	1328327	102	True				
ANR	1328798	Identifier	EM_ST7		1328327	0					
ANR	1328799	ReturnStatement	"return strdup ( ""STmicroelectronics ST7 8 bit mc"" ) ;"	2209:24:64562:64611	1328327	103	True				
ANR	1328800	CallExpression	"strdup ( ""STmicroelectronics ST7 8 bit mc"" )"		1328327	0					
ANR	1328801	Callee	strdup		1328327	0					
ANR	1328802	Identifier	strdup		1328327	0					
ANR	1328803	ArgumentList	"""STmicroelectronics ST7 8 bit mc"""		1328327	1					
ANR	1328804	Argument	"""STmicroelectronics ST7 8 bit mc"""		1328327	0					
ANR	1328805	PrimaryExpression	"""STmicroelectronics ST7 8 bit mc"""		1328327	0					
ANR	1328806	Label	case EM_68HC16 :	2210:1:64614:64628	1328327	104	True				
ANR	1328807	Identifier	EM_68HC16		1328327	0					
ANR	1328808	ReturnStatement	"return strdup ( ""Motorola MC68HC16 microcontroller"" ) ;"	2210:24:64637:64688	1328327	105	True				
ANR	1328809	CallExpression	"strdup ( ""Motorola MC68HC16 microcontroller"" )"		1328327	0					
ANR	1328810	Callee	strdup		1328327	0					
ANR	1328811	Identifier	strdup		1328327	0					
ANR	1328812	ArgumentList	"""Motorola MC68HC16 microcontroller"""		1328327	1					
ANR	1328813	Argument	"""Motorola MC68HC16 microcontroller"""		1328327	0					
ANR	1328814	PrimaryExpression	"""Motorola MC68HC16 microcontroller"""		1328327	0					
ANR	1328815	Label	case EM_68HC11 :	2211:1:64691:64705	1328327	106	True				
ANR	1328816	Identifier	EM_68HC11		1328327	0					
ANR	1328817	ReturnStatement	"return strdup ( ""Motorola MC68HC11 microcontroller"" ) ;"	2211:24:64714:64765	1328327	107	True				
ANR	1328818	CallExpression	"strdup ( ""Motorola MC68HC11 microcontroller"" )"		1328327	0					
ANR	1328819	Callee	strdup		1328327	0					
ANR	1328820	Identifier	strdup		1328327	0					
ANR	1328821	ArgumentList	"""Motorola MC68HC11 microcontroller"""		1328327	1					
ANR	1328822	Argument	"""Motorola MC68HC11 microcontroller"""		1328327	0					
ANR	1328823	PrimaryExpression	"""Motorola MC68HC11 microcontroller"""		1328327	0					
ANR	1328824	Label	case EM_68HC08 :	2212:1:64768:64782	1328327	108	True				
ANR	1328825	Identifier	EM_68HC08		1328327	0					
ANR	1328826	ReturnStatement	"return strdup ( ""Motorola MC68HC08 microcontroller"" ) ;"	2212:24:64791:64842	1328327	109	True				
ANR	1328827	CallExpression	"strdup ( ""Motorola MC68HC08 microcontroller"" )"		1328327	0					
ANR	1328828	Callee	strdup		1328327	0					
ANR	1328829	Identifier	strdup		1328327	0					
ANR	1328830	ArgumentList	"""Motorola MC68HC08 microcontroller"""		1328327	1					
ANR	1328831	Argument	"""Motorola MC68HC08 microcontroller"""		1328327	0					
ANR	1328832	PrimaryExpression	"""Motorola MC68HC08 microcontroller"""		1328327	0					
ANR	1328833	Label	case EM_68HC05 :	2213:1:64845:64859	1328327	110	True				
ANR	1328834	Identifier	EM_68HC05		1328327	0					
ANR	1328835	ReturnStatement	"return strdup ( ""Motorola MC68HC05 microcontroller"" ) ;"	2213:24:64868:64919	1328327	111	True				
ANR	1328836	CallExpression	"strdup ( ""Motorola MC68HC05 microcontroller"" )"		1328327	0					
ANR	1328837	Callee	strdup		1328327	0					
ANR	1328838	Identifier	strdup		1328327	0					
ANR	1328839	ArgumentList	"""Motorola MC68HC05 microcontroller"""		1328327	1					
ANR	1328840	Argument	"""Motorola MC68HC05 microcontroller"""		1328327	0					
ANR	1328841	PrimaryExpression	"""Motorola MC68HC05 microcontroller"""		1328327	0					
ANR	1328842	Label	case EM_SVX :	2214:1:64922:64933	1328327	112	True				
ANR	1328843	Identifier	EM_SVX		1328327	0					
ANR	1328844	ReturnStatement	"return strdup ( ""Silicon Graphics SVx"" ) ;"	2214:24:64945:64983	1328327	113	True				
ANR	1328845	CallExpression	"strdup ( ""Silicon Graphics SVx"" )"		1328327	0					
ANR	1328846	Callee	strdup		1328327	0					
ANR	1328847	Identifier	strdup		1328327	0					
ANR	1328848	ArgumentList	"""Silicon Graphics SVx"""		1328327	1					
ANR	1328849	Argument	"""Silicon Graphics SVx"""		1328327	0					
ANR	1328850	PrimaryExpression	"""Silicon Graphics SVx"""		1328327	0					
ANR	1328851	Label	case EM_ST19 :	2215:1:64986:64998	1328327	114	True				
ANR	1328852	Identifier	EM_ST19		1328327	0					
ANR	1328853	ReturnStatement	"return strdup ( ""STMicroelectronics ST19 8 bit mc"" ) ;"	2215:24:65009:65059	1328327	115	True				
ANR	1328854	CallExpression	"strdup ( ""STMicroelectronics ST19 8 bit mc"" )"		1328327	0					
ANR	1328855	Callee	strdup		1328327	0					
ANR	1328856	Identifier	strdup		1328327	0					
ANR	1328857	ArgumentList	"""STMicroelectronics ST19 8 bit mc"""		1328327	1					
ANR	1328858	Argument	"""STMicroelectronics ST19 8 bit mc"""		1328327	0					
ANR	1328859	PrimaryExpression	"""STMicroelectronics ST19 8 bit mc"""		1328327	0					
ANR	1328860	Label	case EM_VAX :	2216:1:65062:65073	1328327	116	True				
ANR	1328861	Identifier	EM_VAX		1328327	0					
ANR	1328862	ReturnStatement	"return strdup ( ""Digital VAX"" ) ;"	2216:24:65085:65114	1328327	117	True				
ANR	1328863	CallExpression	"strdup ( ""Digital VAX"" )"		1328327	0					
ANR	1328864	Callee	strdup		1328327	0					
ANR	1328865	Identifier	strdup		1328327	0					
ANR	1328866	ArgumentList	"""Digital VAX"""		1328327	1					
ANR	1328867	Argument	"""Digital VAX"""		1328327	0					
ANR	1328868	PrimaryExpression	"""Digital VAX"""		1328327	0					
ANR	1328869	Label	case EM_CRIS :	2217:1:65117:65129	1328327	118	True				
ANR	1328870	Identifier	EM_CRIS		1328327	0					
ANR	1328871	ReturnStatement	"return strdup ( ""Axis Communications 32-bit embedded processor"" ) ;"	2217:24:65140:65203	1328327	119	True				
ANR	1328872	CallExpression	"strdup ( ""Axis Communications 32-bit embedded processor"" )"		1328327	0					
ANR	1328873	Callee	strdup		1328327	0					
ANR	1328874	Identifier	strdup		1328327	0					
ANR	1328875	ArgumentList	"""Axis Communications 32-bit embedded processor"""		1328327	1					
ANR	1328876	Argument	"""Axis Communications 32-bit embedded processor"""		1328327	0					
ANR	1328877	PrimaryExpression	"""Axis Communications 32-bit embedded processor"""		1328327	0					
ANR	1328878	Label	case EM_JAVELIN :	2218:1:65206:65221	1328327	120	True				
ANR	1328879	Identifier	EM_JAVELIN		1328327	0					
ANR	1328880	ReturnStatement	"return strdup ( ""Infineon Technologies 32-bit embedded processor"" ) ;"	2218:24:65229:65294	1328327	121	True				
ANR	1328881	CallExpression	"strdup ( ""Infineon Technologies 32-bit embedded processor"" )"		1328327	0					
ANR	1328882	Callee	strdup		1328327	0					
ANR	1328883	Identifier	strdup		1328327	0					
ANR	1328884	ArgumentList	"""Infineon Technologies 32-bit embedded processor"""		1328327	1					
ANR	1328885	Argument	"""Infineon Technologies 32-bit embedded processor"""		1328327	0					
ANR	1328886	PrimaryExpression	"""Infineon Technologies 32-bit embedded processor"""		1328327	0					
ANR	1328887	Label	case EM_FIREPATH :	2219:1:65297:65313	1328327	122	True				
ANR	1328888	Identifier	EM_FIREPATH		1328327	0					
ANR	1328889	ReturnStatement	"return strdup ( ""Element 14 64-bit DSP Processor"" ) ;"	2219:24:65320:65369	1328327	123	True				
ANR	1328890	CallExpression	"strdup ( ""Element 14 64-bit DSP Processor"" )"		1328327	0					
ANR	1328891	Callee	strdup		1328327	0					
ANR	1328892	Identifier	strdup		1328327	0					
ANR	1328893	ArgumentList	"""Element 14 64-bit DSP Processor"""		1328327	1					
ANR	1328894	Argument	"""Element 14 64-bit DSP Processor"""		1328327	0					
ANR	1328895	PrimaryExpression	"""Element 14 64-bit DSP Processor"""		1328327	0					
ANR	1328896	Label	case EM_ZSP :	2220:1:65372:65383	1328327	124	True				
ANR	1328897	Identifier	EM_ZSP		1328327	0					
ANR	1328898	ReturnStatement	"return strdup ( ""LSI Logic 16-bit DSP Processor"" ) ;"	2220:24:65395:65443	1328327	125	True				
ANR	1328899	CallExpression	"strdup ( ""LSI Logic 16-bit DSP Processor"" )"		1328327	0					
ANR	1328900	Callee	strdup		1328327	0					
ANR	1328901	Identifier	strdup		1328327	0					
ANR	1328902	ArgumentList	"""LSI Logic 16-bit DSP Processor"""		1328327	1					
ANR	1328903	Argument	"""LSI Logic 16-bit DSP Processor"""		1328327	0					
ANR	1328904	PrimaryExpression	"""LSI Logic 16-bit DSP Processor"""		1328327	0					
ANR	1328905	Label	case EM_MMIX :	2221:1:65446:65458	1328327	126	True				
ANR	1328906	Identifier	EM_MMIX		1328327	0					
ANR	1328907	ReturnStatement	"return strdup ( ""Donald Knuth's educational 64-bit processor"" ) ;"	2221:24:65469:65530	1328327	127	True				
ANR	1328908	CallExpression	"strdup ( ""Donald Knuth's educational 64-bit processor"" )"		1328327	0					
ANR	1328909	Callee	strdup		1328327	0					
ANR	1328910	Identifier	strdup		1328327	0					
ANR	1328911	ArgumentList	"""Donald Knuth's educational 64-bit processor"""		1328327	1					
ANR	1328912	Argument	"""Donald Knuth's educational 64-bit processor"""		1328327	0					
ANR	1328913	PrimaryExpression	"""Donald Knuth's educational 64-bit processor"""		1328327	0					
ANR	1328914	Label	case EM_HUANY :	2222:1:65533:65546	1328327	128	True				
ANR	1328915	Identifier	EM_HUANY		1328327	0					
ANR	1328916	ReturnStatement	"return strdup ( ""Harvard University machine-independent object files"" ) ;"	2222:24:65556:65625	1328327	129	True				
ANR	1328917	CallExpression	"strdup ( ""Harvard University machine-independent object files"" )"		1328327	0					
ANR	1328918	Callee	strdup		1328327	0					
ANR	1328919	Identifier	strdup		1328327	0					
ANR	1328920	ArgumentList	"""Harvard University machine-independent object files"""		1328327	1					
ANR	1328921	Argument	"""Harvard University machine-independent object files"""		1328327	0					
ANR	1328922	PrimaryExpression	"""Harvard University machine-independent object files"""		1328327	0					
ANR	1328923	Label	case EM_PRISM :	2223:1:65628:65641	1328327	130	True				
ANR	1328924	Identifier	EM_PRISM		1328327	0					
ANR	1328925	ReturnStatement	"return strdup ( ""SiTera Prism"" ) ;"	2223:24:65651:65681	1328327	131	True				
ANR	1328926	CallExpression	"strdup ( ""SiTera Prism"" )"		1328327	0					
ANR	1328927	Callee	strdup		1328327	0					
ANR	1328928	Identifier	strdup		1328327	0					
ANR	1328929	ArgumentList	"""SiTera Prism"""		1328327	1					
ANR	1328930	Argument	"""SiTera Prism"""		1328327	0					
ANR	1328931	PrimaryExpression	"""SiTera Prism"""		1328327	0					
ANR	1328932	Label	case EM_AVR :	2224:1:65684:65695	1328327	132	True				
ANR	1328933	Identifier	EM_AVR		1328327	0					
ANR	1328934	ReturnStatement	"return strdup ( ""Atmel AVR 8-bit microcontroller"" ) ;"	2224:24:65707:65756	1328327	133	True				
ANR	1328935	CallExpression	"strdup ( ""Atmel AVR 8-bit microcontroller"" )"		1328327	0					
ANR	1328936	Callee	strdup		1328327	0					
ANR	1328937	Identifier	strdup		1328327	0					
ANR	1328938	ArgumentList	"""Atmel AVR 8-bit microcontroller"""		1328327	1					
ANR	1328939	Argument	"""Atmel AVR 8-bit microcontroller"""		1328327	0					
ANR	1328940	PrimaryExpression	"""Atmel AVR 8-bit microcontroller"""		1328327	0					
ANR	1328941	Label	case EM_FR30 :	2225:1:65759:65771	1328327	134	True				
ANR	1328942	Identifier	EM_FR30		1328327	0					
ANR	1328943	ReturnStatement	"return strdup ( ""Fujitsu FR30"" ) ;"	2225:24:65782:65812	1328327	135	True				
ANR	1328944	CallExpression	"strdup ( ""Fujitsu FR30"" )"		1328327	0					
ANR	1328945	Callee	strdup		1328327	0					
ANR	1328946	Identifier	strdup		1328327	0					
ANR	1328947	ArgumentList	"""Fujitsu FR30"""		1328327	1					
ANR	1328948	Argument	"""Fujitsu FR30"""		1328327	0					
ANR	1328949	PrimaryExpression	"""Fujitsu FR30"""		1328327	0					
ANR	1328950	Label	case EM_D10V :	2226:1:65815:65827	1328327	136	True				
ANR	1328951	Identifier	EM_D10V		1328327	0					
ANR	1328952	ReturnStatement	"return strdup ( ""Mitsubishi D10V"" ) ;"	2226:24:65838:65871	1328327	137	True				
ANR	1328953	CallExpression	"strdup ( ""Mitsubishi D10V"" )"		1328327	0					
ANR	1328954	Callee	strdup		1328327	0					
ANR	1328955	Identifier	strdup		1328327	0					
ANR	1328956	ArgumentList	"""Mitsubishi D10V"""		1328327	1					
ANR	1328957	Argument	"""Mitsubishi D10V"""		1328327	0					
ANR	1328958	PrimaryExpression	"""Mitsubishi D10V"""		1328327	0					
ANR	1328959	Label	case EM_D30V :	2227:1:65874:65886	1328327	138	True				
ANR	1328960	Identifier	EM_D30V		1328327	0					
ANR	1328961	ReturnStatement	"return strdup ( ""Mitsubishi D30V"" ) ;"	2227:24:65897:65930	1328327	139	True				
ANR	1328962	CallExpression	"strdup ( ""Mitsubishi D30V"" )"		1328327	0					
ANR	1328963	Callee	strdup		1328327	0					
ANR	1328964	Identifier	strdup		1328327	0					
ANR	1328965	ArgumentList	"""Mitsubishi D30V"""		1328327	1					
ANR	1328966	Argument	"""Mitsubishi D30V"""		1328327	0					
ANR	1328967	PrimaryExpression	"""Mitsubishi D30V"""		1328327	0					
ANR	1328968	Label	case EM_V850 :	2228:1:65933:65945	1328327	140	True				
ANR	1328969	Identifier	EM_V850		1328327	0					
ANR	1328970	ReturnStatement	"return strdup ( ""NEC v850"" ) ;"	2228:24:65956:65982	1328327	141	True				
ANR	1328971	CallExpression	"strdup ( ""NEC v850"" )"		1328327	0					
ANR	1328972	Callee	strdup		1328327	0					
ANR	1328973	Identifier	strdup		1328327	0					
ANR	1328974	ArgumentList	"""NEC v850"""		1328327	1					
ANR	1328975	Argument	"""NEC v850"""		1328327	0					
ANR	1328976	PrimaryExpression	"""NEC v850"""		1328327	0					
ANR	1328977	Label	case EM_M32R :	2229:1:65985:65997	1328327	142	True				
ANR	1328978	Identifier	EM_M32R		1328327	0					
ANR	1328979	ReturnStatement	"return strdup ( ""Mitsubishi M32R"" ) ;"	2229:24:66008:66041	1328327	143	True				
ANR	1328980	CallExpression	"strdup ( ""Mitsubishi M32R"" )"		1328327	0					
ANR	1328981	Callee	strdup		1328327	0					
ANR	1328982	Identifier	strdup		1328327	0					
ANR	1328983	ArgumentList	"""Mitsubishi M32R"""		1328327	1					
ANR	1328984	Argument	"""Mitsubishi M32R"""		1328327	0					
ANR	1328985	PrimaryExpression	"""Mitsubishi M32R"""		1328327	0					
ANR	1328986	Label	case EM_MN10300 :	2230:1:66044:66059	1328327	144	True				
ANR	1328987	Identifier	EM_MN10300		1328327	0					
ANR	1328988	ReturnStatement	"return strdup ( ""Matsushita MN10300"" ) ;"	2230:24:66067:66103	1328327	145	True				
ANR	1328989	CallExpression	"strdup ( ""Matsushita MN10300"" )"		1328327	0					
ANR	1328990	Callee	strdup		1328327	0					
ANR	1328991	Identifier	strdup		1328327	0					
ANR	1328992	ArgumentList	"""Matsushita MN10300"""		1328327	1					
ANR	1328993	Argument	"""Matsushita MN10300"""		1328327	0					
ANR	1328994	PrimaryExpression	"""Matsushita MN10300"""		1328327	0					
ANR	1328995	Label	case EM_MN10200 :	2231:1:66106:66121	1328327	146	True				
ANR	1328996	Identifier	EM_MN10200		1328327	0					
ANR	1328997	ReturnStatement	"return strdup ( ""Matsushita MN10200"" ) ;"	2231:24:66129:66165	1328327	147	True				
ANR	1328998	CallExpression	"strdup ( ""Matsushita MN10200"" )"		1328327	0					
ANR	1328999	Callee	strdup		1328327	0					
ANR	1329000	Identifier	strdup		1328327	0					
ANR	1329001	ArgumentList	"""Matsushita MN10200"""		1328327	1					
ANR	1329002	Argument	"""Matsushita MN10200"""		1328327	0					
ANR	1329003	PrimaryExpression	"""Matsushita MN10200"""		1328327	0					
ANR	1329004	Label	case EM_PJ :	2232:1:66168:66178	1328327	148	True				
ANR	1329005	Identifier	EM_PJ		1328327	0					
ANR	1329006	ReturnStatement	"return strdup ( ""picoJava"" ) ;"	2232:24:66191:66217	1328327	149	True				
ANR	1329007	CallExpression	"strdup ( ""picoJava"" )"		1328327	0					
ANR	1329008	Callee	strdup		1328327	0					
ANR	1329009	Identifier	strdup		1328327	0					
ANR	1329010	ArgumentList	"""picoJava"""		1328327	1					
ANR	1329011	Argument	"""picoJava"""		1328327	0					
ANR	1329012	PrimaryExpression	"""picoJava"""		1328327	0					
ANR	1329013	Label	case EM_OPENRISC :	2233:1:66220:66236	1328327	150	True				
ANR	1329014	Identifier	EM_OPENRISC		1328327	0					
ANR	1329015	ReturnStatement	"return strdup ( ""OpenRISC 32-bit embedded processor"" ) ;"	2233:24:66243:66295	1328327	151	True				
ANR	1329016	CallExpression	"strdup ( ""OpenRISC 32-bit embedded processor"" )"		1328327	0					
ANR	1329017	Callee	strdup		1328327	0					
ANR	1329018	Identifier	strdup		1328327	0					
ANR	1329019	ArgumentList	"""OpenRISC 32-bit embedded processor"""		1328327	1					
ANR	1329020	Argument	"""OpenRISC 32-bit embedded processor"""		1328327	0					
ANR	1329021	PrimaryExpression	"""OpenRISC 32-bit embedded processor"""		1328327	0					
ANR	1329022	Label	case EM_ARC_A5 :	2234:1:66298:66312	1328327	152	True				
ANR	1329023	Identifier	EM_ARC_A5		1328327	0					
ANR	1329024	ReturnStatement	"return strdup ( ""ARC Cores Tangent-A5"" ) ;"	2234:24:66321:66359	1328327	153	True				
ANR	1329025	CallExpression	"strdup ( ""ARC Cores Tangent-A5"" )"		1328327	0					
ANR	1329026	Callee	strdup		1328327	0					
ANR	1329027	Identifier	strdup		1328327	0					
ANR	1329028	ArgumentList	"""ARC Cores Tangent-A5"""		1328327	1					
ANR	1329029	Argument	"""ARC Cores Tangent-A5"""		1328327	0					
ANR	1329030	PrimaryExpression	"""ARC Cores Tangent-A5"""		1328327	0					
ANR	1329031	Label	case EM_XTENSA :	2235:1:66362:66376	1328327	154	True				
ANR	1329032	Identifier	EM_XTENSA		1328327	0					
ANR	1329033	ReturnStatement	"return strdup ( ""Tensilica Xtensa Architecture"" ) ;"	2235:24:66385:66432	1328327	155	True				
ANR	1329034	CallExpression	"strdup ( ""Tensilica Xtensa Architecture"" )"		1328327	0					
ANR	1329035	Callee	strdup		1328327	0					
ANR	1329036	Identifier	strdup		1328327	0					
ANR	1329037	ArgumentList	"""Tensilica Xtensa Architecture"""		1328327	1					
ANR	1329038	Argument	"""Tensilica Xtensa Architecture"""		1328327	0					
ANR	1329039	PrimaryExpression	"""Tensilica Xtensa Architecture"""		1328327	0					
ANR	1329040	Label	case EM_AARCH64 :	2236:1:66435:66450	1328327	156	True				
ANR	1329041	Identifier	EM_AARCH64		1328327	0					
ANR	1329042	ReturnStatement	"return strdup ( ""ARM aarch64"" ) ;"	2236:24:66458:66487	1328327	157	True				
ANR	1329043	CallExpression	"strdup ( ""ARM aarch64"" )"		1328327	0					
ANR	1329044	Callee	strdup		1328327	0					
ANR	1329045	Identifier	strdup		1328327	0					
ANR	1329046	ArgumentList	"""ARM aarch64"""		1328327	1					
ANR	1329047	Argument	"""ARM aarch64"""		1328327	0					
ANR	1329048	PrimaryExpression	"""ARM aarch64"""		1328327	0					
ANR	1329049	Label	case EM_PROPELLER :	2237:1:66490:66507	1328327	158	True				
ANR	1329050	Identifier	EM_PROPELLER		1328327	0					
ANR	1329051	ReturnStatement	"return strdup ( ""Parallax Propeller"" ) ;"	2237:24:66513:66549	1328327	159	True				
ANR	1329052	CallExpression	"strdup ( ""Parallax Propeller"" )"		1328327	0					
ANR	1329053	Callee	strdup		1328327	0					
ANR	1329054	Identifier	strdup		1328327	0					
ANR	1329055	ArgumentList	"""Parallax Propeller"""		1328327	1					
ANR	1329056	Argument	"""Parallax Propeller"""		1328327	0					
ANR	1329057	PrimaryExpression	"""Parallax Propeller"""		1328327	0					
ANR	1329058	Label	case EM_MICROBLAZE :	2238:1:66552:66570	1328327	160	True				
ANR	1329059	Identifier	EM_MICROBLAZE		1328327	0					
ANR	1329060	ReturnStatement	"return strdup ( ""Xilinx MicroBlaze"" ) ;"	2238:24:66575:66610	1328327	161	True				
ANR	1329061	CallExpression	"strdup ( ""Xilinx MicroBlaze"" )"		1328327	0					
ANR	1329062	Callee	strdup		1328327	0					
ANR	1329063	Identifier	strdup		1328327	0					
ANR	1329064	ArgumentList	"""Xilinx MicroBlaze"""		1328327	1					
ANR	1329065	Argument	"""Xilinx MicroBlaze"""		1328327	0					
ANR	1329066	PrimaryExpression	"""Xilinx MicroBlaze"""		1328327	0					
ANR	1329067	Label	case EM_RISCV :	2239:1:66613:66626	1328327	162	True				
ANR	1329068	Identifier	EM_RISCV		1328327	0					
ANR	1329069	ReturnStatement	"return strdup ( ""RISC V"" ) ;"	2239:24:66636:66660	1328327	163	True				
ANR	1329070	CallExpression	"strdup ( ""RISC V"" )"		1328327	0					
ANR	1329071	Callee	strdup		1328327	0					
ANR	1329072	Identifier	strdup		1328327	0					
ANR	1329073	ArgumentList	"""RISC V"""		1328327	1					
ANR	1329074	Argument	"""RISC V"""		1328327	0					
ANR	1329075	PrimaryExpression	"""RISC V"""		1328327	0					
ANR	1329076	Label	case EM_VIDEOCORE3 :	2240:1:66663:66681	1328327	164	True				
ANR	1329077	Identifier	EM_VIDEOCORE3		1328327	0					
ANR	1329078	ReturnStatement	"return strdup ( ""VideoCore III"" ) ;"	2240:24:66686:66717	1328327	165	True				
ANR	1329079	CallExpression	"strdup ( ""VideoCore III"" )"		1328327	0					
ANR	1329080	Callee	strdup		1328327	0					
ANR	1329081	Identifier	strdup		1328327	0					
ANR	1329082	ArgumentList	"""VideoCore III"""		1328327	1					
ANR	1329083	Argument	"""VideoCore III"""		1328327	0					
ANR	1329084	PrimaryExpression	"""VideoCore III"""		1328327	0					
ANR	1329085	Label	case EM_VIDEOCORE4 :	2241:1:66720:66738	1328327	166	True				
ANR	1329086	Identifier	EM_VIDEOCORE4		1328327	0					
ANR	1329087	ReturnStatement	"return strdup ( ""VideoCore IV"" ) ;"	2241:24:66743:66773	1328327	167	True				
ANR	1329088	CallExpression	"strdup ( ""VideoCore IV"" )"		1328327	0					
ANR	1329089	Callee	strdup		1328327	0					
ANR	1329090	Identifier	strdup		1328327	0					
ANR	1329091	ArgumentList	"""VideoCore IV"""		1328327	1					
ANR	1329092	Argument	"""VideoCore IV"""		1328327	0					
ANR	1329093	PrimaryExpression	"""VideoCore IV"""		1328327	0					
ANR	1329094	Label	case EM_LATTICEMICO32 :	2242:1:66776:66797	1328327	168	True				
ANR	1329095	Identifier	EM_LATTICEMICO32		1328327	0					
ANR	1329096	ReturnStatement	"return strdup ( ""RISC processor for Lattice FPGA architecture"" ) ;"	2242:24:66799:66861	1328327	169	True				
ANR	1329097	CallExpression	"strdup ( ""RISC processor for Lattice FPGA architecture"" )"		1328327	0					
ANR	1329098	Callee	strdup		1328327	0					
ANR	1329099	Identifier	strdup		1328327	0					
ANR	1329100	ArgumentList	"""RISC processor for Lattice FPGA architecture"""		1328327	1					
ANR	1329101	Argument	"""RISC processor for Lattice FPGA architecture"""		1328327	0					
ANR	1329102	PrimaryExpression	"""RISC processor for Lattice FPGA architecture"""		1328327	0					
ANR	1329103	Label	case EM_SE_C17 :	2243:1:66864:66878	1328327	170	True				
ANR	1329104	Identifier	EM_SE_C17		1328327	0					
ANR	1329105	ReturnStatement	"return strdup ( ""Seiko Epson C17 family"" ) ;"	2243:24:66887:66927	1328327	171	True				
ANR	1329106	CallExpression	"strdup ( ""Seiko Epson C17 family"" )"		1328327	0					
ANR	1329107	Callee	strdup		1328327	0					
ANR	1329108	Identifier	strdup		1328327	0					
ANR	1329109	ArgumentList	"""Seiko Epson C17 family"""		1328327	1					
ANR	1329110	Argument	"""Seiko Epson C17 family"""		1328327	0					
ANR	1329111	PrimaryExpression	"""Seiko Epson C17 family"""		1328327	0					
ANR	1329112	Label	case EM_TI_C6000 :	2244:1:66930:66946	1328327	172	True				
ANR	1329113	Identifier	EM_TI_C6000		1328327	0					
ANR	1329114	ReturnStatement	"return strdup ( ""The Texas Instruments TMS320C6000 DSP family"" ) ;"	2244:24:66953:67015	1328327	173	True				
ANR	1329115	CallExpression	"strdup ( ""The Texas Instruments TMS320C6000 DSP family"" )"		1328327	0					
ANR	1329116	Callee	strdup		1328327	0					
ANR	1329117	Identifier	strdup		1328327	0					
ANR	1329118	ArgumentList	"""The Texas Instruments TMS320C6000 DSP family"""		1328327	1					
ANR	1329119	Argument	"""The Texas Instruments TMS320C6000 DSP family"""		1328327	0					
ANR	1329120	PrimaryExpression	"""The Texas Instruments TMS320C6000 DSP family"""		1328327	0					
ANR	1329121	Label	case EM_TI_C2000 :	2245:1:67018:67034	1328327	174	True				
ANR	1329122	Identifier	EM_TI_C2000		1328327	0					
ANR	1329123	ReturnStatement	"return strdup ( ""The Texas Instruments TMS320C2000 DSP family"" ) ;"	2245:24:67041:67103	1328327	175	True				
ANR	1329124	CallExpression	"strdup ( ""The Texas Instruments TMS320C2000 DSP family"" )"		1328327	0					
ANR	1329125	Callee	strdup		1328327	0					
ANR	1329126	Identifier	strdup		1328327	0					
ANR	1329127	ArgumentList	"""The Texas Instruments TMS320C2000 DSP family"""		1328327	1					
ANR	1329128	Argument	"""The Texas Instruments TMS320C2000 DSP family"""		1328327	0					
ANR	1329129	PrimaryExpression	"""The Texas Instruments TMS320C2000 DSP family"""		1328327	0					
ANR	1329130	Label	case EM_TI_C5500 :	2246:1:67106:67122	1328327	176	True				
ANR	1329131	Identifier	EM_TI_C5500		1328327	0					
ANR	1329132	ReturnStatement	"return strdup ( ""The Texas Instruments TMS320C55x DSP family"" ) ;"	2246:24:67129:67190	1328327	177	True				
ANR	1329133	CallExpression	"strdup ( ""The Texas Instruments TMS320C55x DSP family"" )"		1328327	0					
ANR	1329134	Callee	strdup		1328327	0					
ANR	1329135	Identifier	strdup		1328327	0					
ANR	1329136	ArgumentList	"""The Texas Instruments TMS320C55x DSP family"""		1328327	1					
ANR	1329137	Argument	"""The Texas Instruments TMS320C55x DSP family"""		1328327	0					
ANR	1329138	PrimaryExpression	"""The Texas Instruments TMS320C55x DSP family"""		1328327	0					
ANR	1329139	Label	case EM_TI_ARP32 :	2247:1:67193:67209	1328327	178	True				
ANR	1329140	Identifier	EM_TI_ARP32		1328327	0					
ANR	1329141	ReturnStatement	"return strdup ( ""Texas Instruments Application Specific RISC Processor, 32bit fetch"" ) ;"	2247:24:67216:67300	1328327	179	True				
ANR	1329142	CallExpression	"strdup ( ""Texas Instruments Application Specific RISC Processor, 32bit fetch"" )"		1328327	0					
ANR	1329143	Callee	strdup		1328327	0					
ANR	1329144	Identifier	strdup		1328327	0					
ANR	1329145	ArgumentList	"""Texas Instruments Application Specific RISC Processor, 32bit fetch"""		1328327	1					
ANR	1329146	Argument	"""Texas Instruments Application Specific RISC Processor, 32bit fetch"""		1328327	0					
ANR	1329147	PrimaryExpression	"""Texas Instruments Application Specific RISC Processor, 32bit fetch"""		1328327	0					
ANR	1329148	Label	case EM_TI_PRU :	2248:1:67303:67317	1328327	180	True				
ANR	1329149	Identifier	EM_TI_PRU		1328327	0					
ANR	1329150	ReturnStatement	"return strdup ( ""Texas Instruments Programmable Realtime Unit"" ) ;"	2248:24:67326:67388	1328327	181	True				
ANR	1329151	CallExpression	"strdup ( ""Texas Instruments Programmable Realtime Unit"" )"		1328327	0					
ANR	1329152	Callee	strdup		1328327	0					
ANR	1329153	Identifier	strdup		1328327	0					
ANR	1329154	ArgumentList	"""Texas Instruments Programmable Realtime Unit"""		1328327	1					
ANR	1329155	Argument	"""Texas Instruments Programmable Realtime Unit"""		1328327	0					
ANR	1329156	PrimaryExpression	"""Texas Instruments Programmable Realtime Unit"""		1328327	0					
ANR	1329157	Label	case EM_MMDSP_PLUS :	2249:1:67391:67409	1328327	182	True				
ANR	1329158	Identifier	EM_MMDSP_PLUS		1328327	0					
ANR	1329159	ReturnStatement	"return strdup ( ""STMicroelectronics 64bit VLIW Data Signal Processor"" ) ;"	2249:24:67414:67483	1328327	183	True				
ANR	1329160	CallExpression	"strdup ( ""STMicroelectronics 64bit VLIW Data Signal Processor"" )"		1328327	0					
ANR	1329161	Callee	strdup		1328327	0					
ANR	1329162	Identifier	strdup		1328327	0					
ANR	1329163	ArgumentList	"""STMicroelectronics 64bit VLIW Data Signal Processor"""		1328327	1					
ANR	1329164	Argument	"""STMicroelectronics 64bit VLIW Data Signal Processor"""		1328327	0					
ANR	1329165	PrimaryExpression	"""STMicroelectronics 64bit VLIW Data Signal Processor"""		1328327	0					
ANR	1329166	Label	case EM_CYPRESS_M8C :	2250:1:67486:67505	1328327	184	True				
ANR	1329167	Identifier	EM_CYPRESS_M8C		1328327	0					
ANR	1329168	ReturnStatement	"return strdup ( ""Cypress M8C microprocessor"" ) ;"	2250:24:67509:67553	1328327	185	True				
ANR	1329169	CallExpression	"strdup ( ""Cypress M8C microprocessor"" )"		1328327	0					
ANR	1329170	Callee	strdup		1328327	0					
ANR	1329171	Identifier	strdup		1328327	0					
ANR	1329172	ArgumentList	"""Cypress M8C microprocessor"""		1328327	1					
ANR	1329173	Argument	"""Cypress M8C microprocessor"""		1328327	0					
ANR	1329174	PrimaryExpression	"""Cypress M8C microprocessor"""		1328327	0					
ANR	1329175	Label	case EM_R32C :	2251:1:67556:67568	1328327	186	True				
ANR	1329176	Identifier	EM_R32C		1328327	0					
ANR	1329177	ReturnStatement	"return strdup ( ""Renesas R32C series microprocessors"" ) ;"	2251:24:67579:67632	1328327	187	True				
ANR	1329178	CallExpression	"strdup ( ""Renesas R32C series microprocessors"" )"		1328327	0					
ANR	1329179	Callee	strdup		1328327	0					
ANR	1329180	Identifier	strdup		1328327	0					
ANR	1329181	ArgumentList	"""Renesas R32C series microprocessors"""		1328327	1					
ANR	1329182	Argument	"""Renesas R32C series microprocessors"""		1328327	0					
ANR	1329183	PrimaryExpression	"""Renesas R32C series microprocessors"""		1328327	0					
ANR	1329184	Label	case EM_TRIMEDIA :	2252:1:67635:67651	1328327	188	True				
ANR	1329185	Identifier	EM_TRIMEDIA		1328327	0					
ANR	1329186	ReturnStatement	"return strdup ( ""NXP Semiconductors TriMedia architecture family"" ) ;"	2252:24:67658:67723	1328327	189	True				
ANR	1329187	CallExpression	"strdup ( ""NXP Semiconductors TriMedia architecture family"" )"		1328327	0					
ANR	1329188	Callee	strdup		1328327	0					
ANR	1329189	Identifier	strdup		1328327	0					
ANR	1329190	ArgumentList	"""NXP Semiconductors TriMedia architecture family"""		1328327	1					
ANR	1329191	Argument	"""NXP Semiconductors TriMedia architecture family"""		1328327	0					
ANR	1329192	PrimaryExpression	"""NXP Semiconductors TriMedia architecture family"""		1328327	0					
ANR	1329193	Label	case EM_QDSP6 :	2253:1:67726:67739	1328327	190	True				
ANR	1329194	Identifier	EM_QDSP6		1328327	0					
ANR	1329195	ReturnStatement	"return strdup ( ""QUALCOMM DSP6 Processor"" ) ;"	2253:24:67749:67790	1328327	191	True				
ANR	1329196	CallExpression	"strdup ( ""QUALCOMM DSP6 Processor"" )"		1328327	0					
ANR	1329197	Callee	strdup		1328327	0					
ANR	1329198	Identifier	strdup		1328327	0					
ANR	1329199	ArgumentList	"""QUALCOMM DSP6 Processor"""		1328327	1					
ANR	1329200	Argument	"""QUALCOMM DSP6 Processor"""		1328327	0					
ANR	1329201	PrimaryExpression	"""QUALCOMM DSP6 Processor"""		1328327	0					
ANR	1329202	Label	case EM_8051 :	2254:1:67809:67821	1328327	192	True				
ANR	1329203	Identifier	EM_8051		1328327	0					
ANR	1329204	ReturnStatement	"return strdup ( ""Intel 8051 and variants"" ) ;"	2254:24:67832:67873	1328327	193	True				
ANR	1329205	CallExpression	"strdup ( ""Intel 8051 and variants"" )"		1328327	0					
ANR	1329206	Callee	strdup		1328327	0					
ANR	1329207	Identifier	strdup		1328327	0					
ANR	1329208	ArgumentList	"""Intel 8051 and variants"""		1328327	1					
ANR	1329209	Argument	"""Intel 8051 and variants"""		1328327	0					
ANR	1329210	PrimaryExpression	"""Intel 8051 and variants"""		1328327	0					
ANR	1329211	Label	case EM_STXP7X :	2255:1:67876:67890	1328327	194	True				
ANR	1329212	Identifier	EM_STXP7X		1328327	0					
ANR	1329213	ReturnStatement	"return strdup ( ""STMicroelectronics STxP7x family of configurable and extensible RISC processors"" ) ;"	2255:24:67899:67996	1328327	195	True				
ANR	1329214	CallExpression	"strdup ( ""STMicroelectronics STxP7x family of configurable and extensible RISC processors"" )"		1328327	0					
ANR	1329215	Callee	strdup		1328327	0					
ANR	1329216	Identifier	strdup		1328327	0					
ANR	1329217	ArgumentList	"""STMicroelectronics STxP7x family of configurable and extensible RISC processors"""		1328327	1					
ANR	1329218	Argument	"""STMicroelectronics STxP7x family of configurable and extensible RISC processors"""		1328327	0					
ANR	1329219	PrimaryExpression	"""STMicroelectronics STxP7x family of configurable and extensible RISC processors"""		1328327	0					
ANR	1329220	Label	case EM_NDS32 :	2256:1:67999:68012	1328327	196	True				
ANR	1329221	Identifier	EM_NDS32		1328327	0					
ANR	1329222	ReturnStatement	"return strdup ( ""Andes Technology compact code size embedded RISC processor family"" ) ;"	2256:24:68022:68105	1328327	197	True				
ANR	1329223	CallExpression	"strdup ( ""Andes Technology compact code size embedded RISC processor family"" )"		1328327	0					
ANR	1329224	Callee	strdup		1328327	0					
ANR	1329225	Identifier	strdup		1328327	0					
ANR	1329226	ArgumentList	"""Andes Technology compact code size embedded RISC processor family"""		1328327	1					
ANR	1329227	Argument	"""Andes Technology compact code size embedded RISC processor family"""		1328327	0					
ANR	1329228	PrimaryExpression	"""Andes Technology compact code size embedded RISC processor family"""		1328327	0					
ANR	1329229	Label	case EM_ECOG1 :	2257:1:68108:68121	1328327	198	True				
ANR	1329230	Identifier	EM_ECOG1		1328327	0					
ANR	1329231	ReturnStatement	"return strdup ( ""Cyan Technology eCOG1X family"" ) ;"	2257:24:68131:68178	1328327	199	True				
ANR	1329232	CallExpression	"strdup ( ""Cyan Technology eCOG1X family"" )"		1328327	0					
ANR	1329233	Callee	strdup		1328327	0					
ANR	1329234	Identifier	strdup		1328327	0					
ANR	1329235	ArgumentList	"""Cyan Technology eCOG1X family"""		1328327	1					
ANR	1329236	Argument	"""Cyan Technology eCOG1X family"""		1328327	0					
ANR	1329237	PrimaryExpression	"""Cyan Technology eCOG1X family"""		1328327	0					
ANR	1329238	Label	case EM_MAXQ30 :	2259:1:68273:68287	1328327	200	True				
ANR	1329239	Identifier	EM_MAXQ30		1328327	0					
ANR	1329240	ReturnStatement	"return strdup ( ""Dallas Semiconductor MAXQ30 Core Micro-controllers"" ) ;"	2259:24:68296:68364	1328327	201	True				
ANR	1329241	CallExpression	"strdup ( ""Dallas Semiconductor MAXQ30 Core Micro-controllers"" )"		1328327	0					
ANR	1329242	Callee	strdup		1328327	0					
ANR	1329243	Identifier	strdup		1328327	0					
ANR	1329244	ArgumentList	"""Dallas Semiconductor MAXQ30 Core Micro-controllers"""		1328327	1					
ANR	1329245	Argument	"""Dallas Semiconductor MAXQ30 Core Micro-controllers"""		1328327	0					
ANR	1329246	PrimaryExpression	"""Dallas Semiconductor MAXQ30 Core Micro-controllers"""		1328327	0					
ANR	1329247	Label	case EM_XIMO16 :	2260:1:68367:68381	1328327	202	True				
ANR	1329248	Identifier	EM_XIMO16		1328327	0					
ANR	1329249	ReturnStatement	"return strdup ( ""New Japan Radio (NJR) 16-bit DSP Processor"" ) ;"	2260:24:68390:68450	1328327	203	True				
ANR	1329250	CallExpression	"strdup ( ""New Japan Radio (NJR) 16-bit DSP Processor"" )"		1328327	0					
ANR	1329251	Callee	strdup		1328327	0					
ANR	1329252	Identifier	strdup		1328327	0					
ANR	1329253	ArgumentList	"""New Japan Radio (NJR) 16-bit DSP Processor"""		1328327	1					
ANR	1329254	Argument	"""New Japan Radio (NJR) 16-bit DSP Processor"""		1328327	0					
ANR	1329255	PrimaryExpression	"""New Japan Radio (NJR) 16-bit DSP Processor"""		1328327	0					
ANR	1329256	Label	case EM_MANIK :	2261:1:68453:68466	1328327	204	True				
ANR	1329257	Identifier	EM_MANIK		1328327	0					
ANR	1329258	ReturnStatement	"return strdup ( ""M2000 Reconfigurable RISC Microprocessor"" ) ;"	2261:24:68476:68534	1328327	205	True				
ANR	1329259	CallExpression	"strdup ( ""M2000 Reconfigurable RISC Microprocessor"" )"		1328327	0					
ANR	1329260	Callee	strdup		1328327	0					
ANR	1329261	Identifier	strdup		1328327	0					
ANR	1329262	ArgumentList	"""M2000 Reconfigurable RISC Microprocessor"""		1328327	1					
ANR	1329263	Argument	"""M2000 Reconfigurable RISC Microprocessor"""		1328327	0					
ANR	1329264	PrimaryExpression	"""M2000 Reconfigurable RISC Microprocessor"""		1328327	0					
ANR	1329265	Label	case EM_CRAYNV2 :	2262:1:68537:68552	1328327	206	True				
ANR	1329266	Identifier	EM_CRAYNV2		1328327	0					
ANR	1329267	ReturnStatement	"return strdup ( ""Cray Inc. NV2 vector architecture"" ) ;"	2262:24:68560:68611	1328327	207	True				
ANR	1329268	CallExpression	"strdup ( ""Cray Inc. NV2 vector architecture"" )"		1328327	0					
ANR	1329269	Callee	strdup		1328327	0					
ANR	1329270	Identifier	strdup		1328327	0					
ANR	1329271	ArgumentList	"""Cray Inc. NV2 vector architecture"""		1328327	1					
ANR	1329272	Argument	"""Cray Inc. NV2 vector architecture"""		1328327	0					
ANR	1329273	PrimaryExpression	"""Cray Inc. NV2 vector architecture"""		1328327	0					
ANR	1329274	Label	case EM_RX :	2263:1:68614:68624	1328327	208	True				
ANR	1329275	Identifier	EM_RX		1328327	0					
ANR	1329276	ReturnStatement	"return strdup ( ""Renesas RX family"" ) ;"	2263:24:68637:68672	1328327	209	True				
ANR	1329277	CallExpression	"strdup ( ""Renesas RX family"" )"		1328327	0					
ANR	1329278	Callee	strdup		1328327	0					
ANR	1329279	Identifier	strdup		1328327	0					
ANR	1329280	ArgumentList	"""Renesas RX family"""		1328327	1					
ANR	1329281	Argument	"""Renesas RX family"""		1328327	0					
ANR	1329282	PrimaryExpression	"""Renesas RX family"""		1328327	0					
ANR	1329283	Label	case EM_METAG :	2264:1:68675:68688	1328327	210	True				
ANR	1329284	Identifier	EM_METAG		1328327	0					
ANR	1329285	ReturnStatement	"return strdup ( ""Imagination Technologies META processor architecture"" ) ;"	2264:24:68698:68768	1328327	211	True				
ANR	1329286	CallExpression	"strdup ( ""Imagination Technologies META processor architecture"" )"		1328327	0					
ANR	1329287	Callee	strdup		1328327	0					
ANR	1329288	Identifier	strdup		1328327	0					
ANR	1329289	ArgumentList	"""Imagination Technologies META processor architecture"""		1328327	1					
ANR	1329290	Argument	"""Imagination Technologies META processor architecture"""		1328327	0					
ANR	1329291	PrimaryExpression	"""Imagination Technologies META processor architecture"""		1328327	0					
ANR	1329292	Label	case EM_MCST_ELBRUS :	2265:1:68771:68790	1328327	212	True				
ANR	1329293	Identifier	EM_MCST_ELBRUS		1328327	0					
ANR	1329294	ReturnStatement	"return strdup ( ""MCST Elbrus general purpose hardware architecture"" ) ;"	2265:24:68794:68861	1328327	213	True				
ANR	1329295	CallExpression	"strdup ( ""MCST Elbrus general purpose hardware architecture"" )"		1328327	0					
ANR	1329296	Callee	strdup		1328327	0					
ANR	1329297	Identifier	strdup		1328327	0					
ANR	1329298	ArgumentList	"""MCST Elbrus general purpose hardware architecture"""		1328327	1					
ANR	1329299	Argument	"""MCST Elbrus general purpose hardware architecture"""		1328327	0					
ANR	1329300	PrimaryExpression	"""MCST Elbrus general purpose hardware architecture"""		1328327	0					
ANR	1329301	Label	case EM_ECOG16 :	2266:1:68864:68878	1328327	214	True				
ANR	1329302	Identifier	EM_ECOG16		1328327	0					
ANR	1329303	ReturnStatement	"return strdup ( ""Cyan Technology eCOG16 family"" ) ;"	2266:24:68887:68934	1328327	215	True				
ANR	1329304	CallExpression	"strdup ( ""Cyan Technology eCOG16 family"" )"		1328327	0					
ANR	1329305	Callee	strdup		1328327	0					
ANR	1329306	Identifier	strdup		1328327	0					
ANR	1329307	ArgumentList	"""Cyan Technology eCOG16 family"""		1328327	1					
ANR	1329308	Argument	"""Cyan Technology eCOG16 family"""		1328327	0					
ANR	1329309	PrimaryExpression	"""Cyan Technology eCOG16 family"""		1328327	0					
ANR	1329310	Label	case EM_CR16 :	2267:1:68937:68949	1328327	216	True				
ANR	1329311	Identifier	EM_CR16		1328327	0					
ANR	1329312	ReturnStatement	"return strdup ( ""National Semiconductor CompactRISC CR16 16-bit microprocessor"" ) ;"	2267:24:68960:69039	1328327	217	True				
ANR	1329313	CallExpression	"strdup ( ""National Semiconductor CompactRISC CR16 16-bit microprocessor"" )"		1328327	0					
ANR	1329314	Callee	strdup		1328327	0					
ANR	1329315	Identifier	strdup		1328327	0					
ANR	1329316	ArgumentList	"""National Semiconductor CompactRISC CR16 16-bit microprocessor"""		1328327	1					
ANR	1329317	Argument	"""National Semiconductor CompactRISC CR16 16-bit microprocessor"""		1328327	0					
ANR	1329318	PrimaryExpression	"""National Semiconductor CompactRISC CR16 16-bit microprocessor"""		1328327	0					
ANR	1329319	Label	case EM_ETPU :	2268:1:69042:69054	1328327	218	True				
ANR	1329320	Identifier	EM_ETPU		1328327	0					
ANR	1329321	ReturnStatement	"return strdup ( ""Freescale Extended Time Processing Unit"" ) ;"	2268:24:69065:69122	1328327	219	True				
ANR	1329322	CallExpression	"strdup ( ""Freescale Extended Time Processing Unit"" )"		1328327	0					
ANR	1329323	Callee	strdup		1328327	0					
ANR	1329324	Identifier	strdup		1328327	0					
ANR	1329325	ArgumentList	"""Freescale Extended Time Processing Unit"""		1328327	1					
ANR	1329326	Argument	"""Freescale Extended Time Processing Unit"""		1328327	0					
ANR	1329327	PrimaryExpression	"""Freescale Extended Time Processing Unit"""		1328327	0					
ANR	1329328	Label	case EM_SLE9X :	2269:1:69125:69138	1328327	220	True				
ANR	1329329	Identifier	EM_SLE9X		1328327	0					
ANR	1329330	ReturnStatement	"return strdup ( ""Infineon Technologies SLE9X core"" ) ;"	2269:24:69148:69198	1328327	221	True				
ANR	1329331	CallExpression	"strdup ( ""Infineon Technologies SLE9X core"" )"		1328327	0					
ANR	1329332	Callee	strdup		1328327	0					
ANR	1329333	Identifier	strdup		1328327	0					
ANR	1329334	ArgumentList	"""Infineon Technologies SLE9X core"""		1328327	1					
ANR	1329335	Argument	"""Infineon Technologies SLE9X core"""		1328327	0					
ANR	1329336	PrimaryExpression	"""Infineon Technologies SLE9X core"""		1328327	0					
ANR	1329337	Label	case EM_L10M :	2270:1:69201:69213	1328327	222	True				
ANR	1329338	Identifier	EM_L10M		1328327	0					
ANR	1329339	ReturnStatement	"return strdup ( ""Intel L10M"" ) ;"	2270:24:69224:69252	1328327	223	True				
ANR	1329340	CallExpression	"strdup ( ""Intel L10M"" )"		1328327	0					
ANR	1329341	Callee	strdup		1328327	0					
ANR	1329342	Identifier	strdup		1328327	0					
ANR	1329343	ArgumentList	"""Intel L10M"""		1328327	1					
ANR	1329344	Argument	"""Intel L10M"""		1328327	0					
ANR	1329345	PrimaryExpression	"""Intel L10M"""		1328327	0					
ANR	1329346	Label	case EM_K10M :	2271:1:69255:69267	1328327	224	True				
ANR	1329347	Identifier	EM_K10M		1328327	0					
ANR	1329348	ReturnStatement	"return strdup ( ""Intel K10M"" ) ;"	2271:24:69278:69306	1328327	225	True				
ANR	1329349	CallExpression	"strdup ( ""Intel K10M"" )"		1328327	0					
ANR	1329350	Callee	strdup		1328327	0					
ANR	1329351	Identifier	strdup		1328327	0					
ANR	1329352	ArgumentList	"""Intel K10M"""		1328327	1					
ANR	1329353	Argument	"""Intel K10M"""		1328327	0					
ANR	1329354	PrimaryExpression	"""Intel K10M"""		1328327	0					
ANR	1329355	Label	case EM_AVR32 :	2273:1:69405:69418	1328327	226	True				
ANR	1329356	Identifier	EM_AVR32		1328327	0					
ANR	1329357	ReturnStatement	"return strdup ( ""Atmel Corporation 32-bit microprocessor family"" ) ;"	2273:24:69428:69492	1328327	227	True				
ANR	1329358	CallExpression	"strdup ( ""Atmel Corporation 32-bit microprocessor family"" )"		1328327	0					
ANR	1329359	Callee	strdup		1328327	0					
ANR	1329360	Identifier	strdup		1328327	0					
ANR	1329361	ArgumentList	"""Atmel Corporation 32-bit microprocessor family"""		1328327	1					
ANR	1329362	Argument	"""Atmel Corporation 32-bit microprocessor family"""		1328327	0					
ANR	1329363	PrimaryExpression	"""Atmel Corporation 32-bit microprocessor family"""		1328327	0					
ANR	1329364	Label	case EM_STM8 :	2274:1:69495:69507	1328327	228	True				
ANR	1329365	Identifier	EM_STM8		1328327	0					
ANR	1329366	ReturnStatement	"return strdup ( ""STMicroeletronics STM8 8-bit microcontroller"" ) ;"	2274:24:69518:69580	1328327	229	True				
ANR	1329367	CallExpression	"strdup ( ""STMicroeletronics STM8 8-bit microcontroller"" )"		1328327	0					
ANR	1329368	Callee	strdup		1328327	0					
ANR	1329369	Identifier	strdup		1328327	0					
ANR	1329370	ArgumentList	"""STMicroeletronics STM8 8-bit microcontroller"""		1328327	1					
ANR	1329371	Argument	"""STMicroeletronics STM8 8-bit microcontroller"""		1328327	0					
ANR	1329372	PrimaryExpression	"""STMicroeletronics STM8 8-bit microcontroller"""		1328327	0					
ANR	1329373	Label	case EM_TILE64 :	2275:1:69583:69597	1328327	230	True				
ANR	1329374	Identifier	EM_TILE64		1328327	0					
ANR	1329375	ReturnStatement	"return strdup ( ""Tilera TILE64 multicore architecture family"" ) ;"	2275:24:69606:69667	1328327	231	True				
ANR	1329376	CallExpression	"strdup ( ""Tilera TILE64 multicore architecture family"" )"		1328327	0					
ANR	1329377	Callee	strdup		1328327	0					
ANR	1329378	Identifier	strdup		1328327	0					
ANR	1329379	ArgumentList	"""Tilera TILE64 multicore architecture family"""		1328327	1					
ANR	1329380	Argument	"""Tilera TILE64 multicore architecture family"""		1328327	0					
ANR	1329381	PrimaryExpression	"""Tilera TILE64 multicore architecture family"""		1328327	0					
ANR	1329382	Label	case EM_TILEPRO :	2276:1:69670:69685	1328327	232	True				
ANR	1329383	Identifier	EM_TILEPRO		1328327	0					
ANR	1329384	ReturnStatement	"return strdup ( ""Tilera TILEPro multicore architecture family"" ) ;"	2276:24:69693:69755	1328327	233	True				
ANR	1329385	CallExpression	"strdup ( ""Tilera TILEPro multicore architecture family"" )"		1328327	0					
ANR	1329386	Callee	strdup		1328327	0					
ANR	1329387	Identifier	strdup		1328327	0					
ANR	1329388	ArgumentList	"""Tilera TILEPro multicore architecture family"""		1328327	1					
ANR	1329389	Argument	"""Tilera TILEPro multicore architecture family"""		1328327	0					
ANR	1329390	PrimaryExpression	"""Tilera TILEPro multicore architecture family"""		1328327	0					
ANR	1329391	Label	case EM_CUDA :	2278:1:69870:69882	1328327	234	True				
ANR	1329392	Identifier	EM_CUDA		1328327	0					
ANR	1329393	ReturnStatement	"return strdup ( ""NVIDIA CUDA architecture"" ) ;"	2278:24:69893:69935	1328327	235	True				
ANR	1329394	CallExpression	"strdup ( ""NVIDIA CUDA architecture"" )"		1328327	0					
ANR	1329395	Callee	strdup		1328327	0					
ANR	1329396	Identifier	strdup		1328327	0					
ANR	1329397	ArgumentList	"""NVIDIA CUDA architecture"""		1328327	1					
ANR	1329398	Argument	"""NVIDIA CUDA architecture"""		1328327	0					
ANR	1329399	PrimaryExpression	"""NVIDIA CUDA architecture"""		1328327	0					
ANR	1329400	Label	case EM_TILEGX :	2279:1:69938:69952	1328327	236	True				
ANR	1329401	Identifier	EM_TILEGX		1328327	0					
ANR	1329402	ReturnStatement	"return strdup ( ""Tilera TILE-Gx multicore architecture family"" ) ;"	2279:24:69961:70023	1328327	237	True				
ANR	1329403	CallExpression	"strdup ( ""Tilera TILE-Gx multicore architecture family"" )"		1328327	0					
ANR	1329404	Callee	strdup		1328327	0					
ANR	1329405	Identifier	strdup		1328327	0					
ANR	1329406	ArgumentList	"""Tilera TILE-Gx multicore architecture family"""		1328327	1					
ANR	1329407	Argument	"""Tilera TILE-Gx multicore architecture family"""		1328327	0					
ANR	1329408	PrimaryExpression	"""Tilera TILE-Gx multicore architecture family"""		1328327	0					
ANR	1329409	Label	case EM_CLOUDSHIELD :	2280:1:70026:70045	1328327	238	True				
ANR	1329410	Identifier	EM_CLOUDSHIELD		1328327	0					
ANR	1329411	ReturnStatement	"return strdup ( ""CloudShield architecture family"" ) ;"	2280:24:70049:70098	1328327	239	True				
ANR	1329412	CallExpression	"strdup ( ""CloudShield architecture family"" )"		1328327	0					
ANR	1329413	Callee	strdup		1328327	0					
ANR	1329414	Identifier	strdup		1328327	0					
ANR	1329415	ArgumentList	"""CloudShield architecture family"""		1328327	1					
ANR	1329416	Argument	"""CloudShield architecture family"""		1328327	0					
ANR	1329417	PrimaryExpression	"""CloudShield architecture family"""		1328327	0					
ANR	1329418	Label	case EM_COREA_1ST :	2281:1:70101:70118	1328327	240	True				
ANR	1329419	Identifier	EM_COREA_1ST		1328327	0					
ANR	1329420	ReturnStatement	"return strdup ( ""KIPO-KAIST Core-A 1st generation processor family"" ) ;"	2281:24:70124:70191	1328327	241	True				
ANR	1329421	CallExpression	"strdup ( ""KIPO-KAIST Core-A 1st generation processor family"" )"		1328327	0					
ANR	1329422	Callee	strdup		1328327	0					
ANR	1329423	Identifier	strdup		1328327	0					
ANR	1329424	ArgumentList	"""KIPO-KAIST Core-A 1st generation processor family"""		1328327	1					
ANR	1329425	Argument	"""KIPO-KAIST Core-A 1st generation processor family"""		1328327	0					
ANR	1329426	PrimaryExpression	"""KIPO-KAIST Core-A 1st generation processor family"""		1328327	0					
ANR	1329427	Label	case EM_COREA_2ND :	2282:1:70194:70211	1328327	242	True				
ANR	1329428	Identifier	EM_COREA_2ND		1328327	0					
ANR	1329429	ReturnStatement	"return strdup ( ""KIPO-KAIST Core-A 2nd generation processor family"" ) ;"	2282:24:70217:70284	1328327	243	True				
ANR	1329430	CallExpression	"strdup ( ""KIPO-KAIST Core-A 2nd generation processor family"" )"		1328327	0					
ANR	1329431	Callee	strdup		1328327	0					
ANR	1329432	Identifier	strdup		1328327	0					
ANR	1329433	ArgumentList	"""KIPO-KAIST Core-A 2nd generation processor family"""		1328327	1					
ANR	1329434	Argument	"""KIPO-KAIST Core-A 2nd generation processor family"""		1328327	0					
ANR	1329435	PrimaryExpression	"""KIPO-KAIST Core-A 2nd generation processor family"""		1328327	0					
ANR	1329436	Label	case EM_ARC_COMPACT2 :	2283:1:70287:70307	1328327	244	True				
ANR	1329437	Identifier	EM_ARC_COMPACT2		1328327	0					
ANR	1329438	ReturnStatement	"return strdup ( ""Synopsys ARCompact V2"" ) ;"	2283:24:70310:70349	1328327	245	True				
ANR	1329439	CallExpression	"strdup ( ""Synopsys ARCompact V2"" )"		1328327	0					
ANR	1329440	Callee	strdup		1328327	0					
ANR	1329441	Identifier	strdup		1328327	0					
ANR	1329442	ArgumentList	"""Synopsys ARCompact V2"""		1328327	1					
ANR	1329443	Argument	"""Synopsys ARCompact V2"""		1328327	0					
ANR	1329444	PrimaryExpression	"""Synopsys ARCompact V2"""		1328327	0					
ANR	1329445	Label	case EM_OPEN8 :	2284:1:70352:70365	1328327	246	True				
ANR	1329446	Identifier	EM_OPEN8		1328327	0					
ANR	1329447	ReturnStatement	"return strdup ( ""Open8 8-bit RISC soft processor core"" ) ;"	2284:24:70375:70429	1328327	247	True				
ANR	1329448	CallExpression	"strdup ( ""Open8 8-bit RISC soft processor core"" )"		1328327	0					
ANR	1329449	Callee	strdup		1328327	0					
ANR	1329450	Identifier	strdup		1328327	0					
ANR	1329451	ArgumentList	"""Open8 8-bit RISC soft processor core"""		1328327	1					
ANR	1329452	Argument	"""Open8 8-bit RISC soft processor core"""		1328327	0					
ANR	1329453	PrimaryExpression	"""Open8 8-bit RISC soft processor core"""		1328327	0					
ANR	1329454	Label	case EM_RL78 :	2285:1:70432:70444	1328327	248	True				
ANR	1329455	Identifier	EM_RL78		1328327	0					
ANR	1329456	ReturnStatement	"return strdup ( ""Renesas RL78 family"" ) ;"	2285:24:70455:70492	1328327	249	True				
ANR	1329457	CallExpression	"strdup ( ""Renesas RL78 family"" )"		1328327	0					
ANR	1329458	Callee	strdup		1328327	0					
ANR	1329459	Identifier	strdup		1328327	0					
ANR	1329460	ArgumentList	"""Renesas RL78 family"""		1328327	1					
ANR	1329461	Argument	"""Renesas RL78 family"""		1328327	0					
ANR	1329462	PrimaryExpression	"""Renesas RL78 family"""		1328327	0					
ANR	1329463	Label	case EM_VIDEOCORE5 :	2286:1:70495:70513	1328327	250	True				
ANR	1329464	Identifier	EM_VIDEOCORE5		1328327	0					
ANR	1329465	ReturnStatement	"return strdup ( ""Broadcom VideoCore V processor"" ) ;"	2286:24:70518:70566	1328327	251	True				
ANR	1329466	CallExpression	"strdup ( ""Broadcom VideoCore V processor"" )"		1328327	0					
ANR	1329467	Callee	strdup		1328327	0					
ANR	1329468	Identifier	strdup		1328327	0					
ANR	1329469	ArgumentList	"""Broadcom VideoCore V processor"""		1328327	1					
ANR	1329470	Argument	"""Broadcom VideoCore V processor"""		1328327	0					
ANR	1329471	PrimaryExpression	"""Broadcom VideoCore V processor"""		1328327	0					
ANR	1329472	Label	case EM_78KOR :	2287:1:70569:70582	1328327	252	True				
ANR	1329473	Identifier	EM_78KOR		1328327	0					
ANR	1329474	ReturnStatement	"return strdup ( ""Renesas 78KOR family"" ) ;"	2287:24:70592:70630	1328327	253	True				
ANR	1329475	CallExpression	"strdup ( ""Renesas 78KOR family"" )"		1328327	0					
ANR	1329476	Callee	strdup		1328327	0					
ANR	1329477	Identifier	strdup		1328327	0					
ANR	1329478	ArgumentList	"""Renesas 78KOR family"""		1328327	1					
ANR	1329479	Argument	"""Renesas 78KOR family"""		1328327	0					
ANR	1329480	PrimaryExpression	"""Renesas 78KOR family"""		1328327	0					
ANR	1329481	Label	case EM_BA1 :	2289:1:70745:70756	1328327	254	True				
ANR	1329482	Identifier	EM_BA1		1328327	0					
ANR	1329483	ReturnStatement	"return strdup ( ""Beyond BA1 CPU architecture"" ) ;"	2289:24:70768:70813	1328327	255	True				
ANR	1329484	CallExpression	"strdup ( ""Beyond BA1 CPU architecture"" )"		1328327	0					
ANR	1329485	Callee	strdup		1328327	0					
ANR	1329486	Identifier	strdup		1328327	0					
ANR	1329487	ArgumentList	"""Beyond BA1 CPU architecture"""		1328327	1					
ANR	1329488	Argument	"""Beyond BA1 CPU architecture"""		1328327	0					
ANR	1329489	PrimaryExpression	"""Beyond BA1 CPU architecture"""		1328327	0					
ANR	1329490	Label	case EM_BA2 :	2290:1:70816:70827	1328327	256	True				
ANR	1329491	Identifier	EM_BA2		1328327	0					
ANR	1329492	ReturnStatement	"return strdup ( ""Beyond BA2 CPU architecture"" ) ;"	2290:24:70839:70884	1328327	257	True				
ANR	1329493	CallExpression	"strdup ( ""Beyond BA2 CPU architecture"" )"		1328327	0					
ANR	1329494	Callee	strdup		1328327	0					
ANR	1329495	Identifier	strdup		1328327	0					
ANR	1329496	ArgumentList	"""Beyond BA2 CPU architecture"""		1328327	1					
ANR	1329497	Argument	"""Beyond BA2 CPU architecture"""		1328327	0					
ANR	1329498	PrimaryExpression	"""Beyond BA2 CPU architecture"""		1328327	0					
ANR	1329499	Label	case EM_XCORE :	2291:1:70887:70900	1328327	258	True				
ANR	1329500	Identifier	EM_XCORE		1328327	0					
ANR	1329501	ReturnStatement	"return strdup ( ""XMOS xCORE processor family"" ) ;"	2291:24:70910:70955	1328327	259	True				
ANR	1329502	CallExpression	"strdup ( ""XMOS xCORE processor family"" )"		1328327	0					
ANR	1329503	Callee	strdup		1328327	0					
ANR	1329504	Identifier	strdup		1328327	0					
ANR	1329505	ArgumentList	"""XMOS xCORE processor family"""		1328327	1					
ANR	1329506	Argument	"""XMOS xCORE processor family"""		1328327	0					
ANR	1329507	PrimaryExpression	"""XMOS xCORE processor family"""		1328327	0					
ANR	1329508	Label	case EM_MCHP_PIC :	2292:1:70958:70974	1328327	260	True				
ANR	1329509	Identifier	EM_MCHP_PIC		1328327	0					
ANR	1329510	ReturnStatement	"return strdup ( ""Microchip 8-bit PIC(r) family"" ) ;"	2292:24:70981:71028	1328327	261	True				
ANR	1329511	CallExpression	"strdup ( ""Microchip 8-bit PIC(r) family"" )"		1328327	0					
ANR	1329512	Callee	strdup		1328327	0					
ANR	1329513	Identifier	strdup		1328327	0					
ANR	1329514	ArgumentList	"""Microchip 8-bit PIC(r) family"""		1328327	1					
ANR	1329515	Argument	"""Microchip 8-bit PIC(r) family"""		1328327	0					
ANR	1329516	PrimaryExpression	"""Microchip 8-bit PIC(r) family"""		1328327	0					
ANR	1329517	Label	case EM_INTEL205 :	2293:1:71031:71047	1328327	262	True				
ANR	1329518	Identifier	EM_INTEL205		1328327	0					
ANR	1329519	ReturnStatement	"return strdup ( ""Reserved by Intel"" ) ;"	2293:24:71054:71089	1328327	263	True				
ANR	1329520	CallExpression	"strdup ( ""Reserved by Intel"" )"		1328327	0					
ANR	1329521	Callee	strdup		1328327	0					
ANR	1329522	Identifier	strdup		1328327	0					
ANR	1329523	ArgumentList	"""Reserved by Intel"""		1328327	1					
ANR	1329524	Argument	"""Reserved by Intel"""		1328327	0					
ANR	1329525	PrimaryExpression	"""Reserved by Intel"""		1328327	0					
ANR	1329526	Label	case EM_INTEL206 :	2294:1:71092:71108	1328327	264	True				
ANR	1329527	Identifier	EM_INTEL206		1328327	0					
ANR	1329528	ReturnStatement	"return strdup ( ""Reserved by Intel"" ) ;"	2294:24:71115:71150	1328327	265	True				
ANR	1329529	CallExpression	"strdup ( ""Reserved by Intel"" )"		1328327	0					
ANR	1329530	Callee	strdup		1328327	0					
ANR	1329531	Identifier	strdup		1328327	0					
ANR	1329532	ArgumentList	"""Reserved by Intel"""		1328327	1					
ANR	1329533	Argument	"""Reserved by Intel"""		1328327	0					
ANR	1329534	PrimaryExpression	"""Reserved by Intel"""		1328327	0					
ANR	1329535	Label	case EM_INTEL207 :	2295:1:71153:71169	1328327	266	True				
ANR	1329536	Identifier	EM_INTEL207		1328327	0					
ANR	1329537	ReturnStatement	"return strdup ( ""Reserved by Intel"" ) ;"	2295:24:71176:71211	1328327	267	True				
ANR	1329538	CallExpression	"strdup ( ""Reserved by Intel"" )"		1328327	0					
ANR	1329539	Callee	strdup		1328327	0					
ANR	1329540	Identifier	strdup		1328327	0					
ANR	1329541	ArgumentList	"""Reserved by Intel"""		1328327	1					
ANR	1329542	Argument	"""Reserved by Intel"""		1328327	0					
ANR	1329543	PrimaryExpression	"""Reserved by Intel"""		1328327	0					
ANR	1329544	Label	case EM_INTEL208 :	2296:1:71214:71230	1328327	268	True				
ANR	1329545	Identifier	EM_INTEL208		1328327	0					
ANR	1329546	ReturnStatement	"return strdup ( ""Reserved by Intel"" ) ;"	2296:24:71237:71272	1328327	269	True				
ANR	1329547	CallExpression	"strdup ( ""Reserved by Intel"" )"		1328327	0					
ANR	1329548	Callee	strdup		1328327	0					
ANR	1329549	Identifier	strdup		1328327	0					
ANR	1329550	ArgumentList	"""Reserved by Intel"""		1328327	1					
ANR	1329551	Argument	"""Reserved by Intel"""		1328327	0					
ANR	1329552	PrimaryExpression	"""Reserved by Intel"""		1328327	0					
ANR	1329553	Label	case EM_INTEL209 :	2297:1:71275:71291	1328327	270	True				
ANR	1329554	Identifier	EM_INTEL209		1328327	0					
ANR	1329555	ReturnStatement	"return strdup ( ""Reserved by Intel"" ) ;"	2297:24:71298:71333	1328327	271	True				
ANR	1329556	CallExpression	"strdup ( ""Reserved by Intel"" )"		1328327	0					
ANR	1329557	Callee	strdup		1328327	0					
ANR	1329558	Identifier	strdup		1328327	0					
ANR	1329559	ArgumentList	"""Reserved by Intel"""		1328327	1					
ANR	1329560	Argument	"""Reserved by Intel"""		1328327	0					
ANR	1329561	PrimaryExpression	"""Reserved by Intel"""		1328327	0					
ANR	1329562	Label	case EM_KM32 :	2298:1:71336:71348	1328327	272	True				
ANR	1329563	Identifier	EM_KM32		1328327	0					
ANR	1329564	ReturnStatement	"return strdup ( ""KM211 KM32 32-bit processor"" ) ;"	2298:24:71359:71404	1328327	273	True				
ANR	1329565	CallExpression	"strdup ( ""KM211 KM32 32-bit processor"" )"		1328327	0					
ANR	1329566	Callee	strdup		1328327	0					
ANR	1329567	Identifier	strdup		1328327	0					
ANR	1329568	ArgumentList	"""KM211 KM32 32-bit processor"""		1328327	1					
ANR	1329569	Argument	"""KM211 KM32 32-bit processor"""		1328327	0					
ANR	1329570	PrimaryExpression	"""KM211 KM32 32-bit processor"""		1328327	0					
ANR	1329571	Label	case EM_KMX32 :	2299:1:71407:71420	1328327	274	True				
ANR	1329572	Identifier	EM_KMX32		1328327	0					
ANR	1329573	ReturnStatement	"return strdup ( ""KM211 KMX32 32-bit processor"" ) ;"	2299:24:71430:71476	1328327	275	True				
ANR	1329574	CallExpression	"strdup ( ""KM211 KMX32 32-bit processor"" )"		1328327	0					
ANR	1329575	Callee	strdup		1328327	0					
ANR	1329576	Identifier	strdup		1328327	0					
ANR	1329577	ArgumentList	"""KM211 KMX32 32-bit processor"""		1328327	1					
ANR	1329578	Argument	"""KM211 KMX32 32-bit processor"""		1328327	0					
ANR	1329579	PrimaryExpression	"""KM211 KMX32 32-bit processor"""		1328327	0					
ANR	1329580	Label	case EM_KMX16 :	2300:1:71479:71492	1328327	276	True				
ANR	1329581	Identifier	EM_KMX16		1328327	0					
ANR	1329582	ReturnStatement	"return strdup ( ""KM211 KMX16 16-bit processor"" ) ;"	2300:24:71502:71548	1328327	277	True				
ANR	1329583	CallExpression	"strdup ( ""KM211 KMX16 16-bit processor"" )"		1328327	0					
ANR	1329584	Callee	strdup		1328327	0					
ANR	1329585	Identifier	strdup		1328327	0					
ANR	1329586	ArgumentList	"""KM211 KMX16 16-bit processor"""		1328327	1					
ANR	1329587	Argument	"""KM211 KMX16 16-bit processor"""		1328327	0					
ANR	1329588	PrimaryExpression	"""KM211 KMX16 16-bit processor"""		1328327	0					
ANR	1329589	Label	case EM_KMX8 :	2301:1:71551:71563	1328327	278	True				
ANR	1329590	Identifier	EM_KMX8		1328327	0					
ANR	1329591	ReturnStatement	"return strdup ( ""KM211 KMX8 8-bit processor"" ) ;"	2301:24:71574:71618	1328327	279	True				
ANR	1329592	CallExpression	"strdup ( ""KM211 KMX8 8-bit processor"" )"		1328327	0					
ANR	1329593	Callee	strdup		1328327	0					
ANR	1329594	Identifier	strdup		1328327	0					
ANR	1329595	ArgumentList	"""KM211 KMX8 8-bit processor"""		1328327	1					
ANR	1329596	Argument	"""KM211 KMX8 8-bit processor"""		1328327	0					
ANR	1329597	PrimaryExpression	"""KM211 KMX8 8-bit processor"""		1328327	0					
ANR	1329598	Label	case EM_KVARC :	2302:1:71621:71634	1328327	280	True				
ANR	1329599	Identifier	EM_KVARC		1328327	0					
ANR	1329600	ReturnStatement	"return strdup ( ""KM211 KVARC processor"" ) ;"	2302:24:71644:71683	1328327	281	True				
ANR	1329601	CallExpression	"strdup ( ""KM211 KVARC processor"" )"		1328327	0					
ANR	1329602	Callee	strdup		1328327	0					
ANR	1329603	Identifier	strdup		1328327	0					
ANR	1329604	ArgumentList	"""KM211 KVARC processor"""		1328327	1					
ANR	1329605	Argument	"""KM211 KVARC processor"""		1328327	0					
ANR	1329606	PrimaryExpression	"""KM211 KVARC processor"""		1328327	0					
ANR	1329607	Label	case EM_CDP :	2303:1:71686:71697	1328327	282	True				
ANR	1329608	Identifier	EM_CDP		1328327	0					
ANR	1329609	ReturnStatement	"return strdup ( ""Paneve CDP architecture family"" ) ;"	2303:24:71709:71757	1328327	283	True				
ANR	1329610	CallExpression	"strdup ( ""Paneve CDP architecture family"" )"		1328327	0					
ANR	1329611	Callee	strdup		1328327	0					
ANR	1329612	Identifier	strdup		1328327	0					
ANR	1329613	ArgumentList	"""Paneve CDP architecture family"""		1328327	1					
ANR	1329614	Argument	"""Paneve CDP architecture family"""		1328327	0					
ANR	1329615	PrimaryExpression	"""Paneve CDP architecture family"""		1328327	0					
ANR	1329616	Label	case EM_COGE :	2304:1:71760:71772	1328327	284	True				
ANR	1329617	Identifier	EM_COGE		1328327	0					
ANR	1329618	ReturnStatement	"return strdup ( ""Cognitive Smart Memory Processor"" ) ;"	2304:24:71783:71833	1328327	285	True				
ANR	1329619	CallExpression	"strdup ( ""Cognitive Smart Memory Processor"" )"		1328327	0					
ANR	1329620	Callee	strdup		1328327	0					
ANR	1329621	Identifier	strdup		1328327	0					
ANR	1329622	ArgumentList	"""Cognitive Smart Memory Processor"""		1328327	1					
ANR	1329623	Argument	"""Cognitive Smart Memory Processor"""		1328327	0					
ANR	1329624	PrimaryExpression	"""Cognitive Smart Memory Processor"""		1328327	0					
ANR	1329625	Label	case EM_COOL :	2305:1:71836:71848	1328327	286	True				
ANR	1329626	Identifier	EM_COOL		1328327	0					
ANR	1329627	ReturnStatement	"return strdup ( ""Bluechip Systems CoolEngine"" ) ;"	2305:24:71859:71904	1328327	287	True				
ANR	1329628	CallExpression	"strdup ( ""Bluechip Systems CoolEngine"" )"		1328327	0					
ANR	1329629	Callee	strdup		1328327	0					
ANR	1329630	Identifier	strdup		1328327	0					
ANR	1329631	ArgumentList	"""Bluechip Systems CoolEngine"""		1328327	1					
ANR	1329632	Argument	"""Bluechip Systems CoolEngine"""		1328327	0					
ANR	1329633	PrimaryExpression	"""Bluechip Systems CoolEngine"""		1328327	0					
ANR	1329634	Label	case EM_NORC :	2306:1:71907:71919	1328327	288	True				
ANR	1329635	Identifier	EM_NORC		1328327	0					
ANR	1329636	ReturnStatement	"return strdup ( ""Nanoradio Optimized RISC"" ) ;"	2306:24:71930:71972	1328327	289	True				
ANR	1329637	CallExpression	"strdup ( ""Nanoradio Optimized RISC"" )"		1328327	0					
ANR	1329638	Callee	strdup		1328327	0					
ANR	1329639	Identifier	strdup		1328327	0					
ANR	1329640	ArgumentList	"""Nanoradio Optimized RISC"""		1328327	1					
ANR	1329641	Argument	"""Nanoradio Optimized RISC"""		1328327	0					
ANR	1329642	PrimaryExpression	"""Nanoradio Optimized RISC"""		1328327	0					
ANR	1329643	Label	case EM_CSR_KALIMBA :	2307:1:71975:71994	1328327	290	True				
ANR	1329644	Identifier	EM_CSR_KALIMBA		1328327	0					
ANR	1329645	ReturnStatement	"return strdup ( ""CSR Kalimba architecture family"" ) ;"	2307:24:71998:72047	1328327	291	True				
ANR	1329646	CallExpression	"strdup ( ""CSR Kalimba architecture family"" )"		1328327	0					
ANR	1329647	Callee	strdup		1328327	0					
ANR	1329648	Identifier	strdup		1328327	0					
ANR	1329649	ArgumentList	"""CSR Kalimba architecture family"""		1328327	1					
ANR	1329650	Argument	"""CSR Kalimba architecture family"""		1328327	0					
ANR	1329651	PrimaryExpression	"""CSR Kalimba architecture family"""		1328327	0					
ANR	1329652	Label	case EM_Z80 :	2308:1:72050:72061	1328327	292	True				
ANR	1329653	Identifier	EM_Z80		1328327	0					
ANR	1329654	ReturnStatement	"return strdup ( ""Zilog Z80"" ) ;"	2308:24:72073:72100	1328327	293	True				
ANR	1329655	CallExpression	"strdup ( ""Zilog Z80"" )"		1328327	0					
ANR	1329656	Callee	strdup		1328327	0					
ANR	1329657	Identifier	strdup		1328327	0					
ANR	1329658	ArgumentList	"""Zilog Z80"""		1328327	1					
ANR	1329659	Argument	"""Zilog Z80"""		1328327	0					
ANR	1329660	PrimaryExpression	"""Zilog Z80"""		1328327	0					
ANR	1329661	Label	case EM_VISIUM :	2309:1:72103:72117	1328327	294	True				
ANR	1329662	Identifier	EM_VISIUM		1328327	0					
ANR	1329663	ReturnStatement	"return strdup ( ""Controls and Data Services VISIUMcore processor"" ) ;"	2309:24:72126:72191	1328327	295	True				
ANR	1329664	CallExpression	"strdup ( ""Controls and Data Services VISIUMcore processor"" )"		1328327	0					
ANR	1329665	Callee	strdup		1328327	0					
ANR	1329666	Identifier	strdup		1328327	0					
ANR	1329667	ArgumentList	"""Controls and Data Services VISIUMcore processor"""		1328327	1					
ANR	1329668	Argument	"""Controls and Data Services VISIUMcore processor"""		1328327	0					
ANR	1329669	PrimaryExpression	"""Controls and Data Services VISIUMcore processor"""		1328327	0					
ANR	1329670	Label	case EM_FT32 :	2310:1:72194:72206	1328327	296	True				
ANR	1329671	Identifier	EM_FT32		1328327	0					
ANR	1329672	ReturnStatement	"return strdup ( ""FTDI Chip FT32 high performance 32-bit RISC architecture"" ) ;"	2310:24:72217:72291	1328327	297	True				
ANR	1329673	CallExpression	"strdup ( ""FTDI Chip FT32 high performance 32-bit RISC architecture"" )"		1328327	0					
ANR	1329674	Callee	strdup		1328327	0					
ANR	1329675	Identifier	strdup		1328327	0					
ANR	1329676	ArgumentList	"""FTDI Chip FT32 high performance 32-bit RISC architecture"""		1328327	1					
ANR	1329677	Argument	"""FTDI Chip FT32 high performance 32-bit RISC architecture"""		1328327	0					
ANR	1329678	PrimaryExpression	"""FTDI Chip FT32 high performance 32-bit RISC architecture"""		1328327	0					
ANR	1329679	Label	case EM_MOXIE :	2311:1:72294:72307	1328327	298	True				
ANR	1329680	Identifier	EM_MOXIE		1328327	0					
ANR	1329681	ReturnStatement	"return strdup ( ""Moxie processor family"" ) ;"	2311:24:72317:72357	1328327	299	True				
ANR	1329682	CallExpression	"strdup ( ""Moxie processor family"" )"		1328327	0					
ANR	1329683	Callee	strdup		1328327	0					
ANR	1329684	Identifier	strdup		1328327	0					
ANR	1329685	ArgumentList	"""Moxie processor family"""		1328327	1					
ANR	1329686	Argument	"""Moxie processor family"""		1328327	0					
ANR	1329687	PrimaryExpression	"""Moxie processor family"""		1328327	0					
ANR	1329688	Label	case EM_AMDGPU :	2312:1:72360:72374	1328327	300	True				
ANR	1329689	Identifier	EM_AMDGPU		1328327	0					
ANR	1329690	ReturnStatement	"return strdup ( ""AMD GPU architecture"" ) ;"	2312:24:72383:72421	1328327	301	True				
ANR	1329691	CallExpression	"strdup ( ""AMD GPU architecture"" )"		1328327	0					
ANR	1329692	Callee	strdup		1328327	0					
ANR	1329693	Identifier	strdup		1328327	0					
ANR	1329694	ArgumentList	"""AMD GPU architecture"""		1328327	1					
ANR	1329695	Argument	"""AMD GPU architecture"""		1328327	0					
ANR	1329696	PrimaryExpression	"""AMD GPU architecture"""		1328327	0					
ANR	1329697	Label	default :	2314:1:72425:72432	1328327	302	True				
ANR	1329698	Identifier	default		1328327	0					
ANR	1329699	ReturnStatement	"return r_str_newf ( ""<unknown>: 0x%x"" , bin -> ehdr . e_machine ) ;"	2314:22:72446:72504	1328327	303	True				
ANR	1329700	CallExpression	"r_str_newf ( ""<unknown>: 0x%x"" , bin -> ehdr . e_machine )"		1328327	0					
ANR	1329701	Callee	r_str_newf		1328327	0					
ANR	1329702	Identifier	r_str_newf		1328327	0					
ANR	1329703	ArgumentList	"""<unknown>: 0x%x"""		1328327	1					
ANR	1329704	Argument	"""<unknown>: 0x%x"""		1328327	0					
ANR	1329705	PrimaryExpression	"""<unknown>: 0x%x"""		1328327	0					
ANR	1329706	Argument	bin -> ehdr . e_machine		1328327	1					
ANR	1329707	MemberAccess	bin -> ehdr . e_machine		1328327	0					
ANR	1329708	PtrMemberAccess	bin -> ehdr		1328327	0					
ANR	1329709	Identifier	bin		1328327	0					
ANR	1329710	Identifier	ehdr		1328327	1					
ANR	1329711	Identifier	e_machine		1328327	1					
ANR	1329712	ReturnType	Elf_		1328327	1					
ANR	1329713	Identifier	( r_bin_elf_get_machine_name )		1328327	2					
ANR	1329714	Identifier	r_bin_elf_get_machine_name		1328327	3					
ANR	1329715	ParameterList	ELFOBJ * bin		1328327	4					
ANR	1329716	Parameter	ELFOBJ * bin	2156:39:61378:61388	1328327	0	True				
ANR	1329717	ParameterType	ELFOBJ *		1328327	0					
ANR	1329718	Identifier	bin		1328327	1					
ANR	1329719	CFGEntryNode	ENTRY		1328327		True				
ANR	1329720	CFGExitNode	EXIT		1328327		True				
ANR	1329721	Symbol	bin		1328327						
ANR	1329722	Symbol	bin -> ehdr		1328327						
ANR	1329723	Symbol	bin -> ehdr . e_machine		1328327						
ANR	1329724	Symbol	strdup		1328327						
ANR	1329725	Symbol	r_str_newf		1328327						
ANR	1329726	Symbol	* bin		1328327						
ANR	1329727	Function	r_bin_elf_get_file_type	2318:6:72518:73247							
ANR	1329728	FunctionDef	r_bin_elf_get_file_type (ELFOBJ * bin)		1329727	0					
ANR	1329729	CompoundStatement		2318:49:72561:73247	1329727	0					
ANR	1329730	IdentifierDeclStatement	ut32 e_type ;	2319:1:72564:72575	1329727	0	True				
ANR	1329731	IdentifierDecl	e_type		1329727	0					
ANR	1329732	IdentifierDeclType	ut32		1329727	0					
ANR	1329733	Identifier	e_type		1329727	1					
ANR	1329734	IfStatement	if ( ! bin )		1329727	1					
ANR	1329735	Condition	! bin	2320:5:72582:72585	1329727	0	True				
ANR	1329736	UnaryOperationExpression	! bin		1329727	0					
ANR	1329737	UnaryOperator	!		1329727	0					
ANR	1329738	Identifier	bin		1329727	1					
ANR	1329739	CompoundStatement		3:11:26:26	1329727	1					
ANR	1329740	ReturnStatement	return NULL ;	2321:2:72592:72603	1329727	0	True				
ANR	1329741	Identifier	NULL		1329727	0					
ANR	1329742	ExpressionStatement	e_type = ( ut32 ) bin -> ehdr . e_type	2323:1:72609:72640	1329727	2	True				
ANR	1329743	AssignmentExpression	e_type = ( ut32 ) bin -> ehdr . e_type		1329727	0		=			
ANR	1329744	Identifier	e_type		1329727	0					
ANR	1329745	CastExpression	( ut32 ) bin -> ehdr . e_type		1329727	1					
ANR	1329746	CastTarget	ut32		1329727	0					
ANR	1329747	MemberAccess	bin -> ehdr . e_type		1329727	1					
ANR	1329748	PtrMemberAccess	bin -> ehdr		1329727	0					
ANR	1329749	Identifier	bin		1329727	0					
ANR	1329750	Identifier	ehdr		1329727	1					
ANR	1329751	Identifier	e_type		1329727	1					
ANR	1329752	SwitchStatement	switch ( e_type )		1329727	3					
ANR	1329753	Condition	e_type	2324:9:72701:72706	1329727	0	True				
ANR	1329754	Identifier	e_type		1329727	0					
ANR	1329755	CompoundStatement		7:17:147:147	1329727	1					
ANR	1329756	Label	case ET_NONE :	2325:1:72712:72724	1329727	0	True				
ANR	1329757	Identifier	ET_NONE		1329727	0					
ANR	1329758	ReturnStatement	"return strdup ( ""NONE (None)"" ) ;"	2325:15:72726:72755	1329727	1	True				
ANR	1329759	CallExpression	"strdup ( ""NONE (None)"" )"		1329727	0					
ANR	1329760	Callee	strdup		1329727	0					
ANR	1329761	Identifier	strdup		1329727	0					
ANR	1329762	ArgumentList	"""NONE (None)"""		1329727	1					
ANR	1329763	Argument	"""NONE (None)"""		1329727	0					
ANR	1329764	PrimaryExpression	"""NONE (None)"""		1329727	0					
ANR	1329765	Label	case ET_REL :	2326:1:72758:72769	1329727	2	True				
ANR	1329766	Identifier	ET_REL		1329727	0					
ANR	1329767	ReturnStatement	"return strdup ( ""REL (Relocatable file)"" ) ;"	2326:15:72772:72812	1329727	3	True				
ANR	1329768	CallExpression	"strdup ( ""REL (Relocatable file)"" )"		1329727	0					
ANR	1329769	Callee	strdup		1329727	0					
ANR	1329770	Identifier	strdup		1329727	0					
ANR	1329771	ArgumentList	"""REL (Relocatable file)"""		1329727	1					
ANR	1329772	Argument	"""REL (Relocatable file)"""		1329727	0					
ANR	1329773	PrimaryExpression	"""REL (Relocatable file)"""		1329727	0					
ANR	1329774	Label	case ET_EXEC :	2327:1:72815:72827	1329727	4	True				
ANR	1329775	Identifier	ET_EXEC		1329727	0					
ANR	1329776	ReturnStatement	"return strdup ( ""EXEC (Executable file)"" ) ;"	2327:15:72829:72869	1329727	5	True				
ANR	1329777	CallExpression	"strdup ( ""EXEC (Executable file)"" )"		1329727	0					
ANR	1329778	Callee	strdup		1329727	0					
ANR	1329779	Identifier	strdup		1329727	0					
ANR	1329780	ArgumentList	"""EXEC (Executable file)"""		1329727	1					
ANR	1329781	Argument	"""EXEC (Executable file)"""		1329727	0					
ANR	1329782	PrimaryExpression	"""EXEC (Executable file)"""		1329727	0					
ANR	1329783	Label	case ET_DYN :	2328:1:72872:72883	1329727	6	True				
ANR	1329784	Identifier	ET_DYN		1329727	0					
ANR	1329785	ReturnStatement	"return strdup ( ""DYN (Shared object file)"" ) ;"	2328:15:72886:72928	1329727	7	True				
ANR	1329786	CallExpression	"strdup ( ""DYN (Shared object file)"" )"		1329727	0					
ANR	1329787	Callee	strdup		1329727	0					
ANR	1329788	Identifier	strdup		1329727	0					
ANR	1329789	ArgumentList	"""DYN (Shared object file)"""		1329727	1					
ANR	1329790	Argument	"""DYN (Shared object file)"""		1329727	0					
ANR	1329791	PrimaryExpression	"""DYN (Shared object file)"""		1329727	0					
ANR	1329792	Label	case ET_CORE :	2329:1:72931:72943	1329727	8	True				
ANR	1329793	Identifier	ET_CORE		1329727	0					
ANR	1329794	ReturnStatement	"return strdup ( ""CORE (Core file)"" ) ;"	2329:15:72945:72979	1329727	9	True				
ANR	1329795	CallExpression	"strdup ( ""CORE (Core file)"" )"		1329727	0					
ANR	1329796	Callee	strdup		1329727	0					
ANR	1329797	Identifier	strdup		1329727	0					
ANR	1329798	ArgumentList	"""CORE (Core file)"""		1329727	1					
ANR	1329799	Argument	"""CORE (Core file)"""		1329727	0					
ANR	1329800	PrimaryExpression	"""CORE (Core file)"""		1329727	0					
ANR	1329801	IfStatement	if ( ( e_type >= ET_LOPROC ) && ( e_type <= ET_HIPROC ) )		1329727	4					
ANR	1329802	Condition	( e_type >= ET_LOPROC ) && ( e_type <= ET_HIPROC )	2331:5:72989:73034	1329727	0	True				
ANR	1329803	AndExpression	( e_type >= ET_LOPROC ) && ( e_type <= ET_HIPROC )		1329727	0		&&			
ANR	1329804	RelationalExpression	e_type >= ET_LOPROC		1329727	0		>=			
ANR	1329805	Identifier	e_type		1329727	0					
ANR	1329806	Identifier	ET_LOPROC		1329727	1					
ANR	1329807	RelationalExpression	e_type <= ET_HIPROC		1329727	1		<=			
ANR	1329808	Identifier	e_type		1329727	0					
ANR	1329809	Identifier	ET_HIPROC		1329727	1					
ANR	1329810	CompoundStatement		14:53:475:475	1329727	1					
ANR	1329811	ReturnStatement	"return r_str_newf ( ""Processor Specific: %x"" , e_type ) ;"	2332:2:73041:73093	1329727	0	True				
ANR	1329812	CallExpression	"r_str_newf ( ""Processor Specific: %x"" , e_type )"		1329727	0					
ANR	1329813	Callee	r_str_newf		1329727	0					
ANR	1329814	Identifier	r_str_newf		1329727	0					
ANR	1329815	ArgumentList	"""Processor Specific: %x"""		1329727	1					
ANR	1329816	Argument	"""Processor Specific: %x"""		1329727	0					
ANR	1329817	PrimaryExpression	"""Processor Specific: %x"""		1329727	0					
ANR	1329818	Argument	e_type		1329727	1					
ANR	1329819	Identifier	e_type		1329727	0					
ANR	1329820	IfStatement	if ( ( e_type >= ET_LOOS ) && ( e_type <= ET_HIOS ) )		1329727	5					
ANR	1329821	Condition	( e_type >= ET_LOOS ) && ( e_type <= ET_HIOS )	2334:5:73103:73144	1329727	0	True				
ANR	1329822	AndExpression	( e_type >= ET_LOOS ) && ( e_type <= ET_HIOS )		1329727	0		&&			
ANR	1329823	RelationalExpression	e_type >= ET_LOOS		1329727	0		>=			
ANR	1329824	Identifier	e_type		1329727	0					
ANR	1329825	Identifier	ET_LOOS		1329727	1					
ANR	1329826	RelationalExpression	e_type <= ET_HIOS		1329727	1		<=			
ANR	1329827	Identifier	e_type		1329727	0					
ANR	1329828	Identifier	ET_HIOS		1329727	1					
ANR	1329829	CompoundStatement		17:49:585:585	1329727	1					
ANR	1329830	ReturnStatement	"return r_str_newf ( ""OS Specific: %x"" , e_type ) ;"	2335:2:73151:73196	1329727	0	True				
ANR	1329831	CallExpression	"r_str_newf ( ""OS Specific: %x"" , e_type )"		1329727	0					
ANR	1329832	Callee	r_str_newf		1329727	0					
ANR	1329833	Identifier	r_str_newf		1329727	0					
ANR	1329834	ArgumentList	"""OS Specific: %x"""		1329727	1					
ANR	1329835	Argument	"""OS Specific: %x"""		1329727	0					
ANR	1329836	PrimaryExpression	"""OS Specific: %x"""		1329727	0					
ANR	1329837	Argument	e_type		1329727	1					
ANR	1329838	Identifier	e_type		1329727	0					
ANR	1329839	ReturnStatement	"return r_str_newf ( ""<unknown>: %x"" , e_type ) ;"	2337:1:73202:73245	1329727	6	True				
ANR	1329840	CallExpression	"r_str_newf ( ""<unknown>: %x"" , e_type )"		1329727	0					
ANR	1329841	Callee	r_str_newf		1329727	0					
ANR	1329842	Identifier	r_str_newf		1329727	0					
ANR	1329843	ArgumentList	"""<unknown>: %x"""		1329727	1					
ANR	1329844	Argument	"""<unknown>: %x"""		1329727	0					
ANR	1329845	PrimaryExpression	"""<unknown>: %x"""		1329727	0					
ANR	1329846	Argument	e_type		1329727	1					
ANR	1329847	Identifier	e_type		1329727	0					
ANR	1329848	ReturnType	Elf_		1329727	1					
ANR	1329849	Identifier	( r_bin_elf_get_file_type )		1329727	2					
ANR	1329850	Identifier	r_bin_elf_get_file_type		1329727	3					
ANR	1329851	ParameterList	ELFOBJ * bin		1329727	4					
ANR	1329852	Parameter	ELFOBJ * bin	2318:36:72548:72558	1329727	0	True				
ANR	1329853	ParameterType	ELFOBJ *		1329727	0					
ANR	1329854	Identifier	bin		1329727	1					
ANR	1329855	CFGEntryNode	ENTRY		1329727		True				
ANR	1329856	CFGExitNode	EXIT		1329727		True				
ANR	1329857	Symbol	bin -> ehdr . e_type		1329727						
ANR	1329858	Symbol	NULL		1329727						
ANR	1329859	Symbol	ET_LOOS		1329727						
ANR	1329860	Symbol	ET_HIOS		1329727						
ANR	1329861	Symbol	bin		1329727						
ANR	1329862	Symbol	bin -> ehdr		1329727						
ANR	1329863	Symbol	ET_LOPROC		1329727						
ANR	1329864	Symbol	strdup		1329727						
ANR	1329865	Symbol	r_str_newf		1329727						
ANR	1329866	Symbol	ET_HIPROC		1329727						
ANR	1329867	Symbol	e_type		1329727						
ANR	1329868	Symbol	* bin		1329727						
ANR	1329869	Function	r_bin_elf_get_elf_class	2340:6:73256:73564							
ANR	1329870	FunctionDef	r_bin_elf_get_elf_class (ELFOBJ * bin)		1329869	0					
ANR	1329871	CompoundStatement		2340:49:73299:73564	1329869	0					
ANR	1329872	SwitchStatement	switch ( bin -> ehdr . e_ident [ EI_CLASS ] )		1329869	0					
ANR	1329873	Condition	bin -> ehdr . e_ident [ EI_CLASS ]	2341:9:73310:73336	1329869	0	True				
ANR	1329874	ArrayIndexing	bin -> ehdr . e_ident [ EI_CLASS ]		1329869	0					
ANR	1329875	MemberAccess	bin -> ehdr . e_ident		1329869	0					
ANR	1329876	PtrMemberAccess	bin -> ehdr		1329869	0					
ANR	1329877	Identifier	bin		1329869	0					
ANR	1329878	Identifier	ehdr		1329869	1					
ANR	1329879	Identifier	e_ident		1329869	1					
ANR	1329880	Identifier	EI_CLASS		1329869	1					
ANR	1329881	CompoundStatement		2:38:39:39	1329869	1					
ANR	1329882	Label	case ELFCLASSNONE :	2342:1:73342:73359	1329869	0	True				
ANR	1329883	Identifier	ELFCLASSNONE		1329869	0					
ANR	1329884	ReturnStatement	"return strdup ( ""none"" ) ;"	2342:20:73361:73383	1329869	1	True				
ANR	1329885	CallExpression	"strdup ( ""none"" )"		1329869	0					
ANR	1329886	Callee	strdup		1329869	0					
ANR	1329887	Identifier	strdup		1329869	0					
ANR	1329888	ArgumentList	"""none"""		1329869	1					
ANR	1329889	Argument	"""none"""		1329869	0					
ANR	1329890	PrimaryExpression	"""none"""		1329869	0					
ANR	1329891	Label	case ELFCLASS32 :	2343:1:73386:73401	1329869	2	True				
ANR	1329892	Identifier	ELFCLASS32		1329869	0					
ANR	1329893	ReturnStatement	"return strdup ( ""ELF32"" ) ;"	2343:20:73405:73428	1329869	3	True				
ANR	1329894	CallExpression	"strdup ( ""ELF32"" )"		1329869	0					
ANR	1329895	Callee	strdup		1329869	0					
ANR	1329896	Identifier	strdup		1329869	0					
ANR	1329897	ArgumentList	"""ELF32"""		1329869	1					
ANR	1329898	Argument	"""ELF32"""		1329869	0					
ANR	1329899	PrimaryExpression	"""ELF32"""		1329869	0					
ANR	1329900	Label	case ELFCLASS64 :	2344:1:73431:73446	1329869	4	True				
ANR	1329901	Identifier	ELFCLASS64		1329869	0					
ANR	1329902	ReturnStatement	"return strdup ( ""ELF64"" ) ;"	2344:20:73450:73473	1329869	5	True				
ANR	1329903	CallExpression	"strdup ( ""ELF64"" )"		1329869	0					
ANR	1329904	Callee	strdup		1329869	0					
ANR	1329905	Identifier	strdup		1329869	0					
ANR	1329906	ArgumentList	"""ELF64"""		1329869	1					
ANR	1329907	Argument	"""ELF64"""		1329869	0					
ANR	1329908	PrimaryExpression	"""ELF64"""		1329869	0					
ANR	1329909	Label	default :	2345:1:73476:73483	1329869	6	True				
ANR	1329910	Identifier	default		1329869	0					
ANR	1329911	ReturnStatement	"return r_str_newf ( ""<unknown: %x>"" , bin -> ehdr . e_ident [ EI_CLASS ] ) ;"	2345:20:73495:73559	1329869	7	True				
ANR	1329912	CallExpression	"r_str_newf ( ""<unknown: %x>"" , bin -> ehdr . e_ident [ EI_CLASS ] )"		1329869	0					
ANR	1329913	Callee	r_str_newf		1329869	0					
ANR	1329914	Identifier	r_str_newf		1329869	0					
ANR	1329915	ArgumentList	"""<unknown: %x>"""		1329869	1					
ANR	1329916	Argument	"""<unknown: %x>"""		1329869	0					
ANR	1329917	PrimaryExpression	"""<unknown: %x>"""		1329869	0					
ANR	1329918	Argument	bin -> ehdr . e_ident [ EI_CLASS ]		1329869	1					
ANR	1329919	ArrayIndexing	bin -> ehdr . e_ident [ EI_CLASS ]		1329869	0					
ANR	1329920	MemberAccess	bin -> ehdr . e_ident		1329869	0					
ANR	1329921	PtrMemberAccess	bin -> ehdr		1329869	0					
ANR	1329922	Identifier	bin		1329869	0					
ANR	1329923	Identifier	ehdr		1329869	1					
ANR	1329924	Identifier	e_ident		1329869	1					
ANR	1329925	Identifier	EI_CLASS		1329869	1					
ANR	1329926	ReturnType	Elf_		1329869	1					
ANR	1329927	Identifier	( r_bin_elf_get_elf_class )		1329869	2					
ANR	1329928	Identifier	r_bin_elf_get_elf_class		1329869	3					
ANR	1329929	ParameterList	ELFOBJ * bin		1329869	4					
ANR	1329930	Parameter	ELFOBJ * bin	2340:36:73286:73296	1329869	0	True				
ANR	1329931	ParameterType	ELFOBJ *		1329869	0					
ANR	1329932	Identifier	bin		1329869	1					
ANR	1329933	CFGEntryNode	ENTRY		1329869		True				
ANR	1329934	CFGExitNode	EXIT		1329869		True				
ANR	1329935	Symbol	* EI_CLASS		1329869						
ANR	1329936	Symbol	* bin -> ehdr		1329869						
ANR	1329937	Symbol	EI_CLASS		1329869						
ANR	1329938	Symbol	bin		1329869						
ANR	1329939	Symbol	bin -> ehdr . e_ident		1329869						
ANR	1329940	Symbol	bin -> ehdr		1329869						
ANR	1329941	Symbol	* * bin		1329869						
ANR	1329942	Symbol	strdup		1329869						
ANR	1329943	Symbol	r_str_newf		1329869						
ANR	1329944	Symbol	* bin -> ehdr . e_ident		1329869						
ANR	1329945	Symbol	* bin		1329869						
ANR	1329946	Function	r_bin_elf_get_bits	2349:0:73567:75148							
ANR	1329947	FunctionDef	r_bin_elf_get_bits (ELFOBJ * bin)		1329946	0					
ANR	1329948	CompoundStatement		2349:42:73609:75148	1329946	0					
ANR	1329949	IfStatement	if ( bin -> ehdr . e_machine == EM_ARC_A5 )		1329946	0					
ANR	1329950	Condition	bin -> ehdr . e_machine == EM_ARC_A5	2351:5:73642:73673	1329946	0	True				
ANR	1329951	EqualityExpression	bin -> ehdr . e_machine == EM_ARC_A5		1329946	0		==			
ANR	1329952	MemberAccess	bin -> ehdr . e_machine		1329946	0					
ANR	1329953	PtrMemberAccess	bin -> ehdr		1329946	0					
ANR	1329954	Identifier	bin		1329946	0					
ANR	1329955	Identifier	ehdr		1329946	1					
ANR	1329956	Identifier	e_machine		1329946	1					
ANR	1329957	Identifier	EM_ARC_A5		1329946	1					
ANR	1329958	CompoundStatement		3:39:66:66	1329946	1					
ANR	1329959	ReturnStatement	return 16 ;	2352:2:73680:73689	1329946	0	True				
ANR	1329960	PrimaryExpression	16		1329946	0					
ANR	1329961	IfStatement	if ( bin -> phdr && bin -> ehdr . e_machine == EM_MIPS )		1329946	1					
ANR	1329962	Condition	bin -> phdr && bin -> ehdr . e_machine == EM_MIPS	2355:5:73719:73761	1329946	0	True				
ANR	1329963	AndExpression	bin -> phdr && bin -> ehdr . e_machine == EM_MIPS		1329946	0		&&			
ANR	1329964	PtrMemberAccess	bin -> phdr		1329946	0					
ANR	1329965	Identifier	bin		1329946	0					
ANR	1329966	Identifier	phdr		1329946	1					
ANR	1329967	EqualityExpression	bin -> ehdr . e_machine == EM_MIPS		1329946	1		==			
ANR	1329968	MemberAccess	bin -> ehdr . e_machine		1329946	0					
ANR	1329969	PtrMemberAccess	bin -> ehdr		1329946	0					
ANR	1329970	Identifier	bin		1329946	0					
ANR	1329971	Identifier	ehdr		1329946	1					
ANR	1329972	Identifier	e_machine		1329946	1					
ANR	1329973	Identifier	EM_MIPS		1329946	1					
ANR	1329974	CompoundStatement		8:2:158:212	1329946	1					
ANR	1329975	IdentifierDeclStatement	const ut32 mipsType = bin -> ehdr . e_flags & EF_MIPS_ARCH ;	2356:2:73768:73822	1329946	0	True				
ANR	1329976	IdentifierDecl	mipsType = bin -> ehdr . e_flags & EF_MIPS_ARCH		1329946	0					
ANR	1329977	IdentifierDeclType	const ut32		1329946	0					
ANR	1329978	Identifier	mipsType		1329946	1					
ANR	1329979	AssignmentExpression	mipsType = bin -> ehdr . e_flags & EF_MIPS_ARCH		1329946	2		=			
ANR	1329980	Identifier	mipsType		1329946	0					
ANR	1329981	BitAndExpression	bin -> ehdr . e_flags & EF_MIPS_ARCH		1329946	1		&			
ANR	1329982	MemberAccess	bin -> ehdr . e_flags		1329946	0					
ANR	1329983	PtrMemberAccess	bin -> ehdr		1329946	0					
ANR	1329984	Identifier	bin		1329946	0					
ANR	1329985	Identifier	ehdr		1329946	1					
ANR	1329986	Identifier	e_flags		1329946	1					
ANR	1329987	Identifier	EF_MIPS_ARCH		1329946	1					
ANR	1329988	IfStatement	if ( bin -> ehdr . e_type == ET_EXEC )		1329946	1					
ANR	1329989	Condition	bin -> ehdr . e_type == ET_EXEC	2357:6:73830:73856	1329946	0	True				
ANR	1329990	EqualityExpression	bin -> ehdr . e_type == ET_EXEC		1329946	0		==			
ANR	1329991	MemberAccess	bin -> ehdr . e_type		1329946	0					
ANR	1329992	PtrMemberAccess	bin -> ehdr		1329946	0					
ANR	1329993	Identifier	bin		1329946	0					
ANR	1329994	Identifier	ehdr		1329946	1					
ANR	1329995	Identifier	e_type		1329946	1					
ANR	1329996	Identifier	ET_EXEC		1329946	1					
ANR	1329997	CompoundStatement		11:3:264:287	1329946	1					
ANR	1329998	IdentifierDeclStatement	int i ;	2358:3:73864:73869	1329946	0	True				
ANR	1329999	IdentifierDecl	i		1329946	0					
ANR	1330000	IdentifierDeclType	int		1329946	0					
ANR	1330001	Identifier	i		1329946	1					
ANR	1330002	IdentifierDeclStatement	bool haveInterp = false ;	2359:3:73874:73897	1329946	1	True				
ANR	1330003	IdentifierDecl	haveInterp = false		1329946	0					
ANR	1330004	IdentifierDeclType	bool		1329946	0					
ANR	1330005	Identifier	haveInterp		1329946	1					
ANR	1330006	AssignmentExpression	haveInterp = false		1329946	2		=			
ANR	1330007	Identifier	false		1329946	0					
ANR	1330008	Identifier	false		1329946	1					
ANR	1330009	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		1329946	2					
ANR	1330010	ForInit	i = 0 ;	2360:8:73907:73912	1329946	0	True				
ANR	1330011	AssignmentExpression	i = 0		1329946	0		=			
ANR	1330012	Identifier	i		1329946	0					
ANR	1330013	PrimaryExpression	0		1329946	1					
ANR	1330014	Condition	i < bin -> ehdr . e_phnum	2360:15:73914:73934	1329946	1	True				
ANR	1330015	RelationalExpression	i < bin -> ehdr . e_phnum		1329946	0		<			
ANR	1330016	Identifier	i		1329946	0					
ANR	1330017	MemberAccess	bin -> ehdr . e_phnum		1329946	1					
ANR	1330018	PtrMemberAccess	bin -> ehdr		1329946	0					
ANR	1330019	Identifier	bin		1329946	0					
ANR	1330020	Identifier	ehdr		1329946	1					
ANR	1330021	Identifier	e_phnum		1329946	1					
ANR	1330022	PostIncDecOperationExpression	i ++	2360:38:73937:73939	1329946	2	True				
ANR	1330023	Identifier	i		1329946	0					
ANR	1330024	IncDec	++		1329946	1					
ANR	1330025	CompoundStatement		12:43:332:332	1329946	3					
ANR	1330026	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_INTERP )		1329946	0					
ANR	1330027	Condition	bin -> phdr [ i ] . p_type == PT_INTERP	2361:8:73952:73983	1329946	0	True				
ANR	1330028	EqualityExpression	bin -> phdr [ i ] . p_type == PT_INTERP		1329946	0		==			
ANR	1330029	MemberAccess	bin -> phdr [ i ] . p_type		1329946	0					
ANR	1330030	ArrayIndexing	bin -> phdr [ i ]		1329946	0					
ANR	1330031	PtrMemberAccess	bin -> phdr		1329946	0					
ANR	1330032	Identifier	bin		1329946	0					
ANR	1330033	Identifier	phdr		1329946	1					
ANR	1330034	Identifier	i		1329946	1					
ANR	1330035	Identifier	p_type		1329946	1					
ANR	1330036	Identifier	PT_INTERP		1329946	1					
ANR	1330037	CompoundStatement		13:42:376:376	1329946	1					
ANR	1330038	ExpressionStatement	haveInterp = true	2362:5:73993:74010	1329946	0	True				
ANR	1330039	AssignmentExpression	haveInterp = true		1329946	0		=			
ANR	1330040	Identifier	haveInterp		1329946	0					
ANR	1330041	Identifier	true		1329946	1					
ANR	1330042	IfStatement	if ( ! haveInterp && mipsType == EF_MIPS_ARCH_3 )		1329946	3					
ANR	1330043	Condition	! haveInterp && mipsType == EF_MIPS_ARCH_3	2365:7:74030:74070	1329946	0	True				
ANR	1330044	AndExpression	! haveInterp && mipsType == EF_MIPS_ARCH_3		1329946	0		&&			
ANR	1330045	UnaryOperationExpression	! haveInterp		1329946	0					
ANR	1330046	UnaryOperator	!		1329946	0					
ANR	1330047	Identifier	haveInterp		1329946	1					
ANR	1330048	EqualityExpression	mipsType == EF_MIPS_ARCH_3		1329946	1		==			
ANR	1330049	Identifier	mipsType		1329946	0					
ANR	1330050	Identifier	EF_MIPS_ARCH_3		1329946	1					
ANR	1330051	CompoundStatement		17:50:463:463	1329946	1					
ANR	1330052	ReturnStatement	return 64 ;	2367:4:74104:74113	1329946	0	True				
ANR	1330053	PrimaryExpression	64		1329946	0					
ANR	1330054	SwitchStatement	switch ( mipsType )		1329946	2					
ANR	1330055	Condition	mipsType	2371:10:74230:74237	1329946	0	True				
ANR	1330056	Identifier	mipsType		1329946	0					
ANR	1330057	CompoundStatement		23:20:630:630	1329946	1					
ANR	1330058	Label	case EF_MIPS_ARCH_1 :	2372:2:74244:74263	1329946	0	True				
ANR	1330059	Identifier	EF_MIPS_ARCH_1		1329946	0					
ANR	1330060	Label	case EF_MIPS_ARCH_2 :	2373:2:74267:74286	1329946	1	True				
ANR	1330061	Identifier	EF_MIPS_ARCH_2		1329946	0					
ANR	1330062	Label	case EF_MIPS_ARCH_3 :	2374:2:74290:74309	1329946	2	True				
ANR	1330063	Identifier	EF_MIPS_ARCH_3		1329946	0					
ANR	1330064	Label	case EF_MIPS_ARCH_4 :	2375:2:74313:74332	1329946	3	True				
ANR	1330065	Identifier	EF_MIPS_ARCH_4		1329946	0					
ANR	1330066	Label	case EF_MIPS_ARCH_5 :	2376:2:74336:74355	1329946	4	True				
ANR	1330067	Identifier	EF_MIPS_ARCH_5		1329946	0					
ANR	1330068	Label	case EF_MIPS_ARCH_32 :	2377:2:74359:74379	1329946	5	True				
ANR	1330069	Identifier	EF_MIPS_ARCH_32		1329946	0					
ANR	1330070	ReturnStatement	return 32 ;	2378:3:74384:74393	1329946	6	True				
ANR	1330071	PrimaryExpression	32		1329946	0					
ANR	1330072	Label	case EF_MIPS_ARCH_64 :	2379:2:74397:74417	1329946	7	True				
ANR	1330073	Identifier	EF_MIPS_ARCH_64		1329946	0					
ANR	1330074	ReturnStatement	return 64 ;	2380:3:74422:74431	1329946	8	True				
ANR	1330075	PrimaryExpression	64		1329946	0					
ANR	1330076	Label	case EF_MIPS_ARCH_32R2 :	2381:2:74435:74457	1329946	9	True				
ANR	1330077	Identifier	EF_MIPS_ARCH_32R2		1329946	0					
ANR	1330078	ReturnStatement	return 32 ;	2382:3:74462:74471	1329946	10	True				
ANR	1330079	PrimaryExpression	32		1329946	0					
ANR	1330080	Label	case EF_MIPS_ARCH_64R2 :	2383:2:74475:74497	1329946	11	True				
ANR	1330081	Identifier	EF_MIPS_ARCH_64R2		1329946	0					
ANR	1330082	ReturnStatement	return 64 ;	2384:3:74502:74511	1329946	12	True				
ANR	1330083	PrimaryExpression	64		1329946	0					
ANR	1330084	BreakStatement	break ;	2385:3:74516:74521	1329946	13	True				
ANR	1330085	ReturnStatement	return 32 ;	2387:2:74529:74538	1329946	3	True				
ANR	1330086	PrimaryExpression	32		1329946	0					
ANR	1330087	IfStatement	if ( bin -> ehdr . e_machine == EM_ARM )		1329946	2					
ANR	1330088	Condition	bin -> ehdr . e_machine == EM_ARM	2390:5:74570:74598	1329946	0	True				
ANR	1330089	EqualityExpression	bin -> ehdr . e_machine == EM_ARM		1329946	0		==			
ANR	1330090	MemberAccess	bin -> ehdr . e_machine		1329946	0					
ANR	1330091	PtrMemberAccess	bin -> ehdr		1329946	0					
ANR	1330092	Identifier	bin		1329946	0					
ANR	1330093	Identifier	ehdr		1329946	1					
ANR	1330094	Identifier	e_machine		1329946	1					
ANR	1330095	Identifier	EM_ARM		1329946	1					
ANR	1330096	CompoundStatement		55:2:1277:1328	1329946	1					
ANR	1330097	IfStatement	if ( bin -> ehdr . e_type != ET_EXEC )		1329946	0					
ANR	1330098	Condition	bin -> ehdr . e_type != ET_EXEC	2391:6:74609:74635	1329946	0	True				
ANR	1330099	EqualityExpression	bin -> ehdr . e_type != ET_EXEC		1329946	0		!=			
ANR	1330100	MemberAccess	bin -> ehdr . e_type		1329946	0					
ANR	1330101	PtrMemberAccess	bin -> ehdr		1329946	0					
ANR	1330102	Identifier	bin		1329946	0					
ANR	1330103	Identifier	ehdr		1329946	1					
ANR	1330104	Identifier	e_type		1329946	1					
ANR	1330105	Identifier	ET_EXEC		1329946	1					
ANR	1330106	CompoundStatement		44:3:1033:1066	1329946	1					
ANR	1330107	IdentifierDeclStatement	struct r_bin_elf_symbol_t * symbol ;	2392:3:74643:74676	1329946	0	True				
ANR	1330108	IdentifierDecl	* symbol		1329946	0					
ANR	1330109	IdentifierDeclType	struct r_bin_elf_symbol_t *		1329946	0					
ANR	1330110	Identifier	symbol		1329946	1					
ANR	1330111	IfStatement	if ( ( symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin ) ) )		1329946	1					
ANR	1330112	Condition	symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin )	2393:7:74685:74728	1329946	0	True				
ANR	1330113	AssignmentExpression	symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin )		1329946	0		=			
ANR	1330114	Identifier	symbol		1329946	0					
ANR	1330115	CallExpression	Elf_ ( r_bin_elf_get_symbols ) ( bin )		1329946	1					
ANR	1330116	Callee	Elf_ ( r_bin_elf_get_symbols )		1329946	0					
ANR	1330117	CallExpression	Elf_ ( r_bin_elf_get_symbols )		1329946	0					
ANR	1330118	Callee	Elf_		1329946	0					
ANR	1330119	Identifier	Elf_		1329946	0					
ANR	1330120	ArgumentList	r_bin_elf_get_symbols		1329946	1					
ANR	1330121	Argument	r_bin_elf_get_symbols		1329946	0					
ANR	1330122	Identifier	r_bin_elf_get_symbols		1329946	0					
ANR	1330123	ArgumentList	bin		1329946	1					
ANR	1330124	Argument	bin		1329946	0					
ANR	1330125	Identifier	bin		1329946	0					
ANR	1330126	CompoundStatement		46:4:1127:1136	1329946	1					
ANR	1330127	IdentifierDeclStatement	int i = 0 ;	2394:4:74737:74746	1329946	0	True				
ANR	1330128	IdentifierDecl	i = 0		1329946	0					
ANR	1330129	IdentifierDeclType	int		1329946	0					
ANR	1330130	Identifier	i		1329946	1					
ANR	1330131	AssignmentExpression	i = 0		1329946	2		=			
ANR	1330132	Identifier	i		1329946	0					
ANR	1330133	PrimaryExpression	0		1329946	1					
ANR	1330134	ForStatement	for ( i = 0 ; ! symbol [ i ] . last ; i ++ )		1329946	1					
ANR	1330135	ForInit	i = 0 ;	2395:9:74757:74762	1329946	0	True				
ANR	1330136	AssignmentExpression	i = 0		1329946	0		=			
ANR	1330137	Identifier	i		1329946	0					
ANR	1330138	PrimaryExpression	0		1329946	1					
ANR	1330139	Condition	! symbol [ i ] . last	2395:16:74764:74778	1329946	1	True				
ANR	1330140	UnaryOperationExpression	! symbol [ i ] . last		1329946	0					
ANR	1330141	UnaryOperator	!		1329946	0					
ANR	1330142	MemberAccess	symbol [ i ] . last		1329946	1					
ANR	1330143	ArrayIndexing	symbol [ i ]		1329946	0					
ANR	1330144	Identifier	symbol		1329946	0					
ANR	1330145	Identifier	i		1329946	1					
ANR	1330146	Identifier	last		1329946	1					
ANR	1330147	PostIncDecOperationExpression	i ++	2395:33:74781:74783	1329946	2	True				
ANR	1330148	Identifier	i		1329946	0					
ANR	1330149	IncDec	++		1329946	1					
ANR	1330150	CompoundStatement		48:5:1183:1212	1329946	3					
ANR	1330151	IdentifierDeclStatement	ut64 paddr = symbol [ i ] . offset ;	2396:5:74793:74822	1329946	0	True				
ANR	1330152	IdentifierDecl	paddr = symbol [ i ] . offset		1329946	0					
ANR	1330153	IdentifierDeclType	ut64		1329946	0					
ANR	1330154	Identifier	paddr		1329946	1					
ANR	1330155	AssignmentExpression	paddr = symbol [ i ] . offset		1329946	2		=			
ANR	1330156	Identifier	paddr		1329946	0					
ANR	1330157	MemberAccess	symbol [ i ] . offset		1329946	1					
ANR	1330158	ArrayIndexing	symbol [ i ]		1329946	0					
ANR	1330159	Identifier	symbol		1329946	0					
ANR	1330160	Identifier	i		1329946	1					
ANR	1330161	Identifier	offset		1329946	1					
ANR	1330162	IfStatement	if ( paddr & 1 )		1329946	1					
ANR	1330163	Condition	paddr & 1	2397:9:74833:74841	1329946	0	True				
ANR	1330164	BitAndExpression	paddr & 1		1329946	0		&			
ANR	1330165	Identifier	paddr		1329946	0					
ANR	1330166	PrimaryExpression	1		1329946	1					
ANR	1330167	CompoundStatement		49:20:1234:1234	1329946	1					
ANR	1330168	ReturnStatement	return 16 ;	2398:6:74852:74861	1329946	0	True				
ANR	1330169	PrimaryExpression	16		1329946	0					
ANR	1330170	IdentifierDeclStatement	ut64 entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin ) ;	2403:2:74887:74938	1329946	1	True				
ANR	1330171	IdentifierDecl	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1329946	0					
ANR	1330172	IdentifierDeclType	ut64		1329946	0					
ANR	1330173	Identifier	entry		1329946	1					
ANR	1330174	AssignmentExpression	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1329946	2		=			
ANR	1330175	Identifier	entry		1329946	0					
ANR	1330176	CallExpression	Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		1329946	1					
ANR	1330177	Callee	Elf_ ( r_bin_elf_get_entry_offset )		1329946	0					
ANR	1330178	CallExpression	Elf_ ( r_bin_elf_get_entry_offset )		1329946	0					
ANR	1330179	Callee	Elf_		1329946	0					
ANR	1330180	Identifier	Elf_		1329946	0					
ANR	1330181	ArgumentList	r_bin_elf_get_entry_offset		1329946	1					
ANR	1330182	Argument	r_bin_elf_get_entry_offset		1329946	0					
ANR	1330183	Identifier	r_bin_elf_get_entry_offset		1329946	0					
ANR	1330184	ArgumentList	bin		1329946	1					
ANR	1330185	Argument	bin		1329946	0					
ANR	1330186	Identifier	bin		1329946	0					
ANR	1330187	IfStatement	if ( entry & 1 )		1329946	2					
ANR	1330188	Condition	entry & 1	2404:6:74946:74954	1329946	0	True				
ANR	1330189	BitAndExpression	entry & 1		1329946	0		&			
ANR	1330190	Identifier	entry		1329946	0					
ANR	1330191	PrimaryExpression	1		1329946	1					
ANR	1330192	CompoundStatement		56:17:1347:1347	1329946	1					
ANR	1330193	ReturnStatement	return 16 ;	2405:3:74962:74971	1329946	0	True				
ANR	1330194	PrimaryExpression	16		1329946	0					
ANR	1330195	SwitchStatement	switch ( bin -> ehdr . e_ident [ EI_CLASS ] )		1329946	3					
ANR	1330196	Condition	bin -> ehdr . e_ident [ EI_CLASS ]	2408:9:74989:75015	1329946	0	True				
ANR	1330197	ArrayIndexing	bin -> ehdr . e_ident [ EI_CLASS ]		1329946	0					
ANR	1330198	MemberAccess	bin -> ehdr . e_ident		1329946	0					
ANR	1330199	PtrMemberAccess	bin -> ehdr		1329946	0					
ANR	1330200	Identifier	bin		1329946	0					
ANR	1330201	Identifier	ehdr		1329946	1					
ANR	1330202	Identifier	e_ident		1329946	1					
ANR	1330203	Identifier	EI_CLASS		1329946	1					
ANR	1330204	CompoundStatement		60:38:1408:1408	1329946	1					
ANR	1330205	Label	case ELFCLASS32 :	2409:1:75021:75036	1329946	0	True				
ANR	1330206	Identifier	ELFCLASS32		1329946	0					
ANR	1330207	ReturnStatement	return 32 ;	2409:20:75040:75049	1329946	1	True				
ANR	1330208	PrimaryExpression	32		1329946	0					
ANR	1330209	Label	case ELFCLASS64 :	2410:1:75052:75067	1329946	2	True				
ANR	1330210	Identifier	ELFCLASS64		1329946	0					
ANR	1330211	ReturnStatement	return 64 ;	2410:20:75071:75080	1329946	3	True				
ANR	1330212	PrimaryExpression	64		1329946	0					
ANR	1330213	Label	case ELFCLASSNONE :	2411:1:75083:75100	1329946	4	True				
ANR	1330214	Identifier	ELFCLASSNONE		1329946	0					
ANR	1330215	Label	default :	2412:1:75103:75110	1329946	5	True				
ANR	1330216	Identifier	default		1329946	0					
ANR	1330217	ReturnStatement	return 32 ;	2412:20:75122:75131	1329946	6	True				
ANR	1330218	PrimaryExpression	32		1329946	0					
ANR	1330219	ReturnType	int Elf_		1329946	1					
ANR	1330220	Identifier	( r_bin_elf_get_bits )		1329946	2					
ANR	1330221	Identifier	r_bin_elf_get_bits		1329946	3					
ANR	1330222	ParameterList	ELFOBJ * bin		1329946	4					
ANR	1330223	Parameter	ELFOBJ * bin	2349:29:73596:73606	1329946	0	True				
ANR	1330224	ParameterType	ELFOBJ *		1329946	0					
ANR	1330225	Identifier	bin		1329946	1					
ANR	1330226	CFGEntryNode	ENTRY		1329946		True				
ANR	1330227	CFGExitNode	EXIT		1329946		True				
ANR	1330228	Symbol	symbol [ i ] . last		1329946						
ANR	1330229	Symbol	symbol		1329946						
ANR	1330230	Symbol	EM_ARM		1329946						
ANR	1330231	Symbol	bin		1329946						
ANR	1330232	Symbol	EM_MIPS		1329946						
ANR	1330233	Symbol	bin -> phdr		1329946						
ANR	1330234	Symbol	r_bin_elf_get_symbols		1329946						
ANR	1330235	Symbol	* bin		1329946						
ANR	1330236	Symbol	mipsType		1329946						
ANR	1330237	Symbol	* EI_CLASS		1329946						
ANR	1330238	Symbol	EM_ARC_A5		1329946						
ANR	1330239	Symbol	bin -> ehdr . e_flags		1329946						
ANR	1330240	Symbol	* bin -> ehdr		1329946						
ANR	1330241	Symbol	PT_INTERP		1329946						
ANR	1330242	Symbol	bin -> ehdr . e_ident		1329946						
ANR	1330243	Symbol	bin -> ehdr		1329946						
ANR	1330244	Symbol	* * bin		1329946						
ANR	1330245	Symbol	* symbol		1329946						
ANR	1330246	Symbol	r_bin_elf_get_entry_offset		1329946						
ANR	1330247	Symbol	bin -> ehdr . e_type		1329946						
ANR	1330248	Symbol	Elf_		1329946						
ANR	1330249	Symbol	ET_EXEC		1329946						
ANR	1330250	Symbol	haveInterp		1329946						
ANR	1330251	Symbol	false		1329946						
ANR	1330252	Symbol	EF_MIPS_ARCH_3		1329946						
ANR	1330253	Symbol	i		1329946						
ANR	1330254	Symbol	bin -> ehdr . e_phnum		1329946						
ANR	1330255	Symbol	* bin -> ehdr . e_ident		1329946						
ANR	1330256	Symbol	* bin -> phdr		1329946						
ANR	1330257	Symbol	entry		1329946						
ANR	1330258	Symbol	* i		1329946						
ANR	1330259	Symbol	EI_CLASS		1329946						
ANR	1330260	Symbol	paddr		1329946						
ANR	1330261	Symbol	bin -> ehdr . e_machine		1329946						
ANR	1330262	Symbol	true		1329946						
ANR	1330263	Symbol	bin -> phdr [ i ] . p_type		1329946						
ANR	1330264	Symbol	EF_MIPS_ARCH		1329946						
ANR	1330265	Symbol	symbol [ i ] . offset		1329946						
ANR	1330266	Function	noodle	2416:0:75151:75395							
ANR	1330267	FunctionDef	"noodle (ELFOBJ * bin , const char * s)"		1330266	0					
ANR	1330268	CompoundStatement		2416:53:75204:75395	1330266	0					
ANR	1330269	IfStatement	if ( r_buf_size ( bin -> b ) <= 64 )		1330266	0					
ANR	1330270	Condition	r_buf_size ( bin -> b ) <= 64	2417:5:75211:75235	1330266	0	True				
ANR	1330271	RelationalExpression	r_buf_size ( bin -> b ) <= 64		1330266	0		<=			
ANR	1330272	CallExpression	r_buf_size ( bin -> b )		1330266	0					
ANR	1330273	Callee	r_buf_size		1330266	0					
ANR	1330274	Identifier	r_buf_size		1330266	0					
ANR	1330275	ArgumentList	bin -> b		1330266	1					
ANR	1330276	Argument	bin -> b		1330266	0					
ANR	1330277	PtrMemberAccess	bin -> b		1330266	0					
ANR	1330278	Identifier	bin		1330266	0					
ANR	1330279	Identifier	b		1330266	1					
ANR	1330280	PrimaryExpression	64		1330266	1					
ANR	1330281	CompoundStatement		2:33:34:34	1330266	1					
ANR	1330282	ReturnStatement	return 0 ;	2418:2:75243:75251	1330266	0	True				
ANR	1330283	PrimaryExpression	0		1330266	0					
ANR	1330284	IdentifierDeclStatement	ut8 tmp [ 64 ] ;	2420:1:75257:75268	1330266	1	True				
ANR	1330285	IdentifierDecl	tmp [ 64 ]		1330266	0					
ANR	1330286	IdentifierDeclType	ut8 [ 64 ]		1330266	0					
ANR	1330287	Identifier	tmp		1330266	1					
ANR	1330288	PrimaryExpression	64		1330266	2					
ANR	1330289	ExpressionStatement	"r_buf_read_at ( bin -> b , r_buf_size ( bin -> b ) - 64 , tmp , 64 )"	2421:1:75271:75328	1330266	2	True				
ANR	1330290	CallExpression	"r_buf_read_at ( bin -> b , r_buf_size ( bin -> b ) - 64 , tmp , 64 )"		1330266	0					
ANR	1330291	Callee	r_buf_read_at		1330266	0					
ANR	1330292	Identifier	r_buf_read_at		1330266	0					
ANR	1330293	ArgumentList	bin -> b		1330266	1					
ANR	1330294	Argument	bin -> b		1330266	0					
ANR	1330295	PtrMemberAccess	bin -> b		1330266	0					
ANR	1330296	Identifier	bin		1330266	0					
ANR	1330297	Identifier	b		1330266	1					
ANR	1330298	Argument	r_buf_size ( bin -> b ) - 64		1330266	1					
ANR	1330299	AdditiveExpression	r_buf_size ( bin -> b ) - 64		1330266	0		-			
ANR	1330300	CallExpression	r_buf_size ( bin -> b )		1330266	0					
ANR	1330301	Callee	r_buf_size		1330266	0					
ANR	1330302	Identifier	r_buf_size		1330266	0					
ANR	1330303	ArgumentList	bin -> b		1330266	1					
ANR	1330304	Argument	bin -> b		1330266	0					
ANR	1330305	PtrMemberAccess	bin -> b		1330266	0					
ANR	1330306	Identifier	bin		1330266	0					
ANR	1330307	Identifier	b		1330266	1					
ANR	1330308	PrimaryExpression	64		1330266	1					
ANR	1330309	Argument	tmp		1330266	2					
ANR	1330310	Identifier	tmp		1330266	0					
ANR	1330311	Argument	64		1330266	3					
ANR	1330312	PrimaryExpression	64		1330266	0					
ANR	1330313	ReturnStatement	"return r_mem_mem ( tmp , 64 , ( const ut8 * ) s , strlen ( s ) ) != NULL ;"	2422:1:75331:75393	1330266	3	True				
ANR	1330314	EqualityExpression	"r_mem_mem ( tmp , 64 , ( const ut8 * ) s , strlen ( s ) ) != NULL"		1330266	0		!=			
ANR	1330315	CallExpression	"r_mem_mem ( tmp , 64 , ( const ut8 * ) s , strlen ( s ) )"		1330266	0					
ANR	1330316	Callee	r_mem_mem		1330266	0					
ANR	1330317	Identifier	r_mem_mem		1330266	0					
ANR	1330318	ArgumentList	tmp		1330266	1					
ANR	1330319	Argument	tmp		1330266	0					
ANR	1330320	Identifier	tmp		1330266	0					
ANR	1330321	Argument	64		1330266	1					
ANR	1330322	PrimaryExpression	64		1330266	0					
ANR	1330323	Argument	( const ut8 * ) s		1330266	2					
ANR	1330324	CastExpression	( const ut8 * ) s		1330266	0					
ANR	1330325	CastTarget	const ut8 *		1330266	0					
ANR	1330326	Identifier	s		1330266	1					
ANR	1330327	Argument	strlen ( s )		1330266	3					
ANR	1330328	CallExpression	strlen ( s )		1330266	0					
ANR	1330329	Callee	strlen		1330266	0					
ANR	1330330	Identifier	strlen		1330266	0					
ANR	1330331	ArgumentList	s		1330266	1					
ANR	1330332	Argument	s		1330266	0					
ANR	1330333	Identifier	s		1330266	0					
ANR	1330334	Identifier	NULL		1330266	1					
ANR	1330335	ReturnType	static inline int		1330266	1					
ANR	1330336	Identifier	noodle		1330266	2					
ANR	1330337	ParameterList	"ELFOBJ * bin , const char * s"		1330266	3					
ANR	1330338	Parameter	ELFOBJ * bin	2416:25:75176:75186	1330266	0	True				
ANR	1330339	ParameterType	ELFOBJ *		1330266	0					
ANR	1330340	Identifier	bin		1330266	1					
ANR	1330341	Parameter	const char * s	2416:38:75189:75201	1330266	1	True				
ANR	1330342	ParameterType	const char *		1330266	0					
ANR	1330343	Identifier	s		1330266	1					
ANR	1330344	CFGEntryNode	ENTRY		1330266		True				
ANR	1330345	CFGExitNode	EXIT		1330266		True				
ANR	1330346	Symbol	strlen		1330266						
ANR	1330347	Symbol	bin -> b		1330266						
ANR	1330348	Symbol	s		1330266						
ANR	1330349	Symbol	NULL		1330266						
ANR	1330350	Symbol	bin		1330266						
ANR	1330351	Symbol	tmp		1330266						
ANR	1330352	Symbol	r_mem_mem		1330266						
ANR	1330353	Symbol	r_buf_size		1330266						
ANR	1330354	Symbol	* bin		1330266						
ANR	1330355	Function	needle	2425:0:75398:75692							
ANR	1330356	FunctionDef	"needle (ELFOBJ * bin , const char * s)"		1330355	0					
ANR	1330357	CompoundStatement		2425:53:75451:75692	1330355	0					
ANR	1330358	IfStatement	if ( bin -> shstrtab )		1330355	0					
ANR	1330359	Condition	bin -> shstrtab	2426:5:75458:75470	1330355	0	True				
ANR	1330360	PtrMemberAccess	bin -> shstrtab		1330355	0					
ANR	1330361	Identifier	bin		1330355	0					
ANR	1330362	Identifier	shstrtab		1330355	1					
ANR	1330363	CompoundStatement		3:2:25:54	1330355	1					
ANR	1330364	IdentifierDeclStatement	ut32 len = bin -> shstrtab_size ;	2427:2:75477:75506	1330355	0	True				
ANR	1330365	IdentifierDecl	len = bin -> shstrtab_size		1330355	0					
ANR	1330366	IdentifierDeclType	ut32		1330355	0					
ANR	1330367	Identifier	len		1330355	1					
ANR	1330368	AssignmentExpression	len = bin -> shstrtab_size		1330355	2		=			
ANR	1330369	Identifier	len		1330355	0					
ANR	1330370	PtrMemberAccess	bin -> shstrtab_size		1330355	1					
ANR	1330371	Identifier	bin		1330355	0					
ANR	1330372	Identifier	shstrtab_size		1330355	1					
ANR	1330373	IfStatement	if ( len > 4096 )		1330355	1					
ANR	1330374	Condition	len > 4096	2428:6:75514:75523	1330355	0	True				
ANR	1330375	RelationalExpression	len > 4096		1330355	0		>			
ANR	1330376	Identifier	len		1330355	0					
ANR	1330377	PrimaryExpression	4096		1330355	1					
ANR	1330378	CompoundStatement		4:18:74:74	1330355	1					
ANR	1330379	ExpressionStatement	len = 4096	2429:3:75531:75541	1330355	0	True				
ANR	1330380	AssignmentExpression	len = 4096		1330355	0		=			
ANR	1330381	Identifier	len		1330355	0					
ANR	1330382	PrimaryExpression	4096		1330355	1					
ANR	1330383	ReturnStatement	"return r_mem_mem ( ( const ut8 * ) bin -> shstrtab , len , ( const ut8 * ) s , strlen ( s ) ) != NULL ;"	2431:2:75588:75676	1330355	2	True				
ANR	1330384	EqualityExpression	"r_mem_mem ( ( const ut8 * ) bin -> shstrtab , len , ( const ut8 * ) s , strlen ( s ) ) != NULL"		1330355	0		!=			
ANR	1330385	CallExpression	"r_mem_mem ( ( const ut8 * ) bin -> shstrtab , len , ( const ut8 * ) s , strlen ( s ) )"		1330355	0					
ANR	1330386	Callee	r_mem_mem		1330355	0					
ANR	1330387	Identifier	r_mem_mem		1330355	0					
ANR	1330388	ArgumentList	( const ut8 * ) bin -> shstrtab		1330355	1					
ANR	1330389	Argument	( const ut8 * ) bin -> shstrtab		1330355	0					
ANR	1330390	CastExpression	( const ut8 * ) bin -> shstrtab		1330355	0					
ANR	1330391	CastTarget	const ut8 *		1330355	0					
ANR	1330392	PtrMemberAccess	bin -> shstrtab		1330355	1					
ANR	1330393	Identifier	bin		1330355	0					
ANR	1330394	Identifier	shstrtab		1330355	1					
ANR	1330395	Argument	len		1330355	1					
ANR	1330396	Identifier	len		1330355	0					
ANR	1330397	Argument	( const ut8 * ) s		1330355	2					
ANR	1330398	CastExpression	( const ut8 * ) s		1330355	0					
ANR	1330399	CastTarget	const ut8 *		1330355	0					
ANR	1330400	Identifier	s		1330355	1					
ANR	1330401	Argument	strlen ( s )		1330355	3					
ANR	1330402	CallExpression	strlen ( s )		1330355	0					
ANR	1330403	Callee	strlen		1330355	0					
ANR	1330404	Identifier	strlen		1330355	0					
ANR	1330405	ArgumentList	s		1330355	1					
ANR	1330406	Argument	s		1330355	0					
ANR	1330407	Identifier	s		1330355	0					
ANR	1330408	Identifier	NULL		1330355	1					
ANR	1330409	ReturnStatement	return 0 ;	2434:1:75682:75690	1330355	1	True				
ANR	1330410	PrimaryExpression	0		1330355	0					
ANR	1330411	ReturnType	static inline int		1330355	1					
ANR	1330412	Identifier	needle		1330355	2					
ANR	1330413	ParameterList	"ELFOBJ * bin , const char * s"		1330355	3					
ANR	1330414	Parameter	ELFOBJ * bin	2425:25:75423:75433	1330355	0	True				
ANR	1330415	ParameterType	ELFOBJ *		1330355	0					
ANR	1330416	Identifier	bin		1330355	1					
ANR	1330417	Parameter	const char * s	2425:38:75436:75448	1330355	1	True				
ANR	1330418	ParameterType	const char *		1330355	0					
ANR	1330419	Identifier	s		1330355	1					
ANR	1330420	CFGEntryNode	ENTRY		1330355		True				
ANR	1330421	CFGExitNode	EXIT		1330355		True				
ANR	1330422	Symbol	strlen		1330355						
ANR	1330423	Symbol	s		1330355						
ANR	1330424	Symbol	NULL		1330355						
ANR	1330425	Symbol	len		1330355						
ANR	1330426	Symbol	bin		1330355						
ANR	1330427	Symbol	bin -> shstrtab_size		1330355						
ANR	1330428	Symbol	bin -> shstrtab		1330355						
ANR	1330429	Symbol	r_mem_mem		1330355						
ANR	1330430	Symbol	* bin		1330355						
ANR	1330431	Function	r_bin_elf_get_osabi_name	2438:6:75788:76987							
ANR	1330432	FunctionDef	r_bin_elf_get_osabi_name (ELFOBJ * bin)		1330431	0					
ANR	1330433	CompoundStatement		2438:50:75832:76987	1330431	0					
ANR	1330434	IdentifierDeclStatement	size_t i ;	2439:1:75835:75843	1330431	0	True				
ANR	1330435	IdentifierDecl	i		1330431	0					
ANR	1330436	IdentifierDeclType	size_t		1330431	0					
ANR	1330437	Identifier	i		1330431	1					
ANR	1330438	IdentifierDeclStatement	size_t num = bin -> ehdr . e_shnum ;	2440:1:75846:75876	1330431	1	True				
ANR	1330439	IdentifierDecl	num = bin -> ehdr . e_shnum		1330431	0					
ANR	1330440	IdentifierDeclType	size_t		1330431	0					
ANR	1330441	Identifier	num		1330431	1					
ANR	1330442	AssignmentExpression	num = bin -> ehdr . e_shnum		1330431	2		=			
ANR	1330443	Identifier	num		1330431	0					
ANR	1330444	MemberAccess	bin -> ehdr . e_shnum		1330431	1					
ANR	1330445	PtrMemberAccess	bin -> ehdr		1330431	0					
ANR	1330446	Identifier	bin		1330431	0					
ANR	1330447	Identifier	ehdr		1330431	1					
ANR	1330448	Identifier	e_shnum		1330431	1					
ANR	1330449	IdentifierDeclStatement	const char * section_name = NULL ;	2441:1:75879:75910	1330431	2	True				
ANR	1330450	IdentifierDecl	* section_name = NULL		1330431	0					
ANR	1330451	IdentifierDeclType	const char *		1330431	0					
ANR	1330452	Identifier	section_name		1330431	1					
ANR	1330453	AssignmentExpression	* section_name = NULL		1330431	2		=			
ANR	1330454	Identifier	NULL		1330431	0					
ANR	1330455	Identifier	NULL		1330431	1					
ANR	1330456	SwitchStatement	switch ( bin -> ehdr . e_ident [ EI_OSABI ] )		1330431	3					
ANR	1330457	Condition	bin -> ehdr . e_ident [ EI_OSABI ]	2442:9:75921:75947	1330431	0	True				
ANR	1330458	ArrayIndexing	bin -> ehdr . e_ident [ EI_OSABI ]		1330431	0					
ANR	1330459	MemberAccess	bin -> ehdr . e_ident		1330431	0					
ANR	1330460	PtrMemberAccess	bin -> ehdr		1330431	0					
ANR	1330461	Identifier	bin		1330431	0					
ANR	1330462	Identifier	ehdr		1330431	1					
ANR	1330463	Identifier	e_ident		1330431	1					
ANR	1330464	Identifier	EI_OSABI		1330431	1					
ANR	1330465	CompoundStatement		5:38:117:117	1330431	1					
ANR	1330466	Label	case ELFOSABI_LINUX :	2443:1:75953:75972	1330431	0	True				
ANR	1330467	Identifier	ELFOSABI_LINUX		1330431	0					
ANR	1330468	ReturnStatement	"return strdup ( ""linux"" ) ;"	2443:22:75974:75996	1330431	1	True				
ANR	1330469	CallExpression	"strdup ( ""linux"" )"		1330431	0					
ANR	1330470	Callee	strdup		1330431	0					
ANR	1330471	Identifier	strdup		1330431	0					
ANR	1330472	ArgumentList	"""linux"""		1330431	1					
ANR	1330473	Argument	"""linux"""		1330431	0					
ANR	1330474	PrimaryExpression	"""linux"""		1330431	0					
ANR	1330475	Label	case ELFOSABI_SOLARIS :	2444:1:75999:76020	1330431	2	True				
ANR	1330476	Identifier	ELFOSABI_SOLARIS		1330431	0					
ANR	1330477	ReturnStatement	"return strdup ( ""solaris"" ) ;"	2444:24:76022:76046	1330431	3	True				
ANR	1330478	CallExpression	"strdup ( ""solaris"" )"		1330431	0					
ANR	1330479	Callee	strdup		1330431	0					
ANR	1330480	Identifier	strdup		1330431	0					
ANR	1330481	ArgumentList	"""solaris"""		1330431	1					
ANR	1330482	Argument	"""solaris"""		1330431	0					
ANR	1330483	PrimaryExpression	"""solaris"""		1330431	0					
ANR	1330484	Label	case ELFOSABI_FREEBSD :	2445:1:76049:76070	1330431	4	True				
ANR	1330485	Identifier	ELFOSABI_FREEBSD		1330431	0					
ANR	1330486	ReturnStatement	"return strdup ( ""freebsd"" ) ;"	2445:24:76072:76096	1330431	5	True				
ANR	1330487	CallExpression	"strdup ( ""freebsd"" )"		1330431	0					
ANR	1330488	Callee	strdup		1330431	0					
ANR	1330489	Identifier	strdup		1330431	0					
ANR	1330490	ArgumentList	"""freebsd"""		1330431	1					
ANR	1330491	Argument	"""freebsd"""		1330431	0					
ANR	1330492	PrimaryExpression	"""freebsd"""		1330431	0					
ANR	1330493	Label	case ELFOSABI_HPUX :	2446:1:76099:76117	1330431	6	True				
ANR	1330494	Identifier	ELFOSABI_HPUX		1330431	0					
ANR	1330495	ReturnStatement	"return strdup ( ""hpux"" ) ;"	2446:21:76119:76140	1330431	7	True				
ANR	1330496	CallExpression	"strdup ( ""hpux"" )"		1330431	0					
ANR	1330497	Callee	strdup		1330431	0					
ANR	1330498	Identifier	strdup		1330431	0					
ANR	1330499	ArgumentList	"""hpux"""		1330431	1					
ANR	1330500	Argument	"""hpux"""		1330431	0					
ANR	1330501	PrimaryExpression	"""hpux"""		1330431	0					
ANR	1330502	IfStatement	if ( bin -> shdr && bin -> shstrtab )		1330431	4					
ANR	1330503	Condition	bin -> shdr && bin -> shstrtab	2449:5:76151:76176	1330431	0	True				
ANR	1330504	AndExpression	bin -> shdr && bin -> shstrtab		1330431	0		&&			
ANR	1330505	PtrMemberAccess	bin -> shdr		1330431	0					
ANR	1330506	Identifier	bin		1330431	0					
ANR	1330507	Identifier	shdr		1330431	1					
ANR	1330508	PtrMemberAccess	bin -> shstrtab		1330431	1					
ANR	1330509	Identifier	bin		1330431	0					
ANR	1330510	Identifier	shstrtab		1330431	1					
ANR	1330511	CompoundStatement		12:33:346:346	1330431	1					
ANR	1330512	ForStatement	for ( i = 0 ; i < num ; i ++ )		1330431	0					
ANR	1330513	ForInit	i = 0 ;	2450:7:76188:76193	1330431	0	True				
ANR	1330514	AssignmentExpression	i = 0		1330431	0		=			
ANR	1330515	Identifier	i		1330431	0					
ANR	1330516	PrimaryExpression	0		1330431	1					
ANR	1330517	Condition	i < num	2450:14:76195:76201	1330431	1	True				
ANR	1330518	RelationalExpression	i < num		1330431	0		<			
ANR	1330519	Identifier	i		1330431	0					
ANR	1330520	Identifier	num		1330431	1					
ANR	1330521	PostIncDecOperationExpression	i ++	2450:23:76204:76206	1330431	2	True				
ANR	1330522	Identifier	i		1330431	0					
ANR	1330523	IncDec	++		1330431	1					
ANR	1330524	CompoundStatement		13:28:376:376	1330431	3					
ANR	1330525	IfStatement	if ( bin -> shdr [ i ] . sh_type == SHT_NOTE && bin -> shdr [ i ] . sh_name < bin -> shstrtab_size )		1330431	0					
ANR	1330526	Condition	bin -> shdr [ i ] . sh_type == SHT_NOTE && bin -> shdr [ i ] . sh_name < bin -> shstrtab_size	2451:7:76218:76294	1330431	0	True				
ANR	1330527	AndExpression	bin -> shdr [ i ] . sh_type == SHT_NOTE && bin -> shdr [ i ] . sh_name < bin -> shstrtab_size		1330431	0		&&			
ANR	1330528	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_NOTE		1330431	0		==			
ANR	1330529	MemberAccess	bin -> shdr [ i ] . sh_type		1330431	0					
ANR	1330530	ArrayIndexing	bin -> shdr [ i ]		1330431	0					
ANR	1330531	PtrMemberAccess	bin -> shdr		1330431	0					
ANR	1330532	Identifier	bin		1330431	0					
ANR	1330533	Identifier	shdr		1330431	1					
ANR	1330534	Identifier	i		1330431	1					
ANR	1330535	Identifier	sh_type		1330431	1					
ANR	1330536	Identifier	SHT_NOTE		1330431	1					
ANR	1330537	RelationalExpression	bin -> shdr [ i ] . sh_name < bin -> shstrtab_size		1330431	1		<			
ANR	1330538	MemberAccess	bin -> shdr [ i ] . sh_name		1330431	0					
ANR	1330539	ArrayIndexing	bin -> shdr [ i ]		1330431	0					
ANR	1330540	PtrMemberAccess	bin -> shdr		1330431	0					
ANR	1330541	Identifier	bin		1330431	0					
ANR	1330542	Identifier	shdr		1330431	1					
ANR	1330543	Identifier	i		1330431	1					
ANR	1330544	Identifier	sh_name		1330431	1					
ANR	1330545	PtrMemberAccess	bin -> shstrtab_size		1330431	1					
ANR	1330546	Identifier	bin		1330431	0					
ANR	1330547	Identifier	shstrtab_size		1330431	1					
ANR	1330548	CompoundStatement		14:86:464:464	1330431	1					
ANR	1330549	ExpressionStatement	section_name = & bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]	2452:4:76303:76354	1330431	0	True				
ANR	1330550	AssignmentExpression	section_name = & bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		1330431	0		=			
ANR	1330551	Identifier	section_name		1330431	0					
ANR	1330552	UnaryOperationExpression	& bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		1330431	1					
ANR	1330553	UnaryOperator	&		1330431	0					
ANR	1330554	ArrayIndexing	bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		1330431	1					
ANR	1330555	PtrMemberAccess	bin -> shstrtab		1330431	0					
ANR	1330556	Identifier	bin		1330431	0					
ANR	1330557	Identifier	shstrtab		1330431	1					
ANR	1330558	MemberAccess	bin -> shdr [ i ] . sh_name		1330431	1					
ANR	1330559	ArrayIndexing	bin -> shdr [ i ]		1330431	0					
ANR	1330560	PtrMemberAccess	bin -> shdr		1330431	0					
ANR	1330561	Identifier	bin		1330431	0					
ANR	1330562	Identifier	shdr		1330431	1					
ANR	1330563	Identifier	i		1330431	1					
ANR	1330564	Identifier	sh_name		1330431	1					
ANR	1330565	IfStatement	"if ( ! strcmp ( section_name , "".note.openbsd.ident"" ) )"		1330431	1					
ANR	1330566	Condition	"! strcmp ( section_name , "".note.openbsd.ident"" )"	2453:8:76364:76408	1330431	0	True				
ANR	1330567	UnaryOperationExpression	"! strcmp ( section_name , "".note.openbsd.ident"" )"		1330431	0					
ANR	1330568	UnaryOperator	!		1330431	0					
ANR	1330569	CallExpression	"strcmp ( section_name , "".note.openbsd.ident"" )"		1330431	1					
ANR	1330570	Callee	strcmp		1330431	0					
ANR	1330571	Identifier	strcmp		1330431	0					
ANR	1330572	ArgumentList	section_name		1330431	1					
ANR	1330573	Argument	section_name		1330431	0					
ANR	1330574	Identifier	section_name		1330431	0					
ANR	1330575	Argument	""".note.openbsd.ident"""		1330431	1					
ANR	1330576	PrimaryExpression	""".note.openbsd.ident"""		1330431	0					
ANR	1330577	CompoundStatement		16:55:578:578	1330431	1					
ANR	1330578	ReturnStatement	"return strdup ( ""openbsd"" ) ;"	2454:5:76418:76443	1330431	0	True				
ANR	1330579	CallExpression	"strdup ( ""openbsd"" )"		1330431	0					
ANR	1330580	Callee	strdup		1330431	0					
ANR	1330581	Identifier	strdup		1330431	0					
ANR	1330582	ArgumentList	"""openbsd"""		1330431	1					
ANR	1330583	Argument	"""openbsd"""		1330431	0					
ANR	1330584	PrimaryExpression	"""openbsd"""		1330431	0					
ANR	1330585	IfStatement	"if ( ! strcmp ( section_name , "".note.minix.ident"" ) )"		1330431	2					
ANR	1330586	Condition	"! strcmp ( section_name , "".note.minix.ident"" )"	2456:8:76459:76501	1330431	0	True				
ANR	1330587	UnaryOperationExpression	"! strcmp ( section_name , "".note.minix.ident"" )"		1330431	0					
ANR	1330588	UnaryOperator	!		1330431	0					
ANR	1330589	CallExpression	"strcmp ( section_name , "".note.minix.ident"" )"		1330431	1					
ANR	1330590	Callee	strcmp		1330431	0					
ANR	1330591	Identifier	strcmp		1330431	0					
ANR	1330592	ArgumentList	section_name		1330431	1					
ANR	1330593	Argument	section_name		1330431	0					
ANR	1330594	Identifier	section_name		1330431	0					
ANR	1330595	Argument	""".note.minix.ident"""		1330431	1					
ANR	1330596	PrimaryExpression	""".note.minix.ident"""		1330431	0					
ANR	1330597	CompoundStatement		19:53:671:671	1330431	1					
ANR	1330598	ReturnStatement	"return strdup ( ""minix"" ) ;"	2457:5:76511:76534	1330431	0	True				
ANR	1330599	CallExpression	"strdup ( ""minix"" )"		1330431	0					
ANR	1330600	Callee	strdup		1330431	0					
ANR	1330601	Identifier	strdup		1330431	0					
ANR	1330602	ArgumentList	"""minix"""		1330431	1					
ANR	1330603	Argument	"""minix"""		1330431	0					
ANR	1330604	PrimaryExpression	"""minix"""		1330431	0					
ANR	1330605	IfStatement	"if ( ! strcmp ( section_name , "".note.netbsd.ident"" ) )"		1330431	3					
ANR	1330606	Condition	"! strcmp ( section_name , "".note.netbsd.ident"" )"	2459:8:76550:76593	1330431	0	True				
ANR	1330607	UnaryOperationExpression	"! strcmp ( section_name , "".note.netbsd.ident"" )"		1330431	0					
ANR	1330608	UnaryOperator	!		1330431	0					
ANR	1330609	CallExpression	"strcmp ( section_name , "".note.netbsd.ident"" )"		1330431	1					
ANR	1330610	Callee	strcmp		1330431	0					
ANR	1330611	Identifier	strcmp		1330431	0					
ANR	1330612	ArgumentList	section_name		1330431	1					
ANR	1330613	Argument	section_name		1330431	0					
ANR	1330614	Identifier	section_name		1330431	0					
ANR	1330615	Argument	""".note.netbsd.ident"""		1330431	1					
ANR	1330616	PrimaryExpression	""".note.netbsd.ident"""		1330431	0					
ANR	1330617	CompoundStatement		22:54:763:763	1330431	1					
ANR	1330618	ReturnStatement	"return strdup ( ""netbsd"" ) ;"	2460:5:76603:76627	1330431	0	True				
ANR	1330619	CallExpression	"strdup ( ""netbsd"" )"		1330431	0					
ANR	1330620	Callee	strdup		1330431	0					
ANR	1330621	Identifier	strdup		1330431	0					
ANR	1330622	ArgumentList	"""netbsd"""		1330431	1					
ANR	1330623	Argument	"""netbsd"""		1330431	0					
ANR	1330624	PrimaryExpression	"""netbsd"""		1330431	0					
ANR	1330625	IfStatement	"if ( ! strcmp ( section_name , "".note.android.ident"" ) )"		1330431	4					
ANR	1330626	Condition	"! strcmp ( section_name , "".note.android.ident"" )"	2462:8:76643:76687	1330431	0	True				
ANR	1330627	UnaryOperationExpression	"! strcmp ( section_name , "".note.android.ident"" )"		1330431	0					
ANR	1330628	UnaryOperator	!		1330431	0					
ANR	1330629	CallExpression	"strcmp ( section_name , "".note.android.ident"" )"		1330431	1					
ANR	1330630	Callee	strcmp		1330431	0					
ANR	1330631	Identifier	strcmp		1330431	0					
ANR	1330632	ArgumentList	section_name		1330431	1					
ANR	1330633	Argument	section_name		1330431	0					
ANR	1330634	Identifier	section_name		1330431	0					
ANR	1330635	Argument	""".note.android.ident"""		1330431	1					
ANR	1330636	PrimaryExpression	""".note.android.ident"""		1330431	0					
ANR	1330637	CompoundStatement		25:55:857:857	1330431	1					
ANR	1330638	ReturnStatement	"return strdup ( ""android"" ) ;"	2463:5:76697:76722	1330431	0	True				
ANR	1330639	CallExpression	"strdup ( ""android"" )"		1330431	0					
ANR	1330640	Callee	strdup		1330431	0					
ANR	1330641	Identifier	strdup		1330431	0					
ANR	1330642	ArgumentList	"""android"""		1330431	1					
ANR	1330643	Argument	"""android"""		1330431	0					
ANR	1330644	PrimaryExpression	"""android"""		1330431	0					
ANR	1330645	IfStatement	"if ( needle ( bin , ""freebsd"" ) )"		1330431	5					
ANR	1330646	Condition	"needle ( bin , ""freebsd"" )"	2469:5:76774:76796	1330431	0	True				
ANR	1330647	CallExpression	"needle ( bin , ""freebsd"" )"		1330431	0					
ANR	1330648	Callee	needle		1330431	0					
ANR	1330649	Identifier	needle		1330431	0					
ANR	1330650	ArgumentList	bin		1330431	1					
ANR	1330651	Argument	bin		1330431	0					
ANR	1330652	Identifier	bin		1330431	0					
ANR	1330653	Argument	"""freebsd"""		1330431	1					
ANR	1330654	PrimaryExpression	"""freebsd"""		1330431	0					
ANR	1330655	CompoundStatement		32:30:966:966	1330431	1					
ANR	1330656	ReturnStatement	"return strdup ( ""freebsd"" ) ;"	2470:2:76803:76828	1330431	0	True				
ANR	1330657	CallExpression	"strdup ( ""freebsd"" )"		1330431	0					
ANR	1330658	Callee	strdup		1330431	0					
ANR	1330659	Identifier	strdup		1330431	0					
ANR	1330660	ArgumentList	"""freebsd"""		1330431	1					
ANR	1330661	Argument	"""freebsd"""		1330431	0					
ANR	1330662	PrimaryExpression	"""freebsd"""		1330431	0					
ANR	1330663	IfStatement	"if ( noodle ( bin , ""BEOS:APP_VERSION"" ) )"		1330431	6					
ANR	1330664	Condition	"noodle ( bin , ""BEOS:APP_VERSION"" )"	2472:5:76838:76869	1330431	0	True				
ANR	1330665	CallExpression	"noodle ( bin , ""BEOS:APP_VERSION"" )"		1330431	0					
ANR	1330666	Callee	noodle		1330431	0					
ANR	1330667	Identifier	noodle		1330431	0					
ANR	1330668	ArgumentList	bin		1330431	1					
ANR	1330669	Argument	bin		1330431	0					
ANR	1330670	Identifier	bin		1330431	0					
ANR	1330671	Argument	"""BEOS:APP_VERSION"""		1330431	1					
ANR	1330672	PrimaryExpression	"""BEOS:APP_VERSION"""		1330431	0					
ANR	1330673	CompoundStatement		35:39:1039:1039	1330431	1					
ANR	1330674	ReturnStatement	"return strdup ( ""beos"" ) ;"	2473:2:76876:76898	1330431	0	True				
ANR	1330675	CallExpression	"strdup ( ""beos"" )"		1330431	0					
ANR	1330676	Callee	strdup		1330431	0					
ANR	1330677	Identifier	strdup		1330431	0					
ANR	1330678	ArgumentList	"""beos"""		1330431	1					
ANR	1330679	Argument	"""beos"""		1330431	0					
ANR	1330680	PrimaryExpression	"""beos"""		1330431	0					
ANR	1330681	IfStatement	"if ( needle ( bin , ""GNU"" ) )"		1330431	7					
ANR	1330682	Condition	"needle ( bin , ""GNU"" )"	2475:5:76908:76926	1330431	0	True				
ANR	1330683	CallExpression	"needle ( bin , ""GNU"" )"		1330431	0					
ANR	1330684	Callee	needle		1330431	0					
ANR	1330685	Identifier	needle		1330431	0					
ANR	1330686	ArgumentList	bin		1330431	1					
ANR	1330687	Argument	bin		1330431	0					
ANR	1330688	Identifier	bin		1330431	0					
ANR	1330689	Argument	"""GNU"""		1330431	1					
ANR	1330690	PrimaryExpression	"""GNU"""		1330431	0					
ANR	1330691	CompoundStatement		38:26:1096:1096	1330431	1					
ANR	1330692	ReturnStatement	"return strdup ( ""linux"" ) ;"	2476:2:76933:76956	1330431	0	True				
ANR	1330693	CallExpression	"strdup ( ""linux"" )"		1330431	0					
ANR	1330694	Callee	strdup		1330431	0					
ANR	1330695	Identifier	strdup		1330431	0					
ANR	1330696	ArgumentList	"""linux"""		1330431	1					
ANR	1330697	Argument	"""linux"""		1330431	0					
ANR	1330698	PrimaryExpression	"""linux"""		1330431	0					
ANR	1330699	ReturnStatement	"return strdup ( ""linux"" ) ;"	2478:1:76962:76985	1330431	8	True				
ANR	1330700	CallExpression	"strdup ( ""linux"" )"		1330431	0					
ANR	1330701	Callee	strdup		1330431	0					
ANR	1330702	Identifier	strdup		1330431	0					
ANR	1330703	ArgumentList	"""linux"""		1330431	1					
ANR	1330704	Argument	"""linux"""		1330431	0					
ANR	1330705	PrimaryExpression	"""linux"""		1330431	0					
ANR	1330706	ReturnType	Elf_		1330431	1					
ANR	1330707	Identifier	( r_bin_elf_get_osabi_name )		1330431	2					
ANR	1330708	Identifier	r_bin_elf_get_osabi_name		1330431	3					
ANR	1330709	ParameterList	ELFOBJ * bin		1330431	4					
ANR	1330710	Parameter	ELFOBJ * bin	2438:37:75819:75829	1330431	0	True				
ANR	1330711	ParameterType	ELFOBJ *		1330431	0					
ANR	1330712	Identifier	bin		1330431	1					
ANR	1330713	CFGEntryNode	ENTRY		1330431		True				
ANR	1330714	CFGExitNode	EXIT		1330431		True				
ANR	1330715	Symbol	bin -> ehdr . e_shnum		1330431						
ANR	1330716	Symbol	bin		1330431						
ANR	1330717	Symbol	num		1330431						
ANR	1330718	Symbol	bin -> shstrtab_size		1330431						
ANR	1330719	Symbol	bin -> shstrtab		1330431						
ANR	1330720	Symbol	* bin -> shdr		1330431						
ANR	1330721	Symbol	noodle		1330431						
ANR	1330722	Symbol	* bin		1330431						
ANR	1330723	Symbol	* bin -> ehdr		1330431						
ANR	1330724	Symbol	bin -> ehdr . e_ident		1330431						
ANR	1330725	Symbol	bin -> ehdr		1330431						
ANR	1330726	Symbol	* * bin		1330431						
ANR	1330727	Symbol	strcmp		1330431						
ANR	1330728	Symbol	NULL		1330431						
ANR	1330729	Symbol	section_name		1330431						
ANR	1330730	Symbol	i		1330431						
ANR	1330731	Symbol	SHT_NOTE		1330431						
ANR	1330732	Symbol	bin -> shdr [ i ] . sh_name		1330431						
ANR	1330733	Symbol	* bin -> ehdr . e_ident		1330431						
ANR	1330734	Symbol	bin -> shdr		1330431						
ANR	1330735	Symbol	* EI_OSABI		1330431						
ANR	1330736	Symbol	* i		1330431						
ANR	1330737	Symbol	bin -> shdr [ i ] . sh_type		1330431						
ANR	1330738	Symbol	strdup		1330431						
ANR	1330739	Symbol	needle		1330431						
ANR	1330740	Symbol	EI_OSABI		1330431						
ANR	1330741	Function	r_bin_elf_grab_regstate	2481:5:76995:79127							
ANR	1330742	FunctionDef	"r_bin_elf_grab_regstate (ELFOBJ * bin , int * len)"		1330741	0					
ANR	1330743	CompoundStatement		2481:58:77048:79127	1330741	0					
ANR	1330744	IfStatement	if ( bin -> phdr )		1330741	0					
ANR	1330745	Condition	bin -> phdr	2482:5:77055:77063	1330741	0	True				
ANR	1330746	PtrMemberAccess	bin -> phdr		1330741	0					
ANR	1330747	Identifier	bin		1330741	0					
ANR	1330748	Identifier	phdr		1330741	1					
ANR	1330749	CompoundStatement		4:2:30:57	1330741	1					
ANR	1330750	IdentifierDeclStatement	int i ;	2483:2:77070:77075	1330741	0	True				
ANR	1330751	IdentifierDecl	i		1330741	0					
ANR	1330752	IdentifierDeclType	int		1330741	0					
ANR	1330753	Identifier	i		1330741	1					
ANR	1330754	IdentifierDeclStatement	int num = bin -> ehdr . e_phnum ;	2484:2:77079:77106	1330741	1	True				
ANR	1330755	IdentifierDecl	num = bin -> ehdr . e_phnum		1330741	0					
ANR	1330756	IdentifierDeclType	int		1330741	0					
ANR	1330757	Identifier	num		1330741	1					
ANR	1330758	AssignmentExpression	num = bin -> ehdr . e_phnum		1330741	2		=			
ANR	1330759	Identifier	num		1330741	0					
ANR	1330760	MemberAccess	bin -> ehdr . e_phnum		1330741	1					
ANR	1330761	PtrMemberAccess	bin -> ehdr		1330741	0					
ANR	1330762	Identifier	bin		1330741	0					
ANR	1330763	Identifier	ehdr		1330741	1					
ANR	1330764	Identifier	e_phnum		1330741	1					
ANR	1330765	ForStatement	for ( i = 0 ; i < num ; i ++ )		1330741	2					
ANR	1330766	ForInit	i = 0 ;	2485:7:77115:77120	1330741	0	True				
ANR	1330767	AssignmentExpression	i = 0		1330741	0		=			
ANR	1330768	Identifier	i		1330741	0					
ANR	1330769	PrimaryExpression	0		1330741	1					
ANR	1330770	Condition	i < num	2485:14:77122:77128	1330741	1	True				
ANR	1330771	RelationalExpression	i < num		1330741	0		<			
ANR	1330772	Identifier	i		1330741	0					
ANR	1330773	Identifier	num		1330741	1					
ANR	1330774	PostIncDecOperationExpression	i ++	2485:23:77131:77133	1330741	2	True				
ANR	1330775	Identifier	i		1330741	0					
ANR	1330776	IncDec	++		1330741	1					
ANR	1330777	CompoundStatement		61:3:1733:1760	1330741	3					
ANR	1330778	IfStatement	if ( bin -> phdr [ i ] . p_type != PT_NOTE )		1330741	0					
ANR	1330779	Condition	bin -> phdr [ i ] . p_type != PT_NOTE	2486:7:77145:77174	1330741	0	True				
ANR	1330780	EqualityExpression	bin -> phdr [ i ] . p_type != PT_NOTE		1330741	0		!=			
ANR	1330781	MemberAccess	bin -> phdr [ i ] . p_type		1330741	0					
ANR	1330782	ArrayIndexing	bin -> phdr [ i ]		1330741	0					
ANR	1330783	PtrMemberAccess	bin -> phdr		1330741	0					
ANR	1330784	Identifier	bin		1330741	0					
ANR	1330785	Identifier	phdr		1330741	1					
ANR	1330786	Identifier	i		1330741	1					
ANR	1330787	Identifier	p_type		1330741	1					
ANR	1330788	Identifier	PT_NOTE		1330741	1					
ANR	1330789	CompoundStatement		6:39:128:128	1330741	1					
ANR	1330790	ContinueStatement	continue ;	2487:4:77183:77191	1330741	0	True				
ANR	1330791	IdentifierDeclStatement	int bits = Elf_ ( r_bin_elf_get_bits ) ( bin ) ;	2489:3:77201:77241	1330741	1	True				
ANR	1330792	IdentifierDecl	bits = Elf_ ( r_bin_elf_get_bits ) ( bin )		1330741	0					
ANR	1330793	IdentifierDeclType	int		1330741	0					
ANR	1330794	Identifier	bits		1330741	1					
ANR	1330795	AssignmentExpression	bits = Elf_ ( r_bin_elf_get_bits ) ( bin )		1330741	2		=			
ANR	1330796	Identifier	bits		1330741	0					
ANR	1330797	CallExpression	Elf_ ( r_bin_elf_get_bits ) ( bin )		1330741	1					
ANR	1330798	Callee	Elf_ ( r_bin_elf_get_bits )		1330741	0					
ANR	1330799	CallExpression	Elf_ ( r_bin_elf_get_bits )		1330741	0					
ANR	1330800	Callee	Elf_		1330741	0					
ANR	1330801	Identifier	Elf_		1330741	0					
ANR	1330802	ArgumentList	r_bin_elf_get_bits		1330741	1					
ANR	1330803	Argument	r_bin_elf_get_bits		1330741	0					
ANR	1330804	Identifier	r_bin_elf_get_bits		1330741	0					
ANR	1330805	ArgumentList	bin		1330741	1					
ANR	1330806	Argument	bin		1330741	0					
ANR	1330807	Identifier	bin		1330741	0					
ANR	1330808	IdentifierDeclStatement	int elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr ) ;	2490:3:77246:77322	1330741	2	True				
ANR	1330809	IdentifierDecl	elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		1330741	0					
ANR	1330810	IdentifierDeclType	int		1330741	0					
ANR	1330811	Identifier	elf_nhdr_size		1330741	1					
ANR	1330812	AssignmentExpression	elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		1330741	2		=			
ANR	1330813	Identifier	elf_nhdr_size		1330741	0					
ANR	1330814	ConditionalExpression	( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		1330741	1					
ANR	1330815	Condition	bits == 64		1330741	0					
ANR	1330816	EqualityExpression	bits == 64		1330741	0		==			
ANR	1330817	Identifier	bits		1330741	0					
ANR	1330818	PrimaryExpression	64		1330741	1					
ANR	1330819	SizeofExpression	sizeof ( Elf64_Nhdr )		1330741	1					
ANR	1330820	Sizeof	sizeof		1330741	0					
ANR	1330821	SizeofOperand	Elf64_Nhdr		1330741	1					
ANR	1330822	SizeofExpression	sizeof ( Elf32_Nhdr )		1330741	2					
ANR	1330823	Sizeof	sizeof		1330741	0					
ANR	1330824	SizeofOperand	Elf32_Nhdr		1330741	1					
ANR	1330825	IdentifierDeclStatement	"void * elf_nhdr = calloc ( elf_nhdr_size , 1 ) ;"	2491:3:77327:77369	1330741	3	True				
ANR	1330826	IdentifierDecl	"* elf_nhdr = calloc ( elf_nhdr_size , 1 )"		1330741	0					
ANR	1330827	IdentifierDeclType	void *		1330741	0					
ANR	1330828	Identifier	elf_nhdr		1330741	1					
ANR	1330829	AssignmentExpression	"* elf_nhdr = calloc ( elf_nhdr_size , 1 )"		1330741	2		=			
ANR	1330830	Identifier	elf_nhdr		1330741	0					
ANR	1330831	CallExpression	"calloc ( elf_nhdr_size , 1 )"		1330741	1					
ANR	1330832	Callee	calloc		1330741	0					
ANR	1330833	Identifier	calloc		1330741	0					
ANR	1330834	ArgumentList	elf_nhdr_size		1330741	1					
ANR	1330835	Argument	elf_nhdr_size		1330741	0					
ANR	1330836	Identifier	elf_nhdr_size		1330741	0					
ANR	1330837	Argument	1		1330741	1					
ANR	1330838	PrimaryExpression	1		1330741	0					
ANR	1330839	IdentifierDeclStatement	bool regs_found = false ;	2492:3:77374:77397	1330741	4	True				
ANR	1330840	IdentifierDecl	regs_found = false		1330741	0					
ANR	1330841	IdentifierDeclType	bool		1330741	0					
ANR	1330842	Identifier	regs_found		1330741	1					
ANR	1330843	AssignmentExpression	regs_found = false		1330741	2		=			
ANR	1330844	Identifier	false		1330741	0					
ANR	1330845	Identifier	false		1330741	1					
ANR	1330846	IdentifierDeclStatement	ut64 offset = 0 ;	2493:3:77402:77417	1330741	5	True				
ANR	1330847	IdentifierDecl	offset = 0		1330741	0					
ANR	1330848	IdentifierDeclType	ut64		1330741	0					
ANR	1330849	Identifier	offset		1330741	1					
ANR	1330850	AssignmentExpression	offset = 0		1330741	2		=			
ANR	1330851	Identifier	offset		1330741	0					
ANR	1330852	PrimaryExpression	0		1330741	1					
ANR	1330853	WhileStatement	while ( ! regs_found )		1330741	6					
ANR	1330854	Condition	! regs_found	2495:10:77430:77440	1330741	0	True				
ANR	1330855	UnaryOperationExpression	! regs_found		1330741	0					
ANR	1330856	UnaryOperator	!		1330741	0					
ANR	1330857	Identifier	regs_found		1330741	1					
ANR	1330858	CompoundStatement		17:4:437:444	1330741	1					
ANR	1330859	IdentifierDeclStatement	"ut32 n_descsz , n_namesz , n_type ;"	2496:4:77449:77480	1330741	0	True				
ANR	1330860	IdentifierDecl	n_descsz		1330741	0					
ANR	1330861	IdentifierDeclType	ut32		1330741	0					
ANR	1330862	Identifier	n_descsz		1330741	1					
ANR	1330863	IdentifierDecl	n_namesz		1330741	1					
ANR	1330864	IdentifierDeclType	ut32		1330741	0					
ANR	1330865	Identifier	n_namesz		1330741	1					
ANR	1330866	IdentifierDecl	n_type		1330741	2					
ANR	1330867	IdentifierDeclType	ut32		1330741	0					
ANR	1330868	Identifier	n_type		1330741	1					
ANR	1330869	IdentifierDeclStatement	int ret ;	2497:4:77486:77493	1330741	1	True				
ANR	1330870	IdentifierDecl	ret		1330741	0					
ANR	1330871	IdentifierDeclType	int		1330741	0					
ANR	1330872	Identifier	ret		1330741	1					
ANR	1330873	ExpressionStatement	"ret = r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"	2498:4:77499:77584	1330741	2	True				
ANR	1330874	AssignmentExpression	"ret = r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"		1330741	0		=			
ANR	1330875	Identifier	ret		1330741	0					
ANR	1330876	CallExpression	"r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"		1330741	1					
ANR	1330877	Callee	r_buf_read_at		1330741	0					
ANR	1330878	Identifier	r_buf_read_at		1330741	0					
ANR	1330879	ArgumentList	bin -> b		1330741	1					
ANR	1330880	Argument	bin -> b		1330741	0					
ANR	1330881	PtrMemberAccess	bin -> b		1330741	0					
ANR	1330882	Identifier	bin		1330741	0					
ANR	1330883	Identifier	b		1330741	1					
ANR	1330884	Argument	bin -> phdr [ i ] . p_offset + offset		1330741	1					
ANR	1330885	AdditiveExpression	bin -> phdr [ i ] . p_offset + offset		1330741	0		+			
ANR	1330886	MemberAccess	bin -> phdr [ i ] . p_offset		1330741	0					
ANR	1330887	ArrayIndexing	bin -> phdr [ i ]		1330741	0					
ANR	1330888	PtrMemberAccess	bin -> phdr		1330741	0					
ANR	1330889	Identifier	bin		1330741	0					
ANR	1330890	Identifier	phdr		1330741	1					
ANR	1330891	Identifier	i		1330741	1					
ANR	1330892	Identifier	p_offset		1330741	1					
ANR	1330893	Identifier	offset		1330741	1					
ANR	1330894	Argument	elf_nhdr		1330741	2					
ANR	1330895	Identifier	elf_nhdr		1330741	0					
ANR	1330896	Argument	elf_nhdr_size		1330741	3					
ANR	1330897	Identifier	elf_nhdr_size		1330741	0					
ANR	1330898	IfStatement	if ( ret != elf_nhdr_size )		1330741	3					
ANR	1330899	Condition	ret != elf_nhdr_size	2499:8:77594:77613	1330741	0	True				
ANR	1330900	EqualityExpression	ret != elf_nhdr_size		1330741	0		!=			
ANR	1330901	Identifier	ret		1330741	0					
ANR	1330902	Identifier	elf_nhdr_size		1330741	1					
ANR	1330903	CompoundStatement		19:30:567:567	1330741	1					
ANR	1330904	ExpressionStatement	"bprintf ( ""Cannot read NOTES hdr from CORE file\\n"" )"	2500:5:77623:77673	1330741	0	True				
ANR	1330905	CallExpression	"bprintf ( ""Cannot read NOTES hdr from CORE file\\n"" )"		1330741	0					
ANR	1330906	Callee	bprintf		1330741	0					
ANR	1330907	Identifier	bprintf		1330741	0					
ANR	1330908	ArgumentList	"""Cannot read NOTES hdr from CORE file\\n"""		1330741	1					
ANR	1330909	Argument	"""Cannot read NOTES hdr from CORE file\\n"""		1330741	0					
ANR	1330910	PrimaryExpression	"""Cannot read NOTES hdr from CORE file\\n"""		1330741	0					
ANR	1330911	ExpressionStatement	free ( elf_nhdr )	2501:5:77680:77695	1330741	1	True				
ANR	1330912	CallExpression	free ( elf_nhdr )		1330741	0					
ANR	1330913	Callee	free		1330741	0					
ANR	1330914	Identifier	free		1330741	0					
ANR	1330915	ArgumentList	elf_nhdr		1330741	1					
ANR	1330916	Argument	elf_nhdr		1330741	0					
ANR	1330917	Identifier	elf_nhdr		1330741	0					
ANR	1330918	ReturnStatement	return NULL ;	2502:5:77702:77713	1330741	2	True				
ANR	1330919	Identifier	NULL		1330741	0					
ANR	1330920	IfStatement	if ( bits == 64 )		1330741	4					
ANR	1330921	Condition	bits == 64	2504:8:77729:77738	1330741	0	True				
ANR	1330922	EqualityExpression	bits == 64		1330741	0		==			
ANR	1330923	Identifier	bits		1330741	0					
ANR	1330924	PrimaryExpression	64		1330741	1					
ANR	1330925	CompoundStatement		24:20:692:692	1330741	1					
ANR	1330926	ExpressionStatement	n_descsz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )	2505:5:77748:77804	1330741	0	True				
ANR	1330927	AssignmentExpression	n_descsz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )		1330741	0		=			
ANR	1330928	Identifier	n_descsz		1330741	0					
ANR	1330929	CallExpression	round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )		1330741	1					
ANR	1330930	Callee	round_up		1330741	0					
ANR	1330931	Identifier	round_up		1330741	0					
ANR	1330932	ArgumentList	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		1330741	1					
ANR	1330933	Argument	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		1330741	0					
ANR	1330934	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		1330741	0					
ANR	1330935	CastExpression	( Elf64_Nhdr * ) elf_nhdr		1330741	0					
ANR	1330936	CastTarget	Elf64_Nhdr *		1330741	0					
ANR	1330937	Identifier	elf_nhdr		1330741	1					
ANR	1330938	Identifier	n_descsz		1330741	1					
ANR	1330939	ExpressionStatement	n_namesz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )	2506:5:77811:77867	1330741	1	True				
ANR	1330940	AssignmentExpression	n_namesz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )		1330741	0		=			
ANR	1330941	Identifier	n_namesz		1330741	0					
ANR	1330942	CallExpression	round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )		1330741	1					
ANR	1330943	Callee	round_up		1330741	0					
ANR	1330944	Identifier	round_up		1330741	0					
ANR	1330945	ArgumentList	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		1330741	1					
ANR	1330946	Argument	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		1330741	0					
ANR	1330947	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		1330741	0					
ANR	1330948	CastExpression	( Elf64_Nhdr * ) elf_nhdr		1330741	0					
ANR	1330949	CastTarget	Elf64_Nhdr *		1330741	0					
ANR	1330950	Identifier	elf_nhdr		1330741	1					
ANR	1330951	Identifier	n_namesz		1330741	1					
ANR	1330952	ExpressionStatement	n_type = ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type	2507:5:77874:77915	1330741	2	True				
ANR	1330953	AssignmentExpression	n_type = ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		1330741	0		=			
ANR	1330954	Identifier	n_type		1330741	0					
ANR	1330955	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		1330741	1					
ANR	1330956	CastExpression	( Elf64_Nhdr * ) elf_nhdr		1330741	0					
ANR	1330957	CastTarget	Elf64_Nhdr *		1330741	0					
ANR	1330958	Identifier	elf_nhdr		1330741	1					
ANR	1330959	Identifier	n_type		1330741	1					
ANR	1330960	ElseStatement	else		1330741	0					
ANR	1330961	CompoundStatement		28:11:879:879	1330741	0					
ANR	1330962	ExpressionStatement	n_descsz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )	2509:5:77935:77991	1330741	0	True				
ANR	1330963	AssignmentExpression	n_descsz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )		1330741	0		=			
ANR	1330964	Identifier	n_descsz		1330741	0					
ANR	1330965	CallExpression	round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )		1330741	1					
ANR	1330966	Callee	round_up		1330741	0					
ANR	1330967	Identifier	round_up		1330741	0					
ANR	1330968	ArgumentList	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		1330741	1					
ANR	1330969	Argument	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		1330741	0					
ANR	1330970	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		1330741	0					
ANR	1330971	CastExpression	( Elf32_Nhdr * ) elf_nhdr		1330741	0					
ANR	1330972	CastTarget	Elf32_Nhdr *		1330741	0					
ANR	1330973	Identifier	elf_nhdr		1330741	1					
ANR	1330974	Identifier	n_descsz		1330741	1					
ANR	1330975	ExpressionStatement	n_namesz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )	2510:5:77998:78054	1330741	1	True				
ANR	1330976	AssignmentExpression	n_namesz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )		1330741	0		=			
ANR	1330977	Identifier	n_namesz		1330741	0					
ANR	1330978	CallExpression	round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )		1330741	1					
ANR	1330979	Callee	round_up		1330741	0					
ANR	1330980	Identifier	round_up		1330741	0					
ANR	1330981	ArgumentList	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		1330741	1					
ANR	1330982	Argument	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		1330741	0					
ANR	1330983	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		1330741	0					
ANR	1330984	CastExpression	( Elf32_Nhdr * ) elf_nhdr		1330741	0					
ANR	1330985	CastTarget	Elf32_Nhdr *		1330741	0					
ANR	1330986	Identifier	elf_nhdr		1330741	1					
ANR	1330987	Identifier	n_namesz		1330741	1					
ANR	1330988	ExpressionStatement	n_type = ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type	2511:5:78061:78102	1330741	2	True				
ANR	1330989	AssignmentExpression	n_type = ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		1330741	0		=			
ANR	1330990	Identifier	n_type		1330741	0					
ANR	1330991	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		1330741	1					
ANR	1330992	CastExpression	( Elf32_Nhdr * ) elf_nhdr		1330741	0					
ANR	1330993	CastTarget	Elf32_Nhdr *		1330741	0					
ANR	1330994	Identifier	elf_nhdr		1330741	1					
ANR	1330995	Identifier	n_type		1330741	1					
ANR	1330996	IfStatement	if ( n_type == NT_PRSTATUS )		1330741	5					
ANR	1330997	Condition	n_type == NT_PRSTATUS	2513:8:78118:78138	1330741	0	True				
ANR	1330998	EqualityExpression	n_type == NT_PRSTATUS		1330741	0		==			
ANR	1330999	Identifier	n_type		1330741	0					
ANR	1331000	Identifier	NT_PRSTATUS		1330741	1					
ANR	1331001	CompoundStatement		33:31:1092:1092	1330741	1					
ANR	1331002	ExpressionStatement	regs_found = true	2514:5:78148:78165	1330741	0	True				
ANR	1331003	AssignmentExpression	regs_found = true		1330741	0		=			
ANR	1331004	Identifier	regs_found		1330741	0					
ANR	1331005	Identifier	true		1330741	1					
ANR	1331006	ExpressionStatement	free ( elf_nhdr )	2515:5:78172:78187	1330741	1	True				
ANR	1331007	CallExpression	free ( elf_nhdr )		1330741	0					
ANR	1331008	Callee	free		1330741	0					
ANR	1331009	Identifier	free		1330741	0					
ANR	1331010	ArgumentList	elf_nhdr		1330741	1					
ANR	1331011	Argument	elf_nhdr		1330741	0					
ANR	1331012	Identifier	elf_nhdr		1330741	0					
ANR	1331013	ElseStatement	else		1330741	0					
ANR	1331014	CompoundStatement		36:11:1151:1151	1330741	0					
ANR	1331015	ExpressionStatement	offset += elf_nhdr_size + n_descsz + n_namesz	2517:5:78207:78252	1330741	0	True				
ANR	1331016	AssignmentExpression	offset += elf_nhdr_size + n_descsz + n_namesz		1330741	0		+=			
ANR	1331017	Identifier	offset		1330741	0					
ANR	1331018	AdditiveExpression	elf_nhdr_size + n_descsz + n_namesz		1330741	1		+			
ANR	1331019	Identifier	elf_nhdr_size		1330741	0					
ANR	1331020	AdditiveExpression	n_descsz + n_namesz		1330741	1		+			
ANR	1331021	Identifier	n_descsz		1330741	0					
ANR	1331022	Identifier	n_namesz		1330741	1					
ANR	1331023	IdentifierDeclStatement	int regdelta = 0 ;	2521:3:78269:78285	1330741	7	True				
ANR	1331024	IdentifierDecl	regdelta = 0		1330741	0					
ANR	1331025	IdentifierDeclType	int		1330741	0					
ANR	1331026	Identifier	regdelta		1330741	1					
ANR	1331027	AssignmentExpression	regdelta = 0		1330741	2		=			
ANR	1331028	Identifier	regdelta		1330741	0					
ANR	1331029	PrimaryExpression	0		1330741	1					
ANR	1331030	IdentifierDeclStatement	int regsize = 0 ;	2522:3:78290:78305	1330741	8	True				
ANR	1331031	IdentifierDecl	regsize = 0		1330741	0					
ANR	1331032	IdentifierDeclType	int		1330741	0					
ANR	1331033	Identifier	regsize		1330741	1					
ANR	1331034	AssignmentExpression	regsize = 0		1330741	2		=			
ANR	1331035	Identifier	regsize		1330741	0					
ANR	1331036	PrimaryExpression	0		1330741	1					
ANR	1331037	SwitchStatement	switch ( bin -> ehdr . e_machine )		1330741	9					
ANR	1331038	Condition	bin -> ehdr . e_machine	2523:11:78318:78336	1330741	0	True				
ANR	1331039	MemberAccess	bin -> ehdr . e_machine		1330741	0					
ANR	1331040	PtrMemberAccess	bin -> ehdr		1330741	0					
ANR	1331041	Identifier	bin		1330741	0					
ANR	1331042	Identifier	ehdr		1330741	1					
ANR	1331043	Identifier	e_machine		1330741	1					
ANR	1331044	CompoundStatement		43:32:1290:1290	1330741	1					
ANR	1331045	Label	case EM_AARCH64 :	2524:4:78345:78360	1330741	0	True				
ANR	1331046	Identifier	EM_AARCH64		1330741	0					
ANR	1331047	ExpressionStatement	regsize = reginf [ AARCH64 ] . regsize	2525:5:78367:78400	1330741	1	True				
ANR	1331048	AssignmentExpression	regsize = reginf [ AARCH64 ] . regsize		1330741	0		=			
ANR	1331049	Identifier	regsize		1330741	0					
ANR	1331050	MemberAccess	reginf [ AARCH64 ] . regsize		1330741	1					
ANR	1331051	ArrayIndexing	reginf [ AARCH64 ]		1330741	0					
ANR	1331052	Identifier	reginf		1330741	0					
ANR	1331053	Identifier	AARCH64		1330741	1					
ANR	1331054	Identifier	regsize		1330741	1					
ANR	1331055	ExpressionStatement	regdelta = reginf [ AARCH64 ] . regdelta	2526:5:78407:78442	1330741	2	True				
ANR	1331056	AssignmentExpression	regdelta = reginf [ AARCH64 ] . regdelta		1330741	0		=			
ANR	1331057	Identifier	regdelta		1330741	0					
ANR	1331058	MemberAccess	reginf [ AARCH64 ] . regdelta		1330741	1					
ANR	1331059	ArrayIndexing	reginf [ AARCH64 ]		1330741	0					
ANR	1331060	Identifier	reginf		1330741	0					
ANR	1331061	Identifier	AARCH64		1330741	1					
ANR	1331062	Identifier	regdelta		1330741	1					
ANR	1331063	BreakStatement	break ;	2527:5:78449:78454	1330741	3	True				
ANR	1331064	Label	case EM_ARM :	2528:4:78460:78471	1330741	4	True				
ANR	1331065	Identifier	EM_ARM		1330741	0					
ANR	1331066	ExpressionStatement	regsize = reginf [ ARM ] . regsize	2529:5:78478:78507	1330741	5	True				
ANR	1331067	AssignmentExpression	regsize = reginf [ ARM ] . regsize		1330741	0		=			
ANR	1331068	Identifier	regsize		1330741	0					
ANR	1331069	MemberAccess	reginf [ ARM ] . regsize		1330741	1					
ANR	1331070	ArrayIndexing	reginf [ ARM ]		1330741	0					
ANR	1331071	Identifier	reginf		1330741	0					
ANR	1331072	Identifier	ARM		1330741	1					
ANR	1331073	Identifier	regsize		1330741	1					
ANR	1331074	ExpressionStatement	regdelta = reginf [ ARM ] . regdelta	2530:5:78514:78545	1330741	6	True				
ANR	1331075	AssignmentExpression	regdelta = reginf [ ARM ] . regdelta		1330741	0		=			
ANR	1331076	Identifier	regdelta		1330741	0					
ANR	1331077	MemberAccess	reginf [ ARM ] . regdelta		1330741	1					
ANR	1331078	ArrayIndexing	reginf [ ARM ]		1330741	0					
ANR	1331079	Identifier	reginf		1330741	0					
ANR	1331080	Identifier	ARM		1330741	1					
ANR	1331081	Identifier	regdelta		1330741	1					
ANR	1331082	BreakStatement	break ;	2531:5:78552:78557	1330741	7	True				
ANR	1331083	Label	case EM_386 :	2532:4:78563:78574	1330741	8	True				
ANR	1331084	Identifier	EM_386		1330741	0					
ANR	1331085	ExpressionStatement	regsize = reginf [ X86 ] . regsize	2533:5:78581:78610	1330741	9	True				
ANR	1331086	AssignmentExpression	regsize = reginf [ X86 ] . regsize		1330741	0		=			
ANR	1331087	Identifier	regsize		1330741	0					
ANR	1331088	MemberAccess	reginf [ X86 ] . regsize		1330741	1					
ANR	1331089	ArrayIndexing	reginf [ X86 ]		1330741	0					
ANR	1331090	Identifier	reginf		1330741	0					
ANR	1331091	Identifier	X86		1330741	1					
ANR	1331092	Identifier	regsize		1330741	1					
ANR	1331093	ExpressionStatement	regdelta = reginf [ X86 ] . regdelta	2534:5:78617:78648	1330741	10	True				
ANR	1331094	AssignmentExpression	regdelta = reginf [ X86 ] . regdelta		1330741	0		=			
ANR	1331095	Identifier	regdelta		1330741	0					
ANR	1331096	MemberAccess	reginf [ X86 ] . regdelta		1330741	1					
ANR	1331097	ArrayIndexing	reginf [ X86 ]		1330741	0					
ANR	1331098	Identifier	reginf		1330741	0					
ANR	1331099	Identifier	X86		1330741	1					
ANR	1331100	Identifier	regdelta		1330741	1					
ANR	1331101	BreakStatement	break ;	2535:5:78655:78660	1330741	11	True				
ANR	1331102	Label	case EM_X86_64 :	2536:4:78666:78680	1330741	12	True				
ANR	1331103	Identifier	EM_X86_64		1330741	0					
ANR	1331104	ExpressionStatement	regsize = reginf [ X86_64 ] . regsize	2537:5:78687:78719	1330741	13	True				
ANR	1331105	AssignmentExpression	regsize = reginf [ X86_64 ] . regsize		1330741	0		=			
ANR	1331106	Identifier	regsize		1330741	0					
ANR	1331107	MemberAccess	reginf [ X86_64 ] . regsize		1330741	1					
ANR	1331108	ArrayIndexing	reginf [ X86_64 ]		1330741	0					
ANR	1331109	Identifier	reginf		1330741	0					
ANR	1331110	Identifier	X86_64		1330741	1					
ANR	1331111	Identifier	regsize		1330741	1					
ANR	1331112	ExpressionStatement	regdelta = reginf [ X86_64 ] . regdelta	2538:5:78726:78760	1330741	14	True				
ANR	1331113	AssignmentExpression	regdelta = reginf [ X86_64 ] . regdelta		1330741	0		=			
ANR	1331114	Identifier	regdelta		1330741	0					
ANR	1331115	MemberAccess	reginf [ X86_64 ] . regdelta		1330741	1					
ANR	1331116	ArrayIndexing	reginf [ X86_64 ]		1330741	0					
ANR	1331117	Identifier	reginf		1330741	0					
ANR	1331118	Identifier	X86_64		1330741	1					
ANR	1331119	Identifier	regdelta		1330741	1					
ANR	1331120	BreakStatement	break ;	2539:5:78767:78772	1330741	15	True				
ANR	1331121	IdentifierDeclStatement	ut8 * buf = malloc ( regsize ) ;	2541:3:78782:78809	1330741	10	True				
ANR	1331122	IdentifierDecl	* buf = malloc ( regsize )		1330741	0					
ANR	1331123	IdentifierDeclType	ut8 *		1330741	0					
ANR	1331124	Identifier	buf		1330741	1					
ANR	1331125	AssignmentExpression	* buf = malloc ( regsize )		1330741	2		=			
ANR	1331126	Identifier	buf		1330741	0					
ANR	1331127	CallExpression	malloc ( regsize )		1330741	1					
ANR	1331128	Callee	malloc		1330741	0					
ANR	1331129	Identifier	malloc		1330741	0					
ANR	1331130	ArgumentList	regsize		1330741	1					
ANR	1331131	Argument	regsize		1330741	0					
ANR	1331132	Identifier	regsize		1330741	0					
ANR	1331133	IfStatement	"if ( r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset + regdelta , buf , regsize ) != regsize )"		1330741	11					
ANR	1331134	Condition	"r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset + regdelta , buf , regsize ) != regsize"	2542:7:78818:78907	1330741	0	True				
ANR	1331135	EqualityExpression	"r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset + regdelta , buf , regsize ) != regsize"		1330741	0		!=			
ANR	1331136	CallExpression	"r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset + regdelta , buf , regsize )"		1330741	0					
ANR	1331137	Callee	r_buf_read_at		1330741	0					
ANR	1331138	Identifier	r_buf_read_at		1330741	0					
ANR	1331139	ArgumentList	bin -> b		1330741	1					
ANR	1331140	Argument	bin -> b		1330741	0					
ANR	1331141	PtrMemberAccess	bin -> b		1330741	0					
ANR	1331142	Identifier	bin		1330741	0					
ANR	1331143	Identifier	b		1330741	1					
ANR	1331144	Argument	bin -> phdr [ i ] . p_offset + offset + regdelta		1330741	1					
ANR	1331145	AdditiveExpression	bin -> phdr [ i ] . p_offset + offset + regdelta		1330741	0		+			
ANR	1331146	MemberAccess	bin -> phdr [ i ] . p_offset		1330741	0					
ANR	1331147	ArrayIndexing	bin -> phdr [ i ]		1330741	0					
ANR	1331148	PtrMemberAccess	bin -> phdr		1330741	0					
ANR	1331149	Identifier	bin		1330741	0					
ANR	1331150	Identifier	phdr		1330741	1					
ANR	1331151	Identifier	i		1330741	1					
ANR	1331152	Identifier	p_offset		1330741	1					
ANR	1331153	AdditiveExpression	offset + regdelta		1330741	1		+			
ANR	1331154	Identifier	offset		1330741	0					
ANR	1331155	Identifier	regdelta		1330741	1					
ANR	1331156	Argument	buf		1330741	2					
ANR	1331157	Identifier	buf		1330741	0					
ANR	1331158	Argument	regsize		1330741	3					
ANR	1331159	Identifier	regsize		1330741	0					
ANR	1331160	Identifier	regsize		1330741	1					
ANR	1331161	CompoundStatement		62:99:1861:1861	1330741	1					
ANR	1331162	ExpressionStatement	free ( buf )	2543:4:78916:78926	1330741	0	True				
ANR	1331163	CallExpression	free ( buf )		1330741	0					
ANR	1331164	Callee	free		1330741	0					
ANR	1331165	Identifier	free		1330741	0					
ANR	1331166	ArgumentList	buf		1330741	1					
ANR	1331167	Argument	buf		1330741	0					
ANR	1331168	Identifier	buf		1330741	0					
ANR	1331169	ExpressionStatement	"bprintf ( ""Cannot read register state from CORE file\\n"" )"	2544:4:78932:78987	1330741	1	True				
ANR	1331170	CallExpression	"bprintf ( ""Cannot read register state from CORE file\\n"" )"		1330741	0					
ANR	1331171	Callee	bprintf		1330741	0					
ANR	1331172	Identifier	bprintf		1330741	0					
ANR	1331173	ArgumentList	"""Cannot read register state from CORE file\\n"""		1330741	1					
ANR	1331174	Argument	"""Cannot read register state from CORE file\\n"""		1330741	0					
ANR	1331175	PrimaryExpression	"""Cannot read register state from CORE file\\n"""		1330741	0					
ANR	1331176	ReturnStatement	return NULL ;	2545:4:78993:79004	1330741	2	True				
ANR	1331177	Identifier	NULL		1330741	0					
ANR	1331178	IfStatement	if ( len )		1330741	12					
ANR	1331179	Condition	len	2547:7:79018:79020	1330741	0	True				
ANR	1331180	Identifier	len		1330741	0					
ANR	1331181	CompoundStatement		67:12:1974:1974	1330741	1					
ANR	1331182	ExpressionStatement	* len = regsize	2548:4:79029:79043	1330741	0	True				
ANR	1331183	AssignmentExpression	* len = regsize		1330741	0		=			
ANR	1331184	UnaryOperationExpression	* len		1330741	0					
ANR	1331185	UnaryOperator	*		1330741	0					
ANR	1331186	Identifier	len		1330741	1					
ANR	1331187	Identifier	regsize		1330741	1					
ANR	1331188	ReturnStatement	return buf ;	2550:3:79053:79063	1330741	13	True				
ANR	1331189	Identifier	buf		1330741	0					
ANR	1331190	ExpressionStatement	"bprintf ( ""Cannot find NOTE section\\n"" )"	2553:1:79073:79111	1330741	1	True				
ANR	1331191	CallExpression	"bprintf ( ""Cannot find NOTE section\\n"" )"		1330741	0					
ANR	1331192	Callee	bprintf		1330741	0					
ANR	1331193	Identifier	bprintf		1330741	0					
ANR	1331194	ArgumentList	"""Cannot find NOTE section\\n"""		1330741	1					
ANR	1331195	Argument	"""Cannot find NOTE section\\n"""		1330741	0					
ANR	1331196	PrimaryExpression	"""Cannot find NOTE section\\n"""		1330741	0					
ANR	1331197	ReturnStatement	return NULL ;	2554:1:79114:79125	1330741	2	True				
ANR	1331198	Identifier	NULL		1330741	0					
ANR	1331199	ReturnType	Elf_		1330741	1					
ANR	1331200	Identifier	( r_bin_elf_grab_regstate )		1330741	2					
ANR	1331201	Identifier	r_bin_elf_grab_regstate		1330741	3					
ANR	1331202	ParameterList	"ELFOBJ * bin , int * len"		1330741	4					
ANR	1331203	Parameter	ELFOBJ * bin	2481:35:77025:77035	1330741	0	True				
ANR	1331204	ParameterType	ELFOBJ *		1330741	0					
ANR	1331205	Identifier	bin		1330741	1					
ANR	1331206	Parameter	int * len	2481:48:77038:77045	1330741	1	True				
ANR	1331207	ParameterType	int *		1330741	0					
ANR	1331208	Identifier	len		1330741	1					
ANR	1331209	CFGEntryNode	ENTRY		1330741		True				
ANR	1331210	CFGExitNode	EXIT		1330741		True				
ANR	1331211	Symbol	bin -> b		1330741						
ANR	1331212	Symbol	* reginf		1330741						
ANR	1331213	Symbol	regs_found		1330741						
ANR	1331214	Symbol	reginf		1330741						
ANR	1331215	Symbol	bin		1330741						
ANR	1331216	Symbol	num		1330741						
ANR	1331217	Symbol	reginf [ AARCH64 ] . regsize		1330741						
ANR	1331218	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		1330741						
ANR	1331219	Symbol	bin -> phdr		1330741						
ANR	1331220	Symbol	reginf [ ARM ] . regsize		1330741						
ANR	1331221	Symbol	* elf_nhdr		1330741						
ANR	1331222	Symbol	r_bin_elf_get_bits		1330741						
ANR	1331223	Symbol	round_up		1330741						
ANR	1331224	Symbol	len		1330741						
ANR	1331225	Symbol	AARCH64		1330741						
ANR	1331226	Symbol	bin -> ehdr		1330741						
ANR	1331227	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		1330741						
ANR	1331228	Symbol	* ARM		1330741						
ANR	1331229	Symbol	reginf [ X86 ] . regdelta		1330741						
ANR	1331230	Symbol	reginf [ X86_64 ] . regsize		1330741						
ANR	1331231	Symbol	elf_nhdr		1330741						
ANR	1331232	Symbol	X86_64		1330741						
ANR	1331233	Symbol	ret		1330741						
ANR	1331234	Symbol	NULL		1330741						
ANR	1331235	Symbol	offset		1330741						
ANR	1331236	Symbol	bits		1330741						
ANR	1331237	Symbol	bin -> ehdr . e_phnum		1330741						
ANR	1331238	Symbol	regdelta		1330741						
ANR	1331239	Symbol	reginf [ X86 ] . regsize		1330741						
ANR	1331240	Symbol	* bin -> phdr		1330741						
ANR	1331241	Symbol	bin -> phdr [ i ] . p_offset		1330741						
ANR	1331242	Symbol	n_descsz		1330741						
ANR	1331243	Symbol	elf_nhdr_size		1330741						
ANR	1331244	Symbol	true		1330741						
ANR	1331245	Symbol	ARM		1330741						
ANR	1331246	Symbol	* X86		1330741						
ANR	1331247	Symbol	reginf [ AARCH64 ] . regdelta		1330741						
ANR	1331248	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		1330741						
ANR	1331249	Symbol	calloc		1330741						
ANR	1331250	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		1330741						
ANR	1331251	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		1330741						
ANR	1331252	Symbol	n_type		1330741						
ANR	1331253	Symbol	* bin		1330741						
ANR	1331254	Symbol	n_namesz		1330741						
ANR	1331255	Symbol	regsize		1330741						
ANR	1331256	Symbol	X86		1330741						
ANR	1331257	Symbol	* * bin		1330741						
ANR	1331258	Symbol	Elf_		1330741						
ANR	1331259	Symbol	malloc		1330741						
ANR	1331260	Symbol	PT_NOTE		1330741						
ANR	1331261	Symbol	NT_PRSTATUS		1330741						
ANR	1331262	Symbol	false		1330741						
ANR	1331263	Symbol	i		1330741						
ANR	1331264	Symbol	reginf [ ARM ] . regdelta		1330741						
ANR	1331265	Symbol	* X86_64		1330741						
ANR	1331266	Symbol	buf		1330741						
ANR	1331267	Symbol	* i		1330741						
ANR	1331268	Symbol	bin -> ehdr . e_machine		1330741						
ANR	1331269	Symbol	r_buf_read_at		1330741						
ANR	1331270	Symbol	bin -> phdr [ i ] . p_type		1330741						
ANR	1331271	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		1330741						
ANR	1331272	Symbol	* AARCH64		1330741						
ANR	1331273	Symbol	reginf [ X86_64 ] . regdelta		1330741						
ANR	1331274	Symbol	* len		1330741						
ANR	1331275	Function	r_bin_elf_is_big_endian	2557:0:79130:79232							
ANR	1331276	FunctionDef	r_bin_elf_is_big_endian (ELFOBJ * bin)		1331275	0					
ANR	1331277	CompoundStatement		2557:47:79177:79232	1331275	0					
ANR	1331278	ReturnStatement	return ( bin -> ehdr . e_ident [ EI_DATA ] == ELFDATA2MSB ) ;	2558:1:79180:79230	1331275	0	True				
ANR	1331279	EqualityExpression	bin -> ehdr . e_ident [ EI_DATA ] == ELFDATA2MSB		1331275	0		==			
ANR	1331280	ArrayIndexing	bin -> ehdr . e_ident [ EI_DATA ]		1331275	0					
ANR	1331281	MemberAccess	bin -> ehdr . e_ident		1331275	0					
ANR	1331282	PtrMemberAccess	bin -> ehdr		1331275	0					
ANR	1331283	Identifier	bin		1331275	0					
ANR	1331284	Identifier	ehdr		1331275	1					
ANR	1331285	Identifier	e_ident		1331275	1					
ANR	1331286	Identifier	EI_DATA		1331275	1					
ANR	1331287	Identifier	ELFDATA2MSB		1331275	1					
ANR	1331288	ReturnType	int Elf_		1331275	1					
ANR	1331289	Identifier	( r_bin_elf_is_big_endian )		1331275	2					
ANR	1331290	Identifier	r_bin_elf_is_big_endian		1331275	3					
ANR	1331291	ParameterList	ELFOBJ * bin		1331275	4					
ANR	1331292	Parameter	ELFOBJ * bin	2557:34:79164:79174	1331275	0	True				
ANR	1331293	ParameterType	ELFOBJ *		1331275	0					
ANR	1331294	Identifier	bin		1331275	1					
ANR	1331295	CFGEntryNode	ENTRY		1331275		True				
ANR	1331296	CFGExitNode	EXIT		1331275		True				
ANR	1331297	Symbol	ELFDATA2MSB		1331275						
ANR	1331298	Symbol	* bin -> ehdr		1331275						
ANR	1331299	Symbol	* EI_DATA		1331275						
ANR	1331300	Symbol	bin		1331275						
ANR	1331301	Symbol	bin -> ehdr . e_ident		1331275						
ANR	1331302	Symbol	bin -> ehdr		1331275						
ANR	1331303	Symbol	* * bin		1331275						
ANR	1331304	Symbol	* bin -> ehdr . e_ident		1331275						
ANR	1331305	Symbol	* bin		1331275						
ANR	1331306	Symbol	EI_DATA		1331275						
ANR	1331307	Function	r_bin_elf_get_rpath	2562:6:79267:79880							
ANR	1331308	FunctionDef	r_bin_elf_get_rpath (ELFOBJ * bin)		1331307	0					
ANR	1331309	CompoundStatement		2562:45:79306:79880	1331307	0					
ANR	1331310	IdentifierDeclStatement	char * ret = NULL ;	2563:1:79309:79325	1331307	0	True				
ANR	1331311	IdentifierDecl	* ret = NULL		1331307	0					
ANR	1331312	IdentifierDeclType	char *		1331307	0					
ANR	1331313	Identifier	ret		1331307	1					
ANR	1331314	AssignmentExpression	* ret = NULL		1331307	2		=			
ANR	1331315	Identifier	NULL		1331307	0					
ANR	1331316	Identifier	NULL		1331307	1					
ANR	1331317	IdentifierDeclStatement	int j ;	2564:1:79328:79333	1331307	1	True				
ANR	1331318	IdentifierDecl	j		1331307	0					
ANR	1331319	IdentifierDeclType	int		1331307	0					
ANR	1331320	Identifier	j		1331307	1					
ANR	1331321	IfStatement	if ( ! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab )		1331307	2					
ANR	1331322	Condition	! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab	2566:5:79341:79391	1331307	0	True				
ANR	1331323	OrExpression	! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab		1331307	0		||			
ANR	1331324	UnaryOperationExpression	! bin		1331307	0					
ANR	1331325	UnaryOperator	!		1331307	0					
ANR	1331326	Identifier	bin		1331307	1					
ANR	1331327	OrExpression	! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab		1331307	1		||			
ANR	1331328	UnaryOperationExpression	! bin -> phdr		1331307	0					
ANR	1331329	UnaryOperator	!		1331307	0					
ANR	1331330	PtrMemberAccess	bin -> phdr		1331307	1					
ANR	1331331	Identifier	bin		1331307	0					
ANR	1331332	Identifier	phdr		1331307	1					
ANR	1331333	OrExpression	! bin -> dyn_buf || ! bin -> strtab		1331307	1		||			
ANR	1331334	UnaryOperationExpression	! bin -> dyn_buf		1331307	0					
ANR	1331335	UnaryOperator	!		1331307	0					
ANR	1331336	PtrMemberAccess	bin -> dyn_buf		1331307	1					
ANR	1331337	Identifier	bin		1331307	0					
ANR	1331338	Identifier	dyn_buf		1331307	1					
ANR	1331339	UnaryOperationExpression	! bin -> strtab		1331307	1					
ANR	1331340	UnaryOperator	!		1331307	0					
ANR	1331341	PtrMemberAccess	bin -> strtab		1331307	1					
ANR	1331342	Identifier	bin		1331307	0					
ANR	1331343	Identifier	strtab		1331307	1					
ANR	1331344	CompoundStatement		5:58:87:87	1331307	1					
ANR	1331345	ReturnStatement	return NULL ;	2567:2:79398:79409	1331307	0	True				
ANR	1331346	Identifier	NULL		1331307	0					
ANR	1331347	ForStatement	for ( j = 0 ; j < bin -> dyn_entries ; j ++ )		1331307	3					
ANR	1331348	ForInit	j = 0 ;	2569:6:79420:79425	1331307	0	True				
ANR	1331349	AssignmentExpression	j = 0		1331307	0		=			
ANR	1331350	Identifier	j		1331307	0					
ANR	1331351	PrimaryExpression	0		1331307	1					
ANR	1331352	Condition	j < bin -> dyn_entries	2569:13:79427:79445	1331307	1	True				
ANR	1331353	RelationalExpression	j < bin -> dyn_entries		1331307	0		<			
ANR	1331354	Identifier	j		1331307	0					
ANR	1331355	PtrMemberAccess	bin -> dyn_entries		1331307	1					
ANR	1331356	Identifier	bin		1331307	0					
ANR	1331357	Identifier	dyn_entries		1331307	1					
ANR	1331358	PostIncDecOperationExpression	j ++	2569:34:79448:79450	1331307	2	True				
ANR	1331359	Identifier	j		1331307	0					
ANR	1331360	IncDec	++		1331307	1					
ANR	1331361	CompoundStatement		8:39:146:146	1331307	3					
ANR	1331362	IfStatement	if ( bin -> dyn_buf [ j ] . d_tag == DT_RPATH || bin -> dyn_buf [ j ] . d_tag == DT_RUNPATH )		1331307	0					
ANR	1331363	Condition	bin -> dyn_buf [ j ] . d_tag == DT_RPATH || bin -> dyn_buf [ j ] . d_tag == DT_RUNPATH	2570:6:79461:79532	1331307	0	True				
ANR	1331364	OrExpression	bin -> dyn_buf [ j ] . d_tag == DT_RPATH || bin -> dyn_buf [ j ] . d_tag == DT_RUNPATH		1331307	0		||			
ANR	1331365	EqualityExpression	bin -> dyn_buf [ j ] . d_tag == DT_RPATH		1331307	0		==			
ANR	1331366	MemberAccess	bin -> dyn_buf [ j ] . d_tag		1331307	0					
ANR	1331367	ArrayIndexing	bin -> dyn_buf [ j ]		1331307	0					
ANR	1331368	PtrMemberAccess	bin -> dyn_buf		1331307	0					
ANR	1331369	Identifier	bin		1331307	0					
ANR	1331370	Identifier	dyn_buf		1331307	1					
ANR	1331371	Identifier	j		1331307	1					
ANR	1331372	Identifier	d_tag		1331307	1					
ANR	1331373	Identifier	DT_RPATH		1331307	1					
ANR	1331374	EqualityExpression	bin -> dyn_buf [ j ] . d_tag == DT_RUNPATH		1331307	1		==			
ANR	1331375	MemberAccess	bin -> dyn_buf [ j ] . d_tag		1331307	0					
ANR	1331376	ArrayIndexing	bin -> dyn_buf [ j ]		1331307	0					
ANR	1331377	PtrMemberAccess	bin -> dyn_buf		1331307	0					
ANR	1331378	Identifier	bin		1331307	0					
ANR	1331379	Identifier	dyn_buf		1331307	1					
ANR	1331380	Identifier	j		1331307	1					
ANR	1331381	Identifier	d_tag		1331307	1					
ANR	1331382	Identifier	DT_RUNPATH		1331307	1					
ANR	1331383	CompoundStatement		9:80:228:228	1331307	1					
ANR	1331384	IfStatement	"if ( ! ( ret = calloc ( 1 , ELF_STRING_LENGTH ) ) )"		1331307	0					
ANR	1331385	Condition	"! ( ret = calloc ( 1 , ELF_STRING_LENGTH ) )"	2571:7:79544:79581	1331307	0	True				
ANR	1331386	UnaryOperationExpression	"! ( ret = calloc ( 1 , ELF_STRING_LENGTH ) )"		1331307	0					
ANR	1331387	UnaryOperator	!		1331307	0					
ANR	1331388	AssignmentExpression	"ret = calloc ( 1 , ELF_STRING_LENGTH )"		1331307	1		=			
ANR	1331389	Identifier	ret		1331307	0					
ANR	1331390	CallExpression	"calloc ( 1 , ELF_STRING_LENGTH )"		1331307	1					
ANR	1331391	Callee	calloc		1331307	0					
ANR	1331392	Identifier	calloc		1331307	0					
ANR	1331393	ArgumentList	1		1331307	1					
ANR	1331394	Argument	1		1331307	0					
ANR	1331395	PrimaryExpression	1		1331307	0					
ANR	1331396	Argument	ELF_STRING_LENGTH		1331307	1					
ANR	1331397	Identifier	ELF_STRING_LENGTH		1331307	0					
ANR	1331398	CompoundStatement		10:47:277:277	1331307	1					
ANR	1331399	ExpressionStatement	"perror ( ""malloc (rpath)"" )"	2572:4:79590:79615	1331307	0	True				
ANR	1331400	CallExpression	"perror ( ""malloc (rpath)"" )"		1331307	0					
ANR	1331401	Callee	perror		1331307	0					
ANR	1331402	Identifier	perror		1331307	0					
ANR	1331403	ArgumentList	"""malloc (rpath)"""		1331307	1					
ANR	1331404	Argument	"""malloc (rpath)"""		1331307	0					
ANR	1331405	PrimaryExpression	"""malloc (rpath)"""		1331307	0					
ANR	1331406	ReturnStatement	return NULL ;	2573:4:79621:79632	1331307	1	True				
ANR	1331407	Identifier	NULL		1331307	0					
ANR	1331408	IfStatement	if ( bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size )		1331307	1					
ANR	1331409	Condition	bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size	2575:7:79646:79690	1331307	0	True				
ANR	1331410	RelationalExpression	bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size		1331307	0		>			
ANR	1331411	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_val		1331307	0					
ANR	1331412	MemberAccess	bin -> dyn_buf [ j ] . d_un		1331307	0					
ANR	1331413	ArrayIndexing	bin -> dyn_buf [ j ]		1331307	0					
ANR	1331414	PtrMemberAccess	bin -> dyn_buf		1331307	0					
ANR	1331415	Identifier	bin		1331307	0					
ANR	1331416	Identifier	dyn_buf		1331307	1					
ANR	1331417	Identifier	j		1331307	1					
ANR	1331418	Identifier	d_un		1331307	1					
ANR	1331419	Identifier	d_val		1331307	1					
ANR	1331420	PtrMemberAccess	bin -> strtab_size		1331307	1					
ANR	1331421	Identifier	bin		1331307	0					
ANR	1331422	Identifier	strtab_size		1331307	1					
ANR	1331423	CompoundStatement		14:54:386:386	1331307	1					
ANR	1331424	ExpressionStatement	free ( ret )	2576:4:79699:79709	1331307	0	True				
ANR	1331425	CallExpression	free ( ret )		1331307	0					
ANR	1331426	Callee	free		1331307	0					
ANR	1331427	Identifier	free		1331307	0					
ANR	1331428	ArgumentList	ret		1331307	1					
ANR	1331429	Argument	ret		1331307	0					
ANR	1331430	Identifier	ret		1331307	0					
ANR	1331431	ReturnStatement	return NULL ;	2577:4:79715:79726	1331307	1	True				
ANR	1331432	Identifier	NULL		1331307	0					
ANR	1331433	ExpressionStatement	"strncpy ( ret , bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val , ELF_STRING_LENGTH )"	2579:3:79736:79810	1331307	2	True				
ANR	1331434	CallExpression	"strncpy ( ret , bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val , ELF_STRING_LENGTH )"		1331307	0					
ANR	1331435	Callee	strncpy		1331307	0					
ANR	1331436	Identifier	strncpy		1331307	0					
ANR	1331437	ArgumentList	ret		1331307	1					
ANR	1331438	Argument	ret		1331307	0					
ANR	1331439	Identifier	ret		1331307	0					
ANR	1331440	Argument	bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val		1331307	1					
ANR	1331441	AdditiveExpression	bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val		1331307	0		+			
ANR	1331442	PtrMemberAccess	bin -> strtab		1331307	0					
ANR	1331443	Identifier	bin		1331307	0					
ANR	1331444	Identifier	strtab		1331307	1					
ANR	1331445	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_val		1331307	1					
ANR	1331446	MemberAccess	bin -> dyn_buf [ j ] . d_un		1331307	0					
ANR	1331447	ArrayIndexing	bin -> dyn_buf [ j ]		1331307	0					
ANR	1331448	PtrMemberAccess	bin -> dyn_buf		1331307	0					
ANR	1331449	Identifier	bin		1331307	0					
ANR	1331450	Identifier	dyn_buf		1331307	1					
ANR	1331451	Identifier	j		1331307	1					
ANR	1331452	Identifier	d_un		1331307	1					
ANR	1331453	Identifier	d_val		1331307	1					
ANR	1331454	Argument	ELF_STRING_LENGTH		1331307	2					
ANR	1331455	Identifier	ELF_STRING_LENGTH		1331307	0					
ANR	1331456	ExpressionStatement	ret [ ELF_STRING_LENGTH - 1 ] = '\\0'	2580:3:79815:79848	1331307	3	True				
ANR	1331457	AssignmentExpression	ret [ ELF_STRING_LENGTH - 1 ] = '\\0'		1331307	0		=			
ANR	1331458	ArrayIndexing	ret [ ELF_STRING_LENGTH - 1 ]		1331307	0					
ANR	1331459	Identifier	ret		1331307	0					
ANR	1331460	AdditiveExpression	ELF_STRING_LENGTH - 1		1331307	1		-			
ANR	1331461	Identifier	ELF_STRING_LENGTH		1331307	0					
ANR	1331462	PrimaryExpression	1		1331307	1					
ANR	1331463	PrimaryExpression	'\\0'		1331307	1					
ANR	1331464	BreakStatement	break ;	2581:3:79853:79858	1331307	4	True				
ANR	1331465	ReturnStatement	return ret ;	2584:1:79868:79878	1331307	4	True				
ANR	1331466	Identifier	ret		1331307	0					
ANR	1331467	ReturnType	Elf_		1331307	1					
ANR	1331468	Identifier	( r_bin_elf_get_rpath )		1331307	2					
ANR	1331469	Identifier	r_bin_elf_get_rpath		1331307	3					
ANR	1331470	ParameterList	ELFOBJ * bin		1331307	4					
ANR	1331471	Parameter	ELFOBJ * bin	2562:32:79293:79303	1331307	0	True				
ANR	1331472	ParameterType	ELFOBJ *		1331307	0					
ANR	1331473	Identifier	bin		1331307	1					
ANR	1331474	CFGEntryNode	ENTRY		1331307		True				
ANR	1331475	CFGExitNode	EXIT		1331307		True				
ANR	1331476	Symbol	ret		1331307						
ANR	1331477	Symbol	DT_RUNPATH		1331307						
ANR	1331478	Symbol	bin -> dyn_buf		1331307						
ANR	1331479	Symbol	NULL		1331307						
ANR	1331480	Symbol	bin		1331307						
ANR	1331481	Symbol	bin -> dyn_entries		1331307						
ANR	1331482	Symbol	DT_RPATH		1331307						
ANR	1331483	Symbol	bin -> phdr		1331307						
ANR	1331484	Symbol	j		1331307						
ANR	1331485	Symbol	bin -> dyn_buf [ j ] . d_un . d_val		1331307						
ANR	1331486	Symbol	calloc		1331307						
ANR	1331487	Symbol	bin -> dyn_buf [ j ] . d_un		1331307						
ANR	1331488	Symbol	* ret		1331307						
ANR	1331489	Symbol	ELF_STRING_LENGTH		1331307						
ANR	1331490	Symbol	* bin		1331307						
ANR	1331491	Symbol	* j		1331307						
ANR	1331492	Symbol	* ELF_STRING_LENGTH		1331307						
ANR	1331493	Symbol	bin -> dyn_buf [ j ] . d_tag		1331307						
ANR	1331494	Symbol	* * bin		1331307						
ANR	1331495	Symbol	* bin -> dyn_buf		1331307						
ANR	1331496	Symbol	bin -> strtab		1331307						
ANR	1331497	Symbol	bin -> strtab_size		1331307						
ANR	1331498	Function	sectionIsInvalid	2587:0:79883:79998							
ANR	1331499	FunctionDef	"sectionIsInvalid (ELFOBJ * bin , RBinElfSection * sect)"		1331498	0					
ANR	1331500	CompoundStatement		2587:64:79947:79998	1331498	0					
ANR	1331501	ReturnStatement	return ( sect -> offset + sect -> size > bin -> size ) ;	2588:1:79950:79996	1331498	0	True				
ANR	1331502	RelationalExpression	sect -> offset + sect -> size > bin -> size		1331498	0		>			
ANR	1331503	AdditiveExpression	sect -> offset + sect -> size		1331498	0		+			
ANR	1331504	PtrMemberAccess	sect -> offset		1331498	0					
ANR	1331505	Identifier	sect		1331498	0					
ANR	1331506	Identifier	offset		1331498	1					
ANR	1331507	PtrMemberAccess	sect -> size		1331498	1					
ANR	1331508	Identifier	sect		1331498	0					
ANR	1331509	Identifier	size		1331498	1					
ANR	1331510	PtrMemberAccess	bin -> size		1331498	1					
ANR	1331511	Identifier	bin		1331498	0					
ANR	1331512	Identifier	size		1331498	1					
ANR	1331513	ReturnType	static bool		1331498	1					
ANR	1331514	Identifier	sectionIsInvalid		1331498	2					
ANR	1331515	ParameterList	"ELFOBJ * bin , RBinElfSection * sect"		1331498	3					
ANR	1331516	Parameter	ELFOBJ * bin	2587:29:79912:79922	1331498	0	True				
ANR	1331517	ParameterType	ELFOBJ *		1331498	0					
ANR	1331518	Identifier	bin		1331498	1					
ANR	1331519	Parameter	RBinElfSection * sect	2587:42:79925:79944	1331498	1	True				
ANR	1331520	ParameterType	RBinElfSection *		1331498	0					
ANR	1331521	Identifier	sect		1331498	1					
ANR	1331522	CFGEntryNode	ENTRY		1331498		True				
ANR	1331523	CFGExitNode	EXIT		1331498		True				
ANR	1331524	Symbol	bin -> size		1331498						
ANR	1331525	Symbol	sect -> offset		1331498						
ANR	1331526	Symbol	bin		1331498						
ANR	1331527	Symbol	sect		1331498						
ANR	1331528	Symbol	sect -> size		1331498						
ANR	1331529	Symbol	* sect		1331498						
ANR	1331530	Symbol	* bin		1331498						
ANR	1331531	Function	get_relocs_num	2591:0:80001:81001							
ANR	1331532	FunctionDef	get_relocs_num (ELFOBJ * bin)		1331531	0					
ANR	1331533	CompoundStatement		2591:42:80043:81001	1331531	0					
ANR	1331534	IdentifierDeclStatement	"size_t i , size , ret = 0 ;"	2592:1:80046:80069	1331531	0	True				
ANR	1331535	IdentifierDecl	i		1331531	0					
ANR	1331536	IdentifierDeclType	size_t		1331531	0					
ANR	1331537	Identifier	i		1331531	1					
ANR	1331538	IdentifierDecl	size		1331531	1					
ANR	1331539	IdentifierDeclType	size_t		1331531	0					
ANR	1331540	Identifier	size		1331531	1					
ANR	1331541	IdentifierDecl	ret = 0		1331531	2					
ANR	1331542	IdentifierDeclType	size_t		1331531	0					
ANR	1331543	Identifier	ret		1331531	1					
ANR	1331544	AssignmentExpression	ret = 0		1331531	2		=			
ANR	1331545	Identifier	ret		1331531	0					
ANR	1331546	PrimaryExpression	0		1331531	1					
ANR	1331547	Statement	define	2597:1:80235:80240	1331531	1	True				
ANR	1331548	Statement	NUMENTRIES_ROUNDUP	2597:8:80242:80259	1331531	2	True				
ANR	1331549	Statement	(	2597:26:80260:80260	1331531	3	True				
ANR	1331550	Statement	sectionsize	2597:27:80261:80271	1331531	4	True				
ANR	1331551	Statement	","	2597:38:80272:80272	1331531	5	True				
ANR	1331552	Statement	entrysize	2597:40:80274:80282	1331531	6	True				
ANR	1331553	Statement	)	2597:49:80283:80283	1331531	7	True				
ANR	1331554	Statement	(	2597:51:80285:80285	1331531	8	True				
ANR	1331555	Statement	(	2597:52:80286:80286	1331531	9	True				
ANR	1331556	Statement	(	2597:53:80287:80287	1331531	10	True				
ANR	1331557	Statement	sectionsize	2597:54:80288:80298	1331531	11	True				
ANR	1331558	Statement	)	2597:65:80299:80299	1331531	12	True				
ANR	1331559	Statement	+	2597:66:80300:80300	1331531	13	True				
ANR	1331560	Statement	(	2597:67:80301:80301	1331531	14	True				
ANR	1331561	Statement	entrysize	2597:68:80302:80310	1331531	15	True				
ANR	1331562	Statement	)	2597:77:80311:80311	1331531	16	True				
ANR	1331563	Statement	-	2597:78:80312:80312	1331531	17	True				
ANR	1331564	Statement	1	2597:79:80313:80313	1331531	18	True				
ANR	1331565	Statement	)	2597:80:80314:80314	1331531	19	True				
ANR	1331566	Statement	/	2597:81:80315:80315	1331531	20	True				
ANR	1331567	Statement	(	2597:82:80316:80316	1331531	21	True				
ANR	1331568	Statement	entrysize	2597:83:80317:80325	1331531	22	True				
ANR	1331569	Statement	)	2597:92:80326:80326	1331531	23	True				
ANR	1331570	Statement	)	2597:93:80327:80327	1331531	24	True				
ANR	1331571	IfStatement	if ( ! bin -> g_sections )		1331531	25					
ANR	1331572	Condition	! bin -> g_sections	2598:5:80334:80349	1331531	0	True				
ANR	1331573	UnaryOperationExpression	! bin -> g_sections		1331531	0					
ANR	1331574	UnaryOperator	!		1331531	0					
ANR	1331575	PtrMemberAccess	bin -> g_sections		1331531	1					
ANR	1331576	Identifier	bin		1331531	0					
ANR	1331577	Identifier	g_sections		1331531	1					
ANR	1331578	CompoundStatement		8:23:308:308	1331531	1					
ANR	1331579	ReturnStatement	return 0 ;	2599:2:80356:80364	1331531	0	True				
ANR	1331580	PrimaryExpression	0		1331531	0					
ANR	1331581	ExpressionStatement	size = bin -> is_rela == DT_REL ? sizeof ( Elf_ ( Rel ) ) : sizeof ( Elf_ ( Rela ) )	2601:1:80370:80442	1331531	26	True				
ANR	1331582	AssignmentExpression	size = bin -> is_rela == DT_REL ? sizeof ( Elf_ ( Rel ) ) : sizeof ( Elf_ ( Rela ) )		1331531	0		=			
ANR	1331583	Identifier	size		1331531	0					
ANR	1331584	ConditionalExpression	bin -> is_rela == DT_REL ? sizeof ( Elf_ ( Rel ) ) : sizeof ( Elf_ ( Rela ) )		1331531	1					
ANR	1331585	Condition	bin -> is_rela == DT_REL		1331531	0					
ANR	1331586	EqualityExpression	bin -> is_rela == DT_REL		1331531	0		==			
ANR	1331587	PtrMemberAccess	bin -> is_rela		1331531	0					
ANR	1331588	Identifier	bin		1331531	0					
ANR	1331589	Identifier	is_rela		1331531	1					
ANR	1331590	Identifier	DT_REL		1331531	1					
ANR	1331591	SizeofExpression	sizeof ( Elf_ ( Rel ) )		1331531	1					
ANR	1331592	Sizeof	sizeof		1331531	0					
ANR	1331593	CallExpression	Elf_ ( Rel )		1331531	1					
ANR	1331594	Callee	Elf_		1331531	0					
ANR	1331595	Identifier	Elf_		1331531	0					
ANR	1331596	ArgumentList	Rel		1331531	1					
ANR	1331597	Argument	Rel		1331531	0					
ANR	1331598	Identifier	Rel		1331531	0					
ANR	1331599	SizeofExpression	sizeof ( Elf_ ( Rela ) )		1331531	2					
ANR	1331600	Sizeof	sizeof		1331531	0					
ANR	1331601	CallExpression	Elf_ ( Rela )		1331531	1					
ANR	1331602	Callee	Elf_		1331531	0					
ANR	1331603	Identifier	Elf_		1331531	0					
ANR	1331604	ArgumentList	Rela		1331531	1					
ANR	1331605	Argument	Rela		1331531	0					
ANR	1331606	Identifier	Rela		1331531	0					
ANR	1331607	ForStatement	for ( i = 0 ; ! bin -> g_sections [ i ] . last ; i ++ )		1331531	27					
ANR	1331608	ForInit	i = 0 ;	2602:6:80450:80455	1331531	0	True				
ANR	1331609	AssignmentExpression	i = 0		1331531	0		=			
ANR	1331610	Identifier	i		1331531	0					
ANR	1331611	PrimaryExpression	0		1331531	1					
ANR	1331612	Condition	! bin -> g_sections [ i ] . last	2602:13:80457:80480	1331531	1	True				
ANR	1331613	UnaryOperationExpression	! bin -> g_sections [ i ] . last		1331531	0					
ANR	1331614	UnaryOperator	!		1331531	0					
ANR	1331615	MemberAccess	bin -> g_sections [ i ] . last		1331531	1					
ANR	1331616	ArrayIndexing	bin -> g_sections [ i ]		1331531	0					
ANR	1331617	PtrMemberAccess	bin -> g_sections		1331531	0					
ANR	1331618	Identifier	bin		1331531	0					
ANR	1331619	Identifier	g_sections		1331531	1					
ANR	1331620	Identifier	i		1331531	1					
ANR	1331621	Identifier	last		1331531	1					
ANR	1331622	PostIncDecOperationExpression	i ++	2602:39:80483:80485	1331531	2	True				
ANR	1331623	Identifier	i		1331531	0					
ANR	1331624	IncDec	++		1331531	1					
ANR	1331625	CompoundStatement		12:44:444:444	1331531	3					
ANR	1331626	IfStatement	"if ( sectionIsInvalid ( bin , & bin -> g_sections [ i ] ) )"		1331531	0					
ANR	1331627	Condition	"sectionIsInvalid ( bin , & bin -> g_sections [ i ] )"	2603:6:80496:80538	1331531	0	True				
ANR	1331628	CallExpression	"sectionIsInvalid ( bin , & bin -> g_sections [ i ] )"		1331531	0					
ANR	1331629	Callee	sectionIsInvalid		1331531	0					
ANR	1331630	Identifier	sectionIsInvalid		1331531	0					
ANR	1331631	ArgumentList	bin		1331531	1					
ANR	1331632	Argument	bin		1331531	0					
ANR	1331633	Identifier	bin		1331531	0					
ANR	1331634	Argument	& bin -> g_sections [ i ]		1331531	1					
ANR	1331635	UnaryOperationExpression	& bin -> g_sections [ i ]		1331531	0					
ANR	1331636	UnaryOperator	&		1331531	0					
ANR	1331637	ArrayIndexing	bin -> g_sections [ i ]		1331531	1					
ANR	1331638	PtrMemberAccess	bin -> g_sections		1331531	0					
ANR	1331639	Identifier	bin		1331531	0					
ANR	1331640	Identifier	g_sections		1331531	1					
ANR	1331641	Identifier	i		1331531	1					
ANR	1331642	CompoundStatement		13:51:497:497	1331531	1					
ANR	1331643	ContinueStatement	continue ;	2604:3:80546:80554	1331531	0	True				
ANR	1331644	IfStatement	"if ( ! strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) ) )"		1331531	1					
ANR	1331645	Condition	"! strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"	2606:6:80566:80628	1331531	0	True				
ANR	1331646	UnaryOperationExpression	"! strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		1331531	0					
ANR	1331647	UnaryOperator	!		1331531	0					
ANR	1331648	CallExpression	"strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		1331531	1					
ANR	1331649	Callee	strncmp		1331531	0					
ANR	1331650	Identifier	strncmp		1331531	0					
ANR	1331651	ArgumentList	bin -> g_sections [ i ] . name		1331531	1					
ANR	1331652	Argument	bin -> g_sections [ i ] . name		1331531	0					
ANR	1331653	MemberAccess	bin -> g_sections [ i ] . name		1331531	0					
ANR	1331654	ArrayIndexing	bin -> g_sections [ i ]		1331531	0					
ANR	1331655	PtrMemberAccess	bin -> g_sections		1331531	0					
ANR	1331656	Identifier	bin		1331531	0					
ANR	1331657	Identifier	g_sections		1331531	1					
ANR	1331658	Identifier	i		1331531	1					
ANR	1331659	Identifier	name		1331531	1					
ANR	1331660	Argument	""".rela."""		1331531	1					
ANR	1331661	PrimaryExpression	""".rela."""		1331531	0					
ANR	1331662	Argument	"strlen ( "".rela."" )"		1331531	2					
ANR	1331663	CallExpression	"strlen ( "".rela."" )"		1331531	0					
ANR	1331664	Callee	strlen		1331531	0					
ANR	1331665	Identifier	strlen		1331531	0					
ANR	1331666	ArgumentList	""".rela."""		1331531	1					
ANR	1331667	Argument	""".rela."""		1331531	0					
ANR	1331668	PrimaryExpression	""".rela."""		1331531	0					
ANR	1331669	CompoundStatement		16:71:587:587	1331531	1					
ANR	1331670	IfStatement	if ( ! bin -> is_rela )		1331531	0					
ANR	1331671	Condition	! bin -> is_rela	2607:7:80640:80652	1331531	0	True				
ANR	1331672	UnaryOperationExpression	! bin -> is_rela		1331531	0					
ANR	1331673	UnaryOperator	!		1331531	0					
ANR	1331674	PtrMemberAccess	bin -> is_rela		1331531	1					
ANR	1331675	Identifier	bin		1331531	0					
ANR	1331676	Identifier	is_rela		1331531	1					
ANR	1331677	CompoundStatement		17:22:611:611	1331531	1					
ANR	1331678	ExpressionStatement	size = sizeof ( Elf_ ( Rela ) )	2608:4:80661:80687	1331531	0	True				
ANR	1331679	AssignmentExpression	size = sizeof ( Elf_ ( Rela ) )		1331531	0		=			
ANR	1331680	Identifier	size		1331531	0					
ANR	1331681	SizeofExpression	sizeof ( Elf_ ( Rela ) )		1331531	1					
ANR	1331682	Sizeof	sizeof		1331531	0					
ANR	1331683	CallExpression	Elf_ ( Rela )		1331531	1					
ANR	1331684	Callee	Elf_		1331531	0					
ANR	1331685	Identifier	Elf_		1331531	0					
ANR	1331686	ArgumentList	Rela		1331531	1					
ANR	1331687	Argument	Rela		1331531	0					
ANR	1331688	Identifier	Rela		1331531	0					
ANR	1331689	ExpressionStatement	"ret += NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"	2610:3:80697:80754	1331531	1	True				
ANR	1331690	AssignmentExpression	"ret += NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"		1331531	0		+=			
ANR	1331691	Identifier	ret		1331531	0					
ANR	1331692	CallExpression	"NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"		1331531	1					
ANR	1331693	Callee	NUMENTRIES_ROUNDUP		1331531	0					
ANR	1331694	Identifier	NUMENTRIES_ROUNDUP		1331531	0					
ANR	1331695	ArgumentList	bin -> g_sections [ i ] . size		1331531	1					
ANR	1331696	Argument	bin -> g_sections [ i ] . size		1331531	0					
ANR	1331697	MemberAccess	bin -> g_sections [ i ] . size		1331531	0					
ANR	1331698	ArrayIndexing	bin -> g_sections [ i ]		1331531	0					
ANR	1331699	PtrMemberAccess	bin -> g_sections		1331531	0					
ANR	1331700	Identifier	bin		1331531	0					
ANR	1331701	Identifier	g_sections		1331531	1					
ANR	1331702	Identifier	i		1331531	1					
ANR	1331703	Identifier	size		1331531	1					
ANR	1331704	Argument	size		1331531	1					
ANR	1331705	Identifier	size		1331531	0					
ANR	1331706	ElseStatement	else		1331531	0					
ANR	1331707	IfStatement	"if ( ! strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) ) )"		1331531	0					
ANR	1331708	Condition	"! strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"	2611:13:80769:80829	1331531	0	True				
ANR	1331709	UnaryOperationExpression	"! strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		1331531	0					
ANR	1331710	UnaryOperator	!		1331531	0					
ANR	1331711	CallExpression	"strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		1331531	1					
ANR	1331712	Callee	strncmp		1331531	0					
ANR	1331713	Identifier	strncmp		1331531	0					
ANR	1331714	ArgumentList	bin -> g_sections [ i ] . name		1331531	1					
ANR	1331715	Argument	bin -> g_sections [ i ] . name		1331531	0					
ANR	1331716	MemberAccess	bin -> g_sections [ i ] . name		1331531	0					
ANR	1331717	ArrayIndexing	bin -> g_sections [ i ]		1331531	0					
ANR	1331718	PtrMemberAccess	bin -> g_sections		1331531	0					
ANR	1331719	Identifier	bin		1331531	0					
ANR	1331720	Identifier	g_sections		1331531	1					
ANR	1331721	Identifier	i		1331531	1					
ANR	1331722	Identifier	name		1331531	1					
ANR	1331723	Argument	""".rel."""		1331531	1					
ANR	1331724	PrimaryExpression	""".rel."""		1331531	0					
ANR	1331725	Argument	"strlen ( "".rel."" )"		1331531	2					
ANR	1331726	CallExpression	"strlen ( "".rel."" )"		1331531	0					
ANR	1331727	Callee	strlen		1331531	0					
ANR	1331728	Identifier	strlen		1331531	0					
ANR	1331729	ArgumentList	""".rel."""		1331531	1					
ANR	1331730	Argument	""".rel."""		1331531	0					
ANR	1331731	PrimaryExpression	""".rel."""		1331531	0					
ANR	1331732	CompoundStatement		21:75:787:787	1331531	1					
ANR	1331733	IfStatement	if ( ! bin -> is_rela )		1331531	0					
ANR	1331734	Condition	! bin -> is_rela	2612:7:80840:80852	1331531	0	True				
ANR	1331735	UnaryOperationExpression	! bin -> is_rela		1331531	0					
ANR	1331736	UnaryOperator	!		1331531	0					
ANR	1331737	PtrMemberAccess	bin -> is_rela		1331531	1					
ANR	1331738	Identifier	bin		1331531	0					
ANR	1331739	Identifier	is_rela		1331531	1					
ANR	1331740	CompoundStatement		22:22:811:811	1331531	1					
ANR	1331741	ExpressionStatement	size = sizeof ( Elf_ ( Rel ) )	2613:4:80861:80886	1331531	0	True				
ANR	1331742	AssignmentExpression	size = sizeof ( Elf_ ( Rel ) )		1331531	0		=			
ANR	1331743	Identifier	size		1331531	0					
ANR	1331744	SizeofExpression	sizeof ( Elf_ ( Rel ) )		1331531	1					
ANR	1331745	Sizeof	sizeof		1331531	0					
ANR	1331746	CallExpression	Elf_ ( Rel )		1331531	1					
ANR	1331747	Callee	Elf_		1331531	0					
ANR	1331748	Identifier	Elf_		1331531	0					
ANR	1331749	ArgumentList	Rel		1331531	1					
ANR	1331750	Argument	Rel		1331531	0					
ANR	1331751	Identifier	Rel		1331531	0					
ANR	1331752	ExpressionStatement	"ret += NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"	2615:3:80896:80953	1331531	1	True				
ANR	1331753	AssignmentExpression	"ret += NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"		1331531	0		+=			
ANR	1331754	Identifier	ret		1331531	0					
ANR	1331755	CallExpression	"NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"		1331531	1					
ANR	1331756	Callee	NUMENTRIES_ROUNDUP		1331531	0					
ANR	1331757	Identifier	NUMENTRIES_ROUNDUP		1331531	0					
ANR	1331758	ArgumentList	bin -> g_sections [ i ] . size		1331531	1					
ANR	1331759	Argument	bin -> g_sections [ i ] . size		1331531	0					
ANR	1331760	MemberAccess	bin -> g_sections [ i ] . size		1331531	0					
ANR	1331761	ArrayIndexing	bin -> g_sections [ i ]		1331531	0					
ANR	1331762	PtrMemberAccess	bin -> g_sections		1331531	0					
ANR	1331763	Identifier	bin		1331531	0					
ANR	1331764	Identifier	g_sections		1331531	1					
ANR	1331765	Identifier	i		1331531	1					
ANR	1331766	Identifier	size		1331531	1					
ANR	1331767	Argument	size		1331531	1					
ANR	1331768	Identifier	size		1331531	0					
ANR	1331769	ReturnStatement	return ret ;	2618:1:80963:80973	1331531	28	True				
ANR	1331770	Identifier	ret		1331531	0					
ANR	1331771	Statement	undef	2619:1:80976:80980	1331531	29	True				
ANR	1331772	Statement	NUMENTRIES_ROUNDUP	2619:7:80982:80999	1331531	30	True				
ANR	1331773	ReturnType	static size_t		1331531	1					
ANR	1331774	Identifier	get_relocs_num		1331531	2					
ANR	1331775	ParameterList	ELFOBJ * bin		1331531	3					
ANR	1331776	Parameter	ELFOBJ * bin	2591:29:80030:80040	1331531	0	True				
ANR	1331777	ParameterType	ELFOBJ *		1331531	0					
ANR	1331778	Identifier	bin		1331531	1					
ANR	1331779	CFGEntryNode	ENTRY		1331531		True				
ANR	1331780	CFGExitNode	EXIT		1331531		True				
ANR	1331781	Symbol	ret		1331531						
ANR	1331782	Symbol	Elf_		1331531						
ANR	1331783	Symbol	bin -> g_sections [ i ] . size		1331531						
ANR	1331784	Symbol	NUMENTRIES_ROUNDUP		1331531						
ANR	1331785	Symbol	* bin -> g_sections		1331531						
ANR	1331786	Symbol	bin		1331531						
ANR	1331787	Symbol	i		1331531						
ANR	1331788	Symbol	bin -> is_rela		1331531						
ANR	1331789	Symbol	sectionIsInvalid		1331531						
ANR	1331790	Symbol	* bin		1331531						
ANR	1331791	Symbol	bin -> g_sections		1331531						
ANR	1331792	Symbol	Rela		1331531						
ANR	1331793	Symbol	strncmp		1331531						
ANR	1331794	Symbol	strlen		1331531						
ANR	1331795	Symbol	* i		1331531						
ANR	1331796	Symbol	size		1331531						
ANR	1331797	Symbol	bin -> g_sections [ i ] . name		1331531						
ANR	1331798	Symbol	Rel		1331531						
ANR	1331799	Symbol	* * bin		1331531						
ANR	1331800	Symbol	DT_REL		1331531						
ANR	1331801	Symbol	bin -> g_sections [ i ] . last		1331531						
ANR	1331802	Function	read_reloc	2622:0:81004:82257							
ANR	1331803	FunctionDef	"read_reloc (ELFOBJ * bin , RBinElfReloc * r , int is_rela , ut64 offset)"		1331802	0					
ANR	1331804	CompoundStatement		2622:78:81082:82257	1331802	0					
ANR	1331805	IfStatement	if ( offset + sizeof ( Elf_ ( Rela ) ) > bin -> size || offset + sizeof ( Elf_ ( Rela ) ) < offset )		1331802	0					
ANR	1331806	Condition	offset + sizeof ( Elf_ ( Rela ) ) > bin -> size || offset + sizeof ( Elf_ ( Rela ) ) < offset	2623:5:81089:81170	1331802	0	True				
ANR	1331807	OrExpression	offset + sizeof ( Elf_ ( Rela ) ) > bin -> size || offset + sizeof ( Elf_ ( Rela ) ) < offset		1331802	0		||			
ANR	1331808	RelationalExpression	offset + sizeof ( Elf_ ( Rela ) ) > bin -> size		1331802	0		>			
ANR	1331809	AdditiveExpression	offset + sizeof ( Elf_ ( Rela ) )		1331802	0		+			
ANR	1331810	Identifier	offset		1331802	0					
ANR	1331811	SizeofExpression	sizeof ( Elf_ ( Rela ) )		1331802	1					
ANR	1331812	Sizeof	sizeof		1331802	0					
ANR	1331813	CallExpression	Elf_ ( Rela )		1331802	1					
ANR	1331814	Callee	Elf_		1331802	0					
ANR	1331815	Identifier	Elf_		1331802	0					
ANR	1331816	ArgumentList	Rela		1331802	1					
ANR	1331817	Argument	Rela		1331802	0					
ANR	1331818	Identifier	Rela		1331802	0					
ANR	1331819	PtrMemberAccess	bin -> size		1331802	1					
ANR	1331820	Identifier	bin		1331802	0					
ANR	1331821	Identifier	size		1331802	1					
ANR	1331822	RelationalExpression	offset + sizeof ( Elf_ ( Rela ) ) < offset		1331802	1		<			
ANR	1331823	AdditiveExpression	offset + sizeof ( Elf_ ( Rela ) )		1331802	0		+			
ANR	1331824	Identifier	offset		1331802	0					
ANR	1331825	SizeofExpression	sizeof ( Elf_ ( Rela ) )		1331802	1					
ANR	1331826	Sizeof	sizeof		1331802	0					
ANR	1331827	CallExpression	Elf_ ( Rela )		1331802	1					
ANR	1331828	Callee	Elf_		1331802	0					
ANR	1331829	Identifier	Elf_		1331802	0					
ANR	1331830	ArgumentList	Rela		1331802	1					
ANR	1331831	Argument	Rela		1331802	0					
ANR	1331832	Identifier	Rela		1331802	0					
ANR	1331833	Identifier	offset		1331802	1					
ANR	1331834	CompoundStatement		2:89:90:90	1331802	1					
ANR	1331835	ReturnStatement	return - 1 ;	2624:2:81177:81186	1331802	0	True				
ANR	1331836	UnaryOperationExpression	- 1		1331802	0					
ANR	1331837	UnaryOperator	-		1331802	0					
ANR	1331838	PrimaryExpression	1		1331802	1					
ANR	1331839	IdentifierDeclStatement	ut8 buf [ sizeof ( Elf_ ( Rela ) ) ] = { 0 } ;	2626:1:81192:81226	1331802	1	True				
ANR	1331840	IdentifierDecl	buf [ sizeof ( Elf_ ( Rela ) ) ] = { 0 }		1331802	0					
ANR	1331841	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Rela ) ) ]		1331802	0					
ANR	1331842	Identifier	buf		1331802	1					
ANR	1331843	SizeofExpression	sizeof ( Elf_ ( Rela ) )		1331802	2					
ANR	1331844	Sizeof	sizeof		1331802	0					
ANR	1331845	CallExpression	Elf_ ( Rela )		1331802	1					
ANR	1331846	Callee	Elf_		1331802	0					
ANR	1331847	Identifier	Elf_		1331802	0					
ANR	1331848	ArgumentList	Rela		1331802	1					
ANR	1331849	Argument	Rela		1331802	0					
ANR	1331850	Identifier	Rela		1331802	0					
ANR	1331851	AssignmentExpression	buf [ sizeof ( Elf_ ( Rela ) ) ] = { 0 }		1331802	3		=			
ANR	1331852	Identifier	buf		1331802	0					
ANR	1331853	InitializerList	0		1331802	1					
ANR	1331854	PrimaryExpression	0		1331802	0					
ANR	1331855	IdentifierDeclStatement	"int res = r_buf_read_at ( bin -> b , offset , buf , sizeof ( Elf_ ( Rela ) ) ) ;"	2627:1:81229:81295	1331802	2	True				
ANR	1331856	IdentifierDecl	"res = r_buf_read_at ( bin -> b , offset , buf , sizeof ( Elf_ ( Rela ) ) )"		1331802	0					
ANR	1331857	IdentifierDeclType	int		1331802	0					
ANR	1331858	Identifier	res		1331802	1					
ANR	1331859	AssignmentExpression	"res = r_buf_read_at ( bin -> b , offset , buf , sizeof ( Elf_ ( Rela ) ) )"		1331802	2		=			
ANR	1331860	Identifier	res		1331802	0					
ANR	1331861	CallExpression	"r_buf_read_at ( bin -> b , offset , buf , sizeof ( Elf_ ( Rela ) ) )"		1331802	1					
ANR	1331862	Callee	r_buf_read_at		1331802	0					
ANR	1331863	Identifier	r_buf_read_at		1331802	0					
ANR	1331864	ArgumentList	bin -> b		1331802	1					
ANR	1331865	Argument	bin -> b		1331802	0					
ANR	1331866	PtrMemberAccess	bin -> b		1331802	0					
ANR	1331867	Identifier	bin		1331802	0					
ANR	1331868	Identifier	b		1331802	1					
ANR	1331869	Argument	offset		1331802	1					
ANR	1331870	Identifier	offset		1331802	0					
ANR	1331871	Argument	buf		1331802	2					
ANR	1331872	Identifier	buf		1331802	0					
ANR	1331873	Argument	sizeof ( Elf_ ( Rela ) )		1331802	3					
ANR	1331874	SizeofExpression	sizeof ( Elf_ ( Rela ) )		1331802	0					
ANR	1331875	Sizeof	sizeof		1331802	0					
ANR	1331876	CallExpression	Elf_ ( Rela )		1331802	1					
ANR	1331877	Callee	Elf_		1331802	0					
ANR	1331878	Identifier	Elf_		1331802	0					
ANR	1331879	ArgumentList	Rela		1331802	1					
ANR	1331880	Argument	Rela		1331802	0					
ANR	1331881	Identifier	Rela		1331802	0					
ANR	1331882	IfStatement	if ( res != sizeof ( Elf_ ( Rela ) ) )		1331802	3					
ANR	1331883	Condition	res != sizeof ( Elf_ ( Rela ) )	2628:5:81302:81327	1331802	0	True				
ANR	1331884	EqualityExpression	res != sizeof ( Elf_ ( Rela ) )		1331802	0		!=			
ANR	1331885	Identifier	res		1331802	0					
ANR	1331886	SizeofExpression	sizeof ( Elf_ ( Rela ) )		1331802	1					
ANR	1331887	Sizeof	sizeof		1331802	0					
ANR	1331888	CallExpression	Elf_ ( Rela )		1331802	1					
ANR	1331889	Callee	Elf_		1331802	0					
ANR	1331890	Identifier	Elf_		1331802	0					
ANR	1331891	ArgumentList	Rela		1331802	1					
ANR	1331892	Argument	Rela		1331802	0					
ANR	1331893	Identifier	Rela		1331802	0					
ANR	1331894	CompoundStatement		7:33:247:247	1331802	1					
ANR	1331895	ReturnStatement	return - 1 ;	2629:2:81334:81343	1331802	0	True				
ANR	1331896	UnaryOperationExpression	- 1		1331802	0					
ANR	1331897	UnaryOperator	-		1331802	0					
ANR	1331898	PrimaryExpression	1		1331802	1					
ANR	1331899	IdentifierDeclStatement	size_t i = 0 ;	2632:1:81402:81414	1331802	4	True				
ANR	1331900	IdentifierDecl	i = 0		1331802	0					
ANR	1331901	IdentifierDeclType	size_t		1331802	0					
ANR	1331902	Identifier	i		1331802	1					
ANR	1331903	AssignmentExpression	i = 0		1331802	2		=			
ANR	1331904	Identifier	i		1331802	0					
ANR	1331905	PrimaryExpression	0		1331802	1					
ANR	1331906	IfStatement	if ( is_rela == DT_RELA )		1331802	5					
ANR	1331907	Condition	is_rela == DT_RELA	2633:5:81421:81438	1331802	0	True				
ANR	1331908	EqualityExpression	is_rela == DT_RELA		1331802	0		==			
ANR	1331909	Identifier	is_rela		1331802	0					
ANR	1331910	Identifier	DT_RELA		1331802	1					
ANR	1331911	CompoundStatement		12:25:358:358	1331802	1					
ANR	1331912	Statement	Elf_	2634:2:81445:81448	1331802	0	True				
ANR	1331913	ExpressionStatement	( Rela ) rela	2634:6:81449:81460	1331802	1	True				
ANR	1331914	CastExpression	( Rela ) rela		1331802	0					
ANR	1331915	CastTarget	Rela		1331802	0					
ANR	1331916	Identifier	rela		1331802	1					
ANR	1331917	ExpressionStatement	"rela . r_offset = READ64 ( buf , i )"	2636:2:81480:81511	1331802	2	True				
ANR	1331918	AssignmentExpression	"rela . r_offset = READ64 ( buf , i )"		1331802	0		=			
ANR	1331919	MemberAccess	rela . r_offset		1331802	0					
ANR	1331920	Identifier	rela		1331802	0					
ANR	1331921	Identifier	r_offset		1331802	1					
ANR	1331922	CallExpression	"READ64 ( buf , i )"		1331802	1					
ANR	1331923	Callee	READ64		1331802	0					
ANR	1331924	Identifier	READ64		1331802	0					
ANR	1331925	ArgumentList	buf		1331802	1					
ANR	1331926	Argument	buf		1331802	0					
ANR	1331927	Identifier	buf		1331802	0					
ANR	1331928	Argument	i		1331802	1					
ANR	1331929	Identifier	i		1331802	0					
ANR	1331930	ExpressionStatement	"rela . r_info = READ64 ( buf , i )"	2637:2:81515:81544	1331802	3	True				
ANR	1331931	AssignmentExpression	"rela . r_info = READ64 ( buf , i )"		1331802	0		=			
ANR	1331932	MemberAccess	rela . r_info		1331802	0					
ANR	1331933	Identifier	rela		1331802	0					
ANR	1331934	Identifier	r_info		1331802	1					
ANR	1331935	CallExpression	"READ64 ( buf , i )"		1331802	1					
ANR	1331936	Callee	READ64		1331802	0					
ANR	1331937	Identifier	READ64		1331802	0					
ANR	1331938	ArgumentList	buf		1331802	1					
ANR	1331939	Argument	buf		1331802	0					
ANR	1331940	Identifier	buf		1331802	0					
ANR	1331941	Argument	i		1331802	1					
ANR	1331942	Identifier	i		1331802	0					
ANR	1331943	ExpressionStatement	"rela . r_addend = READ64 ( buf , i )"	2638:2:81548:81579	1331802	4	True				
ANR	1331944	AssignmentExpression	"rela . r_addend = READ64 ( buf , i )"		1331802	0		=			
ANR	1331945	MemberAccess	rela . r_addend		1331802	0					
ANR	1331946	Identifier	rela		1331802	0					
ANR	1331947	Identifier	r_addend		1331802	1					
ANR	1331948	CallExpression	"READ64 ( buf , i )"		1331802	1					
ANR	1331949	Callee	READ64		1331802	0					
ANR	1331950	Identifier	READ64		1331802	0					
ANR	1331951	ArgumentList	buf		1331802	1					
ANR	1331952	Argument	buf		1331802	0					
ANR	1331953	Identifier	buf		1331802	0					
ANR	1331954	Argument	i		1331802	1					
ANR	1331955	Identifier	i		1331802	0					
ANR	1331956	ExpressionStatement	r -> is_rela = is_rela	2644:2:81699:81719	1331802	5	True				
ANR	1331957	AssignmentExpression	r -> is_rela = is_rela		1331802	0		=			
ANR	1331958	PtrMemberAccess	r -> is_rela		1331802	0					
ANR	1331959	Identifier	r		1331802	0					
ANR	1331960	Identifier	is_rela		1331802	1					
ANR	1331961	Identifier	is_rela		1331802	1					
ANR	1331962	ExpressionStatement	r -> offset = rela . r_offset	2645:2:81723:81748	1331802	6	True				
ANR	1331963	AssignmentExpression	r -> offset = rela . r_offset		1331802	0		=			
ANR	1331964	PtrMemberAccess	r -> offset		1331802	0					
ANR	1331965	Identifier	r		1331802	0					
ANR	1331966	Identifier	offset		1331802	1					
ANR	1331967	MemberAccess	rela . r_offset		1331802	1					
ANR	1331968	Identifier	rela		1331802	0					
ANR	1331969	Identifier	r_offset		1331802	1					
ANR	1331970	ExpressionStatement	r -> type = ELF_R_TYPE ( rela . r_info )	2646:2:81752:81786	1331802	7	True				
ANR	1331971	AssignmentExpression	r -> type = ELF_R_TYPE ( rela . r_info )		1331802	0		=			
ANR	1331972	PtrMemberAccess	r -> type		1331802	0					
ANR	1331973	Identifier	r		1331802	0					
ANR	1331974	Identifier	type		1331802	1					
ANR	1331975	CallExpression	ELF_R_TYPE ( rela . r_info )		1331802	1					
ANR	1331976	Callee	ELF_R_TYPE		1331802	0					
ANR	1331977	Identifier	ELF_R_TYPE		1331802	0					
ANR	1331978	ArgumentList	rela . r_info		1331802	1					
ANR	1331979	Argument	rela . r_info		1331802	0					
ANR	1331980	MemberAccess	rela . r_info		1331802	0					
ANR	1331981	Identifier	rela		1331802	0					
ANR	1331982	Identifier	r_info		1331802	1					
ANR	1331983	ExpressionStatement	r -> sym = ELF_R_SYM ( rela . r_info )	2647:2:81790:81822	1331802	8	True				
ANR	1331984	AssignmentExpression	r -> sym = ELF_R_SYM ( rela . r_info )		1331802	0		=			
ANR	1331985	PtrMemberAccess	r -> sym		1331802	0					
ANR	1331986	Identifier	r		1331802	0					
ANR	1331987	Identifier	sym		1331802	1					
ANR	1331988	CallExpression	ELF_R_SYM ( rela . r_info )		1331802	1					
ANR	1331989	Callee	ELF_R_SYM		1331802	0					
ANR	1331990	Identifier	ELF_R_SYM		1331802	0					
ANR	1331991	ArgumentList	rela . r_info		1331802	1					
ANR	1331992	Argument	rela . r_info		1331802	0					
ANR	1331993	MemberAccess	rela . r_info		1331802	0					
ANR	1331994	Identifier	rela		1331802	0					
ANR	1331995	Identifier	r_info		1331802	1					
ANR	1331996	ExpressionStatement	r -> last = 0	2648:2:81826:81837	1331802	9	True				
ANR	1331997	AssignmentExpression	r -> last = 0		1331802	0		=			
ANR	1331998	PtrMemberAccess	r -> last		1331802	0					
ANR	1331999	Identifier	r		1331802	0					
ANR	1332000	Identifier	last		1331802	1					
ANR	1332001	PrimaryExpression	0		1331802	1					
ANR	1332002	ExpressionStatement	r -> addend = rela . r_addend	2649:2:81841:81866	1331802	10	True				
ANR	1332003	AssignmentExpression	r -> addend = rela . r_addend		1331802	0		=			
ANR	1332004	PtrMemberAccess	r -> addend		1331802	0					
ANR	1332005	Identifier	r		1331802	0					
ANR	1332006	Identifier	addend		1331802	1					
ANR	1332007	MemberAccess	rela . r_addend		1331802	1					
ANR	1332008	Identifier	rela		1331802	0					
ANR	1332009	Identifier	r_addend		1331802	1					
ANR	1332010	ReturnStatement	return sizeof ( Elf_ ( Rela ) ) ;	2650:2:81870:81896	1331802	11	True				
ANR	1332011	SizeofExpression	sizeof ( Elf_ ( Rela ) )		1331802	0					
ANR	1332012	Sizeof	sizeof		1331802	0					
ANR	1332013	CallExpression	Elf_ ( Rela )		1331802	1					
ANR	1332014	Callee	Elf_		1331802	0					
ANR	1332015	Identifier	Elf_		1331802	0					
ANR	1332016	ArgumentList	Rela		1331802	1					
ANR	1332017	Argument	Rela		1331802	0					
ANR	1332018	Identifier	Rela		1331802	0					
ANR	1332019	ElseStatement	else		1331802	0					
ANR	1332020	CompoundStatement		30:8:823:823	1331802	0					
ANR	1332021	Statement	Elf_	2652:2:81910:81913	1331802	0	True				
ANR	1332022	ExpressionStatement	( Rel ) rel	2652:6:81914:81923	1331802	1	True				
ANR	1332023	CastExpression	( Rel ) rel		1331802	0					
ANR	1332024	CastTarget	Rel		1331802	0					
ANR	1332025	Identifier	rel		1331802	1					
ANR	1332026	ExpressionStatement	"rel . r_offset = READ64 ( buf , i )"	2654:2:81943:81973	1331802	2	True				
ANR	1332027	AssignmentExpression	"rel . r_offset = READ64 ( buf , i )"		1331802	0		=			
ANR	1332028	MemberAccess	rel . r_offset		1331802	0					
ANR	1332029	Identifier	rel		1331802	0					
ANR	1332030	Identifier	r_offset		1331802	1					
ANR	1332031	CallExpression	"READ64 ( buf , i )"		1331802	1					
ANR	1332032	Callee	READ64		1331802	0					
ANR	1332033	Identifier	READ64		1331802	0					
ANR	1332034	ArgumentList	buf		1331802	1					
ANR	1332035	Argument	buf		1331802	0					
ANR	1332036	Identifier	buf		1331802	0					
ANR	1332037	Argument	i		1331802	1					
ANR	1332038	Identifier	i		1331802	0					
ANR	1332039	ExpressionStatement	"rel . r_info = READ64 ( buf , i )"	2655:2:81977:82005	1331802	3	True				
ANR	1332040	AssignmentExpression	"rel . r_info = READ64 ( buf , i )"		1331802	0		=			
ANR	1332041	MemberAccess	rel . r_info		1331802	0					
ANR	1332042	Identifier	rel		1331802	0					
ANR	1332043	Identifier	r_info		1331802	1					
ANR	1332044	CallExpression	"READ64 ( buf , i )"		1331802	1					
ANR	1332045	Callee	READ64		1331802	0					
ANR	1332046	Identifier	READ64		1331802	0					
ANR	1332047	ArgumentList	buf		1331802	1					
ANR	1332048	Argument	buf		1331802	0					
ANR	1332049	Identifier	buf		1331802	0					
ANR	1332050	Argument	i		1331802	1					
ANR	1332051	Identifier	i		1331802	0					
ANR	1332052	ExpressionStatement	r -> is_rela = is_rela	2660:2:82088:82108	1331802	4	True				
ANR	1332053	AssignmentExpression	r -> is_rela = is_rela		1331802	0		=			
ANR	1332054	PtrMemberAccess	r -> is_rela		1331802	0					
ANR	1332055	Identifier	r		1331802	0					
ANR	1332056	Identifier	is_rela		1331802	1					
ANR	1332057	Identifier	is_rela		1331802	1					
ANR	1332058	ExpressionStatement	r -> offset = rel . r_offset	2661:2:82112:82136	1331802	5	True				
ANR	1332059	AssignmentExpression	r -> offset = rel . r_offset		1331802	0		=			
ANR	1332060	PtrMemberAccess	r -> offset		1331802	0					
ANR	1332061	Identifier	r		1331802	0					
ANR	1332062	Identifier	offset		1331802	1					
ANR	1332063	MemberAccess	rel . r_offset		1331802	1					
ANR	1332064	Identifier	rel		1331802	0					
ANR	1332065	Identifier	r_offset		1331802	1					
ANR	1332066	ExpressionStatement	r -> type = ELF_R_TYPE ( rel . r_info )	2662:2:82140:82173	1331802	6	True				
ANR	1332067	AssignmentExpression	r -> type = ELF_R_TYPE ( rel . r_info )		1331802	0		=			
ANR	1332068	PtrMemberAccess	r -> type		1331802	0					
ANR	1332069	Identifier	r		1331802	0					
ANR	1332070	Identifier	type		1331802	1					
ANR	1332071	CallExpression	ELF_R_TYPE ( rel . r_info )		1331802	1					
ANR	1332072	Callee	ELF_R_TYPE		1331802	0					
ANR	1332073	Identifier	ELF_R_TYPE		1331802	0					
ANR	1332074	ArgumentList	rel . r_info		1331802	1					
ANR	1332075	Argument	rel . r_info		1331802	0					
ANR	1332076	MemberAccess	rel . r_info		1331802	0					
ANR	1332077	Identifier	rel		1331802	0					
ANR	1332078	Identifier	r_info		1331802	1					
ANR	1332079	ExpressionStatement	r -> sym = ELF_R_SYM ( rel . r_info )	2663:2:82177:82208	1331802	7	True				
ANR	1332080	AssignmentExpression	r -> sym = ELF_R_SYM ( rel . r_info )		1331802	0		=			
ANR	1332081	PtrMemberAccess	r -> sym		1331802	0					
ANR	1332082	Identifier	r		1331802	0					
ANR	1332083	Identifier	sym		1331802	1					
ANR	1332084	CallExpression	ELF_R_SYM ( rel . r_info )		1331802	1					
ANR	1332085	Callee	ELF_R_SYM		1331802	0					
ANR	1332086	Identifier	ELF_R_SYM		1331802	0					
ANR	1332087	ArgumentList	rel . r_info		1331802	1					
ANR	1332088	Argument	rel . r_info		1331802	0					
ANR	1332089	MemberAccess	rel . r_info		1331802	0					
ANR	1332090	Identifier	rel		1331802	0					
ANR	1332091	Identifier	r_info		1331802	1					
ANR	1332092	ExpressionStatement	r -> last = 0	2664:2:82212:82223	1331802	8	True				
ANR	1332093	AssignmentExpression	r -> last = 0		1331802	0		=			
ANR	1332094	PtrMemberAccess	r -> last		1331802	0					
ANR	1332095	Identifier	r		1331802	0					
ANR	1332096	Identifier	last		1331802	1					
ANR	1332097	PrimaryExpression	0		1331802	1					
ANR	1332098	ReturnStatement	return sizeof ( Elf_ ( Rel ) ) ;	2665:2:82227:82252	1331802	9	True				
ANR	1332099	SizeofExpression	sizeof ( Elf_ ( Rel ) )		1331802	0					
ANR	1332100	Sizeof	sizeof		1331802	0					
ANR	1332101	CallExpression	Elf_ ( Rel )		1331802	1					
ANR	1332102	Callee	Elf_		1331802	0					
ANR	1332103	Identifier	Elf_		1331802	0					
ANR	1332104	ArgumentList	Rel		1331802	1					
ANR	1332105	Argument	Rel		1331802	0					
ANR	1332106	Identifier	Rel		1331802	0					
ANR	1332107	ReturnType	static int		1331802	1					
ANR	1332108	Identifier	read_reloc		1331802	2					
ANR	1332109	ParameterList	"ELFOBJ * bin , RBinElfReloc * r , int is_rela , ut64 offset"		1331802	3					
ANR	1332110	Parameter	ELFOBJ * bin	2622:22:81026:81036	1331802	0	True				
ANR	1332111	ParameterType	ELFOBJ *		1331802	0					
ANR	1332112	Identifier	bin		1331802	1					
ANR	1332113	Parameter	RBinElfReloc * r	2622:35:81039:81053	1331802	1	True				
ANR	1332114	ParameterType	RBinElfReloc *		1331802	0					
ANR	1332115	Identifier	r		1331802	1					
ANR	1332116	Parameter	int is_rela	2622:52:81056:81066	1331802	2	True				
ANR	1332117	ParameterType	int		1331802	0					
ANR	1332118	Identifier	is_rela		1331802	1					
ANR	1332119	Parameter	ut64 offset	2622:65:81069:81079	1331802	3	True				
ANR	1332120	ParameterType	ut64		1331802	0					
ANR	1332121	Identifier	offset		1331802	1					
ANR	1332122	CFGEntryNode	ENTRY		1331802		True				
ANR	1332123	CFGExitNode	EXIT		1331802		True				
ANR	1332124	Symbol	bin -> size		1331802						
ANR	1332125	Symbol	bin -> b		1331802						
ANR	1332126	Symbol	bin		1331802						
ANR	1332127	Symbol	is_rela		1331802						
ANR	1332128	Symbol	r -> type		1331802						
ANR	1332129	Symbol	READ64		1331802						
ANR	1332130	Symbol	* bin		1331802						
ANR	1332131	Symbol	r -> sym		1331802						
ANR	1332132	Symbol	rel		1331802						
ANR	1332133	Symbol	rela		1331802						
ANR	1332134	Symbol	Elf_		1331802						
ANR	1332135	Symbol	r -> offset		1331802						
ANR	1332136	Symbol	res		1331802						
ANR	1332137	Symbol	offset		1331802						
ANR	1332138	Symbol	rel . r_info		1331802						
ANR	1332139	Symbol	DT_RELA		1331802						
ANR	1332140	Symbol	r -> addend		1331802						
ANR	1332141	Symbol	i		1331802						
ANR	1332142	Symbol	ELF_R_TYPE		1331802						
ANR	1332143	Symbol	Rela		1331802						
ANR	1332144	Symbol	r -> last		1331802						
ANR	1332145	Symbol	ELF_R_SYM		1331802						
ANR	1332146	Symbol	r		1331802						
ANR	1332147	Symbol	buf		1331802						
ANR	1332148	Symbol	rel . r_offset		1331802						
ANR	1332149	Symbol	r -> is_rela		1331802						
ANR	1332150	Symbol	r_buf_read_at		1331802						
ANR	1332151	Symbol	Rel		1331802						
ANR	1332152	Symbol	rela . r_offset		1331802						
ANR	1332153	Symbol	rela . r_info		1331802						
ANR	1332154	Symbol	* r		1331802						
ANR	1332155	Symbol	rela . r_addend		1331802						
ANR	1332156	Function	r_bin_elf_get_relocs	2669:14:82274:84125							
ANR	1332157	FunctionDef	r_bin_elf_get_relocs (ELFOBJ * bin)		1332156	0					
ANR	1332158	CompoundStatement		2669:54:82314:84125	1332156	0					
ANR	1332159	IdentifierDeclStatement	"int res , rel , rela , i , j ;"	2670:1:82317:82341	1332156	0	True				
ANR	1332160	IdentifierDecl	res		1332156	0					
ANR	1332161	IdentifierDeclType	int		1332156	0					
ANR	1332162	Identifier	res		1332156	1					
ANR	1332163	IdentifierDecl	rel		1332156	1					
ANR	1332164	IdentifierDeclType	int		1332156	0					
ANR	1332165	Identifier	rel		1332156	1					
ANR	1332166	IdentifierDecl	rela		1332156	2					
ANR	1332167	IdentifierDeclType	int		1332156	0					
ANR	1332168	Identifier	rela		1332156	1					
ANR	1332169	IdentifierDecl	i		1332156	3					
ANR	1332170	IdentifierDeclType	int		1332156	0					
ANR	1332171	Identifier	i		1332156	1					
ANR	1332172	IdentifierDecl	j		1332156	4					
ANR	1332173	IdentifierDeclType	int		1332156	0					
ANR	1332174	Identifier	j		1332156	1					
ANR	1332175	IdentifierDeclStatement	RBinElfReloc * ret = NULL ;	2671:1:82344:82368	1332156	1	True				
ANR	1332176	IdentifierDecl	* ret = NULL		1332156	0					
ANR	1332177	IdentifierDeclType	RBinElfReloc *		1332156	0					
ANR	1332178	Identifier	ret		1332156	1					
ANR	1332179	AssignmentExpression	* ret = NULL		1332156	2		=			
ANR	1332180	Identifier	NULL		1332156	0					
ANR	1332181	Identifier	NULL		1332156	1					
ANR	1332182	IfStatement	if ( ! bin || ! bin -> g_sections )		1332156	2					
ANR	1332183	Condition	! bin || ! bin -> g_sections	2673:5:82376:82399	1332156	0	True				
ANR	1332184	OrExpression	! bin || ! bin -> g_sections		1332156	0		||			
ANR	1332185	UnaryOperationExpression	! bin		1332156	0					
ANR	1332186	UnaryOperator	!		1332156	0					
ANR	1332187	Identifier	bin		1332156	1					
ANR	1332188	UnaryOperationExpression	! bin -> g_sections		1332156	1					
ANR	1332189	UnaryOperator	!		1332156	0					
ANR	1332190	PtrMemberAccess	bin -> g_sections		1332156	1					
ANR	1332191	Identifier	bin		1332156	0					
ANR	1332192	Identifier	g_sections		1332156	1					
ANR	1332193	CompoundStatement		5:31:87:87	1332156	1					
ANR	1332194	ReturnStatement	return NULL ;	2674:2:82406:82417	1332156	0	True				
ANR	1332195	Identifier	NULL		1332156	0					
ANR	1332196	IdentifierDeclStatement	size_t reloc_num = get_relocs_num ( bin ) ;	2676:1:82423:82462	1332156	3	True				
ANR	1332197	IdentifierDecl	reloc_num = get_relocs_num ( bin )		1332156	0					
ANR	1332198	IdentifierDeclType	size_t		1332156	0					
ANR	1332199	Identifier	reloc_num		1332156	1					
ANR	1332200	AssignmentExpression	reloc_num = get_relocs_num ( bin )		1332156	2		=			
ANR	1332201	Identifier	reloc_num		1332156	0					
ANR	1332202	CallExpression	get_relocs_num ( bin )		1332156	1					
ANR	1332203	Callee	get_relocs_num		1332156	0					
ANR	1332204	Identifier	get_relocs_num		1332156	0					
ANR	1332205	ArgumentList	bin		1332156	1					
ANR	1332206	Argument	bin		1332156	0					
ANR	1332207	Identifier	bin		1332156	0					
ANR	1332208	IfStatement	if ( ! reloc_num )		1332156	4					
ANR	1332209	Condition	! reloc_num	2677:5:82469:82478	1332156	0	True				
ANR	1332210	UnaryOperationExpression	! reloc_num		1332156	0					
ANR	1332211	UnaryOperator	!		1332156	0					
ANR	1332212	Identifier	reloc_num		1332156	1					
ANR	1332213	CompoundStatement		9:17:166:166	1332156	1					
ANR	1332214	ReturnStatement	return NULL ;	2678:2:82485:82496	1332156	0	True				
ANR	1332215	Identifier	NULL		1332156	0					
ANR	1332216	ExpressionStatement	bin -> reloc_num = reloc_num	2680:1:82502:82528	1332156	5	True				
ANR	1332217	AssignmentExpression	bin -> reloc_num = reloc_num		1332156	0		=			
ANR	1332218	PtrMemberAccess	bin -> reloc_num		1332156	0					
ANR	1332219	Identifier	bin		1332156	0					
ANR	1332220	Identifier	reloc_num		1332156	1					
ANR	1332221	Identifier	reloc_num		1332156	1					
ANR	1332222	ExpressionStatement	"ret = ( RBinElfReloc * ) calloc ( ( size_t ) reloc_num + 1 , sizeof ( RBinElfReloc ) )"	2681:1:82531:82605	1332156	6	True				
ANR	1332223	AssignmentExpression	"ret = ( RBinElfReloc * ) calloc ( ( size_t ) reloc_num + 1 , sizeof ( RBinElfReloc ) )"		1332156	0		=			
ANR	1332224	Identifier	ret		1332156	0					
ANR	1332225	CastExpression	"( RBinElfReloc * ) calloc ( ( size_t ) reloc_num + 1 , sizeof ( RBinElfReloc ) )"		1332156	1					
ANR	1332226	CastTarget	RBinElfReloc *		1332156	0					
ANR	1332227	CallExpression	"calloc ( ( size_t ) reloc_num + 1 , sizeof ( RBinElfReloc ) )"		1332156	1					
ANR	1332228	Callee	calloc		1332156	0					
ANR	1332229	Identifier	calloc		1332156	0					
ANR	1332230	ArgumentList	( size_t ) reloc_num + 1		1332156	1					
ANR	1332231	Argument	( size_t ) reloc_num + 1		1332156	0					
ANR	1332232	AdditiveExpression	( size_t ) reloc_num + 1		1332156	0		+			
ANR	1332233	CastExpression	( size_t ) reloc_num		1332156	0					
ANR	1332234	CastTarget	size_t		1332156	0					
ANR	1332235	Identifier	reloc_num		1332156	1					
ANR	1332236	PrimaryExpression	1		1332156	1					
ANR	1332237	Argument	sizeof ( RBinElfReloc )		1332156	1					
ANR	1332238	SizeofExpression	sizeof ( RBinElfReloc )		1332156	0					
ANR	1332239	Sizeof	sizeof		1332156	0					
ANR	1332240	SizeofOperand	RBinElfReloc		1332156	1					
ANR	1332241	IfStatement	if ( ! ret )		1332156	7					
ANR	1332242	Condition	! ret	2682:5:82612:82615	1332156	0	True				
ANR	1332243	UnaryOperationExpression	! ret		1332156	0					
ANR	1332244	UnaryOperator	!		1332156	0					
ANR	1332245	Identifier	ret		1332156	1					
ANR	1332246	CompoundStatement		14:11:303:303	1332156	1					
ANR	1332247	ReturnStatement	return NULL ;	2683:2:82622:82633	1332156	0	True				
ANR	1332248	Identifier	NULL		1332156	0					
ANR	1332249	ForStatement	"for ( i = 0 , rel = 0 ; ! bin -> g_sections [ i ] . last && rel < reloc_num ; i ++ )"		1332156	8					
ANR	1332250	ForInit	"i = 0 , rel = 0 ;"	2685:6:82644:82658	1332156	0	True				
ANR	1332251	Expression	"i = 0 , rel = 0"		1332156	0					
ANR	1332252	AssignmentExpression	i = 0		1332156	0		=			
ANR	1332253	Identifier	i		1332156	0					
ANR	1332254	PrimaryExpression	0		1332156	1					
ANR	1332255	AssignmentExpression	rel = 0		1332156	1		=			
ANR	1332256	Identifier	rel		1332156	0					
ANR	1332257	PrimaryExpression	0		1332156	1					
ANR	1332258	Condition	! bin -> g_sections [ i ] . last && rel < reloc_num	2685:22:82660:82702	1332156	1	True				
ANR	1332259	AndExpression	! bin -> g_sections [ i ] . last && rel < reloc_num		1332156	0		&&			
ANR	1332260	UnaryOperationExpression	! bin -> g_sections [ i ] . last		1332156	0					
ANR	1332261	UnaryOperator	!		1332156	0					
ANR	1332262	MemberAccess	bin -> g_sections [ i ] . last		1332156	1					
ANR	1332263	ArrayIndexing	bin -> g_sections [ i ]		1332156	0					
ANR	1332264	PtrMemberAccess	bin -> g_sections		1332156	0					
ANR	1332265	Identifier	bin		1332156	0					
ANR	1332266	Identifier	g_sections		1332156	1					
ANR	1332267	Identifier	i		1332156	1					
ANR	1332268	Identifier	last		1332156	1					
ANR	1332269	RelationalExpression	rel < reloc_num		1332156	1		<			
ANR	1332270	Identifier	rel		1332156	0					
ANR	1332271	Identifier	reloc_num		1332156	1					
ANR	1332272	PostIncDecOperationExpression	i ++	2685:68:82706:82708	1332156	2	True				
ANR	1332273	Identifier	i		1332156	0					
ANR	1332274	IncDec	++		1332156	1					
ANR	1332275	CompoundStatement		19:2:486:567	1332156	3					
ANR	1332276	IdentifierDeclStatement	"bool is_rela = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) ) ;"	2686:2:82715:82797	1332156	0	True				
ANR	1332277	IdentifierDecl	"is_rela = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		1332156	0					
ANR	1332278	IdentifierDeclType	bool		1332156	0					
ANR	1332279	Identifier	is_rela		1332156	1					
ANR	1332280	AssignmentExpression	"is_rela = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		1332156	2		=			
ANR	1332281	Identifier	is_rela		1332156	0					
ANR	1332282	EqualityExpression	"0 == strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		1332156	1		==			
ANR	1332283	PrimaryExpression	0		1332156	0					
ANR	1332284	CallExpression	"strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		1332156	1					
ANR	1332285	Callee	strncmp		1332156	0					
ANR	1332286	Identifier	strncmp		1332156	0					
ANR	1332287	ArgumentList	bin -> g_sections [ i ] . name		1332156	1					
ANR	1332288	Argument	bin -> g_sections [ i ] . name		1332156	0					
ANR	1332289	MemberAccess	bin -> g_sections [ i ] . name		1332156	0					
ANR	1332290	ArrayIndexing	bin -> g_sections [ i ]		1332156	0					
ANR	1332291	PtrMemberAccess	bin -> g_sections		1332156	0					
ANR	1332292	Identifier	bin		1332156	0					
ANR	1332293	Identifier	g_sections		1332156	1					
ANR	1332294	Identifier	i		1332156	1					
ANR	1332295	Identifier	name		1332156	1					
ANR	1332296	Argument	""".rela."""		1332156	1					
ANR	1332297	PrimaryExpression	""".rela."""		1332156	0					
ANR	1332298	Argument	"strlen ( "".rela."" )"		1332156	2					
ANR	1332299	CallExpression	"strlen ( "".rela."" )"		1332156	0					
ANR	1332300	Callee	strlen		1332156	0					
ANR	1332301	Identifier	strlen		1332156	0					
ANR	1332302	ArgumentList	""".rela."""		1332156	1					
ANR	1332303	Argument	""".rela."""		1332156	0					
ANR	1332304	PrimaryExpression	""".rela."""		1332156	0					
ANR	1332305	IdentifierDeclStatement	"bool is_rel = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) ) ;"	2687:2:82801:82882	1332156	1	True				
ANR	1332306	IdentifierDecl	"is_rel = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		1332156	0					
ANR	1332307	IdentifierDeclType	bool		1332156	0					
ANR	1332308	Identifier	is_rel		1332156	1					
ANR	1332309	AssignmentExpression	"is_rel = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		1332156	2		=			
ANR	1332310	Identifier	is_rel		1332156	0					
ANR	1332311	EqualityExpression	"0 == strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		1332156	1		==			
ANR	1332312	PrimaryExpression	0		1332156	0					
ANR	1332313	CallExpression	"strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		1332156	1					
ANR	1332314	Callee	strncmp		1332156	0					
ANR	1332315	Identifier	strncmp		1332156	0					
ANR	1332316	ArgumentList	bin -> g_sections [ i ] . name		1332156	1					
ANR	1332317	Argument	bin -> g_sections [ i ] . name		1332156	0					
ANR	1332318	MemberAccess	bin -> g_sections [ i ] . name		1332156	0					
ANR	1332319	ArrayIndexing	bin -> g_sections [ i ]		1332156	0					
ANR	1332320	PtrMemberAccess	bin -> g_sections		1332156	0					
ANR	1332321	Identifier	bin		1332156	0					
ANR	1332322	Identifier	g_sections		1332156	1					
ANR	1332323	Identifier	i		1332156	1					
ANR	1332324	Identifier	name		1332156	1					
ANR	1332325	Argument	""".rel."""		1332156	1					
ANR	1332326	PrimaryExpression	""".rel."""		1332156	0					
ANR	1332327	Argument	"strlen ( "".rel."" )"		1332156	2					
ANR	1332328	CallExpression	"strlen ( "".rel."" )"		1332156	0					
ANR	1332329	Callee	strlen		1332156	0					
ANR	1332330	Identifier	strlen		1332156	0					
ANR	1332331	ArgumentList	""".rel."""		1332156	1					
ANR	1332332	Argument	""".rel."""		1332156	0					
ANR	1332333	PrimaryExpression	""".rel."""		1332156	0					
ANR	1332334	IfStatement	if ( ! is_rela && ! is_rel )		1332156	2					
ANR	1332335	Condition	! is_rela && ! is_rel	2688:6:82890:82908	1332156	0	True				
ANR	1332336	AndExpression	! is_rela && ! is_rel		1332156	0		&&			
ANR	1332337	UnaryOperationExpression	! is_rela		1332156	0					
ANR	1332338	UnaryOperator	!		1332156	0					
ANR	1332339	Identifier	is_rela		1332156	1					
ANR	1332340	UnaryOperationExpression	! is_rel		1332156	1					
ANR	1332341	UnaryOperator	!		1332156	0					
ANR	1332342	Identifier	is_rel		1332156	1					
ANR	1332343	CompoundStatement		20:27:596:596	1332156	1					
ANR	1332344	ContinueStatement	continue ;	2689:3:82916:82924	1332156	0	True				
ANR	1332345	ForStatement	for ( j = 0 ; j < bin -> g_sections [ i ] . size ; j += res )		1332156	3					
ANR	1332346	ForInit	j = 0 ;	2691:7:82937:82942	1332156	0	True				
ANR	1332347	AssignmentExpression	j = 0		1332156	0		=			
ANR	1332348	Identifier	j		1332156	0					
ANR	1332349	PrimaryExpression	0		1332156	1					
ANR	1332350	Condition	j < bin -> g_sections [ i ] . size	2691:14:82944:82970	1332156	1	True				
ANR	1332351	RelationalExpression	j < bin -> g_sections [ i ] . size		1332156	0		<			
ANR	1332352	Identifier	j		1332156	0					
ANR	1332353	MemberAccess	bin -> g_sections [ i ] . size		1332156	1					
ANR	1332354	ArrayIndexing	bin -> g_sections [ i ]		1332156	0					
ANR	1332355	PtrMemberAccess	bin -> g_sections		1332156	0					
ANR	1332356	Identifier	bin		1332156	0					
ANR	1332357	Identifier	g_sections		1332156	1					
ANR	1332358	Identifier	i		1332156	1					
ANR	1332359	Identifier	size		1332156	1					
ANR	1332360	AssignmentExpression	j += res	2691:43:82973:82980	1332156	2	True	+=			
ANR	1332361	Identifier	j		1332156	0					
ANR	1332362	Identifier	res		1332156	1					
ANR	1332363	CompoundStatement		23:53:668:668	1332156	3					
ANR	1332364	IfStatement	if ( bin -> g_sections [ i ] . size > bin -> size )		1332156	0					
ANR	1332365	Condition	bin -> g_sections [ i ] . size > bin -> size	2692:7:82992:83026	1332156	0	True				
ANR	1332366	RelationalExpression	bin -> g_sections [ i ] . size > bin -> size		1332156	0		>			
ANR	1332367	MemberAccess	bin -> g_sections [ i ] . size		1332156	0					
ANR	1332368	ArrayIndexing	bin -> g_sections [ i ]		1332156	0					
ANR	1332369	PtrMemberAccess	bin -> g_sections		1332156	0					
ANR	1332370	Identifier	bin		1332156	0					
ANR	1332371	Identifier	g_sections		1332156	1					
ANR	1332372	Identifier	i		1332156	1					
ANR	1332373	Identifier	size		1332156	1					
ANR	1332374	PtrMemberAccess	bin -> size		1332156	1					
ANR	1332375	Identifier	bin		1332156	0					
ANR	1332376	Identifier	size		1332156	1					
ANR	1332377	CompoundStatement		24:44:714:714	1332156	1					
ANR	1332378	BreakStatement	break ;	2693:4:83035:83040	1332156	0	True				
ANR	1332379	IfStatement	if ( bin -> g_sections [ i ] . offset > bin -> size )		1332156	1					
ANR	1332380	Condition	bin -> g_sections [ i ] . offset > bin -> size	2695:7:83054:83090	1332156	0	True				
ANR	1332381	RelationalExpression	bin -> g_sections [ i ] . offset > bin -> size		1332156	0		>			
ANR	1332382	MemberAccess	bin -> g_sections [ i ] . offset		1332156	0					
ANR	1332383	ArrayIndexing	bin -> g_sections [ i ]		1332156	0					
ANR	1332384	PtrMemberAccess	bin -> g_sections		1332156	0					
ANR	1332385	Identifier	bin		1332156	0					
ANR	1332386	Identifier	g_sections		1332156	1					
ANR	1332387	Identifier	i		1332156	1					
ANR	1332388	Identifier	offset		1332156	1					
ANR	1332389	PtrMemberAccess	bin -> size		1332156	1					
ANR	1332390	Identifier	bin		1332156	0					
ANR	1332391	Identifier	size		1332156	1					
ANR	1332392	CompoundStatement		27:46:778:778	1332156	1					
ANR	1332393	BreakStatement	break ;	2696:4:83099:83104	1332156	0	True				
ANR	1332394	IfStatement	if ( rel >= reloc_num )		1332156	2					
ANR	1332395	Condition	rel >= reloc_num	2698:7:83118:83133	1332156	0	True				
ANR	1332396	RelationalExpression	rel >= reloc_num		1332156	0		>=			
ANR	1332397	Identifier	rel		1332156	0					
ANR	1332398	Identifier	reloc_num		1332156	1					
ANR	1332399	CompoundStatement		30:25:821:821	1332156	1					
ANR	1332400	Statement	bprintf	2699:4:83142:83148	1332156	0	True				
ANR	1332401	Statement	(	2699:12:83150:83150	1332156	1	True				
ANR	1332402	Statement	"""Internal error: ELF relocation buffer too small,"""	2699:13:83151:83200	1332156	2	True				
ANR	1332403	Statement	"""please file a bug report."""	2700:13:83215:83241	1332156	3	True				
ANR	1332404	Statement	)	2700:40:83242:83242	1332156	4	True				
ANR	1332405	ExpressionStatement		2700:41:83243:83243	1332156	5	True				
ANR	1332406	BreakStatement	break ;	2701:4:83249:83254	1332156	6	True				
ANR	1332407	IfStatement	if ( ! bin -> is_rela )		1332156	3					
ANR	1332408	Condition	! bin -> is_rela	2703:7:83268:83280	1332156	0	True				
ANR	1332409	UnaryOperationExpression	! bin -> is_rela		1332156	0					
ANR	1332410	UnaryOperator	!		1332156	0					
ANR	1332411	PtrMemberAccess	bin -> is_rela		1332156	1					
ANR	1332412	Identifier	bin		1332156	0					
ANR	1332413	Identifier	is_rela		1332156	1					
ANR	1332414	CompoundStatement		35:22:968:968	1332156	1					
ANR	1332415	ExpressionStatement	rela = is_rela ? DT_RELA : DT_REL	2704:4:83289:83321	1332156	0	True				
ANR	1332416	AssignmentExpression	rela = is_rela ? DT_RELA : DT_REL		1332156	0		=			
ANR	1332417	Identifier	rela		1332156	0					
ANR	1332418	ConditionalExpression	is_rela ? DT_RELA : DT_REL		1332156	1					
ANR	1332419	Condition	is_rela		1332156	0					
ANR	1332420	Identifier	is_rela		1332156	0					
ANR	1332421	Identifier	DT_RELA		1332156	1					
ANR	1332422	Identifier	DT_REL		1332156	2					
ANR	1332423	ElseStatement	else		1332156	0					
ANR	1332424	CompoundStatement		37:10:1018:1018	1332156	0					
ANR	1332425	ExpressionStatement	rela = bin -> is_rela	2706:4:83339:83358	1332156	0	True				
ANR	1332426	AssignmentExpression	rela = bin -> is_rela		1332156	0		=			
ANR	1332427	Identifier	rela		1332156	0					
ANR	1332428	PtrMemberAccess	bin -> is_rela		1332156	1					
ANR	1332429	Identifier	bin		1332156	0					
ANR	1332430	Identifier	is_rela		1332156	1					
ANR	1332431	ExpressionStatement	"res = read_reloc ( bin , & ret [ rel ] , rela , bin -> g_sections [ i ] . offset + j )"	2708:3:83368:83438	1332156	4	True				
ANR	1332432	AssignmentExpression	"res = read_reloc ( bin , & ret [ rel ] , rela , bin -> g_sections [ i ] . offset + j )"		1332156	0		=			
ANR	1332433	Identifier	res		1332156	0					
ANR	1332434	CallExpression	"read_reloc ( bin , & ret [ rel ] , rela , bin -> g_sections [ i ] . offset + j )"		1332156	1					
ANR	1332435	Callee	read_reloc		1332156	0					
ANR	1332436	Identifier	read_reloc		1332156	0					
ANR	1332437	ArgumentList	bin		1332156	1					
ANR	1332438	Argument	bin		1332156	0					
ANR	1332439	Identifier	bin		1332156	0					
ANR	1332440	Argument	& ret [ rel ]		1332156	1					
ANR	1332441	UnaryOperationExpression	& ret [ rel ]		1332156	0					
ANR	1332442	UnaryOperator	&		1332156	0					
ANR	1332443	ArrayIndexing	ret [ rel ]		1332156	1					
ANR	1332444	Identifier	ret		1332156	0					
ANR	1332445	Identifier	rel		1332156	1					
ANR	1332446	Argument	rela		1332156	2					
ANR	1332447	Identifier	rela		1332156	0					
ANR	1332448	Argument	bin -> g_sections [ i ] . offset + j		1332156	3					
ANR	1332449	AdditiveExpression	bin -> g_sections [ i ] . offset + j		1332156	0		+			
ANR	1332450	MemberAccess	bin -> g_sections [ i ] . offset		1332156	0					
ANR	1332451	ArrayIndexing	bin -> g_sections [ i ]		1332156	0					
ANR	1332452	PtrMemberAccess	bin -> g_sections		1332156	0					
ANR	1332453	Identifier	bin		1332156	0					
ANR	1332454	Identifier	g_sections		1332156	1					
ANR	1332455	Identifier	i		1332156	1					
ANR	1332456	Identifier	offset		1332156	1					
ANR	1332457	Identifier	j		1332156	1					
ANR	1332458	IfStatement	if ( j + res > bin -> g_sections [ i ] . size )		1332156	5					
ANR	1332459	Condition	j + res > bin -> g_sections [ i ] . size	2709:7:83447:83479	1332156	0	True				
ANR	1332460	RelationalExpression	j + res > bin -> g_sections [ i ] . size		1332156	0		>			
ANR	1332461	AdditiveExpression	j + res		1332156	0		+			
ANR	1332462	Identifier	j		1332156	0					
ANR	1332463	Identifier	res		1332156	1					
ANR	1332464	MemberAccess	bin -> g_sections [ i ] . size		1332156	1					
ANR	1332465	ArrayIndexing	bin -> g_sections [ i ]		1332156	0					
ANR	1332466	PtrMemberAccess	bin -> g_sections		1332156	0					
ANR	1332467	Identifier	bin		1332156	0					
ANR	1332468	Identifier	g_sections		1332156	1					
ANR	1332469	Identifier	i		1332156	1					
ANR	1332470	Identifier	size		1332156	1					
ANR	1332471	CompoundStatement		41:42:1167:1167	1332156	1					
ANR	1332472	ExpressionStatement	"bprintf ( ""malformed file, relocation entry #%u is partially beyond the end of section %u.\\n"" , rel , i )"	2710:4:83488:83589	1332156	0	True				
ANR	1332473	CallExpression	"bprintf ( ""malformed file, relocation entry #%u is partially beyond the end of section %u.\\n"" , rel , i )"		1332156	0					
ANR	1332474	Callee	bprintf		1332156	0					
ANR	1332475	Identifier	bprintf		1332156	0					
ANR	1332476	ArgumentList	"""malformed file, relocation entry #%u is partially beyond the end of section %u.\\n"""		1332156	1					
ANR	1332477	Argument	"""malformed file, relocation entry #%u is partially beyond the end of section %u.\\n"""		1332156	0					
ANR	1332478	PrimaryExpression	"""malformed file, relocation entry #%u is partially beyond the end of section %u.\\n"""		1332156	0					
ANR	1332479	Argument	rel		1332156	1					
ANR	1332480	Identifier	rel		1332156	0					
ANR	1332481	Argument	i		1332156	2					
ANR	1332482	Identifier	i		1332156	0					
ANR	1332483	IfStatement	if ( is_bin_etrel ( bin ) )		1332156	6					
ANR	1332484	Condition	is_bin_etrel ( bin )	2712:7:83603:83620	1332156	0	True				
ANR	1332485	CallExpression	is_bin_etrel ( bin )		1332156	0					
ANR	1332486	Callee	is_bin_etrel		1332156	0					
ANR	1332487	Identifier	is_bin_etrel		1332156	0					
ANR	1332488	ArgumentList	bin		1332156	1					
ANR	1332489	Argument	bin		1332156	0					
ANR	1332490	Identifier	bin		1332156	0					
ANR	1332491	CompoundStatement		44:27:1308:1308	1332156	1					
ANR	1332492	IfStatement	if ( bin -> g_sections [ i ] . info < bin -> ehdr . e_shnum && bin -> shdr )		1332156	0					
ANR	1332493	Condition	bin -> g_sections [ i ] . info < bin -> ehdr . e_shnum && bin -> shdr	2713:8:83633:83688	1332156	0	True				
ANR	1332494	AndExpression	bin -> g_sections [ i ] . info < bin -> ehdr . e_shnum && bin -> shdr		1332156	0		&&			
ANR	1332495	RelationalExpression	bin -> g_sections [ i ] . info < bin -> ehdr . e_shnum		1332156	0		<			
ANR	1332496	MemberAccess	bin -> g_sections [ i ] . info		1332156	0					
ANR	1332497	ArrayIndexing	bin -> g_sections [ i ]		1332156	0					
ANR	1332498	PtrMemberAccess	bin -> g_sections		1332156	0					
ANR	1332499	Identifier	bin		1332156	0					
ANR	1332500	Identifier	g_sections		1332156	1					
ANR	1332501	Identifier	i		1332156	1					
ANR	1332502	Identifier	info		1332156	1					
ANR	1332503	MemberAccess	bin -> ehdr . e_shnum		1332156	1					
ANR	1332504	PtrMemberAccess	bin -> ehdr		1332156	0					
ANR	1332505	Identifier	bin		1332156	0					
ANR	1332506	Identifier	ehdr		1332156	1					
ANR	1332507	Identifier	e_shnum		1332156	1					
ANR	1332508	PtrMemberAccess	bin -> shdr		1332156	1					
ANR	1332509	Identifier	bin		1332156	0					
ANR	1332510	Identifier	shdr		1332156	1					
ANR	1332511	CompoundStatement		45:66:1376:1376	1332156	1					
ANR	1332512	ExpressionStatement	ret [ rel ] . rva = bin -> shdr [ bin -> g_sections [ i ] . info ] . sh_offset + ret [ rel ] . offset	2714:5:83698:83775	1332156	0	True				
ANR	1332513	AssignmentExpression	ret [ rel ] . rva = bin -> shdr [ bin -> g_sections [ i ] . info ] . sh_offset + ret [ rel ] . offset		1332156	0		=			
ANR	1332514	MemberAccess	ret [ rel ] . rva		1332156	0					
ANR	1332515	ArrayIndexing	ret [ rel ]		1332156	0					
ANR	1332516	Identifier	ret		1332156	0					
ANR	1332517	Identifier	rel		1332156	1					
ANR	1332518	Identifier	rva		1332156	1					
ANR	1332519	AdditiveExpression	bin -> shdr [ bin -> g_sections [ i ] . info ] . sh_offset + ret [ rel ] . offset		1332156	1		+			
ANR	1332520	MemberAccess	bin -> shdr [ bin -> g_sections [ i ] . info ] . sh_offset		1332156	0					
ANR	1332521	ArrayIndexing	bin -> shdr [ bin -> g_sections [ i ] . info ]		1332156	0					
ANR	1332522	PtrMemberAccess	bin -> shdr		1332156	0					
ANR	1332523	Identifier	bin		1332156	0					
ANR	1332524	Identifier	shdr		1332156	1					
ANR	1332525	MemberAccess	bin -> g_sections [ i ] . info		1332156	1					
ANR	1332526	ArrayIndexing	bin -> g_sections [ i ]		1332156	0					
ANR	1332527	PtrMemberAccess	bin -> g_sections		1332156	0					
ANR	1332528	Identifier	bin		1332156	0					
ANR	1332529	Identifier	g_sections		1332156	1					
ANR	1332530	Identifier	i		1332156	1					
ANR	1332531	Identifier	info		1332156	1					
ANR	1332532	Identifier	sh_offset		1332156	1					
ANR	1332533	MemberAccess	ret [ rel ] . offset		1332156	1					
ANR	1332534	ArrayIndexing	ret [ rel ]		1332156	0					
ANR	1332535	Identifier	ret		1332156	0					
ANR	1332536	Identifier	rel		1332156	1					
ANR	1332537	Identifier	offset		1332156	1					
ANR	1332538	ExpressionStatement	"ret [ rel ] . rva = Elf_ ( r_bin_elf_p2v ) ( bin , ret [ rel ] . rva )"	2715:5:83782:83836	1332156	1	True				
ANR	1332539	AssignmentExpression	"ret [ rel ] . rva = Elf_ ( r_bin_elf_p2v ) ( bin , ret [ rel ] . rva )"		1332156	0		=			
ANR	1332540	MemberAccess	ret [ rel ] . rva		1332156	0					
ANR	1332541	ArrayIndexing	ret [ rel ]		1332156	0					
ANR	1332542	Identifier	ret		1332156	0					
ANR	1332543	Identifier	rel		1332156	1					
ANR	1332544	Identifier	rva		1332156	1					
ANR	1332545	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , ret [ rel ] . rva )"		1332156	1					
ANR	1332546	Callee	Elf_ ( r_bin_elf_p2v )		1332156	0					
ANR	1332547	CallExpression	Elf_ ( r_bin_elf_p2v )		1332156	0					
ANR	1332548	Callee	Elf_		1332156	0					
ANR	1332549	Identifier	Elf_		1332156	0					
ANR	1332550	ArgumentList	r_bin_elf_p2v		1332156	1					
ANR	1332551	Argument	r_bin_elf_p2v		1332156	0					
ANR	1332552	Identifier	r_bin_elf_p2v		1332156	0					
ANR	1332553	ArgumentList	bin		1332156	1					
ANR	1332554	Argument	bin		1332156	0					
ANR	1332555	Identifier	bin		1332156	0					
ANR	1332556	Argument	ret [ rel ] . rva		1332156	1					
ANR	1332557	MemberAccess	ret [ rel ] . rva		1332156	0					
ANR	1332558	ArrayIndexing	ret [ rel ]		1332156	0					
ANR	1332559	Identifier	ret		1332156	0					
ANR	1332560	Identifier	rel		1332156	1					
ANR	1332561	Identifier	rva		1332156	1					
ANR	1332562	ElseStatement	else		1332156	0					
ANR	1332563	CompoundStatement		48:11:1534:1534	1332156	0					
ANR	1332564	ExpressionStatement	ret [ rel ] . rva = ret [ rel ] . offset	2717:5:83856:83886	1332156	0	True				
ANR	1332565	AssignmentExpression	ret [ rel ] . rva = ret [ rel ] . offset		1332156	0		=			
ANR	1332566	MemberAccess	ret [ rel ] . rva		1332156	0					
ANR	1332567	ArrayIndexing	ret [ rel ]		1332156	0					
ANR	1332568	Identifier	ret		1332156	0					
ANR	1332569	Identifier	rel		1332156	1					
ANR	1332570	Identifier	rva		1332156	1					
ANR	1332571	MemberAccess	ret [ rel ] . offset		1332156	1					
ANR	1332572	ArrayIndexing	ret [ rel ]		1332156	0					
ANR	1332573	Identifier	ret		1332156	0					
ANR	1332574	Identifier	rel		1332156	1					
ANR	1332575	Identifier	offset		1332156	1					
ANR	1332576	ElseStatement	else		1332156	0					
ANR	1332577	CompoundStatement		51:10:1589:1589	1332156	0					
ANR	1332578	ExpressionStatement	ret [ rel ] . rva = ret [ rel ] . offset	2720:4:83910:83940	1332156	0	True				
ANR	1332579	AssignmentExpression	ret [ rel ] . rva = ret [ rel ] . offset		1332156	0		=			
ANR	1332580	MemberAccess	ret [ rel ] . rva		1332156	0					
ANR	1332581	ArrayIndexing	ret [ rel ]		1332156	0					
ANR	1332582	Identifier	ret		1332156	0					
ANR	1332583	Identifier	rel		1332156	1					
ANR	1332584	Identifier	rva		1332156	1					
ANR	1332585	MemberAccess	ret [ rel ] . offset		1332156	1					
ANR	1332586	ArrayIndexing	ret [ rel ]		1332156	0					
ANR	1332587	Identifier	ret		1332156	0					
ANR	1332588	Identifier	rel		1332156	1					
ANR	1332589	Identifier	offset		1332156	1					
ANR	1332590	ExpressionStatement	"ret [ rel ] . offset = Elf_ ( r_bin_elf_v2p ) ( bin , ret [ rel ] . offset )"	2721:4:83946:84006	1332156	1	True				
ANR	1332591	AssignmentExpression	"ret [ rel ] . offset = Elf_ ( r_bin_elf_v2p ) ( bin , ret [ rel ] . offset )"		1332156	0		=			
ANR	1332592	MemberAccess	ret [ rel ] . offset		1332156	0					
ANR	1332593	ArrayIndexing	ret [ rel ]		1332156	0					
ANR	1332594	Identifier	ret		1332156	0					
ANR	1332595	Identifier	rel		1332156	1					
ANR	1332596	Identifier	offset		1332156	1					
ANR	1332597	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , ret [ rel ] . offset )"		1332156	1					
ANR	1332598	Callee	Elf_ ( r_bin_elf_v2p )		1332156	0					
ANR	1332599	CallExpression	Elf_ ( r_bin_elf_v2p )		1332156	0					
ANR	1332600	Callee	Elf_		1332156	0					
ANR	1332601	Identifier	Elf_		1332156	0					
ANR	1332602	ArgumentList	r_bin_elf_v2p		1332156	1					
ANR	1332603	Argument	r_bin_elf_v2p		1332156	0					
ANR	1332604	Identifier	r_bin_elf_v2p		1332156	0					
ANR	1332605	ArgumentList	bin		1332156	1					
ANR	1332606	Argument	bin		1332156	0					
ANR	1332607	Identifier	bin		1332156	0					
ANR	1332608	Argument	ret [ rel ] . offset		1332156	1					
ANR	1332609	MemberAccess	ret [ rel ] . offset		1332156	0					
ANR	1332610	ArrayIndexing	ret [ rel ]		1332156	0					
ANR	1332611	Identifier	ret		1332156	0					
ANR	1332612	Identifier	rel		1332156	1					
ANR	1332613	Identifier	offset		1332156	1					
ANR	1332614	ExpressionStatement	ret [ rel ] . last = 0	2723:3:84016:84033	1332156	7	True				
ANR	1332615	AssignmentExpression	ret [ rel ] . last = 0		1332156	0		=			
ANR	1332616	MemberAccess	ret [ rel ] . last		1332156	0					
ANR	1332617	ArrayIndexing	ret [ rel ]		1332156	0					
ANR	1332618	Identifier	ret		1332156	0					
ANR	1332619	Identifier	rel		1332156	1					
ANR	1332620	Identifier	last		1332156	1					
ANR	1332621	PrimaryExpression	0		1332156	1					
ANR	1332622	IfStatement	if ( res < 0 )		1332156	8					
ANR	1332623	Condition	res < 0	2724:7:84042:84048	1332156	0	True				
ANR	1332624	RelationalExpression	res < 0		1332156	0		<			
ANR	1332625	Identifier	res		1332156	0					
ANR	1332626	PrimaryExpression	0		1332156	1					
ANR	1332627	CompoundStatement		56:16:1736:1736	1332156	1					
ANR	1332628	BreakStatement	break ;	2725:4:84057:84062	1332156	0	True				
ANR	1332629	ExpressionStatement	rel ++	2727:3:84072:84077	1332156	9	True				
ANR	1332630	PostIncDecOperationExpression	rel ++		1332156	0					
ANR	1332631	Identifier	rel		1332156	0					
ANR	1332632	IncDec	++		1332156	1					
ANR	1332633	ExpressionStatement	ret [ reloc_num ] . last = 1	2730:1:84087:84110	1332156	9	True				
ANR	1332634	AssignmentExpression	ret [ reloc_num ] . last = 1		1332156	0		=			
ANR	1332635	MemberAccess	ret [ reloc_num ] . last		1332156	0					
ANR	1332636	ArrayIndexing	ret [ reloc_num ]		1332156	0					
ANR	1332637	Identifier	ret		1332156	0					
ANR	1332638	Identifier	reloc_num		1332156	1					
ANR	1332639	Identifier	last		1332156	1					
ANR	1332640	PrimaryExpression	1		1332156	1					
ANR	1332641	ReturnStatement	return ret ;	2731:1:84113:84123	1332156	10	True				
ANR	1332642	Identifier	ret		1332156	0					
ANR	1332643	ReturnType	Elf_		1332156	1					
ANR	1332644	Identifier	( r_bin_elf_get_relocs )		1332156	2					
ANR	1332645	Identifier	r_bin_elf_get_relocs		1332156	3					
ANR	1332646	ParameterList	ELFOBJ * bin		1332156	4					
ANR	1332647	Parameter	ELFOBJ * bin	2669:41:82301:82311	1332156	0	True				
ANR	1332648	ParameterType	ELFOBJ *		1332156	0					
ANR	1332649	Identifier	bin		1332156	1					
ANR	1332650	CFGEntryNode	ENTRY		1332156		True				
ANR	1332651	CFGExitNode	EXIT		1332156		True				
ANR	1332652	Symbol	bin -> g_sections [ i ] . size		1332156						
ANR	1332653	Symbol	bin -> size		1332156						
ANR	1332654	Symbol	* * * bin		1332156						
ANR	1332655	Symbol	bin		1332156						
ANR	1332656	Symbol	ret [ rel ] . offset		1332156						
ANR	1332657	Symbol	* bin -> shdr		1332156						
ANR	1332658	Symbol	ret [ reloc_num ] . last		1332156						
ANR	1332659	Symbol	bin -> g_sections		1332156						
ANR	1332660	Symbol	reloc_num		1332156						
ANR	1332661	Symbol	strlen		1332156						
ANR	1332662	Symbol	strncmp		1332156						
ANR	1332663	Symbol	bin -> ehdr		1332156						
ANR	1332664	Symbol	rel		1332156						
ANR	1332665	Symbol	r_bin_elf_p2v		1332156						
ANR	1332666	Symbol	r_bin_elf_v2p		1332156						
ANR	1332667	Symbol	DT_REL		1332156						
ANR	1332668	Symbol	ret		1332156						
ANR	1332669	Symbol	res		1332156						
ANR	1332670	Symbol	* * i		1332156						
ANR	1332671	Symbol	NULL		1332156						
ANR	1332672	Symbol	* bin -> g_sections		1332156						
ANR	1332673	Symbol	is_rel		1332156						
ANR	1332674	Symbol	bin -> g_sections [ i ] . offset		1332156						
ANR	1332675	Symbol	* bin -> g_sections [ i ] . info		1332156						
ANR	1332676	Symbol	ret [ rel ] . last		1332156						
ANR	1332677	Symbol	bin -> ehdr . e_shnum		1332156						
ANR	1332678	Symbol	read_reloc		1332156						
ANR	1332679	Symbol	* rel		1332156						
ANR	1332680	Symbol	is_rela		1332156						
ANR	1332681	Symbol	is_bin_etrel		1332156						
ANR	1332682	Symbol	calloc		1332156						
ANR	1332683	Symbol	* ret		1332156						
ANR	1332684	Symbol	* bin		1332156						
ANR	1332685	Symbol	bin -> g_sections [ i ] . info		1332156						
ANR	1332686	Symbol	* reloc_num		1332156						
ANR	1332687	Symbol	bin -> shdr [ bin -> g_sections [ i ] . info ] . sh_offset		1332156						
ANR	1332688	Symbol	ret [ rel ] . rva		1332156						
ANR	1332689	Symbol	* * bin		1332156						
ANR	1332690	Symbol	rela		1332156						
ANR	1332691	Symbol	Elf_		1332156						
ANR	1332692	Symbol	* * bin -> g_sections		1332156						
ANR	1332693	Symbol	DT_RELA		1332156						
ANR	1332694	Symbol	i		1332156						
ANR	1332695	Symbol	j		1332156						
ANR	1332696	Symbol	bin -> is_rela		1332156						
ANR	1332697	Symbol	bin -> shdr		1332156						
ANR	1332698	Symbol	* i		1332156						
ANR	1332699	Symbol	get_relocs_num		1332156						
ANR	1332700	Symbol	bin -> g_sections [ i ] . name		1332156						
ANR	1332701	Symbol	bin -> reloc_num		1332156						
ANR	1332702	Symbol	bin -> g_sections [ i ] . last		1332156						
ANR	1332703	Function	r_bin_elf_get_libs	2734:12:84140:85046							
ANR	1332704	FunctionDef	r_bin_elf_get_libs (ELFOBJ * bin)		1332703	0					
ANR	1332705	CompoundStatement		2734:50:84178:85046	1332703	0					
ANR	1332706	IdentifierDeclStatement	RBinElfLib * ret = NULL ;	2735:1:84181:84203	1332703	0	True				
ANR	1332707	IdentifierDecl	* ret = NULL		1332703	0					
ANR	1332708	IdentifierDeclType	RBinElfLib *		1332703	0					
ANR	1332709	Identifier	ret		1332703	1					
ANR	1332710	AssignmentExpression	* ret = NULL		1332703	2		=			
ANR	1332711	Identifier	NULL		1332703	0					
ANR	1332712	Identifier	NULL		1332703	1					
ANR	1332713	IdentifierDeclStatement	"int j , k ;"	2736:1:84206:84214	1332703	1	True				
ANR	1332714	IdentifierDecl	j		1332703	0					
ANR	1332715	IdentifierDeclType	int		1332703	0					
ANR	1332716	Identifier	j		1332703	1					
ANR	1332717	IdentifierDecl	k		1332703	1					
ANR	1332718	IdentifierDeclType	int		1332703	0					
ANR	1332719	Identifier	k		1332703	1					
ANR	1332720	IfStatement	if ( ! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab || * ( bin -> strtab + 1 ) == '0' )		1332703	2					
ANR	1332721	Condition	! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab || * ( bin -> strtab + 1 ) == '0'	2738:5:84222:84299	1332703	0	True				
ANR	1332722	OrExpression	! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab || * ( bin -> strtab + 1 ) == '0'		1332703	0		||			
ANR	1332723	UnaryOperationExpression	! bin		1332703	0					
ANR	1332724	UnaryOperator	!		1332703	0					
ANR	1332725	Identifier	bin		1332703	1					
ANR	1332726	OrExpression	! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab || * ( bin -> strtab + 1 ) == '0'		1332703	1		||			
ANR	1332727	UnaryOperationExpression	! bin -> phdr		1332703	0					
ANR	1332728	UnaryOperator	!		1332703	0					
ANR	1332729	PtrMemberAccess	bin -> phdr		1332703	1					
ANR	1332730	Identifier	bin		1332703	0					
ANR	1332731	Identifier	phdr		1332703	1					
ANR	1332732	OrExpression	! bin -> dyn_buf || ! bin -> strtab || * ( bin -> strtab + 1 ) == '0'		1332703	1		||			
ANR	1332733	UnaryOperationExpression	! bin -> dyn_buf		1332703	0					
ANR	1332734	UnaryOperator	!		1332703	0					
ANR	1332735	PtrMemberAccess	bin -> dyn_buf		1332703	1					
ANR	1332736	Identifier	bin		1332703	0					
ANR	1332737	Identifier	dyn_buf		1332703	1					
ANR	1332738	OrExpression	! bin -> strtab || * ( bin -> strtab + 1 ) == '0'		1332703	1		||			
ANR	1332739	UnaryOperationExpression	! bin -> strtab		1332703	0					
ANR	1332740	UnaryOperator	!		1332703	0					
ANR	1332741	PtrMemberAccess	bin -> strtab		1332703	1					
ANR	1332742	Identifier	bin		1332703	0					
ANR	1332743	Identifier	strtab		1332703	1					
ANR	1332744	EqualityExpression	* ( bin -> strtab + 1 ) == '0'		1332703	1		==			
ANR	1332745	UnaryOperationExpression	* ( bin -> strtab + 1 )		1332703	0					
ANR	1332746	UnaryOperator	*		1332703	0					
ANR	1332747	AdditiveExpression	bin -> strtab + 1		1332703	1		+			
ANR	1332748	PtrMemberAccess	bin -> strtab		1332703	0					
ANR	1332749	Identifier	bin		1332703	0					
ANR	1332750	Identifier	strtab		1332703	1					
ANR	1332751	PrimaryExpression	1		1332703	1					
ANR	1332752	PrimaryExpression	'0'		1332703	1					
ANR	1332753	CompoundStatement		5:85:123:123	1332703	1					
ANR	1332754	ReturnStatement	return NULL ;	2739:2:84306:84317	1332703	0	True				
ANR	1332755	Identifier	NULL		1332703	0					
ANR	1332756	ForStatement	"for ( j = 0 , k = 0 ; j < bin -> dyn_entries ; j ++ )"		1332703	3					
ANR	1332757	ForInit	"j = 0 , k = 0 ;"	2741:6:84328:84340	1332703	0	True				
ANR	1332758	Expression	"j = 0 , k = 0"		1332703	0					
ANR	1332759	AssignmentExpression	j = 0		1332703	0		=			
ANR	1332760	Identifier	j		1332703	0					
ANR	1332761	PrimaryExpression	0		1332703	1					
ANR	1332762	AssignmentExpression	k = 0		1332703	1		=			
ANR	1332763	Identifier	k		1332703	0					
ANR	1332764	PrimaryExpression	0		1332703	1					
ANR	1332765	Condition	j < bin -> dyn_entries	2741:20:84342:84361	1332703	1	True				
ANR	1332766	RelationalExpression	j < bin -> dyn_entries		1332703	0		<			
ANR	1332767	Identifier	j		1332703	0					
ANR	1332768	PtrMemberAccess	bin -> dyn_entries		1332703	1					
ANR	1332769	Identifier	bin		1332703	0					
ANR	1332770	Identifier	dyn_entries		1332703	1					
ANR	1332771	PostIncDecOperationExpression	j ++	2741:42:84364:84366	1332703	2	True				
ANR	1332772	Identifier	j		1332703	0					
ANR	1332773	IncDec	++		1332703	1					
ANR	1332774	CompoundStatement		8:47:190:190	1332703	3					
ANR	1332775	IfStatement	if ( bin -> dyn_buf [ j ] . d_tag == DT_NEEDED )		1332703	0					
ANR	1332776	Condition	bin -> dyn_buf [ j ] . d_tag == DT_NEEDED	2742:6:84377:84410	1332703	0	True				
ANR	1332777	EqualityExpression	bin -> dyn_buf [ j ] . d_tag == DT_NEEDED		1332703	0		==			
ANR	1332778	MemberAccess	bin -> dyn_buf [ j ] . d_tag		1332703	0					
ANR	1332779	ArrayIndexing	bin -> dyn_buf [ j ]		1332703	0					
ANR	1332780	PtrMemberAccess	bin -> dyn_buf		1332703	0					
ANR	1332781	Identifier	bin		1332703	0					
ANR	1332782	Identifier	dyn_buf		1332703	1					
ANR	1332783	Identifier	j		1332703	1					
ANR	1332784	Identifier	d_tag		1332703	1					
ANR	1332785	Identifier	DT_NEEDED		1332703	1					
ANR	1332786	CompoundStatement		10:3:239:299	1332703	1					
ANR	1332787	IdentifierDeclStatement	"RBinElfLib * r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) ) ;"	2743:3:84418:84478	1332703	0	True				
ANR	1332788	IdentifierDecl	"* r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		1332703	0					
ANR	1332789	IdentifierDeclType	RBinElfLib *		1332703	0					
ANR	1332790	Identifier	r		1332703	1					
ANR	1332791	AssignmentExpression	"* r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		1332703	2		=			
ANR	1332792	Identifier	r		1332703	0					
ANR	1332793	CallExpression	"realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		1332703	1					
ANR	1332794	Callee	realloc		1332703	0					
ANR	1332795	Identifier	realloc		1332703	0					
ANR	1332796	ArgumentList	ret		1332703	1					
ANR	1332797	Argument	ret		1332703	0					
ANR	1332798	Identifier	ret		1332703	0					
ANR	1332799	Argument	( k + 1 ) * sizeof ( RBinElfLib )		1332703	1					
ANR	1332800	MultiplicativeExpression	( k + 1 ) * sizeof ( RBinElfLib )		1332703	0		*			
ANR	1332801	AdditiveExpression	k + 1		1332703	0		+			
ANR	1332802	Identifier	k		1332703	0					
ANR	1332803	PrimaryExpression	1		1332703	1					
ANR	1332804	SizeofExpression	sizeof ( RBinElfLib )		1332703	1					
ANR	1332805	Sizeof	sizeof		1332703	0					
ANR	1332806	SizeofOperand	RBinElfLib		1332703	1					
ANR	1332807	IfStatement	if ( ! r )		1332703	1					
ANR	1332808	Condition	! r	2744:7:84487:84488	1332703	0	True				
ANR	1332809	UnaryOperationExpression	! r		1332703	0					
ANR	1332810	UnaryOperator	!		1332703	0					
ANR	1332811	Identifier	r		1332703	1					
ANR	1332812	CompoundStatement		11:11:312:312	1332703	1					
ANR	1332813	ExpressionStatement	"perror ( ""realloc (libs)"" )"	2745:4:84497:84522	1332703	0	True				
ANR	1332814	CallExpression	"perror ( ""realloc (libs)"" )"		1332703	0					
ANR	1332815	Callee	perror		1332703	0					
ANR	1332816	Identifier	perror		1332703	0					
ANR	1332817	ArgumentList	"""realloc (libs)"""		1332703	1					
ANR	1332818	Argument	"""realloc (libs)"""		1332703	0					
ANR	1332819	PrimaryExpression	"""realloc (libs)"""		1332703	0					
ANR	1332820	ExpressionStatement	free ( ret )	2746:4:84528:84538	1332703	1	True				
ANR	1332821	CallExpression	free ( ret )		1332703	0					
ANR	1332822	Callee	free		1332703	0					
ANR	1332823	Identifier	free		1332703	0					
ANR	1332824	ArgumentList	ret		1332703	1					
ANR	1332825	Argument	ret		1332703	0					
ANR	1332826	Identifier	ret		1332703	0					
ANR	1332827	ReturnStatement	return NULL ;	2747:4:84544:84555	1332703	2	True				
ANR	1332828	Identifier	NULL		1332703	0					
ANR	1332829	ExpressionStatement	ret = r	2749:3:84565:84572	1332703	2	True				
ANR	1332830	AssignmentExpression	ret = r		1332703	0		=			
ANR	1332831	Identifier	ret		1332703	0					
ANR	1332832	Identifier	r		1332703	1					
ANR	1332833	IfStatement	if ( bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size )		1332703	3					
ANR	1332834	Condition	bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size	2750:7:84581:84625	1332703	0	True				
ANR	1332835	RelationalExpression	bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size		1332703	0		>			
ANR	1332836	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_val		1332703	0					
ANR	1332837	MemberAccess	bin -> dyn_buf [ j ] . d_un		1332703	0					
ANR	1332838	ArrayIndexing	bin -> dyn_buf [ j ]		1332703	0					
ANR	1332839	PtrMemberAccess	bin -> dyn_buf		1332703	0					
ANR	1332840	Identifier	bin		1332703	0					
ANR	1332841	Identifier	dyn_buf		1332703	1					
ANR	1332842	Identifier	j		1332703	1					
ANR	1332843	Identifier	d_un		1332703	1					
ANR	1332844	Identifier	d_val		1332703	1					
ANR	1332845	PtrMemberAccess	bin -> strtab_size		1332703	1					
ANR	1332846	Identifier	bin		1332703	0					
ANR	1332847	Identifier	strtab_size		1332703	1					
ANR	1332848	CompoundStatement		17:54:449:449	1332703	1					
ANR	1332849	ExpressionStatement	free ( ret )	2751:4:84634:84644	1332703	0	True				
ANR	1332850	CallExpression	free ( ret )		1332703	0					
ANR	1332851	Callee	free		1332703	0					
ANR	1332852	Identifier	free		1332703	0					
ANR	1332853	ArgumentList	ret		1332703	1					
ANR	1332854	Argument	ret		1332703	0					
ANR	1332855	Identifier	ret		1332703	0					
ANR	1332856	ReturnStatement	return NULL ;	2752:4:84650:84661	1332703	1	True				
ANR	1332857	Identifier	NULL		1332703	0					
ANR	1332858	ExpressionStatement	"strncpy ( ret [ k ] . name , bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val , ELF_STRING_LENGTH )"	2754:3:84671:84753	1332703	4	True				
ANR	1332859	CallExpression	"strncpy ( ret [ k ] . name , bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val , ELF_STRING_LENGTH )"		1332703	0					
ANR	1332860	Callee	strncpy		1332703	0					
ANR	1332861	Identifier	strncpy		1332703	0					
ANR	1332862	ArgumentList	ret [ k ] . name		1332703	1					
ANR	1332863	Argument	ret [ k ] . name		1332703	0					
ANR	1332864	MemberAccess	ret [ k ] . name		1332703	0					
ANR	1332865	ArrayIndexing	ret [ k ]		1332703	0					
ANR	1332866	Identifier	ret		1332703	0					
ANR	1332867	Identifier	k		1332703	1					
ANR	1332868	Identifier	name		1332703	1					
ANR	1332869	Argument	bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val		1332703	1					
ANR	1332870	AdditiveExpression	bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val		1332703	0		+			
ANR	1332871	PtrMemberAccess	bin -> strtab		1332703	0					
ANR	1332872	Identifier	bin		1332703	0					
ANR	1332873	Identifier	strtab		1332703	1					
ANR	1332874	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_val		1332703	1					
ANR	1332875	MemberAccess	bin -> dyn_buf [ j ] . d_un		1332703	0					
ANR	1332876	ArrayIndexing	bin -> dyn_buf [ j ]		1332703	0					
ANR	1332877	PtrMemberAccess	bin -> dyn_buf		1332703	0					
ANR	1332878	Identifier	bin		1332703	0					
ANR	1332879	Identifier	dyn_buf		1332703	1					
ANR	1332880	Identifier	j		1332703	1					
ANR	1332881	Identifier	d_un		1332703	1					
ANR	1332882	Identifier	d_val		1332703	1					
ANR	1332883	Argument	ELF_STRING_LENGTH		1332703	2					
ANR	1332884	Identifier	ELF_STRING_LENGTH		1332703	0					
ANR	1332885	ExpressionStatement	ret [ k ] . name [ ELF_STRING_LENGTH - 1 ] = '\\0'	2755:3:84758:84799	1332703	5	True				
ANR	1332886	AssignmentExpression	ret [ k ] . name [ ELF_STRING_LENGTH - 1 ] = '\\0'		1332703	0		=			
ANR	1332887	ArrayIndexing	ret [ k ] . name [ ELF_STRING_LENGTH - 1 ]		1332703	0					
ANR	1332888	MemberAccess	ret [ k ] . name		1332703	0					
ANR	1332889	ArrayIndexing	ret [ k ]		1332703	0					
ANR	1332890	Identifier	ret		1332703	0					
ANR	1332891	Identifier	k		1332703	1					
ANR	1332892	Identifier	name		1332703	1					
ANR	1332893	AdditiveExpression	ELF_STRING_LENGTH - 1		1332703	1		-			
ANR	1332894	Identifier	ELF_STRING_LENGTH		1332703	0					
ANR	1332895	PrimaryExpression	1		1332703	1					
ANR	1332896	PrimaryExpression	'\\0'		1332703	1					
ANR	1332897	ExpressionStatement	ret [ k ] . last = 0	2756:6:84807:84822	1332703	6	True				
ANR	1332898	AssignmentExpression	ret [ k ] . last = 0		1332703	0		=			
ANR	1332899	MemberAccess	ret [ k ] . last		1332703	0					
ANR	1332900	ArrayIndexing	ret [ k ]		1332703	0					
ANR	1332901	Identifier	ret		1332703	0					
ANR	1332902	Identifier	k		1332703	1					
ANR	1332903	Identifier	last		1332703	1					
ANR	1332904	PrimaryExpression	0		1332703	1					
ANR	1332905	IfStatement	if ( ret [ k ] . name [ 0 ] )		1332703	7					
ANR	1332906	Condition	ret [ k ] . name [ 0 ]	2757:7:84831:84844	1332703	0	True				
ANR	1332907	ArrayIndexing	ret [ k ] . name [ 0 ]		1332703	0					
ANR	1332908	MemberAccess	ret [ k ] . name		1332703	0					
ANR	1332909	ArrayIndexing	ret [ k ]		1332703	0					
ANR	1332910	Identifier	ret		1332703	0					
ANR	1332911	Identifier	k		1332703	1					
ANR	1332912	Identifier	name		1332703	1					
ANR	1332913	PrimaryExpression	0		1332703	1					
ANR	1332914	CompoundStatement		24:23:668:668	1332703	1					
ANR	1332915	ExpressionStatement	k ++	2758:4:84853:84856	1332703	0	True				
ANR	1332916	PostIncDecOperationExpression	k ++		1332703	0					
ANR	1332917	Identifier	k		1332703	0					
ANR	1332918	IncDec	++		1332703	1					
ANR	1332919	IdentifierDeclStatement	"RBinElfLib * r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) ) ;"	2762:1:84871:84931	1332703	4	True				
ANR	1332920	IdentifierDecl	"* r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		1332703	0					
ANR	1332921	IdentifierDeclType	RBinElfLib *		1332703	0					
ANR	1332922	Identifier	r		1332703	1					
ANR	1332923	AssignmentExpression	"* r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		1332703	2		=			
ANR	1332924	Identifier	r		1332703	0					
ANR	1332925	CallExpression	"realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		1332703	1					
ANR	1332926	Callee	realloc		1332703	0					
ANR	1332927	Identifier	realloc		1332703	0					
ANR	1332928	ArgumentList	ret		1332703	1					
ANR	1332929	Argument	ret		1332703	0					
ANR	1332930	Identifier	ret		1332703	0					
ANR	1332931	Argument	( k + 1 ) * sizeof ( RBinElfLib )		1332703	1					
ANR	1332932	MultiplicativeExpression	( k + 1 ) * sizeof ( RBinElfLib )		1332703	0		*			
ANR	1332933	AdditiveExpression	k + 1		1332703	0		+			
ANR	1332934	Identifier	k		1332703	0					
ANR	1332935	PrimaryExpression	1		1332703	1					
ANR	1332936	SizeofExpression	sizeof ( RBinElfLib )		1332703	1					
ANR	1332937	Sizeof	sizeof		1332703	0					
ANR	1332938	SizeofOperand	RBinElfLib		1332703	1					
ANR	1332939	IfStatement	if ( ! r )		1332703	5					
ANR	1332940	Condition	! r	2763:5:84938:84939	1332703	0	True				
ANR	1332941	UnaryOperationExpression	! r		1332703	0					
ANR	1332942	UnaryOperator	!		1332703	0					
ANR	1332943	Identifier	r		1332703	1					
ANR	1332944	CompoundStatement		30:9:763:763	1332703	1					
ANR	1332945	ExpressionStatement	"perror ( ""realloc (libs)"" )"	2764:2:84946:84971	1332703	0	True				
ANR	1332946	CallExpression	"perror ( ""realloc (libs)"" )"		1332703	0					
ANR	1332947	Callee	perror		1332703	0					
ANR	1332948	Identifier	perror		1332703	0					
ANR	1332949	ArgumentList	"""realloc (libs)"""		1332703	1					
ANR	1332950	Argument	"""realloc (libs)"""		1332703	0					
ANR	1332951	PrimaryExpression	"""realloc (libs)"""		1332703	0					
ANR	1332952	ExpressionStatement	free ( ret )	2765:2:84975:84985	1332703	1	True				
ANR	1332953	CallExpression	free ( ret )		1332703	0					
ANR	1332954	Callee	free		1332703	0					
ANR	1332955	Identifier	free		1332703	0					
ANR	1332956	ArgumentList	ret		1332703	1					
ANR	1332957	Argument	ret		1332703	0					
ANR	1332958	Identifier	ret		1332703	0					
ANR	1332959	ReturnStatement	return NULL ;	2766:2:84989:85000	1332703	2	True				
ANR	1332960	Identifier	NULL		1332703	0					
ANR	1332961	ExpressionStatement	ret = r	2768:1:85006:85013	1332703	6	True				
ANR	1332962	AssignmentExpression	ret = r		1332703	0		=			
ANR	1332963	Identifier	ret		1332703	0					
ANR	1332964	Identifier	r		1332703	1					
ANR	1332965	ExpressionStatement	ret [ k ] . last = 1	2769:1:85016:85031	1332703	7	True				
ANR	1332966	AssignmentExpression	ret [ k ] . last = 1		1332703	0		=			
ANR	1332967	MemberAccess	ret [ k ] . last		1332703	0					
ANR	1332968	ArrayIndexing	ret [ k ]		1332703	0					
ANR	1332969	Identifier	ret		1332703	0					
ANR	1332970	Identifier	k		1332703	1					
ANR	1332971	Identifier	last		1332703	1					
ANR	1332972	PrimaryExpression	1		1332703	1					
ANR	1332973	ReturnStatement	return ret ;	2770:1:85034:85044	1332703	8	True				
ANR	1332974	Identifier	ret		1332703	0					
ANR	1332975	ReturnType	Elf_		1332703	1					
ANR	1332976	Identifier	( r_bin_elf_get_libs )		1332703	2					
ANR	1332977	Identifier	r_bin_elf_get_libs		1332703	3					
ANR	1332978	ParameterList	ELFOBJ * bin		1332703	4					
ANR	1332979	Parameter	ELFOBJ * bin	2734:37:84165:84175	1332703	0	True				
ANR	1332980	ParameterType	ELFOBJ *		1332703	0					
ANR	1332981	Identifier	bin		1332703	1					
ANR	1332982	CFGEntryNode	ENTRY		1332703		True				
ANR	1332983	CFGExitNode	EXIT		1332703		True				
ANR	1332984	Symbol	DT_NEEDED		1332703						
ANR	1332985	Symbol	bin		1332703						
ANR	1332986	Symbol	bin -> phdr		1332703						
ANR	1332987	Symbol	bin -> dyn_buf [ j ] . d_un . d_val		1332703						
ANR	1332988	Symbol	realloc		1332703						
ANR	1332989	Symbol	* ret		1332703						
ANR	1332990	Symbol	* bin		1332703						
ANR	1332991	Symbol	ret [ k ] . name		1332703						
ANR	1332992	Symbol	bin -> dyn_buf [ j ] . d_tag		1332703						
ANR	1332993	Symbol	* bin -> strtab		1332703						
ANR	1332994	Symbol	* * bin		1332703						
ANR	1332995	Symbol	* bin -> dyn_buf		1332703						
ANR	1332996	Symbol	bin -> strtab		1332703						
ANR	1332997	Symbol	bin -> strtab_size		1332703						
ANR	1332998	Symbol	ret		1332703						
ANR	1332999	Symbol	* * k		1332703						
ANR	1333000	Symbol	bin -> dyn_buf		1332703						
ANR	1333001	Symbol	NULL		1332703						
ANR	1333002	Symbol	bin -> dyn_entries		1332703						
ANR	1333003	Symbol	j		1332703						
ANR	1333004	Symbol	k		1332703						
ANR	1333005	Symbol	bin -> dyn_buf [ j ] . d_un		1332703						
ANR	1333006	Symbol	ELF_STRING_LENGTH		1332703						
ANR	1333007	Symbol	ret [ k ] . last		1332703						
ANR	1333008	Symbol	r		1332703						
ANR	1333009	Symbol	* j		1332703						
ANR	1333010	Symbol	* ELF_STRING_LENGTH		1332703						
ANR	1333011	Symbol	* k		1332703						
ANR	1333012	Symbol	* * ret		1332703						
ANR	1333013	Symbol	* ret [ k ] . name		1332703						
ANR	1333014	Symbol	* ( bin -> strtab + 1 )		1332703						
ANR	1333015	Function	create_section_from_phdr	2773:0:85049:85444							
ANR	1333016	FunctionDef	"create_section_from_phdr (ELFOBJ * bin , RBinElfSection * ret , int * i , const char * name , ut64 addr , ut64 sz)"		1333015	0					
ANR	1333017	CompoundStatement		2773:117:85166:85444	1333015	0					
ANR	1333018	IfStatement	if ( ! addr )		1333015	0					
ANR	1333019	Condition	! addr	2774:5:85173:85177	1333015	0	True				
ANR	1333020	UnaryOperationExpression	! addr		1333015	0					
ANR	1333021	UnaryOperator	!		1333015	0					
ANR	1333022	Identifier	addr		1333015	1					
ANR	1333023	CompoundStatement		2:12:13:13	1333015	1					
ANR	1333024	ReturnStatement	return ;	2775:2:85184:85190	1333015	0	True				
ANR	1333025	ExpressionStatement	"ret [ * i ] . offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , addr )"	2778:1:85197:85249	1333015	1	True				
ANR	1333026	AssignmentExpression	"ret [ * i ] . offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , addr )"		1333015	0		=			
ANR	1333027	MemberAccess	ret [ * i ] . offset		1333015	0					
ANR	1333028	ArrayIndexing	ret [ * i ]		1333015	0					
ANR	1333029	Identifier	ret		1333015	0					
ANR	1333030	UnaryOperationExpression	* i		1333015	1					
ANR	1333031	UnaryOperator	*		1333015	0					
ANR	1333032	Identifier	i		1333015	1					
ANR	1333033	Identifier	offset		1333015	1					
ANR	1333034	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , addr )"		1333015	1					
ANR	1333035	Callee	Elf_ ( r_bin_elf_v2p_new )		1333015	0					
ANR	1333036	CallExpression	Elf_ ( r_bin_elf_v2p_new )		1333015	0					
ANR	1333037	Callee	Elf_		1333015	0					
ANR	1333038	Identifier	Elf_		1333015	0					
ANR	1333039	ArgumentList	r_bin_elf_v2p_new		1333015	1					
ANR	1333040	Argument	r_bin_elf_v2p_new		1333015	0					
ANR	1333041	Identifier	r_bin_elf_v2p_new		1333015	0					
ANR	1333042	ArgumentList	bin		1333015	1					
ANR	1333043	Argument	bin		1333015	0					
ANR	1333044	Identifier	bin		1333015	0					
ANR	1333045	Argument	addr		1333015	1					
ANR	1333046	Identifier	addr		1333015	0					
ANR	1333047	ExpressionStatement	ret [ * i ] . rva = addr	2779:1:85252:85270	1333015	2	True				
ANR	1333048	AssignmentExpression	ret [ * i ] . rva = addr		1333015	0		=			
ANR	1333049	MemberAccess	ret [ * i ] . rva		1333015	0					
ANR	1333050	ArrayIndexing	ret [ * i ]		1333015	0					
ANR	1333051	Identifier	ret		1333015	0					
ANR	1333052	UnaryOperationExpression	* i		1333015	1					
ANR	1333053	UnaryOperator	*		1333015	0					
ANR	1333054	Identifier	i		1333015	1					
ANR	1333055	Identifier	rva		1333015	1					
ANR	1333056	Identifier	addr		1333015	1					
ANR	1333057	ExpressionStatement	ret [ * i ] . size = sz	2780:1:85273:85290	1333015	3	True				
ANR	1333058	AssignmentExpression	ret [ * i ] . size = sz		1333015	0		=			
ANR	1333059	MemberAccess	ret [ * i ] . size		1333015	0					
ANR	1333060	ArrayIndexing	ret [ * i ]		1333015	0					
ANR	1333061	Identifier	ret		1333015	0					
ANR	1333062	UnaryOperationExpression	* i		1333015	1					
ANR	1333063	UnaryOperator	*		1333015	0					
ANR	1333064	Identifier	i		1333015	1					
ANR	1333065	Identifier	size		1333015	1					
ANR	1333066	Identifier	sz		1333015	1					
ANR	1333067	ExpressionStatement	"strncpy ( ret [ * i ] . name , name , R_ARRAY_SIZE ( ret [ * i ] . name ) - 1 )"	2781:1:85293:85354	1333015	4	True				
ANR	1333068	CallExpression	"strncpy ( ret [ * i ] . name , name , R_ARRAY_SIZE ( ret [ * i ] . name ) - 1 )"		1333015	0					
ANR	1333069	Callee	strncpy		1333015	0					
ANR	1333070	Identifier	strncpy		1333015	0					
ANR	1333071	ArgumentList	ret [ * i ] . name		1333015	1					
ANR	1333072	Argument	ret [ * i ] . name		1333015	0					
ANR	1333073	MemberAccess	ret [ * i ] . name		1333015	0					
ANR	1333074	ArrayIndexing	ret [ * i ]		1333015	0					
ANR	1333075	Identifier	ret		1333015	0					
ANR	1333076	UnaryOperationExpression	* i		1333015	1					
ANR	1333077	UnaryOperator	*		1333015	0					
ANR	1333078	Identifier	i		1333015	1					
ANR	1333079	Identifier	name		1333015	1					
ANR	1333080	Argument	name		1333015	1					
ANR	1333081	Identifier	name		1333015	0					
ANR	1333082	Argument	R_ARRAY_SIZE ( ret [ * i ] . name ) - 1		1333015	2					
ANR	1333083	AdditiveExpression	R_ARRAY_SIZE ( ret [ * i ] . name ) - 1		1333015	0		-			
ANR	1333084	CallExpression	R_ARRAY_SIZE ( ret [ * i ] . name )		1333015	0					
ANR	1333085	Callee	R_ARRAY_SIZE		1333015	0					
ANR	1333086	Identifier	R_ARRAY_SIZE		1333015	0					
ANR	1333087	ArgumentList	ret [ * i ] . name		1333015	1					
ANR	1333088	Argument	ret [ * i ] . name		1333015	0					
ANR	1333089	MemberAccess	ret [ * i ] . name		1333015	0					
ANR	1333090	ArrayIndexing	ret [ * i ]		1333015	0					
ANR	1333091	Identifier	ret		1333015	0					
ANR	1333092	UnaryOperationExpression	* i		1333015	1					
ANR	1333093	UnaryOperator	*		1333015	0					
ANR	1333094	Identifier	i		1333015	1					
ANR	1333095	Identifier	name		1333015	1					
ANR	1333096	PrimaryExpression	1		1333015	1					
ANR	1333097	ExpressionStatement	ret [ * i ] . name [ R_ARRAY_SIZE ( ret [ * i ] . name ) - 1 ] = '\\0'	2782:1:85357:85409	1333015	5	True				
ANR	1333098	AssignmentExpression	ret [ * i ] . name [ R_ARRAY_SIZE ( ret [ * i ] . name ) - 1 ] = '\\0'		1333015	0		=			
ANR	1333099	ArrayIndexing	ret [ * i ] . name [ R_ARRAY_SIZE ( ret [ * i ] . name ) - 1 ]		1333015	0					
ANR	1333100	MemberAccess	ret [ * i ] . name		1333015	0					
ANR	1333101	ArrayIndexing	ret [ * i ]		1333015	0					
ANR	1333102	Identifier	ret		1333015	0					
ANR	1333103	UnaryOperationExpression	* i		1333015	1					
ANR	1333104	UnaryOperator	*		1333015	0					
ANR	1333105	Identifier	i		1333015	1					
ANR	1333106	Identifier	name		1333015	1					
ANR	1333107	AdditiveExpression	R_ARRAY_SIZE ( ret [ * i ] . name ) - 1		1333015	1		-			
ANR	1333108	CallExpression	R_ARRAY_SIZE ( ret [ * i ] . name )		1333015	0					
ANR	1333109	Callee	R_ARRAY_SIZE		1333015	0					
ANR	1333110	Identifier	R_ARRAY_SIZE		1333015	0					
ANR	1333111	ArgumentList	ret [ * i ] . name		1333015	1					
ANR	1333112	Argument	ret [ * i ] . name		1333015	0					
ANR	1333113	MemberAccess	ret [ * i ] . name		1333015	0					
ANR	1333114	ArrayIndexing	ret [ * i ]		1333015	0					
ANR	1333115	Identifier	ret		1333015	0					
ANR	1333116	UnaryOperationExpression	* i		1333015	1					
ANR	1333117	UnaryOperator	*		1333015	0					
ANR	1333118	Identifier	i		1333015	1					
ANR	1333119	Identifier	name		1333015	1					
ANR	1333120	PrimaryExpression	1		1333015	1					
ANR	1333121	PrimaryExpression	'\\0'		1333015	1					
ANR	1333122	ExpressionStatement	ret [ * i ] . last = 0	2783:1:85412:85428	1333015	6	True				
ANR	1333123	AssignmentExpression	ret [ * i ] . last = 0		1333015	0		=			
ANR	1333124	MemberAccess	ret [ * i ] . last		1333015	0					
ANR	1333125	ArrayIndexing	ret [ * i ]		1333015	0					
ANR	1333126	Identifier	ret		1333015	0					
ANR	1333127	UnaryOperationExpression	* i		1333015	1					
ANR	1333128	UnaryOperator	*		1333015	0					
ANR	1333129	Identifier	i		1333015	1					
ANR	1333130	Identifier	last		1333015	1					
ANR	1333131	PrimaryExpression	0		1333015	1					
ANR	1333132	ExpressionStatement	* i = * i + 1	2784:1:85431:85442	1333015	7	True				
ANR	1333133	AssignmentExpression	* i = * i + 1		1333015	0		=			
ANR	1333134	UnaryOperationExpression	* i		1333015	0					
ANR	1333135	UnaryOperator	*		1333015	0					
ANR	1333136	Identifier	i		1333015	1					
ANR	1333137	AdditiveExpression	* i + 1		1333015	1		+			
ANR	1333138	UnaryOperationExpression	* i		1333015	0					
ANR	1333139	UnaryOperator	*		1333015	0					
ANR	1333140	Identifier	i		1333015	1					
ANR	1333141	PrimaryExpression	1		1333015	1					
ANR	1333142	ReturnType	static void		1333015	1					
ANR	1333143	Identifier	create_section_from_phdr		1333015	2					
ANR	1333144	ParameterList	"ELFOBJ * bin , RBinElfSection * ret , int * i , const char * name , ut64 addr , ut64 sz"		1333015	3					
ANR	1333145	Parameter	ELFOBJ * bin	2773:37:85086:85096	1333015	0	True				
ANR	1333146	ParameterType	ELFOBJ *		1333015	0					
ANR	1333147	Identifier	bin		1333015	1					
ANR	1333148	Parameter	RBinElfSection * ret	2773:50:85099:85117	1333015	1	True				
ANR	1333149	ParameterType	RBinElfSection *		1333015	0					
ANR	1333150	Identifier	ret		1333015	1					
ANR	1333151	Parameter	int * i	2773:71:85120:85125	1333015	2	True				
ANR	1333152	ParameterType	int *		1333015	0					
ANR	1333153	Identifier	i		1333015	1					
ANR	1333154	Parameter	const char * name	2773:79:85128:85143	1333015	3	True				
ANR	1333155	ParameterType	const char *		1333015	0					
ANR	1333156	Identifier	name		1333015	1					
ANR	1333157	Parameter	ut64 addr	2773:97:85146:85154	1333015	4	True				
ANR	1333158	ParameterType	ut64		1333015	0					
ANR	1333159	Identifier	addr		1333015	1					
ANR	1333160	Parameter	ut64 sz	2773:108:85157:85163	1333015	5	True				
ANR	1333161	ParameterType	ut64		1333015	0					
ANR	1333162	Identifier	sz		1333015	1					
ANR	1333163	CFGEntryNode	ENTRY		1333015		True				
ANR	1333164	CFGExitNode	EXIT		1333015		True				
ANR	1333165	Symbol	ret		1333015						
ANR	1333166	Symbol	Elf_		1333015						
ANR	1333167	Symbol	* * i		1333015						
ANR	1333168	Symbol	* ret [ * i ] . name		1333015						
ANR	1333169	Symbol	bin		1333015						
ANR	1333170	Symbol	sz		1333015						
ANR	1333171	Symbol	i		1333015						
ANR	1333172	Symbol	ret [ * i ] . size		1333015						
ANR	1333173	Symbol	* ret		1333015						
ANR	1333174	Symbol	* i		1333015						
ANR	1333175	Symbol	* * ret		1333015						
ANR	1333176	Symbol	ret [ * i ] . offset		1333015						
ANR	1333177	Symbol	ret [ * i ] . last		1333015						
ANR	1333178	Symbol	ret [ * i ] . rva		1333015						
ANR	1333179	Symbol	name		1333015						
ANR	1333180	Symbol	r_bin_elf_v2p_new		1333015						
ANR	1333181	Symbol	R_ARRAY_SIZE		1333015						
ANR	1333182	Symbol	* * * i		1333015						
ANR	1333183	Symbol	ret [ * i ] . name		1333015						
ANR	1333184	Symbol	* R_ARRAY_SIZE		1333015						
ANR	1333185	Symbol	addr		1333015						
ANR	1333186	Function	get_sections_from_phdr	2787:0:85447:86839							
ANR	1333187	FunctionDef	get_sections_from_phdr (ELFOBJ * bin)		1333186	0					
ANR	1333188	CompoundStatement		2787:59:85506:86839	1333186	0					
ANR	1333189	IdentifierDeclStatement	RBinElfSection * ret ;	2788:1:85509:85528	1333186	0	True				
ANR	1333190	IdentifierDecl	* ret		1333186	0					
ANR	1333191	IdentifierDeclType	RBinElfSection *		1333186	0					
ANR	1333192	Identifier	ret		1333186	1					
ANR	1333193	IdentifierDeclStatement	"int i , num_sections = 0 ;"	2789:1:85531:85554	1333186	1	True				
ANR	1333194	IdentifierDecl	i		1333186	0					
ANR	1333195	IdentifierDeclType	int		1333186	0					
ANR	1333196	Identifier	i		1333186	1					
ANR	1333197	IdentifierDecl	num_sections = 0		1333186	1					
ANR	1333198	IdentifierDeclType	int		1333186	0					
ANR	1333199	Identifier	num_sections		1333186	1					
ANR	1333200	AssignmentExpression	num_sections = 0		1333186	2		=			
ANR	1333201	Identifier	num_sections		1333186	0					
ANR	1333202	PrimaryExpression	0		1333186	1					
ANR	1333203	IdentifierDeclStatement	"ut64 reldyn = 0 , relava = 0 , pltgotva = 0 , relva = 0 ;"	2790:1:85557:85609	1333186	2	True				
ANR	1333204	IdentifierDecl	reldyn = 0		1333186	0					
ANR	1333205	IdentifierDeclType	ut64		1333186	0					
ANR	1333206	Identifier	reldyn		1333186	1					
ANR	1333207	AssignmentExpression	reldyn = 0		1333186	2		=			
ANR	1333208	Identifier	reldyn		1333186	0					
ANR	1333209	PrimaryExpression	0		1333186	1					
ANR	1333210	IdentifierDecl	relava = 0		1333186	1					
ANR	1333211	IdentifierDeclType	ut64		1333186	0					
ANR	1333212	Identifier	relava		1333186	1					
ANR	1333213	AssignmentExpression	relava = 0		1333186	2		=			
ANR	1333214	Identifier	relava		1333186	0					
ANR	1333215	PrimaryExpression	0		1333186	1					
ANR	1333216	IdentifierDecl	pltgotva = 0		1333186	2					
ANR	1333217	IdentifierDeclType	ut64		1333186	0					
ANR	1333218	Identifier	pltgotva		1333186	1					
ANR	1333219	AssignmentExpression	pltgotva = 0		1333186	2		=			
ANR	1333220	Identifier	pltgotva		1333186	0					
ANR	1333221	PrimaryExpression	0		1333186	1					
ANR	1333222	IdentifierDecl	relva = 0		1333186	3					
ANR	1333223	IdentifierDeclType	ut64		1333186	0					
ANR	1333224	Identifier	relva		1333186	1					
ANR	1333225	AssignmentExpression	relva = 0		1333186	2		=			
ANR	1333226	Identifier	relva		1333186	0					
ANR	1333227	PrimaryExpression	0		1333186	1					
ANR	1333228	IdentifierDeclStatement	"ut64 reldynsz = 0 , relasz = 0 , pltgotsz = 0 ;"	2791:1:85612:85655	1333186	3	True				
ANR	1333229	IdentifierDecl	reldynsz = 0		1333186	0					
ANR	1333230	IdentifierDeclType	ut64		1333186	0					
ANR	1333231	Identifier	reldynsz		1333186	1					
ANR	1333232	AssignmentExpression	reldynsz = 0		1333186	2		=			
ANR	1333233	Identifier	reldynsz		1333186	0					
ANR	1333234	PrimaryExpression	0		1333186	1					
ANR	1333235	IdentifierDecl	relasz = 0		1333186	1					
ANR	1333236	IdentifierDeclType	ut64		1333186	0					
ANR	1333237	Identifier	relasz		1333186	1					
ANR	1333238	AssignmentExpression	relasz = 0		1333186	2		=			
ANR	1333239	Identifier	relasz		1333186	0					
ANR	1333240	PrimaryExpression	0		1333186	1					
ANR	1333241	IdentifierDecl	pltgotsz = 0		1333186	2					
ANR	1333242	IdentifierDeclType	ut64		1333186	0					
ANR	1333243	Identifier	pltgotsz		1333186	1					
ANR	1333244	AssignmentExpression	pltgotsz = 0		1333186	2		=			
ANR	1333245	Identifier	pltgotsz		1333186	0					
ANR	1333246	PrimaryExpression	0		1333186	1					
ANR	1333247	ExpressionStatement	"r_return_val_if_fail ( bin && bin -> phdr , NULL )"	2792:1:85658:85703	1333186	4	True				
ANR	1333248	CallExpression	"r_return_val_if_fail ( bin && bin -> phdr , NULL )"		1333186	0					
ANR	1333249	Callee	r_return_val_if_fail		1333186	0					
ANR	1333250	Identifier	r_return_val_if_fail		1333186	0					
ANR	1333251	ArgumentList	bin && bin -> phdr		1333186	1					
ANR	1333252	Argument	bin && bin -> phdr		1333186	0					
ANR	1333253	AndExpression	bin && bin -> phdr		1333186	0		&&			
ANR	1333254	Identifier	bin		1333186	0					
ANR	1333255	PtrMemberAccess	bin -> phdr		1333186	1					
ANR	1333256	Identifier	bin		1333186	0					
ANR	1333257	Identifier	phdr		1333186	1					
ANR	1333258	Argument	NULL		1333186	1					
ANR	1333259	Identifier	NULL		1333186	0					
ANR	1333260	IfStatement	if ( ! bin -> ehdr . e_phnum || ! bin -> dyn_buf )		1333186	5					
ANR	1333261	Condition	! bin -> ehdr . e_phnum || ! bin -> dyn_buf	2793:5:85710:85744	1333186	0	True				
ANR	1333262	OrExpression	! bin -> ehdr . e_phnum || ! bin -> dyn_buf		1333186	0		||			
ANR	1333263	UnaryOperationExpression	! bin -> ehdr . e_phnum		1333186	0					
ANR	1333264	UnaryOperator	!		1333186	0					
ANR	1333265	MemberAccess	bin -> ehdr . e_phnum		1333186	1					
ANR	1333266	PtrMemberAccess	bin -> ehdr		1333186	0					
ANR	1333267	Identifier	bin		1333186	0					
ANR	1333268	Identifier	ehdr		1333186	1					
ANR	1333269	Identifier	e_phnum		1333186	1					
ANR	1333270	UnaryOperationExpression	! bin -> dyn_buf		1333186	1					
ANR	1333271	UnaryOperator	!		1333186	0					
ANR	1333272	PtrMemberAccess	bin -> dyn_buf		1333186	1					
ANR	1333273	Identifier	bin		1333186	0					
ANR	1333274	Identifier	dyn_buf		1333186	1					
ANR	1333275	CompoundStatement		7:42:240:240	1333186	1					
ANR	1333276	ReturnStatement	return NULL ;	2794:2:85751:85762	1333186	0	True				
ANR	1333277	Identifier	NULL		1333186	0					
ANR	1333278	ForStatement	for ( i = 0 ; i < bin -> dyn_entries ; i ++ )		1333186	6					
ANR	1333279	ForInit	i = 0 ;	2797:6:85774:85779	1333186	0	True				
ANR	1333280	AssignmentExpression	i = 0		1333186	0		=			
ANR	1333281	Identifier	i		1333186	0					
ANR	1333282	PrimaryExpression	0		1333186	1					
ANR	1333283	Condition	i < bin -> dyn_entries	2797:13:85781:85800	1333186	1	True				
ANR	1333284	RelationalExpression	i < bin -> dyn_entries		1333186	0		<			
ANR	1333285	Identifier	i		1333186	0					
ANR	1333286	PtrMemberAccess	bin -> dyn_entries		1333186	1					
ANR	1333287	Identifier	bin		1333186	0					
ANR	1333288	Identifier	dyn_entries		1333186	1					
ANR	1333289	PostIncDecOperationExpression	i ++	2797:35:85803:85805	1333186	2	True				
ANR	1333290	Identifier	i		1333186	0					
ANR	1333291	IncDec	++		1333186	1					
ANR	1333292	CompoundStatement		11:40:301:301	1333186	3					
ANR	1333293	SwitchStatement	switch ( bin -> dyn_buf [ i ] . d_tag )		1333186	0					
ANR	1333294	Condition	bin -> dyn_buf [ i ] . d_tag	2798:10:85820:85840	1333186	0	True				
ANR	1333295	MemberAccess	bin -> dyn_buf [ i ] . d_tag		1333186	0					
ANR	1333296	ArrayIndexing	bin -> dyn_buf [ i ]		1333186	0					
ANR	1333297	PtrMemberAccess	bin -> dyn_buf		1333186	0					
ANR	1333298	Identifier	bin		1333186	0					
ANR	1333299	Identifier	dyn_buf		1333186	1					
ANR	1333300	Identifier	i		1333186	1					
ANR	1333301	Identifier	d_tag		1333186	1					
ANR	1333302	CompoundStatement		12:33:336:336	1333186	1					
ANR	1333303	Label	case DT_REL :	2799:2:85847:85858	1333186	0	True				
ANR	1333304	Identifier	DT_REL		1333186	0					
ANR	1333305	ExpressionStatement	reldyn = bin -> dyn_buf [ i ] . d_un . d_ptr	2800:3:85863:85898	1333186	1	True				
ANR	1333306	AssignmentExpression	reldyn = bin -> dyn_buf [ i ] . d_un . d_ptr		1333186	0		=			
ANR	1333307	Identifier	reldyn		1333186	0					
ANR	1333308	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_ptr		1333186	1					
ANR	1333309	MemberAccess	bin -> dyn_buf [ i ] . d_un		1333186	0					
ANR	1333310	ArrayIndexing	bin -> dyn_buf [ i ]		1333186	0					
ANR	1333311	PtrMemberAccess	bin -> dyn_buf		1333186	0					
ANR	1333312	Identifier	bin		1333186	0					
ANR	1333313	Identifier	dyn_buf		1333186	1					
ANR	1333314	Identifier	i		1333186	1					
ANR	1333315	Identifier	d_un		1333186	1					
ANR	1333316	Identifier	d_ptr		1333186	1					
ANR	1333317	ExpressionStatement	num_sections ++	2801:3:85903:85917	1333186	2	True				
ANR	1333318	PostIncDecOperationExpression	num_sections ++		1333186	0					
ANR	1333319	Identifier	num_sections		1333186	0					
ANR	1333320	IncDec	++		1333186	1					
ANR	1333321	BreakStatement	break ;	2802:3:85922:85927	1333186	3	True				
ANR	1333322	Label	case DT_RELA :	2803:2:85931:85943	1333186	4	True				
ANR	1333323	Identifier	DT_RELA		1333186	0					
ANR	1333324	ExpressionStatement	relva = bin -> dyn_buf [ i ] . d_un . d_ptr	2804:3:85948:85982	1333186	5	True				
ANR	1333325	AssignmentExpression	relva = bin -> dyn_buf [ i ] . d_un . d_ptr		1333186	0		=			
ANR	1333326	Identifier	relva		1333186	0					
ANR	1333327	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_ptr		1333186	1					
ANR	1333328	MemberAccess	bin -> dyn_buf [ i ] . d_un		1333186	0					
ANR	1333329	ArrayIndexing	bin -> dyn_buf [ i ]		1333186	0					
ANR	1333330	PtrMemberAccess	bin -> dyn_buf		1333186	0					
ANR	1333331	Identifier	bin		1333186	0					
ANR	1333332	Identifier	dyn_buf		1333186	1					
ANR	1333333	Identifier	i		1333186	1					
ANR	1333334	Identifier	d_un		1333186	1					
ANR	1333335	Identifier	d_ptr		1333186	1					
ANR	1333336	ExpressionStatement	num_sections ++	2805:3:85987:86001	1333186	6	True				
ANR	1333337	PostIncDecOperationExpression	num_sections ++		1333186	0					
ANR	1333338	Identifier	num_sections		1333186	0					
ANR	1333339	IncDec	++		1333186	1					
ANR	1333340	BreakStatement	break ;	2806:3:86006:86011	1333186	7	True				
ANR	1333341	Label	case DT_RELSZ :	2807:2:86015:86028	1333186	8	True				
ANR	1333342	Identifier	DT_RELSZ		1333186	0					
ANR	1333343	ExpressionStatement	reldynsz = bin -> dyn_buf [ i ] . d_un . d_val	2808:3:86033:86070	1333186	9	True				
ANR	1333344	AssignmentExpression	reldynsz = bin -> dyn_buf [ i ] . d_un . d_val		1333186	0		=			
ANR	1333345	Identifier	reldynsz		1333186	0					
ANR	1333346	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_val		1333186	1					
ANR	1333347	MemberAccess	bin -> dyn_buf [ i ] . d_un		1333186	0					
ANR	1333348	ArrayIndexing	bin -> dyn_buf [ i ]		1333186	0					
ANR	1333349	PtrMemberAccess	bin -> dyn_buf		1333186	0					
ANR	1333350	Identifier	bin		1333186	0					
ANR	1333351	Identifier	dyn_buf		1333186	1					
ANR	1333352	Identifier	i		1333186	1					
ANR	1333353	Identifier	d_un		1333186	1					
ANR	1333354	Identifier	d_val		1333186	1					
ANR	1333355	BreakStatement	break ;	2809:3:86075:86080	1333186	10	True				
ANR	1333356	Label	case DT_RELASZ :	2810:2:86084:86098	1333186	11	True				
ANR	1333357	Identifier	DT_RELASZ		1333186	0					
ANR	1333358	ExpressionStatement	relasz = bin -> dyn_buf [ i ] . d_un . d_val	2811:3:86103:86138	1333186	12	True				
ANR	1333359	AssignmentExpression	relasz = bin -> dyn_buf [ i ] . d_un . d_val		1333186	0		=			
ANR	1333360	Identifier	relasz		1333186	0					
ANR	1333361	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_val		1333186	1					
ANR	1333362	MemberAccess	bin -> dyn_buf [ i ] . d_un		1333186	0					
ANR	1333363	ArrayIndexing	bin -> dyn_buf [ i ]		1333186	0					
ANR	1333364	PtrMemberAccess	bin -> dyn_buf		1333186	0					
ANR	1333365	Identifier	bin		1333186	0					
ANR	1333366	Identifier	dyn_buf		1333186	1					
ANR	1333367	Identifier	i		1333186	1					
ANR	1333368	Identifier	d_un		1333186	1					
ANR	1333369	Identifier	d_val		1333186	1					
ANR	1333370	BreakStatement	break ;	2812:3:86143:86148	1333186	13	True				
ANR	1333371	Label	case DT_PLTGOT :	2813:2:86152:86166	1333186	14	True				
ANR	1333372	Identifier	DT_PLTGOT		1333186	0					
ANR	1333373	ExpressionStatement	pltgotva = bin -> dyn_buf [ i ] . d_un . d_ptr	2814:3:86171:86208	1333186	15	True				
ANR	1333374	AssignmentExpression	pltgotva = bin -> dyn_buf [ i ] . d_un . d_ptr		1333186	0		=			
ANR	1333375	Identifier	pltgotva		1333186	0					
ANR	1333376	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_ptr		1333186	1					
ANR	1333377	MemberAccess	bin -> dyn_buf [ i ] . d_un		1333186	0					
ANR	1333378	ArrayIndexing	bin -> dyn_buf [ i ]		1333186	0					
ANR	1333379	PtrMemberAccess	bin -> dyn_buf		1333186	0					
ANR	1333380	Identifier	bin		1333186	0					
ANR	1333381	Identifier	dyn_buf		1333186	1					
ANR	1333382	Identifier	i		1333186	1					
ANR	1333383	Identifier	d_un		1333186	1					
ANR	1333384	Identifier	d_ptr		1333186	1					
ANR	1333385	ExpressionStatement	num_sections ++	2815:3:86213:86227	1333186	16	True				
ANR	1333386	PostIncDecOperationExpression	num_sections ++		1333186	0					
ANR	1333387	Identifier	num_sections		1333186	0					
ANR	1333388	IncDec	++		1333186	1					
ANR	1333389	BreakStatement	break ;	2816:3:86232:86237	1333186	17	True				
ANR	1333390	Label	case DT_PLTRELSZ :	2817:2:86241:86257	1333186	18	True				
ANR	1333391	Identifier	DT_PLTRELSZ		1333186	0					
ANR	1333392	ExpressionStatement	pltgotsz = bin -> dyn_buf [ i ] . d_un . d_val	2818:3:86262:86299	1333186	19	True				
ANR	1333393	AssignmentExpression	pltgotsz = bin -> dyn_buf [ i ] . d_un . d_val		1333186	0		=			
ANR	1333394	Identifier	pltgotsz		1333186	0					
ANR	1333395	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_val		1333186	1					
ANR	1333396	MemberAccess	bin -> dyn_buf [ i ] . d_un		1333186	0					
ANR	1333397	ArrayIndexing	bin -> dyn_buf [ i ]		1333186	0					
ANR	1333398	PtrMemberAccess	bin -> dyn_buf		1333186	0					
ANR	1333399	Identifier	bin		1333186	0					
ANR	1333400	Identifier	dyn_buf		1333186	1					
ANR	1333401	Identifier	i		1333186	1					
ANR	1333402	Identifier	d_un		1333186	1					
ANR	1333403	Identifier	d_val		1333186	1					
ANR	1333404	BreakStatement	break ;	2819:3:86304:86309	1333186	20	True				
ANR	1333405	Label	case DT_JMPREL :	2820:2:86313:86327	1333186	21	True				
ANR	1333406	Identifier	DT_JMPREL		1333186	0					
ANR	1333407	ExpressionStatement	relava = bin -> dyn_buf [ i ] . d_un . d_ptr	2821:3:86332:86367	1333186	22	True				
ANR	1333408	AssignmentExpression	relava = bin -> dyn_buf [ i ] . d_un . d_ptr		1333186	0		=			
ANR	1333409	Identifier	relava		1333186	0					
ANR	1333410	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_ptr		1333186	1					
ANR	1333411	MemberAccess	bin -> dyn_buf [ i ] . d_un		1333186	0					
ANR	1333412	ArrayIndexing	bin -> dyn_buf [ i ]		1333186	0					
ANR	1333413	PtrMemberAccess	bin -> dyn_buf		1333186	0					
ANR	1333414	Identifier	bin		1333186	0					
ANR	1333415	Identifier	dyn_buf		1333186	1					
ANR	1333416	Identifier	i		1333186	1					
ANR	1333417	Identifier	d_un		1333186	1					
ANR	1333418	Identifier	d_ptr		1333186	1					
ANR	1333419	ExpressionStatement	num_sections ++	2822:3:86372:86386	1333186	23	True				
ANR	1333420	PostIncDecOperationExpression	num_sections ++		1333186	0					
ANR	1333421	Identifier	num_sections		1333186	0					
ANR	1333422	IncDec	++		1333186	1					
ANR	1333423	BreakStatement	break ;	2823:3:86391:86396	1333186	24	True				
ANR	1333424	Label	default :	2824:2:86400:86407	1333186	25	True				
ANR	1333425	Identifier	default		1333186	0					
ANR	1333426	BreakStatement	break ;	2824:11:86409:86414	1333186	26	True				
ANR	1333427	ExpressionStatement	"ret = calloc ( num_sections + 1 , sizeof ( RBinElfSection ) )"	2827:1:86424:86479	1333186	7	True				
ANR	1333428	AssignmentExpression	"ret = calloc ( num_sections + 1 , sizeof ( RBinElfSection ) )"		1333186	0		=			
ANR	1333429	Identifier	ret		1333186	0					
ANR	1333430	CallExpression	"calloc ( num_sections + 1 , sizeof ( RBinElfSection ) )"		1333186	1					
ANR	1333431	Callee	calloc		1333186	0					
ANR	1333432	Identifier	calloc		1333186	0					
ANR	1333433	ArgumentList	num_sections + 1		1333186	1					
ANR	1333434	Argument	num_sections + 1		1333186	0					
ANR	1333435	AdditiveExpression	num_sections + 1		1333186	0		+			
ANR	1333436	Identifier	num_sections		1333186	0					
ANR	1333437	PrimaryExpression	1		1333186	1					
ANR	1333438	Argument	sizeof ( RBinElfSection )		1333186	1					
ANR	1333439	SizeofExpression	sizeof ( RBinElfSection )		1333186	0					
ANR	1333440	Sizeof	sizeof		1333186	0					
ANR	1333441	SizeofOperand	RBinElfSection		1333186	1					
ANR	1333442	IfStatement	if ( ! ret )		1333186	8					
ANR	1333443	Condition	! ret	2828:5:86486:86489	1333186	0	True				
ANR	1333444	UnaryOperationExpression	! ret		1333186	0					
ANR	1333445	UnaryOperator	!		1333186	0					
ANR	1333446	Identifier	ret		1333186	1					
ANR	1333447	CompoundStatement		42:11:985:985	1333186	1					
ANR	1333448	ReturnStatement	return NULL ;	2829:2:86496:86507	1333186	0	True				
ANR	1333449	Identifier	NULL		1333186	0					
ANR	1333450	ExpressionStatement	i = 0	2831:1:86513:86518	1333186	9	True				
ANR	1333451	AssignmentExpression	i = 0		1333186	0		=			
ANR	1333452	Identifier	i		1333186	0					
ANR	1333453	PrimaryExpression	0		1333186	1					
ANR	1333454	ExpressionStatement	"create_section_from_phdr ( bin , ret , & i , "".rel.dyn"" , reldyn , reldynsz )"	2832:1:86521:86590	1333186	10	True				
ANR	1333455	CallExpression	"create_section_from_phdr ( bin , ret , & i , "".rel.dyn"" , reldyn , reldynsz )"		1333186	0					
ANR	1333456	Callee	create_section_from_phdr		1333186	0					
ANR	1333457	Identifier	create_section_from_phdr		1333186	0					
ANR	1333458	ArgumentList	bin		1333186	1					
ANR	1333459	Argument	bin		1333186	0					
ANR	1333460	Identifier	bin		1333186	0					
ANR	1333461	Argument	ret		1333186	1					
ANR	1333462	Identifier	ret		1333186	0					
ANR	1333463	Argument	& i		1333186	2					
ANR	1333464	UnaryOperationExpression	& i		1333186	0					
ANR	1333465	UnaryOperator	&		1333186	0					
ANR	1333466	Identifier	i		1333186	1					
ANR	1333467	Argument	""".rel.dyn"""		1333186	3					
ANR	1333468	PrimaryExpression	""".rel.dyn"""		1333186	0					
ANR	1333469	Argument	reldyn		1333186	4					
ANR	1333470	Identifier	reldyn		1333186	0					
ANR	1333471	Argument	reldynsz		1333186	5					
ANR	1333472	Identifier	reldynsz		1333186	0					
ANR	1333473	ExpressionStatement	"create_section_from_phdr ( bin , ret , & i , "".rela.plt"" , relava , pltgotsz )"	2833:1:86593:86663	1333186	11	True				
ANR	1333474	CallExpression	"create_section_from_phdr ( bin , ret , & i , "".rela.plt"" , relava , pltgotsz )"		1333186	0					
ANR	1333475	Callee	create_section_from_phdr		1333186	0					
ANR	1333476	Identifier	create_section_from_phdr		1333186	0					
ANR	1333477	ArgumentList	bin		1333186	1					
ANR	1333478	Argument	bin		1333186	0					
ANR	1333479	Identifier	bin		1333186	0					
ANR	1333480	Argument	ret		1333186	1					
ANR	1333481	Identifier	ret		1333186	0					
ANR	1333482	Argument	& i		1333186	2					
ANR	1333483	UnaryOperationExpression	& i		1333186	0					
ANR	1333484	UnaryOperator	&		1333186	0					
ANR	1333485	Identifier	i		1333186	1					
ANR	1333486	Argument	""".rela.plt"""		1333186	3					
ANR	1333487	PrimaryExpression	""".rela.plt"""		1333186	0					
ANR	1333488	Argument	relava		1333186	4					
ANR	1333489	Identifier	relava		1333186	0					
ANR	1333490	Argument	pltgotsz		1333186	5					
ANR	1333491	Identifier	pltgotsz		1333186	0					
ANR	1333492	ExpressionStatement	"create_section_from_phdr ( bin , ret , & i , "".rel.plt"" , relva , relasz )"	2834:1:86666:86732	1333186	12	True				
ANR	1333493	CallExpression	"create_section_from_phdr ( bin , ret , & i , "".rel.plt"" , relva , relasz )"		1333186	0					
ANR	1333494	Callee	create_section_from_phdr		1333186	0					
ANR	1333495	Identifier	create_section_from_phdr		1333186	0					
ANR	1333496	ArgumentList	bin		1333186	1					
ANR	1333497	Argument	bin		1333186	0					
ANR	1333498	Identifier	bin		1333186	0					
ANR	1333499	Argument	ret		1333186	1					
ANR	1333500	Identifier	ret		1333186	0					
ANR	1333501	Argument	& i		1333186	2					
ANR	1333502	UnaryOperationExpression	& i		1333186	0					
ANR	1333503	UnaryOperator	&		1333186	0					
ANR	1333504	Identifier	i		1333186	1					
ANR	1333505	Argument	""".rel.plt"""		1333186	3					
ANR	1333506	PrimaryExpression	""".rel.plt"""		1333186	0					
ANR	1333507	Argument	relva		1333186	4					
ANR	1333508	Identifier	relva		1333186	0					
ANR	1333509	Argument	relasz		1333186	5					
ANR	1333510	Identifier	relasz		1333186	0					
ANR	1333511	ExpressionStatement	"create_section_from_phdr ( bin , ret , & i , "".got.plt"" , pltgotva , pltgotsz )"	2835:1:86735:86806	1333186	13	True				
ANR	1333512	CallExpression	"create_section_from_phdr ( bin , ret , & i , "".got.plt"" , pltgotva , pltgotsz )"		1333186	0					
ANR	1333513	Callee	create_section_from_phdr		1333186	0					
ANR	1333514	Identifier	create_section_from_phdr		1333186	0					
ANR	1333515	ArgumentList	bin		1333186	1					
ANR	1333516	Argument	bin		1333186	0					
ANR	1333517	Identifier	bin		1333186	0					
ANR	1333518	Argument	ret		1333186	1					
ANR	1333519	Identifier	ret		1333186	0					
ANR	1333520	Argument	& i		1333186	2					
ANR	1333521	UnaryOperationExpression	& i		1333186	0					
ANR	1333522	UnaryOperator	&		1333186	0					
ANR	1333523	Identifier	i		1333186	1					
ANR	1333524	Argument	""".got.plt"""		1333186	3					
ANR	1333525	PrimaryExpression	""".got.plt"""		1333186	0					
ANR	1333526	Argument	pltgotva		1333186	4					
ANR	1333527	Identifier	pltgotva		1333186	0					
ANR	1333528	Argument	pltgotsz		1333186	5					
ANR	1333529	Identifier	pltgotsz		1333186	0					
ANR	1333530	ExpressionStatement	ret [ i ] . last = 1	2836:1:86809:86824	1333186	14	True				
ANR	1333531	AssignmentExpression	ret [ i ] . last = 1		1333186	0		=			
ANR	1333532	MemberAccess	ret [ i ] . last		1333186	0					
ANR	1333533	ArrayIndexing	ret [ i ]		1333186	0					
ANR	1333534	Identifier	ret		1333186	0					
ANR	1333535	Identifier	i		1333186	1					
ANR	1333536	Identifier	last		1333186	1					
ANR	1333537	PrimaryExpression	1		1333186	1					
ANR	1333538	ReturnStatement	return ret ;	2837:1:86827:86837	1333186	15	True				
ANR	1333539	Identifier	ret		1333186	0					
ANR	1333540	ReturnType	static RBinElfSection *		1333186	1					
ANR	1333541	Identifier	get_sections_from_phdr		1333186	2					
ANR	1333542	ParameterList	ELFOBJ * bin		1333186	3					
ANR	1333543	Parameter	ELFOBJ * bin	2787:46:85493:85503	1333186	0	True				
ANR	1333544	ParameterType	ELFOBJ *		1333186	0					
ANR	1333545	Identifier	bin		1333186	1					
ANR	1333546	CFGEntryNode	ENTRY		1333186		True				
ANR	1333547	CFGExitNode	EXIT		1333186		True				
ANR	1333548	Symbol	num_sections		1333186						
ANR	1333549	Symbol	relasz		1333186						
ANR	1333550	Symbol	bin		1333186						
ANR	1333551	Symbol	reldynsz		1333186						
ANR	1333552	Symbol	pltgotva		1333186						
ANR	1333553	Symbol	bin -> phdr		1333186						
ANR	1333554	Symbol	reldyn		1333186						
ANR	1333555	Symbol	calloc		1333186						
ANR	1333556	Symbol	* ret		1333186						
ANR	1333557	Symbol	pltgotsz		1333186						
ANR	1333558	Symbol	* bin		1333186						
ANR	1333559	Symbol	bin -> dyn_buf [ i ] . d_un . d_ptr		1333186						
ANR	1333560	Symbol	bin -> ehdr		1333186						
ANR	1333561	Symbol	relava		1333186						
ANR	1333562	Symbol	* * bin		1333186						
ANR	1333563	Symbol	bin -> dyn_buf [ i ] . d_un . d_val		1333186						
ANR	1333564	Symbol	* bin -> dyn_buf		1333186						
ANR	1333565	Symbol	ret [ i ] . last		1333186						
ANR	1333566	Symbol	ret		1333186						
ANR	1333567	Symbol	bin -> dyn_buf		1333186						
ANR	1333568	Symbol	NULL		1333186						
ANR	1333569	Symbol	bin -> dyn_entries		1333186						
ANR	1333570	Symbol	i		1333186						
ANR	1333571	Symbol	bin -> ehdr . e_phnum		1333186						
ANR	1333572	Symbol	bin -> dyn_buf [ i ] . d_tag		1333186						
ANR	1333573	Symbol	& i		1333186						
ANR	1333574	Symbol	relva		1333186						
ANR	1333575	Symbol	* i		1333186						
ANR	1333576	Symbol	bin -> dyn_buf [ i ] . d_un		1333186						
ANR	1333577	Function	r_bin_elf_get_sections	2840:16:86858:88629							
ANR	1333578	FunctionDef	r_bin_elf_get_sections (ELFOBJ * bin)		1333577	0					
ANR	1333579	CompoundStatement		2840:58:86900:88629	1333577	0					
ANR	1333580	IdentifierDeclStatement	RBinElfSection * ret = NULL ;	2841:1:86903:86929	1333577	0	True				
ANR	1333581	IdentifierDecl	* ret = NULL		1333577	0					
ANR	1333582	IdentifierDeclType	RBinElfSection *		1333577	0					
ANR	1333583	Identifier	ret		1333577	1					
ANR	1333584	AssignmentExpression	* ret = NULL		1333577	2		=			
ANR	1333585	Identifier	NULL		1333577	0					
ANR	1333586	Identifier	NULL		1333577	1					
ANR	1333587	IdentifierDeclStatement	"char unknown_s [ 32 ] , invalid_s [ 32 ] ;"	2842:1:86932:86965	1333577	1	True				
ANR	1333588	IdentifierDecl	unknown_s [ 32 ]		1333577	0					
ANR	1333589	IdentifierDeclType	char [ 32 ]		1333577	0					
ANR	1333590	Identifier	unknown_s		1333577	1					
ANR	1333591	PrimaryExpression	32		1333577	2					
ANR	1333592	IdentifierDecl	invalid_s [ 32 ]		1333577	1					
ANR	1333593	IdentifierDeclType	char [ 32 ]		1333577	0					
ANR	1333594	Identifier	invalid_s		1333577	1					
ANR	1333595	PrimaryExpression	32		1333577	2					
ANR	1333596	IdentifierDeclStatement	"int i , nidx , unknown_c = 0 , invalid_c = 0 ;"	2843:1:86968:87005	1333577	2	True				
ANR	1333597	IdentifierDecl	i		1333577	0					
ANR	1333598	IdentifierDeclType	int		1333577	0					
ANR	1333599	Identifier	i		1333577	1					
ANR	1333600	IdentifierDecl	nidx		1333577	1					
ANR	1333601	IdentifierDeclType	int		1333577	0					
ANR	1333602	Identifier	nidx		1333577	1					
ANR	1333603	IdentifierDecl	unknown_c = 0		1333577	2					
ANR	1333604	IdentifierDeclType	int		1333577	0					
ANR	1333605	Identifier	unknown_c		1333577	1					
ANR	1333606	AssignmentExpression	unknown_c = 0		1333577	2		=			
ANR	1333607	Identifier	unknown_c		1333577	0					
ANR	1333608	PrimaryExpression	0		1333577	1					
ANR	1333609	IdentifierDecl	invalid_c = 0		1333577	3					
ANR	1333610	IdentifierDeclType	int		1333577	0					
ANR	1333611	Identifier	invalid_c		1333577	1					
ANR	1333612	AssignmentExpression	invalid_c = 0		1333577	2		=			
ANR	1333613	Identifier	invalid_c		1333577	0					
ANR	1333614	PrimaryExpression	0		1333577	1					
ANR	1333615	ExpressionStatement	"r_return_val_if_fail ( bin , NULL )"	2845:1:87009:87041	1333577	3	True				
ANR	1333616	CallExpression	"r_return_val_if_fail ( bin , NULL )"		1333577	0					
ANR	1333617	Callee	r_return_val_if_fail		1333577	0					
ANR	1333618	Identifier	r_return_val_if_fail		1333577	0					
ANR	1333619	ArgumentList	bin		1333577	1					
ANR	1333620	Argument	bin		1333577	0					
ANR	1333621	Identifier	bin		1333577	0					
ANR	1333622	Argument	NULL		1333577	1					
ANR	1333623	Identifier	NULL		1333577	0					
ANR	1333624	IfStatement	if ( bin -> g_sections )		1333577	4					
ANR	1333625	Condition	bin -> g_sections	2846:5:87048:87062	1333577	0	True				
ANR	1333626	PtrMemberAccess	bin -> g_sections		1333577	0					
ANR	1333627	Identifier	bin		1333577	0					
ANR	1333628	Identifier	g_sections		1333577	1					
ANR	1333629	CompoundStatement		7:22:164:164	1333577	1					
ANR	1333630	ReturnStatement	return bin -> g_sections ;	2847:2:87069:87091	1333577	0	True				
ANR	1333631	PtrMemberAccess	bin -> g_sections		1333577	0					
ANR	1333632	Identifier	bin		1333577	0					
ANR	1333633	Identifier	g_sections		1333577	1					
ANR	1333634	IfStatement	if ( ! bin -> shdr )		1333577	5					
ANR	1333635	Condition	! bin -> shdr	2849:5:87101:87110	1333577	0	True				
ANR	1333636	UnaryOperationExpression	! bin -> shdr		1333577	0					
ANR	1333637	UnaryOperator	!		1333577	0					
ANR	1333638	PtrMemberAccess	bin -> shdr		1333577	1					
ANR	1333639	Identifier	bin		1333577	0					
ANR	1333640	Identifier	shdr		1333577	1					
ANR	1333641	CompoundStatement		10:17:212:212	1333577	1					
ANR	1333642	ReturnStatement	return get_sections_from_phdr ( bin ) ;	2851:2:87161:87196	1333577	0	True				
ANR	1333643	CallExpression	get_sections_from_phdr ( bin )		1333577	0					
ANR	1333644	Callee	get_sections_from_phdr		1333577	0					
ANR	1333645	Identifier	get_sections_from_phdr		1333577	0					
ANR	1333646	ArgumentList	bin		1333577	1					
ANR	1333647	Argument	bin		1333577	0					
ANR	1333648	Identifier	bin		1333577	0					
ANR	1333649	IfStatement	"if ( ! ( ret = calloc ( ( bin -> ehdr . e_shnum + 1 ) , sizeof ( RBinElfSection ) ) ) )"		1333577	6					
ANR	1333650	Condition	"! ( ret = calloc ( ( bin -> ehdr . e_shnum + 1 ) , sizeof ( RBinElfSection ) ) )"	2853:5:87206:87271	1333577	0	True				
ANR	1333651	UnaryOperationExpression	"! ( ret = calloc ( ( bin -> ehdr . e_shnum + 1 ) , sizeof ( RBinElfSection ) ) )"		1333577	0					
ANR	1333652	UnaryOperator	!		1333577	0					
ANR	1333653	AssignmentExpression	"ret = calloc ( ( bin -> ehdr . e_shnum + 1 ) , sizeof ( RBinElfSection ) )"		1333577	1		=			
ANR	1333654	Identifier	ret		1333577	0					
ANR	1333655	CallExpression	"calloc ( ( bin -> ehdr . e_shnum + 1 ) , sizeof ( RBinElfSection ) )"		1333577	1					
ANR	1333656	Callee	calloc		1333577	0					
ANR	1333657	Identifier	calloc		1333577	0					
ANR	1333658	ArgumentList	bin -> ehdr . e_shnum + 1		1333577	1					
ANR	1333659	Argument	bin -> ehdr . e_shnum + 1		1333577	0					
ANR	1333660	AdditiveExpression	bin -> ehdr . e_shnum + 1		1333577	0		+			
ANR	1333661	MemberAccess	bin -> ehdr . e_shnum		1333577	0					
ANR	1333662	PtrMemberAccess	bin -> ehdr		1333577	0					
ANR	1333663	Identifier	bin		1333577	0					
ANR	1333664	Identifier	ehdr		1333577	1					
ANR	1333665	Identifier	e_shnum		1333577	1					
ANR	1333666	PrimaryExpression	1		1333577	1					
ANR	1333667	Argument	sizeof ( RBinElfSection )		1333577	1					
ANR	1333668	SizeofExpression	sizeof ( RBinElfSection )		1333577	0					
ANR	1333669	Sizeof	sizeof		1333577	0					
ANR	1333670	SizeofOperand	RBinElfSection		1333577	1					
ANR	1333671	CompoundStatement		14:73:373:373	1333577	1					
ANR	1333672	ReturnStatement	return NULL ;	2854:2:87278:87289	1333577	0	True				
ANR	1333673	Identifier	NULL		1333577	0					
ANR	1333674	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; i ++ )		1333577	7					
ANR	1333675	ForInit	i = 0 ;	2856:6:87300:87305	1333577	0	True				
ANR	1333676	AssignmentExpression	i = 0		1333577	0		=			
ANR	1333677	Identifier	i		1333577	0					
ANR	1333678	PrimaryExpression	0		1333577	1					
ANR	1333679	Condition	i < bin -> ehdr . e_shnum	2856:13:87307:87327	1333577	1	True				
ANR	1333680	RelationalExpression	i < bin -> ehdr . e_shnum		1333577	0		<			
ANR	1333681	Identifier	i		1333577	0					
ANR	1333682	MemberAccess	bin -> ehdr . e_shnum		1333577	1					
ANR	1333683	PtrMemberAccess	bin -> ehdr		1333577	0					
ANR	1333684	Identifier	bin		1333577	0					
ANR	1333685	Identifier	ehdr		1333577	1					
ANR	1333686	Identifier	e_shnum		1333577	1					
ANR	1333687	PostIncDecOperationExpression	i ++	2856:36:87330:87332	1333577	2	True				
ANR	1333688	Identifier	i		1333577	0					
ANR	1333689	IncDec	++		1333577	1					
ANR	1333690	CompoundStatement		32:2:899:941	1333577	3					
ANR	1333691	ExpressionStatement	ret [ i ] . offset = bin -> shdr [ i ] . sh_offset	2857:2:87339:87377	1333577	0	True				
ANR	1333692	AssignmentExpression	ret [ i ] . offset = bin -> shdr [ i ] . sh_offset		1333577	0		=			
ANR	1333693	MemberAccess	ret [ i ] . offset		1333577	0					
ANR	1333694	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333695	Identifier	ret		1333577	0					
ANR	1333696	Identifier	i		1333577	1					
ANR	1333697	Identifier	offset		1333577	1					
ANR	1333698	MemberAccess	bin -> shdr [ i ] . sh_offset		1333577	1					
ANR	1333699	ArrayIndexing	bin -> shdr [ i ]		1333577	0					
ANR	1333700	PtrMemberAccess	bin -> shdr		1333577	0					
ANR	1333701	Identifier	bin		1333577	0					
ANR	1333702	Identifier	shdr		1333577	1					
ANR	1333703	Identifier	i		1333577	1					
ANR	1333704	Identifier	sh_offset		1333577	1					
ANR	1333705	ExpressionStatement	ret [ i ] . size = bin -> shdr [ i ] . sh_size	2858:2:87381:87415	1333577	1	True				
ANR	1333706	AssignmentExpression	ret [ i ] . size = bin -> shdr [ i ] . sh_size		1333577	0		=			
ANR	1333707	MemberAccess	ret [ i ] . size		1333577	0					
ANR	1333708	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333709	Identifier	ret		1333577	0					
ANR	1333710	Identifier	i		1333577	1					
ANR	1333711	Identifier	size		1333577	1					
ANR	1333712	MemberAccess	bin -> shdr [ i ] . sh_size		1333577	1					
ANR	1333713	ArrayIndexing	bin -> shdr [ i ]		1333577	0					
ANR	1333714	PtrMemberAccess	bin -> shdr		1333577	0					
ANR	1333715	Identifier	bin		1333577	0					
ANR	1333716	Identifier	shdr		1333577	1					
ANR	1333717	Identifier	i		1333577	1					
ANR	1333718	Identifier	sh_size		1333577	1					
ANR	1333719	ExpressionStatement	ret [ i ] . align = bin -> shdr [ i ] . sh_addralign	2859:2:87419:87459	1333577	2	True				
ANR	1333720	AssignmentExpression	ret [ i ] . align = bin -> shdr [ i ] . sh_addralign		1333577	0		=			
ANR	1333721	MemberAccess	ret [ i ] . align		1333577	0					
ANR	1333722	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333723	Identifier	ret		1333577	0					
ANR	1333724	Identifier	i		1333577	1					
ANR	1333725	Identifier	align		1333577	1					
ANR	1333726	MemberAccess	bin -> shdr [ i ] . sh_addralign		1333577	1					
ANR	1333727	ArrayIndexing	bin -> shdr [ i ]		1333577	0					
ANR	1333728	PtrMemberAccess	bin -> shdr		1333577	0					
ANR	1333729	Identifier	bin		1333577	0					
ANR	1333730	Identifier	shdr		1333577	1					
ANR	1333731	Identifier	i		1333577	1					
ANR	1333732	Identifier	sh_addralign		1333577	1					
ANR	1333733	ExpressionStatement	ret [ i ] . flags = bin -> shdr [ i ] . sh_flags	2860:2:87463:87499	1333577	3	True				
ANR	1333734	AssignmentExpression	ret [ i ] . flags = bin -> shdr [ i ] . sh_flags		1333577	0		=			
ANR	1333735	MemberAccess	ret [ i ] . flags		1333577	0					
ANR	1333736	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333737	Identifier	ret		1333577	0					
ANR	1333738	Identifier	i		1333577	1					
ANR	1333739	Identifier	flags		1333577	1					
ANR	1333740	MemberAccess	bin -> shdr [ i ] . sh_flags		1333577	1					
ANR	1333741	ArrayIndexing	bin -> shdr [ i ]		1333577	0					
ANR	1333742	PtrMemberAccess	bin -> shdr		1333577	0					
ANR	1333743	Identifier	bin		1333577	0					
ANR	1333744	Identifier	shdr		1333577	1					
ANR	1333745	Identifier	i		1333577	1					
ANR	1333746	Identifier	sh_flags		1333577	1					
ANR	1333747	ExpressionStatement	ret [ i ] . link = bin -> shdr [ i ] . sh_link	2861:2:87503:87537	1333577	4	True				
ANR	1333748	AssignmentExpression	ret [ i ] . link = bin -> shdr [ i ] . sh_link		1333577	0		=			
ANR	1333749	MemberAccess	ret [ i ] . link		1333577	0					
ANR	1333750	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333751	Identifier	ret		1333577	0					
ANR	1333752	Identifier	i		1333577	1					
ANR	1333753	Identifier	link		1333577	1					
ANR	1333754	MemberAccess	bin -> shdr [ i ] . sh_link		1333577	1					
ANR	1333755	ArrayIndexing	bin -> shdr [ i ]		1333577	0					
ANR	1333756	PtrMemberAccess	bin -> shdr		1333577	0					
ANR	1333757	Identifier	bin		1333577	0					
ANR	1333758	Identifier	shdr		1333577	1					
ANR	1333759	Identifier	i		1333577	1					
ANR	1333760	Identifier	sh_link		1333577	1					
ANR	1333761	ExpressionStatement	ret [ i ] . info = bin -> shdr [ i ] . sh_info	2862:2:87541:87575	1333577	5	True				
ANR	1333762	AssignmentExpression	ret [ i ] . info = bin -> shdr [ i ] . sh_info		1333577	0		=			
ANR	1333763	MemberAccess	ret [ i ] . info		1333577	0					
ANR	1333764	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333765	Identifier	ret		1333577	0					
ANR	1333766	Identifier	i		1333577	1					
ANR	1333767	Identifier	info		1333577	1					
ANR	1333768	MemberAccess	bin -> shdr [ i ] . sh_info		1333577	1					
ANR	1333769	ArrayIndexing	bin -> shdr [ i ]		1333577	0					
ANR	1333770	PtrMemberAccess	bin -> shdr		1333577	0					
ANR	1333771	Identifier	bin		1333577	0					
ANR	1333772	Identifier	shdr		1333577	1					
ANR	1333773	Identifier	i		1333577	1					
ANR	1333774	Identifier	sh_info		1333577	1					
ANR	1333775	ExpressionStatement	ret [ i ] . type = bin -> shdr [ i ] . sh_type	2863:2:87579:87613	1333577	6	True				
ANR	1333776	AssignmentExpression	ret [ i ] . type = bin -> shdr [ i ] . sh_type		1333577	0		=			
ANR	1333777	MemberAccess	ret [ i ] . type		1333577	0					
ANR	1333778	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333779	Identifier	ret		1333577	0					
ANR	1333780	Identifier	i		1333577	1					
ANR	1333781	Identifier	type		1333577	1					
ANR	1333782	MemberAccess	bin -> shdr [ i ] . sh_type		1333577	1					
ANR	1333783	ArrayIndexing	bin -> shdr [ i ]		1333577	0					
ANR	1333784	PtrMemberAccess	bin -> shdr		1333577	0					
ANR	1333785	Identifier	bin		1333577	0					
ANR	1333786	Identifier	shdr		1333577	1					
ANR	1333787	Identifier	i		1333577	1					
ANR	1333788	Identifier	sh_type		1333577	1					
ANR	1333789	IfStatement	if ( is_bin_etrel ( bin ) )		1333577	7					
ANR	1333790	Condition	is_bin_etrel ( bin )	2864:6:87621:87638	1333577	0	True				
ANR	1333791	CallExpression	is_bin_etrel ( bin )		1333577	0					
ANR	1333792	Callee	is_bin_etrel		1333577	0					
ANR	1333793	Identifier	is_bin_etrel		1333577	0					
ANR	1333794	ArgumentList	bin		1333577	1					
ANR	1333795	Argument	bin		1333577	0					
ANR	1333796	Identifier	bin		1333577	0					
ANR	1333797	CompoundStatement		25:26:740:740	1333577	1					
ANR	1333798	ExpressionStatement	ret [ i ] . rva = bin -> baddr + bin -> shdr [ i ] . sh_offset	2865:3:87646:87694	1333577	0	True				
ANR	1333799	AssignmentExpression	ret [ i ] . rva = bin -> baddr + bin -> shdr [ i ] . sh_offset		1333577	0		=			
ANR	1333800	MemberAccess	ret [ i ] . rva		1333577	0					
ANR	1333801	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333802	Identifier	ret		1333577	0					
ANR	1333803	Identifier	i		1333577	1					
ANR	1333804	Identifier	rva		1333577	1					
ANR	1333805	AdditiveExpression	bin -> baddr + bin -> shdr [ i ] . sh_offset		1333577	1		+			
ANR	1333806	PtrMemberAccess	bin -> baddr		1333577	0					
ANR	1333807	Identifier	bin		1333577	0					
ANR	1333808	Identifier	baddr		1333577	1					
ANR	1333809	MemberAccess	bin -> shdr [ i ] . sh_offset		1333577	1					
ANR	1333810	ArrayIndexing	bin -> shdr [ i ]		1333577	0					
ANR	1333811	PtrMemberAccess	bin -> shdr		1333577	0					
ANR	1333812	Identifier	bin		1333577	0					
ANR	1333813	Identifier	shdr		1333577	1					
ANR	1333814	Identifier	i		1333577	1					
ANR	1333815	Identifier	sh_offset		1333577	1					
ANR	1333816	ElseStatement	else		1333577	0					
ANR	1333817	CompoundStatement		27:9:804:804	1333577	0					
ANR	1333818	ExpressionStatement	ret [ i ] . rva = bin -> shdr [ i ] . sh_addr	2867:3:87710:87743	1333577	0	True				
ANR	1333819	AssignmentExpression	ret [ i ] . rva = bin -> shdr [ i ] . sh_addr		1333577	0		=			
ANR	1333820	MemberAccess	ret [ i ] . rva		1333577	0					
ANR	1333821	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333822	Identifier	ret		1333577	0					
ANR	1333823	Identifier	i		1333577	1					
ANR	1333824	Identifier	rva		1333577	1					
ANR	1333825	MemberAccess	bin -> shdr [ i ] . sh_addr		1333577	1					
ANR	1333826	ArrayIndexing	bin -> shdr [ i ]		1333577	0					
ANR	1333827	PtrMemberAccess	bin -> shdr		1333577	0					
ANR	1333828	Identifier	bin		1333577	0					
ANR	1333829	Identifier	shdr		1333577	1					
ANR	1333830	Identifier	i		1333577	1					
ANR	1333831	Identifier	sh_addr		1333577	1					
ANR	1333832	IdentifierDeclStatement	const int SHNAME = ( int ) bin -> shdr [ i ] . sh_name ;	2870:2:87752:87796	1333577	8	True				
ANR	1333833	IdentifierDecl	SHNAME = ( int ) bin -> shdr [ i ] . sh_name		1333577	0					
ANR	1333834	IdentifierDeclType	const int		1333577	0					
ANR	1333835	Identifier	SHNAME		1333577	1					
ANR	1333836	AssignmentExpression	SHNAME = ( int ) bin -> shdr [ i ] . sh_name		1333577	2		=			
ANR	1333837	Identifier	SHNAME		1333577	0					
ANR	1333838	CastExpression	( int ) bin -> shdr [ i ] . sh_name		1333577	1					
ANR	1333839	CastTarget	int		1333577	0					
ANR	1333840	MemberAccess	bin -> shdr [ i ] . sh_name		1333577	1					
ANR	1333841	ArrayIndexing	bin -> shdr [ i ]		1333577	0					
ANR	1333842	PtrMemberAccess	bin -> shdr		1333577	0					
ANR	1333843	Identifier	bin		1333577	0					
ANR	1333844	Identifier	shdr		1333577	1					
ANR	1333845	Identifier	i		1333577	1					
ANR	1333846	Identifier	sh_name		1333577	1					
ANR	1333847	IdentifierDeclStatement	const int SHSIZE = ( int ) bin -> shstrtab_size ;	2871:2:87800:87842	1333577	9	True				
ANR	1333848	IdentifierDecl	SHSIZE = ( int ) bin -> shstrtab_size		1333577	0					
ANR	1333849	IdentifierDeclType	const int		1333577	0					
ANR	1333850	Identifier	SHSIZE		1333577	1					
ANR	1333851	AssignmentExpression	SHSIZE = ( int ) bin -> shstrtab_size		1333577	2		=			
ANR	1333852	Identifier	SHSIZE		1333577	0					
ANR	1333853	CastExpression	( int ) bin -> shstrtab_size		1333577	1					
ANR	1333854	CastTarget	int		1333577	0					
ANR	1333855	PtrMemberAccess	bin -> shstrtab_size		1333577	1					
ANR	1333856	Identifier	bin		1333577	0					
ANR	1333857	Identifier	shstrtab_size		1333577	1					
ANR	1333858	ExpressionStatement	nidx = SHNAME	2872:2:87846:87859	1333577	10	True				
ANR	1333859	AssignmentExpression	nidx = SHNAME		1333577	0		=			
ANR	1333860	Identifier	nidx		1333577	0					
ANR	1333861	Identifier	SHNAME		1333577	1					
ANR	1333862	IfStatement	if ( nidx < 0 || ! bin -> shstrtab_section || ! bin -> shstrtab_size || nidx > bin -> shstrtab_size )		1333577	11					
ANR	1333863	Condition	nidx < 0 || ! bin -> shstrtab_section || ! bin -> shstrtab_size || nidx > bin -> shstrtab_size	2873:6:87867:87952	1333577	0	True				
ANR	1333864	OrExpression	nidx < 0 || ! bin -> shstrtab_section || ! bin -> shstrtab_size || nidx > bin -> shstrtab_size		1333577	0		||			
ANR	1333865	RelationalExpression	nidx < 0		1333577	0		<			
ANR	1333866	Identifier	nidx		1333577	0					
ANR	1333867	PrimaryExpression	0		1333577	1					
ANR	1333868	OrExpression	! bin -> shstrtab_section || ! bin -> shstrtab_size || nidx > bin -> shstrtab_size		1333577	1		||			
ANR	1333869	UnaryOperationExpression	! bin -> shstrtab_section		1333577	0					
ANR	1333870	UnaryOperator	!		1333577	0					
ANR	1333871	PtrMemberAccess	bin -> shstrtab_section		1333577	1					
ANR	1333872	Identifier	bin		1333577	0					
ANR	1333873	Identifier	shstrtab_section		1333577	1					
ANR	1333874	OrExpression	! bin -> shstrtab_size || nidx > bin -> shstrtab_size		1333577	1		||			
ANR	1333875	UnaryOperationExpression	! bin -> shstrtab_size		1333577	0					
ANR	1333876	UnaryOperator	!		1333577	0					
ANR	1333877	PtrMemberAccess	bin -> shstrtab_size		1333577	1					
ANR	1333878	Identifier	bin		1333577	0					
ANR	1333879	Identifier	shstrtab_size		1333577	1					
ANR	1333880	RelationalExpression	nidx > bin -> shstrtab_size		1333577	1		>			
ANR	1333881	Identifier	nidx		1333577	0					
ANR	1333882	PtrMemberAccess	bin -> shstrtab_size		1333577	1					
ANR	1333883	Identifier	bin		1333577	0					
ANR	1333884	Identifier	shstrtab_size		1333577	1					
ANR	1333885	CompoundStatement		34:94:1054:1054	1333577	1					
ANR	1333886	ExpressionStatement	"snprintf ( invalid_s , sizeof ( invalid_s ) , ""invalid%d"" , invalid_c )"	2874:3:87960:88024	1333577	0	True				
ANR	1333887	CallExpression	"snprintf ( invalid_s , sizeof ( invalid_s ) , ""invalid%d"" , invalid_c )"		1333577	0					
ANR	1333888	Callee	snprintf		1333577	0					
ANR	1333889	Identifier	snprintf		1333577	0					
ANR	1333890	ArgumentList	invalid_s		1333577	1					
ANR	1333891	Argument	invalid_s		1333577	0					
ANR	1333892	Identifier	invalid_s		1333577	0					
ANR	1333893	Argument	sizeof ( invalid_s )		1333577	1					
ANR	1333894	SizeofExpression	sizeof ( invalid_s )		1333577	0					
ANR	1333895	Sizeof	sizeof		1333577	0					
ANR	1333896	SizeofOperand	invalid_s		1333577	1					
ANR	1333897	Argument	"""invalid%d"""		1333577	2					
ANR	1333898	PrimaryExpression	"""invalid%d"""		1333577	0					
ANR	1333899	Argument	invalid_c		1333577	3					
ANR	1333900	Identifier	invalid_c		1333577	0					
ANR	1333901	ExpressionStatement	"strncpy ( ret [ i ] . name , invalid_s , sizeof ( ret [ i ] . name ) - 1 )"	2875:3:88029:88087	1333577	1	True				
ANR	1333902	CallExpression	"strncpy ( ret [ i ] . name , invalid_s , sizeof ( ret [ i ] . name ) - 1 )"		1333577	0					
ANR	1333903	Callee	strncpy		1333577	0					
ANR	1333904	Identifier	strncpy		1333577	0					
ANR	1333905	ArgumentList	ret [ i ] . name		1333577	1					
ANR	1333906	Argument	ret [ i ] . name		1333577	0					
ANR	1333907	MemberAccess	ret [ i ] . name		1333577	0					
ANR	1333908	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333909	Identifier	ret		1333577	0					
ANR	1333910	Identifier	i		1333577	1					
ANR	1333911	Identifier	name		1333577	1					
ANR	1333912	Argument	invalid_s		1333577	1					
ANR	1333913	Identifier	invalid_s		1333577	0					
ANR	1333914	Argument	sizeof ( ret [ i ] . name ) - 1		1333577	2					
ANR	1333915	AdditiveExpression	sizeof ( ret [ i ] . name ) - 1		1333577	0		-			
ANR	1333916	SizeofExpression	sizeof ( ret [ i ] . name )		1333577	0					
ANR	1333917	Sizeof	sizeof		1333577	0					
ANR	1333918	MemberAccess	ret [ i ] . name		1333577	1					
ANR	1333919	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333920	Identifier	ret		1333577	0					
ANR	1333921	Identifier	i		1333577	1					
ANR	1333922	Identifier	name		1333577	1					
ANR	1333923	PrimaryExpression	1		1333577	1					
ANR	1333924	ExpressionStatement	invalid_c ++	2876:3:88092:88103	1333577	2	True				
ANR	1333925	PostIncDecOperationExpression	invalid_c ++		1333577	0					
ANR	1333926	Identifier	invalid_c		1333577	0					
ANR	1333927	IncDec	++		1333577	1					
ANR	1333928	ElseStatement	else		1333577	0					
ANR	1333929	IfStatement	if ( bin -> shstrtab && ( SHNAME > 0 ) && ( SHNAME < SHSIZE ) )		1333577	0					
ANR	1333930	Condition	bin -> shstrtab && ( SHNAME > 0 ) && ( SHNAME < SHSIZE )	2877:13:88118:88167	1333577	0	True				
ANR	1333931	AndExpression	bin -> shstrtab && ( SHNAME > 0 ) && ( SHNAME < SHSIZE )		1333577	0		&&			
ANR	1333932	PtrMemberAccess	bin -> shstrtab		1333577	0					
ANR	1333933	Identifier	bin		1333577	0					
ANR	1333934	Identifier	shstrtab		1333577	1					
ANR	1333935	AndExpression	( SHNAME > 0 ) && ( SHNAME < SHSIZE )		1333577	1		&&			
ANR	1333936	RelationalExpression	SHNAME > 0		1333577	0		>			
ANR	1333937	Identifier	SHNAME		1333577	0					
ANR	1333938	PrimaryExpression	0		1333577	1					
ANR	1333939	RelationalExpression	SHNAME < SHSIZE		1333577	1		<			
ANR	1333940	Identifier	SHNAME		1333577	0					
ANR	1333941	Identifier	SHSIZE		1333577	1					
ANR	1333942	CompoundStatement		38:65:1269:1269	1333577	1					
ANR	1333943	ExpressionStatement	"strncpy ( ret [ i ] . name , & bin -> shstrtab [ SHNAME ] , sizeof ( ret [ i ] . name ) - 1 )"	2878:3:88175:88246	1333577	0	True				
ANR	1333944	CallExpression	"strncpy ( ret [ i ] . name , & bin -> shstrtab [ SHNAME ] , sizeof ( ret [ i ] . name ) - 1 )"		1333577	0					
ANR	1333945	Callee	strncpy		1333577	0					
ANR	1333946	Identifier	strncpy		1333577	0					
ANR	1333947	ArgumentList	ret [ i ] . name		1333577	1					
ANR	1333948	Argument	ret [ i ] . name		1333577	0					
ANR	1333949	MemberAccess	ret [ i ] . name		1333577	0					
ANR	1333950	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333951	Identifier	ret		1333577	0					
ANR	1333952	Identifier	i		1333577	1					
ANR	1333953	Identifier	name		1333577	1					
ANR	1333954	Argument	& bin -> shstrtab [ SHNAME ]		1333577	1					
ANR	1333955	UnaryOperationExpression	& bin -> shstrtab [ SHNAME ]		1333577	0					
ANR	1333956	UnaryOperator	&		1333577	0					
ANR	1333957	ArrayIndexing	bin -> shstrtab [ SHNAME ]		1333577	1					
ANR	1333958	PtrMemberAccess	bin -> shstrtab		1333577	0					
ANR	1333959	Identifier	bin		1333577	0					
ANR	1333960	Identifier	shstrtab		1333577	1					
ANR	1333961	Identifier	SHNAME		1333577	1					
ANR	1333962	Argument	sizeof ( ret [ i ] . name ) - 1		1333577	2					
ANR	1333963	AdditiveExpression	sizeof ( ret [ i ] . name ) - 1		1333577	0		-			
ANR	1333964	SizeofExpression	sizeof ( ret [ i ] . name )		1333577	0					
ANR	1333965	Sizeof	sizeof		1333577	0					
ANR	1333966	MemberAccess	ret [ i ] . name		1333577	1					
ANR	1333967	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333968	Identifier	ret		1333577	0					
ANR	1333969	Identifier	i		1333577	1					
ANR	1333970	Identifier	name		1333577	1					
ANR	1333971	PrimaryExpression	1		1333577	1					
ANR	1333972	ElseStatement	else		1333577	0					
ANR	1333973	IfStatement	if ( bin -> shdr [ i ] . sh_type == SHT_NULL )		1333577	0					
ANR	1333974	Condition	bin -> shdr [ i ] . sh_type == SHT_NULL	2879:13:88261:88292	1333577	0	True				
ANR	1333975	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_NULL		1333577	0		==			
ANR	1333976	MemberAccess	bin -> shdr [ i ] . sh_type		1333577	0					
ANR	1333977	ArrayIndexing	bin -> shdr [ i ]		1333577	0					
ANR	1333978	PtrMemberAccess	bin -> shdr		1333577	0					
ANR	1333979	Identifier	bin		1333577	0					
ANR	1333980	Identifier	shdr		1333577	1					
ANR	1333981	Identifier	i		1333577	1					
ANR	1333982	Identifier	sh_type		1333577	1					
ANR	1333983	Identifier	SHT_NULL		1333577	1					
ANR	1333984	CompoundStatement		40:47:1394:1394	1333577	1					
ANR	1333985	ExpressionStatement	ret [ i ] . name [ 0 ] = '\\0'	2881:3:88345:88366	1333577	0	True				
ANR	1333986	AssignmentExpression	ret [ i ] . name [ 0 ] = '\\0'		1333577	0		=			
ANR	1333987	ArrayIndexing	ret [ i ] . name [ 0 ]		1333577	0					
ANR	1333988	MemberAccess	ret [ i ] . name		1333577	0					
ANR	1333989	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1333990	Identifier	ret		1333577	0					
ANR	1333991	Identifier	i		1333577	1					
ANR	1333992	Identifier	name		1333577	1					
ANR	1333993	PrimaryExpression	0		1333577	1					
ANR	1333994	PrimaryExpression	'\\0'		1333577	1					
ANR	1333995	ElseStatement	else		1333577	0					
ANR	1333996	CompoundStatement		43:9:1476:1476	1333577	0					
ANR	1333997	ExpressionStatement	"snprintf ( unknown_s , sizeof ( unknown_s ) , ""unknown%d"" , unknown_c )"	2883:3:88382:88446	1333577	0	True				
ANR	1333998	CallExpression	"snprintf ( unknown_s , sizeof ( unknown_s ) , ""unknown%d"" , unknown_c )"		1333577	0					
ANR	1333999	Callee	snprintf		1333577	0					
ANR	1334000	Identifier	snprintf		1333577	0					
ANR	1334001	ArgumentList	unknown_s		1333577	1					
ANR	1334002	Argument	unknown_s		1333577	0					
ANR	1334003	Identifier	unknown_s		1333577	0					
ANR	1334004	Argument	sizeof ( unknown_s )		1333577	1					
ANR	1334005	SizeofExpression	sizeof ( unknown_s )		1333577	0					
ANR	1334006	Sizeof	sizeof		1333577	0					
ANR	1334007	SizeofOperand	unknown_s		1333577	1					
ANR	1334008	Argument	"""unknown%d"""		1333577	2					
ANR	1334009	PrimaryExpression	"""unknown%d"""		1333577	0					
ANR	1334010	Argument	unknown_c		1333577	3					
ANR	1334011	Identifier	unknown_c		1333577	0					
ANR	1334012	ExpressionStatement	"strncpy ( ret [ i ] . name , unknown_s , sizeof ( ret [ i ] . name ) - 1 )"	2884:3:88451:88509	1333577	1	True				
ANR	1334013	CallExpression	"strncpy ( ret [ i ] . name , unknown_s , sizeof ( ret [ i ] . name ) - 1 )"		1333577	0					
ANR	1334014	Callee	strncpy		1333577	0					
ANR	1334015	Identifier	strncpy		1333577	0					
ANR	1334016	ArgumentList	ret [ i ] . name		1333577	1					
ANR	1334017	Argument	ret [ i ] . name		1333577	0					
ANR	1334018	MemberAccess	ret [ i ] . name		1333577	0					
ANR	1334019	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1334020	Identifier	ret		1333577	0					
ANR	1334021	Identifier	i		1333577	1					
ANR	1334022	Identifier	name		1333577	1					
ANR	1334023	Argument	unknown_s		1333577	1					
ANR	1334024	Identifier	unknown_s		1333577	0					
ANR	1334025	Argument	sizeof ( ret [ i ] . name ) - 1		1333577	2					
ANR	1334026	AdditiveExpression	sizeof ( ret [ i ] . name ) - 1		1333577	0		-			
ANR	1334027	SizeofExpression	sizeof ( ret [ i ] . name )		1333577	0					
ANR	1334028	Sizeof	sizeof		1333577	0					
ANR	1334029	MemberAccess	ret [ i ] . name		1333577	1					
ANR	1334030	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1334031	Identifier	ret		1333577	0					
ANR	1334032	Identifier	i		1333577	1					
ANR	1334033	Identifier	name		1333577	1					
ANR	1334034	PrimaryExpression	1		1333577	1					
ANR	1334035	ExpressionStatement	unknown_c ++	2885:3:88514:88525	1333577	2	True				
ANR	1334036	PostIncDecOperationExpression	unknown_c ++		1333577	0					
ANR	1334037	Identifier	unknown_c		1333577	0					
ANR	1334038	IncDec	++		1333577	1					
ANR	1334039	ExpressionStatement	ret [ i ] . name [ ELF_STRING_LENGTH - 1 ] = '\\0'	2887:2:88533:88574	1333577	12	True				
ANR	1334040	AssignmentExpression	ret [ i ] . name [ ELF_STRING_LENGTH - 1 ] = '\\0'		1333577	0		=			
ANR	1334041	ArrayIndexing	ret [ i ] . name [ ELF_STRING_LENGTH - 1 ]		1333577	0					
ANR	1334042	MemberAccess	ret [ i ] . name		1333577	0					
ANR	1334043	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1334044	Identifier	ret		1333577	0					
ANR	1334045	Identifier	i		1333577	1					
ANR	1334046	Identifier	name		1333577	1					
ANR	1334047	AdditiveExpression	ELF_STRING_LENGTH - 1		1333577	1		-			
ANR	1334048	Identifier	ELF_STRING_LENGTH		1333577	0					
ANR	1334049	PrimaryExpression	1		1333577	1					
ANR	1334050	PrimaryExpression	'\\0'		1333577	1					
ANR	1334051	ExpressionStatement	ret [ i ] . last = 0	2888:2:88578:88593	1333577	13	True				
ANR	1334052	AssignmentExpression	ret [ i ] . last = 0		1333577	0		=			
ANR	1334053	MemberAccess	ret [ i ] . last		1333577	0					
ANR	1334054	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1334055	Identifier	ret		1333577	0					
ANR	1334056	Identifier	i		1333577	1					
ANR	1334057	Identifier	last		1333577	1					
ANR	1334058	PrimaryExpression	0		1333577	1					
ANR	1334059	ExpressionStatement	ret [ i ] . last = 1	2890:1:88599:88614	1333577	8	True				
ANR	1334060	AssignmentExpression	ret [ i ] . last = 1		1333577	0		=			
ANR	1334061	MemberAccess	ret [ i ] . last		1333577	0					
ANR	1334062	ArrayIndexing	ret [ i ]		1333577	0					
ANR	1334063	Identifier	ret		1333577	0					
ANR	1334064	Identifier	i		1333577	1					
ANR	1334065	Identifier	last		1333577	1					
ANR	1334066	PrimaryExpression	1		1333577	1					
ANR	1334067	ReturnStatement	return ret ;	2891:1:88617:88627	1333577	9	True				
ANR	1334068	Identifier	ret		1333577	0					
ANR	1334069	ReturnType	Elf_		1333577	1					
ANR	1334070	Identifier	( r_bin_elf_get_sections )		1333577	2					
ANR	1334071	Identifier	r_bin_elf_get_sections		1333577	3					
ANR	1334072	ParameterList	ELFOBJ * bin		1333577	4					
ANR	1334073	Parameter	ELFOBJ * bin	2840:45:86887:86897	1333577	0	True				
ANR	1334074	ParameterType	ELFOBJ *		1333577	0					
ANR	1334075	Identifier	bin		1333577	1					
ANR	1334076	CFGEntryNode	ENTRY		1333577		True				
ANR	1334077	CFGExitNode	EXIT		1333577		True				
ANR	1334078	Symbol	invalid_c		1333577						
ANR	1334079	Symbol	bin		1333577						
ANR	1334080	Symbol	* bin -> shdr		1333577						
ANR	1334081	Symbol	ret [ i ] . info		1333577						
ANR	1334082	Symbol	bin -> g_sections		1333577						
ANR	1334083	Symbol	bin -> ehdr		1333577						
ANR	1334084	Symbol	ret [ i ] . last		1333577						
ANR	1334085	Symbol	ret [ i ] . offset		1333577						
ANR	1334086	Symbol	ret		1333577						
ANR	1334087	Symbol	* * i		1333577						
ANR	1334088	Symbol	NULL		1333577						
ANR	1334089	Symbol	bin -> shdr [ i ] . sh_size		1333577						
ANR	1334090	Symbol	bin -> shdr [ i ] . sh_name		1333577						
ANR	1334091	Symbol	ELF_STRING_LENGTH		1333577						
ANR	1334092	Symbol	bin -> shdr [ i ] . sh_addr		1333577						
ANR	1334093	Symbol	invalid_s		1333577						
ANR	1334094	Symbol	bin -> shdr [ i ] . sh_offset		1333577						
ANR	1334095	Symbol	ret [ i ] . flags		1333577						
ANR	1334096	Symbol	ret [ i ] . type		1333577						
ANR	1334097	Symbol	nidx		1333577						
ANR	1334098	Symbol	ret [ i ] . rva		1333577						
ANR	1334099	Symbol	bin -> shdr [ i ] . sh_link		1333577						
ANR	1334100	Symbol	bin -> ehdr . e_shnum		1333577						
ANR	1334101	Symbol	bin -> shstrtab_size		1333577						
ANR	1334102	Symbol	bin -> shstrtab		1333577						
ANR	1334103	Symbol	ret [ i ] . align		1333577						
ANR	1334104	Symbol	is_bin_etrel		1333577						
ANR	1334105	Symbol	calloc		1333577						
ANR	1334106	Symbol	* ret		1333577						
ANR	1334107	Symbol	get_sections_from_phdr		1333577						
ANR	1334108	Symbol	* bin		1333577						
ANR	1334109	Symbol	bin -> shstrtab_section		1333577						
ANR	1334110	Symbol	bin -> shdr [ i ] . sh_flags		1333577						
ANR	1334111	Symbol	* * bin		1333577						
ANR	1334112	Symbol	SHNAME		1333577						
ANR	1334113	Symbol	SHT_NULL		1333577						
ANR	1334114	Symbol	ret [ i ] . name		1333577						
ANR	1334115	Symbol	unknown_c		1333577						
ANR	1334116	Symbol	i		1333577						
ANR	1334117	Symbol	SHSIZE		1333577						
ANR	1334118	Symbol	ret [ i ] . size		1333577						
ANR	1334119	Symbol	bin -> baddr		1333577						
ANR	1334120	Symbol	bin -> shdr		1333577						
ANR	1334121	Symbol	bin -> shdr [ i ] . sh_info		1333577						
ANR	1334122	Symbol	bin -> shdr [ i ] . sh_addralign		1333577						
ANR	1334123	Symbol	ret [ i ] . link		1333577						
ANR	1334124	Symbol	* i		1333577						
ANR	1334125	Symbol	* ELF_STRING_LENGTH		1333577						
ANR	1334126	Symbol	unknown_s		1333577						
ANR	1334127	Symbol	* ret [ i ] . name		1333577						
ANR	1334128	Symbol	* * ret		1333577						
ANR	1334129	Symbol	bin -> shdr [ i ] . sh_type		1333577						
ANR	1334130	Function	get_symbols_from_phdr	2960:0:90756:96253							
ANR	1334131	FunctionDef	"get_symbols_from_phdr (ELFOBJ * bin , int type)"		1334130	0					
ANR	1334132	CompoundStatement		2960:67:90823:96253	1334130	0					
ANR	1334133	ExpressionStatement	Elf_ ( Sym ) * sym = NULL	2961:1:90826:90847	1334130	0	True				
ANR	1334134	AssignmentExpression	Elf_ ( Sym ) * sym = NULL		1334130	0		=			
ANR	1334135	MultiplicativeExpression	Elf_ ( Sym ) * sym		1334130	0		*			
ANR	1334136	CallExpression	Elf_ ( Sym )		1334130	0					
ANR	1334137	Callee	Elf_		1334130	0					
ANR	1334138	Identifier	Elf_		1334130	0					
ANR	1334139	ArgumentList	Sym		1334130	1					
ANR	1334140	Argument	Sym		1334130	0					
ANR	1334141	Identifier	Sym		1334130	0					
ANR	1334142	Identifier	sym		1334130	1					
ANR	1334143	Identifier	NULL		1334130	1					
ANR	1334144	Statement	Elf_	2962:1:90850:90853	1334130	1	True				
ANR	1334145	ExpressionStatement	( Addr ) addr_sym_table = 0	2962:5:90854:90879	1334130	2	True				
ANR	1334146	AssignmentExpression	( Addr ) addr_sym_table = 0		1334130	0		=			
ANR	1334147	CastExpression	( Addr ) addr_sym_table		1334130	0					
ANR	1334148	CastTarget	Addr		1334130	0					
ANR	1334149	Identifier	addr_sym_table		1334130	1					
ANR	1334150	PrimaryExpression	0		1334130	1					
ANR	1334151	IdentifierDeclStatement	ut8 s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 } ;	2963:1:90882:90913	1334130	3	True				
ANR	1334152	IdentifierDecl	s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 }		1334130	0					
ANR	1334153	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Sym ) ) ]		1334130	0					
ANR	1334154	Identifier	s		1334130	1					
ANR	1334155	SizeofExpression	sizeof ( Elf_ ( Sym ) )		1334130	2					
ANR	1334156	Sizeof	sizeof		1334130	0					
ANR	1334157	CallExpression	Elf_ ( Sym )		1334130	1					
ANR	1334158	Callee	Elf_		1334130	0					
ANR	1334159	Identifier	Elf_		1334130	0					
ANR	1334160	ArgumentList	Sym		1334130	1					
ANR	1334161	Argument	Sym		1334130	0					
ANR	1334162	Identifier	Sym		1334130	0					
ANR	1334163	AssignmentExpression	s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 }		1334130	3		=			
ANR	1334164	Identifier	s		1334130	0					
ANR	1334165	InitializerList	0		1334130	1					
ANR	1334166	PrimaryExpression	0		1334130	0					
ANR	1334167	IdentifierDeclStatement	RBinElfSymbol * ret = NULL ;	2964:1:90916:90941	1334130	4	True				
ANR	1334168	IdentifierDecl	* ret = NULL		1334130	0					
ANR	1334169	IdentifierDeclType	RBinElfSymbol *		1334130	0					
ANR	1334170	Identifier	ret		1334130	1					
ANR	1334171	AssignmentExpression	* ret = NULL		1334130	2		=			
ANR	1334172	Identifier	NULL		1334130	0					
ANR	1334173	Identifier	NULL		1334130	1					
ANR	1334174	IdentifierDeclStatement	"int i , j , r , tsize , nsym , ret_ctr ;"	2965:1:90944:90977	1334130	5	True				
ANR	1334175	IdentifierDecl	i		1334130	0					
ANR	1334176	IdentifierDeclType	int		1334130	0					
ANR	1334177	Identifier	i		1334130	1					
ANR	1334178	IdentifierDecl	j		1334130	1					
ANR	1334179	IdentifierDeclType	int		1334130	0					
ANR	1334180	Identifier	j		1334130	1					
ANR	1334181	IdentifierDecl	r		1334130	2					
ANR	1334182	IdentifierDeclType	int		1334130	0					
ANR	1334183	Identifier	r		1334130	1					
ANR	1334184	IdentifierDecl	tsize		1334130	3					
ANR	1334185	IdentifierDeclType	int		1334130	0					
ANR	1334186	Identifier	tsize		1334130	1					
ANR	1334187	IdentifierDecl	nsym		1334130	4					
ANR	1334188	IdentifierDeclType	int		1334130	0					
ANR	1334189	Identifier	nsym		1334130	1					
ANR	1334190	IdentifierDecl	ret_ctr		1334130	5					
ANR	1334191	IdentifierDeclType	int		1334130	0					
ANR	1334192	Identifier	ret_ctr		1334130	1					
ANR	1334193	IdentifierDeclStatement	"ut64 toffset = 0 , tmp_offset ;"	2966:1:90980:91008	1334130	6	True				
ANR	1334194	IdentifierDecl	toffset = 0		1334130	0					
ANR	1334195	IdentifierDeclType	ut64		1334130	0					
ANR	1334196	Identifier	toffset		1334130	1					
ANR	1334197	AssignmentExpression	toffset = 0		1334130	2		=			
ANR	1334198	Identifier	toffset		1334130	0					
ANR	1334199	PrimaryExpression	0		1334130	1					
ANR	1334200	IdentifierDecl	tmp_offset		1334130	1					
ANR	1334201	IdentifierDeclType	ut64		1334130	0					
ANR	1334202	Identifier	tmp_offset		1334130	1					
ANR	1334203	IdentifierDeclStatement	"ut32 size , sym_size = 0 ;"	2967:1:91011:91034	1334130	7	True				
ANR	1334204	IdentifierDecl	size		1334130	0					
ANR	1334205	IdentifierDeclType	ut32		1334130	0					
ANR	1334206	Identifier	size		1334130	1					
ANR	1334207	IdentifierDecl	sym_size = 0		1334130	1					
ANR	1334208	IdentifierDeclType	ut32		1334130	0					
ANR	1334209	Identifier	sym_size		1334130	1					
ANR	1334210	AssignmentExpression	sym_size = 0		1334130	2		=			
ANR	1334211	Identifier	sym_size		1334130	0					
ANR	1334212	PrimaryExpression	0		1334130	1					
ANR	1334213	IfStatement	if ( ! bin || ! bin -> phdr || ! bin -> ehdr . e_phnum )		1334130	8					
ANR	1334214	Condition	! bin || ! bin -> phdr || ! bin -> ehdr . e_phnum	2969:5:91042:91081	1334130	0	True				
ANR	1334215	OrExpression	! bin || ! bin -> phdr || ! bin -> ehdr . e_phnum		1334130	0		||			
ANR	1334216	UnaryOperationExpression	! bin		1334130	0					
ANR	1334217	UnaryOperator	!		1334130	0					
ANR	1334218	Identifier	bin		1334130	1					
ANR	1334219	OrExpression	! bin -> phdr || ! bin -> ehdr . e_phnum		1334130	1		||			
ANR	1334220	UnaryOperationExpression	! bin -> phdr		1334130	0					
ANR	1334221	UnaryOperator	!		1334130	0					
ANR	1334222	PtrMemberAccess	bin -> phdr		1334130	1					
ANR	1334223	Identifier	bin		1334130	0					
ANR	1334224	Identifier	phdr		1334130	1					
ANR	1334225	UnaryOperationExpression	! bin -> ehdr . e_phnum		1334130	1					
ANR	1334226	UnaryOperator	!		1334130	0					
ANR	1334227	MemberAccess	bin -> ehdr . e_phnum		1334130	1					
ANR	1334228	PtrMemberAccess	bin -> ehdr		1334130	0					
ANR	1334229	Identifier	bin		1334130	0					
ANR	1334230	Identifier	ehdr		1334130	1					
ANR	1334231	Identifier	e_phnum		1334130	1					
ANR	1334232	CompoundStatement		10:47:260:260	1334130	1					
ANR	1334233	ReturnStatement	return NULL ;	2970:2:91088:91099	1334130	0	True				
ANR	1334234	Identifier	NULL		1334130	0					
ANR	1334235	ForStatement	for ( j = 0 ; j < bin -> dyn_entries ; j ++ )		1334130	9					
ANR	1334236	ForInit	j = 0 ;	2972:6:91110:91115	1334130	0	True				
ANR	1334237	AssignmentExpression	j = 0		1334130	0		=			
ANR	1334238	Identifier	j		1334130	0					
ANR	1334239	PrimaryExpression	0		1334130	1					
ANR	1334240	Condition	j < bin -> dyn_entries	2972:13:91117:91136	1334130	1	True				
ANR	1334241	RelationalExpression	j < bin -> dyn_entries		1334130	0		<			
ANR	1334242	Identifier	j		1334130	0					
ANR	1334243	PtrMemberAccess	bin -> dyn_entries		1334130	1					
ANR	1334244	Identifier	bin		1334130	0					
ANR	1334245	Identifier	dyn_entries		1334130	1					
ANR	1334246	PostIncDecOperationExpression	j ++	2972:35:91139:91141	1334130	2	True				
ANR	1334247	Identifier	j		1334130	0					
ANR	1334248	IncDec	++		1334130	1					
ANR	1334249	CompoundStatement		13:40:320:320	1334130	3					
ANR	1334250	SwitchStatement	switch ( bin -> dyn_buf [ j ] . d_tag )		1334130	0					
ANR	1334251	Condition	bin -> dyn_buf [ j ] . d_tag	2973:10:91156:91176	1334130	0	True				
ANR	1334252	MemberAccess	bin -> dyn_buf [ j ] . d_tag		1334130	0					
ANR	1334253	ArrayIndexing	bin -> dyn_buf [ j ]		1334130	0					
ANR	1334254	PtrMemberAccess	bin -> dyn_buf		1334130	0					
ANR	1334255	Identifier	bin		1334130	0					
ANR	1334256	Identifier	dyn_buf		1334130	1					
ANR	1334257	Identifier	j		1334130	1					
ANR	1334258	Identifier	d_tag		1334130	1					
ANR	1334259	CompoundStatement		14:33:355:355	1334130	1					
ANR	1334260	Statement	case	2974:2:91183:91186	1334130	0	True				
ANR	1334261	Statement	(	2974:7:91188:91188	1334130	1	True				
ANR	1334262	Statement	DT_SYMTAB	2974:8:91189:91197	1334130	2	True				
ANR	1334263	Statement	)	2974:17:91198:91198	1334130	3	True				
ANR	1334264	Statement	:	2974:18:91199:91199	1334130	4	True				
ANR	1334265	ExpressionStatement	"addr_sym_table = Elf_ ( r_bin_elf_v2p ) ( bin , bin -> dyn_buf [ j ] . d_un . d_ptr )"	2975:3:91204:91274	1334130	5	True				
ANR	1334266	AssignmentExpression	"addr_sym_table = Elf_ ( r_bin_elf_v2p ) ( bin , bin -> dyn_buf [ j ] . d_un . d_ptr )"		1334130	0		=			
ANR	1334267	Identifier	addr_sym_table		1334130	0					
ANR	1334268	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , bin -> dyn_buf [ j ] . d_un . d_ptr )"		1334130	1					
ANR	1334269	Callee	Elf_ ( r_bin_elf_v2p )		1334130	0					
ANR	1334270	CallExpression	Elf_ ( r_bin_elf_v2p )		1334130	0					
ANR	1334271	Callee	Elf_		1334130	0					
ANR	1334272	Identifier	Elf_		1334130	0					
ANR	1334273	ArgumentList	r_bin_elf_v2p		1334130	1					
ANR	1334274	Argument	r_bin_elf_v2p		1334130	0					
ANR	1334275	Identifier	r_bin_elf_v2p		1334130	0					
ANR	1334276	ArgumentList	bin		1334130	1					
ANR	1334277	Argument	bin		1334130	0					
ANR	1334278	Identifier	bin		1334130	0					
ANR	1334279	Argument	bin -> dyn_buf [ j ] . d_un . d_ptr		1334130	1					
ANR	1334280	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_ptr		1334130	0					
ANR	1334281	MemberAccess	bin -> dyn_buf [ j ] . d_un		1334130	0					
ANR	1334282	ArrayIndexing	bin -> dyn_buf [ j ]		1334130	0					
ANR	1334283	PtrMemberAccess	bin -> dyn_buf		1334130	0					
ANR	1334284	Identifier	bin		1334130	0					
ANR	1334285	Identifier	dyn_buf		1334130	1					
ANR	1334286	Identifier	j		1334130	1					
ANR	1334287	Identifier	d_un		1334130	1					
ANR	1334288	Identifier	d_ptr		1334130	1					
ANR	1334289	BreakStatement	break ;	2976:3:91279:91284	1334130	6	True				
ANR	1334290	Statement	case	2977:2:91288:91291	1334130	7	True				
ANR	1334291	Statement	(	2977:7:91293:91293	1334130	8	True				
ANR	1334292	Statement	DT_SYMENT	2977:8:91294:91302	1334130	9	True				
ANR	1334293	Statement	)	2977:17:91303:91303	1334130	10	True				
ANR	1334294	Statement	:	2977:18:91304:91304	1334130	11	True				
ANR	1334295	ExpressionStatement	sym_size = bin -> dyn_buf [ j ] . d_un . d_val	2978:3:91309:91346	1334130	12	True				
ANR	1334296	AssignmentExpression	sym_size = bin -> dyn_buf [ j ] . d_un . d_val		1334130	0		=			
ANR	1334297	Identifier	sym_size		1334130	0					
ANR	1334298	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_val		1334130	1					
ANR	1334299	MemberAccess	bin -> dyn_buf [ j ] . d_un		1334130	0					
ANR	1334300	ArrayIndexing	bin -> dyn_buf [ j ]		1334130	0					
ANR	1334301	PtrMemberAccess	bin -> dyn_buf		1334130	0					
ANR	1334302	Identifier	bin		1334130	0					
ANR	1334303	Identifier	dyn_buf		1334130	1					
ANR	1334304	Identifier	j		1334130	1					
ANR	1334305	Identifier	d_un		1334130	1					
ANR	1334306	Identifier	d_val		1334130	1					
ANR	1334307	BreakStatement	break ;	2979:3:91351:91356	1334130	13	True				
ANR	1334308	Label	default :	2980:2:91360:91367	1334130	14	True				
ANR	1334309	Identifier	default		1334130	0					
ANR	1334310	BreakStatement	break ;	2981:3:91372:91377	1334130	15	True				
ANR	1334311	IfStatement	if ( ! addr_sym_table )		1334130	10					
ANR	1334312	Condition	! addr_sym_table	2984:5:91391:91405	1334130	0	True				
ANR	1334313	UnaryOperationExpression	! addr_sym_table		1334130	0					
ANR	1334314	UnaryOperator	!		1334130	0					
ANR	1334315	Identifier	addr_sym_table		1334130	1					
ANR	1334316	CompoundStatement		25:22:584:584	1334130	1					
ANR	1334317	ReturnStatement	return NULL ;	2985:2:91412:91423	1334130	0	True				
ANR	1334318	Identifier	NULL		1334130	0					
ANR	1334319	IfStatement	if ( ! sym_size )		1334130	11					
ANR	1334320	Condition	! sym_size	2987:5:91433:91441	1334130	0	True				
ANR	1334321	UnaryOperationExpression	! sym_size		1334130	0					
ANR	1334322	UnaryOperator	!		1334130	0					
ANR	1334323	Identifier	sym_size		1334130	1					
ANR	1334324	CompoundStatement		28:16:620:620	1334130	1					
ANR	1334325	ReturnStatement	return NULL ;	2988:2:91448:91459	1334130	0	True				
ANR	1334326	Identifier	NULL		1334130	0					
ANR	1334327	ExpressionStatement	nsym = ( bin -> size - addr_sym_table ) / sym_size	2991:1:91556:91602	1334130	12	True				
ANR	1334328	AssignmentExpression	nsym = ( bin -> size - addr_sym_table ) / sym_size		1334130	0		=			
ANR	1334329	Identifier	nsym		1334130	0					
ANR	1334330	MultiplicativeExpression	( bin -> size - addr_sym_table ) / sym_size		1334130	1		/			
ANR	1334331	AdditiveExpression	bin -> size - addr_sym_table		1334130	0		-			
ANR	1334332	PtrMemberAccess	bin -> size		1334130	0					
ANR	1334333	Identifier	bin		1334130	0					
ANR	1334334	Identifier	size		1334130	1					
ANR	1334335	Identifier	addr_sym_table		1334130	1					
ANR	1334336	Identifier	sym_size		1334130	1					
ANR	1334337	IfStatement	"if ( ! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) ) )"		1334130	13					
ANR	1334338	Condition	"! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"	2992:5:91609:91652	1334130	0	True				
ANR	1334339	UnaryOperationExpression	"! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"		1334130	0					
ANR	1334340	UnaryOperator	!		1334130	0					
ANR	1334341	CallExpression	"UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"		1334130	1					
ANR	1334342	Callee	UT32_MUL		1334130	0					
ANR	1334343	Identifier	UT32_MUL		1334130	0					
ANR	1334344	ArgumentList	& size		1334130	1					
ANR	1334345	Argument	& size		1334130	0					
ANR	1334346	UnaryOperationExpression	& size		1334130	0					
ANR	1334347	UnaryOperator	&		1334130	0					
ANR	1334348	Identifier	size		1334130	1					
ANR	1334349	Argument	nsym		1334130	1					
ANR	1334350	Identifier	nsym		1334130	0					
ANR	1334351	Argument	sizeof ( Elf_ ( Sym ) )		1334130	2					
ANR	1334352	SizeofExpression	sizeof ( Elf_ ( Sym ) )		1334130	0					
ANR	1334353	Sizeof	sizeof		1334130	0					
ANR	1334354	CallExpression	Elf_ ( Sym )		1334130	1					
ANR	1334355	Callee	Elf_		1334130	0					
ANR	1334356	Identifier	Elf_		1334130	0					
ANR	1334357	ArgumentList	Sym		1334130	1					
ANR	1334358	Argument	Sym		1334130	0					
ANR	1334359	Identifier	Sym		1334130	0					
ANR	1334360	CompoundStatement		33:51:831:831	1334130	1					
ANR	1334361	GotoStatement	goto beach ;	2993:2:91659:91669	1334130	0	True				
ANR	1334362	Identifier	beach		1334130	0					
ANR	1334363	IfStatement	if ( size < 1 )		1334130	14					
ANR	1334364	Condition	size < 1	2995:5:91679:91686	1334130	0	True				
ANR	1334365	RelationalExpression	size < 1		1334130	0		<			
ANR	1334366	Identifier	size		1334130	0					
ANR	1334367	PrimaryExpression	1		1334130	1					
ANR	1334368	CompoundStatement		36:15:865:865	1334130	1					
ANR	1334369	GotoStatement	goto beach ;	2996:2:91693:91703	1334130	0	True				
ANR	1334370	Identifier	beach		1334130	0					
ANR	1334371	IfStatement	if ( addr_sym_table > bin -> size || addr_sym_table + size > bin -> size )		1334130	15					
ANR	1334372	Condition	addr_sym_table > bin -> size || addr_sym_table + size > bin -> size	2998:5:91713:91775	1334130	0	True				
ANR	1334373	OrExpression	addr_sym_table > bin -> size || addr_sym_table + size > bin -> size		1334130	0		||			
ANR	1334374	RelationalExpression	addr_sym_table > bin -> size		1334130	0		>			
ANR	1334375	Identifier	addr_sym_table		1334130	0					
ANR	1334376	PtrMemberAccess	bin -> size		1334130	1					
ANR	1334377	Identifier	bin		1334130	0					
ANR	1334378	Identifier	size		1334130	1					
ANR	1334379	RelationalExpression	addr_sym_table + size > bin -> size		1334130	1		>			
ANR	1334380	AdditiveExpression	addr_sym_table + size		1334130	0		+			
ANR	1334381	Identifier	addr_sym_table		1334130	0					
ANR	1334382	Identifier	size		1334130	1					
ANR	1334383	PtrMemberAccess	bin -> size		1334130	1					
ANR	1334384	Identifier	bin		1334130	0					
ANR	1334385	Identifier	size		1334130	1					
ANR	1334386	CompoundStatement		39:70:954:954	1334130	1					
ANR	1334387	GotoStatement	goto beach ;	2999:2:91782:91792	1334130	0	True				
ANR	1334388	Identifier	beach		1334130	0					
ANR	1334389	IfStatement	if ( nsym < 1 )		1334130	16					
ANR	1334390	Condition	nsym < 1	3001:5:91802:91809	1334130	0	True				
ANR	1334391	RelationalExpression	nsym < 1		1334130	0		<			
ANR	1334392	Identifier	nsym		1334130	0					
ANR	1334393	PrimaryExpression	1		1334130	1					
ANR	1334394	CompoundStatement		42:15:988:988	1334130	1					
ANR	1334395	ReturnStatement	return NULL ;	3002:2:91816:91827	1334130	0	True				
ANR	1334396	Identifier	NULL		1334130	0					
ANR	1334397	IdentifierDeclStatement	size_t capacity1 = 4096 ;	3005:1:91882:91905	1334130	17	True				
ANR	1334398	IdentifierDecl	capacity1 = 4096		1334130	0					
ANR	1334399	IdentifierDeclType	size_t		1334130	0					
ANR	1334400	Identifier	capacity1		1334130	1					
ANR	1334401	AssignmentExpression	capacity1 = 4096		1334130	2		=			
ANR	1334402	Identifier	capacity1		1334130	0					
ANR	1334403	PrimaryExpression	4096		1334130	1					
ANR	1334404	IdentifierDeclStatement	size_t capacity2 = 4096 ;	3006:1:91908:91931	1334130	18	True				
ANR	1334405	IdentifierDecl	capacity2 = 4096		1334130	0					
ANR	1334406	IdentifierDeclType	size_t		1334130	0					
ANR	1334407	Identifier	capacity2		1334130	1					
ANR	1334408	AssignmentExpression	capacity2 = 4096		1334130	2		=			
ANR	1334409	Identifier	capacity2		1334130	0					
ANR	1334410	PrimaryExpression	4096		1334130	1					
ANR	1334411	Statement	sym	3007:1:91934:91936	1334130	19	True				
ANR	1334412	Statement	=	3007:5:91938:91938	1334130	20	True				
ANR	1334413	Statement	(	3007:7:91940:91940	1334130	21	True				
ANR	1334414	Statement	Elf_	3007:8:91941:91944	1334130	22	True				
ANR	1334415	Statement	(	3007:12:91945:91945	1334130	23	True				
ANR	1334416	Statement	Sym	3007:13:91946:91948	1334130	24	True				
ANR	1334417	Statement	)	3007:16:91949:91949	1334130	25	True				
ANR	1334418	Statement	*	3007:17:91950:91950	1334130	26	True				
ANR	1334419	Statement	)	3007:18:91951:91951	1334130	27	True				
ANR	1334420	ExpressionStatement	"calloc ( capacity1 , sym_size )"	3007:20:91953:91981	1334130	28	True				
ANR	1334421	CallExpression	"calloc ( capacity1 , sym_size )"		1334130	0					
ANR	1334422	Callee	calloc		1334130	0					
ANR	1334423	Identifier	calloc		1334130	0					
ANR	1334424	ArgumentList	capacity1		1334130	1					
ANR	1334425	Argument	capacity1		1334130	0					
ANR	1334426	Identifier	capacity1		1334130	0					
ANR	1334427	Argument	sym_size		1334130	1					
ANR	1334428	Identifier	sym_size		1334130	0					
ANR	1334429	ExpressionStatement	"ret = ( RBinElfSymbol * ) calloc ( capacity2 , sizeof ( struct r_bin_elf_symbol_t ) )"	3008:1:91984:92062	1334130	29	True				
ANR	1334430	AssignmentExpression	"ret = ( RBinElfSymbol * ) calloc ( capacity2 , sizeof ( struct r_bin_elf_symbol_t ) )"		1334130	0		=			
ANR	1334431	Identifier	ret		1334130	0					
ANR	1334432	CastExpression	"( RBinElfSymbol * ) calloc ( capacity2 , sizeof ( struct r_bin_elf_symbol_t ) )"		1334130	1					
ANR	1334433	CastTarget	RBinElfSymbol *		1334130	0					
ANR	1334434	CallExpression	"calloc ( capacity2 , sizeof ( struct r_bin_elf_symbol_t ) )"		1334130	1					
ANR	1334435	Callee	calloc		1334130	0					
ANR	1334436	Identifier	calloc		1334130	0					
ANR	1334437	ArgumentList	capacity2		1334130	1					
ANR	1334438	Argument	capacity2		1334130	0					
ANR	1334439	Identifier	capacity2		1334130	0					
ANR	1334440	Argument	sizeof ( struct r_bin_elf_symbol_t )		1334130	1					
ANR	1334441	SizeofExpression	sizeof ( struct r_bin_elf_symbol_t )		1334130	0					
ANR	1334442	Sizeof	sizeof		1334130	0					
ANR	1334443	SizeofOperand	struct r_bin_elf_symbol_t		1334130	1					
ANR	1334444	IfStatement	if ( ! sym || ! ret )		1334130	30					
ANR	1334445	Condition	! sym || ! ret	3009:5:92069:92080	1334130	0	True				
ANR	1334446	OrExpression	! sym || ! ret		1334130	0		||			
ANR	1334447	UnaryOperationExpression	! sym		1334130	0					
ANR	1334448	UnaryOperator	!		1334130	0					
ANR	1334449	Identifier	sym		1334130	1					
ANR	1334450	UnaryOperationExpression	! ret		1334130	1					
ANR	1334451	UnaryOperator	!		1334130	0					
ANR	1334452	Identifier	ret		1334130	1					
ANR	1334453	CompoundStatement		50:19:1259:1259	1334130	1					
ANR	1334454	GotoStatement	goto beach ;	3010:2:92087:92097	1334130	0	True				
ANR	1334455	Identifier	beach		1334130	0					
ANR	1334456	ForStatement	"for ( i = 1 , ret_ctr = 0 ; i < nsym ; i ++ )"		1334130	31					
ANR	1334457	ForInit	"i = 1 , ret_ctr = 0 ;"	3012:6:92108:92126	1334130	0	True				
ANR	1334458	Expression	"i = 1 , ret_ctr = 0"		1334130	0					
ANR	1334459	AssignmentExpression	i = 1		1334130	0		=			
ANR	1334460	Identifier	i		1334130	0					
ANR	1334461	PrimaryExpression	1		1334130	1					
ANR	1334462	AssignmentExpression	ret_ctr = 0		1334130	1		=			
ANR	1334463	Identifier	ret_ctr		1334130	0					
ANR	1334464	PrimaryExpression	0		1334130	1					
ANR	1334465	Condition	i < nsym	3012:26:92128:92135	1334130	1	True				
ANR	1334466	RelationalExpression	i < nsym		1334130	0		<			
ANR	1334467	Identifier	i		1334130	0					
ANR	1334468	Identifier	nsym		1334130	1					
ANR	1334469	PostIncDecOperationExpression	i ++	3012:36:92138:92140	1334130	2	True				
ANR	1334470	Identifier	i		1334130	0					
ANR	1334471	IncDec	++		1334130	1					
ANR	1334472	CompoundStatement		93:2:2486:2507	1334130	3					
ANR	1334473	IfStatement	if ( i >= capacity1 )		1334130	0					
ANR	1334474	Condition	i >= capacity1	3013:6:92151:92164	1334130	0	True				
ANR	1334475	RelationalExpression	i >= capacity1		1334130	0		>=			
ANR	1334476	Identifier	i		1334130	0					
ANR	1334477	Identifier	capacity1		1334130	1					
ANR	1334478	CompoundStatement		54:22:1343:1343	1334130	1					
ANR	1334479	Statement	Elf_	3015:3:92243:92246	1334130	0	True				
ANR	1334480	Statement	(	3015:7:92247:92247	1334130	1	True				
ANR	1334481	Statement	Sym	3015:8:92248:92250	1334130	2	True				
ANR	1334482	Statement	)	3015:11:92251:92251	1334130	3	True				
ANR	1334483	Statement	*	3015:12:92252:92252	1334130	4	True				
ANR	1334484	Statement	temp_sym	3015:14:92254:92261	1334130	5	True				
ANR	1334485	Statement	=	3015:23:92263:92263	1334130	6	True				
ANR	1334486	Statement	(	3015:25:92265:92265	1334130	7	True				
ANR	1334487	Statement	Elf_	3015:26:92266:92269	1334130	8	True				
ANR	1334488	Statement	(	3015:30:92270:92270	1334130	9	True				
ANR	1334489	Statement	Sym	3015:31:92271:92273	1334130	10	True				
ANR	1334490	Statement	)	3015:34:92274:92274	1334130	11	True				
ANR	1334491	Statement	*	3015:35:92275:92275	1334130	12	True				
ANR	1334492	Statement	)	3015:36:92276:92276	1334130	13	True				
ANR	1334493	ExpressionStatement	"realloc ( sym , ( capacity1 * GROWTH_FACTOR ) * sym_size )"	3015:38:92278:92331	1334130	14	True				
ANR	1334494	CallExpression	"realloc ( sym , ( capacity1 * GROWTH_FACTOR ) * sym_size )"		1334130	0					
ANR	1334495	Callee	realloc		1334130	0					
ANR	1334496	Identifier	realloc		1334130	0					
ANR	1334497	ArgumentList	sym		1334130	1					
ANR	1334498	Argument	sym		1334130	0					
ANR	1334499	Identifier	sym		1334130	0					
ANR	1334500	Argument	( capacity1 * GROWTH_FACTOR ) * sym_size		1334130	1					
ANR	1334501	MultiplicativeExpression	( capacity1 * GROWTH_FACTOR ) * sym_size		1334130	0		*			
ANR	1334502	MultiplicativeExpression	capacity1 * GROWTH_FACTOR		1334130	0		*			
ANR	1334503	Identifier	capacity1		1334130	0					
ANR	1334504	Identifier	GROWTH_FACTOR		1334130	1					
ANR	1334505	Identifier	sym_size		1334130	1					
ANR	1334506	IfStatement	if ( ! temp_sym )		1334130	15					
ANR	1334507	Condition	! temp_sym	3016:7:92340:92348	1334130	0	True				
ANR	1334508	UnaryOperationExpression	! temp_sym		1334130	0					
ANR	1334509	UnaryOperator	!		1334130	0					
ANR	1334510	Identifier	temp_sym		1334130	1					
ANR	1334511	CompoundStatement		57:18:1527:1527	1334130	1					
ANR	1334512	GotoStatement	goto beach ;	3017:4:92357:92367	1334130	0	True				
ANR	1334513	Identifier	beach		1334130	0					
ANR	1334514	ExpressionStatement	sym = temp_sym	3019:3:92377:92391	1334130	16	True				
ANR	1334515	AssignmentExpression	sym = temp_sym		1334130	0		=			
ANR	1334516	Identifier	sym		1334130	0					
ANR	1334517	Identifier	temp_sym		1334130	1					
ANR	1334518	ExpressionStatement	capacity1 *= GROWTH_FACTOR	3020:3:92396:92422	1334130	17	True				
ANR	1334519	AssignmentExpression	capacity1 *= GROWTH_FACTOR		1334130	0		*=			
ANR	1334520	Identifier	capacity1		1334130	0					
ANR	1334521	Identifier	GROWTH_FACTOR		1334130	1					
ANR	1334522	IfStatement	if ( ret_ctr >= capacity2 )		1334130	1					
ANR	1334523	Condition	ret_ctr >= capacity2	3022:6:92434:92453	1334130	0	True				
ANR	1334524	RelationalExpression	ret_ctr >= capacity2		1334130	0		>=			
ANR	1334525	Identifier	ret_ctr		1334130	0					
ANR	1334526	Identifier	capacity2		1334130	1					
ANR	1334527	CompoundStatement		64:3:1651:1754	1334130	1					
ANR	1334528	IdentifierDeclStatement	"RBinElfSymbol * temp_ret = realloc ( ret , capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t ) ) ;"	3023:3:92475:92578	1334130	0	True				
ANR	1334529	IdentifierDecl	"* temp_ret = realloc ( ret , capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t ) )"		1334130	0					
ANR	1334530	IdentifierDeclType	RBinElfSymbol *		1334130	0					
ANR	1334531	Identifier	temp_ret		1334130	1					
ANR	1334532	AssignmentExpression	"* temp_ret = realloc ( ret , capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t ) )"		1334130	2		=			
ANR	1334533	Identifier	temp_ret		1334130	0					
ANR	1334534	CallExpression	"realloc ( ret , capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t ) )"		1334130	1					
ANR	1334535	Callee	realloc		1334130	0					
ANR	1334536	Identifier	realloc		1334130	0					
ANR	1334537	ArgumentList	ret		1334130	1					
ANR	1334538	Argument	ret		1334130	0					
ANR	1334539	Identifier	ret		1334130	0					
ANR	1334540	Argument	capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t )		1334130	1					
ANR	1334541	MultiplicativeExpression	capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t )		1334130	0		*			
ANR	1334542	Identifier	capacity2		1334130	0					
ANR	1334543	MultiplicativeExpression	GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t )		1334130	1		*			
ANR	1334544	Identifier	GROWTH_FACTOR		1334130	0					
ANR	1334545	SizeofExpression	sizeof ( struct r_bin_elf_symbol_t )		1334130	1					
ANR	1334546	Sizeof	sizeof		1334130	0					
ANR	1334547	SizeofOperand	struct r_bin_elf_symbol_t		1334130	1					
ANR	1334548	IfStatement	if ( ! temp_ret )		1334130	1					
ANR	1334549	Condition	! temp_ret	3024:7:92587:92595	1334130	0	True				
ANR	1334550	UnaryOperationExpression	! temp_ret		1334130	0					
ANR	1334551	UnaryOperator	!		1334130	0					
ANR	1334552	Identifier	temp_ret		1334130	1					
ANR	1334553	CompoundStatement		65:18:1774:1774	1334130	1					
ANR	1334554	GotoStatement	goto beach ;	3025:4:92604:92614	1334130	0	True				
ANR	1334555	Identifier	beach		1334130	0					
ANR	1334556	ExpressionStatement	ret = temp_ret	3027:3:92624:92638	1334130	2	True				
ANR	1334557	AssignmentExpression	ret = temp_ret		1334130	0		=			
ANR	1334558	Identifier	ret		1334130	0					
ANR	1334559	Identifier	temp_ret		1334130	1					
ANR	1334560	ExpressionStatement	capacity2 *= GROWTH_FACTOR	3028:3:92643:92669	1334130	3	True				
ANR	1334561	AssignmentExpression	capacity2 *= GROWTH_FACTOR		1334130	0		*=			
ANR	1334562	Identifier	capacity2		1334130	0					
ANR	1334563	Identifier	GROWTH_FACTOR		1334130	1					
ANR	1334564	ExpressionStatement	"r = r_buf_read_at ( bin -> b , addr_sym_table + i * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"	3031:2:92700:92792	1334130	2	True				
ANR	1334565	AssignmentExpression	"r = r_buf_read_at ( bin -> b , addr_sym_table + i * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"		1334130	0		=			
ANR	1334566	Identifier	r		1334130	0					
ANR	1334567	CallExpression	"r_buf_read_at ( bin -> b , addr_sym_table + i * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"		1334130	1					
ANR	1334568	Callee	r_buf_read_at		1334130	0					
ANR	1334569	Identifier	r_buf_read_at		1334130	0					
ANR	1334570	ArgumentList	bin -> b		1334130	1					
ANR	1334571	Argument	bin -> b		1334130	0					
ANR	1334572	PtrMemberAccess	bin -> b		1334130	0					
ANR	1334573	Identifier	bin		1334130	0					
ANR	1334574	Identifier	b		1334130	1					
ANR	1334575	Argument	addr_sym_table + i * sizeof ( Elf_ ( Sym ) )		1334130	1					
ANR	1334576	AdditiveExpression	addr_sym_table + i * sizeof ( Elf_ ( Sym ) )		1334130	0		+			
ANR	1334577	Identifier	addr_sym_table		1334130	0					
ANR	1334578	MultiplicativeExpression	i * sizeof ( Elf_ ( Sym ) )		1334130	1		*			
ANR	1334579	Identifier	i		1334130	0					
ANR	1334580	SizeofExpression	sizeof ( Elf_ ( Sym ) )		1334130	1					
ANR	1334581	Sizeof	sizeof		1334130	0					
ANR	1334582	CallExpression	Elf_ ( Sym )		1334130	1					
ANR	1334583	Callee	Elf_		1334130	0					
ANR	1334584	Identifier	Elf_		1334130	0					
ANR	1334585	ArgumentList	Sym		1334130	1					
ANR	1334586	Argument	Sym		1334130	0					
ANR	1334587	Identifier	Sym		1334130	0					
ANR	1334588	Argument	s		1334130	2					
ANR	1334589	Identifier	s		1334130	0					
ANR	1334590	Argument	sizeof ( Elf_ ( Sym ) )		1334130	3					
ANR	1334591	SizeofExpression	sizeof ( Elf_ ( Sym ) )		1334130	0					
ANR	1334592	Sizeof	sizeof		1334130	0					
ANR	1334593	CallExpression	Elf_ ( Sym )		1334130	1					
ANR	1334594	Callee	Elf_		1334130	0					
ANR	1334595	Identifier	Elf_		1334130	0					
ANR	1334596	ArgumentList	Sym		1334130	1					
ANR	1334597	Argument	Sym		1334130	0					
ANR	1334598	Identifier	Sym		1334130	0					
ANR	1334599	IfStatement	if ( r < 1 )		1334130	3					
ANR	1334600	Condition	r < 1	3032:6:92800:92804	1334130	0	True				
ANR	1334601	RelationalExpression	r < 1		1334130	0		<			
ANR	1334602	Identifier	r		1334130	0					
ANR	1334603	PrimaryExpression	1		1334130	1					
ANR	1334604	CompoundStatement		73:13:1983:1983	1334130	1					
ANR	1334605	GotoStatement	goto beach ;	3033:3:92812:92822	1334130	0	True				
ANR	1334606	Identifier	beach		1334130	0					
ANR	1334607	IdentifierDeclStatement	int j = 0 ;	3035:2:92830:92839	1334130	4	True				
ANR	1334608	IdentifierDecl	j = 0		1334130	0					
ANR	1334609	IdentifierDeclType	int		1334130	0					
ANR	1334610	Identifier	j		1334130	1					
ANR	1334611	AssignmentExpression	j = 0		1334130	2		=			
ANR	1334612	Identifier	j		1334130	0					
ANR	1334613	PrimaryExpression	0		1334130	1					
ANR	1334614	ExpressionStatement	"sym [ i ] . st_name = READ32 ( s , j )"	3037:2:92859:92889	1334130	5	True				
ANR	1334615	AssignmentExpression	"sym [ i ] . st_name = READ32 ( s , j )"		1334130	0		=			
ANR	1334616	MemberAccess	sym [ i ] . st_name		1334130	0					
ANR	1334617	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334618	Identifier	sym		1334130	0					
ANR	1334619	Identifier	i		1334130	1					
ANR	1334620	Identifier	st_name		1334130	1					
ANR	1334621	CallExpression	"READ32 ( s , j )"		1334130	1					
ANR	1334622	Callee	READ32		1334130	0					
ANR	1334623	Identifier	READ32		1334130	0					
ANR	1334624	ArgumentList	s		1334130	1					
ANR	1334625	Argument	s		1334130	0					
ANR	1334626	Identifier	s		1334130	0					
ANR	1334627	Argument	j		1334130	1					
ANR	1334628	Identifier	j		1334130	0					
ANR	1334629	ExpressionStatement	"sym [ i ] . st_info = READ8 ( s , j )"	3038:2:92893:92922	1334130	6	True				
ANR	1334630	AssignmentExpression	"sym [ i ] . st_info = READ8 ( s , j )"		1334130	0		=			
ANR	1334631	MemberAccess	sym [ i ] . st_info		1334130	0					
ANR	1334632	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334633	Identifier	sym		1334130	0					
ANR	1334634	Identifier	i		1334130	1					
ANR	1334635	Identifier	st_info		1334130	1					
ANR	1334636	CallExpression	"READ8 ( s , j )"		1334130	1					
ANR	1334637	Callee	READ8		1334130	0					
ANR	1334638	Identifier	READ8		1334130	0					
ANR	1334639	ArgumentList	s		1334130	1					
ANR	1334640	Argument	s		1334130	0					
ANR	1334641	Identifier	s		1334130	0					
ANR	1334642	Argument	j		1334130	1					
ANR	1334643	Identifier	j		1334130	0					
ANR	1334644	ExpressionStatement	"sym [ i ] . st_other = READ8 ( s , j )"	3039:2:92926:92956	1334130	7	True				
ANR	1334645	AssignmentExpression	"sym [ i ] . st_other = READ8 ( s , j )"		1334130	0		=			
ANR	1334646	MemberAccess	sym [ i ] . st_other		1334130	0					
ANR	1334647	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334648	Identifier	sym		1334130	0					
ANR	1334649	Identifier	i		1334130	1					
ANR	1334650	Identifier	st_other		1334130	1					
ANR	1334651	CallExpression	"READ8 ( s , j )"		1334130	1					
ANR	1334652	Callee	READ8		1334130	0					
ANR	1334653	Identifier	READ8		1334130	0					
ANR	1334654	ArgumentList	s		1334130	1					
ANR	1334655	Argument	s		1334130	0					
ANR	1334656	Identifier	s		1334130	0					
ANR	1334657	Argument	j		1334130	1					
ANR	1334658	Identifier	j		1334130	0					
ANR	1334659	ExpressionStatement	"sym [ i ] . st_shndx = READ16 ( s , j )"	3040:2:92960:92991	1334130	8	True				
ANR	1334660	AssignmentExpression	"sym [ i ] . st_shndx = READ16 ( s , j )"		1334130	0		=			
ANR	1334661	MemberAccess	sym [ i ] . st_shndx		1334130	0					
ANR	1334662	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334663	Identifier	sym		1334130	0					
ANR	1334664	Identifier	i		1334130	1					
ANR	1334665	Identifier	st_shndx		1334130	1					
ANR	1334666	CallExpression	"READ16 ( s , j )"		1334130	1					
ANR	1334667	Callee	READ16		1334130	0					
ANR	1334668	Identifier	READ16		1334130	0					
ANR	1334669	ArgumentList	s		1334130	1					
ANR	1334670	Argument	s		1334130	0					
ANR	1334671	Identifier	s		1334130	0					
ANR	1334672	Argument	j		1334130	1					
ANR	1334673	Identifier	j		1334130	0					
ANR	1334674	ExpressionStatement	"sym [ i ] . st_value = READ64 ( s , j )"	3041:2:92995:93026	1334130	9	True				
ANR	1334675	AssignmentExpression	"sym [ i ] . st_value = READ64 ( s , j )"		1334130	0		=			
ANR	1334676	MemberAccess	sym [ i ] . st_value		1334130	0					
ANR	1334677	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334678	Identifier	sym		1334130	0					
ANR	1334679	Identifier	i		1334130	1					
ANR	1334680	Identifier	st_value		1334130	1					
ANR	1334681	CallExpression	"READ64 ( s , j )"		1334130	1					
ANR	1334682	Callee	READ64		1334130	0					
ANR	1334683	Identifier	READ64		1334130	0					
ANR	1334684	ArgumentList	s		1334130	1					
ANR	1334685	Argument	s		1334130	0					
ANR	1334686	Identifier	s		1334130	0					
ANR	1334687	Argument	j		1334130	1					
ANR	1334688	Identifier	j		1334130	0					
ANR	1334689	ExpressionStatement	"sym [ i ] . st_size = READ64 ( s , j )"	3042:2:93030:93060	1334130	10	True				
ANR	1334690	AssignmentExpression	"sym [ i ] . st_size = READ64 ( s , j )"		1334130	0		=			
ANR	1334691	MemberAccess	sym [ i ] . st_size		1334130	0					
ANR	1334692	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334693	Identifier	sym		1334130	0					
ANR	1334694	Identifier	i		1334130	1					
ANR	1334695	Identifier	st_size		1334130	1					
ANR	1334696	CallExpression	"READ64 ( s , j )"		1334130	1					
ANR	1334697	Callee	READ64		1334130	0					
ANR	1334698	Identifier	READ64		1334130	0					
ANR	1334699	ArgumentList	s		1334130	1					
ANR	1334700	Argument	s		1334130	0					
ANR	1334701	Identifier	s		1334130	0					
ANR	1334702	Argument	j		1334130	1					
ANR	1334703	Identifier	j		1334130	0					
ANR	1334704	IdentifierDeclStatement	bool is_sht_null = false ;	3051:2:93282:93306	1334130	11	True				
ANR	1334705	IdentifierDecl	is_sht_null = false		1334130	0					
ANR	1334706	IdentifierDeclType	bool		1334130	0					
ANR	1334707	Identifier	is_sht_null		1334130	1					
ANR	1334708	AssignmentExpression	is_sht_null = false		1334130	2		=			
ANR	1334709	Identifier	false		1334130	0					
ANR	1334710	Identifier	false		1334130	1					
ANR	1334711	IdentifierDeclStatement	bool is_vaddr = false ;	3052:2:93310:93331	1334130	12	True				
ANR	1334712	IdentifierDecl	is_vaddr = false		1334130	0					
ANR	1334713	IdentifierDeclType	bool		1334130	0					
ANR	1334714	Identifier	is_vaddr		1334130	1					
ANR	1334715	AssignmentExpression	is_vaddr = false		1334130	2		=			
ANR	1334716	Identifier	false		1334130	0					
ANR	1334717	Identifier	false		1334130	1					
ANR	1334718	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS && sym [ i ] . st_shndx == SHT_NULL )		1334130	13					
ANR	1334719	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS && sym [ i ] . st_shndx == SHT_NULL	3055:6:93407:93469	1334130	0	True				
ANR	1334720	AndExpression	type == R_BIN_ELF_IMPORT_SYMBOLS && sym [ i ] . st_shndx == SHT_NULL		1334130	0		&&			
ANR	1334721	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		1334130	0		==			
ANR	1334722	Identifier	type		1334130	0					
ANR	1334723	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		1334130	1					
ANR	1334724	EqualityExpression	sym [ i ] . st_shndx == SHT_NULL		1334130	1		==			
ANR	1334725	MemberAccess	sym [ i ] . st_shndx		1334130	0					
ANR	1334726	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334727	Identifier	sym		1334130	0					
ANR	1334728	Identifier	i		1334130	1					
ANR	1334729	Identifier	st_shndx		1334130	1					
ANR	1334730	Identifier	SHT_NULL		1334130	1					
ANR	1334731	CompoundStatement		96:71:2648:2648	1334130	1					
ANR	1334732	IfStatement	if ( sym [ i ] . st_value )		1334130	0					
ANR	1334733	Condition	sym [ i ] . st_value	3056:7:93481:93495	1334130	0	True				
ANR	1334734	MemberAccess	sym [ i ] . st_value		1334130	0					
ANR	1334735	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334736	Identifier	sym		1334130	0					
ANR	1334737	Identifier	i		1334130	1					
ANR	1334738	Identifier	st_value		1334130	1					
ANR	1334739	CompoundStatement		97:24:2674:2674	1334130	1					
ANR	1334740	ExpressionStatement	toffset = sym [ i ] . st_value	3057:4:93504:93529	1334130	0	True				
ANR	1334741	AssignmentExpression	toffset = sym [ i ] . st_value		1334130	0		=			
ANR	1334742	Identifier	toffset		1334130	0					
ANR	1334743	MemberAccess	sym [ i ] . st_value		1334130	1					
ANR	1334744	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334745	Identifier	sym		1334130	0					
ANR	1334746	Identifier	i		1334130	1					
ANR	1334747	Identifier	st_value		1334130	1					
ANR	1334748	ElseStatement	else		1334130	0					
ANR	1334749	IfStatement	"if ( ( toffset = get_import_addr ( bin , i ) ) == - 1 )"		1334130	0					
ANR	1334750	Condition	"( toffset = get_import_addr ( bin , i ) ) == - 1"	3058:14:93545:93586	1334130	0	True				
ANR	1334751	EqualityExpression	"( toffset = get_import_addr ( bin , i ) ) == - 1"		1334130	0		==			
ANR	1334752	AssignmentExpression	"toffset = get_import_addr ( bin , i )"		1334130	0		=			
ANR	1334753	Identifier	toffset		1334130	0					
ANR	1334754	CallExpression	"get_import_addr ( bin , i )"		1334130	1					
ANR	1334755	Callee	get_import_addr		1334130	0					
ANR	1334756	Identifier	get_import_addr		1334130	0					
ANR	1334757	ArgumentList	bin		1334130	1					
ANR	1334758	Argument	bin		1334130	0					
ANR	1334759	Identifier	bin		1334130	0					
ANR	1334760	Argument	i		1334130	1					
ANR	1334761	Identifier	i		1334130	0					
ANR	1334762	UnaryOperationExpression	- 1		1334130	1					
ANR	1334763	UnaryOperator	-		1334130	0					
ANR	1334764	PrimaryExpression	1		1334130	1					
ANR	1334765	CompoundStatement		99:57:2764:2764	1334130	1					
ANR	1334766	ExpressionStatement	toffset = 0	3059:4:93594:93605	1334130	0	True				
ANR	1334767	AssignmentExpression	toffset = 0		1334130	0		=			
ANR	1334768	Identifier	toffset		1334130	0					
ANR	1334769	PrimaryExpression	0		1334130	1					
ANR	1334770	ExpressionStatement	tsize = 16	3061:3:93615:93625	1334130	1	True				
ANR	1334771	AssignmentExpression	tsize = 16		1334130	0		=			
ANR	1334772	Identifier	tsize		1334130	0					
ANR	1334773	PrimaryExpression	16		1334130	1					
ANR	1334774	ElseStatement	else		1334130	0					
ANR	1334775	IfStatement	if ( type == R_BIN_ELF_ALL_SYMBOLS )		1334130	0					
ANR	1334776	Condition	type == R_BIN_ELF_ALL_SYMBOLS	3062:13:93640:93668	1334130	0	True				
ANR	1334777	EqualityExpression	type == R_BIN_ELF_ALL_SYMBOLS		1334130	0		==			
ANR	1334778	Identifier	type		1334130	0					
ANR	1334779	Identifier	R_BIN_ELF_ALL_SYMBOLS		1334130	1					
ANR	1334780	CompoundStatement		103:44:2847:2847	1334130	1					
ANR	1334781	ExpressionStatement	tsize = sym [ i ] . st_size	3063:3:93676:93698	1334130	0	True				
ANR	1334782	AssignmentExpression	tsize = sym [ i ] . st_size		1334130	0		=			
ANR	1334783	Identifier	tsize		1334130	0					
ANR	1334784	MemberAccess	sym [ i ] . st_size		1334130	1					
ANR	1334785	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334786	Identifier	sym		1334130	0					
ANR	1334787	Identifier	i		1334130	1					
ANR	1334788	Identifier	st_size		1334130	1					
ANR	1334789	ExpressionStatement	toffset = ( ut64 ) sym [ i ] . st_value	3064:3:93703:93735	1334130	1	True				
ANR	1334790	AssignmentExpression	toffset = ( ut64 ) sym [ i ] . st_value		1334130	0		=			
ANR	1334791	Identifier	toffset		1334130	0					
ANR	1334792	CastExpression	( ut64 ) sym [ i ] . st_value		1334130	1					
ANR	1334793	CastTarget	ut64		1334130	0					
ANR	1334794	MemberAccess	sym [ i ] . st_value		1334130	1					
ANR	1334795	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334796	Identifier	sym		1334130	0					
ANR	1334797	Identifier	i		1334130	1					
ANR	1334798	Identifier	st_value		1334130	1					
ANR	1334799	ExpressionStatement	is_sht_null = sym [ i ] . st_shndx == SHT_NULL	3065:3:93740:93781	1334130	2	True				
ANR	1334800	AssignmentExpression	is_sht_null = sym [ i ] . st_shndx == SHT_NULL		1334130	0		=			
ANR	1334801	Identifier	is_sht_null		1334130	0					
ANR	1334802	EqualityExpression	sym [ i ] . st_shndx == SHT_NULL		1334130	1		==			
ANR	1334803	MemberAccess	sym [ i ] . st_shndx		1334130	0					
ANR	1334804	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334805	Identifier	sym		1334130	0					
ANR	1334806	Identifier	i		1334130	1					
ANR	1334807	Identifier	st_shndx		1334130	1					
ANR	1334808	Identifier	SHT_NULL		1334130	1					
ANR	1334809	ElseStatement	else		1334130	0					
ANR	1334810	CompoundStatement		107:9:2968:2968	1334130	0					
ANR	1334811	ContinueStatement	continue ;	3067:3:93797:93805	1334130	0	True				
ANR	1334812	IfStatement	"if ( ! strcmp ( bind2str ( & sym [ i ] ) , R_BIN_BIND_UNKNOWN_STR ) || ! strcmp ( type2str ( NULL , NULL , & sym [ i ] ) , R_BIN_TYPE_UNKNOWN_STR ) )"		1334130	14					
ANR	1334813	Condition	"! strcmp ( bind2str ( & sym [ i ] ) , R_BIN_BIND_UNKNOWN_STR ) || ! strcmp ( type2str ( NULL , NULL , & sym [ i ] ) , R_BIN_TYPE_UNKNOWN_STR )"	3071:6:93925:94050	1334130	0	True				
ANR	1334814	OrExpression	"! strcmp ( bind2str ( & sym [ i ] ) , R_BIN_BIND_UNKNOWN_STR ) || ! strcmp ( type2str ( NULL , NULL , & sym [ i ] ) , R_BIN_TYPE_UNKNOWN_STR )"		1334130	0		||			
ANR	1334815	UnaryOperationExpression	"! strcmp ( bind2str ( & sym [ i ] ) , R_BIN_BIND_UNKNOWN_STR )"		1334130	0					
ANR	1334816	UnaryOperator	!		1334130	0					
ANR	1334817	CallExpression	"strcmp ( bind2str ( & sym [ i ] ) , R_BIN_BIND_UNKNOWN_STR )"		1334130	1					
ANR	1334818	Callee	strcmp		1334130	0					
ANR	1334819	Identifier	strcmp		1334130	0					
ANR	1334820	ArgumentList	bind2str ( & sym [ i ] )		1334130	1					
ANR	1334821	Argument	bind2str ( & sym [ i ] )		1334130	0					
ANR	1334822	CallExpression	bind2str ( & sym [ i ] )		1334130	0					
ANR	1334823	Callee	bind2str		1334130	0					
ANR	1334824	Identifier	bind2str		1334130	0					
ANR	1334825	ArgumentList	& sym [ i ]		1334130	1					
ANR	1334826	Argument	& sym [ i ]		1334130	0					
ANR	1334827	UnaryOperationExpression	& sym [ i ]		1334130	0					
ANR	1334828	UnaryOperator	&		1334130	0					
ANR	1334829	ArrayIndexing	sym [ i ]		1334130	1					
ANR	1334830	Identifier	sym		1334130	0					
ANR	1334831	Identifier	i		1334130	1					
ANR	1334832	Argument	R_BIN_BIND_UNKNOWN_STR		1334130	1					
ANR	1334833	Identifier	R_BIN_BIND_UNKNOWN_STR		1334130	0					
ANR	1334834	UnaryOperationExpression	"! strcmp ( type2str ( NULL , NULL , & sym [ i ] ) , R_BIN_TYPE_UNKNOWN_STR )"		1334130	1					
ANR	1334835	UnaryOperator	!		1334130	0					
ANR	1334836	CallExpression	"strcmp ( type2str ( NULL , NULL , & sym [ i ] ) , R_BIN_TYPE_UNKNOWN_STR )"		1334130	1					
ANR	1334837	Callee	strcmp		1334130	0					
ANR	1334838	Identifier	strcmp		1334130	0					
ANR	1334839	ArgumentList	"type2str ( NULL , NULL , & sym [ i ] )"		1334130	1					
ANR	1334840	Argument	"type2str ( NULL , NULL , & sym [ i ] )"		1334130	0					
ANR	1334841	CallExpression	"type2str ( NULL , NULL , & sym [ i ] )"		1334130	0					
ANR	1334842	Callee	type2str		1334130	0					
ANR	1334843	Identifier	type2str		1334130	0					
ANR	1334844	ArgumentList	NULL		1334130	1					
ANR	1334845	Argument	NULL		1334130	0					
ANR	1334846	Identifier	NULL		1334130	0					
ANR	1334847	Argument	NULL		1334130	1					
ANR	1334848	Identifier	NULL		1334130	0					
ANR	1334849	Argument	& sym [ i ]		1334130	2					
ANR	1334850	UnaryOperationExpression	& sym [ i ]		1334130	0					
ANR	1334851	UnaryOperator	&		1334130	0					
ANR	1334852	ArrayIndexing	sym [ i ]		1334130	1					
ANR	1334853	Identifier	sym		1334130	0					
ANR	1334854	Identifier	i		1334130	1					
ANR	1334855	Argument	R_BIN_TYPE_UNKNOWN_STR		1334130	1					
ANR	1334856	Identifier	R_BIN_TYPE_UNKNOWN_STR		1334130	0					
ANR	1334857	CompoundStatement		113:72:3229:3229	1334130	1					
ANR	1334858	GotoStatement	goto done ;	3073:3:94058:94067	1334130	0	True				
ANR	1334859	Identifier	done		1334130	0					
ANR	1334860	ExpressionStatement	"tmp_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"	3075:2:94075:94126	1334130	15	True				
ANR	1334861	AssignmentExpression	"tmp_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"		1334130	0		=			
ANR	1334862	Identifier	tmp_offset		1334130	0					
ANR	1334863	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"		1334130	1					
ANR	1334864	Callee	Elf_ ( r_bin_elf_v2p_new )		1334130	0					
ANR	1334865	CallExpression	Elf_ ( r_bin_elf_v2p_new )		1334130	0					
ANR	1334866	Callee	Elf_		1334130	0					
ANR	1334867	Identifier	Elf_		1334130	0					
ANR	1334868	ArgumentList	r_bin_elf_v2p_new		1334130	1					
ANR	1334869	Argument	r_bin_elf_v2p_new		1334130	0					
ANR	1334870	Identifier	r_bin_elf_v2p_new		1334130	0					
ANR	1334871	ArgumentList	bin		1334130	1					
ANR	1334872	Argument	bin		1334130	0					
ANR	1334873	Identifier	bin		1334130	0					
ANR	1334874	Argument	toffset		1334130	1					
ANR	1334875	Identifier	toffset		1334130	0					
ANR	1334876	IfStatement	if ( tmp_offset == UT64_MAX )		1334130	16					
ANR	1334877	Condition	tmp_offset == UT64_MAX	3076:6:94134:94155	1334130	0	True				
ANR	1334878	EqualityExpression	tmp_offset == UT64_MAX		1334130	0		==			
ANR	1334879	Identifier	tmp_offset		1334130	0					
ANR	1334880	Identifier	UT64_MAX		1334130	1					
ANR	1334881	CompoundStatement		117:30:3334:3334	1334130	1					
ANR	1334882	ExpressionStatement	tmp_offset = toffset	3077:3:94163:94183	1334130	0	True				
ANR	1334883	AssignmentExpression	tmp_offset = toffset		1334130	0		=			
ANR	1334884	Identifier	tmp_offset		1334130	0					
ANR	1334885	Identifier	toffset		1334130	1					
ANR	1334886	ExpressionStatement	is_vaddr = true	3078:3:94188:94203	1334130	1	True				
ANR	1334887	AssignmentExpression	is_vaddr = true		1334130	0		=			
ANR	1334888	Identifier	is_vaddr		1334130	0					
ANR	1334889	Identifier	true		1334130	1					
ANR	1334890	IfStatement	if ( tmp_offset > bin -> size )		1334130	17					
ANR	1334891	Condition	tmp_offset > bin -> size	3080:6:94215:94236	1334130	0	True				
ANR	1334892	RelationalExpression	tmp_offset > bin -> size		1334130	0		>			
ANR	1334893	Identifier	tmp_offset		1334130	0					
ANR	1334894	PtrMemberAccess	bin -> size		1334130	1					
ANR	1334895	Identifier	bin		1334130	0					
ANR	1334896	Identifier	size		1334130	1					
ANR	1334897	CompoundStatement		121:30:3415:3415	1334130	1					
ANR	1334898	GotoStatement	goto done ;	3081:3:94244:94253	1334130	0	True				
ANR	1334899	Identifier	done		1334130	0					
ANR	1334900	IfStatement	if ( sym [ i ] . st_name + 2 > bin -> strtab_size )		1334130	18					
ANR	1334901	Condition	sym [ i ] . st_name + 2 > bin -> strtab_size	3083:6:94265:94301	1334130	0	True				
ANR	1334902	RelationalExpression	sym [ i ] . st_name + 2 > bin -> strtab_size		1334130	0		>			
ANR	1334903	AdditiveExpression	sym [ i ] . st_name + 2		1334130	0		+			
ANR	1334904	MemberAccess	sym [ i ] . st_name		1334130	0					
ANR	1334905	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334906	Identifier	sym		1334130	0					
ANR	1334907	Identifier	i		1334130	1					
ANR	1334908	Identifier	st_name		1334130	1					
ANR	1334909	PrimaryExpression	2		1334130	1					
ANR	1334910	PtrMemberAccess	bin -> strtab_size		1334130	1					
ANR	1334911	Identifier	bin		1334130	0					
ANR	1334912	Identifier	strtab_size		1334130	1					
ANR	1334913	CompoundStatement		124:45:3480:3480	1334130	1					
ANR	1334914	GotoStatement	goto done ;	3087:3:94494:94503	1334130	0	True				
ANR	1334915	Identifier	done		1334130	0					
ANR	1334916	ExpressionStatement	ret [ ret_ctr ] . offset = tmp_offset	3089:2:94511:94543	1334130	19	True				
ANR	1334917	AssignmentExpression	ret [ ret_ctr ] . offset = tmp_offset		1334130	0		=			
ANR	1334918	MemberAccess	ret [ ret_ctr ] . offset		1334130	0					
ANR	1334919	ArrayIndexing	ret [ ret_ctr ]		1334130	0					
ANR	1334920	Identifier	ret		1334130	0					
ANR	1334921	Identifier	ret_ctr		1334130	1					
ANR	1334922	Identifier	offset		1334130	1					
ANR	1334923	Identifier	tmp_offset		1334130	1					
ANR	1334924	ExpressionStatement	ret [ ret_ctr ] . size = tsize	3090:2:94547:94572	1334130	20	True				
ANR	1334925	AssignmentExpression	ret [ ret_ctr ] . size = tsize		1334130	0		=			
ANR	1334926	MemberAccess	ret [ ret_ctr ] . size		1334130	0					
ANR	1334927	ArrayIndexing	ret [ ret_ctr ]		1334130	0					
ANR	1334928	Identifier	ret		1334130	0					
ANR	1334929	Identifier	ret_ctr		1334130	1					
ANR	1334930	Identifier	size		1334130	1					
ANR	1334931	Identifier	tsize		1334130	1					
ANR	1334932	CompoundStatement		135:3:3827:3876	1334130	21					
ANR	1334933	IdentifierDeclStatement	int rest = ELF_STRING_LENGTH - 1 ;	3092:3:94581:94613	1334130	0	True				
ANR	1334934	IdentifierDecl	rest = ELF_STRING_LENGTH - 1		1334130	0					
ANR	1334935	IdentifierDeclType	int		1334130	0					
ANR	1334936	Identifier	rest		1334130	1					
ANR	1334937	AssignmentExpression	rest = ELF_STRING_LENGTH - 1		1334130	2		=			
ANR	1334938	Identifier	rest		1334130	0					
ANR	1334939	AdditiveExpression	ELF_STRING_LENGTH - 1		1334130	1		-			
ANR	1334940	Identifier	ELF_STRING_LENGTH		1334130	0					
ANR	1334941	PrimaryExpression	1		1334130	1					
ANR	1334942	IdentifierDeclStatement	int st_name = sym [ i ] . st_name ;	3093:3:94618:94646	1334130	1	True				
ANR	1334943	IdentifierDecl	st_name = sym [ i ] . st_name		1334130	0					
ANR	1334944	IdentifierDeclType	int		1334130	0					
ANR	1334945	Identifier	st_name		1334130	1					
ANR	1334946	AssignmentExpression	st_name = sym [ i ] . st_name		1334130	2		=			
ANR	1334947	Identifier	st_name		1334130	0					
ANR	1334948	MemberAccess	sym [ i ] . st_name		1334130	1					
ANR	1334949	ArrayIndexing	sym [ i ]		1334130	0					
ANR	1334950	Identifier	sym		1334130	0					
ANR	1334951	Identifier	i		1334130	1					
ANR	1334952	Identifier	st_name		1334130	1					
ANR	1334953	IdentifierDeclStatement	"int maxsize = R_MIN ( bin -> size , bin -> strtab_size ) ;"	3094:3:94651:94700	1334130	2	True				
ANR	1334954	IdentifierDecl	"maxsize = R_MIN ( bin -> size , bin -> strtab_size )"		1334130	0					
ANR	1334955	IdentifierDeclType	int		1334130	0					
ANR	1334956	Identifier	maxsize		1334130	1					
ANR	1334957	AssignmentExpression	"maxsize = R_MIN ( bin -> size , bin -> strtab_size )"		1334130	2		=			
ANR	1334958	Identifier	maxsize		1334130	0					
ANR	1334959	CallExpression	"R_MIN ( bin -> size , bin -> strtab_size )"		1334130	1					
ANR	1334960	Callee	R_MIN		1334130	0					
ANR	1334961	Identifier	R_MIN		1334130	0					
ANR	1334962	ArgumentList	bin -> size		1334130	1					
ANR	1334963	Argument	bin -> size		1334130	0					
ANR	1334964	PtrMemberAccess	bin -> size		1334130	0					
ANR	1334965	Identifier	bin		1334130	0					
ANR	1334966	Identifier	size		1334130	1					
ANR	1334967	Argument	bin -> strtab_size		1334130	1					
ANR	1334968	PtrMemberAccess	bin -> strtab_size		1334130	0					
ANR	1334969	Identifier	bin		1334130	0					
ANR	1334970	Identifier	strtab_size		1334130	1					
ANR	1334971	IfStatement	if ( st_name < 0 || st_name >= maxsize )		1334130	3					
ANR	1334972	Condition	st_name < 0 || st_name >= maxsize	3095:7:94709:94741	1334130	0	True				
ANR	1334973	OrExpression	st_name < 0 || st_name >= maxsize		1334130	0		||			
ANR	1334974	RelationalExpression	st_name < 0		1334130	0		<			
ANR	1334975	Identifier	st_name		1334130	0					
ANR	1334976	PrimaryExpression	0		1334130	1					
ANR	1334977	RelationalExpression	st_name >= maxsize		1334130	1		>=			
ANR	1334978	Identifier	st_name		1334130	0					
ANR	1334979	Identifier	maxsize		1334130	1					
ANR	1334980	CompoundStatement		136:42:3920:3920	1334130	1					
ANR	1334981	ExpressionStatement	ret [ ret_ctr ] . name [ 0 ] = 0	3096:4:94750:94774	1334130	0	True				
ANR	1334982	AssignmentExpression	ret [ ret_ctr ] . name [ 0 ] = 0		1334130	0		=			
ANR	1334983	ArrayIndexing	ret [ ret_ctr ] . name [ 0 ]		1334130	0					
ANR	1334984	MemberAccess	ret [ ret_ctr ] . name		1334130	0					
ANR	1334985	ArrayIndexing	ret [ ret_ctr ]		1334130	0					
ANR	1334986	Identifier	ret		1334130	0					
ANR	1334987	Identifier	ret_ctr		1334130	1					
ANR	1334988	Identifier	name		1334130	1					
ANR	1334989	PrimaryExpression	0		1334130	1					
ANR	1334990	PrimaryExpression	0		1334130	1					
ANR	1334991	ElseStatement	else		1334130	0					
ANR	1334992	CompoundStatement		139:4:3968:4023	1334130	0					
ANR	1334993	IdentifierDeclStatement	"const int len = __strnlen ( bin -> strtab + st_name , rest ) ;"	3098:4:94792:94847	1334130	0	True				
ANR	1334994	IdentifierDecl	"len = __strnlen ( bin -> strtab + st_name , rest )"		1334130	0					
ANR	1334995	IdentifierDeclType	const int		1334130	0					
ANR	1334996	Identifier	len		1334130	1					
ANR	1334997	AssignmentExpression	"len = __strnlen ( bin -> strtab + st_name , rest )"		1334130	2		=			
ANR	1334998	Identifier	len		1334130	0					
ANR	1334999	CallExpression	"__strnlen ( bin -> strtab + st_name , rest )"		1334130	1					
ANR	1335000	Callee	__strnlen		1334130	0					
ANR	1335001	Identifier	__strnlen		1334130	0					
ANR	1335002	ArgumentList	bin -> strtab + st_name		1334130	1					
ANR	1335003	Argument	bin -> strtab + st_name		1334130	0					
ANR	1335004	AdditiveExpression	bin -> strtab + st_name		1334130	0		+			
ANR	1335005	PtrMemberAccess	bin -> strtab		1334130	0					
ANR	1335006	Identifier	bin		1334130	0					
ANR	1335007	Identifier	strtab		1334130	1					
ANR	1335008	Identifier	st_name		1334130	1					
ANR	1335009	Argument	rest		1334130	1					
ANR	1335010	Identifier	rest		1334130	0					
ANR	1335011	ExpressionStatement	"memcpy ( ret [ ret_ctr ] . name , & bin -> strtab [ st_name ] , len )"	3099:4:94853:94907	1334130	1	True				
ANR	1335012	CallExpression	"memcpy ( ret [ ret_ctr ] . name , & bin -> strtab [ st_name ] , len )"		1334130	0					
ANR	1335013	Callee	memcpy		1334130	0					
ANR	1335014	Identifier	memcpy		1334130	0					
ANR	1335015	ArgumentList	ret [ ret_ctr ] . name		1334130	1					
ANR	1335016	Argument	ret [ ret_ctr ] . name		1334130	0					
ANR	1335017	MemberAccess	ret [ ret_ctr ] . name		1334130	0					
ANR	1335018	ArrayIndexing	ret [ ret_ctr ]		1334130	0					
ANR	1335019	Identifier	ret		1334130	0					
ANR	1335020	Identifier	ret_ctr		1334130	1					
ANR	1335021	Identifier	name		1334130	1					
ANR	1335022	Argument	& bin -> strtab [ st_name ]		1334130	1					
ANR	1335023	UnaryOperationExpression	& bin -> strtab [ st_name ]		1334130	0					
ANR	1335024	UnaryOperator	&		1334130	0					
ANR	1335025	ArrayIndexing	bin -> strtab [ st_name ]		1334130	1					
ANR	1335026	PtrMemberAccess	bin -> strtab		1334130	0					
ANR	1335027	Identifier	bin		1334130	0					
ANR	1335028	Identifier	strtab		1334130	1					
ANR	1335029	Identifier	st_name		1334130	1					
ANR	1335030	Argument	len		1334130	2					
ANR	1335031	Identifier	len		1334130	0					
ANR	1335032	ExpressionStatement	ret [ ret_ctr ] . ordinal = i	3102:2:94920:94944	1334130	22	True				
ANR	1335033	AssignmentExpression	ret [ ret_ctr ] . ordinal = i		1334130	0		=			
ANR	1335034	MemberAccess	ret [ ret_ctr ] . ordinal		1334130	0					
ANR	1335035	ArrayIndexing	ret [ ret_ctr ]		1334130	0					
ANR	1335036	Identifier	ret		1334130	0					
ANR	1335037	Identifier	ret_ctr		1334130	1					
ANR	1335038	Identifier	ordinal		1334130	1					
ANR	1335039	Identifier	i		1334130	1					
ANR	1335040	ExpressionStatement	ret [ ret_ctr ] . in_shdr = false	3103:2:94948:94976	1334130	23	True				
ANR	1335041	AssignmentExpression	ret [ ret_ctr ] . in_shdr = false		1334130	0		=			
ANR	1335042	MemberAccess	ret [ ret_ctr ] . in_shdr		1334130	0					
ANR	1335043	ArrayIndexing	ret [ ret_ctr ]		1334130	0					
ANR	1335044	Identifier	ret		1334130	0					
ANR	1335045	Identifier	ret_ctr		1334130	1					
ANR	1335046	Identifier	in_shdr		1334130	1					
ANR	1335047	Identifier	false		1334130	1					
ANR	1335048	ExpressionStatement	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ] = '\\0'	3104:2:94980:95027	1334130	24	True				
ANR	1335049	AssignmentExpression	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ] = '\\0'		1334130	0		=			
ANR	1335050	ArrayIndexing	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ]		1334130	0					
ANR	1335051	MemberAccess	ret [ ret_ctr ] . name		1334130	0					
ANR	1335052	ArrayIndexing	ret [ ret_ctr ]		1334130	0					
ANR	1335053	Identifier	ret		1334130	0					
ANR	1335054	Identifier	ret_ctr		1334130	1					
ANR	1335055	Identifier	name		1334130	1					
ANR	1335056	AdditiveExpression	ELF_STRING_LENGTH - 2		1334130	1		-			
ANR	1335057	Identifier	ELF_STRING_LENGTH		1334130	0					
ANR	1335058	PrimaryExpression	2		1334130	1					
ANR	1335059	PrimaryExpression	'\\0'		1334130	1					
ANR	1335060	ExpressionStatement	"fill_symbol_bind_and_type ( bin , & ret [ ret_ctr ] , & sym [ i ] )"	3105:2:95031:95086	1334130	25	True				
ANR	1335061	CallExpression	"fill_symbol_bind_and_type ( bin , & ret [ ret_ctr ] , & sym [ i ] )"		1334130	0					
ANR	1335062	Callee	fill_symbol_bind_and_type		1334130	0					
ANR	1335063	Identifier	fill_symbol_bind_and_type		1334130	0					
ANR	1335064	ArgumentList	bin		1334130	1					
ANR	1335065	Argument	bin		1334130	0					
ANR	1335066	Identifier	bin		1334130	0					
ANR	1335067	Argument	& ret [ ret_ctr ]		1334130	1					
ANR	1335068	UnaryOperationExpression	& ret [ ret_ctr ]		1334130	0					
ANR	1335069	UnaryOperator	&		1334130	0					
ANR	1335070	ArrayIndexing	ret [ ret_ctr ]		1334130	1					
ANR	1335071	Identifier	ret		1334130	0					
ANR	1335072	Identifier	ret_ctr		1334130	1					
ANR	1335073	Argument	& sym [ i ]		1334130	2					
ANR	1335074	UnaryOperationExpression	& sym [ i ]		1334130	0					
ANR	1335075	UnaryOperator	&		1334130	0					
ANR	1335076	ArrayIndexing	sym [ i ]		1334130	1					
ANR	1335077	Identifier	sym		1334130	0					
ANR	1335078	Identifier	i		1334130	1					
ANR	1335079	ExpressionStatement	ret [ ret_ctr ] . is_sht_null = is_sht_null	3106:2:95090:95128	1334130	26	True				
ANR	1335080	AssignmentExpression	ret [ ret_ctr ] . is_sht_null = is_sht_null		1334130	0		=			
ANR	1335081	MemberAccess	ret [ ret_ctr ] . is_sht_null		1334130	0					
ANR	1335082	ArrayIndexing	ret [ ret_ctr ]		1334130	0					
ANR	1335083	Identifier	ret		1334130	0					
ANR	1335084	Identifier	ret_ctr		1334130	1					
ANR	1335085	Identifier	is_sht_null		1334130	1					
ANR	1335086	Identifier	is_sht_null		1334130	1					
ANR	1335087	ExpressionStatement	ret [ ret_ctr ] . is_vaddr = is_vaddr	3107:2:95132:95164	1334130	27	True				
ANR	1335088	AssignmentExpression	ret [ ret_ctr ] . is_vaddr = is_vaddr		1334130	0		=			
ANR	1335089	MemberAccess	ret [ ret_ctr ] . is_vaddr		1334130	0					
ANR	1335090	ArrayIndexing	ret [ ret_ctr ]		1334130	0					
ANR	1335091	Identifier	ret		1334130	0					
ANR	1335092	Identifier	ret_ctr		1334130	1					
ANR	1335093	Identifier	is_vaddr		1334130	1					
ANR	1335094	Identifier	is_vaddr		1334130	1					
ANR	1335095	ExpressionStatement	ret [ ret_ctr ] . last = 0	3108:2:95168:95189	1334130	28	True				
ANR	1335096	AssignmentExpression	ret [ ret_ctr ] . last = 0		1334130	0		=			
ANR	1335097	MemberAccess	ret [ ret_ctr ] . last		1334130	0					
ANR	1335098	ArrayIndexing	ret [ ret_ctr ]		1334130	0					
ANR	1335099	Identifier	ret		1334130	0					
ANR	1335100	Identifier	ret_ctr		1334130	1					
ANR	1335101	Identifier	last		1334130	1					
ANR	1335102	PrimaryExpression	0		1334130	1					
ANR	1335103	ExpressionStatement	ret_ctr ++	3109:2:95193:95202	1334130	29	True				
ANR	1335104	PostIncDecOperationExpression	ret_ctr ++		1334130	0					
ANR	1335105	Identifier	ret_ctr		1334130	0					
ANR	1335106	IncDec	++		1334130	1					
ANR	1335107	Label	done :	3111:0:95207:95211	1334130	32	True				
ANR	1335108	Identifier	done		1334130	0					
ANR	1335109	CompoundStatement		154:1:4436:4436	1334130	33					
ANR	1335110	ExpressionStatement	nsym = i > 0 ? i : 1	3114:2:95264:95282	1334130	0	True				
ANR	1335111	AssignmentExpression	nsym = i > 0 ? i : 1		1334130	0		=			
ANR	1335112	Identifier	nsym		1334130	0					
ANR	1335113	ConditionalExpression	i > 0 ? i : 1		1334130	1					
ANR	1335114	Condition	i > 0		1334130	0					
ANR	1335115	RelationalExpression	i > 0		1334130	0		>			
ANR	1335116	Identifier	i		1334130	0					
ANR	1335117	PrimaryExpression	0		1334130	1					
ANR	1335118	Identifier	i		1334130	1					
ANR	1335119	PrimaryExpression	1		1334130	2					
ANR	1335120	Statement	Elf_	3115:2:95286:95289	1334130	1	True				
ANR	1335121	Statement	(	3115:6:95290:95290	1334130	2	True				
ANR	1335122	Statement	Sym	3115:7:95291:95293	1334130	3	True				
ANR	1335123	Statement	)	3115:10:95294:95294	1334130	4	True				
ANR	1335124	Statement	*	3115:12:95296:95296	1334130	5	True				
ANR	1335125	Statement	temp_sym	3115:13:95297:95304	1334130	6	True				
ANR	1335126	Statement	=	3115:22:95306:95306	1334130	7	True				
ANR	1335127	Statement	(	3115:24:95308:95308	1334130	8	True				
ANR	1335128	Statement	Elf_	3115:25:95309:95312	1334130	9	True				
ANR	1335129	Statement	(	3115:29:95313:95313	1334130	10	True				
ANR	1335130	Statement	Sym	3115:30:95314:95316	1334130	11	True				
ANR	1335131	Statement	)	3115:33:95317:95317	1334130	12	True				
ANR	1335132	Statement	*	3115:35:95319:95319	1334130	13	True				
ANR	1335133	Statement	)	3115:36:95320:95320	1334130	14	True				
ANR	1335134	ExpressionStatement	"realloc ( sym , ( nsym * GROWTH_FACTOR ) * sym_size )"	3115:37:95321:95369	1334130	15	True				
ANR	1335135	CallExpression	"realloc ( sym , ( nsym * GROWTH_FACTOR ) * sym_size )"		1334130	0					
ANR	1335136	Callee	realloc		1334130	0					
ANR	1335137	Identifier	realloc		1334130	0					
ANR	1335138	ArgumentList	sym		1334130	1					
ANR	1335139	Argument	sym		1334130	0					
ANR	1335140	Identifier	sym		1334130	0					
ANR	1335141	Argument	( nsym * GROWTH_FACTOR ) * sym_size		1334130	1					
ANR	1335142	MultiplicativeExpression	( nsym * GROWTH_FACTOR ) * sym_size		1334130	0		*			
ANR	1335143	MultiplicativeExpression	nsym * GROWTH_FACTOR		1334130	0		*			
ANR	1335144	Identifier	nsym		1334130	0					
ANR	1335145	Identifier	GROWTH_FACTOR		1334130	1					
ANR	1335146	Identifier	sym_size		1334130	1					
ANR	1335147	IfStatement	if ( ! temp_sym )		1334130	16					
ANR	1335148	Condition	! temp_sym	3116:6:95377:95385	1334130	0	True				
ANR	1335149	UnaryOperationExpression	! temp_sym		1334130	0					
ANR	1335150	UnaryOperator	!		1334130	0					
ANR	1335151	Identifier	temp_sym		1334130	1					
ANR	1335152	CompoundStatement		157:17:4564:4564	1334130	1					
ANR	1335153	GotoStatement	goto beach ;	3117:3:95393:95403	1334130	0	True				
ANR	1335154	Identifier	beach		1334130	0					
ANR	1335155	ExpressionStatement	sym = temp_sym	3119:2:95411:95425	1334130	17	True				
ANR	1335156	AssignmentExpression	sym = temp_sym		1334130	0		=			
ANR	1335157	Identifier	sym		1334130	0					
ANR	1335158	Identifier	temp_sym		1334130	1					
ANR	1335159	CompoundStatement		164:2:4648:4737	1334130	34					
ANR	1335160	ExpressionStatement	ret_ctr = ret_ctr > 0 ? ret_ctr : 1	3122:2:95435:95468	1334130	0	True				
ANR	1335161	AssignmentExpression	ret_ctr = ret_ctr > 0 ? ret_ctr : 1		1334130	0		=			
ANR	1335162	Identifier	ret_ctr		1334130	0					
ANR	1335163	ConditionalExpression	ret_ctr > 0 ? ret_ctr : 1		1334130	1					
ANR	1335164	Condition	ret_ctr > 0		1334130	0					
ANR	1335165	RelationalExpression	ret_ctr > 0		1334130	0		>			
ANR	1335166	Identifier	ret_ctr		1334130	0					
ANR	1335167	PrimaryExpression	0		1334130	1					
ANR	1335168	Identifier	ret_ctr		1334130	1					
ANR	1335169	PrimaryExpression	1		1334130	2					
ANR	1335170	IdentifierDeclStatement	"RBinElfSymbol * p = ( RBinElfSymbol * ) realloc ( ret , ( ret_ctr + 1 ) * sizeof ( RBinElfSymbol ) ) ;"	3123:2:95472:95561	1334130	1	True				
ANR	1335171	IdentifierDecl	"* p = ( RBinElfSymbol * ) realloc ( ret , ( ret_ctr + 1 ) * sizeof ( RBinElfSymbol ) )"		1334130	0					
ANR	1335172	IdentifierDeclType	RBinElfSymbol *		1334130	0					
ANR	1335173	Identifier	p		1334130	1					
ANR	1335174	AssignmentExpression	"* p = ( RBinElfSymbol * ) realloc ( ret , ( ret_ctr + 1 ) * sizeof ( RBinElfSymbol ) )"		1334130	2		=			
ANR	1335175	Identifier	p		1334130	0					
ANR	1335176	CastExpression	"( RBinElfSymbol * ) realloc ( ret , ( ret_ctr + 1 ) * sizeof ( RBinElfSymbol ) )"		1334130	1					
ANR	1335177	CastTarget	RBinElfSymbol *		1334130	0					
ANR	1335178	CallExpression	"realloc ( ret , ( ret_ctr + 1 ) * sizeof ( RBinElfSymbol ) )"		1334130	1					
ANR	1335179	Callee	realloc		1334130	0					
ANR	1335180	Identifier	realloc		1334130	0					
ANR	1335181	ArgumentList	ret		1334130	1					
ANR	1335182	Argument	ret		1334130	0					
ANR	1335183	Identifier	ret		1334130	0					
ANR	1335184	Argument	( ret_ctr + 1 ) * sizeof ( RBinElfSymbol )		1334130	1					
ANR	1335185	MultiplicativeExpression	( ret_ctr + 1 ) * sizeof ( RBinElfSymbol )		1334130	0		*			
ANR	1335186	AdditiveExpression	ret_ctr + 1		1334130	0		+			
ANR	1335187	Identifier	ret_ctr		1334130	0					
ANR	1335188	PrimaryExpression	1		1334130	1					
ANR	1335189	SizeofExpression	sizeof ( RBinElfSymbol )		1334130	1					
ANR	1335190	Sizeof	sizeof		1334130	0					
ANR	1335191	SizeofOperand	RBinElfSymbol		1334130	1					
ANR	1335192	IfStatement	if ( ! p )		1334130	2					
ANR	1335193	Condition	! p	3124:6:95569:95570	1334130	0	True				
ANR	1335194	UnaryOperationExpression	! p		1334130	0					
ANR	1335195	UnaryOperator	!		1334130	0					
ANR	1335196	Identifier	p		1334130	1					
ANR	1335197	CompoundStatement		165:10:4749:4749	1334130	1					
ANR	1335198	GotoStatement	goto beach ;	3125:3:95578:95588	1334130	0	True				
ANR	1335199	Identifier	beach		1334130	0					
ANR	1335200	ExpressionStatement	ret = p	3127:2:95596:95603	1334130	3	True				
ANR	1335201	AssignmentExpression	ret = p		1334130	0		=			
ANR	1335202	Identifier	ret		1334130	0					
ANR	1335203	Identifier	p		1334130	1					
ANR	1335204	ExpressionStatement	ret [ ret_ctr ] . last = 1	3129:1:95609:95630	1334130	35	True				
ANR	1335205	AssignmentExpression	ret [ ret_ctr ] . last = 1		1334130	0		=			
ANR	1335206	MemberAccess	ret [ ret_ctr ] . last		1334130	0					
ANR	1335207	ArrayIndexing	ret [ ret_ctr ]		1334130	0					
ANR	1335208	Identifier	ret		1334130	0					
ANR	1335209	Identifier	ret_ctr		1334130	1					
ANR	1335210	Identifier	last		1334130	1					
ANR	1335211	PrimaryExpression	1		1334130	1					
ANR	1335212	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS && ! bin -> imports_by_ord_size )		1334130	36					
ANR	1335213	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS && ! bin -> imports_by_ord_size	3130:5:95637:95697	1334130	0	True				
ANR	1335214	AndExpression	type == R_BIN_ELF_IMPORT_SYMBOLS && ! bin -> imports_by_ord_size		1334130	0		&&			
ANR	1335215	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		1334130	0		==			
ANR	1335216	Identifier	type		1334130	0					
ANR	1335217	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		1334130	1					
ANR	1335218	UnaryOperationExpression	! bin -> imports_by_ord_size		1334130	1					
ANR	1335219	UnaryOperator	!		1334130	0					
ANR	1335220	PtrMemberAccess	bin -> imports_by_ord_size		1334130	1					
ANR	1335221	Identifier	bin		1334130	0					
ANR	1335222	Identifier	imports_by_ord_size		1334130	1					
ANR	1335223	CompoundStatement		171:68:4876:4876	1334130	1					
ANR	1335224	ExpressionStatement	bin -> imports_by_ord_size = ret_ctr + 1	3131:2:95704:95742	1334130	0	True				
ANR	1335225	AssignmentExpression	bin -> imports_by_ord_size = ret_ctr + 1		1334130	0		=			
ANR	1335226	PtrMemberAccess	bin -> imports_by_ord_size		1334130	0					
ANR	1335227	Identifier	bin		1334130	0					
ANR	1335228	Identifier	imports_by_ord_size		1334130	1					
ANR	1335229	AdditiveExpression	ret_ctr + 1		1334130	1		+			
ANR	1335230	Identifier	ret_ctr		1334130	0					
ANR	1335231	PrimaryExpression	1		1334130	1					
ANR	1335232	IfStatement	if ( ret_ctr > 0 )		1334130	1					
ANR	1335233	Condition	ret_ctr > 0	3132:6:95750:95760	1334130	0	True				
ANR	1335234	RelationalExpression	ret_ctr > 0		1334130	0		>			
ANR	1335235	Identifier	ret_ctr		1334130	0					
ANR	1335236	PrimaryExpression	0		1334130	1					
ANR	1335237	CompoundStatement		173:19:4939:4939	1334130	1					
ANR	1335238	ExpressionStatement	"bin -> imports_by_ord = ( RBinImport * * ) calloc ( ret_ctr + 1 , sizeof ( RBinImport * ) )"	3133:3:95768:95849	1334130	0	True				
ANR	1335239	AssignmentExpression	"bin -> imports_by_ord = ( RBinImport * * ) calloc ( ret_ctr + 1 , sizeof ( RBinImport * ) )"		1334130	0		=			
ANR	1335240	PtrMemberAccess	bin -> imports_by_ord		1334130	0					
ANR	1335241	Identifier	bin		1334130	0					
ANR	1335242	Identifier	imports_by_ord		1334130	1					
ANR	1335243	CastExpression	"( RBinImport * * ) calloc ( ret_ctr + 1 , sizeof ( RBinImport * ) )"		1334130	1					
ANR	1335244	CastTarget	RBinImport * *		1334130	0					
ANR	1335245	CallExpression	"calloc ( ret_ctr + 1 , sizeof ( RBinImport * ) )"		1334130	1					
ANR	1335246	Callee	calloc		1334130	0					
ANR	1335247	Identifier	calloc		1334130	0					
ANR	1335248	ArgumentList	ret_ctr + 1		1334130	1					
ANR	1335249	Argument	ret_ctr + 1		1334130	0					
ANR	1335250	AdditiveExpression	ret_ctr + 1		1334130	0		+			
ANR	1335251	Identifier	ret_ctr		1334130	0					
ANR	1335252	PrimaryExpression	1		1334130	1					
ANR	1335253	Argument	sizeof ( RBinImport * )		1334130	1					
ANR	1335254	SizeofExpression	sizeof ( RBinImport * )		1334130	0					
ANR	1335255	Sizeof	sizeof		1334130	0					
ANR	1335256	SizeofOperand	RBinImport *		1334130	1					
ANR	1335257	ElseStatement	else		1334130	0					
ANR	1335258	CompoundStatement		175:9:5036:5036	1334130	0					
ANR	1335259	ExpressionStatement	bin -> imports_by_ord = NULL	3135:3:95865:95891	1334130	0	True				
ANR	1335260	AssignmentExpression	bin -> imports_by_ord = NULL		1334130	0		=			
ANR	1335261	PtrMemberAccess	bin -> imports_by_ord		1334130	0					
ANR	1335262	Identifier	bin		1334130	0					
ANR	1335263	Identifier	imports_by_ord		1334130	1					
ANR	1335264	Identifier	NULL		1334130	1					
ANR	1335265	ElseStatement	else		1334130	0					
ANR	1335266	IfStatement	if ( type == R_BIN_ELF_ALL_SYMBOLS && ! bin -> symbols_by_ord_size && ret_ctr )		1334130	0					
ANR	1335267	Condition	type == R_BIN_ELF_ALL_SYMBOLS && ! bin -> symbols_by_ord_size && ret_ctr	3137:12:95909:95977	1334130	0	True				
ANR	1335268	AndExpression	type == R_BIN_ELF_ALL_SYMBOLS && ! bin -> symbols_by_ord_size && ret_ctr		1334130	0		&&			
ANR	1335269	EqualityExpression	type == R_BIN_ELF_ALL_SYMBOLS		1334130	0		==			
ANR	1335270	Identifier	type		1334130	0					
ANR	1335271	Identifier	R_BIN_ELF_ALL_SYMBOLS		1334130	1					
ANR	1335272	AndExpression	! bin -> symbols_by_ord_size && ret_ctr		1334130	1		&&			
ANR	1335273	UnaryOperationExpression	! bin -> symbols_by_ord_size		1334130	0					
ANR	1335274	UnaryOperator	!		1334130	0					
ANR	1335275	PtrMemberAccess	bin -> symbols_by_ord_size		1334130	1					
ANR	1335276	Identifier	bin		1334130	0					
ANR	1335277	Identifier	symbols_by_ord_size		1334130	1					
ANR	1335278	Identifier	ret_ctr		1334130	1					
ANR	1335279	CompoundStatement		178:83:5156:5156	1334130	1					
ANR	1335280	ExpressionStatement	bin -> symbols_by_ord_size = ret_ctr + 1	3138:2:95984:96022	1334130	0	True				
ANR	1335281	AssignmentExpression	bin -> symbols_by_ord_size = ret_ctr + 1		1334130	0		=			
ANR	1335282	PtrMemberAccess	bin -> symbols_by_ord_size		1334130	0					
ANR	1335283	Identifier	bin		1334130	0					
ANR	1335284	Identifier	symbols_by_ord_size		1334130	1					
ANR	1335285	AdditiveExpression	ret_ctr + 1		1334130	1		+			
ANR	1335286	Identifier	ret_ctr		1334130	0					
ANR	1335287	PrimaryExpression	1		1334130	1					
ANR	1335288	IfStatement	if ( ret_ctr > 0 )		1334130	1					
ANR	1335289	Condition	ret_ctr > 0	3139:6:96030:96040	1334130	0	True				
ANR	1335290	RelationalExpression	ret_ctr > 0		1334130	0		>			
ANR	1335291	Identifier	ret_ctr		1334130	0					
ANR	1335292	PrimaryExpression	0		1334130	1					
ANR	1335293	CompoundStatement		180:19:5219:5219	1334130	1					
ANR	1335294	ExpressionStatement	"bin -> symbols_by_ord = ( RBinSymbol * * ) calloc ( ret_ctr + 1 , sizeof ( RBinSymbol * ) )"	3140:3:96048:96129	1334130	0	True				
ANR	1335295	AssignmentExpression	"bin -> symbols_by_ord = ( RBinSymbol * * ) calloc ( ret_ctr + 1 , sizeof ( RBinSymbol * ) )"		1334130	0		=			
ANR	1335296	PtrMemberAccess	bin -> symbols_by_ord		1334130	0					
ANR	1335297	Identifier	bin		1334130	0					
ANR	1335298	Identifier	symbols_by_ord		1334130	1					
ANR	1335299	CastExpression	"( RBinSymbol * * ) calloc ( ret_ctr + 1 , sizeof ( RBinSymbol * ) )"		1334130	1					
ANR	1335300	CastTarget	RBinSymbol * *		1334130	0					
ANR	1335301	CallExpression	"calloc ( ret_ctr + 1 , sizeof ( RBinSymbol * ) )"		1334130	1					
ANR	1335302	Callee	calloc		1334130	0					
ANR	1335303	Identifier	calloc		1334130	0					
ANR	1335304	ArgumentList	ret_ctr + 1		1334130	1					
ANR	1335305	Argument	ret_ctr + 1		1334130	0					
ANR	1335306	AdditiveExpression	ret_ctr + 1		1334130	0		+			
ANR	1335307	Identifier	ret_ctr		1334130	0					
ANR	1335308	PrimaryExpression	1		1334130	1					
ANR	1335309	Argument	sizeof ( RBinSymbol * )		1334130	1					
ANR	1335310	SizeofExpression	sizeof ( RBinSymbol * )		1334130	0					
ANR	1335311	Sizeof	sizeof		1334130	0					
ANR	1335312	SizeofOperand	RBinSymbol *		1334130	1					
ANR	1335313	ElseStatement	else		1334130	0					
ANR	1335314	CompoundStatement		182:9:5316:5316	1334130	0					
ANR	1335315	ExpressionStatement	bin -> symbols_by_ord = NULL	3142:3:96145:96171	1334130	0	True				
ANR	1335316	AssignmentExpression	bin -> symbols_by_ord = NULL		1334130	0		=			
ANR	1335317	PtrMemberAccess	bin -> symbols_by_ord		1334130	0					
ANR	1335318	Identifier	bin		1334130	0					
ANR	1335319	Identifier	symbols_by_ord		1334130	1					
ANR	1335320	Identifier	NULL		1334130	1					
ANR	1335321	ExpressionStatement	free ( sym )	3145:1:96181:96191	1334130	37	True				
ANR	1335322	CallExpression	free ( sym )		1334130	0					
ANR	1335323	Callee	free		1334130	0					
ANR	1335324	Identifier	free		1334130	0					
ANR	1335325	ArgumentList	sym		1334130	1					
ANR	1335326	Argument	sym		1334130	0					
ANR	1335327	Identifier	sym		1334130	0					
ANR	1335328	ReturnStatement	return ret ;	3146:1:96194:96204	1334130	38	True				
ANR	1335329	Identifier	ret		1334130	0					
ANR	1335330	Label	beach :	3147:0:96206:96211	1334130	39	True				
ANR	1335331	Identifier	beach		1334130	0					
ANR	1335332	ExpressionStatement	free ( sym )	3148:1:96214:96224	1334130	40	True				
ANR	1335333	CallExpression	free ( sym )		1334130	0					
ANR	1335334	Callee	free		1334130	0					
ANR	1335335	Identifier	free		1334130	0					
ANR	1335336	ArgumentList	sym		1334130	1					
ANR	1335337	Argument	sym		1334130	0					
ANR	1335338	Identifier	sym		1334130	0					
ANR	1335339	ExpressionStatement	free ( ret )	3149:1:96227:96237	1334130	41	True				
ANR	1335340	CallExpression	free ( ret )		1334130	0					
ANR	1335341	Callee	free		1334130	0					
ANR	1335342	Identifier	free		1334130	0					
ANR	1335343	ArgumentList	ret		1334130	1					
ANR	1335344	Argument	ret		1334130	0					
ANR	1335345	Identifier	ret		1334130	0					
ANR	1335346	ReturnStatement	return NULL ;	3150:1:96240:96251	1334130	42	True				
ANR	1335347	Identifier	NULL		1334130	0					
ANR	1335348	ReturnType	static RBinElfSymbol *		1334130	1					
ANR	1335349	Identifier	get_symbols_from_phdr		1334130	2					
ANR	1335350	ParameterList	"ELFOBJ * bin , int type"		1334130	3					
ANR	1335351	Parameter	ELFOBJ * bin	2960:44:90800:90810	1334130	0	True				
ANR	1335352	ParameterType	ELFOBJ *		1334130	0					
ANR	1335353	Identifier	bin		1334130	1					
ANR	1335354	Parameter	int type	2960:57:90813:90820	1334130	1	True				
ANR	1335355	ParameterType	int		1334130	0					
ANR	1335356	Identifier	type		1334130	1					
ANR	1335357	CFGEntryNode	ENTRY		1334130		True				
ANR	1335358	CFGExitNode	EXIT		1334130		True				
ANR	1335359	Symbol	sym [ i ] . st_other		1334130						
ANR	1335360	Symbol	bin -> b		1334130						
ANR	1335361	Symbol	bin -> dyn_buf [ j ] . d_un . d_ptr		1334130						
ANR	1335362	Symbol	bin		1334130						
ANR	1335363	Symbol	R_BIN_ELF_IMPORT_SYMBOLS		1334130						
ANR	1335364	Symbol	bin -> phdr		1334130						
ANR	1335365	Symbol	sym [ i ] . st_value		1334130						
ANR	1335366	Symbol	type		1334130						
ANR	1335367	Symbol	READ64		1334130						
ANR	1335368	Symbol	sym_size		1334130						
ANR	1335369	Symbol	len		1334130						
ANR	1335370	Symbol	capacity2		1334130						
ANR	1335371	Symbol	bin -> ehdr		1334130						
ANR	1335372	Symbol	capacity1		1334130						
ANR	1335373	Symbol	R_BIN_TYPE_UNKNOWN_STR		1334130						
ANR	1335374	Symbol	addr_sym_table		1334130						
ANR	1335375	Symbol	bin -> strtab_size		1334130						
ANR	1335376	Symbol	bin -> dyn_buf		1334130						
ANR	1335377	Symbol	sym [ i ] . st_name		1334130						
ANR	1335378	Symbol	bin -> ehdr . e_phnum		1334130						
ANR	1335379	Symbol	tmp_offset		1334130						
ANR	1335380	Symbol	ret [ ret_ctr ] . size		1334130						
ANR	1335381	Symbol	size		1334130						
ANR	1335382	Symbol	ret [ ret_ctr ] . is_sht_null		1334130						
ANR	1335383	Symbol	maxsize		1334130						
ANR	1335384	Symbol	is_sht_null		1334130						
ANR	1335385	Symbol	ret [ ret_ctr ] . offset		1334130						
ANR	1335386	Symbol	* ret [ ret_ctr ] . name		1334130						
ANR	1335387	Symbol	* ret_ctr		1334130						
ANR	1335388	Symbol	ret [ ret_ctr ] . in_shdr		1334130						
ANR	1335389	Symbol	bin -> dyn_buf [ j ] . d_un . d_val		1334130						
ANR	1335390	Symbol	* bin		1334130						
ANR	1335391	Symbol	bin -> symbols_by_ord		1334130						
ANR	1335392	Symbol	R_BIN_BIND_UNKNOWN_STR		1334130						
ANR	1335393	Symbol	bin -> dyn_buf [ j ] . d_tag		1334130						
ANR	1335394	Symbol	type2str		1334130						
ANR	1335395	Symbol	* * bin		1334130						
ANR	1335396	Symbol	SHT_NULL		1334130						
ANR	1335397	Symbol	UT32_MUL		1334130						
ANR	1335398	Symbol	bin -> imports_by_ord		1334130						
ANR	1335399	Symbol	st_name		1334130						
ANR	1335400	Symbol	i		1334130						
ANR	1335401	Symbol	j		1334130						
ANR	1335402	Symbol	R_MIN		1334130						
ANR	1335403	Symbol	& size		1334130						
ANR	1335404	Symbol	p		1334130						
ANR	1335405	Symbol	r		1334130						
ANR	1335406	Symbol	s		1334130						
ANR	1335407	Symbol	sym [ i ] . st_info		1334130						
ANR	1335408	Symbol	* ELF_STRING_LENGTH		1334130						
ANR	1335409	Symbol	__strnlen		1334130						
ANR	1335410	Symbol	r_bin_elf_v2p_new		1334130						
ANR	1335411	Symbol	get_import_addr		1334130						
ANR	1335412	Symbol	bin -> size		1334130						
ANR	1335413	Symbol	is_vaddr		1334130						
ANR	1335414	Symbol	ret [ ret_ctr ] . name		1334130						
ANR	1335415	Symbol	temp_ret		1334130						
ANR	1335416	Symbol	realloc		1334130						
ANR	1335417	Symbol	bind2str		1334130						
ANR	1335418	Symbol	toffset		1334130						
ANR	1335419	Symbol	ret [ ret_ctr ] . last		1334130						
ANR	1335420	Symbol	* * ret_ctr		1334130						
ANR	1335421	Symbol	bin -> imports_by_ord_size		1334130						
ANR	1335422	Symbol	* bin -> dyn_buf		1334130						
ANR	1335423	Symbol	r_bin_elf_v2p		1334130						
ANR	1335424	Symbol	bin -> strtab		1334130						
ANR	1335425	Symbol	ret		1334130						
ANR	1335426	Symbol	strcmp		1334130						
ANR	1335427	Symbol	NULL		1334130						
ANR	1335428	Symbol	Sym		1334130						
ANR	1335429	Symbol	bin -> dyn_entries		1334130						
ANR	1335430	Symbol	nsym		1334130						
ANR	1335431	Symbol	R_BIN_ELF_ALL_SYMBOLS		1334130						
ANR	1335432	Symbol	READ32		1334130						
ANR	1335433	Symbol	ELF_STRING_LENGTH		1334130						
ANR	1335434	Symbol	sym [ i ] . st_size		1334130						
ANR	1335435	Symbol	* sym		1334130						
ANR	1335436	Symbol	true		1334130						
ANR	1335437	Symbol	READ8		1334130						
ANR	1335438	Symbol	sym		1334130						
ANR	1335439	Symbol	ret [ ret_ctr ] . ordinal		1334130						
ANR	1335440	Symbol	calloc		1334130						
ANR	1335441	Symbol	* ret		1334130						
ANR	1335442	Symbol	ret [ ret_ctr ] . is_vaddr		1334130						
ANR	1335443	Symbol	sym [ i ] . st_shndx		1334130						
ANR	1335444	Symbol	UT64_MAX		1334130						
ANR	1335445	Symbol	bin -> symbols_by_ord_size		1334130						
ANR	1335446	Symbol	Elf_		1334130						
ANR	1335447	Symbol	GROWTH_FACTOR		1334130						
ANR	1335448	Symbol	rest		1334130						
ANR	1335449	Symbol	READ16		1334130						
ANR	1335450	Symbol	false		1334130						
ANR	1335451	Symbol	temp_sym		1334130						
ANR	1335452	Symbol	bin -> dyn_buf [ j ] . d_un		1334130						
ANR	1335453	Symbol	ret_ctr		1334130						
ANR	1335454	Symbol	tsize		1334130						
ANR	1335455	Symbol	* i		1334130						
ANR	1335456	Symbol	* j		1334130						
ANR	1335457	Symbol	* * ret		1334130						
ANR	1335458	Symbol	r_buf_read_at		1334130						
ANR	1335459	Function	r_bin_elf_get_phdr_symbols	3153:22:96278:96514							
ANR	1335460	FunctionDef	r_bin_elf_get_phdr_symbols (ELFOBJ * bin)		1335459	0					
ANR	1335461	CompoundStatement		3153:68:96324:96514	1335459	0					
ANR	1335462	IfStatement	if ( ! bin )		1335459	0					
ANR	1335463	Condition	! bin	3154:5:96331:96334	1335459	0	True				
ANR	1335464	UnaryOperationExpression	! bin		1335459	0					
ANR	1335465	UnaryOperator	!		1335459	0					
ANR	1335466	Identifier	bin		1335459	1					
ANR	1335467	CompoundStatement		2:11:12:12	1335459	1					
ANR	1335468	ReturnStatement	return NULL ;	3155:2:96341:96352	1335459	0	True				
ANR	1335469	Identifier	NULL		1335459	0					
ANR	1335470	IfStatement	if ( bin -> phdr_symbols )		1335459	1					
ANR	1335471	Condition	bin -> phdr_symbols	3157:5:96362:96378	1335459	0	True				
ANR	1335472	PtrMemberAccess	bin -> phdr_symbols		1335459	0					
ANR	1335473	Identifier	bin		1335459	0					
ANR	1335474	Identifier	phdr_symbols		1335459	1					
ANR	1335475	CompoundStatement		5:24:56:56	1335459	1					
ANR	1335476	ReturnStatement	return bin -> phdr_symbols ;	3158:2:96385:96409	1335459	0	True				
ANR	1335477	PtrMemberAccess	bin -> phdr_symbols		1335459	0					
ANR	1335478	Identifier	bin		1335459	0					
ANR	1335479	Identifier	phdr_symbols		1335459	1					
ANR	1335480	ExpressionStatement	"bin -> phdr_symbols = get_symbols_from_phdr ( bin , R_BIN_ELF_ALL_SYMBOLS )"	3160:1:96415:96485	1335459	2	True				
ANR	1335481	AssignmentExpression	"bin -> phdr_symbols = get_symbols_from_phdr ( bin , R_BIN_ELF_ALL_SYMBOLS )"		1335459	0		=			
ANR	1335482	PtrMemberAccess	bin -> phdr_symbols		1335459	0					
ANR	1335483	Identifier	bin		1335459	0					
ANR	1335484	Identifier	phdr_symbols		1335459	1					
ANR	1335485	CallExpression	"get_symbols_from_phdr ( bin , R_BIN_ELF_ALL_SYMBOLS )"		1335459	1					
ANR	1335486	Callee	get_symbols_from_phdr		1335459	0					
ANR	1335487	Identifier	get_symbols_from_phdr		1335459	0					
ANR	1335488	ArgumentList	bin		1335459	1					
ANR	1335489	Argument	bin		1335459	0					
ANR	1335490	Identifier	bin		1335459	0					
ANR	1335491	Argument	R_BIN_ELF_ALL_SYMBOLS		1335459	1					
ANR	1335492	Identifier	R_BIN_ELF_ALL_SYMBOLS		1335459	0					
ANR	1335493	ReturnStatement	return bin -> phdr_symbols ;	3161:1:96488:96512	1335459	3	True				
ANR	1335494	PtrMemberAccess	bin -> phdr_symbols		1335459	0					
ANR	1335495	Identifier	bin		1335459	0					
ANR	1335496	Identifier	phdr_symbols		1335459	1					
ANR	1335497	ReturnType	Elf_		1335459	1					
ANR	1335498	Identifier	( r_bin_elf_get_phdr_symbols )		1335459	2					
ANR	1335499	Identifier	r_bin_elf_get_phdr_symbols		1335459	3					
ANR	1335500	ParameterList	ELFOBJ * bin		1335459	4					
ANR	1335501	Parameter	ELFOBJ * bin	3153:55:96311:96321	1335459	0	True				
ANR	1335502	ParameterType	ELFOBJ *		1335459	0					
ANR	1335503	Identifier	bin		1335459	1					
ANR	1335504	CFGEntryNode	ENTRY		1335459		True				
ANR	1335505	CFGExitNode	EXIT		1335459		True				
ANR	1335506	Symbol	NULL		1335459						
ANR	1335507	Symbol	get_symbols_from_phdr		1335459						
ANR	1335508	Symbol	bin		1335459						
ANR	1335509	Symbol	bin -> phdr_symbols		1335459						
ANR	1335510	Symbol	R_BIN_ELF_ALL_SYMBOLS		1335459						
ANR	1335511	Symbol	* bin		1335459						
ANR	1335512	Function	r_bin_elf_get_phdr_imports	3164:22:96539:96778							
ANR	1335513	FunctionDef	r_bin_elf_get_phdr_imports (ELFOBJ * bin)		1335512	0					
ANR	1335514	CompoundStatement		3164:68:96585:96778	1335512	0					
ANR	1335515	IfStatement	if ( ! bin )		1335512	0					
ANR	1335516	Condition	! bin	3165:5:96592:96595	1335512	0	True				
ANR	1335517	UnaryOperationExpression	! bin		1335512	0					
ANR	1335518	UnaryOperator	!		1335512	0					
ANR	1335519	Identifier	bin		1335512	1					
ANR	1335520	CompoundStatement		2:11:12:12	1335512	1					
ANR	1335521	ReturnStatement	return NULL ;	3166:2:96602:96613	1335512	0	True				
ANR	1335522	Identifier	NULL		1335512	0					
ANR	1335523	IfStatement	if ( bin -> phdr_imports )		1335512	1					
ANR	1335524	Condition	bin -> phdr_imports	3168:5:96623:96639	1335512	0	True				
ANR	1335525	PtrMemberAccess	bin -> phdr_imports		1335512	0					
ANR	1335526	Identifier	bin		1335512	0					
ANR	1335527	Identifier	phdr_imports		1335512	1					
ANR	1335528	CompoundStatement		5:24:56:56	1335512	1					
ANR	1335529	ReturnStatement	return bin -> phdr_imports ;	3169:2:96646:96670	1335512	0	True				
ANR	1335530	PtrMemberAccess	bin -> phdr_imports		1335512	0					
ANR	1335531	Identifier	bin		1335512	0					
ANR	1335532	Identifier	phdr_imports		1335512	1					
ANR	1335533	ExpressionStatement	"bin -> phdr_imports = get_symbols_from_phdr ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"	3171:1:96676:96749	1335512	2	True				
ANR	1335534	AssignmentExpression	"bin -> phdr_imports = get_symbols_from_phdr ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"		1335512	0		=			
ANR	1335535	PtrMemberAccess	bin -> phdr_imports		1335512	0					
ANR	1335536	Identifier	bin		1335512	0					
ANR	1335537	Identifier	phdr_imports		1335512	1					
ANR	1335538	CallExpression	"get_symbols_from_phdr ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"		1335512	1					
ANR	1335539	Callee	get_symbols_from_phdr		1335512	0					
ANR	1335540	Identifier	get_symbols_from_phdr		1335512	0					
ANR	1335541	ArgumentList	bin		1335512	1					
ANR	1335542	Argument	bin		1335512	0					
ANR	1335543	Identifier	bin		1335512	0					
ANR	1335544	Argument	R_BIN_ELF_IMPORT_SYMBOLS		1335512	1					
ANR	1335545	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		1335512	0					
ANR	1335546	ReturnStatement	return bin -> phdr_imports ;	3172:1:96752:96776	1335512	3	True				
ANR	1335547	PtrMemberAccess	bin -> phdr_imports		1335512	0					
ANR	1335548	Identifier	bin		1335512	0					
ANR	1335549	Identifier	phdr_imports		1335512	1					
ANR	1335550	ReturnType	Elf_		1335512	1					
ANR	1335551	Identifier	( r_bin_elf_get_phdr_imports )		1335512	2					
ANR	1335552	Identifier	r_bin_elf_get_phdr_imports		1335512	3					
ANR	1335553	ParameterList	ELFOBJ * bin		1335512	4					
ANR	1335554	Parameter	ELFOBJ * bin	3164:55:96572:96582	1335512	0	True				
ANR	1335555	ParameterType	ELFOBJ *		1335512	0					
ANR	1335556	Identifier	bin		1335512	1					
ANR	1335557	CFGEntryNode	ENTRY		1335512		True				
ANR	1335558	CFGExitNode	EXIT		1335512		True				
ANR	1335559	Symbol	NULL		1335512						
ANR	1335560	Symbol	bin -> phdr_imports		1335512						
ANR	1335561	Symbol	get_symbols_from_phdr		1335512						
ANR	1335562	Symbol	bin		1335512						
ANR	1335563	Symbol	R_BIN_ELF_IMPORT_SYMBOLS		1335512						
ANR	1335564	Symbol	* bin		1335512						
ANR	1335565	Function	get_phdr_symbols	3175:22:96803:96981							
ANR	1335566	FunctionDef	"get_phdr_symbols (ELFOBJ * bin , int type)"		1335565	0					
ANR	1335567	CompoundStatement		3175:68:96849:96981	1335565	0					
ANR	1335568	ReturnStatement	return ( type != R_BIN_ELF_IMPORT_SYMBOLS ) ? Elf_ ( r_bin_elf_get_phdr_symbols ) ( bin ) : Elf_ ( r_bin_elf_get_phdr_imports ) ( bin ) ;	3176:1:96852:96979	1335565	0	True				
ANR	1335569	ConditionalExpression	( type != R_BIN_ELF_IMPORT_SYMBOLS ) ? Elf_ ( r_bin_elf_get_phdr_symbols ) ( bin ) : Elf_ ( r_bin_elf_get_phdr_imports ) ( bin )		1335565	0					
ANR	1335570	Condition	type != R_BIN_ELF_IMPORT_SYMBOLS		1335565	0					
ANR	1335571	EqualityExpression	type != R_BIN_ELF_IMPORT_SYMBOLS		1335565	0		!=			
ANR	1335572	Identifier	type		1335565	0					
ANR	1335573	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		1335565	1					
ANR	1335574	CallExpression	Elf_ ( r_bin_elf_get_phdr_symbols ) ( bin )		1335565	1					
ANR	1335575	Callee	Elf_ ( r_bin_elf_get_phdr_symbols )		1335565	0					
ANR	1335576	CallExpression	Elf_ ( r_bin_elf_get_phdr_symbols )		1335565	0					
ANR	1335577	Callee	Elf_		1335565	0					
ANR	1335578	Identifier	Elf_		1335565	0					
ANR	1335579	ArgumentList	r_bin_elf_get_phdr_symbols		1335565	1					
ANR	1335580	Argument	r_bin_elf_get_phdr_symbols		1335565	0					
ANR	1335581	Identifier	r_bin_elf_get_phdr_symbols		1335565	0					
ANR	1335582	ArgumentList	bin		1335565	1					
ANR	1335583	Argument	bin		1335565	0					
ANR	1335584	Identifier	bin		1335565	0					
ANR	1335585	CallExpression	Elf_ ( r_bin_elf_get_phdr_imports ) ( bin )		1335565	2					
ANR	1335586	Callee	Elf_ ( r_bin_elf_get_phdr_imports )		1335565	0					
ANR	1335587	CallExpression	Elf_ ( r_bin_elf_get_phdr_imports )		1335565	0					
ANR	1335588	Callee	Elf_		1335565	0					
ANR	1335589	Identifier	Elf_		1335565	0					
ANR	1335590	ArgumentList	r_bin_elf_get_phdr_imports		1335565	1					
ANR	1335591	Argument	r_bin_elf_get_phdr_imports		1335565	0					
ANR	1335592	Identifier	r_bin_elf_get_phdr_imports		1335565	0					
ANR	1335593	ArgumentList	bin		1335565	1					
ANR	1335594	Argument	bin		1335565	0					
ANR	1335595	Identifier	bin		1335565	0					
ANR	1335596	ReturnType	Elf_		1335565	1					
ANR	1335597	Identifier	( get_phdr_symbols )		1335565	2					
ANR	1335598	Identifier	get_phdr_symbols		1335565	3					
ANR	1335599	ParameterList	"ELFOBJ * bin , int type"		1335565	4					
ANR	1335600	Parameter	ELFOBJ * bin	3175:45:96826:96836	1335565	0	True				
ANR	1335601	ParameterType	ELFOBJ *		1335565	0					
ANR	1335602	Identifier	bin		1335565	1					
ANR	1335603	Parameter	int type	3175:58:96839:96846	1335565	1	True				
ANR	1335604	ParameterType	int		1335565	0					
ANR	1335605	Identifier	type		1335565	1					
ANR	1335606	CFGEntryNode	ENTRY		1335565		True				
ANR	1335607	CFGExitNode	EXIT		1335565		True				
ANR	1335608	Symbol	Elf_		1335565						
ANR	1335609	Symbol	r_bin_elf_get_phdr_symbols		1335565						
ANR	1335610	Symbol	bin		1335565						
ANR	1335611	Symbol	R_BIN_ELF_IMPORT_SYMBOLS		1335565						
ANR	1335612	Symbol	r_bin_elf_get_phdr_imports		1335565						
ANR	1335613	Symbol	type		1335565						
ANR	1335614	Function	fix_symbols	3181:0:96984:98289							
ANR	1335615	FunctionDef	"fix_symbols (ELFOBJ * bin , int nsym , int type , RBinElfSymbol * * sym)"		1335614	0					
ANR	1335616	CompoundStatement		3181:83:97067:98289	1335614	0					
ANR	1335617	IdentifierDeclStatement	int count = 0 ;	3182:1:97070:97083	1335614	0	True				
ANR	1335618	IdentifierDecl	count = 0		1335614	0					
ANR	1335619	IdentifierDeclType	int		1335614	0					
ANR	1335620	Identifier	count		1335614	1					
ANR	1335621	AssignmentExpression	count = 0		1335614	2		=			
ANR	1335622	Identifier	count		1335614	0					
ANR	1335623	PrimaryExpression	0		1335614	1					
ANR	1335624	IdentifierDeclStatement	RBinElfSymbol * ret = * sym ;	3183:1:97086:97111	1335614	1	True				
ANR	1335625	IdentifierDecl	* ret = * sym		1335614	0					
ANR	1335626	IdentifierDeclType	RBinElfSymbol *		1335614	0					
ANR	1335627	Identifier	ret		1335614	1					
ANR	1335628	AssignmentExpression	* ret = * sym		1335614	2		=			
ANR	1335629	Identifier	ret		1335614	0					
ANR	1335630	UnaryOperationExpression	* sym		1335614	1					
ANR	1335631	UnaryOperator	*		1335614	0					
ANR	1335632	Identifier	sym		1335614	1					
ANR	1335633	IdentifierDeclStatement	"RBinElfSymbol * phdr_symbols = Elf_ ( get_phdr_symbols ) ( bin , type ) ;"	3184:1:97114:97178	1335614	2	True				
ANR	1335634	IdentifierDecl	"* phdr_symbols = Elf_ ( get_phdr_symbols ) ( bin , type )"		1335614	0					
ANR	1335635	IdentifierDeclType	RBinElfSymbol *		1335614	0					
ANR	1335636	Identifier	phdr_symbols		1335614	1					
ANR	1335637	AssignmentExpression	"* phdr_symbols = Elf_ ( get_phdr_symbols ) ( bin , type )"		1335614	2		=			
ANR	1335638	Identifier	phdr_symbols		1335614	0					
ANR	1335639	CallExpression	"Elf_ ( get_phdr_symbols ) ( bin , type )"		1335614	1					
ANR	1335640	Callee	Elf_ ( get_phdr_symbols )		1335614	0					
ANR	1335641	CallExpression	Elf_ ( get_phdr_symbols )		1335614	0					
ANR	1335642	Callee	Elf_		1335614	0					
ANR	1335643	Identifier	Elf_		1335614	0					
ANR	1335644	ArgumentList	get_phdr_symbols		1335614	1					
ANR	1335645	Argument	get_phdr_symbols		1335614	0					
ANR	1335646	Identifier	get_phdr_symbols		1335614	0					
ANR	1335647	ArgumentList	bin		1335614	1					
ANR	1335648	Argument	bin		1335614	0					
ANR	1335649	Identifier	bin		1335614	0					
ANR	1335650	Argument	type		1335614	1					
ANR	1335651	Identifier	type		1335614	0					
ANR	1335652	IdentifierDeclStatement	"RBinElfSymbol * tmp , * p ;"	3185:1:97181:97203	1335614	3	True				
ANR	1335653	IdentifierDecl	* tmp		1335614	0					
ANR	1335654	IdentifierDeclType	RBinElfSymbol *		1335614	0					
ANR	1335655	Identifier	tmp		1335614	1					
ANR	1335656	IdentifierDecl	* p		1335614	1					
ANR	1335657	IdentifierDeclType	RBinElfSymbol *		1335614	0					
ANR	1335658	Identifier	p		1335614	1					
ANR	1335659	IfStatement	if ( phdr_symbols )		1335614	4					
ANR	1335660	Condition	phdr_symbols	3186:5:97210:97221	1335614	0	True				
ANR	1335661	Identifier	phdr_symbols		1335614	0					
ANR	1335662	CompoundStatement		7:2:160:182	1335614	1					
ANR	1335663	IdentifierDeclStatement	RBinElfSymbol * d = ret ;	3187:2:97228:97250	1335614	0	True				
ANR	1335664	IdentifierDecl	* d = ret		1335614	0					
ANR	1335665	IdentifierDeclType	RBinElfSymbol *		1335614	0					
ANR	1335666	Identifier	d		1335614	1					
ANR	1335667	AssignmentExpression	* d = ret		1335614	2		=			
ANR	1335668	Identifier	ret		1335614	0					
ANR	1335669	Identifier	ret		1335614	1					
ANR	1335670	WhileStatement	while ( ! d -> last )		1335614	1					
ANR	1335671	Condition	! d -> last	3188:9:97261:97268	1335614	0	True				
ANR	1335672	UnaryOperationExpression	! d -> last		1335614	0					
ANR	1335673	UnaryOperator	!		1335614	0					
ANR	1335674	PtrMemberAccess	d -> last		1335614	1					
ANR	1335675	Identifier	d		1335614	0					
ANR	1335676	Identifier	last		1335614	1					
ANR	1335677	CompoundStatement		8:19:203:203	1335614	1					
ANR	1335678	ExpressionStatement	p = phdr_symbols	3190:3:97304:97320	1335614	0	True				
ANR	1335679	AssignmentExpression	p = phdr_symbols		1335614	0		=			
ANR	1335680	Identifier	p		1335614	0					
ANR	1335681	Identifier	phdr_symbols		1335614	1					
ANR	1335682	WhileStatement	while ( ! p -> last )		1335614	1					
ANR	1335683	Condition	! p -> last	3191:10:97332:97339	1335614	0	True				
ANR	1335684	UnaryOperationExpression	! p -> last		1335614	0					
ANR	1335685	UnaryOperator	!		1335614	0					
ANR	1335686	PtrMemberAccess	p -> last		1335614	1					
ANR	1335687	Identifier	p		1335614	0					
ANR	1335688	Identifier	last		1335614	1					
ANR	1335689	CompoundStatement		11:20:274:274	1335614	1					
ANR	1335690	IfStatement	if ( d -> offset == p -> offset || p -> ordinal == d -> ordinal )		1335614	0					
ANR	1335691	Condition	d -> offset == p -> offset || p -> ordinal == d -> ordinal	3192:8:97352:97401	1335614	0	True				
ANR	1335692	OrExpression	d -> offset == p -> offset || p -> ordinal == d -> ordinal		1335614	0		||			
ANR	1335693	EqualityExpression	d -> offset == p -> offset		1335614	0		==			
ANR	1335694	PtrMemberAccess	d -> offset		1335614	0					
ANR	1335695	Identifier	d		1335614	0					
ANR	1335696	Identifier	offset		1335614	1					
ANR	1335697	PtrMemberAccess	p -> offset		1335614	1					
ANR	1335698	Identifier	p		1335614	0					
ANR	1335699	Identifier	offset		1335614	1					
ANR	1335700	EqualityExpression	p -> ordinal == d -> ordinal		1335614	1		==			
ANR	1335701	PtrMemberAccess	p -> ordinal		1335614	0					
ANR	1335702	Identifier	p		1335614	0					
ANR	1335703	Identifier	ordinal		1335614	1					
ANR	1335704	PtrMemberAccess	d -> ordinal		1335614	1					
ANR	1335705	Identifier	d		1335614	0					
ANR	1335706	Identifier	ordinal		1335614	1					
ANR	1335707	CompoundStatement		12:60:336:336	1335614	1					
ANR	1335708	ExpressionStatement	p -> in_shdr = true	3193:5:97411:97428	1335614	0	True				
ANR	1335709	AssignmentExpression	p -> in_shdr = true		1335614	0		=			
ANR	1335710	PtrMemberAccess	p -> in_shdr		1335614	0					
ANR	1335711	Identifier	p		1335614	0					
ANR	1335712	Identifier	in_shdr		1335614	1					
ANR	1335713	Identifier	true		1335614	1					
ANR	1335714	IfStatement	"if ( * p -> name && * d -> name && r_str_startswith ( d -> name , ""$"" ) )"		1335614	1					
ANR	1335715	Condition	"* p -> name && * d -> name && r_str_startswith ( d -> name , ""$"" )"	3194:9:97439:97493	1335614	0	True				
ANR	1335716	AndExpression	"* p -> name && * d -> name && r_str_startswith ( d -> name , ""$"" )"		1335614	0		&&			
ANR	1335717	UnaryOperationExpression	* p -> name		1335614	0					
ANR	1335718	UnaryOperator	*		1335614	0					
ANR	1335719	PtrMemberAccess	p -> name		1335614	1					
ANR	1335720	Identifier	p		1335614	0					
ANR	1335721	Identifier	name		1335614	1					
ANR	1335722	AndExpression	"* d -> name && r_str_startswith ( d -> name , ""$"" )"		1335614	1		&&			
ANR	1335723	UnaryOperationExpression	* d -> name		1335614	0					
ANR	1335724	UnaryOperator	*		1335614	0					
ANR	1335725	PtrMemberAccess	d -> name		1335614	1					
ANR	1335726	Identifier	d		1335614	0					
ANR	1335727	Identifier	name		1335614	1					
ANR	1335728	CallExpression	"r_str_startswith ( d -> name , ""$"" )"		1335614	1					
ANR	1335729	Callee	r_str_startswith		1335614	0					
ANR	1335730	Identifier	r_str_startswith		1335614	0					
ANR	1335731	ArgumentList	d -> name		1335614	1					
ANR	1335732	Argument	d -> name		1335614	0					
ANR	1335733	PtrMemberAccess	d -> name		1335614	0					
ANR	1335734	Identifier	d		1335614	0					
ANR	1335735	Identifier	name		1335614	1					
ANR	1335736	Argument	"""$"""		1335614	1					
ANR	1335737	PrimaryExpression	"""$"""		1335614	0					
ANR	1335738	CompoundStatement		14:66:428:428	1335614	1					
ANR	1335739	ExpressionStatement	"strcpy ( d -> name , p -> name )"	3195:6:97504:97529	1335614	0	True				
ANR	1335740	CallExpression	"strcpy ( d -> name , p -> name )"		1335614	0					
ANR	1335741	Callee	strcpy		1335614	0					
ANR	1335742	Identifier	strcpy		1335614	0					
ANR	1335743	ArgumentList	d -> name		1335614	1					
ANR	1335744	Argument	d -> name		1335614	0					
ANR	1335745	PtrMemberAccess	d -> name		1335614	0					
ANR	1335746	Identifier	d		1335614	0					
ANR	1335747	Identifier	name		1335614	1					
ANR	1335748	Argument	p -> name		1335614	1					
ANR	1335749	PtrMemberAccess	p -> name		1335614	0					
ANR	1335750	Identifier	p		1335614	0					
ANR	1335751	Identifier	name		1335614	1					
ANR	1335752	ExpressionStatement	p ++	3198:4:97548:97551	1335614	1	True				
ANR	1335753	PostIncDecOperationExpression	p ++		1335614	0					
ANR	1335754	Identifier	p		1335614	0					
ANR	1335755	IncDec	++		1335614	1					
ANR	1335756	ExpressionStatement	d ++	3200:3:97561:97564	1335614	2	True				
ANR	1335757	PostIncDecOperationExpression	d ++		1335614	0					
ANR	1335758	Identifier	d		1335614	0					
ANR	1335759	IncDec	++		1335614	1					
ANR	1335760	ExpressionStatement	p = phdr_symbols	3202:2:97572:97588	1335614	2	True				
ANR	1335761	AssignmentExpression	p = phdr_symbols		1335614	0		=			
ANR	1335762	Identifier	p		1335614	0					
ANR	1335763	Identifier	phdr_symbols		1335614	1					
ANR	1335764	WhileStatement	while ( ! p -> last )		1335614	3					
ANR	1335765	Condition	! p -> last	3203:9:97599:97606	1335614	0	True				
ANR	1335766	UnaryOperationExpression	! p -> last		1335614	0					
ANR	1335767	UnaryOperator	!		1335614	0					
ANR	1335768	PtrMemberAccess	p -> last		1335614	1					
ANR	1335769	Identifier	p		1335614	0					
ANR	1335770	Identifier	last		1335614	1					
ANR	1335771	CompoundStatement		23:19:541:541	1335614	1					
ANR	1335772	IfStatement	if ( ! p -> in_shdr )		1335614	0					
ANR	1335773	Condition	! p -> in_shdr	3204:7:97618:97628	1335614	0	True				
ANR	1335774	UnaryOperationExpression	! p -> in_shdr		1335614	0					
ANR	1335775	UnaryOperator	!		1335614	0					
ANR	1335776	PtrMemberAccess	p -> in_shdr		1335614	1					
ANR	1335777	Identifier	p		1335614	0					
ANR	1335778	Identifier	in_shdr		1335614	1					
ANR	1335779	CompoundStatement		24:20:563:563	1335614	1					
ANR	1335780	ExpressionStatement	count ++	3205:4:97637:97644	1335614	0	True				
ANR	1335781	PostIncDecOperationExpression	count ++		1335614	0					
ANR	1335782	Identifier	count		1335614	0					
ANR	1335783	IncDec	++		1335614	1					
ANR	1335784	ExpressionStatement	p ++	3207:3:97654:97657	1335614	1	True				
ANR	1335785	PostIncDecOperationExpression	p ++		1335614	0					
ANR	1335786	Identifier	p		1335614	0					
ANR	1335787	IncDec	++		1335614	1					
ANR	1335788	IfStatement	if ( count > 0 )		1335614	4					
ANR	1335789	Condition	count > 0	3211:6:97804:97812	1335614	0	True				
ANR	1335790	RelationalExpression	count > 0		1335614	0		>			
ANR	1335791	Identifier	count		1335614	0					
ANR	1335792	PrimaryExpression	0		1335614	1					
ANR	1335793	CompoundStatement		31:17:747:747	1335614	1					
ANR	1335794	ExpressionStatement	"tmp = ( RBinElfSymbol * ) realloc ( ret , ( nsym + count + 1 ) * sizeof ( RBinElfSymbol ) )"	3213:3:97911:97991	1335614	0	True				
ANR	1335795	AssignmentExpression	"tmp = ( RBinElfSymbol * ) realloc ( ret , ( nsym + count + 1 ) * sizeof ( RBinElfSymbol ) )"		1335614	0		=			
ANR	1335796	Identifier	tmp		1335614	0					
ANR	1335797	CastExpression	"( RBinElfSymbol * ) realloc ( ret , ( nsym + count + 1 ) * sizeof ( RBinElfSymbol ) )"		1335614	1					
ANR	1335798	CastTarget	RBinElfSymbol *		1335614	0					
ANR	1335799	CallExpression	"realloc ( ret , ( nsym + count + 1 ) * sizeof ( RBinElfSymbol ) )"		1335614	1					
ANR	1335800	Callee	realloc		1335614	0					
ANR	1335801	Identifier	realloc		1335614	0					
ANR	1335802	ArgumentList	ret		1335614	1					
ANR	1335803	Argument	ret		1335614	0					
ANR	1335804	Identifier	ret		1335614	0					
ANR	1335805	Argument	( nsym + count + 1 ) * sizeof ( RBinElfSymbol )		1335614	1					
ANR	1335806	MultiplicativeExpression	( nsym + count + 1 ) * sizeof ( RBinElfSymbol )		1335614	0		*			
ANR	1335807	AdditiveExpression	nsym + count + 1		1335614	0		+			
ANR	1335808	Identifier	nsym		1335614	0					
ANR	1335809	AdditiveExpression	count + 1		1335614	1		+			
ANR	1335810	Identifier	count		1335614	0					
ANR	1335811	PrimaryExpression	1		1335614	1					
ANR	1335812	SizeofExpression	sizeof ( RBinElfSymbol )		1335614	1					
ANR	1335813	Sizeof	sizeof		1335614	0					
ANR	1335814	SizeofOperand	RBinElfSymbol		1335614	1					
ANR	1335815	IfStatement	if ( ! tmp )		1335614	1					
ANR	1335816	Condition	! tmp	3214:7:98000:98003	1335614	0	True				
ANR	1335817	UnaryOperationExpression	! tmp		1335614	0					
ANR	1335818	UnaryOperator	!		1335614	0					
ANR	1335819	Identifier	tmp		1335614	1					
ANR	1335820	CompoundStatement		34:13:938:938	1335614	1					
ANR	1335821	ReturnStatement	return - 1 ;	3215:4:98012:98021	1335614	0	True				
ANR	1335822	UnaryOperationExpression	- 1		1335614	0					
ANR	1335823	UnaryOperator	-		1335614	0					
ANR	1335824	PrimaryExpression	1		1335614	1					
ANR	1335825	ExpressionStatement	ret = tmp	3217:3:98031:98040	1335614	2	True				
ANR	1335826	AssignmentExpression	ret = tmp		1335614	0		=			
ANR	1335827	Identifier	ret		1335614	0					
ANR	1335828	Identifier	tmp		1335614	1					
ANR	1335829	ExpressionStatement	ret [ nsym -- ] . last = 0	3218:3:98045:98065	1335614	3	True				
ANR	1335830	AssignmentExpression	ret [ nsym -- ] . last = 0		1335614	0		=			
ANR	1335831	MemberAccess	ret [ nsym -- ] . last		1335614	0					
ANR	1335832	ArrayIndexing	ret [ nsym -- ]		1335614	0					
ANR	1335833	Identifier	ret		1335614	0					
ANR	1335834	PostIncDecOperationExpression	nsym --		1335614	1					
ANR	1335835	Identifier	nsym		1335614	0					
ANR	1335836	IncDec	--		1335614	1					
ANR	1335837	Identifier	last		1335614	1					
ANR	1335838	PrimaryExpression	0		1335614	1					
ANR	1335839	ExpressionStatement	p = phdr_symbols	3219:3:98070:98086	1335614	4	True				
ANR	1335840	AssignmentExpression	p = phdr_symbols		1335614	0		=			
ANR	1335841	Identifier	p		1335614	0					
ANR	1335842	Identifier	phdr_symbols		1335614	1					
ANR	1335843	WhileStatement	while ( ! p -> last )		1335614	5					
ANR	1335844	Condition	! p -> last	3220:10:98098:98105	1335614	0	True				
ANR	1335845	UnaryOperationExpression	! p -> last		1335614	0					
ANR	1335846	UnaryOperator	!		1335614	0					
ANR	1335847	PtrMemberAccess	p -> last		1335614	1					
ANR	1335848	Identifier	p		1335614	0					
ANR	1335849	Identifier	last		1335614	1					
ANR	1335850	CompoundStatement		40:20:1040:1040	1335614	1					
ANR	1335851	IfStatement	if ( ! p -> in_shdr )		1335614	0					
ANR	1335852	Condition	! p -> in_shdr	3221:8:98118:98128	1335614	0	True				
ANR	1335853	UnaryOperationExpression	! p -> in_shdr		1335614	0					
ANR	1335854	UnaryOperator	!		1335614	0					
ANR	1335855	PtrMemberAccess	p -> in_shdr		1335614	1					
ANR	1335856	Identifier	p		1335614	0					
ANR	1335857	Identifier	in_shdr		1335614	1					
ANR	1335858	CompoundStatement		41:21:1063:1063	1335614	1					
ANR	1335859	ExpressionStatement	"memcpy ( & ret [ ++ nsym ] , p , sizeof ( RBinElfSymbol ) )"	3222:5:98138:98186	1335614	0	True				
ANR	1335860	CallExpression	"memcpy ( & ret [ ++ nsym ] , p , sizeof ( RBinElfSymbol ) )"		1335614	0					
ANR	1335861	Callee	memcpy		1335614	0					
ANR	1335862	Identifier	memcpy		1335614	0					
ANR	1335863	ArgumentList	& ret [ ++ nsym ]		1335614	1					
ANR	1335864	Argument	& ret [ ++ nsym ]		1335614	0					
ANR	1335865	UnaryOperationExpression	& ret [ ++ nsym ]		1335614	0					
ANR	1335866	UnaryOperator	&		1335614	0					
ANR	1335867	ArrayIndexing	ret [ ++ nsym ]		1335614	1					
ANR	1335868	Identifier	ret		1335614	0					
ANR	1335869	UnaryExpression	++ nsym		1335614	1					
ANR	1335870	IncDec	++		1335614	0					
ANR	1335871	Identifier	nsym		1335614	1					
ANR	1335872	Argument	p		1335614	1					
ANR	1335873	Identifier	p		1335614	0					
ANR	1335874	Argument	sizeof ( RBinElfSymbol )		1335614	2					
ANR	1335875	SizeofExpression	sizeof ( RBinElfSymbol )		1335614	0					
ANR	1335876	Sizeof	sizeof		1335614	0					
ANR	1335877	SizeofOperand	RBinElfSymbol		1335614	1					
ANR	1335878	ExpressionStatement	p ++	3224:4:98198:98201	1335614	1	True				
ANR	1335879	PostIncDecOperationExpression	p ++		1335614	0					
ANR	1335880	Identifier	p		1335614	0					
ANR	1335881	IncDec	++		1335614	1					
ANR	1335882	ExpressionStatement	ret [ nsym + 1 ] . last = 1	3226:3:98211:98233	1335614	6	True				
ANR	1335883	AssignmentExpression	ret [ nsym + 1 ] . last = 1		1335614	0		=			
ANR	1335884	MemberAccess	ret [ nsym + 1 ] . last		1335614	0					
ANR	1335885	ArrayIndexing	ret [ nsym + 1 ]		1335614	0					
ANR	1335886	Identifier	ret		1335614	0					
ANR	1335887	AdditiveExpression	nsym + 1		1335614	1		+			
ANR	1335888	Identifier	nsym		1335614	0					
ANR	1335889	PrimaryExpression	1		1335614	1					
ANR	1335890	Identifier	last		1335614	1					
ANR	1335891	PrimaryExpression	1		1335614	1					
ANR	1335892	ExpressionStatement	* sym = ret	3228:2:98241:98251	1335614	5	True				
ANR	1335893	AssignmentExpression	* sym = ret		1335614	0		=			
ANR	1335894	UnaryOperationExpression	* sym		1335614	0					
ANR	1335895	UnaryOperator	*		1335614	0					
ANR	1335896	Identifier	sym		1335614	1					
ANR	1335897	Identifier	ret		1335614	1					
ANR	1335898	ReturnStatement	return nsym + 1 ;	3229:2:98255:98270	1335614	6	True				
ANR	1335899	AdditiveExpression	nsym + 1		1335614	0		+			
ANR	1335900	Identifier	nsym		1335614	0					
ANR	1335901	PrimaryExpression	1		1335614	1					
ANR	1335902	ReturnStatement	return nsym ;	3231:1:98276:98287	1335614	5	True				
ANR	1335903	Identifier	nsym		1335614	0					
ANR	1335904	ReturnType	static int Elf_		1335614	1					
ANR	1335905	Identifier	( fix_symbols )		1335614	2					
ANR	1335906	Identifier	fix_symbols		1335614	3					
ANR	1335907	ParameterList	"ELFOBJ * bin , int nsym , int type , RBinElfSymbol * * sym"		1335614	4					
ANR	1335908	Parameter	ELFOBJ * bin	3181:29:97013:97023	1335614	0	True				
ANR	1335909	ParameterType	ELFOBJ *		1335614	0					
ANR	1335910	Identifier	bin		1335614	1					
ANR	1335911	Parameter	int nsym	3181:42:97026:97033	1335614	1	True				
ANR	1335912	ParameterType	int		1335614	0					
ANR	1335913	Identifier	nsym		1335614	1					
ANR	1335914	Parameter	int type	3181:52:97036:97043	1335614	2	True				
ANR	1335915	ParameterType	int		1335614	0					
ANR	1335916	Identifier	type		1335614	1					
ANR	1335917	Parameter	RBinElfSymbol * * sym	3181:62:97046:97064	1335614	3	True				
ANR	1335918	ParameterType	RBinElfSymbol * *		1335614	0					
ANR	1335919	Identifier	sym		1335614	1					
ANR	1335920	CFGEntryNode	ENTRY		1335614		True				
ANR	1335921	CFGExitNode	EXIT		1335614		True				
ANR	1335922	Symbol	d -> name		1335614						
ANR	1335923	Symbol	bin		1335614						
ANR	1335924	Symbol	sym		1335614						
ANR	1335925	Symbol	ret [ nsym -- ] . last		1335614						
ANR	1335926	Symbol	realloc		1335614						
ANR	1335927	Symbol	* ret		1335614						
ANR	1335928	Symbol	type		1335614						
ANR	1335929	Symbol	p -> ordinal		1335614						
ANR	1335930	Symbol	phdr_symbols		1335614						
ANR	1335931	Symbol	d -> ordinal		1335614						
ANR	1335932	Symbol	tmp		1335614						
ANR	1335933	Symbol	* * p		1335614						
ANR	1335934	Symbol	ret		1335614						
ANR	1335935	Symbol	Elf_		1335614						
ANR	1335936	Symbol	r_str_startswith		1335614						
ANR	1335937	Symbol	get_phdr_symbols		1335614						
ANR	1335938	Symbol	d		1335614						
ANR	1335939	Symbol	p -> last		1335614						
ANR	1335940	Symbol	* * d		1335614						
ANR	1335941	Symbol	* d -> name		1335614						
ANR	1335942	Symbol	count		1335614						
ANR	1335943	Symbol	nsym		1335614						
ANR	1335944	Symbol	* nsym		1335614						
ANR	1335945	Symbol	* d		1335614						
ANR	1335946	Symbol	p		1335614						
ANR	1335947	Symbol	* p -> name		1335614						
ANR	1335948	Symbol	* sym		1335614						
ANR	1335949	Symbol	d -> last		1335614						
ANR	1335950	Symbol	d -> offset		1335614						
ANR	1335951	Symbol	true		1335614						
ANR	1335952	Symbol	p -> offset		1335614						
ANR	1335953	Symbol	ret [ nsym + 1 ] . last		1335614						
ANR	1335954	Symbol	* p		1335614						
ANR	1335955	Symbol	p -> in_shdr		1335614						
ANR	1335956	Symbol	p -> name		1335614						
ANR	1335957	Function	setsymord	3252:0:98732:98958							
ANR	1335958	FunctionDef	"setsymord (ELFOBJ * eobj , ut32 ord , RBinSymbol * ptr)"		1335957	0					
ANR	1335959	CompoundStatement		3252:63:98795:98958	1335957	0					
ANR	1335960	IfStatement	if ( ! eobj -> symbols_by_ord || ord >= eobj -> symbols_by_ord_size )		1335957	0					
ANR	1335961	Condition	! eobj -> symbols_by_ord || ord >= eobj -> symbols_by_ord_size	3253:5:98802:98858	1335957	0	True				
ANR	1335962	OrExpression	! eobj -> symbols_by_ord || ord >= eobj -> symbols_by_ord_size		1335957	0		||			
ANR	1335963	UnaryOperationExpression	! eobj -> symbols_by_ord		1335957	0					
ANR	1335964	UnaryOperator	!		1335957	0					
ANR	1335965	PtrMemberAccess	eobj -> symbols_by_ord		1335957	1					
ANR	1335966	Identifier	eobj		1335957	0					
ANR	1335967	Identifier	symbols_by_ord		1335957	1					
ANR	1335968	RelationalExpression	ord >= eobj -> symbols_by_ord_size		1335957	1		>=			
ANR	1335969	Identifier	ord		1335957	0					
ANR	1335970	PtrMemberAccess	eobj -> symbols_by_ord_size		1335957	1					
ANR	1335971	Identifier	eobj		1335957	0					
ANR	1335972	Identifier	symbols_by_ord_size		1335957	1					
ANR	1335973	CompoundStatement		2:64:65:65	1335957	1					
ANR	1335974	ReturnStatement	return ;	3254:2:98865:98871	1335957	0	True				
ANR	1335975	ExpressionStatement	r_bin_symbol_free ( eobj -> symbols_by_ord [ ord ] )	3256:1:98877:98922	1335957	1	True				
ANR	1335976	CallExpression	r_bin_symbol_free ( eobj -> symbols_by_ord [ ord ] )		1335957	0					
ANR	1335977	Callee	r_bin_symbol_free		1335957	0					
ANR	1335978	Identifier	r_bin_symbol_free		1335957	0					
ANR	1335979	ArgumentList	eobj -> symbols_by_ord [ ord ]		1335957	1					
ANR	1335980	Argument	eobj -> symbols_by_ord [ ord ]		1335957	0					
ANR	1335981	ArrayIndexing	eobj -> symbols_by_ord [ ord ]		1335957	0					
ANR	1335982	PtrMemberAccess	eobj -> symbols_by_ord		1335957	0					
ANR	1335983	Identifier	eobj		1335957	0					
ANR	1335984	Identifier	symbols_by_ord		1335957	1					
ANR	1335985	Identifier	ord		1335957	1					
ANR	1335986	ExpressionStatement	eobj -> symbols_by_ord [ ord ] = ptr	3257:1:98925:98956	1335957	2	True				
ANR	1335987	AssignmentExpression	eobj -> symbols_by_ord [ ord ] = ptr		1335957	0		=			
ANR	1335988	ArrayIndexing	eobj -> symbols_by_ord [ ord ]		1335957	0					
ANR	1335989	PtrMemberAccess	eobj -> symbols_by_ord		1335957	0					
ANR	1335990	Identifier	eobj		1335957	0					
ANR	1335991	Identifier	symbols_by_ord		1335957	1					
ANR	1335992	Identifier	ord		1335957	1					
ANR	1335993	Identifier	ptr		1335957	1					
ANR	1335994	ReturnType	static void		1335957	1					
ANR	1335995	Identifier	setsymord		1335957	2					
ANR	1335996	ParameterList	"ELFOBJ * eobj , ut32 ord , RBinSymbol * ptr"		1335957	3					
ANR	1335997	Parameter	ELFOBJ * eobj	3252:22:98754:98765	1335957	0	True				
ANR	1335998	ParameterType	ELFOBJ *		1335957	0					
ANR	1335999	Identifier	eobj		1335957	1					
ANR	1336000	Parameter	ut32 ord	3252:36:98768:98775	1335957	1	True				
ANR	1336001	ParameterType	ut32		1335957	0					
ANR	1336002	Identifier	ord		1335957	1					
ANR	1336003	Parameter	RBinSymbol * ptr	3252:46:98778:98792	1335957	2	True				
ANR	1336004	ParameterType	RBinSymbol *		1335957	0					
ANR	1336005	Identifier	ptr		1335957	1					
ANR	1336006	CFGEntryNode	ENTRY		1335957		True				
ANR	1336007	CFGExitNode	EXIT		1335957		True				
ANR	1336008	Symbol	ord		1335957						
ANR	1336009	Symbol	eobj -> symbols_by_ord		1335957						
ANR	1336010	Symbol	* eobj -> symbols_by_ord		1335957						
ANR	1336011	Symbol	* eobj		1335957						
ANR	1336012	Symbol	* * eobj		1335957						
ANR	1336013	Symbol	* ord		1335957						
ANR	1336014	Symbol	eobj		1335957						
ANR	1336015	Symbol	eobj -> symbols_by_ord_size		1335957						
ANR	1336016	Symbol	ptr		1335957						
ANR	1336017	DeclStmt									
ANR	1336018	Decl							int	int	bin_bits
ANR	1336019	DeclStmt									
ANR	1336020	Decl							RBinSymbol	RBinSymbol *	ptr
ANR	1336021	DeclStmt									
ANR	1336022	Decl							int	int	len
ANR	1336023	DeclStmt									
ANR	1336024	Decl							ut64	ut64	paddr
ANR	1336025	Decl							ut64	ut64	vaddr
ANR	1336026	DeclStmt									
ANR	1336027	Decl							RBinSymbol	RBinSymbol *	ptr
ANR	1336028	Function	_r_bin_elf_get_symbols_imports	3335:22:100758:108497							
ANR	1336029	FunctionDef	"_r_bin_elf_get_symbols_imports (ELFOBJ * bin , int type)"		1336028	0					
ANR	1336030	CompoundStatement		3335:82:100818:108497	1336028	0					
ANR	1336031	IdentifierDeclStatement	ut32 shdr_size ;	3336:1:100821:100835	1336028	0	True				
ANR	1336032	IdentifierDecl	shdr_size		1336028	0					
ANR	1336033	IdentifierDeclType	ut32		1336028	0					
ANR	1336034	Identifier	shdr_size		1336028	1					
ANR	1336035	IdentifierDeclStatement	"int tsize , nsym , ret_ctr = 0 , i , j , r , k , newsize ;"	3337:1:100838:100887	1336028	1	True				
ANR	1336036	IdentifierDecl	tsize		1336028	0					
ANR	1336037	IdentifierDeclType	int		1336028	0					
ANR	1336038	Identifier	tsize		1336028	1					
ANR	1336039	IdentifierDecl	nsym		1336028	1					
ANR	1336040	IdentifierDeclType	int		1336028	0					
ANR	1336041	Identifier	nsym		1336028	1					
ANR	1336042	IdentifierDecl	ret_ctr = 0		1336028	2					
ANR	1336043	IdentifierDeclType	int		1336028	0					
ANR	1336044	Identifier	ret_ctr		1336028	1					
ANR	1336045	AssignmentExpression	ret_ctr = 0		1336028	2		=			
ANR	1336046	Identifier	ret_ctr		1336028	0					
ANR	1336047	PrimaryExpression	0		1336028	1					
ANR	1336048	IdentifierDecl	i		1336028	3					
ANR	1336049	IdentifierDeclType	int		1336028	0					
ANR	1336050	Identifier	i		1336028	1					
ANR	1336051	IdentifierDecl	j		1336028	4					
ANR	1336052	IdentifierDeclType	int		1336028	0					
ANR	1336053	Identifier	j		1336028	1					
ANR	1336054	IdentifierDecl	r		1336028	5					
ANR	1336055	IdentifierDeclType	int		1336028	0					
ANR	1336056	Identifier	r		1336028	1					
ANR	1336057	IdentifierDecl	k		1336028	6					
ANR	1336058	IdentifierDeclType	int		1336028	0					
ANR	1336059	Identifier	k		1336028	1					
ANR	1336060	IdentifierDecl	newsize		1336028	7					
ANR	1336061	IdentifierDeclType	int		1336028	0					
ANR	1336062	Identifier	newsize		1336028	1					
ANR	1336063	IdentifierDeclStatement	ut64 toffset ;	3338:1:100890:100902	1336028	2	True				
ANR	1336064	IdentifierDecl	toffset		1336028	0					
ANR	1336065	IdentifierDeclType	ut64		1336028	0					
ANR	1336066	Identifier	toffset		1336028	1					
ANR	1336067	IdentifierDeclStatement	ut32 size = 0 ;	3339:1:100905:100918	1336028	3	True				
ANR	1336068	IdentifierDecl	size = 0		1336028	0					
ANR	1336069	IdentifierDeclType	ut32		1336028	0					
ANR	1336070	Identifier	size		1336028	1					
ANR	1336071	AssignmentExpression	size = 0		1336028	2		=			
ANR	1336072	Identifier	size		1336028	0					
ANR	1336073	PrimaryExpression	0		1336028	1					
ANR	1336074	IdentifierDeclStatement	"RBinElfSymbol * ret = NULL , * import_ret = NULL ;"	3340:1:100921:100966	1336028	4	True				
ANR	1336075	IdentifierDecl	* ret = NULL		1336028	0					
ANR	1336076	IdentifierDeclType	RBinElfSymbol *		1336028	0					
ANR	1336077	Identifier	ret		1336028	1					
ANR	1336078	AssignmentExpression	* ret = NULL		1336028	2		=			
ANR	1336079	Identifier	NULL		1336028	0					
ANR	1336080	Identifier	NULL		1336028	1					
ANR	1336081	IdentifierDecl	* import_ret = NULL		1336028	1					
ANR	1336082	IdentifierDeclType	RBinElfSymbol *		1336028	0					
ANR	1336083	Identifier	import_ret		1336028	1					
ANR	1336084	AssignmentExpression	* import_ret = NULL		1336028	2		=			
ANR	1336085	Identifier	NULL		1336028	0					
ANR	1336086	Identifier	NULL		1336028	1					
ANR	1336087	IdentifierDeclStatement	RBinSymbol * import_sym_ptr = NULL ;	3341:1:100969:101002	1336028	5	True				
ANR	1336088	IdentifierDecl	* import_sym_ptr = NULL		1336028	0					
ANR	1336089	IdentifierDeclType	RBinSymbol *		1336028	0					
ANR	1336090	Identifier	import_sym_ptr		1336028	1					
ANR	1336091	AssignmentExpression	* import_sym_ptr = NULL		1336028	2		=			
ANR	1336092	Identifier	NULL		1336028	0					
ANR	1336093	Identifier	NULL		1336028	1					
ANR	1336094	IdentifierDeclStatement	"size_t ret_size = 0 , prev_ret_size = 0 , import_ret_ctr = 0 ;"	3342:1:101005:101063	1336028	6	True				
ANR	1336095	IdentifierDecl	ret_size = 0		1336028	0					
ANR	1336096	IdentifierDeclType	size_t		1336028	0					
ANR	1336097	Identifier	ret_size		1336028	1					
ANR	1336098	AssignmentExpression	ret_size = 0		1336028	2		=			
ANR	1336099	Identifier	ret_size		1336028	0					
ANR	1336100	PrimaryExpression	0		1336028	1					
ANR	1336101	IdentifierDecl	prev_ret_size = 0		1336028	1					
ANR	1336102	IdentifierDeclType	size_t		1336028	0					
ANR	1336103	Identifier	prev_ret_size		1336028	1					
ANR	1336104	AssignmentExpression	prev_ret_size = 0		1336028	2		=			
ANR	1336105	Identifier	prev_ret_size		1336028	0					
ANR	1336106	PrimaryExpression	0		1336028	1					
ANR	1336107	IdentifierDecl	import_ret_ctr = 0		1336028	2					
ANR	1336108	IdentifierDeclType	size_t		1336028	0					
ANR	1336109	Identifier	import_ret_ctr		1336028	1					
ANR	1336110	AssignmentExpression	import_ret_ctr = 0		1336028	2		=			
ANR	1336111	Identifier	import_ret_ctr		1336028	0					
ANR	1336112	PrimaryExpression	0		1336028	1					
ANR	1336113	ExpressionStatement	Elf_ ( Shdr ) * strtab_section = NULL	3343:1:101066:101099	1336028	7	True				
ANR	1336114	AssignmentExpression	Elf_ ( Shdr ) * strtab_section = NULL		1336028	0		=			
ANR	1336115	MultiplicativeExpression	Elf_ ( Shdr ) * strtab_section		1336028	0		*			
ANR	1336116	CallExpression	Elf_ ( Shdr )		1336028	0					
ANR	1336117	Callee	Elf_		1336028	0					
ANR	1336118	Identifier	Elf_		1336028	0					
ANR	1336119	ArgumentList	Shdr		1336028	1					
ANR	1336120	Argument	Shdr		1336028	0					
ANR	1336121	Identifier	Shdr		1336028	0					
ANR	1336122	Identifier	strtab_section		1336028	1					
ANR	1336123	Identifier	NULL		1336028	1					
ANR	1336124	ExpressionStatement	Elf_ ( Sym ) * sym = NULL	3344:1:101102:101123	1336028	8	True				
ANR	1336125	AssignmentExpression	Elf_ ( Sym ) * sym = NULL		1336028	0		=			
ANR	1336126	MultiplicativeExpression	Elf_ ( Sym ) * sym		1336028	0		*			
ANR	1336127	CallExpression	Elf_ ( Sym )		1336028	0					
ANR	1336128	Callee	Elf_		1336028	0					
ANR	1336129	Identifier	Elf_		1336028	0					
ANR	1336130	ArgumentList	Sym		1336028	1					
ANR	1336131	Argument	Sym		1336028	0					
ANR	1336132	Identifier	Sym		1336028	0					
ANR	1336133	Identifier	sym		1336028	1					
ANR	1336134	Identifier	NULL		1336028	1					
ANR	1336135	IdentifierDeclStatement	ut8 s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 } ;	3345:1:101126:101159	1336028	9	True				
ANR	1336136	IdentifierDecl	s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 }		1336028	0					
ANR	1336137	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Sym ) ) ]		1336028	0					
ANR	1336138	Identifier	s		1336028	1					
ANR	1336139	SizeofExpression	sizeof ( Elf_ ( Sym ) )		1336028	2					
ANR	1336140	Sizeof	sizeof		1336028	0					
ANR	1336141	CallExpression	Elf_ ( Sym )		1336028	1					
ANR	1336142	Callee	Elf_		1336028	0					
ANR	1336143	Identifier	Elf_		1336028	0					
ANR	1336144	ArgumentList	Sym		1336028	1					
ANR	1336145	Argument	Sym		1336028	0					
ANR	1336146	Identifier	Sym		1336028	0					
ANR	1336147	AssignmentExpression	s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 }		1336028	3		=			
ANR	1336148	Identifier	s		1336028	0					
ANR	1336149	InitializerList	0		1336028	1					
ANR	1336150	PrimaryExpression	0		1336028	0					
ANR	1336151	IdentifierDeclStatement	char * strtab = NULL ;	3346:1:101162:101181	1336028	10	True				
ANR	1336152	IdentifierDecl	* strtab = NULL		1336028	0					
ANR	1336153	IdentifierDeclType	char *		1336028	0					
ANR	1336154	Identifier	strtab		1336028	1					
ANR	1336155	AssignmentExpression	* strtab = NULL		1336028	2		=			
ANR	1336156	Identifier	NULL		1336028	0					
ANR	1336157	Identifier	NULL		1336028	1					
ANR	1336158	IfStatement	if ( ! bin || ! bin -> shdr || ! bin -> ehdr . e_shnum || bin -> ehdr . e_shnum == 0xffff )		1336028	11					
ANR	1336159	Condition	! bin || ! bin -> shdr || ! bin -> ehdr . e_shnum || bin -> ehdr . e_shnum == 0xffff	3348:5:101189:101259	1336028	0	True				
ANR	1336160	OrExpression	! bin || ! bin -> shdr || ! bin -> ehdr . e_shnum || bin -> ehdr . e_shnum == 0xffff		1336028	0		||			
ANR	1336161	UnaryOperationExpression	! bin		1336028	0					
ANR	1336162	UnaryOperator	!		1336028	0					
ANR	1336163	Identifier	bin		1336028	1					
ANR	1336164	OrExpression	! bin -> shdr || ! bin -> ehdr . e_shnum || bin -> ehdr . e_shnum == 0xffff		1336028	1		||			
ANR	1336165	UnaryOperationExpression	! bin -> shdr		1336028	0					
ANR	1336166	UnaryOperator	!		1336028	0					
ANR	1336167	PtrMemberAccess	bin -> shdr		1336028	1					
ANR	1336168	Identifier	bin		1336028	0					
ANR	1336169	Identifier	shdr		1336028	1					
ANR	1336170	OrExpression	! bin -> ehdr . e_shnum || bin -> ehdr . e_shnum == 0xffff		1336028	1		||			
ANR	1336171	UnaryOperationExpression	! bin -> ehdr . e_shnum		1336028	0					
ANR	1336172	UnaryOperator	!		1336028	0					
ANR	1336173	MemberAccess	bin -> ehdr . e_shnum		1336028	1					
ANR	1336174	PtrMemberAccess	bin -> ehdr		1336028	0					
ANR	1336175	Identifier	bin		1336028	0					
ANR	1336176	Identifier	ehdr		1336028	1					
ANR	1336177	Identifier	e_shnum		1336028	1					
ANR	1336178	EqualityExpression	bin -> ehdr . e_shnum == 0xffff		1336028	1		==			
ANR	1336179	MemberAccess	bin -> ehdr . e_shnum		1336028	0					
ANR	1336180	PtrMemberAccess	bin -> ehdr		1336028	0					
ANR	1336181	Identifier	bin		1336028	0					
ANR	1336182	Identifier	ehdr		1336028	1					
ANR	1336183	Identifier	e_shnum		1336028	1					
ANR	1336184	PrimaryExpression	0xffff		1336028	1					
ANR	1336185	CompoundStatement		14:78:443:443	1336028	1					
ANR	1336186	ReturnStatement	"return Elf_ ( get_phdr_symbols ) ( bin , type ) ;"	3349:2:101266:101307	1336028	0	True				
ANR	1336187	CallExpression	"Elf_ ( get_phdr_symbols ) ( bin , type )"		1336028	0					
ANR	1336188	Callee	Elf_ ( get_phdr_symbols )		1336028	0					
ANR	1336189	CallExpression	Elf_ ( get_phdr_symbols )		1336028	0					
ANR	1336190	Callee	Elf_		1336028	0					
ANR	1336191	Identifier	Elf_		1336028	0					
ANR	1336192	ArgumentList	get_phdr_symbols		1336028	1					
ANR	1336193	Argument	get_phdr_symbols		1336028	0					
ANR	1336194	Identifier	get_phdr_symbols		1336028	0					
ANR	1336195	ArgumentList	bin		1336028	1					
ANR	1336196	Argument	bin		1336028	0					
ANR	1336197	Identifier	bin		1336028	0					
ANR	1336198	Argument	type		1336028	1					
ANR	1336199	Identifier	type		1336028	0					
ANR	1336200	IfStatement	"if ( ! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) ) )"		1336028	12					
ANR	1336201	Condition	"! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"	3351:5:101317:101378	1336028	0	True				
ANR	1336202	UnaryOperationExpression	"! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"		1336028	0					
ANR	1336203	UnaryOperator	!		1336028	0					
ANR	1336204	CallExpression	"UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"		1336028	1					
ANR	1336205	Callee	UT32_MUL		1336028	0					
ANR	1336206	Identifier	UT32_MUL		1336028	0					
ANR	1336207	ArgumentList	& shdr_size		1336028	1					
ANR	1336208	Argument	& shdr_size		1336028	0					
ANR	1336209	UnaryOperationExpression	& shdr_size		1336028	0					
ANR	1336210	UnaryOperator	&		1336028	0					
ANR	1336211	Identifier	shdr_size		1336028	1					
ANR	1336212	Argument	bin -> ehdr . e_shnum		1336028	1					
ANR	1336213	MemberAccess	bin -> ehdr . e_shnum		1336028	0					
ANR	1336214	PtrMemberAccess	bin -> ehdr		1336028	0					
ANR	1336215	Identifier	bin		1336028	0					
ANR	1336216	Identifier	ehdr		1336028	1					
ANR	1336217	Identifier	e_shnum		1336028	1					
ANR	1336218	Argument	sizeof ( Elf_ ( Shdr ) )		1336028	2					
ANR	1336219	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		1336028	0					
ANR	1336220	Sizeof	sizeof		1336028	0					
ANR	1336221	CallExpression	Elf_ ( Shdr )		1336028	1					
ANR	1336222	Callee	Elf_		1336028	0					
ANR	1336223	Identifier	Elf_		1336028	0					
ANR	1336224	ArgumentList	Shdr		1336028	1					
ANR	1336225	Argument	Shdr		1336028	0					
ANR	1336226	Identifier	Shdr		1336028	0					
ANR	1336227	CompoundStatement		17:69:562:562	1336028	1					
ANR	1336228	ReturnStatement	return false ;	3352:2:101385:101397	1336028	0	True				
ANR	1336229	Identifier	false		1336028	0					
ANR	1336230	IfStatement	if ( shdr_size + 8 > bin -> size )		1336028	13					
ANR	1336231	Condition	shdr_size + 8 > bin -> size	3354:5:101407:101431	1336028	0	True				
ANR	1336232	RelationalExpression	shdr_size + 8 > bin -> size		1336028	0		>			
ANR	1336233	AdditiveExpression	shdr_size + 8		1336028	0		+			
ANR	1336234	Identifier	shdr_size		1336028	0					
ANR	1336235	PrimaryExpression	8		1336028	1					
ANR	1336236	PtrMemberAccess	bin -> size		1336028	1					
ANR	1336237	Identifier	bin		1336028	0					
ANR	1336238	Identifier	size		1336028	1					
ANR	1336239	CompoundStatement		20:32:615:615	1336028	1					
ANR	1336240	ReturnStatement	return false ;	3355:2:101438:101450	1336028	0	True				
ANR	1336241	Identifier	false		1336028	0					
ANR	1336242	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; i ++ )		1336028	14					
ANR	1336243	ForInit	i = 0 ;	3357:6:101461:101466	1336028	0	True				
ANR	1336244	AssignmentExpression	i = 0		1336028	0		=			
ANR	1336245	Identifier	i		1336028	0					
ANR	1336246	PrimaryExpression	0		1336028	1					
ANR	1336247	Condition	i < bin -> ehdr . e_shnum	3357:13:101468:101488	1336028	1	True				
ANR	1336248	RelationalExpression	i < bin -> ehdr . e_shnum		1336028	0		<			
ANR	1336249	Identifier	i		1336028	0					
ANR	1336250	MemberAccess	bin -> ehdr . e_shnum		1336028	1					
ANR	1336251	PtrMemberAccess	bin -> ehdr		1336028	0					
ANR	1336252	Identifier	bin		1336028	0					
ANR	1336253	Identifier	ehdr		1336028	1					
ANR	1336254	Identifier	e_shnum		1336028	1					
ANR	1336255	PostIncDecOperationExpression	i ++	3357:36:101491:101493	1336028	2	True				
ANR	1336256	Identifier	i		1336028	0					
ANR	1336257	IncDec	++		1336028	1					
ANR	1336258	CompoundStatement		23:41:677:677	1336028	3					
ANR	1336259	IfStatement	if ( ( ( type & R_BIN_ELF_SYMTAB_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_SYMTAB ) || ( ( type & R_BIN_ELF_DYNSYM_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_DYNSYM ) )		1336028	0					
ANR	1336260	Condition	( ( type & R_BIN_ELF_SYMTAB_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_SYMTAB ) || ( ( type & R_BIN_ELF_DYNSYM_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_DYNSYM )	3358:6:101504:101657	1336028	0	True				
ANR	1336261	OrExpression	( ( type & R_BIN_ELF_SYMTAB_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_SYMTAB ) || ( ( type & R_BIN_ELF_DYNSYM_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_DYNSYM )		1336028	0		||			
ANR	1336262	AndExpression	( type & R_BIN_ELF_SYMTAB_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_SYMTAB		1336028	0		&&			
ANR	1336263	BitAndExpression	type & R_BIN_ELF_SYMTAB_SYMBOLS		1336028	0		&			
ANR	1336264	Identifier	type		1336028	0					
ANR	1336265	Identifier	R_BIN_ELF_SYMTAB_SYMBOLS		1336028	1					
ANR	1336266	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_SYMTAB		1336028	1		==			
ANR	1336267	MemberAccess	bin -> shdr [ i ] . sh_type		1336028	0					
ANR	1336268	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336269	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336270	Identifier	bin		1336028	0					
ANR	1336271	Identifier	shdr		1336028	1					
ANR	1336272	Identifier	i		1336028	1					
ANR	1336273	Identifier	sh_type		1336028	1					
ANR	1336274	Identifier	SHT_SYMTAB		1336028	1					
ANR	1336275	AndExpression	( type & R_BIN_ELF_DYNSYM_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_DYNSYM		1336028	1		&&			
ANR	1336276	BitAndExpression	type & R_BIN_ELF_DYNSYM_SYMBOLS		1336028	0		&			
ANR	1336277	Identifier	type		1336028	0					
ANR	1336278	Identifier	R_BIN_ELF_DYNSYM_SYMBOLS		1336028	1					
ANR	1336279	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_DYNSYM		1336028	1		==			
ANR	1336280	MemberAccess	bin -> shdr [ i ] . sh_type		1336028	0					
ANR	1336281	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336282	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336283	Identifier	bin		1336028	0					
ANR	1336284	Identifier	shdr		1336028	1					
ANR	1336285	Identifier	i		1336028	1					
ANR	1336286	Identifier	sh_type		1336028	1					
ANR	1336287	Identifier	SHT_DYNSYM		1336028	1					
ANR	1336288	CompoundStatement		25:79:841:841	1336028	1					
ANR	1336289	IfStatement	if ( bin -> shdr [ i ] . sh_link < 1 )		1336028	0					
ANR	1336290	Condition	bin -> shdr [ i ] . sh_link < 1	3360:7:101669:101692	1336028	0	True				
ANR	1336291	RelationalExpression	bin -> shdr [ i ] . sh_link < 1		1336028	0		<			
ANR	1336292	MemberAccess	bin -> shdr [ i ] . sh_link		1336028	0					
ANR	1336293	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336294	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336295	Identifier	bin		1336028	0					
ANR	1336296	Identifier	shdr		1336028	1					
ANR	1336297	Identifier	i		1336028	1					
ANR	1336298	Identifier	sh_link		1336028	1					
ANR	1336299	PrimaryExpression	1		1336028	1					
ANR	1336300	CompoundStatement		26:33:876:876	1336028	1					
ANR	1336301	ContinueStatement	continue ;	3362:4:101743:101751	1336028	0	True				
ANR	1336302	IfStatement	if ( ( bin -> shdr [ i ] . sh_link * sizeof ( Elf_ ( Shdr ) ) ) >= shdr_size )		1336028	1					
ANR	1336303	Condition	( bin -> shdr [ i ] . sh_link * sizeof ( Elf_ ( Shdr ) ) ) >= shdr_size	3365:7:101794:101849	1336028	0	True				
ANR	1336304	RelationalExpression	( bin -> shdr [ i ] . sh_link * sizeof ( Elf_ ( Shdr ) ) ) >= shdr_size		1336028	0		>=			
ANR	1336305	MultiplicativeExpression	bin -> shdr [ i ] . sh_link * sizeof ( Elf_ ( Shdr ) )		1336028	0		*			
ANR	1336306	MemberAccess	bin -> shdr [ i ] . sh_link		1336028	0					
ANR	1336307	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336308	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336309	Identifier	bin		1336028	0					
ANR	1336310	Identifier	shdr		1336028	1					
ANR	1336311	Identifier	i		1336028	1					
ANR	1336312	Identifier	sh_link		1336028	1					
ANR	1336313	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		1336028	1					
ANR	1336314	Sizeof	sizeof		1336028	0					
ANR	1336315	CallExpression	Elf_ ( Shdr )		1336028	1					
ANR	1336316	Callee	Elf_		1336028	0					
ANR	1336317	Identifier	Elf_		1336028	0					
ANR	1336318	ArgumentList	Shdr		1336028	1					
ANR	1336319	Argument	Shdr		1336028	0					
ANR	1336320	Identifier	Shdr		1336028	0					
ANR	1336321	Identifier	shdr_size		1336028	1					
ANR	1336322	CompoundStatement		31:65:1033:1033	1336028	1					
ANR	1336323	ContinueStatement	continue ;	3367:4:101900:101908	1336028	0	True				
ANR	1336324	ExpressionStatement	strtab_section = & bin -> shdr [ bin -> shdr [ i ] . sh_link ]	3369:3:101918:101967	1336028	2	True				
ANR	1336325	AssignmentExpression	strtab_section = & bin -> shdr [ bin -> shdr [ i ] . sh_link ]		1336028	0		=			
ANR	1336326	Identifier	strtab_section		1336028	0					
ANR	1336327	UnaryOperationExpression	& bin -> shdr [ bin -> shdr [ i ] . sh_link ]		1336028	1					
ANR	1336328	UnaryOperator	&		1336028	0					
ANR	1336329	ArrayIndexing	bin -> shdr [ bin -> shdr [ i ] . sh_link ]		1336028	1					
ANR	1336330	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336331	Identifier	bin		1336028	0					
ANR	1336332	Identifier	shdr		1336028	1					
ANR	1336333	MemberAccess	bin -> shdr [ i ] . sh_link		1336028	1					
ANR	1336334	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336335	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336336	Identifier	bin		1336028	0					
ANR	1336337	Identifier	shdr		1336028	1					
ANR	1336338	Identifier	i		1336028	1					
ANR	1336339	Identifier	sh_link		1336028	1					
ANR	1336340	IfStatement	if ( strtab_section -> sh_size > ST32_MAX || strtab_section -> sh_size + 8 > bin -> size )		1336028	3					
ANR	1336341	Condition	strtab_section -> sh_size > ST32_MAX || strtab_section -> sh_size + 8 > bin -> size	3370:7:101976:102050	1336028	0	True				
ANR	1336342	OrExpression	strtab_section -> sh_size > ST32_MAX || strtab_section -> sh_size + 8 > bin -> size		1336028	0		||			
ANR	1336343	RelationalExpression	strtab_section -> sh_size > ST32_MAX		1336028	0		>			
ANR	1336344	PtrMemberAccess	strtab_section -> sh_size		1336028	0					
ANR	1336345	Identifier	strtab_section		1336028	0					
ANR	1336346	Identifier	sh_size		1336028	1					
ANR	1336347	Identifier	ST32_MAX		1336028	1					
ANR	1336348	RelationalExpression	strtab_section -> sh_size + 8 > bin -> size		1336028	1		>			
ANR	1336349	AdditiveExpression	strtab_section -> sh_size + 8		1336028	0		+			
ANR	1336350	PtrMemberAccess	strtab_section -> sh_size		1336028	0					
ANR	1336351	Identifier	strtab_section		1336028	0					
ANR	1336352	Identifier	sh_size		1336028	1					
ANR	1336353	PrimaryExpression	8		1336028	1					
ANR	1336354	PtrMemberAccess	bin -> size		1336028	1					
ANR	1336355	Identifier	bin		1336028	0					
ANR	1336356	Identifier	size		1336028	1					
ANR	1336357	CompoundStatement		36:84:1234:1234	1336028	1					
ANR	1336358	ExpressionStatement	"bprintf ( ""size (syms strtab)"" )"	3371:4:102059:102089	1336028	0	True				
ANR	1336359	CallExpression	"bprintf ( ""size (syms strtab)"" )"		1336028	0					
ANR	1336360	Callee	bprintf		1336028	0					
ANR	1336361	Identifier	bprintf		1336028	0					
ANR	1336362	ArgumentList	"""size (syms strtab)"""		1336028	1					
ANR	1336363	Argument	"""size (syms strtab)"""		1336028	0					
ANR	1336364	PrimaryExpression	"""size (syms strtab)"""		1336028	0					
ANR	1336365	ExpressionStatement	free ( ret )	3372:4:102095:102105	1336028	1	True				
ANR	1336366	CallExpression	free ( ret )		1336028	0					
ANR	1336367	Callee	free		1336028	0					
ANR	1336368	Identifier	free		1336028	0					
ANR	1336369	ArgumentList	ret		1336028	1					
ANR	1336370	Argument	ret		1336028	0					
ANR	1336371	Identifier	ret		1336028	0					
ANR	1336372	ExpressionStatement	free ( strtab )	3373:4:102111:102124	1336028	2	True				
ANR	1336373	CallExpression	free ( strtab )		1336028	0					
ANR	1336374	Callee	free		1336028	0					
ANR	1336375	Identifier	free		1336028	0					
ANR	1336376	ArgumentList	strtab		1336028	1					
ANR	1336377	Argument	strtab		1336028	0					
ANR	1336378	Identifier	strtab		1336028	0					
ANR	1336379	ReturnStatement	return NULL ;	3374:4:102130:102141	1336028	3	True				
ANR	1336380	Identifier	NULL		1336028	0					
ANR	1336381	IfStatement	if ( ! strtab )		1336028	4					
ANR	1336382	Condition	! strtab	3376:7:102155:102161	1336028	0	True				
ANR	1336383	UnaryOperationExpression	! strtab		1336028	0					
ANR	1336384	UnaryOperator	!		1336028	0					
ANR	1336385	Identifier	strtab		1336028	1					
ANR	1336386	CompoundStatement		42:16:1345:1345	1336028	1					
ANR	1336387	IfStatement	"if ( ! ( strtab = ( char * ) calloc ( 1 , 8 + strtab_section -> sh_size ) ) )"		1336028	0					
ANR	1336388	Condition	"! ( strtab = ( char * ) calloc ( 1 , 8 + strtab_section -> sh_size ) )"	3377:8:102174:102232	1336028	0	True				
ANR	1336389	UnaryOperationExpression	"! ( strtab = ( char * ) calloc ( 1 , 8 + strtab_section -> sh_size ) )"		1336028	0					
ANR	1336390	UnaryOperator	!		1336028	0					
ANR	1336391	AssignmentExpression	"strtab = ( char * ) calloc ( 1 , 8 + strtab_section -> sh_size )"		1336028	1		=			
ANR	1336392	Identifier	strtab		1336028	0					
ANR	1336393	CastExpression	"( char * ) calloc ( 1 , 8 + strtab_section -> sh_size )"		1336028	1					
ANR	1336394	CastTarget	char *		1336028	0					
ANR	1336395	CallExpression	"calloc ( 1 , 8 + strtab_section -> sh_size )"		1336028	1					
ANR	1336396	Callee	calloc		1336028	0					
ANR	1336397	Identifier	calloc		1336028	0					
ANR	1336398	ArgumentList	1		1336028	1					
ANR	1336399	Argument	1		1336028	0					
ANR	1336400	PrimaryExpression	1		1336028	0					
ANR	1336401	Argument	8 + strtab_section -> sh_size		1336028	1					
ANR	1336402	AdditiveExpression	8 + strtab_section -> sh_size		1336028	0		+			
ANR	1336403	PrimaryExpression	8		1336028	0					
ANR	1336404	PtrMemberAccess	strtab_section -> sh_size		1336028	1					
ANR	1336405	Identifier	strtab_section		1336028	0					
ANR	1336406	Identifier	sh_size		1336028	1					
ANR	1336407	CompoundStatement		43:69:1416:1416	1336028	1					
ANR	1336408	ExpressionStatement	"bprintf ( ""malloc (syms strtab)"" )"	3378:5:102242:102274	1336028	0	True				
ANR	1336409	CallExpression	"bprintf ( ""malloc (syms strtab)"" )"		1336028	0					
ANR	1336410	Callee	bprintf		1336028	0					
ANR	1336411	Identifier	bprintf		1336028	0					
ANR	1336412	ArgumentList	"""malloc (syms strtab)"""		1336028	1					
ANR	1336413	Argument	"""malloc (syms strtab)"""		1336028	0					
ANR	1336414	PrimaryExpression	"""malloc (syms strtab)"""		1336028	0					
ANR	1336415	GotoStatement	goto beach ;	3379:5:102281:102291	1336028	1	True				
ANR	1336416	Identifier	beach		1336028	0					
ANR	1336417	IfStatement	if ( strtab_section -> sh_offset > bin -> size || strtab_section -> sh_offset + strtab_section -> sh_size > bin -> size )		1336028	1					
ANR	1336418	Condition	strtab_section -> sh_offset > bin -> size || strtab_section -> sh_offset + strtab_section -> sh_size > bin -> size	3381:8:102307:102416	1336028	0	True				
ANR	1336419	OrExpression	strtab_section -> sh_offset > bin -> size || strtab_section -> sh_offset + strtab_section -> sh_size > bin -> size		1336028	0		||			
ANR	1336420	RelationalExpression	strtab_section -> sh_offset > bin -> size		1336028	0		>			
ANR	1336421	PtrMemberAccess	strtab_section -> sh_offset		1336028	0					
ANR	1336422	Identifier	strtab_section		1336028	0					
ANR	1336423	Identifier	sh_offset		1336028	1					
ANR	1336424	PtrMemberAccess	bin -> size		1336028	1					
ANR	1336425	Identifier	bin		1336028	0					
ANR	1336426	Identifier	size		1336028	1					
ANR	1336427	RelationalExpression	strtab_section -> sh_offset + strtab_section -> sh_size > bin -> size		1336028	1		>			
ANR	1336428	AdditiveExpression	strtab_section -> sh_offset + strtab_section -> sh_size		1336028	0		+			
ANR	1336429	PtrMemberAccess	strtab_section -> sh_offset		1336028	0					
ANR	1336430	Identifier	strtab_section		1336028	0					
ANR	1336431	Identifier	sh_offset		1336028	1					
ANR	1336432	PtrMemberAccess	strtab_section -> sh_size		1336028	1					
ANR	1336433	Identifier	strtab_section		1336028	0					
ANR	1336434	Identifier	sh_size		1336028	1					
ANR	1336435	PtrMemberAccess	bin -> size		1336028	1					
ANR	1336436	Identifier	bin		1336028	0					
ANR	1336437	Identifier	size		1336028	1					
ANR	1336438	CompoundStatement		48:71:1600:1600	1336028	1					
ANR	1336439	GotoStatement	goto beach ;	3383:5:102426:102436	1336028	0	True				
ANR	1336440	Identifier	beach		1336028	0					
ANR	1336441	IfStatement	"if ( r_buf_read_at ( bin -> b , strtab_section -> sh_offset , ( ut8 * ) strtab , strtab_section -> sh_size ) == - 1 )"		1336028	2					
ANR	1336442	Condition	"r_buf_read_at ( bin -> b , strtab_section -> sh_offset , ( ut8 * ) strtab , strtab_section -> sh_size ) == - 1"	3385:8:102452:102552	1336028	0	True				
ANR	1336443	EqualityExpression	"r_buf_read_at ( bin -> b , strtab_section -> sh_offset , ( ut8 * ) strtab , strtab_section -> sh_size ) == - 1"		1336028	0		==			
ANR	1336444	CallExpression	"r_buf_read_at ( bin -> b , strtab_section -> sh_offset , ( ut8 * ) strtab , strtab_section -> sh_size )"		1336028	0					
ANR	1336445	Callee	r_buf_read_at		1336028	0					
ANR	1336446	Identifier	r_buf_read_at		1336028	0					
ANR	1336447	ArgumentList	bin -> b		1336028	1					
ANR	1336448	Argument	bin -> b		1336028	0					
ANR	1336449	PtrMemberAccess	bin -> b		1336028	0					
ANR	1336450	Identifier	bin		1336028	0					
ANR	1336451	Identifier	b		1336028	1					
ANR	1336452	Argument	strtab_section -> sh_offset		1336028	1					
ANR	1336453	PtrMemberAccess	strtab_section -> sh_offset		1336028	0					
ANR	1336454	Identifier	strtab_section		1336028	0					
ANR	1336455	Identifier	sh_offset		1336028	1					
ANR	1336456	Argument	( ut8 * ) strtab		1336028	2					
ANR	1336457	CastExpression	( ut8 * ) strtab		1336028	0					
ANR	1336458	CastTarget	ut8 *		1336028	0					
ANR	1336459	Identifier	strtab		1336028	1					
ANR	1336460	Argument	strtab_section -> sh_size		1336028	3					
ANR	1336461	PtrMemberAccess	strtab_section -> sh_size		1336028	0					
ANR	1336462	Identifier	strtab_section		1336028	0					
ANR	1336463	Identifier	sh_size		1336028	1					
ANR	1336464	UnaryOperationExpression	- 1		1336028	1					
ANR	1336465	UnaryOperator	-		1336028	0					
ANR	1336466	PrimaryExpression	1		1336028	1					
ANR	1336467	CompoundStatement		52:53:1736:1736	1336028	1					
ANR	1336468	ExpressionStatement	"bprintf ( ""read (syms strtab)\\n"" )"	3387:5:102562:102594	1336028	0	True				
ANR	1336469	CallExpression	"bprintf ( ""read (syms strtab)\\n"" )"		1336028	0					
ANR	1336470	Callee	bprintf		1336028	0					
ANR	1336471	Identifier	bprintf		1336028	0					
ANR	1336472	ArgumentList	"""read (syms strtab)\\n"""		1336028	1					
ANR	1336473	Argument	"""read (syms strtab)\\n"""		1336028	0					
ANR	1336474	PrimaryExpression	"""read (syms strtab)\\n"""		1336028	0					
ANR	1336475	GotoStatement	goto beach ;	3388:5:102601:102611	1336028	1	True				
ANR	1336476	Identifier	beach		1336028	0					
ANR	1336477	ExpressionStatement	newsize = 1 + bin -> shdr [ i ] . sh_size	3392:3:102628:102662	1336028	5	True				
ANR	1336478	AssignmentExpression	newsize = 1 + bin -> shdr [ i ] . sh_size		1336028	0		=			
ANR	1336479	Identifier	newsize		1336028	0					
ANR	1336480	AdditiveExpression	1 + bin -> shdr [ i ] . sh_size		1336028	1		+			
ANR	1336481	PrimaryExpression	1		1336028	0					
ANR	1336482	MemberAccess	bin -> shdr [ i ] . sh_size		1336028	1					
ANR	1336483	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336484	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336485	Identifier	bin		1336028	0					
ANR	1336486	Identifier	shdr		1336028	1					
ANR	1336487	Identifier	i		1336028	1					
ANR	1336488	Identifier	sh_size		1336028	1					
ANR	1336489	IfStatement	if ( newsize < 0 || newsize > bin -> size )		1336028	6					
ANR	1336490	Condition	newsize < 0 || newsize > bin -> size	3393:7:102671:102704	1336028	0	True				
ANR	1336491	OrExpression	newsize < 0 || newsize > bin -> size		1336028	0		||			
ANR	1336492	RelationalExpression	newsize < 0		1336028	0		<			
ANR	1336493	Identifier	newsize		1336028	0					
ANR	1336494	PrimaryExpression	0		1336028	1					
ANR	1336495	RelationalExpression	newsize > bin -> size		1336028	1		>			
ANR	1336496	Identifier	newsize		1336028	0					
ANR	1336497	PtrMemberAccess	bin -> size		1336028	1					
ANR	1336498	Identifier	bin		1336028	0					
ANR	1336499	Identifier	size		1336028	1					
ANR	1336500	CompoundStatement		59:43:1888:1888	1336028	1					
ANR	1336501	ExpressionStatement	"bprintf ( ""invalid shdr %d size\\n"" , i )"	3394:4:102713:102750	1336028	0	True				
ANR	1336502	CallExpression	"bprintf ( ""invalid shdr %d size\\n"" , i )"		1336028	0					
ANR	1336503	Callee	bprintf		1336028	0					
ANR	1336504	Identifier	bprintf		1336028	0					
ANR	1336505	ArgumentList	"""invalid shdr %d size\\n"""		1336028	1					
ANR	1336506	Argument	"""invalid shdr %d size\\n"""		1336028	0					
ANR	1336507	PrimaryExpression	"""invalid shdr %d size\\n"""		1336028	0					
ANR	1336508	Argument	i		1336028	1					
ANR	1336509	Identifier	i		1336028	0					
ANR	1336510	GotoStatement	goto beach ;	3395:4:102756:102766	1336028	1	True				
ANR	1336511	Identifier	beach		1336028	0					
ANR	1336512	ExpressionStatement	nsym = ( int ) ( bin -> shdr [ i ] . sh_size / sizeof ( Elf_ ( Sym ) ) )	3397:3:102776:102831	1336028	7	True				
ANR	1336513	AssignmentExpression	nsym = ( int ) ( bin -> shdr [ i ] . sh_size / sizeof ( Elf_ ( Sym ) ) )		1336028	0		=			
ANR	1336514	Identifier	nsym		1336028	0					
ANR	1336515	CastExpression	( int ) ( bin -> shdr [ i ] . sh_size / sizeof ( Elf_ ( Sym ) ) )		1336028	1					
ANR	1336516	CastTarget	int		1336028	0					
ANR	1336517	MultiplicativeExpression	bin -> shdr [ i ] . sh_size / sizeof ( Elf_ ( Sym ) )		1336028	1		/			
ANR	1336518	MemberAccess	bin -> shdr [ i ] . sh_size		1336028	0					
ANR	1336519	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336520	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336521	Identifier	bin		1336028	0					
ANR	1336522	Identifier	shdr		1336028	1					
ANR	1336523	Identifier	i		1336028	1					
ANR	1336524	Identifier	sh_size		1336028	1					
ANR	1336525	SizeofExpression	sizeof ( Elf_ ( Sym ) )		1336028	1					
ANR	1336526	Sizeof	sizeof		1336028	0					
ANR	1336527	CallExpression	Elf_ ( Sym )		1336028	1					
ANR	1336528	Callee	Elf_		1336028	0					
ANR	1336529	Identifier	Elf_		1336028	0					
ANR	1336530	ArgumentList	Sym		1336028	1					
ANR	1336531	Argument	Sym		1336028	0					
ANR	1336532	Identifier	Sym		1336028	0					
ANR	1336533	IfStatement	if ( nsym < 0 )		1336028	8					
ANR	1336534	Condition	nsym < 0	3398:7:102840:102847	1336028	0	True				
ANR	1336535	RelationalExpression	nsym < 0		1336028	0		<			
ANR	1336536	Identifier	nsym		1336028	0					
ANR	1336537	PrimaryExpression	0		1336028	1					
ANR	1336538	CompoundStatement		64:17:2031:2031	1336028	1					
ANR	1336539	GotoStatement	goto beach ;	3399:4:102856:102866	1336028	0	True				
ANR	1336540	Identifier	beach		1336028	0					
ANR	1336541	CompoundStatement		69:4:2107:2152	1336028	9					
ANR	1336542	IdentifierDeclStatement	ut64 sh_begin = bin -> shdr [ i ] . sh_offset ;	3402:4:102882:102920	1336028	0	True				
ANR	1336543	IdentifierDecl	sh_begin = bin -> shdr [ i ] . sh_offset		1336028	0					
ANR	1336544	IdentifierDeclType	ut64		1336028	0					
ANR	1336545	Identifier	sh_begin		1336028	1					
ANR	1336546	AssignmentExpression	sh_begin = bin -> shdr [ i ] . sh_offset		1336028	2		=			
ANR	1336547	Identifier	sh_begin		1336028	0					
ANR	1336548	MemberAccess	bin -> shdr [ i ] . sh_offset		1336028	1					
ANR	1336549	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336550	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336551	Identifier	bin		1336028	0					
ANR	1336552	Identifier	shdr		1336028	1					
ANR	1336553	Identifier	i		1336028	1					
ANR	1336554	Identifier	sh_offset		1336028	1					
ANR	1336555	IdentifierDeclStatement	ut64 sh_end = sh_begin + bin -> shdr [ i ] . sh_size ;	3403:4:102926:102971	1336028	1	True				
ANR	1336556	IdentifierDecl	sh_end = sh_begin + bin -> shdr [ i ] . sh_size		1336028	0					
ANR	1336557	IdentifierDeclType	ut64		1336028	0					
ANR	1336558	Identifier	sh_end		1336028	1					
ANR	1336559	AssignmentExpression	sh_end = sh_begin + bin -> shdr [ i ] . sh_size		1336028	2		=			
ANR	1336560	Identifier	sh_end		1336028	0					
ANR	1336561	AdditiveExpression	sh_begin + bin -> shdr [ i ] . sh_size		1336028	1		+			
ANR	1336562	Identifier	sh_begin		1336028	0					
ANR	1336563	MemberAccess	bin -> shdr [ i ] . sh_size		1336028	1					
ANR	1336564	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336565	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336566	Identifier	bin		1336028	0					
ANR	1336567	Identifier	shdr		1336028	1					
ANR	1336568	Identifier	i		1336028	1					
ANR	1336569	Identifier	sh_size		1336028	1					
ANR	1336570	IfStatement	if ( sh_begin > bin -> size )		1336028	2					
ANR	1336571	Condition	sh_begin > bin -> size	3404:8:102981:103000	1336028	0	True				
ANR	1336572	RelationalExpression	sh_begin > bin -> size		1336028	0		>			
ANR	1336573	Identifier	sh_begin		1336028	0					
ANR	1336574	PtrMemberAccess	bin -> size		1336028	1					
ANR	1336575	Identifier	bin		1336028	0					
ANR	1336576	Identifier	size		1336028	1					
ANR	1336577	CompoundStatement		70:30:2184:2184	1336028	1					
ANR	1336578	GotoStatement	goto beach ;	3405:5:103010:103020	1336028	0	True				
ANR	1336579	Identifier	beach		1336028	0					
ANR	1336580	IfStatement	if ( sh_end > bin -> size )		1336028	3					
ANR	1336581	Condition	sh_end > bin -> size	3407:8:103036:103053	1336028	0	True				
ANR	1336582	RelationalExpression	sh_end > bin -> size		1336028	0		>			
ANR	1336583	Identifier	sh_end		1336028	0					
ANR	1336584	PtrMemberAccess	bin -> size		1336028	1					
ANR	1336585	Identifier	bin		1336028	0					
ANR	1336586	Identifier	size		1336028	1					
ANR	1336587	CompoundStatement		74:5:2244:2281	1336028	1					
ANR	1336588	IdentifierDeclStatement	st64 newshsize = bin -> size - sh_begin ;	3408:5:103063:103100	1336028	0	True				
ANR	1336589	IdentifierDecl	newshsize = bin -> size - sh_begin		1336028	0					
ANR	1336590	IdentifierDeclType	st64		1336028	0					
ANR	1336591	Identifier	newshsize		1336028	1					
ANR	1336592	AssignmentExpression	newshsize = bin -> size - sh_begin		1336028	2		=			
ANR	1336593	Identifier	newshsize		1336028	0					
ANR	1336594	AdditiveExpression	bin -> size - sh_begin		1336028	1		-			
ANR	1336595	PtrMemberAccess	bin -> size		1336028	0					
ANR	1336596	Identifier	bin		1336028	0					
ANR	1336597	Identifier	size		1336028	1					
ANR	1336598	Identifier	sh_begin		1336028	1					
ANR	1336599	ExpressionStatement	nsym = ( int ) ( newshsize / sizeof ( Elf_ ( Sym ) ) )	3409:5:103107:103151	1336028	1	True				
ANR	1336600	AssignmentExpression	nsym = ( int ) ( newshsize / sizeof ( Elf_ ( Sym ) ) )		1336028	0		=			
ANR	1336601	Identifier	nsym		1336028	0					
ANR	1336602	CastExpression	( int ) ( newshsize / sizeof ( Elf_ ( Sym ) ) )		1336028	1					
ANR	1336603	CastTarget	int		1336028	0					
ANR	1336604	MultiplicativeExpression	newshsize / sizeof ( Elf_ ( Sym ) )		1336028	1		/			
ANR	1336605	Identifier	newshsize		1336028	0					
ANR	1336606	SizeofExpression	sizeof ( Elf_ ( Sym ) )		1336028	1					
ANR	1336607	Sizeof	sizeof		1336028	0					
ANR	1336608	CallExpression	Elf_ ( Sym )		1336028	1					
ANR	1336609	Callee	Elf_		1336028	0					
ANR	1336610	Identifier	Elf_		1336028	0					
ANR	1336611	ArgumentList	Sym		1336028	1					
ANR	1336612	Argument	Sym		1336028	0					
ANR	1336613	Identifier	Sym		1336028	0					
ANR	1336614	Statement	if	3412:3:103167:103168	1336028	10	True				
ANR	1336615	Statement	(	3412:6:103170:103170	1336028	11	True				
ANR	1336616	Statement	!	3412:7:103171:103171	1336028	12	True				
ANR	1336617	Statement	(	3412:8:103172:103172	1336028	13	True				
ANR	1336618	Statement	sym	3412:9:103173:103175	1336028	14	True				
ANR	1336619	Statement	=	3412:13:103177:103177	1336028	15	True				
ANR	1336620	Statement	(	3412:15:103179:103179	1336028	16	True				
ANR	1336621	Statement	Elf_	3412:16:103180:103183	1336028	17	True				
ANR	1336622	Statement	(	3412:20:103184:103184	1336028	18	True				
ANR	1336623	Statement	Sym	3412:21:103185:103187	1336028	19	True				
ANR	1336624	Statement	)	3412:24:103188:103188	1336028	20	True				
ANR	1336625	Statement	*	3412:26:103190:103190	1336028	21	True				
ANR	1336626	Statement	)	3412:27:103191:103191	1336028	22	True				
ANR	1336627	Statement	calloc	3412:28:103192:103197	1336028	23	True				
ANR	1336628	Statement	(	3412:35:103199:103199	1336028	24	True				
ANR	1336629	Statement	nsym	3412:36:103200:103203	1336028	25	True				
ANR	1336630	Statement	","	3412:40:103204:103204	1336028	26	True				
ANR	1336631	Statement	sizeof	3412:42:103206:103211	1336028	27	True				
ANR	1336632	Statement	(	3412:49:103213:103213	1336028	28	True				
ANR	1336633	Statement	Elf_	3412:50:103214:103217	1336028	29	True				
ANR	1336634	Statement	(	3412:54:103218:103218	1336028	30	True				
ANR	1336635	Statement	Sym	3412:55:103219:103221	1336028	31	True				
ANR	1336636	Statement	)	3412:58:103222:103222	1336028	32	True				
ANR	1336637	Statement	)	3412:59:103223:103223	1336028	33	True				
ANR	1336638	Statement	)	3412:60:103224:103224	1336028	34	True				
ANR	1336639	Statement	)	3412:61:103225:103225	1336028	35	True				
ANR	1336640	Statement	)	3412:62:103226:103226	1336028	36	True				
ANR	1336641	CompoundStatement		78:64:2409:2409	1336028	37					
ANR	1336642	ExpressionStatement	"bprintf ( ""calloc (syms)"" )"	3413:4:103234:103259	1336028	0	True				
ANR	1336643	CallExpression	"bprintf ( ""calloc (syms)"" )"		1336028	0					
ANR	1336644	Callee	bprintf		1336028	0					
ANR	1336645	Identifier	bprintf		1336028	0					
ANR	1336646	ArgumentList	"""calloc (syms)"""		1336028	1					
ANR	1336647	Argument	"""calloc (syms)"""		1336028	0					
ANR	1336648	PrimaryExpression	"""calloc (syms)"""		1336028	0					
ANR	1336649	GotoStatement	goto beach ;	3414:4:103265:103275	1336028	1	True				
ANR	1336650	Identifier	beach		1336028	0					
ANR	1336651	IfStatement	"if ( ! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) ) )"		1336028	38					
ANR	1336652	Condition	"! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"	3416:7:103289:103331	1336028	0	True				
ANR	1336653	UnaryOperationExpression	"! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"		1336028	0					
ANR	1336654	UnaryOperator	!		1336028	0					
ANR	1336655	CallExpression	"UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"		1336028	1					
ANR	1336656	Callee	UT32_MUL		1336028	0					
ANR	1336657	Identifier	UT32_MUL		1336028	0					
ANR	1336658	ArgumentList	& size		1336028	1					
ANR	1336659	Argument	& size		1336028	0					
ANR	1336660	UnaryOperationExpression	& size		1336028	0					
ANR	1336661	UnaryOperator	&		1336028	0					
ANR	1336662	Identifier	size		1336028	1					
ANR	1336663	Argument	nsym		1336028	1					
ANR	1336664	Identifier	nsym		1336028	0					
ANR	1336665	Argument	sizeof ( Elf_ ( Sym ) )		1336028	2					
ANR	1336666	SizeofExpression	sizeof ( Elf_ ( Sym ) )		1336028	0					
ANR	1336667	Sizeof	sizeof		1336028	0					
ANR	1336668	CallExpression	Elf_ ( Sym )		1336028	1					
ANR	1336669	Callee	Elf_		1336028	0					
ANR	1336670	Identifier	Elf_		1336028	0					
ANR	1336671	ArgumentList	Sym		1336028	1					
ANR	1336672	Argument	Sym		1336028	0					
ANR	1336673	Identifier	Sym		1336028	0					
ANR	1336674	CompoundStatement		82:52:2515:2515	1336028	1					
ANR	1336675	GotoStatement	goto beach ;	3417:4:103340:103350	1336028	0	True				
ANR	1336676	Identifier	beach		1336028	0					
ANR	1336677	IfStatement	if ( size < 1 || size > bin -> size )		1336028	39					
ANR	1336678	Condition	size < 1 || size > bin -> size	3419:7:103364:103391	1336028	0	True				
ANR	1336679	OrExpression	size < 1 || size > bin -> size		1336028	0		||			
ANR	1336680	RelationalExpression	size < 1		1336028	0		<			
ANR	1336681	Identifier	size		1336028	0					
ANR	1336682	PrimaryExpression	1		1336028	1					
ANR	1336683	RelationalExpression	size > bin -> size		1336028	1		>			
ANR	1336684	Identifier	size		1336028	0					
ANR	1336685	PtrMemberAccess	bin -> size		1336028	1					
ANR	1336686	Identifier	bin		1336028	0					
ANR	1336687	Identifier	size		1336028	1					
ANR	1336688	CompoundStatement		85:37:2575:2575	1336028	1					
ANR	1336689	GotoStatement	goto beach ;	3420:4:103400:103410	1336028	0	True				
ANR	1336690	Identifier	beach		1336028	0					
ANR	1336691	IfStatement	if ( bin -> shdr [ i ] . sh_offset > bin -> size )		1336028	40					
ANR	1336692	Condition	bin -> shdr [ i ] . sh_offset > bin -> size	3422:7:103424:103457	1336028	0	True				
ANR	1336693	RelationalExpression	bin -> shdr [ i ] . sh_offset > bin -> size		1336028	0		>			
ANR	1336694	MemberAccess	bin -> shdr [ i ] . sh_offset		1336028	0					
ANR	1336695	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336696	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336697	Identifier	bin		1336028	0					
ANR	1336698	Identifier	shdr		1336028	1					
ANR	1336699	Identifier	i		1336028	1					
ANR	1336700	Identifier	sh_offset		1336028	1					
ANR	1336701	PtrMemberAccess	bin -> size		1336028	1					
ANR	1336702	Identifier	bin		1336028	0					
ANR	1336703	Identifier	size		1336028	1					
ANR	1336704	CompoundStatement		88:43:2641:2641	1336028	1					
ANR	1336705	GotoStatement	goto beach ;	3423:4:103466:103476	1336028	0	True				
ANR	1336706	Identifier	beach		1336028	0					
ANR	1336707	IfStatement	if ( bin -> shdr [ i ] . sh_offset + size > bin -> size )		1336028	41					
ANR	1336708	Condition	bin -> shdr [ i ] . sh_offset + size > bin -> size	3425:7:103490:103530	1336028	0	True				
ANR	1336709	RelationalExpression	bin -> shdr [ i ] . sh_offset + size > bin -> size		1336028	0		>			
ANR	1336710	AdditiveExpression	bin -> shdr [ i ] . sh_offset + size		1336028	0		+			
ANR	1336711	MemberAccess	bin -> shdr [ i ] . sh_offset		1336028	0					
ANR	1336712	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336713	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336714	Identifier	bin		1336028	0					
ANR	1336715	Identifier	shdr		1336028	1					
ANR	1336716	Identifier	i		1336028	1					
ANR	1336717	Identifier	sh_offset		1336028	1					
ANR	1336718	Identifier	size		1336028	1					
ANR	1336719	PtrMemberAccess	bin -> size		1336028	1					
ANR	1336720	Identifier	bin		1336028	0					
ANR	1336721	Identifier	size		1336028	1					
ANR	1336722	CompoundStatement		91:50:2714:2714	1336028	1					
ANR	1336723	GotoStatement	goto beach ;	3426:4:103539:103549	1336028	0	True				
ANR	1336724	Identifier	beach		1336028	0					
ANR	1336725	ForStatement	for ( j = 0 ; j < nsym ; j ++ )		1336028	42					
ANR	1336726	ForInit	j = 0 ;	3428:8:103564:103569	1336028	0	True				
ANR	1336727	AssignmentExpression	j = 0		1336028	0		=			
ANR	1336728	Identifier	j		1336028	0					
ANR	1336729	PrimaryExpression	0		1336028	1					
ANR	1336730	Condition	j < nsym	3428:15:103571:103578	1336028	1	True				
ANR	1336731	RelationalExpression	j < nsym		1336028	0		<			
ANR	1336732	Identifier	j		1336028	0					
ANR	1336733	Identifier	nsym		1336028	1					
ANR	1336734	PostIncDecOperationExpression	j ++	3428:25:103581:103583	1336028	2	True				
ANR	1336735	Identifier	j		1336028	0					
ANR	1336736	IncDec	++		1336028	1					
ANR	1336737	CompoundStatement		95:4:2773:2782	1336028	3					
ANR	1336738	IdentifierDeclStatement	int k = 0 ;	3429:4:103592:103601	1336028	0	True				
ANR	1336739	IdentifierDecl	k = 0		1336028	0					
ANR	1336740	IdentifierDeclType	int		1336028	0					
ANR	1336741	Identifier	k		1336028	1					
ANR	1336742	AssignmentExpression	k = 0		1336028	2		=			
ANR	1336743	Identifier	k		1336028	0					
ANR	1336744	PrimaryExpression	0		1336028	1					
ANR	1336745	ExpressionStatement	"r = r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset + j * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"	3430:4:103607:103705	1336028	1	True				
ANR	1336746	AssignmentExpression	"r = r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset + j * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"		1336028	0		=			
ANR	1336747	Identifier	r		1336028	0					
ANR	1336748	CallExpression	"r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset + j * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"		1336028	1					
ANR	1336749	Callee	r_buf_read_at		1336028	0					
ANR	1336750	Identifier	r_buf_read_at		1336028	0					
ANR	1336751	ArgumentList	bin -> b		1336028	1					
ANR	1336752	Argument	bin -> b		1336028	0					
ANR	1336753	PtrMemberAccess	bin -> b		1336028	0					
ANR	1336754	Identifier	bin		1336028	0					
ANR	1336755	Identifier	b		1336028	1					
ANR	1336756	Argument	bin -> shdr [ i ] . sh_offset + j * sizeof ( Elf_ ( Sym ) )		1336028	1					
ANR	1336757	AdditiveExpression	bin -> shdr [ i ] . sh_offset + j * sizeof ( Elf_ ( Sym ) )		1336028	0		+			
ANR	1336758	MemberAccess	bin -> shdr [ i ] . sh_offset		1336028	0					
ANR	1336759	ArrayIndexing	bin -> shdr [ i ]		1336028	0					
ANR	1336760	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1336761	Identifier	bin		1336028	0					
ANR	1336762	Identifier	shdr		1336028	1					
ANR	1336763	Identifier	i		1336028	1					
ANR	1336764	Identifier	sh_offset		1336028	1					
ANR	1336765	MultiplicativeExpression	j * sizeof ( Elf_ ( Sym ) )		1336028	1		*			
ANR	1336766	Identifier	j		1336028	0					
ANR	1336767	SizeofExpression	sizeof ( Elf_ ( Sym ) )		1336028	1					
ANR	1336768	Sizeof	sizeof		1336028	0					
ANR	1336769	CallExpression	Elf_ ( Sym )		1336028	1					
ANR	1336770	Callee	Elf_		1336028	0					
ANR	1336771	Identifier	Elf_		1336028	0					
ANR	1336772	ArgumentList	Sym		1336028	1					
ANR	1336773	Argument	Sym		1336028	0					
ANR	1336774	Identifier	Sym		1336028	0					
ANR	1336775	Argument	s		1336028	2					
ANR	1336776	Identifier	s		1336028	0					
ANR	1336777	Argument	sizeof ( Elf_ ( Sym ) )		1336028	3					
ANR	1336778	SizeofExpression	sizeof ( Elf_ ( Sym ) )		1336028	0					
ANR	1336779	Sizeof	sizeof		1336028	0					
ANR	1336780	CallExpression	Elf_ ( Sym )		1336028	1					
ANR	1336781	Callee	Elf_		1336028	0					
ANR	1336782	Identifier	Elf_		1336028	0					
ANR	1336783	ArgumentList	Sym		1336028	1					
ANR	1336784	Argument	Sym		1336028	0					
ANR	1336785	Identifier	Sym		1336028	0					
ANR	1336786	IfStatement	if ( r < 1 )		1336028	2					
ANR	1336787	Condition	r < 1	3431:8:103715:103719	1336028	0	True				
ANR	1336788	RelationalExpression	r < 1		1336028	0		<			
ANR	1336789	Identifier	r		1336028	0					
ANR	1336790	PrimaryExpression	1		1336028	1					
ANR	1336791	CompoundStatement		97:15:2903:2903	1336028	1					
ANR	1336792	ExpressionStatement	"bprintf ( ""read (sym)\\n"" )"	3432:5:103729:103753	1336028	0	True				
ANR	1336793	CallExpression	"bprintf ( ""read (sym)\\n"" )"		1336028	0					
ANR	1336794	Callee	bprintf		1336028	0					
ANR	1336795	Identifier	bprintf		1336028	0					
ANR	1336796	ArgumentList	"""read (sym)\\n"""		1336028	1					
ANR	1336797	Argument	"""read (sym)\\n"""		1336028	0					
ANR	1336798	PrimaryExpression	"""read (sym)\\n"""		1336028	0					
ANR	1336799	GotoStatement	goto beach ;	3433:5:103760:103770	1336028	1	True				
ANR	1336800	Identifier	beach		1336028	0					
ANR	1336801	ExpressionStatement	"sym [ j ] . st_name = READ32 ( s , k )"	3436:4:103798:103828	1336028	3	True				
ANR	1336802	AssignmentExpression	"sym [ j ] . st_name = READ32 ( s , k )"		1336028	0		=			
ANR	1336803	MemberAccess	sym [ j ] . st_name		1336028	0					
ANR	1336804	ArrayIndexing	sym [ j ]		1336028	0					
ANR	1336805	Identifier	sym		1336028	0					
ANR	1336806	Identifier	j		1336028	1					
ANR	1336807	Identifier	st_name		1336028	1					
ANR	1336808	CallExpression	"READ32 ( s , k )"		1336028	1					
ANR	1336809	Callee	READ32		1336028	0					
ANR	1336810	Identifier	READ32		1336028	0					
ANR	1336811	ArgumentList	s		1336028	1					
ANR	1336812	Argument	s		1336028	0					
ANR	1336813	Identifier	s		1336028	0					
ANR	1336814	Argument	k		1336028	1					
ANR	1336815	Identifier	k		1336028	0					
ANR	1336816	ExpressionStatement	"sym [ j ] . st_info = READ8 ( s , k )"	3437:4:103834:103863	1336028	4	True				
ANR	1336817	AssignmentExpression	"sym [ j ] . st_info = READ8 ( s , k )"		1336028	0		=			
ANR	1336818	MemberAccess	sym [ j ] . st_info		1336028	0					
ANR	1336819	ArrayIndexing	sym [ j ]		1336028	0					
ANR	1336820	Identifier	sym		1336028	0					
ANR	1336821	Identifier	j		1336028	1					
ANR	1336822	Identifier	st_info		1336028	1					
ANR	1336823	CallExpression	"READ8 ( s , k )"		1336028	1					
ANR	1336824	Callee	READ8		1336028	0					
ANR	1336825	Identifier	READ8		1336028	0					
ANR	1336826	ArgumentList	s		1336028	1					
ANR	1336827	Argument	s		1336028	0					
ANR	1336828	Identifier	s		1336028	0					
ANR	1336829	Argument	k		1336028	1					
ANR	1336830	Identifier	k		1336028	0					
ANR	1336831	ExpressionStatement	"sym [ j ] . st_other = READ8 ( s , k )"	3438:4:103869:103899	1336028	5	True				
ANR	1336832	AssignmentExpression	"sym [ j ] . st_other = READ8 ( s , k )"		1336028	0		=			
ANR	1336833	MemberAccess	sym [ j ] . st_other		1336028	0					
ANR	1336834	ArrayIndexing	sym [ j ]		1336028	0					
ANR	1336835	Identifier	sym		1336028	0					
ANR	1336836	Identifier	j		1336028	1					
ANR	1336837	Identifier	st_other		1336028	1					
ANR	1336838	CallExpression	"READ8 ( s , k )"		1336028	1					
ANR	1336839	Callee	READ8		1336028	0					
ANR	1336840	Identifier	READ8		1336028	0					
ANR	1336841	ArgumentList	s		1336028	1					
ANR	1336842	Argument	s		1336028	0					
ANR	1336843	Identifier	s		1336028	0					
ANR	1336844	Argument	k		1336028	1					
ANR	1336845	Identifier	k		1336028	0					
ANR	1336846	ExpressionStatement	"sym [ j ] . st_shndx = READ16 ( s , k )"	3439:4:103905:103936	1336028	6	True				
ANR	1336847	AssignmentExpression	"sym [ j ] . st_shndx = READ16 ( s , k )"		1336028	0		=			
ANR	1336848	MemberAccess	sym [ j ] . st_shndx		1336028	0					
ANR	1336849	ArrayIndexing	sym [ j ]		1336028	0					
ANR	1336850	Identifier	sym		1336028	0					
ANR	1336851	Identifier	j		1336028	1					
ANR	1336852	Identifier	st_shndx		1336028	1					
ANR	1336853	CallExpression	"READ16 ( s , k )"		1336028	1					
ANR	1336854	Callee	READ16		1336028	0					
ANR	1336855	Identifier	READ16		1336028	0					
ANR	1336856	ArgumentList	s		1336028	1					
ANR	1336857	Argument	s		1336028	0					
ANR	1336858	Identifier	s		1336028	0					
ANR	1336859	Argument	k		1336028	1					
ANR	1336860	Identifier	k		1336028	0					
ANR	1336861	ExpressionStatement	"sym [ j ] . st_value = READ64 ( s , k )"	3440:4:103942:103973	1336028	7	True				
ANR	1336862	AssignmentExpression	"sym [ j ] . st_value = READ64 ( s , k )"		1336028	0		=			
ANR	1336863	MemberAccess	sym [ j ] . st_value		1336028	0					
ANR	1336864	ArrayIndexing	sym [ j ]		1336028	0					
ANR	1336865	Identifier	sym		1336028	0					
ANR	1336866	Identifier	j		1336028	1					
ANR	1336867	Identifier	st_value		1336028	1					
ANR	1336868	CallExpression	"READ64 ( s , k )"		1336028	1					
ANR	1336869	Callee	READ64		1336028	0					
ANR	1336870	Identifier	READ64		1336028	0					
ANR	1336871	ArgumentList	s		1336028	1					
ANR	1336872	Argument	s		1336028	0					
ANR	1336873	Identifier	s		1336028	0					
ANR	1336874	Argument	k		1336028	1					
ANR	1336875	Identifier	k		1336028	0					
ANR	1336876	ExpressionStatement	"sym [ j ] . st_size = READ64 ( s , k )"	3441:4:103979:104009	1336028	8	True				
ANR	1336877	AssignmentExpression	"sym [ j ] . st_size = READ64 ( s , k )"		1336028	0		=			
ANR	1336878	MemberAccess	sym [ j ] . st_size		1336028	0					
ANR	1336879	ArrayIndexing	sym [ j ]		1336028	0					
ANR	1336880	Identifier	sym		1336028	0					
ANR	1336881	Identifier	j		1336028	1					
ANR	1336882	Identifier	st_size		1336028	1					
ANR	1336883	CallExpression	"READ64 ( s , k )"		1336028	1					
ANR	1336884	Callee	READ64		1336028	0					
ANR	1336885	Identifier	READ64		1336028	0					
ANR	1336886	ArgumentList	s		1336028	1					
ANR	1336887	Argument	s		1336028	0					
ANR	1336888	Identifier	s		1336028	0					
ANR	1336889	Argument	k		1336028	1					
ANR	1336890	Identifier	k		1336028	0					
ANR	1336891	ExpressionStatement	"ret = realloc ( ret , ( ret_size + nsym ) * sizeof ( RBinElfSymbol ) )"	3451:3:104249:104312	1336028	43	True				
ANR	1336892	AssignmentExpression	"ret = realloc ( ret , ( ret_size + nsym ) * sizeof ( RBinElfSymbol ) )"		1336028	0		=			
ANR	1336893	Identifier	ret		1336028	0					
ANR	1336894	CallExpression	"realloc ( ret , ( ret_size + nsym ) * sizeof ( RBinElfSymbol ) )"		1336028	1					
ANR	1336895	Callee	realloc		1336028	0					
ANR	1336896	Identifier	realloc		1336028	0					
ANR	1336897	ArgumentList	ret		1336028	1					
ANR	1336898	Argument	ret		1336028	0					
ANR	1336899	Identifier	ret		1336028	0					
ANR	1336900	Argument	( ret_size + nsym ) * sizeof ( RBinElfSymbol )		1336028	1					
ANR	1336901	MultiplicativeExpression	( ret_size + nsym ) * sizeof ( RBinElfSymbol )		1336028	0		*			
ANR	1336902	AdditiveExpression	ret_size + nsym		1336028	0		+			
ANR	1336903	Identifier	ret_size		1336028	0					
ANR	1336904	Identifier	nsym		1336028	1					
ANR	1336905	SizeofExpression	sizeof ( RBinElfSymbol )		1336028	1					
ANR	1336906	Sizeof	sizeof		1336028	0					
ANR	1336907	SizeofOperand	RBinElfSymbol		1336028	1					
ANR	1336908	IfStatement	if ( ! ret )		1336028	44					
ANR	1336909	Condition	! ret	3452:7:104321:104324	1336028	0	True				
ANR	1336910	UnaryOperationExpression	! ret		1336028	0					
ANR	1336911	UnaryOperator	!		1336028	0					
ANR	1336912	Identifier	ret		1336028	1					
ANR	1336913	CompoundStatement		118:13:3508:3508	1336028	1					
ANR	1336914	ExpressionStatement	"bprintf ( ""Cannot allocate %d symbols\\n"" , nsym )"	3453:4:104333:104379	1336028	0	True				
ANR	1336915	CallExpression	"bprintf ( ""Cannot allocate %d symbols\\n"" , nsym )"		1336028	0					
ANR	1336916	Callee	bprintf		1336028	0					
ANR	1336917	Identifier	bprintf		1336028	0					
ANR	1336918	ArgumentList	"""Cannot allocate %d symbols\\n"""		1336028	1					
ANR	1336919	Argument	"""Cannot allocate %d symbols\\n"""		1336028	0					
ANR	1336920	PrimaryExpression	"""Cannot allocate %d symbols\\n"""		1336028	0					
ANR	1336921	Argument	nsym		1336028	1					
ANR	1336922	Identifier	nsym		1336028	0					
ANR	1336923	GotoStatement	goto beach ;	3454:4:104385:104395	1336028	1	True				
ANR	1336924	Identifier	beach		1336028	0					
ANR	1336925	ExpressionStatement	"memset ( ret + ret_size , 0 , nsym * sizeof ( RBinElfSymbol ) )"	3456:3:104405:104462	1336028	45	True				
ANR	1336926	CallExpression	"memset ( ret + ret_size , 0 , nsym * sizeof ( RBinElfSymbol ) )"		1336028	0					
ANR	1336927	Callee	memset		1336028	0					
ANR	1336928	Identifier	memset		1336028	0					
ANR	1336929	ArgumentList	ret + ret_size		1336028	1					
ANR	1336930	Argument	ret + ret_size		1336028	0					
ANR	1336931	AdditiveExpression	ret + ret_size		1336028	0		+			
ANR	1336932	Identifier	ret		1336028	0					
ANR	1336933	Identifier	ret_size		1336028	1					
ANR	1336934	Argument	0		1336028	1					
ANR	1336935	PrimaryExpression	0		1336028	0					
ANR	1336936	Argument	nsym * sizeof ( RBinElfSymbol )		1336028	2					
ANR	1336937	MultiplicativeExpression	nsym * sizeof ( RBinElfSymbol )		1336028	0		*			
ANR	1336938	Identifier	nsym		1336028	0					
ANR	1336939	SizeofExpression	sizeof ( RBinElfSymbol )		1336028	1					
ANR	1336940	Sizeof	sizeof		1336028	0					
ANR	1336941	SizeofOperand	RBinElfSymbol		1336028	1					
ANR	1336942	ExpressionStatement	prev_ret_size = ret_size	3457:3:104467:104491	1336028	46	True				
ANR	1336943	AssignmentExpression	prev_ret_size = ret_size		1336028	0		=			
ANR	1336944	Identifier	prev_ret_size		1336028	0					
ANR	1336945	Identifier	ret_size		1336028	1					
ANR	1336946	ExpressionStatement	ret_size += nsym	3458:3:104496:104512	1336028	47	True				
ANR	1336947	AssignmentExpression	ret_size += nsym		1336028	0		+=			
ANR	1336948	Identifier	ret_size		1336028	0					
ANR	1336949	Identifier	nsym		1336028	1					
ANR	1336950	ForStatement	for ( k = 1 ; k < nsym ; k ++ )		1336028	48					
ANR	1336951	ForInit	k = 1 ;	3459:8:104522:104527	1336028	0	True				
ANR	1336952	AssignmentExpression	k = 1		1336028	0		=			
ANR	1336953	Identifier	k		1336028	0					
ANR	1336954	PrimaryExpression	1		1336028	1					
ANR	1336955	Condition	k < nsym	3459:15:104529:104536	1336028	1	True				
ANR	1336956	RelationalExpression	k < nsym		1336028	0		<			
ANR	1336957	Identifier	k		1336028	0					
ANR	1336958	Identifier	nsym		1336028	1					
ANR	1336959	PostIncDecOperationExpression	k ++	3459:25:104539:104541	1336028	2	True				
ANR	1336960	Identifier	k		1336028	0					
ANR	1336961	IncDec	++		1336028	1					
ANR	1336962	CompoundStatement		128:4:3788:3812	1336028	3					
ANR	1336963	IdentifierDeclStatement	bool is_sht_null = false ;	3460:4:104550:104574	1336028	0	True				
ANR	1336964	IdentifierDecl	is_sht_null = false		1336028	0					
ANR	1336965	IdentifierDeclType	bool		1336028	0					
ANR	1336966	Identifier	is_sht_null		1336028	1					
ANR	1336967	AssignmentExpression	is_sht_null = false		1336028	2		=			
ANR	1336968	Identifier	false		1336028	0					
ANR	1336969	Identifier	false		1336028	1					
ANR	1336970	IdentifierDeclStatement	bool is_vaddr = false ;	3461:4:104580:104601	1336028	1	True				
ANR	1336971	IdentifierDecl	is_vaddr = false		1336028	0					
ANR	1336972	IdentifierDeclType	bool		1336028	0					
ANR	1336973	Identifier	is_vaddr		1336028	1					
ANR	1336974	AssignmentExpression	is_vaddr = false		1336028	2		=			
ANR	1336975	Identifier	false		1336028	0					
ANR	1336976	Identifier	false		1336028	1					
ANR	1336977	IdentifierDeclStatement	bool is_imported = false ;	3462:4:104607:104631	1336028	2	True				
ANR	1336978	IdentifierDecl	is_imported = false		1336028	0					
ANR	1336979	IdentifierDeclType	bool		1336028	0					
ANR	1336980	Identifier	is_imported		1336028	1					
ANR	1336981	AssignmentExpression	is_imported = false		1336028	2		=			
ANR	1336982	Identifier	false		1336028	0					
ANR	1336983	Identifier	false		1336028	1					
ANR	1336984	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS )		1336028	3					
ANR	1336985	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS	3463:8:104641:104672	1336028	0	True				
ANR	1336986	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		1336028	0		==			
ANR	1336987	Identifier	type		1336028	0					
ANR	1336988	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		1336028	1					
ANR	1336989	CompoundStatement		129:43:3857:3857	1336028	1					
ANR	1336990	IfStatement	if ( sym [ k ] . st_value )		1336028	0					
ANR	1336991	Condition	sym [ k ] . st_value	3464:9:104687:104701	1336028	0	True				
ANR	1336992	MemberAccess	sym [ k ] . st_value		1336028	0					
ANR	1336993	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1336994	Identifier	sym		1336028	0					
ANR	1336995	Identifier	k		1336028	1					
ANR	1336996	Identifier	st_value		1336028	1					
ANR	1336997	CompoundStatement		130:26:3885:3885	1336028	1					
ANR	1336998	ExpressionStatement	toffset = sym [ k ] . st_value	3465:6:104712:104737	1336028	0	True				
ANR	1336999	AssignmentExpression	toffset = sym [ k ] . st_value		1336028	0		=			
ANR	1337000	Identifier	toffset		1336028	0					
ANR	1337001	MemberAccess	sym [ k ] . st_value		1336028	1					
ANR	1337002	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337003	Identifier	sym		1336028	0					
ANR	1337004	Identifier	k		1336028	1					
ANR	1337005	Identifier	st_value		1336028	1					
ANR	1337006	ElseStatement	else		1336028	0					
ANR	1337007	IfStatement	"if ( ( toffset = get_import_addr ( bin , k ) ) == - 1 )"		1336028	0					
ANR	1337008	Condition	"( toffset = get_import_addr ( bin , k ) ) == - 1"	3466:16:104755:104796	1336028	0	True				
ANR	1337009	EqualityExpression	"( toffset = get_import_addr ( bin , k ) ) == - 1"		1336028	0		==			
ANR	1337010	AssignmentExpression	"toffset = get_import_addr ( bin , k )"		1336028	0		=			
ANR	1337011	Identifier	toffset		1336028	0					
ANR	1337012	CallExpression	"get_import_addr ( bin , k )"		1336028	1					
ANR	1337013	Callee	get_import_addr		1336028	0					
ANR	1337014	Identifier	get_import_addr		1336028	0					
ANR	1337015	ArgumentList	bin		1336028	1					
ANR	1337016	Argument	bin		1336028	0					
ANR	1337017	Identifier	bin		1336028	0					
ANR	1337018	Argument	k		1336028	1					
ANR	1337019	Identifier	k		1336028	0					
ANR	1337020	UnaryOperationExpression	- 1		1336028	1					
ANR	1337021	UnaryOperator	-		1336028	0					
ANR	1337022	PrimaryExpression	1		1336028	1					
ANR	1337023	CompoundStatement		132:59:3979:3979	1336028	1					
ANR	1337024	ExpressionStatement	toffset = 0	3467:6:104806:104817	1336028	0	True				
ANR	1337025	AssignmentExpression	toffset = 0		1336028	0		=			
ANR	1337026	Identifier	toffset		1336028	0					
ANR	1337027	PrimaryExpression	0		1336028	1					
ANR	1337028	ExpressionStatement	tsize = 16	3469:5:104831:104841	1336028	1	True				
ANR	1337029	AssignmentExpression	tsize = 16		1336028	0		=			
ANR	1337030	Identifier	tsize		1336028	0					
ANR	1337031	PrimaryExpression	16		1336028	1					
ANR	1337032	ExpressionStatement	is_imported = sym [ k ] . st_shndx == STN_UNDEF	3470:5:104848:104890	1336028	2	True				
ANR	1337033	AssignmentExpression	is_imported = sym [ k ] . st_shndx == STN_UNDEF		1336028	0		=			
ANR	1337034	Identifier	is_imported		1336028	0					
ANR	1337035	EqualityExpression	sym [ k ] . st_shndx == STN_UNDEF		1336028	1		==			
ANR	1337036	MemberAccess	sym [ k ] . st_shndx		1336028	0					
ANR	1337037	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337038	Identifier	sym		1336028	0					
ANR	1337039	Identifier	k		1336028	1					
ANR	1337040	Identifier	st_shndx		1336028	1					
ANR	1337041	Identifier	STN_UNDEF		1336028	1					
ANR	1337042	ElseStatement	else		1336028	0					
ANR	1337043	CompoundStatement		137:11:4084:4084	1336028	0					
ANR	1337044	ExpressionStatement	tsize = sym [ k ] . st_size	3472:5:104910:104932	1336028	0	True				
ANR	1337045	AssignmentExpression	tsize = sym [ k ] . st_size		1336028	0		=			
ANR	1337046	Identifier	tsize		1336028	0					
ANR	1337047	MemberAccess	sym [ k ] . st_size		1336028	1					
ANR	1337048	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337049	Identifier	sym		1336028	0					
ANR	1337050	Identifier	k		1336028	1					
ANR	1337051	Identifier	st_size		1336028	1					
ANR	1337052	ExpressionStatement	toffset = ( ut64 ) sym [ k ] . st_value	3473:5:104939:104970	1336028	1	True				
ANR	1337053	AssignmentExpression	toffset = ( ut64 ) sym [ k ] . st_value		1336028	0		=			
ANR	1337054	Identifier	toffset		1336028	0					
ANR	1337055	CastExpression	( ut64 ) sym [ k ] . st_value		1336028	1					
ANR	1337056	CastTarget	ut64		1336028	0					
ANR	1337057	MemberAccess	sym [ k ] . st_value		1336028	1					
ANR	1337058	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337059	Identifier	sym		1336028	0					
ANR	1337060	Identifier	k		1336028	1					
ANR	1337061	Identifier	st_value		1336028	1					
ANR	1337062	ExpressionStatement	is_sht_null = sym [ k ] . st_shndx == SHT_NULL	3474:5:104977:105018	1336028	2	True				
ANR	1337063	AssignmentExpression	is_sht_null = sym [ k ] . st_shndx == SHT_NULL		1336028	0		=			
ANR	1337064	Identifier	is_sht_null		1336028	0					
ANR	1337065	EqualityExpression	sym [ k ] . st_shndx == SHT_NULL		1336028	1		==			
ANR	1337066	MemberAccess	sym [ k ] . st_shndx		1336028	0					
ANR	1337067	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337068	Identifier	sym		1336028	0					
ANR	1337069	Identifier	k		1336028	1					
ANR	1337070	Identifier	st_shndx		1336028	1					
ANR	1337071	Identifier	SHT_NULL		1336028	1					
ANR	1337072	IfStatement	if ( is_bin_etrel ( bin ) )		1336028	4					
ANR	1337073	Condition	is_bin_etrel ( bin )	3476:8:105034:105051	1336028	0	True				
ANR	1337074	CallExpression	is_bin_etrel ( bin )		1336028	0					
ANR	1337075	Callee	is_bin_etrel		1336028	0					
ANR	1337076	Identifier	is_bin_etrel		1336028	0					
ANR	1337077	ArgumentList	bin		1336028	1					
ANR	1337078	Argument	bin		1336028	0					
ANR	1337079	Identifier	bin		1336028	0					
ANR	1337080	CompoundStatement		142:28:4235:4235	1336028	1					
ANR	1337081	IfStatement	if ( sym [ k ] . st_shndx < bin -> ehdr . e_shnum )		1336028	0					
ANR	1337082	Condition	sym [ k ] . st_shndx < bin -> ehdr . e_shnum	3477:9:105065:105099	1336028	0	True				
ANR	1337083	RelationalExpression	sym [ k ] . st_shndx < bin -> ehdr . e_shnum		1336028	0		<			
ANR	1337084	MemberAccess	sym [ k ] . st_shndx		1336028	0					
ANR	1337085	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337086	Identifier	sym		1336028	0					
ANR	1337087	Identifier	k		1336028	1					
ANR	1337088	Identifier	st_shndx		1336028	1					
ANR	1337089	MemberAccess	bin -> ehdr . e_shnum		1336028	1					
ANR	1337090	PtrMemberAccess	bin -> ehdr		1336028	0					
ANR	1337091	Identifier	bin		1336028	0					
ANR	1337092	Identifier	ehdr		1336028	1					
ANR	1337093	Identifier	e_shnum		1336028	1					
ANR	1337094	CompoundStatement		143:46:4283:4283	1336028	1					
ANR	1337095	ExpressionStatement	ret [ ret_ctr ] . offset = sym [ k ] . st_value + bin -> shdr [ sym [ k ] . st_shndx ] . sh_offset	3478:6:105110:105186	1336028	0	True				
ANR	1337096	AssignmentExpression	ret [ ret_ctr ] . offset = sym [ k ] . st_value + bin -> shdr [ sym [ k ] . st_shndx ] . sh_offset		1336028	0		=			
ANR	1337097	MemberAccess	ret [ ret_ctr ] . offset		1336028	0					
ANR	1337098	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337099	Identifier	ret		1336028	0					
ANR	1337100	Identifier	ret_ctr		1336028	1					
ANR	1337101	Identifier	offset		1336028	1					
ANR	1337102	AdditiveExpression	sym [ k ] . st_value + bin -> shdr [ sym [ k ] . st_shndx ] . sh_offset		1336028	1		+			
ANR	1337103	MemberAccess	sym [ k ] . st_value		1336028	0					
ANR	1337104	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337105	Identifier	sym		1336028	0					
ANR	1337106	Identifier	k		1336028	1					
ANR	1337107	Identifier	st_value		1336028	1					
ANR	1337108	MemberAccess	bin -> shdr [ sym [ k ] . st_shndx ] . sh_offset		1336028	1					
ANR	1337109	ArrayIndexing	bin -> shdr [ sym [ k ] . st_shndx ]		1336028	0					
ANR	1337110	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1337111	Identifier	bin		1336028	0					
ANR	1337112	Identifier	shdr		1336028	1					
ANR	1337113	MemberAccess	sym [ k ] . st_shndx		1336028	1					
ANR	1337114	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337115	Identifier	sym		1336028	0					
ANR	1337116	Identifier	k		1336028	1					
ANR	1337117	Identifier	st_shndx		1336028	1					
ANR	1337118	Identifier	sh_offset		1336028	1					
ANR	1337119	ElseStatement	else		1336028	0					
ANR	1337120	CompoundStatement		146:11:4387:4387	1336028	0					
ANR	1337121	ExpressionStatement	"ret [ ret_ctr ] . offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"	3481:5:105213:105273	1336028	0	True				
ANR	1337122	AssignmentExpression	"ret [ ret_ctr ] . offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"		1336028	0		=			
ANR	1337123	MemberAccess	ret [ ret_ctr ] . offset		1336028	0					
ANR	1337124	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337125	Identifier	ret		1336028	0					
ANR	1337126	Identifier	ret_ctr		1336028	1					
ANR	1337127	Identifier	offset		1336028	1					
ANR	1337128	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"		1336028	1					
ANR	1337129	Callee	Elf_ ( r_bin_elf_v2p_new )		1336028	0					
ANR	1337130	CallExpression	Elf_ ( r_bin_elf_v2p_new )		1336028	0					
ANR	1337131	Callee	Elf_		1336028	0					
ANR	1337132	Identifier	Elf_		1336028	0					
ANR	1337133	ArgumentList	r_bin_elf_v2p_new		1336028	1					
ANR	1337134	Argument	r_bin_elf_v2p_new		1336028	0					
ANR	1337135	Identifier	r_bin_elf_v2p_new		1336028	0					
ANR	1337136	ArgumentList	bin		1336028	1					
ANR	1337137	Argument	bin		1336028	0					
ANR	1337138	Identifier	bin		1336028	0					
ANR	1337139	Argument	toffset		1336028	1					
ANR	1337140	Identifier	toffset		1336028	0					
ANR	1337141	IfStatement	if ( ret [ ret_ctr ] . offset == UT64_MAX )		1336028	1					
ANR	1337142	Condition	ret [ ret_ctr ] . offset == UT64_MAX	3482:9:105284:105314	1336028	0	True				
ANR	1337143	EqualityExpression	ret [ ret_ctr ] . offset == UT64_MAX		1336028	0		==			
ANR	1337144	MemberAccess	ret [ ret_ctr ] . offset		1336028	0					
ANR	1337145	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337146	Identifier	ret		1336028	0					
ANR	1337147	Identifier	ret_ctr		1336028	1					
ANR	1337148	Identifier	offset		1336028	1					
ANR	1337149	Identifier	UT64_MAX		1336028	1					
ANR	1337150	CompoundStatement		148:42:4498:4498	1336028	1					
ANR	1337151	ExpressionStatement	ret [ ret_ctr ] . offset = toffset	3483:6:105325:105354	1336028	0	True				
ANR	1337152	AssignmentExpression	ret [ ret_ctr ] . offset = toffset		1336028	0		=			
ANR	1337153	MemberAccess	ret [ ret_ctr ] . offset		1336028	0					
ANR	1337154	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337155	Identifier	ret		1336028	0					
ANR	1337156	Identifier	ret_ctr		1336028	1					
ANR	1337157	Identifier	offset		1336028	1					
ANR	1337158	Identifier	toffset		1336028	1					
ANR	1337159	ExpressionStatement	is_vaddr = true	3484:6:105362:105377	1336028	1	True				
ANR	1337160	AssignmentExpression	is_vaddr = true		1336028	0		=			
ANR	1337161	Identifier	is_vaddr		1336028	0					
ANR	1337162	Identifier	true		1336028	1					
ANR	1337163	ExpressionStatement	ret [ ret_ctr ] . size = tsize	3487:4:105396:105421	1336028	5	True				
ANR	1337164	AssignmentExpression	ret [ ret_ctr ] . size = tsize		1336028	0		=			
ANR	1337165	MemberAccess	ret [ ret_ctr ] . size		1336028	0					
ANR	1337166	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337167	Identifier	ret		1336028	0					
ANR	1337168	Identifier	ret_ctr		1336028	1					
ANR	1337169	Identifier	size		1336028	1					
ANR	1337170	Identifier	tsize		1336028	1					
ANR	1337171	IfStatement	if ( sym [ k ] . st_name + 2 > strtab_section -> sh_size )		1336028	6					
ANR	1337172	Condition	sym [ k ] . st_name + 2 > strtab_section -> sh_size	3488:8:105431:105474	1336028	0	True				
ANR	1337173	RelationalExpression	sym [ k ] . st_name + 2 > strtab_section -> sh_size		1336028	0		>			
ANR	1337174	AdditiveExpression	sym [ k ] . st_name + 2		1336028	0		+			
ANR	1337175	MemberAccess	sym [ k ] . st_name		1336028	0					
ANR	1337176	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337177	Identifier	sym		1336028	0					
ANR	1337178	Identifier	k		1336028	1					
ANR	1337179	Identifier	st_name		1336028	1					
ANR	1337180	PrimaryExpression	2		1336028	1					
ANR	1337181	PtrMemberAccess	strtab_section -> sh_size		1336028	1					
ANR	1337182	Identifier	strtab_section		1336028	0					
ANR	1337183	Identifier	sh_size		1336028	1					
ANR	1337184	CompoundStatement		154:54:4658:4658	1336028	1					
ANR	1337185	ExpressionStatement	"bprintf ( ""index out of strtab range\\n"" )"	3489:5:105484:105523	1336028	0	True				
ANR	1337186	CallExpression	"bprintf ( ""index out of strtab range\\n"" )"		1336028	0					
ANR	1337187	Callee	bprintf		1336028	0					
ANR	1337188	Identifier	bprintf		1336028	0					
ANR	1337189	ArgumentList	"""index out of strtab range\\n"""		1336028	1					
ANR	1337190	Argument	"""index out of strtab range\\n"""		1336028	0					
ANR	1337191	PrimaryExpression	"""index out of strtab range\\n"""		1336028	0					
ANR	1337192	GotoStatement	goto beach ;	3490:5:105530:105540	1336028	1	True				
ANR	1337193	Identifier	beach		1336028	0					
ANR	1337194	CompoundStatement		161:5:4814:4880	1336028	7					
ANR	1337195	IdentifierDeclStatement	int rest = ELF_STRING_LENGTH - 1 ;	3493:5:105559:105591	1336028	0	True				
ANR	1337196	IdentifierDecl	rest = ELF_STRING_LENGTH - 1		1336028	0					
ANR	1337197	IdentifierDeclType	int		1336028	0					
ANR	1337198	Identifier	rest		1336028	1					
ANR	1337199	AssignmentExpression	rest = ELF_STRING_LENGTH - 1		1336028	2		=			
ANR	1337200	Identifier	rest		1336028	0					
ANR	1337201	AdditiveExpression	ELF_STRING_LENGTH - 1		1336028	1		-			
ANR	1337202	Identifier	ELF_STRING_LENGTH		1336028	0					
ANR	1337203	PrimaryExpression	1		1336028	1					
ANR	1337204	IdentifierDeclStatement	int st_name = sym [ k ] . st_name ;	3494:5:105598:105626	1336028	1	True				
ANR	1337205	IdentifierDecl	st_name = sym [ k ] . st_name		1336028	0					
ANR	1337206	IdentifierDeclType	int		1336028	0					
ANR	1337207	Identifier	st_name		1336028	1					
ANR	1337208	AssignmentExpression	st_name = sym [ k ] . st_name		1336028	2		=			
ANR	1337209	Identifier	st_name		1336028	0					
ANR	1337210	MemberAccess	sym [ k ] . st_name		1336028	1					
ANR	1337211	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337212	Identifier	sym		1336028	0					
ANR	1337213	Identifier	k		1336028	1					
ANR	1337214	Identifier	st_name		1336028	1					
ANR	1337215	IdentifierDeclStatement	"int maxsize = R_MIN ( r_buf_size ( bin -> b ) , strtab_section -> sh_size ) ;"	3495:5:105633:105699	1336028	2	True				
ANR	1337216	IdentifierDecl	"maxsize = R_MIN ( r_buf_size ( bin -> b ) , strtab_section -> sh_size )"		1336028	0					
ANR	1337217	IdentifierDeclType	int		1336028	0					
ANR	1337218	Identifier	maxsize		1336028	1					
ANR	1337219	AssignmentExpression	"maxsize = R_MIN ( r_buf_size ( bin -> b ) , strtab_section -> sh_size )"		1336028	2		=			
ANR	1337220	Identifier	maxsize		1336028	0					
ANR	1337221	CallExpression	"R_MIN ( r_buf_size ( bin -> b ) , strtab_section -> sh_size )"		1336028	1					
ANR	1337222	Callee	R_MIN		1336028	0					
ANR	1337223	Identifier	R_MIN		1336028	0					
ANR	1337224	ArgumentList	r_buf_size ( bin -> b )		1336028	1					
ANR	1337225	Argument	r_buf_size ( bin -> b )		1336028	0					
ANR	1337226	CallExpression	r_buf_size ( bin -> b )		1336028	0					
ANR	1337227	Callee	r_buf_size		1336028	0					
ANR	1337228	Identifier	r_buf_size		1336028	0					
ANR	1337229	ArgumentList	bin -> b		1336028	1					
ANR	1337230	Argument	bin -> b		1336028	0					
ANR	1337231	PtrMemberAccess	bin -> b		1336028	0					
ANR	1337232	Identifier	bin		1336028	0					
ANR	1337233	Identifier	b		1336028	1					
ANR	1337234	Argument	strtab_section -> sh_size		1336028	1					
ANR	1337235	PtrMemberAccess	strtab_section -> sh_size		1336028	0					
ANR	1337236	Identifier	strtab_section		1336028	0					
ANR	1337237	Identifier	sh_size		1336028	1					
ANR	1337238	IfStatement	"if ( is_section_local_sym ( bin , & sym [ k ] ) )"		1336028	3					
ANR	1337239	Condition	"is_section_local_sym ( bin , & sym [ k ] )"	3496:9:105710:105744	1336028	0	True				
ANR	1337240	CallExpression	"is_section_local_sym ( bin , & sym [ k ] )"		1336028	0					
ANR	1337241	Callee	is_section_local_sym		1336028	0					
ANR	1337242	Identifier	is_section_local_sym		1336028	0					
ANR	1337243	ArgumentList	bin		1336028	1					
ANR	1337244	Argument	bin		1336028	0					
ANR	1337245	Identifier	bin		1336028	0					
ANR	1337246	Argument	& sym [ k ]		1336028	1					
ANR	1337247	UnaryOperationExpression	& sym [ k ]		1336028	0					
ANR	1337248	UnaryOperator	&		1336028	0					
ANR	1337249	ArrayIndexing	sym [ k ]		1336028	1					
ANR	1337250	Identifier	sym		1336028	0					
ANR	1337251	Identifier	k		1336028	1					
ANR	1337252	CompoundStatement		163:6:4936:5007	1336028	1					
ANR	1337253	IdentifierDeclStatement	const char * shname = & bin -> shstrtab [ bin -> shdr [ sym [ k ] . st_shndx ] . sh_name ] ;	3497:6:105755:105826	1336028	0	True				
ANR	1337254	IdentifierDecl	* shname = & bin -> shstrtab [ bin -> shdr [ sym [ k ] . st_shndx ] . sh_name ]		1336028	0					
ANR	1337255	IdentifierDeclType	const char *		1336028	0					
ANR	1337256	Identifier	shname		1336028	1					
ANR	1337257	AssignmentExpression	* shname = & bin -> shstrtab [ bin -> shdr [ sym [ k ] . st_shndx ] . sh_name ]		1336028	2		=			
ANR	1337258	Identifier	shname		1336028	0					
ANR	1337259	UnaryOperationExpression	& bin -> shstrtab [ bin -> shdr [ sym [ k ] . st_shndx ] . sh_name ]		1336028	1					
ANR	1337260	UnaryOperator	&		1336028	0					
ANR	1337261	ArrayIndexing	bin -> shstrtab [ bin -> shdr [ sym [ k ] . st_shndx ] . sh_name ]		1336028	1					
ANR	1337262	PtrMemberAccess	bin -> shstrtab		1336028	0					
ANR	1337263	Identifier	bin		1336028	0					
ANR	1337264	Identifier	shstrtab		1336028	1					
ANR	1337265	MemberAccess	bin -> shdr [ sym [ k ] . st_shndx ] . sh_name		1336028	1					
ANR	1337266	ArrayIndexing	bin -> shdr [ sym [ k ] . st_shndx ]		1336028	0					
ANR	1337267	PtrMemberAccess	bin -> shdr		1336028	0					
ANR	1337268	Identifier	bin		1336028	0					
ANR	1337269	Identifier	shdr		1336028	1					
ANR	1337270	MemberAccess	sym [ k ] . st_shndx		1336028	1					
ANR	1337271	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337272	Identifier	sym		1336028	0					
ANR	1337273	Identifier	k		1336028	1					
ANR	1337274	Identifier	st_shndx		1336028	1					
ANR	1337275	Identifier	sh_name		1336028	1					
ANR	1337276	ExpressionStatement	"r_str_ncpy ( ret [ ret_ctr ] . name , shname , ELF_STRING_LENGTH )"	3498:6:105834:105891	1336028	1	True				
ANR	1337277	CallExpression	"r_str_ncpy ( ret [ ret_ctr ] . name , shname , ELF_STRING_LENGTH )"		1336028	0					
ANR	1337278	Callee	r_str_ncpy		1336028	0					
ANR	1337279	Identifier	r_str_ncpy		1336028	0					
ANR	1337280	ArgumentList	ret [ ret_ctr ] . name		1336028	1					
ANR	1337281	Argument	ret [ ret_ctr ] . name		1336028	0					
ANR	1337282	MemberAccess	ret [ ret_ctr ] . name		1336028	0					
ANR	1337283	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337284	Identifier	ret		1336028	0					
ANR	1337285	Identifier	ret_ctr		1336028	1					
ANR	1337286	Identifier	name		1336028	1					
ANR	1337287	Argument	shname		1336028	1					
ANR	1337288	Identifier	shname		1336028	0					
ANR	1337289	Argument	ELF_STRING_LENGTH		1336028	2					
ANR	1337290	Identifier	ELF_STRING_LENGTH		1336028	0					
ANR	1337291	ElseStatement	else		1336028	0					
ANR	1337292	IfStatement	if ( st_name <= 0 || st_name >= maxsize )		1336028	0					
ANR	1337293	Condition	st_name <= 0 || st_name >= maxsize	3499:16:105909:105942	1336028	0	True				
ANR	1337294	OrExpression	st_name <= 0 || st_name >= maxsize		1336028	0		||			
ANR	1337295	RelationalExpression	st_name <= 0		1336028	0		<=			
ANR	1337296	Identifier	st_name		1336028	0					
ANR	1337297	PrimaryExpression	0		1336028	1					
ANR	1337298	RelationalExpression	st_name >= maxsize		1336028	1		>=			
ANR	1337299	Identifier	st_name		1336028	0					
ANR	1337300	Identifier	maxsize		1336028	1					
ANR	1337301	CompoundStatement		165:52:5126:5126	1336028	1					
ANR	1337302	ExpressionStatement	ret [ ret_ctr ] . name [ 0 ] = 0	3500:6:105953:105977	1336028	0	True				
ANR	1337303	AssignmentExpression	ret [ ret_ctr ] . name [ 0 ] = 0		1336028	0		=			
ANR	1337304	ArrayIndexing	ret [ ret_ctr ] . name [ 0 ]		1336028	0					
ANR	1337305	MemberAccess	ret [ ret_ctr ] . name		1336028	0					
ANR	1337306	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337307	Identifier	ret		1336028	0					
ANR	1337308	Identifier	ret_ctr		1336028	1					
ANR	1337309	Identifier	name		1336028	1					
ANR	1337310	PrimaryExpression	0		1336028	1					
ANR	1337311	PrimaryExpression	0		1336028	1					
ANR	1337312	ElseStatement	else		1336028	0					
ANR	1337313	CompoundStatement		182:6:5638:5698	1336028	0					
ANR	1337314	IdentifierDeclStatement	bool found = false ;	3502:6:105999:106017	1336028	0	True				
ANR	1337315	IdentifierDecl	found = false		1336028	0					
ANR	1337316	IdentifierDeclType	bool		1336028	0					
ANR	1337317	Identifier	found		1336028	1					
ANR	1337318	AssignmentExpression	found = false		1336028	2		=			
ANR	1337319	Identifier	false		1336028	0					
ANR	1337320	Identifier	false		1336028	1					
ANR	1337321	ExpressionStatement	j = - 1	3503:6:106025:106031	1336028	1	True				
ANR	1337322	AssignmentExpression	j = - 1		1336028	0		=			
ANR	1337323	Identifier	j		1336028	0					
ANR	1337324	UnaryOperationExpression	- 1		1336028	1					
ANR	1337325	UnaryOperator	-		1336028	0					
ANR	1337326	PrimaryExpression	1		1336028	1					
ANR	1337327	WhileStatement	while ( ! ret [ ++ j ] . last && j < prev_ret_size )		1336028	2					
ANR	1337328	Condition	! ret [ ++ j ] . last && j < prev_ret_size	3504:13:106046:106080	1336028	0	True				
ANR	1337329	AndExpression	! ret [ ++ j ] . last && j < prev_ret_size		1336028	0		&&			
ANR	1337330	UnaryOperationExpression	! ret [ ++ j ] . last		1336028	0					
ANR	1337331	UnaryOperator	!		1336028	0					
ANR	1337332	MemberAccess	ret [ ++ j ] . last		1336028	1					
ANR	1337333	ArrayIndexing	ret [ ++ j ]		1336028	0					
ANR	1337334	Identifier	ret		1336028	0					
ANR	1337335	UnaryExpression	++ j		1336028	1					
ANR	1337336	IncDec	++		1336028	0					
ANR	1337337	Identifier	j		1336028	1					
ANR	1337338	Identifier	last		1336028	1					
ANR	1337339	RelationalExpression	j < prev_ret_size		1336028	1		<			
ANR	1337340	Identifier	j		1336028	0					
ANR	1337341	Identifier	prev_ret_size		1336028	1					
ANR	1337342	CompoundStatement		170:50:5264:5264	1336028	1					
ANR	1337343	IfStatement	"if ( ret [ j ] . offset == ret [ ret_ctr ] . offset && strcmp ( ret [ j ] . name , """" ) != 0 && strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0 && strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0 )"		1336028	0					
ANR	1337344	Condition	"ret [ j ] . offset == ret [ ret_ctr ] . offset && strcmp ( ret [ j ] . name , """" ) != 0 && strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0 && strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0"	3505:11:106096:106290	1336028	0	True				
ANR	1337345	AndExpression	"ret [ j ] . offset == ret [ ret_ctr ] . offset && strcmp ( ret [ j ] . name , """" ) != 0 && strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0 && strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0"		1336028	0		&&			
ANR	1337346	EqualityExpression	ret [ j ] . offset == ret [ ret_ctr ] . offset		1336028	0		==			
ANR	1337347	MemberAccess	ret [ j ] . offset		1336028	0					
ANR	1337348	ArrayIndexing	ret [ j ]		1336028	0					
ANR	1337349	Identifier	ret		1336028	0					
ANR	1337350	Identifier	j		1336028	1					
ANR	1337351	Identifier	offset		1336028	1					
ANR	1337352	MemberAccess	ret [ ret_ctr ] . offset		1336028	1					
ANR	1337353	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337354	Identifier	ret		1336028	0					
ANR	1337355	Identifier	ret_ctr		1336028	1					
ANR	1337356	Identifier	offset		1336028	1					
ANR	1337357	AndExpression	"strcmp ( ret [ j ] . name , """" ) != 0 && strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0 && strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0"		1336028	1		&&			
ANR	1337358	EqualityExpression	"strcmp ( ret [ j ] . name , """" ) != 0"		1336028	0		!=			
ANR	1337359	CallExpression	"strcmp ( ret [ j ] . name , """" )"		1336028	0					
ANR	1337360	Callee	strcmp		1336028	0					
ANR	1337361	Identifier	strcmp		1336028	0					
ANR	1337362	ArgumentList	ret [ j ] . name		1336028	1					
ANR	1337363	Argument	ret [ j ] . name		1336028	0					
ANR	1337364	MemberAccess	ret [ j ] . name		1336028	0					
ANR	1337365	ArrayIndexing	ret [ j ]		1336028	0					
ANR	1337366	Identifier	ret		1336028	0					
ANR	1337367	Identifier	j		1336028	1					
ANR	1337368	Identifier	name		1336028	1					
ANR	1337369	Argument	""""""		1336028	1					
ANR	1337370	PrimaryExpression	""""""		1336028	0					
ANR	1337371	PrimaryExpression	0		1336028	1					
ANR	1337372	AndExpression	"strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0 && strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0"		1336028	1		&&			
ANR	1337373	EqualityExpression	"strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0"		1336028	0		==			
ANR	1337374	CallExpression	"strcmp ( ret [ j ] . name , & strtab [ st_name ] )"		1336028	0					
ANR	1337375	Callee	strcmp		1336028	0					
ANR	1337376	Identifier	strcmp		1336028	0					
ANR	1337377	ArgumentList	ret [ j ] . name		1336028	1					
ANR	1337378	Argument	ret [ j ] . name		1336028	0					
ANR	1337379	MemberAccess	ret [ j ] . name		1336028	0					
ANR	1337380	ArrayIndexing	ret [ j ]		1336028	0					
ANR	1337381	Identifier	ret		1336028	0					
ANR	1337382	Identifier	j		1336028	1					
ANR	1337383	Identifier	name		1336028	1					
ANR	1337384	Argument	& strtab [ st_name ]		1336028	1					
ANR	1337385	UnaryOperationExpression	& strtab [ st_name ]		1336028	0					
ANR	1337386	UnaryOperator	&		1336028	0					
ANR	1337387	ArrayIndexing	strtab [ st_name ]		1336028	1					
ANR	1337388	Identifier	strtab		1336028	0					
ANR	1337389	Identifier	st_name		1336028	1					
ANR	1337390	PrimaryExpression	0		1336028	1					
ANR	1337391	EqualityExpression	"strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0"		1336028	1		==			
ANR	1337392	CallExpression	"strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) )"		1336028	0					
ANR	1337393	Callee	strcmp		1336028	0					
ANR	1337394	Identifier	strcmp		1336028	0					
ANR	1337395	ArgumentList	ret [ j ] . type		1336028	1					
ANR	1337396	Argument	ret [ j ] . type		1336028	0					
ANR	1337397	MemberAccess	ret [ j ] . type		1336028	0					
ANR	1337398	ArrayIndexing	ret [ j ]		1336028	0					
ANR	1337399	Identifier	ret		1336028	0					
ANR	1337400	Identifier	j		1336028	1					
ANR	1337401	Identifier	type		1336028	1					
ANR	1337402	Argument	"type2str ( NULL , NULL , & sym [ k ] )"		1336028	1					
ANR	1337403	CallExpression	"type2str ( NULL , NULL , & sym [ k ] )"		1336028	0					
ANR	1337404	Callee	type2str		1336028	0					
ANR	1337405	Identifier	type2str		1336028	0					
ANR	1337406	ArgumentList	NULL		1336028	1					
ANR	1337407	Argument	NULL		1336028	0					
ANR	1337408	Identifier	NULL		1336028	0					
ANR	1337409	Argument	NULL		1336028	1					
ANR	1337410	Identifier	NULL		1336028	0					
ANR	1337411	Argument	& sym [ k ]		1336028	2					
ANR	1337412	UnaryOperationExpression	& sym [ k ]		1336028	0					
ANR	1337413	UnaryOperator	&		1336028	0					
ANR	1337414	ArrayIndexing	sym [ k ]		1336028	1					
ANR	1337415	Identifier	sym		1336028	0					
ANR	1337416	Identifier	k		1336028	1					
ANR	1337417	PrimaryExpression	0		1336028	1					
ANR	1337418	CompoundStatement		173:71:5474:5474	1336028	1					
ANR	1337419	ExpressionStatement	found = true	3508:8:106303:106315	1336028	0	True				
ANR	1337420	AssignmentExpression	found = true		1336028	0		=			
ANR	1337421	Identifier	found		1336028	0					
ANR	1337422	Identifier	true		1336028	1					
ANR	1337423	BreakStatement	break ;	3509:8:106325:106330	1336028	1	True				
ANR	1337424	IfStatement	if ( found )		1336028	3					
ANR	1337425	Condition	found	3512:10:106359:106363	1336028	0	True				
ANR	1337426	Identifier	found		1336028	0					
ANR	1337427	CompoundStatement		178:17:5547:5547	1336028	1					
ANR	1337428	ExpressionStatement	"memset ( ret + ret_ctr , 0 , sizeof ( RBinElfSymbol ) )"	3513:7:106375:106424	1336028	0	True				
ANR	1337429	CallExpression	"memset ( ret + ret_ctr , 0 , sizeof ( RBinElfSymbol ) )"		1336028	0					
ANR	1337430	Callee	memset		1336028	0					
ANR	1337431	Identifier	memset		1336028	0					
ANR	1337432	ArgumentList	ret + ret_ctr		1336028	1					
ANR	1337433	Argument	ret + ret_ctr		1336028	0					
ANR	1337434	AdditiveExpression	ret + ret_ctr		1336028	0		+			
ANR	1337435	Identifier	ret		1336028	0					
ANR	1337436	Identifier	ret_ctr		1336028	1					
ANR	1337437	Argument	0		1336028	1					
ANR	1337438	PrimaryExpression	0		1336028	0					
ANR	1337439	Argument	sizeof ( RBinElfSymbol )		1336028	2					
ANR	1337440	SizeofExpression	sizeof ( RBinElfSymbol )		1336028	0					
ANR	1337441	Sizeof	sizeof		1336028	0					
ANR	1337442	SizeofOperand	RBinElfSymbol		1336028	1					
ANR	1337443	ContinueStatement	continue ;	3514:7:106433:106441	1336028	1	True				
ANR	1337444	IdentifierDeclStatement	"const size_t len = __strnlen ( strtab + sym [ k ] . st_name , rest ) ;"	3516:6:106457:106517	1336028	4	True				
ANR	1337445	IdentifierDecl	"len = __strnlen ( strtab + sym [ k ] . st_name , rest )"		1336028	0					
ANR	1337446	IdentifierDeclType	const size_t		1336028	0					
ANR	1337447	Identifier	len		1336028	1					
ANR	1337448	AssignmentExpression	"len = __strnlen ( strtab + sym [ k ] . st_name , rest )"		1336028	2		=			
ANR	1337449	Identifier	len		1336028	0					
ANR	1337450	CallExpression	"__strnlen ( strtab + sym [ k ] . st_name , rest )"		1336028	1					
ANR	1337451	Callee	__strnlen		1336028	0					
ANR	1337452	Identifier	__strnlen		1336028	0					
ANR	1337453	ArgumentList	strtab + sym [ k ] . st_name		1336028	1					
ANR	1337454	Argument	strtab + sym [ k ] . st_name		1336028	0					
ANR	1337455	AdditiveExpression	strtab + sym [ k ] . st_name		1336028	0		+			
ANR	1337456	Identifier	strtab		1336028	0					
ANR	1337457	MemberAccess	sym [ k ] . st_name		1336028	1					
ANR	1337458	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337459	Identifier	sym		1336028	0					
ANR	1337460	Identifier	k		1336028	1					
ANR	1337461	Identifier	st_name		1336028	1					
ANR	1337462	Argument	rest		1336028	1					
ANR	1337463	Identifier	rest		1336028	0					
ANR	1337464	ExpressionStatement	"memcpy ( ret [ ret_ctr ] . name , & strtab [ sym [ k ] . st_name ] , len )"	3517:6:106525:106581	1336028	5	True				
ANR	1337465	CallExpression	"memcpy ( ret [ ret_ctr ] . name , & strtab [ sym [ k ] . st_name ] , len )"		1336028	0					
ANR	1337466	Callee	memcpy		1336028	0					
ANR	1337467	Identifier	memcpy		1336028	0					
ANR	1337468	ArgumentList	ret [ ret_ctr ] . name		1336028	1					
ANR	1337469	Argument	ret [ ret_ctr ] . name		1336028	0					
ANR	1337470	MemberAccess	ret [ ret_ctr ] . name		1336028	0					
ANR	1337471	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337472	Identifier	ret		1336028	0					
ANR	1337473	Identifier	ret_ctr		1336028	1					
ANR	1337474	Identifier	name		1336028	1					
ANR	1337475	Argument	& strtab [ sym [ k ] . st_name ]		1336028	1					
ANR	1337476	UnaryOperationExpression	& strtab [ sym [ k ] . st_name ]		1336028	0					
ANR	1337477	UnaryOperator	&		1336028	0					
ANR	1337478	ArrayIndexing	strtab [ sym [ k ] . st_name ]		1336028	1					
ANR	1337479	Identifier	strtab		1336028	0					
ANR	1337480	MemberAccess	sym [ k ] . st_name		1336028	1					
ANR	1337481	ArrayIndexing	sym [ k ]		1336028	0					
ANR	1337482	Identifier	sym		1336028	0					
ANR	1337483	Identifier	k		1336028	1					
ANR	1337484	Identifier	st_name		1336028	1					
ANR	1337485	Argument	len		1336028	2					
ANR	1337486	Identifier	len		1336028	0					
ANR	1337487	ExpressionStatement	ret [ ret_ctr ] . ordinal = k	3520:4:106600:106624	1336028	8	True				
ANR	1337488	AssignmentExpression	ret [ ret_ctr ] . ordinal = k		1336028	0		=			
ANR	1337489	MemberAccess	ret [ ret_ctr ] . ordinal		1336028	0					
ANR	1337490	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337491	Identifier	ret		1336028	0					
ANR	1337492	Identifier	ret_ctr		1336028	1					
ANR	1337493	Identifier	ordinal		1336028	1					
ANR	1337494	Identifier	k		1336028	1					
ANR	1337495	ExpressionStatement	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ] = '\\0'	3521:4:106630:106677	1336028	9	True				
ANR	1337496	AssignmentExpression	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ] = '\\0'		1336028	0		=			
ANR	1337497	ArrayIndexing	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ]		1336028	0					
ANR	1337498	MemberAccess	ret [ ret_ctr ] . name		1336028	0					
ANR	1337499	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337500	Identifier	ret		1336028	0					
ANR	1337501	Identifier	ret_ctr		1336028	1					
ANR	1337502	Identifier	name		1336028	1					
ANR	1337503	AdditiveExpression	ELF_STRING_LENGTH - 2		1336028	1		-			
ANR	1337504	Identifier	ELF_STRING_LENGTH		1336028	0					
ANR	1337505	PrimaryExpression	2		1336028	1					
ANR	1337506	PrimaryExpression	'\\0'		1336028	1					
ANR	1337507	ExpressionStatement	"fill_symbol_bind_and_type ( bin , & ret [ ret_ctr ] , & sym [ k ] )"	3522:4:106683:106738	1336028	10	True				
ANR	1337508	CallExpression	"fill_symbol_bind_and_type ( bin , & ret [ ret_ctr ] , & sym [ k ] )"		1336028	0					
ANR	1337509	Callee	fill_symbol_bind_and_type		1336028	0					
ANR	1337510	Identifier	fill_symbol_bind_and_type		1336028	0					
ANR	1337511	ArgumentList	bin		1336028	1					
ANR	1337512	Argument	bin		1336028	0					
ANR	1337513	Identifier	bin		1336028	0					
ANR	1337514	Argument	& ret [ ret_ctr ]		1336028	1					
ANR	1337515	UnaryOperationExpression	& ret [ ret_ctr ]		1336028	0					
ANR	1337516	UnaryOperator	&		1336028	0					
ANR	1337517	ArrayIndexing	ret [ ret_ctr ]		1336028	1					
ANR	1337518	Identifier	ret		1336028	0					
ANR	1337519	Identifier	ret_ctr		1336028	1					
ANR	1337520	Argument	& sym [ k ]		1336028	2					
ANR	1337521	UnaryOperationExpression	& sym [ k ]		1336028	0					
ANR	1337522	UnaryOperator	&		1336028	0					
ANR	1337523	ArrayIndexing	sym [ k ]		1336028	1					
ANR	1337524	Identifier	sym		1336028	0					
ANR	1337525	Identifier	k		1336028	1					
ANR	1337526	ExpressionStatement	ret [ ret_ctr ] . is_sht_null = is_sht_null	3523:4:106744:106782	1336028	11	True				
ANR	1337527	AssignmentExpression	ret [ ret_ctr ] . is_sht_null = is_sht_null		1336028	0		=			
ANR	1337528	MemberAccess	ret [ ret_ctr ] . is_sht_null		1336028	0					
ANR	1337529	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337530	Identifier	ret		1336028	0					
ANR	1337531	Identifier	ret_ctr		1336028	1					
ANR	1337532	Identifier	is_sht_null		1336028	1					
ANR	1337533	Identifier	is_sht_null		1336028	1					
ANR	1337534	ExpressionStatement	ret [ ret_ctr ] . is_vaddr = is_vaddr	3524:4:106788:106820	1336028	12	True				
ANR	1337535	AssignmentExpression	ret [ ret_ctr ] . is_vaddr = is_vaddr		1336028	0		=			
ANR	1337536	MemberAccess	ret [ ret_ctr ] . is_vaddr		1336028	0					
ANR	1337537	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337538	Identifier	ret		1336028	0					
ANR	1337539	Identifier	ret_ctr		1336028	1					
ANR	1337540	Identifier	is_vaddr		1336028	1					
ANR	1337541	Identifier	is_vaddr		1336028	1					
ANR	1337542	ExpressionStatement	ret [ ret_ctr ] . last = 0	3525:4:106826:106847	1336028	13	True				
ANR	1337543	AssignmentExpression	ret [ ret_ctr ] . last = 0		1336028	0		=			
ANR	1337544	MemberAccess	ret [ ret_ctr ] . last		1336028	0					
ANR	1337545	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337546	Identifier	ret		1336028	0					
ANR	1337547	Identifier	ret_ctr		1336028	1					
ANR	1337548	Identifier	last		1336028	1					
ANR	1337549	PrimaryExpression	0		1336028	1					
ANR	1337550	ExpressionStatement	ret [ ret_ctr ] . is_imported = is_imported	3526:4:106853:106891	1336028	14	True				
ANR	1337551	AssignmentExpression	ret [ ret_ctr ] . is_imported = is_imported		1336028	0		=			
ANR	1337552	MemberAccess	ret [ ret_ctr ] . is_imported		1336028	0					
ANR	1337553	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337554	Identifier	ret		1336028	0					
ANR	1337555	Identifier	ret_ctr		1336028	1					
ANR	1337556	Identifier	is_imported		1336028	1					
ANR	1337557	Identifier	is_imported		1336028	1					
ANR	1337558	ExpressionStatement	ret_ctr ++	3527:4:106897:106906	1336028	15	True				
ANR	1337559	PostIncDecOperationExpression	ret_ctr ++		1336028	0					
ANR	1337560	Identifier	ret_ctr		1336028	0					
ANR	1337561	IncDec	++		1336028	1					
ANR	1337562	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS && is_imported )		1336028	16					
ANR	1337563	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS && is_imported	3528:8:106916:106962	1336028	0	True				
ANR	1337564	AndExpression	type == R_BIN_ELF_IMPORT_SYMBOLS && is_imported		1336028	0		&&			
ANR	1337565	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		1336028	0		==			
ANR	1337566	Identifier	type		1336028	0					
ANR	1337567	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		1336028	1					
ANR	1337568	Identifier	is_imported		1336028	1					
ANR	1337569	CompoundStatement		194:57:6146:6146	1336028	1					
ANR	1337570	ExpressionStatement	import_ret_ctr ++	3529:5:106972:106988	1336028	0	True				
ANR	1337571	PostIncDecOperationExpression	import_ret_ctr ++		1336028	0					
ANR	1337572	Identifier	import_ret_ctr		1336028	0					
ANR	1337573	IncDec	++		1336028	1					
ANR	1337574	ExpressionStatement	R_FREE ( strtab )	3532:3:107004:107019	1336028	49	True				
ANR	1337575	CallExpression	R_FREE ( strtab )		1336028	0					
ANR	1337576	Callee	R_FREE		1336028	0					
ANR	1337577	Identifier	R_FREE		1336028	0					
ANR	1337578	ArgumentList	strtab		1336028	1					
ANR	1337579	Argument	strtab		1336028	0					
ANR	1337580	Identifier	strtab		1336028	0					
ANR	1337581	ExpressionStatement	R_FREE ( sym )	3533:3:107024:107036	1336028	50	True				
ANR	1337582	CallExpression	R_FREE ( sym )		1336028	0					
ANR	1337583	Callee	R_FREE		1336028	0					
ANR	1337584	Identifier	R_FREE		1336028	0					
ANR	1337585	ArgumentList	sym		1336028	1					
ANR	1337586	Argument	sym		1336028	0					
ANR	1337587	Identifier	sym		1336028	0					
ANR	1337588	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS )		1336028	51					
ANR	1337589	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS	3534:7:107045:107076	1336028	0	True				
ANR	1337590	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		1336028	0		==			
ANR	1337591	Identifier	type		1336028	0					
ANR	1337592	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		1336028	1					
ANR	1337593	CompoundStatement		200:41:6260:6260	1336028	1					
ANR	1337594	BreakStatement	break ;	3535:4:107085:107090	1336028	0	True				
ANR	1337595	IfStatement	if ( ! ret )		1336028	15					
ANR	1337596	Condition	! ret	3539:5:107109:107112	1336028	0	True				
ANR	1337597	UnaryOperationExpression	! ret		1336028	0					
ANR	1337598	UnaryOperator	!		1336028	0					
ANR	1337599	Identifier	ret		1336028	1					
ANR	1337600	CompoundStatement		205:11:6296:6296	1336028	1					
ANR	1337601	ReturnStatement	"return Elf_ ( get_phdr_symbols ) ( bin , type ) ;"	3540:2:107119:107160	1336028	0	True				
ANR	1337602	CallExpression	"Elf_ ( get_phdr_symbols ) ( bin , type )"		1336028	0					
ANR	1337603	Callee	Elf_ ( get_phdr_symbols )		1336028	0					
ANR	1337604	CallExpression	Elf_ ( get_phdr_symbols )		1336028	0					
ANR	1337605	Callee	Elf_		1336028	0					
ANR	1337606	Identifier	Elf_		1336028	0					
ANR	1337607	ArgumentList	get_phdr_symbols		1336028	1					
ANR	1337608	Argument	get_phdr_symbols		1336028	0					
ANR	1337609	Identifier	get_phdr_symbols		1336028	0					
ANR	1337610	ArgumentList	bin		1336028	1					
ANR	1337611	Argument	bin		1336028	0					
ANR	1337612	Identifier	bin		1336028	0					
ANR	1337613	Argument	type		1336028	1					
ANR	1337614	Identifier	type		1336028	0					
ANR	1337615	ExpressionStatement	ret [ ret_ctr ] . last = 1	3542:1:107166:107187	1336028	16	True				
ANR	1337616	AssignmentExpression	ret [ ret_ctr ] . last = 1		1336028	0		=			
ANR	1337617	MemberAccess	ret [ ret_ctr ] . last		1336028	0					
ANR	1337618	ArrayIndexing	ret [ ret_ctr ]		1336028	0					
ANR	1337619	Identifier	ret		1336028	0					
ANR	1337620	Identifier	ret_ctr		1336028	1					
ANR	1337621	Identifier	last		1336028	1					
ANR	1337622	PrimaryExpression	1		1336028	1					
ANR	1337623	IdentifierDeclStatement	int max = - 1 ;	3543:1:107212:107224	1336028	17	True				
ANR	1337624	IdentifierDecl	max = - 1		1336028	0					
ANR	1337625	IdentifierDeclType	int		1336028	0					
ANR	1337626	Identifier	max		1336028	1					
ANR	1337627	AssignmentExpression	max = - 1		1336028	2		=			
ANR	1337628	Identifier	max		1336028	0					
ANR	1337629	UnaryOperationExpression	- 1		1336028	1					
ANR	1337630	UnaryOperator	-		1336028	0					
ANR	1337631	PrimaryExpression	1		1336028	1					
ANR	1337632	IdentifierDeclStatement	RBinElfSymbol * aux = NULL ;	3544:1:107227:107252	1336028	18	True				
ANR	1337633	IdentifierDecl	* aux = NULL		1336028	0					
ANR	1337634	IdentifierDeclType	RBinElfSymbol *		1336028	0					
ANR	1337635	Identifier	aux		1336028	1					
ANR	1337636	AssignmentExpression	* aux = NULL		1336028	2		=			
ANR	1337637	Identifier	NULL		1336028	0					
ANR	1337638	Identifier	NULL		1336028	1					
ANR	1337639	ExpressionStatement	"nsym = Elf_ ( fix_symbols ) ( bin , ret_ctr , type , & ret )"	3545:1:107255:107306	1336028	19	True				
ANR	1337640	AssignmentExpression	"nsym = Elf_ ( fix_symbols ) ( bin , ret_ctr , type , & ret )"		1336028	0		=			
ANR	1337641	Identifier	nsym		1336028	0					
ANR	1337642	CallExpression	"Elf_ ( fix_symbols ) ( bin , ret_ctr , type , & ret )"		1336028	1					
ANR	1337643	Callee	Elf_ ( fix_symbols )		1336028	0					
ANR	1337644	CallExpression	Elf_ ( fix_symbols )		1336028	0					
ANR	1337645	Callee	Elf_		1336028	0					
ANR	1337646	Identifier	Elf_		1336028	0					
ANR	1337647	ArgumentList	fix_symbols		1336028	1					
ANR	1337648	Argument	fix_symbols		1336028	0					
ANR	1337649	Identifier	fix_symbols		1336028	0					
ANR	1337650	ArgumentList	bin		1336028	1					
ANR	1337651	Argument	bin		1336028	0					
ANR	1337652	Identifier	bin		1336028	0					
ANR	1337653	Argument	ret_ctr		1336028	1					
ANR	1337654	Identifier	ret_ctr		1336028	0					
ANR	1337655	Argument	type		1336028	2					
ANR	1337656	Identifier	type		1336028	0					
ANR	1337657	Argument	& ret		1336028	3					
ANR	1337658	UnaryOperationExpression	& ret		1336028	0					
ANR	1337659	UnaryOperator	&		1336028	0					
ANR	1337660	Identifier	ret		1336028	1					
ANR	1337661	IfStatement	if ( nsym == - 1 )		1336028	20					
ANR	1337662	Condition	nsym == - 1	3546:5:107313:107322	1336028	0	True				
ANR	1337663	EqualityExpression	nsym == - 1		1336028	0		==			
ANR	1337664	Identifier	nsym		1336028	0					
ANR	1337665	UnaryOperationExpression	- 1		1336028	1					
ANR	1337666	UnaryOperator	-		1336028	0					
ANR	1337667	PrimaryExpression	1		1336028	1					
ANR	1337668	CompoundStatement		212:17:6506:6506	1336028	1					
ANR	1337669	GotoStatement	goto beach ;	3547:2:107329:107339	1336028	0	True				
ANR	1337670	Identifier	beach		1336028	0					
ANR	1337671	ExpressionStatement	aux = ret	3549:1:107345:107354	1336028	21	True				
ANR	1337672	AssignmentExpression	aux = ret		1336028	0		=			
ANR	1337673	Identifier	aux		1336028	0					
ANR	1337674	Identifier	ret		1336028	1					
ANR	1337675	WhileStatement	while ( ! aux -> last )		1336028	22					
ANR	1337676	Condition	! aux -> last	3550:8:107364:107373	1336028	0	True				
ANR	1337677	UnaryOperationExpression	! aux -> last		1336028	0					
ANR	1337678	UnaryOperator	!		1336028	0					
ANR	1337679	PtrMemberAccess	aux -> last		1336028	1					
ANR	1337680	Identifier	aux		1336028	0					
ANR	1337681	Identifier	last		1336028	1					
ANR	1337682	CompoundStatement		216:20:6557:6557	1336028	1					
ANR	1337683	IfStatement	if ( ( int ) aux -> ordinal > max )		1336028	0					
ANR	1337684	Condition	( int ) aux -> ordinal > max	3551:6:107384:107406	1336028	0	True				
ANR	1337685	RelationalExpression	( int ) aux -> ordinal > max		1336028	0		>			
ANR	1337686	CastExpression	( int ) aux -> ordinal		1336028	0					
ANR	1337687	CastTarget	int		1336028	0					
ANR	1337688	PtrMemberAccess	aux -> ordinal		1336028	1					
ANR	1337689	Identifier	aux		1336028	0					
ANR	1337690	Identifier	ordinal		1336028	1					
ANR	1337691	Identifier	max		1336028	1					
ANR	1337692	CompoundStatement		217:31:6590:6590	1336028	1					
ANR	1337693	ExpressionStatement	max = aux -> ordinal	3552:3:107414:107432	1336028	0	True				
ANR	1337694	AssignmentExpression	max = aux -> ordinal		1336028	0		=			
ANR	1337695	Identifier	max		1336028	0					
ANR	1337696	PtrMemberAccess	aux -> ordinal		1336028	1					
ANR	1337697	Identifier	aux		1336028	0					
ANR	1337698	Identifier	ordinal		1336028	1					
ANR	1337699	ExpressionStatement	aux ++	3554:2:107440:107445	1336028	1	True				
ANR	1337700	PostIncDecOperationExpression	aux ++		1336028	0					
ANR	1337701	Identifier	aux		1336028	0					
ANR	1337702	IncDec	++		1336028	1					
ANR	1337703	ExpressionStatement	nsym = max	3556:1:107451:107461	1336028	23	True				
ANR	1337704	AssignmentExpression	nsym = max		1336028	0		=			
ANR	1337705	Identifier	nsym		1336028	0					
ANR	1337706	Identifier	max		1336028	1					
ANR	1337707	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS )		1336028	24					
ANR	1337708	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS	3557:5:107468:107499	1336028	0	True				
ANR	1337709	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		1336028	0		==			
ANR	1337710	Identifier	type		1336028	0					
ANR	1337711	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		1336028	1					
ANR	1337712	CompoundStatement		223:39:6683:6683	1336028	1					
ANR	1337713	ExpressionStatement	R_FREE ( bin -> imports_by_ord )	3558:2:107506:107534	1336028	0	True				
ANR	1337714	CallExpression	R_FREE ( bin -> imports_by_ord )		1336028	0					
ANR	1337715	Callee	R_FREE		1336028	0					
ANR	1337716	Identifier	R_FREE		1336028	0					
ANR	1337717	ArgumentList	bin -> imports_by_ord		1336028	1					
ANR	1337718	Argument	bin -> imports_by_ord		1336028	0					
ANR	1337719	PtrMemberAccess	bin -> imports_by_ord		1336028	0					
ANR	1337720	Identifier	bin		1336028	0					
ANR	1337721	Identifier	imports_by_ord		1336028	1					
ANR	1337722	ExpressionStatement	bin -> imports_by_ord_size = nsym + 1	3559:2:107538:107573	1336028	1	True				
ANR	1337723	AssignmentExpression	bin -> imports_by_ord_size = nsym + 1		1336028	0		=			
ANR	1337724	PtrMemberAccess	bin -> imports_by_ord_size		1336028	0					
ANR	1337725	Identifier	bin		1336028	0					
ANR	1337726	Identifier	imports_by_ord_size		1336028	1					
ANR	1337727	AdditiveExpression	nsym + 1		1336028	1		+			
ANR	1337728	Identifier	nsym		1336028	0					
ANR	1337729	PrimaryExpression	1		1336028	1					
ANR	1337730	ExpressionStatement	"bin -> imports_by_ord = ( RBinImport * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinImport * ) )"	3560:2:107577:107663	1336028	2	True				
ANR	1337731	AssignmentExpression	"bin -> imports_by_ord = ( RBinImport * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinImport * ) )"		1336028	0		=			
ANR	1337732	PtrMemberAccess	bin -> imports_by_ord		1336028	0					
ANR	1337733	Identifier	bin		1336028	0					
ANR	1337734	Identifier	imports_by_ord		1336028	1					
ANR	1337735	CastExpression	"( RBinImport * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinImport * ) )"		1336028	1					
ANR	1337736	CastTarget	RBinImport * *		1336028	0					
ANR	1337737	CallExpression	"calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinImport * ) )"		1336028	1					
ANR	1337738	Callee	calloc		1336028	0					
ANR	1337739	Identifier	calloc		1336028	0					
ANR	1337740	ArgumentList	"R_MAX ( 1 , nsym + 1 )"		1336028	1					
ANR	1337741	Argument	"R_MAX ( 1 , nsym + 1 )"		1336028	0					
ANR	1337742	CallExpression	"R_MAX ( 1 , nsym + 1 )"		1336028	0					
ANR	1337743	Callee	R_MAX		1336028	0					
ANR	1337744	Identifier	R_MAX		1336028	0					
ANR	1337745	ArgumentList	1		1336028	1					
ANR	1337746	Argument	1		1336028	0					
ANR	1337747	PrimaryExpression	1		1336028	0					
ANR	1337748	Argument	nsym + 1		1336028	1					
ANR	1337749	AdditiveExpression	nsym + 1		1336028	0		+			
ANR	1337750	Identifier	nsym		1336028	0					
ANR	1337751	PrimaryExpression	1		1336028	1					
ANR	1337752	Argument	sizeof ( RBinImport * )		1336028	1					
ANR	1337753	SizeofExpression	sizeof ( RBinImport * )		1336028	0					
ANR	1337754	Sizeof	sizeof		1336028	0					
ANR	1337755	SizeofOperand	RBinImport *		1336028	1					
ANR	1337756	ExpressionStatement	R_FREE ( bin -> symbols_by_ord )	3561:2:107667:107695	1336028	3	True				
ANR	1337757	CallExpression	R_FREE ( bin -> symbols_by_ord )		1336028	0					
ANR	1337758	Callee	R_FREE		1336028	0					
ANR	1337759	Identifier	R_FREE		1336028	0					
ANR	1337760	ArgumentList	bin -> symbols_by_ord		1336028	1					
ANR	1337761	Argument	bin -> symbols_by_ord		1336028	0					
ANR	1337762	PtrMemberAccess	bin -> symbols_by_ord		1336028	0					
ANR	1337763	Identifier	bin		1336028	0					
ANR	1337764	Identifier	symbols_by_ord		1336028	1					
ANR	1337765	ExpressionStatement	bin -> symbols_by_ord_size = nsym + 1	3562:2:107699:107734	1336028	4	True				
ANR	1337766	AssignmentExpression	bin -> symbols_by_ord_size = nsym + 1		1336028	0		=			
ANR	1337767	PtrMemberAccess	bin -> symbols_by_ord_size		1336028	0					
ANR	1337768	Identifier	bin		1336028	0					
ANR	1337769	Identifier	symbols_by_ord_size		1336028	1					
ANR	1337770	AdditiveExpression	nsym + 1		1336028	1		+			
ANR	1337771	Identifier	nsym		1336028	0					
ANR	1337772	PrimaryExpression	1		1336028	1					
ANR	1337773	ExpressionStatement	"bin -> symbols_by_ord = ( RBinSymbol * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinSymbol * ) )"	3563:2:107738:107824	1336028	5	True				
ANR	1337774	AssignmentExpression	"bin -> symbols_by_ord = ( RBinSymbol * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinSymbol * ) )"		1336028	0		=			
ANR	1337775	PtrMemberAccess	bin -> symbols_by_ord		1336028	0					
ANR	1337776	Identifier	bin		1336028	0					
ANR	1337777	Identifier	symbols_by_ord		1336028	1					
ANR	1337778	CastExpression	"( RBinSymbol * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinSymbol * ) )"		1336028	1					
ANR	1337779	CastTarget	RBinSymbol * *		1336028	0					
ANR	1337780	CallExpression	"calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinSymbol * ) )"		1336028	1					
ANR	1337781	Callee	calloc		1336028	0					
ANR	1337782	Identifier	calloc		1336028	0					
ANR	1337783	ArgumentList	"R_MAX ( 1 , nsym + 1 )"		1336028	1					
ANR	1337784	Argument	"R_MAX ( 1 , nsym + 1 )"		1336028	0					
ANR	1337785	CallExpression	"R_MAX ( 1 , nsym + 1 )"		1336028	0					
ANR	1337786	Callee	R_MAX		1336028	0					
ANR	1337787	Identifier	R_MAX		1336028	0					
ANR	1337788	ArgumentList	1		1336028	1					
ANR	1337789	Argument	1		1336028	0					
ANR	1337790	PrimaryExpression	1		1336028	0					
ANR	1337791	Argument	nsym + 1		1336028	1					
ANR	1337792	AdditiveExpression	nsym + 1		1336028	0		+			
ANR	1337793	Identifier	nsym		1336028	0					
ANR	1337794	PrimaryExpression	1		1336028	1					
ANR	1337795	Argument	sizeof ( RBinSymbol * )		1336028	1					
ANR	1337796	SizeofExpression	sizeof ( RBinSymbol * )		1336028	0					
ANR	1337797	Sizeof	sizeof		1336028	0					
ANR	1337798	SizeofOperand	RBinSymbol *		1336028	1					
ANR	1337799	ExpressionStatement	"import_ret = calloc ( import_ret_ctr + 1 , sizeof ( RBinElfSymbol ) )"	3564:2:107828:107892	1336028	6	True				
ANR	1337800	AssignmentExpression	"import_ret = calloc ( import_ret_ctr + 1 , sizeof ( RBinElfSymbol ) )"		1336028	0		=			
ANR	1337801	Identifier	import_ret		1336028	0					
ANR	1337802	CallExpression	"calloc ( import_ret_ctr + 1 , sizeof ( RBinElfSymbol ) )"		1336028	1					
ANR	1337803	Callee	calloc		1336028	0					
ANR	1337804	Identifier	calloc		1336028	0					
ANR	1337805	ArgumentList	import_ret_ctr + 1		1336028	1					
ANR	1337806	Argument	import_ret_ctr + 1		1336028	0					
ANR	1337807	AdditiveExpression	import_ret_ctr + 1		1336028	0		+			
ANR	1337808	Identifier	import_ret_ctr		1336028	0					
ANR	1337809	PrimaryExpression	1		1336028	1					
ANR	1337810	Argument	sizeof ( RBinElfSymbol )		1336028	1					
ANR	1337811	SizeofExpression	sizeof ( RBinElfSymbol )		1336028	0					
ANR	1337812	Sizeof	sizeof		1336028	0					
ANR	1337813	SizeofOperand	RBinElfSymbol		1336028	1					
ANR	1337814	IfStatement	if ( ! import_ret )		1336028	7					
ANR	1337815	Condition	! import_ret	3565:6:107900:107910	1336028	0	True				
ANR	1337816	UnaryOperationExpression	! import_ret		1336028	0					
ANR	1337817	UnaryOperator	!		1336028	0					
ANR	1337818	Identifier	import_ret		1336028	1					
ANR	1337819	CompoundStatement		231:19:7094:7094	1336028	1					
ANR	1337820	ExpressionStatement	"bprintf ( ""Cannot allocate %d symbols\\n"" , nsym )"	3566:3:107918:107964	1336028	0	True				
ANR	1337821	CallExpression	"bprintf ( ""Cannot allocate %d symbols\\n"" , nsym )"		1336028	0					
ANR	1337822	Callee	bprintf		1336028	0					
ANR	1337823	Identifier	bprintf		1336028	0					
ANR	1337824	ArgumentList	"""Cannot allocate %d symbols\\n"""		1336028	1					
ANR	1337825	Argument	"""Cannot allocate %d symbols\\n"""		1336028	0					
ANR	1337826	PrimaryExpression	"""Cannot allocate %d symbols\\n"""		1336028	0					
ANR	1337827	Argument	nsym		1336028	1					
ANR	1337828	Identifier	nsym		1336028	0					
ANR	1337829	GotoStatement	goto beach ;	3567:3:107969:107979	1336028	1	True				
ANR	1337830	Identifier	beach		1336028	0					
ANR	1337831	ExpressionStatement	import_ret_ctr = 0	3569:2:107987:108005	1336028	8	True				
ANR	1337832	AssignmentExpression	import_ret_ctr = 0		1336028	0		=			
ANR	1337833	Identifier	import_ret_ctr		1336028	0					
ANR	1337834	PrimaryExpression	0		1336028	1					
ANR	1337835	ExpressionStatement	i = - 1	3570:2:108009:108015	1336028	9	True				
ANR	1337836	AssignmentExpression	i = - 1		1336028	0		=			
ANR	1337837	Identifier	i		1336028	0					
ANR	1337838	UnaryOperationExpression	- 1		1336028	1					
ANR	1337839	UnaryOperator	-		1336028	0					
ANR	1337840	PrimaryExpression	1		1336028	1					
ANR	1337841	WhileStatement	while ( ! ret [ ++ i ] . last )		1336028	10					
ANR	1337842	Condition	! ret [ ++ i ] . last	3571:9:108026:108039	1336028	0	True				
ANR	1337843	UnaryOperationExpression	! ret [ ++ i ] . last		1336028	0					
ANR	1337844	UnaryOperator	!		1336028	0					
ANR	1337845	MemberAccess	ret [ ++ i ] . last		1336028	1					
ANR	1337846	ArrayIndexing	ret [ ++ i ]		1336028	0					
ANR	1337847	Identifier	ret		1336028	0					
ANR	1337848	UnaryExpression	++ i		1336028	1					
ANR	1337849	IncDec	++		1336028	0					
ANR	1337850	Identifier	i		1336028	1					
ANR	1337851	Identifier	last		1336028	1					
ANR	1337852	CompoundStatement		237:25:7223:7223	1336028	1					
ANR	1337853	IfStatement	"if ( ! ( import_sym_ptr = Elf_ ( _r_bin_elf_convert_symbol ) ( bin , & ret [ i ] , ""%s"" ) ) )"		1336028	0					
ANR	1337854	Condition	"! ( import_sym_ptr = Elf_ ( _r_bin_elf_convert_symbol ) ( bin , & ret [ i ] , ""%s"" ) )"	3572:7:108051:108122	1336028	0	True				
ANR	1337855	UnaryOperationExpression	"! ( import_sym_ptr = Elf_ ( _r_bin_elf_convert_symbol ) ( bin , & ret [ i ] , ""%s"" ) )"		1336028	0					
ANR	1337856	UnaryOperator	!		1336028	0					
ANR	1337857	AssignmentExpression	"import_sym_ptr = Elf_ ( _r_bin_elf_convert_symbol ) ( bin , & ret [ i ] , ""%s"" )"		1336028	1		=			
ANR	1337858	Identifier	import_sym_ptr		1336028	0					
ANR	1337859	CallExpression	"Elf_ ( _r_bin_elf_convert_symbol ) ( bin , & ret [ i ] , ""%s"" )"		1336028	1					
ANR	1337860	Callee	Elf_ ( _r_bin_elf_convert_symbol )		1336028	0					
ANR	1337861	CallExpression	Elf_ ( _r_bin_elf_convert_symbol )		1336028	0					
ANR	1337862	Callee	Elf_		1336028	0					
ANR	1337863	Identifier	Elf_		1336028	0					
ANR	1337864	ArgumentList	_r_bin_elf_convert_symbol		1336028	1					
ANR	1337865	Argument	_r_bin_elf_convert_symbol		1336028	0					
ANR	1337866	Identifier	_r_bin_elf_convert_symbol		1336028	0					
ANR	1337867	ArgumentList	bin		1336028	1					
ANR	1337868	Argument	bin		1336028	0					
ANR	1337869	Identifier	bin		1336028	0					
ANR	1337870	Argument	& ret [ i ]		1336028	1					
ANR	1337871	UnaryOperationExpression	& ret [ i ]		1336028	0					
ANR	1337872	UnaryOperator	&		1336028	0					
ANR	1337873	ArrayIndexing	ret [ i ]		1336028	1					
ANR	1337874	Identifier	ret		1336028	0					
ANR	1337875	Identifier	i		1336028	1					
ANR	1337876	Argument	"""%s"""		1336028	2					
ANR	1337877	PrimaryExpression	"""%s"""		1336028	0					
ANR	1337878	CompoundStatement		238:81:7306:7306	1336028	1					
ANR	1337879	ContinueStatement	continue ;	3573:4:108131:108139	1336028	0	True				
ANR	1337880	ExpressionStatement	"setsymord ( bin , import_sym_ptr -> ordinal , import_sym_ptr )"	3575:3:108149:108205	1336028	1	True				
ANR	1337881	CallExpression	"setsymord ( bin , import_sym_ptr -> ordinal , import_sym_ptr )"		1336028	0					
ANR	1337882	Callee	setsymord		1336028	0					
ANR	1337883	Identifier	setsymord		1336028	0					
ANR	1337884	ArgumentList	bin		1336028	1					
ANR	1337885	Argument	bin		1336028	0					
ANR	1337886	Identifier	bin		1336028	0					
ANR	1337887	Argument	import_sym_ptr -> ordinal		1336028	1					
ANR	1337888	PtrMemberAccess	import_sym_ptr -> ordinal		1336028	0					
ANR	1337889	Identifier	import_sym_ptr		1336028	0					
ANR	1337890	Identifier	ordinal		1336028	1					
ANR	1337891	Argument	import_sym_ptr		1336028	2					
ANR	1337892	Identifier	import_sym_ptr		1336028	0					
ANR	1337893	IfStatement	if ( ret [ i ] . is_imported )		1336028	2					
ANR	1337894	Condition	ret [ i ] . is_imported	3576:7:108214:108231	1336028	0	True				
ANR	1337895	MemberAccess	ret [ i ] . is_imported		1336028	0					
ANR	1337896	ArrayIndexing	ret [ i ]		1336028	0					
ANR	1337897	Identifier	ret		1336028	0					
ANR	1337898	Identifier	i		1336028	1					
ANR	1337899	Identifier	is_imported		1336028	1					
ANR	1337900	CompoundStatement		242:27:7415:7415	1336028	1					
ANR	1337901	ExpressionStatement	"memcpy ( & import_ret [ import_ret_ctr ] , & ret [ i ] , sizeof ( RBinElfSymbol ) )"	3577:4:108240:108309	1336028	0	True				
ANR	1337902	CallExpression	"memcpy ( & import_ret [ import_ret_ctr ] , & ret [ i ] , sizeof ( RBinElfSymbol ) )"		1336028	0					
ANR	1337903	Callee	memcpy		1336028	0					
ANR	1337904	Identifier	memcpy		1336028	0					
ANR	1337905	ArgumentList	& import_ret [ import_ret_ctr ]		1336028	1					
ANR	1337906	Argument	& import_ret [ import_ret_ctr ]		1336028	0					
ANR	1337907	UnaryOperationExpression	& import_ret [ import_ret_ctr ]		1336028	0					
ANR	1337908	UnaryOperator	&		1336028	0					
ANR	1337909	ArrayIndexing	import_ret [ import_ret_ctr ]		1336028	1					
ANR	1337910	Identifier	import_ret		1336028	0					
ANR	1337911	Identifier	import_ret_ctr		1336028	1					
ANR	1337912	Argument	& ret [ i ]		1336028	1					
ANR	1337913	UnaryOperationExpression	& ret [ i ]		1336028	0					
ANR	1337914	UnaryOperator	&		1336028	0					
ANR	1337915	ArrayIndexing	ret [ i ]		1336028	1					
ANR	1337916	Identifier	ret		1336028	0					
ANR	1337917	Identifier	i		1336028	1					
ANR	1337918	Argument	sizeof ( RBinElfSymbol )		1336028	2					
ANR	1337919	SizeofExpression	sizeof ( RBinElfSymbol )		1336028	0					
ANR	1337920	Sizeof	sizeof		1336028	0					
ANR	1337921	SizeofOperand	RBinElfSymbol		1336028	1					
ANR	1337922	ExpressionStatement	++ import_ret_ctr	3578:4:108315:108331	1336028	1	True				
ANR	1337923	UnaryExpression	++ import_ret_ctr		1336028	0					
ANR	1337924	IncDec	++		1336028	0					
ANR	1337925	Identifier	import_ret_ctr		1336028	1					
ANR	1337926	ExpressionStatement	import_ret [ import_ret_ctr ] . last = 1	3581:2:108344:108379	1336028	11	True				
ANR	1337927	AssignmentExpression	import_ret [ import_ret_ctr ] . last = 1		1336028	0		=			
ANR	1337928	MemberAccess	import_ret [ import_ret_ctr ] . last		1336028	0					
ANR	1337929	ArrayIndexing	import_ret [ import_ret_ctr ]		1336028	0					
ANR	1337930	Identifier	import_ret		1336028	0					
ANR	1337931	Identifier	import_ret_ctr		1336028	1					
ANR	1337932	Identifier	last		1336028	1					
ANR	1337933	PrimaryExpression	1		1336028	1					
ANR	1337934	ExpressionStatement	R_FREE ( ret )	3582:2:108383:108395	1336028	12	True				
ANR	1337935	CallExpression	R_FREE ( ret )		1336028	0					
ANR	1337936	Callee	R_FREE		1336028	0					
ANR	1337937	Identifier	R_FREE		1336028	0					
ANR	1337938	ArgumentList	ret		1336028	1					
ANR	1337939	Argument	ret		1336028	0					
ANR	1337940	Identifier	ret		1336028	0					
ANR	1337941	ReturnStatement	return import_ret ;	3583:2:108399:108416	1336028	13	True				
ANR	1337942	Identifier	import_ret		1336028	0					
ANR	1337943	ReturnStatement	return ret ;	3585:1:108422:108432	1336028	25	True				
ANR	1337944	Identifier	ret		1336028	0					
ANR	1337945	Label	beach :	3586:0:108434:108439	1336028	26	True				
ANR	1337946	Identifier	beach		1336028	0					
ANR	1337947	ExpressionStatement	free ( ret )	3587:1:108442:108452	1336028	27	True				
ANR	1337948	CallExpression	free ( ret )		1336028	0					
ANR	1337949	Callee	free		1336028	0					
ANR	1337950	Identifier	free		1336028	0					
ANR	1337951	ArgumentList	ret		1336028	1					
ANR	1337952	Argument	ret		1336028	0					
ANR	1337953	Identifier	ret		1336028	0					
ANR	1337954	ExpressionStatement	free ( sym )	3588:1:108455:108465	1336028	28	True				
ANR	1337955	CallExpression	free ( sym )		1336028	0					
ANR	1337956	Callee	free		1336028	0					
ANR	1337957	Identifier	free		1336028	0					
ANR	1337958	ArgumentList	sym		1336028	1					
ANR	1337959	Argument	sym		1336028	0					
ANR	1337960	Identifier	sym		1336028	0					
ANR	1337961	ExpressionStatement	free ( strtab )	3589:1:108468:108481	1336028	29	True				
ANR	1337962	CallExpression	free ( strtab )		1336028	0					
ANR	1337963	Callee	free		1336028	0					
ANR	1337964	Identifier	free		1336028	0					
ANR	1337965	ArgumentList	strtab		1336028	1					
ANR	1337966	Argument	strtab		1336028	0					
ANR	1337967	Identifier	strtab		1336028	0					
ANR	1337968	ReturnStatement	return NULL ;	3590:1:108484:108495	1336028	30	True				
ANR	1337969	Identifier	NULL		1336028	0					
ANR	1337970	ReturnType	Elf_		1336028	1					
ANR	1337971	Identifier	( _r_bin_elf_get_symbols_imports )		1336028	2					
ANR	1337972	Identifier	_r_bin_elf_get_symbols_imports		1336028	3					
ANR	1337973	ParameterList	"ELFOBJ * bin , int type"		1336028	4					
ANR	1337974	Parameter	ELFOBJ * bin	3335:59:100795:100805	1336028	0	True				
ANR	1337975	ParameterType	ELFOBJ *		1336028	0					
ANR	1337976	Identifier	bin		1336028	1					
ANR	1337977	Parameter	int type	3335:72:100808:100815	1336028	1	True				
ANR	1337978	ParameterType	int		1336028	0					
ANR	1337979	Identifier	type		1336028	1					
ANR	1337980	CFGEntryNode	ENTRY		1336028		True				
ANR	1337981	CFGExitNode	EXIT		1336028		True				
ANR	1337982	Symbol	SHT_SYMTAB		1336028						
ANR	1337983	Symbol	ret [ ++ i ] . last		1336028						
ANR	1337984	Symbol	bin -> b		1336028						
ANR	1337985	Symbol	bin		1336028						
ANR	1337986	Symbol	newshsize		1336028						
ANR	1337987	Symbol	R_BIN_ELF_IMPORT_SYMBOLS		1336028						
ANR	1337988	Symbol	type		1336028						
ANR	1337989	Symbol	READ64		1336028						
ANR	1337990	Symbol	prev_ret_size		1336028						
ANR	1337991	Symbol	strtab		1336028						
ANR	1337992	Symbol	len		1336028						
ANR	1337993	Symbol	bin -> ehdr		1336028						
ANR	1337994	Symbol	sym [ j ] . st_name		1336028						
ANR	1337995	Symbol	bin -> shdr [ sym [ k ] . st_shndx ] . sh_offset		1336028						
ANR	1337996	Symbol	sym [ k ] . st_name		1336028						
ANR	1337997	Symbol	import_sym_ptr		1336028						
ANR	1337998	Symbol	bin -> shdr [ i ] . sh_size		1336028						
ANR	1337999	Symbol	* import_ret_ctr		1336028						
ANR	1338000	Symbol	R_BIN_ELF_DYNSYM_SYMBOLS		1336028						
ANR	1338001	Symbol	ret [ j ] . offset		1336028						
ANR	1338002	Symbol	ret [ j ] . type		1336028						
ANR	1338003	Symbol	bin -> shdr [ i ] . sh_offset		1336028						
ANR	1338004	Symbol	ret [ ret_ctr ] . size		1336028						
ANR	1338005	Symbol	size		1336028						
ANR	1338006	Symbol	ret [ ret_ctr ] . is_sht_null		1336028						
ANR	1338007	Symbol	SHT_DYNSYM		1336028						
ANR	1338008	Symbol	maxsize		1336028						
ANR	1338009	Symbol	is_sht_null		1336028						
ANR	1338010	Symbol	shdr_size		1336028						
ANR	1338011	Symbol	bin -> shdr [ i ] . sh_link		1336028						
ANR	1338012	Symbol	ret [ ret_ctr ] . offset		1336028						
ANR	1338013	Symbol	* strtab_section		1336028						
ANR	1338014	Symbol	import_sym_ptr -> ordinal		1336028						
ANR	1338015	Symbol	bin -> ehdr . e_shnum		1336028						
ANR	1338016	Symbol	* ret [ ret_ctr ] . name		1336028						
ANR	1338017	Symbol	sym [ j ] . st_other		1336028						
ANR	1338018	Symbol	* ret_ctr		1336028						
ANR	1338019	Symbol	fix_symbols		1336028						
ANR	1338020	Symbol	is_bin_etrel		1336028						
ANR	1338021	Symbol	shname		1336028						
ANR	1338022	Symbol	* bin		1336028						
ANR	1338023	Symbol	bin -> symbols_by_ord		1336028						
ANR	1338024	Symbol	found		1336028						
ANR	1338025	Symbol	ret [ ++ j ] . last		1336028						
ANR	1338026	Symbol	type2str		1336028						
ANR	1338027	Symbol	* * bin		1336028						
ANR	1338028	Symbol	sh_begin		1336028						
ANR	1338029	Symbol	SHT_NULL		1336028						
ANR	1338030	Symbol	UT32_MUL		1336028						
ANR	1338031	Symbol	bin -> imports_by_ord		1336028						
ANR	1338032	Symbol	st_name		1336028						
ANR	1338033	Symbol	max		1336028						
ANR	1338034	Symbol	i		1336028						
ANR	1338035	Symbol	j		1336028						
ANR	1338036	Symbol	R_MIN		1336028						
ANR	1338037	Symbol	k		1336028						
ANR	1338038	Symbol	& size		1336028						
ANR	1338039	Symbol	r		1336028						
ANR	1338040	Symbol	s		1336028						
ANR	1338041	Symbol	* ELF_STRING_LENGTH		1336028						
ANR	1338042	Symbol	__strnlen		1336028						
ANR	1338043	Symbol	ret [ ret_ctr ] . is_imported		1336028						
ANR	1338044	Symbol	r_bin_elf_v2p_new		1336028						
ANR	1338045	Symbol	ret [ j ] . name		1336028						
ANR	1338046	Symbol	R_MAX		1336028						
ANR	1338047	Symbol	sym [ j ] . st_info		1336028						
ANR	1338048	Symbol	is_imported		1336028						
ANR	1338049	Symbol	get_import_addr		1336028						
ANR	1338050	Symbol	strtab_section -> sh_offset		1336028						
ANR	1338051	Symbol	r_buf_size		1336028						
ANR	1338052	Symbol	& ret		1336028						
ANR	1338053	Symbol	ret [ i ] . is_imported		1336028						
ANR	1338054	Symbol	bin -> size		1336028						
ANR	1338055	Symbol	is_vaddr		1336028						
ANR	1338056	Symbol	ret [ ret_ctr ] . name		1336028						
ANR	1338057	Symbol	ST32_MAX		1336028						
ANR	1338058	Symbol	* bin -> shdr		1336028						
ANR	1338059	Symbol	sym [ k ] . st_value		1336028						
ANR	1338060	Symbol	realloc		1336028						
ANR	1338061	Symbol	import_ret [ import_ret_ctr ] . last		1336028						
ANR	1338062	Symbol	toffset		1336028						
ANR	1338063	Symbol	ret [ ret_ctr ] . last		1336028						
ANR	1338064	Symbol	bin -> shdr [ sym [ k ] . st_shndx ] . sh_name		1336028						
ANR	1338065	Symbol	* aux		1336028						
ANR	1338066	Symbol	sym [ j ] . st_shndx		1336028						
ANR	1338067	Symbol	* * ret_ctr		1336028						
ANR	1338068	Symbol	* sym [ k ] . st_shndx		1336028						
ANR	1338069	Symbol	bin -> imports_by_ord_size		1336028						
ANR	1338070	Symbol	* * sym		1336028						
ANR	1338071	Symbol	_r_bin_elf_convert_symbol		1336028						
ANR	1338072	Symbol	ret		1336028						
ANR	1338073	Symbol	* * k		1336028						
ANR	1338074	Symbol	strcmp		1336028						
ANR	1338075	Symbol	ret_size		1336028						
ANR	1338076	Symbol	NULL		1336028						
ANR	1338077	Symbol	get_phdr_symbols		1336028						
ANR	1338078	Symbol	Sym		1336028						
ANR	1338079	Symbol	newsize		1336028						
ANR	1338080	Symbol	strtab_section		1336028						
ANR	1338081	Symbol	sym [ j ] . st_size		1336028						
ANR	1338082	Symbol	aux -> ordinal		1336028						
ANR	1338083	Symbol	nsym		1336028						
ANR	1338084	Symbol	READ32		1336028						
ANR	1338085	Symbol	ELF_STRING_LENGTH		1336028						
ANR	1338086	Symbol	import_ret_ctr		1336028						
ANR	1338087	Symbol	* sym		1336028						
ANR	1338088	Symbol	import_ret		1336028						
ANR	1338089	Symbol	true		1336028						
ANR	1338090	Symbol	READ8		1336028						
ANR	1338091	Symbol	aux		1336028						
ANR	1338092	Symbol	sym		1336028						
ANR	1338093	Symbol	ret [ ret_ctr ] . ordinal		1336028						
ANR	1338094	Symbol	sym [ j ] . st_value		1336028						
ANR	1338095	Symbol	bin -> shstrtab		1336028						
ANR	1338096	Symbol	calloc		1336028						
ANR	1338097	Symbol	* ret		1336028						
ANR	1338098	Symbol	* import_sym_ptr		1336028						
ANR	1338099	Symbol	R_BIN_ELF_SYMTAB_SYMBOLS		1336028						
ANR	1338100	Symbol	* import_ret		1336028						
ANR	1338101	Symbol	sh_end		1336028						
ANR	1338102	Symbol	ret [ ret_ctr ] . is_vaddr		1336028						
ANR	1338103	Symbol	sym [ k ] . st_size		1336028						
ANR	1338104	Symbol	sym [ k ] . st_shndx		1336028						
ANR	1338105	Symbol	UT64_MAX		1336028						
ANR	1338106	Symbol	STN_UNDEF		1336028						
ANR	1338107	Symbol	bin -> symbols_by_ord_size		1336028						
ANR	1338108	Symbol	Elf_		1336028						
ANR	1338109	Symbol	rest		1336028						
ANR	1338110	Symbol	& shdr_size		1336028						
ANR	1338111	Symbol	READ16		1336028						
ANR	1338112	Symbol	Shdr		1336028						
ANR	1338113	Symbol	aux -> last		1336028						
ANR	1338114	Symbol	false		1336028						
ANR	1338115	Symbol	ret_ctr		1336028						
ANR	1338116	Symbol	tsize		1336028						
ANR	1338117	Symbol	bin -> shdr		1336028						
ANR	1338118	Symbol	* i		1336028						
ANR	1338119	Symbol	* j		1336028						
ANR	1338120	Symbol	* k		1336028						
ANR	1338121	Symbol	* * ret		1336028						
ANR	1338122	Symbol	strtab_section -> sh_size		1336028						
ANR	1338123	Symbol	r_buf_read_at		1336028						
ANR	1338124	Symbol	bin -> shdr [ i ] . sh_type		1336028						
ANR	1338125	Symbol	is_section_local_sym		1336028						
ANR	1338126	Function	r_bin_elf_get_symbols	3593:15:108515:108695							
ANR	1338127	FunctionDef	r_bin_elf_get_symbols (ELFOBJ * bin)		1338126	0					
ANR	1338128	CompoundStatement		3593:56:108556:108695	1338126	0					
ANR	1338129	IfStatement	if ( ! bin -> g_symbols )		1338126	0					
ANR	1338130	Condition	! bin -> g_symbols	3594:5:108563:108577	1338126	0	True				
ANR	1338131	UnaryOperationExpression	! bin -> g_symbols		1338126	0					
ANR	1338132	UnaryOperator	!		1338126	0					
ANR	1338133	PtrMemberAccess	bin -> g_symbols		1338126	1					
ANR	1338134	Identifier	bin		1338126	0					
ANR	1338135	Identifier	g_symbols		1338126	1					
ANR	1338136	CompoundStatement		2:22:23:23	1338126	1					
ANR	1338137	ExpressionStatement	"bin -> g_symbols = Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_ALL_SYMBOLS )"	3595:2:108584:108666	1338126	0	True				
ANR	1338138	AssignmentExpression	"bin -> g_symbols = Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_ALL_SYMBOLS )"		1338126	0		=			
ANR	1338139	PtrMemberAccess	bin -> g_symbols		1338126	0					
ANR	1338140	Identifier	bin		1338126	0					
ANR	1338141	Identifier	g_symbols		1338126	1					
ANR	1338142	CallExpression	"Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_ALL_SYMBOLS )"		1338126	1					
ANR	1338143	Callee	Elf_ ( _r_bin_elf_get_symbols_imports )		1338126	0					
ANR	1338144	CallExpression	Elf_ ( _r_bin_elf_get_symbols_imports )		1338126	0					
ANR	1338145	Callee	Elf_		1338126	0					
ANR	1338146	Identifier	Elf_		1338126	0					
ANR	1338147	ArgumentList	_r_bin_elf_get_symbols_imports		1338126	1					
ANR	1338148	Argument	_r_bin_elf_get_symbols_imports		1338126	0					
ANR	1338149	Identifier	_r_bin_elf_get_symbols_imports		1338126	0					
ANR	1338150	ArgumentList	bin		1338126	1					
ANR	1338151	Argument	bin		1338126	0					
ANR	1338152	Identifier	bin		1338126	0					
ANR	1338153	Argument	R_BIN_ELF_ALL_SYMBOLS		1338126	1					
ANR	1338154	Identifier	R_BIN_ELF_ALL_SYMBOLS		1338126	0					
ANR	1338155	ReturnStatement	return bin -> g_symbols ;	3597:1:108672:108693	1338126	1	True				
ANR	1338156	PtrMemberAccess	bin -> g_symbols		1338126	0					
ANR	1338157	Identifier	bin		1338126	0					
ANR	1338158	Identifier	g_symbols		1338126	1					
ANR	1338159	ReturnType	Elf_		1338126	1					
ANR	1338160	Identifier	( r_bin_elf_get_symbols )		1338126	2					
ANR	1338161	Identifier	r_bin_elf_get_symbols		1338126	3					
ANR	1338162	ParameterList	ELFOBJ * bin		1338126	4					
ANR	1338163	Parameter	ELFOBJ * bin	3593:43:108543:108553	1338126	0	True				
ANR	1338164	ParameterType	ELFOBJ *		1338126	0					
ANR	1338165	Identifier	bin		1338126	1					
ANR	1338166	CFGEntryNode	ENTRY		1338126		True				
ANR	1338167	CFGExitNode	EXIT		1338126		True				
ANR	1338168	Symbol	Elf_		1338126						
ANR	1338169	Symbol	bin -> g_symbols		1338126						
ANR	1338170	Symbol	bin		1338126						
ANR	1338171	Symbol	_r_bin_elf_get_symbols_imports		1338126						
ANR	1338172	Symbol	R_BIN_ELF_ALL_SYMBOLS		1338126						
ANR	1338173	Symbol	* bin		1338126						
ANR	1338174	Function	r_bin_elf_get_imports	3600:15:108713:108896							
ANR	1338175	FunctionDef	r_bin_elf_get_imports (ELFOBJ * bin)		1338174	0					
ANR	1338176	CompoundStatement		3600:56:108754:108896	1338174	0					
ANR	1338177	IfStatement	if ( ! bin -> g_imports )		1338174	0					
ANR	1338178	Condition	! bin -> g_imports	3601:5:108761:108775	1338174	0	True				
ANR	1338179	UnaryOperationExpression	! bin -> g_imports		1338174	0					
ANR	1338180	UnaryOperator	!		1338174	0					
ANR	1338181	PtrMemberAccess	bin -> g_imports		1338174	1					
ANR	1338182	Identifier	bin		1338174	0					
ANR	1338183	Identifier	g_imports		1338174	1					
ANR	1338184	CompoundStatement		2:22:23:23	1338174	1					
ANR	1338185	ExpressionStatement	"bin -> g_imports = Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"	3602:2:108782:108867	1338174	0	True				
ANR	1338186	AssignmentExpression	"bin -> g_imports = Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"		1338174	0		=			
ANR	1338187	PtrMemberAccess	bin -> g_imports		1338174	0					
ANR	1338188	Identifier	bin		1338174	0					
ANR	1338189	Identifier	g_imports		1338174	1					
ANR	1338190	CallExpression	"Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"		1338174	1					
ANR	1338191	Callee	Elf_ ( _r_bin_elf_get_symbols_imports )		1338174	0					
ANR	1338192	CallExpression	Elf_ ( _r_bin_elf_get_symbols_imports )		1338174	0					
ANR	1338193	Callee	Elf_		1338174	0					
ANR	1338194	Identifier	Elf_		1338174	0					
ANR	1338195	ArgumentList	_r_bin_elf_get_symbols_imports		1338174	1					
ANR	1338196	Argument	_r_bin_elf_get_symbols_imports		1338174	0					
ANR	1338197	Identifier	_r_bin_elf_get_symbols_imports		1338174	0					
ANR	1338198	ArgumentList	bin		1338174	1					
ANR	1338199	Argument	bin		1338174	0					
ANR	1338200	Identifier	bin		1338174	0					
ANR	1338201	Argument	R_BIN_ELF_IMPORT_SYMBOLS		1338174	1					
ANR	1338202	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		1338174	0					
ANR	1338203	ReturnStatement	return bin -> g_imports ;	3604:1:108873:108894	1338174	1	True				
ANR	1338204	PtrMemberAccess	bin -> g_imports		1338174	0					
ANR	1338205	Identifier	bin		1338174	0					
ANR	1338206	Identifier	g_imports		1338174	1					
ANR	1338207	ReturnType	Elf_		1338174	1					
ANR	1338208	Identifier	( r_bin_elf_get_imports )		1338174	2					
ANR	1338209	Identifier	r_bin_elf_get_imports		1338174	3					
ANR	1338210	ParameterList	ELFOBJ * bin		1338174	4					
ANR	1338211	Parameter	ELFOBJ * bin	3600:43:108741:108751	1338174	0	True				
ANR	1338212	ParameterType	ELFOBJ *		1338174	0					
ANR	1338213	Identifier	bin		1338174	1					
ANR	1338214	CFGEntryNode	ENTRY		1338174		True				
ANR	1338215	CFGExitNode	EXIT		1338174		True				
ANR	1338216	Symbol	Elf_		1338174						
ANR	1338217	Symbol	bin -> g_imports		1338174						
ANR	1338218	Symbol	bin		1338174						
ANR	1338219	Symbol	_r_bin_elf_get_symbols_imports		1338174						
ANR	1338220	Symbol	R_BIN_ELF_IMPORT_SYMBOLS		1338174						
ANR	1338221	Symbol	* bin		1338174						
ANR	1338222	Function	r_bin_elf_get_fields	3607:14:108913:109621							
ANR	1338223	FunctionDef	r_bin_elf_get_fields (ELFOBJ * bin)		1338222	0					
ANR	1338224	CompoundStatement		3607:54:108953:109621	1338222	0					
ANR	1338225	IdentifierDeclStatement	RBinElfField * ret = NULL ;	3608:1:108956:108980	1338222	0	True				
ANR	1338226	IdentifierDecl	* ret = NULL		1338222	0					
ANR	1338227	IdentifierDeclType	RBinElfField *		1338222	0					
ANR	1338228	Identifier	ret		1338222	1					
ANR	1338229	AssignmentExpression	* ret = NULL		1338222	2		=			
ANR	1338230	Identifier	NULL		1338222	0					
ANR	1338231	Identifier	NULL		1338222	1					
ANR	1338232	IdentifierDeclStatement	"int i = 0 , j ;"	3609:1:108983:108995	1338222	1	True				
ANR	1338233	IdentifierDecl	i = 0		1338222	0					
ANR	1338234	IdentifierDeclType	int		1338222	0					
ANR	1338235	Identifier	i		1338222	1					
ANR	1338236	AssignmentExpression	i = 0		1338222	2		=			
ANR	1338237	Identifier	i		1338222	0					
ANR	1338238	PrimaryExpression	0		1338222	1					
ANR	1338239	IdentifierDecl	j		1338222	1					
ANR	1338240	IdentifierDeclType	int		1338222	0					
ANR	1338241	Identifier	j		1338222	1					
ANR	1338242	IfStatement	"if ( ! bin || ! ( ret = calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) ) ) )"		1338222	2					
ANR	1338243	Condition	"! bin || ! ( ret = calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) ) )"	3610:5:109002:109077	1338222	0	True				
ANR	1338244	OrExpression	"! bin || ! ( ret = calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) ) )"		1338222	0		||			
ANR	1338245	UnaryOperationExpression	! bin		1338222	0					
ANR	1338246	UnaryOperator	!		1338222	0					
ANR	1338247	Identifier	bin		1338222	1					
ANR	1338248	UnaryOperationExpression	"! ( ret = calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) ) )"		1338222	1					
ANR	1338249	UnaryOperator	!		1338222	0					
ANR	1338250	AssignmentExpression	"ret = calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) )"		1338222	1		=			
ANR	1338251	Identifier	ret		1338222	0					
ANR	1338252	CallExpression	"calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) )"		1338222	1					
ANR	1338253	Callee	calloc		1338222	0					
ANR	1338254	Identifier	calloc		1338222	0					
ANR	1338255	ArgumentList	bin -> ehdr . e_phnum + 3 + 1		1338222	1					
ANR	1338256	Argument	bin -> ehdr . e_phnum + 3 + 1		1338222	0					
ANR	1338257	AdditiveExpression	bin -> ehdr . e_phnum + 3 + 1		1338222	0		+			
ANR	1338258	MemberAccess	bin -> ehdr . e_phnum		1338222	0					
ANR	1338259	PtrMemberAccess	bin -> ehdr		1338222	0					
ANR	1338260	Identifier	bin		1338222	0					
ANR	1338261	Identifier	ehdr		1338222	1					
ANR	1338262	Identifier	e_phnum		1338222	1					
ANR	1338263	AdditiveExpression	3 + 1		1338222	1		+			
ANR	1338264	PrimaryExpression	3		1338222	0					
ANR	1338265	PrimaryExpression	1		1338222	1					
ANR	1338266	Argument	sizeof ( RBinElfField )		1338222	1					
ANR	1338267	SizeofExpression	sizeof ( RBinElfField )		1338222	0					
ANR	1338268	Sizeof	sizeof		1338222	0					
ANR	1338269	SizeofOperand	RBinElfField		1338222	1					
ANR	1338270	CompoundStatement		4:83:126:126	1338222	1					
ANR	1338271	ReturnStatement	return NULL ;	3611:2:109084:109095	1338222	0	True				
ANR	1338272	Identifier	NULL		1338222	0					
ANR	1338273	ExpressionStatement	"strncpy ( ret [ i ] . name , ""ehdr"" , ELF_STRING_LENGTH )"	3613:1:109101:109149	1338222	3	True				
ANR	1338274	CallExpression	"strncpy ( ret [ i ] . name , ""ehdr"" , ELF_STRING_LENGTH )"		1338222	0					
ANR	1338275	Callee	strncpy		1338222	0					
ANR	1338276	Identifier	strncpy		1338222	0					
ANR	1338277	ArgumentList	ret [ i ] . name		1338222	1					
ANR	1338278	Argument	ret [ i ] . name		1338222	0					
ANR	1338279	MemberAccess	ret [ i ] . name		1338222	0					
ANR	1338280	ArrayIndexing	ret [ i ]		1338222	0					
ANR	1338281	Identifier	ret		1338222	0					
ANR	1338282	Identifier	i		1338222	1					
ANR	1338283	Identifier	name		1338222	1					
ANR	1338284	Argument	"""ehdr"""		1338222	1					
ANR	1338285	PrimaryExpression	"""ehdr"""		1338222	0					
ANR	1338286	Argument	ELF_STRING_LENGTH		1338222	2					
ANR	1338287	Identifier	ELF_STRING_LENGTH		1338222	0					
ANR	1338288	ExpressionStatement	ret [ i ] . offset = 0	3614:1:109152:109169	1338222	4	True				
ANR	1338289	AssignmentExpression	ret [ i ] . offset = 0		1338222	0		=			
ANR	1338290	MemberAccess	ret [ i ] . offset		1338222	0					
ANR	1338291	ArrayIndexing	ret [ i ]		1338222	0					
ANR	1338292	Identifier	ret		1338222	0					
ANR	1338293	Identifier	i		1338222	1					
ANR	1338294	Identifier	offset		1338222	1					
ANR	1338295	PrimaryExpression	0		1338222	1					
ANR	1338296	ExpressionStatement	ret [ i ++ ] . last = 0	3615:1:109172:109189	1338222	5	True				
ANR	1338297	AssignmentExpression	ret [ i ++ ] . last = 0		1338222	0		=			
ANR	1338298	MemberAccess	ret [ i ++ ] . last		1338222	0					
ANR	1338299	ArrayIndexing	ret [ i ++ ]		1338222	0					
ANR	1338300	Identifier	ret		1338222	0					
ANR	1338301	PostIncDecOperationExpression	i ++		1338222	1					
ANR	1338302	Identifier	i		1338222	0					
ANR	1338303	IncDec	++		1338222	1					
ANR	1338304	Identifier	last		1338222	1					
ANR	1338305	PrimaryExpression	0		1338222	1					
ANR	1338306	ExpressionStatement	"strncpy ( ret [ i ] . name , ""shoff"" , ELF_STRING_LENGTH )"	3616:1:109192:109241	1338222	6	True				
ANR	1338307	CallExpression	"strncpy ( ret [ i ] . name , ""shoff"" , ELF_STRING_LENGTH )"		1338222	0					
ANR	1338308	Callee	strncpy		1338222	0					
ANR	1338309	Identifier	strncpy		1338222	0					
ANR	1338310	ArgumentList	ret [ i ] . name		1338222	1					
ANR	1338311	Argument	ret [ i ] . name		1338222	0					
ANR	1338312	MemberAccess	ret [ i ] . name		1338222	0					
ANR	1338313	ArrayIndexing	ret [ i ]		1338222	0					
ANR	1338314	Identifier	ret		1338222	0					
ANR	1338315	Identifier	i		1338222	1					
ANR	1338316	Identifier	name		1338222	1					
ANR	1338317	Argument	"""shoff"""		1338222	1					
ANR	1338318	PrimaryExpression	"""shoff"""		1338222	0					
ANR	1338319	Argument	ELF_STRING_LENGTH		1338222	2					
ANR	1338320	Identifier	ELF_STRING_LENGTH		1338222	0					
ANR	1338321	ExpressionStatement	ret [ i ] . offset = bin -> ehdr . e_shoff	3617:1:109244:109277	1338222	7	True				
ANR	1338322	AssignmentExpression	ret [ i ] . offset = bin -> ehdr . e_shoff		1338222	0		=			
ANR	1338323	MemberAccess	ret [ i ] . offset		1338222	0					
ANR	1338324	ArrayIndexing	ret [ i ]		1338222	0					
ANR	1338325	Identifier	ret		1338222	0					
ANR	1338326	Identifier	i		1338222	1					
ANR	1338327	Identifier	offset		1338222	1					
ANR	1338328	MemberAccess	bin -> ehdr . e_shoff		1338222	1					
ANR	1338329	PtrMemberAccess	bin -> ehdr		1338222	0					
ANR	1338330	Identifier	bin		1338222	0					
ANR	1338331	Identifier	ehdr		1338222	1					
ANR	1338332	Identifier	e_shoff		1338222	1					
ANR	1338333	ExpressionStatement	ret [ i ++ ] . last = 0	3618:1:109280:109297	1338222	8	True				
ANR	1338334	AssignmentExpression	ret [ i ++ ] . last = 0		1338222	0		=			
ANR	1338335	MemberAccess	ret [ i ++ ] . last		1338222	0					
ANR	1338336	ArrayIndexing	ret [ i ++ ]		1338222	0					
ANR	1338337	Identifier	ret		1338222	0					
ANR	1338338	PostIncDecOperationExpression	i ++		1338222	1					
ANR	1338339	Identifier	i		1338222	0					
ANR	1338340	IncDec	++		1338222	1					
ANR	1338341	Identifier	last		1338222	1					
ANR	1338342	PrimaryExpression	0		1338222	1					
ANR	1338343	ExpressionStatement	"strncpy ( ret [ i ] . name , ""phoff"" , ELF_STRING_LENGTH )"	3619:1:109300:109349	1338222	9	True				
ANR	1338344	CallExpression	"strncpy ( ret [ i ] . name , ""phoff"" , ELF_STRING_LENGTH )"		1338222	0					
ANR	1338345	Callee	strncpy		1338222	0					
ANR	1338346	Identifier	strncpy		1338222	0					
ANR	1338347	ArgumentList	ret [ i ] . name		1338222	1					
ANR	1338348	Argument	ret [ i ] . name		1338222	0					
ANR	1338349	MemberAccess	ret [ i ] . name		1338222	0					
ANR	1338350	ArrayIndexing	ret [ i ]		1338222	0					
ANR	1338351	Identifier	ret		1338222	0					
ANR	1338352	Identifier	i		1338222	1					
ANR	1338353	Identifier	name		1338222	1					
ANR	1338354	Argument	"""phoff"""		1338222	1					
ANR	1338355	PrimaryExpression	"""phoff"""		1338222	0					
ANR	1338356	Argument	ELF_STRING_LENGTH		1338222	2					
ANR	1338357	Identifier	ELF_STRING_LENGTH		1338222	0					
ANR	1338358	ExpressionStatement	ret [ i ] . offset = bin -> ehdr . e_phoff	3620:1:109352:109385	1338222	10	True				
ANR	1338359	AssignmentExpression	ret [ i ] . offset = bin -> ehdr . e_phoff		1338222	0		=			
ANR	1338360	MemberAccess	ret [ i ] . offset		1338222	0					
ANR	1338361	ArrayIndexing	ret [ i ]		1338222	0					
ANR	1338362	Identifier	ret		1338222	0					
ANR	1338363	Identifier	i		1338222	1					
ANR	1338364	Identifier	offset		1338222	1					
ANR	1338365	MemberAccess	bin -> ehdr . e_phoff		1338222	1					
ANR	1338366	PtrMemberAccess	bin -> ehdr		1338222	0					
ANR	1338367	Identifier	bin		1338222	0					
ANR	1338368	Identifier	ehdr		1338222	1					
ANR	1338369	Identifier	e_phoff		1338222	1					
ANR	1338370	ExpressionStatement	ret [ i ++ ] . last = 0	3621:1:109388:109405	1338222	11	True				
ANR	1338371	AssignmentExpression	ret [ i ++ ] . last = 0		1338222	0		=			
ANR	1338372	MemberAccess	ret [ i ++ ] . last		1338222	0					
ANR	1338373	ArrayIndexing	ret [ i ++ ]		1338222	0					
ANR	1338374	Identifier	ret		1338222	0					
ANR	1338375	PostIncDecOperationExpression	i ++		1338222	1					
ANR	1338376	Identifier	i		1338222	0					
ANR	1338377	IncDec	++		1338222	1					
ANR	1338378	Identifier	last		1338222	1					
ANR	1338379	PrimaryExpression	0		1338222	1					
ANR	1338380	ForStatement	"for ( j = 0 ; bin -> phdr && j < bin -> ehdr . e_phnum ; i ++ , j ++ )"		1338222	12					
ANR	1338381	ForInit	j = 0 ;	3622:6:109413:109418	1338222	0	True				
ANR	1338382	AssignmentExpression	j = 0		1338222	0		=			
ANR	1338383	Identifier	j		1338222	0					
ANR	1338384	PrimaryExpression	0		1338222	1					
ANR	1338385	Condition	bin -> phdr && j < bin -> ehdr . e_phnum	3622:13:109420:109453	1338222	1	True				
ANR	1338386	AndExpression	bin -> phdr && j < bin -> ehdr . e_phnum		1338222	0		&&			
ANR	1338387	PtrMemberAccess	bin -> phdr		1338222	0					
ANR	1338388	Identifier	bin		1338222	0					
ANR	1338389	Identifier	phdr		1338222	1					
ANR	1338390	RelationalExpression	j < bin -> ehdr . e_phnum		1338222	1		<			
ANR	1338391	Identifier	j		1338222	0					
ANR	1338392	MemberAccess	bin -> ehdr . e_phnum		1338222	1					
ANR	1338393	PtrMemberAccess	bin -> ehdr		1338222	0					
ANR	1338394	Identifier	bin		1338222	0					
ANR	1338395	Identifier	ehdr		1338222	1					
ANR	1338396	Identifier	e_phnum		1338222	1					
ANR	1338397	Expression	"i ++ , j ++"	3622:49:109456:109463	1338222	2	True				
ANR	1338398	PostIncDecOperationExpression	i ++		1338222	0					
ANR	1338399	Identifier	i		1338222	0					
ANR	1338400	IncDec	++		1338222	1					
ANR	1338401	PostIncDecOperationExpression	j ++		1338222	1					
ANR	1338402	Identifier	j		1338222	0					
ANR	1338403	IncDec	++		1338222	1					
ANR	1338404	CompoundStatement		16:59:512:512	1338222	3					
ANR	1338405	ExpressionStatement	"snprintf ( ret [ i ] . name , ELF_STRING_LENGTH , ""phdr_%i"" , j )"	3623:2:109470:109525	1338222	0	True				
ANR	1338406	CallExpression	"snprintf ( ret [ i ] . name , ELF_STRING_LENGTH , ""phdr_%i"" , j )"		1338222	0					
ANR	1338407	Callee	snprintf		1338222	0					
ANR	1338408	Identifier	snprintf		1338222	0					
ANR	1338409	ArgumentList	ret [ i ] . name		1338222	1					
ANR	1338410	Argument	ret [ i ] . name		1338222	0					
ANR	1338411	MemberAccess	ret [ i ] . name		1338222	0					
ANR	1338412	ArrayIndexing	ret [ i ]		1338222	0					
ANR	1338413	Identifier	ret		1338222	0					
ANR	1338414	Identifier	i		1338222	1					
ANR	1338415	Identifier	name		1338222	1					
ANR	1338416	Argument	ELF_STRING_LENGTH		1338222	1					
ANR	1338417	Identifier	ELF_STRING_LENGTH		1338222	0					
ANR	1338418	Argument	"""phdr_%i"""		1338222	2					
ANR	1338419	PrimaryExpression	"""phdr_%i"""		1338222	0					
ANR	1338420	Argument	j		1338222	3					
ANR	1338421	Identifier	j		1338222	0					
ANR	1338422	ExpressionStatement	ret [ i ] . offset = bin -> phdr [ j ] . p_offset	3624:2:109529:109566	1338222	1	True				
ANR	1338423	AssignmentExpression	ret [ i ] . offset = bin -> phdr [ j ] . p_offset		1338222	0		=			
ANR	1338424	MemberAccess	ret [ i ] . offset		1338222	0					
ANR	1338425	ArrayIndexing	ret [ i ]		1338222	0					
ANR	1338426	Identifier	ret		1338222	0					
ANR	1338427	Identifier	i		1338222	1					
ANR	1338428	Identifier	offset		1338222	1					
ANR	1338429	MemberAccess	bin -> phdr [ j ] . p_offset		1338222	1					
ANR	1338430	ArrayIndexing	bin -> phdr [ j ]		1338222	0					
ANR	1338431	PtrMemberAccess	bin -> phdr		1338222	0					
ANR	1338432	Identifier	bin		1338222	0					
ANR	1338433	Identifier	phdr		1338222	1					
ANR	1338434	Identifier	j		1338222	1					
ANR	1338435	Identifier	p_offset		1338222	1					
ANR	1338436	ExpressionStatement	ret [ i ] . last = 0	3625:2:109570:109585	1338222	2	True				
ANR	1338437	AssignmentExpression	ret [ i ] . last = 0		1338222	0		=			
ANR	1338438	MemberAccess	ret [ i ] . last		1338222	0					
ANR	1338439	ArrayIndexing	ret [ i ]		1338222	0					
ANR	1338440	Identifier	ret		1338222	0					
ANR	1338441	Identifier	i		1338222	1					
ANR	1338442	Identifier	last		1338222	1					
ANR	1338443	PrimaryExpression	0		1338222	1					
ANR	1338444	ExpressionStatement	ret [ i ] . last = 1	3627:1:109591:109606	1338222	13	True				
ANR	1338445	AssignmentExpression	ret [ i ] . last = 1		1338222	0		=			
ANR	1338446	MemberAccess	ret [ i ] . last		1338222	0					
ANR	1338447	ArrayIndexing	ret [ i ]		1338222	0					
ANR	1338448	Identifier	ret		1338222	0					
ANR	1338449	Identifier	i		1338222	1					
ANR	1338450	Identifier	last		1338222	1					
ANR	1338451	PrimaryExpression	1		1338222	1					
ANR	1338452	ReturnStatement	return ret ;	3628:1:109609:109619	1338222	14	True				
ANR	1338453	Identifier	ret		1338222	0					
ANR	1338454	ReturnType	Elf_		1338222	1					
ANR	1338455	Identifier	( r_bin_elf_get_fields )		1338222	2					
ANR	1338456	Identifier	r_bin_elf_get_fields		1338222	3					
ANR	1338457	ParameterList	ELFOBJ * bin		1338222	4					
ANR	1338458	Parameter	ELFOBJ * bin	3607:41:108940:108950	1338222	0	True				
ANR	1338459	ParameterType	ELFOBJ *		1338222	0					
ANR	1338460	Identifier	bin		1338222	1					
ANR	1338461	CFGEntryNode	ENTRY		1338222		True				
ANR	1338462	CFGExitNode	EXIT		1338222		True				
ANR	1338463	Symbol	ret		1338222						
ANR	1338464	Symbol	ret [ i ] . name		1338222						
ANR	1338465	Symbol	NULL		1338222						
ANR	1338466	Symbol	bin		1338222						
ANR	1338467	Symbol	i		1338222						
ANR	1338468	Symbol	bin -> phdr		1338222						
ANR	1338469	Symbol	j		1338222						
ANR	1338470	Symbol	calloc		1338222						
ANR	1338471	Symbol	bin -> ehdr . e_phnum		1338222						
ANR	1338472	Symbol	* ret		1338222						
ANR	1338473	Symbol	ELF_STRING_LENGTH		1338222						
ANR	1338474	Symbol	* bin		1338222						
ANR	1338475	Symbol	* bin -> phdr		1338222						
ANR	1338476	Symbol	bin -> ehdr . e_phoff		1338222						
ANR	1338477	Symbol	* i		1338222						
ANR	1338478	Symbol	ret [ i ++ ] . last		1338222						
ANR	1338479	Symbol	* j		1338222						
ANR	1338480	Symbol	bin -> phdr [ j ] . p_offset		1338222						
ANR	1338481	Symbol	bin -> ehdr		1338222						
ANR	1338482	Symbol	bin -> ehdr . e_shoff		1338222						
ANR	1338483	Symbol	* * bin		1338222						
ANR	1338484	Symbol	ret [ i ] . last		1338222						
ANR	1338485	Symbol	ret [ i ] . offset		1338222						
ANR	1338486	Function	r_bin_elf_free	3631:0:109624:110486							
ANR	1338487	FunctionDef	r_bin_elf_free (ELFOBJ * bin)		1338486	0					
ANR	1338488	CompoundStatement		3631:39:109663:110486	1338486	0					
ANR	1338489	IdentifierDeclStatement	int i ;	3632:1:109666:109671	1338486	0	True				
ANR	1338490	IdentifierDecl	i		1338486	0					
ANR	1338491	IdentifierDeclType	int		1338486	0					
ANR	1338492	Identifier	i		1338486	1					
ANR	1338493	IfStatement	if ( ! bin )		1338486	1					
ANR	1338494	Condition	! bin	3633:5:109678:109681	1338486	0	True				
ANR	1338495	UnaryOperationExpression	! bin		1338486	0					
ANR	1338496	UnaryOperator	!		1338486	0					
ANR	1338497	Identifier	bin		1338486	1					
ANR	1338498	CompoundStatement		3:11:20:20	1338486	1					
ANR	1338499	ReturnStatement	return ;	3634:2:109688:109694	1338486	0	True				
ANR	1338500	ExpressionStatement	free ( bin -> phdr )	3636:1:109700:109716	1338486	2	True				
ANR	1338501	CallExpression	free ( bin -> phdr )		1338486	0					
ANR	1338502	Callee	free		1338486	0					
ANR	1338503	Identifier	free		1338486	0					
ANR	1338504	ArgumentList	bin -> phdr		1338486	1					
ANR	1338505	Argument	bin -> phdr		1338486	0					
ANR	1338506	PtrMemberAccess	bin -> phdr		1338486	0					
ANR	1338507	Identifier	bin		1338486	0					
ANR	1338508	Identifier	phdr		1338486	1					
ANR	1338509	ExpressionStatement	free ( bin -> shdr )	3637:1:109719:109735	1338486	3	True				
ANR	1338510	CallExpression	free ( bin -> shdr )		1338486	0					
ANR	1338511	Callee	free		1338486	0					
ANR	1338512	Identifier	free		1338486	0					
ANR	1338513	ArgumentList	bin -> shdr		1338486	1					
ANR	1338514	Argument	bin -> shdr		1338486	0					
ANR	1338515	PtrMemberAccess	bin -> shdr		1338486	0					
ANR	1338516	Identifier	bin		1338486	0					
ANR	1338517	Identifier	shdr		1338486	1					
ANR	1338518	ExpressionStatement	free ( bin -> strtab )	3638:1:109738:109756	1338486	4	True				
ANR	1338519	CallExpression	free ( bin -> strtab )		1338486	0					
ANR	1338520	Callee	free		1338486	0					
ANR	1338521	Identifier	free		1338486	0					
ANR	1338522	ArgumentList	bin -> strtab		1338486	1					
ANR	1338523	Argument	bin -> strtab		1338486	0					
ANR	1338524	PtrMemberAccess	bin -> strtab		1338486	0					
ANR	1338525	Identifier	bin		1338486	0					
ANR	1338526	Identifier	strtab		1338486	1					
ANR	1338527	ExpressionStatement	free ( bin -> dyn_buf )	3639:1:109759:109778	1338486	5	True				
ANR	1338528	CallExpression	free ( bin -> dyn_buf )		1338486	0					
ANR	1338529	Callee	free		1338486	0					
ANR	1338530	Identifier	free		1338486	0					
ANR	1338531	ArgumentList	bin -> dyn_buf		1338486	1					
ANR	1338532	Argument	bin -> dyn_buf		1338486	0					
ANR	1338533	PtrMemberAccess	bin -> dyn_buf		1338486	0					
ANR	1338534	Identifier	bin		1338486	0					
ANR	1338535	Identifier	dyn_buf		1338486	1					
ANR	1338536	ExpressionStatement	free ( bin -> shstrtab )	3640:1:109781:109801	1338486	6	True				
ANR	1338537	CallExpression	free ( bin -> shstrtab )		1338486	0					
ANR	1338538	Callee	free		1338486	0					
ANR	1338539	Identifier	free		1338486	0					
ANR	1338540	ArgumentList	bin -> shstrtab		1338486	1					
ANR	1338541	Argument	bin -> shstrtab		1338486	0					
ANR	1338542	PtrMemberAccess	bin -> shstrtab		1338486	0					
ANR	1338543	Identifier	bin		1338486	0					
ANR	1338544	Identifier	shstrtab		1338486	1					
ANR	1338545	ExpressionStatement	free ( bin -> dynstr )	3641:1:109804:109822	1338486	7	True				
ANR	1338546	CallExpression	free ( bin -> dynstr )		1338486	0					
ANR	1338547	Callee	free		1338486	0					
ANR	1338548	Identifier	free		1338486	0					
ANR	1338549	ArgumentList	bin -> dynstr		1338486	1					
ANR	1338550	Argument	bin -> dynstr		1338486	0					
ANR	1338551	PtrMemberAccess	bin -> dynstr		1338486	0					
ANR	1338552	Identifier	bin		1338486	0					
ANR	1338553	Identifier	dynstr		1338486	1					
ANR	1338554	IfStatement	if ( bin -> imports_by_ord )		1338486	8					
ANR	1338555	Condition	bin -> imports_by_ord	3643:5:109860:109878	1338486	0	True				
ANR	1338556	PtrMemberAccess	bin -> imports_by_ord		1338486	0					
ANR	1338557	Identifier	bin		1338486	0					
ANR	1338558	Identifier	imports_by_ord		1338486	1					
ANR	1338559	CompoundStatement		13:26:217:217	1338486	1					
ANR	1338560	ForStatement	for ( i = 0 ; i < bin -> imports_by_ord_size ; i ++ )		1338486	0					
ANR	1338561	ForInit	i = 0 ;	3644:7:109890:109895	1338486	0	True				
ANR	1338562	AssignmentExpression	i = 0		1338486	0		=			
ANR	1338563	Identifier	i		1338486	0					
ANR	1338564	PrimaryExpression	0		1338486	1					
ANR	1338565	Condition	i < bin -> imports_by_ord_size	3644:14:109897:109922	1338486	1	True				
ANR	1338566	RelationalExpression	i < bin -> imports_by_ord_size		1338486	0		<			
ANR	1338567	Identifier	i		1338486	0					
ANR	1338568	PtrMemberAccess	bin -> imports_by_ord_size		1338486	1					
ANR	1338569	Identifier	bin		1338486	0					
ANR	1338570	Identifier	imports_by_ord_size		1338486	1					
ANR	1338571	PostIncDecOperationExpression	i ++	3644:42:109925:109927	1338486	2	True				
ANR	1338572	Identifier	i		1338486	0					
ANR	1338573	IncDec	++		1338486	1					
ANR	1338574	CompoundStatement		14:47:266:266	1338486	3					
ANR	1338575	ExpressionStatement	free ( bin -> imports_by_ord [ i ] )	3645:3:109935:109964	1338486	0	True				
ANR	1338576	CallExpression	free ( bin -> imports_by_ord [ i ] )		1338486	0					
ANR	1338577	Callee	free		1338486	0					
ANR	1338578	Identifier	free		1338486	0					
ANR	1338579	ArgumentList	bin -> imports_by_ord [ i ]		1338486	1					
ANR	1338580	Argument	bin -> imports_by_ord [ i ]		1338486	0					
ANR	1338581	ArrayIndexing	bin -> imports_by_ord [ i ]		1338486	0					
ANR	1338582	PtrMemberAccess	bin -> imports_by_ord		1338486	0					
ANR	1338583	Identifier	bin		1338486	0					
ANR	1338584	Identifier	imports_by_ord		1338486	1					
ANR	1338585	Identifier	i		1338486	1					
ANR	1338586	ExpressionStatement	free ( bin -> imports_by_ord )	3647:2:109972:109998	1338486	1	True				
ANR	1338587	CallExpression	free ( bin -> imports_by_ord )		1338486	0					
ANR	1338588	Callee	free		1338486	0					
ANR	1338589	Identifier	free		1338486	0					
ANR	1338590	ArgumentList	bin -> imports_by_ord		1338486	1					
ANR	1338591	Argument	bin -> imports_by_ord		1338486	0					
ANR	1338592	PtrMemberAccess	bin -> imports_by_ord		1338486	0					
ANR	1338593	Identifier	bin		1338486	0					
ANR	1338594	Identifier	imports_by_ord		1338486	1					
ANR	1338595	IfStatement	if ( bin -> symbols_by_ord )		1338486	9					
ANR	1338596	Condition	bin -> symbols_by_ord	3649:5:110008:110026	1338486	0	True				
ANR	1338597	PtrMemberAccess	bin -> symbols_by_ord		1338486	0					
ANR	1338598	Identifier	bin		1338486	0					
ANR	1338599	Identifier	symbols_by_ord		1338486	1					
ANR	1338600	CompoundStatement		19:26:365:365	1338486	1					
ANR	1338601	ForStatement	for ( i = 0 ; i < bin -> symbols_by_ord_size ; i ++ )		1338486	0					
ANR	1338602	ForInit	i = 0 ;	3650:7:110038:110043	1338486	0	True				
ANR	1338603	AssignmentExpression	i = 0		1338486	0		=			
ANR	1338604	Identifier	i		1338486	0					
ANR	1338605	PrimaryExpression	0		1338486	1					
ANR	1338606	Condition	i < bin -> symbols_by_ord_size	3650:14:110045:110070	1338486	1	True				
ANR	1338607	RelationalExpression	i < bin -> symbols_by_ord_size		1338486	0		<			
ANR	1338608	Identifier	i		1338486	0					
ANR	1338609	PtrMemberAccess	bin -> symbols_by_ord_size		1338486	1					
ANR	1338610	Identifier	bin		1338486	0					
ANR	1338611	Identifier	symbols_by_ord_size		1338486	1					
ANR	1338612	PostIncDecOperationExpression	i ++	3650:42:110073:110075	1338486	2	True				
ANR	1338613	Identifier	i		1338486	0					
ANR	1338614	IncDec	++		1338486	1					
ANR	1338615	CompoundStatement		20:47:414:414	1338486	3					
ANR	1338616	ExpressionStatement	r_bin_symbol_free ( bin -> symbols_by_ord [ i ] )	3651:3:110083:110125	1338486	0	True				
ANR	1338617	CallExpression	r_bin_symbol_free ( bin -> symbols_by_ord [ i ] )		1338486	0					
ANR	1338618	Callee	r_bin_symbol_free		1338486	0					
ANR	1338619	Identifier	r_bin_symbol_free		1338486	0					
ANR	1338620	ArgumentList	bin -> symbols_by_ord [ i ]		1338486	1					
ANR	1338621	Argument	bin -> symbols_by_ord [ i ]		1338486	0					
ANR	1338622	ArrayIndexing	bin -> symbols_by_ord [ i ]		1338486	0					
ANR	1338623	PtrMemberAccess	bin -> symbols_by_ord		1338486	0					
ANR	1338624	Identifier	bin		1338486	0					
ANR	1338625	Identifier	symbols_by_ord		1338486	1					
ANR	1338626	Identifier	i		1338486	1					
ANR	1338627	ExpressionStatement	free ( bin -> symbols_by_ord )	3653:2:110133:110159	1338486	1	True				
ANR	1338628	CallExpression	free ( bin -> symbols_by_ord )		1338486	0					
ANR	1338629	Callee	free		1338486	0					
ANR	1338630	Identifier	free		1338486	0					
ANR	1338631	ArgumentList	bin -> symbols_by_ord		1338486	1					
ANR	1338632	Argument	bin -> symbols_by_ord		1338486	0					
ANR	1338633	PtrMemberAccess	bin -> symbols_by_ord		1338486	0					
ANR	1338634	Identifier	bin		1338486	0					
ANR	1338635	Identifier	symbols_by_ord		1338486	1					
ANR	1338636	ExpressionStatement	r_buf_free ( bin -> b )	3655:1:110165:110184	1338486	10	True				
ANR	1338637	CallExpression	r_buf_free ( bin -> b )		1338486	0					
ANR	1338638	Callee	r_buf_free		1338486	0					
ANR	1338639	Identifier	r_buf_free		1338486	0					
ANR	1338640	ArgumentList	bin -> b		1338486	1					
ANR	1338641	Argument	bin -> b		1338486	0					
ANR	1338642	PtrMemberAccess	bin -> b		1338486	0					
ANR	1338643	Identifier	bin		1338486	0					
ANR	1338644	Identifier	b		1338486	1					
ANR	1338645	IfStatement	if ( bin -> g_symbols != bin -> phdr_symbols )		1338486	11					
ANR	1338646	Condition	bin -> g_symbols != bin -> phdr_symbols	3656:5:110191:110225	1338486	0	True				
ANR	1338647	EqualityExpression	bin -> g_symbols != bin -> phdr_symbols		1338486	0		!=			
ANR	1338648	PtrMemberAccess	bin -> g_symbols		1338486	0					
ANR	1338649	Identifier	bin		1338486	0					
ANR	1338650	Identifier	g_symbols		1338486	1					
ANR	1338651	PtrMemberAccess	bin -> phdr_symbols		1338486	1					
ANR	1338652	Identifier	bin		1338486	0					
ANR	1338653	Identifier	phdr_symbols		1338486	1					
ANR	1338654	CompoundStatement		26:42:564:564	1338486	1					
ANR	1338655	ExpressionStatement	R_FREE ( bin -> phdr_symbols )	3657:2:110232:110258	1338486	0	True				
ANR	1338656	CallExpression	R_FREE ( bin -> phdr_symbols )		1338486	0					
ANR	1338657	Callee	R_FREE		1338486	0					
ANR	1338658	Identifier	R_FREE		1338486	0					
ANR	1338659	ArgumentList	bin -> phdr_symbols		1338486	1					
ANR	1338660	Argument	bin -> phdr_symbols		1338486	0					
ANR	1338661	PtrMemberAccess	bin -> phdr_symbols		1338486	0					
ANR	1338662	Identifier	bin		1338486	0					
ANR	1338663	Identifier	phdr_symbols		1338486	1					
ANR	1338664	IfStatement	if ( bin -> g_imports != bin -> phdr_imports )		1338486	12					
ANR	1338665	Condition	bin -> g_imports != bin -> phdr_imports	3659:5:110268:110302	1338486	0	True				
ANR	1338666	EqualityExpression	bin -> g_imports != bin -> phdr_imports		1338486	0		!=			
ANR	1338667	PtrMemberAccess	bin -> g_imports		1338486	0					
ANR	1338668	Identifier	bin		1338486	0					
ANR	1338669	Identifier	g_imports		1338486	1					
ANR	1338670	PtrMemberAccess	bin -> phdr_imports		1338486	1					
ANR	1338671	Identifier	bin		1338486	0					
ANR	1338672	Identifier	phdr_imports		1338486	1					
ANR	1338673	CompoundStatement		29:42:641:641	1338486	1					
ANR	1338674	ExpressionStatement	R_FREE ( bin -> phdr_imports )	3660:2:110309:110335	1338486	0	True				
ANR	1338675	CallExpression	R_FREE ( bin -> phdr_imports )		1338486	0					
ANR	1338676	Callee	R_FREE		1338486	0					
ANR	1338677	Identifier	R_FREE		1338486	0					
ANR	1338678	ArgumentList	bin -> phdr_imports		1338486	1					
ANR	1338679	Argument	bin -> phdr_imports		1338486	0					
ANR	1338680	PtrMemberAccess	bin -> phdr_imports		1338486	0					
ANR	1338681	Identifier	bin		1338486	0					
ANR	1338682	Identifier	phdr_imports		1338486	1					
ANR	1338683	ExpressionStatement	R_FREE ( bin -> g_sections )	3662:1:110341:110365	1338486	13	True				
ANR	1338684	CallExpression	R_FREE ( bin -> g_sections )		1338486	0					
ANR	1338685	Callee	R_FREE		1338486	0					
ANR	1338686	Identifier	R_FREE		1338486	0					
ANR	1338687	ArgumentList	bin -> g_sections		1338486	1					
ANR	1338688	Argument	bin -> g_sections		1338486	0					
ANR	1338689	PtrMemberAccess	bin -> g_sections		1338486	0					
ANR	1338690	Identifier	bin		1338486	0					
ANR	1338691	Identifier	g_sections		1338486	1					
ANR	1338692	ExpressionStatement	R_FREE ( bin -> g_symbols )	3663:1:110368:110391	1338486	14	True				
ANR	1338693	CallExpression	R_FREE ( bin -> g_symbols )		1338486	0					
ANR	1338694	Callee	R_FREE		1338486	0					
ANR	1338695	Identifier	R_FREE		1338486	0					
ANR	1338696	ArgumentList	bin -> g_symbols		1338486	1					
ANR	1338697	Argument	bin -> g_symbols		1338486	0					
ANR	1338698	PtrMemberAccess	bin -> g_symbols		1338486	0					
ANR	1338699	Identifier	bin		1338486	0					
ANR	1338700	Identifier	g_symbols		1338486	1					
ANR	1338701	ExpressionStatement	R_FREE ( bin -> g_imports )	3664:1:110394:110417	1338486	15	True				
ANR	1338702	CallExpression	R_FREE ( bin -> g_imports )		1338486	0					
ANR	1338703	Callee	R_FREE		1338486	0					
ANR	1338704	Identifier	R_FREE		1338486	0					
ANR	1338705	ArgumentList	bin -> g_imports		1338486	1					
ANR	1338706	Argument	bin -> g_imports		1338486	0					
ANR	1338707	PtrMemberAccess	bin -> g_imports		1338486	0					
ANR	1338708	Identifier	bin		1338486	0					
ANR	1338709	Identifier	g_imports		1338486	1					
ANR	1338710	ExpressionStatement	ht_up_free ( bin -> rel_cache )	3665:1:110420:110447	1338486	16	True				
ANR	1338711	CallExpression	ht_up_free ( bin -> rel_cache )		1338486	0					
ANR	1338712	Callee	ht_up_free		1338486	0					
ANR	1338713	Identifier	ht_up_free		1338486	0					
ANR	1338714	ArgumentList	bin -> rel_cache		1338486	1					
ANR	1338715	Argument	bin -> rel_cache		1338486	0					
ANR	1338716	PtrMemberAccess	bin -> rel_cache		1338486	0					
ANR	1338717	Identifier	bin		1338486	0					
ANR	1338718	Identifier	rel_cache		1338486	1					
ANR	1338719	ExpressionStatement	bin -> rel_cache = NULL	3666:1:110450:110471	1338486	17	True				
ANR	1338720	AssignmentExpression	bin -> rel_cache = NULL		1338486	0		=			
ANR	1338721	PtrMemberAccess	bin -> rel_cache		1338486	0					
ANR	1338722	Identifier	bin		1338486	0					
ANR	1338723	Identifier	rel_cache		1338486	1					
ANR	1338724	Identifier	NULL		1338486	1					
ANR	1338725	ExpressionStatement	free ( bin )	3667:1:110474:110484	1338486	18	True				
ANR	1338726	CallExpression	free ( bin )		1338486	0					
ANR	1338727	Callee	free		1338486	0					
ANR	1338728	Identifier	free		1338486	0					
ANR	1338729	ArgumentList	bin		1338486	1					
ANR	1338730	Argument	bin		1338486	0					
ANR	1338731	Identifier	bin		1338486	0					
ANR	1338732	ReturnType	void Elf_		1338486	1					
ANR	1338733	Identifier	( r_bin_elf_free )		1338486	2					
ANR	1338734	Identifier	r_bin_elf_free		1338486	3					
ANR	1338735	ParameterList	ELFOBJ * bin		1338486	4					
ANR	1338736	Parameter	ELFOBJ * bin	3631:26:109650:109660	1338486	0	True				
ANR	1338737	ParameterType	ELFOBJ *		1338486	0					
ANR	1338738	Identifier	bin		1338486	1					
ANR	1338739	CFGEntryNode	ENTRY		1338486		True				
ANR	1338740	CFGExitNode	EXIT		1338486		True				
ANR	1338741	Symbol	bin -> b		1338486						
ANR	1338742	Symbol	bin		1338486						
ANR	1338743	Symbol	bin -> shstrtab		1338486						
ANR	1338744	Symbol	bin -> phdr		1338486						
ANR	1338745	Symbol	* bin		1338486						
ANR	1338746	Symbol	bin -> g_sections		1338486						
ANR	1338747	Symbol	bin -> symbols_by_ord		1338486						
ANR	1338748	Symbol	bin -> g_imports		1338486						
ANR	1338749	Symbol	bin -> imports_by_ord_size		1338486						
ANR	1338750	Symbol	bin -> rel_cache		1338486						
ANR	1338751	Symbol	* * bin		1338486						
ANR	1338752	Symbol	bin -> strtab		1338486						
ANR	1338753	Symbol	bin -> dynstr		1338486						
ANR	1338754	Symbol	bin -> symbols_by_ord_size		1338486						
ANR	1338755	Symbol	bin -> imports_by_ord		1338486						
ANR	1338756	Symbol	bin -> dyn_buf		1338486						
ANR	1338757	Symbol	NULL		1338486						
ANR	1338758	Symbol	i		1338486						
ANR	1338759	Symbol	* bin -> symbols_by_ord		1338486						
ANR	1338760	Symbol	bin -> shdr		1338486						
ANR	1338761	Symbol	* bin -> imports_by_ord		1338486						
ANR	1338762	Symbol	bin -> g_symbols		1338486						
ANR	1338763	Symbol	* i		1338486						
ANR	1338764	Symbol	bin -> phdr_imports		1338486						
ANR	1338765	Symbol	bin -> phdr_symbols		1338486						
ANR	1338766	Function	r_bin_elf_new_buf	3670:8:110497:110804							
ANR	1338767	FunctionDef	"r_bin_elf_new_buf (RBuffer * buf , bool verbose)"		1338766	0					
ANR	1338768	CompoundStatement		3670:60:110549:110804	1338766	0					
ANR	1338769	IdentifierDeclStatement	ELFOBJ * bin = R_NEW0 ( ELFOBJ ) ;	3671:1:110552:110581	1338766	0	True				
ANR	1338770	IdentifierDecl	* bin = R_NEW0 ( ELFOBJ )		1338766	0					
ANR	1338771	IdentifierDeclType	ELFOBJ *		1338766	0					
ANR	1338772	Identifier	bin		1338766	1					
ANR	1338773	AssignmentExpression	* bin = R_NEW0 ( ELFOBJ )		1338766	2		=			
ANR	1338774	Identifier	bin		1338766	0					
ANR	1338775	CallExpression	R_NEW0 ( ELFOBJ )		1338766	1					
ANR	1338776	Callee	R_NEW0		1338766	0					
ANR	1338777	Identifier	R_NEW0		1338766	0					
ANR	1338778	ArgumentList	ELFOBJ		1338766	1					
ANR	1338779	Argument	ELFOBJ		1338766	0					
ANR	1338780	Identifier	ELFOBJ		1338766	0					
ANR	1338781	IfStatement	if ( bin )		1338766	1					
ANR	1338782	Condition	bin	3672:5:110588:110590	1338766	0	True				
ANR	1338783	Identifier	bin		1338766	0					
ANR	1338784	CompoundStatement		3:10:43:43	1338766	1					
ANR	1338785	ExpressionStatement	bin -> kv = sdb_new0 ( )	3673:2:110597:110618	1338766	0	True				
ANR	1338786	AssignmentExpression	bin -> kv = sdb_new0 ( )		1338766	0		=			
ANR	1338787	PtrMemberAccess	bin -> kv		1338766	0					
ANR	1338788	Identifier	bin		1338766	0					
ANR	1338789	Identifier	kv		1338766	1					
ANR	1338790	CallExpression	sdb_new0 ( )		1338766	1					
ANR	1338791	Callee	sdb_new0		1338766	0					
ANR	1338792	Identifier	sdb_new0		1338766	0					
ANR	1338793	ArgumentList			1338766	1					
ANR	1338794	ExpressionStatement	bin -> size = ( ut32 ) r_buf_size ( buf )	3674:2:110622:110656	1338766	1	True				
ANR	1338795	AssignmentExpression	bin -> size = ( ut32 ) r_buf_size ( buf )		1338766	0		=			
ANR	1338796	PtrMemberAccess	bin -> size		1338766	0					
ANR	1338797	Identifier	bin		1338766	0					
ANR	1338798	Identifier	size		1338766	1					
ANR	1338799	CastExpression	( ut32 ) r_buf_size ( buf )		1338766	1					
ANR	1338800	CastTarget	ut32		1338766	0					
ANR	1338801	CallExpression	r_buf_size ( buf )		1338766	1					
ANR	1338802	Callee	r_buf_size		1338766	0					
ANR	1338803	Identifier	r_buf_size		1338766	0					
ANR	1338804	ArgumentList	buf		1338766	1					
ANR	1338805	Argument	buf		1338766	0					
ANR	1338806	Identifier	buf		1338766	0					
ANR	1338807	ExpressionStatement	bin -> verbose = verbose	3675:2:110660:110682	1338766	2	True				
ANR	1338808	AssignmentExpression	bin -> verbose = verbose		1338766	0		=			
ANR	1338809	PtrMemberAccess	bin -> verbose		1338766	0					
ANR	1338810	Identifier	bin		1338766	0					
ANR	1338811	Identifier	verbose		1338766	1					
ANR	1338812	Identifier	verbose		1338766	1					
ANR	1338813	ExpressionStatement	bin -> b = r_buf_ref ( buf )	3676:2:110686:110710	1338766	3	True				
ANR	1338814	AssignmentExpression	bin -> b = r_buf_ref ( buf )		1338766	0		=			
ANR	1338815	PtrMemberAccess	bin -> b		1338766	0					
ANR	1338816	Identifier	bin		1338766	0					
ANR	1338817	Identifier	b		1338766	1					
ANR	1338818	CallExpression	r_buf_ref ( buf )		1338766	1					
ANR	1338819	Callee	r_buf_ref		1338766	0					
ANR	1338820	Identifier	r_buf_ref		1338766	0					
ANR	1338821	ArgumentList	buf		1338766	1					
ANR	1338822	Argument	buf		1338766	0					
ANR	1338823	Identifier	buf		1338766	0					
ANR	1338824	IfStatement	if ( ! elf_init ( bin ) )		1338766	4					
ANR	1338825	Condition	! elf_init ( bin )	3677:6:110718:110732	1338766	0	True				
ANR	1338826	UnaryOperationExpression	! elf_init ( bin )		1338766	0					
ANR	1338827	UnaryOperator	!		1338766	0					
ANR	1338828	CallExpression	elf_init ( bin )		1338766	1					
ANR	1338829	Callee	elf_init		1338766	0					
ANR	1338830	Identifier	elf_init		1338766	0					
ANR	1338831	ArgumentList	bin		1338766	1					
ANR	1338832	Argument	bin		1338766	0					
ANR	1338833	Identifier	bin		1338766	0					
ANR	1338834	CompoundStatement		8:23:185:185	1338766	1					
ANR	1338835	ExpressionStatement	Elf_ ( r_bin_elf_free ) ( bin )	3678:3:110740:110766	1338766	0	True				
ANR	1338836	CallExpression	Elf_ ( r_bin_elf_free ) ( bin )		1338766	0					
ANR	1338837	Callee	Elf_ ( r_bin_elf_free )		1338766	0					
ANR	1338838	CallExpression	Elf_ ( r_bin_elf_free )		1338766	0					
ANR	1338839	Callee	Elf_		1338766	0					
ANR	1338840	Identifier	Elf_		1338766	0					
ANR	1338841	ArgumentList	r_bin_elf_free		1338766	1					
ANR	1338842	Argument	r_bin_elf_free		1338766	0					
ANR	1338843	Identifier	r_bin_elf_free		1338766	0					
ANR	1338844	ArgumentList	bin		1338766	1					
ANR	1338845	Argument	bin		1338766	0					
ANR	1338846	Identifier	bin		1338766	0					
ANR	1338847	ReturnStatement	return NULL ;	3679:3:110771:110782	1338766	1	True				
ANR	1338848	Identifier	NULL		1338766	0					
ANR	1338849	ReturnStatement	return bin ;	3682:1:110792:110802	1338766	2	True				
ANR	1338850	Identifier	bin		1338766	0					
ANR	1338851	ReturnType	Elf_		1338766	1					
ANR	1338852	Identifier	( r_bin_elf_new_buf )		1338766	2					
ANR	1338853	Identifier	r_bin_elf_new_buf		1338766	3					
ANR	1338854	ParameterList	"RBuffer * buf , bool verbose"		1338766	4					
ANR	1338855	Parameter	RBuffer * buf	3670:32:110521:110532	1338766	0	True				
ANR	1338856	ParameterType	RBuffer *		1338766	0					
ANR	1338857	Identifier	buf		1338766	1					
ANR	1338858	Parameter	bool verbose	3670:46:110535:110546	1338766	1	True				
ANR	1338859	ParameterType	bool		1338766	0					
ANR	1338860	Identifier	verbose		1338766	1					
ANR	1338861	CFGEntryNode	ENTRY		1338766		True				
ANR	1338862	CFGExitNode	EXIT		1338766		True				
ANR	1338863	Symbol	sdb_new0		1338766						
ANR	1338864	Symbol	bin -> size		1338766						
ANR	1338865	Symbol	bin -> b		1338766						
ANR	1338866	Symbol	elf_init		1338766						
ANR	1338867	Symbol	NULL		1338766						
ANR	1338868	Symbol	bin		1338766						
ANR	1338869	Symbol	r_buf_ref		1338766						
ANR	1338870	Symbol	r_bin_elf_free		1338766						
ANR	1338871	Symbol	bin -> kv		1338766						
ANR	1338872	Symbol	* bin		1338766						
ANR	1338873	Symbol	verbose		1338766						
ANR	1338874	Symbol	R_NEW0		1338766						
ANR	1338875	Symbol	buf		1338766						
ANR	1338876	Symbol	bin -> verbose		1338766						
ANR	1338877	Symbol	ELFOBJ		1338766						
ANR	1338878	Symbol	r_buf_size		1338766						
ANR	1338879	Function	r_bin_elf_p2v	3694:0:111118:111568							
ANR	1338880	FunctionDef	"r_bin_elf_p2v (ELFOBJ * bin , ut64 paddr)"		1338879	0					
ANR	1338881	CompoundStatement		3694:51:111169:111568	1338879	0					
ANR	1338882	IdentifierDeclStatement	int i ;	3695:1:111172:111177	1338879	0	True				
ANR	1338883	IdentifierDecl	i		1338879	0					
ANR	1338884	IdentifierDeclType	int		1338879	0					
ANR	1338885	Identifier	i		1338879	1					
ANR	1338886	ExpressionStatement	"r_return_val_if_fail ( bin , 0 )"	3697:1:111181:111210	1338879	1	True				
ANR	1338887	CallExpression	"r_return_val_if_fail ( bin , 0 )"		1338879	0					
ANR	1338888	Callee	r_return_val_if_fail		1338879	0					
ANR	1338889	Identifier	r_return_val_if_fail		1338879	0					
ANR	1338890	ArgumentList	bin		1338879	1					
ANR	1338891	Argument	bin		1338879	0					
ANR	1338892	Identifier	bin		1338879	0					
ANR	1338893	Argument	0		1338879	1					
ANR	1338894	PrimaryExpression	0		1338879	0					
ANR	1338895	IfStatement	if ( ! bin -> phdr )		1338879	2					
ANR	1338896	Condition	! bin -> phdr	3698:5:111217:111226	1338879	0	True				
ANR	1338897	UnaryOperationExpression	! bin -> phdr		1338879	0					
ANR	1338898	UnaryOperator	!		1338879	0					
ANR	1338899	PtrMemberAccess	bin -> phdr		1338879	1					
ANR	1338900	Identifier	bin		1338879	0					
ANR	1338901	Identifier	phdr		1338879	1					
ANR	1338902	CompoundStatement		5:17:59:59	1338879	1					
ANR	1338903	IfStatement	if ( is_bin_etrel ( bin ) )		1338879	0					
ANR	1338904	Condition	is_bin_etrel ( bin )	3699:6:111237:111254	1338879	0	True				
ANR	1338905	CallExpression	is_bin_etrel ( bin )		1338879	0					
ANR	1338906	Callee	is_bin_etrel		1338879	0					
ANR	1338907	Identifier	is_bin_etrel		1338879	0					
ANR	1338908	ArgumentList	bin		1338879	1					
ANR	1338909	Argument	bin		1338879	0					
ANR	1338910	Identifier	bin		1338879	0					
ANR	1338911	CompoundStatement		6:26:87:87	1338879	1					
ANR	1338912	ReturnStatement	return bin -> baddr + paddr ;	3700:3:111262:111287	1338879	0	True				
ANR	1338913	AdditiveExpression	bin -> baddr + paddr		1338879	0		+			
ANR	1338914	PtrMemberAccess	bin -> baddr		1338879	0					
ANR	1338915	Identifier	bin		1338879	0					
ANR	1338916	Identifier	baddr		1338879	1					
ANR	1338917	Identifier	paddr		1338879	1					
ANR	1338918	ReturnStatement	return paddr ;	3702:2:111295:111307	1338879	1	True				
ANR	1338919	Identifier	paddr		1338879	0					
ANR	1338920	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; ++ i )		1338879	3					
ANR	1338921	ForInit	i = 0 ;	3704:6:111318:111323	1338879	0	True				
ANR	1338922	AssignmentExpression	i = 0		1338879	0		=			
ANR	1338923	Identifier	i		1338879	0					
ANR	1338924	PrimaryExpression	0		1338879	1					
ANR	1338925	Condition	i < bin -> ehdr . e_phnum	3704:13:111325:111345	1338879	1	True				
ANR	1338926	RelationalExpression	i < bin -> ehdr . e_phnum		1338879	0		<			
ANR	1338927	Identifier	i		1338879	0					
ANR	1338928	MemberAccess	bin -> ehdr . e_phnum		1338879	1					
ANR	1338929	PtrMemberAccess	bin -> ehdr		1338879	0					
ANR	1338930	Identifier	bin		1338879	0					
ANR	1338931	Identifier	ehdr		1338879	1					
ANR	1338932	Identifier	e_phnum		1338879	1					
ANR	1338933	UnaryExpression	++ i	3704:36:111348:111350	1338879	2	True				
ANR	1338934	IncDec	++		1338879	0					
ANR	1338935	Identifier	i		1338879	1					
ANR	1338936	CompoundStatement		11:41:183:183	1338879	3					
ANR	1338937	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]	3705:2:111357:111386	1338879	0	True				
ANR	1338938	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]		1338879	0		=			
ANR	1338939	MultiplicativeExpression	Elf_ ( Phdr ) * p		1338879	0		*			
ANR	1338940	CallExpression	Elf_ ( Phdr )		1338879	0					
ANR	1338941	Callee	Elf_		1338879	0					
ANR	1338942	Identifier	Elf_		1338879	0					
ANR	1338943	ArgumentList	Phdr		1338879	1					
ANR	1338944	Argument	Phdr		1338879	0					
ANR	1338945	Identifier	Phdr		1338879	0					
ANR	1338946	Identifier	p		1338879	1					
ANR	1338947	UnaryOperationExpression	& bin -> phdr [ i ]		1338879	1					
ANR	1338948	UnaryOperator	&		1338879	0					
ANR	1338949	ArrayIndexing	bin -> phdr [ i ]		1338879	1					
ANR	1338950	PtrMemberAccess	bin -> phdr		1338879	0					
ANR	1338951	Identifier	bin		1338879	0					
ANR	1338952	Identifier	phdr		1338879	1					
ANR	1338953	Identifier	i		1338879	1					
ANR	1338954	IfStatement	"if ( p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr ) )"		1338879	1					
ANR	1338955	Condition	"p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr )"	3706:6:111394:111439	1338879	0	True				
ANR	1338956	AndExpression	"p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr )"		1338879	0		&&			
ANR	1338957	EqualityExpression	p -> p_type == PT_LOAD		1338879	0		==			
ANR	1338958	PtrMemberAccess	p -> p_type		1338879	0					
ANR	1338959	Identifier	p		1338879	0					
ANR	1338960	Identifier	p_type		1338879	1					
ANR	1338961	Identifier	PT_LOAD		1338879	1					
ANR	1338962	CallExpression	"is_in_pphdr ( p , paddr )"		1338879	1					
ANR	1338963	Callee	is_in_pphdr		1338879	0					
ANR	1338964	Identifier	is_in_pphdr		1338879	0					
ANR	1338965	ArgumentList	p		1338879	1					
ANR	1338966	Argument	p		1338879	0					
ANR	1338967	Identifier	p		1338879	0					
ANR	1338968	Argument	paddr		1338879	1					
ANR	1338969	Identifier	paddr		1338879	0					
ANR	1338970	CompoundStatement		13:54:272:272	1338879	1					
ANR	1338971	IfStatement	if ( ! p -> p_vaddr && ! p -> p_offset )		1338879	0					
ANR	1338972	Condition	! p -> p_vaddr && ! p -> p_offset	3707:7:111451:111477	1338879	0	True				
ANR	1338973	AndExpression	! p -> p_vaddr && ! p -> p_offset		1338879	0		&&			
ANR	1338974	UnaryOperationExpression	! p -> p_vaddr		1338879	0					
ANR	1338975	UnaryOperator	!		1338879	0					
ANR	1338976	PtrMemberAccess	p -> p_vaddr		1338879	1					
ANR	1338977	Identifier	p		1338879	0					
ANR	1338978	Identifier	p_vaddr		1338879	1					
ANR	1338979	UnaryOperationExpression	! p -> p_offset		1338879	1					
ANR	1338980	UnaryOperator	!		1338879	0					
ANR	1338981	PtrMemberAccess	p -> p_offset		1338879	1					
ANR	1338982	Identifier	p		1338879	0					
ANR	1338983	Identifier	p_offset		1338879	1					
ANR	1338984	CompoundStatement		14:36:310:310	1338879	1					
ANR	1338985	ContinueStatement	continue ;	3708:4:111486:111494	1338879	0	True				
ANR	1338986	ReturnStatement	return p -> p_vaddr + paddr - p -> p_offset ;	3710:3:111504:111543	1338879	1	True				
ANR	1338987	AdditiveExpression	p -> p_vaddr + paddr - p -> p_offset		1338879	0		+			
ANR	1338988	PtrMemberAccess	p -> p_vaddr		1338879	0					
ANR	1338989	Identifier	p		1338879	0					
ANR	1338990	Identifier	p_vaddr		1338879	1					
ANR	1338991	AdditiveExpression	paddr - p -> p_offset		1338879	1		-			
ANR	1338992	Identifier	paddr		1338879	0					
ANR	1338993	PtrMemberAccess	p -> p_offset		1338879	1					
ANR	1338994	Identifier	p		1338879	0					
ANR	1338995	Identifier	p_offset		1338879	1					
ANR	1338996	ReturnStatement	return paddr ;	3714:1:111554:111566	1338879	4	True				
ANR	1338997	Identifier	paddr		1338879	0					
ANR	1338998	ReturnType	ut64 Elf_		1338879	1					
ANR	1338999	Identifier	( r_bin_elf_p2v )		1338879	2					
ANR	1339000	Identifier	r_bin_elf_p2v		1338879	3					
ANR	1339001	ParameterList	"ELFOBJ * bin , ut64 paddr"		1338879	4					
ANR	1339002	Parameter	ELFOBJ * bin	3694:26:111144:111154	1338879	0	True				
ANR	1339003	ParameterType	ELFOBJ *		1338879	0					
ANR	1339004	Identifier	bin		1338879	1					
ANR	1339005	Parameter	ut64 paddr	3694:39:111157:111166	1338879	1	True				
ANR	1339006	ParameterType	ut64		1338879	0					
ANR	1339007	Identifier	paddr		1338879	1					
ANR	1339008	CFGEntryNode	ENTRY		1338879		True				
ANR	1339009	CFGExitNode	EXIT		1338879		True				
ANR	1339010	Symbol	Elf_		1338879						
ANR	1339011	Symbol	Phdr		1338879						
ANR	1339012	Symbol	is_in_pphdr		1338879						
ANR	1339013	Symbol	bin		1338879						
ANR	1339014	Symbol	i		1338879						
ANR	1339015	Symbol	bin -> phdr		1338879						
ANR	1339016	Symbol	PT_LOAD		1338879						
ANR	1339017	Symbol	is_bin_etrel		1338879						
ANR	1339018	Symbol	bin -> ehdr . e_phnum		1338879						
ANR	1339019	Symbol	p -> p_vaddr		1338879						
ANR	1339020	Symbol	p -> p_type		1338879						
ANR	1339021	Symbol	bin -> baddr		1338879						
ANR	1339022	Symbol	* bin		1338879						
ANR	1339023	Symbol	p		1338879						
ANR	1339024	Symbol	paddr		1338879						
ANR	1339025	Symbol	bin -> ehdr		1338879						
ANR	1339026	Symbol	* p		1338879						
ANR	1339027	Symbol	p -> p_offset		1338879						
ANR	1339028	Function	r_bin_elf_v2p	3718:0:111644:112093							
ANR	1339029	FunctionDef	"r_bin_elf_v2p (ELFOBJ * bin , ut64 vaddr)"		1339028	0					
ANR	1339030	CompoundStatement		3718:51:111695:112093	1339028	0					
ANR	1339031	IdentifierDeclStatement	int i ;	3719:1:111698:111703	1339028	0	True				
ANR	1339032	IdentifierDecl	i		1339028	0					
ANR	1339033	IdentifierDeclType	int		1339028	0					
ANR	1339034	Identifier	i		1339028	1					
ANR	1339035	ExpressionStatement	"r_return_val_if_fail ( bin , 0 )"	3721:1:111707:111736	1339028	1	True				
ANR	1339036	CallExpression	"r_return_val_if_fail ( bin , 0 )"		1339028	0					
ANR	1339037	Callee	r_return_val_if_fail		1339028	0					
ANR	1339038	Identifier	r_return_val_if_fail		1339028	0					
ANR	1339039	ArgumentList	bin		1339028	1					
ANR	1339040	Argument	bin		1339028	0					
ANR	1339041	Identifier	bin		1339028	0					
ANR	1339042	Argument	0		1339028	1					
ANR	1339043	PrimaryExpression	0		1339028	0					
ANR	1339044	IfStatement	if ( ! bin -> phdr )		1339028	2					
ANR	1339045	Condition	! bin -> phdr	3722:5:111743:111752	1339028	0	True				
ANR	1339046	UnaryOperationExpression	! bin -> phdr		1339028	0					
ANR	1339047	UnaryOperator	!		1339028	0					
ANR	1339048	PtrMemberAccess	bin -> phdr		1339028	1					
ANR	1339049	Identifier	bin		1339028	0					
ANR	1339050	Identifier	phdr		1339028	1					
ANR	1339051	CompoundStatement		5:17:59:59	1339028	1					
ANR	1339052	IfStatement	if ( is_bin_etrel ( bin ) )		1339028	0					
ANR	1339053	Condition	is_bin_etrel ( bin )	3723:6:111763:111780	1339028	0	True				
ANR	1339054	CallExpression	is_bin_etrel ( bin )		1339028	0					
ANR	1339055	Callee	is_bin_etrel		1339028	0					
ANR	1339056	Identifier	is_bin_etrel		1339028	0					
ANR	1339057	ArgumentList	bin		1339028	1					
ANR	1339058	Argument	bin		1339028	0					
ANR	1339059	Identifier	bin		1339028	0					
ANR	1339060	CompoundStatement		6:26:87:87	1339028	1					
ANR	1339061	ReturnStatement	return vaddr - bin -> baddr ;	3724:3:111788:111813	1339028	0	True				
ANR	1339062	AdditiveExpression	vaddr - bin -> baddr		1339028	0		-			
ANR	1339063	Identifier	vaddr		1339028	0					
ANR	1339064	PtrMemberAccess	bin -> baddr		1339028	1					
ANR	1339065	Identifier	bin		1339028	0					
ANR	1339066	Identifier	baddr		1339028	1					
ANR	1339067	ReturnStatement	return vaddr ;	3726:2:111821:111833	1339028	1	True				
ANR	1339068	Identifier	vaddr		1339028	0					
ANR	1339069	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; ++ i )		1339028	3					
ANR	1339070	ForInit	i = 0 ;	3728:6:111844:111849	1339028	0	True				
ANR	1339071	AssignmentExpression	i = 0		1339028	0		=			
ANR	1339072	Identifier	i		1339028	0					
ANR	1339073	PrimaryExpression	0		1339028	1					
ANR	1339074	Condition	i < bin -> ehdr . e_phnum	3728:13:111851:111871	1339028	1	True				
ANR	1339075	RelationalExpression	i < bin -> ehdr . e_phnum		1339028	0		<			
ANR	1339076	Identifier	i		1339028	0					
ANR	1339077	MemberAccess	bin -> ehdr . e_phnum		1339028	1					
ANR	1339078	PtrMemberAccess	bin -> ehdr		1339028	0					
ANR	1339079	Identifier	bin		1339028	0					
ANR	1339080	Identifier	ehdr		1339028	1					
ANR	1339081	Identifier	e_phnum		1339028	1					
ANR	1339082	UnaryExpression	++ i	3728:36:111874:111876	1339028	2	True				
ANR	1339083	IncDec	++		1339028	0					
ANR	1339084	Identifier	i		1339028	1					
ANR	1339085	CompoundStatement		11:41:183:183	1339028	3					
ANR	1339086	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]	3729:2:111883:111912	1339028	0	True				
ANR	1339087	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]		1339028	0		=			
ANR	1339088	MultiplicativeExpression	Elf_ ( Phdr ) * p		1339028	0		*			
ANR	1339089	CallExpression	Elf_ ( Phdr )		1339028	0					
ANR	1339090	Callee	Elf_		1339028	0					
ANR	1339091	Identifier	Elf_		1339028	0					
ANR	1339092	ArgumentList	Phdr		1339028	1					
ANR	1339093	Argument	Phdr		1339028	0					
ANR	1339094	Identifier	Phdr		1339028	0					
ANR	1339095	Identifier	p		1339028	1					
ANR	1339096	UnaryOperationExpression	& bin -> phdr [ i ]		1339028	1					
ANR	1339097	UnaryOperator	&		1339028	0					
ANR	1339098	ArrayIndexing	bin -> phdr [ i ]		1339028	1					
ANR	1339099	PtrMemberAccess	bin -> phdr		1339028	0					
ANR	1339100	Identifier	bin		1339028	0					
ANR	1339101	Identifier	phdr		1339028	1					
ANR	1339102	Identifier	i		1339028	1					
ANR	1339103	IfStatement	"if ( p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr ) )"		1339028	1					
ANR	1339104	Condition	"p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr )"	3730:6:111920:111965	1339028	0	True				
ANR	1339105	AndExpression	"p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr )"		1339028	0		&&			
ANR	1339106	EqualityExpression	p -> p_type == PT_LOAD		1339028	0		==			
ANR	1339107	PtrMemberAccess	p -> p_type		1339028	0					
ANR	1339108	Identifier	p		1339028	0					
ANR	1339109	Identifier	p_type		1339028	1					
ANR	1339110	Identifier	PT_LOAD		1339028	1					
ANR	1339111	CallExpression	"is_in_vphdr ( p , vaddr )"		1339028	1					
ANR	1339112	Callee	is_in_vphdr		1339028	0					
ANR	1339113	Identifier	is_in_vphdr		1339028	0					
ANR	1339114	ArgumentList	p		1339028	1					
ANR	1339115	Argument	p		1339028	0					
ANR	1339116	Identifier	p		1339028	0					
ANR	1339117	Argument	vaddr		1339028	1					
ANR	1339118	Identifier	vaddr		1339028	0					
ANR	1339119	CompoundStatement		13:54:272:272	1339028	1					
ANR	1339120	IfStatement	if ( ! p -> p_offset && ! p -> p_vaddr )		1339028	0					
ANR	1339121	Condition	! p -> p_offset && ! p -> p_vaddr	3731:7:111977:112003	1339028	0	True				
ANR	1339122	AndExpression	! p -> p_offset && ! p -> p_vaddr		1339028	0		&&			
ANR	1339123	UnaryOperationExpression	! p -> p_offset		1339028	0					
ANR	1339124	UnaryOperator	!		1339028	0					
ANR	1339125	PtrMemberAccess	p -> p_offset		1339028	1					
ANR	1339126	Identifier	p		1339028	0					
ANR	1339127	Identifier	p_offset		1339028	1					
ANR	1339128	UnaryOperationExpression	! p -> p_vaddr		1339028	1					
ANR	1339129	UnaryOperator	!		1339028	0					
ANR	1339130	PtrMemberAccess	p -> p_vaddr		1339028	1					
ANR	1339131	Identifier	p		1339028	0					
ANR	1339132	Identifier	p_vaddr		1339028	1					
ANR	1339133	CompoundStatement		14:36:310:310	1339028	1					
ANR	1339134	ContinueStatement	continue ;	3732:4:112012:112020	1339028	0	True				
ANR	1339135	ReturnStatement	return p -> p_offset + vaddr - p -> p_vaddr ;	3734:3:112030:112069	1339028	1	True				
ANR	1339136	AdditiveExpression	p -> p_offset + vaddr - p -> p_vaddr		1339028	0		+			
ANR	1339137	PtrMemberAccess	p -> p_offset		1339028	0					
ANR	1339138	Identifier	p		1339028	0					
ANR	1339139	Identifier	p_offset		1339028	1					
ANR	1339140	AdditiveExpression	vaddr - p -> p_vaddr		1339028	1		-			
ANR	1339141	Identifier	vaddr		1339028	0					
ANR	1339142	PtrMemberAccess	p -> p_vaddr		1339028	1					
ANR	1339143	Identifier	p		1339028	0					
ANR	1339144	Identifier	p_vaddr		1339028	1					
ANR	1339145	ReturnStatement	return vaddr ;	3737:1:112079:112091	1339028	4	True				
ANR	1339146	Identifier	vaddr		1339028	0					
ANR	1339147	ReturnType	ut64 Elf_		1339028	1					
ANR	1339148	Identifier	( r_bin_elf_v2p )		1339028	2					
ANR	1339149	Identifier	r_bin_elf_v2p		1339028	3					
ANR	1339150	ParameterList	"ELFOBJ * bin , ut64 vaddr"		1339028	4					
ANR	1339151	Parameter	ELFOBJ * bin	3718:26:111670:111680	1339028	0	True				
ANR	1339152	ParameterType	ELFOBJ *		1339028	0					
ANR	1339153	Identifier	bin		1339028	1					
ANR	1339154	Parameter	ut64 vaddr	3718:39:111683:111692	1339028	1	True				
ANR	1339155	ParameterType	ut64		1339028	0					
ANR	1339156	Identifier	vaddr		1339028	1					
ANR	1339157	CFGEntryNode	ENTRY		1339028		True				
ANR	1339158	CFGExitNode	EXIT		1339028		True				
ANR	1339159	Symbol	Elf_		1339028						
ANR	1339160	Symbol	Phdr		1339028						
ANR	1339161	Symbol	bin		1339028						
ANR	1339162	Symbol	i		1339028						
ANR	1339163	Symbol	bin -> phdr		1339028						
ANR	1339164	Symbol	PT_LOAD		1339028						
ANR	1339165	Symbol	is_bin_etrel		1339028						
ANR	1339166	Symbol	vaddr		1339028						
ANR	1339167	Symbol	bin -> ehdr . e_phnum		1339028						
ANR	1339168	Symbol	p -> p_vaddr		1339028						
ANR	1339169	Symbol	p -> p_type		1339028						
ANR	1339170	Symbol	bin -> baddr		1339028						
ANR	1339171	Symbol	* bin		1339028						
ANR	1339172	Symbol	p		1339028						
ANR	1339173	Symbol	bin -> ehdr		1339028						
ANR	1339174	Symbol	* p		1339028						
ANR	1339175	Symbol	p -> p_offset		1339028						
ANR	1339176	Symbol	is_in_vphdr		1339028						
ANR	1339177	Function	r_bin_elf_p2v_new	3742:0:112206:112616							
ANR	1339178	FunctionDef	"r_bin_elf_p2v_new (ELFOBJ * bin , ut64 paddr)"		1339177	0					
ANR	1339179	CompoundStatement		3742:55:112261:112616	1339177	0					
ANR	1339180	IdentifierDeclStatement	int i ;	3743:1:112264:112269	1339177	0	True				
ANR	1339181	IdentifierDecl	i		1339177	0					
ANR	1339182	IdentifierDeclType	int		1339177	0					
ANR	1339183	Identifier	i		1339177	1					
ANR	1339184	ExpressionStatement	"r_return_val_if_fail ( bin , UT64_MAX )"	3745:1:112273:112309	1339177	1	True				
ANR	1339185	CallExpression	"r_return_val_if_fail ( bin , UT64_MAX )"		1339177	0					
ANR	1339186	Callee	r_return_val_if_fail		1339177	0					
ANR	1339187	Identifier	r_return_val_if_fail		1339177	0					
ANR	1339188	ArgumentList	bin		1339177	1					
ANR	1339189	Argument	bin		1339177	0					
ANR	1339190	Identifier	bin		1339177	0					
ANR	1339191	Argument	UT64_MAX		1339177	1					
ANR	1339192	Identifier	UT64_MAX		1339177	0					
ANR	1339193	IfStatement	if ( ! bin -> phdr )		1339177	2					
ANR	1339194	Condition	! bin -> phdr	3746:5:112316:112325	1339177	0	True				
ANR	1339195	UnaryOperationExpression	! bin -> phdr		1339177	0					
ANR	1339196	UnaryOperator	!		1339177	0					
ANR	1339197	PtrMemberAccess	bin -> phdr		1339177	1					
ANR	1339198	Identifier	bin		1339177	0					
ANR	1339199	Identifier	phdr		1339177	1					
ANR	1339200	CompoundStatement		5:17:66:66	1339177	1					
ANR	1339201	IfStatement	if ( is_bin_etrel ( bin ) )		1339177	0					
ANR	1339202	Condition	is_bin_etrel ( bin )	3747:6:112336:112353	1339177	0	True				
ANR	1339203	CallExpression	is_bin_etrel ( bin )		1339177	0					
ANR	1339204	Callee	is_bin_etrel		1339177	0					
ANR	1339205	Identifier	is_bin_etrel		1339177	0					
ANR	1339206	ArgumentList	bin		1339177	1					
ANR	1339207	Argument	bin		1339177	0					
ANR	1339208	Identifier	bin		1339177	0					
ANR	1339209	CompoundStatement		6:26:94:94	1339177	1					
ANR	1339210	ReturnStatement	return bin -> baddr + paddr ;	3748:3:112361:112386	1339177	0	True				
ANR	1339211	AdditiveExpression	bin -> baddr + paddr		1339177	0		+			
ANR	1339212	PtrMemberAccess	bin -> baddr		1339177	0					
ANR	1339213	Identifier	bin		1339177	0					
ANR	1339214	Identifier	baddr		1339177	1					
ANR	1339215	Identifier	paddr		1339177	1					
ANR	1339216	ReturnStatement	return UT64_MAX ;	3750:2:112394:112409	1339177	1	True				
ANR	1339217	Identifier	UT64_MAX		1339177	0					
ANR	1339218	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; ++ i )		1339177	3					
ANR	1339219	ForInit	i = 0 ;	3752:6:112420:112425	1339177	0	True				
ANR	1339220	AssignmentExpression	i = 0		1339177	0		=			
ANR	1339221	Identifier	i		1339177	0					
ANR	1339222	PrimaryExpression	0		1339177	1					
ANR	1339223	Condition	i < bin -> ehdr . e_phnum	3752:13:112427:112447	1339177	1	True				
ANR	1339224	RelationalExpression	i < bin -> ehdr . e_phnum		1339177	0		<			
ANR	1339225	Identifier	i		1339177	0					
ANR	1339226	MemberAccess	bin -> ehdr . e_phnum		1339177	1					
ANR	1339227	PtrMemberAccess	bin -> ehdr		1339177	0					
ANR	1339228	Identifier	bin		1339177	0					
ANR	1339229	Identifier	ehdr		1339177	1					
ANR	1339230	Identifier	e_phnum		1339177	1					
ANR	1339231	UnaryExpression	++ i	3752:36:112450:112452	1339177	2	True				
ANR	1339232	IncDec	++		1339177	0					
ANR	1339233	Identifier	i		1339177	1					
ANR	1339234	CompoundStatement		11:41:193:193	1339177	3					
ANR	1339235	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]	3753:2:112459:112488	1339177	0	True				
ANR	1339236	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]		1339177	0		=			
ANR	1339237	MultiplicativeExpression	Elf_ ( Phdr ) * p		1339177	0		*			
ANR	1339238	CallExpression	Elf_ ( Phdr )		1339177	0					
ANR	1339239	Callee	Elf_		1339177	0					
ANR	1339240	Identifier	Elf_		1339177	0					
ANR	1339241	ArgumentList	Phdr		1339177	1					
ANR	1339242	Argument	Phdr		1339177	0					
ANR	1339243	Identifier	Phdr		1339177	0					
ANR	1339244	Identifier	p		1339177	1					
ANR	1339245	UnaryOperationExpression	& bin -> phdr [ i ]		1339177	1					
ANR	1339246	UnaryOperator	&		1339177	0					
ANR	1339247	ArrayIndexing	bin -> phdr [ i ]		1339177	1					
ANR	1339248	PtrMemberAccess	bin -> phdr		1339177	0					
ANR	1339249	Identifier	bin		1339177	0					
ANR	1339250	Identifier	phdr		1339177	1					
ANR	1339251	Identifier	i		1339177	1					
ANR	1339252	IfStatement	"if ( p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr ) )"		1339177	1					
ANR	1339253	Condition	"p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr )"	3754:6:112496:112541	1339177	0	True				
ANR	1339254	AndExpression	"p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr )"		1339177	0		&&			
ANR	1339255	EqualityExpression	p -> p_type == PT_LOAD		1339177	0		==			
ANR	1339256	PtrMemberAccess	p -> p_type		1339177	0					
ANR	1339257	Identifier	p		1339177	0					
ANR	1339258	Identifier	p_type		1339177	1					
ANR	1339259	Identifier	PT_LOAD		1339177	1					
ANR	1339260	CallExpression	"is_in_pphdr ( p , paddr )"		1339177	1					
ANR	1339261	Callee	is_in_pphdr		1339177	0					
ANR	1339262	Identifier	is_in_pphdr		1339177	0					
ANR	1339263	ArgumentList	p		1339177	1					
ANR	1339264	Argument	p		1339177	0					
ANR	1339265	Identifier	p		1339177	0					
ANR	1339266	Argument	paddr		1339177	1					
ANR	1339267	Identifier	paddr		1339177	0					
ANR	1339268	CompoundStatement		13:54:282:282	1339177	1					
ANR	1339269	ReturnStatement	return p -> p_vaddr + paddr - p -> p_offset ;	3755:3:112549:112588	1339177	0	True				
ANR	1339270	AdditiveExpression	p -> p_vaddr + paddr - p -> p_offset		1339177	0		+			
ANR	1339271	PtrMemberAccess	p -> p_vaddr		1339177	0					
ANR	1339272	Identifier	p		1339177	0					
ANR	1339273	Identifier	p_vaddr		1339177	1					
ANR	1339274	AdditiveExpression	paddr - p -> p_offset		1339177	1		-			
ANR	1339275	Identifier	paddr		1339177	0					
ANR	1339276	PtrMemberAccess	p -> p_offset		1339177	1					
ANR	1339277	Identifier	p		1339177	0					
ANR	1339278	Identifier	p_offset		1339177	1					
ANR	1339279	ReturnStatement	return UT64_MAX ;	3759:1:112599:112614	1339177	4	True				
ANR	1339280	Identifier	UT64_MAX		1339177	0					
ANR	1339281	ReturnType	ut64 Elf_		1339177	1					
ANR	1339282	Identifier	( r_bin_elf_p2v_new )		1339177	2					
ANR	1339283	Identifier	r_bin_elf_p2v_new		1339177	3					
ANR	1339284	ParameterList	"ELFOBJ * bin , ut64 paddr"		1339177	4					
ANR	1339285	Parameter	ELFOBJ * bin	3742:30:112236:112246	1339177	0	True				
ANR	1339286	ParameterType	ELFOBJ *		1339177	0					
ANR	1339287	Identifier	bin		1339177	1					
ANR	1339288	Parameter	ut64 paddr	3742:43:112249:112258	1339177	1	True				
ANR	1339289	ParameterType	ut64		1339177	0					
ANR	1339290	Identifier	paddr		1339177	1					
ANR	1339291	CFGEntryNode	ENTRY		1339177		True				
ANR	1339292	CFGExitNode	EXIT		1339177		True				
ANR	1339293	Symbol	Elf_		1339177						
ANR	1339294	Symbol	Phdr		1339177						
ANR	1339295	Symbol	is_in_pphdr		1339177						
ANR	1339296	Symbol	bin		1339177						
ANR	1339297	Symbol	i		1339177						
ANR	1339298	Symbol	bin -> phdr		1339177						
ANR	1339299	Symbol	PT_LOAD		1339177						
ANR	1339300	Symbol	is_bin_etrel		1339177						
ANR	1339301	Symbol	bin -> ehdr . e_phnum		1339177						
ANR	1339302	Symbol	p -> p_vaddr		1339177						
ANR	1339303	Symbol	p -> p_type		1339177						
ANR	1339304	Symbol	bin -> baddr		1339177						
ANR	1339305	Symbol	* bin		1339177						
ANR	1339306	Symbol	p		1339177						
ANR	1339307	Symbol	paddr		1339177						
ANR	1339308	Symbol	bin -> ehdr		1339177						
ANR	1339309	Symbol	* p		1339177						
ANR	1339310	Symbol	UT64_MAX		1339177						
ANR	1339311	Symbol	p -> p_offset		1339177						
ANR	1339312	Function	r_bin_elf_v2p_new	3764:0:112738:113147							
ANR	1339313	FunctionDef	"r_bin_elf_v2p_new (ELFOBJ * bin , ut64 vaddr)"		1339312	0					
ANR	1339314	CompoundStatement		3764:55:112793:113147	1339312	0					
ANR	1339315	IdentifierDeclStatement	int i ;	3765:1:112796:112801	1339312	0	True				
ANR	1339316	IdentifierDecl	i		1339312	0					
ANR	1339317	IdentifierDeclType	int		1339312	0					
ANR	1339318	Identifier	i		1339312	1					
ANR	1339319	ExpressionStatement	"r_return_val_if_fail ( bin , UT64_MAX )"	3767:1:112805:112841	1339312	1	True				
ANR	1339320	CallExpression	"r_return_val_if_fail ( bin , UT64_MAX )"		1339312	0					
ANR	1339321	Callee	r_return_val_if_fail		1339312	0					
ANR	1339322	Identifier	r_return_val_if_fail		1339312	0					
ANR	1339323	ArgumentList	bin		1339312	1					
ANR	1339324	Argument	bin		1339312	0					
ANR	1339325	Identifier	bin		1339312	0					
ANR	1339326	Argument	UT64_MAX		1339312	1					
ANR	1339327	Identifier	UT64_MAX		1339312	0					
ANR	1339328	IfStatement	if ( ! bin -> phdr )		1339312	2					
ANR	1339329	Condition	! bin -> phdr	3768:5:112848:112857	1339312	0	True				
ANR	1339330	UnaryOperationExpression	! bin -> phdr		1339312	0					
ANR	1339331	UnaryOperator	!		1339312	0					
ANR	1339332	PtrMemberAccess	bin -> phdr		1339312	1					
ANR	1339333	Identifier	bin		1339312	0					
ANR	1339334	Identifier	phdr		1339312	1					
ANR	1339335	CompoundStatement		5:17:66:66	1339312	1					
ANR	1339336	IfStatement	if ( is_bin_etrel ( bin ) )		1339312	0					
ANR	1339337	Condition	is_bin_etrel ( bin )	3769:6:112868:112885	1339312	0	True				
ANR	1339338	CallExpression	is_bin_etrel ( bin )		1339312	0					
ANR	1339339	Callee	is_bin_etrel		1339312	0					
ANR	1339340	Identifier	is_bin_etrel		1339312	0					
ANR	1339341	ArgumentList	bin		1339312	1					
ANR	1339342	Argument	bin		1339312	0					
ANR	1339343	Identifier	bin		1339312	0					
ANR	1339344	CompoundStatement		6:26:94:94	1339312	1					
ANR	1339345	ReturnStatement	return vaddr - bin -> baddr ;	3770:3:112893:112918	1339312	0	True				
ANR	1339346	AdditiveExpression	vaddr - bin -> baddr		1339312	0		-			
ANR	1339347	Identifier	vaddr		1339312	0					
ANR	1339348	PtrMemberAccess	bin -> baddr		1339312	1					
ANR	1339349	Identifier	bin		1339312	0					
ANR	1339350	Identifier	baddr		1339312	1					
ANR	1339351	ReturnStatement	return UT64_MAX ;	3772:2:112926:112941	1339312	1	True				
ANR	1339352	Identifier	UT64_MAX		1339312	0					
ANR	1339353	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; ++ i )		1339312	3					
ANR	1339354	ForInit	i = 0 ;	3774:6:112952:112957	1339312	0	True				
ANR	1339355	AssignmentExpression	i = 0		1339312	0		=			
ANR	1339356	Identifier	i		1339312	0					
ANR	1339357	PrimaryExpression	0		1339312	1					
ANR	1339358	Condition	i < bin -> ehdr . e_phnum	3774:13:112959:112979	1339312	1	True				
ANR	1339359	RelationalExpression	i < bin -> ehdr . e_phnum		1339312	0		<			
ANR	1339360	Identifier	i		1339312	0					
ANR	1339361	MemberAccess	bin -> ehdr . e_phnum		1339312	1					
ANR	1339362	PtrMemberAccess	bin -> ehdr		1339312	0					
ANR	1339363	Identifier	bin		1339312	0					
ANR	1339364	Identifier	ehdr		1339312	1					
ANR	1339365	Identifier	e_phnum		1339312	1					
ANR	1339366	UnaryExpression	++ i	3774:36:112982:112984	1339312	2	True				
ANR	1339367	IncDec	++		1339312	0					
ANR	1339368	Identifier	i		1339312	1					
ANR	1339369	CompoundStatement		11:41:193:193	1339312	3					
ANR	1339370	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]	3775:2:112991:113020	1339312	0	True				
ANR	1339371	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]		1339312	0		=			
ANR	1339372	MultiplicativeExpression	Elf_ ( Phdr ) * p		1339312	0		*			
ANR	1339373	CallExpression	Elf_ ( Phdr )		1339312	0					
ANR	1339374	Callee	Elf_		1339312	0					
ANR	1339375	Identifier	Elf_		1339312	0					
ANR	1339376	ArgumentList	Phdr		1339312	1					
ANR	1339377	Argument	Phdr		1339312	0					
ANR	1339378	Identifier	Phdr		1339312	0					
ANR	1339379	Identifier	p		1339312	1					
ANR	1339380	UnaryOperationExpression	& bin -> phdr [ i ]		1339312	1					
ANR	1339381	UnaryOperator	&		1339312	0					
ANR	1339382	ArrayIndexing	bin -> phdr [ i ]		1339312	1					
ANR	1339383	PtrMemberAccess	bin -> phdr		1339312	0					
ANR	1339384	Identifier	bin		1339312	0					
ANR	1339385	Identifier	phdr		1339312	1					
ANR	1339386	Identifier	i		1339312	1					
ANR	1339387	IfStatement	"if ( p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr ) )"		1339312	1					
ANR	1339388	Condition	"p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr )"	3776:6:113028:113073	1339312	0	True				
ANR	1339389	AndExpression	"p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr )"		1339312	0		&&			
ANR	1339390	EqualityExpression	p -> p_type == PT_LOAD		1339312	0		==			
ANR	1339391	PtrMemberAccess	p -> p_type		1339312	0					
ANR	1339392	Identifier	p		1339312	0					
ANR	1339393	Identifier	p_type		1339312	1					
ANR	1339394	Identifier	PT_LOAD		1339312	1					
ANR	1339395	CallExpression	"is_in_vphdr ( p , vaddr )"		1339312	1					
ANR	1339396	Callee	is_in_vphdr		1339312	0					
ANR	1339397	Identifier	is_in_vphdr		1339312	0					
ANR	1339398	ArgumentList	p		1339312	1					
ANR	1339399	Argument	p		1339312	0					
ANR	1339400	Identifier	p		1339312	0					
ANR	1339401	Argument	vaddr		1339312	1					
ANR	1339402	Identifier	vaddr		1339312	0					
ANR	1339403	CompoundStatement		13:54:282:282	1339312	1					
ANR	1339404	ReturnStatement	return p -> p_offset + vaddr - p -> p_vaddr ;	3777:3:113081:113120	1339312	0	True				
ANR	1339405	AdditiveExpression	p -> p_offset + vaddr - p -> p_vaddr		1339312	0		+			
ANR	1339406	PtrMemberAccess	p -> p_offset		1339312	0					
ANR	1339407	Identifier	p		1339312	0					
ANR	1339408	Identifier	p_offset		1339312	1					
ANR	1339409	AdditiveExpression	vaddr - p -> p_vaddr		1339312	1		-			
ANR	1339410	Identifier	vaddr		1339312	0					
ANR	1339411	PtrMemberAccess	p -> p_vaddr		1339312	1					
ANR	1339412	Identifier	p		1339312	0					
ANR	1339413	Identifier	p_vaddr		1339312	1					
ANR	1339414	ReturnStatement	return UT64_MAX ;	3780:1:113130:113145	1339312	4	True				
ANR	1339415	Identifier	UT64_MAX		1339312	0					
ANR	1339416	ReturnType	ut64 Elf_		1339312	1					
ANR	1339417	Identifier	( r_bin_elf_v2p_new )		1339312	2					
ANR	1339418	Identifier	r_bin_elf_v2p_new		1339312	3					
ANR	1339419	ParameterList	"ELFOBJ * bin , ut64 vaddr"		1339312	4					
ANR	1339420	Parameter	ELFOBJ * bin	3764:30:112768:112778	1339312	0	True				
ANR	1339421	ParameterType	ELFOBJ *		1339312	0					
ANR	1339422	Identifier	bin		1339312	1					
ANR	1339423	Parameter	ut64 vaddr	3764:43:112781:112790	1339312	1	True				
ANR	1339424	ParameterType	ut64		1339312	0					
ANR	1339425	Identifier	vaddr		1339312	1					
ANR	1339426	CFGEntryNode	ENTRY		1339312		True				
ANR	1339427	CFGExitNode	EXIT		1339312		True				
ANR	1339428	Symbol	Elf_		1339312						
ANR	1339429	Symbol	Phdr		1339312						
ANR	1339430	Symbol	bin		1339312						
ANR	1339431	Symbol	i		1339312						
ANR	1339432	Symbol	bin -> phdr		1339312						
ANR	1339433	Symbol	PT_LOAD		1339312						
ANR	1339434	Symbol	is_bin_etrel		1339312						
ANR	1339435	Symbol	vaddr		1339312						
ANR	1339436	Symbol	bin -> ehdr . e_phnum		1339312						
ANR	1339437	Symbol	p -> p_vaddr		1339312						
ANR	1339438	Symbol	p -> p_type		1339312						
ANR	1339439	Symbol	bin -> baddr		1339312						
ANR	1339440	Symbol	* bin		1339312						
ANR	1339441	Symbol	p		1339312						
ANR	1339442	Symbol	bin -> ehdr		1339312						
ANR	1339443	Symbol	* p		1339312						
ANR	1339444	Symbol	UT64_MAX		1339312						
ANR	1339445	Symbol	p -> p_offset		1339312						
ANR	1339446	Symbol	is_in_vphdr		1339312						
ANR	1339447	Function	get_nt_file_maps	3783:0:113150:115464							
ANR	1339448	FunctionDef	"get_nt_file_maps (ELFOBJ * bin , RList * core_maps)"		1339447	0					
ANR	1339449	CompoundStatement		3783:61:113211:115464	1339447	0					
ANR	1339450	IdentifierDeclStatement	ut16 ph_num = bin -> ehdr . e_phnum ;	3784:1:113214:113245	1339447	0	True				
ANR	1339451	IdentifierDecl	ph_num = bin -> ehdr . e_phnum		1339447	0					
ANR	1339452	IdentifierDeclType	ut16		1339447	0					
ANR	1339453	Identifier	ph_num		1339447	1					
ANR	1339454	AssignmentExpression	ph_num = bin -> ehdr . e_phnum		1339447	2		=			
ANR	1339455	Identifier	ph_num		1339447	0					
ANR	1339456	MemberAccess	bin -> ehdr . e_phnum		1339447	1					
ANR	1339457	PtrMemberAccess	bin -> ehdr		1339447	0					
ANR	1339458	Identifier	bin		1339447	0					
ANR	1339459	Identifier	ehdr		1339447	1					
ANR	1339460	Identifier	e_phnum		1339447	1					
ANR	1339461	IdentifierDeclStatement	ut16 ph ;	3785:1:113248:113255	1339447	1	True				
ANR	1339462	IdentifierDecl	ph		1339447	0					
ANR	1339463	IdentifierDeclType	ut16		1339447	0					
ANR	1339464	Identifier	ph		1339447	1					
ANR	1339465	ForStatement	for ( ph = 0 ; ph < ph_num ; ph ++ )		1339447	2					
ANR	1339466	ForInit	ph = 0 ;	3787:6:113264:113270	1339447	0	True				
ANR	1339467	AssignmentExpression	ph = 0		1339447	0		=			
ANR	1339468	Identifier	ph		1339447	0					
ANR	1339469	PrimaryExpression	0		1339447	1					
ANR	1339470	Condition	ph < ph_num	3787:14:113272:113282	1339447	1	True				
ANR	1339471	RelationalExpression	ph < ph_num		1339447	0		<			
ANR	1339472	Identifier	ph		1339447	0					
ANR	1339473	Identifier	ph_num		1339447	1					
ANR	1339474	PostIncDecOperationExpression	ph ++	3787:27:113285:113288	1339447	2	True				
ANR	1339475	Identifier	ph		1339447	0					
ANR	1339476	IncDec	++		1339447	1					
ANR	1339477	CompoundStatement		5:33:79:79	1339447	3					
ANR	1339478	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ ph ]	3788:2:113295:113325	1339447	0	True				
ANR	1339479	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ ph ]		1339447	0		=			
ANR	1339480	MultiplicativeExpression	Elf_ ( Phdr ) * p		1339447	0		*			
ANR	1339481	CallExpression	Elf_ ( Phdr )		1339447	0					
ANR	1339482	Callee	Elf_		1339447	0					
ANR	1339483	Identifier	Elf_		1339447	0					
ANR	1339484	ArgumentList	Phdr		1339447	1					
ANR	1339485	Argument	Phdr		1339447	0					
ANR	1339486	Identifier	Phdr		1339447	0					
ANR	1339487	Identifier	p		1339447	1					
ANR	1339488	UnaryOperationExpression	& bin -> phdr [ ph ]		1339447	1					
ANR	1339489	UnaryOperator	&		1339447	0					
ANR	1339490	ArrayIndexing	bin -> phdr [ ph ]		1339447	1					
ANR	1339491	PtrMemberAccess	bin -> phdr		1339447	0					
ANR	1339492	Identifier	bin		1339447	0					
ANR	1339493	Identifier	phdr		1339447	1					
ANR	1339494	Identifier	ph		1339447	1					
ANR	1339495	IfStatement	if ( p -> p_type == PT_NOTE )		1339447	1					
ANR	1339496	Condition	p -> p_type == PT_NOTE	3789:6:113333:113352	1339447	0	True				
ANR	1339497	EqualityExpression	p -> p_type == PT_NOTE		1339447	0		==			
ANR	1339498	PtrMemberAccess	p -> p_type		1339447	0					
ANR	1339499	Identifier	p		1339447	0					
ANR	1339500	Identifier	p_type		1339447	1					
ANR	1339501	Identifier	PT_NOTE		1339447	1					
ANR	1339502	CompoundStatement		54:3:1589:1604	1339447	1					
ANR	1339503	IdentifierDeclStatement	int bits = Elf_ ( r_bin_elf_get_bits ) ( bin ) ;	3790:3:113360:113400	1339447	0	True				
ANR	1339504	IdentifierDecl	bits = Elf_ ( r_bin_elf_get_bits ) ( bin )		1339447	0					
ANR	1339505	IdentifierDeclType	int		1339447	0					
ANR	1339506	Identifier	bits		1339447	1					
ANR	1339507	AssignmentExpression	bits = Elf_ ( r_bin_elf_get_bits ) ( bin )		1339447	2		=			
ANR	1339508	Identifier	bits		1339447	0					
ANR	1339509	CallExpression	Elf_ ( r_bin_elf_get_bits ) ( bin )		1339447	1					
ANR	1339510	Callee	Elf_ ( r_bin_elf_get_bits )		1339447	0					
ANR	1339511	CallExpression	Elf_ ( r_bin_elf_get_bits )		1339447	0					
ANR	1339512	Callee	Elf_		1339447	0					
ANR	1339513	Identifier	Elf_		1339447	0					
ANR	1339514	ArgumentList	r_bin_elf_get_bits		1339447	1					
ANR	1339515	Argument	r_bin_elf_get_bits		1339447	0					
ANR	1339516	Identifier	r_bin_elf_get_bits		1339447	0					
ANR	1339517	ArgumentList	bin		1339447	1					
ANR	1339518	Argument	bin		1339447	0					
ANR	1339519	Identifier	bin		1339447	0					
ANR	1339520	IdentifierDeclStatement	int elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr ) ;	3791:3:113405:113481	1339447	1	True				
ANR	1339521	IdentifierDecl	elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		1339447	0					
ANR	1339522	IdentifierDeclType	int		1339447	0					
ANR	1339523	Identifier	elf_nhdr_size		1339447	1					
ANR	1339524	AssignmentExpression	elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		1339447	2		=			
ANR	1339525	Identifier	elf_nhdr_size		1339447	0					
ANR	1339526	ConditionalExpression	( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		1339447	1					
ANR	1339527	Condition	bits == 64		1339447	0					
ANR	1339528	EqualityExpression	bits == 64		1339447	0		==			
ANR	1339529	Identifier	bits		1339447	0					
ANR	1339530	PrimaryExpression	64		1339447	1					
ANR	1339531	SizeofExpression	sizeof ( Elf64_Nhdr )		1339447	1					
ANR	1339532	Sizeof	sizeof		1339447	0					
ANR	1339533	SizeofOperand	Elf64_Nhdr		1339447	1					
ANR	1339534	SizeofExpression	sizeof ( Elf32_Nhdr )		1339447	2					
ANR	1339535	Sizeof	sizeof		1339447	0					
ANR	1339536	SizeofOperand	Elf32_Nhdr		1339447	1					
ANR	1339537	IdentifierDeclStatement	int size_of = ( bits == 64 ) ? sizeof ( ut64 ) : sizeof ( ut32 ) ;	3792:3:113486:113544	1339447	2	True				
ANR	1339538	IdentifierDecl	size_of = ( bits == 64 ) ? sizeof ( ut64 ) : sizeof ( ut32 )		1339447	0					
ANR	1339539	IdentifierDeclType	int		1339447	0					
ANR	1339540	Identifier	size_of		1339447	1					
ANR	1339541	AssignmentExpression	size_of = ( bits == 64 ) ? sizeof ( ut64 ) : sizeof ( ut32 )		1339447	2		=			
ANR	1339542	Identifier	size_of		1339447	0					
ANR	1339543	ConditionalExpression	( bits == 64 ) ? sizeof ( ut64 ) : sizeof ( ut32 )		1339447	1					
ANR	1339544	Condition	bits == 64		1339447	0					
ANR	1339545	EqualityExpression	bits == 64		1339447	0		==			
ANR	1339546	Identifier	bits		1339447	0					
ANR	1339547	PrimaryExpression	64		1339447	1					
ANR	1339548	SizeofExpression	sizeof ( ut64 )		1339447	1					
ANR	1339549	Sizeof	sizeof		1339447	0					
ANR	1339550	SizeofOperand	ut64		1339447	1					
ANR	1339551	SizeofExpression	sizeof ( ut32 )		1339447	2					
ANR	1339552	Sizeof	sizeof		1339447	0					
ANR	1339553	SizeofOperand	ut32		1339447	1					
ANR	1339554	IdentifierDeclStatement	"void * elf_nhdr = calloc ( elf_nhdr_size , 1 ) ;"	3793:3:113549:113591	1339447	3	True				
ANR	1339555	IdentifierDecl	"* elf_nhdr = calloc ( elf_nhdr_size , 1 )"		1339447	0					
ANR	1339556	IdentifierDeclType	void *		1339447	0					
ANR	1339557	Identifier	elf_nhdr		1339447	1					
ANR	1339558	AssignmentExpression	"* elf_nhdr = calloc ( elf_nhdr_size , 1 )"		1339447	2		=			
ANR	1339559	Identifier	elf_nhdr		1339447	0					
ANR	1339560	CallExpression	"calloc ( elf_nhdr_size , 1 )"		1339447	1					
ANR	1339561	Callee	calloc		1339447	0					
ANR	1339562	Identifier	calloc		1339447	0					
ANR	1339563	ArgumentList	elf_nhdr_size		1339447	1					
ANR	1339564	Argument	elf_nhdr_size		1339447	0					
ANR	1339565	Identifier	elf_nhdr_size		1339447	0					
ANR	1339566	Argument	1		1339447	1					
ANR	1339567	PrimaryExpression	1		1339447	0					
ANR	1339568	IdentifierDeclStatement	ut64 offset = 0 ;	3794:3:113596:113611	1339447	4	True				
ANR	1339569	IdentifierDecl	offset = 0		1339447	0					
ANR	1339570	IdentifierDeclType	ut64		1339447	0					
ANR	1339571	Identifier	offset		1339447	1					
ANR	1339572	AssignmentExpression	offset = 0		1339447	2		=			
ANR	1339573	Identifier	offset		1339447	0					
ANR	1339574	PrimaryExpression	0		1339447	1					
ANR	1339575	IdentifierDeclStatement	bool found = false ;	3795:3:113616:113634	1339447	5	True				
ANR	1339576	IdentifierDecl	found = false		1339447	0					
ANR	1339577	IdentifierDeclType	bool		1339447	0					
ANR	1339578	Identifier	found		1339447	1					
ANR	1339579	AssignmentExpression	found = false		1339447	2		=			
ANR	1339580	Identifier	false		1339447	0					
ANR	1339581	Identifier	false		1339447	1					
ANR	1339582	WhileStatement	while ( ! found )		1339447	6					
ANR	1339583	Condition	! found	3797:10:113647:113652	1339447	0	True				
ANR	1339584	UnaryOperationExpression	! found		1339447	0					
ANR	1339585	UnaryOperator	!		1339447	0					
ANR	1339586	Identifier	found		1339447	1					
ANR	1339587	CompoundStatement		17:4:462:493	1339447	1					
ANR	1339588	IdentifierDeclStatement	int ret ;	3798:4:113661:113668	1339447	0	True				
ANR	1339589	IdentifierDecl	ret		1339447	0					
ANR	1339590	IdentifierDeclType	int		1339447	0					
ANR	1339591	Identifier	ret		1339447	1					
ANR	1339592	IdentifierDeclStatement	"ut32 n_descsz , n_namesz , n_type ;"	3799:4:113674:113705	1339447	1	True				
ANR	1339593	IdentifierDecl	n_descsz		1339447	0					
ANR	1339594	IdentifierDeclType	ut32		1339447	0					
ANR	1339595	Identifier	n_descsz		1339447	1					
ANR	1339596	IdentifierDecl	n_namesz		1339447	1					
ANR	1339597	IdentifierDeclType	ut32		1339447	0					
ANR	1339598	Identifier	n_namesz		1339447	1					
ANR	1339599	IdentifierDecl	n_type		1339447	2					
ANR	1339600	IdentifierDeclType	ut32		1339447	0					
ANR	1339601	Identifier	n_type		1339447	1					
ANR	1339602	ExpressionStatement	"ret = r_buf_read_at ( bin -> b , bin -> phdr [ ph ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"	3800:4:113711:113809	1339447	2	True				
ANR	1339603	AssignmentExpression	"ret = r_buf_read_at ( bin -> b , bin -> phdr [ ph ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"		1339447	0		=			
ANR	1339604	Identifier	ret		1339447	0					
ANR	1339605	CallExpression	"r_buf_read_at ( bin -> b , bin -> phdr [ ph ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"		1339447	1					
ANR	1339606	Callee	r_buf_read_at		1339447	0					
ANR	1339607	Identifier	r_buf_read_at		1339447	0					
ANR	1339608	ArgumentList	bin -> b		1339447	1					
ANR	1339609	Argument	bin -> b		1339447	0					
ANR	1339610	PtrMemberAccess	bin -> b		1339447	0					
ANR	1339611	Identifier	bin		1339447	0					
ANR	1339612	Identifier	b		1339447	1					
ANR	1339613	Argument	bin -> phdr [ ph ] . p_offset + offset		1339447	1					
ANR	1339614	AdditiveExpression	bin -> phdr [ ph ] . p_offset + offset		1339447	0		+			
ANR	1339615	MemberAccess	bin -> phdr [ ph ] . p_offset		1339447	0					
ANR	1339616	ArrayIndexing	bin -> phdr [ ph ]		1339447	0					
ANR	1339617	PtrMemberAccess	bin -> phdr		1339447	0					
ANR	1339618	Identifier	bin		1339447	0					
ANR	1339619	Identifier	phdr		1339447	1					
ANR	1339620	Identifier	ph		1339447	1					
ANR	1339621	Identifier	p_offset		1339447	1					
ANR	1339622	Identifier	offset		1339447	1					
ANR	1339623	Argument	elf_nhdr		1339447	2					
ANR	1339624	Identifier	elf_nhdr		1339447	0					
ANR	1339625	Argument	elf_nhdr_size		1339447	3					
ANR	1339626	Identifier	elf_nhdr_size		1339447	0					
ANR	1339627	IfStatement	if ( ret != elf_nhdr_size )		1339447	3					
ANR	1339628	Condition	ret != elf_nhdr_size	3803:8:113819:113838	1339447	0	True				
ANR	1339629	EqualityExpression	ret != elf_nhdr_size		1339447	0		!=			
ANR	1339630	Identifier	ret		1339447	0					
ANR	1339631	Identifier	elf_nhdr_size		1339447	1					
ANR	1339632	CompoundStatement		21:30:629:629	1339447	1					
ANR	1339633	ExpressionStatement	"eprintf ( ""Cannot read more NOTES header from CORE\\n"" )"	3804:5:113848:113901	1339447	0	True				
ANR	1339634	CallExpression	"eprintf ( ""Cannot read more NOTES header from CORE\\n"" )"		1339447	0					
ANR	1339635	Callee	eprintf		1339447	0					
ANR	1339636	Identifier	eprintf		1339447	0					
ANR	1339637	ArgumentList	"""Cannot read more NOTES header from CORE\\n"""		1339447	1					
ANR	1339638	Argument	"""Cannot read more NOTES header from CORE\\n"""		1339447	0					
ANR	1339639	PrimaryExpression	"""Cannot read more NOTES header from CORE\\n"""		1339447	0					
ANR	1339640	ExpressionStatement	free ( elf_nhdr )	3805:5:113908:113923	1339447	1	True				
ANR	1339641	CallExpression	free ( elf_nhdr )		1339447	0					
ANR	1339642	Callee	free		1339447	0					
ANR	1339643	Identifier	free		1339447	0					
ANR	1339644	ArgumentList	elf_nhdr		1339447	1					
ANR	1339645	Argument	elf_nhdr		1339447	0					
ANR	1339646	Identifier	elf_nhdr		1339447	0					
ANR	1339647	GotoStatement	goto fail ;	3806:5:113930:113939	1339447	2	True				
ANR	1339648	Identifier	fail		1339447	0					
ANR	1339649	IfStatement	if ( bits == 64 )		1339447	4					
ANR	1339650	Condition	bits == 64	3808:8:113955:113964	1339447	0	True				
ANR	1339651	EqualityExpression	bits == 64		1339447	0		==			
ANR	1339652	Identifier	bits		1339447	0					
ANR	1339653	PrimaryExpression	64		1339447	1					
ANR	1339654	CompoundStatement		26:20:755:755	1339447	1					
ANR	1339655	ExpressionStatement	n_descsz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )	3809:5:113974:114030	1339447	0	True				
ANR	1339656	AssignmentExpression	n_descsz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )		1339447	0		=			
ANR	1339657	Identifier	n_descsz		1339447	0					
ANR	1339658	CallExpression	round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )		1339447	1					
ANR	1339659	Callee	round_up		1339447	0					
ANR	1339660	Identifier	round_up		1339447	0					
ANR	1339661	ArgumentList	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		1339447	1					
ANR	1339662	Argument	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		1339447	0					
ANR	1339663	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		1339447	0					
ANR	1339664	CastExpression	( Elf64_Nhdr * ) elf_nhdr		1339447	0					
ANR	1339665	CastTarget	Elf64_Nhdr *		1339447	0					
ANR	1339666	Identifier	elf_nhdr		1339447	1					
ANR	1339667	Identifier	n_descsz		1339447	1					
ANR	1339668	ExpressionStatement	n_namesz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )	3810:5:114037:114093	1339447	1	True				
ANR	1339669	AssignmentExpression	n_namesz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )		1339447	0		=			
ANR	1339670	Identifier	n_namesz		1339447	0					
ANR	1339671	CallExpression	round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )		1339447	1					
ANR	1339672	Callee	round_up		1339447	0					
ANR	1339673	Identifier	round_up		1339447	0					
ANR	1339674	ArgumentList	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		1339447	1					
ANR	1339675	Argument	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		1339447	0					
ANR	1339676	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		1339447	0					
ANR	1339677	CastExpression	( Elf64_Nhdr * ) elf_nhdr		1339447	0					
ANR	1339678	CastTarget	Elf64_Nhdr *		1339447	0					
ANR	1339679	Identifier	elf_nhdr		1339447	1					
ANR	1339680	Identifier	n_namesz		1339447	1					
ANR	1339681	ExpressionStatement	n_type = ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type	3811:5:114100:114141	1339447	2	True				
ANR	1339682	AssignmentExpression	n_type = ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		1339447	0		=			
ANR	1339683	Identifier	n_type		1339447	0					
ANR	1339684	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		1339447	1					
ANR	1339685	CastExpression	( Elf64_Nhdr * ) elf_nhdr		1339447	0					
ANR	1339686	CastTarget	Elf64_Nhdr *		1339447	0					
ANR	1339687	Identifier	elf_nhdr		1339447	1					
ANR	1339688	Identifier	n_type		1339447	1					
ANR	1339689	ElseStatement	else		1339447	0					
ANR	1339690	CompoundStatement		30:11:942:942	1339447	0					
ANR	1339691	ExpressionStatement	n_descsz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )	3813:5:114161:114217	1339447	0	True				
ANR	1339692	AssignmentExpression	n_descsz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )		1339447	0		=			
ANR	1339693	Identifier	n_descsz		1339447	0					
ANR	1339694	CallExpression	round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )		1339447	1					
ANR	1339695	Callee	round_up		1339447	0					
ANR	1339696	Identifier	round_up		1339447	0					
ANR	1339697	ArgumentList	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		1339447	1					
ANR	1339698	Argument	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		1339447	0					
ANR	1339699	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		1339447	0					
ANR	1339700	CastExpression	( Elf32_Nhdr * ) elf_nhdr		1339447	0					
ANR	1339701	CastTarget	Elf32_Nhdr *		1339447	0					
ANR	1339702	Identifier	elf_nhdr		1339447	1					
ANR	1339703	Identifier	n_descsz		1339447	1					
ANR	1339704	ExpressionStatement	n_namesz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )	3814:5:114224:114280	1339447	1	True				
ANR	1339705	AssignmentExpression	n_namesz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )		1339447	0		=			
ANR	1339706	Identifier	n_namesz		1339447	0					
ANR	1339707	CallExpression	round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )		1339447	1					
ANR	1339708	Callee	round_up		1339447	0					
ANR	1339709	Identifier	round_up		1339447	0					
ANR	1339710	ArgumentList	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		1339447	1					
ANR	1339711	Argument	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		1339447	0					
ANR	1339712	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		1339447	0					
ANR	1339713	CastExpression	( Elf32_Nhdr * ) elf_nhdr		1339447	0					
ANR	1339714	CastTarget	Elf32_Nhdr *		1339447	0					
ANR	1339715	Identifier	elf_nhdr		1339447	1					
ANR	1339716	Identifier	n_namesz		1339447	1					
ANR	1339717	ExpressionStatement	n_type = ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type	3815:5:114287:114328	1339447	2	True				
ANR	1339718	AssignmentExpression	n_type = ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		1339447	0		=			
ANR	1339719	Identifier	n_type		1339447	0					
ANR	1339720	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		1339447	1					
ANR	1339721	CastExpression	( Elf32_Nhdr * ) elf_nhdr		1339447	0					
ANR	1339722	CastTarget	Elf32_Nhdr *		1339447	0					
ANR	1339723	Identifier	elf_nhdr		1339447	1					
ANR	1339724	Identifier	n_type		1339447	1					
ANR	1339725	IfStatement	if ( n_type == NT_FILE )		1339447	5					
ANR	1339726	Condition	n_type == NT_FILE	3818:8:114345:114361	1339447	0	True				
ANR	1339727	EqualityExpression	n_type == NT_FILE		1339447	0		==			
ANR	1339728	Identifier	n_type		1339447	0					
ANR	1339729	Identifier	NT_FILE		1339447	1					
ANR	1339730	CompoundStatement		36:27:1152:1152	1339447	1					
ANR	1339731	ExpressionStatement	found = true	3819:5:114371:114383	1339447	0	True				
ANR	1339732	AssignmentExpression	found = true		1339447	0		=			
ANR	1339733	Identifier	found		1339447	0					
ANR	1339734	Identifier	true		1339447	1					
ANR	1339735	ExpressionStatement	offset += elf_nhdr_size + n_namesz	3820:5:114390:114424	1339447	1	True				
ANR	1339736	AssignmentExpression	offset += elf_nhdr_size + n_namesz		1339447	0		+=			
ANR	1339737	Identifier	offset		1339447	0					
ANR	1339738	AdditiveExpression	elf_nhdr_size + n_namesz		1339447	1		+			
ANR	1339739	Identifier	elf_nhdr_size		1339447	0					
ANR	1339740	Identifier	n_namesz		1339447	1					
ANR	1339741	ExpressionStatement	free ( elf_nhdr )	3821:5:114431:114446	1339447	2	True				
ANR	1339742	CallExpression	free ( elf_nhdr )		1339447	0					
ANR	1339743	Callee	free		1339447	0					
ANR	1339744	Identifier	free		1339447	0					
ANR	1339745	ArgumentList	elf_nhdr		1339447	1					
ANR	1339746	Argument	elf_nhdr		1339447	0					
ANR	1339747	Identifier	elf_nhdr		1339447	0					
ANR	1339748	ElseStatement	else		1339447	0					
ANR	1339749	CompoundStatement		40:11:1247:1247	1339447	0					
ANR	1339750	ExpressionStatement	offset += elf_nhdr_size + n_descsz + n_namesz	3823:5:114466:114511	1339447	0	True				
ANR	1339751	AssignmentExpression	offset += elf_nhdr_size + n_descsz + n_namesz		1339447	0		+=			
ANR	1339752	Identifier	offset		1339447	0					
ANR	1339753	AdditiveExpression	elf_nhdr_size + n_descsz + n_namesz		1339447	1		+			
ANR	1339754	Identifier	elf_nhdr_size		1339447	0					
ANR	1339755	AdditiveExpression	n_descsz + n_namesz		1339447	1		+			
ANR	1339756	Identifier	n_descsz		1339447	0					
ANR	1339757	Identifier	n_namesz		1339447	1					
ANR	1339758	IdentifierDeclStatement	ut64 i = bin -> phdr [ ph ] . p_offset + offset ;	3826:3:114527:114567	1339447	7	True				
ANR	1339759	IdentifierDecl	i = bin -> phdr [ ph ] . p_offset + offset		1339447	0					
ANR	1339760	IdentifierDeclType	ut64		1339447	0					
ANR	1339761	Identifier	i		1339447	1					
ANR	1339762	AssignmentExpression	i = bin -> phdr [ ph ] . p_offset + offset		1339447	2		=			
ANR	1339763	Identifier	i		1339447	0					
ANR	1339764	AdditiveExpression	bin -> phdr [ ph ] . p_offset + offset		1339447	1		+			
ANR	1339765	MemberAccess	bin -> phdr [ ph ] . p_offset		1339447	0					
ANR	1339766	ArrayIndexing	bin -> phdr [ ph ]		1339447	0					
ANR	1339767	PtrMemberAccess	bin -> phdr		1339447	0					
ANR	1339768	Identifier	bin		1339447	0					
ANR	1339769	Identifier	phdr		1339447	1					
ANR	1339770	Identifier	ph		1339447	1					
ANR	1339771	Identifier	p_offset		1339447	1					
ANR	1339772	Identifier	offset		1339447	1					
ANR	1339773	IdentifierDeclStatement	ut64 n_maps ;	3827:3:114572:114583	1339447	8	True				
ANR	1339774	IdentifierDecl	n_maps		1339447	0					
ANR	1339775	IdentifierDeclType	ut64		1339447	0					
ANR	1339776	Identifier	n_maps		1339447	1					
ANR	1339777	IfStatement	if ( bits == 64 )		1339447	9					
ANR	1339778	Condition	bits == 64	3828:7:114592:114601	1339447	0	True				
ANR	1339779	EqualityExpression	bits == 64		1339447	0		==			
ANR	1339780	Identifier	bits		1339447	0					
ANR	1339781	PrimaryExpression	64		1339447	1					
ANR	1339782	CompoundStatement		46:19:1392:1392	1339447	1					
ANR	1339783	ExpressionStatement	"n_maps = BREAD64 ( bin -> b , i )"	3829:4:114610:114638	1339447	0	True				
ANR	1339784	AssignmentExpression	"n_maps = BREAD64 ( bin -> b , i )"		1339447	0		=			
ANR	1339785	Identifier	n_maps		1339447	0					
ANR	1339786	CallExpression	"BREAD64 ( bin -> b , i )"		1339447	1					
ANR	1339787	Callee	BREAD64		1339447	0					
ANR	1339788	Identifier	BREAD64		1339447	0					
ANR	1339789	ArgumentList	bin -> b		1339447	1					
ANR	1339790	Argument	bin -> b		1339447	0					
ANR	1339791	PtrMemberAccess	bin -> b		1339447	0					
ANR	1339792	Identifier	bin		1339447	0					
ANR	1339793	Identifier	b		1339447	1					
ANR	1339794	Argument	i		1339447	1					
ANR	1339795	Identifier	i		1339447	0					
ANR	1339796	ExpressionStatement	"( void ) BREAD64 ( bin -> b , i )"	3830:4:114644:114669	1339447	1	True				
ANR	1339797	CastExpression	"( void ) BREAD64 ( bin -> b , i )"		1339447	0					
ANR	1339798	CastTarget	void		1339447	0					
ANR	1339799	CallExpression	"BREAD64 ( bin -> b , i )"		1339447	1					
ANR	1339800	Callee	BREAD64		1339447	0					
ANR	1339801	Identifier	BREAD64		1339447	0					
ANR	1339802	ArgumentList	bin -> b		1339447	1					
ANR	1339803	Argument	bin -> b		1339447	0					
ANR	1339804	PtrMemberAccess	bin -> b		1339447	0					
ANR	1339805	Identifier	bin		1339447	0					
ANR	1339806	Identifier	b		1339447	1					
ANR	1339807	Argument	i		1339447	1					
ANR	1339808	Identifier	i		1339447	0					
ANR	1339809	ElseStatement	else		1339447	0					
ANR	1339810	CompoundStatement		49:10:1469:1469	1339447	0					
ANR	1339811	ExpressionStatement	"n_maps = BREAD32 ( bin -> b , i )"	3832:4:114687:114715	1339447	0	True				
ANR	1339812	AssignmentExpression	"n_maps = BREAD32 ( bin -> b , i )"		1339447	0		=			
ANR	1339813	Identifier	n_maps		1339447	0					
ANR	1339814	CallExpression	"BREAD32 ( bin -> b , i )"		1339447	1					
ANR	1339815	Callee	BREAD32		1339447	0					
ANR	1339816	Identifier	BREAD32		1339447	0					
ANR	1339817	ArgumentList	bin -> b		1339447	1					
ANR	1339818	Argument	bin -> b		1339447	0					
ANR	1339819	PtrMemberAccess	bin -> b		1339447	0					
ANR	1339820	Identifier	bin		1339447	0					
ANR	1339821	Identifier	b		1339447	1					
ANR	1339822	Argument	i		1339447	1					
ANR	1339823	Identifier	i		1339447	0					
ANR	1339824	ExpressionStatement	"( void ) BREAD32 ( bin -> b , i )"	3833:4:114721:114746	1339447	1	True				
ANR	1339825	CastExpression	"( void ) BREAD32 ( bin -> b , i )"		1339447	0					
ANR	1339826	CastTarget	void		1339447	0					
ANR	1339827	CallExpression	"BREAD32 ( bin -> b , i )"		1339447	1					
ANR	1339828	Callee	BREAD32		1339447	0					
ANR	1339829	Identifier	BREAD32		1339447	0					
ANR	1339830	ArgumentList	bin -> b		1339447	1					
ANR	1339831	Argument	bin -> b		1339447	0					
ANR	1339832	PtrMemberAccess	bin -> b		1339447	0					
ANR	1339833	Identifier	bin		1339447	0					
ANR	1339834	Identifier	b		1339447	1					
ANR	1339835	Argument	i		1339447	1					
ANR	1339836	Identifier	i		1339447	0					
ANR	1339837	IdentifierDeclStatement	ut64 jump = ( ( size_of * 3 ) * n_maps ) + i ;	3835:3:114756:114796	1339447	10	True				
ANR	1339838	IdentifierDecl	jump = ( ( size_of * 3 ) * n_maps ) + i		1339447	0					
ANR	1339839	IdentifierDeclType	ut64		1339447	0					
ANR	1339840	Identifier	jump		1339447	1					
ANR	1339841	AssignmentExpression	jump = ( ( size_of * 3 ) * n_maps ) + i		1339447	2		=			
ANR	1339842	Identifier	jump		1339447	0					
ANR	1339843	AdditiveExpression	( ( size_of * 3 ) * n_maps ) + i		1339447	1		+			
ANR	1339844	MultiplicativeExpression	( size_of * 3 ) * n_maps		1339447	0		*			
ANR	1339845	MultiplicativeExpression	size_of * 3		1339447	0		*			
ANR	1339846	Identifier	size_of		1339447	0					
ANR	1339847	PrimaryExpression	3		1339447	1					
ANR	1339848	Identifier	n_maps		1339447	1					
ANR	1339849	Identifier	i		1339447	1					
ANR	1339850	IdentifierDeclStatement	int len_str = 0 ;	3836:3:114801:114816	1339447	11	True				
ANR	1339851	IdentifierDecl	len_str = 0		1339447	0					
ANR	1339852	IdentifierDeclType	int		1339447	0					
ANR	1339853	Identifier	len_str		1339447	1					
ANR	1339854	AssignmentExpression	len_str = 0		1339447	2		=			
ANR	1339855	Identifier	len_str		1339447	0					
ANR	1339856	PrimaryExpression	0		1339447	1					
ANR	1339857	WhileStatement	while ( n_maps > 0 )		1339447	12					
ANR	1339858	Condition	n_maps > 0	3837:10:114828:114837	1339447	0	True				
ANR	1339859	RelationalExpression	n_maps > 0		1339447	0		>			
ANR	1339860	Identifier	n_maps		1339447	0					
ANR	1339861	PrimaryExpression	0		1339447	1					
ANR	1339862	CompoundStatement		71:4:2007:2017	1339447	1					
ANR	1339863	IdentifierDeclStatement	ut64 addr ;	3838:4:114846:114855	1339447	0	True				
ANR	1339864	IdentifierDecl	addr		1339447	0					
ANR	1339865	IdentifierDeclType	ut64		1339447	0					
ANR	1339866	Identifier	addr		1339447	1					
ANR	1339867	IdentifierDeclStatement	char str [ 512 ] = { 0 } ;	3839:4:114861:114880	1339447	1	True				
ANR	1339868	IdentifierDecl	str [ 512 ] = { 0 }		1339447	0					
ANR	1339869	IdentifierDeclType	char [ 512 ]		1339447	0					
ANR	1339870	Identifier	str		1339447	1					
ANR	1339871	PrimaryExpression	512		1339447	2					
ANR	1339872	AssignmentExpression	str [ 512 ] = { 0 }		1339447	3		=			
ANR	1339873	Identifier	str		1339447	0					
ANR	1339874	InitializerList	0		1339447	1					
ANR	1339875	PrimaryExpression	0		1339447	0					
ANR	1339876	IfStatement	if ( bits == 64 )		1339447	2					
ANR	1339877	Condition	bits == 64	3840:8:114890:114899	1339447	0	True				
ANR	1339878	EqualityExpression	bits == 64		1339447	0		==			
ANR	1339879	Identifier	bits		1339447	0					
ANR	1339880	PrimaryExpression	64		1339447	1					
ANR	1339881	CompoundStatement		58:20:1690:1690	1339447	1					
ANR	1339882	ExpressionStatement	"addr = BREAD64 ( bin -> b , i )"	3841:5:114909:114935	1339447	0	True				
ANR	1339883	AssignmentExpression	"addr = BREAD64 ( bin -> b , i )"		1339447	0		=			
ANR	1339884	Identifier	addr		1339447	0					
ANR	1339885	CallExpression	"BREAD64 ( bin -> b , i )"		1339447	1					
ANR	1339886	Callee	BREAD64		1339447	0					
ANR	1339887	Identifier	BREAD64		1339447	0					
ANR	1339888	ArgumentList	bin -> b		1339447	1					
ANR	1339889	Argument	bin -> b		1339447	0					
ANR	1339890	PtrMemberAccess	bin -> b		1339447	0					
ANR	1339891	Identifier	bin		1339447	0					
ANR	1339892	Identifier	b		1339447	1					
ANR	1339893	Argument	i		1339447	1					
ANR	1339894	Identifier	i		1339447	0					
ANR	1339895	ElseStatement	else		1339447	0					
ANR	1339896	CompoundStatement		60:11:1736:1736	1339447	0					
ANR	1339897	ExpressionStatement	"addr = BREAD32 ( bin -> b , i )"	3843:5:114955:114981	1339447	0	True				
ANR	1339898	AssignmentExpression	"addr = BREAD32 ( bin -> b , i )"		1339447	0		=			
ANR	1339899	Identifier	addr		1339447	0					
ANR	1339900	CallExpression	"BREAD32 ( bin -> b , i )"		1339447	1					
ANR	1339901	Callee	BREAD32		1339447	0					
ANR	1339902	Identifier	BREAD32		1339447	0					
ANR	1339903	ArgumentList	bin -> b		1339447	1					
ANR	1339904	Argument	bin -> b		1339447	0					
ANR	1339905	PtrMemberAccess	bin -> b		1339447	0					
ANR	1339906	Identifier	bin		1339447	0					
ANR	1339907	Identifier	b		1339447	1					
ANR	1339908	Argument	i		1339447	1					
ANR	1339909	Identifier	i		1339447	0					
ANR	1339910	IfStatement	if ( addr == UT64_MAX )		1339447	3					
ANR	1339911	Condition	addr == UT64_MAX	3845:8:114997:115012	1339447	0	True				
ANR	1339912	EqualityExpression	addr == UT64_MAX		1339447	0		==			
ANR	1339913	Identifier	addr		1339447	0					
ANR	1339914	Identifier	UT64_MAX		1339447	1					
ANR	1339915	CompoundStatement		63:26:1803:1803	1339447	1					
ANR	1339916	ExpressionStatement	"eprintf ( ""ffbreak\\n"" )"	3846:5:115022:115043	1339447	0	True				
ANR	1339917	CallExpression	"eprintf ( ""ffbreak\\n"" )"		1339447	0					
ANR	1339918	Callee	eprintf		1339447	0					
ANR	1339919	Identifier	eprintf		1339447	0					
ANR	1339920	ArgumentList	"""ffbreak\\n"""		1339447	1					
ANR	1339921	Argument	"""ffbreak\\n"""		1339447	0					
ANR	1339922	PrimaryExpression	"""ffbreak\\n"""		1339447	0					
ANR	1339923	BreakStatement	break ;	3847:5:115050:115055	1339447	1	True				
ANR	1339924	ExpressionStatement	"r_buf_read_at ( bin -> b , jump + len_str , ( ut8 * ) str , sizeof ( str ) - 1 )"	3849:4:115067:115138	1339447	4	True				
ANR	1339925	CallExpression	"r_buf_read_at ( bin -> b , jump + len_str , ( ut8 * ) str , sizeof ( str ) - 1 )"		1339447	0					
ANR	1339926	Callee	r_buf_read_at		1339447	0					
ANR	1339927	Identifier	r_buf_read_at		1339447	0					
ANR	1339928	ArgumentList	bin -> b		1339447	1					
ANR	1339929	Argument	bin -> b		1339447	0					
ANR	1339930	PtrMemberAccess	bin -> b		1339447	0					
ANR	1339931	Identifier	bin		1339447	0					
ANR	1339932	Identifier	b		1339447	1					
ANR	1339933	Argument	jump + len_str		1339447	1					
ANR	1339934	AdditiveExpression	jump + len_str		1339447	0		+			
ANR	1339935	Identifier	jump		1339447	0					
ANR	1339936	Identifier	len_str		1339447	1					
ANR	1339937	Argument	( ut8 * ) str		1339447	2					
ANR	1339938	CastExpression	( ut8 * ) str		1339447	0					
ANR	1339939	CastTarget	ut8 *		1339447	0					
ANR	1339940	Identifier	str		1339447	1					
ANR	1339941	Argument	sizeof ( str ) - 1		1339447	3					
ANR	1339942	AdditiveExpression	sizeof ( str ) - 1		1339447	0		-			
ANR	1339943	SizeofExpression	sizeof ( str )		1339447	0					
ANR	1339944	Sizeof	sizeof		1339447	0					
ANR	1339945	SizeofOperand	str		1339447	1					
ANR	1339946	PrimaryExpression	1		1339447	1					
ANR	1339947	ExpressionStatement	str [ sizeof ( str ) - 1 ] = 0	3851:4:115144:115167	1339447	5	True				
ANR	1339948	AssignmentExpression	str [ sizeof ( str ) - 1 ] = 0		1339447	0		=			
ANR	1339949	ArrayIndexing	str [ sizeof ( str ) - 1 ]		1339447	0					
ANR	1339950	Identifier	str		1339447	0					
ANR	1339951	AdditiveExpression	sizeof ( str ) - 1		1339447	1		-			
ANR	1339952	SizeofExpression	sizeof ( str )		1339447	0					
ANR	1339953	Sizeof	sizeof		1339447	0					
ANR	1339954	SizeofOperand	str		1339447	1					
ANR	1339955	PrimaryExpression	1		1339447	1					
ANR	1339956	PrimaryExpression	0		1339447	1					
ANR	1339957	IdentifierDeclStatement	RListIter * iter ;	3852:4:115198:115213	1339447	6	True				
ANR	1339958	IdentifierDecl	* iter		1339447	0					
ANR	1339959	IdentifierDeclType	RListIter *		1339447	0					
ANR	1339960	Identifier	iter		1339447	1					
ANR	1339961	IdentifierDeclStatement	RBinMap * p ;	3853:4:115219:115229	1339447	7	True				
ANR	1339962	IdentifierDecl	* p		1339447	0					
ANR	1339963	IdentifierDeclType	RBinMap *		1339447	0					
ANR	1339964	Identifier	p		1339447	1					
ANR	1339965	Statement	r_list_foreach	3854:4:115235:115248	1339447	8	True				
ANR	1339966	Statement	(	3854:19:115250:115250	1339447	9	True				
ANR	1339967	Statement	core_maps	3854:20:115251:115259	1339447	10	True				
ANR	1339968	Statement	","	3854:29:115260:115260	1339447	11	True				
ANR	1339969	Statement	iter	3854:31:115262:115265	1339447	12	True				
ANR	1339970	Statement	","	3854:35:115266:115266	1339447	13	True				
ANR	1339971	Statement	p	3854:37:115268:115268	1339447	14	True				
ANR	1339972	Statement	)	3854:38:115269:115269	1339447	15	True				
ANR	1339973	CompoundStatement		72:40:2059:2059	1339447	16					
ANR	1339974	IfStatement	if ( p -> addr == addr )		1339447	0					
ANR	1339975	Condition	p -> addr == addr	3855:9:115282:115296	1339447	0	True				
ANR	1339976	EqualityExpression	p -> addr == addr		1339447	0		==			
ANR	1339977	PtrMemberAccess	p -> addr		1339447	0					
ANR	1339978	Identifier	p		1339447	0					
ANR	1339979	Identifier	addr		1339447	1					
ANR	1339980	Identifier	addr		1339447	1					
ANR	1339981	CompoundStatement		73:26:2087:2087	1339447	1					
ANR	1339982	ExpressionStatement	p -> file = strdup ( str )	3856:6:115307:115329	1339447	0	True				
ANR	1339983	AssignmentExpression	p -> file = strdup ( str )		1339447	0		=			
ANR	1339984	PtrMemberAccess	p -> file		1339447	0					
ANR	1339985	Identifier	p		1339447	0					
ANR	1339986	Identifier	file		1339447	1					
ANR	1339987	CallExpression	strdup ( str )		1339447	1					
ANR	1339988	Callee	strdup		1339447	0					
ANR	1339989	Identifier	strdup		1339447	0					
ANR	1339990	ArgumentList	str		1339447	1					
ANR	1339991	Argument	str		1339447	0					
ANR	1339992	Identifier	str		1339447	0					
ANR	1339993	ExpressionStatement	len_str += strlen ( str ) + 1	3859:4:115349:115376	1339447	17	True				
ANR	1339994	AssignmentExpression	len_str += strlen ( str ) + 1		1339447	0		+=			
ANR	1339995	Identifier	len_str		1339447	0					
ANR	1339996	AdditiveExpression	strlen ( str ) + 1		1339447	1		+			
ANR	1339997	CallExpression	strlen ( str )		1339447	0					
ANR	1339998	Callee	strlen		1339447	0					
ANR	1339999	Identifier	strlen		1339447	0					
ANR	1340000	ArgumentList	str		1339447	1					
ANR	1340001	Argument	str		1339447	0					
ANR	1340002	Identifier	str		1339447	0					
ANR	1340003	PrimaryExpression	1		1339447	1					
ANR	1340004	ExpressionStatement	n_maps --	3860:4:115382:115390	1339447	18	True				
ANR	1340005	PostIncDecOperationExpression	n_maps --		1339447	0					
ANR	1340006	Identifier	n_maps		1339447	0					
ANR	1340007	IncDec	--		1339447	1					
ANR	1340008	ExpressionStatement	i += ( size_of * 2 )	3861:4:115396:115414	1339447	19	True				
ANR	1340009	AssignmentExpression	i += ( size_of * 2 )		1339447	0		+=			
ANR	1340010	Identifier	i		1339447	0					
ANR	1340011	MultiplicativeExpression	size_of * 2		1339447	1		*			
ANR	1340012	Identifier	size_of		1339447	0					
ANR	1340013	PrimaryExpression	2		1339447	1					
ANR	1340014	ReturnStatement	return true ;	3866:1:115430:115441	1339447	3	True				
ANR	1340015	Identifier	true		1339447	0					
ANR	1340016	Label	fail :	3867:0:115443:115447	1339447	4	True				
ANR	1340017	Identifier	fail		1339447	0					
ANR	1340018	ReturnStatement	return false ;	3868:1:115450:115462	1339447	5	True				
ANR	1340019	Identifier	false		1339447	0					
ANR	1340020	ReturnType	static bool		1339447	1					
ANR	1340021	Identifier	get_nt_file_maps		1339447	2					
ANR	1340022	ParameterList	"ELFOBJ * bin , RList * core_maps"		1339447	3					
ANR	1340023	Parameter	ELFOBJ * bin	3783:30:113180:113190	1339447	0	True				
ANR	1340024	ParameterType	ELFOBJ *		1339447	0					
ANR	1340025	Identifier	bin		1339447	1					
ANR	1340026	Parameter	RList * core_maps	3783:43:113193:113208	1339447	1	True				
ANR	1340027	ParameterType	RList *		1339447	0					
ANR	1340028	Identifier	core_maps		1339447	1					
ANR	1340029	CFGEntryNode	ENTRY		1339447		True				
ANR	1340030	CFGExitNode	EXIT		1339447		True				
ANR	1340031	Symbol	bin -> b		1339447						
ANR	1340032	Symbol	Phdr		1339447						
ANR	1340033	Symbol	BREAD32		1339447						
ANR	1340034	Symbol	bin		1339447						
ANR	1340035	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		1339447						
ANR	1340036	Symbol	bin -> phdr		1339447						
ANR	1340037	Symbol	NT_FILE		1339447						
ANR	1340038	Symbol	* elf_nhdr		1339447						
ANR	1340039	Symbol	r_bin_elf_get_bits		1339447						
ANR	1340040	Symbol	round_up		1339447						
ANR	1340041	Symbol	strlen		1339447						
ANR	1340042	Symbol	p -> file		1339447						
ANR	1340043	Symbol	bin -> ehdr		1339447						
ANR	1340044	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		1339447						
ANR	1340045	Symbol	p -> addr		1339447						
ANR	1340046	Symbol	elf_nhdr		1339447						
ANR	1340047	Symbol	jump		1339447						
ANR	1340048	Symbol	ret		1339447						
ANR	1340049	Symbol	offset		1339447						
ANR	1340050	Symbol	BREAD64		1339447						
ANR	1340051	Symbol	bits		1339447						
ANR	1340052	Symbol	iter		1339447						
ANR	1340053	Symbol	bin -> phdr [ ph ] . p_offset		1339447						
ANR	1340054	Symbol	bin -> ehdr . e_phnum		1339447						
ANR	1340055	Symbol	* bin -> phdr		1339447						
ANR	1340056	Symbol	str		1339447						
ANR	1340057	Symbol	len_str		1339447						
ANR	1340058	Symbol	n_descsz		1339447						
ANR	1340059	Symbol	elf_nhdr_size		1339447						
ANR	1340060	Symbol	true		1339447						
ANR	1340061	Symbol	ph_num		1339447						
ANR	1340062	Symbol	* ph		1339447						
ANR	1340063	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		1339447						
ANR	1340064	Symbol	calloc		1339447						
ANR	1340065	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		1339447						
ANR	1340066	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		1339447						
ANR	1340067	Symbol	n_type		1339447						
ANR	1340068	Symbol	* bin		1339447						
ANR	1340069	Symbol	core_maps		1339447						
ANR	1340070	Symbol	found		1339447						
ANR	1340071	Symbol	n_namesz		1339447						
ANR	1340072	Symbol	size_of		1339447						
ANR	1340073	Symbol	* * bin		1339447						
ANR	1340074	Symbol	* str		1339447						
ANR	1340075	Symbol	addr		1339447						
ANR	1340076	Symbol	UT64_MAX		1339447						
ANR	1340077	Symbol	Elf_		1339447						
ANR	1340078	Symbol	PT_NOTE		1339447						
ANR	1340079	Symbol	false		1339447						
ANR	1340080	Symbol	i		1339447						
ANR	1340081	Symbol	n_maps		1339447						
ANR	1340082	Symbol	p -> p_type		1339447						
ANR	1340083	Symbol	p		1339447						
ANR	1340084	Symbol	ph		1339447						
ANR	1340085	Symbol	r_buf_read_at		1339447						
ANR	1340086	Symbol	* p		1339447						
ANR	1340087	Symbol	strdup		1339447						
ANR	1340088	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		1339447						
ANR	1340089	Function	r_bin_elf_map_free	3871:0:115467:115564							
ANR	1340090	FunctionDef	r_bin_elf_map_free (RBinMap * map)		1340089	0					
ANR	1340091	CompoundStatement		3871:46:115513:115564	1340089	0					
ANR	1340092	IfStatement	if ( map )		1340089	0					
ANR	1340093	Condition	map	3872:5:115520:115522	1340089	0	True				
ANR	1340094	Identifier	map		1340089	0					
ANR	1340095	CompoundStatement		2:10:11:11	1340089	1					
ANR	1340096	ExpressionStatement	free ( map -> file )	3873:2:115529:115545	1340089	0	True				
ANR	1340097	CallExpression	free ( map -> file )		1340089	0					
ANR	1340098	Callee	free		1340089	0					
ANR	1340099	Identifier	free		1340089	0					
ANR	1340100	ArgumentList	map -> file		1340089	1					
ANR	1340101	Argument	map -> file		1340089	0					
ANR	1340102	PtrMemberAccess	map -> file		1340089	0					
ANR	1340103	Identifier	map		1340089	0					
ANR	1340104	Identifier	file		1340089	1					
ANR	1340105	ExpressionStatement	free ( map )	3874:2:115549:115559	1340089	1	True				
ANR	1340106	CallExpression	free ( map )		1340089	0					
ANR	1340107	Callee	free		1340089	0					
ANR	1340108	Identifier	free		1340089	0					
ANR	1340109	ArgumentList	map		1340089	1					
ANR	1340110	Argument	map		1340089	0					
ANR	1340111	Identifier	map		1340089	0					
ANR	1340112	ReturnType	static void		1340089	1					
ANR	1340113	Identifier	r_bin_elf_map_free		1340089	2					
ANR	1340114	ParameterList	RBinMap * map		1340089	3					
ANR	1340115	Parameter	RBinMap * map	3871:32:115499:115510	1340089	0	True				
ANR	1340116	ParameterType	RBinMap *		1340089	0					
ANR	1340117	Identifier	map		1340089	1					
ANR	1340118	CFGEntryNode	ENTRY		1340089		True				
ANR	1340119	CFGExitNode	EXIT		1340089		True				
ANR	1340120	Symbol	map -> file		1340089						
ANR	1340121	Symbol	* map		1340089						
ANR	1340122	Symbol	map		1340089						
ANR	1340123	Function	r_bin_elf_get_maps	3878:7:115574:116257							
ANR	1340124	FunctionDef	r_bin_elf_get_maps (ELFOBJ * bin)		1340123	0					
ANR	1340125	CompoundStatement		3878:45:115612:116257	1340123	0					
ANR	1340126	IdentifierDeclStatement	"ut16 ph , ph_num = bin -> ehdr . e_phnum ;"	3879:1:115615:115650	1340123	0	True				
ANR	1340127	IdentifierDecl	ph		1340123	0					
ANR	1340128	IdentifierDeclType	ut16		1340123	0					
ANR	1340129	Identifier	ph		1340123	1					
ANR	1340130	IdentifierDecl	ph_num = bin -> ehdr . e_phnum		1340123	1					
ANR	1340131	IdentifierDeclType	ut16		1340123	0					
ANR	1340132	Identifier	ph_num		1340123	1					
ANR	1340133	AssignmentExpression	ph_num = bin -> ehdr . e_phnum		1340123	2		=			
ANR	1340134	Identifier	ph_num		1340123	0					
ANR	1340135	MemberAccess	bin -> ehdr . e_phnum		1340123	1					
ANR	1340136	PtrMemberAccess	bin -> ehdr		1340123	0					
ANR	1340137	Identifier	bin		1340123	0					
ANR	1340138	Identifier	ehdr		1340123	1					
ANR	1340139	Identifier	e_phnum		1340123	1					
ANR	1340140	IfStatement	if ( ! bin -> phdr )		1340123	1					
ANR	1340141	Condition	! bin -> phdr	3880:5:115672:115681	1340123	0	True				
ANR	1340142	UnaryOperationExpression	! bin -> phdr		1340123	0					
ANR	1340143	UnaryOperator	!		1340123	0					
ANR	1340144	PtrMemberAccess	bin -> phdr		1340123	1					
ANR	1340145	Identifier	bin		1340123	0					
ANR	1340146	Identifier	phdr		1340123	1					
ANR	1340147	CompoundStatement		3:17:71:71	1340123	1					
ANR	1340148	ReturnStatement	return NULL ;	3881:2:115688:115699	1340123	0	True				
ANR	1340149	Identifier	NULL		1340123	0					
ANR	1340150	IdentifierDeclStatement	RList * maps = r_list_newf ( ( RListFree ) r_bin_elf_map_free ) ;	3883:1:115705:115762	1340123	2	True				
ANR	1340151	IdentifierDecl	* maps = r_list_newf ( ( RListFree ) r_bin_elf_map_free )		1340123	0					
ANR	1340152	IdentifierDeclType	RList *		1340123	0					
ANR	1340153	Identifier	maps		1340123	1					
ANR	1340154	AssignmentExpression	* maps = r_list_newf ( ( RListFree ) r_bin_elf_map_free )		1340123	2		=			
ANR	1340155	Identifier	maps		1340123	0					
ANR	1340156	CallExpression	r_list_newf ( ( RListFree ) r_bin_elf_map_free )		1340123	1					
ANR	1340157	Callee	r_list_newf		1340123	0					
ANR	1340158	Identifier	r_list_newf		1340123	0					
ANR	1340159	ArgumentList	( RListFree ) r_bin_elf_map_free		1340123	1					
ANR	1340160	Argument	( RListFree ) r_bin_elf_map_free		1340123	0					
ANR	1340161	CastExpression	( RListFree ) r_bin_elf_map_free		1340123	0					
ANR	1340162	CastTarget	RListFree		1340123	0					
ANR	1340163	Identifier	r_bin_elf_map_free		1340123	1					
ANR	1340164	ForStatement	for ( ph = 0 ; ph < ph_num ; ph ++ )		1340123	3					
ANR	1340165	ForInit	ph = 0 ;	3884:6:115770:115776	1340123	0	True				
ANR	1340166	AssignmentExpression	ph = 0		1340123	0		=			
ANR	1340167	Identifier	ph		1340123	0					
ANR	1340168	PrimaryExpression	0		1340123	1					
ANR	1340169	Condition	ph < ph_num	3884:14:115778:115788	1340123	1	True				
ANR	1340170	RelationalExpression	ph < ph_num		1340123	0		<			
ANR	1340171	Identifier	ph		1340123	0					
ANR	1340172	Identifier	ph_num		1340123	1					
ANR	1340173	PostIncDecOperationExpression	ph ++	3884:27:115791:115794	1340123	2	True				
ANR	1340174	Identifier	ph		1340123	0					
ANR	1340175	IncDec	++		1340123	1					
ANR	1340176	CompoundStatement		7:33:184:184	1340123	3					
ANR	1340177	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ ph ]	3885:2:115801:115831	1340123	0	True				
ANR	1340178	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ ph ]		1340123	0		=			
ANR	1340179	MultiplicativeExpression	Elf_ ( Phdr ) * p		1340123	0		*			
ANR	1340180	CallExpression	Elf_ ( Phdr )		1340123	0					
ANR	1340181	Callee	Elf_		1340123	0					
ANR	1340182	Identifier	Elf_		1340123	0					
ANR	1340183	ArgumentList	Phdr		1340123	1					
ANR	1340184	Argument	Phdr		1340123	0					
ANR	1340185	Identifier	Phdr		1340123	0					
ANR	1340186	Identifier	p		1340123	1					
ANR	1340187	UnaryOperationExpression	& bin -> phdr [ ph ]		1340123	1					
ANR	1340188	UnaryOperator	&		1340123	0					
ANR	1340189	ArrayIndexing	bin -> phdr [ ph ]		1340123	1					
ANR	1340190	PtrMemberAccess	bin -> phdr		1340123	0					
ANR	1340191	Identifier	bin		1340123	0					
ANR	1340192	Identifier	phdr		1340123	1					
ANR	1340193	Identifier	ph		1340123	1					
ANR	1340194	IfStatement	if ( p -> p_type == PT_LOAD )		1340123	1					
ANR	1340195	Condition	p -> p_type == PT_LOAD	3886:6:115839:115858	1340123	0	True				
ANR	1340196	EqualityExpression	p -> p_type == PT_LOAD		1340123	0		==			
ANR	1340197	PtrMemberAccess	p -> p_type		1340123	0					
ANR	1340198	Identifier	p		1340123	0					
ANR	1340199	Identifier	p_type		1340123	1					
ANR	1340200	Identifier	PT_LOAD		1340123	1					
ANR	1340201	CompoundStatement		10:3:253:284	1340123	1					
ANR	1340202	IdentifierDeclStatement	RBinMap * map = R_NEW0 ( RBinMap ) ;	3887:3:115866:115897	1340123	0	True				
ANR	1340203	IdentifierDecl	* map = R_NEW0 ( RBinMap )		1340123	0					
ANR	1340204	IdentifierDeclType	RBinMap *		1340123	0					
ANR	1340205	Identifier	map		1340123	1					
ANR	1340206	AssignmentExpression	* map = R_NEW0 ( RBinMap )		1340123	2		=			
ANR	1340207	Identifier	map		1340123	0					
ANR	1340208	CallExpression	R_NEW0 ( RBinMap )		1340123	1					
ANR	1340209	Callee	R_NEW0		1340123	0					
ANR	1340210	Identifier	R_NEW0		1340123	0					
ANR	1340211	ArgumentList	RBinMap		1340123	1					
ANR	1340212	Argument	RBinMap		1340123	0					
ANR	1340213	Identifier	RBinMap		1340123	0					
ANR	1340214	IfStatement	if ( map )		1340123	1					
ANR	1340215	Condition	map	3888:7:115906:115908	1340123	0	True				
ANR	1340216	Identifier	map		1340123	0					
ANR	1340217	CompoundStatement		11:12:298:298	1340123	1					
ANR	1340218	ExpressionStatement	map -> addr = p -> p_vaddr	3889:4:115917:115939	1340123	0	True				
ANR	1340219	AssignmentExpression	map -> addr = p -> p_vaddr		1340123	0		=			
ANR	1340220	PtrMemberAccess	map -> addr		1340123	0					
ANR	1340221	Identifier	map		1340123	0					
ANR	1340222	Identifier	addr		1340123	1					
ANR	1340223	PtrMemberAccess	p -> p_vaddr		1340123	1					
ANR	1340224	Identifier	p		1340123	0					
ANR	1340225	Identifier	p_vaddr		1340123	1					
ANR	1340226	ExpressionStatement	map -> size = p -> p_memsz	3890:4:115945:115967	1340123	1	True				
ANR	1340227	AssignmentExpression	map -> size = p -> p_memsz		1340123	0		=			
ANR	1340228	PtrMemberAccess	map -> size		1340123	0					
ANR	1340229	Identifier	map		1340123	0					
ANR	1340230	Identifier	size		1340123	1					
ANR	1340231	PtrMemberAccess	p -> p_memsz		1340123	1					
ANR	1340232	Identifier	p		1340123	0					
ANR	1340233	Identifier	p_memsz		1340123	1					
ANR	1340234	ExpressionStatement	map -> perms = p -> p_flags	3891:4:115973:115996	1340123	2	True				
ANR	1340235	AssignmentExpression	map -> perms = p -> p_flags		1340123	0		=			
ANR	1340236	PtrMemberAccess	map -> perms		1340123	0					
ANR	1340237	Identifier	map		1340123	0					
ANR	1340238	Identifier	perms		1340123	1					
ANR	1340239	PtrMemberAccess	p -> p_flags		1340123	1					
ANR	1340240	Identifier	p		1340123	0					
ANR	1340241	Identifier	p_flags		1340123	1					
ANR	1340242	ExpressionStatement	map -> offset = p -> p_offset	3892:4:116002:116027	1340123	3	True				
ANR	1340243	AssignmentExpression	map -> offset = p -> p_offset		1340123	0		=			
ANR	1340244	PtrMemberAccess	map -> offset		1340123	0					
ANR	1340245	Identifier	map		1340123	0					
ANR	1340246	Identifier	offset		1340123	1					
ANR	1340247	PtrMemberAccess	p -> p_offset		1340123	1					
ANR	1340248	Identifier	p		1340123	0					
ANR	1340249	Identifier	p_offset		1340123	1					
ANR	1340250	ExpressionStatement	map -> file = NULL	3893:4:116033:116049	1340123	4	True				
ANR	1340251	AssignmentExpression	map -> file = NULL		1340123	0		=			
ANR	1340252	PtrMemberAccess	map -> file		1340123	0					
ANR	1340253	Identifier	map		1340123	0					
ANR	1340254	Identifier	file		1340123	1					
ANR	1340255	Identifier	NULL		1340123	1					
ANR	1340256	ExpressionStatement	"r_list_append ( maps , map )"	3894:4:116055:116080	1340123	5	True				
ANR	1340257	CallExpression	"r_list_append ( maps , map )"		1340123	0					
ANR	1340258	Callee	r_list_append		1340123	0					
ANR	1340259	Identifier	r_list_append		1340123	0					
ANR	1340260	ArgumentList	maps		1340123	1					
ANR	1340261	Argument	maps		1340123	0					
ANR	1340262	Identifier	maps		1340123	0					
ANR	1340263	Argument	map		1340123	1					
ANR	1340264	Identifier	map		1340123	0					
ANR	1340265	IfStatement	if ( ! r_list_empty ( maps ) )		1340123	4					
ANR	1340266	Condition	! r_list_empty ( maps )	3899:5:116100:116119	1340123	0	True				
ANR	1340267	UnaryOperationExpression	! r_list_empty ( maps )		1340123	0					
ANR	1340268	UnaryOperator	!		1340123	0					
ANR	1340269	CallExpression	r_list_empty ( maps )		1340123	1					
ANR	1340270	Callee	r_list_empty		1340123	0					
ANR	1340271	Identifier	r_list_empty		1340123	0					
ANR	1340272	ArgumentList	maps		1340123	1					
ANR	1340273	Argument	maps		1340123	0					
ANR	1340274	Identifier	maps		1340123	0					
ANR	1340275	CompoundStatement		22:27:509:509	1340123	1					
ANR	1340276	IfStatement	"if ( ! get_nt_file_maps ( bin , maps ) )"		1340123	0					
ANR	1340277	Condition	"! get_nt_file_maps ( bin , maps )"	3900:6:116130:116158	1340123	0	True				
ANR	1340278	UnaryOperationExpression	"! get_nt_file_maps ( bin , maps )"		1340123	0					
ANR	1340279	UnaryOperator	!		1340123	0					
ANR	1340280	CallExpression	"get_nt_file_maps ( bin , maps )"		1340123	1					
ANR	1340281	Callee	get_nt_file_maps		1340123	0					
ANR	1340282	Identifier	get_nt_file_maps		1340123	0					
ANR	1340283	ArgumentList	bin		1340123	1					
ANR	1340284	Argument	bin		1340123	0					
ANR	1340285	Identifier	bin		1340123	0					
ANR	1340286	Argument	maps		1340123	1					
ANR	1340287	Identifier	maps		1340123	0					
ANR	1340288	CompoundStatement		23:37:548:548	1340123	1					
ANR	1340289	ExpressionStatement	"eprintf ( ""Could not retrieve the names of all maps from NT_FILE\\n"" )"	3901:3:116166:116233	1340123	0	True				
ANR	1340290	CallExpression	"eprintf ( ""Could not retrieve the names of all maps from NT_FILE\\n"" )"		1340123	0					
ANR	1340291	Callee	eprintf		1340123	0					
ANR	1340292	Identifier	eprintf		1340123	0					
ANR	1340293	ArgumentList	"""Could not retrieve the names of all maps from NT_FILE\\n"""		1340123	1					
ANR	1340294	Argument	"""Could not retrieve the names of all maps from NT_FILE\\n"""		1340123	0					
ANR	1340295	PrimaryExpression	"""Could not retrieve the names of all maps from NT_FILE\\n"""		1340123	0					
ANR	1340296	ReturnStatement	return maps ;	3905:1:116244:116255	1340123	5	True				
ANR	1340297	Identifier	maps		1340123	0					
ANR	1340298	ReturnType	Elf_		1340123	1					
ANR	1340299	Identifier	( r_bin_elf_get_maps )		1340123	2					
ANR	1340300	Identifier	r_bin_elf_get_maps		1340123	3					
ANR	1340301	ParameterList	ELFOBJ * bin		1340123	4					
ANR	1340302	Parameter	ELFOBJ * bin	3878:32:115599:115609	1340123	0	True				
ANR	1340303	ParameterType	ELFOBJ *		1340123	0					
ANR	1340304	Identifier	bin		1340123	1					
ANR	1340305	CFGEntryNode	ENTRY		1340123		True				
ANR	1340306	CFGExitNode	EXIT		1340123		True				
ANR	1340307	Symbol	Phdr		1340123						
ANR	1340308	Symbol	map -> addr		1340123						
ANR	1340309	Symbol	bin		1340123						
ANR	1340310	Symbol	* map		1340123						
ANR	1340311	Symbol	map -> file		1340123						
ANR	1340312	Symbol	bin -> phdr		1340123						
ANR	1340313	Symbol	map -> size		1340123						
ANR	1340314	Symbol	* bin		1340123						
ANR	1340315	Symbol	get_nt_file_maps		1340123						
ANR	1340316	Symbol	r_bin_elf_map_free		1340123						
ANR	1340317	Symbol	bin -> ehdr		1340123						
ANR	1340318	Symbol	p -> p_memsz		1340123						
ANR	1340319	Symbol	p -> p_offset		1340123						
ANR	1340320	Symbol	map		1340123						
ANR	1340321	Symbol	RBinMap		1340123						
ANR	1340322	Symbol	map -> perms		1340123						
ANR	1340323	Symbol	Elf_		1340123						
ANR	1340324	Symbol	NULL		1340123						
ANR	1340325	Symbol	maps		1340123						
ANR	1340326	Symbol	r_list_newf		1340123						
ANR	1340327	Symbol	PT_LOAD		1340123						
ANR	1340328	Symbol	bin -> ehdr . e_phnum		1340123						
ANR	1340329	Symbol	p -> p_vaddr		1340123						
ANR	1340330	Symbol	p -> p_type		1340123						
ANR	1340331	Symbol	p -> p_flags		1340123						
ANR	1340332	Symbol	p		1340123						
ANR	1340333	Symbol	R_NEW0		1340123						
ANR	1340334	Symbol	ph		1340123						
ANR	1340335	Symbol	r_list_empty		1340123						
ANR	1340336	Symbol	ph_num		1340123						
ANR	1340337	Symbol	* p		1340123						
ANR	1340338	Symbol	map -> offset		1340123						
ANR	1340339	Function	r_bin_elf_compiler	3908:6:116266:116847							
ANR	1340340	FunctionDef	r_bin_elf_compiler (ELFOBJ * bin)		1340339	0					
ANR	1340341	CompoundStatement		3908:44:116304:116847	1340339	0					
ANR	1340342	IdentifierDeclStatement	"RBinElfSection * section = get_section_by_name ( bin , "".comment"" ) ;"	3909:1:116307:116370	1340339	0	True				
ANR	1340343	IdentifierDecl	"* section = get_section_by_name ( bin , "".comment"" )"		1340339	0					
ANR	1340344	IdentifierDeclType	RBinElfSection *		1340339	0					
ANR	1340345	Identifier	section		1340339	1					
ANR	1340346	AssignmentExpression	"* section = get_section_by_name ( bin , "".comment"" )"		1340339	2		=			
ANR	1340347	Identifier	section		1340339	0					
ANR	1340348	CallExpression	"get_section_by_name ( bin , "".comment"" )"		1340339	1					
ANR	1340349	Callee	get_section_by_name		1340339	0					
ANR	1340350	Identifier	get_section_by_name		1340339	0					
ANR	1340351	ArgumentList	bin		1340339	1					
ANR	1340352	Argument	bin		1340339	0					
ANR	1340353	Identifier	bin		1340339	0					
ANR	1340354	Argument	""".comment"""		1340339	1					
ANR	1340355	PrimaryExpression	""".comment"""		1340339	0					
ANR	1340356	IfStatement	if ( ! section )		1340339	1					
ANR	1340357	Condition	! section	3910:5:116377:116384	1340339	0	True				
ANR	1340358	UnaryOperationExpression	! section		1340339	0					
ANR	1340359	UnaryOperator	!		1340339	0					
ANR	1340360	Identifier	section		1340339	1					
ANR	1340361	CompoundStatement		3:15:82:82	1340339	1					
ANR	1340362	ReturnStatement	return NULL ;	3911:2:116391:116402	1340339	0	True				
ANR	1340363	Identifier	NULL		1340339	0					
ANR	1340364	IdentifierDeclStatement	ut64 off = section -> offset ;	3914:1:116409:116435	1340339	2	True				
ANR	1340365	IdentifierDecl	off = section -> offset		1340339	0					
ANR	1340366	IdentifierDeclType	ut64		1340339	0					
ANR	1340367	Identifier	off		1340339	1					
ANR	1340368	AssignmentExpression	off = section -> offset		1340339	2		=			
ANR	1340369	Identifier	off		1340339	0					
ANR	1340370	PtrMemberAccess	section -> offset		1340339	1					
ANR	1340371	Identifier	section		1340339	0					
ANR	1340372	Identifier	offset		1340339	1					
ANR	1340373	IdentifierDeclStatement	int sz = section -> size ;	3915:1:116438:116460	1340339	3	True				
ANR	1340374	IdentifierDecl	sz = section -> size		1340339	0					
ANR	1340375	IdentifierDeclType	int		1340339	0					
ANR	1340376	Identifier	sz		1340339	1					
ANR	1340377	AssignmentExpression	sz = section -> size		1340339	2		=			
ANR	1340378	Identifier	sz		1340339	0					
ANR	1340379	PtrMemberAccess	section -> size		1340339	1					
ANR	1340380	Identifier	section		1340339	0					
ANR	1340381	Identifier	size		1340339	1					
ANR	1340382	IfStatement	if ( sz < 1 )		1340339	4					
ANR	1340383	Condition	sz < 1	3916:5:116467:116472	1340339	0	True				
ANR	1340384	RelationalExpression	sz < 1		1340339	0		<			
ANR	1340385	Identifier	sz		1340339	0					
ANR	1340386	PrimaryExpression	1		1340339	1					
ANR	1340387	CompoundStatement		9:13:170:170	1340339	1					
ANR	1340388	ReturnStatement	return NULL ;	3917:2:116479:116490	1340339	0	True				
ANR	1340389	Identifier	NULL		1340339	0					
ANR	1340390	IdentifierDeclStatement	char * buf = malloc ( sz + 1 ) ;	3919:1:116496:116523	1340339	5	True				
ANR	1340391	IdentifierDecl	* buf = malloc ( sz + 1 )		1340339	0					
ANR	1340392	IdentifierDeclType	char *		1340339	0					
ANR	1340393	Identifier	buf		1340339	1					
ANR	1340394	AssignmentExpression	* buf = malloc ( sz + 1 )		1340339	2		=			
ANR	1340395	Identifier	buf		1340339	0					
ANR	1340396	CallExpression	malloc ( sz + 1 )		1340339	1					
ANR	1340397	Callee	malloc		1340339	0					
ANR	1340398	Identifier	malloc		1340339	0					
ANR	1340399	ArgumentList	sz + 1		1340339	1					
ANR	1340400	Argument	sz + 1		1340339	0					
ANR	1340401	AdditiveExpression	sz + 1		1340339	0		+			
ANR	1340402	Identifier	sz		1340339	0					
ANR	1340403	PrimaryExpression	1		1340339	1					
ANR	1340404	IfStatement	if ( ! buf )		1340339	6					
ANR	1340405	Condition	! buf	3920:5:116530:116533	1340339	0	True				
ANR	1340406	UnaryOperationExpression	! buf		1340339	0					
ANR	1340407	UnaryOperator	!		1340339	0					
ANR	1340408	Identifier	buf		1340339	1					
ANR	1340409	CompoundStatement		13:11:231:231	1340339	1					
ANR	1340410	ReturnStatement	return NULL ;	3921:2:116540:116551	1340339	0	True				
ANR	1340411	Identifier	NULL		1340339	0					
ANR	1340412	IfStatement	"if ( r_buf_read_at ( bin -> b , off , ( ut8 * ) buf , sz ) < 1 )"		1340339	7					
ANR	1340413	Condition	"r_buf_read_at ( bin -> b , off , ( ut8 * ) buf , sz ) < 1"	3923:5:116561:116606	1340339	0	True				
ANR	1340414	RelationalExpression	"r_buf_read_at ( bin -> b , off , ( ut8 * ) buf , sz ) < 1"		1340339	0		<			
ANR	1340415	CallExpression	"r_buf_read_at ( bin -> b , off , ( ut8 * ) buf , sz )"		1340339	0					
ANR	1340416	Callee	r_buf_read_at		1340339	0					
ANR	1340417	Identifier	r_buf_read_at		1340339	0					
ANR	1340418	ArgumentList	bin -> b		1340339	1					
ANR	1340419	Argument	bin -> b		1340339	0					
ANR	1340420	PtrMemberAccess	bin -> b		1340339	0					
ANR	1340421	Identifier	bin		1340339	0					
ANR	1340422	Identifier	b		1340339	1					
ANR	1340423	Argument	off		1340339	1					
ANR	1340424	Identifier	off		1340339	0					
ANR	1340425	Argument	( ut8 * ) buf		1340339	2					
ANR	1340426	CastExpression	( ut8 * ) buf		1340339	0					
ANR	1340427	CastTarget	ut8 *		1340339	0					
ANR	1340428	Identifier	buf		1340339	1					
ANR	1340429	Argument	sz		1340339	3					
ANR	1340430	Identifier	sz		1340339	0					
ANR	1340431	PrimaryExpression	1		1340339	1					
ANR	1340432	CompoundStatement		16:53:304:304	1340339	1					
ANR	1340433	ExpressionStatement	free ( buf )	3924:2:116613:116623	1340339	0	True				
ANR	1340434	CallExpression	free ( buf )		1340339	0					
ANR	1340435	Callee	free		1340339	0					
ANR	1340436	Identifier	free		1340339	0					
ANR	1340437	ArgumentList	buf		1340339	1					
ANR	1340438	Argument	buf		1340339	0					
ANR	1340439	Identifier	buf		1340339	0					
ANR	1340440	ReturnStatement	return NULL ;	3925:2:116627:116638	1340339	1	True				
ANR	1340441	Identifier	NULL		1340339	0					
ANR	1340442	ExpressionStatement	buf [ sz ] = 0	3928:1:116645:116656	1340339	8	True				
ANR	1340443	AssignmentExpression	buf [ sz ] = 0		1340339	0		=			
ANR	1340444	ArrayIndexing	buf [ sz ]		1340339	0					
ANR	1340445	Identifier	buf		1340339	0					
ANR	1340446	Identifier	sz		1340339	1					
ANR	1340447	PrimaryExpression	0		1340339	1					
ANR	1340448	IdentifierDeclStatement	char * ptr = buf ;	3929:1:116659:116674	1340339	9	True				
ANR	1340449	IdentifierDecl	* ptr = buf		1340339	0					
ANR	1340450	IdentifierDeclType	char *		1340339	0					
ANR	1340451	Identifier	ptr		1340339	1					
ANR	1340452	AssignmentExpression	* ptr = buf		1340339	2		=			
ANR	1340453	Identifier	buf		1340339	0					
ANR	1340454	Identifier	buf		1340339	1					
ANR	1340455	DoStatement	do		1340339	10					
ANR	1340456	CompoundStatement		26:2:412:434	1340339	0					
ANR	1340457	IdentifierDeclStatement	"char * p = strchr ( ptr , '\\0' ) ;"	3932:2:116685:116713	1340339	0	True				
ANR	1340458	IdentifierDecl	"* p = strchr ( ptr , '\\0' )"		1340339	0					
ANR	1340459	IdentifierDeclType	char *		1340339	0					
ANR	1340460	Identifier	p		1340339	1					
ANR	1340461	AssignmentExpression	"* p = strchr ( ptr , '\\0' )"		1340339	2		=			
ANR	1340462	Identifier	p		1340339	0					
ANR	1340463	CallExpression	"strchr ( ptr , '\\0' )"		1340339	1					
ANR	1340464	Callee	strchr		1340339	0					
ANR	1340465	Identifier	strchr		1340339	0					
ANR	1340466	ArgumentList	ptr		1340339	1					
ANR	1340467	Argument	ptr		1340339	0					
ANR	1340468	Identifier	ptr		1340339	0					
ANR	1340469	Argument	'\\0'		1340339	1					
ANR	1340470	PrimaryExpression	'\\0'		1340339	0					
ANR	1340471	IdentifierDeclStatement	size_t psz = ( p - ptr ) ;	3933:2:116717:116739	1340339	1	True				
ANR	1340472	IdentifierDecl	psz = ( p - ptr )		1340339	0					
ANR	1340473	IdentifierDeclType	size_t		1340339	0					
ANR	1340474	Identifier	psz		1340339	1					
ANR	1340475	AssignmentExpression	psz = ( p - ptr )		1340339	2		=			
ANR	1340476	Identifier	psz		1340339	0					
ANR	1340477	AdditiveExpression	p - ptr		1340339	1		-			
ANR	1340478	Identifier	p		1340339	0					
ANR	1340479	Identifier	ptr		1340339	1					
ANR	1340480	ExpressionStatement	ptr = p	3934:2:116743:116750	1340339	2	True				
ANR	1340481	AssignmentExpression	ptr = p		1340339	0		=			
ANR	1340482	Identifier	ptr		1340339	0					
ANR	1340483	Identifier	p		1340339	1					
ANR	1340484	ExpressionStatement	sz -= psz + 1	3935:2:116754:116767	1340339	3	True				
ANR	1340485	AssignmentExpression	sz -= psz + 1		1340339	0		-=			
ANR	1340486	Identifier	sz		1340339	0					
ANR	1340487	AdditiveExpression	psz + 1		1340339	1		+			
ANR	1340488	Identifier	psz		1340339	0					
ANR	1340489	PrimaryExpression	1		1340339	1					
ANR	1340490	IfStatement	if ( sz > 1 )		1340339	4					
ANR	1340491	Condition	sz > 1	3936:6:116775:116780	1340339	0	True				
ANR	1340492	RelationalExpression	sz > 1		1340339	0		>			
ANR	1340493	Identifier	sz		1340339	0					
ANR	1340494	PrimaryExpression	1		1340339	1					
ANR	1340495	CompoundStatement		29:14:478:478	1340339	1					
ANR	1340496	ExpressionStatement	* ptr = '/'	3937:3:116788:116798	1340339	0	True				
ANR	1340497	AssignmentExpression	* ptr = '/'		1340339	0		=			
ANR	1340498	UnaryOperationExpression	* ptr		1340339	0					
ANR	1340499	UnaryOperator	*		1340339	0					
ANR	1340500	Identifier	ptr		1340339	1					
ANR	1340501	PrimaryExpression	'/'		1340339	1					
ANR	1340502	ExpressionStatement	ptr ++	3938:3:116803:116808	1340339	1	True				
ANR	1340503	PostIncDecOperationExpression	ptr ++		1340339	0					
ANR	1340504	Identifier	ptr		1340339	0					
ANR	1340505	IncDec	++		1340339	1					
ANR	1340506	Condition	sz > 0	3940:10:116824:116829	1340339	1	True				
ANR	1340507	RelationalExpression	sz > 0		1340339	0		>			
ANR	1340508	Identifier	sz		1340339	0					
ANR	1340509	PrimaryExpression	0		1340339	1					
ANR	1340510	ReturnStatement	return buf ;	3942:1:116835:116845	1340339	11	True				
ANR	1340511	Identifier	buf		1340339	0					
ANR	1340512	ReturnType	Elf_		1340339	1					
ANR	1340513	Identifier	( r_bin_elf_compiler )		1340339	2					
ANR	1340514	Identifier	r_bin_elf_compiler		1340339	3					
ANR	1340515	ParameterList	ELFOBJ * bin		1340339	4					
ANR	1340516	Parameter	ELFOBJ * bin	3908:31:116291:116301	1340339	0	True				
ANR	1340517	ParameterType	ELFOBJ *		1340339	0					
ANR	1340518	Identifier	bin		1340339	1					
ANR	1340519	CFGEntryNode	ENTRY		1340339		True				
ANR	1340520	CFGExitNode	EXIT		1340339		True				
ANR	1340521	Symbol	* section		1340339						
ANR	1340522	Symbol	malloc		1340339						
ANR	1340523	Symbol	bin -> b		1340339						
ANR	1340524	Symbol	* buf		1340339						
ANR	1340525	Symbol	NULL		1340339						
ANR	1340526	Symbol	bin		1340339						
ANR	1340527	Symbol	sz		1340339						
ANR	1340528	Symbol	get_section_by_name		1340339						
ANR	1340529	Symbol	strchr		1340339						
ANR	1340530	Symbol	section		1340339						
ANR	1340531	Symbol	off		1340339						
ANR	1340532	Symbol	* bin		1340339						
ANR	1340533	Symbol	* sz		1340339						
ANR	1340534	Symbol	ptr		1340339						
ANR	1340535	Symbol	p		1340339						
ANR	1340536	Symbol	buf		1340339						
ANR	1340537	Symbol	psz		1340339						
ANR	1340538	Symbol	r_buf_read_at		1340339						
ANR	1340539	Symbol	* ptr		1340339						
ANR	1340540	Symbol	section -> size		1340339						
ANR	1340541	Symbol	section -> offset		1340339						
