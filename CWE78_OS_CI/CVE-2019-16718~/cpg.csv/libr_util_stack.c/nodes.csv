command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5219402	File	data/converged/CVE-2019-16718~_radare2/libr_util_stack.c								
ANR	5219403	Function	r_stack_new	5:0:75:293							
ANR	5219404	FunctionDef	r_stack_new (ut32 n)		5219403	0					
ANR	5219405	CompoundStatement		5:34:109:293	5219403	0					
ANR	5219406	IdentifierDeclStatement	RStack * s = R_NEW0 ( RStack ) ;	6:1:112:139	5219403	0	True				
ANR	5219407	IdentifierDecl	* s = R_NEW0 ( RStack )		5219403	0					
ANR	5219408	IdentifierDeclType	RStack *		5219403	0					
ANR	5219409	Identifier	s		5219403	1					
ANR	5219410	AssignmentExpression	* s = R_NEW0 ( RStack )		5219403	2		=			
ANR	5219411	Identifier	s		5219403	0					
ANR	5219412	CallExpression	R_NEW0 ( RStack )		5219403	1					
ANR	5219413	Callee	R_NEW0		5219403	0					
ANR	5219414	Identifier	R_NEW0		5219403	0					
ANR	5219415	ArgumentList	RStack		5219403	1					
ANR	5219416	Argument	RStack		5219403	0					
ANR	5219417	Identifier	RStack		5219403	0					
ANR	5219418	IfStatement	if ( ! s )		5219403	1					
ANR	5219419	Condition	! s	7:5:146:147	5219403	0	True				
ANR	5219420	UnaryOperationExpression	! s		5219403	0					
ANR	5219421	UnaryOperator	!		5219403	0					
ANR	5219422	Identifier	s		5219403	1					
ANR	5219423	CompoundStatement		3:9:40:40	5219403	1					
ANR	5219424	ReturnStatement	return NULL ;	8:2:154:165	5219403	0	True				
ANR	5219425	Identifier	NULL		5219403	0					
ANR	5219426	Statement	s	10:1:171:171	5219403	2	True				
ANR	5219427	Statement	->	10:2:172:173	5219403	3	True				
ANR	5219428	Statement	elems	10:4:174:178	5219403	4	True				
ANR	5219429	Statement	=	10:10:180:180	5219403	5	True				
ANR	5219430	Statement	R_NEWS0	10:12:182:188	5219403	6	True				
ANR	5219431	Statement	(	10:20:190:190	5219403	7	True				
ANR	5219432	Statement	void	10:21:191:194	5219403	8	True				
ANR	5219433	Statement	*	10:26:196:196	5219403	9	True				
ANR	5219434	Statement	","	10:27:197:197	5219403	10	True				
ANR	5219435	Statement	n	10:29:199:199	5219403	11	True				
ANR	5219436	Statement	)	10:30:200:200	5219403	12	True				
ANR	5219437	ExpressionStatement		10:31:201:201	5219403	13	True				
ANR	5219438	IfStatement	if ( ! s -> elems )		5219403	14					
ANR	5219439	Condition	! s -> elems	11:5:208:216	5219403	0	True				
ANR	5219440	UnaryOperationExpression	! s -> elems		5219403	0					
ANR	5219441	UnaryOperator	!		5219403	0					
ANR	5219442	PtrMemberAccess	s -> elems		5219403	1					
ANR	5219443	Identifier	s		5219403	0					
ANR	5219444	Identifier	elems		5219403	1					
ANR	5219445	CompoundStatement		7:16:109:109	5219403	1					
ANR	5219446	ExpressionStatement	free ( s )	12:2:223:231	5219403	0	True				
ANR	5219447	CallExpression	free ( s )		5219403	0					
ANR	5219448	Callee	free		5219403	0					
ANR	5219449	Identifier	free		5219403	0					
ANR	5219450	ArgumentList	s		5219403	1					
ANR	5219451	Argument	s		5219403	0					
ANR	5219452	Identifier	s		5219403	0					
ANR	5219453	ReturnStatement	return NULL ;	13:2:235:246	5219403	1	True				
ANR	5219454	Identifier	NULL		5219403	0					
ANR	5219455	ExpressionStatement	s -> n_elems = n	15:1:252:266	5219403	15	True				
ANR	5219456	AssignmentExpression	s -> n_elems = n		5219403	0		=			
ANR	5219457	PtrMemberAccess	s -> n_elems		5219403	0					
ANR	5219458	Identifier	s		5219403	0					
ANR	5219459	Identifier	n_elems		5219403	1					
ANR	5219460	Identifier	n		5219403	1					
ANR	5219461	ExpressionStatement	s -> top = - 1	16:1:269:280	5219403	16	True				
ANR	5219462	AssignmentExpression	s -> top = - 1		5219403	0		=			
ANR	5219463	PtrMemberAccess	s -> top		5219403	0					
ANR	5219464	Identifier	s		5219403	0					
ANR	5219465	Identifier	top		5219403	1					
ANR	5219466	UnaryOperationExpression	- 1		5219403	1					
ANR	5219467	UnaryOperator	-		5219403	0					
ANR	5219468	PrimaryExpression	1		5219403	1					
ANR	5219469	ReturnStatement	return s ;	17:1:283:291	5219403	17	True				
ANR	5219470	Identifier	s		5219403	0					
ANR	5219471	ReturnType	R_API RStack *		5219403	1					
ANR	5219472	Identifier	r_stack_new		5219403	2					
ANR	5219473	ParameterList	ut32 n		5219403	3					
ANR	5219474	Parameter	ut32 n	5:26:101:106	5219403	0	True				
ANR	5219475	ParameterType	ut32		5219403	0					
ANR	5219476	Identifier	n		5219403	1					
ANR	5219477	CFGEntryNode	ENTRY		5219403		True				
ANR	5219478	CFGExitNode	EXIT		5219403		True				
ANR	5219479	Symbol	R_NEW0		5219403						
ANR	5219480	Symbol	s -> n_elems		5219403						
ANR	5219481	Symbol	s -> top		5219403						
ANR	5219482	Symbol	RStack		5219403						
ANR	5219483	Symbol	s		5219403						
ANR	5219484	Symbol	NULL		5219403						
ANR	5219485	Symbol	* s		5219403						
ANR	5219486	Symbol	s -> elems		5219403						
ANR	5219487	Symbol	n		5219403						
ANR	5219488	Function	r_stack_newf	20:0:296:416							
ANR	5219489	FunctionDef	"r_stack_newf (ut32 n , RStackFree f)"		5219488	0					
ANR	5219490	CompoundStatement		20:49:345:416	5219488	0					
ANR	5219491	IdentifierDeclStatement	RStack * s = r_stack_new ( n ) ;	21:1:348:375	5219488	0	True				
ANR	5219492	IdentifierDecl	* s = r_stack_new ( n )		5219488	0					
ANR	5219493	IdentifierDeclType	RStack *		5219488	0					
ANR	5219494	Identifier	s		5219488	1					
ANR	5219495	AssignmentExpression	* s = r_stack_new ( n )		5219488	2		=			
ANR	5219496	Identifier	s		5219488	0					
ANR	5219497	CallExpression	r_stack_new ( n )		5219488	1					
ANR	5219498	Callee	r_stack_new		5219488	0					
ANR	5219499	Identifier	r_stack_new		5219488	0					
ANR	5219500	ArgumentList	n		5219488	1					
ANR	5219501	Argument	n		5219488	0					
ANR	5219502	Identifier	n		5219488	0					
ANR	5219503	IfStatement	if ( s )		5219488	1					
ANR	5219504	Condition	s	22:5:382:382	5219488	0	True				
ANR	5219505	Identifier	s		5219488	0					
ANR	5219506	CompoundStatement		3:8:39:39	5219488	1					
ANR	5219507	ExpressionStatement	s -> free = f	23:2:389:400	5219488	0	True				
ANR	5219508	AssignmentExpression	s -> free = f		5219488	0		=			
ANR	5219509	PtrMemberAccess	s -> free		5219488	0					
ANR	5219510	Identifier	s		5219488	0					
ANR	5219511	Identifier	free		5219488	1					
ANR	5219512	Identifier	f		5219488	1					
ANR	5219513	ReturnStatement	return s ;	25:1:406:414	5219488	2	True				
ANR	5219514	Identifier	s		5219488	0					
ANR	5219515	ReturnType	R_API RStack *		5219488	1					
ANR	5219516	Identifier	r_stack_newf		5219488	2					
ANR	5219517	ParameterList	"ut32 n , RStackFree f"		5219488	3					
ANR	5219518	Parameter	ut32 n	20:27:323:328	5219488	0	True				
ANR	5219519	ParameterType	ut32		5219488	0					
ANR	5219520	Identifier	n		5219488	1					
ANR	5219521	Parameter	RStackFree f	20:35:331:342	5219488	1	True				
ANR	5219522	ParameterType	RStackFree		5219488	0					
ANR	5219523	Identifier	f		5219488	1					
ANR	5219524	CFGEntryNode	ENTRY		5219488		True				
ANR	5219525	CFGExitNode	EXIT		5219488		True				
ANR	5219526	Symbol	s		5219488						
ANR	5219527	Symbol	s -> free		5219488						
ANR	5219528	Symbol	f		5219488						
ANR	5219529	Symbol	r_stack_new		5219488						
ANR	5219530	Symbol	* s		5219488						
ANR	5219531	Symbol	n		5219488						
ANR	5219532	Function	r_stack_free	28:0:419:598							
ANR	5219533	FunctionDef	r_stack_free (RStack * s)		5219532	0					
ANR	5219534	CompoundStatement		28:35:454:598	5219532	0					
ANR	5219535	IfStatement	if ( s )		5219532	0					
ANR	5219536	Condition	s	29:5:461:461	5219532	0	True				
ANR	5219537	Identifier	s		5219532	0					
ANR	5219538	CompoundStatement		2:8:9:9	5219532	1					
ANR	5219539	IfStatement	if ( s -> free )		5219532	0					
ANR	5219540	Condition	s -> free	30:6:472:478	5219532	0	True				
ANR	5219541	PtrMemberAccess	s -> free		5219532	0					
ANR	5219542	Identifier	s		5219532	0					
ANR	5219543	Identifier	free		5219532	1					
ANR	5219544	CompoundStatement		4:3:31:36	5219532	1					
ANR	5219545	IdentifierDeclStatement	int i ;	31:3:486:491	5219532	0	True				
ANR	5219546	IdentifierDecl	i		5219532	0					
ANR	5219547	IdentifierDeclType	int		5219532	0					
ANR	5219548	Identifier	i		5219532	1					
ANR	5219549	ForStatement	for ( i = 0 ; i <= s -> top ; i ++ )		5219532	1					
ANR	5219550	ForInit	i = 0 ;	32:8:501:506	5219532	0	True				
ANR	5219551	AssignmentExpression	i = 0		5219532	0		=			
ANR	5219552	Identifier	i		5219532	0					
ANR	5219553	PrimaryExpression	0		5219532	1					
ANR	5219554	Condition	i <= s -> top	32:15:508:518	5219532	1	True				
ANR	5219555	RelationalExpression	i <= s -> top		5219532	0		<=			
ANR	5219556	Identifier	i		5219532	0					
ANR	5219557	PtrMemberAccess	s -> top		5219532	1					
ANR	5219558	Identifier	s		5219532	0					
ANR	5219559	Identifier	top		5219532	1					
ANR	5219560	PostIncDecOperationExpression	i ++	32:28:521:523	5219532	2	True				
ANR	5219561	Identifier	i		5219532	0					
ANR	5219562	IncDec	++		5219532	1					
ANR	5219563	CompoundStatement		5:33:71:71	5219532	3					
ANR	5219564	ExpressionStatement	s -> free ( s -> elems [ i ] )	33:4:532:553	5219532	0	True				
ANR	5219565	CallExpression	s -> free ( s -> elems [ i ] )		5219532	0					
ANR	5219566	Callee	s -> free		5219532	0					
ANR	5219567	PtrMemberAccess	s -> free		5219532	0					
ANR	5219568	Identifier	s		5219532	0					
ANR	5219569	Identifier	free		5219532	1					
ANR	5219570	ArgumentList	s -> elems [ i ]		5219532	1					
ANR	5219571	Argument	s -> elems [ i ]		5219532	0					
ANR	5219572	ArrayIndexing	s -> elems [ i ]		5219532	0					
ANR	5219573	PtrMemberAccess	s -> elems		5219532	0					
ANR	5219574	Identifier	s		5219532	0					
ANR	5219575	Identifier	elems		5219532	1					
ANR	5219576	Identifier	i		5219532	1					
ANR	5219577	ExpressionStatement	free ( s -> elems )	36:2:566:581	5219532	1	True				
ANR	5219578	CallExpression	free ( s -> elems )		5219532	0					
ANR	5219579	Callee	free		5219532	0					
ANR	5219580	Identifier	free		5219532	0					
ANR	5219581	ArgumentList	s -> elems		5219532	1					
ANR	5219582	Argument	s -> elems		5219532	0					
ANR	5219583	PtrMemberAccess	s -> elems		5219532	0					
ANR	5219584	Identifier	s		5219532	0					
ANR	5219585	Identifier	elems		5219532	1					
ANR	5219586	ExpressionStatement	free ( s )	37:2:585:593	5219532	2	True				
ANR	5219587	CallExpression	free ( s )		5219532	0					
ANR	5219588	Callee	free		5219532	0					
ANR	5219589	Identifier	free		5219532	0					
ANR	5219590	ArgumentList	s		5219532	1					
ANR	5219591	Argument	s		5219532	0					
ANR	5219592	Identifier	s		5219532	0					
ANR	5219593	ReturnType	R_API void		5219532	1					
ANR	5219594	Identifier	r_stack_free		5219532	2					
ANR	5219595	ParameterList	RStack * s		5219532	3					
ANR	5219596	Parameter	RStack * s	28:24:443:451	5219532	0	True				
ANR	5219597	ParameterType	RStack *		5219532	0					
ANR	5219598	Identifier	s		5219532	1					
ANR	5219599	CFGEntryNode	ENTRY		5219532		True				
ANR	5219600	CFGExitNode	EXIT		5219532		True				
ANR	5219601	Symbol	s -> top		5219532						
ANR	5219602	Symbol	s		5219532						
ANR	5219603	Symbol	* i		5219532						
ANR	5219604	Symbol	* s -> elems		5219532						
ANR	5219605	Symbol	s -> free		5219532						
ANR	5219606	Symbol	* * s		5219532						
ANR	5219607	Symbol	i		5219532						
ANR	5219608	Symbol	* s		5219532						
ANR	5219609	Symbol	s -> elems		5219532						
ANR	5219610	Function	r_stack_push	41:0:601:884							
ANR	5219611	FunctionDef	"r_stack_push (RStack * s , void * el)"		5219610	0					
ANR	5219612	CompoundStatement		41:44:645:884	5219610	0					
ANR	5219613	IfStatement	if ( s -> top == s -> n_elems - 1 )		5219610	0					
ANR	5219614	Condition	s -> top == s -> n_elems - 1	42:5:652:675	5219610	0	True				
ANR	5219615	EqualityExpression	s -> top == s -> n_elems - 1		5219610	0		==			
ANR	5219616	PtrMemberAccess	s -> top		5219610	0					
ANR	5219617	Identifier	s		5219610	0					
ANR	5219618	Identifier	top		5219610	1					
ANR	5219619	AdditiveExpression	s -> n_elems - 1		5219610	1		-			
ANR	5219620	PtrMemberAccess	s -> n_elems		5219610	0					
ANR	5219621	Identifier	s		5219610	0					
ANR	5219622	Identifier	n_elems		5219610	1					
ANR	5219623	PrimaryExpression	1		5219610	1					
ANR	5219624	CompoundStatement		2:31:32:32	5219610	1					
ANR	5219625	ExpressionStatement	s -> n_elems *= 2	44:2:711:726	5219610	0	True				
ANR	5219626	AssignmentExpression	s -> n_elems *= 2		5219610	0		*=			
ANR	5219627	PtrMemberAccess	s -> n_elems		5219610	0					
ANR	5219628	Identifier	s		5219610	0					
ANR	5219629	Identifier	n_elems		5219610	1					
ANR	5219630	PrimaryExpression	2		5219610	1					
ANR	5219631	ExpressionStatement	"s -> elems = realloc ( s -> elems , s -> n_elems * sizeof ( void * ) )"	45:2:730:789	5219610	1	True				
ANR	5219632	AssignmentExpression	"s -> elems = realloc ( s -> elems , s -> n_elems * sizeof ( void * ) )"		5219610	0		=			
ANR	5219633	PtrMemberAccess	s -> elems		5219610	0					
ANR	5219634	Identifier	s		5219610	0					
ANR	5219635	Identifier	elems		5219610	1					
ANR	5219636	CallExpression	"realloc ( s -> elems , s -> n_elems * sizeof ( void * ) )"		5219610	1					
ANR	5219637	Callee	realloc		5219610	0					
ANR	5219638	Identifier	realloc		5219610	0					
ANR	5219639	ArgumentList	s -> elems		5219610	1					
ANR	5219640	Argument	s -> elems		5219610	0					
ANR	5219641	PtrMemberAccess	s -> elems		5219610	0					
ANR	5219642	Identifier	s		5219610	0					
ANR	5219643	Identifier	elems		5219610	1					
ANR	5219644	Argument	s -> n_elems * sizeof ( void * )		5219610	1					
ANR	5219645	MultiplicativeExpression	s -> n_elems * sizeof ( void * )		5219610	0		*			
ANR	5219646	PtrMemberAccess	s -> n_elems		5219610	0					
ANR	5219647	Identifier	s		5219610	0					
ANR	5219648	Identifier	n_elems		5219610	1					
ANR	5219649	SizeofExpression	sizeof ( void * )		5219610	1					
ANR	5219650	Sizeof	sizeof		5219610	0					
ANR	5219651	SizeofOperand	void *		5219610	1					
ANR	5219652	IfStatement	if ( ! s -> elems )		5219610	2					
ANR	5219653	Condition	! s -> elems	46:6:797:805	5219610	0	True				
ANR	5219654	UnaryOperationExpression	! s -> elems		5219610	0					
ANR	5219655	UnaryOperator	!		5219610	0					
ANR	5219656	PtrMemberAccess	s -> elems		5219610	1					
ANR	5219657	Identifier	s		5219610	0					
ANR	5219658	Identifier	elems		5219610	1					
ANR	5219659	CompoundStatement		6:17:162:162	5219610	1					
ANR	5219660	ReturnStatement	return false ;	47:3:813:825	5219610	0	True				
ANR	5219661	Identifier	false		5219610	0					
ANR	5219662	ExpressionStatement	s -> top ++	51:1:836:844	5219610	1	True				
ANR	5219663	PostIncDecOperationExpression	s -> top ++		5219610	0					
ANR	5219664	PtrMemberAccess	s -> top		5219610	0					
ANR	5219665	Identifier	s		5219610	0					
ANR	5219666	Identifier	top		5219610	1					
ANR	5219667	IncDec	++		5219610	1					
ANR	5219668	ExpressionStatement	s -> elems [ s -> top ] = el	52:1:847:868	5219610	2	True				
ANR	5219669	AssignmentExpression	s -> elems [ s -> top ] = el		5219610	0		=			
ANR	5219670	ArrayIndexing	s -> elems [ s -> top ]		5219610	0					
ANR	5219671	PtrMemberAccess	s -> elems		5219610	0					
ANR	5219672	Identifier	s		5219610	0					
ANR	5219673	Identifier	elems		5219610	1					
ANR	5219674	PtrMemberAccess	s -> top		5219610	1					
ANR	5219675	Identifier	s		5219610	0					
ANR	5219676	Identifier	top		5219610	1					
ANR	5219677	Identifier	el		5219610	1					
ANR	5219678	ReturnStatement	return true ;	53:1:871:882	5219610	3	True				
ANR	5219679	Identifier	true		5219610	0					
ANR	5219680	ReturnType	R_API int		5219610	1					
ANR	5219681	Identifier	r_stack_push		5219610	2					
ANR	5219682	ParameterList	"RStack * s , void * el"		5219610	3					
ANR	5219683	Parameter	RStack * s	41:23:624:632	5219610	0	True				
ANR	5219684	ParameterType	RStack *		5219610	0					
ANR	5219685	Identifier	s		5219610	1					
ANR	5219686	Parameter	void * el	41:34:635:642	5219610	1	True				
ANR	5219687	ParameterType	void *		5219610	0					
ANR	5219688	Identifier	el		5219610	1					
ANR	5219689	CFGEntryNode	ENTRY		5219610		True				
ANR	5219690	CFGExitNode	EXIT		5219610		True				
ANR	5219691	Symbol	s -> n_elems		5219610						
ANR	5219692	Symbol	s -> top		5219610						
ANR	5219693	Symbol	s		5219610						
ANR	5219694	Symbol	* s -> elems		5219610						
ANR	5219695	Symbol	* s -> top		5219610						
ANR	5219696	Symbol	el		5219610						
ANR	5219697	Symbol	false		5219610						
ANR	5219698	Symbol	* * s		5219610						
ANR	5219699	Symbol	true		5219610						
ANR	5219700	Symbol	realloc		5219610						
ANR	5219701	Symbol	* s		5219610						
ANR	5219702	Symbol	s -> elems		5219610						
ANR	5219703	Function	r_stack_pop	58:0:944:1081							
ANR	5219704	FunctionDef	r_stack_pop (RStack * s)		5219703	0					
ANR	5219705	CompoundStatement		58:35:979:1081	5219703	0					
ANR	5219706	IdentifierDeclStatement	void * res ;	59:1:982:991	5219703	0	True				
ANR	5219707	IdentifierDecl	* res		5219703	0					
ANR	5219708	IdentifierDeclType	void *		5219703	0					
ANR	5219709	Identifier	res		5219703	1					
ANR	5219710	IfStatement	if ( s -> top == - 1 )		5219703	1					
ANR	5219711	Condition	s -> top == - 1	60:5:998:1009	5219703	0	True				
ANR	5219712	EqualityExpression	s -> top == - 1		5219703	0		==			
ANR	5219713	PtrMemberAccess	s -> top		5219703	0					
ANR	5219714	Identifier	s		5219703	0					
ANR	5219715	Identifier	top		5219703	1					
ANR	5219716	UnaryOperationExpression	- 1		5219703	1					
ANR	5219717	UnaryOperator	-		5219703	0					
ANR	5219718	PrimaryExpression	1		5219703	1					
ANR	5219719	CompoundStatement		3:19:32:32	5219703	1					
ANR	5219720	ReturnStatement	return NULL ;	61:2:1016:1027	5219703	0	True				
ANR	5219721	Identifier	NULL		5219703	0					
ANR	5219722	ExpressionStatement	res = s -> elems [ s -> top ]	63:1:1033:1055	5219703	2	True				
ANR	5219723	AssignmentExpression	res = s -> elems [ s -> top ]		5219703	0		=			
ANR	5219724	Identifier	res		5219703	0					
ANR	5219725	ArrayIndexing	s -> elems [ s -> top ]		5219703	1					
ANR	5219726	PtrMemberAccess	s -> elems		5219703	0					
ANR	5219727	Identifier	s		5219703	0					
ANR	5219728	Identifier	elems		5219703	1					
ANR	5219729	PtrMemberAccess	s -> top		5219703	1					
ANR	5219730	Identifier	s		5219703	0					
ANR	5219731	Identifier	top		5219703	1					
ANR	5219732	ExpressionStatement	s -> top --	64:1:1058:1066	5219703	3	True				
ANR	5219733	PostIncDecOperationExpression	s -> top --		5219703	0					
ANR	5219734	PtrMemberAccess	s -> top		5219703	0					
ANR	5219735	Identifier	s		5219703	0					
ANR	5219736	Identifier	top		5219703	1					
ANR	5219737	IncDec	--		5219703	1					
ANR	5219738	ReturnStatement	return res ;	65:1:1069:1079	5219703	4	True				
ANR	5219739	Identifier	res		5219703	0					
ANR	5219740	ReturnType	R_API void *		5219703	1					
ANR	5219741	Identifier	r_stack_pop		5219703	2					
ANR	5219742	ParameterList	RStack * s		5219703	3					
ANR	5219743	Parameter	RStack * s	58:24:968:976	5219703	0	True				
ANR	5219744	ParameterType	RStack *		5219703	0					
ANR	5219745	Identifier	s		5219703	1					
ANR	5219746	CFGEntryNode	ENTRY		5219703		True				
ANR	5219747	CFGExitNode	EXIT		5219703		True				
ANR	5219748	Symbol	res		5219703						
ANR	5219749	Symbol	s -> top		5219703						
ANR	5219750	Symbol	s		5219703						
ANR	5219751	Symbol	NULL		5219703						
ANR	5219752	Symbol	* s -> elems		5219703						
ANR	5219753	Symbol	* s -> top		5219703						
ANR	5219754	Symbol	* * s		5219703						
ANR	5219755	Symbol	* s		5219703						
ANR	5219756	Symbol	s -> elems		5219703						
ANR	5219757	Function	r_stack_is_empty	68:0:1084:1147							
ANR	5219758	FunctionDef	r_stack_is_empty (RStack * s)		5219757	0					
ANR	5219759	CompoundStatement		68:39:1123:1147	5219757	0					
ANR	5219760	ReturnStatement	return s -> top == - 1 ;	69:1:1126:1145	5219757	0	True				
ANR	5219761	EqualityExpression	s -> top == - 1		5219757	0		==			
ANR	5219762	PtrMemberAccess	s -> top		5219757	0					
ANR	5219763	Identifier	s		5219757	0					
ANR	5219764	Identifier	top		5219757	1					
ANR	5219765	UnaryOperationExpression	- 1		5219757	1					
ANR	5219766	UnaryOperator	-		5219757	0					
ANR	5219767	PrimaryExpression	1		5219757	1					
ANR	5219768	ReturnType	R_API bool		5219757	1					
ANR	5219769	Identifier	r_stack_is_empty		5219757	2					
ANR	5219770	ParameterList	RStack * s		5219757	3					
ANR	5219771	Parameter	RStack * s	68:28:1112:1120	5219757	0	True				
ANR	5219772	ParameterType	RStack *		5219757	0					
ANR	5219773	Identifier	s		5219757	1					
ANR	5219774	CFGEntryNode	ENTRY		5219757		True				
ANR	5219775	CFGExitNode	EXIT		5219757		True				
ANR	5219776	Symbol	s -> top		5219757						
ANR	5219777	Symbol	s		5219757						
ANR	5219778	Symbol	* s		5219757						
ANR	5219779	Function	r_stack_size	72:6:1156:1231							
ANR	5219780	FunctionDef	r_stack_size (RStack * s)		5219779	0					
ANR	5219781	CompoundStatement		72:43:1193:1231	5219779	0					
ANR	5219782	ReturnStatement	return ( unsigned int ) ( s -> top + 1 ) ;	73:1:1196:1229	5219779	0	True				
ANR	5219783	CastExpression	( unsigned int ) ( s -> top + 1 )		5219779	0					
ANR	5219784	CastTarget	unsigned int		5219779	0					
ANR	5219785	AdditiveExpression	s -> top + 1		5219779	1		+			
ANR	5219786	PtrMemberAccess	s -> top		5219779	0					
ANR	5219787	Identifier	s		5219779	0					
ANR	5219788	Identifier	top		5219779	1					
ANR	5219789	PrimaryExpression	1		5219779	1					
ANR	5219790	ReturnType	unsigned int		5219779	1					
ANR	5219791	Identifier	r_stack_size		5219779	2					
ANR	5219792	ParameterList	RStack * s		5219779	3					
ANR	5219793	Parameter	RStack * s	72:32:1182:1190	5219779	0	True				
ANR	5219794	ParameterType	RStack *		5219779	0					
ANR	5219795	Identifier	s		5219779	1					
ANR	5219796	CFGEntryNode	ENTRY		5219779		True				
ANR	5219797	CFGExitNode	EXIT		5219779		True				
ANR	5219798	Symbol	s -> top		5219779						
ANR	5219799	Symbol	s		5219779						
ANR	5219800	Symbol	* s		5219779						
ANR	5219801	Function	r_stack_peek	76:0:1234:1371							
ANR	5219802	FunctionDef	r_stack_peek (RStack * s)		5219801	0					
ANR	5219803	CompoundStatement		76:36:1270:1371	5219801	0					
ANR	5219804	IdentifierDeclStatement	void * res ;	77:1:1273:1282	5219801	0	True				
ANR	5219805	IdentifierDecl	* res		5219801	0					
ANR	5219806	IdentifierDeclType	void *		5219801	0					
ANR	5219807	Identifier	res		5219801	1					
ANR	5219808	IfStatement	if ( ! r_stack_is_empty ( s ) )		5219801	1					
ANR	5219809	Condition	! r_stack_is_empty ( s )	78:5:1289:1309	5219801	0	True				
ANR	5219810	UnaryOperationExpression	! r_stack_is_empty ( s )		5219801	0					
ANR	5219811	UnaryOperator	!		5219801	0					
ANR	5219812	CallExpression	r_stack_is_empty ( s )		5219801	1					
ANR	5219813	Callee	r_stack_is_empty		5219801	0					
ANR	5219814	Identifier	r_stack_is_empty		5219801	0					
ANR	5219815	ArgumentList	s		5219801	1					
ANR	5219816	Argument	s		5219801	0					
ANR	5219817	Identifier	s		5219801	0					
ANR	5219818	CompoundStatement		3:28:41:41	5219801	1					
ANR	5219819	ExpressionStatement	res = s -> elems [ s -> top ]	79:2:1316:1338	5219801	0	True				
ANR	5219820	AssignmentExpression	res = s -> elems [ s -> top ]		5219801	0		=			
ANR	5219821	Identifier	res		5219801	0					
ANR	5219822	ArrayIndexing	s -> elems [ s -> top ]		5219801	1					
ANR	5219823	PtrMemberAccess	s -> elems		5219801	0					
ANR	5219824	Identifier	s		5219801	0					
ANR	5219825	Identifier	elems		5219801	1					
ANR	5219826	PtrMemberAccess	s -> top		5219801	1					
ANR	5219827	Identifier	s		5219801	0					
ANR	5219828	Identifier	top		5219801	1					
ANR	5219829	ReturnStatement	return res ;	80:2:1342:1352	5219801	1	True				
ANR	5219830	Identifier	res		5219801	0					
ANR	5219831	ReturnStatement	return NULL ;	82:1:1358:1369	5219801	2	True				
ANR	5219832	Identifier	NULL		5219801	0					
ANR	5219833	ReturnType	R_API void *		5219801	1					
ANR	5219834	Identifier	r_stack_peek		5219801	2					
ANR	5219835	ParameterList	RStack * s		5219801	3					
ANR	5219836	Parameter	RStack * s	76:25:1259:1267	5219801	0	True				
ANR	5219837	ParameterType	RStack *		5219801	0					
ANR	5219838	Identifier	s		5219801	1					
ANR	5219839	CFGEntryNode	ENTRY		5219801		True				
ANR	5219840	CFGExitNode	EXIT		5219801		True				
ANR	5219841	Symbol	res		5219801						
ANR	5219842	Symbol	s -> top		5219801						
ANR	5219843	Symbol	s		5219801						
ANR	5219844	Symbol	* s -> elems		5219801						
ANR	5219845	Symbol	NULL		5219801						
ANR	5219846	Symbol	* s -> top		5219801						
ANR	5219847	Symbol	* * s		5219801						
ANR	5219848	Symbol	r_stack_is_empty		5219801						
ANR	5219849	Symbol	s -> elems		5219801						
ANR	5219850	Symbol	* s		5219801						
