command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5260320	File	data/converged/CVE-2019-16718~_radare2/libr_util_uleb128.c								
ANR	5260321	Function	r_uleb128	7:6:120:783							
ANR	5260322	FunctionDef	"r_uleb128 (const ut8 * data , int datalen , ut64 * v)"		5260321	0					
ANR	5260323	CompoundStatement		7:66:180:783	5260321	0					
ANR	5260324	IdentifierDeclStatement	ut8 c ;	8:1:183:188	5260321	0	True				
ANR	5260325	IdentifierDecl	c		5260321	0					
ANR	5260326	IdentifierDeclType	ut8		5260321	0					
ANR	5260327	Identifier	c		5260321	1					
ANR	5260328	IdentifierDeclStatement	"ut64 s , sum = 0 ;"	9:1:191:206	5260321	1	True				
ANR	5260329	IdentifierDecl	s		5260321	0					
ANR	5260330	IdentifierDeclType	ut64		5260321	0					
ANR	5260331	Identifier	s		5260321	1					
ANR	5260332	IdentifierDecl	sum = 0		5260321	1					
ANR	5260333	IdentifierDeclType	ut64		5260321	0					
ANR	5260334	Identifier	sum		5260321	1					
ANR	5260335	AssignmentExpression	sum = 0		5260321	2		=			
ANR	5260336	Identifier	sum		5260321	0					
ANR	5260337	PrimaryExpression	0		5260321	1					
ANR	5260338	IdentifierDeclStatement	const ut8 * data_end ;	10:1:209:228	5260321	2	True				
ANR	5260339	IdentifierDecl	* data_end		5260321	0					
ANR	5260340	IdentifierDeclType	const ut8 *		5260321	0					
ANR	5260341	Identifier	data_end		5260321	1					
ANR	5260342	IfStatement	if ( v )		5260321	3					
ANR	5260343	Condition	v	11:5:235:235	5260321	0	True				
ANR	5260344	Identifier	v		5260321	0					
ANR	5260345	CompoundStatement		5:8:57:57	5260321	1					
ANR	5260346	Statement	*	12:2:242:242	5260321	0	True				
ANR	5260347	Statement	v	12:3:243:243	5260321	1	True				
ANR	5260348	Statement	=	12:5:245:245	5260321	2	True				
ANR	5260349	Statement	0L	12:7:247:248	5260321	3	True				
ANR	5260350	ExpressionStatement	L	12:9:249:250	5260321	4	True				
ANR	5260351	Identifier	L		5260321	0					
ANR	5260352	IfStatement	if ( datalen == ST32_MAX )		5260321	4					
ANR	5260353	Condition	datalen == ST32_MAX	14:5:260:278	5260321	0	True				
ANR	5260354	EqualityExpression	datalen == ST32_MAX		5260321	0		==			
ANR	5260355	Identifier	datalen		5260321	0					
ANR	5260356	Identifier	ST32_MAX		5260321	1					
ANR	5260357	CompoundStatement		8:26:100:100	5260321	1					
ANR	5260358	ExpressionStatement	datalen = 0xffff	16:2:317:333	5260321	0	True				
ANR	5260359	AssignmentExpression	datalen = 0xffff		5260321	0		=			
ANR	5260360	Identifier	datalen		5260321	0					
ANR	5260361	PrimaryExpression	0xffff		5260321	1					
ANR	5260362	IfStatement	if ( datalen < 0 )		5260321	5					
ANR	5260363	Condition	datalen < 0	18:5:343:353	5260321	0	True				
ANR	5260364	RelationalExpression	datalen < 0		5260321	0		<			
ANR	5260365	Identifier	datalen		5260321	0					
ANR	5260366	PrimaryExpression	0		5260321	1					
ANR	5260367	CompoundStatement		12:18:175:175	5260321	1					
ANR	5260368	ReturnStatement	return NULL ;	19:2:360:371	5260321	0	True				
ANR	5260369	Identifier	NULL		5260321	0					
ANR	5260370	ExpressionStatement	data_end = data + datalen	21:1:377:402	5260321	6	True				
ANR	5260371	AssignmentExpression	data_end = data + datalen		5260321	0		=			
ANR	5260372	Identifier	data_end		5260321	0					
ANR	5260373	AdditiveExpression	data + datalen		5260321	1		+			
ANR	5260374	Identifier	data		5260321	0					
ANR	5260375	Identifier	datalen		5260321	1					
ANR	5260376	IfStatement	if ( data && datalen > 0 )		5260321	7					
ANR	5260377	Condition	data && datalen > 0	22:5:409:427	5260321	0	True				
ANR	5260378	AndExpression	data && datalen > 0		5260321	0		&&			
ANR	5260379	Identifier	data		5260321	0					
ANR	5260380	RelationalExpression	datalen > 0		5260321	1		>			
ANR	5260381	Identifier	datalen		5260321	0					
ANR	5260382	PrimaryExpression	0		5260321	1					
ANR	5260383	CompoundStatement		16:26:249:249	5260321	1					
ANR	5260384	IfStatement	if ( * data )		5260321	0					
ANR	5260385	Condition	* data	23:6:438:442	5260321	0	True				
ANR	5260386	UnaryOperationExpression	* data		5260321	0					
ANR	5260387	UnaryOperator	*		5260321	0					
ANR	5260388	Identifier	data		5260321	1					
ANR	5260389	CompoundStatement		17:13:264:264	5260321	1					
ANR	5260390	ForStatement	for ( s = 0 ; data < data_end ; s += 7 )		5260321	0					
ANR	5260391	ForInit	s = 0 ;	24:8:455:460	5260321	0	True				
ANR	5260392	AssignmentExpression	s = 0		5260321	0		=			
ANR	5260393	Identifier	s		5260321	0					
ANR	5260394	PrimaryExpression	0		5260321	1					
ANR	5260395	Condition	data < data_end	24:15:462:476	5260321	1	True				
ANR	5260396	RelationalExpression	data < data_end		5260321	0		<			
ANR	5260397	Identifier	data		5260321	0					
ANR	5260398	Identifier	data_end		5260321	1					
ANR	5260399	AssignmentExpression	s += 7	24:32:479:484	5260321	2	True	+=			
ANR	5260400	Identifier	s		5260321	0					
ANR	5260401	PrimaryExpression	7		5260321	1					
ANR	5260402	CompoundStatement		18:40:306:306	5260321	3					
ANR	5260403	ExpressionStatement	c = * ( data ++ ) & 0xff	25:4:493:513	5260321	0	True				
ANR	5260404	AssignmentExpression	c = * ( data ++ ) & 0xff		5260321	0		=			
ANR	5260405	Identifier	c		5260321	0					
ANR	5260406	BitAndExpression	* ( data ++ ) & 0xff		5260321	1		&			
ANR	5260407	UnaryOperationExpression	* ( data ++ )		5260321	0					
ANR	5260408	UnaryOperator	*		5260321	0					
ANR	5260409	PostIncDecOperationExpression	data ++		5260321	1					
ANR	5260410	Identifier	data		5260321	0					
ANR	5260411	IncDec	++		5260321	1					
ANR	5260412	PrimaryExpression	0xff		5260321	1					
ANR	5260413	IfStatement	if ( s > 63 )		5260321	1					
ANR	5260414	Condition	s > 63	26:8:523:528	5260321	0	True				
ANR	5260415	RelationalExpression	s > 63		5260321	0		>			
ANR	5260416	Identifier	s		5260321	0					
ANR	5260417	PrimaryExpression	63		5260321	1					
ANR	5260418	CompoundStatement		20:16:350:350	5260321	1					
ANR	5260419	ExpressionStatement	"eprintf ( ""r_uleb128: undefined behaviour in %d shift on ut32\\n"" , ( int ) s )"	27:5:538:610	5260321	0	True				
ANR	5260420	CallExpression	"eprintf ( ""r_uleb128: undefined behaviour in %d shift on ut32\\n"" , ( int ) s )"		5260321	0					
ANR	5260421	Callee	eprintf		5260321	0					
ANR	5260422	Identifier	eprintf		5260321	0					
ANR	5260423	ArgumentList	"""r_uleb128: undefined behaviour in %d shift on ut32\\n"""		5260321	1					
ANR	5260424	Argument	"""r_uleb128: undefined behaviour in %d shift on ut32\\n"""		5260321	0					
ANR	5260425	PrimaryExpression	"""r_uleb128: undefined behaviour in %d shift on ut32\\n"""		5260321	0					
ANR	5260426	Argument	( int ) s		5260321	1					
ANR	5260427	CastExpression	( int ) s		5260321	0					
ANR	5260428	CastTarget	int		5260321	0					
ANR	5260429	Identifier	s		5260321	1					
ANR	5260430	ElseStatement	else		5260321	0					
ANR	5260431	CompoundStatement		22:11:442:442	5260321	0					
ANR	5260432	ExpressionStatement	sum |= ( ( ut64 ) ( c & 0x7f ) << s )	29:5:630:661	5260321	0	True				
ANR	5260433	AssignmentExpression	sum |= ( ( ut64 ) ( c & 0x7f ) << s )		5260321	0		|=			
ANR	5260434	Identifier	sum		5260321	0					
ANR	5260435	ShiftExpression	( ut64 ) ( c & 0x7f ) << s		5260321	1		<<			
ANR	5260436	CastExpression	( ut64 ) ( c & 0x7f )		5260321	0					
ANR	5260437	CastTarget	ut64		5260321	0					
ANR	5260438	BitAndExpression	c & 0x7f		5260321	1		&			
ANR	5260439	Identifier	c		5260321	0					
ANR	5260440	PrimaryExpression	0x7f		5260321	1					
ANR	5260441	Identifier	s		5260321	1					
ANR	5260442	IfStatement	if ( ! ( c & 0x80 ) )		5260321	2					
ANR	5260443	Condition	! ( c & 0x80 )	31:8:677:687	5260321	0	True				
ANR	5260444	UnaryOperationExpression	! ( c & 0x80 )		5260321	0					
ANR	5260445	UnaryOperator	!		5260321	0					
ANR	5260446	BitAndExpression	c & 0x80		5260321	1		&			
ANR	5260447	Identifier	c		5260321	0					
ANR	5260448	PrimaryExpression	0x80		5260321	1					
ANR	5260449	CompoundStatement		25:21:509:509	5260321	1					
ANR	5260450	BreakStatement	break ;	32:5:697:702	5260321	0	True				
ANR	5260451	ElseStatement	else		5260321	0					
ANR	5260452	CompoundStatement		29:9:543:543	5260321	0					
ANR	5260453	ExpressionStatement	data ++	36:3:729:735	5260321	0	True				
ANR	5260454	PostIncDecOperationExpression	data ++		5260321	0					
ANR	5260455	Identifier	data		5260321	0					
ANR	5260456	IncDec	++		5260321	1					
ANR	5260457	IfStatement	if ( v )		5260321	8					
ANR	5260458	Condition	v	39:5:749:749	5260321	0	True				
ANR	5260459	Identifier	v		5260321	0					
ANR	5260460	CompoundStatement		33:8:571:571	5260321	1					
ANR	5260461	ExpressionStatement	* v = sum	40:2:756:764	5260321	0	True				
ANR	5260462	AssignmentExpression	* v = sum		5260321	0		=			
ANR	5260463	UnaryOperationExpression	* v		5260321	0					
ANR	5260464	UnaryOperator	*		5260321	0					
ANR	5260465	Identifier	v		5260321	1					
ANR	5260466	Identifier	sum		5260321	1					
ANR	5260467	ReturnStatement	return data ;	42:1:770:781	5260321	9	True				
ANR	5260468	Identifier	data		5260321	0					
ANR	5260469	ReturnType	const ut8 *		5260321	1					
ANR	5260470	Identifier	r_uleb128		5260321	2					
ANR	5260471	ParameterList	"const ut8 * data , int datalen , ut64 * v"		5260321	3					
ANR	5260472	Parameter	const ut8 * data	7:27:141:155	5260321	0	True				
ANR	5260473	ParameterType	const ut8 *		5260321	0					
ANR	5260474	Identifier	data		5260321	1					
ANR	5260475	Parameter	int datalen	7:44:158:168	5260321	1	True				
ANR	5260476	ParameterType	int		5260321	0					
ANR	5260477	Identifier	datalen		5260321	1					
ANR	5260478	Parameter	ut64 * v	7:57:171:177	5260321	2	True				
ANR	5260479	ParameterType	ut64 *		5260321	0					
ANR	5260480	Identifier	v		5260321	1					
ANR	5260481	CFGEntryNode	ENTRY		5260321		True				
ANR	5260482	CFGExitNode	EXIT		5260321		True				
ANR	5260483	Symbol	* v		5260321						
ANR	5260484	Symbol	data_end		5260321						
ANR	5260485	Symbol	c		5260321						
ANR	5260486	Symbol	s		5260321						
ANR	5260487	Symbol	NULL		5260321						
ANR	5260488	Symbol	data		5260321						
ANR	5260489	Symbol	ST32_MAX		5260321						
ANR	5260490	Symbol	v		5260321						
ANR	5260491	Symbol	sum		5260321						
ANR	5260492	Symbol	* ( data ++ )		5260321						
ANR	5260493	Symbol	* data		5260321						
ANR	5260494	Symbol	datalen		5260321						
ANR	5260495	Function	r_uleb128_decode	49:6:1001:1290							
ANR	5260496	FunctionDef	"r_uleb128_decode (const ut8 * data , int * datalen , ut64 * v)"		5260495	0					
ANR	5260497	CompoundStatement		49:74:1069:1290	5260495	0					
ANR	5260498	IdentifierDeclStatement	ut8 c = 0xff ;	50:1:1072:1084	5260495	0	True				
ANR	5260499	IdentifierDecl	c = 0xff		5260495	0					
ANR	5260500	IdentifierDeclType	ut8		5260495	0					
ANR	5260501	Identifier	c		5260495	1					
ANR	5260502	AssignmentExpression	c = 0xff		5260495	2		=			
ANR	5260503	Identifier	c		5260495	0					
ANR	5260504	PrimaryExpression	0xff		5260495	1					
ANR	5260505	IdentifierDeclStatement	"ut64 s = 0 , sum = 0 , l = 0 ;"	51:1:1087:1113	5260495	1	True				
ANR	5260506	IdentifierDecl	s = 0		5260495	0					
ANR	5260507	IdentifierDeclType	ut64		5260495	0					
ANR	5260508	Identifier	s		5260495	1					
ANR	5260509	AssignmentExpression	s = 0		5260495	2		=			
ANR	5260510	Identifier	s		5260495	0					
ANR	5260511	PrimaryExpression	0		5260495	1					
ANR	5260512	IdentifierDecl	sum = 0		5260495	1					
ANR	5260513	IdentifierDeclType	ut64		5260495	0					
ANR	5260514	Identifier	sum		5260495	1					
ANR	5260515	AssignmentExpression	sum = 0		5260495	2		=			
ANR	5260516	Identifier	sum		5260495	0					
ANR	5260517	PrimaryExpression	0		5260495	1					
ANR	5260518	IdentifierDecl	l = 0		5260495	2					
ANR	5260519	IdentifierDeclType	ut64		5260495	0					
ANR	5260520	Identifier	l		5260495	1					
ANR	5260521	AssignmentExpression	l = 0		5260495	2		=			
ANR	5260522	Identifier	l		5260495	0					
ANR	5260523	PrimaryExpression	0		5260495	1					
ANR	5260524	DoStatement	do		5260495	2					
ANR	5260525	CompoundStatement		4:4:49:49	5260495	0					
ANR	5260526	ExpressionStatement	c = * ( data ++ ) & 0xff	53:2:1123:1143	5260495	0	True				
ANR	5260527	AssignmentExpression	c = * ( data ++ ) & 0xff		5260495	0		=			
ANR	5260528	Identifier	c		5260495	0					
ANR	5260529	BitAndExpression	* ( data ++ ) & 0xff		5260495	1		&			
ANR	5260530	UnaryOperationExpression	* ( data ++ )		5260495	0					
ANR	5260531	UnaryOperator	*		5260495	0					
ANR	5260532	PostIncDecOperationExpression	data ++		5260495	1					
ANR	5260533	Identifier	data		5260495	0					
ANR	5260534	IncDec	++		5260495	1					
ANR	5260535	PrimaryExpression	0xff		5260495	1					
ANR	5260536	ExpressionStatement	sum |= ( ( ut64 ) ( c & 0x7f ) << s )	54:2:1147:1176	5260495	1	True				
ANR	5260537	AssignmentExpression	sum |= ( ( ut64 ) ( c & 0x7f ) << s )		5260495	0		|=			
ANR	5260538	Identifier	sum		5260495	0					
ANR	5260539	ShiftExpression	( ut64 ) ( c & 0x7f ) << s		5260495	1		<<			
ANR	5260540	CastExpression	( ut64 ) ( c & 0x7f )		5260495	0					
ANR	5260541	CastTarget	ut64		5260495	0					
ANR	5260542	BitAndExpression	c & 0x7f		5260495	1		&			
ANR	5260543	Identifier	c		5260495	0					
ANR	5260544	PrimaryExpression	0x7f		5260495	1					
ANR	5260545	Identifier	s		5260495	1					
ANR	5260546	ExpressionStatement	s += 7	55:2:1180:1186	5260495	2	True				
ANR	5260547	AssignmentExpression	s += 7		5260495	0		+=			
ANR	5260548	Identifier	s		5260495	0					
ANR	5260549	PrimaryExpression	7		5260495	1					
ANR	5260550	ExpressionStatement	l ++	56:2:1190:1193	5260495	3	True				
ANR	5260551	PostIncDecOperationExpression	l ++		5260495	0					
ANR	5260552	Identifier	l		5260495	0					
ANR	5260553	IncDec	++		5260495	1					
ANR	5260554	Condition	c & 0x80	57:10:1205:1212	5260495	1	True				
ANR	5260555	BitAndExpression	c & 0x80		5260495	0		&			
ANR	5260556	Identifier	c		5260495	0					
ANR	5260557	PrimaryExpression	0x80		5260495	1					
ANR	5260558	IfStatement	if ( v )		5260495	3					
ANR	5260559	Condition	v	58:5:1221:1221	5260495	0	True				
ANR	5260560	Identifier	v		5260495	0					
ANR	5260561	CompoundStatement		10:8:154:154	5260495	1					
ANR	5260562	ExpressionStatement	* v = sum	59:2:1228:1236	5260495	0	True				
ANR	5260563	AssignmentExpression	* v = sum		5260495	0		=			
ANR	5260564	UnaryOperationExpression	* v		5260495	0					
ANR	5260565	UnaryOperator	*		5260495	0					
ANR	5260566	Identifier	v		5260495	1					
ANR	5260567	Identifier	sum		5260495	1					
ANR	5260568	IfStatement	if ( datalen )		5260495	4					
ANR	5260569	Condition	datalen	61:5:1246:1252	5260495	0	True				
ANR	5260570	Identifier	datalen		5260495	0					
ANR	5260571	CompoundStatement		13:14:185:185	5260495	1					
ANR	5260572	ExpressionStatement	* datalen = l	62:2:1259:1271	5260495	0	True				
ANR	5260573	AssignmentExpression	* datalen = l		5260495	0		=			
ANR	5260574	UnaryOperationExpression	* datalen		5260495	0					
ANR	5260575	UnaryOperator	*		5260495	0					
ANR	5260576	Identifier	datalen		5260495	1					
ANR	5260577	Identifier	l		5260495	1					
ANR	5260578	ReturnStatement	return data ;	64:1:1277:1288	5260495	5	True				
ANR	5260579	Identifier	data		5260495	0					
ANR	5260580	ReturnType	const ut8 *		5260495	1					
ANR	5260581	Identifier	r_uleb128_decode		5260495	2					
ANR	5260582	ParameterList	"const ut8 * data , int * datalen , ut64 * v"		5260495	3					
ANR	5260583	Parameter	const ut8 * data	49:34:1029:1043	5260495	0	True				
ANR	5260584	ParameterType	const ut8 *		5260495	0					
ANR	5260585	Identifier	data		5260495	1					
ANR	5260586	Parameter	int * datalen	49:51:1046:1057	5260495	1	True				
ANR	5260587	ParameterType	int *		5260495	0					
ANR	5260588	Identifier	datalen		5260495	1					
ANR	5260589	Parameter	ut64 * v	49:65:1060:1066	5260495	2	True				
ANR	5260590	ParameterType	ut64 *		5260495	0					
ANR	5260591	Identifier	v		5260495	1					
ANR	5260592	CFGEntryNode	ENTRY		5260495		True				
ANR	5260593	CFGExitNode	EXIT		5260495		True				
ANR	5260594	Symbol	* v		5260495						
ANR	5260595	Symbol	* datalen		5260495						
ANR	5260596	Symbol	c		5260495						
ANR	5260597	Symbol	s		5260495						
ANR	5260598	Symbol	data		5260495						
ANR	5260599	Symbol	v		5260495						
ANR	5260600	Symbol	sum		5260495						
ANR	5260601	Symbol	* ( data ++ )		5260495						
ANR	5260602	Symbol	l		5260495						
ANR	5260603	Symbol	datalen		5260495						
ANR	5260604	Function	r_uleb128_encode	67:0:1293:1764							
ANR	5260605	FunctionDef	"r_uleb128_encode (const ut64 s , int * len)"		5260604	0					
ANR	5260606	CompoundStatement		67:52:1345:1764	5260604	0					
ANR	5260607	IdentifierDeclStatement	ut8 c = 0 ;	68:1:1348:1357	5260604	0	True				
ANR	5260608	IdentifierDecl	c = 0		5260604	0					
ANR	5260609	IdentifierDeclType	ut8		5260604	0					
ANR	5260610	Identifier	c		5260604	1					
ANR	5260611	AssignmentExpression	c = 0		5260604	2		=			
ANR	5260612	Identifier	c		5260604	0					
ANR	5260613	PrimaryExpression	0		5260604	1					
ANR	5260614	IdentifierDeclStatement	int l = 0 ;	69:1:1360:1369	5260604	1	True				
ANR	5260615	IdentifierDecl	l = 0		5260604	0					
ANR	5260616	IdentifierDeclType	int		5260604	0					
ANR	5260617	Identifier	l		5260604	1					
ANR	5260618	AssignmentExpression	l = 0		5260604	2		=			
ANR	5260619	Identifier	l		5260604	0					
ANR	5260620	PrimaryExpression	0		5260604	1					
ANR	5260621	IdentifierDeclStatement	"ut8 * otarget = NULL , * target = NULL , * tmptarget = NULL ;"	70:1:1372:1426	5260604	2	True				
ANR	5260622	IdentifierDecl	* otarget = NULL		5260604	0					
ANR	5260623	IdentifierDeclType	ut8 *		5260604	0					
ANR	5260624	Identifier	otarget		5260604	1					
ANR	5260625	AssignmentExpression	* otarget = NULL		5260604	2		=			
ANR	5260626	Identifier	NULL		5260604	0					
ANR	5260627	Identifier	NULL		5260604	1					
ANR	5260628	IdentifierDecl	* target = NULL		5260604	1					
ANR	5260629	IdentifierDeclType	ut8 *		5260604	0					
ANR	5260630	Identifier	target		5260604	1					
ANR	5260631	AssignmentExpression	* target = NULL		5260604	2		=			
ANR	5260632	Identifier	NULL		5260604	0					
ANR	5260633	Identifier	NULL		5260604	1					
ANR	5260634	IdentifierDecl	* tmptarget = NULL		5260604	2					
ANR	5260635	IdentifierDeclType	ut8 *		5260604	0					
ANR	5260636	Identifier	tmptarget		5260604	1					
ANR	5260637	AssignmentExpression	* tmptarget = NULL		5260604	2		=			
ANR	5260638	Identifier	NULL		5260604	0					
ANR	5260639	Identifier	NULL		5260604	1					
ANR	5260640	IdentifierDeclStatement	ut64 source = s ;	71:1:1429:1444	5260604	3	True				
ANR	5260641	IdentifierDecl	source = s		5260604	0					
ANR	5260642	IdentifierDeclType	ut64		5260604	0					
ANR	5260643	Identifier	source		5260604	1					
ANR	5260644	AssignmentExpression	source = s		5260604	2		=			
ANR	5260645	Identifier	s		5260604	0					
ANR	5260646	Identifier	s		5260604	1					
ANR	5260647	DoStatement	do		5260604	4					
ANR	5260648	CompoundStatement		6:4:104:104	5260604	0					
ANR	5260649	ExpressionStatement	l ++	73:2:1454:1457	5260604	0	True				
ANR	5260650	PostIncDecOperationExpression	l ++		5260604	0					
ANR	5260651	Identifier	l		5260604	0					
ANR	5260652	IncDec	++		5260604	1					
ANR	5260653	IfStatement	"if ( ! ( tmptarget = realloc ( otarget , l ) ) )"		5260604	1					
ANR	5260654	Condition	"! ( tmptarget = realloc ( otarget , l ) )"	74:6:1465:1499	5260604	0	True				
ANR	5260655	UnaryOperationExpression	"! ( tmptarget = realloc ( otarget , l ) )"		5260604	0					
ANR	5260656	UnaryOperator	!		5260604	0					
ANR	5260657	AssignmentExpression	"tmptarget = realloc ( otarget , l )"		5260604	1		=			
ANR	5260658	Identifier	tmptarget		5260604	0					
ANR	5260659	CallExpression	"realloc ( otarget , l )"		5260604	1					
ANR	5260660	Callee	realloc		5260604	0					
ANR	5260661	Identifier	realloc		5260604	0					
ANR	5260662	ArgumentList	otarget		5260604	1					
ANR	5260663	Argument	otarget		5260604	0					
ANR	5260664	Identifier	otarget		5260604	0					
ANR	5260665	Argument	l		5260604	1					
ANR	5260666	Identifier	l		5260604	0					
ANR	5260667	CompoundStatement		8:43:156:156	5260604	1					
ANR	5260668	ExpressionStatement	l = 0	75:3:1507:1512	5260604	0	True				
ANR	5260669	AssignmentExpression	l = 0		5260604	0		=			
ANR	5260670	Identifier	l		5260604	0					
ANR	5260671	PrimaryExpression	0		5260604	1					
ANR	5260672	ExpressionStatement	free ( otarget )	76:3:1517:1531	5260604	1	True				
ANR	5260673	CallExpression	free ( otarget )		5260604	0					
ANR	5260674	Callee	free		5260604	0					
ANR	5260675	Identifier	free		5260604	0					
ANR	5260676	ArgumentList	otarget		5260604	1					
ANR	5260677	Argument	otarget		5260604	0					
ANR	5260678	Identifier	otarget		5260604	0					
ANR	5260679	ExpressionStatement	otarget = NULL	77:3:1536:1550	5260604	2	True				
ANR	5260680	AssignmentExpression	otarget = NULL		5260604	0		=			
ANR	5260681	Identifier	otarget		5260604	0					
ANR	5260682	Identifier	NULL		5260604	1					
ANR	5260683	BreakStatement	break ;	78:3:1555:1560	5260604	3	True				
ANR	5260684	ExpressionStatement	otarget = tmptarget	80:2:1568:1587	5260604	2	True				
ANR	5260685	AssignmentExpression	otarget = tmptarget		5260604	0		=			
ANR	5260686	Identifier	otarget		5260604	0					
ANR	5260687	Identifier	tmptarget		5260604	1					
ANR	5260688	ExpressionStatement	target = otarget + l - 1	81:2:1591:1611	5260604	3	True				
ANR	5260689	AssignmentExpression	target = otarget + l - 1		5260604	0		=			
ANR	5260690	Identifier	target		5260604	0					
ANR	5260691	AdditiveExpression	otarget + l - 1		5260604	1		+			
ANR	5260692	Identifier	otarget		5260604	0					
ANR	5260693	AdditiveExpression	l - 1		5260604	1		-			
ANR	5260694	Identifier	l		5260604	0					
ANR	5260695	PrimaryExpression	1		5260604	1					
ANR	5260696	ExpressionStatement	c = source & 0x7f	82:2:1615:1632	5260604	4	True				
ANR	5260697	AssignmentExpression	c = source & 0x7f		5260604	0		=			
ANR	5260698	Identifier	c		5260604	0					
ANR	5260699	BitAndExpression	source & 0x7f		5260604	1		&			
ANR	5260700	Identifier	source		5260604	0					
ANR	5260701	PrimaryExpression	0x7f		5260604	1					
ANR	5260702	ExpressionStatement	source >>= 7	83:2:1636:1648	5260604	5	True				
ANR	5260703	AssignmentExpression	source >>= 7		5260604	0		>>=			
ANR	5260704	Identifier	source		5260604	0					
ANR	5260705	PrimaryExpression	7		5260604	1					
ANR	5260706	IfStatement	if ( source )		5260604	6					
ANR	5260707	Condition	source	84:6:1656:1661	5260604	0	True				
ANR	5260708	Identifier	source		5260604	0					
ANR	5260709	CompoundStatement		18:14:318:318	5260604	1					
ANR	5260710	ExpressionStatement	c |= 0x80	85:3:1669:1678	5260604	0	True				
ANR	5260711	AssignmentExpression	c |= 0x80		5260604	0		|=			
ANR	5260712	Identifier	c		5260604	0					
ANR	5260713	PrimaryExpression	0x80		5260604	1					
ANR	5260714	ExpressionStatement	* ( target ) = c	87:2:1686:1699	5260604	7	True				
ANR	5260715	AssignmentExpression	* ( target ) = c		5260604	0		=			
ANR	5260716	UnaryOperationExpression	* ( target )		5260604	0					
ANR	5260717	UnaryOperator	*		5260604	0					
ANR	5260718	Identifier	target		5260604	1					
ANR	5260719	Identifier	c		5260604	1					
ANR	5260720	Condition	source	88:10:1711:1716	5260604	1	True				
ANR	5260721	Identifier	source		5260604	0					
ANR	5260722	IfStatement	if ( len )		5260604	5					
ANR	5260723	Condition	len	89:5:1725:1727	5260604	0	True				
ANR	5260724	Identifier	len		5260604	0					
ANR	5260725	CompoundStatement		23:10:384:384	5260604	1					
ANR	5260726	ExpressionStatement	* len = l	90:2:1734:1742	5260604	0	True				
ANR	5260727	AssignmentExpression	* len = l		5260604	0		=			
ANR	5260728	UnaryOperationExpression	* len		5260604	0					
ANR	5260729	UnaryOperator	*		5260604	0					
ANR	5260730	Identifier	len		5260604	1					
ANR	5260731	Identifier	l		5260604	1					
ANR	5260732	ReturnStatement	return otarget ;	92:1:1748:1762	5260604	6	True				
ANR	5260733	Identifier	otarget		5260604	0					
ANR	5260734	ReturnType	R_API ut8 *		5260604	1					
ANR	5260735	Identifier	r_uleb128_encode		5260604	2					
ANR	5260736	ParameterList	"const ut64 s , int * len"		5260604	3					
ANR	5260737	Parameter	const ut64 s	67:28:1321:1332	5260604	0	True				
ANR	5260738	ParameterType	const ut64		5260604	0					
ANR	5260739	Identifier	s		5260604	1					
ANR	5260740	Parameter	int * len	67:42:1335:1342	5260604	1	True				
ANR	5260741	ParameterType	int *		5260604	0					
ANR	5260742	Identifier	len		5260604	1					
ANR	5260743	CFGEntryNode	ENTRY		5260604		True				
ANR	5260744	CFGExitNode	EXIT		5260604		True				
ANR	5260745	Symbol	c		5260604						
ANR	5260746	Symbol	NULL		5260604						
ANR	5260747	Symbol	* ( target )		5260604						
ANR	5260748	Symbol	source		5260604						
ANR	5260749	Symbol	realloc		5260604						
ANR	5260750	Symbol	l		5260604						
ANR	5260751	Symbol	target		5260604						
ANR	5260752	Symbol	* target		5260604						
ANR	5260753	Symbol	otarget		5260604						
ANR	5260754	Symbol	tmptarget		5260604						
ANR	5260755	Symbol	s		5260604						
ANR	5260756	Symbol	len		5260604						
ANR	5260757	Symbol	* len		5260604						
ANR	5260758	Function	r_leb128	95:6:1773:2125							
ANR	5260759	FunctionDef	"r_leb128 (const ut8 * data , st64 * v)"		5260758	0					
ANR	5260760	CompoundStatement		95:52:1819:2125	5260758	0					
ANR	5260761	IdentifierDeclStatement	ut8 c = 0 ;	96:1:1822:1831	5260758	0	True				
ANR	5260762	IdentifierDecl	c = 0		5260758	0					
ANR	5260763	IdentifierDeclType	ut8		5260758	0					
ANR	5260764	Identifier	c		5260758	1					
ANR	5260765	AssignmentExpression	c = 0		5260758	2		=			
ANR	5260766	Identifier	c		5260758	0					
ANR	5260767	PrimaryExpression	0		5260758	1					
ANR	5260768	IdentifierDeclStatement	"st64 s = 0 , sum = 0 ;"	97:1:1834:1853	5260758	1	True				
ANR	5260769	IdentifierDecl	s = 0		5260758	0					
ANR	5260770	IdentifierDeclType	st64		5260758	0					
ANR	5260771	Identifier	s		5260758	1					
ANR	5260772	AssignmentExpression	s = 0		5260758	2		=			
ANR	5260773	Identifier	s		5260758	0					
ANR	5260774	PrimaryExpression	0		5260758	1					
ANR	5260775	IdentifierDecl	sum = 0		5260758	1					
ANR	5260776	IdentifierDeclType	st64		5260758	0					
ANR	5260777	Identifier	sum		5260758	1					
ANR	5260778	AssignmentExpression	sum = 0		5260758	2		=			
ANR	5260779	Identifier	sum		5260758	0					
ANR	5260780	PrimaryExpression	0		5260758	1					
ANR	5260781	IfStatement	if ( data )		5260758	2					
ANR	5260782	Condition	data	98:5:1860:1863	5260758	0	True				
ANR	5260783	Identifier	data		5260758	0					
ANR	5260784	CompoundStatement		4:11:46:46	5260758	1					
ANR	5260785	ForStatement	for ( s = 0 ; * data ; )		5260758	0					
ANR	5260786	ForInit	s = 0 ;	99:7:1875:1880	5260758	0	True				
ANR	5260787	AssignmentExpression	s = 0		5260758	0		=			
ANR	5260788	Identifier	s		5260758	0					
ANR	5260789	PrimaryExpression	0		5260758	1					
ANR	5260790	Condition	* data	99:14:1882:1886	5260758	1	True				
ANR	5260791	UnaryOperationExpression	* data		5260758	0					
ANR	5260792	UnaryOperator	*		5260758	0					
ANR	5260793	Identifier	data		5260758	1					
ANR	5260794	CompoundStatement		5:22:70:70	5260758	2					
ANR	5260795	ExpressionStatement	c = * ( data ++ ) & 0x0ff	100:3:1895:1916	5260758	0	True				
ANR	5260796	AssignmentExpression	c = * ( data ++ ) & 0x0ff		5260758	0		=			
ANR	5260797	Identifier	c		5260758	0					
ANR	5260798	BitAndExpression	* ( data ++ ) & 0x0ff		5260758	1		&			
ANR	5260799	UnaryOperationExpression	* ( data ++ )		5260758	0					
ANR	5260800	UnaryOperator	*		5260758	0					
ANR	5260801	PostIncDecOperationExpression	data ++		5260758	1					
ANR	5260802	Identifier	data		5260758	0					
ANR	5260803	IncDec	++		5260758	1					
ANR	5260804	PrimaryExpression	0x0ff		5260758	1					
ANR	5260805	ExpressionStatement	sum |= ( ( st64 ) ( c & 0x7f ) << s )	101:3:1921:1952	5260758	1	True				
ANR	5260806	AssignmentExpression	sum |= ( ( st64 ) ( c & 0x7f ) << s )		5260758	0		|=			
ANR	5260807	Identifier	sum		5260758	0					
ANR	5260808	ShiftExpression	( st64 ) ( c & 0x7f ) << s		5260758	1		<<			
ANR	5260809	CastExpression	( st64 ) ( c & 0x7f )		5260758	0					
ANR	5260810	CastTarget	st64		5260758	0					
ANR	5260811	BitAndExpression	c & 0x7f		5260758	1		&			
ANR	5260812	Identifier	c		5260758	0					
ANR	5260813	PrimaryExpression	0x7f		5260758	1					
ANR	5260814	Identifier	s		5260758	1					
ANR	5260815	ExpressionStatement	s += 7	102:3:1957:1963	5260758	2	True				
ANR	5260816	AssignmentExpression	s += 7		5260758	0		+=			
ANR	5260817	Identifier	s		5260758	0					
ANR	5260818	PrimaryExpression	7		5260758	1					
ANR	5260819	IfStatement	if ( ! ( c & 0x80 ) )		5260758	3					
ANR	5260820	Condition	! ( c & 0x80 )	103:7:1972:1982	5260758	0	True				
ANR	5260821	UnaryOperationExpression	! ( c & 0x80 )		5260758	0					
ANR	5260822	UnaryOperator	!		5260758	0					
ANR	5260823	BitAndExpression	c & 0x80		5260758	1		&			
ANR	5260824	Identifier	c		5260758	0					
ANR	5260825	PrimaryExpression	0x80		5260758	1					
ANR	5260826	CompoundStatement		9:20:165:165	5260758	1					
ANR	5260827	BreakStatement	break ;	104:4:1991:1996	5260758	0	True				
ANR	5260828	IfStatement	if ( ( s < ( 8 * sizeof ( sum ) ) ) && ( c & 0x40 ) )		5260758	3					
ANR	5260829	Condition	( s < ( 8 * sizeof ( sum ) ) ) && ( c & 0x40 )	108:5:2015:2052	5260758	0	True				
ANR	5260830	AndExpression	( s < ( 8 * sizeof ( sum ) ) ) && ( c & 0x40 )		5260758	0		&&			
ANR	5260831	RelationalExpression	s < ( 8 * sizeof ( sum ) )		5260758	0		<			
ANR	5260832	Identifier	s		5260758	0					
ANR	5260833	MultiplicativeExpression	8 * sizeof ( sum )		5260758	1		*			
ANR	5260834	PrimaryExpression	8		5260758	0					
ANR	5260835	SizeofExpression	sizeof ( sum )		5260758	1					
ANR	5260836	Sizeof	sizeof		5260758	0					
ANR	5260837	SizeofOperand	sum		5260758	1					
ANR	5260838	BitAndExpression	c & 0x40		5260758	1		&			
ANR	5260839	Identifier	c		5260758	0					
ANR	5260840	PrimaryExpression	0x40		5260758	1					
ANR	5260841	CompoundStatement		14:45:235:235	5260758	1					
ANR	5260842	ExpressionStatement	sum |= - ( ( st64 ) 1 << s )	109:2:2059:2081	5260758	0	True				
ANR	5260843	AssignmentExpression	sum |= - ( ( st64 ) 1 << s )		5260758	0		|=			
ANR	5260844	Identifier	sum		5260758	0					
ANR	5260845	UnaryOperationExpression	- ( ( st64 ) 1 << s )		5260758	1					
ANR	5260846	UnaryOperator	-		5260758	0					
ANR	5260847	ShiftExpression	( st64 ) 1 << s		5260758	1		<<			
ANR	5260848	CastExpression	( st64 ) 1		5260758	0					
ANR	5260849	CastTarget	st64		5260758	0					
ANR	5260850	PrimaryExpression	1		5260758	1					
ANR	5260851	Identifier	s		5260758	1					
ANR	5260852	IfStatement	if ( v )		5260758	4					
ANR	5260853	Condition	v	111:5:2091:2091	5260758	0	True				
ANR	5260854	Identifier	v		5260758	0					
ANR	5260855	CompoundStatement		17:8:274:274	5260758	1					
ANR	5260856	ExpressionStatement	* v = sum	112:2:2098:2106	5260758	0	True				
ANR	5260857	AssignmentExpression	* v = sum		5260758	0		=			
ANR	5260858	UnaryOperationExpression	* v		5260758	0					
ANR	5260859	UnaryOperator	*		5260758	0					
ANR	5260860	Identifier	v		5260758	1					
ANR	5260861	Identifier	sum		5260758	1					
ANR	5260862	ReturnStatement	return data ;	114:1:2112:2123	5260758	5	True				
ANR	5260863	Identifier	data		5260758	0					
ANR	5260864	ReturnType	const ut8 *		5260758	1					
ANR	5260865	Identifier	r_leb128		5260758	2					
ANR	5260866	ParameterList	"const ut8 * data , st64 * v"		5260758	3					
ANR	5260867	Parameter	const ut8 * data	95:26:1793:1807	5260758	0	True				
ANR	5260868	ParameterType	const ut8 *		5260758	0					
ANR	5260869	Identifier	data		5260758	1					
ANR	5260870	Parameter	st64 * v	95:43:1810:1816	5260758	1	True				
ANR	5260871	ParameterType	st64 *		5260758	0					
ANR	5260872	Identifier	v		5260758	1					
ANR	5260873	CFGEntryNode	ENTRY		5260758		True				
ANR	5260874	CFGExitNode	EXIT		5260758		True				
ANR	5260875	Symbol	* v		5260758						
ANR	5260876	Symbol	c		5260758						
ANR	5260877	Symbol	s		5260758						
ANR	5260878	Symbol	data		5260758						
ANR	5260879	Symbol	v		5260758						
ANR	5260880	Symbol	sum		5260758						
ANR	5260881	Symbol	* ( data ++ )		5260758						
ANR	5260882	Symbol	* data		5260758						
ANR	5260883	Function	r_sleb128	118:0:2129:2515							
ANR	5260884	FunctionDef	"r_sleb128 (const ut8 * * data , const ut8 * end)"		5260883	0					
ANR	5260885	CompoundStatement		118:55:2184:2515	5260883	0					
ANR	5260886	IdentifierDeclStatement	const ut8 * p = * data ;	119:1:2187:2207	5260883	0	True				
ANR	5260887	IdentifierDecl	* p = * data		5260883	0					
ANR	5260888	IdentifierDeclType	const ut8 *		5260883	0					
ANR	5260889	Identifier	p		5260883	1					
ANR	5260890	AssignmentExpression	* p = * data		5260883	2		=			
ANR	5260891	Identifier	p		5260883	0					
ANR	5260892	UnaryOperationExpression	* data		5260883	1					
ANR	5260893	UnaryOperator	*		5260883	0					
ANR	5260894	Identifier	data		5260883	1					
ANR	5260895	IdentifierDeclStatement	st64 result = 0 ;	120:1:2210:2225	5260883	1	True				
ANR	5260896	IdentifierDecl	result = 0		5260883	0					
ANR	5260897	IdentifierDeclType	st64		5260883	0					
ANR	5260898	Identifier	result		5260883	1					
ANR	5260899	AssignmentExpression	result = 0		5260883	2		=			
ANR	5260900	Identifier	result		5260883	0					
ANR	5260901	PrimaryExpression	0		5260883	1					
ANR	5260902	IdentifierDeclStatement	int offset = 0 ;	121:1:2228:2242	5260883	2	True				
ANR	5260903	IdentifierDecl	offset = 0		5260883	0					
ANR	5260904	IdentifierDeclType	int		5260883	0					
ANR	5260905	Identifier	offset		5260883	1					
ANR	5260906	AssignmentExpression	offset = 0		5260883	2		=			
ANR	5260907	Identifier	offset		5260883	0					
ANR	5260908	PrimaryExpression	0		5260883	1					
ANR	5260909	IdentifierDeclStatement	ut8 value ;	122:1:2245:2254	5260883	3	True				
ANR	5260910	IdentifierDecl	value		5260883	0					
ANR	5260911	IdentifierDeclType	ut8		5260883	0					
ANR	5260912	Identifier	value		5260883	1					
ANR	5260913	IdentifierDeclStatement	bool cond ;	123:1:2257:2266	5260883	4	True				
ANR	5260914	IdentifierDecl	cond		5260883	0					
ANR	5260915	IdentifierDeclType	bool		5260883	0					
ANR	5260916	Identifier	cond		5260883	1					
ANR	5260917	DoStatement	do		5260883	5					
ANR	5260918	CompoundStatement		8:2:91:101	5260883	0					
ANR	5260919	IdentifierDeclStatement	st64 chunk ;	125:2:2276:2286	5260883	0	True				
ANR	5260920	IdentifierDecl	chunk		5260883	0					
ANR	5260921	IdentifierDeclType	st64		5260883	0					
ANR	5260922	Identifier	chunk		5260883	1					
ANR	5260923	ExpressionStatement	value = * p	126:2:2290:2300	5260883	1	True				
ANR	5260924	AssignmentExpression	value = * p		5260883	0		=			
ANR	5260925	Identifier	value		5260883	0					
ANR	5260926	UnaryOperationExpression	* p		5260883	1					
ANR	5260927	UnaryOperator	*		5260883	0					
ANR	5260928	Identifier	p		5260883	1					
ANR	5260929	ExpressionStatement	chunk = value & 0x7f	127:2:2304:2324	5260883	2	True				
ANR	5260930	AssignmentExpression	chunk = value & 0x7f		5260883	0		=			
ANR	5260931	Identifier	chunk		5260883	0					
ANR	5260932	BitAndExpression	value & 0x7f		5260883	1		&			
ANR	5260933	Identifier	value		5260883	0					
ANR	5260934	PrimaryExpression	0x7f		5260883	1					
ANR	5260935	ExpressionStatement	result |= ( chunk << offset )	128:2:2328:2355	5260883	3	True				
ANR	5260936	AssignmentExpression	result |= ( chunk << offset )		5260883	0		|=			
ANR	5260937	Identifier	result		5260883	0					
ANR	5260938	ShiftExpression	chunk << offset		5260883	1		<<			
ANR	5260939	Identifier	chunk		5260883	0					
ANR	5260940	Identifier	offset		5260883	1					
ANR	5260941	ExpressionStatement	offset += 7	129:2:2359:2370	5260883	4	True				
ANR	5260942	AssignmentExpression	offset += 7		5260883	0		+=			
ANR	5260943	Identifier	offset		5260883	0					
ANR	5260944	PrimaryExpression	7		5260883	1					
ANR	5260945	Condition	"cond = * p & 0x80 && p + 1 < end , p ++ , cond"	130:10:2382:2423	5260883	1	True				
ANR	5260946	Expression	"cond = * p & 0x80 && p + 1 < end , p ++ , cond"		5260883	0					
ANR	5260947	AssignmentExpression	cond = * p & 0x80 && p + 1 < end		5260883	0		=			
ANR	5260948	Identifier	cond		5260883	0					
ANR	5260949	AndExpression	* p & 0x80 && p + 1 < end		5260883	1		&&			
ANR	5260950	BitAndExpression	* p & 0x80		5260883	0		&			
ANR	5260951	UnaryOperationExpression	* p		5260883	0					
ANR	5260952	UnaryOperator	*		5260883	0					
ANR	5260953	Identifier	p		5260883	1					
ANR	5260954	PrimaryExpression	0x80		5260883	1					
ANR	5260955	RelationalExpression	p + 1 < end		5260883	1		<			
ANR	5260956	AdditiveExpression	p + 1		5260883	0		+			
ANR	5260957	Identifier	p		5260883	0					
ANR	5260958	PrimaryExpression	1		5260883	1					
ANR	5260959	Identifier	end		5260883	1					
ANR	5260960	Expression	"p ++ , cond"		5260883	1					
ANR	5260961	PostIncDecOperationExpression	p ++		5260883	0					
ANR	5260962	Identifier	p		5260883	0					
ANR	5260963	IncDec	++		5260883	1					
ANR	5260964	Identifier	cond		5260883	1					
ANR	5260965	IfStatement	if ( ( value & 0x40 ) != 0 )		5260883	6					
ANR	5260966	Condition	( value & 0x40 ) != 0	132:5:2433:2451	5260883	0	True				
ANR	5260967	EqualityExpression	( value & 0x40 ) != 0		5260883	0		!=			
ANR	5260968	BitAndExpression	value & 0x40		5260883	0		&			
ANR	5260969	Identifier	value		5260883	0					
ANR	5260970	PrimaryExpression	0x40		5260883	1					
ANR	5260971	PrimaryExpression	0		5260883	1					
ANR	5260972	CompoundStatement		15:26:269:269	5260883	1					
ANR	5260973	ExpressionStatement	result |= ~0UL << offset	133:2:2458:2482	5260883	0	True				
ANR	5260974	AssignmentExpression	result |= ~0UL << offset		5260883	0		|=			
ANR	5260975	Identifier	result		5260883	0					
ANR	5260976	ShiftExpression	~0UL << offset		5260883	1		<<			
ANR	5260977	Identifier	~0UL		5260883	0					
ANR	5260978	Identifier	offset		5260883	1					
ANR	5260979	ExpressionStatement	* data = p	135:1:2488:2497	5260883	7	True				
ANR	5260980	AssignmentExpression	* data = p		5260883	0		=			
ANR	5260981	UnaryOperationExpression	* data		5260883	0					
ANR	5260982	UnaryOperator	*		5260883	0					
ANR	5260983	Identifier	data		5260883	1					
ANR	5260984	Identifier	p		5260883	1					
ANR	5260985	ReturnStatement	return result ;	136:1:2500:2513	5260883	8	True				
ANR	5260986	Identifier	result		5260883	0					
ANR	5260987	ReturnType	R_API st64		5260883	1					
ANR	5260988	Identifier	r_sleb128		5260883	2					
ANR	5260989	ParameterList	"const ut8 * * data , const ut8 * end"		5260883	3					
ANR	5260990	Parameter	const ut8 * * data	118:21:2150:2165	5260883	0	True				
ANR	5260991	ParameterType	const ut8 * *		5260883	0					
ANR	5260992	Identifier	data		5260883	1					
ANR	5260993	Parameter	const ut8 * end	118:39:2168:2181	5260883	1	True				
ANR	5260994	ParameterType	const ut8 *		5260883	0					
ANR	5260995	Identifier	end		5260883	1					
ANR	5260996	CFGEntryNode	ENTRY		5260883		True				
ANR	5260997	CFGExitNode	EXIT		5260883		True				
ANR	5260998	Symbol	p		5260883						
ANR	5260999	Symbol	result		5260883						
ANR	5261000	Symbol	~0UL		5260883						
ANR	5261001	Symbol	data		5260883						
ANR	5261002	Symbol	offset		5260883						
ANR	5261003	Symbol	chunk		5260883						
ANR	5261004	Symbol	end		5260883						
ANR	5261005	Symbol	* p		5260883						
ANR	5261006	Symbol	cond		5260883						
ANR	5261007	Symbol	* data		5260883						
ANR	5261008	Symbol	value		5260883						
ANR	5261009	Function	read_u32_leb128	159:0:3508:4162							
ANR	5261010	FunctionDef	"read_u32_leb128 (const ut8 * p , const ut8 * max , ut32 * out_value)"		5261009	0					
ANR	5261011	CompoundStatement		159:77:3585:4162	5261009	0					
ANR	5261012	IfStatement	if ( p < max && ! ( p [ 0 ] & 0x80 ) )		5261009	0					
ANR	5261013	Condition	p < max && ! ( p [ 0 ] & 0x80 )	160:5:3592:3616	5261009	0	True				
ANR	5261014	AndExpression	p < max && ! ( p [ 0 ] & 0x80 )		5261009	0		&&			
ANR	5261015	RelationalExpression	p < max		5261009	0		<			
ANR	5261016	Identifier	p		5261009	0					
ANR	5261017	Identifier	max		5261009	1					
ANR	5261018	UnaryOperationExpression	! ( p [ 0 ] & 0x80 )		5261009	1					
ANR	5261019	UnaryOperator	!		5261009	0					
ANR	5261020	BitAndExpression	p [ 0 ] & 0x80		5261009	1		&			
ANR	5261021	ArrayIndexing	p [ 0 ]		5261009	0					
ANR	5261022	Identifier	p		5261009	0					
ANR	5261023	PrimaryExpression	0		5261009	1					
ANR	5261024	PrimaryExpression	0x80		5261009	1					
ANR	5261025	CompoundStatement		2:32:33:33	5261009	1					
ANR	5261026	ExpressionStatement	* out_value = LEB128_1 ( ut32 )	161:2:3623:3651	5261009	0	True				
ANR	5261027	AssignmentExpression	* out_value = LEB128_1 ( ut32 )		5261009	0		=			
ANR	5261028	UnaryOperationExpression	* out_value		5261009	0					
ANR	5261029	UnaryOperator	*		5261009	0					
ANR	5261030	Identifier	out_value		5261009	1					
ANR	5261031	CallExpression	LEB128_1 ( ut32 )		5261009	1					
ANR	5261032	Callee	LEB128_1		5261009	0					
ANR	5261033	Identifier	LEB128_1		5261009	0					
ANR	5261034	ArgumentList	ut32		5261009	1					
ANR	5261035	Argument	ut32		5261009	0					
ANR	5261036	Identifier	ut32		5261009	0					
ANR	5261037	ReturnStatement	return 1 ;	162:2:3655:3663	5261009	1	True				
ANR	5261038	PrimaryExpression	1		5261009	0					
ANR	5261039	ElseStatement	else		5261009	0					
ANR	5261040	IfStatement	if ( p + 1 < max && ! ( p [ 1 ] & 0x80 ) )		5261009	0					
ANR	5261041	Condition	p + 1 < max && ! ( p [ 1 ] & 0x80 )	163:12:3677:3705	5261009	0	True				
ANR	5261042	AndExpression	p + 1 < max && ! ( p [ 1 ] & 0x80 )		5261009	0		&&			
ANR	5261043	RelationalExpression	p + 1 < max		5261009	0		<			
ANR	5261044	AdditiveExpression	p + 1		5261009	0		+			
ANR	5261045	Identifier	p		5261009	0					
ANR	5261046	PrimaryExpression	1		5261009	1					
ANR	5261047	Identifier	max		5261009	1					
ANR	5261048	UnaryOperationExpression	! ( p [ 1 ] & 0x80 )		5261009	1					
ANR	5261049	UnaryOperator	!		5261009	0					
ANR	5261050	BitAndExpression	p [ 1 ] & 0x80		5261009	1		&			
ANR	5261051	ArrayIndexing	p [ 1 ]		5261009	0					
ANR	5261052	Identifier	p		5261009	0					
ANR	5261053	PrimaryExpression	1		5261009	1					
ANR	5261054	PrimaryExpression	0x80		5261009	1					
ANR	5261055	CompoundStatement		5:43:122:122	5261009	1					
ANR	5261056	ExpressionStatement	* out_value = LEB128_2 ( ut32 )	164:2:3712:3740	5261009	0	True				
ANR	5261057	AssignmentExpression	* out_value = LEB128_2 ( ut32 )		5261009	0		=			
ANR	5261058	UnaryOperationExpression	* out_value		5261009	0					
ANR	5261059	UnaryOperator	*		5261009	0					
ANR	5261060	Identifier	out_value		5261009	1					
ANR	5261061	CallExpression	LEB128_2 ( ut32 )		5261009	1					
ANR	5261062	Callee	LEB128_2		5261009	0					
ANR	5261063	Identifier	LEB128_2		5261009	0					
ANR	5261064	ArgumentList	ut32		5261009	1					
ANR	5261065	Argument	ut32		5261009	0					
ANR	5261066	Identifier	ut32		5261009	0					
ANR	5261067	ReturnStatement	return 2 ;	165:2:3744:3752	5261009	1	True				
ANR	5261068	PrimaryExpression	2		5261009	0					
ANR	5261069	ElseStatement	else		5261009	0					
ANR	5261070	IfStatement	if ( p + 2 < max && ! ( p [ 2 ] & 0x80 ) )		5261009	0					
ANR	5261071	Condition	p + 2 < max && ! ( p [ 2 ] & 0x80 )	166:12:3766:3794	5261009	0	True				
ANR	5261072	AndExpression	p + 2 < max && ! ( p [ 2 ] & 0x80 )		5261009	0		&&			
ANR	5261073	RelationalExpression	p + 2 < max		5261009	0		<			
ANR	5261074	AdditiveExpression	p + 2		5261009	0		+			
ANR	5261075	Identifier	p		5261009	0					
ANR	5261076	PrimaryExpression	2		5261009	1					
ANR	5261077	Identifier	max		5261009	1					
ANR	5261078	UnaryOperationExpression	! ( p [ 2 ] & 0x80 )		5261009	1					
ANR	5261079	UnaryOperator	!		5261009	0					
ANR	5261080	BitAndExpression	p [ 2 ] & 0x80		5261009	1		&			
ANR	5261081	ArrayIndexing	p [ 2 ]		5261009	0					
ANR	5261082	Identifier	p		5261009	0					
ANR	5261083	PrimaryExpression	2		5261009	1					
ANR	5261084	PrimaryExpression	0x80		5261009	1					
ANR	5261085	CompoundStatement		8:43:211:211	5261009	1					
ANR	5261086	ExpressionStatement	* out_value = LEB128_3 ( ut32 )	167:2:3801:3829	5261009	0	True				
ANR	5261087	AssignmentExpression	* out_value = LEB128_3 ( ut32 )		5261009	0		=			
ANR	5261088	UnaryOperationExpression	* out_value		5261009	0					
ANR	5261089	UnaryOperator	*		5261009	0					
ANR	5261090	Identifier	out_value		5261009	1					
ANR	5261091	CallExpression	LEB128_3 ( ut32 )		5261009	1					
ANR	5261092	Callee	LEB128_3		5261009	0					
ANR	5261093	Identifier	LEB128_3		5261009	0					
ANR	5261094	ArgumentList	ut32		5261009	1					
ANR	5261095	Argument	ut32		5261009	0					
ANR	5261096	Identifier	ut32		5261009	0					
ANR	5261097	ReturnStatement	return 3 ;	168:2:3833:3841	5261009	1	True				
ANR	5261098	PrimaryExpression	3		5261009	0					
ANR	5261099	ElseStatement	else		5261009	0					
ANR	5261100	IfStatement	if ( p + 3 < max && ! ( p [ 3 ] & 0x80 ) )		5261009	0					
ANR	5261101	Condition	p + 3 < max && ! ( p [ 3 ] & 0x80 )	169:12:3855:3883	5261009	0	True				
ANR	5261102	AndExpression	p + 3 < max && ! ( p [ 3 ] & 0x80 )		5261009	0		&&			
ANR	5261103	RelationalExpression	p + 3 < max		5261009	0		<			
ANR	5261104	AdditiveExpression	p + 3		5261009	0		+			
ANR	5261105	Identifier	p		5261009	0					
ANR	5261106	PrimaryExpression	3		5261009	1					
ANR	5261107	Identifier	max		5261009	1					
ANR	5261108	UnaryOperationExpression	! ( p [ 3 ] & 0x80 )		5261009	1					
ANR	5261109	UnaryOperator	!		5261009	0					
ANR	5261110	BitAndExpression	p [ 3 ] & 0x80		5261009	1		&			
ANR	5261111	ArrayIndexing	p [ 3 ]		5261009	0					
ANR	5261112	Identifier	p		5261009	0					
ANR	5261113	PrimaryExpression	3		5261009	1					
ANR	5261114	PrimaryExpression	0x80		5261009	1					
ANR	5261115	CompoundStatement		11:43:300:300	5261009	1					
ANR	5261116	ExpressionStatement	* out_value = LEB128_4 ( ut32 )	170:2:3890:3918	5261009	0	True				
ANR	5261117	AssignmentExpression	* out_value = LEB128_4 ( ut32 )		5261009	0		=			
ANR	5261118	UnaryOperationExpression	* out_value		5261009	0					
ANR	5261119	UnaryOperator	*		5261009	0					
ANR	5261120	Identifier	out_value		5261009	1					
ANR	5261121	CallExpression	LEB128_4 ( ut32 )		5261009	1					
ANR	5261122	Callee	LEB128_4		5261009	0					
ANR	5261123	Identifier	LEB128_4		5261009	0					
ANR	5261124	ArgumentList	ut32		5261009	1					
ANR	5261125	Argument	ut32		5261009	0					
ANR	5261126	Identifier	ut32		5261009	0					
ANR	5261127	ReturnStatement	return 4 ;	171:2:3922:3930	5261009	1	True				
ANR	5261128	PrimaryExpression	4		5261009	0					
ANR	5261129	ElseStatement	else		5261009	0					
ANR	5261130	IfStatement	if ( p + 4 < max && ! ( p [ 4 ] & 0x80 ) )		5261009	0					
ANR	5261131	Condition	p + 4 < max && ! ( p [ 4 ] & 0x80 )	172:12:3944:3972	5261009	0	True				
ANR	5261132	AndExpression	p + 4 < max && ! ( p [ 4 ] & 0x80 )		5261009	0		&&			
ANR	5261133	RelationalExpression	p + 4 < max		5261009	0		<			
ANR	5261134	AdditiveExpression	p + 4		5261009	0		+			
ANR	5261135	Identifier	p		5261009	0					
ANR	5261136	PrimaryExpression	4		5261009	1					
ANR	5261137	Identifier	max		5261009	1					
ANR	5261138	UnaryOperationExpression	! ( p [ 4 ] & 0x80 )		5261009	1					
ANR	5261139	UnaryOperator	!		5261009	0					
ANR	5261140	BitAndExpression	p [ 4 ] & 0x80		5261009	1		&			
ANR	5261141	ArrayIndexing	p [ 4 ]		5261009	0					
ANR	5261142	Identifier	p		5261009	0					
ANR	5261143	PrimaryExpression	4		5261009	1					
ANR	5261144	PrimaryExpression	0x80		5261009	1					
ANR	5261145	CompoundStatement		14:43:389:389	5261009	1					
ANR	5261146	ExpressionStatement	* out_value = LEB128_5 ( ut32 )	175:2:4056:4084	5261009	0	True				
ANR	5261147	AssignmentExpression	* out_value = LEB128_5 ( ut32 )		5261009	0		=			
ANR	5261148	UnaryOperationExpression	* out_value		5261009	0					
ANR	5261149	UnaryOperator	*		5261009	0					
ANR	5261150	Identifier	out_value		5261009	1					
ANR	5261151	CallExpression	LEB128_5 ( ut32 )		5261009	1					
ANR	5261152	Callee	LEB128_5		5261009	0					
ANR	5261153	Identifier	LEB128_5		5261009	0					
ANR	5261154	ArgumentList	ut32		5261009	1					
ANR	5261155	Argument	ut32		5261009	0					
ANR	5261156	Identifier	ut32		5261009	0					
ANR	5261157	ReturnStatement	return 5 ;	176:2:4088:4096	5261009	1	True				
ANR	5261158	PrimaryExpression	5		5261009	0					
ANR	5261159	ElseStatement	else		5261009	0					
ANR	5261160	CompoundStatement		19:8:520:520	5261009	0					
ANR	5261161	ExpressionStatement	* out_value = 0	179:2:4131:4145	5261009	0	True				
ANR	5261162	AssignmentExpression	* out_value = 0		5261009	0		=			
ANR	5261163	UnaryOperationExpression	* out_value		5261009	0					
ANR	5261164	UnaryOperator	*		5261009	0					
ANR	5261165	Identifier	out_value		5261009	1					
ANR	5261166	PrimaryExpression	0		5261009	1					
ANR	5261167	ReturnStatement	return 0 ;	180:2:4149:4157	5261009	1	True				
ANR	5261168	PrimaryExpression	0		5261009	0					
ANR	5261169	ReturnType	R_API size_t		5261009	1					
ANR	5261170	Identifier	read_u32_leb128		5261009	2					
ANR	5261171	ParameterList	"const ut8 * p , const ut8 * max , ut32 * out_value"		5261009	3					
ANR	5261172	Parameter	const ut8 * p	159:30:3538:3549	5261009	0	True				
ANR	5261173	ParameterType	const ut8 *		5261009	0					
ANR	5261174	Identifier	p		5261009	1					
ANR	5261175	Parameter	const ut8 * max	159:44:3552:3565	5261009	1	True				
ANR	5261176	ParameterType	const ut8 *		5261009	0					
ANR	5261177	Identifier	max		5261009	1					
ANR	5261178	Parameter	ut32 * out_value	159:60:3568:3582	5261009	2	True				
ANR	5261179	ParameterType	ut32 *		5261009	0					
ANR	5261180	Identifier	out_value		5261009	1					
ANR	5261181	CFGEntryNode	ENTRY		5261009		True				
ANR	5261182	CFGExitNode	EXIT		5261009		True				
ANR	5261183	Symbol	p		5261009						
ANR	5261184	Symbol	LEB128_2		5261009						
ANR	5261185	Symbol	out_value		5261009						
ANR	5261186	Symbol	LEB128_1		5261009						
ANR	5261187	Symbol	LEB128_4		5261009						
ANR	5261188	Symbol	LEB128_3		5261009						
ANR	5261189	Symbol	max		5261009						
ANR	5261190	Symbol	LEB128_5		5261009						
ANR	5261191	Symbol	ut32		5261009						
ANR	5261192	Symbol	* p		5261009						
ANR	5261193	Symbol	* out_value		5261009						
ANR	5261194	Function	read_i32_leb128	184:0:4165:5164							
ANR	5261195	FunctionDef	"read_i32_leb128 (const ut8 * p , const ut8 * max , st32 * out_value)"		5261194	0					
ANR	5261196	CompoundStatement		184:77:4242:5164	5261194	0					
ANR	5261197	IfStatement	if ( p < max && ! ( p [ 0 ] & 0x80 ) )		5261194	0					
ANR	5261198	Condition	p < max && ! ( p [ 0 ] & 0x80 )	185:5:4249:4273	5261194	0	True				
ANR	5261199	AndExpression	p < max && ! ( p [ 0 ] & 0x80 )		5261194	0		&&			
ANR	5261200	RelationalExpression	p < max		5261194	0		<			
ANR	5261201	Identifier	p		5261194	0					
ANR	5261202	Identifier	max		5261194	1					
ANR	5261203	UnaryOperationExpression	! ( p [ 0 ] & 0x80 )		5261194	1					
ANR	5261204	UnaryOperator	!		5261194	0					
ANR	5261205	BitAndExpression	p [ 0 ] & 0x80		5261194	1		&			
ANR	5261206	ArrayIndexing	p [ 0 ]		5261194	0					
ANR	5261207	Identifier	p		5261194	0					
ANR	5261208	PrimaryExpression	0		5261194	1					
ANR	5261209	PrimaryExpression	0x80		5261194	1					
ANR	5261210	CompoundStatement		3:2:37:66	5261194	1					
ANR	5261211	IdentifierDeclStatement	ut32 result = LEB128_1 ( ut32 ) ;	186:2:4280:4309	5261194	0	True				
ANR	5261212	IdentifierDecl	result = LEB128_1 ( ut32 )		5261194	0					
ANR	5261213	IdentifierDeclType	ut32		5261194	0					
ANR	5261214	Identifier	result		5261194	1					
ANR	5261215	AssignmentExpression	result = LEB128_1 ( ut32 )		5261194	2		=			
ANR	5261216	Identifier	result		5261194	0					
ANR	5261217	CallExpression	LEB128_1 ( ut32 )		5261194	1					
ANR	5261218	Callee	LEB128_1		5261194	0					
ANR	5261219	Identifier	LEB128_1		5261194	0					
ANR	5261220	ArgumentList	ut32		5261194	1					
ANR	5261221	Argument	ut32		5261194	0					
ANR	5261222	Identifier	ut32		5261194	0					
ANR	5261223	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut32 , result , 6 )"	187:2:4313:4355	5261194	1	True				
ANR	5261224	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut32 , result , 6 )"		5261194	0		=			
ANR	5261225	UnaryOperationExpression	* out_value		5261194	0					
ANR	5261226	UnaryOperator	*		5261194	0					
ANR	5261227	Identifier	out_value		5261194	1					
ANR	5261228	CallExpression	"SIGN_EXTEND ( ut32 , result , 6 )"		5261194	1					
ANR	5261229	Callee	SIGN_EXTEND		5261194	0					
ANR	5261230	Identifier	SIGN_EXTEND		5261194	0					
ANR	5261231	ArgumentList	ut32		5261194	1					
ANR	5261232	Argument	ut32		5261194	0					
ANR	5261233	Identifier	ut32		5261194	0					
ANR	5261234	Argument	result		5261194	1					
ANR	5261235	Identifier	result		5261194	0					
ANR	5261236	Argument	6		5261194	2					
ANR	5261237	PrimaryExpression	6		5261194	0					
ANR	5261238	ReturnStatement	return 1 ;	188:2:4359:4367	5261194	2	True				
ANR	5261239	PrimaryExpression	1		5261194	0					
ANR	5261240	ElseStatement	else		5261194	0					
ANR	5261241	IfStatement	if ( p + 1 < max && ! ( p [ 1 ] & 0x80 ) )		5261194	0					
ANR	5261242	Condition	p + 1 < max && ! ( p [ 1 ] & 0x80 )	189:12:4381:4409	5261194	0	True				
ANR	5261243	AndExpression	p + 1 < max && ! ( p [ 1 ] & 0x80 )		5261194	0		&&			
ANR	5261244	RelationalExpression	p + 1 < max		5261194	0		<			
ANR	5261245	AdditiveExpression	p + 1		5261194	0		+			
ANR	5261246	Identifier	p		5261194	0					
ANR	5261247	PrimaryExpression	1		5261194	1					
ANR	5261248	Identifier	max		5261194	1					
ANR	5261249	UnaryOperationExpression	! ( p [ 1 ] & 0x80 )		5261194	1					
ANR	5261250	UnaryOperator	!		5261194	0					
ANR	5261251	BitAndExpression	p [ 1 ] & 0x80		5261194	1		&			
ANR	5261252	ArrayIndexing	p [ 1 ]		5261194	0					
ANR	5261253	Identifier	p		5261194	0					
ANR	5261254	PrimaryExpression	1		5261194	1					
ANR	5261255	PrimaryExpression	0x80		5261194	1					
ANR	5261256	CompoundStatement		7:2:173:202	5261194	1					
ANR	5261257	IdentifierDeclStatement	ut32 result = LEB128_2 ( ut32 ) ;	190:2:4416:4445	5261194	0	True				
ANR	5261258	IdentifierDecl	result = LEB128_2 ( ut32 )		5261194	0					
ANR	5261259	IdentifierDeclType	ut32		5261194	0					
ANR	5261260	Identifier	result		5261194	1					
ANR	5261261	AssignmentExpression	result = LEB128_2 ( ut32 )		5261194	2		=			
ANR	5261262	Identifier	result		5261194	0					
ANR	5261263	CallExpression	LEB128_2 ( ut32 )		5261194	1					
ANR	5261264	Callee	LEB128_2		5261194	0					
ANR	5261265	Identifier	LEB128_2		5261194	0					
ANR	5261266	ArgumentList	ut32		5261194	1					
ANR	5261267	Argument	ut32		5261194	0					
ANR	5261268	Identifier	ut32		5261194	0					
ANR	5261269	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut32 , result , 13 )"	191:2:4449:4492	5261194	1	True				
ANR	5261270	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut32 , result , 13 )"		5261194	0		=			
ANR	5261271	UnaryOperationExpression	* out_value		5261194	0					
ANR	5261272	UnaryOperator	*		5261194	0					
ANR	5261273	Identifier	out_value		5261194	1					
ANR	5261274	CallExpression	"SIGN_EXTEND ( ut32 , result , 13 )"		5261194	1					
ANR	5261275	Callee	SIGN_EXTEND		5261194	0					
ANR	5261276	Identifier	SIGN_EXTEND		5261194	0					
ANR	5261277	ArgumentList	ut32		5261194	1					
ANR	5261278	Argument	ut32		5261194	0					
ANR	5261279	Identifier	ut32		5261194	0					
ANR	5261280	Argument	result		5261194	1					
ANR	5261281	Identifier	result		5261194	0					
ANR	5261282	Argument	13		5261194	2					
ANR	5261283	PrimaryExpression	13		5261194	0					
ANR	5261284	ReturnStatement	return 2 ;	192:2:4496:4504	5261194	2	True				
ANR	5261285	PrimaryExpression	2		5261194	0					
ANR	5261286	ElseStatement	else		5261194	0					
ANR	5261287	IfStatement	if ( p + 2 < max && ! ( p [ 2 ] & 0x80 ) )		5261194	0					
ANR	5261288	Condition	p + 2 < max && ! ( p [ 2 ] & 0x80 )	193:12:4518:4546	5261194	0	True				
ANR	5261289	AndExpression	p + 2 < max && ! ( p [ 2 ] & 0x80 )		5261194	0		&&			
ANR	5261290	RelationalExpression	p + 2 < max		5261194	0		<			
ANR	5261291	AdditiveExpression	p + 2		5261194	0		+			
ANR	5261292	Identifier	p		5261194	0					
ANR	5261293	PrimaryExpression	2		5261194	1					
ANR	5261294	Identifier	max		5261194	1					
ANR	5261295	UnaryOperationExpression	! ( p [ 2 ] & 0x80 )		5261194	1					
ANR	5261296	UnaryOperator	!		5261194	0					
ANR	5261297	BitAndExpression	p [ 2 ] & 0x80		5261194	1		&			
ANR	5261298	ArrayIndexing	p [ 2 ]		5261194	0					
ANR	5261299	Identifier	p		5261194	0					
ANR	5261300	PrimaryExpression	2		5261194	1					
ANR	5261301	PrimaryExpression	0x80		5261194	1					
ANR	5261302	CompoundStatement		11:2:310:339	5261194	1					
ANR	5261303	IdentifierDeclStatement	ut32 result = LEB128_3 ( ut32 ) ;	194:2:4553:4582	5261194	0	True				
ANR	5261304	IdentifierDecl	result = LEB128_3 ( ut32 )		5261194	0					
ANR	5261305	IdentifierDeclType	ut32		5261194	0					
ANR	5261306	Identifier	result		5261194	1					
ANR	5261307	AssignmentExpression	result = LEB128_3 ( ut32 )		5261194	2		=			
ANR	5261308	Identifier	result		5261194	0					
ANR	5261309	CallExpression	LEB128_3 ( ut32 )		5261194	1					
ANR	5261310	Callee	LEB128_3		5261194	0					
ANR	5261311	Identifier	LEB128_3		5261194	0					
ANR	5261312	ArgumentList	ut32		5261194	1					
ANR	5261313	Argument	ut32		5261194	0					
ANR	5261314	Identifier	ut32		5261194	0					
ANR	5261315	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut32 , result , 20 )"	195:2:4586:4629	5261194	1	True				
ANR	5261316	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut32 , result , 20 )"		5261194	0		=			
ANR	5261317	UnaryOperationExpression	* out_value		5261194	0					
ANR	5261318	UnaryOperator	*		5261194	0					
ANR	5261319	Identifier	out_value		5261194	1					
ANR	5261320	CallExpression	"SIGN_EXTEND ( ut32 , result , 20 )"		5261194	1					
ANR	5261321	Callee	SIGN_EXTEND		5261194	0					
ANR	5261322	Identifier	SIGN_EXTEND		5261194	0					
ANR	5261323	ArgumentList	ut32		5261194	1					
ANR	5261324	Argument	ut32		5261194	0					
ANR	5261325	Identifier	ut32		5261194	0					
ANR	5261326	Argument	result		5261194	1					
ANR	5261327	Identifier	result		5261194	0					
ANR	5261328	Argument	20		5261194	2					
ANR	5261329	PrimaryExpression	20		5261194	0					
ANR	5261330	ReturnStatement	return 3 ;	196:2:4633:4641	5261194	2	True				
ANR	5261331	PrimaryExpression	3		5261194	0					
ANR	5261332	ElseStatement	else		5261194	0					
ANR	5261333	IfStatement	if ( p + 3 < max && ! ( p [ 3 ] & 0x80 ) )		5261194	0					
ANR	5261334	Condition	p + 3 < max && ! ( p [ 3 ] & 0x80 )	197:12:4655:4683	5261194	0	True				
ANR	5261335	AndExpression	p + 3 < max && ! ( p [ 3 ] & 0x80 )		5261194	0		&&			
ANR	5261336	RelationalExpression	p + 3 < max		5261194	0		<			
ANR	5261337	AdditiveExpression	p + 3		5261194	0		+			
ANR	5261338	Identifier	p		5261194	0					
ANR	5261339	PrimaryExpression	3		5261194	1					
ANR	5261340	Identifier	max		5261194	1					
ANR	5261341	UnaryOperationExpression	! ( p [ 3 ] & 0x80 )		5261194	1					
ANR	5261342	UnaryOperator	!		5261194	0					
ANR	5261343	BitAndExpression	p [ 3 ] & 0x80		5261194	1		&			
ANR	5261344	ArrayIndexing	p [ 3 ]		5261194	0					
ANR	5261345	Identifier	p		5261194	0					
ANR	5261346	PrimaryExpression	3		5261194	1					
ANR	5261347	PrimaryExpression	0x80		5261194	1					
ANR	5261348	CompoundStatement		15:2:447:476	5261194	1					
ANR	5261349	IdentifierDeclStatement	ut32 result = LEB128_4 ( ut32 ) ;	198:2:4690:4719	5261194	0	True				
ANR	5261350	IdentifierDecl	result = LEB128_4 ( ut32 )		5261194	0					
ANR	5261351	IdentifierDeclType	ut32		5261194	0					
ANR	5261352	Identifier	result		5261194	1					
ANR	5261353	AssignmentExpression	result = LEB128_4 ( ut32 )		5261194	2		=			
ANR	5261354	Identifier	result		5261194	0					
ANR	5261355	CallExpression	LEB128_4 ( ut32 )		5261194	1					
ANR	5261356	Callee	LEB128_4		5261194	0					
ANR	5261357	Identifier	LEB128_4		5261194	0					
ANR	5261358	ArgumentList	ut32		5261194	1					
ANR	5261359	Argument	ut32		5261194	0					
ANR	5261360	Identifier	ut32		5261194	0					
ANR	5261361	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut32 , result , 27 )"	199:2:4723:4766	5261194	1	True				
ANR	5261362	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut32 , result , 27 )"		5261194	0		=			
ANR	5261363	UnaryOperationExpression	* out_value		5261194	0					
ANR	5261364	UnaryOperator	*		5261194	0					
ANR	5261365	Identifier	out_value		5261194	1					
ANR	5261366	CallExpression	"SIGN_EXTEND ( ut32 , result , 27 )"		5261194	1					
ANR	5261367	Callee	SIGN_EXTEND		5261194	0					
ANR	5261368	Identifier	SIGN_EXTEND		5261194	0					
ANR	5261369	ArgumentList	ut32		5261194	1					
ANR	5261370	Argument	ut32		5261194	0					
ANR	5261371	Identifier	ut32		5261194	0					
ANR	5261372	Argument	result		5261194	1					
ANR	5261373	Identifier	result		5261194	0					
ANR	5261374	Argument	27		5261194	2					
ANR	5261375	PrimaryExpression	27		5261194	0					
ANR	5261376	ReturnStatement	return 4 ;	200:2:4770:4778	5261194	2	True				
ANR	5261377	PrimaryExpression	4		5261194	0					
ANR	5261378	ElseStatement	else		5261194	0					
ANR	5261379	IfStatement	if ( p + 4 < max && ! ( p [ 4 ] & 0x80 ) )		5261194	0					
ANR	5261380	Condition	p + 4 < max && ! ( p [ 4 ] & 0x80 )	201:12:4792:4818	5261194	0	True				
ANR	5261381	AndExpression	p + 4 < max && ! ( p [ 4 ] & 0x80 )		5261194	0		&&			
ANR	5261382	RelationalExpression	p + 4 < max		5261194	0		<			
ANR	5261383	AdditiveExpression	p + 4		5261194	0		+			
ANR	5261384	Identifier	p		5261194	0					
ANR	5261385	PrimaryExpression	4		5261194	1					
ANR	5261386	Identifier	max		5261194	1					
ANR	5261387	UnaryOperationExpression	! ( p [ 4 ] & 0x80 )		5261194	1					
ANR	5261388	UnaryOperator	!		5261194	0					
ANR	5261389	BitAndExpression	p [ 4 ] & 0x80		5261194	1		&			
ANR	5261390	ArrayIndexing	p [ 4 ]		5261194	0					
ANR	5261391	Identifier	p		5261194	0					
ANR	5261392	PrimaryExpression	4		5261194	1					
ANR	5261393	PrimaryExpression	0x80		5261194	1					
ANR	5261394	CompoundStatement		25:2:809:838	5261194	1					
ANR	5261395	IdentifierDeclStatement	bool sign_bit_set = ( p [ 4 ] & 0x8 ) ;	203:2:4889:4921	5261194	0	True				
ANR	5261396	IdentifierDecl	sign_bit_set = ( p [ 4 ] & 0x8 )		5261194	0					
ANR	5261397	IdentifierDeclType	bool		5261194	0					
ANR	5261398	Identifier	sign_bit_set		5261194	1					
ANR	5261399	AssignmentExpression	sign_bit_set = ( p [ 4 ] & 0x8 )		5261194	2		=			
ANR	5261400	Identifier	sign_bit_set		5261194	0					
ANR	5261401	BitAndExpression	p [ 4 ] & 0x8		5261194	1		&			
ANR	5261402	ArrayIndexing	p [ 4 ]		5261194	0					
ANR	5261403	Identifier	p		5261194	0					
ANR	5261404	PrimaryExpression	4		5261194	1					
ANR	5261405	PrimaryExpression	0x8		5261194	1					
ANR	5261406	IdentifierDeclStatement	int top_bits = p [ 4 ] & 0xf0 ;	204:2:4925:4951	5261194	1	True				
ANR	5261407	IdentifierDecl	top_bits = p [ 4 ] & 0xf0		5261194	0					
ANR	5261408	IdentifierDeclType	int		5261194	0					
ANR	5261409	Identifier	top_bits		5261194	1					
ANR	5261410	AssignmentExpression	top_bits = p [ 4 ] & 0xf0		5261194	2		=			
ANR	5261411	Identifier	top_bits		5261194	0					
ANR	5261412	BitAndExpression	p [ 4 ] & 0xf0		5261194	1		&			
ANR	5261413	ArrayIndexing	p [ 4 ]		5261194	0					
ANR	5261414	Identifier	p		5261194	0					
ANR	5261415	PrimaryExpression	4		5261194	1					
ANR	5261416	PrimaryExpression	0xf0		5261194	1					
ANR	5261417	IfStatement	if ( ( sign_bit_set && top_bits != 0x70 ) || ( ! sign_bit_set && top_bits != 0 ) )		5261194	2					
ANR	5261418	Condition	( sign_bit_set && top_bits != 0x70 ) || ( ! sign_bit_set && top_bits != 0 )	205:6:4959:5028	5261194	0	True				
ANR	5261419	OrExpression	( sign_bit_set && top_bits != 0x70 ) || ( ! sign_bit_set && top_bits != 0 )		5261194	0		||			
ANR	5261420	AndExpression	sign_bit_set && top_bits != 0x70		5261194	0		&&			
ANR	5261421	Identifier	sign_bit_set		5261194	0					
ANR	5261422	EqualityExpression	top_bits != 0x70		5261194	1		!=			
ANR	5261423	Identifier	top_bits		5261194	0					
ANR	5261424	PrimaryExpression	0x70		5261194	1					
ANR	5261425	AndExpression	! sign_bit_set && top_bits != 0		5261194	1		&&			
ANR	5261426	UnaryOperationExpression	! sign_bit_set		5261194	0					
ANR	5261427	UnaryOperator	!		5261194	0					
ANR	5261428	Identifier	sign_bit_set		5261194	1					
ANR	5261429	EqualityExpression	top_bits != 0		5261194	1		!=			
ANR	5261430	Identifier	top_bits		5261194	0					
ANR	5261431	PrimaryExpression	0		5261194	1					
ANR	5261432	CompoundStatement		22:78:788:788	5261194	1					
ANR	5261433	ReturnStatement	return 0 ;	206:3:5036:5044	5261194	0	True				
ANR	5261434	PrimaryExpression	0		5261194	0					
ANR	5261435	IdentifierDeclStatement	ut32 result = LEB128_5 ( ut32 ) ;	208:2:5052:5081	5261194	3	True				
ANR	5261436	IdentifierDecl	result = LEB128_5 ( ut32 )		5261194	0					
ANR	5261437	IdentifierDeclType	ut32		5261194	0					
ANR	5261438	Identifier	result		5261194	1					
ANR	5261439	AssignmentExpression	result = LEB128_5 ( ut32 )		5261194	2		=			
ANR	5261440	Identifier	result		5261194	0					
ANR	5261441	CallExpression	LEB128_5 ( ut32 )		5261194	1					
ANR	5261442	Callee	LEB128_5		5261194	0					
ANR	5261443	Identifier	LEB128_5		5261194	0					
ANR	5261444	ArgumentList	ut32		5261194	1					
ANR	5261445	Argument	ut32		5261194	0					
ANR	5261446	Identifier	ut32		5261194	0					
ANR	5261447	ExpressionStatement	* out_value = result	209:2:5085:5104	5261194	4	True				
ANR	5261448	AssignmentExpression	* out_value = result		5261194	0		=			
ANR	5261449	UnaryOperationExpression	* out_value		5261194	0					
ANR	5261450	UnaryOperator	*		5261194	0					
ANR	5261451	Identifier	out_value		5261194	1					
ANR	5261452	Identifier	result		5261194	1					
ANR	5261453	ReturnStatement	return 5 ;	210:2:5108:5116	5261194	5	True				
ANR	5261454	PrimaryExpression	5		5261194	0					
ANR	5261455	ElseStatement	else		5261194	0					
ANR	5261456	CompoundStatement		28:8:883:883	5261194	0					
ANR	5261457	ReturnStatement	return 0 ;	213:2:5151:5159	5261194	0	True				
ANR	5261458	PrimaryExpression	0		5261194	0					
ANR	5261459	ReturnType	R_API size_t		5261194	1					
ANR	5261460	Identifier	read_i32_leb128		5261194	2					
ANR	5261461	ParameterList	"const ut8 * p , const ut8 * max , st32 * out_value"		5261194	3					
ANR	5261462	Parameter	const ut8 * p	184:30:4195:4206	5261194	0	True				
ANR	5261463	ParameterType	const ut8 *		5261194	0					
ANR	5261464	Identifier	p		5261194	1					
ANR	5261465	Parameter	const ut8 * max	184:44:4209:4222	5261194	1	True				
ANR	5261466	ParameterType	const ut8 *		5261194	0					
ANR	5261467	Identifier	max		5261194	1					
ANR	5261468	Parameter	st32 * out_value	184:60:4225:4239	5261194	2	True				
ANR	5261469	ParameterType	st32 *		5261194	0					
ANR	5261470	Identifier	out_value		5261194	1					
ANR	5261471	CFGEntryNode	ENTRY		5261194		True				
ANR	5261472	CFGExitNode	EXIT		5261194		True				
ANR	5261473	Symbol	max		5261194						
ANR	5261474	Symbol	SIGN_EXTEND		5261194						
ANR	5261475	Symbol	ut32		5261194						
ANR	5261476	Symbol	* out_value		5261194						
ANR	5261477	Symbol	p		5261194						
ANR	5261478	Symbol	result		5261194						
ANR	5261479	Symbol	LEB128_2		5261194						
ANR	5261480	Symbol	out_value		5261194						
ANR	5261481	Symbol	LEB128_1		5261194						
ANR	5261482	Symbol	LEB128_4		5261194						
ANR	5261483	Symbol	LEB128_3		5261194						
ANR	5261484	Symbol	sign_bit_set		5261194						
ANR	5261485	Symbol	top_bits		5261194						
ANR	5261486	Symbol	LEB128_5		5261194						
ANR	5261487	Symbol	* p		5261194						
ANR	5261488	Function	read_u64_leb128	217:0:5167:6191							
ANR	5261489	FunctionDef	"read_u64_leb128 (const ut8 * p , const ut8 * max , ut64 * out_value)"		5261488	0					
ANR	5261490	CompoundStatement		217:77:5244:6191	5261488	0					
ANR	5261491	IfStatement	if ( p < max && ! ( p [ 0 ] & 0x80 ) )		5261488	0					
ANR	5261492	Condition	p < max && ! ( p [ 0 ] & 0x80 )	218:5:5251:5275	5261488	0	True				
ANR	5261493	AndExpression	p < max && ! ( p [ 0 ] & 0x80 )		5261488	0		&&			
ANR	5261494	RelationalExpression	p < max		5261488	0		<			
ANR	5261495	Identifier	p		5261488	0					
ANR	5261496	Identifier	max		5261488	1					
ANR	5261497	UnaryOperationExpression	! ( p [ 0 ] & 0x80 )		5261488	1					
ANR	5261498	UnaryOperator	!		5261488	0					
ANR	5261499	BitAndExpression	p [ 0 ] & 0x80		5261488	1		&			
ANR	5261500	ArrayIndexing	p [ 0 ]		5261488	0					
ANR	5261501	Identifier	p		5261488	0					
ANR	5261502	PrimaryExpression	0		5261488	1					
ANR	5261503	PrimaryExpression	0x80		5261488	1					
ANR	5261504	CompoundStatement		2:32:33:33	5261488	1					
ANR	5261505	ExpressionStatement	* out_value = LEB128_1 ( ut64 )	219:2:5282:5310	5261488	0	True				
ANR	5261506	AssignmentExpression	* out_value = LEB128_1 ( ut64 )		5261488	0		=			
ANR	5261507	UnaryOperationExpression	* out_value		5261488	0					
ANR	5261508	UnaryOperator	*		5261488	0					
ANR	5261509	Identifier	out_value		5261488	1					
ANR	5261510	CallExpression	LEB128_1 ( ut64 )		5261488	1					
ANR	5261511	Callee	LEB128_1		5261488	0					
ANR	5261512	Identifier	LEB128_1		5261488	0					
ANR	5261513	ArgumentList	ut64		5261488	1					
ANR	5261514	Argument	ut64		5261488	0					
ANR	5261515	Identifier	ut64		5261488	0					
ANR	5261516	ReturnStatement	return 1 ;	220:2:5314:5322	5261488	1	True				
ANR	5261517	PrimaryExpression	1		5261488	0					
ANR	5261518	ElseStatement	else		5261488	0					
ANR	5261519	IfStatement	if ( p + 1 < max && ! ( p [ 1 ] & 0x80 ) )		5261488	0					
ANR	5261520	Condition	p + 1 < max && ! ( p [ 1 ] & 0x80 )	221:12:5336:5364	5261488	0	True				
ANR	5261521	AndExpression	p + 1 < max && ! ( p [ 1 ] & 0x80 )		5261488	0		&&			
ANR	5261522	RelationalExpression	p + 1 < max		5261488	0		<			
ANR	5261523	AdditiveExpression	p + 1		5261488	0		+			
ANR	5261524	Identifier	p		5261488	0					
ANR	5261525	PrimaryExpression	1		5261488	1					
ANR	5261526	Identifier	max		5261488	1					
ANR	5261527	UnaryOperationExpression	! ( p [ 1 ] & 0x80 )		5261488	1					
ANR	5261528	UnaryOperator	!		5261488	0					
ANR	5261529	BitAndExpression	p [ 1 ] & 0x80		5261488	1		&			
ANR	5261530	ArrayIndexing	p [ 1 ]		5261488	0					
ANR	5261531	Identifier	p		5261488	0					
ANR	5261532	PrimaryExpression	1		5261488	1					
ANR	5261533	PrimaryExpression	0x80		5261488	1					
ANR	5261534	CompoundStatement		5:43:122:122	5261488	1					
ANR	5261535	ExpressionStatement	* out_value = LEB128_2 ( ut64 )	222:2:5371:5399	5261488	0	True				
ANR	5261536	AssignmentExpression	* out_value = LEB128_2 ( ut64 )		5261488	0		=			
ANR	5261537	UnaryOperationExpression	* out_value		5261488	0					
ANR	5261538	UnaryOperator	*		5261488	0					
ANR	5261539	Identifier	out_value		5261488	1					
ANR	5261540	CallExpression	LEB128_2 ( ut64 )		5261488	1					
ANR	5261541	Callee	LEB128_2		5261488	0					
ANR	5261542	Identifier	LEB128_2		5261488	0					
ANR	5261543	ArgumentList	ut64		5261488	1					
ANR	5261544	Argument	ut64		5261488	0					
ANR	5261545	Identifier	ut64		5261488	0					
ANR	5261546	ReturnStatement	return 2 ;	223:2:5403:5411	5261488	1	True				
ANR	5261547	PrimaryExpression	2		5261488	0					
ANR	5261548	ElseStatement	else		5261488	0					
ANR	5261549	IfStatement	if ( p + 2 < max && ! ( p [ 2 ] & 0x80 ) )		5261488	0					
ANR	5261550	Condition	p + 2 < max && ! ( p [ 2 ] & 0x80 )	224:12:5425:5453	5261488	0	True				
ANR	5261551	AndExpression	p + 2 < max && ! ( p [ 2 ] & 0x80 )		5261488	0		&&			
ANR	5261552	RelationalExpression	p + 2 < max		5261488	0		<			
ANR	5261553	AdditiveExpression	p + 2		5261488	0		+			
ANR	5261554	Identifier	p		5261488	0					
ANR	5261555	PrimaryExpression	2		5261488	1					
ANR	5261556	Identifier	max		5261488	1					
ANR	5261557	UnaryOperationExpression	! ( p [ 2 ] & 0x80 )		5261488	1					
ANR	5261558	UnaryOperator	!		5261488	0					
ANR	5261559	BitAndExpression	p [ 2 ] & 0x80		5261488	1		&			
ANR	5261560	ArrayIndexing	p [ 2 ]		5261488	0					
ANR	5261561	Identifier	p		5261488	0					
ANR	5261562	PrimaryExpression	2		5261488	1					
ANR	5261563	PrimaryExpression	0x80		5261488	1					
ANR	5261564	CompoundStatement		8:43:211:211	5261488	1					
ANR	5261565	ExpressionStatement	* out_value = LEB128_3 ( ut64 )	225:2:5460:5488	5261488	0	True				
ANR	5261566	AssignmentExpression	* out_value = LEB128_3 ( ut64 )		5261488	0		=			
ANR	5261567	UnaryOperationExpression	* out_value		5261488	0					
ANR	5261568	UnaryOperator	*		5261488	0					
ANR	5261569	Identifier	out_value		5261488	1					
ANR	5261570	CallExpression	LEB128_3 ( ut64 )		5261488	1					
ANR	5261571	Callee	LEB128_3		5261488	0					
ANR	5261572	Identifier	LEB128_3		5261488	0					
ANR	5261573	ArgumentList	ut64		5261488	1					
ANR	5261574	Argument	ut64		5261488	0					
ANR	5261575	Identifier	ut64		5261488	0					
ANR	5261576	ReturnStatement	return 3 ;	226:2:5492:5500	5261488	1	True				
ANR	5261577	PrimaryExpression	3		5261488	0					
ANR	5261578	ElseStatement	else		5261488	0					
ANR	5261579	IfStatement	if ( p + 3 < max && ! ( p [ 3 ] & 0x80 ) )		5261488	0					
ANR	5261580	Condition	p + 3 < max && ! ( p [ 3 ] & 0x80 )	227:12:5514:5542	5261488	0	True				
ANR	5261581	AndExpression	p + 3 < max && ! ( p [ 3 ] & 0x80 )		5261488	0		&&			
ANR	5261582	RelationalExpression	p + 3 < max		5261488	0		<			
ANR	5261583	AdditiveExpression	p + 3		5261488	0		+			
ANR	5261584	Identifier	p		5261488	0					
ANR	5261585	PrimaryExpression	3		5261488	1					
ANR	5261586	Identifier	max		5261488	1					
ANR	5261587	UnaryOperationExpression	! ( p [ 3 ] & 0x80 )		5261488	1					
ANR	5261588	UnaryOperator	!		5261488	0					
ANR	5261589	BitAndExpression	p [ 3 ] & 0x80		5261488	1		&			
ANR	5261590	ArrayIndexing	p [ 3 ]		5261488	0					
ANR	5261591	Identifier	p		5261488	0					
ANR	5261592	PrimaryExpression	3		5261488	1					
ANR	5261593	PrimaryExpression	0x80		5261488	1					
ANR	5261594	CompoundStatement		11:43:300:300	5261488	1					
ANR	5261595	ExpressionStatement	* out_value = LEB128_4 ( ut64 )	228:2:5549:5577	5261488	0	True				
ANR	5261596	AssignmentExpression	* out_value = LEB128_4 ( ut64 )		5261488	0		=			
ANR	5261597	UnaryOperationExpression	* out_value		5261488	0					
ANR	5261598	UnaryOperator	*		5261488	0					
ANR	5261599	Identifier	out_value		5261488	1					
ANR	5261600	CallExpression	LEB128_4 ( ut64 )		5261488	1					
ANR	5261601	Callee	LEB128_4		5261488	0					
ANR	5261602	Identifier	LEB128_4		5261488	0					
ANR	5261603	ArgumentList	ut64		5261488	1					
ANR	5261604	Argument	ut64		5261488	0					
ANR	5261605	Identifier	ut64		5261488	0					
ANR	5261606	ReturnStatement	return 4 ;	229:2:5581:5589	5261488	1	True				
ANR	5261607	PrimaryExpression	4		5261488	0					
ANR	5261608	ElseStatement	else		5261488	0					
ANR	5261609	IfStatement	if ( p + 4 < max && ! ( p [ 4 ] & 0x80 ) )		5261488	0					
ANR	5261610	Condition	p + 4 < max && ! ( p [ 4 ] & 0x80 )	230:12:5603:5631	5261488	0	True				
ANR	5261611	AndExpression	p + 4 < max && ! ( p [ 4 ] & 0x80 )		5261488	0		&&			
ANR	5261612	RelationalExpression	p + 4 < max		5261488	0		<			
ANR	5261613	AdditiveExpression	p + 4		5261488	0		+			
ANR	5261614	Identifier	p		5261488	0					
ANR	5261615	PrimaryExpression	4		5261488	1					
ANR	5261616	Identifier	max		5261488	1					
ANR	5261617	UnaryOperationExpression	! ( p [ 4 ] & 0x80 )		5261488	1					
ANR	5261618	UnaryOperator	!		5261488	0					
ANR	5261619	BitAndExpression	p [ 4 ] & 0x80		5261488	1		&			
ANR	5261620	ArrayIndexing	p [ 4 ]		5261488	0					
ANR	5261621	Identifier	p		5261488	0					
ANR	5261622	PrimaryExpression	4		5261488	1					
ANR	5261623	PrimaryExpression	0x80		5261488	1					
ANR	5261624	CompoundStatement		14:43:389:389	5261488	1					
ANR	5261625	ExpressionStatement	* out_value = LEB128_5 ( ut64 )	231:2:5638:5666	5261488	0	True				
ANR	5261626	AssignmentExpression	* out_value = LEB128_5 ( ut64 )		5261488	0		=			
ANR	5261627	UnaryOperationExpression	* out_value		5261488	0					
ANR	5261628	UnaryOperator	*		5261488	0					
ANR	5261629	Identifier	out_value		5261488	1					
ANR	5261630	CallExpression	LEB128_5 ( ut64 )		5261488	1					
ANR	5261631	Callee	LEB128_5		5261488	0					
ANR	5261632	Identifier	LEB128_5		5261488	0					
ANR	5261633	ArgumentList	ut64		5261488	1					
ANR	5261634	Argument	ut64		5261488	0					
ANR	5261635	Identifier	ut64		5261488	0					
ANR	5261636	ReturnStatement	return 5 ;	232:2:5670:5678	5261488	1	True				
ANR	5261637	PrimaryExpression	5		5261488	0					
ANR	5261638	ElseStatement	else		5261488	0					
ANR	5261639	IfStatement	if ( p + 5 < max && ! ( p [ 5 ] & 0x80 ) )		5261488	0					
ANR	5261640	Condition	p + 5 < max && ! ( p [ 5 ] & 0x80 )	233:12:5692:5720	5261488	0	True				
ANR	5261641	AndExpression	p + 5 < max && ! ( p [ 5 ] & 0x80 )		5261488	0		&&			
ANR	5261642	RelationalExpression	p + 5 < max		5261488	0		<			
ANR	5261643	AdditiveExpression	p + 5		5261488	0		+			
ANR	5261644	Identifier	p		5261488	0					
ANR	5261645	PrimaryExpression	5		5261488	1					
ANR	5261646	Identifier	max		5261488	1					
ANR	5261647	UnaryOperationExpression	! ( p [ 5 ] & 0x80 )		5261488	1					
ANR	5261648	UnaryOperator	!		5261488	0					
ANR	5261649	BitAndExpression	p [ 5 ] & 0x80		5261488	1		&			
ANR	5261650	ArrayIndexing	p [ 5 ]		5261488	0					
ANR	5261651	Identifier	p		5261488	0					
ANR	5261652	PrimaryExpression	5		5261488	1					
ANR	5261653	PrimaryExpression	0x80		5261488	1					
ANR	5261654	CompoundStatement		17:43:478:478	5261488	1					
ANR	5261655	ExpressionStatement	* out_value = LEB128_6 ( ut64 )	234:2:5727:5755	5261488	0	True				
ANR	5261656	AssignmentExpression	* out_value = LEB128_6 ( ut64 )		5261488	0		=			
ANR	5261657	UnaryOperationExpression	* out_value		5261488	0					
ANR	5261658	UnaryOperator	*		5261488	0					
ANR	5261659	Identifier	out_value		5261488	1					
ANR	5261660	CallExpression	LEB128_6 ( ut64 )		5261488	1					
ANR	5261661	Callee	LEB128_6		5261488	0					
ANR	5261662	Identifier	LEB128_6		5261488	0					
ANR	5261663	ArgumentList	ut64		5261488	1					
ANR	5261664	Argument	ut64		5261488	0					
ANR	5261665	Identifier	ut64		5261488	0					
ANR	5261666	ReturnStatement	return 6 ;	235:2:5759:5767	5261488	1	True				
ANR	5261667	PrimaryExpression	6		5261488	0					
ANR	5261668	ElseStatement	else		5261488	0					
ANR	5261669	IfStatement	if ( p + 6 < max && ! ( p [ 6 ] & 0x80 ) )		5261488	0					
ANR	5261670	Condition	p + 6 < max && ! ( p [ 6 ] & 0x80 )	236:12:5781:5809	5261488	0	True				
ANR	5261671	AndExpression	p + 6 < max && ! ( p [ 6 ] & 0x80 )		5261488	0		&&			
ANR	5261672	RelationalExpression	p + 6 < max		5261488	0		<			
ANR	5261673	AdditiveExpression	p + 6		5261488	0		+			
ANR	5261674	Identifier	p		5261488	0					
ANR	5261675	PrimaryExpression	6		5261488	1					
ANR	5261676	Identifier	max		5261488	1					
ANR	5261677	UnaryOperationExpression	! ( p [ 6 ] & 0x80 )		5261488	1					
ANR	5261678	UnaryOperator	!		5261488	0					
ANR	5261679	BitAndExpression	p [ 6 ] & 0x80		5261488	1		&			
ANR	5261680	ArrayIndexing	p [ 6 ]		5261488	0					
ANR	5261681	Identifier	p		5261488	0					
ANR	5261682	PrimaryExpression	6		5261488	1					
ANR	5261683	PrimaryExpression	0x80		5261488	1					
ANR	5261684	CompoundStatement		20:43:567:567	5261488	1					
ANR	5261685	ExpressionStatement	* out_value = LEB128_7 ( ut64 )	237:2:5816:5844	5261488	0	True				
ANR	5261686	AssignmentExpression	* out_value = LEB128_7 ( ut64 )		5261488	0		=			
ANR	5261687	UnaryOperationExpression	* out_value		5261488	0					
ANR	5261688	UnaryOperator	*		5261488	0					
ANR	5261689	Identifier	out_value		5261488	1					
ANR	5261690	CallExpression	LEB128_7 ( ut64 )		5261488	1					
ANR	5261691	Callee	LEB128_7		5261488	0					
ANR	5261692	Identifier	LEB128_7		5261488	0					
ANR	5261693	ArgumentList	ut64		5261488	1					
ANR	5261694	Argument	ut64		5261488	0					
ANR	5261695	Identifier	ut64		5261488	0					
ANR	5261696	ReturnStatement	return 7 ;	238:2:5848:5856	5261488	1	True				
ANR	5261697	PrimaryExpression	7		5261488	0					
ANR	5261698	ElseStatement	else		5261488	0					
ANR	5261699	IfStatement	if ( p + 7 < max && ! ( p [ 7 ] & 0x80 ) )		5261488	0					
ANR	5261700	Condition	p + 7 < max && ! ( p [ 7 ] & 0x80 )	239:12:5870:5898	5261488	0	True				
ANR	5261701	AndExpression	p + 7 < max && ! ( p [ 7 ] & 0x80 )		5261488	0		&&			
ANR	5261702	RelationalExpression	p + 7 < max		5261488	0		<			
ANR	5261703	AdditiveExpression	p + 7		5261488	0		+			
ANR	5261704	Identifier	p		5261488	0					
ANR	5261705	PrimaryExpression	7		5261488	1					
ANR	5261706	Identifier	max		5261488	1					
ANR	5261707	UnaryOperationExpression	! ( p [ 7 ] & 0x80 )		5261488	1					
ANR	5261708	UnaryOperator	!		5261488	0					
ANR	5261709	BitAndExpression	p [ 7 ] & 0x80		5261488	1		&			
ANR	5261710	ArrayIndexing	p [ 7 ]		5261488	0					
ANR	5261711	Identifier	p		5261488	0					
ANR	5261712	PrimaryExpression	7		5261488	1					
ANR	5261713	PrimaryExpression	0x80		5261488	1					
ANR	5261714	CompoundStatement		23:43:656:656	5261488	1					
ANR	5261715	ExpressionStatement	* out_value = LEB128_8 ( ut64 )	240:2:5905:5933	5261488	0	True				
ANR	5261716	AssignmentExpression	* out_value = LEB128_8 ( ut64 )		5261488	0		=			
ANR	5261717	UnaryOperationExpression	* out_value		5261488	0					
ANR	5261718	UnaryOperator	*		5261488	0					
ANR	5261719	Identifier	out_value		5261488	1					
ANR	5261720	CallExpression	LEB128_8 ( ut64 )		5261488	1					
ANR	5261721	Callee	LEB128_8		5261488	0					
ANR	5261722	Identifier	LEB128_8		5261488	0					
ANR	5261723	ArgumentList	ut64		5261488	1					
ANR	5261724	Argument	ut64		5261488	0					
ANR	5261725	Identifier	ut64		5261488	0					
ANR	5261726	ReturnStatement	return 8 ;	241:2:5937:5945	5261488	1	True				
ANR	5261727	PrimaryExpression	8		5261488	0					
ANR	5261728	ElseStatement	else		5261488	0					
ANR	5261729	IfStatement	if ( p + 8 < max && ! ( p [ 8 ] & 0x80 ) )		5261488	0					
ANR	5261730	Condition	p + 8 < max && ! ( p [ 8 ] & 0x80 )	242:12:5959:5987	5261488	0	True				
ANR	5261731	AndExpression	p + 8 < max && ! ( p [ 8 ] & 0x80 )		5261488	0		&&			
ANR	5261732	RelationalExpression	p + 8 < max		5261488	0		<			
ANR	5261733	AdditiveExpression	p + 8		5261488	0		+			
ANR	5261734	Identifier	p		5261488	0					
ANR	5261735	PrimaryExpression	8		5261488	1					
ANR	5261736	Identifier	max		5261488	1					
ANR	5261737	UnaryOperationExpression	! ( p [ 8 ] & 0x80 )		5261488	1					
ANR	5261738	UnaryOperator	!		5261488	0					
ANR	5261739	BitAndExpression	p [ 8 ] & 0x80		5261488	1		&			
ANR	5261740	ArrayIndexing	p [ 8 ]		5261488	0					
ANR	5261741	Identifier	p		5261488	0					
ANR	5261742	PrimaryExpression	8		5261488	1					
ANR	5261743	PrimaryExpression	0x80		5261488	1					
ANR	5261744	CompoundStatement		26:43:745:745	5261488	1					
ANR	5261745	ExpressionStatement	* out_value = LEB128_9 ( ut64 )	243:2:5994:6022	5261488	0	True				
ANR	5261746	AssignmentExpression	* out_value = LEB128_9 ( ut64 )		5261488	0		=			
ANR	5261747	UnaryOperationExpression	* out_value		5261488	0					
ANR	5261748	UnaryOperator	*		5261488	0					
ANR	5261749	Identifier	out_value		5261488	1					
ANR	5261750	CallExpression	LEB128_9 ( ut64 )		5261488	1					
ANR	5261751	Callee	LEB128_9		5261488	0					
ANR	5261752	Identifier	LEB128_9		5261488	0					
ANR	5261753	ArgumentList	ut64		5261488	1					
ANR	5261754	Argument	ut64		5261488	0					
ANR	5261755	Identifier	ut64		5261488	0					
ANR	5261756	ReturnStatement	return 9 ;	244:2:6026:6034	5261488	1	True				
ANR	5261757	PrimaryExpression	9		5261488	0					
ANR	5261758	ElseStatement	else		5261488	0					
ANR	5261759	IfStatement	if ( p + 9 < max && ! ( p [ 9 ] & 0x80 ) )		5261488	0					
ANR	5261760	Condition	p + 9 < max && ! ( p [ 9 ] & 0x80 )	245:12:6048:6076	5261488	0	True				
ANR	5261761	AndExpression	p + 9 < max && ! ( p [ 9 ] & 0x80 )		5261488	0		&&			
ANR	5261762	RelationalExpression	p + 9 < max		5261488	0		<			
ANR	5261763	AdditiveExpression	p + 9		5261488	0		+			
ANR	5261764	Identifier	p		5261488	0					
ANR	5261765	PrimaryExpression	9		5261488	1					
ANR	5261766	Identifier	max		5261488	1					
ANR	5261767	UnaryOperationExpression	! ( p [ 9 ] & 0x80 )		5261488	1					
ANR	5261768	UnaryOperator	!		5261488	0					
ANR	5261769	BitAndExpression	p [ 9 ] & 0x80		5261488	1		&			
ANR	5261770	ArrayIndexing	p [ 9 ]		5261488	0					
ANR	5261771	Identifier	p		5261488	0					
ANR	5261772	PrimaryExpression	9		5261488	1					
ANR	5261773	PrimaryExpression	0x80		5261488	1					
ANR	5261774	CompoundStatement		29:43:834:834	5261488	1					
ANR	5261775	ExpressionStatement	* out_value = LEB128_10 ( ut64 )	246:2:6083:6112	5261488	0	True				
ANR	5261776	AssignmentExpression	* out_value = LEB128_10 ( ut64 )		5261488	0		=			
ANR	5261777	UnaryOperationExpression	* out_value		5261488	0					
ANR	5261778	UnaryOperator	*		5261488	0					
ANR	5261779	Identifier	out_value		5261488	1					
ANR	5261780	CallExpression	LEB128_10 ( ut64 )		5261488	1					
ANR	5261781	Callee	LEB128_10		5261488	0					
ANR	5261782	Identifier	LEB128_10		5261488	0					
ANR	5261783	ArgumentList	ut64		5261488	1					
ANR	5261784	Argument	ut64		5261488	0					
ANR	5261785	Identifier	ut64		5261488	0					
ANR	5261786	ReturnStatement	return 10 ;	247:2:6116:6125	5261488	1	True				
ANR	5261787	PrimaryExpression	10		5261488	0					
ANR	5261788	ElseStatement	else		5261488	0					
ANR	5261789	CompoundStatement		32:8:890:890	5261488	0					
ANR	5261790	ExpressionStatement	* out_value = 0	250:2:6160:6174	5261488	0	True				
ANR	5261791	AssignmentExpression	* out_value = 0		5261488	0		=			
ANR	5261792	UnaryOperationExpression	* out_value		5261488	0					
ANR	5261793	UnaryOperator	*		5261488	0					
ANR	5261794	Identifier	out_value		5261488	1					
ANR	5261795	PrimaryExpression	0		5261488	1					
ANR	5261796	ReturnStatement	return 0 ;	251:2:6178:6186	5261488	1	True				
ANR	5261797	PrimaryExpression	0		5261488	0					
ANR	5261798	ReturnType	R_API size_t		5261488	1					
ANR	5261799	Identifier	read_u64_leb128		5261488	2					
ANR	5261800	ParameterList	"const ut8 * p , const ut8 * max , ut64 * out_value"		5261488	3					
ANR	5261801	Parameter	const ut8 * p	217:30:5197:5208	5261488	0	True				
ANR	5261802	ParameterType	const ut8 *		5261488	0					
ANR	5261803	Identifier	p		5261488	1					
ANR	5261804	Parameter	const ut8 * max	217:44:5211:5224	5261488	1	True				
ANR	5261805	ParameterType	const ut8 *		5261488	0					
ANR	5261806	Identifier	max		5261488	1					
ANR	5261807	Parameter	ut64 * out_value	217:60:5227:5241	5261488	2	True				
ANR	5261808	ParameterType	ut64 *		5261488	0					
ANR	5261809	Identifier	out_value		5261488	1					
ANR	5261810	CFGEntryNode	ENTRY		5261488		True				
ANR	5261811	CFGExitNode	EXIT		5261488		True				
ANR	5261812	Symbol	max		5261488						
ANR	5261813	Symbol	LEB128_10		5261488						
ANR	5261814	Symbol	ut64		5261488						
ANR	5261815	Symbol	* out_value		5261488						
ANR	5261816	Symbol	p		5261488						
ANR	5261817	Symbol	LEB128_2		5261488						
ANR	5261818	Symbol	out_value		5261488						
ANR	5261819	Symbol	LEB128_1		5261488						
ANR	5261820	Symbol	LEB128_4		5261488						
ANR	5261821	Symbol	LEB128_3		5261488						
ANR	5261822	Symbol	LEB128_6		5261488						
ANR	5261823	Symbol	LEB128_5		5261488						
ANR	5261824	Symbol	LEB128_8		5261488						
ANR	5261825	Symbol	LEB128_7		5261488						
ANR	5261826	Symbol	LEB128_9		5261488						
ANR	5261827	Symbol	* p		5261488						
ANR	5261828	Function	read_i64_leb128	255:0:6194:7881							
ANR	5261829	FunctionDef	"read_i64_leb128 (const ut8 * p , const ut8 * max , st64 * out_value)"		5261828	0					
ANR	5261830	CompoundStatement		255:77:6271:7881	5261828	0					
ANR	5261831	IfStatement	if ( p < max && ! ( p [ 0 ] & 0x80 ) )		5261828	0					
ANR	5261832	Condition	p < max && ! ( p [ 0 ] & 0x80 )	256:5:6278:6302	5261828	0	True				
ANR	5261833	AndExpression	p < max && ! ( p [ 0 ] & 0x80 )		5261828	0		&&			
ANR	5261834	RelationalExpression	p < max		5261828	0		<			
ANR	5261835	Identifier	p		5261828	0					
ANR	5261836	Identifier	max		5261828	1					
ANR	5261837	UnaryOperationExpression	! ( p [ 0 ] & 0x80 )		5261828	1					
ANR	5261838	UnaryOperator	!		5261828	0					
ANR	5261839	BitAndExpression	p [ 0 ] & 0x80		5261828	1		&			
ANR	5261840	ArrayIndexing	p [ 0 ]		5261828	0					
ANR	5261841	Identifier	p		5261828	0					
ANR	5261842	PrimaryExpression	0		5261828	1					
ANR	5261843	PrimaryExpression	0x80		5261828	1					
ANR	5261844	CompoundStatement		3:2:37:66	5261828	1					
ANR	5261845	IdentifierDeclStatement	ut64 result = LEB128_1 ( ut64 ) ;	257:2:6309:6338	5261828	0	True				
ANR	5261846	IdentifierDecl	result = LEB128_1 ( ut64 )		5261828	0					
ANR	5261847	IdentifierDeclType	ut64		5261828	0					
ANR	5261848	Identifier	result		5261828	1					
ANR	5261849	AssignmentExpression	result = LEB128_1 ( ut64 )		5261828	2		=			
ANR	5261850	Identifier	result		5261828	0					
ANR	5261851	CallExpression	LEB128_1 ( ut64 )		5261828	1					
ANR	5261852	Callee	LEB128_1		5261828	0					
ANR	5261853	Identifier	LEB128_1		5261828	0					
ANR	5261854	ArgumentList	ut64		5261828	1					
ANR	5261855	Argument	ut64		5261828	0					
ANR	5261856	Identifier	ut64		5261828	0					
ANR	5261857	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 6 )"	258:2:6342:6384	5261828	1	True				
ANR	5261858	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 6 )"		5261828	0		=			
ANR	5261859	UnaryOperationExpression	* out_value		5261828	0					
ANR	5261860	UnaryOperator	*		5261828	0					
ANR	5261861	Identifier	out_value		5261828	1					
ANR	5261862	CallExpression	"SIGN_EXTEND ( ut64 , result , 6 )"		5261828	1					
ANR	5261863	Callee	SIGN_EXTEND		5261828	0					
ANR	5261864	Identifier	SIGN_EXTEND		5261828	0					
ANR	5261865	ArgumentList	ut64		5261828	1					
ANR	5261866	Argument	ut64		5261828	0					
ANR	5261867	Identifier	ut64		5261828	0					
ANR	5261868	Argument	result		5261828	1					
ANR	5261869	Identifier	result		5261828	0					
ANR	5261870	Argument	6		5261828	2					
ANR	5261871	PrimaryExpression	6		5261828	0					
ANR	5261872	ReturnStatement	return 1 ;	259:2:6388:6396	5261828	2	True				
ANR	5261873	PrimaryExpression	1		5261828	0					
ANR	5261874	ElseStatement	else		5261828	0					
ANR	5261875	IfStatement	if ( p + 1 < max && ! ( p [ 1 ] & 0x80 ) )		5261828	0					
ANR	5261876	Condition	p + 1 < max && ! ( p [ 1 ] & 0x80 )	260:12:6410:6438	5261828	0	True				
ANR	5261877	AndExpression	p + 1 < max && ! ( p [ 1 ] & 0x80 )		5261828	0		&&			
ANR	5261878	RelationalExpression	p + 1 < max		5261828	0		<			
ANR	5261879	AdditiveExpression	p + 1		5261828	0		+			
ANR	5261880	Identifier	p		5261828	0					
ANR	5261881	PrimaryExpression	1		5261828	1					
ANR	5261882	Identifier	max		5261828	1					
ANR	5261883	UnaryOperationExpression	! ( p [ 1 ] & 0x80 )		5261828	1					
ANR	5261884	UnaryOperator	!		5261828	0					
ANR	5261885	BitAndExpression	p [ 1 ] & 0x80		5261828	1		&			
ANR	5261886	ArrayIndexing	p [ 1 ]		5261828	0					
ANR	5261887	Identifier	p		5261828	0					
ANR	5261888	PrimaryExpression	1		5261828	1					
ANR	5261889	PrimaryExpression	0x80		5261828	1					
ANR	5261890	CompoundStatement		7:2:173:201	5261828	1					
ANR	5261891	IdentifierDeclStatement	ut64 result = LEB128_2 ( ut64 ) ;	261:2:6445:6473	5261828	0	True				
ANR	5261892	IdentifierDecl	result = LEB128_2 ( ut64 )		5261828	0					
ANR	5261893	IdentifierDeclType	ut64		5261828	0					
ANR	5261894	Identifier	result		5261828	1					
ANR	5261895	AssignmentExpression	result = LEB128_2 ( ut64 )		5261828	2		=			
ANR	5261896	Identifier	result		5261828	0					
ANR	5261897	CallExpression	LEB128_2 ( ut64 )		5261828	1					
ANR	5261898	Callee	LEB128_2		5261828	0					
ANR	5261899	Identifier	LEB128_2		5261828	0					
ANR	5261900	ArgumentList	ut64		5261828	1					
ANR	5261901	Argument	ut64		5261828	0					
ANR	5261902	Identifier	ut64		5261828	0					
ANR	5261903	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 13 )"	262:2:6477:6520	5261828	1	True				
ANR	5261904	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 13 )"		5261828	0		=			
ANR	5261905	UnaryOperationExpression	* out_value		5261828	0					
ANR	5261906	UnaryOperator	*		5261828	0					
ANR	5261907	Identifier	out_value		5261828	1					
ANR	5261908	CallExpression	"SIGN_EXTEND ( ut64 , result , 13 )"		5261828	1					
ANR	5261909	Callee	SIGN_EXTEND		5261828	0					
ANR	5261910	Identifier	SIGN_EXTEND		5261828	0					
ANR	5261911	ArgumentList	ut64		5261828	1					
ANR	5261912	Argument	ut64		5261828	0					
ANR	5261913	Identifier	ut64		5261828	0					
ANR	5261914	Argument	result		5261828	1					
ANR	5261915	Identifier	result		5261828	0					
ANR	5261916	Argument	13		5261828	2					
ANR	5261917	PrimaryExpression	13		5261828	0					
ANR	5261918	ReturnStatement	return 2 ;	263:2:6524:6532	5261828	2	True				
ANR	5261919	PrimaryExpression	2		5261828	0					
ANR	5261920	ElseStatement	else		5261828	0					
ANR	5261921	IfStatement	if ( p + 2 < max && ! ( p [ 2 ] & 0x80 ) )		5261828	0					
ANR	5261922	Condition	p + 2 < max && ! ( p [ 2 ] & 0x80 )	264:12:6546:6574	5261828	0	True				
ANR	5261923	AndExpression	p + 2 < max && ! ( p [ 2 ] & 0x80 )		5261828	0		&&			
ANR	5261924	RelationalExpression	p + 2 < max		5261828	0		<			
ANR	5261925	AdditiveExpression	p + 2		5261828	0		+			
ANR	5261926	Identifier	p		5261828	0					
ANR	5261927	PrimaryExpression	2		5261828	1					
ANR	5261928	Identifier	max		5261828	1					
ANR	5261929	UnaryOperationExpression	! ( p [ 2 ] & 0x80 )		5261828	1					
ANR	5261930	UnaryOperator	!		5261828	0					
ANR	5261931	BitAndExpression	p [ 2 ] & 0x80		5261828	1		&			
ANR	5261932	ArrayIndexing	p [ 2 ]		5261828	0					
ANR	5261933	Identifier	p		5261828	0					
ANR	5261934	PrimaryExpression	2		5261828	1					
ANR	5261935	PrimaryExpression	0x80		5261828	1					
ANR	5261936	CompoundStatement		11:2:309:338	5261828	1					
ANR	5261937	IdentifierDeclStatement	ut64 result = LEB128_3 ( ut64 ) ;	265:2:6581:6610	5261828	0	True				
ANR	5261938	IdentifierDecl	result = LEB128_3 ( ut64 )		5261828	0					
ANR	5261939	IdentifierDeclType	ut64		5261828	0					
ANR	5261940	Identifier	result		5261828	1					
ANR	5261941	AssignmentExpression	result = LEB128_3 ( ut64 )		5261828	2		=			
ANR	5261942	Identifier	result		5261828	0					
ANR	5261943	CallExpression	LEB128_3 ( ut64 )		5261828	1					
ANR	5261944	Callee	LEB128_3		5261828	0					
ANR	5261945	Identifier	LEB128_3		5261828	0					
ANR	5261946	ArgumentList	ut64		5261828	1					
ANR	5261947	Argument	ut64		5261828	0					
ANR	5261948	Identifier	ut64		5261828	0					
ANR	5261949	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 20 )"	266:2:6614:6657	5261828	1	True				
ANR	5261950	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 20 )"		5261828	0		=			
ANR	5261951	UnaryOperationExpression	* out_value		5261828	0					
ANR	5261952	UnaryOperator	*		5261828	0					
ANR	5261953	Identifier	out_value		5261828	1					
ANR	5261954	CallExpression	"SIGN_EXTEND ( ut64 , result , 20 )"		5261828	1					
ANR	5261955	Callee	SIGN_EXTEND		5261828	0					
ANR	5261956	Identifier	SIGN_EXTEND		5261828	0					
ANR	5261957	ArgumentList	ut64		5261828	1					
ANR	5261958	Argument	ut64		5261828	0					
ANR	5261959	Identifier	ut64		5261828	0					
ANR	5261960	Argument	result		5261828	1					
ANR	5261961	Identifier	result		5261828	0					
ANR	5261962	Argument	20		5261828	2					
ANR	5261963	PrimaryExpression	20		5261828	0					
ANR	5261964	ReturnStatement	return 3 ;	267:2:6661:6669	5261828	2	True				
ANR	5261965	PrimaryExpression	3		5261828	0					
ANR	5261966	ElseStatement	else		5261828	0					
ANR	5261967	IfStatement	if ( p + 3 < max && ! ( p [ 3 ] & 0x80 ) )		5261828	0					
ANR	5261968	Condition	p + 3 < max && ! ( p [ 3 ] & 0x80 )	268:12:6683:6711	5261828	0	True				
ANR	5261969	AndExpression	p + 3 < max && ! ( p [ 3 ] & 0x80 )		5261828	0		&&			
ANR	5261970	RelationalExpression	p + 3 < max		5261828	0		<			
ANR	5261971	AdditiveExpression	p + 3		5261828	0		+			
ANR	5261972	Identifier	p		5261828	0					
ANR	5261973	PrimaryExpression	3		5261828	1					
ANR	5261974	Identifier	max		5261828	1					
ANR	5261975	UnaryOperationExpression	! ( p [ 3 ] & 0x80 )		5261828	1					
ANR	5261976	UnaryOperator	!		5261828	0					
ANR	5261977	BitAndExpression	p [ 3 ] & 0x80		5261828	1		&			
ANR	5261978	ArrayIndexing	p [ 3 ]		5261828	0					
ANR	5261979	Identifier	p		5261828	0					
ANR	5261980	PrimaryExpression	3		5261828	1					
ANR	5261981	PrimaryExpression	0x80		5261828	1					
ANR	5261982	CompoundStatement		15:2:446:475	5261828	1					
ANR	5261983	IdentifierDeclStatement	ut64 result = LEB128_4 ( ut64 ) ;	269:2:6718:6747	5261828	0	True				
ANR	5261984	IdentifierDecl	result = LEB128_4 ( ut64 )		5261828	0					
ANR	5261985	IdentifierDeclType	ut64		5261828	0					
ANR	5261986	Identifier	result		5261828	1					
ANR	5261987	AssignmentExpression	result = LEB128_4 ( ut64 )		5261828	2		=			
ANR	5261988	Identifier	result		5261828	0					
ANR	5261989	CallExpression	LEB128_4 ( ut64 )		5261828	1					
ANR	5261990	Callee	LEB128_4		5261828	0					
ANR	5261991	Identifier	LEB128_4		5261828	0					
ANR	5261992	ArgumentList	ut64		5261828	1					
ANR	5261993	Argument	ut64		5261828	0					
ANR	5261994	Identifier	ut64		5261828	0					
ANR	5261995	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 27 )"	270:2:6751:6794	5261828	1	True				
ANR	5261996	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 27 )"		5261828	0		=			
ANR	5261997	UnaryOperationExpression	* out_value		5261828	0					
ANR	5261998	UnaryOperator	*		5261828	0					
ANR	5261999	Identifier	out_value		5261828	1					
ANR	5262000	CallExpression	"SIGN_EXTEND ( ut64 , result , 27 )"		5261828	1					
ANR	5262001	Callee	SIGN_EXTEND		5261828	0					
ANR	5262002	Identifier	SIGN_EXTEND		5261828	0					
ANR	5262003	ArgumentList	ut64		5261828	1					
ANR	5262004	Argument	ut64		5261828	0					
ANR	5262005	Identifier	ut64		5261828	0					
ANR	5262006	Argument	result		5261828	1					
ANR	5262007	Identifier	result		5261828	0					
ANR	5262008	Argument	27		5261828	2					
ANR	5262009	PrimaryExpression	27		5261828	0					
ANR	5262010	ReturnStatement	return 4 ;	271:2:6798:6806	5261828	2	True				
ANR	5262011	PrimaryExpression	4		5261828	0					
ANR	5262012	ElseStatement	else		5261828	0					
ANR	5262013	IfStatement	if ( p + 4 < max && ! ( p [ 4 ] & 0x80 ) )		5261828	0					
ANR	5262014	Condition	p + 4 < max && ! ( p [ 4 ] & 0x80 )	272:12:6820:6848	5261828	0	True				
ANR	5262015	AndExpression	p + 4 < max && ! ( p [ 4 ] & 0x80 )		5261828	0		&&			
ANR	5262016	RelationalExpression	p + 4 < max		5261828	0		<			
ANR	5262017	AdditiveExpression	p + 4		5261828	0		+			
ANR	5262018	Identifier	p		5261828	0					
ANR	5262019	PrimaryExpression	4		5261828	1					
ANR	5262020	Identifier	max		5261828	1					
ANR	5262021	UnaryOperationExpression	! ( p [ 4 ] & 0x80 )		5261828	1					
ANR	5262022	UnaryOperator	!		5261828	0					
ANR	5262023	BitAndExpression	p [ 4 ] & 0x80		5261828	1		&			
ANR	5262024	ArrayIndexing	p [ 4 ]		5261828	0					
ANR	5262025	Identifier	p		5261828	0					
ANR	5262026	PrimaryExpression	4		5261828	1					
ANR	5262027	PrimaryExpression	0x80		5261828	1					
ANR	5262028	CompoundStatement		19:2:583:612	5261828	1					
ANR	5262029	IdentifierDeclStatement	ut64 result = LEB128_5 ( ut64 ) ;	273:2:6855:6884	5261828	0	True				
ANR	5262030	IdentifierDecl	result = LEB128_5 ( ut64 )		5261828	0					
ANR	5262031	IdentifierDeclType	ut64		5261828	0					
ANR	5262032	Identifier	result		5261828	1					
ANR	5262033	AssignmentExpression	result = LEB128_5 ( ut64 )		5261828	2		=			
ANR	5262034	Identifier	result		5261828	0					
ANR	5262035	CallExpression	LEB128_5 ( ut64 )		5261828	1					
ANR	5262036	Callee	LEB128_5		5261828	0					
ANR	5262037	Identifier	LEB128_5		5261828	0					
ANR	5262038	ArgumentList	ut64		5261828	1					
ANR	5262039	Argument	ut64		5261828	0					
ANR	5262040	Identifier	ut64		5261828	0					
ANR	5262041	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 34 )"	274:2:6888:6931	5261828	1	True				
ANR	5262042	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 34 )"		5261828	0		=			
ANR	5262043	UnaryOperationExpression	* out_value		5261828	0					
ANR	5262044	UnaryOperator	*		5261828	0					
ANR	5262045	Identifier	out_value		5261828	1					
ANR	5262046	CallExpression	"SIGN_EXTEND ( ut64 , result , 34 )"		5261828	1					
ANR	5262047	Callee	SIGN_EXTEND		5261828	0					
ANR	5262048	Identifier	SIGN_EXTEND		5261828	0					
ANR	5262049	ArgumentList	ut64		5261828	1					
ANR	5262050	Argument	ut64		5261828	0					
ANR	5262051	Identifier	ut64		5261828	0					
ANR	5262052	Argument	result		5261828	1					
ANR	5262053	Identifier	result		5261828	0					
ANR	5262054	Argument	34		5261828	2					
ANR	5262055	PrimaryExpression	34		5261828	0					
ANR	5262056	ReturnStatement	return 5 ;	275:2:6935:6943	5261828	2	True				
ANR	5262057	PrimaryExpression	5		5261828	0					
ANR	5262058	ElseStatement	else		5261828	0					
ANR	5262059	IfStatement	if ( p + 5 < max && ! ( p [ 5 ] & 0x80 ) )		5261828	0					
ANR	5262060	Condition	p + 5 < max && ! ( p [ 5 ] & 0x80 )	276:12:6957:6985	5261828	0	True				
ANR	5262061	AndExpression	p + 5 < max && ! ( p [ 5 ] & 0x80 )		5261828	0		&&			
ANR	5262062	RelationalExpression	p + 5 < max		5261828	0		<			
ANR	5262063	AdditiveExpression	p + 5		5261828	0		+			
ANR	5262064	Identifier	p		5261828	0					
ANR	5262065	PrimaryExpression	5		5261828	1					
ANR	5262066	Identifier	max		5261828	1					
ANR	5262067	UnaryOperationExpression	! ( p [ 5 ] & 0x80 )		5261828	1					
ANR	5262068	UnaryOperator	!		5261828	0					
ANR	5262069	BitAndExpression	p [ 5 ] & 0x80		5261828	1		&			
ANR	5262070	ArrayIndexing	p [ 5 ]		5261828	0					
ANR	5262071	Identifier	p		5261828	0					
ANR	5262072	PrimaryExpression	5		5261828	1					
ANR	5262073	PrimaryExpression	0x80		5261828	1					
ANR	5262074	CompoundStatement		23:2:720:749	5261828	1					
ANR	5262075	IdentifierDeclStatement	ut64 result = LEB128_6 ( ut64 ) ;	277:2:6992:7021	5261828	0	True				
ANR	5262076	IdentifierDecl	result = LEB128_6 ( ut64 )		5261828	0					
ANR	5262077	IdentifierDeclType	ut64		5261828	0					
ANR	5262078	Identifier	result		5261828	1					
ANR	5262079	AssignmentExpression	result = LEB128_6 ( ut64 )		5261828	2		=			
ANR	5262080	Identifier	result		5261828	0					
ANR	5262081	CallExpression	LEB128_6 ( ut64 )		5261828	1					
ANR	5262082	Callee	LEB128_6		5261828	0					
ANR	5262083	Identifier	LEB128_6		5261828	0					
ANR	5262084	ArgumentList	ut64		5261828	1					
ANR	5262085	Argument	ut64		5261828	0					
ANR	5262086	Identifier	ut64		5261828	0					
ANR	5262087	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 41 )"	278:2:7025:7068	5261828	1	True				
ANR	5262088	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 41 )"		5261828	0		=			
ANR	5262089	UnaryOperationExpression	* out_value		5261828	0					
ANR	5262090	UnaryOperator	*		5261828	0					
ANR	5262091	Identifier	out_value		5261828	1					
ANR	5262092	CallExpression	"SIGN_EXTEND ( ut64 , result , 41 )"		5261828	1					
ANR	5262093	Callee	SIGN_EXTEND		5261828	0					
ANR	5262094	Identifier	SIGN_EXTEND		5261828	0					
ANR	5262095	ArgumentList	ut64		5261828	1					
ANR	5262096	Argument	ut64		5261828	0					
ANR	5262097	Identifier	ut64		5261828	0					
ANR	5262098	Argument	result		5261828	1					
ANR	5262099	Identifier	result		5261828	0					
ANR	5262100	Argument	41		5261828	2					
ANR	5262101	PrimaryExpression	41		5261828	0					
ANR	5262102	ReturnStatement	return 6 ;	279:2:7072:7080	5261828	2	True				
ANR	5262103	PrimaryExpression	6		5261828	0					
ANR	5262104	ElseStatement	else		5261828	0					
ANR	5262105	IfStatement	if ( p + 6 < max && ! ( p [ 6 ] & 0x80 ) )		5261828	0					
ANR	5262106	Condition	p + 6 < max && ! ( p [ 6 ] & 0x80 )	280:12:7094:7122	5261828	0	True				
ANR	5262107	AndExpression	p + 6 < max && ! ( p [ 6 ] & 0x80 )		5261828	0		&&			
ANR	5262108	RelationalExpression	p + 6 < max		5261828	0		<			
ANR	5262109	AdditiveExpression	p + 6		5261828	0		+			
ANR	5262110	Identifier	p		5261828	0					
ANR	5262111	PrimaryExpression	6		5261828	1					
ANR	5262112	Identifier	max		5261828	1					
ANR	5262113	UnaryOperationExpression	! ( p [ 6 ] & 0x80 )		5261828	1					
ANR	5262114	UnaryOperator	!		5261828	0					
ANR	5262115	BitAndExpression	p [ 6 ] & 0x80		5261828	1		&			
ANR	5262116	ArrayIndexing	p [ 6 ]		5261828	0					
ANR	5262117	Identifier	p		5261828	0					
ANR	5262118	PrimaryExpression	6		5261828	1					
ANR	5262119	PrimaryExpression	0x80		5261828	1					
ANR	5262120	CompoundStatement		27:2:857:886	5261828	1					
ANR	5262121	IdentifierDeclStatement	ut64 result = LEB128_7 ( ut64 ) ;	281:2:7129:7158	5261828	0	True				
ANR	5262122	IdentifierDecl	result = LEB128_7 ( ut64 )		5261828	0					
ANR	5262123	IdentifierDeclType	ut64		5261828	0					
ANR	5262124	Identifier	result		5261828	1					
ANR	5262125	AssignmentExpression	result = LEB128_7 ( ut64 )		5261828	2		=			
ANR	5262126	Identifier	result		5261828	0					
ANR	5262127	CallExpression	LEB128_7 ( ut64 )		5261828	1					
ANR	5262128	Callee	LEB128_7		5261828	0					
ANR	5262129	Identifier	LEB128_7		5261828	0					
ANR	5262130	ArgumentList	ut64		5261828	1					
ANR	5262131	Argument	ut64		5261828	0					
ANR	5262132	Identifier	ut64		5261828	0					
ANR	5262133	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 48 )"	282:2:7162:7205	5261828	1	True				
ANR	5262134	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 48 )"		5261828	0		=			
ANR	5262135	UnaryOperationExpression	* out_value		5261828	0					
ANR	5262136	UnaryOperator	*		5261828	0					
ANR	5262137	Identifier	out_value		5261828	1					
ANR	5262138	CallExpression	"SIGN_EXTEND ( ut64 , result , 48 )"		5261828	1					
ANR	5262139	Callee	SIGN_EXTEND		5261828	0					
ANR	5262140	Identifier	SIGN_EXTEND		5261828	0					
ANR	5262141	ArgumentList	ut64		5261828	1					
ANR	5262142	Argument	ut64		5261828	0					
ANR	5262143	Identifier	ut64		5261828	0					
ANR	5262144	Argument	result		5261828	1					
ANR	5262145	Identifier	result		5261828	0					
ANR	5262146	Argument	48		5261828	2					
ANR	5262147	PrimaryExpression	48		5261828	0					
ANR	5262148	ReturnStatement	return 7 ;	283:2:7209:7217	5261828	2	True				
ANR	5262149	PrimaryExpression	7		5261828	0					
ANR	5262150	ElseStatement	else		5261828	0					
ANR	5262151	IfStatement	if ( p + 7 < max && ! ( p [ 7 ] & 0x80 ) )		5261828	0					
ANR	5262152	Condition	p + 7 < max && ! ( p [ 7 ] & 0x80 )	284:12:7231:7259	5261828	0	True				
ANR	5262153	AndExpression	p + 7 < max && ! ( p [ 7 ] & 0x80 )		5261828	0		&&			
ANR	5262154	RelationalExpression	p + 7 < max		5261828	0		<			
ANR	5262155	AdditiveExpression	p + 7		5261828	0		+			
ANR	5262156	Identifier	p		5261828	0					
ANR	5262157	PrimaryExpression	7		5261828	1					
ANR	5262158	Identifier	max		5261828	1					
ANR	5262159	UnaryOperationExpression	! ( p [ 7 ] & 0x80 )		5261828	1					
ANR	5262160	UnaryOperator	!		5261828	0					
ANR	5262161	BitAndExpression	p [ 7 ] & 0x80		5261828	1		&			
ANR	5262162	ArrayIndexing	p [ 7 ]		5261828	0					
ANR	5262163	Identifier	p		5261828	0					
ANR	5262164	PrimaryExpression	7		5261828	1					
ANR	5262165	PrimaryExpression	0x80		5261828	1					
ANR	5262166	CompoundStatement		31:2:994:1023	5261828	1					
ANR	5262167	IdentifierDeclStatement	ut64 result = LEB128_8 ( ut64 ) ;	285:2:7266:7295	5261828	0	True				
ANR	5262168	IdentifierDecl	result = LEB128_8 ( ut64 )		5261828	0					
ANR	5262169	IdentifierDeclType	ut64		5261828	0					
ANR	5262170	Identifier	result		5261828	1					
ANR	5262171	AssignmentExpression	result = LEB128_8 ( ut64 )		5261828	2		=			
ANR	5262172	Identifier	result		5261828	0					
ANR	5262173	CallExpression	LEB128_8 ( ut64 )		5261828	1					
ANR	5262174	Callee	LEB128_8		5261828	0					
ANR	5262175	Identifier	LEB128_8		5261828	0					
ANR	5262176	ArgumentList	ut64		5261828	1					
ANR	5262177	Argument	ut64		5261828	0					
ANR	5262178	Identifier	ut64		5261828	0					
ANR	5262179	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 55 )"	286:2:7299:7342	5261828	1	True				
ANR	5262180	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 55 )"		5261828	0		=			
ANR	5262181	UnaryOperationExpression	* out_value		5261828	0					
ANR	5262182	UnaryOperator	*		5261828	0					
ANR	5262183	Identifier	out_value		5261828	1					
ANR	5262184	CallExpression	"SIGN_EXTEND ( ut64 , result , 55 )"		5261828	1					
ANR	5262185	Callee	SIGN_EXTEND		5261828	0					
ANR	5262186	Identifier	SIGN_EXTEND		5261828	0					
ANR	5262187	ArgumentList	ut64		5261828	1					
ANR	5262188	Argument	ut64		5261828	0					
ANR	5262189	Identifier	ut64		5261828	0					
ANR	5262190	Argument	result		5261828	1					
ANR	5262191	Identifier	result		5261828	0					
ANR	5262192	Argument	55		5261828	2					
ANR	5262193	PrimaryExpression	55		5261828	0					
ANR	5262194	ReturnStatement	return 8 ;	287:2:7346:7354	5261828	2	True				
ANR	5262195	PrimaryExpression	8		5261828	0					
ANR	5262196	ElseStatement	else		5261828	0					
ANR	5262197	IfStatement	if ( p + 8 < max && ! ( p [ 8 ] & 0x80 ) )		5261828	0					
ANR	5262198	Condition	p + 8 < max && ! ( p [ 8 ] & 0x80 )	288:12:7368:7396	5261828	0	True				
ANR	5262199	AndExpression	p + 8 < max && ! ( p [ 8 ] & 0x80 )		5261828	0		&&			
ANR	5262200	RelationalExpression	p + 8 < max		5261828	0		<			
ANR	5262201	AdditiveExpression	p + 8		5261828	0		+			
ANR	5262202	Identifier	p		5261828	0					
ANR	5262203	PrimaryExpression	8		5261828	1					
ANR	5262204	Identifier	max		5261828	1					
ANR	5262205	UnaryOperationExpression	! ( p [ 8 ] & 0x80 )		5261828	1					
ANR	5262206	UnaryOperator	!		5261828	0					
ANR	5262207	BitAndExpression	p [ 8 ] & 0x80		5261828	1		&			
ANR	5262208	ArrayIndexing	p [ 8 ]		5261828	0					
ANR	5262209	Identifier	p		5261828	0					
ANR	5262210	PrimaryExpression	8		5261828	1					
ANR	5262211	PrimaryExpression	0x80		5261828	1					
ANR	5262212	CompoundStatement		35:2:1131:1160	5261828	1					
ANR	5262213	IdentifierDeclStatement	ut64 result = LEB128_9 ( ut64 ) ;	289:2:7403:7432	5261828	0	True				
ANR	5262214	IdentifierDecl	result = LEB128_9 ( ut64 )		5261828	0					
ANR	5262215	IdentifierDeclType	ut64		5261828	0					
ANR	5262216	Identifier	result		5261828	1					
ANR	5262217	AssignmentExpression	result = LEB128_9 ( ut64 )		5261828	2		=			
ANR	5262218	Identifier	result		5261828	0					
ANR	5262219	CallExpression	LEB128_9 ( ut64 )		5261828	1					
ANR	5262220	Callee	LEB128_9		5261828	0					
ANR	5262221	Identifier	LEB128_9		5261828	0					
ANR	5262222	ArgumentList	ut64		5261828	1					
ANR	5262223	Argument	ut64		5261828	0					
ANR	5262224	Identifier	ut64		5261828	0					
ANR	5262225	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 62 )"	290:2:7436:7479	5261828	1	True				
ANR	5262226	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 62 )"		5261828	0		=			
ANR	5262227	UnaryOperationExpression	* out_value		5261828	0					
ANR	5262228	UnaryOperator	*		5261828	0					
ANR	5262229	Identifier	out_value		5261828	1					
ANR	5262230	CallExpression	"SIGN_EXTEND ( ut64 , result , 62 )"		5261828	1					
ANR	5262231	Callee	SIGN_EXTEND		5261828	0					
ANR	5262232	Identifier	SIGN_EXTEND		5261828	0					
ANR	5262233	ArgumentList	ut64		5261828	1					
ANR	5262234	Argument	ut64		5261828	0					
ANR	5262235	Identifier	ut64		5261828	0					
ANR	5262236	Argument	result		5261828	1					
ANR	5262237	Identifier	result		5261828	0					
ANR	5262238	Argument	62		5261828	2					
ANR	5262239	PrimaryExpression	62		5261828	0					
ANR	5262240	ReturnStatement	return 9 ;	291:2:7483:7491	5261828	2	True				
ANR	5262241	PrimaryExpression	9		5261828	0					
ANR	5262242	ElseStatement	else		5261828	0					
ANR	5262243	IfStatement	if ( p + 9 < max && ! ( p [ 9 ] & 0x80 ) )		5261828	0					
ANR	5262244	Condition	p + 9 < max && ! ( p [ 9 ] & 0x80 )	292:12:7505:7533	5261828	0	True				
ANR	5262245	AndExpression	p + 9 < max && ! ( p [ 9 ] & 0x80 )		5261828	0		&&			
ANR	5262246	RelationalExpression	p + 9 < max		5261828	0		<			
ANR	5262247	AdditiveExpression	p + 9		5261828	0		+			
ANR	5262248	Identifier	p		5261828	0					
ANR	5262249	PrimaryExpression	9		5261828	1					
ANR	5262250	Identifier	max		5261828	1					
ANR	5262251	UnaryOperationExpression	! ( p [ 9 ] & 0x80 )		5261828	1					
ANR	5262252	UnaryOperator	!		5261828	0					
ANR	5262253	BitAndExpression	p [ 9 ] & 0x80		5261828	1		&			
ANR	5262254	ArrayIndexing	p [ 9 ]		5261828	0					
ANR	5262255	Identifier	p		5261828	0					
ANR	5262256	PrimaryExpression	9		5261828	1					
ANR	5262257	PrimaryExpression	0x80		5261828	1					
ANR	5262258	CompoundStatement		45:2:1495:1525	5261828	1					
ANR	5262259	IdentifierDeclStatement	bool sign_bit_set = ( p [ 9 ] & 0x1 ) ;	294:2:7604:7636	5261828	0	True				
ANR	5262260	IdentifierDecl	sign_bit_set = ( p [ 9 ] & 0x1 )		5261828	0					
ANR	5262261	IdentifierDeclType	bool		5261828	0					
ANR	5262262	Identifier	sign_bit_set		5261828	1					
ANR	5262263	AssignmentExpression	sign_bit_set = ( p [ 9 ] & 0x1 )		5261828	2		=			
ANR	5262264	Identifier	sign_bit_set		5261828	0					
ANR	5262265	BitAndExpression	p [ 9 ] & 0x1		5261828	1		&			
ANR	5262266	ArrayIndexing	p [ 9 ]		5261828	0					
ANR	5262267	Identifier	p		5261828	0					
ANR	5262268	PrimaryExpression	9		5261828	1					
ANR	5262269	PrimaryExpression	0x1		5261828	1					
ANR	5262270	IdentifierDeclStatement	int top_bits = p [ 9 ] & 0xfe ;	295:2:7640:7666	5261828	1	True				
ANR	5262271	IdentifierDecl	top_bits = p [ 9 ] & 0xfe		5261828	0					
ANR	5262272	IdentifierDeclType	int		5261828	0					
ANR	5262273	Identifier	top_bits		5261828	1					
ANR	5262274	AssignmentExpression	top_bits = p [ 9 ] & 0xfe		5261828	2		=			
ANR	5262275	Identifier	top_bits		5261828	0					
ANR	5262276	BitAndExpression	p [ 9 ] & 0xfe		5261828	1		&			
ANR	5262277	ArrayIndexing	p [ 9 ]		5261828	0					
ANR	5262278	Identifier	p		5261828	0					
ANR	5262279	PrimaryExpression	9		5261828	1					
ANR	5262280	PrimaryExpression	0xfe		5261828	1					
ANR	5262281	IfStatement	if ( ( sign_bit_set && top_bits != 0x7e ) || ( ! sign_bit_set && top_bits != 0 ) )		5261828	2					
ANR	5262282	Condition	( sign_bit_set && top_bits != 0x7e ) || ( ! sign_bit_set && top_bits != 0 )	296:6:7674:7743	5261828	0	True				
ANR	5262283	OrExpression	( sign_bit_set && top_bits != 0x7e ) || ( ! sign_bit_set && top_bits != 0 )		5261828	0		||			
ANR	5262284	AndExpression	sign_bit_set && top_bits != 0x7e		5261828	0		&&			
ANR	5262285	Identifier	sign_bit_set		5261828	0					
ANR	5262286	EqualityExpression	top_bits != 0x7e		5261828	1		!=			
ANR	5262287	Identifier	top_bits		5261828	0					
ANR	5262288	PrimaryExpression	0x7e		5261828	1					
ANR	5262289	AndExpression	! sign_bit_set && top_bits != 0		5261828	1		&&			
ANR	5262290	UnaryOperationExpression	! sign_bit_set		5261828	0					
ANR	5262291	UnaryOperator	!		5261828	0					
ANR	5262292	Identifier	sign_bit_set		5261828	1					
ANR	5262293	EqualityExpression	top_bits != 0		5261828	1		!=			
ANR	5262294	Identifier	top_bits		5261828	0					
ANR	5262295	PrimaryExpression	0		5261828	1					
ANR	5262296	CompoundStatement		42:78:1474:1474	5261828	1					
ANR	5262297	ReturnStatement	return 0 ;	297:3:7751:7759	5261828	0	True				
ANR	5262298	PrimaryExpression	0		5261828	0					
ANR	5262299	IdentifierDeclStatement	ut64 result = LEB128_10 ( ut64 ) ;	299:2:7767:7797	5261828	3	True				
ANR	5262300	IdentifierDecl	result = LEB128_10 ( ut64 )		5261828	0					
ANR	5262301	IdentifierDeclType	ut64		5261828	0					
ANR	5262302	Identifier	result		5261828	1					
ANR	5262303	AssignmentExpression	result = LEB128_10 ( ut64 )		5261828	2		=			
ANR	5262304	Identifier	result		5261828	0					
ANR	5262305	CallExpression	LEB128_10 ( ut64 )		5261828	1					
ANR	5262306	Callee	LEB128_10		5261828	0					
ANR	5262307	Identifier	LEB128_10		5261828	0					
ANR	5262308	ArgumentList	ut64		5261828	1					
ANR	5262309	Argument	ut64		5261828	0					
ANR	5262310	Identifier	ut64		5261828	0					
ANR	5262311	ExpressionStatement	* out_value = result	300:2:7801:7820	5261828	4	True				
ANR	5262312	AssignmentExpression	* out_value = result		5261828	0		=			
ANR	5262313	UnaryOperationExpression	* out_value		5261828	0					
ANR	5262314	UnaryOperator	*		5261828	0					
ANR	5262315	Identifier	out_value		5261828	1					
ANR	5262316	Identifier	result		5261828	1					
ANR	5262317	ReturnStatement	return 10 ;	301:2:7824:7833	5261828	5	True				
ANR	5262318	PrimaryExpression	10		5261828	0					
ANR	5262319	ElseStatement	else		5261828	0					
ANR	5262320	CompoundStatement		48:8:1571:1571	5261828	0					
ANR	5262321	ReturnStatement	return 0 ;	304:2:7868:7876	5261828	0	True				
ANR	5262322	PrimaryExpression	0		5261828	0					
ANR	5262323	ReturnType	R_API size_t		5261828	1					
ANR	5262324	Identifier	read_i64_leb128		5261828	2					
ANR	5262325	ParameterList	"const ut8 * p , const ut8 * max , st64 * out_value"		5261828	3					
ANR	5262326	Parameter	const ut8 * p	255:30:6224:6235	5261828	0	True				
ANR	5262327	ParameterType	const ut8 *		5261828	0					
ANR	5262328	Identifier	p		5261828	1					
ANR	5262329	Parameter	const ut8 * max	255:44:6238:6251	5261828	1	True				
ANR	5262330	ParameterType	const ut8 *		5261828	0					
ANR	5262331	Identifier	max		5261828	1					
ANR	5262332	Parameter	st64 * out_value	255:60:6254:6268	5261828	2	True				
ANR	5262333	ParameterType	st64 *		5261828	0					
ANR	5262334	Identifier	out_value		5261828	1					
ANR	5262335	CFGEntryNode	ENTRY		5261828		True				
ANR	5262336	CFGExitNode	EXIT		5261828		True				
ANR	5262337	Symbol	max		5261828						
ANR	5262338	Symbol	LEB128_10		5261828						
ANR	5262339	Symbol	SIGN_EXTEND		5261828						
ANR	5262340	Symbol	ut64		5261828						
ANR	5262341	Symbol	* out_value		5261828						
ANR	5262342	Symbol	p		5261828						
ANR	5262343	Symbol	result		5261828						
ANR	5262344	Symbol	LEB128_2		5261828						
ANR	5262345	Symbol	out_value		5261828						
ANR	5262346	Symbol	LEB128_1		5261828						
ANR	5262347	Symbol	LEB128_4		5261828						
ANR	5262348	Symbol	LEB128_3		5261828						
ANR	5262349	Symbol	sign_bit_set		5261828						
ANR	5262350	Symbol	top_bits		5261828						
ANR	5262351	Symbol	LEB128_6		5261828						
ANR	5262352	Symbol	LEB128_5		5261828						
ANR	5262353	Symbol	LEB128_8		5261828						
ANR	5262354	Symbol	LEB128_7		5261828						
ANR	5262355	Symbol	LEB128_9		5261828						
ANR	5262356	Symbol	* p		5261828						
ANR	5262357	Function	main	323:0:8106:8203							
ANR	5262358	FunctionDef	main ()		5262357	0					
ANR	5262359	CompoundStatement		323:7:8113:8203	5262357	0					
ANR	5262360	IdentifierDeclStatement	ut32 n ;	324:1:8116:8122	5262357	0	True				
ANR	5262361	IdentifierDecl	n		5262357	0					
ANR	5262362	IdentifierDeclType	ut32		5262357	0					
ANR	5262363	Identifier	n		5262357	1					
ANR	5262364	IdentifierDeclStatement	"ut8 * buf = ""\\x10\\x02\\x90\\x88"" ;"	325:1:8125:8154	5262357	1	True				
ANR	5262365	IdentifierDecl	"* buf = ""\\x10\\x02\\x90\\x88"""		5262357	0					
ANR	5262366	IdentifierDeclType	ut8 *		5262357	0					
ANR	5262367	Identifier	buf		5262357	1					
ANR	5262368	AssignmentExpression	"* buf = ""\\x10\\x02\\x90\\x88"""		5262357	2		=			
ANR	5262369	Identifier	buf		5262357	0					
ANR	5262370	PrimaryExpression	"""\\x10\\x02\\x90\\x88"""		5262357	1					
ANR	5262371	ExpressionStatement	"r_uleb128 ( buf , & n )"	326:1:8157:8176	5262357	2	True				
ANR	5262372	CallExpression	"r_uleb128 ( buf , & n )"		5262357	0					
ANR	5262373	Callee	r_uleb128		5262357	0					
ANR	5262374	Identifier	r_uleb128		5262357	0					
ANR	5262375	ArgumentList	buf		5262357	1					
ANR	5262376	Argument	buf		5262357	0					
ANR	5262377	Identifier	buf		5262357	0					
ANR	5262378	Argument	& n		5262357	1					
ANR	5262379	UnaryOperationExpression	& n		5262357	0					
ANR	5262380	UnaryOperator	&		5262357	0					
ANR	5262381	Identifier	n		5262357	1					
ANR	5262382	ExpressionStatement	"printf ( ""n = %d\\n"" , n )"	327:1:8179:8201	5262357	3	True				
ANR	5262383	CallExpression	"printf ( ""n = %d\\n"" , n )"		5262357	0					
ANR	5262384	Callee	printf		5262357	0					
ANR	5262385	Identifier	printf		5262357	0					
ANR	5262386	ArgumentList	"""n = %d\\n"""		5262357	1					
ANR	5262387	Argument	"""n = %d\\n"""		5262357	0					
ANR	5262388	PrimaryExpression	"""n = %d\\n"""		5262357	0					
ANR	5262389	Argument	n		5262357	1					
ANR	5262390	Identifier	n		5262357	0					
ANR	5262391	Identifier	main		5262357	1					
ANR	5262392	ParameterList			5262357	2					
ANR	5262393	CFGEntryNode	ENTRY		5262357		True				
ANR	5262394	CFGExitNode	EXIT		5262357		True				
ANR	5262395	Symbol	buf		5262357						
ANR	5262396	Symbol	& n		5262357						
ANR	5262397	Symbol	n		5262357						
