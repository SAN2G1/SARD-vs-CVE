command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	99393	File	data/converged/CVE-2019-16718~_radare2/anal.c								
ANR	99394	DeclStmt									
ANR	99395	Decl							include < config . h >	include < config . h > ( r_anal )	R_LIB_VERSION
ANR	99396	DeclStmt									
ANR	99397	Decl							RAnalPlugin	RAnalPlugin * [ ]	anal_static_plugins
ANR	99398	Function	r_anal_set_limits	15:0:257:453							
ANR	99399	FunctionDef	"r_anal_set_limits (RAnal * anal , ut64 from , ut64 to)"		99398	0					
ANR	99400	CompoundStatement		15:62:319:453	99398	0					
ANR	99401	ExpressionStatement	free ( anal -> limit )	16:1:322:340	99398	0	True				
ANR	99402	CallExpression	free ( anal -> limit )		99398	0					
ANR	99403	Callee	free		99398	0					
ANR	99404	Identifier	free		99398	0					
ANR	99405	ArgumentList	anal -> limit		99398	1					
ANR	99406	Argument	anal -> limit		99398	0					
ANR	99407	PtrMemberAccess	anal -> limit		99398	0					
ANR	99408	Identifier	anal		99398	0					
ANR	99409	Identifier	limit		99398	1					
ANR	99410	ExpressionStatement	anal -> limit = R_NEW0 ( RAnalRange )	17:1:343:376	99398	1	True				
ANR	99411	AssignmentExpression	anal -> limit = R_NEW0 ( RAnalRange )		99398	0		=			
ANR	99412	PtrMemberAccess	anal -> limit		99398	0					
ANR	99413	Identifier	anal		99398	0					
ANR	99414	Identifier	limit		99398	1					
ANR	99415	CallExpression	R_NEW0 ( RAnalRange )		99398	1					
ANR	99416	Callee	R_NEW0		99398	0					
ANR	99417	Identifier	R_NEW0		99398	0					
ANR	99418	ArgumentList	RAnalRange		99398	1					
ANR	99419	Argument	RAnalRange		99398	0					
ANR	99420	Identifier	RAnalRange		99398	0					
ANR	99421	IfStatement	if ( anal -> limit )		99398	2					
ANR	99422	Condition	anal -> limit	18:5:383:393	99398	0	True				
ANR	99423	PtrMemberAccess	anal -> limit		99398	0					
ANR	99424	Identifier	anal		99398	0					
ANR	99425	Identifier	limit		99398	1					
ANR	99426	CompoundStatement		4:18:76:76	99398	1					
ANR	99427	ExpressionStatement	anal -> limit -> from = from	19:2:400:424	99398	0	True				
ANR	99428	AssignmentExpression	anal -> limit -> from = from		99398	0		=			
ANR	99429	PtrMemberAccess	anal -> limit -> from		99398	0					
ANR	99430	PtrMemberAccess	anal -> limit		99398	0					
ANR	99431	Identifier	anal		99398	0					
ANR	99432	Identifier	limit		99398	1					
ANR	99433	Identifier	from		99398	1					
ANR	99434	Identifier	from		99398	1					
ANR	99435	ExpressionStatement	anal -> limit -> to = to	20:2:428:448	99398	1	True				
ANR	99436	AssignmentExpression	anal -> limit -> to = to		99398	0		=			
ANR	99437	PtrMemberAccess	anal -> limit -> to		99398	0					
ANR	99438	PtrMemberAccess	anal -> limit		99398	0					
ANR	99439	Identifier	anal		99398	0					
ANR	99440	Identifier	limit		99398	1					
ANR	99441	Identifier	to		99398	1					
ANR	99442	Identifier	to		99398	1					
ANR	99443	ReturnType	R_API void		99398	1					
ANR	99444	Identifier	r_anal_set_limits		99398	2					
ANR	99445	ParameterList	"RAnal * anal , ut64 from , ut64 to"		99398	3					
ANR	99446	Parameter	RAnal * anal	15:29:286:296	99398	0	True				
ANR	99447	ParameterType	RAnal *		99398	0					
ANR	99448	Identifier	anal		99398	1					
ANR	99449	Parameter	ut64 from	15:42:299:307	99398	1	True				
ANR	99450	ParameterType	ut64		99398	0					
ANR	99451	Identifier	from		99398	1					
ANR	99452	Parameter	ut64 to	15:53:310:316	99398	2	True				
ANR	99453	ParameterType	ut64		99398	0					
ANR	99454	Identifier	to		99398	1					
ANR	99455	CFGEntryNode	ENTRY		99398		True				
ANR	99456	CFGExitNode	EXIT		99398		True				
ANR	99457	Symbol	R_NEW0		99398						
ANR	99458	Symbol	* * anal		99398						
ANR	99459	Symbol	* anal		99398						
ANR	99460	Symbol	RAnalRange		99398						
ANR	99461	Symbol	anal -> limit -> to		99398						
ANR	99462	Symbol	* anal -> limit		99398						
ANR	99463	Symbol	anal -> limit -> from		99398						
ANR	99464	Symbol	anal		99398						
ANR	99465	Symbol	anal -> limit		99398						
ANR	99466	Symbol	from		99398						
ANR	99467	Symbol	to		99398						
ANR	99468	Function	r_anal_unset_limits	24:0:456:525							
ANR	99469	FunctionDef	r_anal_unset_limits (RAnal * anal)		99468	0					
ANR	99470	CompoundStatement		24:44:500:525	99468	0					
ANR	99471	ExpressionStatement	R_FREE ( anal -> limit )	25:1:503:523	99468	0	True				
ANR	99472	CallExpression	R_FREE ( anal -> limit )		99468	0					
ANR	99473	Callee	R_FREE		99468	0					
ANR	99474	Identifier	R_FREE		99468	0					
ANR	99475	ArgumentList	anal -> limit		99468	1					
ANR	99476	Argument	anal -> limit		99468	0					
ANR	99477	PtrMemberAccess	anal -> limit		99468	0					
ANR	99478	Identifier	anal		99468	0					
ANR	99479	Identifier	limit		99468	1					
ANR	99480	ReturnType	R_API void		99468	1					
ANR	99481	Identifier	r_anal_unset_limits		99468	2					
ANR	99482	ParameterList	RAnal * anal		99468	3					
ANR	99483	Parameter	RAnal * anal	24:31:487:497	99468	0	True				
ANR	99484	ParameterType	RAnal *		99468	0					
ANR	99485	Identifier	anal		99468	1					
ANR	99486	CFGEntryNode	ENTRY		99468		True				
ANR	99487	CFGExitNode	EXIT		99468		True				
ANR	99488	Symbol	* anal		99468						
ANR	99489	Symbol	anal		99468						
ANR	99490	Symbol	anal -> limit		99468						
ANR	99491	Function	meta_unset_for	28:0:528:785							
ANR	99492	FunctionDef	"meta_unset_for (REvent * ev , int type , void * user , void * data)"		99491	0					
ANR	99493	CompoundStatement		28:73:601:785	99491	0					
ANR	99494	IdentifierDeclStatement	RSpaces * s = ( RSpaces * ) ev -> user ;	29:1:604:636	99491	0	True				
ANR	99495	IdentifierDecl	* s = ( RSpaces * ) ev -> user		99491	0					
ANR	99496	IdentifierDeclType	RSpaces *		99491	0					
ANR	99497	Identifier	s		99491	1					
ANR	99498	AssignmentExpression	* s = ( RSpaces * ) ev -> user		99491	2		=			
ANR	99499	Identifier	s		99491	0					
ANR	99500	CastExpression	( RSpaces * ) ev -> user		99491	1					
ANR	99501	CastTarget	RSpaces *		99491	0					
ANR	99502	PtrMemberAccess	ev -> user		99491	1					
ANR	99503	Identifier	ev		99491	0					
ANR	99504	Identifier	user		99491	1					
ANR	99505	IdentifierDeclStatement	"RAnal * anal = container_of ( s , RAnal , meta_spaces ) ;"	30:1:639:689	99491	1	True				
ANR	99506	IdentifierDecl	"* anal = container_of ( s , RAnal , meta_spaces )"		99491	0					
ANR	99507	IdentifierDeclType	RAnal *		99491	0					
ANR	99508	Identifier	anal		99491	1					
ANR	99509	AssignmentExpression	"* anal = container_of ( s , RAnal , meta_spaces )"		99491	2		=			
ANR	99510	Identifier	anal		99491	0					
ANR	99511	CallExpression	"container_of ( s , RAnal , meta_spaces )"		99491	1					
ANR	99512	Callee	container_of		99491	0					
ANR	99513	Identifier	container_of		99491	0					
ANR	99514	ArgumentList	s		99491	1					
ANR	99515	Argument	s		99491	0					
ANR	99516	Identifier	s		99491	0					
ANR	99517	Argument	RAnal		99491	1					
ANR	99518	Identifier	RAnal		99491	0					
ANR	99519	Argument	meta_spaces		99491	2					
ANR	99520	Identifier	meta_spaces		99491	0					
ANR	99521	IdentifierDeclStatement	RSpaceEvent * se = ( RSpaceEvent * ) data ;	31:1:692:729	99491	2	True				
ANR	99522	IdentifierDecl	* se = ( RSpaceEvent * ) data		99491	0					
ANR	99523	IdentifierDeclType	RSpaceEvent *		99491	0					
ANR	99524	Identifier	se		99491	1					
ANR	99525	AssignmentExpression	* se = ( RSpaceEvent * ) data		99491	2		=			
ANR	99526	Identifier	se		99491	0					
ANR	99527	CastExpression	( RSpaceEvent * ) data		99491	1					
ANR	99528	CastTarget	RSpaceEvent *		99491	0					
ANR	99529	Identifier	data		99491	1					
ANR	99530	ExpressionStatement	"r_meta_space_unset_for ( anal , se -> data . unset . space )"	32:1:732:783	99491	3	True				
ANR	99531	CallExpression	"r_meta_space_unset_for ( anal , se -> data . unset . space )"		99491	0					
ANR	99532	Callee	r_meta_space_unset_for		99491	0					
ANR	99533	Identifier	r_meta_space_unset_for		99491	0					
ANR	99534	ArgumentList	anal		99491	1					
ANR	99535	Argument	anal		99491	0					
ANR	99536	Identifier	anal		99491	0					
ANR	99537	Argument	se -> data . unset . space		99491	1					
ANR	99538	MemberAccess	se -> data . unset . space		99491	0					
ANR	99539	MemberAccess	se -> data . unset		99491	0					
ANR	99540	PtrMemberAccess	se -> data		99491	0					
ANR	99541	Identifier	se		99491	0					
ANR	99542	Identifier	data		99491	1					
ANR	99543	Identifier	unset		99491	1					
ANR	99544	Identifier	space		99491	1					
ANR	99545	ReturnType	static void		99491	1					
ANR	99546	Identifier	meta_unset_for		99491	2					
ANR	99547	ParameterList	"REvent * ev , int type , void * user , void * data"		99491	3					
ANR	99548	Parameter	REvent * ev	28:27:555:564	99491	0	True				
ANR	99549	ParameterType	REvent *		99491	0					
ANR	99550	Identifier	ev		99491	1					
ANR	99551	Parameter	int type	28:39:567:574	99491	1	True				
ANR	99552	ParameterType	int		99491	0					
ANR	99553	Identifier	type		99491	1					
ANR	99554	Parameter	void * user	28:49:577:586	99491	2	True				
ANR	99555	ParameterType	void *		99491	0					
ANR	99556	Identifier	user		99491	1					
ANR	99557	Parameter	void * data	28:61:589:598	99491	3	True				
ANR	99558	ParameterType	void *		99491	0					
ANR	99559	Identifier	data		99491	1					
ANR	99560	CFGEntryNode	ENTRY		99491		True				
ANR	99561	CFGExitNode	EXIT		99491		True				
ANR	99562	Symbol	ev -> user		99491						
ANR	99563	Symbol	data		99491						
ANR	99564	Symbol	se -> data . unset . space		99491						
ANR	99565	Symbol	RAnal		99491						
ANR	99566	Symbol	type		99491						
ANR	99567	Symbol	ev		99491						
ANR	99568	Symbol	container_of		99491						
ANR	99569	Symbol	se		99491						
ANR	99570	Symbol	se -> data		99491						
ANR	99571	Symbol	s		99491						
ANR	99572	Symbol	* ev		99491						
ANR	99573	Symbol	meta_spaces		99491						
ANR	99574	Symbol	anal		99491						
ANR	99575	Symbol	se -> data . unset		99491						
ANR	99576	Symbol	* se		99491						
ANR	99577	Symbol	user		99491						
ANR	99578	Function	meta_count_for	35:0:788:1055							
ANR	99579	FunctionDef	"meta_count_for (REvent * ev , int type , void * user , void * data)"		99578	0					
ANR	99580	CompoundStatement		35:73:861:1055	99578	0					
ANR	99581	IdentifierDeclStatement	RSpaces * s = ( RSpaces * ) ev -> user ;	36:1:864:896	99578	0	True				
ANR	99582	IdentifierDecl	* s = ( RSpaces * ) ev -> user		99578	0					
ANR	99583	IdentifierDeclType	RSpaces *		99578	0					
ANR	99584	Identifier	s		99578	1					
ANR	99585	AssignmentExpression	* s = ( RSpaces * ) ev -> user		99578	2		=			
ANR	99586	Identifier	s		99578	0					
ANR	99587	CastExpression	( RSpaces * ) ev -> user		99578	1					
ANR	99588	CastTarget	RSpaces *		99578	0					
ANR	99589	PtrMemberAccess	ev -> user		99578	1					
ANR	99590	Identifier	ev		99578	0					
ANR	99591	Identifier	user		99578	1					
ANR	99592	IdentifierDeclStatement	"RAnal * anal = container_of ( s , RAnal , meta_spaces ) ;"	37:1:899:949	99578	1	True				
ANR	99593	IdentifierDecl	"* anal = container_of ( s , RAnal , meta_spaces )"		99578	0					
ANR	99594	IdentifierDeclType	RAnal *		99578	0					
ANR	99595	Identifier	anal		99578	1					
ANR	99596	AssignmentExpression	"* anal = container_of ( s , RAnal , meta_spaces )"		99578	2		=			
ANR	99597	Identifier	anal		99578	0					
ANR	99598	CallExpression	"container_of ( s , RAnal , meta_spaces )"		99578	1					
ANR	99599	Callee	container_of		99578	0					
ANR	99600	Identifier	container_of		99578	0					
ANR	99601	ArgumentList	s		99578	1					
ANR	99602	Argument	s		99578	0					
ANR	99603	Identifier	s		99578	0					
ANR	99604	Argument	RAnal		99578	1					
ANR	99605	Identifier	RAnal		99578	0					
ANR	99606	Argument	meta_spaces		99578	2					
ANR	99607	Identifier	meta_spaces		99578	0					
ANR	99608	IdentifierDeclStatement	RSpaceEvent * se = ( RSpaceEvent * ) data ;	38:1:952:989	99578	2	True				
ANR	99609	IdentifierDecl	* se = ( RSpaceEvent * ) data		99578	0					
ANR	99610	IdentifierDeclType	RSpaceEvent *		99578	0					
ANR	99611	Identifier	se		99578	1					
ANR	99612	AssignmentExpression	* se = ( RSpaceEvent * ) data		99578	2		=			
ANR	99613	Identifier	se		99578	0					
ANR	99614	CastExpression	( RSpaceEvent * ) data		99578	1					
ANR	99615	CastTarget	RSpaceEvent *		99578	0					
ANR	99616	Identifier	data		99578	1					
ANR	99617	ExpressionStatement	"se -> res = r_meta_space_count_for ( anal , se -> data . count . space )"	39:1:992:1053	99578	3	True				
ANR	99618	AssignmentExpression	"se -> res = r_meta_space_count_for ( anal , se -> data . count . space )"		99578	0		=			
ANR	99619	PtrMemberAccess	se -> res		99578	0					
ANR	99620	Identifier	se		99578	0					
ANR	99621	Identifier	res		99578	1					
ANR	99622	CallExpression	"r_meta_space_count_for ( anal , se -> data . count . space )"		99578	1					
ANR	99623	Callee	r_meta_space_count_for		99578	0					
ANR	99624	Identifier	r_meta_space_count_for		99578	0					
ANR	99625	ArgumentList	anal		99578	1					
ANR	99626	Argument	anal		99578	0					
ANR	99627	Identifier	anal		99578	0					
ANR	99628	Argument	se -> data . count . space		99578	1					
ANR	99629	MemberAccess	se -> data . count . space		99578	0					
ANR	99630	MemberAccess	se -> data . count		99578	0					
ANR	99631	PtrMemberAccess	se -> data		99578	0					
ANR	99632	Identifier	se		99578	0					
ANR	99633	Identifier	data		99578	1					
ANR	99634	Identifier	count		99578	1					
ANR	99635	Identifier	space		99578	1					
ANR	99636	ReturnType	static void		99578	1					
ANR	99637	Identifier	meta_count_for		99578	2					
ANR	99638	ParameterList	"REvent * ev , int type , void * user , void * data"		99578	3					
ANR	99639	Parameter	REvent * ev	35:27:815:824	99578	0	True				
ANR	99640	ParameterType	REvent *		99578	0					
ANR	99641	Identifier	ev		99578	1					
ANR	99642	Parameter	int type	35:39:827:834	99578	1	True				
ANR	99643	ParameterType	int		99578	0					
ANR	99644	Identifier	type		99578	1					
ANR	99645	Parameter	void * user	35:49:837:846	99578	2	True				
ANR	99646	ParameterType	void *		99578	0					
ANR	99647	Identifier	user		99578	1					
ANR	99648	Parameter	void * data	35:61:849:858	99578	3	True				
ANR	99649	ParameterType	void *		99578	0					
ANR	99650	Identifier	data		99578	1					
ANR	99651	CFGEntryNode	ENTRY		99578		True				
ANR	99652	CFGExitNode	EXIT		99578		True				
ANR	99653	Symbol	ev -> user		99578						
ANR	99654	Symbol	data		99578						
ANR	99655	Symbol	RAnal		99578						
ANR	99656	Symbol	type		99578						
ANR	99657	Symbol	ev		99578						
ANR	99658	Symbol	container_of		99578						
ANR	99659	Symbol	se		99578						
ANR	99660	Symbol	se -> data . count		99578						
ANR	99661	Symbol	se -> data		99578						
ANR	99662	Symbol	s		99578						
ANR	99663	Symbol	* ev		99578						
ANR	99664	Symbol	meta_spaces		99578						
ANR	99665	Symbol	anal		99578						
ANR	99666	Symbol	se -> data . count . space		99578						
ANR	99667	Symbol	* se		99578						
ANR	99668	Symbol	user		99578						
ANR	99669	Symbol	r_meta_space_count_for		99578						
ANR	99670	Symbol	se -> res		99578						
ANR	99671	Function	zign_unset_for	42:0:1058:1315							
ANR	99672	FunctionDef	"zign_unset_for (REvent * ev , int type , void * user , void * data)"		99671	0					
ANR	99673	CompoundStatement		42:73:1131:1315	99671	0					
ANR	99674	IdentifierDeclStatement	RSpaces * s = ( RSpaces * ) ev -> user ;	43:1:1134:1166	99671	0	True				
ANR	99675	IdentifierDecl	* s = ( RSpaces * ) ev -> user		99671	0					
ANR	99676	IdentifierDeclType	RSpaces *		99671	0					
ANR	99677	Identifier	s		99671	1					
ANR	99678	AssignmentExpression	* s = ( RSpaces * ) ev -> user		99671	2		=			
ANR	99679	Identifier	s		99671	0					
ANR	99680	CastExpression	( RSpaces * ) ev -> user		99671	1					
ANR	99681	CastTarget	RSpaces *		99671	0					
ANR	99682	PtrMemberAccess	ev -> user		99671	1					
ANR	99683	Identifier	ev		99671	0					
ANR	99684	Identifier	user		99671	1					
ANR	99685	IdentifierDeclStatement	"RAnal * anal = container_of ( s , RAnal , zign_spaces ) ;"	44:1:1169:1219	99671	1	True				
ANR	99686	IdentifierDecl	"* anal = container_of ( s , RAnal , zign_spaces )"		99671	0					
ANR	99687	IdentifierDeclType	RAnal *		99671	0					
ANR	99688	Identifier	anal		99671	1					
ANR	99689	AssignmentExpression	"* anal = container_of ( s , RAnal , zign_spaces )"		99671	2		=			
ANR	99690	Identifier	anal		99671	0					
ANR	99691	CallExpression	"container_of ( s , RAnal , zign_spaces )"		99671	1					
ANR	99692	Callee	container_of		99671	0					
ANR	99693	Identifier	container_of		99671	0					
ANR	99694	ArgumentList	s		99671	1					
ANR	99695	Argument	s		99671	0					
ANR	99696	Identifier	s		99671	0					
ANR	99697	Argument	RAnal		99671	1					
ANR	99698	Identifier	RAnal		99671	0					
ANR	99699	Argument	zign_spaces		99671	2					
ANR	99700	Identifier	zign_spaces		99671	0					
ANR	99701	IdentifierDeclStatement	RSpaceEvent * se = ( RSpaceEvent * ) data ;	45:1:1222:1259	99671	2	True				
ANR	99702	IdentifierDecl	* se = ( RSpaceEvent * ) data		99671	0					
ANR	99703	IdentifierDeclType	RSpaceEvent *		99671	0					
ANR	99704	Identifier	se		99671	1					
ANR	99705	AssignmentExpression	* se = ( RSpaceEvent * ) data		99671	2		=			
ANR	99706	Identifier	se		99671	0					
ANR	99707	CastExpression	( RSpaceEvent * ) data		99671	1					
ANR	99708	CastTarget	RSpaceEvent *		99671	0					
ANR	99709	Identifier	data		99671	1					
ANR	99710	ExpressionStatement	"r_sign_space_unset_for ( anal , se -> data . unset . space )"	46:1:1262:1313	99671	3	True				
ANR	99711	CallExpression	"r_sign_space_unset_for ( anal , se -> data . unset . space )"		99671	0					
ANR	99712	Callee	r_sign_space_unset_for		99671	0					
ANR	99713	Identifier	r_sign_space_unset_for		99671	0					
ANR	99714	ArgumentList	anal		99671	1					
ANR	99715	Argument	anal		99671	0					
ANR	99716	Identifier	anal		99671	0					
ANR	99717	Argument	se -> data . unset . space		99671	1					
ANR	99718	MemberAccess	se -> data . unset . space		99671	0					
ANR	99719	MemberAccess	se -> data . unset		99671	0					
ANR	99720	PtrMemberAccess	se -> data		99671	0					
ANR	99721	Identifier	se		99671	0					
ANR	99722	Identifier	data		99671	1					
ANR	99723	Identifier	unset		99671	1					
ANR	99724	Identifier	space		99671	1					
ANR	99725	ReturnType	static void		99671	1					
ANR	99726	Identifier	zign_unset_for		99671	2					
ANR	99727	ParameterList	"REvent * ev , int type , void * user , void * data"		99671	3					
ANR	99728	Parameter	REvent * ev	42:27:1085:1094	99671	0	True				
ANR	99729	ParameterType	REvent *		99671	0					
ANR	99730	Identifier	ev		99671	1					
ANR	99731	Parameter	int type	42:39:1097:1104	99671	1	True				
ANR	99732	ParameterType	int		99671	0					
ANR	99733	Identifier	type		99671	1					
ANR	99734	Parameter	void * user	42:49:1107:1116	99671	2	True				
ANR	99735	ParameterType	void *		99671	0					
ANR	99736	Identifier	user		99671	1					
ANR	99737	Parameter	void * data	42:61:1119:1128	99671	3	True				
ANR	99738	ParameterType	void *		99671	0					
ANR	99739	Identifier	data		99671	1					
ANR	99740	CFGEntryNode	ENTRY		99671		True				
ANR	99741	CFGExitNode	EXIT		99671		True				
ANR	99742	Symbol	ev -> user		99671						
ANR	99743	Symbol	data		99671						
ANR	99744	Symbol	se -> data . unset . space		99671						
ANR	99745	Symbol	RAnal		99671						
ANR	99746	Symbol	type		99671						
ANR	99747	Symbol	ev		99671						
ANR	99748	Symbol	container_of		99671						
ANR	99749	Symbol	se		99671						
ANR	99750	Symbol	se -> data		99671						
ANR	99751	Symbol	s		99671						
ANR	99752	Symbol	* ev		99671						
ANR	99753	Symbol	anal		99671						
ANR	99754	Symbol	se -> data . unset		99671						
ANR	99755	Symbol	* se		99671						
ANR	99756	Symbol	user		99671						
ANR	99757	Symbol	zign_spaces		99671						
ANR	99758	Function	zign_count_for	49:0:1318:1585							
ANR	99759	FunctionDef	"zign_count_for (REvent * ev , int type , void * user , void * data)"		99758	0					
ANR	99760	CompoundStatement		49:73:1391:1585	99758	0					
ANR	99761	IdentifierDeclStatement	RSpaces * s = ( RSpaces * ) ev -> user ;	50:1:1394:1426	99758	0	True				
ANR	99762	IdentifierDecl	* s = ( RSpaces * ) ev -> user		99758	0					
ANR	99763	IdentifierDeclType	RSpaces *		99758	0					
ANR	99764	Identifier	s		99758	1					
ANR	99765	AssignmentExpression	* s = ( RSpaces * ) ev -> user		99758	2		=			
ANR	99766	Identifier	s		99758	0					
ANR	99767	CastExpression	( RSpaces * ) ev -> user		99758	1					
ANR	99768	CastTarget	RSpaces *		99758	0					
ANR	99769	PtrMemberAccess	ev -> user		99758	1					
ANR	99770	Identifier	ev		99758	0					
ANR	99771	Identifier	user		99758	1					
ANR	99772	IdentifierDeclStatement	"RAnal * anal = container_of ( s , RAnal , zign_spaces ) ;"	51:1:1429:1479	99758	1	True				
ANR	99773	IdentifierDecl	"* anal = container_of ( s , RAnal , zign_spaces )"		99758	0					
ANR	99774	IdentifierDeclType	RAnal *		99758	0					
ANR	99775	Identifier	anal		99758	1					
ANR	99776	AssignmentExpression	"* anal = container_of ( s , RAnal , zign_spaces )"		99758	2		=			
ANR	99777	Identifier	anal		99758	0					
ANR	99778	CallExpression	"container_of ( s , RAnal , zign_spaces )"		99758	1					
ANR	99779	Callee	container_of		99758	0					
ANR	99780	Identifier	container_of		99758	0					
ANR	99781	ArgumentList	s		99758	1					
ANR	99782	Argument	s		99758	0					
ANR	99783	Identifier	s		99758	0					
ANR	99784	Argument	RAnal		99758	1					
ANR	99785	Identifier	RAnal		99758	0					
ANR	99786	Argument	zign_spaces		99758	2					
ANR	99787	Identifier	zign_spaces		99758	0					
ANR	99788	IdentifierDeclStatement	RSpaceEvent * se = ( RSpaceEvent * ) data ;	52:1:1482:1519	99758	2	True				
ANR	99789	IdentifierDecl	* se = ( RSpaceEvent * ) data		99758	0					
ANR	99790	IdentifierDeclType	RSpaceEvent *		99758	0					
ANR	99791	Identifier	se		99758	1					
ANR	99792	AssignmentExpression	* se = ( RSpaceEvent * ) data		99758	2		=			
ANR	99793	Identifier	se		99758	0					
ANR	99794	CastExpression	( RSpaceEvent * ) data		99758	1					
ANR	99795	CastTarget	RSpaceEvent *		99758	0					
ANR	99796	Identifier	data		99758	1					
ANR	99797	ExpressionStatement	"se -> res = r_sign_space_count_for ( anal , se -> data . count . space )"	53:1:1522:1583	99758	3	True				
ANR	99798	AssignmentExpression	"se -> res = r_sign_space_count_for ( anal , se -> data . count . space )"		99758	0		=			
ANR	99799	PtrMemberAccess	se -> res		99758	0					
ANR	99800	Identifier	se		99758	0					
ANR	99801	Identifier	res		99758	1					
ANR	99802	CallExpression	"r_sign_space_count_for ( anal , se -> data . count . space )"		99758	1					
ANR	99803	Callee	r_sign_space_count_for		99758	0					
ANR	99804	Identifier	r_sign_space_count_for		99758	0					
ANR	99805	ArgumentList	anal		99758	1					
ANR	99806	Argument	anal		99758	0					
ANR	99807	Identifier	anal		99758	0					
ANR	99808	Argument	se -> data . count . space		99758	1					
ANR	99809	MemberAccess	se -> data . count . space		99758	0					
ANR	99810	MemberAccess	se -> data . count		99758	0					
ANR	99811	PtrMemberAccess	se -> data		99758	0					
ANR	99812	Identifier	se		99758	0					
ANR	99813	Identifier	data		99758	1					
ANR	99814	Identifier	count		99758	1					
ANR	99815	Identifier	space		99758	1					
ANR	99816	ReturnType	static void		99758	1					
ANR	99817	Identifier	zign_count_for		99758	2					
ANR	99818	ParameterList	"REvent * ev , int type , void * user , void * data"		99758	3					
ANR	99819	Parameter	REvent * ev	49:27:1345:1354	99758	0	True				
ANR	99820	ParameterType	REvent *		99758	0					
ANR	99821	Identifier	ev		99758	1					
ANR	99822	Parameter	int type	49:39:1357:1364	99758	1	True				
ANR	99823	ParameterType	int		99758	0					
ANR	99824	Identifier	type		99758	1					
ANR	99825	Parameter	void * user	49:49:1367:1376	99758	2	True				
ANR	99826	ParameterType	void *		99758	0					
ANR	99827	Identifier	user		99758	1					
ANR	99828	Parameter	void * data	49:61:1379:1388	99758	3	True				
ANR	99829	ParameterType	void *		99758	0					
ANR	99830	Identifier	data		99758	1					
ANR	99831	CFGEntryNode	ENTRY		99758		True				
ANR	99832	CFGExitNode	EXIT		99758		True				
ANR	99833	Symbol	ev -> user		99758						
ANR	99834	Symbol	data		99758						
ANR	99835	Symbol	RAnal		99758						
ANR	99836	Symbol	type		99758						
ANR	99837	Symbol	ev		99758						
ANR	99838	Symbol	r_sign_space_count_for		99758						
ANR	99839	Symbol	container_of		99758						
ANR	99840	Symbol	se		99758						
ANR	99841	Symbol	se -> data		99758						
ANR	99842	Symbol	se -> data . count		99758						
ANR	99843	Symbol	s		99758						
ANR	99844	Symbol	* ev		99758						
ANR	99845	Symbol	anal		99758						
ANR	99846	Symbol	se -> data . count . space		99758						
ANR	99847	Symbol	* se		99758						
ANR	99848	Symbol	user		99758						
ANR	99849	Symbol	zign_spaces		99758						
ANR	99850	Symbol	se -> res		99758						
ANR	99851	Function	zign_rename_for	56:0:1588:1900							
ANR	99852	FunctionDef	"zign_rename_for (REvent * ev , int type , void * user , void * data)"		99851	0					
ANR	99853	CompoundStatement		56:74:1662:1900	99851	0					
ANR	99854	IdentifierDeclStatement	RSpaces * s = ( RSpaces * ) ev -> user ;	57:1:1665:1697	99851	0	True				
ANR	99855	IdentifierDecl	* s = ( RSpaces * ) ev -> user		99851	0					
ANR	99856	IdentifierDeclType	RSpaces *		99851	0					
ANR	99857	Identifier	s		99851	1					
ANR	99858	AssignmentExpression	* s = ( RSpaces * ) ev -> user		99851	2		=			
ANR	99859	Identifier	s		99851	0					
ANR	99860	CastExpression	( RSpaces * ) ev -> user		99851	1					
ANR	99861	CastTarget	RSpaces *		99851	0					
ANR	99862	PtrMemberAccess	ev -> user		99851	1					
ANR	99863	Identifier	ev		99851	0					
ANR	99864	Identifier	user		99851	1					
ANR	99865	IdentifierDeclStatement	"RAnal * anal = container_of ( s , RAnal , zign_spaces ) ;"	58:1:1700:1750	99851	1	True				
ANR	99866	IdentifierDecl	"* anal = container_of ( s , RAnal , zign_spaces )"		99851	0					
ANR	99867	IdentifierDeclType	RAnal *		99851	0					
ANR	99868	Identifier	anal		99851	1					
ANR	99869	AssignmentExpression	"* anal = container_of ( s , RAnal , zign_spaces )"		99851	2		=			
ANR	99870	Identifier	anal		99851	0					
ANR	99871	CallExpression	"container_of ( s , RAnal , zign_spaces )"		99851	1					
ANR	99872	Callee	container_of		99851	0					
ANR	99873	Identifier	container_of		99851	0					
ANR	99874	ArgumentList	s		99851	1					
ANR	99875	Argument	s		99851	0					
ANR	99876	Identifier	s		99851	0					
ANR	99877	Argument	RAnal		99851	1					
ANR	99878	Identifier	RAnal		99851	0					
ANR	99879	Argument	zign_spaces		99851	2					
ANR	99880	Identifier	zign_spaces		99851	0					
ANR	99881	IdentifierDeclStatement	RSpaceEvent * se = ( RSpaceEvent * ) data ;	59:1:1753:1790	99851	2	True				
ANR	99882	IdentifierDecl	* se = ( RSpaceEvent * ) data		99851	0					
ANR	99883	IdentifierDeclType	RSpaceEvent *		99851	0					
ANR	99884	Identifier	se		99851	1					
ANR	99885	AssignmentExpression	* se = ( RSpaceEvent * ) data		99851	2		=			
ANR	99886	Identifier	se		99851	0					
ANR	99887	CastExpression	( RSpaceEvent * ) data		99851	1					
ANR	99888	CastTarget	RSpaceEvent *		99851	0					
ANR	99889	Identifier	data		99851	1					
ANR	99890	ExpressionStatement	"r_sign_space_rename_for ( anal , se -> data . rename . space , se -> data . rename . oldname , se -> data . rename . newname )"	60:1:1793:1898	99851	3	True				
ANR	99891	CallExpression	"r_sign_space_rename_for ( anal , se -> data . rename . space , se -> data . rename . oldname , se -> data . rename . newname )"		99851	0					
ANR	99892	Callee	r_sign_space_rename_for		99851	0					
ANR	99893	Identifier	r_sign_space_rename_for		99851	0					
ANR	99894	ArgumentList	anal		99851	1					
ANR	99895	Argument	anal		99851	0					
ANR	99896	Identifier	anal		99851	0					
ANR	99897	Argument	se -> data . rename . space		99851	1					
ANR	99898	MemberAccess	se -> data . rename . space		99851	0					
ANR	99899	MemberAccess	se -> data . rename		99851	0					
ANR	99900	PtrMemberAccess	se -> data		99851	0					
ANR	99901	Identifier	se		99851	0					
ANR	99902	Identifier	data		99851	1					
ANR	99903	Identifier	rename		99851	1					
ANR	99904	Identifier	space		99851	1					
ANR	99905	Argument	se -> data . rename . oldname		99851	2					
ANR	99906	MemberAccess	se -> data . rename . oldname		99851	0					
ANR	99907	MemberAccess	se -> data . rename		99851	0					
ANR	99908	PtrMemberAccess	se -> data		99851	0					
ANR	99909	Identifier	se		99851	0					
ANR	99910	Identifier	data		99851	1					
ANR	99911	Identifier	rename		99851	1					
ANR	99912	Identifier	oldname		99851	1					
ANR	99913	Argument	se -> data . rename . newname		99851	3					
ANR	99914	MemberAccess	se -> data . rename . newname		99851	0					
ANR	99915	MemberAccess	se -> data . rename		99851	0					
ANR	99916	PtrMemberAccess	se -> data		99851	0					
ANR	99917	Identifier	se		99851	0					
ANR	99918	Identifier	data		99851	1					
ANR	99919	Identifier	rename		99851	1					
ANR	99920	Identifier	newname		99851	1					
ANR	99921	ReturnType	static void		99851	1					
ANR	99922	Identifier	zign_rename_for		99851	2					
ANR	99923	ParameterList	"REvent * ev , int type , void * user , void * data"		99851	3					
ANR	99924	Parameter	REvent * ev	56:28:1616:1625	99851	0	True				
ANR	99925	ParameterType	REvent *		99851	0					
ANR	99926	Identifier	ev		99851	1					
ANR	99927	Parameter	int type	56:40:1628:1635	99851	1	True				
ANR	99928	ParameterType	int		99851	0					
ANR	99929	Identifier	type		99851	1					
ANR	99930	Parameter	void * user	56:50:1638:1647	99851	2	True				
ANR	99931	ParameterType	void *		99851	0					
ANR	99932	Identifier	user		99851	1					
ANR	99933	Parameter	void * data	56:62:1650:1659	99851	3	True				
ANR	99934	ParameterType	void *		99851	0					
ANR	99935	Identifier	data		99851	1					
ANR	99936	CFGEntryNode	ENTRY		99851		True				
ANR	99937	CFGExitNode	EXIT		99851		True				
ANR	99938	Symbol	se -> data . rename . newname		99851						
ANR	99939	Symbol	ev -> user		99851						
ANR	99940	Symbol	data		99851						
ANR	99941	Symbol	se -> data . rename . space		99851						
ANR	99942	Symbol	RAnal		99851						
ANR	99943	Symbol	type		99851						
ANR	99944	Symbol	se -> data . rename . oldname		99851						
ANR	99945	Symbol	ev		99851						
ANR	99946	Symbol	container_of		99851						
ANR	99947	Symbol	se		99851						
ANR	99948	Symbol	se -> data		99851						
ANR	99949	Symbol	s		99851						
ANR	99950	Symbol	* ev		99851						
ANR	99951	Symbol	anal		99851						
ANR	99952	Symbol	* se		99851						
ANR	99953	Symbol	se -> data . rename		99851						
ANR	99954	Symbol	user		99851						
ANR	99955	Symbol	zign_spaces		99851						
ANR	99956	Function	__anal_hint_tree_calc_max_addr	66:0:1920:2321							
ANR	99957	FunctionDef	__anal_hint_tree_calc_max_addr (RBNode * node)		99956	0					
ANR	99958	CompoundStatement		66:57:1977:2321	99956	0					
ANR	99959	IdentifierDeclStatement	int i ;	67:1:1980:1985	99956	0	True				
ANR	99960	IdentifierDecl	i		99956	0					
ANR	99961	IdentifierDeclType	int		99956	0					
ANR	99962	Identifier	i		99956	1					
ANR	99963	IdentifierDeclStatement	"RAnalRange * range = container_of ( node , RAnalRange , rb ) ;"	68:1:1988:2043	99956	1	True				
ANR	99964	IdentifierDecl	"* range = container_of ( node , RAnalRange , rb )"		99956	0					
ANR	99965	IdentifierDeclType	RAnalRange *		99956	0					
ANR	99966	Identifier	range		99956	1					
ANR	99967	AssignmentExpression	"* range = container_of ( node , RAnalRange , rb )"		99956	2		=			
ANR	99968	Identifier	range		99956	0					
ANR	99969	CallExpression	"container_of ( node , RAnalRange , rb )"		99956	1					
ANR	99970	Callee	container_of		99956	0					
ANR	99971	Identifier	container_of		99956	0					
ANR	99972	ArgumentList	node		99956	1					
ANR	99973	Argument	node		99956	0					
ANR	99974	Identifier	node		99956	0					
ANR	99975	Argument	RAnalRange		99956	1					
ANR	99976	Identifier	RAnalRange		99956	0					
ANR	99977	Argument	rb		99956	2					
ANR	99978	Identifier	rb		99956	0					
ANR	99979	ExpressionStatement	range -> rb_max_addr = range -> from	69:1:2046:2078	99956	2	True				
ANR	99980	AssignmentExpression	range -> rb_max_addr = range -> from		99956	0		=			
ANR	99981	PtrMemberAccess	range -> rb_max_addr		99956	0					
ANR	99982	Identifier	range		99956	0					
ANR	99983	Identifier	rb_max_addr		99956	1					
ANR	99984	PtrMemberAccess	range -> from		99956	1					
ANR	99985	Identifier	range		99956	0					
ANR	99986	Identifier	from		99956	1					
ANR	99987	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		99956	3					
ANR	99988	ForInit	i = 0 ;	70:6:2086:2091	99956	0	True				
ANR	99989	AssignmentExpression	i = 0		99956	0		=			
ANR	99990	Identifier	i		99956	0					
ANR	99991	PrimaryExpression	0		99956	1					
ANR	99992	Condition	i < 2	70:13:2093:2097	99956	1	True				
ANR	99993	RelationalExpression	i < 2		99956	0		<			
ANR	99994	Identifier	i		99956	0					
ANR	99995	PrimaryExpression	2		99956	1					
ANR	99996	PostIncDecOperationExpression	i ++	70:20:2100:2102	99956	2	True				
ANR	99997	Identifier	i		99956	0					
ANR	99998	IncDec	++		99956	1					
ANR	99999	CompoundStatement		5:25:127:127	99956	3					
ANR	100000	IfStatement	if ( node -> child [ i ] )		99956	0					
ANR	100001	Condition	node -> child [ i ]	71:6:2113:2126	99956	0	True				
ANR	100002	ArrayIndexing	node -> child [ i ]		99956	0					
ANR	100003	PtrMemberAccess	node -> child		99956	0					
ANR	100004	Identifier	node		99956	0					
ANR	100005	Identifier	child		99956	1					
ANR	100006	Identifier	i		99956	1					
ANR	100007	CompoundStatement		7:3:156:232	99956	1					
ANR	100008	IdentifierDeclStatement	"RAnalRange * range1 = container_of ( node -> child [ i ] , RAnalRange , rb ) ;"	72:3:2134:2210	99956	0	True				
ANR	100009	IdentifierDecl	"* range1 = container_of ( node -> child [ i ] , RAnalRange , rb )"		99956	0					
ANR	100010	IdentifierDeclType	RAnalRange *		99956	0					
ANR	100011	Identifier	range1		99956	1					
ANR	100012	AssignmentExpression	"* range1 = container_of ( node -> child [ i ] , RAnalRange , rb )"		99956	2		=			
ANR	100013	Identifier	range1		99956	0					
ANR	100014	CallExpression	"container_of ( node -> child [ i ] , RAnalRange , rb )"		99956	1					
ANR	100015	Callee	container_of		99956	0					
ANR	100016	Identifier	container_of		99956	0					
ANR	100017	ArgumentList	node -> child [ i ]		99956	1					
ANR	100018	Argument	node -> child [ i ]		99956	0					
ANR	100019	ArrayIndexing	node -> child [ i ]		99956	0					
ANR	100020	PtrMemberAccess	node -> child		99956	0					
ANR	100021	Identifier	node		99956	0					
ANR	100022	Identifier	child		99956	1					
ANR	100023	Identifier	i		99956	1					
ANR	100024	Argument	RAnalRange		99956	1					
ANR	100025	Identifier	RAnalRange		99956	0					
ANR	100026	Argument	rb		99956	2					
ANR	100027	Identifier	rb		99956	0					
ANR	100028	IfStatement	if ( range1 -> rb_max_addr > range -> rb_max_addr )		99956	1					
ANR	100029	Condition	range1 -> rb_max_addr > range -> rb_max_addr	74:7:2219:2258	99956	0	True				
ANR	100030	RelationalExpression	range1 -> rb_max_addr > range -> rb_max_addr		99956	0		>			
ANR	100031	PtrMemberAccess	range1 -> rb_max_addr		99956	0					
ANR	100032	Identifier	range1		99956	0					
ANR	100033	Identifier	rb_max_addr		99956	1					
ANR	100034	PtrMemberAccess	range -> rb_max_addr		99956	1					
ANR	100035	Identifier	range		99956	0					
ANR	100036	Identifier	rb_max_addr		99956	1					
ANR	100037	CompoundStatement		9:49:283:283	99956	1					
ANR	100038	ExpressionStatement	range -> rb_max_addr = range1 -> rb_max_addr	75:4:2267:2307	99956	0	True				
ANR	100039	AssignmentExpression	range -> rb_max_addr = range1 -> rb_max_addr		99956	0		=			
ANR	100040	PtrMemberAccess	range -> rb_max_addr		99956	0					
ANR	100041	Identifier	range		99956	0					
ANR	100042	Identifier	rb_max_addr		99956	1					
ANR	100043	PtrMemberAccess	range1 -> rb_max_addr		99956	1					
ANR	100044	Identifier	range1		99956	0					
ANR	100045	Identifier	rb_max_addr		99956	1					
ANR	100046	ReturnType	static void		99956	1					
ANR	100047	Identifier	__anal_hint_tree_calc_max_addr		99956	2					
ANR	100048	ParameterList	RBNode * node		99956	3					
ANR	100049	Parameter	RBNode * node	66:43:1963:1974	99956	0	True				
ANR	100050	ParameterType	RBNode *		99956	0					
ANR	100051	Identifier	node		99956	1					
ANR	100052	CFGEntryNode	ENTRY		99956		True				
ANR	100053	CFGExitNode	EXIT		99956		True				
ANR	100054	Symbol	range -> from		99956						
ANR	100055	Symbol	* range1		99956						
ANR	100056	Symbol	range1		99956						
ANR	100057	Symbol	i		99956						
ANR	100058	Symbol	range		99956						
ANR	100059	Symbol	* node -> child		99956						
ANR	100060	Symbol	node -> child		99956						
ANR	100061	Symbol	rb		99956						
ANR	100062	Symbol	node		99956						
ANR	100063	Symbol	container_of		99956						
ANR	100064	Symbol	* range		99956						
ANR	100065	Symbol	RAnalRange		99956						
ANR	100066	Symbol	* i		99956						
ANR	100067	Symbol	* * node		99956						
ANR	100068	Symbol	* node		99956						
ANR	100069	Symbol	range -> rb_max_addr		99956						
ANR	100070	Symbol	range1 -> rb_max_addr		99956						
ANR	100071	Function	__anal_hint_range_tree_cmp	82:0:2331:2599							
ANR	100072	FunctionDef	"__anal_hint_range_tree_cmp (const void * a_ , const RBNode * b_)"		100071	0					
ANR	100073	CompoundStatement		82:72:2403:2599	100071	0					
ANR	100074	IdentifierDeclStatement	const RAnalRange * a = a_ ;	83:1:2406:2430	100071	0	True				
ANR	100075	IdentifierDecl	* a = a_		100071	0					
ANR	100076	IdentifierDeclType	const RAnalRange *		100071	0					
ANR	100077	Identifier	a		100071	1					
ANR	100078	AssignmentExpression	* a = a_		100071	2		=			
ANR	100079	Identifier	a_		100071	0					
ANR	100080	Identifier	a_		100071	1					
ANR	100081	Statement	const	84:1:2433:2437	100071	1	True				
ANR	100082	Statement	RAnalRange	84:7:2439:2448	100071	2	True				
ANR	100083	Statement	*	84:18:2450:2450	100071	3	True				
ANR	100084	Statement	b	84:19:2451:2451	100071	4	True				
ANR	100085	Statement	=	84:21:2453:2453	100071	5	True				
ANR	100086	Statement	container_of	84:23:2455:2466	100071	6	True				
ANR	100087	Statement	(	84:36:2468:2468	100071	7	True				
ANR	100088	Statement	b_	84:37:2469:2470	100071	8	True				
ANR	100089	Statement	","	84:39:2471:2471	100071	9	True				
ANR	100090	Statement	const	84:41:2473:2477	100071	10	True				
ANR	100091	Statement	RAnalRange	84:47:2479:2488	100071	11	True				
ANR	100092	Statement	","	84:57:2489:2489	100071	12	True				
ANR	100093	Statement	rb	84:59:2491:2492	100071	13	True				
ANR	100094	Statement	)	84:61:2493:2493	100071	14	True				
ANR	100095	ExpressionStatement		84:62:2494:2494	100071	15	True				
ANR	100096	IfStatement	if ( a && b )		100071	16					
ANR	100097	Condition	a && b	85:5:2501:2506	100071	0	True				
ANR	100098	AndExpression	a && b		100071	0		&&			
ANR	100099	Identifier	a		100071	0					
ANR	100100	Identifier	b		100071	1					
ANR	100101	CompoundStatement		5:2:109:146	100071	1					
ANR	100102	IdentifierDeclStatement	"ut64 from0 = a -> from , from1 = b -> from ;"	86:2:2513:2550	100071	0	True				
ANR	100103	IdentifierDecl	from0 = a -> from		100071	0					
ANR	100104	IdentifierDeclType	ut64		100071	0					
ANR	100105	Identifier	from0		100071	1					
ANR	100106	AssignmentExpression	from0 = a -> from		100071	2		=			
ANR	100107	Identifier	from0		100071	0					
ANR	100108	PtrMemberAccess	a -> from		100071	1					
ANR	100109	Identifier	a		100071	0					
ANR	100110	Identifier	from		100071	1					
ANR	100111	IdentifierDecl	from1 = b -> from		100071	1					
ANR	100112	IdentifierDeclType	ut64		100071	0					
ANR	100113	Identifier	from1		100071	1					
ANR	100114	AssignmentExpression	from1 = b -> from		100071	2		=			
ANR	100115	Identifier	from1		100071	0					
ANR	100116	PtrMemberAccess	b -> from		100071	1					
ANR	100117	Identifier	b		100071	0					
ANR	100118	Identifier	from		100071	1					
ANR	100119	ReturnStatement	return from0 < from1 ? - 1 : 1 ;	87:2:2554:2583	100071	1	True				
ANR	100120	ConditionalExpression	from0 < from1 ? - 1 : 1		100071	0					
ANR	100121	Condition	from0 < from1		100071	0					
ANR	100122	RelationalExpression	from0 < from1		100071	0		<			
ANR	100123	Identifier	from0		100071	0					
ANR	100124	Identifier	from1		100071	1					
ANR	100125	UnaryOperationExpression	- 1		100071	1					
ANR	100126	UnaryOperator	-		100071	0					
ANR	100127	PrimaryExpression	1		100071	1					
ANR	100128	PrimaryExpression	1		100071	2					
ANR	100129	ReturnStatement	return 0 ;	89:1:2589:2597	100071	17	True				
ANR	100130	PrimaryExpression	0		100071	0					
ANR	100131	ReturnType	static int		100071	1					
ANR	100132	Identifier	__anal_hint_range_tree_cmp		100071	2					
ANR	100133	ParameterList	"const void * a_ , const RBNode * b_"		100071	3					
ANR	100134	Parameter	const void * a_	82:38:2369:2382	100071	0	True				
ANR	100135	ParameterType	const void *		100071	0					
ANR	100136	Identifier	a_		100071	1					
ANR	100137	Parameter	const RBNode * b_	82:54:2385:2400	100071	1	True				
ANR	100138	ParameterType	const RBNode *		100071	0					
ANR	100139	Identifier	b_		100071	1					
ANR	100140	CFGEntryNode	ENTRY		100071		True				
ANR	100141	CFGExitNode	EXIT		100071		True				
ANR	100142	Symbol	a		100071						
ANR	100143	Symbol	a -> from		100071						
ANR	100144	Symbol	b		100071						
ANR	100145	Symbol	from0		100071						
ANR	100146	Symbol	from1		100071						
ANR	100147	Symbol	* a		100071						
ANR	100148	Symbol	b -> from		100071						
ANR	100149	Symbol	* b		100071						
ANR	100150	Symbol	b_		100071						
ANR	100151	Symbol	a_		100071						
ANR	100152	Function	__anal_hint_range_tree_free	92:0:2602:2703							
ANR	100153	FunctionDef	__anal_hint_range_tree_free (RBNode * node)		100152	0					
ANR	100154	CompoundStatement		92:54:2656:2703	100152	0					
ANR	100155	ExpressionStatement	"free ( container_of ( node , RAnalRange , rb ) )"	93:1:2659:2701	100152	0	True				
ANR	100156	CallExpression	"free ( container_of ( node , RAnalRange , rb ) )"		100152	0					
ANR	100157	Callee	free		100152	0					
ANR	100158	Identifier	free		100152	0					
ANR	100159	ArgumentList	"container_of ( node , RAnalRange , rb )"		100152	1					
ANR	100160	Argument	"container_of ( node , RAnalRange , rb )"		100152	0					
ANR	100161	CallExpression	"container_of ( node , RAnalRange , rb )"		100152	0					
ANR	100162	Callee	container_of		100152	0					
ANR	100163	Identifier	container_of		100152	0					
ANR	100164	ArgumentList	node		100152	1					
ANR	100165	Argument	node		100152	0					
ANR	100166	Identifier	node		100152	0					
ANR	100167	Argument	RAnalRange		100152	1					
ANR	100168	Identifier	RAnalRange		100152	0					
ANR	100169	Argument	rb		100152	2					
ANR	100170	Identifier	rb		100152	0					
ANR	100171	ReturnType	static void		100152	1					
ANR	100172	Identifier	__anal_hint_range_tree_free		100152	2					
ANR	100173	ParameterList	RBNode * node		100152	3					
ANR	100174	Parameter	RBNode * node	92:40:2642:2653	100152	0	True				
ANR	100175	ParameterType	RBNode *		100152	0					
ANR	100176	Identifier	node		100152	1					
ANR	100177	CFGEntryNode	ENTRY		100152		True				
ANR	100178	CFGExitNode	EXIT		100152		True				
ANR	100179	Symbol	rb		100152						
ANR	100180	Symbol	node		100152						
ANR	100181	Symbol	container_of		100152						
ANR	100182	Symbol	RAnalRange		100152						
ANR	100183	Function	__anal_range_hint_tree_find_at	97:0:2707:2968							
ANR	100184	FunctionDef	"__anal_range_hint_tree_find_at (RBNode * node , ut64 addr)"		100183	0					
ANR	100185	CompoundStatement		97:75:2782:2968	100183	0					
ANR	100186	WhileStatement	while ( node )		100183	0					
ANR	100187	Condition	node	98:8:2792:2795	100183	0	True				
ANR	100188	Identifier	node		100183	0					
ANR	100189	CompoundStatement		3:2:19:74	100183	1					
ANR	100190	IdentifierDeclStatement	"RAnalRange * range = container_of ( node , RAnalRange , rb ) ;"	99:2:2802:2857	100183	0	True				
ANR	100191	IdentifierDecl	"* range = container_of ( node , RAnalRange , rb )"		100183	0					
ANR	100192	IdentifierDeclType	RAnalRange *		100183	0					
ANR	100193	Identifier	range		100183	1					
ANR	100194	AssignmentExpression	"* range = container_of ( node , RAnalRange , rb )"		100183	2		=			
ANR	100195	Identifier	range		100183	0					
ANR	100196	CallExpression	"container_of ( node , RAnalRange , rb )"		100183	1					
ANR	100197	Callee	container_of		100183	0					
ANR	100198	Identifier	container_of		100183	0					
ANR	100199	ArgumentList	node		100183	1					
ANR	100200	Argument	node		100183	0					
ANR	100201	Identifier	node		100183	0					
ANR	100202	Argument	RAnalRange		100183	1					
ANR	100203	Identifier	RAnalRange		100183	0					
ANR	100204	Argument	rb		100183	2					
ANR	100205	Identifier	rb		100183	0					
ANR	100206	IfStatement	if ( range -> from == addr )		100183	1					
ANR	100207	Condition	range -> from == addr	100:6:2865:2883	100183	0	True				
ANR	100208	EqualityExpression	range -> from == addr		100183	0		==			
ANR	100209	PtrMemberAccess	range -> from		100183	0					
ANR	100210	Identifier	range		100183	0					
ANR	100211	Identifier	from		100183	1					
ANR	100212	Identifier	addr		100183	1					
ANR	100213	CompoundStatement		4:27:103:103	100183	1					
ANR	100214	ReturnStatement	return range ;	101:3:2891:2903	100183	0	True				
ANR	100215	Identifier	range		100183	0					
ANR	100216	ExpressionStatement	node = node -> child [ range -> from < addr ]	103:2:2911:2949	100183	2	True				
ANR	100217	AssignmentExpression	node = node -> child [ range -> from < addr ]		100183	0		=			
ANR	100218	Identifier	node		100183	0					
ANR	100219	ArrayIndexing	node -> child [ range -> from < addr ]		100183	1					
ANR	100220	PtrMemberAccess	node -> child		100183	0					
ANR	100221	Identifier	node		100183	0					
ANR	100222	Identifier	child		100183	1					
ANR	100223	RelationalExpression	range -> from < addr		100183	1		<			
ANR	100224	PtrMemberAccess	range -> from		100183	0					
ANR	100225	Identifier	range		100183	0					
ANR	100226	Identifier	from		100183	1					
ANR	100227	Identifier	addr		100183	1					
ANR	100228	ReturnStatement	return NULL ;	105:1:2955:2966	100183	1	True				
ANR	100229	Identifier	NULL		100183	0					
ANR	100230	ReturnType	static RAnalRange *		100183	1					
ANR	100231	Identifier	__anal_range_hint_tree_find_at		100183	2					
ANR	100232	ParameterList	"RBNode * node , ut64 addr"		100183	3					
ANR	100233	Parameter	RBNode * node	97:50:2757:2768	100183	0	True				
ANR	100234	ParameterType	RBNode *		100183	0					
ANR	100235	Identifier	node		100183	1					
ANR	100236	Parameter	ut64 addr	97:64:2771:2779	100183	1	True				
ANR	100237	ParameterType	ut64		100183	0					
ANR	100238	Identifier	addr		100183	1					
ANR	100239	CFGEntryNode	ENTRY		100183		True				
ANR	100240	CFGExitNode	EXIT		100183		True				
ANR	100241	Symbol	range -> from		100183						
ANR	100242	Symbol	NULL		100183						
ANR	100243	Symbol	* * range		100183						
ANR	100244	Symbol	range		100183						
ANR	100245	Symbol	* node -> child		100183						
ANR	100246	Symbol	node -> child		100183						
ANR	100247	Symbol	* range -> from		100183						
ANR	100248	Symbol	rb		100183						
ANR	100249	Symbol	node		100183						
ANR	100250	Symbol	container_of		100183						
ANR	100251	Symbol	* range		100183						
ANR	100252	Symbol	RAnalRange		100183						
ANR	100253	Symbol	* * node		100183						
ANR	100254	Symbol	* node		100183						
ANR	100255	Symbol	* addr		100183						
ANR	100256	Symbol	addr		100183						
ANR	100257	Function	__anal_range_hint_tree_delete	110:0:2988:3252							
ANR	100258	FunctionDef	"__anal_range_hint_tree_delete (RBNode * * root , RAnalRange * data)"		100257	0					
ANR	100259	CompoundStatement		110:75:3063:3252	100257	0					
ANR	100260	IfStatement	if ( data )		100257	0					
ANR	100261	Condition	data	111:5:3070:3073	100257	0	True				
ANR	100262	Identifier	data		100257	0					
ANR	100263	CompoundStatement		2:11:12:12	100257	1					
ANR	100264	ReturnStatement	"return r_rbtree_aug_delete ( root , data , __anal_hint_range_tree_cmp , __anal_hint_range_tree_free , __anal_hint_tree_calc_max_addr ) ? 1 : 0 ;"	112:2:3080:3232	100257	0	True				
ANR	100265	ConditionalExpression	"r_rbtree_aug_delete ( root , data , __anal_hint_range_tree_cmp , __anal_hint_range_tree_free , __anal_hint_tree_calc_max_addr ) ? 1 : 0"		100257	0					
ANR	100266	Condition	"r_rbtree_aug_delete ( root , data , __anal_hint_range_tree_cmp , __anal_hint_range_tree_free , __anal_hint_tree_calc_max_addr )"		100257	0					
ANR	100267	CallExpression	"r_rbtree_aug_delete ( root , data , __anal_hint_range_tree_cmp , __anal_hint_range_tree_free , __anal_hint_tree_calc_max_addr )"		100257	0					
ANR	100268	Callee	r_rbtree_aug_delete		100257	0					
ANR	100269	Identifier	r_rbtree_aug_delete		100257	0					
ANR	100270	ArgumentList	root		100257	1					
ANR	100271	Argument	root		100257	0					
ANR	100272	Identifier	root		100257	0					
ANR	100273	Argument	data		100257	1					
ANR	100274	Identifier	data		100257	0					
ANR	100275	Argument	__anal_hint_range_tree_cmp		100257	2					
ANR	100276	Identifier	__anal_hint_range_tree_cmp		100257	0					
ANR	100277	Argument	__anal_hint_range_tree_free		100257	3					
ANR	100278	Identifier	__anal_hint_range_tree_free		100257	0					
ANR	100279	Argument	__anal_hint_tree_calc_max_addr		100257	4					
ANR	100280	Identifier	__anal_hint_tree_calc_max_addr		100257	0					
ANR	100281	PrimaryExpression	1		100257	1					
ANR	100282	PrimaryExpression	0		100257	2					
ANR	100283	ReturnStatement	return false ;	116:1:3238:3250	100257	1	True				
ANR	100284	Identifier	false		100257	0					
ANR	100285	ReturnType	static bool		100257	1					
ANR	100286	Identifier	__anal_range_hint_tree_delete		100257	2					
ANR	100287	ParameterList	"RBNode * * root , RAnalRange * data"		100257	3					
ANR	100288	Parameter	RBNode * * root	110:42:3030:3042	100257	0	True				
ANR	100289	ParameterType	RBNode * *		100257	0					
ANR	100290	Identifier	root		100257	1					
ANR	100291	Parameter	RAnalRange * data	110:57:3045:3060	100257	1	True				
ANR	100292	ParameterType	RAnalRange *		100257	0					
ANR	100293	Identifier	data		100257	1					
ANR	100294	CFGEntryNode	ENTRY		100257		True				
ANR	100295	CFGExitNode	EXIT		100257		True				
ANR	100296	Symbol	__anal_hint_range_tree_free		100257						
ANR	100297	Symbol	data		100257						
ANR	100298	Symbol	r_rbtree_aug_delete		100257						
ANR	100299	Symbol	root		100257						
ANR	100300	Symbol	__anal_hint_range_tree_cmp		100257						
ANR	100301	Symbol	false		100257						
ANR	100302	Symbol	__anal_hint_tree_calc_max_addr		100257						
ANR	100303	Function	__anal_range_hint_tree_insert	120:0:3262:3440							
ANR	100304	FunctionDef	"__anal_range_hint_tree_insert (RBNode * * root , RAnalRange * range)"		100303	0					
ANR	100305	CompoundStatement		120:76:3338:3440	100303	0					
ANR	100306	ExpressionStatement	"r_rbtree_aug_insert ( root , range , & ( range -> rb ) , __anal_hint_range_tree_cmp , NULL )"	121:1:3341:3438	100303	0	True				
ANR	100307	CallExpression	"r_rbtree_aug_insert ( root , range , & ( range -> rb ) , __anal_hint_range_tree_cmp , NULL )"		100303	0					
ANR	100308	Callee	r_rbtree_aug_insert		100303	0					
ANR	100309	Identifier	r_rbtree_aug_insert		100303	0					
ANR	100310	ArgumentList	root		100303	1					
ANR	100311	Argument	root		100303	0					
ANR	100312	Identifier	root		100303	0					
ANR	100313	Argument	range		100303	1					
ANR	100314	Identifier	range		100303	0					
ANR	100315	Argument	& ( range -> rb )		100303	2					
ANR	100316	UnaryOperationExpression	& ( range -> rb )		100303	0					
ANR	100317	UnaryOperator	&		100303	0					
ANR	100318	PtrMemberAccess	range -> rb		100303	1					
ANR	100319	Identifier	range		100303	0					
ANR	100320	Identifier	rb		100303	1					
ANR	100321	Argument	__anal_hint_range_tree_cmp		100303	3					
ANR	100322	Identifier	__anal_hint_range_tree_cmp		100303	0					
ANR	100323	Argument	NULL		100303	4					
ANR	100324	Identifier	NULL		100303	0					
ANR	100325	ReturnType	static void		100303	1					
ANR	100326	Identifier	__anal_range_hint_tree_insert		100303	2					
ANR	100327	ParameterList	"RBNode * * root , RAnalRange * range"		100303	3					
ANR	100328	Parameter	RBNode * * root	120:42:3304:3316	100303	0	True				
ANR	100329	ParameterType	RBNode * *		100303	0					
ANR	100330	Identifier	root		100303	1					
ANR	100331	Parameter	RAnalRange * range	120:57:3319:3335	100303	1	True				
ANR	100332	ParameterType	RAnalRange *		100303	0					
ANR	100333	Identifier	range		100303	1					
ANR	100334	CFGEntryNode	ENTRY		100303		True				
ANR	100335	CFGExitNode	EXIT		100303		True				
ANR	100336	Symbol	NULL		100303						
ANR	100337	Symbol	root		100303						
ANR	100338	Symbol	__anal_hint_range_tree_cmp		100303						
ANR	100339	Symbol	range		100303						
ANR	100340	Symbol	& range -> rb		100303						
ANR	100341	Function	__anal_add_range_on_hints	126:0:3443:3943							
ANR	100342	FunctionDef	"__anal_add_range_on_hints (RAnal * a , ut64 addr , int bits)"		100341	0					
ANR	100343	CompoundStatement		126:69:3512:3943	100341	0					
ANR	100344	ExpressionStatement	r_return_if_fail ( a )	127:1:3515:3535	100341	0	True				
ANR	100345	CallExpression	r_return_if_fail ( a )		100341	0					
ANR	100346	Callee	r_return_if_fail		100341	0					
ANR	100347	Identifier	r_return_if_fail		100341	0					
ANR	100348	ArgumentList	a		100341	1					
ANR	100349	Argument	a		100341	0					
ANR	100350	Identifier	a		100341	0					
ANR	100351	IdentifierDeclStatement	"RAnalRange * range = __anal_range_hint_tree_find_at ( a -> rb_hints_ranges , addr ) ;"	129:1:3611:3688	100341	1	True				
ANR	100352	IdentifierDecl	"* range = __anal_range_hint_tree_find_at ( a -> rb_hints_ranges , addr )"		100341	0					
ANR	100353	IdentifierDeclType	RAnalRange *		100341	0					
ANR	100354	Identifier	range		100341	1					
ANR	100355	AssignmentExpression	"* range = __anal_range_hint_tree_find_at ( a -> rb_hints_ranges , addr )"		100341	2		=			
ANR	100356	Identifier	range		100341	0					
ANR	100357	CallExpression	"__anal_range_hint_tree_find_at ( a -> rb_hints_ranges , addr )"		100341	1					
ANR	100358	Callee	__anal_range_hint_tree_find_at		100341	0					
ANR	100359	Identifier	__anal_range_hint_tree_find_at		100341	0					
ANR	100360	ArgumentList	a -> rb_hints_ranges		100341	1					
ANR	100361	Argument	a -> rb_hints_ranges		100341	0					
ANR	100362	PtrMemberAccess	a -> rb_hints_ranges		100341	0					
ANR	100363	Identifier	a		100341	0					
ANR	100364	Identifier	rb_hints_ranges		100341	1					
ANR	100365	Argument	addr		100341	1					
ANR	100366	Identifier	addr		100341	0					
ANR	100367	IfStatement	if ( range )		100341	2					
ANR	100368	Condition	range	130:5:3695:3699	100341	0	True				
ANR	100369	Identifier	range		100341	0					
ANR	100370	CompoundStatement		5:12:189:189	100341	1					
ANR	100371	ExpressionStatement	range -> bits = bits	131:2:3706:3724	100341	0	True				
ANR	100372	AssignmentExpression	range -> bits = bits		100341	0		=			
ANR	100373	PtrMemberAccess	range -> bits		100341	0					
ANR	100374	Identifier	range		100341	0					
ANR	100375	Identifier	bits		100341	1					
ANR	100376	Identifier	bits		100341	1					
ANR	100377	ElseStatement	else		100341	0					
ANR	100378	CompoundStatement		7:8:221:221	100341	0					
ANR	100379	ExpressionStatement	range = R_NEW0 ( RAnalRange )	134:2:3783:3810	100341	0	True				
ANR	100380	AssignmentExpression	range = R_NEW0 ( RAnalRange )		100341	0		=			
ANR	100381	Identifier	range		100341	0					
ANR	100382	CallExpression	R_NEW0 ( RAnalRange )		100341	1					
ANR	100383	Callee	R_NEW0		100341	0					
ANR	100384	Identifier	R_NEW0		100341	0					
ANR	100385	ArgumentList	RAnalRange		100341	1					
ANR	100386	Argument	RAnalRange		100341	0					
ANR	100387	Identifier	RAnalRange		100341	0					
ANR	100388	IfStatement	if ( range )		100341	1					
ANR	100389	Condition	range	135:6:3818:3822	100341	0	True				
ANR	100390	Identifier	range		100341	0					
ANR	100391	CompoundStatement		10:13:312:312	100341	1					
ANR	100392	ExpressionStatement	range -> bits = bits	136:3:3830:3848	100341	0	True				
ANR	100393	AssignmentExpression	range -> bits = bits		100341	0		=			
ANR	100394	PtrMemberAccess	range -> bits		100341	0					
ANR	100395	Identifier	range		100341	0					
ANR	100396	Identifier	bits		100341	1					
ANR	100397	Identifier	bits		100341	1					
ANR	100398	ExpressionStatement	range -> from = addr	137:3:3853:3871	100341	1	True				
ANR	100399	AssignmentExpression	range -> from = addr		100341	0		=			
ANR	100400	PtrMemberAccess	range -> from		100341	0					
ANR	100401	Identifier	range		100341	0					
ANR	100402	Identifier	from		100341	1					
ANR	100403	Identifier	addr		100341	1					
ANR	100404	ExpressionStatement	"__anal_range_hint_tree_insert ( & a -> rb_hints_ranges , range )"	138:3:3876:3934	100341	2	True				
ANR	100405	CallExpression	"__anal_range_hint_tree_insert ( & a -> rb_hints_ranges , range )"		100341	0					
ANR	100406	Callee	__anal_range_hint_tree_insert		100341	0					
ANR	100407	Identifier	__anal_range_hint_tree_insert		100341	0					
ANR	100408	ArgumentList	& a -> rb_hints_ranges		100341	1					
ANR	100409	Argument	& a -> rb_hints_ranges		100341	0					
ANR	100410	UnaryOperationExpression	& a -> rb_hints_ranges		100341	0					
ANR	100411	UnaryOperator	&		100341	0					
ANR	100412	PtrMemberAccess	a -> rb_hints_ranges		100341	1					
ANR	100413	Identifier	a		100341	0					
ANR	100414	Identifier	rb_hints_ranges		100341	1					
ANR	100415	Argument	range		100341	1					
ANR	100416	Identifier	range		100341	0					
ANR	100417	ReturnType	static void		100341	1					
ANR	100418	Identifier	__anal_add_range_on_hints		100341	2					
ANR	100419	ParameterList	"RAnal * a , ut64 addr , int bits"		100341	3					
ANR	100420	Parameter	RAnal * a	126:38:3481:3488	100341	0	True				
ANR	100421	ParameterType	RAnal *		100341	0					
ANR	100422	Identifier	a		100341	1					
ANR	100423	Parameter	ut64 addr	126:48:3491:3499	100341	1	True				
ANR	100424	ParameterType	ut64		100341	0					
ANR	100425	Identifier	addr		100341	1					
ANR	100426	Parameter	int bits	126:59:3502:3509	100341	2	True				
ANR	100427	ParameterType	int		100341	0					
ANR	100428	Identifier	bits		100341	1					
ANR	100429	CFGEntryNode	ENTRY		100341		True				
ANR	100430	CFGExitNode	EXIT		100341		True				
ANR	100431	Symbol	a		100341						
ANR	100432	Symbol	range -> from		100341						
ANR	100433	Symbol	__anal_range_hint_tree_find_at		100341						
ANR	100434	Symbol	range -> bits		100341						
ANR	100435	Symbol	bits		100341						
ANR	100436	Symbol	& a -> rb_hints_ranges		100341						
ANR	100437	Symbol	range		100341						
ANR	100438	Symbol	* a		100341						
ANR	100439	Symbol	R_NEW0		100341						
ANR	100440	Symbol	* range		100341						
ANR	100441	Symbol	RAnalRange		100341						
ANR	100442	Symbol	a -> rb_hints_ranges		100341						
ANR	100443	Symbol	addr		100341						
ANR	100444	Function	__anal_hint_on_bits	143:0:3946:4081							
ANR	100445	FunctionDef	"__anal_hint_on_bits (RAnal * a , ut64 addr , int bits , bool set)"		100444	0					
ANR	100446	CompoundStatement		143:73:4019:4081	100444	0					
ANR	100447	IfStatement	if ( set )		100444	0					
ANR	100448	Condition	set	144:5:4026:4028	100444	0	True				
ANR	100449	Identifier	set		100444	0					
ANR	100450	CompoundStatement		2:10:11:11	100444	1					
ANR	100451	ExpressionStatement	"__anal_add_range_on_hints ( a , addr , bits )"	145:2:4035:4076	100444	0	True				
ANR	100452	CallExpression	"__anal_add_range_on_hints ( a , addr , bits )"		100444	0					
ANR	100453	Callee	__anal_add_range_on_hints		100444	0					
ANR	100454	Identifier	__anal_add_range_on_hints		100444	0					
ANR	100455	ArgumentList	a		100444	1					
ANR	100456	Argument	a		100444	0					
ANR	100457	Identifier	a		100444	0					
ANR	100458	Argument	addr		100444	1					
ANR	100459	Identifier	addr		100444	0					
ANR	100460	Argument	bits		100444	2					
ANR	100461	Identifier	bits		100444	0					
ANR	100462	ReturnType	static void		100444	1					
ANR	100463	Identifier	__anal_hint_on_bits		100444	2					
ANR	100464	ParameterList	"RAnal * a , ut64 addr , int bits , bool set"		100444	3					
ANR	100465	Parameter	RAnal * a	143:32:3978:3985	100444	0	True				
ANR	100466	ParameterType	RAnal *		100444	0					
ANR	100467	Identifier	a		100444	1					
ANR	100468	Parameter	ut64 addr	143:42:3988:3996	100444	1	True				
ANR	100469	ParameterType	ut64		100444	0					
ANR	100470	Identifier	addr		100444	1					
ANR	100471	Parameter	int bits	143:53:3999:4006	100444	2	True				
ANR	100472	ParameterType	int		100444	0					
ANR	100473	Identifier	bits		100444	1					
ANR	100474	Parameter	bool set	143:63:4009:4016	100444	3	True				
ANR	100475	ParameterType	bool		100444	0					
ANR	100476	Identifier	set		100444	1					
ANR	100477	CFGEntryNode	ENTRY		100444		True				
ANR	100478	CFGExitNode	EXIT		100444		True				
ANR	100479	Symbol	a		100444						
ANR	100480	Symbol	set		100444						
ANR	100481	Symbol	bits		100444						
ANR	100482	Symbol	addr		100444						
ANR	100483	Function	r_anal_new	149:0:4084:6433							
ANR	100484	FunctionDef	r_anal_new ()		100483	0					
ANR	100485	CompoundStatement		149:30:4114:6433	100483	0					
ANR	100486	IdentifierDeclStatement	int i ;	150:1:4117:4122	100483	0	True				
ANR	100487	IdentifierDecl	i		100483	0					
ANR	100488	IdentifierDeclType	int		100483	0					
ANR	100489	Identifier	i		100483	1					
ANR	100490	IdentifierDeclStatement	RAnal * anal = R_NEW0 ( RAnal ) ;	151:1:4125:4153	100483	1	True				
ANR	100491	IdentifierDecl	* anal = R_NEW0 ( RAnal )		100483	0					
ANR	100492	IdentifierDeclType	RAnal *		100483	0					
ANR	100493	Identifier	anal		100483	1					
ANR	100494	AssignmentExpression	* anal = R_NEW0 ( RAnal )		100483	2		=			
ANR	100495	Identifier	anal		100483	0					
ANR	100496	CallExpression	R_NEW0 ( RAnal )		100483	1					
ANR	100497	Callee	R_NEW0		100483	0					
ANR	100498	Identifier	R_NEW0		100483	0					
ANR	100499	ArgumentList	RAnal		100483	1					
ANR	100500	Argument	RAnal		100483	0					
ANR	100501	Identifier	RAnal		100483	0					
ANR	100502	IfStatement	if ( ! anal )		100483	2					
ANR	100503	Condition	! anal	152:5:4160:4164	100483	0	True				
ANR	100504	UnaryOperationExpression	! anal		100483	0					
ANR	100505	UnaryOperator	!		100483	0					
ANR	100506	Identifier	anal		100483	1					
ANR	100507	CompoundStatement		4:12:52:52	100483	1					
ANR	100508	ReturnStatement	return NULL ;	153:2:4171:4182	100483	0	True				
ANR	100509	Identifier	NULL		100483	0					
ANR	100510	ExpressionStatement	anal -> os = strdup ( R_SYS_OS )	155:1:4188:4216	100483	3	True				
ANR	100511	AssignmentExpression	anal -> os = strdup ( R_SYS_OS )		100483	0		=			
ANR	100512	PtrMemberAccess	anal -> os		100483	0					
ANR	100513	Identifier	anal		100483	0					
ANR	100514	Identifier	os		100483	1					
ANR	100515	CallExpression	strdup ( R_SYS_OS )		100483	1					
ANR	100516	Callee	strdup		100483	0					
ANR	100517	Identifier	strdup		100483	0					
ANR	100518	ArgumentList	R_SYS_OS		100483	1					
ANR	100519	Argument	R_SYS_OS		100483	0					
ANR	100520	Identifier	R_SYS_OS		100483	0					
ANR	100521	ExpressionStatement	anal -> reflines = NULL	156:1:4219:4240	100483	4	True				
ANR	100522	AssignmentExpression	anal -> reflines = NULL		100483	0		=			
ANR	100523	PtrMemberAccess	anal -> reflines		100483	0					
ANR	100524	Identifier	anal		100483	0					
ANR	100525	Identifier	reflines		100483	1					
ANR	100526	Identifier	NULL		100483	1					
ANR	100527	ExpressionStatement	anal -> esil_goto_limit = R_ANAL_ESIL_GOTO_LIMIT	157:1:4243:4289	100483	5	True				
ANR	100528	AssignmentExpression	anal -> esil_goto_limit = R_ANAL_ESIL_GOTO_LIMIT		100483	0		=			
ANR	100529	PtrMemberAccess	anal -> esil_goto_limit		100483	0					
ANR	100530	Identifier	anal		100483	0					
ANR	100531	Identifier	esil_goto_limit		100483	1					
ANR	100532	Identifier	R_ANAL_ESIL_GOTO_LIMIT		100483	1					
ANR	100533	ExpressionStatement	anal -> limit = NULL	158:1:4292:4310	100483	6	True				
ANR	100534	AssignmentExpression	anal -> limit = NULL		100483	0		=			
ANR	100535	PtrMemberAccess	anal -> limit		100483	0					
ANR	100536	Identifier	anal		100483	0					
ANR	100537	Identifier	limit		100483	1					
ANR	100538	Identifier	NULL		100483	1					
ANR	100539	ExpressionStatement	anal -> opt . nopskip = true	159:1:4313:4337	100483	7	True				
ANR	100540	AssignmentExpression	anal -> opt . nopskip = true		100483	0		=			
ANR	100541	MemberAccess	anal -> opt . nopskip		100483	0					
ANR	100542	PtrMemberAccess	anal -> opt		100483	0					
ANR	100543	Identifier	anal		100483	0					
ANR	100544	Identifier	opt		100483	1					
ANR	100545	Identifier	nopskip		100483	1					
ANR	100546	Identifier	true		100483	1					
ANR	100547	ExpressionStatement	anal -> opt . hpskip = false	160:1:4370:4394	100483	8	True				
ANR	100548	AssignmentExpression	anal -> opt . hpskip = false		100483	0		=			
ANR	100549	MemberAccess	anal -> opt . hpskip		100483	0					
ANR	100550	PtrMemberAccess	anal -> opt		100483	0					
ANR	100551	Identifier	anal		100483	0					
ANR	100552	Identifier	opt		100483	1					
ANR	100553	Identifier	hpskip		100483	1					
ANR	100554	Identifier	false		100483	1					
ANR	100555	Statement	anal	161:1:4439:4442	100483	9	True				
ANR	100556	Statement	->	161:5:4443:4444	100483	10	True				
ANR	100557	Statement	gp	161:7:4445:4446	100483	11	True				
ANR	100558	Statement	=	161:10:4448:4448	100483	12	True				
ANR	100559	Statement	0L	161:12:4450:4451	100483	13	True				
ANR	100560	ExpressionStatement	L	161:14:4452:4453	100483	14	True				
ANR	100561	Identifier	L		100483	0					
ANR	100562	ExpressionStatement	anal -> sdb = sdb_new0 ( )	162:1:4456:4479	100483	15	True				
ANR	100563	AssignmentExpression	anal -> sdb = sdb_new0 ( )		100483	0		=			
ANR	100564	PtrMemberAccess	anal -> sdb		100483	0					
ANR	100565	Identifier	anal		100483	0					
ANR	100566	Identifier	sdb		100483	1					
ANR	100567	CallExpression	sdb_new0 ( )		100483	1					
ANR	100568	Callee	sdb_new0		100483	0					
ANR	100569	Identifier	sdb_new0		100483	0					
ANR	100570	ArgumentList			100483	1					
ANR	100571	ExpressionStatement	anal -> cpp_abi = R_ANAL_CPP_ABI_ITANIUM	163:1:4482:4520	100483	16	True				
ANR	100572	AssignmentExpression	anal -> cpp_abi = R_ANAL_CPP_ABI_ITANIUM		100483	0		=			
ANR	100573	PtrMemberAccess	anal -> cpp_abi		100483	0					
ANR	100574	Identifier	anal		100483	0					
ANR	100575	Identifier	cpp_abi		100483	1					
ANR	100576	Identifier	R_ANAL_CPP_ABI_ITANIUM		100483	1					
ANR	100577	ExpressionStatement	anal -> opt . depth = 32	164:1:4523:4543	100483	17	True				
ANR	100578	AssignmentExpression	anal -> opt . depth = 32		100483	0		=			
ANR	100579	MemberAccess	anal -> opt . depth		100483	0					
ANR	100580	PtrMemberAccess	anal -> opt		100483	0					
ANR	100581	Identifier	anal		100483	0					
ANR	100582	Identifier	opt		100483	1					
ANR	100583	Identifier	depth		100483	1					
ANR	100584	PrimaryExpression	32		100483	1					
ANR	100585	ExpressionStatement	anal -> opt . noncode = false	165:1:4546:4571	100483	18	True				
ANR	100586	AssignmentExpression	anal -> opt . noncode = false		100483	0		=			
ANR	100587	MemberAccess	anal -> opt . noncode		100483	0					
ANR	100588	PtrMemberAccess	anal -> opt		100483	0					
ANR	100589	Identifier	anal		100483	0					
ANR	100590	Identifier	opt		100483	1					
ANR	100591	Identifier	noncode		100483	1					
ANR	100592	Identifier	false		100483	1					
ANR	100593	ExpressionStatement	"r_spaces_init ( & anal -> meta_spaces , ""CS"" )"	166:1:4608:4648	100483	19	True				
ANR	100594	CallExpression	"r_spaces_init ( & anal -> meta_spaces , ""CS"" )"		100483	0					
ANR	100595	Callee	r_spaces_init		100483	0					
ANR	100596	Identifier	r_spaces_init		100483	0					
ANR	100597	ArgumentList	& anal -> meta_spaces		100483	1					
ANR	100598	Argument	& anal -> meta_spaces		100483	0					
ANR	100599	UnaryOperationExpression	& anal -> meta_spaces		100483	0					
ANR	100600	UnaryOperator	&		100483	0					
ANR	100601	PtrMemberAccess	anal -> meta_spaces		100483	1					
ANR	100602	Identifier	anal		100483	0					
ANR	100603	Identifier	meta_spaces		100483	1					
ANR	100604	Argument	"""CS"""		100483	1					
ANR	100605	PrimaryExpression	"""CS"""		100483	0					
ANR	100606	ExpressionStatement	"r_event_hook ( anal -> meta_spaces . event , R_SPACE_EVENT_UNSET , meta_unset_for , NULL )"	167:1:4651:4732	100483	20	True				
ANR	100607	CallExpression	"r_event_hook ( anal -> meta_spaces . event , R_SPACE_EVENT_UNSET , meta_unset_for , NULL )"		100483	0					
ANR	100608	Callee	r_event_hook		100483	0					
ANR	100609	Identifier	r_event_hook		100483	0					
ANR	100610	ArgumentList	anal -> meta_spaces . event		100483	1					
ANR	100611	Argument	anal -> meta_spaces . event		100483	0					
ANR	100612	MemberAccess	anal -> meta_spaces . event		100483	0					
ANR	100613	PtrMemberAccess	anal -> meta_spaces		100483	0					
ANR	100614	Identifier	anal		100483	0					
ANR	100615	Identifier	meta_spaces		100483	1					
ANR	100616	Identifier	event		100483	1					
ANR	100617	Argument	R_SPACE_EVENT_UNSET		100483	1					
ANR	100618	Identifier	R_SPACE_EVENT_UNSET		100483	0					
ANR	100619	Argument	meta_unset_for		100483	2					
ANR	100620	Identifier	meta_unset_for		100483	0					
ANR	100621	Argument	NULL		100483	3					
ANR	100622	Identifier	NULL		100483	0					
ANR	100623	ExpressionStatement	"r_event_hook ( anal -> meta_spaces . event , R_SPACE_EVENT_COUNT , meta_count_for , NULL )"	168:1:4735:4816	100483	21	True				
ANR	100624	CallExpression	"r_event_hook ( anal -> meta_spaces . event , R_SPACE_EVENT_COUNT , meta_count_for , NULL )"		100483	0					
ANR	100625	Callee	r_event_hook		100483	0					
ANR	100626	Identifier	r_event_hook		100483	0					
ANR	100627	ArgumentList	anal -> meta_spaces . event		100483	1					
ANR	100628	Argument	anal -> meta_spaces . event		100483	0					
ANR	100629	MemberAccess	anal -> meta_spaces . event		100483	0					
ANR	100630	PtrMemberAccess	anal -> meta_spaces		100483	0					
ANR	100631	Identifier	anal		100483	0					
ANR	100632	Identifier	meta_spaces		100483	1					
ANR	100633	Identifier	event		100483	1					
ANR	100634	Argument	R_SPACE_EVENT_COUNT		100483	1					
ANR	100635	Identifier	R_SPACE_EVENT_COUNT		100483	0					
ANR	100636	Argument	meta_count_for		100483	2					
ANR	100637	Identifier	meta_count_for		100483	0					
ANR	100638	Argument	NULL		100483	3					
ANR	100639	Identifier	NULL		100483	0					
ANR	100640	ExpressionStatement	"r_spaces_init ( & anal -> zign_spaces , ""zs"" )"	170:1:4820:4860	100483	22	True				
ANR	100641	CallExpression	"r_spaces_init ( & anal -> zign_spaces , ""zs"" )"		100483	0					
ANR	100642	Callee	r_spaces_init		100483	0					
ANR	100643	Identifier	r_spaces_init		100483	0					
ANR	100644	ArgumentList	& anal -> zign_spaces		100483	1					
ANR	100645	Argument	& anal -> zign_spaces		100483	0					
ANR	100646	UnaryOperationExpression	& anal -> zign_spaces		100483	0					
ANR	100647	UnaryOperator	&		100483	0					
ANR	100648	PtrMemberAccess	anal -> zign_spaces		100483	1					
ANR	100649	Identifier	anal		100483	0					
ANR	100650	Identifier	zign_spaces		100483	1					
ANR	100651	Argument	"""zs"""		100483	1					
ANR	100652	PrimaryExpression	"""zs"""		100483	0					
ANR	100653	ExpressionStatement	"r_event_hook ( anal -> zign_spaces . event , R_SPACE_EVENT_UNSET , zign_unset_for , NULL )"	171:1:4863:4944	100483	23	True				
ANR	100654	CallExpression	"r_event_hook ( anal -> zign_spaces . event , R_SPACE_EVENT_UNSET , zign_unset_for , NULL )"		100483	0					
ANR	100655	Callee	r_event_hook		100483	0					
ANR	100656	Identifier	r_event_hook		100483	0					
ANR	100657	ArgumentList	anal -> zign_spaces . event		100483	1					
ANR	100658	Argument	anal -> zign_spaces . event		100483	0					
ANR	100659	MemberAccess	anal -> zign_spaces . event		100483	0					
ANR	100660	PtrMemberAccess	anal -> zign_spaces		100483	0					
ANR	100661	Identifier	anal		100483	0					
ANR	100662	Identifier	zign_spaces		100483	1					
ANR	100663	Identifier	event		100483	1					
ANR	100664	Argument	R_SPACE_EVENT_UNSET		100483	1					
ANR	100665	Identifier	R_SPACE_EVENT_UNSET		100483	0					
ANR	100666	Argument	zign_unset_for		100483	2					
ANR	100667	Identifier	zign_unset_for		100483	0					
ANR	100668	Argument	NULL		100483	3					
ANR	100669	Identifier	NULL		100483	0					
ANR	100670	ExpressionStatement	"r_event_hook ( anal -> zign_spaces . event , R_SPACE_EVENT_COUNT , zign_count_for , NULL )"	172:1:4947:5028	100483	24	True				
ANR	100671	CallExpression	"r_event_hook ( anal -> zign_spaces . event , R_SPACE_EVENT_COUNT , zign_count_for , NULL )"		100483	0					
ANR	100672	Callee	r_event_hook		100483	0					
ANR	100673	Identifier	r_event_hook		100483	0					
ANR	100674	ArgumentList	anal -> zign_spaces . event		100483	1					
ANR	100675	Argument	anal -> zign_spaces . event		100483	0					
ANR	100676	MemberAccess	anal -> zign_spaces . event		100483	0					
ANR	100677	PtrMemberAccess	anal -> zign_spaces		100483	0					
ANR	100678	Identifier	anal		100483	0					
ANR	100679	Identifier	zign_spaces		100483	1					
ANR	100680	Identifier	event		100483	1					
ANR	100681	Argument	R_SPACE_EVENT_COUNT		100483	1					
ANR	100682	Identifier	R_SPACE_EVENT_COUNT		100483	0					
ANR	100683	Argument	zign_count_for		100483	2					
ANR	100684	Identifier	zign_count_for		100483	0					
ANR	100685	Argument	NULL		100483	3					
ANR	100686	Identifier	NULL		100483	0					
ANR	100687	ExpressionStatement	"r_event_hook ( anal -> zign_spaces . event , R_SPACE_EVENT_RENAME , zign_rename_for , NULL )"	173:1:5031:5114	100483	25	True				
ANR	100688	CallExpression	"r_event_hook ( anal -> zign_spaces . event , R_SPACE_EVENT_RENAME , zign_rename_for , NULL )"		100483	0					
ANR	100689	Callee	r_event_hook		100483	0					
ANR	100690	Identifier	r_event_hook		100483	0					
ANR	100691	ArgumentList	anal -> zign_spaces . event		100483	1					
ANR	100692	Argument	anal -> zign_spaces . event		100483	0					
ANR	100693	MemberAccess	anal -> zign_spaces . event		100483	0					
ANR	100694	PtrMemberAccess	anal -> zign_spaces		100483	0					
ANR	100695	Identifier	anal		100483	0					
ANR	100696	Identifier	zign_spaces		100483	1					
ANR	100697	Identifier	event		100483	1					
ANR	100698	Argument	R_SPACE_EVENT_RENAME		100483	1					
ANR	100699	Identifier	R_SPACE_EVENT_RENAME		100483	0					
ANR	100700	Argument	zign_rename_for		100483	2					
ANR	100701	Identifier	zign_rename_for		100483	0					
ANR	100702	Argument	NULL		100483	3					
ANR	100703	Identifier	NULL		100483	0					
ANR	100704	ExpressionStatement	"anal -> sdb_fcns = sdb_ns ( anal -> sdb , ""fcns"" , 1 )"	174:1:5117:5163	100483	26	True				
ANR	100705	AssignmentExpression	"anal -> sdb_fcns = sdb_ns ( anal -> sdb , ""fcns"" , 1 )"		100483	0		=			
ANR	100706	PtrMemberAccess	anal -> sdb_fcns		100483	0					
ANR	100707	Identifier	anal		100483	0					
ANR	100708	Identifier	sdb_fcns		100483	1					
ANR	100709	CallExpression	"sdb_ns ( anal -> sdb , ""fcns"" , 1 )"		100483	1					
ANR	100710	Callee	sdb_ns		100483	0					
ANR	100711	Identifier	sdb_ns		100483	0					
ANR	100712	ArgumentList	anal -> sdb		100483	1					
ANR	100713	Argument	anal -> sdb		100483	0					
ANR	100714	PtrMemberAccess	anal -> sdb		100483	0					
ANR	100715	Identifier	anal		100483	0					
ANR	100716	Identifier	sdb		100483	1					
ANR	100717	Argument	"""fcns"""		100483	1					
ANR	100718	PrimaryExpression	"""fcns"""		100483	0					
ANR	100719	Argument	1		100483	2					
ANR	100720	PrimaryExpression	1		100483	0					
ANR	100721	ExpressionStatement	"anal -> sdb_meta = sdb_ns ( anal -> sdb , ""meta"" , 1 )"	175:1:5166:5212	100483	27	True				
ANR	100722	AssignmentExpression	"anal -> sdb_meta = sdb_ns ( anal -> sdb , ""meta"" , 1 )"		100483	0		=			
ANR	100723	PtrMemberAccess	anal -> sdb_meta		100483	0					
ANR	100724	Identifier	anal		100483	0					
ANR	100725	Identifier	sdb_meta		100483	1					
ANR	100726	CallExpression	"sdb_ns ( anal -> sdb , ""meta"" , 1 )"		100483	1					
ANR	100727	Callee	sdb_ns		100483	0					
ANR	100728	Identifier	sdb_ns		100483	0					
ANR	100729	ArgumentList	anal -> sdb		100483	1					
ANR	100730	Argument	anal -> sdb		100483	0					
ANR	100731	PtrMemberAccess	anal -> sdb		100483	0					
ANR	100732	Identifier	anal		100483	0					
ANR	100733	Identifier	sdb		100483	1					
ANR	100734	Argument	"""meta"""		100483	1					
ANR	100735	PrimaryExpression	"""meta"""		100483	0					
ANR	100736	Argument	1		100483	2					
ANR	100737	PrimaryExpression	1		100483	0					
ANR	100738	ExpressionStatement	"anal -> sdb_hints = sdb_ns ( anal -> sdb , ""hints"" , 1 )"	176:1:5215:5263	100483	28	True				
ANR	100739	AssignmentExpression	"anal -> sdb_hints = sdb_ns ( anal -> sdb , ""hints"" , 1 )"		100483	0		=			
ANR	100740	PtrMemberAccess	anal -> sdb_hints		100483	0					
ANR	100741	Identifier	anal		100483	0					
ANR	100742	Identifier	sdb_hints		100483	1					
ANR	100743	CallExpression	"sdb_ns ( anal -> sdb , ""hints"" , 1 )"		100483	1					
ANR	100744	Callee	sdb_ns		100483	0					
ANR	100745	Identifier	sdb_ns		100483	0					
ANR	100746	ArgumentList	anal -> sdb		100483	1					
ANR	100747	Argument	anal -> sdb		100483	0					
ANR	100748	PtrMemberAccess	anal -> sdb		100483	0					
ANR	100749	Identifier	anal		100483	0					
ANR	100750	Identifier	sdb		100483	1					
ANR	100751	Argument	"""hints"""		100483	1					
ANR	100752	PrimaryExpression	"""hints"""		100483	0					
ANR	100753	Argument	1		100483	2					
ANR	100754	PrimaryExpression	1		100483	0					
ANR	100755	ExpressionStatement	anal -> hint_cbs . on_bits = __anal_hint_on_bits	177:1:5266:5310	100483	29	True				
ANR	100756	AssignmentExpression	anal -> hint_cbs . on_bits = __anal_hint_on_bits		100483	0		=			
ANR	100757	MemberAccess	anal -> hint_cbs . on_bits		100483	0					
ANR	100758	PtrMemberAccess	anal -> hint_cbs		100483	0					
ANR	100759	Identifier	anal		100483	0					
ANR	100760	Identifier	hint_cbs		100483	1					
ANR	100761	Identifier	on_bits		100483	1					
ANR	100762	Identifier	__anal_hint_on_bits		100483	1					
ANR	100763	ExpressionStatement	"anal -> sdb_types = sdb_ns ( anal -> sdb , ""types"" , 1 )"	178:1:5313:5361	100483	30	True				
ANR	100764	AssignmentExpression	"anal -> sdb_types = sdb_ns ( anal -> sdb , ""types"" , 1 )"		100483	0		=			
ANR	100765	PtrMemberAccess	anal -> sdb_types		100483	0					
ANR	100766	Identifier	anal		100483	0					
ANR	100767	Identifier	sdb_types		100483	1					
ANR	100768	CallExpression	"sdb_ns ( anal -> sdb , ""types"" , 1 )"		100483	1					
ANR	100769	Callee	sdb_ns		100483	0					
ANR	100770	Identifier	sdb_ns		100483	0					
ANR	100771	ArgumentList	anal -> sdb		100483	1					
ANR	100772	Argument	anal -> sdb		100483	0					
ANR	100773	PtrMemberAccess	anal -> sdb		100483	0					
ANR	100774	Identifier	anal		100483	0					
ANR	100775	Identifier	sdb		100483	1					
ANR	100776	Argument	"""types"""		100483	1					
ANR	100777	PrimaryExpression	"""types"""		100483	0					
ANR	100778	Argument	1		100483	2					
ANR	100779	PrimaryExpression	1		100483	0					
ANR	100780	ExpressionStatement	"anal -> sdb_fmts = sdb_ns ( anal -> sdb , ""spec"" , 1 )"	179:1:5364:5410	100483	31	True				
ANR	100781	AssignmentExpression	"anal -> sdb_fmts = sdb_ns ( anal -> sdb , ""spec"" , 1 )"		100483	0		=			
ANR	100782	PtrMemberAccess	anal -> sdb_fmts		100483	0					
ANR	100783	Identifier	anal		100483	0					
ANR	100784	Identifier	sdb_fmts		100483	1					
ANR	100785	CallExpression	"sdb_ns ( anal -> sdb , ""spec"" , 1 )"		100483	1					
ANR	100786	Callee	sdb_ns		100483	0					
ANR	100787	Identifier	sdb_ns		100483	0					
ANR	100788	ArgumentList	anal -> sdb		100483	1					
ANR	100789	Argument	anal -> sdb		100483	0					
ANR	100790	PtrMemberAccess	anal -> sdb		100483	0					
ANR	100791	Identifier	anal		100483	0					
ANR	100792	Identifier	sdb		100483	1					
ANR	100793	Argument	"""spec"""		100483	1					
ANR	100794	PrimaryExpression	"""spec"""		100483	0					
ANR	100795	Argument	1		100483	2					
ANR	100796	PrimaryExpression	1		100483	0					
ANR	100797	ExpressionStatement	"anal -> sdb_cc = sdb_ns ( anal -> sdb , ""cc"" , 1 )"	180:1:5413:5455	100483	32	True				
ANR	100798	AssignmentExpression	"anal -> sdb_cc = sdb_ns ( anal -> sdb , ""cc"" , 1 )"		100483	0		=			
ANR	100799	PtrMemberAccess	anal -> sdb_cc		100483	0					
ANR	100800	Identifier	anal		100483	0					
ANR	100801	Identifier	sdb_cc		100483	1					
ANR	100802	CallExpression	"sdb_ns ( anal -> sdb , ""cc"" , 1 )"		100483	1					
ANR	100803	Callee	sdb_ns		100483	0					
ANR	100804	Identifier	sdb_ns		100483	0					
ANR	100805	ArgumentList	anal -> sdb		100483	1					
ANR	100806	Argument	anal -> sdb		100483	0					
ANR	100807	PtrMemberAccess	anal -> sdb		100483	0					
ANR	100808	Identifier	anal		100483	0					
ANR	100809	Identifier	sdb		100483	1					
ANR	100810	Argument	"""cc"""		100483	1					
ANR	100811	PrimaryExpression	"""cc"""		100483	0					
ANR	100812	Argument	1		100483	2					
ANR	100813	PrimaryExpression	1		100483	0					
ANR	100814	ExpressionStatement	"anal -> sdb_zigns = sdb_ns ( anal -> sdb , ""zigns"" , 1 )"	181:1:5458:5506	100483	33	True				
ANR	100815	AssignmentExpression	"anal -> sdb_zigns = sdb_ns ( anal -> sdb , ""zigns"" , 1 )"		100483	0		=			
ANR	100816	PtrMemberAccess	anal -> sdb_zigns		100483	0					
ANR	100817	Identifier	anal		100483	0					
ANR	100818	Identifier	sdb_zigns		100483	1					
ANR	100819	CallExpression	"sdb_ns ( anal -> sdb , ""zigns"" , 1 )"		100483	1					
ANR	100820	Callee	sdb_ns		100483	0					
ANR	100821	Identifier	sdb_ns		100483	0					
ANR	100822	ArgumentList	anal -> sdb		100483	1					
ANR	100823	Argument	anal -> sdb		100483	0					
ANR	100824	PtrMemberAccess	anal -> sdb		100483	0					
ANR	100825	Identifier	anal		100483	0					
ANR	100826	Identifier	sdb		100483	1					
ANR	100827	Argument	"""zigns"""		100483	1					
ANR	100828	PrimaryExpression	"""zigns"""		100483	0					
ANR	100829	Argument	1		100483	2					
ANR	100830	PrimaryExpression	1		100483	0					
ANR	100831	ExpressionStatement	"anal -> sdb_classes = sdb_ns ( anal -> sdb , ""classes"" , 1 )"	182:1:5509:5561	100483	34	True				
ANR	100832	AssignmentExpression	"anal -> sdb_classes = sdb_ns ( anal -> sdb , ""classes"" , 1 )"		100483	0		=			
ANR	100833	PtrMemberAccess	anal -> sdb_classes		100483	0					
ANR	100834	Identifier	anal		100483	0					
ANR	100835	Identifier	sdb_classes		100483	1					
ANR	100836	CallExpression	"sdb_ns ( anal -> sdb , ""classes"" , 1 )"		100483	1					
ANR	100837	Callee	sdb_ns		100483	0					
ANR	100838	Identifier	sdb_ns		100483	0					
ANR	100839	ArgumentList	anal -> sdb		100483	1					
ANR	100840	Argument	anal -> sdb		100483	0					
ANR	100841	PtrMemberAccess	anal -> sdb		100483	0					
ANR	100842	Identifier	anal		100483	0					
ANR	100843	Identifier	sdb		100483	1					
ANR	100844	Argument	"""classes"""		100483	1					
ANR	100845	PrimaryExpression	"""classes"""		100483	0					
ANR	100846	Argument	1		100483	2					
ANR	100847	PrimaryExpression	1		100483	0					
ANR	100848	ExpressionStatement	"anal -> sdb_classes_attrs = sdb_ns ( anal -> sdb_classes , ""attrs"" , 1 )"	183:1:5564:5628	100483	35	True				
ANR	100849	AssignmentExpression	"anal -> sdb_classes_attrs = sdb_ns ( anal -> sdb_classes , ""attrs"" , 1 )"		100483	0		=			
ANR	100850	PtrMemberAccess	anal -> sdb_classes_attrs		100483	0					
ANR	100851	Identifier	anal		100483	0					
ANR	100852	Identifier	sdb_classes_attrs		100483	1					
ANR	100853	CallExpression	"sdb_ns ( anal -> sdb_classes , ""attrs"" , 1 )"		100483	1					
ANR	100854	Callee	sdb_ns		100483	0					
ANR	100855	Identifier	sdb_ns		100483	0					
ANR	100856	ArgumentList	anal -> sdb_classes		100483	1					
ANR	100857	Argument	anal -> sdb_classes		100483	0					
ANR	100858	PtrMemberAccess	anal -> sdb_classes		100483	0					
ANR	100859	Identifier	anal		100483	0					
ANR	100860	Identifier	sdb_classes		100483	1					
ANR	100861	Argument	"""attrs"""		100483	1					
ANR	100862	PrimaryExpression	"""attrs"""		100483	0					
ANR	100863	Argument	1		100483	2					
ANR	100864	PrimaryExpression	1		100483	0					
ANR	100865	ExpressionStatement	"anal -> zign_path = strdup ( """" )"	184:1:5631:5660	100483	36	True				
ANR	100866	AssignmentExpression	"anal -> zign_path = strdup ( """" )"		100483	0		=			
ANR	100867	PtrMemberAccess	anal -> zign_path		100483	0					
ANR	100868	Identifier	anal		100483	0					
ANR	100869	Identifier	zign_path		100483	1					
ANR	100870	CallExpression	"strdup ( """" )"		100483	1					
ANR	100871	Callee	strdup		100483	0					
ANR	100872	Identifier	strdup		100483	0					
ANR	100873	ArgumentList	""""""		100483	1					
ANR	100874	Argument	""""""		100483	0					
ANR	100875	PrimaryExpression	""""""		100483	0					
ANR	100876	ExpressionStatement	anal -> cb_printf = ( PrintfCallback ) printf	185:1:5663:5704	100483	37	True				
ANR	100877	AssignmentExpression	anal -> cb_printf = ( PrintfCallback ) printf		100483	0		=			
ANR	100878	PtrMemberAccess	anal -> cb_printf		100483	0					
ANR	100879	Identifier	anal		100483	0					
ANR	100880	Identifier	cb_printf		100483	1					
ANR	100881	CastExpression	( PrintfCallback ) printf		100483	1					
ANR	100882	CastTarget	PrintfCallback		100483	0					
ANR	100883	Identifier	printf		100483	1					
ANR	100884	ExpressionStatement	( void ) r_anal_pin_init ( anal )	186:1:5707:5735	100483	38	True				
ANR	100885	CastExpression	( void ) r_anal_pin_init ( anal )		100483	0					
ANR	100886	CastTarget	void		100483	0					
ANR	100887	CallExpression	r_anal_pin_init ( anal )		100483	1					
ANR	100888	Callee	r_anal_pin_init		100483	0					
ANR	100889	Identifier	r_anal_pin_init		100483	0					
ANR	100890	ArgumentList	anal		100483	1					
ANR	100891	Argument	anal		100483	0					
ANR	100892	Identifier	anal		100483	0					
ANR	100893	ExpressionStatement	( void ) r_anal_xrefs_init ( anal )	187:1:5738:5768	100483	39	True				
ANR	100894	CastExpression	( void ) r_anal_xrefs_init ( anal )		100483	0					
ANR	100895	CastTarget	void		100483	0					
ANR	100896	CallExpression	r_anal_xrefs_init ( anal )		100483	1					
ANR	100897	Callee	r_anal_xrefs_init		100483	0					
ANR	100898	Identifier	r_anal_xrefs_init		100483	0					
ANR	100899	ArgumentList	anal		100483	1					
ANR	100900	Argument	anal		100483	0					
ANR	100901	Identifier	anal		100483	0					
ANR	100902	ExpressionStatement	anal -> diff_thbb = R_ANAL_THRESHOLDBB	188:1:5771:5807	100483	40	True				
ANR	100903	AssignmentExpression	anal -> diff_thbb = R_ANAL_THRESHOLDBB		100483	0		=			
ANR	100904	PtrMemberAccess	anal -> diff_thbb		100483	0					
ANR	100905	Identifier	anal		100483	0					
ANR	100906	Identifier	diff_thbb		100483	1					
ANR	100907	Identifier	R_ANAL_THRESHOLDBB		100483	1					
ANR	100908	ExpressionStatement	anal -> diff_thfcn = R_ANAL_THRESHOLDFCN	189:1:5810:5848	100483	41	True				
ANR	100909	AssignmentExpression	anal -> diff_thfcn = R_ANAL_THRESHOLDFCN		100483	0		=			
ANR	100910	PtrMemberAccess	anal -> diff_thfcn		100483	0					
ANR	100911	Identifier	anal		100483	0					
ANR	100912	Identifier	diff_thfcn		100483	1					
ANR	100913	Identifier	R_ANAL_THRESHOLDFCN		100483	1					
ANR	100914	ExpressionStatement	anal -> syscall = r_syscall_new ( )	190:1:5851:5883	100483	42	True				
ANR	100915	AssignmentExpression	anal -> syscall = r_syscall_new ( )		100483	0		=			
ANR	100916	PtrMemberAccess	anal -> syscall		100483	0					
ANR	100917	Identifier	anal		100483	0					
ANR	100918	Identifier	syscall		100483	1					
ANR	100919	CallExpression	r_syscall_new ( )		100483	1					
ANR	100920	Callee	r_syscall_new		100483	0					
ANR	100921	Identifier	r_syscall_new		100483	0					
ANR	100922	ArgumentList			100483	1					
ANR	100923	ExpressionStatement	r_io_bind_init ( anal -> iob )	191:1:5886:5912	100483	43	True				
ANR	100924	CallExpression	r_io_bind_init ( anal -> iob )		100483	0					
ANR	100925	Callee	r_io_bind_init		100483	0					
ANR	100926	Identifier	r_io_bind_init		100483	0					
ANR	100927	ArgumentList	anal -> iob		100483	1					
ANR	100928	Argument	anal -> iob		100483	0					
ANR	100929	PtrMemberAccess	anal -> iob		100483	0					
ANR	100930	Identifier	anal		100483	0					
ANR	100931	Identifier	iob		100483	1					
ANR	100932	ExpressionStatement	r_flag_bind_init ( anal -> flb )	192:1:5915:5943	100483	44	True				
ANR	100933	CallExpression	r_flag_bind_init ( anal -> flb )		100483	0					
ANR	100934	Callee	r_flag_bind_init		100483	0					
ANR	100935	Identifier	r_flag_bind_init		100483	0					
ANR	100936	ArgumentList	anal -> flb		100483	1					
ANR	100937	Argument	anal -> flb		100483	0					
ANR	100938	PtrMemberAccess	anal -> flb		100483	0					
ANR	100939	Identifier	anal		100483	0					
ANR	100940	Identifier	flb		100483	1					
ANR	100941	ExpressionStatement	anal -> reg = r_reg_new ( )	193:1:5946:5970	100483	45	True				
ANR	100942	AssignmentExpression	anal -> reg = r_reg_new ( )		100483	0		=			
ANR	100943	PtrMemberAccess	anal -> reg		100483	0					
ANR	100944	Identifier	anal		100483	0					
ANR	100945	Identifier	reg		100483	1					
ANR	100946	CallExpression	r_reg_new ( )		100483	1					
ANR	100947	Callee	r_reg_new		100483	0					
ANR	100948	Identifier	r_reg_new		100483	0					
ANR	100949	ArgumentList			100483	1					
ANR	100950	ExpressionStatement	anal -> last_disasm_reg = NULL	194:1:5973:6001	100483	46	True				
ANR	100951	AssignmentExpression	anal -> last_disasm_reg = NULL		100483	0		=			
ANR	100952	PtrMemberAccess	anal -> last_disasm_reg		100483	0					
ANR	100953	Identifier	anal		100483	0					
ANR	100954	Identifier	last_disasm_reg		100483	1					
ANR	100955	Identifier	NULL		100483	1					
ANR	100956	ExpressionStatement	anal -> stackptr = 0	195:1:6004:6022	100483	47	True				
ANR	100957	AssignmentExpression	anal -> stackptr = 0		100483	0		=			
ANR	100958	PtrMemberAccess	anal -> stackptr		100483	0					
ANR	100959	Identifier	anal		100483	0					
ANR	100960	Identifier	stackptr		100483	1					
ANR	100961	PrimaryExpression	0		100483	1					
ANR	100962	ExpressionStatement	anal -> rb_hints_ranges = NULL	196:1:6025:6053	100483	48	True				
ANR	100963	AssignmentExpression	anal -> rb_hints_ranges = NULL		100483	0		=			
ANR	100964	PtrMemberAccess	anal -> rb_hints_ranges		100483	0					
ANR	100965	Identifier	anal		100483	0					
ANR	100966	Identifier	rb_hints_ranges		100483	1					
ANR	100967	Identifier	NULL		100483	1					
ANR	100968	ExpressionStatement	anal -> lineswidth = 0	197:1:6056:6076	100483	49	True				
ANR	100969	AssignmentExpression	anal -> lineswidth = 0		100483	0		=			
ANR	100970	PtrMemberAccess	anal -> lineswidth		100483	0					
ANR	100971	Identifier	anal		100483	0					
ANR	100972	Identifier	lineswidth		100483	1					
ANR	100973	PrimaryExpression	0		100483	1					
ANR	100974	ExpressionStatement	anal -> fcns = r_anal_fcn_list_new ( )	198:1:6079:6114	100483	50	True				
ANR	100975	AssignmentExpression	anal -> fcns = r_anal_fcn_list_new ( )		100483	0		=			
ANR	100976	PtrMemberAccess	anal -> fcns		100483	0					
ANR	100977	Identifier	anal		100483	0					
ANR	100978	Identifier	fcns		100483	1					
ANR	100979	CallExpression	r_anal_fcn_list_new ( )		100483	1					
ANR	100980	Callee	r_anal_fcn_list_new		100483	0					
ANR	100981	Identifier	r_anal_fcn_list_new		100483	0					
ANR	100982	ArgumentList			100483	1					
ANR	100983	ExpressionStatement	anal -> fcn_tree = NULL	199:1:6117:6138	100483	51	True				
ANR	100984	AssignmentExpression	anal -> fcn_tree = NULL		100483	0		=			
ANR	100985	PtrMemberAccess	anal -> fcn_tree		100483	0					
ANR	100986	Identifier	anal		100483	0					
ANR	100987	Identifier	fcn_tree		100483	1					
ANR	100988	Identifier	NULL		100483	1					
ANR	100989	ExpressionStatement	anal -> fcn_addr_tree = NULL	200:1:6141:6167	100483	52	True				
ANR	100990	AssignmentExpression	anal -> fcn_addr_tree = NULL		100483	0		=			
ANR	100991	PtrMemberAccess	anal -> fcn_addr_tree		100483	0					
ANR	100992	Identifier	anal		100483	0					
ANR	100993	Identifier	fcn_addr_tree		100483	1					
ANR	100994	Identifier	NULL		100483	1					
ANR	100995	ExpressionStatement	anal -> refs = r_anal_ref_list_new ( )	201:1:6170:6205	100483	53	True				
ANR	100996	AssignmentExpression	anal -> refs = r_anal_ref_list_new ( )		100483	0		=			
ANR	100997	PtrMemberAccess	anal -> refs		100483	0					
ANR	100998	Identifier	anal		100483	0					
ANR	100999	Identifier	refs		100483	1					
ANR	101000	CallExpression	r_anal_ref_list_new ( )		100483	1					
ANR	101001	Callee	r_anal_ref_list_new		100483	0					
ANR	101002	Identifier	r_anal_ref_list_new		100483	0					
ANR	101003	ArgumentList			100483	1					
ANR	101004	ExpressionStatement	"r_anal_set_bits ( anal , 32 )"	202:1:6208:6234	100483	54	True				
ANR	101005	CallExpression	"r_anal_set_bits ( anal , 32 )"		100483	0					
ANR	101006	Callee	r_anal_set_bits		100483	0					
ANR	101007	Identifier	r_anal_set_bits		100483	0					
ANR	101008	ArgumentList	anal		100483	1					
ANR	101009	Argument	anal		100483	0					
ANR	101010	Identifier	anal		100483	0					
ANR	101011	Argument	32		100483	1					
ANR	101012	PrimaryExpression	32		100483	0					
ANR	101013	ExpressionStatement	anal -> plugins = r_list_newf ( ( RListFree ) r_anal_plugin_free )	203:1:6237:6297	100483	55	True				
ANR	101014	AssignmentExpression	anal -> plugins = r_list_newf ( ( RListFree ) r_anal_plugin_free )		100483	0		=			
ANR	101015	PtrMemberAccess	anal -> plugins		100483	0					
ANR	101016	Identifier	anal		100483	0					
ANR	101017	Identifier	plugins		100483	1					
ANR	101018	CallExpression	r_list_newf ( ( RListFree ) r_anal_plugin_free )		100483	1					
ANR	101019	Callee	r_list_newf		100483	0					
ANR	101020	Identifier	r_list_newf		100483	0					
ANR	101021	ArgumentList	( RListFree ) r_anal_plugin_free		100483	1					
ANR	101022	Argument	( RListFree ) r_anal_plugin_free		100483	0					
ANR	101023	CastExpression	( RListFree ) r_anal_plugin_free		100483	0					
ANR	101024	CastTarget	RListFree		100483	0					
ANR	101025	Identifier	r_anal_plugin_free		100483	1					
ANR	101026	IfStatement	if ( anal -> plugins )		100483	56					
ANR	101027	Condition	anal -> plugins	204:5:6304:6316	100483	0	True				
ANR	101028	PtrMemberAccess	anal -> plugins		100483	0					
ANR	101029	Identifier	anal		100483	0					
ANR	101030	Identifier	plugins		100483	1					
ANR	101031	CompoundStatement		56:20:2204:2204	100483	1					
ANR	101032	ForStatement	for ( i = 0 ; anal_static_plugins [ i ] ; i ++ )		100483	0					
ANR	101033	ForInit	i = 0 ;	205:7:6328:6333	100483	0	True				
ANR	101034	AssignmentExpression	i = 0		100483	0		=			
ANR	101035	Identifier	i		100483	0					
ANR	101036	PrimaryExpression	0		100483	1					
ANR	101037	Condition	anal_static_plugins [ i ]	205:14:6335:6356	100483	1	True				
ANR	101038	ArrayIndexing	anal_static_plugins [ i ]		100483	0					
ANR	101039	Identifier	anal_static_plugins		100483	0					
ANR	101040	Identifier	i		100483	1					
ANR	101041	PostIncDecOperationExpression	i ++	205:38:6359:6361	100483	2	True				
ANR	101042	Identifier	i		100483	0					
ANR	101043	IncDec	++		100483	1					
ANR	101044	CompoundStatement		57:43:2249:2249	100483	3					
ANR	101045	ExpressionStatement	"r_anal_add ( anal , anal_static_plugins [ i ] )"	206:3:6369:6410	100483	0	True				
ANR	101046	CallExpression	"r_anal_add ( anal , anal_static_plugins [ i ] )"		100483	0					
ANR	101047	Callee	r_anal_add		100483	0					
ANR	101048	Identifier	r_anal_add		100483	0					
ANR	101049	ArgumentList	anal		100483	1					
ANR	101050	Argument	anal		100483	0					
ANR	101051	Identifier	anal		100483	0					
ANR	101052	Argument	anal_static_plugins [ i ]		100483	1					
ANR	101053	ArrayIndexing	anal_static_plugins [ i ]		100483	0					
ANR	101054	Identifier	anal_static_plugins		100483	0					
ANR	101055	Identifier	i		100483	1					
ANR	101056	ReturnStatement	return anal ;	209:1:6420:6431	100483	57	True				
ANR	101057	Identifier	anal		100483	0					
ANR	101058	ReturnType	R_API RAnal *		100483	1					
ANR	101059	Identifier	r_anal_new		100483	2					
ANR	101060	ParameterList			100483	3					
ANR	101061	CFGEntryNode	ENTRY		100483		True				
ANR	101062	CFGExitNode	EXIT		100483		True				
ANR	101063	Symbol	anal -> zign_spaces . event		100483						
ANR	101064	Symbol	anal -> sdb_meta		100483						
ANR	101065	Symbol	R_ANAL_ESIL_GOTO_LIMIT		100483						
ANR	101066	Symbol	anal -> sdb_fmts		100483						
ANR	101067	Symbol	anal -> reg		100483						
ANR	101068	Symbol	anal -> cb_printf		100483						
ANR	101069	Symbol	anal -> hint_cbs		100483						
ANR	101070	Symbol	& anal -> zign_spaces		100483						
ANR	101071	Symbol	r_syscall_new		100483						
ANR	101072	Symbol	anal -> fcn_addr_tree		100483						
ANR	101073	Symbol	anal_static_plugins		100483						
ANR	101074	Symbol	meta_unset_for		100483						
ANR	101075	Symbol	r_anal_fcn_list_new		100483						
ANR	101076	Symbol	NULL		100483						
ANR	101077	Symbol	anal -> zign_spaces		100483						
ANR	101078	Symbol	r_list_newf		100483						
ANR	101079	Symbol	RAnal		100483						
ANR	101080	Symbol	anal -> stackptr		100483						
ANR	101081	Symbol	zign_rename_for		100483						
ANR	101082	Symbol	R_NEW0		100483						
ANR	101083	Symbol	R_SPACE_EVENT_RENAME		100483						
ANR	101084	Symbol	anal		100483						
ANR	101085	Symbol	anal -> diff_thfcn		100483						
ANR	101086	Symbol	true		100483						
ANR	101087	Symbol	anal -> reflines		100483						
ANR	101088	Symbol	anal -> diff_thbb		100483						
ANR	101089	Symbol	anal -> iob		100483						
ANR	101090	Symbol	anal -> sdb_types		100483						
ANR	101091	Symbol	anal -> sdb_classes		100483						
ANR	101092	Symbol	r_anal_plugin_free		100483						
ANR	101093	Symbol	meta_count_for		100483						
ANR	101094	Symbol	* anal_static_plugins		100483						
ANR	101095	Symbol	zign_unset_for		100483						
ANR	101096	Symbol	anal -> esil_goto_limit		100483						
ANR	101097	Symbol	anal -> opt . noncode		100483						
ANR	101098	Symbol	anal -> os		100483						
ANR	101099	Symbol	R_SPACE_EVENT_UNSET		100483						
ANR	101100	Symbol	R_ANAL_THRESHOLDFCN		100483						
ANR	101101	Symbol	anal -> rb_hints_ranges		100483						
ANR	101102	Symbol	anal -> sdb_fcns		100483						
ANR	101103	Symbol	printf		100483						
ANR	101104	Symbol	anal -> opt . hpskip		100483						
ANR	101105	Symbol	anal -> hint_cbs . on_bits		100483						
ANR	101106	Symbol	anal -> fcn_tree		100483						
ANR	101107	Symbol	* anal		100483						
ANR	101108	Symbol	__anal_hint_on_bits		100483						
ANR	101109	Symbol	anal -> last_disasm_reg		100483						
ANR	101110	Symbol	anal -> limit		100483						
ANR	101111	Symbol	anal -> sdb_classes_attrs		100483						
ANR	101112	Symbol	anal -> cpp_abi		100483						
ANR	101113	Symbol	anal -> flb		100483						
ANR	101114	Symbol	R_SPACE_EVENT_COUNT		100483						
ANR	101115	Symbol	anal -> plugins		100483						
ANR	101116	Symbol	anal -> opt . nopskip		100483						
ANR	101117	Symbol	anal -> sdb_hints		100483						
ANR	101118	Symbol	sdb_new0		100483						
ANR	101119	Symbol	anal -> opt . depth		100483						
ANR	101120	Symbol	anal -> opt		100483						
ANR	101121	Symbol	anal -> sdb		100483						
ANR	101122	Symbol	R_ANAL_CPP_ABI_ITANIUM		100483						
ANR	101123	Symbol	anal -> sdb_cc		100483						
ANR	101124	Symbol	& anal -> meta_spaces		100483						
ANR	101125	Symbol	false		100483						
ANR	101126	Symbol	anal -> meta_spaces . event		100483						
ANR	101127	Symbol	i		100483						
ANR	101128	Symbol	R_ANAL_THRESHOLDBB		100483						
ANR	101129	Symbol	r_reg_new		100483						
ANR	101130	Symbol	anal -> syscall		100483						
ANR	101131	Symbol	anal -> fcns		100483						
ANR	101132	Symbol	anal -> sdb_zigns		100483						
ANR	101133	Symbol	anal -> zign_path		100483						
ANR	101134	Symbol	anal -> refs		100483						
ANR	101135	Symbol	anal -> meta_spaces		100483						
ANR	101136	Symbol	* i		100483						
ANR	101137	Symbol	zign_count_for		100483						
ANR	101138	Symbol	anal -> lineswidth		100483						
ANR	101139	Symbol	strdup		100483						
ANR	101140	Symbol	R_SYS_OS		100483						
ANR	101141	Symbol	r_anal_ref_list_new		100483						
ANR	101142	Symbol	sdb_ns		100483						
ANR	101143	Function	r_anal_plugin_free	213:0:6437:6528							
ANR	101144	FunctionDef	r_anal_plugin_free (RAnalPlugin * p)		101143	0					
ANR	101145	CompoundStatement		213:47:6484:6528	101143	0					
ANR	101146	IfStatement	if ( p && p -> fini )		101143	0					
ANR	101147	Condition	p && p -> fini	214:5:6491:6502	101143	0	True				
ANR	101148	AndExpression	p && p -> fini		101143	0		&&			
ANR	101149	Identifier	p		101143	0					
ANR	101150	PtrMemberAccess	p -> fini		101143	1					
ANR	101151	Identifier	p		101143	0					
ANR	101152	Identifier	fini		101143	1					
ANR	101153	CompoundStatement		2:19:20:20	101143	1					
ANR	101154	ExpressionStatement	p -> fini ( NULL )	215:2:6509:6523	101143	0	True				
ANR	101155	CallExpression	p -> fini ( NULL )		101143	0					
ANR	101156	Callee	p -> fini		101143	0					
ANR	101157	PtrMemberAccess	p -> fini		101143	0					
ANR	101158	Identifier	p		101143	0					
ANR	101159	Identifier	fini		101143	1					
ANR	101160	ArgumentList	NULL		101143	1					
ANR	101161	Argument	NULL		101143	0					
ANR	101162	Identifier	NULL		101143	0					
ANR	101163	ReturnType	R_API void		101143	1					
ANR	101164	Identifier	r_anal_plugin_free		101143	2					
ANR	101165	ParameterList	RAnalPlugin * p		101143	3					
ANR	101166	Parameter	RAnalPlugin * p	213:31:6468:6481	101143	0	True				
ANR	101167	ParameterType	RAnalPlugin *		101143	0					
ANR	101168	Identifier	p		101143	1					
ANR	101169	CFGEntryNode	ENTRY		101143		True				
ANR	101170	CFGExitNode	EXIT		101143		True				
ANR	101171	Symbol	p		101143						
ANR	101172	Symbol	p -> fini		101143						
ANR	101173	Symbol	NULL		101143						
ANR	101174	Symbol	* p		101143						
ANR	101175	Function	r_anal_free	219:0:6531:7247							
ANR	101176	FunctionDef	r_anal_free (RAnal * a)		101175	0					
ANR	101177	CompoundStatement		219:35:6566:7247	101175	0					
ANR	101178	IfStatement	if ( ! a )		101175	0					
ANR	101179	Condition	! a	220:5:6573:6574	101175	0	True				
ANR	101180	UnaryOperationExpression	! a		101175	0					
ANR	101181	UnaryOperator	!		101175	0					
ANR	101182	Identifier	a		101175	1					
ANR	101183	CompoundStatement		2:9:10:10	101175	1					
ANR	101184	ReturnStatement	return NULL ;	221:2:6581:6592	101175	0	True				
ANR	101185	Identifier	NULL		101175	0					
ANR	101186	ExpressionStatement	R_FREE ( a -> cpu )	224:1:6627:6642	101175	1	True				
ANR	101187	CallExpression	R_FREE ( a -> cpu )		101175	0					
ANR	101188	Callee	R_FREE		101175	0					
ANR	101189	Identifier	R_FREE		101175	0					
ANR	101190	ArgumentList	a -> cpu		101175	1					
ANR	101191	Argument	a -> cpu		101175	0					
ANR	101192	PtrMemberAccess	a -> cpu		101175	0					
ANR	101193	Identifier	a		101175	0					
ANR	101194	Identifier	cpu		101175	1					
ANR	101195	ExpressionStatement	R_FREE ( a -> os )	225:1:6645:6659	101175	2	True				
ANR	101196	CallExpression	R_FREE ( a -> os )		101175	0					
ANR	101197	Callee	R_FREE		101175	0					
ANR	101198	Identifier	R_FREE		101175	0					
ANR	101199	ArgumentList	a -> os		101175	1					
ANR	101200	Argument	a -> os		101175	0					
ANR	101201	PtrMemberAccess	a -> os		101175	0					
ANR	101202	Identifier	a		101175	0					
ANR	101203	Identifier	os		101175	1					
ANR	101204	ExpressionStatement	R_FREE ( a -> zign_path )	226:1:6662:6683	101175	3	True				
ANR	101205	CallExpression	R_FREE ( a -> zign_path )		101175	0					
ANR	101206	Callee	R_FREE		101175	0					
ANR	101207	Identifier	R_FREE		101175	0					
ANR	101208	ArgumentList	a -> zign_path		101175	1					
ANR	101209	Argument	a -> zign_path		101175	0					
ANR	101210	PtrMemberAccess	a -> zign_path		101175	0					
ANR	101211	Identifier	a		101175	0					
ANR	101212	Identifier	zign_path		101175	1					
ANR	101213	ExpressionStatement	r_list_free ( a -> plugins )	227:1:6686:6710	101175	4	True				
ANR	101214	CallExpression	r_list_free ( a -> plugins )		101175	0					
ANR	101215	Callee	r_list_free		101175	0					
ANR	101216	Identifier	r_list_free		101175	0					
ANR	101217	ArgumentList	a -> plugins		101175	1					
ANR	101218	Argument	a -> plugins		101175	0					
ANR	101219	PtrMemberAccess	a -> plugins		101175	0					
ANR	101220	Identifier	a		101175	0					
ANR	101221	Identifier	plugins		101175	1					
ANR	101222	ExpressionStatement	a -> fcns -> free = r_anal_fcn_free	228:1:6713:6744	101175	5	True				
ANR	101223	AssignmentExpression	a -> fcns -> free = r_anal_fcn_free		101175	0		=			
ANR	101224	PtrMemberAccess	a -> fcns -> free		101175	0					
ANR	101225	PtrMemberAccess	a -> fcns		101175	0					
ANR	101226	Identifier	a		101175	0					
ANR	101227	Identifier	fcns		101175	1					
ANR	101228	Identifier	free		101175	1					
ANR	101229	Identifier	r_anal_fcn_free		101175	1					
ANR	101230	ExpressionStatement	r_list_free ( a -> fcns )	229:1:6747:6768	101175	6	True				
ANR	101231	CallExpression	r_list_free ( a -> fcns )		101175	0					
ANR	101232	Callee	r_list_free		101175	0					
ANR	101233	Identifier	r_list_free		101175	0					
ANR	101234	ArgumentList	a -> fcns		101175	1					
ANR	101235	Argument	a -> fcns		101175	0					
ANR	101236	PtrMemberAccess	a -> fcns		101175	0					
ANR	101237	Identifier	a		101175	0					
ANR	101238	Identifier	fcns		101175	1					
ANR	101239	ExpressionStatement	r_spaces_fini ( & a -> meta_spaces )	230:1:6771:6802	101175	7	True				
ANR	101240	CallExpression	r_spaces_fini ( & a -> meta_spaces )		101175	0					
ANR	101241	Callee	r_spaces_fini		101175	0					
ANR	101242	Identifier	r_spaces_fini		101175	0					
ANR	101243	ArgumentList	& a -> meta_spaces		101175	1					
ANR	101244	Argument	& a -> meta_spaces		101175	0					
ANR	101245	UnaryOperationExpression	& a -> meta_spaces		101175	0					
ANR	101246	UnaryOperator	&		101175	0					
ANR	101247	PtrMemberAccess	a -> meta_spaces		101175	1					
ANR	101248	Identifier	a		101175	0					
ANR	101249	Identifier	meta_spaces		101175	1					
ANR	101250	ExpressionStatement	r_spaces_fini ( & a -> zign_spaces )	231:1:6805:6836	101175	8	True				
ANR	101251	CallExpression	r_spaces_fini ( & a -> zign_spaces )		101175	0					
ANR	101252	Callee	r_spaces_fini		101175	0					
ANR	101253	Identifier	r_spaces_fini		101175	0					
ANR	101254	ArgumentList	& a -> zign_spaces		101175	1					
ANR	101255	Argument	& a -> zign_spaces		101175	0					
ANR	101256	UnaryOperationExpression	& a -> zign_spaces		101175	0					
ANR	101257	UnaryOperator	&		101175	0					
ANR	101258	PtrMemberAccess	a -> zign_spaces		101175	1					
ANR	101259	Identifier	a		101175	0					
ANR	101260	Identifier	zign_spaces		101175	1					
ANR	101261	ExpressionStatement	r_anal_pin_fini ( a )	232:1:6839:6858	101175	9	True				
ANR	101262	CallExpression	r_anal_pin_fini ( a )		101175	0					
ANR	101263	Callee	r_anal_pin_fini		101175	0					
ANR	101264	Identifier	r_anal_pin_fini		101175	0					
ANR	101265	ArgumentList	a		101175	1					
ANR	101266	Argument	a		101175	0					
ANR	101267	Identifier	a		101175	0					
ANR	101268	ExpressionStatement	r_list_free ( a -> refs )	233:1:6861:6882	101175	10	True				
ANR	101269	CallExpression	r_list_free ( a -> refs )		101175	0					
ANR	101270	Callee	r_list_free		101175	0					
ANR	101271	Identifier	r_list_free		101175	0					
ANR	101272	ArgumentList	a -> refs		101175	1					
ANR	101273	Argument	a -> refs		101175	0					
ANR	101274	PtrMemberAccess	a -> refs		101175	0					
ANR	101275	Identifier	a		101175	0					
ANR	101276	Identifier	refs		101175	1					
ANR	101277	ExpressionStatement	r_syscall_free ( a -> syscall )	234:1:6885:6912	101175	11	True				
ANR	101278	CallExpression	r_syscall_free ( a -> syscall )		101175	0					
ANR	101279	Callee	r_syscall_free		101175	0					
ANR	101280	Identifier	r_syscall_free		101175	0					
ANR	101281	ArgumentList	a -> syscall		101175	1					
ANR	101282	Argument	a -> syscall		101175	0					
ANR	101283	PtrMemberAccess	a -> syscall		101175	0					
ANR	101284	Identifier	a		101175	0					
ANR	101285	Identifier	syscall		101175	1					
ANR	101286	ExpressionStatement	r_reg_free ( a -> reg )	235:1:6915:6934	101175	12	True				
ANR	101287	CallExpression	r_reg_free ( a -> reg )		101175	0					
ANR	101288	Callee	r_reg_free		101175	0					
ANR	101289	Identifier	r_reg_free		101175	0					
ANR	101290	ArgumentList	a -> reg		101175	1					
ANR	101291	Argument	a -> reg		101175	0					
ANR	101292	PtrMemberAccess	a -> reg		101175	0					
ANR	101293	Identifier	a		101175	0					
ANR	101294	Identifier	reg		101175	1					
ANR	101295	ExpressionStatement	r_anal_op_free ( a -> queued )	236:1:6937:6963	101175	13	True				
ANR	101296	CallExpression	r_anal_op_free ( a -> queued )		101175	0					
ANR	101297	Callee	r_anal_op_free		101175	0					
ANR	101298	Identifier	r_anal_op_free		101175	0					
ANR	101299	ArgumentList	a -> queued		101175	1					
ANR	101300	Argument	a -> queued		101175	0					
ANR	101301	PtrMemberAccess	a -> queued		101175	0					
ANR	101302	Identifier	a		101175	0					
ANR	101303	Identifier	queued		101175	1					
ANR	101304	ExpressionStatement	"r_rbtree_free ( a -> rb_hints_ranges , __anal_hint_range_tree_free )"	237:1:6966:7029	101175	14	True				
ANR	101305	CallExpression	"r_rbtree_free ( a -> rb_hints_ranges , __anal_hint_range_tree_free )"		101175	0					
ANR	101306	Callee	r_rbtree_free		101175	0					
ANR	101307	Identifier	r_rbtree_free		101175	0					
ANR	101308	ArgumentList	a -> rb_hints_ranges		101175	1					
ANR	101309	Argument	a -> rb_hints_ranges		101175	0					
ANR	101310	PtrMemberAccess	a -> rb_hints_ranges		101175	0					
ANR	101311	Identifier	a		101175	0					
ANR	101312	Identifier	rb_hints_ranges		101175	1					
ANR	101313	Argument	__anal_hint_range_tree_free		101175	1					
ANR	101314	Identifier	__anal_hint_range_tree_free		101175	0					
ANR	101315	ExpressionStatement	ht_up_free ( a -> dict_refs )	238:1:7032:7057	101175	15	True				
ANR	101316	CallExpression	ht_up_free ( a -> dict_refs )		101175	0					
ANR	101317	Callee	ht_up_free		101175	0					
ANR	101318	Identifier	ht_up_free		101175	0					
ANR	101319	ArgumentList	a -> dict_refs		101175	1					
ANR	101320	Argument	a -> dict_refs		101175	0					
ANR	101321	PtrMemberAccess	a -> dict_refs		101175	0					
ANR	101322	Identifier	a		101175	0					
ANR	101323	Identifier	dict_refs		101175	1					
ANR	101324	ExpressionStatement	ht_up_free ( a -> dict_xrefs )	239:1:7060:7086	101175	16	True				
ANR	101325	CallExpression	ht_up_free ( a -> dict_xrefs )		101175	0					
ANR	101326	Callee	ht_up_free		101175	0					
ANR	101327	Identifier	ht_up_free		101175	0					
ANR	101328	ArgumentList	a -> dict_xrefs		101175	1					
ANR	101329	Argument	a -> dict_xrefs		101175	0					
ANR	101330	PtrMemberAccess	a -> dict_xrefs		101175	0					
ANR	101331	Identifier	a		101175	0					
ANR	101332	Identifier	dict_xrefs		101175	1					
ANR	101333	ExpressionStatement	a -> sdb = NULL	240:1:7089:7102	101175	17	True				
ANR	101334	AssignmentExpression	a -> sdb = NULL		101175	0		=			
ANR	101335	PtrMemberAccess	a -> sdb		101175	0					
ANR	101336	Identifier	a		101175	0					
ANR	101337	Identifier	sdb		101175	1					
ANR	101338	Identifier	NULL		101175	1					
ANR	101339	ExpressionStatement	sdb_ns_free ( a -> sdb )	241:1:7105:7125	101175	18	True				
ANR	101340	CallExpression	sdb_ns_free ( a -> sdb )		101175	0					
ANR	101341	Callee	sdb_ns_free		101175	0					
ANR	101342	Identifier	sdb_ns_free		101175	0					
ANR	101343	ArgumentList	a -> sdb		101175	1					
ANR	101344	Argument	a -> sdb		101175	0					
ANR	101345	PtrMemberAccess	a -> sdb		101175	0					
ANR	101346	Identifier	a		101175	0					
ANR	101347	Identifier	sdb		101175	1					
ANR	101348	IfStatement	if ( a -> esil )		101175	19					
ANR	101349	Condition	a -> esil	242:5:7132:7138	101175	0	True				
ANR	101350	PtrMemberAccess	a -> esil		101175	0					
ANR	101351	Identifier	a		101175	0					
ANR	101352	Identifier	esil		101175	1					
ANR	101353	CompoundStatement		24:14:574:574	101175	1					
ANR	101354	ExpressionStatement	r_anal_esil_free ( a -> esil )	243:2:7145:7171	101175	0	True				
ANR	101355	CallExpression	r_anal_esil_free ( a -> esil )		101175	0					
ANR	101356	Callee	r_anal_esil_free		101175	0					
ANR	101357	Identifier	r_anal_esil_free		101175	0					
ANR	101358	ArgumentList	a -> esil		101175	1					
ANR	101359	Argument	a -> esil		101175	0					
ANR	101360	PtrMemberAccess	a -> esil		101175	0					
ANR	101361	Identifier	a		101175	0					
ANR	101362	Identifier	esil		101175	1					
ANR	101363	ExpressionStatement	a -> esil = NULL	244:2:7175:7189	101175	1	True				
ANR	101364	AssignmentExpression	a -> esil = NULL		101175	0		=			
ANR	101365	PtrMemberAccess	a -> esil		101175	0					
ANR	101366	Identifier	a		101175	0					
ANR	101367	Identifier	esil		101175	1					
ANR	101368	Identifier	NULL		101175	1					
ANR	101369	ExpressionStatement	free ( a -> last_disasm_reg )	246:1:7195:7220	101175	20	True				
ANR	101370	CallExpression	free ( a -> last_disasm_reg )		101175	0					
ANR	101371	Callee	free		101175	0					
ANR	101372	Identifier	free		101175	0					
ANR	101373	ArgumentList	a -> last_disasm_reg		101175	1					
ANR	101374	Argument	a -> last_disasm_reg		101175	0					
ANR	101375	PtrMemberAccess	a -> last_disasm_reg		101175	0					
ANR	101376	Identifier	a		101175	0					
ANR	101377	Identifier	last_disasm_reg		101175	1					
ANR	101378	ExpressionStatement	free ( a )	247:1:7223:7231	101175	21	True				
ANR	101379	CallExpression	free ( a )		101175	0					
ANR	101380	Callee	free		101175	0					
ANR	101381	Identifier	free		101175	0					
ANR	101382	ArgumentList	a		101175	1					
ANR	101383	Argument	a		101175	0					
ANR	101384	Identifier	a		101175	0					
ANR	101385	ReturnStatement	return NULL ;	248:1:7234:7245	101175	22	True				
ANR	101386	Identifier	NULL		101175	0					
ANR	101387	ReturnType	R_API RAnal *		101175	1					
ANR	101388	Identifier	r_anal_free		101175	2					
ANR	101389	ParameterList	RAnal * a		101175	3					
ANR	101390	Parameter	RAnal * a	219:25:6556:6563	101175	0	True				
ANR	101391	ParameterType	RAnal *		101175	0					
ANR	101392	Identifier	a		101175	1					
ANR	101393	CFGEntryNode	ENTRY		101175		True				
ANR	101394	CFGExitNode	EXIT		101175		True				
ANR	101395	Symbol	a -> refs		101175						
ANR	101396	Symbol	a -> cpu		101175						
ANR	101397	Symbol	a -> fcns -> free		101175						
ANR	101398	Symbol	& a -> zign_spaces		101175						
ANR	101399	Symbol	a -> fcns		101175						
ANR	101400	Symbol	a -> reg		101175						
ANR	101401	Symbol	a -> os		101175						
ANR	101402	Symbol	a -> rb_hints_ranges		101175						
ANR	101403	Symbol	a		101175						
ANR	101404	Symbol	* a -> fcns		101175						
ANR	101405	Symbol	a -> queued		101175						
ANR	101406	Symbol	NULL		101175						
ANR	101407	Symbol	__anal_hint_range_tree_free		101175						
ANR	101408	Symbol	& a -> meta_spaces		101175						
ANR	101409	Symbol	a -> dict_xrefs		101175						
ANR	101410	Symbol	a -> zign_path		101175						
ANR	101411	Symbol	* * a		101175						
ANR	101412	Symbol	a -> syscall		101175						
ANR	101413	Symbol	a -> esil		101175						
ANR	101414	Symbol	* a		101175						
ANR	101415	Symbol	a -> dict_refs		101175						
ANR	101416	Symbol	r_anal_fcn_free		101175						
ANR	101417	Symbol	a -> sdb		101175						
ANR	101418	Symbol	a -> plugins		101175						
ANR	101419	Symbol	a -> last_disasm_reg		101175						
ANR	101420	Function	r_anal_set_user_ptr	251:0:7250:7328							
ANR	101421	FunctionDef	"r_anal_set_user_ptr (RAnal * anal , void * user)"		101420	0					
ANR	101422	CompoundStatement		251:56:7306:7328	101420	0					
ANR	101423	ExpressionStatement	anal -> user = user	252:1:7309:7326	101420	0	True				
ANR	101424	AssignmentExpression	anal -> user = user		101420	0		=			
ANR	101425	PtrMemberAccess	anal -> user		101420	0					
ANR	101426	Identifier	anal		101420	0					
ANR	101427	Identifier	user		101420	1					
ANR	101428	Identifier	user		101420	1					
ANR	101429	ReturnType	R_API void		101420	1					
ANR	101430	Identifier	r_anal_set_user_ptr		101420	2					
ANR	101431	ParameterList	"RAnal * anal , void * user"		101420	3					
ANR	101432	Parameter	RAnal * anal	251:31:7281:7291	101420	0	True				
ANR	101433	ParameterType	RAnal *		101420	0					
ANR	101434	Identifier	anal		101420	1					
ANR	101435	Parameter	void * user	251:44:7294:7303	101420	1	True				
ANR	101436	ParameterType	void *		101420	0					
ANR	101437	Identifier	user		101420	1					
ANR	101438	CFGEntryNode	ENTRY		101420		True				
ANR	101439	CFGExitNode	EXIT		101420		True				
ANR	101440	Symbol	* anal		101420						
ANR	101441	Symbol	anal		101420						
ANR	101442	Symbol	anal -> user		101420						
ANR	101443	Symbol	user		101420						
ANR	101444	Function	r_anal_add	255:0:7331:7483							
ANR	101445	FunctionDef	"r_anal_add (RAnal * anal , RAnalPlugin * foo)"		101444	0					
ANR	101446	CompoundStatement		255:52:7383:7483	101444	0					
ANR	101447	IfStatement	if ( foo -> init )		101444	0					
ANR	101448	Condition	foo -> init	256:5:7390:7398	101444	0	True				
ANR	101449	PtrMemberAccess	foo -> init		101444	0					
ANR	101450	Identifier	foo		101444	0					
ANR	101451	Identifier	init		101444	1					
ANR	101452	CompoundStatement		2:16:17:17	101444	1					
ANR	101453	ExpressionStatement	foo -> init ( anal -> user )	257:2:7405:7427	101444	0	True				
ANR	101454	CallExpression	foo -> init ( anal -> user )		101444	0					
ANR	101455	Callee	foo -> init		101444	0					
ANR	101456	PtrMemberAccess	foo -> init		101444	0					
ANR	101457	Identifier	foo		101444	0					
ANR	101458	Identifier	init		101444	1					
ANR	101459	ArgumentList	anal -> user		101444	1					
ANR	101460	Argument	anal -> user		101444	0					
ANR	101461	PtrMemberAccess	anal -> user		101444	0					
ANR	101462	Identifier	anal		101444	0					
ANR	101463	Identifier	user		101444	1					
ANR	101464	ExpressionStatement	"r_list_append ( anal -> plugins , foo )"	259:1:7433:7467	101444	1	True				
ANR	101465	CallExpression	"r_list_append ( anal -> plugins , foo )"		101444	0					
ANR	101466	Callee	r_list_append		101444	0					
ANR	101467	Identifier	r_list_append		101444	0					
ANR	101468	ArgumentList	anal -> plugins		101444	1					
ANR	101469	Argument	anal -> plugins		101444	0					
ANR	101470	PtrMemberAccess	anal -> plugins		101444	0					
ANR	101471	Identifier	anal		101444	0					
ANR	101472	Identifier	plugins		101444	1					
ANR	101473	Argument	foo		101444	1					
ANR	101474	Identifier	foo		101444	0					
ANR	101475	ReturnStatement	return true ;	260:1:7470:7481	101444	2	True				
ANR	101476	Identifier	true		101444	0					
ANR	101477	ReturnType	R_API int		101444	1					
ANR	101478	Identifier	r_anal_add		101444	2					
ANR	101479	ParameterList	"RAnal * anal , RAnalPlugin * foo"		101444	3					
ANR	101480	Parameter	RAnal * anal	255:21:7352:7362	101444	0	True				
ANR	101481	ParameterType	RAnal *		101444	0					
ANR	101482	Identifier	anal		101444	1					
ANR	101483	Parameter	RAnalPlugin * foo	255:34:7365:7380	101444	1	True				
ANR	101484	ParameterType	RAnalPlugin *		101444	0					
ANR	101485	Identifier	foo		101444	1					
ANR	101486	CFGEntryNode	ENTRY		101444		True				
ANR	101487	CFGExitNode	EXIT		101444		True				
ANR	101488	Symbol	* anal		101444						
ANR	101489	Symbol	anal		101444						
ANR	101490	Symbol	foo		101444						
ANR	101491	Symbol	foo -> init		101444						
ANR	101492	Symbol	true		101444						
ANR	101493	Symbol	anal -> user		101444						
ANR	101494	Symbol	anal -> plugins		101444						
ANR	101495	Symbol	* foo		101444						
ANR	101496	Function	r_anal_use	263:0:7486:8021							
ANR	101497	FunctionDef	"r_anal_use (RAnal * anal , const char * name)"		101496	0					
ANR	101498	CompoundStatement		263:53:7539:8021	101496	0					
ANR	101499	IdentifierDeclStatement	RListIter * it ;	264:1:7542:7555	101496	0	True				
ANR	101500	IdentifierDecl	* it		101496	0					
ANR	101501	IdentifierDeclType	RListIter *		101496	0					
ANR	101502	Identifier	it		101496	1					
ANR	101503	IdentifierDeclStatement	RAnalPlugin * h ;	265:1:7558:7572	101496	1	True				
ANR	101504	IdentifierDecl	* h		101496	0					
ANR	101505	IdentifierDeclType	RAnalPlugin *		101496	0					
ANR	101506	Identifier	h		101496	1					
ANR	101507	IfStatement	if ( anal )		101496	2					
ANR	101508	Condition	anal	267:5:7580:7583	101496	0	True				
ANR	101509	Identifier	anal		101496	0					
ANR	101510	CompoundStatement		6:2:50:107	101496	1					
ANR	101511	IdentifierDeclStatement	"bool change = anal -> cur && strcmp ( anal -> cur -> name , name ) ;"	268:2:7590:7647	101496	0	True				
ANR	101512	IdentifierDecl	"change = anal -> cur && strcmp ( anal -> cur -> name , name )"		101496	0					
ANR	101513	IdentifierDeclType	bool		101496	0					
ANR	101514	Identifier	change		101496	1					
ANR	101515	AssignmentExpression	"change = anal -> cur && strcmp ( anal -> cur -> name , name )"		101496	2		=			
ANR	101516	Identifier	change		101496	0					
ANR	101517	AndExpression	"anal -> cur && strcmp ( anal -> cur -> name , name )"		101496	1		&&			
ANR	101518	PtrMemberAccess	anal -> cur		101496	0					
ANR	101519	Identifier	anal		101496	0					
ANR	101520	Identifier	cur		101496	1					
ANR	101521	CallExpression	"strcmp ( anal -> cur -> name , name )"		101496	1					
ANR	101522	Callee	strcmp		101496	0					
ANR	101523	Identifier	strcmp		101496	0					
ANR	101524	ArgumentList	anal -> cur -> name		101496	1					
ANR	101525	Argument	anal -> cur -> name		101496	0					
ANR	101526	PtrMemberAccess	anal -> cur -> name		101496	0					
ANR	101527	PtrMemberAccess	anal -> cur		101496	0					
ANR	101528	Identifier	anal		101496	0					
ANR	101529	Identifier	cur		101496	1					
ANR	101530	Identifier	name		101496	1					
ANR	101531	Argument	name		101496	1					
ANR	101532	Identifier	name		101496	0					
ANR	101533	Statement	r_list_foreach	269:2:7651:7664	101496	1	True				
ANR	101534	Statement	(	269:17:7666:7666	101496	2	True				
ANR	101535	Statement	anal	269:18:7667:7670	101496	3	True				
ANR	101536	Statement	->	269:22:7671:7672	101496	4	True				
ANR	101537	Statement	plugins	269:24:7673:7679	101496	5	True				
ANR	101538	Statement	","	269:31:7680:7680	101496	6	True				
ANR	101539	Statement	it	269:33:7682:7683	101496	7	True				
ANR	101540	Statement	","	269:35:7684:7684	101496	8	True				
ANR	101541	Statement	h	269:37:7686:7686	101496	9	True				
ANR	101542	Statement	)	269:38:7687:7687	101496	10	True				
ANR	101543	CompoundStatement		7:40:149:149	101496	11					
ANR	101544	IfStatement	"if ( ! h -> name || strcmp ( h -> name , name ) )"		101496	0					
ANR	101545	Condition	"! h -> name || strcmp ( h -> name , name )"	270:7:7698:7731	101496	0	True				
ANR	101546	OrExpression	"! h -> name || strcmp ( h -> name , name )"		101496	0		||			
ANR	101547	UnaryOperationExpression	! h -> name		101496	0					
ANR	101548	UnaryOperator	!		101496	0					
ANR	101549	PtrMemberAccess	h -> name		101496	1					
ANR	101550	Identifier	h		101496	0					
ANR	101551	Identifier	name		101496	1					
ANR	101552	CallExpression	"strcmp ( h -> name , name )"		101496	1					
ANR	101553	Callee	strcmp		101496	0					
ANR	101554	Identifier	strcmp		101496	0					
ANR	101555	ArgumentList	h -> name		101496	1					
ANR	101556	Argument	h -> name		101496	0					
ANR	101557	PtrMemberAccess	h -> name		101496	0					
ANR	101558	Identifier	h		101496	0					
ANR	101559	Identifier	name		101496	1					
ANR	101560	Argument	name		101496	1					
ANR	101561	Identifier	name		101496	0					
ANR	101562	CompoundStatement		8:43:194:194	101496	1					
ANR	101563	ContinueStatement	continue ;	271:4:7740:7748	101496	0	True				
ANR	101564	IfStatement	if ( anal -> cur && anal -> cur == h )		101496	1					
ANR	101565	Condition	anal -> cur && anal -> cur == h	275:7:7812:7838	101496	0	True				
ANR	101566	AndExpression	anal -> cur && anal -> cur == h		101496	0		&&			
ANR	101567	PtrMemberAccess	anal -> cur		101496	0					
ANR	101568	Identifier	anal		101496	0					
ANR	101569	Identifier	cur		101496	1					
ANR	101570	EqualityExpression	anal -> cur == h		101496	1		==			
ANR	101571	PtrMemberAccess	anal -> cur		101496	0					
ANR	101572	Identifier	anal		101496	0					
ANR	101573	Identifier	cur		101496	1					
ANR	101574	Identifier	h		101496	1					
ANR	101575	CompoundStatement		13:36:301:301	101496	1					
ANR	101576	ReturnStatement	return true ;	276:4:7847:7858	101496	0	True				
ANR	101577	Identifier	true		101496	0					
ANR	101578	ExpressionStatement	anal -> cur = h	279:3:7875:7888	101496	2	True				
ANR	101579	AssignmentExpression	anal -> cur = h		101496	0		=			
ANR	101580	PtrMemberAccess	anal -> cur		101496	0					
ANR	101581	Identifier	anal		101496	0					
ANR	101582	Identifier	cur		101496	1					
ANR	101583	Identifier	h		101496	1					
ANR	101584	ExpressionStatement	r_anal_set_reg_profile ( anal )	280:3:7893:7922	101496	3	True				
ANR	101585	CallExpression	r_anal_set_reg_profile ( anal )		101496	0					
ANR	101586	Callee	r_anal_set_reg_profile		101496	0					
ANR	101587	Identifier	r_anal_set_reg_profile		101496	0					
ANR	101588	ArgumentList	anal		101496	1					
ANR	101589	Argument	anal		101496	0					
ANR	101590	Identifier	anal		101496	0					
ANR	101591	IfStatement	if ( change )		101496	4					
ANR	101592	Condition	change	281:7:7931:7936	101496	0	True				
ANR	101593	Identifier	change		101496	0					
ANR	101594	CompoundStatement		19:15:399:399	101496	1					
ANR	101595	ExpressionStatement	"r_anal_set_fcnsign ( anal , NULL )"	282:4:7945:7976	101496	0	True				
ANR	101596	CallExpression	"r_anal_set_fcnsign ( anal , NULL )"		101496	0					
ANR	101597	Callee	r_anal_set_fcnsign		101496	0					
ANR	101598	Identifier	r_anal_set_fcnsign		101496	0					
ANR	101599	ArgumentList	anal		101496	1					
ANR	101600	Argument	anal		101496	0					
ANR	101601	Identifier	anal		101496	0					
ANR	101602	Argument	NULL		101496	1					
ANR	101603	Identifier	NULL		101496	0					
ANR	101604	ReturnStatement	return true ;	284:3:7986:7997	101496	5	True				
ANR	101605	Identifier	true		101496	0					
ANR	101606	ReturnStatement	return false ;	287:1:8007:8019	101496	3	True				
ANR	101607	Identifier	false		101496	0					
ANR	101608	ReturnType	R_API bool		101496	1					
ANR	101609	Identifier	r_anal_use		101496	2					
ANR	101610	ParameterList	"RAnal * anal , const char * name"		101496	3					
ANR	101611	Parameter	RAnal * anal	263:22:7508:7518	101496	0	True				
ANR	101612	ParameterType	RAnal *		101496	0					
ANR	101613	Identifier	anal		101496	1					
ANR	101614	Parameter	const char * name	263:35:7521:7536	101496	1	True				
ANR	101615	ParameterType	const char *		101496	0					
ANR	101616	Identifier	name		101496	1					
ANR	101617	CFGEntryNode	ENTRY		101496		True				
ANR	101618	CFGExitNode	EXIT		101496		True				
ANR	101619	CFGErrorNode	ERROR		101496		True				
ANR	101620	Symbol	strcmp		101496						
ANR	101621	Symbol	* anal -> cur		101496						
ANR	101622	Symbol	NULL		101496						
ANR	101623	Symbol	change		101496						
ANR	101624	Symbol	h		101496						
ANR	101625	Symbol	anal -> cur -> name		101496						
ANR	101626	Symbol	false		101496						
ANR	101627	Symbol	it		101496						
ANR	101628	Symbol	h -> name		101496						
ANR	101629	Symbol	* * anal		101496						
ANR	101630	Symbol	* anal		101496						
ANR	101631	Symbol	* h		101496						
ANR	101632	Symbol	anal		101496						
ANR	101633	Symbol	anal -> cur		101496						
ANR	101634	Symbol	name		101496						
ANR	101635	Symbol	true		101496						
ANR	101636	Function	r_anal_get_reg_profile	290:0:8024:8178							
ANR	101637	FunctionDef	r_anal_get_reg_profile (RAnal * anal)		101636	0					
ANR	101638	CompoundStatement		290:48:8072:8178	101636	0					
ANR	101639	ReturnStatement	return ( anal && anal -> cur && anal -> cur -> get_reg_profile ) ? anal -> cur -> get_reg_profile ( anal ) : NULL ;	291:1:8075:8176	101636	0	True				
ANR	101640	ConditionalExpression	( anal && anal -> cur && anal -> cur -> get_reg_profile ) ? anal -> cur -> get_reg_profile ( anal ) : NULL		101636	0					
ANR	101641	Condition	anal && anal -> cur && anal -> cur -> get_reg_profile		101636	0					
ANR	101642	AndExpression	anal && anal -> cur && anal -> cur -> get_reg_profile		101636	0		&&			
ANR	101643	Identifier	anal		101636	0					
ANR	101644	AndExpression	anal -> cur && anal -> cur -> get_reg_profile		101636	1		&&			
ANR	101645	PtrMemberAccess	anal -> cur		101636	0					
ANR	101646	Identifier	anal		101636	0					
ANR	101647	Identifier	cur		101636	1					
ANR	101648	PtrMemberAccess	anal -> cur -> get_reg_profile		101636	1					
ANR	101649	PtrMemberAccess	anal -> cur		101636	0					
ANR	101650	Identifier	anal		101636	0					
ANR	101651	Identifier	cur		101636	1					
ANR	101652	Identifier	get_reg_profile		101636	1					
ANR	101653	CallExpression	anal -> cur -> get_reg_profile ( anal )		101636	1					
ANR	101654	Callee	anal -> cur -> get_reg_profile		101636	0					
ANR	101655	PtrMemberAccess	anal -> cur -> get_reg_profile		101636	0					
ANR	101656	PtrMemberAccess	anal -> cur		101636	0					
ANR	101657	Identifier	anal		101636	0					
ANR	101658	Identifier	cur		101636	1					
ANR	101659	Identifier	get_reg_profile		101636	1					
ANR	101660	ArgumentList	anal		101636	1					
ANR	101661	Argument	anal		101636	0					
ANR	101662	Identifier	anal		101636	0					
ANR	101663	Identifier	NULL		101636	2					
ANR	101664	ReturnType	R_API char *		101636	1					
ANR	101665	Identifier	r_anal_get_reg_profile		101636	2					
ANR	101666	ParameterList	RAnal * anal		101636	3					
ANR	101667	Parameter	RAnal * anal	290:35:8059:8069	101636	0	True				
ANR	101668	ParameterType	RAnal *		101636	0					
ANR	101669	Identifier	anal		101636	1					
ANR	101670	CFGEntryNode	ENTRY		101636		True				
ANR	101671	CFGExitNode	EXIT		101636		True				
ANR	101672	Symbol	* * anal		101636						
ANR	101673	Symbol	* anal -> cur		101636						
ANR	101674	Symbol	* anal		101636						
ANR	101675	Symbol	NULL		101636						
ANR	101676	Symbol	anal		101636						
ANR	101677	Symbol	anal -> cur		101636						
ANR	101678	Symbol	anal -> cur -> get_reg_profile		101636						
ANR	101679	Function	r_anal_set_reg_profile	296:0:8233:8561							
ANR	101680	FunctionDef	r_anal_set_reg_profile (RAnal * anal)		101679	0					
ANR	101681	CompoundStatement		296:47:8280:8561	101679	0					
ANR	101682	IdentifierDeclStatement	bool ret = false ;	297:1:8283:8299	101679	0	True				
ANR	101683	IdentifierDecl	ret = false		101679	0					
ANR	101684	IdentifierDeclType	bool		101679	0					
ANR	101685	Identifier	ret		101679	1					
ANR	101686	AssignmentExpression	ret = false		101679	2		=			
ANR	101687	Identifier	false		101679	0					
ANR	101688	Identifier	false		101679	1					
ANR	101689	IfStatement	if ( anal && anal -> cur && anal -> cur -> set_reg_profile )		101679	1					
ANR	101690	Condition	anal && anal -> cur && anal -> cur -> set_reg_profile	298:5:8306:8352	101679	0	True				
ANR	101691	AndExpression	anal && anal -> cur && anal -> cur -> set_reg_profile		101679	0		&&			
ANR	101692	Identifier	anal		101679	0					
ANR	101693	AndExpression	anal -> cur && anal -> cur -> set_reg_profile		101679	1		&&			
ANR	101694	PtrMemberAccess	anal -> cur		101679	0					
ANR	101695	Identifier	anal		101679	0					
ANR	101696	Identifier	cur		101679	1					
ANR	101697	PtrMemberAccess	anal -> cur -> set_reg_profile		101679	1					
ANR	101698	PtrMemberAccess	anal -> cur		101679	0					
ANR	101699	Identifier	anal		101679	0					
ANR	101700	Identifier	cur		101679	1					
ANR	101701	Identifier	set_reg_profile		101679	1					
ANR	101702	CompoundStatement		3:54:74:74	101679	1					
ANR	101703	ExpressionStatement	ret = anal -> cur -> set_reg_profile ( anal )	299:2:8359:8398	101679	0	True				
ANR	101704	AssignmentExpression	ret = anal -> cur -> set_reg_profile ( anal )		101679	0		=			
ANR	101705	Identifier	ret		101679	0					
ANR	101706	CallExpression	anal -> cur -> set_reg_profile ( anal )		101679	1					
ANR	101707	Callee	anal -> cur -> set_reg_profile		101679	0					
ANR	101708	PtrMemberAccess	anal -> cur -> set_reg_profile		101679	0					
ANR	101709	PtrMemberAccess	anal -> cur		101679	0					
ANR	101710	Identifier	anal		101679	0					
ANR	101711	Identifier	cur		101679	1					
ANR	101712	Identifier	set_reg_profile		101679	1					
ANR	101713	ArgumentList	anal		101679	1					
ANR	101714	Argument	anal		101679	0					
ANR	101715	Identifier	anal		101679	0					
ANR	101716	ElseStatement	else		101679	0					
ANR	101717	CompoundStatement		6:2:131:170	101679	0					
ANR	101718	IdentifierDeclStatement	char * p = r_anal_get_reg_profile ( anal ) ;	301:2:8412:8451	101679	0	True				
ANR	101719	IdentifierDecl	* p = r_anal_get_reg_profile ( anal )		101679	0					
ANR	101720	IdentifierDeclType	char *		101679	0					
ANR	101721	Identifier	p		101679	1					
ANR	101722	AssignmentExpression	* p = r_anal_get_reg_profile ( anal )		101679	2		=			
ANR	101723	Identifier	p		101679	0					
ANR	101724	CallExpression	r_anal_get_reg_profile ( anal )		101679	1					
ANR	101725	Callee	r_anal_get_reg_profile		101679	0					
ANR	101726	Identifier	r_anal_get_reg_profile		101679	0					
ANR	101727	ArgumentList	anal		101679	1					
ANR	101728	Argument	anal		101679	0					
ANR	101729	Identifier	anal		101679	0					
ANR	101730	IfStatement	if ( p && * p )		101679	1					
ANR	101731	Condition	p && * p	302:6:8459:8465	101679	0	True				
ANR	101732	AndExpression	p && * p		101679	0		&&			
ANR	101733	Identifier	p		101679	0					
ANR	101734	UnaryOperationExpression	* p		101679	1					
ANR	101735	UnaryOperator	*		101679	0					
ANR	101736	Identifier	p		101679	1					
ANR	101737	CompoundStatement		7:15:187:187	101679	1					
ANR	101738	ExpressionStatement	"r_reg_set_profile_string ( anal -> reg , p )"	303:3:8473:8512	101679	0	True				
ANR	101739	CallExpression	"r_reg_set_profile_string ( anal -> reg , p )"		101679	0					
ANR	101740	Callee	r_reg_set_profile_string		101679	0					
ANR	101741	Identifier	r_reg_set_profile_string		101679	0					
ANR	101742	ArgumentList	anal -> reg		101679	1					
ANR	101743	Argument	anal -> reg		101679	0					
ANR	101744	PtrMemberAccess	anal -> reg		101679	0					
ANR	101745	Identifier	anal		101679	0					
ANR	101746	Identifier	reg		101679	1					
ANR	101747	Argument	p		101679	1					
ANR	101748	Identifier	p		101679	0					
ANR	101749	ExpressionStatement	ret = true	304:3:8517:8527	101679	1	True				
ANR	101750	AssignmentExpression	ret = true		101679	0		=			
ANR	101751	Identifier	ret		101679	0					
ANR	101752	Identifier	true		101679	1					
ANR	101753	ExpressionStatement	free ( p )	306:2:8535:8543	101679	2	True				
ANR	101754	CallExpression	free ( p )		101679	0					
ANR	101755	Callee	free		101679	0					
ANR	101756	Identifier	free		101679	0					
ANR	101757	ArgumentList	p		101679	1					
ANR	101758	Argument	p		101679	0					
ANR	101759	Identifier	p		101679	0					
ANR	101760	ReturnStatement	return ret ;	308:1:8549:8559	101679	2	True				
ANR	101761	Identifier	ret		101679	0					
ANR	101762	ReturnType	R_API bool		101679	1					
ANR	101763	Identifier	r_anal_set_reg_profile		101679	2					
ANR	101764	ParameterList	RAnal * anal		101679	3					
ANR	101765	Parameter	RAnal * anal	296:34:8267:8277	101679	0	True				
ANR	101766	ParameterType	RAnal *		101679	0					
ANR	101767	Identifier	anal		101679	1					
ANR	101768	CFGEntryNode	ENTRY		101679		True				
ANR	101769	CFGExitNode	EXIT		101679		True				
ANR	101770	Symbol	ret		101679						
ANR	101771	Symbol	anal -> cur -> set_reg_profile		101679						
ANR	101772	Symbol	* anal -> cur		101679						
ANR	101773	Symbol	anal -> reg		101679						
ANR	101774	Symbol	false		101679						
ANR	101775	Symbol	r_anal_get_reg_profile		101679						
ANR	101776	Symbol	p		101679						
ANR	101777	Symbol	* * anal		101679						
ANR	101778	Symbol	* anal		101679						
ANR	101779	Symbol	anal		101679						
ANR	101780	Symbol	anal -> cur		101679						
ANR	101781	Symbol	true		101679						
ANR	101782	Symbol	* p		101679						
ANR	101783	Function	r_anal_set_fcnsign	311:0:8564:9232							
ANR	101784	FunctionDef	"r_anal_set_fcnsign (RAnal * anal , const char * name)"		101783	0					
ANR	101785	CompoundStatement		311:61:8625:9232	101783	0					
ANR	101786	IdentifierDeclStatement	const char * dirPrefix = r_sys_prefix ( NULL ) ;	312:1:8628:8671	101783	0	True				
ANR	101787	IdentifierDecl	* dirPrefix = r_sys_prefix ( NULL )		101783	0					
ANR	101788	IdentifierDeclType	const char *		101783	0					
ANR	101789	Identifier	dirPrefix		101783	1					
ANR	101790	AssignmentExpression	* dirPrefix = r_sys_prefix ( NULL )		101783	2		=			
ANR	101791	Identifier	dirPrefix		101783	0					
ANR	101792	CallExpression	r_sys_prefix ( NULL )		101783	1					
ANR	101793	Callee	r_sys_prefix		101783	0					
ANR	101794	Identifier	r_sys_prefix		101783	0					
ANR	101795	ArgumentList	NULL		101783	1					
ANR	101796	Argument	NULL		101783	0					
ANR	101797	Identifier	NULL		101783	0					
ANR	101798	IdentifierDeclStatement	const char * arch = ( anal -> cur && anal -> cur -> arch ) ? anal -> cur -> arch : R_SYS_ARCH ;	313:1:8674:8754	101783	1	True				
ANR	101799	IdentifierDecl	* arch = ( anal -> cur && anal -> cur -> arch ) ? anal -> cur -> arch : R_SYS_ARCH		101783	0					
ANR	101800	IdentifierDeclType	const char *		101783	0					
ANR	101801	Identifier	arch		101783	1					
ANR	101802	AssignmentExpression	* arch = ( anal -> cur && anal -> cur -> arch ) ? anal -> cur -> arch : R_SYS_ARCH		101783	2		=			
ANR	101803	Identifier	arch		101783	0					
ANR	101804	ConditionalExpression	( anal -> cur && anal -> cur -> arch ) ? anal -> cur -> arch : R_SYS_ARCH		101783	1					
ANR	101805	Condition	anal -> cur && anal -> cur -> arch		101783	0					
ANR	101806	AndExpression	anal -> cur && anal -> cur -> arch		101783	0		&&			
ANR	101807	PtrMemberAccess	anal -> cur		101783	0					
ANR	101808	Identifier	anal		101783	0					
ANR	101809	Identifier	cur		101783	1					
ANR	101810	PtrMemberAccess	anal -> cur -> arch		101783	1					
ANR	101811	PtrMemberAccess	anal -> cur		101783	0					
ANR	101812	Identifier	anal		101783	0					
ANR	101813	Identifier	cur		101783	1					
ANR	101814	Identifier	arch		101783	1					
ANR	101815	PtrMemberAccess	anal -> cur -> arch		101783	1					
ANR	101816	PtrMemberAccess	anal -> cur		101783	0					
ANR	101817	Identifier	anal		101783	0					
ANR	101818	Identifier	cur		101783	1					
ANR	101819	Identifier	arch		101783	1					
ANR	101820	Identifier	R_SYS_ARCH		101783	2					
ANR	101821	IdentifierDeclStatement	"const char * file = ( name && * name ) ? sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s.sdb"" ) , dirPrefix , name ) : sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s-%s-%d.sdb"" ) , dirPrefix , anal -> os , arch , anal -> bits ) ;"	314:1:8757:8980	101783	2	True				
ANR	101822	IdentifierDecl	"* file = ( name && * name ) ? sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s.sdb"" ) , dirPrefix , name ) : sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s-%s-%d.sdb"" ) , dirPrefix , anal -> os , arch , anal -> bits )"		101783	0					
ANR	101823	IdentifierDeclType	const char *		101783	0					
ANR	101824	Identifier	file		101783	1					
ANR	101825	AssignmentExpression	"* file = ( name && * name ) ? sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s.sdb"" ) , dirPrefix , name ) : sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s-%s-%d.sdb"" ) , dirPrefix , anal -> os , arch , anal -> bits )"		101783	2		=			
ANR	101826	Identifier	file		101783	0					
ANR	101827	ConditionalExpression	"( name && * name ) ? sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s.sdb"" ) , dirPrefix , name ) : sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s-%s-%d.sdb"" ) , dirPrefix , anal -> os , arch , anal -> bits )"		101783	1					
ANR	101828	Condition	name && * name		101783	0					
ANR	101829	AndExpression	name && * name		101783	0		&&			
ANR	101830	Identifier	name		101783	0					
ANR	101831	UnaryOperationExpression	* name		101783	1					
ANR	101832	UnaryOperator	*		101783	0					
ANR	101833	Identifier	name		101783	1					
ANR	101834	CallExpression	"sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s.sdb"" ) , dirPrefix , name )"		101783	1					
ANR	101835	Callee	sdb_fmt		101783	0					
ANR	101836	Identifier	sdb_fmt		101783	0					
ANR	101837	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s.sdb"" )"		101783	1					
ANR	101838	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s.sdb"" )"		101783	0					
ANR	101839	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s.sdb"" )"		101783	0					
ANR	101840	Callee	R_JOIN_3_PATHS		101783	0					
ANR	101841	Identifier	R_JOIN_3_PATHS		101783	0					
ANR	101842	ArgumentList	"""%s"""		101783	1					
ANR	101843	Argument	"""%s"""		101783	0					
ANR	101844	PrimaryExpression	"""%s"""		101783	0					
ANR	101845	Argument	R2_SDB_FCNSIGN		101783	1					
ANR	101846	Identifier	R2_SDB_FCNSIGN		101783	0					
ANR	101847	Argument	"""%s.sdb"""		101783	2					
ANR	101848	PrimaryExpression	"""%s.sdb"""		101783	0					
ANR	101849	Argument	dirPrefix		101783	1					
ANR	101850	Identifier	dirPrefix		101783	0					
ANR	101851	Argument	name		101783	2					
ANR	101852	Identifier	name		101783	0					
ANR	101853	CallExpression	"sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s-%s-%d.sdb"" ) , dirPrefix , anal -> os , arch , anal -> bits )"		101783	2					
ANR	101854	Callee	sdb_fmt		101783	0					
ANR	101855	Identifier	sdb_fmt		101783	0					
ANR	101856	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s-%s-%d.sdb"" )"		101783	1					
ANR	101857	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s-%s-%d.sdb"" )"		101783	0					
ANR	101858	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""%s-%s-%d.sdb"" )"		101783	0					
ANR	101859	Callee	R_JOIN_3_PATHS		101783	0					
ANR	101860	Identifier	R_JOIN_3_PATHS		101783	0					
ANR	101861	ArgumentList	"""%s"""		101783	1					
ANR	101862	Argument	"""%s"""		101783	0					
ANR	101863	PrimaryExpression	"""%s"""		101783	0					
ANR	101864	Argument	R2_SDB_FCNSIGN		101783	1					
ANR	101865	Identifier	R2_SDB_FCNSIGN		101783	0					
ANR	101866	Argument	"""%s-%s-%d.sdb"""		101783	2					
ANR	101867	PrimaryExpression	"""%s-%s-%d.sdb"""		101783	0					
ANR	101868	Argument	dirPrefix		101783	1					
ANR	101869	Identifier	dirPrefix		101783	0					
ANR	101870	Argument	anal -> os		101783	2					
ANR	101871	PtrMemberAccess	anal -> os		101783	0					
ANR	101872	Identifier	anal		101783	0					
ANR	101873	Identifier	os		101783	1					
ANR	101874	Argument	arch		101783	3					
ANR	101875	Identifier	arch		101783	0					
ANR	101876	Argument	anal -> bits		101783	4					
ANR	101877	PtrMemberAccess	anal -> bits		101783	0					
ANR	101878	Identifier	anal		101783	0					
ANR	101879	Identifier	bits		101783	1					
ANR	101880	IfStatement	if ( r_file_exists ( file ) )		101783	3					
ANR	101881	Condition	r_file_exists ( file )	318:5:8987:9006	101783	0	True				
ANR	101882	CallExpression	r_file_exists ( file )		101783	0					
ANR	101883	Callee	r_file_exists		101783	0					
ANR	101884	Identifier	r_file_exists		101783	0					
ANR	101885	ArgumentList	file		101783	1					
ANR	101886	Argument	file		101783	0					
ANR	101887	Identifier	file		101783	0					
ANR	101888	CompoundStatement		8:27:383:383	101783	1					
ANR	101889	ExpressionStatement	sdb_close ( anal -> sdb_fcnsign )	319:2:9013:9042	101783	0	True				
ANR	101890	CallExpression	sdb_close ( anal -> sdb_fcnsign )		101783	0					
ANR	101891	Callee	sdb_close		101783	0					
ANR	101892	Identifier	sdb_close		101783	0					
ANR	101893	ArgumentList	anal -> sdb_fcnsign		101783	1					
ANR	101894	Argument	anal -> sdb_fcnsign		101783	0					
ANR	101895	PtrMemberAccess	anal -> sdb_fcnsign		101783	0					
ANR	101896	Identifier	anal		101783	0					
ANR	101897	Identifier	sdb_fcnsign		101783	1					
ANR	101898	ExpressionStatement	sdb_free ( anal -> sdb_fcnsign )	320:2:9046:9074	101783	1	True				
ANR	101899	CallExpression	sdb_free ( anal -> sdb_fcnsign )		101783	0					
ANR	101900	Callee	sdb_free		101783	0					
ANR	101901	Identifier	sdb_free		101783	0					
ANR	101902	ArgumentList	anal -> sdb_fcnsign		101783	1					
ANR	101903	Argument	anal -> sdb_fcnsign		101783	0					
ANR	101904	PtrMemberAccess	anal -> sdb_fcnsign		101783	0					
ANR	101905	Identifier	anal		101783	0					
ANR	101906	Identifier	sdb_fcnsign		101783	1					
ANR	101907	ExpressionStatement	"anal -> sdb_fcnsign = sdb_new ( 0 , file , 0 )"	321:2:9078:9118	101783	2	True				
ANR	101908	AssignmentExpression	"anal -> sdb_fcnsign = sdb_new ( 0 , file , 0 )"		101783	0		=			
ANR	101909	PtrMemberAccess	anal -> sdb_fcnsign		101783	0					
ANR	101910	Identifier	anal		101783	0					
ANR	101911	Identifier	sdb_fcnsign		101783	1					
ANR	101912	CallExpression	"sdb_new ( 0 , file , 0 )"		101783	1					
ANR	101913	Callee	sdb_new		101783	0					
ANR	101914	Identifier	sdb_new		101783	0					
ANR	101915	ArgumentList	0		101783	1					
ANR	101916	Argument	0		101783	0					
ANR	101917	PrimaryExpression	0		101783	0					
ANR	101918	Argument	file		101783	1					
ANR	101919	Identifier	file		101783	0					
ANR	101920	Argument	0		101783	2					
ANR	101921	PrimaryExpression	0		101783	0					
ANR	101922	ExpressionStatement	"sdb_ns_set ( anal -> sdb , ""fcnsign"" , anal -> sdb_fcnsign )"	322:2:9122:9174	101783	3	True				
ANR	101923	CallExpression	"sdb_ns_set ( anal -> sdb , ""fcnsign"" , anal -> sdb_fcnsign )"		101783	0					
ANR	101924	Callee	sdb_ns_set		101783	0					
ANR	101925	Identifier	sdb_ns_set		101783	0					
ANR	101926	ArgumentList	anal -> sdb		101783	1					
ANR	101927	Argument	anal -> sdb		101783	0					
ANR	101928	PtrMemberAccess	anal -> sdb		101783	0					
ANR	101929	Identifier	anal		101783	0					
ANR	101930	Identifier	sdb		101783	1					
ANR	101931	Argument	"""fcnsign"""		101783	1					
ANR	101932	PrimaryExpression	"""fcnsign"""		101783	0					
ANR	101933	Argument	anal -> sdb_fcnsign		101783	2					
ANR	101934	PtrMemberAccess	anal -> sdb_fcnsign		101783	0					
ANR	101935	Identifier	anal		101783	0					
ANR	101936	Identifier	sdb_fcnsign		101783	1					
ANR	101937	ReturnStatement	return ( anal -> sdb_fcnsign != NULL ) ;	323:2:9178:9212	101783	4	True				
ANR	101938	EqualityExpression	anal -> sdb_fcnsign != NULL		101783	0		!=			
ANR	101939	PtrMemberAccess	anal -> sdb_fcnsign		101783	0					
ANR	101940	Identifier	anal		101783	0					
ANR	101941	Identifier	sdb_fcnsign		101783	1					
ANR	101942	Identifier	NULL		101783	1					
ANR	101943	ReturnStatement	return false ;	325:1:9218:9230	101783	4	True				
ANR	101944	Identifier	false		101783	0					
ANR	101945	ReturnType	R_API bool		101783	1					
ANR	101946	Identifier	r_anal_set_fcnsign		101783	2					
ANR	101947	ParameterList	"RAnal * anal , const char * name"		101783	3					
ANR	101948	Parameter	RAnal * anal	311:30:8594:8604	101783	0	True				
ANR	101949	ParameterType	RAnal *		101783	0					
ANR	101950	Identifier	anal		101783	1					
ANR	101951	Parameter	const char * name	311:43:8607:8622	101783	1	True				
ANR	101952	ParameterType	const char *		101783	0					
ANR	101953	Identifier	name		101783	1					
ANR	101954	CFGEntryNode	ENTRY		101783		True				
ANR	101955	CFGExitNode	EXIT		101783		True				
ANR	101956	Symbol	* name		101783						
ANR	101957	Symbol	* anal -> cur		101783						
ANR	101958	Symbol	NULL		101783						
ANR	101959	Symbol	R2_SDB_FCNSIGN		101783						
ANR	101960	Symbol	anal -> sdb		101783						
ANR	101961	Symbol	anal -> sdb_fcnsign		101783						
ANR	101962	Symbol	R_SYS_ARCH		101783						
ANR	101963	Symbol	R_JOIN_3_PATHS		101783						
ANR	101964	Symbol	false		101783						
ANR	101965	Symbol	dirPrefix		101783						
ANR	101966	Symbol	anal -> cur -> arch		101783						
ANR	101967	Symbol	anal -> os		101783						
ANR	101968	Symbol	r_sys_prefix		101783						
ANR	101969	Symbol	anal -> bits		101783						
ANR	101970	Symbol	* * anal		101783						
ANR	101971	Symbol	sdb_new		101783						
ANR	101972	Symbol	* anal		101783						
ANR	101973	Symbol	file		101783						
ANR	101974	Symbol	anal		101783						
ANR	101975	Symbol	anal -> cur		101783						
ANR	101976	Symbol	name		101783						
ANR	101977	Symbol	arch		101783						
ANR	101978	Symbol	sdb_fmt		101783						
ANR	101979	Symbol	r_file_exists		101783						
ANR	101980	Function	r_anal_get_fcnsign	328:6:9241:9355							
ANR	101981	FunctionDef	"r_anal_get_fcnsign (RAnal * anal , const char * sym)"		101980	0					
ANR	101982	CompoundStatement		328:67:9302:9355	101980	0					
ANR	101983	ReturnStatement	"return sdb_const_get ( anal -> sdb_fcnsign , sym , 0 ) ;"	329:1:9305:9353	101980	0	True				
ANR	101984	CallExpression	"sdb_const_get ( anal -> sdb_fcnsign , sym , 0 )"		101980	0					
ANR	101985	Callee	sdb_const_get		101980	0					
ANR	101986	Identifier	sdb_const_get		101980	0					
ANR	101987	ArgumentList	anal -> sdb_fcnsign		101980	1					
ANR	101988	Argument	anal -> sdb_fcnsign		101980	0					
ANR	101989	PtrMemberAccess	anal -> sdb_fcnsign		101980	0					
ANR	101990	Identifier	anal		101980	0					
ANR	101991	Identifier	sdb_fcnsign		101980	1					
ANR	101992	Argument	sym		101980	1					
ANR	101993	Identifier	sym		101980	0					
ANR	101994	Argument	0		101980	2					
ANR	101995	PrimaryExpression	0		101980	0					
ANR	101996	ReturnType	const char *		101980	1					
ANR	101997	Identifier	r_anal_get_fcnsign		101980	2					
ANR	101998	ParameterList	"RAnal * anal , const char * sym"		101980	3					
ANR	101999	Parameter	RAnal * anal	328:37:9272:9282	101980	0	True				
ANR	102000	ParameterType	RAnal *		101980	0					
ANR	102001	Identifier	anal		101980	1					
ANR	102002	Parameter	const char * sym	328:50:9285:9299	101980	1	True				
ANR	102003	ParameterType	const char *		101980	0					
ANR	102004	Identifier	sym		101980	1					
ANR	102005	CFGEntryNode	ENTRY		101980		True				
ANR	102006	CFGExitNode	EXIT		101980		True				
ANR	102007	Symbol	* anal		101980						
ANR	102008	Symbol	anal		101980						
ANR	102009	Symbol	anal -> sdb_fcnsign		101980						
ANR	102010	Symbol	sym		101980						
ANR	102011	Symbol	sdb_const_get		101980						
ANR	102012	Function	r_anal_set_triplet	332:0:9358:9748							
ANR	102013	FunctionDef	"r_anal_set_triplet (RAnal * anal , const char * os , const char * arch , int bits)"		102012	0					
ANR	102014	CompoundStatement		332:87:9445:9748	102012	0					
ANR	102015	ExpressionStatement	"r_return_val_if_fail ( anal , false )"	333:1:9448:9482	102012	0	True				
ANR	102016	CallExpression	"r_return_val_if_fail ( anal , false )"		102012	0					
ANR	102017	Callee	r_return_val_if_fail		102012	0					
ANR	102018	Identifier	r_return_val_if_fail		102012	0					
ANR	102019	ArgumentList	anal		102012	1					
ANR	102020	Argument	anal		102012	0					
ANR	102021	Identifier	anal		102012	0					
ANR	102022	Argument	false		102012	1					
ANR	102023	Identifier	false		102012	0					
ANR	102024	IfStatement	if ( ! os || ! * os )		102012	1					
ANR	102025	Condition	! os || ! * os	334:5:9489:9499	102012	0	True				
ANR	102026	OrExpression	! os || ! * os		102012	0		||			
ANR	102027	UnaryOperationExpression	! os		102012	0					
ANR	102028	UnaryOperator	!		102012	0					
ANR	102029	Identifier	os		102012	1					
ANR	102030	UnaryOperationExpression	! * os		102012	1					
ANR	102031	UnaryOperator	!		102012	0					
ANR	102032	UnaryOperationExpression	* os		102012	1					
ANR	102033	UnaryOperator	*		102012	0					
ANR	102034	Identifier	os		102012	1					
ANR	102035	CompoundStatement		3:18:56:56	102012	1					
ANR	102036	ExpressionStatement	os = R_SYS_OS	335:2:9506:9519	102012	0	True				
ANR	102037	AssignmentExpression	os = R_SYS_OS		102012	0		=			
ANR	102038	Identifier	os		102012	0					
ANR	102039	Identifier	R_SYS_OS		102012	1					
ANR	102040	IfStatement	if ( ! arch || ! * arch )		102012	2					
ANR	102041	Condition	! arch || ! * arch	337:5:9529:9543	102012	0	True				
ANR	102042	OrExpression	! arch || ! * arch		102012	0		||			
ANR	102043	UnaryOperationExpression	! arch		102012	0					
ANR	102044	UnaryOperator	!		102012	0					
ANR	102045	Identifier	arch		102012	1					
ANR	102046	UnaryOperationExpression	! * arch		102012	1					
ANR	102047	UnaryOperator	!		102012	0					
ANR	102048	UnaryOperationExpression	* arch		102012	1					
ANR	102049	UnaryOperator	*		102012	0					
ANR	102050	Identifier	arch		102012	1					
ANR	102051	CompoundStatement		6:22:100:100	102012	1					
ANR	102052	ExpressionStatement	arch = anal -> cur ? anal -> cur -> arch : R_SYS_ARCH	338:2:9550:9595	102012	0	True				
ANR	102053	AssignmentExpression	arch = anal -> cur ? anal -> cur -> arch : R_SYS_ARCH		102012	0		=			
ANR	102054	Identifier	arch		102012	0					
ANR	102055	ConditionalExpression	anal -> cur ? anal -> cur -> arch : R_SYS_ARCH		102012	1					
ANR	102056	Condition	anal -> cur		102012	0					
ANR	102057	PtrMemberAccess	anal -> cur		102012	0					
ANR	102058	Identifier	anal		102012	0					
ANR	102059	Identifier	cur		102012	1					
ANR	102060	PtrMemberAccess	anal -> cur -> arch		102012	1					
ANR	102061	PtrMemberAccess	anal -> cur		102012	0					
ANR	102062	Identifier	anal		102012	0					
ANR	102063	Identifier	cur		102012	1					
ANR	102064	Identifier	arch		102012	1					
ANR	102065	Identifier	R_SYS_ARCH		102012	2					
ANR	102066	IfStatement	if ( bits < 1 )		102012	3					
ANR	102067	Condition	bits < 1	340:5:9605:9612	102012	0	True				
ANR	102068	RelationalExpression	bits < 1		102012	0		<			
ANR	102069	Identifier	bits		102012	0					
ANR	102070	PrimaryExpression	1		102012	1					
ANR	102071	CompoundStatement		9:15:169:169	102012	1					
ANR	102072	ExpressionStatement	bits = anal -> bits	341:2:9619:9636	102012	0	True				
ANR	102073	AssignmentExpression	bits = anal -> bits		102012	0		=			
ANR	102074	Identifier	bits		102012	0					
ANR	102075	PtrMemberAccess	anal -> bits		102012	1					
ANR	102076	Identifier	anal		102012	0					
ANR	102077	Identifier	bits		102012	1					
ANR	102078	ExpressionStatement	free ( anal -> os )	343:1:9642:9657	102012	4	True				
ANR	102079	CallExpression	free ( anal -> os )		102012	0					
ANR	102080	Callee	free		102012	0					
ANR	102081	Identifier	free		102012	0					
ANR	102082	ArgumentList	anal -> os		102012	1					
ANR	102083	Argument	anal -> os		102012	0					
ANR	102084	PtrMemberAccess	anal -> os		102012	0					
ANR	102085	Identifier	anal		102012	0					
ANR	102086	Identifier	os		102012	1					
ANR	102087	ExpressionStatement	anal -> os = strdup ( os )	344:1:9660:9682	102012	5	True				
ANR	102088	AssignmentExpression	anal -> os = strdup ( os )		102012	0		=			
ANR	102089	PtrMemberAccess	anal -> os		102012	0					
ANR	102090	Identifier	anal		102012	0					
ANR	102091	Identifier	os		102012	1					
ANR	102092	CallExpression	strdup ( os )		102012	1					
ANR	102093	Callee	strdup		102012	0					
ANR	102094	Identifier	strdup		102012	0					
ANR	102095	ArgumentList	os		102012	1					
ANR	102096	Argument	os		102012	0					
ANR	102097	Identifier	os		102012	0					
ANR	102098	ExpressionStatement	"r_anal_set_bits ( anal , bits )"	345:1:9685:9713	102012	6	True				
ANR	102099	CallExpression	"r_anal_set_bits ( anal , bits )"		102012	0					
ANR	102100	Callee	r_anal_set_bits		102012	0					
ANR	102101	Identifier	r_anal_set_bits		102012	0					
ANR	102102	ArgumentList	anal		102012	1					
ANR	102103	Argument	anal		102012	0					
ANR	102104	Identifier	anal		102012	0					
ANR	102105	Argument	bits		102012	1					
ANR	102106	Identifier	bits		102012	0					
ANR	102107	ReturnStatement	"return r_anal_use ( anal , arch ) ;"	346:1:9716:9746	102012	7	True				
ANR	102108	CallExpression	"r_anal_use ( anal , arch )"		102012	0					
ANR	102109	Callee	r_anal_use		102012	0					
ANR	102110	Identifier	r_anal_use		102012	0					
ANR	102111	ArgumentList	anal		102012	1					
ANR	102112	Argument	anal		102012	0					
ANR	102113	Identifier	anal		102012	0					
ANR	102114	Argument	arch		102012	1					
ANR	102115	Identifier	arch		102012	0					
ANR	102116	ReturnType	R_API bool		102012	1					
ANR	102117	Identifier	r_anal_set_triplet		102012	2					
ANR	102118	ParameterList	"RAnal * anal , const char * os , const char * arch , int bits"		102012	3					
ANR	102119	Parameter	RAnal * anal	332:30:9388:9398	102012	0	True				
ANR	102120	ParameterType	RAnal *		102012	0					
ANR	102121	Identifier	anal		102012	1					
ANR	102122	Parameter	const char * os	332:43:9401:9414	102012	1	True				
ANR	102123	ParameterType	const char *		102012	0					
ANR	102124	Identifier	os		102012	1					
ANR	102125	Parameter	const char * arch	332:59:9417:9432	102012	2	True				
ANR	102126	ParameterType	const char *		102012	0					
ANR	102127	Identifier	arch		102012	1					
ANR	102128	Parameter	int bits	332:77:9435:9442	102012	3	True				
ANR	102129	ParameterType	int		102012	0					
ANR	102130	Identifier	bits		102012	1					
ANR	102131	CFGEntryNode	ENTRY		102012		True				
ANR	102132	CFGExitNode	EXIT		102012		True				
ANR	102133	Symbol	* anal -> cur		102012						
ANR	102134	Symbol	os		102012						
ANR	102135	Symbol	R_SYS_ARCH		102012						
ANR	102136	Symbol	bits		102012						
ANR	102137	Symbol	false		102012						
ANR	102138	Symbol	* os		102012						
ANR	102139	Symbol	anal -> cur -> arch		102012						
ANR	102140	Symbol	anal -> os		102012						
ANR	102141	Symbol	anal -> bits		102012						
ANR	102142	Symbol	* arch		102012						
ANR	102143	Symbol	r_anal_use		102012						
ANR	102144	Symbol	* * anal		102012						
ANR	102145	Symbol	* anal		102012						
ANR	102146	Symbol	anal		102012						
ANR	102147	Symbol	anal -> cur		102012						
ANR	102148	Symbol	arch		102012						
ANR	102149	Symbol	strdup		102012						
ANR	102150	Symbol	R_SYS_OS		102012						
ANR	102151	Function	sdb_concat_by_path	350:0:9781:9926							
ANR	102152	FunctionDef	"sdb_concat_by_path (Sdb * s , const char * path)"		102151	0					
ANR	102153	CompoundStatement		350:57:9838:9926	102151	0					
ANR	102154	IdentifierDeclStatement	"Sdb * db = sdb_new ( 0 , path , 0 ) ;"	351:1:9841:9871	102151	0	True				
ANR	102155	IdentifierDecl	"* db = sdb_new ( 0 , path , 0 )"		102151	0					
ANR	102156	IdentifierDeclType	Sdb *		102151	0					
ANR	102157	Identifier	db		102151	1					
ANR	102158	AssignmentExpression	"* db = sdb_new ( 0 , path , 0 )"		102151	2		=			
ANR	102159	Identifier	db		102151	0					
ANR	102160	CallExpression	"sdb_new ( 0 , path , 0 )"		102151	1					
ANR	102161	Callee	sdb_new		102151	0					
ANR	102162	Identifier	sdb_new		102151	0					
ANR	102163	ArgumentList	0		102151	1					
ANR	102164	Argument	0		102151	0					
ANR	102165	PrimaryExpression	0		102151	0					
ANR	102166	Argument	path		102151	1					
ANR	102167	Identifier	path		102151	0					
ANR	102168	Argument	0		102151	2					
ANR	102169	PrimaryExpression	0		102151	0					
ANR	102170	ExpressionStatement	"sdb_merge ( s , db )"	352:1:9874:9891	102151	1	True				
ANR	102171	CallExpression	"sdb_merge ( s , db )"		102151	0					
ANR	102172	Callee	sdb_merge		102151	0					
ANR	102173	Identifier	sdb_merge		102151	0					
ANR	102174	ArgumentList	s		102151	1					
ANR	102175	Argument	s		102151	0					
ANR	102176	Identifier	s		102151	0					
ANR	102177	Argument	db		102151	1					
ANR	102178	Identifier	db		102151	0					
ANR	102179	ExpressionStatement	sdb_close ( db )	353:1:9894:9908	102151	2	True				
ANR	102180	CallExpression	sdb_close ( db )		102151	0					
ANR	102181	Callee	sdb_close		102151	0					
ANR	102182	Identifier	sdb_close		102151	0					
ANR	102183	ArgumentList	db		102151	1					
ANR	102184	Argument	db		102151	0					
ANR	102185	Identifier	db		102151	0					
ANR	102186	ExpressionStatement	sdb_free ( db )	354:1:9911:9924	102151	3	True				
ANR	102187	CallExpression	sdb_free ( db )		102151	0					
ANR	102188	Callee	sdb_free		102151	0					
ANR	102189	Identifier	sdb_free		102151	0					
ANR	102190	ArgumentList	db		102151	1					
ANR	102191	Argument	db		102151	0					
ANR	102192	Identifier	db		102151	0					
ANR	102193	ReturnType	static void		102151	1					
ANR	102194	Identifier	sdb_concat_by_path		102151	2					
ANR	102195	ParameterList	"Sdb * s , const char * path"		102151	3					
ANR	102196	Parameter	Sdb * s	350:31:9812:9817	102151	0	True				
ANR	102197	ParameterType	Sdb *		102151	0					
ANR	102198	Identifier	s		102151	1					
ANR	102199	Parameter	const char * path	350:39:9820:9835	102151	1	True				
ANR	102200	ParameterType	const char *		102151	0					
ANR	102201	Identifier	path		102151	1					
ANR	102202	CFGEntryNode	ENTRY		102151		True				
ANR	102203	CFGExitNode	EXIT		102151		True				
ANR	102204	Symbol	path		102151						
ANR	102205	Symbol	sdb_new		102151						
ANR	102206	Symbol	s		102151						
ANR	102207	Symbol	db		102151						
ANR	102208	Function	r_anal_set_os	357:0:9929:10289							
ANR	102209	FunctionDef	"r_anal_set_os (RAnal * anal , const char * os)"		102208	0					
ANR	102210	CompoundStatement		357:54:9983:10289	102208	0					
ANR	102211	IdentifierDeclStatement	Sdb * types = anal -> sdb_types ;	358:1:9986:10014	102208	0	True				
ANR	102212	IdentifierDecl	* types = anal -> sdb_types		102208	0					
ANR	102213	IdentifierDeclType	Sdb *		102208	0					
ANR	102214	Identifier	types		102208	1					
ANR	102215	AssignmentExpression	* types = anal -> sdb_types		102208	2		=			
ANR	102216	Identifier	types		102208	0					
ANR	102217	PtrMemberAccess	anal -> sdb_types		102208	1					
ANR	102218	Identifier	anal		102208	0					
ANR	102219	Identifier	sdb_types		102208	1					
ANR	102220	IdentifierDeclStatement	const char * dir_prefix = r_sys_prefix ( NULL ) ;	359:1:10017:10061	102208	1	True				
ANR	102221	IdentifierDecl	* dir_prefix = r_sys_prefix ( NULL )		102208	0					
ANR	102222	IdentifierDeclType	const char *		102208	0					
ANR	102223	Identifier	dir_prefix		102208	1					
ANR	102224	AssignmentExpression	* dir_prefix = r_sys_prefix ( NULL )		102208	2		=			
ANR	102225	Identifier	dir_prefix		102208	0					
ANR	102226	CallExpression	r_sys_prefix ( NULL )		102208	1					
ANR	102227	Callee	r_sys_prefix		102208	0					
ANR	102228	Identifier	r_sys_prefix		102208	0					
ANR	102229	ArgumentList	NULL		102208	1					
ANR	102230	Argument	NULL		102208	0					
ANR	102231	Identifier	NULL		102208	0					
ANR	102232	IdentifierDeclStatement	"const char * dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" ) , dir_prefix , os ) ;"	360:1:10064:10166	102208	2	True				
ANR	102233	IdentifierDecl	"* dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" ) , dir_prefix , os )"		102208	0					
ANR	102234	IdentifierDeclType	const char *		102208	0					
ANR	102235	Identifier	dbpath		102208	1					
ANR	102236	AssignmentExpression	"* dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" ) , dir_prefix , os )"		102208	2		=			
ANR	102237	Identifier	dbpath		102208	0					
ANR	102238	CallExpression	"sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" ) , dir_prefix , os )"		102208	1					
ANR	102239	Callee	sdb_fmt		102208	0					
ANR	102240	Identifier	sdb_fmt		102208	0					
ANR	102241	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" )"		102208	1					
ANR	102242	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" )"		102208	0					
ANR	102243	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" )"		102208	0					
ANR	102244	Callee	R_JOIN_3_PATHS		102208	0					
ANR	102245	Identifier	R_JOIN_3_PATHS		102208	0					
ANR	102246	ArgumentList	"""%s"""		102208	1					
ANR	102247	Argument	"""%s"""		102208	0					
ANR	102248	PrimaryExpression	"""%s"""		102208	0					
ANR	102249	Argument	R2_SDB_FCNSIGN		102208	1					
ANR	102250	Identifier	R2_SDB_FCNSIGN		102208	0					
ANR	102251	Argument	"""types-%s.sdb"""		102208	2					
ANR	102252	PrimaryExpression	"""types-%s.sdb"""		102208	0					
ANR	102253	Argument	dir_prefix		102208	1					
ANR	102254	Identifier	dir_prefix		102208	0					
ANR	102255	Argument	os		102208	2					
ANR	102256	Identifier	os		102208	0					
ANR	102257	IfStatement	if ( r_file_exists ( dbpath ) )		102208	3					
ANR	102258	Condition	r_file_exists ( dbpath )	362:5:10173:10194	102208	0	True				
ANR	102259	CallExpression	r_file_exists ( dbpath )		102208	0					
ANR	102260	Callee	r_file_exists		102208	0					
ANR	102261	Identifier	r_file_exists		102208	0					
ANR	102262	ArgumentList	dbpath		102208	1					
ANR	102263	Argument	dbpath		102208	0					
ANR	102264	Identifier	dbpath		102208	0					
ANR	102265	CompoundStatement		6:29:213:213	102208	1					
ANR	102266	ExpressionStatement	"sdb_concat_by_path ( types , dbpath )"	363:2:10201:10235	102208	0	True				
ANR	102267	CallExpression	"sdb_concat_by_path ( types , dbpath )"		102208	0					
ANR	102268	Callee	sdb_concat_by_path		102208	0					
ANR	102269	Identifier	sdb_concat_by_path		102208	0					
ANR	102270	ArgumentList	types		102208	1					
ANR	102271	Argument	types		102208	0					
ANR	102272	Identifier	types		102208	0					
ANR	102273	Argument	dbpath		102208	1					
ANR	102274	Identifier	dbpath		102208	0					
ANR	102275	ReturnStatement	"return r_anal_set_triplet ( anal , os , NULL , - 1 ) ;"	365:1:10241:10287	102208	4	True				
ANR	102276	CallExpression	"r_anal_set_triplet ( anal , os , NULL , - 1 )"		102208	0					
ANR	102277	Callee	r_anal_set_triplet		102208	0					
ANR	102278	Identifier	r_anal_set_triplet		102208	0					
ANR	102279	ArgumentList	anal		102208	1					
ANR	102280	Argument	anal		102208	0					
ANR	102281	Identifier	anal		102208	0					
ANR	102282	Argument	os		102208	1					
ANR	102283	Identifier	os		102208	0					
ANR	102284	Argument	NULL		102208	2					
ANR	102285	Identifier	NULL		102208	0					
ANR	102286	Argument	- 1		102208	3					
ANR	102287	UnaryOperationExpression	- 1		102208	0					
ANR	102288	UnaryOperator	-		102208	0					
ANR	102289	PrimaryExpression	1		102208	1					
ANR	102290	ReturnType	R_API bool		102208	1					
ANR	102291	Identifier	r_anal_set_os		102208	2					
ANR	102292	ParameterList	"RAnal * anal , const char * os"		102208	3					
ANR	102293	Parameter	RAnal * anal	357:25:9954:9964	102208	0	True				
ANR	102294	ParameterType	RAnal *		102208	0					
ANR	102295	Identifier	anal		102208	1					
ANR	102296	Parameter	const char * os	357:38:9967:9980	102208	1	True				
ANR	102297	ParameterType	const char *		102208	0					
ANR	102298	Identifier	os		102208	1					
ANR	102299	CFGEntryNode	ENTRY		102208		True				
ANR	102300	CFGExitNode	EXIT		102208		True				
ANR	102301	Symbol	types		102208						
ANR	102302	Symbol	NULL		102208						
ANR	102303	Symbol	os		102208						
ANR	102304	Symbol	R2_SDB_FCNSIGN		102208						
ANR	102305	Symbol	dir_prefix		102208						
ANR	102306	Symbol	R_JOIN_3_PATHS		102208						
ANR	102307	Symbol	r_sys_prefix		102208						
ANR	102308	Symbol	* anal		102208						
ANR	102309	Symbol	anal		102208						
ANR	102310	Symbol	r_anal_set_triplet		102208						
ANR	102311	Symbol	anal -> sdb_types		102208						
ANR	102312	Symbol	sdb_fmt		102208						
ANR	102313	Symbol	dbpath		102208						
ANR	102314	Symbol	r_file_exists		102208						
ANR	102315	Function	r_anal_set_bits	368:0:10292:10567							
ANR	102316	FunctionDef	"r_anal_set_bits (RAnal * anal , int bits)"		102315	0					
ANR	102317	CompoundStatement		368:50:10342:10567	102315	0					
ANR	102318	SwitchStatement	switch ( bits )		102315	0					
ANR	102319	Condition	bits	369:9:10353:10356	102315	0	True				
ANR	102320	Identifier	bits		102315	0					
ANR	102321	CompoundStatement		2:15:16:16	102315	1					
ANR	102322	Label	case 8 :	370:1:10362:10368	102315	0	True				
ANR	102323	Label	case 16 :	371:1:10371:10378	102315	1	True				
ANR	102324	Label	case 27 :	372:1:10381:10388	102315	2	True				
ANR	102325	Label	case 32 :	373:1:10391:10398	102315	3	True				
ANR	102326	Label	case 64 :	374:1:10401:10408	102315	4	True				
ANR	102327	IfStatement	if ( anal -> bits != bits )		102315	5					
ANR	102328	Condition	anal -> bits != bits	375:6:10416:10433	102315	0	True				
ANR	102329	EqualityExpression	anal -> bits != bits		102315	0		!=			
ANR	102330	PtrMemberAccess	anal -> bits		102315	0					
ANR	102331	Identifier	anal		102315	0					
ANR	102332	Identifier	bits		102315	1					
ANR	102333	Identifier	bits		102315	1					
ANR	102334	CompoundStatement		8:26:93:93	102315	1					
ANR	102335	ExpressionStatement	anal -> bits = bits	376:3:10441:10458	102315	0	True				
ANR	102336	AssignmentExpression	anal -> bits = bits		102315	0		=			
ANR	102337	PtrMemberAccess	anal -> bits		102315	0					
ANR	102338	Identifier	anal		102315	0					
ANR	102339	Identifier	bits		102315	1					
ANR	102340	Identifier	bits		102315	1					
ANR	102341	ExpressionStatement	"r_anal_set_fcnsign ( anal , NULL )"	377:3:10463:10494	102315	1	True				
ANR	102342	CallExpression	"r_anal_set_fcnsign ( anal , NULL )"		102315	0					
ANR	102343	Callee	r_anal_set_fcnsign		102315	0					
ANR	102344	Identifier	r_anal_set_fcnsign		102315	0					
ANR	102345	ArgumentList	anal		102315	1					
ANR	102346	Argument	anal		102315	0					
ANR	102347	Identifier	anal		102315	0					
ANR	102348	Argument	NULL		102315	1					
ANR	102349	Identifier	NULL		102315	0					
ANR	102350	ExpressionStatement	r_anal_set_reg_profile ( anal )	378:3:10499:10528	102315	2	True				
ANR	102351	CallExpression	r_anal_set_reg_profile ( anal )		102315	0					
ANR	102352	Callee	r_anal_set_reg_profile		102315	0					
ANR	102353	Identifier	r_anal_set_reg_profile		102315	0					
ANR	102354	ArgumentList	anal		102315	1					
ANR	102355	Argument	anal		102315	0					
ANR	102356	Identifier	anal		102315	0					
ANR	102357	ReturnStatement	return true ;	380:2:10536:10547	102315	6	True				
ANR	102358	Identifier	true		102315	0					
ANR	102359	ReturnStatement	return false ;	382:1:10553:10565	102315	1	True				
ANR	102360	Identifier	false		102315	0					
ANR	102361	ReturnType	R_API bool		102315	1					
ANR	102362	Identifier	r_anal_set_bits		102315	2					
ANR	102363	ParameterList	"RAnal * anal , int bits"		102315	3					
ANR	102364	Parameter	RAnal * anal	368:27:10319:10329	102315	0	True				
ANR	102365	ParameterType	RAnal *		102315	0					
ANR	102366	Identifier	anal		102315	1					
ANR	102367	Parameter	int bits	368:40:10332:10339	102315	1	True				
ANR	102368	ParameterType	int		102315	0					
ANR	102369	Identifier	bits		102315	1					
ANR	102370	CFGEntryNode	ENTRY		102315		True				
ANR	102371	CFGExitNode	EXIT		102315		True				
ANR	102372	Symbol	* anal		102315						
ANR	102373	Symbol	NULL		102315						
ANR	102374	Symbol	anal		102315						
ANR	102375	Symbol	bits		102315						
ANR	102376	Symbol	true		102315						
ANR	102377	Symbol	false		102315						
ANR	102378	Symbol	anal -> bits		102315						
ANR	102379	Function	r_anal_set_cpu	385:0:10570:10783							
ANR	102380	FunctionDef	"r_anal_set_cpu (RAnal * anal , const char * cpu)"		102379	0					
ANR	102381	CompoundStatement		385:56:10626:10783	102379	0					
ANR	102382	ExpressionStatement	free ( anal -> cpu )	386:1:10629:10645	102379	0	True				
ANR	102383	CallExpression	free ( anal -> cpu )		102379	0					
ANR	102384	Callee	free		102379	0					
ANR	102385	Identifier	free		102379	0					
ANR	102386	ArgumentList	anal -> cpu		102379	1					
ANR	102387	Argument	anal -> cpu		102379	0					
ANR	102388	PtrMemberAccess	anal -> cpu		102379	0					
ANR	102389	Identifier	anal		102379	0					
ANR	102390	Identifier	cpu		102379	1					
ANR	102391	ExpressionStatement	anal -> cpu = cpu ? strdup ( cpu ) : NULL	387:1:10648:10685	102379	1	True				
ANR	102392	AssignmentExpression	anal -> cpu = cpu ? strdup ( cpu ) : NULL		102379	0		=			
ANR	102393	PtrMemberAccess	anal -> cpu		102379	0					
ANR	102394	Identifier	anal		102379	0					
ANR	102395	Identifier	cpu		102379	1					
ANR	102396	ConditionalExpression	cpu ? strdup ( cpu ) : NULL		102379	1					
ANR	102397	Condition	cpu		102379	0					
ANR	102398	Identifier	cpu		102379	0					
ANR	102399	CallExpression	strdup ( cpu )		102379	1					
ANR	102400	Callee	strdup		102379	0					
ANR	102401	Identifier	strdup		102379	0					
ANR	102402	ArgumentList	cpu		102379	1					
ANR	102403	Argument	cpu		102379	0					
ANR	102404	Identifier	cpu		102379	0					
ANR	102405	Identifier	NULL		102379	2					
ANR	102406	IdentifierDeclStatement	"int v = r_anal_archinfo ( anal , R_ANAL_ARCHINFO_ALIGN ) ;"	388:1:10688:10741	102379	2	True				
ANR	102407	IdentifierDecl	"v = r_anal_archinfo ( anal , R_ANAL_ARCHINFO_ALIGN )"		102379	0					
ANR	102408	IdentifierDeclType	int		102379	0					
ANR	102409	Identifier	v		102379	1					
ANR	102410	AssignmentExpression	"v = r_anal_archinfo ( anal , R_ANAL_ARCHINFO_ALIGN )"		102379	2		=			
ANR	102411	Identifier	v		102379	0					
ANR	102412	CallExpression	"r_anal_archinfo ( anal , R_ANAL_ARCHINFO_ALIGN )"		102379	1					
ANR	102413	Callee	r_anal_archinfo		102379	0					
ANR	102414	Identifier	r_anal_archinfo		102379	0					
ANR	102415	ArgumentList	anal		102379	1					
ANR	102416	Argument	anal		102379	0					
ANR	102417	Identifier	anal		102379	0					
ANR	102418	Argument	R_ANAL_ARCHINFO_ALIGN		102379	1					
ANR	102419	Identifier	R_ANAL_ARCHINFO_ALIGN		102379	0					
ANR	102420	IfStatement	if ( v != - 1 )		102379	3					
ANR	102421	Condition	v != - 1	389:5:10748:10754	102379	0	True				
ANR	102422	EqualityExpression	v != - 1		102379	0		!=			
ANR	102423	Identifier	v		102379	0					
ANR	102424	UnaryOperationExpression	- 1		102379	1					
ANR	102425	UnaryOperator	-		102379	0					
ANR	102426	PrimaryExpression	1		102379	1					
ANR	102427	CompoundStatement		5:14:130:130	102379	1					
ANR	102428	ExpressionStatement	anal -> pcalign = v	390:2:10761:10778	102379	0	True				
ANR	102429	AssignmentExpression	anal -> pcalign = v		102379	0		=			
ANR	102430	PtrMemberAccess	anal -> pcalign		102379	0					
ANR	102431	Identifier	anal		102379	0					
ANR	102432	Identifier	pcalign		102379	1					
ANR	102433	Identifier	v		102379	1					
ANR	102434	ReturnType	R_API void		102379	1					
ANR	102435	Identifier	r_anal_set_cpu		102379	2					
ANR	102436	ParameterList	"RAnal * anal , const char * cpu"		102379	3					
ANR	102437	Parameter	RAnal * anal	385:26:10596:10606	102379	0	True				
ANR	102438	ParameterType	RAnal *		102379	0					
ANR	102439	Identifier	anal		102379	1					
ANR	102440	Parameter	const char * cpu	385:39:10609:10623	102379	1	True				
ANR	102441	ParameterType	const char *		102379	0					
ANR	102442	Identifier	cpu		102379	1					
ANR	102443	CFGEntryNode	ENTRY		102379		True				
ANR	102444	CFGExitNode	EXIT		102379		True				
ANR	102445	Symbol	R_ANAL_ARCHINFO_ALIGN		102379						
ANR	102446	Symbol	* anal		102379						
ANR	102447	Symbol	NULL		102379						
ANR	102448	Symbol	anal		102379						
ANR	102449	Symbol	v		102379						
ANR	102450	Symbol	r_anal_archinfo		102379						
ANR	102451	Symbol	cpu		102379						
ANR	102452	Symbol	anal -> pcalign		102379						
ANR	102453	Symbol	strdup		102379						
ANR	102454	Symbol	anal -> cpu		102379						
ANR	102455	Function	r_anal_set_big_endian	394:0:10786:10920							
ANR	102456	FunctionDef	"r_anal_set_big_endian (RAnal * anal , int bigend)"		102455	0					
ANR	102457	CompoundStatement		394:57:10843:10920	102455	0					
ANR	102458	ExpressionStatement	anal -> big_endian = bigend	395:1:10846:10871	102455	0	True				
ANR	102459	AssignmentExpression	anal -> big_endian = bigend		102455	0		=			
ANR	102460	PtrMemberAccess	anal -> big_endian		102455	0					
ANR	102461	Identifier	anal		102455	0					
ANR	102462	Identifier	big_endian		102455	1					
ANR	102463	Identifier	bigend		102455	1					
ANR	102464	ExpressionStatement	anal -> reg -> big_endian = bigend	396:1:10874:10904	102455	1	True				
ANR	102465	AssignmentExpression	anal -> reg -> big_endian = bigend		102455	0		=			
ANR	102466	PtrMemberAccess	anal -> reg -> big_endian		102455	0					
ANR	102467	PtrMemberAccess	anal -> reg		102455	0					
ANR	102468	Identifier	anal		102455	0					
ANR	102469	Identifier	reg		102455	1					
ANR	102470	Identifier	big_endian		102455	1					
ANR	102471	Identifier	bigend		102455	1					
ANR	102472	ReturnStatement	return true ;	397:1:10907:10918	102455	2	True				
ANR	102473	Identifier	true		102455	0					
ANR	102474	ReturnType	R_API int		102455	1					
ANR	102475	Identifier	r_anal_set_big_endian		102455	2					
ANR	102476	ParameterList	"RAnal * anal , int bigend"		102455	3					
ANR	102477	Parameter	RAnal * anal	394:32:10818:10828	102455	0	True				
ANR	102478	ParameterType	RAnal *		102455	0					
ANR	102479	Identifier	anal		102455	1					
ANR	102480	Parameter	int bigend	394:45:10831:10840	102455	1	True				
ANR	102481	ParameterType	int		102455	0					
ANR	102482	Identifier	bigend		102455	1					
ANR	102483	CFGEntryNode	ENTRY		102455		True				
ANR	102484	CFGExitNode	EXIT		102455		True				
ANR	102485	Symbol	* * anal		102455						
ANR	102486	Symbol	* anal		102455						
ANR	102487	Symbol	anal -> reg		102455						
ANR	102488	Symbol	anal -> reg -> big_endian		102455						
ANR	102489	Symbol	anal		102455						
ANR	102490	Symbol	* anal -> reg		102455						
ANR	102491	Symbol	anal -> big_endian		102455						
ANR	102492	Symbol	true		102455						
ANR	102493	Symbol	bigend		102455						
ANR	102494	Function	r_anal_mask	400:0:10923:11670							
ANR	102495	FunctionDef	"r_anal_mask (RAnal * anal , int size , const ut8 * data , ut64 at)"		102494	0					
ANR	102496	CompoundStatement		400:72:10995:11670	102494	0					
ANR	102497	IdentifierDeclStatement	RAnalOp * op = NULL ;	401:1:10998:11016	102494	0	True				
ANR	102498	IdentifierDecl	* op = NULL		102494	0					
ANR	102499	IdentifierDeclType	RAnalOp *		102494	0					
ANR	102500	Identifier	op		102494	1					
ANR	102501	AssignmentExpression	* op = NULL		102494	2		=			
ANR	102502	Identifier	NULL		102494	0					
ANR	102503	Identifier	NULL		102494	1					
ANR	102504	IdentifierDeclStatement	ut8 * ret = NULL ;	402:1:11019:11034	102494	1	True				
ANR	102505	IdentifierDecl	* ret = NULL		102494	0					
ANR	102506	IdentifierDeclType	ut8 *		102494	0					
ANR	102507	Identifier	ret		102494	1					
ANR	102508	AssignmentExpression	* ret = NULL		102494	2		=			
ANR	102509	Identifier	NULL		102494	0					
ANR	102510	Identifier	NULL		102494	1					
ANR	102511	IdentifierDeclStatement	"int oplen , idx = 0 ;"	403:1:11037:11055	102494	2	True				
ANR	102512	IdentifierDecl	oplen		102494	0					
ANR	102513	IdentifierDeclType	int		102494	0					
ANR	102514	Identifier	oplen		102494	1					
ANR	102515	IdentifierDecl	idx = 0		102494	1					
ANR	102516	IdentifierDeclType	int		102494	0					
ANR	102517	Identifier	idx		102494	1					
ANR	102518	AssignmentExpression	idx = 0		102494	2		=			
ANR	102519	Identifier	idx		102494	0					
ANR	102520	PrimaryExpression	0		102494	1					
ANR	102521	IfStatement	if ( ! data )		102494	3					
ANR	102522	Condition	! data	405:5:11063:11067	102494	0	True				
ANR	102523	UnaryOperationExpression	! data		102494	0					
ANR	102524	UnaryOperator	!		102494	0					
ANR	102525	Identifier	data		102494	1					
ANR	102526	CompoundStatement		6:12:74:74	102494	1					
ANR	102527	ReturnStatement	return NULL ;	406:2:11074:11085	102494	0	True				
ANR	102528	Identifier	NULL		102494	0					
ANR	102529	IfStatement	if ( anal -> cur && anal -> cur -> anal_mask )		102494	4					
ANR	102530	Condition	anal -> cur && anal -> cur -> anal_mask	409:5:11096:11128	102494	0	True				
ANR	102531	AndExpression	anal -> cur && anal -> cur -> anal_mask		102494	0		&&			
ANR	102532	PtrMemberAccess	anal -> cur		102494	0					
ANR	102533	Identifier	anal		102494	0					
ANR	102534	Identifier	cur		102494	1					
ANR	102535	PtrMemberAccess	anal -> cur -> anal_mask		102494	1					
ANR	102536	PtrMemberAccess	anal -> cur		102494	0					
ANR	102537	Identifier	anal		102494	0					
ANR	102538	Identifier	cur		102494	1					
ANR	102539	Identifier	anal_mask		102494	1					
ANR	102540	CompoundStatement		10:40:135:135	102494	1					
ANR	102541	ReturnStatement	"return anal -> cur -> anal_mask ( anal , size , data , at ) ;"	410:2:11135:11185	102494	0	True				
ANR	102542	CallExpression	"anal -> cur -> anal_mask ( anal , size , data , at )"		102494	0					
ANR	102543	Callee	anal -> cur -> anal_mask		102494	0					
ANR	102544	PtrMemberAccess	anal -> cur -> anal_mask		102494	0					
ANR	102545	PtrMemberAccess	anal -> cur		102494	0					
ANR	102546	Identifier	anal		102494	0					
ANR	102547	Identifier	cur		102494	1					
ANR	102548	Identifier	anal_mask		102494	1					
ANR	102549	ArgumentList	anal		102494	1					
ANR	102550	Argument	anal		102494	0					
ANR	102551	Identifier	anal		102494	0					
ANR	102552	Argument	size		102494	1					
ANR	102553	Identifier	size		102494	0					
ANR	102554	Argument	data		102494	2					
ANR	102555	Identifier	data		102494	0					
ANR	102556	Argument	at		102494	3					
ANR	102557	Identifier	at		102494	0					
ANR	102558	IfStatement	if ( ! ( op = r_anal_op_new ( ) ) )		102494	5					
ANR	102559	Condition	! ( op = r_anal_op_new ( ) )	413:5:11196:11219	102494	0	True				
ANR	102560	UnaryOperationExpression	! ( op = r_anal_op_new ( ) )		102494	0					
ANR	102561	UnaryOperator	!		102494	0					
ANR	102562	AssignmentExpression	op = r_anal_op_new ( )		102494	1		=			
ANR	102563	Identifier	op		102494	0					
ANR	102564	CallExpression	r_anal_op_new ( )		102494	1					
ANR	102565	Callee	r_anal_op_new		102494	0					
ANR	102566	Identifier	r_anal_op_new		102494	0					
ANR	102567	ArgumentList			102494	1					
ANR	102568	CompoundStatement		14:31:226:226	102494	1					
ANR	102569	ReturnStatement	return NULL ;	414:2:11226:11237	102494	0	True				
ANR	102570	Identifier	NULL		102494	0					
ANR	102571	IfStatement	if ( ! ( ret = malloc ( size ) ) )		102494	6					
ANR	102572	Condition	! ( ret = malloc ( size ) )	417:5:11248:11269	102494	0	True				
ANR	102573	UnaryOperationExpression	! ( ret = malloc ( size ) )		102494	0					
ANR	102574	UnaryOperator	!		102494	0					
ANR	102575	AssignmentExpression	ret = malloc ( size )		102494	1		=			
ANR	102576	Identifier	ret		102494	0					
ANR	102577	CallExpression	malloc ( size )		102494	1					
ANR	102578	Callee	malloc		102494	0					
ANR	102579	Identifier	malloc		102494	0					
ANR	102580	ArgumentList	size		102494	1					
ANR	102581	Argument	size		102494	0					
ANR	102582	Identifier	size		102494	0					
ANR	102583	CompoundStatement		18:29:276:276	102494	1					
ANR	102584	ExpressionStatement	r_anal_op_free ( op )	418:2:11276:11295	102494	0	True				
ANR	102585	CallExpression	r_anal_op_free ( op )		102494	0					
ANR	102586	Callee	r_anal_op_free		102494	0					
ANR	102587	Identifier	r_anal_op_free		102494	0					
ANR	102588	ArgumentList	op		102494	1					
ANR	102589	Argument	op		102494	0					
ANR	102590	Identifier	op		102494	0					
ANR	102591	ReturnStatement	return NULL ;	419:2:11299:11310	102494	1	True				
ANR	102592	Identifier	NULL		102494	0					
ANR	102593	ExpressionStatement	"memset ( ret , 0xff , size )"	422:1:11317:11341	102494	7	True				
ANR	102594	CallExpression	"memset ( ret , 0xff , size )"		102494	0					
ANR	102595	Callee	memset		102494	0					
ANR	102596	Identifier	memset		102494	0					
ANR	102597	ArgumentList	ret		102494	1					
ANR	102598	Argument	ret		102494	0					
ANR	102599	Identifier	ret		102494	0					
ANR	102600	Argument	0xff		102494	1					
ANR	102601	PrimaryExpression	0xff		102494	0					
ANR	102602	Argument	size		102494	2					
ANR	102603	Identifier	size		102494	0					
ANR	102604	WhileStatement	while ( idx < size )		102494	8					
ANR	102605	Condition	idx < size	424:8:11352:11361	102494	0	True				
ANR	102606	RelationalExpression	idx < size		102494	0		<			
ANR	102607	Identifier	idx		102494	0					
ANR	102608	Identifier	size		102494	1					
ANR	102609	CompoundStatement		25:20:368:368	102494	1					
ANR	102610	IfStatement	"if ( ( oplen = r_anal_op ( anal , op , at , data + idx , size - idx , R_ANAL_OP_MASK_BASIC ) ) < 1 )"		102494	0					
ANR	102611	Condition	"( oplen = r_anal_op ( anal , op , at , data + idx , size - idx , R_ANAL_OP_MASK_BASIC ) ) < 1"	425:6:11372:11455	102494	0	True				
ANR	102612	RelationalExpression	"( oplen = r_anal_op ( anal , op , at , data + idx , size - idx , R_ANAL_OP_MASK_BASIC ) ) < 1"		102494	0		<			
ANR	102613	AssignmentExpression	"oplen = r_anal_op ( anal , op , at , data + idx , size - idx , R_ANAL_OP_MASK_BASIC )"		102494	0		=			
ANR	102614	Identifier	oplen		102494	0					
ANR	102615	CallExpression	"r_anal_op ( anal , op , at , data + idx , size - idx , R_ANAL_OP_MASK_BASIC )"		102494	1					
ANR	102616	Callee	r_anal_op		102494	0					
ANR	102617	Identifier	r_anal_op		102494	0					
ANR	102618	ArgumentList	anal		102494	1					
ANR	102619	Argument	anal		102494	0					
ANR	102620	Identifier	anal		102494	0					
ANR	102621	Argument	op		102494	1					
ANR	102622	Identifier	op		102494	0					
ANR	102623	Argument	at		102494	2					
ANR	102624	Identifier	at		102494	0					
ANR	102625	Argument	data + idx		102494	3					
ANR	102626	AdditiveExpression	data + idx		102494	0		+			
ANR	102627	Identifier	data		102494	0					
ANR	102628	Identifier	idx		102494	1					
ANR	102629	Argument	size - idx		102494	4					
ANR	102630	AdditiveExpression	size - idx		102494	0		-			
ANR	102631	Identifier	size		102494	0					
ANR	102632	Identifier	idx		102494	1					
ANR	102633	Argument	R_ANAL_OP_MASK_BASIC		102494	5					
ANR	102634	Identifier	R_ANAL_OP_MASK_BASIC		102494	0					
ANR	102635	PrimaryExpression	1		102494	1					
ANR	102636	CompoundStatement		26:92:462:462	102494	1					
ANR	102637	BreakStatement	break ;	426:3:11463:11468	102494	0	True				
ANR	102638	IfStatement	if ( ( op -> ptr != UT64_MAX || op -> jump != UT64_MAX ) && op -> nopcode != 0 )		102494	1					
ANR	102639	Condition	( op -> ptr != UT64_MAX || op -> jump != UT64_MAX ) && op -> nopcode != 0	428:6:11480:11544	102494	0	True				
ANR	102640	AndExpression	( op -> ptr != UT64_MAX || op -> jump != UT64_MAX ) && op -> nopcode != 0		102494	0		&&			
ANR	102641	OrExpression	op -> ptr != UT64_MAX || op -> jump != UT64_MAX		102494	0		||			
ANR	102642	EqualityExpression	op -> ptr != UT64_MAX		102494	0		!=			
ANR	102643	PtrMemberAccess	op -> ptr		102494	0					
ANR	102644	Identifier	op		102494	0					
ANR	102645	Identifier	ptr		102494	1					
ANR	102646	Identifier	UT64_MAX		102494	1					
ANR	102647	EqualityExpression	op -> jump != UT64_MAX		102494	1		!=			
ANR	102648	PtrMemberAccess	op -> jump		102494	0					
ANR	102649	Identifier	op		102494	0					
ANR	102650	Identifier	jump		102494	1					
ANR	102651	Identifier	UT64_MAX		102494	1					
ANR	102652	EqualityExpression	op -> nopcode != 0		102494	1		!=			
ANR	102653	PtrMemberAccess	op -> nopcode		102494	0					
ANR	102654	Identifier	op		102494	0					
ANR	102655	Identifier	nopcode		102494	1					
ANR	102656	PrimaryExpression	0		102494	1					
ANR	102657	CompoundStatement		29:73:551:551	102494	1					
ANR	102658	ExpressionStatement	"memset ( ret + idx + op -> nopcode , 0 , oplen - op -> nopcode )"	429:3:11552:11608	102494	0	True				
ANR	102659	CallExpression	"memset ( ret + idx + op -> nopcode , 0 , oplen - op -> nopcode )"		102494	0					
ANR	102660	Callee	memset		102494	0					
ANR	102661	Identifier	memset		102494	0					
ANR	102662	ArgumentList	ret + idx + op -> nopcode		102494	1					
ANR	102663	Argument	ret + idx + op -> nopcode		102494	0					
ANR	102664	AdditiveExpression	ret + idx + op -> nopcode		102494	0		+			
ANR	102665	Identifier	ret		102494	0					
ANR	102666	AdditiveExpression	idx + op -> nopcode		102494	1		+			
ANR	102667	Identifier	idx		102494	0					
ANR	102668	PtrMemberAccess	op -> nopcode		102494	1					
ANR	102669	Identifier	op		102494	0					
ANR	102670	Identifier	nopcode		102494	1					
ANR	102671	Argument	0		102494	1					
ANR	102672	PrimaryExpression	0		102494	0					
ANR	102673	Argument	oplen - op -> nopcode		102494	2					
ANR	102674	AdditiveExpression	oplen - op -> nopcode		102494	0		-			
ANR	102675	Identifier	oplen		102494	0					
ANR	102676	PtrMemberAccess	op -> nopcode		102494	1					
ANR	102677	Identifier	op		102494	0					
ANR	102678	Identifier	nopcode		102494	1					
ANR	102679	ExpressionStatement	idx += oplen	431:2:11616:11628	102494	2	True				
ANR	102680	AssignmentExpression	idx += oplen		102494	0		+=			
ANR	102681	Identifier	idx		102494	0					
ANR	102682	Identifier	oplen		102494	1					
ANR	102683	ExpressionStatement	r_anal_op_free ( op )	434:1:11635:11654	102494	9	True				
ANR	102684	CallExpression	r_anal_op_free ( op )		102494	0					
ANR	102685	Callee	r_anal_op_free		102494	0					
ANR	102686	Identifier	r_anal_op_free		102494	0					
ANR	102687	ArgumentList	op		102494	1					
ANR	102688	Argument	op		102494	0					
ANR	102689	Identifier	op		102494	0					
ANR	102690	ReturnStatement	return ret ;	436:1:11658:11668	102494	10	True				
ANR	102691	Identifier	ret		102494	0					
ANR	102692	ReturnType	R_API ut8 *		102494	1					
ANR	102693	Identifier	r_anal_mask		102494	2					
ANR	102694	ParameterList	"RAnal * anal , int size , const ut8 * data , ut64 at"		102494	3					
ANR	102695	Parameter	RAnal * anal	400:23:10946:10956	102494	0	True				
ANR	102696	ParameterType	RAnal *		102494	0					
ANR	102697	Identifier	anal		102494	1					
ANR	102698	Parameter	int size	400:36:10959:10966	102494	1	True				
ANR	102699	ParameterType	int		102494	0					
ANR	102700	Identifier	size		102494	1					
ANR	102701	Parameter	const ut8 * data	400:46:10969:10983	102494	2	True				
ANR	102702	ParameterType	const ut8 *		102494	0					
ANR	102703	Identifier	data		102494	1					
ANR	102704	Parameter	ut64 at	400:63:10986:10992	102494	3	True				
ANR	102705	ParameterType	ut64		102494	0					
ANR	102706	Identifier	at		102494	1					
ANR	102707	CFGEntryNode	ENTRY		102494		True				
ANR	102708	CFGExitNode	EXIT		102494		True				
ANR	102709	Symbol	ret		102494						
ANR	102710	Symbol	op		102494						
ANR	102711	Symbol	* anal -> cur		102494						
ANR	102712	Symbol	malloc		102494						
ANR	102713	Symbol	NULL		102494						
ANR	102714	Symbol	data		102494						
ANR	102715	Symbol	oplen		102494						
ANR	102716	Symbol	* op		102494						
ANR	102717	Symbol	r_anal_op_new		102494						
ANR	102718	Symbol	op -> ptr		102494						
ANR	102719	Symbol	R_ANAL_OP_MASK_BASIC		102494						
ANR	102720	Symbol	* * anal		102494						
ANR	102721	Symbol	* anal		102494						
ANR	102722	Symbol	at		102494						
ANR	102723	Symbol	size		102494						
ANR	102724	Symbol	anal		102494						
ANR	102725	Symbol	anal -> cur -> anal_mask		102494						
ANR	102726	Symbol	anal -> cur		102494						
ANR	102727	Symbol	op -> jump		102494						
ANR	102728	Symbol	idx		102494						
ANR	102729	Symbol	op -> nopcode		102494						
ANR	102730	Symbol	UT64_MAX		102494						
ANR	102731	Symbol	r_anal_op		102494						
ANR	102732	Function	r_anal_trace_bb	439:0:11673:11993							
ANR	102733	FunctionDef	"r_anal_trace_bb (RAnal * anal , ut64 addr)"		102732	0					
ANR	102734	CompoundStatement		439:51:11724:11993	102732	0					
ANR	102735	IdentifierDeclStatement	RAnalBlock * bbi ;	440:1:11727:11742	102732	0	True				
ANR	102736	IdentifierDecl	* bbi		102732	0					
ANR	102737	IdentifierDeclType	RAnalBlock *		102732	0					
ANR	102738	Identifier	bbi		102732	1					
ANR	102739	IdentifierDeclStatement	RAnalFunction * fcni ;	441:1:11745:11764	102732	1	True				
ANR	102740	IdentifierDecl	* fcni		102732	0					
ANR	102741	IdentifierDeclType	RAnalFunction *		102732	0					
ANR	102742	Identifier	fcni		102732	1					
ANR	102743	IdentifierDeclStatement	RListIter * iter2 ;	442:1:11767:11783	102732	2	True				
ANR	102744	IdentifierDecl	* iter2		102732	0					
ANR	102745	IdentifierDeclType	RListIter *		102732	0					
ANR	102746	Identifier	iter2		102732	1					
ANR	102747	ExpressionStatement	"fcni = r_anal_get_fcn_in ( anal , addr , 0 )"	443:1:11786:11826	102732	3	True				
ANR	102748	AssignmentExpression	"fcni = r_anal_get_fcn_in ( anal , addr , 0 )"		102732	0		=			
ANR	102749	Identifier	fcni		102732	0					
ANR	102750	CallExpression	"r_anal_get_fcn_in ( anal , addr , 0 )"		102732	1					
ANR	102751	Callee	r_anal_get_fcn_in		102732	0					
ANR	102752	Identifier	r_anal_get_fcn_in		102732	0					
ANR	102753	ArgumentList	anal		102732	1					
ANR	102754	Argument	anal		102732	0					
ANR	102755	Identifier	anal		102732	0					
ANR	102756	Argument	addr		102732	1					
ANR	102757	Identifier	addr		102732	0					
ANR	102758	Argument	0		102732	2					
ANR	102759	PrimaryExpression	0		102732	0					
ANR	102760	IfStatement	if ( fcni )		102732	4					
ANR	102761	Condition	fcni	444:5:11833:11836	102732	0	True				
ANR	102762	Identifier	fcni		102732	0					
ANR	102763	CompoundStatement		6:11:114:114	102732	1					
ANR	102764	Statement	r_list_foreach	445:2:11843:11856	102732	0	True				
ANR	102765	Statement	(	445:17:11858:11858	102732	1	True				
ANR	102766	Statement	fcni	445:18:11859:11862	102732	2	True				
ANR	102767	Statement	->	445:22:11863:11864	102732	3	True				
ANR	102768	Statement	bbs	445:24:11865:11867	102732	4	True				
ANR	102769	Statement	","	445:27:11868:11868	102732	5	True				
ANR	102770	Statement	iter2	445:29:11870:11874	102732	6	True				
ANR	102771	Statement	","	445:34:11875:11875	102732	7	True				
ANR	102772	Statement	bbi	445:36:11877:11879	102732	8	True				
ANR	102773	Statement	)	445:39:11880:11880	102732	9	True				
ANR	102774	CompoundStatement		7:41:157:157	102732	10					
ANR	102775	IfStatement	if ( addr >= bbi -> addr && addr < ( bbi -> addr + bbi -> size ) )		102732	0					
ANR	102776	Condition	addr >= bbi -> addr && addr < ( bbi -> addr + bbi -> size )	446:7:11891:11941	102732	0	True				
ANR	102777	AndExpression	addr >= bbi -> addr && addr < ( bbi -> addr + bbi -> size )		102732	0		&&			
ANR	102778	RelationalExpression	addr >= bbi -> addr		102732	0		>=			
ANR	102779	Identifier	addr		102732	0					
ANR	102780	PtrMemberAccess	bbi -> addr		102732	1					
ANR	102781	Identifier	bbi		102732	0					
ANR	102782	Identifier	addr		102732	1					
ANR	102783	RelationalExpression	addr < ( bbi -> addr + bbi -> size )		102732	1		<			
ANR	102784	Identifier	addr		102732	0					
ANR	102785	AdditiveExpression	bbi -> addr + bbi -> size		102732	1		+			
ANR	102786	PtrMemberAccess	bbi -> addr		102732	0					
ANR	102787	Identifier	bbi		102732	0					
ANR	102788	Identifier	addr		102732	1					
ANR	102789	PtrMemberAccess	bbi -> size		102732	1					
ANR	102790	Identifier	bbi		102732	0					
ANR	102791	Identifier	size		102732	1					
ANR	102792	CompoundStatement		8:60:219:219	102732	1					
ANR	102793	ExpressionStatement	bbi -> traced = true	447:4:11950:11968	102732	0	True				
ANR	102794	AssignmentExpression	bbi -> traced = true		102732	0		=			
ANR	102795	PtrMemberAccess	bbi -> traced		102732	0					
ANR	102796	Identifier	bbi		102732	0					
ANR	102797	Identifier	traced		102732	1					
ANR	102798	Identifier	true		102732	1					
ANR	102799	BreakStatement	break ;	448:4:11974:11979	102732	1	True				
ANR	102800	ReturnType	R_API void		102732	1					
ANR	102801	Identifier	r_anal_trace_bb		102732	2					
ANR	102802	ParameterList	"RAnal * anal , ut64 addr"		102732	3					
ANR	102803	Parameter	RAnal * anal	439:27:11700:11710	102732	0	True				
ANR	102804	ParameterType	RAnal *		102732	0					
ANR	102805	Identifier	anal		102732	1					
ANR	102806	Parameter	ut64 addr	439:40:11713:11721	102732	1	True				
ANR	102807	ParameterType	ut64		102732	0					
ANR	102808	Identifier	addr		102732	1					
ANR	102809	CFGEntryNode	ENTRY		102732		True				
ANR	102810	CFGExitNode	EXIT		102732		True				
ANR	102811	CFGErrorNode	ERROR		102732		True				
ANR	102812	Symbol	r_anal_get_fcn_in		102732						
ANR	102813	Symbol	bbi -> traced		102732						
ANR	102814	Symbol	anal		102732						
ANR	102815	Symbol	fcni		102732						
ANR	102816	Symbol	iter2		102732						
ANR	102817	Symbol	bbi -> size		102732						
ANR	102818	Symbol	bbi		102732						
ANR	102819	Symbol	true		102732						
ANR	102820	Symbol	addr		102732						
ANR	102821	Symbol	* bbi		102732						
ANR	102822	Symbol	bbi -> addr		102732						
ANR	102823	Function	r_anal_colorize_bb	454:0:11996:12165							
ANR	102824	FunctionDef	"r_anal_colorize_bb (RAnal * anal , ut64 addr , ut32 color)"		102823	0					
ANR	102825	CompoundStatement		454:66:12062:12165	102823	0					
ANR	102826	IdentifierDeclStatement	RAnalBlock * bbi ;	455:1:12065:12080	102823	0	True				
ANR	102827	IdentifierDecl	* bbi		102823	0					
ANR	102828	IdentifierDeclType	RAnalBlock *		102823	0					
ANR	102829	Identifier	bbi		102823	1					
ANR	102830	ExpressionStatement	"bbi = r_anal_bb_from_offset ( anal , addr )"	456:1:12083:12123	102823	1	True				
ANR	102831	AssignmentExpression	"bbi = r_anal_bb_from_offset ( anal , addr )"		102823	0		=			
ANR	102832	Identifier	bbi		102823	0					
ANR	102833	CallExpression	"r_anal_bb_from_offset ( anal , addr )"		102823	1					
ANR	102834	Callee	r_anal_bb_from_offset		102823	0					
ANR	102835	Identifier	r_anal_bb_from_offset		102823	0					
ANR	102836	ArgumentList	anal		102823	1					
ANR	102837	Argument	anal		102823	0					
ANR	102838	Identifier	anal		102823	0					
ANR	102839	Argument	addr		102823	1					
ANR	102840	Identifier	addr		102823	0					
ANR	102841	IfStatement	if ( bbi )		102823	2					
ANR	102842	Condition	bbi	457:5:12130:12132	102823	0	True				
ANR	102843	Identifier	bbi		102823	0					
ANR	102844	CompoundStatement		4:10:72:72	102823	1					
ANR	102845	ExpressionStatement	bbi -> colorize = color	458:2:12139:12160	102823	0	True				
ANR	102846	AssignmentExpression	bbi -> colorize = color		102823	0		=			
ANR	102847	PtrMemberAccess	bbi -> colorize		102823	0					
ANR	102848	Identifier	bbi		102823	0					
ANR	102849	Identifier	colorize		102823	1					
ANR	102850	Identifier	color		102823	1					
ANR	102851	ReturnType	R_API void		102823	1					
ANR	102852	Identifier	r_anal_colorize_bb		102823	2					
ANR	102853	ParameterList	"RAnal * anal , ut64 addr , ut32 color"		102823	3					
ANR	102854	Parameter	RAnal * anal	454:30:12026:12036	102823	0	True				
ANR	102855	ParameterType	RAnal *		102823	0					
ANR	102856	Identifier	anal		102823	1					
ANR	102857	Parameter	ut64 addr	454:43:12039:12047	102823	1	True				
ANR	102858	ParameterType	ut64		102823	0					
ANR	102859	Identifier	addr		102823	1					
ANR	102860	Parameter	ut32 color	454:54:12050:12059	102823	2	True				
ANR	102861	ParameterType	ut32		102823	0					
ANR	102862	Identifier	color		102823	1					
ANR	102863	CFGEntryNode	ENTRY		102823		True				
ANR	102864	CFGExitNode	EXIT		102823		True				
ANR	102865	Symbol	r_anal_bb_from_offset		102823						
ANR	102866	Symbol	color		102823						
ANR	102867	Symbol	anal		102823						
ANR	102868	Symbol	bbi		102823						
ANR	102869	Symbol	addr		102823						
ANR	102870	Symbol	* bbi		102823						
ANR	102871	Symbol	bbi -> colorize		102823						
ANR	102872	Function	r_anal_get_fcns	462:0:12168:12297							
ANR	102873	FunctionDef	r_anal_get_fcns (RAnal * anal)		102872	0					
ANR	102874	CompoundStatement		462:43:12211:12297	102872	0					
ANR	102875	ExpressionStatement	anal -> fcns -> free = NULL	464:1:12252:12275	102872	0	True				
ANR	102876	AssignmentExpression	anal -> fcns -> free = NULL		102872	0		=			
ANR	102877	PtrMemberAccess	anal -> fcns -> free		102872	0					
ANR	102878	PtrMemberAccess	anal -> fcns		102872	0					
ANR	102879	Identifier	anal		102872	0					
ANR	102880	Identifier	fcns		102872	1					
ANR	102881	Identifier	free		102872	1					
ANR	102882	Identifier	NULL		102872	1					
ANR	102883	ReturnStatement	return anal -> fcns ;	465:1:12278:12295	102872	1	True				
ANR	102884	PtrMemberAccess	anal -> fcns		102872	0					
ANR	102885	Identifier	anal		102872	0					
ANR	102886	Identifier	fcns		102872	1					
ANR	102887	ReturnType	R_API RList *		102872	1					
ANR	102888	Identifier	r_anal_get_fcns		102872	2					
ANR	102889	ParameterList	RAnal * anal		102872	3					
ANR	102890	Parameter	RAnal * anal	462:30:12198:12208	102872	0	True				
ANR	102891	ParameterType	RAnal *		102872	0					
ANR	102892	Identifier	anal		102872	1					
ANR	102893	CFGEntryNode	ENTRY		102872		True				
ANR	102894	CFGExitNode	EXIT		102872		True				
ANR	102895	Symbol	* * anal		102872						
ANR	102896	Symbol	* anal		102872						
ANR	102897	Symbol	NULL		102872						
ANR	102898	Symbol	anal -> fcns -> free		102872						
ANR	102899	Symbol	anal		102872						
ANR	102900	Symbol	* anal -> fcns		102872						
ANR	102901	Symbol	anal -> fcns		102872						
ANR	102902	Function	r_anal_op_hexstr	468:0:12300:12647							
ANR	102903	FunctionDef	"r_anal_op_hexstr (RAnal * anal , ut64 addr , const char * str)"		102902	0					
ANR	102904	CompoundStatement		468:73:12373:12647	102902	0					
ANR	102905	IdentifierDeclStatement	RAnalOp * op = R_NEW0 ( RAnalOp ) ;	469:1:12376:12406	102902	0	True				
ANR	102906	IdentifierDecl	* op = R_NEW0 ( RAnalOp )		102902	0					
ANR	102907	IdentifierDeclType	RAnalOp *		102902	0					
ANR	102908	Identifier	op		102902	1					
ANR	102909	AssignmentExpression	* op = R_NEW0 ( RAnalOp )		102902	2		=			
ANR	102910	Identifier	op		102902	0					
ANR	102911	CallExpression	R_NEW0 ( RAnalOp )		102902	1					
ANR	102912	Callee	R_NEW0		102902	0					
ANR	102913	Identifier	R_NEW0		102902	0					
ANR	102914	ArgumentList	RAnalOp		102902	1					
ANR	102915	Argument	RAnalOp		102902	0					
ANR	102916	Identifier	RAnalOp		102902	0					
ANR	102917	IfStatement	if ( ! op )		102902	1					
ANR	102918	Condition	! op	470:5:12413:12415	102902	0	True				
ANR	102919	UnaryOperationExpression	! op		102902	0					
ANR	102920	UnaryOperator	!		102902	0					
ANR	102921	Identifier	op		102902	1					
ANR	102922	CompoundStatement		3:10:44:44	102902	1					
ANR	102923	ReturnStatement	return NULL ;	471:2:12422:12433	102902	0	True				
ANR	102924	Identifier	NULL		102902	0					
ANR	102925	IdentifierDeclStatement	"ut8 * buf = calloc ( 1 , strlen ( str ) + 1 ) ;"	473:1:12439:12478	102902	2	True				
ANR	102926	IdentifierDecl	"* buf = calloc ( 1 , strlen ( str ) + 1 )"		102902	0					
ANR	102927	IdentifierDeclType	ut8 *		102902	0					
ANR	102928	Identifier	buf		102902	1					
ANR	102929	AssignmentExpression	"* buf = calloc ( 1 , strlen ( str ) + 1 )"		102902	2		=			
ANR	102930	Identifier	buf		102902	0					
ANR	102931	CallExpression	"calloc ( 1 , strlen ( str ) + 1 )"		102902	1					
ANR	102932	Callee	calloc		102902	0					
ANR	102933	Identifier	calloc		102902	0					
ANR	102934	ArgumentList	1		102902	1					
ANR	102935	Argument	1		102902	0					
ANR	102936	PrimaryExpression	1		102902	0					
ANR	102937	Argument	strlen ( str ) + 1		102902	1					
ANR	102938	AdditiveExpression	strlen ( str ) + 1		102902	0		+			
ANR	102939	CallExpression	strlen ( str )		102902	0					
ANR	102940	Callee	strlen		102902	0					
ANR	102941	Identifier	strlen		102902	0					
ANR	102942	ArgumentList	str		102902	1					
ANR	102943	Argument	str		102902	0					
ANR	102944	Identifier	str		102902	0					
ANR	102945	PrimaryExpression	1		102902	1					
ANR	102946	IfStatement	if ( ! buf )		102902	3					
ANR	102947	Condition	! buf	474:5:12485:12488	102902	0	True				
ANR	102948	UnaryOperationExpression	! buf		102902	0					
ANR	102949	UnaryOperator	!		102902	0					
ANR	102950	Identifier	buf		102902	1					
ANR	102951	CompoundStatement		7:11:117:117	102902	1					
ANR	102952	ExpressionStatement	free ( op )	475:2:12495:12504	102902	0	True				
ANR	102953	CallExpression	free ( op )		102902	0					
ANR	102954	Callee	free		102902	0					
ANR	102955	Identifier	free		102902	0					
ANR	102956	ArgumentList	op		102902	1					
ANR	102957	Argument	op		102902	0					
ANR	102958	Identifier	op		102902	0					
ANR	102959	ReturnStatement	return NULL ;	476:2:12508:12519	102902	1	True				
ANR	102960	Identifier	NULL		102902	0					
ANR	102961	IdentifierDeclStatement	"int len = r_hex_str2bin ( str , buf ) ;"	478:1:12525:12559	102902	4	True				
ANR	102962	IdentifierDecl	"len = r_hex_str2bin ( str , buf )"		102902	0					
ANR	102963	IdentifierDeclType	int		102902	0					
ANR	102964	Identifier	len		102902	1					
ANR	102965	AssignmentExpression	"len = r_hex_str2bin ( str , buf )"		102902	2		=			
ANR	102966	Identifier	len		102902	0					
ANR	102967	CallExpression	"r_hex_str2bin ( str , buf )"		102902	1					
ANR	102968	Callee	r_hex_str2bin		102902	0					
ANR	102969	Identifier	r_hex_str2bin		102902	0					
ANR	102970	ArgumentList	str		102902	1					
ANR	102971	Argument	str		102902	0					
ANR	102972	Identifier	str		102902	0					
ANR	102973	Argument	buf		102902	1					
ANR	102974	Identifier	buf		102902	0					
ANR	102975	ExpressionStatement	"r_anal_op ( anal , op , addr , buf , len , R_ANAL_OP_MASK_BASIC )"	479:1:12562:12620	102902	5	True				
ANR	102976	CallExpression	"r_anal_op ( anal , op , addr , buf , len , R_ANAL_OP_MASK_BASIC )"		102902	0					
ANR	102977	Callee	r_anal_op		102902	0					
ANR	102978	Identifier	r_anal_op		102902	0					
ANR	102979	ArgumentList	anal		102902	1					
ANR	102980	Argument	anal		102902	0					
ANR	102981	Identifier	anal		102902	0					
ANR	102982	Argument	op		102902	1					
ANR	102983	Identifier	op		102902	0					
ANR	102984	Argument	addr		102902	2					
ANR	102985	Identifier	addr		102902	0					
ANR	102986	Argument	buf		102902	3					
ANR	102987	Identifier	buf		102902	0					
ANR	102988	Argument	len		102902	4					
ANR	102989	Identifier	len		102902	0					
ANR	102990	Argument	R_ANAL_OP_MASK_BASIC		102902	5					
ANR	102991	Identifier	R_ANAL_OP_MASK_BASIC		102902	0					
ANR	102992	ExpressionStatement	free ( buf )	480:1:12623:12633	102902	6	True				
ANR	102993	CallExpression	free ( buf )		102902	0					
ANR	102994	Callee	free		102902	0					
ANR	102995	Identifier	free		102902	0					
ANR	102996	ArgumentList	buf		102902	1					
ANR	102997	Argument	buf		102902	0					
ANR	102998	Identifier	buf		102902	0					
ANR	102999	ReturnStatement	return op ;	481:1:12636:12645	102902	7	True				
ANR	103000	Identifier	op		102902	0					
ANR	103001	ReturnType	R_API RAnalOp *		102902	1					
ANR	103002	Identifier	r_anal_op_hexstr		102902	2					
ANR	103003	ParameterList	"RAnal * anal , ut64 addr , const char * str"		102902	3					
ANR	103004	Parameter	RAnal * anal	468:32:12332:12342	102902	0	True				
ANR	103005	ParameterType	RAnal *		102902	0					
ANR	103006	Identifier	anal		102902	1					
ANR	103007	Parameter	ut64 addr	468:45:12345:12353	102902	1	True				
ANR	103008	ParameterType	ut64		102902	0					
ANR	103009	Identifier	addr		102902	1					
ANR	103010	Parameter	const char * str	468:56:12356:12370	102902	2	True				
ANR	103011	ParameterType	const char *		102902	0					
ANR	103012	Identifier	str		102902	1					
ANR	103013	CFGEntryNode	ENTRY		102902		True				
ANR	103014	CFGExitNode	EXIT		102902		True				
ANR	103015	Symbol	op		102902						
ANR	103016	Symbol	NULL		102902						
ANR	103017	Symbol	calloc		102902						
ANR	103018	Symbol	R_ANAL_OP_MASK_BASIC		102902						
ANR	103019	Symbol	RAnalOp		102902						
ANR	103020	Symbol	str		102902						
ANR	103021	Symbol	R_NEW0		102902						
ANR	103022	Symbol	strlen		102902						
ANR	103023	Symbol	buf		102902						
ANR	103024	Symbol	len		102902						
ANR	103025	Symbol	anal		102902						
ANR	103026	Symbol	addr		102902						
ANR	103027	Symbol	r_hex_str2bin		102902						
ANR	103028	Function	r_anal_op_is_eob	484:0:12650:13008							
ANR	103029	FunctionDef	r_anal_op_is_eob (RAnalOp * op)		103028	0					
ANR	103030	CompoundStatement		484:42:12692:13008	103028	0					
ANR	103031	IfStatement	if ( op -> eob )		103028	0					
ANR	103032	Condition	op -> eob	485:5:12699:12705	103028	0	True				
ANR	103033	PtrMemberAccess	op -> eob		103028	0					
ANR	103034	Identifier	op		103028	0					
ANR	103035	Identifier	eob		103028	1					
ANR	103036	CompoundStatement		2:14:15:15	103028	1					
ANR	103037	ReturnStatement	return true ;	486:2:12712:12723	103028	0	True				
ANR	103038	Identifier	true		103028	0					
ANR	103039	SwitchStatement	switch ( op -> type )		103028	1					
ANR	103040	Condition	op -> type	488:9:12737:12744	103028	0	True				
ANR	103041	PtrMemberAccess	op -> type		103028	0					
ANR	103042	Identifier	op		103028	0					
ANR	103043	Identifier	type		103028	1					
ANR	103044	CompoundStatement		5:19:54:54	103028	1					
ANR	103045	Label	case R_ANAL_OP_TYPE_JMP :	489:1:12750:12773	103028	0	True				
ANR	103046	Identifier	R_ANAL_OP_TYPE_JMP		103028	0					
ANR	103047	Label	case R_ANAL_OP_TYPE_UJMP :	490:1:12776:12800	103028	1	True				
ANR	103048	Identifier	R_ANAL_OP_TYPE_UJMP		103028	0					
ANR	103049	Label	case R_ANAL_OP_TYPE_RJMP :	491:1:12803:12827	103028	2	True				
ANR	103050	Identifier	R_ANAL_OP_TYPE_RJMP		103028	0					
ANR	103051	Label	case R_ANAL_OP_TYPE_IJMP :	492:1:12830:12854	103028	3	True				
ANR	103052	Identifier	R_ANAL_OP_TYPE_IJMP		103028	0					
ANR	103053	Label	case R_ANAL_OP_TYPE_IRJMP :	493:1:12857:12882	103028	4	True				
ANR	103054	Identifier	R_ANAL_OP_TYPE_IRJMP		103028	0					
ANR	103055	Label	case R_ANAL_OP_TYPE_CJMP :	494:1:12885:12909	103028	5	True				
ANR	103056	Identifier	R_ANAL_OP_TYPE_CJMP		103028	0					
ANR	103057	Label	case R_ANAL_OP_TYPE_RET :	495:1:12912:12935	103028	6	True				
ANR	103058	Identifier	R_ANAL_OP_TYPE_RET		103028	0					
ANR	103059	Label	case R_ANAL_OP_TYPE_TRAP :	496:1:12938:12962	103028	7	True				
ANR	103060	Identifier	R_ANAL_OP_TYPE_TRAP		103028	0					
ANR	103061	ReturnStatement	return true ;	497:2:12966:12977	103028	8	True				
ANR	103062	Identifier	true		103028	0					
ANR	103063	Label	default :	498:1:12980:12987	103028	9	True				
ANR	103064	Identifier	default		103028	0					
ANR	103065	ReturnStatement	return false ;	499:2:12991:13003	103028	10	True				
ANR	103066	Identifier	false		103028	0					
ANR	103067	ReturnType	R_API bool		103028	1					
ANR	103068	Identifier	r_anal_op_is_eob		103028	2					
ANR	103069	ParameterList	RAnalOp * op		103028	3					
ANR	103070	Parameter	RAnalOp * op	484:29:12679:12689	103028	0	True				
ANR	103071	ParameterType	RAnalOp *		103028	0					
ANR	103072	Identifier	op		103028	1					
ANR	103073	CFGEntryNode	ENTRY		103028		True				
ANR	103074	CFGExitNode	EXIT		103028		True				
ANR	103075	Symbol	op		103028						
ANR	103076	Symbol	op -> eob		103028						
ANR	103077	Symbol	* op		103028						
ANR	103078	Symbol	op -> type		103028						
ANR	103079	Symbol	true		103028						
ANR	103080	Symbol	false		103028						
ANR	103081	Function	r_anal_purge	503:0:13011:13462							
ANR	103082	FunctionDef	r_anal_purge (RAnal * anal)		103081	0					
ANR	103083	CompoundStatement		503:37:13048:13462	103081	0					
ANR	103084	ExpressionStatement	sdb_reset ( anal -> sdb_fcns )	504:1:13051:13077	103081	0	True				
ANR	103085	CallExpression	sdb_reset ( anal -> sdb_fcns )		103081	0					
ANR	103086	Callee	sdb_reset		103081	0					
ANR	103087	Identifier	sdb_reset		103081	0					
ANR	103088	ArgumentList	anal -> sdb_fcns		103081	1					
ANR	103089	Argument	anal -> sdb_fcns		103081	0					
ANR	103090	PtrMemberAccess	anal -> sdb_fcns		103081	0					
ANR	103091	Identifier	anal		103081	0					
ANR	103092	Identifier	sdb_fcns		103081	1					
ANR	103093	ExpressionStatement	sdb_reset ( anal -> sdb_meta )	505:1:13080:13106	103081	1	True				
ANR	103094	CallExpression	sdb_reset ( anal -> sdb_meta )		103081	0					
ANR	103095	Callee	sdb_reset		103081	0					
ANR	103096	Identifier	sdb_reset		103081	0					
ANR	103097	ArgumentList	anal -> sdb_meta		103081	1					
ANR	103098	Argument	anal -> sdb_meta		103081	0					
ANR	103099	PtrMemberAccess	anal -> sdb_meta		103081	0					
ANR	103100	Identifier	anal		103081	0					
ANR	103101	Identifier	sdb_meta		103081	1					
ANR	103102	ExpressionStatement	sdb_reset ( anal -> sdb_hints )	506:1:13109:13136	103081	2	True				
ANR	103103	CallExpression	sdb_reset ( anal -> sdb_hints )		103081	0					
ANR	103104	Callee	sdb_reset		103081	0					
ANR	103105	Identifier	sdb_reset		103081	0					
ANR	103106	ArgumentList	anal -> sdb_hints		103081	1					
ANR	103107	Argument	anal -> sdb_hints		103081	0					
ANR	103108	PtrMemberAccess	anal -> sdb_hints		103081	0					
ANR	103109	Identifier	anal		103081	0					
ANR	103110	Identifier	sdb_hints		103081	1					
ANR	103111	ExpressionStatement	sdb_reset ( anal -> sdb_types )	507:1:13139:13166	103081	3	True				
ANR	103112	CallExpression	sdb_reset ( anal -> sdb_types )		103081	0					
ANR	103113	Callee	sdb_reset		103081	0					
ANR	103114	Identifier	sdb_reset		103081	0					
ANR	103115	ArgumentList	anal -> sdb_types		103081	1					
ANR	103116	Argument	anal -> sdb_types		103081	0					
ANR	103117	PtrMemberAccess	anal -> sdb_types		103081	0					
ANR	103118	Identifier	anal		103081	0					
ANR	103119	Identifier	sdb_types		103081	1					
ANR	103120	ExpressionStatement	sdb_reset ( anal -> sdb_zigns )	508:1:13169:13196	103081	4	True				
ANR	103121	CallExpression	sdb_reset ( anal -> sdb_zigns )		103081	0					
ANR	103122	Callee	sdb_reset		103081	0					
ANR	103123	Identifier	sdb_reset		103081	0					
ANR	103124	ArgumentList	anal -> sdb_zigns		103081	1					
ANR	103125	Argument	anal -> sdb_zigns		103081	0					
ANR	103126	PtrMemberAccess	anal -> sdb_zigns		103081	0					
ANR	103127	Identifier	anal		103081	0					
ANR	103128	Identifier	sdb_zigns		103081	1					
ANR	103129	ExpressionStatement	sdb_reset ( anal -> sdb_classes )	509:1:13199:13228	103081	5	True				
ANR	103130	CallExpression	sdb_reset ( anal -> sdb_classes )		103081	0					
ANR	103131	Callee	sdb_reset		103081	0					
ANR	103132	Identifier	sdb_reset		103081	0					
ANR	103133	ArgumentList	anal -> sdb_classes		103081	1					
ANR	103134	Argument	anal -> sdb_classes		103081	0					
ANR	103135	PtrMemberAccess	anal -> sdb_classes		103081	0					
ANR	103136	Identifier	anal		103081	0					
ANR	103137	Identifier	sdb_classes		103081	1					
ANR	103138	ExpressionStatement	sdb_reset ( anal -> sdb_classes_attrs )	510:1:13231:13266	103081	6	True				
ANR	103139	CallExpression	sdb_reset ( anal -> sdb_classes_attrs )		103081	0					
ANR	103140	Callee	sdb_reset		103081	0					
ANR	103141	Identifier	sdb_reset		103081	0					
ANR	103142	ArgumentList	anal -> sdb_classes_attrs		103081	1					
ANR	103143	Argument	anal -> sdb_classes_attrs		103081	0					
ANR	103144	PtrMemberAccess	anal -> sdb_classes_attrs		103081	0					
ANR	103145	Identifier	anal		103081	0					
ANR	103146	Identifier	sdb_classes_attrs		103081	1					
ANR	103147	ExpressionStatement	r_list_free ( anal -> fcns )	511:1:13269:13293	103081	7	True				
ANR	103148	CallExpression	r_list_free ( anal -> fcns )		103081	0					
ANR	103149	Callee	r_list_free		103081	0					
ANR	103150	Identifier	r_list_free		103081	0					
ANR	103151	ArgumentList	anal -> fcns		103081	1					
ANR	103152	Argument	anal -> fcns		103081	0					
ANR	103153	PtrMemberAccess	anal -> fcns		103081	0					
ANR	103154	Identifier	anal		103081	0					
ANR	103155	Identifier	fcns		103081	1					
ANR	103156	ExpressionStatement	anal -> fcns = r_anal_fcn_list_new ( )	512:1:13296:13331	103081	8	True				
ANR	103157	AssignmentExpression	anal -> fcns = r_anal_fcn_list_new ( )		103081	0		=			
ANR	103158	PtrMemberAccess	anal -> fcns		103081	0					
ANR	103159	Identifier	anal		103081	0					
ANR	103160	Identifier	fcns		103081	1					
ANR	103161	CallExpression	r_anal_fcn_list_new ( )		103081	1					
ANR	103162	Callee	r_anal_fcn_list_new		103081	0					
ANR	103163	Identifier	r_anal_fcn_list_new		103081	0					
ANR	103164	ArgumentList			103081	1					
ANR	103165	ExpressionStatement	anal -> fcn_tree = NULL	513:1:13334:13355	103081	9	True				
ANR	103166	AssignmentExpression	anal -> fcn_tree = NULL		103081	0		=			
ANR	103167	PtrMemberAccess	anal -> fcn_tree		103081	0					
ANR	103168	Identifier	anal		103081	0					
ANR	103169	Identifier	fcn_tree		103081	1					
ANR	103170	Identifier	NULL		103081	1					
ANR	103171	ExpressionStatement	anal -> fcn_addr_tree = NULL	514:1:13358:13384	103081	10	True				
ANR	103172	AssignmentExpression	anal -> fcn_addr_tree = NULL		103081	0		=			
ANR	103173	PtrMemberAccess	anal -> fcn_addr_tree		103081	0					
ANR	103174	Identifier	anal		103081	0					
ANR	103175	Identifier	fcn_addr_tree		103081	1					
ANR	103176	Identifier	NULL		103081	1					
ANR	103177	ExpressionStatement	r_list_free ( anal -> refs )	515:1:13387:13411	103081	11	True				
ANR	103178	CallExpression	r_list_free ( anal -> refs )		103081	0					
ANR	103179	Callee	r_list_free		103081	0					
ANR	103180	Identifier	r_list_free		103081	0					
ANR	103181	ArgumentList	anal -> refs		103081	1					
ANR	103182	Argument	anal -> refs		103081	0					
ANR	103183	PtrMemberAccess	anal -> refs		103081	0					
ANR	103184	Identifier	anal		103081	0					
ANR	103185	Identifier	refs		103081	1					
ANR	103186	ExpressionStatement	anal -> refs = r_anal_ref_list_new ( )	516:1:13414:13449	103081	12	True				
ANR	103187	AssignmentExpression	anal -> refs = r_anal_ref_list_new ( )		103081	0		=			
ANR	103188	PtrMemberAccess	anal -> refs		103081	0					
ANR	103189	Identifier	anal		103081	0					
ANR	103190	Identifier	refs		103081	1					
ANR	103191	CallExpression	r_anal_ref_list_new ( )		103081	1					
ANR	103192	Callee	r_anal_ref_list_new		103081	0					
ANR	103193	Identifier	r_anal_ref_list_new		103081	0					
ANR	103194	ArgumentList			103081	1					
ANR	103195	ReturnStatement	return 0 ;	517:1:13452:13460	103081	13	True				
ANR	103196	PrimaryExpression	0		103081	0					
ANR	103197	ReturnType	R_API int		103081	1					
ANR	103198	Identifier	r_anal_purge		103081	2					
ANR	103199	ParameterList	RAnal * anal		103081	3					
ANR	103200	Parameter	RAnal * anal	503:24:13035:13045	103081	0	True				
ANR	103201	ParameterType	RAnal *		103081	0					
ANR	103202	Identifier	anal		103081	1					
ANR	103203	CFGEntryNode	ENTRY		103081		True				
ANR	103204	CFGExitNode	EXIT		103081		True				
ANR	103205	Symbol	r_anal_fcn_list_new		103081						
ANR	103206	Symbol	anal -> sdb_meta		103081						
ANR	103207	Symbol	NULL		103081						
ANR	103208	Symbol	anal -> fcns		103081						
ANR	103209	Symbol	anal -> sdb_zigns		103081						
ANR	103210	Symbol	anal -> refs		103081						
ANR	103211	Symbol	anal -> sdb_fcns		103081						
ANR	103212	Symbol	anal -> fcn_tree		103081						
ANR	103213	Symbol	* anal		103081						
ANR	103214	Symbol	anal		103081						
ANR	103215	Symbol	anal -> sdb_classes_attrs		103081						
ANR	103216	Symbol	anal -> fcn_addr_tree		103081						
ANR	103217	Symbol	anal -> sdb_types		103081						
ANR	103218	Symbol	r_anal_ref_list_new		103081						
ANR	103219	Symbol	anal -> sdb_hints		103081						
ANR	103220	Symbol	anal -> sdb_classes		103081						
ANR	103221	Function	r_anal_archinfo	520:0:13465:13783							
ANR	103222	FunctionDef	"r_anal_archinfo (RAnal * anal , int query)"		103221	0					
ANR	103223	CompoundStatement		520:50:13515:13783	103221	0					
ANR	103224	ExpressionStatement	"r_return_val_if_fail ( anal , - 1 )"	521:1:13518:13549	103221	0	True				
ANR	103225	CallExpression	"r_return_val_if_fail ( anal , - 1 )"		103221	0					
ANR	103226	Callee	r_return_val_if_fail		103221	0					
ANR	103227	Identifier	r_return_val_if_fail		103221	0					
ANR	103228	ArgumentList	anal		103221	1					
ANR	103229	Argument	anal		103221	0					
ANR	103230	Identifier	anal		103221	0					
ANR	103231	Argument	- 1		103221	1					
ANR	103232	UnaryOperationExpression	- 1		103221	0					
ANR	103233	UnaryOperator	-		103221	0					
ANR	103234	PrimaryExpression	1		103221	1					
ANR	103235	SwitchStatement	switch ( query )		103221	1					
ANR	103236	Condition	query	522:9:13560:13564	103221	0	True				
ANR	103237	Identifier	query		103221	0					
ANR	103238	CompoundStatement		3:16:51:51	103221	1					
ANR	103239	Label	case R_ANAL_ARCHINFO_MIN_OP_SIZE :	523:1:13570:13602	103221	0	True				
ANR	103240	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		103221	0					
ANR	103241	Label	case R_ANAL_ARCHINFO_MAX_OP_SIZE :	524:1:13605:13637	103221	1	True				
ANR	103242	Identifier	R_ANAL_ARCHINFO_MAX_OP_SIZE		103221	0					
ANR	103243	Label	case R_ANAL_ARCHINFO_ALIGN :	525:1:13640:13666	103221	2	True				
ANR	103244	Identifier	R_ANAL_ARCHINFO_ALIGN		103221	0					
ANR	103245	IfStatement	if ( anal -> cur && anal -> cur -> archinfo )		103221	3					
ANR	103246	Condition	anal -> cur && anal -> cur -> archinfo	526:6:13674:13705	103221	0	True				
ANR	103247	AndExpression	anal -> cur && anal -> cur -> archinfo		103221	0		&&			
ANR	103248	PtrMemberAccess	anal -> cur		103221	0					
ANR	103249	Identifier	anal		103221	0					
ANR	103250	Identifier	cur		103221	1					
ANR	103251	PtrMemberAccess	anal -> cur -> archinfo		103221	1					
ANR	103252	PtrMemberAccess	anal -> cur		103221	0					
ANR	103253	Identifier	anal		103221	0					
ANR	103254	Identifier	cur		103221	1					
ANR	103255	Identifier	archinfo		103221	1					
ANR	103256	CompoundStatement		7:40:192:192	103221	1					
ANR	103257	ReturnStatement	"return anal -> cur -> archinfo ( anal , query ) ;"	527:3:13713:13753	103221	0	True				
ANR	103258	CallExpression	"anal -> cur -> archinfo ( anal , query )"		103221	0					
ANR	103259	Callee	anal -> cur -> archinfo		103221	0					
ANR	103260	PtrMemberAccess	anal -> cur -> archinfo		103221	0					
ANR	103261	PtrMemberAccess	anal -> cur		103221	0					
ANR	103262	Identifier	anal		103221	0					
ANR	103263	Identifier	cur		103221	1					
ANR	103264	Identifier	archinfo		103221	1					
ANR	103265	ArgumentList	anal		103221	1					
ANR	103266	Argument	anal		103221	0					
ANR	103267	Identifier	anal		103221	0					
ANR	103268	Argument	query		103221	1					
ANR	103269	Identifier	query		103221	0					
ANR	103270	BreakStatement	break ;	529:2:13761:13766	103221	4	True				
ANR	103271	ReturnStatement	return - 1 ;	531:1:13772:13781	103221	2	True				
ANR	103272	UnaryOperationExpression	- 1		103221	0					
ANR	103273	UnaryOperator	-		103221	0					
ANR	103274	PrimaryExpression	1		103221	1					
ANR	103275	ReturnType	R_API int		103221	1					
ANR	103276	Identifier	r_anal_archinfo		103221	2					
ANR	103277	ParameterList	"RAnal * anal , int query"		103221	3					
ANR	103278	Parameter	RAnal * anal	520:26:13491:13501	103221	0	True				
ANR	103279	ParameterType	RAnal *		103221	0					
ANR	103280	Identifier	anal		103221	1					
ANR	103281	Parameter	int query	520:39:13504:13512	103221	1	True				
ANR	103282	ParameterType	int		103221	0					
ANR	103283	Identifier	query		103221	1					
ANR	103284	CFGEntryNode	ENTRY		103221		True				
ANR	103285	CFGExitNode	EXIT		103221		True				
ANR	103286	Symbol	* anal -> cur		103221						
ANR	103287	Symbol	* * anal		103221						
ANR	103288	Symbol	* anal		103221						
ANR	103289	Symbol	anal -> cur -> archinfo		103221						
ANR	103290	Symbol	anal		103221						
ANR	103291	Symbol	query		103221						
ANR	103292	Symbol	anal -> cur		103221						
ANR	103293	Function	__nonreturn_print_commands	534:0:13786:14181							
ANR	103294	FunctionDef	"__nonreturn_print_commands (void * p , const char * k , const char * v)"		103293	0					
ANR	103295	CompoundStatement		534:77:13863:14181	103293	0					
ANR	103296	IdentifierDeclStatement	RAnal * anal = ( RAnal * ) p ;	535:1:13866:13890	103293	0	True				
ANR	103297	IdentifierDecl	* anal = ( RAnal * ) p		103293	0					
ANR	103298	IdentifierDeclType	RAnal *		103293	0					
ANR	103299	Identifier	anal		103293	1					
ANR	103300	AssignmentExpression	* anal = ( RAnal * ) p		103293	2		=			
ANR	103301	Identifier	anal		103293	0					
ANR	103302	CastExpression	( RAnal * ) p		103293	1					
ANR	103303	CastTarget	RAnal *		103293	0					
ANR	103304	Identifier	p		103293	1					
ANR	103305	IfStatement	"if ( ! strncmp ( v , ""func"" , strlen ( ""func"" ) + 1 ) )"		103293	1					
ANR	103306	Condition	"! strncmp ( v , ""func"" , strlen ( ""func"" ) + 1 )"	536:5:13897:13937	103293	0	True				
ANR	103307	UnaryOperationExpression	"! strncmp ( v , ""func"" , strlen ( ""func"" ) + 1 )"		103293	0					
ANR	103308	UnaryOperator	!		103293	0					
ANR	103309	CallExpression	"strncmp ( v , ""func"" , strlen ( ""func"" ) + 1 )"		103293	1					
ANR	103310	Callee	strncmp		103293	0					
ANR	103311	Identifier	strncmp		103293	0					
ANR	103312	ArgumentList	v		103293	1					
ANR	103313	Argument	v		103293	0					
ANR	103314	Identifier	v		103293	0					
ANR	103315	Argument	"""func"""		103293	1					
ANR	103316	PrimaryExpression	"""func"""		103293	0					
ANR	103317	Argument	"strlen ( ""func"" ) + 1"		103293	2					
ANR	103318	AdditiveExpression	"strlen ( ""func"" ) + 1"		103293	0		+			
ANR	103319	CallExpression	"strlen ( ""func"" )"		103293	0					
ANR	103320	Callee	strlen		103293	0					
ANR	103321	Identifier	strlen		103293	0					
ANR	103322	ArgumentList	"""func"""		103293	1					
ANR	103323	Argument	"""func"""		103293	0					
ANR	103324	PrimaryExpression	"""func"""		103293	0					
ANR	103325	PrimaryExpression	1		103293	1					
ANR	103326	CompoundStatement		4:2:80:125	103293	1					
ANR	103327	IdentifierDeclStatement	"char * query = sdb_fmt ( ""func.%s.noreturn"" , k ) ;"	537:2:13944:13989	103293	0	True				
ANR	103328	IdentifierDecl	"* query = sdb_fmt ( ""func.%s.noreturn"" , k )"		103293	0					
ANR	103329	IdentifierDeclType	char *		103293	0					
ANR	103330	Identifier	query		103293	1					
ANR	103331	AssignmentExpression	"* query = sdb_fmt ( ""func.%s.noreturn"" , k )"		103293	2		=			
ANR	103332	Identifier	query		103293	0					
ANR	103333	CallExpression	"sdb_fmt ( ""func.%s.noreturn"" , k )"		103293	1					
ANR	103334	Callee	sdb_fmt		103293	0					
ANR	103335	Identifier	sdb_fmt		103293	0					
ANR	103336	ArgumentList	"""func.%s.noreturn"""		103293	1					
ANR	103337	Argument	"""func.%s.noreturn"""		103293	0					
ANR	103338	PrimaryExpression	"""func.%s.noreturn"""		103293	0					
ANR	103339	Argument	k		103293	1					
ANR	103340	Identifier	k		103293	0					
ANR	103341	IfStatement	"if ( sdb_bool_get ( anal -> sdb_types , query , NULL ) )"		103293	1					
ANR	103342	Condition	"sdb_bool_get ( anal -> sdb_types , query , NULL )"	538:6:13997:14039	103293	0	True				
ANR	103343	CallExpression	"sdb_bool_get ( anal -> sdb_types , query , NULL )"		103293	0					
ANR	103344	Callee	sdb_bool_get		103293	0					
ANR	103345	Identifier	sdb_bool_get		103293	0					
ANR	103346	ArgumentList	anal -> sdb_types		103293	1					
ANR	103347	Argument	anal -> sdb_types		103293	0					
ANR	103348	PtrMemberAccess	anal -> sdb_types		103293	0					
ANR	103349	Identifier	anal		103293	0					
ANR	103350	Identifier	sdb_types		103293	1					
ANR	103351	Argument	query		103293	1					
ANR	103352	Identifier	query		103293	0					
ANR	103353	Argument	NULL		103293	2					
ANR	103354	Identifier	NULL		103293	0					
ANR	103355	CompoundStatement		5:51:178:178	103293	1					
ANR	103356	ExpressionStatement	"anal -> cb_printf ( ""tnn %s\\n"" , k )"	539:3:14047:14078	103293	0	True				
ANR	103357	CallExpression	"anal -> cb_printf ( ""tnn %s\\n"" , k )"		103293	0					
ANR	103358	Callee	anal -> cb_printf		103293	0					
ANR	103359	PtrMemberAccess	anal -> cb_printf		103293	0					
ANR	103360	Identifier	anal		103293	0					
ANR	103361	Identifier	cb_printf		103293	1					
ANR	103362	ArgumentList	"""tnn %s\\n"""		103293	1					
ANR	103363	Argument	"""tnn %s\\n"""		103293	0					
ANR	103364	PrimaryExpression	"""tnn %s\\n"""		103293	0					
ANR	103365	Argument	k		103293	1					
ANR	103366	Identifier	k		103293	0					
ANR	103367	IfStatement	"if ( ! strncmp ( k , ""addr."" , 5 ) )"		103293	2					
ANR	103368	Condition	"! strncmp ( k , ""addr."" , 5 )"	542:5:14092:14115	103293	0	True				
ANR	103369	UnaryOperationExpression	"! strncmp ( k , ""addr."" , 5 )"		103293	0					
ANR	103370	UnaryOperator	!		103293	0					
ANR	103371	CallExpression	"strncmp ( k , ""addr."" , 5 )"		103293	1					
ANR	103372	Callee	strncmp		103293	0					
ANR	103373	Identifier	strncmp		103293	0					
ANR	103374	ArgumentList	k		103293	1					
ANR	103375	Argument	k		103293	0					
ANR	103376	Identifier	k		103293	0					
ANR	103377	Argument	"""addr."""		103293	1					
ANR	103378	PrimaryExpression	"""addr."""		103293	0					
ANR	103379	Argument	5		103293	2					
ANR	103380	PrimaryExpression	5		103293	0					
ANR	103381	CompoundStatement		9:31:254:254	103293	1					
ANR	103382	ExpressionStatement	"anal -> cb_printf ( ""tna 0x%s %s\\n"" , k + 5 , v )"	543:2:14122:14165	103293	0	True				
ANR	103383	CallExpression	"anal -> cb_printf ( ""tna 0x%s %s\\n"" , k + 5 , v )"		103293	0					
ANR	103384	Callee	anal -> cb_printf		103293	0					
ANR	103385	PtrMemberAccess	anal -> cb_printf		103293	0					
ANR	103386	Identifier	anal		103293	0					
ANR	103387	Identifier	cb_printf		103293	1					
ANR	103388	ArgumentList	"""tna 0x%s %s\\n"""		103293	1					
ANR	103389	Argument	"""tna 0x%s %s\\n"""		103293	0					
ANR	103390	PrimaryExpression	"""tna 0x%s %s\\n"""		103293	0					
ANR	103391	Argument	k + 5		103293	1					
ANR	103392	AdditiveExpression	k + 5		103293	0		+			
ANR	103393	Identifier	k		103293	0					
ANR	103394	PrimaryExpression	5		103293	1					
ANR	103395	Argument	v		103293	2					
ANR	103396	Identifier	v		103293	0					
ANR	103397	ReturnStatement	return 1 ;	545:1:14171:14179	103293	3	True				
ANR	103398	PrimaryExpression	1		103293	0					
ANR	103399	ReturnType	static int		103293	1					
ANR	103400	Identifier	__nonreturn_print_commands		103293	2					
ANR	103401	ParameterList	"void * p , const char * k , const char * v"		103293	3					
ANR	103402	Parameter	void * p	534:38:13824:13830	103293	0	True				
ANR	103403	ParameterType	void *		103293	0					
ANR	103404	Identifier	p		103293	1					
ANR	103405	Parameter	const char * k	534:47:13833:13845	103293	1	True				
ANR	103406	ParameterType	const char *		103293	0					
ANR	103407	Identifier	k		103293	1					
ANR	103408	Parameter	const char * v	534:62:13848:13860	103293	2	True				
ANR	103409	ParameterType	const char *		103293	0					
ANR	103410	Identifier	v		103293	1					
ANR	103411	CFGEntryNode	ENTRY		103293		True				
ANR	103412	CFGExitNode	EXIT		103293		True				
ANR	103413	Symbol	p		103293						
ANR	103414	Symbol	strlen		103293						
ANR	103415	Symbol	strncmp		103293						
ANR	103416	Symbol	* anal		103293						
ANR	103417	Symbol	NULL		103293						
ANR	103418	Symbol	anal		103293						
ANR	103419	Symbol	v		103293						
ANR	103420	Symbol	query		103293						
ANR	103421	Symbol	sdb_bool_get		103293						
ANR	103422	Symbol	k		103293						
ANR	103423	Symbol	anal -> sdb_types		103293						
ANR	103424	Symbol	sdb_fmt		103293						
ANR	103425	Function	__nonreturn_print	548:0:14184:14701							
ANR	103426	FunctionDef	"__nonreturn_print (void * p , const char * k , const char * v)"		103425	0					
ANR	103427	CompoundStatement		548:68:14252:14701	103425	0					
ANR	103428	IdentifierDeclStatement	RAnal * anal = ( RAnal * ) p ;	549:1:14255:14279	103425	0	True				
ANR	103429	IdentifierDecl	* anal = ( RAnal * ) p		103425	0					
ANR	103430	IdentifierDeclType	RAnal *		103425	0					
ANR	103431	Identifier	anal		103425	1					
ANR	103432	AssignmentExpression	* anal = ( RAnal * ) p		103425	2		=			
ANR	103433	Identifier	anal		103425	0					
ANR	103434	CastExpression	( RAnal * ) p		103425	1					
ANR	103435	CastTarget	RAnal *		103425	0					
ANR	103436	Identifier	p		103425	1					
ANR	103437	IfStatement	"if ( ! strncmp ( k , ""func."" , 5 ) && strstr ( k , "".noreturn"" ) )"		103425	1					
ANR	103438	Condition	"! strncmp ( k , ""func."" , 5 ) && strstr ( k , "".noreturn"" )"	550:5:14286:14336	103425	0	True				
ANR	103439	AndExpression	"! strncmp ( k , ""func."" , 5 ) && strstr ( k , "".noreturn"" )"		103425	0		&&			
ANR	103440	UnaryOperationExpression	"! strncmp ( k , ""func."" , 5 )"		103425	0					
ANR	103441	UnaryOperator	!		103425	0					
ANR	103442	CallExpression	"strncmp ( k , ""func."" , 5 )"		103425	1					
ANR	103443	Callee	strncmp		103425	0					
ANR	103444	Identifier	strncmp		103425	0					
ANR	103445	ArgumentList	k		103425	1					
ANR	103446	Argument	k		103425	0					
ANR	103447	Identifier	k		103425	0					
ANR	103448	Argument	"""func."""		103425	1					
ANR	103449	PrimaryExpression	"""func."""		103425	0					
ANR	103450	Argument	5		103425	2					
ANR	103451	PrimaryExpression	5		103425	0					
ANR	103452	CallExpression	"strstr ( k , "".noreturn"" )"		103425	1					
ANR	103453	Callee	strstr		103425	0					
ANR	103454	Identifier	strstr		103425	0					
ANR	103455	ArgumentList	k		103425	1					
ANR	103456	Argument	k		103425	0					
ANR	103457	Identifier	k		103425	0					
ANR	103458	Argument	""".noreturn"""		103425	1					
ANR	103459	PrimaryExpression	""".noreturn"""		103425	0					
ANR	103460	CompoundStatement		5:2:118:143	103425	1					
ANR	103461	IdentifierDeclStatement	char * s = strdup ( k + 5 ) ;	551:2:14343:14367	103425	0	True				
ANR	103462	IdentifierDecl	* s = strdup ( k + 5 )		103425	0					
ANR	103463	IdentifierDeclType	char *		103425	0					
ANR	103464	Identifier	s		103425	1					
ANR	103465	AssignmentExpression	* s = strdup ( k + 5 )		103425	2		=			
ANR	103466	Identifier	s		103425	0					
ANR	103467	CallExpression	strdup ( k + 5 )		103425	1					
ANR	103468	Callee	strdup		103425	0					
ANR	103469	Identifier	strdup		103425	0					
ANR	103470	ArgumentList	k + 5		103425	1					
ANR	103471	Argument	k + 5		103425	0					
ANR	103472	AdditiveExpression	k + 5		103425	0		+			
ANR	103473	Identifier	k		103425	0					
ANR	103474	PrimaryExpression	5		103425	1					
ANR	103475	IdentifierDeclStatement	"char * d = strchr ( s , '.' ) ;"	552:2:14371:14396	103425	1	True				
ANR	103476	IdentifierDecl	"* d = strchr ( s , '.' )"		103425	0					
ANR	103477	IdentifierDeclType	char *		103425	0					
ANR	103478	Identifier	d		103425	1					
ANR	103479	AssignmentExpression	"* d = strchr ( s , '.' )"		103425	2		=			
ANR	103480	Identifier	d		103425	0					
ANR	103481	CallExpression	"strchr ( s , '.' )"		103425	1					
ANR	103482	Callee	strchr		103425	0					
ANR	103483	Identifier	strchr		103425	0					
ANR	103484	ArgumentList	s		103425	1					
ANR	103485	Argument	s		103425	0					
ANR	103486	Identifier	s		103425	0					
ANR	103487	Argument	'.'		103425	1					
ANR	103488	PrimaryExpression	'.'		103425	0					
ANR	103489	IfStatement	if ( d )		103425	2					
ANR	103490	Condition	d	553:6:14404:14404	103425	0	True				
ANR	103491	Identifier	d		103425	0					
ANR	103492	CompoundStatement		6:9:154:154	103425	1					
ANR	103493	ExpressionStatement	* d = 0	554:3:14412:14418	103425	0	True				
ANR	103494	AssignmentExpression	* d = 0		103425	0		=			
ANR	103495	UnaryOperationExpression	* d		103425	0					
ANR	103496	UnaryOperator	*		103425	0					
ANR	103497	Identifier	d		103425	1					
ANR	103498	PrimaryExpression	0		103425	1					
ANR	103499	ExpressionStatement	"anal -> cb_printf ( ""%s\\n"" , s )"	556:2:14426:14453	103425	3	True				
ANR	103500	CallExpression	"anal -> cb_printf ( ""%s\\n"" , s )"		103425	0					
ANR	103501	Callee	anal -> cb_printf		103425	0					
ANR	103502	PtrMemberAccess	anal -> cb_printf		103425	0					
ANR	103503	Identifier	anal		103425	0					
ANR	103504	Identifier	cb_printf		103425	1					
ANR	103505	ArgumentList	"""%s\\n"""		103425	1					
ANR	103506	Argument	"""%s\\n"""		103425	0					
ANR	103507	PrimaryExpression	"""%s\\n"""		103425	0					
ANR	103508	Argument	s		103425	1					
ANR	103509	Identifier	s		103425	0					
ANR	103510	ExpressionStatement	free ( s )	557:2:14457:14465	103425	4	True				
ANR	103511	CallExpression	free ( s )		103425	0					
ANR	103512	Callee	free		103425	0					
ANR	103513	Identifier	free		103425	0					
ANR	103514	ArgumentList	s		103425	1					
ANR	103515	Argument	s		103425	0					
ANR	103516	Identifier	s		103425	0					
ANR	103517	IfStatement	"if ( ! strncmp ( k , ""addr."" , 5 ) )"		103425	2					
ANR	103518	Condition	"! strncmp ( k , ""addr."" , 5 )"	559:5:14475:14498	103425	0	True				
ANR	103519	UnaryOperationExpression	"! strncmp ( k , ""addr."" , 5 )"		103425	0					
ANR	103520	UnaryOperator	!		103425	0					
ANR	103521	CallExpression	"strncmp ( k , ""addr."" , 5 )"		103425	1					
ANR	103522	Callee	strncmp		103425	0					
ANR	103523	Identifier	strncmp		103425	0					
ANR	103524	ArgumentList	k		103425	1					
ANR	103525	Argument	k		103425	0					
ANR	103526	Identifier	k		103425	0					
ANR	103527	Argument	"""addr."""		103425	1					
ANR	103528	PrimaryExpression	"""addr."""		103425	0					
ANR	103529	Argument	5		103425	2					
ANR	103530	PrimaryExpression	5		103425	0					
ANR	103531	CompoundStatement		17:2:315:352	103425	1					
ANR	103532	IdentifierDeclStatement	char * off ;	560:2:14505:14514	103425	0	True				
ANR	103533	IdentifierDecl	* off		103425	0					
ANR	103534	IdentifierDeclType	char *		103425	0					
ANR	103535	Identifier	off		103425	1					
ANR	103536	IfStatement	if ( ! ( off = strdup ( k + 5 ) ) )		103425	1					
ANR	103537	Condition	! ( off = strdup ( k + 5 ) )	561:6:14522:14544	103425	0	True				
ANR	103538	UnaryOperationExpression	! ( off = strdup ( k + 5 ) )		103425	0					
ANR	103539	UnaryOperator	!		103425	0					
ANR	103540	AssignmentExpression	off = strdup ( k + 5 )		103425	1		=			
ANR	103541	Identifier	off		103425	0					
ANR	103542	CallExpression	strdup ( k + 5 )		103425	1					
ANR	103543	Callee	strdup		103425	0					
ANR	103544	Identifier	strdup		103425	0					
ANR	103545	ArgumentList	k + 5		103425	1					
ANR	103546	Argument	k + 5		103425	0					
ANR	103547	AdditiveExpression	k + 5		103425	0		+			
ANR	103548	Identifier	k		103425	0					
ANR	103549	PrimaryExpression	5		103425	1					
ANR	103550	CompoundStatement		14:31:294:294	103425	1					
ANR	103551	ReturnStatement	return 1 ;	562:3:14552:14560	103425	0	True				
ANR	103552	PrimaryExpression	1		103425	0					
ANR	103553	IdentifierDeclStatement	"char * ptr = strstr ( off , "".noreturn"" ) ;"	564:2:14568:14605	103425	2	True				
ANR	103554	IdentifierDecl	"* ptr = strstr ( off , "".noreturn"" )"		103425	0					
ANR	103555	IdentifierDeclType	char *		103425	0					
ANR	103556	Identifier	ptr		103425	1					
ANR	103557	AssignmentExpression	"* ptr = strstr ( off , "".noreturn"" )"		103425	2		=			
ANR	103558	Identifier	ptr		103425	0					
ANR	103559	CallExpression	"strstr ( off , "".noreturn"" )"		103425	1					
ANR	103560	Callee	strstr		103425	0					
ANR	103561	Identifier	strstr		103425	0					
ANR	103562	ArgumentList	off		103425	1					
ANR	103563	Argument	off		103425	0					
ANR	103564	Identifier	off		103425	0					
ANR	103565	Argument	""".noreturn"""		103425	1					
ANR	103566	PrimaryExpression	""".noreturn"""		103425	0					
ANR	103567	IfStatement	if ( ptr )		103425	3					
ANR	103568	Condition	ptr	565:6:14613:14615	103425	0	True				
ANR	103569	Identifier	ptr		103425	0					
ANR	103570	CompoundStatement		18:11:365:365	103425	1					
ANR	103571	ExpressionStatement	* ptr = 0	566:3:14623:14631	103425	0	True				
ANR	103572	AssignmentExpression	* ptr = 0		103425	0		=			
ANR	103573	UnaryOperationExpression	* ptr		103425	0					
ANR	103574	UnaryOperator	*		103425	0					
ANR	103575	Identifier	ptr		103425	1					
ANR	103576	PrimaryExpression	0		103425	1					
ANR	103577	ExpressionStatement	"anal -> cb_printf ( ""0x%s\\n"" , off )"	567:3:14636:14667	103425	1	True				
ANR	103578	CallExpression	"anal -> cb_printf ( ""0x%s\\n"" , off )"		103425	0					
ANR	103579	Callee	anal -> cb_printf		103425	0					
ANR	103580	PtrMemberAccess	anal -> cb_printf		103425	0					
ANR	103581	Identifier	anal		103425	0					
ANR	103582	Identifier	cb_printf		103425	1					
ANR	103583	ArgumentList	"""0x%s\\n"""		103425	1					
ANR	103584	Argument	"""0x%s\\n"""		103425	0					
ANR	103585	PrimaryExpression	"""0x%s\\n"""		103425	0					
ANR	103586	Argument	off		103425	1					
ANR	103587	Identifier	off		103425	0					
ANR	103588	ExpressionStatement	free ( off )	569:2:14675:14685	103425	4	True				
ANR	103589	CallExpression	free ( off )		103425	0					
ANR	103590	Callee	free		103425	0					
ANR	103591	Identifier	free		103425	0					
ANR	103592	ArgumentList	off		103425	1					
ANR	103593	Argument	off		103425	0					
ANR	103594	Identifier	off		103425	0					
ANR	103595	ReturnStatement	return 1 ;	571:1:14691:14699	103425	3	True				
ANR	103596	PrimaryExpression	1		103425	0					
ANR	103597	ReturnType	static int		103425	1					
ANR	103598	Identifier	__nonreturn_print		103425	2					
ANR	103599	ParameterList	"void * p , const char * k , const char * v"		103425	3					
ANR	103600	Parameter	void * p	548:29:14213:14219	103425	0	True				
ANR	103601	ParameterType	void *		103425	0					
ANR	103602	Identifier	p		103425	1					
ANR	103603	Parameter	const char * k	548:38:14222:14234	103425	1	True				
ANR	103604	ParameterType	const char *		103425	0					
ANR	103605	Identifier	k		103425	1					
ANR	103606	Parameter	const char * v	548:53:14237:14249	103425	2	True				
ANR	103607	ParameterType	const char *		103425	0					
ANR	103608	Identifier	v		103425	1					
ANR	103609	CFGEntryNode	ENTRY		103425		True				
ANR	103610	CFGExitNode	EXIT		103425		True				
ANR	103611	Symbol	d		103425						
ANR	103612	Symbol	strchr		103425						
ANR	103613	Symbol	k		103425						
ANR	103614	Symbol	* d		103425						
ANR	103615	Symbol	off		103425						
ANR	103616	Symbol	ptr		103425						
ANR	103617	Symbol	p		103425						
ANR	103618	Symbol	strncmp		103425						
ANR	103619	Symbol	s		103425						
ANR	103620	Symbol	anal		103425						
ANR	103621	Symbol	strstr		103425						
ANR	103622	Symbol	v		103425						
ANR	103623	Symbol	* ptr		103425						
ANR	103624	Symbol	strdup		103425						
ANR	103625	Function	r_anal_noreturn_list	574:0:14704:14965							
ANR	103626	FunctionDef	"r_anal_noreturn_list (RAnal * anal , int mode)"		103625	0					
ANR	103627	CompoundStatement		574:55:14759:14965	103625	0					
ANR	103628	SwitchStatement	switch ( mode )		103625	0					
ANR	103629	Condition	mode	575:9:14770:14773	103625	0	True				
ANR	103630	Identifier	mode		103625	0					
ANR	103631	CompoundStatement		2:15:16:16	103625	1					
ANR	103632	Label	case 1 :	576:1:14779:14785	103625	0	True				
ANR	103633	Label	case '*' :	577:1:14788:14796	103625	1	True				
ANR	103634	Label	case 'r' :	578:1:14799:14807	103625	2	True				
ANR	103635	ExpressionStatement	"sdb_foreach ( anal -> sdb_types , __nonreturn_print_commands , anal )"	579:2:14811:14874	103625	3	True				
ANR	103636	CallExpression	"sdb_foreach ( anal -> sdb_types , __nonreturn_print_commands , anal )"		103625	0					
ANR	103637	Callee	sdb_foreach		103625	0					
ANR	103638	Identifier	sdb_foreach		103625	0					
ANR	103639	ArgumentList	anal -> sdb_types		103625	1					
ANR	103640	Argument	anal -> sdb_types		103625	0					
ANR	103641	PtrMemberAccess	anal -> sdb_types		103625	0					
ANR	103642	Identifier	anal		103625	0					
ANR	103643	Identifier	sdb_types		103625	1					
ANR	103644	Argument	__nonreturn_print_commands		103625	1					
ANR	103645	Identifier	__nonreturn_print_commands		103625	0					
ANR	103646	Argument	anal		103625	2					
ANR	103647	Identifier	anal		103625	0					
ANR	103648	BreakStatement	break ;	580:2:14878:14883	103625	4	True				
ANR	103649	Label	default :	581:1:14886:14893	103625	5	True				
ANR	103650	Identifier	default		103625	0					
ANR	103651	ExpressionStatement	"sdb_foreach ( anal -> sdb_types , __nonreturn_print , anal )"	582:2:14897:14951	103625	6	True				
ANR	103652	CallExpression	"sdb_foreach ( anal -> sdb_types , __nonreturn_print , anal )"		103625	0					
ANR	103653	Callee	sdb_foreach		103625	0					
ANR	103654	Identifier	sdb_foreach		103625	0					
ANR	103655	ArgumentList	anal -> sdb_types		103625	1					
ANR	103656	Argument	anal -> sdb_types		103625	0					
ANR	103657	PtrMemberAccess	anal -> sdb_types		103625	0					
ANR	103658	Identifier	anal		103625	0					
ANR	103659	Identifier	sdb_types		103625	1					
ANR	103660	Argument	__nonreturn_print		103625	1					
ANR	103661	Identifier	__nonreturn_print		103625	0					
ANR	103662	Argument	anal		103625	2					
ANR	103663	Identifier	anal		103625	0					
ANR	103664	BreakStatement	break ;	583:2:14955:14960	103625	7	True				
ANR	103665	ReturnType	R_API void		103625	1					
ANR	103666	Identifier	r_anal_noreturn_list		103625	2					
ANR	103667	ParameterList	"RAnal * anal , int mode"		103625	3					
ANR	103668	Parameter	RAnal * anal	574:32:14736:14746	103625	0	True				
ANR	103669	ParameterType	RAnal *		103625	0					
ANR	103670	Identifier	anal		103625	1					
ANR	103671	Parameter	int mode	574:45:14749:14756	103625	1	True				
ANR	103672	ParameterType	int		103625	0					
ANR	103673	Identifier	mode		103625	1					
ANR	103674	CFGEntryNode	ENTRY		103625		True				
ANR	103675	CFGExitNode	EXIT		103625		True				
ANR	103676	Symbol	mode		103625						
ANR	103677	Symbol	* anal		103625						
ANR	103678	Symbol	anal		103625						
ANR	103679	Symbol	__nonreturn_print		103625						
ANR	103680	Symbol	anal -> sdb_types		103625						
ANR	103681	Symbol	__nonreturn_print_commands		103625						
ANR	103682	Function	r_anal_noreturn_add	590:0:15089:16183							
ANR	103683	FunctionDef	"r_anal_noreturn_add (RAnal * anal , const char * name , ut64 addr)"		103682	0					
ANR	103684	CompoundStatement		590:73:15162:16183	103682	0					
ANR	103685	IdentifierDeclStatement	const char * tmp_name = NULL ;	591:1:15165:15192	103682	0	True				
ANR	103686	IdentifierDecl	* tmp_name = NULL		103682	0					
ANR	103687	IdentifierDeclType	const char *		103682	0					
ANR	103688	Identifier	tmp_name		103682	1					
ANR	103689	AssignmentExpression	* tmp_name = NULL		103682	2		=			
ANR	103690	Identifier	NULL		103682	0					
ANR	103691	Identifier	NULL		103682	1					
ANR	103692	IdentifierDeclStatement	Sdb * TDB = anal -> sdb_types ;	592:1:15195:15221	103682	1	True				
ANR	103693	IdentifierDecl	* TDB = anal -> sdb_types		103682	0					
ANR	103694	IdentifierDeclType	Sdb *		103682	0					
ANR	103695	Identifier	TDB		103682	1					
ANR	103696	AssignmentExpression	* TDB = anal -> sdb_types		103682	2		=			
ANR	103697	Identifier	TDB		103682	0					
ANR	103698	PtrMemberAccess	anal -> sdb_types		103682	1					
ANR	103699	Identifier	anal		103682	0					
ANR	103700	Identifier	sdb_types		103682	1					
ANR	103701	IdentifierDeclStatement	char * fnl_name = NULL ;	593:1:15224:15245	103682	2	True				
ANR	103702	IdentifierDecl	* fnl_name = NULL		103682	0					
ANR	103703	IdentifierDeclType	char *		103682	0					
ANR	103704	Identifier	fnl_name		103682	1					
ANR	103705	AssignmentExpression	* fnl_name = NULL		103682	2		=			
ANR	103706	Identifier	NULL		103682	0					
ANR	103707	Identifier	NULL		103682	1					
ANR	103708	IfStatement	if ( addr != UT64_MAX )		103682	3					
ANR	103709	Condition	addr != UT64_MAX	594:5:15252:15267	103682	0	True				
ANR	103710	EqualityExpression	addr != UT64_MAX		103682	0		!=			
ANR	103711	Identifier	addr		103682	0					
ANR	103712	Identifier	UT64_MAX		103682	1					
ANR	103713	CompoundStatement		5:23:107:107	103682	1					
ANR	103714	IfStatement	"if ( sdb_bool_set ( TDB , K_NORET_ADDR ( addr ) , true , 0 ) )"		103682	0					
ANR	103715	Condition	"sdb_bool_set ( TDB , K_NORET_ADDR ( addr ) , true , 0 )"	595:6:15278:15325	103682	0	True				
ANR	103716	CallExpression	"sdb_bool_set ( TDB , K_NORET_ADDR ( addr ) , true , 0 )"		103682	0					
ANR	103717	Callee	sdb_bool_set		103682	0					
ANR	103718	Identifier	sdb_bool_set		103682	0					
ANR	103719	ArgumentList	TDB		103682	1					
ANR	103720	Argument	TDB		103682	0					
ANR	103721	Identifier	TDB		103682	0					
ANR	103722	Argument	K_NORET_ADDR ( addr )		103682	1					
ANR	103723	CallExpression	K_NORET_ADDR ( addr )		103682	0					
ANR	103724	Callee	K_NORET_ADDR		103682	0					
ANR	103725	Identifier	K_NORET_ADDR		103682	0					
ANR	103726	ArgumentList	addr		103682	1					
ANR	103727	Argument	addr		103682	0					
ANR	103728	Identifier	addr		103682	0					
ANR	103729	Argument	true		103682	2					
ANR	103730	Identifier	true		103682	0					
ANR	103731	Argument	0		103682	3					
ANR	103732	PrimaryExpression	0		103682	0					
ANR	103733	CompoundStatement		6:56:165:165	103682	1					
ANR	103734	ReturnStatement	return true ;	596:3:15333:15344	103682	0	True				
ANR	103735	Identifier	true		103682	0					
ANR	103736	IfStatement	if ( name && * name )		103682	4					
ANR	103737	Condition	name && * name	599:5:15358:15370	103682	0	True				
ANR	103738	AndExpression	name && * name		103682	0		&&			
ANR	103739	Identifier	name		103682	0					
ANR	103740	UnaryOperationExpression	* name		103682	1					
ANR	103741	UnaryOperator	*		103682	0					
ANR	103742	Identifier	name		103682	1					
ANR	103743	CompoundStatement		10:20:210:210	103682	1					
ANR	103744	ExpressionStatement	tmp_name = name	600:2:15377:15392	103682	0	True				
ANR	103745	AssignmentExpression	tmp_name = name		103682	0		=			
ANR	103746	Identifier	tmp_name		103682	0					
ANR	103747	Identifier	name		103682	1					
ANR	103748	ElseStatement	else		103682	0					
ANR	103749	CompoundStatement		14:2:302:361	103682	0					
ANR	103750	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( anal , addr , - 1 ) ;"	602:2:15406:15461	103682	0	True				
ANR	103751	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( anal , addr , - 1 )"		103682	0					
ANR	103752	IdentifierDeclType	RAnalFunction *		103682	0					
ANR	103753	Identifier	fcn		103682	1					
ANR	103754	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( anal , addr , - 1 )"		103682	2		=			
ANR	103755	Identifier	fcn		103682	0					
ANR	103756	CallExpression	"r_anal_get_fcn_in ( anal , addr , - 1 )"		103682	1					
ANR	103757	Callee	r_anal_get_fcn_in		103682	0					
ANR	103758	Identifier	r_anal_get_fcn_in		103682	0					
ANR	103759	ArgumentList	anal		103682	1					
ANR	103760	Argument	anal		103682	0					
ANR	103761	Identifier	anal		103682	0					
ANR	103762	Argument	addr		103682	1					
ANR	103763	Identifier	addr		103682	0					
ANR	103764	Argument	- 1		103682	2					
ANR	103765	UnaryOperationExpression	- 1		103682	0					
ANR	103766	UnaryOperator	-		103682	0					
ANR	103767	PrimaryExpression	1		103682	1					
ANR	103768	IdentifierDeclStatement	"RFlagItem * fi = anal -> flb . get_at ( anal -> flb . f , addr , false ) ;"	603:2:15465:15524	103682	1	True				
ANR	103769	IdentifierDecl	"* fi = anal -> flb . get_at ( anal -> flb . f , addr , false )"		103682	0					
ANR	103770	IdentifierDeclType	RFlagItem *		103682	0					
ANR	103771	Identifier	fi		103682	1					
ANR	103772	AssignmentExpression	"* fi = anal -> flb . get_at ( anal -> flb . f , addr , false )"		103682	2		=			
ANR	103773	Identifier	fi		103682	0					
ANR	103774	CallExpression	"anal -> flb . get_at ( anal -> flb . f , addr , false )"		103682	1					
ANR	103775	Callee	anal -> flb . get_at		103682	0					
ANR	103776	MemberAccess	anal -> flb . get_at		103682	0					
ANR	103777	PtrMemberAccess	anal -> flb		103682	0					
ANR	103778	Identifier	anal		103682	0					
ANR	103779	Identifier	flb		103682	1					
ANR	103780	Identifier	get_at		103682	1					
ANR	103781	ArgumentList	anal -> flb . f		103682	1					
ANR	103782	Argument	anal -> flb . f		103682	0					
ANR	103783	MemberAccess	anal -> flb . f		103682	0					
ANR	103784	PtrMemberAccess	anal -> flb		103682	0					
ANR	103785	Identifier	anal		103682	0					
ANR	103786	Identifier	flb		103682	1					
ANR	103787	Identifier	f		103682	1					
ANR	103788	Argument	addr		103682	1					
ANR	103789	Identifier	addr		103682	0					
ANR	103790	Argument	false		103682	2					
ANR	103791	Identifier	false		103682	0					
ANR	103792	IfStatement	if ( ! fcn && ! fi )		103682	2					
ANR	103793	Condition	! fcn && ! fi	604:6:15532:15542	103682	0	True				
ANR	103794	AndExpression	! fcn && ! fi		103682	0		&&			
ANR	103795	UnaryOperationExpression	! fcn		103682	0					
ANR	103796	UnaryOperator	!		103682	0					
ANR	103797	Identifier	fcn		103682	1					
ANR	103798	UnaryOperationExpression	! fi		103682	1					
ANR	103799	UnaryOperator	!		103682	0					
ANR	103800	Identifier	fi		103682	1					
ANR	103801	CompoundStatement		15:19:382:382	103682	1					
ANR	103802	ExpressionStatement	"eprintf ( ""Can't find Function at given address\\n"" )"	605:3:15550:15600	103682	0	True				
ANR	103803	CallExpression	"eprintf ( ""Can't find Function at given address\\n"" )"		103682	0					
ANR	103804	Callee	eprintf		103682	0					
ANR	103805	Identifier	eprintf		103682	0					
ANR	103806	ArgumentList	"""Can't find Function at given address\\n"""		103682	1					
ANR	103807	Argument	"""Can't find Function at given address\\n"""		103682	0					
ANR	103808	PrimaryExpression	"""Can't find Function at given address\\n"""		103682	0					
ANR	103809	ReturnStatement	return false ;	606:3:15605:15617	103682	1	True				
ANR	103810	Identifier	false		103682	0					
ANR	103811	ExpressionStatement	tmp_name = fcn ? fcn -> name : fi -> name	608:2:15625:15661	103682	3	True				
ANR	103812	AssignmentExpression	tmp_name = fcn ? fcn -> name : fi -> name		103682	0		=			
ANR	103813	Identifier	tmp_name		103682	0					
ANR	103814	ConditionalExpression	fcn ? fcn -> name : fi -> name		103682	1					
ANR	103815	Condition	fcn		103682	0					
ANR	103816	Identifier	fcn		103682	0					
ANR	103817	PtrMemberAccess	fcn -> name		103682	1					
ANR	103818	Identifier	fcn		103682	0					
ANR	103819	Identifier	name		103682	1					
ANR	103820	PtrMemberAccess	fi -> name		103682	2					
ANR	103821	Identifier	fi		103682	0					
ANR	103822	Identifier	name		103682	1					
ANR	103823	IfStatement	"if ( r_type_func_exist ( TDB , tmp_name ) )"		103682	5					
ANR	103824	Condition	"r_type_func_exist ( TDB , tmp_name )"	610:5:15671:15703	103682	0	True				
ANR	103825	CallExpression	"r_type_func_exist ( TDB , tmp_name )"		103682	0					
ANR	103826	Callee	r_type_func_exist		103682	0					
ANR	103827	Identifier	r_type_func_exist		103682	0					
ANR	103828	ArgumentList	TDB		103682	1					
ANR	103829	Argument	TDB		103682	0					
ANR	103830	Identifier	TDB		103682	0					
ANR	103831	Argument	tmp_name		103682	1					
ANR	103832	Identifier	tmp_name		103682	0					
ANR	103833	CompoundStatement		21:40:543:543	103682	1					
ANR	103834	ExpressionStatement	fnl_name = strdup ( tmp_name )	611:2:15710:15738	103682	0	True				
ANR	103835	AssignmentExpression	fnl_name = strdup ( tmp_name )		103682	0		=			
ANR	103836	Identifier	fnl_name		103682	0					
ANR	103837	CallExpression	strdup ( tmp_name )		103682	1					
ANR	103838	Callee	strdup		103682	0					
ANR	103839	Identifier	strdup		103682	0					
ANR	103840	ArgumentList	tmp_name		103682	1					
ANR	103841	Argument	tmp_name		103682	0					
ANR	103842	Identifier	tmp_name		103682	0					
ANR	103843	ElseStatement	else		103682	0					
ANR	103844	IfStatement	"if ( ! ( fnl_name = r_type_func_guess ( TDB , ( char * ) tmp_name ) ) )"		103682	0					
ANR	103845	Condition	"! ( fnl_name = r_type_func_guess ( TDB , ( char * ) tmp_name ) )"	612:12:15752:15806	103682	0	True				
ANR	103846	UnaryOperationExpression	"! ( fnl_name = r_type_func_guess ( TDB , ( char * ) tmp_name ) )"		103682	0					
ANR	103847	UnaryOperator	!		103682	0					
ANR	103848	AssignmentExpression	"fnl_name = r_type_func_guess ( TDB , ( char * ) tmp_name )"		103682	1		=			
ANR	103849	Identifier	fnl_name		103682	0					
ANR	103850	CallExpression	"r_type_func_guess ( TDB , ( char * ) tmp_name )"		103682	1					
ANR	103851	Callee	r_type_func_guess		103682	0					
ANR	103852	Identifier	r_type_func_guess		103682	0					
ANR	103853	ArgumentList	TDB		103682	1					
ANR	103854	Argument	TDB		103682	0					
ANR	103855	Identifier	TDB		103682	0					
ANR	103856	Argument	( char * ) tmp_name		103682	1					
ANR	103857	CastExpression	( char * ) tmp_name		103682	0					
ANR	103858	CastTarget	char *		103682	0					
ANR	103859	Identifier	tmp_name		103682	1					
ANR	103860	CompoundStatement		23:69:646:646	103682	1					
ANR	103861	IfStatement	if ( addr == UT64_MAX )		103682	0					
ANR	103862	Condition	addr == UT64_MAX	613:6:15817:15832	103682	0	True				
ANR	103863	EqualityExpression	addr == UT64_MAX		103682	0		==			
ANR	103864	Identifier	addr		103682	0					
ANR	103865	Identifier	UT64_MAX		103682	1					
ANR	103866	CompoundStatement		24:24:672:672	103682	1					
ANR	103867	IfStatement	if ( name )		103682	0					
ANR	103868	Condition	name	614:7:15844:15847	103682	0	True				
ANR	103869	Identifier	name		103682	0					
ANR	103870	CompoundStatement		25:13:687:687	103682	1					
ANR	103871	ExpressionStatement	"sdb_bool_set ( TDB , K_NORET_FUNC ( name ) , true , 0 )"	615:4:15856:15904	103682	0	True				
ANR	103872	CallExpression	"sdb_bool_set ( TDB , K_NORET_FUNC ( name ) , true , 0 )"		103682	0					
ANR	103873	Callee	sdb_bool_set		103682	0					
ANR	103874	Identifier	sdb_bool_set		103682	0					
ANR	103875	ArgumentList	TDB		103682	1					
ANR	103876	Argument	TDB		103682	0					
ANR	103877	Identifier	TDB		103682	0					
ANR	103878	Argument	K_NORET_FUNC ( name )		103682	1					
ANR	103879	CallExpression	K_NORET_FUNC ( name )		103682	0					
ANR	103880	Callee	K_NORET_FUNC		103682	0					
ANR	103881	Identifier	K_NORET_FUNC		103682	0					
ANR	103882	ArgumentList	name		103682	1					
ANR	103883	Argument	name		103682	0					
ANR	103884	Identifier	name		103682	0					
ANR	103885	Argument	true		103682	2					
ANR	103886	Identifier	true		103682	0					
ANR	103887	Argument	0		103682	3					
ANR	103888	PrimaryExpression	0		103682	0					
ANR	103889	ElseStatement	else		103682	0					
ANR	103890	CompoundStatement		27:10:753:753	103682	0					
ANR	103891	ExpressionStatement	"eprintf ( ""Can't find prototype for: %s\\n"" , tmp_name )"	617:4:15922:15974	103682	0	True				
ANR	103892	CallExpression	"eprintf ( ""Can't find prototype for: %s\\n"" , tmp_name )"		103682	0					
ANR	103893	Callee	eprintf		103682	0					
ANR	103894	Identifier	eprintf		103682	0					
ANR	103895	ArgumentList	"""Can't find prototype for: %s\\n"""		103682	1					
ANR	103896	Argument	"""Can't find prototype for: %s\\n"""		103682	0					
ANR	103897	PrimaryExpression	"""Can't find prototype for: %s\\n"""		103682	0					
ANR	103898	Argument	tmp_name		103682	1					
ANR	103899	Identifier	tmp_name		103682	0					
ANR	103900	ElseStatement	else		103682	0					
ANR	103901	CompoundStatement		30:9:827:827	103682	0					
ANR	103902	ExpressionStatement	"eprintf ( ""Can't find prototype for: %s\\n"" , tmp_name )"	620:3:15995:16047	103682	0	True				
ANR	103903	CallExpression	"eprintf ( ""Can't find prototype for: %s\\n"" , tmp_name )"		103682	0					
ANR	103904	Callee	eprintf		103682	0					
ANR	103905	Identifier	eprintf		103682	0					
ANR	103906	ArgumentList	"""Can't find prototype for: %s\\n"""		103682	1					
ANR	103907	Argument	"""Can't find prototype for: %s\\n"""		103682	0					
ANR	103908	PrimaryExpression	"""Can't find prototype for: %s\\n"""		103682	0					
ANR	103909	Argument	tmp_name		103682	1					
ANR	103910	Identifier	tmp_name		103682	0					
ANR	103911	IfStatement	if ( fnl_name )		103682	6					
ANR	103912	Condition	fnl_name	624:5:16079:16086	103682	0	True				
ANR	103913	Identifier	fnl_name		103682	0					
ANR	103914	CompoundStatement		35:15:926:926	103682	1					
ANR	103915	ExpressionStatement	"sdb_bool_set ( TDB , K_NORET_FUNC ( fnl_name ) , true , 0 )"	625:2:16093:16145	103682	0	True				
ANR	103916	CallExpression	"sdb_bool_set ( TDB , K_NORET_FUNC ( fnl_name ) , true , 0 )"		103682	0					
ANR	103917	Callee	sdb_bool_set		103682	0					
ANR	103918	Identifier	sdb_bool_set		103682	0					
ANR	103919	ArgumentList	TDB		103682	1					
ANR	103920	Argument	TDB		103682	0					
ANR	103921	Identifier	TDB		103682	0					
ANR	103922	Argument	K_NORET_FUNC ( fnl_name )		103682	1					
ANR	103923	CallExpression	K_NORET_FUNC ( fnl_name )		103682	0					
ANR	103924	Callee	K_NORET_FUNC		103682	0					
ANR	103925	Identifier	K_NORET_FUNC		103682	0					
ANR	103926	ArgumentList	fnl_name		103682	1					
ANR	103927	Argument	fnl_name		103682	0					
ANR	103928	Identifier	fnl_name		103682	0					
ANR	103929	Argument	true		103682	2					
ANR	103930	Identifier	true		103682	0					
ANR	103931	Argument	0		103682	3					
ANR	103932	PrimaryExpression	0		103682	0					
ANR	103933	ExpressionStatement	free ( fnl_name )	626:2:16149:16164	103682	1	True				
ANR	103934	CallExpression	free ( fnl_name )		103682	0					
ANR	103935	Callee	free		103682	0					
ANR	103936	Identifier	free		103682	0					
ANR	103937	ArgumentList	fnl_name		103682	1					
ANR	103938	Argument	fnl_name		103682	0					
ANR	103939	Identifier	fnl_name		103682	0					
ANR	103940	ReturnStatement	return true ;	628:1:16170:16181	103682	7	True				
ANR	103941	Identifier	true		103682	0					
ANR	103942	ReturnType	R_API bool		103682	1					
ANR	103943	Identifier	r_anal_noreturn_add		103682	2					
ANR	103944	ParameterList	"RAnal * anal , const char * name , ut64 addr"		103682	3					
ANR	103945	Parameter	RAnal * anal	590:31:15120:15130	103682	0	True				
ANR	103946	ParameterType	RAnal *		103682	0					
ANR	103947	Identifier	anal		103682	1					
ANR	103948	Parameter	const char * name	590:44:15133:15148	103682	1	True				
ANR	103949	ParameterType	const char *		103682	0					
ANR	103950	Identifier	name		103682	1					
ANR	103951	Parameter	ut64 addr	590:62:15151:15159	103682	2	True				
ANR	103952	ParameterType	ut64		103682	0					
ANR	103953	Identifier	addr		103682	1					
ANR	103954	CFGEntryNode	ENTRY		103682		True				
ANR	103955	CFGExitNode	EXIT		103682		True				
ANR	103956	Symbol	fi		103682						
ANR	103957	Symbol	* fcn		103682						
ANR	103958	Symbol	fcn -> name		103682						
ANR	103959	Symbol	fi -> name		103682						
ANR	103960	Symbol	fcn		103682						
ANR	103961	Symbol	r_type_func_exist		103682						
ANR	103962	Symbol	* anal		103682						
ANR	103963	Symbol	TDB		103682						
ANR	103964	Symbol	r_type_func_guess		103682						
ANR	103965	Symbol	fnl_name		103682						
ANR	103966	Symbol	anal -> flb		103682						
ANR	103967	Symbol	addr		103682						
ANR	103968	Symbol	UT64_MAX		103682						
ANR	103969	Symbol	* name		103682						
ANR	103970	Symbol	NULL		103682						
ANR	103971	Symbol	K_NORET_ADDR		103682						
ANR	103972	Symbol	false		103682						
ANR	103973	Symbol	* fi		103682						
ANR	103974	Symbol	anal -> flb . get_at		103682						
ANR	103975	Symbol	sdb_bool_set		103682						
ANR	103976	Symbol	tmp_name		103682						
ANR	103977	Symbol	r_anal_get_fcn_in		103682						
ANR	103978	Symbol	anal -> flb . f		103682						
ANR	103979	Symbol	anal		103682						
ANR	103980	Symbol	name		103682						
ANR	103981	Symbol	true		103682						
ANR	103982	Symbol	strdup		103682						
ANR	103983	Symbol	anal -> sdb_types		103682						
ANR	103984	Symbol	K_NORET_FUNC		103682						
ANR	103985	Function	r_anal_noreturn_drop	631:0:16186:17217							
ANR	103986	FunctionDef	"r_anal_noreturn_drop (RAnal * anal , const char * expr)"		103985	0					
ANR	103987	CompoundStatement		631:63:16249:17217	103985	0					
ANR	103988	IdentifierDeclStatement	Sdb * TDB = anal -> sdb_types ;	632:1:16252:16278	103985	0	True				
ANR	103989	IdentifierDecl	* TDB = anal -> sdb_types		103985	0					
ANR	103990	IdentifierDeclType	Sdb *		103985	0					
ANR	103991	Identifier	TDB		103985	1					
ANR	103992	AssignmentExpression	* TDB = anal -> sdb_types		103985	2		=			
ANR	103993	Identifier	TDB		103985	0					
ANR	103994	PtrMemberAccess	anal -> sdb_types		103985	1					
ANR	103995	Identifier	anal		103985	0					
ANR	103996	Identifier	sdb_types		103985	1					
ANR	103997	ExpressionStatement	expr = r_str_trim_ro ( expr )	633:1:16281:16308	103985	1	True				
ANR	103998	AssignmentExpression	expr = r_str_trim_ro ( expr )		103985	0		=			
ANR	103999	Identifier	expr		103985	0					
ANR	104000	CallExpression	r_str_trim_ro ( expr )		103985	1					
ANR	104001	Callee	r_str_trim_ro		103985	0					
ANR	104002	Identifier	r_str_trim_ro		103985	0					
ANR	104003	ArgumentList	expr		103985	1					
ANR	104004	Argument	expr		103985	0					
ANR	104005	Identifier	expr		103985	0					
ANR	104006	IdentifierDeclStatement	const char * fcnname = NULL ;	634:1:16311:16337	103985	2	True				
ANR	104007	IdentifierDecl	* fcnname = NULL		103985	0					
ANR	104008	IdentifierDeclType	const char *		103985	0					
ANR	104009	Identifier	fcnname		103985	1					
ANR	104010	AssignmentExpression	* fcnname = NULL		103985	2		=			
ANR	104011	Identifier	NULL		103985	0					
ANR	104012	Identifier	NULL		103985	1					
ANR	104013	IfStatement	"if ( ! strncmp ( expr , ""0x"" , 2 ) )"		103985	3					
ANR	104014	Condition	"! strncmp ( expr , ""0x"" , 2 )"	635:5:16344:16367	103985	0	True				
ANR	104015	UnaryOperationExpression	"! strncmp ( expr , ""0x"" , 2 )"		103985	0					
ANR	104016	UnaryOperator	!		103985	0					
ANR	104017	CallExpression	"strncmp ( expr , ""0x"" , 2 )"		103985	1					
ANR	104018	Callee	strncmp		103985	0					
ANR	104019	Identifier	strncmp		103985	0					
ANR	104020	ArgumentList	expr		103985	1					
ANR	104021	Argument	expr		103985	0					
ANR	104022	Identifier	expr		103985	0					
ANR	104023	Argument	"""0x"""		103985	1					
ANR	104024	PrimaryExpression	"""0x"""		103985	0					
ANR	104025	Argument	2		103985	2					
ANR	104026	PrimaryExpression	2		103985	0					
ANR	104027	CompoundStatement		8:2:200:252	103985	1					
ANR	104028	IdentifierDeclStatement	"ut64 n = r_num_math ( NULL , expr ) ;"	636:2:16374:16406	103985	0	True				
ANR	104029	IdentifierDecl	"n = r_num_math ( NULL , expr )"		103985	0					
ANR	104030	IdentifierDeclType	ut64		103985	0					
ANR	104031	Identifier	n		103985	1					
ANR	104032	AssignmentExpression	"n = r_num_math ( NULL , expr )"		103985	2		=			
ANR	104033	Identifier	n		103985	0					
ANR	104034	CallExpression	"r_num_math ( NULL , expr )"		103985	1					
ANR	104035	Callee	r_num_math		103985	0					
ANR	104036	Identifier	r_num_math		103985	0					
ANR	104037	ArgumentList	NULL		103985	1					
ANR	104038	Argument	NULL		103985	0					
ANR	104039	Identifier	NULL		103985	0					
ANR	104040	Argument	expr		103985	1					
ANR	104041	Identifier	expr		103985	0					
ANR	104042	ExpressionStatement	"sdb_unset ( TDB , K_NORET_ADDR ( n ) , 0 )"	637:2:16410:16446	103985	1	True				
ANR	104043	CallExpression	"sdb_unset ( TDB , K_NORET_ADDR ( n ) , 0 )"		103985	0					
ANR	104044	Callee	sdb_unset		103985	0					
ANR	104045	Identifier	sdb_unset		103985	0					
ANR	104046	ArgumentList	TDB		103985	1					
ANR	104047	Argument	TDB		103985	0					
ANR	104048	Identifier	TDB		103985	0					
ANR	104049	Argument	K_NORET_ADDR ( n )		103985	1					
ANR	104050	CallExpression	K_NORET_ADDR ( n )		103985	0					
ANR	104051	Callee	K_NORET_ADDR		103985	0					
ANR	104052	Identifier	K_NORET_ADDR		103985	0					
ANR	104053	ArgumentList	n		103985	1					
ANR	104054	Argument	n		103985	0					
ANR	104055	Identifier	n		103985	0					
ANR	104056	Argument	0		103985	2					
ANR	104057	PrimaryExpression	0		103985	0					
ANR	104058	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( anal , n , - 1 ) ;"	638:2:16450:16502	103985	2	True				
ANR	104059	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( anal , n , - 1 )"		103985	0					
ANR	104060	IdentifierDeclType	RAnalFunction *		103985	0					
ANR	104061	Identifier	fcn		103985	1					
ANR	104062	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( anal , n , - 1 )"		103985	2		=			
ANR	104063	Identifier	fcn		103985	0					
ANR	104064	CallExpression	"r_anal_get_fcn_in ( anal , n , - 1 )"		103985	1					
ANR	104065	Callee	r_anal_get_fcn_in		103985	0					
ANR	104066	Identifier	r_anal_get_fcn_in		103985	0					
ANR	104067	ArgumentList	anal		103985	1					
ANR	104068	Argument	anal		103985	0					
ANR	104069	Identifier	anal		103985	0					
ANR	104070	Argument	n		103985	1					
ANR	104071	Identifier	n		103985	0					
ANR	104072	Argument	- 1		103985	2					
ANR	104073	UnaryOperationExpression	- 1		103985	0					
ANR	104074	UnaryOperator	-		103985	0					
ANR	104075	PrimaryExpression	1		103985	1					
ANR	104076	IfStatement	if ( ! fcn )		103985	3					
ANR	104077	Condition	! fcn	639:6:16510:16513	103985	0	True				
ANR	104078	UnaryOperationExpression	! fcn		103985	0					
ANR	104079	UnaryOperator	!		103985	0					
ANR	104080	Identifier	fcn		103985	1					
ANR	104081	CompoundStatement		9:12:266:266	103985	1					
ANR	104082	ReturnStatement	return false ;	641:3:16581:16593	103985	0	True				
ANR	104083	Identifier	false		103985	0					
ANR	104084	ExpressionStatement	fcnname = fcn -> name	643:2:16601:16620	103985	4	True				
ANR	104085	AssignmentExpression	fcnname = fcn -> name		103985	0		=			
ANR	104086	Identifier	fcnname		103985	0					
ANR	104087	PtrMemberAccess	fcn -> name		103985	1					
ANR	104088	Identifier	fcn		103985	0					
ANR	104089	Identifier	name		103985	1					
ANR	104090	ElseStatement	else		103985	0					
ANR	104091	CompoundStatement		14:8:380:380	103985	0					
ANR	104092	ExpressionStatement	fcnname = expr	645:2:16634:16648	103985	0	True				
ANR	104093	AssignmentExpression	fcnname = expr		103985	0		=			
ANR	104094	Identifier	fcnname		103985	0					
ANR	104095	Identifier	expr		103985	1					
ANR	104096	ExpressionStatement	"sdb_unset ( TDB , K_NORET_FUNC ( fcnname ) , 0 )"	647:1:16654:16696	103985	4	True				
ANR	104097	CallExpression	"sdb_unset ( TDB , K_NORET_FUNC ( fcnname ) , 0 )"		103985	0					
ANR	104098	Callee	sdb_unset		103985	0					
ANR	104099	Identifier	sdb_unset		103985	0					
ANR	104100	ArgumentList	TDB		103985	1					
ANR	104101	Argument	TDB		103985	0					
ANR	104102	Identifier	TDB		103985	0					
ANR	104103	Argument	K_NORET_FUNC ( fcnname )		103985	1					
ANR	104104	CallExpression	K_NORET_FUNC ( fcnname )		103985	0					
ANR	104105	Callee	K_NORET_FUNC		103985	0					
ANR	104106	Identifier	K_NORET_FUNC		103985	0					
ANR	104107	ArgumentList	fcnname		103985	1					
ANR	104108	Argument	fcnname		103985	0					
ANR	104109	Identifier	fcnname		103985	0					
ANR	104110	Argument	0		103985	2					
ANR	104111	PrimaryExpression	0		103985	0					
ANR	104112	IdentifierDeclStatement	char * tmp ;	649:1:16705:16714	103985	5	True				
ANR	104113	IdentifierDecl	* tmp		103985	0					
ANR	104114	IdentifierDeclType	char *		103985	0					
ANR	104115	Identifier	tmp		103985	1					
ANR	104116	IfStatement	"if ( r_type_func_exist ( TDB , fcnname ) )"		103985	6					
ANR	104117	Condition	"r_type_func_exist ( TDB , fcnname )"	651:5:16887:16918	103985	0	True				
ANR	104118	CallExpression	"r_type_func_exist ( TDB , fcnname )"		103985	0					
ANR	104119	Callee	r_type_func_exist		103985	0					
ANR	104120	Identifier	r_type_func_exist		103985	0					
ANR	104121	ArgumentList	TDB		103985	1					
ANR	104122	Argument	TDB		103985	0					
ANR	104123	Identifier	TDB		103985	0					
ANR	104124	Argument	fcnname		103985	1					
ANR	104125	Identifier	fcnname		103985	0					
ANR	104126	CompoundStatement		21:39:671:671	103985	1					
ANR	104127	ExpressionStatement	"sdb_unset ( TDB , K_NORET_FUNC ( fcnname ) , 0 )"	652:2:16925:16967	103985	0	True				
ANR	104128	CallExpression	"sdb_unset ( TDB , K_NORET_FUNC ( fcnname ) , 0 )"		103985	0					
ANR	104129	Callee	sdb_unset		103985	0					
ANR	104130	Identifier	sdb_unset		103985	0					
ANR	104131	ArgumentList	TDB		103985	1					
ANR	104132	Argument	TDB		103985	0					
ANR	104133	Identifier	TDB		103985	0					
ANR	104134	Argument	K_NORET_FUNC ( fcnname )		103985	1					
ANR	104135	CallExpression	K_NORET_FUNC ( fcnname )		103985	0					
ANR	104136	Callee	K_NORET_FUNC		103985	0					
ANR	104137	Identifier	K_NORET_FUNC		103985	0					
ANR	104138	ArgumentList	fcnname		103985	1					
ANR	104139	Argument	fcnname		103985	0					
ANR	104140	Identifier	fcnname		103985	0					
ANR	104141	Argument	0		103985	2					
ANR	104142	PrimaryExpression	0		103985	0					
ANR	104143	ReturnStatement	return true ;	653:2:16971:16982	103985	1	True				
ANR	104144	Identifier	true		103985	0					
ANR	104145	ElseStatement	else		103985	0					
ANR	104146	IfStatement	"if ( ( tmp = r_type_func_guess ( TDB , ( char * ) fcnname ) ) )"		103985	0					
ANR	104147	Condition	"tmp = r_type_func_guess ( TDB , ( char * ) fcnname )"	654:12:16996:17043	103985	0	True				
ANR	104148	AssignmentExpression	"tmp = r_type_func_guess ( TDB , ( char * ) fcnname )"		103985	0		=			
ANR	104149	Identifier	tmp		103985	0					
ANR	104150	CallExpression	"r_type_func_guess ( TDB , ( char * ) fcnname )"		103985	1					
ANR	104151	Callee	r_type_func_guess		103985	0					
ANR	104152	Identifier	r_type_func_guess		103985	0					
ANR	104153	ArgumentList	TDB		103985	1					
ANR	104154	Argument	TDB		103985	0					
ANR	104155	Identifier	TDB		103985	0					
ANR	104156	Argument	( char * ) fcnname		103985	1					
ANR	104157	CastExpression	( char * ) fcnname		103985	0					
ANR	104158	CastTarget	char *		103985	0					
ANR	104159	Identifier	fcnname		103985	1					
ANR	104160	CompoundStatement		24:62:796:796	103985	1					
ANR	104161	ExpressionStatement	"sdb_unset ( TDB , K_NORET_FUNC ( fcnname ) , 0 )"	655:2:17050:17092	103985	0	True				
ANR	104162	CallExpression	"sdb_unset ( TDB , K_NORET_FUNC ( fcnname ) , 0 )"		103985	0					
ANR	104163	Callee	sdb_unset		103985	0					
ANR	104164	Identifier	sdb_unset		103985	0					
ANR	104165	ArgumentList	TDB		103985	1					
ANR	104166	Argument	TDB		103985	0					
ANR	104167	Identifier	TDB		103985	0					
ANR	104168	Argument	K_NORET_FUNC ( fcnname )		103985	1					
ANR	104169	CallExpression	K_NORET_FUNC ( fcnname )		103985	0					
ANR	104170	Callee	K_NORET_FUNC		103985	0					
ANR	104171	Identifier	K_NORET_FUNC		103985	0					
ANR	104172	ArgumentList	fcnname		103985	1					
ANR	104173	Argument	fcnname		103985	0					
ANR	104174	Identifier	fcnname		103985	0					
ANR	104175	Argument	0		103985	2					
ANR	104176	PrimaryExpression	0		103985	0					
ANR	104177	ExpressionStatement	free ( tmp )	656:2:17096:17106	103985	1	True				
ANR	104178	CallExpression	free ( tmp )		103985	0					
ANR	104179	Callee	free		103985	0					
ANR	104180	Identifier	free		103985	0					
ANR	104181	ArgumentList	tmp		103985	1					
ANR	104182	Argument	tmp		103985	0					
ANR	104183	Identifier	tmp		103985	0					
ANR	104184	ReturnStatement	return true ;	657:2:17110:17121	103985	2	True				
ANR	104185	Identifier	true		103985	0					
ANR	104186	ExpressionStatement	"eprintf ( ""Can't find prototype for %s in types database"" , fcnname )"	659:1:17127:17193	103985	7	True				
ANR	104187	CallExpression	"eprintf ( ""Can't find prototype for %s in types database"" , fcnname )"		103985	0					
ANR	104188	Callee	eprintf		103985	0					
ANR	104189	Identifier	eprintf		103985	0					
ANR	104190	ArgumentList	"""Can't find prototype for %s in types database"""		103985	1					
ANR	104191	Argument	"""Can't find prototype for %s in types database"""		103985	0					
ANR	104192	PrimaryExpression	"""Can't find prototype for %s in types database"""		103985	0					
ANR	104193	Argument	fcnname		103985	1					
ANR	104194	Identifier	fcnname		103985	0					
ANR	104195	ReturnStatement	return false ;	661:1:17203:17215	103985	8	True				
ANR	104196	Identifier	false		103985	0					
ANR	104197	ReturnType	R_API bool		103985	1					
ANR	104198	Identifier	r_anal_noreturn_drop		103985	2					
ANR	104199	ParameterList	"RAnal * anal , const char * expr"		103985	3					
ANR	104200	Parameter	RAnal * anal	631:32:16218:16228	103985	0	True				
ANR	104201	ParameterType	RAnal *		103985	0					
ANR	104202	Identifier	anal		103985	1					
ANR	104203	Parameter	const char * expr	631:45:16231:16246	103985	1	True				
ANR	104204	ParameterType	const char *		103985	0					
ANR	104205	Identifier	expr		103985	1					
ANR	104206	CFGEntryNode	ENTRY		103985		True				
ANR	104207	CFGExitNode	EXIT		103985		True				
ANR	104208	Symbol	NULL		103985						
ANR	104209	Symbol	K_NORET_ADDR		103985						
ANR	104210	Symbol	* fcn		103985						
ANR	104211	Symbol	fcn -> name		103985						
ANR	104212	Symbol	false		103985						
ANR	104213	Symbol	n		103985						
ANR	104214	Symbol	r_num_math		103985						
ANR	104215	Symbol	fcnname		103985						
ANR	104216	Symbol	fcn		103985						
ANR	104217	Symbol	strncmp		103985						
ANR	104218	Symbol	r_type_func_exist		103985						
ANR	104219	Symbol	* anal		103985						
ANR	104220	Symbol	TDB		103985						
ANR	104221	Symbol	r_anal_get_fcn_in		103985						
ANR	104222	Symbol	r_type_func_guess		103985						
ANR	104223	Symbol	anal		103985						
ANR	104224	Symbol	tmp		103985						
ANR	104225	Symbol	r_str_trim_ro		103985						
ANR	104226	Symbol	true		103985						
ANR	104227	Symbol	expr		103985						
ANR	104228	Symbol	anal -> sdb_types		103985						
ANR	104229	Symbol	K_NORET_FUNC		103985						
ANR	104230	Function	r_anal_noreturn_at_name	664:0:17220:17677							
ANR	104231	FunctionDef	"r_anal_noreturn_at_name (RAnal * anal , const char * name)"		104230	0					
ANR	104232	CompoundStatement		664:67:17287:17677	104230	0					
ANR	104233	IfStatement	"if ( sdb_bool_get ( anal -> sdb_types , K_NORET_FUNC ( name ) , NULL ) )"		104230	0					
ANR	104234	Condition	"sdb_bool_get ( anal -> sdb_types , K_NORET_FUNC ( name ) , NULL )"	665:5:17294:17349	104230	0	True				
ANR	104235	CallExpression	"sdb_bool_get ( anal -> sdb_types , K_NORET_FUNC ( name ) , NULL )"		104230	0					
ANR	104236	Callee	sdb_bool_get		104230	0					
ANR	104237	Identifier	sdb_bool_get		104230	0					
ANR	104238	ArgumentList	anal -> sdb_types		104230	1					
ANR	104239	Argument	anal -> sdb_types		104230	0					
ANR	104240	PtrMemberAccess	anal -> sdb_types		104230	0					
ANR	104241	Identifier	anal		104230	0					
ANR	104242	Identifier	sdb_types		104230	1					
ANR	104243	Argument	K_NORET_FUNC ( name )		104230	1					
ANR	104244	CallExpression	K_NORET_FUNC ( name )		104230	0					
ANR	104245	Callee	K_NORET_FUNC		104230	0					
ANR	104246	Identifier	K_NORET_FUNC		104230	0					
ANR	104247	ArgumentList	name		104230	1					
ANR	104248	Argument	name		104230	0					
ANR	104249	Identifier	name		104230	0					
ANR	104250	Argument	NULL		104230	2					
ANR	104251	Identifier	NULL		104230	0					
ANR	104252	CompoundStatement		2:63:64:64	104230	1					
ANR	104253	ReturnStatement	return true ;	666:2:17356:17367	104230	0	True				
ANR	104254	Identifier	true		104230	0					
ANR	104255	IdentifierDeclStatement	"char * tmp = r_type_func_guess ( anal -> sdb_types , ( char * ) name ) ;"	668:1:17373:17434	104230	1	True				
ANR	104256	IdentifierDecl	"* tmp = r_type_func_guess ( anal -> sdb_types , ( char * ) name )"		104230	0					
ANR	104257	IdentifierDeclType	char *		104230	0					
ANR	104258	Identifier	tmp		104230	1					
ANR	104259	AssignmentExpression	"* tmp = r_type_func_guess ( anal -> sdb_types , ( char * ) name )"		104230	2		=			
ANR	104260	Identifier	tmp		104230	0					
ANR	104261	CallExpression	"r_type_func_guess ( anal -> sdb_types , ( char * ) name )"		104230	1					
ANR	104262	Callee	r_type_func_guess		104230	0					
ANR	104263	Identifier	r_type_func_guess		104230	0					
ANR	104264	ArgumentList	anal -> sdb_types		104230	1					
ANR	104265	Argument	anal -> sdb_types		104230	0					
ANR	104266	PtrMemberAccess	anal -> sdb_types		104230	0					
ANR	104267	Identifier	anal		104230	0					
ANR	104268	Identifier	sdb_types		104230	1					
ANR	104269	Argument	( char * ) name		104230	1					
ANR	104270	CastExpression	( char * ) name		104230	0					
ANR	104271	CastTarget	char *		104230	0					
ANR	104272	Identifier	name		104230	1					
ANR	104273	IfStatement	if ( tmp )		104230	2					
ANR	104274	Condition	tmp	669:5:17441:17443	104230	0	True				
ANR	104275	Identifier	tmp		104230	0					
ANR	104276	CompoundStatement		6:10:158:158	104230	1					
ANR	104277	IfStatement	"if ( sdb_bool_get ( anal -> sdb_types , K_NORET_FUNC ( tmp ) , NULL ) )"		104230	0					
ANR	104278	Condition	"sdb_bool_get ( anal -> sdb_types , K_NORET_FUNC ( tmp ) , NULL )"	670:6:17454:17509	104230	0	True				
ANR	104279	CallExpression	"sdb_bool_get ( anal -> sdb_types , K_NORET_FUNC ( tmp ) , NULL )"		104230	0					
ANR	104280	Callee	sdb_bool_get		104230	0					
ANR	104281	Identifier	sdb_bool_get		104230	0					
ANR	104282	ArgumentList	anal -> sdb_types		104230	1					
ANR	104283	Argument	anal -> sdb_types		104230	0					
ANR	104284	PtrMemberAccess	anal -> sdb_types		104230	0					
ANR	104285	Identifier	anal		104230	0					
ANR	104286	Identifier	sdb_types		104230	1					
ANR	104287	Argument	K_NORET_FUNC ( tmp )		104230	1					
ANR	104288	CallExpression	K_NORET_FUNC ( tmp )		104230	0					
ANR	104289	Callee	K_NORET_FUNC		104230	0					
ANR	104290	Identifier	K_NORET_FUNC		104230	0					
ANR	104291	ArgumentList	tmp		104230	1					
ANR	104292	Argument	tmp		104230	0					
ANR	104293	Identifier	tmp		104230	0					
ANR	104294	Argument	NULL		104230	2					
ANR	104295	Identifier	NULL		104230	0					
ANR	104296	CompoundStatement		7:64:224:224	104230	1					
ANR	104297	ExpressionStatement	free ( tmp )	671:3:17517:17527	104230	0	True				
ANR	104298	CallExpression	free ( tmp )		104230	0					
ANR	104299	Callee	free		104230	0					
ANR	104300	Identifier	free		104230	0					
ANR	104301	ArgumentList	tmp		104230	1					
ANR	104302	Argument	tmp		104230	0					
ANR	104303	Identifier	tmp		104230	0					
ANR	104304	ReturnStatement	return true ;	672:3:17532:17543	104230	1	True				
ANR	104305	Identifier	true		104230	0					
ANR	104306	ExpressionStatement	free ( tmp )	674:2:17551:17561	104230	1	True				
ANR	104307	CallExpression	free ( tmp )		104230	0					
ANR	104308	Callee	free		104230	0					
ANR	104309	Identifier	free		104230	0					
ANR	104310	ArgumentList	tmp		104230	1					
ANR	104311	Argument	tmp		104230	0					
ANR	104312	Identifier	tmp		104230	0					
ANR	104313	IfStatement	"if ( r_str_startswith ( name , ""reloc."" ) )"		104230	3					
ANR	104314	Condition	"r_str_startswith ( name , ""reloc."" )"	676:5:17571:17603	104230	0	True				
ANR	104315	CallExpression	"r_str_startswith ( name , ""reloc."" )"		104230	0					
ANR	104316	Callee	r_str_startswith		104230	0					
ANR	104317	Identifier	r_str_startswith		104230	0					
ANR	104318	ArgumentList	name		104230	1					
ANR	104319	Argument	name		104230	0					
ANR	104320	Identifier	name		104230	0					
ANR	104321	Argument	"""reloc."""		104230	1					
ANR	104322	PrimaryExpression	"""reloc."""		104230	0					
ANR	104323	CompoundStatement		13:40:318:318	104230	1					
ANR	104324	ReturnStatement	"return r_anal_noreturn_at_name ( anal , name + 6 ) ;"	677:2:17610:17657	104230	0	True				
ANR	104325	CallExpression	"r_anal_noreturn_at_name ( anal , name + 6 )"		104230	0					
ANR	104326	Callee	r_anal_noreturn_at_name		104230	0					
ANR	104327	Identifier	r_anal_noreturn_at_name		104230	0					
ANR	104328	ArgumentList	anal		104230	1					
ANR	104329	Argument	anal		104230	0					
ANR	104330	Identifier	anal		104230	0					
ANR	104331	Argument	name + 6		104230	1					
ANR	104332	AdditiveExpression	name + 6		104230	0		+			
ANR	104333	Identifier	name		104230	0					
ANR	104334	PrimaryExpression	6		104230	1					
ANR	104335	ReturnStatement	return false ;	679:1:17663:17675	104230	4	True				
ANR	104336	Identifier	false		104230	0					
ANR	104337	ReturnType	static bool		104230	1					
ANR	104338	Identifier	r_anal_noreturn_at_name		104230	2					
ANR	104339	ParameterList	"RAnal * anal , const char * name"		104230	3					
ANR	104340	Parameter	RAnal * anal	664:36:17256:17266	104230	0	True				
ANR	104341	ParameterType	RAnal *		104230	0					
ANR	104342	Identifier	anal		104230	1					
ANR	104343	Parameter	const char * name	664:49:17269:17284	104230	1	True				
ANR	104344	ParameterType	const char *		104230	0					
ANR	104345	Identifier	name		104230	1					
ANR	104346	CFGEntryNode	ENTRY		104230		True				
ANR	104347	CFGExitNode	EXIT		104230		True				
ANR	104348	Symbol	r_str_startswith		104230						
ANR	104349	Symbol	NULL		104230						
ANR	104350	Symbol	false		104230						
ANR	104351	Symbol	r_anal_noreturn_at_name		104230						
ANR	104352	Symbol	* anal		104230						
ANR	104353	Symbol	r_type_func_guess		104230						
ANR	104354	Symbol	anal		104230						
ANR	104355	Symbol	tmp		104230						
ANR	104356	Symbol	name		104230						
ANR	104357	Symbol	true		104230						
ANR	104358	Symbol	sdb_bool_get		104230						
ANR	104359	Symbol	anal -> sdb_types		104230						
ANR	104360	Symbol	K_NORET_FUNC		104230						
ANR	104361	Function	r_anal_noreturn_at_addr	682:0:17680:17808							
ANR	104362	FunctionDef	"r_anal_noreturn_at_addr (RAnal * anal , ut64 addr)"		104361	0					
ANR	104363	CompoundStatement		682:59:17739:17808	104361	0					
ANR	104364	ReturnStatement	"return sdb_bool_get ( anal -> sdb_types , K_NORET_ADDR ( addr ) , NULL ) ;"	683:1:17742:17806	104361	0	True				
ANR	104365	CallExpression	"sdb_bool_get ( anal -> sdb_types , K_NORET_ADDR ( addr ) , NULL )"		104361	0					
ANR	104366	Callee	sdb_bool_get		104361	0					
ANR	104367	Identifier	sdb_bool_get		104361	0					
ANR	104368	ArgumentList	anal -> sdb_types		104361	1					
ANR	104369	Argument	anal -> sdb_types		104361	0					
ANR	104370	PtrMemberAccess	anal -> sdb_types		104361	0					
ANR	104371	Identifier	anal		104361	0					
ANR	104372	Identifier	sdb_types		104361	1					
ANR	104373	Argument	K_NORET_ADDR ( addr )		104361	1					
ANR	104374	CallExpression	K_NORET_ADDR ( addr )		104361	0					
ANR	104375	Callee	K_NORET_ADDR		104361	0					
ANR	104376	Identifier	K_NORET_ADDR		104361	0					
ANR	104377	ArgumentList	addr		104361	1					
ANR	104378	Argument	addr		104361	0					
ANR	104379	Identifier	addr		104361	0					
ANR	104380	Argument	NULL		104361	2					
ANR	104381	Identifier	NULL		104361	0					
ANR	104382	ReturnType	R_API bool		104361	1					
ANR	104383	Identifier	r_anal_noreturn_at_addr		104361	2					
ANR	104384	ParameterList	"RAnal * anal , ut64 addr"		104361	3					
ANR	104385	Parameter	RAnal * anal	682:35:17715:17725	104361	0	True				
ANR	104386	ParameterType	RAnal *		104361	0					
ANR	104387	Identifier	anal		104361	1					
ANR	104388	Parameter	ut64 addr	682:48:17728:17736	104361	1	True				
ANR	104389	ParameterType	ut64		104361	0					
ANR	104390	Identifier	addr		104361	1					
ANR	104391	CFGEntryNode	ENTRY		104361		True				
ANR	104392	CFGExitNode	EXIT		104361		True				
ANR	104393	Symbol	* anal		104361						
ANR	104394	Symbol	K_NORET_ADDR		104361						
ANR	104395	Symbol	NULL		104361						
ANR	104396	Symbol	anal		104361						
ANR	104397	Symbol	sdb_bool_get		104361						
ANR	104398	Symbol	addr		104361						
ANR	104399	Symbol	anal -> sdb_types		104361						
ANR	104400	Function	noreturn_recurse	686:0:17811:18727							
ANR	104401	FunctionDef	"noreturn_recurse (RAnal * anal , ut64 addr)"		104400	0					
ANR	104402	CompoundStatement		686:53:17864:18727	104400	0					
ANR	104403	IdentifierDeclStatement	RAnalOp op = { 0 } ;	687:1:17867:17883	104400	0	True				
ANR	104404	IdentifierDecl	op = { 0 }		104400	0					
ANR	104405	IdentifierDeclType	RAnalOp		104400	0					
ANR	104406	Identifier	op		104400	1					
ANR	104407	AssignmentExpression	op = { 0 }		104400	2		=			
ANR	104408	Identifier	op		104400	0					
ANR	104409	InitializerList	0		104400	1					
ANR	104410	PrimaryExpression	0		104400	0					
ANR	104411	IdentifierDeclStatement	ut8 bbuf [ 0x10 ] = { 0 } ;	688:1:17886:17906	104400	1	True				
ANR	104412	IdentifierDecl	bbuf [ 0x10 ] = { 0 }		104400	0					
ANR	104413	IdentifierDeclType	ut8 [ 0x10 ]		104400	0					
ANR	104414	Identifier	bbuf		104400	1					
ANR	104415	PrimaryExpression	0x10		104400	2					
ANR	104416	AssignmentExpression	bbuf [ 0x10 ] = { 0 }		104400	3		=			
ANR	104417	Identifier	bbuf		104400	0					
ANR	104418	InitializerList	0		104400	1					
ANR	104419	PrimaryExpression	0		104400	0					
ANR	104420	IdentifierDeclStatement	ut64 recurse_addr = UT64_MAX ;	689:1:17909:17937	104400	2	True				
ANR	104421	IdentifierDecl	recurse_addr = UT64_MAX		104400	0					
ANR	104422	IdentifierDeclType	ut64		104400	0					
ANR	104423	Identifier	recurse_addr		104400	1					
ANR	104424	AssignmentExpression	recurse_addr = UT64_MAX		104400	2		=			
ANR	104425	Identifier	UT64_MAX		104400	0					
ANR	104426	Identifier	UT64_MAX		104400	1					
ANR	104427	IfStatement	"if ( ! anal -> iob . read_at ( anal -> iob . io , addr , bbuf , sizeof ( bbuf ) ) )"		104400	3					
ANR	104428	Condition	"! anal -> iob . read_at ( anal -> iob . io , addr , bbuf , sizeof ( bbuf ) )"	690:5:17944:18003	104400	0	True				
ANR	104429	UnaryOperationExpression	"! anal -> iob . read_at ( anal -> iob . io , addr , bbuf , sizeof ( bbuf ) )"		104400	0					
ANR	104430	UnaryOperator	!		104400	0					
ANR	104431	CallExpression	"anal -> iob . read_at ( anal -> iob . io , addr , bbuf , sizeof ( bbuf ) )"		104400	1					
ANR	104432	Callee	anal -> iob . read_at		104400	0					
ANR	104433	MemberAccess	anal -> iob . read_at		104400	0					
ANR	104434	PtrMemberAccess	anal -> iob		104400	0					
ANR	104435	Identifier	anal		104400	0					
ANR	104436	Identifier	iob		104400	1					
ANR	104437	Identifier	read_at		104400	1					
ANR	104438	ArgumentList	anal -> iob . io		104400	1					
ANR	104439	Argument	anal -> iob . io		104400	0					
ANR	104440	MemberAccess	anal -> iob . io		104400	0					
ANR	104441	PtrMemberAccess	anal -> iob		104400	0					
ANR	104442	Identifier	anal		104400	0					
ANR	104443	Identifier	iob		104400	1					
ANR	104444	Identifier	io		104400	1					
ANR	104445	Argument	addr		104400	1					
ANR	104446	Identifier	addr		104400	0					
ANR	104447	Argument	bbuf		104400	2					
ANR	104448	Identifier	bbuf		104400	0					
ANR	104449	Argument	sizeof ( bbuf )		104400	3					
ANR	104450	SizeofExpression	sizeof ( bbuf )		104400	0					
ANR	104451	Sizeof	sizeof		104400	0					
ANR	104452	SizeofOperand	bbuf		104400	1					
ANR	104453	CompoundStatement		5:67:141:141	104400	1					
ANR	104454	ExpressionStatement	"eprintf ( ""Couldn't read buffer\\n"" )"	691:2:18010:18044	104400	0	True				
ANR	104455	CallExpression	"eprintf ( ""Couldn't read buffer\\n"" )"		104400	0					
ANR	104456	Callee	eprintf		104400	0					
ANR	104457	Identifier	eprintf		104400	0					
ANR	104458	ArgumentList	"""Couldn't read buffer\\n"""		104400	1					
ANR	104459	Argument	"""Couldn't read buffer\\n"""		104400	0					
ANR	104460	PrimaryExpression	"""Couldn't read buffer\\n"""		104400	0					
ANR	104461	ReturnStatement	return false ;	692:2:18048:18060	104400	1	True				
ANR	104462	Identifier	false		104400	0					
ANR	104463	IfStatement	"if ( r_anal_op ( anal , & op , addr , bbuf , sizeof ( bbuf ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL ) < 1 )"		104400	4					
ANR	104464	Condition	"r_anal_op ( anal , & op , addr , bbuf , sizeof ( bbuf ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL ) < 1"	694:5:18070:18164	104400	0	True				
ANR	104465	RelationalExpression	"r_anal_op ( anal , & op , addr , bbuf , sizeof ( bbuf ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL ) < 1"		104400	0		<			
ANR	104466	CallExpression	"r_anal_op ( anal , & op , addr , bbuf , sizeof ( bbuf ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL )"		104400	0					
ANR	104467	Callee	r_anal_op		104400	0					
ANR	104468	Identifier	r_anal_op		104400	0					
ANR	104469	ArgumentList	anal		104400	1					
ANR	104470	Argument	anal		104400	0					
ANR	104471	Identifier	anal		104400	0					
ANR	104472	Argument	& op		104400	1					
ANR	104473	UnaryOperationExpression	& op		104400	0					
ANR	104474	UnaryOperator	&		104400	0					
ANR	104475	Identifier	op		104400	1					
ANR	104476	Argument	addr		104400	2					
ANR	104477	Identifier	addr		104400	0					
ANR	104478	Argument	bbuf		104400	3					
ANR	104479	Identifier	bbuf		104400	0					
ANR	104480	Argument	sizeof ( bbuf )		104400	4					
ANR	104481	SizeofExpression	sizeof ( bbuf )		104400	0					
ANR	104482	Sizeof	sizeof		104400	0					
ANR	104483	SizeofOperand	bbuf		104400	1					
ANR	104484	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL		104400	5					
ANR	104485	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL		104400	0		|			
ANR	104486	Identifier	R_ANAL_OP_MASK_BASIC		104400	0					
ANR	104487	Identifier	R_ANAL_OP_MASK_VAL		104400	1					
ANR	104488	PrimaryExpression	1		104400	1					
ANR	104489	CompoundStatement		9:102:302:302	104400	1					
ANR	104490	ReturnStatement	return false ;	695:2:18171:18183	104400	0	True				
ANR	104491	Identifier	false		104400	0					
ANR	104492	SwitchStatement	switch ( op . type & R_ANAL_OP_TYPE_MASK )		104400	5					
ANR	104493	Condition	op . type & R_ANAL_OP_TYPE_MASK	697:9:18197:18225	104400	0	True				
ANR	104494	BitAndExpression	op . type & R_ANAL_OP_TYPE_MASK		104400	0		&			
ANR	104495	MemberAccess	op . type		104400	0					
ANR	104496	Identifier	op		104400	0					
ANR	104497	Identifier	type		104400	1					
ANR	104498	Identifier	R_ANAL_OP_TYPE_MASK		104400	1					
ANR	104499	CompoundStatement		12:40:363:363	104400	1					
ANR	104500	Label	case R_ANAL_OP_TYPE_JMP :	698:1:18231:18254	104400	0	True				
ANR	104501	Identifier	R_ANAL_OP_TYPE_JMP		104400	0					
ANR	104502	IfStatement	if ( op . jump == UT64_MAX )		104400	1					
ANR	104503	Condition	op . jump == UT64_MAX	699:6:18262:18280	104400	0	True				
ANR	104504	EqualityExpression	op . jump == UT64_MAX		104400	0		==			
ANR	104505	MemberAccess	op . jump		104400	0					
ANR	104506	Identifier	op		104400	0					
ANR	104507	Identifier	jump		104400	1					
ANR	104508	Identifier	UT64_MAX		104400	1					
ANR	104509	CompoundStatement		14:27:418:418	104400	1					
ANR	104510	ExpressionStatement	recurse_addr = op . ptr	700:3:18288:18309	104400	0	True				
ANR	104511	AssignmentExpression	recurse_addr = op . ptr		104400	0		=			
ANR	104512	Identifier	recurse_addr		104400	0					
ANR	104513	MemberAccess	op . ptr		104400	1					
ANR	104514	Identifier	op		104400	0					
ANR	104515	Identifier	ptr		104400	1					
ANR	104516	ElseStatement	else		104400	0					
ANR	104517	CompoundStatement		16:9:455:455	104400	0					
ANR	104518	ExpressionStatement	recurse_addr = op . jump	702:3:18325:18347	104400	0	True				
ANR	104519	AssignmentExpression	recurse_addr = op . jump		104400	0		=			
ANR	104520	Identifier	recurse_addr		104400	0					
ANR	104521	MemberAccess	op . jump		104400	1					
ANR	104522	Identifier	op		104400	0					
ANR	104523	Identifier	jump		104400	1					
ANR	104524	BreakStatement	break ;	704:2:18355:18360	104400	2	True				
ANR	104525	Label	case R_ANAL_OP_TYPE_UCALL :	705:1:18363:18388	104400	3	True				
ANR	104526	Identifier	R_ANAL_OP_TYPE_UCALL		104400	0					
ANR	104527	Label	case R_ANAL_OP_TYPE_RCALL :	706:1:18391:18416	104400	4	True				
ANR	104528	Identifier	R_ANAL_OP_TYPE_RCALL		104400	0					
ANR	104529	Label	case R_ANAL_OP_TYPE_ICALL :	707:1:18419:18444	104400	5	True				
ANR	104530	Identifier	R_ANAL_OP_TYPE_ICALL		104400	0					
ANR	104531	Label	case R_ANAL_OP_TYPE_IRCALL :	708:1:18447:18473	104400	6	True				
ANR	104532	Identifier	R_ANAL_OP_TYPE_IRCALL		104400	0					
ANR	104533	ExpressionStatement	recurse_addr = op . ptr	709:2:18477:18498	104400	7	True				
ANR	104534	AssignmentExpression	recurse_addr = op . ptr		104400	0		=			
ANR	104535	Identifier	recurse_addr		104400	0					
ANR	104536	MemberAccess	op . ptr		104400	1					
ANR	104537	Identifier	op		104400	0					
ANR	104538	Identifier	ptr		104400	1					
ANR	104539	BreakStatement	break ;	710:2:18502:18507	104400	8	True				
ANR	104540	Label	case R_ANAL_OP_TYPE_CCALL :	711:1:18510:18535	104400	9	True				
ANR	104541	Identifier	R_ANAL_OP_TYPE_CCALL		104400	0					
ANR	104542	Label	case R_ANAL_OP_TYPE_CALL :	712:1:18538:18562	104400	10	True				
ANR	104543	Identifier	R_ANAL_OP_TYPE_CALL		104400	0					
ANR	104544	ExpressionStatement	recurse_addr = op . jump	713:2:18566:18588	104400	11	True				
ANR	104545	AssignmentExpression	recurse_addr = op . jump		104400	0		=			
ANR	104546	Identifier	recurse_addr		104400	0					
ANR	104547	MemberAccess	op . jump		104400	1					
ANR	104548	Identifier	op		104400	0					
ANR	104549	Identifier	jump		104400	1					
ANR	104550	BreakStatement	break ;	714:2:18592:18597	104400	12	True				
ANR	104551	IfStatement	if ( recurse_addr == UT64_MAX || recurse_addr == addr )		104400	6					
ANR	104552	Condition	recurse_addr == UT64_MAX || recurse_addr == addr	716:5:18607:18654	104400	0	True				
ANR	104553	OrExpression	recurse_addr == UT64_MAX || recurse_addr == addr		104400	0		||			
ANR	104554	EqualityExpression	recurse_addr == UT64_MAX		104400	0		==			
ANR	104555	Identifier	recurse_addr		104400	0					
ANR	104556	Identifier	UT64_MAX		104400	1					
ANR	104557	EqualityExpression	recurse_addr == addr		104400	1		==			
ANR	104558	Identifier	recurse_addr		104400	0					
ANR	104559	Identifier	addr		104400	1					
ANR	104560	CompoundStatement		31:55:792:792	104400	1					
ANR	104561	ReturnStatement	return false ;	717:2:18661:18673	104400	0	True				
ANR	104562	Identifier	false		104400	0					
ANR	104563	ReturnStatement	"return r_anal_noreturn_at ( anal , recurse_addr ) ;"	719:1:18679:18725	104400	7	True				
ANR	104564	CallExpression	"r_anal_noreturn_at ( anal , recurse_addr )"		104400	0					
ANR	104565	Callee	r_anal_noreturn_at		104400	0					
ANR	104566	Identifier	r_anal_noreturn_at		104400	0					
ANR	104567	ArgumentList	anal		104400	1					
ANR	104568	Argument	anal		104400	0					
ANR	104569	Identifier	anal		104400	0					
ANR	104570	Argument	recurse_addr		104400	1					
ANR	104571	Identifier	recurse_addr		104400	0					
ANR	104572	ReturnType	static bool		104400	1					
ANR	104573	Identifier	noreturn_recurse		104400	2					
ANR	104574	ParameterList	"RAnal * anal , ut64 addr"		104400	3					
ANR	104575	Parameter	RAnal * anal	686:29:17840:17850	104400	0	True				
ANR	104576	ParameterType	RAnal *		104400	0					
ANR	104577	Identifier	anal		104400	1					
ANR	104578	Parameter	ut64 addr	686:42:17853:17861	104400	1	True				
ANR	104579	ParameterType	ut64		104400	0					
ANR	104580	Identifier	addr		104400	1					
ANR	104581	CFGEntryNode	ENTRY		104400		True				
ANR	104582	CFGExitNode	EXIT		104400		True				
ANR	104583	Symbol	R_ANAL_OP_TYPE_MASK		104400						
ANR	104584	Symbol	op		104400						
ANR	104585	Symbol	op . type		104400						
ANR	104586	Symbol	R_ANAL_OP_MASK_VAL		104400						
ANR	104587	Symbol	false		104400						
ANR	104588	Symbol	recurse_addr		104400						
ANR	104589	Symbol	& op		104400						
ANR	104590	Symbol	R_ANAL_OP_MASK_BASIC		104400						
ANR	104591	Symbol	r_anal_noreturn_at		104400						
ANR	104592	Symbol	* anal		104400						
ANR	104593	Symbol	op . ptr		104400						
ANR	104594	Symbol	anal -> iob . read_at		104400						
ANR	104595	Symbol	anal		104400						
ANR	104596	Symbol	op . jump		104400						
ANR	104597	Symbol	anal -> iob		104400						
ANR	104598	Symbol	addr		104400						
ANR	104599	Symbol	UT64_MAX		104400						
ANR	104600	Symbol	anal -> iob . io		104400						
ANR	104601	Symbol	bbuf		104400						
ANR	104602	Symbol	r_anal_op		104400						
ANR	104603	Function	r_anal_noreturn_at	722:0:18730:19243							
ANR	104604	FunctionDef	"r_anal_noreturn_at (RAnal * anal , ut64 addr)"		104603	0					
ANR	104605	CompoundStatement		722:54:18784:19243	104603	0					
ANR	104606	IfStatement	"if ( r_anal_noreturn_at_addr ( anal , addr ) )"		104603	0					
ANR	104607	Condition	"r_anal_noreturn_at_addr ( anal , addr )"	723:5:18791:18826	104603	0	True				
ANR	104608	CallExpression	"r_anal_noreturn_at_addr ( anal , addr )"		104603	0					
ANR	104609	Callee	r_anal_noreturn_at_addr		104603	0					
ANR	104610	Identifier	r_anal_noreturn_at_addr		104603	0					
ANR	104611	ArgumentList	anal		104603	1					
ANR	104612	Argument	anal		104603	0					
ANR	104613	Identifier	anal		104603	0					
ANR	104614	Argument	addr		104603	1					
ANR	104615	Identifier	addr		104603	0					
ANR	104616	CompoundStatement		2:43:44:44	104603	1					
ANR	104617	ReturnStatement	return true ;	724:2:18833:18844	104603	0	True				
ANR	104618	Identifier	true		104603	0					
ANR	104619	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_at ( anal , addr , 0 ) ;"	727:1:18879:18931	104603	1	True				
ANR	104620	IdentifierDecl	"* f = r_anal_get_fcn_at ( anal , addr , 0 )"		104603	0					
ANR	104621	IdentifierDeclType	RAnalFunction *		104603	0					
ANR	104622	Identifier	f		104603	1					
ANR	104623	AssignmentExpression	"* f = r_anal_get_fcn_at ( anal , addr , 0 )"		104603	2		=			
ANR	104624	Identifier	f		104603	0					
ANR	104625	CallExpression	"r_anal_get_fcn_at ( anal , addr , 0 )"		104603	1					
ANR	104626	Callee	r_anal_get_fcn_at		104603	0					
ANR	104627	Identifier	r_anal_get_fcn_at		104603	0					
ANR	104628	ArgumentList	anal		104603	1					
ANR	104629	Argument	anal		104603	0					
ANR	104630	Identifier	anal		104603	0					
ANR	104631	Argument	addr		104603	1					
ANR	104632	Identifier	addr		104603	0					
ANR	104633	Argument	0		104603	2					
ANR	104634	PrimaryExpression	0		104603	0					
ANR	104635	IfStatement	if ( f )		104603	2					
ANR	104636	Condition	f	728:5:18938:18938	104603	0	True				
ANR	104637	Identifier	f		104603	0					
ANR	104638	CompoundStatement		7:8:156:156	104603	1					
ANR	104639	IfStatement	"if ( r_anal_noreturn_at_name ( anal , f -> name ) )"		104603	0					
ANR	104640	Condition	"r_anal_noreturn_at_name ( anal , f -> name )"	729:6:18949:18987	104603	0	True				
ANR	104641	CallExpression	"r_anal_noreturn_at_name ( anal , f -> name )"		104603	0					
ANR	104642	Callee	r_anal_noreturn_at_name		104603	0					
ANR	104643	Identifier	r_anal_noreturn_at_name		104603	0					
ANR	104644	ArgumentList	anal		104603	1					
ANR	104645	Argument	anal		104603	0					
ANR	104646	Identifier	anal		104603	0					
ANR	104647	Argument	f -> name		104603	1					
ANR	104648	PtrMemberAccess	f -> name		104603	0					
ANR	104649	Identifier	f		104603	0					
ANR	104650	Identifier	name		104603	1					
ANR	104651	CompoundStatement		8:47:205:205	104603	1					
ANR	104652	ReturnStatement	return true ;	730:3:18995:19006	104603	0	True				
ANR	104653	Identifier	true		104603	0					
ANR	104654	IdentifierDeclStatement	"RFlagItem * fi = anal -> flag_get ( anal -> flb . f , addr ) ;"	733:1:19016:19066	104603	3	True				
ANR	104655	IdentifierDecl	"* fi = anal -> flag_get ( anal -> flb . f , addr )"		104603	0					
ANR	104656	IdentifierDeclType	RFlagItem *		104603	0					
ANR	104657	Identifier	fi		104603	1					
ANR	104658	AssignmentExpression	"* fi = anal -> flag_get ( anal -> flb . f , addr )"		104603	2		=			
ANR	104659	Identifier	fi		104603	0					
ANR	104660	CallExpression	"anal -> flag_get ( anal -> flb . f , addr )"		104603	1					
ANR	104661	Callee	anal -> flag_get		104603	0					
ANR	104662	PtrMemberAccess	anal -> flag_get		104603	0					
ANR	104663	Identifier	anal		104603	0					
ANR	104664	Identifier	flag_get		104603	1					
ANR	104665	ArgumentList	anal -> flb . f		104603	1					
ANR	104666	Argument	anal -> flb . f		104603	0					
ANR	104667	MemberAccess	anal -> flb . f		104603	0					
ANR	104668	PtrMemberAccess	anal -> flb		104603	0					
ANR	104669	Identifier	anal		104603	0					
ANR	104670	Identifier	flb		104603	1					
ANR	104671	Identifier	f		104603	1					
ANR	104672	Argument	addr		104603	1					
ANR	104673	Identifier	addr		104603	0					
ANR	104674	IfStatement	if ( fi )		104603	4					
ANR	104675	Condition	fi	734:5:19073:19074	104603	0	True				
ANR	104676	Identifier	fi		104603	0					
ANR	104677	CompoundStatement		13:9:292:292	104603	1					
ANR	104678	IfStatement	"if ( r_anal_noreturn_at_name ( anal , fi -> name ) )"		104603	0					
ANR	104679	Condition	"r_anal_noreturn_at_name ( anal , fi -> name )"	735:6:19085:19124	104603	0	True				
ANR	104680	CallExpression	"r_anal_noreturn_at_name ( anal , fi -> name )"		104603	0					
ANR	104681	Callee	r_anal_noreturn_at_name		104603	0					
ANR	104682	Identifier	r_anal_noreturn_at_name		104603	0					
ANR	104683	ArgumentList	anal		104603	1					
ANR	104684	Argument	anal		104603	0					
ANR	104685	Identifier	anal		104603	0					
ANR	104686	Argument	fi -> name		104603	1					
ANR	104687	PtrMemberAccess	fi -> name		104603	0					
ANR	104688	Identifier	fi		104603	0					
ANR	104689	Identifier	name		104603	1					
ANR	104690	CompoundStatement		14:48:342:342	104603	1					
ANR	104691	ReturnStatement	return true ;	736:3:19132:19143	104603	0	True				
ANR	104692	Identifier	true		104603	0					
ANR	104693	IfStatement	if ( anal -> recursive_noreturn )		104603	5					
ANR	104694	Condition	anal -> recursive_noreturn	739:5:19157:19180	104603	0	True				
ANR	104695	PtrMemberAccess	anal -> recursive_noreturn		104603	0					
ANR	104696	Identifier	anal		104603	0					
ANR	104697	Identifier	recursive_noreturn		104603	1					
ANR	104698	CompoundStatement		18:31:398:398	104603	1					
ANR	104699	ReturnStatement	"return noreturn_recurse ( anal , addr ) ;"	740:2:19187:19223	104603	0	True				
ANR	104700	CallExpression	"noreturn_recurse ( anal , addr )"		104603	0					
ANR	104701	Callee	noreturn_recurse		104603	0					
ANR	104702	Identifier	noreturn_recurse		104603	0					
ANR	104703	ArgumentList	anal		104603	1					
ANR	104704	Argument	anal		104603	0					
ANR	104705	Identifier	anal		104603	0					
ANR	104706	Argument	addr		104603	1					
ANR	104707	Identifier	addr		104603	0					
ANR	104708	ReturnStatement	return false ;	742:1:19229:19241	104603	6	True				
ANR	104709	Identifier	false		104603	0					
ANR	104710	ReturnType	R_API bool		104603	1					
ANR	104711	Identifier	r_anal_noreturn_at		104603	2					
ANR	104712	ParameterList	"RAnal * anal , ut64 addr"		104603	3					
ANR	104713	Parameter	RAnal * anal	722:30:18760:18770	104603	0	True				
ANR	104714	ParameterType	RAnal *		104603	0					
ANR	104715	Identifier	anal		104603	1					
ANR	104716	Parameter	ut64 addr	722:43:18773:18781	104603	1	True				
ANR	104717	ParameterType	ut64		104603	0					
ANR	104718	Identifier	addr		104603	1					
ANR	104719	CFGEntryNode	ENTRY		104603		True				
ANR	104720	CFGExitNode	EXIT		104603		True				
ANR	104721	Symbol	r_anal_get_fcn_at		104603						
ANR	104722	Symbol	fi		104603						
ANR	104723	Symbol	f -> name		104603						
ANR	104724	Symbol	f		104603						
ANR	104725	Symbol	fi -> name		104603						
ANR	104726	Symbol	false		104603						
ANR	104727	Symbol	* fi		104603						
ANR	104728	Symbol	noreturn_recurse		104603						
ANR	104729	Symbol	r_anal_noreturn_at_addr		104603						
ANR	104730	Symbol	r_anal_noreturn_at_name		104603						
ANR	104731	Symbol	anal -> recursive_noreturn		104603						
ANR	104732	Symbol	* f		104603						
ANR	104733	Symbol	* anal		104603						
ANR	104734	Symbol	anal -> flb . f		104603						
ANR	104735	Symbol	anal		104603						
ANR	104736	Symbol	true		104603						
ANR	104737	Symbol	anal -> flag_get		104603						
ANR	104738	Symbol	anal -> flb		104603						
ANR	104739	Symbol	addr		104603						
ANR	104740	Function	r_anal_range_tree_find_bits_at	745:0:19246:20114							
ANR	104741	FunctionDef	"r_anal_range_tree_find_bits_at (RBNode * root , ut64 addr)"		104740	0					
ANR	104742	CompoundStatement		745:66:19312:20114	104740	0					
ANR	104743	IdentifierDeclStatement	RAnalRange * tmp = NULL ;	746:1:19315:19337	104740	0	True				
ANR	104744	IdentifierDecl	* tmp = NULL		104740	0					
ANR	104745	IdentifierDeclType	RAnalRange *		104740	0					
ANR	104746	Identifier	tmp		104740	1					
ANR	104747	AssignmentExpression	* tmp = NULL		104740	2		=			
ANR	104748	Identifier	NULL		104740	0					
ANR	104749	Identifier	NULL		104740	1					
ANR	104750	IdentifierDeclStatement	RBNode * ny ;	747:1:19340:19350	104740	1	True				
ANR	104751	IdentifierDecl	* ny		104740	0					
ANR	104752	IdentifierDeclType	RBNode *		104740	0					
ANR	104753	Identifier	ny		104740	1					
ANR	104754	IdentifierDeclStatement	RAnalRange * path [ R_RBTREE_MAX_HEIGHT + 1 ] ;	748:1:19353:19394	104740	2	True				
ANR	104755	IdentifierDecl	* path [ R_RBTREE_MAX_HEIGHT + 1 ]		104740	0					
ANR	104756	IdentifierDeclType	RAnalRange * [ R_RBTREE_MAX_HEIGHT + 1 ]		104740	0					
ANR	104757	Identifier	path		104740	1					
ANR	104758	AdditiveExpression	R_RBTREE_MAX_HEIGHT + 1		104740	2		+			
ANR	104759	Identifier	R_RBTREE_MAX_HEIGHT		104740	0					
ANR	104760	PrimaryExpression	1		104740	1					
ANR	104761	IdentifierDeclStatement	"int i , bits = 0 , len = 0 ;"	749:1:19397:19421	104740	3	True				
ANR	104762	IdentifierDecl	i		104740	0					
ANR	104763	IdentifierDeclType	int		104740	0					
ANR	104764	Identifier	i		104740	1					
ANR	104765	IdentifierDecl	bits = 0		104740	1					
ANR	104766	IdentifierDeclType	int		104740	0					
ANR	104767	Identifier	bits		104740	1					
ANR	104768	AssignmentExpression	bits = 0		104740	2		=			
ANR	104769	Identifier	bits		104740	0					
ANR	104770	PrimaryExpression	0		104740	1					
ANR	104771	IdentifierDecl	len = 0		104740	2					
ANR	104772	IdentifierDeclType	int		104740	0					
ANR	104773	Identifier	len		104740	1					
ANR	104774	AssignmentExpression	len = 0		104740	2		=			
ANR	104775	Identifier	len		104740	0					
ANR	104776	PrimaryExpression	0		104740	1					
ANR	104777	IdentifierDeclStatement	ut64 min_diff = UT64_MAX ;	750:1:19424:19448	104740	4	True				
ANR	104778	IdentifierDecl	min_diff = UT64_MAX		104740	0					
ANR	104779	IdentifierDeclType	ut64		104740	0					
ANR	104780	Identifier	min_diff		104740	1					
ANR	104781	AssignmentExpression	min_diff = UT64_MAX		104740	2		=			
ANR	104782	Identifier	UT64_MAX		104740	0					
ANR	104783	Identifier	UT64_MAX		104740	1					
ANR	104784	IfStatement	if ( ! root )		104740	5					
ANR	104785	Condition	! root	751:5:19455:19459	104740	0	True				
ANR	104786	UnaryOperationExpression	! root		104740	0					
ANR	104787	UnaryOperator	!		104740	0					
ANR	104788	Identifier	root		104740	1					
ANR	104789	CompoundStatement		7:12:149:149	104740	1					
ANR	104790	ReturnStatement	return 0 ;	752:2:19466:19474	104740	0	True				
ANR	104791	PrimaryExpression	0		104740	0					
ANR	104792	ExpressionStatement	"path [ len ++ ] = container_of ( root , RAnalRange , rb )"	754:1:19480:19529	104740	6	True				
ANR	104793	AssignmentExpression	"path [ len ++ ] = container_of ( root , RAnalRange , rb )"		104740	0		=			
ANR	104794	ArrayIndexing	path [ len ++ ]		104740	0					
ANR	104795	Identifier	path		104740	0					
ANR	104796	PostIncDecOperationExpression	len ++		104740	1					
ANR	104797	Identifier	len		104740	0					
ANR	104798	IncDec	++		104740	1					
ANR	104799	CallExpression	"container_of ( root , RAnalRange , rb )"		104740	1					
ANR	104800	Callee	container_of		104740	0					
ANR	104801	Identifier	container_of		104740	0					
ANR	104802	ArgumentList	root		104740	1					
ANR	104803	Argument	root		104740	0					
ANR	104804	Identifier	root		104740	0					
ANR	104805	Argument	RAnalRange		104740	1					
ANR	104806	Identifier	RAnalRange		104740	0					
ANR	104807	Argument	rb		104740	2					
ANR	104808	Identifier	rb		104740	0					
ANR	104809	ExpressionStatement	ny = root -> child [ path [ 0 ] -> from < addr ]	755:1:19532:19570	104740	7	True				
ANR	104810	AssignmentExpression	ny = root -> child [ path [ 0 ] -> from < addr ]		104740	0		=			
ANR	104811	Identifier	ny		104740	0					
ANR	104812	ArrayIndexing	root -> child [ path [ 0 ] -> from < addr ]		104740	1					
ANR	104813	PtrMemberAccess	root -> child		104740	0					
ANR	104814	Identifier	root		104740	0					
ANR	104815	Identifier	child		104740	1					
ANR	104816	RelationalExpression	path [ 0 ] -> from < addr		104740	1		<			
ANR	104817	PtrMemberAccess	path [ 0 ] -> from		104740	0					
ANR	104818	ArrayIndexing	path [ 0 ]		104740	0					
ANR	104819	Identifier	path		104740	0					
ANR	104820	PrimaryExpression	0		104740	1					
ANR	104821	Identifier	from		104740	1					
ANR	104822	Identifier	addr		104740	1					
ANR	104823	IfStatement	if ( ! ny )		104740	8					
ANR	104824	Condition	! ny	756:5:19577:19579	104740	0	True				
ANR	104825	UnaryOperationExpression	! ny		104740	0					
ANR	104826	UnaryOperator	!		104740	0					
ANR	104827	Identifier	ny		104740	1					
ANR	104828	CompoundStatement		12:10:269:269	104740	1					
ANR	104829	ReturnStatement	return path [ 0 ] -> bits ;	757:2:19586:19606	104740	0	True				
ANR	104830	PtrMemberAccess	path [ 0 ] -> bits		104740	0					
ANR	104831	ArrayIndexing	path [ 0 ]		104740	0					
ANR	104832	Identifier	path		104740	0					
ANR	104833	PrimaryExpression	0		104740	1					
ANR	104834	Identifier	bits		104740	1					
ANR	104835	ExpressionStatement	"tmp = container_of ( ny , RAnalRange , rb )"	759:1:19612:19651	104740	9	True				
ANR	104836	AssignmentExpression	"tmp = container_of ( ny , RAnalRange , rb )"		104740	0		=			
ANR	104837	Identifier	tmp		104740	0					
ANR	104838	CallExpression	"container_of ( ny , RAnalRange , rb )"		104740	1					
ANR	104839	Callee	container_of		104740	0					
ANR	104840	Identifier	container_of		104740	0					
ANR	104841	ArgumentList	ny		104740	1					
ANR	104842	Argument	ny		104740	0					
ANR	104843	Identifier	ny		104740	0					
ANR	104844	Argument	RAnalRange		104740	1					
ANR	104845	Identifier	RAnalRange		104740	0					
ANR	104846	Argument	rb		104740	2					
ANR	104847	Identifier	rb		104740	0					
ANR	104848	ExpressionStatement	path [ len ++ ] = tmp	760:1:19654:19671	104740	10	True				
ANR	104849	AssignmentExpression	path [ len ++ ] = tmp		104740	0		=			
ANR	104850	ArrayIndexing	path [ len ++ ]		104740	0					
ANR	104851	Identifier	path		104740	0					
ANR	104852	PostIncDecOperationExpression	len ++		104740	1					
ANR	104853	Identifier	len		104740	0					
ANR	104854	IncDec	++		104740	1					
ANR	104855	Identifier	tmp		104740	1					
ANR	104856	WhileStatement	while ( len < R_RBTREE_MAX_HEIGHT )		104740	11					
ANR	104857	Condition	len < R_RBTREE_MAX_HEIGHT	762:8:19709:19733	104740	0	True				
ANR	104858	RelationalExpression	len < R_RBTREE_MAX_HEIGHT		104740	0		<			
ANR	104859	Identifier	len		104740	0					
ANR	104860	Identifier	R_RBTREE_MAX_HEIGHT		104740	1					
ANR	104861	CompoundStatement		18:35:423:423	104740	1					
ANR	104862	ExpressionStatement	ny = ny -> child [ tmp -> from < addr ]	763:2:19740:19772	104740	0	True				
ANR	104863	AssignmentExpression	ny = ny -> child [ tmp -> from < addr ]		104740	0		=			
ANR	104864	Identifier	ny		104740	0					
ANR	104865	ArrayIndexing	ny -> child [ tmp -> from < addr ]		104740	1					
ANR	104866	PtrMemberAccess	ny -> child		104740	0					
ANR	104867	Identifier	ny		104740	0					
ANR	104868	Identifier	child		104740	1					
ANR	104869	RelationalExpression	tmp -> from < addr		104740	1		<			
ANR	104870	PtrMemberAccess	tmp -> from		104740	0					
ANR	104871	Identifier	tmp		104740	0					
ANR	104872	Identifier	from		104740	1					
ANR	104873	Identifier	addr		104740	1					
ANR	104874	IfStatement	if ( ! ny )		104740	1					
ANR	104875	Condition	! ny	764:6:19780:19782	104740	0	True				
ANR	104876	UnaryOperationExpression	! ny		104740	0					
ANR	104877	UnaryOperator	!		104740	0					
ANR	104878	Identifier	ny		104740	1					
ANR	104879	CompoundStatement		20:11:472:472	104740	1					
ANR	104880	BreakStatement	break ;	765:3:19790:19795	104740	0	True				
ANR	104881	ExpressionStatement	"tmp = container_of ( ny , RAnalRange , rb )"	767:2:19803:19842	104740	2	True				
ANR	104882	AssignmentExpression	"tmp = container_of ( ny , RAnalRange , rb )"		104740	0		=			
ANR	104883	Identifier	tmp		104740	0					
ANR	104884	CallExpression	"container_of ( ny , RAnalRange , rb )"		104740	1					
ANR	104885	Callee	container_of		104740	0					
ANR	104886	Identifier	container_of		104740	0					
ANR	104887	ArgumentList	ny		104740	1					
ANR	104888	Argument	ny		104740	0					
ANR	104889	Identifier	ny		104740	0					
ANR	104890	Argument	RAnalRange		104740	1					
ANR	104891	Identifier	RAnalRange		104740	0					
ANR	104892	Argument	rb		104740	2					
ANR	104893	Identifier	rb		104740	0					
ANR	104894	ExpressionStatement	path [ len ++ ] = tmp	768:2:19846:19863	104740	3	True				
ANR	104895	AssignmentExpression	path [ len ++ ] = tmp		104740	0		=			
ANR	104896	ArrayIndexing	path [ len ++ ]		104740	0					
ANR	104897	Identifier	path		104740	0					
ANR	104898	PostIncDecOperationExpression	len ++		104740	1					
ANR	104899	Identifier	len		104740	0					
ANR	104900	IncDec	++		104740	1					
ANR	104901	Identifier	tmp		104740	1					
ANR	104902	ExpressionStatement	i = len - 1	770:1:19869:19880	104740	12	True				
ANR	104903	AssignmentExpression	i = len - 1		104740	0		=			
ANR	104904	Identifier	i		104740	0					
ANR	104905	AdditiveExpression	len - 1		104740	1		-			
ANR	104906	Identifier	len		104740	0					
ANR	104907	PrimaryExpression	1		104740	1					
ANR	104908	WhileStatement	while ( i >= 0 )		104740	13					
ANR	104909	Condition	i >= 0	772:8:19921:19926	104740	0	True				
ANR	104910	RelationalExpression	i >= 0		104740	0		>=			
ANR	104911	Identifier	i		104740	0					
ANR	104912	PrimaryExpression	0		104740	1					
ANR	104913	CompoundStatement		29:2:620:652	104740	1					
ANR	104914	IdentifierDeclStatement	ut64 diff = addr - path [ i ] -> from ;	773:2:19933:19965	104740	0	True				
ANR	104915	IdentifierDecl	diff = addr - path [ i ] -> from		104740	0					
ANR	104916	IdentifierDeclType	ut64		104740	0					
ANR	104917	Identifier	diff		104740	1					
ANR	104918	AssignmentExpression	diff = addr - path [ i ] -> from		104740	2		=			
ANR	104919	Identifier	diff		104740	0					
ANR	104920	AdditiveExpression	addr - path [ i ] -> from		104740	1		-			
ANR	104921	Identifier	addr		104740	0					
ANR	104922	PtrMemberAccess	path [ i ] -> from		104740	1					
ANR	104923	ArrayIndexing	path [ i ]		104740	0					
ANR	104924	Identifier	path		104740	0					
ANR	104925	Identifier	i		104740	1					
ANR	104926	Identifier	from		104740	1					
ANR	104927	IfStatement	if ( ( st64 ) diff < 0 )		104740	1					
ANR	104928	Condition	( st64 ) diff < 0	774:6:19973:19986	104740	0	True				
ANR	104929	RelationalExpression	( st64 ) diff < 0		104740	0		<			
ANR	104930	CastExpression	( st64 ) diff		104740	0					
ANR	104931	CastTarget	st64		104740	0					
ANR	104932	Identifier	diff		104740	1					
ANR	104933	PrimaryExpression	0		104740	1					
ANR	104934	CompoundStatement		30:22:676:676	104740	1					
ANR	104935	ExpressionStatement	i --	775:3:19994:19997	104740	0	True				
ANR	104936	PostIncDecOperationExpression	i --		104740	0					
ANR	104937	Identifier	i		104740	0					
ANR	104938	IncDec	--		104740	1					
ANR	104939	ContinueStatement	continue ;	776:3:20002:20010	104740	1	True				
ANR	104940	IfStatement	if ( diff < min_diff )		104740	2					
ANR	104941	Condition	diff < min_diff	778:6:20022:20036	104740	0	True				
ANR	104942	RelationalExpression	diff < min_diff		104740	0		<			
ANR	104943	Identifier	diff		104740	0					
ANR	104944	Identifier	min_diff		104740	1					
ANR	104945	CompoundStatement		34:23:726:726	104740	1					
ANR	104946	ExpressionStatement	bits = path [ i ] -> bits	779:3:20044:20064	104740	0	True				
ANR	104947	AssignmentExpression	bits = path [ i ] -> bits		104740	0		=			
ANR	104948	Identifier	bits		104740	0					
ANR	104949	PtrMemberAccess	path [ i ] -> bits		104740	1					
ANR	104950	ArrayIndexing	path [ i ]		104740	0					
ANR	104951	Identifier	path		104740	0					
ANR	104952	Identifier	i		104740	1					
ANR	104953	Identifier	bits		104740	1					
ANR	104954	ExpressionStatement	min_diff = diff	780:3:20069:20084	104740	1	True				
ANR	104955	AssignmentExpression	min_diff = diff		104740	0		=			
ANR	104956	Identifier	min_diff		104740	0					
ANR	104957	Identifier	diff		104740	1					
ANR	104958	ExpressionStatement	i --	782:2:20092:20095	104740	3	True				
ANR	104959	PostIncDecOperationExpression	i --		104740	0					
ANR	104960	Identifier	i		104740	0					
ANR	104961	IncDec	--		104740	1					
ANR	104962	ReturnStatement	return bits ;	784:1:20101:20112	104740	14	True				
ANR	104963	Identifier	bits		104740	0					
ANR	104964	ReturnType	R_API int		104740	1					
ANR	104965	Identifier	r_anal_range_tree_find_bits_at		104740	2					
ANR	104966	ParameterList	"RBNode * root , ut64 addr"		104740	3					
ANR	104967	Parameter	RBNode * root	745:41:19287:19298	104740	0	True				
ANR	104968	ParameterType	RBNode *		104740	0					
ANR	104969	Identifier	root		104740	1					
ANR	104970	Parameter	ut64 addr	745:55:19301:19309	104740	1	True				
ANR	104971	ParameterType	ut64		104740	0					
ANR	104972	Identifier	addr		104740	1					
ANR	104973	CFGEntryNode	ENTRY		104740		True				
ANR	104974	CFGExitNode	EXIT		104740		True				
ANR	104975	Symbol	* tmp		104740						
ANR	104976	Symbol	tmp -> from		104740						
ANR	104977	Symbol	R_RBTREE_MAX_HEIGHT		104740						
ANR	104978	Symbol	* * path		104740						
ANR	104979	Symbol	ny		104740						
ANR	104980	Symbol	path		104740						
ANR	104981	Symbol	* * root		104740						
ANR	104982	Symbol	* ny		104740						
ANR	104983	Symbol	len		104740						
ANR	104984	Symbol	tmp		104740						
ANR	104985	Symbol	path [ 0 ] -> bits		104740						
ANR	104986	Symbol	root		104740						
ANR	104987	Symbol	* root -> child		104740						
ANR	104988	Symbol	addr		104740						
ANR	104989	Symbol	UT64_MAX		104740						
ANR	104990	Symbol	* tmp -> from		104740						
ANR	104991	Symbol	path [ i ] -> from		104740						
ANR	104992	Symbol	root -> child		104740						
ANR	104993	Symbol	* * i		104740						
ANR	104994	Symbol	NULL		104740						
ANR	104995	Symbol	bits		104740						
ANR	104996	Symbol	i		104740						
ANR	104997	Symbol	diff		104740						
ANR	104998	Symbol	* * tmp		104740						
ANR	104999	Symbol	rb		104740						
ANR	105000	Symbol	path [ 0 ] -> from		104740						
ANR	105001	Symbol	* * * path		104740						
ANR	105002	Symbol	container_of		104740						
ANR	105003	Symbol	RAnalRange		104740						
ANR	105004	Symbol	* path [ 0 ] -> from		104740						
ANR	105005	Symbol	* i		104740						
ANR	105006	Symbol	* * ny		104740						
ANR	105007	Symbol	* path		104740						
ANR	105008	Symbol	* root		104740						
ANR	105009	Symbol	* addr		104740						
ANR	105010	Symbol	path [ i ] -> bits		104740						
ANR	105011	Symbol	ny -> child		104740						
ANR	105012	Symbol	min_diff		104740						
ANR	105013	Symbol	* ny -> child		104740						
ANR	105014	Function	r_anal_merge_hint_ranges	787:0:20117:20880							
ANR	105015	FunctionDef	r_anal_merge_hint_ranges (RAnal * a)		105014	0					
ANR	105016	CompoundStatement		787:46:20163:20880	105014	0					
ANR	105017	IfStatement	if ( a -> merge_hints )		105014	0					
ANR	105018	Condition	a -> merge_hints	788:5:20170:20183	105014	0	True				
ANR	105019	PtrMemberAccess	a -> merge_hints		105014	0					
ANR	105020	Identifier	a		105014	0					
ANR	105021	Identifier	merge_hints		105014	1					
ANR	105022	CompoundStatement		6:2:122:140	105014	1					
ANR	105023	IdentifierDeclStatement	SdbListIter * iter ;	789:2:20190:20207	105014	0	True				
ANR	105024	IdentifierDecl	* iter		105014	0					
ANR	105025	IdentifierDeclType	SdbListIter *		105014	0					
ANR	105026	Identifier	iter		105014	1					
ANR	105027	IdentifierDeclStatement	SdbKv * kv ;	790:2:20211:20220	105014	1	True				
ANR	105028	IdentifierDecl	* kv		105014	0					
ANR	105029	IdentifierDeclType	SdbKv *		105014	0					
ANR	105030	Identifier	kv		105014	1					
ANR	105031	IdentifierDeclStatement	"SdbList * sdb_range = sdb_foreach_list ( a -> sdb_hints , true ) ;"	791:2:20224:20282	105014	2	True				
ANR	105032	IdentifierDecl	"* sdb_range = sdb_foreach_list ( a -> sdb_hints , true )"		105014	0					
ANR	105033	IdentifierDeclType	SdbList *		105014	0					
ANR	105034	Identifier	sdb_range		105014	1					
ANR	105035	AssignmentExpression	"* sdb_range = sdb_foreach_list ( a -> sdb_hints , true )"		105014	2		=			
ANR	105036	Identifier	sdb_range		105014	0					
ANR	105037	CallExpression	"sdb_foreach_list ( a -> sdb_hints , true )"		105014	1					
ANR	105038	Callee	sdb_foreach_list		105014	0					
ANR	105039	Identifier	sdb_foreach_list		105014	0					
ANR	105040	ArgumentList	a -> sdb_hints		105014	1					
ANR	105041	Argument	a -> sdb_hints		105014	0					
ANR	105042	PtrMemberAccess	a -> sdb_hints		105014	0					
ANR	105043	Identifier	a		105014	0					
ANR	105044	Identifier	sdb_hints		105014	1					
ANR	105045	Argument	true		105014	1					
ANR	105046	Identifier	true		105014	0					
ANR	105047	IdentifierDeclStatement	int range_bits = 0 ;	792:2:20286:20304	105014	3	True				
ANR	105048	IdentifierDecl	range_bits = 0		105014	0					
ANR	105049	IdentifierDeclType	int		105014	0					
ANR	105050	Identifier	range_bits		105014	1					
ANR	105051	AssignmentExpression	range_bits = 0		105014	2		=			
ANR	105052	Identifier	range_bits		105014	0					
ANR	105053	PrimaryExpression	0		105014	1					
ANR	105054	ExpressionStatement	"r_rbtree_free ( a -> rb_hints_ranges , __anal_hint_range_tree_free )"	793:2:20308:20371	105014	4	True				
ANR	105055	CallExpression	"r_rbtree_free ( a -> rb_hints_ranges , __anal_hint_range_tree_free )"		105014	0					
ANR	105056	Callee	r_rbtree_free		105014	0					
ANR	105057	Identifier	r_rbtree_free		105014	0					
ANR	105058	ArgumentList	a -> rb_hints_ranges		105014	1					
ANR	105059	Argument	a -> rb_hints_ranges		105014	0					
ANR	105060	PtrMemberAccess	a -> rb_hints_ranges		105014	0					
ANR	105061	Identifier	a		105014	0					
ANR	105062	Identifier	rb_hints_ranges		105014	1					
ANR	105063	Argument	__anal_hint_range_tree_free		105014	1					
ANR	105064	Identifier	__anal_hint_range_tree_free		105014	0					
ANR	105065	ExpressionStatement	a -> rb_hints_ranges = NULL	794:2:20375:20400	105014	5	True				
ANR	105066	AssignmentExpression	a -> rb_hints_ranges = NULL		105014	0		=			
ANR	105067	PtrMemberAccess	a -> rb_hints_ranges		105014	0					
ANR	105068	Identifier	a		105014	0					
ANR	105069	Identifier	rb_hints_ranges		105014	1					
ANR	105070	Identifier	NULL		105014	1					
ANR	105071	Statement	ls_foreach	795:2:20404:20413	105014	6	True				
ANR	105072	Statement	(	795:13:20415:20415	105014	7	True				
ANR	105073	Statement	sdb_range	795:14:20416:20424	105014	8	True				
ANR	105074	Statement	","	795:23:20425:20425	105014	9	True				
ANR	105075	Statement	iter	795:25:20427:20430	105014	10	True				
ANR	105076	Statement	","	795:29:20431:20431	105014	11	True				
ANR	105077	Statement	kv	795:31:20433:20434	105014	12	True				
ANR	105078	Statement	)	795:33:20435:20435	105014	13	True				
ANR	105079	CompoundStatement		11:3:324:387	105014	14					
ANR	105080	IdentifierDeclStatement	ut64 addr = sdb_atoi ( sdbkv_key ( kv ) + 5 ) ;	796:3:20442:20483	105014	0	True				
ANR	105081	IdentifierDecl	addr = sdb_atoi ( sdbkv_key ( kv ) + 5 )		105014	0					
ANR	105082	IdentifierDeclType	ut64		105014	0					
ANR	105083	Identifier	addr		105014	1					
ANR	105084	AssignmentExpression	addr = sdb_atoi ( sdbkv_key ( kv ) + 5 )		105014	2		=			
ANR	105085	Identifier	addr		105014	0					
ANR	105086	CallExpression	sdb_atoi ( sdbkv_key ( kv ) + 5 )		105014	1					
ANR	105087	Callee	sdb_atoi		105014	0					
ANR	105088	Identifier	sdb_atoi		105014	0					
ANR	105089	ArgumentList	sdbkv_key ( kv ) + 5		105014	1					
ANR	105090	Argument	sdbkv_key ( kv ) + 5		105014	0					
ANR	105091	AdditiveExpression	sdbkv_key ( kv ) + 5		105014	0		+			
ANR	105092	CallExpression	sdbkv_key ( kv )		105014	0					
ANR	105093	Callee	sdbkv_key		105014	0					
ANR	105094	Identifier	sdbkv_key		105014	0					
ANR	105095	ArgumentList	kv		105014	1					
ANR	105096	Argument	kv		105014	0					
ANR	105097	Identifier	kv		105014	0					
ANR	105098	PrimaryExpression	5		105014	1					
ANR	105099	IdentifierDeclStatement	"int bits = r_anal_hint_get_bits_at ( a , addr , sdbkv_value ( kv ) ) ;"	797:3:20488:20551	105014	1	True				
ANR	105100	IdentifierDecl	"bits = r_anal_hint_get_bits_at ( a , addr , sdbkv_value ( kv ) )"		105014	0					
ANR	105101	IdentifierDeclType	int		105014	0					
ANR	105102	Identifier	bits		105014	1					
ANR	105103	AssignmentExpression	"bits = r_anal_hint_get_bits_at ( a , addr , sdbkv_value ( kv ) )"		105014	2		=			
ANR	105104	Identifier	bits		105014	0					
ANR	105105	CallExpression	"r_anal_hint_get_bits_at ( a , addr , sdbkv_value ( kv ) )"		105014	1					
ANR	105106	Callee	r_anal_hint_get_bits_at		105014	0					
ANR	105107	Identifier	r_anal_hint_get_bits_at		105014	0					
ANR	105108	ArgumentList	a		105014	1					
ANR	105109	Argument	a		105014	0					
ANR	105110	Identifier	a		105014	0					
ANR	105111	Argument	addr		105014	1					
ANR	105112	Identifier	addr		105014	0					
ANR	105113	Argument	sdbkv_value ( kv )		105014	2					
ANR	105114	CallExpression	sdbkv_value ( kv )		105014	0					
ANR	105115	Callee	sdbkv_value		105014	0					
ANR	105116	Identifier	sdbkv_value		105014	0					
ANR	105117	ArgumentList	kv		105014	1					
ANR	105118	Argument	kv		105014	0					
ANR	105119	Identifier	kv		105014	0					
ANR	105120	IfStatement	if ( bits && range_bits == bits )		105014	2					
ANR	105121	Condition	bits && range_bits == bits	798:7:20560:20585	105014	0	True				
ANR	105122	AndExpression	bits && range_bits == bits		105014	0		&&			
ANR	105123	Identifier	bits		105014	0					
ANR	105124	EqualityExpression	range_bits == bits		105014	1		==			
ANR	105125	Identifier	range_bits		105014	0					
ANR	105126	Identifier	bits		105014	1					
ANR	105127	CompoundStatement		12:35:424:424	105014	1					
ANR	105128	ExpressionStatement	"r_anal_hint_unset_bits ( a , addr )"	799:4:20594:20626	105014	0	True				
ANR	105129	CallExpression	"r_anal_hint_unset_bits ( a , addr )"		105014	0					
ANR	105130	Callee	r_anal_hint_unset_bits		105014	0					
ANR	105131	Identifier	r_anal_hint_unset_bits		105014	0					
ANR	105132	ArgumentList	a		105014	1					
ANR	105133	Argument	a		105014	0					
ANR	105134	Identifier	a		105014	0					
ANR	105135	Argument	addr		105014	1					
ANR	105136	Identifier	addr		105014	0					
ANR	105137	ElseStatement	else		105014	0					
ANR	105138	CompoundStatement		15:4:480:519	105014	0					
ANR	105139	IdentifierDeclStatement	RAnalRange * range = R_NEW0 ( RAnalRange ) ;	801:4:20644:20683	105014	0	True				
ANR	105140	IdentifierDecl	* range = R_NEW0 ( RAnalRange )		105014	0					
ANR	105141	IdentifierDeclType	RAnalRange *		105014	0					
ANR	105142	Identifier	range		105014	1					
ANR	105143	AssignmentExpression	* range = R_NEW0 ( RAnalRange )		105014	2		=			
ANR	105144	Identifier	range		105014	0					
ANR	105145	CallExpression	R_NEW0 ( RAnalRange )		105014	1					
ANR	105146	Callee	R_NEW0		105014	0					
ANR	105147	Identifier	R_NEW0		105014	0					
ANR	105148	ArgumentList	RAnalRange		105014	1					
ANR	105149	Argument	RAnalRange		105014	0					
ANR	105150	Identifier	RAnalRange		105014	0					
ANR	105151	ExpressionStatement	range -> bits = bits	802:4:20689:20707	105014	1	True				
ANR	105152	AssignmentExpression	range -> bits = bits		105014	0		=			
ANR	105153	PtrMemberAccess	range -> bits		105014	0					
ANR	105154	Identifier	range		105014	0					
ANR	105155	Identifier	bits		105014	1					
ANR	105156	Identifier	bits		105014	1					
ANR	105157	ExpressionStatement	range -> from = addr	803:4:20713:20731	105014	2	True				
ANR	105158	AssignmentExpression	range -> from = addr		105014	0		=			
ANR	105159	PtrMemberAccess	range -> from		105014	0					
ANR	105160	Identifier	range		105014	0					
ANR	105161	Identifier	from		105014	1					
ANR	105162	Identifier	addr		105014	1					
ANR	105163	ExpressionStatement	"__anal_range_hint_tree_insert ( & a -> rb_hints_ranges , range )"	804:4:20737:20795	105014	3	True				
ANR	105164	CallExpression	"__anal_range_hint_tree_insert ( & a -> rb_hints_ranges , range )"		105014	0					
ANR	105165	Callee	__anal_range_hint_tree_insert		105014	0					
ANR	105166	Identifier	__anal_range_hint_tree_insert		105014	0					
ANR	105167	ArgumentList	& a -> rb_hints_ranges		105014	1					
ANR	105168	Argument	& a -> rb_hints_ranges		105014	0					
ANR	105169	UnaryOperationExpression	& a -> rb_hints_ranges		105014	0					
ANR	105170	UnaryOperator	&		105014	0					
ANR	105171	PtrMemberAccess	a -> rb_hints_ranges		105014	1					
ANR	105172	Identifier	a		105014	0					
ANR	105173	Identifier	rb_hints_ranges		105014	1					
ANR	105174	Argument	range		105014	1					
ANR	105175	Identifier	range		105014	0					
ANR	105176	ExpressionStatement	range_bits = bits	806:3:20805:20822	105014	3	True				
ANR	105177	AssignmentExpression	range_bits = bits		105014	0		=			
ANR	105178	Identifier	range_bits		105014	0					
ANR	105179	Identifier	bits		105014	1					
ANR	105180	ExpressionStatement	ls_free ( sdb_range )	808:2:20830:20849	105014	15	True				
ANR	105181	CallExpression	ls_free ( sdb_range )		105014	0					
ANR	105182	Callee	ls_free		105014	0					
ANR	105183	Identifier	ls_free		105014	0					
ANR	105184	ArgumentList	sdb_range		105014	1					
ANR	105185	Argument	sdb_range		105014	0					
ANR	105186	Identifier	sdb_range		105014	0					
ANR	105187	ExpressionStatement	a -> merge_hints = false	809:2:20853:20875	105014	16	True				
ANR	105188	AssignmentExpression	a -> merge_hints = false		105014	0		=			
ANR	105189	PtrMemberAccess	a -> merge_hints		105014	0					
ANR	105190	Identifier	a		105014	0					
ANR	105191	Identifier	merge_hints		105014	1					
ANR	105192	Identifier	false		105014	1					
ANR	105193	ReturnType	R_API void		105014	1					
ANR	105194	Identifier	r_anal_merge_hint_ranges		105014	2					
ANR	105195	ParameterList	RAnal * a		105014	3					
ANR	105196	Parameter	RAnal * a	787:36:20153:20160	105014	0	True				
ANR	105197	ParameterType	RAnal *		105014	0					
ANR	105198	Identifier	a		105014	1					
ANR	105199	CFGEntryNode	ENTRY		105014		True				
ANR	105200	CFGExitNode	EXIT		105014		True				
ANR	105201	Symbol	range -> from		105014						
ANR	105202	Symbol	& a -> rb_hints_ranges		105014						
ANR	105203	Symbol	sdb_range		105014						
ANR	105204	Symbol	range		105014						
ANR	105205	Symbol	r_anal_hint_get_bits_at		105014						
ANR	105206	Symbol	range_bits		105014						
ANR	105207	Symbol	a -> merge_hints		105014						
ANR	105208	Symbol	* range		105014						
ANR	105209	Symbol	a -> rb_hints_ranges		105014						
ANR	105210	Symbol	addr		105014						
ANR	105211	Symbol	a		105014						
ANR	105212	Symbol	sdb_atoi		105014						
ANR	105213	Symbol	__anal_hint_range_tree_free		105014						
ANR	105214	Symbol	NULL		105014						
ANR	105215	Symbol	sdbkv_key		105014						
ANR	105216	Symbol	range -> bits		105014						
ANR	105217	Symbol	bits		105014						
ANR	105218	Symbol	false		105014						
ANR	105219	Symbol	iter		105014						
ANR	105220	Symbol	sdb_foreach_list		105014						
ANR	105221	Symbol	* a		105014						
ANR	105222	Symbol	kv		105014						
ANR	105223	Symbol	sdbkv_value		105014						
ANR	105224	Symbol	R_NEW0		105014						
ANR	105225	Symbol	RAnalRange		105014						
ANR	105226	Symbol	true		105014						
ANR	105227	Symbol	a -> sdb_hints		105014						
ANR	105228	Function	r_anal_bind	813:0:20883:21036							
ANR	105229	FunctionDef	"r_anal_bind (RAnal * anal , RAnalBind * b)"		105228	0					
ANR	105230	CompoundStatement		813:50:20933:21036	105228	0					
ANR	105231	IfStatement	if ( b )		105228	0					
ANR	105232	Condition	b	814:5:20940:20940	105228	0	True				
ANR	105233	Identifier	b		105228	0					
ANR	105234	CompoundStatement		2:8:9:9	105228	1					
ANR	105235	ExpressionStatement	b -> anal = anal	815:2:20947:20961	105228	0	True				
ANR	105236	AssignmentExpression	b -> anal = anal		105228	0		=			
ANR	105237	PtrMemberAccess	b -> anal		105228	0					
ANR	105238	Identifier	b		105228	0					
ANR	105239	Identifier	anal		105228	1					
ANR	105240	Identifier	anal		105228	1					
ANR	105241	ExpressionStatement	b -> get_fcn_in = r_anal_get_fcn_in	816:2:20965:20998	105228	1	True				
ANR	105242	AssignmentExpression	b -> get_fcn_in = r_anal_get_fcn_in		105228	0		=			
ANR	105243	PtrMemberAccess	b -> get_fcn_in		105228	0					
ANR	105244	Identifier	b		105228	0					
ANR	105245	Identifier	get_fcn_in		105228	1					
ANR	105246	Identifier	r_anal_get_fcn_in		105228	1					
ANR	105247	ExpressionStatement	b -> get_hint = r_anal_hint_get	817:2:21002:21031	105228	2	True				
ANR	105248	AssignmentExpression	b -> get_hint = r_anal_hint_get		105228	0		=			
ANR	105249	PtrMemberAccess	b -> get_hint		105228	0					
ANR	105250	Identifier	b		105228	0					
ANR	105251	Identifier	get_hint		105228	1					
ANR	105252	Identifier	r_anal_hint_get		105228	1					
ANR	105253	ReturnType	R_API void		105228	1					
ANR	105254	Identifier	r_anal_bind		105228	2					
ANR	105255	ParameterList	"RAnal * anal , RAnalBind * b"		105228	3					
ANR	105256	Parameter	RAnal * anal	813:23:20906:20916	105228	0	True				
ANR	105257	ParameterType	RAnal *		105228	0					
ANR	105258	Identifier	anal		105228	1					
ANR	105259	Parameter	RAnalBind * b	813:36:20919:20930	105228	1	True				
ANR	105260	ParameterType	RAnalBind *		105228	0					
ANR	105261	Identifier	b		105228	1					
ANR	105262	CFGEntryNode	ENTRY		105228		True				
ANR	105263	CFGExitNode	EXIT		105228		True				
ANR	105264	Symbol	b		105228						
ANR	105265	Symbol	r_anal_get_fcn_in		105228						
ANR	105266	Symbol	b -> anal		105228						
ANR	105267	Symbol	anal		105228						
ANR	105268	Symbol	b -> get_hint		105228						
ANR	105269	Symbol	b -> get_fcn_in		105228						
ANR	105270	Symbol	r_anal_hint_get		105228						
ANR	105271	Symbol	* b		105228						
