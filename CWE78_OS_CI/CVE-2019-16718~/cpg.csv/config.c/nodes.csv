command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1074305	File	data/converged/CVE-2019-16718~_radare2/config.c								
ANR	1074306	Function	r_config_node_new	5:0:76:461							
ANR	1074307	FunctionDef	"r_config_node_new (const char * name , const char * value)"		1074306	0					
ANR	1074308	CompoundStatement		5:74:150:461	1074306	0					
ANR	1074309	IfStatement	if ( IS_NULLSTR ( name ) )		1074306	0					
ANR	1074310	Condition	IS_NULLSTR ( name )	6:5:157:173	1074306	0	True				
ANR	1074311	CallExpression	IS_NULLSTR ( name )		1074306	0					
ANR	1074312	Callee	IS_NULLSTR		1074306	0					
ANR	1074313	Identifier	IS_NULLSTR		1074306	0					
ANR	1074314	ArgumentList	name		1074306	1					
ANR	1074315	Argument	name		1074306	0					
ANR	1074316	Identifier	name		1074306	0					
ANR	1074317	CompoundStatement		2:24:25:25	1074306	1					
ANR	1074318	ReturnStatement	return NULL ;	7:2:180:191	1074306	0	True				
ANR	1074319	Identifier	NULL		1074306	0					
ANR	1074320	IdentifierDeclStatement	RConfigNode * node = R_NEW0 ( RConfigNode ) ;	9:1:197:237	1074306	1	True				
ANR	1074321	IdentifierDecl	* node = R_NEW0 ( RConfigNode )		1074306	0					
ANR	1074322	IdentifierDeclType	RConfigNode *		1074306	0					
ANR	1074323	Identifier	node		1074306	1					
ANR	1074324	AssignmentExpression	* node = R_NEW0 ( RConfigNode )		1074306	2		=			
ANR	1074325	Identifier	node		1074306	0					
ANR	1074326	CallExpression	R_NEW0 ( RConfigNode )		1074306	1					
ANR	1074327	Callee	R_NEW0		1074306	0					
ANR	1074328	Identifier	R_NEW0		1074306	0					
ANR	1074329	ArgumentList	RConfigNode		1074306	1					
ANR	1074330	Argument	RConfigNode		1074306	0					
ANR	1074331	Identifier	RConfigNode		1074306	0					
ANR	1074332	IfStatement	if ( ! node )		1074306	2					
ANR	1074333	Condition	! node	10:5:244:248	1074306	0	True				
ANR	1074334	UnaryOperationExpression	! node		1074306	0					
ANR	1074335	UnaryOperator	!		1074306	0					
ANR	1074336	Identifier	node		1074306	1					
ANR	1074337	CompoundStatement		6:12:100:100	1074306	1					
ANR	1074338	ReturnStatement	return NULL ;	11:2:255:266	1074306	0	True				
ANR	1074339	Identifier	NULL		1074306	0					
ANR	1074340	ExpressionStatement	node -> name = strdup ( name )	13:1:272:298	1074306	3	True				
ANR	1074341	AssignmentExpression	node -> name = strdup ( name )		1074306	0		=			
ANR	1074342	PtrMemberAccess	node -> name		1074306	0					
ANR	1074343	Identifier	node		1074306	0					
ANR	1074344	Identifier	name		1074306	1					
ANR	1074345	CallExpression	strdup ( name )		1074306	1					
ANR	1074346	Callee	strdup		1074306	0					
ANR	1074347	Identifier	strdup		1074306	0					
ANR	1074348	ArgumentList	name		1074306	1					
ANR	1074349	Argument	name		1074306	0					
ANR	1074350	Identifier	name		1074306	0					
ANR	1074351	ExpressionStatement	"node -> value = strdup ( value ? value : """" )"	14:1:301:340	1074306	4	True				
ANR	1074352	AssignmentExpression	"node -> value = strdup ( value ? value : """" )"		1074306	0		=			
ANR	1074353	PtrMemberAccess	node -> value		1074306	0					
ANR	1074354	Identifier	node		1074306	0					
ANR	1074355	Identifier	value		1074306	1					
ANR	1074356	CallExpression	"strdup ( value ? value : """" )"		1074306	1					
ANR	1074357	Callee	strdup		1074306	0					
ANR	1074358	Identifier	strdup		1074306	0					
ANR	1074359	ArgumentList	"value ? value : """""		1074306	1					
ANR	1074360	Argument	"value ? value : """""		1074306	0					
ANR	1074361	ConditionalExpression	"value ? value : """""		1074306	0					
ANR	1074362	Condition	value		1074306	0					
ANR	1074363	Identifier	value		1074306	0					
ANR	1074364	Identifier	value		1074306	1					
ANR	1074365	PrimaryExpression	""""""		1074306	2					
ANR	1074366	ExpressionStatement	node -> flags = CN_RW | CN_STR	15:1:343:371	1074306	5	True				
ANR	1074367	AssignmentExpression	node -> flags = CN_RW | CN_STR		1074306	0		=			
ANR	1074368	PtrMemberAccess	node -> flags		1074306	0					
ANR	1074369	Identifier	node		1074306	0					
ANR	1074370	Identifier	flags		1074306	1					
ANR	1074371	InclusiveOrExpression	CN_RW | CN_STR		1074306	1		|			
ANR	1074372	Identifier	CN_RW		1074306	0					
ANR	1074373	Identifier	CN_STR		1074306	1					
ANR	1074374	ExpressionStatement	"node -> i_value = r_num_get ( NULL , value )"	16:1:374:413	1074306	6	True				
ANR	1074375	AssignmentExpression	"node -> i_value = r_num_get ( NULL , value )"		1074306	0		=			
ANR	1074376	PtrMemberAccess	node -> i_value		1074306	0					
ANR	1074377	Identifier	node		1074306	0					
ANR	1074378	Identifier	i_value		1074306	1					
ANR	1074379	CallExpression	"r_num_get ( NULL , value )"		1074306	1					
ANR	1074380	Callee	r_num_get		1074306	0					
ANR	1074381	Identifier	r_num_get		1074306	0					
ANR	1074382	ArgumentList	NULL		1074306	1					
ANR	1074383	Argument	NULL		1074306	0					
ANR	1074384	Identifier	NULL		1074306	0					
ANR	1074385	Argument	value		1074306	1					
ANR	1074386	Identifier	value		1074306	0					
ANR	1074387	ExpressionStatement	node -> options = r_list_new ( )	17:1:416:445	1074306	7	True				
ANR	1074388	AssignmentExpression	node -> options = r_list_new ( )		1074306	0		=			
ANR	1074389	PtrMemberAccess	node -> options		1074306	0					
ANR	1074390	Identifier	node		1074306	0					
ANR	1074391	Identifier	options		1074306	1					
ANR	1074392	CallExpression	r_list_new ( )		1074306	1					
ANR	1074393	Callee	r_list_new		1074306	0					
ANR	1074394	Identifier	r_list_new		1074306	0					
ANR	1074395	ArgumentList			1074306	1					
ANR	1074396	ReturnStatement	return node ;	18:1:448:459	1074306	8	True				
ANR	1074397	Identifier	node		1074306	0					
ANR	1074398	ReturnType	R_API RConfigNode *		1074306	1					
ANR	1074399	Identifier	r_config_node_new		1074306	2					
ANR	1074400	ParameterList	"const char * name , const char * value"		1074306	3					
ANR	1074401	Parameter	const char * name	5:37:113:128	1074306	0	True				
ANR	1074402	ParameterType	const char *		1074306	0					
ANR	1074403	Identifier	name		1074306	1					
ANR	1074404	Parameter	const char * value	5:55:131:147	1074306	1	True				
ANR	1074405	ParameterType	const char *		1074306	0					
ANR	1074406	Identifier	value		1074306	1					
ANR	1074407	CFGEntryNode	ENTRY		1074306		True				
ANR	1074408	CFGExitNode	EXIT		1074306		True				
ANR	1074409	Symbol	IS_NULLSTR		1074306						
ANR	1074410	Symbol	NULL		1074306						
ANR	1074411	Symbol	node -> flags		1074306						
ANR	1074412	Symbol	CN_RW		1074306						
ANR	1074413	Symbol	node -> value		1074306						
ANR	1074414	Symbol	node -> i_value		1074306						
ANR	1074415	Symbol	R_NEW0		1074306						
ANR	1074416	Symbol	node		1074306						
ANR	1074417	Symbol	CN_STR		1074306						
ANR	1074418	Symbol	node -> name		1074306						
ANR	1074419	Symbol	RConfigNode		1074306						
ANR	1074420	Symbol	name		1074306						
ANR	1074421	Symbol	node -> options		1074306						
ANR	1074422	Symbol	* node		1074306						
ANR	1074423	Symbol	r_num_get		1074306						
ANR	1074424	Symbol	strdup		1074306						
ANR	1074425	Symbol	value		1074306						
ANR	1074426	Symbol	r_list_new		1074306						
ANR	1074427	Function	r_config_node_clone	21:0:464:842							
ANR	1074428	FunctionDef	r_config_node_clone (RConfigNode * n)		1074427	0					
ANR	1074429	CompoundStatement		21:55:519:842	1074427	0					
ANR	1074430	IdentifierDeclStatement	RConfigNode * cn = R_NEW0 ( RConfigNode ) ;	22:1:522:560	1074427	0	True				
ANR	1074431	IdentifierDecl	* cn = R_NEW0 ( RConfigNode )		1074427	0					
ANR	1074432	IdentifierDeclType	RConfigNode *		1074427	0					
ANR	1074433	Identifier	cn		1074427	1					
ANR	1074434	AssignmentExpression	* cn = R_NEW0 ( RConfigNode )		1074427	2		=			
ANR	1074435	Identifier	cn		1074427	0					
ANR	1074436	CallExpression	R_NEW0 ( RConfigNode )		1074427	1					
ANR	1074437	Callee	R_NEW0		1074427	0					
ANR	1074438	Identifier	R_NEW0		1074427	0					
ANR	1074439	ArgumentList	RConfigNode		1074427	1					
ANR	1074440	Argument	RConfigNode		1074427	0					
ANR	1074441	Identifier	RConfigNode		1074427	0					
ANR	1074442	IfStatement	if ( ! cn )		1074427	1					
ANR	1074443	Condition	! cn	23:5:567:569	1074427	0	True				
ANR	1074444	UnaryOperationExpression	! cn		1074427	0					
ANR	1074445	UnaryOperator	!		1074427	0					
ANR	1074446	Identifier	cn		1074427	1					
ANR	1074447	CompoundStatement		3:10:52:52	1074427	1					
ANR	1074448	ReturnStatement	return NULL ;	24:2:576:587	1074427	0	True				
ANR	1074449	Identifier	NULL		1074427	0					
ANR	1074450	ExpressionStatement	cn -> name = strdup ( n -> name )	26:1:593:620	1074427	2	True				
ANR	1074451	AssignmentExpression	cn -> name = strdup ( n -> name )		1074427	0		=			
ANR	1074452	PtrMemberAccess	cn -> name		1074427	0					
ANR	1074453	Identifier	cn		1074427	0					
ANR	1074454	Identifier	name		1074427	1					
ANR	1074455	CallExpression	strdup ( n -> name )		1074427	1					
ANR	1074456	Callee	strdup		1074427	0					
ANR	1074457	Identifier	strdup		1074427	0					
ANR	1074458	ArgumentList	n -> name		1074427	1					
ANR	1074459	Argument	n -> name		1074427	0					
ANR	1074460	PtrMemberAccess	n -> name		1074427	0					
ANR	1074461	Identifier	n		1074427	0					
ANR	1074462	Identifier	name		1074427	1					
ANR	1074463	ExpressionStatement	cn -> desc = n -> desc ? strdup ( n -> desc ) : NULL	27:1:623:665	1074427	3	True				
ANR	1074464	AssignmentExpression	cn -> desc = n -> desc ? strdup ( n -> desc ) : NULL		1074427	0		=			
ANR	1074465	PtrMemberAccess	cn -> desc		1074427	0					
ANR	1074466	Identifier	cn		1074427	0					
ANR	1074467	Identifier	desc		1074427	1					
ANR	1074468	ConditionalExpression	n -> desc ? strdup ( n -> desc ) : NULL		1074427	1					
ANR	1074469	Condition	n -> desc		1074427	0					
ANR	1074470	PtrMemberAccess	n -> desc		1074427	0					
ANR	1074471	Identifier	n		1074427	0					
ANR	1074472	Identifier	desc		1074427	1					
ANR	1074473	CallExpression	strdup ( n -> desc )		1074427	1					
ANR	1074474	Callee	strdup		1074427	0					
ANR	1074475	Identifier	strdup		1074427	0					
ANR	1074476	ArgumentList	n -> desc		1074427	1					
ANR	1074477	Argument	n -> desc		1074427	0					
ANR	1074478	PtrMemberAccess	n -> desc		1074427	0					
ANR	1074479	Identifier	n		1074427	0					
ANR	1074480	Identifier	desc		1074427	1					
ANR	1074481	Identifier	NULL		1074427	2					
ANR	1074482	ExpressionStatement	"cn -> value = strdup ( n -> value ? n -> value : """" )"	28:1:668:711	1074427	4	True				
ANR	1074483	AssignmentExpression	"cn -> value = strdup ( n -> value ? n -> value : """" )"		1074427	0		=			
ANR	1074484	PtrMemberAccess	cn -> value		1074427	0					
ANR	1074485	Identifier	cn		1074427	0					
ANR	1074486	Identifier	value		1074427	1					
ANR	1074487	CallExpression	"strdup ( n -> value ? n -> value : """" )"		1074427	1					
ANR	1074488	Callee	strdup		1074427	0					
ANR	1074489	Identifier	strdup		1074427	0					
ANR	1074490	ArgumentList	"n -> value ? n -> value : """""		1074427	1					
ANR	1074491	Argument	"n -> value ? n -> value : """""		1074427	0					
ANR	1074492	ConditionalExpression	"n -> value ? n -> value : """""		1074427	0					
ANR	1074493	Condition	n -> value		1074427	0					
ANR	1074494	PtrMemberAccess	n -> value		1074427	0					
ANR	1074495	Identifier	n		1074427	0					
ANR	1074496	Identifier	value		1074427	1					
ANR	1074497	PtrMemberAccess	n -> value		1074427	1					
ANR	1074498	Identifier	n		1074427	0					
ANR	1074499	Identifier	value		1074427	1					
ANR	1074500	PrimaryExpression	""""""		1074427	2					
ANR	1074501	ExpressionStatement	cn -> i_value = n -> i_value	29:1:714:738	1074427	5	True				
ANR	1074502	AssignmentExpression	cn -> i_value = n -> i_value		1074427	0		=			
ANR	1074503	PtrMemberAccess	cn -> i_value		1074427	0					
ANR	1074504	Identifier	cn		1074427	0					
ANR	1074505	Identifier	i_value		1074427	1					
ANR	1074506	PtrMemberAccess	n -> i_value		1074427	1					
ANR	1074507	Identifier	n		1074427	0					
ANR	1074508	Identifier	i_value		1074427	1					
ANR	1074509	ExpressionStatement	cn -> flags = n -> flags	30:1:741:761	1074427	6	True				
ANR	1074510	AssignmentExpression	cn -> flags = n -> flags		1074427	0		=			
ANR	1074511	PtrMemberAccess	cn -> flags		1074427	0					
ANR	1074512	Identifier	cn		1074427	0					
ANR	1074513	Identifier	flags		1074427	1					
ANR	1074514	PtrMemberAccess	n -> flags		1074427	1					
ANR	1074515	Identifier	n		1074427	0					
ANR	1074516	Identifier	flags		1074427	1					
ANR	1074517	ExpressionStatement	cn -> setter = n -> setter	31:1:764:786	1074427	7	True				
ANR	1074518	AssignmentExpression	cn -> setter = n -> setter		1074427	0		=			
ANR	1074519	PtrMemberAccess	cn -> setter		1074427	0					
ANR	1074520	Identifier	cn		1074427	0					
ANR	1074521	Identifier	setter		1074427	1					
ANR	1074522	PtrMemberAccess	n -> setter		1074427	1					
ANR	1074523	Identifier	n		1074427	0					
ANR	1074524	Identifier	setter		1074427	1					
ANR	1074525	ExpressionStatement	cn -> options = r_list_clone ( n -> options )	32:1:789:828	1074427	8	True				
ANR	1074526	AssignmentExpression	cn -> options = r_list_clone ( n -> options )		1074427	0		=			
ANR	1074527	PtrMemberAccess	cn -> options		1074427	0					
ANR	1074528	Identifier	cn		1074427	0					
ANR	1074529	Identifier	options		1074427	1					
ANR	1074530	CallExpression	r_list_clone ( n -> options )		1074427	1					
ANR	1074531	Callee	r_list_clone		1074427	0					
ANR	1074532	Identifier	r_list_clone		1074427	0					
ANR	1074533	ArgumentList	n -> options		1074427	1					
ANR	1074534	Argument	n -> options		1074427	0					
ANR	1074535	PtrMemberAccess	n -> options		1074427	0					
ANR	1074536	Identifier	n		1074427	0					
ANR	1074537	Identifier	options		1074427	1					
ANR	1074538	ReturnStatement	return cn ;	33:1:831:840	1074427	9	True				
ANR	1074539	Identifier	cn		1074427	0					
ANR	1074540	ReturnType	R_API RConfigNode *		1074427	1					
ANR	1074541	Identifier	r_config_node_clone		1074427	2					
ANR	1074542	ParameterList	RConfigNode * n		1074427	3					
ANR	1074543	Parameter	RConfigNode * n	21:39:503:516	1074427	0	True				
ANR	1074544	ParameterType	RConfigNode *		1074427	0					
ANR	1074545	Identifier	n		1074427	1					
ANR	1074546	CFGEntryNode	ENTRY		1074427		True				
ANR	1074547	CFGExitNode	EXIT		1074427		True				
ANR	1074548	Symbol	n -> name		1074427						
ANR	1074549	Symbol	cn -> desc		1074427						
ANR	1074550	Symbol	cn -> flags		1074427						
ANR	1074551	Symbol	NULL		1074427						
ANR	1074552	Symbol	cn -> name		1074427						
ANR	1074553	Symbol	n -> desc		1074427						
ANR	1074554	Symbol	r_list_clone		1074427						
ANR	1074555	Symbol	cn		1074427						
ANR	1074556	Symbol	n		1074427						
ANR	1074557	Symbol	cn -> i_value		1074427						
ANR	1074558	Symbol	n -> value		1074427						
ANR	1074559	Symbol	R_NEW0		1074427						
ANR	1074560	Symbol	n -> setter		1074427						
ANR	1074561	Symbol	* cn		1074427						
ANR	1074562	Symbol	n -> options		1074427						
ANR	1074563	Symbol	n -> flags		1074427						
ANR	1074564	Symbol	RConfigNode		1074427						
ANR	1074565	Symbol	* n		1074427						
ANR	1074566	Symbol	cn -> setter		1074427						
ANR	1074567	Symbol	n -> i_value		1074427						
ANR	1074568	Symbol	cn -> options		1074427						
ANR	1074569	Symbol	strdup		1074427						
ANR	1074570	Symbol	cn -> value		1074427						
ANR	1074571	Function	r_config_node_free	36:0:845:1057							
ANR	1074572	FunctionDef	r_config_node_free (void * n)		1074571	0					
ANR	1074573	CompoundStatement		36:39:884:1057	1074571	0					
ANR	1074574	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) n ;	37:1:887:923	1074571	0	True				
ANR	1074575	IdentifierDecl	* node = ( RConfigNode * ) n		1074571	0					
ANR	1074576	IdentifierDeclType	RConfigNode *		1074571	0					
ANR	1074577	Identifier	node		1074571	1					
ANR	1074578	AssignmentExpression	* node = ( RConfigNode * ) n		1074571	2		=			
ANR	1074579	Identifier	node		1074571	0					
ANR	1074580	CastExpression	( RConfigNode * ) n		1074571	1					
ANR	1074581	CastTarget	RConfigNode *		1074571	0					
ANR	1074582	Identifier	n		1074571	1					
ANR	1074583	IfStatement	if ( ! node )		1074571	1					
ANR	1074584	Condition	! node	38:5:930:934	1074571	0	True				
ANR	1074585	UnaryOperationExpression	! node		1074571	0					
ANR	1074586	UnaryOperator	!		1074571	0					
ANR	1074587	Identifier	node		1074571	1					
ANR	1074588	CompoundStatement		3:12:52:52	1074571	1					
ANR	1074589	ReturnStatement	return ;	39:2:941:947	1074571	0	True				
ANR	1074590	ExpressionStatement	free ( node -> name )	41:1:953:970	1074571	2	True				
ANR	1074591	CallExpression	free ( node -> name )		1074571	0					
ANR	1074592	Callee	free		1074571	0					
ANR	1074593	Identifier	free		1074571	0					
ANR	1074594	ArgumentList	node -> name		1074571	1					
ANR	1074595	Argument	node -> name		1074571	0					
ANR	1074596	PtrMemberAccess	node -> name		1074571	0					
ANR	1074597	Identifier	node		1074571	0					
ANR	1074598	Identifier	name		1074571	1					
ANR	1074599	ExpressionStatement	free ( node -> desc )	42:1:973:990	1074571	3	True				
ANR	1074600	CallExpression	free ( node -> desc )		1074571	0					
ANR	1074601	Callee	free		1074571	0					
ANR	1074602	Identifier	free		1074571	0					
ANR	1074603	ArgumentList	node -> desc		1074571	1					
ANR	1074604	Argument	node -> desc		1074571	0					
ANR	1074605	PtrMemberAccess	node -> desc		1074571	0					
ANR	1074606	Identifier	node		1074571	0					
ANR	1074607	Identifier	desc		1074571	1					
ANR	1074608	ExpressionStatement	free ( node -> value )	43:1:993:1011	1074571	4	True				
ANR	1074609	CallExpression	free ( node -> value )		1074571	0					
ANR	1074610	Callee	free		1074571	0					
ANR	1074611	Identifier	free		1074571	0					
ANR	1074612	ArgumentList	node -> value		1074571	1					
ANR	1074613	Argument	node -> value		1074571	0					
ANR	1074614	PtrMemberAccess	node -> value		1074571	0					
ANR	1074615	Identifier	node		1074571	0					
ANR	1074616	Identifier	value		1074571	1					
ANR	1074617	ExpressionStatement	r_list_free ( node -> options )	44:1:1014:1041	1074571	5	True				
ANR	1074618	CallExpression	r_list_free ( node -> options )		1074571	0					
ANR	1074619	Callee	r_list_free		1074571	0					
ANR	1074620	Identifier	r_list_free		1074571	0					
ANR	1074621	ArgumentList	node -> options		1074571	1					
ANR	1074622	Argument	node -> options		1074571	0					
ANR	1074623	PtrMemberAccess	node -> options		1074571	0					
ANR	1074624	Identifier	node		1074571	0					
ANR	1074625	Identifier	options		1074571	1					
ANR	1074626	ExpressionStatement	free ( node )	45:1:1044:1055	1074571	6	True				
ANR	1074627	CallExpression	free ( node )		1074571	0					
ANR	1074628	Callee	free		1074571	0					
ANR	1074629	Identifier	free		1074571	0					
ANR	1074630	ArgumentList	node		1074571	1					
ANR	1074631	Argument	node		1074571	0					
ANR	1074632	Identifier	node		1074571	0					
ANR	1074633	ReturnType	R_API void		1074571	1					
ANR	1074634	Identifier	r_config_node_free		1074571	2					
ANR	1074635	ParameterList	void * n		1074571	3					
ANR	1074636	Parameter	void * n	36:30:875:881	1074571	0	True				
ANR	1074637	ParameterType	void *		1074571	0					
ANR	1074638	Identifier	n		1074571	1					
ANR	1074639	CFGEntryNode	ENTRY		1074571		True				
ANR	1074640	CFGExitNode	EXIT		1074571		True				
ANR	1074641	Symbol	node		1074571						
ANR	1074642	Symbol	node -> name		1074571						
ANR	1074643	Symbol	node -> desc		1074571						
ANR	1074644	Symbol	node -> options		1074571						
ANR	1074645	Symbol	* node		1074571						
ANR	1074646	Symbol	n		1074571						
ANR	1074647	Symbol	node -> value		1074571						
ANR	1074648	Function	config_print_value_json	48:0:1060:1612							
ANR	1074649	FunctionDef	"config_print_value_json (RConfig * cfg , RConfigNode * node)"		1074648	0					
ANR	1074650	CompoundStatement		48:69:1129:1612	1074648	0					
ANR	1074651	IdentifierDeclStatement	const char * val = node -> value ;	49:1:1132:1161	1074648	0	True				
ANR	1074652	IdentifierDecl	* val = node -> value		1074648	0					
ANR	1074653	IdentifierDeclType	const char *		1074648	0					
ANR	1074654	Identifier	val		1074648	1					
ANR	1074655	AssignmentExpression	* val = node -> value		1074648	2		=			
ANR	1074656	Identifier	val		1074648	0					
ANR	1074657	PtrMemberAccess	node -> value		1074648	1					
ANR	1074658	Identifier	node		1074648	0					
ANR	1074659	Identifier	value		1074648	1					
ANR	1074660	IfStatement	if ( ! val )		1074648	1					
ANR	1074661	Condition	! val	50:5:1168:1171	1074648	0	True				
ANR	1074662	UnaryOperationExpression	! val		1074648	0					
ANR	1074663	UnaryOperator	!		1074648	0					
ANR	1074664	Identifier	val		1074648	1					
ANR	1074665	CompoundStatement		3:11:44:44	1074648	1					
ANR	1074666	ExpressionStatement	"val = ""0"""	51:2:1178:1187	1074648	0	True				
ANR	1074667	AssignmentExpression	"val = ""0"""		1074648	0		=			
ANR	1074668	Identifier	val		1074648	0					
ANR	1074669	PrimaryExpression	"""0"""		1074648	1					
ANR	1074670	IdentifierDeclStatement	char * sval = r_str_escape ( val ) ;	53:1:1193:1224	1074648	2	True				
ANR	1074671	IdentifierDecl	* sval = r_str_escape ( val )		1074648	0					
ANR	1074672	IdentifierDeclType	char *		1074648	0					
ANR	1074673	Identifier	sval		1074648	1					
ANR	1074674	AssignmentExpression	* sval = r_str_escape ( val )		1074648	2		=			
ANR	1074675	Identifier	sval		1074648	0					
ANR	1074676	CallExpression	r_str_escape ( val )		1074648	1					
ANR	1074677	Callee	r_str_escape		1074648	0					
ANR	1074678	Identifier	r_str_escape		1074648	0					
ANR	1074679	ArgumentList	val		1074648	1					
ANR	1074680	Argument	val		1074648	0					
ANR	1074681	Identifier	val		1074648	0					
ANR	1074682	IfStatement	if ( node -> flags & CN_BOOL || node -> flags & CN_INT || node -> flags & CN_OFFT )		1074648	3					
ANR	1074683	Condition	node -> flags & CN_BOOL || node -> flags & CN_INT || node -> flags & CN_OFFT	54:5:1231:1300	1074648	0	True				
ANR	1074684	OrExpression	node -> flags & CN_BOOL || node -> flags & CN_INT || node -> flags & CN_OFFT		1074648	0		||			
ANR	1074685	BitAndExpression	node -> flags & CN_BOOL		1074648	0		&			
ANR	1074686	PtrMemberAccess	node -> flags		1074648	0					
ANR	1074687	Identifier	node		1074648	0					
ANR	1074688	Identifier	flags		1074648	1					
ANR	1074689	Identifier	CN_BOOL		1074648	1					
ANR	1074690	OrExpression	node -> flags & CN_INT || node -> flags & CN_OFFT		1074648	1		||			
ANR	1074691	BitAndExpression	node -> flags & CN_INT		1074648	0		&			
ANR	1074692	PtrMemberAccess	node -> flags		1074648	0					
ANR	1074693	Identifier	node		1074648	0					
ANR	1074694	Identifier	flags		1074648	1					
ANR	1074695	Identifier	CN_INT		1074648	1					
ANR	1074696	BitAndExpression	node -> flags & CN_OFFT		1074648	1		&			
ANR	1074697	PtrMemberAccess	node -> flags		1074648	0					
ANR	1074698	Identifier	node		1074648	0					
ANR	1074699	Identifier	flags		1074648	1					
ANR	1074700	Identifier	CN_OFFT		1074648	1					
ANR	1074701	CompoundStatement		7:77:173:173	1074648	1					
ANR	1074702	IfStatement	"if ( ! strncmp ( val , ""0x"" , 2 ) )"		1074648	0					
ANR	1074703	Condition	"! strncmp ( val , ""0x"" , 2 )"	55:6:1311:1333	1074648	0	True				
ANR	1074704	UnaryOperationExpression	"! strncmp ( val , ""0x"" , 2 )"		1074648	0					
ANR	1074705	UnaryOperator	!		1074648	0					
ANR	1074706	CallExpression	"strncmp ( val , ""0x"" , 2 )"		1074648	1					
ANR	1074707	Callee	strncmp		1074648	0					
ANR	1074708	Identifier	strncmp		1074648	0					
ANR	1074709	ArgumentList	val		1074648	1					
ANR	1074710	Argument	val		1074648	0					
ANR	1074711	Identifier	val		1074648	0					
ANR	1074712	Argument	"""0x"""		1074648	1					
ANR	1074713	PrimaryExpression	"""0x"""		1074648	0					
ANR	1074714	Argument	2		1074648	2					
ANR	1074715	PrimaryExpression	2		1074648	0					
ANR	1074716	CompoundStatement		9:3:211:241	1074648	1					
ANR	1074717	IdentifierDeclStatement	"ut64 n = r_num_get ( NULL , val ) ;"	56:3:1341:1371	1074648	0	True				
ANR	1074718	IdentifierDecl	"n = r_num_get ( NULL , val )"		1074648	0					
ANR	1074719	IdentifierDeclType	ut64		1074648	0					
ANR	1074720	Identifier	n		1074648	1					
ANR	1074721	AssignmentExpression	"n = r_num_get ( NULL , val )"		1074648	2		=			
ANR	1074722	Identifier	n		1074648	0					
ANR	1074723	CallExpression	"r_num_get ( NULL , val )"		1074648	1					
ANR	1074724	Callee	r_num_get		1074648	0					
ANR	1074725	Identifier	r_num_get		1074648	0					
ANR	1074726	ArgumentList	NULL		1074648	1					
ANR	1074727	Argument	NULL		1074648	0					
ANR	1074728	Identifier	NULL		1074648	0					
ANR	1074729	Argument	val		1074648	1					
ANR	1074730	Identifier	val		1074648	0					
ANR	1074731	Statement	cfg	57:3:1376:1378	1074648	1	True				
ANR	1074732	Statement	->	57:6:1379:1380	1074648	2	True				
ANR	1074733	Statement	cb_printf	57:8:1381:1389	1074648	3	True				
ANR	1074734	Statement	(	57:18:1391:1391	1074648	4	True				
ANR	1074735	Statement	"""%"""	57:19:1392:1394	1074648	5	True				
ANR	1074736	Statement	PFMT64d	57:22:1395:1401	1074648	6	True				
ANR	1074737	Statement	","	57:29:1402:1402	1074648	7	True				
ANR	1074738	Statement	n	57:31:1404:1404	1074648	8	True				
ANR	1074739	Statement	)	57:32:1405:1405	1074648	9	True				
ANR	1074740	ExpressionStatement		57:33:1406:1406	1074648	10	True				
ANR	1074741	ElseStatement	else		1074648	0					
ANR	1074742	IfStatement	if ( r_str_isnumber ( val ) || r_str_is_bool ( val ) )		1074648	0					
ANR	1074743	Condition	r_str_isnumber ( val ) || r_str_is_bool ( val )	58:13:1421:1463	1074648	0	True				
ANR	1074744	OrExpression	r_str_isnumber ( val ) || r_str_is_bool ( val )		1074648	0		||			
ANR	1074745	CallExpression	r_str_isnumber ( val )		1074648	0					
ANR	1074746	Callee	r_str_isnumber		1074648	0					
ANR	1074747	Identifier	r_str_isnumber		1074648	0					
ANR	1074748	ArgumentList	val		1074648	1					
ANR	1074749	Argument	val		1074648	0					
ANR	1074750	Identifier	val		1074648	0					
ANR	1074751	CallExpression	r_str_is_bool ( val )		1074648	1					
ANR	1074752	Callee	r_str_is_bool		1074648	0					
ANR	1074753	Identifier	r_str_is_bool		1074648	0					
ANR	1074754	ArgumentList	val		1074648	1					
ANR	1074755	Argument	val		1074648	0					
ANR	1074756	Identifier	val		1074648	0					
ANR	1074757	CompoundStatement		11:58:336:336	1074648	1					
ANR	1074758	ExpressionStatement	"cfg -> cb_printf ( ""%s"" , val )"	59:3:1471:1497	1074648	0	True				
ANR	1074759	CallExpression	"cfg -> cb_printf ( ""%s"" , val )"		1074648	0					
ANR	1074760	Callee	cfg -> cb_printf		1074648	0					
ANR	1074761	PtrMemberAccess	cfg -> cb_printf		1074648	0					
ANR	1074762	Identifier	cfg		1074648	0					
ANR	1074763	Identifier	cb_printf		1074648	1					
ANR	1074764	ArgumentList	"""%s"""		1074648	1					
ANR	1074765	Argument	"""%s"""		1074648	0					
ANR	1074766	PrimaryExpression	"""%s"""		1074648	0					
ANR	1074767	Argument	val		1074648	1					
ANR	1074768	Identifier	val		1074648	0					
ANR	1074769	ElseStatement	else		1074648	0					
ANR	1074770	CompoundStatement		13:9:378:378	1074648	0					
ANR	1074771	ExpressionStatement	"cfg -> cb_printf ( ""\\""%s\\"""" , sval )"	61:3:1513:1544	1074648	0	True				
ANR	1074772	CallExpression	"cfg -> cb_printf ( ""\\""%s\\"""" , sval )"		1074648	0					
ANR	1074773	Callee	cfg -> cb_printf		1074648	0					
ANR	1074774	PtrMemberAccess	cfg -> cb_printf		1074648	0					
ANR	1074775	Identifier	cfg		1074648	0					
ANR	1074776	Identifier	cb_printf		1074648	1					
ANR	1074777	ArgumentList	"""\\""%s\\"""""		1074648	1					
ANR	1074778	Argument	"""\\""%s\\"""""		1074648	0					
ANR	1074779	PrimaryExpression	"""\\""%s\\"""""		1074648	0					
ANR	1074780	Argument	sval		1074648	1					
ANR	1074781	Identifier	sval		1074648	0					
ANR	1074782	ElseStatement	else		1074648	0					
ANR	1074783	CompoundStatement		16:8:428:428	1074648	0					
ANR	1074784	ExpressionStatement	"cfg -> cb_printf ( ""\\""%s\\"""" , sval )"	64:2:1562:1593	1074648	0	True				
ANR	1074785	CallExpression	"cfg -> cb_printf ( ""\\""%s\\"""" , sval )"		1074648	0					
ANR	1074786	Callee	cfg -> cb_printf		1074648	0					
ANR	1074787	PtrMemberAccess	cfg -> cb_printf		1074648	0					
ANR	1074788	Identifier	cfg		1074648	0					
ANR	1074789	Identifier	cb_printf		1074648	1					
ANR	1074790	ArgumentList	"""\\""%s\\"""""		1074648	1					
ANR	1074791	Argument	"""\\""%s\\"""""		1074648	0					
ANR	1074792	PrimaryExpression	"""\\""%s\\"""""		1074648	0					
ANR	1074793	Argument	sval		1074648	1					
ANR	1074794	Identifier	sval		1074648	0					
ANR	1074795	ExpressionStatement	free ( sval )	66:1:1599:1610	1074648	4	True				
ANR	1074796	CallExpression	free ( sval )		1074648	0					
ANR	1074797	Callee	free		1074648	0					
ANR	1074798	Identifier	free		1074648	0					
ANR	1074799	ArgumentList	sval		1074648	1					
ANR	1074800	Argument	sval		1074648	0					
ANR	1074801	Identifier	sval		1074648	0					
ANR	1074802	ReturnType	static void		1074648	1					
ANR	1074803	Identifier	config_print_value_json		1074648	2					
ANR	1074804	ParameterList	"RConfig * cfg , RConfigNode * node"		1074648	3					
ANR	1074805	Parameter	RConfig * cfg	48:36:1096:1107	1074648	0	True				
ANR	1074806	ParameterType	RConfig *		1074648	0					
ANR	1074807	Identifier	cfg		1074648	1					
ANR	1074808	Parameter	RConfigNode * node	48:50:1110:1126	1074648	1	True				
ANR	1074809	ParameterType	RConfigNode *		1074648	0					
ANR	1074810	Identifier	node		1074648	1					
ANR	1074811	CFGEntryNode	ENTRY		1074648		True				
ANR	1074812	CFGExitNode	EXIT		1074648		True				
ANR	1074813	Symbol	val		1074648						
ANR	1074814	Symbol	CN_OFFT		1074648						
ANR	1074815	Symbol	r_str_is_bool		1074648						
ANR	1074816	Symbol	NULL		1074648						
ANR	1074817	Symbol	cfg		1074648						
ANR	1074818	Symbol	node -> flags		1074648						
ANR	1074819	Symbol	r_str_isnumber		1074648						
ANR	1074820	Symbol	CN_BOOL		1074648						
ANR	1074821	Symbol	n		1074648						
ANR	1074822	Symbol	node -> value		1074648						
ANR	1074823	Symbol	r_str_escape		1074648						
ANR	1074824	Symbol	node		1074648						
ANR	1074825	Symbol	strncmp		1074648						
ANR	1074826	Symbol	CN_INT		1074648						
ANR	1074827	Symbol	sval		1074648						
ANR	1074828	Symbol	* node		1074648						
ANR	1074829	Symbol	r_num_get		1074648						
ANR	1074830	Function	config_print_node	69:0:1615:3345							
ANR	1074831	FunctionDef	"config_print_node (RConfig * cfg , RConfigNode * node , const char * pfx , const char * sfx , bool verbose , bool json)"		1074830	0					
ANR	1074832	CompoundStatement		69:122:1737:3345	1074830	0					
ANR	1074833	IdentifierDeclStatement	char * option ;	70:1:1740:1752	1074830	0	True				
ANR	1074834	IdentifierDecl	* option		1074830	0					
ANR	1074835	IdentifierDeclType	char *		1074830	0					
ANR	1074836	Identifier	option		1074830	1					
ANR	1074837	IdentifierDeclStatement	bool isFirst ;	71:1:1755:1767	1074830	1	True				
ANR	1074838	IdentifierDecl	isFirst		1074830	0					
ANR	1074839	IdentifierDeclType	bool		1074830	0					
ANR	1074840	Identifier	isFirst		1074830	1					
ANR	1074841	IdentifierDeclStatement	RListIter * iter ;	72:1:1770:1785	1074830	2	True				
ANR	1074842	IdentifierDecl	* iter		1074830	0					
ANR	1074843	IdentifierDeclType	RListIter *		1074830	0					
ANR	1074844	Identifier	iter		1074830	1					
ANR	1074845	IdentifierDeclStatement	char * es = NULL ;	73:1:1788:1803	1074830	3	True				
ANR	1074846	IdentifierDecl	* es = NULL		1074830	0					
ANR	1074847	IdentifierDeclType	char *		1074830	0					
ANR	1074848	Identifier	es		1074830	1					
ANR	1074849	AssignmentExpression	* es = NULL		1074830	2		=			
ANR	1074850	Identifier	NULL		1074830	0					
ANR	1074851	Identifier	NULL		1074830	1					
ANR	1074852	IfStatement	if ( json )		1074830	4					
ANR	1074853	Condition	json	75:5:1811:1814	1074830	0	True				
ANR	1074854	Identifier	json		1074830	0					
ANR	1074855	CompoundStatement		7:11:79:79	1074830	1					
ANR	1074856	IfStatement	if ( verbose )		1074830	0					
ANR	1074857	Condition	verbose	76:6:1825:1831	1074830	0	True				
ANR	1074858	Identifier	verbose		1074830	0					
ANR	1074859	CompoundStatement		8:15:96:96	1074830	1					
ANR	1074860	ExpressionStatement	"cfg -> cb_printf ( ""{"" )"	77:3:1839:1859	1074830	0	True				
ANR	1074861	CallExpression	"cfg -> cb_printf ( ""{"" )"		1074830	0					
ANR	1074862	Callee	cfg -> cb_printf		1074830	0					
ANR	1074863	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1074864	Identifier	cfg		1074830	0					
ANR	1074865	Identifier	cb_printf		1074830	1					
ANR	1074866	ArgumentList	"""{"""		1074830	1					
ANR	1074867	Argument	"""{"""		1074830	0					
ANR	1074868	PrimaryExpression	"""{"""		1074830	0					
ANR	1074869	ExpressionStatement	"cfg -> cb_printf ( ""\\""name\\"":\\""%s\\"","" , node -> name )"	78:3:1864:1911	1074830	1	True				
ANR	1074870	CallExpression	"cfg -> cb_printf ( ""\\""name\\"":\\""%s\\"","" , node -> name )"		1074830	0					
ANR	1074871	Callee	cfg -> cb_printf		1074830	0					
ANR	1074872	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1074873	Identifier	cfg		1074830	0					
ANR	1074874	Identifier	cb_printf		1074830	1					
ANR	1074875	ArgumentList	"""\\""name\\"":\\""%s\\"","""		1074830	1					
ANR	1074876	Argument	"""\\""name\\"":\\""%s\\"","""		1074830	0					
ANR	1074877	PrimaryExpression	"""\\""name\\"":\\""%s\\"","""		1074830	0					
ANR	1074878	Argument	node -> name		1074830	1					
ANR	1074879	PtrMemberAccess	node -> name		1074830	0					
ANR	1074880	Identifier	node		1074830	0					
ANR	1074881	Identifier	name		1074830	1					
ANR	1074882	ExpressionStatement	"cfg -> cb_printf ( ""\\""value\\"":"" )"	79:3:1916:1945	1074830	2	True				
ANR	1074883	CallExpression	"cfg -> cb_printf ( ""\\""value\\"":"" )"		1074830	0					
ANR	1074884	Callee	cfg -> cb_printf		1074830	0					
ANR	1074885	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1074886	Identifier	cfg		1074830	0					
ANR	1074887	Identifier	cb_printf		1074830	1					
ANR	1074888	ArgumentList	"""\\""value\\"":"""		1074830	1					
ANR	1074889	Argument	"""\\""value\\"":"""		1074830	0					
ANR	1074890	PrimaryExpression	"""\\""value\\"":"""		1074830	0					
ANR	1074891	ExpressionStatement	"config_print_value_json ( cfg , node )"	80:3:1950:1985	1074830	3	True				
ANR	1074892	CallExpression	"config_print_value_json ( cfg , node )"		1074830	0					
ANR	1074893	Callee	config_print_value_json		1074830	0					
ANR	1074894	Identifier	config_print_value_json		1074830	0					
ANR	1074895	ArgumentList	cfg		1074830	1					
ANR	1074896	Argument	cfg		1074830	0					
ANR	1074897	Identifier	cfg		1074830	0					
ANR	1074898	Argument	node		1074830	1					
ANR	1074899	Identifier	node		1074830	0					
ANR	1074900	ExpressionStatement	"cfg -> cb_printf ( "",\\""type\\"":\\""%s\\"","" , r_config_node_type ( node ) )"	81:3:1990:2053	1074830	4	True				
ANR	1074901	CallExpression	"cfg -> cb_printf ( "",\\""type\\"":\\""%s\\"","" , r_config_node_type ( node ) )"		1074830	0					
ANR	1074902	Callee	cfg -> cb_printf		1074830	0					
ANR	1074903	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1074904	Identifier	cfg		1074830	0					
ANR	1074905	Identifier	cb_printf		1074830	1					
ANR	1074906	ArgumentList	""",\\""type\\"":\\""%s\\"","""		1074830	1					
ANR	1074907	Argument	""",\\""type\\"":\\""%s\\"","""		1074830	0					
ANR	1074908	PrimaryExpression	""",\\""type\\"":\\""%s\\"","""		1074830	0					
ANR	1074909	Argument	r_config_node_type ( node )		1074830	1					
ANR	1074910	CallExpression	r_config_node_type ( node )		1074830	0					
ANR	1074911	Callee	r_config_node_type		1074830	0					
ANR	1074912	Identifier	r_config_node_type		1074830	0					
ANR	1074913	ArgumentList	node		1074830	1					
ANR	1074914	Argument	node		1074830	0					
ANR	1074915	Identifier	node		1074830	0					
ANR	1074916	ExpressionStatement	es = r_str_escape ( node -> desc )	82:3:2058:2088	1074830	5	True				
ANR	1074917	AssignmentExpression	es = r_str_escape ( node -> desc )		1074830	0		=			
ANR	1074918	Identifier	es		1074830	0					
ANR	1074919	CallExpression	r_str_escape ( node -> desc )		1074830	1					
ANR	1074920	Callee	r_str_escape		1074830	0					
ANR	1074921	Identifier	r_str_escape		1074830	0					
ANR	1074922	ArgumentList	node -> desc		1074830	1					
ANR	1074923	Argument	node -> desc		1074830	0					
ANR	1074924	PtrMemberAccess	node -> desc		1074830	0					
ANR	1074925	Identifier	node		1074830	0					
ANR	1074926	Identifier	desc		1074830	1					
ANR	1074927	IfStatement	if ( es )		1074830	6					
ANR	1074928	Condition	es	83:7:2097:2098	1074830	0	True				
ANR	1074929	Identifier	es		1074830	0					
ANR	1074930	CompoundStatement		15:11:363:363	1074830	1					
ANR	1074931	ExpressionStatement	"cfg -> cb_printf ( ""\\""desc\\"":\\""%s\\"","" , es )"	84:4:2107:2146	1074830	0	True				
ANR	1074932	CallExpression	"cfg -> cb_printf ( ""\\""desc\\"":\\""%s\\"","" , es )"		1074830	0					
ANR	1074933	Callee	cfg -> cb_printf		1074830	0					
ANR	1074934	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1074935	Identifier	cfg		1074830	0					
ANR	1074936	Identifier	cb_printf		1074830	1					
ANR	1074937	ArgumentList	"""\\""desc\\"":\\""%s\\"","""		1074830	1					
ANR	1074938	Argument	"""\\""desc\\"":\\""%s\\"","""		1074830	0					
ANR	1074939	PrimaryExpression	"""\\""desc\\"":\\""%s\\"","""		1074830	0					
ANR	1074940	Argument	es		1074830	1					
ANR	1074941	Identifier	es		1074830	0					
ANR	1074942	ExpressionStatement	free ( es )	85:4:2152:2161	1074830	1	True				
ANR	1074943	CallExpression	free ( es )		1074830	0					
ANR	1074944	Callee	free		1074830	0					
ANR	1074945	Identifier	free		1074830	0					
ANR	1074946	ArgumentList	es		1074830	1					
ANR	1074947	Argument	es		1074830	0					
ANR	1074948	Identifier	es		1074830	0					
ANR	1074949	ExpressionStatement	"cfg -> cb_printf ( ""\\""ro\\"":%s"" , node -> flags & CN_RO ? ""true"" : ""false"" )"	87:3:2171:2239	1074830	7	True				
ANR	1074950	CallExpression	"cfg -> cb_printf ( ""\\""ro\\"":%s"" , node -> flags & CN_RO ? ""true"" : ""false"" )"		1074830	0					
ANR	1074951	Callee	cfg -> cb_printf		1074830	0					
ANR	1074952	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1074953	Identifier	cfg		1074830	0					
ANR	1074954	Identifier	cb_printf		1074830	1					
ANR	1074955	ArgumentList	"""\\""ro\\"":%s"""		1074830	1					
ANR	1074956	Argument	"""\\""ro\\"":%s"""		1074830	0					
ANR	1074957	PrimaryExpression	"""\\""ro\\"":%s"""		1074830	0					
ANR	1074958	Argument	"node -> flags & CN_RO ? ""true"" : ""false"""		1074830	1					
ANR	1074959	ConditionalExpression	"node -> flags & CN_RO ? ""true"" : ""false"""		1074830	0					
ANR	1074960	Condition	node -> flags & CN_RO		1074830	0					
ANR	1074961	BitAndExpression	node -> flags & CN_RO		1074830	0		&			
ANR	1074962	PtrMemberAccess	node -> flags		1074830	0					
ANR	1074963	Identifier	node		1074830	0					
ANR	1074964	Identifier	flags		1074830	1					
ANR	1074965	Identifier	CN_RO		1074830	1					
ANR	1074966	PrimaryExpression	"""true"""		1074830	1					
ANR	1074967	PrimaryExpression	"""false"""		1074830	2					
ANR	1074968	IfStatement	if ( ! r_list_empty ( node -> options ) )		1074830	8					
ANR	1074969	Condition	! r_list_empty ( node -> options )	88:7:2248:2276	1074830	0	True				
ANR	1074970	UnaryOperationExpression	! r_list_empty ( node -> options )		1074830	0					
ANR	1074971	UnaryOperator	!		1074830	0					
ANR	1074972	CallExpression	r_list_empty ( node -> options )		1074830	1					
ANR	1074973	Callee	r_list_empty		1074830	0					
ANR	1074974	Identifier	r_list_empty		1074830	0					
ANR	1074975	ArgumentList	node -> options		1074830	1					
ANR	1074976	Argument	node -> options		1074830	0					
ANR	1074977	PtrMemberAccess	node -> options		1074830	0					
ANR	1074978	Identifier	node		1074830	0					
ANR	1074979	Identifier	options		1074830	1					
ANR	1074980	CompoundStatement		20:38:541:541	1074830	1					
ANR	1074981	ExpressionStatement	isFirst = true	89:4:2285:2299	1074830	0	True				
ANR	1074982	AssignmentExpression	isFirst = true		1074830	0		=			
ANR	1074983	Identifier	isFirst		1074830	0					
ANR	1074984	Identifier	true		1074830	1					
ANR	1074985	ExpressionStatement	"cfg -> cb_printf ( "",\\""options\\"":["" )"	90:4:2305:2338	1074830	1	True				
ANR	1074986	CallExpression	"cfg -> cb_printf ( "",\\""options\\"":["" )"		1074830	0					
ANR	1074987	Callee	cfg -> cb_printf		1074830	0					
ANR	1074988	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1074989	Identifier	cfg		1074830	0					
ANR	1074990	Identifier	cb_printf		1074830	1					
ANR	1074991	ArgumentList	""",\\""options\\"":["""		1074830	1					
ANR	1074992	Argument	""",\\""options\\"":["""		1074830	0					
ANR	1074993	PrimaryExpression	""",\\""options\\"":["""		1074830	0					
ANR	1074994	Statement	r_list_foreach	91:4:2344:2357	1074830	2	True				
ANR	1074995	Statement	(	91:19:2359:2359	1074830	3	True				
ANR	1074996	Statement	node	91:20:2360:2363	1074830	4	True				
ANR	1074997	Statement	->	91:24:2364:2365	1074830	5	True				
ANR	1074998	Statement	options	91:26:2366:2372	1074830	6	True				
ANR	1074999	Statement	","	91:33:2373:2373	1074830	7	True				
ANR	1075000	Statement	iter	91:35:2375:2378	1074830	8	True				
ANR	1075001	Statement	","	91:39:2379:2379	1074830	9	True				
ANR	1075002	Statement	option	91:41:2381:2386	1074830	10	True				
ANR	1075003	Statement	)	91:47:2387:2387	1074830	11	True				
ANR	1075004	CompoundStatement		23:49:651:651	1074830	12					
ANR	1075005	ExpressionStatement	es = r_str_escape ( option )	92:5:2396:2422	1074830	0	True				
ANR	1075006	AssignmentExpression	es = r_str_escape ( option )		1074830	0		=			
ANR	1075007	Identifier	es		1074830	0					
ANR	1075008	CallExpression	r_str_escape ( option )		1074830	1					
ANR	1075009	Callee	r_str_escape		1074830	0					
ANR	1075010	Identifier	r_str_escape		1074830	0					
ANR	1075011	ArgumentList	option		1074830	1					
ANR	1075012	Argument	option		1074830	0					
ANR	1075013	Identifier	option		1074830	0					
ANR	1075014	IfStatement	if ( es )		1074830	1					
ANR	1075015	Condition	es	93:9:2433:2434	1074830	0	True				
ANR	1075016	Identifier	es		1074830	0					
ANR	1075017	CompoundStatement		25:13:699:699	1074830	1					
ANR	1075018	IfStatement	if ( isFirst )		1074830	0					
ANR	1075019	Condition	isFirst	94:10:2449:2455	1074830	0	True				
ANR	1075020	Identifier	isFirst		1074830	0					
ANR	1075021	CompoundStatement		26:19:720:720	1074830	1					
ANR	1075022	ExpressionStatement	isFirst = false	95:7:2467:2482	1074830	0	True				
ANR	1075023	AssignmentExpression	isFirst = false		1074830	0		=			
ANR	1075024	Identifier	isFirst		1074830	0					
ANR	1075025	Identifier	false		1074830	1					
ANR	1075026	ElseStatement	else		1074830	0					
ANR	1075027	CompoundStatement		28:13:759:759	1074830	0					
ANR	1075028	ExpressionStatement	"cfg -> cb_printf ( "","" )"	97:7:2506:2526	1074830	0	True				
ANR	1075029	CallExpression	"cfg -> cb_printf ( "","" )"		1074830	0					
ANR	1075030	Callee	cfg -> cb_printf		1074830	0					
ANR	1075031	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075032	Identifier	cfg		1074830	0					
ANR	1075033	Identifier	cb_printf		1074830	1					
ANR	1075034	ArgumentList	""","""		1074830	1					
ANR	1075035	Argument	""","""		1074830	0					
ANR	1075036	PrimaryExpression	""","""		1074830	0					
ANR	1075037	ExpressionStatement	"cfg -> cb_printf ( ""\\""%s\\"""" , es )"	99:6:2542:2571	1074830	1	True				
ANR	1075038	CallExpression	"cfg -> cb_printf ( ""\\""%s\\"""" , es )"		1074830	0					
ANR	1075039	Callee	cfg -> cb_printf		1074830	0					
ANR	1075040	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075041	Identifier	cfg		1074830	0					
ANR	1075042	Identifier	cb_printf		1074830	1					
ANR	1075043	ArgumentList	"""\\""%s\\"""""		1074830	1					
ANR	1075044	Argument	"""\\""%s\\"""""		1074830	0					
ANR	1075045	PrimaryExpression	"""\\""%s\\"""""		1074830	0					
ANR	1075046	Argument	es		1074830	1					
ANR	1075047	Identifier	es		1074830	0					
ANR	1075048	ExpressionStatement	free ( es )	100:6:2579:2588	1074830	2	True				
ANR	1075049	CallExpression	free ( es )		1074830	0					
ANR	1075050	Callee	free		1074830	0					
ANR	1075051	Identifier	free		1074830	0					
ANR	1075052	ArgumentList	es		1074830	1					
ANR	1075053	Argument	es		1074830	0					
ANR	1075054	Identifier	es		1074830	0					
ANR	1075055	ExpressionStatement	"cfg -> cb_printf ( ""]"" )"	103:4:2607:2627	1074830	13	True				
ANR	1075056	CallExpression	"cfg -> cb_printf ( ""]"" )"		1074830	0					
ANR	1075057	Callee	cfg -> cb_printf		1074830	0					
ANR	1075058	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075059	Identifier	cfg		1074830	0					
ANR	1075060	Identifier	cb_printf		1074830	1					
ANR	1075061	ArgumentList	"""]"""		1074830	1					
ANR	1075062	Argument	"""]"""		1074830	0					
ANR	1075063	PrimaryExpression	"""]"""		1074830	0					
ANR	1075064	ExpressionStatement	"cfg -> cb_printf ( ""}"" )"	105:3:2637:2657	1074830	9	True				
ANR	1075065	CallExpression	"cfg -> cb_printf ( ""}"" )"		1074830	0					
ANR	1075066	Callee	cfg -> cb_printf		1074830	0					
ANR	1075067	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075068	Identifier	cfg		1074830	0					
ANR	1075069	Identifier	cb_printf		1074830	1					
ANR	1075070	ArgumentList	"""}"""		1074830	1					
ANR	1075071	Argument	"""}"""		1074830	0					
ANR	1075072	PrimaryExpression	"""}"""		1074830	0					
ANR	1075073	ElseStatement	else		1074830	0					
ANR	1075074	CompoundStatement		38:9:930:930	1074830	0					
ANR	1075075	ExpressionStatement	"cfg -> cb_printf ( ""\\""%s\\"":"" , node -> name )"	107:3:2673:2711	1074830	0	True				
ANR	1075076	CallExpression	"cfg -> cb_printf ( ""\\""%s\\"":"" , node -> name )"		1074830	0					
ANR	1075077	Callee	cfg -> cb_printf		1074830	0					
ANR	1075078	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075079	Identifier	cfg		1074830	0					
ANR	1075080	Identifier	cb_printf		1074830	1					
ANR	1075081	ArgumentList	"""\\""%s\\"":"""		1074830	1					
ANR	1075082	Argument	"""\\""%s\\"":"""		1074830	0					
ANR	1075083	PrimaryExpression	"""\\""%s\\"":"""		1074830	0					
ANR	1075084	Argument	node -> name		1074830	1					
ANR	1075085	PtrMemberAccess	node -> name		1074830	0					
ANR	1075086	Identifier	node		1074830	0					
ANR	1075087	Identifier	name		1074830	1					
ANR	1075088	ExpressionStatement	"config_print_value_json ( cfg , node )"	108:3:2716:2751	1074830	1	True				
ANR	1075089	CallExpression	"config_print_value_json ( cfg , node )"		1074830	0					
ANR	1075090	Callee	config_print_value_json		1074830	0					
ANR	1075091	Identifier	config_print_value_json		1074830	0					
ANR	1075092	ArgumentList	cfg		1074830	1					
ANR	1075093	Argument	cfg		1074830	0					
ANR	1075094	Identifier	cfg		1074830	0					
ANR	1075095	Argument	node		1074830	1					
ANR	1075096	Identifier	node		1074830	0					
ANR	1075097	ElseStatement	else		1074830	0					
ANR	1075098	CompoundStatement		42:8:1027:1027	1074830	0					
ANR	1075099	IfStatement	if ( verbose )		1074830	0					
ANR	1075100	Condition	verbose	111:6:2773:2779	1074830	0	True				
ANR	1075101	Identifier	verbose		1074830	0					
ANR	1075102	CompoundStatement		43:15:1044:1044	1074830	1					
ANR	1075103	ExpressionStatement	"cfg -> cb_printf ( ""%s%s = %s%s %s; %s"" , pfx , node -> name , node -> value , sfx , node -> flags & CN_RO ? ""(ro)"" : """" , node -> desc )"	112:3:2787:2920	1074830	0	True				
ANR	1075104	CallExpression	"cfg -> cb_printf ( ""%s%s = %s%s %s; %s"" , pfx , node -> name , node -> value , sfx , node -> flags & CN_RO ? ""(ro)"" : """" , node -> desc )"		1074830	0					
ANR	1075105	Callee	cfg -> cb_printf		1074830	0					
ANR	1075106	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075107	Identifier	cfg		1074830	0					
ANR	1075108	Identifier	cb_printf		1074830	1					
ANR	1075109	ArgumentList	"""%s%s = %s%s %s; %s"""		1074830	1					
ANR	1075110	Argument	"""%s%s = %s%s %s; %s"""		1074830	0					
ANR	1075111	PrimaryExpression	"""%s%s = %s%s %s; %s"""		1074830	0					
ANR	1075112	Argument	pfx		1074830	1					
ANR	1075113	Identifier	pfx		1074830	0					
ANR	1075114	Argument	node -> name		1074830	2					
ANR	1075115	PtrMemberAccess	node -> name		1074830	0					
ANR	1075116	Identifier	node		1074830	0					
ANR	1075117	Identifier	name		1074830	1					
ANR	1075118	Argument	node -> value		1074830	3					
ANR	1075119	PtrMemberAccess	node -> value		1074830	0					
ANR	1075120	Identifier	node		1074830	0					
ANR	1075121	Identifier	value		1074830	1					
ANR	1075122	Argument	sfx		1074830	4					
ANR	1075123	Identifier	sfx		1074830	0					
ANR	1075124	Argument	"node -> flags & CN_RO ? ""(ro)"" : """""		1074830	5					
ANR	1075125	ConditionalExpression	"node -> flags & CN_RO ? ""(ro)"" : """""		1074830	0					
ANR	1075126	Condition	node -> flags & CN_RO		1074830	0					
ANR	1075127	BitAndExpression	node -> flags & CN_RO		1074830	0		&			
ANR	1075128	PtrMemberAccess	node -> flags		1074830	0					
ANR	1075129	Identifier	node		1074830	0					
ANR	1075130	Identifier	flags		1074830	1					
ANR	1075131	Identifier	CN_RO		1074830	1					
ANR	1075132	PrimaryExpression	"""(ro)"""		1074830	1					
ANR	1075133	PrimaryExpression	""""""		1074830	2					
ANR	1075134	Argument	node -> desc		1074830	6					
ANR	1075135	PtrMemberAccess	node -> desc		1074830	0					
ANR	1075136	Identifier	node		1074830	0					
ANR	1075137	Identifier	desc		1074830	1					
ANR	1075138	IfStatement	if ( ! r_list_empty ( node -> options ) )		1074830	1					
ANR	1075139	Condition	! r_list_empty ( node -> options )	116:7:2929:2957	1074830	0	True				
ANR	1075140	UnaryOperationExpression	! r_list_empty ( node -> options )		1074830	0					
ANR	1075141	UnaryOperator	!		1074830	0					
ANR	1075142	CallExpression	r_list_empty ( node -> options )		1074830	1					
ANR	1075143	Callee	r_list_empty		1074830	0					
ANR	1075144	Identifier	r_list_empty		1074830	0					
ANR	1075145	ArgumentList	node -> options		1074830	1					
ANR	1075146	Argument	node -> options		1074830	0					
ANR	1075147	PtrMemberAccess	node -> options		1074830	0					
ANR	1075148	Identifier	node		1074830	0					
ANR	1075149	Identifier	options		1074830	1					
ANR	1075150	CompoundStatement		48:38:1222:1222	1074830	1					
ANR	1075151	ExpressionStatement	isFirst = true	117:4:2966:2980	1074830	0	True				
ANR	1075152	AssignmentExpression	isFirst = true		1074830	0		=			
ANR	1075153	Identifier	isFirst		1074830	0					
ANR	1075154	Identifier	true		1074830	1					
ANR	1075155	ExpressionStatement	"cfg -> cb_printf ( "" ["" )"	118:4:2986:3006	1074830	1	True				
ANR	1075156	CallExpression	"cfg -> cb_printf ( "" ["" )"		1074830	0					
ANR	1075157	Callee	cfg -> cb_printf		1074830	0					
ANR	1075158	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075159	Identifier	cfg		1074830	0					
ANR	1075160	Identifier	cb_printf		1074830	1					
ANR	1075161	ArgumentList	""" ["""		1074830	1					
ANR	1075162	Argument	""" ["""		1074830	0					
ANR	1075163	PrimaryExpression	""" ["""		1074830	0					
ANR	1075164	Statement	r_list_foreach	119:4:3012:3025	1074830	2	True				
ANR	1075165	Statement	(	119:19:3027:3027	1074830	3	True				
ANR	1075166	Statement	node	119:20:3028:3031	1074830	4	True				
ANR	1075167	Statement	->	119:24:3032:3033	1074830	5	True				
ANR	1075168	Statement	options	119:26:3034:3040	1074830	6	True				
ANR	1075169	Statement	","	119:33:3041:3041	1074830	7	True				
ANR	1075170	Statement	iter	119:35:3043:3046	1074830	8	True				
ANR	1075171	Statement	","	119:39:3047:3047	1074830	9	True				
ANR	1075172	Statement	option	119:41:3049:3054	1074830	10	True				
ANR	1075173	Statement	)	119:47:3055:3055	1074830	11	True				
ANR	1075174	CompoundStatement		51:49:1319:1319	1074830	12					
ANR	1075175	IfStatement	if ( isFirst )		1074830	0					
ANR	1075176	Condition	isFirst	120:9:3068:3074	1074830	0	True				
ANR	1075177	Identifier	isFirst		1074830	0					
ANR	1075178	CompoundStatement		52:18:1339:1339	1074830	1					
ANR	1075179	ExpressionStatement	isFirst = false	121:6:3085:3100	1074830	0	True				
ANR	1075180	AssignmentExpression	isFirst = false		1074830	0		=			
ANR	1075181	Identifier	isFirst		1074830	0					
ANR	1075182	Identifier	false		1074830	1					
ANR	1075183	ElseStatement	else		1074830	0					
ANR	1075184	CompoundStatement		54:12:1376:1376	1074830	0					
ANR	1075185	ExpressionStatement	"cfg -> cb_printf ( "", "" )"	123:6:3122:3143	1074830	0	True				
ANR	1075186	CallExpression	"cfg -> cb_printf ( "", "" )"		1074830	0					
ANR	1075187	Callee	cfg -> cb_printf		1074830	0					
ANR	1075188	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075189	Identifier	cfg		1074830	0					
ANR	1075190	Identifier	cb_printf		1074830	1					
ANR	1075191	ArgumentList	""", """		1074830	1					
ANR	1075192	Argument	""", """		1074830	0					
ANR	1075193	PrimaryExpression	""", """		1074830	0					
ANR	1075194	ExpressionStatement	"cfg -> cb_printf ( ""%s"" , option )"	125:5:3157:3186	1074830	1	True				
ANR	1075195	CallExpression	"cfg -> cb_printf ( ""%s"" , option )"		1074830	0					
ANR	1075196	Callee	cfg -> cb_printf		1074830	0					
ANR	1075197	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075198	Identifier	cfg		1074830	0					
ANR	1075199	Identifier	cb_printf		1074830	1					
ANR	1075200	ArgumentList	"""%s"""		1074830	1					
ANR	1075201	Argument	"""%s"""		1074830	0					
ANR	1075202	PrimaryExpression	"""%s"""		1074830	0					
ANR	1075203	Argument	option		1074830	1					
ANR	1075204	Identifier	option		1074830	0					
ANR	1075205	ExpressionStatement	"cfg -> cb_printf ( ""]"" )"	127:4:3198:3218	1074830	13	True				
ANR	1075206	CallExpression	"cfg -> cb_printf ( ""]"" )"		1074830	0					
ANR	1075207	Callee	cfg -> cb_printf		1074830	0					
ANR	1075208	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075209	Identifier	cfg		1074830	0					
ANR	1075210	Identifier	cb_printf		1074830	1					
ANR	1075211	ArgumentList	"""]"""		1074830	1					
ANR	1075212	Argument	"""]"""		1074830	0					
ANR	1075213	PrimaryExpression	"""]"""		1074830	0					
ANR	1075214	ExpressionStatement	"cfg -> cb_printf ( ""\\n"" )"	129:3:3228:3249	1074830	2	True				
ANR	1075215	CallExpression	"cfg -> cb_printf ( ""\\n"" )"		1074830	0					
ANR	1075216	Callee	cfg -> cb_printf		1074830	0					
ANR	1075217	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075218	Identifier	cfg		1074830	0					
ANR	1075219	Identifier	cb_printf		1074830	1					
ANR	1075220	ArgumentList	"""\\n"""		1074830	1					
ANR	1075221	Argument	"""\\n"""		1074830	0					
ANR	1075222	PrimaryExpression	"""\\n"""		1074830	0					
ANR	1075223	ElseStatement	else		1074830	0					
ANR	1075224	CompoundStatement		62:9:1522:1522	1074830	0					
ANR	1075225	ExpressionStatement	"cfg -> cb_printf ( ""%s%s = %s%s\\n"" , pfx , node -> name , node -> value , sfx )"	131:3:3265:3336	1074830	0	True				
ANR	1075226	CallExpression	"cfg -> cb_printf ( ""%s%s = %s%s\\n"" , pfx , node -> name , node -> value , sfx )"		1074830	0					
ANR	1075227	Callee	cfg -> cb_printf		1074830	0					
ANR	1075228	PtrMemberAccess	cfg -> cb_printf		1074830	0					
ANR	1075229	Identifier	cfg		1074830	0					
ANR	1075230	Identifier	cb_printf		1074830	1					
ANR	1075231	ArgumentList	"""%s%s = %s%s\\n"""		1074830	1					
ANR	1075232	Argument	"""%s%s = %s%s\\n"""		1074830	0					
ANR	1075233	PrimaryExpression	"""%s%s = %s%s\\n"""		1074830	0					
ANR	1075234	Argument	pfx		1074830	1					
ANR	1075235	Identifier	pfx		1074830	0					
ANR	1075236	Argument	node -> name		1074830	2					
ANR	1075237	PtrMemberAccess	node -> name		1074830	0					
ANR	1075238	Identifier	node		1074830	0					
ANR	1075239	Identifier	name		1074830	1					
ANR	1075240	Argument	node -> value		1074830	3					
ANR	1075241	PtrMemberAccess	node -> value		1074830	0					
ANR	1075242	Identifier	node		1074830	0					
ANR	1075243	Identifier	value		1074830	1					
ANR	1075244	Argument	sfx		1074830	4					
ANR	1075245	Identifier	sfx		1074830	0					
ANR	1075246	ReturnType	static void		1074830	1					
ANR	1075247	Identifier	config_print_node		1074830	2					
ANR	1075248	ParameterList	"RConfig * cfg , RConfigNode * node , const char * pfx , const char * sfx , bool verbose , bool json"		1074830	3					
ANR	1075249	Parameter	RConfig * cfg	69:30:1645:1656	1074830	0	True				
ANR	1075250	ParameterType	RConfig *		1074830	0					
ANR	1075251	Identifier	cfg		1074830	1					
ANR	1075252	Parameter	RConfigNode * node	69:44:1659:1675	1074830	1	True				
ANR	1075253	ParameterType	RConfigNode *		1074830	0					
ANR	1075254	Identifier	node		1074830	1					
ANR	1075255	Parameter	const char * pfx	69:63:1678:1692	1074830	2	True				
ANR	1075256	ParameterType	const char *		1074830	0					
ANR	1075257	Identifier	pfx		1074830	1					
ANR	1075258	Parameter	const char * sfx	69:80:1695:1709	1074830	3	True				
ANR	1075259	ParameterType	const char *		1074830	0					
ANR	1075260	Identifier	sfx		1074830	1					
ANR	1075261	Parameter	bool verbose	69:97:1712:1723	1074830	4	True				
ANR	1075262	ParameterType	bool		1074830	0					
ANR	1075263	Identifier	verbose		1074830	1					
ANR	1075264	Parameter	bool json	69:111:1726:1734	1074830	5	True				
ANR	1075265	ParameterType	bool		1074830	0					
ANR	1075266	Identifier	json		1074830	1					
ANR	1075267	CFGEntryNode	ENTRY		1074830		True				
ANR	1075268	CFGExitNode	EXIT		1074830		True				
ANR	1075269	Symbol	pfx		1074830						
ANR	1075270	Symbol	NULL		1074830						
ANR	1075271	Symbol	sfx		1074830						
ANR	1075272	Symbol	CN_RO		1074830						
ANR	1075273	Symbol	cfg		1074830						
ANR	1075274	Symbol	node -> flags		1074830						
ANR	1075275	Symbol	node -> desc		1074830						
ANR	1075276	Symbol	false		1074830						
ANR	1075277	Symbol	iter		1074830						
ANR	1075278	Symbol	es		1074830						
ANR	1075279	Symbol	verbose		1074830						
ANR	1075280	Symbol	node -> value		1074830						
ANR	1075281	Symbol	r_str_escape		1074830						
ANR	1075282	Symbol	node		1074830						
ANR	1075283	Symbol	isFirst		1074830						
ANR	1075284	Symbol	node -> name		1074830						
ANR	1075285	Symbol	r_config_node_type		1074830						
ANR	1075286	Symbol	node -> options		1074830						
ANR	1075287	Symbol	true		1074830						
ANR	1075288	Symbol	json		1074830						
ANR	1075289	Symbol	r_list_empty		1074830						
ANR	1075290	Symbol	* node		1074830						
ANR	1075291	Symbol	option		1074830						
ANR	1075292	Function	r_config_list	137:0:3348:6044							
ANR	1075293	FunctionDef	"r_config_list (RConfig * cfg , const char * str , int rad)"		1075292	0					
ANR	1075294	CompoundStatement		137:65:3413:6044	1075292	0					
ANR	1075295	IdentifierDeclStatement	RConfigNode * node ;	138:1:3416:3433	1075292	0	True				
ANR	1075296	IdentifierDecl	* node		1075292	0					
ANR	1075297	IdentifierDeclType	RConfigNode *		1075292	0					
ANR	1075298	Identifier	node		1075292	1					
ANR	1075299	IdentifierDeclStatement	RListIter * iter ;	139:1:3436:3451	1075292	1	True				
ANR	1075300	IdentifierDecl	* iter		1075292	0					
ANR	1075301	IdentifierDeclType	RListIter *		1075292	0					
ANR	1075302	Identifier	iter		1075292	1					
ANR	1075303	IdentifierDeclStatement	"const char * sfx = """" ;"	140:1:3454:3474	1075292	2	True				
ANR	1075304	IdentifierDecl	"* sfx = """""		1075292	0					
ANR	1075305	IdentifierDeclType	const char *		1075292	0					
ANR	1075306	Identifier	sfx		1075292	1					
ANR	1075307	AssignmentExpression	"* sfx = """""		1075292	2		=			
ANR	1075308	Identifier	sfx		1075292	0					
ANR	1075309	PrimaryExpression	""""""		1075292	1					
ANR	1075310	IdentifierDeclStatement	"const char * pfx = """" ;"	141:1:3477:3497	1075292	3	True				
ANR	1075311	IdentifierDecl	"* pfx = """""		1075292	0					
ANR	1075312	IdentifierDeclType	const char *		1075292	0					
ANR	1075313	Identifier	pfx		1075292	1					
ANR	1075314	AssignmentExpression	"* pfx = """""		1075292	2		=			
ANR	1075315	Identifier	pfx		1075292	0					
ANR	1075316	PrimaryExpression	""""""		1075292	1					
ANR	1075317	IdentifierDeclStatement	int len = 0 ;	142:1:3500:3511	1075292	4	True				
ANR	1075318	IdentifierDecl	len = 0		1075292	0					
ANR	1075319	IdentifierDeclType	int		1075292	0					
ANR	1075320	Identifier	len		1075292	1					
ANR	1075321	AssignmentExpression	len = 0		1075292	2		=			
ANR	1075322	Identifier	len		1075292	0					
ANR	1075323	PrimaryExpression	0		1075292	1					
ANR	1075324	IdentifierDeclStatement	bool verbose = false ;	143:1:3514:3534	1075292	5	True				
ANR	1075325	IdentifierDecl	verbose = false		1075292	0					
ANR	1075326	IdentifierDeclType	bool		1075292	0					
ANR	1075327	Identifier	verbose		1075292	1					
ANR	1075328	AssignmentExpression	verbose = false		1075292	2		=			
ANR	1075329	Identifier	false		1075292	0					
ANR	1075330	Identifier	false		1075292	1					
ANR	1075331	IdentifierDeclStatement	bool json = false ;	144:1:3537:3554	1075292	6	True				
ANR	1075332	IdentifierDecl	json = false		1075292	0					
ANR	1075333	IdentifierDeclType	bool		1075292	0					
ANR	1075334	Identifier	json		1075292	1					
ANR	1075335	AssignmentExpression	json = false		1075292	2		=			
ANR	1075336	Identifier	false		1075292	0					
ANR	1075337	Identifier	false		1075292	1					
ANR	1075338	IdentifierDeclStatement	bool isFirst = false ;	145:1:3557:3577	1075292	7	True				
ANR	1075339	IdentifierDecl	isFirst = false		1075292	0					
ANR	1075340	IdentifierDeclType	bool		1075292	0					
ANR	1075341	Identifier	isFirst		1075292	1					
ANR	1075342	AssignmentExpression	isFirst = false		1075292	2		=			
ANR	1075343	Identifier	false		1075292	0					
ANR	1075344	Identifier	false		1075292	1					
ANR	1075345	IfStatement	if ( ! IS_NULLSTR ( str ) )		1075292	8					
ANR	1075346	Condition	! IS_NULLSTR ( str )	147:5:3585:3601	1075292	0	True				
ANR	1075347	UnaryOperationExpression	! IS_NULLSTR ( str )		1075292	0					
ANR	1075348	UnaryOperator	!		1075292	0					
ANR	1075349	CallExpression	IS_NULLSTR ( str )		1075292	1					
ANR	1075350	Callee	IS_NULLSTR		1075292	0					
ANR	1075351	Identifier	IS_NULLSTR		1075292	0					
ANR	1075352	ArgumentList	str		1075292	1					
ANR	1075353	Argument	str		1075292	0					
ANR	1075354	Identifier	str		1075292	0					
ANR	1075355	CompoundStatement		11:24:190:190	1075292	1					
ANR	1075356	ExpressionStatement	str = r_str_trim_ro ( str )	148:2:3608:3633	1075292	0	True				
ANR	1075357	AssignmentExpression	str = r_str_trim_ro ( str )		1075292	0		=			
ANR	1075358	Identifier	str		1075292	0					
ANR	1075359	CallExpression	r_str_trim_ro ( str )		1075292	1					
ANR	1075360	Callee	r_str_trim_ro		1075292	0					
ANR	1075361	Identifier	r_str_trim_ro		1075292	0					
ANR	1075362	ArgumentList	str		1075292	1					
ANR	1075363	Argument	str		1075292	0					
ANR	1075364	Identifier	str		1075292	0					
ANR	1075365	ExpressionStatement	len = strlen ( str )	149:2:3637:3655	1075292	1	True				
ANR	1075366	AssignmentExpression	len = strlen ( str )		1075292	0		=			
ANR	1075367	Identifier	len		1075292	0					
ANR	1075368	CallExpression	strlen ( str )		1075292	1					
ANR	1075369	Callee	strlen		1075292	0					
ANR	1075370	Identifier	strlen		1075292	0					
ANR	1075371	ArgumentList	str		1075292	1					
ANR	1075372	Argument	str		1075292	0					
ANR	1075373	Identifier	str		1075292	0					
ANR	1075374	IfStatement	if ( len > 0 && str [ 0 ] == 'j' )		1075292	2					
ANR	1075375	Condition	len > 0 && str [ 0 ] == 'j'	150:6:3663:3686	1075292	0	True				
ANR	1075376	AndExpression	len > 0 && str [ 0 ] == 'j'		1075292	0		&&			
ANR	1075377	RelationalExpression	len > 0		1075292	0		>			
ANR	1075378	Identifier	len		1075292	0					
ANR	1075379	PrimaryExpression	0		1075292	1					
ANR	1075380	EqualityExpression	str [ 0 ] == 'j'		1075292	1		==			
ANR	1075381	ArrayIndexing	str [ 0 ]		1075292	0					
ANR	1075382	Identifier	str		1075292	0					
ANR	1075383	PrimaryExpression	0		1075292	1					
ANR	1075384	PrimaryExpression	'j'		1075292	1					
ANR	1075385	CompoundStatement		14:32:275:275	1075292	1					
ANR	1075386	ExpressionStatement	str ++	151:3:3694:3699	1075292	0	True				
ANR	1075387	PostIncDecOperationExpression	str ++		1075292	0					
ANR	1075388	Identifier	str		1075292	0					
ANR	1075389	IncDec	++		1075292	1					
ANR	1075390	ExpressionStatement	len --	152:3:3704:3709	1075292	1	True				
ANR	1075391	PostIncDecOperationExpression	len --		1075292	0					
ANR	1075392	Identifier	len		1075292	0					
ANR	1075393	IncDec	--		1075292	1					
ANR	1075394	ExpressionStatement	json = true	153:3:3714:3725	1075292	2	True				
ANR	1075395	AssignmentExpression	json = true		1075292	0		=			
ANR	1075396	Identifier	json		1075292	0					
ANR	1075397	Identifier	true		1075292	1					
ANR	1075398	ExpressionStatement	rad = 'J'	154:3:3730:3739	1075292	3	True				
ANR	1075399	AssignmentExpression	rad = 'J'		1075292	0		=			
ANR	1075400	Identifier	rad		1075292	0					
ANR	1075401	PrimaryExpression	'J'		1075292	1					
ANR	1075402	IfStatement	if ( len > 0 && str [ 0 ] == ' ' )		1075292	3					
ANR	1075403	Condition	len > 0 && str [ 0 ] == ' '	156:6:3751:3774	1075292	0	True				
ANR	1075404	AndExpression	len > 0 && str [ 0 ] == ' '		1075292	0		&&			
ANR	1075405	RelationalExpression	len > 0		1075292	0		>			
ANR	1075406	Identifier	len		1075292	0					
ANR	1075407	PrimaryExpression	0		1075292	1					
ANR	1075408	EqualityExpression	str [ 0 ] == ' '		1075292	1		==			
ANR	1075409	ArrayIndexing	str [ 0 ]		1075292	0					
ANR	1075410	Identifier	str		1075292	0					
ANR	1075411	PrimaryExpression	0		1075292	1					
ANR	1075412	PrimaryExpression	' '		1075292	1					
ANR	1075413	CompoundStatement		20:32:363:363	1075292	1					
ANR	1075414	ExpressionStatement	str ++	157:3:3782:3787	1075292	0	True				
ANR	1075415	PostIncDecOperationExpression	str ++		1075292	0					
ANR	1075416	Identifier	str		1075292	0					
ANR	1075417	IncDec	++		1075292	1					
ANR	1075418	ExpressionStatement	len --	158:3:3792:3797	1075292	1	True				
ANR	1075419	PostIncDecOperationExpression	len --		1075292	0					
ANR	1075420	Identifier	len		1075292	0					
ANR	1075421	IncDec	--		1075292	1					
ANR	1075422	IfStatement	if ( strlen ( str ) == 0 )		1075292	4					
ANR	1075423	Condition	strlen ( str ) == 0	160:6:3809:3825	1075292	0	True				
ANR	1075424	EqualityExpression	strlen ( str ) == 0		1075292	0		==			
ANR	1075425	CallExpression	strlen ( str )		1075292	0					
ANR	1075426	Callee	strlen		1075292	0					
ANR	1075427	Identifier	strlen		1075292	0					
ANR	1075428	ArgumentList	str		1075292	1					
ANR	1075429	Argument	str		1075292	0					
ANR	1075430	Identifier	str		1075292	0					
ANR	1075431	PrimaryExpression	0		1075292	1					
ANR	1075432	CompoundStatement		24:25:414:414	1075292	1					
ANR	1075433	ExpressionStatement	str = NULL	161:3:3833:3843	1075292	0	True				
ANR	1075434	AssignmentExpression	str = NULL		1075292	0		=			
ANR	1075435	Identifier	str		1075292	0					
ANR	1075436	Identifier	NULL		1075292	1					
ANR	1075437	ExpressionStatement	len = 0	162:3:3848:3855	1075292	1	True				
ANR	1075438	AssignmentExpression	len = 0		1075292	0		=			
ANR	1075439	Identifier	len		1075292	0					
ANR	1075440	PrimaryExpression	0		1075292	1					
ANR	1075441	SwitchStatement	switch ( rad )		1075292	9					
ANR	1075442	Condition	rad	166:9:3874:3876	1075292	0	True				
ANR	1075443	Identifier	rad		1075292	0					
ANR	1075444	CompoundStatement		30:14:465:465	1075292	1					
ANR	1075445	Label	case 1 :	167:1:3882:3888	1075292	0	True				
ANR	1075446	ExpressionStatement	"pfx = ""\\""e """	168:2:3892:3904	1075292	1	True				
ANR	1075447	AssignmentExpression	"pfx = ""\\""e """		1075292	0		=			
ANR	1075448	Identifier	pfx		1075292	0					
ANR	1075449	PrimaryExpression	"""\\""e """		1075292	1					
ANR	1075450	ExpressionStatement	"sfx = ""\\"""""	169:2:3908:3918	1075292	2	True				
ANR	1075451	AssignmentExpression	"sfx = ""\\"""""		1075292	0		=			
ANR	1075452	Identifier	sfx		1075292	0					
ANR	1075453	PrimaryExpression	"""\\"""""		1075292	1					
ANR	1075454	Label	case 0 :	171:1:3938:3944	1075292	3	True				
ANR	1075455	Statement	r_list_foreach	172:2:3948:3961	1075292	4	True				
ANR	1075456	Statement	(	172:17:3963:3963	1075292	5	True				
ANR	1075457	Statement	cfg	172:18:3964:3966	1075292	6	True				
ANR	1075458	Statement	->	172:21:3967:3968	1075292	7	True				
ANR	1075459	Statement	nodes	172:23:3969:3973	1075292	8	True				
ANR	1075460	Statement	","	172:28:3974:3974	1075292	9	True				
ANR	1075461	Statement	iter	172:30:3976:3979	1075292	10	True				
ANR	1075462	Statement	","	172:34:3980:3980	1075292	11	True				
ANR	1075463	Statement	node	172:36:3982:3985	1075292	12	True				
ANR	1075464	Statement	)	172:40:3986:3986	1075292	13	True				
ANR	1075465	CompoundStatement		36:42:574:574	1075292	14					
ANR	1075466	IfStatement	"if ( ! str || ( str && ( ! strncmp ( str , node -> name , len ) ) ) )"		1075292	0					
ANR	1075467	Condition	"! str || ( str && ( ! strncmp ( str , node -> name , len ) ) )"	173:7:3997:4046	1075292	0	True				
ANR	1075468	OrExpression	"! str || ( str && ( ! strncmp ( str , node -> name , len ) ) )"		1075292	0		||			
ANR	1075469	UnaryOperationExpression	! str		1075292	0					
ANR	1075470	UnaryOperator	!		1075292	0					
ANR	1075471	Identifier	str		1075292	1					
ANR	1075472	AndExpression	"str && ( ! strncmp ( str , node -> name , len ) )"		1075292	1		&&			
ANR	1075473	Identifier	str		1075292	0					
ANR	1075474	UnaryOperationExpression	"! strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075475	UnaryOperator	!		1075292	0					
ANR	1075476	CallExpression	"strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075477	Callee	strncmp		1075292	0					
ANR	1075478	Identifier	strncmp		1075292	0					
ANR	1075479	ArgumentList	str		1075292	1					
ANR	1075480	Argument	str		1075292	0					
ANR	1075481	Identifier	str		1075292	0					
ANR	1075482	Argument	node -> name		1075292	1					
ANR	1075483	PtrMemberAccess	node -> name		1075292	0					
ANR	1075484	Identifier	node		1075292	0					
ANR	1075485	Identifier	name		1075292	1					
ANR	1075486	Argument	len		1075292	2					
ANR	1075487	Identifier	len		1075292	0					
ANR	1075488	CompoundStatement		37:59:635:635	1075292	1					
ANR	1075489	ExpressionStatement	"config_print_node ( cfg , node , pfx , sfx , verbose , json )"	174:4:4055:4109	1075292	0	True				
ANR	1075490	CallExpression	"config_print_node ( cfg , node , pfx , sfx , verbose , json )"		1075292	0					
ANR	1075491	Callee	config_print_node		1075292	0					
ANR	1075492	Identifier	config_print_node		1075292	0					
ANR	1075493	ArgumentList	cfg		1075292	1					
ANR	1075494	Argument	cfg		1075292	0					
ANR	1075495	Identifier	cfg		1075292	0					
ANR	1075496	Argument	node		1075292	1					
ANR	1075497	Identifier	node		1075292	0					
ANR	1075498	Argument	pfx		1075292	2					
ANR	1075499	Identifier	pfx		1075292	0					
ANR	1075500	Argument	sfx		1075292	3					
ANR	1075501	Identifier	sfx		1075292	0					
ANR	1075502	Argument	verbose		1075292	4					
ANR	1075503	Identifier	verbose		1075292	0					
ANR	1075504	Argument	json		1075292	5					
ANR	1075505	Identifier	json		1075292	0					
ANR	1075506	BreakStatement	break ;	177:2:4122:4127	1075292	15	True				
ANR	1075507	Label	case 2 :	178:1:4130:4136	1075292	16	True				
ANR	1075508	Statement	r_list_foreach	179:2:4140:4153	1075292	17	True				
ANR	1075509	Statement	(	179:17:4155:4155	1075292	18	True				
ANR	1075510	Statement	cfg	179:18:4156:4158	1075292	19	True				
ANR	1075511	Statement	->	179:21:4159:4160	1075292	20	True				
ANR	1075512	Statement	nodes	179:23:4161:4165	1075292	21	True				
ANR	1075513	Statement	","	179:28:4166:4166	1075292	22	True				
ANR	1075514	Statement	iter	179:30:4168:4171	1075292	23	True				
ANR	1075515	Statement	","	179:34:4172:4172	1075292	24	True				
ANR	1075516	Statement	node	179:36:4174:4177	1075292	25	True				
ANR	1075517	Statement	)	179:40:4178:4178	1075292	26	True				
ANR	1075518	CompoundStatement		43:42:766:766	1075292	27					
ANR	1075519	IfStatement	"if ( ! str || ( str && ( ! strncmp ( str , node -> name , len ) ) ) )"		1075292	0					
ANR	1075520	Condition	"! str || ( str && ( ! strncmp ( str , node -> name , len ) ) )"	180:7:4189:4238	1075292	0	True				
ANR	1075521	OrExpression	"! str || ( str && ( ! strncmp ( str , node -> name , len ) ) )"		1075292	0		||			
ANR	1075522	UnaryOperationExpression	! str		1075292	0					
ANR	1075523	UnaryOperator	!		1075292	0					
ANR	1075524	Identifier	str		1075292	1					
ANR	1075525	AndExpression	"str && ( ! strncmp ( str , node -> name , len ) )"		1075292	1		&&			
ANR	1075526	Identifier	str		1075292	0					
ANR	1075527	UnaryOperationExpression	"! strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075528	UnaryOperator	!		1075292	0					
ANR	1075529	CallExpression	"strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075530	Callee	strncmp		1075292	0					
ANR	1075531	Identifier	strncmp		1075292	0					
ANR	1075532	ArgumentList	str		1075292	1					
ANR	1075533	Argument	str		1075292	0					
ANR	1075534	Identifier	str		1075292	0					
ANR	1075535	Argument	node -> name		1075292	1					
ANR	1075536	PtrMemberAccess	node -> name		1075292	0					
ANR	1075537	Identifier	node		1075292	0					
ANR	1075538	Identifier	name		1075292	1					
ANR	1075539	Argument	len		1075292	2					
ANR	1075540	Identifier	len		1075292	0					
ANR	1075541	CompoundStatement		44:59:827:827	1075292	1					
ANR	1075542	IfStatement	"if ( ! str || ! strncmp ( str , node -> name , len ) )"		1075292	0					
ANR	1075543	Condition	"! str || ! strncmp ( str , node -> name , len )"	181:8:4251:4289	1075292	0	True				
ANR	1075544	OrExpression	"! str || ! strncmp ( str , node -> name , len )"		1075292	0		||			
ANR	1075545	UnaryOperationExpression	! str		1075292	0					
ANR	1075546	UnaryOperator	!		1075292	0					
ANR	1075547	Identifier	str		1075292	1					
ANR	1075548	UnaryOperationExpression	"! strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075549	UnaryOperator	!		1075292	0					
ANR	1075550	CallExpression	"strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075551	Callee	strncmp		1075292	0					
ANR	1075552	Identifier	strncmp		1075292	0					
ANR	1075553	ArgumentList	str		1075292	1					
ANR	1075554	Argument	str		1075292	0					
ANR	1075555	Identifier	str		1075292	0					
ANR	1075556	Argument	node -> name		1075292	1					
ANR	1075557	PtrMemberAccess	node -> name		1075292	0					
ANR	1075558	Identifier	node		1075292	0					
ANR	1075559	Identifier	name		1075292	1					
ANR	1075560	Argument	len		1075292	2					
ANR	1075561	Identifier	len		1075292	0					
ANR	1075562	CompoundStatement		45:49:878:878	1075292	1					
ANR	1075563	ExpressionStatement	"cfg -> cb_printf ( ""%20s: %s\\n"" , node -> name , node -> desc ? node -> desc : """" )"	182:5:4299:4374	1075292	0	True				
ANR	1075564	CallExpression	"cfg -> cb_printf ( ""%20s: %s\\n"" , node -> name , node -> desc ? node -> desc : """" )"		1075292	0					
ANR	1075565	Callee	cfg -> cb_printf		1075292	0					
ANR	1075566	PtrMemberAccess	cfg -> cb_printf		1075292	0					
ANR	1075567	Identifier	cfg		1075292	0					
ANR	1075568	Identifier	cb_printf		1075292	1					
ANR	1075569	ArgumentList	"""%20s: %s\\n"""		1075292	1					
ANR	1075570	Argument	"""%20s: %s\\n"""		1075292	0					
ANR	1075571	PrimaryExpression	"""%20s: %s\\n"""		1075292	0					
ANR	1075572	Argument	node -> name		1075292	1					
ANR	1075573	PtrMemberAccess	node -> name		1075292	0					
ANR	1075574	Identifier	node		1075292	0					
ANR	1075575	Identifier	name		1075292	1					
ANR	1075576	Argument	"node -> desc ? node -> desc : """""		1075292	2					
ANR	1075577	ConditionalExpression	"node -> desc ? node -> desc : """""		1075292	0					
ANR	1075578	Condition	node -> desc		1075292	0					
ANR	1075579	PtrMemberAccess	node -> desc		1075292	0					
ANR	1075580	Identifier	node		1075292	0					
ANR	1075581	Identifier	desc		1075292	1					
ANR	1075582	PtrMemberAccess	node -> desc		1075292	1					
ANR	1075583	Identifier	node		1075292	0					
ANR	1075584	Identifier	desc		1075292	1					
ANR	1075585	PrimaryExpression	""""""		1075292	2					
ANR	1075586	BreakStatement	break ;	187:2:4393:4398	1075292	28	True				
ANR	1075587	Label	case 's' :	188:1:4401:4409	1075292	29	True				
ANR	1075588	IfStatement	if ( str && * str )		1075292	30					
ANR	1075589	Condition	str && * str	189:6:4417:4427	1075292	0	True				
ANR	1075590	AndExpression	str && * str		1075292	0		&&			
ANR	1075591	Identifier	str		1075292	0					
ANR	1075592	UnaryOperationExpression	* str		1075292	1					
ANR	1075593	UnaryOperator	*		1075292	0					
ANR	1075594	Identifier	str		1075292	1					
ANR	1075595	CompoundStatement		53:19:1016:1016	1075292	1					
ANR	1075596	Statement	r_list_foreach	190:3:4435:4448	1075292	0	True				
ANR	1075597	Statement	(	190:18:4450:4450	1075292	1	True				
ANR	1075598	Statement	cfg	190:19:4451:4453	1075292	2	True				
ANR	1075599	Statement	->	190:22:4454:4455	1075292	3	True				
ANR	1075600	Statement	nodes	190:24:4456:4460	1075292	4	True				
ANR	1075601	Statement	","	190:29:4461:4461	1075292	5	True				
ANR	1075602	Statement	iter	190:31:4463:4466	1075292	6	True				
ANR	1075603	Statement	","	190:35:4467:4467	1075292	7	True				
ANR	1075604	Statement	node	190:37:4469:4472	1075292	8	True				
ANR	1075605	Statement	)	190:41:4473:4473	1075292	9	True				
ANR	1075606	CompoundStatement		56:4:1106:1137	1075292	10					
ANR	1075607	IdentifierDeclStatement	char * space = strdup ( node -> name ) ;	191:4:4481:4514	1075292	0	True				
ANR	1075608	IdentifierDecl	* space = strdup ( node -> name )		1075292	0					
ANR	1075609	IdentifierDeclType	char *		1075292	0					
ANR	1075610	Identifier	space		1075292	1					
ANR	1075611	AssignmentExpression	* space = strdup ( node -> name )		1075292	2		=			
ANR	1075612	Identifier	space		1075292	0					
ANR	1075613	CallExpression	strdup ( node -> name )		1075292	1					
ANR	1075614	Callee	strdup		1075292	0					
ANR	1075615	Identifier	strdup		1075292	0					
ANR	1075616	ArgumentList	node -> name		1075292	1					
ANR	1075617	Argument	node -> name		1075292	0					
ANR	1075618	PtrMemberAccess	node -> name		1075292	0					
ANR	1075619	Identifier	node		1075292	0					
ANR	1075620	Identifier	name		1075292	1					
ANR	1075621	IdentifierDeclStatement	"char * dot = strchr ( space , '.' ) ;"	192:4:4520:4551	1075292	1	True				
ANR	1075622	IdentifierDecl	"* dot = strchr ( space , '.' )"		1075292	0					
ANR	1075623	IdentifierDeclType	char *		1075292	0					
ANR	1075624	Identifier	dot		1075292	1					
ANR	1075625	AssignmentExpression	"* dot = strchr ( space , '.' )"		1075292	2		=			
ANR	1075626	Identifier	dot		1075292	0					
ANR	1075627	CallExpression	"strchr ( space , '.' )"		1075292	1					
ANR	1075628	Callee	strchr		1075292	0					
ANR	1075629	Identifier	strchr		1075292	0					
ANR	1075630	ArgumentList	space		1075292	1					
ANR	1075631	Argument	space		1075292	0					
ANR	1075632	Identifier	space		1075292	0					
ANR	1075633	Argument	'.'		1075292	1					
ANR	1075634	PrimaryExpression	'.'		1075292	0					
ANR	1075635	IfStatement	if ( dot )		1075292	2					
ANR	1075636	Condition	dot	193:8:4561:4563	1075292	0	True				
ANR	1075637	Identifier	dot		1075292	0					
ANR	1075638	CompoundStatement		57:13:1152:1152	1075292	1					
ANR	1075639	ExpressionStatement	* dot = 0	194:5:4573:4581	1075292	0	True				
ANR	1075640	AssignmentExpression	* dot = 0		1075292	0		=			
ANR	1075641	UnaryOperationExpression	* dot		1075292	0					
ANR	1075642	UnaryOperator	*		1075292	0					
ANR	1075643	Identifier	dot		1075292	1					
ANR	1075644	PrimaryExpression	0		1075292	1					
ANR	1075645	IfStatement	"if ( ! strcmp ( str , space ) )"		1075292	3					
ANR	1075646	Condition	"! strcmp ( str , space )"	196:8:4597:4616	1075292	0	True				
ANR	1075647	UnaryOperationExpression	"! strcmp ( str , space )"		1075292	0					
ANR	1075648	UnaryOperator	!		1075292	0					
ANR	1075649	CallExpression	"strcmp ( str , space )"		1075292	1					
ANR	1075650	Callee	strcmp		1075292	0					
ANR	1075651	Identifier	strcmp		1075292	0					
ANR	1075652	ArgumentList	str		1075292	1					
ANR	1075653	Argument	str		1075292	0					
ANR	1075654	Identifier	str		1075292	0					
ANR	1075655	Argument	space		1075292	1					
ANR	1075656	Identifier	space		1075292	0					
ANR	1075657	CompoundStatement		60:30:1205:1205	1075292	1					
ANR	1075658	ExpressionStatement	"cfg -> cb_printf ( ""%s\\n"" , dot + 1 )"	197:5:4626:4658	1075292	0	True				
ANR	1075659	CallExpression	"cfg -> cb_printf ( ""%s\\n"" , dot + 1 )"		1075292	0					
ANR	1075660	Callee	cfg -> cb_printf		1075292	0					
ANR	1075661	PtrMemberAccess	cfg -> cb_printf		1075292	0					
ANR	1075662	Identifier	cfg		1075292	0					
ANR	1075663	Identifier	cb_printf		1075292	1					
ANR	1075664	ArgumentList	"""%s\\n"""		1075292	1					
ANR	1075665	Argument	"""%s\\n"""		1075292	0					
ANR	1075666	PrimaryExpression	"""%s\\n"""		1075292	0					
ANR	1075667	Argument	dot + 1		1075292	1					
ANR	1075668	AdditiveExpression	dot + 1		1075292	0		+			
ANR	1075669	Identifier	dot		1075292	0					
ANR	1075670	PrimaryExpression	1		1075292	1					
ANR	1075671	ExpressionStatement	free ( space )	199:4:4670:4682	1075292	4	True				
ANR	1075672	CallExpression	free ( space )		1075292	0					
ANR	1075673	Callee	free		1075292	0					
ANR	1075674	Identifier	free		1075292	0					
ANR	1075675	ArgumentList	space		1075292	1					
ANR	1075676	Argument	space		1075292	0					
ANR	1075677	Identifier	space		1075292	0					
ANR	1075678	ElseStatement	else		1075292	0					
ANR	1075679	CompoundStatement		66:3:1289:1310	1075292	0					
ANR	1075680	IdentifierDeclStatement	char * oldSpace = NULL ;	202:3:4703:4724	1075292	0	True				
ANR	1075681	IdentifierDecl	* oldSpace = NULL		1075292	0					
ANR	1075682	IdentifierDeclType	char *		1075292	0					
ANR	1075683	Identifier	oldSpace		1075292	1					
ANR	1075684	AssignmentExpression	* oldSpace = NULL		1075292	2		=			
ANR	1075685	Identifier	NULL		1075292	0					
ANR	1075686	Identifier	NULL		1075292	1					
ANR	1075687	Statement	r_list_foreach	203:3:4729:4742	1075292	1	True				
ANR	1075688	Statement	(	203:18:4744:4744	1075292	2	True				
ANR	1075689	Statement	cfg	203:19:4745:4747	1075292	3	True				
ANR	1075690	Statement	->	203:22:4748:4749	1075292	4	True				
ANR	1075691	Statement	nodes	203:24:4750:4754	1075292	5	True				
ANR	1075692	Statement	","	203:29:4755:4755	1075292	6	True				
ANR	1075693	Statement	iter	203:31:4757:4760	1075292	7	True				
ANR	1075694	Statement	","	203:35:4761:4761	1075292	8	True				
ANR	1075695	Statement	node	203:37:4763:4766	1075292	9	True				
ANR	1075696	Statement	)	203:41:4767:4767	1075292	10	True				
ANR	1075697	CompoundStatement		69:4:1400:1431	1075292	11					
ANR	1075698	IdentifierDeclStatement	char * space = strdup ( node -> name ) ;	204:4:4775:4808	1075292	0	True				
ANR	1075699	IdentifierDecl	* space = strdup ( node -> name )		1075292	0					
ANR	1075700	IdentifierDeclType	char *		1075292	0					
ANR	1075701	Identifier	space		1075292	1					
ANR	1075702	AssignmentExpression	* space = strdup ( node -> name )		1075292	2		=			
ANR	1075703	Identifier	space		1075292	0					
ANR	1075704	CallExpression	strdup ( node -> name )		1075292	1					
ANR	1075705	Callee	strdup		1075292	0					
ANR	1075706	Identifier	strdup		1075292	0					
ANR	1075707	ArgumentList	node -> name		1075292	1					
ANR	1075708	Argument	node -> name		1075292	0					
ANR	1075709	PtrMemberAccess	node -> name		1075292	0					
ANR	1075710	Identifier	node		1075292	0					
ANR	1075711	Identifier	name		1075292	1					
ANR	1075712	IdentifierDeclStatement	"char * dot = strchr ( space , '.' ) ;"	205:4:4814:4845	1075292	1	True				
ANR	1075713	IdentifierDecl	"* dot = strchr ( space , '.' )"		1075292	0					
ANR	1075714	IdentifierDeclType	char *		1075292	0					
ANR	1075715	Identifier	dot		1075292	1					
ANR	1075716	AssignmentExpression	"* dot = strchr ( space , '.' )"		1075292	2		=			
ANR	1075717	Identifier	dot		1075292	0					
ANR	1075718	CallExpression	"strchr ( space , '.' )"		1075292	1					
ANR	1075719	Callee	strchr		1075292	0					
ANR	1075720	Identifier	strchr		1075292	0					
ANR	1075721	ArgumentList	space		1075292	1					
ANR	1075722	Argument	space		1075292	0					
ANR	1075723	Identifier	space		1075292	0					
ANR	1075724	Argument	'.'		1075292	1					
ANR	1075725	PrimaryExpression	'.'		1075292	0					
ANR	1075726	IfStatement	if ( dot )		1075292	2					
ANR	1075727	Condition	dot	206:8:4855:4857	1075292	0	True				
ANR	1075728	Identifier	dot		1075292	0					
ANR	1075729	CompoundStatement		70:13:1446:1446	1075292	1					
ANR	1075730	ExpressionStatement	* dot = 0	207:5:4867:4875	1075292	0	True				
ANR	1075731	AssignmentExpression	* dot = 0		1075292	0		=			
ANR	1075732	UnaryOperationExpression	* dot		1075292	0					
ANR	1075733	UnaryOperator	*		1075292	0					
ANR	1075734	Identifier	dot		1075292	1					
ANR	1075735	PrimaryExpression	0		1075292	1					
ANR	1075736	IfStatement	if ( oldSpace )		1075292	3					
ANR	1075737	Condition	oldSpace	209:8:4891:4898	1075292	0	True				
ANR	1075738	Identifier	oldSpace		1075292	0					
ANR	1075739	CompoundStatement		73:18:1487:1487	1075292	1					
ANR	1075740	IfStatement	"if ( ! strcmp ( space , oldSpace ) )"		1075292	0					
ANR	1075741	Condition	"! strcmp ( space , oldSpace )"	210:9:4912:4936	1075292	0	True				
ANR	1075742	UnaryOperationExpression	"! strcmp ( space , oldSpace )"		1075292	0					
ANR	1075743	UnaryOperator	!		1075292	0					
ANR	1075744	CallExpression	"strcmp ( space , oldSpace )"		1075292	1					
ANR	1075745	Callee	strcmp		1075292	0					
ANR	1075746	Identifier	strcmp		1075292	0					
ANR	1075747	ArgumentList	space		1075292	1					
ANR	1075748	Argument	space		1075292	0					
ANR	1075749	Identifier	space		1075292	0					
ANR	1075750	Argument	oldSpace		1075292	1					
ANR	1075751	Identifier	oldSpace		1075292	0					
ANR	1075752	CompoundStatement		74:36:1525:1525	1075292	1					
ANR	1075753	ExpressionStatement	free ( space )	211:6:4947:4959	1075292	0	True				
ANR	1075754	CallExpression	free ( space )		1075292	0					
ANR	1075755	Callee	free		1075292	0					
ANR	1075756	Identifier	free		1075292	0					
ANR	1075757	ArgumentList	space		1075292	1					
ANR	1075758	Argument	space		1075292	0					
ANR	1075759	Identifier	space		1075292	0					
ANR	1075760	ContinueStatement	continue ;	212:6:4967:4975	1075292	1	True				
ANR	1075761	ExpressionStatement	free ( oldSpace )	214:5:4989:5004	1075292	1	True				
ANR	1075762	CallExpression	free ( oldSpace )		1075292	0					
ANR	1075763	Callee	free		1075292	0					
ANR	1075764	Identifier	free		1075292	0					
ANR	1075765	ArgumentList	oldSpace		1075292	1					
ANR	1075766	Argument	oldSpace		1075292	0					
ANR	1075767	Identifier	oldSpace		1075292	0					
ANR	1075768	ExpressionStatement	oldSpace = space	215:5:5011:5027	1075292	2	True				
ANR	1075769	AssignmentExpression	oldSpace = space		1075292	0		=			
ANR	1075770	Identifier	oldSpace		1075292	0					
ANR	1075771	Identifier	space		1075292	1					
ANR	1075772	ElseStatement	else		1075292	0					
ANR	1075773	CompoundStatement		80:11:1626:1626	1075292	0					
ANR	1075774	ExpressionStatement	oldSpace = space	217:5:5047:5063	1075292	0	True				
ANR	1075775	AssignmentExpression	oldSpace = space		1075292	0		=			
ANR	1075776	Identifier	oldSpace		1075292	0					
ANR	1075777	Identifier	space		1075292	1					
ANR	1075778	ExpressionStatement	"cfg -> cb_printf ( ""%s\\n"" , space )"	219:4:5075:5105	1075292	4	True				
ANR	1075779	CallExpression	"cfg -> cb_printf ( ""%s\\n"" , space )"		1075292	0					
ANR	1075780	Callee	cfg -> cb_printf		1075292	0					
ANR	1075781	PtrMemberAccess	cfg -> cb_printf		1075292	0					
ANR	1075782	Identifier	cfg		1075292	0					
ANR	1075783	Identifier	cb_printf		1075292	1					
ANR	1075784	ArgumentList	"""%s\\n"""		1075292	1					
ANR	1075785	Argument	"""%s\\n"""		1075292	0					
ANR	1075786	PrimaryExpression	"""%s\\n"""		1075292	0					
ANR	1075787	Argument	space		1075292	1					
ANR	1075788	Identifier	space		1075292	0					
ANR	1075789	ExpressionStatement	free ( oldSpace )	221:3:5115:5130	1075292	12	True				
ANR	1075790	CallExpression	free ( oldSpace )		1075292	0					
ANR	1075791	Callee	free		1075292	0					
ANR	1075792	Identifier	free		1075292	0					
ANR	1075793	ArgumentList	oldSpace		1075292	1					
ANR	1075794	Argument	oldSpace		1075292	0					
ANR	1075795	Identifier	oldSpace		1075292	0					
ANR	1075796	BreakStatement	break ;	223:2:5138:5143	1075292	31	True				
ANR	1075797	Label	case 'v' :	224:1:5146:5154	1075292	32	True				
ANR	1075798	ExpressionStatement	verbose = true	225:2:5158:5172	1075292	33	True				
ANR	1075799	AssignmentExpression	verbose = true		1075292	0		=			
ANR	1075800	Identifier	verbose		1075292	0					
ANR	1075801	Identifier	true		1075292	1					
ANR	1075802	Statement	r_list_foreach	226:2:5176:5189	1075292	34	True				
ANR	1075803	Statement	(	226:17:5191:5191	1075292	35	True				
ANR	1075804	Statement	cfg	226:18:5192:5194	1075292	36	True				
ANR	1075805	Statement	->	226:21:5195:5196	1075292	37	True				
ANR	1075806	Statement	nodes	226:23:5197:5201	1075292	38	True				
ANR	1075807	Statement	","	226:28:5202:5202	1075292	39	True				
ANR	1075808	Statement	iter	226:30:5204:5207	1075292	40	True				
ANR	1075809	Statement	","	226:34:5208:5208	1075292	41	True				
ANR	1075810	Statement	node	226:36:5210:5213	1075292	42	True				
ANR	1075811	Statement	)	226:40:5214:5214	1075292	43	True				
ANR	1075812	CompoundStatement		90:42:1802:1802	1075292	44					
ANR	1075813	IfStatement	"if ( ! str || ( str && ( ! strncmp ( str , node -> name , len ) ) ) )"		1075292	0					
ANR	1075814	Condition	"! str || ( str && ( ! strncmp ( str , node -> name , len ) ) )"	227:7:5225:5274	1075292	0	True				
ANR	1075815	OrExpression	"! str || ( str && ( ! strncmp ( str , node -> name , len ) ) )"		1075292	0		||			
ANR	1075816	UnaryOperationExpression	! str		1075292	0					
ANR	1075817	UnaryOperator	!		1075292	0					
ANR	1075818	Identifier	str		1075292	1					
ANR	1075819	AndExpression	"str && ( ! strncmp ( str , node -> name , len ) )"		1075292	1		&&			
ANR	1075820	Identifier	str		1075292	0					
ANR	1075821	UnaryOperationExpression	"! strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075822	UnaryOperator	!		1075292	0					
ANR	1075823	CallExpression	"strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075824	Callee	strncmp		1075292	0					
ANR	1075825	Identifier	strncmp		1075292	0					
ANR	1075826	ArgumentList	str		1075292	1					
ANR	1075827	Argument	str		1075292	0					
ANR	1075828	Identifier	str		1075292	0					
ANR	1075829	Argument	node -> name		1075292	1					
ANR	1075830	PtrMemberAccess	node -> name		1075292	0					
ANR	1075831	Identifier	node		1075292	0					
ANR	1075832	Identifier	name		1075292	1					
ANR	1075833	Argument	len		1075292	2					
ANR	1075834	Identifier	len		1075292	0					
ANR	1075835	CompoundStatement		91:59:1863:1863	1075292	1					
ANR	1075836	ExpressionStatement	"config_print_node ( cfg , node , pfx , sfx , verbose , json )"	228:4:5283:5337	1075292	0	True				
ANR	1075837	CallExpression	"config_print_node ( cfg , node , pfx , sfx , verbose , json )"		1075292	0					
ANR	1075838	Callee	config_print_node		1075292	0					
ANR	1075839	Identifier	config_print_node		1075292	0					
ANR	1075840	ArgumentList	cfg		1075292	1					
ANR	1075841	Argument	cfg		1075292	0					
ANR	1075842	Identifier	cfg		1075292	0					
ANR	1075843	Argument	node		1075292	1					
ANR	1075844	Identifier	node		1075292	0					
ANR	1075845	Argument	pfx		1075292	2					
ANR	1075846	Identifier	pfx		1075292	0					
ANR	1075847	Argument	sfx		1075292	3					
ANR	1075848	Identifier	sfx		1075292	0					
ANR	1075849	Argument	verbose		1075292	4					
ANR	1075850	Identifier	verbose		1075292	0					
ANR	1075851	Argument	json		1075292	5					
ANR	1075852	Identifier	json		1075292	0					
ANR	1075853	BreakStatement	break ;	231:2:5350:5355	1075292	45	True				
ANR	1075854	Label	case 'q' :	232:1:5358:5366	1075292	46	True				
ANR	1075855	Statement	r_list_foreach	233:2:5370:5383	1075292	47	True				
ANR	1075856	Statement	(	233:17:5385:5385	1075292	48	True				
ANR	1075857	Statement	cfg	233:18:5386:5388	1075292	49	True				
ANR	1075858	Statement	->	233:21:5389:5390	1075292	50	True				
ANR	1075859	Statement	nodes	233:23:5391:5395	1075292	51	True				
ANR	1075860	Statement	","	233:28:5396:5396	1075292	52	True				
ANR	1075861	Statement	iter	233:30:5398:5401	1075292	53	True				
ANR	1075862	Statement	","	233:34:5402:5402	1075292	54	True				
ANR	1075863	Statement	node	233:36:5404:5407	1075292	55	True				
ANR	1075864	Statement	)	233:40:5408:5408	1075292	56	True				
ANR	1075865	CompoundStatement		97:42:1996:1996	1075292	57					
ANR	1075866	ExpressionStatement	"cfg -> cb_printf ( ""%s\\n"" , node -> name )"	234:3:5415:5450	1075292	0	True				
ANR	1075867	CallExpression	"cfg -> cb_printf ( ""%s\\n"" , node -> name )"		1075292	0					
ANR	1075868	Callee	cfg -> cb_printf		1075292	0					
ANR	1075869	PtrMemberAccess	cfg -> cb_printf		1075292	0					
ANR	1075870	Identifier	cfg		1075292	0					
ANR	1075871	Identifier	cb_printf		1075292	1					
ANR	1075872	ArgumentList	"""%s\\n"""		1075292	1					
ANR	1075873	Argument	"""%s\\n"""		1075292	0					
ANR	1075874	PrimaryExpression	"""%s\\n"""		1075292	0					
ANR	1075875	Argument	node -> name		1075292	1					
ANR	1075876	PtrMemberAccess	node -> name		1075292	0					
ANR	1075877	Identifier	node		1075292	0					
ANR	1075878	Identifier	name		1075292	1					
ANR	1075879	BreakStatement	break ;	236:2:5458:5463	1075292	58	True				
ANR	1075880	Label	case 'J' :	237:1:5466:5474	1075292	59	True				
ANR	1075881	ExpressionStatement	verbose = true	238:2:5478:5492	1075292	60	True				
ANR	1075882	AssignmentExpression	verbose = true		1075292	0		=			
ANR	1075883	Identifier	verbose		1075292	0					
ANR	1075884	Identifier	true		1075292	1					
ANR	1075885	Label	case 'j' :	240:1:5512:5520	1075292	61	True				
ANR	1075886	ExpressionStatement	isFirst = true	241:2:5524:5538	1075292	62	True				
ANR	1075887	AssignmentExpression	isFirst = true		1075292	0		=			
ANR	1075888	Identifier	isFirst		1075292	0					
ANR	1075889	Identifier	true		1075292	1					
ANR	1075890	IfStatement	if ( verbose )		1075292	63					
ANR	1075891	Condition	verbose	242:6:5546:5552	1075292	0	True				
ANR	1075892	Identifier	verbose		1075292	0					
ANR	1075893	CompoundStatement		106:15:2141:2141	1075292	1					
ANR	1075894	ExpressionStatement	"cfg -> cb_printf ( ""["" )"	243:3:5560:5580	1075292	0	True				
ANR	1075895	CallExpression	"cfg -> cb_printf ( ""["" )"		1075292	0					
ANR	1075896	Callee	cfg -> cb_printf		1075292	0					
ANR	1075897	PtrMemberAccess	cfg -> cb_printf		1075292	0					
ANR	1075898	Identifier	cfg		1075292	0					
ANR	1075899	Identifier	cb_printf		1075292	1					
ANR	1075900	ArgumentList	"""["""		1075292	1					
ANR	1075901	Argument	"""["""		1075292	0					
ANR	1075902	PrimaryExpression	"""["""		1075292	0					
ANR	1075903	ElseStatement	else		1075292	0					
ANR	1075904	CompoundStatement		108:9:2177:2177	1075292	0					
ANR	1075905	ExpressionStatement	"cfg -> cb_printf ( ""{"" )"	245:3:5596:5616	1075292	0	True				
ANR	1075906	CallExpression	"cfg -> cb_printf ( ""{"" )"		1075292	0					
ANR	1075907	Callee	cfg -> cb_printf		1075292	0					
ANR	1075908	PtrMemberAccess	cfg -> cb_printf		1075292	0					
ANR	1075909	Identifier	cfg		1075292	0					
ANR	1075910	Identifier	cb_printf		1075292	1					
ANR	1075911	ArgumentList	"""{"""		1075292	1					
ANR	1075912	Argument	"""{"""		1075292	0					
ANR	1075913	PrimaryExpression	"""{"""		1075292	0					
ANR	1075914	Statement	r_list_foreach	247:2:5624:5637	1075292	64	True				
ANR	1075915	Statement	(	247:17:5639:5639	1075292	65	True				
ANR	1075916	Statement	cfg	247:18:5640:5642	1075292	66	True				
ANR	1075917	Statement	->	247:21:5643:5644	1075292	67	True				
ANR	1075918	Statement	nodes	247:23:5645:5649	1075292	68	True				
ANR	1075919	Statement	","	247:28:5650:5650	1075292	69	True				
ANR	1075920	Statement	iter	247:30:5652:5655	1075292	70	True				
ANR	1075921	Statement	","	247:34:5656:5656	1075292	71	True				
ANR	1075922	Statement	node	247:36:5658:5661	1075292	72	True				
ANR	1075923	Statement	)	247:40:5662:5662	1075292	73	True				
ANR	1075924	CompoundStatement		111:42:2250:2250	1075292	74					
ANR	1075925	IfStatement	"if ( ! str || ( str && ( ! strncmp ( str , node -> name , len ) ) ) )"		1075292	0					
ANR	1075926	Condition	"! str || ( str && ( ! strncmp ( str , node -> name , len ) ) )"	248:7:5673:5722	1075292	0	True				
ANR	1075927	OrExpression	"! str || ( str && ( ! strncmp ( str , node -> name , len ) ) )"		1075292	0		||			
ANR	1075928	UnaryOperationExpression	! str		1075292	0					
ANR	1075929	UnaryOperator	!		1075292	0					
ANR	1075930	Identifier	str		1075292	1					
ANR	1075931	AndExpression	"str && ( ! strncmp ( str , node -> name , len ) )"		1075292	1		&&			
ANR	1075932	Identifier	str		1075292	0					
ANR	1075933	UnaryOperationExpression	"! strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075934	UnaryOperator	!		1075292	0					
ANR	1075935	CallExpression	"strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075936	Callee	strncmp		1075292	0					
ANR	1075937	Identifier	strncmp		1075292	0					
ANR	1075938	ArgumentList	str		1075292	1					
ANR	1075939	Argument	str		1075292	0					
ANR	1075940	Identifier	str		1075292	0					
ANR	1075941	Argument	node -> name		1075292	1					
ANR	1075942	PtrMemberAccess	node -> name		1075292	0					
ANR	1075943	Identifier	node		1075292	0					
ANR	1075944	Identifier	name		1075292	1					
ANR	1075945	Argument	len		1075292	2					
ANR	1075946	Identifier	len		1075292	0					
ANR	1075947	CompoundStatement		112:59:2311:2311	1075292	1					
ANR	1075948	IfStatement	"if ( ! str || ! strncmp ( str , node -> name , len ) )"		1075292	0					
ANR	1075949	Condition	"! str || ! strncmp ( str , node -> name , len )"	249:8:5735:5773	1075292	0	True				
ANR	1075950	OrExpression	"! str || ! strncmp ( str , node -> name , len )"		1075292	0		||			
ANR	1075951	UnaryOperationExpression	! str		1075292	0					
ANR	1075952	UnaryOperator	!		1075292	0					
ANR	1075953	Identifier	str		1075292	1					
ANR	1075954	UnaryOperationExpression	"! strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075955	UnaryOperator	!		1075292	0					
ANR	1075956	CallExpression	"strncmp ( str , node -> name , len )"		1075292	1					
ANR	1075957	Callee	strncmp		1075292	0					
ANR	1075958	Identifier	strncmp		1075292	0					
ANR	1075959	ArgumentList	str		1075292	1					
ANR	1075960	Argument	str		1075292	0					
ANR	1075961	Identifier	str		1075292	0					
ANR	1075962	Argument	node -> name		1075292	1					
ANR	1075963	PtrMemberAccess	node -> name		1075292	0					
ANR	1075964	Identifier	node		1075292	0					
ANR	1075965	Identifier	name		1075292	1					
ANR	1075966	Argument	len		1075292	2					
ANR	1075967	Identifier	len		1075292	0					
ANR	1075968	CompoundStatement		113:49:2362:2362	1075292	1					
ANR	1075969	IfStatement	if ( isFirst )		1075292	0					
ANR	1075970	Condition	isFirst	250:9:5787:5793	1075292	0	True				
ANR	1075971	Identifier	isFirst		1075292	0					
ANR	1075972	CompoundStatement		114:18:2382:2382	1075292	1					
ANR	1075973	ExpressionStatement	isFirst = false	251:6:5804:5819	1075292	0	True				
ANR	1075974	AssignmentExpression	isFirst = false		1075292	0		=			
ANR	1075975	Identifier	isFirst		1075292	0					
ANR	1075976	Identifier	false		1075292	1					
ANR	1075977	ElseStatement	else		1075292	0					
ANR	1075978	CompoundStatement		116:12:2419:2419	1075292	0					
ANR	1075979	ExpressionStatement	"cfg -> cb_printf ( "","" )"	253:6:5841:5861	1075292	0	True				
ANR	1075980	CallExpression	"cfg -> cb_printf ( "","" )"		1075292	0					
ANR	1075981	Callee	cfg -> cb_printf		1075292	0					
ANR	1075982	PtrMemberAccess	cfg -> cb_printf		1075292	0					
ANR	1075983	Identifier	cfg		1075292	0					
ANR	1075984	Identifier	cb_printf		1075292	1					
ANR	1075985	ArgumentList	""","""		1075292	1					
ANR	1075986	Argument	""","""		1075292	0					
ANR	1075987	PrimaryExpression	""","""		1075292	0					
ANR	1075988	ExpressionStatement	"config_print_node ( cfg , node , pfx , sfx , verbose , true )"	255:5:5875:5929	1075292	1	True				
ANR	1075989	CallExpression	"config_print_node ( cfg , node , pfx , sfx , verbose , true )"		1075292	0					
ANR	1075990	Callee	config_print_node		1075292	0					
ANR	1075991	Identifier	config_print_node		1075292	0					
ANR	1075992	ArgumentList	cfg		1075292	1					
ANR	1075993	Argument	cfg		1075292	0					
ANR	1075994	Identifier	cfg		1075292	0					
ANR	1075995	Argument	node		1075292	1					
ANR	1075996	Identifier	node		1075292	0					
ANR	1075997	Argument	pfx		1075292	2					
ANR	1075998	Identifier	pfx		1075292	0					
ANR	1075999	Argument	sfx		1075292	3					
ANR	1076000	Identifier	sfx		1075292	0					
ANR	1076001	Argument	verbose		1075292	4					
ANR	1076002	Identifier	verbose		1075292	0					
ANR	1076003	Argument	true		1075292	5					
ANR	1076004	Identifier	true		1075292	0					
ANR	1076005	IfStatement	if ( verbose )		1075292	75					
ANR	1076006	Condition	verbose	259:6:5952:5958	1075292	0	True				
ANR	1076007	Identifier	verbose		1075292	0					
ANR	1076008	CompoundStatement		123:15:2547:2547	1075292	1					
ANR	1076009	ExpressionStatement	"cfg -> cb_printf ( ""]\\n"" )"	260:3:5966:5988	1075292	0	True				
ANR	1076010	CallExpression	"cfg -> cb_printf ( ""]\\n"" )"		1075292	0					
ANR	1076011	Callee	cfg -> cb_printf		1075292	0					
ANR	1076012	PtrMemberAccess	cfg -> cb_printf		1075292	0					
ANR	1076013	Identifier	cfg		1075292	0					
ANR	1076014	Identifier	cb_printf		1075292	1					
ANR	1076015	ArgumentList	"""]\\n"""		1075292	1					
ANR	1076016	Argument	"""]\\n"""		1075292	0					
ANR	1076017	PrimaryExpression	"""]\\n"""		1075292	0					
ANR	1076018	ElseStatement	else		1075292	0					
ANR	1076019	CompoundStatement		125:9:2585:2585	1075292	0					
ANR	1076020	ExpressionStatement	"cfg -> cb_printf ( ""}\\n"" )"	262:3:6004:6026	1075292	0	True				
ANR	1076021	CallExpression	"cfg -> cb_printf ( ""}\\n"" )"		1075292	0					
ANR	1076022	Callee	cfg -> cb_printf		1075292	0					
ANR	1076023	PtrMemberAccess	cfg -> cb_printf		1075292	0					
ANR	1076024	Identifier	cfg		1075292	0					
ANR	1076025	Identifier	cb_printf		1075292	1					
ANR	1076026	ArgumentList	"""}\\n"""		1075292	1					
ANR	1076027	Argument	"""}\\n"""		1075292	0					
ANR	1076028	PrimaryExpression	"""}\\n"""		1075292	0					
ANR	1076029	BreakStatement	break ;	264:2:6034:6039	1075292	76	True				
ANR	1076030	ReturnType	R_API void		1075292	1					
ANR	1076031	Identifier	r_config_list		1075292	2					
ANR	1076032	ParameterList	"RConfig * cfg , const char * str , int rad"		1075292	3					
ANR	1076033	Parameter	RConfig * cfg	137:25:3373:3384	1075292	0	True				
ANR	1076034	ParameterType	RConfig *		1075292	0					
ANR	1076035	Identifier	cfg		1075292	1					
ANR	1076036	Parameter	const char * str	137:39:3387:3401	1075292	1	True				
ANR	1076037	ParameterType	const char *		1075292	0					
ANR	1076038	Identifier	str		1075292	1					
ANR	1076039	Parameter	int rad	137:56:3404:3410	1075292	2	True				
ANR	1076040	ParameterType	int		1075292	0					
ANR	1076041	Identifier	rad		1075292	1					
ANR	1076042	CFGEntryNode	ENTRY		1075292		True				
ANR	1076043	CFGExitNode	EXIT		1075292		True				
ANR	1076044	CFGErrorNode	ERROR		1075292		True				
ANR	1076045	Symbol	pfx		1075292						
ANR	1076046	Symbol	sfx		1075292						
ANR	1076047	Symbol	node -> desc		1075292						
ANR	1076048	Symbol	dot		1075292						
ANR	1076049	Symbol	strchr		1075292						
ANR	1076050	Symbol	* dot		1075292						
ANR	1076051	Symbol	space		1075292						
ANR	1076052	Symbol	isFirst		1075292						
ANR	1076053	Symbol	strlen		1075292						
ANR	1076054	Symbol	strncmp		1075292						
ANR	1076055	Symbol	rad		1075292						
ANR	1076056	Symbol	len		1075292						
ANR	1076057	Symbol	json		1075292						
ANR	1076058	Symbol	* node		1075292						
ANR	1076059	Symbol	* str		1075292						
ANR	1076060	Symbol	IS_NULLSTR		1075292						
ANR	1076061	Symbol	strcmp		1075292						
ANR	1076062	Symbol	NULL		1075292						
ANR	1076063	Symbol	cfg		1075292						
ANR	1076064	Symbol	false		1075292						
ANR	1076065	Symbol	iter		1075292						
ANR	1076066	Symbol	verbose		1075292						
ANR	1076067	Symbol	str		1075292						
ANR	1076068	Symbol	node		1075292						
ANR	1076069	Symbol	oldSpace		1075292						
ANR	1076070	Symbol	node -> name		1075292						
ANR	1076071	Symbol	r_str_trim_ro		1075292						
ANR	1076072	Symbol	true		1075292						
ANR	1076073	Symbol	strdup		1075292						
ANR	1076074	Function	r_config_node_get	268:0:6047:6203							
ANR	1076075	FunctionDef	"r_config_node_get (RConfig * cfg , const char * name)"		1076074	0					
ANR	1076076	CompoundStatement		268:69:6116:6203	1076074	0					
ANR	1076077	ExpressionStatement	"r_return_val_if_fail ( cfg && name , NULL )"	269:1:6119:6159	1076074	0	True				
ANR	1076078	CallExpression	"r_return_val_if_fail ( cfg && name , NULL )"		1076074	0					
ANR	1076079	Callee	r_return_val_if_fail		1076074	0					
ANR	1076080	Identifier	r_return_val_if_fail		1076074	0					
ANR	1076081	ArgumentList	cfg && name		1076074	1					
ANR	1076082	Argument	cfg && name		1076074	0					
ANR	1076083	AndExpression	cfg && name		1076074	0		&&			
ANR	1076084	Identifier	cfg		1076074	0					
ANR	1076085	Identifier	name		1076074	1					
ANR	1076086	Argument	NULL		1076074	1					
ANR	1076087	Identifier	NULL		1076074	0					
ANR	1076088	ReturnStatement	"return ht_pp_find ( cfg -> ht , name , NULL ) ;"	270:1:6162:6201	1076074	1	True				
ANR	1076089	CallExpression	"ht_pp_find ( cfg -> ht , name , NULL )"		1076074	0					
ANR	1076090	Callee	ht_pp_find		1076074	0					
ANR	1076091	Identifier	ht_pp_find		1076074	0					
ANR	1076092	ArgumentList	cfg -> ht		1076074	1					
ANR	1076093	Argument	cfg -> ht		1076074	0					
ANR	1076094	PtrMemberAccess	cfg -> ht		1076074	0					
ANR	1076095	Identifier	cfg		1076074	0					
ANR	1076096	Identifier	ht		1076074	1					
ANR	1076097	Argument	name		1076074	1					
ANR	1076098	Identifier	name		1076074	0					
ANR	1076099	Argument	NULL		1076074	2					
ANR	1076100	Identifier	NULL		1076074	0					
ANR	1076101	ReturnType	R_API RConfigNode *		1076074	1					
ANR	1076102	Identifier	r_config_node_get		1076074	2					
ANR	1076103	ParameterList	"RConfig * cfg , const char * name"		1076074	3					
ANR	1076104	Parameter	RConfig * cfg	268:37:6084:6095	1076074	0	True				
ANR	1076105	ParameterType	RConfig *		1076074	0					
ANR	1076106	Identifier	cfg		1076074	1					
ANR	1076107	Parameter	const char * name	268:51:6098:6113	1076074	1	True				
ANR	1076108	ParameterType	const char *		1076074	0					
ANR	1076109	Identifier	name		1076074	1					
ANR	1076110	CFGEntryNode	ENTRY		1076074		True				
ANR	1076111	CFGExitNode	EXIT		1076074		True				
ANR	1076112	Symbol	* cfg		1076074						
ANR	1076113	Symbol	NULL		1076074						
ANR	1076114	Symbol	cfg		1076074						
ANR	1076115	Symbol	name		1076074						
ANR	1076116	Symbol	cfg -> ht		1076074						
ANR	1076117	Symbol	ht_pp_find		1076074						
ANR	1076118	Function	r_config_set_getter	273:0:6206:6408							
ANR	1076119	FunctionDef	"r_config_set_getter (RConfig * cfg , const char * key , RConfigCallback cb)"		1076118	0					
ANR	1076120	CompoundStatement		273:82:6288:6408	1076118	0					
ANR	1076121	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , key ) ;"	274:1:6291:6339	1076118	0	True				
ANR	1076122	IdentifierDecl	"* node = r_config_node_get ( cfg , key )"		1076118	0					
ANR	1076123	IdentifierDeclType	RConfigNode *		1076118	0					
ANR	1076124	Identifier	node		1076118	1					
ANR	1076125	AssignmentExpression	"* node = r_config_node_get ( cfg , key )"		1076118	2		=			
ANR	1076126	Identifier	node		1076118	0					
ANR	1076127	CallExpression	"r_config_node_get ( cfg , key )"		1076118	1					
ANR	1076128	Callee	r_config_node_get		1076118	0					
ANR	1076129	Identifier	r_config_node_get		1076118	0					
ANR	1076130	ArgumentList	cfg		1076118	1					
ANR	1076131	Argument	cfg		1076118	0					
ANR	1076132	Identifier	cfg		1076118	0					
ANR	1076133	Argument	key		1076118	1					
ANR	1076134	Identifier	key		1076118	0					
ANR	1076135	IfStatement	if ( node )		1076118	1					
ANR	1076136	Condition	node	275:5:6346:6349	1076118	0	True				
ANR	1076137	Identifier	node		1076118	0					
ANR	1076138	CompoundStatement		3:11:63:63	1076118	1					
ANR	1076139	ExpressionStatement	node -> getter = cb	276:2:6356:6373	1076118	0	True				
ANR	1076140	AssignmentExpression	node -> getter = cb		1076118	0		=			
ANR	1076141	PtrMemberAccess	node -> getter		1076118	0					
ANR	1076142	Identifier	node		1076118	0					
ANR	1076143	Identifier	getter		1076118	1					
ANR	1076144	Identifier	cb		1076118	1					
ANR	1076145	ReturnStatement	return true ;	277:2:6377:6388	1076118	1	True				
ANR	1076146	Identifier	true		1076118	0					
ANR	1076147	ReturnStatement	return false ;	279:1:6394:6406	1076118	2	True				
ANR	1076148	Identifier	false		1076118	0					
ANR	1076149	ReturnType	R_API bool		1076118	1					
ANR	1076150	Identifier	r_config_set_getter		1076118	2					
ANR	1076151	ParameterList	"RConfig * cfg , const char * key , RConfigCallback cb"		1076118	3					
ANR	1076152	Parameter	RConfig * cfg	273:31:6237:6248	1076118	0	True				
ANR	1076153	ParameterType	RConfig *		1076118	0					
ANR	1076154	Identifier	cfg		1076118	1					
ANR	1076155	Parameter	const char * key	273:45:6251:6265	1076118	1	True				
ANR	1076156	ParameterType	const char *		1076118	0					
ANR	1076157	Identifier	key		1076118	1					
ANR	1076158	Parameter	RConfigCallback cb	273:62:6268:6285	1076118	2	True				
ANR	1076159	ParameterType	RConfigCallback		1076118	0					
ANR	1076160	Identifier	cb		1076118	1					
ANR	1076161	CFGEntryNode	ENTRY		1076118		True				
ANR	1076162	CFGExitNode	EXIT		1076118		True				
ANR	1076163	Symbol	node		1076118						
ANR	1076164	Symbol	cfg		1076118						
ANR	1076165	Symbol	node -> getter		1076118						
ANR	1076166	Symbol	true		1076118						
ANR	1076167	Symbol	false		1076118						
ANR	1076168	Symbol	* node		1076118						
ANR	1076169	Symbol	r_config_node_get		1076118						
ANR	1076170	Symbol	key		1076118						
ANR	1076171	Symbol	cb		1076118						
ANR	1076172	Function	r_config_set_setter	282:0:6411:6613							
ANR	1076173	FunctionDef	"r_config_set_setter (RConfig * cfg , const char * key , RConfigCallback cb)"		1076172	0					
ANR	1076174	CompoundStatement		282:82:6493:6613	1076172	0					
ANR	1076175	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , key ) ;"	283:1:6496:6544	1076172	0	True				
ANR	1076176	IdentifierDecl	"* node = r_config_node_get ( cfg , key )"		1076172	0					
ANR	1076177	IdentifierDeclType	RConfigNode *		1076172	0					
ANR	1076178	Identifier	node		1076172	1					
ANR	1076179	AssignmentExpression	"* node = r_config_node_get ( cfg , key )"		1076172	2		=			
ANR	1076180	Identifier	node		1076172	0					
ANR	1076181	CallExpression	"r_config_node_get ( cfg , key )"		1076172	1					
ANR	1076182	Callee	r_config_node_get		1076172	0					
ANR	1076183	Identifier	r_config_node_get		1076172	0					
ANR	1076184	ArgumentList	cfg		1076172	1					
ANR	1076185	Argument	cfg		1076172	0					
ANR	1076186	Identifier	cfg		1076172	0					
ANR	1076187	Argument	key		1076172	1					
ANR	1076188	Identifier	key		1076172	0					
ANR	1076189	IfStatement	if ( node )		1076172	1					
ANR	1076190	Condition	node	284:5:6551:6554	1076172	0	True				
ANR	1076191	Identifier	node		1076172	0					
ANR	1076192	CompoundStatement		3:11:63:63	1076172	1					
ANR	1076193	ExpressionStatement	node -> setter = cb	285:2:6561:6578	1076172	0	True				
ANR	1076194	AssignmentExpression	node -> setter = cb		1076172	0		=			
ANR	1076195	PtrMemberAccess	node -> setter		1076172	0					
ANR	1076196	Identifier	node		1076172	0					
ANR	1076197	Identifier	setter		1076172	1					
ANR	1076198	Identifier	cb		1076172	1					
ANR	1076199	ReturnStatement	return true ;	286:2:6582:6593	1076172	1	True				
ANR	1076200	Identifier	true		1076172	0					
ANR	1076201	ReturnStatement	return false ;	288:1:6599:6611	1076172	2	True				
ANR	1076202	Identifier	false		1076172	0					
ANR	1076203	ReturnType	R_API bool		1076172	1					
ANR	1076204	Identifier	r_config_set_setter		1076172	2					
ANR	1076205	ParameterList	"RConfig * cfg , const char * key , RConfigCallback cb"		1076172	3					
ANR	1076206	Parameter	RConfig * cfg	282:31:6442:6453	1076172	0	True				
ANR	1076207	ParameterType	RConfig *		1076172	0					
ANR	1076208	Identifier	cfg		1076172	1					
ANR	1076209	Parameter	const char * key	282:45:6456:6470	1076172	1	True				
ANR	1076210	ParameterType	const char *		1076172	0					
ANR	1076211	Identifier	key		1076172	1					
ANR	1076212	Parameter	RConfigCallback cb	282:62:6473:6490	1076172	2	True				
ANR	1076213	ParameterType	RConfigCallback		1076172	0					
ANR	1076214	Identifier	cb		1076172	1					
ANR	1076215	CFGEntryNode	ENTRY		1076172		True				
ANR	1076216	CFGExitNode	EXIT		1076172		True				
ANR	1076217	Symbol	node		1076172						
ANR	1076218	Symbol	node -> setter		1076172						
ANR	1076219	Symbol	cfg		1076172						
ANR	1076220	Symbol	true		1076172						
ANR	1076221	Symbol	false		1076172						
ANR	1076222	Symbol	* node		1076172						
ANR	1076223	Symbol	r_config_node_get		1076172						
ANR	1076224	Symbol	key		1076172						
ANR	1076225	Symbol	cb		1076172						
ANR	1076226	Function	is_bool	292:0:6617:6721							
ANR	1076227	FunctionDef	is_bool (const char * s)		1076226	0					
ANR	1076228	CompoundStatement		292:35:6652:6721	1076226	0					
ANR	1076229	ReturnStatement	"return ! r_str_casecmp ( ""true"" , s ) || ! r_str_casecmp ( ""false"" , s ) ;"	293:1:6655:6719	1076226	0	True				
ANR	1076230	OrExpression	"! r_str_casecmp ( ""true"" , s ) || ! r_str_casecmp ( ""false"" , s )"		1076226	0		||			
ANR	1076231	UnaryOperationExpression	"! r_str_casecmp ( ""true"" , s )"		1076226	0					
ANR	1076232	UnaryOperator	!		1076226	0					
ANR	1076233	CallExpression	"r_str_casecmp ( ""true"" , s )"		1076226	1					
ANR	1076234	Callee	r_str_casecmp		1076226	0					
ANR	1076235	Identifier	r_str_casecmp		1076226	0					
ANR	1076236	ArgumentList	"""true"""		1076226	1					
ANR	1076237	Argument	"""true"""		1076226	0					
ANR	1076238	PrimaryExpression	"""true"""		1076226	0					
ANR	1076239	Argument	s		1076226	1					
ANR	1076240	Identifier	s		1076226	0					
ANR	1076241	UnaryOperationExpression	"! r_str_casecmp ( ""false"" , s )"		1076226	1					
ANR	1076242	UnaryOperator	!		1076226	0					
ANR	1076243	CallExpression	"r_str_casecmp ( ""false"" , s )"		1076226	1					
ANR	1076244	Callee	r_str_casecmp		1076226	0					
ANR	1076245	Identifier	r_str_casecmp		1076226	0					
ANR	1076246	ArgumentList	"""false"""		1076226	1					
ANR	1076247	Argument	"""false"""		1076226	0					
ANR	1076248	PrimaryExpression	"""false"""		1076226	0					
ANR	1076249	Argument	s		1076226	1					
ANR	1076250	Identifier	s		1076226	0					
ANR	1076251	ReturnType	static bool		1076226	1					
ANR	1076252	Identifier	is_bool		1076226	2					
ANR	1076253	ParameterList	const char * s		1076226	3					
ANR	1076254	Parameter	const char * s	292:20:6637:6649	1076226	0	True				
ANR	1076255	ParameterType	const char *		1076226	0					
ANR	1076256	Identifier	s		1076226	1					
ANR	1076257	CFGEntryNode	ENTRY		1076226		True				
ANR	1076258	CFGExitNode	EXIT		1076226		True				
ANR	1076259	Symbol	s		1076226						
ANR	1076260	Symbol	r_str_casecmp		1076226						
ANR	1076261	Function	r_config_get	296:6:6730:7206							
ANR	1076262	FunctionDef	"r_config_get (RConfig * cfg , const char * name)"		1076261	0					
ANR	1076263	CompoundStatement		296:63:6787:7206	1076261	0					
ANR	1076264	ExpressionStatement	"r_return_val_if_fail ( cfg && name , NULL )"	297:1:6790:6830	1076261	0	True				
ANR	1076265	CallExpression	"r_return_val_if_fail ( cfg && name , NULL )"		1076261	0					
ANR	1076266	Callee	r_return_val_if_fail		1076261	0					
ANR	1076267	Identifier	r_return_val_if_fail		1076261	0					
ANR	1076268	ArgumentList	cfg && name		1076261	1					
ANR	1076269	Argument	cfg && name		1076261	0					
ANR	1076270	AndExpression	cfg && name		1076261	0		&&			
ANR	1076271	Identifier	cfg		1076261	0					
ANR	1076272	Identifier	name		1076261	1					
ANR	1076273	Argument	NULL		1076261	1					
ANR	1076274	Identifier	NULL		1076261	0					
ANR	1076275	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , name ) ;"	298:1:6833:6882	1076261	1	True				
ANR	1076276	IdentifierDecl	"* node = r_config_node_get ( cfg , name )"		1076261	0					
ANR	1076277	IdentifierDeclType	RConfigNode *		1076261	0					
ANR	1076278	Identifier	node		1076261	1					
ANR	1076279	AssignmentExpression	"* node = r_config_node_get ( cfg , name )"		1076261	2		=			
ANR	1076280	Identifier	node		1076261	0					
ANR	1076281	CallExpression	"r_config_node_get ( cfg , name )"		1076261	1					
ANR	1076282	Callee	r_config_node_get		1076261	0					
ANR	1076283	Identifier	r_config_node_get		1076261	0					
ANR	1076284	ArgumentList	cfg		1076261	1					
ANR	1076285	Argument	cfg		1076261	0					
ANR	1076286	Identifier	cfg		1076261	0					
ANR	1076287	Argument	name		1076261	1					
ANR	1076288	Identifier	name		1076261	0					
ANR	1076289	IfStatement	if ( node )		1076261	2					
ANR	1076290	Condition	node	299:5:6889:6892	1076261	0	True				
ANR	1076291	Identifier	node		1076261	0					
ANR	1076292	CompoundStatement		4:11:107:107	1076261	1					
ANR	1076293	IfStatement	if ( node -> getter )		1076261	0					
ANR	1076294	Condition	node -> getter	300:6:6903:6914	1076261	0	True				
ANR	1076295	PtrMemberAccess	node -> getter		1076261	0					
ANR	1076296	Identifier	node		1076261	0					
ANR	1076297	Identifier	getter		1076261	1					
ANR	1076298	CompoundStatement		5:20:129:129	1076261	1					
ANR	1076299	ExpressionStatement	"node -> getter ( cfg -> user , node )"	301:3:6922:6952	1076261	0	True				
ANR	1076300	CallExpression	"node -> getter ( cfg -> user , node )"		1076261	0					
ANR	1076301	Callee	node -> getter		1076261	0					
ANR	1076302	PtrMemberAccess	node -> getter		1076261	0					
ANR	1076303	Identifier	node		1076261	0					
ANR	1076304	Identifier	getter		1076261	1					
ANR	1076305	ArgumentList	cfg -> user		1076261	1					
ANR	1076306	Argument	cfg -> user		1076261	0					
ANR	1076307	PtrMemberAccess	cfg -> user		1076261	0					
ANR	1076308	Identifier	cfg		1076261	0					
ANR	1076309	Identifier	user		1076261	1					
ANR	1076310	Argument	node		1076261	1					
ANR	1076311	Identifier	node		1076261	0					
ANR	1076312	ExpressionStatement	cfg -> last_notfound = 0	303:2:6960:6982	1076261	1	True				
ANR	1076313	AssignmentExpression	cfg -> last_notfound = 0		1076261	0		=			
ANR	1076314	PtrMemberAccess	cfg -> last_notfound		1076261	0					
ANR	1076315	Identifier	cfg		1076261	0					
ANR	1076316	Identifier	last_notfound		1076261	1					
ANR	1076317	PrimaryExpression	0		1076261	1					
ANR	1076318	IfStatement	if ( node -> flags & CN_BOOL )		1076261	2					
ANR	1076319	Condition	node -> flags & CN_BOOL	304:6:6990:7010	1076261	0	True				
ANR	1076320	BitAndExpression	node -> flags & CN_BOOL		1076261	0		&			
ANR	1076321	PtrMemberAccess	node -> flags		1076261	0					
ANR	1076322	Identifier	node		1076261	0					
ANR	1076323	Identifier	flags		1076261	1					
ANR	1076324	Identifier	CN_BOOL		1076261	1					
ANR	1076325	CompoundStatement		9:29:225:225	1076261	1					
ANR	1076326	ReturnStatement	return r_str_bool ( r_str_is_true ( node -> value ) ) ;	305:3:7018:7065	1076261	0	True				
ANR	1076327	CallExpression	r_str_bool ( r_str_is_true ( node -> value ) )		1076261	0					
ANR	1076328	Callee	r_str_bool		1076261	0					
ANR	1076329	Identifier	r_str_bool		1076261	0					
ANR	1076330	ArgumentList	r_str_is_true ( node -> value )		1076261	1					
ANR	1076331	Argument	r_str_is_true ( node -> value )		1076261	0					
ANR	1076332	CallExpression	r_str_is_true ( node -> value )		1076261	0					
ANR	1076333	Callee	r_str_is_true		1076261	0					
ANR	1076334	Identifier	r_str_is_true		1076261	0					
ANR	1076335	ArgumentList	node -> value		1076261	1					
ANR	1076336	Argument	node -> value		1076261	0					
ANR	1076337	PtrMemberAccess	node -> value		1076261	0					
ANR	1076338	Identifier	node		1076261	0					
ANR	1076339	Identifier	value		1076261	1					
ANR	1076340	ReturnStatement	return node -> value ;	307:2:7073:7091	1076261	3	True				
ANR	1076341	PtrMemberAccess	node -> value		1076261	0					
ANR	1076342	Identifier	node		1076261	0					
ANR	1076343	Identifier	value		1076261	1					
ANR	1076344	ElseStatement	else		1076261	0					
ANR	1076345	CompoundStatement		13:8:313:313	1076261	0					
ANR	1076346	ExpressionStatement	"eprintf ( ""r_config_get: variable '%s' not found\\n"" , name )"	309:2:7105:7162	1076261	0	True				
ANR	1076347	CallExpression	"eprintf ( ""r_config_get: variable '%s' not found\\n"" , name )"		1076261	0					
ANR	1076348	Callee	eprintf		1076261	0					
ANR	1076349	Identifier	eprintf		1076261	0					
ANR	1076350	ArgumentList	"""r_config_get: variable '%s' not found\\n"""		1076261	1					
ANR	1076351	Argument	"""r_config_get: variable '%s' not found\\n"""		1076261	0					
ANR	1076352	PrimaryExpression	"""r_config_get: variable '%s' not found\\n"""		1076261	0					
ANR	1076353	Argument	name		1076261	1					
ANR	1076354	Identifier	name		1076261	0					
ANR	1076355	ExpressionStatement	cfg -> last_notfound = 1	311:1:7168:7190	1076261	3	True				
ANR	1076356	AssignmentExpression	cfg -> last_notfound = 1		1076261	0		=			
ANR	1076357	PtrMemberAccess	cfg -> last_notfound		1076261	0					
ANR	1076358	Identifier	cfg		1076261	0					
ANR	1076359	Identifier	last_notfound		1076261	1					
ANR	1076360	PrimaryExpression	1		1076261	1					
ANR	1076361	ReturnStatement	return NULL ;	312:1:7193:7204	1076261	4	True				
ANR	1076362	Identifier	NULL		1076261	0					
ANR	1076363	ReturnType	const char *		1076261	1					
ANR	1076364	Identifier	r_config_get		1076261	2					
ANR	1076365	ParameterList	"RConfig * cfg , const char * name"		1076261	3					
ANR	1076366	Parameter	RConfig * cfg	296:31:6755:6766	1076261	0	True				
ANR	1076367	ParameterType	RConfig *		1076261	0					
ANR	1076368	Identifier	cfg		1076261	1					
ANR	1076369	Parameter	const char * name	296:45:6769:6784	1076261	1	True				
ANR	1076370	ParameterType	const char *		1076261	0					
ANR	1076371	Identifier	name		1076261	1					
ANR	1076372	CFGEntryNode	ENTRY		1076261		True				
ANR	1076373	CFGExitNode	EXIT		1076261		True				
ANR	1076374	Symbol	r_str_bool		1076261						
ANR	1076375	Symbol	NULL		1076261						
ANR	1076376	Symbol	cfg		1076261						
ANR	1076377	Symbol	node -> flags		1076261						
ANR	1076378	Symbol	r_str_is_true		1076261						
ANR	1076379	Symbol	CN_BOOL		1076261						
ANR	1076380	Symbol	node -> value		1076261						
ANR	1076381	Symbol	node		1076261						
ANR	1076382	Symbol	* cfg		1076261						
ANR	1076383	Symbol	node -> getter		1076261						
ANR	1076384	Symbol	name		1076261						
ANR	1076385	Symbol	* node		1076261						
ANR	1076386	Symbol	cfg -> last_notfound		1076261						
ANR	1076387	Symbol	r_config_node_get		1076261						
ANR	1076388	Symbol	cfg -> user		1076261						
ANR	1076389	Function	r_config_toggle	315:0:7209:7445							
ANR	1076390	FunctionDef	"r_config_toggle (RConfig * cfg , const char * name)"		1076389	0					
ANR	1076391	CompoundStatement		315:59:7268:7445	1076389	0					
ANR	1076392	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , name ) ;"	316:1:7271:7320	1076389	0	True				
ANR	1076393	IdentifierDecl	"* node = r_config_node_get ( cfg , name )"		1076389	0					
ANR	1076394	IdentifierDeclType	RConfigNode *		1076389	0					
ANR	1076395	Identifier	node		1076389	1					
ANR	1076396	AssignmentExpression	"* node = r_config_node_get ( cfg , name )"		1076389	2		=			
ANR	1076397	Identifier	node		1076389	0					
ANR	1076398	CallExpression	"r_config_node_get ( cfg , name )"		1076389	1					
ANR	1076399	Callee	r_config_node_get		1076389	0					
ANR	1076400	Identifier	r_config_node_get		1076389	0					
ANR	1076401	ArgumentList	cfg		1076389	1					
ANR	1076402	Argument	cfg		1076389	0					
ANR	1076403	Identifier	cfg		1076389	0					
ANR	1076404	Argument	name		1076389	1					
ANR	1076405	Identifier	name		1076389	0					
ANR	1076406	IfStatement	if ( node && node -> flags & CN_BOOL )		1076389	1					
ANR	1076407	Condition	node && node -> flags & CN_BOOL	317:5:7327:7355	1076389	0	True				
ANR	1076408	AndExpression	node && node -> flags & CN_BOOL		1076389	0		&&			
ANR	1076409	Identifier	node		1076389	0					
ANR	1076410	BitAndExpression	node -> flags & CN_BOOL		1076389	1		&			
ANR	1076411	PtrMemberAccess	node -> flags		1076389	0					
ANR	1076412	Identifier	node		1076389	0					
ANR	1076413	Identifier	flags		1076389	1					
ANR	1076414	Identifier	CN_BOOL		1076389	1					
ANR	1076415	CompoundStatement		3:36:89:89	1076389	1					
ANR	1076416	ExpressionStatement	"( void ) r_config_set_i ( cfg , name , ! node -> i_value )"	318:2:7362:7410	1076389	0	True				
ANR	1076417	CastExpression	"( void ) r_config_set_i ( cfg , name , ! node -> i_value )"		1076389	0					
ANR	1076418	CastTarget	void		1076389	0					
ANR	1076419	CallExpression	"r_config_set_i ( cfg , name , ! node -> i_value )"		1076389	1					
ANR	1076420	Callee	r_config_set_i		1076389	0					
ANR	1076421	Identifier	r_config_set_i		1076389	0					
ANR	1076422	ArgumentList	cfg		1076389	1					
ANR	1076423	Argument	cfg		1076389	0					
ANR	1076424	Identifier	cfg		1076389	0					
ANR	1076425	Argument	name		1076389	1					
ANR	1076426	Identifier	name		1076389	0					
ANR	1076427	Argument	! node -> i_value		1076389	2					
ANR	1076428	UnaryOperationExpression	! node -> i_value		1076389	0					
ANR	1076429	UnaryOperator	!		1076389	0					
ANR	1076430	PtrMemberAccess	node -> i_value		1076389	1					
ANR	1076431	Identifier	node		1076389	0					
ANR	1076432	Identifier	i_value		1076389	1					
ANR	1076433	ReturnStatement	return true ;	319:2:7414:7425	1076389	1	True				
ANR	1076434	Identifier	true		1076389	0					
ANR	1076435	ReturnStatement	return false ;	321:1:7431:7443	1076389	2	True				
ANR	1076436	Identifier	false		1076389	0					
ANR	1076437	ReturnType	R_API bool		1076389	1					
ANR	1076438	Identifier	r_config_toggle		1076389	2					
ANR	1076439	ParameterList	"RConfig * cfg , const char * name"		1076389	3					
ANR	1076440	Parameter	RConfig * cfg	315:27:7236:7247	1076389	0	True				
ANR	1076441	ParameterType	RConfig *		1076389	0					
ANR	1076442	Identifier	cfg		1076389	1					
ANR	1076443	Parameter	const char * name	315:41:7250:7265	1076389	1	True				
ANR	1076444	ParameterType	const char *		1076389	0					
ANR	1076445	Identifier	name		1076389	1					
ANR	1076446	CFGEntryNode	ENTRY		1076389		True				
ANR	1076447	CFGExitNode	EXIT		1076389		True				
ANR	1076448	Symbol	node		1076389						
ANR	1076449	Symbol	cfg		1076389						
ANR	1076450	Symbol	node -> flags		1076389						
ANR	1076451	Symbol	name		1076389						
ANR	1076452	Symbol	true		1076389						
ANR	1076453	Symbol	false		1076389						
ANR	1076454	Symbol	* node		1076389						
ANR	1076455	Symbol	CN_BOOL		1076389						
ANR	1076456	Symbol	r_config_node_get		1076389						
ANR	1076457	Symbol	node -> i_value		1076389						
ANR	1076458	Function	r_config_get_i	324:0:7448:7851							
ANR	1076459	FunctionDef	"r_config_get_i (RConfig * cfg , const char * name)"		1076458	0					
ANR	1076460	CompoundStatement		324:58:7506:7851	1076458	0					
ANR	1076461	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , name ) ;"	325:1:7509:7558	1076458	0	True				
ANR	1076462	IdentifierDecl	"* node = r_config_node_get ( cfg , name )"		1076458	0					
ANR	1076463	IdentifierDeclType	RConfigNode *		1076458	0					
ANR	1076464	Identifier	node		1076458	1					
ANR	1076465	AssignmentExpression	"* node = r_config_node_get ( cfg , name )"		1076458	2		=			
ANR	1076466	Identifier	node		1076458	0					
ANR	1076467	CallExpression	"r_config_node_get ( cfg , name )"		1076458	1					
ANR	1076468	Callee	r_config_node_get		1076458	0					
ANR	1076469	Identifier	r_config_node_get		1076458	0					
ANR	1076470	ArgumentList	cfg		1076458	1					
ANR	1076471	Argument	cfg		1076458	0					
ANR	1076472	Identifier	cfg		1076458	0					
ANR	1076473	Argument	name		1076458	1					
ANR	1076474	Identifier	name		1076458	0					
ANR	1076475	IfStatement	if ( node )		1076458	1					
ANR	1076476	Condition	node	326:5:7565:7568	1076458	0	True				
ANR	1076477	Identifier	node		1076458	0					
ANR	1076478	CompoundStatement		3:11:64:64	1076458	1					
ANR	1076479	IfStatement	if ( node -> getter )		1076458	0					
ANR	1076480	Condition	node -> getter	327:6:7579:7590	1076458	0	True				
ANR	1076481	PtrMemberAccess	node -> getter		1076458	0					
ANR	1076482	Identifier	node		1076458	0					
ANR	1076483	Identifier	getter		1076458	1					
ANR	1076484	CompoundStatement		4:20:86:86	1076458	1					
ANR	1076485	ExpressionStatement	"node -> getter ( cfg -> user , node )"	328:3:7598:7628	1076458	0	True				
ANR	1076486	CallExpression	"node -> getter ( cfg -> user , node )"		1076458	0					
ANR	1076487	Callee	node -> getter		1076458	0					
ANR	1076488	PtrMemberAccess	node -> getter		1076458	0					
ANR	1076489	Identifier	node		1076458	0					
ANR	1076490	Identifier	getter		1076458	1					
ANR	1076491	ArgumentList	cfg -> user		1076458	1					
ANR	1076492	Argument	cfg -> user		1076458	0					
ANR	1076493	PtrMemberAccess	cfg -> user		1076458	0					
ANR	1076494	Identifier	cfg		1076458	0					
ANR	1076495	Identifier	user		1076458	1					
ANR	1076496	Argument	node		1076458	1					
ANR	1076497	Identifier	node		1076458	0					
ANR	1076498	IfStatement	"if ( node -> i_value || ! strcmp ( node -> value , ""false"" ) )"		1076458	1					
ANR	1076499	Condition	"node -> i_value || ! strcmp ( node -> value , ""false"" )"	330:6:7640:7686	1076458	0	True				
ANR	1076500	OrExpression	"node -> i_value || ! strcmp ( node -> value , ""false"" )"		1076458	0		||			
ANR	1076501	PtrMemberAccess	node -> i_value		1076458	0					
ANR	1076502	Identifier	node		1076458	0					
ANR	1076503	Identifier	i_value		1076458	1					
ANR	1076504	UnaryOperationExpression	"! strcmp ( node -> value , ""false"" )"		1076458	1					
ANR	1076505	UnaryOperator	!		1076458	0					
ANR	1076506	CallExpression	"strcmp ( node -> value , ""false"" )"		1076458	1					
ANR	1076507	Callee	strcmp		1076458	0					
ANR	1076508	Identifier	strcmp		1076458	0					
ANR	1076509	ArgumentList	node -> value		1076458	1					
ANR	1076510	Argument	node -> value		1076458	0					
ANR	1076511	PtrMemberAccess	node -> value		1076458	0					
ANR	1076512	Identifier	node		1076458	0					
ANR	1076513	Identifier	value		1076458	1					
ANR	1076514	Argument	"""false"""		1076458	1					
ANR	1076515	PrimaryExpression	"""false"""		1076458	0					
ANR	1076516	CompoundStatement		7:55:182:182	1076458	1					
ANR	1076517	ReturnStatement	return node -> i_value ;	331:3:7694:7714	1076458	0	True				
ANR	1076518	PtrMemberAccess	node -> i_value		1076458	0					
ANR	1076519	Identifier	node		1076458	0					
ANR	1076520	Identifier	i_value		1076458	1					
ANR	1076521	IfStatement	"if ( ! strcmp ( node -> value , ""true"" ) )"		1076458	2					
ANR	1076522	Condition	"! strcmp ( node -> value , ""true"" )"	333:6:7726:7754	1076458	0	True				
ANR	1076523	UnaryOperationExpression	"! strcmp ( node -> value , ""true"" )"		1076458	0					
ANR	1076524	UnaryOperator	!		1076458	0					
ANR	1076525	CallExpression	"strcmp ( node -> value , ""true"" )"		1076458	1					
ANR	1076526	Callee	strcmp		1076458	0					
ANR	1076527	Identifier	strcmp		1076458	0					
ANR	1076528	ArgumentList	node -> value		1076458	1					
ANR	1076529	Argument	node -> value		1076458	0					
ANR	1076530	PtrMemberAccess	node -> value		1076458	0					
ANR	1076531	Identifier	node		1076458	0					
ANR	1076532	Identifier	value		1076458	1					
ANR	1076533	Argument	"""true"""		1076458	1					
ANR	1076534	PrimaryExpression	"""true"""		1076458	0					
ANR	1076535	CompoundStatement		10:37:250:250	1076458	1					
ANR	1076536	ReturnStatement	return 1 ;	334:3:7762:7770	1076458	0	True				
ANR	1076537	PrimaryExpression	1		1076458	0					
ANR	1076538	ReturnStatement	"return ( ut64 ) r_num_math ( cfg -> num , node -> value ) ;"	336:2:7778:7826	1076458	3	True				
ANR	1076539	CastExpression	"( ut64 ) r_num_math ( cfg -> num , node -> value )"		1076458	0					
ANR	1076540	CastTarget	ut64		1076458	0					
ANR	1076541	CallExpression	"r_num_math ( cfg -> num , node -> value )"		1076458	1					
ANR	1076542	Callee	r_num_math		1076458	0					
ANR	1076543	Identifier	r_num_math		1076458	0					
ANR	1076544	ArgumentList	cfg -> num		1076458	1					
ANR	1076545	Argument	cfg -> num		1076458	0					
ANR	1076546	PtrMemberAccess	cfg -> num		1076458	0					
ANR	1076547	Identifier	cfg		1076458	0					
ANR	1076548	Identifier	num		1076458	1					
ANR	1076549	Argument	node -> value		1076458	1					
ANR	1076550	PtrMemberAccess	node -> value		1076458	0					
ANR	1076551	Identifier	node		1076458	0					
ANR	1076552	Identifier	value		1076458	1					
ANR	1076553	Statement	return	338:1:7832:7837	1076458	2	True				
ANR	1076554	Statement	(	338:8:7839:7839	1076458	3	True				
ANR	1076555	Statement	ut64	338:9:7840:7843	1076458	4	True				
ANR	1076556	Statement	)	338:13:7844:7844	1076458	5	True				
ANR	1076557	Statement	0L	338:15:7846:7847	1076458	6	True				
ANR	1076558	ExpressionStatement	L	338:17:7848:7849	1076458	7	True				
ANR	1076559	Identifier	L		1076458	0					
ANR	1076560	ReturnType	R_API ut64		1076458	1					
ANR	1076561	Identifier	r_config_get_i		1076458	2					
ANR	1076562	ParameterList	"RConfig * cfg , const char * name"		1076458	3					
ANR	1076563	Parameter	RConfig * cfg	324:26:7474:7485	1076458	0	True				
ANR	1076564	ParameterType	RConfig *		1076458	0					
ANR	1076565	Identifier	cfg		1076458	1					
ANR	1076566	Parameter	const char * name	324:40:7488:7503	1076458	1	True				
ANR	1076567	ParameterType	const char *		1076458	0					
ANR	1076568	Identifier	name		1076458	1					
ANR	1076569	CFGEntryNode	ENTRY		1076458		True				
ANR	1076570	CFGExitNode	EXIT		1076458		True				
ANR	1076571	Symbol	strcmp		1076458						
ANR	1076572	Symbol	cfg		1076458						
ANR	1076573	Symbol	node -> value		1076458						
ANR	1076574	Symbol	node -> i_value		1076458						
ANR	1076575	Symbol	r_num_math		1076458						
ANR	1076576	Symbol	node		1076458						
ANR	1076577	Symbol	* cfg		1076458						
ANR	1076578	Symbol	node -> getter		1076458						
ANR	1076579	Symbol	name		1076458						
ANR	1076580	Symbol	* node		1076458						
ANR	1076581	Symbol	cfg -> num		1076458						
ANR	1076582	Symbol	r_config_node_get		1076458						
ANR	1076583	Symbol	cfg -> user		1076458						
ANR	1076584	Function	r_config_node_type	341:6:7860:8169							
ANR	1076585	FunctionDef	r_config_node_type (RConfigNode * node)		1076584	0					
ANR	1076586	CompoundStatement		341:56:7910:8169	1076584	0					
ANR	1076587	IfStatement	if ( node )		1076584	0					
ANR	1076588	Condition	node	342:5:7917:7920	1076584	0	True				
ANR	1076589	Identifier	node		1076584	0					
ANR	1076590	CompoundStatement		3:2:16:35	1076584	1					
ANR	1076591	IdentifierDeclStatement	int f = node -> flags ;	343:2:7927:7946	1076584	0	True				
ANR	1076592	IdentifierDecl	f = node -> flags		1076584	0					
ANR	1076593	IdentifierDeclType	int		1076584	0					
ANR	1076594	Identifier	f		1076584	1					
ANR	1076595	AssignmentExpression	f = node -> flags		1076584	2		=			
ANR	1076596	Identifier	f		1076584	0					
ANR	1076597	PtrMemberAccess	node -> flags		1076584	1					
ANR	1076598	Identifier	node		1076584	0					
ANR	1076599	Identifier	flags		1076584	1					
ANR	1076600	IfStatement	if ( f & CN_BOOL )		1076584	1					
ANR	1076601	Condition	f & CN_BOOL	344:6:7954:7964	1076584	0	True				
ANR	1076602	BitAndExpression	f & CN_BOOL		1076584	0		&			
ANR	1076603	Identifier	f		1076584	0					
ANR	1076604	Identifier	CN_BOOL		1076584	1					
ANR	1076605	CompoundStatement		4:19:56:56	1076584	1					
ANR	1076606	ReturnStatement	"return ""bool"" ;"	345:3:7972:7985	1076584	0	True				
ANR	1076607	PrimaryExpression	"""bool"""		1076584	0					
ANR	1076608	IfStatement	if ( f & CN_STR )		1076584	2					
ANR	1076609	Condition	f & CN_STR	347:6:7997:8006	1076584	0	True				
ANR	1076610	BitAndExpression	f & CN_STR		1076584	0		&			
ANR	1076611	Identifier	f		1076584	0					
ANR	1076612	Identifier	CN_STR		1076584	1					
ANR	1076613	CompoundStatement		7:18:98:98	1076584	1					
ANR	1076614	ReturnStatement	"return ""str"" ;"	348:3:8014:8026	1076584	0	True				
ANR	1076615	PrimaryExpression	"""str"""		1076584	0					
ANR	1076616	IfStatement	if ( f & CN_OFFT || f & CN_INT )		1076584	3					
ANR	1076617	Condition	f & CN_OFFT || f & CN_INT	350:6:8038:8062	1076584	0	True				
ANR	1076618	OrExpression	f & CN_OFFT || f & CN_INT		1076584	0		||			
ANR	1076619	BitAndExpression	f & CN_OFFT		1076584	0		&			
ANR	1076620	Identifier	f		1076584	0					
ANR	1076621	Identifier	CN_OFFT		1076584	1					
ANR	1076622	BitAndExpression	f & CN_INT		1076584	1		&			
ANR	1076623	Identifier	f		1076584	0					
ANR	1076624	Identifier	CN_INT		1076584	1					
ANR	1076625	CompoundStatement		10:33:154:154	1076584	1					
ANR	1076626	IfStatement	"if ( ! strncmp ( node -> value , ""0x"" , 2 ) )"		1076584	0					
ANR	1076627	Condition	"! strncmp ( node -> value , ""0x"" , 2 )"	351:7:8074:8104	1076584	0	True				
ANR	1076628	UnaryOperationExpression	"! strncmp ( node -> value , ""0x"" , 2 )"		1076584	0					
ANR	1076629	UnaryOperator	!		1076584	0					
ANR	1076630	CallExpression	"strncmp ( node -> value , ""0x"" , 2 )"		1076584	1					
ANR	1076631	Callee	strncmp		1076584	0					
ANR	1076632	Identifier	strncmp		1076584	0					
ANR	1076633	ArgumentList	node -> value		1076584	1					
ANR	1076634	Argument	node -> value		1076584	0					
ANR	1076635	PtrMemberAccess	node -> value		1076584	0					
ANR	1076636	Identifier	node		1076584	0					
ANR	1076637	Identifier	value		1076584	1					
ANR	1076638	Argument	"""0x"""		1076584	1					
ANR	1076639	PrimaryExpression	"""0x"""		1076584	0					
ANR	1076640	Argument	2		1076584	2					
ANR	1076641	PrimaryExpression	2		1076584	0					
ANR	1076642	CompoundStatement		11:40:196:196	1076584	1					
ANR	1076643	ReturnStatement	"return ""addr"" ;"	352:4:8113:8126	1076584	0	True				
ANR	1076644	PrimaryExpression	"""addr"""		1076584	0					
ANR	1076645	ReturnStatement	"return ""int"" ;"	354:3:8136:8148	1076584	1	True				
ANR	1076646	PrimaryExpression	"""int"""		1076584	0					
ANR	1076647	ReturnStatement	"return """" ;"	357:1:8158:8167	1076584	1	True				
ANR	1076648	PrimaryExpression	""""""		1076584	0					
ANR	1076649	ReturnType	const char *		1076584	1					
ANR	1076650	Identifier	r_config_node_type		1076584	2					
ANR	1076651	ParameterList	RConfigNode * node		1076584	3					
ANR	1076652	Parameter	RConfigNode * node	341:37:7891:7907	1076584	0	True				
ANR	1076653	ParameterType	RConfigNode *		1076584	0					
ANR	1076654	Identifier	node		1076584	1					
ANR	1076655	CFGEntryNode	ENTRY		1076584		True				
ANR	1076656	CFGExitNode	EXIT		1076584		True				
ANR	1076657	Symbol	node		1076584						
ANR	1076658	Symbol	CN_STR		1076584						
ANR	1076659	Symbol	strncmp		1076584						
ANR	1076660	Symbol	CN_OFFT		1076584						
ANR	1076661	Symbol	node -> flags		1076584						
ANR	1076662	Symbol	f		1076584						
ANR	1076663	Symbol	CN_INT		1076584						
ANR	1076664	Symbol	* node		1076584						
ANR	1076665	Symbol	CN_BOOL		1076584						
ANR	1076666	Symbol	node -> value		1076584						
ANR	1076667	Function	r_config_set_cb	360:0:8172:8438							
ANR	1076668	FunctionDef	"r_config_set_cb (RConfig * cfg , const char * name , const char * value , RConfigCallback cb)"		1076667	0					
ANR	1076669	CompoundStatement		360:106:8278:8438	1076667	0					
ANR	1076670	IdentifierDeclStatement	"RConfigNode * node = r_config_set ( cfg , name , value ) ;"	361:1:8281:8332	1076667	0	True				
ANR	1076671	IdentifierDecl	"* node = r_config_set ( cfg , name , value )"		1076667	0					
ANR	1076672	IdentifierDeclType	RConfigNode *		1076667	0					
ANR	1076673	Identifier	node		1076667	1					
ANR	1076674	AssignmentExpression	"* node = r_config_set ( cfg , name , value )"		1076667	2		=			
ANR	1076675	Identifier	node		1076667	0					
ANR	1076676	CallExpression	"r_config_set ( cfg , name , value )"		1076667	1					
ANR	1076677	Callee	r_config_set		1076667	0					
ANR	1076678	Identifier	r_config_set		1076667	0					
ANR	1076679	ArgumentList	cfg		1076667	1					
ANR	1076680	Argument	cfg		1076667	0					
ANR	1076681	Identifier	cfg		1076667	0					
ANR	1076682	Argument	name		1076667	1					
ANR	1076683	Identifier	name		1076667	0					
ANR	1076684	Argument	value		1076667	2					
ANR	1076685	Identifier	value		1076667	0					
ANR	1076686	IfStatement	if ( node && ( node -> setter = cb ) )		1076667	1					
ANR	1076687	Condition	node && ( node -> setter = cb )	362:5:8339:8365	1076667	0	True				
ANR	1076688	AndExpression	node && ( node -> setter = cb )		1076667	0		&&			
ANR	1076689	Identifier	node		1076667	0					
ANR	1076690	AssignmentExpression	node -> setter = cb		1076667	1		=			
ANR	1076691	PtrMemberAccess	node -> setter		1076667	0					
ANR	1076692	Identifier	node		1076667	0					
ANR	1076693	Identifier	setter		1076667	1					
ANR	1076694	Identifier	cb		1076667	1					
ANR	1076695	CompoundStatement		3:34:89:89	1076667	1					
ANR	1076696	IfStatement	"if ( ! cb ( cfg -> user , node ) )"		1076667	0					
ANR	1076697	Condition	"! cb ( cfg -> user , node )"	363:6:8376:8396	1076667	0	True				
ANR	1076698	UnaryOperationExpression	"! cb ( cfg -> user , node )"		1076667	0					
ANR	1076699	UnaryOperator	!		1076667	0					
ANR	1076700	CallExpression	"cb ( cfg -> user , node )"		1076667	1					
ANR	1076701	Callee	cb		1076667	0					
ANR	1076702	Identifier	cb		1076667	0					
ANR	1076703	ArgumentList	cfg -> user		1076667	1					
ANR	1076704	Argument	cfg -> user		1076667	0					
ANR	1076705	PtrMemberAccess	cfg -> user		1076667	0					
ANR	1076706	Identifier	cfg		1076667	0					
ANR	1076707	Identifier	user		1076667	1					
ANR	1076708	Argument	node		1076667	1					
ANR	1076709	Identifier	node		1076667	0					
ANR	1076710	CompoundStatement		4:29:120:120	1076667	1					
ANR	1076711	ReturnStatement	return NULL ;	364:3:8404:8415	1076667	0	True				
ANR	1076712	Identifier	NULL		1076667	0					
ANR	1076713	ReturnStatement	return node ;	367:1:8425:8436	1076667	2	True				
ANR	1076714	Identifier	node		1076667	0					
ANR	1076715	ReturnType	R_API RConfigNode *		1076667	1					
ANR	1076716	Identifier	r_config_set_cb		1076667	2					
ANR	1076717	ParameterList	"RConfig * cfg , const char * name , const char * value , RConfigCallback cb"		1076667	3					
ANR	1076718	Parameter	RConfig * cfg	360:35:8207:8218	1076667	0	True				
ANR	1076719	ParameterType	RConfig *		1076667	0					
ANR	1076720	Identifier	cfg		1076667	1					
ANR	1076721	Parameter	const char * name	360:49:8221:8236	1076667	1	True				
ANR	1076722	ParameterType	const char *		1076667	0					
ANR	1076723	Identifier	name		1076667	1					
ANR	1076724	Parameter	const char * value	360:67:8239:8255	1076667	2	True				
ANR	1076725	ParameterType	const char *		1076667	0					
ANR	1076726	Identifier	value		1076667	1					
ANR	1076727	Parameter	RConfigCallback cb	360:86:8258:8275	1076667	3	True				
ANR	1076728	ParameterType	RConfigCallback		1076667	0					
ANR	1076729	Identifier	cb		1076667	1					
ANR	1076730	CFGEntryNode	ENTRY		1076667		True				
ANR	1076731	CFGExitNode	EXIT		1076667		True				
ANR	1076732	Symbol	node		1076667						
ANR	1076733	Symbol	* cfg		1076667						
ANR	1076734	Symbol	NULL		1076667						
ANR	1076735	Symbol	node -> setter		1076667						
ANR	1076736	Symbol	cfg		1076667						
ANR	1076737	Symbol	name		1076667						
ANR	1076738	Symbol	* node		1076667						
ANR	1076739	Symbol	r_config_set		1076667						
ANR	1076740	Symbol	value		1076667						
ANR	1076741	Symbol	cb		1076667						
ANR	1076742	Symbol	cfg -> user		1076667						
ANR	1076743	Function	r_config_set_i_cb	370:0:8441:8715							
ANR	1076744	FunctionDef	"r_config_set_i_cb (RConfig * cfg , const char * name , int ivalue , RConfigCallback cb)"		1076743	0					
ANR	1076745	CompoundStatement		370:101:8542:8715	1076743	0					
ANR	1076746	IdentifierDeclStatement	"RConfigNode * node = r_config_set_i ( cfg , name , ivalue ) ;"	371:1:8545:8599	1076743	0	True				
ANR	1076747	IdentifierDecl	"* node = r_config_set_i ( cfg , name , ivalue )"		1076743	0					
ANR	1076748	IdentifierDeclType	RConfigNode *		1076743	0					
ANR	1076749	Identifier	node		1076743	1					
ANR	1076750	AssignmentExpression	"* node = r_config_set_i ( cfg , name , ivalue )"		1076743	2		=			
ANR	1076751	Identifier	node		1076743	0					
ANR	1076752	CallExpression	"r_config_set_i ( cfg , name , ivalue )"		1076743	1					
ANR	1076753	Callee	r_config_set_i		1076743	0					
ANR	1076754	Identifier	r_config_set_i		1076743	0					
ANR	1076755	ArgumentList	cfg		1076743	1					
ANR	1076756	Argument	cfg		1076743	0					
ANR	1076757	Identifier	cfg		1076743	0					
ANR	1076758	Argument	name		1076743	1					
ANR	1076759	Identifier	name		1076743	0					
ANR	1076760	Argument	ivalue		1076743	2					
ANR	1076761	Identifier	ivalue		1076743	0					
ANR	1076762	IfStatement	if ( node && ( node -> setter = cb ) )		1076743	1					
ANR	1076763	Condition	node && ( node -> setter = cb )	372:5:8606:8632	1076743	0	True				
ANR	1076764	AndExpression	node && ( node -> setter = cb )		1076743	0		&&			
ANR	1076765	Identifier	node		1076743	0					
ANR	1076766	AssignmentExpression	node -> setter = cb		1076743	1		=			
ANR	1076767	PtrMemberAccess	node -> setter		1076743	0					
ANR	1076768	Identifier	node		1076743	0					
ANR	1076769	Identifier	setter		1076743	1					
ANR	1076770	Identifier	cb		1076743	1					
ANR	1076771	CompoundStatement		3:34:92:92	1076743	1					
ANR	1076772	IfStatement	"if ( ! node -> setter ( cfg -> user , node ) )"		1076743	0					
ANR	1076773	Condition	"! node -> setter ( cfg -> user , node )"	373:6:8643:8673	1076743	0	True				
ANR	1076774	UnaryOperationExpression	"! node -> setter ( cfg -> user , node )"		1076743	0					
ANR	1076775	UnaryOperator	!		1076743	0					
ANR	1076776	CallExpression	"node -> setter ( cfg -> user , node )"		1076743	1					
ANR	1076777	Callee	node -> setter		1076743	0					
ANR	1076778	PtrMemberAccess	node -> setter		1076743	0					
ANR	1076779	Identifier	node		1076743	0					
ANR	1076780	Identifier	setter		1076743	1					
ANR	1076781	ArgumentList	cfg -> user		1076743	1					
ANR	1076782	Argument	cfg -> user		1076743	0					
ANR	1076783	PtrMemberAccess	cfg -> user		1076743	0					
ANR	1076784	Identifier	cfg		1076743	0					
ANR	1076785	Identifier	user		1076743	1					
ANR	1076786	Argument	node		1076743	1					
ANR	1076787	Identifier	node		1076743	0					
ANR	1076788	CompoundStatement		4:39:133:133	1076743	1					
ANR	1076789	ReturnStatement	return NULL ;	374:3:8681:8692	1076743	0	True				
ANR	1076790	Identifier	NULL		1076743	0					
ANR	1076791	ReturnStatement	return node ;	377:1:8702:8713	1076743	2	True				
ANR	1076792	Identifier	node		1076743	0					
ANR	1076793	ReturnType	R_API RConfigNode *		1076743	1					
ANR	1076794	Identifier	r_config_set_i_cb		1076743	2					
ANR	1076795	ParameterList	"RConfig * cfg , const char * name , int ivalue , RConfigCallback cb"		1076743	3					
ANR	1076796	Parameter	RConfig * cfg	370:37:8478:8489	1076743	0	True				
ANR	1076797	ParameterType	RConfig *		1076743	0					
ANR	1076798	Identifier	cfg		1076743	1					
ANR	1076799	Parameter	const char * name	370:51:8492:8507	1076743	1	True				
ANR	1076800	ParameterType	const char *		1076743	0					
ANR	1076801	Identifier	name		1076743	1					
ANR	1076802	Parameter	int ivalue	370:69:8510:8519	1076743	2	True				
ANR	1076803	ParameterType	int		1076743	0					
ANR	1076804	Identifier	ivalue		1076743	1					
ANR	1076805	Parameter	RConfigCallback cb	370:81:8522:8539	1076743	3	True				
ANR	1076806	ParameterType	RConfigCallback		1076743	0					
ANR	1076807	Identifier	cb		1076743	1					
ANR	1076808	CFGEntryNode	ENTRY		1076743		True				
ANR	1076809	CFGExitNode	EXIT		1076743		True				
ANR	1076810	Symbol	ivalue		1076743						
ANR	1076811	Symbol	node		1076743						
ANR	1076812	Symbol	* cfg		1076743						
ANR	1076813	Symbol	NULL		1076743						
ANR	1076814	Symbol	node -> setter		1076743						
ANR	1076815	Symbol	cfg		1076743						
ANR	1076816	Symbol	name		1076743						
ANR	1076817	Symbol	* node		1076743						
ANR	1076818	Symbol	r_config_set_i		1076743						
ANR	1076819	Symbol	cb		1076743						
ANR	1076820	Symbol	cfg -> user		1076743						
ANR	1076821	Function	r_config_set	381:0:8760:10838							
ANR	1076822	FunctionDef	"r_config_set (RConfig * cfg , const char * name , const char * value)"		1076821	0					
ANR	1076823	CompoundStatement		381:83:8843:10838	1076821	0					
ANR	1076824	IdentifierDeclStatement	RConfigNode * node = NULL ;	382:1:8846:8870	1076821	0	True				
ANR	1076825	IdentifierDecl	* node = NULL		1076821	0					
ANR	1076826	IdentifierDeclType	RConfigNode *		1076821	0					
ANR	1076827	Identifier	node		1076821	1					
ANR	1076828	AssignmentExpression	* node = NULL		1076821	2		=			
ANR	1076829	Identifier	NULL		1076821	0					
ANR	1076830	Identifier	NULL		1076821	1					
ANR	1076831	IdentifierDeclStatement	char * ov = NULL ;	383:1:8873:8888	1076821	1	True				
ANR	1076832	IdentifierDecl	* ov = NULL		1076821	0					
ANR	1076833	IdentifierDeclType	char *		1076821	0					
ANR	1076834	Identifier	ov		1076821	1					
ANR	1076835	AssignmentExpression	* ov = NULL		1076821	2		=			
ANR	1076836	Identifier	NULL		1076821	0					
ANR	1076837	Identifier	NULL		1076821	1					
ANR	1076838	IdentifierDeclStatement	ut64 oi ;	384:1:8891:8898	1076821	2	True				
ANR	1076839	IdentifierDecl	oi		1076821	0					
ANR	1076840	IdentifierDeclType	ut64		1076821	0					
ANR	1076841	Identifier	oi		1076821	1					
ANR	1076842	ExpressionStatement	"r_return_val_if_fail ( cfg && cfg -> ht , NULL )"	386:1:8902:8945	1076821	3	True				
ANR	1076843	CallExpression	"r_return_val_if_fail ( cfg && cfg -> ht , NULL )"		1076821	0					
ANR	1076844	Callee	r_return_val_if_fail		1076821	0					
ANR	1076845	Identifier	r_return_val_if_fail		1076821	0					
ANR	1076846	ArgumentList	cfg && cfg -> ht		1076821	1					
ANR	1076847	Argument	cfg && cfg -> ht		1076821	0					
ANR	1076848	AndExpression	cfg && cfg -> ht		1076821	0		&&			
ANR	1076849	Identifier	cfg		1076821	0					
ANR	1076850	PtrMemberAccess	cfg -> ht		1076821	1					
ANR	1076851	Identifier	cfg		1076821	0					
ANR	1076852	Identifier	ht		1076821	1					
ANR	1076853	Argument	NULL		1076821	1					
ANR	1076854	Identifier	NULL		1076821	0					
ANR	1076855	ExpressionStatement	"r_return_val_if_fail ( ! IS_NULLSTR ( name ) , NULL )"	387:1:8948:8995	1076821	4	True				
ANR	1076856	CallExpression	"r_return_val_if_fail ( ! IS_NULLSTR ( name ) , NULL )"		1076821	0					
ANR	1076857	Callee	r_return_val_if_fail		1076821	0					
ANR	1076858	Identifier	r_return_val_if_fail		1076821	0					
ANR	1076859	ArgumentList	! IS_NULLSTR ( name )		1076821	1					
ANR	1076860	Argument	! IS_NULLSTR ( name )		1076821	0					
ANR	1076861	UnaryOperationExpression	! IS_NULLSTR ( name )		1076821	0					
ANR	1076862	UnaryOperator	!		1076821	0					
ANR	1076863	CallExpression	IS_NULLSTR ( name )		1076821	1					
ANR	1076864	Callee	IS_NULLSTR		1076821	0					
ANR	1076865	Identifier	IS_NULLSTR		1076821	0					
ANR	1076866	ArgumentList	name		1076821	1					
ANR	1076867	Argument	name		1076821	0					
ANR	1076868	Identifier	name		1076821	0					
ANR	1076869	Argument	NULL		1076821	1					
ANR	1076870	Identifier	NULL		1076821	0					
ANR	1076871	ExpressionStatement	"node = r_config_node_get ( cfg , name )"	389:1:8999:9035	1076821	5	True				
ANR	1076872	AssignmentExpression	"node = r_config_node_get ( cfg , name )"		1076821	0		=			
ANR	1076873	Identifier	node		1076821	0					
ANR	1076874	CallExpression	"r_config_node_get ( cfg , name )"		1076821	1					
ANR	1076875	Callee	r_config_node_get		1076821	0					
ANR	1076876	Identifier	r_config_node_get		1076821	0					
ANR	1076877	ArgumentList	cfg		1076821	1					
ANR	1076878	Argument	cfg		1076821	0					
ANR	1076879	Identifier	cfg		1076821	0					
ANR	1076880	Argument	name		1076821	1					
ANR	1076881	Identifier	name		1076821	0					
ANR	1076882	IfStatement	if ( node )		1076821	6					
ANR	1076883	Condition	node	390:5:9042:9045	1076821	0	True				
ANR	1076884	Identifier	node		1076821	0					
ANR	1076885	CompoundStatement		10:11:204:204	1076821	1					
ANR	1076886	IfStatement	if ( node -> flags & CN_RO )		1076821	0					
ANR	1076887	Condition	node -> flags & CN_RO	391:6:9056:9074	1076821	0	True				
ANR	1076888	BitAndExpression	node -> flags & CN_RO		1076821	0		&			
ANR	1076889	PtrMemberAccess	node -> flags		1076821	0					
ANR	1076890	Identifier	node		1076821	0					
ANR	1076891	Identifier	flags		1076821	1					
ANR	1076892	Identifier	CN_RO		1076821	1					
ANR	1076893	CompoundStatement		11:27:233:233	1076821	1					
ANR	1076894	ExpressionStatement	"eprintf ( ""(error: '%s' config key is read only)\\n"" , name )"	392:3:9082:9139	1076821	0	True				
ANR	1076895	CallExpression	"eprintf ( ""(error: '%s' config key is read only)\\n"" , name )"		1076821	0					
ANR	1076896	Callee	eprintf		1076821	0					
ANR	1076897	Identifier	eprintf		1076821	0					
ANR	1076898	ArgumentList	"""(error: '%s' config key is read only)\\n"""		1076821	1					
ANR	1076899	Argument	"""(error: '%s' config key is read only)\\n"""		1076821	0					
ANR	1076900	PrimaryExpression	"""(error: '%s' config key is read only)\\n"""		1076821	0					
ANR	1076901	Argument	name		1076821	1					
ANR	1076902	Identifier	name		1076821	0					
ANR	1076903	ReturnStatement	return node ;	393:3:9144:9155	1076821	1	True				
ANR	1076904	Identifier	node		1076821	0					
ANR	1076905	ExpressionStatement	oi = node -> i_value	395:2:9163:9181	1076821	1	True				
ANR	1076906	AssignmentExpression	oi = node -> i_value		1076821	0		=			
ANR	1076907	Identifier	oi		1076821	0					
ANR	1076908	PtrMemberAccess	node -> i_value		1076821	1					
ANR	1076909	Identifier	node		1076821	0					
ANR	1076910	Identifier	i_value		1076821	1					
ANR	1076911	IfStatement	if ( node -> value )		1076821	2					
ANR	1076912	Condition	node -> value	396:6:9189:9199	1076821	0	True				
ANR	1076913	PtrMemberAccess	node -> value		1076821	0					
ANR	1076914	Identifier	node		1076821	0					
ANR	1076915	Identifier	value		1076821	1					
ANR	1076916	CompoundStatement		16:19:358:358	1076821	1					
ANR	1076917	ExpressionStatement	ov = strdup ( node -> value )	397:3:9207:9232	1076821	0	True				
ANR	1076918	AssignmentExpression	ov = strdup ( node -> value )		1076821	0		=			
ANR	1076919	Identifier	ov		1076821	0					
ANR	1076920	CallExpression	strdup ( node -> value )		1076821	1					
ANR	1076921	Callee	strdup		1076821	0					
ANR	1076922	Identifier	strdup		1076821	0					
ANR	1076923	ArgumentList	node -> value		1076821	1					
ANR	1076924	Argument	node -> value		1076821	0					
ANR	1076925	PtrMemberAccess	node -> value		1076821	0					
ANR	1076926	Identifier	node		1076821	0					
ANR	1076927	Identifier	value		1076821	1					
ANR	1076928	IfStatement	if ( ! ov )		1076821	1					
ANR	1076929	Condition	! ov	398:7:9241:9243	1076821	0	True				
ANR	1076930	UnaryOperationExpression	! ov		1076821	0					
ANR	1076931	UnaryOperator	!		1076821	0					
ANR	1076932	Identifier	ov		1076821	1					
ANR	1076933	CompoundStatement		18:12:402:402	1076821	1					
ANR	1076934	GotoStatement	goto beach ;	399:4:9252:9262	1076821	0	True				
ANR	1076935	Identifier	beach		1076821	0					
ANR	1076936	ElseStatement	else		1076821	0					
ANR	1076937	CompoundStatement		21:9:434:434	1076821	0					
ANR	1076938	ExpressionStatement	free ( node -> value )	402:3:9283:9301	1076821	0	True				
ANR	1076939	CallExpression	free ( node -> value )		1076821	0					
ANR	1076940	Callee	free		1076821	0					
ANR	1076941	Identifier	free		1076821	0					
ANR	1076942	ArgumentList	node -> value		1076821	1					
ANR	1076943	Argument	node -> value		1076821	0					
ANR	1076944	PtrMemberAccess	node -> value		1076821	0					
ANR	1076945	Identifier	node		1076821	0					
ANR	1076946	Identifier	value		1076821	1					
ANR	1076947	ExpressionStatement	"node -> value = strdup ( """" )"	403:3:9306:9331	1076821	1	True				
ANR	1076948	AssignmentExpression	"node -> value = strdup ( """" )"		1076821	0		=			
ANR	1076949	PtrMemberAccess	node -> value		1076821	0					
ANR	1076950	Identifier	node		1076821	0					
ANR	1076951	Identifier	value		1076821	1					
ANR	1076952	CallExpression	"strdup ( """" )"		1076821	1					
ANR	1076953	Callee	strdup		1076821	0					
ANR	1076954	Identifier	strdup		1076821	0					
ANR	1076955	ArgumentList	""""""		1076821	1					
ANR	1076956	Argument	""""""		1076821	0					
ANR	1076957	PrimaryExpression	""""""		1076821	0					
ANR	1076958	IfStatement	if ( node -> flags & CN_BOOL )		1076821	3					
ANR	1076959	Condition	node -> flags & CN_BOOL	405:6:9343:9363	1076821	0	True				
ANR	1076960	BitAndExpression	node -> flags & CN_BOOL		1076821	0		&			
ANR	1076961	PtrMemberAccess	node -> flags		1076821	0					
ANR	1076962	Identifier	node		1076821	0					
ANR	1076963	Identifier	flags		1076821	1					
ANR	1076964	Identifier	CN_BOOL		1076821	1					
ANR	1076965	CompoundStatement		28:3:590:627	1076821	1					
ANR	1076966	IdentifierDeclStatement	bool b = r_str_is_true ( value ) ;	406:3:9371:9401	1076821	0	True				
ANR	1076967	IdentifierDecl	b = r_str_is_true ( value )		1076821	0					
ANR	1076968	IdentifierDeclType	bool		1076821	0					
ANR	1076969	Identifier	b		1076821	1					
ANR	1076970	AssignmentExpression	b = r_str_is_true ( value )		1076821	2		=			
ANR	1076971	Identifier	b		1076821	0					
ANR	1076972	CallExpression	r_str_is_true ( value )		1076821	1					
ANR	1076973	Callee	r_str_is_true		1076821	0					
ANR	1076974	Identifier	r_str_is_true		1076821	0					
ANR	1076975	ArgumentList	value		1076821	1					
ANR	1076976	Argument	value		1076821	0					
ANR	1076977	Identifier	value		1076821	0					
ANR	1076978	ExpressionStatement	node -> i_value = b ? 1 : 0	407:3:9406:9429	1076821	1	True				
ANR	1076979	AssignmentExpression	node -> i_value = b ? 1 : 0		1076821	0		=			
ANR	1076980	PtrMemberAccess	node -> i_value		1076821	0					
ANR	1076981	Identifier	node		1076821	0					
ANR	1076982	Identifier	i_value		1076821	1					
ANR	1076983	ConditionalExpression	b ? 1 : 0		1076821	1					
ANR	1076984	Condition	b		1076821	0					
ANR	1076985	Identifier	b		1076821	0					
ANR	1076986	PrimaryExpression	1		1076821	1					
ANR	1076987	PrimaryExpression	0		1076821	2					
ANR	1076988	IdentifierDeclStatement	char * value = strdup ( r_str_bool ( b ) ) ;	408:3:9434:9471	1076821	2	True				
ANR	1076989	IdentifierDecl	* value = strdup ( r_str_bool ( b ) )		1076821	0					
ANR	1076990	IdentifierDeclType	char *		1076821	0					
ANR	1076991	Identifier	value		1076821	1					
ANR	1076992	AssignmentExpression	* value = strdup ( r_str_bool ( b ) )		1076821	2		=			
ANR	1076993	Identifier	value		1076821	0					
ANR	1076994	CallExpression	strdup ( r_str_bool ( b ) )		1076821	1					
ANR	1076995	Callee	strdup		1076821	0					
ANR	1076996	Identifier	strdup		1076821	0					
ANR	1076997	ArgumentList	r_str_bool ( b )		1076821	1					
ANR	1076998	Argument	r_str_bool ( b )		1076821	0					
ANR	1076999	CallExpression	r_str_bool ( b )		1076821	0					
ANR	1077000	Callee	r_str_bool		1076821	0					
ANR	1077001	Identifier	r_str_bool		1076821	0					
ANR	1077002	ArgumentList	b		1076821	1					
ANR	1077003	Argument	b		1076821	0					
ANR	1077004	Identifier	b		1076821	0					
ANR	1077005	IfStatement	if ( value )		1076821	3					
ANR	1077006	Condition	value	409:7:9480:9484	1076821	0	True				
ANR	1077007	Identifier	value		1076821	0					
ANR	1077008	CompoundStatement		29:14:643:643	1076821	1					
ANR	1077009	ExpressionStatement	free ( node -> value )	410:4:9493:9511	1076821	0	True				
ANR	1077010	CallExpression	free ( node -> value )		1076821	0					
ANR	1077011	Callee	free		1076821	0					
ANR	1077012	Identifier	free		1076821	0					
ANR	1077013	ArgumentList	node -> value		1076821	1					
ANR	1077014	Argument	node -> value		1076821	0					
ANR	1077015	PtrMemberAccess	node -> value		1076821	0					
ANR	1077016	Identifier	node		1076821	0					
ANR	1077017	Identifier	value		1076821	1					
ANR	1077018	ExpressionStatement	node -> value = value	411:4:9517:9536	1076821	1	True				
ANR	1077019	AssignmentExpression	node -> value = value		1076821	0		=			
ANR	1077020	PtrMemberAccess	node -> value		1076821	0					
ANR	1077021	Identifier	node		1076821	0					
ANR	1077022	Identifier	value		1076821	1					
ANR	1077023	Identifier	value		1076821	1					
ANR	1077024	ElseStatement	else		1076821	0					
ANR	1077025	CompoundStatement		33:9:708:708	1076821	0					
ANR	1077026	IfStatement	if ( ! value )		1076821	0					
ANR	1077027	Condition	! value	414:7:9561:9566	1076821	0	True				
ANR	1077028	UnaryOperationExpression	! value		1076821	0					
ANR	1077029	UnaryOperator	!		1076821	0					
ANR	1077030	Identifier	value		1076821	1					
ANR	1077031	CompoundStatement		34:15:725:725	1076821	1					
ANR	1077032	ExpressionStatement	free ( node -> value )	415:4:9575:9593	1076821	0	True				
ANR	1077033	CallExpression	free ( node -> value )		1076821	0					
ANR	1077034	Callee	free		1076821	0					
ANR	1077035	Identifier	free		1076821	0					
ANR	1077036	ArgumentList	node -> value		1076821	1					
ANR	1077037	Argument	node -> value		1076821	0					
ANR	1077038	PtrMemberAccess	node -> value		1076821	0					
ANR	1077039	Identifier	node		1076821	0					
ANR	1077040	Identifier	value		1076821	1					
ANR	1077041	ExpressionStatement	"node -> value = strdup ( """" )"	416:4:9599:9624	1076821	1	True				
ANR	1077042	AssignmentExpression	"node -> value = strdup ( """" )"		1076821	0		=			
ANR	1077043	PtrMemberAccess	node -> value		1076821	0					
ANR	1077044	Identifier	node		1076821	0					
ANR	1077045	Identifier	value		1076821	1					
ANR	1077046	CallExpression	"strdup ( """" )"		1076821	1					
ANR	1077047	Callee	strdup		1076821	0					
ANR	1077048	Identifier	strdup		1076821	0					
ANR	1077049	ArgumentList	""""""		1076821	1					
ANR	1077050	Argument	""""""		1076821	0					
ANR	1077051	PrimaryExpression	""""""		1076821	0					
ANR	1077052	ExpressionStatement	node -> i_value = 0	417:4:9630:9647	1076821	2	True				
ANR	1077053	AssignmentExpression	node -> i_value = 0		1076821	0		=			
ANR	1077054	PtrMemberAccess	node -> i_value		1076821	0					
ANR	1077055	Identifier	node		1076821	0					
ANR	1077056	Identifier	i_value		1076821	1					
ANR	1077057	PrimaryExpression	0		1076821	1					
ANR	1077058	ElseStatement	else		1076821	0					
ANR	1077059	CompoundStatement		42:4:876:899	1076821	0					
ANR	1077060	IfStatement	if ( node -> value == value )		1076821	0					
ANR	1077061	Condition	node -> value == value	419:8:9669:9688	1076821	0	True				
ANR	1077062	EqualityExpression	node -> value == value		1076821	0		==			
ANR	1077063	PtrMemberAccess	node -> value		1076821	0					
ANR	1077064	Identifier	node		1076821	0					
ANR	1077065	Identifier	value		1076821	1					
ANR	1077066	Identifier	value		1076821	1					
ANR	1077067	CompoundStatement		39:30:847:847	1076821	1					
ANR	1077068	GotoStatement	goto beach ;	420:5:9698:9708	1076821	0	True				
ANR	1077069	Identifier	beach		1076821	0					
ANR	1077070	IdentifierDeclStatement	char * tmp = node -> value ;	422:4:9720:9743	1076821	1	True				
ANR	1077071	IdentifierDecl	* tmp = node -> value		1076821	0					
ANR	1077072	IdentifierDeclType	char *		1076821	0					
ANR	1077073	Identifier	tmp		1076821	1					
ANR	1077074	AssignmentExpression	* tmp = node -> value		1076821	2		=			
ANR	1077075	Identifier	tmp		1076821	0					
ANR	1077076	PtrMemberAccess	node -> value		1076821	1					
ANR	1077077	Identifier	node		1076821	0					
ANR	1077078	Identifier	value		1076821	1					
ANR	1077079	ExpressionStatement	node -> value = strdup ( value )	423:4:9749:9777	1076821	2	True				
ANR	1077080	AssignmentExpression	node -> value = strdup ( value )		1076821	0		=			
ANR	1077081	PtrMemberAccess	node -> value		1076821	0					
ANR	1077082	Identifier	node		1076821	0					
ANR	1077083	Identifier	value		1076821	1					
ANR	1077084	CallExpression	strdup ( value )		1076821	1					
ANR	1077085	Callee	strdup		1076821	0					
ANR	1077086	Identifier	strdup		1076821	0					
ANR	1077087	ArgumentList	value		1076821	1					
ANR	1077088	Argument	value		1076821	0					
ANR	1077089	Identifier	value		1076821	0					
ANR	1077090	ExpressionStatement	free ( tmp )	424:4:9783:9793	1076821	3	True				
ANR	1077091	CallExpression	free ( tmp )		1076821	0					
ANR	1077092	Callee	free		1076821	0					
ANR	1077093	Identifier	free		1076821	0					
ANR	1077094	ArgumentList	tmp		1076821	1					
ANR	1077095	Argument	tmp		1076821	0					
ANR	1077096	Identifier	tmp		1076821	0					
ANR	1077097	IfStatement	if ( IS_DIGIT ( * value ) )		1076821	4					
ANR	1077098	Condition	IS_DIGIT ( * value )	425:8:9803:9819	1076821	0	True				
ANR	1077099	CallExpression	IS_DIGIT ( * value )		1076821	0					
ANR	1077100	Callee	IS_DIGIT		1076821	0					
ANR	1077101	Identifier	IS_DIGIT		1076821	0					
ANR	1077102	ArgumentList	* value		1076821	1					
ANR	1077103	Argument	* value		1076821	0					
ANR	1077104	UnaryOperationExpression	* value		1076821	0					
ANR	1077105	UnaryOperator	*		1076821	0					
ANR	1077106	Identifier	value		1076821	1					
ANR	1077107	CompoundStatement		45:27:978:978	1076821	1					
ANR	1077108	IfStatement	"if ( strchr ( value , '/' ) )"		1076821	0					
ANR	1077109	Condition	"strchr ( value , '/' )"	426:9:9833:9851	1076821	0	True				
ANR	1077110	CallExpression	"strchr ( value , '/' )"		1076821	0					
ANR	1077111	Callee	strchr		1076821	0					
ANR	1077112	Identifier	strchr		1076821	0					
ANR	1077113	ArgumentList	value		1076821	1					
ANR	1077114	Argument	value		1076821	0					
ANR	1077115	Identifier	value		1076821	0					
ANR	1077116	Argument	'/'		1076821	1					
ANR	1077117	PrimaryExpression	'/'		1076821	0					
ANR	1077118	CompoundStatement		46:30:1010:1010	1076821	1					
ANR	1077119	ExpressionStatement	"node -> i_value = r_num_get ( cfg -> num , value )"	427:6:9862:9905	1076821	0	True				
ANR	1077120	AssignmentExpression	"node -> i_value = r_num_get ( cfg -> num , value )"		1076821	0		=			
ANR	1077121	PtrMemberAccess	node -> i_value		1076821	0					
ANR	1077122	Identifier	node		1076821	0					
ANR	1077123	Identifier	i_value		1076821	1					
ANR	1077124	CallExpression	"r_num_get ( cfg -> num , value )"		1076821	1					
ANR	1077125	Callee	r_num_get		1076821	0					
ANR	1077126	Identifier	r_num_get		1076821	0					
ANR	1077127	ArgumentList	cfg -> num		1076821	1					
ANR	1077128	Argument	cfg -> num		1076821	0					
ANR	1077129	PtrMemberAccess	cfg -> num		1076821	0					
ANR	1077130	Identifier	cfg		1076821	0					
ANR	1077131	Identifier	num		1076821	1					
ANR	1077132	Argument	value		1076821	1					
ANR	1077133	Identifier	value		1076821	0					
ANR	1077134	ElseStatement	else		1076821	0					
ANR	1077135	CompoundStatement		48:12:1075:1075	1076821	0					
ANR	1077136	ExpressionStatement	"node -> i_value = r_num_math ( cfg -> num , value )"	429:6:9927:9971	1076821	0	True				
ANR	1077137	AssignmentExpression	"node -> i_value = r_num_math ( cfg -> num , value )"		1076821	0		=			
ANR	1077138	PtrMemberAccess	node -> i_value		1076821	0					
ANR	1077139	Identifier	node		1076821	0					
ANR	1077140	Identifier	i_value		1076821	1					
ANR	1077141	CallExpression	"r_num_math ( cfg -> num , value )"		1076821	1					
ANR	1077142	Callee	r_num_math		1076821	0					
ANR	1077143	Identifier	r_num_math		1076821	0					
ANR	1077144	ArgumentList	cfg -> num		1076821	1					
ANR	1077145	Argument	cfg -> num		1076821	0					
ANR	1077146	PtrMemberAccess	cfg -> num		1076821	0					
ANR	1077147	Identifier	cfg		1076821	0					
ANR	1077148	Identifier	num		1076821	1					
ANR	1077149	Argument	value		1076821	1					
ANR	1077150	Identifier	value		1076821	0					
ANR	1077151	ElseStatement	else		1076821	0					
ANR	1077152	CompoundStatement		51:11:1147:1147	1076821	0					
ANR	1077153	ExpressionStatement	node -> i_value = 0	432:5:9998:10015	1076821	0	True				
ANR	1077154	AssignmentExpression	node -> i_value = 0		1076821	0		=			
ANR	1077155	PtrMemberAccess	node -> i_value		1076821	0					
ANR	1077156	Identifier	node		1076821	0					
ANR	1077157	Identifier	i_value		1076821	1					
ANR	1077158	PrimaryExpression	0		1076821	1					
ANR	1077159	ExpressionStatement	node -> flags |= CN_INT	434:4:10027:10048	1076821	5	True				
ANR	1077160	AssignmentExpression	node -> flags |= CN_INT		1076821	0		|=			
ANR	1077161	PtrMemberAccess	node -> flags		1076821	0					
ANR	1077162	Identifier	node		1076821	0					
ANR	1077163	Identifier	flags		1076821	1					
ANR	1077164	Identifier	CN_INT		1076821	1					
ANR	1077165	ElseStatement	else		1076821	0					
ANR	1077166	CompoundStatement		57:8:1223:1223	1076821	0					
ANR	1077167	ExpressionStatement	oi = UT64_MAX	438:2:10099:10112	1076821	0	True				
ANR	1077168	AssignmentExpression	oi = UT64_MAX		1076821	0		=			
ANR	1077169	Identifier	oi		1076821	0					
ANR	1077170	Identifier	UT64_MAX		1076821	1					
ANR	1077171	IfStatement	if ( ! cfg -> lock )		1076821	1					
ANR	1077172	Condition	! cfg -> lock	439:6:10120:10129	1076821	0	True				
ANR	1077173	UnaryOperationExpression	! cfg -> lock		1076821	0					
ANR	1077174	UnaryOperator	!		1076821	0					
ANR	1077175	PtrMemberAccess	cfg -> lock		1076821	1					
ANR	1077176	Identifier	cfg		1076821	0					
ANR	1077177	Identifier	lock		1076821	1					
ANR	1077178	CompoundStatement		59:18:1288:1288	1076821	1					
ANR	1077179	ExpressionStatement	"node = r_config_node_new ( name , value )"	440:3:10137:10175	1076821	0	True				
ANR	1077180	AssignmentExpression	"node = r_config_node_new ( name , value )"		1076821	0		=			
ANR	1077181	Identifier	node		1076821	0					
ANR	1077182	CallExpression	"r_config_node_new ( name , value )"		1076821	1					
ANR	1077183	Callee	r_config_node_new		1076821	0					
ANR	1077184	Identifier	r_config_node_new		1076821	0					
ANR	1077185	ArgumentList	name		1076821	1					
ANR	1077186	Argument	name		1076821	0					
ANR	1077187	Identifier	name		1076821	0					
ANR	1077188	Argument	value		1076821	1					
ANR	1077189	Identifier	value		1076821	0					
ANR	1077190	IfStatement	if ( node )		1076821	1					
ANR	1077191	Condition	node	441:7:10184:10187	1076821	0	True				
ANR	1077192	Identifier	node		1076821	0					
ANR	1077193	CompoundStatement		61:13:1346:1346	1076821	1					
ANR	1077194	IfStatement	if ( value && is_bool ( value ) )		1076821	0					
ANR	1077195	Condition	value && is_bool ( value )	442:8:10200:10223	1076821	0	True				
ANR	1077196	AndExpression	value && is_bool ( value )		1076821	0		&&			
ANR	1077197	Identifier	value		1076821	0					
ANR	1077198	CallExpression	is_bool ( value )		1076821	1					
ANR	1077199	Callee	is_bool		1076821	0					
ANR	1077200	Identifier	is_bool		1076821	0					
ANR	1077201	ArgumentList	value		1076821	1					
ANR	1077202	Argument	value		1076821	0					
ANR	1077203	Identifier	value		1076821	0					
ANR	1077204	CompoundStatement		62:34:1382:1382	1076821	1					
ANR	1077205	ExpressionStatement	node -> flags |= CN_BOOL	443:5:10233:10255	1076821	0	True				
ANR	1077206	AssignmentExpression	node -> flags |= CN_BOOL		1076821	0		|=			
ANR	1077207	PtrMemberAccess	node -> flags		1076821	0					
ANR	1077208	Identifier	node		1076821	0					
ANR	1077209	Identifier	flags		1076821	1					
ANR	1077210	Identifier	CN_BOOL		1076821	1					
ANR	1077211	ExpressionStatement	node -> i_value = r_str_is_true ( value ) ? 1 : 0	444:5:10262:10305	1076821	1	True				
ANR	1077212	AssignmentExpression	node -> i_value = r_str_is_true ( value ) ? 1 : 0		1076821	0		=			
ANR	1077213	PtrMemberAccess	node -> i_value		1076821	0					
ANR	1077214	Identifier	node		1076821	0					
ANR	1077215	Identifier	i_value		1076821	1					
ANR	1077216	ConditionalExpression	r_str_is_true ( value ) ? 1 : 0		1076821	1					
ANR	1077217	Condition	r_str_is_true ( value )		1076821	0					
ANR	1077218	CallExpression	r_str_is_true ( value )		1076821	0					
ANR	1077219	Callee	r_str_is_true		1076821	0					
ANR	1077220	Identifier	r_str_is_true		1076821	0					
ANR	1077221	ArgumentList	value		1076821	1					
ANR	1077222	Argument	value		1076821	0					
ANR	1077223	Identifier	value		1076821	0					
ANR	1077224	PrimaryExpression	1		1076821	1					
ANR	1077225	PrimaryExpression	0		1076821	2					
ANR	1077226	ExpressionStatement	"ht_pp_insert ( cfg -> ht , node -> name , node )"	446:4:10317:10357	1076821	1	True				
ANR	1077227	CallExpression	"ht_pp_insert ( cfg -> ht , node -> name , node )"		1076821	0					
ANR	1077228	Callee	ht_pp_insert		1076821	0					
ANR	1077229	Identifier	ht_pp_insert		1076821	0					
ANR	1077230	ArgumentList	cfg -> ht		1076821	1					
ANR	1077231	Argument	cfg -> ht		1076821	0					
ANR	1077232	PtrMemberAccess	cfg -> ht		1076821	0					
ANR	1077233	Identifier	cfg		1076821	0					
ANR	1077234	Identifier	ht		1076821	1					
ANR	1077235	Argument	node -> name		1076821	1					
ANR	1077236	PtrMemberAccess	node -> name		1076821	0					
ANR	1077237	Identifier	node		1076821	0					
ANR	1077238	Identifier	name		1076821	1					
ANR	1077239	Argument	node		1076821	2					
ANR	1077240	Identifier	node		1076821	0					
ANR	1077241	ExpressionStatement	"r_list_append ( cfg -> nodes , node )"	447:4:10363:10395	1076821	2	True				
ANR	1077242	CallExpression	"r_list_append ( cfg -> nodes , node )"		1076821	0					
ANR	1077243	Callee	r_list_append		1076821	0					
ANR	1077244	Identifier	r_list_append		1076821	0					
ANR	1077245	ArgumentList	cfg -> nodes		1076821	1					
ANR	1077246	Argument	cfg -> nodes		1076821	0					
ANR	1077247	PtrMemberAccess	cfg -> nodes		1076821	0					
ANR	1077248	Identifier	cfg		1076821	0					
ANR	1077249	Identifier	nodes		1076821	1					
ANR	1077250	Argument	node		1076821	1					
ANR	1077251	Identifier	node		1076821	0					
ANR	1077252	ExpressionStatement	cfg -> n_nodes ++	448:4:10401:10415	1076821	3	True				
ANR	1077253	PostIncDecOperationExpression	cfg -> n_nodes ++		1076821	0					
ANR	1077254	PtrMemberAccess	cfg -> n_nodes		1076821	0					
ANR	1077255	Identifier	cfg		1076821	0					
ANR	1077256	Identifier	n_nodes		1076821	1					
ANR	1077257	IncDec	++		1076821	1					
ANR	1077258	ElseStatement	else		1076821	0					
ANR	1077259	CompoundStatement		69:10:1583:1583	1076821	0					
ANR	1077260	ExpressionStatement	"eprintf ( ""r_config_set: unable to create a new RConfigNode\\n"" )"	450:4:10433:10495	1076821	0	True				
ANR	1077261	CallExpression	"eprintf ( ""r_config_set: unable to create a new RConfigNode\\n"" )"		1076821	0					
ANR	1077262	Callee	eprintf		1076821	0					
ANR	1077263	Identifier	eprintf		1076821	0					
ANR	1077264	ArgumentList	"""r_config_set: unable to create a new RConfigNode\\n"""		1076821	1					
ANR	1077265	Argument	"""r_config_set: unable to create a new RConfigNode\\n"""		1076821	0					
ANR	1077266	PrimaryExpression	"""r_config_set: unable to create a new RConfigNode\\n"""		1076821	0					
ANR	1077267	ElseStatement	else		1076821	0					
ANR	1077268	CompoundStatement		72:9:1667:1667	1076821	0					
ANR	1077269	ExpressionStatement	"eprintf ( ""r_config_set: variable '%s' not found\\n"" , name )"	453:3:10516:10573	1076821	0	True				
ANR	1077270	CallExpression	"eprintf ( ""r_config_set: variable '%s' not found\\n"" , name )"		1076821	0					
ANR	1077271	Callee	eprintf		1076821	0					
ANR	1077272	Identifier	eprintf		1076821	0					
ANR	1077273	ArgumentList	"""r_config_set: variable '%s' not found\\n"""		1076821	1					
ANR	1077274	Argument	"""r_config_set: variable '%s' not found\\n"""		1076821	0					
ANR	1077275	PrimaryExpression	"""r_config_set: variable '%s' not found\\n"""		1076821	0					
ANR	1077276	Argument	name		1076821	1					
ANR	1077277	Identifier	name		1076821	0					
ANR	1077278	IfStatement	if ( node && node -> setter )		1076821	7					
ANR	1077279	Condition	node && node -> setter	457:5:10588:10607	1076821	0	True				
ANR	1077280	AndExpression	node && node -> setter		1076821	0		&&			
ANR	1077281	Identifier	node		1076821	0					
ANR	1077282	PtrMemberAccess	node -> setter		1076821	1					
ANR	1077283	Identifier	node		1076821	0					
ANR	1077284	Identifier	setter		1076821	1					
ANR	1077285	CompoundStatement		77:27:1766:1766	1076821	1					
ANR	1077286	IfStatement	"if ( ! node -> setter ( cfg -> user , node ) )"		1076821	0					
ANR	1077287	Condition	"! node -> setter ( cfg -> user , node )"	458:6:10618:10648	1076821	0	True				
ANR	1077288	UnaryOperationExpression	"! node -> setter ( cfg -> user , node )"		1076821	0					
ANR	1077289	UnaryOperator	!		1076821	0					
ANR	1077290	CallExpression	"node -> setter ( cfg -> user , node )"		1076821	1					
ANR	1077291	Callee	node -> setter		1076821	0					
ANR	1077292	PtrMemberAccess	node -> setter		1076821	0					
ANR	1077293	Identifier	node		1076821	0					
ANR	1077294	Identifier	setter		1076821	1					
ANR	1077295	ArgumentList	cfg -> user		1076821	1					
ANR	1077296	Argument	cfg -> user		1076821	0					
ANR	1077297	PtrMemberAccess	cfg -> user		1076821	0					
ANR	1077298	Identifier	cfg		1076821	0					
ANR	1077299	Identifier	user		1076821	1					
ANR	1077300	Argument	node		1076821	1					
ANR	1077301	Identifier	node		1076821	0					
ANR	1077302	CompoundStatement		78:39:1807:1807	1076821	1					
ANR	1077303	IfStatement	if ( oi != UT64_MAX )		1076821	0					
ANR	1077304	Condition	oi != UT64_MAX	459:7:10660:10673	1076821	0	True				
ANR	1077305	EqualityExpression	oi != UT64_MAX		1076821	0		!=			
ANR	1077306	Identifier	oi		1076821	0					
ANR	1077307	Identifier	UT64_MAX		1076821	1					
ANR	1077308	CompoundStatement		79:23:1832:1832	1076821	1					
ANR	1077309	ExpressionStatement	node -> i_value = oi	460:4:10682:10700	1076821	0	True				
ANR	1077310	AssignmentExpression	node -> i_value = oi		1076821	0		=			
ANR	1077311	PtrMemberAccess	node -> i_value		1076821	0					
ANR	1077312	Identifier	node		1076821	0					
ANR	1077313	Identifier	i_value		1076821	1					
ANR	1077314	Identifier	oi		1076821	1					
ANR	1077315	ExpressionStatement	free ( node -> value )	462:3:10710:10728	1076821	1	True				
ANR	1077316	CallExpression	free ( node -> value )		1076821	0					
ANR	1077317	Callee	free		1076821	0					
ANR	1077318	Identifier	free		1076821	0					
ANR	1077319	ArgumentList	node -> value		1076821	1					
ANR	1077320	Argument	node -> value		1076821	0					
ANR	1077321	PtrMemberAccess	node -> value		1076821	0					
ANR	1077322	Identifier	node		1076821	0					
ANR	1077323	Identifier	value		1076821	1					
ANR	1077324	ExpressionStatement	"node -> value = strdup ( ov ? ov : """" )"	463:3:10733:10766	1076821	2	True				
ANR	1077325	AssignmentExpression	"node -> value = strdup ( ov ? ov : """" )"		1076821	0		=			
ANR	1077326	PtrMemberAccess	node -> value		1076821	0					
ANR	1077327	Identifier	node		1076821	0					
ANR	1077328	Identifier	value		1076821	1					
ANR	1077329	CallExpression	"strdup ( ov ? ov : """" )"		1076821	1					
ANR	1077330	Callee	strdup		1076821	0					
ANR	1077331	Identifier	strdup		1076821	0					
ANR	1077332	ArgumentList	"ov ? ov : """""		1076821	1					
ANR	1077333	Argument	"ov ? ov : """""		1076821	0					
ANR	1077334	ConditionalExpression	"ov ? ov : """""		1076821	0					
ANR	1077335	Condition	ov		1076821	0					
ANR	1077336	Identifier	ov		1076821	0					
ANR	1077337	Identifier	ov		1076821	1					
ANR	1077338	PrimaryExpression	""""""		1076821	2					
ANR	1077339	ExpressionStatement	free ( ov )	464:3:10771:10780	1076821	3	True				
ANR	1077340	CallExpression	free ( ov )		1076821	0					
ANR	1077341	Callee	free		1076821	0					
ANR	1077342	Identifier	free		1076821	0					
ANR	1077343	ArgumentList	ov		1076821	1					
ANR	1077344	Argument	ov		1076821	0					
ANR	1077345	Identifier	ov		1076821	0					
ANR	1077346	ReturnStatement	return NULL ;	465:3:10785:10796	1076821	4	True				
ANR	1077347	Identifier	NULL		1076821	0					
ANR	1077348	Label	beach :	468:0:10805:10810	1076821	8	True				
ANR	1077349	Identifier	beach		1076821	0					
ANR	1077350	ExpressionStatement	free ( ov )	469:1:10813:10822	1076821	9	True				
ANR	1077351	CallExpression	free ( ov )		1076821	0					
ANR	1077352	Callee	free		1076821	0					
ANR	1077353	Identifier	free		1076821	0					
ANR	1077354	ArgumentList	ov		1076821	1					
ANR	1077355	Argument	ov		1076821	0					
ANR	1077356	Identifier	ov		1076821	0					
ANR	1077357	ReturnStatement	return node ;	470:1:10825:10836	1076821	10	True				
ANR	1077358	Identifier	node		1076821	0					
ANR	1077359	ReturnType	R_API RConfigNode *		1076821	1					
ANR	1077360	Identifier	r_config_set		1076821	2					
ANR	1077361	ParameterList	"RConfig * cfg , const char * name , const char * value"		1076821	3					
ANR	1077362	Parameter	RConfig * cfg	381:32:8792:8803	1076821	0	True				
ANR	1077363	ParameterType	RConfig *		1076821	0					
ANR	1077364	Identifier	cfg		1076821	1					
ANR	1077365	Parameter	const char * name	381:46:8806:8821	1076821	1	True				
ANR	1077366	ParameterType	const char *		1076821	0					
ANR	1077367	Identifier	name		1076821	1					
ANR	1077368	Parameter	const char * value	381:64:8824:8840	1076821	2	True				
ANR	1077369	ParameterType	const char *		1076821	0					
ANR	1077370	Identifier	value		1076821	1					
ANR	1077371	CFGEntryNode	ENTRY		1076821		True				
ANR	1077372	CFGExitNode	EXIT		1076821		True				
ANR	1077373	Symbol	CN_RO		1076821						
ANR	1077374	Symbol	node -> flags		1076821						
ANR	1077375	Symbol	r_str_is_true		1076821						
ANR	1077376	Symbol	strchr		1076821						
ANR	1077377	Symbol	CN_BOOL		1076821						
ANR	1077378	Symbol	is_bool		1076821						
ANR	1077379	Symbol	r_num_math		1076821						
ANR	1077380	Symbol	tmp		1076821						
ANR	1077381	Symbol	oi		1076821						
ANR	1077382	Symbol	* node		1076821						
ANR	1077383	Symbol	r_num_get		1076821						
ANR	1077384	Symbol	cfg -> n_nodes		1076821						
ANR	1077385	Symbol	cfg -> num		1076821						
ANR	1077386	Symbol	UT64_MAX		1076821						
ANR	1077387	Symbol	value		1076821						
ANR	1077388	Symbol	cfg -> ht		1076821						
ANR	1077389	Symbol	cfg -> nodes		1076821						
ANR	1077390	Symbol	IS_NULLSTR		1076821						
ANR	1077391	Symbol	r_str_bool		1076821						
ANR	1077392	Symbol	b		1076821						
ANR	1077393	Symbol	NULL		1076821						
ANR	1077394	Symbol	cfg -> lock		1076821						
ANR	1077395	Symbol	cfg		1076821						
ANR	1077396	Symbol	ov		1076821						
ANR	1077397	Symbol	r_config_node_new		1076821						
ANR	1077398	Symbol	node -> i_value		1076821						
ANR	1077399	Symbol	node -> value		1076821						
ANR	1077400	Symbol	IS_DIGIT		1076821						
ANR	1077401	Symbol	node		1076821						
ANR	1077402	Symbol	* cfg		1076821						
ANR	1077403	Symbol	node -> name		1076821						
ANR	1077404	Symbol	node -> setter		1076821						
ANR	1077405	Symbol	* value		1076821						
ANR	1077406	Symbol	CN_INT		1076821						
ANR	1077407	Symbol	name		1076821						
ANR	1077408	Symbol	strdup		1076821						
ANR	1077409	Symbol	r_config_node_get		1076821						
ANR	1077410	Symbol	cfg -> user		1076821						
ANR	1077411	Function	r_config_desc	476:6:10971:11142							
ANR	1077412	FunctionDef	"r_config_desc (RConfig * cfg , const char * name , const char * desc)"		1077411	0					
ANR	1077413	CompoundStatement		476:82:11047:11142	1077411	0					
ANR	1077414	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , name ) ;"	477:1:11050:11099	1077411	0	True				
ANR	1077415	IdentifierDecl	"* node = r_config_node_get ( cfg , name )"		1077411	0					
ANR	1077416	IdentifierDeclType	RConfigNode *		1077411	0					
ANR	1077417	Identifier	node		1077411	1					
ANR	1077418	AssignmentExpression	"* node = r_config_node_get ( cfg , name )"		1077411	2		=			
ANR	1077419	Identifier	node		1077411	0					
ANR	1077420	CallExpression	"r_config_node_get ( cfg , name )"		1077411	1					
ANR	1077421	Callee	r_config_node_get		1077411	0					
ANR	1077422	Identifier	r_config_node_get		1077411	0					
ANR	1077423	ArgumentList	cfg		1077411	1					
ANR	1077424	Argument	cfg		1077411	0					
ANR	1077425	Identifier	cfg		1077411	0					
ANR	1077426	Argument	name		1077411	1					
ANR	1077427	Identifier	name		1077411	0					
ANR	1077428	ReturnStatement	"return r_config_node_desc ( node , desc ) ;"	478:1:11102:11140	1077411	1	True				
ANR	1077429	CallExpression	"r_config_node_desc ( node , desc )"		1077411	0					
ANR	1077430	Callee	r_config_node_desc		1077411	0					
ANR	1077431	Identifier	r_config_node_desc		1077411	0					
ANR	1077432	ArgumentList	node		1077411	1					
ANR	1077433	Argument	node		1077411	0					
ANR	1077434	Identifier	node		1077411	0					
ANR	1077435	Argument	desc		1077411	1					
ANR	1077436	Identifier	desc		1077411	0					
ANR	1077437	ReturnType	const char *		1077411	1					
ANR	1077438	Identifier	r_config_desc		1077411	2					
ANR	1077439	ParameterList	"RConfig * cfg , const char * name , const char * desc"		1077411	3					
ANR	1077440	Parameter	RConfig * cfg	476:32:10997:11008	1077411	0	True				
ANR	1077441	ParameterType	RConfig *		1077411	0					
ANR	1077442	Identifier	cfg		1077411	1					
ANR	1077443	Parameter	const char * name	476:46:11011:11026	1077411	1	True				
ANR	1077444	ParameterType	const char *		1077411	0					
ANR	1077445	Identifier	name		1077411	1					
ANR	1077446	Parameter	const char * desc	476:64:11029:11044	1077411	2	True				
ANR	1077447	ParameterType	const char *		1077411	0					
ANR	1077448	Identifier	desc		1077411	1					
ANR	1077449	CFGEntryNode	ENTRY		1077411		True				
ANR	1077450	CFGExitNode	EXIT		1077411		True				
ANR	1077451	Symbol	node		1077411						
ANR	1077452	Symbol	cfg		1077411						
ANR	1077453	Symbol	r_config_node_desc		1077411						
ANR	1077454	Symbol	name		1077411						
ANR	1077455	Symbol	r_config_node_get		1077411						
ANR	1077456	Symbol	desc		1077411						
ANR	1077457	Function	r_config_node_desc	481:6:11151:11344							
ANR	1077458	FunctionDef	"r_config_node_desc (RConfigNode * node , const char * desc)"		1077457	0					
ANR	1077459	CompoundStatement		481:74:11219:11344	1077457	0					
ANR	1077460	ExpressionStatement	"r_return_val_if_fail ( node , NULL )"	482:1:11222:11255	1077457	0	True				
ANR	1077461	CallExpression	"r_return_val_if_fail ( node , NULL )"		1077457	0					
ANR	1077462	Callee	r_return_val_if_fail		1077457	0					
ANR	1077463	Identifier	r_return_val_if_fail		1077457	0					
ANR	1077464	ArgumentList	node		1077457	1					
ANR	1077465	Argument	node		1077457	0					
ANR	1077466	Identifier	node		1077457	0					
ANR	1077467	Argument	NULL		1077457	1					
ANR	1077468	Identifier	NULL		1077457	0					
ANR	1077469	IfStatement	if ( desc )		1077457	1					
ANR	1077470	Condition	desc	483:5:11262:11265	1077457	0	True				
ANR	1077471	Identifier	desc		1077457	0					
ANR	1077472	CompoundStatement		3:11:48:48	1077457	1					
ANR	1077473	ExpressionStatement	free ( node -> desc )	484:2:11272:11289	1077457	0	True				
ANR	1077474	CallExpression	free ( node -> desc )		1077457	0					
ANR	1077475	Callee	free		1077457	0					
ANR	1077476	Identifier	free		1077457	0					
ANR	1077477	ArgumentList	node -> desc		1077457	1					
ANR	1077478	Argument	node -> desc		1077457	0					
ANR	1077479	PtrMemberAccess	node -> desc		1077457	0					
ANR	1077480	Identifier	node		1077457	0					
ANR	1077481	Identifier	desc		1077457	1					
ANR	1077482	ExpressionStatement	node -> desc = strdup ( desc )	485:2:11293:11319	1077457	1	True				
ANR	1077483	AssignmentExpression	node -> desc = strdup ( desc )		1077457	0		=			
ANR	1077484	PtrMemberAccess	node -> desc		1077457	0					
ANR	1077485	Identifier	node		1077457	0					
ANR	1077486	Identifier	desc		1077457	1					
ANR	1077487	CallExpression	strdup ( desc )		1077457	1					
ANR	1077488	Callee	strdup		1077457	0					
ANR	1077489	Identifier	strdup		1077457	0					
ANR	1077490	ArgumentList	desc		1077457	1					
ANR	1077491	Argument	desc		1077457	0					
ANR	1077492	Identifier	desc		1077457	0					
ANR	1077493	ReturnStatement	return node -> desc ;	487:1:11325:11342	1077457	2	True				
ANR	1077494	PtrMemberAccess	node -> desc		1077457	0					
ANR	1077495	Identifier	node		1077457	0					
ANR	1077496	Identifier	desc		1077457	1					
ANR	1077497	ReturnType	const char *		1077457	1					
ANR	1077498	Identifier	r_config_node_desc		1077457	2					
ANR	1077499	ParameterList	"RConfigNode * node , const char * desc"		1077457	3					
ANR	1077500	Parameter	RConfigNode * node	481:37:11182:11198	1077457	0	True				
ANR	1077501	ParameterType	RConfigNode *		1077457	0					
ANR	1077502	Identifier	node		1077457	1					
ANR	1077503	Parameter	const char * desc	481:56:11201:11216	1077457	1	True				
ANR	1077504	ParameterType	const char *		1077457	0					
ANR	1077505	Identifier	desc		1077457	1					
ANR	1077506	CFGEntryNode	ENTRY		1077457		True				
ANR	1077507	CFGExitNode	EXIT		1077457		True				
ANR	1077508	Symbol	node		1077457						
ANR	1077509	Symbol	NULL		1077457						
ANR	1077510	Symbol	node -> desc		1077457						
ANR	1077511	Symbol	* node		1077457						
ANR	1077512	Symbol	strdup		1077457						
ANR	1077513	Symbol	desc		1077457						
ANR	1077514	Function	r_config_rm	490:0:11347:11599							
ANR	1077515	FunctionDef	"r_config_rm (RConfig * cfg , const char * name)"		1077514	0					
ANR	1077516	CompoundStatement		490:55:11402:11599	1077514	0					
ANR	1077517	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , name ) ;"	491:1:11405:11454	1077514	0	True				
ANR	1077518	IdentifierDecl	"* node = r_config_node_get ( cfg , name )"		1077514	0					
ANR	1077519	IdentifierDeclType	RConfigNode *		1077514	0					
ANR	1077520	Identifier	node		1077514	1					
ANR	1077521	AssignmentExpression	"* node = r_config_node_get ( cfg , name )"		1077514	2		=			
ANR	1077522	Identifier	node		1077514	0					
ANR	1077523	CallExpression	"r_config_node_get ( cfg , name )"		1077514	1					
ANR	1077524	Callee	r_config_node_get		1077514	0					
ANR	1077525	Identifier	r_config_node_get		1077514	0					
ANR	1077526	ArgumentList	cfg		1077514	1					
ANR	1077527	Argument	cfg		1077514	0					
ANR	1077528	Identifier	cfg		1077514	0					
ANR	1077529	Argument	name		1077514	1					
ANR	1077530	Identifier	name		1077514	0					
ANR	1077531	IfStatement	if ( node )		1077514	1					
ANR	1077532	Condition	node	492:5:11461:11464	1077514	0	True				
ANR	1077533	Identifier	node		1077514	0					
ANR	1077534	CompoundStatement		3:11:64:64	1077514	1					
ANR	1077535	ExpressionStatement	"ht_pp_delete ( cfg -> ht , node -> name )"	493:2:11471:11505	1077514	0	True				
ANR	1077536	CallExpression	"ht_pp_delete ( cfg -> ht , node -> name )"		1077514	0					
ANR	1077537	Callee	ht_pp_delete		1077514	0					
ANR	1077538	Identifier	ht_pp_delete		1077514	0					
ANR	1077539	ArgumentList	cfg -> ht		1077514	1					
ANR	1077540	Argument	cfg -> ht		1077514	0					
ANR	1077541	PtrMemberAccess	cfg -> ht		1077514	0					
ANR	1077542	Identifier	cfg		1077514	0					
ANR	1077543	Identifier	ht		1077514	1					
ANR	1077544	Argument	node -> name		1077514	1					
ANR	1077545	PtrMemberAccess	node -> name		1077514	0					
ANR	1077546	Identifier	node		1077514	0					
ANR	1077547	Identifier	name		1077514	1					
ANR	1077548	ExpressionStatement	"r_list_delete_data ( cfg -> nodes , node )"	494:2:11509:11546	1077514	1	True				
ANR	1077549	CallExpression	"r_list_delete_data ( cfg -> nodes , node )"		1077514	0					
ANR	1077550	Callee	r_list_delete_data		1077514	0					
ANR	1077551	Identifier	r_list_delete_data		1077514	0					
ANR	1077552	ArgumentList	cfg -> nodes		1077514	1					
ANR	1077553	Argument	cfg -> nodes		1077514	0					
ANR	1077554	PtrMemberAccess	cfg -> nodes		1077514	0					
ANR	1077555	Identifier	cfg		1077514	0					
ANR	1077556	Identifier	nodes		1077514	1					
ANR	1077557	Argument	node		1077514	1					
ANR	1077558	Identifier	node		1077514	0					
ANR	1077559	ExpressionStatement	cfg -> n_nodes --	495:2:11550:11564	1077514	2	True				
ANR	1077560	PostIncDecOperationExpression	cfg -> n_nodes --		1077514	0					
ANR	1077561	PtrMemberAccess	cfg -> n_nodes		1077514	0					
ANR	1077562	Identifier	cfg		1077514	0					
ANR	1077563	Identifier	n_nodes		1077514	1					
ANR	1077564	IncDec	--		1077514	1					
ANR	1077565	ReturnStatement	return true ;	496:2:11568:11579	1077514	3	True				
ANR	1077566	Identifier	true		1077514	0					
ANR	1077567	ReturnStatement	return false ;	498:1:11585:11597	1077514	2	True				
ANR	1077568	Identifier	false		1077514	0					
ANR	1077569	ReturnType	R_API bool		1077514	1					
ANR	1077570	Identifier	r_config_rm		1077514	2					
ANR	1077571	ParameterList	"RConfig * cfg , const char * name"		1077514	3					
ANR	1077572	Parameter	RConfig * cfg	490:23:11370:11381	1077514	0	True				
ANR	1077573	ParameterType	RConfig *		1077514	0					
ANR	1077574	Identifier	cfg		1077514	1					
ANR	1077575	Parameter	const char * name	490:37:11384:11399	1077514	1	True				
ANR	1077576	ParameterType	const char *		1077514	0					
ANR	1077577	Identifier	name		1077514	1					
ANR	1077578	CFGEntryNode	ENTRY		1077514		True				
ANR	1077579	CFGExitNode	EXIT		1077514		True				
ANR	1077580	Symbol	node		1077514						
ANR	1077581	Symbol	* cfg		1077514						
ANR	1077582	Symbol	node -> name		1077514						
ANR	1077583	Symbol	cfg		1077514						
ANR	1077584	Symbol	name		1077514						
ANR	1077585	Symbol	true		1077514						
ANR	1077586	Symbol	false		1077514						
ANR	1077587	Symbol	* node		1077514						
ANR	1077588	Symbol	cfg -> n_nodes		1077514						
ANR	1077589	Symbol	r_config_node_get		1077514						
ANR	1077590	Symbol	cfg -> ht		1077514						
ANR	1077591	Symbol	cfg -> nodes		1077514						
ANR	1077592	Function	r_config_node_value_format_i	501:0:11602:11947							
ANR	1077593	FunctionDef	"r_config_node_value_format_i (char * buf , size_t buf_size , const ut64 i , R_NULLABLE RConfigNode * node)"		1077592	0					
ANR	1077594	CompoundStatement		501:112:11714:11947	1077592	0					
ANR	1077595	IfStatement	if ( node && node -> flags & CN_BOOL )		1077592	0					
ANR	1077596	Condition	node && node -> flags & CN_BOOL	502:5:11721:11749	1077592	0	True				
ANR	1077597	AndExpression	node && node -> flags & CN_BOOL		1077592	0		&&			
ANR	1077598	Identifier	node		1077592	0					
ANR	1077599	BitAndExpression	node -> flags & CN_BOOL		1077592	1		&			
ANR	1077600	PtrMemberAccess	node -> flags		1077592	0					
ANR	1077601	Identifier	node		1077592	0					
ANR	1077602	Identifier	flags		1077592	1					
ANR	1077603	Identifier	CN_BOOL		1077592	1					
ANR	1077604	CompoundStatement		2:36:37:37	1077592	1					
ANR	1077605	ExpressionStatement	"r_str_ncpy ( buf , r_str_bool ( ( int ) i ) , buf_size )"	503:2:11756:11804	1077592	0	True				
ANR	1077606	CallExpression	"r_str_ncpy ( buf , r_str_bool ( ( int ) i ) , buf_size )"		1077592	0					
ANR	1077607	Callee	r_str_ncpy		1077592	0					
ANR	1077608	Identifier	r_str_ncpy		1077592	0					
ANR	1077609	ArgumentList	buf		1077592	1					
ANR	1077610	Argument	buf		1077592	0					
ANR	1077611	Identifier	buf		1077592	0					
ANR	1077612	Argument	r_str_bool ( ( int ) i )		1077592	1					
ANR	1077613	CallExpression	r_str_bool ( ( int ) i )		1077592	0					
ANR	1077614	Callee	r_str_bool		1077592	0					
ANR	1077615	Identifier	r_str_bool		1077592	0					
ANR	1077616	ArgumentList	( int ) i		1077592	1					
ANR	1077617	Argument	( int ) i		1077592	0					
ANR	1077618	CastExpression	( int ) i		1077592	0					
ANR	1077619	CastTarget	int		1077592	0					
ANR	1077620	Identifier	i		1077592	1					
ANR	1077621	Argument	buf_size		1077592	2					
ANR	1077622	Identifier	buf_size		1077592	0					
ANR	1077623	ReturnStatement	return ;	504:2:11808:11814	1077592	1	True				
ANR	1077624	IfStatement	if ( i < 1024 )		1077592	1					
ANR	1077625	Condition	i < 1024	506:5:11824:11831	1077592	0	True				
ANR	1077626	RelationalExpression	i < 1024		1077592	0		<			
ANR	1077627	Identifier	i		1077592	0					
ANR	1077628	PrimaryExpression	1024		1077592	1					
ANR	1077629	CompoundStatement		6:15:119:119	1077592	1					
ANR	1077630	Statement	snprintf	507:2:11838:11845	1077592	0	True				
ANR	1077631	Statement	(	507:11:11847:11847	1077592	1	True				
ANR	1077632	Statement	buf	507:12:11848:11850	1077592	2	True				
ANR	1077633	Statement	","	507:15:11851:11851	1077592	3	True				
ANR	1077634	Statement	buf_size	507:17:11853:11860	1077592	4	True				
ANR	1077635	Statement	","	507:25:11861:11861	1077592	5	True				
ANR	1077636	Statement	"""%"""	507:27:11863:11865	1077592	6	True				
ANR	1077637	Statement	PFMT64d	507:31:11867:11873	1077592	7	True				
ANR	1077638	Statement	""""""	507:39:11875:11876	1077592	8	True				
ANR	1077639	Statement	","	507:41:11877:11877	1077592	9	True				
ANR	1077640	Statement	i	507:43:11879:11879	1077592	10	True				
ANR	1077641	Statement	)	507:44:11880:11880	1077592	11	True				
ANR	1077642	ExpressionStatement		507:45:11881:11881	1077592	12	True				
ANR	1077643	ElseStatement	else		1077592	0					
ANR	1077644	CompoundStatement		8:8:176:176	1077592	0					
ANR	1077645	Statement	snprintf	509:2:11895:11902	1077592	0	True				
ANR	1077646	Statement	(	509:11:11904:11904	1077592	1	True				
ANR	1077647	Statement	buf	509:12:11905:11907	1077592	2	True				
ANR	1077648	Statement	","	509:15:11908:11908	1077592	3	True				
ANR	1077649	Statement	buf_size	509:17:11910:11917	1077592	4	True				
ANR	1077650	Statement	","	509:25:11918:11918	1077592	5	True				
ANR	1077651	Statement	"""0x%08"""	509:27:11920:11926	1077592	6	True				
ANR	1077652	Statement	PFMT64x	509:35:11928:11934	1077592	7	True				
ANR	1077653	Statement	""""""	509:43:11936:11937	1077592	8	True				
ANR	1077654	Statement	","	509:45:11938:11938	1077592	9	True				
ANR	1077655	Statement	i	509:47:11940:11940	1077592	10	True				
ANR	1077656	Statement	)	509:48:11941:11941	1077592	11	True				
ANR	1077657	ExpressionStatement		509:49:11942:11942	1077592	12	True				
ANR	1077658	ReturnType	R_API void		1077592	1					
ANR	1077659	Identifier	r_config_node_value_format_i		1077592	2					
ANR	1077660	ParameterList	"char * buf , size_t buf_size , const ut64 i , R_NULLABLE RConfigNode * node"		1077592	3					
ANR	1077661	Parameter	char * buf	501:40:11642:11650	1077592	0	True				
ANR	1077662	ParameterType	char *		1077592	0					
ANR	1077663	Identifier	buf		1077592	1					
ANR	1077664	Parameter	size_t buf_size	501:51:11653:11667	1077592	1	True				
ANR	1077665	ParameterType	size_t		1077592	0					
ANR	1077666	Identifier	buf_size		1077592	1					
ANR	1077667	Parameter	const ut64 i	501:68:11670:11681	1077592	2	True				
ANR	1077668	ParameterType	const ut64		1077592	0					
ANR	1077669	Identifier	i		1077592	1					
ANR	1077670	Parameter	R_NULLABLE RConfigNode * node	501:82:11684:11711	1077592	3	True				
ANR	1077671	ParameterType	R_NULLABLE RConfigNode *		1077592	0					
ANR	1077672	Identifier	node		1077592	1					
ANR	1077673	CFGEntryNode	ENTRY		1077592		True				
ANR	1077674	CFGExitNode	EXIT		1077592		True				
ANR	1077675	Symbol	node		1077592						
ANR	1077676	Symbol	r_str_bool		1077592						
ANR	1077677	Symbol	buf		1077592						
ANR	1077678	Symbol	node -> flags		1077592						
ANR	1077679	Symbol	buf_size		1077592						
ANR	1077680	Symbol	i		1077592						
ANR	1077681	Symbol	* node		1077592						
ANR	1077682	Symbol	CN_BOOL		1077592						
ANR	1077683	Function	r_config_set_i	513:0:11950:13260							
ANR	1077684	FunctionDef	"r_config_set_i (RConfig * cfg , const char * name , const ut64 i)"		1077683	0					
ANR	1077685	CompoundStatement		513:80:12030:13260	1077683	0					
ANR	1077686	IdentifierDeclStatement	"char buf [ 128 ] , * ov = NULL ;"	514:1:12033:12058	1077683	0	True				
ANR	1077687	IdentifierDecl	buf [ 128 ]		1077683	0					
ANR	1077688	IdentifierDeclType	char [ 128 ]		1077683	0					
ANR	1077689	Identifier	buf		1077683	1					
ANR	1077690	PrimaryExpression	128		1077683	2					
ANR	1077691	IdentifierDecl	* ov = NULL		1077683	1					
ANR	1077692	IdentifierDeclType	char *		1077683	0					
ANR	1077693	Identifier	ov		1077683	1					
ANR	1077694	AssignmentExpression	* ov = NULL		1077683	2		=			
ANR	1077695	Identifier	NULL		1077683	0					
ANR	1077696	Identifier	NULL		1077683	1					
ANR	1077697	ExpressionStatement	"r_return_val_if_fail ( cfg && name , NULL )"	515:1:12061:12101	1077683	1	True				
ANR	1077698	CallExpression	"r_return_val_if_fail ( cfg && name , NULL )"		1077683	0					
ANR	1077699	Callee	r_return_val_if_fail		1077683	0					
ANR	1077700	Identifier	r_return_val_if_fail		1077683	0					
ANR	1077701	ArgumentList	cfg && name		1077683	1					
ANR	1077702	Argument	cfg && name		1077683	0					
ANR	1077703	AndExpression	cfg && name		1077683	0		&&			
ANR	1077704	Identifier	cfg		1077683	0					
ANR	1077705	Identifier	name		1077683	1					
ANR	1077706	Argument	NULL		1077683	1					
ANR	1077707	Identifier	NULL		1077683	0					
ANR	1077708	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , name ) ;"	516:1:12104:12153	1077683	2	True				
ANR	1077709	IdentifierDecl	"* node = r_config_node_get ( cfg , name )"		1077683	0					
ANR	1077710	IdentifierDeclType	RConfigNode *		1077683	0					
ANR	1077711	Identifier	node		1077683	1					
ANR	1077712	AssignmentExpression	"* node = r_config_node_get ( cfg , name )"		1077683	2		=			
ANR	1077713	Identifier	node		1077683	0					
ANR	1077714	CallExpression	"r_config_node_get ( cfg , name )"		1077683	1					
ANR	1077715	Callee	r_config_node_get		1077683	0					
ANR	1077716	Identifier	r_config_node_get		1077683	0					
ANR	1077717	ArgumentList	cfg		1077683	1					
ANR	1077718	Argument	cfg		1077683	0					
ANR	1077719	Identifier	cfg		1077683	0					
ANR	1077720	Argument	name		1077683	1					
ANR	1077721	Identifier	name		1077683	0					
ANR	1077722	IfStatement	if ( node )		1077683	3					
ANR	1077723	Condition	node	517:5:12160:12163	1077683	0	True				
ANR	1077724	Identifier	node		1077683	0					
ANR	1077725	CompoundStatement		5:11:135:135	1077683	1					
ANR	1077726	IfStatement	if ( node -> flags & CN_RO )		1077683	0					
ANR	1077727	Condition	node -> flags & CN_RO	518:6:12174:12192	1077683	0	True				
ANR	1077728	BitAndExpression	node -> flags & CN_RO		1077683	0		&			
ANR	1077729	PtrMemberAccess	node -> flags		1077683	0					
ANR	1077730	Identifier	node		1077683	0					
ANR	1077731	Identifier	flags		1077683	1					
ANR	1077732	Identifier	CN_RO		1077683	1					
ANR	1077733	CompoundStatement		6:27:164:164	1077683	1					
ANR	1077734	ExpressionStatement	node = NULL	519:3:12200:12211	1077683	0	True				
ANR	1077735	AssignmentExpression	node = NULL		1077683	0		=			
ANR	1077736	Identifier	node		1077683	0					
ANR	1077737	Identifier	NULL		1077683	1					
ANR	1077738	GotoStatement	goto beach ;	520:3:12216:12226	1077683	1	True				
ANR	1077739	Identifier	beach		1077683	0					
ANR	1077740	IfStatement	if ( node -> value )		1077683	1					
ANR	1077741	Condition	node -> value	522:6:12238:12248	1077683	0	True				
ANR	1077742	PtrMemberAccess	node -> value		1077683	0					
ANR	1077743	Identifier	node		1077683	0					
ANR	1077744	Identifier	value		1077683	1					
ANR	1077745	CompoundStatement		10:19:220:220	1077683	1					
ANR	1077746	ExpressionStatement	ov = strdup ( node -> value )	523:3:12256:12281	1077683	0	True				
ANR	1077747	AssignmentExpression	ov = strdup ( node -> value )		1077683	0		=			
ANR	1077748	Identifier	ov		1077683	0					
ANR	1077749	CallExpression	strdup ( node -> value )		1077683	1					
ANR	1077750	Callee	strdup		1077683	0					
ANR	1077751	Identifier	strdup		1077683	0					
ANR	1077752	ArgumentList	node -> value		1077683	1					
ANR	1077753	Argument	node -> value		1077683	0					
ANR	1077754	PtrMemberAccess	node -> value		1077683	0					
ANR	1077755	Identifier	node		1077683	0					
ANR	1077756	Identifier	value		1077683	1					
ANR	1077757	IfStatement	if ( ! ov )		1077683	1					
ANR	1077758	Condition	! ov	524:7:12290:12292	1077683	0	True				
ANR	1077759	UnaryOperationExpression	! ov		1077683	0					
ANR	1077760	UnaryOperator	!		1077683	0					
ANR	1077761	Identifier	ov		1077683	1					
ANR	1077762	CompoundStatement		12:12:264:264	1077683	1					
ANR	1077763	ExpressionStatement	node = NULL	525:4:12301:12312	1077683	0	True				
ANR	1077764	AssignmentExpression	node = NULL		1077683	0		=			
ANR	1077765	Identifier	node		1077683	0					
ANR	1077766	Identifier	NULL		1077683	1					
ANR	1077767	GotoStatement	goto beach ;	526:4:12318:12328	1077683	1	True				
ANR	1077768	Identifier	beach		1077683	0					
ANR	1077769	ExpressionStatement	free ( node -> value )	528:3:12338:12356	1077683	2	True				
ANR	1077770	CallExpression	free ( node -> value )		1077683	0					
ANR	1077771	Callee	free		1077683	0					
ANR	1077772	Identifier	free		1077683	0					
ANR	1077773	ArgumentList	node -> value		1077683	1					
ANR	1077774	Argument	node -> value		1077683	0					
ANR	1077775	PtrMemberAccess	node -> value		1077683	0					
ANR	1077776	Identifier	node		1077683	0					
ANR	1077777	Identifier	value		1077683	1					
ANR	1077778	ExpressionStatement	"r_config_node_value_format_i ( buf , sizeof ( buf ) , i , NULL )"	530:2:12364:12421	1077683	2	True				
ANR	1077779	CallExpression	"r_config_node_value_format_i ( buf , sizeof ( buf ) , i , NULL )"		1077683	0					
ANR	1077780	Callee	r_config_node_value_format_i		1077683	0					
ANR	1077781	Identifier	r_config_node_value_format_i		1077683	0					
ANR	1077782	ArgumentList	buf		1077683	1					
ANR	1077783	Argument	buf		1077683	0					
ANR	1077784	Identifier	buf		1077683	0					
ANR	1077785	Argument	sizeof ( buf )		1077683	1					
ANR	1077786	SizeofExpression	sizeof ( buf )		1077683	0					
ANR	1077787	Sizeof	sizeof		1077683	0					
ANR	1077788	SizeofOperand	buf		1077683	1					
ANR	1077789	Argument	i		1077683	2					
ANR	1077790	Identifier	i		1077683	0					
ANR	1077791	Argument	NULL		1077683	3					
ANR	1077792	Identifier	NULL		1077683	0					
ANR	1077793	ExpressionStatement	node -> value = strdup ( buf )	531:2:12425:12451	1077683	3	True				
ANR	1077794	AssignmentExpression	node -> value = strdup ( buf )		1077683	0		=			
ANR	1077795	PtrMemberAccess	node -> value		1077683	0					
ANR	1077796	Identifier	node		1077683	0					
ANR	1077797	Identifier	value		1077683	1					
ANR	1077798	CallExpression	strdup ( buf )		1077683	1					
ANR	1077799	Callee	strdup		1077683	0					
ANR	1077800	Identifier	strdup		1077683	0					
ANR	1077801	ArgumentList	buf		1077683	1					
ANR	1077802	Argument	buf		1077683	0					
ANR	1077803	Identifier	buf		1077683	0					
ANR	1077804	IfStatement	if ( ! node -> value )		1077683	4					
ANR	1077805	Condition	! node -> value	532:6:12459:12470	1077683	0	True				
ANR	1077806	UnaryOperationExpression	! node -> value		1077683	0					
ANR	1077807	UnaryOperator	!		1077683	0					
ANR	1077808	PtrMemberAccess	node -> value		1077683	1					
ANR	1077809	Identifier	node		1077683	0					
ANR	1077810	Identifier	value		1077683	1					
ANR	1077811	CompoundStatement		20:20:442:442	1077683	1					
ANR	1077812	ExpressionStatement	node = NULL	533:3:12478:12489	1077683	0	True				
ANR	1077813	AssignmentExpression	node = NULL		1077683	0		=			
ANR	1077814	Identifier	node		1077683	0					
ANR	1077815	Identifier	NULL		1077683	1					
ANR	1077816	GotoStatement	goto beach ;	534:3:12494:12504	1077683	1	True				
ANR	1077817	Identifier	beach		1077683	0					
ANR	1077818	ExpressionStatement	node -> i_value = i	537:2:12546:12563	1077683	5	True				
ANR	1077819	AssignmentExpression	node -> i_value = i		1077683	0		=			
ANR	1077820	PtrMemberAccess	node -> i_value		1077683	0					
ANR	1077821	Identifier	node		1077683	0					
ANR	1077822	Identifier	i_value		1077683	1					
ANR	1077823	Identifier	i		1077683	1					
ANR	1077824	ElseStatement	else		1077683	0					
ANR	1077825	CompoundStatement		26:8:542:542	1077683	0					
ANR	1077826	IfStatement	if ( ! cfg -> lock )		1077683	0					
ANR	1077827	Condition	! cfg -> lock	539:6:12581:12590	1077683	0	True				
ANR	1077828	UnaryOperationExpression	! cfg -> lock		1077683	0					
ANR	1077829	UnaryOperator	!		1077683	0					
ANR	1077830	PtrMemberAccess	cfg -> lock		1077683	1					
ANR	1077831	Identifier	cfg		1077683	0					
ANR	1077832	Identifier	lock		1077683	1					
ANR	1077833	CompoundStatement		27:18:562:562	1077683	1					
ANR	1077834	ExpressionStatement	"r_config_node_value_format_i ( buf , sizeof ( buf ) , i , NULL )"	540:3:12598:12655	1077683	0	True				
ANR	1077835	CallExpression	"r_config_node_value_format_i ( buf , sizeof ( buf ) , i , NULL )"		1077683	0					
ANR	1077836	Callee	r_config_node_value_format_i		1077683	0					
ANR	1077837	Identifier	r_config_node_value_format_i		1077683	0					
ANR	1077838	ArgumentList	buf		1077683	1					
ANR	1077839	Argument	buf		1077683	0					
ANR	1077840	Identifier	buf		1077683	0					
ANR	1077841	Argument	sizeof ( buf )		1077683	1					
ANR	1077842	SizeofExpression	sizeof ( buf )		1077683	0					
ANR	1077843	Sizeof	sizeof		1077683	0					
ANR	1077844	SizeofOperand	buf		1077683	1					
ANR	1077845	Argument	i		1077683	2					
ANR	1077846	Identifier	i		1077683	0					
ANR	1077847	Argument	NULL		1077683	3					
ANR	1077848	Identifier	NULL		1077683	0					
ANR	1077849	ExpressionStatement	"node = r_config_node_new ( name , buf )"	541:3:12660:12696	1077683	1	True				
ANR	1077850	AssignmentExpression	"node = r_config_node_new ( name , buf )"		1077683	0		=			
ANR	1077851	Identifier	node		1077683	0					
ANR	1077852	CallExpression	"r_config_node_new ( name , buf )"		1077683	1					
ANR	1077853	Callee	r_config_node_new		1077683	0					
ANR	1077854	Identifier	r_config_node_new		1077683	0					
ANR	1077855	ArgumentList	name		1077683	1					
ANR	1077856	Argument	name		1077683	0					
ANR	1077857	Identifier	name		1077683	0					
ANR	1077858	Argument	buf		1077683	1					
ANR	1077859	Identifier	buf		1077683	0					
ANR	1077860	IfStatement	if ( ! node )		1077683	2					
ANR	1077861	Condition	! node	542:7:12705:12709	1077683	0	True				
ANR	1077862	UnaryOperationExpression	! node		1077683	0					
ANR	1077863	UnaryOperator	!		1077683	0					
ANR	1077864	Identifier	node		1077683	1					
ANR	1077865	CompoundStatement		30:14:681:681	1077683	1					
ANR	1077866	ExpressionStatement	node = NULL	543:4:12718:12729	1077683	0	True				
ANR	1077867	AssignmentExpression	node = NULL		1077683	0		=			
ANR	1077868	Identifier	node		1077683	0					
ANR	1077869	Identifier	NULL		1077683	1					
ANR	1077870	GotoStatement	goto beach ;	544:4:12735:12745	1077683	1	True				
ANR	1077871	Identifier	beach		1077683	0					
ANR	1077872	ExpressionStatement	node -> flags = CN_RW | CN_OFFT	546:3:12755:12784	1077683	3	True				
ANR	1077873	AssignmentExpression	node -> flags = CN_RW | CN_OFFT		1077683	0		=			
ANR	1077874	PtrMemberAccess	node -> flags		1077683	0					
ANR	1077875	Identifier	node		1077683	0					
ANR	1077876	Identifier	flags		1077683	1					
ANR	1077877	InclusiveOrExpression	CN_RW | CN_OFFT		1077683	1		|			
ANR	1077878	Identifier	CN_RW		1077683	0					
ANR	1077879	Identifier	CN_OFFT		1077683	1					
ANR	1077880	ExpressionStatement	node -> i_value = i	547:3:12789:12806	1077683	4	True				
ANR	1077881	AssignmentExpression	node -> i_value = i		1077683	0		=			
ANR	1077882	PtrMemberAccess	node -> i_value		1077683	0					
ANR	1077883	Identifier	node		1077683	0					
ANR	1077884	Identifier	i_value		1077683	1					
ANR	1077885	Identifier	i		1077683	1					
ANR	1077886	ExpressionStatement	"ht_pp_insert ( cfg -> ht , node -> name , node )"	548:3:12811:12851	1077683	5	True				
ANR	1077887	CallExpression	"ht_pp_insert ( cfg -> ht , node -> name , node )"		1077683	0					
ANR	1077888	Callee	ht_pp_insert		1077683	0					
ANR	1077889	Identifier	ht_pp_insert		1077683	0					
ANR	1077890	ArgumentList	cfg -> ht		1077683	1					
ANR	1077891	Argument	cfg -> ht		1077683	0					
ANR	1077892	PtrMemberAccess	cfg -> ht		1077683	0					
ANR	1077893	Identifier	cfg		1077683	0					
ANR	1077894	Identifier	ht		1077683	1					
ANR	1077895	Argument	node -> name		1077683	1					
ANR	1077896	PtrMemberAccess	node -> name		1077683	0					
ANR	1077897	Identifier	node		1077683	0					
ANR	1077898	Identifier	name		1077683	1					
ANR	1077899	Argument	node		1077683	2					
ANR	1077900	Identifier	node		1077683	0					
ANR	1077901	IfStatement	if ( cfg -> nodes )		1077683	6					
ANR	1077902	Condition	cfg -> nodes	549:7:12860:12869	1077683	0	True				
ANR	1077903	PtrMemberAccess	cfg -> nodes		1077683	0					
ANR	1077904	Identifier	cfg		1077683	0					
ANR	1077905	Identifier	nodes		1077683	1					
ANR	1077906	CompoundStatement		37:19:841:841	1077683	1					
ANR	1077907	ExpressionStatement	"r_list_append ( cfg -> nodes , node )"	550:4:12878:12910	1077683	0	True				
ANR	1077908	CallExpression	"r_list_append ( cfg -> nodes , node )"		1077683	0					
ANR	1077909	Callee	r_list_append		1077683	0					
ANR	1077910	Identifier	r_list_append		1077683	0					
ANR	1077911	ArgumentList	cfg -> nodes		1077683	1					
ANR	1077912	Argument	cfg -> nodes		1077683	0					
ANR	1077913	PtrMemberAccess	cfg -> nodes		1077683	0					
ANR	1077914	Identifier	cfg		1077683	0					
ANR	1077915	Identifier	nodes		1077683	1					
ANR	1077916	Argument	node		1077683	1					
ANR	1077917	Identifier	node		1077683	0					
ANR	1077918	ExpressionStatement	cfg -> n_nodes ++	551:4:12916:12930	1077683	1	True				
ANR	1077919	PostIncDecOperationExpression	cfg -> n_nodes ++		1077683	0					
ANR	1077920	PtrMemberAccess	cfg -> n_nodes		1077683	0					
ANR	1077921	Identifier	cfg		1077683	0					
ANR	1077922	Identifier	n_nodes		1077683	1					
ANR	1077923	IncDec	++		1077683	1					
ANR	1077924	ElseStatement	else		1077683	0					
ANR	1077925	CompoundStatement		41:9:915:915	1077683	0					
ANR	1077926	ExpressionStatement	"eprintf ( ""(locked: no new keys can be created (%s))\\n"" , name )"	554:3:12951:13012	1077683	0	True				
ANR	1077927	CallExpression	"eprintf ( ""(locked: no new keys can be created (%s))\\n"" , name )"		1077683	0					
ANR	1077928	Callee	eprintf		1077683	0					
ANR	1077929	Identifier	eprintf		1077683	0					
ANR	1077930	ArgumentList	"""(locked: no new keys can be created (%s))\\n"""		1077683	1					
ANR	1077931	Argument	"""(locked: no new keys can be created (%s))\\n"""		1077683	0					
ANR	1077932	PrimaryExpression	"""(locked: no new keys can be created (%s))\\n"""		1077683	0					
ANR	1077933	Argument	name		1077683	1					
ANR	1077934	Identifier	name		1077683	0					
ANR	1077935	IfStatement	if ( node && node -> setter )		1077683	4					
ANR	1077936	Condition	node && node -> setter	558:5:13027:13046	1077683	0	True				
ANR	1077937	AndExpression	node && node -> setter		1077683	0		&&			
ANR	1077938	Identifier	node		1077683	0					
ANR	1077939	PtrMemberAccess	node -> setter		1077683	1					
ANR	1077940	Identifier	node		1077683	0					
ANR	1077941	Identifier	setter		1077683	1					
ANR	1077942	CompoundStatement		48:2:1049:1089	1077683	1					
ANR	1077943	IdentifierDeclStatement	ut64 oi = node -> i_value ;	559:2:13053:13076	1077683	0	True				
ANR	1077944	IdentifierDecl	oi = node -> i_value		1077683	0					
ANR	1077945	IdentifierDeclType	ut64		1077683	0					
ANR	1077946	Identifier	oi		1077683	1					
ANR	1077947	AssignmentExpression	oi = node -> i_value		1077683	2		=			
ANR	1077948	Identifier	oi		1077683	0					
ANR	1077949	PtrMemberAccess	node -> i_value		1077683	1					
ANR	1077950	Identifier	node		1077683	0					
ANR	1077951	Identifier	i_value		1077683	1					
ANR	1077952	IdentifierDeclStatement	"int ret = node -> setter ( cfg -> user , node ) ;"	560:2:13080:13120	1077683	1	True				
ANR	1077953	IdentifierDecl	"ret = node -> setter ( cfg -> user , node )"		1077683	0					
ANR	1077954	IdentifierDeclType	int		1077683	0					
ANR	1077955	Identifier	ret		1077683	1					
ANR	1077956	AssignmentExpression	"ret = node -> setter ( cfg -> user , node )"		1077683	2		=			
ANR	1077957	Identifier	ret		1077683	0					
ANR	1077958	CallExpression	"node -> setter ( cfg -> user , node )"		1077683	1					
ANR	1077959	Callee	node -> setter		1077683	0					
ANR	1077960	PtrMemberAccess	node -> setter		1077683	0					
ANR	1077961	Identifier	node		1077683	0					
ANR	1077962	Identifier	setter		1077683	1					
ANR	1077963	ArgumentList	cfg -> user		1077683	1					
ANR	1077964	Argument	cfg -> user		1077683	0					
ANR	1077965	PtrMemberAccess	cfg -> user		1077683	0					
ANR	1077966	Identifier	cfg		1077683	0					
ANR	1077967	Identifier	user		1077683	1					
ANR	1077968	Argument	node		1077683	1					
ANR	1077969	Identifier	node		1077683	0					
ANR	1077970	IfStatement	if ( ! ret )		1077683	2					
ANR	1077971	Condition	! ret	561:6:13128:13131	1077683	0	True				
ANR	1077972	UnaryOperationExpression	! ret		1077683	0					
ANR	1077973	UnaryOperator	!		1077683	0					
ANR	1077974	Identifier	ret		1077683	1					
ANR	1077975	CompoundStatement		49:12:1103:1103	1077683	1					
ANR	1077976	ExpressionStatement	node -> i_value = oi	562:3:13139:13157	1077683	0	True				
ANR	1077977	AssignmentExpression	node -> i_value = oi		1077683	0		=			
ANR	1077978	PtrMemberAccess	node -> i_value		1077683	0					
ANR	1077979	Identifier	node		1077683	0					
ANR	1077980	Identifier	i_value		1077683	1					
ANR	1077981	Identifier	oi		1077683	1					
ANR	1077982	ExpressionStatement	free ( node -> value )	563:3:13162:13180	1077683	1	True				
ANR	1077983	CallExpression	free ( node -> value )		1077683	0					
ANR	1077984	Callee	free		1077683	0					
ANR	1077985	Identifier	free		1077683	0					
ANR	1077986	ArgumentList	node -> value		1077683	1					
ANR	1077987	Argument	node -> value		1077683	0					
ANR	1077988	PtrMemberAccess	node -> value		1077683	0					
ANR	1077989	Identifier	node		1077683	0					
ANR	1077990	Identifier	value		1077683	1					
ANR	1077991	ExpressionStatement	"node -> value = strdup ( ov ? ov : """" )"	564:3:13185:13218	1077683	2	True				
ANR	1077992	AssignmentExpression	"node -> value = strdup ( ov ? ov : """" )"		1077683	0		=			
ANR	1077993	PtrMemberAccess	node -> value		1077683	0					
ANR	1077994	Identifier	node		1077683	0					
ANR	1077995	Identifier	value		1077683	1					
ANR	1077996	CallExpression	"strdup ( ov ? ov : """" )"		1077683	1					
ANR	1077997	Callee	strdup		1077683	0					
ANR	1077998	Identifier	strdup		1077683	0					
ANR	1077999	ArgumentList	"ov ? ov : """""		1077683	1					
ANR	1078000	Argument	"ov ? ov : """""		1077683	0					
ANR	1078001	ConditionalExpression	"ov ? ov : """""		1077683	0					
ANR	1078002	Condition	ov		1077683	0					
ANR	1078003	Identifier	ov		1077683	0					
ANR	1078004	Identifier	ov		1077683	1					
ANR	1078005	PrimaryExpression	""""""		1077683	2					
ANR	1078006	Label	beach :	567:0:13227:13232	1077683	5	True				
ANR	1078007	Identifier	beach		1077683	0					
ANR	1078008	ExpressionStatement	free ( ov )	568:1:13235:13244	1077683	6	True				
ANR	1078009	CallExpression	free ( ov )		1077683	0					
ANR	1078010	Callee	free		1077683	0					
ANR	1078011	Identifier	free		1077683	0					
ANR	1078012	ArgumentList	ov		1077683	1					
ANR	1078013	Argument	ov		1077683	0					
ANR	1078014	Identifier	ov		1077683	0					
ANR	1078015	ReturnStatement	return node ;	569:1:13247:13258	1077683	7	True				
ANR	1078016	Identifier	node		1077683	0					
ANR	1078017	ReturnType	R_API RConfigNode *		1077683	1					
ANR	1078018	Identifier	r_config_set_i		1077683	2					
ANR	1078019	ParameterList	"RConfig * cfg , const char * name , const ut64 i"		1077683	3					
ANR	1078020	Parameter	RConfig * cfg	513:34:11984:11995	1077683	0	True				
ANR	1078021	ParameterType	RConfig *		1077683	0					
ANR	1078022	Identifier	cfg		1077683	1					
ANR	1078023	Parameter	const char * name	513:48:11998:12013	1077683	1	True				
ANR	1078024	ParameterType	const char *		1077683	0					
ANR	1078025	Identifier	name		1077683	1					
ANR	1078026	Parameter	const ut64 i	513:66:12016:12027	1077683	2	True				
ANR	1078027	ParameterType	const ut64		1077683	0					
ANR	1078028	Identifier	i		1077683	1					
ANR	1078029	CFGEntryNode	ENTRY		1077683		True				
ANR	1078030	CFGExitNode	EXIT		1077683		True				
ANR	1078031	Symbol	CN_OFFT		1077683						
ANR	1078032	Symbol	CN_RO		1077683						
ANR	1078033	Symbol	node -> flags		1077683						
ANR	1078034	Symbol	CN_RW		1077683						
ANR	1078035	Symbol	* node		1077683						
ANR	1078036	Symbol	oi		1077683						
ANR	1078037	Symbol	cfg -> n_nodes		1077683						
ANR	1078038	Symbol	cfg -> ht		1077683						
ANR	1078039	Symbol	cfg -> nodes		1077683						
ANR	1078040	Symbol	ret		1077683						
ANR	1078041	Symbol	NULL		1077683						
ANR	1078042	Symbol	cfg -> lock		1077683						
ANR	1078043	Symbol	cfg		1077683						
ANR	1078044	Symbol	ov		1077683						
ANR	1078045	Symbol	r_config_node_new		1077683						
ANR	1078046	Symbol	i		1077683						
ANR	1078047	Symbol	node -> value		1077683						
ANR	1078048	Symbol	node -> i_value		1077683						
ANR	1078049	Symbol	node		1077683						
ANR	1078050	Symbol	* cfg		1077683						
ANR	1078051	Symbol	buf		1077683						
ANR	1078052	Symbol	node -> name		1077683						
ANR	1078053	Symbol	node -> setter		1077683						
ANR	1078054	Symbol	name		1077683						
ANR	1078055	Symbol	strdup		1077683						
ANR	1078056	Symbol	r_config_node_get		1077683						
ANR	1078057	Symbol	cfg -> user		1077683						
ANR	1078058	Function	__evalString	572:0:13263:13749							
ANR	1078059	FunctionDef	"__evalString (RConfig * cfg , char * name)"		1078058	0					
ANR	1078060	CompoundStatement		572:51:13314:13749	1078058	0					
ANR	1078061	IfStatement	if ( ! * name )		1078058	0					
ANR	1078062	Condition	! * name	573:5:13321:13326	1078058	0	True				
ANR	1078063	UnaryOperationExpression	! * name		1078058	0					
ANR	1078064	UnaryOperator	!		1078058	0					
ANR	1078065	UnaryOperationExpression	* name		1078058	1					
ANR	1078066	UnaryOperator	*		1078058	0					
ANR	1078067	Identifier	name		1078058	1					
ANR	1078068	CompoundStatement		2:13:14:14	1078058	1					
ANR	1078069	ReturnStatement	return ;	574:2:13333:13339	1078058	0	True				
ANR	1078070	IdentifierDeclStatement	"char * eq = strchr ( name , '=' ) ;"	576:1:13345:13374	1078058	1	True				
ANR	1078071	IdentifierDecl	"* eq = strchr ( name , '=' )"		1078058	0					
ANR	1078072	IdentifierDeclType	char *		1078058	0					
ANR	1078073	Identifier	eq		1078058	1					
ANR	1078074	AssignmentExpression	"* eq = strchr ( name , '=' )"		1078058	2		=			
ANR	1078075	Identifier	eq		1078058	0					
ANR	1078076	CallExpression	"strchr ( name , '=' )"		1078058	1					
ANR	1078077	Callee	strchr		1078058	0					
ANR	1078078	Identifier	strchr		1078058	0					
ANR	1078079	ArgumentList	name		1078058	1					
ANR	1078080	Argument	name		1078058	0					
ANR	1078081	Identifier	name		1078058	0					
ANR	1078082	Argument	'='		1078058	1					
ANR	1078083	PrimaryExpression	'='		1078058	0					
ANR	1078084	IfStatement	if ( eq )		1078058	2					
ANR	1078085	Condition	eq	577:5:13381:13382	1078058	0	True				
ANR	1078086	Identifier	eq		1078058	0					
ANR	1078087	CompoundStatement		6:9:70:70	1078058	1					
ANR	1078088	ExpressionStatement	* eq ++ = 0	578:2:13389:13398	1078058	0	True				
ANR	1078089	AssignmentExpression	* eq ++ = 0		1078058	0		=			
ANR	1078090	UnaryOperationExpression	* eq ++		1078058	0					
ANR	1078091	UnaryOperator	*		1078058	0					
ANR	1078092	PostIncDecOperationExpression	eq ++		1078058	1					
ANR	1078093	Identifier	eq		1078058	0					
ANR	1078094	IncDec	++		1078058	1					
ANR	1078095	PrimaryExpression	0		1078058	1					
ANR	1078096	ExpressionStatement	r_str_trim ( name )	579:2:13402:13419	1078058	1	True				
ANR	1078097	CallExpression	r_str_trim ( name )		1078058	0					
ANR	1078098	Callee	r_str_trim		1078058	0					
ANR	1078099	Identifier	r_str_trim		1078058	0					
ANR	1078100	ArgumentList	name		1078058	1					
ANR	1078101	Argument	name		1078058	0					
ANR	1078102	Identifier	name		1078058	0					
ANR	1078103	ExpressionStatement	r_str_trim ( eq )	580:2:13423:13438	1078058	2	True				
ANR	1078104	CallExpression	r_str_trim ( eq )		1078058	0					
ANR	1078105	Callee	r_str_trim		1078058	0					
ANR	1078106	Identifier	r_str_trim		1078058	0					
ANR	1078107	ArgumentList	eq		1078058	1					
ANR	1078108	Argument	eq		1078058	0					
ANR	1078109	Identifier	eq		1078058	0					
ANR	1078110	IfStatement	if ( * name )		1078058	3					
ANR	1078111	Condition	* name	581:6:13446:13450	1078058	0	True				
ANR	1078112	UnaryOperationExpression	* name		1078058	0					
ANR	1078113	UnaryOperator	*		1078058	0					
ANR	1078114	Identifier	name		1078058	1					
ANR	1078115	CompoundStatement		10:13:138:138	1078058	1					
ANR	1078116	ExpressionStatement	"( void ) r_config_set ( cfg , name , eq )"	582:3:13458:13493	1078058	0	True				
ANR	1078117	CastExpression	"( void ) r_config_set ( cfg , name , eq )"		1078058	0					
ANR	1078118	CastTarget	void		1078058	0					
ANR	1078119	CallExpression	"r_config_set ( cfg , name , eq )"		1078058	1					
ANR	1078120	Callee	r_config_set		1078058	0					
ANR	1078121	Identifier	r_config_set		1078058	0					
ANR	1078122	ArgumentList	cfg		1078058	1					
ANR	1078123	Argument	cfg		1078058	0					
ANR	1078124	Identifier	cfg		1078058	0					
ANR	1078125	Argument	name		1078058	1					
ANR	1078126	Identifier	name		1078058	0					
ANR	1078127	Argument	eq		1078058	2					
ANR	1078128	Identifier	eq		1078058	0					
ANR	1078129	ElseStatement	else		1078058	0					
ANR	1078130	CompoundStatement		13:8:192:192	1078058	0					
ANR	1078131	IfStatement	"if ( r_str_endswith ( name , ""."" ) )"		1078058	0					
ANR	1078132	Condition	"r_str_endswith ( name , ""."" )"	585:6:13515:13540	1078058	0	True				
ANR	1078133	CallExpression	"r_str_endswith ( name , ""."" )"		1078058	0					
ANR	1078134	Callee	r_str_endswith		1078058	0					
ANR	1078135	Identifier	r_str_endswith		1078058	0					
ANR	1078136	ArgumentList	name		1078058	1					
ANR	1078137	Argument	name		1078058	0					
ANR	1078138	Identifier	name		1078058	0					
ANR	1078139	Argument	"""."""		1078058	1					
ANR	1078140	PrimaryExpression	"""."""		1078058	0					
ANR	1078141	CompoundStatement		14:34:228:228	1078058	1					
ANR	1078142	ExpressionStatement	"r_config_list ( cfg , name , 0 )"	586:3:13548:13576	1078058	0	True				
ANR	1078143	CallExpression	"r_config_list ( cfg , name , 0 )"		1078058	0					
ANR	1078144	Callee	r_config_list		1078058	0					
ANR	1078145	Identifier	r_config_list		1078058	0					
ANR	1078146	ArgumentList	cfg		1078058	1					
ANR	1078147	Argument	cfg		1078058	0					
ANR	1078148	Identifier	cfg		1078058	0					
ANR	1078149	Argument	name		1078058	1					
ANR	1078150	Identifier	name		1078058	0					
ANR	1078151	Argument	0		1078058	2					
ANR	1078152	PrimaryExpression	0		1078058	0					
ANR	1078153	ElseStatement	else		1078058	0					
ANR	1078154	CompoundStatement		17:3:277:317	1078058	0					
ANR	1078155	IdentifierDeclStatement	"const char * v = r_config_get ( cfg , name ) ;"	588:3:13592:13632	1078058	0	True				
ANR	1078156	IdentifierDecl	"* v = r_config_get ( cfg , name )"		1078058	0					
ANR	1078157	IdentifierDeclType	const char *		1078058	0					
ANR	1078158	Identifier	v		1078058	1					
ANR	1078159	AssignmentExpression	"* v = r_config_get ( cfg , name )"		1078058	2		=			
ANR	1078160	Identifier	v		1078058	0					
ANR	1078161	CallExpression	"r_config_get ( cfg , name )"		1078058	1					
ANR	1078162	Callee	r_config_get		1078058	0					
ANR	1078163	Identifier	r_config_get		1078058	0					
ANR	1078164	ArgumentList	cfg		1078058	1					
ANR	1078165	Argument	cfg		1078058	0					
ANR	1078166	Identifier	cfg		1078058	0					
ANR	1078167	Argument	name		1078058	1					
ANR	1078168	Identifier	name		1078058	0					
ANR	1078169	IfStatement	if ( v )		1078058	1					
ANR	1078170	Condition	v	589:7:13641:13641	1078058	0	True				
ANR	1078171	Identifier	v		1078058	0					
ANR	1078172	CompoundStatement		18:10:329:329	1078058	1					
ANR	1078173	ExpressionStatement	"cfg -> cb_printf ( ""%s\\n"" , v )"	590:4:13650:13676	1078058	0	True				
ANR	1078174	CallExpression	"cfg -> cb_printf ( ""%s\\n"" , v )"		1078058	0					
ANR	1078175	Callee	cfg -> cb_printf		1078058	0					
ANR	1078176	PtrMemberAccess	cfg -> cb_printf		1078058	0					
ANR	1078177	Identifier	cfg		1078058	0					
ANR	1078178	Identifier	cb_printf		1078058	1					
ANR	1078179	ArgumentList	"""%s\\n"""		1078058	1					
ANR	1078180	Argument	"""%s\\n"""		1078058	0					
ANR	1078181	PrimaryExpression	"""%s\\n"""		1078058	0					
ANR	1078182	Argument	v		1078058	1					
ANR	1078183	Identifier	v		1078058	0					
ANR	1078184	ElseStatement	else		1078058	0					
ANR	1078185	CompoundStatement		20:10:373:373	1078058	0					
ANR	1078186	ExpressionStatement	"eprintf ( ""Invalid conifg key %s\\n"" , name )"	592:4:13694:13735	1078058	0	True				
ANR	1078187	CallExpression	"eprintf ( ""Invalid conifg key %s\\n"" , name )"		1078058	0					
ANR	1078188	Callee	eprintf		1078058	0					
ANR	1078189	Identifier	eprintf		1078058	0					
ANR	1078190	ArgumentList	"""Invalid conifg key %s\\n"""		1078058	1					
ANR	1078191	Argument	"""Invalid conifg key %s\\n"""		1078058	0					
ANR	1078192	PrimaryExpression	"""Invalid conifg key %s\\n"""		1078058	0					
ANR	1078193	Argument	name		1078058	1					
ANR	1078194	Identifier	name		1078058	0					
ANR	1078195	ReturnType	static void		1078058	1					
ANR	1078196	Identifier	__evalString		1078058	2					
ANR	1078197	ParameterList	"RConfig * cfg , char * name"		1078058	3					
ANR	1078198	Parameter	RConfig * cfg	572:25:13288:13299	1078058	0	True				
ANR	1078199	ParameterType	RConfig *		1078058	0					
ANR	1078200	Identifier	cfg		1078058	1					
ANR	1078201	Parameter	char * name	572:39:13302:13311	1078058	1	True				
ANR	1078202	ParameterType	char *		1078058	0					
ANR	1078203	Identifier	name		1078058	1					
ANR	1078204	CFGEntryNode	ENTRY		1078058		True				
ANR	1078205	CFGExitNode	EXIT		1078058		True				
ANR	1078206	Symbol	* name		1078058						
ANR	1078207	Symbol	cfg		1078058						
ANR	1078208	Symbol	v		1078058						
ANR	1078209	Symbol	name		1078058						
ANR	1078210	Symbol	r_config_get		1078058						
ANR	1078211	Symbol	strchr		1078058						
ANR	1078212	Symbol	r_str_endswith		1078058						
ANR	1078213	Symbol	eq		1078058						
ANR	1078214	Symbol	* eq ++		1078058						
ANR	1078215	Function	r_config_eval	598:0:13752:14408							
ANR	1078216	FunctionDef	"r_config_eval (RConfig * cfg , const char * str , bool many)"		1078215	0					
ANR	1078217	CompoundStatement		598:67:13819:14408	1078215	0					
ANR	1078218	ExpressionStatement	"r_return_val_if_fail ( cfg && str , false )"	599:1:13822:13862	1078215	0	True				
ANR	1078219	CallExpression	"r_return_val_if_fail ( cfg && str , false )"		1078215	0					
ANR	1078220	Callee	r_return_val_if_fail		1078215	0					
ANR	1078221	Identifier	r_return_val_if_fail		1078215	0					
ANR	1078222	ArgumentList	cfg && str		1078215	1					
ANR	1078223	Argument	cfg && str		1078215	0					
ANR	1078224	AndExpression	cfg && str		1078215	0		&&			
ANR	1078225	Identifier	cfg		1078215	0					
ANR	1078226	Identifier	str		1078215	1					
ANR	1078227	Argument	false		1078215	1					
ANR	1078228	Identifier	false		1078215	0					
ANR	1078229	IdentifierDeclStatement	char * s = r_str_trim_dup ( str ) ;	601:1:13866:13896	1078215	1	True				
ANR	1078230	IdentifierDecl	* s = r_str_trim_dup ( str )		1078215	0					
ANR	1078231	IdentifierDeclType	char *		1078215	0					
ANR	1078232	Identifier	s		1078215	1					
ANR	1078233	AssignmentExpression	* s = r_str_trim_dup ( str )		1078215	2		=			
ANR	1078234	Identifier	s		1078215	0					
ANR	1078235	CallExpression	r_str_trim_dup ( str )		1078215	1					
ANR	1078236	Callee	r_str_trim_dup		1078215	0					
ANR	1078237	Identifier	r_str_trim_dup		1078215	0					
ANR	1078238	ArgumentList	str		1078215	1					
ANR	1078239	Argument	str		1078215	0					
ANR	1078240	Identifier	str		1078215	0					
ANR	1078241	IfStatement	"if ( ! * s || ! strcmp ( s , ""help"" ) )"		1078215	2					
ANR	1078242	Condition	"! * s || ! strcmp ( s , ""help"" )"	603:5:13904:13929	1078215	0	True				
ANR	1078243	OrExpression	"! * s || ! strcmp ( s , ""help"" )"		1078215	0		||			
ANR	1078244	UnaryOperationExpression	! * s		1078215	0					
ANR	1078245	UnaryOperator	!		1078215	0					
ANR	1078246	UnaryOperationExpression	* s		1078215	1					
ANR	1078247	UnaryOperator	*		1078215	0					
ANR	1078248	Identifier	s		1078215	1					
ANR	1078249	UnaryOperationExpression	"! strcmp ( s , ""help"" )"		1078215	1					
ANR	1078250	UnaryOperator	!		1078215	0					
ANR	1078251	CallExpression	"strcmp ( s , ""help"" )"		1078215	1					
ANR	1078252	Callee	strcmp		1078215	0					
ANR	1078253	Identifier	strcmp		1078215	0					
ANR	1078254	ArgumentList	s		1078215	1					
ANR	1078255	Argument	s		1078215	0					
ANR	1078256	Identifier	s		1078215	0					
ANR	1078257	Argument	"""help"""		1078215	1					
ANR	1078258	PrimaryExpression	"""help"""		1078215	0					
ANR	1078259	CompoundStatement		6:33:112:112	1078215	1					
ANR	1078260	ExpressionStatement	"r_config_list ( cfg , NULL , 0 )"	604:2:13936:13964	1078215	0	True				
ANR	1078261	CallExpression	"r_config_list ( cfg , NULL , 0 )"		1078215	0					
ANR	1078262	Callee	r_config_list		1078215	0					
ANR	1078263	Identifier	r_config_list		1078215	0					
ANR	1078264	ArgumentList	cfg		1078215	1					
ANR	1078265	Argument	cfg		1078215	0					
ANR	1078266	Identifier	cfg		1078215	0					
ANR	1078267	Argument	NULL		1078215	1					
ANR	1078268	Identifier	NULL		1078215	0					
ANR	1078269	Argument	0		1078215	2					
ANR	1078270	PrimaryExpression	0		1078215	0					
ANR	1078271	ExpressionStatement	free ( s )	605:2:13968:13976	1078215	1	True				
ANR	1078272	CallExpression	free ( s )		1078215	0					
ANR	1078273	Callee	free		1078215	0					
ANR	1078274	Identifier	free		1078215	0					
ANR	1078275	ArgumentList	s		1078215	1					
ANR	1078276	Argument	s		1078215	0					
ANR	1078277	Identifier	s		1078215	0					
ANR	1078278	ReturnStatement	return false ;	606:2:13980:13992	1078215	2	True				
ANR	1078279	Identifier	false		1078215	0					
ANR	1078280	IfStatement	if ( * s == '-' )		1078215	3					
ANR	1078281	Condition	* s == '-'	609:5:14003:14011	1078215	0	True				
ANR	1078282	EqualityExpression	* s == '-'		1078215	0		==			
ANR	1078283	UnaryOperationExpression	* s		1078215	0					
ANR	1078284	UnaryOperator	*		1078215	0					
ANR	1078285	Identifier	s		1078215	1					
ANR	1078286	PrimaryExpression	'-'		1078215	1					
ANR	1078287	CompoundStatement		12:16:194:194	1078215	1					
ANR	1078288	ExpressionStatement	"r_config_rm ( cfg , s + 1 )"	610:2:14018:14042	1078215	0	True				
ANR	1078289	CallExpression	"r_config_rm ( cfg , s + 1 )"		1078215	0					
ANR	1078290	Callee	r_config_rm		1078215	0					
ANR	1078291	Identifier	r_config_rm		1078215	0					
ANR	1078292	ArgumentList	cfg		1078215	1					
ANR	1078293	Argument	cfg		1078215	0					
ANR	1078294	Identifier	cfg		1078215	0					
ANR	1078295	Argument	s + 1		1078215	1					
ANR	1078296	AdditiveExpression	s + 1		1078215	0		+			
ANR	1078297	Identifier	s		1078215	0					
ANR	1078298	PrimaryExpression	1		1078215	1					
ANR	1078299	ExpressionStatement	free ( s )	611:2:14046:14054	1078215	1	True				
ANR	1078300	CallExpression	free ( s )		1078215	0					
ANR	1078301	Callee	free		1078215	0					
ANR	1078302	Identifier	free		1078215	0					
ANR	1078303	ArgumentList	s		1078215	1					
ANR	1078304	Argument	s		1078215	0					
ANR	1078305	Identifier	s		1078215	0					
ANR	1078306	ReturnStatement	return false ;	612:2:14058:14070	1078215	2	True				
ANR	1078307	Identifier	false		1078215	0					
ANR	1078308	IfStatement	if ( many )		1078215	4					
ANR	1078309	Condition	many	614:5:14080:14083	1078215	0	True				
ANR	1078310	Identifier	many		1078215	0					
ANR	1078311	CompoundStatement		22:2:426:436	1078215	1					
ANR	1078312	IdentifierDeclStatement	"RList * list = r_str_split_list ( s , "","" , 0 ) ;"	617:2:14181:14223	1078215	0	True				
ANR	1078313	IdentifierDecl	"* list = r_str_split_list ( s , "","" , 0 )"		1078215	0					
ANR	1078314	IdentifierDeclType	RList *		1078215	0					
ANR	1078315	Identifier	list		1078215	1					
ANR	1078316	AssignmentExpression	"* list = r_str_split_list ( s , "","" , 0 )"		1078215	2		=			
ANR	1078317	Identifier	list		1078215	0					
ANR	1078318	CallExpression	"r_str_split_list ( s , "","" , 0 )"		1078215	1					
ANR	1078319	Callee	r_str_split_list		1078215	0					
ANR	1078320	Identifier	r_str_split_list		1078215	0					
ANR	1078321	ArgumentList	s		1078215	1					
ANR	1078322	Argument	s		1078215	0					
ANR	1078323	Identifier	s		1078215	0					
ANR	1078324	Argument	""","""		1078215	1					
ANR	1078325	PrimaryExpression	""","""		1078215	0					
ANR	1078326	Argument	0		1078215	2					
ANR	1078327	PrimaryExpression	0		1078215	0					
ANR	1078328	IdentifierDeclStatement	RListIter * iter ;	618:2:14227:14242	1078215	1	True				
ANR	1078329	IdentifierDecl	* iter		1078215	0					
ANR	1078330	IdentifierDeclType	RListIter *		1078215	0					
ANR	1078331	Identifier	iter		1078215	1					
ANR	1078332	IdentifierDeclStatement	char * name ;	619:2:14246:14256	1078215	2	True				
ANR	1078333	IdentifierDecl	* name		1078215	0					
ANR	1078334	IdentifierDeclType	char *		1078215	0					
ANR	1078335	Identifier	name		1078215	1					
ANR	1078336	Statement	r_list_foreach	620:2:14260:14273	1078215	3	True				
ANR	1078337	Statement	(	620:17:14275:14275	1078215	4	True				
ANR	1078338	Statement	list	620:18:14276:14279	1078215	5	True				
ANR	1078339	Statement	","	620:22:14280:14280	1078215	6	True				
ANR	1078340	Statement	iter	620:24:14282:14285	1078215	7	True				
ANR	1078341	Statement	","	620:28:14286:14286	1078215	8	True				
ANR	1078342	Statement	name	620:30:14288:14291	1078215	9	True				
ANR	1078343	Statement	)	620:34:14292:14292	1078215	10	True				
ANR	1078344	CompoundStatement		23:36:474:474	1078215	11					
ANR	1078345	ExpressionStatement	"__evalString ( cfg , name )"	621:3:14299:14323	1078215	0	True				
ANR	1078346	CallExpression	"__evalString ( cfg , name )"		1078215	0					
ANR	1078347	Callee	__evalString		1078215	0					
ANR	1078348	Identifier	__evalString		1078215	0					
ANR	1078349	ArgumentList	cfg		1078215	1					
ANR	1078350	Argument	cfg		1078215	0					
ANR	1078351	Identifier	cfg		1078215	0					
ANR	1078352	Argument	name		1078215	1					
ANR	1078353	Identifier	name		1078215	0					
ANR	1078354	ExpressionStatement	free ( s )	623:2:14331:14339	1078215	12	True				
ANR	1078355	CallExpression	free ( s )		1078215	0					
ANR	1078356	Callee	free		1078215	0					
ANR	1078357	Identifier	free		1078215	0					
ANR	1078358	ArgumentList	s		1078215	1					
ANR	1078359	Argument	s		1078215	0					
ANR	1078360	Identifier	s		1078215	0					
ANR	1078361	ReturnStatement	return true ;	624:2:14343:14354	1078215	13	True				
ANR	1078362	Identifier	true		1078215	0					
ANR	1078363	ExpressionStatement	"__evalString ( cfg , s )"	626:1:14360:14381	1078215	5	True				
ANR	1078364	CallExpression	"__evalString ( cfg , s )"		1078215	0					
ANR	1078365	Callee	__evalString		1078215	0					
ANR	1078366	Identifier	__evalString		1078215	0					
ANR	1078367	ArgumentList	cfg		1078215	1					
ANR	1078368	Argument	cfg		1078215	0					
ANR	1078369	Identifier	cfg		1078215	0					
ANR	1078370	Argument	s		1078215	1					
ANR	1078371	Identifier	s		1078215	0					
ANR	1078372	ExpressionStatement	free ( s )	627:1:14384:14392	1078215	6	True				
ANR	1078373	CallExpression	free ( s )		1078215	0					
ANR	1078374	Callee	free		1078215	0					
ANR	1078375	Identifier	free		1078215	0					
ANR	1078376	ArgumentList	s		1078215	1					
ANR	1078377	Argument	s		1078215	0					
ANR	1078378	Identifier	s		1078215	0					
ANR	1078379	ReturnStatement	return true ;	628:1:14395:14406	1078215	7	True				
ANR	1078380	Identifier	true		1078215	0					
ANR	1078381	ReturnType	R_API bool		1078215	1					
ANR	1078382	Identifier	r_config_eval		1078215	2					
ANR	1078383	ParameterList	"RConfig * cfg , const char * str , bool many"		1078215	3					
ANR	1078384	Parameter	RConfig * cfg	598:25:13777:13788	1078215	0	True				
ANR	1078385	ParameterType	RConfig *		1078215	0					
ANR	1078386	Identifier	cfg		1078215	1					
ANR	1078387	Parameter	const char * str	598:39:13791:13805	1078215	1	True				
ANR	1078388	ParameterType	const char *		1078215	0					
ANR	1078389	Identifier	str		1078215	1					
ANR	1078390	Parameter	bool many	598:56:13808:13816	1078215	2	True				
ANR	1078391	ParameterType	bool		1078215	0					
ANR	1078392	Identifier	many		1078215	1					
ANR	1078393	CFGEntryNode	ENTRY		1078215		True				
ANR	1078394	CFGExitNode	EXIT		1078215		True				
ANR	1078395	Symbol	strcmp		1078215						
ANR	1078396	Symbol	NULL		1078215						
ANR	1078397	Symbol	cfg		1078215						
ANR	1078398	Symbol	false		1078215						
ANR	1078399	Symbol	r_str_split_list		1078215						
ANR	1078400	Symbol	iter		1078215						
ANR	1078401	Symbol	many		1078215						
ANR	1078402	Symbol	list		1078215						
ANR	1078403	Symbol	r_str_trim_dup		1078215						
ANR	1078404	Symbol	str		1078215						
ANR	1078405	Symbol	s		1078215						
ANR	1078406	Symbol	name		1078215						
ANR	1078407	Symbol	true		1078215						
ANR	1078408	Symbol	* s		1078215						
ANR	1078409	Function	cmp	631:0:14411:14495							
ANR	1078410	FunctionDef	"cmp (RConfigNode * a , RConfigNode * b)"		1078409	0					
ANR	1078411	CompoundStatement		631:47:14458:14495	1078409	0					
ANR	1078412	ReturnStatement	"return strcmp ( a -> name , b -> name ) ;"	632:1:14461:14493	1078409	0	True				
ANR	1078413	CallExpression	"strcmp ( a -> name , b -> name )"		1078409	0					
ANR	1078414	Callee	strcmp		1078409	0					
ANR	1078415	Identifier	strcmp		1078409	0					
ANR	1078416	ArgumentList	a -> name		1078409	1					
ANR	1078417	Argument	a -> name		1078409	0					
ANR	1078418	PtrMemberAccess	a -> name		1078409	0					
ANR	1078419	Identifier	a		1078409	0					
ANR	1078420	Identifier	name		1078409	1					
ANR	1078421	Argument	b -> name		1078409	1					
ANR	1078422	PtrMemberAccess	b -> name		1078409	0					
ANR	1078423	Identifier	b		1078409	0					
ANR	1078424	Identifier	name		1078409	1					
ANR	1078425	ReturnType	static int		1078409	1					
ANR	1078426	Identifier	cmp		1078409	2					
ANR	1078427	ParameterList	"RConfigNode * a , RConfigNode * b"		1078409	3					
ANR	1078428	Parameter	RConfigNode * a	631:15:14426:14439	1078409	0	True				
ANR	1078429	ParameterType	RConfigNode *		1078409	0					
ANR	1078430	Identifier	a		1078409	1					
ANR	1078431	Parameter	RConfigNode * b	631:31:14442:14455	1078409	1	True				
ANR	1078432	ParameterType	RConfigNode *		1078409	0					
ANR	1078433	Identifier	b		1078409	1					
ANR	1078434	CFGEntryNode	ENTRY		1078409		True				
ANR	1078435	CFGExitNode	EXIT		1078409		True				
ANR	1078436	Symbol	strcmp		1078409						
ANR	1078437	Symbol	a		1078409						
ANR	1078438	Symbol	b		1078409						
ANR	1078439	Symbol	a -> name		1078409						
ANR	1078440	Symbol	* a		1078409						
ANR	1078441	Symbol	* b		1078409						
ANR	1078442	Symbol	b -> name		1078409						
ANR	1078443	Function	r_config_lock	635:0:14498:14612							
ANR	1078444	FunctionDef	"r_config_lock (RConfig * cfg , int l)"		1078443	0					
ANR	1078445	CompoundStatement		635:46:14544:14612	1078443	0					
ANR	1078446	ExpressionStatement	"r_list_sort ( cfg -> nodes , ( RListComparator ) cmp )"	636:1:14547:14594	1078443	0	True				
ANR	1078447	CallExpression	"r_list_sort ( cfg -> nodes , ( RListComparator ) cmp )"		1078443	0					
ANR	1078448	Callee	r_list_sort		1078443	0					
ANR	1078449	Identifier	r_list_sort		1078443	0					
ANR	1078450	ArgumentList	cfg -> nodes		1078443	1					
ANR	1078451	Argument	cfg -> nodes		1078443	0					
ANR	1078452	PtrMemberAccess	cfg -> nodes		1078443	0					
ANR	1078453	Identifier	cfg		1078443	0					
ANR	1078454	Identifier	nodes		1078443	1					
ANR	1078455	Argument	( RListComparator ) cmp		1078443	1					
ANR	1078456	CastExpression	( RListComparator ) cmp		1078443	0					
ANR	1078457	CastTarget	RListComparator		1078443	0					
ANR	1078458	Identifier	cmp		1078443	1					
ANR	1078459	ExpressionStatement	cfg -> lock = l	637:1:14597:14610	1078443	1	True				
ANR	1078460	AssignmentExpression	cfg -> lock = l		1078443	0		=			
ANR	1078461	PtrMemberAccess	cfg -> lock		1078443	0					
ANR	1078462	Identifier	cfg		1078443	0					
ANR	1078463	Identifier	lock		1078443	1					
ANR	1078464	Identifier	l		1078443	1					
ANR	1078465	ReturnType	R_API void		1078443	1					
ANR	1078466	Identifier	r_config_lock		1078443	2					
ANR	1078467	ParameterList	"RConfig * cfg , int l"		1078443	3					
ANR	1078468	Parameter	RConfig * cfg	635:25:14523:14534	1078443	0	True				
ANR	1078469	ParameterType	RConfig *		1078443	0					
ANR	1078470	Identifier	cfg		1078443	1					
ANR	1078471	Parameter	int l	635:39:14537:14541	1078443	1	True				
ANR	1078472	ParameterType	int		1078443	0					
ANR	1078473	Identifier	l		1078443	1					
ANR	1078474	CFGEntryNode	ENTRY		1078443		True				
ANR	1078475	CFGExitNode	EXIT		1078443		True				
ANR	1078476	Symbol	* cfg		1078443						
ANR	1078477	Symbol	cfg -> lock		1078443						
ANR	1078478	Symbol	cfg		1078443						
ANR	1078479	Symbol	cmp		1078443						
ANR	1078480	Symbol	l		1078443						
ANR	1078481	Symbol	cfg -> nodes		1078443						
ANR	1078482	Function	r_config_readonly	640:0:14615:14789							
ANR	1078483	FunctionDef	"r_config_readonly (RConfig * cfg , const char * key)"		1078482	0					
ANR	1078484	CompoundStatement		640:60:14675:14789	1078482	0					
ANR	1078485	IdentifierDeclStatement	"RConfigNode * n = r_config_node_get ( cfg , key ) ;"	641:1:14678:14723	1078482	0	True				
ANR	1078486	IdentifierDecl	"* n = r_config_node_get ( cfg , key )"		1078482	0					
ANR	1078487	IdentifierDeclType	RConfigNode *		1078482	0					
ANR	1078488	Identifier	n		1078482	1					
ANR	1078489	AssignmentExpression	"* n = r_config_node_get ( cfg , key )"		1078482	2		=			
ANR	1078490	Identifier	n		1078482	0					
ANR	1078491	CallExpression	"r_config_node_get ( cfg , key )"		1078482	1					
ANR	1078492	Callee	r_config_node_get		1078482	0					
ANR	1078493	Identifier	r_config_node_get		1078482	0					
ANR	1078494	ArgumentList	cfg		1078482	1					
ANR	1078495	Argument	cfg		1078482	0					
ANR	1078496	Identifier	cfg		1078482	0					
ANR	1078497	Argument	key		1078482	1					
ANR	1078498	Identifier	key		1078482	0					
ANR	1078499	IfStatement	if ( n )		1078482	1					
ANR	1078500	Condition	n	642:5:14730:14730	1078482	0	True				
ANR	1078501	Identifier	n		1078482	0					
ANR	1078502	CompoundStatement		3:8:57:57	1078482	1					
ANR	1078503	ExpressionStatement	n -> flags |= CN_RO	643:2:14737:14754	1078482	0	True				
ANR	1078504	AssignmentExpression	n -> flags |= CN_RO		1078482	0		|=			
ANR	1078505	PtrMemberAccess	n -> flags		1078482	0					
ANR	1078506	Identifier	n		1078482	0					
ANR	1078507	Identifier	flags		1078482	1					
ANR	1078508	Identifier	CN_RO		1078482	1					
ANR	1078509	ReturnStatement	return true ;	644:2:14758:14769	1078482	1	True				
ANR	1078510	Identifier	true		1078482	0					
ANR	1078511	ReturnStatement	return false ;	646:1:14775:14787	1078482	2	True				
ANR	1078512	Identifier	false		1078482	0					
ANR	1078513	ReturnType	R_API bool		1078482	1					
ANR	1078514	Identifier	r_config_readonly		1078482	2					
ANR	1078515	ParameterList	"RConfig * cfg , const char * key"		1078482	3					
ANR	1078516	Parameter	RConfig * cfg	640:29:14644:14655	1078482	0	True				
ANR	1078517	ParameterType	RConfig *		1078482	0					
ANR	1078518	Identifier	cfg		1078482	1					
ANR	1078519	Parameter	const char * key	640:43:14658:14672	1078482	1	True				
ANR	1078520	ParameterType	const char *		1078482	0					
ANR	1078521	Identifier	key		1078482	1					
ANR	1078522	CFGEntryNode	ENTRY		1078482		True				
ANR	1078523	CFGExitNode	EXIT		1078482		True				
ANR	1078524	Symbol	n -> flags		1078482						
ANR	1078525	Symbol	CN_RO		1078482						
ANR	1078526	Symbol	cfg		1078482						
ANR	1078527	Symbol	* n		1078482						
ANR	1078528	Symbol	true		1078482						
ANR	1078529	Symbol	false		1078482						
ANR	1078530	Symbol	r_config_node_get		1078482						
ANR	1078531	Symbol	key		1078482						
ANR	1078532	Symbol	n		1078482						
ANR	1078533	Function	r_config_new	649:0:14792:15158							
ANR	1078534	FunctionDef	r_config_new (void * user)		1078533	0					
ANR	1078535	CompoundStatement		649:40:14832:15158	1078533	0					
ANR	1078536	IdentifierDeclStatement	RConfig * cfg = R_NEW0 ( RConfig ) ;	650:1:14835:14866	1078533	0	True				
ANR	1078537	IdentifierDecl	* cfg = R_NEW0 ( RConfig )		1078533	0					
ANR	1078538	IdentifierDeclType	RConfig *		1078533	0					
ANR	1078539	Identifier	cfg		1078533	1					
ANR	1078540	AssignmentExpression	* cfg = R_NEW0 ( RConfig )		1078533	2		=			
ANR	1078541	Identifier	cfg		1078533	0					
ANR	1078542	CallExpression	R_NEW0 ( RConfig )		1078533	1					
ANR	1078543	Callee	R_NEW0		1078533	0					
ANR	1078544	Identifier	R_NEW0		1078533	0					
ANR	1078545	ArgumentList	RConfig		1078533	1					
ANR	1078546	Argument	RConfig		1078533	0					
ANR	1078547	Identifier	RConfig		1078533	0					
ANR	1078548	IfStatement	if ( ! cfg )		1078533	1					
ANR	1078549	Condition	! cfg	651:5:14873:14876	1078533	0	True				
ANR	1078550	UnaryOperationExpression	! cfg		1078533	0					
ANR	1078551	UnaryOperator	!		1078533	0					
ANR	1078552	Identifier	cfg		1078533	1					
ANR	1078553	CompoundStatement		3:11:46:46	1078533	1					
ANR	1078554	ReturnStatement	return NULL ;	652:2:14883:14894	1078533	0	True				
ANR	1078555	Identifier	NULL		1078533	0					
ANR	1078556	ExpressionStatement	cfg -> ht = ht_pp_new0 ( )	654:1:14900:14923	1078533	2	True				
ANR	1078557	AssignmentExpression	cfg -> ht = ht_pp_new0 ( )		1078533	0		=			
ANR	1078558	PtrMemberAccess	cfg -> ht		1078533	0					
ANR	1078559	Identifier	cfg		1078533	0					
ANR	1078560	Identifier	ht		1078533	1					
ANR	1078561	CallExpression	ht_pp_new0 ( )		1078533	1					
ANR	1078562	Callee	ht_pp_new0		1078533	0					
ANR	1078563	Identifier	ht_pp_new0		1078533	0					
ANR	1078564	ArgumentList			1078533	1					
ANR	1078565	ExpressionStatement	cfg -> nodes = r_list_newf ( ( RListFree ) r_config_node_free )	655:1:14926:14982	1078533	3	True				
ANR	1078566	AssignmentExpression	cfg -> nodes = r_list_newf ( ( RListFree ) r_config_node_free )		1078533	0		=			
ANR	1078567	PtrMemberAccess	cfg -> nodes		1078533	0					
ANR	1078568	Identifier	cfg		1078533	0					
ANR	1078569	Identifier	nodes		1078533	1					
ANR	1078570	CallExpression	r_list_newf ( ( RListFree ) r_config_node_free )		1078533	1					
ANR	1078571	Callee	r_list_newf		1078533	0					
ANR	1078572	Identifier	r_list_newf		1078533	0					
ANR	1078573	ArgumentList	( RListFree ) r_config_node_free		1078533	1					
ANR	1078574	Argument	( RListFree ) r_config_node_free		1078533	0					
ANR	1078575	CastExpression	( RListFree ) r_config_node_free		1078533	0					
ANR	1078576	CastTarget	RListFree		1078533	0					
ANR	1078577	Identifier	r_config_node_free		1078533	1					
ANR	1078578	IfStatement	if ( ! cfg -> nodes )		1078533	4					
ANR	1078579	Condition	! cfg -> nodes	656:5:14989:14999	1078533	0	True				
ANR	1078580	UnaryOperationExpression	! cfg -> nodes		1078533	0					
ANR	1078581	UnaryOperator	!		1078533	0					
ANR	1078582	PtrMemberAccess	cfg -> nodes		1078533	1					
ANR	1078583	Identifier	cfg		1078533	0					
ANR	1078584	Identifier	nodes		1078533	1					
ANR	1078585	CompoundStatement		8:18:169:169	1078533	1					
ANR	1078586	ExpressionStatement	R_FREE ( cfg )	657:2:15006:15018	1078533	0	True				
ANR	1078587	CallExpression	R_FREE ( cfg )		1078533	0					
ANR	1078588	Callee	R_FREE		1078533	0					
ANR	1078589	Identifier	R_FREE		1078533	0					
ANR	1078590	ArgumentList	cfg		1078533	1					
ANR	1078591	Argument	cfg		1078533	0					
ANR	1078592	Identifier	cfg		1078533	0					
ANR	1078593	ReturnStatement	return NULL ;	658:2:15022:15033	1078533	1	True				
ANR	1078594	Identifier	NULL		1078533	0					
ANR	1078595	ExpressionStatement	cfg -> user = user	660:1:15039:15055	1078533	5	True				
ANR	1078596	AssignmentExpression	cfg -> user = user		1078533	0		=			
ANR	1078597	PtrMemberAccess	cfg -> user		1078533	0					
ANR	1078598	Identifier	cfg		1078533	0					
ANR	1078599	Identifier	user		1078533	1					
ANR	1078600	Identifier	user		1078533	1					
ANR	1078601	ExpressionStatement	cfg -> num = NULL	661:1:15058:15073	1078533	6	True				
ANR	1078602	AssignmentExpression	cfg -> num = NULL		1078533	0		=			
ANR	1078603	PtrMemberAccess	cfg -> num		1078533	0					
ANR	1078604	Identifier	cfg		1078533	0					
ANR	1078605	Identifier	num		1078533	1					
ANR	1078606	Identifier	NULL		1078533	1					
ANR	1078607	ExpressionStatement	cfg -> n_nodes = 0	662:1:15076:15092	1078533	7	True				
ANR	1078608	AssignmentExpression	cfg -> n_nodes = 0		1078533	0		=			
ANR	1078609	PtrMemberAccess	cfg -> n_nodes		1078533	0					
ANR	1078610	Identifier	cfg		1078533	0					
ANR	1078611	Identifier	n_nodes		1078533	1					
ANR	1078612	PrimaryExpression	0		1078533	1					
ANR	1078613	ExpressionStatement	cfg -> lock = 0	663:1:15095:15108	1078533	8	True				
ANR	1078614	AssignmentExpression	cfg -> lock = 0		1078533	0		=			
ANR	1078615	PtrMemberAccess	cfg -> lock		1078533	0					
ANR	1078616	Identifier	cfg		1078533	0					
ANR	1078617	Identifier	lock		1078533	1					
ANR	1078618	PrimaryExpression	0		1078533	1					
ANR	1078619	ExpressionStatement	cfg -> cb_printf = ( void * ) printf	664:1:15111:15143	1078533	9	True				
ANR	1078620	AssignmentExpression	cfg -> cb_printf = ( void * ) printf		1078533	0		=			
ANR	1078621	PtrMemberAccess	cfg -> cb_printf		1078533	0					
ANR	1078622	Identifier	cfg		1078533	0					
ANR	1078623	Identifier	cb_printf		1078533	1					
ANR	1078624	CastExpression	( void * ) printf		1078533	1					
ANR	1078625	CastTarget	void *		1078533	0					
ANR	1078626	Identifier	printf		1078533	1					
ANR	1078627	ReturnStatement	return cfg ;	665:1:15146:15156	1078533	10	True				
ANR	1078628	Identifier	cfg		1078533	0					
ANR	1078629	ReturnType	R_API RConfig *		1078533	1					
ANR	1078630	Identifier	r_config_new		1078533	2					
ANR	1078631	ParameterList	void * user		1078533	3					
ANR	1078632	Parameter	void * user	649:28:14820:14829	1078533	0	True				
ANR	1078633	ParameterType	void *		1078533	0					
ANR	1078634	Identifier	user		1078533	1					
ANR	1078635	CFGEntryNode	ENTRY		1078533		True				
ANR	1078636	CFGExitNode	EXIT		1078533		True				
ANR	1078637	Symbol	NULL		1078533						
ANR	1078638	Symbol	cfg -> lock		1078533						
ANR	1078639	Symbol	cfg		1078533						
ANR	1078640	Symbol	r_list_newf		1078533						
ANR	1078641	Symbol	cfg -> cb_printf		1078533						
ANR	1078642	Symbol	printf		1078533						
ANR	1078643	Symbol	R_NEW0		1078533						
ANR	1078644	Symbol	* cfg		1078533						
ANR	1078645	Symbol	ht_pp_new0		1078533						
ANR	1078646	Symbol	r_config_node_free		1078533						
ANR	1078647	Symbol	RConfig		1078533						
ANR	1078648	Symbol	cfg -> n_nodes		1078533						
ANR	1078649	Symbol	cfg -> num		1078533						
ANR	1078650	Symbol	user		1078533						
ANR	1078651	Symbol	cfg -> ht		1078533						
ANR	1078652	Symbol	cfg -> nodes		1078533						
ANR	1078653	Symbol	cfg -> user		1078533						
ANR	1078654	Function	r_config_clone	668:0:15161:15561							
ANR	1078655	FunctionDef	r_config_clone (RConfig * cfg)		1078654	0					
ANR	1078656	CompoundStatement		668:44:15205:15561	1078654	0					
ANR	1078657	IdentifierDeclStatement	RListIter * iter ;	669:1:15208:15223	1078654	0	True				
ANR	1078658	IdentifierDecl	* iter		1078654	0					
ANR	1078659	IdentifierDeclType	RListIter *		1078654	0					
ANR	1078660	Identifier	iter		1078654	1					
ANR	1078661	IdentifierDeclStatement	RConfigNode * node ;	670:1:15226:15243	1078654	1	True				
ANR	1078662	IdentifierDecl	* node		1078654	0					
ANR	1078663	IdentifierDeclType	RConfigNode *		1078654	0					
ANR	1078664	Identifier	node		1078654	1					
ANR	1078665	IdentifierDeclStatement	RConfig * c = r_config_new ( cfg -> user ) ;	671:1:15246:15283	1078654	2	True				
ANR	1078666	IdentifierDecl	* c = r_config_new ( cfg -> user )		1078654	0					
ANR	1078667	IdentifierDeclType	RConfig *		1078654	0					
ANR	1078668	Identifier	c		1078654	1					
ANR	1078669	AssignmentExpression	* c = r_config_new ( cfg -> user )		1078654	2		=			
ANR	1078670	Identifier	c		1078654	0					
ANR	1078671	CallExpression	r_config_new ( cfg -> user )		1078654	1					
ANR	1078672	Callee	r_config_new		1078654	0					
ANR	1078673	Identifier	r_config_new		1078654	0					
ANR	1078674	ArgumentList	cfg -> user		1078654	1					
ANR	1078675	Argument	cfg -> user		1078654	0					
ANR	1078676	PtrMemberAccess	cfg -> user		1078654	0					
ANR	1078677	Identifier	cfg		1078654	0					
ANR	1078678	Identifier	user		1078654	1					
ANR	1078679	IfStatement	if ( ! c )		1078654	3					
ANR	1078680	Condition	! c	672:5:15290:15291	1078654	0	True				
ANR	1078681	UnaryOperationExpression	! c		1078654	0					
ANR	1078682	UnaryOperator	!		1078654	0					
ANR	1078683	Identifier	c		1078654	1					
ANR	1078684	CompoundStatement		5:9:88:88	1078654	1					
ANR	1078685	ReturnStatement	return NULL ;	673:2:15298:15309	1078654	0	True				
ANR	1078686	Identifier	NULL		1078654	0					
ANR	1078687	Statement	r_list_foreach	675:1:15315:15328	1078654	4	True				
ANR	1078688	Statement	(	675:16:15330:15330	1078654	5	True				
ANR	1078689	Statement	cfg	675:17:15331:15333	1078654	6	True				
ANR	1078690	Statement	->	675:20:15334:15335	1078654	7	True				
ANR	1078691	Statement	nodes	675:22:15336:15340	1078654	8	True				
ANR	1078692	Statement	","	675:27:15341:15341	1078654	9	True				
ANR	1078693	Statement	iter	675:29:15343:15346	1078654	10	True				
ANR	1078694	Statement	","	675:33:15347:15347	1078654	11	True				
ANR	1078695	Statement	node	675:35:15349:15352	1078654	12	True				
ANR	1078696	Statement	)	675:39:15353:15353	1078654	13	True				
ANR	1078697	CompoundStatement		9:2:153:197	1078654	14					
ANR	1078698	IdentifierDeclStatement	RConfigNode * nn = r_config_node_clone ( node ) ;	676:2:15359:15403	1078654	0	True				
ANR	1078699	IdentifierDecl	* nn = r_config_node_clone ( node )		1078654	0					
ANR	1078700	IdentifierDeclType	RConfigNode *		1078654	0					
ANR	1078701	Identifier	nn		1078654	1					
ANR	1078702	AssignmentExpression	* nn = r_config_node_clone ( node )		1078654	2		=			
ANR	1078703	Identifier	nn		1078654	0					
ANR	1078704	CallExpression	r_config_node_clone ( node )		1078654	1					
ANR	1078705	Callee	r_config_node_clone		1078654	0					
ANR	1078706	Identifier	r_config_node_clone		1078654	0					
ANR	1078707	ArgumentList	node		1078654	1					
ANR	1078708	Argument	node		1078654	0					
ANR	1078709	Identifier	node		1078654	0					
ANR	1078710	ExpressionStatement	"ht_pp_insert ( c -> ht , node -> name , nn )"	677:2:15407:15443	1078654	1	True				
ANR	1078711	CallExpression	"ht_pp_insert ( c -> ht , node -> name , nn )"		1078654	0					
ANR	1078712	Callee	ht_pp_insert		1078654	0					
ANR	1078713	Identifier	ht_pp_insert		1078654	0					
ANR	1078714	ArgumentList	c -> ht		1078654	1					
ANR	1078715	Argument	c -> ht		1078654	0					
ANR	1078716	PtrMemberAccess	c -> ht		1078654	0					
ANR	1078717	Identifier	c		1078654	0					
ANR	1078718	Identifier	ht		1078654	1					
ANR	1078719	Argument	node -> name		1078654	1					
ANR	1078720	PtrMemberAccess	node -> name		1078654	0					
ANR	1078721	Identifier	node		1078654	0					
ANR	1078722	Identifier	name		1078654	1					
ANR	1078723	Argument	nn		1078654	2					
ANR	1078724	Identifier	nn		1078654	0					
ANR	1078725	ExpressionStatement	"r_list_append ( c -> nodes , nn )"	678:2:15447:15475	1078654	2	True				
ANR	1078726	CallExpression	"r_list_append ( c -> nodes , nn )"		1078654	0					
ANR	1078727	Callee	r_list_append		1078654	0					
ANR	1078728	Identifier	r_list_append		1078654	0					
ANR	1078729	ArgumentList	c -> nodes		1078654	1					
ANR	1078730	Argument	c -> nodes		1078654	0					
ANR	1078731	PtrMemberAccess	c -> nodes		1078654	0					
ANR	1078732	Identifier	c		1078654	0					
ANR	1078733	Identifier	nodes		1078654	1					
ANR	1078734	Argument	nn		1078654	1					
ANR	1078735	Identifier	nn		1078654	0					
ANR	1078736	ExpressionStatement	c -> n_nodes ++	679:2:15479:15491	1078654	3	True				
ANR	1078737	PostIncDecOperationExpression	c -> n_nodes ++		1078654	0					
ANR	1078738	PtrMemberAccess	c -> n_nodes		1078654	0					
ANR	1078739	Identifier	c		1078654	0					
ANR	1078740	Identifier	n_nodes		1078654	1					
ANR	1078741	IncDec	++		1078654	1					
ANR	1078742	ExpressionStatement	c -> lock = cfg -> lock	681:1:15497:15516	1078654	15	True				
ANR	1078743	AssignmentExpression	c -> lock = cfg -> lock		1078654	0		=			
ANR	1078744	PtrMemberAccess	c -> lock		1078654	0					
ANR	1078745	Identifier	c		1078654	0					
ANR	1078746	Identifier	lock		1078654	1					
ANR	1078747	PtrMemberAccess	cfg -> lock		1078654	1					
ANR	1078748	Identifier	cfg		1078654	0					
ANR	1078749	Identifier	lock		1078654	1					
ANR	1078750	ExpressionStatement	c -> cb_printf = cfg -> cb_printf	682:1:15519:15548	1078654	16	True				
ANR	1078751	AssignmentExpression	c -> cb_printf = cfg -> cb_printf		1078654	0		=			
ANR	1078752	PtrMemberAccess	c -> cb_printf		1078654	0					
ANR	1078753	Identifier	c		1078654	0					
ANR	1078754	Identifier	cb_printf		1078654	1					
ANR	1078755	PtrMemberAccess	cfg -> cb_printf		1078654	1					
ANR	1078756	Identifier	cfg		1078654	0					
ANR	1078757	Identifier	cb_printf		1078654	1					
ANR	1078758	ReturnStatement	return c ;	683:1:15551:15559	1078654	17	True				
ANR	1078759	Identifier	c		1078654	0					
ANR	1078760	ReturnType	R_API RConfig *		1078654	1					
ANR	1078761	Identifier	r_config_clone		1078654	2					
ANR	1078762	ParameterList	RConfig * cfg		1078654	3					
ANR	1078763	Parameter	RConfig * cfg	668:30:15191:15202	1078654	0	True				
ANR	1078764	ParameterType	RConfig *		1078654	0					
ANR	1078765	Identifier	cfg		1078654	1					
ANR	1078766	CFGEntryNode	ENTRY		1078654		True				
ANR	1078767	CFGExitNode	EXIT		1078654		True				
ANR	1078768	Symbol	nn		1078654						
ANR	1078769	Symbol	c		1078654						
ANR	1078770	Symbol	NULL		1078654						
ANR	1078771	Symbol	cfg -> lock		1078654						
ANR	1078772	Symbol	c -> ht		1078654						
ANR	1078773	Symbol	cfg		1078654						
ANR	1078774	Symbol	r_config_node_clone		1078654						
ANR	1078775	Symbol	c -> cb_printf		1078654						
ANR	1078776	Symbol	cfg -> cb_printf		1078654						
ANR	1078777	Symbol	iter		1078654						
ANR	1078778	Symbol	c -> lock		1078654						
ANR	1078779	Symbol	* c		1078654						
ANR	1078780	Symbol	node		1078654						
ANR	1078781	Symbol	* cfg		1078654						
ANR	1078782	Symbol	node -> name		1078654						
ANR	1078783	Symbol	c -> nodes		1078654						
ANR	1078784	Symbol	c -> n_nodes		1078654						
ANR	1078785	Symbol	* node		1078654						
ANR	1078786	Symbol	r_config_new		1078654						
ANR	1078787	Symbol	cfg -> user		1078654						
ANR	1078788	Function	r_config_free	686:0:15564:15735							
ANR	1078789	FunctionDef	r_config_free (RConfig * cfg)		1078788	0					
ANR	1078790	CompoundStatement		686:39:15603:15735	1078788	0					
ANR	1078791	IfStatement	if ( cfg )		1078788	0					
ANR	1078792	Condition	cfg	687:5:15610:15612	1078788	0	True				
ANR	1078793	Identifier	cfg		1078788	0					
ANR	1078794	CompoundStatement		2:10:11:11	1078788	1					
ANR	1078795	ExpressionStatement	cfg -> nodes -> free = r_config_node_free	688:2:15619:15656	1078788	0	True				
ANR	1078796	AssignmentExpression	cfg -> nodes -> free = r_config_node_free		1078788	0		=			
ANR	1078797	PtrMemberAccess	cfg -> nodes -> free		1078788	0					
ANR	1078798	PtrMemberAccess	cfg -> nodes		1078788	0					
ANR	1078799	Identifier	cfg		1078788	0					
ANR	1078800	Identifier	nodes		1078788	1					
ANR	1078801	Identifier	free		1078788	1					
ANR	1078802	Identifier	r_config_node_free		1078788	1					
ANR	1078803	ExpressionStatement	r_list_free ( cfg -> nodes )	689:2:15668:15692	1078788	1	True				
ANR	1078804	CallExpression	r_list_free ( cfg -> nodes )		1078788	0					
ANR	1078805	Callee	r_list_free		1078788	0					
ANR	1078806	Identifier	r_list_free		1078788	0					
ANR	1078807	ArgumentList	cfg -> nodes		1078788	1					
ANR	1078808	Argument	cfg -> nodes		1078788	0					
ANR	1078809	PtrMemberAccess	cfg -> nodes		1078788	0					
ANR	1078810	Identifier	cfg		1078788	0					
ANR	1078811	Identifier	nodes		1078788	1					
ANR	1078812	ExpressionStatement	ht_pp_free ( cfg -> ht )	690:2:15696:15716	1078788	2	True				
ANR	1078813	CallExpression	ht_pp_free ( cfg -> ht )		1078788	0					
ANR	1078814	Callee	ht_pp_free		1078788	0					
ANR	1078815	Identifier	ht_pp_free		1078788	0					
ANR	1078816	ArgumentList	cfg -> ht		1078788	1					
ANR	1078817	Argument	cfg -> ht		1078788	0					
ANR	1078818	PtrMemberAccess	cfg -> ht		1078788	0					
ANR	1078819	Identifier	cfg		1078788	0					
ANR	1078820	Identifier	ht		1078788	1					
ANR	1078821	ExpressionStatement	free ( cfg )	691:2:15720:15730	1078788	3	True				
ANR	1078822	CallExpression	free ( cfg )		1078788	0					
ANR	1078823	Callee	free		1078788	0					
ANR	1078824	Identifier	free		1078788	0					
ANR	1078825	ArgumentList	cfg		1078788	1					
ANR	1078826	Argument	cfg		1078788	0					
ANR	1078827	Identifier	cfg		1078788	0					
ANR	1078828	ReturnType	R_API void		1078788	1					
ANR	1078829	Identifier	r_config_free		1078788	2					
ANR	1078830	ParameterList	RConfig * cfg		1078788	3					
ANR	1078831	Parameter	RConfig * cfg	686:25:15589:15600	1078788	0	True				
ANR	1078832	ParameterType	RConfig *		1078788	0					
ANR	1078833	Identifier	cfg		1078788	1					
ANR	1078834	CFGEntryNode	ENTRY		1078788		True				
ANR	1078835	CFGExitNode	EXIT		1078788		True				
ANR	1078836	Symbol	* cfg -> nodes		1078788						
ANR	1078837	Symbol	* cfg		1078788						
ANR	1078838	Symbol	cfg		1078788						
ANR	1078839	Symbol	r_config_node_free		1078788						
ANR	1078840	Symbol	* * cfg		1078788						
ANR	1078841	Symbol	cfg -> nodes -> free		1078788						
ANR	1078842	Symbol	cfg -> ht		1078788						
ANR	1078843	Symbol	cfg -> nodes		1078788						
ANR	1078844	Function	r_config_visual_hit_i	695:0:15738:16007							
ANR	1078845	FunctionDef	"r_config_visual_hit_i (RConfig * cfg , const char * name , int delta)"		1078844	0					
ANR	1078846	CompoundStatement		695:76:15814:16007	1078844	0					
ANR	1078847	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , name ) ;"	696:1:15817:15866	1078844	0	True				
ANR	1078848	IdentifierDecl	"* node = r_config_node_get ( cfg , name )"		1078844	0					
ANR	1078849	IdentifierDeclType	RConfigNode *		1078844	0					
ANR	1078850	Identifier	node		1078844	1					
ANR	1078851	AssignmentExpression	"* node = r_config_node_get ( cfg , name )"		1078844	2		=			
ANR	1078852	Identifier	node		1078844	0					
ANR	1078853	CallExpression	"r_config_node_get ( cfg , name )"		1078844	1					
ANR	1078854	Callee	r_config_node_get		1078844	0					
ANR	1078855	Identifier	r_config_node_get		1078844	0					
ANR	1078856	ArgumentList	cfg		1078844	1					
ANR	1078857	Argument	cfg		1078844	0					
ANR	1078858	Identifier	cfg		1078844	0					
ANR	1078859	Argument	name		1078844	1					
ANR	1078860	Identifier	name		1078844	0					
ANR	1078861	IfStatement	if ( node && ( node -> flags & CN_INT || node -> flags & CN_OFFT ) )		1078844	1					
ANR	1078862	Condition	node && ( node -> flags & CN_INT || node -> flags & CN_OFFT )	697:5:15873:15927	1078844	0	True				
ANR	1078863	AndExpression	node && ( node -> flags & CN_INT || node -> flags & CN_OFFT )		1078844	0		&&			
ANR	1078864	Identifier	node		1078844	0					
ANR	1078865	OrExpression	node -> flags & CN_INT || node -> flags & CN_OFFT		1078844	1		||			
ANR	1078866	BitAndExpression	node -> flags & CN_INT		1078844	0		&			
ANR	1078867	PtrMemberAccess	node -> flags		1078844	0					
ANR	1078868	Identifier	node		1078844	0					
ANR	1078869	Identifier	flags		1078844	1					
ANR	1078870	Identifier	CN_INT		1078844	1					
ANR	1078871	BitAndExpression	node -> flags & CN_OFFT		1078844	1		&			
ANR	1078872	PtrMemberAccess	node -> flags		1078844	0					
ANR	1078873	Identifier	node		1078844	0					
ANR	1078874	Identifier	flags		1078844	1					
ANR	1078875	Identifier	CN_OFFT		1078844	1					
ANR	1078876	CompoundStatement		3:62:115:115	1078844	1					
ANR	1078877	ExpressionStatement	"( void ) r_config_set_i ( cfg , name , r_config_get_i ( cfg , name ) + delta )"	698:2:15934:16002	1078844	0	True				
ANR	1078878	CastExpression	"( void ) r_config_set_i ( cfg , name , r_config_get_i ( cfg , name ) + delta )"		1078844	0					
ANR	1078879	CastTarget	void		1078844	0					
ANR	1078880	CallExpression	"r_config_set_i ( cfg , name , r_config_get_i ( cfg , name ) + delta )"		1078844	1					
ANR	1078881	Callee	r_config_set_i		1078844	0					
ANR	1078882	Identifier	r_config_set_i		1078844	0					
ANR	1078883	ArgumentList	cfg		1078844	1					
ANR	1078884	Argument	cfg		1078844	0					
ANR	1078885	Identifier	cfg		1078844	0					
ANR	1078886	Argument	name		1078844	1					
ANR	1078887	Identifier	name		1078844	0					
ANR	1078888	Argument	"r_config_get_i ( cfg , name ) + delta"		1078844	2					
ANR	1078889	AdditiveExpression	"r_config_get_i ( cfg , name ) + delta"		1078844	0		+			
ANR	1078890	CallExpression	"r_config_get_i ( cfg , name )"		1078844	0					
ANR	1078891	Callee	r_config_get_i		1078844	0					
ANR	1078892	Identifier	r_config_get_i		1078844	0					
ANR	1078893	ArgumentList	cfg		1078844	1					
ANR	1078894	Argument	cfg		1078844	0					
ANR	1078895	Identifier	cfg		1078844	0					
ANR	1078896	Argument	name		1078844	1					
ANR	1078897	Identifier	name		1078844	0					
ANR	1078898	Identifier	delta		1078844	1					
ANR	1078899	ReturnType	R_API void		1078844	1					
ANR	1078900	Identifier	r_config_visual_hit_i		1078844	2					
ANR	1078901	ParameterList	"RConfig * cfg , const char * name , int delta"		1078844	3					
ANR	1078902	Parameter	RConfig * cfg	695:33:15771:15782	1078844	0	True				
ANR	1078903	ParameterType	RConfig *		1078844	0					
ANR	1078904	Identifier	cfg		1078844	1					
ANR	1078905	Parameter	const char * name	695:47:15785:15800	1078844	1	True				
ANR	1078906	ParameterType	const char *		1078844	0					
ANR	1078907	Identifier	name		1078844	1					
ANR	1078908	Parameter	int delta	695:65:15803:15811	1078844	2	True				
ANR	1078909	ParameterType	int		1078844	0					
ANR	1078910	Identifier	delta		1078844	1					
ANR	1078911	CFGEntryNode	ENTRY		1078844		True				
ANR	1078912	CFGExitNode	EXIT		1078844		True				
ANR	1078913	Symbol	node		1078844						
ANR	1078914	Symbol	CN_OFFT		1078844						
ANR	1078915	Symbol	cfg		1078844						
ANR	1078916	Symbol	node -> flags		1078844						
ANR	1078917	Symbol	CN_INT		1078844						
ANR	1078918	Symbol	r_config_get_i		1078844						
ANR	1078919	Symbol	name		1078844						
ANR	1078920	Symbol	delta		1078844						
ANR	1078921	Symbol	* node		1078844						
ANR	1078922	Symbol	r_config_node_get		1078844						
ANR	1078923	Function	r_config_bump	702:0:16010:16180							
ANR	1078924	FunctionDef	"r_config_bump (RConfig * cfg , const char * key)"		1078923	0					
ANR	1078925	CompoundStatement		702:56:16066:16180	1078923	0					
ANR	1078926	IdentifierDeclStatement	"char * orig = strdup ( r_config_get ( cfg , key ) ) ;"	703:1:16069:16114	1078923	0	True				
ANR	1078927	IdentifierDecl	"* orig = strdup ( r_config_get ( cfg , key ) )"		1078923	0					
ANR	1078928	IdentifierDeclType	char *		1078923	0					
ANR	1078929	Identifier	orig		1078923	1					
ANR	1078930	AssignmentExpression	"* orig = strdup ( r_config_get ( cfg , key ) )"		1078923	2		=			
ANR	1078931	Identifier	orig		1078923	0					
ANR	1078932	CallExpression	"strdup ( r_config_get ( cfg , key ) )"		1078923	1					
ANR	1078933	Callee	strdup		1078923	0					
ANR	1078934	Identifier	strdup		1078923	0					
ANR	1078935	ArgumentList	"r_config_get ( cfg , key )"		1078923	1					
ANR	1078936	Argument	"r_config_get ( cfg , key )"		1078923	0					
ANR	1078937	CallExpression	"r_config_get ( cfg , key )"		1078923	0					
ANR	1078938	Callee	r_config_get		1078923	0					
ANR	1078939	Identifier	r_config_get		1078923	0					
ANR	1078940	ArgumentList	cfg		1078923	1					
ANR	1078941	Argument	cfg		1078923	0					
ANR	1078942	Identifier	cfg		1078923	0					
ANR	1078943	Argument	key		1078923	1					
ANR	1078944	Identifier	key		1078923	0					
ANR	1078945	IfStatement	if ( orig )		1078923	1					
ANR	1078946	Condition	orig	704:5:16121:16124	1078923	0	True				
ANR	1078947	Identifier	orig		1078923	0					
ANR	1078948	CompoundStatement		3:11:60:60	1078923	1					
ANR	1078949	ExpressionStatement	"r_config_set ( cfg , key , orig )"	705:2:16131:16160	1078923	0	True				
ANR	1078950	CallExpression	"r_config_set ( cfg , key , orig )"		1078923	0					
ANR	1078951	Callee	r_config_set		1078923	0					
ANR	1078952	Identifier	r_config_set		1078923	0					
ANR	1078953	ArgumentList	cfg		1078923	1					
ANR	1078954	Argument	cfg		1078923	0					
ANR	1078955	Identifier	cfg		1078923	0					
ANR	1078956	Argument	key		1078923	1					
ANR	1078957	Identifier	key		1078923	0					
ANR	1078958	Argument	orig		1078923	2					
ANR	1078959	Identifier	orig		1078923	0					
ANR	1078960	ExpressionStatement	free ( orig )	706:2:16164:16175	1078923	1	True				
ANR	1078961	CallExpression	free ( orig )		1078923	0					
ANR	1078962	Callee	free		1078923	0					
ANR	1078963	Identifier	free		1078923	0					
ANR	1078964	ArgumentList	orig		1078923	1					
ANR	1078965	Argument	orig		1078923	0					
ANR	1078966	Identifier	orig		1078923	0					
ANR	1078967	ReturnType	R_API void		1078923	1					
ANR	1078968	Identifier	r_config_bump		1078923	2					
ANR	1078969	ParameterList	"RConfig * cfg , const char * key"		1078923	3					
ANR	1078970	Parameter	RConfig * cfg	702:25:16035:16046	1078923	0	True				
ANR	1078971	ParameterType	RConfig *		1078923	0					
ANR	1078972	Identifier	cfg		1078923	1					
ANR	1078973	Parameter	const char * key	702:39:16049:16063	1078923	1	True				
ANR	1078974	ParameterType	const char *		1078923	0					
ANR	1078975	Identifier	key		1078923	1					
ANR	1078976	CFGEntryNode	ENTRY		1078923		True				
ANR	1078977	CFGExitNode	EXIT		1078923		True				
ANR	1078978	Symbol	cfg		1078923						
ANR	1078979	Symbol	orig		1078923						
ANR	1078980	Symbol	r_config_get		1078923						
ANR	1078981	Symbol	strdup		1078923						
ANR	1078982	Symbol	key		1078923						
