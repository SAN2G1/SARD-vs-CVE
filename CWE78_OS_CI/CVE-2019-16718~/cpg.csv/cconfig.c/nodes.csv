command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	727891	File	data/converged/CVE-2019-16718~_radare2/cconfig.c								
ANR	727892	Function	set_options	14:0:501:757							
ANR	727893	FunctionDef	set_options (RConfigNode * node)		727892	0					
ANR	727894	CompoundStatement		14:48:549:757	727892	0					
ANR	727895	IdentifierDeclStatement	va_list argp ;	15:1:552:564	727892	0	True				
ANR	727896	IdentifierDecl	argp		727892	0					
ANR	727897	IdentifierDeclType	va_list		727892	0					
ANR	727898	Identifier	argp		727892	1					
ANR	727899	IdentifierDeclStatement	char * option = NULL ;	16:1:567:586	727892	1	True				
ANR	727900	IdentifierDecl	* option = NULL		727892	0					
ANR	727901	IdentifierDeclType	char *		727892	0					
ANR	727902	Identifier	option		727892	1					
ANR	727903	AssignmentExpression	* option = NULL		727892	2		=			
ANR	727904	Identifier	NULL		727892	0					
ANR	727905	Identifier	NULL		727892	1					
ANR	727906	ExpressionStatement	"va_start ( argp , node )"	17:1:589:610	727892	2	True				
ANR	727907	CallExpression	"va_start ( argp , node )"		727892	0					
ANR	727908	Callee	va_start		727892	0					
ANR	727909	Identifier	va_start		727892	0					
ANR	727910	ArgumentList	argp		727892	1					
ANR	727911	Argument	argp		727892	0					
ANR	727912	Identifier	argp		727892	0					
ANR	727913	Argument	node		727892	1					
ANR	727914	Identifier	node		727892	0					
ANR	727915	Statement	option	18:1:613:618	727892	3	True				
ANR	727916	Statement	=	18:8:620:620	727892	4	True				
ANR	727917	Statement	va_arg	18:10:622:627	727892	5	True				
ANR	727918	Statement	(	18:17:629:629	727892	6	True				
ANR	727919	Statement	argp	18:18:630:633	727892	7	True				
ANR	727920	Statement	","	18:22:634:634	727892	8	True				
ANR	727921	Statement	char	18:24:636:639	727892	9	True				
ANR	727922	Statement	*	18:29:641:641	727892	10	True				
ANR	727923	Statement	)	18:30:642:642	727892	11	True				
ANR	727924	ExpressionStatement		18:31:643:643	727892	12	True				
ANR	727925	WhileStatement	while ( option )		727892	13					
ANR	727926	Condition	option	19:8:653:658	727892	0	True				
ANR	727927	Identifier	option		727892	0					
ANR	727928	CompoundStatement		6:16:111:111	727892	1					
ANR	727929	ExpressionStatement	"r_list_append ( node -> options , option )"	20:2:665:702	727892	0	True				
ANR	727930	CallExpression	"r_list_append ( node -> options , option )"		727892	0					
ANR	727931	Callee	r_list_append		727892	0					
ANR	727932	Identifier	r_list_append		727892	0					
ANR	727933	ArgumentList	node -> options		727892	1					
ANR	727934	Argument	node -> options		727892	0					
ANR	727935	PtrMemberAccess	node -> options		727892	0					
ANR	727936	Identifier	node		727892	0					
ANR	727937	Identifier	options		727892	1					
ANR	727938	Argument	option		727892	1					
ANR	727939	Identifier	option		727892	0					
ANR	727940	Statement	option	21:2:706:711	727892	1	True				
ANR	727941	Statement	=	21:9:713:713	727892	2	True				
ANR	727942	Statement	va_arg	21:11:715:720	727892	3	True				
ANR	727943	Statement	(	21:18:722:722	727892	4	True				
ANR	727944	Statement	argp	21:19:723:726	727892	5	True				
ANR	727945	Statement	","	21:23:727:727	727892	6	True				
ANR	727946	Statement	char	21:25:729:732	727892	7	True				
ANR	727947	Statement	*	21:30:734:734	727892	8	True				
ANR	727948	Statement	)	21:31:735:735	727892	9	True				
ANR	727949	ExpressionStatement		21:32:736:736	727892	10	True				
ANR	727950	ExpressionStatement	va_end ( argp )	23:1:742:755	727892	14	True				
ANR	727951	CallExpression	va_end ( argp )		727892	0					
ANR	727952	Callee	va_end		727892	0					
ANR	727953	Identifier	va_end		727892	0					
ANR	727954	ArgumentList	argp		727892	1					
ANR	727955	Argument	argp		727892	0					
ANR	727956	Identifier	argp		727892	0					
ANR	727957	ReturnType	static void		727892	1					
ANR	727958	Identifier	set_options		727892	2					
ANR	727959	ParameterList	RConfigNode * node		727892	3					
ANR	727960	Parameter	RConfigNode * node	14:24:525:541	727892	0	True				
ANR	727961	ParameterType	RConfigNode *		727892	0					
ANR	727962	Identifier	node		727892	1					
ANR	727963	CFGEntryNode	ENTRY		727892		True				
ANR	727964	CFGExitNode	EXIT		727892		True				
ANR	727965	Symbol	node		727892						
ANR	727966	Symbol	NULL		727892						
ANR	727967	Symbol	argp		727892						
ANR	727968	Symbol	node -> options		727892						
ANR	727969	Symbol	* node		727892						
ANR	727970	Symbol	option		727892						
ANR	727971	Function	isGdbPlugin	26:0:760:985							
ANR	727972	FunctionDef	isGdbPlugin (RCore * core)		727971	0					
ANR	727973	CompoundStatement		26:37:797:985	727971	0					
ANR	727974	IfStatement	if ( core -> io && core -> io -> desc && core -> io -> desc -> plugin )		727971	0					
ANR	727975	Condition	core -> io && core -> io -> desc && core -> io -> desc -> plugin	27:5:804:855	727971	0	True				
ANR	727976	AndExpression	core -> io && core -> io -> desc && core -> io -> desc -> plugin		727971	0		&&			
ANR	727977	PtrMemberAccess	core -> io		727971	0					
ANR	727978	Identifier	core		727971	0					
ANR	727979	Identifier	io		727971	1					
ANR	727980	AndExpression	core -> io -> desc && core -> io -> desc -> plugin		727971	1		&&			
ANR	727981	PtrMemberAccess	core -> io -> desc		727971	0					
ANR	727982	PtrMemberAccess	core -> io		727971	0					
ANR	727983	Identifier	core		727971	0					
ANR	727984	Identifier	io		727971	1					
ANR	727985	Identifier	desc		727971	1					
ANR	727986	PtrMemberAccess	core -> io -> desc -> plugin		727971	1					
ANR	727987	PtrMemberAccess	core -> io -> desc		727971	0					
ANR	727988	PtrMemberAccess	core -> io		727971	0					
ANR	727989	Identifier	core		727971	0					
ANR	727990	Identifier	io		727971	1					
ANR	727991	Identifier	desc		727971	1					
ANR	727992	Identifier	plugin		727971	1					
ANR	727993	CompoundStatement		2:59:60:60	727971	1					
ANR	727994	IfStatement	"if ( core -> io -> desc -> plugin -> name && ! strcmp ( core -> io -> desc -> plugin -> name , ""gdb"" ) )"		727971	0					
ANR	727995	Condition	"core -> io -> desc -> plugin -> name && ! strcmp ( core -> io -> desc -> plugin -> name , ""gdb"" )"	28:6:866:942	727971	0	True				
ANR	727996	AndExpression	"core -> io -> desc -> plugin -> name && ! strcmp ( core -> io -> desc -> plugin -> name , ""gdb"" )"		727971	0		&&			
ANR	727997	PtrMemberAccess	core -> io -> desc -> plugin -> name		727971	0					
ANR	727998	PtrMemberAccess	core -> io -> desc -> plugin		727971	0					
ANR	727999	PtrMemberAccess	core -> io -> desc		727971	0					
ANR	728000	PtrMemberAccess	core -> io		727971	0					
ANR	728001	Identifier	core		727971	0					
ANR	728002	Identifier	io		727971	1					
ANR	728003	Identifier	desc		727971	1					
ANR	728004	Identifier	plugin		727971	1					
ANR	728005	Identifier	name		727971	1					
ANR	728006	UnaryOperationExpression	"! strcmp ( core -> io -> desc -> plugin -> name , ""gdb"" )"		727971	1					
ANR	728007	UnaryOperator	!		727971	0					
ANR	728008	CallExpression	"strcmp ( core -> io -> desc -> plugin -> name , ""gdb"" )"		727971	1					
ANR	728009	Callee	strcmp		727971	0					
ANR	728010	Identifier	strcmp		727971	0					
ANR	728011	ArgumentList	core -> io -> desc -> plugin -> name		727971	1					
ANR	728012	Argument	core -> io -> desc -> plugin -> name		727971	0					
ANR	728013	PtrMemberAccess	core -> io -> desc -> plugin -> name		727971	0					
ANR	728014	PtrMemberAccess	core -> io -> desc -> plugin		727971	0					
ANR	728015	PtrMemberAccess	core -> io -> desc		727971	0					
ANR	728016	PtrMemberAccess	core -> io		727971	0					
ANR	728017	Identifier	core		727971	0					
ANR	728018	Identifier	io		727971	1					
ANR	728019	Identifier	desc		727971	1					
ANR	728020	Identifier	plugin		727971	1					
ANR	728021	Identifier	name		727971	1					
ANR	728022	Argument	"""gdb"""		727971	1					
ANR	728023	PrimaryExpression	"""gdb"""		727971	0					
ANR	728024	CompoundStatement		3:85:147:147	727971	1					
ANR	728025	ReturnStatement	return true ;	29:3:950:961	727971	0	True				
ANR	728026	Identifier	true		727971	0					
ANR	728027	ReturnStatement	return false ;	32:1:971:983	727971	1	True				
ANR	728028	Identifier	false		727971	0					
ANR	728029	ReturnType	static bool		727971	1					
ANR	728030	Identifier	isGdbPlugin		727971	2					
ANR	728031	ParameterList	RCore * core		727971	3					
ANR	728032	Parameter	RCore * core	26:24:784:794	727971	0	True				
ANR	728033	ParameterType	RCore *		727971	0					
ANR	728034	Identifier	core		727971	1					
ANR	728035	CFGEntryNode	ENTRY		727971		True				
ANR	728036	CFGExitNode	EXIT		727971		True				
ANR	728037	Symbol	strcmp		727971						
ANR	728038	Symbol	core -> io -> desc -> plugin		727971						
ANR	728039	Symbol	* core -> io -> desc -> plugin		727971						
ANR	728040	Symbol	* * core -> io -> desc		727971						
ANR	728041	Symbol	* core		727971						
ANR	728042	Symbol	false		727971						
ANR	728043	Symbol	core -> io -> desc		727971						
ANR	728044	Symbol	* * * core -> io		727971						
ANR	728045	Symbol	core		727971						
ANR	728046	Symbol	* core -> io		727971						
ANR	728047	Symbol	* * * core		727971						
ANR	728048	Symbol	core -> io -> desc -> plugin -> name		727971						
ANR	728049	Symbol	core -> io		727971						
ANR	728050	Symbol	true		727971						
ANR	728051	Symbol	* core -> io -> desc		727971						
ANR	728052	Symbol	* * * * core		727971						
ANR	728053	Symbol	* * core		727971						
ANR	728054	Symbol	* * core -> io		727971						
ANR	728055	Function	print_node_options	35:0:988:1158							
ANR	728056	FunctionDef	print_node_options (RConfigNode * node)		728055	0					
ANR	728057	CompoundStatement		35:50:1038:1158	728055	0					
ANR	728058	IdentifierDeclStatement	RListIter * iter ;	36:1:1041:1056	728055	0	True				
ANR	728059	IdentifierDecl	* iter		728055	0					
ANR	728060	IdentifierDeclType	RListIter *		728055	0					
ANR	728061	Identifier	iter		728055	1					
ANR	728062	IdentifierDeclStatement	char * option ;	37:1:1059:1071	728055	1	True				
ANR	728063	IdentifierDecl	* option		728055	0					
ANR	728064	IdentifierDeclType	char *		728055	0					
ANR	728065	Identifier	option		728055	1					
ANR	728066	Statement	r_list_foreach	38:1:1074:1087	728055	2	True				
ANR	728067	Statement	(	38:16:1089:1089	728055	3	True				
ANR	728068	Statement	node	38:17:1090:1093	728055	4	True				
ANR	728069	Statement	->	38:21:1094:1095	728055	5	True				
ANR	728070	Statement	options	38:23:1096:1102	728055	6	True				
ANR	728071	Statement	","	38:30:1103:1103	728055	7	True				
ANR	728072	Statement	iter	38:32:1105:1108	728055	8	True				
ANR	728073	Statement	","	38:36:1109:1109	728055	9	True				
ANR	728074	Statement	option	38:38:1111:1116	728055	10	True				
ANR	728075	Statement	)	38:44:1117:1117	728055	11	True				
ANR	728076	CompoundStatement		4:46:80:80	728055	12					
ANR	728077	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , option )"	39:2:1123:1153	728055	0	True				
ANR	728078	CallExpression	"r_cons_printf ( ""%s\\n"" , option )"		728055	0					
ANR	728079	Callee	r_cons_printf		728055	0					
ANR	728080	Identifier	r_cons_printf		728055	0					
ANR	728081	ArgumentList	"""%s\\n"""		728055	1					
ANR	728082	Argument	"""%s\\n"""		728055	0					
ANR	728083	PrimaryExpression	"""%s\\n"""		728055	0					
ANR	728084	Argument	option		728055	1					
ANR	728085	Identifier	option		728055	0					
ANR	728086	ReturnType	static void		728055	1					
ANR	728087	Identifier	print_node_options		728055	2					
ANR	728088	ParameterList	RConfigNode * node		728055	3					
ANR	728089	Parameter	RConfigNode * node	35:31:1019:1035	728055	0	True				
ANR	728090	ParameterType	RConfigNode *		728055	0					
ANR	728091	Identifier	node		728055	1					
ANR	728092	CFGEntryNode	ENTRY		728055		True				
ANR	728093	CFGExitNode	EXIT		728055		True				
ANR	728094	Symbol	node		728055						
ANR	728095	Symbol	iter		728055						
ANR	728096	Symbol	option		728055						
ANR	728097	Function	compareName	46:0:1283:1423							
ANR	728098	FunctionDef	"compareName (const RAnalFunction * a , const RAnalFunction * b)"		728097	0					
ANR	728099	CompoundStatement		46:71:1354:1423	728097	0					
ANR	728100	ReturnStatement	"return a && b && a -> name && b -> name && strcmp ( a -> name , b -> name ) ;"	47:1:1357:1421	728097	0	True				
ANR	728101	AndExpression	"a && b && a -> name && b -> name && strcmp ( a -> name , b -> name )"		728097	0		&&			
ANR	728102	Identifier	a		728097	0					
ANR	728103	AndExpression	"b && a -> name && b -> name && strcmp ( a -> name , b -> name )"		728097	1		&&			
ANR	728104	Identifier	b		728097	0					
ANR	728105	AndExpression	"a -> name && b -> name && strcmp ( a -> name , b -> name )"		728097	1		&&			
ANR	728106	PtrMemberAccess	a -> name		728097	0					
ANR	728107	Identifier	a		728097	0					
ANR	728108	Identifier	name		728097	1					
ANR	728109	AndExpression	"b -> name && strcmp ( a -> name , b -> name )"		728097	1		&&			
ANR	728110	PtrMemberAccess	b -> name		728097	0					
ANR	728111	Identifier	b		728097	0					
ANR	728112	Identifier	name		728097	1					
ANR	728113	CallExpression	"strcmp ( a -> name , b -> name )"		728097	1					
ANR	728114	Callee	strcmp		728097	0					
ANR	728115	Identifier	strcmp		728097	0					
ANR	728116	ArgumentList	a -> name		728097	1					
ANR	728117	Argument	a -> name		728097	0					
ANR	728118	PtrMemberAccess	a -> name		728097	0					
ANR	728119	Identifier	a		728097	0					
ANR	728120	Identifier	name		728097	1					
ANR	728121	Argument	b -> name		728097	1					
ANR	728122	PtrMemberAccess	b -> name		728097	0					
ANR	728123	Identifier	b		728097	0					
ANR	728124	Identifier	name		728097	1					
ANR	728125	ReturnType	static int		728097	1					
ANR	728126	Identifier	compareName		728097	2					
ANR	728127	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		728097	3					
ANR	728128	Parameter	const RAnalFunction * a	46:23:1306:1327	728097	0	True				
ANR	728129	ParameterType	const RAnalFunction *		728097	0					
ANR	728130	Identifier	a		728097	1					
ANR	728131	Parameter	const RAnalFunction * b	46:47:1330:1351	728097	1	True				
ANR	728132	ParameterType	const RAnalFunction *		728097	0					
ANR	728133	Identifier	b		728097	1					
ANR	728134	CFGEntryNode	ENTRY		728097		True				
ANR	728135	CFGExitNode	EXIT		728097		True				
ANR	728136	Symbol	strcmp		728097						
ANR	728137	Symbol	a		728097						
ANR	728138	Symbol	b		728097						
ANR	728139	Symbol	a -> name		728097						
ANR	728140	Symbol	* a		728097						
ANR	728141	Symbol	* b		728097						
ANR	728142	Symbol	b -> name		728097						
ANR	728143	Function	compareNameLen	50:0:1426:1579							
ANR	728144	FunctionDef	"compareNameLen (const RAnalFunction * a , const RAnalFunction * b)"		728143	0					
ANR	728145	CompoundStatement		50:74:1500:1579	728143	0					
ANR	728146	ReturnStatement	return a && b && a -> name && b -> name && strlen ( a -> name ) > strlen ( b -> name ) ;	51:1:1503:1577	728143	0	True				
ANR	728147	AndExpression	a && b && a -> name && b -> name && strlen ( a -> name ) > strlen ( b -> name )		728143	0		&&			
ANR	728148	Identifier	a		728143	0					
ANR	728149	AndExpression	b && a -> name && b -> name && strlen ( a -> name ) > strlen ( b -> name )		728143	1		&&			
ANR	728150	Identifier	b		728143	0					
ANR	728151	AndExpression	a -> name && b -> name && strlen ( a -> name ) > strlen ( b -> name )		728143	1		&&			
ANR	728152	PtrMemberAccess	a -> name		728143	0					
ANR	728153	Identifier	a		728143	0					
ANR	728154	Identifier	name		728143	1					
ANR	728155	AndExpression	b -> name && strlen ( a -> name ) > strlen ( b -> name )		728143	1		&&			
ANR	728156	PtrMemberAccess	b -> name		728143	0					
ANR	728157	Identifier	b		728143	0					
ANR	728158	Identifier	name		728143	1					
ANR	728159	RelationalExpression	strlen ( a -> name ) > strlen ( b -> name )		728143	1		>			
ANR	728160	CallExpression	strlen ( a -> name )		728143	0					
ANR	728161	Callee	strlen		728143	0					
ANR	728162	Identifier	strlen		728143	0					
ANR	728163	ArgumentList	a -> name		728143	1					
ANR	728164	Argument	a -> name		728143	0					
ANR	728165	PtrMemberAccess	a -> name		728143	0					
ANR	728166	Identifier	a		728143	0					
ANR	728167	Identifier	name		728143	1					
ANR	728168	CallExpression	strlen ( b -> name )		728143	1					
ANR	728169	Callee	strlen		728143	0					
ANR	728170	Identifier	strlen		728143	0					
ANR	728171	ArgumentList	b -> name		728143	1					
ANR	728172	Argument	b -> name		728143	0					
ANR	728173	PtrMemberAccess	b -> name		728143	0					
ANR	728174	Identifier	b		728143	0					
ANR	728175	Identifier	name		728143	1					
ANR	728176	ReturnType	static int		728143	1					
ANR	728177	Identifier	compareNameLen		728143	2					
ANR	728178	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		728143	3					
ANR	728179	Parameter	const RAnalFunction * a	50:26:1452:1473	728143	0	True				
ANR	728180	ParameterType	const RAnalFunction *		728143	0					
ANR	728181	Identifier	a		728143	1					
ANR	728182	Parameter	const RAnalFunction * b	50:50:1476:1497	728143	1	True				
ANR	728183	ParameterType	const RAnalFunction *		728143	0					
ANR	728184	Identifier	b		728143	1					
ANR	728185	CFGEntryNode	ENTRY		728143		True				
ANR	728186	CFGExitNode	EXIT		728143		True				
ANR	728187	Symbol	a		728143						
ANR	728188	Symbol	strlen		728143						
ANR	728189	Symbol	b		728143						
ANR	728190	Symbol	a -> name		728143						
ANR	728191	Symbol	* a		728143						
ANR	728192	Symbol	* b		728143						
ANR	728193	Symbol	b -> name		728143						
ANR	728194	Function	compareAddress	54:0:1582:1717							
ANR	728195	FunctionDef	"compareAddress (const RAnalFunction * a , const RAnalFunction * b)"		728194	0					
ANR	728196	CompoundStatement		54:74:1656:1717	728194	0					
ANR	728197	ReturnStatement	return a && b && a -> addr && b -> addr && a -> addr > b -> addr ;	55:1:1659:1715	728194	0	True				
ANR	728198	AndExpression	a && b && a -> addr && b -> addr && a -> addr > b -> addr		728194	0		&&			
ANR	728199	Identifier	a		728194	0					
ANR	728200	AndExpression	b && a -> addr && b -> addr && a -> addr > b -> addr		728194	1		&&			
ANR	728201	Identifier	b		728194	0					
ANR	728202	AndExpression	a -> addr && b -> addr && a -> addr > b -> addr		728194	1		&&			
ANR	728203	PtrMemberAccess	a -> addr		728194	0					
ANR	728204	Identifier	a		728194	0					
ANR	728205	Identifier	addr		728194	1					
ANR	728206	AndExpression	b -> addr && a -> addr > b -> addr		728194	1		&&			
ANR	728207	PtrMemberAccess	b -> addr		728194	0					
ANR	728208	Identifier	b		728194	0					
ANR	728209	Identifier	addr		728194	1					
ANR	728210	RelationalExpression	a -> addr > b -> addr		728194	1		>			
ANR	728211	PtrMemberAccess	a -> addr		728194	0					
ANR	728212	Identifier	a		728194	0					
ANR	728213	Identifier	addr		728194	1					
ANR	728214	PtrMemberAccess	b -> addr		728194	1					
ANR	728215	Identifier	b		728194	0					
ANR	728216	Identifier	addr		728194	1					
ANR	728217	ReturnType	static int		728194	1					
ANR	728218	Identifier	compareAddress		728194	2					
ANR	728219	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		728194	3					
ANR	728220	Parameter	const RAnalFunction * a	54:26:1608:1629	728194	0	True				
ANR	728221	ParameterType	const RAnalFunction *		728194	0					
ANR	728222	Identifier	a		728194	1					
ANR	728223	Parameter	const RAnalFunction * b	54:50:1632:1653	728194	1	True				
ANR	728224	ParameterType	const RAnalFunction *		728194	0					
ANR	728225	Identifier	b		728194	1					
ANR	728226	CFGEntryNode	ENTRY		728194		True				
ANR	728227	CFGExitNode	EXIT		728194		True				
ANR	728228	Symbol	a		728194						
ANR	728229	Symbol	b		728194						
ANR	728230	Symbol	a -> addr		728194						
ANR	728231	Symbol	* a		728194						
ANR	728232	Symbol	* b		728194						
ANR	728233	Symbol	b -> addr		728194						
ANR	728234	Function	compareType	58:0:1720:1876							
ANR	728235	FunctionDef	"compareType (const RAnalFunction * a , const RAnalFunction * b)"		728234	0					
ANR	728236	CompoundStatement		58:71:1791:1876	728234	0					
ANR	728237	ReturnStatement	return a && b && a -> diff -> type && b -> diff -> type && a -> diff -> type > b -> diff -> type ;	59:1:1794:1874	728234	0	True				
ANR	728238	AndExpression	a && b && a -> diff -> type && b -> diff -> type && a -> diff -> type > b -> diff -> type		728234	0		&&			
ANR	728239	Identifier	a		728234	0					
ANR	728240	AndExpression	b && a -> diff -> type && b -> diff -> type && a -> diff -> type > b -> diff -> type		728234	1		&&			
ANR	728241	Identifier	b		728234	0					
ANR	728242	AndExpression	a -> diff -> type && b -> diff -> type && a -> diff -> type > b -> diff -> type		728234	1		&&			
ANR	728243	PtrMemberAccess	a -> diff -> type		728234	0					
ANR	728244	PtrMemberAccess	a -> diff		728234	0					
ANR	728245	Identifier	a		728234	0					
ANR	728246	Identifier	diff		728234	1					
ANR	728247	Identifier	type		728234	1					
ANR	728248	AndExpression	b -> diff -> type && a -> diff -> type > b -> diff -> type		728234	1		&&			
ANR	728249	PtrMemberAccess	b -> diff -> type		728234	0					
ANR	728250	PtrMemberAccess	b -> diff		728234	0					
ANR	728251	Identifier	b		728234	0					
ANR	728252	Identifier	diff		728234	1					
ANR	728253	Identifier	type		728234	1					
ANR	728254	RelationalExpression	a -> diff -> type > b -> diff -> type		728234	1		>			
ANR	728255	PtrMemberAccess	a -> diff -> type		728234	0					
ANR	728256	PtrMemberAccess	a -> diff		728234	0					
ANR	728257	Identifier	a		728234	0					
ANR	728258	Identifier	diff		728234	1					
ANR	728259	Identifier	type		728234	1					
ANR	728260	PtrMemberAccess	b -> diff -> type		728234	1					
ANR	728261	PtrMemberAccess	b -> diff		728234	0					
ANR	728262	Identifier	b		728234	0					
ANR	728263	Identifier	diff		728234	1					
ANR	728264	Identifier	type		728234	1					
ANR	728265	ReturnType	static int		728234	1					
ANR	728266	Identifier	compareType		728234	2					
ANR	728267	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		728234	3					
ANR	728268	Parameter	const RAnalFunction * a	58:23:1743:1764	728234	0	True				
ANR	728269	ParameterType	const RAnalFunction *		728234	0					
ANR	728270	Identifier	a		728234	1					
ANR	728271	Parameter	const RAnalFunction * b	58:47:1767:1788	728234	1	True				
ANR	728272	ParameterType	const RAnalFunction *		728234	0					
ANR	728273	Identifier	b		728234	1					
ANR	728274	CFGEntryNode	ENTRY		728234		True				
ANR	728275	CFGExitNode	EXIT		728234		True				
ANR	728276	Symbol	a		728234						
ANR	728277	Symbol	a -> diff -> type		728234						
ANR	728278	Symbol	b		728234						
ANR	728279	Symbol	* b -> diff		728234						
ANR	728280	Symbol	* a -> diff		728234						
ANR	728281	Symbol	b -> diff -> type		728234						
ANR	728282	Symbol	b -> diff		728234						
ANR	728283	Symbol	* * b		728234						
ANR	728284	Symbol	* * a		728234						
ANR	728285	Symbol	* a		728234						
ANR	728286	Symbol	* b		728234						
ANR	728287	Symbol	a -> diff		728234						
ANR	728288	Function	compareSize	62:0:1879:2063							
ANR	728289	FunctionDef	"compareSize (const RAnalFunction * a , const RAnalFunction * b)"		728288	0					
ANR	728290	CompoundStatement		62:71:1950:2063	728288	0					
ANR	728291	ReturnStatement	return a && b && r_anal_fcn_realsize ( a ) > r_anal_fcn_realsize ( b ) ;	64:1:1995:2061	728288	0	True				
ANR	728292	AndExpression	a && b && r_anal_fcn_realsize ( a ) > r_anal_fcn_realsize ( b )		728288	0		&&			
ANR	728293	Identifier	a		728288	0					
ANR	728294	AndExpression	b && r_anal_fcn_realsize ( a ) > r_anal_fcn_realsize ( b )		728288	1		&&			
ANR	728295	Identifier	b		728288	0					
ANR	728296	RelationalExpression	r_anal_fcn_realsize ( a ) > r_anal_fcn_realsize ( b )		728288	1		>			
ANR	728297	CallExpression	r_anal_fcn_realsize ( a )		728288	0					
ANR	728298	Callee	r_anal_fcn_realsize		728288	0					
ANR	728299	Identifier	r_anal_fcn_realsize		728288	0					
ANR	728300	ArgumentList	a		728288	1					
ANR	728301	Argument	a		728288	0					
ANR	728302	Identifier	a		728288	0					
ANR	728303	CallExpression	r_anal_fcn_realsize ( b )		728288	1					
ANR	728304	Callee	r_anal_fcn_realsize		728288	0					
ANR	728305	Identifier	r_anal_fcn_realsize		728288	0					
ANR	728306	ArgumentList	b		728288	1					
ANR	728307	Argument	b		728288	0					
ANR	728308	Identifier	b		728288	0					
ANR	728309	ReturnType	static int		728288	1					
ANR	728310	Identifier	compareSize		728288	2					
ANR	728311	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		728288	3					
ANR	728312	Parameter	const RAnalFunction * a	62:23:1902:1923	728288	0	True				
ANR	728313	ParameterType	const RAnalFunction *		728288	0					
ANR	728314	Identifier	a		728288	1					
ANR	728315	Parameter	const RAnalFunction * b	62:47:1926:1947	728288	1	True				
ANR	728316	ParameterType	const RAnalFunction *		728288	0					
ANR	728317	Identifier	b		728288	1					
ANR	728318	CFGEntryNode	ENTRY		728288		True				
ANR	728319	CFGExitNode	EXIT		728288		True				
ANR	728320	Symbol	a		728288						
ANR	728321	Symbol	r_anal_fcn_realsize		728288						
ANR	728322	Symbol	b		728288						
ANR	728323	Function	compareDist	67:0:2066:2222							
ANR	728324	FunctionDef	"compareDist (const RAnalFunction * a , const RAnalFunction * b)"		728323	0					
ANR	728325	CompoundStatement		67:71:2137:2222	728323	0					
ANR	728326	ReturnStatement	return a && b && a -> diff -> dist && b -> diff -> dist && a -> diff -> dist > b -> diff -> dist ;	68:1:2140:2220	728323	0	True				
ANR	728327	AndExpression	a && b && a -> diff -> dist && b -> diff -> dist && a -> diff -> dist > b -> diff -> dist		728323	0		&&			
ANR	728328	Identifier	a		728323	0					
ANR	728329	AndExpression	b && a -> diff -> dist && b -> diff -> dist && a -> diff -> dist > b -> diff -> dist		728323	1		&&			
ANR	728330	Identifier	b		728323	0					
ANR	728331	AndExpression	a -> diff -> dist && b -> diff -> dist && a -> diff -> dist > b -> diff -> dist		728323	1		&&			
ANR	728332	PtrMemberAccess	a -> diff -> dist		728323	0					
ANR	728333	PtrMemberAccess	a -> diff		728323	0					
ANR	728334	Identifier	a		728323	0					
ANR	728335	Identifier	diff		728323	1					
ANR	728336	Identifier	dist		728323	1					
ANR	728337	AndExpression	b -> diff -> dist && a -> diff -> dist > b -> diff -> dist		728323	1		&&			
ANR	728338	PtrMemberAccess	b -> diff -> dist		728323	0					
ANR	728339	PtrMemberAccess	b -> diff		728323	0					
ANR	728340	Identifier	b		728323	0					
ANR	728341	Identifier	diff		728323	1					
ANR	728342	Identifier	dist		728323	1					
ANR	728343	RelationalExpression	a -> diff -> dist > b -> diff -> dist		728323	1		>			
ANR	728344	PtrMemberAccess	a -> diff -> dist		728323	0					
ANR	728345	PtrMemberAccess	a -> diff		728323	0					
ANR	728346	Identifier	a		728323	0					
ANR	728347	Identifier	diff		728323	1					
ANR	728348	Identifier	dist		728323	1					
ANR	728349	PtrMemberAccess	b -> diff -> dist		728323	1					
ANR	728350	PtrMemberAccess	b -> diff		728323	0					
ANR	728351	Identifier	b		728323	0					
ANR	728352	Identifier	diff		728323	1					
ANR	728353	Identifier	dist		728323	1					
ANR	728354	ReturnType	static int		728323	1					
ANR	728355	Identifier	compareDist		728323	2					
ANR	728356	ParameterList	"const RAnalFunction * a , const RAnalFunction * b"		728323	3					
ANR	728357	Parameter	const RAnalFunction * a	67:23:2089:2110	728323	0	True				
ANR	728358	ParameterType	const RAnalFunction *		728323	0					
ANR	728359	Identifier	a		728323	1					
ANR	728360	Parameter	const RAnalFunction * b	67:47:2113:2134	728323	1	True				
ANR	728361	ParameterType	const RAnalFunction *		728323	0					
ANR	728362	Identifier	b		728323	1					
ANR	728363	CFGEntryNode	ENTRY		728323		True				
ANR	728364	CFGExitNode	EXIT		728323		True				
ANR	728365	Symbol	a		728323						
ANR	728366	Symbol	b		728323						
ANR	728367	Symbol	* b -> diff		728323						
ANR	728368	Symbol	* a -> diff		728323						
ANR	728369	Symbol	b -> diff		728323						
ANR	728370	Symbol	* * b		728323						
ANR	728371	Symbol	b -> diff -> dist		728323						
ANR	728372	Symbol	* * a		728323						
ANR	728373	Symbol	* a		728323						
ANR	728374	Symbol	* b		728323						
ANR	728375	Symbol	a -> diff -> dist		728323						
ANR	728376	Symbol	a -> diff		728323						
ANR	728377	Function	cb_diff_sort	71:0:2225:3136							
ANR	728378	FunctionDef	"cb_diff_sort (void * _core , void * _node)"		728377	0					
ANR	728379	CompoundStatement		71:51:2276:3136	728377	0					
ANR	728380	IdentifierDeclStatement	RConfigNode * node = _node ;	72:1:2279:2304	728377	0	True				
ANR	728381	IdentifierDecl	* node = _node		728377	0					
ANR	728382	IdentifierDeclType	RConfigNode *		728377	0					
ANR	728383	Identifier	node		728377	1					
ANR	728384	AssignmentExpression	* node = _node		728377	2		=			
ANR	728385	Identifier	_node		728377	0					
ANR	728386	Identifier	_node		728377	1					
ANR	728387	IdentifierDeclStatement	const char * column = node -> value ;	73:1:2307:2339	728377	1	True				
ANR	728388	IdentifierDecl	* column = node -> value		728377	0					
ANR	728389	IdentifierDeclType	const char *		728377	0					
ANR	728390	Identifier	column		728377	1					
ANR	728391	AssignmentExpression	* column = node -> value		728377	2		=			
ANR	728392	Identifier	column		728377	0					
ANR	728393	PtrMemberAccess	node -> value		728377	1					
ANR	728394	Identifier	node		728377	0					
ANR	728395	Identifier	value		728377	1					
ANR	728396	IdentifierDeclStatement	RCore * core = _core ;	74:1:2342:2361	728377	2	True				
ANR	728397	IdentifierDecl	* core = _core		728377	0					
ANR	728398	IdentifierDeclType	RCore *		728377	0					
ANR	728399	Identifier	core		728377	1					
ANR	728400	AssignmentExpression	* core = _core		728377	2		=			
ANR	728401	Identifier	_core		728377	0					
ANR	728402	Identifier	_core		728377	1					
ANR	728403	IfStatement	"if ( column && strcmp ( column , ""?"" ) )"		728377	3					
ANR	728404	Condition	"column && strcmp ( column , ""?"" )"	75:5:2368:2397	728377	0	True				
ANR	728405	AndExpression	"column && strcmp ( column , ""?"" )"		728377	0		&&			
ANR	728406	Identifier	column		728377	0					
ANR	728407	CallExpression	"strcmp ( column , ""?"" )"		728377	1					
ANR	728408	Callee	strcmp		728377	0					
ANR	728409	Identifier	strcmp		728377	0					
ANR	728410	ArgumentList	column		728377	1					
ANR	728411	Argument	column		728377	0					
ANR	728412	Identifier	column		728377	0					
ANR	728413	Argument	"""?"""		728377	1					
ANR	728414	PrimaryExpression	"""?"""		728377	0					
ANR	728415	CompoundStatement		5:37:123:123	728377	1					
ANR	728416	IfStatement	"if ( ! strcmp ( column , ""name"" ) )"		728377	0					
ANR	728417	Condition	"! strcmp ( column , ""name"" )"	76:6:2408:2431	728377	0	True				
ANR	728418	UnaryOperationExpression	"! strcmp ( column , ""name"" )"		728377	0					
ANR	728419	UnaryOperator	!		728377	0					
ANR	728420	CallExpression	"strcmp ( column , ""name"" )"		728377	1					
ANR	728421	Callee	strcmp		728377	0					
ANR	728422	Identifier	strcmp		728377	0					
ANR	728423	ArgumentList	column		728377	1					
ANR	728424	Argument	column		728377	0					
ANR	728425	Identifier	column		728377	0					
ANR	728426	Argument	"""name"""		728377	1					
ANR	728427	PrimaryExpression	"""name"""		728377	0					
ANR	728428	CompoundStatement		6:32:157:157	728377	1					
ANR	728429	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareName	77:3:2439:2492	728377	0	True				
ANR	728430	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareName		728377	0		=			
ANR	728431	PtrMemberAccess	core -> anal -> columnSort		728377	0					
ANR	728432	PtrMemberAccess	core -> anal		728377	0					
ANR	728433	Identifier	core		728377	0					
ANR	728434	Identifier	anal		728377	1					
ANR	728435	Identifier	columnSort		728377	1					
ANR	728436	CastExpression	( RListComparator ) compareName		728377	1					
ANR	728437	CastTarget	RListComparator		728377	0					
ANR	728438	Identifier	compareName		728377	1					
ANR	728439	ElseStatement	else		728377	0					
ANR	728440	IfStatement	"if ( ! strcmp ( column , ""namelen"" ) )"		728377	0					
ANR	728441	Condition	"! strcmp ( column , ""namelen"" )"	78:13:2507:2533	728377	0	True				
ANR	728442	UnaryOperationExpression	"! strcmp ( column , ""namelen"" )"		728377	0					
ANR	728443	UnaryOperator	!		728377	0					
ANR	728444	CallExpression	"strcmp ( column , ""namelen"" )"		728377	1					
ANR	728445	Callee	strcmp		728377	0					
ANR	728446	Identifier	strcmp		728377	0					
ANR	728447	ArgumentList	column		728377	1					
ANR	728448	Argument	column		728377	0					
ANR	728449	Identifier	column		728377	0					
ANR	728450	Argument	"""namelen"""		728377	1					
ANR	728451	PrimaryExpression	"""namelen"""		728377	0					
ANR	728452	CompoundStatement		8:42:259:259	728377	1					
ANR	728453	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareNameLen	79:3:2541:2597	728377	0	True				
ANR	728454	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareNameLen		728377	0		=			
ANR	728455	PtrMemberAccess	core -> anal -> columnSort		728377	0					
ANR	728456	PtrMemberAccess	core -> anal		728377	0					
ANR	728457	Identifier	core		728377	0					
ANR	728458	Identifier	anal		728377	1					
ANR	728459	Identifier	columnSort		728377	1					
ANR	728460	CastExpression	( RListComparator ) compareNameLen		728377	1					
ANR	728461	CastTarget	RListComparator		728377	0					
ANR	728462	Identifier	compareNameLen		728377	1					
ANR	728463	ElseStatement	else		728377	0					
ANR	728464	IfStatement	"if ( ! strcmp ( column , ""addr"" ) )"		728377	0					
ANR	728465	Condition	"! strcmp ( column , ""addr"" )"	80:13:2612:2635	728377	0	True				
ANR	728466	UnaryOperationExpression	"! strcmp ( column , ""addr"" )"		728377	0					
ANR	728467	UnaryOperator	!		728377	0					
ANR	728468	CallExpression	"strcmp ( column , ""addr"" )"		728377	1					
ANR	728469	Callee	strcmp		728377	0					
ANR	728470	Identifier	strcmp		728377	0					
ANR	728471	ArgumentList	column		728377	1					
ANR	728472	Argument	column		728377	0					
ANR	728473	Identifier	column		728377	0					
ANR	728474	Argument	"""addr"""		728377	1					
ANR	728475	PrimaryExpression	"""addr"""		728377	0					
ANR	728476	CompoundStatement		10:39:361:361	728377	1					
ANR	728477	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareAddress	81:3:2643:2699	728377	0	True				
ANR	728478	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareAddress		728377	0		=			
ANR	728479	PtrMemberAccess	core -> anal -> columnSort		728377	0					
ANR	728480	PtrMemberAccess	core -> anal		728377	0					
ANR	728481	Identifier	core		728377	0					
ANR	728482	Identifier	anal		728377	1					
ANR	728483	Identifier	columnSort		728377	1					
ANR	728484	CastExpression	( RListComparator ) compareAddress		728377	1					
ANR	728485	CastTarget	RListComparator		728377	0					
ANR	728486	Identifier	compareAddress		728377	1					
ANR	728487	ElseStatement	else		728377	0					
ANR	728488	IfStatement	"if ( ! strcmp ( column , ""type"" ) )"		728377	0					
ANR	728489	Condition	"! strcmp ( column , ""type"" )"	82:13:2714:2737	728377	0	True				
ANR	728490	UnaryOperationExpression	"! strcmp ( column , ""type"" )"		728377	0					
ANR	728491	UnaryOperator	!		728377	0					
ANR	728492	CallExpression	"strcmp ( column , ""type"" )"		728377	1					
ANR	728493	Callee	strcmp		728377	0					
ANR	728494	Identifier	strcmp		728377	0					
ANR	728495	ArgumentList	column		728377	1					
ANR	728496	Argument	column		728377	0					
ANR	728497	Identifier	column		728377	0					
ANR	728498	Argument	"""type"""		728377	1					
ANR	728499	PrimaryExpression	"""type"""		728377	0					
ANR	728500	CompoundStatement		12:39:463:463	728377	1					
ANR	728501	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareType	83:3:2745:2798	728377	0	True				
ANR	728502	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareType		728377	0		=			
ANR	728503	PtrMemberAccess	core -> anal -> columnSort		728377	0					
ANR	728504	PtrMemberAccess	core -> anal		728377	0					
ANR	728505	Identifier	core		728377	0					
ANR	728506	Identifier	anal		728377	1					
ANR	728507	Identifier	columnSort		728377	1					
ANR	728508	CastExpression	( RListComparator ) compareType		728377	1					
ANR	728509	CastTarget	RListComparator		728377	0					
ANR	728510	Identifier	compareType		728377	1					
ANR	728511	ElseStatement	else		728377	0					
ANR	728512	IfStatement	"if ( ! strcmp ( column , ""size"" ) )"		728377	0					
ANR	728513	Condition	"! strcmp ( column , ""size"" )"	84:13:2813:2836	728377	0	True				
ANR	728514	UnaryOperationExpression	"! strcmp ( column , ""size"" )"		728377	0					
ANR	728515	UnaryOperator	!		728377	0					
ANR	728516	CallExpression	"strcmp ( column , ""size"" )"		728377	1					
ANR	728517	Callee	strcmp		728377	0					
ANR	728518	Identifier	strcmp		728377	0					
ANR	728519	ArgumentList	column		728377	1					
ANR	728520	Argument	column		728377	0					
ANR	728521	Identifier	column		728377	0					
ANR	728522	Argument	"""size"""		728377	1					
ANR	728523	PrimaryExpression	"""size"""		728377	0					
ANR	728524	CompoundStatement		14:39:562:562	728377	1					
ANR	728525	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareSize	85:3:2844:2897	728377	0	True				
ANR	728526	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareSize		728377	0		=			
ANR	728527	PtrMemberAccess	core -> anal -> columnSort		728377	0					
ANR	728528	PtrMemberAccess	core -> anal		728377	0					
ANR	728529	Identifier	core		728377	0					
ANR	728530	Identifier	anal		728377	1					
ANR	728531	Identifier	columnSort		728377	1					
ANR	728532	CastExpression	( RListComparator ) compareSize		728377	1					
ANR	728533	CastTarget	RListComparator		728377	0					
ANR	728534	Identifier	compareSize		728377	1					
ANR	728535	ElseStatement	else		728377	0					
ANR	728536	IfStatement	"if ( ! strcmp ( column , ""dist"" ) )"		728377	0					
ANR	728537	Condition	"! strcmp ( column , ""dist"" )"	86:13:2912:2935	728377	0	True				
ANR	728538	UnaryOperationExpression	"! strcmp ( column , ""dist"" )"		728377	0					
ANR	728539	UnaryOperator	!		728377	0					
ANR	728540	CallExpression	"strcmp ( column , ""dist"" )"		728377	1					
ANR	728541	Callee	strcmp		728377	0					
ANR	728542	Identifier	strcmp		728377	0					
ANR	728543	ArgumentList	column		728377	1					
ANR	728544	Argument	column		728377	0					
ANR	728545	Identifier	column		728377	0					
ANR	728546	Argument	"""dist"""		728377	1					
ANR	728547	PrimaryExpression	"""dist"""		728377	0					
ANR	728548	CompoundStatement		16:39:661:661	728377	1					
ANR	728549	ExpressionStatement	core -> anal -> columnSort = ( RListComparator ) compareDist	87:3:2943:2996	728377	0	True				
ANR	728550	AssignmentExpression	core -> anal -> columnSort = ( RListComparator ) compareDist		728377	0		=			
ANR	728551	PtrMemberAccess	core -> anal -> columnSort		728377	0					
ANR	728552	PtrMemberAccess	core -> anal		728377	0					
ANR	728553	Identifier	core		728377	0					
ANR	728554	Identifier	anal		728377	1					
ANR	728555	Identifier	columnSort		728377	1					
ANR	728556	CastExpression	( RListComparator ) compareDist		728377	1					
ANR	728557	CastTarget	RListComparator		728377	0					
ANR	728558	Identifier	compareDist		728377	1					
ANR	728559	ElseStatement	else		728377	0					
ANR	728560	CompoundStatement		18:9:730:730	728377	0					
ANR	728561	GotoStatement	goto fail ;	89:3:3012:3021	728377	0	True				
ANR	728562	Identifier	fail		728377	0					
ANR	728563	ReturnStatement	return true ;	91:2:3029:3040	728377	1	True				
ANR	728564	Identifier	true		728377	0					
ANR	728565	Label	fail :	93:0:3045:3049	728377	4	True				
ANR	728566	Identifier	fail		728377	0					
ANR	728567	ExpressionStatement	"eprintf ( ""e diff.sort = [name, namelen, addr, type, size, dist]\\n"" )"	94:1:3052:3119	728377	5	True				
ANR	728568	CallExpression	"eprintf ( ""e diff.sort = [name, namelen, addr, type, size, dist]\\n"" )"		728377	0					
ANR	728569	Callee	eprintf		728377	0					
ANR	728570	Identifier	eprintf		728377	0					
ANR	728571	ArgumentList	"""e diff.sort = [name, namelen, addr, type, size, dist]\\n"""		728377	1					
ANR	728572	Argument	"""e diff.sort = [name, namelen, addr, type, size, dist]\\n"""		728377	0					
ANR	728573	PrimaryExpression	"""e diff.sort = [name, namelen, addr, type, size, dist]\\n"""		728377	0					
ANR	728574	ReturnStatement	return false ;	95:1:3122:3134	728377	6	True				
ANR	728575	Identifier	false		728377	0					
ANR	728576	ReturnType	static bool		728377	1					
ANR	728577	Identifier	cb_diff_sort		728377	2					
ANR	728578	ParameterList	"void * _core , void * _node"		728377	3					
ANR	728579	Parameter	void * _core	71:25:2250:2260	728377	0	True				
ANR	728580	ParameterType	void *		728377	0					
ANR	728581	Identifier	_core		728377	1					
ANR	728582	Parameter	void * _node	71:38:2263:2273	728377	1	True				
ANR	728583	ParameterType	void *		728377	0					
ANR	728584	Identifier	_node		728377	1					
ANR	728585	CFGEntryNode	ENTRY		728377		True				
ANR	728586	CFGExitNode	EXIT		728377		True				
ANR	728587	Symbol	strcmp		728377						
ANR	728588	Symbol	compareNameLen		728377						
ANR	728589	Symbol	column		728377						
ANR	728590	Symbol	* core		728377						
ANR	728591	Symbol	false		728377						
ANR	728592	Symbol	core -> anal		728377						
ANR	728593	Symbol	compareSize		728377						
ANR	728594	Symbol	_node		728377						
ANR	728595	Symbol	node -> value		728377						
ANR	728596	Symbol	compareDist		728377						
ANR	728597	Symbol	node		728377						
ANR	728598	Symbol	core		728377						
ANR	728599	Symbol	* core -> anal		728377						
ANR	728600	Symbol	compareType		728377						
ANR	728601	Symbol	compareAddress		728377						
ANR	728602	Symbol	_core		728377						
ANR	728603	Symbol	true		728377						
ANR	728604	Symbol	core -> anal -> columnSort		728377						
ANR	728605	Symbol	compareName		728377						
ANR	728606	Symbol	* node		728377						
ANR	728607	Symbol	* * core		728377						
ANR	728608	Function	has_esil	98:0:3139:3438							
ANR	728609	FunctionDef	"has_esil (RCore * core , const char * name)"		728608	0					
ANR	728610	CompoundStatement		98:59:3198:3438	728608	0					
ANR	728611	IdentifierDeclStatement	RListIter * iter ;	99:1:3201:3216	728608	0	True				
ANR	728612	IdentifierDecl	* iter		728608	0					
ANR	728613	IdentifierDeclType	RListIter *		728608	0					
ANR	728614	Identifier	iter		728608	1					
ANR	728615	IdentifierDeclStatement	RAnalPlugin * h ;	100:1:3219:3233	728608	1	True				
ANR	728616	IdentifierDecl	* h		728608	0					
ANR	728617	IdentifierDeclType	RAnalPlugin *		728608	0					
ANR	728618	Identifier	h		728608	1					
ANR	728619	ExpressionStatement	"r_return_val_if_fail ( core && core -> anal && name , NULL )"	101:1:3236:3291	728608	2	True				
ANR	728620	CallExpression	"r_return_val_if_fail ( core && core -> anal && name , NULL )"		728608	0					
ANR	728621	Callee	r_return_val_if_fail		728608	0					
ANR	728622	Identifier	r_return_val_if_fail		728608	0					
ANR	728623	ArgumentList	core && core -> anal && name		728608	1					
ANR	728624	Argument	core && core -> anal && name		728608	0					
ANR	728625	AndExpression	core && core -> anal && name		728608	0		&&			
ANR	728626	Identifier	core		728608	0					
ANR	728627	AndExpression	core -> anal && name		728608	1		&&			
ANR	728628	PtrMemberAccess	core -> anal		728608	0					
ANR	728629	Identifier	core		728608	0					
ANR	728630	Identifier	anal		728608	1					
ANR	728631	Identifier	name		728608	1					
ANR	728632	Argument	NULL		728608	1					
ANR	728633	Identifier	NULL		728608	0					
ANR	728634	Statement	r_list_foreach	102:1:3294:3307	728608	3	True				
ANR	728635	Statement	(	102:16:3309:3309	728608	4	True				
ANR	728636	Statement	core	102:17:3310:3313	728608	5	True				
ANR	728637	Statement	->	102:21:3314:3315	728608	6	True				
ANR	728638	Statement	anal	102:23:3316:3319	728608	7	True				
ANR	728639	Statement	->	102:27:3320:3321	728608	8	True				
ANR	728640	Statement	plugins	102:29:3322:3328	728608	9	True				
ANR	728641	Statement	","	102:36:3329:3329	728608	10	True				
ANR	728642	Statement	iter	102:38:3331:3334	728608	11	True				
ANR	728643	Statement	","	102:42:3335:3335	728608	12	True				
ANR	728644	Statement	h	102:44:3337:3337	728608	13	True				
ANR	728645	Statement	)	102:45:3338:3338	728608	14	True				
ANR	728646	CompoundStatement		5:47:141:141	728608	15					
ANR	728647	IfStatement	"if ( h -> name && ! strcmp ( name , h -> name ) )"		728608	0					
ANR	728648	Condition	"h -> name && ! strcmp ( name , h -> name )"	103:6:3348:3381	728608	0	True				
ANR	728649	AndExpression	"h -> name && ! strcmp ( name , h -> name )"		728608	0		&&			
ANR	728650	PtrMemberAccess	h -> name		728608	0					
ANR	728651	Identifier	h		728608	0					
ANR	728652	Identifier	name		728608	1					
ANR	728653	UnaryOperationExpression	"! strcmp ( name , h -> name )"		728608	1					
ANR	728654	UnaryOperator	!		728608	0					
ANR	728655	CallExpression	"strcmp ( name , h -> name )"		728608	1					
ANR	728656	Callee	strcmp		728608	0					
ANR	728657	Identifier	strcmp		728608	0					
ANR	728658	ArgumentList	name		728608	1					
ANR	728659	Argument	name		728608	0					
ANR	728660	Identifier	name		728608	0					
ANR	728661	Argument	h -> name		728608	1					
ANR	728662	PtrMemberAccess	h -> name		728608	0					
ANR	728663	Identifier	h		728608	0					
ANR	728664	Identifier	name		728608	1					
ANR	728665	CompoundStatement		6:42:185:185	728608	1					
ANR	728666	ReturnStatement	"return h -> esil ? ""Ae"" : ""A_"" ;"	104:3:3389:3415	728608	0	True				
ANR	728667	ConditionalExpression	"h -> esil ? ""Ae"" : ""A_"""		728608	0					
ANR	728668	Condition	h -> esil		728608	0					
ANR	728669	PtrMemberAccess	h -> esil		728608	0					
ANR	728670	Identifier	h		728608	0					
ANR	728671	Identifier	esil		728608	1					
ANR	728672	PrimaryExpression	"""Ae"""		728608	1					
ANR	728673	PrimaryExpression	"""A_"""		728608	2					
ANR	728674	ReturnStatement	"return ""__"" ;"	107:1:3425:3436	728608	16	True				
ANR	728675	PrimaryExpression	"""__"""		728608	0					
ANR	728676	ReturnType	static const char *		728608	1					
ANR	728677	Identifier	has_esil		728608	2					
ANR	728678	ParameterList	"RCore * core , const char * name"		728608	3					
ANR	728679	Parameter	RCore * core	98:28:3167:3177	728608	0	True				
ANR	728680	ParameterType	RCore *		728608	0					
ANR	728681	Identifier	core		728608	1					
ANR	728682	Parameter	const char * name	98:41:3180:3195	728608	1	True				
ANR	728683	ParameterType	const char *		728608	0					
ANR	728684	Identifier	name		728608	1					
ANR	728685	CFGEntryNode	ENTRY		728608		True				
ANR	728686	CFGExitNode	EXIT		728608		True				
ANR	728687	Symbol	strcmp		728608						
ANR	728688	Symbol	core		728608						
ANR	728689	Symbol	* h		728608						
ANR	728690	Symbol	h -> esil		728608						
ANR	728691	Symbol	NULL		728608						
ANR	728692	Symbol	name		728608						
ANR	728693	Symbol	h		728608						
ANR	728694	Symbol	* core		728608						
ANR	728695	Symbol	iter		728608						
ANR	728696	Symbol	core -> anal		728608						
ANR	728697	Symbol	h -> name		728608						
ANR	728698	Function	rasm2_list	111:0:3478:5257							
ANR	728699	FunctionDef	"rasm2_list (RCore * core , const char * arch , int fmt)"		728698	0					
ANR	728700	CompoundStatement		111:63:3541:5257	728698	0					
ANR	728701	IdentifierDeclStatement	int i ;	112:1:3544:3549	728698	0	True				
ANR	728702	IdentifierDecl	i		728698	0					
ANR	728703	IdentifierDeclType	int		728698	0					
ANR	728704	Identifier	i		728698	1					
ANR	728705	IdentifierDeclStatement	"const char * feat2 , * feat ;"	113:1:3552:3576	728698	1	True				
ANR	728706	IdentifierDecl	* feat2		728698	0					
ANR	728707	IdentifierDeclType	const char *		728698	0					
ANR	728708	Identifier	feat2		728698	1					
ANR	728709	IdentifierDecl	* feat		728698	1					
ANR	728710	IdentifierDeclType	const char *		728698	0					
ANR	728711	Identifier	feat		728698	1					
ANR	728712	IdentifierDeclStatement	RAsm * a = core -> assembler ;	114:1:3579:3604	728698	2	True				
ANR	728713	IdentifierDecl	* a = core -> assembler		728698	0					
ANR	728714	IdentifierDeclType	RAsm *		728698	0					
ANR	728715	Identifier	a		728698	1					
ANR	728716	AssignmentExpression	* a = core -> assembler		728698	2		=			
ANR	728717	Identifier	a		728698	0					
ANR	728718	PtrMemberAccess	core -> assembler		728698	1					
ANR	728719	Identifier	core		728698	0					
ANR	728720	Identifier	assembler		728698	1					
ANR	728721	IdentifierDeclStatement	char bits [ 32 ] ;	115:1:3607:3620	728698	3	True				
ANR	728722	IdentifierDecl	bits [ 32 ]		728698	0					
ANR	728723	IdentifierDeclType	char [ 32 ]		728698	0					
ANR	728724	Identifier	bits		728698	1					
ANR	728725	PrimaryExpression	32		728698	2					
ANR	728726	IdentifierDeclStatement	RAsmPlugin * h ;	116:1:3623:3636	728698	4	True				
ANR	728727	IdentifierDecl	* h		728698	0					
ANR	728728	IdentifierDeclType	RAsmPlugin *		728698	0					
ANR	728729	Identifier	h		728698	1					
ANR	728730	IdentifierDeclStatement	RListIter * iter ;	117:1:3639:3654	728698	5	True				
ANR	728731	IdentifierDecl	* iter		728698	0					
ANR	728732	IdentifierDeclType	RListIter *		728698	0					
ANR	728733	Identifier	iter		728698	1					
ANR	728734	IdentifierDeclStatement	PJ * pj = NULL ;	118:1:3657:3670	728698	6	True				
ANR	728735	IdentifierDecl	* pj = NULL		728698	0					
ANR	728736	IdentifierDeclType	PJ *		728698	0					
ANR	728737	Identifier	pj		728698	1					
ANR	728738	AssignmentExpression	* pj = NULL		728698	2		=			
ANR	728739	Identifier	NULL		728698	0					
ANR	728740	Identifier	NULL		728698	1					
ANR	728741	IfStatement	if ( fmt == 'j' )		728698	7					
ANR	728742	Condition	fmt == 'j'	119:5:3677:3686	728698	0	True				
ANR	728743	EqualityExpression	fmt == 'j'		728698	0		==			
ANR	728744	Identifier	fmt		728698	0					
ANR	728745	PrimaryExpression	'j'		728698	1					
ANR	728746	CompoundStatement		9:17:147:147	728698	1					
ANR	728747	ExpressionStatement	pj = pj_new ( )	120:2:3693:3707	728698	0	True				
ANR	728748	AssignmentExpression	pj = pj_new ( )		728698	0		=			
ANR	728749	Identifier	pj		728698	0					
ANR	728750	CallExpression	pj_new ( )		728698	1					
ANR	728751	Callee	pj_new		728698	0					
ANR	728752	Identifier	pj_new		728698	0					
ANR	728753	ArgumentList			728698	1					
ANR	728754	IfStatement	if ( ! pj )		728698	1					
ANR	728755	Condition	! pj	121:6:3715:3717	728698	0	True				
ANR	728756	UnaryOperationExpression	! pj		728698	0					
ANR	728757	UnaryOperator	!		728698	0					
ANR	728758	Identifier	pj		728698	1					
ANR	728759	CompoundStatement		11:11:178:178	728698	1					
ANR	728760	ReturnStatement	return ;	122:3:3725:3731	728698	0	True				
ANR	728761	ExpressionStatement	pj_o ( pj )	124:2:3739:3748	728698	2	True				
ANR	728762	CallExpression	pj_o ( pj )		728698	0					
ANR	728763	Callee	pj_o		728698	0					
ANR	728764	Identifier	pj_o		728698	0					
ANR	728765	ArgumentList	pj		728698	1					
ANR	728766	Argument	pj		728698	0					
ANR	728767	Identifier	pj		728698	0					
ANR	728768	Statement	r_list_foreach	126:1:3754:3767	728698	8	True				
ANR	728769	Statement	(	126:16:3769:3769	728698	9	True				
ANR	728770	Statement	a	126:17:3770:3770	728698	10	True				
ANR	728771	Statement	->	126:18:3771:3772	728698	11	True				
ANR	728772	Statement	plugins	126:20:3773:3779	728698	12	True				
ANR	728773	Statement	","	126:27:3780:3780	728698	13	True				
ANR	728774	Statement	iter	126:29:3782:3785	728698	14	True				
ANR	728775	Statement	","	126:33:3786:3786	728698	15	True				
ANR	728776	Statement	h	126:35:3788:3788	728698	16	True				
ANR	728777	Statement	)	126:36:3789:3789	728698	17	True				
ANR	728778	CompoundStatement		16:38:249:249	728698	18					
ANR	728779	IfStatement	if ( arch && * arch )		728698	0					
ANR	728780	Condition	arch && * arch	127:6:3799:3811	728698	0	True				
ANR	728781	AndExpression	arch && * arch		728698	0		&&			
ANR	728782	Identifier	arch		728698	0					
ANR	728783	UnaryOperationExpression	* arch		728698	1					
ANR	728784	UnaryOperator	*		728698	0					
ANR	728785	Identifier	arch		728698	1					
ANR	728786	CompoundStatement		17:21:272:272	728698	1					
ANR	728787	IfStatement	"if ( h -> cpus && ! strcmp ( arch , h -> name ) )"		728698	0					
ANR	728788	Condition	"h -> cpus && ! strcmp ( arch , h -> name )"	128:7:3823:3856	728698	0	True				
ANR	728789	AndExpression	"h -> cpus && ! strcmp ( arch , h -> name )"		728698	0		&&			
ANR	728790	PtrMemberAccess	h -> cpus		728698	0					
ANR	728791	Identifier	h		728698	0					
ANR	728792	Identifier	cpus		728698	1					
ANR	728793	UnaryOperationExpression	"! strcmp ( arch , h -> name )"		728698	1					
ANR	728794	UnaryOperator	!		728698	0					
ANR	728795	CallExpression	"strcmp ( arch , h -> name )"		728698	1					
ANR	728796	Callee	strcmp		728698	0					
ANR	728797	Identifier	strcmp		728698	0					
ANR	728798	ArgumentList	arch		728698	1					
ANR	728799	Argument	arch		728698	0					
ANR	728800	Identifier	arch		728698	0					
ANR	728801	Argument	h -> name		728698	1					
ANR	728802	PtrMemberAccess	h -> name		728698	0					
ANR	728803	Identifier	h		728698	0					
ANR	728804	Identifier	name		728698	1					
ANR	728805	CompoundStatement		20:4:355:383	728698	1					
ANR	728806	IdentifierDeclStatement	char * c = strdup ( h -> cpus ) ;	129:4:3865:3891	728698	0	True				
ANR	728807	IdentifierDecl	* c = strdup ( h -> cpus )		728698	0					
ANR	728808	IdentifierDeclType	char *		728698	0					
ANR	728809	Identifier	c		728698	1					
ANR	728810	AssignmentExpression	* c = strdup ( h -> cpus )		728698	2		=			
ANR	728811	Identifier	c		728698	0					
ANR	728812	CallExpression	strdup ( h -> cpus )		728698	1					
ANR	728813	Callee	strdup		728698	0					
ANR	728814	Identifier	strdup		728698	0					
ANR	728815	ArgumentList	h -> cpus		728698	1					
ANR	728816	Argument	h -> cpus		728698	0					
ANR	728817	PtrMemberAccess	h -> cpus		728698	0					
ANR	728818	Identifier	h		728698	0					
ANR	728819	Identifier	cpus		728698	1					
ANR	728820	IdentifierDeclStatement	"int n = r_str_split ( c , ',' ) ;"	130:4:3897:3925	728698	1	True				
ANR	728821	IdentifierDecl	"n = r_str_split ( c , ',' )"		728698	0					
ANR	728822	IdentifierDeclType	int		728698	0					
ANR	728823	Identifier	n		728698	1					
ANR	728824	AssignmentExpression	"n = r_str_split ( c , ',' )"		728698	2		=			
ANR	728825	Identifier	n		728698	0					
ANR	728826	CallExpression	"r_str_split ( c , ',' )"		728698	1					
ANR	728827	Callee	r_str_split		728698	0					
ANR	728828	Identifier	r_str_split		728698	0					
ANR	728829	ArgumentList	c		728698	1					
ANR	728830	Argument	c		728698	0					
ANR	728831	Identifier	c		728698	0					
ANR	728832	Argument	"','"		728698	1					
ANR	728833	PrimaryExpression	"','"		728698	0					
ANR	728834	ForStatement	for ( i = 0 ; i < n ; i ++ )		728698	2					
ANR	728835	ForInit	i = 0 ;	131:9:3936:3941	728698	0	True				
ANR	728836	AssignmentExpression	i = 0		728698	0		=			
ANR	728837	Identifier	i		728698	0					
ANR	728838	PrimaryExpression	0		728698	1					
ANR	728839	Condition	i < n	131:16:3943:3947	728698	1	True				
ANR	728840	RelationalExpression	i < n		728698	0		<			
ANR	728841	Identifier	i		728698	0					
ANR	728842	Identifier	n		728698	1					
ANR	728843	PostIncDecOperationExpression	i ++	131:23:3950:3952	728698	2	True				
ANR	728844	Identifier	i		728698	0					
ANR	728845	IncDec	++		728698	1					
ANR	728846	CompoundStatement		21:28:413:413	728698	3					
ANR	728847	ExpressionStatement	"r_cons_println ( r_str_word_get0 ( c , i ) )"	132:5:3962:4001	728698	0	True				
ANR	728848	CallExpression	"r_cons_println ( r_str_word_get0 ( c , i ) )"		728698	0					
ANR	728849	Callee	r_cons_println		728698	0					
ANR	728850	Identifier	r_cons_println		728698	0					
ANR	728851	ArgumentList	"r_str_word_get0 ( c , i )"		728698	1					
ANR	728852	Argument	"r_str_word_get0 ( c , i )"		728698	0					
ANR	728853	CallExpression	"r_str_word_get0 ( c , i )"		728698	0					
ANR	728854	Callee	r_str_word_get0		728698	0					
ANR	728855	Identifier	r_str_word_get0		728698	0					
ANR	728856	ArgumentList	c		728698	1					
ANR	728857	Argument	c		728698	0					
ANR	728858	Identifier	c		728698	0					
ANR	728859	Argument	i		728698	1					
ANR	728860	Identifier	i		728698	0					
ANR	728861	ExpressionStatement	free ( c )	134:4:4013:4021	728698	3	True				
ANR	728862	CallExpression	free ( c )		728698	0					
ANR	728863	Callee	free		728698	0					
ANR	728864	Identifier	free		728698	0					
ANR	728865	ArgumentList	c		728698	1					
ANR	728866	Argument	c		728698	0					
ANR	728867	Identifier	c		728698	0					
ANR	728868	BreakStatement	break ;	135:4:4027:4032	728698	4	True				
ANR	728869	ElseStatement	else		728698	0					
ANR	728870	CompoundStatement		27:9:506:506	728698	0					
ANR	728871	ExpressionStatement	bits [ 0 ] = 0	138:3:4053:4064	728698	0	True				
ANR	728872	AssignmentExpression	bits [ 0 ] = 0		728698	0		=			
ANR	728873	ArrayIndexing	bits [ 0 ]		728698	0					
ANR	728874	Identifier	bits		728698	0					
ANR	728875	PrimaryExpression	0		728698	1					
ANR	728876	PrimaryExpression	0		728698	1					
ANR	728877	IfStatement	if ( h -> bits & 8 )		728698	1					
ANR	728878	Condition	h -> bits & 8	141:7:4146:4156	728698	0	True				
ANR	728879	BitAndExpression	h -> bits & 8		728698	0		&			
ANR	728880	PtrMemberAccess	h -> bits		728698	0					
ANR	728881	Identifier	h		728698	0					
ANR	728882	Identifier	bits		728698	1					
ANR	728883	PrimaryExpression	8		728698	1					
ANR	728884	CompoundStatement		31:20:617:617	728698	1					
ANR	728885	ExpressionStatement	"strcat ( bits , ""_8"" )"	142:4:4165:4184	728698	0	True				
ANR	728886	CallExpression	"strcat ( bits , ""_8"" )"		728698	0					
ANR	728887	Callee	strcat		728698	0					
ANR	728888	Identifier	strcat		728698	0					
ANR	728889	ArgumentList	bits		728698	1					
ANR	728890	Argument	bits		728698	0					
ANR	728891	Identifier	bits		728698	0					
ANR	728892	Argument	"""_8"""		728698	1					
ANR	728893	PrimaryExpression	"""_8"""		728698	0					
ANR	728894	IfStatement	if ( h -> bits & 16 )		728698	2					
ANR	728895	Condition	h -> bits & 16	144:7:4198:4209	728698	0	True				
ANR	728896	BitAndExpression	h -> bits & 16		728698	0		&			
ANR	728897	PtrMemberAccess	h -> bits		728698	0					
ANR	728898	Identifier	h		728698	0					
ANR	728899	Identifier	bits		728698	1					
ANR	728900	PrimaryExpression	16		728698	1					
ANR	728901	CompoundStatement		34:21:670:670	728698	1					
ANR	728902	ExpressionStatement	"strcat ( bits , ""_16"" )"	145:4:4218:4238	728698	0	True				
ANR	728903	CallExpression	"strcat ( bits , ""_16"" )"		728698	0					
ANR	728904	Callee	strcat		728698	0					
ANR	728905	Identifier	strcat		728698	0					
ANR	728906	ArgumentList	bits		728698	1					
ANR	728907	Argument	bits		728698	0					
ANR	728908	Identifier	bits		728698	0					
ANR	728909	Argument	"""_16"""		728698	1					
ANR	728910	PrimaryExpression	"""_16"""		728698	0					
ANR	728911	IfStatement	if ( h -> bits & 32 )		728698	3					
ANR	728912	Condition	h -> bits & 32	147:7:4252:4263	728698	0	True				
ANR	728913	BitAndExpression	h -> bits & 32		728698	0		&			
ANR	728914	PtrMemberAccess	h -> bits		728698	0					
ANR	728915	Identifier	h		728698	0					
ANR	728916	Identifier	bits		728698	1					
ANR	728917	PrimaryExpression	32		728698	1					
ANR	728918	CompoundStatement		37:21:724:724	728698	1					
ANR	728919	ExpressionStatement	"strcat ( bits , ""_32"" )"	148:4:4272:4292	728698	0	True				
ANR	728920	CallExpression	"strcat ( bits , ""_32"" )"		728698	0					
ANR	728921	Callee	strcat		728698	0					
ANR	728922	Identifier	strcat		728698	0					
ANR	728923	ArgumentList	bits		728698	1					
ANR	728924	Argument	bits		728698	0					
ANR	728925	Identifier	bits		728698	0					
ANR	728926	Argument	"""_32"""		728698	1					
ANR	728927	PrimaryExpression	"""_32"""		728698	0					
ANR	728928	IfStatement	if ( h -> bits & 64 )		728698	4					
ANR	728929	Condition	h -> bits & 64	150:7:4306:4317	728698	0	True				
ANR	728930	BitAndExpression	h -> bits & 64		728698	0		&			
ANR	728931	PtrMemberAccess	h -> bits		728698	0					
ANR	728932	Identifier	h		728698	0					
ANR	728933	Identifier	bits		728698	1					
ANR	728934	PrimaryExpression	64		728698	1					
ANR	728935	CompoundStatement		40:21:778:778	728698	1					
ANR	728936	ExpressionStatement	"strcat ( bits , ""_64"" )"	151:4:4326:4346	728698	0	True				
ANR	728937	CallExpression	"strcat ( bits , ""_64"" )"		728698	0					
ANR	728938	Callee	strcat		728698	0					
ANR	728939	Identifier	strcat		728698	0					
ANR	728940	ArgumentList	bits		728698	1					
ANR	728941	Argument	bits		728698	0					
ANR	728942	Identifier	bits		728698	0					
ANR	728943	Argument	"""_64"""		728698	1					
ANR	728944	PrimaryExpression	"""_64"""		728698	0					
ANR	728945	IfStatement	if ( ! * bits )		728698	5					
ANR	728946	Condition	! * bits	153:7:4360:4365	728698	0	True				
ANR	728947	UnaryOperationExpression	! * bits		728698	0					
ANR	728948	UnaryOperator	!		728698	0					
ANR	728949	UnaryOperationExpression	* bits		728698	1					
ANR	728950	UnaryOperator	*		728698	0					
ANR	728951	Identifier	bits		728698	1					
ANR	728952	CompoundStatement		43:15:826:826	728698	1					
ANR	728953	ExpressionStatement	"strcat ( bits , ""_0"" )"	154:4:4374:4393	728698	0	True				
ANR	728954	CallExpression	"strcat ( bits , ""_0"" )"		728698	0					
ANR	728955	Callee	strcat		728698	0					
ANR	728956	Identifier	strcat		728698	0					
ANR	728957	ArgumentList	bits		728698	1					
ANR	728958	Argument	bits		728698	0					
ANR	728959	Identifier	bits		728698	0					
ANR	728960	Argument	"""_0"""		728698	1					
ANR	728961	PrimaryExpression	"""_0"""		728698	0					
ANR	728962	ExpressionStatement	"feat = ""__"""	156:3:4403:4414	728698	6	True				
ANR	728963	AssignmentExpression	"feat = ""__"""		728698	0		=			
ANR	728964	Identifier	feat		728698	0					
ANR	728965	PrimaryExpression	"""__"""		728698	1					
ANR	728966	IfStatement	if ( h -> assemble && h -> disassemble )		728698	7					
ANR	728967	Condition	h -> assemble && h -> disassemble	157:7:4423:4451	728698	0	True				
ANR	728968	AndExpression	h -> assemble && h -> disassemble		728698	0		&&			
ANR	728969	PtrMemberAccess	h -> assemble		728698	0					
ANR	728970	Identifier	h		728698	0					
ANR	728971	Identifier	assemble		728698	1					
ANR	728972	PtrMemberAccess	h -> disassemble		728698	1					
ANR	728973	Identifier	h		728698	0					
ANR	728974	Identifier	disassemble		728698	1					
ANR	728975	CompoundStatement		47:38:912:912	728698	1					
ANR	728976	ExpressionStatement	"feat = ""ad"""	158:4:4460:4471	728698	0	True				
ANR	728977	AssignmentExpression	"feat = ""ad"""		728698	0		=			
ANR	728978	Identifier	feat		728698	0					
ANR	728979	PrimaryExpression	"""ad"""		728698	1					
ANR	728980	IfStatement	if ( h -> assemble && ! h -> disassemble )		728698	8					
ANR	728981	Condition	h -> assemble && ! h -> disassemble	160:7:4485:4514	728698	0	True				
ANR	728982	AndExpression	h -> assemble && ! h -> disassemble		728698	0		&&			
ANR	728983	PtrMemberAccess	h -> assemble		728698	0					
ANR	728984	Identifier	h		728698	0					
ANR	728985	Identifier	assemble		728698	1					
ANR	728986	UnaryOperationExpression	! h -> disassemble		728698	1					
ANR	728987	UnaryOperator	!		728698	0					
ANR	728988	PtrMemberAccess	h -> disassemble		728698	1					
ANR	728989	Identifier	h		728698	0					
ANR	728990	Identifier	disassemble		728698	1					
ANR	728991	CompoundStatement		50:39:975:975	728698	1					
ANR	728992	ExpressionStatement	"feat = ""a_"""	161:4:4523:4534	728698	0	True				
ANR	728993	AssignmentExpression	"feat = ""a_"""		728698	0		=			
ANR	728994	Identifier	feat		728698	0					
ANR	728995	PrimaryExpression	"""a_"""		728698	1					
ANR	728996	IfStatement	if ( ! h -> assemble && h -> disassemble )		728698	9					
ANR	728997	Condition	! h -> assemble && h -> disassemble	163:7:4548:4577	728698	0	True				
ANR	728998	AndExpression	! h -> assemble && h -> disassemble		728698	0		&&			
ANR	728999	UnaryOperationExpression	! h -> assemble		728698	0					
ANR	729000	UnaryOperator	!		728698	0					
ANR	729001	PtrMemberAccess	h -> assemble		728698	1					
ANR	729002	Identifier	h		728698	0					
ANR	729003	Identifier	assemble		728698	1					
ANR	729004	PtrMemberAccess	h -> disassemble		728698	1					
ANR	729005	Identifier	h		728698	0					
ANR	729006	Identifier	disassemble		728698	1					
ANR	729007	CompoundStatement		53:39:1038:1038	728698	1					
ANR	729008	ExpressionStatement	"feat = ""_d"""	164:4:4586:4597	728698	0	True				
ANR	729009	AssignmentExpression	"feat = ""_d"""		728698	0		=			
ANR	729010	Identifier	feat		728698	0					
ANR	729011	PrimaryExpression	"""_d"""		728698	1					
ANR	729012	ExpressionStatement	"feat2 = has_esil ( core , h -> name )"	166:3:4607:4639	728698	10	True				
ANR	729013	AssignmentExpression	"feat2 = has_esil ( core , h -> name )"		728698	0		=			
ANR	729014	Identifier	feat2		728698	0					
ANR	729015	CallExpression	"has_esil ( core , h -> name )"		728698	1					
ANR	729016	Callee	has_esil		728698	0					
ANR	729017	Identifier	has_esil		728698	0					
ANR	729018	ArgumentList	core		728698	1					
ANR	729019	Argument	core		728698	0					
ANR	729020	Identifier	core		728698	0					
ANR	729021	Argument	h -> name		728698	1					
ANR	729022	PtrMemberAccess	h -> name		728698	0					
ANR	729023	Identifier	h		728698	0					
ANR	729024	Identifier	name		728698	1					
ANR	729025	IfStatement	if ( fmt == 'q' )		728698	11					
ANR	729026	Condition	fmt == 'q'	167:7:4648:4657	728698	0	True				
ANR	729027	EqualityExpression	fmt == 'q'		728698	0		==			
ANR	729028	Identifier	fmt		728698	0					
ANR	729029	PrimaryExpression	'q'		728698	1					
ANR	729030	CompoundStatement		57:19:1118:1118	728698	1					
ANR	729031	ExpressionStatement	r_cons_println ( h -> name )	168:4:4666:4690	728698	0	True				
ANR	729032	CallExpression	r_cons_println ( h -> name )		728698	0					
ANR	729033	Callee	r_cons_println		728698	0					
ANR	729034	Identifier	r_cons_println		728698	0					
ANR	729035	ArgumentList	h -> name		728698	1					
ANR	729036	Argument	h -> name		728698	0					
ANR	729037	PtrMemberAccess	h -> name		728698	0					
ANR	729038	Identifier	h		728698	0					
ANR	729039	Identifier	name		728698	1					
ANR	729040	ElseStatement	else		728698	0					
ANR	729041	IfStatement	if ( fmt == 'j' )		728698	0					
ANR	729042	Condition	fmt == 'j'	169:14:4706:4715	728698	0	True				
ANR	729043	EqualityExpression	fmt == 'j'		728698	0		==			
ANR	729044	Identifier	fmt		728698	0					
ANR	729045	PrimaryExpression	'j'		728698	1					
ANR	729046	CompoundStatement		60:4:1182:1209	728698	1					
ANR	729047	IdentifierDeclStatement	"const char * license = ""GPL"" ;"	170:4:4724:4751	728698	0	True				
ANR	729048	IdentifierDecl	"* license = ""GPL"""		728698	0					
ANR	729049	IdentifierDeclType	const char *		728698	0					
ANR	729050	Identifier	license		728698	1					
ANR	729051	AssignmentExpression	"* license = ""GPL"""		728698	2		=			
ANR	729052	Identifier	license		728698	0					
ANR	729053	PrimaryExpression	"""GPL"""		728698	1					
ANR	729054	ExpressionStatement	"pj_k ( pj , h -> name )"	171:4:4757:4775	728698	1	True				
ANR	729055	CallExpression	"pj_k ( pj , h -> name )"		728698	0					
ANR	729056	Callee	pj_k		728698	0					
ANR	729057	Identifier	pj_k		728698	0					
ANR	729058	ArgumentList	pj		728698	1					
ANR	729059	Argument	pj		728698	0					
ANR	729060	Identifier	pj		728698	0					
ANR	729061	Argument	h -> name		728698	1					
ANR	729062	PtrMemberAccess	h -> name		728698	0					
ANR	729063	Identifier	h		728698	0					
ANR	729064	Identifier	name		728698	1					
ANR	729065	ExpressionStatement	pj_o ( pj )	172:4:4781:4790	728698	2	True				
ANR	729066	CallExpression	pj_o ( pj )		728698	0					
ANR	729067	Callee	pj_o		728698	0					
ANR	729068	Identifier	pj_o		728698	0					
ANR	729069	ArgumentList	pj		728698	1					
ANR	729070	Argument	pj		728698	0					
ANR	729071	Identifier	pj		728698	0					
ANR	729072	ExpressionStatement	"pj_k ( pj , ""bits"" )"	173:4:4796:4813	728698	3	True				
ANR	729073	CallExpression	"pj_k ( pj , ""bits"" )"		728698	0					
ANR	729074	Callee	pj_k		728698	0					
ANR	729075	Identifier	pj_k		728698	0					
ANR	729076	ArgumentList	pj		728698	1					
ANR	729077	Argument	pj		728698	0					
ANR	729078	Identifier	pj		728698	0					
ANR	729079	Argument	"""bits"""		728698	1					
ANR	729080	PrimaryExpression	"""bits"""		728698	0					
ANR	729081	ExpressionStatement	pj_a ( pj )	174:4:4819:4828	728698	4	True				
ANR	729082	CallExpression	pj_a ( pj )		728698	0					
ANR	729083	Callee	pj_a		728698	0					
ANR	729084	Identifier	pj_a		728698	0					
ANR	729085	ArgumentList	pj		728698	1					
ANR	729086	Argument	pj		728698	0					
ANR	729087	Identifier	pj		728698	0					
ANR	729088	ExpressionStatement	"pj_i ( pj , 32 )"	175:4:4834:4847	728698	5	True				
ANR	729089	CallExpression	"pj_i ( pj , 32 )"		728698	0					
ANR	729090	Callee	pj_i		728698	0					
ANR	729091	Identifier	pj_i		728698	0					
ANR	729092	ArgumentList	pj		728698	1					
ANR	729093	Argument	pj		728698	0					
ANR	729094	Identifier	pj		728698	0					
ANR	729095	Argument	32		728698	1					
ANR	729096	PrimaryExpression	32		728698	0					
ANR	729097	ExpressionStatement	"pj_i ( pj , 64 )"	176:4:4853:4866	728698	6	True				
ANR	729098	CallExpression	"pj_i ( pj , 64 )"		728698	0					
ANR	729099	Callee	pj_i		728698	0					
ANR	729100	Identifier	pj_i		728698	0					
ANR	729101	ArgumentList	pj		728698	1					
ANR	729102	Argument	pj		728698	0					
ANR	729103	Identifier	pj		728698	0					
ANR	729104	Argument	64		728698	1					
ANR	729105	PrimaryExpression	64		728698	0					
ANR	729106	ExpressionStatement	pj_end ( pj )	177:4:4872:4883	728698	7	True				
ANR	729107	CallExpression	pj_end ( pj )		728698	0					
ANR	729108	Callee	pj_end		728698	0					
ANR	729109	Identifier	pj_end		728698	0					
ANR	729110	ArgumentList	pj		728698	1					
ANR	729111	Argument	pj		728698	0					
ANR	729112	Identifier	pj		728698	0					
ANR	729113	ExpressionStatement	"pj_ks ( pj , ""license"" , license )"	178:4:4889:4919	728698	8	True				
ANR	729114	CallExpression	"pj_ks ( pj , ""license"" , license )"		728698	0					
ANR	729115	Callee	pj_ks		728698	0					
ANR	729116	Identifier	pj_ks		728698	0					
ANR	729117	ArgumentList	pj		728698	1					
ANR	729118	Argument	pj		728698	0					
ANR	729119	Identifier	pj		728698	0					
ANR	729120	Argument	"""license"""		728698	1					
ANR	729121	PrimaryExpression	"""license"""		728698	0					
ANR	729122	Argument	license		728698	2					
ANR	729123	Identifier	license		728698	0					
ANR	729124	ExpressionStatement	"pj_ks ( pj , ""description"" , h -> desc )"	179:4:4925:4959	728698	9	True				
ANR	729125	CallExpression	"pj_ks ( pj , ""description"" , h -> desc )"		728698	0					
ANR	729126	Callee	pj_ks		728698	0					
ANR	729127	Identifier	pj_ks		728698	0					
ANR	729128	ArgumentList	pj		728698	1					
ANR	729129	Argument	pj		728698	0					
ANR	729130	Identifier	pj		728698	0					
ANR	729131	Argument	"""description"""		728698	1					
ANR	729132	PrimaryExpression	"""description"""		728698	0					
ANR	729133	Argument	h -> desc		728698	2					
ANR	729134	PtrMemberAccess	h -> desc		728698	0					
ANR	729135	Identifier	h		728698	0					
ANR	729136	Identifier	desc		728698	1					
ANR	729137	ExpressionStatement	"pj_ks ( pj , ""features"" , feat )"	180:4:4965:4993	728698	10	True				
ANR	729138	CallExpression	"pj_ks ( pj , ""features"" , feat )"		728698	0					
ANR	729139	Callee	pj_ks		728698	0					
ANR	729140	Identifier	pj_ks		728698	0					
ANR	729141	ArgumentList	pj		728698	1					
ANR	729142	Argument	pj		728698	0					
ANR	729143	Identifier	pj		728698	0					
ANR	729144	Argument	"""features"""		728698	1					
ANR	729145	PrimaryExpression	"""features"""		728698	0					
ANR	729146	Argument	feat		728698	2					
ANR	729147	Identifier	feat		728698	0					
ANR	729148	ExpressionStatement	pj_end ( pj )	181:4:4999:5010	728698	11	True				
ANR	729149	CallExpression	pj_end ( pj )		728698	0					
ANR	729150	Callee	pj_end		728698	0					
ANR	729151	Identifier	pj_end		728698	0					
ANR	729152	ArgumentList	pj		728698	1					
ANR	729153	Argument	pj		728698	0					
ANR	729154	Identifier	pj		728698	0					
ANR	729155	ElseStatement	else		728698	0					
ANR	729156	CompoundStatement		72:10:1480:1480	728698	0					
ANR	729157	ExpressionStatement	"r_cons_printf ( ""%s%s  %-9s  %-11s %-7s %s\\n"" , feat , feat2 , bits , h -> name , h -> license ? h -> license : ""unknown"" , h -> desc )"	183:4:5028:5155	728698	0	True				
ANR	729158	CallExpression	"r_cons_printf ( ""%s%s  %-9s  %-11s %-7s %s\\n"" , feat , feat2 , bits , h -> name , h -> license ? h -> license : ""unknown"" , h -> desc )"		728698	0					
ANR	729159	Callee	r_cons_printf		728698	0					
ANR	729160	Identifier	r_cons_printf		728698	0					
ANR	729161	ArgumentList	"""%s%s  %-9s  %-11s %-7s %s\\n"""		728698	1					
ANR	729162	Argument	"""%s%s  %-9s  %-11s %-7s %s\\n"""		728698	0					
ANR	729163	PrimaryExpression	"""%s%s  %-9s  %-11s %-7s %s\\n"""		728698	0					
ANR	729164	Argument	feat		728698	1					
ANR	729165	Identifier	feat		728698	0					
ANR	729166	Argument	feat2		728698	2					
ANR	729167	Identifier	feat2		728698	0					
ANR	729168	Argument	bits		728698	3					
ANR	729169	Identifier	bits		728698	0					
ANR	729170	Argument	h -> name		728698	4					
ANR	729171	PtrMemberAccess	h -> name		728698	0					
ANR	729172	Identifier	h		728698	0					
ANR	729173	Identifier	name		728698	1					
ANR	729174	Argument	"h -> license ? h -> license : ""unknown"""		728698	5					
ANR	729175	ConditionalExpression	"h -> license ? h -> license : ""unknown"""		728698	0					
ANR	729176	Condition	h -> license		728698	0					
ANR	729177	PtrMemberAccess	h -> license		728698	0					
ANR	729178	Identifier	h		728698	0					
ANR	729179	Identifier	license		728698	1					
ANR	729180	PtrMemberAccess	h -> license		728698	1					
ANR	729181	Identifier	h		728698	0					
ANR	729182	Identifier	license		728698	1					
ANR	729183	PrimaryExpression	"""unknown"""		728698	2					
ANR	729184	Argument	h -> desc		728698	6					
ANR	729185	PtrMemberAccess	h -> desc		728698	0					
ANR	729186	Identifier	h		728698	0					
ANR	729187	Identifier	desc		728698	1					
ANR	729188	IfStatement	if ( fmt == 'j' )		728698	19					
ANR	729189	Condition	fmt == 'j'	189:5:5174:5183	728698	0	True				
ANR	729190	EqualityExpression	fmt == 'j'		728698	0		==			
ANR	729191	Identifier	fmt		728698	0					
ANR	729192	PrimaryExpression	'j'		728698	1					
ANR	729193	CompoundStatement		79:17:1644:1644	728698	1					
ANR	729194	ExpressionStatement	pj_end ( pj )	190:2:5190:5201	728698	0	True				
ANR	729195	CallExpression	pj_end ( pj )		728698	0					
ANR	729196	Callee	pj_end		728698	0					
ANR	729197	Identifier	pj_end		728698	0					
ANR	729198	ArgumentList	pj		728698	1					
ANR	729199	Argument	pj		728698	0					
ANR	729200	Identifier	pj		728698	0					
ANR	729201	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	191:2:5205:5236	728698	1	True				
ANR	729202	CallExpression	r_cons_println ( pj_string ( pj ) )		728698	0					
ANR	729203	Callee	r_cons_println		728698	0					
ANR	729204	Identifier	r_cons_println		728698	0					
ANR	729205	ArgumentList	pj_string ( pj )		728698	1					
ANR	729206	Argument	pj_string ( pj )		728698	0					
ANR	729207	CallExpression	pj_string ( pj )		728698	0					
ANR	729208	Callee	pj_string		728698	0					
ANR	729209	Identifier	pj_string		728698	0					
ANR	729210	ArgumentList	pj		728698	1					
ANR	729211	Argument	pj		728698	0					
ANR	729212	Identifier	pj		728698	0					
ANR	729213	ExpressionStatement	pj_free ( pj )	192:2:5240:5252	728698	2	True				
ANR	729214	CallExpression	pj_free ( pj )		728698	0					
ANR	729215	Callee	pj_free		728698	0					
ANR	729216	Identifier	pj_free		728698	0					
ANR	729217	ArgumentList	pj		728698	1					
ANR	729218	Argument	pj		728698	0					
ANR	729219	Identifier	pj		728698	0					
ANR	729220	ReturnType	static void		728698	1					
ANR	729221	Identifier	rasm2_list		728698	2					
ANR	729222	ParameterList	"RCore * core , const char * arch , int fmt"		728698	3					
ANR	729223	Parameter	RCore * core	111:23:3501:3511	728698	0	True				
ANR	729224	ParameterType	RCore *		728698	0					
ANR	729225	Identifier	core		728698	1					
ANR	729226	Parameter	const char * arch	111:36:3514:3529	728698	1	True				
ANR	729227	ParameterType	const char *		728698	0					
ANR	729228	Identifier	arch		728698	1					
ANR	729229	Parameter	int fmt	111:54:3532:3538	728698	2	True				
ANR	729230	ParameterType	int		728698	0					
ANR	729231	Identifier	fmt		728698	1					
ANR	729232	CFGEntryNode	ENTRY		728698		True				
ANR	729233	CFGExitNode	EXIT		728698		True				
ANR	729234	CFGErrorNode	ERROR		728698		True				
ANR	729235	Symbol	h -> desc		728698						
ANR	729236	Symbol	pj_string		728698						
ANR	729237	Symbol	* core		728698						
ANR	729238	Symbol	has_esil		728698						
ANR	729239	Symbol	core -> assembler		728698						
ANR	729240	Symbol	h -> cpus		728698						
ANR	729241	Symbol	fmt		728698						
ANR	729242	Symbol	feat2		728698						
ANR	729243	Symbol	h -> name		728698						
ANR	729244	Symbol	* arch		728698						
ANR	729245	Symbol	h -> assemble		728698						
ANR	729246	Symbol	h -> license		728698						
ANR	729247	Symbol	feat		728698						
ANR	729248	Symbol	strcmp		728698						
ANR	729249	Symbol	* bits		728698						
ANR	729250	Symbol	a		728698						
ANR	729251	Symbol	NULL		728698						
ANR	729252	Symbol	c		728698						
ANR	729253	Symbol	h -> disassemble		728698						
ANR	729254	Symbol	bits		728698						
ANR	729255	Symbol	h		728698						
ANR	729256	Symbol	i		728698						
ANR	729257	Symbol	iter		728698						
ANR	729258	Symbol	r_str_word_get0		728698						
ANR	729259	Symbol	n		728698						
ANR	729260	Symbol	core		728698						
ANR	729261	Symbol	license		728698						
ANR	729262	Symbol	* h		728698						
ANR	729263	Symbol	r_str_split		728698						
ANR	729264	Symbol	h -> bits		728698						
ANR	729265	Symbol	pj		728698						
ANR	729266	Symbol	pj_new		728698						
ANR	729267	Symbol	arch		728698						
ANR	729268	Symbol	strdup		728698						
ANR	729269	Function	__setsegoff	196:0:5260:5462							
ANR	729270	FunctionDef	"__setsegoff (RConfig * cfg , const char * asmarch , int asmbits)"		729269	0					
ANR	729271	CompoundStatement		196:79:5339:5462	729269	0					
ANR	729272	IdentifierDeclStatement	"int autoseg = ( ! strncmp ( asmarch , ""x86"" , 3 ) && asmbits == 16 ) ;"	197:1:5342:5403	729269	0	True				
ANR	729273	IdentifierDecl	"autoseg = ( ! strncmp ( asmarch , ""x86"" , 3 ) && asmbits == 16 )"		729269	0					
ANR	729274	IdentifierDeclType	int		729269	0					
ANR	729275	Identifier	autoseg		729269	1					
ANR	729276	AssignmentExpression	"autoseg = ( ! strncmp ( asmarch , ""x86"" , 3 ) && asmbits == 16 )"		729269	2		=			
ANR	729277	Identifier	autoseg		729269	0					
ANR	729278	AndExpression	"! strncmp ( asmarch , ""x86"" , 3 ) && asmbits == 16"		729269	1		&&			
ANR	729279	UnaryOperationExpression	"! strncmp ( asmarch , ""x86"" , 3 )"		729269	0					
ANR	729280	UnaryOperator	!		729269	0					
ANR	729281	CallExpression	"strncmp ( asmarch , ""x86"" , 3 )"		729269	1					
ANR	729282	Callee	strncmp		729269	0					
ANR	729283	Identifier	strncmp		729269	0					
ANR	729284	ArgumentList	asmarch		729269	1					
ANR	729285	Argument	asmarch		729269	0					
ANR	729286	Identifier	asmarch		729269	0					
ANR	729287	Argument	"""x86"""		729269	1					
ANR	729288	PrimaryExpression	"""x86"""		729269	0					
ANR	729289	Argument	3		729269	2					
ANR	729290	PrimaryExpression	3		729269	0					
ANR	729291	EqualityExpression	asmbits == 16		729269	1		==			
ANR	729292	Identifier	asmbits		729269	0					
ANR	729293	PrimaryExpression	16		729269	1					
ANR	729294	ExpressionStatement	"r_config_set ( cfg , ""asm.segoff"" , r_str_bool ( autoseg ) )"	198:1:5406:5460	729269	1	True				
ANR	729295	CallExpression	"r_config_set ( cfg , ""asm.segoff"" , r_str_bool ( autoseg ) )"		729269	0					
ANR	729296	Callee	r_config_set		729269	0					
ANR	729297	Identifier	r_config_set		729269	0					
ANR	729298	ArgumentList	cfg		729269	1					
ANR	729299	Argument	cfg		729269	0					
ANR	729300	Identifier	cfg		729269	0					
ANR	729301	Argument	"""asm.segoff"""		729269	1					
ANR	729302	PrimaryExpression	"""asm.segoff"""		729269	0					
ANR	729303	Argument	r_str_bool ( autoseg )		729269	2					
ANR	729304	CallExpression	r_str_bool ( autoseg )		729269	0					
ANR	729305	Callee	r_str_bool		729269	0					
ANR	729306	Identifier	r_str_bool		729269	0					
ANR	729307	ArgumentList	autoseg		729269	1					
ANR	729308	Argument	autoseg		729269	0					
ANR	729309	Identifier	autoseg		729269	0					
ANR	729310	ReturnType	static inline void		729269	1					
ANR	729311	Identifier	__setsegoff		729269	2					
ANR	729312	ParameterList	"RConfig * cfg , const char * asmarch , int asmbits"		729269	3					
ANR	729313	Parameter	RConfig * cfg	196:31:5291:5302	729269	0	True				
ANR	729314	ParameterType	RConfig *		729269	0					
ANR	729315	Identifier	cfg		729269	1					
ANR	729316	Parameter	const char * asmarch	196:45:5305:5323	729269	1	True				
ANR	729317	ParameterType	const char *		729269	0					
ANR	729318	Identifier	asmarch		729269	1					
ANR	729319	Parameter	int asmbits	196:66:5326:5336	729269	2	True				
ANR	729320	ParameterType	int		729269	0					
ANR	729321	Identifier	asmbits		729269	1					
ANR	729322	CFGEntryNode	ENTRY		729269		True				
ANR	729323	CFGExitNode	EXIT		729269		True				
ANR	729324	Symbol	strncmp		729269						
ANR	729325	Symbol	r_str_bool		729269						
ANR	729326	Symbol	cfg		729269						
ANR	729327	Symbol	asmarch		729269						
ANR	729328	Symbol	asmbits		729269						
ANR	729329	Symbol	autoseg		729269						
ANR	729330	Function	cb_debug_hitinfo	201:0:5465:5643							
ANR	729331	FunctionDef	"cb_debug_hitinfo (void * user , void * data)"		729330	0					
ANR	729332	CompoundStatement		201:53:5518:5643	729330	0					
ANR	729333	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	202:1:5521:5548	729330	0	True				
ANR	729334	IdentifierDecl	* core = ( RCore * ) user		729330	0					
ANR	729335	IdentifierDeclType	RCore *		729330	0					
ANR	729336	Identifier	core		729330	1					
ANR	729337	AssignmentExpression	* core = ( RCore * ) user		729330	2		=			
ANR	729338	Identifier	core		729330	0					
ANR	729339	CastExpression	( RCore * ) user		729330	1					
ANR	729340	CastTarget	RCore *		729330	0					
ANR	729341	Identifier	user		729330	1					
ANR	729342	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	203:1:5551:5590	729330	1	True				
ANR	729343	IdentifierDecl	* node = ( RConfigNode * ) data		729330	0					
ANR	729344	IdentifierDeclType	RConfigNode *		729330	0					
ANR	729345	Identifier	node		729330	1					
ANR	729346	AssignmentExpression	* node = ( RConfigNode * ) data		729330	2		=			
ANR	729347	Identifier	node		729330	0					
ANR	729348	CastExpression	( RConfigNode * ) data		729330	1					
ANR	729349	CastTarget	RConfigNode *		729330	0					
ANR	729350	Identifier	data		729330	1					
ANR	729351	ExpressionStatement	core -> dbg -> hitinfo = node -> i_value	204:1:5593:5627	729330	2	True				
ANR	729352	AssignmentExpression	core -> dbg -> hitinfo = node -> i_value		729330	0		=			
ANR	729353	PtrMemberAccess	core -> dbg -> hitinfo		729330	0					
ANR	729354	PtrMemberAccess	core -> dbg		729330	0					
ANR	729355	Identifier	core		729330	0					
ANR	729356	Identifier	dbg		729330	1					
ANR	729357	Identifier	hitinfo		729330	1					
ANR	729358	PtrMemberAccess	node -> i_value		729330	1					
ANR	729359	Identifier	node		729330	0					
ANR	729360	Identifier	i_value		729330	1					
ANR	729361	ReturnStatement	return true ;	205:1:5630:5641	729330	3	True				
ANR	729362	Identifier	true		729330	0					
ANR	729363	ReturnType	static bool		729330	1					
ANR	729364	Identifier	cb_debug_hitinfo		729330	2					
ANR	729365	ParameterList	"void * user , void * data"		729330	3					
ANR	729366	Parameter	void * user	201:29:5494:5503	729330	0	True				
ANR	729367	ParameterType	void *		729330	0					
ANR	729368	Identifier	user		729330	1					
ANR	729369	Parameter	void * data	201:41:5506:5515	729330	1	True				
ANR	729370	ParameterType	void *		729330	0					
ANR	729371	Identifier	data		729330	1					
ANR	729372	CFGEntryNode	ENTRY		729330		True				
ANR	729373	CFGExitNode	EXIT		729330		True				
ANR	729374	Symbol	core		729330						
ANR	729375	Symbol	node		729330						
ANR	729376	Symbol	data		729330						
ANR	729377	Symbol	core -> dbg -> hitinfo		729330						
ANR	729378	Symbol	* core		729330						
ANR	729379	Symbol	true		729330						
ANR	729380	Symbol	* node		729330						
ANR	729381	Symbol	user		729330						
ANR	729382	Symbol	* core -> dbg		729330						
ANR	729383	Symbol	* * core		729330						
ANR	729384	Symbol	node -> i_value		729330						
ANR	729385	Symbol	core -> dbg		729330						
ANR	729386	Function	cb_analarmthumb	208:0:5646:5829							
ANR	729387	FunctionDef	"cb_analarmthumb (void * user , void * data)"		729386	0					
ANR	729388	CompoundStatement		208:52:5698:5829	729386	0					
ANR	729389	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	209:1:5701:5728	729386	0	True				
ANR	729390	IdentifierDecl	* core = ( RCore * ) user		729386	0					
ANR	729391	IdentifierDeclType	RCore *		729386	0					
ANR	729392	Identifier	core		729386	1					
ANR	729393	AssignmentExpression	* core = ( RCore * ) user		729386	2		=			
ANR	729394	Identifier	core		729386	0					
ANR	729395	CastExpression	( RCore * ) user		729386	1					
ANR	729396	CastTarget	RCore *		729386	0					
ANR	729397	Identifier	user		729386	1					
ANR	729398	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	210:1:5731:5770	729386	1	True				
ANR	729399	IdentifierDecl	* node = ( RConfigNode * ) data		729386	0					
ANR	729400	IdentifierDeclType	RConfigNode *		729386	0					
ANR	729401	Identifier	node		729386	1					
ANR	729402	AssignmentExpression	* node = ( RConfigNode * ) data		729386	2		=			
ANR	729403	Identifier	node		729386	0					
ANR	729404	CastExpression	( RConfigNode * ) data		729386	1					
ANR	729405	CastTarget	RConfigNode *		729386	0					
ANR	729406	Identifier	data		729386	1					
ANR	729407	ExpressionStatement	core -> anal -> opt . armthumb = node -> i_value	211:1:5773:5813	729386	2	True				
ANR	729408	AssignmentExpression	core -> anal -> opt . armthumb = node -> i_value		729386	0		=			
ANR	729409	MemberAccess	core -> anal -> opt . armthumb		729386	0					
ANR	729410	PtrMemberAccess	core -> anal -> opt		729386	0					
ANR	729411	PtrMemberAccess	core -> anal		729386	0					
ANR	729412	Identifier	core		729386	0					
ANR	729413	Identifier	anal		729386	1					
ANR	729414	Identifier	opt		729386	1					
ANR	729415	Identifier	armthumb		729386	1					
ANR	729416	PtrMemberAccess	node -> i_value		729386	1					
ANR	729417	Identifier	node		729386	0					
ANR	729418	Identifier	i_value		729386	1					
ANR	729419	ReturnStatement	return true ;	212:1:5816:5827	729386	3	True				
ANR	729420	Identifier	true		729386	0					
ANR	729421	ReturnType	static bool		729386	1					
ANR	729422	Identifier	cb_analarmthumb		729386	2					
ANR	729423	ParameterList	"void * user , void * data"		729386	3					
ANR	729424	Parameter	void * user	208:28:5674:5683	729386	0	True				
ANR	729425	ParameterType	void *		729386	0					
ANR	729426	Identifier	user		729386	1					
ANR	729427	Parameter	void * data	208:40:5686:5695	729386	1	True				
ANR	729428	ParameterType	void *		729386	0					
ANR	729429	Identifier	data		729386	1					
ANR	729430	CFGEntryNode	ENTRY		729386		True				
ANR	729431	CFGExitNode	EXIT		729386		True				
ANR	729432	Symbol	core -> anal -> opt		729386						
ANR	729433	Symbol	data		729386						
ANR	729434	Symbol	core -> anal -> opt . armthumb		729386						
ANR	729435	Symbol	* core		729386						
ANR	729436	Symbol	core -> anal		729386						
ANR	729437	Symbol	node -> i_value		729386						
ANR	729438	Symbol	core		729386						
ANR	729439	Symbol	node		729386						
ANR	729440	Symbol	* core -> anal		729386						
ANR	729441	Symbol	true		729386						
ANR	729442	Symbol	* node		729386						
ANR	729443	Symbol	user		729386						
ANR	729444	Symbol	* * core		729386						
ANR	729445	Function	cb_analeobjmp	215:0:5832:6011							
ANR	729446	FunctionDef	"cb_analeobjmp (void * user , void * data)"		729445	0					
ANR	729447	CompoundStatement		215:50:5882:6011	729445	0					
ANR	729448	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	216:1:5885:5912	729445	0	True				
ANR	729449	IdentifierDecl	* core = ( RCore * ) user		729445	0					
ANR	729450	IdentifierDeclType	RCore *		729445	0					
ANR	729451	Identifier	core		729445	1					
ANR	729452	AssignmentExpression	* core = ( RCore * ) user		729445	2		=			
ANR	729453	Identifier	core		729445	0					
ANR	729454	CastExpression	( RCore * ) user		729445	1					
ANR	729455	CastTarget	RCore *		729445	0					
ANR	729456	Identifier	user		729445	1					
ANR	729457	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	217:1:5915:5954	729445	1	True				
ANR	729458	IdentifierDecl	* node = ( RConfigNode * ) data		729445	0					
ANR	729459	IdentifierDeclType	RConfigNode *		729445	0					
ANR	729460	Identifier	node		729445	1					
ANR	729461	AssignmentExpression	* node = ( RConfigNode * ) data		729445	2		=			
ANR	729462	Identifier	node		729445	0					
ANR	729463	CastExpression	( RConfigNode * ) data		729445	1					
ANR	729464	CastTarget	RConfigNode *		729445	0					
ANR	729465	Identifier	data		729445	1					
ANR	729466	ExpressionStatement	core -> anal -> opt . eobjmp = node -> i_value	218:1:5957:5995	729445	2	True				
ANR	729467	AssignmentExpression	core -> anal -> opt . eobjmp = node -> i_value		729445	0		=			
ANR	729468	MemberAccess	core -> anal -> opt . eobjmp		729445	0					
ANR	729469	PtrMemberAccess	core -> anal -> opt		729445	0					
ANR	729470	PtrMemberAccess	core -> anal		729445	0					
ANR	729471	Identifier	core		729445	0					
ANR	729472	Identifier	anal		729445	1					
ANR	729473	Identifier	opt		729445	1					
ANR	729474	Identifier	eobjmp		729445	1					
ANR	729475	PtrMemberAccess	node -> i_value		729445	1					
ANR	729476	Identifier	node		729445	0					
ANR	729477	Identifier	i_value		729445	1					
ANR	729478	ReturnStatement	return true ;	219:1:5998:6009	729445	3	True				
ANR	729479	Identifier	true		729445	0					
ANR	729480	ReturnType	static bool		729445	1					
ANR	729481	Identifier	cb_analeobjmp		729445	2					
ANR	729482	ParameterList	"void * user , void * data"		729445	3					
ANR	729483	Parameter	void * user	215:26:5858:5867	729445	0	True				
ANR	729484	ParameterType	void *		729445	0					
ANR	729485	Identifier	user		729445	1					
ANR	729486	Parameter	void * data	215:38:5870:5879	729445	1	True				
ANR	729487	ParameterType	void *		729445	0					
ANR	729488	Identifier	data		729445	1					
ANR	729489	CFGEntryNode	ENTRY		729445		True				
ANR	729490	CFGExitNode	EXIT		729445		True				
ANR	729491	Symbol	core -> anal -> opt		729445						
ANR	729492	Symbol	data		729445						
ANR	729493	Symbol	* core		729445						
ANR	729494	Symbol	core -> anal		729445						
ANR	729495	Symbol	node -> i_value		729445						
ANR	729496	Symbol	core -> anal -> opt . eobjmp		729445						
ANR	729497	Symbol	core		729445						
ANR	729498	Symbol	node		729445						
ANR	729499	Symbol	* core -> anal		729445						
ANR	729500	Symbol	true		729445						
ANR	729501	Symbol	* node		729445						
ANR	729502	Symbol	user		729445						
ANR	729503	Symbol	* * core		729445						
ANR	729504	Function	cb_analdepth	222:0:6014:6191							
ANR	729505	FunctionDef	"cb_analdepth (void * user , void * data)"		729504	0					
ANR	729506	CompoundStatement		222:49:6063:6191	729504	0					
ANR	729507	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	223:1:6066:6093	729504	0	True				
ANR	729508	IdentifierDecl	* core = ( RCore * ) user		729504	0					
ANR	729509	IdentifierDeclType	RCore *		729504	0					
ANR	729510	Identifier	core		729504	1					
ANR	729511	AssignmentExpression	* core = ( RCore * ) user		729504	2		=			
ANR	729512	Identifier	core		729504	0					
ANR	729513	CastExpression	( RCore * ) user		729504	1					
ANR	729514	CastTarget	RCore *		729504	0					
ANR	729515	Identifier	user		729504	1					
ANR	729516	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	224:1:6096:6135	729504	1	True				
ANR	729517	IdentifierDecl	* node = ( RConfigNode * ) data		729504	0					
ANR	729518	IdentifierDeclType	RConfigNode *		729504	0					
ANR	729519	Identifier	node		729504	1					
ANR	729520	AssignmentExpression	* node = ( RConfigNode * ) data		729504	2		=			
ANR	729521	Identifier	node		729504	0					
ANR	729522	CastExpression	( RConfigNode * ) data		729504	1					
ANR	729523	CastTarget	RConfigNode *		729504	0					
ANR	729524	Identifier	data		729504	1					
ANR	729525	ExpressionStatement	core -> anal -> opt . depth = node -> i_value	225:1:6138:6175	729504	2	True				
ANR	729526	AssignmentExpression	core -> anal -> opt . depth = node -> i_value		729504	0		=			
ANR	729527	MemberAccess	core -> anal -> opt . depth		729504	0					
ANR	729528	PtrMemberAccess	core -> anal -> opt		729504	0					
ANR	729529	PtrMemberAccess	core -> anal		729504	0					
ANR	729530	Identifier	core		729504	0					
ANR	729531	Identifier	anal		729504	1					
ANR	729532	Identifier	opt		729504	1					
ANR	729533	Identifier	depth		729504	1					
ANR	729534	PtrMemberAccess	node -> i_value		729504	1					
ANR	729535	Identifier	node		729504	0					
ANR	729536	Identifier	i_value		729504	1					
ANR	729537	ReturnStatement	return true ;	226:1:6178:6189	729504	3	True				
ANR	729538	Identifier	true		729504	0					
ANR	729539	ReturnType	static bool		729504	1					
ANR	729540	Identifier	cb_analdepth		729504	2					
ANR	729541	ParameterList	"void * user , void * data"		729504	3					
ANR	729542	Parameter	void * user	222:25:6039:6048	729504	0	True				
ANR	729543	ParameterType	void *		729504	0					
ANR	729544	Identifier	user		729504	1					
ANR	729545	Parameter	void * data	222:37:6051:6060	729504	1	True				
ANR	729546	ParameterType	void *		729504	0					
ANR	729547	Identifier	data		729504	1					
ANR	729548	CFGEntryNode	ENTRY		729504		True				
ANR	729549	CFGExitNode	EXIT		729504		True				
ANR	729550	Symbol	core -> anal -> opt		729504						
ANR	729551	Symbol	data		729504						
ANR	729552	Symbol	core -> anal -> opt . depth		729504						
ANR	729553	Symbol	* core		729504						
ANR	729554	Symbol	core -> anal		729504						
ANR	729555	Symbol	node -> i_value		729504						
ANR	729556	Symbol	core		729504						
ANR	729557	Symbol	node		729504						
ANR	729558	Symbol	* core -> anal		729504						
ANR	729559	Symbol	true		729504						
ANR	729560	Symbol	* node		729504						
ANR	729561	Symbol	user		729504						
ANR	729562	Symbol	* * core		729504						
ANR	729563	Function	cb_analgraphdepth	229:0:6194:6382							
ANR	729564	FunctionDef	"cb_analgraphdepth (void * user , void * data)"		729563	0					
ANR	729565	CompoundStatement		229:54:6248:6382	729563	0					
ANR	729566	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	230:1:6251:6278	729563	0	True				
ANR	729567	IdentifierDecl	* core = ( RCore * ) user		729563	0					
ANR	729568	IdentifierDeclType	RCore *		729563	0					
ANR	729569	Identifier	core		729563	1					
ANR	729570	AssignmentExpression	* core = ( RCore * ) user		729563	2		=			
ANR	729571	Identifier	core		729563	0					
ANR	729572	CastExpression	( RCore * ) user		729563	1					
ANR	729573	CastTarget	RCore *		729563	0					
ANR	729574	Identifier	user		729563	1					
ANR	729575	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	231:1:6281:6320	729563	1	True				
ANR	729576	IdentifierDecl	* node = ( RConfigNode * ) data		729563	0					
ANR	729577	IdentifierDeclType	RConfigNode *		729563	0					
ANR	729578	Identifier	node		729563	1					
ANR	729579	AssignmentExpression	* node = ( RConfigNode * ) data		729563	2		=			
ANR	729580	Identifier	node		729563	0					
ANR	729581	CastExpression	( RConfigNode * ) data		729563	1					
ANR	729582	CastTarget	RConfigNode *		729563	0					
ANR	729583	Identifier	data		729563	1					
ANR	729584	ExpressionStatement	core -> anal -> opt . graph_depth = node -> i_value	232:1:6323:6366	729563	2	True				
ANR	729585	AssignmentExpression	core -> anal -> opt . graph_depth = node -> i_value		729563	0		=			
ANR	729586	MemberAccess	core -> anal -> opt . graph_depth		729563	0					
ANR	729587	PtrMemberAccess	core -> anal -> opt		729563	0					
ANR	729588	PtrMemberAccess	core -> anal		729563	0					
ANR	729589	Identifier	core		729563	0					
ANR	729590	Identifier	anal		729563	1					
ANR	729591	Identifier	opt		729563	1					
ANR	729592	Identifier	graph_depth		729563	1					
ANR	729593	PtrMemberAccess	node -> i_value		729563	1					
ANR	729594	Identifier	node		729563	0					
ANR	729595	Identifier	i_value		729563	1					
ANR	729596	ReturnStatement	return true ;	233:1:6369:6380	729563	3	True				
ANR	729597	Identifier	true		729563	0					
ANR	729598	ReturnType	static bool		729563	1					
ANR	729599	Identifier	cb_analgraphdepth		729563	2					
ANR	729600	ParameterList	"void * user , void * data"		729563	3					
ANR	729601	Parameter	void * user	229:30:6224:6233	729563	0	True				
ANR	729602	ParameterType	void *		729563	0					
ANR	729603	Identifier	user		729563	1					
ANR	729604	Parameter	void * data	229:42:6236:6245	729563	1	True				
ANR	729605	ParameterType	void *		729563	0					
ANR	729606	Identifier	data		729563	1					
ANR	729607	CFGEntryNode	ENTRY		729563		True				
ANR	729608	CFGExitNode	EXIT		729563		True				
ANR	729609	Symbol	core -> anal -> opt		729563						
ANR	729610	Symbol	data		729563						
ANR	729611	Symbol	* core		729563						
ANR	729612	Symbol	core -> anal		729563						
ANR	729613	Symbol	node -> i_value		729563						
ANR	729614	Symbol	core		729563						
ANR	729615	Symbol	node		729563						
ANR	729616	Symbol	* core -> anal		729563						
ANR	729617	Symbol	core -> anal -> opt . graph_depth		729563						
ANR	729618	Symbol	true		729563						
ANR	729619	Symbol	* node		729563						
ANR	729620	Symbol	user		729563						
ANR	729621	Symbol	* * core		729563						
ANR	729622	Function	cb_analafterjmp	236:0:6385:6568							
ANR	729623	FunctionDef	"cb_analafterjmp (void * user , void * data)"		729622	0					
ANR	729624	CompoundStatement		236:52:6437:6568	729622	0					
ANR	729625	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	237:1:6440:6467	729622	0	True				
ANR	729626	IdentifierDecl	* core = ( RCore * ) user		729622	0					
ANR	729627	IdentifierDeclType	RCore *		729622	0					
ANR	729628	Identifier	core		729622	1					
ANR	729629	AssignmentExpression	* core = ( RCore * ) user		729622	2		=			
ANR	729630	Identifier	core		729622	0					
ANR	729631	CastExpression	( RCore * ) user		729622	1					
ANR	729632	CastTarget	RCore *		729622	0					
ANR	729633	Identifier	user		729622	1					
ANR	729634	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	238:1:6470:6509	729622	1	True				
ANR	729635	IdentifierDecl	* node = ( RConfigNode * ) data		729622	0					
ANR	729636	IdentifierDeclType	RConfigNode *		729622	0					
ANR	729637	Identifier	node		729622	1					
ANR	729638	AssignmentExpression	* node = ( RConfigNode * ) data		729622	2		=			
ANR	729639	Identifier	node		729622	0					
ANR	729640	CastExpression	( RConfigNode * ) data		729622	1					
ANR	729641	CastTarget	RConfigNode *		729622	0					
ANR	729642	Identifier	data		729622	1					
ANR	729643	ExpressionStatement	core -> anal -> opt . afterjmp = node -> i_value	239:1:6512:6552	729622	2	True				
ANR	729644	AssignmentExpression	core -> anal -> opt . afterjmp = node -> i_value		729622	0		=			
ANR	729645	MemberAccess	core -> anal -> opt . afterjmp		729622	0					
ANR	729646	PtrMemberAccess	core -> anal -> opt		729622	0					
ANR	729647	PtrMemberAccess	core -> anal		729622	0					
ANR	729648	Identifier	core		729622	0					
ANR	729649	Identifier	anal		729622	1					
ANR	729650	Identifier	opt		729622	1					
ANR	729651	Identifier	afterjmp		729622	1					
ANR	729652	PtrMemberAccess	node -> i_value		729622	1					
ANR	729653	Identifier	node		729622	0					
ANR	729654	Identifier	i_value		729622	1					
ANR	729655	ReturnStatement	return true ;	240:1:6555:6566	729622	3	True				
ANR	729656	Identifier	true		729622	0					
ANR	729657	ReturnType	static bool		729622	1					
ANR	729658	Identifier	cb_analafterjmp		729622	2					
ANR	729659	ParameterList	"void * user , void * data"		729622	3					
ANR	729660	Parameter	void * user	236:28:6413:6422	729622	0	True				
ANR	729661	ParameterType	void *		729622	0					
ANR	729662	Identifier	user		729622	1					
ANR	729663	Parameter	void * data	236:40:6425:6434	729622	1	True				
ANR	729664	ParameterType	void *		729622	0					
ANR	729665	Identifier	data		729622	1					
ANR	729666	CFGEntryNode	ENTRY		729622		True				
ANR	729667	CFGExitNode	EXIT		729622		True				
ANR	729668	Symbol	core -> anal -> opt		729622						
ANR	729669	Symbol	data		729622						
ANR	729670	Symbol	core -> anal -> opt . afterjmp		729622						
ANR	729671	Symbol	* core		729622						
ANR	729672	Symbol	core -> anal		729622						
ANR	729673	Symbol	node -> i_value		729622						
ANR	729674	Symbol	core		729622						
ANR	729675	Symbol	node		729622						
ANR	729676	Symbol	* core -> anal		729622						
ANR	729677	Symbol	true		729622						
ANR	729678	Symbol	* node		729622						
ANR	729679	Symbol	user		729622						
ANR	729680	Symbol	* * core		729622						
ANR	729681	Function	cb_anal_endsize	243:0:6571:6753							
ANR	729682	FunctionDef	"cb_anal_endsize (void * user , void * data)"		729681	0					
ANR	729683	CompoundStatement		243:52:6623:6753	729681	0					
ANR	729684	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	244:1:6626:6653	729681	0	True				
ANR	729685	IdentifierDecl	* core = ( RCore * ) user		729681	0					
ANR	729686	IdentifierDeclType	RCore *		729681	0					
ANR	729687	Identifier	core		729681	1					
ANR	729688	AssignmentExpression	* core = ( RCore * ) user		729681	2		=			
ANR	729689	Identifier	core		729681	0					
ANR	729690	CastExpression	( RCore * ) user		729681	1					
ANR	729691	CastTarget	RCore *		729681	0					
ANR	729692	Identifier	user		729681	1					
ANR	729693	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	245:1:6656:6695	729681	1	True				
ANR	729694	IdentifierDecl	* node = ( RConfigNode * ) data		729681	0					
ANR	729695	IdentifierDeclType	RConfigNode *		729681	0					
ANR	729696	Identifier	node		729681	1					
ANR	729697	AssignmentExpression	* node = ( RConfigNode * ) data		729681	2		=			
ANR	729698	Identifier	node		729681	0					
ANR	729699	CastExpression	( RConfigNode * ) data		729681	1					
ANR	729700	CastTarget	RConfigNode *		729681	0					
ANR	729701	Identifier	data		729681	1					
ANR	729702	ExpressionStatement	core -> anal -> opt . endsize = node -> i_value	246:1:6698:6737	729681	2	True				
ANR	729703	AssignmentExpression	core -> anal -> opt . endsize = node -> i_value		729681	0		=			
ANR	729704	MemberAccess	core -> anal -> opt . endsize		729681	0					
ANR	729705	PtrMemberAccess	core -> anal -> opt		729681	0					
ANR	729706	PtrMemberAccess	core -> anal		729681	0					
ANR	729707	Identifier	core		729681	0					
ANR	729708	Identifier	anal		729681	1					
ANR	729709	Identifier	opt		729681	1					
ANR	729710	Identifier	endsize		729681	1					
ANR	729711	PtrMemberAccess	node -> i_value		729681	1					
ANR	729712	Identifier	node		729681	0					
ANR	729713	Identifier	i_value		729681	1					
ANR	729714	ReturnStatement	return true ;	247:1:6740:6751	729681	3	True				
ANR	729715	Identifier	true		729681	0					
ANR	729716	ReturnType	static bool		729681	1					
ANR	729717	Identifier	cb_anal_endsize		729681	2					
ANR	729718	ParameterList	"void * user , void * data"		729681	3					
ANR	729719	Parameter	void * user	243:28:6599:6608	729681	0	True				
ANR	729720	ParameterType	void *		729681	0					
ANR	729721	Identifier	user		729681	1					
ANR	729722	Parameter	void * data	243:40:6611:6620	729681	1	True				
ANR	729723	ParameterType	void *		729681	0					
ANR	729724	Identifier	data		729681	1					
ANR	729725	CFGEntryNode	ENTRY		729681		True				
ANR	729726	CFGExitNode	EXIT		729681		True				
ANR	729727	Symbol	core -> anal -> opt		729681						
ANR	729728	Symbol	core -> anal -> opt . endsize		729681						
ANR	729729	Symbol	data		729681						
ANR	729730	Symbol	* core		729681						
ANR	729731	Symbol	core -> anal		729681						
ANR	729732	Symbol	node -> i_value		729681						
ANR	729733	Symbol	core		729681						
ANR	729734	Symbol	node		729681						
ANR	729735	Symbol	* core -> anal		729681						
ANR	729736	Symbol	true		729681						
ANR	729737	Symbol	* node		729681						
ANR	729738	Symbol	user		729681						
ANR	729739	Symbol	* * core		729681						
ANR	729740	Function	cb_analvars	249:0:6755:6958							
ANR	729741	FunctionDef	"cb_analvars (void * user , void * data)"		729740	0					
ANR	729742	CompoundStatement		249:48:6803:6958	729740	0					
ANR	729743	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	250:8:6813:6840	729740	0	True				
ANR	729744	IdentifierDecl	* core = ( RCore * ) user		729740	0					
ANR	729745	IdentifierDeclType	RCore *		729740	0					
ANR	729746	Identifier	core		729740	1					
ANR	729747	AssignmentExpression	* core = ( RCore * ) user		729740	2		=			
ANR	729748	Identifier	core		729740	0					
ANR	729749	CastExpression	( RCore * ) user		729740	1					
ANR	729750	CastTarget	RCore *		729740	0					
ANR	729751	Identifier	user		729740	1					
ANR	729752	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	251:8:6850:6889	729740	1	True				
ANR	729753	IdentifierDecl	* node = ( RConfigNode * ) data		729740	0					
ANR	729754	IdentifierDeclType	RConfigNode *		729740	0					
ANR	729755	Identifier	node		729740	1					
ANR	729756	AssignmentExpression	* node = ( RConfigNode * ) data		729740	2		=			
ANR	729757	Identifier	node		729740	0					
ANR	729758	CastExpression	( RConfigNode * ) data		729740	1					
ANR	729759	CastTarget	RConfigNode *		729740	0					
ANR	729760	Identifier	data		729740	1					
ANR	729761	ExpressionStatement	core -> anal -> opt . vars = node -> i_value	252:8:6899:6935	729740	2	True				
ANR	729762	AssignmentExpression	core -> anal -> opt . vars = node -> i_value		729740	0		=			
ANR	729763	MemberAccess	core -> anal -> opt . vars		729740	0					
ANR	729764	PtrMemberAccess	core -> anal -> opt		729740	0					
ANR	729765	PtrMemberAccess	core -> anal		729740	0					
ANR	729766	Identifier	core		729740	0					
ANR	729767	Identifier	anal		729740	1					
ANR	729768	Identifier	opt		729740	1					
ANR	729769	Identifier	vars		729740	1					
ANR	729770	PtrMemberAccess	node -> i_value		729740	1					
ANR	729771	Identifier	node		729740	0					
ANR	729772	Identifier	i_value		729740	1					
ANR	729773	ReturnStatement	return true ;	253:8:6945:6956	729740	3	True				
ANR	729774	Identifier	true		729740	0					
ANR	729775	ReturnType	static bool		729740	1					
ANR	729776	Identifier	cb_analvars		729740	2					
ANR	729777	ParameterList	"void * user , void * data"		729740	3					
ANR	729778	Parameter	void * user	249:24:6779:6788	729740	0	True				
ANR	729779	ParameterType	void *		729740	0					
ANR	729780	Identifier	user		729740	1					
ANR	729781	Parameter	void * data	249:36:6791:6800	729740	1	True				
ANR	729782	ParameterType	void *		729740	0					
ANR	729783	Identifier	data		729740	1					
ANR	729784	CFGEntryNode	ENTRY		729740		True				
ANR	729785	CFGExitNode	EXIT		729740		True				
ANR	729786	Symbol	core -> anal -> opt		729740						
ANR	729787	Symbol	core -> anal -> opt . vars		729740						
ANR	729788	Symbol	data		729740						
ANR	729789	Symbol	* core		729740						
ANR	729790	Symbol	core -> anal		729740						
ANR	729791	Symbol	node -> i_value		729740						
ANR	729792	Symbol	core		729740						
ANR	729793	Symbol	node		729740						
ANR	729794	Symbol	* core -> anal		729740						
ANR	729795	Symbol	true		729740						
ANR	729796	Symbol	* node		729740						
ANR	729797	Symbol	user		729740						
ANR	729798	Symbol	* * core		729740						
ANR	729799	Function	cb_analstrings	256:0:6961:7180							
ANR	729800	FunctionDef	"cb_analstrings (void * user , void * data)"		729799	0					
ANR	729801	CompoundStatement		256:51:7012:7180	729799	0					
ANR	729802	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	257:1:7015:7042	729799	0	True				
ANR	729803	IdentifierDecl	* core = ( RCore * ) user		729799	0					
ANR	729804	IdentifierDeclType	RCore *		729799	0					
ANR	729805	Identifier	core		729799	1					
ANR	729806	AssignmentExpression	* core = ( RCore * ) user		729799	2		=			
ANR	729807	Identifier	core		729799	0					
ANR	729808	CastExpression	( RCore * ) user		729799	1					
ANR	729809	CastTarget	RCore *		729799	0					
ANR	729810	Identifier	user		729799	1					
ANR	729811	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	258:1:7045:7084	729799	1	True				
ANR	729812	IdentifierDecl	* node = ( RConfigNode * ) data		729799	0					
ANR	729813	IdentifierDeclType	RConfigNode *		729799	0					
ANR	729814	Identifier	node		729799	1					
ANR	729815	AssignmentExpression	* node = ( RConfigNode * ) data		729799	2		=			
ANR	729816	Identifier	node		729799	0					
ANR	729817	CastExpression	( RConfigNode * ) data		729799	1					
ANR	729818	CastTarget	RConfigNode *		729799	0					
ANR	729819	Identifier	data		729799	1					
ANR	729820	IfStatement	if ( node -> i_value )		729799	2					
ANR	729821	Condition	node -> i_value	259:5:7091:7103	729799	0	True				
ANR	729822	PtrMemberAccess	node -> i_value		729799	0					
ANR	729823	Identifier	node		729799	0					
ANR	729824	Identifier	i_value		729799	1					
ANR	729825	CompoundStatement		4:20:93:93	729799	1					
ANR	729826	ExpressionStatement	"r_config_set ( core -> config , ""bin.strings"" , ""false"" )"	260:2:7110:7161	729799	0	True				
ANR	729827	CallExpression	"r_config_set ( core -> config , ""bin.strings"" , ""false"" )"		729799	0					
ANR	729828	Callee	r_config_set		729799	0					
ANR	729829	Identifier	r_config_set		729799	0					
ANR	729830	ArgumentList	core -> config		729799	1					
ANR	729831	Argument	core -> config		729799	0					
ANR	729832	PtrMemberAccess	core -> config		729799	0					
ANR	729833	Identifier	core		729799	0					
ANR	729834	Identifier	config		729799	1					
ANR	729835	Argument	"""bin.strings"""		729799	1					
ANR	729836	PrimaryExpression	"""bin.strings"""		729799	0					
ANR	729837	Argument	"""false"""		729799	2					
ANR	729838	PrimaryExpression	"""false"""		729799	0					
ANR	729839	ReturnStatement	return true ;	262:1:7167:7178	729799	3	True				
ANR	729840	Identifier	true		729799	0					
ANR	729841	ReturnType	static bool		729799	1					
ANR	729842	Identifier	cb_analstrings		729799	2					
ANR	729843	ParameterList	"void * user , void * data"		729799	3					
ANR	729844	Parameter	void * user	256:27:6988:6997	729799	0	True				
ANR	729845	ParameterType	void *		729799	0					
ANR	729846	Identifier	user		729799	1					
ANR	729847	Parameter	void * data	256:39:7000:7009	729799	1	True				
ANR	729848	ParameterType	void *		729799	0					
ANR	729849	Identifier	data		729799	1					
ANR	729850	CFGEntryNode	ENTRY		729799		True				
ANR	729851	CFGExitNode	EXIT		729799		True				
ANR	729852	Symbol	core -> config		729799						
ANR	729853	Symbol	core		729799						
ANR	729854	Symbol	node		729799						
ANR	729855	Symbol	data		729799						
ANR	729856	Symbol	* core		729799						
ANR	729857	Symbol	true		729799						
ANR	729858	Symbol	* node		729799						
ANR	729859	Symbol	user		729799						
ANR	729860	Symbol	node -> i_value		729799						
ANR	729861	Function	cb_anal_ignbithints	265:0:7183:7373							
ANR	729862	FunctionDef	"cb_anal_ignbithints (void * user , void * data)"		729861	0					
ANR	729863	CompoundStatement		265:56:7239:7373	729861	0					
ANR	729864	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	266:1:7242:7269	729861	0	True				
ANR	729865	IdentifierDecl	* core = ( RCore * ) user		729861	0					
ANR	729866	IdentifierDeclType	RCore *		729861	0					
ANR	729867	Identifier	core		729861	1					
ANR	729868	AssignmentExpression	* core = ( RCore * ) user		729861	2		=			
ANR	729869	Identifier	core		729861	0					
ANR	729870	CastExpression	( RCore * ) user		729861	1					
ANR	729871	CastTarget	RCore *		729861	0					
ANR	729872	Identifier	user		729861	1					
ANR	729873	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	267:1:7272:7311	729861	1	True				
ANR	729874	IdentifierDecl	* node = ( RConfigNode * ) data		729861	0					
ANR	729875	IdentifierDeclType	RConfigNode *		729861	0					
ANR	729876	Identifier	node		729861	1					
ANR	729877	AssignmentExpression	* node = ( RConfigNode * ) data		729861	2		=			
ANR	729878	Identifier	node		729861	0					
ANR	729879	CastExpression	( RConfigNode * ) data		729861	1					
ANR	729880	CastTarget	RConfigNode *		729861	0					
ANR	729881	Identifier	data		729861	1					
ANR	729882	ExpressionStatement	core -> anal -> opt . ignbithints = node -> i_value	268:1:7314:7357	729861	2	True				
ANR	729883	AssignmentExpression	core -> anal -> opt . ignbithints = node -> i_value		729861	0		=			
ANR	729884	MemberAccess	core -> anal -> opt . ignbithints		729861	0					
ANR	729885	PtrMemberAccess	core -> anal -> opt		729861	0					
ANR	729886	PtrMemberAccess	core -> anal		729861	0					
ANR	729887	Identifier	core		729861	0					
ANR	729888	Identifier	anal		729861	1					
ANR	729889	Identifier	opt		729861	1					
ANR	729890	Identifier	ignbithints		729861	1					
ANR	729891	PtrMemberAccess	node -> i_value		729861	1					
ANR	729892	Identifier	node		729861	0					
ANR	729893	Identifier	i_value		729861	1					
ANR	729894	ReturnStatement	return true ;	269:1:7360:7371	729861	3	True				
ANR	729895	Identifier	true		729861	0					
ANR	729896	ReturnType	static bool		729861	1					
ANR	729897	Identifier	cb_anal_ignbithints		729861	2					
ANR	729898	ParameterList	"void * user , void * data"		729861	3					
ANR	729899	Parameter	void * user	265:32:7215:7224	729861	0	True				
ANR	729900	ParameterType	void *		729861	0					
ANR	729901	Identifier	user		729861	1					
ANR	729902	Parameter	void * data	265:44:7227:7236	729861	1	True				
ANR	729903	ParameterType	void *		729861	0					
ANR	729904	Identifier	data		729861	1					
ANR	729905	CFGEntryNode	ENTRY		729861		True				
ANR	729906	CFGExitNode	EXIT		729861		True				
ANR	729907	Symbol	core -> anal -> opt		729861						
ANR	729908	Symbol	data		729861						
ANR	729909	Symbol	* core		729861						
ANR	729910	Symbol	core -> anal		729861						
ANR	729911	Symbol	node -> i_value		729861						
ANR	729912	Symbol	core		729861						
ANR	729913	Symbol	node		729861						
ANR	729914	Symbol	* core -> anal		729861						
ANR	729915	Symbol	true		729861						
ANR	729916	Symbol	* node		729861						
ANR	729917	Symbol	user		729861						
ANR	729918	Symbol	core -> anal -> opt . ignbithints		729861						
ANR	729919	Symbol	* * core		729861						
ANR	729920	Function	cb_analsleep	272:0:7376:7549							
ANR	729921	FunctionDef	"cb_analsleep (void * user , void * data)"		729920	0					
ANR	729922	CompoundStatement		272:49:7425:7549	729920	0					
ANR	729923	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	273:1:7428:7455	729920	0	True				
ANR	729924	IdentifierDecl	* core = ( RCore * ) user		729920	0					
ANR	729925	IdentifierDeclType	RCore *		729920	0					
ANR	729926	Identifier	core		729920	1					
ANR	729927	AssignmentExpression	* core = ( RCore * ) user		729920	2		=			
ANR	729928	Identifier	core		729920	0					
ANR	729929	CastExpression	( RCore * ) user		729920	1					
ANR	729930	CastTarget	RCore *		729920	0					
ANR	729931	Identifier	user		729920	1					
ANR	729932	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	274:1:7458:7497	729920	1	True				
ANR	729933	IdentifierDecl	* node = ( RConfigNode * ) data		729920	0					
ANR	729934	IdentifierDeclType	RConfigNode *		729920	0					
ANR	729935	Identifier	node		729920	1					
ANR	729936	AssignmentExpression	* node = ( RConfigNode * ) data		729920	2		=			
ANR	729937	Identifier	node		729920	0					
ANR	729938	CastExpression	( RConfigNode * ) data		729920	1					
ANR	729939	CastTarget	RConfigNode *		729920	0					
ANR	729940	Identifier	data		729920	1					
ANR	729941	ExpressionStatement	core -> anal -> sleep = node -> i_value	275:1:7500:7533	729920	2	True				
ANR	729942	AssignmentExpression	core -> anal -> sleep = node -> i_value		729920	0		=			
ANR	729943	PtrMemberAccess	core -> anal -> sleep		729920	0					
ANR	729944	PtrMemberAccess	core -> anal		729920	0					
ANR	729945	Identifier	core		729920	0					
ANR	729946	Identifier	anal		729920	1					
ANR	729947	Identifier	sleep		729920	1					
ANR	729948	PtrMemberAccess	node -> i_value		729920	1					
ANR	729949	Identifier	node		729920	0					
ANR	729950	Identifier	i_value		729920	1					
ANR	729951	ReturnStatement	return true ;	276:1:7536:7547	729920	3	True				
ANR	729952	Identifier	true		729920	0					
ANR	729953	ReturnType	static bool		729920	1					
ANR	729954	Identifier	cb_analsleep		729920	2					
ANR	729955	ParameterList	"void * user , void * data"		729920	3					
ANR	729956	Parameter	void * user	272:25:7401:7410	729920	0	True				
ANR	729957	ParameterType	void *		729920	0					
ANR	729958	Identifier	user		729920	1					
ANR	729959	Parameter	void * data	272:37:7413:7422	729920	1	True				
ANR	729960	ParameterType	void *		729920	0					
ANR	729961	Identifier	data		729920	1					
ANR	729962	CFGEntryNode	ENTRY		729920		True				
ANR	729963	CFGExitNode	EXIT		729920		True				
ANR	729964	Symbol	core -> anal -> sleep		729920						
ANR	729965	Symbol	core		729920						
ANR	729966	Symbol	node		729920						
ANR	729967	Symbol	* core -> anal		729920						
ANR	729968	Symbol	data		729920						
ANR	729969	Symbol	* core		729920						
ANR	729970	Symbol	true		729920						
ANR	729971	Symbol	* node		729920						
ANR	729972	Symbol	user		729920						
ANR	729973	Symbol	core -> anal		729920						
ANR	729974	Symbol	* * core		729920						
ANR	729975	Symbol	node -> i_value		729920						
ANR	729976	Function	cb_analmaxrefs	279:0:7552:7733							
ANR	729977	FunctionDef	"cb_analmaxrefs (void * user , void * data)"		729976	0					
ANR	729978	CompoundStatement		279:51:7603:7733	729976	0					
ANR	729979	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	280:1:7606:7633	729976	0	True				
ANR	729980	IdentifierDecl	* core = ( RCore * ) user		729976	0					
ANR	729981	IdentifierDeclType	RCore *		729976	0					
ANR	729982	Identifier	core		729976	1					
ANR	729983	AssignmentExpression	* core = ( RCore * ) user		729976	2		=			
ANR	729984	Identifier	core		729976	0					
ANR	729985	CastExpression	( RCore * ) user		729976	1					
ANR	729986	CastTarget	RCore *		729976	0					
ANR	729987	Identifier	user		729976	1					
ANR	729988	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	281:1:7636:7675	729976	1	True				
ANR	729989	IdentifierDecl	* node = ( RConfigNode * ) data		729976	0					
ANR	729990	IdentifierDeclType	RConfigNode *		729976	0					
ANR	729991	Identifier	node		729976	1					
ANR	729992	AssignmentExpression	* node = ( RConfigNode * ) data		729976	2		=			
ANR	729993	Identifier	node		729976	0					
ANR	729994	CastExpression	( RConfigNode * ) data		729976	1					
ANR	729995	CastTarget	RConfigNode *		729976	0					
ANR	729996	Identifier	data		729976	1					
ANR	729997	ExpressionStatement	core -> anal -> maxreflines = node -> i_value	282:1:7678:7717	729976	2	True				
ANR	729998	AssignmentExpression	core -> anal -> maxreflines = node -> i_value		729976	0		=			
ANR	729999	PtrMemberAccess	core -> anal -> maxreflines		729976	0					
ANR	730000	PtrMemberAccess	core -> anal		729976	0					
ANR	730001	Identifier	core		729976	0					
ANR	730002	Identifier	anal		729976	1					
ANR	730003	Identifier	maxreflines		729976	1					
ANR	730004	PtrMemberAccess	node -> i_value		729976	1					
ANR	730005	Identifier	node		729976	0					
ANR	730006	Identifier	i_value		729976	1					
ANR	730007	ReturnStatement	return true ;	283:1:7720:7731	729976	3	True				
ANR	730008	Identifier	true		729976	0					
ANR	730009	ReturnType	static bool		729976	1					
ANR	730010	Identifier	cb_analmaxrefs		729976	2					
ANR	730011	ParameterList	"void * user , void * data"		729976	3					
ANR	730012	Parameter	void * user	279:27:7579:7588	729976	0	True				
ANR	730013	ParameterType	void *		729976	0					
ANR	730014	Identifier	user		729976	1					
ANR	730015	Parameter	void * data	279:39:7591:7600	729976	1	True				
ANR	730016	ParameterType	void *		729976	0					
ANR	730017	Identifier	data		729976	1					
ANR	730018	CFGEntryNode	ENTRY		729976		True				
ANR	730019	CFGExitNode	EXIT		729976		True				
ANR	730020	Symbol	core		729976						
ANR	730021	Symbol	node		729976						
ANR	730022	Symbol	* core -> anal		729976						
ANR	730023	Symbol	data		729976						
ANR	730024	Symbol	* core		729976						
ANR	730025	Symbol	core -> anal -> maxreflines		729976						
ANR	730026	Symbol	true		729976						
ANR	730027	Symbol	* node		729976						
ANR	730028	Symbol	user		729976						
ANR	730029	Symbol	core -> anal		729976						
ANR	730030	Symbol	* * core		729976						
ANR	730031	Symbol	node -> i_value		729976						
ANR	730032	Function	cb_analnopskip	286:0:7736:7917							
ANR	730033	FunctionDef	"cb_analnopskip (void * user , void * data)"		730032	0					
ANR	730034	CompoundStatement		286:51:7787:7917	730032	0					
ANR	730035	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	287:1:7790:7817	730032	0	True				
ANR	730036	IdentifierDecl	* core = ( RCore * ) user		730032	0					
ANR	730037	IdentifierDeclType	RCore *		730032	0					
ANR	730038	Identifier	core		730032	1					
ANR	730039	AssignmentExpression	* core = ( RCore * ) user		730032	2		=			
ANR	730040	Identifier	core		730032	0					
ANR	730041	CastExpression	( RCore * ) user		730032	1					
ANR	730042	CastTarget	RCore *		730032	0					
ANR	730043	Identifier	user		730032	1					
ANR	730044	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	288:1:7820:7859	730032	1	True				
ANR	730045	IdentifierDecl	* node = ( RConfigNode * ) data		730032	0					
ANR	730046	IdentifierDeclType	RConfigNode *		730032	0					
ANR	730047	Identifier	node		730032	1					
ANR	730048	AssignmentExpression	* node = ( RConfigNode * ) data		730032	2		=			
ANR	730049	Identifier	node		730032	0					
ANR	730050	CastExpression	( RConfigNode * ) data		730032	1					
ANR	730051	CastTarget	RConfigNode *		730032	0					
ANR	730052	Identifier	data		730032	1					
ANR	730053	ExpressionStatement	core -> anal -> opt . nopskip = node -> i_value	289:1:7862:7901	730032	2	True				
ANR	730054	AssignmentExpression	core -> anal -> opt . nopskip = node -> i_value		730032	0		=			
ANR	730055	MemberAccess	core -> anal -> opt . nopskip		730032	0					
ANR	730056	PtrMemberAccess	core -> anal -> opt		730032	0					
ANR	730057	PtrMemberAccess	core -> anal		730032	0					
ANR	730058	Identifier	core		730032	0					
ANR	730059	Identifier	anal		730032	1					
ANR	730060	Identifier	opt		730032	1					
ANR	730061	Identifier	nopskip		730032	1					
ANR	730062	PtrMemberAccess	node -> i_value		730032	1					
ANR	730063	Identifier	node		730032	0					
ANR	730064	Identifier	i_value		730032	1					
ANR	730065	ReturnStatement	return true ;	290:1:7904:7915	730032	3	True				
ANR	730066	Identifier	true		730032	0					
ANR	730067	ReturnType	static bool		730032	1					
ANR	730068	Identifier	cb_analnopskip		730032	2					
ANR	730069	ParameterList	"void * user , void * data"		730032	3					
ANR	730070	Parameter	void * user	286:27:7763:7772	730032	0	True				
ANR	730071	ParameterType	void *		730032	0					
ANR	730072	Identifier	user		730032	1					
ANR	730073	Parameter	void * data	286:39:7775:7784	730032	1	True				
ANR	730074	ParameterType	void *		730032	0					
ANR	730075	Identifier	data		730032	1					
ANR	730076	CFGEntryNode	ENTRY		730032		True				
ANR	730077	CFGExitNode	EXIT		730032		True				
ANR	730078	Symbol	core -> anal -> opt		730032						
ANR	730079	Symbol	data		730032						
ANR	730080	Symbol	core -> anal -> opt . nopskip		730032						
ANR	730081	Symbol	* core		730032						
ANR	730082	Symbol	core -> anal		730032						
ANR	730083	Symbol	node -> i_value		730032						
ANR	730084	Symbol	core		730032						
ANR	730085	Symbol	node		730032						
ANR	730086	Symbol	* core -> anal		730032						
ANR	730087	Symbol	true		730032						
ANR	730088	Symbol	* node		730032						
ANR	730089	Symbol	user		730032						
ANR	730090	Symbol	* * core		730032						
ANR	730091	Function	cb_analhpskip	293:0:7920:8099							
ANR	730092	FunctionDef	"cb_analhpskip (void * user , void * data)"		730091	0					
ANR	730093	CompoundStatement		293:50:7970:8099	730091	0					
ANR	730094	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	294:1:7973:8000	730091	0	True				
ANR	730095	IdentifierDecl	* core = ( RCore * ) user		730091	0					
ANR	730096	IdentifierDeclType	RCore *		730091	0					
ANR	730097	Identifier	core		730091	1					
ANR	730098	AssignmentExpression	* core = ( RCore * ) user		730091	2		=			
ANR	730099	Identifier	core		730091	0					
ANR	730100	CastExpression	( RCore * ) user		730091	1					
ANR	730101	CastTarget	RCore *		730091	0					
ANR	730102	Identifier	user		730091	1					
ANR	730103	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	295:1:8003:8042	730091	1	True				
ANR	730104	IdentifierDecl	* node = ( RConfigNode * ) data		730091	0					
ANR	730105	IdentifierDeclType	RConfigNode *		730091	0					
ANR	730106	Identifier	node		730091	1					
ANR	730107	AssignmentExpression	* node = ( RConfigNode * ) data		730091	2		=			
ANR	730108	Identifier	node		730091	0					
ANR	730109	CastExpression	( RConfigNode * ) data		730091	1					
ANR	730110	CastTarget	RConfigNode *		730091	0					
ANR	730111	Identifier	data		730091	1					
ANR	730112	ExpressionStatement	core -> anal -> opt . hpskip = node -> i_value	296:1:8045:8083	730091	2	True				
ANR	730113	AssignmentExpression	core -> anal -> opt . hpskip = node -> i_value		730091	0		=			
ANR	730114	MemberAccess	core -> anal -> opt . hpskip		730091	0					
ANR	730115	PtrMemberAccess	core -> anal -> opt		730091	0					
ANR	730116	PtrMemberAccess	core -> anal		730091	0					
ANR	730117	Identifier	core		730091	0					
ANR	730118	Identifier	anal		730091	1					
ANR	730119	Identifier	opt		730091	1					
ANR	730120	Identifier	hpskip		730091	1					
ANR	730121	PtrMemberAccess	node -> i_value		730091	1					
ANR	730122	Identifier	node		730091	0					
ANR	730123	Identifier	i_value		730091	1					
ANR	730124	ReturnStatement	return true ;	297:1:8086:8097	730091	3	True				
ANR	730125	Identifier	true		730091	0					
ANR	730126	ReturnType	static bool		730091	1					
ANR	730127	Identifier	cb_analhpskip		730091	2					
ANR	730128	ParameterList	"void * user , void * data"		730091	3					
ANR	730129	Parameter	void * user	293:26:7946:7955	730091	0	True				
ANR	730130	ParameterType	void *		730091	0					
ANR	730131	Identifier	user		730091	1					
ANR	730132	Parameter	void * data	293:38:7958:7967	730091	1	True				
ANR	730133	ParameterType	void *		730091	0					
ANR	730134	Identifier	data		730091	1					
ANR	730135	CFGEntryNode	ENTRY		730091		True				
ANR	730136	CFGExitNode	EXIT		730091		True				
ANR	730137	Symbol	core -> anal -> opt		730091						
ANR	730138	Symbol	core -> anal -> opt . hpskip		730091						
ANR	730139	Symbol	data		730091						
ANR	730140	Symbol	* core		730091						
ANR	730141	Symbol	core -> anal		730091						
ANR	730142	Symbol	node -> i_value		730091						
ANR	730143	Symbol	core		730091						
ANR	730144	Symbol	node		730091						
ANR	730145	Symbol	* core -> anal		730091						
ANR	730146	Symbol	true		730091						
ANR	730147	Symbol	* node		730091						
ANR	730148	Symbol	user		730091						
ANR	730149	Symbol	* * core		730091						
ANR	730150	Function	update_analarch_options	300:0:8102:8364							
ANR	730151	FunctionDef	"update_analarch_options (RCore * core , RConfigNode * node)"		730150	0					
ANR	730152	CompoundStatement		300:68:8170:8364	730150	0					
ANR	730153	IdentifierDeclStatement	RAnalPlugin * h ;	301:1:8173:8187	730150	0	True				
ANR	730154	IdentifierDecl	* h		730150	0					
ANR	730155	IdentifierDeclType	RAnalPlugin *		730150	0					
ANR	730156	Identifier	h		730150	1					
ANR	730157	IdentifierDeclStatement	RListIter * it ;	302:1:8190:8203	730150	1	True				
ANR	730158	IdentifierDecl	* it		730150	0					
ANR	730159	IdentifierDeclType	RListIter *		730150	0					
ANR	730160	Identifier	it		730150	1					
ANR	730161	IfStatement	if ( core && core -> anal && node )		730150	2					
ANR	730162	Condition	core && core -> anal && node	303:5:8210:8235	730150	0	True				
ANR	730163	AndExpression	core && core -> anal && node		730150	0		&&			
ANR	730164	Identifier	core		730150	0					
ANR	730165	AndExpression	core -> anal && node		730150	1		&&			
ANR	730166	PtrMemberAccess	core -> anal		730150	0					
ANR	730167	Identifier	core		730150	0					
ANR	730168	Identifier	anal		730150	1					
ANR	730169	Identifier	node		730150	1					
ANR	730170	CompoundStatement		4:33:67:67	730150	1					
ANR	730171	ExpressionStatement	r_list_purge ( node -> options )	304:2:8242:8270	730150	0	True				
ANR	730172	CallExpression	r_list_purge ( node -> options )		730150	0					
ANR	730173	Callee	r_list_purge		730150	0					
ANR	730174	Identifier	r_list_purge		730150	0					
ANR	730175	ArgumentList	node -> options		730150	1					
ANR	730176	Argument	node -> options		730150	0					
ANR	730177	PtrMemberAccess	node -> options		730150	0					
ANR	730178	Identifier	node		730150	0					
ANR	730179	Identifier	options		730150	1					
ANR	730180	Statement	r_list_foreach	305:2:8274:8287	730150	1	True				
ANR	730181	Statement	(	305:17:8289:8289	730150	2	True				
ANR	730182	Statement	core	305:18:8290:8293	730150	3	True				
ANR	730183	Statement	->	305:22:8294:8295	730150	4	True				
ANR	730184	Statement	anal	305:24:8296:8299	730150	5	True				
ANR	730185	Statement	->	305:28:8300:8301	730150	6	True				
ANR	730186	Statement	plugins	305:30:8302:8308	730150	7	True				
ANR	730187	Statement	","	305:37:8309:8309	730150	8	True				
ANR	730188	Statement	it	305:39:8311:8312	730150	9	True				
ANR	730189	Statement	","	305:41:8313:8313	730150	10	True				
ANR	730190	Statement	h	305:43:8315:8315	730150	11	True				
ANR	730191	Statement	)	305:44:8316:8316	730150	12	True				
ANR	730192	CompoundStatement		6:46:147:147	730150	13					
ANR	730193	ExpressionStatement	"SETOPTIONS ( node , h -> name , NULL )"	306:3:8323:8355	730150	0	True				
ANR	730194	CallExpression	"SETOPTIONS ( node , h -> name , NULL )"		730150	0					
ANR	730195	Callee	SETOPTIONS		730150	0					
ANR	730196	Identifier	SETOPTIONS		730150	0					
ANR	730197	ArgumentList	node		730150	1					
ANR	730198	Argument	node		730150	0					
ANR	730199	Identifier	node		730150	0					
ANR	730200	Argument	h -> name		730150	1					
ANR	730201	PtrMemberAccess	h -> name		730150	0					
ANR	730202	Identifier	h		730150	0					
ANR	730203	Identifier	name		730150	1					
ANR	730204	Argument	NULL		730150	2					
ANR	730205	Identifier	NULL		730150	0					
ANR	730206	ReturnType	static void		730150	1					
ANR	730207	Identifier	update_analarch_options		730150	2					
ANR	730208	ParameterList	"RCore * core , RConfigNode * node"		730150	3					
ANR	730209	Parameter	RCore * core	300:36:8138:8148	730150	0	True				
ANR	730210	ParameterType	RCore *		730150	0					
ANR	730211	Identifier	core		730150	1					
ANR	730212	Parameter	RConfigNode * node	300:49:8151:8167	730150	1	True				
ANR	730213	ParameterType	RConfigNode *		730150	0					
ANR	730214	Identifier	node		730150	1					
ANR	730215	CFGEntryNode	ENTRY		730150		True				
ANR	730216	CFGExitNode	EXIT		730150		True				
ANR	730217	Symbol	core		730150						
ANR	730218	Symbol	node		730150						
ANR	730219	Symbol	* h		730150						
ANR	730220	Symbol	NULL		730150						
ANR	730221	Symbol	h		730150						
ANR	730222	Symbol	* core		730150						
ANR	730223	Symbol	node -> options		730150						
ANR	730224	Symbol	* node		730150						
ANR	730225	Symbol	it		730150						
ANR	730226	Symbol	core -> anal		730150						
ANR	730227	Symbol	h -> name		730150						
ANR	730228	Function	cb_analarch	311:0:8367:8954							
ANR	730229	FunctionDef	"cb_analarch (void * user , void * data)"		730228	0					
ANR	730230	CompoundStatement		311:48:8415:8954	730228	0					
ANR	730231	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	312:1:8418:8445	730228	0	True				
ANR	730232	IdentifierDecl	* core = ( RCore * ) user		730228	0					
ANR	730233	IdentifierDeclType	RCore *		730228	0					
ANR	730234	Identifier	core		730228	1					
ANR	730235	AssignmentExpression	* core = ( RCore * ) user		730228	2		=			
ANR	730236	Identifier	core		730228	0					
ANR	730237	CastExpression	( RCore * ) user		730228	1					
ANR	730238	CastTarget	RCore *		730228	0					
ANR	730239	Identifier	user		730228	1					
ANR	730240	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	313:1:8448:8487	730228	1	True				
ANR	730241	IdentifierDecl	* node = ( RConfigNode * ) data		730228	0					
ANR	730242	IdentifierDeclType	RConfigNode *		730228	0					
ANR	730243	Identifier	node		730228	1					
ANR	730244	AssignmentExpression	* node = ( RConfigNode * ) data		730228	2		=			
ANR	730245	Identifier	node		730228	0					
ANR	730246	CastExpression	( RConfigNode * ) data		730228	1					
ANR	730247	CastTarget	RConfigNode *		730228	0					
ANR	730248	Identifier	data		730228	1					
ANR	730249	IfStatement	if ( * node -> value == '?' )		730228	2					
ANR	730250	Condition	* node -> value == '?'	314:5:8494:8512	730228	0	True				
ANR	730251	EqualityExpression	* node -> value == '?'		730228	0		==			
ANR	730252	UnaryOperationExpression	* node -> value		730228	0					
ANR	730253	UnaryOperator	*		730228	0					
ANR	730254	PtrMemberAccess	node -> value		730228	1					
ANR	730255	Identifier	node		730228	0					
ANR	730256	Identifier	value		730228	1					
ANR	730257	PrimaryExpression	'?'		730228	1					
ANR	730258	CompoundStatement		4:26:99:99	730228	1					
ANR	730259	ExpressionStatement	"update_analarch_options ( core , node )"	315:2:8519:8555	730228	0	True				
ANR	730260	CallExpression	"update_analarch_options ( core , node )"		730228	0					
ANR	730261	Callee	update_analarch_options		730228	0					
ANR	730262	Identifier	update_analarch_options		730228	0					
ANR	730263	ArgumentList	core		730228	1					
ANR	730264	Argument	core		730228	0					
ANR	730265	Identifier	core		730228	0					
ANR	730266	Argument	node		730228	1					
ANR	730267	Identifier	node		730228	0					
ANR	730268	ExpressionStatement	print_node_options ( node )	316:2:8559:8584	730228	1	True				
ANR	730269	CallExpression	print_node_options ( node )		730228	0					
ANR	730270	Callee	print_node_options		730228	0					
ANR	730271	Identifier	print_node_options		730228	0					
ANR	730272	ArgumentList	node		730228	1					
ANR	730273	Argument	node		730228	0					
ANR	730274	Identifier	node		730228	0					
ANR	730275	ReturnStatement	return false ;	317:2:8588:8600	730228	2	True				
ANR	730276	Identifier	false		730228	0					
ANR	730277	IfStatement	if ( * node -> value )		730228	3					
ANR	730278	Condition	* node -> value	319:5:8610:8621	730228	0	True				
ANR	730279	UnaryOperationExpression	* node -> value		730228	0					
ANR	730280	UnaryOperator	*		730228	0					
ANR	730281	PtrMemberAccess	node -> value		730228	1					
ANR	730282	Identifier	node		730228	0					
ANR	730283	Identifier	value		730228	1					
ANR	730284	CompoundStatement		13:2:278:334	730228	1					
ANR	730285	IfStatement	"if ( r_anal_use ( core -> anal , node -> value ) )"		730228	0					
ANR	730286	Condition	"r_anal_use ( core -> anal , node -> value )"	320:6:8632:8667	730228	0	True				
ANR	730287	CallExpression	"r_anal_use ( core -> anal , node -> value )"		730228	0					
ANR	730288	Callee	r_anal_use		730228	0					
ANR	730289	Identifier	r_anal_use		730228	0					
ANR	730290	ArgumentList	core -> anal		730228	1					
ANR	730291	Argument	core -> anal		730228	0					
ANR	730292	PtrMemberAccess	core -> anal		730228	0					
ANR	730293	Identifier	core		730228	0					
ANR	730294	Identifier	anal		730228	1					
ANR	730295	Argument	node -> value		730228	1					
ANR	730296	PtrMemberAccess	node -> value		730228	0					
ANR	730297	Identifier	node		730228	0					
ANR	730298	Identifier	value		730228	1					
ANR	730299	CompoundStatement		10:44:254:254	730228	1					
ANR	730300	ReturnStatement	return true ;	321:3:8675:8686	730228	0	True				
ANR	730301	Identifier	true		730228	0					
ANR	730302	IdentifierDeclStatement	"const char * aa = r_config_get ( core -> config , ""asm.arch"" ) ;"	323:2:8694:8750	730228	1	True				
ANR	730303	IdentifierDecl	"* aa = r_config_get ( core -> config , ""asm.arch"" )"		730228	0					
ANR	730304	IdentifierDeclType	const char *		730228	0					
ANR	730305	Identifier	aa		730228	1					
ANR	730306	AssignmentExpression	"* aa = r_config_get ( core -> config , ""asm.arch"" )"		730228	2		=			
ANR	730307	Identifier	aa		730228	0					
ANR	730308	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		730228	1					
ANR	730309	Callee	r_config_get		730228	0					
ANR	730310	Identifier	r_config_get		730228	0					
ANR	730311	ArgumentList	core -> config		730228	1					
ANR	730312	Argument	core -> config		730228	0					
ANR	730313	PtrMemberAccess	core -> config		730228	0					
ANR	730314	Identifier	core		730228	0					
ANR	730315	Identifier	config		730228	1					
ANR	730316	Argument	"""asm.arch"""		730228	1					
ANR	730317	PrimaryExpression	"""asm.arch"""		730228	0					
ANR	730318	IfStatement	"if ( ! aa || strcmp ( aa , node -> value ) )"		730228	2					
ANR	730319	Condition	"! aa || strcmp ( aa , node -> value )"	324:6:8758:8788	730228	0	True				
ANR	730320	OrExpression	"! aa || strcmp ( aa , node -> value )"		730228	0		||			
ANR	730321	UnaryOperationExpression	! aa		730228	0					
ANR	730322	UnaryOperator	!		730228	0					
ANR	730323	Identifier	aa		730228	1					
ANR	730324	CallExpression	"strcmp ( aa , node -> value )"		730228	1					
ANR	730325	Callee	strcmp		730228	0					
ANR	730326	Identifier	strcmp		730228	0					
ANR	730327	ArgumentList	aa		730228	1					
ANR	730328	Argument	aa		730228	0					
ANR	730329	Identifier	aa		730228	0					
ANR	730330	Argument	node -> value		730228	1					
ANR	730331	PtrMemberAccess	node -> value		730228	0					
ANR	730332	Identifier	node		730228	0					
ANR	730333	Identifier	value		730228	1					
ANR	730334	CompoundStatement		14:39:375:375	730228	1					
ANR	730335	ExpressionStatement	"eprintf ( ""anal.arch: cannot find '%s'\\n"" , node -> value )"	325:3:8796:8850	730228	0	True				
ANR	730336	CallExpression	"eprintf ( ""anal.arch: cannot find '%s'\\n"" , node -> value )"		730228	0					
ANR	730337	Callee	eprintf		730228	0					
ANR	730338	Identifier	eprintf		730228	0					
ANR	730339	ArgumentList	"""anal.arch: cannot find '%s'\\n"""		730228	1					
ANR	730340	Argument	"""anal.arch: cannot find '%s'\\n"""		730228	0					
ANR	730341	PrimaryExpression	"""anal.arch: cannot find '%s'\\n"""		730228	0					
ANR	730342	Argument	node -> value		730228	1					
ANR	730343	PtrMemberAccess	node -> value		730228	0					
ANR	730344	Identifier	node		730228	0					
ANR	730345	Identifier	value		730228	1					
ANR	730346	ElseStatement	else		730228	0					
ANR	730347	CompoundStatement		16:9:445:445	730228	0					
ANR	730348	ExpressionStatement	"r_config_set ( core -> config , ""anal.arch"" , ""null"" )"	327:3:8866:8914	730228	0	True				
ANR	730349	CallExpression	"r_config_set ( core -> config , ""anal.arch"" , ""null"" )"		730228	0					
ANR	730350	Callee	r_config_set		730228	0					
ANR	730351	Identifier	r_config_set		730228	0					
ANR	730352	ArgumentList	core -> config		730228	1					
ANR	730353	Argument	core -> config		730228	0					
ANR	730354	PtrMemberAccess	core -> config		730228	0					
ANR	730355	Identifier	core		730228	0					
ANR	730356	Identifier	config		730228	1					
ANR	730357	Argument	"""anal.arch"""		730228	1					
ANR	730358	PrimaryExpression	"""anal.arch"""		730228	0					
ANR	730359	Argument	"""null"""		730228	2					
ANR	730360	PrimaryExpression	"""null"""		730228	0					
ANR	730361	ReturnStatement	return true ;	328:3:8919:8930	730228	1	True				
ANR	730362	Identifier	true		730228	0					
ANR	730363	ReturnStatement	return false ;	331:1:8940:8952	730228	4	True				
ANR	730364	Identifier	false		730228	0					
ANR	730365	ReturnType	static bool		730228	1					
ANR	730366	Identifier	cb_analarch		730228	2					
ANR	730367	ParameterList	"void * user , void * data"		730228	3					
ANR	730368	Parameter	void * user	311:24:8391:8400	730228	0	True				
ANR	730369	ParameterType	void *		730228	0					
ANR	730370	Identifier	user		730228	1					
ANR	730371	Parameter	void * data	311:36:8403:8412	730228	1	True				
ANR	730372	ParameterType	void *		730228	0					
ANR	730373	Identifier	data		730228	1					
ANR	730374	CFGEntryNode	ENTRY		730228		True				
ANR	730375	CFGExitNode	EXIT		730228		True				
ANR	730376	Symbol	core -> config		730228						
ANR	730377	Symbol	aa		730228						
ANR	730378	Symbol	strcmp		730228						
ANR	730379	Symbol	* node -> value		730228						
ANR	730380	Symbol	data		730228						
ANR	730381	Symbol	false		730228						
ANR	730382	Symbol	* core		730228						
ANR	730383	Symbol	r_config_get		730228						
ANR	730384	Symbol	core -> anal		730228						
ANR	730385	Symbol	node -> value		730228						
ANR	730386	Symbol	r_anal_use		730228						
ANR	730387	Symbol	core		730228						
ANR	730388	Symbol	node		730228						
ANR	730389	Symbol	* * node		730228						
ANR	730390	Symbol	true		730228						
ANR	730391	Symbol	* node		730228						
ANR	730392	Symbol	user		730228						
ANR	730393	Function	cb_analcpu	334:0:8957:9290							
ANR	730394	FunctionDef	"cb_analcpu (void * user , void * data)"		730393	0					
ANR	730395	CompoundStatement		334:47:9004:9290	730393	0					
ANR	730396	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	335:1:9007:9035	730393	0	True				
ANR	730397	IdentifierDecl	* core = ( RCore * ) user		730393	0					
ANR	730398	IdentifierDeclType	RCore *		730393	0					
ANR	730399	Identifier	core		730393	1					
ANR	730400	AssignmentExpression	* core = ( RCore * ) user		730393	2		=			
ANR	730401	Identifier	core		730393	0					
ANR	730402	CastExpression	( RCore * ) user		730393	1					
ANR	730403	CastTarget	RCore *		730393	0					
ANR	730404	Identifier	user		730393	1					
ANR	730405	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	336:1:9038:9078	730393	1	True				
ANR	730406	IdentifierDecl	* node = ( RConfigNode * ) data		730393	0					
ANR	730407	IdentifierDeclType	RConfigNode *		730393	0					
ANR	730408	Identifier	node		730393	1					
ANR	730409	AssignmentExpression	* node = ( RConfigNode * ) data		730393	2		=			
ANR	730410	Identifier	node		730393	0					
ANR	730411	CastExpression	( RConfigNode * ) data		730393	1					
ANR	730412	CastTarget	RConfigNode *		730393	0					
ANR	730413	Identifier	data		730393	1					
ANR	730414	ExpressionStatement	"r_anal_set_cpu ( core -> anal , node -> value )"	337:1:9081:9121	730393	2	True				
ANR	730415	CallExpression	"r_anal_set_cpu ( core -> anal , node -> value )"		730393	0					
ANR	730416	Callee	r_anal_set_cpu		730393	0					
ANR	730417	Identifier	r_anal_set_cpu		730393	0					
ANR	730418	ArgumentList	core -> anal		730393	1					
ANR	730419	Argument	core -> anal		730393	0					
ANR	730420	PtrMemberAccess	core -> anal		730393	0					
ANR	730421	Identifier	core		730393	0					
ANR	730422	Identifier	anal		730393	1					
ANR	730423	Argument	node -> value		730393	1					
ANR	730424	PtrMemberAccess	node -> value		730393	0					
ANR	730425	Identifier	node		730393	0					
ANR	730426	Identifier	value		730393	1					
ANR	730427	CompoundStatement		7:2:142:201	730393	3					
ANR	730428	IdentifierDeclStatement	"int v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN ) ;"	340:2:9147:9206	730393	0	True				
ANR	730429	IdentifierDecl	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		730393	0					
ANR	730430	IdentifierDeclType	int		730393	0					
ANR	730431	Identifier	v		730393	1					
ANR	730432	AssignmentExpression	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		730393	2		=			
ANR	730433	Identifier	v		730393	0					
ANR	730434	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		730393	1					
ANR	730435	Callee	r_anal_archinfo		730393	0					
ANR	730436	Identifier	r_anal_archinfo		730393	0					
ANR	730437	ArgumentList	core -> anal		730393	1					
ANR	730438	Argument	core -> anal		730393	0					
ANR	730439	PtrMemberAccess	core -> anal		730393	0					
ANR	730440	Identifier	core		730393	0					
ANR	730441	Identifier	anal		730393	1					
ANR	730442	Argument	R_ANAL_ARCHINFO_ALIGN		730393	1					
ANR	730443	Identifier	R_ANAL_ARCHINFO_ALIGN		730393	0					
ANR	730444	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.pcalign"" , ( v != - 1 ) ? v : 0 )"	341:2:9210:9271	730393	1	True				
ANR	730445	CallExpression	"r_config_set_i ( core -> config , ""asm.pcalign"" , ( v != - 1 ) ? v : 0 )"		730393	0					
ANR	730446	Callee	r_config_set_i		730393	0					
ANR	730447	Identifier	r_config_set_i		730393	0					
ANR	730448	ArgumentList	core -> config		730393	1					
ANR	730449	Argument	core -> config		730393	0					
ANR	730450	PtrMemberAccess	core -> config		730393	0					
ANR	730451	Identifier	core		730393	0					
ANR	730452	Identifier	config		730393	1					
ANR	730453	Argument	"""asm.pcalign"""		730393	1					
ANR	730454	PrimaryExpression	"""asm.pcalign"""		730393	0					
ANR	730455	Argument	( v != - 1 ) ? v : 0		730393	2					
ANR	730456	ConditionalExpression	( v != - 1 ) ? v : 0		730393	0					
ANR	730457	Condition	v != - 1		730393	0					
ANR	730458	EqualityExpression	v != - 1		730393	0		!=			
ANR	730459	Identifier	v		730393	0					
ANR	730460	UnaryOperationExpression	- 1		730393	1					
ANR	730461	UnaryOperator	-		730393	0					
ANR	730462	PrimaryExpression	1		730393	1					
ANR	730463	Identifier	v		730393	1					
ANR	730464	PrimaryExpression	0		730393	2					
ANR	730465	ReturnStatement	return true ;	343:1:9277:9288	730393	4	True				
ANR	730466	Identifier	true		730393	0					
ANR	730467	ReturnType	static bool		730393	1					
ANR	730468	Identifier	cb_analcpu		730393	2					
ANR	730469	ParameterList	"void * user , void * data"		730393	3					
ANR	730470	Parameter	void * user	334:23:8980:8989	730393	0	True				
ANR	730471	ParameterType	void *		730393	0					
ANR	730472	Identifier	user		730393	1					
ANR	730473	Parameter	void * data	334:35:8992:9001	730393	1	True				
ANR	730474	ParameterType	void *		730393	0					
ANR	730475	Identifier	data		730393	1					
ANR	730476	CFGEntryNode	ENTRY		730393		True				
ANR	730477	CFGExitNode	EXIT		730393		True				
ANR	730478	Symbol	core -> config		730393						
ANR	730479	Symbol	data		730393						
ANR	730480	Symbol	r_anal_archinfo		730393						
ANR	730481	Symbol	* core		730393						
ANR	730482	Symbol	core -> anal		730393						
ANR	730483	Symbol	node -> value		730393						
ANR	730484	Symbol	core		730393						
ANR	730485	Symbol	node		730393						
ANR	730486	Symbol	R_ANAL_ARCHINFO_ALIGN		730393						
ANR	730487	Symbol	v		730393						
ANR	730488	Symbol	true		730393						
ANR	730489	Symbol	* node		730393						
ANR	730490	Symbol	user		730393						
ANR	730491	Function	cb_analrecont	346:0:9293:9472							
ANR	730492	FunctionDef	"cb_analrecont (void * user , void * data)"		730491	0					
ANR	730493	CompoundStatement		346:50:9343:9472	730491	0					
ANR	730494	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	347:1:9346:9373	730491	0	True				
ANR	730495	IdentifierDecl	* core = ( RCore * ) user		730491	0					
ANR	730496	IdentifierDeclType	RCore *		730491	0					
ANR	730497	Identifier	core		730491	1					
ANR	730498	AssignmentExpression	* core = ( RCore * ) user		730491	2		=			
ANR	730499	Identifier	core		730491	0					
ANR	730500	CastExpression	( RCore * ) user		730491	1					
ANR	730501	CastTarget	RCore *		730491	0					
ANR	730502	Identifier	user		730491	1					
ANR	730503	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	348:1:9376:9415	730491	1	True				
ANR	730504	IdentifierDecl	* node = ( RConfigNode * ) data		730491	0					
ANR	730505	IdentifierDeclType	RConfigNode *		730491	0					
ANR	730506	Identifier	node		730491	1					
ANR	730507	AssignmentExpression	* node = ( RConfigNode * ) data		730491	2		=			
ANR	730508	Identifier	node		730491	0					
ANR	730509	CastExpression	( RConfigNode * ) data		730491	1					
ANR	730510	CastTarget	RConfigNode *		730491	0					
ANR	730511	Identifier	data		730491	1					
ANR	730512	ExpressionStatement	core -> anal -> opt . recont = node -> i_value	349:1:9418:9456	730491	2	True				
ANR	730513	AssignmentExpression	core -> anal -> opt . recont = node -> i_value		730491	0		=			
ANR	730514	MemberAccess	core -> anal -> opt . recont		730491	0					
ANR	730515	PtrMemberAccess	core -> anal -> opt		730491	0					
ANR	730516	PtrMemberAccess	core -> anal		730491	0					
ANR	730517	Identifier	core		730491	0					
ANR	730518	Identifier	anal		730491	1					
ANR	730519	Identifier	opt		730491	1					
ANR	730520	Identifier	recont		730491	1					
ANR	730521	PtrMemberAccess	node -> i_value		730491	1					
ANR	730522	Identifier	node		730491	0					
ANR	730523	Identifier	i_value		730491	1					
ANR	730524	ReturnStatement	return true ;	350:1:9459:9470	730491	3	True				
ANR	730525	Identifier	true		730491	0					
ANR	730526	ReturnType	static bool		730491	1					
ANR	730527	Identifier	cb_analrecont		730491	2					
ANR	730528	ParameterList	"void * user , void * data"		730491	3					
ANR	730529	Parameter	void * user	346:26:9319:9328	730491	0	True				
ANR	730530	ParameterType	void *		730491	0					
ANR	730531	Identifier	user		730491	1					
ANR	730532	Parameter	void * data	346:38:9331:9340	730491	1	True				
ANR	730533	ParameterType	void *		730491	0					
ANR	730534	Identifier	data		730491	1					
ANR	730535	CFGEntryNode	ENTRY		730491		True				
ANR	730536	CFGExitNode	EXIT		730491		True				
ANR	730537	Symbol	core -> anal -> opt		730491						
ANR	730538	Symbol	data		730491						
ANR	730539	Symbol	* core		730491						
ANR	730540	Symbol	core -> anal		730491						
ANR	730541	Symbol	node -> i_value		730491						
ANR	730542	Symbol	core		730491						
ANR	730543	Symbol	node		730491						
ANR	730544	Symbol	core -> anal -> opt . recont		730491						
ANR	730545	Symbol	* core -> anal		730491						
ANR	730546	Symbol	true		730491						
ANR	730547	Symbol	* node		730491						
ANR	730548	Symbol	user		730491						
ANR	730549	Symbol	* * core		730491						
ANR	730550	Function	cb_analijmp	353:0:9475:9650							
ANR	730551	FunctionDef	"cb_analijmp (void * user , void * data)"		730550	0					
ANR	730552	CompoundStatement		353:48:9523:9650	730550	0					
ANR	730553	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	354:1:9526:9553	730550	0	True				
ANR	730554	IdentifierDecl	* core = ( RCore * ) user		730550	0					
ANR	730555	IdentifierDeclType	RCore *		730550	0					
ANR	730556	Identifier	core		730550	1					
ANR	730557	AssignmentExpression	* core = ( RCore * ) user		730550	2		=			
ANR	730558	Identifier	core		730550	0					
ANR	730559	CastExpression	( RCore * ) user		730550	1					
ANR	730560	CastTarget	RCore *		730550	0					
ANR	730561	Identifier	user		730550	1					
ANR	730562	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	355:1:9556:9595	730550	1	True				
ANR	730563	IdentifierDecl	* node = ( RConfigNode * ) data		730550	0					
ANR	730564	IdentifierDeclType	RConfigNode *		730550	0					
ANR	730565	Identifier	node		730550	1					
ANR	730566	AssignmentExpression	* node = ( RConfigNode * ) data		730550	2		=			
ANR	730567	Identifier	node		730550	0					
ANR	730568	CastExpression	( RConfigNode * ) data		730550	1					
ANR	730569	CastTarget	RConfigNode *		730550	0					
ANR	730570	Identifier	data		730550	1					
ANR	730571	ExpressionStatement	core -> anal -> opt . ijmp = node -> i_value	356:1:9598:9634	730550	2	True				
ANR	730572	AssignmentExpression	core -> anal -> opt . ijmp = node -> i_value		730550	0		=			
ANR	730573	MemberAccess	core -> anal -> opt . ijmp		730550	0					
ANR	730574	PtrMemberAccess	core -> anal -> opt		730550	0					
ANR	730575	PtrMemberAccess	core -> anal		730550	0					
ANR	730576	Identifier	core		730550	0					
ANR	730577	Identifier	anal		730550	1					
ANR	730578	Identifier	opt		730550	1					
ANR	730579	Identifier	ijmp		730550	1					
ANR	730580	PtrMemberAccess	node -> i_value		730550	1					
ANR	730581	Identifier	node		730550	0					
ANR	730582	Identifier	i_value		730550	1					
ANR	730583	ReturnStatement	return true ;	357:1:9637:9648	730550	3	True				
ANR	730584	Identifier	true		730550	0					
ANR	730585	ReturnType	static bool		730550	1					
ANR	730586	Identifier	cb_analijmp		730550	2					
ANR	730587	ParameterList	"void * user , void * data"		730550	3					
ANR	730588	Parameter	void * user	353:24:9499:9508	730550	0	True				
ANR	730589	ParameterType	void *		730550	0					
ANR	730590	Identifier	user		730550	1					
ANR	730591	Parameter	void * data	353:36:9511:9520	730550	1	True				
ANR	730592	ParameterType	void *		730550	0					
ANR	730593	Identifier	data		730550	1					
ANR	730594	CFGEntryNode	ENTRY		730550		True				
ANR	730595	CFGExitNode	EXIT		730550		True				
ANR	730596	Symbol	core -> anal -> opt		730550						
ANR	730597	Symbol	core -> anal -> opt . ijmp		730550						
ANR	730598	Symbol	data		730550						
ANR	730599	Symbol	* core		730550						
ANR	730600	Symbol	core -> anal		730550						
ANR	730601	Symbol	node -> i_value		730550						
ANR	730602	Symbol	core		730550						
ANR	730603	Symbol	node		730550						
ANR	730604	Symbol	* core -> anal		730550						
ANR	730605	Symbol	true		730550						
ANR	730606	Symbol	* node		730550						
ANR	730607	Symbol	user		730550						
ANR	730608	Symbol	* * core		730550						
ANR	730609	Function	cb_asmvarsubmin	360:0:9653:9834							
ANR	730610	FunctionDef	"cb_asmvarsubmin (void * user , void * data)"		730609	0					
ANR	730611	CompoundStatement		360:52:9705:9834	730609	0					
ANR	730612	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	361:1:9708:9736	730609	0	True				
ANR	730613	IdentifierDecl	* core = ( RCore * ) user		730609	0					
ANR	730614	IdentifierDeclType	RCore *		730609	0					
ANR	730615	Identifier	core		730609	1					
ANR	730616	AssignmentExpression	* core = ( RCore * ) user		730609	2		=			
ANR	730617	Identifier	core		730609	0					
ANR	730618	CastExpression	( RCore * ) user		730609	1					
ANR	730619	CastTarget	RCore *		730609	0					
ANR	730620	Identifier	user		730609	1					
ANR	730621	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	362:1:9739:9779	730609	1	True				
ANR	730622	IdentifierDecl	* node = ( RConfigNode * ) data		730609	0					
ANR	730623	IdentifierDeclType	RConfigNode *		730609	0					
ANR	730624	Identifier	node		730609	1					
ANR	730625	AssignmentExpression	* node = ( RConfigNode * ) data		730609	2		=			
ANR	730626	Identifier	node		730609	0					
ANR	730627	CastExpression	( RConfigNode * ) data		730609	1					
ANR	730628	CastTarget	RConfigNode *		730609	0					
ANR	730629	Identifier	data		730609	1					
ANR	730630	ExpressionStatement	core -> parser -> minval = node -> i_value	363:1:9782:9818	730609	2	True				
ANR	730631	AssignmentExpression	core -> parser -> minval = node -> i_value		730609	0		=			
ANR	730632	PtrMemberAccess	core -> parser -> minval		730609	0					
ANR	730633	PtrMemberAccess	core -> parser		730609	0					
ANR	730634	Identifier	core		730609	0					
ANR	730635	Identifier	parser		730609	1					
ANR	730636	Identifier	minval		730609	1					
ANR	730637	PtrMemberAccess	node -> i_value		730609	1					
ANR	730638	Identifier	node		730609	0					
ANR	730639	Identifier	i_value		730609	1					
ANR	730640	ReturnStatement	return true ;	364:1:9821:9832	730609	3	True				
ANR	730641	Identifier	true		730609	0					
ANR	730642	ReturnType	static bool		730609	1					
ANR	730643	Identifier	cb_asmvarsubmin		730609	2					
ANR	730644	ParameterList	"void * user , void * data"		730609	3					
ANR	730645	Parameter	void * user	360:28:9681:9690	730609	0	True				
ANR	730646	ParameterType	void *		730609	0					
ANR	730647	Identifier	user		730609	1					
ANR	730648	Parameter	void * data	360:40:9693:9702	730609	1	True				
ANR	730649	ParameterType	void *		730609	0					
ANR	730650	Identifier	data		730609	1					
ANR	730651	CFGEntryNode	ENTRY		730609		True				
ANR	730652	CFGExitNode	EXIT		730609		True				
ANR	730653	Symbol	core		730609						
ANR	730654	Symbol	node		730609						
ANR	730655	Symbol	core -> parser		730609						
ANR	730656	Symbol	data		730609						
ANR	730657	Symbol	* core -> parser		730609						
ANR	730658	Symbol	* core		730609						
ANR	730659	Symbol	core -> parser -> minval		730609						
ANR	730660	Symbol	true		730609						
ANR	730661	Symbol	* node		730609						
ANR	730662	Symbol	user		730609						
ANR	730663	Symbol	* * core		730609						
ANR	730664	Symbol	node -> i_value		730609						
ANR	730665	Function	cb_asmtailsub	367:0:9837:10017							
ANR	730666	FunctionDef	"cb_asmtailsub (void * user , void * data)"		730665	0					
ANR	730667	CompoundStatement		367:50:9887:10017	730665	0					
ANR	730668	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	368:1:9890:9918	730665	0	True				
ANR	730669	IdentifierDecl	* core = ( RCore * ) user		730665	0					
ANR	730670	IdentifierDeclType	RCore *		730665	0					
ANR	730671	Identifier	core		730665	1					
ANR	730672	AssignmentExpression	* core = ( RCore * ) user		730665	2		=			
ANR	730673	Identifier	core		730665	0					
ANR	730674	CastExpression	( RCore * ) user		730665	1					
ANR	730675	CastTarget	RCore *		730665	0					
ANR	730676	Identifier	user		730665	1					
ANR	730677	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	369:1:9921:9961	730665	1	True				
ANR	730678	IdentifierDecl	* node = ( RConfigNode * ) data		730665	0					
ANR	730679	IdentifierDeclType	RConfigNode *		730665	0					
ANR	730680	Identifier	node		730665	1					
ANR	730681	AssignmentExpression	* node = ( RConfigNode * ) data		730665	2		=			
ANR	730682	Identifier	node		730665	0					
ANR	730683	CastExpression	( RConfigNode * ) data		730665	1					
ANR	730684	CastTarget	RConfigNode *		730665	0					
ANR	730685	Identifier	data		730665	1					
ANR	730686	ExpressionStatement	core -> parser -> tailsub = node -> i_value	370:1:9964:10001	730665	2	True				
ANR	730687	AssignmentExpression	core -> parser -> tailsub = node -> i_value		730665	0		=			
ANR	730688	PtrMemberAccess	core -> parser -> tailsub		730665	0					
ANR	730689	PtrMemberAccess	core -> parser		730665	0					
ANR	730690	Identifier	core		730665	0					
ANR	730691	Identifier	parser		730665	1					
ANR	730692	Identifier	tailsub		730665	1					
ANR	730693	PtrMemberAccess	node -> i_value		730665	1					
ANR	730694	Identifier	node		730665	0					
ANR	730695	Identifier	i_value		730665	1					
ANR	730696	ReturnStatement	return true ;	371:1:10004:10015	730665	3	True				
ANR	730697	Identifier	true		730665	0					
ANR	730698	ReturnType	static bool		730665	1					
ANR	730699	Identifier	cb_asmtailsub		730665	2					
ANR	730700	ParameterList	"void * user , void * data"		730665	3					
ANR	730701	Parameter	void * user	367:26:9863:9872	730665	0	True				
ANR	730702	ParameterType	void *		730665	0					
ANR	730703	Identifier	user		730665	1					
ANR	730704	Parameter	void * data	367:38:9875:9884	730665	1	True				
ANR	730705	ParameterType	void *		730665	0					
ANR	730706	Identifier	data		730665	1					
ANR	730707	CFGEntryNode	ENTRY		730665		True				
ANR	730708	CFGExitNode	EXIT		730665		True				
ANR	730709	Symbol	core		730665						
ANR	730710	Symbol	node		730665						
ANR	730711	Symbol	core -> parser		730665						
ANR	730712	Symbol	data		730665						
ANR	730713	Symbol	* core -> parser		730665						
ANR	730714	Symbol	* core		730665						
ANR	730715	Symbol	true		730665						
ANR	730716	Symbol	* node		730665						
ANR	730717	Symbol	user		730665						
ANR	730718	Symbol	core -> parser -> tailsub		730665						
ANR	730719	Symbol	* * core		730665						
ANR	730720	Symbol	node -> i_value		730665						
ANR	730721	Function	cb_scrlast	374:0:10020:10186							
ANR	730722	FunctionDef	"cb_scrlast (void * user , void * data)"		730721	0					
ANR	730723	CompoundStatement		374:47:10067:10186	730721	0					
ANR	730724	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	375:1:10070:10110	730721	0	True				
ANR	730725	IdentifierDecl	* node = ( RConfigNode * ) data		730721	0					
ANR	730726	IdentifierDeclType	RConfigNode *		730721	0					
ANR	730727	Identifier	node		730721	1					
ANR	730728	AssignmentExpression	* node = ( RConfigNode * ) data		730721	2		=			
ANR	730729	Identifier	node		730721	0					
ANR	730730	CastExpression	( RConfigNode * ) data		730721	1					
ANR	730731	CastTarget	RConfigNode *		730721	0					
ANR	730732	Identifier	data		730721	1					
ANR	730733	ExpressionStatement	r_cons_singleton ( ) -> context -> lastEnabled = node -> i_value	376:1:10113:10170	730721	1	True				
ANR	730734	AssignmentExpression	r_cons_singleton ( ) -> context -> lastEnabled = node -> i_value		730721	0		=			
ANR	730735	PtrMemberAccess	r_cons_singleton ( ) -> context -> lastEnabled		730721	0					
ANR	730736	PtrMemberAccess	r_cons_singleton ( ) -> context		730721	0					
ANR	730737	CallExpression	r_cons_singleton ( )		730721	0					
ANR	730738	Callee	r_cons_singleton		730721	0					
ANR	730739	Identifier	r_cons_singleton		730721	0					
ANR	730740	ArgumentList			730721	1					
ANR	730741	Identifier	context		730721	1					
ANR	730742	Identifier	lastEnabled		730721	1					
ANR	730743	PtrMemberAccess	node -> i_value		730721	1					
ANR	730744	Identifier	node		730721	0					
ANR	730745	Identifier	i_value		730721	1					
ANR	730746	ReturnStatement	return true ;	377:1:10173:10184	730721	2	True				
ANR	730747	Identifier	true		730721	0					
ANR	730748	ReturnType	static bool		730721	1					
ANR	730749	Identifier	cb_scrlast		730721	2					
ANR	730750	ParameterList	"void * user , void * data"		730721	3					
ANR	730751	Parameter	void * user	374:23:10043:10052	730721	0	True				
ANR	730752	ParameterType	void *		730721	0					
ANR	730753	Identifier	user		730721	1					
ANR	730754	Parameter	void * data	374:35:10055:10064	730721	1	True				
ANR	730755	ParameterType	void *		730721	0					
ANR	730756	Identifier	data		730721	1					
ANR	730757	CFGEntryNode	ENTRY		730721		True				
ANR	730758	CFGExitNode	EXIT		730721		True				
ANR	730759	Symbol	r_cons_singleton ( ) -> context -> lastEnabled		730721						
ANR	730760	Symbol	node		730721						
ANR	730761	Symbol	data		730721						
ANR	730762	Symbol	true		730721						
ANR	730763	Symbol	r_cons_singleton		730721						
ANR	730764	Symbol	* r_cons_singleton ( ) -> context		730721						
ANR	730765	Symbol	* node		730721						
ANR	730766	Symbol	user		730721						
ANR	730767	Symbol	r_cons_singleton ( ) -> context		730721						
ANR	730768	Symbol	* r_cons_singleton		730721						
ANR	730769	Symbol	* * r_cons_singleton		730721						
ANR	730770	Symbol	node -> i_value		730721						
ANR	730771	Function	cb_scr_vi	380:0:10189:10369							
ANR	730772	FunctionDef	"cb_scr_vi (void * user , void * data)"		730771	0					
ANR	730773	CompoundStatement		380:46:10235:10369	730771	0					
ANR	730774	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	381:1:10238:10266	730771	0	True				
ANR	730775	IdentifierDecl	* core = ( RCore * ) user		730771	0					
ANR	730776	IdentifierDeclType	RCore *		730771	0					
ANR	730777	Identifier	core		730771	1					
ANR	730778	AssignmentExpression	* core = ( RCore * ) user		730771	2		=			
ANR	730779	Identifier	core		730771	0					
ANR	730780	CastExpression	( RCore * ) user		730771	1					
ANR	730781	CastTarget	RCore *		730771	0					
ANR	730782	Identifier	user		730771	1					
ANR	730783	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	382:1:10269:10309	730771	1	True				
ANR	730784	IdentifierDecl	* node = ( RConfigNode * ) data		730771	0					
ANR	730785	IdentifierDeclType	RConfigNode *		730771	0					
ANR	730786	Identifier	node		730771	1					
ANR	730787	AssignmentExpression	* node = ( RConfigNode * ) data		730771	2		=			
ANR	730788	Identifier	node		730771	0					
ANR	730789	CastExpression	( RConfigNode * ) data		730771	1					
ANR	730790	CastTarget	RConfigNode *		730771	0					
ANR	730791	Identifier	data		730771	1					
ANR	730792	ExpressionStatement	core -> cons -> line -> vi_mode = node -> i_value	383:1:10312:10353	730771	2	True				
ANR	730793	AssignmentExpression	core -> cons -> line -> vi_mode = node -> i_value		730771	0		=			
ANR	730794	PtrMemberAccess	core -> cons -> line -> vi_mode		730771	0					
ANR	730795	PtrMemberAccess	core -> cons -> line		730771	0					
ANR	730796	PtrMemberAccess	core -> cons		730771	0					
ANR	730797	Identifier	core		730771	0					
ANR	730798	Identifier	cons		730771	1					
ANR	730799	Identifier	line		730771	1					
ANR	730800	Identifier	vi_mode		730771	1					
ANR	730801	PtrMemberAccess	node -> i_value		730771	1					
ANR	730802	Identifier	node		730771	0					
ANR	730803	Identifier	i_value		730771	1					
ANR	730804	ReturnStatement	return true ;	384:1:10356:10367	730771	3	True				
ANR	730805	Identifier	true		730771	0					
ANR	730806	ReturnType	static bool		730771	1					
ANR	730807	Identifier	cb_scr_vi		730771	2					
ANR	730808	ParameterList	"void * user , void * data"		730771	3					
ANR	730809	Parameter	void * user	380:22:10211:10220	730771	0	True				
ANR	730810	ParameterType	void *		730771	0					
ANR	730811	Identifier	user		730771	1					
ANR	730812	Parameter	void * data	380:34:10223:10232	730771	1	True				
ANR	730813	ParameterType	void *		730771	0					
ANR	730814	Identifier	data		730771	1					
ANR	730815	CFGEntryNode	ENTRY		730771		True				
ANR	730816	CFGExitNode	EXIT		730771		True				
ANR	730817	Symbol	data		730771						
ANR	730818	Symbol	* core -> cons		730771						
ANR	730819	Symbol	* * core -> cons		730771						
ANR	730820	Symbol	* core		730771						
ANR	730821	Symbol	node -> i_value		730771						
ANR	730822	Symbol	core -> cons -> line -> vi_mode		730771						
ANR	730823	Symbol	core		730771						
ANR	730824	Symbol	node		730771						
ANR	730825	Symbol	* * * core		730771						
ANR	730826	Symbol	core -> cons		730771						
ANR	730827	Symbol	* core -> cons -> line		730771						
ANR	730828	Symbol	true		730771						
ANR	730829	Symbol	* node		730771						
ANR	730830	Symbol	user		730771						
ANR	730831	Symbol	core -> cons -> line		730771						
ANR	730832	Symbol	* * core		730771						
ANR	730833	Function	cb_scr_wideoff	387:0:10372:10557							
ANR	730834	FunctionDef	"cb_scr_wideoff (void * user , void * data)"		730833	0					
ANR	730835	CompoundStatement		387:51:10423:10557	730833	0					
ANR	730836	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	388:1:10426:10454	730833	0	True				
ANR	730837	IdentifierDecl	* core = ( RCore * ) user		730833	0					
ANR	730838	IdentifierDeclType	RCore *		730833	0					
ANR	730839	Identifier	core		730833	1					
ANR	730840	AssignmentExpression	* core = ( RCore * ) user		730833	2		=			
ANR	730841	Identifier	core		730833	0					
ANR	730842	CastExpression	( RCore * ) user		730833	1					
ANR	730843	CastTarget	RCore *		730833	0					
ANR	730844	Identifier	user		730833	1					
ANR	730845	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	389:1:10457:10497	730833	1	True				
ANR	730846	IdentifierDecl	* node = ( RConfigNode * ) data		730833	0					
ANR	730847	IdentifierDeclType	RConfigNode *		730833	0					
ANR	730848	Identifier	node		730833	1					
ANR	730849	AssignmentExpression	* node = ( RConfigNode * ) data		730833	2		=			
ANR	730850	Identifier	node		730833	0					
ANR	730851	CastExpression	( RConfigNode * ) data		730833	1					
ANR	730852	CastTarget	RConfigNode *		730833	0					
ANR	730853	Identifier	data		730833	1					
ANR	730854	ExpressionStatement	core -> print -> wide_offsets = node -> i_value	390:1:10500:10541	730833	2	True				
ANR	730855	AssignmentExpression	core -> print -> wide_offsets = node -> i_value		730833	0		=			
ANR	730856	PtrMemberAccess	core -> print -> wide_offsets		730833	0					
ANR	730857	PtrMemberAccess	core -> print		730833	0					
ANR	730858	Identifier	core		730833	0					
ANR	730859	Identifier	print		730833	1					
ANR	730860	Identifier	wide_offsets		730833	1					
ANR	730861	PtrMemberAccess	node -> i_value		730833	1					
ANR	730862	Identifier	node		730833	0					
ANR	730863	Identifier	i_value		730833	1					
ANR	730864	ReturnStatement	return true ;	391:1:10544:10555	730833	3	True				
ANR	730865	Identifier	true		730833	0					
ANR	730866	ReturnType	static bool		730833	1					
ANR	730867	Identifier	cb_scr_wideoff		730833	2					
ANR	730868	ParameterList	"void * user , void * data"		730833	3					
ANR	730869	Parameter	void * user	387:27:10399:10408	730833	0	True				
ANR	730870	ParameterType	void *		730833	0					
ANR	730871	Identifier	user		730833	1					
ANR	730872	Parameter	void * data	387:39:10411:10420	730833	1	True				
ANR	730873	ParameterType	void *		730833	0					
ANR	730874	Identifier	data		730833	1					
ANR	730875	CFGEntryNode	ENTRY		730833		True				
ANR	730876	CFGExitNode	EXIT		730833		True				
ANR	730877	Symbol	core		730833						
ANR	730878	Symbol	node		730833						
ANR	730879	Symbol	* core -> print		730833						
ANR	730880	Symbol	data		730833						
ANR	730881	Symbol	core -> print -> wide_offsets		730833						
ANR	730882	Symbol	* core		730833						
ANR	730883	Symbol	true		730833						
ANR	730884	Symbol	* node		730833						
ANR	730885	Symbol	core -> print		730833						
ANR	730886	Symbol	user		730833						
ANR	730887	Symbol	* * core		730833						
ANR	730888	Symbol	node -> i_value		730833						
ANR	730889	Function	cb_scrrainbow	394:0:10560:10945							
ANR	730890	FunctionDef	"cb_scrrainbow (void * user , void * data)"		730889	0					
ANR	730891	CompoundStatement		394:50:10610:10945	730889	0					
ANR	730892	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	395:1:10613:10641	730889	0	True				
ANR	730893	IdentifierDecl	* core = ( RCore * ) user		730889	0					
ANR	730894	IdentifierDeclType	RCore *		730889	0					
ANR	730895	Identifier	core		730889	1					
ANR	730896	AssignmentExpression	* core = ( RCore * ) user		730889	2		=			
ANR	730897	Identifier	core		730889	0					
ANR	730898	CastExpression	( RCore * ) user		730889	1					
ANR	730899	CastTarget	RCore *		730889	0					
ANR	730900	Identifier	user		730889	1					
ANR	730901	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	396:1:10644:10684	730889	1	True				
ANR	730902	IdentifierDecl	* node = ( RConfigNode * ) data		730889	0					
ANR	730903	IdentifierDeclType	RConfigNode *		730889	0					
ANR	730904	Identifier	node		730889	1					
ANR	730905	AssignmentExpression	* node = ( RConfigNode * ) data		730889	2		=			
ANR	730906	Identifier	node		730889	0					
ANR	730907	CastExpression	( RConfigNode * ) data		730889	1					
ANR	730908	CastTarget	RConfigNode *		730889	0					
ANR	730909	Identifier	data		730889	1					
ANR	730910	IfStatement	if ( node -> i_value )		730889	2					
ANR	730911	Condition	node -> i_value	397:5:10691:10703	730889	0	True				
ANR	730912	PtrMemberAccess	node -> i_value		730889	0					
ANR	730913	Identifier	node		730889	0					
ANR	730914	Identifier	i_value		730889	1					
ANR	730915	CompoundStatement		4:20:95:95	730889	1					
ANR	730916	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_RAINBOW	398:2:10710:10753	730889	0	True				
ANR	730917	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_RAINBOW		730889	0		|=			
ANR	730918	PtrMemberAccess	core -> print -> flags		730889	0					
ANR	730919	PtrMemberAccess	core -> print		730889	0					
ANR	730920	Identifier	core		730889	0					
ANR	730921	Identifier	print		730889	1					
ANR	730922	Identifier	flags		730889	1					
ANR	730923	Identifier	R_PRINT_FLAGS_RAINBOW		730889	1					
ANR	730924	ExpressionStatement	"r_core_cmd0 ( core , ""ecr"" )"	399:2:10757:10782	730889	1	True				
ANR	730925	CallExpression	"r_core_cmd0 ( core , ""ecr"" )"		730889	0					
ANR	730926	Callee	r_core_cmd0		730889	0					
ANR	730927	Identifier	r_core_cmd0		730889	0					
ANR	730928	ArgumentList	core		730889	1					
ANR	730929	Argument	core		730889	0					
ANR	730930	Identifier	core		730889	0					
ANR	730931	Argument	"""ecr"""		730889	1					
ANR	730932	PrimaryExpression	"""ecr"""		730889	0					
ANR	730933	ElseStatement	else		730889	0					
ANR	730934	CompoundStatement		7:8:181:181	730889	0					
ANR	730935	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_RAINBOW )	401:2:10796:10842	730889	0	True				
ANR	730936	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_RAINBOW )		730889	0		&=			
ANR	730937	PtrMemberAccess	core -> print -> flags		730889	0					
ANR	730938	PtrMemberAccess	core -> print		730889	0					
ANR	730939	Identifier	core		730889	0					
ANR	730940	Identifier	print		730889	1					
ANR	730941	Identifier	flags		730889	1					
ANR	730942	Identifier	~R_PRINT_FLAGS_RAINBOW		730889	1					
ANR	730943	ExpressionStatement	"r_core_cmd0 ( core , ""ecoo"" )"	402:2:10846:10872	730889	1	True				
ANR	730944	CallExpression	"r_core_cmd0 ( core , ""ecoo"" )"		730889	0					
ANR	730945	Callee	r_core_cmd0		730889	0					
ANR	730946	Identifier	r_core_cmd0		730889	0					
ANR	730947	ArgumentList	core		730889	1					
ANR	730948	Argument	core		730889	0					
ANR	730949	Identifier	core		730889	0					
ANR	730950	Argument	"""ecoo"""		730889	1					
ANR	730951	PrimaryExpression	"""ecoo"""		730889	0					
ANR	730952	ExpressionStatement	"r_print_set_flags ( core -> print , core -> print -> flags )"	404:1:10878:10929	730889	3	True				
ANR	730953	CallExpression	"r_print_set_flags ( core -> print , core -> print -> flags )"		730889	0					
ANR	730954	Callee	r_print_set_flags		730889	0					
ANR	730955	Identifier	r_print_set_flags		730889	0					
ANR	730956	ArgumentList	core -> print		730889	1					
ANR	730957	Argument	core -> print		730889	0					
ANR	730958	PtrMemberAccess	core -> print		730889	0					
ANR	730959	Identifier	core		730889	0					
ANR	730960	Identifier	print		730889	1					
ANR	730961	Argument	core -> print -> flags		730889	1					
ANR	730962	PtrMemberAccess	core -> print -> flags		730889	0					
ANR	730963	PtrMemberAccess	core -> print		730889	0					
ANR	730964	Identifier	core		730889	0					
ANR	730965	Identifier	print		730889	1					
ANR	730966	Identifier	flags		730889	1					
ANR	730967	ReturnStatement	return true ;	405:1:10932:10943	730889	4	True				
ANR	730968	Identifier	true		730889	0					
ANR	730969	ReturnType	static bool		730889	1					
ANR	730970	Identifier	cb_scrrainbow		730889	2					
ANR	730971	ParameterList	"void * user , void * data"		730889	3					
ANR	730972	Parameter	void * user	394:26:10586:10595	730889	0	True				
ANR	730973	ParameterType	void *		730889	0					
ANR	730974	Identifier	user		730889	1					
ANR	730975	Parameter	void * data	394:38:10598:10607	730889	1	True				
ANR	730976	ParameterType	void *		730889	0					
ANR	730977	Identifier	data		730889	1					
ANR	730978	CFGEntryNode	ENTRY		730889		True				
ANR	730979	CFGExitNode	EXIT		730889		True				
ANR	730980	Symbol	data		730889						
ANR	730981	Symbol	* core		730889						
ANR	730982	Symbol	node -> i_value		730889						
ANR	730983	Symbol	core		730889						
ANR	730984	Symbol	node		730889						
ANR	730985	Symbol	* core -> print		730889						
ANR	730986	Symbol	R_PRINT_FLAGS_RAINBOW		730889						
ANR	730987	Symbol	true		730889						
ANR	730988	Symbol	* node		730889						
ANR	730989	Symbol	~R_PRINT_FLAGS_RAINBOW		730889						
ANR	730990	Symbol	core -> print		730889						
ANR	730991	Symbol	user		730889						
ANR	730992	Symbol	* * core		730889						
ANR	730993	Symbol	core -> print -> flags		730889						
ANR	730994	Function	cb_asmpseudo	408:0:10948:11130							
ANR	730995	FunctionDef	"cb_asmpseudo (void * user , void * data)"		730994	0					
ANR	730996	CompoundStatement		408:50:10998:11130	730994	0					
ANR	730997	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	409:1:11001:11029	730994	0	True				
ANR	730998	IdentifierDecl	* core = ( RCore * ) user		730994	0					
ANR	730999	IdentifierDeclType	RCore *		730994	0					
ANR	731000	Identifier	core		730994	1					
ANR	731001	AssignmentExpression	* core = ( RCore * ) user		730994	2		=			
ANR	731002	Identifier	core		730994	0					
ANR	731003	CastExpression	( RCore * ) user		730994	1					
ANR	731004	CastTarget	RCore *		730994	0					
ANR	731005	Identifier	user		730994	1					
ANR	731006	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	410:1:11032:11072	730994	1	True				
ANR	731007	IdentifierDecl	* node = ( RConfigNode * ) data		730994	0					
ANR	731008	IdentifierDeclType	RConfigNode *		730994	0					
ANR	731009	Identifier	node		730994	1					
ANR	731010	AssignmentExpression	* node = ( RConfigNode * ) data		730994	2		=			
ANR	731011	Identifier	node		730994	0					
ANR	731012	CastExpression	( RConfigNode * ) data		730994	1					
ANR	731013	CastTarget	RConfigNode *		730994	0					
ANR	731014	Identifier	data		730994	1					
ANR	731015	ExpressionStatement	core -> assembler -> pseudo = node -> i_value	411:1:11075:11114	730994	2	True				
ANR	731016	AssignmentExpression	core -> assembler -> pseudo = node -> i_value		730994	0		=			
ANR	731017	PtrMemberAccess	core -> assembler -> pseudo		730994	0					
ANR	731018	PtrMemberAccess	core -> assembler		730994	0					
ANR	731019	Identifier	core		730994	0					
ANR	731020	Identifier	assembler		730994	1					
ANR	731021	Identifier	pseudo		730994	1					
ANR	731022	PtrMemberAccess	node -> i_value		730994	1					
ANR	731023	Identifier	node		730994	0					
ANR	731024	Identifier	i_value		730994	1					
ANR	731025	ReturnStatement	return true ;	412:1:11117:11128	730994	3	True				
ANR	731026	Identifier	true		730994	0					
ANR	731027	ReturnType	static bool		730994	1					
ANR	731028	Identifier	cb_asmpseudo		730994	2					
ANR	731029	ParameterList	"void * user , void * data"		730994	3					
ANR	731030	Parameter	void * user	408:26:10974:10983	730994	0	True				
ANR	731031	ParameterType	void *		730994	0					
ANR	731032	Identifier	user		730994	1					
ANR	731033	Parameter	void * data	408:38:10986:10995	730994	1	True				
ANR	731034	ParameterType	void *		730994	0					
ANR	731035	Identifier	data		730994	1					
ANR	731036	CFGEntryNode	ENTRY		730994		True				
ANR	731037	CFGExitNode	EXIT		730994		True				
ANR	731038	Symbol	* core -> assembler		730994						
ANR	731039	Symbol	core		730994						
ANR	731040	Symbol	node		730994						
ANR	731041	Symbol	data		730994						
ANR	731042	Symbol	* core		730994						
ANR	731043	Symbol	true		730994						
ANR	731044	Symbol	core -> assembler		730994						
ANR	731045	Symbol	* node		730994						
ANR	731046	Symbol	core -> assembler -> pseudo		730994						
ANR	731047	Symbol	user		730994						
ANR	731048	Symbol	* * core		730994						
ANR	731049	Symbol	node -> i_value		730994						
ANR	731050	Function	cb_asmsecsub	415:0:11133:11456							
ANR	731051	FunctionDef	"cb_asmsecsub (void * user , void * data)"		731050	0					
ANR	731052	CompoundStatement		415:49:11182:11456	731050	0					
ANR	731053	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	416:1:11185:11213	731050	0	True				
ANR	731054	IdentifierDecl	* core = ( RCore * ) user		731050	0					
ANR	731055	IdentifierDeclType	RCore *		731050	0					
ANR	731056	Identifier	core		731050	1					
ANR	731057	AssignmentExpression	* core = ( RCore * ) user		731050	2		=			
ANR	731058	Identifier	core		731050	0					
ANR	731059	CastExpression	( RCore * ) user		731050	1					
ANR	731060	CastTarget	RCore *		731050	0					
ANR	731061	Identifier	user		731050	1					
ANR	731062	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	417:1:11216:11256	731050	1	True				
ANR	731063	IdentifierDecl	* node = ( RConfigNode * ) data		731050	0					
ANR	731064	IdentifierDeclType	RConfigNode *		731050	0					
ANR	731065	Identifier	node		731050	1					
ANR	731066	AssignmentExpression	* node = ( RConfigNode * ) data		731050	2		=			
ANR	731067	Identifier	node		731050	0					
ANR	731068	CastExpression	( RConfigNode * ) data		731050	1					
ANR	731069	CastTarget	RConfigNode *		731050	0					
ANR	731070	Identifier	data		731050	1					
ANR	731071	IfStatement	if ( node -> i_value )		731050	2					
ANR	731072	Condition	node -> i_value	418:5:11263:11275	731050	0	True				
ANR	731073	PtrMemberAccess	node -> i_value		731050	0					
ANR	731074	Identifier	node		731050	0					
ANR	731075	Identifier	i_value		731050	1					
ANR	731076	CompoundStatement		4:20:95:95	731050	1					
ANR	731077	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_SECSUB	419:2:11282:11324	731050	0	True				
ANR	731078	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_SECSUB		731050	0		|=			
ANR	731079	PtrMemberAccess	core -> print -> flags		731050	0					
ANR	731080	PtrMemberAccess	core -> print		731050	0					
ANR	731081	Identifier	core		731050	0					
ANR	731082	Identifier	print		731050	1					
ANR	731083	Identifier	flags		731050	1					
ANR	731084	Identifier	R_PRINT_FLAGS_SECSUB		731050	1					
ANR	731085	ElseStatement	else		731050	0					
ANR	731086	CompoundStatement		6:8:151:151	731050	0					
ANR	731087	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_SECSUB )	421:2:11338:11383	731050	0	True				
ANR	731088	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_SECSUB )		731050	0		&=			
ANR	731089	PtrMemberAccess	core -> print -> flags		731050	0					
ANR	731090	PtrMemberAccess	core -> print		731050	0					
ANR	731091	Identifier	core		731050	0					
ANR	731092	Identifier	print		731050	1					
ANR	731093	Identifier	flags		731050	1					
ANR	731094	Identifier	~R_PRINT_FLAGS_SECSUB		731050	1					
ANR	731095	ExpressionStatement	"r_print_set_flags ( core -> print , core -> print -> flags )"	423:1:11389:11440	731050	3	True				
ANR	731096	CallExpression	"r_print_set_flags ( core -> print , core -> print -> flags )"		731050	0					
ANR	731097	Callee	r_print_set_flags		731050	0					
ANR	731098	Identifier	r_print_set_flags		731050	0					
ANR	731099	ArgumentList	core -> print		731050	1					
ANR	731100	Argument	core -> print		731050	0					
ANR	731101	PtrMemberAccess	core -> print		731050	0					
ANR	731102	Identifier	core		731050	0					
ANR	731103	Identifier	print		731050	1					
ANR	731104	Argument	core -> print -> flags		731050	1					
ANR	731105	PtrMemberAccess	core -> print -> flags		731050	0					
ANR	731106	PtrMemberAccess	core -> print		731050	0					
ANR	731107	Identifier	core		731050	0					
ANR	731108	Identifier	print		731050	1					
ANR	731109	Identifier	flags		731050	1					
ANR	731110	ReturnStatement	return true ;	424:1:11443:11454	731050	4	True				
ANR	731111	Identifier	true		731050	0					
ANR	731112	ReturnType	static bool		731050	1					
ANR	731113	Identifier	cb_asmsecsub		731050	2					
ANR	731114	ParameterList	"void * user , void * data"		731050	3					
ANR	731115	Parameter	void * user	415:25:11158:11167	731050	0	True				
ANR	731116	ParameterType	void *		731050	0					
ANR	731117	Identifier	user		731050	1					
ANR	731118	Parameter	void * data	415:37:11170:11179	731050	1	True				
ANR	731119	ParameterType	void *		731050	0					
ANR	731120	Identifier	data		731050	1					
ANR	731121	CFGEntryNode	ENTRY		731050		True				
ANR	731122	CFGExitNode	EXIT		731050		True				
ANR	731123	Symbol	data		731050						
ANR	731124	Symbol	R_PRINT_FLAGS_SECSUB		731050						
ANR	731125	Symbol	* core		731050						
ANR	731126	Symbol	~R_PRINT_FLAGS_SECSUB		731050						
ANR	731127	Symbol	node -> i_value		731050						
ANR	731128	Symbol	core		731050						
ANR	731129	Symbol	node		731050						
ANR	731130	Symbol	* core -> print		731050						
ANR	731131	Symbol	true		731050						
ANR	731132	Symbol	* node		731050						
ANR	731133	Symbol	core -> print		731050						
ANR	731134	Symbol	user		731050						
ANR	731135	Symbol	* * core		731050						
ANR	731136	Symbol	core -> print -> flags		731050						
ANR	731137	Function	cb_asmassembler	427:0:11459:11654							
ANR	731138	FunctionDef	"cb_asmassembler (void * user , void * data)"		731137	0					
ANR	731139	CompoundStatement		427:52:11511:11654	731137	0					
ANR	731140	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	428:1:11514:11542	731137	0	True				
ANR	731141	IdentifierDecl	* core = ( RCore * ) user		731137	0					
ANR	731142	IdentifierDeclType	RCore *		731137	0					
ANR	731143	Identifier	core		731137	1					
ANR	731144	AssignmentExpression	* core = ( RCore * ) user		731137	2		=			
ANR	731145	Identifier	core		731137	0					
ANR	731146	CastExpression	( RCore * ) user		731137	1					
ANR	731147	CastTarget	RCore *		731137	0					
ANR	731148	Identifier	user		731137	1					
ANR	731149	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	429:1:11545:11585	731137	1	True				
ANR	731150	IdentifierDecl	* node = ( RConfigNode * ) data		731137	0					
ANR	731151	IdentifierDeclType	RConfigNode *		731137	0					
ANR	731152	Identifier	node		731137	1					
ANR	731153	AssignmentExpression	* node = ( RConfigNode * ) data		731137	2		=			
ANR	731154	Identifier	node		731137	0					
ANR	731155	CastExpression	( RConfigNode * ) data		731137	1					
ANR	731156	CastTarget	RConfigNode *		731137	0					
ANR	731157	Identifier	data		731137	1					
ANR	731158	ExpressionStatement	"r_asm_use_assembler ( core -> assembler , node -> value )"	430:1:11588:11638	731137	2	True				
ANR	731159	CallExpression	"r_asm_use_assembler ( core -> assembler , node -> value )"		731137	0					
ANR	731160	Callee	r_asm_use_assembler		731137	0					
ANR	731161	Identifier	r_asm_use_assembler		731137	0					
ANR	731162	ArgumentList	core -> assembler		731137	1					
ANR	731163	Argument	core -> assembler		731137	0					
ANR	731164	PtrMemberAccess	core -> assembler		731137	0					
ANR	731165	Identifier	core		731137	0					
ANR	731166	Identifier	assembler		731137	1					
ANR	731167	Argument	node -> value		731137	1					
ANR	731168	PtrMemberAccess	node -> value		731137	0					
ANR	731169	Identifier	node		731137	0					
ANR	731170	Identifier	value		731137	1					
ANR	731171	ReturnStatement	return true ;	431:1:11641:11652	731137	3	True				
ANR	731172	Identifier	true		731137	0					
ANR	731173	ReturnType	static bool		731137	1					
ANR	731174	Identifier	cb_asmassembler		731137	2					
ANR	731175	ParameterList	"void * user , void * data"		731137	3					
ANR	731176	Parameter	void * user	427:28:11487:11496	731137	0	True				
ANR	731177	ParameterType	void *		731137	0					
ANR	731178	Identifier	user		731137	1					
ANR	731179	Parameter	void * data	427:40:11499:11508	731137	1	True				
ANR	731180	ParameterType	void *		731137	0					
ANR	731181	Identifier	data		731137	1					
ANR	731182	CFGEntryNode	ENTRY		731137		True				
ANR	731183	CFGExitNode	EXIT		731137		True				
ANR	731184	Symbol	core		731137						
ANR	731185	Symbol	node		731137						
ANR	731186	Symbol	data		731137						
ANR	731187	Symbol	* core		731137						
ANR	731188	Symbol	true		731137						
ANR	731189	Symbol	core -> assembler		731137						
ANR	731190	Symbol	* node		731137						
ANR	731191	Symbol	user		731137						
ANR	731192	Symbol	node -> value		731137						
ANR	731193	Function	update_cmdpdc_options	434:0:11657:12084							
ANR	731194	FunctionDef	"update_cmdpdc_options (RCore * core , RConfigNode * node)"		731193	0					
ANR	731195	CompoundStatement		434:66:11723:12084	731193	0					
ANR	731196	ExpressionStatement	r_return_if_fail ( core && core -> assembler && node )	435:1:11726:11776	731193	0	True				
ANR	731197	CallExpression	r_return_if_fail ( core && core -> assembler && node )		731193	0					
ANR	731198	Callee	r_return_if_fail		731193	0					
ANR	731199	Identifier	r_return_if_fail		731193	0					
ANR	731200	ArgumentList	core && core -> assembler && node		731193	1					
ANR	731201	Argument	core && core -> assembler && node		731193	0					
ANR	731202	AndExpression	core && core -> assembler && node		731193	0		&&			
ANR	731203	Identifier	core		731193	0					
ANR	731204	AndExpression	core -> assembler && node		731193	1		&&			
ANR	731205	PtrMemberAccess	core -> assembler		731193	0					
ANR	731206	Identifier	core		731193	0					
ANR	731207	Identifier	assembler		731193	1					
ANR	731208	Identifier	node		731193	1					
ANR	731209	IdentifierDeclStatement	RListIter * iter ;	436:1:11779:11794	731193	1	True				
ANR	731210	IdentifierDecl	* iter		731193	0					
ANR	731211	IdentifierDeclType	RListIter *		731193	0					
ANR	731212	Identifier	iter		731193	1					
ANR	731213	ExpressionStatement	r_list_purge ( node -> options )	437:1:11797:11825	731193	2	True				
ANR	731214	CallExpression	r_list_purge ( node -> options )		731193	0					
ANR	731215	Callee	r_list_purge		731193	0					
ANR	731216	Identifier	r_list_purge		731193	0					
ANR	731217	ArgumentList	node -> options		731193	1					
ANR	731218	Argument	node -> options		731193	0					
ANR	731219	PtrMemberAccess	node -> options		731193	0					
ANR	731220	Identifier	node		731193	0					
ANR	731221	Identifier	options		731193	1					
ANR	731222	IdentifierDeclStatement	"char * opts = r_core_cmd_str ( core , ""e cmd.pdc=?"" ) ;"	438:1:11828:11877	731193	3	True				
ANR	731223	IdentifierDecl	"* opts = r_core_cmd_str ( core , ""e cmd.pdc=?"" )"		731193	0					
ANR	731224	IdentifierDeclType	char *		731193	0					
ANR	731225	Identifier	opts		731193	1					
ANR	731226	AssignmentExpression	"* opts = r_core_cmd_str ( core , ""e cmd.pdc=?"" )"		731193	2		=			
ANR	731227	Identifier	opts		731193	0					
ANR	731228	CallExpression	"r_core_cmd_str ( core , ""e cmd.pdc=?"" )"		731193	1					
ANR	731229	Callee	r_core_cmd_str		731193	0					
ANR	731230	Identifier	r_core_cmd_str		731193	0					
ANR	731231	ArgumentList	core		731193	1					
ANR	731232	Argument	core		731193	0					
ANR	731233	Identifier	core		731193	0					
ANR	731234	Argument	"""e cmd.pdc=?"""		731193	1					
ANR	731235	PrimaryExpression	"""e cmd.pdc=?"""		731193	0					
ANR	731236	IdentifierDeclStatement	"RList * optl = r_str_split_list ( opts , ""\\n"" , 0 ) ;"	439:1:11880:11926	731193	4	True				
ANR	731237	IdentifierDecl	"* optl = r_str_split_list ( opts , ""\\n"" , 0 )"		731193	0					
ANR	731238	IdentifierDeclType	RList *		731193	0					
ANR	731239	Identifier	optl		731193	1					
ANR	731240	AssignmentExpression	"* optl = r_str_split_list ( opts , ""\\n"" , 0 )"		731193	2		=			
ANR	731241	Identifier	optl		731193	0					
ANR	731242	CallExpression	"r_str_split_list ( opts , ""\\n"" , 0 )"		731193	1					
ANR	731243	Callee	r_str_split_list		731193	0					
ANR	731244	Identifier	r_str_split_list		731193	0					
ANR	731245	ArgumentList	opts		731193	1					
ANR	731246	Argument	opts		731193	0					
ANR	731247	Identifier	opts		731193	0					
ANR	731248	Argument	"""\\n"""		731193	1					
ANR	731249	PrimaryExpression	"""\\n"""		731193	0					
ANR	731250	Argument	0		731193	2					
ANR	731251	PrimaryExpression	0		731193	0					
ANR	731252	IdentifierDeclStatement	char * opt ;	440:1:11929:11938	731193	5	True				
ANR	731253	IdentifierDecl	* opt		731193	0					
ANR	731254	IdentifierDeclType	char *		731193	0					
ANR	731255	Identifier	opt		731193	1					
ANR	731256	ExpressionStatement	node -> options -> free = free	441:1:11941:11967	731193	6	True				
ANR	731257	AssignmentExpression	node -> options -> free = free		731193	0		=			
ANR	731258	PtrMemberAccess	node -> options -> free		731193	0					
ANR	731259	PtrMemberAccess	node -> options		731193	0					
ANR	731260	Identifier	node		731193	0					
ANR	731261	Identifier	options		731193	1					
ANR	731262	Identifier	free		731193	1					
ANR	731263	Identifier	free		731193	1					
ANR	731264	Statement	r_list_foreach	442:1:11970:11983	731193	7	True				
ANR	731265	Statement	(	442:16:11985:11985	731193	8	True				
ANR	731266	Statement	optl	442:17:11986:11989	731193	9	True				
ANR	731267	Statement	","	442:21:11990:11990	731193	10	True				
ANR	731268	Statement	iter	442:23:11992:11995	731193	11	True				
ANR	731269	Statement	","	442:27:11996:11996	731193	12	True				
ANR	731270	Statement	opt	442:29:11998:12000	731193	13	True				
ANR	731271	Statement	)	442:32:12001:12001	731193	14	True				
ANR	731272	CompoundStatement		9:34:279:279	731193	15					
ANR	731273	ExpressionStatement	"SETOPTIONS ( node , strdup ( opt ) , NULL )"	443:2:12007:12044	731193	0	True				
ANR	731274	CallExpression	"SETOPTIONS ( node , strdup ( opt ) , NULL )"		731193	0					
ANR	731275	Callee	SETOPTIONS		731193	0					
ANR	731276	Identifier	SETOPTIONS		731193	0					
ANR	731277	ArgumentList	node		731193	1					
ANR	731278	Argument	node		731193	0					
ANR	731279	Identifier	node		731193	0					
ANR	731280	Argument	strdup ( opt )		731193	1					
ANR	731281	CallExpression	strdup ( opt )		731193	0					
ANR	731282	Callee	strdup		731193	0					
ANR	731283	Identifier	strdup		731193	0					
ANR	731284	ArgumentList	opt		731193	1					
ANR	731285	Argument	opt		731193	0					
ANR	731286	Identifier	opt		731193	0					
ANR	731287	Argument	NULL		731193	2					
ANR	731288	Identifier	NULL		731193	0					
ANR	731289	ExpressionStatement	r_list_free ( optl )	445:1:12050:12068	731193	16	True				
ANR	731290	CallExpression	r_list_free ( optl )		731193	0					
ANR	731291	Callee	r_list_free		731193	0					
ANR	731292	Identifier	r_list_free		731193	0					
ANR	731293	ArgumentList	optl		731193	1					
ANR	731294	Argument	optl		731193	0					
ANR	731295	Identifier	optl		731193	0					
ANR	731296	ExpressionStatement	free ( opts )	446:1:12071:12082	731193	17	True				
ANR	731297	CallExpression	free ( opts )		731193	0					
ANR	731298	Callee	free		731193	0					
ANR	731299	Identifier	free		731193	0					
ANR	731300	ArgumentList	opts		731193	1					
ANR	731301	Argument	opts		731193	0					
ANR	731302	Identifier	opts		731193	0					
ANR	731303	ReturnType	static void		731193	1					
ANR	731304	Identifier	update_cmdpdc_options		731193	2					
ANR	731305	ParameterList	"RCore * core , RConfigNode * node"		731193	3					
ANR	731306	Parameter	RCore * core	434:34:11691:11701	731193	0	True				
ANR	731307	ParameterType	RCore *		731193	0					
ANR	731308	Identifier	core		731193	1					
ANR	731309	Parameter	RConfigNode * node	434:47:11704:11720	731193	1	True				
ANR	731310	ParameterType	RConfigNode *		731193	0					
ANR	731311	Identifier	node		731193	1					
ANR	731312	CFGEntryNode	ENTRY		731193		True				
ANR	731313	CFGExitNode	EXIT		731193		True				
ANR	731314	Symbol	r_core_cmd_str		731193						
ANR	731315	Symbol	NULL		731193						
ANR	731316	Symbol	* core		731193						
ANR	731317	Symbol	r_str_split_list		731193						
ANR	731318	Symbol	core -> assembler		731193						
ANR	731319	Symbol	iter		731193						
ANR	731320	Symbol	optl		731193						
ANR	731321	Symbol	core		731193						
ANR	731322	Symbol	node		731193						
ANR	731323	Symbol	opt		731193						
ANR	731324	Symbol	opts		731193						
ANR	731325	Symbol	* * node		731193						
ANR	731326	Symbol	node -> options		731193						
ANR	731327	Symbol	node -> options -> free		731193						
ANR	731328	Symbol	* node -> options		731193						
ANR	731329	Symbol	* node		731193						
ANR	731330	Symbol	strdup		731193						
ANR	731331	Symbol	free		731193						
ANR	731332	Function	update_asmcpu_options	449:0:12087:12705							
ANR	731333	FunctionDef	"update_asmcpu_options (RCore * core , RConfigNode * node)"		731332	0					
ANR	731334	CompoundStatement		449:66:12153:12705	731332	0					
ANR	731335	IdentifierDeclStatement	RAsmPlugin * h ;	450:1:12156:12169	731332	0	True				
ANR	731336	IdentifierDecl	* h		731332	0					
ANR	731337	IdentifierDeclType	RAsmPlugin *		731332	0					
ANR	731338	Identifier	h		731332	1					
ANR	731339	IdentifierDeclStatement	RListIter * iter ;	451:1:12172:12187	731332	1	True				
ANR	731340	IdentifierDecl	* iter		731332	0					
ANR	731341	IdentifierDeclType	RListIter *		731332	0					
ANR	731342	Identifier	iter		731332	1					
ANR	731343	ExpressionStatement	r_return_if_fail ( core && core -> assembler )	452:1:12190:12232	731332	2	True				
ANR	731344	CallExpression	r_return_if_fail ( core && core -> assembler )		731332	0					
ANR	731345	Callee	r_return_if_fail		731332	0					
ANR	731346	Identifier	r_return_if_fail		731332	0					
ANR	731347	ArgumentList	core && core -> assembler		731332	1					
ANR	731348	Argument	core && core -> assembler		731332	0					
ANR	731349	AndExpression	core && core -> assembler		731332	0		&&			
ANR	731350	Identifier	core		731332	0					
ANR	731351	PtrMemberAccess	core -> assembler		731332	1					
ANR	731352	Identifier	core		731332	0					
ANR	731353	Identifier	assembler		731332	1					
ANR	731354	IdentifierDeclStatement	"const char * arch = r_config_get ( core -> config , ""asm.arch"" ) ;"	453:1:12235:12293	731332	3	True				
ANR	731355	IdentifierDecl	"* arch = r_config_get ( core -> config , ""asm.arch"" )"		731332	0					
ANR	731356	IdentifierDeclType	const char *		731332	0					
ANR	731357	Identifier	arch		731332	1					
ANR	731358	AssignmentExpression	"* arch = r_config_get ( core -> config , ""asm.arch"" )"		731332	2		=			
ANR	731359	Identifier	arch		731332	0					
ANR	731360	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		731332	1					
ANR	731361	Callee	r_config_get		731332	0					
ANR	731362	Identifier	r_config_get		731332	0					
ANR	731363	ArgumentList	core -> config		731332	1					
ANR	731364	Argument	core -> config		731332	0					
ANR	731365	PtrMemberAccess	core -> config		731332	0					
ANR	731366	Identifier	core		731332	0					
ANR	731367	Identifier	config		731332	1					
ANR	731368	Argument	"""asm.arch"""		731332	1					
ANR	731369	PrimaryExpression	"""asm.arch"""		731332	0					
ANR	731370	IfStatement	if ( ! arch || ! * arch )		731332	4					
ANR	731371	Condition	! arch || ! * arch	454:5:12300:12314	731332	0	True				
ANR	731372	OrExpression	! arch || ! * arch		731332	0		||			
ANR	731373	UnaryOperationExpression	! arch		731332	0					
ANR	731374	UnaryOperator	!		731332	0					
ANR	731375	Identifier	arch		731332	1					
ANR	731376	UnaryOperationExpression	! * arch		731332	1					
ANR	731377	UnaryOperator	!		731332	0					
ANR	731378	UnaryOperationExpression	* arch		731332	1					
ANR	731379	UnaryOperator	*		731332	0					
ANR	731380	Identifier	arch		731332	1					
ANR	731381	CompoundStatement		6:22:163:163	731332	1					
ANR	731382	ReturnStatement	return ;	455:2:12321:12327	731332	0	True				
ANR	731383	ExpressionStatement	r_list_purge ( node -> options )	457:1:12333:12361	731332	5	True				
ANR	731384	CallExpression	r_list_purge ( node -> options )		731332	0					
ANR	731385	Callee	r_list_purge		731332	0					
ANR	731386	Identifier	r_list_purge		731332	0					
ANR	731387	ArgumentList	node -> options		731332	1					
ANR	731388	Argument	node -> options		731332	0					
ANR	731389	PtrMemberAccess	node -> options		731332	0					
ANR	731390	Identifier	node		731332	0					
ANR	731391	Identifier	options		731332	1					
ANR	731392	Statement	r_list_foreach	458:1:12364:12377	731332	6	True				
ANR	731393	Statement	(	458:16:12379:12379	731332	7	True				
ANR	731394	Statement	core	458:17:12380:12383	731332	8	True				
ANR	731395	Statement	->	458:21:12384:12385	731332	9	True				
ANR	731396	Statement	assembler	458:23:12386:12394	731332	10	True				
ANR	731397	Statement	->	458:32:12395:12396	731332	11	True				
ANR	731398	Statement	plugins	458:34:12397:12403	731332	12	True				
ANR	731399	Statement	","	458:41:12404:12404	731332	13	True				
ANR	731400	Statement	iter	458:43:12406:12409	731332	14	True				
ANR	731401	Statement	","	458:47:12410:12410	731332	15	True				
ANR	731402	Statement	h	458:49:12412:12412	731332	16	True				
ANR	731403	Statement	)	458:50:12413:12413	731332	17	True				
ANR	731404	CompoundStatement		10:52:261:261	731332	18					
ANR	731405	IfStatement	"if ( h -> cpus && ! strcmp ( arch , h -> name ) )"		731332	0					
ANR	731406	Condition	"h -> cpus && ! strcmp ( arch , h -> name )"	459:6:12423:12456	731332	0	True				
ANR	731407	AndExpression	"h -> cpus && ! strcmp ( arch , h -> name )"		731332	0		&&			
ANR	731408	PtrMemberAccess	h -> cpus		731332	0					
ANR	731409	Identifier	h		731332	0					
ANR	731410	Identifier	cpus		731332	1					
ANR	731411	UnaryOperationExpression	"! strcmp ( arch , h -> name )"		731332	1					
ANR	731412	UnaryOperator	!		731332	0					
ANR	731413	CallExpression	"strcmp ( arch , h -> name )"		731332	1					
ANR	731414	Callee	strcmp		731332	0					
ANR	731415	Identifier	strcmp		731332	0					
ANR	731416	ArgumentList	arch		731332	1					
ANR	731417	Argument	arch		731332	0					
ANR	731418	Identifier	arch		731332	0					
ANR	731419	Argument	h -> name		731332	1					
ANR	731420	PtrMemberAccess	h -> name		731332	0					
ANR	731421	Identifier	h		731332	0					
ANR	731422	Identifier	name		731332	1					
ANR	731423	CompoundStatement		13:3:341:372	731332	1					
ANR	731424	IdentifierDeclStatement	char * c = strdup ( h -> cpus ) ;	460:3:12464:12490	731332	0	True				
ANR	731425	IdentifierDecl	* c = strdup ( h -> cpus )		731332	0					
ANR	731426	IdentifierDeclType	char *		731332	0					
ANR	731427	Identifier	c		731332	1					
ANR	731428	AssignmentExpression	* c = strdup ( h -> cpus )		731332	2		=			
ANR	731429	Identifier	c		731332	0					
ANR	731430	CallExpression	strdup ( h -> cpus )		731332	1					
ANR	731431	Callee	strdup		731332	0					
ANR	731432	Identifier	strdup		731332	0					
ANR	731433	ArgumentList	h -> cpus		731332	1					
ANR	731434	Argument	h -> cpus		731332	0					
ANR	731435	PtrMemberAccess	h -> cpus		731332	0					
ANR	731436	Identifier	h		731332	0					
ANR	731437	Identifier	cpus		731332	1					
ANR	731438	IdentifierDeclStatement	"int i , n = r_str_split ( c , ',' ) ;"	461:3:12495:12526	731332	1	True				
ANR	731439	IdentifierDecl	i		731332	0					
ANR	731440	IdentifierDeclType	int		731332	0					
ANR	731441	Identifier	i		731332	1					
ANR	731442	IdentifierDecl	"n = r_str_split ( c , ',' )"		731332	1					
ANR	731443	IdentifierDeclType	int		731332	0					
ANR	731444	Identifier	n		731332	1					
ANR	731445	AssignmentExpression	"n = r_str_split ( c , ',' )"		731332	2		=			
ANR	731446	Identifier	n		731332	0					
ANR	731447	CallExpression	"r_str_split ( c , ',' )"		731332	1					
ANR	731448	Callee	r_str_split		731332	0					
ANR	731449	Identifier	r_str_split		731332	0					
ANR	731450	ArgumentList	c		731332	1					
ANR	731451	Argument	c		731332	0					
ANR	731452	Identifier	c		731332	0					
ANR	731453	Argument	"','"		731332	1					
ANR	731454	PrimaryExpression	"','"		731332	0					
ANR	731455	ForStatement	for ( i = 0 ; i < n ; i ++ )		731332	2					
ANR	731456	ForInit	i = 0 ;	462:8:12536:12541	731332	0	True				
ANR	731457	AssignmentExpression	i = 0		731332	0		=			
ANR	731458	Identifier	i		731332	0					
ANR	731459	PrimaryExpression	0		731332	1					
ANR	731460	Condition	i < n	462:15:12543:12547	731332	1	True				
ANR	731461	RelationalExpression	i < n		731332	0		<			
ANR	731462	Identifier	i		731332	0					
ANR	731463	Identifier	n		731332	1					
ANR	731464	PostIncDecOperationExpression	i ++	462:22:12550:12552	731332	2	True				
ANR	731465	Identifier	i		731332	0					
ANR	731466	IncDec	++		731332	1					
ANR	731467	CompoundStatement		15:4:407:448	731332	3					
ANR	731468	IdentifierDeclStatement	"const char * word = r_str_word_get0 ( c , i ) ;"	463:4:12561:12602	731332	0	True				
ANR	731469	IdentifierDecl	"* word = r_str_word_get0 ( c , i )"		731332	0					
ANR	731470	IdentifierDeclType	const char *		731332	0					
ANR	731471	Identifier	word		731332	1					
ANR	731472	AssignmentExpression	"* word = r_str_word_get0 ( c , i )"		731332	2		=			
ANR	731473	Identifier	word		731332	0					
ANR	731474	CallExpression	"r_str_word_get0 ( c , i )"		731332	1					
ANR	731475	Callee	r_str_word_get0		731332	0					
ANR	731476	Identifier	r_str_word_get0		731332	0					
ANR	731477	ArgumentList	c		731332	1					
ANR	731478	Argument	c		731332	0					
ANR	731479	Identifier	c		731332	0					
ANR	731480	Argument	i		731332	1					
ANR	731481	Identifier	i		731332	0					
ANR	731482	IfStatement	if ( word && * word )		731332	1					
ANR	731483	Condition	word && * word	464:8:12612:12624	731332	0	True				
ANR	731484	AndExpression	word && * word		731332	0		&&			
ANR	731485	Identifier	word		731332	0					
ANR	731486	UnaryOperationExpression	* word		731332	1					
ANR	731487	UnaryOperator	*		731332	0					
ANR	731488	Identifier	word		731332	1					
ANR	731489	CompoundStatement		16:23:473:473	731332	1					
ANR	731490	ExpressionStatement	"SETOPTIONS ( node , strdup ( word ) , NULL )"	465:5:12634:12672	731332	0	True				
ANR	731491	CallExpression	"SETOPTIONS ( node , strdup ( word ) , NULL )"		731332	0					
ANR	731492	Callee	SETOPTIONS		731332	0					
ANR	731493	Identifier	SETOPTIONS		731332	0					
ANR	731494	ArgumentList	node		731332	1					
ANR	731495	Argument	node		731332	0					
ANR	731496	Identifier	node		731332	0					
ANR	731497	Argument	strdup ( word )		731332	1					
ANR	731498	CallExpression	strdup ( word )		731332	0					
ANR	731499	Callee	strdup		731332	0					
ANR	731500	Identifier	strdup		731332	0					
ANR	731501	ArgumentList	word		731332	1					
ANR	731502	Argument	word		731332	0					
ANR	731503	Identifier	word		731332	0					
ANR	731504	Argument	NULL		731332	2					
ANR	731505	Identifier	NULL		731332	0					
ANR	731506	ExpressionStatement	free ( c )	468:3:12688:12696	731332	3	True				
ANR	731507	CallExpression	free ( c )		731332	0					
ANR	731508	Callee	free		731332	0					
ANR	731509	Identifier	free		731332	0					
ANR	731510	ArgumentList	c		731332	1					
ANR	731511	Argument	c		731332	0					
ANR	731512	Identifier	c		731332	0					
ANR	731513	ReturnType	static void		731332	1					
ANR	731514	Identifier	update_asmcpu_options		731332	2					
ANR	731515	ParameterList	"RCore * core , RConfigNode * node"		731332	3					
ANR	731516	Parameter	RCore * core	449:34:12121:12131	731332	0	True				
ANR	731517	ParameterType	RCore *		731332	0					
ANR	731518	Identifier	core		731332	1					
ANR	731519	Parameter	RConfigNode * node	449:47:12134:12150	731332	1	True				
ANR	731520	ParameterType	RConfigNode *		731332	0					
ANR	731521	Identifier	node		731332	1					
ANR	731522	CFGEntryNode	ENTRY		731332		True				
ANR	731523	CFGExitNode	EXIT		731332		True				
ANR	731524	Symbol	* core		731332						
ANR	731525	Symbol	r_config_get		731332						
ANR	731526	Symbol	core -> assembler		731332						
ANR	731527	Symbol	h -> cpus		731332						
ANR	731528	Symbol	h -> name		731332						
ANR	731529	Symbol	* arch		731332						
ANR	731530	Symbol	* node		731332						
ANR	731531	Symbol	core -> config		731332						
ANR	731532	Symbol	strcmp		731332						
ANR	731533	Symbol	c		731332						
ANR	731534	Symbol	NULL		731332						
ANR	731535	Symbol	* word		731332						
ANR	731536	Symbol	h		731332						
ANR	731537	Symbol	iter		731332						
ANR	731538	Symbol	i		731332						
ANR	731539	Symbol	r_str_word_get0		731332						
ANR	731540	Symbol	n		731332						
ANR	731541	Symbol	core		731332						
ANR	731542	Symbol	node		731332						
ANR	731543	Symbol	* h		731332						
ANR	731544	Symbol	r_str_split		731332						
ANR	731545	Symbol	node -> options		731332						
ANR	731546	Symbol	arch		731332						
ANR	731547	Symbol	strdup		731332						
ANR	731548	Symbol	word		731332						
ANR	731549	Function	cb_asmcpu	473:0:12708:13164							
ANR	731550	FunctionDef	"cb_asmcpu (void * user , void * data)"		731549	0					
ANR	731551	CompoundStatement		473:46:12754:13164	731549	0					
ANR	731552	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	474:1:12757:12785	731549	0	True				
ANR	731553	IdentifierDecl	* core = ( RCore * ) user		731549	0					
ANR	731554	IdentifierDeclType	RCore *		731549	0					
ANR	731555	Identifier	core		731549	1					
ANR	731556	AssignmentExpression	* core = ( RCore * ) user		731549	2		=			
ANR	731557	Identifier	core		731549	0					
ANR	731558	CastExpression	( RCore * ) user		731549	1					
ANR	731559	CastTarget	RCore *		731549	0					
ANR	731560	Identifier	user		731549	1					
ANR	731561	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	475:1:12788:12828	731549	1	True				
ANR	731562	IdentifierDecl	* node = ( RConfigNode * ) data		731549	0					
ANR	731563	IdentifierDeclType	RConfigNode *		731549	0					
ANR	731564	Identifier	node		731549	1					
ANR	731565	AssignmentExpression	* node = ( RConfigNode * ) data		731549	2		=			
ANR	731566	Identifier	node		731549	0					
ANR	731567	CastExpression	( RConfigNode * ) data		731549	1					
ANR	731568	CastTarget	RConfigNode *		731549	0					
ANR	731569	Identifier	data		731549	1					
ANR	731570	IfStatement	if ( * node -> value == '?' )		731549	2					
ANR	731571	Condition	* node -> value == '?'	476:5:12835:12853	731549	0	True				
ANR	731572	EqualityExpression	* node -> value == '?'		731549	0		==			
ANR	731573	UnaryOperationExpression	* node -> value		731549	0					
ANR	731574	UnaryOperator	*		731549	0					
ANR	731575	PtrMemberAccess	node -> value		731549	1					
ANR	731576	Identifier	node		731549	0					
ANR	731577	Identifier	value		731549	1					
ANR	731578	PrimaryExpression	'?'		731549	1					
ANR	731579	CompoundStatement		4:26:101:101	731549	1					
ANR	731580	ExpressionStatement	"update_asmcpu_options ( core , node )"	477:2:12860:12894	731549	0	True				
ANR	731581	CallExpression	"update_asmcpu_options ( core , node )"		731549	0					
ANR	731582	Callee	update_asmcpu_options		731549	0					
ANR	731583	Identifier	update_asmcpu_options		731549	0					
ANR	731584	ArgumentList	core		731549	1					
ANR	731585	Argument	core		731549	0					
ANR	731586	Identifier	core		731549	0					
ANR	731587	Argument	node		731549	1					
ANR	731588	Identifier	node		731549	0					
ANR	731589	ExpressionStatement	"rasm2_list ( core , r_config_get ( core -> config , ""asm.arch"" ) , node -> value [ 1 ] )"	479:2:12957:13031	731549	1	True				
ANR	731590	CallExpression	"rasm2_list ( core , r_config_get ( core -> config , ""asm.arch"" ) , node -> value [ 1 ] )"		731549	0					
ANR	731591	Callee	rasm2_list		731549	0					
ANR	731592	Identifier	rasm2_list		731549	0					
ANR	731593	ArgumentList	core		731549	1					
ANR	731594	Argument	core		731549	0					
ANR	731595	Identifier	core		731549	0					
ANR	731596	Argument	"r_config_get ( core -> config , ""asm.arch"" )"		731549	1					
ANR	731597	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		731549	0					
ANR	731598	Callee	r_config_get		731549	0					
ANR	731599	Identifier	r_config_get		731549	0					
ANR	731600	ArgumentList	core -> config		731549	1					
ANR	731601	Argument	core -> config		731549	0					
ANR	731602	PtrMemberAccess	core -> config		731549	0					
ANR	731603	Identifier	core		731549	0					
ANR	731604	Identifier	config		731549	1					
ANR	731605	Argument	"""asm.arch"""		731549	1					
ANR	731606	PrimaryExpression	"""asm.arch"""		731549	0					
ANR	731607	Argument	node -> value [ 1 ]		731549	2					
ANR	731608	ArrayIndexing	node -> value [ 1 ]		731549	0					
ANR	731609	PtrMemberAccess	node -> value		731549	0					
ANR	731610	Identifier	node		731549	0					
ANR	731611	Identifier	value		731549	1					
ANR	731612	PrimaryExpression	1		731549	1					
ANR	731613	ReturnStatement	return 0 ;	480:2:13035:13043	731549	2	True				
ANR	731614	PrimaryExpression	0		731549	0					
ANR	731615	ExpressionStatement	"r_asm_set_cpu ( core -> assembler , node -> value )"	482:1:13049:13093	731549	3	True				
ANR	731616	CallExpression	"r_asm_set_cpu ( core -> assembler , node -> value )"		731549	0					
ANR	731617	Callee	r_asm_set_cpu		731549	0					
ANR	731618	Identifier	r_asm_set_cpu		731549	0					
ANR	731619	ArgumentList	core -> assembler		731549	1					
ANR	731620	Argument	core -> assembler		731549	0					
ANR	731621	PtrMemberAccess	core -> assembler		731549	0					
ANR	731622	Identifier	core		731549	0					
ANR	731623	Identifier	assembler		731549	1					
ANR	731624	Argument	node -> value		731549	1					
ANR	731625	PtrMemberAccess	node -> value		731549	0					
ANR	731626	Identifier	node		731549	0					
ANR	731627	Identifier	value		731549	1					
ANR	731628	ExpressionStatement	"r_config_set ( core -> config , ""anal.cpu"" , node -> value )"	483:1:13096:13148	731549	4	True				
ANR	731629	CallExpression	"r_config_set ( core -> config , ""anal.cpu"" , node -> value )"		731549	0					
ANR	731630	Callee	r_config_set		731549	0					
ANR	731631	Identifier	r_config_set		731549	0					
ANR	731632	ArgumentList	core -> config		731549	1					
ANR	731633	Argument	core -> config		731549	0					
ANR	731634	PtrMemberAccess	core -> config		731549	0					
ANR	731635	Identifier	core		731549	0					
ANR	731636	Identifier	config		731549	1					
ANR	731637	Argument	"""anal.cpu"""		731549	1					
ANR	731638	PrimaryExpression	"""anal.cpu"""		731549	0					
ANR	731639	Argument	node -> value		731549	2					
ANR	731640	PtrMemberAccess	node -> value		731549	0					
ANR	731641	Identifier	node		731549	0					
ANR	731642	Identifier	value		731549	1					
ANR	731643	ReturnStatement	return true ;	484:1:13151:13162	731549	5	True				
ANR	731644	Identifier	true		731549	0					
ANR	731645	ReturnType	static bool		731549	1					
ANR	731646	Identifier	cb_asmcpu		731549	2					
ANR	731647	ParameterList	"void * user , void * data"		731549	3					
ANR	731648	Parameter	void * user	473:22:12730:12739	731549	0	True				
ANR	731649	ParameterType	void *		731549	0					
ANR	731650	Identifier	user		731549	1					
ANR	731651	Parameter	void * data	473:34:12742:12751	731549	1	True				
ANR	731652	ParameterType	void *		731549	0					
ANR	731653	Identifier	data		731549	1					
ANR	731654	CFGEntryNode	ENTRY		731549		True				
ANR	731655	CFGExitNode	EXIT		731549		True				
ANR	731656	Symbol	core -> config		731549						
ANR	731657	Symbol	* node -> value		731549						
ANR	731658	Symbol	data		731549						
ANR	731659	Symbol	r_config_get		731549						
ANR	731660	Symbol	* core		731549						
ANR	731661	Symbol	core -> assembler		731549						
ANR	731662	Symbol	node -> value		731549						
ANR	731663	Symbol	core		731549						
ANR	731664	Symbol	node		731549						
ANR	731665	Symbol	* * node		731549						
ANR	731666	Symbol	true		731549						
ANR	731667	Symbol	* node		731549						
ANR	731668	Symbol	user		731549						
ANR	731669	Function	update_asmarch_options	487:0:13167:13441							
ANR	731670	FunctionDef	"update_asmarch_options (RCore * core , RConfigNode * node)"		731669	0					
ANR	731671	CompoundStatement		487:67:13234:13441	731669	0					
ANR	731672	IdentifierDeclStatement	RAsmPlugin * h ;	488:1:13237:13250	731669	0	True				
ANR	731673	IdentifierDecl	* h		731669	0					
ANR	731674	IdentifierDeclType	RAsmPlugin *		731669	0					
ANR	731675	Identifier	h		731669	1					
ANR	731676	IdentifierDeclStatement	RListIter * iter ;	489:1:13253:13268	731669	1	True				
ANR	731677	IdentifierDecl	* iter		731669	0					
ANR	731678	IdentifierDeclType	RListIter *		731669	0					
ANR	731679	Identifier	iter		731669	1					
ANR	731680	IfStatement	if ( core && node && core -> assembler )		731669	2					
ANR	731681	Condition	core && node && core -> assembler	490:5:13275:13305	731669	0	True				
ANR	731682	AndExpression	core && node && core -> assembler		731669	0		&&			
ANR	731683	Identifier	core		731669	0					
ANR	731684	AndExpression	node && core -> assembler		731669	1		&&			
ANR	731685	Identifier	node		731669	0					
ANR	731686	PtrMemberAccess	core -> assembler		731669	1					
ANR	731687	Identifier	core		731669	0					
ANR	731688	Identifier	assembler		731669	1					
ANR	731689	CompoundStatement		4:38:73:73	731669	1					
ANR	731690	ExpressionStatement	r_list_purge ( node -> options )	491:2:13312:13340	731669	0	True				
ANR	731691	CallExpression	r_list_purge ( node -> options )		731669	0					
ANR	731692	Callee	r_list_purge		731669	0					
ANR	731693	Identifier	r_list_purge		731669	0					
ANR	731694	ArgumentList	node -> options		731669	1					
ANR	731695	Argument	node -> options		731669	0					
ANR	731696	PtrMemberAccess	node -> options		731669	0					
ANR	731697	Identifier	node		731669	0					
ANR	731698	Identifier	options		731669	1					
ANR	731699	Statement	r_list_foreach	492:2:13344:13357	731669	1	True				
ANR	731700	Statement	(	492:17:13359:13359	731669	2	True				
ANR	731701	Statement	core	492:18:13360:13363	731669	3	True				
ANR	731702	Statement	->	492:22:13364:13365	731669	4	True				
ANR	731703	Statement	assembler	492:24:13366:13374	731669	5	True				
ANR	731704	Statement	->	492:33:13375:13376	731669	6	True				
ANR	731705	Statement	plugins	492:35:13377:13383	731669	7	True				
ANR	731706	Statement	","	492:42:13384:13384	731669	8	True				
ANR	731707	Statement	iter	492:44:13386:13389	731669	9	True				
ANR	731708	Statement	","	492:48:13390:13390	731669	10	True				
ANR	731709	Statement	h	492:50:13392:13392	731669	11	True				
ANR	731710	Statement	)	492:51:13393:13393	731669	12	True				
ANR	731711	CompoundStatement		6:53:160:160	731669	13					
ANR	731712	ExpressionStatement	"SETOPTIONS ( node , h -> name , NULL )"	493:3:13400:13432	731669	0	True				
ANR	731713	CallExpression	"SETOPTIONS ( node , h -> name , NULL )"		731669	0					
ANR	731714	Callee	SETOPTIONS		731669	0					
ANR	731715	Identifier	SETOPTIONS		731669	0					
ANR	731716	ArgumentList	node		731669	1					
ANR	731717	Argument	node		731669	0					
ANR	731718	Identifier	node		731669	0					
ANR	731719	Argument	h -> name		731669	1					
ANR	731720	PtrMemberAccess	h -> name		731669	0					
ANR	731721	Identifier	h		731669	0					
ANR	731722	Identifier	name		731669	1					
ANR	731723	Argument	NULL		731669	2					
ANR	731724	Identifier	NULL		731669	0					
ANR	731725	ReturnType	static void		731669	1					
ANR	731726	Identifier	update_asmarch_options		731669	2					
ANR	731727	ParameterList	"RCore * core , RConfigNode * node"		731669	3					
ANR	731728	Parameter	RCore * core	487:35:13202:13212	731669	0	True				
ANR	731729	ParameterType	RCore *		731669	0					
ANR	731730	Identifier	core		731669	1					
ANR	731731	Parameter	RConfigNode * node	487:48:13215:13231	731669	1	True				
ANR	731732	ParameterType	RConfigNode *		731669	0					
ANR	731733	Identifier	node		731669	1					
ANR	731734	CFGEntryNode	ENTRY		731669		True				
ANR	731735	CFGExitNode	EXIT		731669		True				
ANR	731736	Symbol	core		731669						
ANR	731737	Symbol	node		731669						
ANR	731738	Symbol	* h		731669						
ANR	731739	Symbol	NULL		731669						
ANR	731740	Symbol	h		731669						
ANR	731741	Symbol	* core		731669						
ANR	731742	Symbol	node -> options		731669						
ANR	731743	Symbol	iter		731669						
ANR	731744	Symbol	core -> assembler		731669						
ANR	731745	Symbol	* node		731669						
ANR	731746	Symbol	h -> name		731669						
ANR	731747	Function	cb_asmarch	498:0:13444:17452							
ANR	731748	FunctionDef	"cb_asmarch (void * user , void * data)"		731747	0					
ANR	731749	CompoundStatement		498:47:13491:17452	731747	0					
ANR	731750	IdentifierDeclStatement	char asmparser [ 32 ] ;	499:1:13494:13512	731747	0	True				
ANR	731751	IdentifierDecl	asmparser [ 32 ]		731747	0					
ANR	731752	IdentifierDeclType	char [ 32 ]		731747	0					
ANR	731753	Identifier	asmparser		731747	1					
ANR	731754	PrimaryExpression	32		731747	2					
ANR	731755	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	500:1:13515:13543	731747	1	True				
ANR	731756	IdentifierDecl	* core = ( RCore * ) user		731747	0					
ANR	731757	IdentifierDeclType	RCore *		731747	0					
ANR	731758	Identifier	core		731747	1					
ANR	731759	AssignmentExpression	* core = ( RCore * ) user		731747	2		=			
ANR	731760	Identifier	core		731747	0					
ANR	731761	CastExpression	( RCore * ) user		731747	1					
ANR	731762	CastTarget	RCore *		731747	0					
ANR	731763	Identifier	user		731747	1					
ANR	731764	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	501:1:13546:13586	731747	2	True				
ANR	731765	IdentifierDecl	* node = ( RConfigNode * ) data		731747	0					
ANR	731766	IdentifierDeclType	RConfigNode *		731747	0					
ANR	731767	Identifier	node		731747	1					
ANR	731768	AssignmentExpression	* node = ( RConfigNode * ) data		731747	2		=			
ANR	731769	Identifier	node		731747	0					
ANR	731770	CastExpression	( RConfigNode * ) data		731747	1					
ANR	731771	CastTarget	RConfigNode *		731747	0					
ANR	731772	Identifier	data		731747	1					
ANR	731773	IdentifierDeclStatement	const char * asmos = NULL ;	502:1:13589:13613	731747	3	True				
ANR	731774	IdentifierDecl	* asmos = NULL		731747	0					
ANR	731775	IdentifierDeclType	const char *		731747	0					
ANR	731776	Identifier	asmos		731747	1					
ANR	731777	AssignmentExpression	* asmos = NULL		731747	2		=			
ANR	731778	Identifier	NULL		731747	0					
ANR	731779	Identifier	NULL		731747	1					
ANR	731780	IdentifierDeclStatement	int bits = R_SYS_BITS ;	503:1:13616:13637	731747	4	True				
ANR	731781	IdentifierDecl	bits = R_SYS_BITS		731747	0					
ANR	731782	IdentifierDeclType	int		731747	0					
ANR	731783	Identifier	bits		731747	1					
ANR	731784	AssignmentExpression	bits = R_SYS_BITS		731747	2		=			
ANR	731785	Identifier	R_SYS_BITS		731747	0					
ANR	731786	Identifier	R_SYS_BITS		731747	1					
ANR	731787	IfStatement	if ( ! * node -> value || ! core || ! core -> assembler )		731747	5					
ANR	731788	Condition	! * node -> value || ! core || ! core -> assembler	504:5:13644:13685	731747	0	True				
ANR	731789	OrExpression	! * node -> value || ! core || ! core -> assembler		731747	0		||			
ANR	731790	UnaryOperationExpression	! * node -> value		731747	0					
ANR	731791	UnaryOperator	!		731747	0					
ANR	731792	UnaryOperationExpression	* node -> value		731747	1					
ANR	731793	UnaryOperator	*		731747	0					
ANR	731794	PtrMemberAccess	node -> value		731747	1					
ANR	731795	Identifier	node		731747	0					
ANR	731796	Identifier	value		731747	1					
ANR	731797	OrExpression	! core || ! core -> assembler		731747	1		||			
ANR	731798	UnaryOperationExpression	! core		731747	0					
ANR	731799	UnaryOperator	!		731747	0					
ANR	731800	Identifier	core		731747	1					
ANR	731801	UnaryOperationExpression	! core -> assembler		731747	1					
ANR	731802	UnaryOperator	!		731747	0					
ANR	731803	PtrMemberAccess	core -> assembler		731747	1					
ANR	731804	Identifier	core		731747	0					
ANR	731805	Identifier	assembler		731747	1					
ANR	731806	CompoundStatement		7:49:196:196	731747	1					
ANR	731807	ReturnStatement	return false ;	505:2:13692:13704	731747	0	True				
ANR	731808	Identifier	false		731747	0					
ANR	731809	ExpressionStatement	"asmos = r_config_get ( core -> config , ""asm.os"" )"	507:1:13710:13755	731747	6	True				
ANR	731810	AssignmentExpression	"asmos = r_config_get ( core -> config , ""asm.os"" )"		731747	0		=			
ANR	731811	Identifier	asmos		731747	0					
ANR	731812	CallExpression	"r_config_get ( core -> config , ""asm.os"" )"		731747	1					
ANR	731813	Callee	r_config_get		731747	0					
ANR	731814	Identifier	r_config_get		731747	0					
ANR	731815	ArgumentList	core -> config		731747	1					
ANR	731816	Argument	core -> config		731747	0					
ANR	731817	PtrMemberAccess	core -> config		731747	0					
ANR	731818	Identifier	core		731747	0					
ANR	731819	Identifier	config		731747	1					
ANR	731820	Argument	"""asm.os"""		731747	1					
ANR	731821	PrimaryExpression	"""asm.os"""		731747	0					
ANR	731822	IfStatement	if ( core && core -> anal && core -> anal -> bits )		731747	7					
ANR	731823	Condition	core && core -> anal && core -> anal -> bits	508:5:13762:13799	731747	0	True				
ANR	731824	AndExpression	core && core -> anal && core -> anal -> bits		731747	0		&&			
ANR	731825	Identifier	core		731747	0					
ANR	731826	AndExpression	core -> anal && core -> anal -> bits		731747	1		&&			
ANR	731827	PtrMemberAccess	core -> anal		731747	0					
ANR	731828	Identifier	core		731747	0					
ANR	731829	Identifier	anal		731747	1					
ANR	731830	PtrMemberAccess	core -> anal -> bits		731747	1					
ANR	731831	PtrMemberAccess	core -> anal		731747	0					
ANR	731832	Identifier	core		731747	0					
ANR	731833	Identifier	anal		731747	1					
ANR	731834	Identifier	bits		731747	1					
ANR	731835	CompoundStatement		11:45:310:310	731747	1					
ANR	731836	ExpressionStatement	bits = core -> anal -> bits	509:2:13806:13829	731747	0	True				
ANR	731837	AssignmentExpression	bits = core -> anal -> bits		731747	0		=			
ANR	731838	Identifier	bits		731747	0					
ANR	731839	PtrMemberAccess	core -> anal -> bits		731747	1					
ANR	731840	PtrMemberAccess	core -> anal		731747	0					
ANR	731841	Identifier	core		731747	0					
ANR	731842	Identifier	anal		731747	1					
ANR	731843	Identifier	bits		731747	1					
ANR	731844	IfStatement	if ( node -> value [ 0 ] == '?' )		731747	8					
ANR	731845	Condition	node -> value [ 0 ] == '?'	511:5:13839:13859	731747	0	True				
ANR	731846	EqualityExpression	node -> value [ 0 ] == '?'		731747	0		==			
ANR	731847	ArrayIndexing	node -> value [ 0 ]		731747	0					
ANR	731848	PtrMemberAccess	node -> value		731747	0					
ANR	731849	Identifier	node		731747	0					
ANR	731850	Identifier	value		731747	1					
ANR	731851	PrimaryExpression	0		731747	1					
ANR	731852	PrimaryExpression	'?'		731747	1					
ANR	731853	CompoundStatement		14:28:370:370	731747	1					
ANR	731854	ExpressionStatement	"update_asmarch_options ( core , node )"	512:2:13866:13901	731747	0	True				
ANR	731855	CallExpression	"update_asmarch_options ( core , node )"		731747	0					
ANR	731856	Callee	update_asmarch_options		731747	0					
ANR	731857	Identifier	update_asmarch_options		731747	0					
ANR	731858	ArgumentList	core		731747	1					
ANR	731859	Argument	core		731747	0					
ANR	731860	Identifier	core		731747	0					
ANR	731861	Argument	node		731747	1					
ANR	731862	Identifier	node		731747	0					
ANR	731863	IfStatement	if ( strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?' )		731747	1					
ANR	731864	Condition	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'	513:6:13909:13957	731747	0	True				
ANR	731865	AndExpression	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'		731747	0		&&			
ANR	731866	RelationalExpression	strlen ( node -> value ) > 1		731747	0		>			
ANR	731867	CallExpression	strlen ( node -> value )		731747	0					
ANR	731868	Callee	strlen		731747	0					
ANR	731869	Identifier	strlen		731747	0					
ANR	731870	ArgumentList	node -> value		731747	1					
ANR	731871	Argument	node -> value		731747	0					
ANR	731872	PtrMemberAccess	node -> value		731747	0					
ANR	731873	Identifier	node		731747	0					
ANR	731874	Identifier	value		731747	1					
ANR	731875	PrimaryExpression	1		731747	1					
ANR	731876	EqualityExpression	node -> value [ 1 ] == '?'		731747	1		==			
ANR	731877	ArrayIndexing	node -> value [ 1 ]		731747	0					
ANR	731878	PtrMemberAccess	node -> value		731747	0					
ANR	731879	Identifier	node		731747	0					
ANR	731880	Identifier	value		731747	1					
ANR	731881	PrimaryExpression	1		731747	1					
ANR	731882	PrimaryExpression	'?'		731747	1					
ANR	731883	CompoundStatement		16:57:468:468	731747	1					
ANR	731884	ExpressionStatement	"rasm2_list ( core , NULL , node -> value [ 1 ] )"	515:3:14029:14068	731747	0	True				
ANR	731885	CallExpression	"rasm2_list ( core , NULL , node -> value [ 1 ] )"		731747	0					
ANR	731886	Callee	rasm2_list		731747	0					
ANR	731887	Identifier	rasm2_list		731747	0					
ANR	731888	ArgumentList	core		731747	1					
ANR	731889	Argument	core		731747	0					
ANR	731890	Identifier	core		731747	0					
ANR	731891	Argument	NULL		731747	1					
ANR	731892	Identifier	NULL		731747	0					
ANR	731893	Argument	node -> value [ 1 ]		731747	2					
ANR	731894	ArrayIndexing	node -> value [ 1 ]		731747	0					
ANR	731895	PtrMemberAccess	node -> value		731747	0					
ANR	731896	Identifier	node		731747	0					
ANR	731897	Identifier	value		731747	1					
ANR	731898	PrimaryExpression	1		731747	1					
ANR	731899	ReturnStatement	return false ;	516:3:14073:14085	731747	1	True				
ANR	731900	Identifier	false		731747	0					
ANR	731901	ElseStatement	else		731747	0					
ANR	731902	CompoundStatement		20:9:604:604	731747	0					
ANR	731903	ExpressionStatement	print_node_options ( node )	518:3:14101:14126	731747	0	True				
ANR	731904	CallExpression	print_node_options ( node )		731747	0					
ANR	731905	Callee	print_node_options		731747	0					
ANR	731906	Identifier	print_node_options		731747	0					
ANR	731907	ArgumentList	node		731747	1					
ANR	731908	Argument	node		731747	0					
ANR	731909	Identifier	node		731747	0					
ANR	731910	ReturnStatement	return false ;	519:3:14131:14143	731747	1	True				
ANR	731911	Identifier	false		731747	0					
ANR	731912	ExpressionStatement	"r_egg_setup ( core -> egg , node -> value , bits , 0 , R_SYS_OS )"	522:1:14153:14208	731747	9	True				
ANR	731913	CallExpression	"r_egg_setup ( core -> egg , node -> value , bits , 0 , R_SYS_OS )"		731747	0					
ANR	731914	Callee	r_egg_setup		731747	0					
ANR	731915	Identifier	r_egg_setup		731747	0					
ANR	731916	ArgumentList	core -> egg		731747	1					
ANR	731917	Argument	core -> egg		731747	0					
ANR	731918	PtrMemberAccess	core -> egg		731747	0					
ANR	731919	Identifier	core		731747	0					
ANR	731920	Identifier	egg		731747	1					
ANR	731921	Argument	node -> value		731747	1					
ANR	731922	PtrMemberAccess	node -> value		731747	0					
ANR	731923	Identifier	node		731747	0					
ANR	731924	Identifier	value		731747	1					
ANR	731925	Argument	bits		731747	2					
ANR	731926	Identifier	bits		731747	0					
ANR	731927	Argument	0		731747	3					
ANR	731928	PrimaryExpression	0		731747	0					
ANR	731929	Argument	R_SYS_OS		731747	4					
ANR	731930	Identifier	R_SYS_OS		731747	0					
ANR	731931	IfStatement	"if ( ! r_asm_use ( core -> assembler , node -> value ) )"		731747	10					
ANR	731932	Condition	"! r_asm_use ( core -> assembler , node -> value )"	524:5:14216:14256	731747	0	True				
ANR	731933	UnaryOperationExpression	"! r_asm_use ( core -> assembler , node -> value )"		731747	0					
ANR	731934	UnaryOperator	!		731747	0					
ANR	731935	CallExpression	"r_asm_use ( core -> assembler , node -> value )"		731747	1					
ANR	731936	Callee	r_asm_use		731747	0					
ANR	731937	Identifier	r_asm_use		731747	0					
ANR	731938	ArgumentList	core -> assembler		731747	1					
ANR	731939	Argument	core -> assembler		731747	0					
ANR	731940	PtrMemberAccess	core -> assembler		731747	0					
ANR	731941	Identifier	core		731747	0					
ANR	731942	Identifier	assembler		731747	1					
ANR	731943	Argument	node -> value		731747	1					
ANR	731944	PtrMemberAccess	node -> value		731747	0					
ANR	731945	Identifier	node		731747	0					
ANR	731946	Identifier	value		731747	1					
ANR	731947	CompoundStatement		27:48:767:767	731747	1					
ANR	731948	ExpressionStatement	"eprintf ( ""asm.arch: cannot find (%s)\\n"" , node -> value )"	525:2:14263:14316	731747	0	True				
ANR	731949	CallExpression	"eprintf ( ""asm.arch: cannot find (%s)\\n"" , node -> value )"		731747	0					
ANR	731950	Callee	eprintf		731747	0					
ANR	731951	Identifier	eprintf		731747	0					
ANR	731952	ArgumentList	"""asm.arch: cannot find (%s)\\n"""		731747	1					
ANR	731953	Argument	"""asm.arch: cannot find (%s)\\n"""		731747	0					
ANR	731954	PrimaryExpression	"""asm.arch: cannot find (%s)\\n"""		731747	0					
ANR	731955	Argument	node -> value		731747	1					
ANR	731956	PtrMemberAccess	node -> value		731747	0					
ANR	731957	Identifier	node		731747	0					
ANR	731958	Identifier	value		731747	1					
ANR	731959	ReturnStatement	return false ;	526:2:14320:14332	731747	1	True				
ANR	731960	Identifier	false		731747	0					
ANR	731961	IdentifierDeclStatement	"char * asm_cpu = strdup ( r_config_get ( core -> config , ""asm.cpu"" ) ) ;"	530:1:14426:14489	731747	11	True				
ANR	731962	IdentifierDecl	"* asm_cpu = strdup ( r_config_get ( core -> config , ""asm.cpu"" ) )"		731747	0					
ANR	731963	IdentifierDeclType	char *		731747	0					
ANR	731964	Identifier	asm_cpu		731747	1					
ANR	731965	AssignmentExpression	"* asm_cpu = strdup ( r_config_get ( core -> config , ""asm.cpu"" ) )"		731747	2		=			
ANR	731966	Identifier	asm_cpu		731747	0					
ANR	731967	CallExpression	"strdup ( r_config_get ( core -> config , ""asm.cpu"" ) )"		731747	1					
ANR	731968	Callee	strdup		731747	0					
ANR	731969	Identifier	strdup		731747	0					
ANR	731970	ArgumentList	"r_config_get ( core -> config , ""asm.cpu"" )"		731747	1					
ANR	731971	Argument	"r_config_get ( core -> config , ""asm.cpu"" )"		731747	0					
ANR	731972	CallExpression	"r_config_get ( core -> config , ""asm.cpu"" )"		731747	0					
ANR	731973	Callee	r_config_get		731747	0					
ANR	731974	Identifier	r_config_get		731747	0					
ANR	731975	ArgumentList	core -> config		731747	1					
ANR	731976	Argument	core -> config		731747	0					
ANR	731977	PtrMemberAccess	core -> config		731747	0					
ANR	731978	Identifier	core		731747	0					
ANR	731979	Identifier	config		731747	1					
ANR	731980	Argument	"""asm.cpu"""		731747	1					
ANR	731981	PrimaryExpression	"""asm.cpu"""		731747	0					
ANR	731982	IfStatement	if ( core -> assembler -> cur )		731747	12					
ANR	731983	Condition	core -> assembler -> cur	531:5:14496:14515	731747	0	True				
ANR	731984	PtrMemberAccess	core -> assembler -> cur		731747	0					
ANR	731985	PtrMemberAccess	core -> assembler		731747	0					
ANR	731986	Identifier	core		731747	0					
ANR	731987	Identifier	assembler		731747	1					
ANR	731988	Identifier	cur		731747	1					
ANR	731989	CompoundStatement		35:2:1030:1080	731747	1					
ANR	731990	IdentifierDeclStatement	const char * newAsmCPU = core -> assembler -> cur -> cpus ;	532:2:14522:14572	731747	0	True				
ANR	731991	IdentifierDecl	* newAsmCPU = core -> assembler -> cur -> cpus		731747	0					
ANR	731992	IdentifierDeclType	const char *		731747	0					
ANR	731993	Identifier	newAsmCPU		731747	1					
ANR	731994	AssignmentExpression	* newAsmCPU = core -> assembler -> cur -> cpus		731747	2		=			
ANR	731995	Identifier	newAsmCPU		731747	0					
ANR	731996	PtrMemberAccess	core -> assembler -> cur -> cpus		731747	1					
ANR	731997	PtrMemberAccess	core -> assembler -> cur		731747	0					
ANR	731998	PtrMemberAccess	core -> assembler		731747	0					
ANR	731999	Identifier	core		731747	0					
ANR	732000	Identifier	assembler		731747	1					
ANR	732001	Identifier	cur		731747	1					
ANR	732002	Identifier	cpus		731747	1					
ANR	732003	IfStatement	if ( newAsmCPU )		731747	1					
ANR	732004	Condition	newAsmCPU	533:6:14580:14588	731747	0	True				
ANR	732005	Identifier	newAsmCPU		731747	0					
ANR	732006	CompoundStatement		36:17:1099:1099	731747	1					
ANR	732007	IfStatement	if ( * newAsmCPU )		731747	0					
ANR	732008	Condition	* newAsmCPU	534:7:14600:14609	731747	0	True				
ANR	732009	UnaryOperationExpression	* newAsmCPU		731747	0					
ANR	732010	UnaryOperator	*		731747	0					
ANR	732011	Identifier	newAsmCPU		731747	1					
ANR	732012	CompoundStatement		39:4:1162:1193	731747	1					
ANR	732013	IdentifierDeclStatement	char * nac = strdup ( newAsmCPU ) ;	535:4:14618:14648	731747	0	True				
ANR	732014	IdentifierDecl	* nac = strdup ( newAsmCPU )		731747	0					
ANR	732015	IdentifierDeclType	char *		731747	0					
ANR	732016	Identifier	nac		731747	1					
ANR	732017	AssignmentExpression	* nac = strdup ( newAsmCPU )		731747	2		=			
ANR	732018	Identifier	nac		731747	0					
ANR	732019	CallExpression	strdup ( newAsmCPU )		731747	1					
ANR	732020	Callee	strdup		731747	0					
ANR	732021	Identifier	strdup		731747	0					
ANR	732022	ArgumentList	newAsmCPU		731747	1					
ANR	732023	Argument	newAsmCPU		731747	0					
ANR	732024	Identifier	newAsmCPU		731747	0					
ANR	732025	IdentifierDeclStatement	"char * comma = strchr ( nac , ',' ) ;"	536:4:14654:14685	731747	1	True				
ANR	732026	IdentifierDecl	"* comma = strchr ( nac , ',' )"		731747	0					
ANR	732027	IdentifierDeclType	char *		731747	0					
ANR	732028	Identifier	comma		731747	1					
ANR	732029	AssignmentExpression	"* comma = strchr ( nac , ',' )"		731747	2		=			
ANR	732030	Identifier	comma		731747	0					
ANR	732031	CallExpression	"strchr ( nac , ',' )"		731747	1					
ANR	732032	Callee	strchr		731747	0					
ANR	732033	Identifier	strchr		731747	0					
ANR	732034	ArgumentList	nac		731747	1					
ANR	732035	Argument	nac		731747	0					
ANR	732036	Identifier	nac		731747	0					
ANR	732037	Argument	"','"		731747	1					
ANR	732038	PrimaryExpression	"','"		731747	0					
ANR	732039	IfStatement	if ( comma )		731747	2					
ANR	732040	Condition	comma	537:8:14695:14699	731747	0	True				
ANR	732041	Identifier	comma		731747	0					
ANR	732042	CompoundStatement		40:15:1210:1210	731747	1					
ANR	732043	IfStatement	"if ( ! * asm_cpu || ( * asm_cpu && ! strstr ( nac , asm_cpu ) ) )"		731747	0					
ANR	732044	Condition	"! * asm_cpu || ( * asm_cpu && ! strstr ( nac , asm_cpu ) )"	538:9:14713:14760	731747	0	True				
ANR	732045	OrExpression	"! * asm_cpu || ( * asm_cpu && ! strstr ( nac , asm_cpu ) )"		731747	0		||			
ANR	732046	UnaryOperationExpression	! * asm_cpu		731747	0					
ANR	732047	UnaryOperator	!		731747	0					
ANR	732048	UnaryOperationExpression	* asm_cpu		731747	1					
ANR	732049	UnaryOperator	*		731747	0					
ANR	732050	Identifier	asm_cpu		731747	1					
ANR	732051	AndExpression	"* asm_cpu && ! strstr ( nac , asm_cpu )"		731747	1		&&			
ANR	732052	UnaryOperationExpression	* asm_cpu		731747	0					
ANR	732053	UnaryOperator	*		731747	0					
ANR	732054	Identifier	asm_cpu		731747	1					
ANR	732055	UnaryOperationExpression	"! strstr ( nac , asm_cpu )"		731747	1					
ANR	732056	UnaryOperator	!		731747	0					
ANR	732057	CallExpression	"strstr ( nac , asm_cpu )"		731747	1					
ANR	732058	Callee	strstr		731747	0					
ANR	732059	Identifier	strstr		731747	0					
ANR	732060	ArgumentList	nac		731747	1					
ANR	732061	Argument	nac		731747	0					
ANR	732062	Identifier	nac		731747	0					
ANR	732063	Argument	asm_cpu		731747	1					
ANR	732064	Identifier	asm_cpu		731747	0					
ANR	732065	CompoundStatement		41:59:1271:1271	731747	1					
ANR	732066	ExpressionStatement	* comma = 0	539:6:14771:14781	731747	0	True				
ANR	732067	AssignmentExpression	* comma = 0		731747	0		=			
ANR	732068	UnaryOperationExpression	* comma		731747	0					
ANR	732069	UnaryOperator	*		731747	0					
ANR	732070	Identifier	comma		731747	1					
ANR	732071	PrimaryExpression	0		731747	1					
ANR	732072	ExpressionStatement	"r_config_set ( core -> config , ""asm.cpu"" , nac )"	540:6:14789:14832	731747	1	True				
ANR	732073	CallExpression	"r_config_set ( core -> config , ""asm.cpu"" , nac )"		731747	0					
ANR	732074	Callee	r_config_set		731747	0					
ANR	732075	Identifier	r_config_set		731747	0					
ANR	732076	ArgumentList	core -> config		731747	1					
ANR	732077	Argument	core -> config		731747	0					
ANR	732078	PtrMemberAccess	core -> config		731747	0					
ANR	732079	Identifier	core		731747	0					
ANR	732080	Identifier	config		731747	1					
ANR	732081	Argument	"""asm.cpu"""		731747	1					
ANR	732082	PrimaryExpression	"""asm.cpu"""		731747	0					
ANR	732083	Argument	nac		731747	2					
ANR	732084	Identifier	nac		731747	0					
ANR	732085	ExpressionStatement	free ( nac )	543:4:14851:14861	731747	3	True				
ANR	732086	CallExpression	free ( nac )		731747	0					
ANR	732087	Callee	free		731747	0					
ANR	732088	Identifier	free		731747	0					
ANR	732089	ArgumentList	nac		731747	1					
ANR	732090	Argument	nac		731747	0					
ANR	732091	Identifier	nac		731747	0					
ANR	732092	ElseStatement	else		731747	0					
ANR	732093	CompoundStatement		47:10:1381:1381	731747	0					
ANR	732094	ExpressionStatement	"r_config_set ( core -> config , ""asm.cpu"" , """" )"	545:4:14879:14921	731747	0	True				
ANR	732095	CallExpression	"r_config_set ( core -> config , ""asm.cpu"" , """" )"		731747	0					
ANR	732096	Callee	r_config_set		731747	0					
ANR	732097	Identifier	r_config_set		731747	0					
ANR	732098	ArgumentList	core -> config		731747	1					
ANR	732099	Argument	core -> config		731747	0					
ANR	732100	PtrMemberAccess	core -> config		731747	0					
ANR	732101	Identifier	core		731747	0					
ANR	732102	Identifier	config		731747	1					
ANR	732103	Argument	"""asm.cpu"""		731747	1					
ANR	732104	PrimaryExpression	"""asm.cpu"""		731747	0					
ANR	732105	Argument	""""""		731747	2					
ANR	732106	PrimaryExpression	""""""		731747	0					
ANR	732107	ExpressionStatement	bits = core -> assembler -> cur -> bits	548:2:14934:14967	731747	2	True				
ANR	732108	AssignmentExpression	bits = core -> assembler -> cur -> bits		731747	0		=			
ANR	732109	Identifier	bits		731747	0					
ANR	732110	PtrMemberAccess	core -> assembler -> cur -> bits		731747	1					
ANR	732111	PtrMemberAccess	core -> assembler -> cur		731747	0					
ANR	732112	PtrMemberAccess	core -> assembler		731747	0					
ANR	732113	Identifier	core		731747	0					
ANR	732114	Identifier	assembler		731747	1					
ANR	732115	Identifier	cur		731747	1					
ANR	732116	Identifier	bits		731747	1					
ANR	732117	IfStatement	if ( 8 & bits )		731747	3					
ANR	732118	Condition	8 & bits	549:6:14975:14982	731747	0	True				
ANR	732119	BitAndExpression	8 & bits		731747	0		&			
ANR	732120	PrimaryExpression	8		731747	0					
ANR	732121	Identifier	bits		731747	1					
ANR	732122	CompoundStatement		52:16:1493:1493	731747	1					
ANR	732123	ExpressionStatement	bits = 8	550:3:14990:14998	731747	0	True				
ANR	732124	AssignmentExpression	bits = 8		731747	0		=			
ANR	732125	Identifier	bits		731747	0					
ANR	732126	PrimaryExpression	8		731747	1					
ANR	732127	ElseStatement	else		731747	0					
ANR	732128	IfStatement	if ( 16 & bits )		731747	0					
ANR	732129	Condition	16 & bits	551:13:15013:15021	731747	0	True				
ANR	732130	BitAndExpression	16 & bits		731747	0		&			
ANR	732131	PrimaryExpression	16		731747	0					
ANR	732132	Identifier	bits		731747	1					
ANR	732133	CompoundStatement		54:24:1532:1532	731747	1					
ANR	732134	ExpressionStatement	bits = 16	552:3:15029:15038	731747	0	True				
ANR	732135	AssignmentExpression	bits = 16		731747	0		=			
ANR	732136	Identifier	bits		731747	0					
ANR	732137	PrimaryExpression	16		731747	1					
ANR	732138	ElseStatement	else		731747	0					
ANR	732139	IfStatement	if ( 32 & bits )		731747	0					
ANR	732140	Condition	32 & bits	553:13:15053:15061	731747	0	True				
ANR	732141	BitAndExpression	32 & bits		731747	0		&			
ANR	732142	PrimaryExpression	32		731747	0					
ANR	732143	Identifier	bits		731747	1					
ANR	732144	CompoundStatement		56:24:1572:1572	731747	1					
ANR	732145	ExpressionStatement	bits = 32	554:3:15069:15078	731747	0	True				
ANR	732146	AssignmentExpression	bits = 32		731747	0		=			
ANR	732147	Identifier	bits		731747	0					
ANR	732148	PrimaryExpression	32		731747	1					
ANR	732149	ElseStatement	else		731747	0					
ANR	732150	CompoundStatement		58:9:1597:1597	731747	0					
ANR	732151	ExpressionStatement	bits = 64	556:3:15094:15103	731747	0	True				
ANR	732152	AssignmentExpression	bits = 64		731747	0		=			
ANR	732153	Identifier	bits		731747	0					
ANR	732154	PrimaryExpression	64		731747	1					
ANR	732155	ExpressionStatement	"snprintf ( asmparser , sizeof ( asmparser ) , ""%s.pseudo"" , node -> value )"	559:1:15113:15179	731747	13	True				
ANR	732156	CallExpression	"snprintf ( asmparser , sizeof ( asmparser ) , ""%s.pseudo"" , node -> value )"		731747	0					
ANR	732157	Callee	snprintf		731747	0					
ANR	732158	Identifier	snprintf		731747	0					
ANR	732159	ArgumentList	asmparser		731747	1					
ANR	732160	Argument	asmparser		731747	0					
ANR	732161	Identifier	asmparser		731747	0					
ANR	732162	Argument	sizeof ( asmparser )		731747	1					
ANR	732163	SizeofExpression	sizeof ( asmparser )		731747	0					
ANR	732164	Sizeof	sizeof		731747	0					
ANR	732165	SizeofOperand	asmparser		731747	1					
ANR	732166	Argument	"""%s.pseudo"""		731747	2					
ANR	732167	PrimaryExpression	"""%s.pseudo"""		731747	0					
ANR	732168	Argument	node -> value		731747	3					
ANR	732169	PtrMemberAccess	node -> value		731747	0					
ANR	732170	Identifier	node		731747	0					
ANR	732171	Identifier	value		731747	1					
ANR	732172	ExpressionStatement	"r_config_set ( core -> config , ""asm.parser"" , asmparser )"	560:1:15182:15234	731747	14	True				
ANR	732173	CallExpression	"r_config_set ( core -> config , ""asm.parser"" , asmparser )"		731747	0					
ANR	732174	Callee	r_config_set		731747	0					
ANR	732175	Identifier	r_config_set		731747	0					
ANR	732176	ArgumentList	core -> config		731747	1					
ANR	732177	Argument	core -> config		731747	0					
ANR	732178	PtrMemberAccess	core -> config		731747	0					
ANR	732179	Identifier	core		731747	0					
ANR	732180	Identifier	config		731747	1					
ANR	732181	Argument	"""asm.parser"""		731747	1					
ANR	732182	PrimaryExpression	"""asm.parser"""		731747	0					
ANR	732183	Argument	asmparser		731747	2					
ANR	732184	Identifier	asmparser		731747	0					
ANR	732185	IfStatement	if ( core -> assembler -> cur && core -> anal && ! ( core -> assembler -> cur -> bits & core -> anal -> bits ) )		731747	15					
ANR	732186	Condition	core -> assembler -> cur && core -> anal && ! ( core -> assembler -> cur -> bits & core -> anal -> bits )	561:5:15241:15331	731747	0	True				
ANR	732187	AndExpression	core -> assembler -> cur && core -> anal && ! ( core -> assembler -> cur -> bits & core -> anal -> bits )		731747	0		&&			
ANR	732188	PtrMemberAccess	core -> assembler -> cur		731747	0					
ANR	732189	PtrMemberAccess	core -> assembler		731747	0					
ANR	732190	Identifier	core		731747	0					
ANR	732191	Identifier	assembler		731747	1					
ANR	732192	Identifier	cur		731747	1					
ANR	732193	AndExpression	core -> anal && ! ( core -> assembler -> cur -> bits & core -> anal -> bits )		731747	1		&&			
ANR	732194	PtrMemberAccess	core -> anal		731747	0					
ANR	732195	Identifier	core		731747	0					
ANR	732196	Identifier	anal		731747	1					
ANR	732197	UnaryOperationExpression	! ( core -> assembler -> cur -> bits & core -> anal -> bits )		731747	1					
ANR	732198	UnaryOperator	!		731747	0					
ANR	732199	BitAndExpression	core -> assembler -> cur -> bits & core -> anal -> bits		731747	1		&			
ANR	732200	PtrMemberAccess	core -> assembler -> cur -> bits		731747	0					
ANR	732201	PtrMemberAccess	core -> assembler -> cur		731747	0					
ANR	732202	PtrMemberAccess	core -> assembler		731747	0					
ANR	732203	Identifier	core		731747	0					
ANR	732204	Identifier	assembler		731747	1					
ANR	732205	Identifier	cur		731747	1					
ANR	732206	Identifier	bits		731747	1					
ANR	732207	PtrMemberAccess	core -> anal -> bits		731747	1					
ANR	732208	PtrMemberAccess	core -> anal		731747	0					
ANR	732209	Identifier	core		731747	0					
ANR	732210	Identifier	anal		731747	1					
ANR	732211	Identifier	bits		731747	1					
ANR	732212	CompoundStatement		65:55:1842:1842	731747	1					
ANR	732213	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"	563:2:15338:15385	731747	0	True				
ANR	732214	CallExpression	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"		731747	0					
ANR	732215	Callee	r_config_set_i		731747	0					
ANR	732216	Identifier	r_config_set_i		731747	0					
ANR	732217	ArgumentList	core -> config		731747	1					
ANR	732218	Argument	core -> config		731747	0					
ANR	732219	PtrMemberAccess	core -> config		731747	0					
ANR	732220	Identifier	core		731747	0					
ANR	732221	Identifier	config		731747	1					
ANR	732222	Argument	"""asm.bits"""		731747	1					
ANR	732223	PrimaryExpression	"""asm.bits"""		731747	0					
ANR	732224	Argument	bits		731747	2					
ANR	732225	Identifier	bits		731747	0					
ANR	732226	ExpressionStatement	"r_debug_set_arch ( core -> dbg , node -> value , bits )"	567:1:15460:15507	731747	16	True				
ANR	732227	CallExpression	"r_debug_set_arch ( core -> dbg , node -> value , bits )"		731747	0					
ANR	732228	Callee	r_debug_set_arch		731747	0					
ANR	732229	Identifier	r_debug_set_arch		731747	0					
ANR	732230	ArgumentList	core -> dbg		731747	1					
ANR	732231	Argument	core -> dbg		731747	0					
ANR	732232	PtrMemberAccess	core -> dbg		731747	0					
ANR	732233	Identifier	core		731747	0					
ANR	732234	Identifier	dbg		731747	1					
ANR	732235	Argument	node -> value		731747	1					
ANR	732236	PtrMemberAccess	node -> value		731747	0					
ANR	732237	Identifier	node		731747	0					
ANR	732238	Identifier	value		731747	1					
ANR	732239	Argument	bits		731747	2					
ANR	732240	Identifier	bits		731747	0					
ANR	732241	IfStatement	"if ( ! r_config_set ( core -> config , ""anal.arch"" , node -> value ) )"		731747	17					
ANR	732242	Condition	"! r_config_set ( core -> config , ""anal.arch"" , node -> value )"	568:5:15514:15567	731747	0	True				
ANR	732243	UnaryOperationExpression	"! r_config_set ( core -> config , ""anal.arch"" , node -> value )"		731747	0					
ANR	732244	UnaryOperator	!		731747	0					
ANR	732245	CallExpression	"r_config_set ( core -> config , ""anal.arch"" , node -> value )"		731747	1					
ANR	732246	Callee	r_config_set		731747	0					
ANR	732247	Identifier	r_config_set		731747	0					
ANR	732248	ArgumentList	core -> config		731747	1					
ANR	732249	Argument	core -> config		731747	0					
ANR	732250	PtrMemberAccess	core -> config		731747	0					
ANR	732251	Identifier	core		731747	0					
ANR	732252	Identifier	config		731747	1					
ANR	732253	Argument	"""anal.arch"""		731747	1					
ANR	732254	PrimaryExpression	"""anal.arch"""		731747	0					
ANR	732255	Argument	node -> value		731747	2					
ANR	732256	PtrMemberAccess	node -> value		731747	0					
ANR	732257	Identifier	node		731747	0					
ANR	732258	Identifier	value		731747	1					
ANR	732259	CompoundStatement		72:2:2082:2116	731747	1					
ANR	732260	IdentifierDeclStatement	"char * p , * s = strdup ( node -> value ) ;"	569:2:15574:15608	731747	0	True				
ANR	732261	IdentifierDecl	* p		731747	0					
ANR	732262	IdentifierDeclType	char *		731747	0					
ANR	732263	Identifier	p		731747	1					
ANR	732264	IdentifierDecl	* s = strdup ( node -> value )		731747	1					
ANR	732265	IdentifierDeclType	char *		731747	0					
ANR	732266	Identifier	s		731747	1					
ANR	732267	AssignmentExpression	* s = strdup ( node -> value )		731747	2		=			
ANR	732268	Identifier	s		731747	0					
ANR	732269	CallExpression	strdup ( node -> value )		731747	1					
ANR	732270	Callee	strdup		731747	0					
ANR	732271	Identifier	strdup		731747	0					
ANR	732272	ArgumentList	node -> value		731747	1					
ANR	732273	Argument	node -> value		731747	0					
ANR	732274	PtrMemberAccess	node -> value		731747	0					
ANR	732275	Identifier	node		731747	0					
ANR	732276	Identifier	value		731747	1					
ANR	732277	IfStatement	if ( s )		731747	1					
ANR	732278	Condition	s	570:6:15616:15616	731747	0	True				
ANR	732279	Identifier	s		731747	0					
ANR	732280	CompoundStatement		73:9:2127:2127	731747	1					
ANR	732281	ExpressionStatement	"p = strchr ( s , '.' )"	571:3:15624:15643	731747	0	True				
ANR	732282	AssignmentExpression	"p = strchr ( s , '.' )"		731747	0		=			
ANR	732283	Identifier	p		731747	0					
ANR	732284	CallExpression	"strchr ( s , '.' )"		731747	1					
ANR	732285	Callee	strchr		731747	0					
ANR	732286	Identifier	strchr		731747	0					
ANR	732287	ArgumentList	s		731747	1					
ANR	732288	Argument	s		731747	0					
ANR	732289	Identifier	s		731747	0					
ANR	732290	Argument	'.'		731747	1					
ANR	732291	PrimaryExpression	'.'		731747	0					
ANR	732292	IfStatement	if ( p )		731747	1					
ANR	732293	Condition	p	572:7:15652:15652	731747	0	True				
ANR	732294	Identifier	p		731747	0					
ANR	732295	CompoundStatement		75:10:2163:2163	731747	1					
ANR	732296	ExpressionStatement	* p = 0	573:4:15661:15667	731747	0	True				
ANR	732297	AssignmentExpression	* p = 0		731747	0		=			
ANR	732298	UnaryOperationExpression	* p		731747	0					
ANR	732299	UnaryOperator	*		731747	0					
ANR	732300	Identifier	p		731747	1					
ANR	732301	PrimaryExpression	0		731747	1					
ANR	732302	IfStatement	"if ( ! r_config_set ( core -> config , ""anal.arch"" , s ) )"		731747	2					
ANR	732303	Condition	"! r_config_set ( core -> config , ""anal.arch"" , s )"	575:7:15681:15724	731747	0	True				
ANR	732304	UnaryOperationExpression	"! r_config_set ( core -> config , ""anal.arch"" , s )"		731747	0					
ANR	732305	UnaryOperator	!		731747	0					
ANR	732306	CallExpression	"r_config_set ( core -> config , ""anal.arch"" , s )"		731747	1					
ANR	732307	Callee	r_config_set		731747	0					
ANR	732308	Identifier	r_config_set		731747	0					
ANR	732309	ArgumentList	core -> config		731747	1					
ANR	732310	Argument	core -> config		731747	0					
ANR	732311	PtrMemberAccess	core -> config		731747	0					
ANR	732312	Identifier	core		731747	0					
ANR	732313	Identifier	config		731747	1					
ANR	732314	Argument	"""anal.arch"""		731747	1					
ANR	732315	PrimaryExpression	"""anal.arch"""		731747	0					
ANR	732316	Argument	s		731747	2					
ANR	732317	Identifier	s		731747	0					
ANR	732318	CompoundStatement		78:53:2235:2235	731747	1					
ANR	732319	ExpressionStatement	"r_config_set ( core -> config , ""anal.arch"" , ""null"" )"	577:4:15777:15825	731747	0	True				
ANR	732320	CallExpression	"r_config_set ( core -> config , ""anal.arch"" , ""null"" )"		731747	0					
ANR	732321	Callee	r_config_set		731747	0					
ANR	732322	Identifier	r_config_set		731747	0					
ANR	732323	ArgumentList	core -> config		731747	1					
ANR	732324	Argument	core -> config		731747	0					
ANR	732325	PtrMemberAccess	core -> config		731747	0					
ANR	732326	Identifier	core		731747	0					
ANR	732327	Identifier	config		731747	1					
ANR	732328	Argument	"""anal.arch"""		731747	1					
ANR	732329	PrimaryExpression	"""anal.arch"""		731747	0					
ANR	732330	Argument	"""null"""		731747	2					
ANR	732331	PrimaryExpression	"""null"""		731747	0					
ANR	732332	ExpressionStatement	free ( s )	579:3:15835:15843	731747	3	True				
ANR	732333	CallExpression	free ( s )		731747	0					
ANR	732334	Callee	free		731747	0					
ANR	732335	Identifier	free		731747	0					
ANR	732336	ArgumentList	s		731747	1					
ANR	732337	Argument	s		731747	0					
ANR	732338	Identifier	s		731747	0					
ANR	732339	IfStatement	if ( core -> anal )		731747	18					
ANR	732340	Condition	core -> anal	583:5:15873:15882	731747	0	True				
ANR	732341	PtrMemberAccess	core -> anal		731747	0					
ANR	732342	Identifier	core		731747	0					
ANR	732343	Identifier	anal		731747	1					
ANR	732344	CompoundStatement		87:2:2397:2456	731747	1					
ANR	732345	IdentifierDeclStatement	"const char * asmcpu = r_config_get ( core -> config , ""asm.cpu"" ) ;"	584:2:15889:15948	731747	0	True				
ANR	732346	IdentifierDecl	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		731747	0					
ANR	732347	IdentifierDeclType	const char *		731747	0					
ANR	732348	Identifier	asmcpu		731747	1					
ANR	732349	AssignmentExpression	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		731747	2		=			
ANR	732350	Identifier	asmcpu		731747	0					
ANR	732351	CallExpression	"r_config_get ( core -> config , ""asm.cpu"" )"		731747	1					
ANR	732352	Callee	r_config_get		731747	0					
ANR	732353	Identifier	r_config_get		731747	0					
ANR	732354	ArgumentList	core -> config		731747	1					
ANR	732355	Argument	core -> config		731747	0					
ANR	732356	PtrMemberAccess	core -> config		731747	0					
ANR	732357	Identifier	core		731747	0					
ANR	732358	Identifier	config		731747	1					
ANR	732359	Argument	"""asm.cpu"""		731747	1					
ANR	732360	PrimaryExpression	"""asm.cpu"""		731747	0					
ANR	732361	IfStatement	"if ( ! r_syscall_setup ( core -> anal -> syscall , node -> value , core -> anal -> bits , asmcpu , asmos ) )"		731747	1					
ANR	732362	Condition	"! r_syscall_setup ( core -> anal -> syscall , node -> value , core -> anal -> bits , asmcpu , asmos )"	585:6:15956:16039	731747	0	True				
ANR	732363	UnaryOperationExpression	"! r_syscall_setup ( core -> anal -> syscall , node -> value , core -> anal -> bits , asmcpu , asmos )"		731747	0					
ANR	732364	UnaryOperator	!		731747	0					
ANR	732365	CallExpression	"r_syscall_setup ( core -> anal -> syscall , node -> value , core -> anal -> bits , asmcpu , asmos )"		731747	1					
ANR	732366	Callee	r_syscall_setup		731747	0					
ANR	732367	Identifier	r_syscall_setup		731747	0					
ANR	732368	ArgumentList	core -> anal -> syscall		731747	1					
ANR	732369	Argument	core -> anal -> syscall		731747	0					
ANR	732370	PtrMemberAccess	core -> anal -> syscall		731747	0					
ANR	732371	PtrMemberAccess	core -> anal		731747	0					
ANR	732372	Identifier	core		731747	0					
ANR	732373	Identifier	anal		731747	1					
ANR	732374	Identifier	syscall		731747	1					
ANR	732375	Argument	node -> value		731747	1					
ANR	732376	PtrMemberAccess	node -> value		731747	0					
ANR	732377	Identifier	node		731747	0					
ANR	732378	Identifier	value		731747	1					
ANR	732379	Argument	core -> anal -> bits		731747	2					
ANR	732380	PtrMemberAccess	core -> anal -> bits		731747	0					
ANR	732381	PtrMemberAccess	core -> anal		731747	0					
ANR	732382	Identifier	core		731747	0					
ANR	732383	Identifier	anal		731747	1					
ANR	732384	Identifier	bits		731747	1					
ANR	732385	Argument	asmcpu		731747	3					
ANR	732386	Identifier	asmcpu		731747	0					
ANR	732387	Argument	asmos		731747	4					
ANR	732388	Identifier	asmos		731747	0					
ANR	732389	CompoundStatement		88:92:2550:2550	731747	1					
ANR	732390	ExpressionStatement	"__setsegoff ( core -> config , node -> value , core -> assembler -> bits )"	592:1:16279:16341	731747	19	True				
ANR	732391	CallExpression	"__setsegoff ( core -> config , node -> value , core -> assembler -> bits )"		731747	0					
ANR	732392	Callee	__setsegoff		731747	0					
ANR	732393	Identifier	__setsegoff		731747	0					
ANR	732394	ArgumentList	core -> config		731747	1					
ANR	732395	Argument	core -> config		731747	0					
ANR	732396	PtrMemberAccess	core -> config		731747	0					
ANR	732397	Identifier	core		731747	0					
ANR	732398	Identifier	config		731747	1					
ANR	732399	Argument	node -> value		731747	1					
ANR	732400	PtrMemberAccess	node -> value		731747	0					
ANR	732401	Identifier	node		731747	0					
ANR	732402	Identifier	value		731747	1					
ANR	732403	Argument	core -> assembler -> bits		731747	2					
ANR	732404	PtrMemberAccess	core -> assembler -> bits		731747	0					
ANR	732405	PtrMemberAccess	core -> assembler		731747	0					
ANR	732406	Identifier	core		731747	0					
ANR	732407	Identifier	assembler		731747	1					
ANR	732408	Identifier	bits		731747	1					
ANR	732409	IdentifierDeclStatement	int bigbin = r_bin_is_big_endian ( core -> bin ) ;	595:1:16374:16418	731747	20	True				
ANR	732410	IdentifierDecl	bigbin = r_bin_is_big_endian ( core -> bin )		731747	0					
ANR	732411	IdentifierDeclType	int		731747	0					
ANR	732412	Identifier	bigbin		731747	1					
ANR	732413	AssignmentExpression	bigbin = r_bin_is_big_endian ( core -> bin )		731747	2		=			
ANR	732414	Identifier	bigbin		731747	0					
ANR	732415	CallExpression	r_bin_is_big_endian ( core -> bin )		731747	1					
ANR	732416	Callee	r_bin_is_big_endian		731747	0					
ANR	732417	Identifier	r_bin_is_big_endian		731747	0					
ANR	732418	ArgumentList	core -> bin		731747	1					
ANR	732419	Argument	core -> bin		731747	0					
ANR	732420	PtrMemberAccess	core -> bin		731747	0					
ANR	732421	Identifier	core		731747	0					
ANR	732422	Identifier	bin		731747	1					
ANR	732423	IfStatement	if ( bigbin == - 1 )		731747	21					
ANR	732424	Condition	bigbin == - 1	596:5:16425:16436	731747	0	True				
ANR	732425	EqualityExpression	bigbin == - 1		731747	0		==			
ANR	732426	Identifier	bigbin		731747	0					
ANR	732427	UnaryOperationExpression	- 1		731747	1					
ANR	732428	UnaryOperator	-		731747	0					
ANR	732429	PrimaryExpression	1		731747	1					
ANR	732430	CompoundStatement		99:65:2993:2993	731747	1					
ANR	732431	ExpressionStatement	"bigbin = r_config_get_i ( core -> config , ""cfg.bigendian"" )"	597:2:16489:16544	731747	0	True				
ANR	732432	AssignmentExpression	"bigbin = r_config_get_i ( core -> config , ""cfg.bigendian"" )"		731747	0		=			
ANR	732433	Identifier	bigbin		731747	0					
ANR	732434	CallExpression	"r_config_get_i ( core -> config , ""cfg.bigendian"" )"		731747	1					
ANR	732435	Callee	r_config_get_i		731747	0					
ANR	732436	Identifier	r_config_get_i		731747	0					
ANR	732437	ArgumentList	core -> config		731747	1					
ANR	732438	Argument	core -> config		731747	0					
ANR	732439	PtrMemberAccess	core -> config		731747	0					
ANR	732440	Identifier	core		731747	0					
ANR	732441	Identifier	config		731747	1					
ANR	732442	Argument	"""cfg.bigendian"""		731747	1					
ANR	732443	PrimaryExpression	"""cfg.bigendian"""		731747	0					
ANR	732444	ExpressionStatement	"r_asm_set_big_endian ( core -> assembler , bigbin )"	601:1:16597:16643	731747	22	True				
ANR	732445	CallExpression	"r_asm_set_big_endian ( core -> assembler , bigbin )"		731747	0					
ANR	732446	Callee	r_asm_set_big_endian		731747	0					
ANR	732447	Identifier	r_asm_set_big_endian		731747	0					
ANR	732448	ArgumentList	core -> assembler		731747	1					
ANR	732449	Argument	core -> assembler		731747	0					
ANR	732450	PtrMemberAccess	core -> assembler		731747	0					
ANR	732451	Identifier	core		731747	0					
ANR	732452	Identifier	assembler		731747	1					
ANR	732453	Argument	bigbin		731747	1					
ANR	732454	Identifier	bigbin		731747	0					
ANR	732455	ExpressionStatement	core -> print -> big_endian = bigbin	603:1:16688:16720	731747	23	True				
ANR	732456	AssignmentExpression	core -> print -> big_endian = bigbin		731747	0		=			
ANR	732457	PtrMemberAccess	core -> print -> big_endian		731747	0					
ANR	732458	PtrMemberAccess	core -> print		731747	0					
ANR	732459	Identifier	core		731747	0					
ANR	732460	Identifier	print		731747	1					
ANR	732461	Identifier	big_endian		731747	1					
ANR	732462	Identifier	bigbin		731747	1					
ANR	732463	ExpressionStatement	"r_asm_set_cpu ( core -> assembler , asm_cpu )"	605:1:16724:16764	731747	24	True				
ANR	732464	CallExpression	"r_asm_set_cpu ( core -> assembler , asm_cpu )"		731747	0					
ANR	732465	Callee	r_asm_set_cpu		731747	0					
ANR	732466	Identifier	r_asm_set_cpu		731747	0					
ANR	732467	ArgumentList	core -> assembler		731747	1					
ANR	732468	Argument	core -> assembler		731747	0					
ANR	732469	PtrMemberAccess	core -> assembler		731747	0					
ANR	732470	Identifier	core		731747	0					
ANR	732471	Identifier	assembler		731747	1					
ANR	732472	Argument	asm_cpu		731747	1					
ANR	732473	Identifier	asm_cpu		731747	0					
ANR	732474	ExpressionStatement	free ( asm_cpu )	606:1:16767:16781	731747	25	True				
ANR	732475	CallExpression	free ( asm_cpu )		731747	0					
ANR	732476	Callee	free		731747	0					
ANR	732477	Identifier	free		731747	0					
ANR	732478	ArgumentList	asm_cpu		731747	1					
ANR	732479	Argument	asm_cpu		731747	0					
ANR	732480	Identifier	asm_cpu		731747	0					
ANR	732481	IdentifierDeclStatement	"RConfigNode * asmcpu = r_config_node_get ( core -> config , ""asm.cpu"" ) ;"	607:1:16784:16849	731747	26	True				
ANR	732482	IdentifierDecl	"* asmcpu = r_config_node_get ( core -> config , ""asm.cpu"" )"		731747	0					
ANR	732483	IdentifierDeclType	RConfigNode *		731747	0					
ANR	732484	Identifier	asmcpu		731747	1					
ANR	732485	AssignmentExpression	"* asmcpu = r_config_node_get ( core -> config , ""asm.cpu"" )"		731747	2		=			
ANR	732486	Identifier	asmcpu		731747	0					
ANR	732487	CallExpression	"r_config_node_get ( core -> config , ""asm.cpu"" )"		731747	1					
ANR	732488	Callee	r_config_node_get		731747	0					
ANR	732489	Identifier	r_config_node_get		731747	0					
ANR	732490	ArgumentList	core -> config		731747	1					
ANR	732491	Argument	core -> config		731747	0					
ANR	732492	PtrMemberAccess	core -> config		731747	0					
ANR	732493	Identifier	core		731747	0					
ANR	732494	Identifier	config		731747	1					
ANR	732495	Argument	"""asm.cpu"""		731747	1					
ANR	732496	PrimaryExpression	"""asm.cpu"""		731747	0					
ANR	732497	IfStatement	if ( asmcpu )		731747	27					
ANR	732498	Condition	asmcpu	608:5:16856:16861	731747	0	True				
ANR	732499	Identifier	asmcpu		731747	0					
ANR	732500	CompoundStatement		111:13:3372:3372	731747	1					
ANR	732501	ExpressionStatement	"update_asmcpu_options ( core , asmcpu )"	609:2:16868:16904	731747	0	True				
ANR	732502	CallExpression	"update_asmcpu_options ( core , asmcpu )"		731747	0					
ANR	732503	Callee	update_asmcpu_options		731747	0					
ANR	732504	Identifier	update_asmcpu_options		731747	0					
ANR	732505	ArgumentList	core		731747	1					
ANR	732506	Argument	core		731747	0					
ANR	732507	Identifier	core		731747	0					
ANR	732508	Argument	asmcpu		731747	1					
ANR	732509	Identifier	asmcpu		731747	0					
ANR	732510	CompoundStatement		115:2:3422:3481	731747	28					
ANR	732511	IdentifierDeclStatement	"int v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN ) ;"	612:2:16914:16973	731747	0	True				
ANR	732512	IdentifierDecl	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		731747	0					
ANR	732513	IdentifierDeclType	int		731747	0					
ANR	732514	Identifier	v		731747	1					
ANR	732515	AssignmentExpression	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		731747	2		=			
ANR	732516	Identifier	v		731747	0					
ANR	732517	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		731747	1					
ANR	732518	Callee	r_anal_archinfo		731747	0					
ANR	732519	Identifier	r_anal_archinfo		731747	0					
ANR	732520	ArgumentList	core -> anal		731747	1					
ANR	732521	Argument	core -> anal		731747	0					
ANR	732522	PtrMemberAccess	core -> anal		731747	0					
ANR	732523	Identifier	core		731747	0					
ANR	732524	Identifier	anal		731747	1					
ANR	732525	Argument	R_ANAL_ARCHINFO_ALIGN		731747	1					
ANR	732526	Identifier	R_ANAL_ARCHINFO_ALIGN		731747	0					
ANR	732527	IfStatement	if ( v != - 1 )		731747	1					
ANR	732528	Condition	v != - 1	613:6:16981:16987	731747	0	True				
ANR	732529	EqualityExpression	v != - 1		731747	0		!=			
ANR	732530	Identifier	v		731747	0					
ANR	732531	UnaryOperationExpression	- 1		731747	1					
ANR	732532	UnaryOperator	-		731747	0					
ANR	732533	PrimaryExpression	1		731747	1					
ANR	732534	CompoundStatement		116:15:3498:3498	731747	1					
ANR	732535	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.pcalign"" , v )"	614:3:16995:17042	731747	0	True				
ANR	732536	CallExpression	"r_config_set_i ( core -> config , ""asm.pcalign"" , v )"		731747	0					
ANR	732537	Callee	r_config_set_i		731747	0					
ANR	732538	Identifier	r_config_set_i		731747	0					
ANR	732539	ArgumentList	core -> config		731747	1					
ANR	732540	Argument	core -> config		731747	0					
ANR	732541	PtrMemberAccess	core -> config		731747	0					
ANR	732542	Identifier	core		731747	0					
ANR	732543	Identifier	config		731747	1					
ANR	732544	Argument	"""asm.pcalign"""		731747	1					
ANR	732545	PrimaryExpression	"""asm.pcalign"""		731747	0					
ANR	732546	Argument	v		731747	2					
ANR	732547	Identifier	v		731747	0					
ANR	732548	ElseStatement	else		731747	0					
ANR	732549	CompoundStatement		118:9:3561:3561	731747	0					
ANR	732550	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.pcalign"" , 0 )"	616:3:17058:17105	731747	0	True				
ANR	732551	CallExpression	"r_config_set_i ( core -> config , ""asm.pcalign"" , 0 )"		731747	0					
ANR	732552	Callee	r_config_set_i		731747	0					
ANR	732553	Identifier	r_config_set_i		731747	0					
ANR	732554	ArgumentList	core -> config		731747	1					
ANR	732555	Argument	core -> config		731747	0					
ANR	732556	PtrMemberAccess	core -> config		731747	0					
ANR	732557	Identifier	core		731747	0					
ANR	732558	Identifier	config		731747	1					
ANR	732559	Argument	"""asm.pcalign"""		731747	1					
ANR	732560	PrimaryExpression	"""asm.pcalign"""		731747	0					
ANR	732561	Argument	0		731747	2					
ANR	732562	PrimaryExpression	0		731747	0					
ANR	732563	IfStatement	if ( ! core -> anal || ! core -> anal -> sdb_types )		731747	29					
ANR	732564	Condition	! core -> anal || ! core -> anal -> sdb_types	624:5:17333:17369	731747	0	True				
ANR	732565	OrExpression	! core -> anal || ! core -> anal -> sdb_types		731747	0		||			
ANR	732566	UnaryOperationExpression	! core -> anal		731747	0					
ANR	732567	UnaryOperator	!		731747	0					
ANR	732568	PtrMemberAccess	core -> anal		731747	1					
ANR	732569	Identifier	core		731747	0					
ANR	732570	Identifier	anal		731747	1					
ANR	732571	UnaryOperationExpression	! core -> anal -> sdb_types		731747	1					
ANR	732572	UnaryOperator	!		731747	0					
ANR	732573	PtrMemberAccess	core -> anal -> sdb_types		731747	1					
ANR	732574	PtrMemberAccess	core -> anal		731747	0					
ANR	732575	Identifier	core		731747	0					
ANR	732576	Identifier	anal		731747	1					
ANR	732577	Identifier	sdb_types		731747	1					
ANR	732578	CompoundStatement		127:44:3880:3880	731747	1					
ANR	732579	ExpressionStatement	r_core_anal_type_init ( core )	625:2:17376:17404	731747	0	True				
ANR	732580	CallExpression	r_core_anal_type_init ( core )		731747	0					
ANR	732581	Callee	r_core_anal_type_init		731747	0					
ANR	732582	Identifier	r_core_anal_type_init		731747	0					
ANR	732583	ArgumentList	core		731747	1					
ANR	732584	Argument	core		731747	0					
ANR	732585	Identifier	core		731747	0					
ANR	732586	ExpressionStatement	r_core_anal_cc_init ( core )	627:1:17410:17436	731747	30	True				
ANR	732587	CallExpression	r_core_anal_cc_init ( core )		731747	0					
ANR	732588	Callee	r_core_anal_cc_init		731747	0					
ANR	732589	Identifier	r_core_anal_cc_init		731747	0					
ANR	732590	ArgumentList	core		731747	1					
ANR	732591	Argument	core		731747	0					
ANR	732592	Identifier	core		731747	0					
ANR	732593	ReturnStatement	return true ;	628:1:17439:17450	731747	31	True				
ANR	732594	Identifier	true		731747	0					
ANR	732595	ReturnType	static bool		731747	1					
ANR	732596	Identifier	cb_asmarch		731747	2					
ANR	732597	ParameterList	"void * user , void * data"		731747	3					
ANR	732598	Parameter	void * user	498:23:13467:13476	731747	0	True				
ANR	732599	ParameterType	void *		731747	0					
ANR	732600	Identifier	user		731747	1					
ANR	732601	Parameter	void * data	498:35:13479:13488	731747	1	True				
ANR	732602	ParameterType	void *		731747	0					
ANR	732603	Identifier	data		731747	1					
ANR	732604	CFGEntryNode	ENTRY		731747		True				
ANR	732605	CFGExitNode	EXIT		731747		True				
ANR	732606	Symbol	r_bin_is_big_endian		731747						
ANR	732607	Symbol	data		731747						
ANR	732608	Symbol	r_anal_archinfo		731747						
ANR	732609	Symbol	strchr		731747						
ANR	732610	Symbol	* core -> assembler		731747						
ANR	732611	Symbol	strlen		731747						
ANR	732612	Symbol	nac		731747						
ANR	732613	Symbol	asmos		731747						
ANR	732614	Symbol	core -> egg		731747						
ANR	732615	Symbol	* node		731747						
ANR	732616	Symbol	asmparser		731747						
ANR	732617	Symbol	core -> bin		731747						
ANR	732618	Symbol	* newAsmCPU		731747						
ANR	732619	Symbol	* node -> value		731747						
ANR	732620	Symbol	NULL		731747						
ANR	732621	Symbol	bits		731747						
ANR	732622	Symbol	core -> print -> big_endian		731747						
ANR	732623	Symbol	core		731747						
ANR	732624	Symbol	node		731747						
ANR	732625	Symbol	* * * core		731747						
ANR	732626	Symbol	* * node		731747						
ANR	732627	Symbol	strstr		731747						
ANR	732628	Symbol	bigbin		731747						
ANR	732629	Symbol	r_config_get_i		731747						
ANR	732630	Symbol	true		731747						
ANR	732631	Symbol	core -> assembler -> cur -> bits		731747						
ANR	732632	Symbol	core -> print		731747						
ANR	732633	Symbol	r_config_node_get		731747						
ANR	732634	Symbol	asmcpu		731747						
ANR	732635	Symbol	asm_cpu		731747						
ANR	732636	Symbol	* core -> assembler -> cur		731747						
ANR	732637	Symbol	* core		731747						
ANR	732638	Symbol	r_config_get		731747						
ANR	732639	Symbol	core -> assembler -> bits		731747						
ANR	732640	Symbol	core -> assembler		731747						
ANR	732641	Symbol	core -> anal -> sdb_types		731747						
ANR	732642	Symbol	core -> anal		731747						
ANR	732643	Symbol	R_SYS_BITS		731747						
ANR	732644	Symbol	* comma		731747						
ANR	732645	Symbol	r_asm_use		731747						
ANR	732646	Symbol	newAsmCPU		731747						
ANR	732647	Symbol	r_config_set		731747						
ANR	732648	Symbol	* * core		731747						
ANR	732649	Symbol	core -> config		731747						
ANR	732650	Symbol	core -> anal -> bits		731747						
ANR	732651	Symbol	false		731747						
ANR	732652	Symbol	* asm_cpu		731747						
ANR	732653	Symbol	core -> assembler -> cur -> cpus		731747						
ANR	732654	Symbol	core -> anal -> syscall		731747						
ANR	732655	Symbol	node -> value		731747						
ANR	732656	Symbol	p		731747						
ANR	732657	Symbol	R_ANAL_ARCHINFO_ALIGN		731747						
ANR	732658	Symbol	comma		731747						
ANR	732659	Symbol	* core -> print		731747						
ANR	732660	Symbol	* core -> anal		731747						
ANR	732661	Symbol	s		731747						
ANR	732662	Symbol	v		731747						
ANR	732663	Symbol	* * core -> assembler		731747						
ANR	732664	Symbol	core -> assembler -> cur		731747						
ANR	732665	Symbol	* p		731747						
ANR	732666	Symbol	strdup		731747						
ANR	732667	Symbol	r_syscall_setup		731747						
ANR	732668	Symbol	R_SYS_OS		731747						
ANR	732669	Symbol	user		731747						
ANR	732670	Symbol	core -> dbg		731747						
ANR	732671	Function	cb_dbgbpsize	631:0:17455:17630							
ANR	732672	FunctionDef	"cb_dbgbpsize (void * user , void * data)"		732671	0					
ANR	732673	CompoundStatement		631:49:17504:17630	732671	0					
ANR	732674	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	632:1:17507:17535	732671	0	True				
ANR	732675	IdentifierDecl	* core = ( RCore * ) user		732671	0					
ANR	732676	IdentifierDeclType	RCore *		732671	0					
ANR	732677	Identifier	core		732671	1					
ANR	732678	AssignmentExpression	* core = ( RCore * ) user		732671	2		=			
ANR	732679	Identifier	core		732671	0					
ANR	732680	CastExpression	( RCore * ) user		732671	1					
ANR	732681	CastTarget	RCore *		732671	0					
ANR	732682	Identifier	user		732671	1					
ANR	732683	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	633:1:17538:17578	732671	1	True				
ANR	732684	IdentifierDecl	* node = ( RConfigNode * ) data		732671	0					
ANR	732685	IdentifierDeclType	RConfigNode *		732671	0					
ANR	732686	Identifier	node		732671	1					
ANR	732687	AssignmentExpression	* node = ( RConfigNode * ) data		732671	2		=			
ANR	732688	Identifier	node		732671	0					
ANR	732689	CastExpression	( RConfigNode * ) data		732671	1					
ANR	732690	CastTarget	RConfigNode *		732671	0					
ANR	732691	Identifier	data		732671	1					
ANR	732692	ExpressionStatement	core -> dbg -> bpsize = node -> i_value	634:1:17581:17614	732671	2	True				
ANR	732693	AssignmentExpression	core -> dbg -> bpsize = node -> i_value		732671	0		=			
ANR	732694	PtrMemberAccess	core -> dbg -> bpsize		732671	0					
ANR	732695	PtrMemberAccess	core -> dbg		732671	0					
ANR	732696	Identifier	core		732671	0					
ANR	732697	Identifier	dbg		732671	1					
ANR	732698	Identifier	bpsize		732671	1					
ANR	732699	PtrMemberAccess	node -> i_value		732671	1					
ANR	732700	Identifier	node		732671	0					
ANR	732701	Identifier	i_value		732671	1					
ANR	732702	ReturnStatement	return true ;	635:1:17617:17628	732671	3	True				
ANR	732703	Identifier	true		732671	0					
ANR	732704	ReturnType	static bool		732671	1					
ANR	732705	Identifier	cb_dbgbpsize		732671	2					
ANR	732706	ParameterList	"void * user , void * data"		732671	3					
ANR	732707	Parameter	void * user	631:25:17480:17489	732671	0	True				
ANR	732708	ParameterType	void *		732671	0					
ANR	732709	Identifier	user		732671	1					
ANR	732710	Parameter	void * data	631:37:17492:17501	732671	1	True				
ANR	732711	ParameterType	void *		732671	0					
ANR	732712	Identifier	data		732671	1					
ANR	732713	CFGEntryNode	ENTRY		732671		True				
ANR	732714	CFGExitNode	EXIT		732671		True				
ANR	732715	Symbol	core		732671						
ANR	732716	Symbol	node		732671						
ANR	732717	Symbol	data		732671						
ANR	732718	Symbol	* core		732671						
ANR	732719	Symbol	true		732671						
ANR	732720	Symbol	* node		732671						
ANR	732721	Symbol	core -> dbg -> bpsize		732671						
ANR	732722	Symbol	user		732671						
ANR	732723	Symbol	* core -> dbg		732671						
ANR	732724	Symbol	* * core		732671						
ANR	732725	Symbol	core -> dbg		732671						
ANR	732726	Symbol	node -> i_value		732671						
ANR	732727	Function	cb_dbgbtdepth	638:0:17633:17810							
ANR	732728	FunctionDef	"cb_dbgbtdepth (void * user , void * data)"		732727	0					
ANR	732729	CompoundStatement		638:50:17683:17810	732727	0					
ANR	732730	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	639:1:17686:17714	732727	0	True				
ANR	732731	IdentifierDecl	* core = ( RCore * ) user		732727	0					
ANR	732732	IdentifierDeclType	RCore *		732727	0					
ANR	732733	Identifier	core		732727	1					
ANR	732734	AssignmentExpression	* core = ( RCore * ) user		732727	2		=			
ANR	732735	Identifier	core		732727	0					
ANR	732736	CastExpression	( RCore * ) user		732727	1					
ANR	732737	CastTarget	RCore *		732727	0					
ANR	732738	Identifier	user		732727	1					
ANR	732739	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	640:1:17717:17757	732727	1	True				
ANR	732740	IdentifierDecl	* node = ( RConfigNode * ) data		732727	0					
ANR	732741	IdentifierDeclType	RConfigNode *		732727	0					
ANR	732742	Identifier	node		732727	1					
ANR	732743	AssignmentExpression	* node = ( RConfigNode * ) data		732727	2		=			
ANR	732744	Identifier	node		732727	0					
ANR	732745	CastExpression	( RConfigNode * ) data		732727	1					
ANR	732746	CastTarget	RConfigNode *		732727	0					
ANR	732747	Identifier	data		732727	1					
ANR	732748	ExpressionStatement	core -> dbg -> btdepth = node -> i_value	641:1:17760:17794	732727	2	True				
ANR	732749	AssignmentExpression	core -> dbg -> btdepth = node -> i_value		732727	0		=			
ANR	732750	PtrMemberAccess	core -> dbg -> btdepth		732727	0					
ANR	732751	PtrMemberAccess	core -> dbg		732727	0					
ANR	732752	Identifier	core		732727	0					
ANR	732753	Identifier	dbg		732727	1					
ANR	732754	Identifier	btdepth		732727	1					
ANR	732755	PtrMemberAccess	node -> i_value		732727	1					
ANR	732756	Identifier	node		732727	0					
ANR	732757	Identifier	i_value		732727	1					
ANR	732758	ReturnStatement	return true ;	642:1:17797:17808	732727	3	True				
ANR	732759	Identifier	true		732727	0					
ANR	732760	ReturnType	static bool		732727	1					
ANR	732761	Identifier	cb_dbgbtdepth		732727	2					
ANR	732762	ParameterList	"void * user , void * data"		732727	3					
ANR	732763	Parameter	void * user	638:26:17659:17668	732727	0	True				
ANR	732764	ParameterType	void *		732727	0					
ANR	732765	Identifier	user		732727	1					
ANR	732766	Parameter	void * data	638:38:17671:17680	732727	1	True				
ANR	732767	ParameterType	void *		732727	0					
ANR	732768	Identifier	data		732727	1					
ANR	732769	CFGEntryNode	ENTRY		732727		True				
ANR	732770	CFGExitNode	EXIT		732727		True				
ANR	732771	Symbol	core		732727						
ANR	732772	Symbol	node		732727						
ANR	732773	Symbol	data		732727						
ANR	732774	Symbol	core -> dbg -> btdepth		732727						
ANR	732775	Symbol	* core		732727						
ANR	732776	Symbol	true		732727						
ANR	732777	Symbol	* node		732727						
ANR	732778	Symbol	user		732727						
ANR	732779	Symbol	* core -> dbg		732727						
ANR	732780	Symbol	* * core		732727						
ANR	732781	Symbol	node -> i_value		732727						
ANR	732782	Symbol	core -> dbg		732727						
ANR	732783	Function	cb_asmbits	645:0:17813:20259							
ANR	732784	FunctionDef	"cb_asmbits (void * user , void * data)"		732783	0					
ANR	732785	CompoundStatement		645:47:17860:20259	732783	0					
ANR	732786	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	646:1:17863:17891	732783	0	True				
ANR	732787	IdentifierDecl	* core = ( RCore * ) user		732783	0					
ANR	732788	IdentifierDeclType	RCore *		732783	0					
ANR	732789	Identifier	core		732783	1					
ANR	732790	AssignmentExpression	* core = ( RCore * ) user		732783	2		=			
ANR	732791	Identifier	core		732783	0					
ANR	732792	CastExpression	( RCore * ) user		732783	1					
ANR	732793	CastTarget	RCore *		732783	0					
ANR	732794	Identifier	user		732783	1					
ANR	732795	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	647:1:17894:17934	732783	1	True				
ANR	732796	IdentifierDecl	* node = ( RConfigNode * ) data		732783	0					
ANR	732797	IdentifierDeclType	RConfigNode *		732783	0					
ANR	732798	Identifier	node		732783	1					
ANR	732799	AssignmentExpression	* node = ( RConfigNode * ) data		732783	2		=			
ANR	732800	Identifier	node		732783	0					
ANR	732801	CastExpression	( RConfigNode * ) data		732783	1					
ANR	732802	CastTarget	RConfigNode *		732783	0					
ANR	732803	Identifier	data		732783	1					
ANR	732804	IdentifierDeclStatement	int ret = 0 ;	648:1:17937:17948	732783	2	True				
ANR	732805	IdentifierDecl	ret = 0		732783	0					
ANR	732806	IdentifierDeclType	int		732783	0					
ANR	732807	Identifier	ret		732783	1					
ANR	732808	AssignmentExpression	ret = 0		732783	2		=			
ANR	732809	Identifier	ret		732783	0					
ANR	732810	PrimaryExpression	0		732783	1					
ANR	732811	IfStatement	if ( ! core )		732783	3					
ANR	732812	Condition	! core	649:5:17955:17959	732783	0	True				
ANR	732813	UnaryOperationExpression	! core		732783	0					
ANR	732814	UnaryOperator	!		732783	0					
ANR	732815	Identifier	core		732783	1					
ANR	732816	CompoundStatement		5:12:101:101	732783	1					
ANR	732817	ExpressionStatement	"eprintf ( ""user can't be NULL\\n"" )"	650:2:17966:17998	732783	0	True				
ANR	732818	CallExpression	"eprintf ( ""user can't be NULL\\n"" )"		732783	0					
ANR	732819	Callee	eprintf		732783	0					
ANR	732820	Identifier	eprintf		732783	0					
ANR	732821	ArgumentList	"""user can't be NULL\\n"""		732783	1					
ANR	732822	Argument	"""user can't be NULL\\n"""		732783	0					
ANR	732823	PrimaryExpression	"""user can't be NULL\\n"""		732783	0					
ANR	732824	ReturnStatement	return false ;	651:2:18002:18014	732783	1	True				
ANR	732825	Identifier	false		732783	0					
ANR	732826	IdentifierDeclStatement	int bits = node -> i_value ;	654:1:18021:18045	732783	4	True				
ANR	732827	IdentifierDecl	bits = node -> i_value		732783	0					
ANR	732828	IdentifierDeclType	int		732783	0					
ANR	732829	Identifier	bits		732783	1					
ANR	732830	AssignmentExpression	bits = node -> i_value		732783	2		=			
ANR	732831	Identifier	bits		732783	0					
ANR	732832	PtrMemberAccess	node -> i_value		732783	1					
ANR	732833	Identifier	node		732783	0					
ANR	732834	Identifier	i_value		732783	1					
ANR	732835	IfStatement	if ( bits == core -> assembler -> bits && bits == core -> anal -> bits && bits == core -> dbg -> bits )		732783	5					
ANR	732836	Condition	bits == core -> assembler -> bits && bits == core -> anal -> bits && bits == core -> dbg -> bits	657:5:18146:18229	732783	0	True				
ANR	732837	AndExpression	bits == core -> assembler -> bits && bits == core -> anal -> bits && bits == core -> dbg -> bits		732783	0		&&			
ANR	732838	EqualityExpression	bits == core -> assembler -> bits		732783	0		==			
ANR	732839	Identifier	bits		732783	0					
ANR	732840	PtrMemberAccess	core -> assembler -> bits		732783	1					
ANR	732841	PtrMemberAccess	core -> assembler		732783	0					
ANR	732842	Identifier	core		732783	0					
ANR	732843	Identifier	assembler		732783	1					
ANR	732844	Identifier	bits		732783	1					
ANR	732845	AndExpression	bits == core -> anal -> bits && bits == core -> dbg -> bits		732783	1		&&			
ANR	732846	EqualityExpression	bits == core -> anal -> bits		732783	0		==			
ANR	732847	Identifier	bits		732783	0					
ANR	732848	PtrMemberAccess	core -> anal -> bits		732783	1					
ANR	732849	PtrMemberAccess	core -> anal		732783	0					
ANR	732850	Identifier	core		732783	0					
ANR	732851	Identifier	anal		732783	1					
ANR	732852	Identifier	bits		732783	1					
ANR	732853	EqualityExpression	bits == core -> dbg -> bits		732783	1		==			
ANR	732854	Identifier	bits		732783	0					
ANR	732855	PtrMemberAccess	core -> dbg -> bits		732783	1					
ANR	732856	PtrMemberAccess	core -> dbg		732783	0					
ANR	732857	Identifier	core		732783	0					
ANR	732858	Identifier	dbg		732783	1					
ANR	732859	Identifier	bits		732783	1					
ANR	732860	CompoundStatement		13:91:371:371	732783	1					
ANR	732861	ReturnStatement	return true ;	659:2:18260:18271	732783	0	True				
ANR	732862	Identifier	true		732783	0					
ANR	732863	IfStatement	if ( bits > 0 )		732783	6					
ANR	732864	Condition	bits > 0	662:5:18288:18295	732783	0	True				
ANR	732865	RelationalExpression	bits > 0		732783	0		>			
ANR	732866	Identifier	bits		732783	0					
ANR	732867	PrimaryExpression	0		732783	1					
ANR	732868	CompoundStatement		18:15:437:437	732783	1					
ANR	732869	ExpressionStatement	"ret = r_asm_set_bits ( core -> assembler , bits )"	663:2:18302:18346	732783	0	True				
ANR	732870	AssignmentExpression	"ret = r_asm_set_bits ( core -> assembler , bits )"		732783	0		=			
ANR	732871	Identifier	ret		732783	0					
ANR	732872	CallExpression	"r_asm_set_bits ( core -> assembler , bits )"		732783	1					
ANR	732873	Callee	r_asm_set_bits		732783	0					
ANR	732874	Identifier	r_asm_set_bits		732783	0					
ANR	732875	ArgumentList	core -> assembler		732783	1					
ANR	732876	Argument	core -> assembler		732783	0					
ANR	732877	PtrMemberAccess	core -> assembler		732783	0					
ANR	732878	Identifier	core		732783	0					
ANR	732879	Identifier	assembler		732783	1					
ANR	732880	Argument	bits		732783	1					
ANR	732881	Identifier	bits		732783	0					
ANR	732882	IfStatement	if ( ! ret )		732783	1					
ANR	732883	Condition	! ret	664:6:18354:18357	732783	0	True				
ANR	732884	UnaryOperationExpression	! ret		732783	0					
ANR	732885	UnaryOperator	!		732783	0					
ANR	732886	Identifier	ret		732783	1					
ANR	732887	CompoundStatement		21:3:504:540	732783	1					
ANR	732888	IdentifierDeclStatement	RAsmPlugin * h = core -> assembler -> cur ;	665:3:18365:18401	732783	0	True				
ANR	732889	IdentifierDecl	* h = core -> assembler -> cur		732783	0					
ANR	732890	IdentifierDeclType	RAsmPlugin *		732783	0					
ANR	732891	Identifier	h		732783	1					
ANR	732892	AssignmentExpression	* h = core -> assembler -> cur		732783	2		=			
ANR	732893	Identifier	h		732783	0					
ANR	732894	PtrMemberAccess	core -> assembler -> cur		732783	1					
ANR	732895	PtrMemberAccess	core -> assembler		732783	0					
ANR	732896	Identifier	core		732783	0					
ANR	732897	Identifier	assembler		732783	1					
ANR	732898	Identifier	cur		732783	1					
ANR	732899	IfStatement	if ( ! h )		732783	1					
ANR	732900	Condition	! h	666:7:18410:18411	732783	0	True				
ANR	732901	UnaryOperationExpression	! h		732783	0					
ANR	732902	UnaryOperator	!		732783	0					
ANR	732903	Identifier	h		732783	1					
ANR	732904	CompoundStatement		22:11:553:553	732783	1					
ANR	732905	ExpressionStatement	"eprintf ( ""e asm.bits: Cannot set value, no plugins defined yet\\n"" )"	667:4:18420:18486	732783	0	True				
ANR	732906	CallExpression	"eprintf ( ""e asm.bits: Cannot set value, no plugins defined yet\\n"" )"		732783	0					
ANR	732907	Callee	eprintf		732783	0					
ANR	732908	Identifier	eprintf		732783	0					
ANR	732909	ArgumentList	"""e asm.bits: Cannot set value, no plugins defined yet\\n"""		732783	1					
ANR	732910	Argument	"""e asm.bits: Cannot set value, no plugins defined yet\\n"""		732783	0					
ANR	732911	PrimaryExpression	"""e asm.bits: Cannot set value, no plugins defined yet\\n"""		732783	0					
ANR	732912	ExpressionStatement	ret = true	668:4:18492:18502	732783	1	True				
ANR	732913	AssignmentExpression	ret = true		732783	0		=			
ANR	732914	Identifier	ret		732783	0					
ANR	732915	Identifier	true		732783	1					
ANR	732916	IfStatement	"if ( ! r_anal_set_bits ( core -> anal , bits ) )"		732783	2					
ANR	732917	Condition	"! r_anal_set_bits ( core -> anal , bits )"	672:6:18591:18625	732783	0	True				
ANR	732918	UnaryOperationExpression	"! r_anal_set_bits ( core -> anal , bits )"		732783	0					
ANR	732919	UnaryOperator	!		732783	0					
ANR	732920	CallExpression	"r_anal_set_bits ( core -> anal , bits )"		732783	1					
ANR	732921	Callee	r_anal_set_bits		732783	0					
ANR	732922	Identifier	r_anal_set_bits		732783	0					
ANR	732923	ArgumentList	core -> anal		732783	1					
ANR	732924	Argument	core -> anal		732783	0					
ANR	732925	PtrMemberAccess	core -> anal		732783	0					
ANR	732926	Identifier	core		732783	0					
ANR	732927	Identifier	anal		732783	1					
ANR	732928	Argument	bits		732783	1					
ANR	732929	Identifier	bits		732783	0					
ANR	732930	CompoundStatement		28:43:767:767	732783	1					
ANR	732931	ExpressionStatement	"eprintf ( ""asm.arch: Cannot setup '%d' bits analysis engine\\n"" , bits )"	673:3:18633:18701	732783	0	True				
ANR	732932	CallExpression	"eprintf ( ""asm.arch: Cannot setup '%d' bits analysis engine\\n"" , bits )"		732783	0					
ANR	732933	Callee	eprintf		732783	0					
ANR	732934	Identifier	eprintf		732783	0					
ANR	732935	ArgumentList	"""asm.arch: Cannot setup '%d' bits analysis engine\\n"""		732783	1					
ANR	732936	Argument	"""asm.arch: Cannot setup '%d' bits analysis engine\\n"""		732783	0					
ANR	732937	PrimaryExpression	"""asm.arch: Cannot setup '%d' bits analysis engine\\n"""		732783	0					
ANR	732938	Argument	bits		732783	1					
ANR	732939	Identifier	bits		732783	0					
ANR	732940	ExpressionStatement	core -> print -> bits = bits	675:2:18709:18733	732783	3	True				
ANR	732941	AssignmentExpression	core -> print -> bits = bits		732783	0		=			
ANR	732942	PtrMemberAccess	core -> print -> bits		732783	0					
ANR	732943	PtrMemberAccess	core -> print		732783	0					
ANR	732944	Identifier	core		732783	0					
ANR	732945	Identifier	print		732783	1					
ANR	732946	Identifier	bits		732783	1					
ANR	732947	Identifier	bits		732783	1					
ANR	732948	IfStatement	if ( core -> dbg && core -> anal && core -> anal -> cur )		732783	7					
ANR	732949	Condition	core -> dbg && core -> anal && core -> anal -> cur	677:5:18743:18784	732783	0	True				
ANR	732950	AndExpression	core -> dbg && core -> anal && core -> anal -> cur		732783	0		&&			
ANR	732951	PtrMemberAccess	core -> dbg		732783	0					
ANR	732952	Identifier	core		732783	0					
ANR	732953	Identifier	dbg		732783	1					
ANR	732954	AndExpression	core -> anal && core -> anal -> cur		732783	1		&&			
ANR	732955	PtrMemberAccess	core -> anal		732783	0					
ANR	732956	Identifier	core		732783	0					
ANR	732957	Identifier	anal		732783	1					
ANR	732958	PtrMemberAccess	core -> anal -> cur		732783	1					
ANR	732959	PtrMemberAccess	core -> anal		732783	0					
ANR	732960	Identifier	core		732783	0					
ANR	732961	Identifier	anal		732783	1					
ANR	732962	Identifier	cur		732783	1					
ANR	732963	CompoundStatement		35:2:991:1056	732783	1					
ANR	732964	ExpressionStatement	"r_debug_set_arch ( core -> dbg , core -> anal -> cur -> arch , bits )"	678:2:18791:18848	732783	0	True				
ANR	732965	CallExpression	"r_debug_set_arch ( core -> dbg , core -> anal -> cur -> arch , bits )"		732783	0					
ANR	732966	Callee	r_debug_set_arch		732783	0					
ANR	732967	Identifier	r_debug_set_arch		732783	0					
ANR	732968	ArgumentList	core -> dbg		732783	1					
ANR	732969	Argument	core -> dbg		732783	0					
ANR	732970	PtrMemberAccess	core -> dbg		732783	0					
ANR	732971	Identifier	core		732783	0					
ANR	732972	Identifier	dbg		732783	1					
ANR	732973	Argument	core -> anal -> cur -> arch		732783	1					
ANR	732974	PtrMemberAccess	core -> anal -> cur -> arch		732783	0					
ANR	732975	PtrMemberAccess	core -> anal -> cur		732783	0					
ANR	732976	PtrMemberAccess	core -> anal		732783	0					
ANR	732977	Identifier	core		732783	0					
ANR	732978	Identifier	anal		732783	1					
ANR	732979	Identifier	cur		732783	1					
ANR	732980	Identifier	arch		732783	1					
ANR	732981	Argument	bits		732783	2					
ANR	732982	Identifier	bits		732783	0					
ANR	732983	IdentifierDeclStatement	"bool load_from_debug = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	679:2:18852:18917	732783	1	True				
ANR	732984	IdentifierDecl	"load_from_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		732783	0					
ANR	732985	IdentifierDeclType	bool		732783	0					
ANR	732986	Identifier	load_from_debug		732783	1					
ANR	732987	AssignmentExpression	"load_from_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		732783	2		=			
ANR	732988	Identifier	load_from_debug		732783	0					
ANR	732989	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		732783	1					
ANR	732990	Callee	r_config_get_i		732783	0					
ANR	732991	Identifier	r_config_get_i		732783	0					
ANR	732992	ArgumentList	core -> config		732783	1					
ANR	732993	Argument	core -> config		732783	0					
ANR	732994	PtrMemberAccess	core -> config		732783	0					
ANR	732995	Identifier	core		732783	0					
ANR	732996	Identifier	config		732783	1					
ANR	732997	Argument	"""cfg.debug"""		732783	1					
ANR	732998	PrimaryExpression	"""cfg.debug"""		732783	0					
ANR	732999	IfStatement	if ( load_from_debug )		732783	2					
ANR	733000	Condition	load_from_debug	680:6:18925:18939	732783	0	True				
ANR	733001	Identifier	load_from_debug		732783	0					
ANR	733002	CompoundStatement		36:23:1081:1081	732783	1					
ANR	733003	IfStatement	if ( core -> dbg -> h && core -> dbg -> h -> reg_profile )		732783	0					
ANR	733004	Condition	core -> dbg -> h && core -> dbg -> h -> reg_profile	681:7:18951:18991	732783	0	True				
ANR	733005	AndExpression	core -> dbg -> h && core -> dbg -> h -> reg_profile		732783	0		&&			
ANR	733006	PtrMemberAccess	core -> dbg -> h		732783	0					
ANR	733007	PtrMemberAccess	core -> dbg		732783	0					
ANR	733008	Identifier	core		732783	0					
ANR	733009	Identifier	dbg		732783	1					
ANR	733010	Identifier	h		732783	1					
ANR	733011	PtrMemberAccess	core -> dbg -> h -> reg_profile		732783	1					
ANR	733012	PtrMemberAccess	core -> dbg -> h		732783	0					
ANR	733013	PtrMemberAccess	core -> dbg		732783	0					
ANR	733014	Identifier	core		732783	0					
ANR	733015	Identifier	dbg		732783	1					
ANR	733016	Identifier	h		732783	1					
ANR	733017	Identifier	reg_profile		732783	1					
ANR	733018	CompoundStatement		46:4:1328:1376	732783	1					
ANR	733019	ExpressionStatement	core -> dbg -> bits = R_SYS_BITS_32	685:4:19095:19126	732783	0	True				
ANR	733020	AssignmentExpression	core -> dbg -> bits = R_SYS_BITS_32		732783	0		=			
ANR	733021	PtrMemberAccess	core -> dbg -> bits		732783	0					
ANR	733022	PtrMemberAccess	core -> dbg		732783	0					
ANR	733023	Identifier	core		732783	0					
ANR	733024	Identifier	dbg		732783	1					
ANR	733025	Identifier	bits		732783	1					
ANR	733026	Identifier	R_SYS_BITS_32		732783	1					
ANR	733027	IdentifierDeclStatement	char * rp = core -> dbg -> h -> reg_profile ( core -> dbg ) ;	690:4:19189:19237	732783	1	True				
ANR	733028	IdentifierDecl	* rp = core -> dbg -> h -> reg_profile ( core -> dbg )		732783	0					
ANR	733029	IdentifierDeclType	char *		732783	0					
ANR	733030	Identifier	rp		732783	1					
ANR	733031	AssignmentExpression	* rp = core -> dbg -> h -> reg_profile ( core -> dbg )		732783	2		=			
ANR	733032	Identifier	rp		732783	0					
ANR	733033	CallExpression	core -> dbg -> h -> reg_profile ( core -> dbg )		732783	1					
ANR	733034	Callee	core -> dbg -> h -> reg_profile		732783	0					
ANR	733035	PtrMemberAccess	core -> dbg -> h -> reg_profile		732783	0					
ANR	733036	PtrMemberAccess	core -> dbg -> h		732783	0					
ANR	733037	PtrMemberAccess	core -> dbg		732783	0					
ANR	733038	Identifier	core		732783	0					
ANR	733039	Identifier	dbg		732783	1					
ANR	733040	Identifier	h		732783	1					
ANR	733041	Identifier	reg_profile		732783	1					
ANR	733042	ArgumentList	core -> dbg		732783	1					
ANR	733043	Argument	core -> dbg		732783	0					
ANR	733044	PtrMemberAccess	core -> dbg		732783	0					
ANR	733045	Identifier	core		732783	0					
ANR	733046	Identifier	dbg		732783	1					
ANR	733047	ExpressionStatement	"r_reg_set_profile_string ( core -> dbg -> reg , rp )"	691:4:19243:19288	732783	2	True				
ANR	733048	CallExpression	"r_reg_set_profile_string ( core -> dbg -> reg , rp )"		732783	0					
ANR	733049	Callee	r_reg_set_profile_string		732783	0					
ANR	733050	Identifier	r_reg_set_profile_string		732783	0					
ANR	733051	ArgumentList	core -> dbg -> reg		732783	1					
ANR	733052	Argument	core -> dbg -> reg		732783	0					
ANR	733053	PtrMemberAccess	core -> dbg -> reg		732783	0					
ANR	733054	PtrMemberAccess	core -> dbg		732783	0					
ANR	733055	Identifier	core		732783	0					
ANR	733056	Identifier	dbg		732783	1					
ANR	733057	Identifier	reg		732783	1					
ANR	733058	Argument	rp		732783	1					
ANR	733059	Identifier	rp		732783	0					
ANR	733060	ExpressionStatement	"r_reg_set_profile_string ( core -> anal -> reg , rp )"	692:4:19294:19340	732783	3	True				
ANR	733061	CallExpression	"r_reg_set_profile_string ( core -> anal -> reg , rp )"		732783	0					
ANR	733062	Callee	r_reg_set_profile_string		732783	0					
ANR	733063	Identifier	r_reg_set_profile_string		732783	0					
ANR	733064	ArgumentList	core -> anal -> reg		732783	1					
ANR	733065	Argument	core -> anal -> reg		732783	0					
ANR	733066	PtrMemberAccess	core -> anal -> reg		732783	0					
ANR	733067	PtrMemberAccess	core -> anal		732783	0					
ANR	733068	Identifier	core		732783	0					
ANR	733069	Identifier	anal		732783	1					
ANR	733070	Identifier	reg		732783	1					
ANR	733071	Argument	rp		732783	1					
ANR	733072	Identifier	rp		732783	0					
ANR	733073	ExpressionStatement	free ( rp )	693:4:19346:19355	732783	4	True				
ANR	733074	CallExpression	free ( rp )		732783	0					
ANR	733075	Callee	free		732783	0					
ANR	733076	Identifier	free		732783	0					
ANR	733077	ArgumentList	rp		732783	1					
ANR	733078	Argument	rp		732783	0					
ANR	733079	Identifier	rp		732783	0					
ANR	733080	ElseStatement	else		732783	0					
ANR	733081	CompoundStatement		51:9:1510:1510	732783	0					
ANR	733082	ExpressionStatement	( void ) r_anal_set_reg_profile ( core -> anal )	696:3:19376:19417	732783	0	True				
ANR	733083	CastExpression	( void ) r_anal_set_reg_profile ( core -> anal )		732783	0					
ANR	733084	CastTarget	void		732783	0					
ANR	733085	CallExpression	r_anal_set_reg_profile ( core -> anal )		732783	1					
ANR	733086	Callee	r_anal_set_reg_profile		732783	0					
ANR	733087	Identifier	r_anal_set_reg_profile		732783	0					
ANR	733088	ArgumentList	core -> anal		732783	1					
ANR	733089	Argument	core -> anal		732783	0					
ANR	733090	PtrMemberAccess	core -> anal		732783	0					
ANR	733091	Identifier	core		732783	0					
ANR	733092	Identifier	anal		732783	1					
ANR	733093	ExpressionStatement	r_core_anal_cc_init ( core )	699:1:19427:19453	732783	8	True				
ANR	733094	CallExpression	r_core_anal_cc_init ( core )		732783	0					
ANR	733095	Callee	r_core_anal_cc_init		732783	0					
ANR	733096	Identifier	r_core_anal_cc_init		732783	0					
ANR	733097	ArgumentList	core		732783	1					
ANR	733098	Argument	core		732783	0					
ANR	733099	Identifier	core		732783	0					
ANR	733100	IdentifierDeclStatement	"const char * asmos = r_config_get ( core -> config , ""asm.os"" ) ;"	700:1:19456:19513	732783	9	True				
ANR	733101	IdentifierDecl	"* asmos = r_config_get ( core -> config , ""asm.os"" )"		732783	0					
ANR	733102	IdentifierDeclType	const char *		732783	0					
ANR	733103	Identifier	asmos		732783	1					
ANR	733104	AssignmentExpression	"* asmos = r_config_get ( core -> config , ""asm.os"" )"		732783	2		=			
ANR	733105	Identifier	asmos		732783	0					
ANR	733106	CallExpression	"r_config_get ( core -> config , ""asm.os"" )"		732783	1					
ANR	733107	Callee	r_config_get		732783	0					
ANR	733108	Identifier	r_config_get		732783	0					
ANR	733109	ArgumentList	core -> config		732783	1					
ANR	733110	Argument	core -> config		732783	0					
ANR	733111	PtrMemberAccess	core -> config		732783	0					
ANR	733112	Identifier	core		732783	0					
ANR	733113	Identifier	config		732783	1					
ANR	733114	Argument	"""asm.os"""		732783	1					
ANR	733115	PrimaryExpression	"""asm.os"""		732783	0					
ANR	733116	IdentifierDeclStatement	"const char * asmarch = r_config_get ( core -> config , ""asm.arch"" ) ;"	701:1:19516:19577	732783	10	True				
ANR	733117	IdentifierDecl	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		732783	0					
ANR	733118	IdentifierDeclType	const char *		732783	0					
ANR	733119	Identifier	asmarch		732783	1					
ANR	733120	AssignmentExpression	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		732783	2		=			
ANR	733121	Identifier	asmarch		732783	0					
ANR	733122	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		732783	1					
ANR	733123	Callee	r_config_get		732783	0					
ANR	733124	Identifier	r_config_get		732783	0					
ANR	733125	ArgumentList	core -> config		732783	1					
ANR	733126	Argument	core -> config		732783	0					
ANR	733127	PtrMemberAccess	core -> config		732783	0					
ANR	733128	Identifier	core		732783	0					
ANR	733129	Identifier	config		732783	1					
ANR	733130	Argument	"""asm.arch"""		732783	1					
ANR	733131	PrimaryExpression	"""asm.arch"""		732783	0					
ANR	733132	IdentifierDeclStatement	"const char * asmcpu = r_config_get ( core -> config , ""asm.cpu"" ) ;"	702:1:19580:19639	732783	11	True				
ANR	733133	IdentifierDecl	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		732783	0					
ANR	733134	IdentifierDeclType	const char *		732783	0					
ANR	733135	Identifier	asmcpu		732783	1					
ANR	733136	AssignmentExpression	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		732783	2		=			
ANR	733137	Identifier	asmcpu		732783	0					
ANR	733138	CallExpression	"r_config_get ( core -> config , ""asm.cpu"" )"		732783	1					
ANR	733139	Callee	r_config_get		732783	0					
ANR	733140	Identifier	r_config_get		732783	0					
ANR	733141	ArgumentList	core -> config		732783	1					
ANR	733142	Argument	core -> config		732783	0					
ANR	733143	PtrMemberAccess	core -> config		732783	0					
ANR	733144	Identifier	core		732783	0					
ANR	733145	Identifier	config		732783	1					
ANR	733146	Argument	"""asm.cpu"""		732783	1					
ANR	733147	PrimaryExpression	"""asm.cpu"""		732783	0					
ANR	733148	IfStatement	if ( core -> anal )		732783	12					
ANR	733149	Condition	core -> anal	703:5:19646:19655	732783	0	True				
ANR	733150	PtrMemberAccess	core -> anal		732783	0					
ANR	733151	Identifier	core		732783	0					
ANR	733152	Identifier	anal		732783	1					
ANR	733153	CompoundStatement		59:17:1797:1797	732783	1					
ANR	733154	IfStatement	"if ( ! r_syscall_setup ( core -> anal -> syscall , asmarch , bits , asmcpu , asmos ) )"		732783	0					
ANR	733155	Condition	"! r_syscall_setup ( core -> anal -> syscall , asmarch , bits , asmcpu , asmos )"	704:6:19666:19733	732783	0	True				
ANR	733156	UnaryOperationExpression	"! r_syscall_setup ( core -> anal -> syscall , asmarch , bits , asmcpu , asmos )"		732783	0					
ANR	733157	UnaryOperator	!		732783	0					
ANR	733158	CallExpression	"r_syscall_setup ( core -> anal -> syscall , asmarch , bits , asmcpu , asmos )"		732783	1					
ANR	733159	Callee	r_syscall_setup		732783	0					
ANR	733160	Identifier	r_syscall_setup		732783	0					
ANR	733161	ArgumentList	core -> anal -> syscall		732783	1					
ANR	733162	Argument	core -> anal -> syscall		732783	0					
ANR	733163	PtrMemberAccess	core -> anal -> syscall		732783	0					
ANR	733164	PtrMemberAccess	core -> anal		732783	0					
ANR	733165	Identifier	core		732783	0					
ANR	733166	Identifier	anal		732783	1					
ANR	733167	Identifier	syscall		732783	1					
ANR	733168	Argument	asmarch		732783	1					
ANR	733169	Identifier	asmarch		732783	0					
ANR	733170	Argument	bits		732783	2					
ANR	733171	Identifier	bits		732783	0					
ANR	733172	Argument	asmcpu		732783	3					
ANR	733173	Identifier	asmcpu		732783	0					
ANR	733174	Argument	asmos		732783	4					
ANR	733175	Identifier	asmos		732783	0					
ANR	733176	CompoundStatement		60:76:1875:1875	732783	1					
ANR	733177	ExpressionStatement	"__setsegoff ( core -> config , asmarch , core -> anal -> bits )"	708:2:19881:19934	732783	1	True				
ANR	733178	CallExpression	"__setsegoff ( core -> config , asmarch , core -> anal -> bits )"		732783	0					
ANR	733179	Callee	__setsegoff		732783	0					
ANR	733180	Identifier	__setsegoff		732783	0					
ANR	733181	ArgumentList	core -> config		732783	1					
ANR	733182	Argument	core -> config		732783	0					
ANR	733183	PtrMemberAccess	core -> config		732783	0					
ANR	733184	Identifier	core		732783	0					
ANR	733185	Identifier	config		732783	1					
ANR	733186	Argument	asmarch		732783	1					
ANR	733187	Identifier	asmarch		732783	0					
ANR	733188	Argument	core -> anal -> bits		732783	2					
ANR	733189	PtrMemberAccess	core -> anal -> bits		732783	0					
ANR	733190	PtrMemberAccess	core -> anal		732783	0					
ANR	733191	Identifier	core		732783	0					
ANR	733192	Identifier	anal		732783	1					
ANR	733193	Identifier	bits		732783	1					
ANR	733194	IfStatement	if ( core -> dbg )		732783	2					
ANR	733195	Condition	core -> dbg	709:6:19942:19950	732783	0	True				
ANR	733196	PtrMemberAccess	core -> dbg		732783	0					
ANR	733197	Identifier	core		732783	0					
ANR	733198	Identifier	dbg		732783	1					
ANR	733199	CompoundStatement		65:17:2092:2092	732783	1					
ANR	733200	ExpressionStatement	"r_bp_use ( core -> dbg -> bp , asmarch , core -> anal -> bits )"	710:3:19958:20009	732783	0	True				
ANR	733201	CallExpression	"r_bp_use ( core -> dbg -> bp , asmarch , core -> anal -> bits )"		732783	0					
ANR	733202	Callee	r_bp_use		732783	0					
ANR	733203	Identifier	r_bp_use		732783	0					
ANR	733204	ArgumentList	core -> dbg -> bp		732783	1					
ANR	733205	Argument	core -> dbg -> bp		732783	0					
ANR	733206	PtrMemberAccess	core -> dbg -> bp		732783	0					
ANR	733207	PtrMemberAccess	core -> dbg		732783	0					
ANR	733208	Identifier	core		732783	0					
ANR	733209	Identifier	dbg		732783	1					
ANR	733210	Identifier	bp		732783	1					
ANR	733211	Argument	asmarch		732783	1					
ANR	733212	Identifier	asmarch		732783	0					
ANR	733213	Argument	core -> anal -> bits		732783	2					
ANR	733214	PtrMemberAccess	core -> anal -> bits		732783	0					
ANR	733215	PtrMemberAccess	core -> anal		732783	0					
ANR	733216	Identifier	core		732783	0					
ANR	733217	Identifier	anal		732783	1					
ANR	733218	Identifier	bits		732783	1					
ANR	733219	ExpressionStatement	"r_config_set_i ( core -> config , ""dbg.bpsize"" , r_bp_size ( core -> dbg -> bp ) )"	711:3:20014:20084	732783	1	True				
ANR	733220	CallExpression	"r_config_set_i ( core -> config , ""dbg.bpsize"" , r_bp_size ( core -> dbg -> bp ) )"		732783	0					
ANR	733221	Callee	r_config_set_i		732783	0					
ANR	733222	Identifier	r_config_set_i		732783	0					
ANR	733223	ArgumentList	core -> config		732783	1					
ANR	733224	Argument	core -> config		732783	0					
ANR	733225	PtrMemberAccess	core -> config		732783	0					
ANR	733226	Identifier	core		732783	0					
ANR	733227	Identifier	config		732783	1					
ANR	733228	Argument	"""dbg.bpsize"""		732783	1					
ANR	733229	PrimaryExpression	"""dbg.bpsize"""		732783	0					
ANR	733230	Argument	r_bp_size ( core -> dbg -> bp )		732783	2					
ANR	733231	CallExpression	r_bp_size ( core -> dbg -> bp )		732783	0					
ANR	733232	Callee	r_bp_size		732783	0					
ANR	733233	Identifier	r_bp_size		732783	0					
ANR	733234	ArgumentList	core -> dbg -> bp		732783	1					
ANR	733235	Argument	core -> dbg -> bp		732783	0					
ANR	733236	PtrMemberAccess	core -> dbg -> bp		732783	0					
ANR	733237	PtrMemberAccess	core -> dbg		732783	0					
ANR	733238	Identifier	core		732783	0					
ANR	733239	Identifier	dbg		732783	1					
ANR	733240	Identifier	bp		732783	1					
ANR	733241	CompoundStatement		72:2:2256:2315	732783	13					
ANR	733242	IdentifierDeclStatement	"int v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN ) ;"	716:2:20117:20176	732783	0	True				
ANR	733243	IdentifierDecl	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		732783	0					
ANR	733244	IdentifierDeclType	int		732783	0					
ANR	733245	Identifier	v		732783	1					
ANR	733246	AssignmentExpression	"v = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		732783	2		=			
ANR	733247	Identifier	v		732783	0					
ANR	733248	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		732783	1					
ANR	733249	Callee	r_anal_archinfo		732783	0					
ANR	733250	Identifier	r_anal_archinfo		732783	0					
ANR	733251	ArgumentList	core -> anal		732783	1					
ANR	733252	Argument	core -> anal		732783	0					
ANR	733253	PtrMemberAccess	core -> anal		732783	0					
ANR	733254	Identifier	core		732783	0					
ANR	733255	Identifier	anal		732783	1					
ANR	733256	Argument	R_ANAL_ARCHINFO_ALIGN		732783	1					
ANR	733257	Identifier	R_ANAL_ARCHINFO_ALIGN		732783	0					
ANR	733258	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.pcalign"" , ( v != - 1 ) ? v : 0 )"	717:2:20180:20241	732783	1	True				
ANR	733259	CallExpression	"r_config_set_i ( core -> config , ""asm.pcalign"" , ( v != - 1 ) ? v : 0 )"		732783	0					
ANR	733260	Callee	r_config_set_i		732783	0					
ANR	733261	Identifier	r_config_set_i		732783	0					
ANR	733262	ArgumentList	core -> config		732783	1					
ANR	733263	Argument	core -> config		732783	0					
ANR	733264	PtrMemberAccess	core -> config		732783	0					
ANR	733265	Identifier	core		732783	0					
ANR	733266	Identifier	config		732783	1					
ANR	733267	Argument	"""asm.pcalign"""		732783	1					
ANR	733268	PrimaryExpression	"""asm.pcalign"""		732783	0					
ANR	733269	Argument	( v != - 1 ) ? v : 0		732783	2					
ANR	733270	ConditionalExpression	( v != - 1 ) ? v : 0		732783	0					
ANR	733271	Condition	v != - 1		732783	0					
ANR	733272	EqualityExpression	v != - 1		732783	0		!=			
ANR	733273	Identifier	v		732783	0					
ANR	733274	UnaryOperationExpression	- 1		732783	1					
ANR	733275	UnaryOperator	-		732783	0					
ANR	733276	PrimaryExpression	1		732783	1					
ANR	733277	Identifier	v		732783	1					
ANR	733278	PrimaryExpression	0		732783	2					
ANR	733279	ReturnStatement	return ret ;	719:1:20247:20257	732783	14	True				
ANR	733280	Identifier	ret		732783	0					
ANR	733281	ReturnType	static bool		732783	1					
ANR	733282	Identifier	cb_asmbits		732783	2					
ANR	733283	ParameterList	"void * user , void * data"		732783	3					
ANR	733284	Parameter	void * user	645:23:17836:17845	732783	0	True				
ANR	733285	ParameterType	void *		732783	0					
ANR	733286	Identifier	user		732783	1					
ANR	733287	Parameter	void * data	645:35:17848:17857	732783	1	True				
ANR	733288	ParameterType	void *		732783	0					
ANR	733289	Identifier	data		732783	1					
ANR	733290	CFGEntryNode	ENTRY		732783		True				
ANR	733291	CFGExitNode	EXIT		732783		True				
ANR	733292	Symbol	core -> anal -> reg		732783						
ANR	733293	Symbol	data		732783						
ANR	733294	Symbol	r_anal_archinfo		732783						
ANR	733295	Symbol	core -> dbg -> h -> reg_profile		732783						
ANR	733296	Symbol	* core -> dbg -> h		732783						
ANR	733297	Symbol	core -> dbg -> bp		732783						
ANR	733298	Symbol	* core -> assembler		732783						
ANR	733299	Symbol	asmos		732783						
ANR	733300	Symbol	* * core -> anal		732783						
ANR	733301	Symbol	* node		732783						
ANR	733302	Symbol	ret		732783						
ANR	733303	Symbol	r_anal_set_bits		732783						
ANR	733304	Symbol	load_from_debug		732783						
ANR	733305	Symbol	* core -> anal -> cur		732783						
ANR	733306	Symbol	bits		732783						
ANR	733307	Symbol	core -> dbg -> h		732783						
ANR	733308	Symbol	node -> i_value		732783						
ANR	733309	Symbol	core		732783						
ANR	733310	Symbol	node		732783						
ANR	733311	Symbol	* * * core		732783						
ANR	733312	Symbol	r_config_get_i		732783						
ANR	733313	Symbol	true		732783						
ANR	733314	Symbol	core -> print		732783						
ANR	733315	Symbol	* core -> dbg		732783						
ANR	733316	Symbol	rp		732783						
ANR	733317	Symbol	r_bp_size		732783						
ANR	733318	Symbol	R_SYS_BITS_32		732783						
ANR	733319	Symbol	asmcpu		732783						
ANR	733320	Symbol	r_asm_set_bits		732783						
ANR	733321	Symbol	core -> assembler -> bits		732783						
ANR	733322	Symbol	* core		732783						
ANR	733323	Symbol	r_config_get		732783						
ANR	733324	Symbol	core -> assembler		732783						
ANR	733325	Symbol	core -> anal		732783						
ANR	733326	Symbol	core -> anal -> cur -> arch		732783						
ANR	733327	Symbol	core -> anal -> cur		732783						
ANR	733328	Symbol	core -> dbg -> bits		732783						
ANR	733329	Symbol	* * core		732783						
ANR	733330	Symbol	core -> config		732783						
ANR	733331	Symbol	core -> anal -> bits		732783						
ANR	733332	Symbol	false		732783						
ANR	733333	Symbol	h		732783						
ANR	733334	Symbol	core -> anal -> syscall		732783						
ANR	733335	Symbol	core -> print -> bits		732783						
ANR	733336	Symbol	R_ANAL_ARCHINFO_ALIGN		732783						
ANR	733337	Symbol	* core -> print		732783						
ANR	733338	Symbol	* core -> anal		732783						
ANR	733339	Symbol	core -> dbg -> reg		732783						
ANR	733340	Symbol	asmarch		732783						
ANR	733341	Symbol	v		732783						
ANR	733342	Symbol	core -> assembler -> cur		732783						
ANR	733343	Symbol	r_syscall_setup		732783						
ANR	733344	Symbol	user		732783						
ANR	733345	Symbol	core -> dbg		732783						
ANR	733346	Symbol	* * core -> dbg		732783						
ANR	733347	Function	update_asmfeatures_options	722:0:20262:20778							
ANR	733348	FunctionDef	"update_asmfeatures_options (RCore * core , RConfigNode * node)"		733347	0					
ANR	733349	CompoundStatement		722:71:20333:20778	733347	0					
ANR	733350	IdentifierDeclStatement	"int i , argc ;"	723:1:20336:20347	733347	0	True				
ANR	733351	IdentifierDecl	i		733347	0					
ANR	733352	IdentifierDeclType	int		733347	0					
ANR	733353	Identifier	i		733347	1					
ANR	733354	IdentifierDecl	argc		733347	1					
ANR	733355	IdentifierDeclType	int		733347	0					
ANR	733356	Identifier	argc		733347	1					
ANR	733357	IfStatement	if ( core && core -> assembler && core -> assembler -> cur )		733347	1					
ANR	733358	Condition	core && core -> assembler && core -> assembler -> cur	725:5:20355:20401	733347	0	True				
ANR	733359	AndExpression	core && core -> assembler && core -> assembler -> cur		733347	0		&&			
ANR	733360	Identifier	core		733347	0					
ANR	733361	AndExpression	core -> assembler && core -> assembler -> cur		733347	1		&&			
ANR	733362	PtrMemberAccess	core -> assembler		733347	0					
ANR	733363	Identifier	core		733347	0					
ANR	733364	Identifier	assembler		733347	1					
ANR	733365	PtrMemberAccess	core -> assembler -> cur		733347	1					
ANR	733366	PtrMemberAccess	core -> assembler		733347	0					
ANR	733367	Identifier	core		733347	0					
ANR	733368	Identifier	assembler		733347	1					
ANR	733369	Identifier	cur		733347	1					
ANR	733370	CompoundStatement		4:54:70:70	733347	1					
ANR	733371	IfStatement	if ( core -> assembler -> cur -> features )		733347	0					
ANR	733372	Condition	core -> assembler -> cur -> features	726:6:20412:20441	733347	0	True				
ANR	733373	PtrMemberAccess	core -> assembler -> cur -> features		733347	0					
ANR	733374	PtrMemberAccess	core -> assembler -> cur		733347	0					
ANR	733375	PtrMemberAccess	core -> assembler		733347	0					
ANR	733376	Identifier	core		733347	0					
ANR	733377	Identifier	assembler		733347	1					
ANR	733378	Identifier	cur		733347	1					
ANR	733379	Identifier	features		733347	1					
ANR	733380	CompoundStatement		6:3:115:171	733347	1					
ANR	733381	IdentifierDeclStatement	char * features = strdup ( core -> assembler -> cur -> features ) ;	727:3:20449:20505	733347	0	True				
ANR	733382	IdentifierDecl	* features = strdup ( core -> assembler -> cur -> features )		733347	0					
ANR	733383	IdentifierDeclType	char *		733347	0					
ANR	733384	Identifier	features		733347	1					
ANR	733385	AssignmentExpression	* features = strdup ( core -> assembler -> cur -> features )		733347	2		=			
ANR	733386	Identifier	features		733347	0					
ANR	733387	CallExpression	strdup ( core -> assembler -> cur -> features )		733347	1					
ANR	733388	Callee	strdup		733347	0					
ANR	733389	Identifier	strdup		733347	0					
ANR	733390	ArgumentList	core -> assembler -> cur -> features		733347	1					
ANR	733391	Argument	core -> assembler -> cur -> features		733347	0					
ANR	733392	PtrMemberAccess	core -> assembler -> cur -> features		733347	0					
ANR	733393	PtrMemberAccess	core -> assembler -> cur		733347	0					
ANR	733394	PtrMemberAccess	core -> assembler		733347	0					
ANR	733395	Identifier	core		733347	0					
ANR	733396	Identifier	assembler		733347	1					
ANR	733397	Identifier	cur		733347	1					
ANR	733398	Identifier	features		733347	1					
ANR	733399	ExpressionStatement	"argc = r_str_split ( features , ',' )"	728:3:20510:20544	733347	1	True				
ANR	733400	AssignmentExpression	"argc = r_str_split ( features , ',' )"		733347	0		=			
ANR	733401	Identifier	argc		733347	0					
ANR	733402	CallExpression	"r_str_split ( features , ',' )"		733347	1					
ANR	733403	Callee	r_str_split		733347	0					
ANR	733404	Identifier	r_str_split		733347	0					
ANR	733405	ArgumentList	features		733347	1					
ANR	733406	Argument	features		733347	0					
ANR	733407	Identifier	features		733347	0					
ANR	733408	Argument	"','"		733347	1					
ANR	733409	PrimaryExpression	"','"		733347	0					
ANR	733410	ForStatement	for ( i = 0 ; i < argc ; i ++ )		733347	2					
ANR	733411	ForInit	i = 0 ;	729:8:20554:20559	733347	0	True				
ANR	733412	AssignmentExpression	i = 0		733347	0		=			
ANR	733413	Identifier	i		733347	0					
ANR	733414	PrimaryExpression	0		733347	1					
ANR	733415	Condition	i < argc	729:15:20561:20568	733347	1	True				
ANR	733416	RelationalExpression	i < argc		733347	0		<			
ANR	733417	Identifier	i		733347	0					
ANR	733418	Identifier	argc		733347	1					
ANR	733419	PostIncDecOperationExpression	i ++	729:25:20571:20573	733347	2	True				
ANR	733420	Identifier	i		733347	0					
ANR	733421	IncDec	++		733347	1					
ANR	733422	CompoundStatement		10:4:280:331	733347	3					
ANR	733423	ExpressionStatement	node -> options -> free = free	730:4:20582:20608	733347	0	True				
ANR	733424	AssignmentExpression	node -> options -> free = free		733347	0		=			
ANR	733425	PtrMemberAccess	node -> options -> free		733347	0					
ANR	733426	PtrMemberAccess	node -> options		733347	0					
ANR	733427	Identifier	node		733347	0					
ANR	733428	Identifier	options		733347	1					
ANR	733429	Identifier	free		733347	1					
ANR	733430	Identifier	free		733347	1					
ANR	733431	IdentifierDeclStatement	"const char * feature = r_str_word_get0 ( features , i ) ;"	731:4:20614:20665	733347	1	True				
ANR	733432	IdentifierDecl	"* feature = r_str_word_get0 ( features , i )"		733347	0					
ANR	733433	IdentifierDeclType	const char *		733347	0					
ANR	733434	Identifier	feature		733347	1					
ANR	733435	AssignmentExpression	"* feature = r_str_word_get0 ( features , i )"		733347	2		=			
ANR	733436	Identifier	feature		733347	0					
ANR	733437	CallExpression	"r_str_word_get0 ( features , i )"		733347	1					
ANR	733438	Callee	r_str_word_get0		733347	0					
ANR	733439	Identifier	r_str_word_get0		733347	0					
ANR	733440	ArgumentList	features		733347	1					
ANR	733441	Argument	features		733347	0					
ANR	733442	Identifier	features		733347	0					
ANR	733443	Argument	i		733347	1					
ANR	733444	Identifier	i		733347	0					
ANR	733445	IfStatement	if ( feature )		733347	2					
ANR	733446	Condition	feature	732:8:20675:20681	733347	0	True				
ANR	733447	Identifier	feature		733347	0					
ANR	733448	CompoundStatement		11:17:350:350	733347	1					
ANR	733449	ExpressionStatement	"r_list_append ( node -> options , strdup ( feature ) )"	733:5:20691:20738	733347	0	True				
ANR	733450	CallExpression	"r_list_append ( node -> options , strdup ( feature ) )"		733347	0					
ANR	733451	Callee	r_list_append		733347	0					
ANR	733452	Identifier	r_list_append		733347	0					
ANR	733453	ArgumentList	node -> options		733347	1					
ANR	733454	Argument	node -> options		733347	0					
ANR	733455	PtrMemberAccess	node -> options		733347	0					
ANR	733456	Identifier	node		733347	0					
ANR	733457	Identifier	options		733347	1					
ANR	733458	Argument	strdup ( feature )		733347	1					
ANR	733459	CallExpression	strdup ( feature )		733347	0					
ANR	733460	Callee	strdup		733347	0					
ANR	733461	Identifier	strdup		733347	0					
ANR	733462	ArgumentList	feature		733347	1					
ANR	733463	Argument	feature		733347	0					
ANR	733464	Identifier	feature		733347	0					
ANR	733465	ExpressionStatement	free ( features )	736:3:20754:20769	733347	3	True				
ANR	733466	CallExpression	free ( features )		733347	0					
ANR	733467	Callee	free		733347	0					
ANR	733468	Identifier	free		733347	0					
ANR	733469	ArgumentList	features		733347	1					
ANR	733470	Argument	features		733347	0					
ANR	733471	Identifier	features		733347	0					
ANR	733472	ReturnType	static void		733347	1					
ANR	733473	Identifier	update_asmfeatures_options		733347	2					
ANR	733474	ParameterList	"RCore * core , RConfigNode * node"		733347	3					
ANR	733475	Parameter	RCore * core	722:39:20301:20311	733347	0	True				
ANR	733476	ParameterType	RCore *		733347	0					
ANR	733477	Identifier	core		733347	1					
ANR	733478	Parameter	RConfigNode * node	722:52:20314:20330	733347	1	True				
ANR	733479	ParameterType	RConfigNode *		733347	0					
ANR	733480	Identifier	node		733347	1					
ANR	733481	CFGEntryNode	ENTRY		733347		True				
ANR	733482	CFGExitNode	EXIT		733347		True				
ANR	733483	Symbol	argc		733347						
ANR	733484	Symbol	* core -> assembler -> cur		733347						
ANR	733485	Symbol	* core		733347						
ANR	733486	Symbol	i		733347						
ANR	733487	Symbol	core -> assembler		733347						
ANR	733488	Symbol	r_str_word_get0		733347						
ANR	733489	Symbol	core -> assembler -> cur -> features		733347						
ANR	733490	Symbol	* core -> assembler		733347						
ANR	733491	Symbol	core		733347						
ANR	733492	Symbol	node		733347						
ANR	733493	Symbol	* * * core		733347						
ANR	733494	Symbol	features		733347						
ANR	733495	Symbol	* * node		733347						
ANR	733496	Symbol	feature		733347						
ANR	733497	Symbol	r_str_split		733347						
ANR	733498	Symbol	node -> options -> free		733347						
ANR	733499	Symbol	node -> options		733347						
ANR	733500	Symbol	* node -> options		733347						
ANR	733501	Symbol	* * core -> assembler		733347						
ANR	733502	Symbol	core -> assembler -> cur		733347						
ANR	733503	Symbol	* node		733347						
ANR	733504	Symbol	strdup		733347						
ANR	733505	Symbol	free		733347						
ANR	733506	Symbol	* * core		733347						
ANR	733507	Function	cb_flag_realnames	741:0:20781:20966							
ANR	733508	FunctionDef	"cb_flag_realnames (void * user , void * data)"		733507	0					
ANR	733509	CompoundStatement		741:54:20835:20966	733507	0					
ANR	733510	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	742:1:20838:20866	733507	0	True				
ANR	733511	IdentifierDecl	* core = ( RCore * ) user		733507	0					
ANR	733512	IdentifierDeclType	RCore *		733507	0					
ANR	733513	Identifier	core		733507	1					
ANR	733514	AssignmentExpression	* core = ( RCore * ) user		733507	2		=			
ANR	733515	Identifier	core		733507	0					
ANR	733516	CastExpression	( RCore * ) user		733507	1					
ANR	733517	CastTarget	RCore *		733507	0					
ANR	733518	Identifier	user		733507	1					
ANR	733519	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	743:1:20869:20909	733507	1	True				
ANR	733520	IdentifierDecl	* node = ( RConfigNode * ) data		733507	0					
ANR	733521	IdentifierDeclType	RConfigNode *		733507	0					
ANR	733522	Identifier	node		733507	1					
ANR	733523	AssignmentExpression	* node = ( RConfigNode * ) data		733507	2		=			
ANR	733524	Identifier	node		733507	0					
ANR	733525	CastExpression	( RConfigNode * ) data		733507	1					
ANR	733526	CastTarget	RConfigNode *		733507	0					
ANR	733527	Identifier	data		733507	1					
ANR	733528	ExpressionStatement	core -> flags -> realnames = node -> i_value	744:1:20912:20950	733507	2	True				
ANR	733529	AssignmentExpression	core -> flags -> realnames = node -> i_value		733507	0		=			
ANR	733530	PtrMemberAccess	core -> flags -> realnames		733507	0					
ANR	733531	PtrMemberAccess	core -> flags		733507	0					
ANR	733532	Identifier	core		733507	0					
ANR	733533	Identifier	flags		733507	1					
ANR	733534	Identifier	realnames		733507	1					
ANR	733535	PtrMemberAccess	node -> i_value		733507	1					
ANR	733536	Identifier	node		733507	0					
ANR	733537	Identifier	i_value		733507	1					
ANR	733538	ReturnStatement	return true ;	745:1:20953:20964	733507	3	True				
ANR	733539	Identifier	true		733507	0					
ANR	733540	ReturnType	static bool		733507	1					
ANR	733541	Identifier	cb_flag_realnames		733507	2					
ANR	733542	ParameterList	"void * user , void * data"		733507	3					
ANR	733543	Parameter	void * user	741:30:20811:20820	733507	0	True				
ANR	733544	ParameterType	void *		733507	0					
ANR	733545	Identifier	user		733507	1					
ANR	733546	Parameter	void * data	741:42:20823:20832	733507	1	True				
ANR	733547	ParameterType	void *		733507	0					
ANR	733548	Identifier	data		733507	1					
ANR	733549	CFGEntryNode	ENTRY		733507		True				
ANR	733550	CFGExitNode	EXIT		733507		True				
ANR	733551	Symbol	core		733507						
ANR	733552	Symbol	node		733507						
ANR	733553	Symbol	core -> flags -> realnames		733507						
ANR	733554	Symbol	data		733507						
ANR	733555	Symbol	* core		733507						
ANR	733556	Symbol	true		733507						
ANR	733557	Symbol	core -> flags		733507						
ANR	733558	Symbol	* node		733507						
ANR	733559	Symbol	user		733507						
ANR	733560	Symbol	* * core		733507						
ANR	733561	Symbol	* core -> flags		733507						
ANR	733562	Symbol	node -> i_value		733507						
ANR	733563	Function	cb_asmfeatures	748:0:20969:21337							
ANR	733564	FunctionDef	"cb_asmfeatures (void * user , void * data)"		733563	0					
ANR	733565	CompoundStatement		748:51:21020:21337	733563	0					
ANR	733566	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	749:1:21023:21051	733563	0	True				
ANR	733567	IdentifierDecl	* core = ( RCore * ) user		733563	0					
ANR	733568	IdentifierDeclType	RCore *		733563	0					
ANR	733569	Identifier	core		733563	1					
ANR	733570	AssignmentExpression	* core = ( RCore * ) user		733563	2		=			
ANR	733571	Identifier	core		733563	0					
ANR	733572	CastExpression	( RCore * ) user		733563	1					
ANR	733573	CastTarget	RCore *		733563	0					
ANR	733574	Identifier	user		733563	1					
ANR	733575	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	750:1:21054:21094	733563	1	True				
ANR	733576	IdentifierDecl	* node = ( RConfigNode * ) data		733563	0					
ANR	733577	IdentifierDeclType	RConfigNode *		733563	0					
ANR	733578	Identifier	node		733563	1					
ANR	733579	AssignmentExpression	* node = ( RConfigNode * ) data		733563	2		=			
ANR	733580	Identifier	node		733563	0					
ANR	733581	CastExpression	( RConfigNode * ) data		733563	1					
ANR	733582	CastTarget	RConfigNode *		733563	0					
ANR	733583	Identifier	data		733563	1					
ANR	733584	IfStatement	if ( * node -> value == '?' )		733563	2					
ANR	733585	Condition	* node -> value == '?'	751:5:21101:21119	733563	0	True				
ANR	733586	EqualityExpression	* node -> value == '?'		733563	0		==			
ANR	733587	UnaryOperationExpression	* node -> value		733563	0					
ANR	733588	UnaryOperator	*		733563	0					
ANR	733589	PtrMemberAccess	node -> value		733563	1					
ANR	733590	Identifier	node		733563	0					
ANR	733591	Identifier	value		733563	1					
ANR	733592	PrimaryExpression	'?'		733563	1					
ANR	733593	CompoundStatement		4:26:101:101	733563	1					
ANR	733594	ExpressionStatement	"update_asmfeatures_options ( core , node )"	752:2:21126:21165	733563	0	True				
ANR	733595	CallExpression	"update_asmfeatures_options ( core , node )"		733563	0					
ANR	733596	Callee	update_asmfeatures_options		733563	0					
ANR	733597	Identifier	update_asmfeatures_options		733563	0					
ANR	733598	ArgumentList	core		733563	1					
ANR	733599	Argument	core		733563	0					
ANR	733600	Identifier	core		733563	0					
ANR	733601	Argument	node		733563	1					
ANR	733602	Identifier	node		733563	0					
ANR	733603	ExpressionStatement	print_node_options ( node )	753:2:21169:21194	733563	1	True				
ANR	733604	CallExpression	print_node_options ( node )		733563	0					
ANR	733605	Callee	print_node_options		733563	0					
ANR	733606	Identifier	print_node_options		733563	0					
ANR	733607	ArgumentList	node		733563	1					
ANR	733608	Argument	node		733563	0					
ANR	733609	Identifier	node		733563	0					
ANR	733610	ReturnStatement	return 0 ;	754:2:21198:21206	733563	2	True				
ANR	733611	PrimaryExpression	0		733563	0					
ANR	733612	ExpressionStatement	R_FREE ( core -> assembler -> features )	756:1:21212:21246	733563	3	True				
ANR	733613	CallExpression	R_FREE ( core -> assembler -> features )		733563	0					
ANR	733614	Callee	R_FREE		733563	0					
ANR	733615	Identifier	R_FREE		733563	0					
ANR	733616	ArgumentList	core -> assembler -> features		733563	1					
ANR	733617	Argument	core -> assembler -> features		733563	0					
ANR	733618	PtrMemberAccess	core -> assembler -> features		733563	0					
ANR	733619	PtrMemberAccess	core -> assembler		733563	0					
ANR	733620	Identifier	core		733563	0					
ANR	733621	Identifier	assembler		733563	1					
ANR	733622	Identifier	features		733563	1					
ANR	733623	IfStatement	if ( node -> value [ 0 ] )		733563	4					
ANR	733624	Condition	node -> value [ 0 ]	757:5:21253:21266	733563	0	True				
ANR	733625	ArrayIndexing	node -> value [ 0 ]		733563	0					
ANR	733626	PtrMemberAccess	node -> value		733563	0					
ANR	733627	Identifier	node		733563	0					
ANR	733628	Identifier	value		733563	1					
ANR	733629	PrimaryExpression	0		733563	1					
ANR	733630	CompoundStatement		10:21:248:248	733563	1					
ANR	733631	ExpressionStatement	core -> assembler -> features = strdup ( node -> value )	758:2:21273:21321	733563	0	True				
ANR	733632	AssignmentExpression	core -> assembler -> features = strdup ( node -> value )		733563	0		=			
ANR	733633	PtrMemberAccess	core -> assembler -> features		733563	0					
ANR	733634	PtrMemberAccess	core -> assembler		733563	0					
ANR	733635	Identifier	core		733563	0					
ANR	733636	Identifier	assembler		733563	1					
ANR	733637	Identifier	features		733563	1					
ANR	733638	CallExpression	strdup ( node -> value )		733563	1					
ANR	733639	Callee	strdup		733563	0					
ANR	733640	Identifier	strdup		733563	0					
ANR	733641	ArgumentList	node -> value		733563	1					
ANR	733642	Argument	node -> value		733563	0					
ANR	733643	PtrMemberAccess	node -> value		733563	0					
ANR	733644	Identifier	node		733563	0					
ANR	733645	Identifier	value		733563	1					
ANR	733646	ReturnStatement	return 1 ;	760:1:21327:21335	733563	5	True				
ANR	733647	PrimaryExpression	1		733563	0					
ANR	733648	ReturnType	static bool		733563	1					
ANR	733649	Identifier	cb_asmfeatures		733563	2					
ANR	733650	ParameterList	"void * user , void * data"		733563	3					
ANR	733651	Parameter	void * user	748:27:20996:21005	733563	0	True				
ANR	733652	ParameterType	void *		733563	0					
ANR	733653	Identifier	user		733563	1					
ANR	733654	Parameter	void * data	748:39:21008:21017	733563	1	True				
ANR	733655	ParameterType	void *		733563	0					
ANR	733656	Identifier	data		733563	1					
ANR	733657	CFGEntryNode	ENTRY		733563		True				
ANR	733658	CFGExitNode	EXIT		733563		True				
ANR	733659	Symbol	* node -> value		733563						
ANR	733660	Symbol	data		733563						
ANR	733661	Symbol	* core		733563						
ANR	733662	Symbol	core -> assembler		733563						
ANR	733663	Symbol	node -> value		733563						
ANR	733664	Symbol	* core -> assembler		733563						
ANR	733665	Symbol	core		733563						
ANR	733666	Symbol	node		733563						
ANR	733667	Symbol	* * node		733563						
ANR	733668	Symbol	core -> assembler -> features		733563						
ANR	733669	Symbol	* node		733563						
ANR	733670	Symbol	strdup		733563						
ANR	733671	Symbol	user		733563						
ANR	733672	Symbol	* * core		733563						
ANR	733673	Function	cb_asmlineswidth	763:0:21340:21524							
ANR	733674	FunctionDef	"cb_asmlineswidth (void * user , void * data)"		733673	0					
ANR	733675	CompoundStatement		763:53:21393:21524	733673	0					
ANR	733676	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	764:1:21396:21424	733673	0	True				
ANR	733677	IdentifierDecl	* core = ( RCore * ) user		733673	0					
ANR	733678	IdentifierDeclType	RCore *		733673	0					
ANR	733679	Identifier	core		733673	1					
ANR	733680	AssignmentExpression	* core = ( RCore * ) user		733673	2		=			
ANR	733681	Identifier	core		733673	0					
ANR	733682	CastExpression	( RCore * ) user		733673	1					
ANR	733683	CastTarget	RCore *		733673	0					
ANR	733684	Identifier	user		733673	1					
ANR	733685	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	765:1:21427:21467	733673	1	True				
ANR	733686	IdentifierDecl	* node = ( RConfigNode * ) data		733673	0					
ANR	733687	IdentifierDeclType	RConfigNode *		733673	0					
ANR	733688	Identifier	node		733673	1					
ANR	733689	AssignmentExpression	* node = ( RConfigNode * ) data		733673	2		=			
ANR	733690	Identifier	node		733673	0					
ANR	733691	CastExpression	( RConfigNode * ) data		733673	1					
ANR	733692	CastTarget	RConfigNode *		733673	0					
ANR	733693	Identifier	data		733673	1					
ANR	733694	ExpressionStatement	core -> anal -> lineswidth = node -> i_value	766:1:21470:21508	733673	2	True				
ANR	733695	AssignmentExpression	core -> anal -> lineswidth = node -> i_value		733673	0		=			
ANR	733696	PtrMemberAccess	core -> anal -> lineswidth		733673	0					
ANR	733697	PtrMemberAccess	core -> anal		733673	0					
ANR	733698	Identifier	core		733673	0					
ANR	733699	Identifier	anal		733673	1					
ANR	733700	Identifier	lineswidth		733673	1					
ANR	733701	PtrMemberAccess	node -> i_value		733673	1					
ANR	733702	Identifier	node		733673	0					
ANR	733703	Identifier	i_value		733673	1					
ANR	733704	ReturnStatement	return true ;	767:1:21511:21522	733673	3	True				
ANR	733705	Identifier	true		733673	0					
ANR	733706	ReturnType	static bool		733673	1					
ANR	733707	Identifier	cb_asmlineswidth		733673	2					
ANR	733708	ParameterList	"void * user , void * data"		733673	3					
ANR	733709	Parameter	void * user	763:29:21369:21378	733673	0	True				
ANR	733710	ParameterType	void *		733673	0					
ANR	733711	Identifier	user		733673	1					
ANR	733712	Parameter	void * data	763:41:21381:21390	733673	1	True				
ANR	733713	ParameterType	void *		733673	0					
ANR	733714	Identifier	data		733673	1					
ANR	733715	CFGEntryNode	ENTRY		733673		True				
ANR	733716	CFGExitNode	EXIT		733673		True				
ANR	733717	Symbol	core		733673						
ANR	733718	Symbol	node		733673						
ANR	733719	Symbol	* core -> anal		733673						
ANR	733720	Symbol	core -> anal -> lineswidth		733673						
ANR	733721	Symbol	data		733673						
ANR	733722	Symbol	* core		733673						
ANR	733723	Symbol	true		733673						
ANR	733724	Symbol	* node		733673						
ANR	733725	Symbol	user		733673						
ANR	733726	Symbol	core -> anal		733673						
ANR	733727	Symbol	* * core		733673						
ANR	733728	Symbol	node -> i_value		733673						
ANR	733729	Function	cb_emustr	770:0:21527:21738							
ANR	733730	FunctionDef	"cb_emustr (void * user , void * data)"		733729	0					
ANR	733731	CompoundStatement		770:46:21573:21738	733729	0					
ANR	733732	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	771:1:21576:21604	733729	0	True				
ANR	733733	IdentifierDecl	* core = ( RCore * ) user		733729	0					
ANR	733734	IdentifierDeclType	RCore *		733729	0					
ANR	733735	Identifier	core		733729	1					
ANR	733736	AssignmentExpression	* core = ( RCore * ) user		733729	2		=			
ANR	733737	Identifier	core		733729	0					
ANR	733738	CastExpression	( RCore * ) user		733729	1					
ANR	733739	CastTarget	RCore *		733729	0					
ANR	733740	Identifier	user		733729	1					
ANR	733741	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	772:1:21607:21647	733729	1	True				
ANR	733742	IdentifierDecl	* node = ( RConfigNode * ) data		733729	0					
ANR	733743	IdentifierDeclType	RConfigNode *		733729	0					
ANR	733744	Identifier	node		733729	1					
ANR	733745	AssignmentExpression	* node = ( RConfigNode * ) data		733729	2		=			
ANR	733746	Identifier	node		733729	0					
ANR	733747	CastExpression	( RConfigNode * ) data		733729	1					
ANR	733748	CastTarget	RConfigNode *		733729	0					
ANR	733749	Identifier	data		733729	1					
ANR	733750	IfStatement	if ( node -> i_value )		733729	2					
ANR	733751	Condition	node -> i_value	773:5:21654:21666	733729	0	True				
ANR	733752	PtrMemberAccess	node -> i_value		733729	0					
ANR	733753	Identifier	node		733729	0					
ANR	733754	Identifier	i_value		733729	1					
ANR	733755	CompoundStatement		4:20:95:95	733729	1					
ANR	733756	ExpressionStatement	"r_config_set ( core -> config , ""asm.emu"" , ""true"" )"	774:2:21673:21719	733729	0	True				
ANR	733757	CallExpression	"r_config_set ( core -> config , ""asm.emu"" , ""true"" )"		733729	0					
ANR	733758	Callee	r_config_set		733729	0					
ANR	733759	Identifier	r_config_set		733729	0					
ANR	733760	ArgumentList	core -> config		733729	1					
ANR	733761	Argument	core -> config		733729	0					
ANR	733762	PtrMemberAccess	core -> config		733729	0					
ANR	733763	Identifier	core		733729	0					
ANR	733764	Identifier	config		733729	1					
ANR	733765	Argument	"""asm.emu"""		733729	1					
ANR	733766	PrimaryExpression	"""asm.emu"""		733729	0					
ANR	733767	Argument	"""true"""		733729	2					
ANR	733768	PrimaryExpression	"""true"""		733729	0					
ANR	733769	ReturnStatement	return true ;	776:1:21725:21736	733729	3	True				
ANR	733770	Identifier	true		733729	0					
ANR	733771	ReturnType	static bool		733729	1					
ANR	733772	Identifier	cb_emustr		733729	2					
ANR	733773	ParameterList	"void * user , void * data"		733729	3					
ANR	733774	Parameter	void * user	770:22:21549:21558	733729	0	True				
ANR	733775	ParameterType	void *		733729	0					
ANR	733776	Identifier	user		733729	1					
ANR	733777	Parameter	void * data	770:34:21561:21570	733729	1	True				
ANR	733778	ParameterType	void *		733729	0					
ANR	733779	Identifier	data		733729	1					
ANR	733780	CFGEntryNode	ENTRY		733729		True				
ANR	733781	CFGExitNode	EXIT		733729		True				
ANR	733782	Symbol	core -> config		733729						
ANR	733783	Symbol	core		733729						
ANR	733784	Symbol	node		733729						
ANR	733785	Symbol	data		733729						
ANR	733786	Symbol	* core		733729						
ANR	733787	Symbol	true		733729						
ANR	733788	Symbol	* node		733729						
ANR	733789	Symbol	user		733729						
ANR	733790	Symbol	node -> i_value		733729						
ANR	733791	Function	cb_emuskip	779:0:21741:22238							
ANR	733792	FunctionDef	"cb_emuskip (void * user , void * data)"		733791	0					
ANR	733793	CompoundStatement		779:47:21788:22238	733791	0					
ANR	733794	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	780:1:21791:21830	733791	0	True				
ANR	733795	IdentifierDecl	* node = ( RConfigNode * ) data		733791	0					
ANR	733796	IdentifierDeclType	RConfigNode *		733791	0					
ANR	733797	Identifier	node		733791	1					
ANR	733798	AssignmentExpression	* node = ( RConfigNode * ) data		733791	2		=			
ANR	733799	Identifier	node		733791	0					
ANR	733800	CastExpression	( RConfigNode * ) data		733791	1					
ANR	733801	CastTarget	RConfigNode *		733791	0					
ANR	733802	Identifier	data		733791	1					
ANR	733803	IfStatement	if ( * node -> value == '?' )		733791	1					
ANR	733804	Condition	* node -> value == '?'	781:5:21837:21855	733791	0	True				
ANR	733805	EqualityExpression	* node -> value == '?'		733791	0		==			
ANR	733806	UnaryOperationExpression	* node -> value		733791	0					
ANR	733807	UnaryOperator	*		733791	0					
ANR	733808	PtrMemberAccess	node -> value		733791	1					
ANR	733809	Identifier	node		733791	0					
ANR	733810	Identifier	value		733791	1					
ANR	733811	PrimaryExpression	'?'		733791	1					
ANR	733812	CompoundStatement		3:26:69:69	733791	1					
ANR	733813	IfStatement	if ( strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?' )		733791	0					
ANR	733814	Condition	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'	782:6:21866:21914	733791	0	True				
ANR	733815	AndExpression	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'		733791	0		&&			
ANR	733816	RelationalExpression	strlen ( node -> value ) > 1		733791	0		>			
ANR	733817	CallExpression	strlen ( node -> value )		733791	0					
ANR	733818	Callee	strlen		733791	0					
ANR	733819	Identifier	strlen		733791	0					
ANR	733820	ArgumentList	node -> value		733791	1					
ANR	733821	Argument	node -> value		733791	0					
ANR	733822	PtrMemberAccess	node -> value		733791	0					
ANR	733823	Identifier	node		733791	0					
ANR	733824	Identifier	value		733791	1					
ANR	733825	PrimaryExpression	1		733791	1					
ANR	733826	EqualityExpression	node -> value [ 1 ] == '?'		733791	1		==			
ANR	733827	ArrayIndexing	node -> value [ 1 ]		733791	0					
ANR	733828	PtrMemberAccess	node -> value		733791	0					
ANR	733829	Identifier	node		733791	0					
ANR	733830	Identifier	value		733791	1					
ANR	733831	PrimaryExpression	1		733791	1					
ANR	733832	PrimaryExpression	'?'		733791	1					
ANR	733833	CompoundStatement		4:57:128:128	733791	1					
ANR	733834	Statement	r_cons_printf	783:3:21922:21934	733791	0	True				
ANR	733835	Statement	(	783:17:21936:21936	733791	1	True				
ANR	733836	Statement	"""Concatenation of meta types encoded as characters:\\n"""	783:18:21937:21990	733791	2	True				
ANR	733837	Statement	"""'d': data\\n'c': code\\n's': string\\n'f': format\\n'm': magic\\n"""	784:4:21998:22059	733791	3	True				
ANR	733838	Statement	"""'h': hide\\n'C': comment\\n'r': run\\n"""	785:4:22067:22103	733791	4	True				
ANR	733839	Statement	"""(default is 'ds' to skip data and strings)\\n"""	786:4:22111:22156	733791	5	True				
ANR	733840	Statement	)	786:50:22157:22157	733791	6	True				
ANR	733841	ExpressionStatement		786:51:22158:22158	733791	7	True				
ANR	733842	ElseStatement	else		733791	0					
ANR	733843	CompoundStatement		9:9:380:380	733791	0					
ANR	733844	ExpressionStatement	print_node_options ( node )	788:3:22174:22199	733791	0	True				
ANR	733845	CallExpression	print_node_options ( node )		733791	0					
ANR	733846	Callee	print_node_options		733791	0					
ANR	733847	Identifier	print_node_options		733791	0					
ANR	733848	ArgumentList	node		733791	1					
ANR	733849	Argument	node		733791	0					
ANR	733850	Identifier	node		733791	0					
ANR	733851	ReturnStatement	return false ;	790:2:22207:22219	733791	1	True				
ANR	733852	Identifier	false		733791	0					
ANR	733853	ReturnStatement	return true ;	792:1:22225:22236	733791	2	True				
ANR	733854	Identifier	true		733791	0					
ANR	733855	ReturnType	static bool		733791	1					
ANR	733856	Identifier	cb_emuskip		733791	2					
ANR	733857	ParameterList	"void * user , void * data"		733791	3					
ANR	733858	Parameter	void * user	779:23:21764:21773	733791	0	True				
ANR	733859	ParameterType	void *		733791	0					
ANR	733860	Identifier	user		733791	1					
ANR	733861	Parameter	void * data	779:35:21776:21785	733791	1	True				
ANR	733862	ParameterType	void *		733791	0					
ANR	733863	Identifier	data		733791	1					
ANR	733864	CFGEntryNode	ENTRY		733791		True				
ANR	733865	CFGExitNode	EXIT		733791		True				
ANR	733866	Symbol	node		733791						
ANR	733867	Symbol	strlen		733791						
ANR	733868	Symbol	* node -> value		733791						
ANR	733869	Symbol	data		733791						
ANR	733870	Symbol	* * node		733791						
ANR	733871	Symbol	false		733791						
ANR	733872	Symbol	true		733791						
ANR	733873	Symbol	* node		733791						
ANR	733874	Symbol	user		733791						
ANR	733875	Symbol	node -> value		733791						
ANR	733876	Function	cb_asm_armimm	795:0:22241:22439							
ANR	733877	FunctionDef	"cb_asm_armimm (void * user , void * data)"		733876	0					
ANR	733878	CompoundStatement		795:50:22291:22439	733876	0					
ANR	733879	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	796:1:22294:22322	733876	0	True				
ANR	733880	IdentifierDecl	* core = ( RCore * ) user		733876	0					
ANR	733881	IdentifierDeclType	RCore *		733876	0					
ANR	733882	Identifier	core		733876	1					
ANR	733883	AssignmentExpression	* core = ( RCore * ) user		733876	2		=			
ANR	733884	Identifier	core		733876	0					
ANR	733885	CastExpression	( RCore * ) user		733876	1					
ANR	733886	CastTarget	RCore *		733876	0					
ANR	733887	Identifier	user		733876	1					
ANR	733888	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	797:1:22325:22365	733876	1	True				
ANR	733889	IdentifierDecl	* node = ( RConfigNode * ) data		733876	0					
ANR	733890	IdentifierDeclType	RConfigNode *		733876	0					
ANR	733891	Identifier	node		733876	1					
ANR	733892	AssignmentExpression	* node = ( RConfigNode * ) data		733876	2		=			
ANR	733893	Identifier	node		733876	0					
ANR	733894	CastExpression	( RConfigNode * ) data		733876	1					
ANR	733895	CastTarget	RConfigNode *		733876	0					
ANR	733896	Identifier	data		733876	1					
ANR	733897	ExpressionStatement	core -> assembler -> immdisp = node -> i_value ? true : false	798:1:22368:22423	733876	2	True				
ANR	733898	AssignmentExpression	core -> assembler -> immdisp = node -> i_value ? true : false		733876	0		=			
ANR	733899	PtrMemberAccess	core -> assembler -> immdisp		733876	0					
ANR	733900	PtrMemberAccess	core -> assembler		733876	0					
ANR	733901	Identifier	core		733876	0					
ANR	733902	Identifier	assembler		733876	1					
ANR	733903	Identifier	immdisp		733876	1					
ANR	733904	ConditionalExpression	node -> i_value ? true : false		733876	1					
ANR	733905	Condition	node -> i_value		733876	0					
ANR	733906	PtrMemberAccess	node -> i_value		733876	0					
ANR	733907	Identifier	node		733876	0					
ANR	733908	Identifier	i_value		733876	1					
ANR	733909	Identifier	true		733876	1					
ANR	733910	Identifier	false		733876	2					
ANR	733911	ReturnStatement	return true ;	799:1:22426:22437	733876	3	True				
ANR	733912	Identifier	true		733876	0					
ANR	733913	ReturnType	static bool		733876	1					
ANR	733914	Identifier	cb_asm_armimm		733876	2					
ANR	733915	ParameterList	"void * user , void * data"		733876	3					
ANR	733916	Parameter	void * user	795:26:22267:22276	733876	0	True				
ANR	733917	ParameterType	void *		733876	0					
ANR	733918	Identifier	user		733876	1					
ANR	733919	Parameter	void * data	795:38:22279:22288	733876	1	True				
ANR	733920	ParameterType	void *		733876	0					
ANR	733921	Identifier	data		733876	1					
ANR	733922	CFGEntryNode	ENTRY		733876		True				
ANR	733923	CFGExitNode	EXIT		733876		True				
ANR	733924	Symbol	data		733876						
ANR	733925	Symbol	* core		733876						
ANR	733926	Symbol	false		733876						
ANR	733927	Symbol	core -> assembler		733876						
ANR	733928	Symbol	node -> i_value		733876						
ANR	733929	Symbol	* core -> assembler		733876						
ANR	733930	Symbol	core		733876						
ANR	733931	Symbol	node		733876						
ANR	733932	Symbol	true		733876						
ANR	733933	Symbol	* node		733876						
ANR	733934	Symbol	user		733876						
ANR	733935	Symbol	core -> assembler -> immdisp		733876						
ANR	733936	Symbol	* * core		733876						
ANR	733937	Function	cb_asm_invhex	802:0:22442:22624							
ANR	733938	FunctionDef	"cb_asm_invhex (void * user , void * data)"		733937	0					
ANR	733939	CompoundStatement		802:50:22492:22624	733937	0					
ANR	733940	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	803:1:22495:22523	733937	0	True				
ANR	733941	IdentifierDecl	* core = ( RCore * ) user		733937	0					
ANR	733942	IdentifierDeclType	RCore *		733937	0					
ANR	733943	Identifier	core		733937	1					
ANR	733944	AssignmentExpression	* core = ( RCore * ) user		733937	2		=			
ANR	733945	Identifier	core		733937	0					
ANR	733946	CastExpression	( RCore * ) user		733937	1					
ANR	733947	CastTarget	RCore *		733937	0					
ANR	733948	Identifier	user		733937	1					
ANR	733949	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	804:1:22526:22566	733937	1	True				
ANR	733950	IdentifierDecl	* node = ( RConfigNode * ) data		733937	0					
ANR	733951	IdentifierDeclType	RConfigNode *		733937	0					
ANR	733952	Identifier	node		733937	1					
ANR	733953	AssignmentExpression	* node = ( RConfigNode * ) data		733937	2		=			
ANR	733954	Identifier	node		733937	0					
ANR	733955	CastExpression	( RConfigNode * ) data		733937	1					
ANR	733956	CastTarget	RConfigNode *		733937	0					
ANR	733957	Identifier	data		733937	1					
ANR	733958	ExpressionStatement	core -> assembler -> invhex = node -> i_value	805:1:22569:22608	733937	2	True				
ANR	733959	AssignmentExpression	core -> assembler -> invhex = node -> i_value		733937	0		=			
ANR	733960	PtrMemberAccess	core -> assembler -> invhex		733937	0					
ANR	733961	PtrMemberAccess	core -> assembler		733937	0					
ANR	733962	Identifier	core		733937	0					
ANR	733963	Identifier	assembler		733937	1					
ANR	733964	Identifier	invhex		733937	1					
ANR	733965	PtrMemberAccess	node -> i_value		733937	1					
ANR	733966	Identifier	node		733937	0					
ANR	733967	Identifier	i_value		733937	1					
ANR	733968	ReturnStatement	return true ;	806:1:22611:22622	733937	3	True				
ANR	733969	Identifier	true		733937	0					
ANR	733970	ReturnType	static bool		733937	1					
ANR	733971	Identifier	cb_asm_invhex		733937	2					
ANR	733972	ParameterList	"void * user , void * data"		733937	3					
ANR	733973	Parameter	void * user	802:26:22468:22477	733937	0	True				
ANR	733974	ParameterType	void *		733937	0					
ANR	733975	Identifier	user		733937	1					
ANR	733976	Parameter	void * data	802:38:22480:22489	733937	1	True				
ANR	733977	ParameterType	void *		733937	0					
ANR	733978	Identifier	data		733937	1					
ANR	733979	CFGEntryNode	ENTRY		733937		True				
ANR	733980	CFGExitNode	EXIT		733937		True				
ANR	733981	Symbol	* core -> assembler		733937						
ANR	733982	Symbol	core		733937						
ANR	733983	Symbol	node		733937						
ANR	733984	Symbol	data		733937						
ANR	733985	Symbol	* core		733937						
ANR	733986	Symbol	true		733937						
ANR	733987	Symbol	core -> assembler		733937						
ANR	733988	Symbol	core -> assembler -> invhex		733937						
ANR	733989	Symbol	* node		733937						
ANR	733990	Symbol	user		733937						
ANR	733991	Symbol	* * core		733937						
ANR	733992	Symbol	node -> i_value		733937						
ANR	733993	Function	cb_asm_pcalign	809:0:22627:22895							
ANR	733994	FunctionDef	"cb_asm_pcalign (void * user , void * data)"		733993	0					
ANR	733995	CompoundStatement		809:51:22678:22895	733993	0					
ANR	733996	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	810:1:22681:22709	733993	0	True				
ANR	733997	IdentifierDecl	* core = ( RCore * ) user		733993	0					
ANR	733998	IdentifierDeclType	RCore *		733993	0					
ANR	733999	Identifier	core		733993	1					
ANR	734000	AssignmentExpression	* core = ( RCore * ) user		733993	2		=			
ANR	734001	Identifier	core		733993	0					
ANR	734002	CastExpression	( RCore * ) user		733993	1					
ANR	734003	CastTarget	RCore *		733993	0					
ANR	734004	Identifier	user		733993	1					
ANR	734005	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	811:1:22712:22752	733993	1	True				
ANR	734006	IdentifierDecl	* node = ( RConfigNode * ) data		733993	0					
ANR	734007	IdentifierDeclType	RConfigNode *		733993	0					
ANR	734008	Identifier	node		733993	1					
ANR	734009	AssignmentExpression	* node = ( RConfigNode * ) data		733993	2		=			
ANR	734010	Identifier	node		733993	0					
ANR	734011	CastExpression	( RConfigNode * ) data		733993	1					
ANR	734012	CastTarget	RConfigNode *		733993	0					
ANR	734013	Identifier	data		733993	1					
ANR	734014	IdentifierDeclStatement	int align = node -> i_value ;	812:1:22755:22780	733993	2	True				
ANR	734015	IdentifierDecl	align = node -> i_value		733993	0					
ANR	734016	IdentifierDeclType	int		733993	0					
ANR	734017	Identifier	align		733993	1					
ANR	734018	AssignmentExpression	align = node -> i_value		733993	2		=			
ANR	734019	Identifier	align		733993	0					
ANR	734020	PtrMemberAccess	node -> i_value		733993	1					
ANR	734021	Identifier	node		733993	0					
ANR	734022	Identifier	i_value		733993	1					
ANR	734023	IfStatement	if ( align < 0 )		733993	3					
ANR	734024	Condition	align < 0	813:5:22787:22795	733993	0	True				
ANR	734025	RelationalExpression	align < 0		733993	0		<			
ANR	734026	Identifier	align		733993	0					
ANR	734027	PrimaryExpression	0		733993	1					
ANR	734028	CompoundStatement		5:16:119:119	733993	1					
ANR	734029	ExpressionStatement	align = 0	814:2:22802:22811	733993	0	True				
ANR	734030	AssignmentExpression	align = 0		733993	0		=			
ANR	734031	Identifier	align		733993	0					
ANR	734032	PrimaryExpression	0		733993	1					
ANR	734033	ExpressionStatement	core -> assembler -> pcalign = align	816:1:22817:22849	733993	4	True				
ANR	734034	AssignmentExpression	core -> assembler -> pcalign = align		733993	0		=			
ANR	734035	PtrMemberAccess	core -> assembler -> pcalign		733993	0					
ANR	734036	PtrMemberAccess	core -> assembler		733993	0					
ANR	734037	Identifier	core		733993	0					
ANR	734038	Identifier	assembler		733993	1					
ANR	734039	Identifier	pcalign		733993	1					
ANR	734040	Identifier	align		733993	1					
ANR	734041	ExpressionStatement	core -> anal -> pcalign = align	817:1:22852:22879	733993	5	True				
ANR	734042	AssignmentExpression	core -> anal -> pcalign = align		733993	0		=			
ANR	734043	PtrMemberAccess	core -> anal -> pcalign		733993	0					
ANR	734044	PtrMemberAccess	core -> anal		733993	0					
ANR	734045	Identifier	core		733993	0					
ANR	734046	Identifier	anal		733993	1					
ANR	734047	Identifier	pcalign		733993	1					
ANR	734048	Identifier	align		733993	1					
ANR	734049	ReturnStatement	return true ;	818:1:22882:22893	733993	6	True				
ANR	734050	Identifier	true		733993	0					
ANR	734051	ReturnType	static bool		733993	1					
ANR	734052	Identifier	cb_asm_pcalign		733993	2					
ANR	734053	ParameterList	"void * user , void * data"		733993	3					
ANR	734054	Parameter	void * user	809:27:22654:22663	733993	0	True				
ANR	734055	ParameterType	void *		733993	0					
ANR	734056	Identifier	user		733993	1					
ANR	734057	Parameter	void * data	809:39:22666:22675	733993	1	True				
ANR	734058	ParameterType	void *		733993	0					
ANR	734059	Identifier	data		733993	1					
ANR	734060	CFGEntryNode	ENTRY		733993		True				
ANR	734061	CFGExitNode	EXIT		733993		True				
ANR	734062	Symbol	data		733993						
ANR	734063	Symbol	* core		733993						
ANR	734064	Symbol	core -> assembler		733993						
ANR	734065	Symbol	align		733993						
ANR	734066	Symbol	core -> anal		733993						
ANR	734067	Symbol	node -> i_value		733993						
ANR	734068	Symbol	* core -> assembler		733993						
ANR	734069	Symbol	core		733993						
ANR	734070	Symbol	node		733993						
ANR	734071	Symbol	* core -> anal		733993						
ANR	734072	Symbol	core -> assembler -> pcalign		733993						
ANR	734073	Symbol	true		733993						
ANR	734074	Symbol	* node		733993						
ANR	734075	Symbol	user		733993						
ANR	734076	Symbol	* * core		733993						
ANR	734077	Symbol	core -> anal -> pcalign		733993						
ANR	734078	Function	cb_asmos	821:0:22898:23617							
ANR	734079	FunctionDef	"cb_asmos (void * user , void * data)"		734078	0					
ANR	734080	CompoundStatement		821:45:22943:23617	734078	0					
ANR	734081	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	822:1:22946:22973	734078	0	True				
ANR	734082	IdentifierDecl	* core = ( RCore * ) user		734078	0					
ANR	734083	IdentifierDeclType	RCore *		734078	0					
ANR	734084	Identifier	core		734078	1					
ANR	734085	AssignmentExpression	* core = ( RCore * ) user		734078	2		=			
ANR	734086	Identifier	core		734078	0					
ANR	734087	CastExpression	( RCore * ) user		734078	1					
ANR	734088	CastTarget	RCore *		734078	0					
ANR	734089	Identifier	user		734078	1					
ANR	734090	IdentifierDeclStatement	"int asmbits = r_config_get_i ( core -> config , ""asm.bits"" ) ;"	823:1:22976:23031	734078	1	True				
ANR	734091	IdentifierDecl	"asmbits = r_config_get_i ( core -> config , ""asm.bits"" )"		734078	0					
ANR	734092	IdentifierDeclType	int		734078	0					
ANR	734093	Identifier	asmbits		734078	1					
ANR	734094	AssignmentExpression	"asmbits = r_config_get_i ( core -> config , ""asm.bits"" )"		734078	2		=			
ANR	734095	Identifier	asmbits		734078	0					
ANR	734096	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		734078	1					
ANR	734097	Callee	r_config_get_i		734078	0					
ANR	734098	Identifier	r_config_get_i		734078	0					
ANR	734099	ArgumentList	core -> config		734078	1					
ANR	734100	Argument	core -> config		734078	0					
ANR	734101	PtrMemberAccess	core -> config		734078	0					
ANR	734102	Identifier	core		734078	0					
ANR	734103	Identifier	config		734078	1					
ANR	734104	Argument	"""asm.bits"""		734078	1					
ANR	734105	PrimaryExpression	"""asm.bits"""		734078	0					
ANR	734106	IdentifierDeclStatement	"RConfigNode * asmarch , * node = ( RConfigNode * ) data ;"	824:1:23034:23083	734078	2	True				
ANR	734107	IdentifierDecl	* asmarch		734078	0					
ANR	734108	IdentifierDeclType	RConfigNode *		734078	0					
ANR	734109	Identifier	asmarch		734078	1					
ANR	734110	IdentifierDecl	* node = ( RConfigNode * ) data		734078	1					
ANR	734111	IdentifierDeclType	RConfigNode *		734078	0					
ANR	734112	Identifier	node		734078	1					
ANR	734113	AssignmentExpression	* node = ( RConfigNode * ) data		734078	2		=			
ANR	734114	Identifier	node		734078	0					
ANR	734115	CastExpression	( RConfigNode * ) data		734078	1					
ANR	734116	CastTarget	RConfigNode *		734078	0					
ANR	734117	Identifier	data		734078	1					
ANR	734118	IfStatement	if ( * node -> value == '?' )		734078	3					
ANR	734119	Condition	* node -> value == '?'	826:5:23091:23109	734078	0	True				
ANR	734120	EqualityExpression	* node -> value == '?'		734078	0		==			
ANR	734121	UnaryOperationExpression	* node -> value		734078	0					
ANR	734122	UnaryOperator	*		734078	0					
ANR	734123	PtrMemberAccess	node -> value		734078	1					
ANR	734124	Identifier	node		734078	0					
ANR	734125	Identifier	value		734078	1					
ANR	734126	PrimaryExpression	'?'		734078	1					
ANR	734127	CompoundStatement		6:26:168:168	734078	1					
ANR	734128	ExpressionStatement	print_node_options ( node )	827:2:23116:23141	734078	0	True				
ANR	734129	CallExpression	print_node_options ( node )		734078	0					
ANR	734130	Callee	print_node_options		734078	0					
ANR	734131	Identifier	print_node_options		734078	0					
ANR	734132	ArgumentList	node		734078	1					
ANR	734133	Argument	node		734078	0					
ANR	734134	Identifier	node		734078	0					
ANR	734135	ReturnStatement	return 0 ;	828:2:23145:23153	734078	1	True				
ANR	734136	PrimaryExpression	0		734078	0					
ANR	734137	IfStatement	if ( ! node -> value [ 0 ] )		734078	4					
ANR	734138	Condition	! node -> value [ 0 ]	830:5:23163:23177	734078	0	True				
ANR	734139	UnaryOperationExpression	! node -> value [ 0 ]		734078	0					
ANR	734140	UnaryOperator	!		734078	0					
ANR	734141	ArrayIndexing	node -> value [ 0 ]		734078	1					
ANR	734142	PtrMemberAccess	node -> value		734078	0					
ANR	734143	Identifier	node		734078	0					
ANR	734144	Identifier	value		734078	1					
ANR	734145	PrimaryExpression	0		734078	1					
ANR	734146	CompoundStatement		10:22:236:236	734078	1					
ANR	734147	ExpressionStatement	free ( node -> value )	831:2:23184:23202	734078	0	True				
ANR	734148	CallExpression	free ( node -> value )		734078	0					
ANR	734149	Callee	free		734078	0					
ANR	734150	Identifier	free		734078	0					
ANR	734151	ArgumentList	node -> value		734078	1					
ANR	734152	Argument	node -> value		734078	0					
ANR	734153	PtrMemberAccess	node -> value		734078	0					
ANR	734154	Identifier	node		734078	0					
ANR	734155	Identifier	value		734078	1					
ANR	734156	ExpressionStatement	node -> value = strdup ( R_SYS_OS )	832:2:23206:23237	734078	1	True				
ANR	734157	AssignmentExpression	node -> value = strdup ( R_SYS_OS )		734078	0		=			
ANR	734158	PtrMemberAccess	node -> value		734078	0					
ANR	734159	Identifier	node		734078	0					
ANR	734160	Identifier	value		734078	1					
ANR	734161	CallExpression	strdup ( R_SYS_OS )		734078	1					
ANR	734162	Callee	strdup		734078	0					
ANR	734163	Identifier	strdup		734078	0					
ANR	734164	ArgumentList	R_SYS_OS		734078	1					
ANR	734165	Argument	R_SYS_OS		734078	0					
ANR	734166	Identifier	R_SYS_OS		734078	0					
ANR	734167	ExpressionStatement	"asmarch = r_config_node_get ( core -> config , ""asm.arch"" )"	834:1:23243:23297	734078	5	True				
ANR	734168	AssignmentExpression	"asmarch = r_config_node_get ( core -> config , ""asm.arch"" )"		734078	0		=			
ANR	734169	Identifier	asmarch		734078	0					
ANR	734170	CallExpression	"r_config_node_get ( core -> config , ""asm.arch"" )"		734078	1					
ANR	734171	Callee	r_config_node_get		734078	0					
ANR	734172	Identifier	r_config_node_get		734078	0					
ANR	734173	ArgumentList	core -> config		734078	1					
ANR	734174	Argument	core -> config		734078	0					
ANR	734175	PtrMemberAccess	core -> config		734078	0					
ANR	734176	Identifier	core		734078	0					
ANR	734177	Identifier	config		734078	1					
ANR	734178	Argument	"""asm.arch"""		734078	1					
ANR	734179	PrimaryExpression	"""asm.arch"""		734078	0					
ANR	734180	IfStatement	if ( asmarch )		734078	6					
ANR	734181	Condition	asmarch	835:5:23304:23310	734078	0	True				
ANR	734182	Identifier	asmarch		734078	0					
ANR	734183	CompoundStatement		16:2:373:432	734078	1					
ANR	734184	IdentifierDeclStatement	"const char * asmcpu = r_config_get ( core -> config , ""asm.cpu"" ) ;"	836:2:23317:23376	734078	0	True				
ANR	734185	IdentifierDecl	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		734078	0					
ANR	734186	IdentifierDeclType	const char *		734078	0					
ANR	734187	Identifier	asmcpu		734078	1					
ANR	734188	AssignmentExpression	"* asmcpu = r_config_get ( core -> config , ""asm.cpu"" )"		734078	2		=			
ANR	734189	Identifier	asmcpu		734078	0					
ANR	734190	CallExpression	"r_config_get ( core -> config , ""asm.cpu"" )"		734078	1					
ANR	734191	Callee	r_config_get		734078	0					
ANR	734192	Identifier	r_config_get		734078	0					
ANR	734193	ArgumentList	core -> config		734078	1					
ANR	734194	Argument	core -> config		734078	0					
ANR	734195	PtrMemberAccess	core -> config		734078	0					
ANR	734196	Identifier	core		734078	0					
ANR	734197	Identifier	config		734078	1					
ANR	734198	Argument	"""asm.cpu"""		734078	1					
ANR	734199	PrimaryExpression	"""asm.cpu"""		734078	0					
ANR	734200	ExpressionStatement	"r_syscall_setup ( core -> anal -> syscall , asmarch -> value , core -> anal -> bits , asmcpu , node -> value )"	837:2:23380:23472	734078	1	True				
ANR	734201	CallExpression	"r_syscall_setup ( core -> anal -> syscall , asmarch -> value , core -> anal -> bits , asmcpu , node -> value )"		734078	0					
ANR	734202	Callee	r_syscall_setup		734078	0					
ANR	734203	Identifier	r_syscall_setup		734078	0					
ANR	734204	ArgumentList	core -> anal -> syscall		734078	1					
ANR	734205	Argument	core -> anal -> syscall		734078	0					
ANR	734206	PtrMemberAccess	core -> anal -> syscall		734078	0					
ANR	734207	PtrMemberAccess	core -> anal		734078	0					
ANR	734208	Identifier	core		734078	0					
ANR	734209	Identifier	anal		734078	1					
ANR	734210	Identifier	syscall		734078	1					
ANR	734211	Argument	asmarch -> value		734078	1					
ANR	734212	PtrMemberAccess	asmarch -> value		734078	0					
ANR	734213	Identifier	asmarch		734078	0					
ANR	734214	Identifier	value		734078	1					
ANR	734215	Argument	core -> anal -> bits		734078	2					
ANR	734216	PtrMemberAccess	core -> anal -> bits		734078	0					
ANR	734217	PtrMemberAccess	core -> anal		734078	0					
ANR	734218	Identifier	core		734078	0					
ANR	734219	Identifier	anal		734078	1					
ANR	734220	Identifier	bits		734078	1					
ANR	734221	Argument	asmcpu		734078	3					
ANR	734222	Identifier	asmcpu		734078	0					
ANR	734223	Argument	node -> value		734078	4					
ANR	734224	PtrMemberAccess	node -> value		734078	0					
ANR	734225	Identifier	node		734078	0					
ANR	734226	Identifier	value		734078	1					
ANR	734227	ExpressionStatement	"__setsegoff ( core -> config , asmarch -> value , asmbits )"	838:2:23476:23527	734078	2	True				
ANR	734228	CallExpression	"__setsegoff ( core -> config , asmarch -> value , asmbits )"		734078	0					
ANR	734229	Callee	__setsegoff		734078	0					
ANR	734230	Identifier	__setsegoff		734078	0					
ANR	734231	ArgumentList	core -> config		734078	1					
ANR	734232	Argument	core -> config		734078	0					
ANR	734233	PtrMemberAccess	core -> config		734078	0					
ANR	734234	Identifier	core		734078	0					
ANR	734235	Identifier	config		734078	1					
ANR	734236	Argument	asmarch -> value		734078	1					
ANR	734237	PtrMemberAccess	asmarch -> value		734078	0					
ANR	734238	Identifier	asmarch		734078	0					
ANR	734239	Identifier	value		734078	1					
ANR	734240	Argument	asmbits		734078	2					
ANR	734241	Identifier	asmbits		734078	0					
ANR	734242	ExpressionStatement	"r_anal_set_os ( core -> anal , node -> value )"	840:1:23533:23572	734078	7	True				
ANR	734243	CallExpression	"r_anal_set_os ( core -> anal , node -> value )"		734078	0					
ANR	734244	Callee	r_anal_set_os		734078	0					
ANR	734245	Identifier	r_anal_set_os		734078	0					
ANR	734246	ArgumentList	core -> anal		734078	1					
ANR	734247	Argument	core -> anal		734078	0					
ANR	734248	PtrMemberAccess	core -> anal		734078	0					
ANR	734249	Identifier	core		734078	0					
ANR	734250	Identifier	anal		734078	1					
ANR	734251	Argument	node -> value		734078	1					
ANR	734252	PtrMemberAccess	node -> value		734078	0					
ANR	734253	Identifier	node		734078	0					
ANR	734254	Identifier	value		734078	1					
ANR	734255	ExpressionStatement	r_core_anal_cc_init ( core )	841:1:23575:23601	734078	8	True				
ANR	734256	CallExpression	r_core_anal_cc_init ( core )		734078	0					
ANR	734257	Callee	r_core_anal_cc_init		734078	0					
ANR	734258	Identifier	r_core_anal_cc_init		734078	0					
ANR	734259	ArgumentList	core		734078	1					
ANR	734260	Argument	core		734078	0					
ANR	734261	Identifier	core		734078	0					
ANR	734262	ReturnStatement	return true ;	842:1:23604:23615	734078	9	True				
ANR	734263	Identifier	true		734078	0					
ANR	734264	ReturnType	static bool		734078	1					
ANR	734265	Identifier	cb_asmos		734078	2					
ANR	734266	ParameterList	"void * user , void * data"		734078	3					
ANR	734267	Parameter	void * user	821:21:22919:22928	734078	0	True				
ANR	734268	ParameterType	void *		734078	0					
ANR	734269	Identifier	user		734078	1					
ANR	734270	Parameter	void * data	821:33:22931:22940	734078	1	True				
ANR	734271	ParameterType	void *		734078	0					
ANR	734272	Identifier	data		734078	1					
ANR	734273	CFGEntryNode	ENTRY		734078		True				
ANR	734274	CFGExitNode	EXIT		734078		True				
ANR	734275	Symbol	asmcpu		734078						
ANR	734276	Symbol	data		734078						
ANR	734277	Symbol	* core		734078						
ANR	734278	Symbol	r_config_get		734078						
ANR	734279	Symbol	asmarch -> value		734078						
ANR	734280	Symbol	core -> anal		734078						
ANR	734281	Symbol	* node		734078						
ANR	734282	Symbol	* asmarch		734078						
ANR	734283	Symbol	* * core		734078						
ANR	734284	Symbol	core -> config		734078						
ANR	734285	Symbol	* node -> value		734078						
ANR	734286	Symbol	core -> anal -> bits		734078						
ANR	734287	Symbol	asmbits		734078						
ANR	734288	Symbol	core -> anal -> syscall		734078						
ANR	734289	Symbol	node -> value		734078						
ANR	734290	Symbol	core		734078						
ANR	734291	Symbol	node		734078						
ANR	734292	Symbol	* core -> anal		734078						
ANR	734293	Symbol	* * node		734078						
ANR	734294	Symbol	asmarch		734078						
ANR	734295	Symbol	r_config_get_i		734078						
ANR	734296	Symbol	true		734078						
ANR	734297	Symbol	strdup		734078						
ANR	734298	Symbol	R_SYS_OS		734078						
ANR	734299	Symbol	user		734078						
ANR	734300	Symbol	r_config_node_get		734078						
ANR	734301	Function	cb_asmparser	845:0:23620:23792							
ANR	734302	FunctionDef	"cb_asmparser (void * user , void * data)"		734301	0					
ANR	734303	CompoundStatement		845:49:23669:23792	734301	0					
ANR	734304	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	846:1:23672:23699	734301	0	True				
ANR	734305	IdentifierDecl	* core = ( RCore * ) user		734301	0					
ANR	734306	IdentifierDeclType	RCore *		734301	0					
ANR	734307	Identifier	core		734301	1					
ANR	734308	AssignmentExpression	* core = ( RCore * ) user		734301	2		=			
ANR	734309	Identifier	core		734301	0					
ANR	734310	CastExpression	( RCore * ) user		734301	1					
ANR	734311	CastTarget	RCore *		734301	0					
ANR	734312	Identifier	user		734301	1					
ANR	734313	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	847:1:23702:23741	734301	1	True				
ANR	734314	IdentifierDecl	* node = ( RConfigNode * ) data		734301	0					
ANR	734315	IdentifierDeclType	RConfigNode *		734301	0					
ANR	734316	Identifier	node		734301	1					
ANR	734317	AssignmentExpression	* node = ( RConfigNode * ) data		734301	2		=			
ANR	734318	Identifier	node		734301	0					
ANR	734319	CastExpression	( RConfigNode * ) data		734301	1					
ANR	734320	CastTarget	RConfigNode *		734301	0					
ANR	734321	Identifier	data		734301	1					
ANR	734322	ReturnStatement	"return r_parse_use ( core -> parser , node -> value ) ;"	848:1:23744:23790	734301	2	True				
ANR	734323	CallExpression	"r_parse_use ( core -> parser , node -> value )"		734301	0					
ANR	734324	Callee	r_parse_use		734301	0					
ANR	734325	Identifier	r_parse_use		734301	0					
ANR	734326	ArgumentList	core -> parser		734301	1					
ANR	734327	Argument	core -> parser		734301	0					
ANR	734328	PtrMemberAccess	core -> parser		734301	0					
ANR	734329	Identifier	core		734301	0					
ANR	734330	Identifier	parser		734301	1					
ANR	734331	Argument	node -> value		734301	1					
ANR	734332	PtrMemberAccess	node -> value		734301	0					
ANR	734333	Identifier	node		734301	0					
ANR	734334	Identifier	value		734301	1					
ANR	734335	ReturnType	static bool		734301	1					
ANR	734336	Identifier	cb_asmparser		734301	2					
ANR	734337	ParameterList	"void * user , void * data"		734301	3					
ANR	734338	Parameter	void * user	845:25:23645:23654	734301	0	True				
ANR	734339	ParameterType	void *		734301	0					
ANR	734340	Identifier	user		734301	1					
ANR	734341	Parameter	void * data	845:37:23657:23666	734301	1	True				
ANR	734342	ParameterType	void *		734301	0					
ANR	734343	Identifier	data		734301	1					
ANR	734344	CFGEntryNode	ENTRY		734301		True				
ANR	734345	CFGExitNode	EXIT		734301		True				
ANR	734346	Symbol	core		734301						
ANR	734347	Symbol	node		734301						
ANR	734348	Symbol	core -> parser		734301						
ANR	734349	Symbol	data		734301						
ANR	734350	Symbol	r_parse_use		734301						
ANR	734351	Symbol	* core		734301						
ANR	734352	Symbol	* node		734301						
ANR	734353	Symbol	user		734301						
ANR	734354	Symbol	node -> value		734301						
ANR	734355	Function	cb_binstrenc	851:0:23795:24215							
ANR	734356	FunctionDef	"cb_binstrenc (void * user , void * data)"		734355	0					
ANR	734357	CompoundStatement		851:50:23845:24215	734355	0					
ANR	734358	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	852:1:23848:23887	734355	0	True				
ANR	734359	IdentifierDecl	* node = ( RConfigNode * ) data		734355	0					
ANR	734360	IdentifierDeclType	RConfigNode *		734355	0					
ANR	734361	Identifier	node		734355	1					
ANR	734362	AssignmentExpression	* node = ( RConfigNode * ) data		734355	2		=			
ANR	734363	Identifier	node		734355	0					
ANR	734364	CastExpression	( RConfigNode * ) data		734355	1					
ANR	734365	CastTarget	RConfigNode *		734355	0					
ANR	734366	Identifier	data		734355	1					
ANR	734367	IfStatement	if ( node -> value [ 0 ] == '?' )		734355	1					
ANR	734368	Condition	node -> value [ 0 ] == '?'	853:5:23894:23914	734355	0	True				
ANR	734369	EqualityExpression	node -> value [ 0 ] == '?'		734355	0		==			
ANR	734370	ArrayIndexing	node -> value [ 0 ]		734355	0					
ANR	734371	PtrMemberAccess	node -> value		734355	0					
ANR	734372	Identifier	node		734355	0					
ANR	734373	Identifier	value		734355	1					
ANR	734374	PrimaryExpression	0		734355	1					
ANR	734375	PrimaryExpression	'?'		734355	1					
ANR	734376	CompoundStatement		3:28:71:71	734355	1					
ANR	734377	ExpressionStatement	print_node_options ( node )	854:2:23921:23946	734355	0	True				
ANR	734378	CallExpression	print_node_options ( node )		734355	0					
ANR	734379	Callee	print_node_options		734355	0					
ANR	734380	Identifier	print_node_options		734355	0					
ANR	734381	ArgumentList	node		734355	1					
ANR	734382	Argument	node		734355	0					
ANR	734383	Identifier	node		734355	0					
ANR	734384	Statement	r_cons_printf	855:2:23950:23962	734355	1	True				
ANR	734385	Statement	(	855:16:23964:23964	734355	2	True				
ANR	734386	Statement	"""  -- if string's 2nd & 4th bytes are 0 then utf16le else """	855:17:23965:24023	734355	3	True				
ANR	734387	Statement	"""if 2nd - 4th & 6th bytes are 0 & no char > 0x10ffff then utf32le else """	856:17:24042:24113	734355	4	True				
ANR	734388	Statement	"""if utf8 char detected then utf8 else latin1\\n"""	857:17:24132:24178	734355	5	True				
ANR	734389	Statement	)	857:64:24179:24179	734355	6	True				
ANR	734390	ExpressionStatement		857:65:24180:24180	734355	7	True				
ANR	734391	ReturnStatement	return false ;	858:2:24184:24196	734355	8	True				
ANR	734392	Identifier	false		734355	0					
ANR	734393	ReturnStatement	return true ;	860:1:24202:24213	734355	2	True				
ANR	734394	Identifier	true		734355	0					
ANR	734395	ReturnType	static bool		734355	1					
ANR	734396	Identifier	cb_binstrenc		734355	2					
ANR	734397	ParameterList	"void * user , void * data"		734355	3					
ANR	734398	Parameter	void * user	851:26:23821:23830	734355	0	True				
ANR	734399	ParameterType	void *		734355	0					
ANR	734400	Identifier	user		734355	1					
ANR	734401	Parameter	void * data	851:38:23833:23842	734355	1	True				
ANR	734402	ParameterType	void *		734355	0					
ANR	734403	Identifier	data		734355	1					
ANR	734404	CFGEntryNode	ENTRY		734355		True				
ANR	734405	CFGExitNode	EXIT		734355		True				
ANR	734406	Symbol	node		734355						
ANR	734407	Symbol	* node -> value		734355						
ANR	734408	Symbol	data		734355						
ANR	734409	Symbol	* * node		734355						
ANR	734410	Symbol	false		734355						
ANR	734411	Symbol	true		734355						
ANR	734412	Symbol	* node		734355						
ANR	734413	Symbol	user		734355						
ANR	734414	Symbol	node -> value		734355						
ANR	734415	Function	cb_binfilter	863:0:24218:24391							
ANR	734416	FunctionDef	"cb_binfilter (void * user , void * data)"		734415	0					
ANR	734417	CompoundStatement		863:49:24267:24391	734415	0					
ANR	734418	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	864:1:24270:24297	734415	0	True				
ANR	734419	IdentifierDecl	* core = ( RCore * ) user		734415	0					
ANR	734420	IdentifierDeclType	RCore *		734415	0					
ANR	734421	Identifier	core		734415	1					
ANR	734422	AssignmentExpression	* core = ( RCore * ) user		734415	2		=			
ANR	734423	Identifier	core		734415	0					
ANR	734424	CastExpression	( RCore * ) user		734415	1					
ANR	734425	CastTarget	RCore *		734415	0					
ANR	734426	Identifier	user		734415	1					
ANR	734427	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	865:1:24300:24339	734415	1	True				
ANR	734428	IdentifierDecl	* node = ( RConfigNode * ) data		734415	0					
ANR	734429	IdentifierDeclType	RConfigNode *		734415	0					
ANR	734430	Identifier	node		734415	1					
ANR	734431	AssignmentExpression	* node = ( RConfigNode * ) data		734415	2		=			
ANR	734432	Identifier	node		734415	0					
ANR	734433	CastExpression	( RConfigNode * ) data		734415	1					
ANR	734434	CastTarget	RConfigNode *		734415	0					
ANR	734435	Identifier	data		734415	1					
ANR	734436	ExpressionStatement	core -> bin -> filter = node -> i_value	866:1:24342:24375	734415	2	True				
ANR	734437	AssignmentExpression	core -> bin -> filter = node -> i_value		734415	0		=			
ANR	734438	PtrMemberAccess	core -> bin -> filter		734415	0					
ANR	734439	PtrMemberAccess	core -> bin		734415	0					
ANR	734440	Identifier	core		734415	0					
ANR	734441	Identifier	bin		734415	1					
ANR	734442	Identifier	filter		734415	1					
ANR	734443	PtrMemberAccess	node -> i_value		734415	1					
ANR	734444	Identifier	node		734415	0					
ANR	734445	Identifier	i_value		734415	1					
ANR	734446	ReturnStatement	return true ;	867:1:24378:24389	734415	3	True				
ANR	734447	Identifier	true		734415	0					
ANR	734448	ReturnType	static bool		734415	1					
ANR	734449	Identifier	cb_binfilter		734415	2					
ANR	734450	ParameterList	"void * user , void * data"		734415	3					
ANR	734451	Parameter	void * user	863:25:24243:24252	734415	0	True				
ANR	734452	ParameterType	void *		734415	0					
ANR	734453	Identifier	user		734415	1					
ANR	734454	Parameter	void * data	863:37:24255:24264	734415	1	True				
ANR	734455	ParameterType	void *		734415	0					
ANR	734456	Identifier	data		734415	1					
ANR	734457	CFGEntryNode	ENTRY		734415		True				
ANR	734458	CFGExitNode	EXIT		734415		True				
ANR	734459	Symbol	core		734415						
ANR	734460	Symbol	node		734415						
ANR	734461	Symbol	data		734415						
ANR	734462	Symbol	core -> bin -> filter		734415						
ANR	734463	Symbol	* core		734415						
ANR	734464	Symbol	true		734415						
ANR	734465	Symbol	* node		734415						
ANR	734466	Symbol	* core -> bin		734415						
ANR	734467	Symbol	user		734415						
ANR	734468	Symbol	core -> bin		734415						
ANR	734469	Symbol	* * core		734415						
ANR	734470	Symbol	node -> i_value		734415						
ANR	734471	Function	cb_bdc	871:0:24415:24588							
ANR	734472	FunctionDef	"cb_bdc (void * user , void * data)"		734471	0					
ANR	734473	CompoundStatement		871:43:24458:24588	734471	0					
ANR	734474	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	872:1:24461:24488	734471	0	True				
ANR	734475	IdentifierDecl	* core = ( RCore * ) user		734471	0					
ANR	734476	IdentifierDeclType	RCore *		734471	0					
ANR	734477	Identifier	core		734471	1					
ANR	734478	AssignmentExpression	* core = ( RCore * ) user		734471	2		=			
ANR	734479	Identifier	core		734471	0					
ANR	734480	CastExpression	( RCore * ) user		734471	1					
ANR	734481	CastTarget	RCore *		734471	0					
ANR	734482	Identifier	user		734471	1					
ANR	734483	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	873:1:24491:24530	734471	1	True				
ANR	734484	IdentifierDecl	* node = ( RConfigNode * ) data		734471	0					
ANR	734485	IdentifierDeclType	RConfigNode *		734471	0					
ANR	734486	Identifier	node		734471	1					
ANR	734487	AssignmentExpression	* node = ( RConfigNode * ) data		734471	2		=			
ANR	734488	Identifier	node		734471	0					
ANR	734489	CastExpression	( RConfigNode * ) data		734471	1					
ANR	734490	CastTarget	RConfigNode *		734471	0					
ANR	734491	Identifier	data		734471	1					
ANR	734492	ExpressionStatement	core -> bin -> demanglercmd = node -> i_value	874:1:24533:24572	734471	2	True				
ANR	734493	AssignmentExpression	core -> bin -> demanglercmd = node -> i_value		734471	0		=			
ANR	734494	PtrMemberAccess	core -> bin -> demanglercmd		734471	0					
ANR	734495	PtrMemberAccess	core -> bin		734471	0					
ANR	734496	Identifier	core		734471	0					
ANR	734497	Identifier	bin		734471	1					
ANR	734498	Identifier	demanglercmd		734471	1					
ANR	734499	PtrMemberAccess	node -> i_value		734471	1					
ANR	734500	Identifier	node		734471	0					
ANR	734501	Identifier	i_value		734471	1					
ANR	734502	ReturnStatement	return true ;	875:1:24575:24586	734471	3	True				
ANR	734503	Identifier	true		734471	0					
ANR	734504	ReturnType	static bool		734471	1					
ANR	734505	Identifier	cb_bdc		734471	2					
ANR	734506	ParameterList	"void * user , void * data"		734471	3					
ANR	734507	Parameter	void * user	871:19:24434:24443	734471	0	True				
ANR	734508	ParameterType	void *		734471	0					
ANR	734509	Identifier	user		734471	1					
ANR	734510	Parameter	void * data	871:31:24446:24455	734471	1	True				
ANR	734511	ParameterType	void *		734471	0					
ANR	734512	Identifier	data		734471	1					
ANR	734513	CFGEntryNode	ENTRY		734471		True				
ANR	734514	CFGExitNode	EXIT		734471		True				
ANR	734515	Symbol	core		734471						
ANR	734516	Symbol	node		734471						
ANR	734517	Symbol	core -> bin -> demanglercmd		734471						
ANR	734518	Symbol	data		734471						
ANR	734519	Symbol	* core		734471						
ANR	734520	Symbol	true		734471						
ANR	734521	Symbol	* node		734471						
ANR	734522	Symbol	* core -> bin		734471						
ANR	734523	Symbol	user		734471						
ANR	734524	Symbol	core -> bin		734471						
ANR	734525	Symbol	* * core		734471						
ANR	734526	Symbol	node -> i_value		734471						
ANR	734527	Function	cb_useldr	878:0:24591:24762							
ANR	734528	FunctionDef	"cb_useldr (void * user , void * data)"		734527	0					
ANR	734529	CompoundStatement		878:46:24637:24762	734527	0					
ANR	734530	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	879:1:24640:24667	734527	0	True				
ANR	734531	IdentifierDecl	* core = ( RCore * ) user		734527	0					
ANR	734532	IdentifierDeclType	RCore *		734527	0					
ANR	734533	Identifier	core		734527	1					
ANR	734534	AssignmentExpression	* core = ( RCore * ) user		734527	2		=			
ANR	734535	Identifier	core		734527	0					
ANR	734536	CastExpression	( RCore * ) user		734527	1					
ANR	734537	CastTarget	RCore *		734527	0					
ANR	734538	Identifier	user		734527	1					
ANR	734539	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	880:1:24670:24709	734527	1	True				
ANR	734540	IdentifierDecl	* node = ( RConfigNode * ) data		734527	0					
ANR	734541	IdentifierDeclType	RConfigNode *		734527	0					
ANR	734542	Identifier	node		734527	1					
ANR	734543	AssignmentExpression	* node = ( RConfigNode * ) data		734527	2		=			
ANR	734544	Identifier	node		734527	0					
ANR	734545	CastExpression	( RConfigNode * ) data		734527	1					
ANR	734546	CastTarget	RConfigNode *		734527	0					
ANR	734547	Identifier	data		734527	1					
ANR	734548	ExpressionStatement	core -> bin -> use_ldr = node -> i_value	881:1:24712:24746	734527	2	True				
ANR	734549	AssignmentExpression	core -> bin -> use_ldr = node -> i_value		734527	0		=			
ANR	734550	PtrMemberAccess	core -> bin -> use_ldr		734527	0					
ANR	734551	PtrMemberAccess	core -> bin		734527	0					
ANR	734552	Identifier	core		734527	0					
ANR	734553	Identifier	bin		734527	1					
ANR	734554	Identifier	use_ldr		734527	1					
ANR	734555	PtrMemberAccess	node -> i_value		734527	1					
ANR	734556	Identifier	node		734527	0					
ANR	734557	Identifier	i_value		734527	1					
ANR	734558	ReturnStatement	return true ;	882:1:24749:24760	734527	3	True				
ANR	734559	Identifier	true		734527	0					
ANR	734560	ReturnType	static bool		734527	1					
ANR	734561	Identifier	cb_useldr		734527	2					
ANR	734562	ParameterList	"void * user , void * data"		734527	3					
ANR	734563	Parameter	void * user	878:22:24613:24622	734527	0	True				
ANR	734564	ParameterType	void *		734527	0					
ANR	734565	Identifier	user		734527	1					
ANR	734566	Parameter	void * data	878:34:24625:24634	734527	1	True				
ANR	734567	ParameterType	void *		734527	0					
ANR	734568	Identifier	data		734527	1					
ANR	734569	CFGEntryNode	ENTRY		734527		True				
ANR	734570	CFGExitNode	EXIT		734527		True				
ANR	734571	Symbol	core		734527						
ANR	734572	Symbol	node		734527						
ANR	734573	Symbol	data		734527						
ANR	734574	Symbol	* core		734527						
ANR	734575	Symbol	true		734527						
ANR	734576	Symbol	* node		734527						
ANR	734577	Symbol	* core -> bin		734527						
ANR	734578	Symbol	core -> bin -> use_ldr		734527						
ANR	734579	Symbol	user		734527						
ANR	734580	Symbol	core -> bin		734527						
ANR	734581	Symbol	* * core		734527						
ANR	734582	Symbol	node -> i_value		734527						
ANR	734583	Function	cb_binat	885:0:24765:24928							
ANR	734584	FunctionDef	"cb_binat (void * user , void * data)"		734583	0					
ANR	734585	CompoundStatement		885:45:24810:24928	734583	0					
ANR	734586	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	886:1:24813:24840	734583	0	True				
ANR	734587	IdentifierDecl	* core = ( RCore * ) user		734583	0					
ANR	734588	IdentifierDeclType	RCore *		734583	0					
ANR	734589	Identifier	core		734583	1					
ANR	734590	AssignmentExpression	* core = ( RCore * ) user		734583	2		=			
ANR	734591	Identifier	core		734583	0					
ANR	734592	CastExpression	( RCore * ) user		734583	1					
ANR	734593	CastTarget	RCore *		734583	0					
ANR	734594	Identifier	user		734583	1					
ANR	734595	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	887:1:24843:24882	734583	1	True				
ANR	734596	IdentifierDecl	* node = ( RConfigNode * ) data		734583	0					
ANR	734597	IdentifierDeclType	RConfigNode *		734583	0					
ANR	734598	Identifier	node		734583	1					
ANR	734599	AssignmentExpression	* node = ( RConfigNode * ) data		734583	2		=			
ANR	734600	Identifier	node		734583	0					
ANR	734601	CastExpression	( RConfigNode * ) data		734583	1					
ANR	734602	CastTarget	RConfigNode *		734583	0					
ANR	734603	Identifier	data		734583	1					
ANR	734604	ExpressionStatement	core -> binat = node -> i_value	888:1:24885:24912	734583	2	True				
ANR	734605	AssignmentExpression	core -> binat = node -> i_value		734583	0		=			
ANR	734606	PtrMemberAccess	core -> binat		734583	0					
ANR	734607	Identifier	core		734583	0					
ANR	734608	Identifier	binat		734583	1					
ANR	734609	PtrMemberAccess	node -> i_value		734583	1					
ANR	734610	Identifier	node		734583	0					
ANR	734611	Identifier	i_value		734583	1					
ANR	734612	ReturnStatement	return true ;	889:1:24915:24926	734583	3	True				
ANR	734613	Identifier	true		734583	0					
ANR	734614	ReturnType	static bool		734583	1					
ANR	734615	Identifier	cb_binat		734583	2					
ANR	734616	ParameterList	"void * user , void * data"		734583	3					
ANR	734617	Parameter	void * user	885:21:24786:24795	734583	0	True				
ANR	734618	ParameterType	void *		734583	0					
ANR	734619	Identifier	user		734583	1					
ANR	734620	Parameter	void * data	885:33:24798:24807	734583	1	True				
ANR	734621	ParameterType	void *		734583	0					
ANR	734622	Identifier	data		734583	1					
ANR	734623	CFGEntryNode	ENTRY		734583		True				
ANR	734624	CFGExitNode	EXIT		734583		True				
ANR	734625	Symbol	core		734583						
ANR	734626	Symbol	node		734583						
ANR	734627	Symbol	data		734583						
ANR	734628	Symbol	core -> binat		734583						
ANR	734629	Symbol	* core		734583						
ANR	734630	Symbol	true		734583						
ANR	734631	Symbol	* node		734583						
ANR	734632	Symbol	user		734583						
ANR	734633	Symbol	node -> i_value		734583						
ANR	734634	Function	cb_usextr	892:0:24931:25102							
ANR	734635	FunctionDef	"cb_usextr (void * user , void * data)"		734634	0					
ANR	734636	CompoundStatement		892:46:24977:25102	734634	0					
ANR	734637	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	893:1:24980:25007	734634	0	True				
ANR	734638	IdentifierDecl	* core = ( RCore * ) user		734634	0					
ANR	734639	IdentifierDeclType	RCore *		734634	0					
ANR	734640	Identifier	core		734634	1					
ANR	734641	AssignmentExpression	* core = ( RCore * ) user		734634	2		=			
ANR	734642	Identifier	core		734634	0					
ANR	734643	CastExpression	( RCore * ) user		734634	1					
ANR	734644	CastTarget	RCore *		734634	0					
ANR	734645	Identifier	user		734634	1					
ANR	734646	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	894:1:25010:25049	734634	1	True				
ANR	734647	IdentifierDecl	* node = ( RConfigNode * ) data		734634	0					
ANR	734648	IdentifierDeclType	RConfigNode *		734634	0					
ANR	734649	Identifier	node		734634	1					
ANR	734650	AssignmentExpression	* node = ( RConfigNode * ) data		734634	2		=			
ANR	734651	Identifier	node		734634	0					
ANR	734652	CastExpression	( RConfigNode * ) data		734634	1					
ANR	734653	CastTarget	RConfigNode *		734634	0					
ANR	734654	Identifier	data		734634	1					
ANR	734655	ExpressionStatement	core -> bin -> use_xtr = node -> i_value	895:1:25052:25086	734634	2	True				
ANR	734656	AssignmentExpression	core -> bin -> use_xtr = node -> i_value		734634	0		=			
ANR	734657	PtrMemberAccess	core -> bin -> use_xtr		734634	0					
ANR	734658	PtrMemberAccess	core -> bin		734634	0					
ANR	734659	Identifier	core		734634	0					
ANR	734660	Identifier	bin		734634	1					
ANR	734661	Identifier	use_xtr		734634	1					
ANR	734662	PtrMemberAccess	node -> i_value		734634	1					
ANR	734663	Identifier	node		734634	0					
ANR	734664	Identifier	i_value		734634	1					
ANR	734665	ReturnStatement	return true ;	896:1:25089:25100	734634	3	True				
ANR	734666	Identifier	true		734634	0					
ANR	734667	ReturnType	static bool		734634	1					
ANR	734668	Identifier	cb_usextr		734634	2					
ANR	734669	ParameterList	"void * user , void * data"		734634	3					
ANR	734670	Parameter	void * user	892:22:24953:24962	734634	0	True				
ANR	734671	ParameterType	void *		734634	0					
ANR	734672	Identifier	user		734634	1					
ANR	734673	Parameter	void * data	892:34:24965:24974	734634	1	True				
ANR	734674	ParameterType	void *		734634	0					
ANR	734675	Identifier	data		734634	1					
ANR	734676	CFGEntryNode	ENTRY		734634		True				
ANR	734677	CFGExitNode	EXIT		734634		True				
ANR	734678	Symbol	core		734634						
ANR	734679	Symbol	node		734634						
ANR	734680	Symbol	data		734634						
ANR	734681	Symbol	core -> bin -> use_xtr		734634						
ANR	734682	Symbol	* core		734634						
ANR	734683	Symbol	true		734634						
ANR	734684	Symbol	* node		734634						
ANR	734685	Symbol	* core -> bin		734634						
ANR	734686	Symbol	user		734634						
ANR	734687	Symbol	core -> bin		734634						
ANR	734688	Symbol	* * core		734634						
ANR	734689	Symbol	node -> i_value		734634						
ANR	734690	Function	cb_strpurge	899:0:25105:26449							
ANR	734691	FunctionDef	"cb_strpurge (void * user , void * data)"		734690	0					
ANR	734692	CompoundStatement		899:48:25153:26449	734690	0					
ANR	734693	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	900:1:25156:25183	734690	0	True				
ANR	734694	IdentifierDecl	* core = ( RCore * ) user		734690	0					
ANR	734695	IdentifierDeclType	RCore *		734690	0					
ANR	734696	Identifier	core		734690	1					
ANR	734697	AssignmentExpression	* core = ( RCore * ) user		734690	2		=			
ANR	734698	Identifier	core		734690	0					
ANR	734699	CastExpression	( RCore * ) user		734690	1					
ANR	734700	CastTarget	RCore *		734690	0					
ANR	734701	Identifier	user		734690	1					
ANR	734702	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	901:1:25186:25225	734690	1	True				
ANR	734703	IdentifierDecl	* node = ( RConfigNode * ) data		734690	0					
ANR	734704	IdentifierDeclType	RConfigNode *		734690	0					
ANR	734705	Identifier	node		734690	1					
ANR	734706	AssignmentExpression	* node = ( RConfigNode * ) data		734690	2		=			
ANR	734707	Identifier	node		734690	0					
ANR	734708	CastExpression	( RConfigNode * ) data		734690	1					
ANR	734709	CastTarget	RConfigNode *		734690	0					
ANR	734710	Identifier	data		734690	1					
ANR	734711	IfStatement	if ( * node -> value == '?' )		734690	2					
ANR	734712	Condition	* node -> value == '?'	902:5:25232:25250	734690	0	True				
ANR	734713	EqualityExpression	* node -> value == '?'		734690	0		==			
ANR	734714	UnaryOperationExpression	* node -> value		734690	0					
ANR	734715	UnaryOperator	*		734690	0					
ANR	734716	PtrMemberAccess	node -> value		734690	1					
ANR	734717	Identifier	node		734690	0					
ANR	734718	Identifier	value		734690	1					
ANR	734719	PrimaryExpression	'?'		734690	1					
ANR	734720	CompoundStatement		4:26:99:99	734690	1					
ANR	734721	Statement	r_cons_printf	903:2:25257:25269	734690	0	True				
ANR	734722	Statement	(	903:16:25271:25271	734690	1	True				
ANR	734723	Statement	"""There can be multiple entries separated by commas. No whitespace before/after entries.\\n"""	904:6:25279:25368	734690	2	True				
ANR	734724	Statement	"""Possible entries:\\n"""	905:6:25376:25396	734690	3	True				
ANR	734725	Statement	"""  all          : purge all strings\\n"""	906:6:25404:25441	734690	4	True				
ANR	734726	Statement	"""  true         : use the false_positive() classifier in cbin.c\\n"""	907:6:25449:25514	734690	5	True				
ANR	734727	Statement	"""  addr         : purge string at addr\\n"""	908:6:25522:25562	734690	6	True				
ANR	734728	Statement	"""  addr1-addr2  : purge all strings in the range addr1-addr2 inclusive\\n"""	909:6:25570:25642	734690	7	True				
ANR	734729	Statement	"""  !addr        : prevent purge of string at addr by prev entries\\n"""	910:6:25650:25717	734690	8	True				
ANR	734730	Statement	"""  !addr1-addr2 : prevent purge of strings in range addr1-addr2 inclusive by prev entries\\n"""	911:6:25725:25816	734690	9	True				
ANR	734731	Statement	"""Neither !true nor !false is supported.\\n"""	912:6:25824:25865	734690	10	True				
ANR	734732	Statement	"""\\n"""	913:6:25873:25876	734690	11	True				
ANR	734733	Statement	"""Examples:\\n"""	914:6:25884:25896	734690	12	True				
ANR	734734	Statement	"""  e bin.str.purge=true,0-0xff,!0x1a\\n"""	915:6:25904:25942	734690	13	True				
ANR	734735	Statement	"""    -- purge strings using the false_positive() classifier in cbin.c and also strings \\n"""	916:6:25950:26039	734690	14	True				
ANR	734736	Statement	"""       with addresses in the range 0-0xff, but not the string at 0x1a.\\n"""	917:6:26047:26120	734690	15	True				
ANR	734737	Statement	"""  e bin.str.purge=all,!0x1000-0x1fff\\n"""	918:6:26128:26167	734690	16	True				
ANR	734738	Statement	"""    -- purge all strings except the strings with addresses in the range 0x1000-0x1fff.\\n"""	919:6:26175:26264	734690	17	True				
ANR	734739	Statement	)	919:96:26265:26265	734690	18	True				
ANR	734740	ExpressionStatement		919:97:26266:26266	734690	19	True				
ANR	734741	ReturnStatement	return false ;	920:2:26270:26282	734690	20	True				
ANR	734742	Identifier	false		734690	0					
ANR	734743	ExpressionStatement	free ( core -> bin -> strpurge )	922:1:26288:26314	734690	3	True				
ANR	734744	CallExpression	free ( core -> bin -> strpurge )		734690	0					
ANR	734745	Callee	free		734690	0					
ANR	734746	Identifier	free		734690	0					
ANR	734747	ArgumentList	core -> bin -> strpurge		734690	1					
ANR	734748	Argument	core -> bin -> strpurge		734690	0					
ANR	734749	PtrMemberAccess	core -> bin -> strpurge		734690	0					
ANR	734750	PtrMemberAccess	core -> bin		734690	0					
ANR	734751	Identifier	core		734690	0					
ANR	734752	Identifier	bin		734690	1					
ANR	734753	Identifier	strpurge		734690	1					
ANR	734754	ExpressionStatement	"core -> bin -> strpurge = ! * node -> value || ! strcmp ( node -> value , ""false"" ) ? NULL : strdup ( node -> value )"	923:1:26317:26433	734690	4	True				
ANR	734755	AssignmentExpression	"core -> bin -> strpurge = ! * node -> value || ! strcmp ( node -> value , ""false"" ) ? NULL : strdup ( node -> value )"		734690	0		=			
ANR	734756	PtrMemberAccess	core -> bin -> strpurge		734690	0					
ANR	734757	PtrMemberAccess	core -> bin		734690	0					
ANR	734758	Identifier	core		734690	0					
ANR	734759	Identifier	bin		734690	1					
ANR	734760	Identifier	strpurge		734690	1					
ANR	734761	ConditionalExpression	"! * node -> value || ! strcmp ( node -> value , ""false"" ) ? NULL : strdup ( node -> value )"		734690	1					
ANR	734762	Condition	"! * node -> value || ! strcmp ( node -> value , ""false"" )"		734690	0					
ANR	734763	OrExpression	"! * node -> value || ! strcmp ( node -> value , ""false"" )"		734690	0		||			
ANR	734764	UnaryOperationExpression	! * node -> value		734690	0					
ANR	734765	UnaryOperator	!		734690	0					
ANR	734766	UnaryOperationExpression	* node -> value		734690	1					
ANR	734767	UnaryOperator	*		734690	0					
ANR	734768	PtrMemberAccess	node -> value		734690	1					
ANR	734769	Identifier	node		734690	0					
ANR	734770	Identifier	value		734690	1					
ANR	734771	UnaryOperationExpression	"! strcmp ( node -> value , ""false"" )"		734690	1					
ANR	734772	UnaryOperator	!		734690	0					
ANR	734773	CallExpression	"strcmp ( node -> value , ""false"" )"		734690	1					
ANR	734774	Callee	strcmp		734690	0					
ANR	734775	Identifier	strcmp		734690	0					
ANR	734776	ArgumentList	node -> value		734690	1					
ANR	734777	Argument	node -> value		734690	0					
ANR	734778	PtrMemberAccess	node -> value		734690	0					
ANR	734779	Identifier	node		734690	0					
ANR	734780	Identifier	value		734690	1					
ANR	734781	Argument	"""false"""		734690	1					
ANR	734782	PrimaryExpression	"""false"""		734690	0					
ANR	734783	Identifier	NULL		734690	1					
ANR	734784	CallExpression	strdup ( node -> value )		734690	2					
ANR	734785	Callee	strdup		734690	0					
ANR	734786	Identifier	strdup		734690	0					
ANR	734787	ArgumentList	node -> value		734690	1					
ANR	734788	Argument	node -> value		734690	0					
ANR	734789	PtrMemberAccess	node -> value		734690	0					
ANR	734790	Identifier	node		734690	0					
ANR	734791	Identifier	value		734690	1					
ANR	734792	ReturnStatement	return true ;	925:1:26436:26447	734690	5	True				
ANR	734793	Identifier	true		734690	0					
ANR	734794	ReturnType	static bool		734690	1					
ANR	734795	Identifier	cb_strpurge		734690	2					
ANR	734796	ParameterList	"void * user , void * data"		734690	3					
ANR	734797	Parameter	void * user	899:24:25129:25138	734690	0	True				
ANR	734798	ParameterType	void *		734690	0					
ANR	734799	Identifier	user		734690	1					
ANR	734800	Parameter	void * data	899:36:25141:25150	734690	1	True				
ANR	734801	ParameterType	void *		734690	0					
ANR	734802	Identifier	data		734690	1					
ANR	734803	CFGEntryNode	ENTRY		734690		True				
ANR	734804	CFGExitNode	EXIT		734690		True				
ANR	734805	Symbol	strcmp		734690						
ANR	734806	Symbol	* node -> value		734690						
ANR	734807	Symbol	NULL		734690						
ANR	734808	Symbol	data		734690						
ANR	734809	Symbol	false		734690						
ANR	734810	Symbol	* core		734690						
ANR	734811	Symbol	node -> value		734690						
ANR	734812	Symbol	core		734690						
ANR	734813	Symbol	node		734690						
ANR	734814	Symbol	* * node		734690						
ANR	734815	Symbol	core -> bin -> strpurge		734690						
ANR	734816	Symbol	true		734690						
ANR	734817	Symbol	* node		734690						
ANR	734818	Symbol	* core -> bin		734690						
ANR	734819	Symbol	strdup		734690						
ANR	734820	Symbol	user		734690						
ANR	734821	Symbol	core -> bin		734690						
ANR	734822	Symbol	* * core		734690						
ANR	734823	Function	cb_maxname	928:0:26452:26636							
ANR	734824	FunctionDef	"cb_maxname (void * user , void * data)"		734823	0					
ANR	734825	CompoundStatement		928:48:26500:26636	734823	0					
ANR	734826	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	929:1:26503:26542	734823	0	True				
ANR	734827	IdentifierDecl	* node = ( RConfigNode * ) data		734823	0					
ANR	734828	IdentifierDeclType	RConfigNode *		734823	0					
ANR	734829	Identifier	node		734823	1					
ANR	734830	AssignmentExpression	* node = ( RConfigNode * ) data		734823	2		=			
ANR	734831	Identifier	node		734823	0					
ANR	734832	CastExpression	( RConfigNode * ) data		734823	1					
ANR	734833	CastTarget	RConfigNode *		734823	0					
ANR	734834	Identifier	data		734823	1					
ANR	734835	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	930:1:26545:26573	734823	1	True				
ANR	734836	IdentifierDecl	* core = ( RCore * ) user		734823	0					
ANR	734837	IdentifierDeclType	RCore *		734823	0					
ANR	734838	Identifier	core		734823	1					
ANR	734839	AssignmentExpression	* core = ( RCore * ) user		734823	2		=			
ANR	734840	Identifier	core		734823	0					
ANR	734841	CastExpression	( RCore * ) user		734823	1					
ANR	734842	CastTarget	RCore *		734823	0					
ANR	734843	Identifier	user		734823	1					
ANR	734844	ExpressionStatement	core -> parser -> maxflagnamelen = node -> i_value	931:1:26576:26620	734823	2	True				
ANR	734845	AssignmentExpression	core -> parser -> maxflagnamelen = node -> i_value		734823	0		=			
ANR	734846	PtrMemberAccess	core -> parser -> maxflagnamelen		734823	0					
ANR	734847	PtrMemberAccess	core -> parser		734823	0					
ANR	734848	Identifier	core		734823	0					
ANR	734849	Identifier	parser		734823	1					
ANR	734850	Identifier	maxflagnamelen		734823	1					
ANR	734851	PtrMemberAccess	node -> i_value		734823	1					
ANR	734852	Identifier	node		734823	0					
ANR	734853	Identifier	i_value		734823	1					
ANR	734854	ReturnStatement	return true ;	932:1:26623:26634	734823	3	True				
ANR	734855	Identifier	true		734823	0					
ANR	734856	ReturnType	static bool		734823	1					
ANR	734857	Identifier	cb_maxname		734823	2					
ANR	734858	ParameterList	"void * user , void * data"		734823	3					
ANR	734859	Parameter	void * user	928:24:26476:26485	734823	0	True				
ANR	734860	ParameterType	void *		734823	0					
ANR	734861	Identifier	user		734823	1					
ANR	734862	Parameter	void * data	928:36:26488:26497	734823	1	True				
ANR	734863	ParameterType	void *		734823	0					
ANR	734864	Identifier	data		734823	1					
ANR	734865	CFGEntryNode	ENTRY		734823		True				
ANR	734866	CFGExitNode	EXIT		734823		True				
ANR	734867	Symbol	node		734823						
ANR	734868	Symbol	core		734823						
ANR	734869	Symbol	core -> parser		734823						
ANR	734870	Symbol	data		734823						
ANR	734871	Symbol	* core -> parser		734823						
ANR	734872	Symbol	* core		734823						
ANR	734873	Symbol	true		734823						
ANR	734874	Symbol	* node		734823						
ANR	734875	Symbol	core -> parser -> maxflagnamelen		734823						
ANR	734876	Symbol	user		734823						
ANR	734877	Symbol	* * core		734823						
ANR	734878	Symbol	node -> i_value		734823						
ANR	734879	Function	cb_midflags	935:0:26639:26824							
ANR	734880	FunctionDef	"cb_midflags (void * user , void * data)"		734879	0					
ANR	734881	CompoundStatement		935:49:26688:26824	734879	0					
ANR	734882	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	936:1:26691:26730	734879	0	True				
ANR	734883	IdentifierDecl	* node = ( RConfigNode * ) data		734879	0					
ANR	734884	IdentifierDeclType	RConfigNode *		734879	0					
ANR	734885	Identifier	node		734879	1					
ANR	734886	AssignmentExpression	* node = ( RConfigNode * ) data		734879	2		=			
ANR	734887	Identifier	node		734879	0					
ANR	734888	CastExpression	( RConfigNode * ) data		734879	1					
ANR	734889	CastTarget	RConfigNode *		734879	0					
ANR	734890	Identifier	data		734879	1					
ANR	734891	IfStatement	if ( node -> value [ 0 ] == '?' )		734879	1					
ANR	734892	Condition	node -> value [ 0 ] == '?'	937:5:26737:26757	734879	0	True				
ANR	734893	EqualityExpression	node -> value [ 0 ] == '?'		734879	0		==			
ANR	734894	ArrayIndexing	node -> value [ 0 ]		734879	0					
ANR	734895	PtrMemberAccess	node -> value		734879	0					
ANR	734896	Identifier	node		734879	0					
ANR	734897	Identifier	value		734879	1					
ANR	734898	PrimaryExpression	0		734879	1					
ANR	734899	PrimaryExpression	'?'		734879	1					
ANR	734900	CompoundStatement		3:28:71:71	734879	1					
ANR	734901	ExpressionStatement	print_node_options ( node )	938:2:26764:26789	734879	0	True				
ANR	734902	CallExpression	print_node_options ( node )		734879	0					
ANR	734903	Callee	print_node_options		734879	0					
ANR	734904	Identifier	print_node_options		734879	0					
ANR	734905	ArgumentList	node		734879	1					
ANR	734906	Argument	node		734879	0					
ANR	734907	Identifier	node		734879	0					
ANR	734908	ReturnStatement	return false ;	939:2:26793:26805	734879	1	True				
ANR	734909	Identifier	false		734879	0					
ANR	734910	ReturnStatement	return true ;	941:1:26811:26822	734879	2	True				
ANR	734911	Identifier	true		734879	0					
ANR	734912	ReturnType	static bool		734879	1					
ANR	734913	Identifier	cb_midflags		734879	2					
ANR	734914	ParameterList	"void * user , void * data"		734879	3					
ANR	734915	Parameter	void * user	935:25:26664:26673	734879	0	True				
ANR	734916	ParameterType	void *		734879	0					
ANR	734917	Identifier	user		734879	1					
ANR	734918	Parameter	void * data	935:37:26676:26685	734879	1	True				
ANR	734919	ParameterType	void *		734879	0					
ANR	734920	Identifier	data		734879	1					
ANR	734921	CFGEntryNode	ENTRY		734879		True				
ANR	734922	CFGExitNode	EXIT		734879		True				
ANR	734923	Symbol	node		734879						
ANR	734924	Symbol	* node -> value		734879						
ANR	734925	Symbol	data		734879						
ANR	734926	Symbol	* * node		734879						
ANR	734927	Symbol	false		734879						
ANR	734928	Symbol	true		734879						
ANR	734929	Symbol	* node		734879						
ANR	734930	Symbol	user		734879						
ANR	734931	Symbol	node -> value		734879						
ANR	734932	Function	cb_strfilter	944:0:26827:27481							
ANR	734933	FunctionDef	"cb_strfilter (void * user , void * data)"		734932	0					
ANR	734934	CompoundStatement		944:49:26876:27481	734932	0					
ANR	734935	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	945:1:26879:26906	734932	0	True				
ANR	734936	IdentifierDecl	* core = ( RCore * ) user		734932	0					
ANR	734937	IdentifierDeclType	RCore *		734932	0					
ANR	734938	Identifier	core		734932	1					
ANR	734939	AssignmentExpression	* core = ( RCore * ) user		734932	2		=			
ANR	734940	Identifier	core		734932	0					
ANR	734941	CastExpression	( RCore * ) user		734932	1					
ANR	734942	CastTarget	RCore *		734932	0					
ANR	734943	Identifier	user		734932	1					
ANR	734944	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	946:1:26909:26948	734932	1	True				
ANR	734945	IdentifierDecl	* node = ( RConfigNode * ) data		734932	0					
ANR	734946	IdentifierDeclType	RConfigNode *		734932	0					
ANR	734947	Identifier	node		734932	1					
ANR	734948	AssignmentExpression	* node = ( RConfigNode * ) data		734932	2		=			
ANR	734949	Identifier	node		734932	0					
ANR	734950	CastExpression	( RConfigNode * ) data		734932	1					
ANR	734951	CastTarget	RConfigNode *		734932	0					
ANR	734952	Identifier	data		734932	1					
ANR	734953	IfStatement	if ( node -> value [ 0 ] == '?' )		734932	2					
ANR	734954	Condition	node -> value [ 0 ] == '?'	947:5:26955:26975	734932	0	True				
ANR	734955	EqualityExpression	node -> value [ 0 ] == '?'		734932	0		==			
ANR	734956	ArrayIndexing	node -> value [ 0 ]		734932	0					
ANR	734957	PtrMemberAccess	node -> value		734932	0					
ANR	734958	Identifier	node		734932	0					
ANR	734959	Identifier	value		734932	1					
ANR	734960	PrimaryExpression	0		734932	1					
ANR	734961	PrimaryExpression	'?'		734932	1					
ANR	734962	CompoundStatement		4:28:101:101	734932	1					
ANR	734963	IfStatement	if ( strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?' )		734932	0					
ANR	734964	Condition	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'	948:6:26986:27034	734932	0	True				
ANR	734965	AndExpression	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'		734932	0		&&			
ANR	734966	RelationalExpression	strlen ( node -> value ) > 1		734932	0		>			
ANR	734967	CallExpression	strlen ( node -> value )		734932	0					
ANR	734968	Callee	strlen		734932	0					
ANR	734969	Identifier	strlen		734932	0					
ANR	734970	ArgumentList	node -> value		734932	1					
ANR	734971	Argument	node -> value		734932	0					
ANR	734972	PtrMemberAccess	node -> value		734932	0					
ANR	734973	Identifier	node		734932	0					
ANR	734974	Identifier	value		734932	1					
ANR	734975	PrimaryExpression	1		734932	1					
ANR	734976	EqualityExpression	node -> value [ 1 ] == '?'		734932	1		==			
ANR	734977	ArrayIndexing	node -> value [ 1 ]		734932	0					
ANR	734978	PtrMemberAccess	node -> value		734932	0					
ANR	734979	Identifier	node		734932	0					
ANR	734980	Identifier	value		734932	1					
ANR	734981	PrimaryExpression	1		734932	1					
ANR	734982	PrimaryExpression	'?'		734932	1					
ANR	734983	CompoundStatement		5:57:160:160	734932	1					
ANR	734984	Statement	r_cons_printf	949:3:27042:27054	734932	0	True				
ANR	734985	Statement	(	949:17:27056:27056	734932	1	True				
ANR	734986	Statement	"""Valid values for bin.str.filter:\\n"""	949:18:27057:27092	734932	2	True				
ANR	734987	Statement	"""a  only alphanumeric printable\\n"""	950:4:27098:27131	734932	3	True				
ANR	734988	Statement	"""8  only strings with utf8 chars\\n"""	951:4:27137:27171	734932	4	True				
ANR	734989	Statement	"""p  file/directory paths\\n"""	952:4:27177:27203	734932	5	True				
ANR	734990	Statement	"""e  email-like addresses\\n"""	953:4:27209:27235	734932	6	True				
ANR	734991	Statement	"""u  urls\\n"""	954:4:27241:27251	734932	7	True				
ANR	734992	Statement	"""i  IPv4 address-like strings\\n"""	955:4:27257:27288	734932	8	True				
ANR	734993	Statement	"""U  only uppercase strings\\n"""	956:4:27294:27322	734932	9	True				
ANR	734994	Statement	"""f  format-strings\\n"""	957:4:27328:27348	734932	10	True				
ANR	734995	Statement	)	957:25:27349:27349	734932	11	True				
ANR	734996	ExpressionStatement		957:26:27350:27350	734932	12	True				
ANR	734997	ElseStatement	else		734932	0					
ANR	734998	CompoundStatement		15:9:484:484	734932	0					
ANR	734999	ExpressionStatement	print_node_options ( node )	959:3:27366:27391	734932	0	True				
ANR	735000	CallExpression	print_node_options ( node )		734932	0					
ANR	735001	Callee	print_node_options		734932	0					
ANR	735002	Identifier	print_node_options		734932	0					
ANR	735003	ArgumentList	node		734932	1					
ANR	735004	Argument	node		734932	0					
ANR	735005	Identifier	node		734932	0					
ANR	735006	ReturnStatement	return false ;	961:2:27399:27411	734932	1	True				
ANR	735007	Identifier	false		734932	0					
ANR	735008	ElseStatement	else		734932	0					
ANR	735009	CompoundStatement		19:8:544:544	734932	0					
ANR	735010	ExpressionStatement	core -> bin -> strfilter = node -> value [ 0 ]	963:2:27425:27462	734932	0	True				
ANR	735011	AssignmentExpression	core -> bin -> strfilter = node -> value [ 0 ]		734932	0		=			
ANR	735012	PtrMemberAccess	core -> bin -> strfilter		734932	0					
ANR	735013	PtrMemberAccess	core -> bin		734932	0					
ANR	735014	Identifier	core		734932	0					
ANR	735015	Identifier	bin		734932	1					
ANR	735016	Identifier	strfilter		734932	1					
ANR	735017	ArrayIndexing	node -> value [ 0 ]		734932	1					
ANR	735018	PtrMemberAccess	node -> value		734932	0					
ANR	735019	Identifier	node		734932	0					
ANR	735020	Identifier	value		734932	1					
ANR	735021	PrimaryExpression	0		734932	1					
ANR	735022	ReturnStatement	return true ;	965:1:27468:27479	734932	3	True				
ANR	735023	Identifier	true		734932	0					
ANR	735024	ReturnType	static bool		734932	1					
ANR	735025	Identifier	cb_strfilter		734932	2					
ANR	735026	ParameterList	"void * user , void * data"		734932	3					
ANR	735027	Parameter	void * user	944:25:26852:26861	734932	0	True				
ANR	735028	ParameterType	void *		734932	0					
ANR	735029	Identifier	user		734932	1					
ANR	735030	Parameter	void * data	944:37:26864:26873	734932	1	True				
ANR	735031	ParameterType	void *		734932	0					
ANR	735032	Identifier	data		734932	1					
ANR	735033	CFGEntryNode	ENTRY		734932		True				
ANR	735034	CFGExitNode	EXIT		734932		True				
ANR	735035	Symbol	* node -> value		734932						
ANR	735036	Symbol	data		734932						
ANR	735037	Symbol	core -> bin -> strfilter		734932						
ANR	735038	Symbol	false		734932						
ANR	735039	Symbol	* core		734932						
ANR	735040	Symbol	node -> value		734932						
ANR	735041	Symbol	core		734932						
ANR	735042	Symbol	node		734932						
ANR	735043	Symbol	strlen		734932						
ANR	735044	Symbol	* * node		734932						
ANR	735045	Symbol	true		734932						
ANR	735046	Symbol	* node		734932						
ANR	735047	Symbol	* core -> bin		734932						
ANR	735048	Symbol	user		734932						
ANR	735049	Symbol	core -> bin		734932						
ANR	735050	Symbol	* * core		734932						
ANR	735051	Function	cb_binforce	968:0:27484:27666							
ANR	735052	FunctionDef	"cb_binforce (void * user , void * data)"		735051	0					
ANR	735053	CompoundStatement		968:48:27532:27666	735051	0					
ANR	735054	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	969:1:27535:27562	735051	0	True				
ANR	735055	IdentifierDecl	* core = ( RCore * ) user		735051	0					
ANR	735056	IdentifierDeclType	RCore *		735051	0					
ANR	735057	Identifier	core		735051	1					
ANR	735058	AssignmentExpression	* core = ( RCore * ) user		735051	2		=			
ANR	735059	Identifier	core		735051	0					
ANR	735060	CastExpression	( RCore * ) user		735051	1					
ANR	735061	CastTarget	RCore *		735051	0					
ANR	735062	Identifier	user		735051	1					
ANR	735063	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	970:1:27565:27604	735051	1	True				
ANR	735064	IdentifierDecl	* node = ( RConfigNode * ) data		735051	0					
ANR	735065	IdentifierDeclType	RConfigNode *		735051	0					
ANR	735066	Identifier	node		735051	1					
ANR	735067	AssignmentExpression	* node = ( RConfigNode * ) data		735051	2		=			
ANR	735068	Identifier	node		735051	0					
ANR	735069	CastExpression	( RConfigNode * ) data		735051	1					
ANR	735070	CastTarget	RConfigNode *		735051	0					
ANR	735071	Identifier	data		735051	1					
ANR	735072	ExpressionStatement	"r_bin_force_plugin ( core -> bin , node -> value )"	971:1:27607:27650	735051	2	True				
ANR	735073	CallExpression	"r_bin_force_plugin ( core -> bin , node -> value )"		735051	0					
ANR	735074	Callee	r_bin_force_plugin		735051	0					
ANR	735075	Identifier	r_bin_force_plugin		735051	0					
ANR	735076	ArgumentList	core -> bin		735051	1					
ANR	735077	Argument	core -> bin		735051	0					
ANR	735078	PtrMemberAccess	core -> bin		735051	0					
ANR	735079	Identifier	core		735051	0					
ANR	735080	Identifier	bin		735051	1					
ANR	735081	Argument	node -> value		735051	1					
ANR	735082	PtrMemberAccess	node -> value		735051	0					
ANR	735083	Identifier	node		735051	0					
ANR	735084	Identifier	value		735051	1					
ANR	735085	ReturnStatement	return true ;	972:1:27653:27664	735051	3	True				
ANR	735086	Identifier	true		735051	0					
ANR	735087	ReturnType	static bool		735051	1					
ANR	735088	Identifier	cb_binforce		735051	2					
ANR	735089	ParameterList	"void * user , void * data"		735051	3					
ANR	735090	Parameter	void * user	968:24:27508:27517	735051	0	True				
ANR	735091	ParameterType	void *		735051	0					
ANR	735092	Identifier	user		735051	1					
ANR	735093	Parameter	void * data	968:36:27520:27529	735051	1	True				
ANR	735094	ParameterType	void *		735051	0					
ANR	735095	Identifier	data		735051	1					
ANR	735096	CFGEntryNode	ENTRY		735051		True				
ANR	735097	CFGExitNode	EXIT		735051		True				
ANR	735098	Symbol	core		735051						
ANR	735099	Symbol	node		735051						
ANR	735100	Symbol	data		735051						
ANR	735101	Symbol	* core		735051						
ANR	735102	Symbol	true		735051						
ANR	735103	Symbol	* node		735051						
ANR	735104	Symbol	user		735051						
ANR	735105	Symbol	core -> bin		735051						
ANR	735106	Symbol	node -> value		735051						
ANR	735107	Function	cb_asmsyntax	975:0:27669:28036							
ANR	735108	FunctionDef	"cb_asmsyntax (void * user , void * data)"		735107	0					
ANR	735109	CompoundStatement		975:49:27718:28036	735107	0					
ANR	735110	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	976:1:27721:27748	735107	0	True				
ANR	735111	IdentifierDecl	* core = ( RCore * ) user		735107	0					
ANR	735112	IdentifierDeclType	RCore *		735107	0					
ANR	735113	Identifier	core		735107	1					
ANR	735114	AssignmentExpression	* core = ( RCore * ) user		735107	2		=			
ANR	735115	Identifier	core		735107	0					
ANR	735116	CastExpression	( RCore * ) user		735107	1					
ANR	735117	CastTarget	RCore *		735107	0					
ANR	735118	Identifier	user		735107	1					
ANR	735119	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	977:1:27751:27790	735107	1	True				
ANR	735120	IdentifierDecl	* node = ( RConfigNode * ) data		735107	0					
ANR	735121	IdentifierDeclType	RConfigNode *		735107	0					
ANR	735122	Identifier	node		735107	1					
ANR	735123	AssignmentExpression	* node = ( RConfigNode * ) data		735107	2		=			
ANR	735124	Identifier	node		735107	0					
ANR	735125	CastExpression	( RConfigNode * ) data		735107	1					
ANR	735126	CastTarget	RConfigNode *		735107	0					
ANR	735127	Identifier	data		735107	1					
ANR	735128	IfStatement	if ( * node -> value == '?' )		735107	2					
ANR	735129	Condition	* node -> value == '?'	978:5:27797:27815	735107	0	True				
ANR	735130	EqualityExpression	* node -> value == '?'		735107	0		==			
ANR	735131	UnaryOperationExpression	* node -> value		735107	0					
ANR	735132	UnaryOperator	*		735107	0					
ANR	735133	PtrMemberAccess	node -> value		735107	1					
ANR	735134	Identifier	node		735107	0					
ANR	735135	Identifier	value		735107	1					
ANR	735136	PrimaryExpression	'?'		735107	1					
ANR	735137	CompoundStatement		4:26:99:99	735107	1					
ANR	735138	ExpressionStatement	print_node_options ( node )	979:2:27822:27847	735107	0	True				
ANR	735139	CallExpression	print_node_options ( node )		735107	0					
ANR	735140	Callee	print_node_options		735107	0					
ANR	735141	Identifier	print_node_options		735107	0					
ANR	735142	ArgumentList	node		735107	1					
ANR	735143	Argument	node		735107	0					
ANR	735144	Identifier	node		735107	0					
ANR	735145	ReturnStatement	return false ;	980:2:27851:27863	735107	1	True				
ANR	735146	Identifier	false		735107	0					
ANR	735147	ElseStatement	else		735107	0					
ANR	735148	CompoundStatement		8:2:158:209	735107	0					
ANR	735149	IdentifierDeclStatement	int syntax = r_asm_syntax_from_string ( node -> value ) ;	982:2:27877:27928	735107	0	True				
ANR	735150	IdentifierDecl	syntax = r_asm_syntax_from_string ( node -> value )		735107	0					
ANR	735151	IdentifierDeclType	int		735107	0					
ANR	735152	Identifier	syntax		735107	1					
ANR	735153	AssignmentExpression	syntax = r_asm_syntax_from_string ( node -> value )		735107	2		=			
ANR	735154	Identifier	syntax		735107	0					
ANR	735155	CallExpression	r_asm_syntax_from_string ( node -> value )		735107	1					
ANR	735156	Callee	r_asm_syntax_from_string		735107	0					
ANR	735157	Identifier	r_asm_syntax_from_string		735107	0					
ANR	735158	ArgumentList	node -> value		735107	1					
ANR	735159	Argument	node -> value		735107	0					
ANR	735160	PtrMemberAccess	node -> value		735107	0					
ANR	735161	Identifier	node		735107	0					
ANR	735162	Identifier	value		735107	1					
ANR	735163	IfStatement	if ( syntax == - 1 )		735107	1					
ANR	735164	Condition	syntax == - 1	983:6:27936:27947	735107	0	True				
ANR	735165	EqualityExpression	syntax == - 1		735107	0		==			
ANR	735166	Identifier	syntax		735107	0					
ANR	735167	UnaryOperationExpression	- 1		735107	1					
ANR	735168	UnaryOperator	-		735107	0					
ANR	735169	PrimaryExpression	1		735107	1					
ANR	735170	CompoundStatement		9:20:231:231	735107	1					
ANR	735171	ReturnStatement	return false ;	984:3:27955:27967	735107	0	True				
ANR	735172	Identifier	false		735107	0					
ANR	735173	ExpressionStatement	"r_asm_set_syntax ( core -> assembler , syntax )"	986:2:27975:28017	735107	2	True				
ANR	735174	CallExpression	"r_asm_set_syntax ( core -> assembler , syntax )"		735107	0					
ANR	735175	Callee	r_asm_set_syntax		735107	0					
ANR	735176	Identifier	r_asm_set_syntax		735107	0					
ANR	735177	ArgumentList	core -> assembler		735107	1					
ANR	735178	Argument	core -> assembler		735107	0					
ANR	735179	PtrMemberAccess	core -> assembler		735107	0					
ANR	735180	Identifier	core		735107	0					
ANR	735181	Identifier	assembler		735107	1					
ANR	735182	Argument	syntax		735107	1					
ANR	735183	Identifier	syntax		735107	0					
ANR	735184	ReturnStatement	return true ;	988:1:28023:28034	735107	3	True				
ANR	735185	Identifier	true		735107	0					
ANR	735186	ReturnType	static bool		735107	1					
ANR	735187	Identifier	cb_asmsyntax		735107	2					
ANR	735188	ParameterList	"void * user , void * data"		735107	3					
ANR	735189	Parameter	void * user	975:25:27694:27703	735107	0	True				
ANR	735190	ParameterType	void *		735107	0					
ANR	735191	Identifier	user		735107	1					
ANR	735192	Parameter	void * data	975:37:27706:27715	735107	1	True				
ANR	735193	ParameterType	void *		735107	0					
ANR	735194	Identifier	data		735107	1					
ANR	735195	CFGEntryNode	ENTRY		735107		True				
ANR	735196	CFGExitNode	EXIT		735107		True				
ANR	735197	Symbol	* node -> value		735107						
ANR	735198	Symbol	data		735107						
ANR	735199	Symbol	false		735107						
ANR	735200	Symbol	* core		735107						
ANR	735201	Symbol	core -> assembler		735107						
ANR	735202	Symbol	r_asm_syntax_from_string		735107						
ANR	735203	Symbol	node -> value		735107						
ANR	735204	Symbol	core		735107						
ANR	735205	Symbol	node		735107						
ANR	735206	Symbol	* * node		735107						
ANR	735207	Symbol	true		735107						
ANR	735208	Symbol	syntax		735107						
ANR	735209	Symbol	* node		735107						
ANR	735210	Symbol	user		735107						
ANR	735211	Function	cb_dirzigns	991:0:28039:28253							
ANR	735212	FunctionDef	"cb_dirzigns (void * user , void * data)"		735211	0					
ANR	735213	CompoundStatement		991:48:28087:28253	735211	0					
ANR	735214	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	992:1:28090:28117	735211	0	True				
ANR	735215	IdentifierDecl	* core = ( RCore * ) user		735211	0					
ANR	735216	IdentifierDeclType	RCore *		735211	0					
ANR	735217	Identifier	core		735211	1					
ANR	735218	AssignmentExpression	* core = ( RCore * ) user		735211	2		=			
ANR	735219	Identifier	core		735211	0					
ANR	735220	CastExpression	( RCore * ) user		735211	1					
ANR	735221	CastTarget	RCore *		735211	0					
ANR	735222	Identifier	user		735211	1					
ANR	735223	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	993:1:28120:28159	735211	1	True				
ANR	735224	IdentifierDecl	* node = ( RConfigNode * ) data		735211	0					
ANR	735225	IdentifierDeclType	RConfigNode *		735211	0					
ANR	735226	Identifier	node		735211	1					
ANR	735227	AssignmentExpression	* node = ( RConfigNode * ) data		735211	2		=			
ANR	735228	Identifier	node		735211	0					
ANR	735229	CastExpression	( RConfigNode * ) data		735211	1					
ANR	735230	CastTarget	RConfigNode *		735211	0					
ANR	735231	Identifier	data		735211	1					
ANR	735232	ExpressionStatement	free ( core -> anal -> zign_path )	994:1:28162:28190	735211	2	True				
ANR	735233	CallExpression	free ( core -> anal -> zign_path )		735211	0					
ANR	735234	Callee	free		735211	0					
ANR	735235	Identifier	free		735211	0					
ANR	735236	ArgumentList	core -> anal -> zign_path		735211	1					
ANR	735237	Argument	core -> anal -> zign_path		735211	0					
ANR	735238	PtrMemberAccess	core -> anal -> zign_path		735211	0					
ANR	735239	PtrMemberAccess	core -> anal		735211	0					
ANR	735240	Identifier	core		735211	0					
ANR	735241	Identifier	anal		735211	1					
ANR	735242	Identifier	zign_path		735211	1					
ANR	735243	ExpressionStatement	core -> anal -> zign_path = strdup ( node -> value )	995:1:28193:28237	735211	3	True				
ANR	735244	AssignmentExpression	core -> anal -> zign_path = strdup ( node -> value )		735211	0		=			
ANR	735245	PtrMemberAccess	core -> anal -> zign_path		735211	0					
ANR	735246	PtrMemberAccess	core -> anal		735211	0					
ANR	735247	Identifier	core		735211	0					
ANR	735248	Identifier	anal		735211	1					
ANR	735249	Identifier	zign_path		735211	1					
ANR	735250	CallExpression	strdup ( node -> value )		735211	1					
ANR	735251	Callee	strdup		735211	0					
ANR	735252	Identifier	strdup		735211	0					
ANR	735253	ArgumentList	node -> value		735211	1					
ANR	735254	Argument	node -> value		735211	0					
ANR	735255	PtrMemberAccess	node -> value		735211	0					
ANR	735256	Identifier	node		735211	0					
ANR	735257	Identifier	value		735211	1					
ANR	735258	ReturnStatement	return true ;	996:1:28240:28251	735211	4	True				
ANR	735259	Identifier	true		735211	0					
ANR	735260	ReturnType	static bool		735211	1					
ANR	735261	Identifier	cb_dirzigns		735211	2					
ANR	735262	ParameterList	"void * user , void * data"		735211	3					
ANR	735263	Parameter	void * user	991:24:28063:28072	735211	0	True				
ANR	735264	ParameterType	void *		735211	0					
ANR	735265	Identifier	user		735211	1					
ANR	735266	Parameter	void * data	991:36:28075:28084	735211	1	True				
ANR	735267	ParameterType	void *		735211	0					
ANR	735268	Identifier	data		735211	1					
ANR	735269	CFGEntryNode	ENTRY		735211		True				
ANR	735270	CFGExitNode	EXIT		735211		True				
ANR	735271	Symbol	data		735211						
ANR	735272	Symbol	* core		735211						
ANR	735273	Symbol	core -> anal		735211						
ANR	735274	Symbol	node -> value		735211						
ANR	735275	Symbol	core		735211						
ANR	735276	Symbol	node		735211						
ANR	735277	Symbol	* core -> anal		735211						
ANR	735278	Symbol	core -> anal -> zign_path		735211						
ANR	735279	Symbol	true		735211						
ANR	735280	Symbol	* node		735211						
ANR	735281	Symbol	strdup		735211						
ANR	735282	Symbol	user		735211						
ANR	735283	Symbol	* * core		735211						
ANR	735284	Function	cb_bigendian	999:0:28256:28830							
ANR	735285	FunctionDef	"cb_bigendian (void * user , void * data)"		735284	0					
ANR	735286	CompoundStatement		999:49:28305:28830	735284	0					
ANR	735287	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1000:1:28308:28336	735284	0	True				
ANR	735288	IdentifierDecl	* core = ( RCore * ) user		735284	0					
ANR	735289	IdentifierDeclType	RCore *		735284	0					
ANR	735290	Identifier	core		735284	1					
ANR	735291	AssignmentExpression	* core = ( RCore * ) user		735284	2		=			
ANR	735292	Identifier	core		735284	0					
ANR	735293	CastExpression	( RCore * ) user		735284	1					
ANR	735294	CastTarget	RCore *		735284	0					
ANR	735295	Identifier	user		735284	1					
ANR	735296	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1001:1:28339:28379	735284	1	True				
ANR	735297	IdentifierDecl	* node = ( RConfigNode * ) data		735284	0					
ANR	735298	IdentifierDeclType	RConfigNode *		735284	0					
ANR	735299	Identifier	node		735284	1					
ANR	735300	AssignmentExpression	* node = ( RConfigNode * ) data		735284	2		=			
ANR	735301	Identifier	node		735284	0					
ANR	735302	CastExpression	( RConfigNode * ) data		735284	1					
ANR	735303	CastTarget	RConfigNode *		735284	0					
ANR	735304	Identifier	data		735284	1					
ANR	735305	IdentifierDeclStatement	"bool isbig = r_asm_set_big_endian ( core -> assembler , node -> i_value ) ;"	1003:1:28448:28514	735284	2	True				
ANR	735306	IdentifierDecl	"isbig = r_asm_set_big_endian ( core -> assembler , node -> i_value )"		735284	0					
ANR	735307	IdentifierDeclType	bool		735284	0					
ANR	735308	Identifier	isbig		735284	1					
ANR	735309	AssignmentExpression	"isbig = r_asm_set_big_endian ( core -> assembler , node -> i_value )"		735284	2		=			
ANR	735310	Identifier	isbig		735284	0					
ANR	735311	CallExpression	"r_asm_set_big_endian ( core -> assembler , node -> i_value )"		735284	1					
ANR	735312	Callee	r_asm_set_big_endian		735284	0					
ANR	735313	Identifier	r_asm_set_big_endian		735284	0					
ANR	735314	ArgumentList	core -> assembler		735284	1					
ANR	735315	Argument	core -> assembler		735284	0					
ANR	735316	PtrMemberAccess	core -> assembler		735284	0					
ANR	735317	Identifier	core		735284	0					
ANR	735318	Identifier	assembler		735284	1					
ANR	735319	Argument	node -> i_value		735284	1					
ANR	735320	PtrMemberAccess	node -> i_value		735284	0					
ANR	735321	Identifier	node		735284	0					
ANR	735322	Identifier	i_value		735284	1					
ANR	735323	ExpressionStatement	"r_anal_set_big_endian ( core -> anal , isbig )"	1005:1:28557:28598	735284	3	True				
ANR	735324	CallExpression	"r_anal_set_big_endian ( core -> anal , isbig )"		735284	0					
ANR	735325	Callee	r_anal_set_big_endian		735284	0					
ANR	735326	Identifier	r_anal_set_big_endian		735284	0					
ANR	735327	ArgumentList	core -> anal		735284	1					
ANR	735328	Argument	core -> anal		735284	0					
ANR	735329	PtrMemberAccess	core -> anal		735284	0					
ANR	735330	Identifier	core		735284	0					
ANR	735331	Identifier	anal		735284	1					
ANR	735332	Argument	isbig		735284	1					
ANR	735333	Identifier	isbig		735284	0					
ANR	735334	IfStatement	if ( core -> dbg && core -> dbg -> bp )		735284	4					
ANR	735335	Condition	core -> dbg && core -> dbg -> bp	1007:5:28667:28692	735284	0	True				
ANR	735336	AndExpression	core -> dbg && core -> dbg -> bp		735284	0		&&			
ANR	735337	PtrMemberAccess	core -> dbg		735284	0					
ANR	735338	Identifier	core		735284	0					
ANR	735339	Identifier	dbg		735284	1					
ANR	735340	PtrMemberAccess	core -> dbg -> bp		735284	1					
ANR	735341	PtrMemberAccess	core -> dbg		735284	0					
ANR	735342	Identifier	core		735284	0					
ANR	735343	Identifier	dbg		735284	1					
ANR	735344	Identifier	bp		735284	1					
ANR	735345	CompoundStatement		9:33:389:389	735284	1					
ANR	735346	ExpressionStatement	core -> dbg -> bp -> endian = isbig	1008:2:28699:28728	735284	0	True				
ANR	735347	AssignmentExpression	core -> dbg -> bp -> endian = isbig		735284	0		=			
ANR	735348	PtrMemberAccess	core -> dbg -> bp -> endian		735284	0					
ANR	735349	PtrMemberAccess	core -> dbg -> bp		735284	0					
ANR	735350	PtrMemberAccess	core -> dbg		735284	0					
ANR	735351	Identifier	core		735284	0					
ANR	735352	Identifier	dbg		735284	1					
ANR	735353	Identifier	bp		735284	1					
ANR	735354	Identifier	endian		735284	1					
ANR	735355	Identifier	isbig		735284	1					
ANR	735356	ExpressionStatement	core -> print -> big_endian = node -> i_value	1011:1:28775:28814	735284	5	True				
ANR	735357	AssignmentExpression	core -> print -> big_endian = node -> i_value		735284	0		=			
ANR	735358	PtrMemberAccess	core -> print -> big_endian		735284	0					
ANR	735359	PtrMemberAccess	core -> print		735284	0					
ANR	735360	Identifier	core		735284	0					
ANR	735361	Identifier	print		735284	1					
ANR	735362	Identifier	big_endian		735284	1					
ANR	735363	PtrMemberAccess	node -> i_value		735284	1					
ANR	735364	Identifier	node		735284	0					
ANR	735365	Identifier	i_value		735284	1					
ANR	735366	ReturnStatement	return true ;	1012:1:28817:28828	735284	6	True				
ANR	735367	Identifier	true		735284	0					
ANR	735368	ReturnType	static bool		735284	1					
ANR	735369	Identifier	cb_bigendian		735284	2					
ANR	735370	ParameterList	"void * user , void * data"		735284	3					
ANR	735371	Parameter	void * user	999:25:28281:28290	735284	0	True				
ANR	735372	ParameterType	void *		735284	0					
ANR	735373	Identifier	user		735284	1					
ANR	735374	Parameter	void * data	999:37:28293:28302	735284	1	True				
ANR	735375	ParameterType	void *		735284	0					
ANR	735376	Identifier	data		735284	1					
ANR	735377	CFGEntryNode	ENTRY		735284		True				
ANR	735378	CFGExitNode	EXIT		735284		True				
ANR	735379	Symbol	data		735284						
ANR	735380	Symbol	* core -> dbg -> bp		735284						
ANR	735381	Symbol	* core		735284						
ANR	735382	Symbol	core -> assembler		735284						
ANR	735383	Symbol	core -> print -> big_endian		735284						
ANR	735384	Symbol	isbig		735284						
ANR	735385	Symbol	core -> dbg -> bp		735284						
ANR	735386	Symbol	core -> anal		735284						
ANR	735387	Symbol	r_asm_set_big_endian		735284						
ANR	735388	Symbol	node -> i_value		735284						
ANR	735389	Symbol	core		735284						
ANR	735390	Symbol	node		735284						
ANR	735391	Symbol	* * * core		735284						
ANR	735392	Symbol	* core -> print		735284						
ANR	735393	Symbol	true		735284						
ANR	735394	Symbol	* node		735284						
ANR	735395	Symbol	core -> print		735284						
ANR	735396	Symbol	user		735284						
ANR	735397	Symbol	* core -> dbg		735284						
ANR	735398	Symbol	core -> dbg -> bp -> endian		735284						
ANR	735399	Symbol	* * core		735284						
ANR	735400	Symbol	core -> dbg		735284						
ANR	735401	Symbol	* * core -> dbg		735284						
ANR	735402	Function	cb_cfgdatefmt	1015:0:28833:29028							
ANR	735403	FunctionDef	"cb_cfgdatefmt (void * user , void * data)"		735402	0					
ANR	735404	CompoundStatement		1015:50:28883:29028	735402	0					
ANR	735405	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1016:1:28886:28913	735402	0	True				
ANR	735406	IdentifierDecl	* core = ( RCore * ) user		735402	0					
ANR	735407	IdentifierDeclType	RCore *		735402	0					
ANR	735408	Identifier	core		735402	1					
ANR	735409	AssignmentExpression	* core = ( RCore * ) user		735402	2		=			
ANR	735410	Identifier	core		735402	0					
ANR	735411	CastExpression	( RCore * ) user		735402	1					
ANR	735412	CastTarget	RCore *		735402	0					
ANR	735413	Identifier	user		735402	1					
ANR	735414	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1017:1:28916:28955	735402	1	True				
ANR	735415	IdentifierDecl	* node = ( RConfigNode * ) data		735402	0					
ANR	735416	IdentifierDeclType	RConfigNode *		735402	0					
ANR	735417	Identifier	node		735402	1					
ANR	735418	AssignmentExpression	* node = ( RConfigNode * ) data		735402	2		=			
ANR	735419	Identifier	node		735402	0					
ANR	735420	CastExpression	( RConfigNode * ) data		735402	1					
ANR	735421	CastTarget	RConfigNode *		735402	0					
ANR	735422	Identifier	data		735402	1					
ANR	735423	ExpressionStatement	"snprintf ( core -> print -> datefmt , 32 , ""%s"" , node -> value )"	1018:1:28958:29012	735402	2	True				
ANR	735424	CallExpression	"snprintf ( core -> print -> datefmt , 32 , ""%s"" , node -> value )"		735402	0					
ANR	735425	Callee	snprintf		735402	0					
ANR	735426	Identifier	snprintf		735402	0					
ANR	735427	ArgumentList	core -> print -> datefmt		735402	1					
ANR	735428	Argument	core -> print -> datefmt		735402	0					
ANR	735429	PtrMemberAccess	core -> print -> datefmt		735402	0					
ANR	735430	PtrMemberAccess	core -> print		735402	0					
ANR	735431	Identifier	core		735402	0					
ANR	735432	Identifier	print		735402	1					
ANR	735433	Identifier	datefmt		735402	1					
ANR	735434	Argument	32		735402	1					
ANR	735435	PrimaryExpression	32		735402	0					
ANR	735436	Argument	"""%s"""		735402	2					
ANR	735437	PrimaryExpression	"""%s"""		735402	0					
ANR	735438	Argument	node -> value		735402	3					
ANR	735439	PtrMemberAccess	node -> value		735402	0					
ANR	735440	Identifier	node		735402	0					
ANR	735441	Identifier	value		735402	1					
ANR	735442	ReturnStatement	return true ;	1019:1:29015:29026	735402	3	True				
ANR	735443	Identifier	true		735402	0					
ANR	735444	ReturnType	static bool		735402	1					
ANR	735445	Identifier	cb_cfgdatefmt		735402	2					
ANR	735446	ParameterList	"void * user , void * data"		735402	3					
ANR	735447	Parameter	void * user	1015:26:28859:28868	735402	0	True				
ANR	735448	ParameterType	void *		735402	0					
ANR	735449	Identifier	user		735402	1					
ANR	735450	Parameter	void * data	1015:38:28871:28880	735402	1	True				
ANR	735451	ParameterType	void *		735402	0					
ANR	735452	Identifier	data		735402	1					
ANR	735453	CFGEntryNode	ENTRY		735402		True				
ANR	735454	CFGExitNode	EXIT		735402		True				
ANR	735455	Symbol	core		735402						
ANR	735456	Symbol	node		735402						
ANR	735457	Symbol	* core -> print		735402						
ANR	735458	Symbol	data		735402						
ANR	735459	Symbol	* core		735402						
ANR	735460	Symbol	core -> print -> datefmt		735402						
ANR	735461	Symbol	true		735402						
ANR	735462	Symbol	* node		735402						
ANR	735463	Symbol	core -> print		735402						
ANR	735464	Symbol	user		735402						
ANR	735465	Symbol	* * core		735402						
ANR	735466	Symbol	node -> value		735402						
ANR	735467	Function	cb_timezone	1022:0:29031:29207							
ANR	735468	FunctionDef	"cb_timezone (void * user , void * data)"		735467	0					
ANR	735469	CompoundStatement		1022:48:29079:29207	735467	0					
ANR	735470	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1023:1:29082:29109	735467	0	True				
ANR	735471	IdentifierDecl	* core = ( RCore * ) user		735467	0					
ANR	735472	IdentifierDeclType	RCore *		735467	0					
ANR	735473	Identifier	core		735467	1					
ANR	735474	AssignmentExpression	* core = ( RCore * ) user		735467	2		=			
ANR	735475	Identifier	core		735467	0					
ANR	735476	CastExpression	( RCore * ) user		735467	1					
ANR	735477	CastTarget	RCore *		735467	0					
ANR	735478	Identifier	user		735467	1					
ANR	735479	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1024:1:29112:29151	735467	1	True				
ANR	735480	IdentifierDecl	* node = ( RConfigNode * ) data		735467	0					
ANR	735481	IdentifierDeclType	RConfigNode *		735467	0					
ANR	735482	Identifier	node		735467	1					
ANR	735483	AssignmentExpression	* node = ( RConfigNode * ) data		735467	2		=			
ANR	735484	Identifier	node		735467	0					
ANR	735485	CastExpression	( RConfigNode * ) data		735467	1					
ANR	735486	CastTarget	RConfigNode *		735467	0					
ANR	735487	Identifier	data		735467	1					
ANR	735488	ExpressionStatement	core -> print -> datezone = node -> i_value	1025:1:29154:29191	735467	2	True				
ANR	735489	AssignmentExpression	core -> print -> datezone = node -> i_value		735467	0		=			
ANR	735490	PtrMemberAccess	core -> print -> datezone		735467	0					
ANR	735491	PtrMemberAccess	core -> print		735467	0					
ANR	735492	Identifier	core		735467	0					
ANR	735493	Identifier	print		735467	1					
ANR	735494	Identifier	datezone		735467	1					
ANR	735495	PtrMemberAccess	node -> i_value		735467	1					
ANR	735496	Identifier	node		735467	0					
ANR	735497	Identifier	i_value		735467	1					
ANR	735498	ReturnStatement	return true ;	1026:1:29194:29205	735467	3	True				
ANR	735499	Identifier	true		735467	0					
ANR	735500	ReturnType	static bool		735467	1					
ANR	735501	Identifier	cb_timezone		735467	2					
ANR	735502	ParameterList	"void * user , void * data"		735467	3					
ANR	735503	Parameter	void * user	1022:24:29055:29064	735467	0	True				
ANR	735504	ParameterType	void *		735467	0					
ANR	735505	Identifier	user		735467	1					
ANR	735506	Parameter	void * data	1022:36:29067:29076	735467	1	True				
ANR	735507	ParameterType	void *		735467	0					
ANR	735508	Identifier	data		735467	1					
ANR	735509	CFGEntryNode	ENTRY		735467		True				
ANR	735510	CFGExitNode	EXIT		735467		True				
ANR	735511	Symbol	core		735467						
ANR	735512	Symbol	node		735467						
ANR	735513	Symbol	* core -> print		735467						
ANR	735514	Symbol	data		735467						
ANR	735515	Symbol	* core		735467						
ANR	735516	Symbol	core -> print -> datezone		735467						
ANR	735517	Symbol	true		735467						
ANR	735518	Symbol	* node		735467						
ANR	735519	Symbol	core -> print		735467						
ANR	735520	Symbol	user		735467						
ANR	735521	Symbol	* * core		735467						
ANR	735522	Symbol	node -> i_value		735467						
ANR	735523	Function	cb_cfgcorelog	1029:0:29210:29381							
ANR	735524	FunctionDef	"cb_cfgcorelog (void * user , void * data)"		735523	0					
ANR	735525	CompoundStatement		1029:50:29260:29381	735523	0					
ANR	735526	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1030:1:29263:29291	735523	0	True				
ANR	735527	IdentifierDecl	* core = ( RCore * ) user		735523	0					
ANR	735528	IdentifierDeclType	RCore *		735523	0					
ANR	735529	Identifier	core		735523	1					
ANR	735530	AssignmentExpression	* core = ( RCore * ) user		735523	2		=			
ANR	735531	Identifier	core		735523	0					
ANR	735532	CastExpression	( RCore * ) user		735523	1					
ANR	735533	CastTarget	RCore *		735523	0					
ANR	735534	Identifier	user		735523	1					
ANR	735535	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1031:1:29294:29334	735523	1	True				
ANR	735536	IdentifierDecl	* node = ( RConfigNode * ) data		735523	0					
ANR	735537	IdentifierDeclType	RConfigNode *		735523	0					
ANR	735538	Identifier	node		735523	1					
ANR	735539	AssignmentExpression	* node = ( RConfigNode * ) data		735523	2		=			
ANR	735540	Identifier	node		735523	0					
ANR	735541	CastExpression	( RConfigNode * ) data		735523	1					
ANR	735542	CastTarget	RConfigNode *		735523	0					
ANR	735543	Identifier	data		735523	1					
ANR	735544	ExpressionStatement	core -> cfglog = node -> i_value	1032:1:29337:29365	735523	2	True				
ANR	735545	AssignmentExpression	core -> cfglog = node -> i_value		735523	0		=			
ANR	735546	PtrMemberAccess	core -> cfglog		735523	0					
ANR	735547	Identifier	core		735523	0					
ANR	735548	Identifier	cfglog		735523	1					
ANR	735549	PtrMemberAccess	node -> i_value		735523	1					
ANR	735550	Identifier	node		735523	0					
ANR	735551	Identifier	i_value		735523	1					
ANR	735552	ReturnStatement	return true ;	1033:1:29368:29379	735523	3	True				
ANR	735553	Identifier	true		735523	0					
ANR	735554	ReturnType	static bool		735523	1					
ANR	735555	Identifier	cb_cfgcorelog		735523	2					
ANR	735556	ParameterList	"void * user , void * data"		735523	3					
ANR	735557	Parameter	void * user	1029:26:29236:29245	735523	0	True				
ANR	735558	ParameterType	void *		735523	0					
ANR	735559	Identifier	user		735523	1					
ANR	735560	Parameter	void * data	1029:38:29248:29257	735523	1	True				
ANR	735561	ParameterType	void *		735523	0					
ANR	735562	Identifier	data		735523	1					
ANR	735563	CFGEntryNode	ENTRY		735523		True				
ANR	735564	CFGExitNode	EXIT		735523		True				
ANR	735565	Symbol	core -> cfglog		735523						
ANR	735566	Symbol	core		735523						
ANR	735567	Symbol	node		735523						
ANR	735568	Symbol	data		735523						
ANR	735569	Symbol	* core		735523						
ANR	735570	Symbol	true		735523						
ANR	735571	Symbol	* node		735523						
ANR	735572	Symbol	user		735523						
ANR	735573	Symbol	node -> i_value		735523						
ANR	735574	Function	cb_cfgdebug	1036:0:29384:30260							
ANR	735575	FunctionDef	"cb_cfgdebug (void * user , void * data)"		735574	0					
ANR	735576	CompoundStatement		1036:48:29432:30260	735574	0					
ANR	735577	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1037:1:29435:29462	735574	0	True				
ANR	735578	IdentifierDecl	* core = ( RCore * ) user		735574	0					
ANR	735579	IdentifierDeclType	RCore *		735574	0					
ANR	735580	Identifier	core		735574	1					
ANR	735581	AssignmentExpression	* core = ( RCore * ) user		735574	2		=			
ANR	735582	Identifier	core		735574	0					
ANR	735583	CastExpression	( RCore * ) user		735574	1					
ANR	735584	CastTarget	RCore *		735574	0					
ANR	735585	Identifier	user		735574	1					
ANR	735586	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1038:1:29465:29504	735574	1	True				
ANR	735587	IdentifierDecl	* node = ( RConfigNode * ) data		735574	0					
ANR	735588	IdentifierDeclType	RConfigNode *		735574	0					
ANR	735589	Identifier	node		735574	1					
ANR	735590	AssignmentExpression	* node = ( RConfigNode * ) data		735574	2		=			
ANR	735591	Identifier	node		735574	0					
ANR	735592	CastExpression	( RConfigNode * ) data		735574	1					
ANR	735593	CastTarget	RConfigNode *		735574	0					
ANR	735594	Identifier	data		735574	1					
ANR	735595	IfStatement	if ( ! core )		735574	2					
ANR	735596	Condition	! core	1039:5:29511:29515	735574	0	True				
ANR	735597	UnaryOperationExpression	! core		735574	0					
ANR	735598	UnaryOperator	!		735574	0					
ANR	735599	Identifier	core		735574	1					
ANR	735600	CompoundStatement		4:12:85:85	735574	1					
ANR	735601	ReturnStatement	return false ;	1040:2:29522:29534	735574	0	True				
ANR	735602	Identifier	false		735574	0					
ANR	735603	IfStatement	if ( core -> io )		735574	3					
ANR	735604	Condition	core -> io	1042:5:29544:29551	735574	0	True				
ANR	735605	PtrMemberAccess	core -> io		735574	0					
ANR	735606	Identifier	core		735574	0					
ANR	735607	Identifier	io		735574	1					
ANR	735608	CompoundStatement		7:15:121:121	735574	1					
ANR	735609	ExpressionStatement	core -> io -> va = ! node -> i_value	1043:2:29558:29587	735574	0	True				
ANR	735610	AssignmentExpression	core -> io -> va = ! node -> i_value		735574	0		=			
ANR	735611	PtrMemberAccess	core -> io -> va		735574	0					
ANR	735612	PtrMemberAccess	core -> io		735574	0					
ANR	735613	Identifier	core		735574	0					
ANR	735614	Identifier	io		735574	1					
ANR	735615	Identifier	va		735574	1					
ANR	735616	UnaryOperationExpression	! node -> i_value		735574	1					
ANR	735617	UnaryOperator	!		735574	0					
ANR	735618	PtrMemberAccess	node -> i_value		735574	1					
ANR	735619	Identifier	node		735574	0					
ANR	735620	Identifier	i_value		735574	1					
ANR	735621	ExpressionStatement	core -> io -> debug = node -> i_value	1044:2:29591:29622	735574	1	True				
ANR	735622	AssignmentExpression	core -> io -> debug = node -> i_value		735574	0		=			
ANR	735623	PtrMemberAccess	core -> io -> debug		735574	0					
ANR	735624	PtrMemberAccess	core -> io		735574	0					
ANR	735625	Identifier	core		735574	0					
ANR	735626	Identifier	io		735574	1					
ANR	735627	Identifier	debug		735574	1					
ANR	735628	PtrMemberAccess	node -> i_value		735574	1					
ANR	735629	Identifier	node		735574	0					
ANR	735630	Identifier	i_value		735574	1					
ANR	735631	IfStatement	if ( core -> dbg && node -> i_value )		735574	4					
ANR	735632	Condition	core -> dbg && node -> i_value	1046:5:29632:29657	735574	0	True				
ANR	735633	AndExpression	core -> dbg && node -> i_value		735574	0		&&			
ANR	735634	PtrMemberAccess	core -> dbg		735574	0					
ANR	735635	Identifier	core		735574	0					
ANR	735636	Identifier	dbg		735574	1					
ANR	735637	PtrMemberAccess	node -> i_value		735574	1					
ANR	735638	Identifier	node		735574	0					
ANR	735639	Identifier	i_value		735574	1					
ANR	735640	CompoundStatement		12:2:231:298	735574	1					
ANR	735641	IdentifierDeclStatement	"const char * dbgbackend = r_config_get ( core -> config , ""dbg.backend"" ) ;"	1047:2:29664:29731	735574	0	True				
ANR	735642	IdentifierDecl	"* dbgbackend = r_config_get ( core -> config , ""dbg.backend"" )"		735574	0					
ANR	735643	IdentifierDeclType	const char *		735574	0					
ANR	735644	Identifier	dbgbackend		735574	1					
ANR	735645	AssignmentExpression	"* dbgbackend = r_config_get ( core -> config , ""dbg.backend"" )"		735574	2		=			
ANR	735646	Identifier	dbgbackend		735574	0					
ANR	735647	CallExpression	"r_config_get ( core -> config , ""dbg.backend"" )"		735574	1					
ANR	735648	Callee	r_config_get		735574	0					
ANR	735649	Identifier	r_config_get		735574	0					
ANR	735650	ArgumentList	core -> config		735574	1					
ANR	735651	Argument	core -> config		735574	0					
ANR	735652	PtrMemberAccess	core -> config		735574	0					
ANR	735653	Identifier	core		735574	0					
ANR	735654	Identifier	config		735574	1					
ANR	735655	Argument	"""dbg.backend"""		735574	1					
ANR	735656	PrimaryExpression	"""dbg.backend"""		735574	0					
ANR	735657	ExpressionStatement	core -> bin -> is_debugger = true	1048:2:29735:29764	735574	1	True				
ANR	735658	AssignmentExpression	core -> bin -> is_debugger = true		735574	0		=			
ANR	735659	PtrMemberAccess	core -> bin -> is_debugger		735574	0					
ANR	735660	PtrMemberAccess	core -> bin		735574	0					
ANR	735661	Identifier	core		735574	0					
ANR	735662	Identifier	bin		735574	1					
ANR	735663	Identifier	is_debugger		735574	1					
ANR	735664	Identifier	true		735574	1					
ANR	735665	ExpressionStatement	"r_debug_use ( core -> dbg , dbgbackend )"	1049:2:29768:29803	735574	2	True				
ANR	735666	CallExpression	"r_debug_use ( core -> dbg , dbgbackend )"		735574	0					
ANR	735667	Callee	r_debug_use		735574	0					
ANR	735668	Identifier	r_debug_use		735574	0					
ANR	735669	ArgumentList	core -> dbg		735574	1					
ANR	735670	Argument	core -> dbg		735574	0					
ANR	735671	PtrMemberAccess	core -> dbg		735574	0					
ANR	735672	Identifier	core		735574	0					
ANR	735673	Identifier	dbg		735574	1					
ANR	735674	Argument	dbgbackend		735574	1					
ANR	735675	Identifier	dbgbackend		735574	0					
ANR	735676	IfStatement	"if ( ! strcmp ( r_config_get ( core -> config , ""cmd.prompt"" ) , """" ) )"		735574	3					
ANR	735677	Condition	"! strcmp ( r_config_get ( core -> config , ""cmd.prompt"" ) , """" )"	1050:6:29811:29865	735574	0	True				
ANR	735678	UnaryOperationExpression	"! strcmp ( r_config_get ( core -> config , ""cmd.prompt"" ) , """" )"		735574	0					
ANR	735679	UnaryOperator	!		735574	0					
ANR	735680	CallExpression	"strcmp ( r_config_get ( core -> config , ""cmd.prompt"" ) , """" )"		735574	1					
ANR	735681	Callee	strcmp		735574	0					
ANR	735682	Identifier	strcmp		735574	0					
ANR	735683	ArgumentList	"r_config_get ( core -> config , ""cmd.prompt"" )"		735574	1					
ANR	735684	Argument	"r_config_get ( core -> config , ""cmd.prompt"" )"		735574	0					
ANR	735685	CallExpression	"r_config_get ( core -> config , ""cmd.prompt"" )"		735574	0					
ANR	735686	Callee	r_config_get		735574	0					
ANR	735687	Identifier	r_config_get		735574	0					
ANR	735688	ArgumentList	core -> config		735574	1					
ANR	735689	Argument	core -> config		735574	0					
ANR	735690	PtrMemberAccess	core -> config		735574	0					
ANR	735691	Identifier	core		735574	0					
ANR	735692	Identifier	config		735574	1					
ANR	735693	Argument	"""cmd.prompt"""		735574	1					
ANR	735694	PrimaryExpression	"""cmd.prompt"""		735574	0					
ANR	735695	Argument	""""""		735574	1					
ANR	735696	PrimaryExpression	""""""		735574	0					
ANR	735697	CompoundStatement		15:63:435:435	735574	1					
ANR	735698	ExpressionStatement	"r_config_set ( core -> config , ""cmd.prompt"" , "".dr*"" )"	1051:3:29873:29922	735574	0	True				
ANR	735699	CallExpression	"r_config_set ( core -> config , ""cmd.prompt"" , "".dr*"" )"		735574	0					
ANR	735700	Callee	r_config_set		735574	0					
ANR	735701	Identifier	r_config_set		735574	0					
ANR	735702	ArgumentList	core -> config		735574	1					
ANR	735703	Argument	core -> config		735574	0					
ANR	735704	PtrMemberAccess	core -> config		735574	0					
ANR	735705	Identifier	core		735574	0					
ANR	735706	Identifier	config		735574	1					
ANR	735707	Argument	"""cmd.prompt"""		735574	1					
ANR	735708	PrimaryExpression	"""cmd.prompt"""		735574	0					
ANR	735709	Argument	""".dr*"""		735574	2					
ANR	735710	PrimaryExpression	""".dr*"""		735574	0					
ANR	735711	IfStatement	"if ( ! strcmp ( dbgbackend , ""bf"" ) )"		735574	4					
ANR	735712	Condition	"! strcmp ( dbgbackend , ""bf"" )"	1053:6:29934:29959	735574	0	True				
ANR	735713	UnaryOperationExpression	"! strcmp ( dbgbackend , ""bf"" )"		735574	0					
ANR	735714	UnaryOperator	!		735574	0					
ANR	735715	CallExpression	"strcmp ( dbgbackend , ""bf"" )"		735574	1					
ANR	735716	Callee	strcmp		735574	0					
ANR	735717	Identifier	strcmp		735574	0					
ANR	735718	ArgumentList	dbgbackend		735574	1					
ANR	735719	Argument	dbgbackend		735574	0					
ANR	735720	Identifier	dbgbackend		735574	0					
ANR	735721	Argument	"""bf"""		735574	1					
ANR	735722	PrimaryExpression	"""bf"""		735574	0					
ANR	735723	CompoundStatement		18:34:529:529	735574	1					
ANR	735724	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , ""bf"" )"	1054:3:29967:30012	735574	0	True				
ANR	735725	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , ""bf"" )"		735574	0					
ANR	735726	Callee	r_config_set		735574	0					
ANR	735727	Identifier	r_config_set		735574	0					
ANR	735728	ArgumentList	core -> config		735574	1					
ANR	735729	Argument	core -> config		735574	0					
ANR	735730	PtrMemberAccess	core -> config		735574	0					
ANR	735731	Identifier	core		735574	0					
ANR	735732	Identifier	config		735574	1					
ANR	735733	Argument	"""asm.arch"""		735574	1					
ANR	735734	PrimaryExpression	"""asm.arch"""		735574	0					
ANR	735735	Argument	"""bf"""		735574	2					
ANR	735736	PrimaryExpression	"""bf"""		735574	0					
ANR	735737	IfStatement	if ( core -> file )		735574	5					
ANR	735738	Condition	core -> file	1056:6:30024:30033	735574	0	True				
ANR	735739	PtrMemberAccess	core -> file		735574	0					
ANR	735740	Identifier	core		735574	0					
ANR	735741	Identifier	file		735574	1					
ANR	735742	CompoundStatement		21:18:603:603	735574	1					
ANR	735743	ExpressionStatement	"r_debug_select ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) , r_io_fd_get_tid ( core -> io , core -> file -> fd ) )"	1057:3:30041:30160	735574	0	True				
ANR	735744	CallExpression	"r_debug_select ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) , r_io_fd_get_tid ( core -> io , core -> file -> fd ) )"		735574	0					
ANR	735745	Callee	r_debug_select		735574	0					
ANR	735746	Identifier	r_debug_select		735574	0					
ANR	735747	ArgumentList	core -> dbg		735574	1					
ANR	735748	Argument	core -> dbg		735574	0					
ANR	735749	PtrMemberAccess	core -> dbg		735574	0					
ANR	735750	Identifier	core		735574	0					
ANR	735751	Identifier	dbg		735574	1					
ANR	735752	Argument	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		735574	1					
ANR	735753	CallExpression	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		735574	0					
ANR	735754	Callee	r_io_fd_get_pid		735574	0					
ANR	735755	Identifier	r_io_fd_get_pid		735574	0					
ANR	735756	ArgumentList	core -> io		735574	1					
ANR	735757	Argument	core -> io		735574	0					
ANR	735758	PtrMemberAccess	core -> io		735574	0					
ANR	735759	Identifier	core		735574	0					
ANR	735760	Identifier	io		735574	1					
ANR	735761	Argument	core -> file -> fd		735574	1					
ANR	735762	PtrMemberAccess	core -> file -> fd		735574	0					
ANR	735763	PtrMemberAccess	core -> file		735574	0					
ANR	735764	Identifier	core		735574	0					
ANR	735765	Identifier	file		735574	1					
ANR	735766	Identifier	fd		735574	1					
ANR	735767	Argument	"r_io_fd_get_tid ( core -> io , core -> file -> fd )"		735574	2					
ANR	735768	CallExpression	"r_io_fd_get_tid ( core -> io , core -> file -> fd )"		735574	0					
ANR	735769	Callee	r_io_fd_get_tid		735574	0					
ANR	735770	Identifier	r_io_fd_get_tid		735574	0					
ANR	735771	ArgumentList	core -> io		735574	1					
ANR	735772	Argument	core -> io		735574	0					
ANR	735773	PtrMemberAccess	core -> io		735574	0					
ANR	735774	Identifier	core		735574	0					
ANR	735775	Identifier	io		735574	1					
ANR	735776	Argument	core -> file -> fd		735574	1					
ANR	735777	PtrMemberAccess	core -> file -> fd		735574	0					
ANR	735778	PtrMemberAccess	core -> file		735574	0					
ANR	735779	Identifier	core		735574	0					
ANR	735780	Identifier	file		735574	1					
ANR	735781	Identifier	fd		735574	1					
ANR	735782	ElseStatement	else		735574	0					
ANR	735783	CompoundStatement		25:8:741:741	735574	0					
ANR	735784	ExpressionStatement	"r_debug_use ( core -> dbg , NULL )"	1061:2:30178:30207	735574	0	True				
ANR	735785	CallExpression	"r_debug_use ( core -> dbg , NULL )"		735574	0					
ANR	735786	Callee	r_debug_use		735574	0					
ANR	735787	Identifier	r_debug_use		735574	0					
ANR	735788	ArgumentList	core -> dbg		735574	1					
ANR	735789	Argument	core -> dbg		735574	0					
ANR	735790	PtrMemberAccess	core -> dbg		735574	0					
ANR	735791	Identifier	core		735574	0					
ANR	735792	Identifier	dbg		735574	1					
ANR	735793	Argument	NULL		735574	1					
ANR	735794	Identifier	NULL		735574	0					
ANR	735795	ExpressionStatement	core -> bin -> is_debugger = false	1062:2:30211:30241	735574	1	True				
ANR	735796	AssignmentExpression	core -> bin -> is_debugger = false		735574	0		=			
ANR	735797	PtrMemberAccess	core -> bin -> is_debugger		735574	0					
ANR	735798	PtrMemberAccess	core -> bin		735574	0					
ANR	735799	Identifier	core		735574	0					
ANR	735800	Identifier	bin		735574	1					
ANR	735801	Identifier	is_debugger		735574	1					
ANR	735802	Identifier	false		735574	1					
ANR	735803	ReturnStatement	return true ;	1064:1:30247:30258	735574	5	True				
ANR	735804	Identifier	true		735574	0					
ANR	735805	ReturnType	static bool		735574	1					
ANR	735806	Identifier	cb_cfgdebug		735574	2					
ANR	735807	ParameterList	"void * user , void * data"		735574	3					
ANR	735808	Parameter	void * user	1036:24:29408:29417	735574	0	True				
ANR	735809	ParameterType	void *		735574	0					
ANR	735810	Identifier	user		735574	1					
ANR	735811	Parameter	void * data	1036:36:29420:29429	735574	1	True				
ANR	735812	ParameterType	void *		735574	0					
ANR	735813	Identifier	data		735574	1					
ANR	735814	CFGEntryNode	ENTRY		735574		True				
ANR	735815	CFGExitNode	EXIT		735574		True				
ANR	735816	Symbol	dbgbackend		735574						
ANR	735817	Symbol	data		735574						
ANR	735818	Symbol	* core		735574						
ANR	735819	Symbol	r_config_get		735574						
ANR	735820	Symbol	core -> io		735574						
ANR	735821	Symbol	core -> bin -> is_debugger		735574						
ANR	735822	Symbol	core -> io -> debug		735574						
ANR	735823	Symbol	* node		735574						
ANR	735824	Symbol	* core -> bin		735574						
ANR	735825	Symbol	core -> bin		735574						
ANR	735826	Symbol	* * core		735574						
ANR	735827	Symbol	core -> config		735574						
ANR	735828	Symbol	strcmp		735574						
ANR	735829	Symbol	NULL		735574						
ANR	735830	Symbol	core -> file		735574						
ANR	735831	Symbol	false		735574						
ANR	735832	Symbol	core -> io -> va		735574						
ANR	735833	Symbol	node -> i_value		735574						
ANR	735834	Symbol	r_io_fd_get_tid		735574						
ANR	735835	Symbol	core		735574						
ANR	735836	Symbol	node		735574						
ANR	735837	Symbol	* core -> io		735574						
ANR	735838	Symbol	* core -> file		735574						
ANR	735839	Symbol	r_io_fd_get_pid		735574						
ANR	735840	Symbol	true		735574						
ANR	735841	Symbol	core -> file -> fd		735574						
ANR	735842	Symbol	user		735574						
ANR	735843	Symbol	core -> dbg		735574						
ANR	735844	Function	cb_dirhome	1067:0:30263:30433							
ANR	735845	FunctionDef	"cb_dirhome (void * user , void * data)"		735844	0					
ANR	735846	CompoundStatement		1067:47:30310:30433	735844	0					
ANR	735847	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1068:1:30313:30352	735844	0	True				
ANR	735848	IdentifierDecl	* node = ( RConfigNode * ) data		735844	0					
ANR	735849	IdentifierDeclType	RConfigNode *		735844	0					
ANR	735850	Identifier	node		735844	1					
ANR	735851	AssignmentExpression	* node = ( RConfigNode * ) data		735844	2		=			
ANR	735852	Identifier	node		735844	0					
ANR	735853	CastExpression	( RConfigNode * ) data		735844	1					
ANR	735854	CastTarget	RConfigNode *		735844	0					
ANR	735855	Identifier	data		735844	1					
ANR	735856	IfStatement	if ( node -> value )		735844	1					
ANR	735857	Condition	node -> value	1069:5:30359:30369	735844	0	True				
ANR	735858	PtrMemberAccess	node -> value		735844	0					
ANR	735859	Identifier	node		735844	0					
ANR	735860	Identifier	value		735844	1					
ANR	735861	CompoundStatement		3:18:61:61	735844	1					
ANR	735862	ExpressionStatement	"r_sys_setenv ( R_SYS_HOME , node -> value )"	1070:2:30376:30414	735844	0	True				
ANR	735863	CallExpression	"r_sys_setenv ( R_SYS_HOME , node -> value )"		735844	0					
ANR	735864	Callee	r_sys_setenv		735844	0					
ANR	735865	Identifier	r_sys_setenv		735844	0					
ANR	735866	ArgumentList	R_SYS_HOME		735844	1					
ANR	735867	Argument	R_SYS_HOME		735844	0					
ANR	735868	Identifier	R_SYS_HOME		735844	0					
ANR	735869	Argument	node -> value		735844	1					
ANR	735870	PtrMemberAccess	node -> value		735844	0					
ANR	735871	Identifier	node		735844	0					
ANR	735872	Identifier	value		735844	1					
ANR	735873	ReturnStatement	return true ;	1072:1:30420:30431	735844	2	True				
ANR	735874	Identifier	true		735844	0					
ANR	735875	ReturnType	static bool		735844	1					
ANR	735876	Identifier	cb_dirhome		735844	2					
ANR	735877	ParameterList	"void * user , void * data"		735844	3					
ANR	735878	Parameter	void * user	1067:23:30286:30295	735844	0	True				
ANR	735879	ParameterType	void *		735844	0					
ANR	735880	Identifier	user		735844	1					
ANR	735881	Parameter	void * data	1067:35:30298:30307	735844	1	True				
ANR	735882	ParameterType	void *		735844	0					
ANR	735883	Identifier	data		735844	1					
ANR	735884	CFGEntryNode	ENTRY		735844		True				
ANR	735885	CFGExitNode	EXIT		735844		True				
ANR	735886	Symbol	node		735844						
ANR	735887	Symbol	data		735844						
ANR	735888	Symbol	R_SYS_HOME		735844						
ANR	735889	Symbol	true		735844						
ANR	735890	Symbol	* node		735844						
ANR	735891	Symbol	user		735844						
ANR	735892	Symbol	node -> value		735844						
ANR	735893	Function	cb_dirtmp	1075:0:30436:30605							
ANR	735894	FunctionDef	"cb_dirtmp (void * user , void * data)"		735893	0					
ANR	735895	CompoundStatement		1075:47:30483:30605	735893	0					
ANR	735896	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1076:1:30486:30525	735893	0	True				
ANR	735897	IdentifierDecl	* node = ( RConfigNode * ) data		735893	0					
ANR	735898	IdentifierDeclType	RConfigNode *		735893	0					
ANR	735899	Identifier	node		735893	1					
ANR	735900	AssignmentExpression	* node = ( RConfigNode * ) data		735893	2		=			
ANR	735901	Identifier	node		735893	0					
ANR	735902	CastExpression	( RConfigNode * ) data		735893	1					
ANR	735903	CastTarget	RConfigNode *		735893	0					
ANR	735904	Identifier	data		735893	1					
ANR	735905	IfStatement	if ( node -> value )		735893	1					
ANR	735906	Condition	node -> value	1077:5:30532:30542	735893	0	True				
ANR	735907	PtrMemberAccess	node -> value		735893	0					
ANR	735908	Identifier	node		735893	0					
ANR	735909	Identifier	value		735893	1					
ANR	735910	CompoundStatement		3:18:61:61	735893	1					
ANR	735911	ExpressionStatement	"r_sys_setenv ( R_SYS_TMP , node -> value )"	1078:2:30549:30586	735893	0	True				
ANR	735912	CallExpression	"r_sys_setenv ( R_SYS_TMP , node -> value )"		735893	0					
ANR	735913	Callee	r_sys_setenv		735893	0					
ANR	735914	Identifier	r_sys_setenv		735893	0					
ANR	735915	ArgumentList	R_SYS_TMP		735893	1					
ANR	735916	Argument	R_SYS_TMP		735893	0					
ANR	735917	Identifier	R_SYS_TMP		735893	0					
ANR	735918	Argument	node -> value		735893	1					
ANR	735919	PtrMemberAccess	node -> value		735893	0					
ANR	735920	Identifier	node		735893	0					
ANR	735921	Identifier	value		735893	1					
ANR	735922	ReturnStatement	return true ;	1080:1:30592:30603	735893	2	True				
ANR	735923	Identifier	true		735893	0					
ANR	735924	ReturnType	static bool		735893	1					
ANR	735925	Identifier	cb_dirtmp		735893	2					
ANR	735926	ParameterList	"void * user , void * data"		735893	3					
ANR	735927	Parameter	void * user	1075:23:30459:30468	735893	0	True				
ANR	735928	ParameterType	void *		735893	0					
ANR	735929	Identifier	user		735893	1					
ANR	735930	Parameter	void * data	1075:35:30471:30480	735893	1	True				
ANR	735931	ParameterType	void *		735893	0					
ANR	735932	Identifier	data		735893	1					
ANR	735933	CFGEntryNode	ENTRY		735893		True				
ANR	735934	CFGExitNode	EXIT		735893		True				
ANR	735935	Symbol	node		735893						
ANR	735936	Symbol	data		735893						
ANR	735937	Symbol	R_SYS_TMP		735893						
ANR	735938	Symbol	true		735893						
ANR	735939	Symbol	* node		735893						
ANR	735940	Symbol	user		735893						
ANR	735941	Symbol	node -> value		735893						
ANR	735942	Function	cb_dirsrc	1083:0:30608:30812							
ANR	735943	FunctionDef	"cb_dirsrc (void * user , void * data)"		735942	0					
ANR	735944	CompoundStatement		1083:46:30654:30812	735942	0					
ANR	735945	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1084:1:30657:30696	735942	0	True				
ANR	735946	IdentifierDecl	* node = ( RConfigNode * ) data		735942	0					
ANR	735947	IdentifierDeclType	RConfigNode *		735942	0					
ANR	735948	Identifier	node		735942	1					
ANR	735949	AssignmentExpression	* node = ( RConfigNode * ) data		735942	2		=			
ANR	735950	Identifier	node		735942	0					
ANR	735951	CastExpression	( RConfigNode * ) data		735942	1					
ANR	735952	CastTarget	RConfigNode *		735942	0					
ANR	735953	Identifier	data		735942	1					
ANR	735954	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1085:1:30699:30726	735942	1	True				
ANR	735955	IdentifierDecl	* core = ( RCore * ) user		735942	0					
ANR	735956	IdentifierDeclType	RCore *		735942	0					
ANR	735957	Identifier	core		735942	1					
ANR	735958	AssignmentExpression	* core = ( RCore * ) user		735942	2		=			
ANR	735959	Identifier	core		735942	0					
ANR	735960	CastExpression	( RCore * ) user		735942	1					
ANR	735961	CastTarget	RCore *		735942	0					
ANR	735962	Identifier	user		735942	1					
ANR	735963	ExpressionStatement	free ( core -> bin -> srcdir )	1086:1:30729:30753	735942	2	True				
ANR	735964	CallExpression	free ( core -> bin -> srcdir )		735942	0					
ANR	735965	Callee	free		735942	0					
ANR	735966	Identifier	free		735942	0					
ANR	735967	ArgumentList	core -> bin -> srcdir		735942	1					
ANR	735968	Argument	core -> bin -> srcdir		735942	0					
ANR	735969	PtrMemberAccess	core -> bin -> srcdir		735942	0					
ANR	735970	PtrMemberAccess	core -> bin		735942	0					
ANR	735971	Identifier	core		735942	0					
ANR	735972	Identifier	bin		735942	1					
ANR	735973	Identifier	srcdir		735942	1					
ANR	735974	ExpressionStatement	core -> bin -> srcdir = strdup ( node -> value )	1087:1:30756:30796	735942	3	True				
ANR	735975	AssignmentExpression	core -> bin -> srcdir = strdup ( node -> value )		735942	0		=			
ANR	735976	PtrMemberAccess	core -> bin -> srcdir		735942	0					
ANR	735977	PtrMemberAccess	core -> bin		735942	0					
ANR	735978	Identifier	core		735942	0					
ANR	735979	Identifier	bin		735942	1					
ANR	735980	Identifier	srcdir		735942	1					
ANR	735981	CallExpression	strdup ( node -> value )		735942	1					
ANR	735982	Callee	strdup		735942	0					
ANR	735983	Identifier	strdup		735942	0					
ANR	735984	ArgumentList	node -> value		735942	1					
ANR	735985	Argument	node -> value		735942	0					
ANR	735986	PtrMemberAccess	node -> value		735942	0					
ANR	735987	Identifier	node		735942	0					
ANR	735988	Identifier	value		735942	1					
ANR	735989	ReturnStatement	return true ;	1088:1:30799:30810	735942	4	True				
ANR	735990	Identifier	true		735942	0					
ANR	735991	ReturnType	static bool		735942	1					
ANR	735992	Identifier	cb_dirsrc		735942	2					
ANR	735993	ParameterList	"void * user , void * data"		735942	3					
ANR	735994	Parameter	void * user	1083:22:30630:30639	735942	0	True				
ANR	735995	ParameterType	void *		735942	0					
ANR	735996	Identifier	user		735942	1					
ANR	735997	Parameter	void * data	1083:34:30642:30651	735942	1	True				
ANR	735998	ParameterType	void *		735942	0					
ANR	735999	Identifier	data		735942	1					
ANR	736000	CFGEntryNode	ENTRY		735942		True				
ANR	736001	CFGExitNode	EXIT		735942		True				
ANR	736002	Symbol	data		735942						
ANR	736003	Symbol	* core		735942						
ANR	736004	Symbol	core -> bin -> srcdir		735942						
ANR	736005	Symbol	node -> value		735942						
ANR	736006	Symbol	node		735942						
ANR	736007	Symbol	core		735942						
ANR	736008	Symbol	true		735942						
ANR	736009	Symbol	* node		735942						
ANR	736010	Symbol	* core -> bin		735942						
ANR	736011	Symbol	strdup		735942						
ANR	736012	Symbol	user		735942						
ANR	736013	Symbol	core -> bin		735942						
ANR	736014	Symbol	* * core		735942						
ANR	736015	Function	cb_cfgsanbox	1091:0:30815:31064							
ANR	736016	FunctionDef	"cb_cfgsanbox (void * user , void * data)"		736015	0					
ANR	736017	CompoundStatement		1091:49:30864:31064	736015	0					
ANR	736018	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1092:1:30867:30906	736015	0	True				
ANR	736019	IdentifierDecl	* node = ( RConfigNode * ) data		736015	0					
ANR	736020	IdentifierDeclType	RConfigNode *		736015	0					
ANR	736021	Identifier	node		736015	1					
ANR	736022	AssignmentExpression	* node = ( RConfigNode * ) data		736015	2		=			
ANR	736023	Identifier	node		736015	0					
ANR	736024	CastExpression	( RConfigNode * ) data		736015	1					
ANR	736025	CastTarget	RConfigNode *		736015	0					
ANR	736026	Identifier	data		736015	1					
ANR	736027	IdentifierDeclStatement	int ret = r_sandbox_enable ( node -> i_value ) ;	1093:1:30909:30951	736015	1	True				
ANR	736028	IdentifierDecl	ret = r_sandbox_enable ( node -> i_value )		736015	0					
ANR	736029	IdentifierDeclType	int		736015	0					
ANR	736030	Identifier	ret		736015	1					
ANR	736031	AssignmentExpression	ret = r_sandbox_enable ( node -> i_value )		736015	2		=			
ANR	736032	Identifier	ret		736015	0					
ANR	736033	CallExpression	r_sandbox_enable ( node -> i_value )		736015	1					
ANR	736034	Callee	r_sandbox_enable		736015	0					
ANR	736035	Identifier	r_sandbox_enable		736015	0					
ANR	736036	ArgumentList	node -> i_value		736015	1					
ANR	736037	Argument	node -> i_value		736015	0					
ANR	736038	PtrMemberAccess	node -> i_value		736015	0					
ANR	736039	Identifier	node		736015	0					
ANR	736040	Identifier	i_value		736015	1					
ANR	736041	IfStatement	if ( node -> i_value != ret )		736015	2					
ANR	736042	Condition	node -> i_value != ret	1094:5:30958:30977	736015	0	True				
ANR	736043	EqualityExpression	node -> i_value != ret		736015	0		!=			
ANR	736044	PtrMemberAccess	node -> i_value		736015	0					
ANR	736045	Identifier	node		736015	0					
ANR	736046	Identifier	i_value		736015	1					
ANR	736047	Identifier	ret		736015	1					
ANR	736048	CompoundStatement		4:27:115:115	736015	1					
ANR	736049	ExpressionStatement	"eprintf ( ""Cannot disable sandbox\\n"" )"	1095:2:30984:31020	736015	0	True				
ANR	736050	CallExpression	"eprintf ( ""Cannot disable sandbox\\n"" )"		736015	0					
ANR	736051	Callee	eprintf		736015	0					
ANR	736052	Identifier	eprintf		736015	0					
ANR	736053	ArgumentList	"""Cannot disable sandbox\\n"""		736015	1					
ANR	736054	Argument	"""Cannot disable sandbox\\n"""		736015	0					
ANR	736055	PrimaryExpression	"""Cannot disable sandbox\\n"""		736015	0					
ANR	736056	ReturnStatement	return ( ! node -> i_value && ret ) ? 0 : 1 ;	1097:1:31026:31062	736015	3	True				
ANR	736057	ConditionalExpression	( ! node -> i_value && ret ) ? 0 : 1		736015	0					
ANR	736058	Condition	! node -> i_value && ret		736015	0					
ANR	736059	AndExpression	! node -> i_value && ret		736015	0		&&			
ANR	736060	UnaryOperationExpression	! node -> i_value		736015	0					
ANR	736061	UnaryOperator	!		736015	0					
ANR	736062	PtrMemberAccess	node -> i_value		736015	1					
ANR	736063	Identifier	node		736015	0					
ANR	736064	Identifier	i_value		736015	1					
ANR	736065	Identifier	ret		736015	1					
ANR	736066	PrimaryExpression	0		736015	1					
ANR	736067	PrimaryExpression	1		736015	2					
ANR	736068	ReturnType	static bool		736015	1					
ANR	736069	Identifier	cb_cfgsanbox		736015	2					
ANR	736070	ParameterList	"void * user , void * data"		736015	3					
ANR	736071	Parameter	void * user	1091:25:30840:30849	736015	0	True				
ANR	736072	ParameterType	void *		736015	0					
ANR	736073	Identifier	user		736015	1					
ANR	736074	Parameter	void * data	1091:37:30852:30861	736015	1	True				
ANR	736075	ParameterType	void *		736015	0					
ANR	736076	Identifier	data		736015	1					
ANR	736077	CFGEntryNode	ENTRY		736015		True				
ANR	736078	CFGExitNode	EXIT		736015		True				
ANR	736079	Symbol	ret		736015						
ANR	736080	Symbol	node		736015						
ANR	736081	Symbol	data		736015						
ANR	736082	Symbol	r_sandbox_enable		736015						
ANR	736083	Symbol	* node		736015						
ANR	736084	Symbol	user		736015						
ANR	736085	Symbol	node -> i_value		736015						
ANR	736086	Function	cb_str_escbslash	1100:0:31067:31250							
ANR	736087	FunctionDef	"cb_str_escbslash (void * user , void * data)"		736086	0					
ANR	736088	CompoundStatement		1100:53:31120:31250	736086	0					
ANR	736089	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1101:1:31123:31150	736086	0	True				
ANR	736090	IdentifierDecl	* core = ( RCore * ) user		736086	0					
ANR	736091	IdentifierDeclType	RCore *		736086	0					
ANR	736092	Identifier	core		736086	1					
ANR	736093	AssignmentExpression	* core = ( RCore * ) user		736086	2		=			
ANR	736094	Identifier	core		736086	0					
ANR	736095	CastExpression	( RCore * ) user		736086	1					
ANR	736096	CastTarget	RCore *		736086	0					
ANR	736097	Identifier	user		736086	1					
ANR	736098	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1102:1:31153:31192	736086	1	True				
ANR	736099	IdentifierDecl	* node = ( RConfigNode * ) data		736086	0					
ANR	736100	IdentifierDeclType	RConfigNode *		736086	0					
ANR	736101	Identifier	node		736086	1					
ANR	736102	AssignmentExpression	* node = ( RConfigNode * ) data		736086	2		=			
ANR	736103	Identifier	node		736086	0					
ANR	736104	CastExpression	( RConfigNode * ) data		736086	1					
ANR	736105	CastTarget	RConfigNode *		736086	0					
ANR	736106	Identifier	data		736086	1					
ANR	736107	ExpressionStatement	core -> print -> esc_bslash = node -> i_value	1103:1:31195:31234	736086	2	True				
ANR	736108	AssignmentExpression	core -> print -> esc_bslash = node -> i_value		736086	0		=			
ANR	736109	PtrMemberAccess	core -> print -> esc_bslash		736086	0					
ANR	736110	PtrMemberAccess	core -> print		736086	0					
ANR	736111	Identifier	core		736086	0					
ANR	736112	Identifier	print		736086	1					
ANR	736113	Identifier	esc_bslash		736086	1					
ANR	736114	PtrMemberAccess	node -> i_value		736086	1					
ANR	736115	Identifier	node		736086	0					
ANR	736116	Identifier	i_value		736086	1					
ANR	736117	ReturnStatement	return true ;	1104:1:31237:31248	736086	3	True				
ANR	736118	Identifier	true		736086	0					
ANR	736119	ReturnType	static bool		736086	1					
ANR	736120	Identifier	cb_str_escbslash		736086	2					
ANR	736121	ParameterList	"void * user , void * data"		736086	3					
ANR	736122	Parameter	void * user	1100:29:31096:31105	736086	0	True				
ANR	736123	ParameterType	void *		736086	0					
ANR	736124	Identifier	user		736086	1					
ANR	736125	Parameter	void * data	1100:41:31108:31117	736086	1	True				
ANR	736126	ParameterType	void *		736086	0					
ANR	736127	Identifier	data		736086	1					
ANR	736128	CFGEntryNode	ENTRY		736086		True				
ANR	736129	CFGExitNode	EXIT		736086		True				
ANR	736130	Symbol	core		736086						
ANR	736131	Symbol	node		736086						
ANR	736132	Symbol	core -> print -> esc_bslash		736086						
ANR	736133	Symbol	* core -> print		736086						
ANR	736134	Symbol	data		736086						
ANR	736135	Symbol	* core		736086						
ANR	736136	Symbol	true		736086						
ANR	736137	Symbol	* node		736086						
ANR	736138	Symbol	core -> print		736086						
ANR	736139	Symbol	user		736086						
ANR	736140	Symbol	* * core		736086						
ANR	736141	Symbol	node -> i_value		736086						
ANR	736142	Function	cb_completion_maxtab	1107:0:31253:31485							
ANR	736143	FunctionDef	"cb_completion_maxtab (void * user , void * data)"		736142	0					
ANR	736144	CompoundStatement		1107:58:31311:31485	736142	0					
ANR	736145	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1108:8:31321:31348	736142	0	True				
ANR	736146	IdentifierDecl	* core = ( RCore * ) user		736142	0					
ANR	736147	IdentifierDeclType	RCore *		736142	0					
ANR	736148	Identifier	core		736142	1					
ANR	736149	AssignmentExpression	* core = ( RCore * ) user		736142	2		=			
ANR	736150	Identifier	core		736142	0					
ANR	736151	CastExpression	( RCore * ) user		736142	1					
ANR	736152	CastTarget	RCore *		736142	0					
ANR	736153	Identifier	user		736142	1					
ANR	736154	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1109:8:31358:31397	736142	1	True				
ANR	736155	IdentifierDecl	* node = ( RConfigNode * ) data		736142	0					
ANR	736156	IdentifierDeclType	RConfigNode *		736142	0					
ANR	736157	Identifier	node		736142	1					
ANR	736158	AssignmentExpression	* node = ( RConfigNode * ) data		736142	2		=			
ANR	736159	Identifier	node		736142	0					
ANR	736160	CastExpression	( RConfigNode * ) data		736142	1					
ANR	736161	CastTarget	RConfigNode *		736142	0					
ANR	736162	Identifier	data		736142	1					
ANR	736163	ExpressionStatement	core -> cons -> line -> completion . args_limit = node -> i_value	1110:8:31407:31462	736142	2	True				
ANR	736164	AssignmentExpression	core -> cons -> line -> completion . args_limit = node -> i_value		736142	0		=			
ANR	736165	MemberAccess	core -> cons -> line -> completion . args_limit		736142	0					
ANR	736166	PtrMemberAccess	core -> cons -> line -> completion		736142	0					
ANR	736167	PtrMemberAccess	core -> cons -> line		736142	0					
ANR	736168	PtrMemberAccess	core -> cons		736142	0					
ANR	736169	Identifier	core		736142	0					
ANR	736170	Identifier	cons		736142	1					
ANR	736171	Identifier	line		736142	1					
ANR	736172	Identifier	completion		736142	1					
ANR	736173	Identifier	args_limit		736142	1					
ANR	736174	PtrMemberAccess	node -> i_value		736142	1					
ANR	736175	Identifier	node		736142	0					
ANR	736176	Identifier	i_value		736142	1					
ANR	736177	ReturnStatement	return true ;	1111:8:31472:31483	736142	3	True				
ANR	736178	Identifier	true		736142	0					
ANR	736179	ReturnType	static bool		736142	1					
ANR	736180	Identifier	cb_completion_maxtab		736142	2					
ANR	736181	ParameterList	"void * user , void * data"		736142	3					
ANR	736182	Parameter	void * user	1107:34:31287:31296	736142	0	True				
ANR	736183	ParameterType	void *		736142	0					
ANR	736184	Identifier	user		736142	1					
ANR	736185	Parameter	void * data	1107:46:31299:31308	736142	1	True				
ANR	736186	ParameterType	void *		736142	0					
ANR	736187	Identifier	data		736142	1					
ANR	736188	CFGEntryNode	ENTRY		736142		True				
ANR	736189	CFGExitNode	EXIT		736142		True				
ANR	736190	Symbol	data		736142						
ANR	736191	Symbol	* core -> cons		736142						
ANR	736192	Symbol	* * core -> cons		736142						
ANR	736193	Symbol	* core		736142						
ANR	736194	Symbol	core -> cons -> line -> completion		736142						
ANR	736195	Symbol	node -> i_value		736142						
ANR	736196	Symbol	core		736142						
ANR	736197	Symbol	node		736142						
ANR	736198	Symbol	* * * core		736142						
ANR	736199	Symbol	core -> cons		736142						
ANR	736200	Symbol	* core -> cons -> line		736142						
ANR	736201	Symbol	true		736142						
ANR	736202	Symbol	* node		736142						
ANR	736203	Symbol	user		736142						
ANR	736204	Symbol	core -> cons -> line		736142						
ANR	736205	Symbol	* * core		736142						
ANR	736206	Symbol	core -> cons -> line -> completion . args_limit		736142						
ANR	736207	Function	cb_cfg_fortunes	1114:0:31488:31797							
ANR	736208	FunctionDef	"cb_cfg_fortunes (void * user , void * data)"		736207	0					
ANR	736209	CompoundStatement		1114:52:31540:31797	736207	0					
ANR	736210	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1115:1:31543:31570	736207	0	True				
ANR	736211	IdentifierDecl	* core = ( RCore * ) user		736207	0					
ANR	736212	IdentifierDeclType	RCore *		736207	0					
ANR	736213	Identifier	core		736207	1					
ANR	736214	AssignmentExpression	* core = ( RCore * ) user		736207	2		=			
ANR	736215	Identifier	core		736207	0					
ANR	736216	CastExpression	( RCore * ) user		736207	1					
ANR	736217	CastTarget	RCore *		736207	0					
ANR	736218	Identifier	user		736207	1					
ANR	736219	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1116:1:31573:31612	736207	1	True				
ANR	736220	IdentifierDecl	* node = ( RConfigNode * ) data		736207	0					
ANR	736221	IdentifierDeclType	RConfigNode *		736207	0					
ANR	736222	Identifier	node		736207	1					
ANR	736223	AssignmentExpression	* node = ( RConfigNode * ) data		736207	2		=			
ANR	736224	Identifier	node		736207	0					
ANR	736225	CastExpression	( RConfigNode * ) data		736207	1					
ANR	736226	CastTarget	RConfigNode *		736207	0					
ANR	736227	Identifier	data		736207	1					
ANR	736228	IfStatement	if ( node -> value [ 0 ] == '?' )		736207	2					
ANR	736229	Condition	node -> value [ 0 ] == '?'	1118:5:31709:31729	736207	0	True				
ANR	736230	EqualityExpression	node -> value [ 0 ] == '?'		736207	0		==			
ANR	736231	ArrayIndexing	node -> value [ 0 ]		736207	0					
ANR	736232	PtrMemberAccess	node -> value		736207	0					
ANR	736233	Identifier	node		736207	0					
ANR	736234	Identifier	value		736207	1					
ANR	736235	PrimaryExpression	0		736207	1					
ANR	736236	PrimaryExpression	'?'		736207	1					
ANR	736237	CompoundStatement		5:28:191:191	736207	1					
ANR	736238	ExpressionStatement	r_core_fortune_list ( core )	1119:2:31736:31762	736207	0	True				
ANR	736239	CallExpression	r_core_fortune_list ( core )		736207	0					
ANR	736240	Callee	r_core_fortune_list		736207	0					
ANR	736241	Identifier	r_core_fortune_list		736207	0					
ANR	736242	ArgumentList	core		736207	1					
ANR	736243	Argument	core		736207	0					
ANR	736244	Identifier	core		736207	0					
ANR	736245	ReturnStatement	return false ;	1120:2:31766:31778	736207	1	True				
ANR	736246	Identifier	false		736207	0					
ANR	736247	ReturnStatement	return true ;	1122:1:31784:31795	736207	3	True				
ANR	736248	Identifier	true		736207	0					
ANR	736249	ReturnType	static bool		736207	1					
ANR	736250	Identifier	cb_cfg_fortunes		736207	2					
ANR	736251	ParameterList	"void * user , void * data"		736207	3					
ANR	736252	Parameter	void * user	1114:28:31516:31525	736207	0	True				
ANR	736253	ParameterType	void *		736207	0					
ANR	736254	Identifier	user		736207	1					
ANR	736255	Parameter	void * data	1114:40:31528:31537	736207	1	True				
ANR	736256	ParameterType	void *		736207	0					
ANR	736257	Identifier	data		736207	1					
ANR	736258	CFGEntryNode	ENTRY		736207		True				
ANR	736259	CFGExitNode	EXIT		736207		True				
ANR	736260	Symbol	core		736207						
ANR	736261	Symbol	node		736207						
ANR	736262	Symbol	* node -> value		736207						
ANR	736263	Symbol	data		736207						
ANR	736264	Symbol	* * node		736207						
ANR	736265	Symbol	false		736207						
ANR	736266	Symbol	true		736207						
ANR	736267	Symbol	* node		736207						
ANR	736268	Symbol	user		736207						
ANR	736269	Symbol	node -> value		736207						
ANR	736270	Function	cb_cfg_fortunes_type	1125:0:31800:31996							
ANR	736271	FunctionDef	"cb_cfg_fortunes_type (void * user , void * data)"		736270	0					
ANR	736272	CompoundStatement		1125:57:31857:31996	736270	0					
ANR	736273	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1126:1:31860:31899	736270	0	True				
ANR	736274	IdentifierDecl	* node = ( RConfigNode * ) data		736270	0					
ANR	736275	IdentifierDeclType	RConfigNode *		736270	0					
ANR	736276	Identifier	node		736270	1					
ANR	736277	AssignmentExpression	* node = ( RConfigNode * ) data		736270	2		=			
ANR	736278	Identifier	node		736270	0					
ANR	736279	CastExpression	( RConfigNode * ) data		736270	1					
ANR	736280	CastTarget	RConfigNode *		736270	0					
ANR	736281	Identifier	data		736270	1					
ANR	736282	IfStatement	if ( node -> value [ 0 ] == '?' )		736270	1					
ANR	736283	Condition	node -> value [ 0 ] == '?'	1127:5:31906:31926	736270	0	True				
ANR	736284	EqualityExpression	node -> value [ 0 ] == '?'		736270	0		==			
ANR	736285	ArrayIndexing	node -> value [ 0 ]		736270	0					
ANR	736286	PtrMemberAccess	node -> value		736270	0					
ANR	736287	Identifier	node		736270	0					
ANR	736288	Identifier	value		736270	1					
ANR	736289	PrimaryExpression	0		736270	1					
ANR	736290	PrimaryExpression	'?'		736270	1					
ANR	736291	CompoundStatement		3:28:71:71	736270	1					
ANR	736292	ExpressionStatement	r_core_fortune_list_types ( )	1128:2:31933:31961	736270	0	True				
ANR	736293	CallExpression	r_core_fortune_list_types ( )		736270	0					
ANR	736294	Callee	r_core_fortune_list_types		736270	0					
ANR	736295	Identifier	r_core_fortune_list_types		736270	0					
ANR	736296	ArgumentList			736270	1					
ANR	736297	ReturnStatement	return false ;	1129:2:31965:31977	736270	1	True				
ANR	736298	Identifier	false		736270	0					
ANR	736299	ReturnStatement	return true ;	1131:1:31983:31994	736270	2	True				
ANR	736300	Identifier	true		736270	0					
ANR	736301	ReturnType	static bool		736270	1					
ANR	736302	Identifier	cb_cfg_fortunes_type		736270	2					
ANR	736303	ParameterList	"void * user , void * data"		736270	3					
ANR	736304	Parameter	void * user	1125:33:31833:31842	736270	0	True				
ANR	736305	ParameterType	void *		736270	0					
ANR	736306	Identifier	user		736270	1					
ANR	736307	Parameter	void * data	1125:45:31845:31854	736270	1	True				
ANR	736308	ParameterType	void *		736270	0					
ANR	736309	Identifier	data		736270	1					
ANR	736310	CFGEntryNode	ENTRY		736270		True				
ANR	736311	CFGExitNode	EXIT		736270		True				
ANR	736312	Symbol	node		736270						
ANR	736313	Symbol	* node -> value		736270						
ANR	736314	Symbol	data		736270						
ANR	736315	Symbol	* * node		736270						
ANR	736316	Symbol	false		736270						
ANR	736317	Symbol	true		736270						
ANR	736318	Symbol	* node		736270						
ANR	736319	Symbol	user		736270						
ANR	736320	Symbol	node -> value		736270						
ANR	736321	Function	check_decompiler	1134:0:31999:32164							
ANR	736322	FunctionDef	check_decompiler (const char * name)		736321	0					
ANR	736323	CompoundStatement		1134:47:32046:32164	736321	0					
ANR	736324	IdentifierDeclStatement	char * path = r_file_path ( name ) ;	1135:1:32049:32080	736321	0	True				
ANR	736325	IdentifierDecl	* path = r_file_path ( name )		736321	0					
ANR	736326	IdentifierDeclType	char *		736321	0					
ANR	736327	Identifier	path		736321	1					
ANR	736328	AssignmentExpression	* path = r_file_path ( name )		736321	2		=			
ANR	736329	Identifier	path		736321	0					
ANR	736330	CallExpression	r_file_path ( name )		736321	1					
ANR	736331	Callee	r_file_path		736321	0					
ANR	736332	Identifier	r_file_path		736321	0					
ANR	736333	ArgumentList	name		736321	1					
ANR	736334	Argument	name		736321	0					
ANR	736335	Identifier	name		736321	0					
ANR	736336	IfStatement	if ( path && path [ 0 ] == '/' )		736321	1					
ANR	736337	Condition	path && path [ 0 ] == '/'	1136:5:32087:32108	736321	0	True				
ANR	736338	AndExpression	path && path [ 0 ] == '/'		736321	0		&&			
ANR	736339	Identifier	path		736321	0					
ANR	736340	EqualityExpression	path [ 0 ] == '/'		736321	1		==			
ANR	736341	ArrayIndexing	path [ 0 ]		736321	0					
ANR	736342	Identifier	path		736321	0					
ANR	736343	PrimaryExpression	0		736321	1					
ANR	736344	PrimaryExpression	'/'		736321	1					
ANR	736345	CompoundStatement		3:29:64:64	736321	1					
ANR	736346	ExpressionStatement	"r_cons_printf ( ""!*%s\\n"" , name )"	1137:2:32115:32145	736321	0	True				
ANR	736347	CallExpression	"r_cons_printf ( ""!*%s\\n"" , name )"		736321	0					
ANR	736348	Callee	r_cons_printf		736321	0					
ANR	736349	Identifier	r_cons_printf		736321	0					
ANR	736350	ArgumentList	"""!*%s\\n"""		736321	1					
ANR	736351	Argument	"""!*%s\\n"""		736321	0					
ANR	736352	PrimaryExpression	"""!*%s\\n"""		736321	0					
ANR	736353	Argument	name		736321	1					
ANR	736354	Identifier	name		736321	0					
ANR	736355	ExpressionStatement	free ( path )	1139:1:32151:32162	736321	2	True				
ANR	736356	CallExpression	free ( path )		736321	0					
ANR	736357	Callee	free		736321	0					
ANR	736358	Identifier	free		736321	0					
ANR	736359	ArgumentList	path		736321	1					
ANR	736360	Argument	path		736321	0					
ANR	736361	Identifier	path		736321	0					
ANR	736362	ReturnType	static void		736321	1					
ANR	736363	Identifier	check_decompiler		736321	2					
ANR	736364	ParameterList	const char * name		736321	3					
ANR	736365	Parameter	const char * name	1134:29:32028:32043	736321	0	True				
ANR	736366	ParameterType	const char *		736321	0					
ANR	736367	Identifier	name		736321	1					
ANR	736368	CFGEntryNode	ENTRY		736321		True				
ANR	736369	CFGExitNode	EXIT		736321		True				
ANR	736370	Symbol	path		736321						
ANR	736371	Symbol	name		736321						
ANR	736372	Symbol	* path		736321						
ANR	736373	Symbol	r_file_path		736321						
ANR	736374	Function	cb_cmdpdc	1142:0:32167:32804							
ANR	736375	FunctionDef	"cb_cmdpdc (void * user , void * data)"		736374	0					
ANR	736376	CompoundStatement		1142:46:32213:32804	736374	0					
ANR	736377	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1143:1:32216:32244	736374	0	True				
ANR	736378	IdentifierDecl	* core = ( RCore * ) user		736374	0					
ANR	736379	IdentifierDeclType	RCore *		736374	0					
ANR	736380	Identifier	core		736374	1					
ANR	736381	AssignmentExpression	* core = ( RCore * ) user		736374	2		=			
ANR	736382	Identifier	core		736374	0					
ANR	736383	CastExpression	( RCore * ) user		736374	1					
ANR	736384	CastTarget	RCore *		736374	0					
ANR	736385	Identifier	user		736374	1					
ANR	736386	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1144:1:32247:32286	736374	1	True				
ANR	736387	IdentifierDecl	* node = ( RConfigNode * ) data		736374	0					
ANR	736388	IdentifierDeclType	RConfigNode *		736374	0					
ANR	736389	Identifier	node		736374	1					
ANR	736390	AssignmentExpression	* node = ( RConfigNode * ) data		736374	2		=			
ANR	736391	Identifier	node		736374	0					
ANR	736392	CastExpression	( RConfigNode * ) data		736374	1					
ANR	736393	CastTarget	RConfigNode *		736374	0					
ANR	736394	Identifier	data		736374	1					
ANR	736395	IfStatement	if ( node -> value [ 0 ] == '?' )		736374	2					
ANR	736396	Condition	node -> value [ 0 ] == '?'	1145:5:32293:32313	736374	0	True				
ANR	736397	EqualityExpression	node -> value [ 0 ] == '?'		736374	0		==			
ANR	736398	ArrayIndexing	node -> value [ 0 ]		736374	0					
ANR	736399	PtrMemberAccess	node -> value		736374	0					
ANR	736400	Identifier	node		736374	0					
ANR	736401	Identifier	value		736374	1					
ANR	736402	PrimaryExpression	0		736374	1					
ANR	736403	PrimaryExpression	'?'		736374	1					
ANR	736404	CompoundStatement		18:2:442:508	736374	1					
ANR	736405	ExpressionStatement	"r_cons_printf ( ""pdc\\n"" )"	1146:2:32320:32343	736374	0	True				
ANR	736406	CallExpression	"r_cons_printf ( ""pdc\\n"" )"		736374	0					
ANR	736407	Callee	r_cons_printf		736374	0					
ANR	736408	Identifier	r_cons_printf		736374	0					
ANR	736409	ArgumentList	"""pdc\\n"""		736374	1					
ANR	736410	Argument	"""pdc\\n"""		736374	0					
ANR	736411	PrimaryExpression	"""pdc\\n"""		736374	0					
ANR	736412	ExpressionStatement	"check_decompiler ( ""r2retdec"" )"	1148:2:32362:32391	736374	1	True				
ANR	736413	CallExpression	"check_decompiler ( ""r2retdec"" )"		736374	0					
ANR	736414	Callee	check_decompiler		736374	0					
ANR	736415	Identifier	check_decompiler		736374	0					
ANR	736416	ArgumentList	"""r2retdec"""		736374	1					
ANR	736417	Argument	"""r2retdec"""		736374	0					
ANR	736418	PrimaryExpression	"""r2retdec"""		736374	0					
ANR	736419	IdentifierDeclStatement	RListIter * iter ;	1149:2:32395:32410	736374	2	True				
ANR	736420	IdentifierDecl	* iter		736374	0					
ANR	736421	IdentifierDeclType	RListIter *		736374	0					
ANR	736422	Identifier	iter		736374	1					
ANR	736423	IdentifierDeclStatement	RCorePlugin * cp ;	1150:2:32414:32429	736374	3	True				
ANR	736424	IdentifierDecl	* cp		736374	0					
ANR	736425	IdentifierDeclType	RCorePlugin *		736374	0					
ANR	736426	Identifier	cp		736374	1					
ANR	736427	Statement	r_list_foreach	1151:2:32433:32446	736374	4	True				
ANR	736428	Statement	(	1151:17:32448:32448	736374	5	True				
ANR	736429	Statement	core	1151:18:32449:32452	736374	6	True				
ANR	736430	Statement	->	1151:22:32453:32454	736374	7	True				
ANR	736431	Statement	rcmd	1151:24:32455:32458	736374	8	True				
ANR	736432	Statement	->	1151:28:32459:32460	736374	9	True				
ANR	736433	Statement	plist	1151:30:32461:32465	736374	10	True				
ANR	736434	Statement	","	1151:35:32466:32466	736374	11	True				
ANR	736435	Statement	iter	1151:37:32468:32471	736374	12	True				
ANR	736436	Statement	","	1151:41:32472:32472	736374	13	True				
ANR	736437	Statement	cp	1151:43:32474:32475	736374	14	True				
ANR	736438	Statement	)	1151:45:32476:32476	736374	15	True				
ANR	736439	CompoundStatement		10:47:264:264	736374	16					
ANR	736440	IfStatement	"if ( ! strcmp ( cp -> name , ""r2ghidra"" ) )"		736374	0					
ANR	736441	Condition	"! strcmp ( cp -> name , ""r2ghidra"" )"	1152:7:32487:32516	736374	0	True				
ANR	736442	UnaryOperationExpression	"! strcmp ( cp -> name , ""r2ghidra"" )"		736374	0					
ANR	736443	UnaryOperator	!		736374	0					
ANR	736444	CallExpression	"strcmp ( cp -> name , ""r2ghidra"" )"		736374	1					
ANR	736445	Callee	strcmp		736374	0					
ANR	736446	Identifier	strcmp		736374	0					
ANR	736447	ArgumentList	cp -> name		736374	1					
ANR	736448	Argument	cp -> name		736374	0					
ANR	736449	PtrMemberAccess	cp -> name		736374	0					
ANR	736450	Identifier	cp		736374	0					
ANR	736451	Identifier	name		736374	1					
ANR	736452	Argument	"""r2ghidra"""		736374	1					
ANR	736453	PrimaryExpression	"""r2ghidra"""		736374	0					
ANR	736454	CompoundStatement		11:39:305:305	736374	1					
ANR	736455	ExpressionStatement	"r_cons_printf ( ""pdg\\n"" )"	1153:4:32525:32548	736374	0	True				
ANR	736456	CallExpression	"r_cons_printf ( ""pdg\\n"" )"		736374	0					
ANR	736457	Callee	r_cons_printf		736374	0					
ANR	736458	Identifier	r_cons_printf		736374	0					
ANR	736459	ArgumentList	"""pdg\\n"""		736374	1					
ANR	736460	Argument	"""pdg\\n"""		736374	0					
ANR	736461	PrimaryExpression	"""pdg\\n"""		736374	0					
ANR	736462	ExpressionStatement	"check_decompiler ( ""r2ghidra"" )"	1156:2:32561:32590	736374	17	True				
ANR	736463	CallExpression	"check_decompiler ( ""r2ghidra"" )"		736374	0					
ANR	736464	Callee	check_decompiler		736374	0					
ANR	736465	Identifier	check_decompiler		736374	0					
ANR	736466	ArgumentList	"""r2ghidra"""		736374	1					
ANR	736467	Argument	"""r2ghidra"""		736374	0					
ANR	736468	PrimaryExpression	"""r2ghidra"""		736374	0					
ANR	736469	ExpressionStatement	"check_decompiler ( ""r2jadx"" )"	1157:2:32594:32621	736374	18	True				
ANR	736470	CallExpression	"check_decompiler ( ""r2jadx"" )"		736374	0					
ANR	736471	Callee	check_decompiler		736374	0					
ANR	736472	Identifier	check_decompiler		736374	0					
ANR	736473	ArgumentList	"""r2jadx"""		736374	1					
ANR	736474	Argument	"""r2jadx"""		736374	0					
ANR	736475	PrimaryExpression	"""r2jadx"""		736374	0					
ANR	736476	ExpressionStatement	"check_decompiler ( ""r2snow"" )"	1158:2:32625:32652	736374	19	True				
ANR	736477	CallExpression	"check_decompiler ( ""r2snow"" )"		736374	0					
ANR	736478	Callee	check_decompiler		736374	0					
ANR	736479	Identifier	check_decompiler		736374	0					
ANR	736480	ArgumentList	"""r2snow"""		736374	1					
ANR	736481	Argument	"""r2snow"""		736374	0					
ANR	736482	PrimaryExpression	"""r2snow"""		736374	0					
ANR	736483	IdentifierDeclStatement	"RConfigNode * r2dec = r_config_node_get ( core -> config , ""r2dec.asm"" ) ;"	1159:2:32656:32722	736374	20	True				
ANR	736484	IdentifierDecl	"* r2dec = r_config_node_get ( core -> config , ""r2dec.asm"" )"		736374	0					
ANR	736485	IdentifierDeclType	RConfigNode *		736374	0					
ANR	736486	Identifier	r2dec		736374	1					
ANR	736487	AssignmentExpression	"* r2dec = r_config_node_get ( core -> config , ""r2dec.asm"" )"		736374	2		=			
ANR	736488	Identifier	r2dec		736374	0					
ANR	736489	CallExpression	"r_config_node_get ( core -> config , ""r2dec.asm"" )"		736374	1					
ANR	736490	Callee	r_config_node_get		736374	0					
ANR	736491	Identifier	r_config_node_get		736374	0					
ANR	736492	ArgumentList	core -> config		736374	1					
ANR	736493	Argument	core -> config		736374	0					
ANR	736494	PtrMemberAccess	core -> config		736374	0					
ANR	736495	Identifier	core		736374	0					
ANR	736496	Identifier	config		736374	1					
ANR	736497	Argument	"""r2dec.asm"""		736374	1					
ANR	736498	PrimaryExpression	"""r2dec.asm"""		736374	0					
ANR	736499	IfStatement	if ( r2dec )		736374	21					
ANR	736500	Condition	r2dec	1160:6:32730:32734	736374	0	True				
ANR	736501	Identifier	r2dec		736374	0					
ANR	736502	CompoundStatement		19:13:523:523	736374	1					
ANR	736503	ExpressionStatement	"r_cons_printf ( ""pdd\\n"" )"	1161:3:32742:32765	736374	0	True				
ANR	736504	CallExpression	"r_cons_printf ( ""pdd\\n"" )"		736374	0					
ANR	736505	Callee	r_cons_printf		736374	0					
ANR	736506	Identifier	r_cons_printf		736374	0					
ANR	736507	ArgumentList	"""pdd\\n"""		736374	1					
ANR	736508	Argument	"""pdd\\n"""		736374	0					
ANR	736509	PrimaryExpression	"""pdd\\n"""		736374	0					
ANR	736510	ReturnStatement	return false ;	1163:2:32773:32785	736374	22	True				
ANR	736511	Identifier	false		736374	0					
ANR	736512	ReturnStatement	return true ;	1165:1:32791:32802	736374	3	True				
ANR	736513	Identifier	true		736374	0					
ANR	736514	ReturnType	static bool		736374	1					
ANR	736515	Identifier	cb_cmdpdc		736374	2					
ANR	736516	ParameterList	"void * user , void * data"		736374	3					
ANR	736517	Parameter	void * user	1142:22:32189:32198	736374	0	True				
ANR	736518	ParameterType	void *		736374	0					
ANR	736519	Identifier	user		736374	1					
ANR	736520	Parameter	void * data	1142:34:32201:32210	736374	1	True				
ANR	736521	ParameterType	void *		736374	0					
ANR	736522	Identifier	data		736374	1					
ANR	736523	CFGEntryNode	ENTRY		736374		True				
ANR	736524	CFGExitNode	EXIT		736374		True				
ANR	736525	Symbol	strcmp		736374						
ANR	736526	Symbol	core -> config		736374						
ANR	736527	Symbol	* node -> value		736374						
ANR	736528	Symbol	data		736374						
ANR	736529	Symbol	* core		736374						
ANR	736530	Symbol	false		736374						
ANR	736531	Symbol	iter		736374						
ANR	736532	Symbol	cp		736374						
ANR	736533	Symbol	node -> value		736374						
ANR	736534	Symbol	* cp		736374						
ANR	736535	Symbol	core		736374						
ANR	736536	Symbol	node		736374						
ANR	736537	Symbol	* * node		736374						
ANR	736538	Symbol	true		736374						
ANR	736539	Symbol	* node		736374						
ANR	736540	Symbol	r2dec		736374						
ANR	736541	Symbol	user		736374						
ANR	736542	Symbol	r_config_node_get		736374						
ANR	736543	Symbol	cp -> name		736374						
ANR	736544	Function	cb_cmdlog	1168:0:32807:33005							
ANR	736545	FunctionDef	"cb_cmdlog (void * user , void * data)"		736544	0					
ANR	736546	CompoundStatement		1168:46:32853:33005	736544	0					
ANR	736547	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1169:1:32856:32884	736544	0	True				
ANR	736548	IdentifierDecl	* core = ( RCore * ) user		736544	0					
ANR	736549	IdentifierDeclType	RCore *		736544	0					
ANR	736550	Identifier	core		736544	1					
ANR	736551	AssignmentExpression	* core = ( RCore * ) user		736544	2		=			
ANR	736552	Identifier	core		736544	0					
ANR	736553	CastExpression	( RCore * ) user		736544	1					
ANR	736554	CastTarget	RCore *		736544	0					
ANR	736555	Identifier	user		736544	1					
ANR	736556	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1170:1:32887:32927	736544	1	True				
ANR	736557	IdentifierDecl	* node = ( RConfigNode * ) data		736544	0					
ANR	736558	IdentifierDeclType	RConfigNode *		736544	0					
ANR	736559	Identifier	node		736544	1					
ANR	736560	AssignmentExpression	* node = ( RConfigNode * ) data		736544	2		=			
ANR	736561	Identifier	node		736544	0					
ANR	736562	CastExpression	( RConfigNode * ) data		736544	1					
ANR	736563	CastTarget	RConfigNode *		736544	0					
ANR	736564	Identifier	data		736544	1					
ANR	736565	ExpressionStatement	R_FREE ( core -> cmdlog )	1171:1:32930:32951	736544	2	True				
ANR	736566	CallExpression	R_FREE ( core -> cmdlog )		736544	0					
ANR	736567	Callee	R_FREE		736544	0					
ANR	736568	Identifier	R_FREE		736544	0					
ANR	736569	ArgumentList	core -> cmdlog		736544	1					
ANR	736570	Argument	core -> cmdlog		736544	0					
ANR	736571	PtrMemberAccess	core -> cmdlog		736544	0					
ANR	736572	Identifier	core		736544	0					
ANR	736573	Identifier	cmdlog		736544	1					
ANR	736574	ExpressionStatement	core -> cmdlog = strdup ( node -> value )	1172:1:32954:32989	736544	3	True				
ANR	736575	AssignmentExpression	core -> cmdlog = strdup ( node -> value )		736544	0		=			
ANR	736576	PtrMemberAccess	core -> cmdlog		736544	0					
ANR	736577	Identifier	core		736544	0					
ANR	736578	Identifier	cmdlog		736544	1					
ANR	736579	CallExpression	strdup ( node -> value )		736544	1					
ANR	736580	Callee	strdup		736544	0					
ANR	736581	Identifier	strdup		736544	0					
ANR	736582	ArgumentList	node -> value		736544	1					
ANR	736583	Argument	node -> value		736544	0					
ANR	736584	PtrMemberAccess	node -> value		736544	0					
ANR	736585	Identifier	node		736544	0					
ANR	736586	Identifier	value		736544	1					
ANR	736587	ReturnStatement	return true ;	1173:1:32992:33003	736544	4	True				
ANR	736588	Identifier	true		736544	0					
ANR	736589	ReturnType	static bool		736544	1					
ANR	736590	Identifier	cb_cmdlog		736544	2					
ANR	736591	ParameterList	"void * user , void * data"		736544	3					
ANR	736592	Parameter	void * user	1168:22:32829:32838	736544	0	True				
ANR	736593	ParameterType	void *		736544	0					
ANR	736594	Identifier	user		736544	1					
ANR	736595	Parameter	void * data	1168:34:32841:32850	736544	1	True				
ANR	736596	ParameterType	void *		736544	0					
ANR	736597	Identifier	data		736544	1					
ANR	736598	CFGEntryNode	ENTRY		736544		True				
ANR	736599	CFGExitNode	EXIT		736544		True				
ANR	736600	Symbol	core		736544						
ANR	736601	Symbol	node		736544						
ANR	736602	Symbol	data		736544						
ANR	736603	Symbol	core -> cmdlog		736544						
ANR	736604	Symbol	* core		736544						
ANR	736605	Symbol	true		736544						
ANR	736606	Symbol	* node		736544						
ANR	736607	Symbol	strdup		736544						
ANR	736608	Symbol	user		736544						
ANR	736609	Symbol	node -> value		736544						
ANR	736610	Function	cb_cmdtimes	1176:0:33008:33177							
ANR	736611	FunctionDef	"cb_cmdtimes (void * user , void * data)"		736610	0					
ANR	736612	CompoundStatement		1176:48:33056:33177	736610	0					
ANR	736613	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1177:1:33059:33087	736610	0	True				
ANR	736614	IdentifierDecl	* core = ( RCore * ) user		736610	0					
ANR	736615	IdentifierDeclType	RCore *		736610	0					
ANR	736616	Identifier	core		736610	1					
ANR	736617	AssignmentExpression	* core = ( RCore * ) user		736610	2		=			
ANR	736618	Identifier	core		736610	0					
ANR	736619	CastExpression	( RCore * ) user		736610	1					
ANR	736620	CastTarget	RCore *		736610	0					
ANR	736621	Identifier	user		736610	1					
ANR	736622	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1178:1:33090:33130	736610	1	True				
ANR	736623	IdentifierDecl	* node = ( RConfigNode * ) data		736610	0					
ANR	736624	IdentifierDeclType	RConfigNode *		736610	0					
ANR	736625	Identifier	node		736610	1					
ANR	736626	AssignmentExpression	* node = ( RConfigNode * ) data		736610	2		=			
ANR	736627	Identifier	node		736610	0					
ANR	736628	CastExpression	( RConfigNode * ) data		736610	1					
ANR	736629	CastTarget	RConfigNode *		736610	0					
ANR	736630	Identifier	data		736610	1					
ANR	736631	ExpressionStatement	core -> cmdtimes = node -> value	1179:1:33133:33161	736610	2	True				
ANR	736632	AssignmentExpression	core -> cmdtimes = node -> value		736610	0		=			
ANR	736633	PtrMemberAccess	core -> cmdtimes		736610	0					
ANR	736634	Identifier	core		736610	0					
ANR	736635	Identifier	cmdtimes		736610	1					
ANR	736636	PtrMemberAccess	node -> value		736610	1					
ANR	736637	Identifier	node		736610	0					
ANR	736638	Identifier	value		736610	1					
ANR	736639	ReturnStatement	return true ;	1180:1:33164:33175	736610	3	True				
ANR	736640	Identifier	true		736610	0					
ANR	736641	ReturnType	static bool		736610	1					
ANR	736642	Identifier	cb_cmdtimes		736610	2					
ANR	736643	ParameterList	"void * user , void * data"		736610	3					
ANR	736644	Parameter	void * user	1176:24:33032:33041	736610	0	True				
ANR	736645	ParameterType	void *		736610	0					
ANR	736646	Identifier	user		736610	1					
ANR	736647	Parameter	void * data	1176:36:33044:33053	736610	1	True				
ANR	736648	ParameterType	void *		736610	0					
ANR	736649	Identifier	data		736610	1					
ANR	736650	CFGEntryNode	ENTRY		736610		True				
ANR	736651	CFGExitNode	EXIT		736610		True				
ANR	736652	Symbol	core		736610						
ANR	736653	Symbol	node		736610						
ANR	736654	Symbol	data		736610						
ANR	736655	Symbol	* core		736610						
ANR	736656	Symbol	true		736610						
ANR	736657	Symbol	* node		736610						
ANR	736658	Symbol	user		736610						
ANR	736659	Symbol	core -> cmdtimes		736610						
ANR	736660	Symbol	node -> value		736610						
ANR	736661	Function	cb_cmdrepeat	1183:0:33180:33353							
ANR	736662	FunctionDef	"cb_cmdrepeat (void * user , void * data)"		736661	0					
ANR	736663	CompoundStatement		1183:49:33229:33353	736661	0					
ANR	736664	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1184:1:33232:33260	736661	0	True				
ANR	736665	IdentifierDecl	* core = ( RCore * ) user		736661	0					
ANR	736666	IdentifierDeclType	RCore *		736661	0					
ANR	736667	Identifier	core		736661	1					
ANR	736668	AssignmentExpression	* core = ( RCore * ) user		736661	2		=			
ANR	736669	Identifier	core		736661	0					
ANR	736670	CastExpression	( RCore * ) user		736661	1					
ANR	736671	CastTarget	RCore *		736661	0					
ANR	736672	Identifier	user		736661	1					
ANR	736673	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1185:1:33263:33303	736661	1	True				
ANR	736674	IdentifierDecl	* node = ( RConfigNode * ) data		736661	0					
ANR	736675	IdentifierDeclType	RConfigNode *		736661	0					
ANR	736676	Identifier	node		736661	1					
ANR	736677	AssignmentExpression	* node = ( RConfigNode * ) data		736661	2		=			
ANR	736678	Identifier	node		736661	0					
ANR	736679	CastExpression	( RConfigNode * ) data		736661	1					
ANR	736680	CastTarget	RConfigNode *		736661	0					
ANR	736681	Identifier	data		736661	1					
ANR	736682	ExpressionStatement	core -> cmdrepeat = node -> i_value	1186:1:33306:33337	736661	2	True				
ANR	736683	AssignmentExpression	core -> cmdrepeat = node -> i_value		736661	0		=			
ANR	736684	PtrMemberAccess	core -> cmdrepeat		736661	0					
ANR	736685	Identifier	core		736661	0					
ANR	736686	Identifier	cmdrepeat		736661	1					
ANR	736687	PtrMemberAccess	node -> i_value		736661	1					
ANR	736688	Identifier	node		736661	0					
ANR	736689	Identifier	i_value		736661	1					
ANR	736690	ReturnStatement	return true ;	1187:1:33340:33351	736661	3	True				
ANR	736691	Identifier	true		736661	0					
ANR	736692	ReturnType	static bool		736661	1					
ANR	736693	Identifier	cb_cmdrepeat		736661	2					
ANR	736694	ParameterList	"void * user , void * data"		736661	3					
ANR	736695	Parameter	void * user	1183:25:33205:33214	736661	0	True				
ANR	736696	ParameterType	void *		736661	0					
ANR	736697	Identifier	user		736661	1					
ANR	736698	Parameter	void * data	1183:37:33217:33226	736661	1	True				
ANR	736699	ParameterType	void *		736661	0					
ANR	736700	Identifier	data		736661	1					
ANR	736701	CFGEntryNode	ENTRY		736661		True				
ANR	736702	CFGExitNode	EXIT		736661		True				
ANR	736703	Symbol	core		736661						
ANR	736704	Symbol	node		736661						
ANR	736705	Symbol	core -> cmdrepeat		736661						
ANR	736706	Symbol	data		736661						
ANR	736707	Symbol	* core		736661						
ANR	736708	Symbol	true		736661						
ANR	736709	Symbol	* node		736661						
ANR	736710	Symbol	user		736661						
ANR	736711	Symbol	node -> i_value		736661						
ANR	736712	Function	cb_scrnull	1190:0:33356:33528							
ANR	736713	FunctionDef	"cb_scrnull (void * user , void * data)"		736712	0					
ANR	736714	CompoundStatement		1190:47:33403:33528	736712	0					
ANR	736715	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1191:1:33406:33434	736712	0	True				
ANR	736716	IdentifierDecl	* core = ( RCore * ) user		736712	0					
ANR	736717	IdentifierDeclType	RCore *		736712	0					
ANR	736718	Identifier	core		736712	1					
ANR	736719	AssignmentExpression	* core = ( RCore * ) user		736712	2		=			
ANR	736720	Identifier	core		736712	0					
ANR	736721	CastExpression	( RCore * ) user		736712	1					
ANR	736722	CastTarget	RCore *		736712	0					
ANR	736723	Identifier	user		736712	1					
ANR	736724	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1192:1:33437:33477	736712	1	True				
ANR	736725	IdentifierDecl	* node = ( RConfigNode * ) data		736712	0					
ANR	736726	IdentifierDeclType	RConfigNode *		736712	0					
ANR	736727	Identifier	node		736712	1					
ANR	736728	AssignmentExpression	* node = ( RConfigNode * ) data		736712	2		=			
ANR	736729	Identifier	node		736712	0					
ANR	736730	CastExpression	( RConfigNode * ) data		736712	1					
ANR	736731	CastTarget	RConfigNode *		736712	0					
ANR	736732	Identifier	data		736712	1					
ANR	736733	ExpressionStatement	core -> cons -> null = node -> i_value	1193:1:33480:33512	736712	2	True				
ANR	736734	AssignmentExpression	core -> cons -> null = node -> i_value		736712	0		=			
ANR	736735	PtrMemberAccess	core -> cons -> null		736712	0					
ANR	736736	PtrMemberAccess	core -> cons		736712	0					
ANR	736737	Identifier	core		736712	0					
ANR	736738	Identifier	cons		736712	1					
ANR	736739	Identifier	null		736712	1					
ANR	736740	PtrMemberAccess	node -> i_value		736712	1					
ANR	736741	Identifier	node		736712	0					
ANR	736742	Identifier	i_value		736712	1					
ANR	736743	ReturnStatement	return true ;	1194:1:33515:33526	736712	3	True				
ANR	736744	Identifier	true		736712	0					
ANR	736745	ReturnType	static bool		736712	1					
ANR	736746	Identifier	cb_scrnull		736712	2					
ANR	736747	ParameterList	"void * user , void * data"		736712	3					
ANR	736748	Parameter	void * user	1190:23:33379:33388	736712	0	True				
ANR	736749	ParameterType	void *		736712	0					
ANR	736750	Identifier	user		736712	1					
ANR	736751	Parameter	void * data	1190:35:33391:33400	736712	1	True				
ANR	736752	ParameterType	void *		736712	0					
ANR	736753	Identifier	data		736712	1					
ANR	736754	CFGEntryNode	ENTRY		736712		True				
ANR	736755	CFGExitNode	EXIT		736712		True				
ANR	736756	Symbol	core		736712						
ANR	736757	Symbol	node		736712						
ANR	736758	Symbol	core -> cons		736712						
ANR	736759	Symbol	data		736712						
ANR	736760	Symbol	core -> cons -> null		736712						
ANR	736761	Symbol	* core -> cons		736712						
ANR	736762	Symbol	* core		736712						
ANR	736763	Symbol	true		736712						
ANR	736764	Symbol	* node		736712						
ANR	736765	Symbol	user		736712						
ANR	736766	Symbol	* * core		736712						
ANR	736767	Symbol	node -> i_value		736712						
ANR	736768	Function	cb_color	1197:0:33531:34118							
ANR	736769	FunctionDef	"cb_color (void * user , void * data)"		736768	0					
ANR	736770	CompoundStatement		1197:45:33576:34118	736768	0					
ANR	736771	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1198:1:33579:33607	736768	0	True				
ANR	736772	IdentifierDecl	* core = ( RCore * ) user		736768	0					
ANR	736773	IdentifierDeclType	RCore *		736768	0					
ANR	736774	Identifier	core		736768	1					
ANR	736775	AssignmentExpression	* core = ( RCore * ) user		736768	2		=			
ANR	736776	Identifier	core		736768	0					
ANR	736777	CastExpression	( RCore * ) user		736768	1					
ANR	736778	CastTarget	RCore *		736768	0					
ANR	736779	Identifier	user		736768	1					
ANR	736780	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1199:1:33610:33650	736768	1	True				
ANR	736781	IdentifierDecl	* node = ( RConfigNode * ) data		736768	0					
ANR	736782	IdentifierDeclType	RConfigNode *		736768	0					
ANR	736783	Identifier	node		736768	1					
ANR	736784	AssignmentExpression	* node = ( RConfigNode * ) data		736768	2		=			
ANR	736785	Identifier	node		736768	0					
ANR	736786	CastExpression	( RConfigNode * ) data		736768	1					
ANR	736787	CastTarget	RConfigNode *		736768	0					
ANR	736788	Identifier	data		736768	1					
ANR	736789	IfStatement	if ( node -> i_value )		736768	2					
ANR	736790	Condition	node -> i_value	1200:5:33657:33669	736768	0	True				
ANR	736791	PtrMemberAccess	node -> i_value		736768	0					
ANR	736792	Identifier	node		736768	0					
ANR	736793	Identifier	i_value		736768	1					
ANR	736794	CompoundStatement		4:20:95:95	736768	1					
ANR	736795	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_COLOR	1201:2:33676:33717	736768	0	True				
ANR	736796	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_COLOR		736768	0		|=			
ANR	736797	PtrMemberAccess	core -> print -> flags		736768	0					
ANR	736798	PtrMemberAccess	core -> print		736768	0					
ANR	736799	Identifier	core		736768	0					
ANR	736800	Identifier	print		736768	1					
ANR	736801	Identifier	flags		736768	1					
ANR	736802	Identifier	R_PRINT_FLAGS_COLOR		736768	1					
ANR	736803	ElseStatement	else		736768	0					
ANR	736804	CompoundStatement		6:8:150:150	736768	0					
ANR	736805	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_COLOR )	1203:2:33731:33775	736768	0	True				
ANR	736806	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_COLOR )		736768	0		&=			
ANR	736807	PtrMemberAccess	core -> print -> flags		736768	0					
ANR	736808	PtrMemberAccess	core -> print		736768	0					
ANR	736809	Identifier	core		736768	0					
ANR	736810	Identifier	print		736768	1					
ANR	736811	Identifier	flags		736768	1					
ANR	736812	Identifier	~R_PRINT_FLAGS_COLOR		736768	1					
ANR	736813	IfStatement	"if ( ! strcmp ( node -> value , ""true"" ) )"		736768	3					
ANR	736814	Condition	"! strcmp ( node -> value , ""true"" )"	1205:5:33785:33813	736768	0	True				
ANR	736815	UnaryOperationExpression	"! strcmp ( node -> value , ""true"" )"		736768	0					
ANR	736816	UnaryOperator	!		736768	0					
ANR	736817	CallExpression	"strcmp ( node -> value , ""true"" )"		736768	1					
ANR	736818	Callee	strcmp		736768	0					
ANR	736819	Identifier	strcmp		736768	0					
ANR	736820	ArgumentList	node -> value		736768	1					
ANR	736821	Argument	node -> value		736768	0					
ANR	736822	PtrMemberAccess	node -> value		736768	0					
ANR	736823	Identifier	node		736768	0					
ANR	736824	Identifier	value		736768	1					
ANR	736825	Argument	"""true"""		736768	1					
ANR	736826	PrimaryExpression	"""true"""		736768	0					
ANR	736827	CompoundStatement		9:36:239:239	736768	1					
ANR	736828	ExpressionStatement	node -> i_value = 1	1206:2:33820:33837	736768	0	True				
ANR	736829	AssignmentExpression	node -> i_value = 1		736768	0		=			
ANR	736830	PtrMemberAccess	node -> i_value		736768	0					
ANR	736831	Identifier	node		736768	0					
ANR	736832	Identifier	i_value		736768	1					
ANR	736833	PrimaryExpression	1		736768	1					
ANR	736834	ElseStatement	else		736768	0					
ANR	736835	IfStatement	"if ( ! strcmp ( node -> value , ""false"" ) )"		736768	0					
ANR	736836	Condition	"! strcmp ( node -> value , ""false"" )"	1207:12:33851:33880	736768	0	True				
ANR	736837	UnaryOperationExpression	"! strcmp ( node -> value , ""false"" )"		736768	0					
ANR	736838	UnaryOperator	!		736768	0					
ANR	736839	CallExpression	"strcmp ( node -> value , ""false"" )"		736768	1					
ANR	736840	Callee	strcmp		736768	0					
ANR	736841	Identifier	strcmp		736768	0					
ANR	736842	ArgumentList	node -> value		736768	1					
ANR	736843	Argument	node -> value		736768	0					
ANR	736844	PtrMemberAccess	node -> value		736768	0					
ANR	736845	Identifier	node		736768	0					
ANR	736846	Identifier	value		736768	1					
ANR	736847	Argument	"""false"""		736768	1					
ANR	736848	PrimaryExpression	"""false"""		736768	0					
ANR	736849	CompoundStatement		11:44:306:306	736768	1					
ANR	736850	ExpressionStatement	node -> i_value = 0	1208:2:33887:33904	736768	0	True				
ANR	736851	AssignmentExpression	node -> i_value = 0		736768	0		=			
ANR	736852	PtrMemberAccess	node -> i_value		736768	0					
ANR	736853	Identifier	node		736768	0					
ANR	736854	Identifier	i_value		736768	1					
ANR	736855	PrimaryExpression	0		736768	1					
ANR	736856	ExpressionStatement	r_cons_singleton ( ) -> context -> color_mode = ( node -> i_value > COLOR_MODE_16M ) ? COLOR_MODE_16M : node -> i_value	1210:1:33910:34019	736768	4	True				
ANR	736857	AssignmentExpression	r_cons_singleton ( ) -> context -> color_mode = ( node -> i_value > COLOR_MODE_16M ) ? COLOR_MODE_16M : node -> i_value		736768	0		=			
ANR	736858	PtrMemberAccess	r_cons_singleton ( ) -> context -> color_mode		736768	0					
ANR	736859	PtrMemberAccess	r_cons_singleton ( ) -> context		736768	0					
ANR	736860	CallExpression	r_cons_singleton ( )		736768	0					
ANR	736861	Callee	r_cons_singleton		736768	0					
ANR	736862	Identifier	r_cons_singleton		736768	0					
ANR	736863	ArgumentList			736768	1					
ANR	736864	Identifier	context		736768	1					
ANR	736865	Identifier	color_mode		736768	1					
ANR	736866	ConditionalExpression	( node -> i_value > COLOR_MODE_16M ) ? COLOR_MODE_16M : node -> i_value		736768	1					
ANR	736867	Condition	node -> i_value > COLOR_MODE_16M		736768	0					
ANR	736868	RelationalExpression	node -> i_value > COLOR_MODE_16M		736768	0		>			
ANR	736869	PtrMemberAccess	node -> i_value		736768	0					
ANR	736870	Identifier	node		736768	0					
ANR	736871	Identifier	i_value		736768	1					
ANR	736872	Identifier	COLOR_MODE_16M		736768	1					
ANR	736873	Identifier	COLOR_MODE_16M		736768	1					
ANR	736874	PtrMemberAccess	node -> i_value		736768	2					
ANR	736875	Identifier	node		736768	0					
ANR	736876	Identifier	i_value		736768	1					
ANR	736877	ExpressionStatement	r_cons_pal_update_event ( )	1212:1:34022:34048	736768	5	True				
ANR	736878	CallExpression	r_cons_pal_update_event ( )		736768	0					
ANR	736879	Callee	r_cons_pal_update_event		736768	0					
ANR	736880	Identifier	r_cons_pal_update_event		736768	0					
ANR	736881	ArgumentList			736768	1					
ANR	736882	ExpressionStatement	"r_print_set_flags ( core -> print , core -> print -> flags )"	1213:1:34051:34102	736768	6	True				
ANR	736883	CallExpression	"r_print_set_flags ( core -> print , core -> print -> flags )"		736768	0					
ANR	736884	Callee	r_print_set_flags		736768	0					
ANR	736885	Identifier	r_print_set_flags		736768	0					
ANR	736886	ArgumentList	core -> print		736768	1					
ANR	736887	Argument	core -> print		736768	0					
ANR	736888	PtrMemberAccess	core -> print		736768	0					
ANR	736889	Identifier	core		736768	0					
ANR	736890	Identifier	print		736768	1					
ANR	736891	Argument	core -> print -> flags		736768	1					
ANR	736892	PtrMemberAccess	core -> print -> flags		736768	0					
ANR	736893	PtrMemberAccess	core -> print		736768	0					
ANR	736894	Identifier	core		736768	0					
ANR	736895	Identifier	print		736768	1					
ANR	736896	Identifier	flags		736768	1					
ANR	736897	ReturnStatement	return true ;	1214:1:34105:34116	736768	7	True				
ANR	736898	Identifier	true		736768	0					
ANR	736899	ReturnType	static bool		736768	1					
ANR	736900	Identifier	cb_color		736768	2					
ANR	736901	ParameterList	"void * user , void * data"		736768	3					
ANR	736902	Parameter	void * user	1197:21:33552:33561	736768	0	True				
ANR	736903	ParameterType	void *		736768	0					
ANR	736904	Identifier	user		736768	1					
ANR	736905	Parameter	void * data	1197:33:33564:33573	736768	1	True				
ANR	736906	ParameterType	void *		736768	0					
ANR	736907	Identifier	data		736768	1					
ANR	736908	CFGEntryNode	ENTRY		736768		True				
ANR	736909	CFGExitNode	EXIT		736768		True				
ANR	736910	Symbol	strcmp		736768						
ANR	736911	Symbol	data		736768						
ANR	736912	Symbol	* core		736768						
ANR	736913	Symbol	* r_cons_singleton ( ) -> context		736768						
ANR	736914	Symbol	* * r_cons_singleton		736768						
ANR	736915	Symbol	node -> i_value		736768						
ANR	736916	Symbol	node -> value		736768						
ANR	736917	Symbol	r_cons_singleton ( ) -> context -> color_mode		736768						
ANR	736918	Symbol	core		736768						
ANR	736919	Symbol	node		736768						
ANR	736920	Symbol	* core -> print		736768						
ANR	736921	Symbol	~R_PRINT_FLAGS_COLOR		736768						
ANR	736922	Symbol	COLOR_MODE_16M		736768						
ANR	736923	Symbol	R_PRINT_FLAGS_COLOR		736768						
ANR	736924	Symbol	true		736768						
ANR	736925	Symbol	r_cons_singleton		736768						
ANR	736926	Symbol	* node		736768						
ANR	736927	Symbol	core -> print		736768						
ANR	736928	Symbol	user		736768						
ANR	736929	Symbol	r_cons_singleton ( ) -> context		736768						
ANR	736930	Symbol	core -> print -> flags		736768						
ANR	736931	Symbol	* * core		736768						
ANR	736932	Symbol	* r_cons_singleton		736768						
ANR	736933	Function	cb_color_getter	1217:0:34121:34493							
ANR	736934	FunctionDef	"cb_color_getter (void * user , RConfigNode * node)"		736933	0					
ANR	736935	CompoundStatement		1217:59:34180:34493	736933	0					
ANR	736936	ExpressionStatement	( void ) user	1218:1:34183:34193	736933	0	True				
ANR	736937	CastExpression	( void ) user		736933	0					
ANR	736938	CastTarget	void		736933	0					
ANR	736939	Identifier	user		736933	1					
ANR	736940	ExpressionStatement	node -> i_value = r_cons_singleton ( ) -> context -> color_mode	1219:1:34196:34252	736933	1	True				
ANR	736941	AssignmentExpression	node -> i_value = r_cons_singleton ( ) -> context -> color_mode		736933	0		=			
ANR	736942	PtrMemberAccess	node -> i_value		736933	0					
ANR	736943	Identifier	node		736933	0					
ANR	736944	Identifier	i_value		736933	1					
ANR	736945	PtrMemberAccess	r_cons_singleton ( ) -> context -> color_mode		736933	1					
ANR	736946	PtrMemberAccess	r_cons_singleton ( ) -> context		736933	0					
ANR	736947	CallExpression	r_cons_singleton ( )		736933	0					
ANR	736948	Callee	r_cons_singleton		736933	0					
ANR	736949	Identifier	r_cons_singleton		736933	0					
ANR	736950	ArgumentList			736933	1					
ANR	736951	Identifier	context		736933	1					
ANR	736952	Identifier	color_mode		736933	1					
ANR	736953	IdentifierDeclStatement	char buf [ 128 ] ;	1220:1:34255:34268	736933	2	True				
ANR	736954	IdentifierDecl	buf [ 128 ]		736933	0					
ANR	736955	IdentifierDeclType	char [ 128 ]		736933	0					
ANR	736956	Identifier	buf		736933	1					
ANR	736957	PrimaryExpression	128		736933	2					
ANR	736958	ExpressionStatement	"r_config_node_value_format_i ( buf , sizeof ( buf ) , r_cons_singleton ( ) -> context -> color_mode , node )"	1221:1:34271:34367	736933	3	True				
ANR	736959	CallExpression	"r_config_node_value_format_i ( buf , sizeof ( buf ) , r_cons_singleton ( ) -> context -> color_mode , node )"		736933	0					
ANR	736960	Callee	r_config_node_value_format_i		736933	0					
ANR	736961	Identifier	r_config_node_value_format_i		736933	0					
ANR	736962	ArgumentList	buf		736933	1					
ANR	736963	Argument	buf		736933	0					
ANR	736964	Identifier	buf		736933	0					
ANR	736965	Argument	sizeof ( buf )		736933	1					
ANR	736966	SizeofExpression	sizeof ( buf )		736933	0					
ANR	736967	Sizeof	sizeof		736933	0					
ANR	736968	SizeofOperand	buf		736933	1					
ANR	736969	Argument	r_cons_singleton ( ) -> context -> color_mode		736933	2					
ANR	736970	PtrMemberAccess	r_cons_singleton ( ) -> context -> color_mode		736933	0					
ANR	736971	PtrMemberAccess	r_cons_singleton ( ) -> context		736933	0					
ANR	736972	CallExpression	r_cons_singleton ( )		736933	0					
ANR	736973	Callee	r_cons_singleton		736933	0					
ANR	736974	Identifier	r_cons_singleton		736933	0					
ANR	736975	ArgumentList			736933	1					
ANR	736976	Identifier	context		736933	1					
ANR	736977	Identifier	color_mode		736933	1					
ANR	736978	Argument	node		736933	3					
ANR	736979	Identifier	node		736933	0					
ANR	736980	IfStatement	"if ( ! node -> value || strcmp ( node -> value , buf ) != 0 )"		736933	4					
ANR	736981	Condition	"! node -> value || strcmp ( node -> value , buf ) != 0"	1222:5:34374:34419	736933	0	True				
ANR	736982	OrExpression	"! node -> value || strcmp ( node -> value , buf ) != 0"		736933	0		||			
ANR	736983	UnaryOperationExpression	! node -> value		736933	0					
ANR	736984	UnaryOperator	!		736933	0					
ANR	736985	PtrMemberAccess	node -> value		736933	1					
ANR	736986	Identifier	node		736933	0					
ANR	736987	Identifier	value		736933	1					
ANR	736988	EqualityExpression	"strcmp ( node -> value , buf ) != 0"		736933	1		!=			
ANR	736989	CallExpression	"strcmp ( node -> value , buf )"		736933	0					
ANR	736990	Callee	strcmp		736933	0					
ANR	736991	Identifier	strcmp		736933	0					
ANR	736992	ArgumentList	node -> value		736933	1					
ANR	736993	Argument	node -> value		736933	0					
ANR	736994	PtrMemberAccess	node -> value		736933	0					
ANR	736995	Identifier	node		736933	0					
ANR	736996	Identifier	value		736933	1					
ANR	736997	Argument	buf		736933	1					
ANR	736998	Identifier	buf		736933	0					
ANR	736999	PrimaryExpression	0		736933	1					
ANR	737000	CompoundStatement		6:53:241:241	736933	1					
ANR	737001	ExpressionStatement	free ( node -> value )	1223:2:34426:34444	736933	0	True				
ANR	737002	CallExpression	free ( node -> value )		736933	0					
ANR	737003	Callee	free		736933	0					
ANR	737004	Identifier	free		736933	0					
ANR	737005	ArgumentList	node -> value		736933	1					
ANR	737006	Argument	node -> value		736933	0					
ANR	737007	PtrMemberAccess	node -> value		736933	0					
ANR	737008	Identifier	node		736933	0					
ANR	737009	Identifier	value		736933	1					
ANR	737010	ExpressionStatement	node -> value = strdup ( buf )	1224:2:34448:34474	736933	1	True				
ANR	737011	AssignmentExpression	node -> value = strdup ( buf )		736933	0		=			
ANR	737012	PtrMemberAccess	node -> value		736933	0					
ANR	737013	Identifier	node		736933	0					
ANR	737014	Identifier	value		736933	1					
ANR	737015	CallExpression	strdup ( buf )		736933	1					
ANR	737016	Callee	strdup		736933	0					
ANR	737017	Identifier	strdup		736933	0					
ANR	737018	ArgumentList	buf		736933	1					
ANR	737019	Argument	buf		736933	0					
ANR	737020	Identifier	buf		736933	0					
ANR	737021	ReturnStatement	return true ;	1226:1:34480:34491	736933	5	True				
ANR	737022	Identifier	true		736933	0					
ANR	737023	ReturnType	static bool		736933	1					
ANR	737024	Identifier	cb_color_getter		736933	2					
ANR	737025	ParameterList	"void * user , RConfigNode * node"		736933	3					
ANR	737026	Parameter	void * user	1217:28:34149:34158	736933	0	True				
ANR	737027	ParameterType	void *		736933	0					
ANR	737028	Identifier	user		736933	1					
ANR	737029	Parameter	RConfigNode * node	1217:40:34161:34177	736933	1	True				
ANR	737030	ParameterType	RConfigNode *		736933	0					
ANR	737031	Identifier	node		736933	1					
ANR	737032	CFGEntryNode	ENTRY		736933		True				
ANR	737033	CFGExitNode	EXIT		736933		True				
ANR	737034	Symbol	strcmp		736933						
ANR	737035	Symbol	* r_cons_singleton ( ) -> context		736933						
ANR	737036	Symbol	* * r_cons_singleton		736933						
ANR	737037	Symbol	node -> i_value		736933						
ANR	737038	Symbol	node -> value		736933						
ANR	737039	Symbol	r_cons_singleton ( ) -> context -> color_mode		736933						
ANR	737040	Symbol	node		736933						
ANR	737041	Symbol	buf		736933						
ANR	737042	Symbol	true		736933						
ANR	737043	Symbol	r_cons_singleton		736933						
ANR	737044	Symbol	* node		736933						
ANR	737045	Symbol	strdup		736933						
ANR	737046	Symbol	user		736933						
ANR	737047	Symbol	r_cons_singleton ( ) -> context		736933						
ANR	737048	Symbol	* r_cons_singleton		736933						
ANR	737049	Function	cb_decoff	1229:0:34496:34818							
ANR	737050	FunctionDef	"cb_decoff (void * user , void * data)"		737049	0					
ANR	737051	CompoundStatement		1229:46:34542:34818	737049	0					
ANR	737052	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1230:1:34545:34573	737049	0	True				
ANR	737053	IdentifierDecl	* core = ( RCore * ) user		737049	0					
ANR	737054	IdentifierDeclType	RCore *		737049	0					
ANR	737055	Identifier	core		737049	1					
ANR	737056	AssignmentExpression	* core = ( RCore * ) user		737049	2		=			
ANR	737057	Identifier	core		737049	0					
ANR	737058	CastExpression	( RCore * ) user		737049	1					
ANR	737059	CastTarget	RCore *		737049	0					
ANR	737060	Identifier	user		737049	1					
ANR	737061	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1231:1:34576:34616	737049	1	True				
ANR	737062	IdentifierDecl	* node = ( RConfigNode * ) data		737049	0					
ANR	737063	IdentifierDeclType	RConfigNode *		737049	0					
ANR	737064	Identifier	node		737049	1					
ANR	737065	AssignmentExpression	* node = ( RConfigNode * ) data		737049	2		=			
ANR	737066	Identifier	node		737049	0					
ANR	737067	CastExpression	( RConfigNode * ) data		737049	1					
ANR	737068	CastTarget	RConfigNode *		737049	0					
ANR	737069	Identifier	data		737049	1					
ANR	737070	IfStatement	if ( node -> i_value )		737049	2					
ANR	737071	Condition	node -> i_value	1232:5:34623:34635	737049	0	True				
ANR	737072	PtrMemberAccess	node -> i_value		737049	0					
ANR	737073	Identifier	node		737049	0					
ANR	737074	Identifier	i_value		737049	1					
ANR	737075	CompoundStatement		4:20:95:95	737049	1					
ANR	737076	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_ADDRDEC	1233:2:34642:34685	737049	0	True				
ANR	737077	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_ADDRDEC		737049	0		|=			
ANR	737078	PtrMemberAccess	core -> print -> flags		737049	0					
ANR	737079	PtrMemberAccess	core -> print		737049	0					
ANR	737080	Identifier	core		737049	0					
ANR	737081	Identifier	print		737049	1					
ANR	737082	Identifier	flags		737049	1					
ANR	737083	Identifier	R_PRINT_FLAGS_ADDRDEC		737049	1					
ANR	737084	ElseStatement	else		737049	0					
ANR	737085	CompoundStatement		6:8:152:152	737049	0					
ANR	737086	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_ADDRDEC )	1235:2:34699:34745	737049	0	True				
ANR	737087	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_ADDRDEC )		737049	0		&=			
ANR	737088	PtrMemberAccess	core -> print -> flags		737049	0					
ANR	737089	PtrMemberAccess	core -> print		737049	0					
ANR	737090	Identifier	core		737049	0					
ANR	737091	Identifier	print		737049	1					
ANR	737092	Identifier	flags		737049	1					
ANR	737093	Identifier	~R_PRINT_FLAGS_ADDRDEC		737049	1					
ANR	737094	ExpressionStatement	"r_print_set_flags ( core -> print , core -> print -> flags )"	1237:1:34751:34802	737049	3	True				
ANR	737095	CallExpression	"r_print_set_flags ( core -> print , core -> print -> flags )"		737049	0					
ANR	737096	Callee	r_print_set_flags		737049	0					
ANR	737097	Identifier	r_print_set_flags		737049	0					
ANR	737098	ArgumentList	core -> print		737049	1					
ANR	737099	Argument	core -> print		737049	0					
ANR	737100	PtrMemberAccess	core -> print		737049	0					
ANR	737101	Identifier	core		737049	0					
ANR	737102	Identifier	print		737049	1					
ANR	737103	Argument	core -> print -> flags		737049	1					
ANR	737104	PtrMemberAccess	core -> print -> flags		737049	0					
ANR	737105	PtrMemberAccess	core -> print		737049	0					
ANR	737106	Identifier	core		737049	0					
ANR	737107	Identifier	print		737049	1					
ANR	737108	Identifier	flags		737049	1					
ANR	737109	ReturnStatement	return true ;	1238:1:34805:34816	737049	4	True				
ANR	737110	Identifier	true		737049	0					
ANR	737111	ReturnType	static bool		737049	1					
ANR	737112	Identifier	cb_decoff		737049	2					
ANR	737113	ParameterList	"void * user , void * data"		737049	3					
ANR	737114	Parameter	void * user	1229:22:34518:34527	737049	0	True				
ANR	737115	ParameterType	void *		737049	0					
ANR	737116	Identifier	user		737049	1					
ANR	737117	Parameter	void * data	1229:34:34530:34539	737049	1	True				
ANR	737118	ParameterType	void *		737049	0					
ANR	737119	Identifier	data		737049	1					
ANR	737120	CFGEntryNode	ENTRY		737049		True				
ANR	737121	CFGExitNode	EXIT		737049		True				
ANR	737122	Symbol	R_PRINT_FLAGS_ADDRDEC		737049						
ANR	737123	Symbol	data		737049						
ANR	737124	Symbol	* core		737049						
ANR	737125	Symbol	node -> i_value		737049						
ANR	737126	Symbol	core		737049						
ANR	737127	Symbol	node		737049						
ANR	737128	Symbol	* core -> print		737049						
ANR	737129	Symbol	~R_PRINT_FLAGS_ADDRDEC		737049						
ANR	737130	Symbol	true		737049						
ANR	737131	Symbol	* node		737049						
ANR	737132	Symbol	core -> print		737049						
ANR	737133	Symbol	user		737049						
ANR	737134	Symbol	* * core		737049						
ANR	737135	Symbol	core -> print -> flags		737049						
ANR	737136	Function	cb_dbgbep	1241:0:34821:35001							
ANR	737137	FunctionDef	"cb_dbgbep (void * user , void * data)"		737136	0					
ANR	737138	CompoundStatement		1241:46:34867:35001	737136	0					
ANR	737139	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1242:1:34870:34909	737136	0	True				
ANR	737140	IdentifierDecl	* node = ( RConfigNode * ) data		737136	0					
ANR	737141	IdentifierDeclType	RConfigNode *		737136	0					
ANR	737142	Identifier	node		737136	1					
ANR	737143	AssignmentExpression	* node = ( RConfigNode * ) data		737136	2		=			
ANR	737144	Identifier	node		737136	0					
ANR	737145	CastExpression	( RConfigNode * ) data		737136	1					
ANR	737146	CastTarget	RConfigNode *		737136	0					
ANR	737147	Identifier	data		737136	1					
ANR	737148	IfStatement	if ( * node -> value == '?' )		737136	1					
ANR	737149	Condition	* node -> value == '?'	1243:5:34916:34934	737136	0	True				
ANR	737150	EqualityExpression	* node -> value == '?'		737136	0		==			
ANR	737151	UnaryOperationExpression	* node -> value		737136	0					
ANR	737152	UnaryOperator	*		737136	0					
ANR	737153	PtrMemberAccess	node -> value		737136	1					
ANR	737154	Identifier	node		737136	0					
ANR	737155	Identifier	value		737136	1					
ANR	737156	PrimaryExpression	'?'		737136	1					
ANR	737157	CompoundStatement		3:26:69:69	737136	1					
ANR	737158	ExpressionStatement	print_node_options ( node )	1244:2:34941:34966	737136	0	True				
ANR	737159	CallExpression	print_node_options ( node )		737136	0					
ANR	737160	Callee	print_node_options		737136	0					
ANR	737161	Identifier	print_node_options		737136	0					
ANR	737162	ArgumentList	node		737136	1					
ANR	737163	Argument	node		737136	0					
ANR	737164	Identifier	node		737136	0					
ANR	737165	ReturnStatement	return false ;	1245:2:34970:34982	737136	1	True				
ANR	737166	Identifier	false		737136	0					
ANR	737167	ReturnStatement	return true ;	1247:1:34988:34999	737136	2	True				
ANR	737168	Identifier	true		737136	0					
ANR	737169	ReturnType	static bool		737136	1					
ANR	737170	Identifier	cb_dbgbep		737136	2					
ANR	737171	ParameterList	"void * user , void * data"		737136	3					
ANR	737172	Parameter	void * user	1241:22:34843:34852	737136	0	True				
ANR	737173	ParameterType	void *		737136	0					
ANR	737174	Identifier	user		737136	1					
ANR	737175	Parameter	void * data	1241:34:34855:34864	737136	1	True				
ANR	737176	ParameterType	void *		737136	0					
ANR	737177	Identifier	data		737136	1					
ANR	737178	CFGEntryNode	ENTRY		737136		True				
ANR	737179	CFGExitNode	EXIT		737136		True				
ANR	737180	Symbol	node		737136						
ANR	737181	Symbol	* node -> value		737136						
ANR	737182	Symbol	data		737136						
ANR	737183	Symbol	* * node		737136						
ANR	737184	Symbol	false		737136						
ANR	737185	Symbol	true		737136						
ANR	737186	Symbol	* node		737136						
ANR	737187	Symbol	user		737136						
ANR	737188	Symbol	node -> value		737136						
ANR	737189	Function	cb_dbg_btalgo	1250:0:35004:35288							
ANR	737190	FunctionDef	"cb_dbg_btalgo (void * user , void * data)"		737189	0					
ANR	737191	CompoundStatement		1250:50:35054:35288	737189	0					
ANR	737192	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1251:1:35057:35084	737189	0	True				
ANR	737193	IdentifierDecl	* core = ( RCore * ) user		737189	0					
ANR	737194	IdentifierDeclType	RCore *		737189	0					
ANR	737195	Identifier	core		737189	1					
ANR	737196	AssignmentExpression	* core = ( RCore * ) user		737189	2		=			
ANR	737197	Identifier	core		737189	0					
ANR	737198	CastExpression	( RCore * ) user		737189	1					
ANR	737199	CastTarget	RCore *		737189	0					
ANR	737200	Identifier	user		737189	1					
ANR	737201	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1252:1:35087:35126	737189	1	True				
ANR	737202	IdentifierDecl	* node = ( RConfigNode * ) data		737189	0					
ANR	737203	IdentifierDeclType	RConfigNode *		737189	0					
ANR	737204	Identifier	node		737189	1					
ANR	737205	AssignmentExpression	* node = ( RConfigNode * ) data		737189	2		=			
ANR	737206	Identifier	node		737189	0					
ANR	737207	CastExpression	( RConfigNode * ) data		737189	1					
ANR	737208	CastTarget	RConfigNode *		737189	0					
ANR	737209	Identifier	data		737189	1					
ANR	737210	IfStatement	if ( * node -> value == '?' )		737189	2					
ANR	737211	Condition	* node -> value == '?'	1253:5:35133:35151	737189	0	True				
ANR	737212	EqualityExpression	* node -> value == '?'		737189	0		==			
ANR	737213	UnaryOperationExpression	* node -> value		737189	0					
ANR	737214	UnaryOperator	*		737189	0					
ANR	737215	PtrMemberAccess	node -> value		737189	1					
ANR	737216	Identifier	node		737189	0					
ANR	737217	Identifier	value		737189	1					
ANR	737218	PrimaryExpression	'?'		737189	1					
ANR	737219	CompoundStatement		4:26:99:99	737189	1					
ANR	737220	ExpressionStatement	print_node_options ( node )	1254:2:35158:35183	737189	0	True				
ANR	737221	CallExpression	print_node_options ( node )		737189	0					
ANR	737222	Callee	print_node_options		737189	0					
ANR	737223	Identifier	print_node_options		737189	0					
ANR	737224	ArgumentList	node		737189	1					
ANR	737225	Argument	node		737189	0					
ANR	737226	Identifier	node		737189	0					
ANR	737227	ReturnStatement	return false ;	1255:2:35187:35199	737189	1	True				
ANR	737228	Identifier	false		737189	0					
ANR	737229	ExpressionStatement	free ( core -> dbg -> btalgo )	1257:1:35205:35229	737189	3	True				
ANR	737230	CallExpression	free ( core -> dbg -> btalgo )		737189	0					
ANR	737231	Callee	free		737189	0					
ANR	737232	Identifier	free		737189	0					
ANR	737233	ArgumentList	core -> dbg -> btalgo		737189	1					
ANR	737234	Argument	core -> dbg -> btalgo		737189	0					
ANR	737235	PtrMemberAccess	core -> dbg -> btalgo		737189	0					
ANR	737236	PtrMemberAccess	core -> dbg		737189	0					
ANR	737237	Identifier	core		737189	0					
ANR	737238	Identifier	dbg		737189	1					
ANR	737239	Identifier	btalgo		737189	1					
ANR	737240	ExpressionStatement	core -> dbg -> btalgo = strdup ( node -> value )	1258:1:35232:35272	737189	4	True				
ANR	737241	AssignmentExpression	core -> dbg -> btalgo = strdup ( node -> value )		737189	0		=			
ANR	737242	PtrMemberAccess	core -> dbg -> btalgo		737189	0					
ANR	737243	PtrMemberAccess	core -> dbg		737189	0					
ANR	737244	Identifier	core		737189	0					
ANR	737245	Identifier	dbg		737189	1					
ANR	737246	Identifier	btalgo		737189	1					
ANR	737247	CallExpression	strdup ( node -> value )		737189	1					
ANR	737248	Callee	strdup		737189	0					
ANR	737249	Identifier	strdup		737189	0					
ANR	737250	ArgumentList	node -> value		737189	1					
ANR	737251	Argument	node -> value		737189	0					
ANR	737252	PtrMemberAccess	node -> value		737189	0					
ANR	737253	Identifier	node		737189	0					
ANR	737254	Identifier	value		737189	1					
ANR	737255	ReturnStatement	return true ;	1259:1:35275:35286	737189	5	True				
ANR	737256	Identifier	true		737189	0					
ANR	737257	ReturnType	static bool		737189	1					
ANR	737258	Identifier	cb_dbg_btalgo		737189	2					
ANR	737259	ParameterList	"void * user , void * data"		737189	3					
ANR	737260	Parameter	void * user	1250:26:35030:35039	737189	0	True				
ANR	737261	ParameterType	void *		737189	0					
ANR	737262	Identifier	user		737189	1					
ANR	737263	Parameter	void * data	1250:38:35042:35051	737189	1	True				
ANR	737264	ParameterType	void *		737189	0					
ANR	737265	Identifier	data		737189	1					
ANR	737266	CFGEntryNode	ENTRY		737189		True				
ANR	737267	CFGExitNode	EXIT		737189		True				
ANR	737268	Symbol	* node -> value		737189						
ANR	737269	Symbol	data		737189						
ANR	737270	Symbol	false		737189						
ANR	737271	Symbol	* core		737189						
ANR	737272	Symbol	core -> dbg -> btalgo		737189						
ANR	737273	Symbol	node -> value		737189						
ANR	737274	Symbol	core		737189						
ANR	737275	Symbol	node		737189						
ANR	737276	Symbol	* * node		737189						
ANR	737277	Symbol	true		737189						
ANR	737278	Symbol	* node		737189						
ANR	737279	Symbol	strdup		737189						
ANR	737280	Symbol	user		737189						
ANR	737281	Symbol	* core -> dbg		737189						
ANR	737282	Symbol	* * core		737189						
ANR	737283	Symbol	core -> dbg		737189						
ANR	737284	Function	cb_dbg_libs	1262:0:35291:35503							
ANR	737285	FunctionDef	"cb_dbg_libs (void * user , void * data)"		737284	0					
ANR	737286	CompoundStatement		1262:48:35339:35503	737284	0					
ANR	737287	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1263:1:35342:35369	737284	0	True				
ANR	737288	IdentifierDecl	* core = ( RCore * ) user		737284	0					
ANR	737289	IdentifierDeclType	RCore *		737284	0					
ANR	737290	Identifier	core		737284	1					
ANR	737291	AssignmentExpression	* core = ( RCore * ) user		737284	2		=			
ANR	737292	Identifier	core		737284	0					
ANR	737293	CastExpression	( RCore * ) user		737284	1					
ANR	737294	CastTarget	RCore *		737284	0					
ANR	737295	Identifier	user		737284	1					
ANR	737296	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1264:1:35372:35411	737284	1	True				
ANR	737297	IdentifierDecl	* node = ( RConfigNode * ) data		737284	0					
ANR	737298	IdentifierDeclType	RConfigNode *		737284	0					
ANR	737299	Identifier	node		737284	1					
ANR	737300	AssignmentExpression	* node = ( RConfigNode * ) data		737284	2		=			
ANR	737301	Identifier	node		737284	0					
ANR	737302	CastExpression	( RConfigNode * ) data		737284	1					
ANR	737303	CastTarget	RConfigNode *		737284	0					
ANR	737304	Identifier	data		737284	1					
ANR	737305	ExpressionStatement	free ( core -> dbg -> glob_libs )	1265:1:35414:35441	737284	2	True				
ANR	737306	CallExpression	free ( core -> dbg -> glob_libs )		737284	0					
ANR	737307	Callee	free		737284	0					
ANR	737308	Identifier	free		737284	0					
ANR	737309	ArgumentList	core -> dbg -> glob_libs		737284	1					
ANR	737310	Argument	core -> dbg -> glob_libs		737284	0					
ANR	737311	PtrMemberAccess	core -> dbg -> glob_libs		737284	0					
ANR	737312	PtrMemberAccess	core -> dbg		737284	0					
ANR	737313	Identifier	core		737284	0					
ANR	737314	Identifier	dbg		737284	1					
ANR	737315	Identifier	glob_libs		737284	1					
ANR	737316	ExpressionStatement	core -> dbg -> glob_libs = strdup ( node -> value )	1266:1:35444:35487	737284	3	True				
ANR	737317	AssignmentExpression	core -> dbg -> glob_libs = strdup ( node -> value )		737284	0		=			
ANR	737318	PtrMemberAccess	core -> dbg -> glob_libs		737284	0					
ANR	737319	PtrMemberAccess	core -> dbg		737284	0					
ANR	737320	Identifier	core		737284	0					
ANR	737321	Identifier	dbg		737284	1					
ANR	737322	Identifier	glob_libs		737284	1					
ANR	737323	CallExpression	strdup ( node -> value )		737284	1					
ANR	737324	Callee	strdup		737284	0					
ANR	737325	Identifier	strdup		737284	0					
ANR	737326	ArgumentList	node -> value		737284	1					
ANR	737327	Argument	node -> value		737284	0					
ANR	737328	PtrMemberAccess	node -> value		737284	0					
ANR	737329	Identifier	node		737284	0					
ANR	737330	Identifier	value		737284	1					
ANR	737331	ReturnStatement	return true ;	1267:1:35490:35501	737284	4	True				
ANR	737332	Identifier	true		737284	0					
ANR	737333	ReturnType	static bool		737284	1					
ANR	737334	Identifier	cb_dbg_libs		737284	2					
ANR	737335	ParameterList	"void * user , void * data"		737284	3					
ANR	737336	Parameter	void * user	1262:24:35315:35324	737284	0	True				
ANR	737337	ParameterType	void *		737284	0					
ANR	737338	Identifier	user		737284	1					
ANR	737339	Parameter	void * data	1262:36:35327:35336	737284	1	True				
ANR	737340	ParameterType	void *		737284	0					
ANR	737341	Identifier	data		737284	1					
ANR	737342	CFGEntryNode	ENTRY		737284		True				
ANR	737343	CFGExitNode	EXIT		737284		True				
ANR	737344	Symbol	data		737284						
ANR	737345	Symbol	* core		737284						
ANR	737346	Symbol	core -> dbg -> glob_libs		737284						
ANR	737347	Symbol	node -> value		737284						
ANR	737348	Symbol	core		737284						
ANR	737349	Symbol	node		737284						
ANR	737350	Symbol	true		737284						
ANR	737351	Symbol	* node		737284						
ANR	737352	Symbol	strdup		737284						
ANR	737353	Symbol	user		737284						
ANR	737354	Symbol	* core -> dbg		737284						
ANR	737355	Symbol	* * core		737284						
ANR	737356	Symbol	core -> dbg		737284						
ANR	737357	Function	cb_dbg_unlibs	1270:0:35506:35724							
ANR	737358	FunctionDef	"cb_dbg_unlibs (void * user , void * data)"		737357	0					
ANR	737359	CompoundStatement		1270:50:35556:35724	737357	0					
ANR	737360	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1271:1:35559:35586	737357	0	True				
ANR	737361	IdentifierDecl	* core = ( RCore * ) user		737357	0					
ANR	737362	IdentifierDeclType	RCore *		737357	0					
ANR	737363	Identifier	core		737357	1					
ANR	737364	AssignmentExpression	* core = ( RCore * ) user		737357	2		=			
ANR	737365	Identifier	core		737357	0					
ANR	737366	CastExpression	( RCore * ) user		737357	1					
ANR	737367	CastTarget	RCore *		737357	0					
ANR	737368	Identifier	user		737357	1					
ANR	737369	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1272:1:35589:35628	737357	1	True				
ANR	737370	IdentifierDecl	* node = ( RConfigNode * ) data		737357	0					
ANR	737371	IdentifierDeclType	RConfigNode *		737357	0					
ANR	737372	Identifier	node		737357	1					
ANR	737373	AssignmentExpression	* node = ( RConfigNode * ) data		737357	2		=			
ANR	737374	Identifier	node		737357	0					
ANR	737375	CastExpression	( RConfigNode * ) data		737357	1					
ANR	737376	CastTarget	RConfigNode *		737357	0					
ANR	737377	Identifier	data		737357	1					
ANR	737378	ExpressionStatement	free ( core -> dbg -> glob_unlibs )	1273:1:35631:35660	737357	2	True				
ANR	737379	CallExpression	free ( core -> dbg -> glob_unlibs )		737357	0					
ANR	737380	Callee	free		737357	0					
ANR	737381	Identifier	free		737357	0					
ANR	737382	ArgumentList	core -> dbg -> glob_unlibs		737357	1					
ANR	737383	Argument	core -> dbg -> glob_unlibs		737357	0					
ANR	737384	PtrMemberAccess	core -> dbg -> glob_unlibs		737357	0					
ANR	737385	PtrMemberAccess	core -> dbg		737357	0					
ANR	737386	Identifier	core		737357	0					
ANR	737387	Identifier	dbg		737357	1					
ANR	737388	Identifier	glob_unlibs		737357	1					
ANR	737389	ExpressionStatement	core -> dbg -> glob_unlibs = strdup ( node -> value )	1274:1:35663:35708	737357	3	True				
ANR	737390	AssignmentExpression	core -> dbg -> glob_unlibs = strdup ( node -> value )		737357	0		=			
ANR	737391	PtrMemberAccess	core -> dbg -> glob_unlibs		737357	0					
ANR	737392	PtrMemberAccess	core -> dbg		737357	0					
ANR	737393	Identifier	core		737357	0					
ANR	737394	Identifier	dbg		737357	1					
ANR	737395	Identifier	glob_unlibs		737357	1					
ANR	737396	CallExpression	strdup ( node -> value )		737357	1					
ANR	737397	Callee	strdup		737357	0					
ANR	737398	Identifier	strdup		737357	0					
ANR	737399	ArgumentList	node -> value		737357	1					
ANR	737400	Argument	node -> value		737357	0					
ANR	737401	PtrMemberAccess	node -> value		737357	0					
ANR	737402	Identifier	node		737357	0					
ANR	737403	Identifier	value		737357	1					
ANR	737404	ReturnStatement	return true ;	1275:1:35711:35722	737357	4	True				
ANR	737405	Identifier	true		737357	0					
ANR	737406	ReturnType	static bool		737357	1					
ANR	737407	Identifier	cb_dbg_unlibs		737357	2					
ANR	737408	ParameterList	"void * user , void * data"		737357	3					
ANR	737409	Parameter	void * user	1270:26:35532:35541	737357	0	True				
ANR	737410	ParameterType	void *		737357	0					
ANR	737411	Identifier	user		737357	1					
ANR	737412	Parameter	void * data	1270:38:35544:35553	737357	1	True				
ANR	737413	ParameterType	void *		737357	0					
ANR	737414	Identifier	data		737357	1					
ANR	737415	CFGEntryNode	ENTRY		737357		True				
ANR	737416	CFGExitNode	EXIT		737357		True				
ANR	737417	Symbol	data		737357						
ANR	737418	Symbol	* core		737357						
ANR	737419	Symbol	node -> value		737357						
ANR	737420	Symbol	core		737357						
ANR	737421	Symbol	node		737357						
ANR	737422	Symbol	core -> dbg -> glob_unlibs		737357						
ANR	737423	Symbol	true		737357						
ANR	737424	Symbol	* node		737357						
ANR	737425	Symbol	strdup		737357						
ANR	737426	Symbol	user		737357						
ANR	737427	Symbol	* core -> dbg		737357						
ANR	737428	Symbol	* * core		737357						
ANR	737429	Symbol	core -> dbg		737357						
ANR	737430	Function	cb_dbg_forks	1278:0:35727:35978							
ANR	737431	FunctionDef	"cb_dbg_forks (void * user , void * data)"		737430	0					
ANR	737432	CompoundStatement		1278:49:35776:35978	737430	0					
ANR	737433	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1279:1:35779:35806	737430	0	True				
ANR	737434	IdentifierDecl	* core = ( RCore * ) user		737430	0					
ANR	737435	IdentifierDeclType	RCore *		737430	0					
ANR	737436	Identifier	core		737430	1					
ANR	737437	AssignmentExpression	* core = ( RCore * ) user		737430	2		=			
ANR	737438	Identifier	core		737430	0					
ANR	737439	CastExpression	( RCore * ) user		737430	1					
ANR	737440	CastTarget	RCore *		737430	0					
ANR	737441	Identifier	user		737430	1					
ANR	737442	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1280:1:35809:35848	737430	1	True				
ANR	737443	IdentifierDecl	* node = ( RConfigNode * ) data		737430	0					
ANR	737444	IdentifierDeclType	RConfigNode *		737430	0					
ANR	737445	Identifier	node		737430	1					
ANR	737446	AssignmentExpression	* node = ( RConfigNode * ) data		737430	2		=			
ANR	737447	Identifier	node		737430	0					
ANR	737448	CastExpression	( RConfigNode * ) data		737430	1					
ANR	737449	CastTarget	RConfigNode *		737430	0					
ANR	737450	Identifier	data		737430	1					
ANR	737451	ExpressionStatement	core -> dbg -> trace_forks = node -> i_value	1281:1:35851:35889	737430	2	True				
ANR	737452	AssignmentExpression	core -> dbg -> trace_forks = node -> i_value		737430	0		=			
ANR	737453	PtrMemberAccess	core -> dbg -> trace_forks		737430	0					
ANR	737454	PtrMemberAccess	core -> dbg		737430	0					
ANR	737455	Identifier	core		737430	0					
ANR	737456	Identifier	dbg		737430	1					
ANR	737457	Identifier	trace_forks		737430	1					
ANR	737458	PtrMemberAccess	node -> i_value		737430	1					
ANR	737459	Identifier	node		737430	0					
ANR	737460	Identifier	i_value		737430	1					
ANR	737461	IfStatement	if ( core -> io -> debug )		737430	3					
ANR	737462	Condition	core -> io -> debug	1282:5:35896:35910	737430	0	True				
ANR	737463	PtrMemberAccess	core -> io -> debug		737430	0					
ANR	737464	PtrMemberAccess	core -> io		737430	0					
ANR	737465	Identifier	core		737430	0					
ANR	737466	Identifier	io		737430	1					
ANR	737467	Identifier	debug		737430	1					
ANR	737468	CompoundStatement		5:22:136:136	737430	1					
ANR	737469	ExpressionStatement	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"	1283:2:35917:35959	737430	0	True				
ANR	737470	CallExpression	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"		737430	0					
ANR	737471	Callee	r_debug_attach		737430	0					
ANR	737472	Identifier	r_debug_attach		737430	0					
ANR	737473	ArgumentList	core -> dbg		737430	1					
ANR	737474	Argument	core -> dbg		737430	0					
ANR	737475	PtrMemberAccess	core -> dbg		737430	0					
ANR	737476	Identifier	core		737430	0					
ANR	737477	Identifier	dbg		737430	1					
ANR	737478	Argument	core -> dbg -> pid		737430	1					
ANR	737479	PtrMemberAccess	core -> dbg -> pid		737430	0					
ANR	737480	PtrMemberAccess	core -> dbg		737430	0					
ANR	737481	Identifier	core		737430	0					
ANR	737482	Identifier	dbg		737430	1					
ANR	737483	Identifier	pid		737430	1					
ANR	737484	ReturnStatement	return true ;	1285:1:35965:35976	737430	4	True				
ANR	737485	Identifier	true		737430	0					
ANR	737486	ReturnType	static bool		737430	1					
ANR	737487	Identifier	cb_dbg_forks		737430	2					
ANR	737488	ParameterList	"void * user , void * data"		737430	3					
ANR	737489	Parameter	void * user	1278:25:35752:35761	737430	0	True				
ANR	737490	ParameterType	void *		737430	0					
ANR	737491	Identifier	user		737430	1					
ANR	737492	Parameter	void * data	1278:37:35764:35773	737430	1	True				
ANR	737493	ParameterType	void *		737430	0					
ANR	737494	Identifier	data		737430	1					
ANR	737495	CFGEntryNode	ENTRY		737430		True				
ANR	737496	CFGExitNode	EXIT		737430		True				
ANR	737497	Symbol	data		737430						
ANR	737498	Symbol	* core		737430						
ANR	737499	Symbol	core -> dbg -> trace_forks		737430						
ANR	737500	Symbol	node -> i_value		737430						
ANR	737501	Symbol	core		737430						
ANR	737502	Symbol	node		737430						
ANR	737503	Symbol	* core -> io		737430						
ANR	737504	Symbol	core -> io		737430						
ANR	737505	Symbol	core -> io -> debug		737430						
ANR	737506	Symbol	true		737430						
ANR	737507	Symbol	* node		737430						
ANR	737508	Symbol	user		737430						
ANR	737509	Symbol	* core -> dbg		737430						
ANR	737510	Symbol	core -> dbg -> pid		737430						
ANR	737511	Symbol	* * core		737430						
ANR	737512	Symbol	core -> dbg		737430						
ANR	737513	Function	cb_dbg_gdb_page_size	1288:0:35981:36360							
ANR	737514	FunctionDef	"cb_dbg_gdb_page_size (void * user , void * data)"		737513	0					
ANR	737515	CompoundStatement		1288:57:36038:36360	737513	0					
ANR	737516	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1289:1:36041:36068	737513	0	True				
ANR	737517	IdentifierDecl	* core = ( RCore * ) user		737513	0					
ANR	737518	IdentifierDeclType	RCore *		737513	0					
ANR	737519	Identifier	core		737513	1					
ANR	737520	AssignmentExpression	* core = ( RCore * ) user		737513	2		=			
ANR	737521	Identifier	core		737513	0					
ANR	737522	CastExpression	( RCore * ) user		737513	1					
ANR	737523	CastTarget	RCore *		737513	0					
ANR	737524	Identifier	user		737513	1					
ANR	737525	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1290:1:36071:36110	737513	1	True				
ANR	737526	IdentifierDecl	* node = ( RConfigNode * ) data		737513	0					
ANR	737527	IdentifierDeclType	RConfigNode *		737513	0					
ANR	737528	Identifier	node		737513	1					
ANR	737529	AssignmentExpression	* node = ( RConfigNode * ) data		737513	2		=			
ANR	737530	Identifier	node		737513	0					
ANR	737531	CastExpression	( RConfigNode * ) data		737513	1					
ANR	737532	CastTarget	RConfigNode *		737513	0					
ANR	737533	Identifier	data		737513	1					
ANR	737534	IfStatement	if ( node -> i_value < 64 )		737513	2					
ANR	737535	Condition	node -> i_value < 64	1291:5:36117:36134	737513	0	True				
ANR	737536	RelationalExpression	node -> i_value < 64		737513	0		<			
ANR	737537	PtrMemberAccess	node -> i_value		737513	0					
ANR	737538	Identifier	node		737513	0					
ANR	737539	Identifier	i_value		737513	1					
ANR	737540	PrimaryExpression	64		737513	1					
ANR	737541	CompoundStatement		4:25:98:98	737513	1					
ANR	737542	ReturnStatement	return false ;	1292:2:36176:36188	737513	0	True				
ANR	737543	Identifier	false		737513	0					
ANR	737544	IfStatement	if ( isGdbPlugin ( core ) )		737513	3					
ANR	737545	Condition	isGdbPlugin ( core )	1294:5:36198:36215	737513	0	True				
ANR	737546	CallExpression	isGdbPlugin ( core )		737513	0					
ANR	737547	Callee	isGdbPlugin		737513	0					
ANR	737548	Identifier	isGdbPlugin		737513	0					
ANR	737549	ArgumentList	core		737513	1					
ANR	737550	Argument	core		737513	0					
ANR	737551	Identifier	core		737513	0					
ANR	737552	CompoundStatement		8:2:183:195	737513	1					
ANR	737553	IdentifierDeclStatement	char cmd [ 64 ] ;	1295:2:36222:36234	737513	0	True				
ANR	737554	IdentifierDecl	cmd [ 64 ]		737513	0					
ANR	737555	IdentifierDeclType	char [ 64 ]		737513	0					
ANR	737556	Identifier	cmd		737513	1					
ANR	737557	PrimaryExpression	64		737513	2					
ANR	737558	Statement	snprintf	1296:2:36238:36245	737513	1	True				
ANR	737559	Statement	(	1296:11:36247:36247	737513	2	True				
ANR	737560	Statement	cmd	1296:12:36248:36250	737513	3	True				
ANR	737561	Statement	","	1296:15:36251:36251	737513	4	True				
ANR	737562	Statement	sizeof	1296:17:36253:36258	737513	5	True				
ANR	737563	Statement	(	1296:24:36260:36260	737513	6	True				
ANR	737564	Statement	cmd	1296:25:36261:36263	737513	7	True				
ANR	737565	Statement	)	1296:28:36264:36264	737513	8	True				
ANR	737566	Statement	","	1296:29:36265:36265	737513	9	True				
ANR	737567	Statement	"""page_size %"""	1296:31:36267:36279	737513	10	True				
ANR	737568	Statement	PFMT64d	1296:44:36280:36286	737513	11	True				
ANR	737569	Statement	","	1296:51:36287:36287	737513	12	True				
ANR	737570	Statement	node	1296:53:36289:36292	737513	13	True				
ANR	737571	Statement	->	1296:57:36293:36294	737513	14	True				
ANR	737572	Statement	i_value	1296:59:36295:36301	737513	15	True				
ANR	737573	Statement	)	1296:66:36302:36302	737513	16	True				
ANR	737574	ExpressionStatement		1296:67:36303:36303	737513	17	True				
ANR	737575	ExpressionStatement	"free ( r_io_system ( core -> io , cmd ) )"	1297:2:36307:36341	737513	18	True				
ANR	737576	CallExpression	"free ( r_io_system ( core -> io , cmd ) )"		737513	0					
ANR	737577	Callee	free		737513	0					
ANR	737578	Identifier	free		737513	0					
ANR	737579	ArgumentList	"r_io_system ( core -> io , cmd )"		737513	1					
ANR	737580	Argument	"r_io_system ( core -> io , cmd )"		737513	0					
ANR	737581	CallExpression	"r_io_system ( core -> io , cmd )"		737513	0					
ANR	737582	Callee	r_io_system		737513	0					
ANR	737583	Identifier	r_io_system		737513	0					
ANR	737584	ArgumentList	core -> io		737513	1					
ANR	737585	Argument	core -> io		737513	0					
ANR	737586	PtrMemberAccess	core -> io		737513	0					
ANR	737587	Identifier	core		737513	0					
ANR	737588	Identifier	io		737513	1					
ANR	737589	Argument	cmd		737513	1					
ANR	737590	Identifier	cmd		737513	0					
ANR	737591	ReturnStatement	return true ;	1299:1:36347:36358	737513	4	True				
ANR	737592	Identifier	true		737513	0					
ANR	737593	ReturnType	static bool		737513	1					
ANR	737594	Identifier	cb_dbg_gdb_page_size		737513	2					
ANR	737595	ParameterList	"void * user , void * data"		737513	3					
ANR	737596	Parameter	void * user	1288:33:36014:36023	737513	0	True				
ANR	737597	ParameterType	void *		737513	0					
ANR	737598	Identifier	user		737513	1					
ANR	737599	Parameter	void * data	1288:45:36026:36035	737513	1	True				
ANR	737600	ParameterType	void *		737513	0					
ANR	737601	Identifier	data		737513	1					
ANR	737602	CFGEntryNode	ENTRY		737513		True				
ANR	737603	CFGExitNode	EXIT		737513		True				
ANR	737604	Symbol	r_io_system		737513						
ANR	737605	Symbol	data		737513						
ANR	737606	Symbol	isGdbPlugin		737513						
ANR	737607	Symbol	false		737513						
ANR	737608	Symbol	* core		737513						
ANR	737609	Symbol	node -> i_value		737513						
ANR	737610	Symbol	core		737513						
ANR	737611	Symbol	node		737513						
ANR	737612	Symbol	core -> io		737513						
ANR	737613	Symbol	true		737513						
ANR	737614	Symbol	* node		737513						
ANR	737615	Symbol	cmd		737513						
ANR	737616	Symbol	user		737513						
ANR	737617	Function	cb_dbg_gdb_retries	1302:0:36363:36703							
ANR	737618	FunctionDef	"cb_dbg_gdb_retries (void * user , void * data)"		737617	0					
ANR	737619	CompoundStatement		1302:55:36418:36703	737617	0					
ANR	737620	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1303:1:36421:36448	737617	0	True				
ANR	737621	IdentifierDecl	* core = ( RCore * ) user		737617	0					
ANR	737622	IdentifierDeclType	RCore *		737617	0					
ANR	737623	Identifier	core		737617	1					
ANR	737624	AssignmentExpression	* core = ( RCore * ) user		737617	2		=			
ANR	737625	Identifier	core		737617	0					
ANR	737626	CastExpression	( RCore * ) user		737617	1					
ANR	737627	CastTarget	RCore *		737617	0					
ANR	737628	Identifier	user		737617	1					
ANR	737629	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1304:1:36451:36490	737617	1	True				
ANR	737630	IdentifierDecl	* node = ( RConfigNode * ) data		737617	0					
ANR	737631	IdentifierDeclType	RConfigNode *		737617	0					
ANR	737632	Identifier	node		737617	1					
ANR	737633	AssignmentExpression	* node = ( RConfigNode * ) data		737617	2		=			
ANR	737634	Identifier	node		737617	0					
ANR	737635	CastExpression	( RConfigNode * ) data		737617	1					
ANR	737636	CastTarget	RConfigNode *		737617	0					
ANR	737637	Identifier	data		737617	1					
ANR	737638	IfStatement	if ( node -> i_value <= 0 )		737617	2					
ANR	737639	Condition	node -> i_value <= 0	1305:5:36497:36514	737617	0	True				
ANR	737640	RelationalExpression	node -> i_value <= 0		737617	0		<=			
ANR	737641	PtrMemberAccess	node -> i_value		737617	0					
ANR	737642	Identifier	node		737617	0					
ANR	737643	Identifier	i_value		737617	1					
ANR	737644	PrimaryExpression	0		737617	1					
ANR	737645	CompoundStatement		4:25:98:98	737617	1					
ANR	737646	ReturnStatement	return false ;	1306:2:36521:36533	737617	0	True				
ANR	737647	Identifier	false		737617	0					
ANR	737648	IfStatement	if ( isGdbPlugin ( core ) )		737617	3					
ANR	737649	Condition	isGdbPlugin ( core )	1308:5:36543:36560	737617	0	True				
ANR	737650	CallExpression	isGdbPlugin ( core )		737617	0					
ANR	737651	Callee	isGdbPlugin		737617	0					
ANR	737652	Identifier	isGdbPlugin		737617	0					
ANR	737653	ArgumentList	core		737617	1					
ANR	737654	Argument	core		737617	0					
ANR	737655	Identifier	core		737617	0					
ANR	737656	CompoundStatement		8:2:148:160	737617	1					
ANR	737657	IdentifierDeclStatement	char cmd [ 64 ] ;	1309:2:36567:36579	737617	0	True				
ANR	737658	IdentifierDecl	cmd [ 64 ]		737617	0					
ANR	737659	IdentifierDeclType	char [ 64 ]		737617	0					
ANR	737660	Identifier	cmd		737617	1					
ANR	737661	PrimaryExpression	64		737617	2					
ANR	737662	Statement	snprintf	1310:2:36583:36590	737617	1	True				
ANR	737663	Statement	(	1310:11:36592:36592	737617	2	True				
ANR	737664	Statement	cmd	1310:12:36593:36595	737617	3	True				
ANR	737665	Statement	","	1310:15:36596:36596	737617	4	True				
ANR	737666	Statement	sizeof	1310:17:36598:36603	737617	5	True				
ANR	737667	Statement	(	1310:24:36605:36605	737617	6	True				
ANR	737668	Statement	cmd	1310:25:36606:36608	737617	7	True				
ANR	737669	Statement	)	1310:28:36609:36609	737617	8	True				
ANR	737670	Statement	","	1310:29:36610:36610	737617	9	True				
ANR	737671	Statement	"""retries %"""	1310:31:36612:36622	737617	10	True				
ANR	737672	Statement	PFMT64d	1310:42:36623:36629	737617	11	True				
ANR	737673	Statement	","	1310:49:36630:36630	737617	12	True				
ANR	737674	Statement	node	1310:51:36632:36635	737617	13	True				
ANR	737675	Statement	->	1310:55:36636:36637	737617	14	True				
ANR	737676	Statement	i_value	1310:57:36638:36644	737617	15	True				
ANR	737677	Statement	)	1310:64:36645:36645	737617	16	True				
ANR	737678	ExpressionStatement		1310:65:36646:36646	737617	17	True				
ANR	737679	ExpressionStatement	"free ( r_io_system ( core -> io , cmd ) )"	1311:2:36650:36684	737617	18	True				
ANR	737680	CallExpression	"free ( r_io_system ( core -> io , cmd ) )"		737617	0					
ANR	737681	Callee	free		737617	0					
ANR	737682	Identifier	free		737617	0					
ANR	737683	ArgumentList	"r_io_system ( core -> io , cmd )"		737617	1					
ANR	737684	Argument	"r_io_system ( core -> io , cmd )"		737617	0					
ANR	737685	CallExpression	"r_io_system ( core -> io , cmd )"		737617	0					
ANR	737686	Callee	r_io_system		737617	0					
ANR	737687	Identifier	r_io_system		737617	0					
ANR	737688	ArgumentList	core -> io		737617	1					
ANR	737689	Argument	core -> io		737617	0					
ANR	737690	PtrMemberAccess	core -> io		737617	0					
ANR	737691	Identifier	core		737617	0					
ANR	737692	Identifier	io		737617	1					
ANR	737693	Argument	cmd		737617	1					
ANR	737694	Identifier	cmd		737617	0					
ANR	737695	ReturnStatement	return true ;	1313:1:36690:36701	737617	4	True				
ANR	737696	Identifier	true		737617	0					
ANR	737697	ReturnType	static bool		737617	1					
ANR	737698	Identifier	cb_dbg_gdb_retries		737617	2					
ANR	737699	ParameterList	"void * user , void * data"		737617	3					
ANR	737700	Parameter	void * user	1302:31:36394:36403	737617	0	True				
ANR	737701	ParameterType	void *		737617	0					
ANR	737702	Identifier	user		737617	1					
ANR	737703	Parameter	void * data	1302:43:36406:36415	737617	1	True				
ANR	737704	ParameterType	void *		737617	0					
ANR	737705	Identifier	data		737617	1					
ANR	737706	CFGEntryNode	ENTRY		737617		True				
ANR	737707	CFGExitNode	EXIT		737617		True				
ANR	737708	Symbol	r_io_system		737617						
ANR	737709	Symbol	data		737617						
ANR	737710	Symbol	isGdbPlugin		737617						
ANR	737711	Symbol	false		737617						
ANR	737712	Symbol	* core		737617						
ANR	737713	Symbol	node -> i_value		737617						
ANR	737714	Symbol	core		737617						
ANR	737715	Symbol	node		737617						
ANR	737716	Symbol	core -> io		737617						
ANR	737717	Symbol	true		737617						
ANR	737718	Symbol	* node		737617						
ANR	737719	Symbol	cmd		737617						
ANR	737720	Symbol	user		737617						
ANR	737721	Function	cb_dbg_execs	1316:0:36706:37080							
ANR	737722	FunctionDef	"cb_dbg_execs (void * user , void * data)"		737721	0					
ANR	737723	CompoundStatement		1316:49:36755:37080	737721	0					
ANR	737724	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1317:1:36758:36797	737721	0	True				
ANR	737725	IdentifierDecl	* node = ( RConfigNode * ) data		737721	0					
ANR	737726	IdentifierDeclType	RConfigNode *		737721	0					
ANR	737727	Identifier	node		737721	1					
ANR	737728	AssignmentExpression	* node = ( RConfigNode * ) data		737721	2		=			
ANR	737729	Identifier	node		737721	0					
ANR	737730	CastExpression	( RConfigNode * ) data		737721	1					
ANR	737731	CastTarget	RConfigNode *		737721	0					
ANR	737732	Identifier	data		737721	1					
ANR	737733	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1319:1:36814:36841	737721	1	True				
ANR	737734	IdentifierDecl	* core = ( RCore * ) user		737721	0					
ANR	737735	IdentifierDeclType	RCore *		737721	0					
ANR	737736	Identifier	core		737721	1					
ANR	737737	AssignmentExpression	* core = ( RCore * ) user		737721	2		=			
ANR	737738	Identifier	core		737721	0					
ANR	737739	CastExpression	( RCore * ) user		737721	1					
ANR	737740	CastTarget	RCore *		737721	0					
ANR	737741	Identifier	user		737721	1					
ANR	737742	ExpressionStatement	core -> dbg -> trace_execs = node -> i_value	1320:1:36844:36882	737721	2	True				
ANR	737743	AssignmentExpression	core -> dbg -> trace_execs = node -> i_value		737721	0		=			
ANR	737744	PtrMemberAccess	core -> dbg -> trace_execs		737721	0					
ANR	737745	PtrMemberAccess	core -> dbg		737721	0					
ANR	737746	Identifier	core		737721	0					
ANR	737747	Identifier	dbg		737721	1					
ANR	737748	Identifier	trace_execs		737721	1					
ANR	737749	PtrMemberAccess	node -> i_value		737721	1					
ANR	737750	Identifier	node		737721	0					
ANR	737751	Identifier	i_value		737721	1					
ANR	737752	IfStatement	if ( core -> io -> debug )		737721	3					
ANR	737753	Condition	core -> io -> debug	1321:5:36889:36903	737721	0	True				
ANR	737754	PtrMemberAccess	core -> io -> debug		737721	0					
ANR	737755	PtrMemberAccess	core -> io		737721	0					
ANR	737756	Identifier	core		737721	0					
ANR	737757	Identifier	io		737721	1					
ANR	737758	Identifier	debug		737721	1					
ANR	737759	CompoundStatement		6:22:150:150	737721	1					
ANR	737760	ExpressionStatement	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"	1322:2:36910:36952	737721	0	True				
ANR	737761	CallExpression	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"		737721	0					
ANR	737762	Callee	r_debug_attach		737721	0					
ANR	737763	Identifier	r_debug_attach		737721	0					
ANR	737764	ArgumentList	core -> dbg		737721	1					
ANR	737765	Argument	core -> dbg		737721	0					
ANR	737766	PtrMemberAccess	core -> dbg		737721	0					
ANR	737767	Identifier	core		737721	0					
ANR	737768	Identifier	dbg		737721	1					
ANR	737769	Argument	core -> dbg -> pid		737721	1					
ANR	737770	PtrMemberAccess	core -> dbg -> pid		737721	0					
ANR	737771	PtrMemberAccess	core -> dbg		737721	0					
ANR	737772	Identifier	core		737721	0					
ANR	737773	Identifier	dbg		737721	1					
ANR	737774	Identifier	pid		737721	1					
ANR	737775	ReturnStatement	return true ;	1329:1:37067:37078	737721	4	True				
ANR	737776	Identifier	true		737721	0					
ANR	737777	ReturnType	static bool		737721	1					
ANR	737778	Identifier	cb_dbg_execs		737721	2					
ANR	737779	ParameterList	"void * user , void * data"		737721	3					
ANR	737780	Parameter	void * user	1316:25:36731:36740	737721	0	True				
ANR	737781	ParameterType	void *		737721	0					
ANR	737782	Identifier	user		737721	1					
ANR	737783	Parameter	void * data	1316:37:36743:36752	737721	1	True				
ANR	737784	ParameterType	void *		737721	0					
ANR	737785	Identifier	data		737721	1					
ANR	737786	CFGEntryNode	ENTRY		737721		True				
ANR	737787	CFGExitNode	EXIT		737721		True				
ANR	737788	Symbol	data		737721						
ANR	737789	Symbol	* core		737721						
ANR	737790	Symbol	core -> dbg -> trace_execs		737721						
ANR	737791	Symbol	node -> i_value		737721						
ANR	737792	Symbol	node		737721						
ANR	737793	Symbol	core		737721						
ANR	737794	Symbol	* core -> io		737721						
ANR	737795	Symbol	core -> io		737721						
ANR	737796	Symbol	core -> io -> debug		737721						
ANR	737797	Symbol	true		737721						
ANR	737798	Symbol	* node		737721						
ANR	737799	Symbol	user		737721						
ANR	737800	Symbol	* core -> dbg		737721						
ANR	737801	Symbol	core -> dbg -> pid		737721						
ANR	737802	Symbol	* * core		737721						
ANR	737803	Symbol	core -> dbg		737721						
ANR	737804	Function	cb_dbg_clone	1332:0:37083:37334							
ANR	737805	FunctionDef	"cb_dbg_clone (void * user , void * data)"		737804	0					
ANR	737806	CompoundStatement		1332:49:37132:37334	737804	0					
ANR	737807	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1333:1:37135:37162	737804	0	True				
ANR	737808	IdentifierDecl	* core = ( RCore * ) user		737804	0					
ANR	737809	IdentifierDeclType	RCore *		737804	0					
ANR	737810	Identifier	core		737804	1					
ANR	737811	AssignmentExpression	* core = ( RCore * ) user		737804	2		=			
ANR	737812	Identifier	core		737804	0					
ANR	737813	CastExpression	( RCore * ) user		737804	1					
ANR	737814	CastTarget	RCore *		737804	0					
ANR	737815	Identifier	user		737804	1					
ANR	737816	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1334:1:37165:37204	737804	1	True				
ANR	737817	IdentifierDecl	* node = ( RConfigNode * ) data		737804	0					
ANR	737818	IdentifierDeclType	RConfigNode *		737804	0					
ANR	737819	Identifier	node		737804	1					
ANR	737820	AssignmentExpression	* node = ( RConfigNode * ) data		737804	2		=			
ANR	737821	Identifier	node		737804	0					
ANR	737822	CastExpression	( RConfigNode * ) data		737804	1					
ANR	737823	CastTarget	RConfigNode *		737804	0					
ANR	737824	Identifier	data		737804	1					
ANR	737825	ExpressionStatement	core -> dbg -> trace_clone = node -> i_value	1335:1:37207:37245	737804	2	True				
ANR	737826	AssignmentExpression	core -> dbg -> trace_clone = node -> i_value		737804	0		=			
ANR	737827	PtrMemberAccess	core -> dbg -> trace_clone		737804	0					
ANR	737828	PtrMemberAccess	core -> dbg		737804	0					
ANR	737829	Identifier	core		737804	0					
ANR	737830	Identifier	dbg		737804	1					
ANR	737831	Identifier	trace_clone		737804	1					
ANR	737832	PtrMemberAccess	node -> i_value		737804	1					
ANR	737833	Identifier	node		737804	0					
ANR	737834	Identifier	i_value		737804	1					
ANR	737835	IfStatement	if ( core -> io -> debug )		737804	3					
ANR	737836	Condition	core -> io -> debug	1336:5:37252:37266	737804	0	True				
ANR	737837	PtrMemberAccess	core -> io -> debug		737804	0					
ANR	737838	PtrMemberAccess	core -> io		737804	0					
ANR	737839	Identifier	core		737804	0					
ANR	737840	Identifier	io		737804	1					
ANR	737841	Identifier	debug		737804	1					
ANR	737842	CompoundStatement		5:22:136:136	737804	1					
ANR	737843	ExpressionStatement	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"	1337:2:37273:37315	737804	0	True				
ANR	737844	CallExpression	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"		737804	0					
ANR	737845	Callee	r_debug_attach		737804	0					
ANR	737846	Identifier	r_debug_attach		737804	0					
ANR	737847	ArgumentList	core -> dbg		737804	1					
ANR	737848	Argument	core -> dbg		737804	0					
ANR	737849	PtrMemberAccess	core -> dbg		737804	0					
ANR	737850	Identifier	core		737804	0					
ANR	737851	Identifier	dbg		737804	1					
ANR	737852	Argument	core -> dbg -> pid		737804	1					
ANR	737853	PtrMemberAccess	core -> dbg -> pid		737804	0					
ANR	737854	PtrMemberAccess	core -> dbg		737804	0					
ANR	737855	Identifier	core		737804	0					
ANR	737856	Identifier	dbg		737804	1					
ANR	737857	Identifier	pid		737804	1					
ANR	737858	ReturnStatement	return true ;	1339:1:37321:37332	737804	4	True				
ANR	737859	Identifier	true		737804	0					
ANR	737860	ReturnType	static bool		737804	1					
ANR	737861	Identifier	cb_dbg_clone		737804	2					
ANR	737862	ParameterList	"void * user , void * data"		737804	3					
ANR	737863	Parameter	void * user	1332:25:37108:37117	737804	0	True				
ANR	737864	ParameterType	void *		737804	0					
ANR	737865	Identifier	user		737804	1					
ANR	737866	Parameter	void * data	1332:37:37120:37129	737804	1	True				
ANR	737867	ParameterType	void *		737804	0					
ANR	737868	Identifier	data		737804	1					
ANR	737869	CFGEntryNode	ENTRY		737804		True				
ANR	737870	CFGExitNode	EXIT		737804		True				
ANR	737871	Symbol	data		737804						
ANR	737872	Symbol	* core		737804						
ANR	737873	Symbol	core -> dbg -> trace_clone		737804						
ANR	737874	Symbol	node -> i_value		737804						
ANR	737875	Symbol	core		737804						
ANR	737876	Symbol	node		737804						
ANR	737877	Symbol	* core -> io		737804						
ANR	737878	Symbol	core -> io		737804						
ANR	737879	Symbol	core -> io -> debug		737804						
ANR	737880	Symbol	true		737804						
ANR	737881	Symbol	* node		737804						
ANR	737882	Symbol	user		737804						
ANR	737883	Symbol	* core -> dbg		737804						
ANR	737884	Symbol	core -> dbg -> pid		737804						
ANR	737885	Symbol	* * core		737804						
ANR	737886	Symbol	core -> dbg		737804						
ANR	737887	Function	cb_dbg_follow_child	1342:0:37337:37523							
ANR	737888	FunctionDef	"cb_dbg_follow_child (void * user , void * data)"		737887	0					
ANR	737889	CompoundStatement		1342:56:37393:37523	737887	0					
ANR	737890	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1343:1:37396:37423	737887	0	True				
ANR	737891	IdentifierDecl	* core = ( RCore * ) user		737887	0					
ANR	737892	IdentifierDeclType	RCore *		737887	0					
ANR	737893	Identifier	core		737887	1					
ANR	737894	AssignmentExpression	* core = ( RCore * ) user		737887	2		=			
ANR	737895	Identifier	core		737887	0					
ANR	737896	CastExpression	( RCore * ) user		737887	1					
ANR	737897	CastTarget	RCore *		737887	0					
ANR	737898	Identifier	user		737887	1					
ANR	737899	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1344:1:37426:37465	737887	1	True				
ANR	737900	IdentifierDecl	* node = ( RConfigNode * ) data		737887	0					
ANR	737901	IdentifierDeclType	RConfigNode *		737887	0					
ANR	737902	Identifier	node		737887	1					
ANR	737903	AssignmentExpression	* node = ( RConfigNode * ) data		737887	2		=			
ANR	737904	Identifier	node		737887	0					
ANR	737905	CastExpression	( RConfigNode * ) data		737887	1					
ANR	737906	CastTarget	RConfigNode *		737887	0					
ANR	737907	Identifier	data		737887	1					
ANR	737908	ExpressionStatement	core -> dbg -> follow_child = node -> i_value	1345:1:37468:37507	737887	2	True				
ANR	737909	AssignmentExpression	core -> dbg -> follow_child = node -> i_value		737887	0		=			
ANR	737910	PtrMemberAccess	core -> dbg -> follow_child		737887	0					
ANR	737911	PtrMemberAccess	core -> dbg		737887	0					
ANR	737912	Identifier	core		737887	0					
ANR	737913	Identifier	dbg		737887	1					
ANR	737914	Identifier	follow_child		737887	1					
ANR	737915	PtrMemberAccess	node -> i_value		737887	1					
ANR	737916	Identifier	node		737887	0					
ANR	737917	Identifier	i_value		737887	1					
ANR	737918	ReturnStatement	return true ;	1346:1:37510:37521	737887	3	True				
ANR	737919	Identifier	true		737887	0					
ANR	737920	ReturnType	static bool		737887	1					
ANR	737921	Identifier	cb_dbg_follow_child		737887	2					
ANR	737922	ParameterList	"void * user , void * data"		737887	3					
ANR	737923	Parameter	void * user	1342:32:37369:37378	737887	0	True				
ANR	737924	ParameterType	void *		737887	0					
ANR	737925	Identifier	user		737887	1					
ANR	737926	Parameter	void * data	1342:44:37381:37390	737887	1	True				
ANR	737927	ParameterType	void *		737887	0					
ANR	737928	Identifier	data		737887	1					
ANR	737929	CFGEntryNode	ENTRY		737887		True				
ANR	737930	CFGExitNode	EXIT		737887		True				
ANR	737931	Symbol	core		737887						
ANR	737932	Symbol	node		737887						
ANR	737933	Symbol	data		737887						
ANR	737934	Symbol	* core		737887						
ANR	737935	Symbol	true		737887						
ANR	737936	Symbol	* node		737887						
ANR	737937	Symbol	user		737887						
ANR	737938	Symbol	* core -> dbg		737887						
ANR	737939	Symbol	* * core		737887						
ANR	737940	Symbol	node -> i_value		737887						
ANR	737941	Symbol	core -> dbg -> follow_child		737887						
ANR	737942	Symbol	core -> dbg		737887						
ANR	737943	Function	cb_dbg_aftersc	1349:0:37526:37786							
ANR	737944	FunctionDef	"cb_dbg_aftersc (void * user , void * data)"		737943	0					
ANR	737945	CompoundStatement		1349:51:37577:37786	737943	0					
ANR	737946	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1350:1:37580:37607	737943	0	True				
ANR	737947	IdentifierDecl	* core = ( RCore * ) user		737943	0					
ANR	737948	IdentifierDeclType	RCore *		737943	0					
ANR	737949	Identifier	core		737943	1					
ANR	737950	AssignmentExpression	* core = ( RCore * ) user		737943	2		=			
ANR	737951	Identifier	core		737943	0					
ANR	737952	CastExpression	( RCore * ) user		737943	1					
ANR	737953	CastTarget	RCore *		737943	0					
ANR	737954	Identifier	user		737943	1					
ANR	737955	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1351:1:37610:37649	737943	1	True				
ANR	737956	IdentifierDecl	* node = ( RConfigNode * ) data		737943	0					
ANR	737957	IdentifierDeclType	RConfigNode *		737943	0					
ANR	737958	Identifier	node		737943	1					
ANR	737959	AssignmentExpression	* node = ( RConfigNode * ) data		737943	2		=			
ANR	737960	Identifier	node		737943	0					
ANR	737961	CastExpression	( RConfigNode * ) data		737943	1					
ANR	737962	CastTarget	RConfigNode *		737943	0					
ANR	737963	Identifier	data		737943	1					
ANR	737964	ExpressionStatement	core -> dbg -> trace_aftersyscall = node -> i_value	1352:1:37652:37697	737943	2	True				
ANR	737965	AssignmentExpression	core -> dbg -> trace_aftersyscall = node -> i_value		737943	0		=			
ANR	737966	PtrMemberAccess	core -> dbg -> trace_aftersyscall		737943	0					
ANR	737967	PtrMemberAccess	core -> dbg		737943	0					
ANR	737968	Identifier	core		737943	0					
ANR	737969	Identifier	dbg		737943	1					
ANR	737970	Identifier	trace_aftersyscall		737943	1					
ANR	737971	PtrMemberAccess	node -> i_value		737943	1					
ANR	737972	Identifier	node		737943	0					
ANR	737973	Identifier	i_value		737943	1					
ANR	737974	IfStatement	if ( core -> io -> debug )		737943	3					
ANR	737975	Condition	core -> io -> debug	1353:5:37704:37718	737943	0	True				
ANR	737976	PtrMemberAccess	core -> io -> debug		737943	0					
ANR	737977	PtrMemberAccess	core -> io		737943	0					
ANR	737978	Identifier	core		737943	0					
ANR	737979	Identifier	io		737943	1					
ANR	737980	Identifier	debug		737943	1					
ANR	737981	CompoundStatement		5:22:143:143	737943	1					
ANR	737982	ExpressionStatement	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"	1354:2:37725:37767	737943	0	True				
ANR	737983	CallExpression	"r_debug_attach ( core -> dbg , core -> dbg -> pid )"		737943	0					
ANR	737984	Callee	r_debug_attach		737943	0					
ANR	737985	Identifier	r_debug_attach		737943	0					
ANR	737986	ArgumentList	core -> dbg		737943	1					
ANR	737987	Argument	core -> dbg		737943	0					
ANR	737988	PtrMemberAccess	core -> dbg		737943	0					
ANR	737989	Identifier	core		737943	0					
ANR	737990	Identifier	dbg		737943	1					
ANR	737991	Argument	core -> dbg -> pid		737943	1					
ANR	737992	PtrMemberAccess	core -> dbg -> pid		737943	0					
ANR	737993	PtrMemberAccess	core -> dbg		737943	0					
ANR	737994	Identifier	core		737943	0					
ANR	737995	Identifier	dbg		737943	1					
ANR	737996	Identifier	pid		737943	1					
ANR	737997	ReturnStatement	return true ;	1356:1:37773:37784	737943	4	True				
ANR	737998	Identifier	true		737943	0					
ANR	737999	ReturnType	static bool		737943	1					
ANR	738000	Identifier	cb_dbg_aftersc		737943	2					
ANR	738001	ParameterList	"void * user , void * data"		737943	3					
ANR	738002	Parameter	void * user	1349:27:37553:37562	737943	0	True				
ANR	738003	ParameterType	void *		737943	0					
ANR	738004	Identifier	user		737943	1					
ANR	738005	Parameter	void * data	1349:39:37565:37574	737943	1	True				
ANR	738006	ParameterType	void *		737943	0					
ANR	738007	Identifier	data		737943	1					
ANR	738008	CFGEntryNode	ENTRY		737943		True				
ANR	738009	CFGExitNode	EXIT		737943		True				
ANR	738010	Symbol	core -> dbg -> trace_aftersyscall		737943						
ANR	738011	Symbol	data		737943						
ANR	738012	Symbol	* core		737943						
ANR	738013	Symbol	node -> i_value		737943						
ANR	738014	Symbol	core		737943						
ANR	738015	Symbol	node		737943						
ANR	738016	Symbol	* core -> io		737943						
ANR	738017	Symbol	core -> io		737943						
ANR	738018	Symbol	core -> io -> debug		737943						
ANR	738019	Symbol	true		737943						
ANR	738020	Symbol	* node		737943						
ANR	738021	Symbol	user		737943						
ANR	738022	Symbol	* core -> dbg		737943						
ANR	738023	Symbol	core -> dbg -> pid		737943						
ANR	738024	Symbol	* * core		737943						
ANR	738025	Symbol	core -> dbg		737943						
ANR	738026	Function	cb_runprofile	1359:0:37789:38076							
ANR	738027	FunctionDef	"cb_runprofile (void * user , void * data)"		738026	0					
ANR	738028	CompoundStatement		1359:50:37839:38076	738026	0					
ANR	738029	IdentifierDeclStatement	RCore * r = ( RCore * ) user ;	1360:1:37842:37866	738026	0	True				
ANR	738030	IdentifierDecl	* r = ( RCore * ) user		738026	0					
ANR	738031	IdentifierDeclType	RCore *		738026	0					
ANR	738032	Identifier	r		738026	1					
ANR	738033	AssignmentExpression	* r = ( RCore * ) user		738026	2		=			
ANR	738034	Identifier	r		738026	0					
ANR	738035	CastExpression	( RCore * ) user		738026	1					
ANR	738036	CastTarget	RCore *		738026	0					
ANR	738037	Identifier	user		738026	1					
ANR	738038	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1361:1:37869:37908	738026	1	True				
ANR	738039	IdentifierDecl	* node = ( RConfigNode * ) data		738026	0					
ANR	738040	IdentifierDeclType	RConfigNode *		738026	0					
ANR	738041	Identifier	node		738026	1					
ANR	738042	AssignmentExpression	* node = ( RConfigNode * ) data		738026	2		=			
ANR	738043	Identifier	node		738026	0					
ANR	738044	CastExpression	( RConfigNode * ) data		738026	1					
ANR	738045	CastTarget	RConfigNode *		738026	0					
ANR	738046	Identifier	data		738026	1					
ANR	738047	ExpressionStatement	free ( ( void * ) r -> io -> runprofile )	1362:1:37911:37942	738026	2	True				
ANR	738048	CallExpression	free ( ( void * ) r -> io -> runprofile )		738026	0					
ANR	738049	Callee	free		738026	0					
ANR	738050	Identifier	free		738026	0					
ANR	738051	ArgumentList	( void * ) r -> io -> runprofile		738026	1					
ANR	738052	Argument	( void * ) r -> io -> runprofile		738026	0					
ANR	738053	CastExpression	( void * ) r -> io -> runprofile		738026	0					
ANR	738054	CastTarget	void *		738026	0					
ANR	738055	PtrMemberAccess	r -> io -> runprofile		738026	1					
ANR	738056	PtrMemberAccess	r -> io		738026	0					
ANR	738057	Identifier	r		738026	0					
ANR	738058	Identifier	io		738026	1					
ANR	738059	Identifier	runprofile		738026	1					
ANR	738060	IfStatement	if ( ! node || ! * ( node -> value ) )		738026	3					
ANR	738061	Condition	! node || ! * ( node -> value )	1363:5:37949:37972	738026	0	True				
ANR	738062	OrExpression	! node || ! * ( node -> value )		738026	0		||			
ANR	738063	UnaryOperationExpression	! node		738026	0					
ANR	738064	UnaryOperator	!		738026	0					
ANR	738065	Identifier	node		738026	1					
ANR	738066	UnaryOperationExpression	! * ( node -> value )		738026	1					
ANR	738067	UnaryOperator	!		738026	0					
ANR	738068	UnaryOperationExpression	* ( node -> value )		738026	1					
ANR	738069	UnaryOperator	*		738026	0					
ANR	738070	PtrMemberAccess	node -> value		738026	1					
ANR	738071	Identifier	node		738026	0					
ANR	738072	Identifier	value		738026	1					
ANR	738073	CompoundStatement		5:31:135:135	738026	1					
ANR	738074	ExpressionStatement	r -> io -> runprofile = NULL	1364:2:37979:38003	738026	0	True				
ANR	738075	AssignmentExpression	r -> io -> runprofile = NULL		738026	0		=			
ANR	738076	PtrMemberAccess	r -> io -> runprofile		738026	0					
ANR	738077	PtrMemberAccess	r -> io		738026	0					
ANR	738078	Identifier	r		738026	0					
ANR	738079	Identifier	io		738026	1					
ANR	738080	Identifier	runprofile		738026	1					
ANR	738081	Identifier	NULL		738026	1					
ANR	738082	ElseStatement	else		738026	0					
ANR	738083	CompoundStatement		7:8:173:173	738026	0					
ANR	738084	ExpressionStatement	r -> io -> runprofile = strdup ( node -> value )	1366:2:38017:38057	738026	0	True				
ANR	738085	AssignmentExpression	r -> io -> runprofile = strdup ( node -> value )		738026	0		=			
ANR	738086	PtrMemberAccess	r -> io -> runprofile		738026	0					
ANR	738087	PtrMemberAccess	r -> io		738026	0					
ANR	738088	Identifier	r		738026	0					
ANR	738089	Identifier	io		738026	1					
ANR	738090	Identifier	runprofile		738026	1					
ANR	738091	CallExpression	strdup ( node -> value )		738026	1					
ANR	738092	Callee	strdup		738026	0					
ANR	738093	Identifier	strdup		738026	0					
ANR	738094	ArgumentList	node -> value		738026	1					
ANR	738095	Argument	node -> value		738026	0					
ANR	738096	PtrMemberAccess	node -> value		738026	0					
ANR	738097	Identifier	node		738026	0					
ANR	738098	Identifier	value		738026	1					
ANR	738099	ReturnStatement	return true ;	1368:1:38063:38074	738026	4	True				
ANR	738100	Identifier	true		738026	0					
ANR	738101	ReturnType	static bool		738026	1					
ANR	738102	Identifier	cb_runprofile		738026	2					
ANR	738103	ParameterList	"void * user , void * data"		738026	3					
ANR	738104	Parameter	void * user	1359:26:37815:37824	738026	0	True				
ANR	738105	ParameterType	void *		738026	0					
ANR	738106	Identifier	user		738026	1					
ANR	738107	Parameter	void * data	1359:38:37827:37836	738026	1	True				
ANR	738108	ParameterType	void *		738026	0					
ANR	738109	Identifier	data		738026	1					
ANR	738110	CFGEntryNode	ENTRY		738026		True				
ANR	738111	CFGExitNode	EXIT		738026		True				
ANR	738112	Symbol	* node -> value		738026						
ANR	738113	Symbol	NULL		738026						
ANR	738114	Symbol	data		738026						
ANR	738115	Symbol	* ( node -> value )		738026						
ANR	738116	Symbol	* r -> io		738026						
ANR	738117	Symbol	r -> io -> runprofile		738026						
ANR	738118	Symbol	node -> value		738026						
ANR	738119	Symbol	node		738026						
ANR	738120	Symbol	r		738026						
ANR	738121	Symbol	* * node		738026						
ANR	738122	Symbol	true		738026						
ANR	738123	Symbol	* * r		738026						
ANR	738124	Symbol	* node		738026						
ANR	738125	Symbol	strdup		738026						
ANR	738126	Symbol	* r		738026						
ANR	738127	Symbol	user		738026						
ANR	738128	Symbol	r -> io		738026						
ANR	738129	Function	cb_dbg_args	1371:0:38079:38327							
ANR	738130	FunctionDef	"cb_dbg_args (void * user , void * data)"		738129	0					
ANR	738131	CompoundStatement		1371:48:38127:38327	738129	0					
ANR	738132	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1372:1:38130:38157	738129	0	True				
ANR	738133	IdentifierDecl	* core = ( RCore * ) user		738129	0					
ANR	738134	IdentifierDeclType	RCore *		738129	0					
ANR	738135	Identifier	core		738129	1					
ANR	738136	AssignmentExpression	* core = ( RCore * ) user		738129	2		=			
ANR	738137	Identifier	core		738129	0					
ANR	738138	CastExpression	( RCore * ) user		738129	1					
ANR	738139	CastTarget	RCore *		738129	0					
ANR	738140	Identifier	user		738129	1					
ANR	738141	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1373:1:38160:38199	738129	1	True				
ANR	738142	IdentifierDecl	* node = ( RConfigNode * ) data		738129	0					
ANR	738143	IdentifierDeclType	RConfigNode *		738129	0					
ANR	738144	Identifier	node		738129	1					
ANR	738145	AssignmentExpression	* node = ( RConfigNode * ) data		738129	2		=			
ANR	738146	Identifier	node		738129	0					
ANR	738147	CastExpression	( RConfigNode * ) data		738129	1					
ANR	738148	CastTarget	RConfigNode *		738129	0					
ANR	738149	Identifier	data		738129	1					
ANR	738150	IfStatement	if ( ! node || ! * ( node -> value ) )		738129	2					
ANR	738151	Condition	! node || ! * ( node -> value )	1374:5:38206:38229	738129	0	True				
ANR	738152	OrExpression	! node || ! * ( node -> value )		738129	0		||			
ANR	738153	UnaryOperationExpression	! node		738129	0					
ANR	738154	UnaryOperator	!		738129	0					
ANR	738155	Identifier	node		738129	1					
ANR	738156	UnaryOperationExpression	! * ( node -> value )		738129	1					
ANR	738157	UnaryOperator	!		738129	0					
ANR	738158	UnaryOperationExpression	* ( node -> value )		738129	1					
ANR	738159	UnaryOperator	*		738129	0					
ANR	738160	PtrMemberAccess	node -> value		738129	1					
ANR	738161	Identifier	node		738129	0					
ANR	738162	Identifier	value		738129	1					
ANR	738163	CompoundStatement		4:31:104:104	738129	1					
ANR	738164	ExpressionStatement	core -> io -> args = NULL	1375:2:38236:38257	738129	0	True				
ANR	738165	AssignmentExpression	core -> io -> args = NULL		738129	0		=			
ANR	738166	PtrMemberAccess	core -> io -> args		738129	0					
ANR	738167	PtrMemberAccess	core -> io		738129	0					
ANR	738168	Identifier	core		738129	0					
ANR	738169	Identifier	io		738129	1					
ANR	738170	Identifier	args		738129	1					
ANR	738171	Identifier	NULL		738129	1					
ANR	738172	ElseStatement	else		738129	0					
ANR	738173	CompoundStatement		6:8:139:139	738129	0					
ANR	738174	ExpressionStatement	core -> io -> args = strdup ( node -> value )	1377:2:38271:38308	738129	0	True				
ANR	738175	AssignmentExpression	core -> io -> args = strdup ( node -> value )		738129	0		=			
ANR	738176	PtrMemberAccess	core -> io -> args		738129	0					
ANR	738177	PtrMemberAccess	core -> io		738129	0					
ANR	738178	Identifier	core		738129	0					
ANR	738179	Identifier	io		738129	1					
ANR	738180	Identifier	args		738129	1					
ANR	738181	CallExpression	strdup ( node -> value )		738129	1					
ANR	738182	Callee	strdup		738129	0					
ANR	738183	Identifier	strdup		738129	0					
ANR	738184	ArgumentList	node -> value		738129	1					
ANR	738185	Argument	node -> value		738129	0					
ANR	738186	PtrMemberAccess	node -> value		738129	0					
ANR	738187	Identifier	node		738129	0					
ANR	738188	Identifier	value		738129	1					
ANR	738189	ReturnStatement	return true ;	1379:1:38314:38325	738129	3	True				
ANR	738190	Identifier	true		738129	0					
ANR	738191	ReturnType	static bool		738129	1					
ANR	738192	Identifier	cb_dbg_args		738129	2					
ANR	738193	ParameterList	"void * user , void * data"		738129	3					
ANR	738194	Parameter	void * user	1371:24:38103:38112	738129	0	True				
ANR	738195	ParameterType	void *		738129	0					
ANR	738196	Identifier	user		738129	1					
ANR	738197	Parameter	void * data	1371:36:38115:38124	738129	1	True				
ANR	738198	ParameterType	void *		738129	0					
ANR	738199	Identifier	data		738129	1					
ANR	738200	CFGEntryNode	ENTRY		738129		True				
ANR	738201	CFGExitNode	EXIT		738129		True				
ANR	738202	Symbol	* node -> value		738129						
ANR	738203	Symbol	NULL		738129						
ANR	738204	Symbol	data		738129						
ANR	738205	Symbol	* ( node -> value )		738129						
ANR	738206	Symbol	* core		738129						
ANR	738207	Symbol	node -> value		738129						
ANR	738208	Symbol	core		738129						
ANR	738209	Symbol	node		738129						
ANR	738210	Symbol	* core -> io		738129						
ANR	738211	Symbol	* * node		738129						
ANR	738212	Symbol	core -> io		738129						
ANR	738213	Symbol	true		738129						
ANR	738214	Symbol	* node		738129						
ANR	738215	Symbol	core -> io -> args		738129						
ANR	738216	Symbol	strdup		738129						
ANR	738217	Symbol	user		738129						
ANR	738218	Symbol	* * core		738129						
ANR	738219	Function	cb_dbgstatus	1382:0:38330:38679							
ANR	738220	FunctionDef	"cb_dbgstatus (void * user , void * data)"		738219	0					
ANR	738221	CompoundStatement		1382:49:38379:38679	738219	0					
ANR	738222	IdentifierDeclStatement	RCore * r = ( RCore * ) user ;	1383:1:38382:38406	738219	0	True				
ANR	738223	IdentifierDecl	* r = ( RCore * ) user		738219	0					
ANR	738224	IdentifierDeclType	RCore *		738219	0					
ANR	738225	Identifier	r		738219	1					
ANR	738226	AssignmentExpression	* r = ( RCore * ) user		738219	2		=			
ANR	738227	Identifier	r		738219	0					
ANR	738228	CastExpression	( RCore * ) user		738219	1					
ANR	738229	CastTarget	RCore *		738219	0					
ANR	738230	Identifier	user		738219	1					
ANR	738231	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1384:1:38409:38448	738219	1	True				
ANR	738232	IdentifierDecl	* node = ( RConfigNode * ) data		738219	0					
ANR	738233	IdentifierDeclType	RConfigNode *		738219	0					
ANR	738234	Identifier	node		738219	1					
ANR	738235	AssignmentExpression	* node = ( RConfigNode * ) data		738219	2		=			
ANR	738236	Identifier	node		738219	0					
ANR	738237	CastExpression	( RConfigNode * ) data		738219	1					
ANR	738238	CastTarget	RConfigNode *		738219	0					
ANR	738239	Identifier	data		738219	1					
ANR	738240	IfStatement	"if ( r_config_get_i ( r -> config , ""cfg.debug"" ) )"		738219	2					
ANR	738241	Condition	"r_config_get_i ( r -> config , ""cfg.debug"" )"	1385:5:38455:38493	738219	0	True				
ANR	738242	CallExpression	"r_config_get_i ( r -> config , ""cfg.debug"" )"		738219	0					
ANR	738243	Callee	r_config_get_i		738219	0					
ANR	738244	Identifier	r_config_get_i		738219	0					
ANR	738245	ArgumentList	r -> config		738219	1					
ANR	738246	Argument	r -> config		738219	0					
ANR	738247	PtrMemberAccess	r -> config		738219	0					
ANR	738248	Identifier	r		738219	0					
ANR	738249	Identifier	config		738219	1					
ANR	738250	Argument	"""cfg.debug"""		738219	1					
ANR	738251	PrimaryExpression	"""cfg.debug"""		738219	0					
ANR	738252	CompoundStatement		4:46:116:116	738219	1					
ANR	738253	IfStatement	if ( node -> i_value )		738219	0					
ANR	738254	Condition	node -> i_value	1386:6:38504:38516	738219	0	True				
ANR	738255	PtrMemberAccess	node -> i_value		738219	0					
ANR	738256	Identifier	node		738219	0					
ANR	738257	Identifier	i_value		738219	1					
ANR	738258	CompoundStatement		5:21:139:139	738219	1					
ANR	738259	ExpressionStatement	"r_config_set ( r -> config , ""cmd.prompt"" , "".dr*; drd; sr PC;pi 1;s-"" )"	1387:3:38524:38594	738219	0	True				
ANR	738260	CallExpression	"r_config_set ( r -> config , ""cmd.prompt"" , "".dr*; drd; sr PC;pi 1;s-"" )"		738219	0					
ANR	738261	Callee	r_config_set		738219	0					
ANR	738262	Identifier	r_config_set		738219	0					
ANR	738263	ArgumentList	r -> config		738219	1					
ANR	738264	Argument	r -> config		738219	0					
ANR	738265	PtrMemberAccess	r -> config		738219	0					
ANR	738266	Identifier	r		738219	0					
ANR	738267	Identifier	config		738219	1					
ANR	738268	Argument	"""cmd.prompt"""		738219	1					
ANR	738269	PrimaryExpression	"""cmd.prompt"""		738219	0					
ANR	738270	Argument	""".dr*; drd; sr PC;pi 1;s-"""		738219	2					
ANR	738271	PrimaryExpression	""".dr*; drd; sr PC;pi 1;s-"""		738219	0					
ANR	738272	ElseStatement	else		738219	0					
ANR	738273	CompoundStatement		8:9:225:225	738219	0					
ANR	738274	ExpressionStatement	"r_config_set ( r -> config , ""cmd.prompt"" , "".dr*"" )"	1390:3:38610:38656	738219	0	True				
ANR	738275	CallExpression	"r_config_set ( r -> config , ""cmd.prompt"" , "".dr*"" )"		738219	0					
ANR	738276	Callee	r_config_set		738219	0					
ANR	738277	Identifier	r_config_set		738219	0					
ANR	738278	ArgumentList	r -> config		738219	1					
ANR	738279	Argument	r -> config		738219	0					
ANR	738280	PtrMemberAccess	r -> config		738219	0					
ANR	738281	Identifier	r		738219	0					
ANR	738282	Identifier	config		738219	1					
ANR	738283	Argument	"""cmd.prompt"""		738219	1					
ANR	738284	PrimaryExpression	"""cmd.prompt"""		738219	0					
ANR	738285	Argument	""".dr*"""		738219	2					
ANR	738286	PrimaryExpression	""".dr*"""		738219	0					
ANR	738287	ReturnStatement	return true ;	1393:1:38666:38677	738219	3	True				
ANR	738288	Identifier	true		738219	0					
ANR	738289	ReturnType	static bool		738219	1					
ANR	738290	Identifier	cb_dbgstatus		738219	2					
ANR	738291	ParameterList	"void * user , void * data"		738219	3					
ANR	738292	Parameter	void * user	1382:25:38355:38364	738219	0	True				
ANR	738293	ParameterType	void *		738219	0					
ANR	738294	Identifier	user		738219	1					
ANR	738295	Parameter	void * data	1382:37:38367:38376	738219	1	True				
ANR	738296	ParameterType	void *		738219	0					
ANR	738297	Identifier	data		738219	1					
ANR	738298	CFGEntryNode	ENTRY		738219		True				
ANR	738299	CFGExitNode	EXIT		738219		True				
ANR	738300	Symbol	node		738219						
ANR	738301	Symbol	r		738219						
ANR	738302	Symbol	data		738219						
ANR	738303	Symbol	r_config_get_i		738219						
ANR	738304	Symbol	true		738219						
ANR	738305	Symbol	* node		738219						
ANR	738306	Symbol	* r		738219						
ANR	738307	Symbol	user		738219						
ANR	738308	Symbol	r -> config		738219						
ANR	738309	Symbol	node -> i_value		738219						
ANR	738310	Function	cb_dbgbackend	1396:0:38682:39051							
ANR	738311	FunctionDef	"cb_dbgbackend (void * user , void * data)"		738310	0					
ANR	738312	CompoundStatement		1396:50:38732:39051	738310	0					
ANR	738313	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1397:1:38735:38762	738310	0	True				
ANR	738314	IdentifierDecl	* core = ( RCore * ) user		738310	0					
ANR	738315	IdentifierDeclType	RCore *		738310	0					
ANR	738316	Identifier	core		738310	1					
ANR	738317	AssignmentExpression	* core = ( RCore * ) user		738310	2		=			
ANR	738318	Identifier	core		738310	0					
ANR	738319	CastExpression	( RCore * ) user		738310	1					
ANR	738320	CastTarget	RCore *		738310	0					
ANR	738321	Identifier	user		738310	1					
ANR	738322	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1398:1:38765:38804	738310	1	True				
ANR	738323	IdentifierDecl	* node = ( RConfigNode * ) data		738310	0					
ANR	738324	IdentifierDeclType	RConfigNode *		738310	0					
ANR	738325	Identifier	node		738310	1					
ANR	738326	AssignmentExpression	* node = ( RConfigNode * ) data		738310	2		=			
ANR	738327	Identifier	node		738310	0					
ANR	738328	CastExpression	( RConfigNode * ) data		738310	1					
ANR	738329	CastTarget	RConfigNode *		738310	0					
ANR	738330	Identifier	data		738310	1					
ANR	738331	IfStatement	"if ( ! strcmp ( node -> value , ""?"" ) )"		738310	2					
ANR	738332	Condition	"! strcmp ( node -> value , ""?"" )"	1399:5:38811:38836	738310	0	True				
ANR	738333	UnaryOperationExpression	"! strcmp ( node -> value , ""?"" )"		738310	0					
ANR	738334	UnaryOperator	!		738310	0					
ANR	738335	CallExpression	"strcmp ( node -> value , ""?"" )"		738310	1					
ANR	738336	Callee	strcmp		738310	0					
ANR	738337	Identifier	strcmp		738310	0					
ANR	738338	ArgumentList	node -> value		738310	1					
ANR	738339	Argument	node -> value		738310	0					
ANR	738340	PtrMemberAccess	node -> value		738310	0					
ANR	738341	Identifier	node		738310	0					
ANR	738342	Identifier	value		738310	1					
ANR	738343	Argument	"""?"""		738310	1					
ANR	738344	PrimaryExpression	"""?"""		738310	0					
ANR	738345	CompoundStatement		4:33:106:106	738310	1					
ANR	738346	ExpressionStatement	"r_debug_plugin_list ( core -> dbg , 'q' )"	1400:2:38843:38879	738310	0	True				
ANR	738347	CallExpression	"r_debug_plugin_list ( core -> dbg , 'q' )"		738310	0					
ANR	738348	Callee	r_debug_plugin_list		738310	0					
ANR	738349	Identifier	r_debug_plugin_list		738310	0					
ANR	738350	ArgumentList	core -> dbg		738310	1					
ANR	738351	Argument	core -> dbg		738310	0					
ANR	738352	PtrMemberAccess	core -> dbg		738310	0					
ANR	738353	Identifier	core		738310	0					
ANR	738354	Identifier	dbg		738310	1					
ANR	738355	Argument	'q'		738310	1					
ANR	738356	PrimaryExpression	'q'		738310	0					
ANR	738357	ReturnStatement	return false ;	1401:2:38883:38895	738310	1	True				
ANR	738358	Identifier	false		738310	0					
ANR	738359	IfStatement	"if ( ! strcmp ( node -> value , ""bf"" ) )"		738310	3					
ANR	738360	Condition	"! strcmp ( node -> value , ""bf"" )"	1403:5:38905:38931	738310	0	True				
ANR	738361	UnaryOperationExpression	"! strcmp ( node -> value , ""bf"" )"		738310	0					
ANR	738362	UnaryOperator	!		738310	0					
ANR	738363	CallExpression	"strcmp ( node -> value , ""bf"" )"		738310	1					
ANR	738364	Callee	strcmp		738310	0					
ANR	738365	Identifier	strcmp		738310	0					
ANR	738366	ArgumentList	node -> value		738310	1					
ANR	738367	Argument	node -> value		738310	0					
ANR	738368	PtrMemberAccess	node -> value		738310	0					
ANR	738369	Identifier	node		738310	0					
ANR	738370	Identifier	value		738310	1					
ANR	738371	Argument	"""bf"""		738310	1					
ANR	738372	PrimaryExpression	"""bf"""		738310	0					
ANR	738373	CompoundStatement		8:34:201:201	738310	1					
ANR	738374	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , ""bf"" )"	1405:2:38948:38993	738310	0	True				
ANR	738375	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , ""bf"" )"		738310	0					
ANR	738376	Callee	r_config_set		738310	0					
ANR	738377	Identifier	r_config_set		738310	0					
ANR	738378	ArgumentList	core -> config		738310	1					
ANR	738379	Argument	core -> config		738310	0					
ANR	738380	PtrMemberAccess	core -> config		738310	0					
ANR	738381	Identifier	core		738310	0					
ANR	738382	Identifier	config		738310	1					
ANR	738383	Argument	"""asm.arch"""		738310	1					
ANR	738384	PrimaryExpression	"""asm.arch"""		738310	0					
ANR	738385	Argument	"""bf"""		738310	2					
ANR	738386	PrimaryExpression	"""bf"""		738310	0					
ANR	738387	ExpressionStatement	"r_debug_use ( core -> dbg , node -> value )"	1407:1:38999:39035	738310	4	True				
ANR	738388	CallExpression	"r_debug_use ( core -> dbg , node -> value )"		738310	0					
ANR	738389	Callee	r_debug_use		738310	0					
ANR	738390	Identifier	r_debug_use		738310	0					
ANR	738391	ArgumentList	core -> dbg		738310	1					
ANR	738392	Argument	core -> dbg		738310	0					
ANR	738393	PtrMemberAccess	core -> dbg		738310	0					
ANR	738394	Identifier	core		738310	0					
ANR	738395	Identifier	dbg		738310	1					
ANR	738396	Argument	node -> value		738310	1					
ANR	738397	PtrMemberAccess	node -> value		738310	0					
ANR	738398	Identifier	node		738310	0					
ANR	738399	Identifier	value		738310	1					
ANR	738400	ReturnStatement	return true ;	1408:1:39038:39049	738310	5	True				
ANR	738401	Identifier	true		738310	0					
ANR	738402	ReturnType	static bool		738310	1					
ANR	738403	Identifier	cb_dbgbackend		738310	2					
ANR	738404	ParameterList	"void * user , void * data"		738310	3					
ANR	738405	Parameter	void * user	1396:26:38708:38717	738310	0	True				
ANR	738406	ParameterType	void *		738310	0					
ANR	738407	Identifier	user		738310	1					
ANR	738408	Parameter	void * data	1396:38:38720:38729	738310	1	True				
ANR	738409	ParameterType	void *		738310	0					
ANR	738410	Identifier	data		738310	1					
ANR	738411	CFGEntryNode	ENTRY		738310		True				
ANR	738412	CFGExitNode	EXIT		738310		True				
ANR	738413	Symbol	strcmp		738310						
ANR	738414	Symbol	core -> config		738310						
ANR	738415	Symbol	core		738310						
ANR	738416	Symbol	node		738310						
ANR	738417	Symbol	data		738310						
ANR	738418	Symbol	* core		738310						
ANR	738419	Symbol	false		738310						
ANR	738420	Symbol	true		738310						
ANR	738421	Symbol	* node		738310						
ANR	738422	Symbol	user		738310						
ANR	738423	Symbol	node -> value		738310						
ANR	738424	Symbol	core -> dbg		738310						
ANR	738425	Function	cb_gotolimit	1411:0:39054:39356							
ANR	738426	FunctionDef	"cb_gotolimit (void * user , void * data)"		738425	0					
ANR	738427	CompoundStatement		1411:49:39103:39356	738425	0					
ANR	738428	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1412:1:39106:39134	738425	0	True				
ANR	738429	IdentifierDecl	* core = ( RCore * ) user		738425	0					
ANR	738430	IdentifierDeclType	RCore *		738425	0					
ANR	738431	Identifier	core		738425	1					
ANR	738432	AssignmentExpression	* core = ( RCore * ) user		738425	2		=			
ANR	738433	Identifier	core		738425	0					
ANR	738434	CastExpression	( RCore * ) user		738425	1					
ANR	738435	CastTarget	RCore *		738425	0					
ANR	738436	Identifier	user		738425	1					
ANR	738437	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1413:1:39137:39176	738425	1	True				
ANR	738438	IdentifierDecl	* node = ( RConfigNode * ) data		738425	0					
ANR	738439	IdentifierDeclType	RConfigNode *		738425	0					
ANR	738440	Identifier	node		738425	1					
ANR	738441	AssignmentExpression	* node = ( RConfigNode * ) data		738425	2		=			
ANR	738442	Identifier	node		738425	0					
ANR	738443	CastExpression	( RConfigNode * ) data		738425	1					
ANR	738444	CastTarget	RConfigNode *		738425	0					
ANR	738445	Identifier	data		738425	1					
ANR	738446	IfStatement	if ( r_sandbox_enable ( 0 ) )		738425	2					
ANR	738447	Condition	r_sandbox_enable ( 0 )	1414:5:39183:39202	738425	0	True				
ANR	738448	CallExpression	r_sandbox_enable ( 0 )		738425	0					
ANR	738449	Callee	r_sandbox_enable		738425	0					
ANR	738450	Identifier	r_sandbox_enable		738425	0					
ANR	738451	ArgumentList	0		738425	1					
ANR	738452	Argument	0		738425	0					
ANR	738453	PrimaryExpression	0		738425	0					
ANR	738454	CompoundStatement		4:27:101:101	738425	1					
ANR	738455	ExpressionStatement	"eprintf ( ""Cannot change gotolimit\\n"" )"	1415:2:39209:39246	738425	0	True				
ANR	738456	CallExpression	"eprintf ( ""Cannot change gotolimit\\n"" )"		738425	0					
ANR	738457	Callee	eprintf		738425	0					
ANR	738458	Identifier	eprintf		738425	0					
ANR	738459	ArgumentList	"""Cannot change gotolimit\\n"""		738425	1					
ANR	738460	Argument	"""Cannot change gotolimit\\n"""		738425	0					
ANR	738461	PrimaryExpression	"""Cannot change gotolimit\\n"""		738425	0					
ANR	738462	ReturnStatement	return false ;	1416:2:39250:39262	738425	1	True				
ANR	738463	Identifier	false		738425	0					
ANR	738464	IfStatement	if ( core -> anal -> esil )		738425	3					
ANR	738465	Condition	core -> anal -> esil	1418:5:39272:39287	738425	0	True				
ANR	738466	PtrMemberAccess	core -> anal -> esil		738425	0					
ANR	738467	PtrMemberAccess	core -> anal		738425	0					
ANR	738468	Identifier	core		738425	0					
ANR	738469	Identifier	anal		738425	1					
ANR	738470	Identifier	esil		738425	1					
ANR	738471	CompoundStatement		8:23:186:186	738425	1					
ANR	738472	ExpressionStatement	core -> anal -> esil_goto_limit = node -> i_value	1419:2:39294:39337	738425	0	True				
ANR	738473	AssignmentExpression	core -> anal -> esil_goto_limit = node -> i_value		738425	0		=			
ANR	738474	PtrMemberAccess	core -> anal -> esil_goto_limit		738425	0					
ANR	738475	PtrMemberAccess	core -> anal		738425	0					
ANR	738476	Identifier	core		738425	0					
ANR	738477	Identifier	anal		738425	1					
ANR	738478	Identifier	esil_goto_limit		738425	1					
ANR	738479	PtrMemberAccess	node -> i_value		738425	1					
ANR	738480	Identifier	node		738425	0					
ANR	738481	Identifier	i_value		738425	1					
ANR	738482	ReturnStatement	return true ;	1421:1:39343:39354	738425	4	True				
ANR	738483	Identifier	true		738425	0					
ANR	738484	ReturnType	static bool		738425	1					
ANR	738485	Identifier	cb_gotolimit		738425	2					
ANR	738486	ParameterList	"void * user , void * data"		738425	3					
ANR	738487	Parameter	void * user	1411:25:39079:39088	738425	0	True				
ANR	738488	ParameterType	void *		738425	0					
ANR	738489	Identifier	user		738425	1					
ANR	738490	Parameter	void * data	1411:37:39091:39100	738425	1	True				
ANR	738491	ParameterType	void *		738425	0					
ANR	738492	Identifier	data		738425	1					
ANR	738493	CFGEntryNode	ENTRY		738425		True				
ANR	738494	CFGExitNode	EXIT		738425		True				
ANR	738495	Symbol	data		738425						
ANR	738496	Symbol	r_sandbox_enable		738425						
ANR	738497	Symbol	false		738425						
ANR	738498	Symbol	* core		738425						
ANR	738499	Symbol	core -> anal		738425						
ANR	738500	Symbol	node -> i_value		738425						
ANR	738501	Symbol	core		738425						
ANR	738502	Symbol	node		738425						
ANR	738503	Symbol	* core -> anal		738425						
ANR	738504	Symbol	core -> anal -> esil_goto_limit		738425						
ANR	738505	Symbol	true		738425						
ANR	738506	Symbol	* node		738425						
ANR	738507	Symbol	core -> anal -> esil		738425						
ANR	738508	Symbol	user		738425						
ANR	738509	Symbol	* * core		738425						
ANR	738510	Function	cb_esilverbose	1424:0:39359:39573							
ANR	738511	FunctionDef	"cb_esilverbose (void * user , void * data)"		738510	0					
ANR	738512	CompoundStatement		1424:52:39411:39573	738510	0					
ANR	738513	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1425:1:39414:39442	738510	0	True				
ANR	738514	IdentifierDecl	* core = ( RCore * ) user		738510	0					
ANR	738515	IdentifierDeclType	RCore *		738510	0					
ANR	738516	Identifier	core		738510	1					
ANR	738517	AssignmentExpression	* core = ( RCore * ) user		738510	2		=			
ANR	738518	Identifier	core		738510	0					
ANR	738519	CastExpression	( RCore * ) user		738510	1					
ANR	738520	CastTarget	RCore *		738510	0					
ANR	738521	Identifier	user		738510	1					
ANR	738522	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1426:1:39445:39484	738510	1	True				
ANR	738523	IdentifierDecl	* node = ( RConfigNode * ) data		738510	0					
ANR	738524	IdentifierDeclType	RConfigNode *		738510	0					
ANR	738525	Identifier	node		738510	1					
ANR	738526	AssignmentExpression	* node = ( RConfigNode * ) data		738510	2		=			
ANR	738527	Identifier	node		738510	0					
ANR	738528	CastExpression	( RConfigNode * ) data		738510	1					
ANR	738529	CastTarget	RConfigNode *		738510	0					
ANR	738530	Identifier	data		738510	1					
ANR	738531	IfStatement	if ( core -> anal -> esil )		738510	2					
ANR	738532	Condition	core -> anal -> esil	1427:5:39491:39506	738510	0	True				
ANR	738533	PtrMemberAccess	core -> anal -> esil		738510	0					
ANR	738534	PtrMemberAccess	core -> anal		738510	0					
ANR	738535	Identifier	core		738510	0					
ANR	738536	Identifier	anal		738510	1					
ANR	738537	Identifier	esil		738510	1					
ANR	738538	CompoundStatement		4:23:97:97	738510	1					
ANR	738539	ExpressionStatement	core -> anal -> esil -> verbose = node -> i_value	1428:2:39513:39554	738510	0	True				
ANR	738540	AssignmentExpression	core -> anal -> esil -> verbose = node -> i_value		738510	0		=			
ANR	738541	PtrMemberAccess	core -> anal -> esil -> verbose		738510	0					
ANR	738542	PtrMemberAccess	core -> anal -> esil		738510	0					
ANR	738543	PtrMemberAccess	core -> anal		738510	0					
ANR	738544	Identifier	core		738510	0					
ANR	738545	Identifier	anal		738510	1					
ANR	738546	Identifier	esil		738510	1					
ANR	738547	Identifier	verbose		738510	1					
ANR	738548	PtrMemberAccess	node -> i_value		738510	1					
ANR	738549	Identifier	node		738510	0					
ANR	738550	Identifier	i_value		738510	1					
ANR	738551	ReturnStatement	return true ;	1430:1:39560:39571	738510	3	True				
ANR	738552	Identifier	true		738510	0					
ANR	738553	ReturnType	static bool		738510	1					
ANR	738554	Identifier	cb_esilverbose		738510	2					
ANR	738555	ParameterList	"void * user , void * data"		738510	3					
ANR	738556	Parameter	void * user	1424:28:39387:39396	738510	0	True				
ANR	738557	ParameterType	void *		738510	0					
ANR	738558	Identifier	user		738510	1					
ANR	738559	Parameter	void * data	1424:40:39399:39408	738510	1	True				
ANR	738560	ParameterType	void *		738510	0					
ANR	738561	Identifier	data		738510	1					
ANR	738562	CFGEntryNode	ENTRY		738510		True				
ANR	738563	CFGExitNode	EXIT		738510		True				
ANR	738564	Symbol	data		738510						
ANR	738565	Symbol	* core		738510						
ANR	738566	Symbol	core -> anal		738510						
ANR	738567	Symbol	node -> i_value		738510						
ANR	738568	Symbol	core		738510						
ANR	738569	Symbol	node		738510						
ANR	738570	Symbol	* * * core		738510						
ANR	738571	Symbol	* core -> anal		738510						
ANR	738572	Symbol	core -> anal -> esil -> verbose		738510						
ANR	738573	Symbol	* core -> anal -> esil		738510						
ANR	738574	Symbol	true		738510						
ANR	738575	Symbol	* * core -> anal		738510						
ANR	738576	Symbol	* node		738510						
ANR	738577	Symbol	core -> anal -> esil		738510						
ANR	738578	Symbol	user		738510						
ANR	738579	Symbol	* * core		738510						
ANR	738580	Function	cb_esilstackdepth	1433:0:39576:39797							
ANR	738581	FunctionDef	"cb_esilstackdepth (void * user , void * data)"		738580	0					
ANR	738582	CompoundStatement		1433:55:39631:39797	738580	0					
ANR	738583	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1434:1:39634:39673	738580	0	True				
ANR	738584	IdentifierDecl	* node = ( RConfigNode * ) data		738580	0					
ANR	738585	IdentifierDeclType	RConfigNode *		738580	0					
ANR	738586	Identifier	node		738580	1					
ANR	738587	AssignmentExpression	* node = ( RConfigNode * ) data		738580	2		=			
ANR	738588	Identifier	node		738580	0					
ANR	738589	CastExpression	( RConfigNode * ) data		738580	1					
ANR	738590	CastTarget	RConfigNode *		738580	0					
ANR	738591	Identifier	data		738580	1					
ANR	738592	IfStatement	if ( node -> i_value < 3 )		738580	1					
ANR	738593	Condition	node -> i_value < 3	1435:5:39680:39696	738580	0	True				
ANR	738594	RelationalExpression	node -> i_value < 3		738580	0		<			
ANR	738595	PtrMemberAccess	node -> i_value		738580	0					
ANR	738596	Identifier	node		738580	0					
ANR	738597	Identifier	i_value		738580	1					
ANR	738598	PrimaryExpression	3		738580	1					
ANR	738599	CompoundStatement		3:24:67:67	738580	1					
ANR	738600	ExpressionStatement	"eprintf ( ""esil.stack.depth must be greater than 2\\n"" )"	1436:2:39703:39756	738580	0	True				
ANR	738601	CallExpression	"eprintf ( ""esil.stack.depth must be greater than 2\\n"" )"		738580	0					
ANR	738602	Callee	eprintf		738580	0					
ANR	738603	Identifier	eprintf		738580	0					
ANR	738604	ArgumentList	"""esil.stack.depth must be greater than 2\\n"""		738580	1					
ANR	738605	Argument	"""esil.stack.depth must be greater than 2\\n"""		738580	0					
ANR	738606	PrimaryExpression	"""esil.stack.depth must be greater than 2\\n"""		738580	0					
ANR	738607	ExpressionStatement	node -> i_value = 32	1437:2:39760:39778	738580	1	True				
ANR	738608	AssignmentExpression	node -> i_value = 32		738580	0		=			
ANR	738609	PtrMemberAccess	node -> i_value		738580	0					
ANR	738610	Identifier	node		738580	0					
ANR	738611	Identifier	i_value		738580	1					
ANR	738612	PrimaryExpression	32		738580	1					
ANR	738613	ReturnStatement	return true ;	1439:1:39784:39795	738580	2	True				
ANR	738614	Identifier	true		738580	0					
ANR	738615	ReturnType	static bool		738580	1					
ANR	738616	Identifier	cb_esilstackdepth		738580	2					
ANR	738617	ParameterList	"void * user , void * data"		738580	3					
ANR	738618	Parameter	void * user	1433:31:39607:39616	738580	0	True				
ANR	738619	ParameterType	void *		738580	0					
ANR	738620	Identifier	user		738580	1					
ANR	738621	Parameter	void * data	1433:43:39619:39628	738580	1	True				
ANR	738622	ParameterType	void *		738580	0					
ANR	738623	Identifier	data		738580	1					
ANR	738624	CFGEntryNode	ENTRY		738580		True				
ANR	738625	CFGExitNode	EXIT		738580		True				
ANR	738626	Symbol	node		738580						
ANR	738627	Symbol	data		738580						
ANR	738628	Symbol	true		738580						
ANR	738629	Symbol	* node		738580						
ANR	738630	Symbol	user		738580						
ANR	738631	Symbol	node -> i_value		738580						
ANR	738632	Function	cb_fixrows	1442:0:39800:39959							
ANR	738633	FunctionDef	"cb_fixrows (void * user , void * data)"		738632	0					
ANR	738634	CompoundStatement		1442:47:39847:39959	738632	0					
ANR	738635	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1443:1:39850:39890	738632	0	True				
ANR	738636	IdentifierDecl	* node = ( RConfigNode * ) data		738632	0					
ANR	738637	IdentifierDeclType	RConfigNode *		738632	0					
ANR	738638	Identifier	node		738632	1					
ANR	738639	AssignmentExpression	* node = ( RConfigNode * ) data		738632	2		=			
ANR	738640	Identifier	node		738632	0					
ANR	738641	CastExpression	( RConfigNode * ) data		738632	1					
ANR	738642	CastTarget	RConfigNode *		738632	0					
ANR	738643	Identifier	data		738632	1					
ANR	738644	ExpressionStatement	r_cons_singleton ( ) -> fix_rows = ( int ) node -> i_value	1444:1:39893:39943	738632	1	True				
ANR	738645	AssignmentExpression	r_cons_singleton ( ) -> fix_rows = ( int ) node -> i_value		738632	0		=			
ANR	738646	PtrMemberAccess	r_cons_singleton ( ) -> fix_rows		738632	0					
ANR	738647	CallExpression	r_cons_singleton ( )		738632	0					
ANR	738648	Callee	r_cons_singleton		738632	0					
ANR	738649	Identifier	r_cons_singleton		738632	0					
ANR	738650	ArgumentList			738632	1					
ANR	738651	Identifier	fix_rows		738632	1					
ANR	738652	CastExpression	( int ) node -> i_value		738632	1					
ANR	738653	CastTarget	int		738632	0					
ANR	738654	PtrMemberAccess	node -> i_value		738632	1					
ANR	738655	Identifier	node		738632	0					
ANR	738656	Identifier	i_value		738632	1					
ANR	738657	ReturnStatement	return true ;	1445:1:39946:39957	738632	2	True				
ANR	738658	Identifier	true		738632	0					
ANR	738659	ReturnType	static bool		738632	1					
ANR	738660	Identifier	cb_fixrows		738632	2					
ANR	738661	ParameterList	"void * user , void * data"		738632	3					
ANR	738662	Parameter	void * user	1442:23:39823:39832	738632	0	True				
ANR	738663	ParameterType	void *		738632	0					
ANR	738664	Identifier	user		738632	1					
ANR	738665	Parameter	void * data	1442:35:39835:39844	738632	1	True				
ANR	738666	ParameterType	void *		738632	0					
ANR	738667	Identifier	data		738632	1					
ANR	738668	CFGEntryNode	ENTRY		738632		True				
ANR	738669	CFGExitNode	EXIT		738632		True				
ANR	738670	Symbol	node		738632						
ANR	738671	Symbol	data		738632						
ANR	738672	Symbol	true		738632						
ANR	738673	Symbol	r_cons_singleton		738632						
ANR	738674	Symbol	* node		738632						
ANR	738675	Symbol	r_cons_singleton ( ) -> fix_rows		738632						
ANR	738676	Symbol	user		738632						
ANR	738677	Symbol	* r_cons_singleton		738632						
ANR	738678	Symbol	node -> i_value		738632						
ANR	738679	Function	cb_fixcolumns	1448:0:39962:40127							
ANR	738680	FunctionDef	"cb_fixcolumns (void * user , void * data)"		738679	0					
ANR	738681	CompoundStatement		1448:50:40012:40127	738679	0					
ANR	738682	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1449:1:40015:40055	738679	0	True				
ANR	738683	IdentifierDecl	* node = ( RConfigNode * ) data		738679	0					
ANR	738684	IdentifierDeclType	RConfigNode *		738679	0					
ANR	738685	Identifier	node		738679	1					
ANR	738686	AssignmentExpression	* node = ( RConfigNode * ) data		738679	2		=			
ANR	738687	Identifier	node		738679	0					
ANR	738688	CastExpression	( RConfigNode * ) data		738679	1					
ANR	738689	CastTarget	RConfigNode *		738679	0					
ANR	738690	Identifier	data		738679	1					
ANR	738691	ExpressionStatement	r_cons_singleton ( ) -> fix_columns = atoi ( node -> value )	1450:1:40058:40111	738679	1	True				
ANR	738692	AssignmentExpression	r_cons_singleton ( ) -> fix_columns = atoi ( node -> value )		738679	0		=			
ANR	738693	PtrMemberAccess	r_cons_singleton ( ) -> fix_columns		738679	0					
ANR	738694	CallExpression	r_cons_singleton ( )		738679	0					
ANR	738695	Callee	r_cons_singleton		738679	0					
ANR	738696	Identifier	r_cons_singleton		738679	0					
ANR	738697	ArgumentList			738679	1					
ANR	738698	Identifier	fix_columns		738679	1					
ANR	738699	CallExpression	atoi ( node -> value )		738679	1					
ANR	738700	Callee	atoi		738679	0					
ANR	738701	Identifier	atoi		738679	0					
ANR	738702	ArgumentList	node -> value		738679	1					
ANR	738703	Argument	node -> value		738679	0					
ANR	738704	PtrMemberAccess	node -> value		738679	0					
ANR	738705	Identifier	node		738679	0					
ANR	738706	Identifier	value		738679	1					
ANR	738707	ReturnStatement	return true ;	1451:1:40114:40125	738679	2	True				
ANR	738708	Identifier	true		738679	0					
ANR	738709	ReturnType	static bool		738679	1					
ANR	738710	Identifier	cb_fixcolumns		738679	2					
ANR	738711	ParameterList	"void * user , void * data"		738679	3					
ANR	738712	Parameter	void * user	1448:26:39988:39997	738679	0	True				
ANR	738713	ParameterType	void *		738679	0					
ANR	738714	Identifier	user		738679	1					
ANR	738715	Parameter	void * data	1448:38:40000:40009	738679	1	True				
ANR	738716	ParameterType	void *		738679	0					
ANR	738717	Identifier	data		738679	1					
ANR	738718	CFGEntryNode	ENTRY		738679		True				
ANR	738719	CFGExitNode	EXIT		738679		True				
ANR	738720	Symbol	atoi		738679						
ANR	738721	Symbol	node		738679						
ANR	738722	Symbol	data		738679						
ANR	738723	Symbol	true		738679						
ANR	738724	Symbol	r_cons_singleton		738679						
ANR	738725	Symbol	* node		738679						
ANR	738726	Symbol	r_cons_singleton ( ) -> fix_columns		738679						
ANR	738727	Symbol	user		738679						
ANR	738728	Symbol	* r_cons_singleton		738679						
ANR	738729	Symbol	node -> value		738679						
ANR	738730	Function	cb_rows	1454:0:40130:40283							
ANR	738731	FunctionDef	"cb_rows (void * user , void * data)"		738730	0					
ANR	738732	CompoundStatement		1454:44:40174:40283	738730	0					
ANR	738733	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1455:1:40177:40217	738730	0	True				
ANR	738734	IdentifierDecl	* node = ( RConfigNode * ) data		738730	0					
ANR	738735	IdentifierDeclType	RConfigNode *		738730	0					
ANR	738736	Identifier	node		738730	1					
ANR	738737	AssignmentExpression	* node = ( RConfigNode * ) data		738730	2		=			
ANR	738738	Identifier	node		738730	0					
ANR	738739	CastExpression	( RConfigNode * ) data		738730	1					
ANR	738740	CastTarget	RConfigNode *		738730	0					
ANR	738741	Identifier	data		738730	1					
ANR	738742	ExpressionStatement	r_cons_singleton ( ) -> force_rows = node -> i_value	1456:1:40220:40267	738730	1	True				
ANR	738743	AssignmentExpression	r_cons_singleton ( ) -> force_rows = node -> i_value		738730	0		=			
ANR	738744	PtrMemberAccess	r_cons_singleton ( ) -> force_rows		738730	0					
ANR	738745	CallExpression	r_cons_singleton ( )		738730	0					
ANR	738746	Callee	r_cons_singleton		738730	0					
ANR	738747	Identifier	r_cons_singleton		738730	0					
ANR	738748	ArgumentList			738730	1					
ANR	738749	Identifier	force_rows		738730	1					
ANR	738750	PtrMemberAccess	node -> i_value		738730	1					
ANR	738751	Identifier	node		738730	0					
ANR	738752	Identifier	i_value		738730	1					
ANR	738753	ReturnStatement	return true ;	1457:1:40270:40281	738730	2	True				
ANR	738754	Identifier	true		738730	0					
ANR	738755	ReturnType	static bool		738730	1					
ANR	738756	Identifier	cb_rows		738730	2					
ANR	738757	ParameterList	"void * user , void * data"		738730	3					
ANR	738758	Parameter	void * user	1454:20:40150:40159	738730	0	True				
ANR	738759	ParameterType	void *		738730	0					
ANR	738760	Identifier	user		738730	1					
ANR	738761	Parameter	void * data	1454:32:40162:40171	738730	1	True				
ANR	738762	ParameterType	void *		738730	0					
ANR	738763	Identifier	data		738730	1					
ANR	738764	CFGEntryNode	ENTRY		738730		True				
ANR	738765	CFGExitNode	EXIT		738730		True				
ANR	738766	Symbol	node		738730						
ANR	738767	Symbol	data		738730						
ANR	738768	Symbol	true		738730						
ANR	738769	Symbol	r_cons_singleton ( ) -> force_rows		738730						
ANR	738770	Symbol	r_cons_singleton		738730						
ANR	738771	Symbol	* node		738730						
ANR	738772	Symbol	user		738730						
ANR	738773	Symbol	* r_cons_singleton		738730						
ANR	738774	Symbol	node -> i_value		738730						
ANR	738775	Function	cb_cmd_hexcursor	1460:0:40286:40463							
ANR	738776	FunctionDef	"cb_cmd_hexcursor (void * user , void * data)"		738775	0					
ANR	738777	CompoundStatement		1460:53:40339:40463	738775	0					
ANR	738778	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1461:1:40342:40370	738775	0	True				
ANR	738779	IdentifierDecl	* core = ( RCore * ) user		738775	0					
ANR	738780	IdentifierDeclType	RCore *		738775	0					
ANR	738781	Identifier	core		738775	1					
ANR	738782	AssignmentExpression	* core = ( RCore * ) user		738775	2		=			
ANR	738783	Identifier	core		738775	0					
ANR	738784	CastExpression	( RCore * ) user		738775	1					
ANR	738785	CastTarget	RCore *		738775	0					
ANR	738786	Identifier	user		738775	1					
ANR	738787	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1462:1:40373:40413	738775	1	True				
ANR	738788	IdentifierDecl	* node = ( RConfigNode * ) data		738775	0					
ANR	738789	IdentifierDeclType	RConfigNode *		738775	0					
ANR	738790	Identifier	node		738775	1					
ANR	738791	AssignmentExpression	* node = ( RConfigNode * ) data		738775	2		=			
ANR	738792	Identifier	node		738775	0					
ANR	738793	CastExpression	( RConfigNode * ) data		738775	1					
ANR	738794	CastTarget	RConfigNode *		738775	0					
ANR	738795	Identifier	data		738775	1					
ANR	738796	ExpressionStatement	core -> print -> cfmt = node -> value	1463:1:40416:40447	738775	2	True				
ANR	738797	AssignmentExpression	core -> print -> cfmt = node -> value		738775	0		=			
ANR	738798	PtrMemberAccess	core -> print -> cfmt		738775	0					
ANR	738799	PtrMemberAccess	core -> print		738775	0					
ANR	738800	Identifier	core		738775	0					
ANR	738801	Identifier	print		738775	1					
ANR	738802	Identifier	cfmt		738775	1					
ANR	738803	PtrMemberAccess	node -> value		738775	1					
ANR	738804	Identifier	node		738775	0					
ANR	738805	Identifier	value		738775	1					
ANR	738806	ReturnStatement	return true ;	1464:1:40450:40461	738775	3	True				
ANR	738807	Identifier	true		738775	0					
ANR	738808	ReturnType	static bool		738775	1					
ANR	738809	Identifier	cb_cmd_hexcursor		738775	2					
ANR	738810	ParameterList	"void * user , void * data"		738775	3					
ANR	738811	Parameter	void * user	1460:29:40315:40324	738775	0	True				
ANR	738812	ParameterType	void *		738775	0					
ANR	738813	Identifier	user		738775	1					
ANR	738814	Parameter	void * data	1460:41:40327:40336	738775	1	True				
ANR	738815	ParameterType	void *		738775	0					
ANR	738816	Identifier	data		738775	1					
ANR	738817	CFGEntryNode	ENTRY		738775		True				
ANR	738818	CFGExitNode	EXIT		738775		True				
ANR	738819	Symbol	core		738775						
ANR	738820	Symbol	node		738775						
ANR	738821	Symbol	* core -> print		738775						
ANR	738822	Symbol	data		738775						
ANR	738823	Symbol	* core		738775						
ANR	738824	Symbol	true		738775						
ANR	738825	Symbol	* node		738775						
ANR	738826	Symbol	core -> print		738775						
ANR	738827	Symbol	user		738775						
ANR	738828	Symbol	* * core		738775						
ANR	738829	Symbol	core -> print -> cfmt		738775						
ANR	738830	Symbol	node -> value		738775						
ANR	738831	Function	cb_hexcompact	1467:0:40466:40738							
ANR	738832	FunctionDef	"cb_hexcompact (void * user , void * data)"		738831	0					
ANR	738833	CompoundStatement		1467:50:40516:40738	738831	0					
ANR	738834	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1468:1:40519:40547	738831	0	True				
ANR	738835	IdentifierDecl	* core = ( RCore * ) user		738831	0					
ANR	738836	IdentifierDeclType	RCore *		738831	0					
ANR	738837	Identifier	core		738831	1					
ANR	738838	AssignmentExpression	* core = ( RCore * ) user		738831	2		=			
ANR	738839	Identifier	core		738831	0					
ANR	738840	CastExpression	( RCore * ) user		738831	1					
ANR	738841	CastTarget	RCore *		738831	0					
ANR	738842	Identifier	user		738831	1					
ANR	738843	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1469:1:40550:40590	738831	1	True				
ANR	738844	IdentifierDecl	* node = ( RConfigNode * ) data		738831	0					
ANR	738845	IdentifierDeclType	RConfigNode *		738831	0					
ANR	738846	Identifier	node		738831	1					
ANR	738847	AssignmentExpression	* node = ( RConfigNode * ) data		738831	2		=			
ANR	738848	Identifier	node		738831	0					
ANR	738849	CastExpression	( RConfigNode * ) data		738831	1					
ANR	738850	CastTarget	RConfigNode *		738831	0					
ANR	738851	Identifier	data		738831	1					
ANR	738852	IfStatement	if ( node -> i_value )		738831	2					
ANR	738853	Condition	node -> i_value	1470:5:40597:40609	738831	0	True				
ANR	738854	PtrMemberAccess	node -> i_value		738831	0					
ANR	738855	Identifier	node		738831	0					
ANR	738856	Identifier	i_value		738831	1					
ANR	738857	CompoundStatement		4:20:95:95	738831	1					
ANR	738858	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_COMPACT	1471:2:40616:40659	738831	0	True				
ANR	738859	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_COMPACT		738831	0		|=			
ANR	738860	PtrMemberAccess	core -> print -> flags		738831	0					
ANR	738861	PtrMemberAccess	core -> print		738831	0					
ANR	738862	Identifier	core		738831	0					
ANR	738863	Identifier	print		738831	1					
ANR	738864	Identifier	flags		738831	1					
ANR	738865	Identifier	R_PRINT_FLAGS_COMPACT		738831	1					
ANR	738866	ElseStatement	else		738831	0					
ANR	738867	CompoundStatement		6:8:152:152	738831	0					
ANR	738868	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_COMPACT )	1473:2:40673:40719	738831	0	True				
ANR	738869	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_COMPACT )		738831	0		&=			
ANR	738870	PtrMemberAccess	core -> print -> flags		738831	0					
ANR	738871	PtrMemberAccess	core -> print		738831	0					
ANR	738872	Identifier	core		738831	0					
ANR	738873	Identifier	print		738831	1					
ANR	738874	Identifier	flags		738831	1					
ANR	738875	Identifier	~R_PRINT_FLAGS_COMPACT		738831	1					
ANR	738876	ReturnStatement	return true ;	1475:1:40725:40736	738831	3	True				
ANR	738877	Identifier	true		738831	0					
ANR	738878	ReturnType	static bool		738831	1					
ANR	738879	Identifier	cb_hexcompact		738831	2					
ANR	738880	ParameterList	"void * user , void * data"		738831	3					
ANR	738881	Parameter	void * user	1467:26:40492:40501	738831	0	True				
ANR	738882	ParameterType	void *		738831	0					
ANR	738883	Identifier	user		738831	1					
ANR	738884	Parameter	void * data	1467:38:40504:40513	738831	1	True				
ANR	738885	ParameterType	void *		738831	0					
ANR	738886	Identifier	data		738831	1					
ANR	738887	CFGEntryNode	ENTRY		738831		True				
ANR	738888	CFGExitNode	EXIT		738831		True				
ANR	738889	Symbol	data		738831						
ANR	738890	Symbol	* core		738831						
ANR	738891	Symbol	R_PRINT_FLAGS_COMPACT		738831						
ANR	738892	Symbol	node -> i_value		738831						
ANR	738893	Symbol	core		738831						
ANR	738894	Symbol	node		738831						
ANR	738895	Symbol	* core -> print		738831						
ANR	738896	Symbol	~R_PRINT_FLAGS_COMPACT		738831						
ANR	738897	Symbol	true		738831						
ANR	738898	Symbol	* node		738831						
ANR	738899	Symbol	core -> print		738831						
ANR	738900	Symbol	user		738831						
ANR	738901	Symbol	core -> print -> flags		738831						
ANR	738902	Symbol	* * core		738831						
ANR	738903	Function	cb_hex_pairs	1478:0:40741:40917							
ANR	738904	FunctionDef	"cb_hex_pairs (void * user , void * data)"		738903	0					
ANR	738905	CompoundStatement		1478:49:40790:40917	738903	0					
ANR	738906	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1479:1:40793:40821	738903	0	True				
ANR	738907	IdentifierDecl	* core = ( RCore * ) user		738903	0					
ANR	738908	IdentifierDeclType	RCore *		738903	0					
ANR	738909	Identifier	core		738903	1					
ANR	738910	AssignmentExpression	* core = ( RCore * ) user		738903	2		=			
ANR	738911	Identifier	core		738903	0					
ANR	738912	CastExpression	( RCore * ) user		738903	1					
ANR	738913	CastTarget	RCore *		738903	0					
ANR	738914	Identifier	user		738903	1					
ANR	738915	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1480:1:40824:40864	738903	1	True				
ANR	738916	IdentifierDecl	* node = ( RConfigNode * ) data		738903	0					
ANR	738917	IdentifierDeclType	RConfigNode *		738903	0					
ANR	738918	Identifier	node		738903	1					
ANR	738919	AssignmentExpression	* node = ( RConfigNode * ) data		738903	2		=			
ANR	738920	Identifier	node		738903	0					
ANR	738921	CastExpression	( RConfigNode * ) data		738903	1					
ANR	738922	CastTarget	RConfigNode *		738903	0					
ANR	738923	Identifier	data		738903	1					
ANR	738924	ExpressionStatement	core -> print -> pairs = node -> i_value	1481:1:40867:40901	738903	2	True				
ANR	738925	AssignmentExpression	core -> print -> pairs = node -> i_value		738903	0		=			
ANR	738926	PtrMemberAccess	core -> print -> pairs		738903	0					
ANR	738927	PtrMemberAccess	core -> print		738903	0					
ANR	738928	Identifier	core		738903	0					
ANR	738929	Identifier	print		738903	1					
ANR	738930	Identifier	pairs		738903	1					
ANR	738931	PtrMemberAccess	node -> i_value		738903	1					
ANR	738932	Identifier	node		738903	0					
ANR	738933	Identifier	i_value		738903	1					
ANR	738934	ReturnStatement	return true ;	1482:1:40904:40915	738903	3	True				
ANR	738935	Identifier	true		738903	0					
ANR	738936	ReturnType	static bool		738903	1					
ANR	738937	Identifier	cb_hex_pairs		738903	2					
ANR	738938	ParameterList	"void * user , void * data"		738903	3					
ANR	738939	Parameter	void * user	1478:25:40766:40775	738903	0	True				
ANR	738940	ParameterType	void *		738903	0					
ANR	738941	Identifier	user		738903	1					
ANR	738942	Parameter	void * data	1478:37:40778:40787	738903	1	True				
ANR	738943	ParameterType	void *		738903	0					
ANR	738944	Identifier	data		738903	1					
ANR	738945	CFGEntryNode	ENTRY		738903		True				
ANR	738946	CFGExitNode	EXIT		738903		True				
ANR	738947	Symbol	core		738903						
ANR	738948	Symbol	node		738903						
ANR	738949	Symbol	* core -> print		738903						
ANR	738950	Symbol	data		738903						
ANR	738951	Symbol	core -> print -> pairs		738903						
ANR	738952	Symbol	* core		738903						
ANR	738953	Symbol	true		738903						
ANR	738954	Symbol	* node		738903						
ANR	738955	Symbol	core -> print		738903						
ANR	738956	Symbol	user		738903						
ANR	738957	Symbol	* * core		738903						
ANR	738958	Symbol	node -> i_value		738903						
ANR	738959	Function	cb_hex_section	1485:0:40920:41191							
ANR	738960	FunctionDef	"cb_hex_section (void * user , void * data)"		738959	0					
ANR	738961	CompoundStatement		1485:51:40971:41191	738959	0					
ANR	738962	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1486:1:40974:41002	738959	0	True				
ANR	738963	IdentifierDecl	* core = ( RCore * ) user		738959	0					
ANR	738964	IdentifierDeclType	RCore *		738959	0					
ANR	738965	Identifier	core		738959	1					
ANR	738966	AssignmentExpression	* core = ( RCore * ) user		738959	2		=			
ANR	738967	Identifier	core		738959	0					
ANR	738968	CastExpression	( RCore * ) user		738959	1					
ANR	738969	CastTarget	RCore *		738959	0					
ANR	738970	Identifier	user		738959	1					
ANR	738971	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1487:1:41005:41045	738959	1	True				
ANR	738972	IdentifierDecl	* node = ( RConfigNode * ) data		738959	0					
ANR	738973	IdentifierDeclType	RConfigNode *		738959	0					
ANR	738974	Identifier	node		738959	1					
ANR	738975	AssignmentExpression	* node = ( RConfigNode * ) data		738959	2		=			
ANR	738976	Identifier	node		738959	0					
ANR	738977	CastExpression	( RConfigNode * ) data		738959	1					
ANR	738978	CastTarget	RConfigNode *		738959	0					
ANR	738979	Identifier	data		738959	1					
ANR	738980	IfStatement	if ( node -> i_value )		738959	2					
ANR	738981	Condition	node -> i_value	1488:5:41052:41064	738959	0	True				
ANR	738982	PtrMemberAccess	node -> i_value		738959	0					
ANR	738983	Identifier	node		738959	0					
ANR	738984	Identifier	i_value		738959	1					
ANR	738985	CompoundStatement		4:20:95:95	738959	1					
ANR	738986	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_SECTION	1489:2:41071:41114	738959	0	True				
ANR	738987	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_SECTION		738959	0		|=			
ANR	738988	PtrMemberAccess	core -> print -> flags		738959	0					
ANR	738989	PtrMemberAccess	core -> print		738959	0					
ANR	738990	Identifier	core		738959	0					
ANR	738991	Identifier	print		738959	1					
ANR	738992	Identifier	flags		738959	1					
ANR	738993	Identifier	R_PRINT_FLAGS_SECTION		738959	1					
ANR	738994	ElseStatement	else		738959	0					
ANR	738995	CompoundStatement		6:8:152:152	738959	0					
ANR	738996	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_SECTION	1491:2:41128:41172	738959	0	True				
ANR	738997	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_SECTION		738959	0		&=			
ANR	738998	PtrMemberAccess	core -> print -> flags		738959	0					
ANR	738999	PtrMemberAccess	core -> print		738959	0					
ANR	739000	Identifier	core		738959	0					
ANR	739001	Identifier	print		738959	1					
ANR	739002	Identifier	flags		738959	1					
ANR	739003	Identifier	~R_PRINT_FLAGS_SECTION		738959	1					
ANR	739004	ReturnStatement	return true ;	1493:1:41178:41189	738959	3	True				
ANR	739005	Identifier	true		738959	0					
ANR	739006	ReturnType	static bool		738959	1					
ANR	739007	Identifier	cb_hex_section		738959	2					
ANR	739008	ParameterList	"void * user , void * data"		738959	3					
ANR	739009	Parameter	void * user	1485:27:40947:40956	738959	0	True				
ANR	739010	ParameterType	void *		738959	0					
ANR	739011	Identifier	user		738959	1					
ANR	739012	Parameter	void * data	1485:39:40959:40968	738959	1	True				
ANR	739013	ParameterType	void *		738959	0					
ANR	739014	Identifier	data		738959	1					
ANR	739015	CFGEntryNode	ENTRY		738959		True				
ANR	739016	CFGExitNode	EXIT		738959		True				
ANR	739017	Symbol	data		738959						
ANR	739018	Symbol	* core		738959						
ANR	739019	Symbol	node -> i_value		738959						
ANR	739020	Symbol	core		738959						
ANR	739021	Symbol	node		738959						
ANR	739022	Symbol	~R_PRINT_FLAGS_SECTION		738959						
ANR	739023	Symbol	* core -> print		738959						
ANR	739024	Symbol	true		738959						
ANR	739025	Symbol	* node		738959						
ANR	739026	Symbol	core -> print		738959						
ANR	739027	Symbol	user		738959						
ANR	739028	Symbol	core -> print -> flags		738959						
ANR	739029	Symbol	* * core		738959						
ANR	739030	Symbol	R_PRINT_FLAGS_SECTION		738959						
ANR	739031	Function	cb_hex_align	1496:0:41194:41459							
ANR	739032	FunctionDef	"cb_hex_align (void * user , void * data)"		739031	0					
ANR	739033	CompoundStatement		1496:49:41243:41459	739031	0					
ANR	739034	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1497:1:41246:41274	739031	0	True				
ANR	739035	IdentifierDecl	* core = ( RCore * ) user		739031	0					
ANR	739036	IdentifierDeclType	RCore *		739031	0					
ANR	739037	Identifier	core		739031	1					
ANR	739038	AssignmentExpression	* core = ( RCore * ) user		739031	2		=			
ANR	739039	Identifier	core		739031	0					
ANR	739040	CastExpression	( RCore * ) user		739031	1					
ANR	739041	CastTarget	RCore *		739031	0					
ANR	739042	Identifier	user		739031	1					
ANR	739043	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1498:1:41277:41317	739031	1	True				
ANR	739044	IdentifierDecl	* node = ( RConfigNode * ) data		739031	0					
ANR	739045	IdentifierDeclType	RConfigNode *		739031	0					
ANR	739046	Identifier	node		739031	1					
ANR	739047	AssignmentExpression	* node = ( RConfigNode * ) data		739031	2		=			
ANR	739048	Identifier	node		739031	0					
ANR	739049	CastExpression	( RConfigNode * ) data		739031	1					
ANR	739050	CastTarget	RConfigNode *		739031	0					
ANR	739051	Identifier	data		739031	1					
ANR	739052	IfStatement	if ( node -> i_value )		739031	2					
ANR	739053	Condition	node -> i_value	1499:5:41324:41336	739031	0	True				
ANR	739054	PtrMemberAccess	node -> i_value		739031	0					
ANR	739055	Identifier	node		739031	0					
ANR	739056	Identifier	i_value		739031	1					
ANR	739057	CompoundStatement		4:20:95:95	739031	1					
ANR	739058	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_ALIGN	1500:2:41343:41384	739031	0	True				
ANR	739059	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_ALIGN		739031	0		|=			
ANR	739060	PtrMemberAccess	core -> print -> flags		739031	0					
ANR	739061	PtrMemberAccess	core -> print		739031	0					
ANR	739062	Identifier	core		739031	0					
ANR	739063	Identifier	print		739031	1					
ANR	739064	Identifier	flags		739031	1					
ANR	739065	Identifier	R_PRINT_FLAGS_ALIGN		739031	1					
ANR	739066	ElseStatement	else		739031	0					
ANR	739067	CompoundStatement		6:8:150:150	739031	0					
ANR	739068	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_ALIGN	1502:2:41398:41440	739031	0	True				
ANR	739069	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_ALIGN		739031	0		&=			
ANR	739070	PtrMemberAccess	core -> print -> flags		739031	0					
ANR	739071	PtrMemberAccess	core -> print		739031	0					
ANR	739072	Identifier	core		739031	0					
ANR	739073	Identifier	print		739031	1					
ANR	739074	Identifier	flags		739031	1					
ANR	739075	Identifier	~R_PRINT_FLAGS_ALIGN		739031	1					
ANR	739076	ReturnStatement	return true ;	1504:1:41446:41457	739031	3	True				
ANR	739077	Identifier	true		739031	0					
ANR	739078	ReturnType	static bool		739031	1					
ANR	739079	Identifier	cb_hex_align		739031	2					
ANR	739080	ParameterList	"void * user , void * data"		739031	3					
ANR	739081	Parameter	void * user	1496:25:41219:41228	739031	0	True				
ANR	739082	ParameterType	void *		739031	0					
ANR	739083	Identifier	user		739031	1					
ANR	739084	Parameter	void * data	1496:37:41231:41240	739031	1	True				
ANR	739085	ParameterType	void *		739031	0					
ANR	739086	Identifier	data		739031	1					
ANR	739087	CFGEntryNode	ENTRY		739031		True				
ANR	739088	CFGExitNode	EXIT		739031		True				
ANR	739089	Symbol	data		739031						
ANR	739090	Symbol	* core		739031						
ANR	739091	Symbol	~R_PRINT_FLAGS_ALIGN		739031						
ANR	739092	Symbol	node -> i_value		739031						
ANR	739093	Symbol	core		739031						
ANR	739094	Symbol	node		739031						
ANR	739095	Symbol	* core -> print		739031						
ANR	739096	Symbol	true		739031						
ANR	739097	Symbol	R_PRINT_FLAGS_ALIGN		739031						
ANR	739098	Symbol	* node		739031						
ANR	739099	Symbol	core -> print		739031						
ANR	739100	Symbol	user		739031						
ANR	739101	Symbol	* * core		739031						
ANR	739102	Symbol	core -> print -> flags		739031						
ANR	739103	Function	cb_io_unalloc	1507:0:41462:41732							
ANR	739104	FunctionDef	"cb_io_unalloc (void * user , void * data)"		739103	0					
ANR	739105	CompoundStatement		1507:50:41512:41732	739103	0					
ANR	739106	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1508:1:41515:41543	739103	0	True				
ANR	739107	IdentifierDecl	* core = ( RCore * ) user		739103	0					
ANR	739108	IdentifierDeclType	RCore *		739103	0					
ANR	739109	Identifier	core		739103	1					
ANR	739110	AssignmentExpression	* core = ( RCore * ) user		739103	2		=			
ANR	739111	Identifier	core		739103	0					
ANR	739112	CastExpression	( RCore * ) user		739103	1					
ANR	739113	CastTarget	RCore *		739103	0					
ANR	739114	Identifier	user		739103	1					
ANR	739115	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1509:1:41546:41586	739103	1	True				
ANR	739116	IdentifierDecl	* node = ( RConfigNode * ) data		739103	0					
ANR	739117	IdentifierDeclType	RConfigNode *		739103	0					
ANR	739118	Identifier	node		739103	1					
ANR	739119	AssignmentExpression	* node = ( RConfigNode * ) data		739103	2		=			
ANR	739120	Identifier	node		739103	0					
ANR	739121	CastExpression	( RConfigNode * ) data		739103	1					
ANR	739122	CastTarget	RConfigNode *		739103	0					
ANR	739123	Identifier	data		739103	1					
ANR	739124	IfStatement	if ( node -> i_value )		739103	2					
ANR	739125	Condition	node -> i_value	1510:5:41593:41605	739103	0	True				
ANR	739126	PtrMemberAccess	node -> i_value		739103	0					
ANR	739127	Identifier	node		739103	0					
ANR	739128	Identifier	i_value		739103	1					
ANR	739129	CompoundStatement		4:20:95:95	739103	1					
ANR	739130	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_UNALLOC	1511:2:41612:41655	739103	0	True				
ANR	739131	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_UNALLOC		739103	0		|=			
ANR	739132	PtrMemberAccess	core -> print -> flags		739103	0					
ANR	739133	PtrMemberAccess	core -> print		739103	0					
ANR	739134	Identifier	core		739103	0					
ANR	739135	Identifier	print		739103	1					
ANR	739136	Identifier	flags		739103	1					
ANR	739137	Identifier	R_PRINT_FLAGS_UNALLOC		739103	1					
ANR	739138	ElseStatement	else		739103	0					
ANR	739139	CompoundStatement		6:8:152:152	739103	0					
ANR	739140	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_UNALLOC	1513:2:41669:41713	739103	0	True				
ANR	739141	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_UNALLOC		739103	0		&=			
ANR	739142	PtrMemberAccess	core -> print -> flags		739103	0					
ANR	739143	PtrMemberAccess	core -> print		739103	0					
ANR	739144	Identifier	core		739103	0					
ANR	739145	Identifier	print		739103	1					
ANR	739146	Identifier	flags		739103	1					
ANR	739147	Identifier	~R_PRINT_FLAGS_UNALLOC		739103	1					
ANR	739148	ReturnStatement	return true ;	1515:1:41719:41730	739103	3	True				
ANR	739149	Identifier	true		739103	0					
ANR	739150	ReturnType	static bool		739103	1					
ANR	739151	Identifier	cb_io_unalloc		739103	2					
ANR	739152	ParameterList	"void * user , void * data"		739103	3					
ANR	739153	Parameter	void * user	1507:26:41488:41497	739103	0	True				
ANR	739154	ParameterType	void *		739103	0					
ANR	739155	Identifier	user		739103	1					
ANR	739156	Parameter	void * data	1507:38:41500:41509	739103	1	True				
ANR	739157	ParameterType	void *		739103	0					
ANR	739158	Identifier	data		739103	1					
ANR	739159	CFGEntryNode	ENTRY		739103		True				
ANR	739160	CFGExitNode	EXIT		739103		True				
ANR	739161	Symbol	data		739103						
ANR	739162	Symbol	* core		739103						
ANR	739163	Symbol	~R_PRINT_FLAGS_UNALLOC		739103						
ANR	739164	Symbol	node -> i_value		739103						
ANR	739165	Symbol	core		739103						
ANR	739166	Symbol	node		739103						
ANR	739167	Symbol	* core -> print		739103						
ANR	739168	Symbol	true		739103						
ANR	739169	Symbol	* node		739103						
ANR	739170	Symbol	core -> print		739103						
ANR	739171	Symbol	user		739103						
ANR	739172	Symbol	R_PRINT_FLAGS_UNALLOC		739103						
ANR	739173	Symbol	core -> print -> flags		739103						
ANR	739174	Symbol	* * core		739103						
ANR	739175	Function	cb_io_unalloc_ch	1518:0:41735:41945							
ANR	739176	FunctionDef	"cb_io_unalloc_ch (void * user , void * data)"		739175	0					
ANR	739177	CompoundStatement		1518:53:41788:41945	739175	0					
ANR	739178	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1519:1:41791:41819	739175	0	True				
ANR	739179	IdentifierDecl	* core = ( RCore * ) user		739175	0					
ANR	739180	IdentifierDeclType	RCore *		739175	0					
ANR	739181	Identifier	core		739175	1					
ANR	739182	AssignmentExpression	* core = ( RCore * ) user		739175	2		=			
ANR	739183	Identifier	core		739175	0					
ANR	739184	CastExpression	( RCore * ) user		739175	1					
ANR	739185	CastTarget	RCore *		739175	0					
ANR	739186	Identifier	user		739175	1					
ANR	739187	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1520:1:41822:41862	739175	1	True				
ANR	739188	IdentifierDecl	* node = ( RConfigNode * ) data		739175	0					
ANR	739189	IdentifierDeclType	RConfigNode *		739175	0					
ANR	739190	Identifier	node		739175	1					
ANR	739191	AssignmentExpression	* node = ( RConfigNode * ) data		739175	2		=			
ANR	739192	Identifier	node		739175	0					
ANR	739193	CastExpression	( RConfigNode * ) data		739175	1					
ANR	739194	CastTarget	RConfigNode *		739175	0					
ANR	739195	Identifier	data		739175	1					
ANR	739196	ExpressionStatement	core -> print -> io_unalloc_ch = * node -> value ? node -> value [ 0 ] : ' '	1521:1:41865:41929	739175	2	True				
ANR	739197	AssignmentExpression	core -> print -> io_unalloc_ch = * node -> value ? node -> value [ 0 ] : ' '		739175	0		=			
ANR	739198	PtrMemberAccess	core -> print -> io_unalloc_ch		739175	0					
ANR	739199	PtrMemberAccess	core -> print		739175	0					
ANR	739200	Identifier	core		739175	0					
ANR	739201	Identifier	print		739175	1					
ANR	739202	Identifier	io_unalloc_ch		739175	1					
ANR	739203	ConditionalExpression	* node -> value ? node -> value [ 0 ] : ' '		739175	1					
ANR	739204	Condition	* node -> value		739175	0					
ANR	739205	UnaryOperationExpression	* node -> value		739175	0					
ANR	739206	UnaryOperator	*		739175	0					
ANR	739207	PtrMemberAccess	node -> value		739175	1					
ANR	739208	Identifier	node		739175	0					
ANR	739209	Identifier	value		739175	1					
ANR	739210	ArrayIndexing	node -> value [ 0 ]		739175	1					
ANR	739211	PtrMemberAccess	node -> value		739175	0					
ANR	739212	Identifier	node		739175	0					
ANR	739213	Identifier	value		739175	1					
ANR	739214	PrimaryExpression	0		739175	1					
ANR	739215	PrimaryExpression	' '		739175	2					
ANR	739216	ReturnStatement	return true ;	1522:1:41932:41943	739175	3	True				
ANR	739217	Identifier	true		739175	0					
ANR	739218	ReturnType	static bool		739175	1					
ANR	739219	Identifier	cb_io_unalloc_ch		739175	2					
ANR	739220	ParameterList	"void * user , void * data"		739175	3					
ANR	739221	Parameter	void * user	1518:29:41764:41773	739175	0	True				
ANR	739222	ParameterType	void *		739175	0					
ANR	739223	Identifier	user		739175	1					
ANR	739224	Parameter	void * data	1518:41:41776:41785	739175	1	True				
ANR	739225	ParameterType	void *		739175	0					
ANR	739226	Identifier	data		739175	1					
ANR	739227	CFGEntryNode	ENTRY		739175		True				
ANR	739228	CFGExitNode	EXIT		739175		True				
ANR	739229	Symbol	* node -> value		739175						
ANR	739230	Symbol	data		739175						
ANR	739231	Symbol	* core		739175						
ANR	739232	Symbol	node -> value		739175						
ANR	739233	Symbol	core		739175						
ANR	739234	Symbol	node		739175						
ANR	739235	Symbol	* core -> print		739175						
ANR	739236	Symbol	* * node		739175						
ANR	739237	Symbol	true		739175						
ANR	739238	Symbol	* node		739175						
ANR	739239	Symbol	core -> print -> io_unalloc_ch		739175						
ANR	739240	Symbol	core -> print		739175						
ANR	739241	Symbol	user		739175						
ANR	739242	Symbol	* * core		739175						
ANR	739243	Function	cb_hex_header	1525:0:41948:42216							
ANR	739244	FunctionDef	"cb_hex_header (void * user , void * data)"		739243	0					
ANR	739245	CompoundStatement		1525:50:41998:42216	739243	0					
ANR	739246	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1526:1:42001:42029	739243	0	True				
ANR	739247	IdentifierDecl	* core = ( RCore * ) user		739243	0					
ANR	739248	IdentifierDeclType	RCore *		739243	0					
ANR	739249	Identifier	core		739243	1					
ANR	739250	AssignmentExpression	* core = ( RCore * ) user		739243	2		=			
ANR	739251	Identifier	core		739243	0					
ANR	739252	CastExpression	( RCore * ) user		739243	1					
ANR	739253	CastTarget	RCore *		739243	0					
ANR	739254	Identifier	user		739243	1					
ANR	739255	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1527:1:42032:42072	739243	1	True				
ANR	739256	IdentifierDecl	* node = ( RConfigNode * ) data		739243	0					
ANR	739257	IdentifierDeclType	RConfigNode *		739243	0					
ANR	739258	Identifier	node		739243	1					
ANR	739259	AssignmentExpression	* node = ( RConfigNode * ) data		739243	2		=			
ANR	739260	Identifier	node		739243	0					
ANR	739261	CastExpression	( RConfigNode * ) data		739243	1					
ANR	739262	CastTarget	RConfigNode *		739243	0					
ANR	739263	Identifier	data		739243	1					
ANR	739264	IfStatement	if ( node -> i_value )		739243	2					
ANR	739265	Condition	node -> i_value	1528:5:42079:42091	739243	0	True				
ANR	739266	PtrMemberAccess	node -> i_value		739243	0					
ANR	739267	Identifier	node		739243	0					
ANR	739268	Identifier	i_value		739243	1					
ANR	739269	CompoundStatement		4:20:95:95	739243	1					
ANR	739270	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_HEADER	1529:2:42098:42140	739243	0	True				
ANR	739271	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_HEADER		739243	0		|=			
ANR	739272	PtrMemberAccess	core -> print -> flags		739243	0					
ANR	739273	PtrMemberAccess	core -> print		739243	0					
ANR	739274	Identifier	core		739243	0					
ANR	739275	Identifier	print		739243	1					
ANR	739276	Identifier	flags		739243	1					
ANR	739277	Identifier	R_PRINT_FLAGS_HEADER		739243	1					
ANR	739278	ElseStatement	else		739243	0					
ANR	739279	CompoundStatement		6:8:151:151	739243	0					
ANR	739280	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_HEADER	1531:2:42154:42197	739243	0	True				
ANR	739281	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_HEADER		739243	0		&=			
ANR	739282	PtrMemberAccess	core -> print -> flags		739243	0					
ANR	739283	PtrMemberAccess	core -> print		739243	0					
ANR	739284	Identifier	core		739243	0					
ANR	739285	Identifier	print		739243	1					
ANR	739286	Identifier	flags		739243	1					
ANR	739287	Identifier	~R_PRINT_FLAGS_HEADER		739243	1					
ANR	739288	ReturnStatement	return true ;	1533:1:42203:42214	739243	3	True				
ANR	739289	Identifier	true		739243	0					
ANR	739290	ReturnType	static bool		739243	1					
ANR	739291	Identifier	cb_hex_header		739243	2					
ANR	739292	ParameterList	"void * user , void * data"		739243	3					
ANR	739293	Parameter	void * user	1525:26:41974:41983	739243	0	True				
ANR	739294	ParameterType	void *		739243	0					
ANR	739295	Identifier	user		739243	1					
ANR	739296	Parameter	void * data	1525:38:41986:41995	739243	1	True				
ANR	739297	ParameterType	void *		739243	0					
ANR	739298	Identifier	data		739243	1					
ANR	739299	CFGEntryNode	ENTRY		739243		True				
ANR	739300	CFGExitNode	EXIT		739243		True				
ANR	739301	Symbol	~R_PRINT_FLAGS_HEADER		739243						
ANR	739302	Symbol	data		739243						
ANR	739303	Symbol	* core		739243						
ANR	739304	Symbol	node -> i_value		739243						
ANR	739305	Symbol	core		739243						
ANR	739306	Symbol	node		739243						
ANR	739307	Symbol	* core -> print		739243						
ANR	739308	Symbol	true		739243						
ANR	739309	Symbol	* node		739243						
ANR	739310	Symbol	core -> print		739243						
ANR	739311	Symbol	user		739243						
ANR	739312	Symbol	* * core		739243						
ANR	739313	Symbol	core -> print -> flags		739243						
ANR	739314	Symbol	R_PRINT_FLAGS_HEADER		739243						
ANR	739315	Function	cb_hex_bytes	1536:0:42219:42486							
ANR	739316	FunctionDef	"cb_hex_bytes (void * user , void * data)"		739315	0					
ANR	739317	CompoundStatement		1536:49:42268:42486	739315	0					
ANR	739318	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1537:1:42271:42299	739315	0	True				
ANR	739319	IdentifierDecl	* core = ( RCore * ) user		739315	0					
ANR	739320	IdentifierDeclType	RCore *		739315	0					
ANR	739321	Identifier	core		739315	1					
ANR	739322	AssignmentExpression	* core = ( RCore * ) user		739315	2		=			
ANR	739323	Identifier	core		739315	0					
ANR	739324	CastExpression	( RCore * ) user		739315	1					
ANR	739325	CastTarget	RCore *		739315	0					
ANR	739326	Identifier	user		739315	1					
ANR	739327	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1538:1:42302:42342	739315	1	True				
ANR	739328	IdentifierDecl	* node = ( RConfigNode * ) data		739315	0					
ANR	739329	IdentifierDeclType	RConfigNode *		739315	0					
ANR	739330	Identifier	node		739315	1					
ANR	739331	AssignmentExpression	* node = ( RConfigNode * ) data		739315	2		=			
ANR	739332	Identifier	node		739315	0					
ANR	739333	CastExpression	( RConfigNode * ) data		739315	1					
ANR	739334	CastTarget	RConfigNode *		739315	0					
ANR	739335	Identifier	data		739315	1					
ANR	739336	IfStatement	if ( node -> i_value )		739315	2					
ANR	739337	Condition	node -> i_value	1539:5:42349:42361	739315	0	True				
ANR	739338	PtrMemberAccess	node -> i_value		739315	0					
ANR	739339	Identifier	node		739315	0					
ANR	739340	Identifier	i_value		739315	1					
ANR	739341	CompoundStatement		4:20:95:95	739315	1					
ANR	739342	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_NONHEX	1540:2:42368:42411	739315	0	True				
ANR	739343	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_NONHEX		739315	0		&=			
ANR	739344	PtrMemberAccess	core -> print -> flags		739315	0					
ANR	739345	PtrMemberAccess	core -> print		739315	0					
ANR	739346	Identifier	core		739315	0					
ANR	739347	Identifier	print		739315	1					
ANR	739348	Identifier	flags		739315	1					
ANR	739349	Identifier	~R_PRINT_FLAGS_NONHEX		739315	1					
ANR	739350	ElseStatement	else		739315	0					
ANR	739351	CompoundStatement		6:8:152:152	739315	0					
ANR	739352	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_NONHEX	1542:2:42425:42467	739315	0	True				
ANR	739353	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_NONHEX		739315	0		|=			
ANR	739354	PtrMemberAccess	core -> print -> flags		739315	0					
ANR	739355	PtrMemberAccess	core -> print		739315	0					
ANR	739356	Identifier	core		739315	0					
ANR	739357	Identifier	print		739315	1					
ANR	739358	Identifier	flags		739315	1					
ANR	739359	Identifier	R_PRINT_FLAGS_NONHEX		739315	1					
ANR	739360	ReturnStatement	return true ;	1544:1:42473:42484	739315	3	True				
ANR	739361	Identifier	true		739315	0					
ANR	739362	ReturnType	static bool		739315	1					
ANR	739363	Identifier	cb_hex_bytes		739315	2					
ANR	739364	ParameterList	"void * user , void * data"		739315	3					
ANR	739365	Parameter	void * user	1536:25:42244:42253	739315	0	True				
ANR	739366	ParameterType	void *		739315	0					
ANR	739367	Identifier	user		739315	1					
ANR	739368	Parameter	void * data	1536:37:42256:42265	739315	1	True				
ANR	739369	ParameterType	void *		739315	0					
ANR	739370	Identifier	data		739315	1					
ANR	739371	CFGEntryNode	ENTRY		739315		True				
ANR	739372	CFGExitNode	EXIT		739315		True				
ANR	739373	Symbol	data		739315						
ANR	739374	Symbol	* core		739315						
ANR	739375	Symbol	R_PRINT_FLAGS_NONHEX		739315						
ANR	739376	Symbol	node -> i_value		739315						
ANR	739377	Symbol	~R_PRINT_FLAGS_NONHEX		739315						
ANR	739378	Symbol	core		739315						
ANR	739379	Symbol	node		739315						
ANR	739380	Symbol	* core -> print		739315						
ANR	739381	Symbol	true		739315						
ANR	739382	Symbol	* node		739315						
ANR	739383	Symbol	core -> print		739315						
ANR	739384	Symbol	user		739315						
ANR	739385	Symbol	* * core		739315						
ANR	739386	Symbol	core -> print -> flags		739315						
ANR	739387	Function	cb_hex_ascii	1547:0:42489:42760							
ANR	739388	FunctionDef	"cb_hex_ascii (void * user , void * data)"		739387	0					
ANR	739389	CompoundStatement		1547:49:42538:42760	739387	0					
ANR	739390	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1548:1:42541:42569	739387	0	True				
ANR	739391	IdentifierDecl	* core = ( RCore * ) user		739387	0					
ANR	739392	IdentifierDeclType	RCore *		739387	0					
ANR	739393	Identifier	core		739387	1					
ANR	739394	AssignmentExpression	* core = ( RCore * ) user		739387	2		=			
ANR	739395	Identifier	core		739387	0					
ANR	739396	CastExpression	( RCore * ) user		739387	1					
ANR	739397	CastTarget	RCore *		739387	0					
ANR	739398	Identifier	user		739387	1					
ANR	739399	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1549:1:42572:42612	739387	1	True				
ANR	739400	IdentifierDecl	* node = ( RConfigNode * ) data		739387	0					
ANR	739401	IdentifierDeclType	RConfigNode *		739387	0					
ANR	739402	Identifier	node		739387	1					
ANR	739403	AssignmentExpression	* node = ( RConfigNode * ) data		739387	2		=			
ANR	739404	Identifier	node		739387	0					
ANR	739405	CastExpression	( RConfigNode * ) data		739387	1					
ANR	739406	CastTarget	RConfigNode *		739387	0					
ANR	739407	Identifier	data		739387	1					
ANR	739408	IfStatement	if ( node -> i_value )		739387	2					
ANR	739409	Condition	node -> i_value	1550:5:42619:42631	739387	0	True				
ANR	739410	PtrMemberAccess	node -> i_value		739387	0					
ANR	739411	Identifier	node		739387	0					
ANR	739412	Identifier	i_value		739387	1					
ANR	739413	CompoundStatement		4:20:95:95	739387	1					
ANR	739414	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_NONASCII	1551:2:42638:42683	739387	0	True				
ANR	739415	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_NONASCII		739387	0		&=			
ANR	739416	PtrMemberAccess	core -> print -> flags		739387	0					
ANR	739417	PtrMemberAccess	core -> print		739387	0					
ANR	739418	Identifier	core		739387	0					
ANR	739419	Identifier	print		739387	1					
ANR	739420	Identifier	flags		739387	1					
ANR	739421	Identifier	~R_PRINT_FLAGS_NONASCII		739387	1					
ANR	739422	ElseStatement	else		739387	0					
ANR	739423	CompoundStatement		6:8:154:154	739387	0					
ANR	739424	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_NONASCII	1553:2:42697:42741	739387	0	True				
ANR	739425	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_NONASCII		739387	0		|=			
ANR	739426	PtrMemberAccess	core -> print -> flags		739387	0					
ANR	739427	PtrMemberAccess	core -> print		739387	0					
ANR	739428	Identifier	core		739387	0					
ANR	739429	Identifier	print		739387	1					
ANR	739430	Identifier	flags		739387	1					
ANR	739431	Identifier	R_PRINT_FLAGS_NONASCII		739387	1					
ANR	739432	ReturnStatement	return true ;	1555:1:42747:42758	739387	3	True				
ANR	739433	Identifier	true		739387	0					
ANR	739434	ReturnType	static bool		739387	1					
ANR	739435	Identifier	cb_hex_ascii		739387	2					
ANR	739436	ParameterList	"void * user , void * data"		739387	3					
ANR	739437	Parameter	void * user	1547:25:42514:42523	739387	0	True				
ANR	739438	ParameterType	void *		739387	0					
ANR	739439	Identifier	user		739387	1					
ANR	739440	Parameter	void * data	1547:37:42526:42535	739387	1	True				
ANR	739441	ParameterType	void *		739387	0					
ANR	739442	Identifier	data		739387	1					
ANR	739443	CFGEntryNode	ENTRY		739387		True				
ANR	739444	CFGExitNode	EXIT		739387		True				
ANR	739445	Symbol	data		739387						
ANR	739446	Symbol	* core		739387						
ANR	739447	Symbol	~R_PRINT_FLAGS_NONASCII		739387						
ANR	739448	Symbol	node -> i_value		739387						
ANR	739449	Symbol	core		739387						
ANR	739450	Symbol	node		739387						
ANR	739451	Symbol	* core -> print		739387						
ANR	739452	Symbol	R_PRINT_FLAGS_NONASCII		739387						
ANR	739453	Symbol	true		739387						
ANR	739454	Symbol	* node		739387						
ANR	739455	Symbol	core -> print		739387						
ANR	739456	Symbol	user		739387						
ANR	739457	Symbol	* * core		739387						
ANR	739458	Symbol	core -> print -> flags		739387						
ANR	739459	Function	cb_hex_style	1558:0:42763:43028							
ANR	739460	FunctionDef	"cb_hex_style (void * user , void * data)"		739459	0					
ANR	739461	CompoundStatement		1558:49:42812:43028	739459	0					
ANR	739462	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1559:1:42815:42843	739459	0	True				
ANR	739463	IdentifierDecl	* core = ( RCore * ) user		739459	0					
ANR	739464	IdentifierDeclType	RCore *		739459	0					
ANR	739465	Identifier	core		739459	1					
ANR	739466	AssignmentExpression	* core = ( RCore * ) user		739459	2		=			
ANR	739467	Identifier	core		739459	0					
ANR	739468	CastExpression	( RCore * ) user		739459	1					
ANR	739469	CastTarget	RCore *		739459	0					
ANR	739470	Identifier	user		739459	1					
ANR	739471	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1560:1:42846:42886	739459	1	True				
ANR	739472	IdentifierDecl	* node = ( RConfigNode * ) data		739459	0					
ANR	739473	IdentifierDeclType	RConfigNode *		739459	0					
ANR	739474	Identifier	node		739459	1					
ANR	739475	AssignmentExpression	* node = ( RConfigNode * ) data		739459	2		=			
ANR	739476	Identifier	node		739459	0					
ANR	739477	CastExpression	( RConfigNode * ) data		739459	1					
ANR	739478	CastTarget	RConfigNode *		739459	0					
ANR	739479	Identifier	data		739459	1					
ANR	739480	IfStatement	if ( node -> i_value )		739459	2					
ANR	739481	Condition	node -> i_value	1561:5:42893:42905	739459	0	True				
ANR	739482	PtrMemberAccess	node -> i_value		739459	0					
ANR	739483	Identifier	node		739459	0					
ANR	739484	Identifier	i_value		739459	1					
ANR	739485	CompoundStatement		4:20:95:95	739459	1					
ANR	739486	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_STYLE	1562:2:42912:42953	739459	0	True				
ANR	739487	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_STYLE		739459	0		|=			
ANR	739488	PtrMemberAccess	core -> print -> flags		739459	0					
ANR	739489	PtrMemberAccess	core -> print		739459	0					
ANR	739490	Identifier	core		739459	0					
ANR	739491	Identifier	print		739459	1					
ANR	739492	Identifier	flags		739459	1					
ANR	739493	Identifier	R_PRINT_FLAGS_STYLE		739459	1					
ANR	739494	ElseStatement	else		739459	0					
ANR	739495	CompoundStatement		6:8:150:150	739459	0					
ANR	739496	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_STYLE	1564:2:42967:43009	739459	0	True				
ANR	739497	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_STYLE		739459	0		&=			
ANR	739498	PtrMemberAccess	core -> print -> flags		739459	0					
ANR	739499	PtrMemberAccess	core -> print		739459	0					
ANR	739500	Identifier	core		739459	0					
ANR	739501	Identifier	print		739459	1					
ANR	739502	Identifier	flags		739459	1					
ANR	739503	Identifier	~R_PRINT_FLAGS_STYLE		739459	1					
ANR	739504	ReturnStatement	return true ;	1566:1:43015:43026	739459	3	True				
ANR	739505	Identifier	true		739459	0					
ANR	739506	ReturnType	static bool		739459	1					
ANR	739507	Identifier	cb_hex_style		739459	2					
ANR	739508	ParameterList	"void * user , void * data"		739459	3					
ANR	739509	Parameter	void * user	1558:25:42788:42797	739459	0	True				
ANR	739510	ParameterType	void *		739459	0					
ANR	739511	Identifier	user		739459	1					
ANR	739512	Parameter	void * data	1558:37:42800:42809	739459	1	True				
ANR	739513	ParameterType	void *		739459	0					
ANR	739514	Identifier	data		739459	1					
ANR	739515	CFGEntryNode	ENTRY		739459		True				
ANR	739516	CFGExitNode	EXIT		739459		True				
ANR	739517	Symbol	R_PRINT_FLAGS_STYLE		739459						
ANR	739518	Symbol	data		739459						
ANR	739519	Symbol	* core		739459						
ANR	739520	Symbol	node -> i_value		739459						
ANR	739521	Symbol	core		739459						
ANR	739522	Symbol	node		739459						
ANR	739523	Symbol	* core -> print		739459						
ANR	739524	Symbol	true		739459						
ANR	739525	Symbol	* node		739459						
ANR	739526	Symbol	core -> print		739459						
ANR	739527	Symbol	~R_PRINT_FLAGS_STYLE		739459						
ANR	739528	Symbol	user		739459						
ANR	739529	Symbol	* * core		739459						
ANR	739530	Symbol	core -> print -> flags		739459						
ANR	739531	Function	cb_hex_hdroff	1569:0:43031:43299							
ANR	739532	FunctionDef	"cb_hex_hdroff (void * user , void * data)"		739531	0					
ANR	739533	CompoundStatement		1569:50:43081:43299	739531	0					
ANR	739534	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1570:1:43084:43112	739531	0	True				
ANR	739535	IdentifierDecl	* core = ( RCore * ) user		739531	0					
ANR	739536	IdentifierDeclType	RCore *		739531	0					
ANR	739537	Identifier	core		739531	1					
ANR	739538	AssignmentExpression	* core = ( RCore * ) user		739531	2		=			
ANR	739539	Identifier	core		739531	0					
ANR	739540	CastExpression	( RCore * ) user		739531	1					
ANR	739541	CastTarget	RCore *		739531	0					
ANR	739542	Identifier	user		739531	1					
ANR	739543	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1571:1:43115:43155	739531	1	True				
ANR	739544	IdentifierDecl	* node = ( RConfigNode * ) data		739531	0					
ANR	739545	IdentifierDeclType	RConfigNode *		739531	0					
ANR	739546	Identifier	node		739531	1					
ANR	739547	AssignmentExpression	* node = ( RConfigNode * ) data		739531	2		=			
ANR	739548	Identifier	node		739531	0					
ANR	739549	CastExpression	( RConfigNode * ) data		739531	1					
ANR	739550	CastTarget	RConfigNode *		739531	0					
ANR	739551	Identifier	data		739531	1					
ANR	739552	IfStatement	if ( node -> i_value )		739531	2					
ANR	739553	Condition	node -> i_value	1572:5:43162:43174	739531	0	True				
ANR	739554	PtrMemberAccess	node -> i_value		739531	0					
ANR	739555	Identifier	node		739531	0					
ANR	739556	Identifier	i_value		739531	1					
ANR	739557	CompoundStatement		4:20:95:95	739531	1					
ANR	739558	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_HDROFF	1573:2:43181:43223	739531	0	True				
ANR	739559	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_HDROFF		739531	0		|=			
ANR	739560	PtrMemberAccess	core -> print -> flags		739531	0					
ANR	739561	PtrMemberAccess	core -> print		739531	0					
ANR	739562	Identifier	core		739531	0					
ANR	739563	Identifier	print		739531	1					
ANR	739564	Identifier	flags		739531	1					
ANR	739565	Identifier	R_PRINT_FLAGS_HDROFF		739531	1					
ANR	739566	ElseStatement	else		739531	0					
ANR	739567	CompoundStatement		6:8:151:151	739531	0					
ANR	739568	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_HDROFF	1575:2:43237:43280	739531	0	True				
ANR	739569	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_HDROFF		739531	0		&=			
ANR	739570	PtrMemberAccess	core -> print -> flags		739531	0					
ANR	739571	PtrMemberAccess	core -> print		739531	0					
ANR	739572	Identifier	core		739531	0					
ANR	739573	Identifier	print		739531	1					
ANR	739574	Identifier	flags		739531	1					
ANR	739575	Identifier	~R_PRINT_FLAGS_HDROFF		739531	1					
ANR	739576	ReturnStatement	return true ;	1577:1:43286:43297	739531	3	True				
ANR	739577	Identifier	true		739531	0					
ANR	739578	ReturnType	static bool		739531	1					
ANR	739579	Identifier	cb_hex_hdroff		739531	2					
ANR	739580	ParameterList	"void * user , void * data"		739531	3					
ANR	739581	Parameter	void * user	1569:26:43057:43066	739531	0	True				
ANR	739582	ParameterType	void *		739531	0					
ANR	739583	Identifier	user		739531	1					
ANR	739584	Parameter	void * data	1569:38:43069:43078	739531	1	True				
ANR	739585	ParameterType	void *		739531	0					
ANR	739586	Identifier	data		739531	1					
ANR	739587	CFGEntryNode	ENTRY		739531		True				
ANR	739588	CFGExitNode	EXIT		739531		True				
ANR	739589	Symbol	data		739531						
ANR	739590	Symbol	R_PRINT_FLAGS_HDROFF		739531						
ANR	739591	Symbol	* core		739531						
ANR	739592	Symbol	node -> i_value		739531						
ANR	739593	Symbol	core		739531						
ANR	739594	Symbol	node		739531						
ANR	739595	Symbol	* core -> print		739531						
ANR	739596	Symbol	~R_PRINT_FLAGS_HDROFF		739531						
ANR	739597	Symbol	true		739531						
ANR	739598	Symbol	* node		739531						
ANR	739599	Symbol	core -> print		739531						
ANR	739600	Symbol	user		739531						
ANR	739601	Symbol	* * core		739531						
ANR	739602	Symbol	core -> print -> flags		739531						
ANR	739603	Function	cb_log_events	1580:0:43302:43478							
ANR	739604	FunctionDef	"cb_log_events (void * user , void * data)"		739603	0					
ANR	739605	CompoundStatement		1580:51:43353:43478	739603	0					
ANR	739606	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1581:1:43356:43384	739603	0	True				
ANR	739607	IdentifierDecl	* core = ( RCore * ) user		739603	0					
ANR	739608	IdentifierDeclType	RCore *		739603	0					
ANR	739609	Identifier	core		739603	1					
ANR	739610	AssignmentExpression	* core = ( RCore * ) user		739603	2		=			
ANR	739611	Identifier	core		739603	0					
ANR	739612	CastExpression	( RCore * ) user		739603	1					
ANR	739613	CastTarget	RCore *		739603	0					
ANR	739614	Identifier	user		739603	1					
ANR	739615	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1582:1:43387:43427	739603	1	True				
ANR	739616	IdentifierDecl	* node = ( RConfigNode * ) data		739603	0					
ANR	739617	IdentifierDeclType	RConfigNode *		739603	0					
ANR	739618	Identifier	node		739603	1					
ANR	739619	AssignmentExpression	* node = ( RConfigNode * ) data		739603	2		=			
ANR	739620	Identifier	node		739603	0					
ANR	739621	CastExpression	( RConfigNode * ) data		739603	1					
ANR	739622	CastTarget	RConfigNode *		739603	0					
ANR	739623	Identifier	data		739603	1					
ANR	739624	ExpressionStatement	core -> log_events = node -> i_value	1583:1:43430:43462	739603	2	True				
ANR	739625	AssignmentExpression	core -> log_events = node -> i_value		739603	0		=			
ANR	739626	PtrMemberAccess	core -> log_events		739603	0					
ANR	739627	Identifier	core		739603	0					
ANR	739628	Identifier	log_events		739603	1					
ANR	739629	PtrMemberAccess	node -> i_value		739603	1					
ANR	739630	Identifier	node		739603	0					
ANR	739631	Identifier	i_value		739603	1					
ANR	739632	ReturnStatement	return true ;	1584:1:43465:43476	739603	3	True				
ANR	739633	Identifier	true		739603	0					
ANR	739634	ReturnType	static bool		739603	1					
ANR	739635	Identifier	cb_log_events		739603	2					
ANR	739636	ParameterList	"void * user , void * data"		739603	3					
ANR	739637	Parameter	void * user	1580:27:43329:43338	739603	0	True				
ANR	739638	ParameterType	void *		739603	0					
ANR	739639	Identifier	user		739603	1					
ANR	739640	Parameter	void * data	1580:39:43341:43350	739603	1	True				
ANR	739641	ParameterType	void *		739603	0					
ANR	739642	Identifier	data		739603	1					
ANR	739643	CFGEntryNode	ENTRY		739603		True				
ANR	739644	CFGExitNode	EXIT		739603		True				
ANR	739645	Symbol	core		739603						
ANR	739646	Symbol	node		739603						
ANR	739647	Symbol	data		739603						
ANR	739648	Symbol	* core		739603						
ANR	739649	Symbol	true		739603						
ANR	739650	Symbol	* node		739603						
ANR	739651	Symbol	user		739603						
ANR	739652	Symbol	node -> i_value		739603						
ANR	739653	Symbol	core -> log_events		739603						
ANR	739654	Function	cb_hexcomments	1587:0:43481:43752							
ANR	739655	FunctionDef	"cb_hexcomments (void * user , void * data)"		739654	0					
ANR	739656	CompoundStatement		1587:51:43532:43752	739654	0					
ANR	739657	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1588:1:43535:43563	739654	0	True				
ANR	739658	IdentifierDecl	* core = ( RCore * ) user		739654	0					
ANR	739659	IdentifierDeclType	RCore *		739654	0					
ANR	739660	Identifier	core		739654	1					
ANR	739661	AssignmentExpression	* core = ( RCore * ) user		739654	2		=			
ANR	739662	Identifier	core		739654	0					
ANR	739663	CastExpression	( RCore * ) user		739654	1					
ANR	739664	CastTarget	RCore *		739654	0					
ANR	739665	Identifier	user		739654	1					
ANR	739666	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1589:1:43566:43606	739654	1	True				
ANR	739667	IdentifierDecl	* node = ( RConfigNode * ) data		739654	0					
ANR	739668	IdentifierDeclType	RConfigNode *		739654	0					
ANR	739669	Identifier	node		739654	1					
ANR	739670	AssignmentExpression	* node = ( RConfigNode * ) data		739654	2		=			
ANR	739671	Identifier	node		739654	0					
ANR	739672	CastExpression	( RConfigNode * ) data		739654	1					
ANR	739673	CastTarget	RConfigNode *		739654	0					
ANR	739674	Identifier	data		739654	1					
ANR	739675	IfStatement	if ( node -> i_value )		739654	2					
ANR	739676	Condition	node -> i_value	1590:5:43613:43625	739654	0	True				
ANR	739677	PtrMemberAccess	node -> i_value		739654	0					
ANR	739678	Identifier	node		739654	0					
ANR	739679	Identifier	i_value		739654	1					
ANR	739680	CompoundStatement		4:20:95:95	739654	1					
ANR	739681	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_COMMENT	1591:2:43632:43675	739654	0	True				
ANR	739682	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_COMMENT		739654	0		|=			
ANR	739683	PtrMemberAccess	core -> print -> flags		739654	0					
ANR	739684	PtrMemberAccess	core -> print		739654	0					
ANR	739685	Identifier	core		739654	0					
ANR	739686	Identifier	print		739654	1					
ANR	739687	Identifier	flags		739654	1					
ANR	739688	Identifier	R_PRINT_FLAGS_COMMENT		739654	1					
ANR	739689	ElseStatement	else		739654	0					
ANR	739690	CompoundStatement		6:8:152:152	739654	0					
ANR	739691	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_COMMENT	1593:2:43689:43733	739654	0	True				
ANR	739692	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_COMMENT		739654	0		&=			
ANR	739693	PtrMemberAccess	core -> print -> flags		739654	0					
ANR	739694	PtrMemberAccess	core -> print		739654	0					
ANR	739695	Identifier	core		739654	0					
ANR	739696	Identifier	print		739654	1					
ANR	739697	Identifier	flags		739654	1					
ANR	739698	Identifier	~R_PRINT_FLAGS_COMMENT		739654	1					
ANR	739699	ReturnStatement	return true ;	1595:1:43739:43750	739654	3	True				
ANR	739700	Identifier	true		739654	0					
ANR	739701	ReturnType	static bool		739654	1					
ANR	739702	Identifier	cb_hexcomments		739654	2					
ANR	739703	ParameterList	"void * user , void * data"		739654	3					
ANR	739704	Parameter	void * user	1587:27:43508:43517	739654	0	True				
ANR	739705	ParameterType	void *		739654	0					
ANR	739706	Identifier	user		739654	1					
ANR	739707	Parameter	void * data	1587:39:43520:43529	739654	1	True				
ANR	739708	ParameterType	void *		739654	0					
ANR	739709	Identifier	data		739654	1					
ANR	739710	CFGEntryNode	ENTRY		739654		True				
ANR	739711	CFGExitNode	EXIT		739654		True				
ANR	739712	Symbol	data		739654						
ANR	739713	Symbol	* core		739654						
ANR	739714	Symbol	R_PRINT_FLAGS_COMMENT		739654						
ANR	739715	Symbol	node -> i_value		739654						
ANR	739716	Symbol	core		739654						
ANR	739717	Symbol	node		739654						
ANR	739718	Symbol	* core -> print		739654						
ANR	739719	Symbol	~R_PRINT_FLAGS_COMMENT		739654						
ANR	739720	Symbol	true		739654						
ANR	739721	Symbol	* node		739654						
ANR	739722	Symbol	core -> print		739654						
ANR	739723	Symbol	user		739654						
ANR	739724	Symbol	* * core		739654						
ANR	739725	Symbol	core -> print -> flags		739654						
ANR	739726	Function	cb_iopcache	1598:0:43755:44258							
ANR	739727	FunctionDef	"cb_iopcache (void * user , void * data)"		739726	0					
ANR	739728	CompoundStatement		1598:48:43803:44258	739726	0					
ANR	739729	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1599:1:43806:43834	739726	0	True				
ANR	739730	IdentifierDecl	* core = ( RCore * ) user		739726	0					
ANR	739731	IdentifierDeclType	RCore *		739726	0					
ANR	739732	Identifier	core		739726	1					
ANR	739733	AssignmentExpression	* core = ( RCore * ) user		739726	2		=			
ANR	739734	Identifier	core		739726	0					
ANR	739735	CastExpression	( RCore * ) user		739726	1					
ANR	739736	CastTarget	RCore *		739726	0					
ANR	739737	Identifier	user		739726	1					
ANR	739738	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1600:1:43837:43877	739726	1	True				
ANR	739739	IdentifierDecl	* node = ( RConfigNode * ) data		739726	0					
ANR	739740	IdentifierDeclType	RConfigNode *		739726	0					
ANR	739741	Identifier	node		739726	1					
ANR	739742	AssignmentExpression	* node = ( RConfigNode * ) data		739726	2		=			
ANR	739743	Identifier	node		739726	0					
ANR	739744	CastExpression	( RConfigNode * ) data		739726	1					
ANR	739745	CastTarget	RConfigNode *		739726	0					
ANR	739746	Identifier	data		739726	1					
ANR	739747	IfStatement	if ( ( bool ) node -> i_value )		739726	2					
ANR	739748	Condition	( bool ) node -> i_value	1601:5:43884:43902	739726	0	True				
ANR	739749	CastExpression	( bool ) node -> i_value		739726	0					
ANR	739750	CastTarget	bool		739726	0					
ANR	739751	PtrMemberAccess	node -> i_value		739726	1					
ANR	739752	Identifier	node		739726	0					
ANR	739753	Identifier	i_value		739726	1					
ANR	739754	CompoundStatement		4:26:101:101	739726	1					
ANR	739755	IfStatement	if ( core )		739726	0					
ANR	739756	Condition	core	1602:6:43913:43916	739726	0	True				
ANR	739757	Identifier	core		739726	0					
ANR	739758	CompoundStatement		5:12:115:115	739726	1					
ANR	739759	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache.read"" , true )"	1603:3:43924:43977	739726	0	True				
ANR	739760	CallExpression	"r_config_set_i ( core -> config , ""io.pcache.read"" , true )"		739726	0					
ANR	739761	Callee	r_config_set_i		739726	0					
ANR	739762	Identifier	r_config_set_i		739726	0					
ANR	739763	ArgumentList	core -> config		739726	1					
ANR	739764	Argument	core -> config		739726	0					
ANR	739765	PtrMemberAccess	core -> config		739726	0					
ANR	739766	Identifier	core		739726	0					
ANR	739767	Identifier	config		739726	1					
ANR	739768	Argument	"""io.pcache.read"""		739726	1					
ANR	739769	PrimaryExpression	"""io.pcache.read"""		739726	0					
ANR	739770	Argument	true		739726	2					
ANR	739771	Identifier	true		739726	0					
ANR	739772	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache.write"" , true )"	1604:3:43982:44036	739726	1	True				
ANR	739773	CallExpression	"r_config_set_i ( core -> config , ""io.pcache.write"" , true )"		739726	0					
ANR	739774	Callee	r_config_set_i		739726	0					
ANR	739775	Identifier	r_config_set_i		739726	0					
ANR	739776	ArgumentList	core -> config		739726	1					
ANR	739777	Argument	core -> config		739726	0					
ANR	739778	PtrMemberAccess	core -> config		739726	0					
ANR	739779	Identifier	core		739726	0					
ANR	739780	Identifier	config		739726	1					
ANR	739781	Argument	"""io.pcache.write"""		739726	1					
ANR	739782	PrimaryExpression	"""io.pcache.write"""		739726	0					
ANR	739783	Argument	true		739726	2					
ANR	739784	Identifier	true		739726	0					
ANR	739785	ElseStatement	else		739726	0					
ANR	739786	CompoundStatement		9:8:246:246	739726	0					
ANR	739787	IfStatement	if ( core && core -> io )		739726	0					
ANR	739788	Condition	core && core -> io	1607:6:44058:44073	739726	0	True				
ANR	739789	AndExpression	core && core -> io		739726	0		&&			
ANR	739790	Identifier	core		739726	0					
ANR	739791	PtrMemberAccess	core -> io		739726	1					
ANR	739792	Identifier	core		739726	0					
ANR	739793	Identifier	io		739726	1					
ANR	739794	CompoundStatement		10:24:272:272	739726	1					
ANR	739795	ExpressionStatement	r_io_desc_cache_fini_all ( core -> io )	1608:3:44081:44116	739726	0	True				
ANR	739796	CallExpression	r_io_desc_cache_fini_all ( core -> io )		739726	0					
ANR	739797	Callee	r_io_desc_cache_fini_all		739726	0					
ANR	739798	Identifier	r_io_desc_cache_fini_all		739726	0					
ANR	739799	ArgumentList	core -> io		739726	1					
ANR	739800	Argument	core -> io		739726	0					
ANR	739801	PtrMemberAccess	core -> io		739726	0					
ANR	739802	Identifier	core		739726	0					
ANR	739803	Identifier	io		739726	1					
ANR	739804	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache.read"" , false )"	1609:3:44121:44175	739726	1	True				
ANR	739805	CallExpression	"r_config_set_i ( core -> config , ""io.pcache.read"" , false )"		739726	0					
ANR	739806	Callee	r_config_set_i		739726	0					
ANR	739807	Identifier	r_config_set_i		739726	0					
ANR	739808	ArgumentList	core -> config		739726	1					
ANR	739809	Argument	core -> config		739726	0					
ANR	739810	PtrMemberAccess	core -> config		739726	0					
ANR	739811	Identifier	core		739726	0					
ANR	739812	Identifier	config		739726	1					
ANR	739813	Argument	"""io.pcache.read"""		739726	1					
ANR	739814	PrimaryExpression	"""io.pcache.read"""		739726	0					
ANR	739815	Argument	false		739726	2					
ANR	739816	Identifier	false		739726	0					
ANR	739817	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache.write"" , false )"	1610:3:44180:44235	739726	2	True				
ANR	739818	CallExpression	"r_config_set_i ( core -> config , ""io.pcache.write"" , false )"		739726	0					
ANR	739819	Callee	r_config_set_i		739726	0					
ANR	739820	Identifier	r_config_set_i		739726	0					
ANR	739821	ArgumentList	core -> config		739726	1					
ANR	739822	Argument	core -> config		739726	0					
ANR	739823	PtrMemberAccess	core -> config		739726	0					
ANR	739824	Identifier	core		739726	0					
ANR	739825	Identifier	config		739726	1					
ANR	739826	Argument	"""io.pcache.write"""		739726	1					
ANR	739827	PrimaryExpression	"""io.pcache.write"""		739726	0					
ANR	739828	Argument	false		739726	2					
ANR	739829	Identifier	false		739726	0					
ANR	739830	ReturnStatement	return true ;	1613:1:44245:44256	739726	3	True				
ANR	739831	Identifier	true		739726	0					
ANR	739832	ReturnType	static bool		739726	1					
ANR	739833	Identifier	cb_iopcache		739726	2					
ANR	739834	ParameterList	"void * user , void * data"		739726	3					
ANR	739835	Parameter	void * user	1598:24:43779:43788	739726	0	True				
ANR	739836	ParameterType	void *		739726	0					
ANR	739837	Identifier	user		739726	1					
ANR	739838	Parameter	void * data	1598:36:43791:43800	739726	1	True				
ANR	739839	ParameterType	void *		739726	0					
ANR	739840	Identifier	data		739726	1					
ANR	739841	CFGEntryNode	ENTRY		739726		True				
ANR	739842	CFGExitNode	EXIT		739726		True				
ANR	739843	Symbol	core -> config		739726						
ANR	739844	Symbol	core		739726						
ANR	739845	Symbol	node		739726						
ANR	739846	Symbol	data		739726						
ANR	739847	Symbol	core -> io		739726						
ANR	739848	Symbol	* core		739726						
ANR	739849	Symbol	true		739726						
ANR	739850	Symbol	false		739726						
ANR	739851	Symbol	* node		739726						
ANR	739852	Symbol	user		739726						
ANR	739853	Symbol	node -> i_value		739726						
ANR	739854	Function	cb_iopcacheread	1616:0:44261:44715							
ANR	739855	FunctionDef	"cb_iopcacheread (void * user , void * data)"		739854	0					
ANR	739856	CompoundStatement		1616:52:44313:44715	739854	0					
ANR	739857	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1617:1:44316:44344	739854	0	True				
ANR	739858	IdentifierDecl	* core = ( RCore * ) user		739854	0					
ANR	739859	IdentifierDeclType	RCore *		739854	0					
ANR	739860	Identifier	core		739854	1					
ANR	739861	AssignmentExpression	* core = ( RCore * ) user		739854	2		=			
ANR	739862	Identifier	core		739854	0					
ANR	739863	CastExpression	( RCore * ) user		739854	1					
ANR	739864	CastTarget	RCore *		739854	0					
ANR	739865	Identifier	user		739854	1					
ANR	739866	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1618:1:44347:44387	739854	1	True				
ANR	739867	IdentifierDecl	* node = ( RConfigNode * ) data		739854	0					
ANR	739868	IdentifierDeclType	RConfigNode *		739854	0					
ANR	739869	Identifier	node		739854	1					
ANR	739870	AssignmentExpression	* node = ( RConfigNode * ) data		739854	2		=			
ANR	739871	Identifier	node		739854	0					
ANR	739872	CastExpression	( RConfigNode * ) data		739854	1					
ANR	739873	CastTarget	RConfigNode *		739854	0					
ANR	739874	Identifier	data		739854	1					
ANR	739875	IfStatement	if ( ( bool ) node -> i_value )		739854	2					
ANR	739876	Condition	( bool ) node -> i_value	1619:5:44394:44412	739854	0	True				
ANR	739877	CastExpression	( bool ) node -> i_value		739854	0					
ANR	739878	CastTarget	bool		739854	0					
ANR	739879	PtrMemberAccess	node -> i_value		739854	1					
ANR	739880	Identifier	node		739854	0					
ANR	739881	Identifier	i_value		739854	1					
ANR	739882	CompoundStatement		4:26:101:101	739854	1					
ANR	739883	IfStatement	if ( core && core -> io )		739854	0					
ANR	739884	Condition	core && core -> io	1620:6:44423:44438	739854	0	True				
ANR	739885	AndExpression	core && core -> io		739854	0		&&			
ANR	739886	Identifier	core		739854	0					
ANR	739887	PtrMemberAccess	core -> io		739854	1					
ANR	739888	Identifier	core		739854	0					
ANR	739889	Identifier	io		739854	1					
ANR	739890	CompoundStatement		5:24:127:127	739854	1					
ANR	739891	ExpressionStatement	core -> io -> p_cache |= 1	1621:3:44446:44468	739854	0	True				
ANR	739892	AssignmentExpression	core -> io -> p_cache |= 1		739854	0		|=			
ANR	739893	PtrMemberAccess	core -> io -> p_cache		739854	0					
ANR	739894	PtrMemberAccess	core -> io		739854	0					
ANR	739895	Identifier	core		739854	0					
ANR	739896	Identifier	io		739854	1					
ANR	739897	Identifier	p_cache		739854	1					
ANR	739898	PrimaryExpression	1		739854	1					
ANR	739899	ElseStatement	else		739854	0					
ANR	739900	CompoundStatement		8:8:168:168	739854	0					
ANR	739901	IfStatement	if ( core && core -> io && core -> io -> p_cache )		739854	0					
ANR	739902	Condition	core && core -> io && core -> io -> p_cache	1624:6:44490:44526	739854	0	True				
ANR	739903	AndExpression	core && core -> io && core -> io -> p_cache		739854	0		&&			
ANR	739904	Identifier	core		739854	0					
ANR	739905	AndExpression	core -> io && core -> io -> p_cache		739854	1		&&			
ANR	739906	PtrMemberAccess	core -> io		739854	0					
ANR	739907	Identifier	core		739854	0					
ANR	739908	Identifier	io		739854	1					
ANR	739909	PtrMemberAccess	core -> io -> p_cache		739854	1					
ANR	739910	PtrMemberAccess	core -> io		739854	0					
ANR	739911	Identifier	core		739854	0					
ANR	739912	Identifier	io		739854	1					
ANR	739913	Identifier	p_cache		739854	1					
ANR	739914	CompoundStatement		9:45:215:215	739854	1					
ANR	739915	ExpressionStatement	core -> io -> p_cache &= 2	1625:3:44534:44556	739854	0	True				
ANR	739916	AssignmentExpression	core -> io -> p_cache &= 2		739854	0		&=			
ANR	739917	PtrMemberAccess	core -> io -> p_cache		739854	0					
ANR	739918	PtrMemberAccess	core -> io		739854	0					
ANR	739919	Identifier	core		739854	0					
ANR	739920	Identifier	io		739854	1					
ANR	739921	Identifier	p_cache		739854	1					
ANR	739922	PrimaryExpression	2		739854	1					
ANR	739923	IfStatement	if ( ! ( core -> io -> p_cache & 2 ) )		739854	1					
ANR	739924	Condition	! ( core -> io -> p_cache & 2 )	1626:7:44565:44588	739854	0	True				
ANR	739925	UnaryOperationExpression	! ( core -> io -> p_cache & 2 )		739854	0					
ANR	739926	UnaryOperator	!		739854	0					
ANR	739927	BitAndExpression	core -> io -> p_cache & 2		739854	1		&			
ANR	739928	PtrMemberAccess	core -> io -> p_cache		739854	0					
ANR	739929	PtrMemberAccess	core -> io		739854	0					
ANR	739930	Identifier	core		739854	0					
ANR	739931	Identifier	io		739854	1					
ANR	739932	Identifier	p_cache		739854	1					
ANR	739933	PrimaryExpression	2		739854	1					
ANR	739934	CompoundStatement		11:33:277:277	739854	1					
ANR	739935	ExpressionStatement	r_io_desc_cache_fini_all ( core -> io )	1627:4:44597:44632	739854	0	True				
ANR	739936	CallExpression	r_io_desc_cache_fini_all ( core -> io )		739854	0					
ANR	739937	Callee	r_io_desc_cache_fini_all		739854	0					
ANR	739938	Identifier	r_io_desc_cache_fini_all		739854	0					
ANR	739939	ArgumentList	core -> io		739854	1					
ANR	739940	Argument	core -> io		739854	0					
ANR	739941	PtrMemberAccess	core -> io		739854	0					
ANR	739942	Identifier	core		739854	0					
ANR	739943	Identifier	io		739854	1					
ANR	739944	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache"" , false )"	1628:4:44638:44687	739854	1	True				
ANR	739945	CallExpression	"r_config_set_i ( core -> config , ""io.pcache"" , false )"		739854	0					
ANR	739946	Callee	r_config_set_i		739854	0					
ANR	739947	Identifier	r_config_set_i		739854	0					
ANR	739948	ArgumentList	core -> config		739854	1					
ANR	739949	Argument	core -> config		739854	0					
ANR	739950	PtrMemberAccess	core -> config		739854	0					
ANR	739951	Identifier	core		739854	0					
ANR	739952	Identifier	config		739854	1					
ANR	739953	Argument	"""io.pcache"""		739854	1					
ANR	739954	PrimaryExpression	"""io.pcache"""		739854	0					
ANR	739955	Argument	false		739854	2					
ANR	739956	Identifier	false		739854	0					
ANR	739957	ReturnStatement	return true ;	1632:1:44702:44713	739854	3	True				
ANR	739958	Identifier	true		739854	0					
ANR	739959	ReturnType	static bool		739854	1					
ANR	739960	Identifier	cb_iopcacheread		739854	2					
ANR	739961	ParameterList	"void * user , void * data"		739854	3					
ANR	739962	Parameter	void * user	1616:28:44289:44298	739854	0	True				
ANR	739963	ParameterType	void *		739854	0					
ANR	739964	Identifier	user		739854	1					
ANR	739965	Parameter	void * data	1616:40:44301:44310	739854	1	True				
ANR	739966	ParameterType	void *		739854	0					
ANR	739967	Identifier	data		739854	1					
ANR	739968	CFGEntryNode	ENTRY		739854		True				
ANR	739969	CFGExitNode	EXIT		739854		True				
ANR	739970	Symbol	core -> io -> p_cache		739854						
ANR	739971	Symbol	core -> config		739854						
ANR	739972	Symbol	data		739854						
ANR	739973	Symbol	* core		739854						
ANR	739974	Symbol	false		739854						
ANR	739975	Symbol	node -> i_value		739854						
ANR	739976	Symbol	core		739854						
ANR	739977	Symbol	node		739854						
ANR	739978	Symbol	* core -> io		739854						
ANR	739979	Symbol	core -> io		739854						
ANR	739980	Symbol	true		739854						
ANR	739981	Symbol	* node		739854						
ANR	739982	Symbol	user		739854						
ANR	739983	Symbol	* * core		739854						
ANR	739984	Function	cb_iopcachewrite	1635:0:44718:45173							
ANR	739985	FunctionDef	"cb_iopcachewrite (void * user , void * data)"		739984	0					
ANR	739986	CompoundStatement		1635:53:44771:45173	739984	0					
ANR	739987	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1636:1:44774:44802	739984	0	True				
ANR	739988	IdentifierDecl	* core = ( RCore * ) user		739984	0					
ANR	739989	IdentifierDeclType	RCore *		739984	0					
ANR	739990	Identifier	core		739984	1					
ANR	739991	AssignmentExpression	* core = ( RCore * ) user		739984	2		=			
ANR	739992	Identifier	core		739984	0					
ANR	739993	CastExpression	( RCore * ) user		739984	1					
ANR	739994	CastTarget	RCore *		739984	0					
ANR	739995	Identifier	user		739984	1					
ANR	739996	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1637:1:44805:44845	739984	1	True				
ANR	739997	IdentifierDecl	* node = ( RConfigNode * ) data		739984	0					
ANR	739998	IdentifierDeclType	RConfigNode *		739984	0					
ANR	739999	Identifier	node		739984	1					
ANR	740000	AssignmentExpression	* node = ( RConfigNode * ) data		739984	2		=			
ANR	740001	Identifier	node		739984	0					
ANR	740002	CastExpression	( RConfigNode * ) data		739984	1					
ANR	740003	CastTarget	RConfigNode *		739984	0					
ANR	740004	Identifier	data		739984	1					
ANR	740005	IfStatement	if ( ( bool ) node -> i_value )		739984	2					
ANR	740006	Condition	( bool ) node -> i_value	1638:5:44852:44870	739984	0	True				
ANR	740007	CastExpression	( bool ) node -> i_value		739984	0					
ANR	740008	CastTarget	bool		739984	0					
ANR	740009	PtrMemberAccess	node -> i_value		739984	1					
ANR	740010	Identifier	node		739984	0					
ANR	740011	Identifier	i_value		739984	1					
ANR	740012	CompoundStatement		4:26:101:101	739984	1					
ANR	740013	IfStatement	if ( core && core -> io )		739984	0					
ANR	740014	Condition	core && core -> io	1639:6:44881:44896	739984	0	True				
ANR	740015	AndExpression	core && core -> io		739984	0		&&			
ANR	740016	Identifier	core		739984	0					
ANR	740017	PtrMemberAccess	core -> io		739984	1					
ANR	740018	Identifier	core		739984	0					
ANR	740019	Identifier	io		739984	1					
ANR	740020	CompoundStatement		5:24:127:127	739984	1					
ANR	740021	ExpressionStatement	core -> io -> p_cache |= 2	1640:3:44904:44926	739984	0	True				
ANR	740022	AssignmentExpression	core -> io -> p_cache |= 2		739984	0		|=			
ANR	740023	PtrMemberAccess	core -> io -> p_cache		739984	0					
ANR	740024	PtrMemberAccess	core -> io		739984	0					
ANR	740025	Identifier	core		739984	0					
ANR	740026	Identifier	io		739984	1					
ANR	740027	Identifier	p_cache		739984	1					
ANR	740028	PrimaryExpression	2		739984	1					
ANR	740029	ElseStatement	else		739984	0					
ANR	740030	CompoundStatement		8:8:168:168	739984	0					
ANR	740031	IfStatement	if ( core && core -> io && core -> io -> p_cache )		739984	0					
ANR	740032	Condition	core && core -> io && core -> io -> p_cache	1643:6:44948:44984	739984	0	True				
ANR	740033	AndExpression	core && core -> io && core -> io -> p_cache		739984	0		&&			
ANR	740034	Identifier	core		739984	0					
ANR	740035	AndExpression	core -> io && core -> io -> p_cache		739984	1		&&			
ANR	740036	PtrMemberAccess	core -> io		739984	0					
ANR	740037	Identifier	core		739984	0					
ANR	740038	Identifier	io		739984	1					
ANR	740039	PtrMemberAccess	core -> io -> p_cache		739984	1					
ANR	740040	PtrMemberAccess	core -> io		739984	0					
ANR	740041	Identifier	core		739984	0					
ANR	740042	Identifier	io		739984	1					
ANR	740043	Identifier	p_cache		739984	1					
ANR	740044	CompoundStatement		9:45:215:215	739984	1					
ANR	740045	ExpressionStatement	core -> io -> p_cache &= 1	1644:3:44992:45014	739984	0	True				
ANR	740046	AssignmentExpression	core -> io -> p_cache &= 1		739984	0		&=			
ANR	740047	PtrMemberAccess	core -> io -> p_cache		739984	0					
ANR	740048	PtrMemberAccess	core -> io		739984	0					
ANR	740049	Identifier	core		739984	0					
ANR	740050	Identifier	io		739984	1					
ANR	740051	Identifier	p_cache		739984	1					
ANR	740052	PrimaryExpression	1		739984	1					
ANR	740053	IfStatement	if ( ! ( core -> io -> p_cache & 1 ) )		739984	1					
ANR	740054	Condition	! ( core -> io -> p_cache & 1 )	1645:7:45023:45046	739984	0	True				
ANR	740055	UnaryOperationExpression	! ( core -> io -> p_cache & 1 )		739984	0					
ANR	740056	UnaryOperator	!		739984	0					
ANR	740057	BitAndExpression	core -> io -> p_cache & 1		739984	1		&			
ANR	740058	PtrMemberAccess	core -> io -> p_cache		739984	0					
ANR	740059	PtrMemberAccess	core -> io		739984	0					
ANR	740060	Identifier	core		739984	0					
ANR	740061	Identifier	io		739984	1					
ANR	740062	Identifier	p_cache		739984	1					
ANR	740063	PrimaryExpression	1		739984	1					
ANR	740064	CompoundStatement		11:33:277:277	739984	1					
ANR	740065	ExpressionStatement	r_io_desc_cache_fini_all ( core -> io )	1646:4:45055:45090	739984	0	True				
ANR	740066	CallExpression	r_io_desc_cache_fini_all ( core -> io )		739984	0					
ANR	740067	Callee	r_io_desc_cache_fini_all		739984	0					
ANR	740068	Identifier	r_io_desc_cache_fini_all		739984	0					
ANR	740069	ArgumentList	core -> io		739984	1					
ANR	740070	Argument	core -> io		739984	0					
ANR	740071	PtrMemberAccess	core -> io		739984	0					
ANR	740072	Identifier	core		739984	0					
ANR	740073	Identifier	io		739984	1					
ANR	740074	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache"" , false )"	1647:4:45096:45145	739984	1	True				
ANR	740075	CallExpression	"r_config_set_i ( core -> config , ""io.pcache"" , false )"		739984	0					
ANR	740076	Callee	r_config_set_i		739984	0					
ANR	740077	Identifier	r_config_set_i		739984	0					
ANR	740078	ArgumentList	core -> config		739984	1					
ANR	740079	Argument	core -> config		739984	0					
ANR	740080	PtrMemberAccess	core -> config		739984	0					
ANR	740081	Identifier	core		739984	0					
ANR	740082	Identifier	config		739984	1					
ANR	740083	Argument	"""io.pcache"""		739984	1					
ANR	740084	PrimaryExpression	"""io.pcache"""		739984	0					
ANR	740085	Argument	false		739984	2					
ANR	740086	Identifier	false		739984	0					
ANR	740087	ReturnStatement	return true ;	1651:1:45160:45171	739984	3	True				
ANR	740088	Identifier	true		739984	0					
ANR	740089	ReturnType	static bool		739984	1					
ANR	740090	Identifier	cb_iopcachewrite		739984	2					
ANR	740091	ParameterList	"void * user , void * data"		739984	3					
ANR	740092	Parameter	void * user	1635:29:44747:44756	739984	0	True				
ANR	740093	ParameterType	void *		739984	0					
ANR	740094	Identifier	user		739984	1					
ANR	740095	Parameter	void * data	1635:41:44759:44768	739984	1	True				
ANR	740096	ParameterType	void *		739984	0					
ANR	740097	Identifier	data		739984	1					
ANR	740098	CFGEntryNode	ENTRY		739984		True				
ANR	740099	CFGExitNode	EXIT		739984		True				
ANR	740100	Symbol	core -> io -> p_cache		739984						
ANR	740101	Symbol	core -> config		739984						
ANR	740102	Symbol	data		739984						
ANR	740103	Symbol	* core		739984						
ANR	740104	Symbol	false		739984						
ANR	740105	Symbol	node -> i_value		739984						
ANR	740106	Symbol	core		739984						
ANR	740107	Symbol	node		739984						
ANR	740108	Symbol	* core -> io		739984						
ANR	740109	Symbol	core -> io		739984						
ANR	740110	Symbol	true		739984						
ANR	740111	Symbol	* node		739984						
ANR	740112	Symbol	user		739984						
ANR	740113	Symbol	* * core		739984						
ANR	740114	Function	r_core_esil_cmd	1654:0:45176:45418							
ANR	740115	FunctionDef	"r_core_esil_cmd (RAnalEsil * esil , const char * cmd , ut64 a1 , ut64 a2)"		740114	0					
ANR	740116	CompoundStatement		1654:79:45255:45418	740114	0					
ANR	740117	IfStatement	if ( cmd && * cmd )		740114	0					
ANR	740118	Condition	cmd && * cmd	1655:5:45262:45272	740114	0	True				
ANR	740119	AndExpression	cmd && * cmd		740114	0		&&			
ANR	740120	Identifier	cmd		740114	0					
ANR	740121	UnaryOperationExpression	* cmd		740114	1					
ANR	740122	UnaryOperator	*		740114	0					
ANR	740123	Identifier	cmd		740114	1					
ANR	740124	CompoundStatement		3:2:23:53	740114	1					
ANR	740125	IdentifierDeclStatement	RCore * core = esil -> anal -> user ;	1656:2:45279:45309	740114	0	True				
ANR	740126	IdentifierDecl	* core = esil -> anal -> user		740114	0					
ANR	740127	IdentifierDeclType	RCore *		740114	0					
ANR	740128	Identifier	core		740114	1					
ANR	740129	AssignmentExpression	* core = esil -> anal -> user		740114	2		=			
ANR	740130	Identifier	core		740114	0					
ANR	740131	PtrMemberAccess	esil -> anal -> user		740114	1					
ANR	740132	PtrMemberAccess	esil -> anal		740114	0					
ANR	740133	Identifier	esil		740114	0					
ANR	740134	Identifier	anal		740114	1					
ANR	740135	Identifier	user		740114	1					
ANR	740136	Statement	r_core_cmdf	1657:2:45313:45323	740114	1	True				
ANR	740137	Statement	(	1657:14:45325:45325	740114	2	True				
ANR	740138	Statement	core	1657:15:45326:45329	740114	3	True				
ANR	740139	Statement	","	1657:19:45330:45330	740114	4	True				
ANR	740140	Statement	"""%s %"""	1657:21:45332:45337	740114	5	True				
ANR	740141	Statement	PFMT64d	1657:27:45338:45344	740114	6	True				
ANR	740142	Statement	""" %"""	1657:34:45345:45348	740114	7	True				
ANR	740143	Statement	PFMT64d	1657:39:45350:45356	740114	8	True				
ANR	740144	Statement	","	1657:46:45357:45357	740114	9	True				
ANR	740145	Statement	cmd	1657:48:45359:45361	740114	10	True				
ANR	740146	Statement	","	1657:51:45362:45362	740114	11	True				
ANR	740147	Statement	a1	1657:53:45364:45365	740114	12	True				
ANR	740148	Statement	","	1657:55:45366:45366	740114	13	True				
ANR	740149	Statement	a2	1657:57:45368:45369	740114	14	True				
ANR	740150	Statement	)	1657:59:45370:45370	740114	15	True				
ANR	740151	ExpressionStatement		1657:60:45371:45371	740114	16	True				
ANR	740152	ReturnStatement	return core -> num -> value ;	1658:2:45375:45398	740114	17	True				
ANR	740153	PtrMemberAccess	core -> num -> value		740114	0					
ANR	740154	PtrMemberAccess	core -> num		740114	0					
ANR	740155	Identifier	core		740114	0					
ANR	740156	Identifier	num		740114	1					
ANR	740157	Identifier	value		740114	1					
ANR	740158	ReturnStatement	return false ;	1660:1:45404:45416	740114	1	True				
ANR	740159	Identifier	false		740114	0					
ANR	740160	ReturnType	R_API bool		740114	1					
ANR	740161	Identifier	r_core_esil_cmd		740114	2					
ANR	740162	ParameterList	"RAnalEsil * esil , const char * cmd , ut64 a1 , ut64 a2"		740114	3					
ANR	740163	Parameter	RAnalEsil * esil	1654:27:45203:45217	740114	0	True				
ANR	740164	ParameterType	RAnalEsil *		740114	0					
ANR	740165	Identifier	esil		740114	1					
ANR	740166	Parameter	const char * cmd	1654:44:45220:45234	740114	1	True				
ANR	740167	ParameterType	const char *		740114	0					
ANR	740168	Identifier	cmd		740114	1					
ANR	740169	Parameter	ut64 a1	1654:61:45237:45243	740114	2	True				
ANR	740170	ParameterType	ut64		740114	0					
ANR	740171	Identifier	a1		740114	1					
ANR	740172	Parameter	ut64 a2	1654:70:45246:45252	740114	3	True				
ANR	740173	ParameterType	ut64		740114	0					
ANR	740174	Identifier	a2		740114	1					
ANR	740175	CFGEntryNode	ENTRY		740114		True				
ANR	740176	CFGExitNode	EXIT		740114		True				
ANR	740177	Symbol	* esil -> anal		740114						
ANR	740178	Symbol	esil -> anal -> user		740114						
ANR	740179	Symbol	* core		740114						
ANR	740180	Symbol	false		740114						
ANR	740181	Symbol	core -> num -> value		740114						
ANR	740182	Symbol	* * esil		740114						
ANR	740183	Symbol	a1		740114						
ANR	740184	Symbol	a2		740114						
ANR	740185	Symbol	core		740114						
ANR	740186	Symbol	esil -> anal		740114						
ANR	740187	Symbol	* esil		740114						
ANR	740188	Symbol	* core -> num		740114						
ANR	740189	Symbol	cmd		740114						
ANR	740190	Symbol	* cmd		740114						
ANR	740191	Symbol	core -> num		740114						
ANR	740192	Symbol	esil		740114						
ANR	740193	Symbol	* * core		740114						
ANR	740194	Function	cb_cmd_esil_ioer	1663:0:45421:45747							
ANR	740195	FunctionDef	"cb_cmd_esil_ioer (void * user , void * data)"		740194	0					
ANR	740196	CompoundStatement		1663:53:45474:45747	740194	0					
ANR	740197	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1664:1:45477:45505	740194	0	True				
ANR	740198	IdentifierDecl	* core = ( RCore * ) user		740194	0					
ANR	740199	IdentifierDeclType	RCore *		740194	0					
ANR	740200	Identifier	core		740194	1					
ANR	740201	AssignmentExpression	* core = ( RCore * ) user		740194	2		=			
ANR	740202	Identifier	core		740194	0					
ANR	740203	CastExpression	( RCore * ) user		740194	1					
ANR	740204	CastTarget	RCore *		740194	0					
ANR	740205	Identifier	user		740194	1					
ANR	740206	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1665:1:45508:45548	740194	1	True				
ANR	740207	IdentifierDecl	* node = ( RConfigNode * ) data		740194	0					
ANR	740208	IdentifierDeclType	RConfigNode *		740194	0					
ANR	740209	Identifier	node		740194	1					
ANR	740210	AssignmentExpression	* node = ( RConfigNode * ) data		740194	2		=			
ANR	740211	Identifier	node		740194	0					
ANR	740212	CastExpression	( RConfigNode * ) data		740194	1					
ANR	740213	CastTarget	RConfigNode *		740194	0					
ANR	740214	Identifier	data		740194	1					
ANR	740215	IfStatement	if ( core && core -> anal && core -> anal -> esil )		740194	2					
ANR	740216	Condition	core && core -> anal && core -> anal -> esil	1666:5:45555:45592	740194	0	True				
ANR	740217	AndExpression	core && core -> anal && core -> anal -> esil		740194	0		&&			
ANR	740218	Identifier	core		740194	0					
ANR	740219	AndExpression	core -> anal && core -> anal -> esil		740194	1		&&			
ANR	740220	PtrMemberAccess	core -> anal		740194	0					
ANR	740221	Identifier	core		740194	0					
ANR	740222	Identifier	anal		740194	1					
ANR	740223	PtrMemberAccess	core -> anal -> esil		740194	1					
ANR	740224	PtrMemberAccess	core -> anal		740194	0					
ANR	740225	Identifier	core		740194	0					
ANR	740226	Identifier	anal		740194	1					
ANR	740227	Identifier	esil		740194	1					
ANR	740228	CompoundStatement		4:45:120:120	740194	1					
ANR	740229	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1667:2:45599:45638	740194	0	True				
ANR	740230	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		740194	0		=			
ANR	740231	PtrMemberAccess	core -> anal -> esil -> cmd		740194	0					
ANR	740232	PtrMemberAccess	core -> anal -> esil		740194	0					
ANR	740233	PtrMemberAccess	core -> anal		740194	0					
ANR	740234	Identifier	core		740194	0					
ANR	740235	Identifier	anal		740194	1					
ANR	740236	Identifier	esil		740194	1					
ANR	740237	Identifier	cmd		740194	1					
ANR	740238	Identifier	r_core_esil_cmd		740194	1					
ANR	740239	ExpressionStatement	free ( core -> anal -> esil -> cmd_ioer )	1668:2:45642:45675	740194	1	True				
ANR	740240	CallExpression	free ( core -> anal -> esil -> cmd_ioer )		740194	0					
ANR	740241	Callee	free		740194	0					
ANR	740242	Identifier	free		740194	0					
ANR	740243	ArgumentList	core -> anal -> esil -> cmd_ioer		740194	1					
ANR	740244	Argument	core -> anal -> esil -> cmd_ioer		740194	0					
ANR	740245	PtrMemberAccess	core -> anal -> esil -> cmd_ioer		740194	0					
ANR	740246	PtrMemberAccess	core -> anal -> esil		740194	0					
ANR	740247	PtrMemberAccess	core -> anal		740194	0					
ANR	740248	Identifier	core		740194	0					
ANR	740249	Identifier	anal		740194	1					
ANR	740250	Identifier	esil		740194	1					
ANR	740251	Identifier	cmd_ioer		740194	1					
ANR	740252	ExpressionStatement	core -> anal -> esil -> cmd_ioer = strdup ( node -> value )	1669:2:45679:45728	740194	2	True				
ANR	740253	AssignmentExpression	core -> anal -> esil -> cmd_ioer = strdup ( node -> value )		740194	0		=			
ANR	740254	PtrMemberAccess	core -> anal -> esil -> cmd_ioer		740194	0					
ANR	740255	PtrMemberAccess	core -> anal -> esil		740194	0					
ANR	740256	PtrMemberAccess	core -> anal		740194	0					
ANR	740257	Identifier	core		740194	0					
ANR	740258	Identifier	anal		740194	1					
ANR	740259	Identifier	esil		740194	1					
ANR	740260	Identifier	cmd_ioer		740194	1					
ANR	740261	CallExpression	strdup ( node -> value )		740194	1					
ANR	740262	Callee	strdup		740194	0					
ANR	740263	Identifier	strdup		740194	0					
ANR	740264	ArgumentList	node -> value		740194	1					
ANR	740265	Argument	node -> value		740194	0					
ANR	740266	PtrMemberAccess	node -> value		740194	0					
ANR	740267	Identifier	node		740194	0					
ANR	740268	Identifier	value		740194	1					
ANR	740269	ReturnStatement	return true ;	1671:1:45734:45745	740194	3	True				
ANR	740270	Identifier	true		740194	0					
ANR	740271	ReturnType	static bool		740194	1					
ANR	740272	Identifier	cb_cmd_esil_ioer		740194	2					
ANR	740273	ParameterList	"void * user , void * data"		740194	3					
ANR	740274	Parameter	void * user	1663:29:45450:45459	740194	0	True				
ANR	740275	ParameterType	void *		740194	0					
ANR	740276	Identifier	user		740194	1					
ANR	740277	Parameter	void * data	1663:41:45462:45471	740194	1	True				
ANR	740278	ParameterType	void *		740194	0					
ANR	740279	Identifier	data		740194	1					
ANR	740280	CFGEntryNode	ENTRY		740194		True				
ANR	740281	CFGExitNode	EXIT		740194		True				
ANR	740282	Symbol	core -> anal -> esil -> cmd_ioer		740194						
ANR	740283	Symbol	data		740194						
ANR	740284	Symbol	r_core_esil_cmd		740194						
ANR	740285	Symbol	core -> anal -> esil -> cmd		740194						
ANR	740286	Symbol	* core		740194						
ANR	740287	Symbol	core -> anal		740194						
ANR	740288	Symbol	node -> value		740194						
ANR	740289	Symbol	core		740194						
ANR	740290	Symbol	node		740194						
ANR	740291	Symbol	* * * core		740194						
ANR	740292	Symbol	* core -> anal		740194						
ANR	740293	Symbol	* core -> anal -> esil		740194						
ANR	740294	Symbol	true		740194						
ANR	740295	Symbol	* * core -> anal		740194						
ANR	740296	Symbol	* node		740194						
ANR	740297	Symbol	strdup		740194						
ANR	740298	Symbol	core -> anal -> esil		740194						
ANR	740299	Symbol	user		740194						
ANR	740300	Symbol	* * core		740194						
ANR	740301	Function	cb_cmd_esil_todo	1674:0:45750:46076							
ANR	740302	FunctionDef	"cb_cmd_esil_todo (void * user , void * data)"		740301	0					
ANR	740303	CompoundStatement		1674:53:45803:46076	740301	0					
ANR	740304	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1675:1:45806:45834	740301	0	True				
ANR	740305	IdentifierDecl	* core = ( RCore * ) user		740301	0					
ANR	740306	IdentifierDeclType	RCore *		740301	0					
ANR	740307	Identifier	core		740301	1					
ANR	740308	AssignmentExpression	* core = ( RCore * ) user		740301	2		=			
ANR	740309	Identifier	core		740301	0					
ANR	740310	CastExpression	( RCore * ) user		740301	1					
ANR	740311	CastTarget	RCore *		740301	0					
ANR	740312	Identifier	user		740301	1					
ANR	740313	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1676:1:45837:45877	740301	1	True				
ANR	740314	IdentifierDecl	* node = ( RConfigNode * ) data		740301	0					
ANR	740315	IdentifierDeclType	RConfigNode *		740301	0					
ANR	740316	Identifier	node		740301	1					
ANR	740317	AssignmentExpression	* node = ( RConfigNode * ) data		740301	2		=			
ANR	740318	Identifier	node		740301	0					
ANR	740319	CastExpression	( RConfigNode * ) data		740301	1					
ANR	740320	CastTarget	RConfigNode *		740301	0					
ANR	740321	Identifier	data		740301	1					
ANR	740322	IfStatement	if ( core && core -> anal && core -> anal -> esil )		740301	2					
ANR	740323	Condition	core && core -> anal && core -> anal -> esil	1677:5:45884:45921	740301	0	True				
ANR	740324	AndExpression	core && core -> anal && core -> anal -> esil		740301	0		&&			
ANR	740325	Identifier	core		740301	0					
ANR	740326	AndExpression	core -> anal && core -> anal -> esil		740301	1		&&			
ANR	740327	PtrMemberAccess	core -> anal		740301	0					
ANR	740328	Identifier	core		740301	0					
ANR	740329	Identifier	anal		740301	1					
ANR	740330	PtrMemberAccess	core -> anal -> esil		740301	1					
ANR	740331	PtrMemberAccess	core -> anal		740301	0					
ANR	740332	Identifier	core		740301	0					
ANR	740333	Identifier	anal		740301	1					
ANR	740334	Identifier	esil		740301	1					
ANR	740335	CompoundStatement		4:45:120:120	740301	1					
ANR	740336	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1678:2:45928:45967	740301	0	True				
ANR	740337	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		740301	0		=			
ANR	740338	PtrMemberAccess	core -> anal -> esil -> cmd		740301	0					
ANR	740339	PtrMemberAccess	core -> anal -> esil		740301	0					
ANR	740340	PtrMemberAccess	core -> anal		740301	0					
ANR	740341	Identifier	core		740301	0					
ANR	740342	Identifier	anal		740301	1					
ANR	740343	Identifier	esil		740301	1					
ANR	740344	Identifier	cmd		740301	1					
ANR	740345	Identifier	r_core_esil_cmd		740301	1					
ANR	740346	ExpressionStatement	free ( core -> anal -> esil -> cmd_todo )	1679:2:45971:46004	740301	1	True				
ANR	740347	CallExpression	free ( core -> anal -> esil -> cmd_todo )		740301	0					
ANR	740348	Callee	free		740301	0					
ANR	740349	Identifier	free		740301	0					
ANR	740350	ArgumentList	core -> anal -> esil -> cmd_todo		740301	1					
ANR	740351	Argument	core -> anal -> esil -> cmd_todo		740301	0					
ANR	740352	PtrMemberAccess	core -> anal -> esil -> cmd_todo		740301	0					
ANR	740353	PtrMemberAccess	core -> anal -> esil		740301	0					
ANR	740354	PtrMemberAccess	core -> anal		740301	0					
ANR	740355	Identifier	core		740301	0					
ANR	740356	Identifier	anal		740301	1					
ANR	740357	Identifier	esil		740301	1					
ANR	740358	Identifier	cmd_todo		740301	1					
ANR	740359	ExpressionStatement	core -> anal -> esil -> cmd_todo = strdup ( node -> value )	1680:2:46008:46057	740301	2	True				
ANR	740360	AssignmentExpression	core -> anal -> esil -> cmd_todo = strdup ( node -> value )		740301	0		=			
ANR	740361	PtrMemberAccess	core -> anal -> esil -> cmd_todo		740301	0					
ANR	740362	PtrMemberAccess	core -> anal -> esil		740301	0					
ANR	740363	PtrMemberAccess	core -> anal		740301	0					
ANR	740364	Identifier	core		740301	0					
ANR	740365	Identifier	anal		740301	1					
ANR	740366	Identifier	esil		740301	1					
ANR	740367	Identifier	cmd_todo		740301	1					
ANR	740368	CallExpression	strdup ( node -> value )		740301	1					
ANR	740369	Callee	strdup		740301	0					
ANR	740370	Identifier	strdup		740301	0					
ANR	740371	ArgumentList	node -> value		740301	1					
ANR	740372	Argument	node -> value		740301	0					
ANR	740373	PtrMemberAccess	node -> value		740301	0					
ANR	740374	Identifier	node		740301	0					
ANR	740375	Identifier	value		740301	1					
ANR	740376	ReturnStatement	return true ;	1682:1:46063:46074	740301	3	True				
ANR	740377	Identifier	true		740301	0					
ANR	740378	ReturnType	static bool		740301	1					
ANR	740379	Identifier	cb_cmd_esil_todo		740301	2					
ANR	740380	ParameterList	"void * user , void * data"		740301	3					
ANR	740381	Parameter	void * user	1674:29:45779:45788	740301	0	True				
ANR	740382	ParameterType	void *		740301	0					
ANR	740383	Identifier	user		740301	1					
ANR	740384	Parameter	void * data	1674:41:45791:45800	740301	1	True				
ANR	740385	ParameterType	void *		740301	0					
ANR	740386	Identifier	data		740301	1					
ANR	740387	CFGEntryNode	ENTRY		740301		True				
ANR	740388	CFGExitNode	EXIT		740301		True				
ANR	740389	Symbol	data		740301						
ANR	740390	Symbol	r_core_esil_cmd		740301						
ANR	740391	Symbol	core -> anal -> esil -> cmd		740301						
ANR	740392	Symbol	* core		740301						
ANR	740393	Symbol	core -> anal		740301						
ANR	740394	Symbol	node -> value		740301						
ANR	740395	Symbol	core		740301						
ANR	740396	Symbol	node		740301						
ANR	740397	Symbol	* * * core		740301						
ANR	740398	Symbol	core -> anal -> esil -> cmd_todo		740301						
ANR	740399	Symbol	* core -> anal		740301						
ANR	740400	Symbol	* core -> anal -> esil		740301						
ANR	740401	Symbol	true		740301						
ANR	740402	Symbol	* * core -> anal		740301						
ANR	740403	Symbol	* node		740301						
ANR	740404	Symbol	strdup		740301						
ANR	740405	Symbol	core -> anal -> esil		740301						
ANR	740406	Symbol	user		740301						
ANR	740407	Symbol	* * core		740301						
ANR	740408	Function	cb_cmd_esil_intr	1685:0:46079:46405							
ANR	740409	FunctionDef	"cb_cmd_esil_intr (void * user , void * data)"		740408	0					
ANR	740410	CompoundStatement		1685:53:46132:46405	740408	0					
ANR	740411	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1686:1:46135:46163	740408	0	True				
ANR	740412	IdentifierDecl	* core = ( RCore * ) user		740408	0					
ANR	740413	IdentifierDeclType	RCore *		740408	0					
ANR	740414	Identifier	core		740408	1					
ANR	740415	AssignmentExpression	* core = ( RCore * ) user		740408	2		=			
ANR	740416	Identifier	core		740408	0					
ANR	740417	CastExpression	( RCore * ) user		740408	1					
ANR	740418	CastTarget	RCore *		740408	0					
ANR	740419	Identifier	user		740408	1					
ANR	740420	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1687:1:46166:46206	740408	1	True				
ANR	740421	IdentifierDecl	* node = ( RConfigNode * ) data		740408	0					
ANR	740422	IdentifierDeclType	RConfigNode *		740408	0					
ANR	740423	Identifier	node		740408	1					
ANR	740424	AssignmentExpression	* node = ( RConfigNode * ) data		740408	2		=			
ANR	740425	Identifier	node		740408	0					
ANR	740426	CastExpression	( RConfigNode * ) data		740408	1					
ANR	740427	CastTarget	RConfigNode *		740408	0					
ANR	740428	Identifier	data		740408	1					
ANR	740429	IfStatement	if ( core && core -> anal && core -> anal -> esil )		740408	2					
ANR	740430	Condition	core && core -> anal && core -> anal -> esil	1688:5:46213:46250	740408	0	True				
ANR	740431	AndExpression	core && core -> anal && core -> anal -> esil		740408	0		&&			
ANR	740432	Identifier	core		740408	0					
ANR	740433	AndExpression	core -> anal && core -> anal -> esil		740408	1		&&			
ANR	740434	PtrMemberAccess	core -> anal		740408	0					
ANR	740435	Identifier	core		740408	0					
ANR	740436	Identifier	anal		740408	1					
ANR	740437	PtrMemberAccess	core -> anal -> esil		740408	1					
ANR	740438	PtrMemberAccess	core -> anal		740408	0					
ANR	740439	Identifier	core		740408	0					
ANR	740440	Identifier	anal		740408	1					
ANR	740441	Identifier	esil		740408	1					
ANR	740442	CompoundStatement		4:45:120:120	740408	1					
ANR	740443	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1689:2:46257:46296	740408	0	True				
ANR	740444	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		740408	0		=			
ANR	740445	PtrMemberAccess	core -> anal -> esil -> cmd		740408	0					
ANR	740446	PtrMemberAccess	core -> anal -> esil		740408	0					
ANR	740447	PtrMemberAccess	core -> anal		740408	0					
ANR	740448	Identifier	core		740408	0					
ANR	740449	Identifier	anal		740408	1					
ANR	740450	Identifier	esil		740408	1					
ANR	740451	Identifier	cmd		740408	1					
ANR	740452	Identifier	r_core_esil_cmd		740408	1					
ANR	740453	ExpressionStatement	free ( core -> anal -> esil -> cmd_intr )	1690:2:46300:46333	740408	1	True				
ANR	740454	CallExpression	free ( core -> anal -> esil -> cmd_intr )		740408	0					
ANR	740455	Callee	free		740408	0					
ANR	740456	Identifier	free		740408	0					
ANR	740457	ArgumentList	core -> anal -> esil -> cmd_intr		740408	1					
ANR	740458	Argument	core -> anal -> esil -> cmd_intr		740408	0					
ANR	740459	PtrMemberAccess	core -> anal -> esil -> cmd_intr		740408	0					
ANR	740460	PtrMemberAccess	core -> anal -> esil		740408	0					
ANR	740461	PtrMemberAccess	core -> anal		740408	0					
ANR	740462	Identifier	core		740408	0					
ANR	740463	Identifier	anal		740408	1					
ANR	740464	Identifier	esil		740408	1					
ANR	740465	Identifier	cmd_intr		740408	1					
ANR	740466	ExpressionStatement	core -> anal -> esil -> cmd_intr = strdup ( node -> value )	1691:2:46337:46386	740408	2	True				
ANR	740467	AssignmentExpression	core -> anal -> esil -> cmd_intr = strdup ( node -> value )		740408	0		=			
ANR	740468	PtrMemberAccess	core -> anal -> esil -> cmd_intr		740408	0					
ANR	740469	PtrMemberAccess	core -> anal -> esil		740408	0					
ANR	740470	PtrMemberAccess	core -> anal		740408	0					
ANR	740471	Identifier	core		740408	0					
ANR	740472	Identifier	anal		740408	1					
ANR	740473	Identifier	esil		740408	1					
ANR	740474	Identifier	cmd_intr		740408	1					
ANR	740475	CallExpression	strdup ( node -> value )		740408	1					
ANR	740476	Callee	strdup		740408	0					
ANR	740477	Identifier	strdup		740408	0					
ANR	740478	ArgumentList	node -> value		740408	1					
ANR	740479	Argument	node -> value		740408	0					
ANR	740480	PtrMemberAccess	node -> value		740408	0					
ANR	740481	Identifier	node		740408	0					
ANR	740482	Identifier	value		740408	1					
ANR	740483	ReturnStatement	return true ;	1693:1:46392:46403	740408	3	True				
ANR	740484	Identifier	true		740408	0					
ANR	740485	ReturnType	static bool		740408	1					
ANR	740486	Identifier	cb_cmd_esil_intr		740408	2					
ANR	740487	ParameterList	"void * user , void * data"		740408	3					
ANR	740488	Parameter	void * user	1685:29:46108:46117	740408	0	True				
ANR	740489	ParameterType	void *		740408	0					
ANR	740490	Identifier	user		740408	1					
ANR	740491	Parameter	void * data	1685:41:46120:46129	740408	1	True				
ANR	740492	ParameterType	void *		740408	0					
ANR	740493	Identifier	data		740408	1					
ANR	740494	CFGEntryNode	ENTRY		740408		True				
ANR	740495	CFGExitNode	EXIT		740408		True				
ANR	740496	Symbol	data		740408						
ANR	740497	Symbol	r_core_esil_cmd		740408						
ANR	740498	Symbol	core -> anal -> esil -> cmd		740408						
ANR	740499	Symbol	* core		740408						
ANR	740500	Symbol	core -> anal		740408						
ANR	740501	Symbol	node -> value		740408						
ANR	740502	Symbol	core -> anal -> esil -> cmd_intr		740408						
ANR	740503	Symbol	core		740408						
ANR	740504	Symbol	node		740408						
ANR	740505	Symbol	* * * core		740408						
ANR	740506	Symbol	* core -> anal		740408						
ANR	740507	Symbol	* core -> anal -> esil		740408						
ANR	740508	Symbol	true		740408						
ANR	740509	Symbol	* * core -> anal		740408						
ANR	740510	Symbol	* node		740408						
ANR	740511	Symbol	strdup		740408						
ANR	740512	Symbol	core -> anal -> esil		740408						
ANR	740513	Symbol	user		740408						
ANR	740514	Symbol	* * core		740408						
ANR	740515	Function	cb_mdevrange	1696:0:46408:46734							
ANR	740516	FunctionDef	"cb_mdevrange (void * user , void * data)"		740515	0					
ANR	740517	CompoundStatement		1696:49:46457:46734	740515	0					
ANR	740518	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1697:1:46460:46488	740515	0	True				
ANR	740519	IdentifierDecl	* core = ( RCore * ) user		740515	0					
ANR	740520	IdentifierDeclType	RCore *		740515	0					
ANR	740521	Identifier	core		740515	1					
ANR	740522	AssignmentExpression	* core = ( RCore * ) user		740515	2		=			
ANR	740523	Identifier	core		740515	0					
ANR	740524	CastExpression	( RCore * ) user		740515	1					
ANR	740525	CastTarget	RCore *		740515	0					
ANR	740526	Identifier	user		740515	1					
ANR	740527	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1698:1:46491:46531	740515	1	True				
ANR	740528	IdentifierDecl	* node = ( RConfigNode * ) data		740515	0					
ANR	740529	IdentifierDeclType	RConfigNode *		740515	0					
ANR	740530	Identifier	node		740515	1					
ANR	740531	AssignmentExpression	* node = ( RConfigNode * ) data		740515	2		=			
ANR	740532	Identifier	node		740515	0					
ANR	740533	CastExpression	( RConfigNode * ) data		740515	1					
ANR	740534	CastTarget	RConfigNode *		740515	0					
ANR	740535	Identifier	data		740515	1					
ANR	740536	IfStatement	if ( core && core -> anal && core -> anal -> esil )		740515	2					
ANR	740537	Condition	core && core -> anal && core -> anal -> esil	1699:5:46538:46575	740515	0	True				
ANR	740538	AndExpression	core && core -> anal && core -> anal -> esil		740515	0		&&			
ANR	740539	Identifier	core		740515	0					
ANR	740540	AndExpression	core -> anal && core -> anal -> esil		740515	1		&&			
ANR	740541	PtrMemberAccess	core -> anal		740515	0					
ANR	740542	Identifier	core		740515	0					
ANR	740543	Identifier	anal		740515	1					
ANR	740544	PtrMemberAccess	core -> anal -> esil		740515	1					
ANR	740545	PtrMemberAccess	core -> anal		740515	0					
ANR	740546	Identifier	core		740515	0					
ANR	740547	Identifier	anal		740515	1					
ANR	740548	Identifier	esil		740515	1					
ANR	740549	CompoundStatement		4:45:120:120	740515	1					
ANR	740550	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1700:2:46582:46621	740515	0	True				
ANR	740551	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		740515	0		=			
ANR	740552	PtrMemberAccess	core -> anal -> esil -> cmd		740515	0					
ANR	740553	PtrMemberAccess	core -> anal -> esil		740515	0					
ANR	740554	PtrMemberAccess	core -> anal		740515	0					
ANR	740555	Identifier	core		740515	0					
ANR	740556	Identifier	anal		740515	1					
ANR	740557	Identifier	esil		740515	1					
ANR	740558	Identifier	cmd		740515	1					
ANR	740559	Identifier	r_core_esil_cmd		740515	1					
ANR	740560	ExpressionStatement	free ( core -> anal -> esil -> mdev_range )	1701:2:46625:46660	740515	1	True				
ANR	740561	CallExpression	free ( core -> anal -> esil -> mdev_range )		740515	0					
ANR	740562	Callee	free		740515	0					
ANR	740563	Identifier	free		740515	0					
ANR	740564	ArgumentList	core -> anal -> esil -> mdev_range		740515	1					
ANR	740565	Argument	core -> anal -> esil -> mdev_range		740515	0					
ANR	740566	PtrMemberAccess	core -> anal -> esil -> mdev_range		740515	0					
ANR	740567	PtrMemberAccess	core -> anal -> esil		740515	0					
ANR	740568	PtrMemberAccess	core -> anal		740515	0					
ANR	740569	Identifier	core		740515	0					
ANR	740570	Identifier	anal		740515	1					
ANR	740571	Identifier	esil		740515	1					
ANR	740572	Identifier	mdev_range		740515	1					
ANR	740573	ExpressionStatement	core -> anal -> esil -> mdev_range = strdup ( node -> value )	1702:2:46664:46715	740515	2	True				
ANR	740574	AssignmentExpression	core -> anal -> esil -> mdev_range = strdup ( node -> value )		740515	0		=			
ANR	740575	PtrMemberAccess	core -> anal -> esil -> mdev_range		740515	0					
ANR	740576	PtrMemberAccess	core -> anal -> esil		740515	0					
ANR	740577	PtrMemberAccess	core -> anal		740515	0					
ANR	740578	Identifier	core		740515	0					
ANR	740579	Identifier	anal		740515	1					
ANR	740580	Identifier	esil		740515	1					
ANR	740581	Identifier	mdev_range		740515	1					
ANR	740582	CallExpression	strdup ( node -> value )		740515	1					
ANR	740583	Callee	strdup		740515	0					
ANR	740584	Identifier	strdup		740515	0					
ANR	740585	ArgumentList	node -> value		740515	1					
ANR	740586	Argument	node -> value		740515	0					
ANR	740587	PtrMemberAccess	node -> value		740515	0					
ANR	740588	Identifier	node		740515	0					
ANR	740589	Identifier	value		740515	1					
ANR	740590	ReturnStatement	return true ;	1704:1:46721:46732	740515	3	True				
ANR	740591	Identifier	true		740515	0					
ANR	740592	ReturnType	static bool		740515	1					
ANR	740593	Identifier	cb_mdevrange		740515	2					
ANR	740594	ParameterList	"void * user , void * data"		740515	3					
ANR	740595	Parameter	void * user	1696:25:46433:46442	740515	0	True				
ANR	740596	ParameterType	void *		740515	0					
ANR	740597	Identifier	user		740515	1					
ANR	740598	Parameter	void * data	1696:37:46445:46454	740515	1	True				
ANR	740599	ParameterType	void *		740515	0					
ANR	740600	Identifier	data		740515	1					
ANR	740601	CFGEntryNode	ENTRY		740515		True				
ANR	740602	CFGExitNode	EXIT		740515		True				
ANR	740603	Symbol	data		740515						
ANR	740604	Symbol	r_core_esil_cmd		740515						
ANR	740605	Symbol	core -> anal -> esil -> cmd		740515						
ANR	740606	Symbol	* core		740515						
ANR	740607	Symbol	core -> anal		740515						
ANR	740608	Symbol	node -> value		740515						
ANR	740609	Symbol	core		740515						
ANR	740610	Symbol	node		740515						
ANR	740611	Symbol	* * * core		740515						
ANR	740612	Symbol	* core -> anal		740515						
ANR	740613	Symbol	* core -> anal -> esil		740515						
ANR	740614	Symbol	true		740515						
ANR	740615	Symbol	* * core -> anal		740515						
ANR	740616	Symbol	* node		740515						
ANR	740617	Symbol	strdup		740515						
ANR	740618	Symbol	core -> anal -> esil		740515						
ANR	740619	Symbol	user		740515						
ANR	740620	Symbol	* * core		740515						
ANR	740621	Symbol	core -> anal -> esil -> mdev_range		740515						
ANR	740622	Function	cb_cmd_esil_step	1707:0:46737:47063							
ANR	740623	FunctionDef	"cb_cmd_esil_step (void * user , void * data)"		740622	0					
ANR	740624	CompoundStatement		1707:53:46790:47063	740622	0					
ANR	740625	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1708:1:46793:46821	740622	0	True				
ANR	740626	IdentifierDecl	* core = ( RCore * ) user		740622	0					
ANR	740627	IdentifierDeclType	RCore *		740622	0					
ANR	740628	Identifier	core		740622	1					
ANR	740629	AssignmentExpression	* core = ( RCore * ) user		740622	2		=			
ANR	740630	Identifier	core		740622	0					
ANR	740631	CastExpression	( RCore * ) user		740622	1					
ANR	740632	CastTarget	RCore *		740622	0					
ANR	740633	Identifier	user		740622	1					
ANR	740634	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1709:1:46824:46864	740622	1	True				
ANR	740635	IdentifierDecl	* node = ( RConfigNode * ) data		740622	0					
ANR	740636	IdentifierDeclType	RConfigNode *		740622	0					
ANR	740637	Identifier	node		740622	1					
ANR	740638	AssignmentExpression	* node = ( RConfigNode * ) data		740622	2		=			
ANR	740639	Identifier	node		740622	0					
ANR	740640	CastExpression	( RConfigNode * ) data		740622	1					
ANR	740641	CastTarget	RConfigNode *		740622	0					
ANR	740642	Identifier	data		740622	1					
ANR	740643	IfStatement	if ( core && core -> anal && core -> anal -> esil )		740622	2					
ANR	740644	Condition	core && core -> anal && core -> anal -> esil	1710:5:46871:46908	740622	0	True				
ANR	740645	AndExpression	core && core -> anal && core -> anal -> esil		740622	0		&&			
ANR	740646	Identifier	core		740622	0					
ANR	740647	AndExpression	core -> anal && core -> anal -> esil		740622	1		&&			
ANR	740648	PtrMemberAccess	core -> anal		740622	0					
ANR	740649	Identifier	core		740622	0					
ANR	740650	Identifier	anal		740622	1					
ANR	740651	PtrMemberAccess	core -> anal -> esil		740622	1					
ANR	740652	PtrMemberAccess	core -> anal		740622	0					
ANR	740653	Identifier	core		740622	0					
ANR	740654	Identifier	anal		740622	1					
ANR	740655	Identifier	esil		740622	1					
ANR	740656	CompoundStatement		4:45:120:120	740622	1					
ANR	740657	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1711:2:46915:46954	740622	0	True				
ANR	740658	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		740622	0		=			
ANR	740659	PtrMemberAccess	core -> anal -> esil -> cmd		740622	0					
ANR	740660	PtrMemberAccess	core -> anal -> esil		740622	0					
ANR	740661	PtrMemberAccess	core -> anal		740622	0					
ANR	740662	Identifier	core		740622	0					
ANR	740663	Identifier	anal		740622	1					
ANR	740664	Identifier	esil		740622	1					
ANR	740665	Identifier	cmd		740622	1					
ANR	740666	Identifier	r_core_esil_cmd		740622	1					
ANR	740667	ExpressionStatement	free ( core -> anal -> esil -> cmd_step )	1712:2:46958:46991	740622	1	True				
ANR	740668	CallExpression	free ( core -> anal -> esil -> cmd_step )		740622	0					
ANR	740669	Callee	free		740622	0					
ANR	740670	Identifier	free		740622	0					
ANR	740671	ArgumentList	core -> anal -> esil -> cmd_step		740622	1					
ANR	740672	Argument	core -> anal -> esil -> cmd_step		740622	0					
ANR	740673	PtrMemberAccess	core -> anal -> esil -> cmd_step		740622	0					
ANR	740674	PtrMemberAccess	core -> anal -> esil		740622	0					
ANR	740675	PtrMemberAccess	core -> anal		740622	0					
ANR	740676	Identifier	core		740622	0					
ANR	740677	Identifier	anal		740622	1					
ANR	740678	Identifier	esil		740622	1					
ANR	740679	Identifier	cmd_step		740622	1					
ANR	740680	ExpressionStatement	core -> anal -> esil -> cmd_step = strdup ( node -> value )	1713:2:46995:47044	740622	2	True				
ANR	740681	AssignmentExpression	core -> anal -> esil -> cmd_step = strdup ( node -> value )		740622	0		=			
ANR	740682	PtrMemberAccess	core -> anal -> esil -> cmd_step		740622	0					
ANR	740683	PtrMemberAccess	core -> anal -> esil		740622	0					
ANR	740684	PtrMemberAccess	core -> anal		740622	0					
ANR	740685	Identifier	core		740622	0					
ANR	740686	Identifier	anal		740622	1					
ANR	740687	Identifier	esil		740622	1					
ANR	740688	Identifier	cmd_step		740622	1					
ANR	740689	CallExpression	strdup ( node -> value )		740622	1					
ANR	740690	Callee	strdup		740622	0					
ANR	740691	Identifier	strdup		740622	0					
ANR	740692	ArgumentList	node -> value		740622	1					
ANR	740693	Argument	node -> value		740622	0					
ANR	740694	PtrMemberAccess	node -> value		740622	0					
ANR	740695	Identifier	node		740622	0					
ANR	740696	Identifier	value		740622	1					
ANR	740697	ReturnStatement	return true ;	1715:1:47050:47061	740622	3	True				
ANR	740698	Identifier	true		740622	0					
ANR	740699	ReturnType	static bool		740622	1					
ANR	740700	Identifier	cb_cmd_esil_step		740622	2					
ANR	740701	ParameterList	"void * user , void * data"		740622	3					
ANR	740702	Parameter	void * user	1707:29:46766:46775	740622	0	True				
ANR	740703	ParameterType	void *		740622	0					
ANR	740704	Identifier	user		740622	1					
ANR	740705	Parameter	void * data	1707:41:46778:46787	740622	1	True				
ANR	740706	ParameterType	void *		740622	0					
ANR	740707	Identifier	data		740622	1					
ANR	740708	CFGEntryNode	ENTRY		740622		True				
ANR	740709	CFGExitNode	EXIT		740622		True				
ANR	740710	Symbol	data		740622						
ANR	740711	Symbol	r_core_esil_cmd		740622						
ANR	740712	Symbol	core -> anal -> esil -> cmd		740622						
ANR	740713	Symbol	* core		740622						
ANR	740714	Symbol	core -> anal		740622						
ANR	740715	Symbol	node -> value		740622						
ANR	740716	Symbol	core		740622						
ANR	740717	Symbol	node		740622						
ANR	740718	Symbol	* * * core		740622						
ANR	740719	Symbol	* core -> anal		740622						
ANR	740720	Symbol	core -> anal -> esil -> cmd_step		740622						
ANR	740721	Symbol	* core -> anal -> esil		740622						
ANR	740722	Symbol	true		740622						
ANR	740723	Symbol	* * core -> anal		740622						
ANR	740724	Symbol	* node		740622						
ANR	740725	Symbol	strdup		740622						
ANR	740726	Symbol	core -> anal -> esil		740622						
ANR	740727	Symbol	user		740622						
ANR	740728	Symbol	* * core		740622						
ANR	740729	Function	cb_cmd_esil_step_out	1718:0:47066:47404							
ANR	740730	FunctionDef	"cb_cmd_esil_step_out (void * user , void * data)"		740729	0					
ANR	740731	CompoundStatement		1718:57:47123:47404	740729	0					
ANR	740732	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1719:1:47126:47154	740729	0	True				
ANR	740733	IdentifierDecl	* core = ( RCore * ) user		740729	0					
ANR	740734	IdentifierDeclType	RCore *		740729	0					
ANR	740735	Identifier	core		740729	1					
ANR	740736	AssignmentExpression	* core = ( RCore * ) user		740729	2		=			
ANR	740737	Identifier	core		740729	0					
ANR	740738	CastExpression	( RCore * ) user		740729	1					
ANR	740739	CastTarget	RCore *		740729	0					
ANR	740740	Identifier	user		740729	1					
ANR	740741	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1720:1:47157:47197	740729	1	True				
ANR	740742	IdentifierDecl	* node = ( RConfigNode * ) data		740729	0					
ANR	740743	IdentifierDeclType	RConfigNode *		740729	0					
ANR	740744	Identifier	node		740729	1					
ANR	740745	AssignmentExpression	* node = ( RConfigNode * ) data		740729	2		=			
ANR	740746	Identifier	node		740729	0					
ANR	740747	CastExpression	( RConfigNode * ) data		740729	1					
ANR	740748	CastTarget	RConfigNode *		740729	0					
ANR	740749	Identifier	data		740729	1					
ANR	740750	IfStatement	if ( core && core -> anal && core -> anal -> esil )		740729	2					
ANR	740751	Condition	core && core -> anal && core -> anal -> esil	1721:5:47204:47241	740729	0	True				
ANR	740752	AndExpression	core && core -> anal && core -> anal -> esil		740729	0		&&			
ANR	740753	Identifier	core		740729	0					
ANR	740754	AndExpression	core -> anal && core -> anal -> esil		740729	1		&&			
ANR	740755	PtrMemberAccess	core -> anal		740729	0					
ANR	740756	Identifier	core		740729	0					
ANR	740757	Identifier	anal		740729	1					
ANR	740758	PtrMemberAccess	core -> anal -> esil		740729	1					
ANR	740759	PtrMemberAccess	core -> anal		740729	0					
ANR	740760	Identifier	core		740729	0					
ANR	740761	Identifier	anal		740729	1					
ANR	740762	Identifier	esil		740729	1					
ANR	740763	CompoundStatement		4:45:120:120	740729	1					
ANR	740764	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1722:2:47248:47287	740729	0	True				
ANR	740765	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		740729	0		=			
ANR	740766	PtrMemberAccess	core -> anal -> esil -> cmd		740729	0					
ANR	740767	PtrMemberAccess	core -> anal -> esil		740729	0					
ANR	740768	PtrMemberAccess	core -> anal		740729	0					
ANR	740769	Identifier	core		740729	0					
ANR	740770	Identifier	anal		740729	1					
ANR	740771	Identifier	esil		740729	1					
ANR	740772	Identifier	cmd		740729	1					
ANR	740773	Identifier	r_core_esil_cmd		740729	1					
ANR	740774	ExpressionStatement	free ( core -> anal -> esil -> cmd_step_out )	1723:2:47291:47328	740729	1	True				
ANR	740775	CallExpression	free ( core -> anal -> esil -> cmd_step_out )		740729	0					
ANR	740776	Callee	free		740729	0					
ANR	740777	Identifier	free		740729	0					
ANR	740778	ArgumentList	core -> anal -> esil -> cmd_step_out		740729	1					
ANR	740779	Argument	core -> anal -> esil -> cmd_step_out		740729	0					
ANR	740780	PtrMemberAccess	core -> anal -> esil -> cmd_step_out		740729	0					
ANR	740781	PtrMemberAccess	core -> anal -> esil		740729	0					
ANR	740782	PtrMemberAccess	core -> anal		740729	0					
ANR	740783	Identifier	core		740729	0					
ANR	740784	Identifier	anal		740729	1					
ANR	740785	Identifier	esil		740729	1					
ANR	740786	Identifier	cmd_step_out		740729	1					
ANR	740787	ExpressionStatement	core -> anal -> esil -> cmd_step_out = strdup ( node -> value )	1724:2:47332:47385	740729	2	True				
ANR	740788	AssignmentExpression	core -> anal -> esil -> cmd_step_out = strdup ( node -> value )		740729	0		=			
ANR	740789	PtrMemberAccess	core -> anal -> esil -> cmd_step_out		740729	0					
ANR	740790	PtrMemberAccess	core -> anal -> esil		740729	0					
ANR	740791	PtrMemberAccess	core -> anal		740729	0					
ANR	740792	Identifier	core		740729	0					
ANR	740793	Identifier	anal		740729	1					
ANR	740794	Identifier	esil		740729	1					
ANR	740795	Identifier	cmd_step_out		740729	1					
ANR	740796	CallExpression	strdup ( node -> value )		740729	1					
ANR	740797	Callee	strdup		740729	0					
ANR	740798	Identifier	strdup		740729	0					
ANR	740799	ArgumentList	node -> value		740729	1					
ANR	740800	Argument	node -> value		740729	0					
ANR	740801	PtrMemberAccess	node -> value		740729	0					
ANR	740802	Identifier	node		740729	0					
ANR	740803	Identifier	value		740729	1					
ANR	740804	ReturnStatement	return true ;	1726:1:47391:47402	740729	3	True				
ANR	740805	Identifier	true		740729	0					
ANR	740806	ReturnType	static bool		740729	1					
ANR	740807	Identifier	cb_cmd_esil_step_out		740729	2					
ANR	740808	ParameterList	"void * user , void * data"		740729	3					
ANR	740809	Parameter	void * user	1718:33:47099:47108	740729	0	True				
ANR	740810	ParameterType	void *		740729	0					
ANR	740811	Identifier	user		740729	1					
ANR	740812	Parameter	void * data	1718:45:47111:47120	740729	1	True				
ANR	740813	ParameterType	void *		740729	0					
ANR	740814	Identifier	data		740729	1					
ANR	740815	CFGEntryNode	ENTRY		740729		True				
ANR	740816	CFGExitNode	EXIT		740729		True				
ANR	740817	Symbol	data		740729						
ANR	740818	Symbol	r_core_esil_cmd		740729						
ANR	740819	Symbol	core -> anal -> esil -> cmd		740729						
ANR	740820	Symbol	* core		740729						
ANR	740821	Symbol	core -> anal		740729						
ANR	740822	Symbol	core -> anal -> esil -> cmd_step_out		740729						
ANR	740823	Symbol	node -> value		740729						
ANR	740824	Symbol	core		740729						
ANR	740825	Symbol	node		740729						
ANR	740826	Symbol	* * * core		740729						
ANR	740827	Symbol	* core -> anal		740729						
ANR	740828	Symbol	* core -> anal -> esil		740729						
ANR	740829	Symbol	true		740729						
ANR	740830	Symbol	* * core -> anal		740729						
ANR	740831	Symbol	* node		740729						
ANR	740832	Symbol	strdup		740729						
ANR	740833	Symbol	core -> anal -> esil		740729						
ANR	740834	Symbol	user		740729						
ANR	740835	Symbol	* * core		740729						
ANR	740836	Function	cb_cmd_esil_mdev	1729:0:47407:47733							
ANR	740837	FunctionDef	"cb_cmd_esil_mdev (void * user , void * data)"		740836	0					
ANR	740838	CompoundStatement		1729:53:47460:47733	740836	0					
ANR	740839	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1730:1:47463:47491	740836	0	True				
ANR	740840	IdentifierDecl	* core = ( RCore * ) user		740836	0					
ANR	740841	IdentifierDeclType	RCore *		740836	0					
ANR	740842	Identifier	core		740836	1					
ANR	740843	AssignmentExpression	* core = ( RCore * ) user		740836	2		=			
ANR	740844	Identifier	core		740836	0					
ANR	740845	CastExpression	( RCore * ) user		740836	1					
ANR	740846	CastTarget	RCore *		740836	0					
ANR	740847	Identifier	user		740836	1					
ANR	740848	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1731:1:47494:47534	740836	1	True				
ANR	740849	IdentifierDecl	* node = ( RConfigNode * ) data		740836	0					
ANR	740850	IdentifierDeclType	RConfigNode *		740836	0					
ANR	740851	Identifier	node		740836	1					
ANR	740852	AssignmentExpression	* node = ( RConfigNode * ) data		740836	2		=			
ANR	740853	Identifier	node		740836	0					
ANR	740854	CastExpression	( RConfigNode * ) data		740836	1					
ANR	740855	CastTarget	RConfigNode *		740836	0					
ANR	740856	Identifier	data		740836	1					
ANR	740857	IfStatement	if ( core && core -> anal && core -> anal -> esil )		740836	2					
ANR	740858	Condition	core && core -> anal && core -> anal -> esil	1732:5:47541:47578	740836	0	True				
ANR	740859	AndExpression	core && core -> anal && core -> anal -> esil		740836	0		&&			
ANR	740860	Identifier	core		740836	0					
ANR	740861	AndExpression	core -> anal && core -> anal -> esil		740836	1		&&			
ANR	740862	PtrMemberAccess	core -> anal		740836	0					
ANR	740863	Identifier	core		740836	0					
ANR	740864	Identifier	anal		740836	1					
ANR	740865	PtrMemberAccess	core -> anal -> esil		740836	1					
ANR	740866	PtrMemberAccess	core -> anal		740836	0					
ANR	740867	Identifier	core		740836	0					
ANR	740868	Identifier	anal		740836	1					
ANR	740869	Identifier	esil		740836	1					
ANR	740870	CompoundStatement		4:45:120:120	740836	1					
ANR	740871	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1733:2:47585:47624	740836	0	True				
ANR	740872	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		740836	0		=			
ANR	740873	PtrMemberAccess	core -> anal -> esil -> cmd		740836	0					
ANR	740874	PtrMemberAccess	core -> anal -> esil		740836	0					
ANR	740875	PtrMemberAccess	core -> anal		740836	0					
ANR	740876	Identifier	core		740836	0					
ANR	740877	Identifier	anal		740836	1					
ANR	740878	Identifier	esil		740836	1					
ANR	740879	Identifier	cmd		740836	1					
ANR	740880	Identifier	r_core_esil_cmd		740836	1					
ANR	740881	ExpressionStatement	free ( core -> anal -> esil -> cmd_mdev )	1734:2:47628:47661	740836	1	True				
ANR	740882	CallExpression	free ( core -> anal -> esil -> cmd_mdev )		740836	0					
ANR	740883	Callee	free		740836	0					
ANR	740884	Identifier	free		740836	0					
ANR	740885	ArgumentList	core -> anal -> esil -> cmd_mdev		740836	1					
ANR	740886	Argument	core -> anal -> esil -> cmd_mdev		740836	0					
ANR	740887	PtrMemberAccess	core -> anal -> esil -> cmd_mdev		740836	0					
ANR	740888	PtrMemberAccess	core -> anal -> esil		740836	0					
ANR	740889	PtrMemberAccess	core -> anal		740836	0					
ANR	740890	Identifier	core		740836	0					
ANR	740891	Identifier	anal		740836	1					
ANR	740892	Identifier	esil		740836	1					
ANR	740893	Identifier	cmd_mdev		740836	1					
ANR	740894	ExpressionStatement	core -> anal -> esil -> cmd_mdev = strdup ( node -> value )	1735:2:47665:47714	740836	2	True				
ANR	740895	AssignmentExpression	core -> anal -> esil -> cmd_mdev = strdup ( node -> value )		740836	0		=			
ANR	740896	PtrMemberAccess	core -> anal -> esil -> cmd_mdev		740836	0					
ANR	740897	PtrMemberAccess	core -> anal -> esil		740836	0					
ANR	740898	PtrMemberAccess	core -> anal		740836	0					
ANR	740899	Identifier	core		740836	0					
ANR	740900	Identifier	anal		740836	1					
ANR	740901	Identifier	esil		740836	1					
ANR	740902	Identifier	cmd_mdev		740836	1					
ANR	740903	CallExpression	strdup ( node -> value )		740836	1					
ANR	740904	Callee	strdup		740836	0					
ANR	740905	Identifier	strdup		740836	0					
ANR	740906	ArgumentList	node -> value		740836	1					
ANR	740907	Argument	node -> value		740836	0					
ANR	740908	PtrMemberAccess	node -> value		740836	0					
ANR	740909	Identifier	node		740836	0					
ANR	740910	Identifier	value		740836	1					
ANR	740911	ReturnStatement	return true ;	1737:1:47720:47731	740836	3	True				
ANR	740912	Identifier	true		740836	0					
ANR	740913	ReturnType	static bool		740836	1					
ANR	740914	Identifier	cb_cmd_esil_mdev		740836	2					
ANR	740915	ParameterList	"void * user , void * data"		740836	3					
ANR	740916	Parameter	void * user	1729:29:47436:47445	740836	0	True				
ANR	740917	ParameterType	void *		740836	0					
ANR	740918	Identifier	user		740836	1					
ANR	740919	Parameter	void * data	1729:41:47448:47457	740836	1	True				
ANR	740920	ParameterType	void *		740836	0					
ANR	740921	Identifier	data		740836	1					
ANR	740922	CFGEntryNode	ENTRY		740836		True				
ANR	740923	CFGExitNode	EXIT		740836		True				
ANR	740924	Symbol	data		740836						
ANR	740925	Symbol	r_core_esil_cmd		740836						
ANR	740926	Symbol	core -> anal -> esil -> cmd		740836						
ANR	740927	Symbol	* core		740836						
ANR	740928	Symbol	core -> anal		740836						
ANR	740929	Symbol	core -> anal -> esil -> cmd_mdev		740836						
ANR	740930	Symbol	node -> value		740836						
ANR	740931	Symbol	core		740836						
ANR	740932	Symbol	node		740836						
ANR	740933	Symbol	* * * core		740836						
ANR	740934	Symbol	* core -> anal		740836						
ANR	740935	Symbol	* core -> anal -> esil		740836						
ANR	740936	Symbol	true		740836						
ANR	740937	Symbol	* * core -> anal		740836						
ANR	740938	Symbol	* node		740836						
ANR	740939	Symbol	strdup		740836						
ANR	740940	Symbol	core -> anal -> esil		740836						
ANR	740941	Symbol	user		740836						
ANR	740942	Symbol	* * core		740836						
ANR	740943	Function	cb_cmd_esil_trap	1740:0:47736:48025							
ANR	740944	FunctionDef	"cb_cmd_esil_trap (void * user , void * data)"		740943	0					
ANR	740945	CompoundStatement		1740:53:47789:48025	740943	0					
ANR	740946	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1741:1:47792:47820	740943	0	True				
ANR	740947	IdentifierDecl	* core = ( RCore * ) user		740943	0					
ANR	740948	IdentifierDeclType	RCore *		740943	0					
ANR	740949	Identifier	core		740943	1					
ANR	740950	AssignmentExpression	* core = ( RCore * ) user		740943	2		=			
ANR	740951	Identifier	core		740943	0					
ANR	740952	CastExpression	( RCore * ) user		740943	1					
ANR	740953	CastTarget	RCore *		740943	0					
ANR	740954	Identifier	user		740943	1					
ANR	740955	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1742:1:47823:47863	740943	1	True				
ANR	740956	IdentifierDecl	* node = ( RConfigNode * ) data		740943	0					
ANR	740957	IdentifierDeclType	RConfigNode *		740943	0					
ANR	740958	Identifier	node		740943	1					
ANR	740959	AssignmentExpression	* node = ( RConfigNode * ) data		740943	2		=			
ANR	740960	Identifier	node		740943	0					
ANR	740961	CastExpression	( RConfigNode * ) data		740943	1					
ANR	740962	CastTarget	RConfigNode *		740943	0					
ANR	740963	Identifier	data		740943	1					
ANR	740964	IfStatement	if ( core && core -> anal && core -> anal -> esil )		740943	2					
ANR	740965	Condition	core && core -> anal && core -> anal -> esil	1743:5:47870:47907	740943	0	True				
ANR	740966	AndExpression	core && core -> anal && core -> anal -> esil		740943	0		&&			
ANR	740967	Identifier	core		740943	0					
ANR	740968	AndExpression	core -> anal && core -> anal -> esil		740943	1		&&			
ANR	740969	PtrMemberAccess	core -> anal		740943	0					
ANR	740970	Identifier	core		740943	0					
ANR	740971	Identifier	anal		740943	1					
ANR	740972	PtrMemberAccess	core -> anal -> esil		740943	1					
ANR	740973	PtrMemberAccess	core -> anal		740943	0					
ANR	740974	Identifier	core		740943	0					
ANR	740975	Identifier	anal		740943	1					
ANR	740976	Identifier	esil		740943	1					
ANR	740977	CompoundStatement		4:45:120:120	740943	1					
ANR	740978	ExpressionStatement	core -> anal -> esil -> cmd = r_core_esil_cmd	1744:2:47914:47953	740943	0	True				
ANR	740979	AssignmentExpression	core -> anal -> esil -> cmd = r_core_esil_cmd		740943	0		=			
ANR	740980	PtrMemberAccess	core -> anal -> esil -> cmd		740943	0					
ANR	740981	PtrMemberAccess	core -> anal -> esil		740943	0					
ANR	740982	PtrMemberAccess	core -> anal		740943	0					
ANR	740983	Identifier	core		740943	0					
ANR	740984	Identifier	anal		740943	1					
ANR	740985	Identifier	esil		740943	1					
ANR	740986	Identifier	cmd		740943	1					
ANR	740987	Identifier	r_core_esil_cmd		740943	1					
ANR	740988	ExpressionStatement	core -> anal -> esil -> cmd_trap = strdup ( node -> value )	1745:2:47957:48006	740943	1	True				
ANR	740989	AssignmentExpression	core -> anal -> esil -> cmd_trap = strdup ( node -> value )		740943	0		=			
ANR	740990	PtrMemberAccess	core -> anal -> esil -> cmd_trap		740943	0					
ANR	740991	PtrMemberAccess	core -> anal -> esil		740943	0					
ANR	740992	PtrMemberAccess	core -> anal		740943	0					
ANR	740993	Identifier	core		740943	0					
ANR	740994	Identifier	anal		740943	1					
ANR	740995	Identifier	esil		740943	1					
ANR	740996	Identifier	cmd_trap		740943	1					
ANR	740997	CallExpression	strdup ( node -> value )		740943	1					
ANR	740998	Callee	strdup		740943	0					
ANR	740999	Identifier	strdup		740943	0					
ANR	741000	ArgumentList	node -> value		740943	1					
ANR	741001	Argument	node -> value		740943	0					
ANR	741002	PtrMemberAccess	node -> value		740943	0					
ANR	741003	Identifier	node		740943	0					
ANR	741004	Identifier	value		740943	1					
ANR	741005	ReturnStatement	return true ;	1747:1:48012:48023	740943	3	True				
ANR	741006	Identifier	true		740943	0					
ANR	741007	ReturnType	static bool		740943	1					
ANR	741008	Identifier	cb_cmd_esil_trap		740943	2					
ANR	741009	ParameterList	"void * user , void * data"		740943	3					
ANR	741010	Parameter	void * user	1740:29:47765:47774	740943	0	True				
ANR	741011	ParameterType	void *		740943	0					
ANR	741012	Identifier	user		740943	1					
ANR	741013	Parameter	void * data	1740:41:47777:47786	740943	1	True				
ANR	741014	ParameterType	void *		740943	0					
ANR	741015	Identifier	data		740943	1					
ANR	741016	CFGEntryNode	ENTRY		740943		True				
ANR	741017	CFGExitNode	EXIT		740943		True				
ANR	741018	Symbol	data		740943						
ANR	741019	Symbol	r_core_esil_cmd		740943						
ANR	741020	Symbol	core -> anal -> esil -> cmd		740943						
ANR	741021	Symbol	* core		740943						
ANR	741022	Symbol	core -> anal		740943						
ANR	741023	Symbol	node -> value		740943						
ANR	741024	Symbol	core		740943						
ANR	741025	Symbol	node		740943						
ANR	741026	Symbol	* * * core		740943						
ANR	741027	Symbol	* core -> anal		740943						
ANR	741028	Symbol	core -> anal -> esil -> cmd_trap		740943						
ANR	741029	Symbol	* core -> anal -> esil		740943						
ANR	741030	Symbol	true		740943						
ANR	741031	Symbol	* * core -> anal		740943						
ANR	741032	Symbol	* node		740943						
ANR	741033	Symbol	strdup		740943						
ANR	741034	Symbol	core -> anal -> esil		740943						
ANR	741035	Symbol	user		740943						
ANR	741036	Symbol	* * core		740943						
ANR	741037	Function	cb_fsview	1750:0:48028:48501							
ANR	741038	FunctionDef	"cb_fsview (void * user , void * data)"		741037	0					
ANR	741039	CompoundStatement		1750:46:48074:48501	741037	0					
ANR	741040	IdentifierDeclStatement	int type = R_FS_VIEW_NORMAL ;	1751:1:48077:48104	741037	0	True				
ANR	741041	IdentifierDecl	type = R_FS_VIEW_NORMAL		741037	0					
ANR	741042	IdentifierDeclType	int		741037	0					
ANR	741043	Identifier	type		741037	1					
ANR	741044	AssignmentExpression	type = R_FS_VIEW_NORMAL		741037	2		=			
ANR	741045	Identifier	R_FS_VIEW_NORMAL		741037	0					
ANR	741046	Identifier	R_FS_VIEW_NORMAL		741037	1					
ANR	741047	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1752:1:48107:48135	741037	1	True				
ANR	741048	IdentifierDecl	* core = ( RCore * ) user		741037	0					
ANR	741049	IdentifierDeclType	RCore *		741037	0					
ANR	741050	Identifier	core		741037	1					
ANR	741051	AssignmentExpression	* core = ( RCore * ) user		741037	2		=			
ANR	741052	Identifier	core		741037	0					
ANR	741053	CastExpression	( RCore * ) user		741037	1					
ANR	741054	CastTarget	RCore *		741037	0					
ANR	741055	Identifier	user		741037	1					
ANR	741056	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1753:1:48138:48178	741037	2	True				
ANR	741057	IdentifierDecl	* node = ( RConfigNode * ) data		741037	0					
ANR	741058	IdentifierDeclType	RConfigNode *		741037	0					
ANR	741059	Identifier	node		741037	1					
ANR	741060	AssignmentExpression	* node = ( RConfigNode * ) data		741037	2		=			
ANR	741061	Identifier	node		741037	0					
ANR	741062	CastExpression	( RConfigNode * ) data		741037	1					
ANR	741063	CastTarget	RConfigNode *		741037	0					
ANR	741064	Identifier	data		741037	1					
ANR	741065	IfStatement	if ( * node -> value == '?' )		741037	3					
ANR	741066	Condition	* node -> value == '?'	1754:5:48185:48203	741037	0	True				
ANR	741067	EqualityExpression	* node -> value == '?'		741037	0		==			
ANR	741068	UnaryOperationExpression	* node -> value		741037	0					
ANR	741069	UnaryOperator	*		741037	0					
ANR	741070	PtrMemberAccess	node -> value		741037	1					
ANR	741071	Identifier	node		741037	0					
ANR	741072	Identifier	value		741037	1					
ANR	741073	PrimaryExpression	'?'		741037	1					
ANR	741074	CompoundStatement		5:26:131:131	741037	1					
ANR	741075	ExpressionStatement	print_node_options ( node )	1755:2:48210:48235	741037	0	True				
ANR	741076	CallExpression	print_node_options ( node )		741037	0					
ANR	741077	Callee	print_node_options		741037	0					
ANR	741078	Identifier	print_node_options		741037	0					
ANR	741079	ArgumentList	node		741037	1					
ANR	741080	Argument	node		741037	0					
ANR	741081	Identifier	node		741037	0					
ANR	741082	ReturnStatement	return false ;	1756:2:48239:48251	741037	1	True				
ANR	741083	Identifier	false		741037	0					
ANR	741084	IfStatement	"if ( ! strcmp ( node -> value , ""all"" ) )"		741037	4					
ANR	741085	Condition	"! strcmp ( node -> value , ""all"" )"	1758:5:48261:48288	741037	0	True				
ANR	741086	UnaryOperationExpression	"! strcmp ( node -> value , ""all"" )"		741037	0					
ANR	741087	UnaryOperator	!		741037	0					
ANR	741088	CallExpression	"strcmp ( node -> value , ""all"" )"		741037	1					
ANR	741089	Callee	strcmp		741037	0					
ANR	741090	Identifier	strcmp		741037	0					
ANR	741091	ArgumentList	node -> value		741037	1					
ANR	741092	Argument	node -> value		741037	0					
ANR	741093	PtrMemberAccess	node -> value		741037	0					
ANR	741094	Identifier	node		741037	0					
ANR	741095	Identifier	value		741037	1					
ANR	741096	Argument	"""all"""		741037	1					
ANR	741097	PrimaryExpression	"""all"""		741037	0					
ANR	741098	CompoundStatement		9:35:216:216	741037	1					
ANR	741099	ExpressionStatement	type = R_FS_VIEW_ALL	1759:2:48295:48315	741037	0	True				
ANR	741100	AssignmentExpression	type = R_FS_VIEW_ALL		741037	0		=			
ANR	741101	Identifier	type		741037	0					
ANR	741102	Identifier	R_FS_VIEW_ALL		741037	1					
ANR	741103	IfStatement	"if ( ! strstr ( node -> value , ""del"" ) )"		741037	5					
ANR	741104	Condition	"! strstr ( node -> value , ""del"" )"	1761:5:48325:48352	741037	0	True				
ANR	741105	UnaryOperationExpression	"! strstr ( node -> value , ""del"" )"		741037	0					
ANR	741106	UnaryOperator	!		741037	0					
ANR	741107	CallExpression	"strstr ( node -> value , ""del"" )"		741037	1					
ANR	741108	Callee	strstr		741037	0					
ANR	741109	Identifier	strstr		741037	0					
ANR	741110	ArgumentList	node -> value		741037	1					
ANR	741111	Argument	node -> value		741037	0					
ANR	741112	PtrMemberAccess	node -> value		741037	0					
ANR	741113	Identifier	node		741037	0					
ANR	741114	Identifier	value		741037	1					
ANR	741115	Argument	"""del"""		741037	1					
ANR	741116	PrimaryExpression	"""del"""		741037	0					
ANR	741117	CompoundStatement		12:35:280:280	741037	1					
ANR	741118	ExpressionStatement	type |= R_FS_VIEW_DELETED	1762:2:48359:48384	741037	0	True				
ANR	741119	AssignmentExpression	type |= R_FS_VIEW_DELETED		741037	0		|=			
ANR	741120	Identifier	type		741037	0					
ANR	741121	Identifier	R_FS_VIEW_DELETED		741037	1					
ANR	741122	IfStatement	"if ( ! strstr ( node -> value , ""spe"" ) )"		741037	6					
ANR	741123	Condition	"! strstr ( node -> value , ""spe"" )"	1764:5:48394:48421	741037	0	True				
ANR	741124	UnaryOperationExpression	"! strstr ( node -> value , ""spe"" )"		741037	0					
ANR	741125	UnaryOperator	!		741037	0					
ANR	741126	CallExpression	"strstr ( node -> value , ""spe"" )"		741037	1					
ANR	741127	Callee	strstr		741037	0					
ANR	741128	Identifier	strstr		741037	0					
ANR	741129	ArgumentList	node -> value		741037	1					
ANR	741130	Argument	node -> value		741037	0					
ANR	741131	PtrMemberAccess	node -> value		741037	0					
ANR	741132	Identifier	node		741037	0					
ANR	741133	Identifier	value		741037	1					
ANR	741134	Argument	"""spe"""		741037	1					
ANR	741135	PrimaryExpression	"""spe"""		741037	0					
ANR	741136	CompoundStatement		15:35:349:349	741037	1					
ANR	741137	ExpressionStatement	type |= R_FS_VIEW_SPECIAL	1765:2:48428:48453	741037	0	True				
ANR	741138	AssignmentExpression	type |= R_FS_VIEW_SPECIAL		741037	0		|=			
ANR	741139	Identifier	type		741037	0					
ANR	741140	Identifier	R_FS_VIEW_SPECIAL		741037	1					
ANR	741141	ExpressionStatement	"r_fs_view ( core -> fs , type )"	1767:1:48459:48485	741037	7	True				
ANR	741142	CallExpression	"r_fs_view ( core -> fs , type )"		741037	0					
ANR	741143	Callee	r_fs_view		741037	0					
ANR	741144	Identifier	r_fs_view		741037	0					
ANR	741145	ArgumentList	core -> fs		741037	1					
ANR	741146	Argument	core -> fs		741037	0					
ANR	741147	PtrMemberAccess	core -> fs		741037	0					
ANR	741148	Identifier	core		741037	0					
ANR	741149	Identifier	fs		741037	1					
ANR	741150	Argument	type		741037	1					
ANR	741151	Identifier	type		741037	0					
ANR	741152	ReturnStatement	return true ;	1768:1:48488:48499	741037	8	True				
ANR	741153	Identifier	true		741037	0					
ANR	741154	ReturnType	static bool		741037	1					
ANR	741155	Identifier	cb_fsview		741037	2					
ANR	741156	ParameterList	"void * user , void * data"		741037	3					
ANR	741157	Parameter	void * user	1750:22:48050:48059	741037	0	True				
ANR	741158	ParameterType	void *		741037	0					
ANR	741159	Identifier	user		741037	1					
ANR	741160	Parameter	void * data	1750:34:48062:48071	741037	1	True				
ANR	741161	ParameterType	void *		741037	0					
ANR	741162	Identifier	data		741037	1					
ANR	741163	CFGEntryNode	ENTRY		741037		True				
ANR	741164	CFGExitNode	EXIT		741037		True				
ANR	741165	Symbol	strcmp		741037						
ANR	741166	Symbol	* node -> value		741037						
ANR	741167	Symbol	R_FS_VIEW_SPECIAL		741037						
ANR	741168	Symbol	data		741037						
ANR	741169	Symbol	R_FS_VIEW_NORMAL		741037						
ANR	741170	Symbol	false		741037						
ANR	741171	Symbol	* core		741037						
ANR	741172	Symbol	type		741037						
ANR	741173	Symbol	R_FS_VIEW_DELETED		741037						
ANR	741174	Symbol	R_FS_VIEW_ALL		741037						
ANR	741175	Symbol	node -> value		741037						
ANR	741176	Symbol	core		741037						
ANR	741177	Symbol	node		741037						
ANR	741178	Symbol	* * node		741037						
ANR	741179	Symbol	strstr		741037						
ANR	741180	Symbol	true		741037						
ANR	741181	Symbol	* node		741037						
ANR	741182	Symbol	core -> fs		741037						
ANR	741183	Symbol	user		741037						
ANR	741184	Function	cb_cmddepth	1771:0:48504:48712							
ANR	741185	FunctionDef	"cb_cmddepth (void * user , void * data)"		741184	0					
ANR	741186	CompoundStatement		1771:48:48552:48712	741184	0					
ANR	741187	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1772:1:48555:48582	741184	0	True				
ANR	741188	IdentifierDecl	* core = ( RCore * ) user		741184	0					
ANR	741189	IdentifierDeclType	RCore *		741184	0					
ANR	741190	Identifier	core		741184	1					
ANR	741191	AssignmentExpression	* core = ( RCore * ) user		741184	2		=			
ANR	741192	Identifier	core		741184	0					
ANR	741193	CastExpression	( RCore * ) user		741184	1					
ANR	741194	CastTarget	RCore *		741184	0					
ANR	741195	Identifier	user		741184	1					
ANR	741196	IdentifierDeclStatement	"int c = R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 ) ;"	1773:1:48585:48633	741184	1	True				
ANR	741197	IdentifierDecl	"c = R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 )"		741184	0					
ANR	741198	IdentifierDeclType	int		741184	0					
ANR	741199	Identifier	c		741184	1					
ANR	741200	AssignmentExpression	"c = R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 )"		741184	2		=			
ANR	741201	Identifier	c		741184	0					
ANR	741202	CallExpression	"R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 )"		741184	1					
ANR	741203	Callee	R_MAX		741184	0					
ANR	741204	Identifier	R_MAX		741184	0					
ANR	741205	ArgumentList	( ( RConfigNode * ) data ) -> i_value		741184	1					
ANR	741206	Argument	( ( RConfigNode * ) data ) -> i_value		741184	0					
ANR	741207	PtrMemberAccess	( ( RConfigNode * ) data ) -> i_value		741184	0					
ANR	741208	CastExpression	( RConfigNode * ) data		741184	0					
ANR	741209	CastTarget	RConfigNode *		741184	0					
ANR	741210	Identifier	data		741184	1					
ANR	741211	Identifier	i_value		741184	1					
ANR	741212	Argument	0		741184	1					
ANR	741213	PrimaryExpression	0		741184	0					
ANR	741214	ExpressionStatement	core -> max_cmd_depth = c	1774:1:48636:48659	741184	2	True				
ANR	741215	AssignmentExpression	core -> max_cmd_depth = c		741184	0		=			
ANR	741216	PtrMemberAccess	core -> max_cmd_depth		741184	0					
ANR	741217	Identifier	core		741184	0					
ANR	741218	Identifier	max_cmd_depth		741184	1					
ANR	741219	Identifier	c		741184	1					
ANR	741220	ExpressionStatement	core -> cons -> context -> cmd_depth = c	1775:1:48662:48696	741184	3	True				
ANR	741221	AssignmentExpression	core -> cons -> context -> cmd_depth = c		741184	0		=			
ANR	741222	PtrMemberAccess	core -> cons -> context -> cmd_depth		741184	0					
ANR	741223	PtrMemberAccess	core -> cons -> context		741184	0					
ANR	741224	PtrMemberAccess	core -> cons		741184	0					
ANR	741225	Identifier	core		741184	0					
ANR	741226	Identifier	cons		741184	1					
ANR	741227	Identifier	context		741184	1					
ANR	741228	Identifier	cmd_depth		741184	1					
ANR	741229	Identifier	c		741184	1					
ANR	741230	ReturnStatement	return true ;	1776:1:48699:48710	741184	4	True				
ANR	741231	Identifier	true		741184	0					
ANR	741232	ReturnType	static bool		741184	1					
ANR	741233	Identifier	cb_cmddepth		741184	2					
ANR	741234	ParameterList	"void * user , void * data"		741184	3					
ANR	741235	Parameter	void * user	1771:24:48528:48537	741184	0	True				
ANR	741236	ParameterType	void *		741184	0					
ANR	741237	Identifier	user		741184	1					
ANR	741238	Parameter	void * data	1771:36:48540:48549	741184	1	True				
ANR	741239	ParameterType	void *		741184	0					
ANR	741240	Identifier	data		741184	1					
ANR	741241	CFGEntryNode	ENTRY		741184		True				
ANR	741242	CFGExitNode	EXIT		741184		True				
ANR	741243	Symbol	c		741184						
ANR	741244	Symbol	data		741184						
ANR	741245	Symbol	* core -> cons		741184						
ANR	741246	Symbol	* * core -> cons		741184						
ANR	741247	Symbol	* core		741184						
ANR	741248	Symbol	core -> max_cmd_depth		741184						
ANR	741249	Symbol	( ( RConfigNode * ) data ) -> i_value		741184						
ANR	741250	Symbol	core		741184						
ANR	741251	Symbol	* * * core		741184						
ANR	741252	Symbol	core -> cons		741184						
ANR	741253	Symbol	* core -> cons -> context		741184						
ANR	741254	Symbol	R_MAX		741184						
ANR	741255	Symbol	true		741184						
ANR	741256	Symbol	user		741184						
ANR	741257	Symbol	* data		741184						
ANR	741258	Symbol	core -> cons -> context		741184						
ANR	741259	Symbol	* * core		741184						
ANR	741260	Symbol	core -> cons -> context -> cmd_depth		741184						
ANR	741261	Function	cb_hexcols	1779:0:48715:48933							
ANR	741262	FunctionDef	"cb_hexcols (void * user , void * data)"		741261	0					
ANR	741263	CompoundStatement		1779:47:48762:48933	741261	0					
ANR	741264	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1780:1:48765:48792	741261	0	True				
ANR	741265	IdentifierDecl	* core = ( RCore * ) user		741261	0					
ANR	741266	IdentifierDeclType	RCore *		741261	0					
ANR	741267	Identifier	core		741261	1					
ANR	741268	AssignmentExpression	* core = ( RCore * ) user		741261	2		=			
ANR	741269	Identifier	core		741261	0					
ANR	741270	CastExpression	( RCore * ) user		741261	1					
ANR	741271	CastTarget	RCore *		741261	0					
ANR	741272	Identifier	user		741261	1					
ANR	741273	IdentifierDeclStatement	"int c = R_MIN ( 1024 , R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 ) ) ;"	1781:1:48795:48857	741261	1	True				
ANR	741274	IdentifierDecl	"c = R_MIN ( 1024 , R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 ) )"		741261	0					
ANR	741275	IdentifierDeclType	int		741261	0					
ANR	741276	Identifier	c		741261	1					
ANR	741277	AssignmentExpression	"c = R_MIN ( 1024 , R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 ) )"		741261	2		=			
ANR	741278	Identifier	c		741261	0					
ANR	741279	CallExpression	"R_MIN ( 1024 , R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 ) )"		741261	1					
ANR	741280	Callee	R_MIN		741261	0					
ANR	741281	Identifier	R_MIN		741261	0					
ANR	741282	ArgumentList	1024		741261	1					
ANR	741283	Argument	1024		741261	0					
ANR	741284	PrimaryExpression	1024		741261	0					
ANR	741285	Argument	"R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 )"		741261	1					
ANR	741286	CallExpression	"R_MAX ( ( ( RConfigNode * ) data ) -> i_value , 0 )"		741261	0					
ANR	741287	Callee	R_MAX		741261	0					
ANR	741288	Identifier	R_MAX		741261	0					
ANR	741289	ArgumentList	( ( RConfigNode * ) data ) -> i_value		741261	1					
ANR	741290	Argument	( ( RConfigNode * ) data ) -> i_value		741261	0					
ANR	741291	PtrMemberAccess	( ( RConfigNode * ) data ) -> i_value		741261	0					
ANR	741292	CastExpression	( RConfigNode * ) data		741261	0					
ANR	741293	CastTarget	RConfigNode *		741261	0					
ANR	741294	Identifier	data		741261	1					
ANR	741295	Identifier	i_value		741261	1					
ANR	741296	Argument	0		741261	1					
ANR	741297	PrimaryExpression	0		741261	0					
ANR	741298	ExpressionStatement	core -> print -> cols = c	1782:1:48860:48881	741261	2	True				
ANR	741299	AssignmentExpression	core -> print -> cols = c		741261	0		=			
ANR	741300	PtrMemberAccess	core -> print -> cols		741261	0					
ANR	741301	PtrMemberAccess	core -> print		741261	0					
ANR	741302	Identifier	core		741261	0					
ANR	741303	Identifier	print		741261	1					
ANR	741304	Identifier	cols		741261	1					
ANR	741305	Identifier	c		741261	1					
ANR	741306	ExpressionStatement	core -> dbg -> regcols = c / 4	1783:1:48893:48917	741261	3	True				
ANR	741307	AssignmentExpression	core -> dbg -> regcols = c / 4		741261	0		=			
ANR	741308	PtrMemberAccess	core -> dbg -> regcols		741261	0					
ANR	741309	PtrMemberAccess	core -> dbg		741261	0					
ANR	741310	Identifier	core		741261	0					
ANR	741311	Identifier	dbg		741261	1					
ANR	741312	Identifier	regcols		741261	1					
ANR	741313	MultiplicativeExpression	c / 4		741261	1		/			
ANR	741314	Identifier	c		741261	0					
ANR	741315	PrimaryExpression	4		741261	1					
ANR	741316	ReturnStatement	return true ;	1784:1:48920:48931	741261	4	True				
ANR	741317	Identifier	true		741261	0					
ANR	741318	ReturnType	static bool		741261	1					
ANR	741319	Identifier	cb_hexcols		741261	2					
ANR	741320	ParameterList	"void * user , void * data"		741261	3					
ANR	741321	Parameter	void * user	1779:23:48738:48747	741261	0	True				
ANR	741322	ParameterType	void *		741261	0					
ANR	741323	Identifier	user		741261	1					
ANR	741324	Parameter	void * data	1779:35:48750:48759	741261	1	True				
ANR	741325	ParameterType	void *		741261	0					
ANR	741326	Identifier	data		741261	1					
ANR	741327	CFGEntryNode	ENTRY		741261		True				
ANR	741328	CFGExitNode	EXIT		741261		True				
ANR	741329	Symbol	c		741261						
ANR	741330	Symbol	data		741261						
ANR	741331	Symbol	core -> print -> cols		741261						
ANR	741332	Symbol	* core		741261						
ANR	741333	Symbol	R_MIN		741261						
ANR	741334	Symbol	( ( RConfigNode * ) data ) -> i_value		741261						
ANR	741335	Symbol	core		741261						
ANR	741336	Symbol	* core -> print		741261						
ANR	741337	Symbol	R_MAX		741261						
ANR	741338	Symbol	true		741261						
ANR	741339	Symbol	core -> print		741261						
ANR	741340	Symbol	user		741261						
ANR	741341	Symbol	* data		741261						
ANR	741342	Symbol	* core -> dbg		741261						
ANR	741343	Symbol	* * core		741261						
ANR	741344	Symbol	core -> dbg -> regcols		741261						
ANR	741345	Symbol	core -> dbg		741261						
ANR	741346	Function	cb_hexstride	1787:0:48936:49092							
ANR	741347	FunctionDef	"cb_hexstride (void * user , void * data)"		741346	0					
ANR	741348	CompoundStatement		1787:49:48985:49092	741346	0					
ANR	741349	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1788:1:48988:49027	741346	0	True				
ANR	741350	IdentifierDecl	* node = ( RConfigNode * ) data		741346	0					
ANR	741351	IdentifierDeclType	RConfigNode *		741346	0					
ANR	741352	Identifier	node		741346	1					
ANR	741353	AssignmentExpression	* node = ( RConfigNode * ) data		741346	2		=			
ANR	741354	Identifier	node		741346	0					
ANR	741355	CastExpression	( RConfigNode * ) data		741346	1					
ANR	741356	CastTarget	RConfigNode *		741346	0					
ANR	741357	Identifier	data		741346	1					
ANR	741358	ExpressionStatement	( ( RCore * ) user ) -> print -> stride = node -> i_value	1789:1:49030:49076	741346	1	True				
ANR	741359	AssignmentExpression	( ( RCore * ) user ) -> print -> stride = node -> i_value		741346	0		=			
ANR	741360	PtrMemberAccess	( ( RCore * ) user ) -> print -> stride		741346	0					
ANR	741361	PtrMemberAccess	( ( RCore * ) user ) -> print		741346	0					
ANR	741362	CastExpression	( RCore * ) user		741346	0					
ANR	741363	CastTarget	RCore *		741346	0					
ANR	741364	Identifier	user		741346	1					
ANR	741365	Identifier	print		741346	1					
ANR	741366	Identifier	stride		741346	1					
ANR	741367	PtrMemberAccess	node -> i_value		741346	1					
ANR	741368	Identifier	node		741346	0					
ANR	741369	Identifier	i_value		741346	1					
ANR	741370	ReturnStatement	return true ;	1790:1:49079:49090	741346	2	True				
ANR	741371	Identifier	true		741346	0					
ANR	741372	ReturnType	static bool		741346	1					
ANR	741373	Identifier	cb_hexstride		741346	2					
ANR	741374	ParameterList	"void * user , void * data"		741346	3					
ANR	741375	Parameter	void * user	1787:25:48961:48970	741346	0	True				
ANR	741376	ParameterType	void *		741346	0					
ANR	741377	Identifier	user		741346	1					
ANR	741378	Parameter	void * data	1787:37:48973:48982	741346	1	True				
ANR	741379	ParameterType	void *		741346	0					
ANR	741380	Identifier	data		741346	1					
ANR	741381	CFGEntryNode	ENTRY		741346		True				
ANR	741382	CFGExitNode	EXIT		741346		True				
ANR	741383	Symbol	node		741346						
ANR	741384	Symbol	* ( ( RCore * ) user ) -> print		741346						
ANR	741385	Symbol	data		741346						
ANR	741386	Symbol	* user		741346						
ANR	741387	Symbol	( ( RCore * ) user ) -> print -> stride		741346						
ANR	741388	Symbol	true		741346						
ANR	741389	Symbol	* * user		741346						
ANR	741390	Symbol	* node		741346						
ANR	741391	Symbol	( ( RCore * ) user ) -> print		741346						
ANR	741392	Symbol	user		741346						
ANR	741393	Symbol	node -> i_value		741346						
ANR	741394	Function	cb_search_kwidx	1793:0:49095:49275							
ANR	741395	FunctionDef	"cb_search_kwidx (void * user , void * data)"		741394	0					
ANR	741396	CompoundStatement		1793:52:49147:49275	741394	0					
ANR	741397	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1794:1:49150:49178	741394	0	True				
ANR	741398	IdentifierDecl	* core = ( RCore * ) user		741394	0					
ANR	741399	IdentifierDeclType	RCore *		741394	0					
ANR	741400	Identifier	core		741394	1					
ANR	741401	AssignmentExpression	* core = ( RCore * ) user		741394	2		=			
ANR	741402	Identifier	core		741394	0					
ANR	741403	CastExpression	( RCore * ) user		741394	1					
ANR	741404	CastTarget	RCore *		741394	0					
ANR	741405	Identifier	user		741394	1					
ANR	741406	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1795:1:49181:49221	741394	1	True				
ANR	741407	IdentifierDecl	* node = ( RConfigNode * ) data		741394	0					
ANR	741408	IdentifierDeclType	RConfigNode *		741394	0					
ANR	741409	Identifier	node		741394	1					
ANR	741410	AssignmentExpression	* node = ( RConfigNode * ) data		741394	2		=			
ANR	741411	Identifier	node		741394	0					
ANR	741412	CastExpression	( RConfigNode * ) data		741394	1					
ANR	741413	CastTarget	RConfigNode *		741394	0					
ANR	741414	Identifier	data		741394	1					
ANR	741415	ExpressionStatement	core -> search -> n_kws = node -> i_value	1796:1:49224:49259	741394	2	True				
ANR	741416	AssignmentExpression	core -> search -> n_kws = node -> i_value		741394	0		=			
ANR	741417	PtrMemberAccess	core -> search -> n_kws		741394	0					
ANR	741418	PtrMemberAccess	core -> search		741394	0					
ANR	741419	Identifier	core		741394	0					
ANR	741420	Identifier	search		741394	1					
ANR	741421	Identifier	n_kws		741394	1					
ANR	741422	PtrMemberAccess	node -> i_value		741394	1					
ANR	741423	Identifier	node		741394	0					
ANR	741424	Identifier	i_value		741394	1					
ANR	741425	ReturnStatement	return true ;	1797:1:49262:49273	741394	3	True				
ANR	741426	Identifier	true		741394	0					
ANR	741427	ReturnType	static bool		741394	1					
ANR	741428	Identifier	cb_search_kwidx		741394	2					
ANR	741429	ParameterList	"void * user , void * data"		741394	3					
ANR	741430	Parameter	void * user	1793:28:49123:49132	741394	0	True				
ANR	741431	ParameterType	void *		741394	0					
ANR	741432	Identifier	user		741394	1					
ANR	741433	Parameter	void * data	1793:40:49135:49144	741394	1	True				
ANR	741434	ParameterType	void *		741394	0					
ANR	741435	Identifier	data		741394	1					
ANR	741436	CFGEntryNode	ENTRY		741394		True				
ANR	741437	CFGExitNode	EXIT		741394		True				
ANR	741438	Symbol	core		741394						
ANR	741439	Symbol	node		741394						
ANR	741440	Symbol	data		741394						
ANR	741441	Symbol	core -> search -> n_kws		741394						
ANR	741442	Symbol	* core		741394						
ANR	741443	Symbol	true		741394						
ANR	741444	Symbol	* node		741394						
ANR	741445	Symbol	* core -> search		741394						
ANR	741446	Symbol	user		741394						
ANR	741447	Symbol	core -> search		741394						
ANR	741448	Symbol	* * core		741394						
ANR	741449	Symbol	node -> i_value		741394						
ANR	741450	Function	cb_io_cache_mode	1800:0:49278:49515							
ANR	741451	FunctionDef	"cb_io_cache_mode (void * user , void * data)"		741450	0					
ANR	741452	CompoundStatement		1800:53:49331:49515	741450	0					
ANR	741453	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1801:1:49334:49361	741450	0	True				
ANR	741454	IdentifierDecl	* core = ( RCore * ) user		741450	0					
ANR	741455	IdentifierDeclType	RCore *		741450	0					
ANR	741456	Identifier	core		741450	1					
ANR	741457	AssignmentExpression	* core = ( RCore * ) user		741450	2		=			
ANR	741458	Identifier	core		741450	0					
ANR	741459	CastExpression	( RCore * ) user		741450	1					
ANR	741460	CastTarget	RCore *		741450	0					
ANR	741461	Identifier	user		741450	1					
ANR	741462	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1802:1:49364:49403	741450	1	True				
ANR	741463	IdentifierDecl	* node = ( RConfigNode * ) data		741450	0					
ANR	741464	IdentifierDeclType	RConfigNode *		741450	0					
ANR	741465	Identifier	node		741450	1					
ANR	741466	AssignmentExpression	* node = ( RConfigNode * ) data		741450	2		=			
ANR	741467	Identifier	node		741450	0					
ANR	741468	CastExpression	( RConfigNode * ) data		741450	1					
ANR	741469	CastTarget	RConfigNode *		741450	0					
ANR	741470	Identifier	data		741450	1					
ANR	741471	IfStatement	if ( node -> i_value )		741450	2					
ANR	741472	Condition	node -> i_value	1803:5:49410:49422	741450	0	True				
ANR	741473	PtrMemberAccess	node -> i_value		741450	0					
ANR	741474	Identifier	node		741450	0					
ANR	741475	Identifier	i_value		741450	1					
ANR	741476	CompoundStatement		4:20:93:93	741450	1					
ANR	741477	ExpressionStatement	core -> io -> cachemode = true	1804:2:49429:49455	741450	0	True				
ANR	741478	AssignmentExpression	core -> io -> cachemode = true		741450	0		=			
ANR	741479	PtrMemberAccess	core -> io -> cachemode		741450	0					
ANR	741480	PtrMemberAccess	core -> io		741450	0					
ANR	741481	Identifier	core		741450	0					
ANR	741482	Identifier	io		741450	1					
ANR	741483	Identifier	cachemode		741450	1					
ANR	741484	Identifier	true		741450	1					
ANR	741485	ElseStatement	else		741450	0					
ANR	741486	CompoundStatement		6:8:133:133	741450	0					
ANR	741487	ExpressionStatement	core -> io -> cachemode = false	1806:2:49469:49496	741450	0	True				
ANR	741488	AssignmentExpression	core -> io -> cachemode = false		741450	0		=			
ANR	741489	PtrMemberAccess	core -> io -> cachemode		741450	0					
ANR	741490	PtrMemberAccess	core -> io		741450	0					
ANR	741491	Identifier	core		741450	0					
ANR	741492	Identifier	io		741450	1					
ANR	741493	Identifier	cachemode		741450	1					
ANR	741494	Identifier	false		741450	1					
ANR	741495	ReturnStatement	return true ;	1808:1:49502:49513	741450	3	True				
ANR	741496	Identifier	true		741450	0					
ANR	741497	ReturnType	static bool		741450	1					
ANR	741498	Identifier	cb_io_cache_mode		741450	2					
ANR	741499	ParameterList	"void * user , void * data"		741450	3					
ANR	741500	Parameter	void * user	1800:29:49307:49316	741450	0	True				
ANR	741501	ParameterType	void *		741450	0					
ANR	741502	Identifier	user		741450	1					
ANR	741503	Parameter	void * data	1800:41:49319:49328	741450	1	True				
ANR	741504	ParameterType	void *		741450	0					
ANR	741505	Identifier	data		741450	1					
ANR	741506	CFGEntryNode	ENTRY		741450		True				
ANR	741507	CFGExitNode	EXIT		741450		True				
ANR	741508	Symbol	data		741450						
ANR	741509	Symbol	* core		741450						
ANR	741510	Symbol	false		741450						
ANR	741511	Symbol	node -> i_value		741450						
ANR	741512	Symbol	core		741450						
ANR	741513	Symbol	node		741450						
ANR	741514	Symbol	* core -> io		741450						
ANR	741515	Symbol	core -> io -> cachemode		741450						
ANR	741516	Symbol	core -> io		741450						
ANR	741517	Symbol	true		741450						
ANR	741518	Symbol	* node		741450						
ANR	741519	Symbol	user		741450						
ANR	741520	Symbol	* * core		741450						
ANR	741521	Function	cb_io_cache_read	1811:0:49518:49759							
ANR	741522	FunctionDef	"cb_io_cache_read (void * user , void * data)"		741521	0					
ANR	741523	CompoundStatement		1811:53:49571:49759	741521	0					
ANR	741524	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1812:1:49574:49601	741521	0	True				
ANR	741525	IdentifierDecl	* core = ( RCore * ) user		741521	0					
ANR	741526	IdentifierDeclType	RCore *		741521	0					
ANR	741527	Identifier	core		741521	1					
ANR	741528	AssignmentExpression	* core = ( RCore * ) user		741521	2		=			
ANR	741529	Identifier	core		741521	0					
ANR	741530	CastExpression	( RCore * ) user		741521	1					
ANR	741531	CastTarget	RCore *		741521	0					
ANR	741532	Identifier	user		741521	1					
ANR	741533	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1813:1:49604:49643	741521	1	True				
ANR	741534	IdentifierDecl	* node = ( RConfigNode * ) data		741521	0					
ANR	741535	IdentifierDeclType	RConfigNode *		741521	0					
ANR	741536	Identifier	node		741521	1					
ANR	741537	AssignmentExpression	* node = ( RConfigNode * ) data		741521	2		=			
ANR	741538	Identifier	node		741521	0					
ANR	741539	CastExpression	( RConfigNode * ) data		741521	1					
ANR	741540	CastTarget	RConfigNode *		741521	0					
ANR	741541	Identifier	data		741521	1					
ANR	741542	IfStatement	if ( node -> i_value )		741521	2					
ANR	741543	Condition	node -> i_value	1814:5:49650:49662	741521	0	True				
ANR	741544	PtrMemberAccess	node -> i_value		741521	0					
ANR	741545	Identifier	node		741521	0					
ANR	741546	Identifier	i_value		741521	1					
ANR	741547	CompoundStatement		4:20:93:93	741521	1					
ANR	741548	ExpressionStatement	core -> io -> cached |= R_PERM_R	1815:2:49669:49697	741521	0	True				
ANR	741549	AssignmentExpression	core -> io -> cached |= R_PERM_R		741521	0		|=			
ANR	741550	PtrMemberAccess	core -> io -> cached		741521	0					
ANR	741551	PtrMemberAccess	core -> io		741521	0					
ANR	741552	Identifier	core		741521	0					
ANR	741553	Identifier	io		741521	1					
ANR	741554	Identifier	cached		741521	1					
ANR	741555	Identifier	R_PERM_R		741521	1					
ANR	741556	ElseStatement	else		741521	0					
ANR	741557	CompoundStatement		6:8:135:135	741521	0					
ANR	741558	ExpressionStatement	core -> io -> cached &= ~R_PERM_R	1817:2:49711:49740	741521	0	True				
ANR	741559	AssignmentExpression	core -> io -> cached &= ~R_PERM_R		741521	0		&=			
ANR	741560	PtrMemberAccess	core -> io -> cached		741521	0					
ANR	741561	PtrMemberAccess	core -> io		741521	0					
ANR	741562	Identifier	core		741521	0					
ANR	741563	Identifier	io		741521	1					
ANR	741564	Identifier	cached		741521	1					
ANR	741565	Identifier	~R_PERM_R		741521	1					
ANR	741566	ReturnStatement	return true ;	1819:1:49746:49757	741521	3	True				
ANR	741567	Identifier	true		741521	0					
ANR	741568	ReturnType	static bool		741521	1					
ANR	741569	Identifier	cb_io_cache_read		741521	2					
ANR	741570	ParameterList	"void * user , void * data"		741521	3					
ANR	741571	Parameter	void * user	1811:29:49547:49556	741521	0	True				
ANR	741572	ParameterType	void *		741521	0					
ANR	741573	Identifier	user		741521	1					
ANR	741574	Parameter	void * data	1811:41:49559:49568	741521	1	True				
ANR	741575	ParameterType	void *		741521	0					
ANR	741576	Identifier	data		741521	1					
ANR	741577	CFGEntryNode	ENTRY		741521		True				
ANR	741578	CFGExitNode	EXIT		741521		True				
ANR	741579	Symbol	data		741521						
ANR	741580	Symbol	* core		741521						
ANR	741581	Symbol	node -> i_value		741521						
ANR	741582	Symbol	core		741521						
ANR	741583	Symbol	node		741521						
ANR	741584	Symbol	* core -> io		741521						
ANR	741585	Symbol	core -> io		741521						
ANR	741586	Symbol	R_PERM_R		741521						
ANR	741587	Symbol	true		741521						
ANR	741588	Symbol	* node		741521						
ANR	741589	Symbol	~R_PERM_R		741521						
ANR	741590	Symbol	user		741521						
ANR	741591	Symbol	core -> io -> cached		741521						
ANR	741592	Symbol	* * core		741521						
ANR	741593	Function	cb_io_cache_write	1822:0:49762:50004							
ANR	741594	FunctionDef	"cb_io_cache_write (void * user , void * data)"		741593	0					
ANR	741595	CompoundStatement		1822:54:49816:50004	741593	0					
ANR	741596	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1823:1:49819:49846	741593	0	True				
ANR	741597	IdentifierDecl	* core = ( RCore * ) user		741593	0					
ANR	741598	IdentifierDeclType	RCore *		741593	0					
ANR	741599	Identifier	core		741593	1					
ANR	741600	AssignmentExpression	* core = ( RCore * ) user		741593	2		=			
ANR	741601	Identifier	core		741593	0					
ANR	741602	CastExpression	( RCore * ) user		741593	1					
ANR	741603	CastTarget	RCore *		741593	0					
ANR	741604	Identifier	user		741593	1					
ANR	741605	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1824:1:49849:49888	741593	1	True				
ANR	741606	IdentifierDecl	* node = ( RConfigNode * ) data		741593	0					
ANR	741607	IdentifierDeclType	RConfigNode *		741593	0					
ANR	741608	Identifier	node		741593	1					
ANR	741609	AssignmentExpression	* node = ( RConfigNode * ) data		741593	2		=			
ANR	741610	Identifier	node		741593	0					
ANR	741611	CastExpression	( RConfigNode * ) data		741593	1					
ANR	741612	CastTarget	RConfigNode *		741593	0					
ANR	741613	Identifier	data		741593	1					
ANR	741614	IfStatement	if ( node -> i_value )		741593	2					
ANR	741615	Condition	node -> i_value	1825:5:49895:49907	741593	0	True				
ANR	741616	PtrMemberAccess	node -> i_value		741593	0					
ANR	741617	Identifier	node		741593	0					
ANR	741618	Identifier	i_value		741593	1					
ANR	741619	CompoundStatement		4:20:93:93	741593	1					
ANR	741620	ExpressionStatement	core -> io -> cached |= R_PERM_W	1826:2:49914:49942	741593	0	True				
ANR	741621	AssignmentExpression	core -> io -> cached |= R_PERM_W		741593	0		|=			
ANR	741622	PtrMemberAccess	core -> io -> cached		741593	0					
ANR	741623	PtrMemberAccess	core -> io		741593	0					
ANR	741624	Identifier	core		741593	0					
ANR	741625	Identifier	io		741593	1					
ANR	741626	Identifier	cached		741593	1					
ANR	741627	Identifier	R_PERM_W		741593	1					
ANR	741628	ElseStatement	else		741593	0					
ANR	741629	CompoundStatement		6:8:135:135	741593	0					
ANR	741630	ExpressionStatement	core -> io -> cached &= ~R_PERM_W	1828:2:49956:49985	741593	0	True				
ANR	741631	AssignmentExpression	core -> io -> cached &= ~R_PERM_W		741593	0		&=			
ANR	741632	PtrMemberAccess	core -> io -> cached		741593	0					
ANR	741633	PtrMemberAccess	core -> io		741593	0					
ANR	741634	Identifier	core		741593	0					
ANR	741635	Identifier	io		741593	1					
ANR	741636	Identifier	cached		741593	1					
ANR	741637	Identifier	~R_PERM_W		741593	1					
ANR	741638	ReturnStatement	return true ;	1830:1:49991:50002	741593	3	True				
ANR	741639	Identifier	true		741593	0					
ANR	741640	ReturnType	static bool		741593	1					
ANR	741641	Identifier	cb_io_cache_write		741593	2					
ANR	741642	ParameterList	"void * user , void * data"		741593	3					
ANR	741643	Parameter	void * user	1822:30:49792:49801	741593	0	True				
ANR	741644	ParameterType	void *		741593	0					
ANR	741645	Identifier	user		741593	1					
ANR	741646	Parameter	void * data	1822:42:49804:49813	741593	1	True				
ANR	741647	ParameterType	void *		741593	0					
ANR	741648	Identifier	data		741593	1					
ANR	741649	CFGEntryNode	ENTRY		741593		True				
ANR	741650	CFGExitNode	EXIT		741593		True				
ANR	741651	Symbol	data		741593						
ANR	741652	Symbol	~R_PERM_W		741593						
ANR	741653	Symbol	* core		741593						
ANR	741654	Symbol	node -> i_value		741593						
ANR	741655	Symbol	core		741593						
ANR	741656	Symbol	node		741593						
ANR	741657	Symbol	* core -> io		741593						
ANR	741658	Symbol	R_PERM_W		741593						
ANR	741659	Symbol	core -> io		741593						
ANR	741660	Symbol	true		741593						
ANR	741661	Symbol	* node		741593						
ANR	741662	Symbol	user		741593						
ANR	741663	Symbol	core -> io -> cached		741593						
ANR	741664	Symbol	* * core		741593						
ANR	741665	Function	cb_io_cache	1833:0:50007:50148							
ANR	741666	FunctionDef	"cb_io_cache (void * user , void * data)"		741665	0					
ANR	741667	CompoundStatement		1833:48:50055:50148	741665	0					
ANR	741668	ExpressionStatement	"( void ) cb_io_cache_read ( user , data )"	1834:1:50058:50093	741665	0	True				
ANR	741669	CastExpression	"( void ) cb_io_cache_read ( user , data )"		741665	0					
ANR	741670	CastTarget	void		741665	0					
ANR	741671	CallExpression	"cb_io_cache_read ( user , data )"		741665	1					
ANR	741672	Callee	cb_io_cache_read		741665	0					
ANR	741673	Identifier	cb_io_cache_read		741665	0					
ANR	741674	ArgumentList	user		741665	1					
ANR	741675	Argument	user		741665	0					
ANR	741676	Identifier	user		741665	0					
ANR	741677	Argument	data		741665	1					
ANR	741678	Identifier	data		741665	0					
ANR	741679	ExpressionStatement	"( void ) cb_io_cache_write ( user , data )"	1835:1:50096:50132	741665	1	True				
ANR	741680	CastExpression	"( void ) cb_io_cache_write ( user , data )"		741665	0					
ANR	741681	CastTarget	void		741665	0					
ANR	741682	CallExpression	"cb_io_cache_write ( user , data )"		741665	1					
ANR	741683	Callee	cb_io_cache_write		741665	0					
ANR	741684	Identifier	cb_io_cache_write		741665	0					
ANR	741685	ArgumentList	user		741665	1					
ANR	741686	Argument	user		741665	0					
ANR	741687	Identifier	user		741665	0					
ANR	741688	Argument	data		741665	1					
ANR	741689	Identifier	data		741665	0					
ANR	741690	ReturnStatement	return true ;	1836:1:50135:50146	741665	2	True				
ANR	741691	Identifier	true		741665	0					
ANR	741692	ReturnType	static bool		741665	1					
ANR	741693	Identifier	cb_io_cache		741665	2					
ANR	741694	ParameterList	"void * user , void * data"		741665	3					
ANR	741695	Parameter	void * user	1833:24:50031:50040	741665	0	True				
ANR	741696	ParameterType	void *		741665	0					
ANR	741697	Identifier	user		741665	1					
ANR	741698	Parameter	void * data	1833:36:50043:50052	741665	1	True				
ANR	741699	ParameterType	void *		741665	0					
ANR	741700	Identifier	data		741665	1					
ANR	741701	CFGEntryNode	ENTRY		741665		True				
ANR	741702	CFGExitNode	EXIT		741665		True				
ANR	741703	Symbol	data		741665						
ANR	741704	Symbol	true		741665						
ANR	741705	Symbol	user		741665						
ANR	741706	Function	cb_ioaslr	1839:0:50151:50364							
ANR	741707	FunctionDef	"cb_ioaslr (void * user , void * data)"		741706	0					
ANR	741708	CompoundStatement		1839:46:50197:50364	741706	0					
ANR	741709	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1840:1:50200:50228	741706	0	True				
ANR	741710	IdentifierDecl	* core = ( RCore * ) user		741706	0					
ANR	741711	IdentifierDeclType	RCore *		741706	0					
ANR	741712	Identifier	core		741706	1					
ANR	741713	AssignmentExpression	* core = ( RCore * ) user		741706	2		=			
ANR	741714	Identifier	core		741706	0					
ANR	741715	CastExpression	( RCore * ) user		741706	1					
ANR	741716	CastTarget	RCore *		741706	0					
ANR	741717	Identifier	user		741706	1					
ANR	741718	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1841:1:50231:50271	741706	1	True				
ANR	741719	IdentifierDecl	* node = ( RConfigNode * ) data		741706	0					
ANR	741720	IdentifierDeclType	RConfigNode *		741706	0					
ANR	741721	Identifier	node		741706	1					
ANR	741722	AssignmentExpression	* node = ( RConfigNode * ) data		741706	2		=			
ANR	741723	Identifier	node		741706	0					
ANR	741724	CastExpression	( RConfigNode * ) data		741706	1					
ANR	741725	CastTarget	RConfigNode *		741706	0					
ANR	741726	Identifier	data		741706	1					
ANR	741727	IfStatement	if ( node -> i_value != core -> io -> aslr )		741706	2					
ANR	741728	Condition	node -> i_value != core -> io -> aslr	1842:5:50278:50308	741706	0	True				
ANR	741729	EqualityExpression	node -> i_value != core -> io -> aslr		741706	0		!=			
ANR	741730	PtrMemberAccess	node -> i_value		741706	0					
ANR	741731	Identifier	node		741706	0					
ANR	741732	Identifier	i_value		741706	1					
ANR	741733	PtrMemberAccess	core -> io -> aslr		741706	1					
ANR	741734	PtrMemberAccess	core -> io		741706	0					
ANR	741735	Identifier	core		741706	0					
ANR	741736	Identifier	io		741706	1					
ANR	741737	Identifier	aslr		741706	1					
ANR	741738	CompoundStatement		4:38:113:113	741706	1					
ANR	741739	ExpressionStatement	core -> io -> aslr = node -> i_value	1843:2:50315:50345	741706	0	True				
ANR	741740	AssignmentExpression	core -> io -> aslr = node -> i_value		741706	0		=			
ANR	741741	PtrMemberAccess	core -> io -> aslr		741706	0					
ANR	741742	PtrMemberAccess	core -> io		741706	0					
ANR	741743	Identifier	core		741706	0					
ANR	741744	Identifier	io		741706	1					
ANR	741745	Identifier	aslr		741706	1					
ANR	741746	PtrMemberAccess	node -> i_value		741706	1					
ANR	741747	Identifier	node		741706	0					
ANR	741748	Identifier	i_value		741706	1					
ANR	741749	ReturnStatement	return true ;	1845:1:50351:50362	741706	3	True				
ANR	741750	Identifier	true		741706	0					
ANR	741751	ReturnType	static bool		741706	1					
ANR	741752	Identifier	cb_ioaslr		741706	2					
ANR	741753	ParameterList	"void * user , void * data"		741706	3					
ANR	741754	Parameter	void * user	1839:22:50173:50182	741706	0	True				
ANR	741755	ParameterType	void *		741706	0					
ANR	741756	Identifier	user		741706	1					
ANR	741757	Parameter	void * data	1839:34:50185:50194	741706	1	True				
ANR	741758	ParameterType	void *		741706	0					
ANR	741759	Identifier	data		741706	1					
ANR	741760	CFGEntryNode	ENTRY		741706		True				
ANR	741761	CFGExitNode	EXIT		741706		True				
ANR	741762	Symbol	core -> io -> aslr		741706						
ANR	741763	Symbol	core		741706						
ANR	741764	Symbol	node		741706						
ANR	741765	Symbol	* core -> io		741706						
ANR	741766	Symbol	data		741706						
ANR	741767	Symbol	core -> io		741706						
ANR	741768	Symbol	* core		741706						
ANR	741769	Symbol	true		741706						
ANR	741770	Symbol	* node		741706						
ANR	741771	Symbol	user		741706						
ANR	741772	Symbol	* * core		741706						
ANR	741773	Symbol	node -> i_value		741706						
ANR	741774	Function	cb_io_pava	1848:0:50367:50650							
ANR	741775	FunctionDef	"cb_io_pava (void * user , void * data)"		741774	0					
ANR	741776	CompoundStatement		1848:47:50414:50650	741774	0					
ANR	741777	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1849:1:50417:50445	741774	0	True				
ANR	741778	IdentifierDecl	* core = ( RCore * ) user		741774	0					
ANR	741779	IdentifierDeclType	RCore *		741774	0					
ANR	741780	Identifier	core		741774	1					
ANR	741781	AssignmentExpression	* core = ( RCore * ) user		741774	2		=			
ANR	741782	Identifier	core		741774	0					
ANR	741783	CastExpression	( RCore * ) user		741774	1					
ANR	741784	CastTarget	RCore *		741774	0					
ANR	741785	Identifier	user		741774	1					
ANR	741786	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1850:1:50448:50488	741774	1	True				
ANR	741787	IdentifierDecl	* node = ( RConfigNode * ) data		741774	0					
ANR	741788	IdentifierDeclType	RConfigNode *		741774	0					
ANR	741789	Identifier	node		741774	1					
ANR	741790	AssignmentExpression	* node = ( RConfigNode * ) data		741774	2		=			
ANR	741791	Identifier	node		741774	0					
ANR	741792	CastExpression	( RConfigNode * ) data		741774	1					
ANR	741793	CastTarget	RConfigNode *		741774	0					
ANR	741794	Identifier	data		741774	1					
ANR	741795	ExpressionStatement	core -> print -> pava = node -> i_value	1851:1:50491:50524	741774	2	True				
ANR	741796	AssignmentExpression	core -> print -> pava = node -> i_value		741774	0		=			
ANR	741797	PtrMemberAccess	core -> print -> pava		741774	0					
ANR	741798	PtrMemberAccess	core -> print		741774	0					
ANR	741799	Identifier	core		741774	0					
ANR	741800	Identifier	print		741774	1					
ANR	741801	Identifier	pava		741774	1					
ANR	741802	PtrMemberAccess	node -> i_value		741774	1					
ANR	741803	Identifier	node		741774	0					
ANR	741804	Identifier	i_value		741774	1					
ANR	741805	IfStatement	if ( node -> i_value && core -> io -> va )		741774	3					
ANR	741806	Condition	node -> i_value && core -> io -> va	1852:5:50531:50559	741774	0	True				
ANR	741807	AndExpression	node -> i_value && core -> io -> va		741774	0		&&			
ANR	741808	PtrMemberAccess	node -> i_value		741774	0					
ANR	741809	Identifier	node		741774	0					
ANR	741810	Identifier	i_value		741774	1					
ANR	741811	PtrMemberAccess	core -> io -> va		741774	1					
ANR	741812	PtrMemberAccess	core -> io		741774	0					
ANR	741813	Identifier	core		741774	0					
ANR	741814	Identifier	io		741774	1					
ANR	741815	Identifier	va		741774	1					
ANR	741816	CompoundStatement		5:36:147:147	741774	1					
ANR	741817	ExpressionStatement	"eprintf ( ""WARNING: You may probably want to disable io.va too\\n"" )"	1853:2:50566:50631	741774	0	True				
ANR	741818	CallExpression	"eprintf ( ""WARNING: You may probably want to disable io.va too\\n"" )"		741774	0					
ANR	741819	Callee	eprintf		741774	0					
ANR	741820	Identifier	eprintf		741774	0					
ANR	741821	ArgumentList	"""WARNING: You may probably want to disable io.va too\\n"""		741774	1					
ANR	741822	Argument	"""WARNING: You may probably want to disable io.va too\\n"""		741774	0					
ANR	741823	PrimaryExpression	"""WARNING: You may probably want to disable io.va too\\n"""		741774	0					
ANR	741824	ReturnStatement	return true ;	1855:1:50637:50648	741774	4	True				
ANR	741825	Identifier	true		741774	0					
ANR	741826	ReturnType	static bool		741774	1					
ANR	741827	Identifier	cb_io_pava		741774	2					
ANR	741828	ParameterList	"void * user , void * data"		741774	3					
ANR	741829	Parameter	void * user	1848:23:50390:50399	741774	0	True				
ANR	741830	ParameterType	void *		741774	0					
ANR	741831	Identifier	user		741774	1					
ANR	741832	Parameter	void * data	1848:35:50402:50411	741774	1	True				
ANR	741833	ParameterType	void *		741774	0					
ANR	741834	Identifier	data		741774	1					
ANR	741835	CFGEntryNode	ENTRY		741774		True				
ANR	741836	CFGExitNode	EXIT		741774		True				
ANR	741837	Symbol	core -> print -> pava		741774						
ANR	741838	Symbol	data		741774						
ANR	741839	Symbol	* core		741774						
ANR	741840	Symbol	node -> i_value		741774						
ANR	741841	Symbol	core -> io -> va		741774						
ANR	741842	Symbol	core		741774						
ANR	741843	Symbol	node		741774						
ANR	741844	Symbol	* core -> io		741774						
ANR	741845	Symbol	* core -> print		741774						
ANR	741846	Symbol	core -> io		741774						
ANR	741847	Symbol	true		741774						
ANR	741848	Symbol	* node		741774						
ANR	741849	Symbol	core -> print		741774						
ANR	741850	Symbol	user		741774						
ANR	741851	Symbol	* * core		741774						
ANR	741852	Function	cb_iova	1858:0:50653:51120							
ANR	741853	FunctionDef	"cb_iova (void * user , void * data)"		741852	0					
ANR	741854	CompoundStatement		1858:44:50697:51120	741852	0					
ANR	741855	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1859:1:50700:50728	741852	0	True				
ANR	741856	IdentifierDecl	* core = ( RCore * ) user		741852	0					
ANR	741857	IdentifierDeclType	RCore *		741852	0					
ANR	741858	Identifier	core		741852	1					
ANR	741859	AssignmentExpression	* core = ( RCore * ) user		741852	2		=			
ANR	741860	Identifier	core		741852	0					
ANR	741861	CastExpression	( RCore * ) user		741852	1					
ANR	741862	CastTarget	RCore *		741852	0					
ANR	741863	Identifier	user		741852	1					
ANR	741864	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1860:1:50731:50771	741852	1	True				
ANR	741865	IdentifierDecl	* node = ( RConfigNode * ) data		741852	0					
ANR	741866	IdentifierDeclType	RConfigNode *		741852	0					
ANR	741867	Identifier	node		741852	1					
ANR	741868	AssignmentExpression	* node = ( RConfigNode * ) data		741852	2		=			
ANR	741869	Identifier	node		741852	0					
ANR	741870	CastExpression	( RConfigNode * ) data		741852	1					
ANR	741871	CastTarget	RConfigNode *		741852	0					
ANR	741872	Identifier	data		741852	1					
ANR	741873	IfStatement	if ( node -> i_value != core -> io -> va )		741852	2					
ANR	741874	Condition	node -> i_value != core -> io -> va	1861:5:50778:50806	741852	0	True				
ANR	741875	EqualityExpression	node -> i_value != core -> io -> va		741852	0		!=			
ANR	741876	PtrMemberAccess	node -> i_value		741852	0					
ANR	741877	Identifier	node		741852	0					
ANR	741878	Identifier	i_value		741852	1					
ANR	741879	PtrMemberAccess	core -> io -> va		741852	1					
ANR	741880	PtrMemberAccess	core -> io		741852	0					
ANR	741881	Identifier	core		741852	0					
ANR	741882	Identifier	io		741852	1					
ANR	741883	Identifier	va		741852	1					
ANR	741884	CompoundStatement		4:36:111:111	741852	1					
ANR	741885	ExpressionStatement	core -> io -> va = node -> i_value	1862:2:50813:50841	741852	0	True				
ANR	741886	AssignmentExpression	core -> io -> va = node -> i_value		741852	0		=			
ANR	741887	PtrMemberAccess	core -> io -> va		741852	0					
ANR	741888	PtrMemberAccess	core -> io		741852	0					
ANR	741889	Identifier	core		741852	0					
ANR	741890	Identifier	io		741852	1					
ANR	741891	Identifier	va		741852	1					
ANR	741892	PtrMemberAccess	node -> i_value		741852	1					
ANR	741893	Identifier	node		741852	0					
ANR	741894	Identifier	i_value		741852	1					
ANR	741895	IfStatement	if ( core -> io -> desc )		741852	1					
ANR	741896	Condition	core -> io -> desc	1864:6:50910:50923	741852	0	True				
ANR	741897	PtrMemberAccess	core -> io -> desc		741852	0					
ANR	741898	PtrMemberAccess	core -> io		741852	0					
ANR	741899	Identifier	core		741852	0					
ANR	741900	Identifier	io		741852	1					
ANR	741901	Identifier	desc		741852	1					
ANR	741902	CompoundStatement		7:22:228:228	741852	1					
ANR	741903	ExpressionStatement	r_core_block_read ( core )	1865:3:50931:50955	741852	0	True				
ANR	741904	CallExpression	r_core_block_read ( core )		741852	0					
ANR	741905	Callee	r_core_block_read		741852	0					
ANR	741906	Identifier	r_core_block_read		741852	0					
ANR	741907	ArgumentList	core		741852	1					
ANR	741908	Argument	core		741852	0					
ANR	741909	Identifier	core		741852	0					
ANR	741910	IfStatement	if ( r_list_length ( r_bin_get_sections ( core -> bin ) ) > 0 )		741852	2					
ANR	741911	Condition	r_list_length ( r_bin_get_sections ( core -> bin ) ) > 0	1869:6:51007:51056	741852	0	True				
ANR	741912	RelationalExpression	r_list_length ( r_bin_get_sections ( core -> bin ) ) > 0		741852	0		>			
ANR	741913	CallExpression	r_list_length ( r_bin_get_sections ( core -> bin ) )		741852	0					
ANR	741914	Callee	r_list_length		741852	0					
ANR	741915	Identifier	r_list_length		741852	0					
ANR	741916	ArgumentList	r_bin_get_sections ( core -> bin )		741852	1					
ANR	741917	Argument	r_bin_get_sections ( core -> bin )		741852	0					
ANR	741918	CallExpression	r_bin_get_sections ( core -> bin )		741852	0					
ANR	741919	Callee	r_bin_get_sections		741852	0					
ANR	741920	Identifier	r_bin_get_sections		741852	0					
ANR	741921	ArgumentList	core -> bin		741852	1					
ANR	741922	Argument	core -> bin		741852	0					
ANR	741923	PtrMemberAccess	core -> bin		741852	0					
ANR	741924	Identifier	core		741852	0					
ANR	741925	Identifier	bin		741852	1					
ANR	741926	PrimaryExpression	0		741852	1					
ANR	741927	CompoundStatement		12:58:361:361	741852	1					
ANR	741928	ExpressionStatement	"r_core_cmd0 ( core , "".ia*"" )"	1870:3:51064:51090	741852	0	True				
ANR	741929	CallExpression	"r_core_cmd0 ( core , "".ia*"" )"		741852	0					
ANR	741930	Callee	r_core_cmd0		741852	0					
ANR	741931	Identifier	r_core_cmd0		741852	0					
ANR	741932	ArgumentList	core		741852	1					
ANR	741933	Argument	core		741852	0					
ANR	741934	Identifier	core		741852	0					
ANR	741935	Argument	""".ia*"""		741852	1					
ANR	741936	PrimaryExpression	""".ia*"""		741852	0					
ANR	741937	ReturnStatement	return true ;	1874:1:51107:51118	741852	3	True				
ANR	741938	Identifier	true		741852	0					
ANR	741939	ReturnType	static bool		741852	1					
ANR	741940	Identifier	cb_iova		741852	2					
ANR	741941	ParameterList	"void * user , void * data"		741852	3					
ANR	741942	Parameter	void * user	1858:20:50673:50682	741852	0	True				
ANR	741943	ParameterType	void *		741852	0					
ANR	741944	Identifier	user		741852	1					
ANR	741945	Parameter	void * data	1858:32:50685:50694	741852	1	True				
ANR	741946	ParameterType	void *		741852	0					
ANR	741947	Identifier	data		741852	1					
ANR	741948	CFGEntryNode	ENTRY		741852		True				
ANR	741949	CFGExitNode	EXIT		741852		True				
ANR	741950	Symbol	data		741852						
ANR	741951	Symbol	* core		741852						
ANR	741952	Symbol	core -> io -> desc		741852						
ANR	741953	Symbol	core -> io -> va		741852						
ANR	741954	Symbol	node -> i_value		741852						
ANR	741955	Symbol	core		741852						
ANR	741956	Symbol	node		741852						
ANR	741957	Symbol	* core -> io		741852						
ANR	741958	Symbol	core -> io		741852						
ANR	741959	Symbol	true		741852						
ANR	741960	Symbol	* node		741852						
ANR	741961	Symbol	user		741852						
ANR	741962	Symbol	core -> bin		741852						
ANR	741963	Symbol	* * core		741852						
ANR	741964	Symbol	r_bin_get_sections		741852						
ANR	741965	Symbol	r_list_length		741852						
ANR	741966	Function	cb_ioff	1877:0:51123:51288							
ANR	741967	FunctionDef	"cb_ioff (void * user , void * data)"		741966	0					
ANR	741968	CompoundStatement		1877:44:51167:51288	741966	0					
ANR	741969	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1878:1:51170:51198	741966	0	True				
ANR	741970	IdentifierDecl	* core = ( RCore * ) user		741966	0					
ANR	741971	IdentifierDeclType	RCore *		741966	0					
ANR	741972	Identifier	core		741966	1					
ANR	741973	AssignmentExpression	* core = ( RCore * ) user		741966	2		=			
ANR	741974	Identifier	core		741966	0					
ANR	741975	CastExpression	( RCore * ) user		741966	1					
ANR	741976	CastTarget	RCore *		741966	0					
ANR	741977	Identifier	user		741966	1					
ANR	741978	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1879:1:51201:51241	741966	1	True				
ANR	741979	IdentifierDecl	* node = ( RConfigNode * ) data		741966	0					
ANR	741980	IdentifierDeclType	RConfigNode *		741966	0					
ANR	741981	Identifier	node		741966	1					
ANR	741982	AssignmentExpression	* node = ( RConfigNode * ) data		741966	2		=			
ANR	741983	Identifier	node		741966	0					
ANR	741984	CastExpression	( RConfigNode * ) data		741966	1					
ANR	741985	CastTarget	RConfigNode *		741966	0					
ANR	741986	Identifier	data		741966	1					
ANR	741987	ExpressionStatement	core -> io -> ff = node -> i_value	1880:1:51244:51272	741966	2	True				
ANR	741988	AssignmentExpression	core -> io -> ff = node -> i_value		741966	0		=			
ANR	741989	PtrMemberAccess	core -> io -> ff		741966	0					
ANR	741990	PtrMemberAccess	core -> io		741966	0					
ANR	741991	Identifier	core		741966	0					
ANR	741992	Identifier	io		741966	1					
ANR	741993	Identifier	ff		741966	1					
ANR	741994	PtrMemberAccess	node -> i_value		741966	1					
ANR	741995	Identifier	node		741966	0					
ANR	741996	Identifier	i_value		741966	1					
ANR	741997	ReturnStatement	return true ;	1881:1:51275:51286	741966	3	True				
ANR	741998	Identifier	true		741966	0					
ANR	741999	ReturnType	static bool		741966	1					
ANR	742000	Identifier	cb_ioff		741966	2					
ANR	742001	ParameterList	"void * user , void * data"		741966	3					
ANR	742002	Parameter	void * user	1877:20:51143:51152	741966	0	True				
ANR	742003	ParameterType	void *		741966	0					
ANR	742004	Identifier	user		741966	1					
ANR	742005	Parameter	void * data	1877:32:51155:51164	741966	1	True				
ANR	742006	ParameterType	void *		741966	0					
ANR	742007	Identifier	data		741966	1					
ANR	742008	CFGEntryNode	ENTRY		741966		True				
ANR	742009	CFGExitNode	EXIT		741966		True				
ANR	742010	Symbol	core		741966						
ANR	742011	Symbol	node		741966						
ANR	742012	Symbol	* core -> io		741966						
ANR	742013	Symbol	core -> io -> ff		741966						
ANR	742014	Symbol	data		741966						
ANR	742015	Symbol	core -> io		741966						
ANR	742016	Symbol	* core		741966						
ANR	742017	Symbol	true		741966						
ANR	742018	Symbol	* node		741966						
ANR	742019	Symbol	user		741966						
ANR	742020	Symbol	* * core		741966						
ANR	742021	Symbol	node -> i_value		741966						
ANR	742022	Function	cb_io_oxff	1884:0:51291:51461							
ANR	742023	FunctionDef	"cb_io_oxff (void * user , void * data)"		742022	0					
ANR	742024	CompoundStatement		1884:47:51338:51461	742022	0					
ANR	742025	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1885:1:51341:51369	742022	0	True				
ANR	742026	IdentifierDecl	* core = ( RCore * ) user		742022	0					
ANR	742027	IdentifierDeclType	RCore *		742022	0					
ANR	742028	Identifier	core		742022	1					
ANR	742029	AssignmentExpression	* core = ( RCore * ) user		742022	2		=			
ANR	742030	Identifier	core		742022	0					
ANR	742031	CastExpression	( RCore * ) user		742022	1					
ANR	742032	CastTarget	RCore *		742022	0					
ANR	742033	Identifier	user		742022	1					
ANR	742034	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1886:1:51372:51412	742022	1	True				
ANR	742035	IdentifierDecl	* node = ( RConfigNode * ) data		742022	0					
ANR	742036	IdentifierDeclType	RConfigNode *		742022	0					
ANR	742037	Identifier	node		742022	1					
ANR	742038	AssignmentExpression	* node = ( RConfigNode * ) data		742022	2		=			
ANR	742039	Identifier	node		742022	0					
ANR	742040	CastExpression	( RConfigNode * ) data		742022	1					
ANR	742041	CastTarget	RConfigNode *		742022	0					
ANR	742042	Identifier	data		742022	1					
ANR	742043	ExpressionStatement	core -> io -> Oxff = node -> i_value	1887:1:51415:51445	742022	2	True				
ANR	742044	AssignmentExpression	core -> io -> Oxff = node -> i_value		742022	0		=			
ANR	742045	PtrMemberAccess	core -> io -> Oxff		742022	0					
ANR	742046	PtrMemberAccess	core -> io		742022	0					
ANR	742047	Identifier	core		742022	0					
ANR	742048	Identifier	io		742022	1					
ANR	742049	Identifier	Oxff		742022	1					
ANR	742050	PtrMemberAccess	node -> i_value		742022	1					
ANR	742051	Identifier	node		742022	0					
ANR	742052	Identifier	i_value		742022	1					
ANR	742053	ReturnStatement	return true ;	1888:1:51448:51459	742022	3	True				
ANR	742054	Identifier	true		742022	0					
ANR	742055	ReturnType	static bool		742022	1					
ANR	742056	Identifier	cb_io_oxff		742022	2					
ANR	742057	ParameterList	"void * user , void * data"		742022	3					
ANR	742058	Parameter	void * user	1884:23:51314:51323	742022	0	True				
ANR	742059	ParameterType	void *		742022	0					
ANR	742060	Identifier	user		742022	1					
ANR	742061	Parameter	void * data	1884:35:51326:51335	742022	1	True				
ANR	742062	ParameterType	void *		742022	0					
ANR	742063	Identifier	data		742022	1					
ANR	742064	CFGEntryNode	ENTRY		742022		True				
ANR	742065	CFGExitNode	EXIT		742022		True				
ANR	742066	Symbol	core		742022						
ANR	742067	Symbol	node		742022						
ANR	742068	Symbol	* core -> io		742022						
ANR	742069	Symbol	data		742022						
ANR	742070	Symbol	core -> io		742022						
ANR	742071	Symbol	* core		742022						
ANR	742072	Symbol	true		742022						
ANR	742073	Symbol	* node		742022						
ANR	742074	Symbol	user		742022						
ANR	742075	Symbol	* * core		742022						
ANR	742076	Symbol	core -> io -> Oxff		742022						
ANR	742077	Symbol	node -> i_value		742022						
ANR	742078	Function	cb_filepath	1891:0:51464:51940							
ANR	742079	FunctionDef	"cb_filepath (void * user , void * data)"		742078	0					
ANR	742080	CompoundStatement		1891:48:51512:51940	742078	0					
ANR	742081	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1892:1:51515:51543	742078	0	True				
ANR	742082	IdentifierDecl	* core = ( RCore * ) user		742078	0					
ANR	742083	IdentifierDeclType	RCore *		742078	0					
ANR	742084	Identifier	core		742078	1					
ANR	742085	AssignmentExpression	* core = ( RCore * ) user		742078	2		=			
ANR	742086	Identifier	core		742078	0					
ANR	742087	CastExpression	( RCore * ) user		742078	1					
ANR	742088	CastTarget	RCore *		742078	0					
ANR	742089	Identifier	user		742078	1					
ANR	742090	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1893:1:51546:51586	742078	1	True				
ANR	742091	IdentifierDecl	* node = ( RConfigNode * ) data		742078	0					
ANR	742092	IdentifierDeclType	RConfigNode *		742078	0					
ANR	742093	Identifier	node		742078	1					
ANR	742094	AssignmentExpression	* node = ( RConfigNode * ) data		742078	2		=			
ANR	742095	Identifier	node		742078	0					
ANR	742096	CastExpression	( RConfigNode * ) data		742078	1					
ANR	742097	CastTarget	RConfigNode *		742078	0					
ANR	742098	Identifier	data		742078	1					
ANR	742099	IdentifierDeclStatement	"char * pikaboo = strstr ( node -> value , ""://"" ) ;"	1894:1:51589:51632	742078	2	True				
ANR	742100	IdentifierDecl	"* pikaboo = strstr ( node -> value , ""://"" )"		742078	0					
ANR	742101	IdentifierDeclType	char *		742078	0					
ANR	742102	Identifier	pikaboo		742078	1					
ANR	742103	AssignmentExpression	"* pikaboo = strstr ( node -> value , ""://"" )"		742078	2		=			
ANR	742104	Identifier	pikaboo		742078	0					
ANR	742105	CallExpression	"strstr ( node -> value , ""://"" )"		742078	1					
ANR	742106	Callee	strstr		742078	0					
ANR	742107	Identifier	strstr		742078	0					
ANR	742108	ArgumentList	node -> value		742078	1					
ANR	742109	Argument	node -> value		742078	0					
ANR	742110	PtrMemberAccess	node -> value		742078	0					
ANR	742111	Identifier	node		742078	0					
ANR	742112	Identifier	value		742078	1					
ANR	742113	Argument	"""://"""		742078	1					
ANR	742114	PrimaryExpression	"""://"""		742078	0					
ANR	742115	IfStatement	if ( pikaboo )		742078	3					
ANR	742116	Condition	pikaboo	1895:5:51639:51645	742078	0	True				
ANR	742117	Identifier	pikaboo		742078	0					
ANR	742118	CompoundStatement		5:14:135:135	742078	1					
ANR	742119	IfStatement	if ( pikaboo [ 3 ] == '/' )		742078	0					
ANR	742120	Condition	pikaboo [ 3 ] == '/'	1896:6:51656:51672	742078	0	True				
ANR	742121	EqualityExpression	pikaboo [ 3 ] == '/'		742078	0		==			
ANR	742122	ArrayIndexing	pikaboo [ 3 ]		742078	0					
ANR	742123	Identifier	pikaboo		742078	0					
ANR	742124	PrimaryExpression	3		742078	1					
ANR	742125	PrimaryExpression	'/'		742078	1					
ANR	742126	CompoundStatement		8:3:229:255	742078	1					
ANR	742127	ExpressionStatement	"r_config_set ( core -> config , ""file.lastpath"" , node -> value )"	1897:3:51680:51737	742078	0	True				
ANR	742128	CallExpression	"r_config_set ( core -> config , ""file.lastpath"" , node -> value )"		742078	0					
ANR	742129	Callee	r_config_set		742078	0					
ANR	742130	Identifier	r_config_set		742078	0					
ANR	742131	ArgumentList	core -> config		742078	1					
ANR	742132	Argument	core -> config		742078	0					
ANR	742133	PtrMemberAccess	core -> config		742078	0					
ANR	742134	Identifier	core		742078	0					
ANR	742135	Identifier	config		742078	1					
ANR	742136	Argument	"""file.lastpath"""		742078	1					
ANR	742137	PrimaryExpression	"""file.lastpath"""		742078	0					
ANR	742138	Argument	node -> value		742078	2					
ANR	742139	PtrMemberAccess	node -> value		742078	0					
ANR	742140	Identifier	node		742078	0					
ANR	742141	Identifier	value		742078	1					
ANR	742142	IdentifierDeclStatement	char * ovalue = node -> value ;	1898:3:51742:51768	742078	1	True				
ANR	742143	IdentifierDecl	* ovalue = node -> value		742078	0					
ANR	742144	IdentifierDeclType	char *		742078	0					
ANR	742145	Identifier	ovalue		742078	1					
ANR	742146	AssignmentExpression	* ovalue = node -> value		742078	2		=			
ANR	742147	Identifier	ovalue		742078	0					
ANR	742148	PtrMemberAccess	node -> value		742078	1					
ANR	742149	Identifier	node		742078	0					
ANR	742150	Identifier	value		742078	1					
ANR	742151	ExpressionStatement	node -> value = strdup ( pikaboo + 3 )	1899:3:51773:51807	742078	2	True				
ANR	742152	AssignmentExpression	node -> value = strdup ( pikaboo + 3 )		742078	0		=			
ANR	742153	PtrMemberAccess	node -> value		742078	0					
ANR	742154	Identifier	node		742078	0					
ANR	742155	Identifier	value		742078	1					
ANR	742156	CallExpression	strdup ( pikaboo + 3 )		742078	1					
ANR	742157	Callee	strdup		742078	0					
ANR	742158	Identifier	strdup		742078	0					
ANR	742159	ArgumentList	pikaboo + 3		742078	1					
ANR	742160	Argument	pikaboo + 3		742078	0					
ANR	742161	AdditiveExpression	pikaboo + 3		742078	0		+			
ANR	742162	Identifier	pikaboo		742078	0					
ANR	742163	PrimaryExpression	3		742078	1					
ANR	742164	ExpressionStatement	free ( ovalue )	1900:3:51812:51825	742078	3	True				
ANR	742165	CallExpression	free ( ovalue )		742078	0					
ANR	742166	Callee	free		742078	0					
ANR	742167	Identifier	free		742078	0					
ANR	742168	ArgumentList	ovalue		742078	1					
ANR	742169	Argument	ovalue		742078	0					
ANR	742170	Identifier	ovalue		742078	0					
ANR	742171	ReturnStatement	return true ;	1901:3:51830:51841	742078	4	True				
ANR	742172	Identifier	true		742078	0					
ANR	742173	ReturnStatement	return false ;	1903:2:51849:51861	742078	1	True				
ANR	742174	Identifier	false		742078	0					
ANR	742175	ExpressionStatement	"r_config_set ( core -> config , ""file.lastpath"" , node -> value )"	1905:1:51867:51924	742078	4	True				
ANR	742176	CallExpression	"r_config_set ( core -> config , ""file.lastpath"" , node -> value )"		742078	0					
ANR	742177	Callee	r_config_set		742078	0					
ANR	742178	Identifier	r_config_set		742078	0					
ANR	742179	ArgumentList	core -> config		742078	1					
ANR	742180	Argument	core -> config		742078	0					
ANR	742181	PtrMemberAccess	core -> config		742078	0					
ANR	742182	Identifier	core		742078	0					
ANR	742183	Identifier	config		742078	1					
ANR	742184	Argument	"""file.lastpath"""		742078	1					
ANR	742185	PrimaryExpression	"""file.lastpath"""		742078	0					
ANR	742186	Argument	node -> value		742078	2					
ANR	742187	PtrMemberAccess	node -> value		742078	0					
ANR	742188	Identifier	node		742078	0					
ANR	742189	Identifier	value		742078	1					
ANR	742190	ReturnStatement	return true ;	1906:1:51927:51938	742078	5	True				
ANR	742191	Identifier	true		742078	0					
ANR	742192	ReturnType	static bool		742078	1					
ANR	742193	Identifier	cb_filepath		742078	2					
ANR	742194	ParameterList	"void * user , void * data"		742078	3					
ANR	742195	Parameter	void * user	1891:24:51488:51497	742078	0	True				
ANR	742196	ParameterType	void *		742078	0					
ANR	742197	Identifier	user		742078	1					
ANR	742198	Parameter	void * data	1891:36:51500:51509	742078	1	True				
ANR	742199	ParameterType	void *		742078	0					
ANR	742200	Identifier	data		742078	1					
ANR	742201	CFGEntryNode	ENTRY		742078		True				
ANR	742202	CFGExitNode	EXIT		742078		True				
ANR	742203	Symbol	core -> config		742078						
ANR	742204	Symbol	data		742078						
ANR	742205	Symbol	* pikaboo		742078						
ANR	742206	Symbol	* core		742078						
ANR	742207	Symbol	false		742078						
ANR	742208	Symbol	pikaboo		742078						
ANR	742209	Symbol	node -> value		742078						
ANR	742210	Symbol	core		742078						
ANR	742211	Symbol	node		742078						
ANR	742212	Symbol	ovalue		742078						
ANR	742213	Symbol	strstr		742078						
ANR	742214	Symbol	true		742078						
ANR	742215	Symbol	* node		742078						
ANR	742216	Symbol	strdup		742078						
ANR	742217	Symbol	user		742078						
ANR	742218	Function	cb_ioautofd	1909:0:51943:52116							
ANR	742219	FunctionDef	"cb_ioautofd (void * user , void * data)"		742218	0					
ANR	742220	CompoundStatement		1909:48:51991:52116	742218	0					
ANR	742221	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1910:1:51994:52022	742218	0	True				
ANR	742222	IdentifierDecl	* core = ( RCore * ) user		742218	0					
ANR	742223	IdentifierDeclType	RCore *		742218	0					
ANR	742224	Identifier	core		742218	1					
ANR	742225	AssignmentExpression	* core = ( RCore * ) user		742218	2		=			
ANR	742226	Identifier	core		742218	0					
ANR	742227	CastExpression	( RCore * ) user		742218	1					
ANR	742228	CastTarget	RCore *		742218	0					
ANR	742229	Identifier	user		742218	1					
ANR	742230	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1911:1:52025:52065	742218	1	True				
ANR	742231	IdentifierDecl	* node = ( RConfigNode * ) data		742218	0					
ANR	742232	IdentifierDeclType	RConfigNode *		742218	0					
ANR	742233	Identifier	node		742218	1					
ANR	742234	AssignmentExpression	* node = ( RConfigNode * ) data		742218	2		=			
ANR	742235	Identifier	node		742218	0					
ANR	742236	CastExpression	( RConfigNode * ) data		742218	1					
ANR	742237	CastTarget	RConfigNode *		742218	0					
ANR	742238	Identifier	data		742218	1					
ANR	742239	ExpressionStatement	core -> io -> autofd = node -> i_value	1912:1:52068:52100	742218	2	True				
ANR	742240	AssignmentExpression	core -> io -> autofd = node -> i_value		742218	0		=			
ANR	742241	PtrMemberAccess	core -> io -> autofd		742218	0					
ANR	742242	PtrMemberAccess	core -> io		742218	0					
ANR	742243	Identifier	core		742218	0					
ANR	742244	Identifier	io		742218	1					
ANR	742245	Identifier	autofd		742218	1					
ANR	742246	PtrMemberAccess	node -> i_value		742218	1					
ANR	742247	Identifier	node		742218	0					
ANR	742248	Identifier	i_value		742218	1					
ANR	742249	ReturnStatement	return true ;	1913:1:52103:52114	742218	3	True				
ANR	742250	Identifier	true		742218	0					
ANR	742251	ReturnType	static bool		742218	1					
ANR	742252	Identifier	cb_ioautofd		742218	2					
ANR	742253	ParameterList	"void * user , void * data"		742218	3					
ANR	742254	Parameter	void * user	1909:24:51967:51976	742218	0	True				
ANR	742255	ParameterType	void *		742218	0					
ANR	742256	Identifier	user		742218	1					
ANR	742257	Parameter	void * data	1909:36:51979:51988	742218	1	True				
ANR	742258	ParameterType	void *		742218	0					
ANR	742259	Identifier	data		742218	1					
ANR	742260	CFGEntryNode	ENTRY		742218		True				
ANR	742261	CFGExitNode	EXIT		742218		True				
ANR	742262	Symbol	core -> io -> autofd		742218						
ANR	742263	Symbol	core		742218						
ANR	742264	Symbol	node		742218						
ANR	742265	Symbol	* core -> io		742218						
ANR	742266	Symbol	data		742218						
ANR	742267	Symbol	core -> io		742218						
ANR	742268	Symbol	* core		742218						
ANR	742269	Symbol	true		742218						
ANR	742270	Symbol	* node		742218						
ANR	742271	Symbol	user		742218						
ANR	742272	Symbol	* * core		742218						
ANR	742273	Symbol	node -> i_value		742218						
ANR	742274	Function	cb_scr_color_grep	1916:0:52119:52347							
ANR	742275	FunctionDef	"cb_scr_color_grep (void * user , void * data)"		742274	0					
ANR	742276	CompoundStatement		1916:54:52173:52347	742274	0					
ANR	742277	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1917:1:52176:52204	742274	0	True				
ANR	742278	IdentifierDecl	* core = ( RCore * ) user		742274	0					
ANR	742279	IdentifierDeclType	RCore *		742274	0					
ANR	742280	Identifier	core		742274	1					
ANR	742281	AssignmentExpression	* core = ( RCore * ) user		742274	2		=			
ANR	742282	Identifier	core		742274	0					
ANR	742283	CastExpression	( RCore * ) user		742274	1					
ANR	742284	CastTarget	RCore *		742274	0					
ANR	742285	Identifier	user		742274	1					
ANR	742286	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1918:1:52207:52247	742274	1	True				
ANR	742287	IdentifierDecl	* node = ( RConfigNode * ) data		742274	0					
ANR	742288	IdentifierDeclType	RConfigNode *		742274	0					
ANR	742289	Identifier	node		742274	1					
ANR	742290	AssignmentExpression	* node = ( RConfigNode * ) data		742274	2		=			
ANR	742291	Identifier	node		742274	0					
ANR	742292	CastExpression	( RConfigNode * ) data		742274	1					
ANR	742293	CastTarget	RConfigNode *		742274	0					
ANR	742294	Identifier	data		742274	1					
ANR	742295	ExpressionStatement	core -> cons -> grep_color = node -> i_value	1921:1:52293:52331	742274	2	True				
ANR	742296	AssignmentExpression	core -> cons -> grep_color = node -> i_value		742274	0		=			
ANR	742297	PtrMemberAccess	core -> cons -> grep_color		742274	0					
ANR	742298	PtrMemberAccess	core -> cons		742274	0					
ANR	742299	Identifier	core		742274	0					
ANR	742300	Identifier	cons		742274	1					
ANR	742301	Identifier	grep_color		742274	1					
ANR	742302	PtrMemberAccess	node -> i_value		742274	1					
ANR	742303	Identifier	node		742274	0					
ANR	742304	Identifier	i_value		742274	1					
ANR	742305	ReturnStatement	return true ;	1922:1:52334:52345	742274	3	True				
ANR	742306	Identifier	true		742274	0					
ANR	742307	ReturnType	static bool		742274	1					
ANR	742308	Identifier	cb_scr_color_grep		742274	2					
ANR	742309	ParameterList	"void * user , void * data"		742274	3					
ANR	742310	Parameter	void * user	1916:30:52149:52158	742274	0	True				
ANR	742311	ParameterType	void *		742274	0					
ANR	742312	Identifier	user		742274	1					
ANR	742313	Parameter	void * data	1916:42:52161:52170	742274	1	True				
ANR	742314	ParameterType	void *		742274	0					
ANR	742315	Identifier	data		742274	1					
ANR	742316	CFGEntryNode	ENTRY		742274		True				
ANR	742317	CFGExitNode	EXIT		742274		True				
ANR	742318	Symbol	core		742274						
ANR	742319	Symbol	node		742274						
ANR	742320	Symbol	core -> cons		742274						
ANR	742321	Symbol	data		742274						
ANR	742322	Symbol	* core -> cons		742274						
ANR	742323	Symbol	core -> cons -> grep_color		742274						
ANR	742324	Symbol	* core		742274						
ANR	742325	Symbol	true		742274						
ANR	742326	Symbol	* node		742274						
ANR	742327	Symbol	user		742274						
ANR	742328	Symbol	* * core		742274						
ANR	742329	Symbol	node -> i_value		742274						
ANR	742330	Function	cb_scr_color_grep_highlight	1925:0:52350:52549							
ANR	742331	FunctionDef	"cb_scr_color_grep_highlight (void * user , void * data)"		742330	0					
ANR	742332	CompoundStatement		1925:64:52414:52549	742330	0					
ANR	742333	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1926:1:52417:52445	742330	0	True				
ANR	742334	IdentifierDecl	* core = ( RCore * ) user		742330	0					
ANR	742335	IdentifierDeclType	RCore *		742330	0					
ANR	742336	Identifier	core		742330	1					
ANR	742337	AssignmentExpression	* core = ( RCore * ) user		742330	2		=			
ANR	742338	Identifier	core		742330	0					
ANR	742339	CastExpression	( RCore * ) user		742330	1					
ANR	742340	CastTarget	RCore *		742330	0					
ANR	742341	Identifier	user		742330	1					
ANR	742342	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1927:1:52448:52488	742330	1	True				
ANR	742343	IdentifierDecl	* node = ( RConfigNode * ) data		742330	0					
ANR	742344	IdentifierDeclType	RConfigNode *		742330	0					
ANR	742345	Identifier	node		742330	1					
ANR	742346	AssignmentExpression	* node = ( RConfigNode * ) data		742330	2		=			
ANR	742347	Identifier	node		742330	0					
ANR	742348	CastExpression	( RConfigNode * ) data		742330	1					
ANR	742349	CastTarget	RConfigNode *		742330	0					
ANR	742350	Identifier	data		742330	1					
ANR	742351	ExpressionStatement	core -> cons -> grep_highlight = node -> i_value	1928:1:52491:52533	742330	2	True				
ANR	742352	AssignmentExpression	core -> cons -> grep_highlight = node -> i_value		742330	0		=			
ANR	742353	PtrMemberAccess	core -> cons -> grep_highlight		742330	0					
ANR	742354	PtrMemberAccess	core -> cons		742330	0					
ANR	742355	Identifier	core		742330	0					
ANR	742356	Identifier	cons		742330	1					
ANR	742357	Identifier	grep_highlight		742330	1					
ANR	742358	PtrMemberAccess	node -> i_value		742330	1					
ANR	742359	Identifier	node		742330	0					
ANR	742360	Identifier	i_value		742330	1					
ANR	742361	ReturnStatement	return true ;	1929:1:52536:52547	742330	3	True				
ANR	742362	Identifier	true		742330	0					
ANR	742363	ReturnType	static bool		742330	1					
ANR	742364	Identifier	cb_scr_color_grep_highlight		742330	2					
ANR	742365	ParameterList	"void * user , void * data"		742330	3					
ANR	742366	Parameter	void * user	1925:40:52390:52399	742330	0	True				
ANR	742367	ParameterType	void *		742330	0					
ANR	742368	Identifier	user		742330	1					
ANR	742369	Parameter	void * data	1925:52:52402:52411	742330	1	True				
ANR	742370	ParameterType	void *		742330	0					
ANR	742371	Identifier	data		742330	1					
ANR	742372	CFGEntryNode	ENTRY		742330		True				
ANR	742373	CFGExitNode	EXIT		742330		True				
ANR	742374	Symbol	core		742330						
ANR	742375	Symbol	node		742330						
ANR	742376	Symbol	core -> cons		742330						
ANR	742377	Symbol	data		742330						
ANR	742378	Symbol	core -> cons -> grep_highlight		742330						
ANR	742379	Symbol	* core -> cons		742330						
ANR	742380	Symbol	* core		742330						
ANR	742381	Symbol	true		742330						
ANR	742382	Symbol	* node		742330						
ANR	742383	Symbol	user		742330						
ANR	742384	Symbol	* * core		742330						
ANR	742385	Symbol	node -> i_value		742330						
ANR	742386	Function	cb_pager	1932:0:52552:52951							
ANR	742387	FunctionDef	"cb_pager (void * user , void * data)"		742386	0					
ANR	742388	CompoundStatement		1932:45:52597:52951	742386	0					
ANR	742389	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1933:1:52600:52628	742386	0	True				
ANR	742390	IdentifierDecl	* core = ( RCore * ) user		742386	0					
ANR	742391	IdentifierDeclType	RCore *		742386	0					
ANR	742392	Identifier	core		742386	1					
ANR	742393	AssignmentExpression	* core = ( RCore * ) user		742386	2		=			
ANR	742394	Identifier	core		742386	0					
ANR	742395	CastExpression	( RCore * ) user		742386	1					
ANR	742396	CastTarget	RCore *		742386	0					
ANR	742397	Identifier	user		742386	1					
ANR	742398	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1934:1:52631:52671	742386	1	True				
ANR	742399	IdentifierDecl	* node = ( RConfigNode * ) data		742386	0					
ANR	742400	IdentifierDeclType	RConfigNode *		742386	0					
ANR	742401	Identifier	node		742386	1					
ANR	742402	AssignmentExpression	* node = ( RConfigNode * ) data		742386	2		=			
ANR	742403	Identifier	node		742386	0					
ANR	742404	CastExpression	( RConfigNode * ) data		742386	1					
ANR	742405	CastTarget	RConfigNode *		742386	0					
ANR	742406	Identifier	data		742386	1					
ANR	742407	IfStatement	"if ( ! strcmp ( node -> value , ""?"" ) )"		742386	2					
ANR	742408	Condition	"! strcmp ( node -> value , ""?"" )"	1935:5:52678:52703	742386	0	True				
ANR	742409	UnaryOperationExpression	"! strcmp ( node -> value , ""?"" )"		742386	0					
ANR	742410	UnaryOperator	!		742386	0					
ANR	742411	CallExpression	"strcmp ( node -> value , ""?"" )"		742386	1					
ANR	742412	Callee	strcmp		742386	0					
ANR	742413	Identifier	strcmp		742386	0					
ANR	742414	ArgumentList	node -> value		742386	1					
ANR	742415	Argument	node -> value		742386	0					
ANR	742416	PtrMemberAccess	node -> value		742386	0					
ANR	742417	Identifier	node		742386	0					
ANR	742418	Identifier	value		742386	1					
ANR	742419	Argument	"""?"""		742386	1					
ANR	742420	PrimaryExpression	"""?"""		742386	0					
ANR	742421	CompoundStatement		4:33:108:108	742386	1					
ANR	742422	ExpressionStatement	"eprintf ( ""Usage: scr.pager must be '..' for internal less, or the path to a program in $PATH"" )"	1936:2:52710:52804	742386	0	True				
ANR	742423	CallExpression	"eprintf ( ""Usage: scr.pager must be '..' for internal less, or the path to a program in $PATH"" )"		742386	0					
ANR	742424	Callee	eprintf		742386	0					
ANR	742425	Identifier	eprintf		742386	0					
ANR	742426	ArgumentList	"""Usage: scr.pager must be '..' for internal less, or the path to a program in $PATH"""		742386	1					
ANR	742427	Argument	"""Usage: scr.pager must be '..' for internal less, or the path to a program in $PATH"""		742386	0					
ANR	742428	PrimaryExpression	"""Usage: scr.pager must be '..' for internal less, or the path to a program in $PATH"""		742386	0					
ANR	742429	ReturnStatement	return false ;	1937:2:52808:52820	742386	1	True				
ANR	742430	Identifier	false		742386	0					
ANR	742431	ExpressionStatement	free ( core -> cons -> pager )	1940:1:52868:52892	742386	3	True				
ANR	742432	CallExpression	free ( core -> cons -> pager )		742386	0					
ANR	742433	Callee	free		742386	0					
ANR	742434	Identifier	free		742386	0					
ANR	742435	ArgumentList	core -> cons -> pager		742386	1					
ANR	742436	Argument	core -> cons -> pager		742386	0					
ANR	742437	PtrMemberAccess	core -> cons -> pager		742386	0					
ANR	742438	PtrMemberAccess	core -> cons		742386	0					
ANR	742439	Identifier	core		742386	0					
ANR	742440	Identifier	cons		742386	1					
ANR	742441	Identifier	pager		742386	1					
ANR	742442	ExpressionStatement	core -> cons -> pager = strdup ( node -> value )	1941:1:52895:52935	742386	4	True				
ANR	742443	AssignmentExpression	core -> cons -> pager = strdup ( node -> value )		742386	0		=			
ANR	742444	PtrMemberAccess	core -> cons -> pager		742386	0					
ANR	742445	PtrMemberAccess	core -> cons		742386	0					
ANR	742446	Identifier	core		742386	0					
ANR	742447	Identifier	cons		742386	1					
ANR	742448	Identifier	pager		742386	1					
ANR	742449	CallExpression	strdup ( node -> value )		742386	1					
ANR	742450	Callee	strdup		742386	0					
ANR	742451	Identifier	strdup		742386	0					
ANR	742452	ArgumentList	node -> value		742386	1					
ANR	742453	Argument	node -> value		742386	0					
ANR	742454	PtrMemberAccess	node -> value		742386	0					
ANR	742455	Identifier	node		742386	0					
ANR	742456	Identifier	value		742386	1					
ANR	742457	ReturnStatement	return true ;	1942:1:52938:52949	742386	5	True				
ANR	742458	Identifier	true		742386	0					
ANR	742459	ReturnType	static bool		742386	1					
ANR	742460	Identifier	cb_pager		742386	2					
ANR	742461	ParameterList	"void * user , void * data"		742386	3					
ANR	742462	Parameter	void * user	1932:21:52573:52582	742386	0	True				
ANR	742463	ParameterType	void *		742386	0					
ANR	742464	Identifier	user		742386	1					
ANR	742465	Parameter	void * data	1932:33:52585:52594	742386	1	True				
ANR	742466	ParameterType	void *		742386	0					
ANR	742467	Identifier	data		742386	1					
ANR	742468	CFGEntryNode	ENTRY		742386		True				
ANR	742469	CFGExitNode	EXIT		742386		True				
ANR	742470	Symbol	strcmp		742386						
ANR	742471	Symbol	data		742386						
ANR	742472	Symbol	* core -> cons		742386						
ANR	742473	Symbol	false		742386						
ANR	742474	Symbol	* core		742386						
ANR	742475	Symbol	node -> value		742386						
ANR	742476	Symbol	core		742386						
ANR	742477	Symbol	node		742386						
ANR	742478	Symbol	core -> cons		742386						
ANR	742479	Symbol	true		742386						
ANR	742480	Symbol	* node		742386						
ANR	742481	Symbol	strdup		742386						
ANR	742482	Symbol	user		742386						
ANR	742483	Symbol	* * core		742386						
ANR	742484	Symbol	core -> cons -> pager		742386						
ANR	742485	Function	cb_breaklines	1945:0:52954:53114							
ANR	742486	FunctionDef	"cb_breaklines (void * user , void * data)"		742485	0					
ANR	742487	CompoundStatement		1945:50:53004:53114	742485	0					
ANR	742488	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1946:1:53007:53047	742485	0	True				
ANR	742489	IdentifierDecl	* node = ( RConfigNode * ) data		742485	0					
ANR	742490	IdentifierDeclType	RConfigNode *		742485	0					
ANR	742491	Identifier	node		742485	1					
ANR	742492	AssignmentExpression	* node = ( RConfigNode * ) data		742485	2		=			
ANR	742493	Identifier	node		742485	0					
ANR	742494	CastExpression	( RConfigNode * ) data		742485	1					
ANR	742495	CastTarget	RConfigNode *		742485	0					
ANR	742496	Identifier	data		742485	1					
ANR	742497	ExpressionStatement	r_cons_singleton ( ) -> break_lines = node -> i_value	1947:1:53050:53098	742485	1	True				
ANR	742498	AssignmentExpression	r_cons_singleton ( ) -> break_lines = node -> i_value		742485	0		=			
ANR	742499	PtrMemberAccess	r_cons_singleton ( ) -> break_lines		742485	0					
ANR	742500	CallExpression	r_cons_singleton ( )		742485	0					
ANR	742501	Callee	r_cons_singleton		742485	0					
ANR	742502	Identifier	r_cons_singleton		742485	0					
ANR	742503	ArgumentList			742485	1					
ANR	742504	Identifier	break_lines		742485	1					
ANR	742505	PtrMemberAccess	node -> i_value		742485	1					
ANR	742506	Identifier	node		742485	0					
ANR	742507	Identifier	i_value		742485	1					
ANR	742508	ReturnStatement	return true ;	1948:1:53101:53112	742485	2	True				
ANR	742509	Identifier	true		742485	0					
ANR	742510	ReturnType	static bool		742485	1					
ANR	742511	Identifier	cb_breaklines		742485	2					
ANR	742512	ParameterList	"void * user , void * data"		742485	3					
ANR	742513	Parameter	void * user	1945:26:52980:52989	742485	0	True				
ANR	742514	ParameterType	void *		742485	0					
ANR	742515	Identifier	user		742485	1					
ANR	742516	Parameter	void * data	1945:38:52992:53001	742485	1	True				
ANR	742517	ParameterType	void *		742485	0					
ANR	742518	Identifier	data		742485	1					
ANR	742519	CFGEntryNode	ENTRY		742485		True				
ANR	742520	CFGExitNode	EXIT		742485		True				
ANR	742521	Symbol	node		742485						
ANR	742522	Symbol	data		742485						
ANR	742523	Symbol	r_cons_singleton ( ) -> break_lines		742485						
ANR	742524	Symbol	true		742485						
ANR	742525	Symbol	r_cons_singleton		742485						
ANR	742526	Symbol	* node		742485						
ANR	742527	Symbol	user		742485						
ANR	742528	Symbol	* r_cons_singleton		742485						
ANR	742529	Symbol	node -> i_value		742485						
ANR	742530	Function	cb_scr_gadgets	1951:0:53117:53293							
ANR	742531	FunctionDef	"cb_scr_gadgets (void * user , void * data)"		742530	0					
ANR	742532	CompoundStatement		1951:51:53168:53293	742530	0					
ANR	742533	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1952:1:53171:53198	742530	0	True				
ANR	742534	IdentifierDecl	* core = ( RCore * ) user		742530	0					
ANR	742535	IdentifierDeclType	RCore *		742530	0					
ANR	742536	Identifier	core		742530	1					
ANR	742537	AssignmentExpression	* core = ( RCore * ) user		742530	2		=			
ANR	742538	Identifier	core		742530	0					
ANR	742539	CastExpression	( RCore * ) user		742530	1					
ANR	742540	CastTarget	RCore *		742530	0					
ANR	742541	Identifier	user		742530	1					
ANR	742542	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1953:1:53201:53241	742530	1	True				
ANR	742543	IdentifierDecl	* node = ( RConfigNode * ) data		742530	0					
ANR	742544	IdentifierDeclType	RConfigNode *		742530	0					
ANR	742545	Identifier	node		742530	1					
ANR	742546	AssignmentExpression	* node = ( RConfigNode * ) data		742530	2		=			
ANR	742547	Identifier	node		742530	0					
ANR	742548	CastExpression	( RConfigNode * ) data		742530	1					
ANR	742549	CastTarget	RConfigNode *		742530	0					
ANR	742550	Identifier	data		742530	1					
ANR	742551	ExpressionStatement	core -> scr_gadgets = node -> i_value	1954:1:53244:53277	742530	2	True				
ANR	742552	AssignmentExpression	core -> scr_gadgets = node -> i_value		742530	0		=			
ANR	742553	PtrMemberAccess	core -> scr_gadgets		742530	0					
ANR	742554	Identifier	core		742530	0					
ANR	742555	Identifier	scr_gadgets		742530	1					
ANR	742556	PtrMemberAccess	node -> i_value		742530	1					
ANR	742557	Identifier	node		742530	0					
ANR	742558	Identifier	i_value		742530	1					
ANR	742559	ReturnStatement	return true ;	1955:1:53280:53291	742530	3	True				
ANR	742560	Identifier	true		742530	0					
ANR	742561	ReturnType	static bool		742530	1					
ANR	742562	Identifier	cb_scr_gadgets		742530	2					
ANR	742563	ParameterList	"void * user , void * data"		742530	3					
ANR	742564	Parameter	void * user	1951:27:53144:53153	742530	0	True				
ANR	742565	ParameterType	void *		742530	0					
ANR	742566	Identifier	user		742530	1					
ANR	742567	Parameter	void * data	1951:39:53156:53165	742530	1	True				
ANR	742568	ParameterType	void *		742530	0					
ANR	742569	Identifier	data		742530	1					
ANR	742570	CFGEntryNode	ENTRY		742530		True				
ANR	742571	CFGExitNode	EXIT		742530		True				
ANR	742572	Symbol	core		742530						
ANR	742573	Symbol	node		742530						
ANR	742574	Symbol	data		742530						
ANR	742575	Symbol	* core		742530						
ANR	742576	Symbol	true		742530						
ANR	742577	Symbol	core -> scr_gadgets		742530						
ANR	742578	Symbol	* node		742530						
ANR	742579	Symbol	user		742530						
ANR	742580	Symbol	node -> i_value		742530						
ANR	742581	Function	cb_fps	1958:0:53296:53441							
ANR	742582	FunctionDef	"cb_fps (void * user , void * data)"		742581	0					
ANR	742583	CompoundStatement		1958:43:53339:53441	742581	0					
ANR	742584	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1959:1:53342:53382	742581	0	True				
ANR	742585	IdentifierDecl	* node = ( RConfigNode * ) data		742581	0					
ANR	742586	IdentifierDeclType	RConfigNode *		742581	0					
ANR	742587	Identifier	node		742581	1					
ANR	742588	AssignmentExpression	* node = ( RConfigNode * ) data		742581	2		=			
ANR	742589	Identifier	node		742581	0					
ANR	742590	CastExpression	( RConfigNode * ) data		742581	1					
ANR	742591	CastTarget	RConfigNode *		742581	0					
ANR	742592	Identifier	data		742581	1					
ANR	742593	ExpressionStatement	r_cons_singleton ( ) -> fps = node -> i_value	1960:1:53385:53425	742581	1	True				
ANR	742594	AssignmentExpression	r_cons_singleton ( ) -> fps = node -> i_value		742581	0		=			
ANR	742595	PtrMemberAccess	r_cons_singleton ( ) -> fps		742581	0					
ANR	742596	CallExpression	r_cons_singleton ( )		742581	0					
ANR	742597	Callee	r_cons_singleton		742581	0					
ANR	742598	Identifier	r_cons_singleton		742581	0					
ANR	742599	ArgumentList			742581	1					
ANR	742600	Identifier	fps		742581	1					
ANR	742601	PtrMemberAccess	node -> i_value		742581	1					
ANR	742602	Identifier	node		742581	0					
ANR	742603	Identifier	i_value		742581	1					
ANR	742604	ReturnStatement	return true ;	1961:1:53428:53439	742581	2	True				
ANR	742605	Identifier	true		742581	0					
ANR	742606	ReturnType	static bool		742581	1					
ANR	742607	Identifier	cb_fps		742581	2					
ANR	742608	ParameterList	"void * user , void * data"		742581	3					
ANR	742609	Parameter	void * user	1958:19:53315:53324	742581	0	True				
ANR	742610	ParameterType	void *		742581	0					
ANR	742611	Identifier	user		742581	1					
ANR	742612	Parameter	void * data	1958:31:53327:53336	742581	1	True				
ANR	742613	ParameterType	void *		742581	0					
ANR	742614	Identifier	data		742581	1					
ANR	742615	CFGEntryNode	ENTRY		742581		True				
ANR	742616	CFGExitNode	EXIT		742581		True				
ANR	742617	Symbol	node		742581						
ANR	742618	Symbol	data		742581						
ANR	742619	Symbol	true		742581						
ANR	742620	Symbol	r_cons_singleton		742581						
ANR	742621	Symbol	* node		742581						
ANR	742622	Symbol	r_cons_singleton ( ) -> fps		742581						
ANR	742623	Symbol	user		742581						
ANR	742624	Symbol	* r_cons_singleton		742581						
ANR	742625	Symbol	node -> i_value		742581						
ANR	742626	Function	cb_scrbreakword	1964:0:53444:53649							
ANR	742627	FunctionDef	"cb_scrbreakword (void * user , void * data)"		742626	0					
ANR	742628	CompoundStatement		1964:52:53496:53649	742626	0					
ANR	742629	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1965:1:53499:53538	742626	0	True				
ANR	742630	IdentifierDecl	* node = ( RConfigNode * ) data		742626	0					
ANR	742631	IdentifierDeclType	RConfigNode *		742626	0					
ANR	742632	Identifier	node		742626	1					
ANR	742633	AssignmentExpression	* node = ( RConfigNode * ) data		742626	2		=			
ANR	742634	Identifier	node		742626	0					
ANR	742635	CastExpression	( RConfigNode * ) data		742626	1					
ANR	742636	CastTarget	RConfigNode *		742626	0					
ANR	742637	Identifier	data		742626	1					
ANR	742638	IfStatement	if ( * node -> value )		742626	1					
ANR	742639	Condition	* node -> value	1966:5:53545:53556	742626	0	True				
ANR	742640	UnaryOperationExpression	* node -> value		742626	0					
ANR	742641	UnaryOperator	*		742626	0					
ANR	742642	PtrMemberAccess	node -> value		742626	1					
ANR	742643	Identifier	node		742626	0					
ANR	742644	Identifier	value		742626	1					
ANR	742645	CompoundStatement		3:19:62:62	742626	1					
ANR	742646	ExpressionStatement	r_cons_breakword ( node -> value )	1967:2:53563:53593	742626	0	True				
ANR	742647	CallExpression	r_cons_breakword ( node -> value )		742626	0					
ANR	742648	Callee	r_cons_breakword		742626	0					
ANR	742649	Identifier	r_cons_breakword		742626	0					
ANR	742650	ArgumentList	node -> value		742626	1					
ANR	742651	Argument	node -> value		742626	0					
ANR	742652	PtrMemberAccess	node -> value		742626	0					
ANR	742653	Identifier	node		742626	0					
ANR	742654	Identifier	value		742626	1					
ANR	742655	ElseStatement	else		742626	0					
ANR	742656	CompoundStatement		5:8:106:106	742626	0					
ANR	742657	ExpressionStatement	r_cons_breakword ( NULL )	1969:2:53607:53630	742626	0	True				
ANR	742658	CallExpression	r_cons_breakword ( NULL )		742626	0					
ANR	742659	Callee	r_cons_breakword		742626	0					
ANR	742660	Identifier	r_cons_breakword		742626	0					
ANR	742661	ArgumentList	NULL		742626	1					
ANR	742662	Argument	NULL		742626	0					
ANR	742663	Identifier	NULL		742626	0					
ANR	742664	ReturnStatement	return true ;	1971:1:53636:53647	742626	2	True				
ANR	742665	Identifier	true		742626	0					
ANR	742666	ReturnType	static bool		742626	1					
ANR	742667	Identifier	cb_scrbreakword		742626	2					
ANR	742668	ParameterList	"void * user , void * data"		742626	3					
ANR	742669	Parameter	void * user	1964:28:53472:53481	742626	0	True				
ANR	742670	ParameterType	void *		742626	0					
ANR	742671	Identifier	user		742626	1					
ANR	742672	Parameter	void * data	1964:40:53484:53493	742626	1	True				
ANR	742673	ParameterType	void *		742626	0					
ANR	742674	Identifier	data		742626	1					
ANR	742675	CFGEntryNode	ENTRY		742626		True				
ANR	742676	CFGExitNode	EXIT		742626		True				
ANR	742677	Symbol	node		742626						
ANR	742678	Symbol	* node -> value		742626						
ANR	742679	Symbol	NULL		742626						
ANR	742680	Symbol	data		742626						
ANR	742681	Symbol	* * node		742626						
ANR	742682	Symbol	true		742626						
ANR	742683	Symbol	* node		742626						
ANR	742684	Symbol	user		742626						
ANR	742685	Symbol	node -> value		742626						
ANR	742686	Function	cb_scrcolumns	1974:0:53652:53881							
ANR	742687	FunctionDef	"cb_scrcolumns (void * user , void * data)"		742686	0					
ANR	742688	CompoundStatement		1974:50:53702:53881	742686	0					
ANR	742689	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1975:1:53705:53744	742686	0	True				
ANR	742690	IdentifierDecl	* node = ( RConfigNode * ) data		742686	0					
ANR	742691	IdentifierDeclType	RConfigNode *		742686	0					
ANR	742692	Identifier	node		742686	1					
ANR	742693	AssignmentExpression	* node = ( RConfigNode * ) data		742686	2		=			
ANR	742694	Identifier	node		742686	0					
ANR	742695	CastExpression	( RConfigNode * ) data		742686	1					
ANR	742696	CastTarget	RConfigNode *		742686	0					
ANR	742697	Identifier	data		742686	1					
ANR	742698	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1976:1:53747:53774	742686	1	True				
ANR	742699	IdentifierDecl	* core = ( RCore * ) user		742686	0					
ANR	742700	IdentifierDeclType	RCore *		742686	0					
ANR	742701	Identifier	core		742686	1					
ANR	742702	AssignmentExpression	* core = ( RCore * ) user		742686	2		=			
ANR	742703	Identifier	core		742686	0					
ANR	742704	CastExpression	( RCore * ) user		742686	1					
ANR	742705	CastTarget	RCore *		742686	0					
ANR	742706	Identifier	user		742686	1					
ANR	742707	IdentifierDeclStatement	int n = atoi ( node -> value ) ;	1977:1:53777:53803	742686	2	True				
ANR	742708	IdentifierDecl	n = atoi ( node -> value )		742686	0					
ANR	742709	IdentifierDeclType	int		742686	0					
ANR	742710	Identifier	n		742686	1					
ANR	742711	AssignmentExpression	n = atoi ( node -> value )		742686	2		=			
ANR	742712	Identifier	n		742686	0					
ANR	742713	CallExpression	atoi ( node -> value )		742686	1					
ANR	742714	Callee	atoi		742686	0					
ANR	742715	Identifier	atoi		742686	0					
ANR	742716	ArgumentList	node -> value		742686	1					
ANR	742717	Argument	node -> value		742686	0					
ANR	742718	PtrMemberAccess	node -> value		742686	0					
ANR	742719	Identifier	node		742686	0					
ANR	742720	Identifier	value		742686	1					
ANR	742721	ExpressionStatement	core -> cons -> force_columns = n	1978:1:53806:53835	742686	3	True				
ANR	742722	AssignmentExpression	core -> cons -> force_columns = n		742686	0		=			
ANR	742723	PtrMemberAccess	core -> cons -> force_columns		742686	0					
ANR	742724	PtrMemberAccess	core -> cons		742686	0					
ANR	742725	Identifier	core		742686	0					
ANR	742726	Identifier	cons		742686	1					
ANR	742727	Identifier	force_columns		742686	1					
ANR	742728	Identifier	n		742686	1					
ANR	742729	ExpressionStatement	core -> dbg -> regcols = n / 20	1979:1:53838:53865	742686	4	True				
ANR	742730	AssignmentExpression	core -> dbg -> regcols = n / 20		742686	0		=			
ANR	742731	PtrMemberAccess	core -> dbg -> regcols		742686	0					
ANR	742732	PtrMemberAccess	core -> dbg		742686	0					
ANR	742733	Identifier	core		742686	0					
ANR	742734	Identifier	dbg		742686	1					
ANR	742735	Identifier	regcols		742686	1					
ANR	742736	MultiplicativeExpression	n / 20		742686	1		/			
ANR	742737	Identifier	n		742686	0					
ANR	742738	PrimaryExpression	20		742686	1					
ANR	742739	ReturnStatement	return true ;	1980:1:53868:53879	742686	5	True				
ANR	742740	Identifier	true		742686	0					
ANR	742741	ReturnType	static bool		742686	1					
ANR	742742	Identifier	cb_scrcolumns		742686	2					
ANR	742743	ParameterList	"void * user , void * data"		742686	3					
ANR	742744	Parameter	void * user	1974:26:53678:53687	742686	0	True				
ANR	742745	ParameterType	void *		742686	0					
ANR	742746	Identifier	user		742686	1					
ANR	742747	Parameter	void * data	1974:38:53690:53699	742686	1	True				
ANR	742748	ParameterType	void *		742686	0					
ANR	742749	Identifier	data		742686	1					
ANR	742750	CFGEntryNode	ENTRY		742686		True				
ANR	742751	CFGExitNode	EXIT		742686		True				
ANR	742752	Symbol	atoi		742686						
ANR	742753	Symbol	core -> cons -> force_columns		742686						
ANR	742754	Symbol	data		742686						
ANR	742755	Symbol	* core -> cons		742686						
ANR	742756	Symbol	* core		742686						
ANR	742757	Symbol	n		742686						
ANR	742758	Symbol	node -> value		742686						
ANR	742759	Symbol	node		742686						
ANR	742760	Symbol	core		742686						
ANR	742761	Symbol	core -> cons		742686						
ANR	742762	Symbol	true		742686						
ANR	742763	Symbol	* node		742686						
ANR	742764	Symbol	user		742686						
ANR	742765	Symbol	* core -> dbg		742686						
ANR	742766	Symbol	* * core		742686						
ANR	742767	Symbol	core -> dbg -> regcols		742686						
ANR	742768	Symbol	core -> dbg		742686						
ANR	742769	Function	cb_scrfgets	1983:0:53884:54094							
ANR	742770	FunctionDef	"cb_scrfgets (void * user , void * data)"		742769	0					
ANR	742771	CompoundStatement		1983:48:53932:54094	742769	0					
ANR	742772	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	1984:1:53935:53963	742769	0	True				
ANR	742773	IdentifierDecl	* core = ( RCore * ) user		742769	0					
ANR	742774	IdentifierDeclType	RCore *		742769	0					
ANR	742775	Identifier	core		742769	1					
ANR	742776	AssignmentExpression	* core = ( RCore * ) user		742769	2		=			
ANR	742777	Identifier	core		742769	0					
ANR	742778	CastExpression	( RCore * ) user		742769	1					
ANR	742779	CastTarget	RCore *		742769	0					
ANR	742780	Identifier	user		742769	1					
ANR	742781	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1985:1:53966:54005	742769	1	True				
ANR	742782	IdentifierDecl	* node = ( RConfigNode * ) data		742769	0					
ANR	742783	IdentifierDeclType	RConfigNode *		742769	0					
ANR	742784	Identifier	node		742769	1					
ANR	742785	AssignmentExpression	* node = ( RConfigNode * ) data		742769	2		=			
ANR	742786	Identifier	node		742769	0					
ANR	742787	CastExpression	( RConfigNode * ) data		742769	1					
ANR	742788	CastTarget	RConfigNode *		742769	0					
ANR	742789	Identifier	data		742769	1					
ANR	742790	ExpressionStatement	core -> cons -> user_fgets = node -> i_value ? NULL : ( void * ) r_core_fgets	1986:1:54008:54078	742769	2	True				
ANR	742791	AssignmentExpression	core -> cons -> user_fgets = node -> i_value ? NULL : ( void * ) r_core_fgets		742769	0		=			
ANR	742792	PtrMemberAccess	core -> cons -> user_fgets		742769	0					
ANR	742793	PtrMemberAccess	core -> cons		742769	0					
ANR	742794	Identifier	core		742769	0					
ANR	742795	Identifier	cons		742769	1					
ANR	742796	Identifier	user_fgets		742769	1					
ANR	742797	ConditionalExpression	node -> i_value ? NULL : ( void * ) r_core_fgets		742769	1					
ANR	742798	Condition	node -> i_value		742769	0					
ANR	742799	PtrMemberAccess	node -> i_value		742769	0					
ANR	742800	Identifier	node		742769	0					
ANR	742801	Identifier	i_value		742769	1					
ANR	742802	Identifier	NULL		742769	1					
ANR	742803	CastExpression	( void * ) r_core_fgets		742769	2					
ANR	742804	CastTarget	void *		742769	0					
ANR	742805	Identifier	r_core_fgets		742769	1					
ANR	742806	ReturnStatement	return true ;	1988:1:54081:54092	742769	3	True				
ANR	742807	Identifier	true		742769	0					
ANR	742808	ReturnType	static bool		742769	1					
ANR	742809	Identifier	cb_scrfgets		742769	2					
ANR	742810	ParameterList	"void * user , void * data"		742769	3					
ANR	742811	Parameter	void * user	1983:24:53908:53917	742769	0	True				
ANR	742812	ParameterType	void *		742769	0					
ANR	742813	Identifier	user		742769	1					
ANR	742814	Parameter	void * data	1983:36:53920:53929	742769	1	True				
ANR	742815	ParameterType	void *		742769	0					
ANR	742816	Identifier	data		742769	1					
ANR	742817	CFGEntryNode	ENTRY		742769		True				
ANR	742818	CFGExitNode	EXIT		742769		True				
ANR	742819	Symbol	r_core_fgets		742769						
ANR	742820	Symbol	NULL		742769						
ANR	742821	Symbol	data		742769						
ANR	742822	Symbol	* core -> cons		742769						
ANR	742823	Symbol	core -> cons -> user_fgets		742769						
ANR	742824	Symbol	* core		742769						
ANR	742825	Symbol	node -> i_value		742769						
ANR	742826	Symbol	core		742769						
ANR	742827	Symbol	node		742769						
ANR	742828	Symbol	core -> cons		742769						
ANR	742829	Symbol	true		742769						
ANR	742830	Symbol	* node		742769						
ANR	742831	Symbol	user		742769						
ANR	742832	Symbol	* * core		742769						
ANR	742833	Function	cb_scrhtml	1991:0:54097:54327							
ANR	742834	FunctionDef	"cb_scrhtml (void * user , void * data)"		742833	0					
ANR	742835	CompoundStatement		1991:47:54144:54327	742833	0					
ANR	742836	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1992:1:54147:54187	742833	0	True				
ANR	742837	IdentifierDecl	* node = ( RConfigNode * ) data		742833	0					
ANR	742838	IdentifierDeclType	RConfigNode *		742833	0					
ANR	742839	Identifier	node		742833	1					
ANR	742840	AssignmentExpression	* node = ( RConfigNode * ) data		742833	2		=			
ANR	742841	Identifier	node		742833	0					
ANR	742842	CastExpression	( RConfigNode * ) data		742833	1					
ANR	742843	CastTarget	RConfigNode *		742833	0					
ANR	742844	Identifier	data		742833	1					
ANR	742845	ExpressionStatement	r_cons_singleton ( ) -> is_html = node -> i_value	1993:1:54190:54234	742833	1	True				
ANR	742846	AssignmentExpression	r_cons_singleton ( ) -> is_html = node -> i_value		742833	0		=			
ANR	742847	PtrMemberAccess	r_cons_singleton ( ) -> is_html		742833	0					
ANR	742848	CallExpression	r_cons_singleton ( )		742833	0					
ANR	742849	Callee	r_cons_singleton		742833	0					
ANR	742850	Identifier	r_cons_singleton		742833	0					
ANR	742851	ArgumentList			742833	1					
ANR	742852	Identifier	is_html		742833	1					
ANR	742853	PtrMemberAccess	node -> i_value		742833	1					
ANR	742854	Identifier	node		742833	0					
ANR	742855	Identifier	i_value		742833	1					
ANR	742856	ReturnStatement	return true ;	1995:1:54314:54325	742833	2	True				
ANR	742857	Identifier	true		742833	0					
ANR	742858	ReturnType	static bool		742833	1					
ANR	742859	Identifier	cb_scrhtml		742833	2					
ANR	742860	ParameterList	"void * user , void * data"		742833	3					
ANR	742861	Parameter	void * user	1991:23:54120:54129	742833	0	True				
ANR	742862	ParameterType	void *		742833	0					
ANR	742863	Identifier	user		742833	1					
ANR	742864	Parameter	void * data	1991:35:54132:54141	742833	1	True				
ANR	742865	ParameterType	void *		742833	0					
ANR	742866	Identifier	data		742833	1					
ANR	742867	CFGEntryNode	ENTRY		742833		True				
ANR	742868	CFGExitNode	EXIT		742833		True				
ANR	742869	Symbol	node		742833						
ANR	742870	Symbol	data		742833						
ANR	742871	Symbol	true		742833						
ANR	742872	Symbol	r_cons_singleton		742833						
ANR	742873	Symbol	* node		742833						
ANR	742874	Symbol	user		742833						
ANR	742875	Symbol	r_cons_singleton ( ) -> is_html		742833						
ANR	742876	Symbol	* r_cons_singleton		742833						
ANR	742877	Symbol	node -> i_value		742833						
ANR	742878	Function	cb_scrhighlight	1998:0:54330:54474							
ANR	742879	FunctionDef	"cb_scrhighlight (void * user , void * data)"		742878	0					
ANR	742880	CompoundStatement		1998:52:54382:54474	742878	0					
ANR	742881	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	1999:1:54385:54425	742878	0	True				
ANR	742882	IdentifierDecl	* node = ( RConfigNode * ) data		742878	0					
ANR	742883	IdentifierDeclType	RConfigNode *		742878	0					
ANR	742884	Identifier	node		742878	1					
ANR	742885	AssignmentExpression	* node = ( RConfigNode * ) data		742878	2		=			
ANR	742886	Identifier	node		742878	0					
ANR	742887	CastExpression	( RConfigNode * ) data		742878	1					
ANR	742888	CastTarget	RConfigNode *		742878	0					
ANR	742889	Identifier	data		742878	1					
ANR	742890	ExpressionStatement	r_cons_highlight ( node -> value )	2000:1:54428:54458	742878	1	True				
ANR	742891	CallExpression	r_cons_highlight ( node -> value )		742878	0					
ANR	742892	Callee	r_cons_highlight		742878	0					
ANR	742893	Identifier	r_cons_highlight		742878	0					
ANR	742894	ArgumentList	node -> value		742878	1					
ANR	742895	Argument	node -> value		742878	0					
ANR	742896	PtrMemberAccess	node -> value		742878	0					
ANR	742897	Identifier	node		742878	0					
ANR	742898	Identifier	value		742878	1					
ANR	742899	ReturnStatement	return true ;	2001:1:54461:54472	742878	2	True				
ANR	742900	Identifier	true		742878	0					
ANR	742901	ReturnType	static bool		742878	1					
ANR	742902	Identifier	cb_scrhighlight		742878	2					
ANR	742903	ParameterList	"void * user , void * data"		742878	3					
ANR	742904	Parameter	void * user	1998:28:54358:54367	742878	0	True				
ANR	742905	ParameterType	void *		742878	0					
ANR	742906	Identifier	user		742878	1					
ANR	742907	Parameter	void * data	1998:40:54370:54379	742878	1	True				
ANR	742908	ParameterType	void *		742878	0					
ANR	742909	Identifier	data		742878	1					
ANR	742910	CFGEntryNode	ENTRY		742878		True				
ANR	742911	CFGExitNode	EXIT		742878		True				
ANR	742912	Symbol	node		742878						
ANR	742913	Symbol	data		742878						
ANR	742914	Symbol	true		742878						
ANR	742915	Symbol	* node		742878						
ANR	742916	Symbol	user		742878						
ANR	742917	Symbol	node -> value		742878						
ANR	742918	Function	scr_ansicon	2005:0:54493:55376							
ANR	742919	FunctionDef	"scr_ansicon (void * user , void * data)"		742918	0					
ANR	742920	CompoundStatement		2005:47:54540:55376	742918	0					
ANR	742921	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2006:1:54543:54583	742918	0	True				
ANR	742922	IdentifierDecl	* node = ( RConfigNode * ) data		742918	0					
ANR	742923	IdentifierDeclType	RConfigNode *		742918	0					
ANR	742924	Identifier	node		742918	1					
ANR	742925	AssignmentExpression	* node = ( RConfigNode * ) data		742918	2		=			
ANR	742926	Identifier	node		742918	0					
ANR	742927	CastExpression	( RConfigNode * ) data		742918	1					
ANR	742928	CastTarget	RConfigNode *		742918	0					
ANR	742929	Identifier	data		742918	1					
ANR	742930	IfStatement	"if ( ! strcmp ( node -> value , ""true"" ) )"		742918	1					
ANR	742931	Condition	"! strcmp ( node -> value , ""true"" )"	2007:5:54590:54618	742918	0	True				
ANR	742932	UnaryOperationExpression	"! strcmp ( node -> value , ""true"" )"		742918	0					
ANR	742933	UnaryOperator	!		742918	0					
ANR	742934	CallExpression	"strcmp ( node -> value , ""true"" )"		742918	1					
ANR	742935	Callee	strcmp		742918	0					
ANR	742936	Identifier	strcmp		742918	0					
ANR	742937	ArgumentList	node -> value		742918	1					
ANR	742938	Argument	node -> value		742918	0					
ANR	742939	PtrMemberAccess	node -> value		742918	0					
ANR	742940	Identifier	node		742918	0					
ANR	742941	Identifier	value		742918	1					
ANR	742942	Argument	"""true"""		742918	1					
ANR	742943	PrimaryExpression	"""true"""		742918	0					
ANR	742944	CompoundStatement		3:36:80:80	742918	1					
ANR	742945	ExpressionStatement	node -> i_value = 1	2008:2:54625:54642	742918	0	True				
ANR	742946	AssignmentExpression	node -> i_value = 1		742918	0		=			
ANR	742947	PtrMemberAccess	node -> i_value		742918	0					
ANR	742948	Identifier	node		742918	0					
ANR	742949	Identifier	i_value		742918	1					
ANR	742950	PrimaryExpression	1		742918	1					
ANR	742951	ExpressionStatement	r_line_singleton ( ) -> ansicon = r_cons_singleton ( ) -> ansicon = node -> i_value	2010:1:54648:54723	742918	2	True				
ANR	742952	AssignmentExpression	r_line_singleton ( ) -> ansicon = r_cons_singleton ( ) -> ansicon = node -> i_value		742918	0		=			
ANR	742953	PtrMemberAccess	r_line_singleton ( ) -> ansicon		742918	0					
ANR	742954	CallExpression	r_line_singleton ( )		742918	0					
ANR	742955	Callee	r_line_singleton		742918	0					
ANR	742956	Identifier	r_line_singleton		742918	0					
ANR	742957	ArgumentList			742918	1					
ANR	742958	Identifier	ansicon		742918	1					
ANR	742959	AssignmentExpression	r_cons_singleton ( ) -> ansicon = node -> i_value		742918	1		=			
ANR	742960	PtrMemberAccess	r_cons_singleton ( ) -> ansicon		742918	0					
ANR	742961	CallExpression	r_cons_singleton ( )		742918	0					
ANR	742962	Callee	r_cons_singleton		742918	0					
ANR	742963	Identifier	r_cons_singleton		742918	0					
ANR	742964	ArgumentList			742918	1					
ANR	742965	Identifier	ansicon		742918	1					
ANR	742966	PtrMemberAccess	node -> i_value		742918	1					
ANR	742967	Identifier	node		742918	0					
ANR	742968	Identifier	i_value		742918	1					
ANR	742969	IdentifierDeclStatement	"HANDLE streams [ ] = { GetStdHandle ( STD_OUTPUT_HANDLE ) , GetStdHandle ( STD_ERROR_HANDLE ) } ;"	2011:1:54726:54814	742918	3	True				
ANR	742970	IdentifierDecl	"streams [ ] = { GetStdHandle ( STD_OUTPUT_HANDLE ) , GetStdHandle ( STD_ERROR_HANDLE ) }"		742918	0					
ANR	742971	IdentifierDeclType	HANDLE [ ]		742918	0					
ANR	742972	Identifier	streams		742918	1					
ANR	742973	AssignmentExpression	"streams [ ] = { GetStdHandle ( STD_OUTPUT_HANDLE ) , GetStdHandle ( STD_ERROR_HANDLE ) }"		742918	2		=			
ANR	742974	Identifier	streams		742918	0					
ANR	742975	InitializerList	GetStdHandle ( STD_OUTPUT_HANDLE )		742918	1					
ANR	742976	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		742918	0					
ANR	742977	Callee	GetStdHandle		742918	0					
ANR	742978	Identifier	GetStdHandle		742918	0					
ANR	742979	ArgumentList	STD_OUTPUT_HANDLE		742918	1					
ANR	742980	Argument	STD_OUTPUT_HANDLE		742918	0					
ANR	742981	Identifier	STD_OUTPUT_HANDLE		742918	0					
ANR	742982	CallExpression	GetStdHandle ( STD_ERROR_HANDLE )		742918	1					
ANR	742983	Callee	GetStdHandle		742918	0					
ANR	742984	Identifier	GetStdHandle		742918	0					
ANR	742985	ArgumentList	STD_ERROR_HANDLE		742918	1					
ANR	742986	Argument	STD_ERROR_HANDLE		742918	0					
ANR	742987	Identifier	STD_ERROR_HANDLE		742918	0					
ANR	742988	IdentifierDeclStatement	DWORD mode ;	2012:1:54817:54827	742918	4	True				
ANR	742989	IdentifierDecl	mode		742918	0					
ANR	742990	IdentifierDeclType	DWORD		742918	0					
ANR	742991	Identifier	mode		742918	1					
ANR	742992	IdentifierDeclStatement	int i ;	2013:1:54830:54835	742918	5	True				
ANR	742993	IdentifierDecl	i		742918	0					
ANR	742994	IdentifierDeclType	int		742918	0					
ANR	742995	Identifier	i		742918	1					
ANR	742996	IfStatement	if ( node -> i_value == 1 )		742918	6					
ANR	742997	Condition	node -> i_value == 1	2014:5:54842:54859	742918	0	True				
ANR	742998	EqualityExpression	node -> i_value == 1		742918	0		==			
ANR	742999	PtrMemberAccess	node -> i_value		742918	0					
ANR	743000	Identifier	node		742918	0					
ANR	743001	Identifier	i_value		742918	1					
ANR	743002	PrimaryExpression	1		742918	1					
ANR	743003	CompoundStatement		10:25:321:321	742918	1					
ANR	743004	ForStatement	for ( i = 0 ; i < R_ARRAY_SIZE ( streams ) ; i ++ )		742918	0					
ANR	743005	ForInit	i = 0 ;	2015:7:54957:54962	742918	0	True				
ANR	743006	AssignmentExpression	i = 0		742918	0		=			
ANR	743007	Identifier	i		742918	0					
ANR	743008	PrimaryExpression	0		742918	1					
ANR	743009	Condition	i < R_ARRAY_SIZE ( streams )	2015:14:54964:54989	742918	1	True				
ANR	743010	RelationalExpression	i < R_ARRAY_SIZE ( streams )		742918	0		<			
ANR	743011	Identifier	i		742918	0					
ANR	743012	CallExpression	R_ARRAY_SIZE ( streams )		742918	1					
ANR	743013	Callee	R_ARRAY_SIZE		742918	0					
ANR	743014	Identifier	R_ARRAY_SIZE		742918	0					
ANR	743015	ArgumentList	streams		742918	1					
ANR	743016	Argument	streams		742918	0					
ANR	743017	Identifier	streams		742918	0					
ANR	743018	PostIncDecOperationExpression	i ++	2015:42:54992:54994	742918	2	True				
ANR	743019	Identifier	i		742918	0					
ANR	743020	IncDec	++		742918	1					
ANR	743021	CompoundStatement		11:47:456:456	742918	3					
ANR	743022	ExpressionStatement	"GetConsoleMode ( streams [ i ] , & mode )"	2016:3:55002:55036	742918	0	True				
ANR	743023	CallExpression	"GetConsoleMode ( streams [ i ] , & mode )"		742918	0					
ANR	743024	Callee	GetConsoleMode		742918	0					
ANR	743025	Identifier	GetConsoleMode		742918	0					
ANR	743026	ArgumentList	streams [ i ]		742918	1					
ANR	743027	Argument	streams [ i ]		742918	0					
ANR	743028	ArrayIndexing	streams [ i ]		742918	0					
ANR	743029	Identifier	streams		742918	0					
ANR	743030	Identifier	i		742918	1					
ANR	743031	Argument	& mode		742918	1					
ANR	743032	UnaryOperationExpression	& mode		742918	0					
ANR	743033	UnaryOperator	&		742918	0					
ANR	743034	Identifier	mode		742918	1					
ANR	743035	ExpressionStatement	"SetConsoleMode ( streams [ i ] , mode | ENABLE_PROCESSED_OUTPUT | ENABLE_VIRTUAL_TERMINAL_PROCESSING )"	2017:3:55041:55156	742918	1	True				
ANR	743036	CallExpression	"SetConsoleMode ( streams [ i ] , mode | ENABLE_PROCESSED_OUTPUT | ENABLE_VIRTUAL_TERMINAL_PROCESSING )"		742918	0					
ANR	743037	Callee	SetConsoleMode		742918	0					
ANR	743038	Identifier	SetConsoleMode		742918	0					
ANR	743039	ArgumentList	streams [ i ]		742918	1					
ANR	743040	Argument	streams [ i ]		742918	0					
ANR	743041	ArrayIndexing	streams [ i ]		742918	0					
ANR	743042	Identifier	streams		742918	0					
ANR	743043	Identifier	i		742918	1					
ANR	743044	Argument	mode | ENABLE_PROCESSED_OUTPUT | ENABLE_VIRTUAL_TERMINAL_PROCESSING		742918	1					
ANR	743045	InclusiveOrExpression	mode | ENABLE_PROCESSED_OUTPUT | ENABLE_VIRTUAL_TERMINAL_PROCESSING		742918	0		|			
ANR	743046	Identifier	mode		742918	0					
ANR	743047	InclusiveOrExpression	ENABLE_PROCESSED_OUTPUT | ENABLE_VIRTUAL_TERMINAL_PROCESSING		742918	1		|			
ANR	743048	Identifier	ENABLE_PROCESSED_OUTPUT		742918	0					
ANR	743049	Identifier	ENABLE_VIRTUAL_TERMINAL_PROCESSING		742918	1					
ANR	743050	ElseStatement	else		742918	0					
ANR	743051	CompoundStatement		16:8:629:629	742918	0					
ANR	743052	ForStatement	for ( i = 0 ; i < R_ARRAY_SIZE ( streams ) ; i ++ )		742918	0					
ANR	743053	ForInit	i = 0 ;	2021:7:55179:55184	742918	0	True				
ANR	743054	AssignmentExpression	i = 0		742918	0		=			
ANR	743055	Identifier	i		742918	0					
ANR	743056	PrimaryExpression	0		742918	1					
ANR	743057	Condition	i < R_ARRAY_SIZE ( streams )	2021:14:55186:55211	742918	1	True				
ANR	743058	RelationalExpression	i < R_ARRAY_SIZE ( streams )		742918	0		<			
ANR	743059	Identifier	i		742918	0					
ANR	743060	CallExpression	R_ARRAY_SIZE ( streams )		742918	1					
ANR	743061	Callee	R_ARRAY_SIZE		742918	0					
ANR	743062	Identifier	R_ARRAY_SIZE		742918	0					
ANR	743063	ArgumentList	streams		742918	1					
ANR	743064	Argument	streams		742918	0					
ANR	743065	Identifier	streams		742918	0					
ANR	743066	PostIncDecOperationExpression	i ++	2021:42:55214:55216	742918	2	True				
ANR	743067	Identifier	i		742918	0					
ANR	743068	IncDec	++		742918	1					
ANR	743069	CompoundStatement		17:47:678:678	742918	3					
ANR	743070	ExpressionStatement	"GetConsoleMode ( streams [ i ] , & mode )"	2022:3:55224:55258	742918	0	True				
ANR	743071	CallExpression	"GetConsoleMode ( streams [ i ] , & mode )"		742918	0					
ANR	743072	Callee	GetConsoleMode		742918	0					
ANR	743073	Identifier	GetConsoleMode		742918	0					
ANR	743074	ArgumentList	streams [ i ]		742918	1					
ANR	743075	Argument	streams [ i ]		742918	0					
ANR	743076	ArrayIndexing	streams [ i ]		742918	0					
ANR	743077	Identifier	streams		742918	0					
ANR	743078	Identifier	i		742918	1					
ANR	743079	Argument	& mode		742918	1					
ANR	743080	UnaryOperationExpression	& mode		742918	0					
ANR	743081	UnaryOperator	&		742918	0					
ANR	743082	Identifier	mode		742918	1					
ANR	743083	ExpressionStatement	"SetConsoleMode ( streams [ i ] , mode & ~ENABLE_VIRTUAL_TERMINAL_PROCESSING )"	2023:3:55263:55353	742918	1	True				
ANR	743084	CallExpression	"SetConsoleMode ( streams [ i ] , mode & ~ENABLE_VIRTUAL_TERMINAL_PROCESSING )"		742918	0					
ANR	743085	Callee	SetConsoleMode		742918	0					
ANR	743086	Identifier	SetConsoleMode		742918	0					
ANR	743087	ArgumentList	streams [ i ]		742918	1					
ANR	743088	Argument	streams [ i ]		742918	0					
ANR	743089	ArrayIndexing	streams [ i ]		742918	0					
ANR	743090	Identifier	streams		742918	0					
ANR	743091	Identifier	i		742918	1					
ANR	743092	Argument	mode & ~ENABLE_VIRTUAL_TERMINAL_PROCESSING		742918	1					
ANR	743093	BitAndExpression	mode & ~ENABLE_VIRTUAL_TERMINAL_PROCESSING		742918	0		&			
ANR	743094	Identifier	mode		742918	0					
ANR	743095	Identifier	~ENABLE_VIRTUAL_TERMINAL_PROCESSING		742918	1					
ANR	743096	ReturnStatement	return true ;	2027:1:55363:55374	742918	7	True				
ANR	743097	Identifier	true		742918	0					
ANR	743098	ReturnType	static int		742918	1					
ANR	743099	Identifier	scr_ansicon		742918	2					
ANR	743100	ParameterList	"void * user , void * data"		742918	3					
ANR	743101	Parameter	void * user	2005:23:54516:54525	742918	0	True				
ANR	743102	ParameterType	void *		742918	0					
ANR	743103	Identifier	user		742918	1					
ANR	743104	Parameter	void * data	2005:35:54528:54537	742918	1	True				
ANR	743105	ParameterType	void *		742918	0					
ANR	743106	Identifier	data		742918	1					
ANR	743107	CFGEntryNode	ENTRY		742918		True				
ANR	743108	CFGExitNode	EXIT		742918		True				
ANR	743109	Symbol	GetStdHandle		742918						
ANR	743110	Symbol	data		742918						
ANR	743111	Symbol	r_line_singleton		742918						
ANR	743112	Symbol	* streams		742918						
ANR	743113	Symbol	r_cons_singleton ( ) -> ansicon		742918						
ANR	743114	Symbol	ENABLE_PROCESSED_OUTPUT		742918						
ANR	743115	Symbol	mode		742918						
ANR	743116	Symbol	& mode		742918						
ANR	743117	Symbol	r_cons_singleton		742918						
ANR	743118	Symbol	* node		742918						
ANR	743119	Symbol	strcmp		742918						
ANR	743120	Symbol	STD_ERROR_HANDLE		742918						
ANR	743121	Symbol	STD_OUTPUT_HANDLE		742918						
ANR	743122	Symbol	streams		742918						
ANR	743123	Symbol	i		742918						
ANR	743124	Symbol	r_line_singleton ( ) -> ansicon		742918						
ANR	743125	Symbol	~ENABLE_VIRTUAL_TERMINAL_PROCESSING		742918						
ANR	743126	Symbol	node -> value		742918						
ANR	743127	Symbol	node -> i_value		742918						
ANR	743128	Symbol	node		742918						
ANR	743129	Symbol	* i		742918						
ANR	743130	Symbol	* r_line_singleton		742918						
ANR	743131	Symbol	R_ARRAY_SIZE		742918						
ANR	743132	Symbol	true		742918						
ANR	743133	Symbol	user		742918						
ANR	743134	Symbol	ENABLE_VIRTUAL_TERMINAL_PROCESSING		742918						
ANR	743135	Symbol	* r_cons_singleton		742918						
ANR	743136	Function	cb_screcho	2031:0:55386:55536							
ANR	743137	FunctionDef	"cb_screcho (void * user , void * data)"		743136	0					
ANR	743138	CompoundStatement		2031:47:55433:55536	743136	0					
ANR	743139	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2032:1:55436:55476	743136	0	True				
ANR	743140	IdentifierDecl	* node = ( RConfigNode * ) data		743136	0					
ANR	743141	IdentifierDeclType	RConfigNode *		743136	0					
ANR	743142	Identifier	node		743136	1					
ANR	743143	AssignmentExpression	* node = ( RConfigNode * ) data		743136	2		=			
ANR	743144	Identifier	node		743136	0					
ANR	743145	CastExpression	( RConfigNode * ) data		743136	1					
ANR	743146	CastTarget	RConfigNode *		743136	0					
ANR	743147	Identifier	data		743136	1					
ANR	743148	ExpressionStatement	r_cons_singleton ( ) -> echo = node -> i_value	2033:1:55479:55520	743136	1	True				
ANR	743149	AssignmentExpression	r_cons_singleton ( ) -> echo = node -> i_value		743136	0		=			
ANR	743150	PtrMemberAccess	r_cons_singleton ( ) -> echo		743136	0					
ANR	743151	CallExpression	r_cons_singleton ( )		743136	0					
ANR	743152	Callee	r_cons_singleton		743136	0					
ANR	743153	Identifier	r_cons_singleton		743136	0					
ANR	743154	ArgumentList			743136	1					
ANR	743155	Identifier	echo		743136	1					
ANR	743156	PtrMemberAccess	node -> i_value		743136	1					
ANR	743157	Identifier	node		743136	0					
ANR	743158	Identifier	i_value		743136	1					
ANR	743159	ReturnStatement	return true ;	2034:1:55523:55534	743136	2	True				
ANR	743160	Identifier	true		743136	0					
ANR	743161	ReturnType	static bool		743136	1					
ANR	743162	Identifier	cb_screcho		743136	2					
ANR	743163	ParameterList	"void * user , void * data"		743136	3					
ANR	743164	Parameter	void * user	2031:23:55409:55418	743136	0	True				
ANR	743165	ParameterType	void *		743136	0					
ANR	743166	Identifier	user		743136	1					
ANR	743167	Parameter	void * data	2031:35:55421:55430	743136	1	True				
ANR	743168	ParameterType	void *		743136	0					
ANR	743169	Identifier	data		743136	1					
ANR	743170	CFGEntryNode	ENTRY		743136		True				
ANR	743171	CFGExitNode	EXIT		743136		True				
ANR	743172	Symbol	node		743136						
ANR	743173	Symbol	data		743136						
ANR	743174	Symbol	true		743136						
ANR	743175	Symbol	r_cons_singleton		743136						
ANR	743176	Symbol	* node		743136						
ANR	743177	Symbol	r_cons_singleton ( ) -> echo		743136						
ANR	743178	Symbol	user		743136						
ANR	743179	Symbol	* r_cons_singleton		743136						
ANR	743180	Symbol	node -> i_value		743136						
ANR	743181	Function	cb_scrlinesleep	2037:0:55539:55699							
ANR	743182	FunctionDef	"cb_scrlinesleep (void * user , void * data)"		743181	0					
ANR	743183	CompoundStatement		2037:52:55591:55699	743181	0					
ANR	743184	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2038:1:55594:55634	743181	0	True				
ANR	743185	IdentifierDecl	* node = ( RConfigNode * ) data		743181	0					
ANR	743186	IdentifierDeclType	RConfigNode *		743181	0					
ANR	743187	Identifier	node		743181	1					
ANR	743188	AssignmentExpression	* node = ( RConfigNode * ) data		743181	2		=			
ANR	743189	Identifier	node		743181	0					
ANR	743190	CastExpression	( RConfigNode * ) data		743181	1					
ANR	743191	CastTarget	RConfigNode *		743181	0					
ANR	743192	Identifier	data		743181	1					
ANR	743193	ExpressionStatement	r_cons_singleton ( ) -> linesleep = node -> i_value	2039:1:55637:55683	743181	1	True				
ANR	743194	AssignmentExpression	r_cons_singleton ( ) -> linesleep = node -> i_value		743181	0		=			
ANR	743195	PtrMemberAccess	r_cons_singleton ( ) -> linesleep		743181	0					
ANR	743196	CallExpression	r_cons_singleton ( )		743181	0					
ANR	743197	Callee	r_cons_singleton		743181	0					
ANR	743198	Identifier	r_cons_singleton		743181	0					
ANR	743199	ArgumentList			743181	1					
ANR	743200	Identifier	linesleep		743181	1					
ANR	743201	PtrMemberAccess	node -> i_value		743181	1					
ANR	743202	Identifier	node		743181	0					
ANR	743203	Identifier	i_value		743181	1					
ANR	743204	ReturnStatement	return true ;	2040:1:55686:55697	743181	2	True				
ANR	743205	Identifier	true		743181	0					
ANR	743206	ReturnType	static bool		743181	1					
ANR	743207	Identifier	cb_scrlinesleep		743181	2					
ANR	743208	ParameterList	"void * user , void * data"		743181	3					
ANR	743209	Parameter	void * user	2037:28:55567:55576	743181	0	True				
ANR	743210	ParameterType	void *		743181	0					
ANR	743211	Identifier	user		743181	1					
ANR	743212	Parameter	void * data	2037:40:55579:55588	743181	1	True				
ANR	743213	ParameterType	void *		743181	0					
ANR	743214	Identifier	data		743181	1					
ANR	743215	CFGEntryNode	ENTRY		743181		True				
ANR	743216	CFGExitNode	EXIT		743181		True				
ANR	743217	Symbol	node		743181						
ANR	743218	Symbol	data		743181						
ANR	743219	Symbol	true		743181						
ANR	743220	Symbol	r_cons_singleton		743181						
ANR	743221	Symbol	* node		743181						
ANR	743222	Symbol	r_cons_singleton ( ) -> linesleep		743181						
ANR	743223	Symbol	user		743181						
ANR	743224	Symbol	* r_cons_singleton		743181						
ANR	743225	Symbol	node -> i_value		743181						
ANR	743226	Function	cb_scrpagesize	2043:0:55702:55859							
ANR	743227	FunctionDef	"cb_scrpagesize (void * user , void * data)"		743226	0					
ANR	743228	CompoundStatement		2043:51:55753:55859	743226	0					
ANR	743229	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2044:1:55756:55796	743226	0	True				
ANR	743230	IdentifierDecl	* node = ( RConfigNode * ) data		743226	0					
ANR	743231	IdentifierDeclType	RConfigNode *		743226	0					
ANR	743232	Identifier	node		743226	1					
ANR	743233	AssignmentExpression	* node = ( RConfigNode * ) data		743226	2		=			
ANR	743234	Identifier	node		743226	0					
ANR	743235	CastExpression	( RConfigNode * ) data		743226	1					
ANR	743236	CastTarget	RConfigNode *		743226	0					
ANR	743237	Identifier	data		743226	1					
ANR	743238	ExpressionStatement	r_cons_singleton ( ) -> pagesize = node -> i_value	2045:1:55799:55843	743226	1	True				
ANR	743239	AssignmentExpression	r_cons_singleton ( ) -> pagesize = node -> i_value		743226	0		=			
ANR	743240	PtrMemberAccess	r_cons_singleton ( ) -> pagesize		743226	0					
ANR	743241	CallExpression	r_cons_singleton ( )		743226	0					
ANR	743242	Callee	r_cons_singleton		743226	0					
ANR	743243	Identifier	r_cons_singleton		743226	0					
ANR	743244	ArgumentList			743226	1					
ANR	743245	Identifier	pagesize		743226	1					
ANR	743246	PtrMemberAccess	node -> i_value		743226	1					
ANR	743247	Identifier	node		743226	0					
ANR	743248	Identifier	i_value		743226	1					
ANR	743249	ReturnStatement	return true ;	2046:1:55846:55857	743226	2	True				
ANR	743250	Identifier	true		743226	0					
ANR	743251	ReturnType	static bool		743226	1					
ANR	743252	Identifier	cb_scrpagesize		743226	2					
ANR	743253	ParameterList	"void * user , void * data"		743226	3					
ANR	743254	Parameter	void * user	2043:27:55729:55738	743226	0	True				
ANR	743255	ParameterType	void *		743226	0					
ANR	743256	Identifier	user		743226	1					
ANR	743257	Parameter	void * data	2043:39:55741:55750	743226	1	True				
ANR	743258	ParameterType	void *		743226	0					
ANR	743259	Identifier	data		743226	1					
ANR	743260	CFGEntryNode	ENTRY		743226		True				
ANR	743261	CFGExitNode	EXIT		743226		True				
ANR	743262	Symbol	node		743226						
ANR	743263	Symbol	data		743226						
ANR	743264	Symbol	true		743226						
ANR	743265	Symbol	r_cons_singleton		743226						
ANR	743266	Symbol	* node		743226						
ANR	743267	Symbol	user		743226						
ANR	743268	Symbol	r_cons_singleton ( ) -> pagesize		743226						
ANR	743269	Symbol	* r_cons_singleton		743226						
ANR	743270	Symbol	node -> i_value		743226						
ANR	743271	Function	cb_scrflush	2049:0:55862:56014							
ANR	743272	FunctionDef	"cb_scrflush (void * user , void * data)"		743271	0					
ANR	743273	CompoundStatement		2049:48:55910:56014	743271	0					
ANR	743274	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2050:1:55913:55953	743271	0	True				
ANR	743275	IdentifierDecl	* node = ( RConfigNode * ) data		743271	0					
ANR	743276	IdentifierDeclType	RConfigNode *		743271	0					
ANR	743277	Identifier	node		743271	1					
ANR	743278	AssignmentExpression	* node = ( RConfigNode * ) data		743271	2		=			
ANR	743279	Identifier	node		743271	0					
ANR	743280	CastExpression	( RConfigNode * ) data		743271	1					
ANR	743281	CastTarget	RConfigNode *		743271	0					
ANR	743282	Identifier	data		743271	1					
ANR	743283	ExpressionStatement	r_cons_singleton ( ) -> flush = node -> i_value	2051:1:55956:55998	743271	1	True				
ANR	743284	AssignmentExpression	r_cons_singleton ( ) -> flush = node -> i_value		743271	0		=			
ANR	743285	PtrMemberAccess	r_cons_singleton ( ) -> flush		743271	0					
ANR	743286	CallExpression	r_cons_singleton ( )		743271	0					
ANR	743287	Callee	r_cons_singleton		743271	0					
ANR	743288	Identifier	r_cons_singleton		743271	0					
ANR	743289	ArgumentList			743271	1					
ANR	743290	Identifier	flush		743271	1					
ANR	743291	PtrMemberAccess	node -> i_value		743271	1					
ANR	743292	Identifier	node		743271	0					
ANR	743293	Identifier	i_value		743271	1					
ANR	743294	ReturnStatement	return true ;	2052:1:56001:56012	743271	2	True				
ANR	743295	Identifier	true		743271	0					
ANR	743296	ReturnType	static bool		743271	1					
ANR	743297	Identifier	cb_scrflush		743271	2					
ANR	743298	ParameterList	"void * user , void * data"		743271	3					
ANR	743299	Parameter	void * user	2049:24:55886:55895	743271	0	True				
ANR	743300	ParameterType	void *		743271	0					
ANR	743301	Identifier	user		743271	1					
ANR	743302	Parameter	void * data	2049:36:55898:55907	743271	1	True				
ANR	743303	ParameterType	void *		743271	0					
ANR	743304	Identifier	data		743271	1					
ANR	743305	CFGEntryNode	ENTRY		743271		True				
ANR	743306	CFGExitNode	EXIT		743271		True				
ANR	743307	Symbol	node		743271						
ANR	743308	Symbol	data		743271						
ANR	743309	Symbol	true		743271						
ANR	743310	Symbol	r_cons_singleton		743271						
ANR	743311	Symbol	* node		743271						
ANR	743312	Symbol	r_cons_singleton ( ) -> flush		743271						
ANR	743313	Symbol	user		743271						
ANR	743314	Symbol	* r_cons_singleton		743271						
ANR	743315	Symbol	node -> i_value		743271						
ANR	743316	Function	cb_scrstrconv	2055:0:56017:57001							
ANR	743317	FunctionDef	"cb_scrstrconv (void * user , void * data)"		743316	0					
ANR	743318	CompoundStatement		2055:50:56067:57001	743316	0					
ANR	743319	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2056:1:56070:56097	743316	0	True				
ANR	743320	IdentifierDecl	* core = ( RCore * ) user		743316	0					
ANR	743321	IdentifierDeclType	RCore *		743316	0					
ANR	743322	Identifier	core		743316	1					
ANR	743323	AssignmentExpression	* core = ( RCore * ) user		743316	2		=			
ANR	743324	Identifier	core		743316	0					
ANR	743325	CastExpression	( RCore * ) user		743316	1					
ANR	743326	CastTarget	RCore *		743316	0					
ANR	743327	Identifier	user		743316	1					
ANR	743328	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2057:1:56100:56139	743316	1	True				
ANR	743329	IdentifierDecl	* node = ( RConfigNode * ) data		743316	0					
ANR	743330	IdentifierDeclType	RConfigNode *		743316	0					
ANR	743331	Identifier	node		743316	1					
ANR	743332	AssignmentExpression	* node = ( RConfigNode * ) data		743316	2		=			
ANR	743333	Identifier	node		743316	0					
ANR	743334	CastExpression	( RConfigNode * ) data		743316	1					
ANR	743335	CastTarget	RConfigNode *		743316	0					
ANR	743336	Identifier	data		743316	1					
ANR	743337	IfStatement	if ( node -> value [ 0 ] == '?' )		743316	2					
ANR	743338	Condition	node -> value [ 0 ] == '?'	2058:5:56146:56166	743316	0	True				
ANR	743339	EqualityExpression	node -> value [ 0 ] == '?'		743316	0		==			
ANR	743340	ArrayIndexing	node -> value [ 0 ]		743316	0					
ANR	743341	PtrMemberAccess	node -> value		743316	0					
ANR	743342	Identifier	node		743316	0					
ANR	743343	Identifier	value		743316	1					
ANR	743344	PrimaryExpression	0		743316	1					
ANR	743345	PrimaryExpression	'?'		743316	1					
ANR	743346	CompoundStatement		4:28:101:101	743316	1					
ANR	743347	IfStatement	if ( strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?' )		743316	0					
ANR	743348	Condition	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'	2059:6:56177:56225	743316	0	True				
ANR	743349	AndExpression	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'		743316	0		&&			
ANR	743350	RelationalExpression	strlen ( node -> value ) > 1		743316	0		>			
ANR	743351	CallExpression	strlen ( node -> value )		743316	0					
ANR	743352	Callee	strlen		743316	0					
ANR	743353	Identifier	strlen		743316	0					
ANR	743354	ArgumentList	node -> value		743316	1					
ANR	743355	Argument	node -> value		743316	0					
ANR	743356	PtrMemberAccess	node -> value		743316	0					
ANR	743357	Identifier	node		743316	0					
ANR	743358	Identifier	value		743316	1					
ANR	743359	PrimaryExpression	1		743316	1					
ANR	743360	EqualityExpression	node -> value [ 1 ] == '?'		743316	1		==			
ANR	743361	ArrayIndexing	node -> value [ 1 ]		743316	0					
ANR	743362	PtrMemberAccess	node -> value		743316	0					
ANR	743363	Identifier	node		743316	0					
ANR	743364	Identifier	value		743316	1					
ANR	743365	PrimaryExpression	1		743316	1					
ANR	743366	PrimaryExpression	'?'		743316	1					
ANR	743367	CompoundStatement		5:57:160:160	743316	1					
ANR	743368	Statement	r_cons_printf	2060:3:56233:56245	743316	0	True				
ANR	743369	Statement	(	2060:17:56247:56247	743316	1	True				
ANR	743370	Statement	"""Valid values for scr.strconv:\\n"""	2060:18:56248:56280	743316	2	True				
ANR	743371	Statement	"""  asciiesc  convert to ascii with non-ascii chars escaped\\n"""	2061:4:56286:56346	743316	3	True				
ANR	743372	Statement	"""  asciidot  convert to ascii with non-ascii chars turned into a dot (except control chars stated below)\\n"""	2062:4:56352:56458	743316	4	True				
ANR	743373	Statement	"""\\n"""	2063:4:56464:56467	743316	5	True				
ANR	743374	Statement	"""Ascii chars are in the range 0x20-0x7e. Always escaped control chars are alert (\\\\a),\\n"""	2064:4:56473:56561	743316	6	True				
ANR	743375	Statement	"""backspace (\\\\b), formfeed (\\\\f), newline (\\\\n), carriage return (\\\\r), horizontal tab (\\\\t)\\n"""	2065:4:56567:56661	743316	7	True				
ANR	743376	Statement	"""and vertical tab (\\\\v). Also, double quotes (\\\\\\"") are always escaped, but backslashes (\\\\\\\\)\\n"""	2066:4:56667:56763	743316	8	True				
ANR	743377	Statement	"""are only escaped if str.escbslash = true.\\n"""	2067:4:56769:56813	743316	9	True				
ANR	743378	Statement	)	2067:49:56814:56814	743316	10	True				
ANR	743379	ExpressionStatement		2067:50:56815:56815	743316	11	True				
ANR	743380	ElseStatement	else		743316	0					
ANR	743381	CompoundStatement		14:9:758:758	743316	0					
ANR	743382	ExpressionStatement	print_node_options ( node )	2069:3:56831:56856	743316	0	True				
ANR	743383	CallExpression	print_node_options ( node )		743316	0					
ANR	743384	Callee	print_node_options		743316	0					
ANR	743385	Identifier	print_node_options		743316	0					
ANR	743386	ArgumentList	node		743316	1					
ANR	743387	Argument	node		743316	0					
ANR	743388	Identifier	node		743316	0					
ANR	743389	ReturnStatement	return false ;	2071:2:56864:56876	743316	1	True				
ANR	743390	Identifier	false		743316	0					
ANR	743391	ElseStatement	else		743316	0					
ANR	743392	CompoundStatement		18:8:818:818	743316	0					
ANR	743393	ExpressionStatement	free ( ( char * ) core -> print -> strconv_mode )	2073:2:56890:56930	743316	0	True				
ANR	743394	CallExpression	free ( ( char * ) core -> print -> strconv_mode )		743316	0					
ANR	743395	Callee	free		743316	0					
ANR	743396	Identifier	free		743316	0					
ANR	743397	ArgumentList	( char * ) core -> print -> strconv_mode		743316	1					
ANR	743398	Argument	( char * ) core -> print -> strconv_mode		743316	0					
ANR	743399	CastExpression	( char * ) core -> print -> strconv_mode		743316	0					
ANR	743400	CastTarget	char *		743316	0					
ANR	743401	PtrMemberAccess	core -> print -> strconv_mode		743316	1					
ANR	743402	PtrMemberAccess	core -> print		743316	0					
ANR	743403	Identifier	core		743316	0					
ANR	743404	Identifier	print		743316	1					
ANR	743405	Identifier	strconv_mode		743316	1					
ANR	743406	ExpressionStatement	core -> print -> strconv_mode = strdup ( node -> value )	2074:2:56934:56982	743316	1	True				
ANR	743407	AssignmentExpression	core -> print -> strconv_mode = strdup ( node -> value )		743316	0		=			
ANR	743408	PtrMemberAccess	core -> print -> strconv_mode		743316	0					
ANR	743409	PtrMemberAccess	core -> print		743316	0					
ANR	743410	Identifier	core		743316	0					
ANR	743411	Identifier	print		743316	1					
ANR	743412	Identifier	strconv_mode		743316	1					
ANR	743413	CallExpression	strdup ( node -> value )		743316	1					
ANR	743414	Callee	strdup		743316	0					
ANR	743415	Identifier	strdup		743316	0					
ANR	743416	ArgumentList	node -> value		743316	1					
ANR	743417	Argument	node -> value		743316	0					
ANR	743418	PtrMemberAccess	node -> value		743316	0					
ANR	743419	Identifier	node		743316	0					
ANR	743420	Identifier	value		743316	1					
ANR	743421	ReturnStatement	return true ;	2076:1:56988:56999	743316	3	True				
ANR	743422	Identifier	true		743316	0					
ANR	743423	ReturnType	static bool		743316	1					
ANR	743424	Identifier	cb_scrstrconv		743316	2					
ANR	743425	ParameterList	"void * user , void * data"		743316	3					
ANR	743426	Parameter	void * user	2055:26:56043:56052	743316	0	True				
ANR	743427	ParameterType	void *		743316	0					
ANR	743428	Identifier	user		743316	1					
ANR	743429	Parameter	void * data	2055:38:56055:56064	743316	1	True				
ANR	743430	ParameterType	void *		743316	0					
ANR	743431	Identifier	data		743316	1					
ANR	743432	CFGEntryNode	ENTRY		743316		True				
ANR	743433	CFGExitNode	EXIT		743316		True				
ANR	743434	Symbol	* node -> value		743316						
ANR	743435	Symbol	core -> print -> strconv_mode		743316						
ANR	743436	Symbol	data		743316						
ANR	743437	Symbol	false		743316						
ANR	743438	Symbol	* core		743316						
ANR	743439	Symbol	node -> value		743316						
ANR	743440	Symbol	core		743316						
ANR	743441	Symbol	node		743316						
ANR	743442	Symbol	strlen		743316						
ANR	743443	Symbol	* core -> print		743316						
ANR	743444	Symbol	* * node		743316						
ANR	743445	Symbol	true		743316						
ANR	743446	Symbol	* node		743316						
ANR	743447	Symbol	strdup		743316						
ANR	743448	Symbol	core -> print		743316						
ANR	743449	Symbol	user		743316						
ANR	743450	Symbol	* * core		743316						
ANR	743451	Function	cb_graphformat	2079:0:57004:57220							
ANR	743452	FunctionDef	"cb_graphformat (void * user , void * data)"		743451	0					
ANR	743453	CompoundStatement		2079:51:57055:57220	743451	0					
ANR	743454	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2080:1:57058:57098	743451	0	True				
ANR	743455	IdentifierDecl	* node = ( RConfigNode * ) data		743451	0					
ANR	743456	IdentifierDeclType	RConfigNode *		743451	0					
ANR	743457	Identifier	node		743451	1					
ANR	743458	AssignmentExpression	* node = ( RConfigNode * ) data		743451	2		=			
ANR	743459	Identifier	node		743451	0					
ANR	743460	CastExpression	( RConfigNode * ) data		743451	1					
ANR	743461	CastTarget	RConfigNode *		743451	0					
ANR	743462	Identifier	data		743451	1					
ANR	743463	IfStatement	"if ( ! strcmp ( node -> value , ""?"" ) )"		743451	1					
ANR	743464	Condition	"! strcmp ( node -> value , ""?"" )"	2081:5:57105:57130	743451	0	True				
ANR	743465	UnaryOperationExpression	"! strcmp ( node -> value , ""?"" )"		743451	0					
ANR	743466	UnaryOperator	!		743451	0					
ANR	743467	CallExpression	"strcmp ( node -> value , ""?"" )"		743451	1					
ANR	743468	Callee	strcmp		743451	0					
ANR	743469	Identifier	strcmp		743451	0					
ANR	743470	ArgumentList	node -> value		743451	1					
ANR	743471	Argument	node -> value		743451	0					
ANR	743472	PtrMemberAccess	node -> value		743451	0					
ANR	743473	Identifier	node		743451	0					
ANR	743474	Identifier	value		743451	1					
ANR	743475	Argument	"""?"""		743451	1					
ANR	743476	PrimaryExpression	"""?"""		743451	0					
ANR	743477	CompoundStatement		3:33:77:77	743451	1					
ANR	743478	ExpressionStatement	"r_cons_printf ( ""png\\njpg\\npdf\\nps\\nsvg\\njson\\n"" )"	2082:2:57137:57185	743451	0	True				
ANR	743479	CallExpression	"r_cons_printf ( ""png\\njpg\\npdf\\nps\\nsvg\\njson\\n"" )"		743451	0					
ANR	743480	Callee	r_cons_printf		743451	0					
ANR	743481	Identifier	r_cons_printf		743451	0					
ANR	743482	ArgumentList	"""png\\njpg\\npdf\\nps\\nsvg\\njson\\n"""		743451	1					
ANR	743483	Argument	"""png\\njpg\\npdf\\nps\\nsvg\\njson\\n"""		743451	0					
ANR	743484	PrimaryExpression	"""png\\njpg\\npdf\\nps\\nsvg\\njson\\n"""		743451	0					
ANR	743485	ReturnStatement	return false ;	2083:2:57189:57201	743451	1	True				
ANR	743486	Identifier	false		743451	0					
ANR	743487	ReturnStatement	return true ;	2085:1:57207:57218	743451	2	True				
ANR	743488	Identifier	true		743451	0					
ANR	743489	ReturnType	static bool		743451	1					
ANR	743490	Identifier	cb_graphformat		743451	2					
ANR	743491	ParameterList	"void * user , void * data"		743451	3					
ANR	743492	Parameter	void * user	2079:27:57031:57040	743451	0	True				
ANR	743493	ParameterType	void *		743451	0					
ANR	743494	Identifier	user		743451	1					
ANR	743495	Parameter	void * data	2079:39:57043:57052	743451	1	True				
ANR	743496	ParameterType	void *		743451	0					
ANR	743497	Identifier	data		743451	1					
ANR	743498	CFGEntryNode	ENTRY		743451		True				
ANR	743499	CFGExitNode	EXIT		743451		True				
ANR	743500	Symbol	strcmp		743451						
ANR	743501	Symbol	node		743451						
ANR	743502	Symbol	data		743451						
ANR	743503	Symbol	false		743451						
ANR	743504	Symbol	true		743451						
ANR	743505	Symbol	* node		743451						
ANR	743506	Symbol	user		743451						
ANR	743507	Symbol	node -> value		743451						
ANR	743508	Function	cb_exectrap	2089:0:57224:57449							
ANR	743509	FunctionDef	"cb_exectrap (void * user , void * data)"		743508	0					
ANR	743510	CompoundStatement		2089:48:57272:57449	743508	0					
ANR	743511	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2090:1:57275:57315	743508	0	True				
ANR	743512	IdentifierDecl	* node = ( RConfigNode * ) data		743508	0					
ANR	743513	IdentifierDeclType	RConfigNode *		743508	0					
ANR	743514	Identifier	node		743508	1					
ANR	743515	AssignmentExpression	* node = ( RConfigNode * ) data		743508	2		=			
ANR	743516	Identifier	node		743508	0					
ANR	743517	CastExpression	( RConfigNode * ) data		743508	1					
ANR	743518	CastTarget	RConfigNode *		743508	0					
ANR	743519	Identifier	data		743508	1					
ANR	743520	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2091:1:57318:57345	743508	1	True				
ANR	743521	IdentifierDecl	* core = ( RCore * ) user		743508	0					
ANR	743522	IdentifierDeclType	RCore *		743508	0					
ANR	743523	Identifier	core		743508	1					
ANR	743524	AssignmentExpression	* core = ( RCore * ) user		743508	2		=			
ANR	743525	Identifier	core		743508	0					
ANR	743526	CastExpression	( RCore * ) user		743508	1					
ANR	743527	CastTarget	RCore *		743508	0					
ANR	743528	Identifier	user		743508	1					
ANR	743529	IfStatement	if ( core -> anal && core -> anal -> esil )		743508	2					
ANR	743530	Condition	core -> anal && core -> anal -> esil	2092:5:57352:57381	743508	0	True				
ANR	743531	AndExpression	core -> anal && core -> anal -> esil		743508	0		&&			
ANR	743532	PtrMemberAccess	core -> anal		743508	0					
ANR	743533	Identifier	core		743508	0					
ANR	743534	Identifier	anal		743508	1					
ANR	743535	PtrMemberAccess	core -> anal -> esil		743508	1					
ANR	743536	PtrMemberAccess	core -> anal		743508	0					
ANR	743537	Identifier	core		743508	0					
ANR	743538	Identifier	anal		743508	1					
ANR	743539	Identifier	esil		743508	1					
ANR	743540	CompoundStatement		4:37:111:111	743508	1					
ANR	743541	ExpressionStatement	core -> anal -> esil -> exectrap = node -> i_value	2093:2:57388:57430	743508	0	True				
ANR	743542	AssignmentExpression	core -> anal -> esil -> exectrap = node -> i_value		743508	0		=			
ANR	743543	PtrMemberAccess	core -> anal -> esil -> exectrap		743508	0					
ANR	743544	PtrMemberAccess	core -> anal -> esil		743508	0					
ANR	743545	PtrMemberAccess	core -> anal		743508	0					
ANR	743546	Identifier	core		743508	0					
ANR	743547	Identifier	anal		743508	1					
ANR	743548	Identifier	esil		743508	1					
ANR	743549	Identifier	exectrap		743508	1					
ANR	743550	PtrMemberAccess	node -> i_value		743508	1					
ANR	743551	Identifier	node		743508	0					
ANR	743552	Identifier	i_value		743508	1					
ANR	743553	ReturnStatement	return true ;	2095:1:57436:57447	743508	3	True				
ANR	743554	Identifier	true		743508	0					
ANR	743555	ReturnType	static bool		743508	1					
ANR	743556	Identifier	cb_exectrap		743508	2					
ANR	743557	ParameterList	"void * user , void * data"		743508	3					
ANR	743558	Parameter	void * user	2089:24:57248:57257	743508	0	True				
ANR	743559	ParameterType	void *		743508	0					
ANR	743560	Identifier	user		743508	1					
ANR	743561	Parameter	void * data	2089:36:57260:57269	743508	1	True				
ANR	743562	ParameterType	void *		743508	0					
ANR	743563	Identifier	data		743508	1					
ANR	743564	CFGEntryNode	ENTRY		743508		True				
ANR	743565	CFGExitNode	EXIT		743508		True				
ANR	743566	Symbol	data		743508						
ANR	743567	Symbol	* core		743508						
ANR	743568	Symbol	core -> anal		743508						
ANR	743569	Symbol	node -> i_value		743508						
ANR	743570	Symbol	node		743508						
ANR	743571	Symbol	core		743508						
ANR	743572	Symbol	* * * core		743508						
ANR	743573	Symbol	* core -> anal		743508						
ANR	743574	Symbol	core -> anal -> esil -> exectrap		743508						
ANR	743575	Symbol	* core -> anal -> esil		743508						
ANR	743576	Symbol	true		743508						
ANR	743577	Symbol	* * core -> anal		743508						
ANR	743578	Symbol	* node		743508						
ANR	743579	Symbol	core -> anal -> esil		743508						
ANR	743580	Symbol	user		743508						
ANR	743581	Symbol	* * core		743508						
ANR	743582	Function	cb_iotrap	2098:0:57452:57673							
ANR	743583	FunctionDef	"cb_iotrap (void * user , void * data)"		743582	0					
ANR	743584	CompoundStatement		2098:46:57498:57673	743582	0					
ANR	743585	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2099:1:57501:57541	743582	0	True				
ANR	743586	IdentifierDecl	* node = ( RConfigNode * ) data		743582	0					
ANR	743587	IdentifierDeclType	RConfigNode *		743582	0					
ANR	743588	Identifier	node		743582	1					
ANR	743589	AssignmentExpression	* node = ( RConfigNode * ) data		743582	2		=			
ANR	743590	Identifier	node		743582	0					
ANR	743591	CastExpression	( RConfigNode * ) data		743582	1					
ANR	743592	CastTarget	RConfigNode *		743582	0					
ANR	743593	Identifier	data		743582	1					
ANR	743594	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2100:1:57544:57571	743582	1	True				
ANR	743595	IdentifierDecl	* core = ( RCore * ) user		743582	0					
ANR	743596	IdentifierDeclType	RCore *		743582	0					
ANR	743597	Identifier	core		743582	1					
ANR	743598	AssignmentExpression	* core = ( RCore * ) user		743582	2		=			
ANR	743599	Identifier	core		743582	0					
ANR	743600	CastExpression	( RCore * ) user		743582	1					
ANR	743601	CastTarget	RCore *		743582	0					
ANR	743602	Identifier	user		743582	1					
ANR	743603	IfStatement	if ( core -> anal && core -> anal -> esil )		743582	2					
ANR	743604	Condition	core -> anal && core -> anal -> esil	2101:5:57578:57607	743582	0	True				
ANR	743605	AndExpression	core -> anal && core -> anal -> esil		743582	0		&&			
ANR	743606	PtrMemberAccess	core -> anal		743582	0					
ANR	743607	Identifier	core		743582	0					
ANR	743608	Identifier	anal		743582	1					
ANR	743609	PtrMemberAccess	core -> anal -> esil		743582	1					
ANR	743610	PtrMemberAccess	core -> anal		743582	0					
ANR	743611	Identifier	core		743582	0					
ANR	743612	Identifier	anal		743582	1					
ANR	743613	Identifier	esil		743582	1					
ANR	743614	CompoundStatement		4:37:111:111	743582	1					
ANR	743615	ExpressionStatement	core -> anal -> esil -> iotrap = node -> i_value	2102:2:57614:57654	743582	0	True				
ANR	743616	AssignmentExpression	core -> anal -> esil -> iotrap = node -> i_value		743582	0		=			
ANR	743617	PtrMemberAccess	core -> anal -> esil -> iotrap		743582	0					
ANR	743618	PtrMemberAccess	core -> anal -> esil		743582	0					
ANR	743619	PtrMemberAccess	core -> anal		743582	0					
ANR	743620	Identifier	core		743582	0					
ANR	743621	Identifier	anal		743582	1					
ANR	743622	Identifier	esil		743582	1					
ANR	743623	Identifier	iotrap		743582	1					
ANR	743624	PtrMemberAccess	node -> i_value		743582	1					
ANR	743625	Identifier	node		743582	0					
ANR	743626	Identifier	i_value		743582	1					
ANR	743627	ReturnStatement	return true ;	2104:1:57660:57671	743582	3	True				
ANR	743628	Identifier	true		743582	0					
ANR	743629	ReturnType	static bool		743582	1					
ANR	743630	Identifier	cb_iotrap		743582	2					
ANR	743631	ParameterList	"void * user , void * data"		743582	3					
ANR	743632	Parameter	void * user	2098:22:57474:57483	743582	0	True				
ANR	743633	ParameterType	void *		743582	0					
ANR	743634	Identifier	user		743582	1					
ANR	743635	Parameter	void * data	2098:34:57486:57495	743582	1	True				
ANR	743636	ParameterType	void *		743582	0					
ANR	743637	Identifier	data		743582	1					
ANR	743638	CFGEntryNode	ENTRY		743582		True				
ANR	743639	CFGExitNode	EXIT		743582		True				
ANR	743640	Symbol	data		743582						
ANR	743641	Symbol	* core		743582						
ANR	743642	Symbol	core -> anal -> esil -> iotrap		743582						
ANR	743643	Symbol	core -> anal		743582						
ANR	743644	Symbol	node -> i_value		743582						
ANR	743645	Symbol	node		743582						
ANR	743646	Symbol	core		743582						
ANR	743647	Symbol	* * * core		743582						
ANR	743648	Symbol	* core -> anal		743582						
ANR	743649	Symbol	* core -> anal -> esil		743582						
ANR	743650	Symbol	true		743582						
ANR	743651	Symbol	* * core -> anal		743582						
ANR	743652	Symbol	* node		743582						
ANR	743653	Symbol	core -> anal -> esil		743582						
ANR	743654	Symbol	user		743582						
ANR	743655	Symbol	* * core		743582						
ANR	743656	Function	cb_scr_bgfill	2107:0:57676:57999							
ANR	743657	FunctionDef	"cb_scr_bgfill (void * user , void * data)"		743656	0					
ANR	743658	CompoundStatement		2107:50:57726:57999	743656	0					
ANR	743659	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2108:1:57729:57756	743656	0	True				
ANR	743660	IdentifierDecl	* core = ( RCore * ) user		743656	0					
ANR	743661	IdentifierDeclType	RCore *		743656	0					
ANR	743662	Identifier	core		743656	1					
ANR	743663	AssignmentExpression	* core = ( RCore * ) user		743656	2		=			
ANR	743664	Identifier	core		743656	0					
ANR	743665	CastExpression	( RCore * ) user		743656	1					
ANR	743666	CastTarget	RCore *		743656	0					
ANR	743667	Identifier	user		743656	1					
ANR	743668	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2109:1:57759:57799	743656	1	True				
ANR	743669	IdentifierDecl	* node = ( RConfigNode * ) data		743656	0					
ANR	743670	IdentifierDeclType	RConfigNode *		743656	0					
ANR	743671	Identifier	node		743656	1					
ANR	743672	AssignmentExpression	* node = ( RConfigNode * ) data		743656	2		=			
ANR	743673	Identifier	node		743656	0					
ANR	743674	CastExpression	( RConfigNode * ) data		743656	1					
ANR	743675	CastTarget	RConfigNode *		743656	0					
ANR	743676	Identifier	data		743656	1					
ANR	743677	IfStatement	if ( node -> i_value )		743656	2					
ANR	743678	Condition	node -> i_value	2110:5:57806:57818	743656	0	True				
ANR	743679	PtrMemberAccess	node -> i_value		743656	0					
ANR	743680	Identifier	node		743656	0					
ANR	743681	Identifier	i_value		743656	1					
ANR	743682	CompoundStatement		4:20:94:94	743656	1					
ANR	743683	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_BGFILL	2111:2:57825:57867	743656	0	True				
ANR	743684	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_BGFILL		743656	0		|=			
ANR	743685	PtrMemberAccess	core -> print -> flags		743656	0					
ANR	743686	PtrMemberAccess	core -> print		743656	0					
ANR	743687	Identifier	core		743656	0					
ANR	743688	Identifier	print		743656	1					
ANR	743689	Identifier	flags		743656	1					
ANR	743690	Identifier	R_PRINT_FLAGS_BGFILL		743656	1					
ANR	743691	ElseStatement	else		743656	0					
ANR	743692	CompoundStatement		6:8:150:150	743656	0					
ANR	743693	ExpressionStatement	core -> print -> flags &= ( ~R_PRINT_FLAGS_BGFILL )	2113:2:57881:57926	743656	0	True				
ANR	743694	AssignmentExpression	core -> print -> flags &= ( ~R_PRINT_FLAGS_BGFILL )		743656	0		&=			
ANR	743695	PtrMemberAccess	core -> print -> flags		743656	0					
ANR	743696	PtrMemberAccess	core -> print		743656	0					
ANR	743697	Identifier	core		743656	0					
ANR	743698	Identifier	print		743656	1					
ANR	743699	Identifier	flags		743656	1					
ANR	743700	Identifier	~R_PRINT_FLAGS_BGFILL		743656	1					
ANR	743701	ExpressionStatement	"r_print_set_flags ( core -> print , core -> print -> flags )"	2115:1:57932:57983	743656	3	True				
ANR	743702	CallExpression	"r_print_set_flags ( core -> print , core -> print -> flags )"		743656	0					
ANR	743703	Callee	r_print_set_flags		743656	0					
ANR	743704	Identifier	r_print_set_flags		743656	0					
ANR	743705	ArgumentList	core -> print		743656	1					
ANR	743706	Argument	core -> print		743656	0					
ANR	743707	PtrMemberAccess	core -> print		743656	0					
ANR	743708	Identifier	core		743656	0					
ANR	743709	Identifier	print		743656	1					
ANR	743710	Argument	core -> print -> flags		743656	1					
ANR	743711	PtrMemberAccess	core -> print -> flags		743656	0					
ANR	743712	PtrMemberAccess	core -> print		743656	0					
ANR	743713	Identifier	core		743656	0					
ANR	743714	Identifier	print		743656	1					
ANR	743715	Identifier	flags		743656	1					
ANR	743716	ReturnStatement	return true ;	2116:1:57986:57997	743656	4	True				
ANR	743717	Identifier	true		743656	0					
ANR	743718	ReturnType	static bool		743656	1					
ANR	743719	Identifier	cb_scr_bgfill		743656	2					
ANR	743720	ParameterList	"void * user , void * data"		743656	3					
ANR	743721	Parameter	void * user	2107:26:57702:57711	743656	0	True				
ANR	743722	ParameterType	void *		743656	0					
ANR	743723	Identifier	user		743656	1					
ANR	743724	Parameter	void * data	2107:38:57714:57723	743656	1	True				
ANR	743725	ParameterType	void *		743656	0					
ANR	743726	Identifier	data		743656	1					
ANR	743727	CFGEntryNode	ENTRY		743656		True				
ANR	743728	CFGExitNode	EXIT		743656		True				
ANR	743729	Symbol	R_PRINT_FLAGS_BGFILL		743656						
ANR	743730	Symbol	data		743656						
ANR	743731	Symbol	* core		743656						
ANR	743732	Symbol	node -> i_value		743656						
ANR	743733	Symbol	core		743656						
ANR	743734	Symbol	node		743656						
ANR	743735	Symbol	* core -> print		743656						
ANR	743736	Symbol	~R_PRINT_FLAGS_BGFILL		743656						
ANR	743737	Symbol	true		743656						
ANR	743738	Symbol	* node		743656						
ANR	743739	Symbol	core -> print		743656						
ANR	743740	Symbol	user		743656						
ANR	743741	Symbol	core -> print -> flags		743656						
ANR	743742	Symbol	* * core		743656						
ANR	743743	Function	cb_scrint	2119:0:58002:58235							
ANR	743744	FunctionDef	"cb_scrint (void * user , void * data)"		743743	0					
ANR	743745	CompoundStatement		2119:46:58048:58235	743743	0					
ANR	743746	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2120:1:58051:58091	743743	0	True				
ANR	743747	IdentifierDecl	* node = ( RConfigNode * ) data		743743	0					
ANR	743748	IdentifierDeclType	RConfigNode *		743743	0					
ANR	743749	Identifier	node		743743	1					
ANR	743750	AssignmentExpression	* node = ( RConfigNode * ) data		743743	2		=			
ANR	743751	Identifier	node		743743	0					
ANR	743752	CastExpression	( RConfigNode * ) data		743743	1					
ANR	743753	CastTarget	RConfigNode *		743743	0					
ANR	743754	Identifier	data		743743	1					
ANR	743755	IfStatement	if ( node -> i_value && r_sandbox_enable ( 0 ) )		743743	1					
ANR	743756	Condition	node -> i_value && r_sandbox_enable ( 0 )	2121:5:58098:58134	743743	0	True				
ANR	743757	AndExpression	node -> i_value && r_sandbox_enable ( 0 )		743743	0		&&			
ANR	743758	PtrMemberAccess	node -> i_value		743743	0					
ANR	743759	Identifier	node		743743	0					
ANR	743760	Identifier	i_value		743743	1					
ANR	743761	CallExpression	r_sandbox_enable ( 0 )		743743	1					
ANR	743762	Callee	r_sandbox_enable		743743	0					
ANR	743763	Identifier	r_sandbox_enable		743743	0					
ANR	743764	ArgumentList	0		743743	1					
ANR	743765	Argument	0		743743	0					
ANR	743766	PrimaryExpression	0		743743	0					
ANR	743767	CompoundStatement		3:44:88:88	743743	1					
ANR	743768	ReturnStatement	return false ;	2122:2:58141:58153	743743	0	True				
ANR	743769	Identifier	false		743743	0					
ANR	743770	ExpressionStatement	r_cons_singleton ( ) -> context -> is_interactive = node -> i_value	2124:1:58159:58219	743743	2	True				
ANR	743771	AssignmentExpression	r_cons_singleton ( ) -> context -> is_interactive = node -> i_value		743743	0		=			
ANR	743772	PtrMemberAccess	r_cons_singleton ( ) -> context -> is_interactive		743743	0					
ANR	743773	PtrMemberAccess	r_cons_singleton ( ) -> context		743743	0					
ANR	743774	CallExpression	r_cons_singleton ( )		743743	0					
ANR	743775	Callee	r_cons_singleton		743743	0					
ANR	743776	Identifier	r_cons_singleton		743743	0					
ANR	743777	ArgumentList			743743	1					
ANR	743778	Identifier	context		743743	1					
ANR	743779	Identifier	is_interactive		743743	1					
ANR	743780	PtrMemberAccess	node -> i_value		743743	1					
ANR	743781	Identifier	node		743743	0					
ANR	743782	Identifier	i_value		743743	1					
ANR	743783	ReturnStatement	return true ;	2125:1:58222:58233	743743	3	True				
ANR	743784	Identifier	true		743743	0					
ANR	743785	ReturnType	static bool		743743	1					
ANR	743786	Identifier	cb_scrint		743743	2					
ANR	743787	ParameterList	"void * user , void * data"		743743	3					
ANR	743788	Parameter	void * user	2119:22:58024:58033	743743	0	True				
ANR	743789	ParameterType	void *		743743	0					
ANR	743790	Identifier	user		743743	1					
ANR	743791	Parameter	void * data	2119:34:58036:58045	743743	1	True				
ANR	743792	ParameterType	void *		743743	0					
ANR	743793	Identifier	data		743743	1					
ANR	743794	CFGEntryNode	ENTRY		743743		True				
ANR	743795	CFGExitNode	EXIT		743743		True				
ANR	743796	Symbol	data		743743						
ANR	743797	Symbol	r_sandbox_enable		743743						
ANR	743798	Symbol	false		743743						
ANR	743799	Symbol	* r_cons_singleton ( ) -> context		743743						
ANR	743800	Symbol	* * r_cons_singleton		743743						
ANR	743801	Symbol	node -> i_value		743743						
ANR	743802	Symbol	node		743743						
ANR	743803	Symbol	r_cons_singleton ( ) -> context -> is_interactive		743743						
ANR	743804	Symbol	true		743743						
ANR	743805	Symbol	r_cons_singleton		743743						
ANR	743806	Symbol	* node		743743						
ANR	743807	Symbol	user		743743						
ANR	743808	Symbol	r_cons_singleton ( ) -> context		743743						
ANR	743809	Symbol	* r_cons_singleton		743743						
ANR	743810	Function	cb_scrnkey	2128:0:58238:58452							
ANR	743811	FunctionDef	"cb_scrnkey (void * user , void * data)"		743810	0					
ANR	743812	CompoundStatement		2128:47:58285:58452	743810	0					
ANR	743813	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2129:1:58288:58327	743810	0	True				
ANR	743814	IdentifierDecl	* node = ( RConfigNode * ) data		743810	0					
ANR	743815	IdentifierDeclType	RConfigNode *		743810	0					
ANR	743816	Identifier	node		743810	1					
ANR	743817	AssignmentExpression	* node = ( RConfigNode * ) data		743810	2		=			
ANR	743818	Identifier	node		743810	0					
ANR	743819	CastExpression	( RConfigNode * ) data		743810	1					
ANR	743820	CastTarget	RConfigNode *		743810	0					
ANR	743821	Identifier	data		743810	1					
ANR	743822	IfStatement	"if ( ! strcmp ( node -> value , ""help"" ) || * node -> value == '?' )"		743810	1					
ANR	743823	Condition	"! strcmp ( node -> value , ""help"" ) || * node -> value == '?'"	2130:5:58334:58385	743810	0	True				
ANR	743824	OrExpression	"! strcmp ( node -> value , ""help"" ) || * node -> value == '?'"		743810	0		||			
ANR	743825	UnaryOperationExpression	"! strcmp ( node -> value , ""help"" )"		743810	0					
ANR	743826	UnaryOperator	!		743810	0					
ANR	743827	CallExpression	"strcmp ( node -> value , ""help"" )"		743810	1					
ANR	743828	Callee	strcmp		743810	0					
ANR	743829	Identifier	strcmp		743810	0					
ANR	743830	ArgumentList	node -> value		743810	1					
ANR	743831	Argument	node -> value		743810	0					
ANR	743832	PtrMemberAccess	node -> value		743810	0					
ANR	743833	Identifier	node		743810	0					
ANR	743834	Identifier	value		743810	1					
ANR	743835	Argument	"""help"""		743810	1					
ANR	743836	PrimaryExpression	"""help"""		743810	0					
ANR	743837	EqualityExpression	* node -> value == '?'		743810	1		==			
ANR	743838	UnaryOperationExpression	* node -> value		743810	0					
ANR	743839	UnaryOperator	*		743810	0					
ANR	743840	PtrMemberAccess	node -> value		743810	1					
ANR	743841	Identifier	node		743810	0					
ANR	743842	Identifier	value		743810	1					
ANR	743843	PrimaryExpression	'?'		743810	1					
ANR	743844	CompoundStatement		3:59:102:102	743810	1					
ANR	743845	ExpressionStatement	print_node_options ( node )	2131:2:58392:58417	743810	0	True				
ANR	743846	CallExpression	print_node_options ( node )		743810	0					
ANR	743847	Callee	print_node_options		743810	0					
ANR	743848	Identifier	print_node_options		743810	0					
ANR	743849	ArgumentList	node		743810	1					
ANR	743850	Argument	node		743810	0					
ANR	743851	Identifier	node		743810	0					
ANR	743852	ReturnStatement	return false ;	2132:2:58421:58433	743810	1	True				
ANR	743853	Identifier	false		743810	0					
ANR	743854	ReturnStatement	return true ;	2134:1:58439:58450	743810	2	True				
ANR	743855	Identifier	true		743810	0					
ANR	743856	ReturnType	static bool		743810	1					
ANR	743857	Identifier	cb_scrnkey		743810	2					
ANR	743858	ParameterList	"void * user , void * data"		743810	3					
ANR	743859	Parameter	void * user	2128:23:58261:58270	743810	0	True				
ANR	743860	ParameterType	void *		743810	0					
ANR	743861	Identifier	user		743810	1					
ANR	743862	Parameter	void * data	2128:35:58273:58282	743810	1	True				
ANR	743863	ParameterType	void *		743810	0					
ANR	743864	Identifier	data		743810	1					
ANR	743865	CFGEntryNode	ENTRY		743810		True				
ANR	743866	CFGExitNode	EXIT		743810		True				
ANR	743867	Symbol	strcmp		743810						
ANR	743868	Symbol	node		743810						
ANR	743869	Symbol	* node -> value		743810						
ANR	743870	Symbol	data		743810						
ANR	743871	Symbol	* * node		743810						
ANR	743872	Symbol	false		743810						
ANR	743873	Symbol	true		743810						
ANR	743874	Symbol	* node		743810						
ANR	743875	Symbol	user		743810						
ANR	743876	Symbol	node -> value		743810						
ANR	743877	Function	cb_scr_histblock	2137:0:58455:58639							
ANR	743878	FunctionDef	"cb_scr_histblock (void * user , void * data)"		743877	0					
ANR	743879	CompoundStatement		2137:53:58508:58639	743877	0					
ANR	743880	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2138:1:58511:58539	743877	0	True				
ANR	743881	IdentifierDecl	* core = ( RCore * ) user		743877	0					
ANR	743882	IdentifierDeclType	RCore *		743877	0					
ANR	743883	Identifier	core		743877	1					
ANR	743884	AssignmentExpression	* core = ( RCore * ) user		743877	2		=			
ANR	743885	Identifier	core		743877	0					
ANR	743886	CastExpression	( RCore * ) user		743877	1					
ANR	743887	CastTarget	RCore *		743877	0					
ANR	743888	Identifier	user		743877	1					
ANR	743889	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2139:1:58542:58582	743877	1	True				
ANR	743890	IdentifierDecl	* node = ( RConfigNode * ) data		743877	0					
ANR	743891	IdentifierDeclType	RConfigNode *		743877	0					
ANR	743892	Identifier	node		743877	1					
ANR	743893	AssignmentExpression	* node = ( RConfigNode * ) data		743877	2		=			
ANR	743894	Identifier	node		743877	0					
ANR	743895	CastExpression	( RConfigNode * ) data		743877	1					
ANR	743896	CastTarget	RConfigNode *		743877	0					
ANR	743897	Identifier	data		743877	1					
ANR	743898	ExpressionStatement	core -> print -> histblock = node -> i_value	2140:1:58585:58623	743877	2	True				
ANR	743899	AssignmentExpression	core -> print -> histblock = node -> i_value		743877	0		=			
ANR	743900	PtrMemberAccess	core -> print -> histblock		743877	0					
ANR	743901	PtrMemberAccess	core -> print		743877	0					
ANR	743902	Identifier	core		743877	0					
ANR	743903	Identifier	print		743877	1					
ANR	743904	Identifier	histblock		743877	1					
ANR	743905	PtrMemberAccess	node -> i_value		743877	1					
ANR	743906	Identifier	node		743877	0					
ANR	743907	Identifier	i_value		743877	1					
ANR	743908	ReturnStatement	return true ;	2141:1:58626:58637	743877	3	True				
ANR	743909	Identifier	true		743877	0					
ANR	743910	ReturnType	static bool		743877	1					
ANR	743911	Identifier	cb_scr_histblock		743877	2					
ANR	743912	ParameterList	"void * user , void * data"		743877	3					
ANR	743913	Parameter	void * user	2137:29:58484:58493	743877	0	True				
ANR	743914	ParameterType	void *		743877	0					
ANR	743915	Identifier	user		743877	1					
ANR	743916	Parameter	void * data	2137:41:58496:58505	743877	1	True				
ANR	743917	ParameterType	void *		743877	0					
ANR	743918	Identifier	data		743877	1					
ANR	743919	CFGEntryNode	ENTRY		743877		True				
ANR	743920	CFGExitNode	EXIT		743877		True				
ANR	743921	Symbol	core		743877						
ANR	743922	Symbol	node		743877						
ANR	743923	Symbol	* core -> print		743877						
ANR	743924	Symbol	data		743877						
ANR	743925	Symbol	* core		743877						
ANR	743926	Symbol	true		743877						
ANR	743927	Symbol	* node		743877						
ANR	743928	Symbol	core -> print -> histblock		743877						
ANR	743929	Symbol	core -> print		743877						
ANR	743930	Symbol	user		743877						
ANR	743931	Symbol	* * core		743877						
ANR	743932	Symbol	node -> i_value		743877						
ANR	743933	Function	cb_scrprompt	2144:0:58642:58866							
ANR	743934	FunctionDef	"cb_scrprompt (void * user , void * data)"		743933	0					
ANR	743935	CompoundStatement		2144:49:58691:58866	743933	0					
ANR	743936	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2145:1:58694:58721	743933	0	True				
ANR	743937	IdentifierDecl	* core = ( RCore * ) user		743933	0					
ANR	743938	IdentifierDeclType	RCore *		743933	0					
ANR	743939	Identifier	core		743933	1					
ANR	743940	AssignmentExpression	* core = ( RCore * ) user		743933	2		=			
ANR	743941	Identifier	core		743933	0					
ANR	743942	CastExpression	( RCore * ) user		743933	1					
ANR	743943	CastTarget	RCore *		743933	0					
ANR	743944	Identifier	user		743933	1					
ANR	743945	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2146:1:58724:58764	743933	1	True				
ANR	743946	IdentifierDecl	* node = ( RConfigNode * ) data		743933	0					
ANR	743947	IdentifierDeclType	RConfigNode *		743933	0					
ANR	743948	Identifier	node		743933	1					
ANR	743949	AssignmentExpression	* node = ( RConfigNode * ) data		743933	2		=			
ANR	743950	Identifier	node		743933	0					
ANR	743951	CastExpression	( RConfigNode * ) data		743933	1					
ANR	743952	CastTarget	RConfigNode *		743933	0					
ANR	743953	Identifier	data		743933	1					
ANR	743954	ExpressionStatement	core -> print -> scr_prompt = node -> i_value	2147:1:58767:58806	743933	2	True				
ANR	743955	AssignmentExpression	core -> print -> scr_prompt = node -> i_value		743933	0		=			
ANR	743956	PtrMemberAccess	core -> print -> scr_prompt		743933	0					
ANR	743957	PtrMemberAccess	core -> print		743933	0					
ANR	743958	Identifier	core		743933	0					
ANR	743959	Identifier	print		743933	1					
ANR	743960	Identifier	scr_prompt		743933	1					
ANR	743961	PtrMemberAccess	node -> i_value		743933	1					
ANR	743962	Identifier	node		743933	0					
ANR	743963	Identifier	i_value		743933	1					
ANR	743964	ExpressionStatement	r_line_singleton ( ) -> echo = node -> i_value	2148:1:58809:58850	743933	3	True				
ANR	743965	AssignmentExpression	r_line_singleton ( ) -> echo = node -> i_value		743933	0		=			
ANR	743966	PtrMemberAccess	r_line_singleton ( ) -> echo		743933	0					
ANR	743967	CallExpression	r_line_singleton ( )		743933	0					
ANR	743968	Callee	r_line_singleton		743933	0					
ANR	743969	Identifier	r_line_singleton		743933	0					
ANR	743970	ArgumentList			743933	1					
ANR	743971	Identifier	echo		743933	1					
ANR	743972	PtrMemberAccess	node -> i_value		743933	1					
ANR	743973	Identifier	node		743933	0					
ANR	743974	Identifier	i_value		743933	1					
ANR	743975	ReturnStatement	return true ;	2149:1:58853:58864	743933	4	True				
ANR	743976	Identifier	true		743933	0					
ANR	743977	ReturnType	static bool		743933	1					
ANR	743978	Identifier	cb_scrprompt		743933	2					
ANR	743979	ParameterList	"void * user , void * data"		743933	3					
ANR	743980	Parameter	void * user	2144:25:58667:58676	743933	0	True				
ANR	743981	ParameterType	void *		743933	0					
ANR	743982	Identifier	user		743933	1					
ANR	743983	Parameter	void * data	2144:37:58679:58688	743933	1	True				
ANR	743984	ParameterType	void *		743933	0					
ANR	743985	Identifier	data		743933	1					
ANR	743986	CFGEntryNode	ENTRY		743933		True				
ANR	743987	CFGExitNode	EXIT		743933		True				
ANR	743988	Symbol	r_line_singleton ( ) -> echo		743933						
ANR	743989	Symbol	data		743933						
ANR	743990	Symbol	r_line_singleton		743933						
ANR	743991	Symbol	* core		743933						
ANR	743992	Symbol	node -> i_value		743933						
ANR	743993	Symbol	core		743933						
ANR	743994	Symbol	node		743933						
ANR	743995	Symbol	* core -> print		743933						
ANR	743996	Symbol	* r_line_singleton		743933						
ANR	743997	Symbol	core -> print -> scr_prompt		743933						
ANR	743998	Symbol	true		743933						
ANR	743999	Symbol	* node		743933						
ANR	744000	Symbol	core -> print		743933						
ANR	744001	Symbol	user		743933						
ANR	744002	Symbol	* * core		743933						
ANR	744003	Function	cb_scrrows	2152:0:58869:59043							
ANR	744004	FunctionDef	"cb_scrrows (void * user , void * data)"		744003	0					
ANR	744005	CompoundStatement		2152:47:58916:59043	744003	0					
ANR	744006	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2153:1:58919:58958	744003	0	True				
ANR	744007	IdentifierDecl	* node = ( RConfigNode * ) data		744003	0					
ANR	744008	IdentifierDeclType	RConfigNode *		744003	0					
ANR	744009	Identifier	node		744003	1					
ANR	744010	AssignmentExpression	* node = ( RConfigNode * ) data		744003	2		=			
ANR	744011	Identifier	node		744003	0					
ANR	744012	CastExpression	( RConfigNode * ) data		744003	1					
ANR	744013	CastTarget	RConfigNode *		744003	0					
ANR	744014	Identifier	data		744003	1					
ANR	744015	IdentifierDeclStatement	int n = atoi ( node -> value ) ;	2154:1:58961:58987	744003	1	True				
ANR	744016	IdentifierDecl	n = atoi ( node -> value )		744003	0					
ANR	744017	IdentifierDeclType	int		744003	0					
ANR	744018	Identifier	n		744003	1					
ANR	744019	AssignmentExpression	n = atoi ( node -> value )		744003	2		=			
ANR	744020	Identifier	n		744003	0					
ANR	744021	CallExpression	atoi ( node -> value )		744003	1					
ANR	744022	Callee	atoi		744003	0					
ANR	744023	Identifier	atoi		744003	0					
ANR	744024	ArgumentList	node -> value		744003	1					
ANR	744025	Argument	node -> value		744003	0					
ANR	744026	PtrMemberAccess	node -> value		744003	0					
ANR	744027	Identifier	node		744003	0					
ANR	744028	Identifier	value		744003	1					
ANR	744029	ExpressionStatement	( ( RCore * ) user ) -> cons -> force_rows = n	2155:1:58990:59027	744003	2	True				
ANR	744030	AssignmentExpression	( ( RCore * ) user ) -> cons -> force_rows = n		744003	0		=			
ANR	744031	PtrMemberAccess	( ( RCore * ) user ) -> cons -> force_rows		744003	0					
ANR	744032	PtrMemberAccess	( ( RCore * ) user ) -> cons		744003	0					
ANR	744033	CastExpression	( RCore * ) user		744003	0					
ANR	744034	CastTarget	RCore *		744003	0					
ANR	744035	Identifier	user		744003	1					
ANR	744036	Identifier	cons		744003	1					
ANR	744037	Identifier	force_rows		744003	1					
ANR	744038	Identifier	n		744003	1					
ANR	744039	ReturnStatement	return true ;	2156:1:59030:59041	744003	3	True				
ANR	744040	Identifier	true		744003	0					
ANR	744041	ReturnType	static bool		744003	1					
ANR	744042	Identifier	cb_scrrows		744003	2					
ANR	744043	ParameterList	"void * user , void * data"		744003	3					
ANR	744044	Parameter	void * user	2152:23:58892:58901	744003	0	True				
ANR	744045	ParameterType	void *		744003	0					
ANR	744046	Identifier	user		744003	1					
ANR	744047	Parameter	void * data	2152:35:58904:58913	744003	1	True				
ANR	744048	ParameterType	void *		744003	0					
ANR	744049	Identifier	data		744003	1					
ANR	744050	CFGEntryNode	ENTRY		744003		True				
ANR	744051	CFGExitNode	EXIT		744003		True				
ANR	744052	Symbol	atoi		744003						
ANR	744053	Symbol	( ( RCore * ) user ) -> cons -> force_rows		744003						
ANR	744054	Symbol	data		744003						
ANR	744055	Symbol	* user		744003						
ANR	744056	Symbol	* ( ( RCore * ) user ) -> cons		744003						
ANR	744057	Symbol	* * user		744003						
ANR	744058	Symbol	n		744003						
ANR	744059	Symbol	node -> value		744003						
ANR	744060	Symbol	node		744003						
ANR	744061	Symbol	true		744003						
ANR	744062	Symbol	* node		744003						
ANR	744063	Symbol	user		744003						
ANR	744064	Symbol	( ( RCore * ) user ) -> cons		744003						
ANR	744065	Function	cb_contiguous	2159:0:59046:59228							
ANR	744066	FunctionDef	"cb_contiguous (void * user , void * data)"		744065	0					
ANR	744067	CompoundStatement		2159:50:59096:59228	744065	0					
ANR	744068	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2160:1:59099:59126	744065	0	True				
ANR	744069	IdentifierDecl	* core = ( RCore * ) user		744065	0					
ANR	744070	IdentifierDeclType	RCore *		744065	0					
ANR	744071	Identifier	core		744065	1					
ANR	744072	AssignmentExpression	* core = ( RCore * ) user		744065	2		=			
ANR	744073	Identifier	core		744065	0					
ANR	744074	CastExpression	( RCore * ) user		744065	1					
ANR	744075	CastTarget	RCore *		744065	0					
ANR	744076	Identifier	user		744065	1					
ANR	744077	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2161:1:59129:59169	744065	1	True				
ANR	744078	IdentifierDecl	* node = ( RConfigNode * ) data		744065	0					
ANR	744079	IdentifierDeclType	RConfigNode *		744065	0					
ANR	744080	Identifier	node		744065	1					
ANR	744081	AssignmentExpression	* node = ( RConfigNode * ) data		744065	2		=			
ANR	744082	Identifier	node		744065	0					
ANR	744083	CastExpression	( RConfigNode * ) data		744065	1					
ANR	744084	CastTarget	RConfigNode *		744065	0					
ANR	744085	Identifier	data		744065	1					
ANR	744086	ExpressionStatement	core -> search -> contiguous = node -> i_value	2162:1:59172:59212	744065	2	True				
ANR	744087	AssignmentExpression	core -> search -> contiguous = node -> i_value		744065	0		=			
ANR	744088	PtrMemberAccess	core -> search -> contiguous		744065	0					
ANR	744089	PtrMemberAccess	core -> search		744065	0					
ANR	744090	Identifier	core		744065	0					
ANR	744091	Identifier	search		744065	1					
ANR	744092	Identifier	contiguous		744065	1					
ANR	744093	PtrMemberAccess	node -> i_value		744065	1					
ANR	744094	Identifier	node		744065	0					
ANR	744095	Identifier	i_value		744065	1					
ANR	744096	ReturnStatement	return true ;	2163:1:59215:59226	744065	3	True				
ANR	744097	Identifier	true		744065	0					
ANR	744098	ReturnType	static bool		744065	1					
ANR	744099	Identifier	cb_contiguous		744065	2					
ANR	744100	ParameterList	"void * user , void * data"		744065	3					
ANR	744101	Parameter	void * user	2159:26:59072:59081	744065	0	True				
ANR	744102	ParameterType	void *		744065	0					
ANR	744103	Identifier	user		744065	1					
ANR	744104	Parameter	void * data	2159:38:59084:59093	744065	1	True				
ANR	744105	ParameterType	void *		744065	0					
ANR	744106	Identifier	data		744065	1					
ANR	744107	CFGEntryNode	ENTRY		744065		True				
ANR	744108	CFGExitNode	EXIT		744065		True				
ANR	744109	Symbol	core		744065						
ANR	744110	Symbol	node		744065						
ANR	744111	Symbol	data		744065						
ANR	744112	Symbol	* core		744065						
ANR	744113	Symbol	true		744065						
ANR	744114	Symbol	core -> search -> contiguous		744065						
ANR	744115	Symbol	* node		744065						
ANR	744116	Symbol	* core -> search		744065						
ANR	744117	Symbol	user		744065						
ANR	744118	Symbol	core -> search		744065						
ANR	744119	Symbol	* * core		744065						
ANR	744120	Symbol	node -> i_value		744065						
ANR	744121	Function	cb_searchalign	2166:0:59231:59448							
ANR	744122	FunctionDef	"cb_searchalign (void * user , void * data)"		744121	0					
ANR	744123	CompoundStatement		2166:51:59282:59448	744121	0					
ANR	744124	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2167:1:59285:59312	744121	0	True				
ANR	744125	IdentifierDecl	* core = ( RCore * ) user		744121	0					
ANR	744126	IdentifierDeclType	RCore *		744121	0					
ANR	744127	Identifier	core		744121	1					
ANR	744128	AssignmentExpression	* core = ( RCore * ) user		744121	2		=			
ANR	744129	Identifier	core		744121	0					
ANR	744130	CastExpression	( RCore * ) user		744121	1					
ANR	744131	CastTarget	RCore *		744121	0					
ANR	744132	Identifier	user		744121	1					
ANR	744133	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2168:1:59315:59355	744121	1	True				
ANR	744134	IdentifierDecl	* node = ( RConfigNode * ) data		744121	0					
ANR	744135	IdentifierDeclType	RConfigNode *		744121	0					
ANR	744136	Identifier	node		744121	1					
ANR	744137	AssignmentExpression	* node = ( RConfigNode * ) data		744121	2		=			
ANR	744138	Identifier	node		744121	0					
ANR	744139	CastExpression	( RConfigNode * ) data		744121	1					
ANR	744140	CastTarget	RConfigNode *		744121	0					
ANR	744141	Identifier	data		744121	1					
ANR	744142	ExpressionStatement	core -> search -> align = node -> i_value	2169:1:59358:59393	744121	2	True				
ANR	744143	AssignmentExpression	core -> search -> align = node -> i_value		744121	0		=			
ANR	744144	PtrMemberAccess	core -> search -> align		744121	0					
ANR	744145	PtrMemberAccess	core -> search		744121	0					
ANR	744146	Identifier	core		744121	0					
ANR	744147	Identifier	search		744121	1					
ANR	744148	Identifier	align		744121	1					
ANR	744149	PtrMemberAccess	node -> i_value		744121	1					
ANR	744150	Identifier	node		744121	0					
ANR	744151	Identifier	i_value		744121	1					
ANR	744152	ExpressionStatement	core -> print -> addrmod = node -> i_value	2170:1:59396:59432	744121	3	True				
ANR	744153	AssignmentExpression	core -> print -> addrmod = node -> i_value		744121	0		=			
ANR	744154	PtrMemberAccess	core -> print -> addrmod		744121	0					
ANR	744155	PtrMemberAccess	core -> print		744121	0					
ANR	744156	Identifier	core		744121	0					
ANR	744157	Identifier	print		744121	1					
ANR	744158	Identifier	addrmod		744121	1					
ANR	744159	PtrMemberAccess	node -> i_value		744121	1					
ANR	744160	Identifier	node		744121	0					
ANR	744161	Identifier	i_value		744121	1					
ANR	744162	ReturnStatement	return true ;	2171:1:59435:59446	744121	4	True				
ANR	744163	Identifier	true		744121	0					
ANR	744164	ReturnType	static bool		744121	1					
ANR	744165	Identifier	cb_searchalign		744121	2					
ANR	744166	ParameterList	"void * user , void * data"		744121	3					
ANR	744167	Parameter	void * user	2166:27:59258:59267	744121	0	True				
ANR	744168	ParameterType	void *		744121	0					
ANR	744169	Identifier	user		744121	1					
ANR	744170	Parameter	void * data	2166:39:59270:59279	744121	1	True				
ANR	744171	ParameterType	void *		744121	0					
ANR	744172	Identifier	data		744121	1					
ANR	744173	CFGEntryNode	ENTRY		744121		True				
ANR	744174	CFGExitNode	EXIT		744121		True				
ANR	744175	Symbol	data		744121						
ANR	744176	Symbol	* core		744121						
ANR	744177	Symbol	* core -> search		744121						
ANR	744178	Symbol	node -> i_value		744121						
ANR	744179	Symbol	core		744121						
ANR	744180	Symbol	node		744121						
ANR	744181	Symbol	* core -> print		744121						
ANR	744182	Symbol	core -> search -> align		744121						
ANR	744183	Symbol	true		744121						
ANR	744184	Symbol	* node		744121						
ANR	744185	Symbol	core -> print -> addrmod		744121						
ANR	744186	Symbol	core -> print		744121						
ANR	744187	Symbol	user		744121						
ANR	744188	Symbol	core -> search		744121						
ANR	744189	Symbol	* * core		744121						
ANR	744190	Function	cb_segoff	2174:0:59451:59732							
ANR	744191	FunctionDef	"cb_segoff (void * user , void * data)"		744190	0					
ANR	744192	CompoundStatement		2174:46:59497:59732	744190	0					
ANR	744193	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2175:1:59500:59528	744190	0	True				
ANR	744194	IdentifierDecl	* core = ( RCore * ) user		744190	0					
ANR	744195	IdentifierDeclType	RCore *		744190	0					
ANR	744196	Identifier	core		744190	1					
ANR	744197	AssignmentExpression	* core = ( RCore * ) user		744190	2		=			
ANR	744198	Identifier	core		744190	0					
ANR	744199	CastExpression	( RCore * ) user		744190	1					
ANR	744200	CastTarget	RCore *		744190	0					
ANR	744201	Identifier	user		744190	1					
ANR	744202	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2176:1:59531:59571	744190	1	True				
ANR	744203	IdentifierDecl	* node = ( RConfigNode * ) data		744190	0					
ANR	744204	IdentifierDeclType	RConfigNode *		744190	0					
ANR	744205	Identifier	node		744190	1					
ANR	744206	AssignmentExpression	* node = ( RConfigNode * ) data		744190	2		=			
ANR	744207	Identifier	node		744190	0					
ANR	744208	CastExpression	( RConfigNode * ) data		744190	1					
ANR	744209	CastTarget	RConfigNode *		744190	0					
ANR	744210	Identifier	data		744190	1					
ANR	744211	IfStatement	if ( node -> i_value )		744190	2					
ANR	744212	Condition	node -> i_value	2177:5:59578:59590	744190	0	True				
ANR	744213	PtrMemberAccess	node -> i_value		744190	0					
ANR	744214	Identifier	node		744190	0					
ANR	744215	Identifier	i_value		744190	1					
ANR	744216	CompoundStatement		4:20:95:95	744190	1					
ANR	744217	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_SEGOFF	2178:2:59597:59639	744190	0	True				
ANR	744218	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_SEGOFF		744190	0		|=			
ANR	744219	PtrMemberAccess	core -> print -> flags		744190	0					
ANR	744220	PtrMemberAccess	core -> print		744190	0					
ANR	744221	Identifier	core		744190	0					
ANR	744222	Identifier	print		744190	1					
ANR	744223	Identifier	flags		744190	1					
ANR	744224	Identifier	R_PRINT_FLAGS_SEGOFF		744190	1					
ANR	744225	ElseStatement	else		744190	0					
ANR	744226	CompoundStatement		6:8:151:151	744190	0					
ANR	744227	ExpressionStatement	core -> print -> flags &= ( ( ( ut32 ) - 1 ) & ( ~R_PRINT_FLAGS_SEGOFF ) )	2180:2:59653:59713	744190	0	True				
ANR	744228	AssignmentExpression	core -> print -> flags &= ( ( ( ut32 ) - 1 ) & ( ~R_PRINT_FLAGS_SEGOFF ) )		744190	0		&=			
ANR	744229	PtrMemberAccess	core -> print -> flags		744190	0					
ANR	744230	PtrMemberAccess	core -> print		744190	0					
ANR	744231	Identifier	core		744190	0					
ANR	744232	Identifier	print		744190	1					
ANR	744233	Identifier	flags		744190	1					
ANR	744234	BitAndExpression	( ( ut32 ) - 1 ) & ( ~R_PRINT_FLAGS_SEGOFF )		744190	1		&			
ANR	744235	CastExpression	( ut32 ) - 1		744190	0					
ANR	744236	CastTarget	ut32		744190	0					
ANR	744237	UnaryOperationExpression	- 1		744190	1					
ANR	744238	UnaryOperator	-		744190	0					
ANR	744239	PrimaryExpression	1		744190	1					
ANR	744240	Identifier	~R_PRINT_FLAGS_SEGOFF		744190	1					
ANR	744241	ReturnStatement	return true ;	2182:1:59719:59730	744190	3	True				
ANR	744242	Identifier	true		744190	0					
ANR	744243	ReturnType	static bool		744190	1					
ANR	744244	Identifier	cb_segoff		744190	2					
ANR	744245	ParameterList	"void * user , void * data"		744190	3					
ANR	744246	Parameter	void * user	2174:22:59473:59482	744190	0	True				
ANR	744247	ParameterType	void *		744190	0					
ANR	744248	Identifier	user		744190	1					
ANR	744249	Parameter	void * data	2174:34:59485:59494	744190	1	True				
ANR	744250	ParameterType	void *		744190	0					
ANR	744251	Identifier	data		744190	1					
ANR	744252	CFGEntryNode	ENTRY		744190		True				
ANR	744253	CFGExitNode	EXIT		744190		True				
ANR	744254	Symbol	~R_PRINT_FLAGS_SEGOFF		744190						
ANR	744255	Symbol	data		744190						
ANR	744256	Symbol	* core		744190						
ANR	744257	Symbol	node -> i_value		744190						
ANR	744258	Symbol	core		744190						
ANR	744259	Symbol	node		744190						
ANR	744260	Symbol	* core -> print		744190						
ANR	744261	Symbol	R_PRINT_FLAGS_SEGOFF		744190						
ANR	744262	Symbol	true		744190						
ANR	744263	Symbol	* node		744190						
ANR	744264	Symbol	core -> print		744190						
ANR	744265	Symbol	user		744190						
ANR	744266	Symbol	core -> print -> flags		744190						
ANR	744267	Symbol	* * core		744190						
ANR	744268	Function	cb_seggrn	2185:0:59735:59988							
ANR	744269	FunctionDef	"cb_seggrn (void * user , void * data)"		744268	0					
ANR	744270	CompoundStatement		2185:46:59781:59988	744268	0					
ANR	744271	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2186:1:59784:59812	744268	0	True				
ANR	744272	IdentifierDecl	* core = ( RCore * ) user		744268	0					
ANR	744273	IdentifierDeclType	RCore *		744268	0					
ANR	744274	Identifier	core		744268	1					
ANR	744275	AssignmentExpression	* core = ( RCore * ) user		744268	2		=			
ANR	744276	Identifier	core		744268	0					
ANR	744277	CastExpression	( RCore * ) user		744268	1					
ANR	744278	CastTarget	RCore *		744268	0					
ANR	744279	Identifier	user		744268	1					
ANR	744280	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2187:1:59815:59855	744268	1	True				
ANR	744281	IdentifierDecl	* node = ( RConfigNode * ) data		744268	0					
ANR	744282	IdentifierDeclType	RConfigNode *		744268	0					
ANR	744283	Identifier	node		744268	1					
ANR	744284	AssignmentExpression	* node = ( RConfigNode * ) data		744268	2		=			
ANR	744285	Identifier	node		744268	0					
ANR	744286	CastExpression	( RConfigNode * ) data		744268	1					
ANR	744287	CastTarget	RConfigNode *		744268	0					
ANR	744288	Identifier	data		744268	1					
ANR	744289	ExpressionStatement	core -> assembler -> seggrn = node -> i_value	2188:1:59858:59897	744268	2	True				
ANR	744290	AssignmentExpression	core -> assembler -> seggrn = node -> i_value		744268	0		=			
ANR	744291	PtrMemberAccess	core -> assembler -> seggrn		744268	0					
ANR	744292	PtrMemberAccess	core -> assembler		744268	0					
ANR	744293	Identifier	core		744268	0					
ANR	744294	Identifier	assembler		744268	1					
ANR	744295	Identifier	seggrn		744268	1					
ANR	744296	PtrMemberAccess	node -> i_value		744268	1					
ANR	744297	Identifier	node		744268	0					
ANR	744298	Identifier	i_value		744268	1					
ANR	744299	ExpressionStatement	core -> anal -> seggrn = node -> i_value	2189:1:59900:59934	744268	3	True				
ANR	744300	AssignmentExpression	core -> anal -> seggrn = node -> i_value		744268	0		=			
ANR	744301	PtrMemberAccess	core -> anal -> seggrn		744268	0					
ANR	744302	PtrMemberAccess	core -> anal		744268	0					
ANR	744303	Identifier	core		744268	0					
ANR	744304	Identifier	anal		744268	1					
ANR	744305	Identifier	seggrn		744268	1					
ANR	744306	PtrMemberAccess	node -> i_value		744268	1					
ANR	744307	Identifier	node		744268	0					
ANR	744308	Identifier	i_value		744268	1					
ANR	744309	ExpressionStatement	core -> print -> seggrn = node -> i_value	2190:1:59937:59972	744268	4	True				
ANR	744310	AssignmentExpression	core -> print -> seggrn = node -> i_value		744268	0		=			
ANR	744311	PtrMemberAccess	core -> print -> seggrn		744268	0					
ANR	744312	PtrMemberAccess	core -> print		744268	0					
ANR	744313	Identifier	core		744268	0					
ANR	744314	Identifier	print		744268	1					
ANR	744315	Identifier	seggrn		744268	1					
ANR	744316	PtrMemberAccess	node -> i_value		744268	1					
ANR	744317	Identifier	node		744268	0					
ANR	744318	Identifier	i_value		744268	1					
ANR	744319	ReturnStatement	return true ;	2191:1:59975:59986	744268	5	True				
ANR	744320	Identifier	true		744268	0					
ANR	744321	ReturnType	static bool		744268	1					
ANR	744322	Identifier	cb_seggrn		744268	2					
ANR	744323	ParameterList	"void * user , void * data"		744268	3					
ANR	744324	Parameter	void * user	2185:22:59757:59766	744268	0	True				
ANR	744325	ParameterType	void *		744268	0					
ANR	744326	Identifier	user		744268	1					
ANR	744327	Parameter	void * data	2185:34:59769:59778	744268	1	True				
ANR	744328	ParameterType	void *		744268	0					
ANR	744329	Identifier	data		744268	1					
ANR	744330	CFGEntryNode	ENTRY		744268		True				
ANR	744331	CFGExitNode	EXIT		744268		True				
ANR	744332	Symbol	core -> assembler -> seggrn		744268						
ANR	744333	Symbol	data		744268						
ANR	744334	Symbol	* core		744268						
ANR	744335	Symbol	core -> assembler		744268						
ANR	744336	Symbol	core -> anal		744268						
ANR	744337	Symbol	node -> i_value		744268						
ANR	744338	Symbol	* core -> assembler		744268						
ANR	744339	Symbol	core		744268						
ANR	744340	Symbol	node		744268						
ANR	744341	Symbol	core -> anal -> seggrn		744268						
ANR	744342	Symbol	* core -> print		744268						
ANR	744343	Symbol	* core -> anal		744268						
ANR	744344	Symbol	core -> print -> seggrn		744268						
ANR	744345	Symbol	true		744268						
ANR	744346	Symbol	* node		744268						
ANR	744347	Symbol	core -> print		744268						
ANR	744348	Symbol	user		744268						
ANR	744349	Symbol	* * core		744268						
ANR	744350	Function	cb_stopthreads	2195:0:59992:60179							
ANR	744351	FunctionDef	"cb_stopthreads (void * user , void * data)"		744350	0					
ANR	744352	CompoundStatement		2195:51:60043:60179	744350	0					
ANR	744353	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2196:1:60046:60074	744350	0	True				
ANR	744354	IdentifierDecl	* core = ( RCore * ) user		744350	0					
ANR	744355	IdentifierDeclType	RCore *		744350	0					
ANR	744356	Identifier	core		744350	1					
ANR	744357	AssignmentExpression	* core = ( RCore * ) user		744350	2		=			
ANR	744358	Identifier	core		744350	0					
ANR	744359	CastExpression	( RCore * ) user		744350	1					
ANR	744360	CastTarget	RCore *		744350	0					
ANR	744361	Identifier	user		744350	1					
ANR	744362	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2197:1:60077:60117	744350	1	True				
ANR	744363	IdentifierDecl	* node = ( RConfigNode * ) data		744350	0					
ANR	744364	IdentifierDeclType	RConfigNode *		744350	0					
ANR	744365	Identifier	node		744350	1					
ANR	744366	AssignmentExpression	* node = ( RConfigNode * ) data		744350	2		=			
ANR	744367	Identifier	node		744350	0					
ANR	744368	CastExpression	( RConfigNode * ) data		744350	1					
ANR	744369	CastTarget	RConfigNode *		744350	0					
ANR	744370	Identifier	data		744350	1					
ANR	744371	ExpressionStatement	core -> dbg -> stop_all_threads = node -> i_value	2198:1:60120:60163	744350	2	True				
ANR	744372	AssignmentExpression	core -> dbg -> stop_all_threads = node -> i_value		744350	0		=			
ANR	744373	PtrMemberAccess	core -> dbg -> stop_all_threads		744350	0					
ANR	744374	PtrMemberAccess	core -> dbg		744350	0					
ANR	744375	Identifier	core		744350	0					
ANR	744376	Identifier	dbg		744350	1					
ANR	744377	Identifier	stop_all_threads		744350	1					
ANR	744378	PtrMemberAccess	node -> i_value		744350	1					
ANR	744379	Identifier	node		744350	0					
ANR	744380	Identifier	i_value		744350	1					
ANR	744381	ReturnStatement	return true ;	2199:1:60166:60177	744350	3	True				
ANR	744382	Identifier	true		744350	0					
ANR	744383	ReturnType	static bool		744350	1					
ANR	744384	Identifier	cb_stopthreads		744350	2					
ANR	744385	ParameterList	"void * user , void * data"		744350	3					
ANR	744386	Parameter	void * user	2195:27:60019:60028	744350	0	True				
ANR	744387	ParameterType	void *		744350	0					
ANR	744388	Identifier	user		744350	1					
ANR	744389	Parameter	void * data	2195:39:60031:60040	744350	1	True				
ANR	744390	ParameterType	void *		744350	0					
ANR	744391	Identifier	data		744350	1					
ANR	744392	CFGEntryNode	ENTRY		744350		True				
ANR	744393	CFGExitNode	EXIT		744350		True				
ANR	744394	Symbol	core		744350						
ANR	744395	Symbol	node		744350						
ANR	744396	Symbol	data		744350						
ANR	744397	Symbol	* core		744350						
ANR	744398	Symbol	true		744350						
ANR	744399	Symbol	* node		744350						
ANR	744400	Symbol	core -> dbg -> stop_all_threads		744350						
ANR	744401	Symbol	user		744350						
ANR	744402	Symbol	* core -> dbg		744350						
ANR	744403	Symbol	* * core		744350						
ANR	744404	Symbol	core -> dbg		744350						
ANR	744405	Symbol	node -> i_value		744350						
ANR	744406	Function	cb_scr_prompt_popup	2202:0:60182:60383							
ANR	744407	FunctionDef	"cb_scr_prompt_popup (void * user , void * data)"		744406	0					
ANR	744408	CompoundStatement		2202:56:60238:60383	744406	0					
ANR	744409	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2203:1:60241:60269	744406	0	True				
ANR	744410	IdentifierDecl	* core = ( RCore * ) user		744406	0					
ANR	744411	IdentifierDeclType	RCore *		744406	0					
ANR	744412	Identifier	core		744406	1					
ANR	744413	AssignmentExpression	* core = ( RCore * ) user		744406	2		=			
ANR	744414	Identifier	core		744406	0					
ANR	744415	CastExpression	( RCore * ) user		744406	1					
ANR	744416	CastTarget	RCore *		744406	0					
ANR	744417	Identifier	user		744406	1					
ANR	744418	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2204:1:60272:60312	744406	1	True				
ANR	744419	IdentifierDecl	* node = ( RConfigNode * ) data		744406	0					
ANR	744420	IdentifierDeclType	RConfigNode *		744406	0					
ANR	744421	Identifier	node		744406	1					
ANR	744422	AssignmentExpression	* node = ( RConfigNode * ) data		744406	2		=			
ANR	744423	Identifier	node		744406	0					
ANR	744424	CastExpression	( RConfigNode * ) data		744406	1					
ANR	744425	CastTarget	RConfigNode *		744406	0					
ANR	744426	Identifier	data		744406	1					
ANR	744427	ExpressionStatement	core -> cons -> show_autocomplete_widget = node -> i_value	2205:1:60315:60367	744406	2	True				
ANR	744428	AssignmentExpression	core -> cons -> show_autocomplete_widget = node -> i_value		744406	0		=			
ANR	744429	PtrMemberAccess	core -> cons -> show_autocomplete_widget		744406	0					
ANR	744430	PtrMemberAccess	core -> cons		744406	0					
ANR	744431	Identifier	core		744406	0					
ANR	744432	Identifier	cons		744406	1					
ANR	744433	Identifier	show_autocomplete_widget		744406	1					
ANR	744434	PtrMemberAccess	node -> i_value		744406	1					
ANR	744435	Identifier	node		744406	0					
ANR	744436	Identifier	i_value		744406	1					
ANR	744437	ReturnStatement	return true ;	2206:1:60370:60381	744406	3	True				
ANR	744438	Identifier	true		744406	0					
ANR	744439	ReturnType	static bool		744406	1					
ANR	744440	Identifier	cb_scr_prompt_popup		744406	2					
ANR	744441	ParameterList	"void * user , void * data"		744406	3					
ANR	744442	Parameter	void * user	2202:32:60214:60223	744406	0	True				
ANR	744443	ParameterType	void *		744406	0					
ANR	744444	Identifier	user		744406	1					
ANR	744445	Parameter	void * data	2202:44:60226:60235	744406	1	True				
ANR	744446	ParameterType	void *		744406	0					
ANR	744447	Identifier	data		744406	1					
ANR	744448	CFGEntryNode	ENTRY		744406		True				
ANR	744449	CFGExitNode	EXIT		744406		True				
ANR	744450	Symbol	core		744406						
ANR	744451	Symbol	node		744406						
ANR	744452	Symbol	core -> cons		744406						
ANR	744453	Symbol	data		744406						
ANR	744454	Symbol	* core -> cons		744406						
ANR	744455	Symbol	core -> cons -> show_autocomplete_widget		744406						
ANR	744456	Symbol	* core		744406						
ANR	744457	Symbol	true		744406						
ANR	744458	Symbol	* node		744406						
ANR	744459	Symbol	user		744406						
ANR	744460	Symbol	* * core		744406						
ANR	744461	Symbol	node -> i_value		744406						
ANR	744462	Function	cb_swstep	2209:0:60386:60558							
ANR	744463	FunctionDef	"cb_swstep (void * user , void * data)"		744462	0					
ANR	744464	CompoundStatement		2209:46:60432:60558	744462	0					
ANR	744465	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2210:1:60435:60463	744462	0	True				
ANR	744466	IdentifierDecl	* core = ( RCore * ) user		744462	0					
ANR	744467	IdentifierDeclType	RCore *		744462	0					
ANR	744468	Identifier	core		744462	1					
ANR	744469	AssignmentExpression	* core = ( RCore * ) user		744462	2		=			
ANR	744470	Identifier	core		744462	0					
ANR	744471	CastExpression	( RCore * ) user		744462	1					
ANR	744472	CastTarget	RCore *		744462	0					
ANR	744473	Identifier	user		744462	1					
ANR	744474	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2211:1:60466:60506	744462	1	True				
ANR	744475	IdentifierDecl	* node = ( RConfigNode * ) data		744462	0					
ANR	744476	IdentifierDeclType	RConfigNode *		744462	0					
ANR	744477	Identifier	node		744462	1					
ANR	744478	AssignmentExpression	* node = ( RConfigNode * ) data		744462	2		=			
ANR	744479	Identifier	node		744462	0					
ANR	744480	CastExpression	( RConfigNode * ) data		744462	1					
ANR	744481	CastTarget	RConfigNode *		744462	0					
ANR	744482	Identifier	data		744462	1					
ANR	744483	ExpressionStatement	core -> dbg -> swstep = node -> i_value	2212:1:60509:60542	744462	2	True				
ANR	744484	AssignmentExpression	core -> dbg -> swstep = node -> i_value		744462	0		=			
ANR	744485	PtrMemberAccess	core -> dbg -> swstep		744462	0					
ANR	744486	PtrMemberAccess	core -> dbg		744462	0					
ANR	744487	Identifier	core		744462	0					
ANR	744488	Identifier	dbg		744462	1					
ANR	744489	Identifier	swstep		744462	1					
ANR	744490	PtrMemberAccess	node -> i_value		744462	1					
ANR	744491	Identifier	node		744462	0					
ANR	744492	Identifier	i_value		744462	1					
ANR	744493	ReturnStatement	return true ;	2213:1:60545:60556	744462	3	True				
ANR	744494	Identifier	true		744462	0					
ANR	744495	ReturnType	static bool		744462	1					
ANR	744496	Identifier	cb_swstep		744462	2					
ANR	744497	ParameterList	"void * user , void * data"		744462	3					
ANR	744498	Parameter	void * user	2209:22:60408:60417	744462	0	True				
ANR	744499	ParameterType	void *		744462	0					
ANR	744500	Identifier	user		744462	1					
ANR	744501	Parameter	void * data	2209:34:60420:60429	744462	1	True				
ANR	744502	ParameterType	void *		744462	0					
ANR	744503	Identifier	data		744462	1					
ANR	744504	CFGEntryNode	ENTRY		744462		True				
ANR	744505	CFGExitNode	EXIT		744462		True				
ANR	744506	Symbol	core		744462						
ANR	744507	Symbol	node		744462						
ANR	744508	Symbol	data		744462						
ANR	744509	Symbol	* core		744462						
ANR	744510	Symbol	true		744462						
ANR	744511	Symbol	* node		744462						
ANR	744512	Symbol	user		744462						
ANR	744513	Symbol	core -> dbg -> swstep		744462						
ANR	744514	Symbol	* core -> dbg		744462						
ANR	744515	Symbol	* * core		744462						
ANR	744516	Symbol	node -> i_value		744462						
ANR	744517	Symbol	core -> dbg		744462						
ANR	744518	Function	cb_consbreak	2216:0:60561:60739							
ANR	744519	FunctionDef	"cb_consbreak (void * user , void * data)"		744518	0					
ANR	744520	CompoundStatement		2216:49:60610:60739	744518	0					
ANR	744521	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2217:1:60613:60641	744518	0	True				
ANR	744522	IdentifierDecl	* core = ( RCore * ) user		744518	0					
ANR	744523	IdentifierDeclType	RCore *		744518	0					
ANR	744524	Identifier	core		744518	1					
ANR	744525	AssignmentExpression	* core = ( RCore * ) user		744518	2		=			
ANR	744526	Identifier	core		744518	0					
ANR	744527	CastExpression	( RCore * ) user		744518	1					
ANR	744528	CastTarget	RCore *		744518	0					
ANR	744529	Identifier	user		744518	1					
ANR	744530	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2218:1:60644:60684	744518	1	True				
ANR	744531	IdentifierDecl	* node = ( RConfigNode * ) data		744518	0					
ANR	744532	IdentifierDeclType	RConfigNode *		744518	0					
ANR	744533	Identifier	node		744518	1					
ANR	744534	AssignmentExpression	* node = ( RConfigNode * ) data		744518	2		=			
ANR	744535	Identifier	node		744518	0					
ANR	744536	CastExpression	( RConfigNode * ) data		744518	1					
ANR	744537	CastTarget	RConfigNode *		744518	0					
ANR	744538	Identifier	data		744518	1					
ANR	744539	ExpressionStatement	core -> dbg -> consbreak = node -> i_value	2219:1:60687:60723	744518	2	True				
ANR	744540	AssignmentExpression	core -> dbg -> consbreak = node -> i_value		744518	0		=			
ANR	744541	PtrMemberAccess	core -> dbg -> consbreak		744518	0					
ANR	744542	PtrMemberAccess	core -> dbg		744518	0					
ANR	744543	Identifier	core		744518	0					
ANR	744544	Identifier	dbg		744518	1					
ANR	744545	Identifier	consbreak		744518	1					
ANR	744546	PtrMemberAccess	node -> i_value		744518	1					
ANR	744547	Identifier	node		744518	0					
ANR	744548	Identifier	i_value		744518	1					
ANR	744549	ReturnStatement	return true ;	2220:1:60726:60737	744518	3	True				
ANR	744550	Identifier	true		744518	0					
ANR	744551	ReturnType	static bool		744518	1					
ANR	744552	Identifier	cb_consbreak		744518	2					
ANR	744553	ParameterList	"void * user , void * data"		744518	3					
ANR	744554	Parameter	void * user	2216:25:60586:60595	744518	0	True				
ANR	744555	ParameterType	void *		744518	0					
ANR	744556	Identifier	user		744518	1					
ANR	744557	Parameter	void * data	2216:37:60598:60607	744518	1	True				
ANR	744558	ParameterType	void *		744518	0					
ANR	744559	Identifier	data		744518	1					
ANR	744560	CFGEntryNode	ENTRY		744518		True				
ANR	744561	CFGExitNode	EXIT		744518		True				
ANR	744562	Symbol	core		744518						
ANR	744563	Symbol	node		744518						
ANR	744564	Symbol	data		744518						
ANR	744565	Symbol	core -> dbg -> consbreak		744518						
ANR	744566	Symbol	* core		744518						
ANR	744567	Symbol	true		744518						
ANR	744568	Symbol	* node		744518						
ANR	744569	Symbol	user		744518						
ANR	744570	Symbol	* core -> dbg		744518						
ANR	744571	Symbol	* * core		744518						
ANR	744572	Symbol	core -> dbg		744518						
ANR	744573	Symbol	node -> i_value		744518						
ANR	744574	Function	cb_teefile	2223:0:60742:60893							
ANR	744575	FunctionDef	"cb_teefile (void * user , void * data)"		744574	0					
ANR	744576	CompoundStatement		2223:47:60789:60893	744574	0					
ANR	744577	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2224:1:60792:60832	744574	0	True				
ANR	744578	IdentifierDecl	* node = ( RConfigNode * ) data		744574	0					
ANR	744579	IdentifierDeclType	RConfigNode *		744574	0					
ANR	744580	Identifier	node		744574	1					
ANR	744581	AssignmentExpression	* node = ( RConfigNode * ) data		744574	2		=			
ANR	744582	Identifier	node		744574	0					
ANR	744583	CastExpression	( RConfigNode * ) data		744574	1					
ANR	744584	CastTarget	RConfigNode *		744574	0					
ANR	744585	Identifier	data		744574	1					
ANR	744586	ExpressionStatement	r_cons_singleton ( ) -> teefile = node -> value	2225:1:60835:60877	744574	1	True				
ANR	744587	AssignmentExpression	r_cons_singleton ( ) -> teefile = node -> value		744574	0		=			
ANR	744588	PtrMemberAccess	r_cons_singleton ( ) -> teefile		744574	0					
ANR	744589	CallExpression	r_cons_singleton ( )		744574	0					
ANR	744590	Callee	r_cons_singleton		744574	0					
ANR	744591	Identifier	r_cons_singleton		744574	0					
ANR	744592	ArgumentList			744574	1					
ANR	744593	Identifier	teefile		744574	1					
ANR	744594	PtrMemberAccess	node -> value		744574	1					
ANR	744595	Identifier	node		744574	0					
ANR	744596	Identifier	value		744574	1					
ANR	744597	ReturnStatement	return true ;	2226:1:60880:60891	744574	2	True				
ANR	744598	Identifier	true		744574	0					
ANR	744599	ReturnType	static bool		744574	1					
ANR	744600	Identifier	cb_teefile		744574	2					
ANR	744601	ParameterList	"void * user , void * data"		744574	3					
ANR	744602	Parameter	void * user	2223:23:60765:60774	744574	0	True				
ANR	744603	ParameterType	void *		744574	0					
ANR	744604	Identifier	user		744574	1					
ANR	744605	Parameter	void * data	2223:35:60777:60786	744574	1	True				
ANR	744606	ParameterType	void *		744574	0					
ANR	744607	Identifier	data		744574	1					
ANR	744608	CFGEntryNode	ENTRY		744574		True				
ANR	744609	CFGExitNode	EXIT		744574		True				
ANR	744610	Symbol	node		744574						
ANR	744611	Symbol	data		744574						
ANR	744612	Symbol	true		744574						
ANR	744613	Symbol	r_cons_singleton		744574						
ANR	744614	Symbol	* node		744574						
ANR	744615	Symbol	r_cons_singleton ( ) -> teefile		744574						
ANR	744616	Symbol	user		744574						
ANR	744617	Symbol	* r_cons_singleton		744574						
ANR	744618	Symbol	node -> value		744574						
ANR	744619	Function	cb_trace	2229:0:60896:61075							
ANR	744620	FunctionDef	"cb_trace (void * user , void * data)"		744619	0					
ANR	744621	CompoundStatement		2229:45:60941:61075	744619	0					
ANR	744622	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2230:1:60944:60972	744619	0	True				
ANR	744623	IdentifierDecl	* core = ( RCore * ) user		744619	0					
ANR	744624	IdentifierDeclType	RCore *		744619	0					
ANR	744625	Identifier	core		744619	1					
ANR	744626	AssignmentExpression	* core = ( RCore * ) user		744619	2		=			
ANR	744627	Identifier	core		744619	0					
ANR	744628	CastExpression	( RCore * ) user		744619	1					
ANR	744629	CastTarget	RCore *		744619	0					
ANR	744630	Identifier	user		744619	1					
ANR	744631	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2231:1:60975:61015	744619	1	True				
ANR	744632	IdentifierDecl	* node = ( RConfigNode * ) data		744619	0					
ANR	744633	IdentifierDeclType	RConfigNode *		744619	0					
ANR	744634	Identifier	node		744619	1					
ANR	744635	AssignmentExpression	* node = ( RConfigNode * ) data		744619	2		=			
ANR	744636	Identifier	node		744619	0					
ANR	744637	CastExpression	( RConfigNode * ) data		744619	1					
ANR	744638	CastTarget	RConfigNode *		744619	0					
ANR	744639	Identifier	data		744619	1					
ANR	744640	ExpressionStatement	core -> dbg -> trace -> enabled = node -> i_value	2232:1:61018:61059	744619	2	True				
ANR	744641	AssignmentExpression	core -> dbg -> trace -> enabled = node -> i_value		744619	0		=			
ANR	744642	PtrMemberAccess	core -> dbg -> trace -> enabled		744619	0					
ANR	744643	PtrMemberAccess	core -> dbg -> trace		744619	0					
ANR	744644	PtrMemberAccess	core -> dbg		744619	0					
ANR	744645	Identifier	core		744619	0					
ANR	744646	Identifier	dbg		744619	1					
ANR	744647	Identifier	trace		744619	1					
ANR	744648	Identifier	enabled		744619	1					
ANR	744649	PtrMemberAccess	node -> i_value		744619	1					
ANR	744650	Identifier	node		744619	0					
ANR	744651	Identifier	i_value		744619	1					
ANR	744652	ReturnStatement	return true ;	2233:1:61062:61073	744619	3	True				
ANR	744653	Identifier	true		744619	0					
ANR	744654	ReturnType	static bool		744619	1					
ANR	744655	Identifier	cb_trace		744619	2					
ANR	744656	ParameterList	"void * user , void * data"		744619	3					
ANR	744657	Parameter	void * user	2229:21:60917:60926	744619	0	True				
ANR	744658	ParameterType	void *		744619	0					
ANR	744659	Identifier	user		744619	1					
ANR	744660	Parameter	void * data	2229:33:60929:60938	744619	1	True				
ANR	744661	ParameterType	void *		744619	0					
ANR	744662	Identifier	data		744619	1					
ANR	744663	CFGEntryNode	ENTRY		744619		True				
ANR	744664	CFGExitNode	EXIT		744619		True				
ANR	744665	Symbol	data		744619						
ANR	744666	Symbol	* core		744619						
ANR	744667	Symbol	* core -> dbg -> trace		744619						
ANR	744668	Symbol	node -> i_value		744619						
ANR	744669	Symbol	core		744619						
ANR	744670	Symbol	node		744619						
ANR	744671	Symbol	* * * core		744619						
ANR	744672	Symbol	core -> dbg -> trace -> enabled		744619						
ANR	744673	Symbol	core -> dbg -> trace		744619						
ANR	744674	Symbol	true		744619						
ANR	744675	Symbol	* node		744619						
ANR	744676	Symbol	user		744619						
ANR	744677	Symbol	* core -> dbg		744619						
ANR	744678	Symbol	* * core		744619						
ANR	744679	Symbol	core -> dbg		744619						
ANR	744680	Symbol	* * core -> dbg		744619						
ANR	744681	Function	cb_tracetag	2236:0:61078:61256							
ANR	744682	FunctionDef	"cb_tracetag (void * user , void * data)"		744681	0					
ANR	744683	CompoundStatement		2236:48:61126:61256	744681	0					
ANR	744684	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2237:1:61129:61157	744681	0	True				
ANR	744685	IdentifierDecl	* core = ( RCore * ) user		744681	0					
ANR	744686	IdentifierDeclType	RCore *		744681	0					
ANR	744687	Identifier	core		744681	1					
ANR	744688	AssignmentExpression	* core = ( RCore * ) user		744681	2		=			
ANR	744689	Identifier	core		744681	0					
ANR	744690	CastExpression	( RCore * ) user		744681	1					
ANR	744691	CastTarget	RCore *		744681	0					
ANR	744692	Identifier	user		744681	1					
ANR	744693	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2238:1:61160:61200	744681	1	True				
ANR	744694	IdentifierDecl	* node = ( RConfigNode * ) data		744681	0					
ANR	744695	IdentifierDeclType	RConfigNode *		744681	0					
ANR	744696	Identifier	node		744681	1					
ANR	744697	AssignmentExpression	* node = ( RConfigNode * ) data		744681	2		=			
ANR	744698	Identifier	node		744681	0					
ANR	744699	CastExpression	( RConfigNode * ) data		744681	1					
ANR	744700	CastTarget	RConfigNode *		744681	0					
ANR	744701	Identifier	data		744681	1					
ANR	744702	ExpressionStatement	core -> dbg -> trace -> tag = node -> i_value	2239:1:61203:61240	744681	2	True				
ANR	744703	AssignmentExpression	core -> dbg -> trace -> tag = node -> i_value		744681	0		=			
ANR	744704	PtrMemberAccess	core -> dbg -> trace -> tag		744681	0					
ANR	744705	PtrMemberAccess	core -> dbg -> trace		744681	0					
ANR	744706	PtrMemberAccess	core -> dbg		744681	0					
ANR	744707	Identifier	core		744681	0					
ANR	744708	Identifier	dbg		744681	1					
ANR	744709	Identifier	trace		744681	1					
ANR	744710	Identifier	tag		744681	1					
ANR	744711	PtrMemberAccess	node -> i_value		744681	1					
ANR	744712	Identifier	node		744681	0					
ANR	744713	Identifier	i_value		744681	1					
ANR	744714	ReturnStatement	return true ;	2240:1:61243:61254	744681	3	True				
ANR	744715	Identifier	true		744681	0					
ANR	744716	ReturnType	static bool		744681	1					
ANR	744717	Identifier	cb_tracetag		744681	2					
ANR	744718	ParameterList	"void * user , void * data"		744681	3					
ANR	744719	Parameter	void * user	2236:24:61102:61111	744681	0	True				
ANR	744720	ParameterType	void *		744681	0					
ANR	744721	Identifier	user		744681	1					
ANR	744722	Parameter	void * data	2236:36:61114:61123	744681	1	True				
ANR	744723	ParameterType	void *		744681	0					
ANR	744724	Identifier	data		744681	1					
ANR	744725	CFGEntryNode	ENTRY		744681		True				
ANR	744726	CFGExitNode	EXIT		744681		True				
ANR	744727	Symbol	data		744681						
ANR	744728	Symbol	core -> dbg -> trace -> tag		744681						
ANR	744729	Symbol	* core		744681						
ANR	744730	Symbol	* core -> dbg -> trace		744681						
ANR	744731	Symbol	node -> i_value		744681						
ANR	744732	Symbol	core		744681						
ANR	744733	Symbol	node		744681						
ANR	744734	Symbol	* * * core		744681						
ANR	744735	Symbol	core -> dbg -> trace		744681						
ANR	744736	Symbol	true		744681						
ANR	744737	Symbol	* node		744681						
ANR	744738	Symbol	user		744681						
ANR	744739	Symbol	* core -> dbg		744681						
ANR	744740	Symbol	* * core		744681						
ANR	744741	Symbol	* * core -> dbg		744681						
ANR	744742	Symbol	core -> dbg		744681						
ANR	744743	Function	cb_utf8	2243:0:61259:61432							
ANR	744744	FunctionDef	"cb_utf8 (void * user , void * data)"		744743	0					
ANR	744745	CompoundStatement		2243:44:61303:61432	744743	0					
ANR	744746	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2244:1:61306:61334	744743	0	True				
ANR	744747	IdentifierDecl	* core = ( RCore * ) user		744743	0					
ANR	744748	IdentifierDeclType	RCore *		744743	0					
ANR	744749	Identifier	core		744743	1					
ANR	744750	AssignmentExpression	* core = ( RCore * ) user		744743	2		=			
ANR	744751	Identifier	core		744743	0					
ANR	744752	CastExpression	( RCore * ) user		744743	1					
ANR	744753	CastTarget	RCore *		744743	0					
ANR	744754	Identifier	user		744743	1					
ANR	744755	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2245:1:61337:61377	744743	1	True				
ANR	744756	IdentifierDecl	* node = ( RConfigNode * ) data		744743	0					
ANR	744757	IdentifierDeclType	RConfigNode *		744743	0					
ANR	744758	Identifier	node		744743	1					
ANR	744759	AssignmentExpression	* node = ( RConfigNode * ) data		744743	2		=			
ANR	744760	Identifier	node		744743	0					
ANR	744761	CastExpression	( RConfigNode * ) data		744743	1					
ANR	744762	CastTarget	RConfigNode *		744743	0					
ANR	744763	Identifier	data		744743	1					
ANR	744764	ExpressionStatement	core -> cons -> use_utf8 = node -> i_value	2246:1:61380:61416	744743	2	True				
ANR	744765	AssignmentExpression	core -> cons -> use_utf8 = node -> i_value		744743	0		=			
ANR	744766	PtrMemberAccess	core -> cons -> use_utf8		744743	0					
ANR	744767	PtrMemberAccess	core -> cons		744743	0					
ANR	744768	Identifier	core		744743	0					
ANR	744769	Identifier	cons		744743	1					
ANR	744770	Identifier	use_utf8		744743	1					
ANR	744771	PtrMemberAccess	node -> i_value		744743	1					
ANR	744772	Identifier	node		744743	0					
ANR	744773	Identifier	i_value		744743	1					
ANR	744774	ReturnStatement	return true ;	2247:1:61419:61430	744743	3	True				
ANR	744775	Identifier	true		744743	0					
ANR	744776	ReturnType	static bool		744743	1					
ANR	744777	Identifier	cb_utf8		744743	2					
ANR	744778	ParameterList	"void * user , void * data"		744743	3					
ANR	744779	Parameter	void * user	2243:20:61279:61288	744743	0	True				
ANR	744780	ParameterType	void *		744743	0					
ANR	744781	Identifier	user		744743	1					
ANR	744782	Parameter	void * data	2243:32:61291:61300	744743	1	True				
ANR	744783	ParameterType	void *		744743	0					
ANR	744784	Identifier	data		744743	1					
ANR	744785	CFGEntryNode	ENTRY		744743		True				
ANR	744786	CFGExitNode	EXIT		744743		True				
ANR	744787	Symbol	core		744743						
ANR	744788	Symbol	node		744743						
ANR	744789	Symbol	core -> cons -> use_utf8		744743						
ANR	744790	Symbol	core -> cons		744743						
ANR	744791	Symbol	data		744743						
ANR	744792	Symbol	* core -> cons		744743						
ANR	744793	Symbol	* core		744743						
ANR	744794	Symbol	true		744743						
ANR	744795	Symbol	* node		744743						
ANR	744796	Symbol	user		744743						
ANR	744797	Symbol	* * core		744743						
ANR	744798	Symbol	node -> i_value		744743						
ANR	744799	Function	cb_utf8_curvy	2250:0:61435:61620							
ANR	744800	FunctionDef	"cb_utf8_curvy (void * user , void * data)"		744799	0					
ANR	744801	CompoundStatement		2250:50:61485:61620	744799	0					
ANR	744802	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2251:1:61488:61516	744799	0	True				
ANR	744803	IdentifierDecl	* core = ( RCore * ) user		744799	0					
ANR	744804	IdentifierDeclType	RCore *		744799	0					
ANR	744805	Identifier	core		744799	1					
ANR	744806	AssignmentExpression	* core = ( RCore * ) user		744799	2		=			
ANR	744807	Identifier	core		744799	0					
ANR	744808	CastExpression	( RCore * ) user		744799	1					
ANR	744809	CastTarget	RCore *		744799	0					
ANR	744810	Identifier	user		744799	1					
ANR	744811	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2252:1:61519:61559	744799	1	True				
ANR	744812	IdentifierDecl	* node = ( RConfigNode * ) data		744799	0					
ANR	744813	IdentifierDeclType	RConfigNode *		744799	0					
ANR	744814	Identifier	node		744799	1					
ANR	744815	AssignmentExpression	* node = ( RConfigNode * ) data		744799	2		=			
ANR	744816	Identifier	node		744799	0					
ANR	744817	CastExpression	( RConfigNode * ) data		744799	1					
ANR	744818	CastTarget	RConfigNode *		744799	0					
ANR	744819	Identifier	data		744799	1					
ANR	744820	ExpressionStatement	core -> cons -> use_utf8_curvy = node -> i_value	2253:1:61562:61604	744799	2	True				
ANR	744821	AssignmentExpression	core -> cons -> use_utf8_curvy = node -> i_value		744799	0		=			
ANR	744822	PtrMemberAccess	core -> cons -> use_utf8_curvy		744799	0					
ANR	744823	PtrMemberAccess	core -> cons		744799	0					
ANR	744824	Identifier	core		744799	0					
ANR	744825	Identifier	cons		744799	1					
ANR	744826	Identifier	use_utf8_curvy		744799	1					
ANR	744827	PtrMemberAccess	node -> i_value		744799	1					
ANR	744828	Identifier	node		744799	0					
ANR	744829	Identifier	i_value		744799	1					
ANR	744830	ReturnStatement	return true ;	2254:1:61607:61618	744799	3	True				
ANR	744831	Identifier	true		744799	0					
ANR	744832	ReturnType	static bool		744799	1					
ANR	744833	Identifier	cb_utf8_curvy		744799	2					
ANR	744834	ParameterList	"void * user , void * data"		744799	3					
ANR	744835	Parameter	void * user	2250:26:61461:61470	744799	0	True				
ANR	744836	ParameterType	void *		744799	0					
ANR	744837	Identifier	user		744799	1					
ANR	744838	Parameter	void * data	2250:38:61473:61482	744799	1	True				
ANR	744839	ParameterType	void *		744799	0					
ANR	744840	Identifier	data		744799	1					
ANR	744841	CFGEntryNode	ENTRY		744799		True				
ANR	744842	CFGExitNode	EXIT		744799		True				
ANR	744843	Symbol	core		744799						
ANR	744844	Symbol	node		744799						
ANR	744845	Symbol	core -> cons -> use_utf8_curvy		744799						
ANR	744846	Symbol	core -> cons		744799						
ANR	744847	Symbol	data		744799						
ANR	744848	Symbol	* core -> cons		744799						
ANR	744849	Symbol	* core		744799						
ANR	744850	Symbol	true		744799						
ANR	744851	Symbol	* node		744799						
ANR	744852	Symbol	user		744799						
ANR	744853	Symbol	* * core		744799						
ANR	744854	Symbol	node -> i_value		744799						
ANR	744855	Function	cb_dotted	2257:0:61623:61802							
ANR	744856	FunctionDef	"cb_dotted (void * user , void * data)"		744855	0					
ANR	744857	CompoundStatement		2257:46:61669:61802	744855	0					
ANR	744858	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2258:1:61672:61700	744855	0	True				
ANR	744859	IdentifierDecl	* core = ( RCore * ) user		744855	0					
ANR	744860	IdentifierDeclType	RCore *		744855	0					
ANR	744861	Identifier	core		744855	1					
ANR	744862	AssignmentExpression	* core = ( RCore * ) user		744855	2		=			
ANR	744863	Identifier	core		744855	0					
ANR	744864	CastExpression	( RCore * ) user		744855	1					
ANR	744865	CastTarget	RCore *		744855	0					
ANR	744866	Identifier	user		744855	1					
ANR	744867	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2259:1:61703:61743	744855	1	True				
ANR	744868	IdentifierDecl	* node = ( RConfigNode * ) data		744855	0					
ANR	744869	IdentifierDeclType	RConfigNode *		744855	0					
ANR	744870	Identifier	node		744855	1					
ANR	744871	AssignmentExpression	* node = ( RConfigNode * ) data		744855	2		=			
ANR	744872	Identifier	node		744855	0					
ANR	744873	CastExpression	( RConfigNode * ) data		744855	1					
ANR	744874	CastTarget	RConfigNode *		744855	0					
ANR	744875	Identifier	data		744855	1					
ANR	744876	ExpressionStatement	core -> cons -> dotted_lines = node -> i_value	2260:1:61746:61786	744855	2	True				
ANR	744877	AssignmentExpression	core -> cons -> dotted_lines = node -> i_value		744855	0		=			
ANR	744878	PtrMemberAccess	core -> cons -> dotted_lines		744855	0					
ANR	744879	PtrMemberAccess	core -> cons		744855	0					
ANR	744880	Identifier	core		744855	0					
ANR	744881	Identifier	cons		744855	1					
ANR	744882	Identifier	dotted_lines		744855	1					
ANR	744883	PtrMemberAccess	node -> i_value		744855	1					
ANR	744884	Identifier	node		744855	0					
ANR	744885	Identifier	i_value		744855	1					
ANR	744886	ReturnStatement	return true ;	2261:1:61789:61800	744855	3	True				
ANR	744887	Identifier	true		744855	0					
ANR	744888	ReturnType	static bool		744855	1					
ANR	744889	Identifier	cb_dotted		744855	2					
ANR	744890	ParameterList	"void * user , void * data"		744855	3					
ANR	744891	Parameter	void * user	2257:22:61645:61654	744855	0	True				
ANR	744892	ParameterType	void *		744855	0					
ANR	744893	Identifier	user		744855	1					
ANR	744894	Parameter	void * data	2257:34:61657:61666	744855	1	True				
ANR	744895	ParameterType	void *		744855	0					
ANR	744896	Identifier	data		744855	1					
ANR	744897	CFGEntryNode	ENTRY		744855		True				
ANR	744898	CFGExitNode	EXIT		744855		True				
ANR	744899	Symbol	core		744855						
ANR	744900	Symbol	node		744855						
ANR	744901	Symbol	core -> cons		744855						
ANR	744902	Symbol	data		744855						
ANR	744903	Symbol	* core -> cons		744855						
ANR	744904	Symbol	* core		744855						
ANR	744905	Symbol	true		744855						
ANR	744906	Symbol	* node		744855						
ANR	744907	Symbol	core -> cons -> dotted_lines		744855						
ANR	744908	Symbol	user		744855						
ANR	744909	Symbol	* * core		744855						
ANR	744910	Symbol	node -> i_value		744855						
ANR	744911	Function	cb_zoombyte	2264:0:61805:62236							
ANR	744912	FunctionDef	"cb_zoombyte (void * user , void * data)"		744911	0					
ANR	744913	CompoundStatement		2264:48:61853:62236	744911	0					
ANR	744914	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2265:1:61856:61884	744911	0	True				
ANR	744915	IdentifierDecl	* core = ( RCore * ) user		744911	0					
ANR	744916	IdentifierDeclType	RCore *		744911	0					
ANR	744917	Identifier	core		744911	1					
ANR	744918	AssignmentExpression	* core = ( RCore * ) user		744911	2		=			
ANR	744919	Identifier	core		744911	0					
ANR	744920	CastExpression	( RCore * ) user		744911	1					
ANR	744921	CastTarget	RCore *		744911	0					
ANR	744922	Identifier	user		744911	1					
ANR	744923	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2266:1:61887:61927	744911	1	True				
ANR	744924	IdentifierDecl	* node = ( RConfigNode * ) data		744911	0					
ANR	744925	IdentifierDeclType	RConfigNode *		744911	0					
ANR	744926	Identifier	node		744911	1					
ANR	744927	AssignmentExpression	* node = ( RConfigNode * ) data		744911	2		=			
ANR	744928	Identifier	node		744911	0					
ANR	744929	CastExpression	( RConfigNode * ) data		744911	1					
ANR	744930	CastTarget	RConfigNode *		744911	0					
ANR	744931	Identifier	data		744911	1					
ANR	744932	SwitchStatement	switch ( * node -> value )		744911	2					
ANR	744933	Condition	* node -> value	2267:9:61938:61949	744911	0	True				
ANR	744934	UnaryOperationExpression	* node -> value		744911	0					
ANR	744935	UnaryOperator	*		744911	0					
ANR	744936	PtrMemberAccess	node -> value		744911	1					
ANR	744937	Identifier	node		744911	0					
ANR	744938	Identifier	value		744911	1					
ANR	744939	CompoundStatement		4:23:98:98	744911	1					
ANR	744940	Label	case 'p' :	2268:1:61955:61963	744911	0	True				
ANR	744941	Label	case 'f' :	2268:11:61965:61973	744911	1	True				
ANR	744942	Label	case 's' :	2268:21:61975:61983	744911	2	True				
ANR	744943	Label	case '0' :	2268:31:61985:61993	744911	3	True				
ANR	744944	Label	case 'F' :	2269:1:61996:62004	744911	4	True				
ANR	744945	Label	case 'e' :	2269:11:62006:62014	744911	5	True				
ANR	744946	Label	case 'h' :	2269:21:62016:62024	744911	6	True				
ANR	744947	ExpressionStatement	core -> print -> zoom -> mode = * node -> value	2270:2:62028:62066	744911	7	True				
ANR	744948	AssignmentExpression	core -> print -> zoom -> mode = * node -> value		744911	0		=			
ANR	744949	PtrMemberAccess	core -> print -> zoom -> mode		744911	0					
ANR	744950	PtrMemberAccess	core -> print -> zoom		744911	0					
ANR	744951	PtrMemberAccess	core -> print		744911	0					
ANR	744952	Identifier	core		744911	0					
ANR	744953	Identifier	print		744911	1					
ANR	744954	Identifier	zoom		744911	1					
ANR	744955	Identifier	mode		744911	1					
ANR	744956	UnaryOperationExpression	* node -> value		744911	1					
ANR	744957	UnaryOperator	*		744911	0					
ANR	744958	PtrMemberAccess	node -> value		744911	1					
ANR	744959	Identifier	node		744911	0					
ANR	744960	Identifier	value		744911	1					
ANR	744961	BreakStatement	break ;	2271:2:62070:62075	744911	8	True				
ANR	744962	Label	default :	2272:1:62078:62085	744911	9	True				
ANR	744963	Identifier	default		744911	0					
ANR	744964	ExpressionStatement	"eprintf ( ""Invalid zoom.byte value. See pz? for help\\n"" )"	2273:2:62089:62144	744911	10	True				
ANR	744965	CallExpression	"eprintf ( ""Invalid zoom.byte value. See pz? for help\\n"" )"		744911	0					
ANR	744966	Callee	eprintf		744911	0					
ANR	744967	Identifier	eprintf		744911	0					
ANR	744968	ArgumentList	"""Invalid zoom.byte value. See pz? for help\\n"""		744911	1					
ANR	744969	Argument	"""Invalid zoom.byte value. See pz? for help\\n"""		744911	0					
ANR	744970	PrimaryExpression	"""Invalid zoom.byte value. See pz? for help\\n"""		744911	0					
ANR	744971	ExpressionStatement	"r_cons_printf ( ""pzp\\npzf\\npzs\\npz0\\npzF\\npze\\npzh\\n"" )"	2274:2:62148:62201	744911	11	True				
ANR	744972	CallExpression	"r_cons_printf ( ""pzp\\npzf\\npzs\\npz0\\npzF\\npze\\npzh\\n"" )"		744911	0					
ANR	744973	Callee	r_cons_printf		744911	0					
ANR	744974	Identifier	r_cons_printf		744911	0					
ANR	744975	ArgumentList	"""pzp\\npzf\\npzs\\npz0\\npzF\\npze\\npzh\\n"""		744911	1					
ANR	744976	Argument	"""pzp\\npzf\\npzs\\npz0\\npzF\\npze\\npzh\\n"""		744911	0					
ANR	744977	PrimaryExpression	"""pzp\\npzf\\npzs\\npz0\\npzF\\npze\\npzh\\n"""		744911	0					
ANR	744978	ReturnStatement	return false ;	2275:2:62205:62217	744911	12	True				
ANR	744979	Identifier	false		744911	0					
ANR	744980	ReturnStatement	return true ;	2277:1:62223:62234	744911	3	True				
ANR	744981	Identifier	true		744911	0					
ANR	744982	ReturnType	static bool		744911	1					
ANR	744983	Identifier	cb_zoombyte		744911	2					
ANR	744984	ParameterList	"void * user , void * data"		744911	3					
ANR	744985	Parameter	void * user	2264:24:61829:61838	744911	0	True				
ANR	744986	ParameterType	void *		744911	0					
ANR	744987	Identifier	user		744911	1					
ANR	744988	Parameter	void * data	2264:36:61841:61850	744911	1	True				
ANR	744989	ParameterType	void *		744911	0					
ANR	744990	Identifier	data		744911	1					
ANR	744991	CFGEntryNode	ENTRY		744911		True				
ANR	744992	CFGExitNode	EXIT		744911		True				
ANR	744993	Symbol	* core -> print -> zoom		744911						
ANR	744994	Symbol	* node -> value		744911						
ANR	744995	Symbol	data		744911						
ANR	744996	Symbol	* * core -> print		744911						
ANR	744997	Symbol	* core		744911						
ANR	744998	Symbol	false		744911						
ANR	744999	Symbol	node -> value		744911						
ANR	745000	Symbol	core -> print -> zoom -> mode		744911						
ANR	745001	Symbol	core		744911						
ANR	745002	Symbol	node		744911						
ANR	745003	Symbol	* * * core		744911						
ANR	745004	Symbol	core -> print -> zoom		744911						
ANR	745005	Symbol	* core -> print		744911						
ANR	745006	Symbol	* * node		744911						
ANR	745007	Symbol	true		744911						
ANR	745008	Symbol	* node		744911						
ANR	745009	Symbol	core -> print		744911						
ANR	745010	Symbol	user		744911						
ANR	745011	Symbol	* * core		744911						
ANR	745012	Function	cb_analex	2280:0:62239:62412							
ANR	745013	FunctionDef	"cb_analex (void * user , void * data)"		745012	0					
ANR	745014	CompoundStatement		2280:46:62285:62412	745012	0					
ANR	745015	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2281:1:62288:62316	745012	0	True				
ANR	745016	IdentifierDecl	* core = ( RCore * ) user		745012	0					
ANR	745017	IdentifierDeclType	RCore *		745012	0					
ANR	745018	Identifier	core		745012	1					
ANR	745019	AssignmentExpression	* core = ( RCore * ) user		745012	2		=			
ANR	745020	Identifier	core		745012	0					
ANR	745021	CastExpression	( RCore * ) user		745012	1					
ANR	745022	CastTarget	RCore *		745012	0					
ANR	745023	Identifier	user		745012	1					
ANR	745024	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2282:1:62319:62359	745012	1	True				
ANR	745025	IdentifierDecl	* node = ( RConfigNode * ) data		745012	0					
ANR	745026	IdentifierDeclType	RConfigNode *		745012	0					
ANR	745027	Identifier	node		745012	1					
ANR	745028	AssignmentExpression	* node = ( RConfigNode * ) data		745012	2		=			
ANR	745029	Identifier	node		745012	0					
ANR	745030	CastExpression	( RConfigNode * ) data		745012	1					
ANR	745031	CastTarget	RConfigNode *		745012	0					
ANR	745032	Identifier	data		745012	1					
ANR	745033	ExpressionStatement	core -> anal -> use_ex = node -> i_value	2283:1:62362:62396	745012	2	True				
ANR	745034	AssignmentExpression	core -> anal -> use_ex = node -> i_value		745012	0		=			
ANR	745035	PtrMemberAccess	core -> anal -> use_ex		745012	0					
ANR	745036	PtrMemberAccess	core -> anal		745012	0					
ANR	745037	Identifier	core		745012	0					
ANR	745038	Identifier	anal		745012	1					
ANR	745039	Identifier	use_ex		745012	1					
ANR	745040	PtrMemberAccess	node -> i_value		745012	1					
ANR	745041	Identifier	node		745012	0					
ANR	745042	Identifier	i_value		745012	1					
ANR	745043	ReturnStatement	return true ;	2284:1:62399:62410	745012	3	True				
ANR	745044	Identifier	true		745012	0					
ANR	745045	ReturnType	static bool		745012	1					
ANR	745046	Identifier	cb_analex		745012	2					
ANR	745047	ParameterList	"void * user , void * data"		745012	3					
ANR	745048	Parameter	void * user	2280:22:62261:62270	745012	0	True				
ANR	745049	ParameterType	void *		745012	0					
ANR	745050	Identifier	user		745012	1					
ANR	745051	Parameter	void * data	2280:34:62273:62282	745012	1	True				
ANR	745052	ParameterType	void *		745012	0					
ANR	745053	Identifier	data		745012	1					
ANR	745054	CFGEntryNode	ENTRY		745012		True				
ANR	745055	CFGExitNode	EXIT		745012		True				
ANR	745056	Symbol	core		745012						
ANR	745057	Symbol	node		745012						
ANR	745058	Symbol	* core -> anal		745012						
ANR	745059	Symbol	data		745012						
ANR	745060	Symbol	* core		745012						
ANR	745061	Symbol	true		745012						
ANR	745062	Symbol	* node		745012						
ANR	745063	Symbol	user		745012						
ANR	745064	Symbol	core -> anal		745012						
ANR	745065	Symbol	* * core		745012						
ANR	745066	Symbol	core -> anal -> use_ex		745012						
ANR	745067	Symbol	node -> i_value		745012						
ANR	745068	Function	cb_analverbose	2287:0:62415:62594							
ANR	745069	FunctionDef	"cb_analverbose (void * user , void * data)"		745068	0					
ANR	745070	CompoundStatement		2287:51:62466:62594	745068	0					
ANR	745071	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2288:1:62469:62497	745068	0	True				
ANR	745072	IdentifierDecl	* core = ( RCore * ) user		745068	0					
ANR	745073	IdentifierDeclType	RCore *		745068	0					
ANR	745074	Identifier	core		745068	1					
ANR	745075	AssignmentExpression	* core = ( RCore * ) user		745068	2		=			
ANR	745076	Identifier	core		745068	0					
ANR	745077	CastExpression	( RCore * ) user		745068	1					
ANR	745078	CastTarget	RCore *		745068	0					
ANR	745079	Identifier	user		745068	1					
ANR	745080	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2289:1:62500:62540	745068	1	True				
ANR	745081	IdentifierDecl	* node = ( RConfigNode * ) data		745068	0					
ANR	745082	IdentifierDeclType	RConfigNode *		745068	0					
ANR	745083	Identifier	node		745068	1					
ANR	745084	AssignmentExpression	* node = ( RConfigNode * ) data		745068	2		=			
ANR	745085	Identifier	node		745068	0					
ANR	745086	CastExpression	( RConfigNode * ) data		745068	1					
ANR	745087	CastTarget	RConfigNode *		745068	0					
ANR	745088	Identifier	data		745068	1					
ANR	745089	ExpressionStatement	core -> anal -> verbose = node -> i_value	2290:1:62543:62578	745068	2	True				
ANR	745090	AssignmentExpression	core -> anal -> verbose = node -> i_value		745068	0		=			
ANR	745091	PtrMemberAccess	core -> anal -> verbose		745068	0					
ANR	745092	PtrMemberAccess	core -> anal		745068	0					
ANR	745093	Identifier	core		745068	0					
ANR	745094	Identifier	anal		745068	1					
ANR	745095	Identifier	verbose		745068	1					
ANR	745096	PtrMemberAccess	node -> i_value		745068	1					
ANR	745097	Identifier	node		745068	0					
ANR	745098	Identifier	i_value		745068	1					
ANR	745099	ReturnStatement	return true ;	2291:1:62581:62592	745068	3	True				
ANR	745100	Identifier	true		745068	0					
ANR	745101	ReturnType	static bool		745068	1					
ANR	745102	Identifier	cb_analverbose		745068	2					
ANR	745103	ParameterList	"void * user , void * data"		745068	3					
ANR	745104	Parameter	void * user	2287:27:62442:62451	745068	0	True				
ANR	745105	ParameterType	void *		745068	0					
ANR	745106	Identifier	user		745068	1					
ANR	745107	Parameter	void * data	2287:39:62454:62463	745068	1	True				
ANR	745108	ParameterType	void *		745068	0					
ANR	745109	Identifier	data		745068	1					
ANR	745110	CFGEntryNode	ENTRY		745068		True				
ANR	745111	CFGExitNode	EXIT		745068		True				
ANR	745112	Symbol	core -> anal -> verbose		745068						
ANR	745113	Symbol	core		745068						
ANR	745114	Symbol	node		745068						
ANR	745115	Symbol	* core -> anal		745068						
ANR	745116	Symbol	data		745068						
ANR	745117	Symbol	* core		745068						
ANR	745118	Symbol	true		745068						
ANR	745119	Symbol	* node		745068						
ANR	745120	Symbol	user		745068						
ANR	745121	Symbol	core -> anal		745068						
ANR	745122	Symbol	* * core		745068						
ANR	745123	Symbol	node -> i_value		745068						
ANR	745124	Function	cb_binverbose	2294:0:62597:62774							
ANR	745125	FunctionDef	"cb_binverbose (void * user , void * data)"		745124	0					
ANR	745126	CompoundStatement		2294:50:62647:62774	745124	0					
ANR	745127	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2295:1:62650:62678	745124	0	True				
ANR	745128	IdentifierDecl	* core = ( RCore * ) user		745124	0					
ANR	745129	IdentifierDeclType	RCore *		745124	0					
ANR	745130	Identifier	core		745124	1					
ANR	745131	AssignmentExpression	* core = ( RCore * ) user		745124	2		=			
ANR	745132	Identifier	core		745124	0					
ANR	745133	CastExpression	( RCore * ) user		745124	1					
ANR	745134	CastTarget	RCore *		745124	0					
ANR	745135	Identifier	user		745124	1					
ANR	745136	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2296:1:62681:62721	745124	1	True				
ANR	745137	IdentifierDecl	* node = ( RConfigNode * ) data		745124	0					
ANR	745138	IdentifierDeclType	RConfigNode *		745124	0					
ANR	745139	Identifier	node		745124	1					
ANR	745140	AssignmentExpression	* node = ( RConfigNode * ) data		745124	2		=			
ANR	745141	Identifier	node		745124	0					
ANR	745142	CastExpression	( RConfigNode * ) data		745124	1					
ANR	745143	CastTarget	RConfigNode *		745124	0					
ANR	745144	Identifier	data		745124	1					
ANR	745145	ExpressionStatement	core -> bin -> verbose = node -> i_value	2297:1:62724:62758	745124	2	True				
ANR	745146	AssignmentExpression	core -> bin -> verbose = node -> i_value		745124	0		=			
ANR	745147	PtrMemberAccess	core -> bin -> verbose		745124	0					
ANR	745148	PtrMemberAccess	core -> bin		745124	0					
ANR	745149	Identifier	core		745124	0					
ANR	745150	Identifier	bin		745124	1					
ANR	745151	Identifier	verbose		745124	1					
ANR	745152	PtrMemberAccess	node -> i_value		745124	1					
ANR	745153	Identifier	node		745124	0					
ANR	745154	Identifier	i_value		745124	1					
ANR	745155	ReturnStatement	return true ;	2298:1:62761:62772	745124	3	True				
ANR	745156	Identifier	true		745124	0					
ANR	745157	ReturnType	static bool		745124	1					
ANR	745158	Identifier	cb_binverbose		745124	2					
ANR	745159	ParameterList	"void * user , void * data"		745124	3					
ANR	745160	Parameter	void * user	2294:26:62623:62632	745124	0	True				
ANR	745161	ParameterType	void *		745124	0					
ANR	745162	Identifier	user		745124	1					
ANR	745163	Parameter	void * data	2294:38:62635:62644	745124	1	True				
ANR	745164	ParameterType	void *		745124	0					
ANR	745165	Identifier	data		745124	1					
ANR	745166	CFGEntryNode	ENTRY		745124		True				
ANR	745167	CFGExitNode	EXIT		745124		True				
ANR	745168	Symbol	core		745124						
ANR	745169	Symbol	node		745124						
ANR	745170	Symbol	data		745124						
ANR	745171	Symbol	core -> bin -> verbose		745124						
ANR	745172	Symbol	* core		745124						
ANR	745173	Symbol	true		745124						
ANR	745174	Symbol	* node		745124						
ANR	745175	Symbol	* core -> bin		745124						
ANR	745176	Symbol	user		745124						
ANR	745177	Symbol	core -> bin		745124						
ANR	745178	Symbol	* * core		745124						
ANR	745179	Symbol	node -> i_value		745124						
ANR	745180	Function	cb_rawstr	2301:0:62777:62949							
ANR	745181	FunctionDef	"cb_rawstr (void * user , void * data)"		745180	0					
ANR	745182	CompoundStatement		2301:46:62823:62949	745180	0					
ANR	745183	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2302:1:62826:62854	745180	0	True				
ANR	745184	IdentifierDecl	* core = ( RCore * ) user		745180	0					
ANR	745185	IdentifierDeclType	RCore *		745180	0					
ANR	745186	Identifier	core		745180	1					
ANR	745187	AssignmentExpression	* core = ( RCore * ) user		745180	2		=			
ANR	745188	Identifier	core		745180	0					
ANR	745189	CastExpression	( RCore * ) user		745180	1					
ANR	745190	CastTarget	RCore *		745180	0					
ANR	745191	Identifier	user		745180	1					
ANR	745192	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2303:1:62857:62897	745180	1	True				
ANR	745193	IdentifierDecl	* node = ( RConfigNode * ) data		745180	0					
ANR	745194	IdentifierDeclType	RConfigNode *		745180	0					
ANR	745195	Identifier	node		745180	1					
ANR	745196	AssignmentExpression	* node = ( RConfigNode * ) data		745180	2		=			
ANR	745197	Identifier	node		745180	0					
ANR	745198	CastExpression	( RConfigNode * ) data		745180	1					
ANR	745199	CastTarget	RConfigNode *		745180	0					
ANR	745200	Identifier	data		745180	1					
ANR	745201	ExpressionStatement	core -> bin -> rawstr = node -> i_value	2304:1:62900:62933	745180	2	True				
ANR	745202	AssignmentExpression	core -> bin -> rawstr = node -> i_value		745180	0		=			
ANR	745203	PtrMemberAccess	core -> bin -> rawstr		745180	0					
ANR	745204	PtrMemberAccess	core -> bin		745180	0					
ANR	745205	Identifier	core		745180	0					
ANR	745206	Identifier	bin		745180	1					
ANR	745207	Identifier	rawstr		745180	1					
ANR	745208	PtrMemberAccess	node -> i_value		745180	1					
ANR	745209	Identifier	node		745180	0					
ANR	745210	Identifier	i_value		745180	1					
ANR	745211	ReturnStatement	return true ;	2305:1:62936:62947	745180	3	True				
ANR	745212	Identifier	true		745180	0					
ANR	745213	ReturnType	static bool		745180	1					
ANR	745214	Identifier	cb_rawstr		745180	2					
ANR	745215	ParameterList	"void * user , void * data"		745180	3					
ANR	745216	Parameter	void * user	2301:22:62799:62808	745180	0	True				
ANR	745217	ParameterType	void *		745180	0					
ANR	745218	Identifier	user		745180	1					
ANR	745219	Parameter	void * data	2301:34:62811:62820	745180	1	True				
ANR	745220	ParameterType	void *		745180	0					
ANR	745221	Identifier	data		745180	1					
ANR	745222	CFGEntryNode	ENTRY		745180		True				
ANR	745223	CFGExitNode	EXIT		745180		True				
ANR	745224	Symbol	core		745180						
ANR	745225	Symbol	node		745180						
ANR	745226	Symbol	data		745180						
ANR	745227	Symbol	core -> bin -> rawstr		745180						
ANR	745228	Symbol	* core		745180						
ANR	745229	Symbol	true		745180						
ANR	745230	Symbol	* node		745180						
ANR	745231	Symbol	* core -> bin		745180						
ANR	745232	Symbol	user		745180						
ANR	745233	Symbol	core -> bin		745180						
ANR	745234	Symbol	* * core		745180						
ANR	745235	Symbol	node -> i_value		745180						
ANR	745236	Function	cb_debase64	2308:0:62952:63128							
ANR	745237	FunctionDef	"cb_debase64 (void * user , void * data)"		745236	0					
ANR	745238	CompoundStatement		2308:48:63000:63128	745236	0					
ANR	745239	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2309:1:63003:63031	745236	0	True				
ANR	745240	IdentifierDecl	* core = ( RCore * ) user		745236	0					
ANR	745241	IdentifierDeclType	RCore *		745236	0					
ANR	745242	Identifier	core		745236	1					
ANR	745243	AssignmentExpression	* core = ( RCore * ) user		745236	2		=			
ANR	745244	Identifier	core		745236	0					
ANR	745245	CastExpression	( RCore * ) user		745236	1					
ANR	745246	CastTarget	RCore *		745236	0					
ANR	745247	Identifier	user		745236	1					
ANR	745248	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2310:1:63034:63074	745236	1	True				
ANR	745249	IdentifierDecl	* node = ( RConfigNode * ) data		745236	0					
ANR	745250	IdentifierDeclType	RConfigNode *		745236	0					
ANR	745251	Identifier	node		745236	1					
ANR	745252	AssignmentExpression	* node = ( RConfigNode * ) data		745236	2		=			
ANR	745253	Identifier	node		745236	0					
ANR	745254	CastExpression	( RConfigNode * ) data		745236	1					
ANR	745255	CastTarget	RConfigNode *		745236	0					
ANR	745256	Identifier	data		745236	1					
ANR	745257	ExpressionStatement	core -> bin -> debase64 = node -> i_value	2311:1:63077:63112	745236	2	True				
ANR	745258	AssignmentExpression	core -> bin -> debase64 = node -> i_value		745236	0		=			
ANR	745259	PtrMemberAccess	core -> bin -> debase64		745236	0					
ANR	745260	PtrMemberAccess	core -> bin		745236	0					
ANR	745261	Identifier	core		745236	0					
ANR	745262	Identifier	bin		745236	1					
ANR	745263	Identifier	debase64		745236	1					
ANR	745264	PtrMemberAccess	node -> i_value		745236	1					
ANR	745265	Identifier	node		745236	0					
ANR	745266	Identifier	i_value		745236	1					
ANR	745267	ReturnStatement	return true ;	2312:1:63115:63126	745236	3	True				
ANR	745268	Identifier	true		745236	0					
ANR	745269	ReturnType	static bool		745236	1					
ANR	745270	Identifier	cb_debase64		745236	2					
ANR	745271	ParameterList	"void * user , void * data"		745236	3					
ANR	745272	Parameter	void * user	2308:24:62976:62985	745236	0	True				
ANR	745273	ParameterType	void *		745236	0					
ANR	745274	Identifier	user		745236	1					
ANR	745275	Parameter	void * data	2308:36:62988:62997	745236	1	True				
ANR	745276	ParameterType	void *		745236	0					
ANR	745277	Identifier	data		745236	1					
ANR	745278	CFGEntryNode	ENTRY		745236		True				
ANR	745279	CFGExitNode	EXIT		745236		True				
ANR	745280	Symbol	core		745236						
ANR	745281	Symbol	node		745236						
ANR	745282	Symbol	data		745236						
ANR	745283	Symbol	* core		745236						
ANR	745284	Symbol	true		745236						
ANR	745285	Symbol	* node		745236						
ANR	745286	Symbol	* core -> bin		745236						
ANR	745287	Symbol	user		745236						
ANR	745288	Symbol	core -> bin		745236						
ANR	745289	Symbol	* * core		745236						
ANR	745290	Symbol	core -> bin -> debase64		745236						
ANR	745291	Symbol	node -> i_value		745236						
ANR	745292	Function	cb_binstrings	2315:0:63131:63412							
ANR	745293	FunctionDef	"cb_binstrings (void * user , void * data)"		745292	0					
ANR	745294	CompoundStatement		2315:50:63181:63412	745292	0					
ANR	745295	IdentifierDeclStatement	const ut32 req = R_BIN_REQ_STRINGS ;	2316:1:63184:63218	745292	0	True				
ANR	745296	IdentifierDecl	req = R_BIN_REQ_STRINGS		745292	0					
ANR	745297	IdentifierDeclType	const ut32		745292	0					
ANR	745298	Identifier	req		745292	1					
ANR	745299	AssignmentExpression	req = R_BIN_REQ_STRINGS		745292	2		=			
ANR	745300	Identifier	R_BIN_REQ_STRINGS		745292	0					
ANR	745301	Identifier	R_BIN_REQ_STRINGS		745292	1					
ANR	745302	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2317:1:63221:63249	745292	1	True				
ANR	745303	IdentifierDecl	* core = ( RCore * ) user		745292	0					
ANR	745304	IdentifierDeclType	RCore *		745292	0					
ANR	745305	Identifier	core		745292	1					
ANR	745306	AssignmentExpression	* core = ( RCore * ) user		745292	2		=			
ANR	745307	Identifier	core		745292	0					
ANR	745308	CastExpression	( RCore * ) user		745292	1					
ANR	745309	CastTarget	RCore *		745292	0					
ANR	745310	Identifier	user		745292	1					
ANR	745311	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2318:1:63252:63292	745292	2	True				
ANR	745312	IdentifierDecl	* node = ( RConfigNode * ) data		745292	0					
ANR	745313	IdentifierDeclType	RConfigNode *		745292	0					
ANR	745314	Identifier	node		745292	1					
ANR	745315	AssignmentExpression	* node = ( RConfigNode * ) data		745292	2		=			
ANR	745316	Identifier	node		745292	0					
ANR	745317	CastExpression	( RConfigNode * ) data		745292	1					
ANR	745318	CastTarget	RConfigNode *		745292	0					
ANR	745319	Identifier	data		745292	1					
ANR	745320	IfStatement	if ( node -> i_value )		745292	3					
ANR	745321	Condition	node -> i_value	2319:5:63299:63311	745292	0	True				
ANR	745322	PtrMemberAccess	node -> i_value		745292	0					
ANR	745323	Identifier	node		745292	0					
ANR	745324	Identifier	i_value		745292	1					
ANR	745325	CompoundStatement		5:20:132:132	745292	1					
ANR	745326	ExpressionStatement	core -> bin -> filter_rules |= req	2320:2:63318:63348	745292	0	True				
ANR	745327	AssignmentExpression	core -> bin -> filter_rules |= req		745292	0		|=			
ANR	745328	PtrMemberAccess	core -> bin -> filter_rules		745292	0					
ANR	745329	PtrMemberAccess	core -> bin		745292	0					
ANR	745330	Identifier	core		745292	0					
ANR	745331	Identifier	bin		745292	1					
ANR	745332	Identifier	filter_rules		745292	1					
ANR	745333	Identifier	req		745292	1					
ANR	745334	ElseStatement	else		745292	0					
ANR	745335	CompoundStatement		7:8:176:176	745292	0					
ANR	745336	ExpressionStatement	core -> bin -> filter_rules &= ~req	2322:2:63362:63393	745292	0	True				
ANR	745337	AssignmentExpression	core -> bin -> filter_rules &= ~req		745292	0		&=			
ANR	745338	PtrMemberAccess	core -> bin -> filter_rules		745292	0					
ANR	745339	PtrMemberAccess	core -> bin		745292	0					
ANR	745340	Identifier	core		745292	0					
ANR	745341	Identifier	bin		745292	1					
ANR	745342	Identifier	filter_rules		745292	1					
ANR	745343	Identifier	~req		745292	1					
ANR	745344	ReturnStatement	return true ;	2324:1:63399:63410	745292	4	True				
ANR	745345	Identifier	true		745292	0					
ANR	745346	ReturnType	static bool		745292	1					
ANR	745347	Identifier	cb_binstrings		745292	2					
ANR	745348	ParameterList	"void * user , void * data"		745292	3					
ANR	745349	Parameter	void * user	2315:26:63157:63166	745292	0	True				
ANR	745350	ParameterType	void *		745292	0					
ANR	745351	Identifier	user		745292	1					
ANR	745352	Parameter	void * data	2315:38:63169:63178	745292	1	True				
ANR	745353	ParameterType	void *		745292	0					
ANR	745354	Identifier	data		745292	1					
ANR	745355	CFGEntryNode	ENTRY		745292		True				
ANR	745356	CFGExitNode	EXIT		745292		True				
ANR	745357	Symbol	data		745292						
ANR	745358	Symbol	R_BIN_REQ_STRINGS		745292						
ANR	745359	Symbol	* core		745292						
ANR	745360	Symbol	node -> i_value		745292						
ANR	745361	Symbol	core		745292						
ANR	745362	Symbol	node		745292						
ANR	745363	Symbol	core -> bin -> filter_rules		745292						
ANR	745364	Symbol	true		745292						
ANR	745365	Symbol	* node		745292						
ANR	745366	Symbol	~req		745292						
ANR	745367	Symbol	* core -> bin		745292						
ANR	745368	Symbol	user		745292						
ANR	745369	Symbol	core -> bin		745292						
ANR	745370	Symbol	* * core		745292						
ANR	745371	Symbol	req		745292						
ANR	745372	Function	cb_bindbginfo	2327:0:63415:63644							
ANR	745373	FunctionDef	"cb_bindbginfo (void * user , void * data)"		745372	0					
ANR	745374	CompoundStatement		2327:50:63465:63644	745372	0					
ANR	745375	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2328:1:63468:63496	745372	0	True				
ANR	745376	IdentifierDecl	* core = ( RCore * ) user		745372	0					
ANR	745377	IdentifierDeclType	RCore *		745372	0					
ANR	745378	Identifier	core		745372	1					
ANR	745379	AssignmentExpression	* core = ( RCore * ) user		745372	2		=			
ANR	745380	Identifier	core		745372	0					
ANR	745381	CastExpression	( RCore * ) user		745372	1					
ANR	745382	CastTarget	RCore *		745372	0					
ANR	745383	Identifier	user		745372	1					
ANR	745384	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2329:1:63499:63539	745372	1	True				
ANR	745385	IdentifierDecl	* node = ( RConfigNode * ) data		745372	0					
ANR	745386	IdentifierDeclType	RConfigNode *		745372	0					
ANR	745387	Identifier	node		745372	1					
ANR	745388	AssignmentExpression	* node = ( RConfigNode * ) data		745372	2		=			
ANR	745389	Identifier	node		745372	0					
ANR	745390	CastExpression	( RConfigNode * ) data		745372	1					
ANR	745391	CastTarget	RConfigNode *		745372	0					
ANR	745392	Identifier	data		745372	1					
ANR	745393	IfStatement	if ( ! core || ! core -> bin )		745372	2					
ANR	745394	Condition	! core || ! core -> bin	2330:5:63546:63564	745372	0	True				
ANR	745395	OrExpression	! core || ! core -> bin		745372	0		||			
ANR	745396	UnaryOperationExpression	! core		745372	0					
ANR	745397	UnaryOperator	!		745372	0					
ANR	745398	Identifier	core		745372	1					
ANR	745399	UnaryOperationExpression	! core -> bin		745372	1					
ANR	745400	UnaryOperator	!		745372	0					
ANR	745401	PtrMemberAccess	core -> bin		745372	1					
ANR	745402	Identifier	core		745372	0					
ANR	745403	Identifier	bin		745372	1					
ANR	745404	CompoundStatement		4:26:101:101	745372	1					
ANR	745405	ReturnStatement	return false ;	2331:2:63571:63583	745372	0	True				
ANR	745406	Identifier	false		745372	0					
ANR	745407	ExpressionStatement	core -> bin -> want_dbginfo = node -> i_value	2333:1:63589:63628	745372	3	True				
ANR	745408	AssignmentExpression	core -> bin -> want_dbginfo = node -> i_value		745372	0		=			
ANR	745409	PtrMemberAccess	core -> bin -> want_dbginfo		745372	0					
ANR	745410	PtrMemberAccess	core -> bin		745372	0					
ANR	745411	Identifier	core		745372	0					
ANR	745412	Identifier	bin		745372	1					
ANR	745413	Identifier	want_dbginfo		745372	1					
ANR	745414	PtrMemberAccess	node -> i_value		745372	1					
ANR	745415	Identifier	node		745372	0					
ANR	745416	Identifier	i_value		745372	1					
ANR	745417	ReturnStatement	return true ;	2334:1:63631:63642	745372	4	True				
ANR	745418	Identifier	true		745372	0					
ANR	745419	ReturnType	static bool		745372	1					
ANR	745420	Identifier	cb_bindbginfo		745372	2					
ANR	745421	ParameterList	"void * user , void * data"		745372	3					
ANR	745422	Parameter	void * user	2327:26:63441:63450	745372	0	True				
ANR	745423	ParameterType	void *		745372	0					
ANR	745424	Identifier	user		745372	1					
ANR	745425	Parameter	void * data	2327:38:63453:63462	745372	1	True				
ANR	745426	ParameterType	void *		745372	0					
ANR	745427	Identifier	data		745372	1					
ANR	745428	CFGEntryNode	ENTRY		745372		True				
ANR	745429	CFGExitNode	EXIT		745372		True				
ANR	745430	Symbol	data		745372						
ANR	745431	Symbol	* core		745372						
ANR	745432	Symbol	false		745372						
ANR	745433	Symbol	node -> i_value		745372						
ANR	745434	Symbol	core		745372						
ANR	745435	Symbol	node		745372						
ANR	745436	Symbol	core -> bin -> want_dbginfo		745372						
ANR	745437	Symbol	true		745372						
ANR	745438	Symbol	* node		745372						
ANR	745439	Symbol	* core -> bin		745372						
ANR	745440	Symbol	user		745372						
ANR	745441	Symbol	core -> bin		745372						
ANR	745442	Symbol	* * core		745372						
ANR	745443	Function	cb_binprefix	2337:0:63647:64228							
ANR	745444	FunctionDef	"cb_binprefix (void * user , void * data)"		745443	0					
ANR	745445	CompoundStatement		2337:49:63696:64228	745443	0					
ANR	745446	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2338:1:63699:63727	745443	0	True				
ANR	745447	IdentifierDecl	* core = ( RCore * ) user		745443	0					
ANR	745448	IdentifierDeclType	RCore *		745443	0					
ANR	745449	Identifier	core		745443	1					
ANR	745450	AssignmentExpression	* core = ( RCore * ) user		745443	2		=			
ANR	745451	Identifier	core		745443	0					
ANR	745452	CastExpression	( RCore * ) user		745443	1					
ANR	745453	CastTarget	RCore *		745443	0					
ANR	745454	Identifier	user		745443	1					
ANR	745455	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2339:1:63730:63770	745443	1	True				
ANR	745456	IdentifierDecl	* node = ( RConfigNode * ) data		745443	0					
ANR	745457	IdentifierDeclType	RConfigNode *		745443	0					
ANR	745458	Identifier	node		745443	1					
ANR	745459	AssignmentExpression	* node = ( RConfigNode * ) data		745443	2		=			
ANR	745460	Identifier	node		745443	0					
ANR	745461	CastExpression	( RConfigNode * ) data		745443	1					
ANR	745462	CastTarget	RConfigNode *		745443	0					
ANR	745463	Identifier	data		745443	1					
ANR	745464	IfStatement	if ( ! core || ! core -> bin )		745443	2					
ANR	745465	Condition	! core || ! core -> bin	2340:5:63777:63795	745443	0	True				
ANR	745466	OrExpression	! core || ! core -> bin		745443	0		||			
ANR	745467	UnaryOperationExpression	! core		745443	0					
ANR	745468	UnaryOperator	!		745443	0					
ANR	745469	Identifier	core		745443	1					
ANR	745470	UnaryOperationExpression	! core -> bin		745443	1					
ANR	745471	UnaryOperator	!		745443	0					
ANR	745472	PtrMemberAccess	core -> bin		745443	1					
ANR	745473	Identifier	core		745443	0					
ANR	745474	Identifier	bin		745443	1					
ANR	745475	CompoundStatement		4:26:101:101	745443	1					
ANR	745476	ReturnStatement	return false ;	2341:2:63802:63814	745443	0	True				
ANR	745477	Identifier	false		745443	0					
ANR	745478	IfStatement	if ( node -> value && * node -> value )		745443	3					
ANR	745479	Condition	node -> value && * node -> value	2343:5:63824:63850	745443	0	True				
ANR	745480	AndExpression	node -> value && * node -> value		745443	0		&&			
ANR	745481	PtrMemberAccess	node -> value		745443	0					
ANR	745482	Identifier	node		745443	0					
ANR	745483	Identifier	value		745443	1					
ANR	745484	UnaryOperationExpression	* node -> value		745443	1					
ANR	745485	UnaryOperator	*		745443	0					
ANR	745486	PtrMemberAccess	node -> value		745443	1					
ANR	745487	Identifier	node		745443	0					
ANR	745488	Identifier	value		745443	1					
ANR	745489	CompoundStatement		7:34:156:156	745443	1					
ANR	745490	IfStatement	"if ( ! strcmp ( node -> value , ""auto"" ) )"		745443	0					
ANR	745491	Condition	"! strcmp ( node -> value , ""auto"" )"	2344:6:63861:63889	745443	0	True				
ANR	745492	UnaryOperationExpression	"! strcmp ( node -> value , ""auto"" )"		745443	0					
ANR	745493	UnaryOperator	!		745443	0					
ANR	745494	CallExpression	"strcmp ( node -> value , ""auto"" )"		745443	1					
ANR	745495	Callee	strcmp		745443	0					
ANR	745496	Identifier	strcmp		745443	0					
ANR	745497	ArgumentList	node -> value		745443	1					
ANR	745498	Argument	node -> value		745443	0					
ANR	745499	PtrMemberAccess	node -> value		745443	0					
ANR	745500	Identifier	node		745443	0					
ANR	745501	Identifier	value		745443	1					
ANR	745502	Argument	"""auto"""		745443	1					
ANR	745503	PrimaryExpression	"""auto"""		745443	0					
ANR	745504	CompoundStatement		12:3:250:304	745443	1					
ANR	745505	IfStatement	if ( ! core -> bin -> file )		745443	0					
ANR	745506	Condition	! core -> bin -> file	2345:7:63901:63916	745443	0	True				
ANR	745507	UnaryOperationExpression	! core -> bin -> file		745443	0					
ANR	745508	UnaryOperator	!		745443	0					
ANR	745509	PtrMemberAccess	core -> bin -> file		745443	1					
ANR	745510	PtrMemberAccess	core -> bin		745443	0					
ANR	745511	Identifier	core		745443	0					
ANR	745512	Identifier	bin		745443	1					
ANR	745513	Identifier	file		745443	1					
ANR	745514	CompoundStatement		9:25:222:222	745443	1					
ANR	745515	ReturnStatement	return false ;	2346:4:63925:63937	745443	0	True				
ANR	745516	Identifier	false		745443	0					
ANR	745517	IdentifierDeclStatement	char * name = ( char * ) r_file_basename ( core -> bin -> file ) ;	2348:3:63947:64001	745443	1	True				
ANR	745518	IdentifierDecl	* name = ( char * ) r_file_basename ( core -> bin -> file )		745443	0					
ANR	745519	IdentifierDeclType	char *		745443	0					
ANR	745520	Identifier	name		745443	1					
ANR	745521	AssignmentExpression	* name = ( char * ) r_file_basename ( core -> bin -> file )		745443	2		=			
ANR	745522	Identifier	name		745443	0					
ANR	745523	CastExpression	( char * ) r_file_basename ( core -> bin -> file )		745443	1					
ANR	745524	CastTarget	char *		745443	0					
ANR	745525	CallExpression	r_file_basename ( core -> bin -> file )		745443	1					
ANR	745526	Callee	r_file_basename		745443	0					
ANR	745527	Identifier	r_file_basename		745443	0					
ANR	745528	ArgumentList	core -> bin -> file		745443	1					
ANR	745529	Argument	core -> bin -> file		745443	0					
ANR	745530	PtrMemberAccess	core -> bin -> file		745443	0					
ANR	745531	PtrMemberAccess	core -> bin		745443	0					
ANR	745532	Identifier	core		745443	0					
ANR	745533	Identifier	bin		745443	1					
ANR	745534	Identifier	file		745443	1					
ANR	745535	IfStatement	if ( name )		745443	2					
ANR	745536	Condition	name	2349:7:64010:64013	745443	0	True				
ANR	745537	Identifier	name		745443	0					
ANR	745538	CompoundStatement		13:13:319:319	745443	1					
ANR	745539	ExpressionStatement	"r_name_filter ( name , strlen ( name ) )"	2350:4:64022:64057	745443	0	True				
ANR	745540	CallExpression	"r_name_filter ( name , strlen ( name ) )"		745443	0					
ANR	745541	Callee	r_name_filter		745443	0					
ANR	745542	Identifier	r_name_filter		745443	0					
ANR	745543	ArgumentList	name		745443	1					
ANR	745544	Argument	name		745443	0					
ANR	745545	Identifier	name		745443	0					
ANR	745546	Argument	strlen ( name )		745443	1					
ANR	745547	CallExpression	strlen ( name )		745443	0					
ANR	745548	Callee	strlen		745443	0					
ANR	745549	Identifier	strlen		745443	0					
ANR	745550	ArgumentList	name		745443	1					
ANR	745551	Argument	name		745443	0					
ANR	745552	Identifier	name		745443	0					
ANR	745553	ExpressionStatement	"r_str_filter ( name , strlen ( name ) )"	2351:4:64063:64097	745443	1	True				
ANR	745554	CallExpression	"r_str_filter ( name , strlen ( name ) )"		745443	0					
ANR	745555	Callee	r_str_filter		745443	0					
ANR	745556	Identifier	r_str_filter		745443	0					
ANR	745557	ArgumentList	name		745443	1					
ANR	745558	Argument	name		745443	0					
ANR	745559	Identifier	name		745443	0					
ANR	745560	Argument	strlen ( name )		745443	1					
ANR	745561	CallExpression	strlen ( name )		745443	0					
ANR	745562	Callee	strlen		745443	0					
ANR	745563	Identifier	strlen		745443	0					
ANR	745564	ArgumentList	name		745443	1					
ANR	745565	Argument	name		745443	0					
ANR	745566	Identifier	name		745443	0					
ANR	745567	ExpressionStatement	core -> bin -> prefix = strdup ( name )	2352:4:64103:64136	745443	2	True				
ANR	745568	AssignmentExpression	core -> bin -> prefix = strdup ( name )		745443	0		=			
ANR	745569	PtrMemberAccess	core -> bin -> prefix		745443	0					
ANR	745570	PtrMemberAccess	core -> bin		745443	0					
ANR	745571	Identifier	core		745443	0					
ANR	745572	Identifier	bin		745443	1					
ANR	745573	Identifier	prefix		745443	1					
ANR	745574	CallExpression	strdup ( name )		745443	1					
ANR	745575	Callee	strdup		745443	0					
ANR	745576	Identifier	strdup		745443	0					
ANR	745577	ArgumentList	name		745443	1					
ANR	745578	Argument	name		745443	0					
ANR	745579	Identifier	name		745443	0					
ANR	745580	ExpressionStatement	free ( name )	2353:4:64142:64153	745443	3	True				
ANR	745581	CallExpression	free ( name )		745443	0					
ANR	745582	Callee	free		745443	0					
ANR	745583	Identifier	free		745443	0					
ANR	745584	ArgumentList	name		745443	1					
ANR	745585	Argument	name		745443	0					
ANR	745586	Identifier	name		745443	0					
ANR	745587	ElseStatement	else		745443	0					
ANR	745588	CompoundStatement		19:9:472:472	745443	0					
ANR	745589	ExpressionStatement	core -> bin -> prefix = node -> value	2356:3:64174:64205	745443	0	True				
ANR	745590	AssignmentExpression	core -> bin -> prefix = node -> value		745443	0		=			
ANR	745591	PtrMemberAccess	core -> bin -> prefix		745443	0					
ANR	745592	PtrMemberAccess	core -> bin		745443	0					
ANR	745593	Identifier	core		745443	0					
ANR	745594	Identifier	bin		745443	1					
ANR	745595	Identifier	prefix		745443	1					
ANR	745596	PtrMemberAccess	node -> value		745443	1					
ANR	745597	Identifier	node		745443	0					
ANR	745598	Identifier	value		745443	1					
ANR	745599	ReturnStatement	return true ;	2359:1:64215:64226	745443	4	True				
ANR	745600	Identifier	true		745443	0					
ANR	745601	ReturnType	static bool		745443	1					
ANR	745602	Identifier	cb_binprefix		745443	2					
ANR	745603	ParameterList	"void * user , void * data"		745443	3					
ANR	745604	Parameter	void * user	2337:25:63672:63681	745443	0	True				
ANR	745605	ParameterType	void *		745443	0					
ANR	745606	Identifier	user		745443	1					
ANR	745607	Parameter	void * data	2337:37:63684:63693	745443	1	True				
ANR	745608	ParameterType	void *		745443	0					
ANR	745609	Identifier	data		745443	1					
ANR	745610	CFGEntryNode	ENTRY		745443		True				
ANR	745611	CFGExitNode	EXIT		745443		True				
ANR	745612	Symbol	strcmp		745443						
ANR	745613	Symbol	* node -> value		745443						
ANR	745614	Symbol	data		745443						
ANR	745615	Symbol	core -> bin -> file		745443						
ANR	745616	Symbol	* core		745443						
ANR	745617	Symbol	false		745443						
ANR	745618	Symbol	r_file_basename		745443						
ANR	745619	Symbol	node -> value		745443						
ANR	745620	Symbol	core		745443						
ANR	745621	Symbol	node		745443						
ANR	745622	Symbol	strlen		745443						
ANR	745623	Symbol	* * node		745443						
ANR	745624	Symbol	name		745443						
ANR	745625	Symbol	core -> bin -> prefix		745443						
ANR	745626	Symbol	true		745443						
ANR	745627	Symbol	* node		745443						
ANR	745628	Symbol	* core -> bin		745443						
ANR	745629	Symbol	strdup		745443						
ANR	745630	Symbol	user		745443						
ANR	745631	Symbol	core -> bin		745443						
ANR	745632	Symbol	* * core		745443						
ANR	745633	Function	cb_binmaxstrbuf	2362:0:64231:64595							
ANR	745634	FunctionDef	"cb_binmaxstrbuf (void * user , void * data)"		745633	0					
ANR	745635	CompoundStatement		2362:52:64283:64595	745633	0					
ANR	745636	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2363:1:64286:64314	745633	0	True				
ANR	745637	IdentifierDecl	* core = ( RCore * ) user		745633	0					
ANR	745638	IdentifierDeclType	RCore *		745633	0					
ANR	745639	Identifier	core		745633	1					
ANR	745640	AssignmentExpression	* core = ( RCore * ) user		745633	2		=			
ANR	745641	Identifier	core		745633	0					
ANR	745642	CastExpression	( RCore * ) user		745633	1					
ANR	745643	CastTarget	RCore *		745633	0					
ANR	745644	Identifier	user		745633	1					
ANR	745645	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2364:1:64317:64357	745633	1	True				
ANR	745646	IdentifierDecl	* node = ( RConfigNode * ) data		745633	0					
ANR	745647	IdentifierDeclType	RConfigNode *		745633	0					
ANR	745648	Identifier	node		745633	1					
ANR	745649	AssignmentExpression	* node = ( RConfigNode * ) data		745633	2		=			
ANR	745650	Identifier	node		745633	0					
ANR	745651	CastExpression	( RConfigNode * ) data		745633	1					
ANR	745652	CastTarget	RConfigNode *		745633	0					
ANR	745653	Identifier	data		745633	1					
ANR	745654	IfStatement	if ( core -> bin )		745633	2					
ANR	745655	Condition	core -> bin	2365:5:64364:64372	745633	0	True				
ANR	745656	PtrMemberAccess	core -> bin		745633	0					
ANR	745657	Identifier	core		745633	0					
ANR	745658	Identifier	bin		745633	1					
ANR	745659	CompoundStatement		6:2:120:153	745633	1					
ANR	745660	IdentifierDeclStatement	int v = node -> i_value ;	2366:2:64379:64400	745633	0	True				
ANR	745661	IdentifierDecl	v = node -> i_value		745633	0					
ANR	745662	IdentifierDeclType	int		745633	0					
ANR	745663	Identifier	v		745633	1					
ANR	745664	AssignmentExpression	v = node -> i_value		745633	2		=			
ANR	745665	Identifier	v		745633	0					
ANR	745666	PtrMemberAccess	node -> i_value		745633	1					
ANR	745667	Identifier	node		745633	0					
ANR	745668	Identifier	i_value		745633	1					
ANR	745669	IdentifierDeclStatement	ut64 old_v = core -> bin -> maxstrbuf ;	2367:2:64404:64437	745633	1	True				
ANR	745670	IdentifierDecl	old_v = core -> bin -> maxstrbuf		745633	0					
ANR	745671	IdentifierDeclType	ut64		745633	0					
ANR	745672	Identifier	old_v		745633	1					
ANR	745673	AssignmentExpression	old_v = core -> bin -> maxstrbuf		745633	2		=			
ANR	745674	Identifier	old_v		745633	0					
ANR	745675	PtrMemberAccess	core -> bin -> maxstrbuf		745633	1					
ANR	745676	PtrMemberAccess	core -> bin		745633	0					
ANR	745677	Identifier	core		745633	0					
ANR	745678	Identifier	bin		745633	1					
ANR	745679	Identifier	maxstrbuf		745633	1					
ANR	745680	IfStatement	if ( v < 1 )		745633	2					
ANR	745681	Condition	v < 1	2368:6:64445:64449	745633	0	True				
ANR	745682	RelationalExpression	v < 1		745633	0		<			
ANR	745683	Identifier	v		745633	0					
ANR	745684	PrimaryExpression	1		745633	1					
ANR	745685	CompoundStatement		7:13:168:168	745633	1					
ANR	745686	ExpressionStatement	v = 4	2369:3:64457:64462	745633	0	True				
ANR	745687	AssignmentExpression	v = 4		745633	0		=			
ANR	745688	Identifier	v		745633	0					
ANR	745689	PrimaryExpression	4		745633	1					
ANR	745690	ExpressionStatement	core -> bin -> maxstrbuf = v	2371:2:64478:64502	745633	3	True				
ANR	745691	AssignmentExpression	core -> bin -> maxstrbuf = v		745633	0		=			
ANR	745692	PtrMemberAccess	core -> bin -> maxstrbuf		745633	0					
ANR	745693	PtrMemberAccess	core -> bin		745633	0					
ANR	745694	Identifier	core		745633	0					
ANR	745695	Identifier	bin		745633	1					
ANR	745696	Identifier	maxstrbuf		745633	1					
ANR	745697	Identifier	v		745633	1					
ANR	745698	IfStatement	if ( v > old_v )		745633	4					
ANR	745699	Condition	v > old_v	2372:6:64510:64516	745633	0	True				
ANR	745700	RelationalExpression	v > old_v		745633	0		>			
ANR	745701	Identifier	v		745633	0					
ANR	745702	Identifier	old_v		745633	1					
ANR	745703	CompoundStatement		11:15:235:235	745633	1					
ANR	745704	ExpressionStatement	r_core_bin_refresh_strings ( core )	2373:3:64524:64557	745633	0	True				
ANR	745705	CallExpression	r_core_bin_refresh_strings ( core )		745633	0					
ANR	745706	Callee	r_core_bin_refresh_strings		745633	0					
ANR	745707	Identifier	r_core_bin_refresh_strings		745633	0					
ANR	745708	ArgumentList	core		745633	1					
ANR	745709	Argument	core		745633	0					
ANR	745710	Identifier	core		745633	0					
ANR	745711	ReturnStatement	return true ;	2375:2:64565:64576	745633	5	True				
ANR	745712	Identifier	true		745633	0					
ANR	745713	ReturnStatement	return true ;	2377:1:64582:64593	745633	3	True				
ANR	745714	Identifier	true		745633	0					
ANR	745715	ReturnType	static bool		745633	1					
ANR	745716	Identifier	cb_binmaxstrbuf		745633	2					
ANR	745717	ParameterList	"void * user , void * data"		745633	3					
ANR	745718	Parameter	void * user	2362:28:64259:64268	745633	0	True				
ANR	745719	ParameterType	void *		745633	0					
ANR	745720	Identifier	user		745633	1					
ANR	745721	Parameter	void * data	2362:40:64271:64280	745633	1	True				
ANR	745722	ParameterType	void *		745633	0					
ANR	745723	Identifier	data		745633	1					
ANR	745724	CFGEntryNode	ENTRY		745633		True				
ANR	745725	CFGExitNode	EXIT		745633		True				
ANR	745726	Symbol	data		745633						
ANR	745727	Symbol	* core		745633						
ANR	745728	Symbol	node -> i_value		745633						
ANR	745729	Symbol	old_v		745633						
ANR	745730	Symbol	core		745633						
ANR	745731	Symbol	node		745633						
ANR	745732	Symbol	v		745633						
ANR	745733	Symbol	true		745633						
ANR	745734	Symbol	* node		745633						
ANR	745735	Symbol	core -> bin -> maxstrbuf		745633						
ANR	745736	Symbol	* core -> bin		745633						
ANR	745737	Symbol	user		745633						
ANR	745738	Symbol	core -> bin		745633						
ANR	745739	Symbol	* * core		745633						
ANR	745740	Function	cb_binmaxstr	2380:0:64598:64958							
ANR	745741	FunctionDef	"cb_binmaxstr (void * user , void * data)"		745740	0					
ANR	745742	CompoundStatement		2380:49:64647:64958	745740	0					
ANR	745743	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2381:1:64650:64678	745740	0	True				
ANR	745744	IdentifierDecl	* core = ( RCore * ) user		745740	0					
ANR	745745	IdentifierDeclType	RCore *		745740	0					
ANR	745746	Identifier	core		745740	1					
ANR	745747	AssignmentExpression	* core = ( RCore * ) user		745740	2		=			
ANR	745748	Identifier	core		745740	0					
ANR	745749	CastExpression	( RCore * ) user		745740	1					
ANR	745750	CastTarget	RCore *		745740	0					
ANR	745751	Identifier	user		745740	1					
ANR	745752	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2382:1:64681:64721	745740	1	True				
ANR	745753	IdentifierDecl	* node = ( RConfigNode * ) data		745740	0					
ANR	745754	IdentifierDeclType	RConfigNode *		745740	0					
ANR	745755	Identifier	node		745740	1					
ANR	745756	AssignmentExpression	* node = ( RConfigNode * ) data		745740	2		=			
ANR	745757	Identifier	node		745740	0					
ANR	745758	CastExpression	( RConfigNode * ) data		745740	1					
ANR	745759	CastTarget	RConfigNode *		745740	0					
ANR	745760	Identifier	data		745740	1					
ANR	745761	IfStatement	if ( core -> bin )		745740	2					
ANR	745762	Condition	core -> bin	2383:5:64728:64736	745740	0	True				
ANR	745763	PtrMemberAccess	core -> bin		745740	0					
ANR	745764	Identifier	core		745740	0					
ANR	745765	Identifier	bin		745740	1					
ANR	745766	CompoundStatement		5:2:95:116	745740	1					
ANR	745767	IdentifierDeclStatement	int v = node -> i_value ;	2384:2:64743:64764	745740	0	True				
ANR	745768	IdentifierDecl	v = node -> i_value		745740	0					
ANR	745769	IdentifierDeclType	int		745740	0					
ANR	745770	Identifier	v		745740	1					
ANR	745771	AssignmentExpression	v = node -> i_value		745740	2		=			
ANR	745772	Identifier	v		745740	0					
ANR	745773	PtrMemberAccess	node -> i_value		745740	1					
ANR	745774	Identifier	node		745740	0					
ANR	745775	Identifier	i_value		745740	1					
ANR	745776	IfStatement	if ( v < 1 )		745740	1					
ANR	745777	Condition	v < 1	2385:6:64772:64776	745740	0	True				
ANR	745778	RelationalExpression	v < 1		745740	0		<			
ANR	745779	Identifier	v		745740	0					
ANR	745780	PrimaryExpression	1		745740	1					
ANR	745781	CompoundStatement		6:13:131:131	745740	1					
ANR	745782	ExpressionStatement	v = 4	2386:3:64784:64789	745740	0	True				
ANR	745783	AssignmentExpression	v = 4		745740	0		=			
ANR	745784	Identifier	v		745740	0					
ANR	745785	PrimaryExpression	4		745740	1					
ANR	745786	ExpressionStatement	core -> bin -> maxstrlen = v	2388:2:64805:64829	745740	2	True				
ANR	745787	AssignmentExpression	core -> bin -> maxstrlen = v		745740	0		=			
ANR	745788	PtrMemberAccess	core -> bin -> maxstrlen		745740	0					
ANR	745789	PtrMemberAccess	core -> bin		745740	0					
ANR	745790	Identifier	core		745740	0					
ANR	745791	Identifier	bin		745740	1					
ANR	745792	Identifier	maxstrlen		745740	1					
ANR	745793	Identifier	v		745740	1					
ANR	745794	ExpressionStatement	r_core_bin_refresh_strings ( core )	2390:2:64891:64924	745740	3	True				
ANR	745795	CallExpression	r_core_bin_refresh_strings ( core )		745740	0					
ANR	745796	Callee	r_core_bin_refresh_strings		745740	0					
ANR	745797	Identifier	r_core_bin_refresh_strings		745740	0					
ANR	745798	ArgumentList	core		745740	1					
ANR	745799	Argument	core		745740	0					
ANR	745800	Identifier	core		745740	0					
ANR	745801	ReturnStatement	return true ;	2391:2:64928:64939	745740	4	True				
ANR	745802	Identifier	true		745740	0					
ANR	745803	ReturnStatement	return true ;	2393:1:64945:64956	745740	3	True				
ANR	745804	Identifier	true		745740	0					
ANR	745805	ReturnType	static bool		745740	1					
ANR	745806	Identifier	cb_binmaxstr		745740	2					
ANR	745807	ParameterList	"void * user , void * data"		745740	3					
ANR	745808	Parameter	void * user	2380:25:64623:64632	745740	0	True				
ANR	745809	ParameterType	void *		745740	0					
ANR	745810	Identifier	user		745740	1					
ANR	745811	Parameter	void * data	2380:37:64635:64644	745740	1	True				
ANR	745812	ParameterType	void *		745740	0					
ANR	745813	Identifier	data		745740	1					
ANR	745814	CFGEntryNode	ENTRY		745740		True				
ANR	745815	CFGExitNode	EXIT		745740		True				
ANR	745816	Symbol	data		745740						
ANR	745817	Symbol	core -> bin -> maxstrlen		745740						
ANR	745818	Symbol	* core		745740						
ANR	745819	Symbol	node -> i_value		745740						
ANR	745820	Symbol	core		745740						
ANR	745821	Symbol	node		745740						
ANR	745822	Symbol	v		745740						
ANR	745823	Symbol	true		745740						
ANR	745824	Symbol	* node		745740						
ANR	745825	Symbol	* core -> bin		745740						
ANR	745826	Symbol	user		745740						
ANR	745827	Symbol	core -> bin		745740						
ANR	745828	Symbol	* * core		745740						
ANR	745829	Function	cb_binminstr	2396:0:64961:65321							
ANR	745830	FunctionDef	"cb_binminstr (void * user , void * data)"		745829	0					
ANR	745831	CompoundStatement		2396:49:65010:65321	745829	0					
ANR	745832	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2397:1:65013:65041	745829	0	True				
ANR	745833	IdentifierDecl	* core = ( RCore * ) user		745829	0					
ANR	745834	IdentifierDeclType	RCore *		745829	0					
ANR	745835	Identifier	core		745829	1					
ANR	745836	AssignmentExpression	* core = ( RCore * ) user		745829	2		=			
ANR	745837	Identifier	core		745829	0					
ANR	745838	CastExpression	( RCore * ) user		745829	1					
ANR	745839	CastTarget	RCore *		745829	0					
ANR	745840	Identifier	user		745829	1					
ANR	745841	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2398:1:65044:65084	745829	1	True				
ANR	745842	IdentifierDecl	* node = ( RConfigNode * ) data		745829	0					
ANR	745843	IdentifierDeclType	RConfigNode *		745829	0					
ANR	745844	Identifier	node		745829	1					
ANR	745845	AssignmentExpression	* node = ( RConfigNode * ) data		745829	2		=			
ANR	745846	Identifier	node		745829	0					
ANR	745847	CastExpression	( RConfigNode * ) data		745829	1					
ANR	745848	CastTarget	RConfigNode *		745829	0					
ANR	745849	Identifier	data		745829	1					
ANR	745850	IfStatement	if ( core -> bin )		745829	2					
ANR	745851	Condition	core -> bin	2399:5:65091:65099	745829	0	True				
ANR	745852	PtrMemberAccess	core -> bin		745829	0					
ANR	745853	Identifier	core		745829	0					
ANR	745854	Identifier	bin		745829	1					
ANR	745855	CompoundStatement		5:2:95:116	745829	1					
ANR	745856	IdentifierDeclStatement	int v = node -> i_value ;	2400:2:65106:65127	745829	0	True				
ANR	745857	IdentifierDecl	v = node -> i_value		745829	0					
ANR	745858	IdentifierDeclType	int		745829	0					
ANR	745859	Identifier	v		745829	1					
ANR	745860	AssignmentExpression	v = node -> i_value		745829	2		=			
ANR	745861	Identifier	v		745829	0					
ANR	745862	PtrMemberAccess	node -> i_value		745829	1					
ANR	745863	Identifier	node		745829	0					
ANR	745864	Identifier	i_value		745829	1					
ANR	745865	IfStatement	if ( v < 1 )		745829	1					
ANR	745866	Condition	v < 1	2401:6:65135:65139	745829	0	True				
ANR	745867	RelationalExpression	v < 1		745829	0		<			
ANR	745868	Identifier	v		745829	0					
ANR	745869	PrimaryExpression	1		745829	1					
ANR	745870	CompoundStatement		6:13:131:131	745829	1					
ANR	745871	ExpressionStatement	v = 4	2402:3:65147:65152	745829	0	True				
ANR	745872	AssignmentExpression	v = 4		745829	0		=			
ANR	745873	Identifier	v		745829	0					
ANR	745874	PrimaryExpression	4		745829	1					
ANR	745875	ExpressionStatement	core -> bin -> minstrlen = v	2404:2:65168:65192	745829	2	True				
ANR	745876	AssignmentExpression	core -> bin -> minstrlen = v		745829	0		=			
ANR	745877	PtrMemberAccess	core -> bin -> minstrlen		745829	0					
ANR	745878	PtrMemberAccess	core -> bin		745829	0					
ANR	745879	Identifier	core		745829	0					
ANR	745880	Identifier	bin		745829	1					
ANR	745881	Identifier	minstrlen		745829	1					
ANR	745882	Identifier	v		745829	1					
ANR	745883	ExpressionStatement	r_core_bin_refresh_strings ( core )	2406:2:65254:65287	745829	3	True				
ANR	745884	CallExpression	r_core_bin_refresh_strings ( core )		745829	0					
ANR	745885	Callee	r_core_bin_refresh_strings		745829	0					
ANR	745886	Identifier	r_core_bin_refresh_strings		745829	0					
ANR	745887	ArgumentList	core		745829	1					
ANR	745888	Argument	core		745829	0					
ANR	745889	Identifier	core		745829	0					
ANR	745890	ReturnStatement	return true ;	2407:2:65291:65302	745829	4	True				
ANR	745891	Identifier	true		745829	0					
ANR	745892	ReturnStatement	return true ;	2409:1:65308:65319	745829	3	True				
ANR	745893	Identifier	true		745829	0					
ANR	745894	ReturnType	static bool		745829	1					
ANR	745895	Identifier	cb_binminstr		745829	2					
ANR	745896	ParameterList	"void * user , void * data"		745829	3					
ANR	745897	Parameter	void * user	2396:25:64986:64995	745829	0	True				
ANR	745898	ParameterType	void *		745829	0					
ANR	745899	Identifier	user		745829	1					
ANR	745900	Parameter	void * data	2396:37:64998:65007	745829	1	True				
ANR	745901	ParameterType	void *		745829	0					
ANR	745902	Identifier	data		745829	1					
ANR	745903	CFGEntryNode	ENTRY		745829		True				
ANR	745904	CFGExitNode	EXIT		745829		True				
ANR	745905	Symbol	data		745829						
ANR	745906	Symbol	* core		745829						
ANR	745907	Symbol	node -> i_value		745829						
ANR	745908	Symbol	core		745829						
ANR	745909	Symbol	node		745829						
ANR	745910	Symbol	v		745829						
ANR	745911	Symbol	true		745829						
ANR	745912	Symbol	* node		745829						
ANR	745913	Symbol	* core -> bin		745829						
ANR	745914	Symbol	user		745829						
ANR	745915	Symbol	core -> bin		745829						
ANR	745916	Symbol	* * core		745829						
ANR	745917	Symbol	core -> bin -> minstrlen		745829						
ANR	745918	Function	cb_searchin	2412:0:65324:66903							
ANR	745919	FunctionDef	"cb_searchin (void * user , void * data)"		745918	0					
ANR	745920	CompoundStatement		2412:48:65372:66903	745918	0					
ANR	745921	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2413:1:65375:65401	745918	0	True				
ANR	745922	IdentifierDecl	* core = ( RCore * ) user		745918	0					
ANR	745923	IdentifierDeclType	RCore *		745918	0					
ANR	745924	Identifier	core		745918	1					
ANR	745925	AssignmentExpression	* core = ( RCore * ) user		745918	2		=			
ANR	745926	Identifier	core		745918	0					
ANR	745927	CastExpression	( RCore * ) user		745918	1					
ANR	745928	CastTarget	RCore *		745918	0					
ANR	745929	Identifier	user		745918	1					
ANR	745930	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2414:1:65404:65443	745918	1	True				
ANR	745931	IdentifierDecl	* node = ( RConfigNode * ) data		745918	0					
ANR	745932	IdentifierDeclType	RConfigNode *		745918	0					
ANR	745933	Identifier	node		745918	1					
ANR	745934	AssignmentExpression	* node = ( RConfigNode * ) data		745918	2		=			
ANR	745935	Identifier	node		745918	0					
ANR	745936	CastExpression	( RConfigNode * ) data		745918	1					
ANR	745937	CastTarget	RConfigNode *		745918	0					
ANR	745938	Identifier	data		745918	1					
ANR	745939	IfStatement	if ( node -> value [ 0 ] == '?' )		745918	2					
ANR	745940	Condition	node -> value [ 0 ] == '?'	2415:5:65450:65470	745918	0	True				
ANR	745941	EqualityExpression	node -> value [ 0 ] == '?'		745918	0		==			
ANR	745942	ArrayIndexing	node -> value [ 0 ]		745918	0					
ANR	745943	PtrMemberAccess	node -> value		745918	0					
ANR	745944	Identifier	node		745918	0					
ANR	745945	Identifier	value		745918	1					
ANR	745946	PrimaryExpression	0		745918	1					
ANR	745947	PrimaryExpression	'?'		745918	1					
ANR	745948	CompoundStatement		4:28:100:100	745918	1					
ANR	745949	IfStatement	if ( strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?' )		745918	0					
ANR	745950	Condition	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'	2416:6:65481:65529	745918	0	True				
ANR	745951	AndExpression	strlen ( node -> value ) > 1 && node -> value [ 1 ] == '?'		745918	0		&&			
ANR	745952	RelationalExpression	strlen ( node -> value ) > 1		745918	0		>			
ANR	745953	CallExpression	strlen ( node -> value )		745918	0					
ANR	745954	Callee	strlen		745918	0					
ANR	745955	Identifier	strlen		745918	0					
ANR	745956	ArgumentList	node -> value		745918	1					
ANR	745957	Argument	node -> value		745918	0					
ANR	745958	PtrMemberAccess	node -> value		745918	0					
ANR	745959	Identifier	node		745918	0					
ANR	745960	Identifier	value		745918	1					
ANR	745961	PrimaryExpression	1		745918	1					
ANR	745962	EqualityExpression	node -> value [ 1 ] == '?'		745918	1		==			
ANR	745963	ArrayIndexing	node -> value [ 1 ]		745918	0					
ANR	745964	PtrMemberAccess	node -> value		745918	0					
ANR	745965	Identifier	node		745918	0					
ANR	745966	Identifier	value		745918	1					
ANR	745967	PrimaryExpression	1		745918	1					
ANR	745968	PrimaryExpression	'?'		745918	1					
ANR	745969	CompoundStatement		5:57:159:159	745918	1					
ANR	745970	Statement	r_cons_printf	2417:3:65537:65549	745918	0	True				
ANR	745971	Statement	(	2417:17:65551:65551	745918	1	True				
ANR	745972	Statement	"""Valid values for search.in (depends on .from/.to and io.va):\\n"""	2417:18:65552:65615	745918	2	True				
ANR	745973	Statement	"""raw                search in raw io (ignoring bounds)\\n"""	2418:3:65620:65676	745918	3	True				
ANR	745974	Statement	"""block              search in the current block\\n"""	2419:3:65681:65730	745918	4	True				
ANR	745975	Statement	"""io.map             search in current map\\n"""	2420:3:65735:65778	745918	5	True				
ANR	745976	Statement	"""io.sky.[rwx]       search in all skyline segments\\n"""	2421:3:65783:65835	745918	6	True				
ANR	745977	Statement	"""io.maps            search in all maps\\n"""	2422:3:65840:65880	745918	7	True				
ANR	745978	Statement	"""io.maps.[rwx]      search in all r-w-x io maps\\n"""	2423:3:65885:65934	745918	8	True				
ANR	745979	Statement	"""bin.segment        search in current mapped segment\\n"""	2424:3:65939:65993	745918	9	True				
ANR	745980	Statement	"""bin.segments       search in all mapped segments\\n"""	2425:3:65998:66049	745918	10	True				
ANR	745981	Statement	"""bin.segments.[rwx] search in all r-w-x segments\\n"""	2426:3:66054:66104	745918	11	True				
ANR	745982	Statement	"""bin.section        search in current mapped section\\n"""	2427:3:66109:66163	745918	12	True				
ANR	745983	Statement	"""bin.sections       search in all mapped sections\\n"""	2428:3:66168:66219	745918	13	True				
ANR	745984	Statement	"""bin.sections.[rwx] search in all r-w-x sections\\n"""	2429:3:66224:66274	745918	14	True				
ANR	745985	Statement	"""dbg.stack          search in the stack\\n"""	2430:3:66279:66320	745918	15	True				
ANR	745986	Statement	"""dbg.heap           search in the heap\\n"""	2431:3:66325:66365	745918	16	True				
ANR	745987	Statement	"""dbg.map            search in current memory map\\n"""	2432:3:66370:66420	745918	17	True				
ANR	745988	Statement	"""dbg.maps           search in all memory maps\\n"""	2433:3:66425:66472	745918	18	True				
ANR	745989	Statement	"""dbg.maps.[rwx]     search in all executable marked memory maps\\n"""	2434:3:66477:66542	745918	19	True				
ANR	745990	Statement	"""anal.fcn           search in the current function\\n"""	2435:3:66547:66599	745918	20	True				
ANR	745991	Statement	"""anal.bb            search in the current basic-block\\n"""	2436:3:66604:66659	745918	21	True				
ANR	745992	Statement	)	2436:59:66660:66660	745918	22	True				
ANR	745993	ExpressionStatement		2436:60:66661:66661	745918	23	True				
ANR	745994	ElseStatement	else		745918	0					
ANR	745995	CompoundStatement		26:9:1299:1299	745918	0					
ANR	745996	ExpressionStatement	print_node_options ( node )	2438:3:66677:66702	745918	0	True				
ANR	745997	CallExpression	print_node_options ( node )		745918	0					
ANR	745998	Callee	print_node_options		745918	0					
ANR	745999	Identifier	print_node_options		745918	0					
ANR	746000	ArgumentList	node		745918	1					
ANR	746001	Argument	node		745918	0					
ANR	746002	Identifier	node		745918	0					
ANR	746003	ReturnStatement	return false ;	2440:2:66710:66722	745918	1	True				
ANR	746004	Identifier	false		745918	0					
ANR	746005	IfStatement	"if ( r_str_startswith ( node -> name , ""anal"" ) )"		745918	3					
ANR	746006	Condition	"r_str_startswith ( node -> name , ""anal"" )"	2443:5:66780:66816	745918	0	True				
ANR	746007	CallExpression	"r_str_startswith ( node -> name , ""anal"" )"		745918	0					
ANR	746008	Callee	r_str_startswith		745918	0					
ANR	746009	Identifier	r_str_startswith		745918	0					
ANR	746010	ArgumentList	node -> name		745918	1					
ANR	746011	Argument	node -> name		745918	0					
ANR	746012	PtrMemberAccess	node -> name		745918	0					
ANR	746013	Identifier	node		745918	0					
ANR	746014	Identifier	name		745918	1					
ANR	746015	Argument	"""anal"""		745918	1					
ANR	746016	PrimaryExpression	"""anal"""		745918	0					
ANR	746017	CompoundStatement		32:44:1446:1446	745918	1					
ANR	746018	ExpressionStatement	"core -> anal -> opt . noncode = ( strchr ( node -> value , 'x' ) == NULL )"	2444:2:66823:66884	745918	0	True				
ANR	746019	AssignmentExpression	"core -> anal -> opt . noncode = ( strchr ( node -> value , 'x' ) == NULL )"		745918	0		=			
ANR	746020	MemberAccess	core -> anal -> opt . noncode		745918	0					
ANR	746021	PtrMemberAccess	core -> anal -> opt		745918	0					
ANR	746022	PtrMemberAccess	core -> anal		745918	0					
ANR	746023	Identifier	core		745918	0					
ANR	746024	Identifier	anal		745918	1					
ANR	746025	Identifier	opt		745918	1					
ANR	746026	Identifier	noncode		745918	1					
ANR	746027	EqualityExpression	"strchr ( node -> value , 'x' ) == NULL"		745918	1		==			
ANR	746028	CallExpression	"strchr ( node -> value , 'x' )"		745918	0					
ANR	746029	Callee	strchr		745918	0					
ANR	746030	Identifier	strchr		745918	0					
ANR	746031	ArgumentList	node -> value		745918	1					
ANR	746032	Argument	node -> value		745918	0					
ANR	746033	PtrMemberAccess	node -> value		745918	0					
ANR	746034	Identifier	node		745918	0					
ANR	746035	Identifier	value		745918	1					
ANR	746036	Argument	'x'		745918	1					
ANR	746037	PrimaryExpression	'x'		745918	0					
ANR	746038	Identifier	NULL		745918	1					
ANR	746039	ReturnStatement	return true ;	2446:1:66890:66901	745918	4	True				
ANR	746040	Identifier	true		745918	0					
ANR	746041	ReturnType	static bool		745918	1					
ANR	746042	Identifier	cb_searchin		745918	2					
ANR	746043	ParameterList	"void * user , void * data"		745918	3					
ANR	746044	Parameter	void * user	2412:24:65348:65357	745918	0	True				
ANR	746045	ParameterType	void *		745918	0					
ANR	746046	Identifier	user		745918	1					
ANR	746047	Parameter	void * data	2412:36:65360:65369	745918	1	True				
ANR	746048	ParameterType	void *		745918	0					
ANR	746049	Identifier	data		745918	1					
ANR	746050	CFGEntryNode	ENTRY		745918		True				
ANR	746051	CFGExitNode	EXIT		745918		True				
ANR	746052	Symbol	r_str_startswith		745918						
ANR	746053	Symbol	core -> anal -> opt		745918						
ANR	746054	Symbol	* node -> value		745918						
ANR	746055	Symbol	NULL		745918						
ANR	746056	Symbol	data		745918						
ANR	746057	Symbol	false		745918						
ANR	746058	Symbol	* core		745918						
ANR	746059	Symbol	strchr		745918						
ANR	746060	Symbol	core -> anal		745918						
ANR	746061	Symbol	node -> value		745918						
ANR	746062	Symbol	core		745918						
ANR	746063	Symbol	node		745918						
ANR	746064	Symbol	strlen		745918						
ANR	746065	Symbol	node -> name		745918						
ANR	746066	Symbol	* core -> anal		745918						
ANR	746067	Symbol	* * node		745918						
ANR	746068	Symbol	true		745918						
ANR	746069	Symbol	* node		745918						
ANR	746070	Symbol	core -> anal -> opt . noncode		745918						
ANR	746071	Symbol	user		745918						
ANR	746072	Symbol	* * core		745918						
ANR	746073	Function	__dbg_swstep_getter	2449:0:66906:67049							
ANR	746074	FunctionDef	"__dbg_swstep_getter (void * user , RConfigNode * node)"		746073	0					
ANR	746075	CompoundStatement		2449:62:66968:67049	746073	0					
ANR	746076	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2450:1:66971:66997	746073	0	True				
ANR	746077	IdentifierDecl	* core = ( RCore * ) user		746073	0					
ANR	746078	IdentifierDeclType	RCore *		746073	0					
ANR	746079	Identifier	core		746073	1					
ANR	746080	AssignmentExpression	* core = ( RCore * ) user		746073	2		=			
ANR	746081	Identifier	core		746073	0					
ANR	746082	CastExpression	( RCore * ) user		746073	1					
ANR	746083	CastTarget	RCore *		746073	0					
ANR	746084	Identifier	user		746073	1					
ANR	746085	ExpressionStatement	node -> i_value = core -> dbg -> swstep	2451:1:67000:67033	746073	1	True				
ANR	746086	AssignmentExpression	node -> i_value = core -> dbg -> swstep		746073	0		=			
ANR	746087	PtrMemberAccess	node -> i_value		746073	0					
ANR	746088	Identifier	node		746073	0					
ANR	746089	Identifier	i_value		746073	1					
ANR	746090	PtrMemberAccess	core -> dbg -> swstep		746073	1					
ANR	746091	PtrMemberAccess	core -> dbg		746073	0					
ANR	746092	Identifier	core		746073	0					
ANR	746093	Identifier	dbg		746073	1					
ANR	746094	Identifier	swstep		746073	1					
ANR	746095	ReturnStatement	return true ;	2452:1:67036:67047	746073	2	True				
ANR	746096	Identifier	true		746073	0					
ANR	746097	ReturnType	static int		746073	1					
ANR	746098	Identifier	__dbg_swstep_getter		746073	2					
ANR	746099	ParameterList	"void * user , RConfigNode * node"		746073	3					
ANR	746100	Parameter	void * user	2449:31:66937:66946	746073	0	True				
ANR	746101	ParameterType	void *		746073	0					
ANR	746102	Identifier	user		746073	1					
ANR	746103	Parameter	RConfigNode * node	2449:43:66949:66965	746073	1	True				
ANR	746104	ParameterType	RConfigNode *		746073	0					
ANR	746105	Identifier	node		746073	1					
ANR	746106	CFGEntryNode	ENTRY		746073		True				
ANR	746107	CFGExitNode	EXIT		746073		True				
ANR	746108	Symbol	node		746073						
ANR	746109	Symbol	core		746073						
ANR	746110	Symbol	* core		746073						
ANR	746111	Symbol	true		746073						
ANR	746112	Symbol	* node		746073						
ANR	746113	Symbol	user		746073						
ANR	746114	Symbol	* core -> dbg		746073						
ANR	746115	Symbol	core -> dbg -> swstep		746073						
ANR	746116	Symbol	* * core		746073						
ANR	746117	Symbol	node -> i_value		746073						
ANR	746118	Symbol	core -> dbg		746073						
ANR	746119	Function	cb_dirpfx	2455:0:67052:67151							
ANR	746120	FunctionDef	"cb_dirpfx (RCore * core , RConfigNode * node)"		746119	0					
ANR	746121	CompoundStatement		2455:54:67106:67151	746119	0					
ANR	746122	ExpressionStatement	r_sys_prefix ( node -> value )	2456:1:67109:67135	746119	0	True				
ANR	746123	CallExpression	r_sys_prefix ( node -> value )		746119	0					
ANR	746124	Callee	r_sys_prefix		746119	0					
ANR	746125	Identifier	r_sys_prefix		746119	0					
ANR	746126	ArgumentList	node -> value		746119	1					
ANR	746127	Argument	node -> value		746119	0					
ANR	746128	PtrMemberAccess	node -> value		746119	0					
ANR	746129	Identifier	node		746119	0					
ANR	746130	Identifier	value		746119	1					
ANR	746131	ReturnStatement	return true ;	2457:1:67138:67149	746119	1	True				
ANR	746132	Identifier	true		746119	0					
ANR	746133	ReturnType	static bool		746119	1					
ANR	746134	Identifier	cb_dirpfx		746119	2					
ANR	746135	ParameterList	"RCore * core , RConfigNode * node"		746119	3					
ANR	746136	Parameter	RCore * core	2455:22:67074:67084	746119	0	True				
ANR	746137	ParameterType	RCore *		746119	0					
ANR	746138	Identifier	core		746119	1					
ANR	746139	Parameter	RConfigNode * node	2455:35:67087:67103	746119	1	True				
ANR	746140	ParameterType	RConfigNode *		746119	0					
ANR	746141	Identifier	node		746119	1					
ANR	746142	CFGEntryNode	ENTRY		746119		True				
ANR	746143	CFGExitNode	EXIT		746119		True				
ANR	746144	Symbol	core		746119						
ANR	746145	Symbol	node		746119						
ANR	746146	Symbol	true		746119						
ANR	746147	Symbol	* node		746119						
ANR	746148	Symbol	node -> value		746119						
ANR	746149	Function	cb_anal_roregs	2460:0:67154:67387							
ANR	746150	FunctionDef	"cb_anal_roregs (RCore * core , RConfigNode * node)"		746149	0					
ANR	746151	CompoundStatement		2460:59:67213:67387	746149	0					
ANR	746152	IfStatement	if ( core && core -> anal && core -> anal -> reg )		746149	0					
ANR	746153	Condition	core && core -> anal && core -> anal -> reg	2461:5:67220:67256	746149	0	True				
ANR	746154	AndExpression	core && core -> anal && core -> anal -> reg		746149	0		&&			
ANR	746155	Identifier	core		746149	0					
ANR	746156	AndExpression	core -> anal && core -> anal -> reg		746149	1		&&			
ANR	746157	PtrMemberAccess	core -> anal		746149	0					
ANR	746158	Identifier	core		746149	0					
ANR	746159	Identifier	anal		746149	1					
ANR	746160	PtrMemberAccess	core -> anal -> reg		746149	1					
ANR	746161	PtrMemberAccess	core -> anal		746149	0					
ANR	746162	Identifier	core		746149	0					
ANR	746163	Identifier	anal		746149	1					
ANR	746164	Identifier	reg		746149	1					
ANR	746165	CompoundStatement		2:44:45:45	746149	1					
ANR	746166	ExpressionStatement	r_list_free ( core -> anal -> reg -> roregs )	2462:2:67263:67300	746149	0	True				
ANR	746167	CallExpression	r_list_free ( core -> anal -> reg -> roregs )		746149	0					
ANR	746168	Callee	r_list_free		746149	0					
ANR	746169	Identifier	r_list_free		746149	0					
ANR	746170	ArgumentList	core -> anal -> reg -> roregs		746149	1					
ANR	746171	Argument	core -> anal -> reg -> roregs		746149	0					
ANR	746172	PtrMemberAccess	core -> anal -> reg -> roregs		746149	0					
ANR	746173	PtrMemberAccess	core -> anal -> reg		746149	0					
ANR	746174	PtrMemberAccess	core -> anal		746149	0					
ANR	746175	Identifier	core		746149	0					
ANR	746176	Identifier	anal		746149	1					
ANR	746177	Identifier	reg		746149	1					
ANR	746178	Identifier	roregs		746149	1					
ANR	746179	ExpressionStatement	"core -> anal -> reg -> roregs = r_str_split_duplist ( node -> value , "","" )"	2463:2:67304:67368	746149	1	True				
ANR	746180	AssignmentExpression	"core -> anal -> reg -> roregs = r_str_split_duplist ( node -> value , "","" )"		746149	0		=			
ANR	746181	PtrMemberAccess	core -> anal -> reg -> roregs		746149	0					
ANR	746182	PtrMemberAccess	core -> anal -> reg		746149	0					
ANR	746183	PtrMemberAccess	core -> anal		746149	0					
ANR	746184	Identifier	core		746149	0					
ANR	746185	Identifier	anal		746149	1					
ANR	746186	Identifier	reg		746149	1					
ANR	746187	Identifier	roregs		746149	1					
ANR	746188	CallExpression	"r_str_split_duplist ( node -> value , "","" )"		746149	1					
ANR	746189	Callee	r_str_split_duplist		746149	0					
ANR	746190	Identifier	r_str_split_duplist		746149	0					
ANR	746191	ArgumentList	node -> value		746149	1					
ANR	746192	Argument	node -> value		746149	0					
ANR	746193	PtrMemberAccess	node -> value		746149	0					
ANR	746194	Identifier	node		746149	0					
ANR	746195	Identifier	value		746149	1					
ANR	746196	Argument	""","""		746149	1					
ANR	746197	PrimaryExpression	""","""		746149	0					
ANR	746198	ReturnStatement	return true ;	2465:1:67374:67385	746149	1	True				
ANR	746199	Identifier	true		746149	0					
ANR	746200	ReturnType	static bool		746149	1					
ANR	746201	Identifier	cb_anal_roregs		746149	2					
ANR	746202	ParameterList	"RCore * core , RConfigNode * node"		746149	3					
ANR	746203	Parameter	RCore * core	2460:27:67181:67191	746149	0	True				
ANR	746204	ParameterType	RCore *		746149	0					
ANR	746205	Identifier	core		746149	1					
ANR	746206	Parameter	RConfigNode * node	2460:40:67194:67210	746149	1	True				
ANR	746207	ParameterType	RConfigNode *		746149	0					
ANR	746208	Identifier	node		746149	1					
ANR	746209	CFGEntryNode	ENTRY		746149		True				
ANR	746210	CFGExitNode	EXIT		746149		True				
ANR	746211	Symbol	core -> anal -> reg		746149						
ANR	746212	Symbol	* core		746149						
ANR	746213	Symbol	core -> anal		746149						
ANR	746214	Symbol	node -> value		746149						
ANR	746215	Symbol	core		746149						
ANR	746216	Symbol	node		746149						
ANR	746217	Symbol	* * * core		746149						
ANR	746218	Symbol	* core -> anal		746149						
ANR	746219	Symbol	core -> anal -> reg -> roregs		746149						
ANR	746220	Symbol	true		746149						
ANR	746221	Symbol	* * core -> anal		746149						
ANR	746222	Symbol	* node		746149						
ANR	746223	Symbol	* core -> anal -> reg		746149						
ANR	746224	Symbol	r_str_split_duplist		746149						
ANR	746225	Symbol	* * core		746149						
ANR	746226	Function	cb_anal_gp	2468:0:67390:67494							
ANR	746227	FunctionDef	"cb_anal_gp (RCore * core , RConfigNode * node)"		746226	0					
ANR	746228	CompoundStatement		2468:55:67445:67494	746226	0					
ANR	746229	ExpressionStatement	core -> anal -> gp = node -> i_value	2469:1:67448:67478	746226	0	True				
ANR	746230	AssignmentExpression	core -> anal -> gp = node -> i_value		746226	0		=			
ANR	746231	PtrMemberAccess	core -> anal -> gp		746226	0					
ANR	746232	PtrMemberAccess	core -> anal		746226	0					
ANR	746233	Identifier	core		746226	0					
ANR	746234	Identifier	anal		746226	1					
ANR	746235	Identifier	gp		746226	1					
ANR	746236	PtrMemberAccess	node -> i_value		746226	1					
ANR	746237	Identifier	node		746226	0					
ANR	746238	Identifier	i_value		746226	1					
ANR	746239	ReturnStatement	return true ;	2470:1:67481:67492	746226	1	True				
ANR	746240	Identifier	true		746226	0					
ANR	746241	ReturnType	static bool		746226	1					
ANR	746242	Identifier	cb_anal_gp		746226	2					
ANR	746243	ParameterList	"RCore * core , RConfigNode * node"		746226	3					
ANR	746244	Parameter	RCore * core	2468:23:67413:67423	746226	0	True				
ANR	746245	ParameterType	RCore *		746226	0					
ANR	746246	Identifier	core		746226	1					
ANR	746247	Parameter	RConfigNode * node	2468:36:67426:67442	746226	1	True				
ANR	746248	ParameterType	RConfigNode *		746226	0					
ANR	746249	Identifier	node		746226	1					
ANR	746250	CFGEntryNode	ENTRY		746226		True				
ANR	746251	CFGExitNode	EXIT		746226		True				
ANR	746252	Symbol	core		746226						
ANR	746253	Symbol	node		746226						
ANR	746254	Symbol	* core -> anal		746226						
ANR	746255	Symbol	* core		746226						
ANR	746256	Symbol	true		746226						
ANR	746257	Symbol	* node		746226						
ANR	746258	Symbol	core -> anal -> gp		746226						
ANR	746259	Symbol	core -> anal		746226						
ANR	746260	Symbol	* * core		746226						
ANR	746261	Symbol	node -> i_value		746226						
ANR	746262	Function	cb_anal_from	2473:0:67497:67754							
ANR	746263	FunctionDef	"cb_anal_from (RCore * core , RConfigNode * node)"		746262	0					
ANR	746264	CompoundStatement		2473:57:67554:67754	746262	0					
ANR	746265	IfStatement	"if ( r_config_get_i ( core -> config , ""anal.limits"" ) )"		746262	0					
ANR	746266	Condition	"r_config_get_i ( core -> config , ""anal.limits"" )"	2474:5:67561:67604	746262	0	True				
ANR	746267	CallExpression	"r_config_get_i ( core -> config , ""anal.limits"" )"		746262	0					
ANR	746268	Callee	r_config_get_i		746262	0					
ANR	746269	Identifier	r_config_get_i		746262	0					
ANR	746270	ArgumentList	core -> config		746262	1					
ANR	746271	Argument	core -> config		746262	0					
ANR	746272	PtrMemberAccess	core -> config		746262	0					
ANR	746273	Identifier	core		746262	0					
ANR	746274	Identifier	config		746262	1					
ANR	746275	Argument	"""anal.limits"""		746262	1					
ANR	746276	PrimaryExpression	"""anal.limits"""		746262	0					
ANR	746277	CompoundStatement		2:51:52:52	746262	1					
ANR	746278	ExpressionStatement	"r_anal_set_limits ( core -> anal , r_config_get_i ( core -> config , ""anal.from"" ) , r_config_get_i ( core -> config , ""anal.to"" ) )"	2475:2:67611:67735	746262	0	True				
ANR	746279	CallExpression	"r_anal_set_limits ( core -> anal , r_config_get_i ( core -> config , ""anal.from"" ) , r_config_get_i ( core -> config , ""anal.to"" ) )"		746262	0					
ANR	746280	Callee	r_anal_set_limits		746262	0					
ANR	746281	Identifier	r_anal_set_limits		746262	0					
ANR	746282	ArgumentList	core -> anal		746262	1					
ANR	746283	Argument	core -> anal		746262	0					
ANR	746284	PtrMemberAccess	core -> anal		746262	0					
ANR	746285	Identifier	core		746262	0					
ANR	746286	Identifier	anal		746262	1					
ANR	746287	Argument	"r_config_get_i ( core -> config , ""anal.from"" )"		746262	1					
ANR	746288	CallExpression	"r_config_get_i ( core -> config , ""anal.from"" )"		746262	0					
ANR	746289	Callee	r_config_get_i		746262	0					
ANR	746290	Identifier	r_config_get_i		746262	0					
ANR	746291	ArgumentList	core -> config		746262	1					
ANR	746292	Argument	core -> config		746262	0					
ANR	746293	PtrMemberAccess	core -> config		746262	0					
ANR	746294	Identifier	core		746262	0					
ANR	746295	Identifier	config		746262	1					
ANR	746296	Argument	"""anal.from"""		746262	1					
ANR	746297	PrimaryExpression	"""anal.from"""		746262	0					
ANR	746298	Argument	"r_config_get_i ( core -> config , ""anal.to"" )"		746262	2					
ANR	746299	CallExpression	"r_config_get_i ( core -> config , ""anal.to"" )"		746262	0					
ANR	746300	Callee	r_config_get_i		746262	0					
ANR	746301	Identifier	r_config_get_i		746262	0					
ANR	746302	ArgumentList	core -> config		746262	1					
ANR	746303	Argument	core -> config		746262	0					
ANR	746304	PtrMemberAccess	core -> config		746262	0					
ANR	746305	Identifier	core		746262	0					
ANR	746306	Identifier	config		746262	1					
ANR	746307	Argument	"""anal.to"""		746262	1					
ANR	746308	PrimaryExpression	"""anal.to"""		746262	0					
ANR	746309	ReturnStatement	return true ;	2479:1:67741:67752	746262	1	True				
ANR	746310	Identifier	true		746262	0					
ANR	746311	ReturnType	static bool		746262	1					
ANR	746312	Identifier	cb_anal_from		746262	2					
ANR	746313	ParameterList	"RCore * core , RConfigNode * node"		746262	3					
ANR	746314	Parameter	RCore * core	2473:25:67522:67532	746262	0	True				
ANR	746315	ParameterType	RCore *		746262	0					
ANR	746316	Identifier	core		746262	1					
ANR	746317	Parameter	RConfigNode * node	2473:38:67535:67551	746262	1	True				
ANR	746318	ParameterType	RConfigNode *		746262	0					
ANR	746319	Identifier	node		746262	1					
ANR	746320	CFGEntryNode	ENTRY		746262		True				
ANR	746321	CFGExitNode	EXIT		746262		True				
ANR	746322	Symbol	core -> config		746262						
ANR	746323	Symbol	core		746262						
ANR	746324	Symbol	node		746262						
ANR	746325	Symbol	r_config_get_i		746262						
ANR	746326	Symbol	* core		746262						
ANR	746327	Symbol	true		746262						
ANR	746328	Symbol	core -> anal		746262						
ANR	746329	Function	cb_anal_limits	2482:0:67757:68056							
ANR	746330	FunctionDef	"cb_anal_limits (void * user , RConfigNode * node)"		746329	0					
ANR	746331	CompoundStatement		2482:58:67815:68056	746329	0					
ANR	746332	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2483:1:67818:67844	746329	0	True				
ANR	746333	IdentifierDecl	* core = ( RCore * ) user		746329	0					
ANR	746334	IdentifierDeclType	RCore *		746329	0					
ANR	746335	Identifier	core		746329	1					
ANR	746336	AssignmentExpression	* core = ( RCore * ) user		746329	2		=			
ANR	746337	Identifier	core		746329	0					
ANR	746338	CastExpression	( RCore * ) user		746329	1					
ANR	746339	CastTarget	RCore *		746329	0					
ANR	746340	Identifier	user		746329	1					
ANR	746341	IfStatement	if ( node -> i_value )		746329	1					
ANR	746342	Condition	node -> i_value	2484:5:67851:67863	746329	0	True				
ANR	746343	PtrMemberAccess	node -> i_value		746329	0					
ANR	746344	Identifier	node		746329	0					
ANR	746345	Identifier	i_value		746329	1					
ANR	746346	CompoundStatement		3:20:50:50	746329	1					
ANR	746347	ExpressionStatement	"r_anal_set_limits ( core -> anal , r_config_get_i ( core -> config , ""anal.from"" ) , r_config_get_i ( core -> config , ""anal.to"" ) )"	2485:2:67870:67994	746329	0	True				
ANR	746348	CallExpression	"r_anal_set_limits ( core -> anal , r_config_get_i ( core -> config , ""anal.from"" ) , r_config_get_i ( core -> config , ""anal.to"" ) )"		746329	0					
ANR	746349	Callee	r_anal_set_limits		746329	0					
ANR	746350	Identifier	r_anal_set_limits		746329	0					
ANR	746351	ArgumentList	core -> anal		746329	1					
ANR	746352	Argument	core -> anal		746329	0					
ANR	746353	PtrMemberAccess	core -> anal		746329	0					
ANR	746354	Identifier	core		746329	0					
ANR	746355	Identifier	anal		746329	1					
ANR	746356	Argument	"r_config_get_i ( core -> config , ""anal.from"" )"		746329	1					
ANR	746357	CallExpression	"r_config_get_i ( core -> config , ""anal.from"" )"		746329	0					
ANR	746358	Callee	r_config_get_i		746329	0					
ANR	746359	Identifier	r_config_get_i		746329	0					
ANR	746360	ArgumentList	core -> config		746329	1					
ANR	746361	Argument	core -> config		746329	0					
ANR	746362	PtrMemberAccess	core -> config		746329	0					
ANR	746363	Identifier	core		746329	0					
ANR	746364	Identifier	config		746329	1					
ANR	746365	Argument	"""anal.from"""		746329	1					
ANR	746366	PrimaryExpression	"""anal.from"""		746329	0					
ANR	746367	Argument	"r_config_get_i ( core -> config , ""anal.to"" )"		746329	2					
ANR	746368	CallExpression	"r_config_get_i ( core -> config , ""anal.to"" )"		746329	0					
ANR	746369	Callee	r_config_get_i		746329	0					
ANR	746370	Identifier	r_config_get_i		746329	0					
ANR	746371	ArgumentList	core -> config		746329	1					
ANR	746372	Argument	core -> config		746329	0					
ANR	746373	PtrMemberAccess	core -> config		746329	0					
ANR	746374	Identifier	core		746329	0					
ANR	746375	Identifier	config		746329	1					
ANR	746376	Argument	"""anal.to"""		746329	1					
ANR	746377	PrimaryExpression	"""anal.to"""		746329	0					
ANR	746378	ElseStatement	else		746329	0					
ANR	746379	CompoundStatement		7:8:188:188	746329	0					
ANR	746380	ExpressionStatement	r_anal_unset_limits ( core -> anal )	2489:2:68008:68040	746329	0	True				
ANR	746381	CallExpression	r_anal_unset_limits ( core -> anal )		746329	0					
ANR	746382	Callee	r_anal_unset_limits		746329	0					
ANR	746383	Identifier	r_anal_unset_limits		746329	0					
ANR	746384	ArgumentList	core -> anal		746329	1					
ANR	746385	Argument	core -> anal		746329	0					
ANR	746386	PtrMemberAccess	core -> anal		746329	0					
ANR	746387	Identifier	core		746329	0					
ANR	746388	Identifier	anal		746329	1					
ANR	746389	ReturnStatement	return 1 ;	2491:1:68046:68054	746329	2	True				
ANR	746390	PrimaryExpression	1		746329	0					
ANR	746391	ReturnType	static bool		746329	1					
ANR	746392	Identifier	cb_anal_limits		746329	2					
ANR	746393	ParameterList	"void * user , RConfigNode * node"		746329	3					
ANR	746394	Parameter	void * user	2482:27:67784:67793	746329	0	True				
ANR	746395	ParameterType	void *		746329	0					
ANR	746396	Identifier	user		746329	1					
ANR	746397	Parameter	RConfigNode * node	2482:39:67796:67812	746329	1	True				
ANR	746398	ParameterType	RConfigNode *		746329	0					
ANR	746399	Identifier	node		746329	1					
ANR	746400	CFGEntryNode	ENTRY		746329		True				
ANR	746401	CFGExitNode	EXIT		746329		True				
ANR	746402	Symbol	core -> config		746329						
ANR	746403	Symbol	node		746329						
ANR	746404	Symbol	core		746329						
ANR	746405	Symbol	r_config_get_i		746329						
ANR	746406	Symbol	* core		746329						
ANR	746407	Symbol	* node		746329						
ANR	746408	Symbol	user		746329						
ANR	746409	Symbol	core -> anal		746329						
ANR	746410	Symbol	node -> i_value		746329						
ANR	746411	Function	cb_anal_rnr	2494:0:68059:68205							
ANR	746412	FunctionDef	"cb_anal_rnr (void * user , RConfigNode * node)"		746411	0					
ANR	746413	CompoundStatement		2494:55:68114:68205	746411	0					
ANR	746414	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2495:1:68117:68143	746411	0	True				
ANR	746415	IdentifierDecl	* core = ( RCore * ) user		746411	0					
ANR	746416	IdentifierDeclType	RCore *		746411	0					
ANR	746417	Identifier	core		746411	1					
ANR	746418	AssignmentExpression	* core = ( RCore * ) user		746411	2		=			
ANR	746419	Identifier	core		746411	0					
ANR	746420	CastExpression	( RCore * ) user		746411	1					
ANR	746421	CastTarget	RCore *		746411	0					
ANR	746422	Identifier	user		746411	1					
ANR	746423	ExpressionStatement	core -> anal -> recursive_noreturn = node -> i_value	2496:1:68146:68192	746411	1	True				
ANR	746424	AssignmentExpression	core -> anal -> recursive_noreturn = node -> i_value		746411	0		=			
ANR	746425	PtrMemberAccess	core -> anal -> recursive_noreturn		746411	0					
ANR	746426	PtrMemberAccess	core -> anal		746411	0					
ANR	746427	Identifier	core		746411	0					
ANR	746428	Identifier	anal		746411	1					
ANR	746429	Identifier	recursive_noreturn		746411	1					
ANR	746430	PtrMemberAccess	node -> i_value		746411	1					
ANR	746431	Identifier	node		746411	0					
ANR	746432	Identifier	i_value		746411	1					
ANR	746433	ReturnStatement	return 1 ;	2497:1:68195:68203	746411	2	True				
ANR	746434	PrimaryExpression	1		746411	0					
ANR	746435	ReturnType	static bool		746411	1					
ANR	746436	Identifier	cb_anal_rnr		746411	2					
ANR	746437	ParameterList	"void * user , RConfigNode * node"		746411	3					
ANR	746438	Parameter	void * user	2494:24:68083:68092	746411	0	True				
ANR	746439	ParameterType	void *		746411	0					
ANR	746440	Identifier	user		746411	1					
ANR	746441	Parameter	RConfigNode * node	2494:36:68095:68111	746411	1	True				
ANR	746442	ParameterType	RConfigNode *		746411	0					
ANR	746443	Identifier	node		746411	1					
ANR	746444	CFGEntryNode	ENTRY		746411		True				
ANR	746445	CFGExitNode	EXIT		746411		True				
ANR	746446	Symbol	core -> anal -> recursive_noreturn		746411						
ANR	746447	Symbol	node		746411						
ANR	746448	Symbol	core		746411						
ANR	746449	Symbol	* core -> anal		746411						
ANR	746450	Symbol	* core		746411						
ANR	746451	Symbol	* node		746411						
ANR	746452	Symbol	user		746411						
ANR	746453	Symbol	core -> anal		746411						
ANR	746454	Symbol	* * core		746411						
ANR	746455	Symbol	node -> i_value		746411						
ANR	746456	Function	cb_anal_jmptbl	2500:0:68208:68388							
ANR	746457	FunctionDef	"cb_anal_jmptbl (void * user , void * data)"		746456	0					
ANR	746458	CompoundStatement		2500:51:68259:68388	746456	0					
ANR	746459	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2501:1:68262:68289	746456	0	True				
ANR	746460	IdentifierDecl	* core = ( RCore * ) user		746456	0					
ANR	746461	IdentifierDeclType	RCore *		746456	0					
ANR	746462	Identifier	core		746456	1					
ANR	746463	AssignmentExpression	* core = ( RCore * ) user		746456	2		=			
ANR	746464	Identifier	core		746456	0					
ANR	746465	CastExpression	( RCore * ) user		746456	1					
ANR	746466	CastTarget	RCore *		746456	0					
ANR	746467	Identifier	user		746456	1					
ANR	746468	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2502:1:68292:68331	746456	1	True				
ANR	746469	IdentifierDecl	* node = ( RConfigNode * ) data		746456	0					
ANR	746470	IdentifierDeclType	RConfigNode *		746456	0					
ANR	746471	Identifier	node		746456	1					
ANR	746472	AssignmentExpression	* node = ( RConfigNode * ) data		746456	2		=			
ANR	746473	Identifier	node		746456	0					
ANR	746474	CastExpression	( RConfigNode * ) data		746456	1					
ANR	746475	CastTarget	RConfigNode *		746456	0					
ANR	746476	Identifier	data		746456	1					
ANR	746477	ExpressionStatement	core -> anal -> opt . jmptbl = node -> i_value	2503:1:68334:68372	746456	2	True				
ANR	746478	AssignmentExpression	core -> anal -> opt . jmptbl = node -> i_value		746456	0		=			
ANR	746479	MemberAccess	core -> anal -> opt . jmptbl		746456	0					
ANR	746480	PtrMemberAccess	core -> anal -> opt		746456	0					
ANR	746481	PtrMemberAccess	core -> anal		746456	0					
ANR	746482	Identifier	core		746456	0					
ANR	746483	Identifier	anal		746456	1					
ANR	746484	Identifier	opt		746456	1					
ANR	746485	Identifier	jmptbl		746456	1					
ANR	746486	PtrMemberAccess	node -> i_value		746456	1					
ANR	746487	Identifier	node		746456	0					
ANR	746488	Identifier	i_value		746456	1					
ANR	746489	ReturnStatement	return true ;	2504:1:68375:68386	746456	3	True				
ANR	746490	Identifier	true		746456	0					
ANR	746491	ReturnType	static bool		746456	1					
ANR	746492	Identifier	cb_anal_jmptbl		746456	2					
ANR	746493	ParameterList	"void * user , void * data"		746456	3					
ANR	746494	Parameter	void * user	2500:27:68235:68244	746456	0	True				
ANR	746495	ParameterType	void *		746456	0					
ANR	746496	Identifier	user		746456	1					
ANR	746497	Parameter	void * data	2500:39:68247:68256	746456	1	True				
ANR	746498	ParameterType	void *		746456	0					
ANR	746499	Identifier	data		746456	1					
ANR	746500	CFGEntryNode	ENTRY		746456		True				
ANR	746501	CFGExitNode	EXIT		746456		True				
ANR	746502	Symbol	core -> anal -> opt		746456						
ANR	746503	Symbol	data		746456						
ANR	746504	Symbol	* core		746456						
ANR	746505	Symbol	core -> anal		746456						
ANR	746506	Symbol	node -> i_value		746456						
ANR	746507	Symbol	core		746456						
ANR	746508	Symbol	node		746456						
ANR	746509	Symbol	* core -> anal		746456						
ANR	746510	Symbol	true		746456						
ANR	746511	Symbol	* node		746456						
ANR	746512	Symbol	user		746456						
ANR	746513	Symbol	core -> anal -> opt . jmptbl		746456						
ANR	746514	Symbol	* * core		746456						
ANR	746515	Function	cb_anal_cjmpref	2507:0:68391:68573							
ANR	746516	FunctionDef	"cb_anal_cjmpref (void * user , void * data)"		746515	0					
ANR	746517	CompoundStatement		2507:52:68443:68573	746515	0					
ANR	746518	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2508:1:68446:68473	746515	0	True				
ANR	746519	IdentifierDecl	* core = ( RCore * ) user		746515	0					
ANR	746520	IdentifierDeclType	RCore *		746515	0					
ANR	746521	Identifier	core		746515	1					
ANR	746522	AssignmentExpression	* core = ( RCore * ) user		746515	2		=			
ANR	746523	Identifier	core		746515	0					
ANR	746524	CastExpression	( RCore * ) user		746515	1					
ANR	746525	CastTarget	RCore *		746515	0					
ANR	746526	Identifier	user		746515	1					
ANR	746527	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2509:1:68476:68515	746515	1	True				
ANR	746528	IdentifierDecl	* node = ( RConfigNode * ) data		746515	0					
ANR	746529	IdentifierDeclType	RConfigNode *		746515	0					
ANR	746530	Identifier	node		746515	1					
ANR	746531	AssignmentExpression	* node = ( RConfigNode * ) data		746515	2		=			
ANR	746532	Identifier	node		746515	0					
ANR	746533	CastExpression	( RConfigNode * ) data		746515	1					
ANR	746534	CastTarget	RConfigNode *		746515	0					
ANR	746535	Identifier	data		746515	1					
ANR	746536	ExpressionStatement	core -> anal -> opt . cjmpref = node -> i_value	2510:1:68518:68557	746515	2	True				
ANR	746537	AssignmentExpression	core -> anal -> opt . cjmpref = node -> i_value		746515	0		=			
ANR	746538	MemberAccess	core -> anal -> opt . cjmpref		746515	0					
ANR	746539	PtrMemberAccess	core -> anal -> opt		746515	0					
ANR	746540	PtrMemberAccess	core -> anal		746515	0					
ANR	746541	Identifier	core		746515	0					
ANR	746542	Identifier	anal		746515	1					
ANR	746543	Identifier	opt		746515	1					
ANR	746544	Identifier	cjmpref		746515	1					
ANR	746545	PtrMemberAccess	node -> i_value		746515	1					
ANR	746546	Identifier	node		746515	0					
ANR	746547	Identifier	i_value		746515	1					
ANR	746548	ReturnStatement	return true ;	2511:1:68560:68571	746515	3	True				
ANR	746549	Identifier	true		746515	0					
ANR	746550	ReturnType	static bool		746515	1					
ANR	746551	Identifier	cb_anal_cjmpref		746515	2					
ANR	746552	ParameterList	"void * user , void * data"		746515	3					
ANR	746553	Parameter	void * user	2507:28:68419:68428	746515	0	True				
ANR	746554	ParameterType	void *		746515	0					
ANR	746555	Identifier	user		746515	1					
ANR	746556	Parameter	void * data	2507:40:68431:68440	746515	1	True				
ANR	746557	ParameterType	void *		746515	0					
ANR	746558	Identifier	data		746515	1					
ANR	746559	CFGEntryNode	ENTRY		746515		True				
ANR	746560	CFGExitNode	EXIT		746515		True				
ANR	746561	Symbol	core -> anal -> opt		746515						
ANR	746562	Symbol	data		746515						
ANR	746563	Symbol	* core		746515						
ANR	746564	Symbol	core -> anal		746515						
ANR	746565	Symbol	node -> i_value		746515						
ANR	746566	Symbol	core		746515						
ANR	746567	Symbol	node		746515						
ANR	746568	Symbol	core -> anal -> opt . cjmpref		746515						
ANR	746569	Symbol	* core -> anal		746515						
ANR	746570	Symbol	true		746515						
ANR	746571	Symbol	* node		746515						
ANR	746572	Symbol	user		746515						
ANR	746573	Symbol	* * core		746515						
ANR	746574	Function	cb_anal_jmpref	2514:0:68576:68756							
ANR	746575	FunctionDef	"cb_anal_jmpref (void * user , void * data)"		746574	0					
ANR	746576	CompoundStatement		2514:51:68627:68756	746574	0					
ANR	746577	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2515:1:68630:68657	746574	0	True				
ANR	746578	IdentifierDecl	* core = ( RCore * ) user		746574	0					
ANR	746579	IdentifierDeclType	RCore *		746574	0					
ANR	746580	Identifier	core		746574	1					
ANR	746581	AssignmentExpression	* core = ( RCore * ) user		746574	2		=			
ANR	746582	Identifier	core		746574	0					
ANR	746583	CastExpression	( RCore * ) user		746574	1					
ANR	746584	CastTarget	RCore *		746574	0					
ANR	746585	Identifier	user		746574	1					
ANR	746586	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2516:1:68660:68699	746574	1	True				
ANR	746587	IdentifierDecl	* node = ( RConfigNode * ) data		746574	0					
ANR	746588	IdentifierDeclType	RConfigNode *		746574	0					
ANR	746589	Identifier	node		746574	1					
ANR	746590	AssignmentExpression	* node = ( RConfigNode * ) data		746574	2		=			
ANR	746591	Identifier	node		746574	0					
ANR	746592	CastExpression	( RConfigNode * ) data		746574	1					
ANR	746593	CastTarget	RConfigNode *		746574	0					
ANR	746594	Identifier	data		746574	1					
ANR	746595	ExpressionStatement	core -> anal -> opt . jmpref = node -> i_value	2517:1:68702:68740	746574	2	True				
ANR	746596	AssignmentExpression	core -> anal -> opt . jmpref = node -> i_value		746574	0		=			
ANR	746597	MemberAccess	core -> anal -> opt . jmpref		746574	0					
ANR	746598	PtrMemberAccess	core -> anal -> opt		746574	0					
ANR	746599	PtrMemberAccess	core -> anal		746574	0					
ANR	746600	Identifier	core		746574	0					
ANR	746601	Identifier	anal		746574	1					
ANR	746602	Identifier	opt		746574	1					
ANR	746603	Identifier	jmpref		746574	1					
ANR	746604	PtrMemberAccess	node -> i_value		746574	1					
ANR	746605	Identifier	node		746574	0					
ANR	746606	Identifier	i_value		746574	1					
ANR	746607	ReturnStatement	return true ;	2518:1:68743:68754	746574	3	True				
ANR	746608	Identifier	true		746574	0					
ANR	746609	ReturnType	static bool		746574	1					
ANR	746610	Identifier	cb_anal_jmpref		746574	2					
ANR	746611	ParameterList	"void * user , void * data"		746574	3					
ANR	746612	Parameter	void * user	2514:27:68603:68612	746574	0	True				
ANR	746613	ParameterType	void *		746574	0					
ANR	746614	Identifier	user		746574	1					
ANR	746615	Parameter	void * data	2514:39:68615:68624	746574	1	True				
ANR	746616	ParameterType	void *		746574	0					
ANR	746617	Identifier	data		746574	1					
ANR	746618	CFGEntryNode	ENTRY		746574		True				
ANR	746619	CFGExitNode	EXIT		746574		True				
ANR	746620	Symbol	core -> anal -> opt		746574						
ANR	746621	Symbol	core -> anal -> opt . jmpref		746574						
ANR	746622	Symbol	data		746574						
ANR	746623	Symbol	* core		746574						
ANR	746624	Symbol	core -> anal		746574						
ANR	746625	Symbol	node -> i_value		746574						
ANR	746626	Symbol	core		746574						
ANR	746627	Symbol	node		746574						
ANR	746628	Symbol	* core -> anal		746574						
ANR	746629	Symbol	true		746574						
ANR	746630	Symbol	* node		746574						
ANR	746631	Symbol	user		746574						
ANR	746632	Symbol	* * core		746574						
ANR	746633	Function	cb_anal_jmpabove	2521:0:68759:68943							
ANR	746634	FunctionDef	"cb_anal_jmpabove (void * user , void * data)"		746633	0					
ANR	746635	CompoundStatement		2521:53:68812:68943	746633	0					
ANR	746636	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2522:1:68815:68842	746633	0	True				
ANR	746637	IdentifierDecl	* core = ( RCore * ) user		746633	0					
ANR	746638	IdentifierDeclType	RCore *		746633	0					
ANR	746639	Identifier	core		746633	1					
ANR	746640	AssignmentExpression	* core = ( RCore * ) user		746633	2		=			
ANR	746641	Identifier	core		746633	0					
ANR	746642	CastExpression	( RCore * ) user		746633	1					
ANR	746643	CastTarget	RCore *		746633	0					
ANR	746644	Identifier	user		746633	1					
ANR	746645	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2523:1:68845:68884	746633	1	True				
ANR	746646	IdentifierDecl	* node = ( RConfigNode * ) data		746633	0					
ANR	746647	IdentifierDeclType	RConfigNode *		746633	0					
ANR	746648	Identifier	node		746633	1					
ANR	746649	AssignmentExpression	* node = ( RConfigNode * ) data		746633	2		=			
ANR	746650	Identifier	node		746633	0					
ANR	746651	CastExpression	( RConfigNode * ) data		746633	1					
ANR	746652	CastTarget	RConfigNode *		746633	0					
ANR	746653	Identifier	data		746633	1					
ANR	746654	ExpressionStatement	core -> anal -> opt . jmpabove = node -> i_value	2524:1:68887:68927	746633	2	True				
ANR	746655	AssignmentExpression	core -> anal -> opt . jmpabove = node -> i_value		746633	0		=			
ANR	746656	MemberAccess	core -> anal -> opt . jmpabove		746633	0					
ANR	746657	PtrMemberAccess	core -> anal -> opt		746633	0					
ANR	746658	PtrMemberAccess	core -> anal		746633	0					
ANR	746659	Identifier	core		746633	0					
ANR	746660	Identifier	anal		746633	1					
ANR	746661	Identifier	opt		746633	1					
ANR	746662	Identifier	jmpabove		746633	1					
ANR	746663	PtrMemberAccess	node -> i_value		746633	1					
ANR	746664	Identifier	node		746633	0					
ANR	746665	Identifier	i_value		746633	1					
ANR	746666	ReturnStatement	return true ;	2525:1:68930:68941	746633	3	True				
ANR	746667	Identifier	true		746633	0					
ANR	746668	ReturnType	static bool		746633	1					
ANR	746669	Identifier	cb_anal_jmpabove		746633	2					
ANR	746670	ParameterList	"void * user , void * data"		746633	3					
ANR	746671	Parameter	void * user	2521:29:68788:68797	746633	0	True				
ANR	746672	ParameterType	void *		746633	0					
ANR	746673	Identifier	user		746633	1					
ANR	746674	Parameter	void * data	2521:41:68800:68809	746633	1	True				
ANR	746675	ParameterType	void *		746633	0					
ANR	746676	Identifier	data		746633	1					
ANR	746677	CFGEntryNode	ENTRY		746633		True				
ANR	746678	CFGExitNode	EXIT		746633		True				
ANR	746679	Symbol	core -> anal -> opt		746633						
ANR	746680	Symbol	data		746633						
ANR	746681	Symbol	core -> anal -> opt . jmpabove		746633						
ANR	746682	Symbol	* core		746633						
ANR	746683	Symbol	core -> anal		746633						
ANR	746684	Symbol	node -> i_value		746633						
ANR	746685	Symbol	core		746633						
ANR	746686	Symbol	node		746633						
ANR	746687	Symbol	* core -> anal		746633						
ANR	746688	Symbol	true		746633						
ANR	746689	Symbol	* node		746633						
ANR	746690	Symbol	user		746633						
ANR	746691	Symbol	* * core		746633						
ANR	746692	Function	cb_anal_loads	2528:0:68946:69124							
ANR	746693	FunctionDef	"cb_anal_loads (void * user , void * data)"		746692	0					
ANR	746694	CompoundStatement		2528:50:68996:69124	746692	0					
ANR	746695	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2529:1:68999:69026	746692	0	True				
ANR	746696	IdentifierDecl	* core = ( RCore * ) user		746692	0					
ANR	746697	IdentifierDeclType	RCore *		746692	0					
ANR	746698	Identifier	core		746692	1					
ANR	746699	AssignmentExpression	* core = ( RCore * ) user		746692	2		=			
ANR	746700	Identifier	core		746692	0					
ANR	746701	CastExpression	( RCore * ) user		746692	1					
ANR	746702	CastTarget	RCore *		746692	0					
ANR	746703	Identifier	user		746692	1					
ANR	746704	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2530:1:69029:69068	746692	1	True				
ANR	746705	IdentifierDecl	* node = ( RConfigNode * ) data		746692	0					
ANR	746706	IdentifierDeclType	RConfigNode *		746692	0					
ANR	746707	Identifier	node		746692	1					
ANR	746708	AssignmentExpression	* node = ( RConfigNode * ) data		746692	2		=			
ANR	746709	Identifier	node		746692	0					
ANR	746710	CastExpression	( RConfigNode * ) data		746692	1					
ANR	746711	CastTarget	RConfigNode *		746692	0					
ANR	746712	Identifier	data		746692	1					
ANR	746713	ExpressionStatement	core -> anal -> opt . loads = node -> i_value	2531:1:69071:69108	746692	2	True				
ANR	746714	AssignmentExpression	core -> anal -> opt . loads = node -> i_value		746692	0		=			
ANR	746715	MemberAccess	core -> anal -> opt . loads		746692	0					
ANR	746716	PtrMemberAccess	core -> anal -> opt		746692	0					
ANR	746717	PtrMemberAccess	core -> anal		746692	0					
ANR	746718	Identifier	core		746692	0					
ANR	746719	Identifier	anal		746692	1					
ANR	746720	Identifier	opt		746692	1					
ANR	746721	Identifier	loads		746692	1					
ANR	746722	PtrMemberAccess	node -> i_value		746692	1					
ANR	746723	Identifier	node		746692	0					
ANR	746724	Identifier	i_value		746692	1					
ANR	746725	ReturnStatement	return true ;	2532:1:69111:69122	746692	3	True				
ANR	746726	Identifier	true		746692	0					
ANR	746727	ReturnType	static bool		746692	1					
ANR	746728	Identifier	cb_anal_loads		746692	2					
ANR	746729	ParameterList	"void * user , void * data"		746692	3					
ANR	746730	Parameter	void * user	2528:26:68972:68981	746692	0	True				
ANR	746731	ParameterType	void *		746692	0					
ANR	746732	Identifier	user		746692	1					
ANR	746733	Parameter	void * data	2528:38:68984:68993	746692	1	True				
ANR	746734	ParameterType	void *		746692	0					
ANR	746735	Identifier	data		746692	1					
ANR	746736	CFGEntryNode	ENTRY		746692		True				
ANR	746737	CFGExitNode	EXIT		746692		True				
ANR	746738	Symbol	core -> anal -> opt		746692						
ANR	746739	Symbol	data		746692						
ANR	746740	Symbol	* core		746692						
ANR	746741	Symbol	core -> anal		746692						
ANR	746742	Symbol	node -> i_value		746692						
ANR	746743	Symbol	core		746692						
ANR	746744	Symbol	node		746692						
ANR	746745	Symbol	* core -> anal		746692						
ANR	746746	Symbol	true		746692						
ANR	746747	Symbol	core -> anal -> opt . loads		746692						
ANR	746748	Symbol	* node		746692						
ANR	746749	Symbol	user		746692						
ANR	746750	Symbol	* * core		746692						
ANR	746751	Function	cb_anal_followdatarefs	2535:0:69127:69323							
ANR	746752	FunctionDef	"cb_anal_followdatarefs (void * user , void * data)"		746751	0					
ANR	746753	CompoundStatement		2535:59:69186:69323	746751	0					
ANR	746754	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2536:1:69189:69216	746751	0	True				
ANR	746755	IdentifierDecl	* core = ( RCore * ) user		746751	0					
ANR	746756	IdentifierDeclType	RCore *		746751	0					
ANR	746757	Identifier	core		746751	1					
ANR	746758	AssignmentExpression	* core = ( RCore * ) user		746751	2		=			
ANR	746759	Identifier	core		746751	0					
ANR	746760	CastExpression	( RCore * ) user		746751	1					
ANR	746761	CastTarget	RCore *		746751	0					
ANR	746762	Identifier	user		746751	1					
ANR	746763	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2537:1:69219:69258	746751	1	True				
ANR	746764	IdentifierDecl	* node = ( RConfigNode * ) data		746751	0					
ANR	746765	IdentifierDeclType	RConfigNode *		746751	0					
ANR	746766	Identifier	node		746751	1					
ANR	746767	AssignmentExpression	* node = ( RConfigNode * ) data		746751	2		=			
ANR	746768	Identifier	node		746751	0					
ANR	746769	CastExpression	( RConfigNode * ) data		746751	1					
ANR	746770	CastTarget	RConfigNode *		746751	0					
ANR	746771	Identifier	data		746751	1					
ANR	746772	ExpressionStatement	core -> anal -> opt . followdatarefs = node -> i_value	2538:1:69261:69307	746751	2	True				
ANR	746773	AssignmentExpression	core -> anal -> opt . followdatarefs = node -> i_value		746751	0		=			
ANR	746774	MemberAccess	core -> anal -> opt . followdatarefs		746751	0					
ANR	746775	PtrMemberAccess	core -> anal -> opt		746751	0					
ANR	746776	PtrMemberAccess	core -> anal		746751	0					
ANR	746777	Identifier	core		746751	0					
ANR	746778	Identifier	anal		746751	1					
ANR	746779	Identifier	opt		746751	1					
ANR	746780	Identifier	followdatarefs		746751	1					
ANR	746781	PtrMemberAccess	node -> i_value		746751	1					
ANR	746782	Identifier	node		746751	0					
ANR	746783	Identifier	i_value		746751	1					
ANR	746784	ReturnStatement	return true ;	2539:1:69310:69321	746751	3	True				
ANR	746785	Identifier	true		746751	0					
ANR	746786	ReturnType	static bool		746751	1					
ANR	746787	Identifier	cb_anal_followdatarefs		746751	2					
ANR	746788	ParameterList	"void * user , void * data"		746751	3					
ANR	746789	Parameter	void * user	2535:35:69162:69171	746751	0	True				
ANR	746790	ParameterType	void *		746751	0					
ANR	746791	Identifier	user		746751	1					
ANR	746792	Parameter	void * data	2535:47:69174:69183	746751	1	True				
ANR	746793	ParameterType	void *		746751	0					
ANR	746794	Identifier	data		746751	1					
ANR	746795	CFGEntryNode	ENTRY		746751		True				
ANR	746796	CFGExitNode	EXIT		746751		True				
ANR	746797	Symbol	core -> anal -> opt		746751						
ANR	746798	Symbol	data		746751						
ANR	746799	Symbol	* core		746751						
ANR	746800	Symbol	core -> anal		746751						
ANR	746801	Symbol	core -> anal -> opt . followdatarefs		746751						
ANR	746802	Symbol	node -> i_value		746751						
ANR	746803	Symbol	core		746751						
ANR	746804	Symbol	node		746751						
ANR	746805	Symbol	* core -> anal		746751						
ANR	746806	Symbol	true		746751						
ANR	746807	Symbol	* node		746751						
ANR	746808	Symbol	user		746751						
ANR	746809	Symbol	* * core		746751						
ANR	746810	Function	cb_anal_jmpmid	2542:0:69326:69506							
ANR	746811	FunctionDef	"cb_anal_jmpmid (void * user , void * data)"		746810	0					
ANR	746812	CompoundStatement		2542:51:69377:69506	746810	0					
ANR	746813	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2543:1:69380:69407	746810	0	True				
ANR	746814	IdentifierDecl	* core = ( RCore * ) user		746810	0					
ANR	746815	IdentifierDeclType	RCore *		746810	0					
ANR	746816	Identifier	core		746810	1					
ANR	746817	AssignmentExpression	* core = ( RCore * ) user		746810	2		=			
ANR	746818	Identifier	core		746810	0					
ANR	746819	CastExpression	( RCore * ) user		746810	1					
ANR	746820	CastTarget	RCore *		746810	0					
ANR	746821	Identifier	user		746810	1					
ANR	746822	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2544:1:69410:69449	746810	1	True				
ANR	746823	IdentifierDecl	* node = ( RConfigNode * ) data		746810	0					
ANR	746824	IdentifierDeclType	RConfigNode *		746810	0					
ANR	746825	Identifier	node		746810	1					
ANR	746826	AssignmentExpression	* node = ( RConfigNode * ) data		746810	2		=			
ANR	746827	Identifier	node		746810	0					
ANR	746828	CastExpression	( RConfigNode * ) data		746810	1					
ANR	746829	CastTarget	RConfigNode *		746810	0					
ANR	746830	Identifier	data		746810	1					
ANR	746831	ExpressionStatement	core -> anal -> opt . jmpmid = node -> i_value	2545:1:69452:69490	746810	2	True				
ANR	746832	AssignmentExpression	core -> anal -> opt . jmpmid = node -> i_value		746810	0		=			
ANR	746833	MemberAccess	core -> anal -> opt . jmpmid		746810	0					
ANR	746834	PtrMemberAccess	core -> anal -> opt		746810	0					
ANR	746835	PtrMemberAccess	core -> anal		746810	0					
ANR	746836	Identifier	core		746810	0					
ANR	746837	Identifier	anal		746810	1					
ANR	746838	Identifier	opt		746810	1					
ANR	746839	Identifier	jmpmid		746810	1					
ANR	746840	PtrMemberAccess	node -> i_value		746810	1					
ANR	746841	Identifier	node		746810	0					
ANR	746842	Identifier	i_value		746810	1					
ANR	746843	ReturnStatement	return true ;	2546:1:69493:69504	746810	3	True				
ANR	746844	Identifier	true		746810	0					
ANR	746845	ReturnType	static bool		746810	1					
ANR	746846	Identifier	cb_anal_jmpmid		746810	2					
ANR	746847	ParameterList	"void * user , void * data"		746810	3					
ANR	746848	Parameter	void * user	2542:27:69353:69362	746810	0	True				
ANR	746849	ParameterType	void *		746810	0					
ANR	746850	Identifier	user		746810	1					
ANR	746851	Parameter	void * data	2542:39:69365:69374	746810	1	True				
ANR	746852	ParameterType	void *		746810	0					
ANR	746853	Identifier	data		746810	1					
ANR	746854	CFGEntryNode	ENTRY		746810		True				
ANR	746855	CFGExitNode	EXIT		746810		True				
ANR	746856	Symbol	core -> anal -> opt		746810						
ANR	746857	Symbol	data		746810						
ANR	746858	Symbol	* core		746810						
ANR	746859	Symbol	core -> anal		746810						
ANR	746860	Symbol	node -> i_value		746810						
ANR	746861	Symbol	core		746810						
ANR	746862	Symbol	node		746810						
ANR	746863	Symbol	* core -> anal		746810						
ANR	746864	Symbol	core -> anal -> opt . jmpmid		746810						
ANR	746865	Symbol	true		746810						
ANR	746866	Symbol	* node		746810						
ANR	746867	Symbol	user		746810						
ANR	746868	Symbol	* * core		746810						
ANR	746869	Function	cb_anal_searchstringrefs	2549:0:69509:69709							
ANR	746870	FunctionDef	"cb_anal_searchstringrefs (void * user , void * data)"		746869	0					
ANR	746871	CompoundStatement		2549:61:69570:69709	746869	0					
ANR	746872	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2550:1:69573:69600	746869	0	True				
ANR	746873	IdentifierDecl	* core = ( RCore * ) user		746869	0					
ANR	746874	IdentifierDeclType	RCore *		746869	0					
ANR	746875	Identifier	core		746869	1					
ANR	746876	AssignmentExpression	* core = ( RCore * ) user		746869	2		=			
ANR	746877	Identifier	core		746869	0					
ANR	746878	CastExpression	( RCore * ) user		746869	1					
ANR	746879	CastTarget	RCore *		746869	0					
ANR	746880	Identifier	user		746869	1					
ANR	746881	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2551:1:69603:69642	746869	1	True				
ANR	746882	IdentifierDecl	* node = ( RConfigNode * ) data		746869	0					
ANR	746883	IdentifierDeclType	RConfigNode *		746869	0					
ANR	746884	Identifier	node		746869	1					
ANR	746885	AssignmentExpression	* node = ( RConfigNode * ) data		746869	2		=			
ANR	746886	Identifier	node		746869	0					
ANR	746887	CastExpression	( RConfigNode * ) data		746869	1					
ANR	746888	CastTarget	RConfigNode *		746869	0					
ANR	746889	Identifier	data		746869	1					
ANR	746890	ExpressionStatement	core -> anal -> opt . searchstringrefs = node -> i_value	2552:1:69645:69693	746869	2	True				
ANR	746891	AssignmentExpression	core -> anal -> opt . searchstringrefs = node -> i_value		746869	0		=			
ANR	746892	MemberAccess	core -> anal -> opt . searchstringrefs		746869	0					
ANR	746893	PtrMemberAccess	core -> anal -> opt		746869	0					
ANR	746894	PtrMemberAccess	core -> anal		746869	0					
ANR	746895	Identifier	core		746869	0					
ANR	746896	Identifier	anal		746869	1					
ANR	746897	Identifier	opt		746869	1					
ANR	746898	Identifier	searchstringrefs		746869	1					
ANR	746899	PtrMemberAccess	node -> i_value		746869	1					
ANR	746900	Identifier	node		746869	0					
ANR	746901	Identifier	i_value		746869	1					
ANR	746902	ReturnStatement	return true ;	2553:1:69696:69707	746869	3	True				
ANR	746903	Identifier	true		746869	0					
ANR	746904	ReturnType	static bool		746869	1					
ANR	746905	Identifier	cb_anal_searchstringrefs		746869	2					
ANR	746906	ParameterList	"void * user , void * data"		746869	3					
ANR	746907	Parameter	void * user	2549:37:69546:69555	746869	0	True				
ANR	746908	ParameterType	void *		746869	0					
ANR	746909	Identifier	user		746869	1					
ANR	746910	Parameter	void * data	2549:49:69558:69567	746869	1	True				
ANR	746911	ParameterType	void *		746869	0					
ANR	746912	Identifier	data		746869	1					
ANR	746913	CFGEntryNode	ENTRY		746869		True				
ANR	746914	CFGExitNode	EXIT		746869		True				
ANR	746915	Symbol	core -> anal -> opt		746869						
ANR	746916	Symbol	core -> anal -> opt . searchstringrefs		746869						
ANR	746917	Symbol	data		746869						
ANR	746918	Symbol	* core		746869						
ANR	746919	Symbol	core -> anal		746869						
ANR	746920	Symbol	node -> i_value		746869						
ANR	746921	Symbol	core		746869						
ANR	746922	Symbol	node		746869						
ANR	746923	Symbol	* core -> anal		746869						
ANR	746924	Symbol	true		746869						
ANR	746925	Symbol	* node		746869						
ANR	746926	Symbol	user		746869						
ANR	746927	Symbol	* * core		746869						
ANR	746928	Function	cb_anal_pushret	2556:0:69712:69894							
ANR	746929	FunctionDef	"cb_anal_pushret (void * user , void * data)"		746928	0					
ANR	746930	CompoundStatement		2556:52:69764:69894	746928	0					
ANR	746931	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2557:1:69767:69794	746928	0	True				
ANR	746932	IdentifierDecl	* core = ( RCore * ) user		746928	0					
ANR	746933	IdentifierDeclType	RCore *		746928	0					
ANR	746934	Identifier	core		746928	1					
ANR	746935	AssignmentExpression	* core = ( RCore * ) user		746928	2		=			
ANR	746936	Identifier	core		746928	0					
ANR	746937	CastExpression	( RCore * ) user		746928	1					
ANR	746938	CastTarget	RCore *		746928	0					
ANR	746939	Identifier	user		746928	1					
ANR	746940	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2558:1:69797:69836	746928	1	True				
ANR	746941	IdentifierDecl	* node = ( RConfigNode * ) data		746928	0					
ANR	746942	IdentifierDeclType	RConfigNode *		746928	0					
ANR	746943	Identifier	node		746928	1					
ANR	746944	AssignmentExpression	* node = ( RConfigNode * ) data		746928	2		=			
ANR	746945	Identifier	node		746928	0					
ANR	746946	CastExpression	( RConfigNode * ) data		746928	1					
ANR	746947	CastTarget	RConfigNode *		746928	0					
ANR	746948	Identifier	data		746928	1					
ANR	746949	ExpressionStatement	core -> anal -> opt . pushret = node -> i_value	2559:1:69839:69878	746928	2	True				
ANR	746950	AssignmentExpression	core -> anal -> opt . pushret = node -> i_value		746928	0		=			
ANR	746951	MemberAccess	core -> anal -> opt . pushret		746928	0					
ANR	746952	PtrMemberAccess	core -> anal -> opt		746928	0					
ANR	746953	PtrMemberAccess	core -> anal		746928	0					
ANR	746954	Identifier	core		746928	0					
ANR	746955	Identifier	anal		746928	1					
ANR	746956	Identifier	opt		746928	1					
ANR	746957	Identifier	pushret		746928	1					
ANR	746958	PtrMemberAccess	node -> i_value		746928	1					
ANR	746959	Identifier	node		746928	0					
ANR	746960	Identifier	i_value		746928	1					
ANR	746961	ReturnStatement	return true ;	2560:1:69881:69892	746928	3	True				
ANR	746962	Identifier	true		746928	0					
ANR	746963	ReturnType	static bool		746928	1					
ANR	746964	Identifier	cb_anal_pushret		746928	2					
ANR	746965	ParameterList	"void * user , void * data"		746928	3					
ANR	746966	Parameter	void * user	2556:28:69740:69749	746928	0	True				
ANR	746967	ParameterType	void *		746928	0					
ANR	746968	Identifier	user		746928	1					
ANR	746969	Parameter	void * data	2556:40:69752:69761	746928	1	True				
ANR	746970	ParameterType	void *		746928	0					
ANR	746971	Identifier	data		746928	1					
ANR	746972	CFGEntryNode	ENTRY		746928		True				
ANR	746973	CFGExitNode	EXIT		746928		True				
ANR	746974	Symbol	core -> anal -> opt		746928						
ANR	746975	Symbol	data		746928						
ANR	746976	Symbol	* core		746928						
ANR	746977	Symbol	core -> anal		746928						
ANR	746978	Symbol	node -> i_value		746928						
ANR	746979	Symbol	core		746928						
ANR	746980	Symbol	node		746928						
ANR	746981	Symbol	* core -> anal		746928						
ANR	746982	Symbol	true		746928						
ANR	746983	Symbol	* node		746928						
ANR	746984	Symbol	user		746928						
ANR	746985	Symbol	core -> anal -> opt . pushret		746928						
ANR	746986	Symbol	* * core		746928						
ANR	746987	Function	cb_anal_brokenrefs	2563:0:69897:70095							
ANR	746988	FunctionDef	"cb_anal_brokenrefs (void * user , void * data)"		746987	0					
ANR	746989	CompoundStatement		2563:55:69952:70095	746987	0					
ANR	746990	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2564:1:69955:69982	746987	0	True				
ANR	746991	IdentifierDecl	* core = ( RCore * ) user		746987	0					
ANR	746992	IdentifierDeclType	RCore *		746987	0					
ANR	746993	Identifier	core		746987	1					
ANR	746994	AssignmentExpression	* core = ( RCore * ) user		746987	2		=			
ANR	746995	Identifier	core		746987	0					
ANR	746996	CastExpression	( RCore * ) user		746987	1					
ANR	746997	CastTarget	RCore *		746987	0					
ANR	746998	Identifier	user		746987	1					
ANR	746999	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2565:1:69985:70024	746987	1	True				
ANR	747000	IdentifierDecl	* node = ( RConfigNode * ) data		746987	0					
ANR	747001	IdentifierDeclType	RConfigNode *		746987	0					
ANR	747002	Identifier	node		746987	1					
ANR	747003	AssignmentExpression	* node = ( RConfigNode * ) data		746987	2		=			
ANR	747004	Identifier	node		746987	0					
ANR	747005	CastExpression	( RConfigNode * ) data		746987	1					
ANR	747006	CastTarget	RConfigNode *		746987	0					
ANR	747007	Identifier	data		746987	1					
ANR	747008	ExpressionStatement	core -> anal -> opt . followbrokenfcnsrefs = node -> i_value	2566:1:70027:70079	746987	2	True				
ANR	747009	AssignmentExpression	core -> anal -> opt . followbrokenfcnsrefs = node -> i_value		746987	0		=			
ANR	747010	MemberAccess	core -> anal -> opt . followbrokenfcnsrefs		746987	0					
ANR	747011	PtrMemberAccess	core -> anal -> opt		746987	0					
ANR	747012	PtrMemberAccess	core -> anal		746987	0					
ANR	747013	Identifier	core		746987	0					
ANR	747014	Identifier	anal		746987	1					
ANR	747015	Identifier	opt		746987	1					
ANR	747016	Identifier	followbrokenfcnsrefs		746987	1					
ANR	747017	PtrMemberAccess	node -> i_value		746987	1					
ANR	747018	Identifier	node		746987	0					
ANR	747019	Identifier	i_value		746987	1					
ANR	747020	ReturnStatement	return true ;	2567:1:70082:70093	746987	3	True				
ANR	747021	Identifier	true		746987	0					
ANR	747022	ReturnType	static bool		746987	1					
ANR	747023	Identifier	cb_anal_brokenrefs		746987	2					
ANR	747024	ParameterList	"void * user , void * data"		746987	3					
ANR	747025	Parameter	void * user	2563:31:69928:69937	746987	0	True				
ANR	747026	ParameterType	void *		746987	0					
ANR	747027	Identifier	user		746987	1					
ANR	747028	Parameter	void * data	2563:43:69940:69949	746987	1	True				
ANR	747029	ParameterType	void *		746987	0					
ANR	747030	Identifier	data		746987	1					
ANR	747031	CFGEntryNode	ENTRY		746987		True				
ANR	747032	CFGExitNode	EXIT		746987		True				
ANR	747033	Symbol	core -> anal -> opt		746987						
ANR	747034	Symbol	data		746987						
ANR	747035	Symbol	core -> anal -> opt . followbrokenfcnsrefs		746987						
ANR	747036	Symbol	* core		746987						
ANR	747037	Symbol	core -> anal		746987						
ANR	747038	Symbol	node -> i_value		746987						
ANR	747039	Symbol	core		746987						
ANR	747040	Symbol	node		746987						
ANR	747041	Symbol	* core -> anal		746987						
ANR	747042	Symbol	true		746987						
ANR	747043	Symbol	* node		746987						
ANR	747044	Symbol	user		746987						
ANR	747045	Symbol	* * core		746987						
ANR	747046	Function	cb_anal_trycatch	2570:0:70098:70282							
ANR	747047	FunctionDef	"cb_anal_trycatch (void * user , void * data)"		747046	0					
ANR	747048	CompoundStatement		2570:53:70151:70282	747046	0					
ANR	747049	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2571:1:70154:70181	747046	0	True				
ANR	747050	IdentifierDecl	* core = ( RCore * ) user		747046	0					
ANR	747051	IdentifierDeclType	RCore *		747046	0					
ANR	747052	Identifier	core		747046	1					
ANR	747053	AssignmentExpression	* core = ( RCore * ) user		747046	2		=			
ANR	747054	Identifier	core		747046	0					
ANR	747055	CastExpression	( RCore * ) user		747046	1					
ANR	747056	CastTarget	RCore *		747046	0					
ANR	747057	Identifier	user		747046	1					
ANR	747058	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2572:1:70184:70223	747046	1	True				
ANR	747059	IdentifierDecl	* node = ( RConfigNode * ) data		747046	0					
ANR	747060	IdentifierDeclType	RConfigNode *		747046	0					
ANR	747061	Identifier	node		747046	1					
ANR	747062	AssignmentExpression	* node = ( RConfigNode * ) data		747046	2		=			
ANR	747063	Identifier	node		747046	0					
ANR	747064	CastExpression	( RConfigNode * ) data		747046	1					
ANR	747065	CastTarget	RConfigNode *		747046	0					
ANR	747066	Identifier	data		747046	1					
ANR	747067	ExpressionStatement	core -> anal -> opt . trycatch = node -> i_value	2573:1:70226:70266	747046	2	True				
ANR	747068	AssignmentExpression	core -> anal -> opt . trycatch = node -> i_value		747046	0		=			
ANR	747069	MemberAccess	core -> anal -> opt . trycatch		747046	0					
ANR	747070	PtrMemberAccess	core -> anal -> opt		747046	0					
ANR	747071	PtrMemberAccess	core -> anal		747046	0					
ANR	747072	Identifier	core		747046	0					
ANR	747073	Identifier	anal		747046	1					
ANR	747074	Identifier	opt		747046	1					
ANR	747075	Identifier	trycatch		747046	1					
ANR	747076	PtrMemberAccess	node -> i_value		747046	1					
ANR	747077	Identifier	node		747046	0					
ANR	747078	Identifier	i_value		747046	1					
ANR	747079	ReturnStatement	return true ;	2574:1:70269:70280	747046	3	True				
ANR	747080	Identifier	true		747046	0					
ANR	747081	ReturnType	static bool		747046	1					
ANR	747082	Identifier	cb_anal_trycatch		747046	2					
ANR	747083	ParameterList	"void * user , void * data"		747046	3					
ANR	747084	Parameter	void * user	2570:29:70127:70136	747046	0	True				
ANR	747085	ParameterType	void *		747046	0					
ANR	747086	Identifier	user		747046	1					
ANR	747087	Parameter	void * data	2570:41:70139:70148	747046	1	True				
ANR	747088	ParameterType	void *		747046	0					
ANR	747089	Identifier	data		747046	1					
ANR	747090	CFGEntryNode	ENTRY		747046		True				
ANR	747091	CFGExitNode	EXIT		747046		True				
ANR	747092	Symbol	core -> anal -> opt		747046						
ANR	747093	Symbol	data		747046						
ANR	747094	Symbol	* core		747046						
ANR	747095	Symbol	core -> anal		747046						
ANR	747096	Symbol	node -> i_value		747046						
ANR	747097	Symbol	core		747046						
ANR	747098	Symbol	node		747046						
ANR	747099	Symbol	core -> anal -> opt . trycatch		747046						
ANR	747100	Symbol	* core -> anal		747046						
ANR	747101	Symbol	true		747046						
ANR	747102	Symbol	* node		747046						
ANR	747103	Symbol	user		747046						
ANR	747104	Symbol	* * core		747046						
ANR	747105	Function	cb_anal_bb_max_size	2577:0:70285:70475							
ANR	747106	FunctionDef	"cb_anal_bb_max_size (void * user , void * data)"		747105	0					
ANR	747107	CompoundStatement		2577:56:70341:70475	747105	0					
ANR	747108	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2578:1:70344:70371	747105	0	True				
ANR	747109	IdentifierDecl	* core = ( RCore * ) user		747105	0					
ANR	747110	IdentifierDeclType	RCore *		747105	0					
ANR	747111	Identifier	core		747105	1					
ANR	747112	AssignmentExpression	* core = ( RCore * ) user		747105	2		=			
ANR	747113	Identifier	core		747105	0					
ANR	747114	CastExpression	( RCore * ) user		747105	1					
ANR	747115	CastTarget	RCore *		747105	0					
ANR	747116	Identifier	user		747105	1					
ANR	747117	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2579:1:70374:70413	747105	1	True				
ANR	747118	IdentifierDecl	* node = ( RConfigNode * ) data		747105	0					
ANR	747119	IdentifierDeclType	RConfigNode *		747105	0					
ANR	747120	Identifier	node		747105	1					
ANR	747121	AssignmentExpression	* node = ( RConfigNode * ) data		747105	2		=			
ANR	747122	Identifier	node		747105	0					
ANR	747123	CastExpression	( RConfigNode * ) data		747105	1					
ANR	747124	CastTarget	RConfigNode *		747105	0					
ANR	747125	Identifier	data		747105	1					
ANR	747126	ExpressionStatement	core -> anal -> opt . bb_max_size = node -> i_value	2580:1:70416:70459	747105	2	True				
ANR	747127	AssignmentExpression	core -> anal -> opt . bb_max_size = node -> i_value		747105	0		=			
ANR	747128	MemberAccess	core -> anal -> opt . bb_max_size		747105	0					
ANR	747129	PtrMemberAccess	core -> anal -> opt		747105	0					
ANR	747130	PtrMemberAccess	core -> anal		747105	0					
ANR	747131	Identifier	core		747105	0					
ANR	747132	Identifier	anal		747105	1					
ANR	747133	Identifier	opt		747105	1					
ANR	747134	Identifier	bb_max_size		747105	1					
ANR	747135	PtrMemberAccess	node -> i_value		747105	1					
ANR	747136	Identifier	node		747105	0					
ANR	747137	Identifier	i_value		747105	1					
ANR	747138	ReturnStatement	return true ;	2581:1:70462:70473	747105	3	True				
ANR	747139	Identifier	true		747105	0					
ANR	747140	ReturnType	static bool		747105	1					
ANR	747141	Identifier	cb_anal_bb_max_size		747105	2					
ANR	747142	ParameterList	"void * user , void * data"		747105	3					
ANR	747143	Parameter	void * user	2577:32:70317:70326	747105	0	True				
ANR	747144	ParameterType	void *		747105	0					
ANR	747145	Identifier	user		747105	1					
ANR	747146	Parameter	void * data	2577:44:70329:70338	747105	1	True				
ANR	747147	ParameterType	void *		747105	0					
ANR	747148	Identifier	data		747105	1					
ANR	747149	CFGEntryNode	ENTRY		747105		True				
ANR	747150	CFGExitNode	EXIT		747105		True				
ANR	747151	Symbol	core -> anal -> opt		747105						
ANR	747152	Symbol	data		747105						
ANR	747153	Symbol	* core		747105						
ANR	747154	Symbol	core -> anal		747105						
ANR	747155	Symbol	core -> anal -> opt . bb_max_size		747105						
ANR	747156	Symbol	node -> i_value		747105						
ANR	747157	Symbol	core		747105						
ANR	747158	Symbol	node		747105						
ANR	747159	Symbol	* core -> anal		747105						
ANR	747160	Symbol	true		747105						
ANR	747161	Symbol	* node		747105						
ANR	747162	Symbol	user		747105						
ANR	747163	Symbol	* * core		747105						
ANR	747164	Function	cb_anal_cpp_abi	2584:0:70478:71009							
ANR	747165	FunctionDef	"cb_anal_cpp_abi (void * user , void * data)"		747164	0					
ANR	747166	CompoundStatement		2584:52:70530:71009	747164	0					
ANR	747167	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2585:1:70533:70560	747164	0	True				
ANR	747168	IdentifierDecl	* core = ( RCore * ) user		747164	0					
ANR	747169	IdentifierDeclType	RCore *		747164	0					
ANR	747170	Identifier	core		747164	1					
ANR	747171	AssignmentExpression	* core = ( RCore * ) user		747164	2		=			
ANR	747172	Identifier	core		747164	0					
ANR	747173	CastExpression	( RCore * ) user		747164	1					
ANR	747174	CastTarget	RCore *		747164	0					
ANR	747175	Identifier	user		747164	1					
ANR	747176	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2586:1:70563:70602	747164	1	True				
ANR	747177	IdentifierDecl	* node = ( RConfigNode * ) data		747164	0					
ANR	747178	IdentifierDeclType	RConfigNode *		747164	0					
ANR	747179	Identifier	node		747164	1					
ANR	747180	AssignmentExpression	* node = ( RConfigNode * ) data		747164	2		=			
ANR	747181	Identifier	node		747164	0					
ANR	747182	CastExpression	( RConfigNode * ) data		747164	1					
ANR	747183	CastTarget	RConfigNode *		747164	0					
ANR	747184	Identifier	data		747164	1					
ANR	747185	IfStatement	if ( * node -> value == '?' )		747164	2					
ANR	747186	Condition	* node -> value == '?'	2588:5:70610:70628	747164	0	True				
ANR	747187	EqualityExpression	* node -> value == '?'		747164	0		==			
ANR	747188	UnaryOperationExpression	* node -> value		747164	0					
ANR	747189	UnaryOperator	*		747164	0					
ANR	747190	PtrMemberAccess	node -> value		747164	1					
ANR	747191	Identifier	node		747164	0					
ANR	747192	Identifier	value		747164	1					
ANR	747193	PrimaryExpression	'?'		747164	1					
ANR	747194	CompoundStatement		5:26:100:100	747164	1					
ANR	747195	ExpressionStatement	print_node_options ( node )	2589:2:70635:70660	747164	0	True				
ANR	747196	CallExpression	print_node_options ( node )		747164	0					
ANR	747197	Callee	print_node_options		747164	0					
ANR	747198	Identifier	print_node_options		747164	0					
ANR	747199	ArgumentList	node		747164	1					
ANR	747200	Argument	node		747164	0					
ANR	747201	Identifier	node		747164	0					
ANR	747202	ReturnStatement	return false ;	2590:2:70664:70676	747164	1	True				
ANR	747203	Identifier	false		747164	0					
ANR	747204	IfStatement	if ( * node -> value )		747164	3					
ANR	747205	Condition	* node -> value	2593:5:70687:70698	747164	0	True				
ANR	747206	UnaryOperationExpression	* node -> value		747164	0					
ANR	747207	UnaryOperator	*		747164	0					
ANR	747208	PtrMemberAccess	node -> value		747164	1					
ANR	747209	Identifier	node		747164	0					
ANR	747210	Identifier	value		747164	1					
ANR	747211	CompoundStatement		10:19:170:170	747164	1					
ANR	747212	IfStatement	"if ( strcmp ( node -> value , ""itanium"" ) == 0 )"		747164	0					
ANR	747213	Condition	"strcmp ( node -> value , ""itanium"" ) == 0"	2594:6:70709:70744	747164	0	True				
ANR	747214	EqualityExpression	"strcmp ( node -> value , ""itanium"" ) == 0"		747164	0		==			
ANR	747215	CallExpression	"strcmp ( node -> value , ""itanium"" )"		747164	0					
ANR	747216	Callee	strcmp		747164	0					
ANR	747217	Identifier	strcmp		747164	0					
ANR	747218	ArgumentList	node -> value		747164	1					
ANR	747219	Argument	node -> value		747164	0					
ANR	747220	PtrMemberAccess	node -> value		747164	0					
ANR	747221	Identifier	node		747164	0					
ANR	747222	Identifier	value		747164	1					
ANR	747223	Argument	"""itanium"""		747164	1					
ANR	747224	PrimaryExpression	"""itanium"""		747164	0					
ANR	747225	PrimaryExpression	0		747164	1					
ANR	747226	CompoundStatement		11:44:216:216	747164	1					
ANR	747227	ExpressionStatement	core -> anal -> cpp_abi = R_ANAL_CPP_ABI_ITANIUM	2595:3:70752:70796	747164	0	True				
ANR	747228	AssignmentExpression	core -> anal -> cpp_abi = R_ANAL_CPP_ABI_ITANIUM		747164	0		=			
ANR	747229	PtrMemberAccess	core -> anal -> cpp_abi		747164	0					
ANR	747230	PtrMemberAccess	core -> anal		747164	0					
ANR	747231	Identifier	core		747164	0					
ANR	747232	Identifier	anal		747164	1					
ANR	747233	Identifier	cpp_abi		747164	1					
ANR	747234	Identifier	R_ANAL_CPP_ABI_ITANIUM		747164	1					
ANR	747235	ReturnStatement	return true ;	2596:3:70801:70812	747164	1	True				
ANR	747236	Identifier	true		747164	0					
ANR	747237	ElseStatement	else		747164	0					
ANR	747238	IfStatement	"if ( strcmp ( node -> value , ""msvc"" ) == 0 )"		747164	0					
ANR	747239	Condition	"strcmp ( node -> value , ""msvc"" ) == 0"	2597:13:70827:70859	747164	0	True				
ANR	747240	EqualityExpression	"strcmp ( node -> value , ""msvc"" ) == 0"		747164	0		==			
ANR	747241	CallExpression	"strcmp ( node -> value , ""msvc"" )"		747164	0					
ANR	747242	Callee	strcmp		747164	0					
ANR	747243	Identifier	strcmp		747164	0					
ANR	747244	ArgumentList	node -> value		747164	1					
ANR	747245	Argument	node -> value		747164	0					
ANR	747246	PtrMemberAccess	node -> value		747164	0					
ANR	747247	Identifier	node		747164	0					
ANR	747248	Identifier	value		747164	1					
ANR	747249	Argument	"""msvc"""		747164	1					
ANR	747250	PrimaryExpression	"""msvc"""		747164	0					
ANR	747251	PrimaryExpression	0		747164	1					
ANR	747252	CompoundStatement		14:48:331:331	747164	1					
ANR	747253	ExpressionStatement	core -> anal -> cpp_abi = R_ANAL_CPP_ABI_MSVC	2598:3:70867:70908	747164	0	True				
ANR	747254	AssignmentExpression	core -> anal -> cpp_abi = R_ANAL_CPP_ABI_MSVC		747164	0		=			
ANR	747255	PtrMemberAccess	core -> anal -> cpp_abi		747164	0					
ANR	747256	PtrMemberAccess	core -> anal		747164	0					
ANR	747257	Identifier	core		747164	0					
ANR	747258	Identifier	anal		747164	1					
ANR	747259	Identifier	cpp_abi		747164	1					
ANR	747260	Identifier	R_ANAL_CPP_ABI_MSVC		747164	1					
ANR	747261	ReturnStatement	return true ;	2599:3:70913:70924	747164	1	True				
ANR	747262	Identifier	true		747164	0					
ANR	747263	ExpressionStatement	"eprintf ( ""anal.cpp.abi: cannot find '%s'\\n"" , node -> value )"	2601:2:70932:70989	747164	1	True				
ANR	747264	CallExpression	"eprintf ( ""anal.cpp.abi: cannot find '%s'\\n"" , node -> value )"		747164	0					
ANR	747265	Callee	eprintf		747164	0					
ANR	747266	Identifier	eprintf		747164	0					
ANR	747267	ArgumentList	"""anal.cpp.abi: cannot find '%s'\\n"""		747164	1					
ANR	747268	Argument	"""anal.cpp.abi: cannot find '%s'\\n"""		747164	0					
ANR	747269	PrimaryExpression	"""anal.cpp.abi: cannot find '%s'\\n"""		747164	0					
ANR	747270	Argument	node -> value		747164	1					
ANR	747271	PtrMemberAccess	node -> value		747164	0					
ANR	747272	Identifier	node		747164	0					
ANR	747273	Identifier	value		747164	1					
ANR	747274	ReturnStatement	return false ;	2603:1:70995:71007	747164	4	True				
ANR	747275	Identifier	false		747164	0					
ANR	747276	ReturnType	static bool		747164	1					
ANR	747277	Identifier	cb_anal_cpp_abi		747164	2					
ANR	747278	ParameterList	"void * user , void * data"		747164	3					
ANR	747279	Parameter	void * user	2584:28:70506:70515	747164	0	True				
ANR	747280	ParameterType	void *		747164	0					
ANR	747281	Identifier	user		747164	1					
ANR	747282	Parameter	void * data	2584:40:70518:70527	747164	1	True				
ANR	747283	ParameterType	void *		747164	0					
ANR	747284	Identifier	data		747164	1					
ANR	747285	CFGEntryNode	ENTRY		747164		True				
ANR	747286	CFGExitNode	EXIT		747164		True				
ANR	747287	Symbol	strcmp		747164						
ANR	747288	Symbol	* node -> value		747164						
ANR	747289	Symbol	data		747164						
ANR	747290	Symbol	R_ANAL_CPP_ABI_ITANIUM		747164						
ANR	747291	Symbol	false		747164						
ANR	747292	Symbol	* core		747164						
ANR	747293	Symbol	core -> anal		747164						
ANR	747294	Symbol	node -> value		747164						
ANR	747295	Symbol	core		747164						
ANR	747296	Symbol	node		747164						
ANR	747297	Symbol	* core -> anal		747164						
ANR	747298	Symbol	* * node		747164						
ANR	747299	Symbol	core -> anal -> cpp_abi		747164						
ANR	747300	Symbol	true		747164						
ANR	747301	Symbol	* node		747164						
ANR	747302	Symbol	user		747164						
ANR	747303	Symbol	R_ANAL_CPP_ABI_MSVC		747164						
ANR	747304	Symbol	* * core		747164						
ANR	747305	Function	cb_linesto	2606:0:71012:71829							
ANR	747306	FunctionDef	"cb_linesto (void * user , void * data)"		747305	0					
ANR	747307	CompoundStatement		2606:47:71059:71829	747305	0					
ANR	747308	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2607:1:71062:71089	747305	0	True				
ANR	747309	IdentifierDecl	* core = ( RCore * ) user		747305	0					
ANR	747310	IdentifierDeclType	RCore *		747305	0					
ANR	747311	Identifier	core		747305	1					
ANR	747312	AssignmentExpression	* core = ( RCore * ) user		747305	2		=			
ANR	747313	Identifier	core		747305	0					
ANR	747314	CastExpression	( RCore * ) user		747305	1					
ANR	747315	CastTarget	RCore *		747305	0					
ANR	747316	Identifier	user		747305	1					
ANR	747317	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2608:1:71092:71131	747305	1	True				
ANR	747318	IdentifierDecl	* node = ( RConfigNode * ) data		747305	0					
ANR	747319	IdentifierDeclType	RConfigNode *		747305	0					
ANR	747320	Identifier	node		747305	1					
ANR	747321	AssignmentExpression	* node = ( RConfigNode * ) data		747305	2		=			
ANR	747322	Identifier	node		747305	0					
ANR	747323	CastExpression	( RConfigNode * ) data		747305	1					
ANR	747324	CastTarget	RConfigNode *		747305	0					
ANR	747325	Identifier	data		747305	1					
ANR	747326	IdentifierDeclStatement	"ut64 from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" ) ;"	2609:1:71134:71195	747305	2	True				
ANR	747327	IdentifierDecl	"from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		747305	0					
ANR	747328	IdentifierDeclType	ut64		747305	0					
ANR	747329	Identifier	from		747305	1					
ANR	747330	AssignmentExpression	"from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		747305	2		=			
ANR	747331	Identifier	from		747305	0					
ANR	747332	CastExpression	"( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		747305	1					
ANR	747333	CastTarget	ut64		747305	0					
ANR	747334	CallExpression	"r_config_get_i ( core -> config , ""lines.from"" )"		747305	1					
ANR	747335	Callee	r_config_get_i		747305	0					
ANR	747336	Identifier	r_config_get_i		747305	0					
ANR	747337	ArgumentList	core -> config		747305	1					
ANR	747338	Argument	core -> config		747305	0					
ANR	747339	PtrMemberAccess	core -> config		747305	0					
ANR	747340	Identifier	core		747305	0					
ANR	747341	Identifier	config		747305	1					
ANR	747342	Argument	"""lines.from"""		747305	1					
ANR	747343	PrimaryExpression	"""lines.from"""		747305	0					
ANR	747344	IdentifierDeclStatement	int io_sz = r_io_size ( core -> io ) ;	2610:1:71198:71230	747305	3	True				
ANR	747345	IdentifierDecl	io_sz = r_io_size ( core -> io )		747305	0					
ANR	747346	IdentifierDeclType	int		747305	0					
ANR	747347	Identifier	io_sz		747305	1					
ANR	747348	AssignmentExpression	io_sz = r_io_size ( core -> io )		747305	2		=			
ANR	747349	Identifier	io_sz		747305	0					
ANR	747350	CallExpression	r_io_size ( core -> io )		747305	1					
ANR	747351	Callee	r_io_size		747305	0					
ANR	747352	Identifier	r_io_size		747305	0					
ANR	747353	ArgumentList	core -> io		747305	1					
ANR	747354	Argument	core -> io		747305	0					
ANR	747355	PtrMemberAccess	core -> io		747305	0					
ANR	747356	Identifier	core		747305	0					
ANR	747357	Identifier	io		747305	1					
ANR	747358	IdentifierDeclStatement	"ut64 to = r_num_math ( core -> num , node -> value ) ;"	2611:1:71233:71278	747305	4	True				
ANR	747359	IdentifierDecl	"to = r_num_math ( core -> num , node -> value )"		747305	0					
ANR	747360	IdentifierDeclType	ut64		747305	0					
ANR	747361	Identifier	to		747305	1					
ANR	747362	AssignmentExpression	"to = r_num_math ( core -> num , node -> value )"		747305	2		=			
ANR	747363	Identifier	to		747305	0					
ANR	747364	CallExpression	"r_num_math ( core -> num , node -> value )"		747305	1					
ANR	747365	Callee	r_num_math		747305	0					
ANR	747366	Identifier	r_num_math		747305	0					
ANR	747367	ArgumentList	core -> num		747305	1					
ANR	747368	Argument	core -> num		747305	0					
ANR	747369	PtrMemberAccess	core -> num		747305	0					
ANR	747370	Identifier	core		747305	0					
ANR	747371	Identifier	num		747305	1					
ANR	747372	Argument	node -> value		747305	1					
ANR	747373	PtrMemberAccess	node -> value		747305	0					
ANR	747374	Identifier	node		747305	0					
ANR	747375	Identifier	value		747305	1					
ANR	747376	IfStatement	if ( to == 0 )		747305	5					
ANR	747377	Condition	to == 0	2612:5:71285:71291	747305	0	True				
ANR	747378	EqualityExpression	to == 0		747305	0		==			
ANR	747379	Identifier	to		747305	0					
ANR	747380	PrimaryExpression	0		747305	1					
ANR	747381	CompoundStatement		7:14:234:234	747305	1					
ANR	747382	ExpressionStatement	core -> print -> lines_cache_sz = - 1	2613:2:71298:71330	747305	0	True				
ANR	747383	AssignmentExpression	core -> print -> lines_cache_sz = - 1		747305	0		=			
ANR	747384	PtrMemberAccess	core -> print -> lines_cache_sz		747305	0					
ANR	747385	PtrMemberAccess	core -> print		747305	0					
ANR	747386	Identifier	core		747305	0					
ANR	747387	Identifier	print		747305	1					
ANR	747388	Identifier	lines_cache_sz		747305	1					
ANR	747389	UnaryOperationExpression	- 1		747305	1					
ANR	747390	UnaryOperator	-		747305	0					
ANR	747391	PrimaryExpression	1		747305	1					
ANR	747392	ReturnStatement	return true ;	2614:2:71377:71388	747305	1	True				
ANR	747393	Identifier	true		747305	0					
ANR	747394	IfStatement	if ( to > from + io_sz )		747305	6					
ANR	747395	Condition	to > from + io_sz	2616:5:71398:71414	747305	0	True				
ANR	747396	RelationalExpression	to > from + io_sz		747305	0		>			
ANR	747397	Identifier	to		747305	0					
ANR	747398	AdditiveExpression	from + io_sz		747305	1		+			
ANR	747399	Identifier	from		747305	0					
ANR	747400	Identifier	io_sz		747305	1					
ANR	747401	CompoundStatement		11:24:357:357	747305	1					
ANR	747402	Statement	eprintf	2617:2:71421:71427	747305	0	True				
ANR	747403	Statement	(	2617:10:71429:71429	747305	1	True				
ANR	747404	Statement	"""ERROR: \\""lines.to\\"" can't exceed addr 0x%08"""	2617:11:71430:71474	747305	2	True				
ANR	747405	Statement	PFMT64x	2617:56:71475:71481	747305	3	True				
ANR	747406	Statement	""" 0x%08"""	2618:3:71486:71493	747305	4	True				
ANR	747407	Statement	PFMT64x	2618:11:71494:71500	747305	5	True				
ANR	747408	Statement	""" %d\\n"""	2618:18:71501:71507	747305	6	True				
ANR	747409	Statement	","	2618:25:71508:71508	747305	7	True				
ANR	747410	Statement	from	2618:27:71510:71513	747305	8	True				
ANR	747411	Statement	","	2618:31:71514:71514	747305	9	True				
ANR	747412	Statement	to	2618:33:71516:71517	747305	10	True				
ANR	747413	Statement	","	2618:35:71518:71518	747305	11	True				
ANR	747414	Statement	io_sz	2618:37:71520:71524	747305	12	True				
ANR	747415	Statement	)	2618:42:71525:71525	747305	13	True				
ANR	747416	ExpressionStatement		2618:43:71526:71526	747305	14	True				
ANR	747417	ReturnStatement	return true ;	2619:2:71530:71541	747305	15	True				
ANR	747418	Identifier	true		747305	0					
ANR	747419	IfStatement	if ( to > from )		747305	7					
ANR	747420	Condition	to > from	2621:5:71551:71559	747305	0	True				
ANR	747421	RelationalExpression	to > from		747305	0		>			
ANR	747422	Identifier	to		747305	0					
ANR	747423	Identifier	from		747305	1					
ANR	747424	CompoundStatement		16:16:502:502	747305	1					
ANR	747425	ExpressionStatement	"core -> print -> lines_cache_sz = r_core_lines_initcache ( core , from , to )"	2622:2:71566:71635	747305	0	True				
ANR	747426	AssignmentExpression	"core -> print -> lines_cache_sz = r_core_lines_initcache ( core , from , to )"		747305	0		=			
ANR	747427	PtrMemberAccess	core -> print -> lines_cache_sz		747305	0					
ANR	747428	PtrMemberAccess	core -> print		747305	0					
ANR	747429	Identifier	core		747305	0					
ANR	747430	Identifier	print		747305	1					
ANR	747431	Identifier	lines_cache_sz		747305	1					
ANR	747432	CallExpression	"r_core_lines_initcache ( core , from , to )"		747305	1					
ANR	747433	Callee	r_core_lines_initcache		747305	0					
ANR	747434	Identifier	r_core_lines_initcache		747305	0					
ANR	747435	ArgumentList	core		747305	1					
ANR	747436	Argument	core		747305	0					
ANR	747437	Identifier	core		747305	0					
ANR	747438	Argument	from		747305	1					
ANR	747439	Identifier	from		747305	0					
ANR	747440	Argument	to		747305	2					
ANR	747441	Identifier	to		747305	0					
ANR	747442	ElseStatement	else		747305	0					
ANR	747443	CompoundStatement		19:8:676:676	747305	0					
ANR	747444	Statement	eprintf	2625:2:71740:71746	747305	0	True				
ANR	747445	Statement	(	2625:10:71748:71748	747305	1	True				
ANR	747446	Statement	"""Invalid range 0x%08"""	2625:11:71749:71769	747305	2	True				
ANR	747447	Statement	PFMT64x	2625:32:71770:71776	747305	3	True				
ANR	747448	Statement	""" .. 0x%08"""	2625:39:71777:71787	747305	4	True				
ANR	747449	Statement	PFMT64x	2625:50:71788:71794	747305	5	True				
ANR	747450	Statement	"""\\n"""	2625:57:71795:71798	747305	6	True				
ANR	747451	Statement	","	2625:61:71799:71799	747305	7	True				
ANR	747452	Statement	from	2625:63:71801:71804	747305	8	True				
ANR	747453	Statement	","	2625:67:71805:71805	747305	9	True				
ANR	747454	Statement	to	2625:69:71807:71808	747305	10	True				
ANR	747455	Statement	)	2625:71:71809:71809	747305	11	True				
ANR	747456	ExpressionStatement		2625:72:71810:71810	747305	12	True				
ANR	747457	ReturnStatement	return true ;	2627:1:71816:71827	747305	8	True				
ANR	747458	Identifier	true		747305	0					
ANR	747459	ReturnType	static bool		747305	1					
ANR	747460	Identifier	cb_linesto		747305	2					
ANR	747461	ParameterList	"void * user , void * data"		747305	3					
ANR	747462	Parameter	void * user	2606:23:71035:71044	747305	0	True				
ANR	747463	ParameterType	void *		747305	0					
ANR	747464	Identifier	user		747305	1					
ANR	747465	Parameter	void * data	2606:35:71047:71056	747305	1	True				
ANR	747466	ParameterType	void *		747305	0					
ANR	747467	Identifier	data		747305	1					
ANR	747468	CFGEntryNode	ENTRY		747305		True				
ANR	747469	CFGExitNode	EXIT		747305		True				
ANR	747470	Symbol	core -> config		747305						
ANR	747471	Symbol	r_core_lines_initcache		747305						
ANR	747472	Symbol	data		747305						
ANR	747473	Symbol	* core		747305						
ANR	747474	Symbol	r_num_math		747305						
ANR	747475	Symbol	node -> value		747305						
ANR	747476	Symbol	core		747305						
ANR	747477	Symbol	node		747305						
ANR	747478	Symbol	* core -> print		747305						
ANR	747479	Symbol	core -> io		747305						
ANR	747480	Symbol	r_config_get_i		747305						
ANR	747481	Symbol	true		747305						
ANR	747482	Symbol	from		747305						
ANR	747483	Symbol	* node		747305						
ANR	747484	Symbol	io_sz		747305						
ANR	747485	Symbol	to		747305						
ANR	747486	Symbol	core -> print -> lines_cache_sz		747305						
ANR	747487	Symbol	r_io_size		747305						
ANR	747488	Symbol	core -> num		747305						
ANR	747489	Symbol	core -> print		747305						
ANR	747490	Symbol	user		747305						
ANR	747491	Symbol	* * core		747305						
ANR	747492	Function	cb_linesabs	2630:0:71832:72469							
ANR	747493	FunctionDef	"cb_linesabs (void * user , void * data)"		747492	0					
ANR	747494	CompoundStatement		2630:48:71880:72469	747492	0					
ANR	747495	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2631:1:71883:71910	747492	0	True				
ANR	747496	IdentifierDecl	* core = ( RCore * ) user		747492	0					
ANR	747497	IdentifierDeclType	RCore *		747492	0					
ANR	747498	Identifier	core		747492	1					
ANR	747499	AssignmentExpression	* core = ( RCore * ) user		747492	2		=			
ANR	747500	Identifier	core		747492	0					
ANR	747501	CastExpression	( RCore * ) user		747492	1					
ANR	747502	CastTarget	RCore *		747492	0					
ANR	747503	Identifier	user		747492	1					
ANR	747504	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2632:1:71913:71952	747492	1	True				
ANR	747505	IdentifierDecl	* node = ( RConfigNode * ) data		747492	0					
ANR	747506	IdentifierDeclType	RConfigNode *		747492	0					
ANR	747507	Identifier	node		747492	1					
ANR	747508	AssignmentExpression	* node = ( RConfigNode * ) data		747492	2		=			
ANR	747509	Identifier	node		747492	0					
ANR	747510	CastExpression	( RConfigNode * ) data		747492	1					
ANR	747511	CastTarget	RConfigNode *		747492	0					
ANR	747512	Identifier	data		747492	1					
ANR	747513	ExpressionStatement	core -> print -> lines_abs = node -> i_value	2633:1:71955:71993	747492	2	True				
ANR	747514	AssignmentExpression	core -> print -> lines_abs = node -> i_value		747492	0		=			
ANR	747515	PtrMemberAccess	core -> print -> lines_abs		747492	0					
ANR	747516	PtrMemberAccess	core -> print		747492	0					
ANR	747517	Identifier	core		747492	0					
ANR	747518	Identifier	print		747492	1					
ANR	747519	Identifier	lines_abs		747492	1					
ANR	747520	PtrMemberAccess	node -> i_value		747492	1					
ANR	747521	Identifier	node		747492	0					
ANR	747522	Identifier	i_value		747492	1					
ANR	747523	IfStatement	if ( core -> print -> lines_abs && core -> print -> lines_cache_sz <= 0 )		747492	3					
ANR	747524	Condition	core -> print -> lines_abs && core -> print -> lines_cache_sz <= 0	2634:5:72000:72057	747492	0	True				
ANR	747525	AndExpression	core -> print -> lines_abs && core -> print -> lines_cache_sz <= 0		747492	0		&&			
ANR	747526	PtrMemberAccess	core -> print -> lines_abs		747492	0					
ANR	747527	PtrMemberAccess	core -> print		747492	0					
ANR	747528	Identifier	core		747492	0					
ANR	747529	Identifier	print		747492	1					
ANR	747530	Identifier	lines_abs		747492	1					
ANR	747531	RelationalExpression	core -> print -> lines_cache_sz <= 0		747492	1		<=			
ANR	747532	PtrMemberAccess	core -> print -> lines_cache_sz		747492	0					
ANR	747533	PtrMemberAccess	core -> print		747492	0					
ANR	747534	Identifier	core		747492	0					
ANR	747535	Identifier	print		747492	1					
ANR	747536	Identifier	lines_cache_sz		747492	1					
ANR	747537	PrimaryExpression	0		747492	1					
ANR	747538	CompoundStatement		7:2:248:305	747492	1					
ANR	747539	IdentifierDeclStatement	"ut64 from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" ) ;"	2635:2:72064:72125	747492	0	True				
ANR	747540	IdentifierDecl	"from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		747492	0					
ANR	747541	IdentifierDeclType	ut64		747492	0					
ANR	747542	Identifier	from		747492	1					
ANR	747543	AssignmentExpression	"from = ( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		747492	2		=			
ANR	747544	Identifier	from		747492	0					
ANR	747545	CastExpression	"( ut64 ) r_config_get_i ( core -> config , ""lines.from"" )"		747492	1					
ANR	747546	CastTarget	ut64		747492	0					
ANR	747547	CallExpression	"r_config_get_i ( core -> config , ""lines.from"" )"		747492	1					
ANR	747548	Callee	r_config_get_i		747492	0					
ANR	747549	Identifier	r_config_get_i		747492	0					
ANR	747550	ArgumentList	core -> config		747492	1					
ANR	747551	Argument	core -> config		747492	0					
ANR	747552	PtrMemberAccess	core -> config		747492	0					
ANR	747553	Identifier	core		747492	0					
ANR	747554	Identifier	config		747492	1					
ANR	747555	Argument	"""lines.from"""		747492	1					
ANR	747556	PrimaryExpression	"""lines.from"""		747492	0					
ANR	747557	IdentifierDeclStatement	"ut64 to = ( ut64 ) r_config_get_i ( core -> config , ""lines.to"" ) ;"	2636:2:72129:72186	747492	1	True				
ANR	747558	IdentifierDecl	"to = ( ut64 ) r_config_get_i ( core -> config , ""lines.to"" )"		747492	0					
ANR	747559	IdentifierDeclType	ut64		747492	0					
ANR	747560	Identifier	to		747492	1					
ANR	747561	AssignmentExpression	"to = ( ut64 ) r_config_get_i ( core -> config , ""lines.to"" )"		747492	2		=			
ANR	747562	Identifier	to		747492	0					
ANR	747563	CastExpression	"( ut64 ) r_config_get_i ( core -> config , ""lines.to"" )"		747492	1					
ANR	747564	CastTarget	ut64		747492	0					
ANR	747565	CallExpression	"r_config_get_i ( core -> config , ""lines.to"" )"		747492	1					
ANR	747566	Callee	r_config_get_i		747492	0					
ANR	747567	Identifier	r_config_get_i		747492	0					
ANR	747568	ArgumentList	core -> config		747492	1					
ANR	747569	Argument	core -> config		747492	0					
ANR	747570	PtrMemberAccess	core -> config		747492	0					
ANR	747571	Identifier	core		747492	0					
ANR	747572	Identifier	config		747492	1					
ANR	747573	Argument	"""lines.to"""		747492	1					
ANR	747574	PrimaryExpression	"""lines.to"""		747492	0					
ANR	747575	ExpressionStatement	"core -> print -> lines_cache_sz = r_core_lines_initcache ( core , from , to )"	2637:2:72190:72259	747492	2	True				
ANR	747576	AssignmentExpression	"core -> print -> lines_cache_sz = r_core_lines_initcache ( core , from , to )"		747492	0		=			
ANR	747577	PtrMemberAccess	core -> print -> lines_cache_sz		747492	0					
ANR	747578	PtrMemberAccess	core -> print		747492	0					
ANR	747579	Identifier	core		747492	0					
ANR	747580	Identifier	print		747492	1					
ANR	747581	Identifier	lines_cache_sz		747492	1					
ANR	747582	CallExpression	"r_core_lines_initcache ( core , from , to )"		747492	1					
ANR	747583	Callee	r_core_lines_initcache		747492	0					
ANR	747584	Identifier	r_core_lines_initcache		747492	0					
ANR	747585	ArgumentList	core		747492	1					
ANR	747586	Argument	core		747492	0					
ANR	747587	Identifier	core		747492	0					
ANR	747588	Argument	from		747492	1					
ANR	747589	Identifier	from		747492	0					
ANR	747590	Argument	to		747492	2					
ANR	747591	Identifier	to		747492	0					
ANR	747592	IfStatement	if ( core -> print -> lines_cache_sz == - 1 )		747492	3					
ANR	747593	Condition	core -> print -> lines_cache_sz == - 1	2638:6:72267:72299	747492	0	True				
ANR	747594	EqualityExpression	core -> print -> lines_cache_sz == - 1		747492	0		==			
ANR	747595	PtrMemberAccess	core -> print -> lines_cache_sz		747492	0					
ANR	747596	PtrMemberAccess	core -> print		747492	0					
ANR	747597	Identifier	core		747492	0					
ANR	747598	Identifier	print		747492	1					
ANR	747599	Identifier	lines_cache_sz		747492	1					
ANR	747600	UnaryOperationExpression	- 1		747492	1					
ANR	747601	UnaryOperator	-		747492	0					
ANR	747602	PrimaryExpression	1		747492	1					
ANR	747603	CompoundStatement		9:41:421:421	747492	1					
ANR	747604	ExpressionStatement	"eprintf ( ""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"" )"	2639:3:72307:72371	747492	0	True				
ANR	747605	CallExpression	"eprintf ( ""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"" )"		747492	0					
ANR	747606	Callee	eprintf		747492	0					
ANR	747607	Identifier	eprintf		747492	0					
ANR	747608	ArgumentList	"""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"""		747492	1					
ANR	747609	Argument	"""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"""		747492	0					
ANR	747610	PrimaryExpression	"""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"""		747492	0					
ANR	747611	ElseStatement	else		747492	0					
ANR	747612	CompoundStatement		11:9:501:501	747492	0					
ANR	747613	ExpressionStatement	"eprintf ( ""Found %d lines\\n"" , core -> print -> lines_cache_sz - 1 )"	2641:3:72387:72446	747492	0	True				
ANR	747614	CallExpression	"eprintf ( ""Found %d lines\\n"" , core -> print -> lines_cache_sz - 1 )"		747492	0					
ANR	747615	Callee	eprintf		747492	0					
ANR	747616	Identifier	eprintf		747492	0					
ANR	747617	ArgumentList	"""Found %d lines\\n"""		747492	1					
ANR	747618	Argument	"""Found %d lines\\n"""		747492	0					
ANR	747619	PrimaryExpression	"""Found %d lines\\n"""		747492	0					
ANR	747620	Argument	core -> print -> lines_cache_sz - 1		747492	1					
ANR	747621	AdditiveExpression	core -> print -> lines_cache_sz - 1		747492	0		-			
ANR	747622	PtrMemberAccess	core -> print -> lines_cache_sz		747492	0					
ANR	747623	PtrMemberAccess	core -> print		747492	0					
ANR	747624	Identifier	core		747492	0					
ANR	747625	Identifier	print		747492	1					
ANR	747626	Identifier	lines_cache_sz		747492	1					
ANR	747627	PrimaryExpression	1		747492	1					
ANR	747628	ReturnStatement	return true ;	2644:1:72456:72467	747492	4	True				
ANR	747629	Identifier	true		747492	0					
ANR	747630	ReturnType	static bool		747492	1					
ANR	747631	Identifier	cb_linesabs		747492	2					
ANR	747632	ParameterList	"void * user , void * data"		747492	3					
ANR	747633	Parameter	void * user	2630:24:71856:71865	747492	0	True				
ANR	747634	ParameterType	void *		747492	0					
ANR	747635	Identifier	user		747492	1					
ANR	747636	Parameter	void * data	2630:36:71868:71877	747492	1	True				
ANR	747637	ParameterType	void *		747492	0					
ANR	747638	Identifier	data		747492	1					
ANR	747639	CFGEntryNode	ENTRY		747492		True				
ANR	747640	CFGExitNode	EXIT		747492		True				
ANR	747641	Symbol	core -> config		747492						
ANR	747642	Symbol	r_core_lines_initcache		747492						
ANR	747643	Symbol	data		747492						
ANR	747644	Symbol	* core		747492						
ANR	747645	Symbol	node -> i_value		747492						
ANR	747646	Symbol	core		747492						
ANR	747647	Symbol	node		747492						
ANR	747648	Symbol	* core -> print		747492						
ANR	747649	Symbol	r_config_get_i		747492						
ANR	747650	Symbol	true		747492						
ANR	747651	Symbol	* node		747492						
ANR	747652	Symbol	from		747492						
ANR	747653	Symbol	core -> print -> lines_cache_sz		747492						
ANR	747654	Symbol	to		747492						
ANR	747655	Symbol	core -> print		747492						
ANR	747656	Symbol	user		747492						
ANR	747657	Symbol	core -> print -> lines_abs		747492						
ANR	747658	Symbol	* * core		747492						
ANR	747659	Function	cb_malloc	2647:0:72472:72773							
ANR	747660	FunctionDef	"cb_malloc (void * user , void * data)"		747659	0					
ANR	747661	CompoundStatement		2647:46:72518:72773	747659	0					
ANR	747662	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2648:2:72522:72549	747659	0	True				
ANR	747663	IdentifierDecl	* core = ( RCore * ) user		747659	0					
ANR	747664	IdentifierDeclType	RCore *		747659	0					
ANR	747665	Identifier	core		747659	1					
ANR	747666	AssignmentExpression	* core = ( RCore * ) user		747659	2		=			
ANR	747667	Identifier	core		747659	0					
ANR	747668	CastExpression	( RCore * ) user		747659	1					
ANR	747669	CastTarget	RCore *		747659	0					
ANR	747670	Identifier	user		747659	1					
ANR	747671	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2649:2:72553:72592	747659	1	True				
ANR	747672	IdentifierDecl	* node = ( RConfigNode * ) data		747659	0					
ANR	747673	IdentifierDeclType	RConfigNode *		747659	0					
ANR	747674	Identifier	node		747659	1					
ANR	747675	AssignmentExpression	* node = ( RConfigNode * ) data		747659	2		=			
ANR	747676	Identifier	node		747659	0					
ANR	747677	CastExpression	( RConfigNode * ) data		747659	1					
ANR	747678	CastTarget	RConfigNode *		747659	0					
ANR	747679	Identifier	data		747659	1					
ANR	747680	IfStatement	if ( node -> value )		747659	2					
ANR	747681	Condition	node -> value	2651:6:72601:72611	747659	0	True				
ANR	747682	PtrMemberAccess	node -> value		747659	0					
ANR	747683	Identifier	node		747659	0					
ANR	747684	Identifier	value		747659	1					
ANR	747685	CompoundStatement		5:19:95:95	747659	1					
ANR	747686	IfStatement	"if ( ! strcmp ( ""jemalloc"" , node -> value ) || ! strcmp ( ""glibc"" , node -> value ) )"		747659	0					
ANR	747687	Condition	"! strcmp ( ""jemalloc"" , node -> value ) || ! strcmp ( ""glibc"" , node -> value )"	2652:7:72623:72689	747659	0	True				
ANR	747688	OrExpression	"! strcmp ( ""jemalloc"" , node -> value ) || ! strcmp ( ""glibc"" , node -> value )"		747659	0		||			
ANR	747689	UnaryOperationExpression	"! strcmp ( ""jemalloc"" , node -> value )"		747659	0					
ANR	747690	UnaryOperator	!		747659	0					
ANR	747691	CallExpression	"strcmp ( ""jemalloc"" , node -> value )"		747659	1					
ANR	747692	Callee	strcmp		747659	0					
ANR	747693	Identifier	strcmp		747659	0					
ANR	747694	ArgumentList	"""jemalloc"""		747659	1					
ANR	747695	Argument	"""jemalloc"""		747659	0					
ANR	747696	PrimaryExpression	"""jemalloc"""		747659	0					
ANR	747697	Argument	node -> value		747659	1					
ANR	747698	PtrMemberAccess	node -> value		747659	0					
ANR	747699	Identifier	node		747659	0					
ANR	747700	Identifier	value		747659	1					
ANR	747701	UnaryOperationExpression	"! strcmp ( ""glibc"" , node -> value )"		747659	1					
ANR	747702	UnaryOperator	!		747659	0					
ANR	747703	CallExpression	"strcmp ( ""glibc"" , node -> value )"		747659	1					
ANR	747704	Callee	strcmp		747659	0					
ANR	747705	Identifier	strcmp		747659	0					
ANR	747706	ArgumentList	"""glibc"""		747659	1					
ANR	747707	Argument	"""glibc"""		747659	0					
ANR	747708	PrimaryExpression	"""glibc"""		747659	0					
ANR	747709	Argument	node -> value		747659	1					
ANR	747710	PtrMemberAccess	node -> value		747659	0					
ANR	747711	Identifier	node		747659	0					
ANR	747712	Identifier	value		747659	1					
ANR	747713	CompoundStatement		6:76:173:173	747659	1					
ANR	747714	IfStatement	if ( core -> dbg )		747659	0					
ANR	747715	Condition	core -> dbg	2653:7:72701:72709	747659	0	True				
ANR	747716	PtrMemberAccess	core -> dbg		747659	0					
ANR	747717	Identifier	core		747659	0					
ANR	747718	Identifier	dbg		747659	1					
ANR	747719	CompoundStatement		7:18:193:193	747659	1					
ANR	747720	ExpressionStatement	core -> dbg -> malloc = data	2654:4:72718:72742	747659	0	True				
ANR	747721	AssignmentExpression	core -> dbg -> malloc = data		747659	0		=			
ANR	747722	PtrMemberAccess	core -> dbg -> malloc		747659	0					
ANR	747723	PtrMemberAccess	core -> dbg		747659	0					
ANR	747724	Identifier	core		747659	0					
ANR	747725	Identifier	dbg		747659	1					
ANR	747726	Identifier	malloc		747659	1					
ANR	747727	Identifier	data		747659	1					
ANR	747728	ReturnStatement	return true ;	2659:1:72760:72771	747659	3	True				
ANR	747729	Identifier	true		747659	0					
ANR	747730	ReturnType	static bool		747659	1					
ANR	747731	Identifier	cb_malloc		747659	2					
ANR	747732	ParameterList	"void * user , void * data"		747659	3					
ANR	747733	Parameter	void * user	2647:22:72494:72503	747659	0	True				
ANR	747734	ParameterType	void *		747659	0					
ANR	747735	Identifier	user		747659	1					
ANR	747736	Parameter	void * data	2647:34:72506:72515	747659	1	True				
ANR	747737	ParameterType	void *		747659	0					
ANR	747738	Identifier	data		747659	1					
ANR	747739	CFGEntryNode	ENTRY		747659		True				
ANR	747740	CFGExitNode	EXIT		747659		True				
ANR	747741	Symbol	strcmp		747659						
ANR	747742	Symbol	data		747659						
ANR	747743	Symbol	* core		747659						
ANR	747744	Symbol	node -> value		747659						
ANR	747745	Symbol	core		747659						
ANR	747746	Symbol	node		747659						
ANR	747747	Symbol	core -> dbg -> malloc		747659						
ANR	747748	Symbol	true		747659						
ANR	747749	Symbol	* node		747659						
ANR	747750	Symbol	user		747659						
ANR	747751	Symbol	* core -> dbg		747659						
ANR	747752	Symbol	* * core		747659						
ANR	747753	Symbol	core -> dbg		747659						
ANR	747754	Function	cb_dbgsnap	2662:0:72776:72983							
ANR	747755	FunctionDef	"cb_dbgsnap (void * user , void * data)"		747754	0					
ANR	747756	CompoundStatement		2662:47:72823:72983	747754	0					
ANR	747757	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2663:1:72826:72853	747754	0	True				
ANR	747758	IdentifierDecl	* core = ( RCore * ) user		747754	0					
ANR	747759	IdentifierDeclType	RCore *		747754	0					
ANR	747760	Identifier	core		747754	1					
ANR	747761	AssignmentExpression	* core = ( RCore * ) user		747754	2		=			
ANR	747762	Identifier	core		747754	0					
ANR	747763	CastExpression	( RCore * ) user		747754	1					
ANR	747764	CastTarget	RCore *		747754	0					
ANR	747765	Identifier	user		747754	1					
ANR	747766	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2664:1:72856:72895	747754	1	True				
ANR	747767	IdentifierDecl	* node = ( RConfigNode * ) data		747754	0					
ANR	747768	IdentifierDeclType	RConfigNode *		747754	0					
ANR	747769	Identifier	node		747754	1					
ANR	747770	AssignmentExpression	* node = ( RConfigNode * ) data		747754	2		=			
ANR	747771	Identifier	node		747754	0					
ANR	747772	CastExpression	( RConfigNode * ) data		747754	1					
ANR	747773	CastTarget	RConfigNode *		747754	0					
ANR	747774	Identifier	data		747754	1					
ANR	747775	IfStatement	if ( node -> value )		747754	2					
ANR	747776	Condition	node -> value	2666:5:72903:72913	747754	0	True				
ANR	747777	PtrMemberAccess	node -> value		747754	0					
ANR	747778	Identifier	node		747754	0					
ANR	747779	Identifier	value		747754	1					
ANR	747780	CompoundStatement		5:17:91:91	747754	1					
ANR	747781	ExpressionStatement	"r_debug_session_path ( core -> dbg , node -> value )"	2667:2:72919:72964	747754	0	True				
ANR	747782	CallExpression	"r_debug_session_path ( core -> dbg , node -> value )"		747754	0					
ANR	747783	Callee	r_debug_session_path		747754	0					
ANR	747784	Identifier	r_debug_session_path		747754	0					
ANR	747785	ArgumentList	core -> dbg		747754	1					
ANR	747786	Argument	core -> dbg		747754	0					
ANR	747787	PtrMemberAccess	core -> dbg		747754	0					
ANR	747788	Identifier	core		747754	0					
ANR	747789	Identifier	dbg		747754	1					
ANR	747790	Argument	node -> value		747754	1					
ANR	747791	PtrMemberAccess	node -> value		747754	0					
ANR	747792	Identifier	node		747754	0					
ANR	747793	Identifier	value		747754	1					
ANR	747794	ReturnStatement	return true ;	2669:1:72970:72981	747754	3	True				
ANR	747795	Identifier	true		747754	0					
ANR	747796	ReturnType	static bool		747754	1					
ANR	747797	Identifier	cb_dbgsnap		747754	2					
ANR	747798	ParameterList	"void * user , void * data"		747754	3					
ANR	747799	Parameter	void * user	2662:23:72799:72808	747754	0	True				
ANR	747800	ParameterType	void *		747754	0					
ANR	747801	Identifier	user		747754	1					
ANR	747802	Parameter	void * data	2662:35:72811:72820	747754	1	True				
ANR	747803	ParameterType	void *		747754	0					
ANR	747804	Identifier	data		747754	1					
ANR	747805	CFGEntryNode	ENTRY		747754		True				
ANR	747806	CFGExitNode	EXIT		747754		True				
ANR	747807	Symbol	core		747754						
ANR	747808	Symbol	node		747754						
ANR	747809	Symbol	data		747754						
ANR	747810	Symbol	* core		747754						
ANR	747811	Symbol	true		747754						
ANR	747812	Symbol	* node		747754						
ANR	747813	Symbol	user		747754						
ANR	747814	Symbol	node -> value		747754						
ANR	747815	Symbol	core -> dbg		747754						
ANR	747816	Function	cb_log_config_level	2672:0:72986:73277							
ANR	747817	FunctionDef	"cb_log_config_level (void * coreptr , void * nodeptr)"		747816	0					
ANR	747818	CompoundStatement		2672:62:73048:73277	747816	0					
ANR	747819	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) nodeptr ;	2673:1:73051:73093	747816	0	True				
ANR	747820	IdentifierDecl	* node = ( RConfigNode * ) nodeptr		747816	0					
ANR	747821	IdentifierDeclType	RConfigNode *		747816	0					
ANR	747822	Identifier	node		747816	1					
ANR	747823	AssignmentExpression	* node = ( RConfigNode * ) nodeptr		747816	2		=			
ANR	747824	Identifier	node		747816	0					
ANR	747825	CastExpression	( RConfigNode * ) nodeptr		747816	1					
ANR	747826	CastTarget	RConfigNode *		747816	0					
ANR	747827	Identifier	nodeptr		747816	1					
ANR	747828	IdentifierDeclStatement	const char * value = node -> value ;	2674:1:73096:73127	747816	1	True				
ANR	747829	IdentifierDecl	* value = node -> value		747816	0					
ANR	747830	IdentifierDeclType	const char *		747816	0					
ANR	747831	Identifier	value		747816	1					
ANR	747832	AssignmentExpression	* value = node -> value		747816	2		=			
ANR	747833	Identifier	value		747816	0					
ANR	747834	PtrMemberAccess	node -> value		747816	1					
ANR	747835	Identifier	node		747816	0					
ANR	747836	Identifier	value		747816	1					
ANR	747837	IdentifierDeclStatement	char * bad_data = NULL ;	2675:1:73130:73151	747816	2	True				
ANR	747838	IdentifierDecl	* bad_data = NULL		747816	0					
ANR	747839	IdentifierDeclType	char *		747816	0					
ANR	747840	Identifier	bad_data		747816	1					
ANR	747841	AssignmentExpression	* bad_data = NULL		747816	2		=			
ANR	747842	Identifier	NULL		747816	0					
ANR	747843	Identifier	NULL		747816	1					
ANR	747844	IdentifierDeclStatement	"long int ival = strtol ( value , & bad_data , 10 ) ;"	2676:1:73154:73199	747816	3	True				
ANR	747845	IdentifierDecl	"ival = strtol ( value , & bad_data , 10 )"		747816	0					
ANR	747846	IdentifierDeclType	long int		747816	0					
ANR	747847	Identifier	ival		747816	1					
ANR	747848	AssignmentExpression	"ival = strtol ( value , & bad_data , 10 )"		747816	2		=			
ANR	747849	Identifier	ival		747816	0					
ANR	747850	CallExpression	"strtol ( value , & bad_data , 10 )"		747816	1					
ANR	747851	Callee	strtol		747816	0					
ANR	747852	Identifier	strtol		747816	0					
ANR	747853	ArgumentList	value		747816	1					
ANR	747854	Argument	value		747816	0					
ANR	747855	Identifier	value		747816	0					
ANR	747856	Argument	& bad_data		747816	1					
ANR	747857	UnaryOperationExpression	& bad_data		747816	0					
ANR	747858	UnaryOperator	&		747816	0					
ANR	747859	Identifier	bad_data		747816	1					
ANR	747860	Argument	10		747816	2					
ANR	747861	PrimaryExpression	10		747816	0					
ANR	747862	IfStatement	if ( * bad_data )		747816	4					
ANR	747863	Condition	* bad_data	2677:5:73206:73214	747816	0	True				
ANR	747864	UnaryOperationExpression	* bad_data		747816	0					
ANR	747865	UnaryOperator	*		747816	0					
ANR	747866	Identifier	bad_data		747816	1					
ANR	747867	CompoundStatement		6:16:168:168	747816	1					
ANR	747868	ReturnStatement	return false ;	2678:2:73221:73233	747816	0	True				
ANR	747869	Identifier	false		747816	0					
ANR	747870	ExpressionStatement	r_log_set_level ( ival )	2680:1:73239:73261	747816	5	True				
ANR	747871	CallExpression	r_log_set_level ( ival )		747816	0					
ANR	747872	Callee	r_log_set_level		747816	0					
ANR	747873	Identifier	r_log_set_level		747816	0					
ANR	747874	ArgumentList	ival		747816	1					
ANR	747875	Argument	ival		747816	0					
ANR	747876	Identifier	ival		747816	0					
ANR	747877	ReturnStatement	return true ;	2681:1:73264:73275	747816	6	True				
ANR	747878	Identifier	true		747816	0					
ANR	747879	ReturnType	static bool		747816	1					
ANR	747880	Identifier	cb_log_config_level		747816	2					
ANR	747881	ParameterList	"void * coreptr , void * nodeptr"		747816	3					
ANR	747882	Parameter	void * coreptr	2672:32:73018:73030	747816	0	True				
ANR	747883	ParameterType	void *		747816	0					
ANR	747884	Identifier	coreptr		747816	1					
ANR	747885	Parameter	void * nodeptr	2672:47:73033:73045	747816	1	True				
ANR	747886	ParameterType	void *		747816	0					
ANR	747887	Identifier	nodeptr		747816	1					
ANR	747888	CFGEntryNode	ENTRY		747816		True				
ANR	747889	CFGExitNode	EXIT		747816		True				
ANR	747890	Symbol	* bad_data		747816						
ANR	747891	Symbol	NULL		747816						
ANR	747892	Symbol	nodeptr		747816						
ANR	747893	Symbol	coreptr		747816						
ANR	747894	Symbol	false		747816						
ANR	747895	Symbol	ival		747816						
ANR	747896	Symbol	& bad_data		747816						
ANR	747897	Symbol	node -> value		747816						
ANR	747898	Symbol	node		747816						
ANR	747899	Symbol	strtol		747816						
ANR	747900	Symbol	true		747816						
ANR	747901	Symbol	bad_data		747816						
ANR	747902	Symbol	* node		747816						
ANR	747903	Symbol	value		747816						
ANR	747904	Function	cb_log_config_traplevel	2684:0:73280:73579							
ANR	747905	FunctionDef	"cb_log_config_traplevel (void * coreptr , void * nodeptr)"		747904	0					
ANR	747906	CompoundStatement		2684:66:73346:73579	747904	0					
ANR	747907	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) nodeptr ;	2685:1:73349:73391	747904	0	True				
ANR	747908	IdentifierDecl	* node = ( RConfigNode * ) nodeptr		747904	0					
ANR	747909	IdentifierDeclType	RConfigNode *		747904	0					
ANR	747910	Identifier	node		747904	1					
ANR	747911	AssignmentExpression	* node = ( RConfigNode * ) nodeptr		747904	2		=			
ANR	747912	Identifier	node		747904	0					
ANR	747913	CastExpression	( RConfigNode * ) nodeptr		747904	1					
ANR	747914	CastTarget	RConfigNode *		747904	0					
ANR	747915	Identifier	nodeptr		747904	1					
ANR	747916	IdentifierDeclStatement	const char * value = node -> value ;	2686:1:73394:73425	747904	1	True				
ANR	747917	IdentifierDecl	* value = node -> value		747904	0					
ANR	747918	IdentifierDeclType	const char *		747904	0					
ANR	747919	Identifier	value		747904	1					
ANR	747920	AssignmentExpression	* value = node -> value		747904	2		=			
ANR	747921	Identifier	value		747904	0					
ANR	747922	PtrMemberAccess	node -> value		747904	1					
ANR	747923	Identifier	node		747904	0					
ANR	747924	Identifier	value		747904	1					
ANR	747925	IdentifierDeclStatement	char * bad_data = NULL ;	2687:1:73428:73449	747904	2	True				
ANR	747926	IdentifierDecl	* bad_data = NULL		747904	0					
ANR	747927	IdentifierDeclType	char *		747904	0					
ANR	747928	Identifier	bad_data		747904	1					
ANR	747929	AssignmentExpression	* bad_data = NULL		747904	2		=			
ANR	747930	Identifier	NULL		747904	0					
ANR	747931	Identifier	NULL		747904	1					
ANR	747932	IdentifierDeclStatement	"long int ival = strtol ( value , & bad_data , 10 ) ;"	2688:1:73452:73497	747904	3	True				
ANR	747933	IdentifierDecl	"ival = strtol ( value , & bad_data , 10 )"		747904	0					
ANR	747934	IdentifierDeclType	long int		747904	0					
ANR	747935	Identifier	ival		747904	1					
ANR	747936	AssignmentExpression	"ival = strtol ( value , & bad_data , 10 )"		747904	2		=			
ANR	747937	Identifier	ival		747904	0					
ANR	747938	CallExpression	"strtol ( value , & bad_data , 10 )"		747904	1					
ANR	747939	Callee	strtol		747904	0					
ANR	747940	Identifier	strtol		747904	0					
ANR	747941	ArgumentList	value		747904	1					
ANR	747942	Argument	value		747904	0					
ANR	747943	Identifier	value		747904	0					
ANR	747944	Argument	& bad_data		747904	1					
ANR	747945	UnaryOperationExpression	& bad_data		747904	0					
ANR	747946	UnaryOperator	&		747904	0					
ANR	747947	Identifier	bad_data		747904	1					
ANR	747948	Argument	10		747904	2					
ANR	747949	PrimaryExpression	10		747904	0					
ANR	747950	IfStatement	if ( * bad_data )		747904	4					
ANR	747951	Condition	* bad_data	2689:5:73504:73512	747904	0	True				
ANR	747952	UnaryOperationExpression	* bad_data		747904	0					
ANR	747953	UnaryOperator	*		747904	0					
ANR	747954	Identifier	bad_data		747904	1					
ANR	747955	CompoundStatement		6:16:168:168	747904	1					
ANR	747956	ReturnStatement	return false ;	2690:2:73519:73531	747904	0	True				
ANR	747957	Identifier	false		747904	0					
ANR	747958	ExpressionStatement	r_log_set_traplevel ( ival )	2692:1:73537:73563	747904	5	True				
ANR	747959	CallExpression	r_log_set_traplevel ( ival )		747904	0					
ANR	747960	Callee	r_log_set_traplevel		747904	0					
ANR	747961	Identifier	r_log_set_traplevel		747904	0					
ANR	747962	ArgumentList	ival		747904	1					
ANR	747963	Argument	ival		747904	0					
ANR	747964	Identifier	ival		747904	0					
ANR	747965	ReturnStatement	return true ;	2693:1:73566:73577	747904	6	True				
ANR	747966	Identifier	true		747904	0					
ANR	747967	ReturnType	static bool		747904	1					
ANR	747968	Identifier	cb_log_config_traplevel		747904	2					
ANR	747969	ParameterList	"void * coreptr , void * nodeptr"		747904	3					
ANR	747970	Parameter	void * coreptr	2684:36:73316:73328	747904	0	True				
ANR	747971	ParameterType	void *		747904	0					
ANR	747972	Identifier	coreptr		747904	1					
ANR	747973	Parameter	void * nodeptr	2684:51:73331:73343	747904	1	True				
ANR	747974	ParameterType	void *		747904	0					
ANR	747975	Identifier	nodeptr		747904	1					
ANR	747976	CFGEntryNode	ENTRY		747904		True				
ANR	747977	CFGExitNode	EXIT		747904		True				
ANR	747978	Symbol	* bad_data		747904						
ANR	747979	Symbol	NULL		747904						
ANR	747980	Symbol	nodeptr		747904						
ANR	747981	Symbol	coreptr		747904						
ANR	747982	Symbol	false		747904						
ANR	747983	Symbol	ival		747904						
ANR	747984	Symbol	& bad_data		747904						
ANR	747985	Symbol	node -> value		747904						
ANR	747986	Symbol	node		747904						
ANR	747987	Symbol	strtol		747904						
ANR	747988	Symbol	true		747904						
ANR	747989	Symbol	bad_data		747904						
ANR	747990	Symbol	* node		747904						
ANR	747991	Symbol	value		747904						
ANR	747992	Function	cb_log_config_file	2696:0:73582:73763							
ANR	747993	FunctionDef	"cb_log_config_file (void * coreptr , void * nodeptr)"		747992	0					
ANR	747994	CompoundStatement		2696:61:73643:73763	747992	0					
ANR	747995	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) nodeptr ;	2697:1:73646:73688	747992	0	True				
ANR	747996	IdentifierDecl	* node = ( RConfigNode * ) nodeptr		747992	0					
ANR	747997	IdentifierDeclType	RConfigNode *		747992	0					
ANR	747998	Identifier	node		747992	1					
ANR	747999	AssignmentExpression	* node = ( RConfigNode * ) nodeptr		747992	2		=			
ANR	748000	Identifier	node		747992	0					
ANR	748001	CastExpression	( RConfigNode * ) nodeptr		747992	1					
ANR	748002	CastTarget	RConfigNode *		747992	0					
ANR	748003	Identifier	nodeptr		747992	1					
ANR	748004	IdentifierDeclStatement	const char * value = node -> value ;	2698:1:73691:73722	747992	1	True				
ANR	748005	IdentifierDecl	* value = node -> value		747992	0					
ANR	748006	IdentifierDeclType	const char *		747992	0					
ANR	748007	Identifier	value		747992	1					
ANR	748008	AssignmentExpression	* value = node -> value		747992	2		=			
ANR	748009	Identifier	value		747992	0					
ANR	748010	PtrMemberAccess	node -> value		747992	1					
ANR	748011	Identifier	node		747992	0					
ANR	748012	Identifier	value		747992	1					
ANR	748013	ExpressionStatement	r_log_set_file ( value )	2699:1:73725:73747	747992	2	True				
ANR	748014	CallExpression	r_log_set_file ( value )		747992	0					
ANR	748015	Callee	r_log_set_file		747992	0					
ANR	748016	Identifier	r_log_set_file		747992	0					
ANR	748017	ArgumentList	value		747992	1					
ANR	748018	Argument	value		747992	0					
ANR	748019	Identifier	value		747992	0					
ANR	748020	ReturnStatement	return true ;	2700:1:73750:73761	747992	3	True				
ANR	748021	Identifier	true		747992	0					
ANR	748022	ReturnType	static bool		747992	1					
ANR	748023	Identifier	cb_log_config_file		747992	2					
ANR	748024	ParameterList	"void * coreptr , void * nodeptr"		747992	3					
ANR	748025	Parameter	void * coreptr	2696:31:73613:73625	747992	0	True				
ANR	748026	ParameterType	void *		747992	0					
ANR	748027	Identifier	coreptr		747992	1					
ANR	748028	Parameter	void * nodeptr	2696:46:73628:73640	747992	1	True				
ANR	748029	ParameterType	void *		747992	0					
ANR	748030	Identifier	nodeptr		747992	1					
ANR	748031	CFGEntryNode	ENTRY		747992		True				
ANR	748032	CFGExitNode	EXIT		747992		True				
ANR	748033	Symbol	node		747992						
ANR	748034	Symbol	nodeptr		747992						
ANR	748035	Symbol	coreptr		747992						
ANR	748036	Symbol	true		747992						
ANR	748037	Symbol	* node		747992						
ANR	748038	Symbol	value		747992						
ANR	748039	Symbol	node -> value		747992						
ANR	748040	Function	cb_log_config_srcinfo	2703:0:73766:74047							
ANR	748041	FunctionDef	"cb_log_config_srcinfo (void * coreptr , void * nodeptr)"		748040	0					
ANR	748042	CompoundStatement		2703:64:73830:74047	748040	0					
ANR	748043	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) nodeptr ;	2704:1:73833:73875	748040	0	True				
ANR	748044	IdentifierDecl	* node = ( RConfigNode * ) nodeptr		748040	0					
ANR	748045	IdentifierDeclType	RConfigNode *		748040	0					
ANR	748046	Identifier	node		748040	1					
ANR	748047	AssignmentExpression	* node = ( RConfigNode * ) nodeptr		748040	2		=			
ANR	748048	Identifier	node		748040	0					
ANR	748049	CastExpression	( RConfigNode * ) nodeptr		748040	1					
ANR	748050	CastTarget	RConfigNode *		748040	0					
ANR	748051	Identifier	nodeptr		748040	1					
ANR	748052	IdentifierDeclStatement	const char * value = node -> value ;	2705:1:73878:73909	748040	1	True				
ANR	748053	IdentifierDecl	* value = node -> value		748040	0					
ANR	748054	IdentifierDeclType	const char *		748040	0					
ANR	748055	Identifier	value		748040	1					
ANR	748056	AssignmentExpression	* value = node -> value		748040	2		=			
ANR	748057	Identifier	value		748040	0					
ANR	748058	PtrMemberAccess	node -> value		748040	1					
ANR	748059	Identifier	node		748040	0					
ANR	748060	Identifier	value		748040	1					
ANR	748061	SwitchStatement	switch ( value [ 0 ] )		748040	2					
ANR	748062	Condition	value [ 0 ]	2706:9:73920:73927	748040	0	True				
ANR	748063	ArrayIndexing	value [ 0 ]		748040	0					
ANR	748064	Identifier	value		748040	0					
ANR	748065	PrimaryExpression	0		748040	1					
ANR	748066	CompoundStatement		4:19:99:99	748040	1					
ANR	748067	Label	case 't' :	2707:1:73933:73941	748040	0	True				
ANR	748068	Label	case 'T' :	2708:1:73944:73952	748040	1	True				
ANR	748069	ExpressionStatement	r_log_set_srcinfo ( true )	2709:2:73956:73980	748040	2	True				
ANR	748070	CallExpression	r_log_set_srcinfo ( true )		748040	0					
ANR	748071	Callee	r_log_set_srcinfo		748040	0					
ANR	748072	Identifier	r_log_set_srcinfo		748040	0					
ANR	748073	ArgumentList	true		748040	1					
ANR	748074	Argument	true		748040	0					
ANR	748075	Identifier	true		748040	0					
ANR	748076	BreakStatement	break ;	2710:2:73984:73989	748040	3	True				
ANR	748077	Label	default :	2711:1:73992:73999	748040	4	True				
ANR	748078	Identifier	default		748040	0					
ANR	748079	ExpressionStatement	r_log_set_srcinfo ( false )	2712:2:74003:74028	748040	5	True				
ANR	748080	CallExpression	r_log_set_srcinfo ( false )		748040	0					
ANR	748081	Callee	r_log_set_srcinfo		748040	0					
ANR	748082	Identifier	r_log_set_srcinfo		748040	0					
ANR	748083	ArgumentList	false		748040	1					
ANR	748084	Argument	false		748040	0					
ANR	748085	Identifier	false		748040	0					
ANR	748086	ReturnStatement	return true ;	2714:1:74034:74045	748040	3	True				
ANR	748087	Identifier	true		748040	0					
ANR	748088	ReturnType	static bool		748040	1					
ANR	748089	Identifier	cb_log_config_srcinfo		748040	2					
ANR	748090	ParameterList	"void * coreptr , void * nodeptr"		748040	3					
ANR	748091	Parameter	void * coreptr	2703:34:73800:73812	748040	0	True				
ANR	748092	ParameterType	void *		748040	0					
ANR	748093	Identifier	coreptr		748040	1					
ANR	748094	Parameter	void * nodeptr	2703:49:73815:73827	748040	1	True				
ANR	748095	ParameterType	void *		748040	0					
ANR	748096	Identifier	nodeptr		748040	1					
ANR	748097	CFGEntryNode	ENTRY		748040		True				
ANR	748098	CFGExitNode	EXIT		748040		True				
ANR	748099	Symbol	node		748040						
ANR	748100	Symbol	nodeptr		748040						
ANR	748101	Symbol	* value		748040						
ANR	748102	Symbol	coreptr		748040						
ANR	748103	Symbol	true		748040						
ANR	748104	Symbol	false		748040						
ANR	748105	Symbol	* node		748040						
ANR	748106	Symbol	value		748040						
ANR	748107	Symbol	node -> value		748040						
ANR	748108	Function	cb_log_config_colors	2717:0:74050:74328							
ANR	748109	FunctionDef	"cb_log_config_colors (void * coreptr , void * nodeptr)"		748108	0					
ANR	748110	CompoundStatement		2717:63:74113:74328	748108	0					
ANR	748111	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) nodeptr ;	2718:1:74116:74158	748108	0	True				
ANR	748112	IdentifierDecl	* node = ( RConfigNode * ) nodeptr		748108	0					
ANR	748113	IdentifierDeclType	RConfigNode *		748108	0					
ANR	748114	Identifier	node		748108	1					
ANR	748115	AssignmentExpression	* node = ( RConfigNode * ) nodeptr		748108	2		=			
ANR	748116	Identifier	node		748108	0					
ANR	748117	CastExpression	( RConfigNode * ) nodeptr		748108	1					
ANR	748118	CastTarget	RConfigNode *		748108	0					
ANR	748119	Identifier	nodeptr		748108	1					
ANR	748120	IdentifierDeclStatement	const char * value = node -> value ;	2719:1:74161:74192	748108	1	True				
ANR	748121	IdentifierDecl	* value = node -> value		748108	0					
ANR	748122	IdentifierDeclType	const char *		748108	0					
ANR	748123	Identifier	value		748108	1					
ANR	748124	AssignmentExpression	* value = node -> value		748108	2		=			
ANR	748125	Identifier	value		748108	0					
ANR	748126	PtrMemberAccess	node -> value		748108	1					
ANR	748127	Identifier	node		748108	0					
ANR	748128	Identifier	value		748108	1					
ANR	748129	SwitchStatement	switch ( value [ 0 ] )		748108	2					
ANR	748130	Condition	value [ 0 ]	2720:9:74203:74210	748108	0	True				
ANR	748131	ArrayIndexing	value [ 0 ]		748108	0					
ANR	748132	Identifier	value		748108	0					
ANR	748133	PrimaryExpression	0		748108	1					
ANR	748134	CompoundStatement		4:19:99:99	748108	1					
ANR	748135	Label	case 't' :	2721:1:74216:74224	748108	0	True				
ANR	748136	Label	case 'T' :	2722:1:74227:74235	748108	1	True				
ANR	748137	ExpressionStatement	r_log_set_colors ( true )	2723:2:74239:74262	748108	2	True				
ANR	748138	CallExpression	r_log_set_colors ( true )		748108	0					
ANR	748139	Callee	r_log_set_colors		748108	0					
ANR	748140	Identifier	r_log_set_colors		748108	0					
ANR	748141	ArgumentList	true		748108	1					
ANR	748142	Argument	true		748108	0					
ANR	748143	Identifier	true		748108	0					
ANR	748144	BreakStatement	break ;	2724:2:74266:74271	748108	3	True				
ANR	748145	Label	default :	2725:1:74274:74281	748108	4	True				
ANR	748146	Identifier	default		748108	0					
ANR	748147	ExpressionStatement	r_log_set_colors ( false )	2726:2:74285:74309	748108	5	True				
ANR	748148	CallExpression	r_log_set_colors ( false )		748108	0					
ANR	748149	Callee	r_log_set_colors		748108	0					
ANR	748150	Identifier	r_log_set_colors		748108	0					
ANR	748151	ArgumentList	false		748108	1					
ANR	748152	Argument	false		748108	0					
ANR	748153	Identifier	false		748108	0					
ANR	748154	ReturnStatement	return true ;	2728:1:74315:74326	748108	3	True				
ANR	748155	Identifier	true		748108	0					
ANR	748156	ReturnType	static bool		748108	1					
ANR	748157	Identifier	cb_log_config_colors		748108	2					
ANR	748158	ParameterList	"void * coreptr , void * nodeptr"		748108	3					
ANR	748159	Parameter	void * coreptr	2717:33:74083:74095	748108	0	True				
ANR	748160	ParameterType	void *		748108	0					
ANR	748161	Identifier	coreptr		748108	1					
ANR	748162	Parameter	void * nodeptr	2717:48:74098:74110	748108	1	True				
ANR	748163	ParameterType	void *		748108	0					
ANR	748164	Identifier	nodeptr		748108	1					
ANR	748165	CFGEntryNode	ENTRY		748108		True				
ANR	748166	CFGExitNode	EXIT		748108		True				
ANR	748167	Symbol	node		748108						
ANR	748168	Symbol	nodeptr		748108						
ANR	748169	Symbol	* value		748108						
ANR	748170	Symbol	coreptr		748108						
ANR	748171	Symbol	true		748108						
ANR	748172	Symbol	false		748108						
ANR	748173	Symbol	* node		748108						
ANR	748174	Symbol	value		748108						
ANR	748175	Symbol	node -> value		748108						
ANR	748176	Function	cb_dbg_verbose	2731:0:74331:74628							
ANR	748177	FunctionDef	"cb_dbg_verbose (void * user , void * data)"		748176	0					
ANR	748178	CompoundStatement		2731:51:74382:74628	748176	0					
ANR	748179	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2732:1:74385:74412	748176	0	True				
ANR	748180	IdentifierDecl	* core = ( RCore * ) user		748176	0					
ANR	748181	IdentifierDeclType	RCore *		748176	0					
ANR	748182	Identifier	core		748176	1					
ANR	748183	AssignmentExpression	* core = ( RCore * ) user		748176	2		=			
ANR	748184	Identifier	core		748176	0					
ANR	748185	CastExpression	( RCore * ) user		748176	1					
ANR	748186	CastTarget	RCore *		748176	0					
ANR	748187	Identifier	user		748176	1					
ANR	748188	IdentifierDeclStatement	RConfigNode * node = ( RConfigNode * ) data ;	2733:1:74415:74454	748176	1	True				
ANR	748189	IdentifierDecl	* node = ( RConfigNode * ) data		748176	0					
ANR	748190	IdentifierDeclType	RConfigNode *		748176	0					
ANR	748191	Identifier	node		748176	1					
ANR	748192	AssignmentExpression	* node = ( RConfigNode * ) data		748176	2		=			
ANR	748193	Identifier	node		748176	0					
ANR	748194	CastExpression	( RConfigNode * ) data		748176	1					
ANR	748195	CastTarget	RConfigNode *		748176	0					
ANR	748196	Identifier	data		748176	1					
ANR	748197	IdentifierDeclStatement	const char * value = node -> value ;	2734:1:74457:74488	748176	2	True				
ANR	748198	IdentifierDecl	* value = node -> value		748176	0					
ANR	748199	IdentifierDeclType	const char *		748176	0					
ANR	748200	Identifier	value		748176	1					
ANR	748201	AssignmentExpression	* value = node -> value		748176	2		=			
ANR	748202	Identifier	value		748176	0					
ANR	748203	PtrMemberAccess	node -> value		748176	1					
ANR	748204	Identifier	node		748176	0					
ANR	748205	Identifier	value		748176	1					
ANR	748206	SwitchStatement	switch ( value [ 0 ] )		748176	3					
ANR	748207	Condition	value [ 0 ]	2735:9:74499:74506	748176	0	True				
ANR	748208	ArrayIndexing	value [ 0 ]		748176	0					
ANR	748209	Identifier	value		748176	0					
ANR	748210	PrimaryExpression	0		748176	1					
ANR	748211	CompoundStatement		5:19:126:126	748176	1					
ANR	748212	Label	case 't' :	2736:1:74512:74520	748176	0	True				
ANR	748213	Label	case 'T' :	2737:1:74523:74531	748176	1	True				
ANR	748214	ExpressionStatement	core -> dbg -> verbose = true	2738:2:74535:74560	748176	2	True				
ANR	748215	AssignmentExpression	core -> dbg -> verbose = true		748176	0		=			
ANR	748216	PtrMemberAccess	core -> dbg -> verbose		748176	0					
ANR	748217	PtrMemberAccess	core -> dbg		748176	0					
ANR	748218	Identifier	core		748176	0					
ANR	748219	Identifier	dbg		748176	1					
ANR	748220	Identifier	verbose		748176	1					
ANR	748221	Identifier	true		748176	1					
ANR	748222	BreakStatement	break ;	2739:2:74564:74569	748176	3	True				
ANR	748223	Label	default :	2740:1:74572:74579	748176	4	True				
ANR	748224	Identifier	default		748176	0					
ANR	748225	ExpressionStatement	core -> dbg -> verbose = false	2741:2:74583:74609	748176	5	True				
ANR	748226	AssignmentExpression	core -> dbg -> verbose = false		748176	0		=			
ANR	748227	PtrMemberAccess	core -> dbg -> verbose		748176	0					
ANR	748228	PtrMemberAccess	core -> dbg		748176	0					
ANR	748229	Identifier	core		748176	0					
ANR	748230	Identifier	dbg		748176	1					
ANR	748231	Identifier	verbose		748176	1					
ANR	748232	Identifier	false		748176	1					
ANR	748233	ReturnStatement	return true ;	2743:1:74615:74626	748176	4	True				
ANR	748234	Identifier	true		748176	0					
ANR	748235	ReturnType	static bool		748176	1					
ANR	748236	Identifier	cb_dbg_verbose		748176	2					
ANR	748237	ParameterList	"void * user , void * data"		748176	3					
ANR	748238	Parameter	void * user	2731:27:74358:74367	748176	0	True				
ANR	748239	ParameterType	void *		748176	0					
ANR	748240	Identifier	user		748176	1					
ANR	748241	Parameter	void * data	2731:39:74370:74379	748176	1	True				
ANR	748242	ParameterType	void *		748176	0					
ANR	748243	Identifier	data		748176	1					
ANR	748244	CFGEntryNode	ENTRY		748176		True				
ANR	748245	CFGExitNode	EXIT		748176		True				
ANR	748246	Symbol	data		748176						
ANR	748247	Symbol	* core		748176						
ANR	748248	Symbol	false		748176						
ANR	748249	Symbol	core -> dbg -> verbose		748176						
ANR	748250	Symbol	node -> value		748176						
ANR	748251	Symbol	core		748176						
ANR	748252	Symbol	node		748176						
ANR	748253	Symbol	* value		748176						
ANR	748254	Symbol	true		748176						
ANR	748255	Symbol	* node		748176						
ANR	748256	Symbol	user		748176						
ANR	748257	Symbol	value		748176						
ANR	748258	Symbol	* core -> dbg		748176						
ANR	748259	Symbol	* * core		748176						
ANR	748260	Symbol	core -> dbg		748176						
ANR	748261	Function	r_core_config_init	2746:0:74631:129824							
ANR	748262	FunctionDef	r_core_config_init (RCore * core)		748261	0					
ANR	748263	CompoundStatement		2746:42:74673:129824	748261	0					
ANR	748264	IdentifierDeclStatement	int i ;	2747:1:74676:74681	748261	0	True				
ANR	748265	IdentifierDecl	i		748261	0					
ANR	748266	IdentifierDeclType	int		748261	0					
ANR	748267	Identifier	i		748261	1					
ANR	748268	IdentifierDeclStatement	"char buf [ 128 ] , * p , * tmpdir ;"	2748:1:74684:74710	748261	1	True				
ANR	748269	IdentifierDecl	buf [ 128 ]		748261	0					
ANR	748270	IdentifierDeclType	char [ 128 ]		748261	0					
ANR	748271	Identifier	buf		748261	1					
ANR	748272	PrimaryExpression	128		748261	2					
ANR	748273	IdentifierDecl	* p		748261	1					
ANR	748274	IdentifierDeclType	char *		748261	0					
ANR	748275	Identifier	p		748261	1					
ANR	748276	IdentifierDecl	* tmpdir		748261	2					
ANR	748277	IdentifierDeclType	char *		748261	0					
ANR	748278	Identifier	tmpdir		748261	1					
ANR	748279	IdentifierDeclStatement	RConfigNode * n ;	2749:1:74713:74727	748261	2	True				
ANR	748280	IdentifierDecl	* n		748261	0					
ANR	748281	IdentifierDeclType	RConfigNode *		748261	0					
ANR	748282	Identifier	n		748261	1					
ANR	748283	IdentifierDeclStatement	RConfig * cfg = core -> config = r_config_new ( core ) ;	2750:1:74730:74779	748261	3	True				
ANR	748284	IdentifierDecl	* cfg = core -> config = r_config_new ( core )		748261	0					
ANR	748285	IdentifierDeclType	RConfig *		748261	0					
ANR	748286	Identifier	cfg		748261	1					
ANR	748287	AssignmentExpression	* cfg = core -> config = r_config_new ( core )		748261	2		=			
ANR	748288	Identifier	cfg		748261	0					
ANR	748289	AssignmentExpression	core -> config = r_config_new ( core )		748261	1		=			
ANR	748290	PtrMemberAccess	core -> config		748261	0					
ANR	748291	Identifier	core		748261	0					
ANR	748292	Identifier	config		748261	1					
ANR	748293	CallExpression	r_config_new ( core )		748261	1					
ANR	748294	Callee	r_config_new		748261	0					
ANR	748295	Identifier	r_config_new		748261	0					
ANR	748296	ArgumentList	core		748261	1					
ANR	748297	Argument	core		748261	0					
ANR	748298	Identifier	core		748261	0					
ANR	748299	IfStatement	if ( ! cfg )		748261	4					
ANR	748300	Condition	! cfg	2751:5:74786:74789	748261	0	True				
ANR	748301	UnaryOperationExpression	! cfg		748261	0					
ANR	748302	UnaryOperator	!		748261	0					
ANR	748303	Identifier	cfg		748261	1					
ANR	748304	CompoundStatement		6:11:118:118	748261	1					
ANR	748305	ReturnStatement	return 0 ;	2752:2:74796:74804	748261	0	True				
ANR	748306	PrimaryExpression	0		748261	0					
ANR	748307	ExpressionStatement	cfg -> cb_printf = r_cons_printf	2754:1:74810:74840	748261	5	True				
ANR	748308	AssignmentExpression	cfg -> cb_printf = r_cons_printf		748261	0		=			
ANR	748309	PtrMemberAccess	cfg -> cb_printf		748261	0					
ANR	748310	Identifier	cfg		748261	0					
ANR	748311	Identifier	cb_printf		748261	1					
ANR	748312	Identifier	r_cons_printf		748261	1					
ANR	748313	ExpressionStatement	cfg -> num = core -> num	2755:1:74843:74863	748261	6	True				
ANR	748314	AssignmentExpression	cfg -> num = core -> num		748261	0		=			
ANR	748315	PtrMemberAccess	cfg -> num		748261	0					
ANR	748316	Identifier	cfg		748261	0					
ANR	748317	Identifier	num		748261	1					
ANR	748318	PtrMemberAccess	core -> num		748261	1					
ANR	748319	Identifier	core		748261	0					
ANR	748320	Identifier	num		748261	1					
ANR	748321	CompoundStatement		15:2:310:348	748261	7					
ANR	748322	IdentifierDeclStatement	"char * pfx = r_sys_getenv ( ""R2_PREFIX"" ) ;"	2758:2:74927:74964	748261	0	True				
ANR	748323	IdentifierDecl	"* pfx = r_sys_getenv ( ""R2_PREFIX"" )"		748261	0					
ANR	748324	IdentifierDeclType	char *		748261	0					
ANR	748325	Identifier	pfx		748261	1					
ANR	748326	AssignmentExpression	"* pfx = r_sys_getenv ( ""R2_PREFIX"" )"		748261	2		=			
ANR	748327	Identifier	pfx		748261	0					
ANR	748328	CallExpression	"r_sys_getenv ( ""R2_PREFIX"" )"		748261	1					
ANR	748329	Callee	r_sys_getenv		748261	0					
ANR	748330	Identifier	r_sys_getenv		748261	0					
ANR	748331	ArgumentList	"""R2_PREFIX"""		748261	1					
ANR	748332	Argument	"""R2_PREFIX"""		748261	0					
ANR	748333	PrimaryExpression	"""R2_PREFIX"""		748261	0					
ANR	748334	IdentifierDeclStatement	char * invoke_dir = r_sys_prefix ( NULL ) ;	2760:2:74984:75022	748261	1	True				
ANR	748335	IdentifierDecl	* invoke_dir = r_sys_prefix ( NULL )		748261	0					
ANR	748336	IdentifierDeclType	char *		748261	0					
ANR	748337	Identifier	invoke_dir		748261	1					
ANR	748338	AssignmentExpression	* invoke_dir = r_sys_prefix ( NULL )		748261	2		=			
ANR	748339	Identifier	invoke_dir		748261	0					
ANR	748340	CallExpression	r_sys_prefix ( NULL )		748261	1					
ANR	748341	Callee	r_sys_prefix		748261	0					
ANR	748342	Identifier	r_sys_prefix		748261	0					
ANR	748343	ArgumentList	NULL		748261	1					
ANR	748344	Argument	NULL		748261	0					
ANR	748345	Identifier	NULL		748261	0					
ANR	748346	IfStatement	if ( ! pfx && invoke_dir )		748261	2					
ANR	748347	Condition	! pfx && invoke_dir	2761:6:75030:75047	748261	0	True				
ANR	748348	AndExpression	! pfx && invoke_dir		748261	0		&&			
ANR	748349	UnaryOperationExpression	! pfx		748261	0					
ANR	748350	UnaryOperator	!		748261	0					
ANR	748351	Identifier	pfx		748261	1					
ANR	748352	Identifier	invoke_dir		748261	1					
ANR	748353	CompoundStatement		16:26:376:376	748261	1					
ANR	748354	ExpressionStatement	pfx = strdup ( invoke_dir )	2762:3:75055:75080	748261	0	True				
ANR	748355	AssignmentExpression	pfx = strdup ( invoke_dir )		748261	0		=			
ANR	748356	Identifier	pfx		748261	0					
ANR	748357	CallExpression	strdup ( invoke_dir )		748261	1					
ANR	748358	Callee	strdup		748261	0					
ANR	748359	Identifier	strdup		748261	0					
ANR	748360	ArgumentList	invoke_dir		748261	1					
ANR	748361	Argument	invoke_dir		748261	0					
ANR	748362	Identifier	invoke_dir		748261	0					
ANR	748363	IfStatement	if ( ! pfx )		748261	3					
ANR	748364	Condition	! pfx	2765:6:75099:75102	748261	0	True				
ANR	748365	UnaryOperationExpression	! pfx		748261	0					
ANR	748366	UnaryOperator	!		748261	0					
ANR	748367	Identifier	pfx		748261	1					
ANR	748368	CompoundStatement		20:12:431:431	748261	1					
ANR	748369	ExpressionStatement	pfx = strdup ( R2_PREFIX )	2766:3:75110:75134	748261	0	True				
ANR	748370	AssignmentExpression	pfx = strdup ( R2_PREFIX )		748261	0		=			
ANR	748371	Identifier	pfx		748261	0					
ANR	748372	CallExpression	strdup ( R2_PREFIX )		748261	1					
ANR	748373	Callee	strdup		748261	0					
ANR	748374	Identifier	strdup		748261	0					
ANR	748375	ArgumentList	R2_PREFIX		748261	1					
ANR	748376	Argument	R2_PREFIX		748261	0					
ANR	748377	Identifier	R2_PREFIX		748261	0					
ANR	748378	ExpressionStatement	"SETCB ( ""dir.prefix"" , pfx , ( RConfigCallback ) & cb_dirpfx , ""Default prefix r2 was compiled for"" )"	2768:2:75142:75234	748261	4	True				
ANR	748379	CallExpression	"SETCB ( ""dir.prefix"" , pfx , ( RConfigCallback ) & cb_dirpfx , ""Default prefix r2 was compiled for"" )"		748261	0					
ANR	748380	Callee	SETCB		748261	0					
ANR	748381	Identifier	SETCB		748261	0					
ANR	748382	ArgumentList	"""dir.prefix"""		748261	1					
ANR	748383	Argument	"""dir.prefix"""		748261	0					
ANR	748384	PrimaryExpression	"""dir.prefix"""		748261	0					
ANR	748385	Argument	pfx		748261	1					
ANR	748386	Identifier	pfx		748261	0					
ANR	748387	Argument	( RConfigCallback ) & cb_dirpfx		748261	2					
ANR	748388	CastExpression	( RConfigCallback ) & cb_dirpfx		748261	0					
ANR	748389	CastTarget	RConfigCallback		748261	0					
ANR	748390	UnaryOperationExpression	& cb_dirpfx		748261	1					
ANR	748391	UnaryOperator	&		748261	0					
ANR	748392	Identifier	cb_dirpfx		748261	1					
ANR	748393	Argument	"""Default prefix r2 was compiled for"""		748261	3					
ANR	748394	PrimaryExpression	"""Default prefix r2 was compiled for"""		748261	0					
ANR	748395	ExpressionStatement	free ( pfx )	2769:2:75238:75248	748261	5	True				
ANR	748396	CallExpression	free ( pfx )		748261	0					
ANR	748397	Callee	free		748261	0					
ANR	748398	Identifier	free		748261	0					
ANR	748399	ArgumentList	pfx		748261	1					
ANR	748400	Argument	pfx		748261	0					
ANR	748401	Identifier	pfx		748261	0					
ANR	748402	CompoundStatement		28:2:690:725	748261	8					
ANR	748403	IdentifierDeclStatement	char * h = r_sys_getenv ( R_SYS_HOME ) ;	2773:2:75364:75399	748261	0	True				
ANR	748404	IdentifierDecl	* h = r_sys_getenv ( R_SYS_HOME )		748261	0					
ANR	748405	IdentifierDeclType	char *		748261	0					
ANR	748406	Identifier	h		748261	1					
ANR	748407	AssignmentExpression	* h = r_sys_getenv ( R_SYS_HOME )		748261	2		=			
ANR	748408	Identifier	h		748261	0					
ANR	748409	CallExpression	r_sys_getenv ( R_SYS_HOME )		748261	1					
ANR	748410	Callee	r_sys_getenv		748261	0					
ANR	748411	Identifier	r_sys_getenv		748261	0					
ANR	748412	ArgumentList	R_SYS_HOME		748261	1					
ANR	748413	Argument	R_SYS_HOME		748261	0					
ANR	748414	Identifier	R_SYS_HOME		748261	0					
ANR	748415	IfStatement	if ( h )		748261	1					
ANR	748416	Condition	h	2774:6:75407:75407	748261	0	True				
ANR	748417	Identifier	h		748261	0					
ANR	748418	CompoundStatement		29:9:736:736	748261	1					
ANR	748419	IfStatement	"if ( ! strcmp ( h , ""/"" ) )"		748261	0					
ANR	748420	Condition	"! strcmp ( h , ""/"" )"	2775:7:75419:75434	748261	0	True				
ANR	748421	UnaryOperationExpression	"! strcmp ( h , ""/"" )"		748261	0					
ANR	748422	UnaryOperator	!		748261	0					
ANR	748423	CallExpression	"strcmp ( h , ""/"" )"		748261	1					
ANR	748424	Callee	strcmp		748261	0					
ANR	748425	Identifier	strcmp		748261	0					
ANR	748426	ArgumentList	h		748261	1					
ANR	748427	Argument	h		748261	0					
ANR	748428	Identifier	h		748261	0					
ANR	748429	Argument	"""/"""		748261	1					
ANR	748430	PrimaryExpression	"""/"""		748261	0					
ANR	748431	CompoundStatement		30:25:763:763	748261	1					
ANR	748432	ExpressionStatement	"r_sys_setenv ( R_SYS_HOME , ""/data/local/tmp"" )"	2776:4:75443:75487	748261	0	True				
ANR	748433	CallExpression	"r_sys_setenv ( R_SYS_HOME , ""/data/local/tmp"" )"		748261	0					
ANR	748434	Callee	r_sys_setenv		748261	0					
ANR	748435	Identifier	r_sys_setenv		748261	0					
ANR	748436	ArgumentList	R_SYS_HOME		748261	1					
ANR	748437	Argument	R_SYS_HOME		748261	0					
ANR	748438	Identifier	R_SYS_HOME		748261	0					
ANR	748439	Argument	"""/data/local/tmp"""		748261	1					
ANR	748440	PrimaryExpression	"""/data/local/tmp"""		748261	0					
ANR	748441	ExpressionStatement	free ( h )	2778:3:75497:75505	748261	1	True				
ANR	748442	CallExpression	free ( h )		748261	0					
ANR	748443	Callee	free		748261	0					
ANR	748444	Identifier	free		748261	0					
ANR	748445	ArgumentList	h		748261	1					
ANR	748446	Argument	h		748261	0					
ANR	748447	Identifier	h		748261	0					
ANR	748448	ExpressionStatement	"SETCB ( ""cmd.times"" , """" , & cb_cmdtimes , ""Run when a command is repeated (number prefix)"" )"	2782:8:75529:75616	748261	9	True				
ANR	748449	CallExpression	"SETCB ( ""cmd.times"" , """" , & cb_cmdtimes , ""Run when a command is repeated (number prefix)"" )"		748261	0					
ANR	748450	Callee	SETCB		748261	0					
ANR	748451	Identifier	SETCB		748261	0					
ANR	748452	ArgumentList	"""cmd.times"""		748261	1					
ANR	748453	Argument	"""cmd.times"""		748261	0					
ANR	748454	PrimaryExpression	"""cmd.times"""		748261	0					
ANR	748455	Argument	""""""		748261	1					
ANR	748456	PrimaryExpression	""""""		748261	0					
ANR	748457	Argument	& cb_cmdtimes		748261	2					
ANR	748458	UnaryOperationExpression	& cb_cmdtimes		748261	0					
ANR	748459	UnaryOperator	&		748261	0					
ANR	748460	Identifier	cb_cmdtimes		748261	1					
ANR	748461	Argument	"""Run when a command is repeated (number prefix)"""		748261	3					
ANR	748462	PrimaryExpression	"""Run when a command is repeated (number prefix)"""		748261	0					
ANR	748463	ExpressionStatement	"SETPREF ( ""pdb.useragent"" , ""Microsoft-Symbol-Server/6.11.0001.402"" , ""User agent for Microsoft symbol server"" )"	2784:1:75630:75738	748261	10	True				
ANR	748464	CallExpression	"SETPREF ( ""pdb.useragent"" , ""Microsoft-Symbol-Server/6.11.0001.402"" , ""User agent for Microsoft symbol server"" )"		748261	0					
ANR	748465	Callee	SETPREF		748261	0					
ANR	748466	Identifier	SETPREF		748261	0					
ANR	748467	ArgumentList	"""pdb.useragent"""		748261	1					
ANR	748468	Argument	"""pdb.useragent"""		748261	0					
ANR	748469	PrimaryExpression	"""pdb.useragent"""		748261	0					
ANR	748470	Argument	"""Microsoft-Symbol-Server/6.11.0001.402"""		748261	1					
ANR	748471	PrimaryExpression	"""Microsoft-Symbol-Server/6.11.0001.402"""		748261	0					
ANR	748472	Argument	"""User agent for Microsoft symbol server"""		748261	2					
ANR	748473	PrimaryExpression	"""User agent for Microsoft symbol server"""		748261	0					
ANR	748474	ExpressionStatement	"SETPREF ( ""pdb.server"" , ""https://msdl.microsoft.com/download/symbols"" , ""Base URL for Microsoft symbol server"" )"	2785:1:75741:75850	748261	11	True				
ANR	748475	CallExpression	"SETPREF ( ""pdb.server"" , ""https://msdl.microsoft.com/download/symbols"" , ""Base URL for Microsoft symbol server"" )"		748261	0					
ANR	748476	Callee	SETPREF		748261	0					
ANR	748477	Identifier	SETPREF		748261	0					
ANR	748478	ArgumentList	"""pdb.server"""		748261	1					
ANR	748479	Argument	"""pdb.server"""		748261	0					
ANR	748480	PrimaryExpression	"""pdb.server"""		748261	0					
ANR	748481	Argument	"""https://msdl.microsoft.com/download/symbols"""		748261	1					
ANR	748482	PrimaryExpression	"""https://msdl.microsoft.com/download/symbols"""		748261	0					
ANR	748483	Argument	"""Base URL for Microsoft symbol server"""		748261	2					
ANR	748484	PrimaryExpression	"""Base URL for Microsoft symbol server"""		748261	0					
ANR	748485	CompoundStatement		42:2:1183:1223	748261	12					
ANR	748486	IdentifierDeclStatement	char * pdb_path = r_str_home ( R2_HOME_PDB ) ;	2787:2:75857:75897	748261	0	True				
ANR	748487	IdentifierDecl	* pdb_path = r_str_home ( R2_HOME_PDB )		748261	0					
ANR	748488	IdentifierDeclType	char *		748261	0					
ANR	748489	Identifier	pdb_path		748261	1					
ANR	748490	AssignmentExpression	* pdb_path = r_str_home ( R2_HOME_PDB )		748261	2		=			
ANR	748491	Identifier	pdb_path		748261	0					
ANR	748492	CallExpression	r_str_home ( R2_HOME_PDB )		748261	1					
ANR	748493	Callee	r_str_home		748261	0					
ANR	748494	Identifier	r_str_home		748261	0					
ANR	748495	ArgumentList	R2_HOME_PDB		748261	1					
ANR	748496	Argument	R2_HOME_PDB		748261	0					
ANR	748497	Identifier	R2_HOME_PDB		748261	0					
ANR	748498	ExpressionStatement	"SETPREF ( ""pdb.symstore"" , pdb_path , ""Path to downstream symbol store"" )"	2788:2:75901:75970	748261	1	True				
ANR	748499	CallExpression	"SETPREF ( ""pdb.symstore"" , pdb_path , ""Path to downstream symbol store"" )"		748261	0					
ANR	748500	Callee	SETPREF		748261	0					
ANR	748501	Identifier	SETPREF		748261	0					
ANR	748502	ArgumentList	"""pdb.symstore"""		748261	1					
ANR	748503	Argument	"""pdb.symstore"""		748261	0					
ANR	748504	PrimaryExpression	"""pdb.symstore"""		748261	0					
ANR	748505	Argument	pdb_path		748261	1					
ANR	748506	Identifier	pdb_path		748261	0					
ANR	748507	Argument	"""Path to downstream symbol store"""		748261	2					
ANR	748508	PrimaryExpression	"""Path to downstream symbol store"""		748261	0					
ANR	748509	ExpressionStatement	R_FREE ( pdb_path )	2789:2:75974:75990	748261	2	True				
ANR	748510	CallExpression	R_FREE ( pdb_path )		748261	0					
ANR	748511	Callee	R_FREE		748261	0					
ANR	748512	Identifier	R_FREE		748261	0					
ANR	748513	ArgumentList	pdb_path		748261	1					
ANR	748514	Argument	pdb_path		748261	0					
ANR	748515	Identifier	pdb_path		748261	0					
ANR	748516	ExpressionStatement	"SETI ( ""pdb.extract"" , 1 , ""Avoid extract of the pdb file, just download"" )"	2791:1:75996:76067	748261	13	True				
ANR	748517	CallExpression	"SETI ( ""pdb.extract"" , 1 , ""Avoid extract of the pdb file, just download"" )"		748261	0					
ANR	748518	Callee	SETI		748261	0					
ANR	748519	Identifier	SETI		748261	0					
ANR	748520	ArgumentList	"""pdb.extract"""		748261	1					
ANR	748521	Argument	"""pdb.extract"""		748261	0					
ANR	748522	PrimaryExpression	"""pdb.extract"""		748261	0					
ANR	748523	Argument	1		748261	1					
ANR	748524	PrimaryExpression	1		748261	0					
ANR	748525	Argument	"""Avoid extract of the pdb file, just download"""		748261	2					
ANR	748526	PrimaryExpression	"""Avoid extract of the pdb file, just download"""		748261	0					
ANR	748527	ExpressionStatement	"SETI ( ""pdb.autoload"" , false , ""Automatically load the required pdb files for loaded DLLs"" )"	2792:1:76070:76159	748261	14	True				
ANR	748528	CallExpression	"SETI ( ""pdb.autoload"" , false , ""Automatically load the required pdb files for loaded DLLs"" )"		748261	0					
ANR	748529	Callee	SETI		748261	0					
ANR	748530	Identifier	SETI		748261	0					
ANR	748531	ArgumentList	"""pdb.autoload"""		748261	1					
ANR	748532	Argument	"""pdb.autoload"""		748261	0					
ANR	748533	PrimaryExpression	"""pdb.autoload"""		748261	0					
ANR	748534	Argument	false		748261	1					
ANR	748535	Identifier	false		748261	0					
ANR	748536	Argument	"""Automatically load the required pdb files for loaded DLLs"""		748261	2					
ANR	748537	PrimaryExpression	"""Automatically load the required pdb files for loaded DLLs"""		748261	0					
ANR	748538	ExpressionStatement	"SETPREF ( ""anal.fcnprefix"" , ""fcn"" , ""Prefix new function names with this"" )"	2795:1:76175:76248	748261	15	True				
ANR	748539	CallExpression	"SETPREF ( ""anal.fcnprefix"" , ""fcn"" , ""Prefix new function names with this"" )"		748261	0					
ANR	748540	Callee	SETPREF		748261	0					
ANR	748541	Identifier	SETPREF		748261	0					
ANR	748542	ArgumentList	"""anal.fcnprefix"""		748261	1					
ANR	748543	Argument	"""anal.fcnprefix"""		748261	0					
ANR	748544	PrimaryExpression	"""anal.fcnprefix"""		748261	0					
ANR	748545	Argument	"""fcn"""		748261	1					
ANR	748546	PrimaryExpression	"""fcn"""		748261	0					
ANR	748547	Argument	"""Prefix new function names with this"""		748261	2					
ANR	748548	PrimaryExpression	"""Prefix new function names with this"""		748261	0					
ANR	748549	ExpressionStatement	"SETCB ( ""anal.ex"" , ""true"" , & cb_analex , ""Use the anal extension methods from the selected plugin if available"" )"	2796:1:76251:76360	748261	16	True				
ANR	748550	CallExpression	"SETCB ( ""anal.ex"" , ""true"" , & cb_analex , ""Use the anal extension methods from the selected plugin if available"" )"		748261	0					
ANR	748551	Callee	SETCB		748261	0					
ANR	748552	Identifier	SETCB		748261	0					
ANR	748553	ArgumentList	"""anal.ex"""		748261	1					
ANR	748554	Argument	"""anal.ex"""		748261	0					
ANR	748555	PrimaryExpression	"""anal.ex"""		748261	0					
ANR	748556	Argument	"""true"""		748261	1					
ANR	748557	PrimaryExpression	"""true"""		748261	0					
ANR	748558	Argument	& cb_analex		748261	2					
ANR	748559	UnaryOperationExpression	& cb_analex		748261	0					
ANR	748560	UnaryOperator	&		748261	0					
ANR	748561	Identifier	cb_analex		748261	1					
ANR	748562	Argument	"""Use the anal extension methods from the selected plugin if available"""		748261	3					
ANR	748563	PrimaryExpression	"""Use the anal extension methods from the selected plugin if available"""		748261	0					
ANR	748564	ExpressionStatement	"SETCB ( ""anal.verbose"" , ""false"" , & cb_analverbose , ""Show RAnal warnings when analyzing code"" )"	2797:1:76363:76454	748261	17	True				
ANR	748565	CallExpression	"SETCB ( ""anal.verbose"" , ""false"" , & cb_analverbose , ""Show RAnal warnings when analyzing code"" )"		748261	0					
ANR	748566	Callee	SETCB		748261	0					
ANR	748567	Identifier	SETCB		748261	0					
ANR	748568	ArgumentList	"""anal.verbose"""		748261	1					
ANR	748569	Argument	"""anal.verbose"""		748261	0					
ANR	748570	PrimaryExpression	"""anal.verbose"""		748261	0					
ANR	748571	Argument	"""false"""		748261	1					
ANR	748572	PrimaryExpression	"""false"""		748261	0					
ANR	748573	Argument	& cb_analverbose		748261	2					
ANR	748574	UnaryOperationExpression	& cb_analverbose		748261	0					
ANR	748575	UnaryOperator	&		748261	0					
ANR	748576	Identifier	cb_analverbose		748261	1					
ANR	748577	Argument	"""Show RAnal warnings when analyzing code"""		748261	3					
ANR	748578	PrimaryExpression	"""Show RAnal warnings when analyzing code"""		748261	0					
ANR	748579	ExpressionStatement	"SETPREF ( ""anal.a2f"" , ""false"" , ""Use the new WIP analysis algorithm (core/p/a2f), anal.depth ignored atm"" )"	2798:1:76457:76562	748261	18	True				
ANR	748580	CallExpression	"SETPREF ( ""anal.a2f"" , ""false"" , ""Use the new WIP analysis algorithm (core/p/a2f), anal.depth ignored atm"" )"		748261	0					
ANR	748581	Callee	SETPREF		748261	0					
ANR	748582	Identifier	SETPREF		748261	0					
ANR	748583	ArgumentList	"""anal.a2f"""		748261	1					
ANR	748584	Argument	"""anal.a2f"""		748261	0					
ANR	748585	PrimaryExpression	"""anal.a2f"""		748261	0					
ANR	748586	Argument	"""false"""		748261	1					
ANR	748587	PrimaryExpression	"""false"""		748261	0					
ANR	748588	Argument	"""Use the new WIP analysis algorithm (core/p/a2f), anal.depth ignored atm"""		748261	2					
ANR	748589	PrimaryExpression	"""Use the new WIP analysis algorithm (core/p/a2f), anal.depth ignored atm"""		748261	0					
ANR	748590	ExpressionStatement	"SETCB ( ""anal.roregs"" , ""gp,zero"" , ( RConfigCallback ) & cb_anal_roregs , ""Comma separated list of register names to be readonly"" )"	2799:1:76565:76688	748261	19	True				
ANR	748591	CallExpression	"SETCB ( ""anal.roregs"" , ""gp,zero"" , ( RConfigCallback ) & cb_anal_roregs , ""Comma separated list of register names to be readonly"" )"		748261	0					
ANR	748592	Callee	SETCB		748261	0					
ANR	748593	Identifier	SETCB		748261	0					
ANR	748594	ArgumentList	"""anal.roregs"""		748261	1					
ANR	748595	Argument	"""anal.roregs"""		748261	0					
ANR	748596	PrimaryExpression	"""anal.roregs"""		748261	0					
ANR	748597	Argument	"""gp,zero"""		748261	1					
ANR	748598	PrimaryExpression	"""gp,zero"""		748261	0					
ANR	748599	Argument	( RConfigCallback ) & cb_anal_roregs		748261	2					
ANR	748600	CastExpression	( RConfigCallback ) & cb_anal_roregs		748261	0					
ANR	748601	CastTarget	RConfigCallback		748261	0					
ANR	748602	UnaryOperationExpression	& cb_anal_roregs		748261	1					
ANR	748603	UnaryOperator	&		748261	0					
ANR	748604	Identifier	cb_anal_roregs		748261	1					
ANR	748605	Argument	"""Comma separated list of register names to be readonly"""		748261	3					
ANR	748606	PrimaryExpression	"""Comma separated list of register names to be readonly"""		748261	0					
ANR	748607	ExpressionStatement	"SETICB ( ""anal.gp"" , 0 , ( RConfigCallback ) & cb_anal_gp , ""Set the value of the GP register (MIPS)"" )"	2800:1:76691:76785	748261	20	True				
ANR	748608	CallExpression	"SETICB ( ""anal.gp"" , 0 , ( RConfigCallback ) & cb_anal_gp , ""Set the value of the GP register (MIPS)"" )"		748261	0					
ANR	748609	Callee	SETICB		748261	0					
ANR	748610	Identifier	SETICB		748261	0					
ANR	748611	ArgumentList	"""anal.gp"""		748261	1					
ANR	748612	Argument	"""anal.gp"""		748261	0					
ANR	748613	PrimaryExpression	"""anal.gp"""		748261	0					
ANR	748614	Argument	0		748261	1					
ANR	748615	PrimaryExpression	0		748261	0					
ANR	748616	Argument	( RConfigCallback ) & cb_anal_gp		748261	2					
ANR	748617	CastExpression	( RConfigCallback ) & cb_anal_gp		748261	0					
ANR	748618	CastTarget	RConfigCallback		748261	0					
ANR	748619	UnaryOperationExpression	& cb_anal_gp		748261	1					
ANR	748620	UnaryOperator	&		748261	0					
ANR	748621	Identifier	cb_anal_gp		748261	1					
ANR	748622	Argument	"""Set the value of the GP register (MIPS)"""		748261	3					
ANR	748623	PrimaryExpression	"""Set the value of the GP register (MIPS)"""		748261	0					
ANR	748624	ExpressionStatement	"SETPREF ( ""anal.gpfixed"" , ""true"" , ""Set gp register to anal.gp before emulating each instruction in aae"" )"	2801:1:76788:76891	748261	21	True				
ANR	748625	CallExpression	"SETPREF ( ""anal.gpfixed"" , ""true"" , ""Set gp register to anal.gp before emulating each instruction in aae"" )"		748261	0					
ANR	748626	Callee	SETPREF		748261	0					
ANR	748627	Identifier	SETPREF		748261	0					
ANR	748628	ArgumentList	"""anal.gpfixed"""		748261	1					
ANR	748629	Argument	"""anal.gpfixed"""		748261	0					
ANR	748630	PrimaryExpression	"""anal.gpfixed"""		748261	0					
ANR	748631	Argument	"""true"""		748261	1					
ANR	748632	PrimaryExpression	"""true"""		748261	0					
ANR	748633	Argument	"""Set gp register to anal.gp before emulating each instruction in aae"""		748261	2					
ANR	748634	PrimaryExpression	"""Set gp register to anal.gp before emulating each instruction in aae"""		748261	0					
ANR	748635	ExpressionStatement	"SETCB ( ""anal.limits"" , ""false"" , ( RConfigCallback ) & cb_anal_limits , ""Restrict analysis to address range [anal.from:anal.to]"" )"	2802:1:76894:77016	748261	22	True				
ANR	748636	CallExpression	"SETCB ( ""anal.limits"" , ""false"" , ( RConfigCallback ) & cb_anal_limits , ""Restrict analysis to address range [anal.from:anal.to]"" )"		748261	0					
ANR	748637	Callee	SETCB		748261	0					
ANR	748638	Identifier	SETCB		748261	0					
ANR	748639	ArgumentList	"""anal.limits"""		748261	1					
ANR	748640	Argument	"""anal.limits"""		748261	0					
ANR	748641	PrimaryExpression	"""anal.limits"""		748261	0					
ANR	748642	Argument	"""false"""		748261	1					
ANR	748643	PrimaryExpression	"""false"""		748261	0					
ANR	748644	Argument	( RConfigCallback ) & cb_anal_limits		748261	2					
ANR	748645	CastExpression	( RConfigCallback ) & cb_anal_limits		748261	0					
ANR	748646	CastTarget	RConfigCallback		748261	0					
ANR	748647	UnaryOperationExpression	& cb_anal_limits		748261	1					
ANR	748648	UnaryOperator	&		748261	0					
ANR	748649	Identifier	cb_anal_limits		748261	1					
ANR	748650	Argument	"""Restrict analysis to address range [anal.from:anal.to]"""		748261	3					
ANR	748651	PrimaryExpression	"""Restrict analysis to address range [anal.from:anal.to]"""		748261	0					
ANR	748652	ExpressionStatement	"SETCB ( ""anal.rnr"" , ""false"" , ( RConfigCallback ) & cb_anal_rnr , ""Recursive no return checks (EXPERIMENTAL)"" )"	2803:1:77019:77122	748261	23	True				
ANR	748653	CallExpression	"SETCB ( ""anal.rnr"" , ""false"" , ( RConfigCallback ) & cb_anal_rnr , ""Recursive no return checks (EXPERIMENTAL)"" )"		748261	0					
ANR	748654	Callee	SETCB		748261	0					
ANR	748655	Identifier	SETCB		748261	0					
ANR	748656	ArgumentList	"""anal.rnr"""		748261	1					
ANR	748657	Argument	"""anal.rnr"""		748261	0					
ANR	748658	PrimaryExpression	"""anal.rnr"""		748261	0					
ANR	748659	Argument	"""false"""		748261	1					
ANR	748660	PrimaryExpression	"""false"""		748261	0					
ANR	748661	Argument	( RConfigCallback ) & cb_anal_rnr		748261	2					
ANR	748662	CastExpression	( RConfigCallback ) & cb_anal_rnr		748261	0					
ANR	748663	CastTarget	RConfigCallback		748261	0					
ANR	748664	UnaryOperationExpression	& cb_anal_rnr		748261	1					
ANR	748665	UnaryOperator	&		748261	0					
ANR	748666	Identifier	cb_anal_rnr		748261	1					
ANR	748667	Argument	"""Recursive no return checks (EXPERIMENTAL)"""		748261	3					
ANR	748668	PrimaryExpression	"""Recursive no return checks (EXPERIMENTAL)"""		748261	0					
ANR	748669	ExpressionStatement	"SETCB ( ""anal.limits"" , ""false"" , ( RConfigCallback ) & cb_anal_limits , ""Restrict analysis to address range [anal.from:anal.to]"" )"	2804:1:77125:77247	748261	24	True				
ANR	748670	CallExpression	"SETCB ( ""anal.limits"" , ""false"" , ( RConfigCallback ) & cb_anal_limits , ""Restrict analysis to address range [anal.from:anal.to]"" )"		748261	0					
ANR	748671	Callee	SETCB		748261	0					
ANR	748672	Identifier	SETCB		748261	0					
ANR	748673	ArgumentList	"""anal.limits"""		748261	1					
ANR	748674	Argument	"""anal.limits"""		748261	0					
ANR	748675	PrimaryExpression	"""anal.limits"""		748261	0					
ANR	748676	Argument	"""false"""		748261	1					
ANR	748677	PrimaryExpression	"""false"""		748261	0					
ANR	748678	Argument	( RConfigCallback ) & cb_anal_limits		748261	2					
ANR	748679	CastExpression	( RConfigCallback ) & cb_anal_limits		748261	0					
ANR	748680	CastTarget	RConfigCallback		748261	0					
ANR	748681	UnaryOperationExpression	& cb_anal_limits		748261	1					
ANR	748682	UnaryOperator	&		748261	0					
ANR	748683	Identifier	cb_anal_limits		748261	1					
ANR	748684	Argument	"""Restrict analysis to address range [anal.from:anal.to]"""		748261	3					
ANR	748685	PrimaryExpression	"""Restrict analysis to address range [anal.from:anal.to]"""		748261	0					
ANR	748686	ExpressionStatement	"SETICB ( ""anal.from"" , - 1 , ( RConfigCallback ) & cb_anal_from , ""Lower limit on the address range for analysis"" )"	2805:1:77250:77355	748261	25	True				
ANR	748687	CallExpression	"SETICB ( ""anal.from"" , - 1 , ( RConfigCallback ) & cb_anal_from , ""Lower limit on the address range for analysis"" )"		748261	0					
ANR	748688	Callee	SETICB		748261	0					
ANR	748689	Identifier	SETICB		748261	0					
ANR	748690	ArgumentList	"""anal.from"""		748261	1					
ANR	748691	Argument	"""anal.from"""		748261	0					
ANR	748692	PrimaryExpression	"""anal.from"""		748261	0					
ANR	748693	Argument	- 1		748261	1					
ANR	748694	UnaryOperationExpression	- 1		748261	0					
ANR	748695	UnaryOperator	-		748261	0					
ANR	748696	PrimaryExpression	1		748261	1					
ANR	748697	Argument	( RConfigCallback ) & cb_anal_from		748261	2					
ANR	748698	CastExpression	( RConfigCallback ) & cb_anal_from		748261	0					
ANR	748699	CastTarget	RConfigCallback		748261	0					
ANR	748700	UnaryOperationExpression	& cb_anal_from		748261	1					
ANR	748701	UnaryOperator	&		748261	0					
ANR	748702	Identifier	cb_anal_from		748261	1					
ANR	748703	Argument	"""Lower limit on the address range for analysis"""		748261	3					
ANR	748704	PrimaryExpression	"""Lower limit on the address range for analysis"""		748261	0					
ANR	748705	ExpressionStatement	"SETICB ( ""anal.to"" , - 1 , ( RConfigCallback ) & cb_anal_from , ""Upper limit on the address range for analysis"" )"	2806:1:77358:77461	748261	26	True				
ANR	748706	CallExpression	"SETICB ( ""anal.to"" , - 1 , ( RConfigCallback ) & cb_anal_from , ""Upper limit on the address range for analysis"" )"		748261	0					
ANR	748707	Callee	SETICB		748261	0					
ANR	748708	Identifier	SETICB		748261	0					
ANR	748709	ArgumentList	"""anal.to"""		748261	1					
ANR	748710	Argument	"""anal.to"""		748261	0					
ANR	748711	PrimaryExpression	"""anal.to"""		748261	0					
ANR	748712	Argument	- 1		748261	1					
ANR	748713	UnaryOperationExpression	- 1		748261	0					
ANR	748714	UnaryOperator	-		748261	0					
ANR	748715	PrimaryExpression	1		748261	1					
ANR	748716	Argument	( RConfigCallback ) & cb_anal_from		748261	2					
ANR	748717	CastExpression	( RConfigCallback ) & cb_anal_from		748261	0					
ANR	748718	CastTarget	RConfigCallback		748261	0					
ANR	748719	UnaryOperationExpression	& cb_anal_from		748261	1					
ANR	748720	UnaryOperator	&		748261	0					
ANR	748721	Identifier	cb_anal_from		748261	1					
ANR	748722	Argument	"""Upper limit on the address range for analysis"""		748261	3					
ANR	748723	PrimaryExpression	"""Upper limit on the address range for analysis"""		748261	0					
ANR	748724	ExpressionStatement	"n = NODECB ( ""anal.in"" , ""io.maps.x"" , & cb_searchin )"	2807:1:77464:77513	748261	27	True				
ANR	748725	AssignmentExpression	"n = NODECB ( ""anal.in"" , ""io.maps.x"" , & cb_searchin )"		748261	0		=			
ANR	748726	Identifier	n		748261	0					
ANR	748727	CallExpression	"NODECB ( ""anal.in"" , ""io.maps.x"" , & cb_searchin )"		748261	1					
ANR	748728	Callee	NODECB		748261	0					
ANR	748729	Identifier	NODECB		748261	0					
ANR	748730	ArgumentList	"""anal.in"""		748261	1					
ANR	748731	Argument	"""anal.in"""		748261	0					
ANR	748732	PrimaryExpression	"""anal.in"""		748261	0					
ANR	748733	Argument	"""io.maps.x"""		748261	1					
ANR	748734	PrimaryExpression	"""io.maps.x"""		748261	0					
ANR	748735	Argument	& cb_searchin		748261	2					
ANR	748736	UnaryOperationExpression	& cb_searchin		748261	0					
ANR	748737	UnaryOperator	&		748261	0					
ANR	748738	Identifier	cb_searchin		748261	1					
ANR	748739	ExpressionStatement	"SETDESC ( n , ""Specify search boundaries for analysis"" )"	2808:1:77516:77569	748261	28	True				
ANR	748740	CallExpression	"SETDESC ( n , ""Specify search boundaries for analysis"" )"		748261	0					
ANR	748741	Callee	SETDESC		748261	0					
ANR	748742	Identifier	SETDESC		748261	0					
ANR	748743	ArgumentList	n		748261	1					
ANR	748744	Argument	n		748261	0					
ANR	748745	Identifier	n		748261	0					
ANR	748746	Argument	"""Specify search boundaries for analysis"""		748261	1					
ANR	748747	PrimaryExpression	"""Specify search boundaries for analysis"""		748261	0					
ANR	748748	ExpressionStatement	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.segment"" , ""bin.segments"" , ""bin.segments.x"" , ""bin.segments.r"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"	2809:1:77572:78094	748261	29	True				
ANR	748749	CallExpression	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.segment"" , ""bin.segments"" , ""bin.segments.x"" , ""bin.segments.r"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"		748261	0					
ANR	748750	Callee	SETOPTIONS		748261	0					
ANR	748751	Identifier	SETOPTIONS		748261	0					
ANR	748752	ArgumentList	n		748261	1					
ANR	748753	Argument	n		748261	0					
ANR	748754	Identifier	n		748261	0					
ANR	748755	Argument	"""raw"""		748261	1					
ANR	748756	PrimaryExpression	"""raw"""		748261	0					
ANR	748757	Argument	"""block"""		748261	2					
ANR	748758	PrimaryExpression	"""block"""		748261	0					
ANR	748759	Argument	"""bin.segment"""		748261	3					
ANR	748760	PrimaryExpression	"""bin.segment"""		748261	0					
ANR	748761	Argument	"""bin.segments"""		748261	4					
ANR	748762	PrimaryExpression	"""bin.segments"""		748261	0					
ANR	748763	Argument	"""bin.segments.x"""		748261	5					
ANR	748764	PrimaryExpression	"""bin.segments.x"""		748261	0					
ANR	748765	Argument	"""bin.segments.r"""		748261	6					
ANR	748766	PrimaryExpression	"""bin.segments.r"""		748261	0					
ANR	748767	Argument	"""bin.section"""		748261	7					
ANR	748768	PrimaryExpression	"""bin.section"""		748261	0					
ANR	748769	Argument	"""bin.sections"""		748261	8					
ANR	748770	PrimaryExpression	"""bin.sections"""		748261	0					
ANR	748771	Argument	"""bin.sections.rwx"""		748261	9					
ANR	748772	PrimaryExpression	"""bin.sections.rwx"""		748261	0					
ANR	748773	Argument	"""bin.sections.r"""		748261	10					
ANR	748774	PrimaryExpression	"""bin.sections.r"""		748261	0					
ANR	748775	Argument	"""bin.sections.rw"""		748261	11					
ANR	748776	PrimaryExpression	"""bin.sections.rw"""		748261	0					
ANR	748777	Argument	"""bin.sections.rx"""		748261	12					
ANR	748778	PrimaryExpression	"""bin.sections.rx"""		748261	0					
ANR	748779	Argument	"""bin.sections.wx"""		748261	13					
ANR	748780	PrimaryExpression	"""bin.sections.wx"""		748261	0					
ANR	748781	Argument	"""bin.sections.x"""		748261	14					
ANR	748782	PrimaryExpression	"""bin.sections.x"""		748261	0					
ANR	748783	Argument	"""io.map"""		748261	15					
ANR	748784	PrimaryExpression	"""io.map"""		748261	0					
ANR	748785	Argument	"""io.maps"""		748261	16					
ANR	748786	PrimaryExpression	"""io.maps"""		748261	0					
ANR	748787	Argument	"""io.maps.rwx"""		748261	17					
ANR	748788	PrimaryExpression	"""io.maps.rwx"""		748261	0					
ANR	748789	Argument	"""io.maps.r"""		748261	18					
ANR	748790	PrimaryExpression	"""io.maps.r"""		748261	0					
ANR	748791	Argument	"""io.maps.rw"""		748261	19					
ANR	748792	PrimaryExpression	"""io.maps.rw"""		748261	0					
ANR	748793	Argument	"""io.maps.rx"""		748261	20					
ANR	748794	PrimaryExpression	"""io.maps.rx"""		748261	0					
ANR	748795	Argument	"""io.maps.wx"""		748261	21					
ANR	748796	PrimaryExpression	"""io.maps.wx"""		748261	0					
ANR	748797	Argument	"""io.maps.x"""		748261	22					
ANR	748798	PrimaryExpression	"""io.maps.x"""		748261	0					
ANR	748799	Argument	"""dbg.stack"""		748261	23					
ANR	748800	PrimaryExpression	"""dbg.stack"""		748261	0					
ANR	748801	Argument	"""dbg.heap"""		748261	24					
ANR	748802	PrimaryExpression	"""dbg.heap"""		748261	0					
ANR	748803	Argument	"""dbg.map"""		748261	25					
ANR	748804	PrimaryExpression	"""dbg.map"""		748261	0					
ANR	748805	Argument	"""dbg.maps"""		748261	26					
ANR	748806	PrimaryExpression	"""dbg.maps"""		748261	0					
ANR	748807	Argument	"""dbg.maps.rwx"""		748261	27					
ANR	748808	PrimaryExpression	"""dbg.maps.rwx"""		748261	0					
ANR	748809	Argument	"""dbg.maps.r"""		748261	28					
ANR	748810	PrimaryExpression	"""dbg.maps.r"""		748261	0					
ANR	748811	Argument	"""dbg.maps.rw"""		748261	29					
ANR	748812	PrimaryExpression	"""dbg.maps.rw"""		748261	0					
ANR	748813	Argument	"""dbg.maps.rx"""		748261	30					
ANR	748814	PrimaryExpression	"""dbg.maps.rx"""		748261	0					
ANR	748815	Argument	"""dbg.maps.wx"""		748261	31					
ANR	748816	PrimaryExpression	"""dbg.maps.wx"""		748261	0					
ANR	748817	Argument	"""dbg.maps.x"""		748261	32					
ANR	748818	PrimaryExpression	"""dbg.maps.x"""		748261	0					
ANR	748819	Argument	"""anal.fcn"""		748261	33					
ANR	748820	PrimaryExpression	"""anal.fcn"""		748261	0					
ANR	748821	Argument	"""anal.bb"""		748261	34					
ANR	748822	PrimaryExpression	"""anal.bb"""		748261	0					
ANR	748823	Argument	NULL		748261	35					
ANR	748824	Identifier	NULL		748261	0					
ANR	748825	ExpressionStatement	"SETI ( ""anal.timeout"" , 0 , ""Stop analyzing after a couple of seconds"" )"	2816:1:78097:78165	748261	30	True				
ANR	748826	CallExpression	"SETI ( ""anal.timeout"" , 0 , ""Stop analyzing after a couple of seconds"" )"		748261	0					
ANR	748827	Callee	SETI		748261	0					
ANR	748828	Identifier	SETI		748261	0					
ANR	748829	ArgumentList	"""anal.timeout"""		748261	1					
ANR	748830	Argument	"""anal.timeout"""		748261	0					
ANR	748831	PrimaryExpression	"""anal.timeout"""		748261	0					
ANR	748832	Argument	0		748261	1					
ANR	748833	PrimaryExpression	0		748261	0					
ANR	748834	Argument	"""Stop analyzing after a couple of seconds"""		748261	2					
ANR	748835	PrimaryExpression	"""Stop analyzing after a couple of seconds"""		748261	0					
ANR	748836	ExpressionStatement	"SETCB ( ""anal.armthumb"" , ""false"" , & cb_analarmthumb , ""aae computes arm/thumb changes (lot of false positives ahead)"" )"	2818:1:78169:78284	748261	31	True				
ANR	748837	CallExpression	"SETCB ( ""anal.armthumb"" , ""false"" , & cb_analarmthumb , ""aae computes arm/thumb changes (lot of false positives ahead)"" )"		748261	0					
ANR	748838	Callee	SETCB		748261	0					
ANR	748839	Identifier	SETCB		748261	0					
ANR	748840	ArgumentList	"""anal.armthumb"""		748261	1					
ANR	748841	Argument	"""anal.armthumb"""		748261	0					
ANR	748842	PrimaryExpression	"""anal.armthumb"""		748261	0					
ANR	748843	Argument	"""false"""		748261	1					
ANR	748844	PrimaryExpression	"""false"""		748261	0					
ANR	748845	Argument	& cb_analarmthumb		748261	2					
ANR	748846	UnaryOperationExpression	& cb_analarmthumb		748261	0					
ANR	748847	UnaryOperator	&		748261	0					
ANR	748848	Identifier	cb_analarmthumb		748261	1					
ANR	748849	Argument	"""aae computes arm/thumb changes (lot of false positives ahead)"""		748261	3					
ANR	748850	PrimaryExpression	"""aae computes arm/thumb changes (lot of false positives ahead)"""		748261	0					
ANR	748851	ExpressionStatement	"SETCB ( ""anal.jmp.eob"" , ""false"" , & cb_analeobjmp , ""jmp is end of block mode (option)"" )"	2819:1:78287:78371	748261	32	True				
ANR	748852	CallExpression	"SETCB ( ""anal.jmp.eob"" , ""false"" , & cb_analeobjmp , ""jmp is end of block mode (option)"" )"		748261	0					
ANR	748853	Callee	SETCB		748261	0					
ANR	748854	Identifier	SETCB		748261	0					
ANR	748855	ArgumentList	"""anal.jmp.eob"""		748261	1					
ANR	748856	Argument	"""anal.jmp.eob"""		748261	0					
ANR	748857	PrimaryExpression	"""anal.jmp.eob"""		748261	0					
ANR	748858	Argument	"""false"""		748261	1					
ANR	748859	PrimaryExpression	"""false"""		748261	0					
ANR	748860	Argument	& cb_analeobjmp		748261	2					
ANR	748861	UnaryOperationExpression	& cb_analeobjmp		748261	0					
ANR	748862	UnaryOperator	&		748261	0					
ANR	748863	Identifier	cb_analeobjmp		748261	1					
ANR	748864	Argument	"""jmp is end of block mode (option)"""		748261	3					
ANR	748865	PrimaryExpression	"""jmp is end of block mode (option)"""		748261	0					
ANR	748866	ExpressionStatement	"SETCB ( ""anal.jmp.after"" , ""true"" , & cb_analafterjmp , ""Continue analysis after jmp/ujmp"" )"	2820:1:78374:78460	748261	33	True				
ANR	748867	CallExpression	"SETCB ( ""anal.jmp.after"" , ""true"" , & cb_analafterjmp , ""Continue analysis after jmp/ujmp"" )"		748261	0					
ANR	748868	Callee	SETCB		748261	0					
ANR	748869	Identifier	SETCB		748261	0					
ANR	748870	ArgumentList	"""anal.jmp.after"""		748261	1					
ANR	748871	Argument	"""anal.jmp.after"""		748261	0					
ANR	748872	PrimaryExpression	"""anal.jmp.after"""		748261	0					
ANR	748873	Argument	"""true"""		748261	1					
ANR	748874	PrimaryExpression	"""true"""		748261	0					
ANR	748875	Argument	& cb_analafterjmp		748261	2					
ANR	748876	UnaryOperationExpression	& cb_analafterjmp		748261	0					
ANR	748877	UnaryOperator	&		748261	0					
ANR	748878	Identifier	cb_analafterjmp		748261	1					
ANR	748879	Argument	"""Continue analysis after jmp/ujmp"""		748261	3					
ANR	748880	PrimaryExpression	"""Continue analysis after jmp/ujmp"""		748261	0					
ANR	748881	ExpressionStatement	"SETCB ( ""anal.endsize"" , ""true"" , & cb_anal_endsize , ""Adjust function size at the end of the analysis (known to be buggy)"" )"	2821:1:78463:78582	748261	34	True				
ANR	748882	CallExpression	"SETCB ( ""anal.endsize"" , ""true"" , & cb_anal_endsize , ""Adjust function size at the end of the analysis (known to be buggy)"" )"		748261	0					
ANR	748883	Callee	SETCB		748261	0					
ANR	748884	Identifier	SETCB		748261	0					
ANR	748885	ArgumentList	"""anal.endsize"""		748261	1					
ANR	748886	Argument	"""anal.endsize"""		748261	0					
ANR	748887	PrimaryExpression	"""anal.endsize"""		748261	0					
ANR	748888	Argument	"""true"""		748261	1					
ANR	748889	PrimaryExpression	"""true"""		748261	0					
ANR	748890	Argument	& cb_anal_endsize		748261	2					
ANR	748891	UnaryOperationExpression	& cb_anal_endsize		748261	0					
ANR	748892	UnaryOperator	&		748261	0					
ANR	748893	Identifier	cb_anal_endsize		748261	1					
ANR	748894	Argument	"""Adjust function size at the end of the analysis (known to be buggy)"""		748261	3					
ANR	748895	PrimaryExpression	"""Adjust function size at the end of the analysis (known to be buggy)"""		748261	0					
ANR	748896	ExpressionStatement	"SETICB ( ""anal.depth"" , 64 , & cb_analdepth , ""Max depth at code analysis"" )"	2822:1:78585:78655	748261	35	True				
ANR	748897	CallExpression	"SETICB ( ""anal.depth"" , 64 , & cb_analdepth , ""Max depth at code analysis"" )"		748261	0					
ANR	748898	Callee	SETICB		748261	0					
ANR	748899	Identifier	SETICB		748261	0					
ANR	748900	ArgumentList	"""anal.depth"""		748261	1					
ANR	748901	Argument	"""anal.depth"""		748261	0					
ANR	748902	PrimaryExpression	"""anal.depth"""		748261	0					
ANR	748903	Argument	64		748261	1					
ANR	748904	PrimaryExpression	64		748261	0					
ANR	748905	Argument	& cb_analdepth		748261	2					
ANR	748906	UnaryOperationExpression	& cb_analdepth		748261	0					
ANR	748907	UnaryOperator	&		748261	0					
ANR	748908	Identifier	cb_analdepth		748261	1					
ANR	748909	Argument	"""Max depth at code analysis"""		748261	3					
ANR	748910	PrimaryExpression	"""Max depth at code analysis"""		748261	0					
ANR	748911	ExpressionStatement	"SETICB ( ""anal.graph_depth"" , 256 , & cb_analgraphdepth , ""Max depth for path search"" )"	2823:1:78710:78791	748261	36	True				
ANR	748912	CallExpression	"SETICB ( ""anal.graph_depth"" , 256 , & cb_analgraphdepth , ""Max depth for path search"" )"		748261	0					
ANR	748913	Callee	SETICB		748261	0					
ANR	748914	Identifier	SETICB		748261	0					
ANR	748915	ArgumentList	"""anal.graph_depth"""		748261	1					
ANR	748916	Argument	"""anal.graph_depth"""		748261	0					
ANR	748917	PrimaryExpression	"""anal.graph_depth"""		748261	0					
ANR	748918	Argument	256		748261	1					
ANR	748919	PrimaryExpression	256		748261	0					
ANR	748920	Argument	& cb_analgraphdepth		748261	2					
ANR	748921	UnaryOperationExpression	& cb_analgraphdepth		748261	0					
ANR	748922	UnaryOperator	&		748261	0					
ANR	748923	Identifier	cb_analgraphdepth		748261	1					
ANR	748924	Argument	"""Max depth for path search"""		748261	3					
ANR	748925	PrimaryExpression	"""Max depth for path search"""		748261	0					
ANR	748926	ExpressionStatement	"SETICB ( ""anal.sleep"" , 0 , & cb_analsleep , ""Sleep N usecs every so often during analysis. Avoid 100% CPU usage"" )"	2824:1:78794:78903	748261	37	True				
ANR	748927	CallExpression	"SETICB ( ""anal.sleep"" , 0 , & cb_analsleep , ""Sleep N usecs every so often during analysis. Avoid 100% CPU usage"" )"		748261	0					
ANR	748928	Callee	SETICB		748261	0					
ANR	748929	Identifier	SETICB		748261	0					
ANR	748930	ArgumentList	"""anal.sleep"""		748261	1					
ANR	748931	Argument	"""anal.sleep"""		748261	0					
ANR	748932	PrimaryExpression	"""anal.sleep"""		748261	0					
ANR	748933	Argument	0		748261	1					
ANR	748934	PrimaryExpression	0		748261	0					
ANR	748935	Argument	& cb_analsleep		748261	2					
ANR	748936	UnaryOperationExpression	& cb_analsleep		748261	0					
ANR	748937	UnaryOperator	&		748261	0					
ANR	748938	Identifier	cb_analsleep		748261	1					
ANR	748939	Argument	"""Sleep N usecs every so often during analysis. Avoid 100% CPU usage"""		748261	3					
ANR	748940	PrimaryExpression	"""Sleep N usecs every so often during analysis. Avoid 100% CPU usage"""		748261	0					
ANR	748941	ExpressionStatement	"SETCB ( ""anal.ignbithints"" , ""false"" , & cb_anal_ignbithints , ""Ignore the ahb hints (only obey asm.bits)"" )"	2825:1:78906:79008	748261	38	True				
ANR	748942	CallExpression	"SETCB ( ""anal.ignbithints"" , ""false"" , & cb_anal_ignbithints , ""Ignore the ahb hints (only obey asm.bits)"" )"		748261	0					
ANR	748943	Callee	SETCB		748261	0					
ANR	748944	Identifier	SETCB		748261	0					
ANR	748945	ArgumentList	"""anal.ignbithints"""		748261	1					
ANR	748946	Argument	"""anal.ignbithints"""		748261	0					
ANR	748947	PrimaryExpression	"""anal.ignbithints"""		748261	0					
ANR	748948	Argument	"""false"""		748261	1					
ANR	748949	PrimaryExpression	"""false"""		748261	0					
ANR	748950	Argument	& cb_anal_ignbithints		748261	2					
ANR	748951	UnaryOperationExpression	& cb_anal_ignbithints		748261	0					
ANR	748952	UnaryOperator	&		748261	0					
ANR	748953	Identifier	cb_anal_ignbithints		748261	1					
ANR	748954	Argument	"""Ignore the ahb hints (only obey asm.bits)"""		748261	3					
ANR	748955	PrimaryExpression	"""Ignore the ahb hints (only obey asm.bits)"""		748261	0					
ANR	748956	ExpressionStatement	"SETPREF ( ""anal.calls"" , ""false"" , ""Make basic af analysis walk into calls"" )"	2826:1:79011:79084	748261	39	True				
ANR	748957	CallExpression	"SETPREF ( ""anal.calls"" , ""false"" , ""Make basic af analysis walk into calls"" )"		748261	0					
ANR	748958	Callee	SETPREF		748261	0					
ANR	748959	Identifier	SETPREF		748261	0					
ANR	748960	ArgumentList	"""anal.calls"""		748261	1					
ANR	748961	Argument	"""anal.calls"""		748261	0					
ANR	748962	PrimaryExpression	"""anal.calls"""		748261	0					
ANR	748963	Argument	"""false"""		748261	1					
ANR	748964	PrimaryExpression	"""false"""		748261	0					
ANR	748965	Argument	"""Make basic af analysis walk into calls"""		748261	2					
ANR	748966	PrimaryExpression	"""Make basic af analysis walk into calls"""		748261	0					
ANR	748967	ExpressionStatement	"SETPREF ( ""anal.autoname"" , ""false"" , ""Speculatively set a name for the functions, may result in some false positives"" )"	2827:1:79087:79203	748261	40	True				
ANR	748968	CallExpression	"SETPREF ( ""anal.autoname"" , ""false"" , ""Speculatively set a name for the functions, may result in some false positives"" )"		748261	0					
ANR	748969	Callee	SETPREF		748261	0					
ANR	748970	Identifier	SETPREF		748261	0					
ANR	748971	ArgumentList	"""anal.autoname"""		748261	1					
ANR	748972	Argument	"""anal.autoname"""		748261	0					
ANR	748973	PrimaryExpression	"""anal.autoname"""		748261	0					
ANR	748974	Argument	"""false"""		748261	1					
ANR	748975	PrimaryExpression	"""false"""		748261	0					
ANR	748976	Argument	"""Speculatively set a name for the functions, may result in some false positives"""		748261	2					
ANR	748977	PrimaryExpression	"""Speculatively set a name for the functions, may result in some false positives"""		748261	0					
ANR	748978	ExpressionStatement	"SETPREF ( ""anal.hasnext"" , ""false"" , ""Continue analysis after each function"" )"	2828:1:79206:79280	748261	41	True				
ANR	748979	CallExpression	"SETPREF ( ""anal.hasnext"" , ""false"" , ""Continue analysis after each function"" )"		748261	0					
ANR	748980	Callee	SETPREF		748261	0					
ANR	748981	Identifier	SETPREF		748261	0					
ANR	748982	ArgumentList	"""anal.hasnext"""		748261	1					
ANR	748983	Argument	"""anal.hasnext"""		748261	0					
ANR	748984	PrimaryExpression	"""anal.hasnext"""		748261	0					
ANR	748985	Argument	"""false"""		748261	1					
ANR	748986	PrimaryExpression	"""false"""		748261	0					
ANR	748987	Argument	"""Continue analysis after each function"""		748261	2					
ANR	748988	PrimaryExpression	"""Continue analysis after each function"""		748261	0					
ANR	748989	ExpressionStatement	"SETPREF ( ""anal.esil"" , ""false"" , ""Use the new ESIL code analysis"" )"	2829:1:79283:79347	748261	42	True				
ANR	748990	CallExpression	"SETPREF ( ""anal.esil"" , ""false"" , ""Use the new ESIL code analysis"" )"		748261	0					
ANR	748991	Callee	SETPREF		748261	0					
ANR	748992	Identifier	SETPREF		748261	0					
ANR	748993	ArgumentList	"""anal.esil"""		748261	1					
ANR	748994	Argument	"""anal.esil"""		748261	0					
ANR	748995	PrimaryExpression	"""anal.esil"""		748261	0					
ANR	748996	Argument	"""false"""		748261	1					
ANR	748997	PrimaryExpression	"""false"""		748261	0					
ANR	748998	Argument	"""Use the new ESIL code analysis"""		748261	2					
ANR	748999	PrimaryExpression	"""Use the new ESIL code analysis"""		748261	0					
ANR	749000	ExpressionStatement	"SETCB ( ""anal.strings"" , ""false"" , & cb_analstrings , ""Identify and register strings during analysis (aar only)"" )"	2830:1:79350:79458	748261	43	True				
ANR	749001	CallExpression	"SETCB ( ""anal.strings"" , ""false"" , & cb_analstrings , ""Identify and register strings during analysis (aar only)"" )"		748261	0					
ANR	749002	Callee	SETCB		748261	0					
ANR	749003	Identifier	SETCB		748261	0					
ANR	749004	ArgumentList	"""anal.strings"""		748261	1					
ANR	749005	Argument	"""anal.strings"""		748261	0					
ANR	749006	PrimaryExpression	"""anal.strings"""		748261	0					
ANR	749007	Argument	"""false"""		748261	1					
ANR	749008	PrimaryExpression	"""false"""		748261	0					
ANR	749009	Argument	& cb_analstrings		748261	2					
ANR	749010	UnaryOperationExpression	& cb_analstrings		748261	0					
ANR	749011	UnaryOperator	&		748261	0					
ANR	749012	Identifier	cb_analstrings		748261	1					
ANR	749013	Argument	"""Identify and register strings during analysis (aar only)"""		748261	3					
ANR	749014	PrimaryExpression	"""Identify and register strings during analysis (aar only)"""		748261	0					
ANR	749015	ExpressionStatement	"SETPREF ( ""anal.types.spec"" , ""gcc"" , ""Set profile for specifying format chars used in type analysis"" )"	2831:1:79461:79561	748261	44	True				
ANR	749016	CallExpression	"SETPREF ( ""anal.types.spec"" , ""gcc"" , ""Set profile for specifying format chars used in type analysis"" )"		748261	0					
ANR	749017	Callee	SETPREF		748261	0					
ANR	749018	Identifier	SETPREF		748261	0					
ANR	749019	ArgumentList	"""anal.types.spec"""		748261	1					
ANR	749020	Argument	"""anal.types.spec"""		748261	0					
ANR	749021	PrimaryExpression	"""anal.types.spec"""		748261	0					
ANR	749022	Argument	"""gcc"""		748261	1					
ANR	749023	PrimaryExpression	"""gcc"""		748261	0					
ANR	749024	Argument	"""Set profile for specifying format chars used in type analysis"""		748261	2					
ANR	749025	PrimaryExpression	"""Set profile for specifying format chars used in type analysis"""		748261	0					
ANR	749026	ExpressionStatement	"SETPREF ( ""anal.types.verbose"" , ""false"" , ""Verbose output from type analysis"" )"	2832:1:79564:79640	748261	45	True				
ANR	749027	CallExpression	"SETPREF ( ""anal.types.verbose"" , ""false"" , ""Verbose output from type analysis"" )"		748261	0					
ANR	749028	Callee	SETPREF		748261	0					
ANR	749029	Identifier	SETPREF		748261	0					
ANR	749030	ArgumentList	"""anal.types.verbose"""		748261	1					
ANR	749031	Argument	"""anal.types.verbose"""		748261	0					
ANR	749032	PrimaryExpression	"""anal.types.verbose"""		748261	0					
ANR	749033	Argument	"""false"""		748261	1					
ANR	749034	PrimaryExpression	"""false"""		748261	0					
ANR	749035	Argument	"""Verbose output from type analysis"""		748261	2					
ANR	749036	PrimaryExpression	"""Verbose output from type analysis"""		748261	0					
ANR	749037	ExpressionStatement	"SETPREF ( ""anal.types.constraint"" , ""false"" , ""Enable constraint types analysis for variables"" )"	2833:1:79643:79735	748261	46	True				
ANR	749038	CallExpression	"SETPREF ( ""anal.types.constraint"" , ""false"" , ""Enable constraint types analysis for variables"" )"		748261	0					
ANR	749039	Callee	SETPREF		748261	0					
ANR	749040	Identifier	SETPREF		748261	0					
ANR	749041	ArgumentList	"""anal.types.constraint"""		748261	1					
ANR	749042	Argument	"""anal.types.constraint"""		748261	0					
ANR	749043	PrimaryExpression	"""anal.types.constraint"""		748261	0					
ANR	749044	Argument	"""false"""		748261	1					
ANR	749045	PrimaryExpression	"""false"""		748261	0					
ANR	749046	Argument	"""Enable constraint types analysis for variables"""		748261	2					
ANR	749047	PrimaryExpression	"""Enable constraint types analysis for variables"""		748261	0					
ANR	749048	ExpressionStatement	"SETCB ( ""anal.vars"" , ""true"" , & cb_analvars , ""Analyze local variables and arguments"" )"	2834:1:79738:79820	748261	47	True				
ANR	749049	CallExpression	"SETCB ( ""anal.vars"" , ""true"" , & cb_analvars , ""Analyze local variables and arguments"" )"		748261	0					
ANR	749050	Callee	SETCB		748261	0					
ANR	749051	Identifier	SETCB		748261	0					
ANR	749052	ArgumentList	"""anal.vars"""		748261	1					
ANR	749053	Argument	"""anal.vars"""		748261	0					
ANR	749054	PrimaryExpression	"""anal.vars"""		748261	0					
ANR	749055	Argument	"""true"""		748261	1					
ANR	749056	PrimaryExpression	"""true"""		748261	0					
ANR	749057	Argument	& cb_analvars		748261	2					
ANR	749058	UnaryOperationExpression	& cb_analvars		748261	0					
ANR	749059	UnaryOperator	&		748261	0					
ANR	749060	Identifier	cb_analvars		748261	1					
ANR	749061	Argument	"""Analyze local variables and arguments"""		748261	3					
ANR	749062	PrimaryExpression	"""Analyze local variables and arguments"""		748261	0					
ANR	749063	ExpressionStatement	"SETPREF ( ""anal.vinfun"" , ""true"" , ""Search values in functions (aav) (false by default to only find on non-code)"" )"	2835:1:79823:79935	748261	48	True				
ANR	749064	CallExpression	"SETPREF ( ""anal.vinfun"" , ""true"" , ""Search values in functions (aav) (false by default to only find on non-code)"" )"		748261	0					
ANR	749065	Callee	SETPREF		748261	0					
ANR	749066	Identifier	SETPREF		748261	0					
ANR	749067	ArgumentList	"""anal.vinfun"""		748261	1					
ANR	749068	Argument	"""anal.vinfun"""		748261	0					
ANR	749069	PrimaryExpression	"""anal.vinfun"""		748261	0					
ANR	749070	Argument	"""true"""		748261	1					
ANR	749071	PrimaryExpression	"""true"""		748261	0					
ANR	749072	Argument	"""Search values in functions (aav) (false by default to only find on non-code)"""		748261	2					
ANR	749073	PrimaryExpression	"""Search values in functions (aav) (false by default to only find on non-code)"""		748261	0					
ANR	749074	ExpressionStatement	"SETPREF ( ""anal.vinfunrange"" , ""false"" , ""Search values outside function ranges (requires anal.vinfun=false)\\n"" )"	2836:1:79938:80048	748261	49	True				
ANR	749075	CallExpression	"SETPREF ( ""anal.vinfunrange"" , ""false"" , ""Search values outside function ranges (requires anal.vinfun=false)\\n"" )"		748261	0					
ANR	749076	Callee	SETPREF		748261	0					
ANR	749077	Identifier	SETPREF		748261	0					
ANR	749078	ArgumentList	"""anal.vinfunrange"""		748261	1					
ANR	749079	Argument	"""anal.vinfunrange"""		748261	0					
ANR	749080	PrimaryExpression	"""anal.vinfunrange"""		748261	0					
ANR	749081	Argument	"""false"""		748261	1					
ANR	749082	PrimaryExpression	"""false"""		748261	0					
ANR	749083	Argument	"""Search values outside function ranges (requires anal.vinfun=false)\\n"""		748261	2					
ANR	749084	PrimaryExpression	"""Search values outside function ranges (requires anal.vinfun=false)\\n"""		748261	0					
ANR	749085	ExpressionStatement	"SETCB ( ""anal.nopskip"" , ""true"" , & cb_analnopskip , ""Skip nops at the beginning of functions"" )"	2837:1:80051:80141	748261	50	True				
ANR	749086	CallExpression	"SETCB ( ""anal.nopskip"" , ""true"" , & cb_analnopskip , ""Skip nops at the beginning of functions"" )"		748261	0					
ANR	749087	Callee	SETCB		748261	0					
ANR	749088	Identifier	SETCB		748261	0					
ANR	749089	ArgumentList	"""anal.nopskip"""		748261	1					
ANR	749090	Argument	"""anal.nopskip"""		748261	0					
ANR	749091	PrimaryExpression	"""anal.nopskip"""		748261	0					
ANR	749092	Argument	"""true"""		748261	1					
ANR	749093	PrimaryExpression	"""true"""		748261	0					
ANR	749094	Argument	& cb_analnopskip		748261	2					
ANR	749095	UnaryOperationExpression	& cb_analnopskip		748261	0					
ANR	749096	UnaryOperator	&		748261	0					
ANR	749097	Identifier	cb_analnopskip		748261	1					
ANR	749098	Argument	"""Skip nops at the beginning of functions"""		748261	3					
ANR	749099	PrimaryExpression	"""Skip nops at the beginning of functions"""		748261	0					
ANR	749100	ExpressionStatement	"SETCB ( ""anal.hpskip"" , ""false"" , & cb_analhpskip , ""Skip `mov reg, reg` and `lea reg, [reg] at the beginning of functions"" )"	2838:1:80144:80263	748261	51	True				
ANR	749101	CallExpression	"SETCB ( ""anal.hpskip"" , ""false"" , & cb_analhpskip , ""Skip `mov reg, reg` and `lea reg, [reg] at the beginning of functions"" )"		748261	0					
ANR	749102	Callee	SETCB		748261	0					
ANR	749103	Identifier	SETCB		748261	0					
ANR	749104	ArgumentList	"""anal.hpskip"""		748261	1					
ANR	749105	Argument	"""anal.hpskip"""		748261	0					
ANR	749106	PrimaryExpression	"""anal.hpskip"""		748261	0					
ANR	749107	Argument	"""false"""		748261	1					
ANR	749108	PrimaryExpression	"""false"""		748261	0					
ANR	749109	Argument	& cb_analhpskip		748261	2					
ANR	749110	UnaryOperationExpression	& cb_analhpskip		748261	0					
ANR	749111	UnaryOperator	&		748261	0					
ANR	749112	Identifier	cb_analhpskip		748261	1					
ANR	749113	Argument	"""Skip `mov reg, reg` and `lea reg, [reg] at the beginning of functions"""		748261	3					
ANR	749114	PrimaryExpression	"""Skip `mov reg, reg` and `lea reg, [reg] at the beginning of functions"""		748261	0					
ANR	749115	ExpressionStatement	"n = NODECB ( ""anal.arch"" , R_SYS_ARCH , & cb_analarch )"	2839:1:80266:80316	748261	52	True				
ANR	749116	AssignmentExpression	"n = NODECB ( ""anal.arch"" , R_SYS_ARCH , & cb_analarch )"		748261	0		=			
ANR	749117	Identifier	n		748261	0					
ANR	749118	CallExpression	"NODECB ( ""anal.arch"" , R_SYS_ARCH , & cb_analarch )"		748261	1					
ANR	749119	Callee	NODECB		748261	0					
ANR	749120	Identifier	NODECB		748261	0					
ANR	749121	ArgumentList	"""anal.arch"""		748261	1					
ANR	749122	Argument	"""anal.arch"""		748261	0					
ANR	749123	PrimaryExpression	"""anal.arch"""		748261	0					
ANR	749124	Argument	R_SYS_ARCH		748261	1					
ANR	749125	Identifier	R_SYS_ARCH		748261	0					
ANR	749126	Argument	& cb_analarch		748261	2					
ANR	749127	UnaryOperationExpression	& cb_analarch		748261	0					
ANR	749128	UnaryOperator	&		748261	0					
ANR	749129	Identifier	cb_analarch		748261	1					
ANR	749130	ExpressionStatement	"SETDESC ( n , ""Select the architecture to use"" )"	2840:1:80319:80364	748261	53	True				
ANR	749131	CallExpression	"SETDESC ( n , ""Select the architecture to use"" )"		748261	0					
ANR	749132	Callee	SETDESC		748261	0					
ANR	749133	Identifier	SETDESC		748261	0					
ANR	749134	ArgumentList	n		748261	1					
ANR	749135	Argument	n		748261	0					
ANR	749136	Identifier	n		748261	0					
ANR	749137	Argument	"""Select the architecture to use"""		748261	1					
ANR	749138	PrimaryExpression	"""Select the architecture to use"""		748261	0					
ANR	749139	ExpressionStatement	"update_analarch_options ( core , n )"	2841:1:80367:80400	748261	54	True				
ANR	749140	CallExpression	"update_analarch_options ( core , n )"		748261	0					
ANR	749141	Callee	update_analarch_options		748261	0					
ANR	749142	Identifier	update_analarch_options		748261	0					
ANR	749143	ArgumentList	core		748261	1					
ANR	749144	Argument	core		748261	0					
ANR	749145	Identifier	core		748261	0					
ANR	749146	Argument	n		748261	1					
ANR	749147	Identifier	n		748261	0					
ANR	749148	ExpressionStatement	"SETCB ( ""anal.cpu"" , R_SYS_ARCH , & cb_analcpu , ""Specify the anal.cpu to use"" )"	2842:1:80403:80477	748261	55	True				
ANR	749149	CallExpression	"SETCB ( ""anal.cpu"" , R_SYS_ARCH , & cb_analcpu , ""Specify the anal.cpu to use"" )"		748261	0					
ANR	749150	Callee	SETCB		748261	0					
ANR	749151	Identifier	SETCB		748261	0					
ANR	749152	ArgumentList	"""anal.cpu"""		748261	1					
ANR	749153	Argument	"""anal.cpu"""		748261	0					
ANR	749154	PrimaryExpression	"""anal.cpu"""		748261	0					
ANR	749155	Argument	R_SYS_ARCH		748261	1					
ANR	749156	Identifier	R_SYS_ARCH		748261	0					
ANR	749157	Argument	& cb_analcpu		748261	2					
ANR	749158	UnaryOperationExpression	& cb_analcpu		748261	0					
ANR	749159	UnaryOperator	&		748261	0					
ANR	749160	Identifier	cb_analcpu		748261	1					
ANR	749161	Argument	"""Specify the anal.cpu to use"""		748261	3					
ANR	749162	PrimaryExpression	"""Specify the anal.cpu to use"""		748261	0					
ANR	749163	ExpressionStatement	"SETPREF ( ""anal.prelude"" , """" , ""Specify an hexpair to find preludes in code"" )"	2843:1:80480:80555	748261	56	True				
ANR	749164	CallExpression	"SETPREF ( ""anal.prelude"" , """" , ""Specify an hexpair to find preludes in code"" )"		748261	0					
ANR	749165	Callee	SETPREF		748261	0					
ANR	749166	Identifier	SETPREF		748261	0					
ANR	749167	ArgumentList	"""anal.prelude"""		748261	1					
ANR	749168	Argument	"""anal.prelude"""		748261	0					
ANR	749169	PrimaryExpression	"""anal.prelude"""		748261	0					
ANR	749170	Argument	""""""		748261	1					
ANR	749171	PrimaryExpression	""""""		748261	0					
ANR	749172	Argument	"""Specify an hexpair to find preludes in code"""		748261	2					
ANR	749173	PrimaryExpression	"""Specify an hexpair to find preludes in code"""		748261	0					
ANR	749174	ExpressionStatement	"SETCB ( ""anal.recont"" , ""false"" , & cb_analrecont , ""End block after splitting a basic block instead of error"" )"	2844:1:80558:80664	748261	57	True				
ANR	749175	CallExpression	"SETCB ( ""anal.recont"" , ""false"" , & cb_analrecont , ""End block after splitting a basic block instead of error"" )"		748261	0					
ANR	749176	Callee	SETCB		748261	0					
ANR	749177	Identifier	SETCB		748261	0					
ANR	749178	ArgumentList	"""anal.recont"""		748261	1					
ANR	749179	Argument	"""anal.recont"""		748261	0					
ANR	749180	PrimaryExpression	"""anal.recont"""		748261	0					
ANR	749181	Argument	"""false"""		748261	1					
ANR	749182	PrimaryExpression	"""false"""		748261	0					
ANR	749183	Argument	& cb_analrecont		748261	2					
ANR	749184	UnaryOperationExpression	& cb_analrecont		748261	0					
ANR	749185	UnaryOperator	&		748261	0					
ANR	749186	Identifier	cb_analrecont		748261	1					
ANR	749187	Argument	"""End block after splitting a basic block instead of error"""		748261	3					
ANR	749188	PrimaryExpression	"""End block after splitting a basic block instead of error"""		748261	0					
ANR	749189	ExpressionStatement	"SETCB ( ""anal.jmp.indir"" , ""false"" , & cb_analijmp , ""Follow the indirect jumps in function analysis"" )"	2845:1:80678:80775	748261	58	True				
ANR	749190	CallExpression	"SETCB ( ""anal.jmp.indir"" , ""false"" , & cb_analijmp , ""Follow the indirect jumps in function analysis"" )"		748261	0					
ANR	749191	Callee	SETCB		748261	0					
ANR	749192	Identifier	SETCB		748261	0					
ANR	749193	ArgumentList	"""anal.jmp.indir"""		748261	1					
ANR	749194	Argument	"""anal.jmp.indir"""		748261	0					
ANR	749195	PrimaryExpression	"""anal.jmp.indir"""		748261	0					
ANR	749196	Argument	"""false"""		748261	1					
ANR	749197	PrimaryExpression	"""false"""		748261	0					
ANR	749198	Argument	& cb_analijmp		748261	2					
ANR	749199	UnaryOperationExpression	& cb_analijmp		748261	0					
ANR	749200	UnaryOperator	&		748261	0					
ANR	749201	Identifier	cb_analijmp		748261	1					
ANR	749202	Argument	"""Follow the indirect jumps in function analysis"""		748261	3					
ANR	749203	PrimaryExpression	"""Follow the indirect jumps in function analysis"""		748261	0					
ANR	749204	ExpressionStatement	"SETI ( ""anal.ptrdepth"" , 3 , ""Maximum number of nested pointers to follow in analysis"" )"	2846:1:80789:80873	748261	59	True				
ANR	749205	CallExpression	"SETI ( ""anal.ptrdepth"" , 3 , ""Maximum number of nested pointers to follow in analysis"" )"		748261	0					
ANR	749206	Callee	SETI		748261	0					
ANR	749207	Identifier	SETI		748261	0					
ANR	749208	ArgumentList	"""anal.ptrdepth"""		748261	1					
ANR	749209	Argument	"""anal.ptrdepth"""		748261	0					
ANR	749210	PrimaryExpression	"""anal.ptrdepth"""		748261	0					
ANR	749211	Argument	3		748261	1					
ANR	749212	PrimaryExpression	3		748261	0					
ANR	749213	Argument	"""Maximum number of nested pointers to follow in analysis"""		748261	2					
ANR	749214	PrimaryExpression	"""Maximum number of nested pointers to follow in analysis"""		748261	0					
ANR	749215	ExpressionStatement	"SETICB ( ""asm.lines.maxref"" , 0 , & cb_analmaxrefs , ""Maximum number of reflines to be analyzed and displayed in asm.lines with pd"" )"	2847:1:80876:81003	748261	60	True				
ANR	749216	CallExpression	"SETICB ( ""asm.lines.maxref"" , 0 , & cb_analmaxrefs , ""Maximum number of reflines to be analyzed and displayed in asm.lines with pd"" )"		748261	0					
ANR	749217	Callee	SETICB		748261	0					
ANR	749218	Identifier	SETICB		748261	0					
ANR	749219	ArgumentList	"""asm.lines.maxref"""		748261	1					
ANR	749220	Argument	"""asm.lines.maxref"""		748261	0					
ANR	749221	PrimaryExpression	"""asm.lines.maxref"""		748261	0					
ANR	749222	Argument	0		748261	1					
ANR	749223	PrimaryExpression	0		748261	0					
ANR	749224	Argument	& cb_analmaxrefs		748261	2					
ANR	749225	UnaryOperationExpression	& cb_analmaxrefs		748261	0					
ANR	749226	UnaryOperator	&		748261	0					
ANR	749227	Identifier	cb_analmaxrefs		748261	1					
ANR	749228	Argument	"""Maximum number of reflines to be analyzed and displayed in asm.lines with pd"""		748261	3					
ANR	749229	PrimaryExpression	"""Maximum number of reflines to be analyzed and displayed in asm.lines with pd"""		748261	0					
ANR	749230	ExpressionStatement	"SETCB ( ""anal.jmp.tbl"" , ""true"" , & cb_anal_jmptbl , ""Analyze jump tables in switch statements"" )"	2849:1:81007:81098	748261	61	True				
ANR	749231	CallExpression	"SETCB ( ""anal.jmp.tbl"" , ""true"" , & cb_anal_jmptbl , ""Analyze jump tables in switch statements"" )"		748261	0					
ANR	749232	Callee	SETCB		748261	0					
ANR	749233	Identifier	SETCB		748261	0					
ANR	749234	ArgumentList	"""anal.jmp.tbl"""		748261	1					
ANR	749235	Argument	"""anal.jmp.tbl"""		748261	0					
ANR	749236	PrimaryExpression	"""anal.jmp.tbl"""		748261	0					
ANR	749237	Argument	"""true"""		748261	1					
ANR	749238	PrimaryExpression	"""true"""		748261	0					
ANR	749239	Argument	& cb_anal_jmptbl		748261	2					
ANR	749240	UnaryOperationExpression	& cb_anal_jmptbl		748261	0					
ANR	749241	UnaryOperator	&		748261	0					
ANR	749242	Identifier	cb_anal_jmptbl		748261	1					
ANR	749243	Argument	"""Analyze jump tables in switch statements"""		748261	3					
ANR	749244	PrimaryExpression	"""Analyze jump tables in switch statements"""		748261	0					
ANR	749245	ExpressionStatement	"SETCB ( ""anal.jmp.cref"" , ""false"" , & cb_anal_cjmpref , ""Create references for conditional jumps"" )"	2851:1:81102:81195	748261	62	True				
ANR	749246	CallExpression	"SETCB ( ""anal.jmp.cref"" , ""false"" , & cb_anal_cjmpref , ""Create references for conditional jumps"" )"		748261	0					
ANR	749247	Callee	SETCB		748261	0					
ANR	749248	Identifier	SETCB		748261	0					
ANR	749249	ArgumentList	"""anal.jmp.cref"""		748261	1					
ANR	749250	Argument	"""anal.jmp.cref"""		748261	0					
ANR	749251	PrimaryExpression	"""anal.jmp.cref"""		748261	0					
ANR	749252	Argument	"""false"""		748261	1					
ANR	749253	PrimaryExpression	"""false"""		748261	0					
ANR	749254	Argument	& cb_anal_cjmpref		748261	2					
ANR	749255	UnaryOperationExpression	& cb_anal_cjmpref		748261	0					
ANR	749256	UnaryOperator	&		748261	0					
ANR	749257	Identifier	cb_anal_cjmpref		748261	1					
ANR	749258	Argument	"""Create references for conditional jumps"""		748261	3					
ANR	749259	PrimaryExpression	"""Create references for conditional jumps"""		748261	0					
ANR	749260	ExpressionStatement	"SETCB ( ""anal.jmp.ref"" , ""true"" , & cb_anal_jmpref , ""Create references for unconditional jumps"" )"	2852:1:81198:81290	748261	63	True				
ANR	749261	CallExpression	"SETCB ( ""anal.jmp.ref"" , ""true"" , & cb_anal_jmpref , ""Create references for unconditional jumps"" )"		748261	0					
ANR	749262	Callee	SETCB		748261	0					
ANR	749263	Identifier	SETCB		748261	0					
ANR	749264	ArgumentList	"""anal.jmp.ref"""		748261	1					
ANR	749265	Argument	"""anal.jmp.ref"""		748261	0					
ANR	749266	PrimaryExpression	"""anal.jmp.ref"""		748261	0					
ANR	749267	Argument	"""true"""		748261	1					
ANR	749268	PrimaryExpression	"""true"""		748261	0					
ANR	749269	Argument	& cb_anal_jmpref		748261	2					
ANR	749270	UnaryOperationExpression	& cb_anal_jmpref		748261	0					
ANR	749271	UnaryOperator	&		748261	0					
ANR	749272	Identifier	cb_anal_jmpref		748261	1					
ANR	749273	Argument	"""Create references for unconditional jumps"""		748261	3					
ANR	749274	PrimaryExpression	"""Create references for unconditional jumps"""		748261	0					
ANR	749275	ExpressionStatement	"SETCB ( ""anal.jmp.above"" , ""true"" , & cb_anal_jmpabove , ""Jump above function pointer"" )"	2854:1:81294:81376	748261	64	True				
ANR	749276	CallExpression	"SETCB ( ""anal.jmp.above"" , ""true"" , & cb_anal_jmpabove , ""Jump above function pointer"" )"		748261	0					
ANR	749277	Callee	SETCB		748261	0					
ANR	749278	Identifier	SETCB		748261	0					
ANR	749279	ArgumentList	"""anal.jmp.above"""		748261	1					
ANR	749280	Argument	"""anal.jmp.above"""		748261	0					
ANR	749281	PrimaryExpression	"""anal.jmp.above"""		748261	0					
ANR	749282	Argument	"""true"""		748261	1					
ANR	749283	PrimaryExpression	"""true"""		748261	0					
ANR	749284	Argument	& cb_anal_jmpabove		748261	2					
ANR	749285	UnaryOperationExpression	& cb_anal_jmpabove		748261	0					
ANR	749286	UnaryOperator	&		748261	0					
ANR	749287	Identifier	cb_anal_jmpabove		748261	1					
ANR	749288	Argument	"""Jump above function pointer"""		748261	3					
ANR	749289	PrimaryExpression	"""Jump above function pointer"""		748261	0					
ANR	749290	ExpressionStatement	"SETCB ( ""anal.loads"" , ""false"" , & cb_anal_loads , ""Define as dword/string/qword when analyzing load instructions"" )"	2855:1:81379:81489	748261	65	True				
ANR	749291	CallExpression	"SETCB ( ""anal.loads"" , ""false"" , & cb_anal_loads , ""Define as dword/string/qword when analyzing load instructions"" )"		748261	0					
ANR	749292	Callee	SETCB		748261	0					
ANR	749293	Identifier	SETCB		748261	0					
ANR	749294	ArgumentList	"""anal.loads"""		748261	1					
ANR	749295	Argument	"""anal.loads"""		748261	0					
ANR	749296	PrimaryExpression	"""anal.loads"""		748261	0					
ANR	749297	Argument	"""false"""		748261	1					
ANR	749298	PrimaryExpression	"""false"""		748261	0					
ANR	749299	Argument	& cb_anal_loads		748261	2					
ANR	749300	UnaryOperationExpression	& cb_anal_loads		748261	0					
ANR	749301	UnaryOperator	&		748261	0					
ANR	749302	Identifier	cb_anal_loads		748261	1					
ANR	749303	Argument	"""Define as dword/string/qword when analyzing load instructions"""		748261	3					
ANR	749304	PrimaryExpression	"""Define as dword/string/qword when analyzing load instructions"""		748261	0					
ANR	749305	ExpressionStatement	"SETCB ( ""anal.datarefs"" , ""false"" , & cb_anal_followdatarefs , ""Follow data references for code coverage"" )"	2856:1:81492:81593	748261	66	True				
ANR	749306	CallExpression	"SETCB ( ""anal.datarefs"" , ""false"" , & cb_anal_followdatarefs , ""Follow data references for code coverage"" )"		748261	0					
ANR	749307	Callee	SETCB		748261	0					
ANR	749308	Identifier	SETCB		748261	0					
ANR	749309	ArgumentList	"""anal.datarefs"""		748261	1					
ANR	749310	Argument	"""anal.datarefs"""		748261	0					
ANR	749311	PrimaryExpression	"""anal.datarefs"""		748261	0					
ANR	749312	Argument	"""false"""		748261	1					
ANR	749313	PrimaryExpression	"""false"""		748261	0					
ANR	749314	Argument	& cb_anal_followdatarefs		748261	2					
ANR	749315	UnaryOperationExpression	& cb_anal_followdatarefs		748261	0					
ANR	749316	UnaryOperator	&		748261	0					
ANR	749317	Identifier	cb_anal_followdatarefs		748261	1					
ANR	749318	Argument	"""Follow data references for code coverage"""		748261	3					
ANR	749319	PrimaryExpression	"""Follow data references for code coverage"""		748261	0					
ANR	749320	ExpressionStatement	"SETCB ( ""anal.brokenrefs"" , ""false"" , & cb_anal_brokenrefs , ""Follow function references as well if function analysis was failed"" )"	2857:1:81596:81721	748261	67	True				
ANR	749321	CallExpression	"SETCB ( ""anal.brokenrefs"" , ""false"" , & cb_anal_brokenrefs , ""Follow function references as well if function analysis was failed"" )"		748261	0					
ANR	749322	Callee	SETCB		748261	0					
ANR	749323	Identifier	SETCB		748261	0					
ANR	749324	ArgumentList	"""anal.brokenrefs"""		748261	1					
ANR	749325	Argument	"""anal.brokenrefs"""		748261	0					
ANR	749326	PrimaryExpression	"""anal.brokenrefs"""		748261	0					
ANR	749327	Argument	"""false"""		748261	1					
ANR	749328	PrimaryExpression	"""false"""		748261	0					
ANR	749329	Argument	& cb_anal_brokenrefs		748261	2					
ANR	749330	UnaryOperationExpression	& cb_anal_brokenrefs		748261	0					
ANR	749331	UnaryOperator	&		748261	0					
ANR	749332	Identifier	cb_anal_brokenrefs		748261	1					
ANR	749333	Argument	"""Follow function references as well if function analysis was failed"""		748261	3					
ANR	749334	PrimaryExpression	"""Follow function references as well if function analysis was failed"""		748261	0					
ANR	749335	ExpressionStatement	"SETCB ( ""anal.jmp.mid"" , ""true"" , & cb_anal_jmpmid , ""Continue analysis after jump to middle of instruction (x86 only)"" )"	2858:1:81724:81839	748261	68	True				
ANR	749336	CallExpression	"SETCB ( ""anal.jmp.mid"" , ""true"" , & cb_anal_jmpmid , ""Continue analysis after jump to middle of instruction (x86 only)"" )"		748261	0					
ANR	749337	Callee	SETCB		748261	0					
ANR	749338	Identifier	SETCB		748261	0					
ANR	749339	ArgumentList	"""anal.jmp.mid"""		748261	1					
ANR	749340	Argument	"""anal.jmp.mid"""		748261	0					
ANR	749341	PrimaryExpression	"""anal.jmp.mid"""		748261	0					
ANR	749342	Argument	"""true"""		748261	1					
ANR	749343	PrimaryExpression	"""true"""		748261	0					
ANR	749344	Argument	& cb_anal_jmpmid		748261	2					
ANR	749345	UnaryOperationExpression	& cb_anal_jmpmid		748261	0					
ANR	749346	UnaryOperator	&		748261	0					
ANR	749347	Identifier	cb_anal_jmpmid		748261	1					
ANR	749348	Argument	"""Continue analysis after jump to middle of instruction (x86 only)"""		748261	3					
ANR	749349	PrimaryExpression	"""Continue analysis after jump to middle of instruction (x86 only)"""		748261	0					
ANR	749350	ExpressionStatement	"SETCB ( ""anal.refstr"" , ""false"" , & cb_anal_searchstringrefs , ""Search string references in data references"" )"	2860:1:81843:81947	748261	69	True				
ANR	749351	CallExpression	"SETCB ( ""anal.refstr"" , ""false"" , & cb_anal_searchstringrefs , ""Search string references in data references"" )"		748261	0					
ANR	749352	Callee	SETCB		748261	0					
ANR	749353	Identifier	SETCB		748261	0					
ANR	749354	ArgumentList	"""anal.refstr"""		748261	1					
ANR	749355	Argument	"""anal.refstr"""		748261	0					
ANR	749356	PrimaryExpression	"""anal.refstr"""		748261	0					
ANR	749357	Argument	"""false"""		748261	1					
ANR	749358	PrimaryExpression	"""false"""		748261	0					
ANR	749359	Argument	& cb_anal_searchstringrefs		748261	2					
ANR	749360	UnaryOperationExpression	& cb_anal_searchstringrefs		748261	0					
ANR	749361	UnaryOperator	&		748261	0					
ANR	749362	Identifier	cb_anal_searchstringrefs		748261	1					
ANR	749363	Argument	"""Search string references in data references"""		748261	3					
ANR	749364	PrimaryExpression	"""Search string references in data references"""		748261	0					
ANR	749365	ExpressionStatement	"SETCB ( ""anal.trycatch"" , ""false"" , & cb_anal_trycatch , ""Honor try.X.Y.{from,to,catch} flags"" )"	2861:1:81950:82040	748261	70	True				
ANR	749366	CallExpression	"SETCB ( ""anal.trycatch"" , ""false"" , & cb_anal_trycatch , ""Honor try.X.Y.{from,to,catch} flags"" )"		748261	0					
ANR	749367	Callee	SETCB		748261	0					
ANR	749368	Identifier	SETCB		748261	0					
ANR	749369	ArgumentList	"""anal.trycatch"""		748261	1					
ANR	749370	Argument	"""anal.trycatch"""		748261	0					
ANR	749371	PrimaryExpression	"""anal.trycatch"""		748261	0					
ANR	749372	Argument	"""false"""		748261	1					
ANR	749373	PrimaryExpression	"""false"""		748261	0					
ANR	749374	Argument	& cb_anal_trycatch		748261	2					
ANR	749375	UnaryOperationExpression	& cb_anal_trycatch		748261	0					
ANR	749376	UnaryOperator	&		748261	0					
ANR	749377	Identifier	cb_anal_trycatch		748261	1					
ANR	749378	Argument	"""Honor try.X.Y.{from,to,catch} flags"""		748261	3					
ANR	749379	PrimaryExpression	"""Honor try.X.Y.{from,to,catch} flags"""		748261	0					
ANR	749380	ExpressionStatement	"SETCB ( ""anal.bb.maxsize"" , ""512K"" , & cb_anal_bb_max_size , ""Maximum basic block size"" )"	2862:1:82043:82126	748261	71	True				
ANR	749381	CallExpression	"SETCB ( ""anal.bb.maxsize"" , ""512K"" , & cb_anal_bb_max_size , ""Maximum basic block size"" )"		748261	0					
ANR	749382	Callee	SETCB		748261	0					
ANR	749383	Identifier	SETCB		748261	0					
ANR	749384	ArgumentList	"""anal.bb.maxsize"""		748261	1					
ANR	749385	Argument	"""anal.bb.maxsize"""		748261	0					
ANR	749386	PrimaryExpression	"""anal.bb.maxsize"""		748261	0					
ANR	749387	Argument	"""512K"""		748261	1					
ANR	749388	PrimaryExpression	"""512K"""		748261	0					
ANR	749389	Argument	& cb_anal_bb_max_size		748261	2					
ANR	749390	UnaryOperationExpression	& cb_anal_bb_max_size		748261	0					
ANR	749391	UnaryOperator	&		748261	0					
ANR	749392	Identifier	cb_anal_bb_max_size		748261	1					
ANR	749393	Argument	"""Maximum basic block size"""		748261	3					
ANR	749394	PrimaryExpression	"""Maximum basic block size"""		748261	0					
ANR	749395	ExpressionStatement	"SETCB ( ""anal.pushret"" , ""false"" , & cb_anal_pushret , ""Analyze push+ret as jmp"" )"	2863:1:82129:82205	748261	72	True				
ANR	749396	CallExpression	"SETCB ( ""anal.pushret"" , ""false"" , & cb_anal_pushret , ""Analyze push+ret as jmp"" )"		748261	0					
ANR	749397	Callee	SETCB		748261	0					
ANR	749398	Identifier	SETCB		748261	0					
ANR	749399	ArgumentList	"""anal.pushret"""		748261	1					
ANR	749400	Argument	"""anal.pushret"""		748261	0					
ANR	749401	PrimaryExpression	"""anal.pushret"""		748261	0					
ANR	749402	Argument	"""false"""		748261	1					
ANR	749403	PrimaryExpression	"""false"""		748261	0					
ANR	749404	Argument	& cb_anal_pushret		748261	2					
ANR	749405	UnaryOperationExpression	& cb_anal_pushret		748261	0					
ANR	749406	UnaryOperator	&		748261	0					
ANR	749407	Identifier	cb_anal_pushret		748261	1					
ANR	749408	Argument	"""Analyze push+ret as jmp"""		748261	3					
ANR	749409	PrimaryExpression	"""Analyze push+ret as jmp"""		748261	0					
ANR	749410	ExpressionStatement	"n = NODECB ( ""anal.cpp.abi"" , ""itanium"" , & cb_anal_cpp_abi )"	2865:1:82209:82265	748261	73	True				
ANR	749411	AssignmentExpression	"n = NODECB ( ""anal.cpp.abi"" , ""itanium"" , & cb_anal_cpp_abi )"		748261	0		=			
ANR	749412	Identifier	n		748261	0					
ANR	749413	CallExpression	"NODECB ( ""anal.cpp.abi"" , ""itanium"" , & cb_anal_cpp_abi )"		748261	1					
ANR	749414	Callee	NODECB		748261	0					
ANR	749415	Identifier	NODECB		748261	0					
ANR	749416	ArgumentList	"""anal.cpp.abi"""		748261	1					
ANR	749417	Argument	"""anal.cpp.abi"""		748261	0					
ANR	749418	PrimaryExpression	"""anal.cpp.abi"""		748261	0					
ANR	749419	Argument	"""itanium"""		748261	1					
ANR	749420	PrimaryExpression	"""itanium"""		748261	0					
ANR	749421	Argument	& cb_anal_cpp_abi		748261	2					
ANR	749422	UnaryOperationExpression	& cb_anal_cpp_abi		748261	0					
ANR	749423	UnaryOperator	&		748261	0					
ANR	749424	Identifier	cb_anal_cpp_abi		748261	1					
ANR	749425	ExpressionStatement	"SETDESC ( n , ""Select C++ ABI (Compiler)"" )"	2866:1:82268:82308	748261	74	True				
ANR	749426	CallExpression	"SETDESC ( n , ""Select C++ ABI (Compiler)"" )"		748261	0					
ANR	749427	Callee	SETDESC		748261	0					
ANR	749428	Identifier	SETDESC		748261	0					
ANR	749429	ArgumentList	n		748261	1					
ANR	749430	Argument	n		748261	0					
ANR	749431	Identifier	n		748261	0					
ANR	749432	Argument	"""Select C++ ABI (Compiler)"""		748261	1					
ANR	749433	PrimaryExpression	"""Select C++ ABI (Compiler)"""		748261	0					
ANR	749434	ExpressionStatement	"SETOPTIONS ( n , ""itanium"" , ""msvc"" , NULL )"	2867:1:82311:82350	748261	75	True				
ANR	749435	CallExpression	"SETOPTIONS ( n , ""itanium"" , ""msvc"" , NULL )"		748261	0					
ANR	749436	Callee	SETOPTIONS		748261	0					
ANR	749437	Identifier	SETOPTIONS		748261	0					
ANR	749438	ArgumentList	n		748261	1					
ANR	749439	Argument	n		748261	0					
ANR	749440	Identifier	n		748261	0					
ANR	749441	Argument	"""itanium"""		748261	1					
ANR	749442	PrimaryExpression	"""itanium"""		748261	0					
ANR	749443	Argument	"""msvc"""		748261	2					
ANR	749444	PrimaryExpression	"""msvc"""		748261	0					
ANR	749445	Argument	NULL		748261	3					
ANR	749446	Identifier	NULL		748261	0					
ANR	749447	ExpressionStatement	"SETCB ( ""dbg.malloc"" , ""glibc"" , & cb_malloc , ""Choose malloc structure parser"" )"	2870:2:82420:82495	748261	76	True				
ANR	749448	CallExpression	"SETCB ( ""dbg.malloc"" , ""glibc"" , & cb_malloc , ""Choose malloc structure parser"" )"		748261	0					
ANR	749449	Callee	SETCB		748261	0					
ANR	749450	Identifier	SETCB		748261	0					
ANR	749451	ArgumentList	"""dbg.malloc"""		748261	1					
ANR	749452	Argument	"""dbg.malloc"""		748261	0					
ANR	749453	PrimaryExpression	"""dbg.malloc"""		748261	0					
ANR	749454	Argument	"""glibc"""		748261	1					
ANR	749455	PrimaryExpression	"""glibc"""		748261	0					
ANR	749456	Argument	& cb_malloc		748261	2					
ANR	749457	UnaryOperationExpression	& cb_malloc		748261	0					
ANR	749458	UnaryOperator	&		748261	0					
ANR	749459	Identifier	cb_malloc		748261	1					
ANR	749460	Argument	"""Choose malloc structure parser"""		748261	3					
ANR	749461	PrimaryExpression	"""Choose malloc structure parser"""		748261	0					
ANR	749462	ExpressionStatement	"SETPREF ( ""dbg.glibc.tcache"" , ""true"" , ""Set glib tcache parsing"" )"	2875:1:82617:82680	748261	77	True				
ANR	749463	CallExpression	"SETPREF ( ""dbg.glibc.tcache"" , ""true"" , ""Set glib tcache parsing"" )"		748261	0					
ANR	749464	Callee	SETPREF		748261	0					
ANR	749465	Identifier	SETPREF		748261	0					
ANR	749466	ArgumentList	"""dbg.glibc.tcache"""		748261	1					
ANR	749467	Argument	"""dbg.glibc.tcache"""		748261	0					
ANR	749468	PrimaryExpression	"""dbg.glibc.tcache"""		748261	0					
ANR	749469	Argument	"""true"""		748261	1					
ANR	749470	PrimaryExpression	"""true"""		748261	0					
ANR	749471	Argument	"""Set glib tcache parsing"""		748261	2					
ANR	749472	PrimaryExpression	"""Set glib tcache parsing"""		748261	0					
ANR	749473	ExpressionStatement	"SETI ( ""dbg.glibc.ma_offset"" , 0x000000 , ""Main_arena offset from his symbol"" )"	2880:1:82778:82853	748261	78	True				
ANR	749474	CallExpression	"SETI ( ""dbg.glibc.ma_offset"" , 0x000000 , ""Main_arena offset from his symbol"" )"		748261	0					
ANR	749475	Callee	SETI		748261	0					
ANR	749476	Identifier	SETI		748261	0					
ANR	749477	ArgumentList	"""dbg.glibc.ma_offset"""		748261	1					
ANR	749478	Argument	"""dbg.glibc.ma_offset"""		748261	0					
ANR	749479	PrimaryExpression	"""dbg.glibc.ma_offset"""		748261	0					
ANR	749480	Argument	0x000000		748261	1					
ANR	749481	PrimaryExpression	0x000000		748261	0					
ANR	749482	Argument	"""Main_arena offset from his symbol"""		748261	2					
ANR	749483	PrimaryExpression	"""Main_arena offset from his symbol"""		748261	0					
ANR	749484	ExpressionStatement	"SETI ( ""dbg.glibc.fc_offset"" , 0x00240 , ""First chunk offset from brk_start"" )"	2881:1:82856:82930	748261	79	True				
ANR	749485	CallExpression	"SETI ( ""dbg.glibc.fc_offset"" , 0x00240 , ""First chunk offset from brk_start"" )"		748261	0					
ANR	749486	Callee	SETI		748261	0					
ANR	749487	Identifier	SETI		748261	0					
ANR	749488	ArgumentList	"""dbg.glibc.fc_offset"""		748261	1					
ANR	749489	Argument	"""dbg.glibc.fc_offset"""		748261	0					
ANR	749490	PrimaryExpression	"""dbg.glibc.fc_offset"""		748261	0					
ANR	749491	Argument	0x00240		748261	1					
ANR	749492	PrimaryExpression	0x00240		748261	0					
ANR	749493	Argument	"""First chunk offset from brk_start"""		748261	2					
ANR	749494	PrimaryExpression	"""First chunk offset from brk_start"""		748261	0					
ANR	749495	ExpressionStatement	"SETPREF ( ""dbg.libc.dbglib"" , """" , ""Set libc debug library file"" )"	2886:1:83099:83161	748261	80	True				
ANR	749496	CallExpression	"SETPREF ( ""dbg.libc.dbglib"" , """" , ""Set libc debug library file"" )"		748261	0					
ANR	749497	Callee	SETPREF		748261	0					
ANR	749498	Identifier	SETPREF		748261	0					
ANR	749499	ArgumentList	"""dbg.libc.dbglib"""		748261	1					
ANR	749500	Argument	"""dbg.libc.dbglib"""		748261	0					
ANR	749501	PrimaryExpression	"""dbg.libc.dbglib"""		748261	0					
ANR	749502	Argument	""""""		748261	1					
ANR	749503	PrimaryExpression	""""""		748261	0					
ANR	749504	Argument	"""Set libc debug library file"""		748261	2					
ANR	749505	PrimaryExpression	"""Set libc debug library file"""		748261	0					
ANR	749506	ExpressionStatement	"SETPREF ( ""esil.prestep"" , ""true"" , ""Step before esil evaluation in `de` commands"" )"	2888:1:83165:83245	748261	81	True				
ANR	749507	CallExpression	"SETPREF ( ""esil.prestep"" , ""true"" , ""Step before esil evaluation in `de` commands"" )"		748261	0					
ANR	749508	Callee	SETPREF		748261	0					
ANR	749509	Identifier	SETPREF		748261	0					
ANR	749510	ArgumentList	"""esil.prestep"""		748261	1					
ANR	749511	Argument	"""esil.prestep"""		748261	0					
ANR	749512	PrimaryExpression	"""esil.prestep"""		748261	0					
ANR	749513	Argument	"""true"""		748261	1					
ANR	749514	PrimaryExpression	"""true"""		748261	0					
ANR	749515	Argument	"""Step before esil evaluation in `de` commands"""		748261	2					
ANR	749516	PrimaryExpression	"""Step before esil evaluation in `de` commands"""		748261	0					
ANR	749517	ExpressionStatement	"SETPREF ( ""esil.fillstack"" , """" , ""Initialize ESIL stack with (random, debrujn, sequence, zeros, ...)"" )"	2889:1:83248:83348	748261	82	True				
ANR	749518	CallExpression	"SETPREF ( ""esil.fillstack"" , """" , ""Initialize ESIL stack with (random, debrujn, sequence, zeros, ...)"" )"		748261	0					
ANR	749519	Callee	SETPREF		748261	0					
ANR	749520	Identifier	SETPREF		748261	0					
ANR	749521	ArgumentList	"""esil.fillstack"""		748261	1					
ANR	749522	Argument	"""esil.fillstack"""		748261	0					
ANR	749523	PrimaryExpression	"""esil.fillstack"""		748261	0					
ANR	749524	Argument	""""""		748261	1					
ANR	749525	PrimaryExpression	""""""		748261	0					
ANR	749526	Argument	"""Initialize ESIL stack with (random, debrujn, sequence, zeros, ...)"""		748261	2					
ANR	749527	PrimaryExpression	"""Initialize ESIL stack with (random, debrujn, sequence, zeros, ...)"""		748261	0					
ANR	749528	ExpressionStatement	"SETICB ( ""esil.verbose"" , 0 , & cb_esilverbose , ""Show ESIL verbose level (0, 1, 2)"" )"	2890:1:83351:83431	748261	83	True				
ANR	749529	CallExpression	"SETICB ( ""esil.verbose"" , 0 , & cb_esilverbose , ""Show ESIL verbose level (0, 1, 2)"" )"		748261	0					
ANR	749530	Callee	SETICB		748261	0					
ANR	749531	Identifier	SETICB		748261	0					
ANR	749532	ArgumentList	"""esil.verbose"""		748261	1					
ANR	749533	Argument	"""esil.verbose"""		748261	0					
ANR	749534	PrimaryExpression	"""esil.verbose"""		748261	0					
ANR	749535	Argument	0		748261	1					
ANR	749536	PrimaryExpression	0		748261	0					
ANR	749537	Argument	& cb_esilverbose		748261	2					
ANR	749538	UnaryOperationExpression	& cb_esilverbose		748261	0					
ANR	749539	UnaryOperator	&		748261	0					
ANR	749540	Identifier	cb_esilverbose		748261	1					
ANR	749541	Argument	"""Show ESIL verbose level (0, 1, 2)"""		748261	3					
ANR	749542	PrimaryExpression	"""Show ESIL verbose level (0, 1, 2)"""		748261	0					
ANR	749543	ExpressionStatement	"SETICB ( ""esil.gotolimit"" , core -> anal -> esil_goto_limit , & cb_gotolimit , ""Maximum number of gotos per ESIL expression"" )"	2891:1:83434:83550	748261	84	True				
ANR	749544	CallExpression	"SETICB ( ""esil.gotolimit"" , core -> anal -> esil_goto_limit , & cb_gotolimit , ""Maximum number of gotos per ESIL expression"" )"		748261	0					
ANR	749545	Callee	SETICB		748261	0					
ANR	749546	Identifier	SETICB		748261	0					
ANR	749547	ArgumentList	"""esil.gotolimit"""		748261	1					
ANR	749548	Argument	"""esil.gotolimit"""		748261	0					
ANR	749549	PrimaryExpression	"""esil.gotolimit"""		748261	0					
ANR	749550	Argument	core -> anal -> esil_goto_limit		748261	1					
ANR	749551	PtrMemberAccess	core -> anal -> esil_goto_limit		748261	0					
ANR	749552	PtrMemberAccess	core -> anal		748261	0					
ANR	749553	Identifier	core		748261	0					
ANR	749554	Identifier	anal		748261	1					
ANR	749555	Identifier	esil_goto_limit		748261	1					
ANR	749556	Argument	& cb_gotolimit		748261	2					
ANR	749557	UnaryOperationExpression	& cb_gotolimit		748261	0					
ANR	749558	UnaryOperator	&		748261	0					
ANR	749559	Identifier	cb_gotolimit		748261	1					
ANR	749560	Argument	"""Maximum number of gotos per ESIL expression"""		748261	3					
ANR	749561	PrimaryExpression	"""Maximum number of gotos per ESIL expression"""		748261	0					
ANR	749562	ExpressionStatement	"SETICB ( ""esil.stack.depth"" , 32 , & cb_esilstackdepth , ""Number of elements that can be pushed on the esilstack"" )"	2892:1:83553:83662	748261	85	True				
ANR	749563	CallExpression	"SETICB ( ""esil.stack.depth"" , 32 , & cb_esilstackdepth , ""Number of elements that can be pushed on the esilstack"" )"		748261	0					
ANR	749564	Callee	SETICB		748261	0					
ANR	749565	Identifier	SETICB		748261	0					
ANR	749566	ArgumentList	"""esil.stack.depth"""		748261	1					
ANR	749567	Argument	"""esil.stack.depth"""		748261	0					
ANR	749568	PrimaryExpression	"""esil.stack.depth"""		748261	0					
ANR	749569	Argument	32		748261	1					
ANR	749570	PrimaryExpression	32		748261	0					
ANR	749571	Argument	& cb_esilstackdepth		748261	2					
ANR	749572	UnaryOperationExpression	& cb_esilstackdepth		748261	0					
ANR	749573	UnaryOperator	&		748261	0					
ANR	749574	Identifier	cb_esilstackdepth		748261	1					
ANR	749575	Argument	"""Number of elements that can be pushed on the esilstack"""		748261	3					
ANR	749576	PrimaryExpression	"""Number of elements that can be pushed on the esilstack"""		748261	0					
ANR	749577	ExpressionStatement	"SETI ( ""esil.stack.size"" , 0xf0000 , ""Set stack size in ESIL VM"" )"	2893:1:83665:83727	748261	86	True				
ANR	749578	CallExpression	"SETI ( ""esil.stack.size"" , 0xf0000 , ""Set stack size in ESIL VM"" )"		748261	0					
ANR	749579	Callee	SETI		748261	0					
ANR	749580	Identifier	SETI		748261	0					
ANR	749581	ArgumentList	"""esil.stack.size"""		748261	1					
ANR	749582	Argument	"""esil.stack.size"""		748261	0					
ANR	749583	PrimaryExpression	"""esil.stack.size"""		748261	0					
ANR	749584	Argument	0xf0000		748261	1					
ANR	749585	PrimaryExpression	0xf0000		748261	0					
ANR	749586	Argument	"""Set stack size in ESIL VM"""		748261	2					
ANR	749587	PrimaryExpression	"""Set stack size in ESIL VM"""		748261	0					
ANR	749588	ExpressionStatement	"SETI ( ""esil.stack.addr"" , 0x100000 , ""Set stack address in ESIL VM"" )"	2894:1:83730:83796	748261	87	True				
ANR	749589	CallExpression	"SETI ( ""esil.stack.addr"" , 0x100000 , ""Set stack address in ESIL VM"" )"		748261	0					
ANR	749590	Callee	SETI		748261	0					
ANR	749591	Identifier	SETI		748261	0					
ANR	749592	ArgumentList	"""esil.stack.addr"""		748261	1					
ANR	749593	Argument	"""esil.stack.addr"""		748261	0					
ANR	749594	PrimaryExpression	"""esil.stack.addr"""		748261	0					
ANR	749595	Argument	0x100000		748261	1					
ANR	749596	PrimaryExpression	0x100000		748261	0					
ANR	749597	Argument	"""Set stack address in ESIL VM"""		748261	2					
ANR	749598	PrimaryExpression	"""Set stack address in ESIL VM"""		748261	0					
ANR	749599	ExpressionStatement	"SETPREF ( ""esil.stack.pattern"" , ""0"" , ""Specify fill pattern to initialize the stack (0, w, d, i)"" )"	2895:1:83799:83895	748261	88	True				
ANR	749600	CallExpression	"SETPREF ( ""esil.stack.pattern"" , ""0"" , ""Specify fill pattern to initialize the stack (0, w, d, i)"" )"		748261	0					
ANR	749601	Callee	SETPREF		748261	0					
ANR	749602	Identifier	SETPREF		748261	0					
ANR	749603	ArgumentList	"""esil.stack.pattern"""		748261	1					
ANR	749604	Argument	"""esil.stack.pattern"""		748261	0					
ANR	749605	PrimaryExpression	"""esil.stack.pattern"""		748261	0					
ANR	749606	Argument	"""0"""		748261	1					
ANR	749607	PrimaryExpression	"""0"""		748261	0					
ANR	749608	Argument	"""Specify fill pattern to initialize the stack (0, w, d, i)"""		748261	2					
ANR	749609	PrimaryExpression	"""Specify fill pattern to initialize the stack (0, w, d, i)"""		748261	0					
ANR	749610	ExpressionStatement	"SETI ( ""esil.addr.size"" , 64 , ""Maximum address size in accessed by the ESIL VM"" )"	2896:1:83898:83976	748261	89	True				
ANR	749611	CallExpression	"SETI ( ""esil.addr.size"" , 64 , ""Maximum address size in accessed by the ESIL VM"" )"		748261	0					
ANR	749612	Callee	SETI		748261	0					
ANR	749613	Identifier	SETI		748261	0					
ANR	749614	ArgumentList	"""esil.addr.size"""		748261	1					
ANR	749615	Argument	"""esil.addr.size"""		748261	0					
ANR	749616	PrimaryExpression	"""esil.addr.size"""		748261	0					
ANR	749617	Argument	64		748261	1					
ANR	749618	PrimaryExpression	64		748261	0					
ANR	749619	Argument	"""Maximum address size in accessed by the ESIL VM"""		748261	2					
ANR	749620	PrimaryExpression	"""Maximum address size in accessed by the ESIL VM"""		748261	0					
ANR	749621	ExpressionStatement	"SETPREF ( ""esil.breakoninvalid"" , ""false"" , ""Break esil execution when instruction is invalid"" )"	2897:1:83979:84071	748261	90	True				
ANR	749622	CallExpression	"SETPREF ( ""esil.breakoninvalid"" , ""false"" , ""Break esil execution when instruction is invalid"" )"		748261	0					
ANR	749623	Callee	SETPREF		748261	0					
ANR	749624	Identifier	SETPREF		748261	0					
ANR	749625	ArgumentList	"""esil.breakoninvalid"""		748261	1					
ANR	749626	Argument	"""esil.breakoninvalid"""		748261	0					
ANR	749627	PrimaryExpression	"""esil.breakoninvalid"""		748261	0					
ANR	749628	Argument	"""false"""		748261	1					
ANR	749629	PrimaryExpression	"""false"""		748261	0					
ANR	749630	Argument	"""Break esil execution when instruction is invalid"""		748261	2					
ANR	749631	PrimaryExpression	"""Break esil execution when instruction is invalid"""		748261	0					
ANR	749632	ExpressionStatement	"SETI ( ""esil.timeout"" , 0 , ""A timeout (in seconds) for when we should give up emulating"" )"	2898:1:84074:84161	748261	91	True				
ANR	749633	CallExpression	"SETI ( ""esil.timeout"" , 0 , ""A timeout (in seconds) for when we should give up emulating"" )"		748261	0					
ANR	749634	Callee	SETI		748261	0					
ANR	749635	Identifier	SETI		748261	0					
ANR	749636	ArgumentList	"""esil.timeout"""		748261	1					
ANR	749637	Argument	"""esil.timeout"""		748261	0					
ANR	749638	PrimaryExpression	"""esil.timeout"""		748261	0					
ANR	749639	Argument	0		748261	1					
ANR	749640	PrimaryExpression	0		748261	0					
ANR	749641	Argument	"""A timeout (in seconds) for when we should give up emulating"""		748261	2					
ANR	749642	PrimaryExpression	"""A timeout (in seconds) for when we should give up emulating"""		748261	0					
ANR	749643	ExpressionStatement	"n = NODECB ( ""asm.os"" , R_SYS_OS , & cb_asmos )"	2901:1:84235:84277	748261	92	True				
ANR	749644	AssignmentExpression	"n = NODECB ( ""asm.os"" , R_SYS_OS , & cb_asmos )"		748261	0		=			
ANR	749645	Identifier	n		748261	0					
ANR	749646	CallExpression	"NODECB ( ""asm.os"" , R_SYS_OS , & cb_asmos )"		748261	1					
ANR	749647	Callee	NODECB		748261	0					
ANR	749648	Identifier	NODECB		748261	0					
ANR	749649	ArgumentList	"""asm.os"""		748261	1					
ANR	749650	Argument	"""asm.os"""		748261	0					
ANR	749651	PrimaryExpression	"""asm.os"""		748261	0					
ANR	749652	Argument	R_SYS_OS		748261	1					
ANR	749653	Identifier	R_SYS_OS		748261	0					
ANR	749654	Argument	& cb_asmos		748261	2					
ANR	749655	UnaryOperationExpression	& cb_asmos		748261	0					
ANR	749656	UnaryOperator	&		748261	0					
ANR	749657	Identifier	cb_asmos		748261	1					
ANR	749658	ExpressionStatement	"SETDESC ( n , ""Select operating system (kernel)"" )"	2902:1:84280:84327	748261	93	True				
ANR	749659	CallExpression	"SETDESC ( n , ""Select operating system (kernel)"" )"		748261	0					
ANR	749660	Callee	SETDESC		748261	0					
ANR	749661	Identifier	SETDESC		748261	0					
ANR	749662	ArgumentList	n		748261	1					
ANR	749663	Argument	n		748261	0					
ANR	749664	Identifier	n		748261	0					
ANR	749665	Argument	"""Select operating system (kernel)"""		748261	1					
ANR	749666	PrimaryExpression	"""Select operating system (kernel)"""		748261	0					
ANR	749667	ExpressionStatement	"SETOPTIONS ( n , ""ios"" , ""dos"" , ""darwin"" , ""linux"" , ""freebsd"" , ""openbsd"" , ""netbsd"" , ""windows"" , ""s110"" , NULL )"	2903:1:84330:84434	748261	94	True				
ANR	749668	CallExpression	"SETOPTIONS ( n , ""ios"" , ""dos"" , ""darwin"" , ""linux"" , ""freebsd"" , ""openbsd"" , ""netbsd"" , ""windows"" , ""s110"" , NULL )"		748261	0					
ANR	749669	Callee	SETOPTIONS		748261	0					
ANR	749670	Identifier	SETOPTIONS		748261	0					
ANR	749671	ArgumentList	n		748261	1					
ANR	749672	Argument	n		748261	0					
ANR	749673	Identifier	n		748261	0					
ANR	749674	Argument	"""ios"""		748261	1					
ANR	749675	PrimaryExpression	"""ios"""		748261	0					
ANR	749676	Argument	"""dos"""		748261	2					
ANR	749677	PrimaryExpression	"""dos"""		748261	0					
ANR	749678	Argument	"""darwin"""		748261	3					
ANR	749679	PrimaryExpression	"""darwin"""		748261	0					
ANR	749680	Argument	"""linux"""		748261	4					
ANR	749681	PrimaryExpression	"""linux"""		748261	0					
ANR	749682	Argument	"""freebsd"""		748261	5					
ANR	749683	PrimaryExpression	"""freebsd"""		748261	0					
ANR	749684	Argument	"""openbsd"""		748261	6					
ANR	749685	PrimaryExpression	"""openbsd"""		748261	0					
ANR	749686	Argument	"""netbsd"""		748261	7					
ANR	749687	PrimaryExpression	"""netbsd"""		748261	0					
ANR	749688	Argument	"""windows"""		748261	8					
ANR	749689	PrimaryExpression	"""windows"""		748261	0					
ANR	749690	Argument	"""s110"""		748261	9					
ANR	749691	PrimaryExpression	"""s110"""		748261	0					
ANR	749692	Argument	NULL		748261	10					
ANR	749693	Identifier	NULL		748261	0					
ANR	749694	ExpressionStatement	"SETI ( ""asm.xrefs.fold"" , 5 , ""Maximum number of xrefs to be displayed as list (use columns above)"" )"	2904:1:84437:84535	748261	95	True				
ANR	749695	CallExpression	"SETI ( ""asm.xrefs.fold"" , 5 , ""Maximum number of xrefs to be displayed as list (use columns above)"" )"		748261	0					
ANR	749696	Callee	SETI		748261	0					
ANR	749697	Identifier	SETI		748261	0					
ANR	749698	ArgumentList	"""asm.xrefs.fold"""		748261	1					
ANR	749699	Argument	"""asm.xrefs.fold"""		748261	0					
ANR	749700	PrimaryExpression	"""asm.xrefs.fold"""		748261	0					
ANR	749701	Argument	5		748261	1					
ANR	749702	PrimaryExpression	5		748261	0					
ANR	749703	Argument	"""Maximum number of xrefs to be displayed as list (use columns above)"""		748261	2					
ANR	749704	PrimaryExpression	"""Maximum number of xrefs to be displayed as list (use columns above)"""		748261	0					
ANR	749705	ExpressionStatement	"SETPREF ( ""asm.xrefs.code"" , ""true"" , ""Show the code xrefs (generated by jumps instead of calls)"" )"	2905:1:84538:84634	748261	96	True				
ANR	749706	CallExpression	"SETPREF ( ""asm.xrefs.code"" , ""true"" , ""Show the code xrefs (generated by jumps instead of calls)"" )"		748261	0					
ANR	749707	Callee	SETPREF		748261	0					
ANR	749708	Identifier	SETPREF		748261	0					
ANR	749709	ArgumentList	"""asm.xrefs.code"""		748261	1					
ANR	749710	Argument	"""asm.xrefs.code"""		748261	0					
ANR	749711	PrimaryExpression	"""asm.xrefs.code"""		748261	0					
ANR	749712	Argument	"""true"""		748261	1					
ANR	749713	PrimaryExpression	"""true"""		748261	0					
ANR	749714	Argument	"""Show the code xrefs (generated by jumps instead of calls)"""		748261	2					
ANR	749715	PrimaryExpression	"""Show the code xrefs (generated by jumps instead of calls)"""		748261	0					
ANR	749716	ExpressionStatement	"SETI ( ""asm.xrefs.max"" , 20 , ""Maximum number of xrefs to be displayed without folding"" )"	2906:1:84637:84723	748261	97	True				
ANR	749717	CallExpression	"SETI ( ""asm.xrefs.max"" , 20 , ""Maximum number of xrefs to be displayed without folding"" )"		748261	0					
ANR	749718	Callee	SETI		748261	0					
ANR	749719	Identifier	SETI		748261	0					
ANR	749720	ArgumentList	"""asm.xrefs.max"""		748261	1					
ANR	749721	Argument	"""asm.xrefs.max"""		748261	0					
ANR	749722	PrimaryExpression	"""asm.xrefs.max"""		748261	0					
ANR	749723	Argument	20		748261	1					
ANR	749724	PrimaryExpression	20		748261	0					
ANR	749725	Argument	"""Maximum number of xrefs to be displayed without folding"""		748261	2					
ANR	749726	PrimaryExpression	"""Maximum number of xrefs to be displayed without folding"""		748261	0					
ANR	749727	ExpressionStatement	"SETCB ( ""asm.invhex"" , ""false"" , & cb_asm_invhex , ""Show invalid instructions as hexadecimal numbers"" )"	2907:1:84726:84823	748261	98	True				
ANR	749728	CallExpression	"SETCB ( ""asm.invhex"" , ""false"" , & cb_asm_invhex , ""Show invalid instructions as hexadecimal numbers"" )"		748261	0					
ANR	749729	Callee	SETCB		748261	0					
ANR	749730	Identifier	SETCB		748261	0					
ANR	749731	ArgumentList	"""asm.invhex"""		748261	1					
ANR	749732	Argument	"""asm.invhex"""		748261	0					
ANR	749733	PrimaryExpression	"""asm.invhex"""		748261	0					
ANR	749734	Argument	"""false"""		748261	1					
ANR	749735	PrimaryExpression	"""false"""		748261	0					
ANR	749736	Argument	& cb_asm_invhex		748261	2					
ANR	749737	UnaryOperationExpression	& cb_asm_invhex		748261	0					
ANR	749738	UnaryOperator	&		748261	0					
ANR	749739	Identifier	cb_asm_invhex		748261	1					
ANR	749740	Argument	"""Show invalid instructions as hexadecimal numbers"""		748261	3					
ANR	749741	PrimaryExpression	"""Show invalid instructions as hexadecimal numbers"""		748261	0					
ANR	749742	ExpressionStatement	"SETPREF ( ""asm.instr"" , ""true"" , ""Display the disassembled instruction"" )"	2908:1:84826:84895	748261	99	True				
ANR	749743	CallExpression	"SETPREF ( ""asm.instr"" , ""true"" , ""Display the disassembled instruction"" )"		748261	0					
ANR	749744	Callee	SETPREF		748261	0					
ANR	749745	Identifier	SETPREF		748261	0					
ANR	749746	ArgumentList	"""asm.instr"""		748261	1					
ANR	749747	Argument	"""asm.instr"""		748261	0					
ANR	749748	PrimaryExpression	"""asm.instr"""		748261	0					
ANR	749749	Argument	"""true"""		748261	1					
ANR	749750	PrimaryExpression	"""true"""		748261	0					
ANR	749751	Argument	"""Display the disassembled instruction"""		748261	2					
ANR	749752	PrimaryExpression	"""Display the disassembled instruction"""		748261	0					
ANR	749753	ExpressionStatement	"SETPREF ( ""asm.meta"" , ""true"" , ""Display the code/data/format conversions in disasm"" )"	2909:1:84898:84980	748261	100	True				
ANR	749754	CallExpression	"SETPREF ( ""asm.meta"" , ""true"" , ""Display the code/data/format conversions in disasm"" )"		748261	0					
ANR	749755	Callee	SETPREF		748261	0					
ANR	749756	Identifier	SETPREF		748261	0					
ANR	749757	ArgumentList	"""asm.meta"""		748261	1					
ANR	749758	Argument	"""asm.meta"""		748261	0					
ANR	749759	PrimaryExpression	"""asm.meta"""		748261	0					
ANR	749760	Argument	"""true"""		748261	1					
ANR	749761	PrimaryExpression	"""true"""		748261	0					
ANR	749762	Argument	"""Display the code/data/format conversions in disasm"""		748261	2					
ANR	749763	PrimaryExpression	"""Display the code/data/format conversions in disasm"""		748261	0					
ANR	749764	ExpressionStatement	"SETPREF ( ""asm.bytes"" , ""true"" , ""Display the bytes of each instruction"" )"	2910:1:84983:85053	748261	101	True				
ANR	749765	CallExpression	"SETPREF ( ""asm.bytes"" , ""true"" , ""Display the bytes of each instruction"" )"		748261	0					
ANR	749766	Callee	SETPREF		748261	0					
ANR	749767	Identifier	SETPREF		748261	0					
ANR	749768	ArgumentList	"""asm.bytes"""		748261	1					
ANR	749769	Argument	"""asm.bytes"""		748261	0					
ANR	749770	PrimaryExpression	"""asm.bytes"""		748261	0					
ANR	749771	Argument	"""true"""		748261	1					
ANR	749772	PrimaryExpression	"""true"""		748261	0					
ANR	749773	Argument	"""Display the bytes of each instruction"""		748261	2					
ANR	749774	PrimaryExpression	"""Display the bytes of each instruction"""		748261	0					
ANR	749775	ExpressionStatement	"SETI ( ""asm.types"" , 1 , ""Display the fcn types in calls (0=no,1=quiet,2=verbose)"" )"	2911:1:85056:85136	748261	102	True				
ANR	749776	CallExpression	"SETI ( ""asm.types"" , 1 , ""Display the fcn types in calls (0=no,1=quiet,2=verbose)"" )"		748261	0					
ANR	749777	Callee	SETI		748261	0					
ANR	749778	Identifier	SETI		748261	0					
ANR	749779	ArgumentList	"""asm.types"""		748261	1					
ANR	749780	Argument	"""asm.types"""		748261	0					
ANR	749781	PrimaryExpression	"""asm.types"""		748261	0					
ANR	749782	Argument	1		748261	1					
ANR	749783	PrimaryExpression	1		748261	0					
ANR	749784	Argument	"""Display the fcn types in calls (0=no,1=quiet,2=verbose)"""		748261	2					
ANR	749785	PrimaryExpression	"""Display the fcn types in calls (0=no,1=quiet,2=verbose)"""		748261	0					
ANR	749786	ExpressionStatement	"SETPREF ( ""asm.midcursor"" , ""false"" , ""Cursor in visual disasm mode breaks the instruction"" )"	2912:1:85139:85228	748261	103	True				
ANR	749787	CallExpression	"SETPREF ( ""asm.midcursor"" , ""false"" , ""Cursor in visual disasm mode breaks the instruction"" )"		748261	0					
ANR	749788	Callee	SETPREF		748261	0					
ANR	749789	Identifier	SETPREF		748261	0					
ANR	749790	ArgumentList	"""asm.midcursor"""		748261	1					
ANR	749791	Argument	"""asm.midcursor"""		748261	0					
ANR	749792	PrimaryExpression	"""asm.midcursor"""		748261	0					
ANR	749793	Argument	"""false"""		748261	1					
ANR	749794	PrimaryExpression	"""false"""		748261	0					
ANR	749795	Argument	"""Cursor in visual disasm mode breaks the instruction"""		748261	2					
ANR	749796	PrimaryExpression	"""Cursor in visual disasm mode breaks the instruction"""		748261	0					
ANR	749797	ExpressionStatement	"SETPREF ( ""asm.cmt.flgrefs"" , ""true"" , ""Show comment flags associated to branch reference"" )"	2913:1:85231:85319	748261	104	True				
ANR	749798	CallExpression	"SETPREF ( ""asm.cmt.flgrefs"" , ""true"" , ""Show comment flags associated to branch reference"" )"		748261	0					
ANR	749799	Callee	SETPREF		748261	0					
ANR	749800	Identifier	SETPREF		748261	0					
ANR	749801	ArgumentList	"""asm.cmt.flgrefs"""		748261	1					
ANR	749802	Argument	"""asm.cmt.flgrefs"""		748261	0					
ANR	749803	PrimaryExpression	"""asm.cmt.flgrefs"""		748261	0					
ANR	749804	Argument	"""true"""		748261	1					
ANR	749805	PrimaryExpression	"""true"""		748261	0					
ANR	749806	Argument	"""Show comment flags associated to branch reference"""		748261	2					
ANR	749807	PrimaryExpression	"""Show comment flags associated to branch reference"""		748261	0					
ANR	749808	ExpressionStatement	"SETPREF ( ""asm.cmt.right"" , ""true"" , ""Show comments at right of disassembly if they fit in screen"" )"	2914:1:85322:85418	748261	105	True				
ANR	749809	CallExpression	"SETPREF ( ""asm.cmt.right"" , ""true"" , ""Show comments at right of disassembly if they fit in screen"" )"		748261	0					
ANR	749810	Callee	SETPREF		748261	0					
ANR	749811	Identifier	SETPREF		748261	0					
ANR	749812	ArgumentList	"""asm.cmt.right"""		748261	1					
ANR	749813	Argument	"""asm.cmt.right"""		748261	0					
ANR	749814	PrimaryExpression	"""asm.cmt.right"""		748261	0					
ANR	749815	Argument	"""true"""		748261	1					
ANR	749816	PrimaryExpression	"""true"""		748261	0					
ANR	749817	Argument	"""Show comments at right of disassembly if they fit in screen"""		748261	2					
ANR	749818	PrimaryExpression	"""Show comments at right of disassembly if they fit in screen"""		748261	0					
ANR	749819	ExpressionStatement	"SETI ( ""asm.cmt.col"" , 71 , ""Column to align comments"" )"	2915:1:85421:85473	748261	106	True				
ANR	749820	CallExpression	"SETI ( ""asm.cmt.col"" , 71 , ""Column to align comments"" )"		748261	0					
ANR	749821	Callee	SETI		748261	0					
ANR	749822	Identifier	SETI		748261	0					
ANR	749823	ArgumentList	"""asm.cmt.col"""		748261	1					
ANR	749824	Argument	"""asm.cmt.col"""		748261	0					
ANR	749825	PrimaryExpression	"""asm.cmt.col"""		748261	0					
ANR	749826	Argument	71		748261	1					
ANR	749827	PrimaryExpression	71		748261	0					
ANR	749828	Argument	"""Column to align comments"""		748261	2					
ANR	749829	PrimaryExpression	"""Column to align comments"""		748261	0					
ANR	749830	ExpressionStatement	"SETICB ( ""asm.pcalign"" , 0 , & cb_asm_pcalign , ""Only recognize as valid instructions aligned to this value"" )"	2916:1:85476:85580	748261	107	True				
ANR	749831	CallExpression	"SETICB ( ""asm.pcalign"" , 0 , & cb_asm_pcalign , ""Only recognize as valid instructions aligned to this value"" )"		748261	0					
ANR	749832	Callee	SETICB		748261	0					
ANR	749833	Identifier	SETICB		748261	0					
ANR	749834	ArgumentList	"""asm.pcalign"""		748261	1					
ANR	749835	Argument	"""asm.pcalign"""		748261	0					
ANR	749836	PrimaryExpression	"""asm.pcalign"""		748261	0					
ANR	749837	Argument	0		748261	1					
ANR	749838	PrimaryExpression	0		748261	0					
ANR	749839	Argument	& cb_asm_pcalign		748261	2					
ANR	749840	UnaryOperationExpression	& cb_asm_pcalign		748261	0					
ANR	749841	UnaryOperator	&		748261	0					
ANR	749842	Identifier	cb_asm_pcalign		748261	1					
ANR	749843	Argument	"""Only recognize as valid instructions aligned to this value"""		748261	3					
ANR	749844	PrimaryExpression	"""Only recognize as valid instructions aligned to this value"""		748261	0					
ANR	749845	ExpressionStatement	"SETPREF ( ""asm.calls"" , ""true"" , ""Show callee function related info as comments in disasm"" )"	2918:1:85617:85705	748261	108	True				
ANR	749846	CallExpression	"SETPREF ( ""asm.calls"" , ""true"" , ""Show callee function related info as comments in disasm"" )"		748261	0					
ANR	749847	Callee	SETPREF		748261	0					
ANR	749848	Identifier	SETPREF		748261	0					
ANR	749849	ArgumentList	"""asm.calls"""		748261	1					
ANR	749850	Argument	"""asm.calls"""		748261	0					
ANR	749851	PrimaryExpression	"""asm.calls"""		748261	0					
ANR	749852	Argument	"""true"""		748261	1					
ANR	749853	PrimaryExpression	"""true"""		748261	0					
ANR	749854	Argument	"""Show callee function related info as comments in disasm"""		748261	2					
ANR	749855	PrimaryExpression	"""Show callee function related info as comments in disasm"""		748261	0					
ANR	749856	ExpressionStatement	"SETPREF ( ""asm.comments"" , ""true"" , ""Show comments in disassembly view"" )"	2919:1:85708:85777	748261	109	True				
ANR	749857	CallExpression	"SETPREF ( ""asm.comments"" , ""true"" , ""Show comments in disassembly view"" )"		748261	0					
ANR	749858	Callee	SETPREF		748261	0					
ANR	749859	Identifier	SETPREF		748261	0					
ANR	749860	ArgumentList	"""asm.comments"""		748261	1					
ANR	749861	Argument	"""asm.comments"""		748261	0					
ANR	749862	PrimaryExpression	"""asm.comments"""		748261	0					
ANR	749863	Argument	"""true"""		748261	1					
ANR	749864	PrimaryExpression	"""true"""		748261	0					
ANR	749865	Argument	"""Show comments in disassembly view"""		748261	2					
ANR	749866	PrimaryExpression	"""Show comments in disassembly view"""		748261	0					
ANR	749867	ExpressionStatement	"SETPREF ( ""asm.usercomments"" , ""false"" , ""Show user comments even if asm.comments is false"" )"	2920:1:85780:85869	748261	110	True				
ANR	749868	CallExpression	"SETPREF ( ""asm.usercomments"" , ""false"" , ""Show user comments even if asm.comments is false"" )"		748261	0					
ANR	749869	Callee	SETPREF		748261	0					
ANR	749870	Identifier	SETPREF		748261	0					
ANR	749871	ArgumentList	"""asm.usercomments"""		748261	1					
ANR	749872	Argument	"""asm.usercomments"""		748261	0					
ANR	749873	PrimaryExpression	"""asm.usercomments"""		748261	0					
ANR	749874	Argument	"""false"""		748261	1					
ANR	749875	PrimaryExpression	"""false"""		748261	0					
ANR	749876	Argument	"""Show user comments even if asm.comments is false"""		748261	2					
ANR	749877	PrimaryExpression	"""Show user comments even if asm.comments is false"""		748261	0					
ANR	749878	ExpressionStatement	"SETPREF ( ""asm.jmpsub"" , ""true"" , ""Always substitute jump, call and branch targets in disassembly"" )"	2921:1:85872:85968	748261	111	True				
ANR	749879	CallExpression	"SETPREF ( ""asm.jmpsub"" , ""true"" , ""Always substitute jump, call and branch targets in disassembly"" )"		748261	0					
ANR	749880	Callee	SETPREF		748261	0					
ANR	749881	Identifier	SETPREF		748261	0					
ANR	749882	ArgumentList	"""asm.jmpsub"""		748261	1					
ANR	749883	Argument	"""asm.jmpsub"""		748261	0					
ANR	749884	PrimaryExpression	"""asm.jmpsub"""		748261	0					
ANR	749885	Argument	"""true"""		748261	1					
ANR	749886	PrimaryExpression	"""true"""		748261	0					
ANR	749887	Argument	"""Always substitute jump, call and branch targets in disassembly"""		748261	2					
ANR	749888	PrimaryExpression	"""Always substitute jump, call and branch targets in disassembly"""		748261	0					
ANR	749889	ExpressionStatement	"SETPREF ( ""asm.hints"" , ""true"" , ""Disable all asm.hint* if false"" )"	2922:1:85971:86034	748261	112	True				
ANR	749890	CallExpression	"SETPREF ( ""asm.hints"" , ""true"" , ""Disable all asm.hint* if false"" )"		748261	0					
ANR	749891	Callee	SETPREF		748261	0					
ANR	749892	Identifier	SETPREF		748261	0					
ANR	749893	ArgumentList	"""asm.hints"""		748261	1					
ANR	749894	Argument	"""asm.hints"""		748261	0					
ANR	749895	PrimaryExpression	"""asm.hints"""		748261	0					
ANR	749896	Argument	"""true"""		748261	1					
ANR	749897	PrimaryExpression	"""true"""		748261	0					
ANR	749898	Argument	"""Disable all asm.hint* if false"""		748261	2					
ANR	749899	PrimaryExpression	"""Disable all asm.hint* if false"""		748261	0					
ANR	749900	ExpressionStatement	"SETPREF ( ""asm.hint.jmp"" , ""false"" , ""Show jump hints [numbers] in disasm"" )"	2923:1:86037:86109	748261	113	True				
ANR	749901	CallExpression	"SETPREF ( ""asm.hint.jmp"" , ""false"" , ""Show jump hints [numbers] in disasm"" )"		748261	0					
ANR	749902	Callee	SETPREF		748261	0					
ANR	749903	Identifier	SETPREF		748261	0					
ANR	749904	ArgumentList	"""asm.hint.jmp"""		748261	1					
ANR	749905	Argument	"""asm.hint.jmp"""		748261	0					
ANR	749906	PrimaryExpression	"""asm.hint.jmp"""		748261	0					
ANR	749907	Argument	"""false"""		748261	1					
ANR	749908	PrimaryExpression	"""false"""		748261	0					
ANR	749909	Argument	"""Show jump hints [numbers] in disasm"""		748261	2					
ANR	749910	PrimaryExpression	"""Show jump hints [numbers] in disasm"""		748261	0					
ANR	749911	ExpressionStatement	"SETPREF ( ""asm.hint.call"" , ""true"" , ""Show call hints [numbers] in disarm"" )"	2924:1:86112:86184	748261	114	True				
ANR	749912	CallExpression	"SETPREF ( ""asm.hint.call"" , ""true"" , ""Show call hints [numbers] in disarm"" )"		748261	0					
ANR	749913	Callee	SETPREF		748261	0					
ANR	749914	Identifier	SETPREF		748261	0					
ANR	749915	ArgumentList	"""asm.hint.call"""		748261	1					
ANR	749916	Argument	"""asm.hint.call"""		748261	0					
ANR	749917	PrimaryExpression	"""asm.hint.call"""		748261	0					
ANR	749918	Argument	"""true"""		748261	1					
ANR	749919	PrimaryExpression	"""true"""		748261	0					
ANR	749920	Argument	"""Show call hints [numbers] in disarm"""		748261	2					
ANR	749921	PrimaryExpression	"""Show call hints [numbers] in disarm"""		748261	0					
ANR	749922	ExpressionStatement	"SETPREF ( ""asm.hint.lea"" , ""false"" , ""Show LEA hints [numbers] in disasm"" )"	2925:1:86187:86258	748261	115	True				
ANR	749923	CallExpression	"SETPREF ( ""asm.hint.lea"" , ""false"" , ""Show LEA hints [numbers] in disasm"" )"		748261	0					
ANR	749924	Callee	SETPREF		748261	0					
ANR	749925	Identifier	SETPREF		748261	0					
ANR	749926	ArgumentList	"""asm.hint.lea"""		748261	1					
ANR	749927	Argument	"""asm.hint.lea"""		748261	0					
ANR	749928	PrimaryExpression	"""asm.hint.lea"""		748261	0					
ANR	749929	Argument	"""false"""		748261	1					
ANR	749930	PrimaryExpression	"""false"""		748261	0					
ANR	749931	Argument	"""Show LEA hints [numbers] in disasm"""		748261	2					
ANR	749932	PrimaryExpression	"""Show LEA hints [numbers] in disasm"""		748261	0					
ANR	749933	ExpressionStatement	"SETPREF ( ""asm.hint.emu"" , ""false"" , ""Show asm.emu hints [numbers] in disasm"" )"	2926:1:86261:86336	748261	116	True				
ANR	749934	CallExpression	"SETPREF ( ""asm.hint.emu"" , ""false"" , ""Show asm.emu hints [numbers] in disasm"" )"		748261	0					
ANR	749935	Callee	SETPREF		748261	0					
ANR	749936	Identifier	SETPREF		748261	0					
ANR	749937	ArgumentList	"""asm.hint.emu"""		748261	1					
ANR	749938	Argument	"""asm.hint.emu"""		748261	0					
ANR	749939	PrimaryExpression	"""asm.hint.emu"""		748261	0					
ANR	749940	Argument	"""false"""		748261	1					
ANR	749941	PrimaryExpression	"""false"""		748261	0					
ANR	749942	Argument	"""Show asm.emu hints [numbers] in disasm"""		748261	2					
ANR	749943	PrimaryExpression	"""Show asm.emu hints [numbers] in disasm"""		748261	0					
ANR	749944	ExpressionStatement	"SETPREF ( ""asm.hint.cdiv"" , ""false"" , ""Show CDIV hints optimization hint"" )"	2927:1:86339:86410	748261	117	True				
ANR	749945	CallExpression	"SETPREF ( ""asm.hint.cdiv"" , ""false"" , ""Show CDIV hints optimization hint"" )"		748261	0					
ANR	749946	Callee	SETPREF		748261	0					
ANR	749947	Identifier	SETPREF		748261	0					
ANR	749948	ArgumentList	"""asm.hint.cdiv"""		748261	1					
ANR	749949	Argument	"""asm.hint.cdiv"""		748261	0					
ANR	749950	PrimaryExpression	"""asm.hint.cdiv"""		748261	0					
ANR	749951	Argument	"""false"""		748261	1					
ANR	749952	PrimaryExpression	"""false"""		748261	0					
ANR	749953	Argument	"""Show CDIV hints optimization hint"""		748261	2					
ANR	749954	PrimaryExpression	"""Show CDIV hints optimization hint"""		748261	0					
ANR	749955	ExpressionStatement	"SETI ( ""asm.hint.pos"" , 1 , ""Shortcut hint position (-1, 0, 1)"" )"	2928:1:86413:86474	748261	118	True				
ANR	749956	CallExpression	"SETI ( ""asm.hint.pos"" , 1 , ""Shortcut hint position (-1, 0, 1)"" )"		748261	0					
ANR	749957	Callee	SETI		748261	0					
ANR	749958	Identifier	SETI		748261	0					
ANR	749959	ArgumentList	"""asm.hint.pos"""		748261	1					
ANR	749960	Argument	"""asm.hint.pos"""		748261	0					
ANR	749961	PrimaryExpression	"""asm.hint.pos"""		748261	0					
ANR	749962	Argument	1		748261	1					
ANR	749963	PrimaryExpression	1		748261	0					
ANR	749964	Argument	"""Shortcut hint position (-1, 0, 1)"""		748261	2					
ANR	749965	PrimaryExpression	"""Shortcut hint position (-1, 0, 1)"""		748261	0					
ANR	749966	ExpressionStatement	"SETPREF ( ""asm.slow"" , ""true"" , ""Perform slow analysis operations in disasm"" )"	2929:1:86477:86551	748261	119	True				
ANR	749967	CallExpression	"SETPREF ( ""asm.slow"" , ""true"" , ""Perform slow analysis operations in disasm"" )"		748261	0					
ANR	749968	Callee	SETPREF		748261	0					
ANR	749969	Identifier	SETPREF		748261	0					
ANR	749970	ArgumentList	"""asm.slow"""		748261	1					
ANR	749971	Argument	"""asm.slow"""		748261	0					
ANR	749972	PrimaryExpression	"""asm.slow"""		748261	0					
ANR	749973	Argument	"""true"""		748261	1					
ANR	749974	PrimaryExpression	"""true"""		748261	0					
ANR	749975	Argument	"""Perform slow analysis operations in disasm"""		748261	2					
ANR	749976	PrimaryExpression	"""Perform slow analysis operations in disasm"""		748261	0					
ANR	749977	ExpressionStatement	"SETPREF ( ""asm.decode"" , ""false"" , ""Use code analysis as a disassembler"" )"	2930:1:86554:86624	748261	120	True				
ANR	749978	CallExpression	"SETPREF ( ""asm.decode"" , ""false"" , ""Use code analysis as a disassembler"" )"		748261	0					
ANR	749979	Callee	SETPREF		748261	0					
ANR	749980	Identifier	SETPREF		748261	0					
ANR	749981	ArgumentList	"""asm.decode"""		748261	1					
ANR	749982	Argument	"""asm.decode"""		748261	0					
ANR	749983	PrimaryExpression	"""asm.decode"""		748261	0					
ANR	749984	Argument	"""false"""		748261	1					
ANR	749985	PrimaryExpression	"""false"""		748261	0					
ANR	749986	Argument	"""Use code analysis as a disassembler"""		748261	2					
ANR	749987	PrimaryExpression	"""Use code analysis as a disassembler"""		748261	0					
ANR	749988	ExpressionStatement	"SETICB ( ""asm.imm.arm"" , false , & cb_asm_armimm , ""Display # for immediates in ARM"" )"	2931:1:86627:86708	748261	121	True				
ANR	749989	CallExpression	"SETICB ( ""asm.imm.arm"" , false , & cb_asm_armimm , ""Display # for immediates in ARM"" )"		748261	0					
ANR	749990	Callee	SETICB		748261	0					
ANR	749991	Identifier	SETICB		748261	0					
ANR	749992	ArgumentList	"""asm.imm.arm"""		748261	1					
ANR	749993	Argument	"""asm.imm.arm"""		748261	0					
ANR	749994	PrimaryExpression	"""asm.imm.arm"""		748261	0					
ANR	749995	Argument	false		748261	1					
ANR	749996	Identifier	false		748261	0					
ANR	749997	Argument	& cb_asm_armimm		748261	2					
ANR	749998	UnaryOperationExpression	& cb_asm_armimm		748261	0					
ANR	749999	UnaryOperator	&		748261	0					
ANR	750000	Identifier	cb_asm_armimm		748261	1					
ANR	750001	Argument	"""Display # for immediates in ARM"""		748261	3					
ANR	750002	PrimaryExpression	"""Display # for immediates in ARM"""		748261	0					
ANR	750003	ExpressionStatement	"SETPREF ( ""asm.imm.str"" , ""true"" , ""Show immediates values as strings"" )"	2932:1:86711:86779	748261	122	True				
ANR	750004	CallExpression	"SETPREF ( ""asm.imm.str"" , ""true"" , ""Show immediates values as strings"" )"		748261	0					
ANR	750005	Callee	SETPREF		748261	0					
ANR	750006	Identifier	SETPREF		748261	0					
ANR	750007	ArgumentList	"""asm.imm.str"""		748261	1					
ANR	750008	Argument	"""asm.imm.str"""		748261	0					
ANR	750009	PrimaryExpression	"""asm.imm.str"""		748261	0					
ANR	750010	Argument	"""true"""		748261	1					
ANR	750011	PrimaryExpression	"""true"""		748261	0					
ANR	750012	Argument	"""Show immediates values as strings"""		748261	2					
ANR	750013	PrimaryExpression	"""Show immediates values as strings"""		748261	0					
ANR	750014	ExpressionStatement	"SETPREF ( ""asm.imm.trim"" , ""false"" , ""Remove all offsets and constants from disassembly"" )"	2933:1:86782:86868	748261	123	True				
ANR	750015	CallExpression	"SETPREF ( ""asm.imm.trim"" , ""false"" , ""Remove all offsets and constants from disassembly"" )"		748261	0					
ANR	750016	Callee	SETPREF		748261	0					
ANR	750017	Identifier	SETPREF		748261	0					
ANR	750018	ArgumentList	"""asm.imm.trim"""		748261	1					
ANR	750019	Argument	"""asm.imm.trim"""		748261	0					
ANR	750020	PrimaryExpression	"""asm.imm.trim"""		748261	0					
ANR	750021	Argument	"""false"""		748261	1					
ANR	750022	PrimaryExpression	"""false"""		748261	0					
ANR	750023	Argument	"""Remove all offsets and constants from disassembly"""		748261	2					
ANR	750024	PrimaryExpression	"""Remove all offsets and constants from disassembly"""		748261	0					
ANR	750025	ExpressionStatement	"SETPREF ( ""asm.indent"" , ""false"" , ""Indent disassembly based on reflines depth"" )"	2934:1:86871:86948	748261	124	True				
ANR	750026	CallExpression	"SETPREF ( ""asm.indent"" , ""false"" , ""Indent disassembly based on reflines depth"" )"		748261	0					
ANR	750027	Callee	SETPREF		748261	0					
ANR	750028	Identifier	SETPREF		748261	0					
ANR	750029	ArgumentList	"""asm.indent"""		748261	1					
ANR	750030	Argument	"""asm.indent"""		748261	0					
ANR	750031	PrimaryExpression	"""asm.indent"""		748261	0					
ANR	750032	Argument	"""false"""		748261	1					
ANR	750033	PrimaryExpression	"""false"""		748261	0					
ANR	750034	Argument	"""Indent disassembly based on reflines depth"""		748261	2					
ANR	750035	PrimaryExpression	"""Indent disassembly based on reflines depth"""		748261	0					
ANR	750036	ExpressionStatement	"SETI ( ""asm.indentspace"" , 2 , ""How many spaces to indent the code"" )"	2935:1:86951:87016	748261	125	True				
ANR	750037	CallExpression	"SETI ( ""asm.indentspace"" , 2 , ""How many spaces to indent the code"" )"		748261	0					
ANR	750038	Callee	SETI		748261	0					
ANR	750039	Identifier	SETI		748261	0					
ANR	750040	ArgumentList	"""asm.indentspace"""		748261	1					
ANR	750041	Argument	"""asm.indentspace"""		748261	0					
ANR	750042	PrimaryExpression	"""asm.indentspace"""		748261	0					
ANR	750043	Argument	2		748261	1					
ANR	750044	PrimaryExpression	2		748261	0					
ANR	750045	Argument	"""How many spaces to indent the code"""		748261	2					
ANR	750046	PrimaryExpression	"""How many spaces to indent the code"""		748261	0					
ANR	750047	ExpressionStatement	"SETPREF ( ""asm.dwarf"" , ""false"" , ""Show dwarf comment at disassembly"" )"	2936:1:87019:87086	748261	126	True				
ANR	750048	CallExpression	"SETPREF ( ""asm.dwarf"" , ""false"" , ""Show dwarf comment at disassembly"" )"		748261	0					
ANR	750049	Callee	SETPREF		748261	0					
ANR	750050	Identifier	SETPREF		748261	0					
ANR	750051	ArgumentList	"""asm.dwarf"""		748261	1					
ANR	750052	Argument	"""asm.dwarf"""		748261	0					
ANR	750053	PrimaryExpression	"""asm.dwarf"""		748261	0					
ANR	750054	Argument	"""false"""		748261	1					
ANR	750055	PrimaryExpression	"""false"""		748261	0					
ANR	750056	Argument	"""Show dwarf comment at disassembly"""		748261	2					
ANR	750057	PrimaryExpression	"""Show dwarf comment at disassembly"""		748261	0					
ANR	750058	ExpressionStatement	"SETPREF ( ""asm.dwarf.abspath"" , ""false"" , ""Show absolute path in asm.dwarf"" )"	2937:1:87089:87162	748261	127	True				
ANR	750059	CallExpression	"SETPREF ( ""asm.dwarf.abspath"" , ""false"" , ""Show absolute path in asm.dwarf"" )"		748261	0					
ANR	750060	Callee	SETPREF		748261	0					
ANR	750061	Identifier	SETPREF		748261	0					
ANR	750062	ArgumentList	"""asm.dwarf.abspath"""		748261	1					
ANR	750063	Argument	"""asm.dwarf.abspath"""		748261	0					
ANR	750064	PrimaryExpression	"""asm.dwarf.abspath"""		748261	0					
ANR	750065	Argument	"""false"""		748261	1					
ANR	750066	PrimaryExpression	"""false"""		748261	0					
ANR	750067	Argument	"""Show absolute path in asm.dwarf"""		748261	2					
ANR	750068	PrimaryExpression	"""Show absolute path in asm.dwarf"""		748261	0					
ANR	750069	ExpressionStatement	"SETPREF ( ""asm.dwarf.file"" , ""true"" , ""Show filename of asm.dwarf in pd"" )"	2938:1:87165:87235	748261	128	True				
ANR	750070	CallExpression	"SETPREF ( ""asm.dwarf.file"" , ""true"" , ""Show filename of asm.dwarf in pd"" )"		748261	0					
ANR	750071	Callee	SETPREF		748261	0					
ANR	750072	Identifier	SETPREF		748261	0					
ANR	750073	ArgumentList	"""asm.dwarf.file"""		748261	1					
ANR	750074	Argument	"""asm.dwarf.file"""		748261	0					
ANR	750075	PrimaryExpression	"""asm.dwarf.file"""		748261	0					
ANR	750076	Argument	"""true"""		748261	1					
ANR	750077	PrimaryExpression	"""true"""		748261	0					
ANR	750078	Argument	"""Show filename of asm.dwarf in pd"""		748261	2					
ANR	750079	PrimaryExpression	"""Show filename of asm.dwarf in pd"""		748261	0					
ANR	750080	ExpressionStatement	"SETPREF ( ""asm.esil"" , ""false"" , ""Show ESIL instead of mnemonic"" )"	2939:1:87238:87300	748261	129	True				
ANR	750081	CallExpression	"SETPREF ( ""asm.esil"" , ""false"" , ""Show ESIL instead of mnemonic"" )"		748261	0					
ANR	750082	Callee	SETPREF		748261	0					
ANR	750083	Identifier	SETPREF		748261	0					
ANR	750084	ArgumentList	"""asm.esil"""		748261	1					
ANR	750085	Argument	"""asm.esil"""		748261	0					
ANR	750086	PrimaryExpression	"""asm.esil"""		748261	0					
ANR	750087	Argument	"""false"""		748261	1					
ANR	750088	PrimaryExpression	"""false"""		748261	0					
ANR	750089	Argument	"""Show ESIL instead of mnemonic"""		748261	2					
ANR	750090	PrimaryExpression	"""Show ESIL instead of mnemonic"""		748261	0					
ANR	750091	ExpressionStatement	"SETPREF ( ""asm.nodup"" , ""false"" , ""Do not show dupped instructions (collapse disasm)"" )"	2940:1:87303:87386	748261	130	True				
ANR	750092	CallExpression	"SETPREF ( ""asm.nodup"" , ""false"" , ""Do not show dupped instructions (collapse disasm)"" )"		748261	0					
ANR	750093	Callee	SETPREF		748261	0					
ANR	750094	Identifier	SETPREF		748261	0					
ANR	750095	ArgumentList	"""asm.nodup"""		748261	1					
ANR	750096	Argument	"""asm.nodup"""		748261	0					
ANR	750097	PrimaryExpression	"""asm.nodup"""		748261	0					
ANR	750098	Argument	"""false"""		748261	1					
ANR	750099	PrimaryExpression	"""false"""		748261	0					
ANR	750100	Argument	"""Do not show dupped instructions (collapse disasm)"""		748261	2					
ANR	750101	PrimaryExpression	"""Do not show dupped instructions (collapse disasm)"""		748261	0					
ANR	750102	ExpressionStatement	"SETPREF ( ""asm.emu"" , ""false"" , ""Run ESIL emulation analysis on disasm"" )"	2941:1:87389:87458	748261	131	True				
ANR	750103	CallExpression	"SETPREF ( ""asm.emu"" , ""false"" , ""Run ESIL emulation analysis on disasm"" )"		748261	0					
ANR	750104	Callee	SETPREF		748261	0					
ANR	750105	Identifier	SETPREF		748261	0					
ANR	750106	ArgumentList	"""asm.emu"""		748261	1					
ANR	750107	Argument	"""asm.emu"""		748261	0					
ANR	750108	PrimaryExpression	"""asm.emu"""		748261	0					
ANR	750109	Argument	"""false"""		748261	1					
ANR	750110	PrimaryExpression	"""false"""		748261	0					
ANR	750111	Argument	"""Run ESIL emulation analysis on disasm"""		748261	2					
ANR	750112	PrimaryExpression	"""Run ESIL emulation analysis on disasm"""		748261	0					
ANR	750113	ExpressionStatement	"SETPREF ( ""emu.pre"" , ""false"" , ""Run ESIL emulation starting at the closest flag in pd"" )"	2942:1:87461:87546	748261	132	True				
ANR	750114	CallExpression	"SETPREF ( ""emu.pre"" , ""false"" , ""Run ESIL emulation starting at the closest flag in pd"" )"		748261	0					
ANR	750115	Callee	SETPREF		748261	0					
ANR	750116	Identifier	SETPREF		748261	0					
ANR	750117	ArgumentList	"""emu.pre"""		748261	1					
ANR	750118	Argument	"""emu.pre"""		748261	0					
ANR	750119	PrimaryExpression	"""emu.pre"""		748261	0					
ANR	750120	Argument	"""false"""		748261	1					
ANR	750121	PrimaryExpression	"""false"""		748261	0					
ANR	750122	Argument	"""Run ESIL emulation starting at the closest flag in pd"""		748261	2					
ANR	750123	PrimaryExpression	"""Run ESIL emulation starting at the closest flag in pd"""		748261	0					
ANR	750124	ExpressionStatement	"SETPREF ( ""asm.refptr"" , ""true"" , ""Show refpointer information in disasm"" )"	2943:1:87549:87620	748261	133	True				
ANR	750125	CallExpression	"SETPREF ( ""asm.refptr"" , ""true"" , ""Show refpointer information in disasm"" )"		748261	0					
ANR	750126	Callee	SETPREF		748261	0					
ANR	750127	Identifier	SETPREF		748261	0					
ANR	750128	ArgumentList	"""asm.refptr"""		748261	1					
ANR	750129	Argument	"""asm.refptr"""		748261	0					
ANR	750130	PrimaryExpression	"""asm.refptr"""		748261	0					
ANR	750131	Argument	"""true"""		748261	1					
ANR	750132	PrimaryExpression	"""true"""		748261	0					
ANR	750133	Argument	"""Show refpointer information in disasm"""		748261	2					
ANR	750134	PrimaryExpression	"""Show refpointer information in disasm"""		748261	0					
ANR	750135	ExpressionStatement	"SETPREF ( ""emu.lazy"" , ""false"" , ""Do not emulate all instructions with aae (optimization)"" )"	2944:1:87623:87711	748261	134	True				
ANR	750136	CallExpression	"SETPREF ( ""emu.lazy"" , ""false"" , ""Do not emulate all instructions with aae (optimization)"" )"		748261	0					
ANR	750137	Callee	SETPREF		748261	0					
ANR	750138	Identifier	SETPREF		748261	0					
ANR	750139	ArgumentList	"""emu.lazy"""		748261	1					
ANR	750140	Argument	"""emu.lazy"""		748261	0					
ANR	750141	PrimaryExpression	"""emu.lazy"""		748261	0					
ANR	750142	Argument	"""false"""		748261	1					
ANR	750143	PrimaryExpression	"""false"""		748261	0					
ANR	750144	Argument	"""Do not emulate all instructions with aae (optimization)"""		748261	2					
ANR	750145	PrimaryExpression	"""Do not emulate all instructions with aae (optimization)"""		748261	0					
ANR	750146	ExpressionStatement	"SETPREF ( ""emu.stack"" , ""false"" , ""Create a temporary fake stack when emulating in disasm (asm.emu)"" )"	2945:1:87714:87812	748261	135	True				
ANR	750147	CallExpression	"SETPREF ( ""emu.stack"" , ""false"" , ""Create a temporary fake stack when emulating in disasm (asm.emu)"" )"		748261	0					
ANR	750148	Callee	SETPREF		748261	0					
ANR	750149	Identifier	SETPREF		748261	0					
ANR	750150	ArgumentList	"""emu.stack"""		748261	1					
ANR	750151	Argument	"""emu.stack"""		748261	0					
ANR	750152	PrimaryExpression	"""emu.stack"""		748261	0					
ANR	750153	Argument	"""false"""		748261	1					
ANR	750154	PrimaryExpression	"""false"""		748261	0					
ANR	750155	Argument	"""Create a temporary fake stack when emulating in disasm (asm.emu)"""		748261	2					
ANR	750156	PrimaryExpression	"""Create a temporary fake stack when emulating in disasm (asm.emu)"""		748261	0					
ANR	750157	ExpressionStatement	"SETCB ( ""emu.str"" , ""false"" , & cb_emustr , ""Show only strings if any in the asm.emu output"" )"	2946:1:87815:87903	748261	136	True				
ANR	750158	CallExpression	"SETCB ( ""emu.str"" , ""false"" , & cb_emustr , ""Show only strings if any in the asm.emu output"" )"		748261	0					
ANR	750159	Callee	SETCB		748261	0					
ANR	750160	Identifier	SETCB		748261	0					
ANR	750161	ArgumentList	"""emu.str"""		748261	1					
ANR	750162	Argument	"""emu.str"""		748261	0					
ANR	750163	PrimaryExpression	"""emu.str"""		748261	0					
ANR	750164	Argument	"""false"""		748261	1					
ANR	750165	PrimaryExpression	"""false"""		748261	0					
ANR	750166	Argument	& cb_emustr		748261	2					
ANR	750167	UnaryOperationExpression	& cb_emustr		748261	0					
ANR	750168	UnaryOperator	&		748261	0					
ANR	750169	Identifier	cb_emustr		748261	1					
ANR	750170	Argument	"""Show only strings if any in the asm.emu output"""		748261	3					
ANR	750171	PrimaryExpression	"""Show only strings if any in the asm.emu output"""		748261	0					
ANR	750172	ExpressionStatement	"SETPREF ( ""emu.str.lea"" , ""true"" , ""Disable this in ARM64 code to remove some false positives"" )"	2947:1:87906:87998	748261	137	True				
ANR	750173	CallExpression	"SETPREF ( ""emu.str.lea"" , ""true"" , ""Disable this in ARM64 code to remove some false positives"" )"		748261	0					
ANR	750174	Callee	SETPREF		748261	0					
ANR	750175	Identifier	SETPREF		748261	0					
ANR	750176	ArgumentList	"""emu.str.lea"""		748261	1					
ANR	750177	Argument	"""emu.str.lea"""		748261	0					
ANR	750178	PrimaryExpression	"""emu.str.lea"""		748261	0					
ANR	750179	Argument	"""true"""		748261	1					
ANR	750180	PrimaryExpression	"""true"""		748261	0					
ANR	750181	Argument	"""Disable this in ARM64 code to remove some false positives"""		748261	2					
ANR	750182	PrimaryExpression	"""Disable this in ARM64 code to remove some false positives"""		748261	0					
ANR	750183	ExpressionStatement	"SETPREF ( ""emu.str.off"" , ""false"" , ""Always show offset when printing asm.emu strings"" )"	2948:1:88001:88085	748261	138	True				
ANR	750184	CallExpression	"SETPREF ( ""emu.str.off"" , ""false"" , ""Always show offset when printing asm.emu strings"" )"		748261	0					
ANR	750185	Callee	SETPREF		748261	0					
ANR	750186	Identifier	SETPREF		748261	0					
ANR	750187	ArgumentList	"""emu.str.off"""		748261	1					
ANR	750188	Argument	"""emu.str.off"""		748261	0					
ANR	750189	PrimaryExpression	"""emu.str.off"""		748261	0					
ANR	750190	Argument	"""false"""		748261	1					
ANR	750191	PrimaryExpression	"""false"""		748261	0					
ANR	750192	Argument	"""Always show offset when printing asm.emu strings"""		748261	2					
ANR	750193	PrimaryExpression	"""Always show offset when printing asm.emu strings"""		748261	0					
ANR	750194	ExpressionStatement	"SETPREF ( ""emu.str.inv"" , ""true"" , ""Color-invert emu.str strings"" )"	2949:1:88088:88151	748261	139	True				
ANR	750195	CallExpression	"SETPREF ( ""emu.str.inv"" , ""true"" , ""Color-invert emu.str strings"" )"		748261	0					
ANR	750196	Callee	SETPREF		748261	0					
ANR	750197	Identifier	SETPREF		748261	0					
ANR	750198	ArgumentList	"""emu.str.inv"""		748261	1					
ANR	750199	Argument	"""emu.str.inv"""		748261	0					
ANR	750200	PrimaryExpression	"""emu.str.inv"""		748261	0					
ANR	750201	Argument	"""true"""		748261	1					
ANR	750202	PrimaryExpression	"""true"""		748261	0					
ANR	750203	Argument	"""Color-invert emu.str strings"""		748261	2					
ANR	750204	PrimaryExpression	"""Color-invert emu.str strings"""		748261	0					
ANR	750205	ExpressionStatement	"SETPREF ( ""emu.str.flag"" , ""true"" , ""Also show flag (if any) for asm.emu string"" )"	2950:1:88154:88232	748261	140	True				
ANR	750206	CallExpression	"SETPREF ( ""emu.str.flag"" , ""true"" , ""Also show flag (if any) for asm.emu string"" )"		748261	0					
ANR	750207	Callee	SETPREF		748261	0					
ANR	750208	Identifier	SETPREF		748261	0					
ANR	750209	ArgumentList	"""emu.str.flag"""		748261	1					
ANR	750210	Argument	"""emu.str.flag"""		748261	0					
ANR	750211	PrimaryExpression	"""emu.str.flag"""		748261	0					
ANR	750212	Argument	"""true"""		748261	1					
ANR	750213	PrimaryExpression	"""true"""		748261	0					
ANR	750214	Argument	"""Also show flag (if any) for asm.emu string"""		748261	2					
ANR	750215	PrimaryExpression	"""Also show flag (if any) for asm.emu string"""		748261	0					
ANR	750216	ExpressionStatement	"SETPREF ( ""emu.write"" , ""false"" , ""Allow asm.emu to modify memory (WARNING)"" )"	2951:1:88235:88309	748261	141	True				
ANR	750217	CallExpression	"SETPREF ( ""emu.write"" , ""false"" , ""Allow asm.emu to modify memory (WARNING)"" )"		748261	0					
ANR	750218	Callee	SETPREF		748261	0					
ANR	750219	Identifier	SETPREF		748261	0					
ANR	750220	ArgumentList	"""emu.write"""		748261	1					
ANR	750221	Argument	"""emu.write"""		748261	0					
ANR	750222	PrimaryExpression	"""emu.write"""		748261	0					
ANR	750223	Argument	"""false"""		748261	1					
ANR	750224	PrimaryExpression	"""false"""		748261	0					
ANR	750225	Argument	"""Allow asm.emu to modify memory (WARNING)"""		748261	2					
ANR	750226	PrimaryExpression	"""Allow asm.emu to modify memory (WARNING)"""		748261	0					
ANR	750227	ExpressionStatement	"SETPREF ( ""emu.ssa"" , ""false"" , ""Perform SSA checks and show the ssa reg names as comments"" )"	2952:1:88312:88401	748261	142	True				
ANR	750228	CallExpression	"SETPREF ( ""emu.ssa"" , ""false"" , ""Perform SSA checks and show the ssa reg names as comments"" )"		748261	0					
ANR	750229	Callee	SETPREF		748261	0					
ANR	750230	Identifier	SETPREF		748261	0					
ANR	750231	ArgumentList	"""emu.ssa"""		748261	1					
ANR	750232	Argument	"""emu.ssa"""		748261	0					
ANR	750233	PrimaryExpression	"""emu.ssa"""		748261	0					
ANR	750234	Argument	"""false"""		748261	1					
ANR	750235	PrimaryExpression	"""false"""		748261	0					
ANR	750236	Argument	"""Perform SSA checks and show the ssa reg names as comments"""		748261	2					
ANR	750237	PrimaryExpression	"""Perform SSA checks and show the ssa reg names as comments"""		748261	0					
ANR	750238	ExpressionStatement	"n = NODECB ( ""emu.skip"" , ""ds"" , & cb_emuskip )"	2953:1:88404:88446	748261	143	True				
ANR	750239	AssignmentExpression	"n = NODECB ( ""emu.skip"" , ""ds"" , & cb_emuskip )"		748261	0		=			
ANR	750240	Identifier	n		748261	0					
ANR	750241	CallExpression	"NODECB ( ""emu.skip"" , ""ds"" , & cb_emuskip )"		748261	1					
ANR	750242	Callee	NODECB		748261	0					
ANR	750243	Identifier	NODECB		748261	0					
ANR	750244	ArgumentList	"""emu.skip"""		748261	1					
ANR	750245	Argument	"""emu.skip"""		748261	0					
ANR	750246	PrimaryExpression	"""emu.skip"""		748261	0					
ANR	750247	Argument	"""ds"""		748261	1					
ANR	750248	PrimaryExpression	"""ds"""		748261	0					
ANR	750249	Argument	& cb_emuskip		748261	2					
ANR	750250	UnaryOperationExpression	& cb_emuskip		748261	0					
ANR	750251	UnaryOperator	&		748261	0					
ANR	750252	Identifier	cb_emuskip		748261	1					
ANR	750253	ExpressionStatement	"SETDESC ( n , ""Skip metadata of given types in asm.emu"" )"	2954:1:88449:88503	748261	144	True				
ANR	750254	CallExpression	"SETDESC ( n , ""Skip metadata of given types in asm.emu"" )"		748261	0					
ANR	750255	Callee	SETDESC		748261	0					
ANR	750256	Identifier	SETDESC		748261	0					
ANR	750257	ArgumentList	n		748261	1					
ANR	750258	Argument	n		748261	0					
ANR	750259	Identifier	n		748261	0					
ANR	750260	Argument	"""Skip metadata of given types in asm.emu"""		748261	1					
ANR	750261	PrimaryExpression	"""Skip metadata of given types in asm.emu"""		748261	0					
ANR	750262	ExpressionStatement	"SETOPTIONS ( n , ""d"" , ""c"" , ""s"" , ""f"" , ""m"" , ""h"" , ""C"" , ""r"" , NULL )"	2955:1:88506:88566	748261	145	True				
ANR	750263	CallExpression	"SETOPTIONS ( n , ""d"" , ""c"" , ""s"" , ""f"" , ""m"" , ""h"" , ""C"" , ""r"" , NULL )"		748261	0					
ANR	750264	Callee	SETOPTIONS		748261	0					
ANR	750265	Identifier	SETOPTIONS		748261	0					
ANR	750266	ArgumentList	n		748261	1					
ANR	750267	Argument	n		748261	0					
ANR	750268	Identifier	n		748261	0					
ANR	750269	Argument	"""d"""		748261	1					
ANR	750270	PrimaryExpression	"""d"""		748261	0					
ANR	750271	Argument	"""c"""		748261	2					
ANR	750272	PrimaryExpression	"""c"""		748261	0					
ANR	750273	Argument	"""s"""		748261	3					
ANR	750274	PrimaryExpression	"""s"""		748261	0					
ANR	750275	Argument	"""f"""		748261	4					
ANR	750276	PrimaryExpression	"""f"""		748261	0					
ANR	750277	Argument	"""m"""		748261	5					
ANR	750278	PrimaryExpression	"""m"""		748261	0					
ANR	750279	Argument	"""h"""		748261	6					
ANR	750280	PrimaryExpression	"""h"""		748261	0					
ANR	750281	Argument	"""C"""		748261	7					
ANR	750282	PrimaryExpression	"""C"""		748261	0					
ANR	750283	Argument	"""r"""		748261	8					
ANR	750284	PrimaryExpression	"""r"""		748261	0					
ANR	750285	Argument	NULL		748261	9					
ANR	750286	Identifier	NULL		748261	0					
ANR	750287	ExpressionStatement	"SETPREF ( ""asm.filter"" , ""true"" , ""Replace numeric values by flags (e.g. 0x4003e0 -> sym.imp.printf)"" )"	2956:1:88569:88668	748261	146	True				
ANR	750288	CallExpression	"SETPREF ( ""asm.filter"" , ""true"" , ""Replace numeric values by flags (e.g. 0x4003e0 -> sym.imp.printf)"" )"		748261	0					
ANR	750289	Callee	SETPREF		748261	0					
ANR	750290	Identifier	SETPREF		748261	0					
ANR	750291	ArgumentList	"""asm.filter"""		748261	1					
ANR	750292	Argument	"""asm.filter"""		748261	0					
ANR	750293	PrimaryExpression	"""asm.filter"""		748261	0					
ANR	750294	Argument	"""true"""		748261	1					
ANR	750295	PrimaryExpression	"""true"""		748261	0					
ANR	750296	Argument	"""Replace numeric values by flags (e.g. 0x4003e0 -> sym.imp.printf)"""		748261	2					
ANR	750297	PrimaryExpression	"""Replace numeric values by flags (e.g. 0x4003e0 -> sym.imp.printf)"""		748261	0					
ANR	750298	ExpressionStatement	"SETPREF ( ""asm.strip"" , """" , ""strip all instructions given comma separated types"" )"	2957:1:88671:88750	748261	147	True				
ANR	750299	CallExpression	"SETPREF ( ""asm.strip"" , """" , ""strip all instructions given comma separated types"" )"		748261	0					
ANR	750300	Callee	SETPREF		748261	0					
ANR	750301	Identifier	SETPREF		748261	0					
ANR	750302	ArgumentList	"""asm.strip"""		748261	1					
ANR	750303	Argument	"""asm.strip"""		748261	0					
ANR	750304	PrimaryExpression	"""asm.strip"""		748261	0					
ANR	750305	Argument	""""""		748261	1					
ANR	750306	PrimaryExpression	""""""		748261	0					
ANR	750307	Argument	"""strip all instructions given comma separated types"""		748261	2					
ANR	750308	PrimaryExpression	"""strip all instructions given comma separated types"""		748261	0					
ANR	750309	ExpressionStatement	"SETPREF ( ""asm.optype"" , ""false"" , ""show opcode type next to the instruction bytes"" )"	2958:1:88753:88834	748261	148	True				
ANR	750310	CallExpression	"SETPREF ( ""asm.optype"" , ""false"" , ""show opcode type next to the instruction bytes"" )"		748261	0					
ANR	750311	Callee	SETPREF		748261	0					
ANR	750312	Identifier	SETPREF		748261	0					
ANR	750313	ArgumentList	"""asm.optype"""		748261	1					
ANR	750314	Argument	"""asm.optype"""		748261	0					
ANR	750315	PrimaryExpression	"""asm.optype"""		748261	0					
ANR	750316	Argument	"""false"""		748261	1					
ANR	750317	PrimaryExpression	"""false"""		748261	0					
ANR	750318	Argument	"""show opcode type next to the instruction bytes"""		748261	2					
ANR	750319	PrimaryExpression	"""show opcode type next to the instruction bytes"""		748261	0					
ANR	750320	ExpressionStatement	"SETPREF ( ""asm.lines.fcn"" , ""true"" , ""Show function boundary lines"" )"	2959:1:88837:88902	748261	149	True				
ANR	750321	CallExpression	"SETPREF ( ""asm.lines.fcn"" , ""true"" , ""Show function boundary lines"" )"		748261	0					
ANR	750322	Callee	SETPREF		748261	0					
ANR	750323	Identifier	SETPREF		748261	0					
ANR	750324	ArgumentList	"""asm.lines.fcn"""		748261	1					
ANR	750325	Argument	"""asm.lines.fcn"""		748261	0					
ANR	750326	PrimaryExpression	"""asm.lines.fcn"""		748261	0					
ANR	750327	Argument	"""true"""		748261	1					
ANR	750328	PrimaryExpression	"""true"""		748261	0					
ANR	750329	Argument	"""Show function boundary lines"""		748261	2					
ANR	750330	PrimaryExpression	"""Show function boundary lines"""		748261	0					
ANR	750331	ExpressionStatement	"SETPREF ( ""asm.flags"" , ""true"" , ""Show flags"" )"	2960:1:88905:88948	748261	150	True				
ANR	750332	CallExpression	"SETPREF ( ""asm.flags"" , ""true"" , ""Show flags"" )"		748261	0					
ANR	750333	Callee	SETPREF		748261	0					
ANR	750334	Identifier	SETPREF		748261	0					
ANR	750335	ArgumentList	"""asm.flags"""		748261	1					
ANR	750336	Argument	"""asm.flags"""		748261	0					
ANR	750337	PrimaryExpression	"""asm.flags"""		748261	0					
ANR	750338	Argument	"""true"""		748261	1					
ANR	750339	PrimaryExpression	"""true"""		748261	0					
ANR	750340	Argument	"""Show flags"""		748261	2					
ANR	750341	PrimaryExpression	"""Show flags"""		748261	0					
ANR	750342	ExpressionStatement	"SETICB ( ""asm.flags.maxname"" , 0 , & cb_maxname , ""Maximum length of flag name with smart chopping"" )"	2961:1:88951:89046	748261	151	True				
ANR	750343	CallExpression	"SETICB ( ""asm.flags.maxname"" , 0 , & cb_maxname , ""Maximum length of flag name with smart chopping"" )"		748261	0					
ANR	750344	Callee	SETICB		748261	0					
ANR	750345	Identifier	SETICB		748261	0					
ANR	750346	ArgumentList	"""asm.flags.maxname"""		748261	1					
ANR	750347	Argument	"""asm.flags.maxname"""		748261	0					
ANR	750348	PrimaryExpression	"""asm.flags.maxname"""		748261	0					
ANR	750349	Argument	0		748261	1					
ANR	750350	PrimaryExpression	0		748261	0					
ANR	750351	Argument	& cb_maxname		748261	2					
ANR	750352	UnaryOperationExpression	& cb_maxname		748261	0					
ANR	750353	UnaryOperator	&		748261	0					
ANR	750354	Identifier	cb_maxname		748261	1					
ANR	750355	Argument	"""Maximum length of flag name with smart chopping"""		748261	3					
ANR	750356	PrimaryExpression	"""Maximum length of flag name with smart chopping"""		748261	0					
ANR	750357	ExpressionStatement	"SETI ( ""asm.flags.limit"" , 0 , ""Maximum number of flags to show in a single offset"" )"	2962:1:89049:89130	748261	152	True				
ANR	750358	CallExpression	"SETI ( ""asm.flags.limit"" , 0 , ""Maximum number of flags to show in a single offset"" )"		748261	0					
ANR	750359	Callee	SETI		748261	0					
ANR	750360	Identifier	SETI		748261	0					
ANR	750361	ArgumentList	"""asm.flags.limit"""		748261	1					
ANR	750362	Argument	"""asm.flags.limit"""		748261	0					
ANR	750363	PrimaryExpression	"""asm.flags.limit"""		748261	0					
ANR	750364	Argument	0		748261	1					
ANR	750365	PrimaryExpression	0		748261	0					
ANR	750366	Argument	"""Maximum number of flags to show in a single offset"""		748261	2					
ANR	750367	PrimaryExpression	"""Maximum number of flags to show in a single offset"""		748261	0					
ANR	750368	ExpressionStatement	"SETPREF ( ""asm.flags.offset"" , ""false"" , ""Show offset in flags"" )"	2963:1:89133:89194	748261	153	True				
ANR	750369	CallExpression	"SETPREF ( ""asm.flags.offset"" , ""false"" , ""Show offset in flags"" )"		748261	0					
ANR	750370	Callee	SETPREF		748261	0					
ANR	750371	Identifier	SETPREF		748261	0					
ANR	750372	ArgumentList	"""asm.flags.offset"""		748261	1					
ANR	750373	Argument	"""asm.flags.offset"""		748261	0					
ANR	750374	PrimaryExpression	"""asm.flags.offset"""		748261	0					
ANR	750375	Argument	"""false"""		748261	1					
ANR	750376	PrimaryExpression	"""false"""		748261	0					
ANR	750377	Argument	"""Show offset in flags"""		748261	2					
ANR	750378	PrimaryExpression	"""Show offset in flags"""		748261	0					
ANR	750379	ExpressionStatement	"SETPREF ( ""asm.flags.inbytes"" , ""false"" , ""Display flags inside the bytes space"" )"	2964:1:89197:89276	748261	154	True				
ANR	750380	CallExpression	"SETPREF ( ""asm.flags.inbytes"" , ""false"" , ""Display flags inside the bytes space"" )"		748261	0					
ANR	750381	Callee	SETPREF		748261	0					
ANR	750382	Identifier	SETPREF		748261	0					
ANR	750383	ArgumentList	"""asm.flags.inbytes"""		748261	1					
ANR	750384	Argument	"""asm.flags.inbytes"""		748261	0					
ANR	750385	PrimaryExpression	"""asm.flags.inbytes"""		748261	0					
ANR	750386	Argument	"""false"""		748261	1					
ANR	750387	PrimaryExpression	"""false"""		748261	0					
ANR	750388	Argument	"""Display flags inside the bytes space"""		748261	2					
ANR	750389	PrimaryExpression	"""Display flags inside the bytes space"""		748261	0					
ANR	750390	ExpressionStatement	"SETPREF ( ""asm.flags.inline"" , ""false"" , ""Display flags in line separated by commas instead of newlines"" )"	2965:1:89279:89382	748261	155	True				
ANR	750391	CallExpression	"SETPREF ( ""asm.flags.inline"" , ""false"" , ""Display flags in line separated by commas instead of newlines"" )"		748261	0					
ANR	750392	Callee	SETPREF		748261	0					
ANR	750393	Identifier	SETPREF		748261	0					
ANR	750394	ArgumentList	"""asm.flags.inline"""		748261	1					
ANR	750395	Argument	"""asm.flags.inline"""		748261	0					
ANR	750396	PrimaryExpression	"""asm.flags.inline"""		748261	0					
ANR	750397	Argument	"""false"""		748261	1					
ANR	750398	PrimaryExpression	"""false"""		748261	0					
ANR	750399	Argument	"""Display flags in line separated by commas instead of newlines"""		748261	2					
ANR	750400	PrimaryExpression	"""Display flags in line separated by commas instead of newlines"""		748261	0					
ANR	750401	ExpressionStatement	"n = NODEICB ( ""asm.flags.middle"" , 2 , & cb_midflags )"	2966:1:89385:89434	748261	156	True				
ANR	750402	AssignmentExpression	"n = NODEICB ( ""asm.flags.middle"" , 2 , & cb_midflags )"		748261	0		=			
ANR	750403	Identifier	n		748261	0					
ANR	750404	CallExpression	"NODEICB ( ""asm.flags.middle"" , 2 , & cb_midflags )"		748261	1					
ANR	750405	Callee	NODEICB		748261	0					
ANR	750406	Identifier	NODEICB		748261	0					
ANR	750407	ArgumentList	"""asm.flags.middle"""		748261	1					
ANR	750408	Argument	"""asm.flags.middle"""		748261	0					
ANR	750409	PrimaryExpression	"""asm.flags.middle"""		748261	0					
ANR	750410	Argument	2		748261	1					
ANR	750411	PrimaryExpression	2		748261	0					
ANR	750412	Argument	& cb_midflags		748261	2					
ANR	750413	UnaryOperationExpression	& cb_midflags		748261	0					
ANR	750414	UnaryOperator	&		748261	0					
ANR	750415	Identifier	cb_midflags		748261	1					
ANR	750416	ExpressionStatement	"SETOPTIONS ( n , ""0 = do not show flag"" , ""1 = show without realign"" , ""2 = realign at middle flag"" , ""3 = realign at middle flag if sym.*"" , NULL )"	2967:1:89437:89580	748261	157	True				
ANR	750417	CallExpression	"SETOPTIONS ( n , ""0 = do not show flag"" , ""1 = show without realign"" , ""2 = realign at middle flag"" , ""3 = realign at middle flag if sym.*"" , NULL )"		748261	0					
ANR	750418	Callee	SETOPTIONS		748261	0					
ANR	750419	Identifier	SETOPTIONS		748261	0					
ANR	750420	ArgumentList	n		748261	1					
ANR	750421	Argument	n		748261	0					
ANR	750422	Identifier	n		748261	0					
ANR	750423	Argument	"""0 = do not show flag"""		748261	1					
ANR	750424	PrimaryExpression	"""0 = do not show flag"""		748261	0					
ANR	750425	Argument	"""1 = show without realign"""		748261	2					
ANR	750426	PrimaryExpression	"""1 = show without realign"""		748261	0					
ANR	750427	Argument	"""2 = realign at middle flag"""		748261	3					
ANR	750428	PrimaryExpression	"""2 = realign at middle flag"""		748261	0					
ANR	750429	Argument	"""3 = realign at middle flag if sym.*"""		748261	4					
ANR	750430	PrimaryExpression	"""3 = realign at middle flag if sym.*"""		748261	0					
ANR	750431	Argument	NULL		748261	5					
ANR	750432	Identifier	NULL		748261	0					
ANR	750433	ExpressionStatement	"SETDESC ( n , ""Realign disassembly if there is a flag in the middle of an instruction"" )"	2969:1:89583:89668	748261	158	True				
ANR	750434	CallExpression	"SETDESC ( n , ""Realign disassembly if there is a flag in the middle of an instruction"" )"		748261	0					
ANR	750435	Callee	SETDESC		748261	0					
ANR	750436	Identifier	SETDESC		748261	0					
ANR	750437	ArgumentList	n		748261	1					
ANR	750438	Argument	n		748261	0					
ANR	750439	Identifier	n		748261	0					
ANR	750440	Argument	"""Realign disassembly if there is a flag in the middle of an instruction"""		748261	1					
ANR	750441	PrimaryExpression	"""Realign disassembly if there is a flag in the middle of an instruction"""		748261	0					
ANR	750442	ExpressionStatement	"SETCB ( ""asm.flags.real"" , ""false"" , & cb_flag_realnames , ""Show flags' unfiltered realnames instead of names, except realnames from demangling"" )"	2970:1:89671:89819	748261	159	True				
ANR	750443	CallExpression	"SETCB ( ""asm.flags.real"" , ""false"" , & cb_flag_realnames , ""Show flags' unfiltered realnames instead of names, except realnames from demangling"" )"		748261	0					
ANR	750444	Callee	SETCB		748261	0					
ANR	750445	Identifier	SETCB		748261	0					
ANR	750446	ArgumentList	"""asm.flags.real"""		748261	1					
ANR	750447	Argument	"""asm.flags.real"""		748261	0					
ANR	750448	PrimaryExpression	"""asm.flags.real"""		748261	0					
ANR	750449	Argument	"""false"""		748261	1					
ANR	750450	PrimaryExpression	"""false"""		748261	0					
ANR	750451	Argument	& cb_flag_realnames		748261	2					
ANR	750452	UnaryOperationExpression	& cb_flag_realnames		748261	0					
ANR	750453	UnaryOperator	&		748261	0					
ANR	750454	Identifier	cb_flag_realnames		748261	1					
ANR	750455	Argument	"""Show flags' unfiltered realnames instead of names, except realnames from demangling"""		748261	3					
ANR	750456	PrimaryExpression	"""Show flags' unfiltered realnames instead of names, except realnames from demangling"""		748261	0					
ANR	750457	ExpressionStatement	"SETPREF ( ""asm.bb.line"" , ""false"" , ""Show empty line after every basic block"" )"	2972:1:89822:89897	748261	160	True				
ANR	750458	CallExpression	"SETPREF ( ""asm.bb.line"" , ""false"" , ""Show empty line after every basic block"" )"		748261	0					
ANR	750459	Callee	SETPREF		748261	0					
ANR	750460	Identifier	SETPREF		748261	0					
ANR	750461	ArgumentList	"""asm.bb.line"""		748261	1					
ANR	750462	Argument	"""asm.bb.line"""		748261	0					
ANR	750463	PrimaryExpression	"""asm.bb.line"""		748261	0					
ANR	750464	Argument	"""false"""		748261	1					
ANR	750465	PrimaryExpression	"""false"""		748261	0					
ANR	750466	Argument	"""Show empty line after every basic block"""		748261	2					
ANR	750467	PrimaryExpression	"""Show empty line after every basic block"""		748261	0					
ANR	750468	ExpressionStatement	"SETPREF ( ""asm.bb.middle"" , ""true"" , ""Realign disassembly if a basic block starts in the middle of an instruction"" )"	2973:1:89900:90012	748261	161	True				
ANR	750469	CallExpression	"SETPREF ( ""asm.bb.middle"" , ""true"" , ""Realign disassembly if a basic block starts in the middle of an instruction"" )"		748261	0					
ANR	750470	Callee	SETPREF		748261	0					
ANR	750471	Identifier	SETPREF		748261	0					
ANR	750472	ArgumentList	"""asm.bb.middle"""		748261	1					
ANR	750473	Argument	"""asm.bb.middle"""		748261	0					
ANR	750474	PrimaryExpression	"""asm.bb.middle"""		748261	0					
ANR	750475	Argument	"""true"""		748261	1					
ANR	750476	PrimaryExpression	"""true"""		748261	0					
ANR	750477	Argument	"""Realign disassembly if a basic block starts in the middle of an instruction"""		748261	2					
ANR	750478	PrimaryExpression	"""Realign disassembly if a basic block starts in the middle of an instruction"""		748261	0					
ANR	750479	ExpressionStatement	"SETPREF ( ""asm.lbytes"" , ""true"" , ""Align disasm bytes to left"" )"	2974:1:90015:90075	748261	162	True				
ANR	750480	CallExpression	"SETPREF ( ""asm.lbytes"" , ""true"" , ""Align disasm bytes to left"" )"		748261	0					
ANR	750481	Callee	SETPREF		748261	0					
ANR	750482	Identifier	SETPREF		748261	0					
ANR	750483	ArgumentList	"""asm.lbytes"""		748261	1					
ANR	750484	Argument	"""asm.lbytes"""		748261	0					
ANR	750485	PrimaryExpression	"""asm.lbytes"""		748261	0					
ANR	750486	Argument	"""true"""		748261	1					
ANR	750487	PrimaryExpression	"""true"""		748261	0					
ANR	750488	Argument	"""Align disasm bytes to left"""		748261	2					
ANR	750489	PrimaryExpression	"""Align disasm bytes to left"""		748261	0					
ANR	750490	ExpressionStatement	"SETPREF ( ""asm.lines"" , ""true"" , ""Show ASCII-art lines at disassembly"" )"	2975:1:90078:90146	748261	163	True				
ANR	750491	CallExpression	"SETPREF ( ""asm.lines"" , ""true"" , ""Show ASCII-art lines at disassembly"" )"		748261	0					
ANR	750492	Callee	SETPREF		748261	0					
ANR	750493	Identifier	SETPREF		748261	0					
ANR	750494	ArgumentList	"""asm.lines"""		748261	1					
ANR	750495	Argument	"""asm.lines"""		748261	0					
ANR	750496	PrimaryExpression	"""asm.lines"""		748261	0					
ANR	750497	Argument	"""true"""		748261	1					
ANR	750498	PrimaryExpression	"""true"""		748261	0					
ANR	750499	Argument	"""Show ASCII-art lines at disassembly"""		748261	2					
ANR	750500	PrimaryExpression	"""Show ASCII-art lines at disassembly"""		748261	0					
ANR	750501	ExpressionStatement	"SETPREF ( ""asm.lines.bb"" , ""true"" , ""Show flow lines at jumps"" )"	2976:1:90149:90209	748261	164	True				
ANR	750502	CallExpression	"SETPREF ( ""asm.lines.bb"" , ""true"" , ""Show flow lines at jumps"" )"		748261	0					
ANR	750503	Callee	SETPREF		748261	0					
ANR	750504	Identifier	SETPREF		748261	0					
ANR	750505	ArgumentList	"""asm.lines.bb"""		748261	1					
ANR	750506	Argument	"""asm.lines.bb"""		748261	0					
ANR	750507	PrimaryExpression	"""asm.lines.bb"""		748261	0					
ANR	750508	Argument	"""true"""		748261	1					
ANR	750509	PrimaryExpression	"""true"""		748261	0					
ANR	750510	Argument	"""Show flow lines at jumps"""		748261	2					
ANR	750511	PrimaryExpression	"""Show flow lines at jumps"""		748261	0					
ANR	750512	ExpressionStatement	"SETPREF ( ""asm.lines.call"" , ""false"" , ""Enable call lines"" )"	2977:1:90212:90268	748261	165	True				
ANR	750513	CallExpression	"SETPREF ( ""asm.lines.call"" , ""false"" , ""Enable call lines"" )"		748261	0					
ANR	750514	Callee	SETPREF		748261	0					
ANR	750515	Identifier	SETPREF		748261	0					
ANR	750516	ArgumentList	"""asm.lines.call"""		748261	1					
ANR	750517	Argument	"""asm.lines.call"""		748261	0					
ANR	750518	PrimaryExpression	"""asm.lines.call"""		748261	0					
ANR	750519	Argument	"""false"""		748261	1					
ANR	750520	PrimaryExpression	"""false"""		748261	0					
ANR	750521	Argument	"""Enable call lines"""		748261	2					
ANR	750522	PrimaryExpression	"""Enable call lines"""		748261	0					
ANR	750523	ExpressionStatement	"SETPREF ( ""asm.lines.ret"" , ""false"" , ""Show separator lines after ret"" )"	2978:1:90271:90339	748261	166	True				
ANR	750524	CallExpression	"SETPREF ( ""asm.lines.ret"" , ""false"" , ""Show separator lines after ret"" )"		748261	0					
ANR	750525	Callee	SETPREF		748261	0					
ANR	750526	Identifier	SETPREF		748261	0					
ANR	750527	ArgumentList	"""asm.lines.ret"""		748261	1					
ANR	750528	Argument	"""asm.lines.ret"""		748261	0					
ANR	750529	PrimaryExpression	"""asm.lines.ret"""		748261	0					
ANR	750530	Argument	"""false"""		748261	1					
ANR	750531	PrimaryExpression	"""false"""		748261	0					
ANR	750532	Argument	"""Show separator lines after ret"""		748261	2					
ANR	750533	PrimaryExpression	"""Show separator lines after ret"""		748261	0					
ANR	750534	ExpressionStatement	"SETPREF ( ""asm.lines.out"" , ""true"" , ""Show out of block lines"" )"	2979:1:90342:90402	748261	167	True				
ANR	750535	CallExpression	"SETPREF ( ""asm.lines.out"" , ""true"" , ""Show out of block lines"" )"		748261	0					
ANR	750536	Callee	SETPREF		748261	0					
ANR	750537	Identifier	SETPREF		748261	0					
ANR	750538	ArgumentList	"""asm.lines.out"""		748261	1					
ANR	750539	Argument	"""asm.lines.out"""		748261	0					
ANR	750540	PrimaryExpression	"""asm.lines.out"""		748261	0					
ANR	750541	Argument	"""true"""		748261	1					
ANR	750542	PrimaryExpression	"""true"""		748261	0					
ANR	750543	Argument	"""Show out of block lines"""		748261	2					
ANR	750544	PrimaryExpression	"""Show out of block lines"""		748261	0					
ANR	750545	ExpressionStatement	"SETPREF ( ""asm.lines.right"" , ""false"" , ""Show lines before opcode instead of offset"" )"	2980:1:90405:90487	748261	168	True				
ANR	750546	CallExpression	"SETPREF ( ""asm.lines.right"" , ""false"" , ""Show lines before opcode instead of offset"" )"		748261	0					
ANR	750547	Callee	SETPREF		748261	0					
ANR	750548	Identifier	SETPREF		748261	0					
ANR	750549	ArgumentList	"""asm.lines.right"""		748261	1					
ANR	750550	Argument	"""asm.lines.right"""		748261	0					
ANR	750551	PrimaryExpression	"""asm.lines.right"""		748261	0					
ANR	750552	Argument	"""false"""		748261	1					
ANR	750553	PrimaryExpression	"""false"""		748261	0					
ANR	750554	Argument	"""Show lines before opcode instead of offset"""		748261	2					
ANR	750555	PrimaryExpression	"""Show lines before opcode instead of offset"""		748261	0					
ANR	750556	ExpressionStatement	"SETPREF ( ""asm.lines.wide"" , ""false"" , ""Put a space between lines"" )"	2981:1:90490:90554	748261	169	True				
ANR	750557	CallExpression	"SETPREF ( ""asm.lines.wide"" , ""false"" , ""Put a space between lines"" )"		748261	0					
ANR	750558	Callee	SETPREF		748261	0					
ANR	750559	Identifier	SETPREF		748261	0					
ANR	750560	ArgumentList	"""asm.lines.wide"""		748261	1					
ANR	750561	Argument	"""asm.lines.wide"""		748261	0					
ANR	750562	PrimaryExpression	"""asm.lines.wide"""		748261	0					
ANR	750563	Argument	"""false"""		748261	1					
ANR	750564	PrimaryExpression	"""false"""		748261	0					
ANR	750565	Argument	"""Put a space between lines"""		748261	2					
ANR	750566	PrimaryExpression	"""Put a space between lines"""		748261	0					
ANR	750567	ExpressionStatement	"SETPREF ( ""asm.fcnsig"" , ""true"" , ""Show function signature in disasm"" )"	2982:1:90557:90624	748261	170	True				
ANR	750568	CallExpression	"SETPREF ( ""asm.fcnsig"" , ""true"" , ""Show function signature in disasm"" )"		748261	0					
ANR	750569	Callee	SETPREF		748261	0					
ANR	750570	Identifier	SETPREF		748261	0					
ANR	750571	ArgumentList	"""asm.fcnsig"""		748261	1					
ANR	750572	Argument	"""asm.fcnsig"""		748261	0					
ANR	750573	PrimaryExpression	"""asm.fcnsig"""		748261	0					
ANR	750574	Argument	"""true"""		748261	1					
ANR	750575	PrimaryExpression	"""true"""		748261	0					
ANR	750576	Argument	"""Show function signature in disasm"""		748261	2					
ANR	750577	PrimaryExpression	"""Show function signature in disasm"""		748261	0					
ANR	750578	ExpressionStatement	"SETICB ( ""asm.lines.width"" , 7 , & cb_asmlineswidth , ""Number of columns for program flow arrows"" )"	2983:1:90627:90720	748261	171	True				
ANR	750579	CallExpression	"SETICB ( ""asm.lines.width"" , 7 , & cb_asmlineswidth , ""Number of columns for program flow arrows"" )"		748261	0					
ANR	750580	Callee	SETICB		748261	0					
ANR	750581	Identifier	SETICB		748261	0					
ANR	750582	ArgumentList	"""asm.lines.width"""		748261	1					
ANR	750583	Argument	"""asm.lines.width"""		748261	0					
ANR	750584	PrimaryExpression	"""asm.lines.width"""		748261	0					
ANR	750585	Argument	7		748261	1					
ANR	750586	PrimaryExpression	7		748261	0					
ANR	750587	Argument	& cb_asmlineswidth		748261	2					
ANR	750588	UnaryOperationExpression	& cb_asmlineswidth		748261	0					
ANR	750589	UnaryOperator	&		748261	0					
ANR	750590	Identifier	cb_asmlineswidth		748261	1					
ANR	750591	Argument	"""Number of columns for program flow arrows"""		748261	3					
ANR	750592	PrimaryExpression	"""Number of columns for program flow arrows"""		748261	0					
ANR	750593	ExpressionStatement	"SETICB ( ""asm.var.submin"" , 0x100 , & cb_asmvarsubmin , ""Minimum value to substitute in instructions (asm.var.sub)"" )"	2984:1:90723:90834	748261	172	True				
ANR	750594	CallExpression	"SETICB ( ""asm.var.submin"" , 0x100 , & cb_asmvarsubmin , ""Minimum value to substitute in instructions (asm.var.sub)"" )"		748261	0					
ANR	750595	Callee	SETICB		748261	0					
ANR	750596	Identifier	SETICB		748261	0					
ANR	750597	ArgumentList	"""asm.var.submin"""		748261	1					
ANR	750598	Argument	"""asm.var.submin"""		748261	0					
ANR	750599	PrimaryExpression	"""asm.var.submin"""		748261	0					
ANR	750600	Argument	0x100		748261	1					
ANR	750601	PrimaryExpression	0x100		748261	0					
ANR	750602	Argument	& cb_asmvarsubmin		748261	2					
ANR	750603	UnaryOperationExpression	& cb_asmvarsubmin		748261	0					
ANR	750604	UnaryOperator	&		748261	0					
ANR	750605	Identifier	cb_asmvarsubmin		748261	1					
ANR	750606	Argument	"""Minimum value to substitute in instructions (asm.var.sub)"""		748261	3					
ANR	750607	PrimaryExpression	"""Minimum value to substitute in instructions (asm.var.sub)"""		748261	0					
ANR	750608	ExpressionStatement	"SETCB ( ""asm.tailsub"" , ""false"" , & cb_asmtailsub , ""Replace addresses with prefix .. syntax"" )"	2985:1:90837:90926	748261	173	True				
ANR	750609	CallExpression	"SETCB ( ""asm.tailsub"" , ""false"" , & cb_asmtailsub , ""Replace addresses with prefix .. syntax"" )"		748261	0					
ANR	750610	Callee	SETCB		748261	0					
ANR	750611	Identifier	SETCB		748261	0					
ANR	750612	ArgumentList	"""asm.tailsub"""		748261	1					
ANR	750613	Argument	"""asm.tailsub"""		748261	0					
ANR	750614	PrimaryExpression	"""asm.tailsub"""		748261	0					
ANR	750615	Argument	"""false"""		748261	1					
ANR	750616	PrimaryExpression	"""false"""		748261	0					
ANR	750617	Argument	& cb_asmtailsub		748261	2					
ANR	750618	UnaryOperationExpression	& cb_asmtailsub		748261	0					
ANR	750619	UnaryOperator	&		748261	0					
ANR	750620	Identifier	cb_asmtailsub		748261	1					
ANR	750621	Argument	"""Replace addresses with prefix .. syntax"""		748261	3					
ANR	750622	PrimaryExpression	"""Replace addresses with prefix .. syntax"""		748261	0					
ANR	750623	ExpressionStatement	"SETPREF ( ""asm.middle"" , ""false"" , ""Allow disassembling jumps in the middle of an instruction"" )"	2986:1:90929:91021	748261	174	True				
ANR	750624	CallExpression	"SETPREF ( ""asm.middle"" , ""false"" , ""Allow disassembling jumps in the middle of an instruction"" )"		748261	0					
ANR	750625	Callee	SETPREF		748261	0					
ANR	750626	Identifier	SETPREF		748261	0					
ANR	750627	ArgumentList	"""asm.middle"""		748261	1					
ANR	750628	Argument	"""asm.middle"""		748261	0					
ANR	750629	PrimaryExpression	"""asm.middle"""		748261	0					
ANR	750630	Argument	"""false"""		748261	1					
ANR	750631	PrimaryExpression	"""false"""		748261	0					
ANR	750632	Argument	"""Allow disassembling jumps in the middle of an instruction"""		748261	2					
ANR	750633	PrimaryExpression	"""Allow disassembling jumps in the middle of an instruction"""		748261	0					
ANR	750634	ExpressionStatement	"SETPREF ( ""asm.noisy"" , ""true"" , ""Show comments considered noisy but possibly useful"" )"	2987:1:91024:91107	748261	175	True				
ANR	750635	CallExpression	"SETPREF ( ""asm.noisy"" , ""true"" , ""Show comments considered noisy but possibly useful"" )"		748261	0					
ANR	750636	Callee	SETPREF		748261	0					
ANR	750637	Identifier	SETPREF		748261	0					
ANR	750638	ArgumentList	"""asm.noisy"""		748261	1					
ANR	750639	Argument	"""asm.noisy"""		748261	0					
ANR	750640	PrimaryExpression	"""asm.noisy"""		748261	0					
ANR	750641	Argument	"""true"""		748261	1					
ANR	750642	PrimaryExpression	"""true"""		748261	0					
ANR	750643	Argument	"""Show comments considered noisy but possibly useful"""		748261	2					
ANR	750644	PrimaryExpression	"""Show comments considered noisy but possibly useful"""		748261	0					
ANR	750645	ExpressionStatement	"SETPREF ( ""asm.offset"" , ""true"" , ""Show offsets at disassembly"" )"	2988:1:91110:91171	748261	176	True				
ANR	750646	CallExpression	"SETPREF ( ""asm.offset"" , ""true"" , ""Show offsets at disassembly"" )"		748261	0					
ANR	750647	Callee	SETPREF		748261	0					
ANR	750648	Identifier	SETPREF		748261	0					
ANR	750649	ArgumentList	"""asm.offset"""		748261	1					
ANR	750650	Argument	"""asm.offset"""		748261	0					
ANR	750651	PrimaryExpression	"""asm.offset"""		748261	0					
ANR	750652	Argument	"""true"""		748261	1					
ANR	750653	PrimaryExpression	"""true"""		748261	0					
ANR	750654	Argument	"""Show offsets at disassembly"""		748261	2					
ANR	750655	PrimaryExpression	"""Show offsets at disassembly"""		748261	0					
ANR	750656	ExpressionStatement	"SETPREF ( ""scr.square"" , ""true"" , ""Use square pixels or not"" )"	2989:1:91174:91232	748261	177	True				
ANR	750657	CallExpression	"SETPREF ( ""scr.square"" , ""true"" , ""Use square pixels or not"" )"		748261	0					
ANR	750658	Callee	SETPREF		748261	0					
ANR	750659	Identifier	SETPREF		748261	0					
ANR	750660	ArgumentList	"""scr.square"""		748261	1					
ANR	750661	Argument	"""scr.square"""		748261	0					
ANR	750662	PrimaryExpression	"""scr.square"""		748261	0					
ANR	750663	Argument	"""true"""		748261	1					
ANR	750664	PrimaryExpression	"""true"""		748261	0					
ANR	750665	Argument	"""Use square pixels or not"""		748261	2					
ANR	750666	PrimaryExpression	"""Use square pixels or not"""		748261	0					
ANR	750667	ExpressionStatement	"SETCB ( ""scr.prompt.vi"" , ""false"" , & cb_scr_vi , ""Use vi mode for input prompt"" )"	2990:1:91235:91311	748261	178	True				
ANR	750668	CallExpression	"SETCB ( ""scr.prompt.vi"" , ""false"" , & cb_scr_vi , ""Use vi mode for input prompt"" )"		748261	0					
ANR	750669	Callee	SETCB		748261	0					
ANR	750670	Identifier	SETCB		748261	0					
ANR	750671	ArgumentList	"""scr.prompt.vi"""		748261	1					
ANR	750672	Argument	"""scr.prompt.vi"""		748261	0					
ANR	750673	PrimaryExpression	"""scr.prompt.vi"""		748261	0					
ANR	750674	Argument	"""false"""		748261	1					
ANR	750675	PrimaryExpression	"""false"""		748261	0					
ANR	750676	Argument	& cb_scr_vi		748261	2					
ANR	750677	UnaryOperationExpression	& cb_scr_vi		748261	0					
ANR	750678	UnaryOperator	&		748261	0					
ANR	750679	Identifier	cb_scr_vi		748261	1					
ANR	750680	Argument	"""Use vi mode for input prompt"""		748261	3					
ANR	750681	PrimaryExpression	"""Use vi mode for input prompt"""		748261	0					
ANR	750682	ExpressionStatement	"SETCB ( ""scr.wideoff"" , ""false"" , & cb_scr_wideoff , ""Adjust offsets to match asm.bits"" )"	2991:1:91314:91397	748261	179	True				
ANR	750683	CallExpression	"SETCB ( ""scr.wideoff"" , ""false"" , & cb_scr_wideoff , ""Adjust offsets to match asm.bits"" )"		748261	0					
ANR	750684	Callee	SETCB		748261	0					
ANR	750685	Identifier	SETCB		748261	0					
ANR	750686	ArgumentList	"""scr.wideoff"""		748261	1					
ANR	750687	Argument	"""scr.wideoff"""		748261	0					
ANR	750688	PrimaryExpression	"""scr.wideoff"""		748261	0					
ANR	750689	Argument	"""false"""		748261	1					
ANR	750690	PrimaryExpression	"""false"""		748261	0					
ANR	750691	Argument	& cb_scr_wideoff		748261	2					
ANR	750692	UnaryOperationExpression	& cb_scr_wideoff		748261	0					
ANR	750693	UnaryOperator	&		748261	0					
ANR	750694	Identifier	cb_scr_wideoff		748261	1					
ANR	750695	Argument	"""Adjust offsets to match asm.bits"""		748261	3					
ANR	750696	PrimaryExpression	"""Adjust offsets to match asm.bits"""		748261	0					
ANR	750697	ExpressionStatement	"SETCB ( ""scr.rainbow"" , ""false"" , & cb_scrrainbow , ""Shows rainbow colors depending of address"" )"	2992:1:91400:91491	748261	180	True				
ANR	750698	CallExpression	"SETCB ( ""scr.rainbow"" , ""false"" , & cb_scrrainbow , ""Shows rainbow colors depending of address"" )"		748261	0					
ANR	750699	Callee	SETCB		748261	0					
ANR	750700	Identifier	SETCB		748261	0					
ANR	750701	ArgumentList	"""scr.rainbow"""		748261	1					
ANR	750702	Argument	"""scr.rainbow"""		748261	0					
ANR	750703	PrimaryExpression	"""scr.rainbow"""		748261	0					
ANR	750704	Argument	"""false"""		748261	1					
ANR	750705	PrimaryExpression	"""false"""		748261	0					
ANR	750706	Argument	& cb_scrrainbow		748261	2					
ANR	750707	UnaryOperationExpression	& cb_scrrainbow		748261	0					
ANR	750708	UnaryOperator	&		748261	0					
ANR	750709	Identifier	cb_scrrainbow		748261	1					
ANR	750710	Argument	"""Shows rainbow colors depending of address"""		748261	3					
ANR	750711	PrimaryExpression	"""Shows rainbow colors depending of address"""		748261	0					
ANR	750712	ExpressionStatement	"SETCB ( ""scr.last"" , ""true"" , & cb_scrlast , ""Cache last output after flush to make _ command work (disable for performance)"" )"	2993:1:91494:91615	748261	181	True				
ANR	750713	CallExpression	"SETCB ( ""scr.last"" , ""true"" , & cb_scrlast , ""Cache last output after flush to make _ command work (disable for performance)"" )"		748261	0					
ANR	750714	Callee	SETCB		748261	0					
ANR	750715	Identifier	SETCB		748261	0					
ANR	750716	ArgumentList	"""scr.last"""		748261	1					
ANR	750717	Argument	"""scr.last"""		748261	0					
ANR	750718	PrimaryExpression	"""scr.last"""		748261	0					
ANR	750719	Argument	"""true"""		748261	1					
ANR	750720	PrimaryExpression	"""true"""		748261	0					
ANR	750721	Argument	& cb_scrlast		748261	2					
ANR	750722	UnaryOperationExpression	& cb_scrlast		748261	0					
ANR	750723	UnaryOperator	&		748261	0					
ANR	750724	Identifier	cb_scrlast		748261	1					
ANR	750725	Argument	"""Cache last output after flush to make _ command work (disable for performance)"""		748261	3					
ANR	750726	PrimaryExpression	"""Cache last output after flush to make _ command work (disable for performance)"""		748261	0					
ANR	750727	ExpressionStatement	"SETPREF ( ""asm.reloff"" , ""false"" , ""Show relative offsets instead of absolute address in disasm"" )"	2994:1:91618:91712	748261	182	True				
ANR	750728	CallExpression	"SETPREF ( ""asm.reloff"" , ""false"" , ""Show relative offsets instead of absolute address in disasm"" )"		748261	0					
ANR	750729	Callee	SETPREF		748261	0					
ANR	750730	Identifier	SETPREF		748261	0					
ANR	750731	ArgumentList	"""asm.reloff"""		748261	1					
ANR	750732	Argument	"""asm.reloff"""		748261	0					
ANR	750733	PrimaryExpression	"""asm.reloff"""		748261	0					
ANR	750734	Argument	"""false"""		748261	1					
ANR	750735	PrimaryExpression	"""false"""		748261	0					
ANR	750736	Argument	"""Show relative offsets instead of absolute address in disasm"""		748261	2					
ANR	750737	PrimaryExpression	"""Show relative offsets instead of absolute address in disasm"""		748261	0					
ANR	750738	ExpressionStatement	"SETPREF ( ""asm.reloff.flags"" , ""false"" , ""Show relative offsets to flags (not only functions)"" )"	2995:1:91715:91807	748261	183	True				
ANR	750739	CallExpression	"SETPREF ( ""asm.reloff.flags"" , ""false"" , ""Show relative offsets to flags (not only functions)"" )"		748261	0					
ANR	750740	Callee	SETPREF		748261	0					
ANR	750741	Identifier	SETPREF		748261	0					
ANR	750742	ArgumentList	"""asm.reloff.flags"""		748261	1					
ANR	750743	Argument	"""asm.reloff.flags"""		748261	0					
ANR	750744	PrimaryExpression	"""asm.reloff.flags"""		748261	0					
ANR	750745	Argument	"""false"""		748261	1					
ANR	750746	PrimaryExpression	"""false"""		748261	0					
ANR	750747	Argument	"""Show relative offsets to flags (not only functions)"""		748261	2					
ANR	750748	PrimaryExpression	"""Show relative offsets to flags (not only functions)"""		748261	0					
ANR	750749	ExpressionStatement	"SETPREF ( ""asm.section"" , ""false"" , ""Show section name before offset"" )"	2996:1:91810:91877	748261	184	True				
ANR	750750	CallExpression	"SETPREF ( ""asm.section"" , ""false"" , ""Show section name before offset"" )"		748261	0					
ANR	750751	Callee	SETPREF		748261	0					
ANR	750752	Identifier	SETPREF		748261	0					
ANR	750753	ArgumentList	"""asm.section"""		748261	1					
ANR	750754	Argument	"""asm.section"""		748261	0					
ANR	750755	PrimaryExpression	"""asm.section"""		748261	0					
ANR	750756	Argument	"""false"""		748261	1					
ANR	750757	PrimaryExpression	"""false"""		748261	0					
ANR	750758	Argument	"""Show section name before offset"""		748261	2					
ANR	750759	PrimaryExpression	"""Show section name before offset"""		748261	0					
ANR	750760	ExpressionStatement	"SETPREF ( ""asm.section.perm"" , ""false"" , ""Show section permissions in the disasm"" )"	2997:1:91880:91959	748261	185	True				
ANR	750761	CallExpression	"SETPREF ( ""asm.section.perm"" , ""false"" , ""Show section permissions in the disasm"" )"		748261	0					
ANR	750762	Callee	SETPREF		748261	0					
ANR	750763	Identifier	SETPREF		748261	0					
ANR	750764	ArgumentList	"""asm.section.perm"""		748261	1					
ANR	750765	Argument	"""asm.section.perm"""		748261	0					
ANR	750766	PrimaryExpression	"""asm.section.perm"""		748261	0					
ANR	750767	Argument	"""false"""		748261	1					
ANR	750768	PrimaryExpression	"""false"""		748261	0					
ANR	750769	Argument	"""Show section permissions in the disasm"""		748261	2					
ANR	750770	PrimaryExpression	"""Show section permissions in the disasm"""		748261	0					
ANR	750771	ExpressionStatement	"SETPREF ( ""asm.section.name"" , ""true"" , ""Show section name in the disasm"" )"	2998:1:91962:92033	748261	186	True				
ANR	750772	CallExpression	"SETPREF ( ""asm.section.name"" , ""true"" , ""Show section name in the disasm"" )"		748261	0					
ANR	750773	Callee	SETPREF		748261	0					
ANR	750774	Identifier	SETPREF		748261	0					
ANR	750775	ArgumentList	"""asm.section.name"""		748261	1					
ANR	750776	Argument	"""asm.section.name"""		748261	0					
ANR	750777	PrimaryExpression	"""asm.section.name"""		748261	0					
ANR	750778	Argument	"""true"""		748261	1					
ANR	750779	PrimaryExpression	"""true"""		748261	0					
ANR	750780	Argument	"""Show section name in the disasm"""		748261	2					
ANR	750781	PrimaryExpression	"""Show section name in the disasm"""		748261	0					
ANR	750782	ExpressionStatement	"SETI ( ""asm.section.col"" , 20 , ""Columns width to show asm.section"" )"	2999:1:92036:92101	748261	187	True				
ANR	750783	CallExpression	"SETI ( ""asm.section.col"" , 20 , ""Columns width to show asm.section"" )"		748261	0					
ANR	750784	Callee	SETI		748261	0					
ANR	750785	Identifier	SETI		748261	0					
ANR	750786	ArgumentList	"""asm.section.col"""		748261	1					
ANR	750787	Argument	"""asm.section.col"""		748261	0					
ANR	750788	PrimaryExpression	"""asm.section.col"""		748261	0					
ANR	750789	Argument	20		748261	1					
ANR	750790	PrimaryExpression	20		748261	0					
ANR	750791	Argument	"""Columns width to show asm.section"""		748261	2					
ANR	750792	PrimaryExpression	"""Columns width to show asm.section"""		748261	0					
ANR	750793	ExpressionStatement	"SETCB ( ""asm.section.sub"" , ""false"" , & cb_asmsecsub , ""Show offsets in disasm prefixed with section/map name"" )"	3000:1:92104:92210	748261	188	True				
ANR	750794	CallExpression	"SETCB ( ""asm.section.sub"" , ""false"" , & cb_asmsecsub , ""Show offsets in disasm prefixed with section/map name"" )"		748261	0					
ANR	750795	Callee	SETCB		748261	0					
ANR	750796	Identifier	SETCB		748261	0					
ANR	750797	ArgumentList	"""asm.section.sub"""		748261	1					
ANR	750798	Argument	"""asm.section.sub"""		748261	0					
ANR	750799	PrimaryExpression	"""asm.section.sub"""		748261	0					
ANR	750800	Argument	"""false"""		748261	1					
ANR	750801	PrimaryExpression	"""false"""		748261	0					
ANR	750802	Argument	& cb_asmsecsub		748261	2					
ANR	750803	UnaryOperationExpression	& cb_asmsecsub		748261	0					
ANR	750804	UnaryOperator	&		748261	0					
ANR	750805	Identifier	cb_asmsecsub		748261	1					
ANR	750806	Argument	"""Show offsets in disasm prefixed with section/map name"""		748261	3					
ANR	750807	PrimaryExpression	"""Show offsets in disasm prefixed with section/map name"""		748261	0					
ANR	750808	ExpressionStatement	"SETCB ( ""asm.pseudo"" , ""false"" , & cb_asmpseudo , ""Enable pseudo syntax"" )"	3001:1:92213:92281	748261	189	True				
ANR	750809	CallExpression	"SETCB ( ""asm.pseudo"" , ""false"" , & cb_asmpseudo , ""Enable pseudo syntax"" )"		748261	0					
ANR	750810	Callee	SETCB		748261	0					
ANR	750811	Identifier	SETCB		748261	0					
ANR	750812	ArgumentList	"""asm.pseudo"""		748261	1					
ANR	750813	Argument	"""asm.pseudo"""		748261	0					
ANR	750814	PrimaryExpression	"""asm.pseudo"""		748261	0					
ANR	750815	Argument	"""false"""		748261	1					
ANR	750816	PrimaryExpression	"""false"""		748261	0					
ANR	750817	Argument	& cb_asmpseudo		748261	2					
ANR	750818	UnaryOperationExpression	& cb_asmpseudo		748261	0					
ANR	750819	UnaryOperator	&		748261	0					
ANR	750820	Identifier	cb_asmpseudo		748261	1					
ANR	750821	Argument	"""Enable pseudo syntax"""		748261	3					
ANR	750822	PrimaryExpression	"""Enable pseudo syntax"""		748261	0					
ANR	750823	ExpressionStatement	"SETPREF ( ""asm.size"" , ""false"" , ""Show size of opcodes in disassembly (pd)"" )"	3002:1:92284:92357	748261	190	True				
ANR	750824	CallExpression	"SETPREF ( ""asm.size"" , ""false"" , ""Show size of opcodes in disassembly (pd)"" )"		748261	0					
ANR	750825	Callee	SETPREF		748261	0					
ANR	750826	Identifier	SETPREF		748261	0					
ANR	750827	ArgumentList	"""asm.size"""		748261	1					
ANR	750828	Argument	"""asm.size"""		748261	0					
ANR	750829	PrimaryExpression	"""asm.size"""		748261	0					
ANR	750830	Argument	"""false"""		748261	1					
ANR	750831	PrimaryExpression	"""false"""		748261	0					
ANR	750832	Argument	"""Show size of opcodes in disassembly (pd)"""		748261	2					
ANR	750833	PrimaryExpression	"""Show size of opcodes in disassembly (pd)"""		748261	0					
ANR	750834	ExpressionStatement	"SETPREF ( ""asm.stackptr"" , ""false"" , ""Show stack pointer at disassembly"" )"	3003:1:92360:92430	748261	191	True				
ANR	750835	CallExpression	"SETPREF ( ""asm.stackptr"" , ""false"" , ""Show stack pointer at disassembly"" )"		748261	0					
ANR	750836	Callee	SETPREF		748261	0					
ANR	750837	Identifier	SETPREF		748261	0					
ANR	750838	ArgumentList	"""asm.stackptr"""		748261	1					
ANR	750839	Argument	"""asm.stackptr"""		748261	0					
ANR	750840	PrimaryExpression	"""asm.stackptr"""		748261	0					
ANR	750841	Argument	"""false"""		748261	1					
ANR	750842	PrimaryExpression	"""false"""		748261	0					
ANR	750843	Argument	"""Show stack pointer at disassembly"""		748261	2					
ANR	750844	PrimaryExpression	"""Show stack pointer at disassembly"""		748261	0					
ANR	750845	ExpressionStatement	"SETPREF ( ""asm.cyclespace"" , ""false"" , ""Indent instructions depending on CPU-cycles"" )"	3004:1:92433:92515	748261	192	True				
ANR	750846	CallExpression	"SETPREF ( ""asm.cyclespace"" , ""false"" , ""Indent instructions depending on CPU-cycles"" )"		748261	0					
ANR	750847	Callee	SETPREF		748261	0					
ANR	750848	Identifier	SETPREF		748261	0					
ANR	750849	ArgumentList	"""asm.cyclespace"""		748261	1					
ANR	750850	Argument	"""asm.cyclespace"""		748261	0					
ANR	750851	PrimaryExpression	"""asm.cyclespace"""		748261	0					
ANR	750852	Argument	"""false"""		748261	1					
ANR	750853	PrimaryExpression	"""false"""		748261	0					
ANR	750854	Argument	"""Indent instructions depending on CPU-cycles"""		748261	2					
ANR	750855	PrimaryExpression	"""Indent instructions depending on CPU-cycles"""		748261	0					
ANR	750856	ExpressionStatement	"SETPREF ( ""asm.cycles"" , ""false"" , ""Show CPU-cycles taken by instruction at disassembly"" )"	3005:1:92518:92604	748261	193	True				
ANR	750857	CallExpression	"SETPREF ( ""asm.cycles"" , ""false"" , ""Show CPU-cycles taken by instruction at disassembly"" )"		748261	0					
ANR	750858	Callee	SETPREF		748261	0					
ANR	750859	Identifier	SETPREF		748261	0					
ANR	750860	ArgumentList	"""asm.cycles"""		748261	1					
ANR	750861	Argument	"""asm.cycles"""		748261	0					
ANR	750862	PrimaryExpression	"""asm.cycles"""		748261	0					
ANR	750863	Argument	"""false"""		748261	1					
ANR	750864	PrimaryExpression	"""false"""		748261	0					
ANR	750865	Argument	"""Show CPU-cycles taken by instruction at disassembly"""		748261	2					
ANR	750866	PrimaryExpression	"""Show CPU-cycles taken by instruction at disassembly"""		748261	0					
ANR	750867	ExpressionStatement	"SETI ( ""asm.tabs"" , 0 , ""Use tabs in disassembly"" )"	3006:1:92607:92654	748261	194	True				
ANR	750868	CallExpression	"SETI ( ""asm.tabs"" , 0 , ""Use tabs in disassembly"" )"		748261	0					
ANR	750869	Callee	SETI		748261	0					
ANR	750870	Identifier	SETI		748261	0					
ANR	750871	ArgumentList	"""asm.tabs"""		748261	1					
ANR	750872	Argument	"""asm.tabs"""		748261	0					
ANR	750873	PrimaryExpression	"""asm.tabs"""		748261	0					
ANR	750874	Argument	0		748261	1					
ANR	750875	PrimaryExpression	0		748261	0					
ANR	750876	Argument	"""Use tabs in disassembly"""		748261	2					
ANR	750877	PrimaryExpression	"""Use tabs in disassembly"""		748261	0					
ANR	750878	ExpressionStatement	"SETPREF ( ""asm.tabs.once"" , ""false"" , ""Only tabulate the opcode, not the arguments"" )"	3007:1:92657:92738	748261	195	True				
ANR	750879	CallExpression	"SETPREF ( ""asm.tabs.once"" , ""false"" , ""Only tabulate the opcode, not the arguments"" )"		748261	0					
ANR	750880	Callee	SETPREF		748261	0					
ANR	750881	Identifier	SETPREF		748261	0					
ANR	750882	ArgumentList	"""asm.tabs.once"""		748261	1					
ANR	750883	Argument	"""asm.tabs.once"""		748261	0					
ANR	750884	PrimaryExpression	"""asm.tabs.once"""		748261	0					
ANR	750885	Argument	"""false"""		748261	1					
ANR	750886	PrimaryExpression	"""false"""		748261	0					
ANR	750887	Argument	"""Only tabulate the opcode, not the arguments"""		748261	2					
ANR	750888	PrimaryExpression	"""Only tabulate the opcode, not the arguments"""		748261	0					
ANR	750889	ExpressionStatement	"SETI ( ""asm.tabs.off"" , 0 , ""tabulate spaces after the offset"" )"	3008:1:92741:92801	748261	196	True				
ANR	750890	CallExpression	"SETI ( ""asm.tabs.off"" , 0 , ""tabulate spaces after the offset"" )"		748261	0					
ANR	750891	Callee	SETI		748261	0					
ANR	750892	Identifier	SETI		748261	0					
ANR	750893	ArgumentList	"""asm.tabs.off"""		748261	1					
ANR	750894	Argument	"""asm.tabs.off"""		748261	0					
ANR	750895	PrimaryExpression	"""asm.tabs.off"""		748261	0					
ANR	750896	Argument	0		748261	1					
ANR	750897	PrimaryExpression	0		748261	0					
ANR	750898	Argument	"""tabulate spaces after the offset"""		748261	2					
ANR	750899	PrimaryExpression	"""tabulate spaces after the offset"""		748261	0					
ANR	750900	ExpressionStatement	"SETPREF ( ""asm.trace"" , ""false"" , ""Show execution traces for each opcode"" )"	3009:1:92804:92875	748261	197	True				
ANR	750901	CallExpression	"SETPREF ( ""asm.trace"" , ""false"" , ""Show execution traces for each opcode"" )"		748261	0					
ANR	750902	Callee	SETPREF		748261	0					
ANR	750903	Identifier	SETPREF		748261	0					
ANR	750904	ArgumentList	"""asm.trace"""		748261	1					
ANR	750905	Argument	"""asm.trace"""		748261	0					
ANR	750906	PrimaryExpression	"""asm.trace"""		748261	0					
ANR	750907	Argument	"""false"""		748261	1					
ANR	750908	PrimaryExpression	"""false"""		748261	0					
ANR	750909	Argument	"""Show execution traces for each opcode"""		748261	2					
ANR	750910	PrimaryExpression	"""Show execution traces for each opcode"""		748261	0					
ANR	750911	ExpressionStatement	"SETPREF ( ""asm.tracespace"" , ""false"" , ""Indent disassembly with trace.count information"" )"	3010:1:92878:92964	748261	198	True				
ANR	750912	CallExpression	"SETPREF ( ""asm.tracespace"" , ""false"" , ""Indent disassembly with trace.count information"" )"		748261	0					
ANR	750913	Callee	SETPREF		748261	0					
ANR	750914	Identifier	SETPREF		748261	0					
ANR	750915	ArgumentList	"""asm.tracespace"""		748261	1					
ANR	750916	Argument	"""asm.tracespace"""		748261	0					
ANR	750917	PrimaryExpression	"""asm.tracespace"""		748261	0					
ANR	750918	Argument	"""false"""		748261	1					
ANR	750919	PrimaryExpression	"""false"""		748261	0					
ANR	750920	Argument	"""Indent disassembly with trace.count information"""		748261	2					
ANR	750921	PrimaryExpression	"""Indent disassembly with trace.count information"""		748261	0					
ANR	750922	ExpressionStatement	"SETPREF ( ""asm.ucase"" , ""false"" , ""Use uppercase syntax at disassembly"" )"	3011:1:92967:93036	748261	199	True				
ANR	750923	CallExpression	"SETPREF ( ""asm.ucase"" , ""false"" , ""Use uppercase syntax at disassembly"" )"		748261	0					
ANR	750924	Callee	SETPREF		748261	0					
ANR	750925	Identifier	SETPREF		748261	0					
ANR	750926	ArgumentList	"""asm.ucase"""		748261	1					
ANR	750927	Argument	"""asm.ucase"""		748261	0					
ANR	750928	PrimaryExpression	"""asm.ucase"""		748261	0					
ANR	750929	Argument	"""false"""		748261	1					
ANR	750930	PrimaryExpression	"""false"""		748261	0					
ANR	750931	Argument	"""Use uppercase syntax at disassembly"""		748261	2					
ANR	750932	PrimaryExpression	"""Use uppercase syntax at disassembly"""		748261	0					
ANR	750933	ExpressionStatement	"SETPREF ( ""asm.capitalize"" , ""false"" , ""Use camelcase at disassembly"" )"	3012:1:93039:93106	748261	200	True				
ANR	750934	CallExpression	"SETPREF ( ""asm.capitalize"" , ""false"" , ""Use camelcase at disassembly"" )"		748261	0					
ANR	750935	Callee	SETPREF		748261	0					
ANR	750936	Identifier	SETPREF		748261	0					
ANR	750937	ArgumentList	"""asm.capitalize"""		748261	1					
ANR	750938	Argument	"""asm.capitalize"""		748261	0					
ANR	750939	PrimaryExpression	"""asm.capitalize"""		748261	0					
ANR	750940	Argument	"""false"""		748261	1					
ANR	750941	PrimaryExpression	"""false"""		748261	0					
ANR	750942	Argument	"""Use camelcase at disassembly"""		748261	2					
ANR	750943	PrimaryExpression	"""Use camelcase at disassembly"""		748261	0					
ANR	750944	ExpressionStatement	"SETPREF ( ""asm.var"" , ""true"" , ""Show local function variables in disassembly"" )"	3013:1:93109:93184	748261	201	True				
ANR	750945	CallExpression	"SETPREF ( ""asm.var"" , ""true"" , ""Show local function variables in disassembly"" )"		748261	0					
ANR	750946	Callee	SETPREF		748261	0					
ANR	750947	Identifier	SETPREF		748261	0					
ANR	750948	ArgumentList	"""asm.var"""		748261	1					
ANR	750949	Argument	"""asm.var"""		748261	0					
ANR	750950	PrimaryExpression	"""asm.var"""		748261	0					
ANR	750951	Argument	"""true"""		748261	1					
ANR	750952	PrimaryExpression	"""true"""		748261	0					
ANR	750953	Argument	"""Show local function variables in disassembly"""		748261	2					
ANR	750954	PrimaryExpression	"""Show local function variables in disassembly"""		748261	0					
ANR	750955	ExpressionStatement	"SETPREF ( ""asm.var.access"" , ""false"" , ""Show accesses of local variables"" )"	3014:1:93187:93258	748261	202	True				
ANR	750956	CallExpression	"SETPREF ( ""asm.var.access"" , ""false"" , ""Show accesses of local variables"" )"		748261	0					
ANR	750957	Callee	SETPREF		748261	0					
ANR	750958	Identifier	SETPREF		748261	0					
ANR	750959	ArgumentList	"""asm.var.access"""		748261	1					
ANR	750960	Argument	"""asm.var.access"""		748261	0					
ANR	750961	PrimaryExpression	"""asm.var.access"""		748261	0					
ANR	750962	Argument	"""false"""		748261	1					
ANR	750963	PrimaryExpression	"""false"""		748261	0					
ANR	750964	Argument	"""Show accesses of local variables"""		748261	2					
ANR	750965	PrimaryExpression	"""Show accesses of local variables"""		748261	0					
ANR	750966	ExpressionStatement	"SETPREF ( ""asm.var.sub"" , ""true"" , ""Substitute variables in disassembly"" )"	3015:1:93261:93331	748261	203	True				
ANR	750967	CallExpression	"SETPREF ( ""asm.var.sub"" , ""true"" , ""Substitute variables in disassembly"" )"		748261	0					
ANR	750968	Callee	SETPREF		748261	0					
ANR	750969	Identifier	SETPREF		748261	0					
ANR	750970	ArgumentList	"""asm.var.sub"""		748261	1					
ANR	750971	Argument	"""asm.var.sub"""		748261	0					
ANR	750972	PrimaryExpression	"""asm.var.sub"""		748261	0					
ANR	750973	Argument	"""true"""		748261	1					
ANR	750974	PrimaryExpression	"""true"""		748261	0					
ANR	750975	Argument	"""Substitute variables in disassembly"""		748261	2					
ANR	750976	PrimaryExpression	"""Substitute variables in disassembly"""		748261	0					
ANR	750977	ExpressionStatement	"SETI ( ""asm.var.summary"" , 0 , ""Show variables summary instead of full list in disasm (0, 1, 2)"" )"	3016:1:93334:93428	748261	204	True				
ANR	750978	CallExpression	"SETI ( ""asm.var.summary"" , 0 , ""Show variables summary instead of full list in disasm (0, 1, 2)"" )"		748261	0					
ANR	750979	Callee	SETI		748261	0					
ANR	750980	Identifier	SETI		748261	0					
ANR	750981	ArgumentList	"""asm.var.summary"""		748261	1					
ANR	750982	Argument	"""asm.var.summary"""		748261	0					
ANR	750983	PrimaryExpression	"""asm.var.summary"""		748261	0					
ANR	750984	Argument	0		748261	1					
ANR	750985	PrimaryExpression	0		748261	0					
ANR	750986	Argument	"""Show variables summary instead of full list in disasm (0, 1, 2)"""		748261	2					
ANR	750987	PrimaryExpression	"""Show variables summary instead of full list in disasm (0, 1, 2)"""		748261	0					
ANR	750988	ExpressionStatement	"SETPREF ( ""asm.var.subonly"" , ""true"" , ""Substitute the entire variable expression with the local variable name (e.g. [local10h] instead of [ebp+local10h])"" )"	3017:1:93431:93584	748261	205	True				
ANR	750989	CallExpression	"SETPREF ( ""asm.var.subonly"" , ""true"" , ""Substitute the entire variable expression with the local variable name (e.g. [local10h] instead of [ebp+local10h])"" )"		748261	0					
ANR	750990	Callee	SETPREF		748261	0					
ANR	750991	Identifier	SETPREF		748261	0					
ANR	750992	ArgumentList	"""asm.var.subonly"""		748261	1					
ANR	750993	Argument	"""asm.var.subonly"""		748261	0					
ANR	750994	PrimaryExpression	"""asm.var.subonly"""		748261	0					
ANR	750995	Argument	"""true"""		748261	1					
ANR	750996	PrimaryExpression	"""true"""		748261	0					
ANR	750997	Argument	"""Substitute the entire variable expression with the local variable name (e.g. [local10h] instead of [ebp+local10h])"""		748261	2					
ANR	750998	PrimaryExpression	"""Substitute the entire variable expression with the local variable name (e.g. [local10h] instead of [ebp+local10h])"""		748261	0					
ANR	750999	ExpressionStatement	"SETPREF ( ""asm.regsub"" , ""false"" , ""Substitute register names with their associated role name (drp~=)"" )"	3018:1:93587:93687	748261	206	True				
ANR	751000	CallExpression	"SETPREF ( ""asm.regsub"" , ""false"" , ""Substitute register names with their associated role name (drp~=)"" )"		748261	0					
ANR	751001	Callee	SETPREF		748261	0					
ANR	751002	Identifier	SETPREF		748261	0					
ANR	751003	ArgumentList	"""asm.regsub"""		748261	1					
ANR	751004	Argument	"""asm.regsub"""		748261	0					
ANR	751005	PrimaryExpression	"""asm.regsub"""		748261	0					
ANR	751006	Argument	"""false"""		748261	1					
ANR	751007	PrimaryExpression	"""false"""		748261	0					
ANR	751008	Argument	"""Substitute register names with their associated role name (drp~=)"""		748261	2					
ANR	751009	PrimaryExpression	"""Substitute register names with their associated role name (drp~=)"""		748261	0					
ANR	751010	ExpressionStatement	"SETPREF ( ""asm.relsub"" , ""true"" , ""Substitute pc relative expressions in disasm"" )"	3019:1:93690:93768	748261	207	True				
ANR	751011	CallExpression	"SETPREF ( ""asm.relsub"" , ""true"" , ""Substitute pc relative expressions in disasm"" )"		748261	0					
ANR	751012	Callee	SETPREF		748261	0					
ANR	751013	Identifier	SETPREF		748261	0					
ANR	751014	ArgumentList	"""asm.relsub"""		748261	1					
ANR	751015	Argument	"""asm.relsub"""		748261	0					
ANR	751016	PrimaryExpression	"""asm.relsub"""		748261	0					
ANR	751017	Argument	"""true"""		748261	1					
ANR	751018	PrimaryExpression	"""true"""		748261	0					
ANR	751019	Argument	"""Substitute pc relative expressions in disasm"""		748261	2					
ANR	751020	PrimaryExpression	"""Substitute pc relative expressions in disasm"""		748261	0					
ANR	751021	ExpressionStatement	"SETPREF ( ""asm.cmt.fold"" , ""false"" , ""Fold comments, toggle with Vz"" )"	3020:1:93771:93837	748261	208	True				
ANR	751022	CallExpression	"SETPREF ( ""asm.cmt.fold"" , ""false"" , ""Fold comments, toggle with Vz"" )"		748261	0					
ANR	751023	Callee	SETPREF		748261	0					
ANR	751024	Identifier	SETPREF		748261	0					
ANR	751025	ArgumentList	"""asm.cmt.fold"""		748261	1					
ANR	751026	Argument	"""asm.cmt.fold"""		748261	0					
ANR	751027	PrimaryExpression	"""asm.cmt.fold"""		748261	0					
ANR	751028	Argument	"""false"""		748261	1					
ANR	751029	PrimaryExpression	"""false"""		748261	0					
ANR	751030	Argument	"""Fold comments, toggle with Vz"""		748261	2					
ANR	751031	PrimaryExpression	"""Fold comments, toggle with Vz"""		748261	0					
ANR	751032	ExpressionStatement	"SETPREF ( ""asm.family"" , ""false"" , ""Show family name in disasm"" )"	3021:1:93840:93901	748261	209	True				
ANR	751033	CallExpression	"SETPREF ( ""asm.family"" , ""false"" , ""Show family name in disasm"" )"		748261	0					
ANR	751034	Callee	SETPREF		748261	0					
ANR	751035	Identifier	SETPREF		748261	0					
ANR	751036	ArgumentList	"""asm.family"""		748261	1					
ANR	751037	Argument	"""asm.family"""		748261	0					
ANR	751038	PrimaryExpression	"""asm.family"""		748261	0					
ANR	751039	Argument	"""false"""		748261	1					
ANR	751040	PrimaryExpression	"""false"""		748261	0					
ANR	751041	Argument	"""Show family name in disasm"""		748261	2					
ANR	751042	PrimaryExpression	"""Show family name in disasm"""		748261	0					
ANR	751043	ExpressionStatement	"SETPREF ( ""asm.symbol"" , ""false"" , ""Show symbol+delta instead of absolute offset"" )"	3022:1:93904:93983	748261	210	True				
ANR	751044	CallExpression	"SETPREF ( ""asm.symbol"" , ""false"" , ""Show symbol+delta instead of absolute offset"" )"		748261	0					
ANR	751045	Callee	SETPREF		748261	0					
ANR	751046	Identifier	SETPREF		748261	0					
ANR	751047	ArgumentList	"""asm.symbol"""		748261	1					
ANR	751048	Argument	"""asm.symbol"""		748261	0					
ANR	751049	PrimaryExpression	"""asm.symbol"""		748261	0					
ANR	751050	Argument	"""false"""		748261	1					
ANR	751051	PrimaryExpression	"""false"""		748261	0					
ANR	751052	Argument	"""Show symbol+delta instead of absolute offset"""		748261	2					
ANR	751053	PrimaryExpression	"""Show symbol+delta instead of absolute offset"""		748261	0					
ANR	751054	ExpressionStatement	"SETPREF ( ""asm.anal"" , ""false"" , ""Analyze code and refs while disassembling (see anal.strings)"" )"	3023:1:93986:94079	748261	211	True				
ANR	751055	CallExpression	"SETPREF ( ""asm.anal"" , ""false"" , ""Analyze code and refs while disassembling (see anal.strings)"" )"		748261	0					
ANR	751056	Callee	SETPREF		748261	0					
ANR	751057	Identifier	SETPREF		748261	0					
ANR	751058	ArgumentList	"""asm.anal"""		748261	1					
ANR	751059	Argument	"""asm.anal"""		748261	0					
ANR	751060	PrimaryExpression	"""asm.anal"""		748261	0					
ANR	751061	Argument	"""false"""		748261	1					
ANR	751062	PrimaryExpression	"""false"""		748261	0					
ANR	751063	Argument	"""Analyze code and refs while disassembling (see anal.strings)"""		748261	2					
ANR	751064	PrimaryExpression	"""Analyze code and refs while disassembling (see anal.strings)"""		748261	0					
ANR	751065	ExpressionStatement	"SETI ( ""asm.symbol.col"" , 40 , ""Columns width to show asm.section"" )"	3024:1:94082:94146	748261	212	True				
ANR	751066	CallExpression	"SETI ( ""asm.symbol.col"" , 40 , ""Columns width to show asm.section"" )"		748261	0					
ANR	751067	Callee	SETI		748261	0					
ANR	751068	Identifier	SETI		748261	0					
ANR	751069	ArgumentList	"""asm.symbol.col"""		748261	1					
ANR	751070	Argument	"""asm.symbol.col"""		748261	0					
ANR	751071	PrimaryExpression	"""asm.symbol.col"""		748261	0					
ANR	751072	Argument	40		748261	1					
ANR	751073	PrimaryExpression	40		748261	0					
ANR	751074	Argument	"""Columns width to show asm.section"""		748261	2					
ANR	751075	PrimaryExpression	"""Columns width to show asm.section"""		748261	0					
ANR	751076	ExpressionStatement	"SETCB ( ""asm.assembler"" , """" , & cb_asmassembler , ""Set the plugin name to use when assembling"" )"	3025:1:94149:94240	748261	213	True				
ANR	751077	CallExpression	"SETCB ( ""asm.assembler"" , """" , & cb_asmassembler , ""Set the plugin name to use when assembling"" )"		748261	0					
ANR	751078	Callee	SETCB		748261	0					
ANR	751079	Identifier	SETCB		748261	0					
ANR	751080	ArgumentList	"""asm.assembler"""		748261	1					
ANR	751081	Argument	"""asm.assembler"""		748261	0					
ANR	751082	PrimaryExpression	"""asm.assembler"""		748261	0					
ANR	751083	Argument	""""""		748261	1					
ANR	751084	PrimaryExpression	""""""		748261	0					
ANR	751085	Argument	& cb_asmassembler		748261	2					
ANR	751086	UnaryOperationExpression	& cb_asmassembler		748261	0					
ANR	751087	UnaryOperator	&		748261	0					
ANR	751088	Identifier	cb_asmassembler		748261	1					
ANR	751089	Argument	"""Set the plugin name to use when assembling"""		748261	3					
ANR	751090	PrimaryExpression	"""Set the plugin name to use when assembling"""		748261	0					
ANR	751091	ExpressionStatement	"SETPREF ( ""asm.minicols"" , ""false"" , ""Only show the instruction in the column disasm"" )"	3026:1:94243:94326	748261	214	True				
ANR	751092	CallExpression	"SETPREF ( ""asm.minicols"" , ""false"" , ""Only show the instruction in the column disasm"" )"		748261	0					
ANR	751093	Callee	SETPREF		748261	0					
ANR	751094	Identifier	SETPREF		748261	0					
ANR	751095	ArgumentList	"""asm.minicols"""		748261	1					
ANR	751096	Argument	"""asm.minicols"""		748261	0					
ANR	751097	PrimaryExpression	"""asm.minicols"""		748261	0					
ANR	751098	Argument	"""false"""		748261	1					
ANR	751099	PrimaryExpression	"""false"""		748261	0					
ANR	751100	Argument	"""Only show the instruction in the column disasm"""		748261	2					
ANR	751101	PrimaryExpression	"""Only show the instruction in the column disasm"""		748261	0					
ANR	751102	IdentifierDeclStatement	"RConfigNode * asmcpu = NODECB ( ""asm.cpu"" , R_SYS_ARCH , & cb_asmcpu ) ;"	3027:1:94329:94393	748261	215	True				
ANR	751103	IdentifierDecl	"* asmcpu = NODECB ( ""asm.cpu"" , R_SYS_ARCH , & cb_asmcpu )"		748261	0					
ANR	751104	IdentifierDeclType	RConfigNode *		748261	0					
ANR	751105	Identifier	asmcpu		748261	1					
ANR	751106	AssignmentExpression	"* asmcpu = NODECB ( ""asm.cpu"" , R_SYS_ARCH , & cb_asmcpu )"		748261	2		=			
ANR	751107	Identifier	asmcpu		748261	0					
ANR	751108	CallExpression	"NODECB ( ""asm.cpu"" , R_SYS_ARCH , & cb_asmcpu )"		748261	1					
ANR	751109	Callee	NODECB		748261	0					
ANR	751110	Identifier	NODECB		748261	0					
ANR	751111	ArgumentList	"""asm.cpu"""		748261	1					
ANR	751112	Argument	"""asm.cpu"""		748261	0					
ANR	751113	PrimaryExpression	"""asm.cpu"""		748261	0					
ANR	751114	Argument	R_SYS_ARCH		748261	1					
ANR	751115	Identifier	R_SYS_ARCH		748261	0					
ANR	751116	Argument	& cb_asmcpu		748261	2					
ANR	751117	UnaryOperationExpression	& cb_asmcpu		748261	0					
ANR	751118	UnaryOperator	&		748261	0					
ANR	751119	Identifier	cb_asmcpu		748261	1					
ANR	751120	ExpressionStatement	"SETDESC ( asmcpu , ""Set the kind of asm.arch cpu"" )"	3028:1:94396:94444	748261	216	True				
ANR	751121	CallExpression	"SETDESC ( asmcpu , ""Set the kind of asm.arch cpu"" )"		748261	0					
ANR	751122	Callee	SETDESC		748261	0					
ANR	751123	Identifier	SETDESC		748261	0					
ANR	751124	ArgumentList	asmcpu		748261	1					
ANR	751125	Argument	asmcpu		748261	0					
ANR	751126	Identifier	asmcpu		748261	0					
ANR	751127	Argument	"""Set the kind of asm.arch cpu"""		748261	1					
ANR	751128	PrimaryExpression	"""Set the kind of asm.arch cpu"""		748261	0					
ANR	751129	IdentifierDeclStatement	"RConfigNode * asmarch = NODECB ( ""asm.arch"" , R_SYS_ARCH , & cb_asmarch ) ;"	3029:1:94447:94514	748261	217	True				
ANR	751130	IdentifierDecl	"* asmarch = NODECB ( ""asm.arch"" , R_SYS_ARCH , & cb_asmarch )"		748261	0					
ANR	751131	IdentifierDeclType	RConfigNode *		748261	0					
ANR	751132	Identifier	asmarch		748261	1					
ANR	751133	AssignmentExpression	"* asmarch = NODECB ( ""asm.arch"" , R_SYS_ARCH , & cb_asmarch )"		748261	2		=			
ANR	751134	Identifier	asmarch		748261	0					
ANR	751135	CallExpression	"NODECB ( ""asm.arch"" , R_SYS_ARCH , & cb_asmarch )"		748261	1					
ANR	751136	Callee	NODECB		748261	0					
ANR	751137	Identifier	NODECB		748261	0					
ANR	751138	ArgumentList	"""asm.arch"""		748261	1					
ANR	751139	Argument	"""asm.arch"""		748261	0					
ANR	751140	PrimaryExpression	"""asm.arch"""		748261	0					
ANR	751141	Argument	R_SYS_ARCH		748261	1					
ANR	751142	Identifier	R_SYS_ARCH		748261	0					
ANR	751143	Argument	& cb_asmarch		748261	2					
ANR	751144	UnaryOperationExpression	& cb_asmarch		748261	0					
ANR	751145	UnaryOperator	&		748261	0					
ANR	751146	Identifier	cb_asmarch		748261	1					
ANR	751147	ExpressionStatement	"SETDESC ( asmarch , ""Set the arch to be used by asm"" )"	3030:1:94517:94568	748261	218	True				
ANR	751148	CallExpression	"SETDESC ( asmarch , ""Set the arch to be used by asm"" )"		748261	0					
ANR	751149	Callee	SETDESC		748261	0					
ANR	751150	Identifier	SETDESC		748261	0					
ANR	751151	ArgumentList	asmarch		748261	1					
ANR	751152	Argument	asmarch		748261	0					
ANR	751153	Identifier	asmarch		748261	0					
ANR	751154	Argument	"""Set the arch to be used by asm"""		748261	1					
ANR	751155	PrimaryExpression	"""Set the arch to be used by asm"""		748261	0					
ANR	751156	ExpressionStatement	"update_asmarch_options ( core , asmarch )"	3032:1:94652:94690	748261	219	True				
ANR	751157	CallExpression	"update_asmarch_options ( core , asmarch )"		748261	0					
ANR	751158	Callee	update_asmarch_options		748261	0					
ANR	751159	Identifier	update_asmarch_options		748261	0					
ANR	751160	ArgumentList	core		748261	1					
ANR	751161	Argument	core		748261	0					
ANR	751162	Identifier	core		748261	0					
ANR	751163	Argument	asmarch		748261	1					
ANR	751164	Identifier	asmarch		748261	0					
ANR	751165	ExpressionStatement	"update_asmcpu_options ( core , asmcpu )"	3033:1:94693:94729	748261	220	True				
ANR	751166	CallExpression	"update_asmcpu_options ( core , asmcpu )"		748261	0					
ANR	751167	Callee	update_asmcpu_options		748261	0					
ANR	751168	Identifier	update_asmcpu_options		748261	0					
ANR	751169	ArgumentList	core		748261	1					
ANR	751170	Argument	core		748261	0					
ANR	751171	Identifier	core		748261	0					
ANR	751172	Argument	asmcpu		748261	1					
ANR	751173	Identifier	asmcpu		748261	0					
ANR	751174	ExpressionStatement	"n = NODECB ( ""asm.features"" , """" , & cb_asmfeatures )"	3034:1:94732:94780	748261	221	True				
ANR	751175	AssignmentExpression	"n = NODECB ( ""asm.features"" , """" , & cb_asmfeatures )"		748261	0		=			
ANR	751176	Identifier	n		748261	0					
ANR	751177	CallExpression	"NODECB ( ""asm.features"" , """" , & cb_asmfeatures )"		748261	1					
ANR	751178	Callee	NODECB		748261	0					
ANR	751179	Identifier	NODECB		748261	0					
ANR	751180	ArgumentList	"""asm.features"""		748261	1					
ANR	751181	Argument	"""asm.features"""		748261	0					
ANR	751182	PrimaryExpression	"""asm.features"""		748261	0					
ANR	751183	Argument	""""""		748261	1					
ANR	751184	PrimaryExpression	""""""		748261	0					
ANR	751185	Argument	& cb_asmfeatures		748261	2					
ANR	751186	UnaryOperationExpression	& cb_asmfeatures		748261	0					
ANR	751187	UnaryOperator	&		748261	0					
ANR	751188	Identifier	cb_asmfeatures		748261	1					
ANR	751189	ExpressionStatement	"SETDESC ( n , ""Specify supported features by the target CPU"" )"	3035:1:94783:94842	748261	222	True				
ANR	751190	CallExpression	"SETDESC ( n , ""Specify supported features by the target CPU"" )"		748261	0					
ANR	751191	Callee	SETDESC		748261	0					
ANR	751192	Identifier	SETDESC		748261	0					
ANR	751193	ArgumentList	n		748261	1					
ANR	751194	Argument	n		748261	0					
ANR	751195	Identifier	n		748261	0					
ANR	751196	Argument	"""Specify supported features by the target CPU"""		748261	1					
ANR	751197	PrimaryExpression	"""Specify supported features by the target CPU"""		748261	0					
ANR	751198	ExpressionStatement	"update_asmfeatures_options ( core , n )"	3036:1:94845:94881	748261	223	True				
ANR	751199	CallExpression	"update_asmfeatures_options ( core , n )"		748261	0					
ANR	751200	Callee	update_asmfeatures_options		748261	0					
ANR	751201	Identifier	update_asmfeatures_options		748261	0					
ANR	751202	ArgumentList	core		748261	1					
ANR	751203	Argument	core		748261	0					
ANR	751204	Identifier	core		748261	0					
ANR	751205	Argument	n		748261	1					
ANR	751206	Identifier	n		748261	0					
ANR	751207	ExpressionStatement	"SETCB ( ""asm.parser"" , ""x86.pseudo"" , & cb_asmparser , ""Set the asm parser to use"" )"	3037:1:94884:94962	748261	224	True				
ANR	751208	CallExpression	"SETCB ( ""asm.parser"" , ""x86.pseudo"" , & cb_asmparser , ""Set the asm parser to use"" )"		748261	0					
ANR	751209	Callee	SETCB		748261	0					
ANR	751210	Identifier	SETCB		748261	0					
ANR	751211	ArgumentList	"""asm.parser"""		748261	1					
ANR	751212	Argument	"""asm.parser"""		748261	0					
ANR	751213	PrimaryExpression	"""asm.parser"""		748261	0					
ANR	751214	Argument	"""x86.pseudo"""		748261	1					
ANR	751215	PrimaryExpression	"""x86.pseudo"""		748261	0					
ANR	751216	Argument	& cb_asmparser		748261	2					
ANR	751217	UnaryOperationExpression	& cb_asmparser		748261	0					
ANR	751218	UnaryOperator	&		748261	0					
ANR	751219	Identifier	cb_asmparser		748261	1					
ANR	751220	Argument	"""Set the asm parser to use"""		748261	3					
ANR	751221	PrimaryExpression	"""Set the asm parser to use"""		748261	0					
ANR	751222	ExpressionStatement	"SETCB ( ""asm.segoff"" , ""false"" , & cb_segoff , ""Show segmented address in prompt (x86-16)"" )"	3038:1:94965:95051	748261	225	True				
ANR	751223	CallExpression	"SETCB ( ""asm.segoff"" , ""false"" , & cb_segoff , ""Show segmented address in prompt (x86-16)"" )"		748261	0					
ANR	751224	Callee	SETCB		748261	0					
ANR	751225	Identifier	SETCB		748261	0					
ANR	751226	ArgumentList	"""asm.segoff"""		748261	1					
ANR	751227	Argument	"""asm.segoff"""		748261	0					
ANR	751228	PrimaryExpression	"""asm.segoff"""		748261	0					
ANR	751229	Argument	"""false"""		748261	1					
ANR	751230	PrimaryExpression	"""false"""		748261	0					
ANR	751231	Argument	& cb_segoff		748261	2					
ANR	751232	UnaryOperationExpression	& cb_segoff		748261	0					
ANR	751233	UnaryOperator	&		748261	0					
ANR	751234	Identifier	cb_segoff		748261	1					
ANR	751235	Argument	"""Show segmented address in prompt (x86-16)"""		748261	3					
ANR	751236	PrimaryExpression	"""Show segmented address in prompt (x86-16)"""		748261	0					
ANR	751237	ExpressionStatement	"SETCB ( ""asm.decoff"" , ""false"" , & cb_decoff , ""Show segmented address in prompt (x86-16)"" )"	3039:1:95054:95140	748261	226	True				
ANR	751238	CallExpression	"SETCB ( ""asm.decoff"" , ""false"" , & cb_decoff , ""Show segmented address in prompt (x86-16)"" )"		748261	0					
ANR	751239	Callee	SETCB		748261	0					
ANR	751240	Identifier	SETCB		748261	0					
ANR	751241	ArgumentList	"""asm.decoff"""		748261	1					
ANR	751242	Argument	"""asm.decoff"""		748261	0					
ANR	751243	PrimaryExpression	"""asm.decoff"""		748261	0					
ANR	751244	Argument	"""false"""		748261	1					
ANR	751245	PrimaryExpression	"""false"""		748261	0					
ANR	751246	Argument	& cb_decoff		748261	2					
ANR	751247	UnaryOperationExpression	& cb_decoff		748261	0					
ANR	751248	UnaryOperator	&		748261	0					
ANR	751249	Identifier	cb_decoff		748261	1					
ANR	751250	Argument	"""Show segmented address in prompt (x86-16)"""		748261	3					
ANR	751251	PrimaryExpression	"""Show segmented address in prompt (x86-16)"""		748261	0					
ANR	751252	ExpressionStatement	"SETICB ( ""asm.seggrn"" , 4 , & cb_seggrn , ""Segment granularity in bits (x86-16)"" )"	3040:1:95143:95219	748261	227	True				
ANR	751253	CallExpression	"SETICB ( ""asm.seggrn"" , 4 , & cb_seggrn , ""Segment granularity in bits (x86-16)"" )"		748261	0					
ANR	751254	Callee	SETICB		748261	0					
ANR	751255	Identifier	SETICB		748261	0					
ANR	751256	ArgumentList	"""asm.seggrn"""		748261	1					
ANR	751257	Argument	"""asm.seggrn"""		748261	0					
ANR	751258	PrimaryExpression	"""asm.seggrn"""		748261	0					
ANR	751259	Argument	4		748261	1					
ANR	751260	PrimaryExpression	4		748261	0					
ANR	751261	Argument	& cb_seggrn		748261	2					
ANR	751262	UnaryOperationExpression	& cb_seggrn		748261	0					
ANR	751263	UnaryOperator	&		748261	0					
ANR	751264	Identifier	cb_seggrn		748261	1					
ANR	751265	Argument	"""Segment granularity in bits (x86-16)"""		748261	3					
ANR	751266	PrimaryExpression	"""Segment granularity in bits (x86-16)"""		748261	0					
ANR	751267	ExpressionStatement	"n = NODECB ( ""asm.syntax"" , ""intel"" , & cb_asmsyntax )"	3041:1:95222:95271	748261	228	True				
ANR	751268	AssignmentExpression	"n = NODECB ( ""asm.syntax"" , ""intel"" , & cb_asmsyntax )"		748261	0		=			
ANR	751269	Identifier	n		748261	0					
ANR	751270	CallExpression	"NODECB ( ""asm.syntax"" , ""intel"" , & cb_asmsyntax )"		748261	1					
ANR	751271	Callee	NODECB		748261	0					
ANR	751272	Identifier	NODECB		748261	0					
ANR	751273	ArgumentList	"""asm.syntax"""		748261	1					
ANR	751274	Argument	"""asm.syntax"""		748261	0					
ANR	751275	PrimaryExpression	"""asm.syntax"""		748261	0					
ANR	751276	Argument	"""intel"""		748261	1					
ANR	751277	PrimaryExpression	"""intel"""		748261	0					
ANR	751278	Argument	& cb_asmsyntax		748261	2					
ANR	751279	UnaryOperationExpression	& cb_asmsyntax		748261	0					
ANR	751280	UnaryOperator	&		748261	0					
ANR	751281	Identifier	cb_asmsyntax		748261	1					
ANR	751282	ExpressionStatement	"SETDESC ( n , ""Select assembly syntax"" )"	3042:1:95274:95311	748261	229	True				
ANR	751283	CallExpression	"SETDESC ( n , ""Select assembly syntax"" )"		748261	0					
ANR	751284	Callee	SETDESC		748261	0					
ANR	751285	Identifier	SETDESC		748261	0					
ANR	751286	ArgumentList	n		748261	1					
ANR	751287	Argument	n		748261	0					
ANR	751288	Identifier	n		748261	0					
ANR	751289	Argument	"""Select assembly syntax"""		748261	1					
ANR	751290	PrimaryExpression	"""Select assembly syntax"""		748261	0					
ANR	751291	ExpressionStatement	"SETOPTIONS ( n , ""att"" , ""intel"" , ""masm"" , ""jz"" , ""regnum"" , NULL )"	3043:1:95314:95374	748261	230	True				
ANR	751292	CallExpression	"SETOPTIONS ( n , ""att"" , ""intel"" , ""masm"" , ""jz"" , ""regnum"" , NULL )"		748261	0					
ANR	751293	Callee	SETOPTIONS		748261	0					
ANR	751294	Identifier	SETOPTIONS		748261	0					
ANR	751295	ArgumentList	n		748261	1					
ANR	751296	Argument	n		748261	0					
ANR	751297	Identifier	n		748261	0					
ANR	751298	Argument	"""att"""		748261	1					
ANR	751299	PrimaryExpression	"""att"""		748261	0					
ANR	751300	Argument	"""intel"""		748261	2					
ANR	751301	PrimaryExpression	"""intel"""		748261	0					
ANR	751302	Argument	"""masm"""		748261	3					
ANR	751303	PrimaryExpression	"""masm"""		748261	0					
ANR	751304	Argument	"""jz"""		748261	4					
ANR	751305	PrimaryExpression	"""jz"""		748261	0					
ANR	751306	Argument	"""regnum"""		748261	5					
ANR	751307	PrimaryExpression	"""regnum"""		748261	0					
ANR	751308	Argument	NULL		748261	6					
ANR	751309	Identifier	NULL		748261	0					
ANR	751310	ExpressionStatement	"SETI ( ""asm.nbytes"" , 6 , ""Number of bytes for each opcode at disassembly"" )"	3044:1:95377:95449	748261	231	True				
ANR	751311	CallExpression	"SETI ( ""asm.nbytes"" , 6 , ""Number of bytes for each opcode at disassembly"" )"		748261	0					
ANR	751312	Callee	SETI		748261	0					
ANR	751313	Identifier	SETI		748261	0					
ANR	751314	ArgumentList	"""asm.nbytes"""		748261	1					
ANR	751315	Argument	"""asm.nbytes"""		748261	0					
ANR	751316	PrimaryExpression	"""asm.nbytes"""		748261	0					
ANR	751317	Argument	6		748261	1					
ANR	751318	PrimaryExpression	6		748261	0					
ANR	751319	Argument	"""Number of bytes for each opcode at disassembly"""		748261	2					
ANR	751320	PrimaryExpression	"""Number of bytes for each opcode at disassembly"""		748261	0					
ANR	751321	ExpressionStatement	"SETPREF ( ""asm.bytespace"" , ""false"" , ""Separate hexadecimal bytes with a whitespace"" )"	3045:1:95452:95534	748261	232	True				
ANR	751322	CallExpression	"SETPREF ( ""asm.bytespace"" , ""false"" , ""Separate hexadecimal bytes with a whitespace"" )"		748261	0					
ANR	751323	Callee	SETPREF		748261	0					
ANR	751324	Identifier	SETPREF		748261	0					
ANR	751325	ArgumentList	"""asm.bytespace"""		748261	1					
ANR	751326	Argument	"""asm.bytespace"""		748261	0					
ANR	751327	PrimaryExpression	"""asm.bytespace"""		748261	0					
ANR	751328	Argument	"""false"""		748261	1					
ANR	751329	PrimaryExpression	"""false"""		748261	0					
ANR	751330	Argument	"""Separate hexadecimal bytes with a whitespace"""		748261	2					
ANR	751331	PrimaryExpression	"""Separate hexadecimal bytes with a whitespace"""		748261	0					
ANR	751332	ExpressionStatement	"SETICB ( ""asm.bits"" , 64 , & cb_asmbits , ""Word size in bits at assembler"" )"	3047:1:95569:95639	748261	233	True				
ANR	751333	CallExpression	"SETICB ( ""asm.bits"" , 64 , & cb_asmbits , ""Word size in bits at assembler"" )"		748261	0					
ANR	751334	Callee	SETICB		748261	0					
ANR	751335	Identifier	SETICB		748261	0					
ANR	751336	ArgumentList	"""asm.bits"""		748261	1					
ANR	751337	Argument	"""asm.bits"""		748261	0					
ANR	751338	PrimaryExpression	"""asm.bits"""		748261	0					
ANR	751339	Argument	64		748261	1					
ANR	751340	PrimaryExpression	64		748261	0					
ANR	751341	Argument	& cb_asmbits		748261	2					
ANR	751342	UnaryOperationExpression	& cb_asmbits		748261	0					
ANR	751343	UnaryOperator	&		748261	0					
ANR	751344	Identifier	cb_asmbits		748261	1					
ANR	751345	Argument	"""Word size in bits at assembler"""		748261	3					
ANR	751346	PrimaryExpression	"""Word size in bits at assembler"""		748261	0					
ANR	751347	ExpressionStatement	"SETPREF ( ""asm.functions"" , ""true"" , ""Show functions in disassembly"" )"	3051:1:95728:95794	748261	234	True				
ANR	751348	CallExpression	"SETPREF ( ""asm.functions"" , ""true"" , ""Show functions in disassembly"" )"		748261	0					
ANR	751349	Callee	SETPREF		748261	0					
ANR	751350	Identifier	SETPREF		748261	0					
ANR	751351	ArgumentList	"""asm.functions"""		748261	1					
ANR	751352	Argument	"""asm.functions"""		748261	0					
ANR	751353	PrimaryExpression	"""asm.functions"""		748261	0					
ANR	751354	Argument	"""true"""		748261	1					
ANR	751355	PrimaryExpression	"""true"""		748261	0					
ANR	751356	Argument	"""Show functions in disassembly"""		748261	2					
ANR	751357	PrimaryExpression	"""Show functions in disassembly"""		748261	0					
ANR	751358	ExpressionStatement	"SETPREF ( ""asm.xrefs"" , ""true"" , ""Show xrefs in disassembly"" )"	3052:1:95797:95855	748261	235	True				
ANR	751359	CallExpression	"SETPREF ( ""asm.xrefs"" , ""true"" , ""Show xrefs in disassembly"" )"		748261	0					
ANR	751360	Callee	SETPREF		748261	0					
ANR	751361	Identifier	SETPREF		748261	0					
ANR	751362	ArgumentList	"""asm.xrefs"""		748261	1					
ANR	751363	Argument	"""asm.xrefs"""		748261	0					
ANR	751364	PrimaryExpression	"""asm.xrefs"""		748261	0					
ANR	751365	Argument	"""true"""		748261	1					
ANR	751366	PrimaryExpression	"""true"""		748261	0					
ANR	751367	Argument	"""Show xrefs in disassembly"""		748261	2					
ANR	751368	PrimaryExpression	"""Show xrefs in disassembly"""		748261	0					
ANR	751369	ExpressionStatement	"SETPREF ( ""asm.demangle"" , ""true"" , ""Show demangled symbols in disasm"" )"	3053:1:95858:95926	748261	236	True				
ANR	751370	CallExpression	"SETPREF ( ""asm.demangle"" , ""true"" , ""Show demangled symbols in disasm"" )"		748261	0					
ANR	751371	Callee	SETPREF		748261	0					
ANR	751372	Identifier	SETPREF		748261	0					
ANR	751373	ArgumentList	"""asm.demangle"""		748261	1					
ANR	751374	Argument	"""asm.demangle"""		748261	0					
ANR	751375	PrimaryExpression	"""asm.demangle"""		748261	0					
ANR	751376	Argument	"""true"""		748261	1					
ANR	751377	PrimaryExpression	"""true"""		748261	0					
ANR	751378	Argument	"""Show demangled symbols in disasm"""		748261	2					
ANR	751379	PrimaryExpression	"""Show demangled symbols in disasm"""		748261	0					
ANR	751380	ExpressionStatement	"SETPREF ( ""asm.describe"" , ""false"" , ""Show opcode description"" )"	3054:1:95929:95989	748261	237	True				
ANR	751381	CallExpression	"SETPREF ( ""asm.describe"" , ""false"" , ""Show opcode description"" )"		748261	0					
ANR	751382	Callee	SETPREF		748261	0					
ANR	751383	Identifier	SETPREF		748261	0					
ANR	751384	ArgumentList	"""asm.describe"""		748261	1					
ANR	751385	Argument	"""asm.describe"""		748261	0					
ANR	751386	PrimaryExpression	"""asm.describe"""		748261	0					
ANR	751387	Argument	"""false"""		748261	1					
ANR	751388	PrimaryExpression	"""false"""		748261	0					
ANR	751389	Argument	"""Show opcode description"""		748261	2					
ANR	751390	PrimaryExpression	"""Show opcode description"""		748261	0					
ANR	751391	ExpressionStatement	"SETPREF ( ""asm.highlight"" , """" , ""Highlight current line"" )"	3055:1:95992:96047	748261	238	True				
ANR	751392	CallExpression	"SETPREF ( ""asm.highlight"" , """" , ""Highlight current line"" )"		748261	0					
ANR	751393	Callee	SETPREF		748261	0					
ANR	751394	Identifier	SETPREF		748261	0					
ANR	751395	ArgumentList	"""asm.highlight"""		748261	1					
ANR	751396	Argument	"""asm.highlight"""		748261	0					
ANR	751397	PrimaryExpression	"""asm.highlight"""		748261	0					
ANR	751398	Argument	""""""		748261	1					
ANR	751399	PrimaryExpression	""""""		748261	0					
ANR	751400	Argument	"""Highlight current line"""		748261	2					
ANR	751401	PrimaryExpression	"""Highlight current line"""		748261	0					
ANR	751402	ExpressionStatement	"SETPREF ( ""asm.marks"" , ""true"" , ""Show marks before the disassembly"" )"	3056:1:96050:96116	748261	239	True				
ANR	751403	CallExpression	"SETPREF ( ""asm.marks"" , ""true"" , ""Show marks before the disassembly"" )"		748261	0					
ANR	751404	Callee	SETPREF		748261	0					
ANR	751405	Identifier	SETPREF		748261	0					
ANR	751406	ArgumentList	"""asm.marks"""		748261	1					
ANR	751407	Argument	"""asm.marks"""		748261	0					
ANR	751408	PrimaryExpression	"""asm.marks"""		748261	0					
ANR	751409	Argument	"""true"""		748261	1					
ANR	751410	PrimaryExpression	"""true"""		748261	0					
ANR	751411	Argument	"""Show marks before the disassembly"""		748261	2					
ANR	751412	PrimaryExpression	"""Show marks before the disassembly"""		748261	0					
ANR	751413	ExpressionStatement	"SETPREF ( ""asm.cmt.refs"" , ""false"" , ""Show flag and comments from refs in disasm"" )"	3057:1:96119:96198	748261	240	True				
ANR	751414	CallExpression	"SETPREF ( ""asm.cmt.refs"" , ""false"" , ""Show flag and comments from refs in disasm"" )"		748261	0					
ANR	751415	Callee	SETPREF		748261	0					
ANR	751416	Identifier	SETPREF		748261	0					
ANR	751417	ArgumentList	"""asm.cmt.refs"""		748261	1					
ANR	751418	Argument	"""asm.cmt.refs"""		748261	0					
ANR	751419	PrimaryExpression	"""asm.cmt.refs"""		748261	0					
ANR	751420	Argument	"""false"""		748261	1					
ANR	751421	PrimaryExpression	"""false"""		748261	0					
ANR	751422	Argument	"""Show flag and comments from refs in disasm"""		748261	2					
ANR	751423	PrimaryExpression	"""Show flag and comments from refs in disasm"""		748261	0					
ANR	751424	ExpressionStatement	"SETPREF ( ""asm.cmt.patch"" , ""false"" , ""Show patch comments in disasm"" )"	3058:1:96201:96268	748261	241	True				
ANR	751425	CallExpression	"SETPREF ( ""asm.cmt.patch"" , ""false"" , ""Show patch comments in disasm"" )"		748261	0					
ANR	751426	Callee	SETPREF		748261	0					
ANR	751427	Identifier	SETPREF		748261	0					
ANR	751428	ArgumentList	"""asm.cmt.patch"""		748261	1					
ANR	751429	Argument	"""asm.cmt.patch"""		748261	0					
ANR	751430	PrimaryExpression	"""asm.cmt.patch"""		748261	0					
ANR	751431	Argument	"""false"""		748261	1					
ANR	751432	PrimaryExpression	"""false"""		748261	0					
ANR	751433	Argument	"""Show patch comments in disasm"""		748261	2					
ANR	751434	PrimaryExpression	"""Show patch comments in disasm"""		748261	0					
ANR	751435	ExpressionStatement	"SETPREF ( ""asm.cmt.off"" , ""nodup"" , ""Show offset comment in disasm (true, false, nodup)"" )"	3059:1:96271:96357	748261	242	True				
ANR	751436	CallExpression	"SETPREF ( ""asm.cmt.off"" , ""nodup"" , ""Show offset comment in disasm (true, false, nodup)"" )"		748261	0					
ANR	751437	Callee	SETPREF		748261	0					
ANR	751438	Identifier	SETPREF		748261	0					
ANR	751439	ArgumentList	"""asm.cmt.off"""		748261	1					
ANR	751440	Argument	"""asm.cmt.off"""		748261	0					
ANR	751441	PrimaryExpression	"""asm.cmt.off"""		748261	0					
ANR	751442	Argument	"""nodup"""		748261	1					
ANR	751443	PrimaryExpression	"""nodup"""		748261	0					
ANR	751444	Argument	"""Show offset comment in disasm (true, false, nodup)"""		748261	2					
ANR	751445	PrimaryExpression	"""Show offset comment in disasm (true, false, nodup)"""		748261	0					
ANR	751446	ExpressionStatement	"SETPREF ( ""asm.payloads"" , ""false"" , ""Show payload bytes in disasm"" )"	3060:1:96360:96425	748261	243	True				
ANR	751447	CallExpression	"SETPREF ( ""asm.payloads"" , ""false"" , ""Show payload bytes in disasm"" )"		748261	0					
ANR	751448	Callee	SETPREF		748261	0					
ANR	751449	Identifier	SETPREF		748261	0					
ANR	751450	ArgumentList	"""asm.payloads"""		748261	1					
ANR	751451	Argument	"""asm.payloads"""		748261	0					
ANR	751452	PrimaryExpression	"""asm.payloads"""		748261	0					
ANR	751453	Argument	"""false"""		748261	1					
ANR	751454	PrimaryExpression	"""false"""		748261	0					
ANR	751455	Argument	"""Show payload bytes in disasm"""		748261	2					
ANR	751456	PrimaryExpression	"""Show payload bytes in disasm"""		748261	0					
ANR	751457	ExpressionStatement	"SETPREF ( ""bin.hashlimit"" , ""10M"" , ""Only compute hash when opening a file if smaller than this size"" )"	3063:1:96440:96539	748261	244	True				
ANR	751458	CallExpression	"SETPREF ( ""bin.hashlimit"" , ""10M"" , ""Only compute hash when opening a file if smaller than this size"" )"		748261	0					
ANR	751459	Callee	SETPREF		748261	0					
ANR	751460	Identifier	SETPREF		748261	0					
ANR	751461	ArgumentList	"""bin.hashlimit"""		748261	1					
ANR	751462	Argument	"""bin.hashlimit"""		748261	0					
ANR	751463	PrimaryExpression	"""bin.hashlimit"""		748261	0					
ANR	751464	Argument	"""10M"""		748261	1					
ANR	751465	PrimaryExpression	"""10M"""		748261	0					
ANR	751466	Argument	"""Only compute hash when opening a file if smaller than this size"""		748261	2					
ANR	751467	PrimaryExpression	"""Only compute hash when opening a file if smaller than this size"""		748261	0					
ANR	751468	ExpressionStatement	"SETCB ( ""bin.usextr"" , ""true"" , & cb_usextr , ""Use extract plugins when loading files"" )"	3064:1:96542:96624	748261	245	True				
ANR	751469	CallExpression	"SETCB ( ""bin.usextr"" , ""true"" , & cb_usextr , ""Use extract plugins when loading files"" )"		748261	0					
ANR	751470	Callee	SETCB		748261	0					
ANR	751471	Identifier	SETCB		748261	0					
ANR	751472	ArgumentList	"""bin.usextr"""		748261	1					
ANR	751473	Argument	"""bin.usextr"""		748261	0					
ANR	751474	PrimaryExpression	"""bin.usextr"""		748261	0					
ANR	751475	Argument	"""true"""		748261	1					
ANR	751476	PrimaryExpression	"""true"""		748261	0					
ANR	751477	Argument	& cb_usextr		748261	2					
ANR	751478	UnaryOperationExpression	& cb_usextr		748261	0					
ANR	751479	UnaryOperator	&		748261	0					
ANR	751480	Identifier	cb_usextr		748261	1					
ANR	751481	Argument	"""Use extract plugins when loading files"""		748261	3					
ANR	751482	PrimaryExpression	"""Use extract plugins when loading files"""		748261	0					
ANR	751483	ExpressionStatement	"SETCB ( ""bin.useldr"" , ""true"" , & cb_useldr , ""Use loader plugins when loading files"" )"	3065:1:96627:96708	748261	246	True				
ANR	751484	CallExpression	"SETCB ( ""bin.useldr"" , ""true"" , & cb_useldr , ""Use loader plugins when loading files"" )"		748261	0					
ANR	751485	Callee	SETCB		748261	0					
ANR	751486	Identifier	SETCB		748261	0					
ANR	751487	ArgumentList	"""bin.useldr"""		748261	1					
ANR	751488	Argument	"""bin.useldr"""		748261	0					
ANR	751489	PrimaryExpression	"""bin.useldr"""		748261	0					
ANR	751490	Argument	"""true"""		748261	1					
ANR	751491	PrimaryExpression	"""true"""		748261	0					
ANR	751492	Argument	& cb_useldr		748261	2					
ANR	751493	UnaryOperationExpression	& cb_useldr		748261	0					
ANR	751494	UnaryOperator	&		748261	0					
ANR	751495	Identifier	cb_useldr		748261	1					
ANR	751496	Argument	"""Use loader plugins when loading files"""		748261	3					
ANR	751497	PrimaryExpression	"""Use loader plugins when loading files"""		748261	0					
ANR	751498	ExpressionStatement	"SETCB ( ""bin.str.purge"" , """" , & cb_strpurge , ""Purge strings (e bin.str.purge=? provides more detail)"" )"	3066:1:96711:96810	748261	247	True				
ANR	751499	CallExpression	"SETCB ( ""bin.str.purge"" , """" , & cb_strpurge , ""Purge strings (e bin.str.purge=? provides more detail)"" )"		748261	0					
ANR	751500	Callee	SETCB		748261	0					
ANR	751501	Identifier	SETCB		748261	0					
ANR	751502	ArgumentList	"""bin.str.purge"""		748261	1					
ANR	751503	Argument	"""bin.str.purge"""		748261	0					
ANR	751504	PrimaryExpression	"""bin.str.purge"""		748261	0					
ANR	751505	Argument	""""""		748261	1					
ANR	751506	PrimaryExpression	""""""		748261	0					
ANR	751507	Argument	& cb_strpurge		748261	2					
ANR	751508	UnaryOperationExpression	& cb_strpurge		748261	0					
ANR	751509	UnaryOperator	&		748261	0					
ANR	751510	Identifier	cb_strpurge		748261	1					
ANR	751511	Argument	"""Purge strings (e bin.str.purge=? provides more detail)"""		748261	3					
ANR	751512	PrimaryExpression	"""Purge strings (e bin.str.purge=? provides more detail)"""		748261	0					
ANR	751513	ExpressionStatement	"SETPREF ( ""bin.b64str"" , ""false"" , ""Try to debase64 the strings"" )"	3067:1:96813:96875	748261	248	True				
ANR	751514	CallExpression	"SETPREF ( ""bin.b64str"" , ""false"" , ""Try to debase64 the strings"" )"		748261	0					
ANR	751515	Callee	SETPREF		748261	0					
ANR	751516	Identifier	SETPREF		748261	0					
ANR	751517	ArgumentList	"""bin.b64str"""		748261	1					
ANR	751518	Argument	"""bin.b64str"""		748261	0					
ANR	751519	PrimaryExpression	"""bin.b64str"""		748261	0					
ANR	751520	Argument	"""false"""		748261	1					
ANR	751521	PrimaryExpression	"""false"""		748261	0					
ANR	751522	Argument	"""Try to debase64 the strings"""		748261	2					
ANR	751523	PrimaryExpression	"""Try to debase64 the strings"""		748261	0					
ANR	751524	ExpressionStatement	"SETCB ( ""bin.at"" , ""false"" , & cb_binat , ""RBin.cur depends on RCore.offset"" )"	3068:1:96878:96950	748261	249	True				
ANR	751525	CallExpression	"SETCB ( ""bin.at"" , ""false"" , & cb_binat , ""RBin.cur depends on RCore.offset"" )"		748261	0					
ANR	751526	Callee	SETCB		748261	0					
ANR	751527	Identifier	SETCB		748261	0					
ANR	751528	ArgumentList	"""bin.at"""		748261	1					
ANR	751529	Argument	"""bin.at"""		748261	0					
ANR	751530	PrimaryExpression	"""bin.at"""		748261	0					
ANR	751531	Argument	"""false"""		748261	1					
ANR	751532	PrimaryExpression	"""false"""		748261	0					
ANR	751533	Argument	& cb_binat		748261	2					
ANR	751534	UnaryOperationExpression	& cb_binat		748261	0					
ANR	751535	UnaryOperator	&		748261	0					
ANR	751536	Identifier	cb_binat		748261	1					
ANR	751537	Argument	"""RBin.cur depends on RCore.offset"""		748261	3					
ANR	751538	PrimaryExpression	"""RBin.cur depends on RCore.offset"""		748261	0					
ANR	751539	ExpressionStatement	"SETPREF ( ""bin.libs"" , ""false"" , ""Try to load libraries after loading main binary"" )"	3069:1:96953:97033	748261	250	True				
ANR	751540	CallExpression	"SETPREF ( ""bin.libs"" , ""false"" , ""Try to load libraries after loading main binary"" )"		748261	0					
ANR	751541	Callee	SETPREF		748261	0					
ANR	751542	Identifier	SETPREF		748261	0					
ANR	751543	ArgumentList	"""bin.libs"""		748261	1					
ANR	751544	Argument	"""bin.libs"""		748261	0					
ANR	751545	PrimaryExpression	"""bin.libs"""		748261	0					
ANR	751546	Argument	"""false"""		748261	1					
ANR	751547	PrimaryExpression	"""false"""		748261	0					
ANR	751548	Argument	"""Try to load libraries after loading main binary"""		748261	2					
ANR	751549	PrimaryExpression	"""Try to load libraries after loading main binary"""		748261	0					
ANR	751550	ExpressionStatement	"n = NODECB ( ""bin.str.filter"" , """" , & cb_strfilter )"	3070:1:97036:97084	748261	251	True				
ANR	751551	AssignmentExpression	"n = NODECB ( ""bin.str.filter"" , """" , & cb_strfilter )"		748261	0		=			
ANR	751552	Identifier	n		748261	0					
ANR	751553	CallExpression	"NODECB ( ""bin.str.filter"" , """" , & cb_strfilter )"		748261	1					
ANR	751554	Callee	NODECB		748261	0					
ANR	751555	Identifier	NODECB		748261	0					
ANR	751556	ArgumentList	"""bin.str.filter"""		748261	1					
ANR	751557	Argument	"""bin.str.filter"""		748261	0					
ANR	751558	PrimaryExpression	"""bin.str.filter"""		748261	0					
ANR	751559	Argument	""""""		748261	1					
ANR	751560	PrimaryExpression	""""""		748261	0					
ANR	751561	Argument	& cb_strfilter		748261	2					
ANR	751562	UnaryOperationExpression	& cb_strfilter		748261	0					
ANR	751563	UnaryOperator	&		748261	0					
ANR	751564	Identifier	cb_strfilter		748261	1					
ANR	751565	ExpressionStatement	"SETDESC ( n , ""Filter strings"" )"	3071:1:97087:97116	748261	252	True				
ANR	751566	CallExpression	"SETDESC ( n , ""Filter strings"" )"		748261	0					
ANR	751567	Callee	SETDESC		748261	0					
ANR	751568	Identifier	SETDESC		748261	0					
ANR	751569	ArgumentList	n		748261	1					
ANR	751570	Argument	n		748261	0					
ANR	751571	Identifier	n		748261	0					
ANR	751572	Argument	"""Filter strings"""		748261	1					
ANR	751573	PrimaryExpression	"""Filter strings"""		748261	0					
ANR	751574	ExpressionStatement	"SETOPTIONS ( n , ""a"" , ""8"" , ""p"" , ""e"" , ""u"" , ""i"" , ""U"" , ""f"" , NULL )"	3072:1:97119:97179	748261	253	True				
ANR	751575	CallExpression	"SETOPTIONS ( n , ""a"" , ""8"" , ""p"" , ""e"" , ""u"" , ""i"" , ""U"" , ""f"" , NULL )"		748261	0					
ANR	751576	Callee	SETOPTIONS		748261	0					
ANR	751577	Identifier	SETOPTIONS		748261	0					
ANR	751578	ArgumentList	n		748261	1					
ANR	751579	Argument	n		748261	0					
ANR	751580	Identifier	n		748261	0					
ANR	751581	Argument	"""a"""		748261	1					
ANR	751582	PrimaryExpression	"""a"""		748261	0					
ANR	751583	Argument	"""8"""		748261	2					
ANR	751584	PrimaryExpression	"""8"""		748261	0					
ANR	751585	Argument	"""p"""		748261	3					
ANR	751586	PrimaryExpression	"""p"""		748261	0					
ANR	751587	Argument	"""e"""		748261	4					
ANR	751588	PrimaryExpression	"""e"""		748261	0					
ANR	751589	Argument	"""u"""		748261	5					
ANR	751590	PrimaryExpression	"""u"""		748261	0					
ANR	751591	Argument	"""i"""		748261	6					
ANR	751592	PrimaryExpression	"""i"""		748261	0					
ANR	751593	Argument	"""U"""		748261	7					
ANR	751594	PrimaryExpression	"""U"""		748261	0					
ANR	751595	Argument	"""f"""		748261	8					
ANR	751596	PrimaryExpression	"""f"""		748261	0					
ANR	751597	Argument	NULL		748261	9					
ANR	751598	Identifier	NULL		748261	0					
ANR	751599	ExpressionStatement	"SETCB ( ""bin.filter"" , ""true"" , & cb_binfilter , ""Filter symbol names to fix dupped names"" )"	3073:1:97182:97268	748261	254	True				
ANR	751600	CallExpression	"SETCB ( ""bin.filter"" , ""true"" , & cb_binfilter , ""Filter symbol names to fix dupped names"" )"		748261	0					
ANR	751601	Callee	SETCB		748261	0					
ANR	751602	Identifier	SETCB		748261	0					
ANR	751603	ArgumentList	"""bin.filter"""		748261	1					
ANR	751604	Argument	"""bin.filter"""		748261	0					
ANR	751605	PrimaryExpression	"""bin.filter"""		748261	0					
ANR	751606	Argument	"""true"""		748261	1					
ANR	751607	PrimaryExpression	"""true"""		748261	0					
ANR	751608	Argument	& cb_binfilter		748261	2					
ANR	751609	UnaryOperationExpression	& cb_binfilter		748261	0					
ANR	751610	UnaryOperator	&		748261	0					
ANR	751611	Identifier	cb_binfilter		748261	1					
ANR	751612	Argument	"""Filter symbol names to fix dupped names"""		748261	3					
ANR	751613	PrimaryExpression	"""Filter symbol names to fix dupped names"""		748261	0					
ANR	751614	ExpressionStatement	"SETCB ( ""bin.force"" , """" , & cb_binforce , ""Force that rbin plugin"" )"	3074:1:97271:97334	748261	255	True				
ANR	751615	CallExpression	"SETCB ( ""bin.force"" , """" , & cb_binforce , ""Force that rbin plugin"" )"		748261	0					
ANR	751616	Callee	SETCB		748261	0					
ANR	751617	Identifier	SETCB		748261	0					
ANR	751618	ArgumentList	"""bin.force"""		748261	1					
ANR	751619	Argument	"""bin.force"""		748261	0					
ANR	751620	PrimaryExpression	"""bin.force"""		748261	0					
ANR	751621	Argument	""""""		748261	1					
ANR	751622	PrimaryExpression	""""""		748261	0					
ANR	751623	Argument	& cb_binforce		748261	2					
ANR	751624	UnaryOperationExpression	& cb_binforce		748261	0					
ANR	751625	UnaryOperator	&		748261	0					
ANR	751626	Identifier	cb_binforce		748261	1					
ANR	751627	Argument	"""Force that rbin plugin"""		748261	3					
ANR	751628	PrimaryExpression	"""Force that rbin plugin"""		748261	0					
ANR	751629	ExpressionStatement	"SETPREF ( ""bin.lang"" , """" , ""Language for bin.demangle"" )"	3075:1:97337:97390	748261	256	True				
ANR	751630	CallExpression	"SETPREF ( ""bin.lang"" , """" , ""Language for bin.demangle"" )"		748261	0					
ANR	751631	Callee	SETPREF		748261	0					
ANR	751632	Identifier	SETPREF		748261	0					
ANR	751633	ArgumentList	"""bin.lang"""		748261	1					
ANR	751634	Argument	"""bin.lang"""		748261	0					
ANR	751635	PrimaryExpression	"""bin.lang"""		748261	0					
ANR	751636	Argument	""""""		748261	1					
ANR	751637	PrimaryExpression	""""""		748261	0					
ANR	751638	Argument	"""Language for bin.demangle"""		748261	2					
ANR	751639	PrimaryExpression	"""Language for bin.demangle"""		748261	0					
ANR	751640	ExpressionStatement	"SETPREF ( ""bin.demangle"" , ""true"" , ""Import demangled symbols from RBin"" )"	3076:1:97393:97463	748261	257	True				
ANR	751641	CallExpression	"SETPREF ( ""bin.demangle"" , ""true"" , ""Import demangled symbols from RBin"" )"		748261	0					
ANR	751642	Callee	SETPREF		748261	0					
ANR	751643	Identifier	SETPREF		748261	0					
ANR	751644	ArgumentList	"""bin.demangle"""		748261	1					
ANR	751645	Argument	"""bin.demangle"""		748261	0					
ANR	751646	PrimaryExpression	"""bin.demangle"""		748261	0					
ANR	751647	Argument	"""true"""		748261	1					
ANR	751648	PrimaryExpression	"""true"""		748261	0					
ANR	751649	Argument	"""Import demangled symbols from RBin"""		748261	2					
ANR	751650	PrimaryExpression	"""Import demangled symbols from RBin"""		748261	0					
ANR	751651	ExpressionStatement	"SETPREF ( ""bin.demangle.libs"" , ""false"" , ""Show library name on demangled symbols names"" )"	3077:1:97466:97552	748261	258	True				
ANR	751652	CallExpression	"SETPREF ( ""bin.demangle.libs"" , ""false"" , ""Show library name on demangled symbols names"" )"		748261	0					
ANR	751653	Callee	SETPREF		748261	0					
ANR	751654	Identifier	SETPREF		748261	0					
ANR	751655	ArgumentList	"""bin.demangle.libs"""		748261	1					
ANR	751656	Argument	"""bin.demangle.libs"""		748261	0					
ANR	751657	PrimaryExpression	"""bin.demangle.libs"""		748261	0					
ANR	751658	Argument	"""false"""		748261	1					
ANR	751659	PrimaryExpression	"""false"""		748261	0					
ANR	751660	Argument	"""Show library name on demangled symbols names"""		748261	2					
ANR	751661	PrimaryExpression	"""Show library name on demangled symbols names"""		748261	0					
ANR	751662	ExpressionStatement	"SETCB ( ""bin.demanglecmd"" , ""false"" , & cb_bdc , ""run xcrun swift-demangle and similar if available (SLOW)"" )"	3078:1:97555:97658	748261	259	True				
ANR	751663	CallExpression	"SETCB ( ""bin.demanglecmd"" , ""false"" , & cb_bdc , ""run xcrun swift-demangle and similar if available (SLOW)"" )"		748261	0					
ANR	751664	Callee	SETCB		748261	0					
ANR	751665	Identifier	SETCB		748261	0					
ANR	751666	ArgumentList	"""bin.demanglecmd"""		748261	1					
ANR	751667	Argument	"""bin.demanglecmd"""		748261	0					
ANR	751668	PrimaryExpression	"""bin.demanglecmd"""		748261	0					
ANR	751669	Argument	"""false"""		748261	1					
ANR	751670	PrimaryExpression	"""false"""		748261	0					
ANR	751671	Argument	& cb_bdc		748261	2					
ANR	751672	UnaryOperationExpression	& cb_bdc		748261	0					
ANR	751673	UnaryOperator	&		748261	0					
ANR	751674	Identifier	cb_bdc		748261	1					
ANR	751675	Argument	"""run xcrun swift-demangle and similar if available (SLOW)"""		748261	3					
ANR	751676	PrimaryExpression	"""run xcrun swift-demangle and similar if available (SLOW)"""		748261	0					
ANR	751677	ExpressionStatement	"SETI ( ""bin.baddr"" , - 1 , ""Base address of the binary"" )"	3079:1:97661:97713	748261	260	True				
ANR	751678	CallExpression	"SETI ( ""bin.baddr"" , - 1 , ""Base address of the binary"" )"		748261	0					
ANR	751679	Callee	SETI		748261	0					
ANR	751680	Identifier	SETI		748261	0					
ANR	751681	ArgumentList	"""bin.baddr"""		748261	1					
ANR	751682	Argument	"""bin.baddr"""		748261	0					
ANR	751683	PrimaryExpression	"""bin.baddr"""		748261	0					
ANR	751684	Argument	- 1		748261	1					
ANR	751685	UnaryOperationExpression	- 1		748261	0					
ANR	751686	UnaryOperator	-		748261	0					
ANR	751687	PrimaryExpression	1		748261	1					
ANR	751688	Argument	"""Base address of the binary"""		748261	2					
ANR	751689	PrimaryExpression	"""Base address of the binary"""		748261	0					
ANR	751690	ExpressionStatement	"SETI ( ""bin.laddr"" , 0 , ""Base address for loading library ('*.so')"" )"	3080:1:97716:97782	748261	261	True				
ANR	751691	CallExpression	"SETI ( ""bin.laddr"" , 0 , ""Base address for loading library ('*.so')"" )"		748261	0					
ANR	751692	Callee	SETI		748261	0					
ANR	751693	Identifier	SETI		748261	0					
ANR	751694	ArgumentList	"""bin.laddr"""		748261	1					
ANR	751695	Argument	"""bin.laddr"""		748261	0					
ANR	751696	PrimaryExpression	"""bin.laddr"""		748261	0					
ANR	751697	Argument	0		748261	1					
ANR	751698	PrimaryExpression	0		748261	0					
ANR	751699	Argument	"""Base address for loading library ('*.so')"""		748261	2					
ANR	751700	PrimaryExpression	"""Base address for loading library ('*.so')"""		748261	0					
ANR	751701	ExpressionStatement	"SETCB ( ""bin.dbginfo"" , ""true"" , & cb_bindbginfo , ""Load debug information at startup if available"" )"	3081:1:97785:97880	748261	262	True				
ANR	751702	CallExpression	"SETCB ( ""bin.dbginfo"" , ""true"" , & cb_bindbginfo , ""Load debug information at startup if available"" )"		748261	0					
ANR	751703	Callee	SETCB		748261	0					
ANR	751704	Identifier	SETCB		748261	0					
ANR	751705	ArgumentList	"""bin.dbginfo"""		748261	1					
ANR	751706	Argument	"""bin.dbginfo"""		748261	0					
ANR	751707	PrimaryExpression	"""bin.dbginfo"""		748261	0					
ANR	751708	Argument	"""true"""		748261	1					
ANR	751709	PrimaryExpression	"""true"""		748261	0					
ANR	751710	Argument	& cb_bindbginfo		748261	2					
ANR	751711	UnaryOperationExpression	& cb_bindbginfo		748261	0					
ANR	751712	UnaryOperator	&		748261	0					
ANR	751713	Identifier	cb_bindbginfo		748261	1					
ANR	751714	Argument	"""Load debug information at startup if available"""		748261	3					
ANR	751715	PrimaryExpression	"""Load debug information at startup if available"""		748261	0					
ANR	751716	ExpressionStatement	"SETPREF ( ""bin.relocs"" , ""true"" , ""Load relocs information at startup if available"" )"	3082:1:97883:97964	748261	263	True				
ANR	751717	CallExpression	"SETPREF ( ""bin.relocs"" , ""true"" , ""Load relocs information at startup if available"" )"		748261	0					
ANR	751718	Callee	SETPREF		748261	0					
ANR	751719	Identifier	SETPREF		748261	0					
ANR	751720	ArgumentList	"""bin.relocs"""		748261	1					
ANR	751721	Argument	"""bin.relocs"""		748261	0					
ANR	751722	PrimaryExpression	"""bin.relocs"""		748261	0					
ANR	751723	Argument	"""true"""		748261	1					
ANR	751724	PrimaryExpression	"""true"""		748261	0					
ANR	751725	Argument	"""Load relocs information at startup if available"""		748261	2					
ANR	751726	PrimaryExpression	"""Load relocs information at startup if available"""		748261	0					
ANR	751727	ExpressionStatement	"SETICB ( ""bin.minstr"" , 0 , & cb_binminstr , ""Minimum string length for r_bin"" )"	3083:1:97967:98041	748261	264	True				
ANR	751728	CallExpression	"SETICB ( ""bin.minstr"" , 0 , & cb_binminstr , ""Minimum string length for r_bin"" )"		748261	0					
ANR	751729	Callee	SETICB		748261	0					
ANR	751730	Identifier	SETICB		748261	0					
ANR	751731	ArgumentList	"""bin.minstr"""		748261	1					
ANR	751732	Argument	"""bin.minstr"""		748261	0					
ANR	751733	PrimaryExpression	"""bin.minstr"""		748261	0					
ANR	751734	Argument	0		748261	1					
ANR	751735	PrimaryExpression	0		748261	0					
ANR	751736	Argument	& cb_binminstr		748261	2					
ANR	751737	UnaryOperationExpression	& cb_binminstr		748261	0					
ANR	751738	UnaryOperator	&		748261	0					
ANR	751739	Identifier	cb_binminstr		748261	1					
ANR	751740	Argument	"""Minimum string length for r_bin"""		748261	3					
ANR	751741	PrimaryExpression	"""Minimum string length for r_bin"""		748261	0					
ANR	751742	ExpressionStatement	"SETICB ( ""bin.maxstr"" , 0 , & cb_binmaxstr , ""Maximum string length for r_bin"" )"	3084:1:98044:98118	748261	265	True				
ANR	751743	CallExpression	"SETICB ( ""bin.maxstr"" , 0 , & cb_binmaxstr , ""Maximum string length for r_bin"" )"		748261	0					
ANR	751744	Callee	SETICB		748261	0					
ANR	751745	Identifier	SETICB		748261	0					
ANR	751746	ArgumentList	"""bin.maxstr"""		748261	1					
ANR	751747	Argument	"""bin.maxstr"""		748261	0					
ANR	751748	PrimaryExpression	"""bin.maxstr"""		748261	0					
ANR	751749	Argument	0		748261	1					
ANR	751750	PrimaryExpression	0		748261	0					
ANR	751751	Argument	& cb_binmaxstr		748261	2					
ANR	751752	UnaryOperationExpression	& cb_binmaxstr		748261	0					
ANR	751753	UnaryOperator	&		748261	0					
ANR	751754	Identifier	cb_binmaxstr		748261	1					
ANR	751755	Argument	"""Maximum string length for r_bin"""		748261	3					
ANR	751756	PrimaryExpression	"""Maximum string length for r_bin"""		748261	0					
ANR	751757	ExpressionStatement	"SETICB ( ""bin.maxstrbuf"" , 1024 * 1024 * 10 , & cb_binmaxstrbuf , ""Maximum size of range to load strings from"" )"	3085:1:98121:98224	748261	266	True				
ANR	751758	CallExpression	"SETICB ( ""bin.maxstrbuf"" , 1024 * 1024 * 10 , & cb_binmaxstrbuf , ""Maximum size of range to load strings from"" )"		748261	0					
ANR	751759	Callee	SETICB		748261	0					
ANR	751760	Identifier	SETICB		748261	0					
ANR	751761	ArgumentList	"""bin.maxstrbuf"""		748261	1					
ANR	751762	Argument	"""bin.maxstrbuf"""		748261	0					
ANR	751763	PrimaryExpression	"""bin.maxstrbuf"""		748261	0					
ANR	751764	Argument	1024 * 1024 * 10		748261	1					
ANR	751765	MultiplicativeExpression	1024 * 1024 * 10		748261	0		*			
ANR	751766	PrimaryExpression	1024		748261	0					
ANR	751767	MultiplicativeExpression	1024 * 10		748261	1		*			
ANR	751768	PrimaryExpression	1024		748261	0					
ANR	751769	PrimaryExpression	10		748261	1					
ANR	751770	Argument	& cb_binmaxstrbuf		748261	2					
ANR	751771	UnaryOperationExpression	& cb_binmaxstrbuf		748261	0					
ANR	751772	UnaryOperator	&		748261	0					
ANR	751773	Identifier	cb_binmaxstrbuf		748261	1					
ANR	751774	Argument	"""Maximum size of range to load strings from"""		748261	3					
ANR	751775	PrimaryExpression	"""Maximum size of range to load strings from"""		748261	0					
ANR	751776	ExpressionStatement	"n = NODECB ( ""bin.str.enc"" , ""guess"" , & cb_binstrenc )"	3086:1:98227:98277	748261	267	True				
ANR	751777	AssignmentExpression	"n = NODECB ( ""bin.str.enc"" , ""guess"" , & cb_binstrenc )"		748261	0		=			
ANR	751778	Identifier	n		748261	0					
ANR	751779	CallExpression	"NODECB ( ""bin.str.enc"" , ""guess"" , & cb_binstrenc )"		748261	1					
ANR	751780	Callee	NODECB		748261	0					
ANR	751781	Identifier	NODECB		748261	0					
ANR	751782	ArgumentList	"""bin.str.enc"""		748261	1					
ANR	751783	Argument	"""bin.str.enc"""		748261	0					
ANR	751784	PrimaryExpression	"""bin.str.enc"""		748261	0					
ANR	751785	Argument	"""guess"""		748261	1					
ANR	751786	PrimaryExpression	"""guess"""		748261	0					
ANR	751787	Argument	& cb_binstrenc		748261	2					
ANR	751788	UnaryOperationExpression	& cb_binstrenc		748261	0					
ANR	751789	UnaryOperator	&		748261	0					
ANR	751790	Identifier	cb_binstrenc		748261	1					
ANR	751791	ExpressionStatement	"SETDESC ( n , ""Default string encoding of binary"" )"	3087:1:98280:98328	748261	268	True				
ANR	751792	CallExpression	"SETDESC ( n , ""Default string encoding of binary"" )"		748261	0					
ANR	751793	Callee	SETDESC		748261	0					
ANR	751794	Identifier	SETDESC		748261	0					
ANR	751795	ArgumentList	n		748261	1					
ANR	751796	Argument	n		748261	0					
ANR	751797	Identifier	n		748261	0					
ANR	751798	Argument	"""Default string encoding of binary"""		748261	1					
ANR	751799	PrimaryExpression	"""Default string encoding of binary"""		748261	0					
ANR	751800	ExpressionStatement	"SETOPTIONS ( n , ""latin1"" , ""utf8"" , ""utf16le"" , ""utf32le"" , ""guess"" , NULL )"	3088:1:98331:98400	748261	269	True				
ANR	751801	CallExpression	"SETOPTIONS ( n , ""latin1"" , ""utf8"" , ""utf16le"" , ""utf32le"" , ""guess"" , NULL )"		748261	0					
ANR	751802	Callee	SETOPTIONS		748261	0					
ANR	751803	Identifier	SETOPTIONS		748261	0					
ANR	751804	ArgumentList	n		748261	1					
ANR	751805	Argument	n		748261	0					
ANR	751806	Identifier	n		748261	0					
ANR	751807	Argument	"""latin1"""		748261	1					
ANR	751808	PrimaryExpression	"""latin1"""		748261	0					
ANR	751809	Argument	"""utf8"""		748261	2					
ANR	751810	PrimaryExpression	"""utf8"""		748261	0					
ANR	751811	Argument	"""utf16le"""		748261	3					
ANR	751812	PrimaryExpression	"""utf16le"""		748261	0					
ANR	751813	Argument	"""utf32le"""		748261	4					
ANR	751814	PrimaryExpression	"""utf32le"""		748261	0					
ANR	751815	Argument	"""guess"""		748261	5					
ANR	751816	PrimaryExpression	"""guess"""		748261	0					
ANR	751817	Argument	NULL		748261	6					
ANR	751818	Identifier	NULL		748261	0					
ANR	751819	ExpressionStatement	"SETCB ( ""bin.prefix"" , NULL , & cb_binprefix , ""Prefix all symbols/sections/relocs with a specific string"" )"	3089:1:98403:98505	748261	270	True				
ANR	751820	CallExpression	"SETCB ( ""bin.prefix"" , NULL , & cb_binprefix , ""Prefix all symbols/sections/relocs with a specific string"" )"		748261	0					
ANR	751821	Callee	SETCB		748261	0					
ANR	751822	Identifier	SETCB		748261	0					
ANR	751823	ArgumentList	"""bin.prefix"""		748261	1					
ANR	751824	Argument	"""bin.prefix"""		748261	0					
ANR	751825	PrimaryExpression	"""bin.prefix"""		748261	0					
ANR	751826	Argument	NULL		748261	1					
ANR	751827	Identifier	NULL		748261	0					
ANR	751828	Argument	& cb_binprefix		748261	2					
ANR	751829	UnaryOperationExpression	& cb_binprefix		748261	0					
ANR	751830	UnaryOperator	&		748261	0					
ANR	751831	Identifier	cb_binprefix		748261	1					
ANR	751832	Argument	"""Prefix all symbols/sections/relocs with a specific string"""		748261	3					
ANR	751833	PrimaryExpression	"""Prefix all symbols/sections/relocs with a specific string"""		748261	0					
ANR	751834	ExpressionStatement	"SETCB ( ""bin.rawstr"" , ""false"" , & cb_rawstr , ""Load strings from raw binaries"" )"	3090:1:98508:98583	748261	271	True				
ANR	751835	CallExpression	"SETCB ( ""bin.rawstr"" , ""false"" , & cb_rawstr , ""Load strings from raw binaries"" )"		748261	0					
ANR	751836	Callee	SETCB		748261	0					
ANR	751837	Identifier	SETCB		748261	0					
ANR	751838	ArgumentList	"""bin.rawstr"""		748261	1					
ANR	751839	Argument	"""bin.rawstr"""		748261	0					
ANR	751840	PrimaryExpression	"""bin.rawstr"""		748261	0					
ANR	751841	Argument	"""false"""		748261	1					
ANR	751842	PrimaryExpression	"""false"""		748261	0					
ANR	751843	Argument	& cb_rawstr		748261	2					
ANR	751844	UnaryOperationExpression	& cb_rawstr		748261	0					
ANR	751845	UnaryOperator	&		748261	0					
ANR	751846	Identifier	cb_rawstr		748261	1					
ANR	751847	Argument	"""Load strings from raw binaries"""		748261	3					
ANR	751848	PrimaryExpression	"""Load strings from raw binaries"""		748261	0					
ANR	751849	ExpressionStatement	"SETCB ( ""bin.strings"" , ""true"" , & cb_binstrings , ""Load strings from rbin on startup"" )"	3091:1:98586:98668	748261	272	True				
ANR	751850	CallExpression	"SETCB ( ""bin.strings"" , ""true"" , & cb_binstrings , ""Load strings from rbin on startup"" )"		748261	0					
ANR	751851	Callee	SETCB		748261	0					
ANR	751852	Identifier	SETCB		748261	0					
ANR	751853	ArgumentList	"""bin.strings"""		748261	1					
ANR	751854	Argument	"""bin.strings"""		748261	0					
ANR	751855	PrimaryExpression	"""bin.strings"""		748261	0					
ANR	751856	Argument	"""true"""		748261	1					
ANR	751857	PrimaryExpression	"""true"""		748261	0					
ANR	751858	Argument	& cb_binstrings		748261	2					
ANR	751859	UnaryOperationExpression	& cb_binstrings		748261	0					
ANR	751860	UnaryOperator	&		748261	0					
ANR	751861	Identifier	cb_binstrings		748261	1					
ANR	751862	Argument	"""Load strings from rbin on startup"""		748261	3					
ANR	751863	PrimaryExpression	"""Load strings from rbin on startup"""		748261	0					
ANR	751864	ExpressionStatement	"SETCB ( ""bin.debase64"" , ""false"" , & cb_debase64 , ""Try to debase64 all strings"" )"	3092:1:98671:98747	748261	273	True				
ANR	751865	CallExpression	"SETCB ( ""bin.debase64"" , ""false"" , & cb_debase64 , ""Try to debase64 all strings"" )"		748261	0					
ANR	751866	Callee	SETCB		748261	0					
ANR	751867	Identifier	SETCB		748261	0					
ANR	751868	ArgumentList	"""bin.debase64"""		748261	1					
ANR	751869	Argument	"""bin.debase64"""		748261	0					
ANR	751870	PrimaryExpression	"""bin.debase64"""		748261	0					
ANR	751871	Argument	"""false"""		748261	1					
ANR	751872	PrimaryExpression	"""false"""		748261	0					
ANR	751873	Argument	& cb_debase64		748261	2					
ANR	751874	UnaryOperationExpression	& cb_debase64		748261	0					
ANR	751875	UnaryOperator	&		748261	0					
ANR	751876	Identifier	cb_debase64		748261	1					
ANR	751877	Argument	"""Try to debase64 all strings"""		748261	3					
ANR	751878	PrimaryExpression	"""Try to debase64 all strings"""		748261	0					
ANR	751879	ExpressionStatement	"SETPREF ( ""bin.classes"" , ""true"" , ""Load classes from rbin on startup"" )"	3093:1:98750:98818	748261	274	True				
ANR	751880	CallExpression	"SETPREF ( ""bin.classes"" , ""true"" , ""Load classes from rbin on startup"" )"		748261	0					
ANR	751881	Callee	SETPREF		748261	0					
ANR	751882	Identifier	SETPREF		748261	0					
ANR	751883	ArgumentList	"""bin.classes"""		748261	1					
ANR	751884	Argument	"""bin.classes"""		748261	0					
ANR	751885	PrimaryExpression	"""bin.classes"""		748261	0					
ANR	751886	Argument	"""true"""		748261	1					
ANR	751887	PrimaryExpression	"""true"""		748261	0					
ANR	751888	Argument	"""Load classes from rbin on startup"""		748261	2					
ANR	751889	PrimaryExpression	"""Load classes from rbin on startup"""		748261	0					
ANR	751890	ExpressionStatement	"SETCB ( ""bin.verbose"" , ""false"" , & cb_binverbose , ""Show RBin warnings when loading binaries"" )"	3094:1:98821:98911	748261	275	True				
ANR	751891	CallExpression	"SETCB ( ""bin.verbose"" , ""false"" , & cb_binverbose , ""Show RBin warnings when loading binaries"" )"		748261	0					
ANR	751892	Callee	SETCB		748261	0					
ANR	751893	Identifier	SETCB		748261	0					
ANR	751894	ArgumentList	"""bin.verbose"""		748261	1					
ANR	751895	Argument	"""bin.verbose"""		748261	0					
ANR	751896	PrimaryExpression	"""bin.verbose"""		748261	0					
ANR	751897	Argument	"""false"""		748261	1					
ANR	751898	PrimaryExpression	"""false"""		748261	0					
ANR	751899	Argument	& cb_binverbose		748261	2					
ANR	751900	UnaryOperationExpression	& cb_binverbose		748261	0					
ANR	751901	UnaryOperator	&		748261	0					
ANR	751902	Identifier	cb_binverbose		748261	1					
ANR	751903	Argument	"""Show RBin warnings when loading binaries"""		748261	3					
ANR	751904	PrimaryExpression	"""Show RBin warnings when loading binaries"""		748261	0					
ANR	751905	ExpressionStatement	"SETPREF ( ""prj.name"" , """" , ""Name of current project"" )"	3097:1:98926:98977	748261	276	True				
ANR	751906	CallExpression	"SETPREF ( ""prj.name"" , """" , ""Name of current project"" )"		748261	0					
ANR	751907	Callee	SETPREF		748261	0					
ANR	751908	Identifier	SETPREF		748261	0					
ANR	751909	ArgumentList	"""prj.name"""		748261	1					
ANR	751910	Argument	"""prj.name"""		748261	0					
ANR	751911	PrimaryExpression	"""prj.name"""		748261	0					
ANR	751912	Argument	""""""		748261	1					
ANR	751913	PrimaryExpression	""""""		748261	0					
ANR	751914	Argument	"""Name of current project"""		748261	2					
ANR	751915	PrimaryExpression	"""Name of current project"""		748261	0					
ANR	751916	ExpressionStatement	"SETPREF ( ""prj.files"" , ""false"" , ""Save the target binary inside the project directory"" )"	3098:1:98980:99065	748261	277	True				
ANR	751917	CallExpression	"SETPREF ( ""prj.files"" , ""false"" , ""Save the target binary inside the project directory"" )"		748261	0					
ANR	751918	Callee	SETPREF		748261	0					
ANR	751919	Identifier	SETPREF		748261	0					
ANR	751920	ArgumentList	"""prj.files"""		748261	1					
ANR	751921	Argument	"""prj.files"""		748261	0					
ANR	751922	PrimaryExpression	"""prj.files"""		748261	0					
ANR	751923	Argument	"""false"""		748261	1					
ANR	751924	PrimaryExpression	"""false"""		748261	0					
ANR	751925	Argument	"""Save the target binary inside the project directory"""		748261	2					
ANR	751926	PrimaryExpression	"""Save the target binary inside the project directory"""		748261	0					
ANR	751927	ExpressionStatement	"SETPREF ( ""prj.git"" , ""false"" , ""Every project is a git repo and saving is committing"" )"	3099:1:99068:99152	748261	278	True				
ANR	751928	CallExpression	"SETPREF ( ""prj.git"" , ""false"" , ""Every project is a git repo and saving is committing"" )"		748261	0					
ANR	751929	Callee	SETPREF		748261	0					
ANR	751930	Identifier	SETPREF		748261	0					
ANR	751931	ArgumentList	"""prj.git"""		748261	1					
ANR	751932	Argument	"""prj.git"""		748261	0					
ANR	751933	PrimaryExpression	"""prj.git"""		748261	0					
ANR	751934	Argument	"""false"""		748261	1					
ANR	751935	PrimaryExpression	"""false"""		748261	0					
ANR	751936	Argument	"""Every project is a git repo and saving is committing"""		748261	2					
ANR	751937	PrimaryExpression	"""Every project is a git repo and saving is committing"""		748261	0					
ANR	751938	ExpressionStatement	"SETPREF ( ""prj.zip"" , ""false"" , ""Use ZIP format for project files"" )"	3100:1:99155:99219	748261	279	True				
ANR	751939	CallExpression	"SETPREF ( ""prj.zip"" , ""false"" , ""Use ZIP format for project files"" )"		748261	0					
ANR	751940	Callee	SETPREF		748261	0					
ANR	751941	Identifier	SETPREF		748261	0					
ANR	751942	ArgumentList	"""prj.zip"""		748261	1					
ANR	751943	Argument	"""prj.zip"""		748261	0					
ANR	751944	PrimaryExpression	"""prj.zip"""		748261	0					
ANR	751945	Argument	"""false"""		748261	1					
ANR	751946	PrimaryExpression	"""false"""		748261	0					
ANR	751947	Argument	"""Use ZIP format for project files"""		748261	2					
ANR	751948	PrimaryExpression	"""Use ZIP format for project files"""		748261	0					
ANR	751949	ExpressionStatement	"SETPREF ( ""prj.gpg"" , ""false"" , ""TODO: Encrypt project with GnuPGv2"" )"	3101:1:99222:99288	748261	280	True				
ANR	751950	CallExpression	"SETPREF ( ""prj.gpg"" , ""false"" , ""TODO: Encrypt project with GnuPGv2"" )"		748261	0					
ANR	751951	Callee	SETPREF		748261	0					
ANR	751952	Identifier	SETPREF		748261	0					
ANR	751953	ArgumentList	"""prj.gpg"""		748261	1					
ANR	751954	Argument	"""prj.gpg"""		748261	0					
ANR	751955	PrimaryExpression	"""prj.gpg"""		748261	0					
ANR	751956	Argument	"""false"""		748261	1					
ANR	751957	PrimaryExpression	"""false"""		748261	0					
ANR	751958	Argument	"""TODO: Encrypt project with GnuPGv2"""		748261	2					
ANR	751959	PrimaryExpression	"""TODO: Encrypt project with GnuPGv2"""		748261	0					
ANR	751960	ExpressionStatement	"SETPREF ( ""prj.simple"" , ""false"" , ""Use simple project saving style (functions, comments, options)"" )"	3102:1:99291:99388	748261	281	True				
ANR	751961	CallExpression	"SETPREF ( ""prj.simple"" , ""false"" , ""Use simple project saving style (functions, comments, options)"" )"		748261	0					
ANR	751962	Callee	SETPREF		748261	0					
ANR	751963	Identifier	SETPREF		748261	0					
ANR	751964	ArgumentList	"""prj.simple"""		748261	1					
ANR	751965	Argument	"""prj.simple"""		748261	0					
ANR	751966	PrimaryExpression	"""prj.simple"""		748261	0					
ANR	751967	Argument	"""false"""		748261	1					
ANR	751968	PrimaryExpression	"""false"""		748261	0					
ANR	751969	Argument	"""Use simple project saving style (functions, comments, options)"""		748261	2					
ANR	751970	PrimaryExpression	"""Use simple project saving style (functions, comments, options)"""		748261	0					
ANR	751971	ExpressionStatement	"SETPREF ( ""cfg.r2wars"" , ""false"" , ""Enable some tweaks for the r2wars game"" )"	3105:1:99403:99476	748261	282	True				
ANR	751972	CallExpression	"SETPREF ( ""cfg.r2wars"" , ""false"" , ""Enable some tweaks for the r2wars game"" )"		748261	0					
ANR	751973	Callee	SETPREF		748261	0					
ANR	751974	Identifier	SETPREF		748261	0					
ANR	751975	ArgumentList	"""cfg.r2wars"""		748261	1					
ANR	751976	Argument	"""cfg.r2wars"""		748261	0					
ANR	751977	PrimaryExpression	"""cfg.r2wars"""		748261	0					
ANR	751978	Argument	"""false"""		748261	1					
ANR	751979	PrimaryExpression	"""false"""		748261	0					
ANR	751980	Argument	"""Enable some tweaks for the r2wars game"""		748261	2					
ANR	751981	PrimaryExpression	"""Enable some tweaks for the r2wars game"""		748261	0					
ANR	751982	ExpressionStatement	"SETPREF ( ""cfg.plugins"" , ""true"" , ""Load plugins at startup"" )"	3106:1:99479:99537	748261	283	True				
ANR	751983	CallExpression	"SETPREF ( ""cfg.plugins"" , ""true"" , ""Load plugins at startup"" )"		748261	0					
ANR	751984	Callee	SETPREF		748261	0					
ANR	751985	Identifier	SETPREF		748261	0					
ANR	751986	ArgumentList	"""cfg.plugins"""		748261	1					
ANR	751987	Argument	"""cfg.plugins"""		748261	0					
ANR	751988	PrimaryExpression	"""cfg.plugins"""		748261	0					
ANR	751989	Argument	"""true"""		748261	1					
ANR	751990	PrimaryExpression	"""true"""		748261	0					
ANR	751991	Argument	"""Load plugins at startup"""		748261	2					
ANR	751992	PrimaryExpression	"""Load plugins at startup"""		748261	0					
ANR	751993	ExpressionStatement	"SETCB ( ""time.fmt"" , ""%Y-%m-%d %H:%M:%S %z"" , & cb_cfgdatefmt , ""Date format (%Y-%m-%d %H:%M:%S %z)"" )"	3107:1:99540:99636	748261	284	True				
ANR	751994	CallExpression	"SETCB ( ""time.fmt"" , ""%Y-%m-%d %H:%M:%S %z"" , & cb_cfgdatefmt , ""Date format (%Y-%m-%d %H:%M:%S %z)"" )"		748261	0					
ANR	751995	Callee	SETCB		748261	0					
ANR	751996	Identifier	SETCB		748261	0					
ANR	751997	ArgumentList	"""time.fmt"""		748261	1					
ANR	751998	Argument	"""time.fmt"""		748261	0					
ANR	751999	PrimaryExpression	"""time.fmt"""		748261	0					
ANR	752000	Argument	"""%Y-%m-%d %H:%M:%S %z"""		748261	1					
ANR	752001	PrimaryExpression	"""%Y-%m-%d %H:%M:%S %z"""		748261	0					
ANR	752002	Argument	& cb_cfgdatefmt		748261	2					
ANR	752003	UnaryOperationExpression	& cb_cfgdatefmt		748261	0					
ANR	752004	UnaryOperator	&		748261	0					
ANR	752005	Identifier	cb_cfgdatefmt		748261	1					
ANR	752006	Argument	"""Date format (%Y-%m-%d %H:%M:%S %z)"""		748261	3					
ANR	752007	PrimaryExpression	"""Date format (%Y-%m-%d %H:%M:%S %z)"""		748261	0					
ANR	752008	ExpressionStatement	"SETICB ( ""time.zone"" , 0 , & cb_timezone , ""Time zone, in hours relative to GMT: +2, -1,.."" )"	3108:1:99639:99726	748261	285	True				
ANR	752009	CallExpression	"SETICB ( ""time.zone"" , 0 , & cb_timezone , ""Time zone, in hours relative to GMT: +2, -1,.."" )"		748261	0					
ANR	752010	Callee	SETICB		748261	0					
ANR	752011	Identifier	SETICB		748261	0					
ANR	752012	ArgumentList	"""time.zone"""		748261	1					
ANR	752013	Argument	"""time.zone"""		748261	0					
ANR	752014	PrimaryExpression	"""time.zone"""		748261	0					
ANR	752015	Argument	0		748261	1					
ANR	752016	PrimaryExpression	0		748261	0					
ANR	752017	Argument	& cb_timezone		748261	2					
ANR	752018	UnaryOperationExpression	& cb_timezone		748261	0					
ANR	752019	UnaryOperator	&		748261	0					
ANR	752020	Identifier	cb_timezone		748261	1					
ANR	752021	Argument	"""Time zone, in hours relative to GMT: +2, -1,.."""		748261	3					
ANR	752022	PrimaryExpression	"""Time zone, in hours relative to GMT: +2, -1,.."""		748261	0					
ANR	752023	ExpressionStatement	"SETCB ( ""cfg.corelog"" , ""false"" , & cb_cfgcorelog , ""Log changes using the T api needed for realtime syncing"" )"	3109:1:99729:99834	748261	286	True				
ANR	752024	CallExpression	"SETCB ( ""cfg.corelog"" , ""false"" , & cb_cfgcorelog , ""Log changes using the T api needed for realtime syncing"" )"		748261	0					
ANR	752025	Callee	SETCB		748261	0					
ANR	752026	Identifier	SETCB		748261	0					
ANR	752027	ArgumentList	"""cfg.corelog"""		748261	1					
ANR	752028	Argument	"""cfg.corelog"""		748261	0					
ANR	752029	PrimaryExpression	"""cfg.corelog"""		748261	0					
ANR	752030	Argument	"""false"""		748261	1					
ANR	752031	PrimaryExpression	"""false"""		748261	0					
ANR	752032	Argument	& cb_cfgcorelog		748261	2					
ANR	752033	UnaryOperationExpression	& cb_cfgcorelog		748261	0					
ANR	752034	UnaryOperator	&		748261	0					
ANR	752035	Identifier	cb_cfgcorelog		748261	1					
ANR	752036	Argument	"""Log changes using the T api needed for realtime syncing"""		748261	3					
ANR	752037	PrimaryExpression	"""Log changes using the T api needed for realtime syncing"""		748261	0					
ANR	752038	ExpressionStatement	"SETPREF ( ""cfg.newtab"" , ""false"" , ""Show descriptions in command completion"" )"	3110:1:99837:99911	748261	287	True				
ANR	752039	CallExpression	"SETPREF ( ""cfg.newtab"" , ""false"" , ""Show descriptions in command completion"" )"		748261	0					
ANR	752040	Callee	SETPREF		748261	0					
ANR	752041	Identifier	SETPREF		748261	0					
ANR	752042	ArgumentList	"""cfg.newtab"""		748261	1					
ANR	752043	Argument	"""cfg.newtab"""		748261	0					
ANR	752044	PrimaryExpression	"""cfg.newtab"""		748261	0					
ANR	752045	Argument	"""false"""		748261	1					
ANR	752046	PrimaryExpression	"""false"""		748261	0					
ANR	752047	Argument	"""Show descriptions in command completion"""		748261	2					
ANR	752048	PrimaryExpression	"""Show descriptions in command completion"""		748261	0					
ANR	752049	ExpressionStatement	"SETCB ( ""cfg.debug"" , ""false"" , & cb_cfgdebug , ""Debugger mode"" )"	3111:1:99914:99973	748261	288	True				
ANR	752050	CallExpression	"SETCB ( ""cfg.debug"" , ""false"" , & cb_cfgdebug , ""Debugger mode"" )"		748261	0					
ANR	752051	Callee	SETCB		748261	0					
ANR	752052	Identifier	SETCB		748261	0					
ANR	752053	ArgumentList	"""cfg.debug"""		748261	1					
ANR	752054	Argument	"""cfg.debug"""		748261	0					
ANR	752055	PrimaryExpression	"""cfg.debug"""		748261	0					
ANR	752056	Argument	"""false"""		748261	1					
ANR	752057	PrimaryExpression	"""false"""		748261	0					
ANR	752058	Argument	& cb_cfgdebug		748261	2					
ANR	752059	UnaryOperationExpression	& cb_cfgdebug		748261	0					
ANR	752060	UnaryOperator	&		748261	0					
ANR	752061	Identifier	cb_cfgdebug		748261	1					
ANR	752062	Argument	"""Debugger mode"""		748261	3					
ANR	752063	PrimaryExpression	"""Debugger mode"""		748261	0					
ANR	752064	ExpressionStatement	"p = r_sys_getenv ( ""EDITOR"" )"	3112:1:99976:100003	748261	289	True				
ANR	752065	AssignmentExpression	"p = r_sys_getenv ( ""EDITOR"" )"		748261	0		=			
ANR	752066	Identifier	p		748261	0					
ANR	752067	CallExpression	"r_sys_getenv ( ""EDITOR"" )"		748261	1					
ANR	752068	Callee	r_sys_getenv		748261	0					
ANR	752069	Identifier	r_sys_getenv		748261	0					
ANR	752070	ArgumentList	"""EDITOR"""		748261	1					
ANR	752071	Argument	"""EDITOR"""		748261	0					
ANR	752072	PrimaryExpression	"""EDITOR"""		748261	0					
ANR	752073	ExpressionStatement	"r_config_set ( cfg , ""cfg.editor"" , p ? p : ""notepad"" )"	3114:1:100022:100071	748261	290	True				
ANR	752074	CallExpression	"r_config_set ( cfg , ""cfg.editor"" , p ? p : ""notepad"" )"		748261	0					
ANR	752075	Callee	r_config_set		748261	0					
ANR	752076	Identifier	r_config_set		748261	0					
ANR	752077	ArgumentList	cfg		748261	1					
ANR	752078	Argument	cfg		748261	0					
ANR	752079	Identifier	cfg		748261	0					
ANR	752080	Argument	"""cfg.editor"""		748261	1					
ANR	752081	PrimaryExpression	"""cfg.editor"""		748261	0					
ANR	752082	Argument	"p ? p : ""notepad"""		748261	2					
ANR	752083	ConditionalExpression	"p ? p : ""notepad"""		748261	0					
ANR	752084	Condition	p		748261	0					
ANR	752085	Identifier	p		748261	0					
ANR	752086	Identifier	p		748261	1					
ANR	752087	PrimaryExpression	"""notepad"""		748261	2					
ANR	752088	ExpressionStatement	free ( p )	3118:1:100134:100142	748261	291	True				
ANR	752089	CallExpression	free ( p )		748261	0					
ANR	752090	Callee	free		748261	0					
ANR	752091	Identifier	free		748261	0					
ANR	752092	ArgumentList	p		748261	1					
ANR	752093	Argument	p		748261	0					
ANR	752094	Identifier	p		748261	0					
ANR	752095	ExpressionStatement	"r_config_desc ( cfg , ""cfg.editor"" , ""Select default editor program"" )"	3119:1:100145:100211	748261	292	True				
ANR	752096	CallExpression	"r_config_desc ( cfg , ""cfg.editor"" , ""Select default editor program"" )"		748261	0					
ANR	752097	Callee	r_config_desc		748261	0					
ANR	752098	Identifier	r_config_desc		748261	0					
ANR	752099	ArgumentList	cfg		748261	1					
ANR	752100	Argument	cfg		748261	0					
ANR	752101	Identifier	cfg		748261	0					
ANR	752102	Argument	"""cfg.editor"""		748261	1					
ANR	752103	PrimaryExpression	"""cfg.editor"""		748261	0					
ANR	752104	Argument	"""Select default editor program"""		748261	2					
ANR	752105	PrimaryExpression	"""Select default editor program"""		748261	0					
ANR	752106	ExpressionStatement	"SETPREF ( ""cfg.user"" , r_sys_whoami ( buf ) , ""Set current username/pid"" )"	3120:1:100214:100282	748261	293	True				
ANR	752107	CallExpression	"SETPREF ( ""cfg.user"" , r_sys_whoami ( buf ) , ""Set current username/pid"" )"		748261	0					
ANR	752108	Callee	SETPREF		748261	0					
ANR	752109	Identifier	SETPREF		748261	0					
ANR	752110	ArgumentList	"""cfg.user"""		748261	1					
ANR	752111	Argument	"""cfg.user"""		748261	0					
ANR	752112	PrimaryExpression	"""cfg.user"""		748261	0					
ANR	752113	Argument	r_sys_whoami ( buf )		748261	1					
ANR	752114	CallExpression	r_sys_whoami ( buf )		748261	0					
ANR	752115	Callee	r_sys_whoami		748261	0					
ANR	752116	Identifier	r_sys_whoami		748261	0					
ANR	752117	ArgumentList	buf		748261	1					
ANR	752118	Argument	buf		748261	0					
ANR	752119	Identifier	buf		748261	0					
ANR	752120	Argument	"""Set current username/pid"""		748261	2					
ANR	752121	PrimaryExpression	"""Set current username/pid"""		748261	0					
ANR	752122	ExpressionStatement	"SETCB ( ""cfg.fortunes"" , ""true"" , & cb_cfg_fortunes , ""If enabled show tips at start"" )"	3121:1:100285:100366	748261	294	True				
ANR	752123	CallExpression	"SETCB ( ""cfg.fortunes"" , ""true"" , & cb_cfg_fortunes , ""If enabled show tips at start"" )"		748261	0					
ANR	752124	Callee	SETCB		748261	0					
ANR	752125	Identifier	SETCB		748261	0					
ANR	752126	ArgumentList	"""cfg.fortunes"""		748261	1					
ANR	752127	Argument	"""cfg.fortunes"""		748261	0					
ANR	752128	PrimaryExpression	"""cfg.fortunes"""		748261	0					
ANR	752129	Argument	"""true"""		748261	1					
ANR	752130	PrimaryExpression	"""true"""		748261	0					
ANR	752131	Argument	& cb_cfg_fortunes		748261	2					
ANR	752132	UnaryOperationExpression	& cb_cfg_fortunes		748261	0					
ANR	752133	UnaryOperator	&		748261	0					
ANR	752134	Identifier	cb_cfg_fortunes		748261	1					
ANR	752135	Argument	"""If enabled show tips at start"""		748261	3					
ANR	752136	PrimaryExpression	"""If enabled show tips at start"""		748261	0					
ANR	752137	ExpressionStatement	"SETCB ( ""cfg.fortunes.type"" , ""tips,fun"" , & cb_cfg_fortunes_type , ""Type of fortunes to show (tips, fun, nsfw, creepy)"" )"	3122:1:100369:100485	748261	295	True				
ANR	752138	CallExpression	"SETCB ( ""cfg.fortunes.type"" , ""tips,fun"" , & cb_cfg_fortunes_type , ""Type of fortunes to show (tips, fun, nsfw, creepy)"" )"		748261	0					
ANR	752139	Callee	SETCB		748261	0					
ANR	752140	Identifier	SETCB		748261	0					
ANR	752141	ArgumentList	"""cfg.fortunes.type"""		748261	1					
ANR	752142	Argument	"""cfg.fortunes.type"""		748261	0					
ANR	752143	PrimaryExpression	"""cfg.fortunes.type"""		748261	0					
ANR	752144	Argument	"""tips,fun"""		748261	1					
ANR	752145	PrimaryExpression	"""tips,fun"""		748261	0					
ANR	752146	Argument	& cb_cfg_fortunes_type		748261	2					
ANR	752147	UnaryOperationExpression	& cb_cfg_fortunes_type		748261	0					
ANR	752148	UnaryOperator	&		748261	0					
ANR	752149	Identifier	cb_cfg_fortunes_type		748261	1					
ANR	752150	Argument	"""Type of fortunes to show (tips, fun, nsfw, creepy)"""		748261	3					
ANR	752151	PrimaryExpression	"""Type of fortunes to show (tips, fun, nsfw, creepy)"""		748261	0					
ANR	752152	ExpressionStatement	"SETPREF ( ""cfg.fortunes.clippy"" , ""false"" , ""Use ?E instead of ?e"" )"	3123:1:100488:100552	748261	296	True				
ANR	752153	CallExpression	"SETPREF ( ""cfg.fortunes.clippy"" , ""false"" , ""Use ?E instead of ?e"" )"		748261	0					
ANR	752154	Callee	SETPREF		748261	0					
ANR	752155	Identifier	SETPREF		748261	0					
ANR	752156	ArgumentList	"""cfg.fortunes.clippy"""		748261	1					
ANR	752157	Argument	"""cfg.fortunes.clippy"""		748261	0					
ANR	752158	PrimaryExpression	"""cfg.fortunes.clippy"""		748261	0					
ANR	752159	Argument	"""false"""		748261	1					
ANR	752160	PrimaryExpression	"""false"""		748261	0					
ANR	752161	Argument	"""Use ?E instead of ?e"""		748261	2					
ANR	752162	PrimaryExpression	"""Use ?E instead of ?e"""		748261	0					
ANR	752163	ExpressionStatement	"SETPREF ( ""cfg.fortunes.tts"" , ""false"" , ""Speak out the fortune"" )"	3124:1:100555:100617	748261	297	True				
ANR	752164	CallExpression	"SETPREF ( ""cfg.fortunes.tts"" , ""false"" , ""Speak out the fortune"" )"		748261	0					
ANR	752165	Callee	SETPREF		748261	0					
ANR	752166	Identifier	SETPREF		748261	0					
ANR	752167	ArgumentList	"""cfg.fortunes.tts"""		748261	1					
ANR	752168	Argument	"""cfg.fortunes.tts"""		748261	0					
ANR	752169	PrimaryExpression	"""cfg.fortunes.tts"""		748261	0					
ANR	752170	Argument	"""false"""		748261	1					
ANR	752171	PrimaryExpression	"""false"""		748261	0					
ANR	752172	Argument	"""Speak out the fortune"""		748261	2					
ANR	752173	PrimaryExpression	"""Speak out the fortune"""		748261	0					
ANR	752174	ExpressionStatement	"SETPREF ( ""cfg.prefixdump"" , ""dump"" , ""Filename prefix for automated dumps"" )"	3125:1:100620:100693	748261	298	True				
ANR	752175	CallExpression	"SETPREF ( ""cfg.prefixdump"" , ""dump"" , ""Filename prefix for automated dumps"" )"		748261	0					
ANR	752176	Callee	SETPREF		748261	0					
ANR	752177	Identifier	SETPREF		748261	0					
ANR	752178	ArgumentList	"""cfg.prefixdump"""		748261	1					
ANR	752179	Argument	"""cfg.prefixdump"""		748261	0					
ANR	752180	PrimaryExpression	"""cfg.prefixdump"""		748261	0					
ANR	752181	Argument	"""dump"""		748261	1					
ANR	752182	PrimaryExpression	"""dump"""		748261	0					
ANR	752183	Argument	"""Filename prefix for automated dumps"""		748261	2					
ANR	752184	PrimaryExpression	"""Filename prefix for automated dumps"""		748261	0					
ANR	752185	ExpressionStatement	"SETCB ( ""cfg.sandbox"" , ""false"" , & cb_cfgsanbox , ""Sandbox mode disables systems and open on upper directories"" )"	3126:1:100696:100804	748261	299	True				
ANR	752186	CallExpression	"SETCB ( ""cfg.sandbox"" , ""false"" , & cb_cfgsanbox , ""Sandbox mode disables systems and open on upper directories"" )"		748261	0					
ANR	752187	Callee	SETCB		748261	0					
ANR	752188	Identifier	SETCB		748261	0					
ANR	752189	ArgumentList	"""cfg.sandbox"""		748261	1					
ANR	752190	Argument	"""cfg.sandbox"""		748261	0					
ANR	752191	PrimaryExpression	"""cfg.sandbox"""		748261	0					
ANR	752192	Argument	"""false"""		748261	1					
ANR	752193	PrimaryExpression	"""false"""		748261	0					
ANR	752194	Argument	& cb_cfgsanbox		748261	2					
ANR	752195	UnaryOperationExpression	& cb_cfgsanbox		748261	0					
ANR	752196	UnaryOperator	&		748261	0					
ANR	752197	Identifier	cb_cfgsanbox		748261	1					
ANR	752198	Argument	"""Sandbox mode disables systems and open on upper directories"""		748261	3					
ANR	752199	PrimaryExpression	"""Sandbox mode disables systems and open on upper directories"""		748261	0					
ANR	752200	ExpressionStatement	"SETPREF ( ""cfg.wseek"" , ""false"" , ""Seek after write"" )"	3127:1:100807:100857	748261	300	True				
ANR	752201	CallExpression	"SETPREF ( ""cfg.wseek"" , ""false"" , ""Seek after write"" )"		748261	0					
ANR	752202	Callee	SETPREF		748261	0					
ANR	752203	Identifier	SETPREF		748261	0					
ANR	752204	ArgumentList	"""cfg.wseek"""		748261	1					
ANR	752205	Argument	"""cfg.wseek"""		748261	0					
ANR	752206	PrimaryExpression	"""cfg.wseek"""		748261	0					
ANR	752207	Argument	"""false"""		748261	1					
ANR	752208	PrimaryExpression	"""false"""		748261	0					
ANR	752209	Argument	"""Seek after write"""		748261	2					
ANR	752210	PrimaryExpression	"""Seek after write"""		748261	0					
ANR	752211	ExpressionStatement	"SETCB ( ""cfg.bigendian"" , ""false"" , & cb_bigendian , ""Use little (false) or big (true) endianness"" )"	3128:1:100860:100954	748261	301	True				
ANR	752212	CallExpression	"SETCB ( ""cfg.bigendian"" , ""false"" , & cb_bigendian , ""Use little (false) or big (true) endianness"" )"		748261	0					
ANR	752213	Callee	SETCB		748261	0					
ANR	752214	Identifier	SETCB		748261	0					
ANR	752215	ArgumentList	"""cfg.bigendian"""		748261	1					
ANR	752216	Argument	"""cfg.bigendian"""		748261	0					
ANR	752217	PrimaryExpression	"""cfg.bigendian"""		748261	0					
ANR	752218	Argument	"""false"""		748261	1					
ANR	752219	PrimaryExpression	"""false"""		748261	0					
ANR	752220	Argument	& cb_bigendian		748261	2					
ANR	752221	UnaryOperationExpression	& cb_bigendian		748261	0					
ANR	752222	UnaryOperator	&		748261	0					
ANR	752223	Identifier	cb_bigendian		748261	1					
ANR	752224	Argument	"""Use little (false) or big (true) endianness"""		748261	3					
ANR	752225	PrimaryExpression	"""Use little (false) or big (true) endianness"""		748261	0					
ANR	752226	ExpressionStatement	"p = r_sys_getenv ( ""R2_LOGLEVEL"" )"	3132:1:100997:101029	748261	302	True				
ANR	752227	AssignmentExpression	"p = r_sys_getenv ( ""R2_LOGLEVEL"" )"		748261	0		=			
ANR	752228	Identifier	p		748261	0					
ANR	752229	CallExpression	"r_sys_getenv ( ""R2_LOGLEVEL"" )"		748261	1					
ANR	752230	Callee	r_sys_getenv		748261	0					
ANR	752231	Identifier	r_sys_getenv		748261	0					
ANR	752232	ArgumentList	"""R2_LOGLEVEL"""		748261	1					
ANR	752233	Argument	"""R2_LOGLEVEL"""		748261	0					
ANR	752234	PrimaryExpression	"""R2_LOGLEVEL"""		748261	0					
ANR	752235	Statement	SETICB	3133:1:101032:101037	748261	303	True				
ANR	752236	Statement	(	3133:8:101039:101039	748261	304	True				
ANR	752237	Statement	"""log.level"""	3133:9:101040:101050	748261	305	True				
ANR	752238	Statement	","	3133:20:101051:101051	748261	306	True				
ANR	752239	Statement	p	3133:22:101053:101053	748261	307	True				
ANR	752240	Statement	?	3133:24:101055:101055	748261	308	True				
ANR	752241	Statement	atoi	3133:26:101057:101060	748261	309	True				
ANR	752242	Statement	(	3133:30:101061:101061	748261	310	True				
ANR	752243	Statement	p	3133:31:101062:101062	748261	311	True				
ANR	752244	Statement	)	3133:32:101063:101063	748261	312	True				
ANR	752245	Statement	:	3133:34:101065:101065	748261	313	True				
ANR	752246	Statement	R_DEFAULT_LOGLVL	3133:36:101067:101082	748261	314	True				
ANR	752247	Statement	","	3133:52:101083:101083	748261	315	True				
ANR	752248	Statement	cb_log_config_level	3133:54:101085:101103	748261	316	True				
ANR	752249	Statement	","	3133:73:101104:101104	748261	317	True				
ANR	752250	Statement	"""Target log level/severity"""	3133:75:101106:101132	748261	318	True				
ANR	752251	Statement	""" (0:SILLY, 1:DEBUG, 2:VERBOSE, 3:INFO, 4:WARN, 5:ERROR, 6:FATAL)"""	3134:2:101137:101202	748261	319	True				
ANR	752252	Statement	)	3135:1:101205:101205	748261	320	True				
ANR	752253	ExpressionStatement		3135:2:101206:101206	748261	321	True				
ANR	752254	ExpressionStatement	free ( p )	3136:1:101209:101217	748261	322	True				
ANR	752255	CallExpression	free ( p )		748261	0					
ANR	752256	Callee	free		748261	0					
ANR	752257	Identifier	free		748261	0					
ANR	752258	ArgumentList	p		748261	1					
ANR	752259	Argument	p		748261	0					
ANR	752260	Identifier	p		748261	0					
ANR	752261	ExpressionStatement	"p = r_sys_getenv ( ""R2_LOGTRAPLEVEL"" )"	3138:1:101257:101293	748261	323	True				
ANR	752262	AssignmentExpression	"p = r_sys_getenv ( ""R2_LOGTRAPLEVEL"" )"		748261	0		=			
ANR	752263	Identifier	p		748261	0					
ANR	752264	CallExpression	"r_sys_getenv ( ""R2_LOGTRAPLEVEL"" )"		748261	1					
ANR	752265	Callee	r_sys_getenv		748261	0					
ANR	752266	Identifier	r_sys_getenv		748261	0					
ANR	752267	ArgumentList	"""R2_LOGTRAPLEVEL"""		748261	1					
ANR	752268	Argument	"""R2_LOGTRAPLEVEL"""		748261	0					
ANR	752269	PrimaryExpression	"""R2_LOGTRAPLEVEL"""		748261	0					
ANR	752270	Statement	SETICB	3139:1:101296:101301	748261	324	True				
ANR	752271	Statement	(	3139:8:101303:101303	748261	325	True				
ANR	752272	Statement	"""log.traplevel"""	3139:9:101304:101318	748261	326	True				
ANR	752273	Statement	","	3139:24:101319:101319	748261	327	True				
ANR	752274	Statement	p	3139:26:101321:101321	748261	328	True				
ANR	752275	Statement	?	3139:28:101323:101323	748261	329	True				
ANR	752276	Statement	atoi	3139:30:101325:101328	748261	330	True				
ANR	752277	Statement	(	3139:34:101329:101329	748261	331	True				
ANR	752278	Statement	p	3139:35:101330:101330	748261	332	True				
ANR	752279	Statement	)	3139:36:101331:101331	748261	333	True				
ANR	752280	Statement	:	3139:38:101333:101333	748261	334	True				
ANR	752281	Statement	R_LOGLVL_FATAL	3139:40:101335:101348	748261	335	True				
ANR	752282	Statement	","	3139:54:101349:101349	748261	336	True				
ANR	752283	Statement	cb_log_config_traplevel	3139:56:101351:101373	748261	337	True				
ANR	752284	Statement	","	3139:79:101374:101374	748261	338	True				
ANR	752285	Statement	"""Log level for trapping R2 when hit"""	3139:81:101376:101411	748261	339	True				
ANR	752286	Statement	""" (0:SILLY, 1:VERBOSE, 2:DEBUG, 3:INFO, 4:WARN, 5:ERROR, 6:FATAL)"""	3140:2:101416:101481	748261	340	True				
ANR	752287	Statement	)	3141:1:101484:101484	748261	341	True				
ANR	752288	ExpressionStatement		3141:2:101485:101485	748261	342	True				
ANR	752289	ExpressionStatement	free ( p )	3142:1:101488:101496	748261	343	True				
ANR	752290	CallExpression	free ( p )		748261	0					
ANR	752291	Callee	free		748261	0					
ANR	752292	Identifier	free		748261	0					
ANR	752293	ArgumentList	p		748261	1					
ANR	752294	Argument	p		748261	0					
ANR	752295	Identifier	p		748261	0					
ANR	752296	ExpressionStatement	"p = r_sys_getenv ( ""R2_LOGFILE"" )"	3144:1:101525:101556	748261	344	True				
ANR	752297	AssignmentExpression	"p = r_sys_getenv ( ""R2_LOGFILE"" )"		748261	0		=			
ANR	752298	Identifier	p		748261	0					
ANR	752299	CallExpression	"r_sys_getenv ( ""R2_LOGFILE"" )"		748261	1					
ANR	752300	Callee	r_sys_getenv		748261	0					
ANR	752301	Identifier	r_sys_getenv		748261	0					
ANR	752302	ArgumentList	"""R2_LOGFILE"""		748261	1					
ANR	752303	Argument	"""R2_LOGFILE"""		748261	0					
ANR	752304	PrimaryExpression	"""R2_LOGFILE"""		748261	0					
ANR	752305	ExpressionStatement	"SETCB ( ""log.file"" , p ? p : """" , cb_log_config_file , ""Logging output filename / path"" )"	3145:1:101559:101643	748261	345	True				
ANR	752306	CallExpression	"SETCB ( ""log.file"" , p ? p : """" , cb_log_config_file , ""Logging output filename / path"" )"		748261	0					
ANR	752307	Callee	SETCB		748261	0					
ANR	752308	Identifier	SETCB		748261	0					
ANR	752309	ArgumentList	"""log.file"""		748261	1					
ANR	752310	Argument	"""log.file"""		748261	0					
ANR	752311	PrimaryExpression	"""log.file"""		748261	0					
ANR	752312	Argument	"p ? p : """""		748261	1					
ANR	752313	ConditionalExpression	"p ? p : """""		748261	0					
ANR	752314	Condition	p		748261	0					
ANR	752315	Identifier	p		748261	0					
ANR	752316	Identifier	p		748261	1					
ANR	752317	PrimaryExpression	""""""		748261	2					
ANR	752318	Argument	cb_log_config_file		748261	2					
ANR	752319	Identifier	cb_log_config_file		748261	0					
ANR	752320	Argument	"""Logging output filename / path"""		748261	3					
ANR	752321	PrimaryExpression	"""Logging output filename / path"""		748261	0					
ANR	752322	ExpressionStatement	free ( p )	3146:1:101646:101654	748261	346	True				
ANR	752323	CallExpression	free ( p )		748261	0					
ANR	752324	Callee	free		748261	0					
ANR	752325	Identifier	free		748261	0					
ANR	752326	ArgumentList	p		748261	1					
ANR	752327	Argument	p		748261	0					
ANR	752328	Identifier	p		748261	0					
ANR	752329	ExpressionStatement	"p = r_sys_getenv ( ""R2_LOGSRCINFO"" )"	3148:1:101689:101723	748261	347	True				
ANR	752330	AssignmentExpression	"p = r_sys_getenv ( ""R2_LOGSRCINFO"" )"		748261	0		=			
ANR	752331	Identifier	p		748261	0					
ANR	752332	CallExpression	"r_sys_getenv ( ""R2_LOGSRCINFO"" )"		748261	1					
ANR	752333	Callee	r_sys_getenv		748261	0					
ANR	752334	Identifier	r_sys_getenv		748261	0					
ANR	752335	ArgumentList	"""R2_LOGSRCINFO"""		748261	1					
ANR	752336	Argument	"""R2_LOGSRCINFO"""		748261	0					
ANR	752337	PrimaryExpression	"""R2_LOGSRCINFO"""		748261	0					
ANR	752338	ExpressionStatement	"SETCB ( ""log.srcinfo"" , p ? p : ""false"" , cb_log_config_srcinfo , ""Should the log output contain src info (filename:lineno)"" )"	3149:1:101726:101847	748261	348	True				
ANR	752339	CallExpression	"SETCB ( ""log.srcinfo"" , p ? p : ""false"" , cb_log_config_srcinfo , ""Should the log output contain src info (filename:lineno)"" )"		748261	0					
ANR	752340	Callee	SETCB		748261	0					
ANR	752341	Identifier	SETCB		748261	0					
ANR	752342	ArgumentList	"""log.srcinfo"""		748261	1					
ANR	752343	Argument	"""log.srcinfo"""		748261	0					
ANR	752344	PrimaryExpression	"""log.srcinfo"""		748261	0					
ANR	752345	Argument	"p ? p : ""false"""		748261	1					
ANR	752346	ConditionalExpression	"p ? p : ""false"""		748261	0					
ANR	752347	Condition	p		748261	0					
ANR	752348	Identifier	p		748261	0					
ANR	752349	Identifier	p		748261	1					
ANR	752350	PrimaryExpression	"""false"""		748261	2					
ANR	752351	Argument	cb_log_config_srcinfo		748261	2					
ANR	752352	Identifier	cb_log_config_srcinfo		748261	0					
ANR	752353	Argument	"""Should the log output contain src info (filename:lineno)"""		748261	3					
ANR	752354	PrimaryExpression	"""Should the log output contain src info (filename:lineno)"""		748261	0					
ANR	752355	ExpressionStatement	free ( p )	3150:1:101850:101858	748261	349	True				
ANR	752356	CallExpression	free ( p )		748261	0					
ANR	752357	Callee	free		748261	0					
ANR	752358	Identifier	free		748261	0					
ANR	752359	ArgumentList	p		748261	1					
ANR	752360	Argument	p		748261	0					
ANR	752361	Identifier	p		748261	0					
ANR	752362	ExpressionStatement	"p = r_sys_getenv ( ""R2_LOGCOLORS"" )"	3152:1:101891:101924	748261	350	True				
ANR	752363	AssignmentExpression	"p = r_sys_getenv ( ""R2_LOGCOLORS"" )"		748261	0		=			
ANR	752364	Identifier	p		748261	0					
ANR	752365	CallExpression	"r_sys_getenv ( ""R2_LOGCOLORS"" )"		748261	1					
ANR	752366	Callee	r_sys_getenv		748261	0					
ANR	752367	Identifier	r_sys_getenv		748261	0					
ANR	752368	ArgumentList	"""R2_LOGCOLORS"""		748261	1					
ANR	752369	Argument	"""R2_LOGCOLORS"""		748261	0					
ANR	752370	PrimaryExpression	"""R2_LOGCOLORS"""		748261	0					
ANR	752371	ExpressionStatement	"SETCB ( ""log.colors"" , p ? p : ""false"" , cb_log_config_colors , ""Should the log output use colors (TODO)"" )"	3153:1:101927:102029	748261	351	True				
ANR	752372	CallExpression	"SETCB ( ""log.colors"" , p ? p : ""false"" , cb_log_config_colors , ""Should the log output use colors (TODO)"" )"		748261	0					
ANR	752373	Callee	SETCB		748261	0					
ANR	752374	Identifier	SETCB		748261	0					
ANR	752375	ArgumentList	"""log.colors"""		748261	1					
ANR	752376	Argument	"""log.colors"""		748261	0					
ANR	752377	PrimaryExpression	"""log.colors"""		748261	0					
ANR	752378	Argument	"p ? p : ""false"""		748261	1					
ANR	752379	ConditionalExpression	"p ? p : ""false"""		748261	0					
ANR	752380	Condition	p		748261	0					
ANR	752381	Identifier	p		748261	0					
ANR	752382	Identifier	p		748261	1					
ANR	752383	PrimaryExpression	"""false"""		748261	2					
ANR	752384	Argument	cb_log_config_colors		748261	2					
ANR	752385	Identifier	cb_log_config_colors		748261	0					
ANR	752386	Argument	"""Should the log output use colors (TODO)"""		748261	3					
ANR	752387	PrimaryExpression	"""Should the log output use colors (TODO)"""		748261	0					
ANR	752388	ExpressionStatement	free ( p )	3154:1:102032:102040	748261	352	True				
ANR	752389	CallExpression	free ( p )		748261	0					
ANR	752390	Callee	free		748261	0					
ANR	752391	Identifier	free		748261	0					
ANR	752392	ArgumentList	p		748261	1					
ANR	752393	Argument	p		748261	0					
ANR	752394	Identifier	p		748261	0					
ANR	752395	ExpressionStatement	"SETCB ( ""log.events"" , ""false"" , & cb_log_events , ""Remote HTTP server to sync events with"" )"	3156:1:102044:102131	748261	353	True				
ANR	752396	CallExpression	"SETCB ( ""log.events"" , ""false"" , & cb_log_events , ""Remote HTTP server to sync events with"" )"		748261	0					
ANR	752397	Callee	SETCB		748261	0					
ANR	752398	Identifier	SETCB		748261	0					
ANR	752399	ArgumentList	"""log.events"""		748261	1					
ANR	752400	Argument	"""log.events"""		748261	0					
ANR	752401	PrimaryExpression	"""log.events"""		748261	0					
ANR	752402	Argument	"""false"""		748261	1					
ANR	752403	PrimaryExpression	"""false"""		748261	0					
ANR	752404	Argument	& cb_log_events		748261	2					
ANR	752405	UnaryOperationExpression	& cb_log_events		748261	0					
ANR	752406	UnaryOperator	&		748261	0					
ANR	752407	Identifier	cb_log_events		748261	1					
ANR	752408	Argument	"""Remote HTTP server to sync events with"""		748261	3					
ANR	752409	PrimaryExpression	"""Remote HTTP server to sync events with"""		748261	0					
ANR	752410	ExpressionStatement	"SETPREF ( ""zign.prefix"" , ""sign"" , ""Default prefix for zignatures matches"" )"	3159:1:102144:102216	748261	354	True				
ANR	752411	CallExpression	"SETPREF ( ""zign.prefix"" , ""sign"" , ""Default prefix for zignatures matches"" )"		748261	0					
ANR	752412	Callee	SETPREF		748261	0					
ANR	752413	Identifier	SETPREF		748261	0					
ANR	752414	ArgumentList	"""zign.prefix"""		748261	1					
ANR	752415	Argument	"""zign.prefix"""		748261	0					
ANR	752416	PrimaryExpression	"""zign.prefix"""		748261	0					
ANR	752417	Argument	"""sign"""		748261	1					
ANR	752418	PrimaryExpression	"""sign"""		748261	0					
ANR	752419	Argument	"""Default prefix for zignatures matches"""		748261	2					
ANR	752420	PrimaryExpression	"""Default prefix for zignatures matches"""		748261	0					
ANR	752421	ExpressionStatement	"SETI ( ""zign.maxsz"" , 500 , ""Maximum zignature length"" )"	3160:1:102219:102271	748261	355	True				
ANR	752422	CallExpression	"SETI ( ""zign.maxsz"" , 500 , ""Maximum zignature length"" )"		748261	0					
ANR	752423	Callee	SETI		748261	0					
ANR	752424	Identifier	SETI		748261	0					
ANR	752425	ArgumentList	"""zign.maxsz"""		748261	1					
ANR	752426	Argument	"""zign.maxsz"""		748261	0					
ANR	752427	PrimaryExpression	"""zign.maxsz"""		748261	0					
ANR	752428	Argument	500		748261	1					
ANR	752429	PrimaryExpression	500		748261	0					
ANR	752430	Argument	"""Maximum zignature length"""		748261	2					
ANR	752431	PrimaryExpression	"""Maximum zignature length"""		748261	0					
ANR	752432	ExpressionStatement	"SETI ( ""zign.minsz"" , 16 , ""Minimum zignature length for matching"" )"	3161:1:102274:102338	748261	356	True				
ANR	752433	CallExpression	"SETI ( ""zign.minsz"" , 16 , ""Minimum zignature length for matching"" )"		748261	0					
ANR	752434	Callee	SETI		748261	0					
ANR	752435	Identifier	SETI		748261	0					
ANR	752436	ArgumentList	"""zign.minsz"""		748261	1					
ANR	752437	Argument	"""zign.minsz"""		748261	0					
ANR	752438	PrimaryExpression	"""zign.minsz"""		748261	0					
ANR	752439	Argument	16		748261	1					
ANR	752440	PrimaryExpression	16		748261	0					
ANR	752441	Argument	"""Minimum zignature length for matching"""		748261	2					
ANR	752442	PrimaryExpression	"""Minimum zignature length for matching"""		748261	0					
ANR	752443	ExpressionStatement	"SETI ( ""zign.mincc"" , 10 , ""Minimum cyclomatic complexity for matching"" )"	3162:1:102341:102410	748261	357	True				
ANR	752444	CallExpression	"SETI ( ""zign.mincc"" , 10 , ""Minimum cyclomatic complexity for matching"" )"		748261	0					
ANR	752445	Callee	SETI		748261	0					
ANR	752446	Identifier	SETI		748261	0					
ANR	752447	ArgumentList	"""zign.mincc"""		748261	1					
ANR	752448	Argument	"""zign.mincc"""		748261	0					
ANR	752449	PrimaryExpression	"""zign.mincc"""		748261	0					
ANR	752450	Argument	10		748261	1					
ANR	752451	PrimaryExpression	10		748261	0					
ANR	752452	Argument	"""Minimum cyclomatic complexity for matching"""		748261	2					
ANR	752453	PrimaryExpression	"""Minimum cyclomatic complexity for matching"""		748261	0					
ANR	752454	ExpressionStatement	"SETPREF ( ""zign.graph"" , ""true"" , ""Use graph metrics for matching"" )"	3163:1:102413:102477	748261	358	True				
ANR	752455	CallExpression	"SETPREF ( ""zign.graph"" , ""true"" , ""Use graph metrics for matching"" )"		748261	0					
ANR	752456	Callee	SETPREF		748261	0					
ANR	752457	Identifier	SETPREF		748261	0					
ANR	752458	ArgumentList	"""zign.graph"""		748261	1					
ANR	752459	Argument	"""zign.graph"""		748261	0					
ANR	752460	PrimaryExpression	"""zign.graph"""		748261	0					
ANR	752461	Argument	"""true"""		748261	1					
ANR	752462	PrimaryExpression	"""true"""		748261	0					
ANR	752463	Argument	"""Use graph metrics for matching"""		748261	2					
ANR	752464	PrimaryExpression	"""Use graph metrics for matching"""		748261	0					
ANR	752465	ExpressionStatement	"SETPREF ( ""zign.bytes"" , ""true"" , ""Use bytes patterns for matching"" )"	3164:1:102480:102545	748261	359	True				
ANR	752466	CallExpression	"SETPREF ( ""zign.bytes"" , ""true"" , ""Use bytes patterns for matching"" )"		748261	0					
ANR	752467	Callee	SETPREF		748261	0					
ANR	752468	Identifier	SETPREF		748261	0					
ANR	752469	ArgumentList	"""zign.bytes"""		748261	1					
ANR	752470	Argument	"""zign.bytes"""		748261	0					
ANR	752471	PrimaryExpression	"""zign.bytes"""		748261	0					
ANR	752472	Argument	"""true"""		748261	1					
ANR	752473	PrimaryExpression	"""true"""		748261	0					
ANR	752474	Argument	"""Use bytes patterns for matching"""		748261	2					
ANR	752475	PrimaryExpression	"""Use bytes patterns for matching"""		748261	0					
ANR	752476	ExpressionStatement	"SETPREF ( ""zign.offset"" , ""true"" , ""Use original offset for matching"" )"	3165:1:102548:102615	748261	360	True				
ANR	752477	CallExpression	"SETPREF ( ""zign.offset"" , ""true"" , ""Use original offset for matching"" )"		748261	0					
ANR	752478	Callee	SETPREF		748261	0					
ANR	752479	Identifier	SETPREF		748261	0					
ANR	752480	ArgumentList	"""zign.offset"""		748261	1					
ANR	752481	Argument	"""zign.offset"""		748261	0					
ANR	752482	PrimaryExpression	"""zign.offset"""		748261	0					
ANR	752483	Argument	"""true"""		748261	1					
ANR	752484	PrimaryExpression	"""true"""		748261	0					
ANR	752485	Argument	"""Use original offset for matching"""		748261	2					
ANR	752486	PrimaryExpression	"""Use original offset for matching"""		748261	0					
ANR	752487	ExpressionStatement	"SETPREF ( ""zign.refs"" , ""true"" , ""Use references for matching"" )"	3166:1:102618:102678	748261	361	True				
ANR	752488	CallExpression	"SETPREF ( ""zign.refs"" , ""true"" , ""Use references for matching"" )"		748261	0					
ANR	752489	Callee	SETPREF		748261	0					
ANR	752490	Identifier	SETPREF		748261	0					
ANR	752491	ArgumentList	"""zign.refs"""		748261	1					
ANR	752492	Argument	"""zign.refs"""		748261	0					
ANR	752493	PrimaryExpression	"""zign.refs"""		748261	0					
ANR	752494	Argument	"""true"""		748261	1					
ANR	752495	PrimaryExpression	"""true"""		748261	0					
ANR	752496	Argument	"""Use references for matching"""		748261	2					
ANR	752497	PrimaryExpression	"""Use references for matching"""		748261	0					
ANR	752498	ExpressionStatement	"SETPREF ( ""zign.hash"" , ""true"" , ""Use Hash for matching"" )"	3167:1:102681:102735	748261	362	True				
ANR	752499	CallExpression	"SETPREF ( ""zign.hash"" , ""true"" , ""Use Hash for matching"" )"		748261	0					
ANR	752500	Callee	SETPREF		748261	0					
ANR	752501	Identifier	SETPREF		748261	0					
ANR	752502	ArgumentList	"""zign.hash"""		748261	1					
ANR	752503	Argument	"""zign.hash"""		748261	0					
ANR	752504	PrimaryExpression	"""zign.hash"""		748261	0					
ANR	752505	Argument	"""true"""		748261	1					
ANR	752506	PrimaryExpression	"""true"""		748261	0					
ANR	752507	Argument	"""Use Hash for matching"""		748261	2					
ANR	752508	PrimaryExpression	"""Use Hash for matching"""		748261	0					
ANR	752509	Statement	SETPREF	3168:1:102738:102744	748261	363	True				
ANR	752510	Statement	(	3168:9:102746:102746	748261	364	True				
ANR	752511	Statement	"""zign.autoload"""	3168:10:102747:102761	748261	365	True				
ANR	752512	Statement	","	3168:25:102762:102762	748261	366	True				
ANR	752513	Statement	"""false"""	3168:27:102764:102770	748261	367	True				
ANR	752514	Statement	","	3168:34:102771:102771	748261	368	True				
ANR	752515	Statement	"""Autoload all zignatures located in """	3168:36:102773:102809	748261	369	True				
ANR	752516	Statement	R_JOIN_2_PATHS	3168:74:102811:102824	748261	370	True				
ANR	752517	Statement	(	3168:89:102826:102826	748261	371	True				
ANR	752518	Statement	"""~"""	3168:90:102827:102829	748261	372	True				
ANR	752519	Statement	","	3168:93:102830:102830	748261	373	True				
ANR	752520	Statement	R2_HOME_ZIGNS	3168:95:102832:102844	748261	374	True				
ANR	752521	Statement	)	3168:108:102845:102845	748261	375	True				
ANR	752522	Statement	)	3168:109:102846:102846	748261	376	True				
ANR	752523	ExpressionStatement		3168:110:102847:102847	748261	377	True				
ANR	752524	ExpressionStatement	"SETPREF ( ""zign.diff.bthresh"" , ""1.0"" , ""Threshold for diffing zign bytes [0, 1] (see zc?)"" )"	3169:1:102850:102939	748261	378	True				
ANR	752525	CallExpression	"SETPREF ( ""zign.diff.bthresh"" , ""1.0"" , ""Threshold for diffing zign bytes [0, 1] (see zc?)"" )"		748261	0					
ANR	752526	Callee	SETPREF		748261	0					
ANR	752527	Identifier	SETPREF		748261	0					
ANR	752528	ArgumentList	"""zign.diff.bthresh"""		748261	1					
ANR	752529	Argument	"""zign.diff.bthresh"""		748261	0					
ANR	752530	PrimaryExpression	"""zign.diff.bthresh"""		748261	0					
ANR	752531	Argument	"""1.0"""		748261	1					
ANR	752532	PrimaryExpression	"""1.0"""		748261	0					
ANR	752533	Argument	"""Threshold for diffing zign bytes [0, 1] (see zc?)"""		748261	2					
ANR	752534	PrimaryExpression	"""Threshold for diffing zign bytes [0, 1] (see zc?)"""		748261	0					
ANR	752535	ExpressionStatement	"SETPREF ( ""zign.diff.gthresh"" , ""1.0"" , ""Threshold for diffing zign graphs [0, 1] (see zc?)"" )"	3170:1:102942:103032	748261	379	True				
ANR	752536	CallExpression	"SETPREF ( ""zign.diff.gthresh"" , ""1.0"" , ""Threshold for diffing zign graphs [0, 1] (see zc?)"" )"		748261	0					
ANR	752537	Callee	SETPREF		748261	0					
ANR	752538	Identifier	SETPREF		748261	0					
ANR	752539	ArgumentList	"""zign.diff.gthresh"""		748261	1					
ANR	752540	Argument	"""zign.diff.gthresh"""		748261	0					
ANR	752541	PrimaryExpression	"""zign.diff.gthresh"""		748261	0					
ANR	752542	Argument	"""1.0"""		748261	1					
ANR	752543	PrimaryExpression	"""1.0"""		748261	0					
ANR	752544	Argument	"""Threshold for diffing zign graphs [0, 1] (see zc?)"""		748261	2					
ANR	752545	PrimaryExpression	"""Threshold for diffing zign graphs [0, 1] (see zc?)"""		748261	0					
ANR	752546	ExpressionStatement	"SETCB ( ""diff.sort"" , ""addr"" , & cb_diff_sort , ""Specify function diff sorting column see (e diff.sort=?)"" )"	3173:1:103048:103150	748261	380	True				
ANR	752547	CallExpression	"SETCB ( ""diff.sort"" , ""addr"" , & cb_diff_sort , ""Specify function diff sorting column see (e diff.sort=?)"" )"		748261	0					
ANR	752548	Callee	SETCB		748261	0					
ANR	752549	Identifier	SETCB		748261	0					
ANR	752550	ArgumentList	"""diff.sort"""		748261	1					
ANR	752551	Argument	"""diff.sort"""		748261	0					
ANR	752552	PrimaryExpression	"""diff.sort"""		748261	0					
ANR	752553	Argument	"""addr"""		748261	1					
ANR	752554	PrimaryExpression	"""addr"""		748261	0					
ANR	752555	Argument	& cb_diff_sort		748261	2					
ANR	752556	UnaryOperationExpression	& cb_diff_sort		748261	0					
ANR	752557	UnaryOperator	&		748261	0					
ANR	752558	Identifier	cb_diff_sort		748261	1					
ANR	752559	Argument	"""Specify function diff sorting column see (e diff.sort=?)"""		748261	3					
ANR	752560	PrimaryExpression	"""Specify function diff sorting column see (e diff.sort=?)"""		748261	0					
ANR	752561	ExpressionStatement	"SETI ( ""diff.from"" , 0 , ""Set source diffing address for px (uses cc command)"" )"	3174:1:103153:103229	748261	381	True				
ANR	752562	CallExpression	"SETI ( ""diff.from"" , 0 , ""Set source diffing address for px (uses cc command)"" )"		748261	0					
ANR	752563	Callee	SETI		748261	0					
ANR	752564	Identifier	SETI		748261	0					
ANR	752565	ArgumentList	"""diff.from"""		748261	1					
ANR	752566	Argument	"""diff.from"""		748261	0					
ANR	752567	PrimaryExpression	"""diff.from"""		748261	0					
ANR	752568	Argument	0		748261	1					
ANR	752569	PrimaryExpression	0		748261	0					
ANR	752570	Argument	"""Set source diffing address for px (uses cc command)"""		748261	2					
ANR	752571	PrimaryExpression	"""Set source diffing address for px (uses cc command)"""		748261	0					
ANR	752572	ExpressionStatement	"SETI ( ""diff.to"" , 0 , ""Set destination diffing address for px (uses cc command)"" )"	3175:1:103232:103311	748261	382	True				
ANR	752573	CallExpression	"SETI ( ""diff.to"" , 0 , ""Set destination diffing address for px (uses cc command)"" )"		748261	0					
ANR	752574	Callee	SETI		748261	0					
ANR	752575	Identifier	SETI		748261	0					
ANR	752576	ArgumentList	"""diff.to"""		748261	1					
ANR	752577	Argument	"""diff.to"""		748261	0					
ANR	752578	PrimaryExpression	"""diff.to"""		748261	0					
ANR	752579	Argument	0		748261	1					
ANR	752580	PrimaryExpression	0		748261	0					
ANR	752581	Argument	"""Set destination diffing address for px (uses cc command)"""		748261	2					
ANR	752582	PrimaryExpression	"""Set destination diffing address for px (uses cc command)"""		748261	0					
ANR	752583	ExpressionStatement	"SETPREF ( ""diff.bare"" , ""false"" , ""Never show function names in diff output"" )"	3176:1:103314:103388	748261	383	True				
ANR	752584	CallExpression	"SETPREF ( ""diff.bare"" , ""false"" , ""Never show function names in diff output"" )"		748261	0					
ANR	752585	Callee	SETPREF		748261	0					
ANR	752586	Identifier	SETPREF		748261	0					
ANR	752587	ArgumentList	"""diff.bare"""		748261	1					
ANR	752588	Argument	"""diff.bare"""		748261	0					
ANR	752589	PrimaryExpression	"""diff.bare"""		748261	0					
ANR	752590	Argument	"""false"""		748261	1					
ANR	752591	PrimaryExpression	"""false"""		748261	0					
ANR	752592	Argument	"""Never show function names in diff output"""		748261	2					
ANR	752593	PrimaryExpression	"""Never show function names in diff output"""		748261	0					
ANR	752594	ExpressionStatement	"SETPREF ( ""diff.levenstein"" , ""false"" , ""Use faster (and buggy) levenstein algorithm for buffer distance diffing"" )"	3177:1:103391:103502	748261	384	True				
ANR	752595	CallExpression	"SETPREF ( ""diff.levenstein"" , ""false"" , ""Use faster (and buggy) levenstein algorithm for buffer distance diffing"" )"		748261	0					
ANR	752596	Callee	SETPREF		748261	0					
ANR	752597	Identifier	SETPREF		748261	0					
ANR	752598	ArgumentList	"""diff.levenstein"""		748261	1					
ANR	752599	Argument	"""diff.levenstein"""		748261	0					
ANR	752600	PrimaryExpression	"""diff.levenstein"""		748261	0					
ANR	752601	Argument	"""false"""		748261	1					
ANR	752602	PrimaryExpression	"""false"""		748261	0					
ANR	752603	Argument	"""Use faster (and buggy) levenstein algorithm for buffer distance diffing"""		748261	2					
ANR	752604	PrimaryExpression	"""Use faster (and buggy) levenstein algorithm for buffer distance diffing"""		748261	0					
ANR	752605	ExpressionStatement	"SETI ( ""dir.depth"" , 10 , ""Maximum depth when searching recursively for files"" )"	3180:1:103517:103594	748261	385	True				
ANR	752606	CallExpression	"SETI ( ""dir.depth"" , 10 , ""Maximum depth when searching recursively for files"" )"		748261	0					
ANR	752607	Callee	SETI		748261	0					
ANR	752608	Identifier	SETI		748261	0					
ANR	752609	ArgumentList	"""dir.depth"""		748261	1					
ANR	752610	Argument	"""dir.depth"""		748261	0					
ANR	752611	PrimaryExpression	"""dir.depth"""		748261	0					
ANR	752612	Argument	10		748261	1					
ANR	752613	PrimaryExpression	10		748261	0					
ANR	752614	Argument	"""Maximum depth when searching recursively for files"""		748261	2					
ANR	752615	PrimaryExpression	"""Maximum depth when searching recursively for files"""		748261	0					
ANR	752616	ExpressionStatement	"SETCB ( ""dir.dbgsnap"" , ""."" , & cb_dbgsnap , ""Path to session dump files"" )"	3181:1:103597:103666	748261	386	True				
ANR	752617	CallExpression	"SETCB ( ""dir.dbgsnap"" , ""."" , & cb_dbgsnap , ""Path to session dump files"" )"		748261	0					
ANR	752618	Callee	SETCB		748261	0					
ANR	752619	Identifier	SETCB		748261	0					
ANR	752620	ArgumentList	"""dir.dbgsnap"""		748261	1					
ANR	752621	Argument	"""dir.dbgsnap"""		748261	0					
ANR	752622	PrimaryExpression	"""dir.dbgsnap"""		748261	0					
ANR	752623	Argument	"""."""		748261	1					
ANR	752624	PrimaryExpression	"""."""		748261	0					
ANR	752625	Argument	& cb_dbgsnap		748261	2					
ANR	752626	UnaryOperationExpression	& cb_dbgsnap		748261	0					
ANR	752627	UnaryOperator	&		748261	0					
ANR	752628	Identifier	cb_dbgsnap		748261	1					
ANR	752629	Argument	"""Path to session dump files"""		748261	3					
ANR	752630	PrimaryExpression	"""Path to session dump files"""		748261	0					
ANR	752631	CompoundStatement		438:2:28999:29103	748261	387					
ANR	752632	IdentifierDeclStatement	"char * path = r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC ) , r_config_get ( core -> config , ""dir.prefix"" ) ) ;"	3183:2:103673:103777	748261	0	True				
ANR	752633	IdentifierDecl	"* path = r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC ) , r_config_get ( core -> config , ""dir.prefix"" ) )"		748261	0					
ANR	752634	IdentifierDeclType	char *		748261	0					
ANR	752635	Identifier	path		748261	1					
ANR	752636	AssignmentExpression	"* path = r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC ) , r_config_get ( core -> config , ""dir.prefix"" ) )"		748261	2		=			
ANR	752637	Identifier	path		748261	0					
ANR	752638	CallExpression	"r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC ) , r_config_get ( core -> config , ""dir.prefix"" ) )"		748261	1					
ANR	752639	Callee	r_str_newf		748261	0					
ANR	752640	Identifier	r_str_newf		748261	0					
ANR	752641	ArgumentList	"R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC )"		748261	1					
ANR	752642	Argument	"R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC )"		748261	0					
ANR	752643	CallExpression	"R_JOIN_2_PATHS ( ""%s"" , R2_SDB_MAGIC )"		748261	0					
ANR	752644	Callee	R_JOIN_2_PATHS		748261	0					
ANR	752645	Identifier	R_JOIN_2_PATHS		748261	0					
ANR	752646	ArgumentList	"""%s"""		748261	1					
ANR	752647	Argument	"""%s"""		748261	0					
ANR	752648	PrimaryExpression	"""%s"""		748261	0					
ANR	752649	Argument	R2_SDB_MAGIC		748261	1					
ANR	752650	Identifier	R2_SDB_MAGIC		748261	0					
ANR	752651	Argument	"r_config_get ( core -> config , ""dir.prefix"" )"		748261	1					
ANR	752652	CallExpression	"r_config_get ( core -> config , ""dir.prefix"" )"		748261	0					
ANR	752653	Callee	r_config_get		748261	0					
ANR	752654	Identifier	r_config_get		748261	0					
ANR	752655	ArgumentList	core -> config		748261	1					
ANR	752656	Argument	core -> config		748261	0					
ANR	752657	PtrMemberAccess	core -> config		748261	0					
ANR	752658	Identifier	core		748261	0					
ANR	752659	Identifier	config		748261	1					
ANR	752660	Argument	"""dir.prefix"""		748261	1					
ANR	752661	PrimaryExpression	"""dir.prefix"""		748261	0					
ANR	752662	ExpressionStatement	"SETPREF ( ""dir.magic"" , path , ""Path to r_magic files"" )"	3184:2:103781:103833	748261	1	True				
ANR	752663	CallExpression	"SETPREF ( ""dir.magic"" , path , ""Path to r_magic files"" )"		748261	0					
ANR	752664	Callee	SETPREF		748261	0					
ANR	752665	Identifier	SETPREF		748261	0					
ANR	752666	ArgumentList	"""dir.magic"""		748261	1					
ANR	752667	Argument	"""dir.magic"""		748261	0					
ANR	752668	PrimaryExpression	"""dir.magic"""		748261	0					
ANR	752669	Argument	path		748261	1					
ANR	752670	Identifier	path		748261	0					
ANR	752671	Argument	"""Path to r_magic files"""		748261	2					
ANR	752672	PrimaryExpression	"""Path to r_magic files"""		748261	0					
ANR	752673	ExpressionStatement	free ( path )	3185:2:103837:103848	748261	2	True				
ANR	752674	CallExpression	free ( path )		748261	0					
ANR	752675	Callee	free		748261	0					
ANR	752676	Identifier	free		748261	0					
ANR	752677	ArgumentList	path		748261	1					
ANR	752678	Argument	path		748261	0					
ANR	752679	Identifier	path		748261	0					
ANR	752680	ExpressionStatement	"path = r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS ) , r_config_get ( core -> config , ""dir.prefix"" ) )"	3186:2:103852:103948	748261	3	True				
ANR	752681	AssignmentExpression	"path = r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS ) , r_config_get ( core -> config , ""dir.prefix"" ) )"		748261	0		=			
ANR	752682	Identifier	path		748261	0					
ANR	752683	CallExpression	"r_str_newf ( R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS ) , r_config_get ( core -> config , ""dir.prefix"" ) )"		748261	1					
ANR	752684	Callee	r_str_newf		748261	0					
ANR	752685	Identifier	r_str_newf		748261	0					
ANR	752686	ArgumentList	"R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS )"		748261	1					
ANR	752687	Argument	"R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS )"		748261	0					
ANR	752688	CallExpression	"R_JOIN_2_PATHS ( ""%s"" , R2_PLUGINS )"		748261	0					
ANR	752689	Callee	R_JOIN_2_PATHS		748261	0					
ANR	752690	Identifier	R_JOIN_2_PATHS		748261	0					
ANR	752691	ArgumentList	"""%s"""		748261	1					
ANR	752692	Argument	"""%s"""		748261	0					
ANR	752693	PrimaryExpression	"""%s"""		748261	0					
ANR	752694	Argument	R2_PLUGINS		748261	1					
ANR	752695	Identifier	R2_PLUGINS		748261	0					
ANR	752696	Argument	"r_config_get ( core -> config , ""dir.prefix"" )"		748261	1					
ANR	752697	CallExpression	"r_config_get ( core -> config , ""dir.prefix"" )"		748261	0					
ANR	752698	Callee	r_config_get		748261	0					
ANR	752699	Identifier	r_config_get		748261	0					
ANR	752700	ArgumentList	core -> config		748261	1					
ANR	752701	Argument	core -> config		748261	0					
ANR	752702	PtrMemberAccess	core -> config		748261	0					
ANR	752703	Identifier	core		748261	0					
ANR	752704	Identifier	config		748261	1					
ANR	752705	Argument	"""dir.prefix"""		748261	1					
ANR	752706	PrimaryExpression	"""dir.prefix"""		748261	0					
ANR	752707	ExpressionStatement	"SETPREF ( ""dir.plugins"" , path , ""Path to plugin files to be loaded at startup"" )"	3187:2:103952:104029	748261	4	True				
ANR	752708	CallExpression	"SETPREF ( ""dir.plugins"" , path , ""Path to plugin files to be loaded at startup"" )"		748261	0					
ANR	752709	Callee	SETPREF		748261	0					
ANR	752710	Identifier	SETPREF		748261	0					
ANR	752711	ArgumentList	"""dir.plugins"""		748261	1					
ANR	752712	Argument	"""dir.plugins"""		748261	0					
ANR	752713	PrimaryExpression	"""dir.plugins"""		748261	0					
ANR	752714	Argument	path		748261	1					
ANR	752715	Identifier	path		748261	0					
ANR	752716	Argument	"""Path to plugin files to be loaded at startup"""		748261	2					
ANR	752717	PrimaryExpression	"""Path to plugin files to be loaded at startup"""		748261	0					
ANR	752718	ExpressionStatement	free ( path )	3188:2:104033:104044	748261	5	True				
ANR	752719	CallExpression	free ( path )		748261	0					
ANR	752720	Callee	free		748261	0					
ANR	752721	Identifier	free		748261	0					
ANR	752722	ArgumentList	path		748261	1					
ANR	752723	Argument	path		748261	0					
ANR	752724	Identifier	path		748261	0					
ANR	752725	ExpressionStatement	"SETCB ( ""dir.source"" , """" , & cb_dirsrc , ""Path to find source files"" )"	3190:1:104050:104115	748261	388	True				
ANR	752726	CallExpression	"SETCB ( ""dir.source"" , """" , & cb_dirsrc , ""Path to find source files"" )"		748261	0					
ANR	752727	Callee	SETCB		748261	0					
ANR	752728	Identifier	SETCB		748261	0					
ANR	752729	ArgumentList	"""dir.source"""		748261	1					
ANR	752730	Argument	"""dir.source"""		748261	0					
ANR	752731	PrimaryExpression	"""dir.source"""		748261	0					
ANR	752732	Argument	""""""		748261	1					
ANR	752733	PrimaryExpression	""""""		748261	0					
ANR	752734	Argument	& cb_dirsrc		748261	2					
ANR	752735	UnaryOperationExpression	& cb_dirsrc		748261	0					
ANR	752736	UnaryOperator	&		748261	0					
ANR	752737	Identifier	cb_dirsrc		748261	1					
ANR	752738	Argument	"""Path to find source files"""		748261	3					
ANR	752739	PrimaryExpression	"""Path to find source files"""		748261	0					
ANR	752740	ExpressionStatement	"SETPREF ( ""dir.types"" , ""/usr/include"" , ""Default path to look for cparse type files"" )"	3191:1:104118:104201	748261	389	True				
ANR	752741	CallExpression	"SETPREF ( ""dir.types"" , ""/usr/include"" , ""Default path to look for cparse type files"" )"		748261	0					
ANR	752742	Callee	SETPREF		748261	0					
ANR	752743	Identifier	SETPREF		748261	0					
ANR	752744	ArgumentList	"""dir.types"""		748261	1					
ANR	752745	Argument	"""dir.types"""		748261	0					
ANR	752746	PrimaryExpression	"""dir.types"""		748261	0					
ANR	752747	Argument	"""/usr/include"""		748261	1					
ANR	752748	PrimaryExpression	"""/usr/include"""		748261	0					
ANR	752749	Argument	"""Default path to look for cparse type files"""		748261	2					
ANR	752750	PrimaryExpression	"""Default path to look for cparse type files"""		748261	0					
ANR	752751	ExpressionStatement	"SETPREF ( ""dir.libs"" , """" , ""Specify path to find libraries to load when bin.libs=true"" )"	3192:1:104204:104289	748261	390	True				
ANR	752752	CallExpression	"SETPREF ( ""dir.libs"" , """" , ""Specify path to find libraries to load when bin.libs=true"" )"		748261	0					
ANR	752753	Callee	SETPREF		748261	0					
ANR	752754	Identifier	SETPREF		748261	0					
ANR	752755	ArgumentList	"""dir.libs"""		748261	1					
ANR	752756	Argument	"""dir.libs"""		748261	0					
ANR	752757	PrimaryExpression	"""dir.libs"""		748261	0					
ANR	752758	Argument	""""""		748261	1					
ANR	752759	PrimaryExpression	""""""		748261	0					
ANR	752760	Argument	"""Specify path to find libraries to load when bin.libs=true"""		748261	2					
ANR	752761	PrimaryExpression	"""Specify path to find libraries to load when bin.libs=true"""		748261	0					
ANR	752762	ExpressionStatement	p = r_sys_getenv ( R_SYS_HOME )	3193:1:104292:104321	748261	391	True				
ANR	752763	AssignmentExpression	p = r_sys_getenv ( R_SYS_HOME )		748261	0		=			
ANR	752764	Identifier	p		748261	0					
ANR	752765	CallExpression	r_sys_getenv ( R_SYS_HOME )		748261	1					
ANR	752766	Callee	r_sys_getenv		748261	0					
ANR	752767	Identifier	r_sys_getenv		748261	0					
ANR	752768	ArgumentList	R_SYS_HOME		748261	1					
ANR	752769	Argument	R_SYS_HOME		748261	0					
ANR	752770	Identifier	R_SYS_HOME		748261	0					
ANR	752771	ExpressionStatement	"SETCB ( ""dir.home"" , p , & cb_dirhome , ""Path for the home directory"" )"	3194:1:104324:104389	748261	392	True				
ANR	752772	CallExpression	"SETCB ( ""dir.home"" , p , & cb_dirhome , ""Path for the home directory"" )"		748261	0					
ANR	752773	Callee	SETCB		748261	0					
ANR	752774	Identifier	SETCB		748261	0					
ANR	752775	ArgumentList	"""dir.home"""		748261	1					
ANR	752776	Argument	"""dir.home"""		748261	0					
ANR	752777	PrimaryExpression	"""dir.home"""		748261	0					
ANR	752778	Argument	p		748261	1					
ANR	752779	Identifier	p		748261	0					
ANR	752780	Argument	& cb_dirhome		748261	2					
ANR	752781	UnaryOperationExpression	& cb_dirhome		748261	0					
ANR	752782	UnaryOperator	&		748261	0					
ANR	752783	Identifier	cb_dirhome		748261	1					
ANR	752784	Argument	"""Path for the home directory"""		748261	3					
ANR	752785	PrimaryExpression	"""Path for the home directory"""		748261	0					
ANR	752786	ExpressionStatement	free ( p )	3195:1:104392:104400	748261	393	True				
ANR	752787	CallExpression	free ( p )		748261	0					
ANR	752788	Callee	free		748261	0					
ANR	752789	Identifier	free		748261	0					
ANR	752790	ArgumentList	p		748261	1					
ANR	752791	Argument	p		748261	0					
ANR	752792	Identifier	p		748261	0					
ANR	752793	ExpressionStatement	p = r_sys_getenv ( R_SYS_TMP )	3196:1:104403:104431	748261	394	True				
ANR	752794	AssignmentExpression	p = r_sys_getenv ( R_SYS_TMP )		748261	0		=			
ANR	752795	Identifier	p		748261	0					
ANR	752796	CallExpression	r_sys_getenv ( R_SYS_TMP )		748261	1					
ANR	752797	Callee	r_sys_getenv		748261	0					
ANR	752798	Identifier	r_sys_getenv		748261	0					
ANR	752799	ArgumentList	R_SYS_TMP		748261	1					
ANR	752800	Argument	R_SYS_TMP		748261	0					
ANR	752801	Identifier	R_SYS_TMP		748261	0					
ANR	752802	ExpressionStatement	"SETCB ( ""dir.tmp"" , p , & cb_dirtmp , ""Path of the tmp directory"" )"	3197:1:104434:104495	748261	395	True				
ANR	752803	CallExpression	"SETCB ( ""dir.tmp"" , p , & cb_dirtmp , ""Path of the tmp directory"" )"		748261	0					
ANR	752804	Callee	SETCB		748261	0					
ANR	752805	Identifier	SETCB		748261	0					
ANR	752806	ArgumentList	"""dir.tmp"""		748261	1					
ANR	752807	Argument	"""dir.tmp"""		748261	0					
ANR	752808	PrimaryExpression	"""dir.tmp"""		748261	0					
ANR	752809	Argument	p		748261	1					
ANR	752810	Identifier	p		748261	0					
ANR	752811	Argument	& cb_dirtmp		748261	2					
ANR	752812	UnaryOperationExpression	& cb_dirtmp		748261	0					
ANR	752813	UnaryOperator	&		748261	0					
ANR	752814	Identifier	cb_dirtmp		748261	1					
ANR	752815	Argument	"""Path of the tmp directory"""		748261	3					
ANR	752816	PrimaryExpression	"""Path of the tmp directory"""		748261	0					
ANR	752817	ExpressionStatement	free ( p )	3198:1:104498:104506	748261	396	True				
ANR	752818	CallExpression	free ( p )		748261	0					
ANR	752819	Callee	free		748261	0					
ANR	752820	Identifier	free		748261	0					
ANR	752821	ArgumentList	p		748261	1					
ANR	752822	Argument	p		748261	0					
ANR	752823	Identifier	p		748261	0					
ANR	752824	ExpressionStatement	"SETPREF ( ""dir.projects"" , ""/data/data/org.radare.radare2installer/radare2/projects"" , ""Default path for projects"" )"	3200:1:104525:104637	748261	397	True				
ANR	752825	CallExpression	"SETPREF ( ""dir.projects"" , ""/data/data/org.radare.radare2installer/radare2/projects"" , ""Default path for projects"" )"		748261	0					
ANR	752826	Callee	SETPREF		748261	0					
ANR	752827	Identifier	SETPREF		748261	0					
ANR	752828	ArgumentList	"""dir.projects"""		748261	1					
ANR	752829	Argument	"""dir.projects"""		748261	0					
ANR	752830	PrimaryExpression	"""dir.projects"""		748261	0					
ANR	752831	Argument	"""/data/data/org.radare.radare2installer/radare2/projects"""		748261	1					
ANR	752832	PrimaryExpression	"""/data/data/org.radare.radare2installer/radare2/projects"""		748261	0					
ANR	752833	Argument	"""Default path for projects"""		748261	2					
ANR	752834	PrimaryExpression	"""Default path for projects"""		748261	0					
ANR	752835	ExpressionStatement	"SETCB ( ""dir.zigns"" , R_JOIN_2_PATHS ( ""~"" , R2_HOME_ZIGNS ) , & cb_dirzigns , ""Default path for zignatures (see zo command)"" )"	3204:1:104749:104867	748261	398	True				
ANR	752836	CallExpression	"SETCB ( ""dir.zigns"" , R_JOIN_2_PATHS ( ""~"" , R2_HOME_ZIGNS ) , & cb_dirzigns , ""Default path for zignatures (see zo command)"" )"		748261	0					
ANR	752837	Callee	SETCB		748261	0					
ANR	752838	Identifier	SETCB		748261	0					
ANR	752839	ArgumentList	"""dir.zigns"""		748261	1					
ANR	752840	Argument	"""dir.zigns"""		748261	0					
ANR	752841	PrimaryExpression	"""dir.zigns"""		748261	0					
ANR	752842	Argument	"R_JOIN_2_PATHS ( ""~"" , R2_HOME_ZIGNS )"		748261	1					
ANR	752843	CallExpression	"R_JOIN_2_PATHS ( ""~"" , R2_HOME_ZIGNS )"		748261	0					
ANR	752844	Callee	R_JOIN_2_PATHS		748261	0					
ANR	752845	Identifier	R_JOIN_2_PATHS		748261	0					
ANR	752846	ArgumentList	"""~"""		748261	1					
ANR	752847	Argument	"""~"""		748261	0					
ANR	752848	PrimaryExpression	"""~"""		748261	0					
ANR	752849	Argument	R2_HOME_ZIGNS		748261	1					
ANR	752850	Identifier	R2_HOME_ZIGNS		748261	0					
ANR	752851	Argument	& cb_dirzigns		748261	2					
ANR	752852	UnaryOperationExpression	& cb_dirzigns		748261	0					
ANR	752853	UnaryOperator	&		748261	0					
ANR	752854	Identifier	cb_dirzigns		748261	1					
ANR	752855	Argument	"""Default path for zignatures (see zo command)"""		748261	3					
ANR	752856	PrimaryExpression	"""Default path for zignatures (see zo command)"""		748261	0					
ANR	752857	ExpressionStatement	"SETPREF ( ""stack.reg"" , ""SP"" , ""Which register to use as stack pointer in the visual debug"" )"	3205:1:104870:104959	748261	399	True				
ANR	752858	CallExpression	"SETPREF ( ""stack.reg"" , ""SP"" , ""Which register to use as stack pointer in the visual debug"" )"		748261	0					
ANR	752859	Callee	SETPREF		748261	0					
ANR	752860	Identifier	SETPREF		748261	0					
ANR	752861	ArgumentList	"""stack.reg"""		748261	1					
ANR	752862	Argument	"""stack.reg"""		748261	0					
ANR	752863	PrimaryExpression	"""stack.reg"""		748261	0					
ANR	752864	Argument	"""SP"""		748261	1					
ANR	752865	PrimaryExpression	"""SP"""		748261	0					
ANR	752866	Argument	"""Which register to use as stack pointer in the visual debug"""		748261	2					
ANR	752867	PrimaryExpression	"""Which register to use as stack pointer in the visual debug"""		748261	0					
ANR	752868	ExpressionStatement	"SETPREF ( ""stack.bytes"" , ""true"" , ""Show bytes instead of words in stack"" )"	3206:1:104962:105033	748261	400	True				
ANR	752869	CallExpression	"SETPREF ( ""stack.bytes"" , ""true"" , ""Show bytes instead of words in stack"" )"		748261	0					
ANR	752870	Callee	SETPREF		748261	0					
ANR	752871	Identifier	SETPREF		748261	0					
ANR	752872	ArgumentList	"""stack.bytes"""		748261	1					
ANR	752873	Argument	"""stack.bytes"""		748261	0					
ANR	752874	PrimaryExpression	"""stack.bytes"""		748261	0					
ANR	752875	Argument	"""true"""		748261	1					
ANR	752876	PrimaryExpression	"""true"""		748261	0					
ANR	752877	Argument	"""Show bytes instead of words in stack"""		748261	2					
ANR	752878	PrimaryExpression	"""Show bytes instead of words in stack"""		748261	0					
ANR	752879	ExpressionStatement	"SETPREF ( ""stack.anotated"" , ""false"" , ""Show anotated hexdump in visual debug"" )"	3207:1:105036:105112	748261	401	True				
ANR	752880	CallExpression	"SETPREF ( ""stack.anotated"" , ""false"" , ""Show anotated hexdump in visual debug"" )"		748261	0					
ANR	752881	Callee	SETPREF		748261	0					
ANR	752882	Identifier	SETPREF		748261	0					
ANR	752883	ArgumentList	"""stack.anotated"""		748261	1					
ANR	752884	Argument	"""stack.anotated"""		748261	0					
ANR	752885	PrimaryExpression	"""stack.anotated"""		748261	0					
ANR	752886	Argument	"""false"""		748261	1					
ANR	752887	PrimaryExpression	"""false"""		748261	0					
ANR	752888	Argument	"""Show anotated hexdump in visual debug"""		748261	2					
ANR	752889	PrimaryExpression	"""Show anotated hexdump in visual debug"""		748261	0					
ANR	752890	ExpressionStatement	"SETI ( ""stack.size"" , 64 , ""Size in bytes of stack hexdump in visual debug"" )"	3208:1:105115:105189	748261	402	True				
ANR	752891	CallExpression	"SETI ( ""stack.size"" , 64 , ""Size in bytes of stack hexdump in visual debug"" )"		748261	0					
ANR	752892	Callee	SETI		748261	0					
ANR	752893	Identifier	SETI		748261	0					
ANR	752894	ArgumentList	"""stack.size"""		748261	1					
ANR	752895	Argument	"""stack.size"""		748261	0					
ANR	752896	PrimaryExpression	"""stack.size"""		748261	0					
ANR	752897	Argument	64		748261	1					
ANR	752898	PrimaryExpression	64		748261	0					
ANR	752899	Argument	"""Size in bytes of stack hexdump in visual debug"""		748261	2					
ANR	752900	PrimaryExpression	"""Size in bytes of stack hexdump in visual debug"""		748261	0					
ANR	752901	ExpressionStatement	"SETI ( ""stack.delta"" , 0 , ""Delta for the stack dump"" )"	3209:1:105192:105244	748261	403	True				
ANR	752902	CallExpression	"SETI ( ""stack.delta"" , 0 , ""Delta for the stack dump"" )"		748261	0					
ANR	752903	Callee	SETI		748261	0					
ANR	752904	Identifier	SETI		748261	0					
ANR	752905	ArgumentList	"""stack.delta"""		748261	1					
ANR	752906	Argument	"""stack.delta"""		748261	0					
ANR	752907	PrimaryExpression	"""stack.delta"""		748261	0					
ANR	752908	Argument	0		748261	1					
ANR	752909	PrimaryExpression	0		748261	0					
ANR	752910	Argument	"""Delta for the stack dump"""		748261	2					
ANR	752911	PrimaryExpression	"""Delta for the stack dump"""		748261	0					
ANR	752912	ExpressionStatement	"SETCB ( ""dbg.libs"" , """" , & cb_dbg_libs , ""If set stop when loading matching libname"" )"	3211:1:105248:105329	748261	404	True				
ANR	752913	CallExpression	"SETCB ( ""dbg.libs"" , """" , & cb_dbg_libs , ""If set stop when loading matching libname"" )"		748261	0					
ANR	752914	Callee	SETCB		748261	0					
ANR	752915	Identifier	SETCB		748261	0					
ANR	752916	ArgumentList	"""dbg.libs"""		748261	1					
ANR	752917	Argument	"""dbg.libs"""		748261	0					
ANR	752918	PrimaryExpression	"""dbg.libs"""		748261	0					
ANR	752919	Argument	""""""		748261	1					
ANR	752920	PrimaryExpression	""""""		748261	0					
ANR	752921	Argument	& cb_dbg_libs		748261	2					
ANR	752922	UnaryOperationExpression	& cb_dbg_libs		748261	0					
ANR	752923	UnaryOperator	&		748261	0					
ANR	752924	Identifier	cb_dbg_libs		748261	1					
ANR	752925	Argument	"""If set stop when loading matching libname"""		748261	3					
ANR	752926	PrimaryExpression	"""If set stop when loading matching libname"""		748261	0					
ANR	752927	ExpressionStatement	"SETPREF ( ""dbg.skipover"" , ""false"" , ""Make dso perform a dss (same goes for esil and visual/graph"" )"	3212:1:105332:105428	748261	405	True				
ANR	752928	CallExpression	"SETPREF ( ""dbg.skipover"" , ""false"" , ""Make dso perform a dss (same goes for esil and visual/graph"" )"		748261	0					
ANR	752929	Callee	SETPREF		748261	0					
ANR	752930	Identifier	SETPREF		748261	0					
ANR	752931	ArgumentList	"""dbg.skipover"""		748261	1					
ANR	752932	Argument	"""dbg.skipover"""		748261	0					
ANR	752933	PrimaryExpression	"""dbg.skipover"""		748261	0					
ANR	752934	Argument	"""false"""		748261	1					
ANR	752935	PrimaryExpression	"""false"""		748261	0					
ANR	752936	Argument	"""Make dso perform a dss (same goes for esil and visual/graph"""		748261	2					
ANR	752937	PrimaryExpression	"""Make dso perform a dss (same goes for esil and visual/graph"""		748261	0					
ANR	752938	ExpressionStatement	"SETI ( ""dbg.hwbp"" , 0 , ""Set HW or SW breakpoints"" )"	3213:1:105431:105479	748261	406	True				
ANR	752939	CallExpression	"SETI ( ""dbg.hwbp"" , 0 , ""Set HW or SW breakpoints"" )"		748261	0					
ANR	752940	Callee	SETI		748261	0					
ANR	752941	Identifier	SETI		748261	0					
ANR	752942	ArgumentList	"""dbg.hwbp"""		748261	1					
ANR	752943	Argument	"""dbg.hwbp"""		748261	0					
ANR	752944	PrimaryExpression	"""dbg.hwbp"""		748261	0					
ANR	752945	Argument	0		748261	1					
ANR	752946	PrimaryExpression	0		748261	0					
ANR	752947	Argument	"""Set HW or SW breakpoints"""		748261	2					
ANR	752948	PrimaryExpression	"""Set HW or SW breakpoints"""		748261	0					
ANR	752949	ExpressionStatement	"SETCB ( ""dbg.unlibs"" , """" , & cb_dbg_unlibs , ""If set stop when unloading matching libname"" )"	3214:1:105482:105569	748261	407	True				
ANR	752950	CallExpression	"SETCB ( ""dbg.unlibs"" , """" , & cb_dbg_unlibs , ""If set stop when unloading matching libname"" )"		748261	0					
ANR	752951	Callee	SETCB		748261	0					
ANR	752952	Identifier	SETCB		748261	0					
ANR	752953	ArgumentList	"""dbg.unlibs"""		748261	1					
ANR	752954	Argument	"""dbg.unlibs"""		748261	0					
ANR	752955	PrimaryExpression	"""dbg.unlibs"""		748261	0					
ANR	752956	Argument	""""""		748261	1					
ANR	752957	PrimaryExpression	""""""		748261	0					
ANR	752958	Argument	& cb_dbg_unlibs		748261	2					
ANR	752959	UnaryOperationExpression	& cb_dbg_unlibs		748261	0					
ANR	752960	UnaryOperator	&		748261	0					
ANR	752961	Identifier	cb_dbg_unlibs		748261	1					
ANR	752962	Argument	"""If set stop when unloading matching libname"""		748261	3					
ANR	752963	PrimaryExpression	"""If set stop when unloading matching libname"""		748261	0					
ANR	752964	ExpressionStatement	"SETCB ( ""dbg.verbose"" , ""true"" , & cb_dbg_verbose , ""Verbose debug output"" )"	3215:1:105572:105642	748261	408	True				
ANR	752965	CallExpression	"SETCB ( ""dbg.verbose"" , ""true"" , & cb_dbg_verbose , ""Verbose debug output"" )"		748261	0					
ANR	752966	Callee	SETCB		748261	0					
ANR	752967	Identifier	SETCB		748261	0					
ANR	752968	ArgumentList	"""dbg.verbose"""		748261	1					
ANR	752969	Argument	"""dbg.verbose"""		748261	0					
ANR	752970	PrimaryExpression	"""dbg.verbose"""		748261	0					
ANR	752971	Argument	"""true"""		748261	1					
ANR	752972	PrimaryExpression	"""true"""		748261	0					
ANR	752973	Argument	& cb_dbg_verbose		748261	2					
ANR	752974	UnaryOperationExpression	& cb_dbg_verbose		748261	0					
ANR	752975	UnaryOperator	&		748261	0					
ANR	752976	Identifier	cb_dbg_verbose		748261	1					
ANR	752977	Argument	"""Verbose debug output"""		748261	3					
ANR	752978	PrimaryExpression	"""Verbose debug output"""		748261	0					
ANR	752979	ExpressionStatement	"SETPREF ( ""dbg.slow"" , ""false"" , ""Show stack and regs in visual mode in a slow but verbose mode"" )"	3216:1:105645:105739	748261	409	True				
ANR	752980	CallExpression	"SETPREF ( ""dbg.slow"" , ""false"" , ""Show stack and regs in visual mode in a slow but verbose mode"" )"		748261	0					
ANR	752981	Callee	SETPREF		748261	0					
ANR	752982	Identifier	SETPREF		748261	0					
ANR	752983	ArgumentList	"""dbg.slow"""		748261	1					
ANR	752984	Argument	"""dbg.slow"""		748261	0					
ANR	752985	PrimaryExpression	"""dbg.slow"""		748261	0					
ANR	752986	Argument	"""false"""		748261	1					
ANR	752987	PrimaryExpression	"""false"""		748261	0					
ANR	752988	Argument	"""Show stack and regs in visual mode in a slow but verbose mode"""		748261	2					
ANR	752989	PrimaryExpression	"""Show stack and regs in visual mode in a slow but verbose mode"""		748261	0					
ANR	752990	ExpressionStatement	"SETPREF ( ""dbg.funcarg"" , ""false"" , ""Display arguments to function call in visual mode"" )"	3217:1:105742:105827	748261	410	True				
ANR	752991	CallExpression	"SETPREF ( ""dbg.funcarg"" , ""false"" , ""Display arguments to function call in visual mode"" )"		748261	0					
ANR	752992	Callee	SETPREF		748261	0					
ANR	752993	Identifier	SETPREF		748261	0					
ANR	752994	ArgumentList	"""dbg.funcarg"""		748261	1					
ANR	752995	Argument	"""dbg.funcarg"""		748261	0					
ANR	752996	PrimaryExpression	"""dbg.funcarg"""		748261	0					
ANR	752997	Argument	"""false"""		748261	1					
ANR	752998	PrimaryExpression	"""false"""		748261	0					
ANR	752999	Argument	"""Display arguments to function call in visual mode"""		748261	2					
ANR	753000	PrimaryExpression	"""Display arguments to function call in visual mode"""		748261	0					
ANR	753001	ExpressionStatement	"SETPREF ( ""dbg.bpinmaps"" , ""true"" , ""Force breakpoints to be inside a valid map"" )"	3219:1:105831:105909	748261	411	True				
ANR	753002	CallExpression	"SETPREF ( ""dbg.bpinmaps"" , ""true"" , ""Force breakpoints to be inside a valid map"" )"		748261	0					
ANR	753003	Callee	SETPREF		748261	0					
ANR	753004	Identifier	SETPREF		748261	0					
ANR	753005	ArgumentList	"""dbg.bpinmaps"""		748261	1					
ANR	753006	Argument	"""dbg.bpinmaps"""		748261	0					
ANR	753007	PrimaryExpression	"""dbg.bpinmaps"""		748261	0					
ANR	753008	Argument	"""true"""		748261	1					
ANR	753009	PrimaryExpression	"""true"""		748261	0					
ANR	753010	Argument	"""Force breakpoints to be inside a valid map"""		748261	2					
ANR	753011	PrimaryExpression	"""Force breakpoints to be inside a valid map"""		748261	0					
ANR	753012	ExpressionStatement	"SETCB ( ""dbg.forks"" , ""false"" , & cb_dbg_forks , ""Stop execution if fork() is done (see dbg.threads)"" )"	3220:1:105912:106009	748261	412	True				
ANR	753013	CallExpression	"SETCB ( ""dbg.forks"" , ""false"" , & cb_dbg_forks , ""Stop execution if fork() is done (see dbg.threads)"" )"		748261	0					
ANR	753014	Callee	SETCB		748261	0					
ANR	753015	Identifier	SETCB		748261	0					
ANR	753016	ArgumentList	"""dbg.forks"""		748261	1					
ANR	753017	Argument	"""dbg.forks"""		748261	0					
ANR	753018	PrimaryExpression	"""dbg.forks"""		748261	0					
ANR	753019	Argument	"""false"""		748261	1					
ANR	753020	PrimaryExpression	"""false"""		748261	0					
ANR	753021	Argument	& cb_dbg_forks		748261	2					
ANR	753022	UnaryOperationExpression	& cb_dbg_forks		748261	0					
ANR	753023	UnaryOperator	&		748261	0					
ANR	753024	Identifier	cb_dbg_forks		748261	1					
ANR	753025	Argument	"""Stop execution if fork() is done (see dbg.threads)"""		748261	3					
ANR	753026	PrimaryExpression	"""Stop execution if fork() is done (see dbg.threads)"""		748261	0					
ANR	753027	ExpressionStatement	"n = NODECB ( ""dbg.btalgo"" , ""fuzzy"" , & cb_dbg_btalgo )"	3221:1:106012:106062	748261	413	True				
ANR	753028	AssignmentExpression	"n = NODECB ( ""dbg.btalgo"" , ""fuzzy"" , & cb_dbg_btalgo )"		748261	0		=			
ANR	753029	Identifier	n		748261	0					
ANR	753030	CallExpression	"NODECB ( ""dbg.btalgo"" , ""fuzzy"" , & cb_dbg_btalgo )"		748261	1					
ANR	753031	Callee	NODECB		748261	0					
ANR	753032	Identifier	NODECB		748261	0					
ANR	753033	ArgumentList	"""dbg.btalgo"""		748261	1					
ANR	753034	Argument	"""dbg.btalgo"""		748261	0					
ANR	753035	PrimaryExpression	"""dbg.btalgo"""		748261	0					
ANR	753036	Argument	"""fuzzy"""		748261	1					
ANR	753037	PrimaryExpression	"""fuzzy"""		748261	0					
ANR	753038	Argument	& cb_dbg_btalgo		748261	2					
ANR	753039	UnaryOperationExpression	& cb_dbg_btalgo		748261	0					
ANR	753040	UnaryOperator	&		748261	0					
ANR	753041	Identifier	cb_dbg_btalgo		748261	1					
ANR	753042	ExpressionStatement	"SETDESC ( n , ""Select backtrace algorithm"" )"	3222:1:106065:106106	748261	414	True				
ANR	753043	CallExpression	"SETDESC ( n , ""Select backtrace algorithm"" )"		748261	0					
ANR	753044	Callee	SETDESC		748261	0					
ANR	753045	Identifier	SETDESC		748261	0					
ANR	753046	ArgumentList	n		748261	1					
ANR	753047	Argument	n		748261	0					
ANR	753048	Identifier	n		748261	0					
ANR	753049	Argument	"""Select backtrace algorithm"""		748261	1					
ANR	753050	PrimaryExpression	"""Select backtrace algorithm"""		748261	0					
ANR	753051	ExpressionStatement	"SETOPTIONS ( n , ""default"" , ""fuzzy"" , ""anal"" , ""trace"" , NULL )"	3223:1:106109:106166	748261	415	True				
ANR	753052	CallExpression	"SETOPTIONS ( n , ""default"" , ""fuzzy"" , ""anal"" , ""trace"" , NULL )"		748261	0					
ANR	753053	Callee	SETOPTIONS		748261	0					
ANR	753054	Identifier	SETOPTIONS		748261	0					
ANR	753055	ArgumentList	n		748261	1					
ANR	753056	Argument	n		748261	0					
ANR	753057	Identifier	n		748261	0					
ANR	753058	Argument	"""default"""		748261	1					
ANR	753059	PrimaryExpression	"""default"""		748261	0					
ANR	753060	Argument	"""fuzzy"""		748261	2					
ANR	753061	PrimaryExpression	"""fuzzy"""		748261	0					
ANR	753062	Argument	"""anal"""		748261	3					
ANR	753063	PrimaryExpression	"""anal"""		748261	0					
ANR	753064	Argument	"""trace"""		748261	4					
ANR	753065	PrimaryExpression	"""trace"""		748261	0					
ANR	753066	Argument	NULL		748261	5					
ANR	753067	Identifier	NULL		748261	0					
ANR	753068	ExpressionStatement	"SETCB ( ""dbg.threads"" , ""false"" , & cb_stopthreads , ""Stop all threads when debugger breaks (see dbg.forks)"" )"	3224:1:106169:106273	748261	416	True				
ANR	753069	CallExpression	"SETCB ( ""dbg.threads"" , ""false"" , & cb_stopthreads , ""Stop all threads when debugger breaks (see dbg.forks)"" )"		748261	0					
ANR	753070	Callee	SETCB		748261	0					
ANR	753071	Identifier	SETCB		748261	0					
ANR	753072	ArgumentList	"""dbg.threads"""		748261	1					
ANR	753073	Argument	"""dbg.threads"""		748261	0					
ANR	753074	PrimaryExpression	"""dbg.threads"""		748261	0					
ANR	753075	Argument	"""false"""		748261	1					
ANR	753076	PrimaryExpression	"""false"""		748261	0					
ANR	753077	Argument	& cb_stopthreads		748261	2					
ANR	753078	UnaryOperationExpression	& cb_stopthreads		748261	0					
ANR	753079	UnaryOperator	&		748261	0					
ANR	753080	Identifier	cb_stopthreads		748261	1					
ANR	753081	Argument	"""Stop all threads when debugger breaks (see dbg.forks)"""		748261	3					
ANR	753082	PrimaryExpression	"""Stop all threads when debugger breaks (see dbg.forks)"""		748261	0					
ANR	753083	ExpressionStatement	"SETCB ( ""dbg.clone"" , ""false"" , & cb_dbg_clone , ""Stop execution if new thread is created"" )"	3225:1:106276:106362	748261	417	True				
ANR	753084	CallExpression	"SETCB ( ""dbg.clone"" , ""false"" , & cb_dbg_clone , ""Stop execution if new thread is created"" )"		748261	0					
ANR	753085	Callee	SETCB		748261	0					
ANR	753086	Identifier	SETCB		748261	0					
ANR	753087	ArgumentList	"""dbg.clone"""		748261	1					
ANR	753088	Argument	"""dbg.clone"""		748261	0					
ANR	753089	PrimaryExpression	"""dbg.clone"""		748261	0					
ANR	753090	Argument	"""false"""		748261	1					
ANR	753091	PrimaryExpression	"""false"""		748261	0					
ANR	753092	Argument	& cb_dbg_clone		748261	2					
ANR	753093	UnaryOperationExpression	& cb_dbg_clone		748261	0					
ANR	753094	UnaryOperator	&		748261	0					
ANR	753095	Identifier	cb_dbg_clone		748261	1					
ANR	753096	Argument	"""Stop execution if new thread is created"""		748261	3					
ANR	753097	PrimaryExpression	"""Stop execution if new thread is created"""		748261	0					
ANR	753098	ExpressionStatement	"SETCB ( ""dbg.aftersyscall"" , ""true"" , & cb_dbg_aftersc , ""Stop execution before the syscall is executed (see dcs)"" )"	3226:1:106365:106475	748261	418	True				
ANR	753099	CallExpression	"SETCB ( ""dbg.aftersyscall"" , ""true"" , & cb_dbg_aftersc , ""Stop execution before the syscall is executed (see dcs)"" )"		748261	0					
ANR	753100	Callee	SETCB		748261	0					
ANR	753101	Identifier	SETCB		748261	0					
ANR	753102	ArgumentList	"""dbg.aftersyscall"""		748261	1					
ANR	753103	Argument	"""dbg.aftersyscall"""		748261	0					
ANR	753104	PrimaryExpression	"""dbg.aftersyscall"""		748261	0					
ANR	753105	Argument	"""true"""		748261	1					
ANR	753106	PrimaryExpression	"""true"""		748261	0					
ANR	753107	Argument	& cb_dbg_aftersc		748261	2					
ANR	753108	UnaryOperationExpression	& cb_dbg_aftersc		748261	0					
ANR	753109	UnaryOperator	&		748261	0					
ANR	753110	Identifier	cb_dbg_aftersc		748261	1					
ANR	753111	Argument	"""Stop execution before the syscall is executed (see dcs)"""		748261	3					
ANR	753112	PrimaryExpression	"""Stop execution before the syscall is executed (see dcs)"""		748261	0					
ANR	753113	ExpressionStatement	"SETCB ( ""dbg.profile"" , """" , & cb_runprofile , ""Path to RRunProfile file"" )"	3227:1:106478:106547	748261	419	True				
ANR	753114	CallExpression	"SETCB ( ""dbg.profile"" , """" , & cb_runprofile , ""Path to RRunProfile file"" )"		748261	0					
ANR	753115	Callee	SETCB		748261	0					
ANR	753116	Identifier	SETCB		748261	0					
ANR	753117	ArgumentList	"""dbg.profile"""		748261	1					
ANR	753118	Argument	"""dbg.profile"""		748261	0					
ANR	753119	PrimaryExpression	"""dbg.profile"""		748261	0					
ANR	753120	Argument	""""""		748261	1					
ANR	753121	PrimaryExpression	""""""		748261	0					
ANR	753122	Argument	& cb_runprofile		748261	2					
ANR	753123	UnaryOperationExpression	& cb_runprofile		748261	0					
ANR	753124	UnaryOperator	&		748261	0					
ANR	753125	Identifier	cb_runprofile		748261	1					
ANR	753126	Argument	"""Path to RRunProfile file"""		748261	3					
ANR	753127	PrimaryExpression	"""Path to RRunProfile file"""		748261	0					
ANR	753128	ExpressionStatement	"SETCB ( ""dbg.args"" , """" , & cb_dbg_args , ""Set the args of the program to debug"" )"	3228:1:106550:106626	748261	420	True				
ANR	753129	CallExpression	"SETCB ( ""dbg.args"" , """" , & cb_dbg_args , ""Set the args of the program to debug"" )"		748261	0					
ANR	753130	Callee	SETCB		748261	0					
ANR	753131	Identifier	SETCB		748261	0					
ANR	753132	ArgumentList	"""dbg.args"""		748261	1					
ANR	753133	Argument	"""dbg.args"""		748261	0					
ANR	753134	PrimaryExpression	"""dbg.args"""		748261	0					
ANR	753135	Argument	""""""		748261	1					
ANR	753136	PrimaryExpression	""""""		748261	0					
ANR	753137	Argument	& cb_dbg_args		748261	2					
ANR	753138	UnaryOperationExpression	& cb_dbg_args		748261	0					
ANR	753139	UnaryOperator	&		748261	0					
ANR	753140	Identifier	cb_dbg_args		748261	1					
ANR	753141	Argument	"""Set the args of the program to debug"""		748261	3					
ANR	753142	PrimaryExpression	"""Set the args of the program to debug"""		748261	0					
ANR	753143	ExpressionStatement	"SETCB ( ""dbg.follow.child"" , ""false"" , & cb_dbg_follow_child , ""Continue tracing the child process on fork. By default the parent process is traced"" )"	3229:1:106629:106773	748261	421	True				
ANR	753144	CallExpression	"SETCB ( ""dbg.follow.child"" , ""false"" , & cb_dbg_follow_child , ""Continue tracing the child process on fork. By default the parent process is traced"" )"		748261	0					
ANR	753145	Callee	SETCB		748261	0					
ANR	753146	Identifier	SETCB		748261	0					
ANR	753147	ArgumentList	"""dbg.follow.child"""		748261	1					
ANR	753148	Argument	"""dbg.follow.child"""		748261	0					
ANR	753149	PrimaryExpression	"""dbg.follow.child"""		748261	0					
ANR	753150	Argument	"""false"""		748261	1					
ANR	753151	PrimaryExpression	"""false"""		748261	0					
ANR	753152	Argument	& cb_dbg_follow_child		748261	2					
ANR	753153	UnaryOperationExpression	& cb_dbg_follow_child		748261	0					
ANR	753154	UnaryOperator	&		748261	0					
ANR	753155	Identifier	cb_dbg_follow_child		748261	1					
ANR	753156	Argument	"""Continue tracing the child process on fork. By default the parent process is traced"""		748261	3					
ANR	753157	PrimaryExpression	"""Continue tracing the child process on fork. By default the parent process is traced"""		748261	0					
ANR	753158	ExpressionStatement	"SETCB ( ""dbg.status"" , ""false"" , & cb_dbgstatus , ""Set cmd.prompt to '.dr*' or '.dr*;drd;sr PC;pi 1;s-'"" )"	3231:1:106789:106889	748261	422	True				
ANR	753159	CallExpression	"SETCB ( ""dbg.status"" , ""false"" , & cb_dbgstatus , ""Set cmd.prompt to '.dr*' or '.dr*;drd;sr PC;pi 1;s-'"" )"		748261	0					
ANR	753160	Callee	SETCB		748261	0					
ANR	753161	Identifier	SETCB		748261	0					
ANR	753162	ArgumentList	"""dbg.status"""		748261	1					
ANR	753163	Argument	"""dbg.status"""		748261	0					
ANR	753164	PrimaryExpression	"""dbg.status"""		748261	0					
ANR	753165	Argument	"""false"""		748261	1					
ANR	753166	PrimaryExpression	"""false"""		748261	0					
ANR	753167	Argument	& cb_dbgstatus		748261	2					
ANR	753168	UnaryOperationExpression	& cb_dbgstatus		748261	0					
ANR	753169	UnaryOperator	&		748261	0					
ANR	753170	Identifier	cb_dbgstatus		748261	1					
ANR	753171	Argument	"""Set cmd.prompt to '.dr*' or '.dr*;drd;sr PC;pi 1;s-'"""		748261	3					
ANR	753172	PrimaryExpression	"""Set cmd.prompt to '.dr*' or '.dr*;drd;sr PC;pi 1;s-'"""		748261	0					
ANR	753173	ExpressionStatement	"SETCB ( ""dbg.backend"" , ""native"" , & cb_dbgbackend , ""Select the debugger backend"" )"	3233:1:106905:106983	748261	423	True				
ANR	753174	CallExpression	"SETCB ( ""dbg.backend"" , ""native"" , & cb_dbgbackend , ""Select the debugger backend"" )"		748261	0					
ANR	753175	Callee	SETCB		748261	0					
ANR	753176	Identifier	SETCB		748261	0					
ANR	753177	ArgumentList	"""dbg.backend"""		748261	1					
ANR	753178	Argument	"""dbg.backend"""		748261	0					
ANR	753179	PrimaryExpression	"""dbg.backend"""		748261	0					
ANR	753180	Argument	"""native"""		748261	1					
ANR	753181	PrimaryExpression	"""native"""		748261	0					
ANR	753182	Argument	& cb_dbgbackend		748261	2					
ANR	753183	UnaryOperationExpression	& cb_dbgbackend		748261	0					
ANR	753184	UnaryOperator	&		748261	0					
ANR	753185	Identifier	cb_dbgbackend		748261	1					
ANR	753186	Argument	"""Select the debugger backend"""		748261	3					
ANR	753187	PrimaryExpression	"""Select the debugger backend"""		748261	0					
ANR	753188	ExpressionStatement	"n = NODECB ( ""dbg.bep"" , ""loader"" , & cb_dbgbep )"	3237:1:107078:107122	748261	424	True				
ANR	753189	AssignmentExpression	"n = NODECB ( ""dbg.bep"" , ""loader"" , & cb_dbgbep )"		748261	0		=			
ANR	753190	Identifier	n		748261	0					
ANR	753191	CallExpression	"NODECB ( ""dbg.bep"" , ""loader"" , & cb_dbgbep )"		748261	1					
ANR	753192	Callee	NODECB		748261	0					
ANR	753193	Identifier	NODECB		748261	0					
ANR	753194	ArgumentList	"""dbg.bep"""		748261	1					
ANR	753195	Argument	"""dbg.bep"""		748261	0					
ANR	753196	PrimaryExpression	"""dbg.bep"""		748261	0					
ANR	753197	Argument	"""loader"""		748261	1					
ANR	753198	PrimaryExpression	"""loader"""		748261	0					
ANR	753199	Argument	& cb_dbgbep		748261	2					
ANR	753200	UnaryOperationExpression	& cb_dbgbep		748261	0					
ANR	753201	UnaryOperator	&		748261	0					
ANR	753202	Identifier	cb_dbgbep		748261	1					
ANR	753203	ExpressionStatement	"SETDESC ( n , ""Break on entrypoint"" )"	3238:1:107125:107159	748261	425	True				
ANR	753204	CallExpression	"SETDESC ( n , ""Break on entrypoint"" )"		748261	0					
ANR	753205	Callee	SETDESC		748261	0					
ANR	753206	Identifier	SETDESC		748261	0					
ANR	753207	ArgumentList	n		748261	1					
ANR	753208	Argument	n		748261	0					
ANR	753209	Identifier	n		748261	0					
ANR	753210	Argument	"""Break on entrypoint"""		748261	1					
ANR	753211	PrimaryExpression	"""Break on entrypoint"""		748261	0					
ANR	753212	ExpressionStatement	"SETOPTIONS ( n , ""loader"" , ""entry"" , ""constructor"" , ""main"" , NULL )"	3239:1:107162:107224	748261	426	True				
ANR	753213	CallExpression	"SETOPTIONS ( n , ""loader"" , ""entry"" , ""constructor"" , ""main"" , NULL )"		748261	0					
ANR	753214	Callee	SETOPTIONS		748261	0					
ANR	753215	Identifier	SETOPTIONS		748261	0					
ANR	753216	ArgumentList	n		748261	1					
ANR	753217	Argument	n		748261	0					
ANR	753218	Identifier	n		748261	0					
ANR	753219	Argument	"""loader"""		748261	1					
ANR	753220	PrimaryExpression	"""loader"""		748261	0					
ANR	753221	Argument	"""entry"""		748261	2					
ANR	753222	PrimaryExpression	"""entry"""		748261	0					
ANR	753223	Argument	"""constructor"""		748261	3					
ANR	753224	PrimaryExpression	"""constructor"""		748261	0					
ANR	753225	Argument	"""main"""		748261	4					
ANR	753226	PrimaryExpression	"""main"""		748261	0					
ANR	753227	Argument	NULL		748261	5					
ANR	753228	Identifier	NULL		748261	0					
ANR	753229	IfStatement	if ( core -> cons -> rows > 30 )		748261	427					
ANR	753230	Condition	core -> cons -> rows > 30	3240:5:107231:107251	748261	0	True				
ANR	753231	RelationalExpression	core -> cons -> rows > 30		748261	0		>			
ANR	753232	PtrMemberAccess	core -> cons -> rows		748261	0					
ANR	753233	PtrMemberAccess	core -> cons		748261	0					
ANR	753234	Identifier	core		748261	0					
ANR	753235	Identifier	cons		748261	1					
ANR	753236	Identifier	rows		748261	1					
ANR	753237	PrimaryExpression	30		748261	1					
ANR	753238	CompoundStatement		495:28:32580:32580	748261	1					
ANR	753239	ExpressionStatement	"r_config_set_i ( cfg , ""dbg.follow"" , 64 )"	3241:2:107267:107305	748261	0	True				
ANR	753240	CallExpression	"r_config_set_i ( cfg , ""dbg.follow"" , 64 )"		748261	0					
ANR	753241	Callee	r_config_set_i		748261	0					
ANR	753242	Identifier	r_config_set_i		748261	0					
ANR	753243	ArgumentList	cfg		748261	1					
ANR	753244	Argument	cfg		748261	0					
ANR	753245	Identifier	cfg		748261	0					
ANR	753246	Argument	"""dbg.follow"""		748261	1					
ANR	753247	PrimaryExpression	"""dbg.follow"""		748261	0					
ANR	753248	Argument	64		748261	2					
ANR	753249	PrimaryExpression	64		748261	0					
ANR	753250	ElseStatement	else		748261	0					
ANR	753251	CompoundStatement		497:8:32641:32641	748261	0					
ANR	753252	ExpressionStatement	"r_config_set_i ( cfg , ""dbg.follow"" , 32 )"	3243:2:107319:107357	748261	0	True				
ANR	753253	CallExpression	"r_config_set_i ( cfg , ""dbg.follow"" , 32 )"		748261	0					
ANR	753254	Callee	r_config_set_i		748261	0					
ANR	753255	Identifier	r_config_set_i		748261	0					
ANR	753256	ArgumentList	cfg		748261	1					
ANR	753257	Argument	cfg		748261	0					
ANR	753258	Identifier	cfg		748261	0					
ANR	753259	Argument	"""dbg.follow"""		748261	1					
ANR	753260	PrimaryExpression	"""dbg.follow"""		748261	0					
ANR	753261	Argument	32		748261	2					
ANR	753262	PrimaryExpression	32		748261	0					
ANR	753263	ExpressionStatement	"r_config_desc ( cfg , ""dbg.follow"" , ""Follow program counter when pc > core->offset + dbg.follow"" )"	3245:1:107363:107458	748261	428	True				
ANR	753264	CallExpression	"r_config_desc ( cfg , ""dbg.follow"" , ""Follow program counter when pc > core->offset + dbg.follow"" )"		748261	0					
ANR	753265	Callee	r_config_desc		748261	0					
ANR	753266	Identifier	r_config_desc		748261	0					
ANR	753267	ArgumentList	cfg		748261	1					
ANR	753268	Argument	cfg		748261	0					
ANR	753269	Identifier	cfg		748261	0					
ANR	753270	Argument	"""dbg.follow"""		748261	1					
ANR	753271	PrimaryExpression	"""dbg.follow"""		748261	0					
ANR	753272	Argument	"""Follow program counter when pc > core->offset + dbg.follow"""		748261	2					
ANR	753273	PrimaryExpression	"""Follow program counter when pc > core->offset + dbg.follow"""		748261	0					
ANR	753274	ExpressionStatement	"SETCB ( ""dbg.swstep"" , ""false"" , & cb_swstep , ""Force use of software steps (code analysis+breakpoint)"" )"	3246:1:107461:107560	748261	429	True				
ANR	753275	CallExpression	"SETCB ( ""dbg.swstep"" , ""false"" , & cb_swstep , ""Force use of software steps (code analysis+breakpoint)"" )"		748261	0					
ANR	753276	Callee	SETCB		748261	0					
ANR	753277	Identifier	SETCB		748261	0					
ANR	753278	ArgumentList	"""dbg.swstep"""		748261	1					
ANR	753279	Argument	"""dbg.swstep"""		748261	0					
ANR	753280	PrimaryExpression	"""dbg.swstep"""		748261	0					
ANR	753281	Argument	"""false"""		748261	1					
ANR	753282	PrimaryExpression	"""false"""		748261	0					
ANR	753283	Argument	& cb_swstep		748261	2					
ANR	753284	UnaryOperationExpression	& cb_swstep		748261	0					
ANR	753285	UnaryOperator	&		748261	0					
ANR	753286	Identifier	cb_swstep		748261	1					
ANR	753287	Argument	"""Force use of software steps (code analysis+breakpoint)"""		748261	3					
ANR	753288	PrimaryExpression	"""Force use of software steps (code analysis+breakpoint)"""		748261	0					
ANR	753289	ExpressionStatement	"SETPREF ( ""dbg.trace.inrange"" , ""false"" , ""While tracing, avoid following calls outside specified range"" )"	3247:1:107563:107665	748261	430	True				
ANR	753290	CallExpression	"SETPREF ( ""dbg.trace.inrange"" , ""false"" , ""While tracing, avoid following calls outside specified range"" )"		748261	0					
ANR	753291	Callee	SETPREF		748261	0					
ANR	753292	Identifier	SETPREF		748261	0					
ANR	753293	ArgumentList	"""dbg.trace.inrange"""		748261	1					
ANR	753294	Argument	"""dbg.trace.inrange"""		748261	0					
ANR	753295	PrimaryExpression	"""dbg.trace.inrange"""		748261	0					
ANR	753296	Argument	"""false"""		748261	1					
ANR	753297	PrimaryExpression	"""false"""		748261	0					
ANR	753298	Argument	"""While tracing, avoid following calls outside specified range"""		748261	2					
ANR	753299	PrimaryExpression	"""While tracing, avoid following calls outside specified range"""		748261	0					
ANR	753300	ExpressionStatement	"SETPREF ( ""dbg.trace.libs"" , ""true"" , ""Trace library code too"" )"	3248:1:107668:107728	748261	431	True				
ANR	753301	CallExpression	"SETPREF ( ""dbg.trace.libs"" , ""true"" , ""Trace library code too"" )"		748261	0					
ANR	753302	Callee	SETPREF		748261	0					
ANR	753303	Identifier	SETPREF		748261	0					
ANR	753304	ArgumentList	"""dbg.trace.libs"""		748261	1					
ANR	753305	Argument	"""dbg.trace.libs"""		748261	0					
ANR	753306	PrimaryExpression	"""dbg.trace.libs"""		748261	0					
ANR	753307	Argument	"""true"""		748261	1					
ANR	753308	PrimaryExpression	"""true"""		748261	0					
ANR	753309	Argument	"""Trace library code too"""		748261	2					
ANR	753310	PrimaryExpression	"""Trace library code too"""		748261	0					
ANR	753311	ExpressionStatement	"SETPREF ( ""dbg.exitkills"" , ""true"" , ""Kill process on exit"" )"	3249:1:107731:107788	748261	432	True				
ANR	753312	CallExpression	"SETPREF ( ""dbg.exitkills"" , ""true"" , ""Kill process on exit"" )"		748261	0					
ANR	753313	Callee	SETPREF		748261	0					
ANR	753314	Identifier	SETPREF		748261	0					
ANR	753315	ArgumentList	"""dbg.exitkills"""		748261	1					
ANR	753316	Argument	"""dbg.exitkills"""		748261	0					
ANR	753317	PrimaryExpression	"""dbg.exitkills"""		748261	0					
ANR	753318	Argument	"""true"""		748261	1					
ANR	753319	PrimaryExpression	"""true"""		748261	0					
ANR	753320	Argument	"""Kill process on exit"""		748261	2					
ANR	753321	PrimaryExpression	"""Kill process on exit"""		748261	0					
ANR	753322	ExpressionStatement	"SETPREF ( ""dbg.exe.path"" , NULL , ""Path to binary being debugged"" )"	3250:1:107791:107854	748261	433	True				
ANR	753323	CallExpression	"SETPREF ( ""dbg.exe.path"" , NULL , ""Path to binary being debugged"" )"		748261	0					
ANR	753324	Callee	SETPREF		748261	0					
ANR	753325	Identifier	SETPREF		748261	0					
ANR	753326	ArgumentList	"""dbg.exe.path"""		748261	1					
ANR	753327	Argument	"""dbg.exe.path"""		748261	0					
ANR	753328	PrimaryExpression	"""dbg.exe.path"""		748261	0					
ANR	753329	Argument	NULL		748261	1					
ANR	753330	Identifier	NULL		748261	0					
ANR	753331	Argument	"""Path to binary being debugged"""		748261	2					
ANR	753332	PrimaryExpression	"""Path to binary being debugged"""		748261	0					
ANR	753333	ExpressionStatement	"SETCB ( ""dbg.execs"" , ""false"" , & cb_dbg_execs , ""Stop execution if new thread is created"" )"	3251:1:107857:107943	748261	434	True				
ANR	753334	CallExpression	"SETCB ( ""dbg.execs"" , ""false"" , & cb_dbg_execs , ""Stop execution if new thread is created"" )"		748261	0					
ANR	753335	Callee	SETCB		748261	0					
ANR	753336	Identifier	SETCB		748261	0					
ANR	753337	ArgumentList	"""dbg.execs"""		748261	1					
ANR	753338	Argument	"""dbg.execs"""		748261	0					
ANR	753339	PrimaryExpression	"""dbg.execs"""		748261	0					
ANR	753340	Argument	"""false"""		748261	1					
ANR	753341	PrimaryExpression	"""false"""		748261	0					
ANR	753342	Argument	& cb_dbg_execs		748261	2					
ANR	753343	UnaryOperationExpression	& cb_dbg_execs		748261	0					
ANR	753344	UnaryOperator	&		748261	0					
ANR	753345	Identifier	cb_dbg_execs		748261	1					
ANR	753346	Argument	"""Stop execution if new thread is created"""		748261	3					
ANR	753347	PrimaryExpression	"""Stop execution if new thread is created"""		748261	0					
ANR	753348	ExpressionStatement	"SETICB ( ""dbg.gdb.page_size"" , 4096 , & cb_dbg_gdb_page_size , ""Page size on gdb target (useful for QEMU)"" )"	3252:1:107946:108048	748261	435	True				
ANR	753349	CallExpression	"SETICB ( ""dbg.gdb.page_size"" , 4096 , & cb_dbg_gdb_page_size , ""Page size on gdb target (useful for QEMU)"" )"		748261	0					
ANR	753350	Callee	SETICB		748261	0					
ANR	753351	Identifier	SETICB		748261	0					
ANR	753352	ArgumentList	"""dbg.gdb.page_size"""		748261	1					
ANR	753353	Argument	"""dbg.gdb.page_size"""		748261	0					
ANR	753354	PrimaryExpression	"""dbg.gdb.page_size"""		748261	0					
ANR	753355	Argument	4096		748261	1					
ANR	753356	PrimaryExpression	4096		748261	0					
ANR	753357	Argument	& cb_dbg_gdb_page_size		748261	2					
ANR	753358	UnaryOperationExpression	& cb_dbg_gdb_page_size		748261	0					
ANR	753359	UnaryOperator	&		748261	0					
ANR	753360	Identifier	cb_dbg_gdb_page_size		748261	1					
ANR	753361	Argument	"""Page size on gdb target (useful for QEMU)"""		748261	3					
ANR	753362	PrimaryExpression	"""Page size on gdb target (useful for QEMU)"""		748261	0					
ANR	753363	ExpressionStatement	"SETICB ( ""dbg.gdb.retries"" , 10 , & cb_dbg_gdb_retries , ""Number of retries before gdb packet read times out"" )"	3253:1:108051:108156	748261	436	True				
ANR	753364	CallExpression	"SETICB ( ""dbg.gdb.retries"" , 10 , & cb_dbg_gdb_retries , ""Number of retries before gdb packet read times out"" )"		748261	0					
ANR	753365	Callee	SETICB		748261	0					
ANR	753366	Identifier	SETICB		748261	0					
ANR	753367	ArgumentList	"""dbg.gdb.retries"""		748261	1					
ANR	753368	Argument	"""dbg.gdb.retries"""		748261	0					
ANR	753369	PrimaryExpression	"""dbg.gdb.retries"""		748261	0					
ANR	753370	Argument	10		748261	1					
ANR	753371	PrimaryExpression	10		748261	0					
ANR	753372	Argument	& cb_dbg_gdb_retries		748261	2					
ANR	753373	UnaryOperationExpression	& cb_dbg_gdb_retries		748261	0					
ANR	753374	UnaryOperator	&		748261	0					
ANR	753375	Identifier	cb_dbg_gdb_retries		748261	1					
ANR	753376	Argument	"""Number of retries before gdb packet read times out"""		748261	3					
ANR	753377	PrimaryExpression	"""Number of retries before gdb packet read times out"""		748261	0					
ANR	753378	ExpressionStatement	"SETCB ( ""dbg.consbreak"" , ""false"" , & cb_consbreak , ""SIGINT handle for attached processes"" )"	3254:1:108159:108246	748261	437	True				
ANR	753379	CallExpression	"SETCB ( ""dbg.consbreak"" , ""false"" , & cb_consbreak , ""SIGINT handle for attached processes"" )"		748261	0					
ANR	753380	Callee	SETCB		748261	0					
ANR	753381	Identifier	SETCB		748261	0					
ANR	753382	ArgumentList	"""dbg.consbreak"""		748261	1					
ANR	753383	Argument	"""dbg.consbreak"""		748261	0					
ANR	753384	PrimaryExpression	"""dbg.consbreak"""		748261	0					
ANR	753385	Argument	"""false"""		748261	1					
ANR	753386	PrimaryExpression	"""false"""		748261	0					
ANR	753387	Argument	& cb_consbreak		748261	2					
ANR	753388	UnaryOperationExpression	& cb_consbreak		748261	0					
ANR	753389	UnaryOperator	&		748261	0					
ANR	753390	Identifier	cb_consbreak		748261	1					
ANR	753391	Argument	"""SIGINT handle for attached processes"""		748261	3					
ANR	753392	PrimaryExpression	"""SIGINT handle for attached processes"""		748261	0					
ANR	753393	ExpressionStatement	"r_config_set_getter ( cfg , ""dbg.swstep"" , ( RConfigCallback ) __dbg_swstep_getter )"	3256:1:108250:108327	748261	438	True				
ANR	753394	CallExpression	"r_config_set_getter ( cfg , ""dbg.swstep"" , ( RConfigCallback ) __dbg_swstep_getter )"		748261	0					
ANR	753395	Callee	r_config_set_getter		748261	0					
ANR	753396	Identifier	r_config_set_getter		748261	0					
ANR	753397	ArgumentList	cfg		748261	1					
ANR	753398	Argument	cfg		748261	0					
ANR	753399	Identifier	cfg		748261	0					
ANR	753400	Argument	"""dbg.swstep"""		748261	1					
ANR	753401	PrimaryExpression	"""dbg.swstep"""		748261	0					
ANR	753402	Argument	( RConfigCallback ) __dbg_swstep_getter		748261	2					
ANR	753403	CastExpression	( RConfigCallback ) __dbg_swstep_getter		748261	0					
ANR	753404	CastTarget	RConfigCallback		748261	0					
ANR	753405	Identifier	__dbg_swstep_getter		748261	1					
ANR	753406	ExpressionStatement	"SETICB ( ""dbg.bpsize"" , 4 , & cb_dbgbpsize , ""Size of software breakpoints"" )"	3260:1:108434:108505	748261	439	True				
ANR	753407	CallExpression	"SETICB ( ""dbg.bpsize"" , 4 , & cb_dbgbpsize , ""Size of software breakpoints"" )"		748261	0					
ANR	753408	Callee	SETICB		748261	0					
ANR	753409	Identifier	SETICB		748261	0					
ANR	753410	ArgumentList	"""dbg.bpsize"""		748261	1					
ANR	753411	Argument	"""dbg.bpsize"""		748261	0					
ANR	753412	PrimaryExpression	"""dbg.bpsize"""		748261	0					
ANR	753413	Argument	4		748261	1					
ANR	753414	PrimaryExpression	4		748261	0					
ANR	753415	Argument	& cb_dbgbpsize		748261	2					
ANR	753416	UnaryOperationExpression	& cb_dbgbpsize		748261	0					
ANR	753417	UnaryOperator	&		748261	0					
ANR	753418	Identifier	cb_dbgbpsize		748261	1					
ANR	753419	Argument	"""Size of software breakpoints"""		748261	3					
ANR	753420	PrimaryExpression	"""Size of software breakpoints"""		748261	0					
ANR	753421	ExpressionStatement	"SETPREF ( ""dbg.bpsysign"" , ""false"" , ""Ignore system breakpoints"" )"	3264:1:108595:108657	748261	440	True				
ANR	753422	CallExpression	"SETPREF ( ""dbg.bpsysign"" , ""false"" , ""Ignore system breakpoints"" )"		748261	0					
ANR	753423	Callee	SETPREF		748261	0					
ANR	753424	Identifier	SETPREF		748261	0					
ANR	753425	ArgumentList	"""dbg.bpsysign"""		748261	1					
ANR	753426	Argument	"""dbg.bpsysign"""		748261	0					
ANR	753427	PrimaryExpression	"""dbg.bpsysign"""		748261	0					
ANR	753428	Argument	"""false"""		748261	1					
ANR	753429	PrimaryExpression	"""false"""		748261	0					
ANR	753430	Argument	"""Ignore system breakpoints"""		748261	2					
ANR	753431	PrimaryExpression	"""Ignore system breakpoints"""		748261	0					
ANR	753432	ExpressionStatement	"SETICB ( ""dbg.btdepth"" , 128 , & cb_dbgbtdepth , ""Depth of backtrace"" )"	3265:1:108660:108725	748261	441	True				
ANR	753433	CallExpression	"SETICB ( ""dbg.btdepth"" , 128 , & cb_dbgbtdepth , ""Depth of backtrace"" )"		748261	0					
ANR	753434	Callee	SETICB		748261	0					
ANR	753435	Identifier	SETICB		748261	0					
ANR	753436	ArgumentList	"""dbg.btdepth"""		748261	1					
ANR	753437	Argument	"""dbg.btdepth"""		748261	0					
ANR	753438	PrimaryExpression	"""dbg.btdepth"""		748261	0					
ANR	753439	Argument	128		748261	1					
ANR	753440	PrimaryExpression	128		748261	0					
ANR	753441	Argument	& cb_dbgbtdepth		748261	2					
ANR	753442	UnaryOperationExpression	& cb_dbgbtdepth		748261	0					
ANR	753443	UnaryOperator	&		748261	0					
ANR	753444	Identifier	cb_dbgbtdepth		748261	1					
ANR	753445	Argument	"""Depth of backtrace"""		748261	3					
ANR	753446	PrimaryExpression	"""Depth of backtrace"""		748261	0					
ANR	753447	ExpressionStatement	"SETCB ( ""dbg.trace"" , ""false"" , & cb_trace , ""Trace program execution (see asm.trace)"" )"	3266:1:108728:108810	748261	442	True				
ANR	753448	CallExpression	"SETCB ( ""dbg.trace"" , ""false"" , & cb_trace , ""Trace program execution (see asm.trace)"" )"		748261	0					
ANR	753449	Callee	SETCB		748261	0					
ANR	753450	Identifier	SETCB		748261	0					
ANR	753451	ArgumentList	"""dbg.trace"""		748261	1					
ANR	753452	Argument	"""dbg.trace"""		748261	0					
ANR	753453	PrimaryExpression	"""dbg.trace"""		748261	0					
ANR	753454	Argument	"""false"""		748261	1					
ANR	753455	PrimaryExpression	"""false"""		748261	0					
ANR	753456	Argument	& cb_trace		748261	2					
ANR	753457	UnaryOperationExpression	& cb_trace		748261	0					
ANR	753458	UnaryOperator	&		748261	0					
ANR	753459	Identifier	cb_trace		748261	1					
ANR	753460	Argument	"""Trace program execution (see asm.trace)"""		748261	3					
ANR	753461	PrimaryExpression	"""Trace program execution (see asm.trace)"""		748261	0					
ANR	753462	ExpressionStatement	"SETICB ( ""dbg.trace.tag"" , 0 , & cb_tracetag , ""Trace tag"" )"	3267:1:108813:108867	748261	443	True				
ANR	753463	CallExpression	"SETICB ( ""dbg.trace.tag"" , 0 , & cb_tracetag , ""Trace tag"" )"		748261	0					
ANR	753464	Callee	SETICB		748261	0					
ANR	753465	Identifier	SETICB		748261	0					
ANR	753466	ArgumentList	"""dbg.trace.tag"""		748261	1					
ANR	753467	Argument	"""dbg.trace.tag"""		748261	0					
ANR	753468	PrimaryExpression	"""dbg.trace.tag"""		748261	0					
ANR	753469	Argument	0		748261	1					
ANR	753470	PrimaryExpression	0		748261	0					
ANR	753471	Argument	& cb_tracetag		748261	2					
ANR	753472	UnaryOperationExpression	& cb_tracetag		748261	0					
ANR	753473	UnaryOperator	&		748261	0					
ANR	753474	Identifier	cb_tracetag		748261	1					
ANR	753475	Argument	"""Trace tag"""		748261	3					
ANR	753476	PrimaryExpression	"""Trace tag"""		748261	0					
ANR	753477	ExpressionStatement	"SETPREF ( ""cmd.xterm"" , ""xterm -bg black -fg gray -e"" , ""xterm command to spawn with V@"" )"	3271:1:108883:108969	748261	444	True				
ANR	753478	CallExpression	"SETPREF ( ""cmd.xterm"" , ""xterm -bg black -fg gray -e"" , ""xterm command to spawn with V@"" )"		748261	0					
ANR	753479	Callee	SETPREF		748261	0					
ANR	753480	Identifier	SETPREF		748261	0					
ANR	753481	ArgumentList	"""cmd.xterm"""		748261	1					
ANR	753482	Argument	"""cmd.xterm"""		748261	0					
ANR	753483	PrimaryExpression	"""cmd.xterm"""		748261	0					
ANR	753484	Argument	"""xterm -bg black -fg gray -e"""		748261	1					
ANR	753485	PrimaryExpression	"""xterm -bg black -fg gray -e"""		748261	0					
ANR	753486	Argument	"""xterm command to spawn with V@"""		748261	2					
ANR	753487	PrimaryExpression	"""xterm command to spawn with V@"""		748261	0					
ANR	753488	ExpressionStatement	"SETICB ( ""cmd.depth"" , 10 , & cb_cmddepth , ""Maximum command depth"" )"	3272:1:108972:109035	748261	445	True				
ANR	753489	CallExpression	"SETICB ( ""cmd.depth"" , 10 , & cb_cmddepth , ""Maximum command depth"" )"		748261	0					
ANR	753490	Callee	SETICB		748261	0					
ANR	753491	Identifier	SETICB		748261	0					
ANR	753492	ArgumentList	"""cmd.depth"""		748261	1					
ANR	753493	Argument	"""cmd.depth"""		748261	0					
ANR	753494	PrimaryExpression	"""cmd.depth"""		748261	0					
ANR	753495	Argument	10		748261	1					
ANR	753496	PrimaryExpression	10		748261	0					
ANR	753497	Argument	& cb_cmddepth		748261	2					
ANR	753498	UnaryOperationExpression	& cb_cmddepth		748261	0					
ANR	753499	UnaryOperator	&		748261	0					
ANR	753500	Identifier	cb_cmddepth		748261	1					
ANR	753501	Argument	"""Maximum command depth"""		748261	3					
ANR	753502	PrimaryExpression	"""Maximum command depth"""		748261	0					
ANR	753503	ExpressionStatement	"SETPREF ( ""cmd.bp"" , """" , ""Run when a breakpoint is hit"" )"	3273:1:109038:109092	748261	446	True				
ANR	753504	CallExpression	"SETPREF ( ""cmd.bp"" , """" , ""Run when a breakpoint is hit"" )"		748261	0					
ANR	753505	Callee	SETPREF		748261	0					
ANR	753506	Identifier	SETPREF		748261	0					
ANR	753507	ArgumentList	"""cmd.bp"""		748261	1					
ANR	753508	Argument	"""cmd.bp"""		748261	0					
ANR	753509	PrimaryExpression	"""cmd.bp"""		748261	0					
ANR	753510	Argument	""""""		748261	1					
ANR	753511	PrimaryExpression	""""""		748261	0					
ANR	753512	Argument	"""Run when a breakpoint is hit"""		748261	2					
ANR	753513	PrimaryExpression	"""Run when a breakpoint is hit"""		748261	0					
ANR	753514	ExpressionStatement	"SETPREF ( ""cmd.onsyscall"" , """" , ""Run when a syscall is hit"" )"	3274:1:109095:109153	748261	447	True				
ANR	753515	CallExpression	"SETPREF ( ""cmd.onsyscall"" , """" , ""Run when a syscall is hit"" )"		748261	0					
ANR	753516	Callee	SETPREF		748261	0					
ANR	753517	Identifier	SETPREF		748261	0					
ANR	753518	ArgumentList	"""cmd.onsyscall"""		748261	1					
ANR	753519	Argument	"""cmd.onsyscall"""		748261	0					
ANR	753520	PrimaryExpression	"""cmd.onsyscall"""		748261	0					
ANR	753521	Argument	""""""		748261	1					
ANR	753522	PrimaryExpression	""""""		748261	0					
ANR	753523	Argument	"""Run when a syscall is hit"""		748261	2					
ANR	753524	PrimaryExpression	"""Run when a syscall is hit"""		748261	0					
ANR	753525	ExpressionStatement	"SETICB ( ""cmd.hitinfo"" , 1 , & cb_debug_hitinfo , ""Show info when a tracepoint/breakpoint is hit"" )"	3275:1:109156:109249	748261	448	True				
ANR	753526	CallExpression	"SETICB ( ""cmd.hitinfo"" , 1 , & cb_debug_hitinfo , ""Show info when a tracepoint/breakpoint is hit"" )"		748261	0					
ANR	753527	Callee	SETICB		748261	0					
ANR	753528	Identifier	SETICB		748261	0					
ANR	753529	ArgumentList	"""cmd.hitinfo"""		748261	1					
ANR	753530	Argument	"""cmd.hitinfo"""		748261	0					
ANR	753531	PrimaryExpression	"""cmd.hitinfo"""		748261	0					
ANR	753532	Argument	1		748261	1					
ANR	753533	PrimaryExpression	1		748261	0					
ANR	753534	Argument	& cb_debug_hitinfo		748261	2					
ANR	753535	UnaryOperationExpression	& cb_debug_hitinfo		748261	0					
ANR	753536	UnaryOperator	&		748261	0					
ANR	753537	Identifier	cb_debug_hitinfo		748261	1					
ANR	753538	Argument	"""Show info when a tracepoint/breakpoint is hit"""		748261	3					
ANR	753539	PrimaryExpression	"""Show info when a tracepoint/breakpoint is hit"""		748261	0					
ANR	753540	ExpressionStatement	"SETPREF ( ""cmd.stack"" , """" , ""Command to display the stack in visual debug mode"" )"	3276:1:109252:109330	748261	449	True				
ANR	753541	CallExpression	"SETPREF ( ""cmd.stack"" , """" , ""Command to display the stack in visual debug mode"" )"		748261	0					
ANR	753542	Callee	SETPREF		748261	0					
ANR	753543	Identifier	SETPREF		748261	0					
ANR	753544	ArgumentList	"""cmd.stack"""		748261	1					
ANR	753545	Argument	"""cmd.stack"""		748261	0					
ANR	753546	PrimaryExpression	"""cmd.stack"""		748261	0					
ANR	753547	Argument	""""""		748261	1					
ANR	753548	PrimaryExpression	""""""		748261	0					
ANR	753549	Argument	"""Command to display the stack in visual debug mode"""		748261	2					
ANR	753550	PrimaryExpression	"""Command to display the stack in visual debug mode"""		748261	0					
ANR	753551	ExpressionStatement	"SETPREF ( ""cmd.cprompt"" , """" , ""Column visual prompt commands"" )"	3277:1:109333:109393	748261	450	True				
ANR	753552	CallExpression	"SETPREF ( ""cmd.cprompt"" , """" , ""Column visual prompt commands"" )"		748261	0					
ANR	753553	Callee	SETPREF		748261	0					
ANR	753554	Identifier	SETPREF		748261	0					
ANR	753555	ArgumentList	"""cmd.cprompt"""		748261	1					
ANR	753556	Argument	"""cmd.cprompt"""		748261	0					
ANR	753557	PrimaryExpression	"""cmd.cprompt"""		748261	0					
ANR	753558	Argument	""""""		748261	1					
ANR	753559	PrimaryExpression	""""""		748261	0					
ANR	753560	Argument	"""Column visual prompt commands"""		748261	2					
ANR	753561	PrimaryExpression	"""Column visual prompt commands"""		748261	0					
ANR	753562	ExpressionStatement	"SETPREF ( ""cmd.gprompt"" , """" , ""Graph visual prompt commands"" )"	3278:1:109396:109455	748261	451	True				
ANR	753563	CallExpression	"SETPREF ( ""cmd.gprompt"" , """" , ""Graph visual prompt commands"" )"		748261	0					
ANR	753564	Callee	SETPREF		748261	0					
ANR	753565	Identifier	SETPREF		748261	0					
ANR	753566	ArgumentList	"""cmd.gprompt"""		748261	1					
ANR	753567	Argument	"""cmd.gprompt"""		748261	0					
ANR	753568	PrimaryExpression	"""cmd.gprompt"""		748261	0					
ANR	753569	Argument	""""""		748261	1					
ANR	753570	PrimaryExpression	""""""		748261	0					
ANR	753571	Argument	"""Graph visual prompt commands"""		748261	2					
ANR	753572	PrimaryExpression	"""Graph visual prompt commands"""		748261	0					
ANR	753573	ExpressionStatement	"SETPREF ( ""cmd.hit"" , """" , ""Run when a search hit is found"" )"	3279:1:109458:109515	748261	452	True				
ANR	753574	CallExpression	"SETPREF ( ""cmd.hit"" , """" , ""Run when a search hit is found"" )"		748261	0					
ANR	753575	Callee	SETPREF		748261	0					
ANR	753576	Identifier	SETPREF		748261	0					
ANR	753577	ArgumentList	"""cmd.hit"""		748261	1					
ANR	753578	Argument	"""cmd.hit"""		748261	0					
ANR	753579	PrimaryExpression	"""cmd.hit"""		748261	0					
ANR	753580	Argument	""""""		748261	1					
ANR	753581	PrimaryExpression	""""""		748261	0					
ANR	753582	Argument	"""Run when a search hit is found"""		748261	2					
ANR	753583	PrimaryExpression	"""Run when a search hit is found"""		748261	0					
ANR	753584	ExpressionStatement	"SETPREF ( ""cmd.open"" , """" , ""Run when file is opened"" )"	3280:1:109518:109569	748261	453	True				
ANR	753585	CallExpression	"SETPREF ( ""cmd.open"" , """" , ""Run when file is opened"" )"		748261	0					
ANR	753586	Callee	SETPREF		748261	0					
ANR	753587	Identifier	SETPREF		748261	0					
ANR	753588	ArgumentList	"""cmd.open"""		748261	1					
ANR	753589	Argument	"""cmd.open"""		748261	0					
ANR	753590	PrimaryExpression	"""cmd.open"""		748261	0					
ANR	753591	Argument	""""""		748261	1					
ANR	753592	PrimaryExpression	""""""		748261	0					
ANR	753593	Argument	"""Run when file is opened"""		748261	2					
ANR	753594	PrimaryExpression	"""Run when file is opened"""		748261	0					
ANR	753595	ExpressionStatement	"SETPREF ( ""cmd.load"" , """" , ""Run when binary is loaded"" )"	3281:1:109572:109625	748261	454	True				
ANR	753596	CallExpression	"SETPREF ( ""cmd.load"" , """" , ""Run when binary is loaded"" )"		748261	0					
ANR	753597	Callee	SETPREF		748261	0					
ANR	753598	Identifier	SETPREF		748261	0					
ANR	753599	ArgumentList	"""cmd.load"""		748261	1					
ANR	753600	Argument	"""cmd.load"""		748261	0					
ANR	753601	PrimaryExpression	"""cmd.load"""		748261	0					
ANR	753602	Argument	""""""		748261	1					
ANR	753603	PrimaryExpression	""""""		748261	0					
ANR	753604	Argument	"""Run when binary is loaded"""		748261	2					
ANR	753605	PrimaryExpression	"""Run when binary is loaded"""		748261	0					
ANR	753606	IdentifierDeclStatement	"RConfigNode * cmdpdc = NODECB ( ""cmd.pdc"" , """" , & cb_cmdpdc ) ;"	3282:1:109628:109684	748261	455	True				
ANR	753607	IdentifierDecl	"* cmdpdc = NODECB ( ""cmd.pdc"" , """" , & cb_cmdpdc )"		748261	0					
ANR	753608	IdentifierDeclType	RConfigNode *		748261	0					
ANR	753609	Identifier	cmdpdc		748261	1					
ANR	753610	AssignmentExpression	"* cmdpdc = NODECB ( ""cmd.pdc"" , """" , & cb_cmdpdc )"		748261	2		=			
ANR	753611	Identifier	cmdpdc		748261	0					
ANR	753612	CallExpression	"NODECB ( ""cmd.pdc"" , """" , & cb_cmdpdc )"		748261	1					
ANR	753613	Callee	NODECB		748261	0					
ANR	753614	Identifier	NODECB		748261	0					
ANR	753615	ArgumentList	"""cmd.pdc"""		748261	1					
ANR	753616	Argument	"""cmd.pdc"""		748261	0					
ANR	753617	PrimaryExpression	"""cmd.pdc"""		748261	0					
ANR	753618	Argument	""""""		748261	1					
ANR	753619	PrimaryExpression	""""""		748261	0					
ANR	753620	Argument	& cb_cmdpdc		748261	2					
ANR	753621	UnaryOperationExpression	& cb_cmdpdc		748261	0					
ANR	753622	UnaryOperator	&		748261	0					
ANR	753623	Identifier	cb_cmdpdc		748261	1					
ANR	753624	ExpressionStatement	"SETDESC ( cmdpdc , ""Select pseudo-decompiler command to run after pdc"" )"	3283:1:109687:109756	748261	456	True				
ANR	753625	CallExpression	"SETDESC ( cmdpdc , ""Select pseudo-decompiler command to run after pdc"" )"		748261	0					
ANR	753626	Callee	SETDESC		748261	0					
ANR	753627	Identifier	SETDESC		748261	0					
ANR	753628	ArgumentList	cmdpdc		748261	1					
ANR	753629	Argument	cmdpdc		748261	0					
ANR	753630	Identifier	cmdpdc		748261	0					
ANR	753631	Argument	"""Select pseudo-decompiler command to run after pdc"""		748261	1					
ANR	753632	PrimaryExpression	"""Select pseudo-decompiler command to run after pdc"""		748261	0					
ANR	753633	ExpressionStatement	"update_cmdpdc_options ( core , cmdpdc )"	3284:1:109759:109795	748261	457	True				
ANR	753634	CallExpression	"update_cmdpdc_options ( core , cmdpdc )"		748261	0					
ANR	753635	Callee	update_cmdpdc_options		748261	0					
ANR	753636	Identifier	update_cmdpdc_options		748261	0					
ANR	753637	ArgumentList	core		748261	1					
ANR	753638	Argument	core		748261	0					
ANR	753639	Identifier	core		748261	0					
ANR	753640	Argument	cmdpdc		748261	1					
ANR	753641	Identifier	cmdpdc		748261	0					
ANR	753642	ExpressionStatement	"SETCB ( ""cmd.log"" , """" , & cb_cmdlog , ""Every time a new T log is added run this command"" )"	3285:1:109798:109883	748261	458	True				
ANR	753643	CallExpression	"SETCB ( ""cmd.log"" , """" , & cb_cmdlog , ""Every time a new T log is added run this command"" )"		748261	0					
ANR	753644	Callee	SETCB		748261	0					
ANR	753645	Identifier	SETCB		748261	0					
ANR	753646	ArgumentList	"""cmd.log"""		748261	1					
ANR	753647	Argument	"""cmd.log"""		748261	0					
ANR	753648	PrimaryExpression	"""cmd.log"""		748261	0					
ANR	753649	Argument	""""""		748261	1					
ANR	753650	PrimaryExpression	""""""		748261	0					
ANR	753651	Argument	& cb_cmdlog		748261	2					
ANR	753652	UnaryOperationExpression	& cb_cmdlog		748261	0					
ANR	753653	UnaryOperator	&		748261	0					
ANR	753654	Identifier	cb_cmdlog		748261	1					
ANR	753655	Argument	"""Every time a new T log is added run this command"""		748261	3					
ANR	753656	PrimaryExpression	"""Every time a new T log is added run this command"""		748261	0					
ANR	753657	ExpressionStatement	"SETPREF ( ""cmd.prompt"" , """" , ""Prompt commands"" )"	3286:1:109886:109931	748261	459	True				
ANR	753658	CallExpression	"SETPREF ( ""cmd.prompt"" , """" , ""Prompt commands"" )"		748261	0					
ANR	753659	Callee	SETPREF		748261	0					
ANR	753660	Identifier	SETPREF		748261	0					
ANR	753661	ArgumentList	"""cmd.prompt"""		748261	1					
ANR	753662	Argument	"""cmd.prompt"""		748261	0					
ANR	753663	PrimaryExpression	"""cmd.prompt"""		748261	0					
ANR	753664	Argument	""""""		748261	1					
ANR	753665	PrimaryExpression	""""""		748261	0					
ANR	753666	Argument	"""Prompt commands"""		748261	2					
ANR	753667	PrimaryExpression	"""Prompt commands"""		748261	0					
ANR	753668	ExpressionStatement	"SETCB ( ""cmd.repeat"" , ""false"" , & cb_cmdrepeat , ""Empty command an alias for '..' (repeat last command)"" )"	3287:1:109934:110035	748261	460	True				
ANR	753669	CallExpression	"SETCB ( ""cmd.repeat"" , ""false"" , & cb_cmdrepeat , ""Empty command an alias for '..' (repeat last command)"" )"		748261	0					
ANR	753670	Callee	SETCB		748261	0					
ANR	753671	Identifier	SETCB		748261	0					
ANR	753672	ArgumentList	"""cmd.repeat"""		748261	1					
ANR	753673	Argument	"""cmd.repeat"""		748261	0					
ANR	753674	PrimaryExpression	"""cmd.repeat"""		748261	0					
ANR	753675	Argument	"""false"""		748261	1					
ANR	753676	PrimaryExpression	"""false"""		748261	0					
ANR	753677	Argument	& cb_cmdrepeat		748261	2					
ANR	753678	UnaryOperationExpression	& cb_cmdrepeat		748261	0					
ANR	753679	UnaryOperator	&		748261	0					
ANR	753680	Identifier	cb_cmdrepeat		748261	1					
ANR	753681	Argument	"""Empty command an alias for '..' (repeat last command)"""		748261	3					
ANR	753682	PrimaryExpression	"""Empty command an alias for '..' (repeat last command)"""		748261	0					
ANR	753683	ExpressionStatement	"SETPREF ( ""cmd.fcn.new"" , """" , ""Run when new function is analyzed"" )"	3288:1:110038:110102	748261	461	True				
ANR	753684	CallExpression	"SETPREF ( ""cmd.fcn.new"" , """" , ""Run when new function is analyzed"" )"		748261	0					
ANR	753685	Callee	SETPREF		748261	0					
ANR	753686	Identifier	SETPREF		748261	0					
ANR	753687	ArgumentList	"""cmd.fcn.new"""		748261	1					
ANR	753688	Argument	"""cmd.fcn.new"""		748261	0					
ANR	753689	PrimaryExpression	"""cmd.fcn.new"""		748261	0					
ANR	753690	Argument	""""""		748261	1					
ANR	753691	PrimaryExpression	""""""		748261	0					
ANR	753692	Argument	"""Run when new function is analyzed"""		748261	2					
ANR	753693	PrimaryExpression	"""Run when new function is analyzed"""		748261	0					
ANR	753694	ExpressionStatement	"SETPREF ( ""cmd.fcn.delete"" , """" , ""Run when a function is deleted"" )"	3289:1:110105:110169	748261	462	True				
ANR	753695	CallExpression	"SETPREF ( ""cmd.fcn.delete"" , """" , ""Run when a function is deleted"" )"		748261	0					
ANR	753696	Callee	SETPREF		748261	0					
ANR	753697	Identifier	SETPREF		748261	0					
ANR	753698	ArgumentList	"""cmd.fcn.delete"""		748261	1					
ANR	753699	Argument	"""cmd.fcn.delete"""		748261	0					
ANR	753700	PrimaryExpression	"""cmd.fcn.delete"""		748261	0					
ANR	753701	Argument	""""""		748261	1					
ANR	753702	PrimaryExpression	""""""		748261	0					
ANR	753703	Argument	"""Run when a function is deleted"""		748261	2					
ANR	753704	PrimaryExpression	"""Run when a function is deleted"""		748261	0					
ANR	753705	ExpressionStatement	"SETPREF ( ""cmd.fcn.rename"" , """" , ""Run when a function is renamed"" )"	3290:1:110172:110236	748261	463	True				
ANR	753706	CallExpression	"SETPREF ( ""cmd.fcn.rename"" , """" , ""Run when a function is renamed"" )"		748261	0					
ANR	753707	Callee	SETPREF		748261	0					
ANR	753708	Identifier	SETPREF		748261	0					
ANR	753709	ArgumentList	"""cmd.fcn.rename"""		748261	1					
ANR	753710	Argument	"""cmd.fcn.rename"""		748261	0					
ANR	753711	PrimaryExpression	"""cmd.fcn.rename"""		748261	0					
ANR	753712	Argument	""""""		748261	1					
ANR	753713	PrimaryExpression	""""""		748261	0					
ANR	753714	Argument	"""Run when a function is renamed"""		748261	2					
ANR	753715	PrimaryExpression	"""Run when a function is renamed"""		748261	0					
ANR	753716	ExpressionStatement	"SETPREF ( ""cmd.visual"" , """" , ""Replace current print mode"" )"	3291:1:110239:110295	748261	464	True				
ANR	753717	CallExpression	"SETPREF ( ""cmd.visual"" , """" , ""Replace current print mode"" )"		748261	0					
ANR	753718	Callee	SETPREF		748261	0					
ANR	753719	Identifier	SETPREF		748261	0					
ANR	753720	ArgumentList	"""cmd.visual"""		748261	1					
ANR	753721	Argument	"""cmd.visual"""		748261	0					
ANR	753722	PrimaryExpression	"""cmd.visual"""		748261	0					
ANR	753723	Argument	""""""		748261	1					
ANR	753724	PrimaryExpression	""""""		748261	0					
ANR	753725	Argument	"""Replace current print mode"""		748261	2					
ANR	753726	PrimaryExpression	"""Replace current print mode"""		748261	0					
ANR	753727	ExpressionStatement	"SETPREF ( ""cmd.vprompt"" , """" , ""Visual prompt commands"" )"	3292:1:110298:110351	748261	465	True				
ANR	753728	CallExpression	"SETPREF ( ""cmd.vprompt"" , """" , ""Visual prompt commands"" )"		748261	0					
ANR	753729	Callee	SETPREF		748261	0					
ANR	753730	Identifier	SETPREF		748261	0					
ANR	753731	ArgumentList	"""cmd.vprompt"""		748261	1					
ANR	753732	Argument	"""cmd.vprompt"""		748261	0					
ANR	753733	PrimaryExpression	"""cmd.vprompt"""		748261	0					
ANR	753734	Argument	""""""		748261	1					
ANR	753735	PrimaryExpression	""""""		748261	0					
ANR	753736	Argument	"""Visual prompt commands"""		748261	2					
ANR	753737	PrimaryExpression	"""Visual prompt commands"""		748261	0					
ANR	753738	ExpressionStatement	"SETCB ( ""cmd.esil.step"" , """" , & cb_cmd_esil_step , ""Command to run before performing a step in the emulator"" )"	3294:1:110355:110460	748261	466	True				
ANR	753739	CallExpression	"SETCB ( ""cmd.esil.step"" , """" , & cb_cmd_esil_step , ""Command to run before performing a step in the emulator"" )"		748261	0					
ANR	753740	Callee	SETCB		748261	0					
ANR	753741	Identifier	SETCB		748261	0					
ANR	753742	ArgumentList	"""cmd.esil.step"""		748261	1					
ANR	753743	Argument	"""cmd.esil.step"""		748261	0					
ANR	753744	PrimaryExpression	"""cmd.esil.step"""		748261	0					
ANR	753745	Argument	""""""		748261	1					
ANR	753746	PrimaryExpression	""""""		748261	0					
ANR	753747	Argument	& cb_cmd_esil_step		748261	2					
ANR	753748	UnaryOperationExpression	& cb_cmd_esil_step		748261	0					
ANR	753749	UnaryOperator	&		748261	0					
ANR	753750	Identifier	cb_cmd_esil_step		748261	1					
ANR	753751	Argument	"""Command to run before performing a step in the emulator"""		748261	3					
ANR	753752	PrimaryExpression	"""Command to run before performing a step in the emulator"""		748261	0					
ANR	753753	ExpressionStatement	"SETCB ( ""cmd.esil.stepout"" , """" , & cb_cmd_esil_step_out , ""Command to run after performing a step in the emulator"" )"	3295:1:110463:110574	748261	467	True				
ANR	753754	CallExpression	"SETCB ( ""cmd.esil.stepout"" , """" , & cb_cmd_esil_step_out , ""Command to run after performing a step in the emulator"" )"		748261	0					
ANR	753755	Callee	SETCB		748261	0					
ANR	753756	Identifier	SETCB		748261	0					
ANR	753757	ArgumentList	"""cmd.esil.stepout"""		748261	1					
ANR	753758	Argument	"""cmd.esil.stepout"""		748261	0					
ANR	753759	PrimaryExpression	"""cmd.esil.stepout"""		748261	0					
ANR	753760	Argument	""""""		748261	1					
ANR	753761	PrimaryExpression	""""""		748261	0					
ANR	753762	Argument	& cb_cmd_esil_step_out		748261	2					
ANR	753763	UnaryOperationExpression	& cb_cmd_esil_step_out		748261	0					
ANR	753764	UnaryOperator	&		748261	0					
ANR	753765	Identifier	cb_cmd_esil_step_out		748261	1					
ANR	753766	Argument	"""Command to run after performing a step in the emulator"""		748261	3					
ANR	753767	PrimaryExpression	"""Command to run after performing a step in the emulator"""		748261	0					
ANR	753768	ExpressionStatement	"SETCB ( ""cmd.esil.mdev"" , """" , & cb_cmd_esil_mdev , ""Command to run when memory device address is accessed"" )"	3296:1:110577:110680	748261	468	True				
ANR	753769	CallExpression	"SETCB ( ""cmd.esil.mdev"" , """" , & cb_cmd_esil_mdev , ""Command to run when memory device address is accessed"" )"		748261	0					
ANR	753770	Callee	SETCB		748261	0					
ANR	753771	Identifier	SETCB		748261	0					
ANR	753772	ArgumentList	"""cmd.esil.mdev"""		748261	1					
ANR	753773	Argument	"""cmd.esil.mdev"""		748261	0					
ANR	753774	PrimaryExpression	"""cmd.esil.mdev"""		748261	0					
ANR	753775	Argument	""""""		748261	1					
ANR	753776	PrimaryExpression	""""""		748261	0					
ANR	753777	Argument	& cb_cmd_esil_mdev		748261	2					
ANR	753778	UnaryOperationExpression	& cb_cmd_esil_mdev		748261	0					
ANR	753779	UnaryOperator	&		748261	0					
ANR	753780	Identifier	cb_cmd_esil_mdev		748261	1					
ANR	753781	Argument	"""Command to run when memory device address is accessed"""		748261	3					
ANR	753782	PrimaryExpression	"""Command to run when memory device address is accessed"""		748261	0					
ANR	753783	ExpressionStatement	"SETCB ( ""cmd.esil.intr"" , """" , & cb_cmd_esil_intr , ""Command to run when an esil interrupt happens"" )"	3297:1:110683:110778	748261	469	True				
ANR	753784	CallExpression	"SETCB ( ""cmd.esil.intr"" , """" , & cb_cmd_esil_intr , ""Command to run when an esil interrupt happens"" )"		748261	0					
ANR	753785	Callee	SETCB		748261	0					
ANR	753786	Identifier	SETCB		748261	0					
ANR	753787	ArgumentList	"""cmd.esil.intr"""		748261	1					
ANR	753788	Argument	"""cmd.esil.intr"""		748261	0					
ANR	753789	PrimaryExpression	"""cmd.esil.intr"""		748261	0					
ANR	753790	Argument	""""""		748261	1					
ANR	753791	PrimaryExpression	""""""		748261	0					
ANR	753792	Argument	& cb_cmd_esil_intr		748261	2					
ANR	753793	UnaryOperationExpression	& cb_cmd_esil_intr		748261	0					
ANR	753794	UnaryOperator	&		748261	0					
ANR	753795	Identifier	cb_cmd_esil_intr		748261	1					
ANR	753796	Argument	"""Command to run when an esil interrupt happens"""		748261	3					
ANR	753797	PrimaryExpression	"""Command to run when an esil interrupt happens"""		748261	0					
ANR	753798	ExpressionStatement	"SETCB ( ""cmd.esil.trap"" , """" , & cb_cmd_esil_trap , ""Command to run when an esil trap happens"" )"	3298:1:110781:110871	748261	470	True				
ANR	753799	CallExpression	"SETCB ( ""cmd.esil.trap"" , """" , & cb_cmd_esil_trap , ""Command to run when an esil trap happens"" )"		748261	0					
ANR	753800	Callee	SETCB		748261	0					
ANR	753801	Identifier	SETCB		748261	0					
ANR	753802	ArgumentList	"""cmd.esil.trap"""		748261	1					
ANR	753803	Argument	"""cmd.esil.trap"""		748261	0					
ANR	753804	PrimaryExpression	"""cmd.esil.trap"""		748261	0					
ANR	753805	Argument	""""""		748261	1					
ANR	753806	PrimaryExpression	""""""		748261	0					
ANR	753807	Argument	& cb_cmd_esil_trap		748261	2					
ANR	753808	UnaryOperationExpression	& cb_cmd_esil_trap		748261	0					
ANR	753809	UnaryOperator	&		748261	0					
ANR	753810	Identifier	cb_cmd_esil_trap		748261	1					
ANR	753811	Argument	"""Command to run when an esil trap happens"""		748261	3					
ANR	753812	PrimaryExpression	"""Command to run when an esil trap happens"""		748261	0					
ANR	753813	ExpressionStatement	"SETCB ( ""cmd.esil.todo"" , """" , & cb_cmd_esil_todo , ""Command to run when the esil instruction contains TODO"" )"	3299:1:110874:110978	748261	471	True				
ANR	753814	CallExpression	"SETCB ( ""cmd.esil.todo"" , """" , & cb_cmd_esil_todo , ""Command to run when the esil instruction contains TODO"" )"		748261	0					
ANR	753815	Callee	SETCB		748261	0					
ANR	753816	Identifier	SETCB		748261	0					
ANR	753817	ArgumentList	"""cmd.esil.todo"""		748261	1					
ANR	753818	Argument	"""cmd.esil.todo"""		748261	0					
ANR	753819	PrimaryExpression	"""cmd.esil.todo"""		748261	0					
ANR	753820	Argument	""""""		748261	1					
ANR	753821	PrimaryExpression	""""""		748261	0					
ANR	753822	Argument	& cb_cmd_esil_todo		748261	2					
ANR	753823	UnaryOperationExpression	& cb_cmd_esil_todo		748261	0					
ANR	753824	UnaryOperator	&		748261	0					
ANR	753825	Identifier	cb_cmd_esil_todo		748261	1					
ANR	753826	Argument	"""Command to run when the esil instruction contains TODO"""		748261	3					
ANR	753827	PrimaryExpression	"""Command to run when the esil instruction contains TODO"""		748261	0					
ANR	753828	ExpressionStatement	"SETCB ( ""cmd.esil.ioer"" , """" , & cb_cmd_esil_ioer , ""Command to run when esil fails to IO (invalid read/write)"" )"	3300:1:110981:111088	748261	472	True				
ANR	753829	CallExpression	"SETCB ( ""cmd.esil.ioer"" , """" , & cb_cmd_esil_ioer , ""Command to run when esil fails to IO (invalid read/write)"" )"		748261	0					
ANR	753830	Callee	SETCB		748261	0					
ANR	753831	Identifier	SETCB		748261	0					
ANR	753832	ArgumentList	"""cmd.esil.ioer"""		748261	1					
ANR	753833	Argument	"""cmd.esil.ioer"""		748261	0					
ANR	753834	PrimaryExpression	"""cmd.esil.ioer"""		748261	0					
ANR	753835	Argument	""""""		748261	1					
ANR	753836	PrimaryExpression	""""""		748261	0					
ANR	753837	Argument	& cb_cmd_esil_ioer		748261	2					
ANR	753838	UnaryOperationExpression	& cb_cmd_esil_ioer		748261	0					
ANR	753839	UnaryOperator	&		748261	0					
ANR	753840	Identifier	cb_cmd_esil_ioer		748261	1					
ANR	753841	Argument	"""Command to run when esil fails to IO (invalid read/write)"""		748261	3					
ANR	753842	PrimaryExpression	"""Command to run when esil fails to IO (invalid read/write)"""		748261	0					
ANR	753843	ExpressionStatement	"n = NODECB ( ""fs.view"" , ""normal"" , & cb_fsview )"	3303:1:111110:111154	748261	473	True				
ANR	753844	AssignmentExpression	"n = NODECB ( ""fs.view"" , ""normal"" , & cb_fsview )"		748261	0		=			
ANR	753845	Identifier	n		748261	0					
ANR	753846	CallExpression	"NODECB ( ""fs.view"" , ""normal"" , & cb_fsview )"		748261	1					
ANR	753847	Callee	NODECB		748261	0					
ANR	753848	Identifier	NODECB		748261	0					
ANR	753849	ArgumentList	"""fs.view"""		748261	1					
ANR	753850	Argument	"""fs.view"""		748261	0					
ANR	753851	PrimaryExpression	"""fs.view"""		748261	0					
ANR	753852	Argument	"""normal"""		748261	1					
ANR	753853	PrimaryExpression	"""normal"""		748261	0					
ANR	753854	Argument	& cb_fsview		748261	2					
ANR	753855	UnaryOperationExpression	& cb_fsview		748261	0					
ANR	753856	UnaryOperator	&		748261	0					
ANR	753857	Identifier	cb_fsview		748261	1					
ANR	753858	ExpressionStatement	"SETDESC ( n , ""Set visibility options for filesystems"" )"	3304:1:111157:111210	748261	474	True				
ANR	753859	CallExpression	"SETDESC ( n , ""Set visibility options for filesystems"" )"		748261	0					
ANR	753860	Callee	SETDESC		748261	0					
ANR	753861	Identifier	SETDESC		748261	0					
ANR	753862	ArgumentList	n		748261	1					
ANR	753863	Argument	n		748261	0					
ANR	753864	Identifier	n		748261	0					
ANR	753865	Argument	"""Set visibility options for filesystems"""		748261	1					
ANR	753866	PrimaryExpression	"""Set visibility options for filesystems"""		748261	0					
ANR	753867	ExpressionStatement	"SETOPTIONS ( n , ""all"" , ""deleted"" , ""special"" , NULL )"	3305:1:111213:111262	748261	475	True				
ANR	753868	CallExpression	"SETOPTIONS ( n , ""all"" , ""deleted"" , ""special"" , NULL )"		748261	0					
ANR	753869	Callee	SETOPTIONS		748261	0					
ANR	753870	Identifier	SETOPTIONS		748261	0					
ANR	753871	ArgumentList	n		748261	1					
ANR	753872	Argument	n		748261	0					
ANR	753873	Identifier	n		748261	0					
ANR	753874	Argument	"""all"""		748261	1					
ANR	753875	PrimaryExpression	"""all"""		748261	0					
ANR	753876	Argument	"""deleted"""		748261	2					
ANR	753877	PrimaryExpression	"""deleted"""		748261	0					
ANR	753878	Argument	"""special"""		748261	3					
ANR	753879	PrimaryExpression	"""special"""		748261	0					
ANR	753880	Argument	NULL		748261	4					
ANR	753881	Identifier	NULL		748261	0					
ANR	753882	ExpressionStatement	"SETCB ( ""hex.header"" , ""true"" , & cb_hex_header , ""Show header in hexdump"" )"	3308:1:111281:111351	748261	476	True				
ANR	753883	CallExpression	"SETCB ( ""hex.header"" , ""true"" , & cb_hex_header , ""Show header in hexdump"" )"		748261	0					
ANR	753884	Callee	SETCB		748261	0					
ANR	753885	Identifier	SETCB		748261	0					
ANR	753886	ArgumentList	"""hex.header"""		748261	1					
ANR	753887	Argument	"""hex.header"""		748261	0					
ANR	753888	PrimaryExpression	"""hex.header"""		748261	0					
ANR	753889	Argument	"""true"""		748261	1					
ANR	753890	PrimaryExpression	"""true"""		748261	0					
ANR	753891	Argument	& cb_hex_header		748261	2					
ANR	753892	UnaryOperationExpression	& cb_hex_header		748261	0					
ANR	753893	UnaryOperator	&		748261	0					
ANR	753894	Identifier	cb_hex_header		748261	1					
ANR	753895	Argument	"""Show header in hexdump"""		748261	3					
ANR	753896	PrimaryExpression	"""Show header in hexdump"""		748261	0					
ANR	753897	ExpressionStatement	"SETCB ( ""hex.bytes"" , ""true"" , & cb_hex_bytes , ""Show bytes column in hexdump"" )"	3309:1:111354:111428	748261	477	True				
ANR	753898	CallExpression	"SETCB ( ""hex.bytes"" , ""true"" , & cb_hex_bytes , ""Show bytes column in hexdump"" )"		748261	0					
ANR	753899	Callee	SETCB		748261	0					
ANR	753900	Identifier	SETCB		748261	0					
ANR	753901	ArgumentList	"""hex.bytes"""		748261	1					
ANR	753902	Argument	"""hex.bytes"""		748261	0					
ANR	753903	PrimaryExpression	"""hex.bytes"""		748261	0					
ANR	753904	Argument	"""true"""		748261	1					
ANR	753905	PrimaryExpression	"""true"""		748261	0					
ANR	753906	Argument	& cb_hex_bytes		748261	2					
ANR	753907	UnaryOperationExpression	& cb_hex_bytes		748261	0					
ANR	753908	UnaryOperator	&		748261	0					
ANR	753909	Identifier	cb_hex_bytes		748261	1					
ANR	753910	Argument	"""Show bytes column in hexdump"""		748261	3					
ANR	753911	PrimaryExpression	"""Show bytes column in hexdump"""		748261	0					
ANR	753912	ExpressionStatement	"SETCB ( ""hex.ascii"" , ""true"" , & cb_hex_ascii , ""Show ascii column in hexdump"" )"	3310:1:111431:111505	748261	478	True				
ANR	753913	CallExpression	"SETCB ( ""hex.ascii"" , ""true"" , & cb_hex_ascii , ""Show ascii column in hexdump"" )"		748261	0					
ANR	753914	Callee	SETCB		748261	0					
ANR	753915	Identifier	SETCB		748261	0					
ANR	753916	ArgumentList	"""hex.ascii"""		748261	1					
ANR	753917	Argument	"""hex.ascii"""		748261	0					
ANR	753918	PrimaryExpression	"""hex.ascii"""		748261	0					
ANR	753919	Argument	"""true"""		748261	1					
ANR	753920	PrimaryExpression	"""true"""		748261	0					
ANR	753921	Argument	& cb_hex_ascii		748261	2					
ANR	753922	UnaryOperationExpression	& cb_hex_ascii		748261	0					
ANR	753923	UnaryOperator	&		748261	0					
ANR	753924	Identifier	cb_hex_ascii		748261	1					
ANR	753925	Argument	"""Show ascii column in hexdump"""		748261	3					
ANR	753926	PrimaryExpression	"""Show ascii column in hexdump"""		748261	0					
ANR	753927	ExpressionStatement	"SETCB ( ""hex.hdroff"" , ""false"" , & cb_hex_hdroff , ""Show aligned 1 byte in header instead of delta nibble"" )"	3311:1:111508:111610	748261	479	True				
ANR	753928	CallExpression	"SETCB ( ""hex.hdroff"" , ""false"" , & cb_hex_hdroff , ""Show aligned 1 byte in header instead of delta nibble"" )"		748261	0					
ANR	753929	Callee	SETCB		748261	0					
ANR	753930	Identifier	SETCB		748261	0					
ANR	753931	ArgumentList	"""hex.hdroff"""		748261	1					
ANR	753932	Argument	"""hex.hdroff"""		748261	0					
ANR	753933	PrimaryExpression	"""hex.hdroff"""		748261	0					
ANR	753934	Argument	"""false"""		748261	1					
ANR	753935	PrimaryExpression	"""false"""		748261	0					
ANR	753936	Argument	& cb_hex_hdroff		748261	2					
ANR	753937	UnaryOperationExpression	& cb_hex_hdroff		748261	0					
ANR	753938	UnaryOperator	&		748261	0					
ANR	753939	Identifier	cb_hex_hdroff		748261	1					
ANR	753940	Argument	"""Show aligned 1 byte in header instead of delta nibble"""		748261	3					
ANR	753941	PrimaryExpression	"""Show aligned 1 byte in header instead of delta nibble"""		748261	0					
ANR	753942	ExpressionStatement	"SETCB ( ""hex.style"" , ""false"" , & cb_hex_style , ""Improve the hexdump header style"" )"	3312:1:111613:111692	748261	480	True				
ANR	753943	CallExpression	"SETCB ( ""hex.style"" , ""false"" , & cb_hex_style , ""Improve the hexdump header style"" )"		748261	0					
ANR	753944	Callee	SETCB		748261	0					
ANR	753945	Identifier	SETCB		748261	0					
ANR	753946	ArgumentList	"""hex.style"""		748261	1					
ANR	753947	Argument	"""hex.style"""		748261	0					
ANR	753948	PrimaryExpression	"""hex.style"""		748261	0					
ANR	753949	Argument	"""false"""		748261	1					
ANR	753950	PrimaryExpression	"""false"""		748261	0					
ANR	753951	Argument	& cb_hex_style		748261	2					
ANR	753952	UnaryOperationExpression	& cb_hex_style		748261	0					
ANR	753953	UnaryOperator	&		748261	0					
ANR	753954	Identifier	cb_hex_style		748261	1					
ANR	753955	Argument	"""Improve the hexdump header style"""		748261	3					
ANR	753956	PrimaryExpression	"""Improve the hexdump header style"""		748261	0					
ANR	753957	ExpressionStatement	"SETCB ( ""hex.pairs"" , ""true"" , & cb_hex_pairs , ""Show bytes paired in 'px' hexdump"" )"	3313:1:111695:111774	748261	481	True				
ANR	753958	CallExpression	"SETCB ( ""hex.pairs"" , ""true"" , & cb_hex_pairs , ""Show bytes paired in 'px' hexdump"" )"		748261	0					
ANR	753959	Callee	SETCB		748261	0					
ANR	753960	Identifier	SETCB		748261	0					
ANR	753961	ArgumentList	"""hex.pairs"""		748261	1					
ANR	753962	Argument	"""hex.pairs"""		748261	0					
ANR	753963	PrimaryExpression	"""hex.pairs"""		748261	0					
ANR	753964	Argument	"""true"""		748261	1					
ANR	753965	PrimaryExpression	"""true"""		748261	0					
ANR	753966	Argument	& cb_hex_pairs		748261	2					
ANR	753967	UnaryOperationExpression	& cb_hex_pairs		748261	0					
ANR	753968	UnaryOperator	&		748261	0					
ANR	753969	Identifier	cb_hex_pairs		748261	1					
ANR	753970	Argument	"""Show bytes paired in 'px' hexdump"""		748261	3					
ANR	753971	PrimaryExpression	"""Show bytes paired in 'px' hexdump"""		748261	0					
ANR	753972	ExpressionStatement	"SETCB ( ""hex.align"" , ""false"" , & cb_hex_align , ""Align hexdump with flag + flagsize"" )"	3314:1:111777:111858	748261	482	True				
ANR	753973	CallExpression	"SETCB ( ""hex.align"" , ""false"" , & cb_hex_align , ""Align hexdump with flag + flagsize"" )"		748261	0					
ANR	753974	Callee	SETCB		748261	0					
ANR	753975	Identifier	SETCB		748261	0					
ANR	753976	ArgumentList	"""hex.align"""		748261	1					
ANR	753977	Argument	"""hex.align"""		748261	0					
ANR	753978	PrimaryExpression	"""hex.align"""		748261	0					
ANR	753979	Argument	"""false"""		748261	1					
ANR	753980	PrimaryExpression	"""false"""		748261	0					
ANR	753981	Argument	& cb_hex_align		748261	2					
ANR	753982	UnaryOperationExpression	& cb_hex_align		748261	0					
ANR	753983	UnaryOperator	&		748261	0					
ANR	753984	Identifier	cb_hex_align		748261	1					
ANR	753985	Argument	"""Align hexdump with flag + flagsize"""		748261	3					
ANR	753986	PrimaryExpression	"""Align hexdump with flag + flagsize"""		748261	0					
ANR	753987	ExpressionStatement	"SETCB ( ""hex.section"" , ""false"" , & cb_hex_section , ""Show section name before the offset"" )"	3315:1:111861:111947	748261	483	True				
ANR	753988	CallExpression	"SETCB ( ""hex.section"" , ""false"" , & cb_hex_section , ""Show section name before the offset"" )"		748261	0					
ANR	753989	Callee	SETCB		748261	0					
ANR	753990	Identifier	SETCB		748261	0					
ANR	753991	ArgumentList	"""hex.section"""		748261	1					
ANR	753992	Argument	"""hex.section"""		748261	0					
ANR	753993	PrimaryExpression	"""hex.section"""		748261	0					
ANR	753994	Argument	"""false"""		748261	1					
ANR	753995	PrimaryExpression	"""false"""		748261	0					
ANR	753996	Argument	& cb_hex_section		748261	2					
ANR	753997	UnaryOperationExpression	& cb_hex_section		748261	0					
ANR	753998	UnaryOperator	&		748261	0					
ANR	753999	Identifier	cb_hex_section		748261	1					
ANR	754000	Argument	"""Show section name before the offset"""		748261	3					
ANR	754001	PrimaryExpression	"""Show section name before the offset"""		748261	0					
ANR	754002	ExpressionStatement	"SETCB ( ""io.unalloc"" , ""false"" , & cb_io_unalloc , ""Check each byte if it's allocated"" )"	3316:1:111950:112032	748261	484	True				
ANR	754003	CallExpression	"SETCB ( ""io.unalloc"" , ""false"" , & cb_io_unalloc , ""Check each byte if it's allocated"" )"		748261	0					
ANR	754004	Callee	SETCB		748261	0					
ANR	754005	Identifier	SETCB		748261	0					
ANR	754006	ArgumentList	"""io.unalloc"""		748261	1					
ANR	754007	Argument	"""io.unalloc"""		748261	0					
ANR	754008	PrimaryExpression	"""io.unalloc"""		748261	0					
ANR	754009	Argument	"""false"""		748261	1					
ANR	754010	PrimaryExpression	"""false"""		748261	0					
ANR	754011	Argument	& cb_io_unalloc		748261	2					
ANR	754012	UnaryOperationExpression	& cb_io_unalloc		748261	0					
ANR	754013	UnaryOperator	&		748261	0					
ANR	754014	Identifier	cb_io_unalloc		748261	1					
ANR	754015	Argument	"""Check each byte if it's allocated"""		748261	3					
ANR	754016	PrimaryExpression	"""Check each byte if it's allocated"""		748261	0					
ANR	754017	ExpressionStatement	"SETCB ( ""io.unalloc.ch"" , ""."" , & cb_io_unalloc_ch , ""Hexdump char if byte is unallocated"" )"	3317:1:112035:112121	748261	485	True				
ANR	754018	CallExpression	"SETCB ( ""io.unalloc.ch"" , ""."" , & cb_io_unalloc_ch , ""Hexdump char if byte is unallocated"" )"		748261	0					
ANR	754019	Callee	SETCB		748261	0					
ANR	754020	Identifier	SETCB		748261	0					
ANR	754021	ArgumentList	"""io.unalloc.ch"""		748261	1					
ANR	754022	Argument	"""io.unalloc.ch"""		748261	0					
ANR	754023	PrimaryExpression	"""io.unalloc.ch"""		748261	0					
ANR	754024	Argument	"""."""		748261	1					
ANR	754025	PrimaryExpression	"""."""		748261	0					
ANR	754026	Argument	& cb_io_unalloc_ch		748261	2					
ANR	754027	UnaryOperationExpression	& cb_io_unalloc_ch		748261	0					
ANR	754028	UnaryOperator	&		748261	0					
ANR	754029	Identifier	cb_io_unalloc_ch		748261	1					
ANR	754030	Argument	"""Hexdump char if byte is unallocated"""		748261	3					
ANR	754031	PrimaryExpression	"""Hexdump char if byte is unallocated"""		748261	0					
ANR	754032	ExpressionStatement	"SETCB ( ""hex.compact"" , ""false"" , & cb_hexcompact , ""Show smallest 16 byte col hexdump (60 columns)"" )"	3318:1:112124:112220	748261	486	True				
ANR	754033	CallExpression	"SETCB ( ""hex.compact"" , ""false"" , & cb_hexcompact , ""Show smallest 16 byte col hexdump (60 columns)"" )"		748261	0					
ANR	754034	Callee	SETCB		748261	0					
ANR	754035	Identifier	SETCB		748261	0					
ANR	754036	ArgumentList	"""hex.compact"""		748261	1					
ANR	754037	Argument	"""hex.compact"""		748261	0					
ANR	754038	PrimaryExpression	"""hex.compact"""		748261	0					
ANR	754039	Argument	"""false"""		748261	1					
ANR	754040	PrimaryExpression	"""false"""		748261	0					
ANR	754041	Argument	& cb_hexcompact		748261	2					
ANR	754042	UnaryOperationExpression	& cb_hexcompact		748261	0					
ANR	754043	UnaryOperator	&		748261	0					
ANR	754044	Identifier	cb_hexcompact		748261	1					
ANR	754045	Argument	"""Show smallest 16 byte col hexdump (60 columns)"""		748261	3					
ANR	754046	PrimaryExpression	"""Show smallest 16 byte col hexdump (60 columns)"""		748261	0					
ANR	754047	ExpressionStatement	"SETCB ( ""cmd.hexcursor"" , """" , & cb_cmd_hexcursor , ""If set and cursor is enabled display given pf format string"" )"	3319:1:112223:112332	748261	487	True				
ANR	754048	CallExpression	"SETCB ( ""cmd.hexcursor"" , """" , & cb_cmd_hexcursor , ""If set and cursor is enabled display given pf format string"" )"		748261	0					
ANR	754049	Callee	SETCB		748261	0					
ANR	754050	Identifier	SETCB		748261	0					
ANR	754051	ArgumentList	"""cmd.hexcursor"""		748261	1					
ANR	754052	Argument	"""cmd.hexcursor"""		748261	0					
ANR	754053	PrimaryExpression	"""cmd.hexcursor"""		748261	0					
ANR	754054	Argument	""""""		748261	1					
ANR	754055	PrimaryExpression	""""""		748261	0					
ANR	754056	Argument	& cb_cmd_hexcursor		748261	2					
ANR	754057	UnaryOperationExpression	& cb_cmd_hexcursor		748261	0					
ANR	754058	UnaryOperator	&		748261	0					
ANR	754059	Identifier	cb_cmd_hexcursor		748261	1					
ANR	754060	Argument	"""If set and cursor is enabled display given pf format string"""		748261	3					
ANR	754061	PrimaryExpression	"""If set and cursor is enabled display given pf format string"""		748261	0					
ANR	754062	ExpressionStatement	"SETI ( ""hex.flagsz"" , 0 , ""If non zero, overrides the flag size in pxa"" )"	3320:1:112335:112404	748261	488	True				
ANR	754063	CallExpression	"SETI ( ""hex.flagsz"" , 0 , ""If non zero, overrides the flag size in pxa"" )"		748261	0					
ANR	754064	Callee	SETI		748261	0					
ANR	754065	Identifier	SETI		748261	0					
ANR	754066	ArgumentList	"""hex.flagsz"""		748261	1					
ANR	754067	Argument	"""hex.flagsz"""		748261	0					
ANR	754068	PrimaryExpression	"""hex.flagsz"""		748261	0					
ANR	754069	Argument	0		748261	1					
ANR	754070	PrimaryExpression	0		748261	0					
ANR	754071	Argument	"""If non zero, overrides the flag size in pxa"""		748261	2					
ANR	754072	PrimaryExpression	"""If non zero, overrides the flag size in pxa"""		748261	0					
ANR	754073	ExpressionStatement	"SETICB ( ""hex.cols"" , 16 , & cb_hexcols , ""Number of columns in hexdump"" )"	3321:1:112407:112475	748261	489	True				
ANR	754074	CallExpression	"SETICB ( ""hex.cols"" , 16 , & cb_hexcols , ""Number of columns in hexdump"" )"		748261	0					
ANR	754075	Callee	SETICB		748261	0					
ANR	754076	Identifier	SETICB		748261	0					
ANR	754077	ArgumentList	"""hex.cols"""		748261	1					
ANR	754078	Argument	"""hex.cols"""		748261	0					
ANR	754079	PrimaryExpression	"""hex.cols"""		748261	0					
ANR	754080	Argument	16		748261	1					
ANR	754081	PrimaryExpression	16		748261	0					
ANR	754082	Argument	& cb_hexcols		748261	2					
ANR	754083	UnaryOperationExpression	& cb_hexcols		748261	0					
ANR	754084	UnaryOperator	&		748261	0					
ANR	754085	Identifier	cb_hexcols		748261	1					
ANR	754086	Argument	"""Number of columns in hexdump"""		748261	3					
ANR	754087	PrimaryExpression	"""Number of columns in hexdump"""		748261	0					
ANR	754088	ExpressionStatement	"SETI ( ""hex.depth"" , 5 , ""Maximal level of recurrence while telescoping memory"" )"	3322:1:112478:112555	748261	490	True				
ANR	754089	CallExpression	"SETI ( ""hex.depth"" , 5 , ""Maximal level of recurrence while telescoping memory"" )"		748261	0					
ANR	754090	Callee	SETI		748261	0					
ANR	754091	Identifier	SETI		748261	0					
ANR	754092	ArgumentList	"""hex.depth"""		748261	1					
ANR	754093	Argument	"""hex.depth"""		748261	0					
ANR	754094	PrimaryExpression	"""hex.depth"""		748261	0					
ANR	754095	Argument	5		748261	1					
ANR	754096	PrimaryExpression	5		748261	0					
ANR	754097	Argument	"""Maximal level of recurrence while telescoping memory"""		748261	2					
ANR	754098	PrimaryExpression	"""Maximal level of recurrence while telescoping memory"""		748261	0					
ANR	754099	ExpressionStatement	"SETPREF ( ""hex.onechar"" , ""false"" , ""Number of columns in hexdump"" )"	3323:1:112558:112622	748261	491	True				
ANR	754100	CallExpression	"SETPREF ( ""hex.onechar"" , ""false"" , ""Number of columns in hexdump"" )"		748261	0					
ANR	754101	Callee	SETPREF		748261	0					
ANR	754102	Identifier	SETPREF		748261	0					
ANR	754103	ArgumentList	"""hex.onechar"""		748261	1					
ANR	754104	Argument	"""hex.onechar"""		748261	0					
ANR	754105	PrimaryExpression	"""hex.onechar"""		748261	0					
ANR	754106	Argument	"""false"""		748261	1					
ANR	754107	PrimaryExpression	"""false"""		748261	0					
ANR	754108	Argument	"""Number of columns in hexdump"""		748261	2					
ANR	754109	PrimaryExpression	"""Number of columns in hexdump"""		748261	0					
ANR	754110	ExpressionStatement	"SETICB ( ""hex.stride"" , 0 , & cb_hexstride , ""Line stride in hexdump (default is 0)"" )"	3324:1:112625:112705	748261	492	True				
ANR	754111	CallExpression	"SETICB ( ""hex.stride"" , 0 , & cb_hexstride , ""Line stride in hexdump (default is 0)"" )"		748261	0					
ANR	754112	Callee	SETICB		748261	0					
ANR	754113	Identifier	SETICB		748261	0					
ANR	754114	ArgumentList	"""hex.stride"""		748261	1					
ANR	754115	Argument	"""hex.stride"""		748261	0					
ANR	754116	PrimaryExpression	"""hex.stride"""		748261	0					
ANR	754117	Argument	0		748261	1					
ANR	754118	PrimaryExpression	0		748261	0					
ANR	754119	Argument	& cb_hexstride		748261	2					
ANR	754120	UnaryOperationExpression	& cb_hexstride		748261	0					
ANR	754121	UnaryOperator	&		748261	0					
ANR	754122	Identifier	cb_hexstride		748261	1					
ANR	754123	Argument	"""Line stride in hexdump (default is 0)"""		748261	3					
ANR	754124	PrimaryExpression	"""Line stride in hexdump (default is 0)"""		748261	0					
ANR	754125	ExpressionStatement	"SETCB ( ""hex.comments"" , ""true"" , & cb_hexcomments , ""Show comments in 'px' hexdump"" )"	3325:1:112708:112788	748261	493	True				
ANR	754126	CallExpression	"SETCB ( ""hex.comments"" , ""true"" , & cb_hexcomments , ""Show comments in 'px' hexdump"" )"		748261	0					
ANR	754127	Callee	SETCB		748261	0					
ANR	754128	Identifier	SETCB		748261	0					
ANR	754129	ArgumentList	"""hex.comments"""		748261	1					
ANR	754130	Argument	"""hex.comments"""		748261	0					
ANR	754131	PrimaryExpression	"""hex.comments"""		748261	0					
ANR	754132	Argument	"""true"""		748261	1					
ANR	754133	PrimaryExpression	"""true"""		748261	0					
ANR	754134	Argument	& cb_hexcomments		748261	2					
ANR	754135	UnaryOperationExpression	& cb_hexcomments		748261	0					
ANR	754136	UnaryOperator	&		748261	0					
ANR	754137	Identifier	cb_hexcomments		748261	1					
ANR	754138	Argument	"""Show comments in 'px' hexdump"""		748261	3					
ANR	754139	PrimaryExpression	"""Show comments in 'px' hexdump"""		748261	0					
ANR	754140	ExpressionStatement	"SETPREF ( ""http.log"" , ""true"" , ""Show HTTP requests processed"" )"	3328:1:112804:112864	748261	494	True				
ANR	754141	CallExpression	"SETPREF ( ""http.log"" , ""true"" , ""Show HTTP requests processed"" )"		748261	0					
ANR	754142	Callee	SETPREF		748261	0					
ANR	754143	Identifier	SETPREF		748261	0					
ANR	754144	ArgumentList	"""http.log"""		748261	1					
ANR	754145	Argument	"""http.log"""		748261	0					
ANR	754146	PrimaryExpression	"""http.log"""		748261	0					
ANR	754147	Argument	"""true"""		748261	1					
ANR	754148	PrimaryExpression	"""true"""		748261	0					
ANR	754149	Argument	"""Show HTTP requests processed"""		748261	2					
ANR	754150	PrimaryExpression	"""Show HTTP requests processed"""		748261	0					
ANR	754151	ExpressionStatement	"SETPREF ( ""http.sync"" , """" , ""Remote HTTP server to sync events with"" )"	3329:1:112867:112934	748261	495	True				
ANR	754152	CallExpression	"SETPREF ( ""http.sync"" , """" , ""Remote HTTP server to sync events with"" )"		748261	0					
ANR	754153	Callee	SETPREF		748261	0					
ANR	754154	Identifier	SETPREF		748261	0					
ANR	754155	ArgumentList	"""http.sync"""		748261	1					
ANR	754156	Argument	"""http.sync"""		748261	0					
ANR	754157	PrimaryExpression	"""http.sync"""		748261	0					
ANR	754158	Argument	""""""		748261	1					
ANR	754159	PrimaryExpression	""""""		748261	0					
ANR	754160	Argument	"""Remote HTTP server to sync events with"""		748261	2					
ANR	754161	PrimaryExpression	"""Remote HTTP server to sync events with"""		748261	0					
ANR	754162	ExpressionStatement	"SETPREF ( ""http.colon"" , ""false"" , ""Only accept the : command"" )"	3330:1:112937:112997	748261	496	True				
ANR	754163	CallExpression	"SETPREF ( ""http.colon"" , ""false"" , ""Only accept the : command"" )"		748261	0					
ANR	754164	Callee	SETPREF		748261	0					
ANR	754165	Identifier	SETPREF		748261	0					
ANR	754166	ArgumentList	"""http.colon"""		748261	1					
ANR	754167	Argument	"""http.colon"""		748261	0					
ANR	754168	PrimaryExpression	"""http.colon"""		748261	0					
ANR	754169	Argument	"""false"""		748261	1					
ANR	754170	PrimaryExpression	"""false"""		748261	0					
ANR	754171	Argument	"""Only accept the : command"""		748261	2					
ANR	754172	PrimaryExpression	"""Only accept the : command"""		748261	0					
ANR	754173	ExpressionStatement	"SETPREF ( ""http.logfile"" , """" , ""Specify a log file instead of stderr for http requests"" )"	3331:1:113000:113086	748261	497	True				
ANR	754174	CallExpression	"SETPREF ( ""http.logfile"" , """" , ""Specify a log file instead of stderr for http requests"" )"		748261	0					
ANR	754175	Callee	SETPREF		748261	0					
ANR	754176	Identifier	SETPREF		748261	0					
ANR	754177	ArgumentList	"""http.logfile"""		748261	1					
ANR	754178	Argument	"""http.logfile"""		748261	0					
ANR	754179	PrimaryExpression	"""http.logfile"""		748261	0					
ANR	754180	Argument	""""""		748261	1					
ANR	754181	PrimaryExpression	""""""		748261	0					
ANR	754182	Argument	"""Specify a log file instead of stderr for http requests"""		748261	2					
ANR	754183	PrimaryExpression	"""Specify a log file instead of stderr for http requests"""		748261	0					
ANR	754184	ExpressionStatement	"SETPREF ( ""http.cors"" , ""false"" , ""Enable CORS"" )"	3332:1:113089:113134	748261	498	True				
ANR	754185	CallExpression	"SETPREF ( ""http.cors"" , ""false"" , ""Enable CORS"" )"		748261	0					
ANR	754186	Callee	SETPREF		748261	0					
ANR	754187	Identifier	SETPREF		748261	0					
ANR	754188	ArgumentList	"""http.cors"""		748261	1					
ANR	754189	Argument	"""http.cors"""		748261	0					
ANR	754190	PrimaryExpression	"""http.cors"""		748261	0					
ANR	754191	Argument	"""false"""		748261	1					
ANR	754192	PrimaryExpression	"""false"""		748261	0					
ANR	754193	Argument	"""Enable CORS"""		748261	2					
ANR	754194	PrimaryExpression	"""Enable CORS"""		748261	0					
ANR	754195	ExpressionStatement	"SETPREF ( ""http.referer"" , """" , ""CSFR protection if set"" )"	3333:1:113137:113191	748261	499	True				
ANR	754196	CallExpression	"SETPREF ( ""http.referer"" , """" , ""CSFR protection if set"" )"		748261	0					
ANR	754197	Callee	SETPREF		748261	0					
ANR	754198	Identifier	SETPREF		748261	0					
ANR	754199	ArgumentList	"""http.referer"""		748261	1					
ANR	754200	Argument	"""http.referer"""		748261	0					
ANR	754201	PrimaryExpression	"""http.referer"""		748261	0					
ANR	754202	Argument	""""""		748261	1					
ANR	754203	PrimaryExpression	""""""		748261	0					
ANR	754204	Argument	"""CSFR protection if set"""		748261	2					
ANR	754205	PrimaryExpression	"""CSFR protection if set"""		748261	0					
ANR	754206	ExpressionStatement	"SETPREF ( ""http.dirlist"" , ""false"" , ""Enable directory listing"" )"	3334:1:113194:113255	748261	500	True				
ANR	754207	CallExpression	"SETPREF ( ""http.dirlist"" , ""false"" , ""Enable directory listing"" )"		748261	0					
ANR	754208	Callee	SETPREF		748261	0					
ANR	754209	Identifier	SETPREF		748261	0					
ANR	754210	ArgumentList	"""http.dirlist"""		748261	1					
ANR	754211	Argument	"""http.dirlist"""		748261	0					
ANR	754212	PrimaryExpression	"""http.dirlist"""		748261	0					
ANR	754213	Argument	"""false"""		748261	1					
ANR	754214	PrimaryExpression	"""false"""		748261	0					
ANR	754215	Argument	"""Enable directory listing"""		748261	2					
ANR	754216	PrimaryExpression	"""Enable directory listing"""		748261	0					
ANR	754217	ExpressionStatement	"SETPREF ( ""http.allow"" , """" , ""Only accept clients from the comma separated IP list"" )"	3335:1:113258:113340	748261	501	True				
ANR	754218	CallExpression	"SETPREF ( ""http.allow"" , """" , ""Only accept clients from the comma separated IP list"" )"		748261	0					
ANR	754219	Callee	SETPREF		748261	0					
ANR	754220	Identifier	SETPREF		748261	0					
ANR	754221	ArgumentList	"""http.allow"""		748261	1					
ANR	754222	Argument	"""http.allow"""		748261	0					
ANR	754223	PrimaryExpression	"""http.allow"""		748261	0					
ANR	754224	Argument	""""""		748261	1					
ANR	754225	PrimaryExpression	""""""		748261	0					
ANR	754226	Argument	"""Only accept clients from the comma separated IP list"""		748261	2					
ANR	754227	PrimaryExpression	"""Only accept clients from the comma separated IP list"""		748261	0					
ANR	754228	ExpressionStatement	"r_config_set ( cfg , ""http.browser"" , ""start"" )"	3337:1:113359:113402	748261	502	True				
ANR	754229	CallExpression	"r_config_set ( cfg , ""http.browser"" , ""start"" )"		748261	0					
ANR	754230	Callee	r_config_set		748261	0					
ANR	754231	Identifier	r_config_set		748261	0					
ANR	754232	ArgumentList	cfg		748261	1					
ANR	754233	Argument	cfg		748261	0					
ANR	754234	Identifier	cfg		748261	0					
ANR	754235	Argument	"""http.browser"""		748261	1					
ANR	754236	PrimaryExpression	"""http.browser"""		748261	0					
ANR	754237	Argument	"""start"""		748261	2					
ANR	754238	PrimaryExpression	"""start"""		748261	0					
ANR	754239	ExpressionStatement	"SETI ( ""http.maxsize"" , 0 , ""Maximum file size for upload"" )"	3353:1:114028:114084	748261	503	True				
ANR	754240	CallExpression	"SETI ( ""http.maxsize"" , 0 , ""Maximum file size for upload"" )"		748261	0					
ANR	754241	Callee	SETI		748261	0					
ANR	754242	Identifier	SETI		748261	0					
ANR	754243	ArgumentList	"""http.maxsize"""		748261	1					
ANR	754244	Argument	"""http.maxsize"""		748261	0					
ANR	754245	PrimaryExpression	"""http.maxsize"""		748261	0					
ANR	754246	Argument	0		748261	1					
ANR	754247	PrimaryExpression	0		748261	0					
ANR	754248	Argument	"""Maximum file size for upload"""		748261	2					
ANR	754249	PrimaryExpression	"""Maximum file size for upload"""		748261	0					
ANR	754250	ExpressionStatement	"SETPREF ( ""http.index"" , ""index.html"" , ""Main html file to check in directory"" )"	3354:1:114087:114163	748261	504	True				
ANR	754251	CallExpression	"SETPREF ( ""http.index"" , ""index.html"" , ""Main html file to check in directory"" )"		748261	0					
ANR	754252	Callee	SETPREF		748261	0					
ANR	754253	Identifier	SETPREF		748261	0					
ANR	754254	ArgumentList	"""http.index"""		748261	1					
ANR	754255	Argument	"""http.index"""		748261	0					
ANR	754256	PrimaryExpression	"""http.index"""		748261	0					
ANR	754257	Argument	"""index.html"""		748261	1					
ANR	754258	PrimaryExpression	"""index.html"""		748261	0					
ANR	754259	Argument	"""Main html file to check in directory"""		748261	2					
ANR	754260	PrimaryExpression	"""Main html file to check in directory"""		748261	0					
ANR	754261	ExpressionStatement	"SETPREF ( ""http.bind"" , ""localhost"" , ""Server address"" )"	3355:1:114166:114218	748261	505	True				
ANR	754262	CallExpression	"SETPREF ( ""http.bind"" , ""localhost"" , ""Server address"" )"		748261	0					
ANR	754263	Callee	SETPREF		748261	0					
ANR	754264	Identifier	SETPREF		748261	0					
ANR	754265	ArgumentList	"""http.bind"""		748261	1					
ANR	754266	Argument	"""http.bind"""		748261	0					
ANR	754267	PrimaryExpression	"""http.bind"""		748261	0					
ANR	754268	Argument	"""localhost"""		748261	1					
ANR	754269	PrimaryExpression	"""localhost"""		748261	0					
ANR	754270	Argument	"""Server address"""		748261	2					
ANR	754271	PrimaryExpression	"""Server address"""		748261	0					
ANR	754272	ExpressionStatement	"SETPREF ( ""http.homeroot"" , R_JOIN_2_PATHS ( ""~"" , R2_HOME_WWWROOT ) , ""http home root directory"" )"	3356:1:114221:114313	748261	506	True				
ANR	754273	CallExpression	"SETPREF ( ""http.homeroot"" , R_JOIN_2_PATHS ( ""~"" , R2_HOME_WWWROOT ) , ""http home root directory"" )"		748261	0					
ANR	754274	Callee	SETPREF		748261	0					
ANR	754275	Identifier	SETPREF		748261	0					
ANR	754276	ArgumentList	"""http.homeroot"""		748261	1					
ANR	754277	Argument	"""http.homeroot"""		748261	0					
ANR	754278	PrimaryExpression	"""http.homeroot"""		748261	0					
ANR	754279	Argument	"R_JOIN_2_PATHS ( ""~"" , R2_HOME_WWWROOT )"		748261	1					
ANR	754280	CallExpression	"R_JOIN_2_PATHS ( ""~"" , R2_HOME_WWWROOT )"		748261	0					
ANR	754281	Callee	R_JOIN_2_PATHS		748261	0					
ANR	754282	Identifier	R_JOIN_2_PATHS		748261	0					
ANR	754283	ArgumentList	"""~"""		748261	1					
ANR	754284	Argument	"""~"""		748261	0					
ANR	754285	PrimaryExpression	"""~"""		748261	0					
ANR	754286	Argument	R2_HOME_WWWROOT		748261	1					
ANR	754287	Identifier	R2_HOME_WWWROOT		748261	0					
ANR	754288	Argument	"""http home root directory"""		748261	2					
ANR	754289	PrimaryExpression	"""http home root directory"""		748261	0					
ANR	754290	ExpressionStatement	"SETPREF ( ""http.root"" , ""/data/data/org.radare.radare2installer/www"" , ""http root directory"" )"	3358:1:114332:114422	748261	507	True				
ANR	754291	CallExpression	"SETPREF ( ""http.root"" , ""/data/data/org.radare.radare2installer/www"" , ""http root directory"" )"		748261	0					
ANR	754292	Callee	SETPREF		748261	0					
ANR	754293	Identifier	SETPREF		748261	0					
ANR	754294	ArgumentList	"""http.root"""		748261	1					
ANR	754295	Argument	"""http.root"""		748261	0					
ANR	754296	PrimaryExpression	"""http.root"""		748261	0					
ANR	754297	Argument	"""/data/data/org.radare.radare2installer/www"""		748261	1					
ANR	754298	PrimaryExpression	"""/data/data/org.radare.radare2installer/www"""		748261	0					
ANR	754299	Argument	"""http root directory"""		748261	2					
ANR	754300	PrimaryExpression	"""http root directory"""		748261	0					
ANR	754301	ExpressionStatement	"SETPREF ( ""http.port"" , ""9090"" , ""HTTP server port"" )"	3362:1:114497:114546	748261	508	True				
ANR	754302	CallExpression	"SETPREF ( ""http.port"" , ""9090"" , ""HTTP server port"" )"		748261	0					
ANR	754303	Callee	SETPREF		748261	0					
ANR	754304	Identifier	SETPREF		748261	0					
ANR	754305	ArgumentList	"""http.port"""		748261	1					
ANR	754306	Argument	"""http.port"""		748261	0					
ANR	754307	PrimaryExpression	"""http.port"""		748261	0					
ANR	754308	Argument	"""9090"""		748261	1					
ANR	754309	PrimaryExpression	"""9090"""		748261	0					
ANR	754310	Argument	"""HTTP server port"""		748261	2					
ANR	754311	PrimaryExpression	"""HTTP server port"""		748261	0					
ANR	754312	ExpressionStatement	"SETPREF ( ""http.maxport"" , ""9999"" , ""Last HTTP server port"" )"	3363:1:114549:114606	748261	509	True				
ANR	754313	CallExpression	"SETPREF ( ""http.maxport"" , ""9999"" , ""Last HTTP server port"" )"		748261	0					
ANR	754314	Callee	SETPREF		748261	0					
ANR	754315	Identifier	SETPREF		748261	0					
ANR	754316	ArgumentList	"""http.maxport"""		748261	1					
ANR	754317	Argument	"""http.maxport"""		748261	0					
ANR	754318	PrimaryExpression	"""http.maxport"""		748261	0					
ANR	754319	Argument	"""9999"""		748261	1					
ANR	754320	PrimaryExpression	"""9999"""		748261	0					
ANR	754321	Argument	"""Last HTTP server port"""		748261	2					
ANR	754322	PrimaryExpression	"""Last HTTP server port"""		748261	0					
ANR	754323	ExpressionStatement	"SETPREF ( ""http.ui"" , ""m"" , ""Default webui (enyo, m, p, t)"" )"	3364:1:114609:114666	748261	510	True				
ANR	754324	CallExpression	"SETPREF ( ""http.ui"" , ""m"" , ""Default webui (enyo, m, p, t)"" )"		748261	0					
ANR	754325	Callee	SETPREF		748261	0					
ANR	754326	Identifier	SETPREF		748261	0					
ANR	754327	ArgumentList	"""http.ui"""		748261	1					
ANR	754328	Argument	"""http.ui"""		748261	0					
ANR	754329	PrimaryExpression	"""http.ui"""		748261	0					
ANR	754330	Argument	"""m"""		748261	1					
ANR	754331	PrimaryExpression	"""m"""		748261	0					
ANR	754332	Argument	"""Default webui (enyo, m, p, t)"""		748261	2					
ANR	754333	PrimaryExpression	"""Default webui (enyo, m, p, t)"""		748261	0					
ANR	754334	ExpressionStatement	"SETPREF ( ""http.sandbox"" , ""true"" , ""Sandbox the HTTP server"" )"	3365:1:114669:114728	748261	511	True				
ANR	754335	CallExpression	"SETPREF ( ""http.sandbox"" , ""true"" , ""Sandbox the HTTP server"" )"		748261	0					
ANR	754336	Callee	SETPREF		748261	0					
ANR	754337	Identifier	SETPREF		748261	0					
ANR	754338	ArgumentList	"""http.sandbox"""		748261	1					
ANR	754339	Argument	"""http.sandbox"""		748261	0					
ANR	754340	PrimaryExpression	"""http.sandbox"""		748261	0					
ANR	754341	Argument	"""true"""		748261	1					
ANR	754342	PrimaryExpression	"""true"""		748261	0					
ANR	754343	Argument	"""Sandbox the HTTP server"""		748261	2					
ANR	754344	PrimaryExpression	"""Sandbox the HTTP server"""		748261	0					
ANR	754345	ExpressionStatement	"SETI ( ""http.timeout"" , 3 , ""Disconnect clients after N seconds of inactivity"" )"	3366:1:114731:114807	748261	512	True				
ANR	754346	CallExpression	"SETI ( ""http.timeout"" , 3 , ""Disconnect clients after N seconds of inactivity"" )"		748261	0					
ANR	754347	Callee	SETI		748261	0					
ANR	754348	Identifier	SETI		748261	0					
ANR	754349	ArgumentList	"""http.timeout"""		748261	1					
ANR	754350	Argument	"""http.timeout"""		748261	0					
ANR	754351	PrimaryExpression	"""http.timeout"""		748261	0					
ANR	754352	Argument	3		748261	1					
ANR	754353	PrimaryExpression	3		748261	0					
ANR	754354	Argument	"""Disconnect clients after N seconds of inactivity"""		748261	2					
ANR	754355	PrimaryExpression	"""Disconnect clients after N seconds of inactivity"""		748261	0					
ANR	754356	ExpressionStatement	"SETI ( ""http.dietime"" , 0 , ""Kill server after N seconds with no client"" )"	3367:1:114810:114880	748261	513	True				
ANR	754357	CallExpression	"SETI ( ""http.dietime"" , 0 , ""Kill server after N seconds with no client"" )"		748261	0					
ANR	754358	Callee	SETI		748261	0					
ANR	754359	Identifier	SETI		748261	0					
ANR	754360	ArgumentList	"""http.dietime"""		748261	1					
ANR	754361	Argument	"""http.dietime"""		748261	0					
ANR	754362	PrimaryExpression	"""http.dietime"""		748261	0					
ANR	754363	Argument	0		748261	1					
ANR	754364	PrimaryExpression	0		748261	0					
ANR	754365	Argument	"""Kill server after N seconds with no client"""		748261	2					
ANR	754366	PrimaryExpression	"""Kill server after N seconds with no client"""		748261	0					
ANR	754367	ExpressionStatement	"SETPREF ( ""http.verbose"" , ""false"" , ""Output server logs to stdout"" )"	3368:1:114883:114948	748261	514	True				
ANR	754368	CallExpression	"SETPREF ( ""http.verbose"" , ""false"" , ""Output server logs to stdout"" )"		748261	0					
ANR	754369	Callee	SETPREF		748261	0					
ANR	754370	Identifier	SETPREF		748261	0					
ANR	754371	ArgumentList	"""http.verbose"""		748261	1					
ANR	754372	Argument	"""http.verbose"""		748261	0					
ANR	754373	PrimaryExpression	"""http.verbose"""		748261	0					
ANR	754374	Argument	"""false"""		748261	1					
ANR	754375	PrimaryExpression	"""false"""		748261	0					
ANR	754376	Argument	"""Output server logs to stdout"""		748261	2					
ANR	754377	PrimaryExpression	"""Output server logs to stdout"""		748261	0					
ANR	754378	ExpressionStatement	"SETPREF ( ""http.upget"" , ""false"" , ""/up/ answers GET requests, in addition to POST"" )"	3369:1:114951:115032	748261	515	True				
ANR	754379	CallExpression	"SETPREF ( ""http.upget"" , ""false"" , ""/up/ answers GET requests, in addition to POST"" )"		748261	0					
ANR	754380	Callee	SETPREF		748261	0					
ANR	754381	Identifier	SETPREF		748261	0					
ANR	754382	ArgumentList	"""http.upget"""		748261	1					
ANR	754383	Argument	"""http.upget"""		748261	0					
ANR	754384	PrimaryExpression	"""http.upget"""		748261	0					
ANR	754385	Argument	"""false"""		748261	1					
ANR	754386	PrimaryExpression	"""false"""		748261	0					
ANR	754387	Argument	"""/up/ answers GET requests, in addition to POST"""		748261	2					
ANR	754388	PrimaryExpression	"""/up/ answers GET requests, in addition to POST"""		748261	0					
ANR	754389	ExpressionStatement	"SETPREF ( ""http.upload"" , ""false"" , ""Enable file uploads to /up/<filename>"" )"	3370:1:115035:115108	748261	516	True				
ANR	754390	CallExpression	"SETPREF ( ""http.upload"" , ""false"" , ""Enable file uploads to /up/<filename>"" )"		748261	0					
ANR	754391	Callee	SETPREF		748261	0					
ANR	754392	Identifier	SETPREF		748261	0					
ANR	754393	ArgumentList	"""http.upload"""		748261	1					
ANR	754394	Argument	"""http.upload"""		748261	0					
ANR	754395	PrimaryExpression	"""http.upload"""		748261	0					
ANR	754396	Argument	"""false"""		748261	1					
ANR	754397	PrimaryExpression	"""false"""		748261	0					
ANR	754398	Argument	"""Enable file uploads to /up/<filename>"""		748261	2					
ANR	754399	PrimaryExpression	"""Enable file uploads to /up/<filename>"""		748261	0					
ANR	754400	ExpressionStatement	"SETPREF ( ""http.uri"" , """" , ""Address of HTTP proxy"" )"	3371:1:115111:115160	748261	517	True				
ANR	754401	CallExpression	"SETPREF ( ""http.uri"" , """" , ""Address of HTTP proxy"" )"		748261	0					
ANR	754402	Callee	SETPREF		748261	0					
ANR	754403	Identifier	SETPREF		748261	0					
ANR	754404	ArgumentList	"""http.uri"""		748261	1					
ANR	754405	Argument	"""http.uri"""		748261	0					
ANR	754406	PrimaryExpression	"""http.uri"""		748261	0					
ANR	754407	Argument	""""""		748261	1					
ANR	754408	PrimaryExpression	""""""		748261	0					
ANR	754409	Argument	"""Address of HTTP proxy"""		748261	2					
ANR	754410	PrimaryExpression	"""Address of HTTP proxy"""		748261	0					
ANR	754411	ExpressionStatement	"SETPREF ( ""http.auth"" , ""false"" , ""Enable/Disable HTTP Authentification"" )"	3372:1:115163:115233	748261	518	True				
ANR	754412	CallExpression	"SETPREF ( ""http.auth"" , ""false"" , ""Enable/Disable HTTP Authentification"" )"		748261	0					
ANR	754413	Callee	SETPREF		748261	0					
ANR	754414	Identifier	SETPREF		748261	0					
ANR	754415	ArgumentList	"""http.auth"""		748261	1					
ANR	754416	Argument	"""http.auth"""		748261	0					
ANR	754417	PrimaryExpression	"""http.auth"""		748261	0					
ANR	754418	Argument	"""false"""		748261	1					
ANR	754419	PrimaryExpression	"""false"""		748261	0					
ANR	754420	Argument	"""Enable/Disable HTTP Authentification"""		748261	2					
ANR	754421	PrimaryExpression	"""Enable/Disable HTTP Authentification"""		748261	0					
ANR	754422	ExpressionStatement	"SETPREF ( ""http.authtok"" , ""r2admin:r2admin"" , ""HTTP Authentification user:password token"" )"	3373:1:115236:115324	748261	519	True				
ANR	754423	CallExpression	"SETPREF ( ""http.authtok"" , ""r2admin:r2admin"" , ""HTTP Authentification user:password token"" )"		748261	0					
ANR	754424	Callee	SETPREF		748261	0					
ANR	754425	Identifier	SETPREF		748261	0					
ANR	754426	ArgumentList	"""http.authtok"""		748261	1					
ANR	754427	Argument	"""http.authtok"""		748261	0					
ANR	754428	PrimaryExpression	"""http.authtok"""		748261	0					
ANR	754429	Argument	"""r2admin:r2admin"""		748261	1					
ANR	754430	PrimaryExpression	"""r2admin:r2admin"""		748261	0					
ANR	754431	Argument	"""HTTP Authentification user:password token"""		748261	2					
ANR	754432	PrimaryExpression	"""HTTP Authentification user:password token"""		748261	0					
ANR	754433	ExpressionStatement	"p = r_sys_getenv ( ""R2_HTTP_AUTHFILE"" )"	3374:1:115327:115364	748261	520	True				
ANR	754434	AssignmentExpression	"p = r_sys_getenv ( ""R2_HTTP_AUTHFILE"" )"		748261	0		=			
ANR	754435	Identifier	p		748261	0					
ANR	754436	CallExpression	"r_sys_getenv ( ""R2_HTTP_AUTHFILE"" )"		748261	1					
ANR	754437	Callee	r_sys_getenv		748261	0					
ANR	754438	Identifier	r_sys_getenv		748261	0					
ANR	754439	ArgumentList	"""R2_HTTP_AUTHFILE"""		748261	1					
ANR	754440	Argument	"""R2_HTTP_AUTHFILE"""		748261	0					
ANR	754441	PrimaryExpression	"""R2_HTTP_AUTHFILE"""		748261	0					
ANR	754442	ExpressionStatement	"SETPREF ( ""http.authfile"" , p ? p : """" , ""HTTP Authentification user file"" )"	3375:1:115367:115438	748261	521	True				
ANR	754443	CallExpression	"SETPREF ( ""http.authfile"" , p ? p : """" , ""HTTP Authentification user file"" )"		748261	0					
ANR	754444	Callee	SETPREF		748261	0					
ANR	754445	Identifier	SETPREF		748261	0					
ANR	754446	ArgumentList	"""http.authfile"""		748261	1					
ANR	754447	Argument	"""http.authfile"""		748261	0					
ANR	754448	PrimaryExpression	"""http.authfile"""		748261	0					
ANR	754449	Argument	"p ? p : """""		748261	1					
ANR	754450	ConditionalExpression	"p ? p : """""		748261	0					
ANR	754451	Condition	p		748261	0					
ANR	754452	Identifier	p		748261	0					
ANR	754453	Identifier	p		748261	1					
ANR	754454	PrimaryExpression	""""""		748261	2					
ANR	754455	Argument	"""HTTP Authentification user file"""		748261	2					
ANR	754456	PrimaryExpression	"""HTTP Authentification user file"""		748261	0					
ANR	754457	ExpressionStatement	tmpdir = r_file_tmpdir ( )	3376:1:115441:115466	748261	522	True				
ANR	754458	AssignmentExpression	tmpdir = r_file_tmpdir ( )		748261	0		=			
ANR	754459	Identifier	tmpdir		748261	0					
ANR	754460	CallExpression	r_file_tmpdir ( )		748261	1					
ANR	754461	Callee	r_file_tmpdir		748261	0					
ANR	754462	Identifier	r_file_tmpdir		748261	0					
ANR	754463	ArgumentList			748261	1					
ANR	754464	ExpressionStatement	"r_config_set ( cfg , ""http.uproot"" , tmpdir )"	3377:1:115469:115510	748261	523	True				
ANR	754465	CallExpression	"r_config_set ( cfg , ""http.uproot"" , tmpdir )"		748261	0					
ANR	754466	Callee	r_config_set		748261	0					
ANR	754467	Identifier	r_config_set		748261	0					
ANR	754468	ArgumentList	cfg		748261	1					
ANR	754469	Argument	cfg		748261	0					
ANR	754470	Identifier	cfg		748261	0					
ANR	754471	Argument	"""http.uproot"""		748261	1					
ANR	754472	PrimaryExpression	"""http.uproot"""		748261	0					
ANR	754473	Argument	tmpdir		748261	2					
ANR	754474	Identifier	tmpdir		748261	0					
ANR	754475	ExpressionStatement	free ( tmpdir )	3378:1:115513:115526	748261	524	True				
ANR	754476	CallExpression	free ( tmpdir )		748261	0					
ANR	754477	Callee	free		748261	0					
ANR	754478	Identifier	free		748261	0					
ANR	754479	ArgumentList	tmpdir		748261	1					
ANR	754480	Argument	tmpdir		748261	0					
ANR	754481	Identifier	tmpdir		748261	0					
ANR	754482	ExpressionStatement	"r_config_desc ( cfg , ""http.uproot"" , ""Path where files are uploaded"" )"	3379:1:115529:115596	748261	525	True				
ANR	754483	CallExpression	"r_config_desc ( cfg , ""http.uproot"" , ""Path where files are uploaded"" )"		748261	0					
ANR	754484	Callee	r_config_desc		748261	0					
ANR	754485	Identifier	r_config_desc		748261	0					
ANR	754486	ArgumentList	cfg		748261	1					
ANR	754487	Argument	cfg		748261	0					
ANR	754488	Identifier	cfg		748261	0					
ANR	754489	Argument	"""http.uproot"""		748261	1					
ANR	754490	PrimaryExpression	"""http.uproot"""		748261	0					
ANR	754491	Argument	"""Path where files are uploaded"""		748261	2					
ANR	754492	PrimaryExpression	"""Path where files are uploaded"""		748261	0					
ANR	754493	ExpressionStatement	"SETPREF ( ""tcp.islocal"" , ""false"" , ""Bind a loopback for tcp command server"" )"	3382:1:115611:115685	748261	526	True				
ANR	754494	CallExpression	"SETPREF ( ""tcp.islocal"" , ""false"" , ""Bind a loopback for tcp command server"" )"		748261	0					
ANR	754495	Callee	SETPREF		748261	0					
ANR	754496	Identifier	SETPREF		748261	0					
ANR	754497	ArgumentList	"""tcp.islocal"""		748261	1					
ANR	754498	Argument	"""tcp.islocal"""		748261	0					
ANR	754499	PrimaryExpression	"""tcp.islocal"""		748261	0					
ANR	754500	Argument	"""false"""		748261	1					
ANR	754501	PrimaryExpression	"""false"""		748261	0					
ANR	754502	Argument	"""Bind a loopback for tcp command server"""		748261	2					
ANR	754503	PrimaryExpression	"""Bind a loopback for tcp command server"""		748261	0					
ANR	754504	ExpressionStatement	"SETPREF ( ""graph.trace"" , ""false"" , ""Fold all non-traced basic blocks"" )"	3385:1:115702:115770	748261	527	True				
ANR	754505	CallExpression	"SETPREF ( ""graph.trace"" , ""false"" , ""Fold all non-traced basic blocks"" )"		748261	0					
ANR	754506	Callee	SETPREF		748261	0					
ANR	754507	Identifier	SETPREF		748261	0					
ANR	754508	ArgumentList	"""graph.trace"""		748261	1					
ANR	754509	Argument	"""graph.trace"""		748261	0					
ANR	754510	PrimaryExpression	"""graph.trace"""		748261	0					
ANR	754511	Argument	"""false"""		748261	1					
ANR	754512	PrimaryExpression	"""false"""		748261	0					
ANR	754513	Argument	"""Fold all non-traced basic blocks"""		748261	2					
ANR	754514	PrimaryExpression	"""Fold all non-traced basic blocks"""		748261	0					
ANR	754515	ExpressionStatement	"SETPREF ( ""graph.dummy"" , ""true"" , ""Create dummy nodes in the graph for better layout (20% slower)"" )"	3386:1:115773:115870	748261	528	True				
ANR	754516	CallExpression	"SETPREF ( ""graph.dummy"" , ""true"" , ""Create dummy nodes in the graph for better layout (20% slower)"" )"		748261	0					
ANR	754517	Callee	SETPREF		748261	0					
ANR	754518	Identifier	SETPREF		748261	0					
ANR	754519	ArgumentList	"""graph.dummy"""		748261	1					
ANR	754520	Argument	"""graph.dummy"""		748261	0					
ANR	754521	PrimaryExpression	"""graph.dummy"""		748261	0					
ANR	754522	Argument	"""true"""		748261	1					
ANR	754523	PrimaryExpression	"""true"""		748261	0					
ANR	754524	Argument	"""Create dummy nodes in the graph for better layout (20% slower)"""		748261	2					
ANR	754525	PrimaryExpression	"""Create dummy nodes in the graph for better layout (20% slower)"""		748261	0					
ANR	754526	ExpressionStatement	"SETPREF ( ""graph.few"" , ""false"" , ""Show few basic blocks in the graph"" )"	3387:1:115873:115941	748261	529	True				
ANR	754527	CallExpression	"SETPREF ( ""graph.few"" , ""false"" , ""Show few basic blocks in the graph"" )"		748261	0					
ANR	754528	Callee	SETPREF		748261	0					
ANR	754529	Identifier	SETPREF		748261	0					
ANR	754530	ArgumentList	"""graph.few"""		748261	1					
ANR	754531	Argument	"""graph.few"""		748261	0					
ANR	754532	PrimaryExpression	"""graph.few"""		748261	0					
ANR	754533	Argument	"""false"""		748261	1					
ANR	754534	PrimaryExpression	"""false"""		748261	0					
ANR	754535	Argument	"""Show few basic blocks in the graph"""		748261	2					
ANR	754536	PrimaryExpression	"""Show few basic blocks in the graph"""		748261	0					
ANR	754537	ExpressionStatement	"SETPREF ( ""graph.comments"" , ""true"" , ""Show disasm comments in graph"" )"	3388:1:115944:116011	748261	530	True				
ANR	754538	CallExpression	"SETPREF ( ""graph.comments"" , ""true"" , ""Show disasm comments in graph"" )"		748261	0					
ANR	754539	Callee	SETPREF		748261	0					
ANR	754540	Identifier	SETPREF		748261	0					
ANR	754541	ArgumentList	"""graph.comments"""		748261	1					
ANR	754542	Argument	"""graph.comments"""		748261	0					
ANR	754543	PrimaryExpression	"""graph.comments"""		748261	0					
ANR	754544	Argument	"""true"""		748261	1					
ANR	754545	PrimaryExpression	"""true"""		748261	0					
ANR	754546	Argument	"""Show disasm comments in graph"""		748261	2					
ANR	754547	PrimaryExpression	"""Show disasm comments in graph"""		748261	0					
ANR	754548	ExpressionStatement	"SETPREF ( ""graph.cmtright"" , ""false"" , ""Show comments at right"" )"	3389:1:116014:116075	748261	531	True				
ANR	754549	CallExpression	"SETPREF ( ""graph.cmtright"" , ""false"" , ""Show comments at right"" )"		748261	0					
ANR	754550	Callee	SETPREF		748261	0					
ANR	754551	Identifier	SETPREF		748261	0					
ANR	754552	ArgumentList	"""graph.cmtright"""		748261	1					
ANR	754553	Argument	"""graph.cmtright"""		748261	0					
ANR	754554	PrimaryExpression	"""graph.cmtright"""		748261	0					
ANR	754555	Argument	"""false"""		748261	1					
ANR	754556	PrimaryExpression	"""false"""		748261	0					
ANR	754557	Argument	"""Show comments at right"""		748261	2					
ANR	754558	PrimaryExpression	"""Show comments at right"""		748261	0					
ANR	754559	ExpressionStatement	"SETCB ( ""graph.gv.format"" , ""gif"" , & cb_graphformat , ""Graph image extension when using 'w' format (png, jpg, pdf, ps, svg, json)"" )"	3390:1:116078:116205	748261	532	True				
ANR	754560	CallExpression	"SETCB ( ""graph.gv.format"" , ""gif"" , & cb_graphformat , ""Graph image extension when using 'w' format (png, jpg, pdf, ps, svg, json)"" )"		748261	0					
ANR	754561	Callee	SETCB		748261	0					
ANR	754562	Identifier	SETCB		748261	0					
ANR	754563	ArgumentList	"""graph.gv.format"""		748261	1					
ANR	754564	Argument	"""graph.gv.format"""		748261	0					
ANR	754565	PrimaryExpression	"""graph.gv.format"""		748261	0					
ANR	754566	Argument	"""gif"""		748261	1					
ANR	754567	PrimaryExpression	"""gif"""		748261	0					
ANR	754568	Argument	& cb_graphformat		748261	2					
ANR	754569	UnaryOperationExpression	& cb_graphformat		748261	0					
ANR	754570	UnaryOperator	&		748261	0					
ANR	754571	Identifier	cb_graphformat		748261	1					
ANR	754572	Argument	"""Graph image extension when using 'w' format (png, jpg, pdf, ps, svg, json)"""		748261	3					
ANR	754573	PrimaryExpression	"""Graph image extension when using 'w' format (png, jpg, pdf, ps, svg, json)"""		748261	0					
ANR	754574	ExpressionStatement	"SETPREF ( ""graph.refs"" , ""false"" , ""Graph references in callgraphs (.agc*;aggi)"" )"	3391:1:116208:116286	748261	533	True				
ANR	754575	CallExpression	"SETPREF ( ""graph.refs"" , ""false"" , ""Graph references in callgraphs (.agc*;aggi)"" )"		748261	0					
ANR	754576	Callee	SETPREF		748261	0					
ANR	754577	Identifier	SETPREF		748261	0					
ANR	754578	ArgumentList	"""graph.refs"""		748261	1					
ANR	754579	Argument	"""graph.refs"""		748261	0					
ANR	754580	PrimaryExpression	"""graph.refs"""		748261	0					
ANR	754581	Argument	"""false"""		748261	1					
ANR	754582	PrimaryExpression	"""false"""		748261	0					
ANR	754583	Argument	"""Graph references in callgraphs (.agc*;aggi)"""		748261	2					
ANR	754584	PrimaryExpression	"""Graph references in callgraphs (.agc*;aggi)"""		748261	0					
ANR	754585	ExpressionStatement	"SETPREF ( ""graph.json.usenames"" , ""true"" , ""Use names instead of addresses in Global Call Graph (agCj)"" )"	3392:1:116289:116390	748261	534	True				
ANR	754586	CallExpression	"SETPREF ( ""graph.json.usenames"" , ""true"" , ""Use names instead of addresses in Global Call Graph (agCj)"" )"		748261	0					
ANR	754587	Callee	SETPREF		748261	0					
ANR	754588	Identifier	SETPREF		748261	0					
ANR	754589	ArgumentList	"""graph.json.usenames"""		748261	1					
ANR	754590	Argument	"""graph.json.usenames"""		748261	0					
ANR	754591	PrimaryExpression	"""graph.json.usenames"""		748261	0					
ANR	754592	Argument	"""true"""		748261	1					
ANR	754593	PrimaryExpression	"""true"""		748261	0					
ANR	754594	Argument	"""Use names instead of addresses in Global Call Graph (agCj)"""		748261	2					
ANR	754595	PrimaryExpression	"""Use names instead of addresses in Global Call Graph (agCj)"""		748261	0					
ANR	754596	ExpressionStatement	"SETI ( ""graph.edges"" , 2 , ""0=no edges, 1=simple edges, 2=avoid collisions"" )"	3393:1:116393:116466	748261	535	True				
ANR	754597	CallExpression	"SETI ( ""graph.edges"" , 2 , ""0=no edges, 1=simple edges, 2=avoid collisions"" )"		748261	0					
ANR	754598	Callee	SETI		748261	0					
ANR	754599	Identifier	SETI		748261	0					
ANR	754600	ArgumentList	"""graph.edges"""		748261	1					
ANR	754601	Argument	"""graph.edges"""		748261	0					
ANR	754602	PrimaryExpression	"""graph.edges"""		748261	0					
ANR	754603	Argument	2		748261	1					
ANR	754604	PrimaryExpression	2		748261	0					
ANR	754605	Argument	"""0=no edges, 1=simple edges, 2=avoid collisions"""		748261	2					
ANR	754606	PrimaryExpression	"""0=no edges, 1=simple edges, 2=avoid collisions"""		748261	0					
ANR	754607	ExpressionStatement	"SETI ( ""graph.layout"" , 0 , ""Graph layout (0=vertical, 1=horizontal)"" )"	3394:1:116469:116536	748261	536	True				
ANR	754608	CallExpression	"SETI ( ""graph.layout"" , 0 , ""Graph layout (0=vertical, 1=horizontal)"" )"		748261	0					
ANR	754609	Callee	SETI		748261	0					
ANR	754610	Identifier	SETI		748261	0					
ANR	754611	ArgumentList	"""graph.layout"""		748261	1					
ANR	754612	Argument	"""graph.layout"""		748261	0					
ANR	754613	PrimaryExpression	"""graph.layout"""		748261	0					
ANR	754614	Argument	0		748261	1					
ANR	754615	PrimaryExpression	0		748261	0					
ANR	754616	Argument	"""Graph layout (0=vertical, 1=horizontal)"""		748261	2					
ANR	754617	PrimaryExpression	"""Graph layout (0=vertical, 1=horizontal)"""		748261	0					
ANR	754618	ExpressionStatement	"SETI ( ""graph.linemode"" , 1 , ""Graph edges (0=diagonal, 1=square)"" )"	3395:1:116539:116603	748261	537	True				
ANR	754619	CallExpression	"SETI ( ""graph.linemode"" , 1 , ""Graph edges (0=diagonal, 1=square)"" )"		748261	0					
ANR	754620	Callee	SETI		748261	0					
ANR	754621	Identifier	SETI		748261	0					
ANR	754622	ArgumentList	"""graph.linemode"""		748261	1					
ANR	754623	Argument	"""graph.linemode"""		748261	0					
ANR	754624	PrimaryExpression	"""graph.linemode"""		748261	0					
ANR	754625	Argument	1		748261	1					
ANR	754626	PrimaryExpression	1		748261	0					
ANR	754627	Argument	"""Graph edges (0=diagonal, 1=square)"""		748261	2					
ANR	754628	PrimaryExpression	"""Graph edges (0=diagonal, 1=square)"""		748261	0					
ANR	754629	ExpressionStatement	"SETPREF ( ""graph.font"" , ""Courier"" , ""Font for dot graphs"" )"	3396:1:116606:116662	748261	538	True				
ANR	754630	CallExpression	"SETPREF ( ""graph.font"" , ""Courier"" , ""Font for dot graphs"" )"		748261	0					
ANR	754631	Callee	SETPREF		748261	0					
ANR	754632	Identifier	SETPREF		748261	0					
ANR	754633	ArgumentList	"""graph.font"""		748261	1					
ANR	754634	Argument	"""graph.font"""		748261	0					
ANR	754635	PrimaryExpression	"""graph.font"""		748261	0					
ANR	754636	Argument	"""Courier"""		748261	1					
ANR	754637	PrimaryExpression	"""Courier"""		748261	0					
ANR	754638	Argument	"""Font for dot graphs"""		748261	2					
ANR	754639	PrimaryExpression	"""Font for dot graphs"""		748261	0					
ANR	754640	ExpressionStatement	"SETPREF ( ""graph.offset"" , ""false"" , ""Show offsets in graphs"" )"	3397:1:116665:116724	748261	539	True				
ANR	754641	CallExpression	"SETPREF ( ""graph.offset"" , ""false"" , ""Show offsets in graphs"" )"		748261	0					
ANR	754642	Callee	SETPREF		748261	0					
ANR	754643	Identifier	SETPREF		748261	0					
ANR	754644	ArgumentList	"""graph.offset"""		748261	1					
ANR	754645	Argument	"""graph.offset"""		748261	0					
ANR	754646	PrimaryExpression	"""graph.offset"""		748261	0					
ANR	754647	Argument	"""false"""		748261	1					
ANR	754648	PrimaryExpression	"""false"""		748261	0					
ANR	754649	Argument	"""Show offsets in graphs"""		748261	2					
ANR	754650	PrimaryExpression	"""Show offsets in graphs"""		748261	0					
ANR	754651	ExpressionStatement	"SETPREF ( ""graph.bytes"" , ""false"" , ""Show opcode bytes in graphs"" )"	3398:1:116727:116790	748261	540	True				
ANR	754652	CallExpression	"SETPREF ( ""graph.bytes"" , ""false"" , ""Show opcode bytes in graphs"" )"		748261	0					
ANR	754653	Callee	SETPREF		748261	0					
ANR	754654	Identifier	SETPREF		748261	0					
ANR	754655	ArgumentList	"""graph.bytes"""		748261	1					
ANR	754656	Argument	"""graph.bytes"""		748261	0					
ANR	754657	PrimaryExpression	"""graph.bytes"""		748261	0					
ANR	754658	Argument	"""false"""		748261	1					
ANR	754659	PrimaryExpression	"""false"""		748261	0					
ANR	754660	Argument	"""Show opcode bytes in graphs"""		748261	2					
ANR	754661	PrimaryExpression	"""Show opcode bytes in graphs"""		748261	0					
ANR	754662	ExpressionStatement	"SETPREF ( ""graph.web"" , ""false"" , ""Display graph in web browser (VV)"" )"	3399:1:116793:116860	748261	541	True				
ANR	754663	CallExpression	"SETPREF ( ""graph.web"" , ""false"" , ""Display graph in web browser (VV)"" )"		748261	0					
ANR	754664	Callee	SETPREF		748261	0					
ANR	754665	Identifier	SETPREF		748261	0					
ANR	754666	ArgumentList	"""graph.web"""		748261	1					
ANR	754667	Argument	"""graph.web"""		748261	0					
ANR	754668	PrimaryExpression	"""graph.web"""		748261	0					
ANR	754669	Argument	"""false"""		748261	1					
ANR	754670	PrimaryExpression	"""false"""		748261	0					
ANR	754671	Argument	"""Display graph in web browser (VV)"""		748261	2					
ANR	754672	PrimaryExpression	"""Display graph in web browser (VV)"""		748261	0					
ANR	754673	ExpressionStatement	"SETI ( ""graph.from"" , UT64_MAX , ""Lower bound address when drawing global graphs"" )"	3400:1:116863:116942	748261	542	True				
ANR	754674	CallExpression	"SETI ( ""graph.from"" , UT64_MAX , ""Lower bound address when drawing global graphs"" )"		748261	0					
ANR	754675	Callee	SETI		748261	0					
ANR	754676	Identifier	SETI		748261	0					
ANR	754677	ArgumentList	"""graph.from"""		748261	1					
ANR	754678	Argument	"""graph.from"""		748261	0					
ANR	754679	PrimaryExpression	"""graph.from"""		748261	0					
ANR	754680	Argument	UT64_MAX		748261	1					
ANR	754681	Identifier	UT64_MAX		748261	0					
ANR	754682	Argument	"""Lower bound address when drawing global graphs"""		748261	2					
ANR	754683	PrimaryExpression	"""Lower bound address when drawing global graphs"""		748261	0					
ANR	754684	ExpressionStatement	"SETI ( ""graph.to"" , UT64_MAX , ""Upper bound address when drawing global graphs"" )"	3401:1:116945:117022	748261	543	True				
ANR	754685	CallExpression	"SETI ( ""graph.to"" , UT64_MAX , ""Upper bound address when drawing global graphs"" )"		748261	0					
ANR	754686	Callee	SETI		748261	0					
ANR	754687	Identifier	SETI		748261	0					
ANR	754688	ArgumentList	"""graph.to"""		748261	1					
ANR	754689	Argument	"""graph.to"""		748261	0					
ANR	754690	PrimaryExpression	"""graph.to"""		748261	0					
ANR	754691	Argument	UT64_MAX		748261	1					
ANR	754692	Identifier	UT64_MAX		748261	0					
ANR	754693	Argument	"""Upper bound address when drawing global graphs"""		748261	2					
ANR	754694	PrimaryExpression	"""Upper bound address when drawing global graphs"""		748261	0					
ANR	754695	ExpressionStatement	"SETI ( ""graph.scroll"" , 5 , ""Scroll speed in ascii-art graph"" )"	3402:1:117025:117084	748261	544	True				
ANR	754696	CallExpression	"SETI ( ""graph.scroll"" , 5 , ""Scroll speed in ascii-art graph"" )"		748261	0					
ANR	754697	Callee	SETI		748261	0					
ANR	754698	Identifier	SETI		748261	0					
ANR	754699	ArgumentList	"""graph.scroll"""		748261	1					
ANR	754700	Argument	"""graph.scroll"""		748261	0					
ANR	754701	PrimaryExpression	"""graph.scroll"""		748261	0					
ANR	754702	Argument	5		748261	1					
ANR	754703	PrimaryExpression	5		748261	0					
ANR	754704	Argument	"""Scroll speed in ascii-art graph"""		748261	2					
ANR	754705	PrimaryExpression	"""Scroll speed in ascii-art graph"""		748261	0					
ANR	754706	ExpressionStatement	"SETPREF ( ""graph.invscroll"" , ""false"" , ""Invert scroll direction in ascii-art graph"" )"	3403:1:117087:117169	748261	545	True				
ANR	754707	CallExpression	"SETPREF ( ""graph.invscroll"" , ""false"" , ""Invert scroll direction in ascii-art graph"" )"		748261	0					
ANR	754708	Callee	SETPREF		748261	0					
ANR	754709	Identifier	SETPREF		748261	0					
ANR	754710	ArgumentList	"""graph.invscroll"""		748261	1					
ANR	754711	Argument	"""graph.invscroll"""		748261	0					
ANR	754712	PrimaryExpression	"""graph.invscroll"""		748261	0					
ANR	754713	Argument	"""false"""		748261	1					
ANR	754714	PrimaryExpression	"""false"""		748261	0					
ANR	754715	Argument	"""Invert scroll direction in ascii-art graph"""		748261	2					
ANR	754716	PrimaryExpression	"""Invert scroll direction in ascii-art graph"""		748261	0					
ANR	754717	ExpressionStatement	"SETPREF ( ""graph.title"" , """" , ""Title of the graph"" )"	3404:1:117172:117221	748261	546	True				
ANR	754718	CallExpression	"SETPREF ( ""graph.title"" , """" , ""Title of the graph"" )"		748261	0					
ANR	754719	Callee	SETPREF		748261	0					
ANR	754720	Identifier	SETPREF		748261	0					
ANR	754721	ArgumentList	"""graph.title"""		748261	1					
ANR	754722	Argument	"""graph.title"""		748261	0					
ANR	754723	PrimaryExpression	"""graph.title"""		748261	0					
ANR	754724	Argument	""""""		748261	1					
ANR	754725	PrimaryExpression	""""""		748261	0					
ANR	754726	Argument	"""Title of the graph"""		748261	2					
ANR	754727	PrimaryExpression	"""Title of the graph"""		748261	0					
ANR	754728	ExpressionStatement	"SETPREF ( ""graph.body"" , ""true"" , ""Show body of the nodes in the graph"" )"	3405:1:117224:117293	748261	547	True				
ANR	754729	CallExpression	"SETPREF ( ""graph.body"" , ""true"" , ""Show body of the nodes in the graph"" )"		748261	0					
ANR	754730	Callee	SETPREF		748261	0					
ANR	754731	Identifier	SETPREF		748261	0					
ANR	754732	ArgumentList	"""graph.body"""		748261	1					
ANR	754733	Argument	"""graph.body"""		748261	0					
ANR	754734	PrimaryExpression	"""graph.body"""		748261	0					
ANR	754735	Argument	"""true"""		748261	1					
ANR	754736	PrimaryExpression	"""true"""		748261	0					
ANR	754737	Argument	"""Show body of the nodes in the graph"""		748261	2					
ANR	754738	PrimaryExpression	"""Show body of the nodes in the graph"""		748261	0					
ANR	754739	ExpressionStatement	"SETPREF ( ""graph.bubble"" , ""false"" , ""Show nodes as bubbles"" )"	3406:1:117296:117354	748261	548	True				
ANR	754740	CallExpression	"SETPREF ( ""graph.bubble"" , ""false"" , ""Show nodes as bubbles"" )"		748261	0					
ANR	754741	Callee	SETPREF		748261	0					
ANR	754742	Identifier	SETPREF		748261	0					
ANR	754743	ArgumentList	"""graph.bubble"""		748261	1					
ANR	754744	Argument	"""graph.bubble"""		748261	0					
ANR	754745	PrimaryExpression	"""graph.bubble"""		748261	0					
ANR	754746	Argument	"""false"""		748261	1					
ANR	754747	PrimaryExpression	"""false"""		748261	0					
ANR	754748	Argument	"""Show nodes as bubbles"""		748261	2					
ANR	754749	PrimaryExpression	"""Show nodes as bubbles"""		748261	0					
ANR	754750	ExpressionStatement	"SETPREF ( ""graph.ntitles"" , ""true"" , ""Display title of node"" )"	3407:1:117357:117415	748261	549	True				
ANR	754751	CallExpression	"SETPREF ( ""graph.ntitles"" , ""true"" , ""Display title of node"" )"		748261	0					
ANR	754752	Callee	SETPREF		748261	0					
ANR	754753	Identifier	SETPREF		748261	0					
ANR	754754	ArgumentList	"""graph.ntitles"""		748261	1					
ANR	754755	Argument	"""graph.ntitles"""		748261	0					
ANR	754756	PrimaryExpression	"""graph.ntitles"""		748261	0					
ANR	754757	Argument	"""true"""		748261	1					
ANR	754758	PrimaryExpression	"""true"""		748261	0					
ANR	754759	Argument	"""Display title of node"""		748261	2					
ANR	754760	PrimaryExpression	"""Display title of node"""		748261	0					
ANR	754761	ExpressionStatement	"SETPREF ( ""graph.gv.node"" , """" , ""Graphviz node style. (color=gray, style=filled shape=box)"" )"	3408:1:117418:117508	748261	550	True				
ANR	754762	CallExpression	"SETPREF ( ""graph.gv.node"" , """" , ""Graphviz node style. (color=gray, style=filled shape=box)"" )"		748261	0					
ANR	754763	Callee	SETPREF		748261	0					
ANR	754764	Identifier	SETPREF		748261	0					
ANR	754765	ArgumentList	"""graph.gv.node"""		748261	1					
ANR	754766	Argument	"""graph.gv.node"""		748261	0					
ANR	754767	PrimaryExpression	"""graph.gv.node"""		748261	0					
ANR	754768	Argument	""""""		748261	1					
ANR	754769	PrimaryExpression	""""""		748261	0					
ANR	754770	Argument	"""Graphviz node style. (color=gray, style=filled shape=box)"""		748261	2					
ANR	754771	PrimaryExpression	"""Graphviz node style. (color=gray, style=filled shape=box)"""		748261	0					
ANR	754772	ExpressionStatement	"SETPREF ( ""graph.gv.edge"" , """" , ""Graphviz edge style. (arrowhead=\\""vee\\"")"" )"	3409:1:117511:117584	748261	551	True				
ANR	754773	CallExpression	"SETPREF ( ""graph.gv.edge"" , """" , ""Graphviz edge style. (arrowhead=\\""vee\\"")"" )"		748261	0					
ANR	754774	Callee	SETPREF		748261	0					
ANR	754775	Identifier	SETPREF		748261	0					
ANR	754776	ArgumentList	"""graph.gv.edge"""		748261	1					
ANR	754777	Argument	"""graph.gv.edge"""		748261	0					
ANR	754778	PrimaryExpression	"""graph.gv.edge"""		748261	0					
ANR	754779	Argument	""""""		748261	1					
ANR	754780	PrimaryExpression	""""""		748261	0					
ANR	754781	Argument	"""Graphviz edge style. (arrowhead=\\""vee\\"")"""		748261	2					
ANR	754782	PrimaryExpression	"""Graphviz edge style. (arrowhead=\\""vee\\"")"""		748261	0					
ANR	754783	ExpressionStatement	"SETPREF ( ""graph.gv.spline"" , """" , ""Graphviz spline style. (splines=\\""ortho\\"")"" )"	3410:1:117587:117664	748261	552	True				
ANR	754784	CallExpression	"SETPREF ( ""graph.gv.spline"" , """" , ""Graphviz spline style. (splines=\\""ortho\\"")"" )"		748261	0					
ANR	754785	Callee	SETPREF		748261	0					
ANR	754786	Identifier	SETPREF		748261	0					
ANR	754787	ArgumentList	"""graph.gv.spline"""		748261	1					
ANR	754788	Argument	"""graph.gv.spline"""		748261	0					
ANR	754789	PrimaryExpression	"""graph.gv.spline"""		748261	0					
ANR	754790	Argument	""""""		748261	1					
ANR	754791	PrimaryExpression	""""""		748261	0					
ANR	754792	Argument	"""Graphviz spline style. (splines=\\""ortho\\"")"""		748261	2					
ANR	754793	PrimaryExpression	"""Graphviz spline style. (splines=\\""ortho\\"")"""		748261	0					
ANR	754794	ExpressionStatement	"SETPREF ( ""graph.gv.graph"" , """" , ""Graphviz global style attributes. (bgcolor=white)"" )"	3411:1:117667:117750	748261	553	True				
ANR	754795	CallExpression	"SETPREF ( ""graph.gv.graph"" , """" , ""Graphviz global style attributes. (bgcolor=white)"" )"		748261	0					
ANR	754796	Callee	SETPREF		748261	0					
ANR	754797	Identifier	SETPREF		748261	0					
ANR	754798	ArgumentList	"""graph.gv.graph"""		748261	1					
ANR	754799	Argument	"""graph.gv.graph"""		748261	0					
ANR	754800	PrimaryExpression	"""graph.gv.graph"""		748261	0					
ANR	754801	Argument	""""""		748261	1					
ANR	754802	PrimaryExpression	""""""		748261	0					
ANR	754803	Argument	"""Graphviz global style attributes. (bgcolor=white)"""		748261	2					
ANR	754804	PrimaryExpression	"""Graphviz global style attributes. (bgcolor=white)"""		748261	0					
ANR	754805	ExpressionStatement	"SETPREF ( ""graph.gv.current"" , ""false"" , ""Highlight the current node in graphviz graph."" )"	3412:1:117753:117839	748261	554	True				
ANR	754806	CallExpression	"SETPREF ( ""graph.gv.current"" , ""false"" , ""Highlight the current node in graphviz graph."" )"		748261	0					
ANR	754807	Callee	SETPREF		748261	0					
ANR	754808	Identifier	SETPREF		748261	0					
ANR	754809	ArgumentList	"""graph.gv.current"""		748261	1					
ANR	754810	Argument	"""graph.gv.current"""		748261	0					
ANR	754811	PrimaryExpression	"""graph.gv.current"""		748261	0					
ANR	754812	Argument	"""false"""		748261	1					
ANR	754813	PrimaryExpression	"""false"""		748261	0					
ANR	754814	Argument	"""Highlight the current node in graphviz graph."""		748261	2					
ANR	754815	PrimaryExpression	"""Highlight the current node in graphviz graph."""		748261	0					
ANR	754816	ExpressionStatement	"SETPREF ( ""graph.nodejmps"" , ""true"" , ""Enables shortcuts for every node."" )"	3413:1:117842:117913	748261	555	True				
ANR	754817	CallExpression	"SETPREF ( ""graph.nodejmps"" , ""true"" , ""Enables shortcuts for every node."" )"		748261	0					
ANR	754818	Callee	SETPREF		748261	0					
ANR	754819	Identifier	SETPREF		748261	0					
ANR	754820	ArgumentList	"""graph.nodejmps"""		748261	1					
ANR	754821	Argument	"""graph.nodejmps"""		748261	0					
ANR	754822	PrimaryExpression	"""graph.nodejmps"""		748261	0					
ANR	754823	Argument	"""true"""		748261	1					
ANR	754824	PrimaryExpression	"""true"""		748261	0					
ANR	754825	Argument	"""Enables shortcuts for every node."""		748261	2					
ANR	754826	PrimaryExpression	"""Enables shortcuts for every node."""		748261	0					
ANR	754827	ExpressionStatement	"SETPREF ( ""graph.hints"" , ""true"" , ""Show true (t) and false (f) hints for conditional edges in graph"" )"	3414:1:117916:118015	748261	556	True				
ANR	754828	CallExpression	"SETPREF ( ""graph.hints"" , ""true"" , ""Show true (t) and false (f) hints for conditional edges in graph"" )"		748261	0					
ANR	754829	Callee	SETPREF		748261	0					
ANR	754830	Identifier	SETPREF		748261	0					
ANR	754831	ArgumentList	"""graph.hints"""		748261	1					
ANR	754832	Argument	"""graph.hints"""		748261	0					
ANR	754833	PrimaryExpression	"""graph.hints"""		748261	0					
ANR	754834	Argument	"""true"""		748261	1					
ANR	754835	PrimaryExpression	"""true"""		748261	0					
ANR	754836	Argument	"""Show true (t) and false (f) hints for conditional edges in graph"""		748261	2					
ANR	754837	PrimaryExpression	"""Show true (t) and false (f) hints for conditional edges in graph"""		748261	0					
ANR	754838	ExpressionStatement	"SETCB ( ""graph.dotted"" , ""false"" , & cb_dotted , ""Dotted lines for conditional jumps in graph"" )"	3415:1:118018:118108	748261	557	True				
ANR	754839	CallExpression	"SETCB ( ""graph.dotted"" , ""false"" , & cb_dotted , ""Dotted lines for conditional jumps in graph"" )"		748261	0					
ANR	754840	Callee	SETCB		748261	0					
ANR	754841	Identifier	SETCB		748261	0					
ANR	754842	ArgumentList	"""graph.dotted"""		748261	1					
ANR	754843	Argument	"""graph.dotted"""		748261	0					
ANR	754844	PrimaryExpression	"""graph.dotted"""		748261	0					
ANR	754845	Argument	"""false"""		748261	1					
ANR	754846	PrimaryExpression	"""false"""		748261	0					
ANR	754847	Argument	& cb_dotted		748261	2					
ANR	754848	UnaryOperationExpression	& cb_dotted		748261	0					
ANR	754849	UnaryOperator	&		748261	0					
ANR	754850	Identifier	cb_dotted		748261	1					
ANR	754851	Argument	"""Dotted lines for conditional jumps in graph"""		748261	3					
ANR	754852	PrimaryExpression	"""Dotted lines for conditional jumps in graph"""		748261	0					
ANR	754853	ExpressionStatement	"SETPREF ( ""hud.path"" , """" , ""Set a custom path for the HUD file"" )"	3418:1:118123:118185	748261	558	True				
ANR	754854	CallExpression	"SETPREF ( ""hud.path"" , """" , ""Set a custom path for the HUD file"" )"		748261	0					
ANR	754855	Callee	SETPREF		748261	0					
ANR	754856	Identifier	SETPREF		748261	0					
ANR	754857	ArgumentList	"""hud.path"""		748261	1					
ANR	754858	Argument	"""hud.path"""		748261	0					
ANR	754859	PrimaryExpression	"""hud.path"""		748261	0					
ANR	754860	Argument	""""""		748261	1					
ANR	754861	PrimaryExpression	""""""		748261	0					
ANR	754862	Argument	"""Set a custom path for the HUD file"""		748261	2					
ANR	754863	PrimaryExpression	"""Set a custom path for the HUD file"""		748261	0					
ANR	754864	ExpressionStatement	"SETCB ( ""esil.exectrap"" , ""false"" , & cb_exectrap , ""trap when executing code in non-executable memory"" )"	3420:1:118189:118288	748261	559	True				
ANR	754865	CallExpression	"SETCB ( ""esil.exectrap"" , ""false"" , & cb_exectrap , ""trap when executing code in non-executable memory"" )"		748261	0					
ANR	754866	Callee	SETCB		748261	0					
ANR	754867	Identifier	SETCB		748261	0					
ANR	754868	ArgumentList	"""esil.exectrap"""		748261	1					
ANR	754869	Argument	"""esil.exectrap"""		748261	0					
ANR	754870	PrimaryExpression	"""esil.exectrap"""		748261	0					
ANR	754871	Argument	"""false"""		748261	1					
ANR	754872	PrimaryExpression	"""false"""		748261	0					
ANR	754873	Argument	& cb_exectrap		748261	2					
ANR	754874	UnaryOperationExpression	& cb_exectrap		748261	0					
ANR	754875	UnaryOperator	&		748261	0					
ANR	754876	Identifier	cb_exectrap		748261	1					
ANR	754877	Argument	"""trap when executing code in non-executable memory"""		748261	3					
ANR	754878	PrimaryExpression	"""trap when executing code in non-executable memory"""		748261	0					
ANR	754879	ExpressionStatement	"SETCB ( ""esil.iotrap"" , ""true"" , & cb_iotrap , ""invalid read or writes produce a trap exception"" )"	3421:1:118291:118383	748261	560	True				
ANR	754880	CallExpression	"SETCB ( ""esil.iotrap"" , ""true"" , & cb_iotrap , ""invalid read or writes produce a trap exception"" )"		748261	0					
ANR	754881	Callee	SETCB		748261	0					
ANR	754882	Identifier	SETCB		748261	0					
ANR	754883	ArgumentList	"""esil.iotrap"""		748261	1					
ANR	754884	Argument	"""esil.iotrap"""		748261	0					
ANR	754885	PrimaryExpression	"""esil.iotrap"""		748261	0					
ANR	754886	Argument	"""true"""		748261	1					
ANR	754887	PrimaryExpression	"""true"""		748261	0					
ANR	754888	Argument	& cb_iotrap		748261	2					
ANR	754889	UnaryOperationExpression	& cb_iotrap		748261	0					
ANR	754890	UnaryOperator	&		748261	0					
ANR	754891	Identifier	cb_iotrap		748261	1					
ANR	754892	Argument	"""invalid read or writes produce a trap exception"""		748261	3					
ANR	754893	PrimaryExpression	"""invalid read or writes produce a trap exception"""		748261	0					
ANR	754894	ExpressionStatement	"SETPREF ( ""esil.romem"" , ""false"" , ""Set memory as read-only for ESIL"" )"	3422:1:118386:118453	748261	561	True				
ANR	754895	CallExpression	"SETPREF ( ""esil.romem"" , ""false"" , ""Set memory as read-only for ESIL"" )"		748261	0					
ANR	754896	Callee	SETPREF		748261	0					
ANR	754897	Identifier	SETPREF		748261	0					
ANR	754898	ArgumentList	"""esil.romem"""		748261	1					
ANR	754899	Argument	"""esil.romem"""		748261	0					
ANR	754900	PrimaryExpression	"""esil.romem"""		748261	0					
ANR	754901	Argument	"""false"""		748261	1					
ANR	754902	PrimaryExpression	"""false"""		748261	0					
ANR	754903	Argument	"""Set memory as read-only for ESIL"""		748261	2					
ANR	754904	PrimaryExpression	"""Set memory as read-only for ESIL"""		748261	0					
ANR	754905	ExpressionStatement	"SETPREF ( ""esil.stats"" , ""false"" , ""Statistics from ESIL emulation stored in sdb"" )"	3423:1:118456:118535	748261	562	True				
ANR	754906	CallExpression	"SETPREF ( ""esil.stats"" , ""false"" , ""Statistics from ESIL emulation stored in sdb"" )"		748261	0					
ANR	754907	Callee	SETPREF		748261	0					
ANR	754908	Identifier	SETPREF		748261	0					
ANR	754909	ArgumentList	"""esil.stats"""		748261	1					
ANR	754910	Argument	"""esil.stats"""		748261	0					
ANR	754911	PrimaryExpression	"""esil.stats"""		748261	0					
ANR	754912	Argument	"""false"""		748261	1					
ANR	754913	PrimaryExpression	"""false"""		748261	0					
ANR	754914	Argument	"""Statistics from ESIL emulation stored in sdb"""		748261	2					
ANR	754915	PrimaryExpression	"""Statistics from ESIL emulation stored in sdb"""		748261	0					
ANR	754916	ExpressionStatement	"SETPREF ( ""esil.nonull"" , ""false"" , ""Prevent memory read, memory write at null pointer"" )"	3424:1:118538:118623	748261	563	True				
ANR	754917	CallExpression	"SETPREF ( ""esil.nonull"" , ""false"" , ""Prevent memory read, memory write at null pointer"" )"		748261	0					
ANR	754918	Callee	SETPREF		748261	0					
ANR	754919	Identifier	SETPREF		748261	0					
ANR	754920	ArgumentList	"""esil.nonull"""		748261	1					
ANR	754921	Argument	"""esil.nonull"""		748261	0					
ANR	754922	PrimaryExpression	"""esil.nonull"""		748261	0					
ANR	754923	Argument	"""false"""		748261	1					
ANR	754924	PrimaryExpression	"""false"""		748261	0					
ANR	754925	Argument	"""Prevent memory read, memory write at null pointer"""		748261	2					
ANR	754926	PrimaryExpression	"""Prevent memory read, memory write at null pointer"""		748261	0					
ANR	754927	ExpressionStatement	"SETCB ( ""esil.mdev.range"" , """" , & cb_mdevrange , ""Specify a range of memory to be handled by cmd.esil.mdev"" )"	3425:1:118626:118730	748261	564	True				
ANR	754928	CallExpression	"SETCB ( ""esil.mdev.range"" , """" , & cb_mdevrange , ""Specify a range of memory to be handled by cmd.esil.mdev"" )"		748261	0					
ANR	754929	Callee	SETCB		748261	0					
ANR	754930	Identifier	SETCB		748261	0					
ANR	754931	ArgumentList	"""esil.mdev.range"""		748261	1					
ANR	754932	Argument	"""esil.mdev.range"""		748261	0					
ANR	754933	PrimaryExpression	"""esil.mdev.range"""		748261	0					
ANR	754934	Argument	""""""		748261	1					
ANR	754935	PrimaryExpression	""""""		748261	0					
ANR	754936	Argument	& cb_mdevrange		748261	2					
ANR	754937	UnaryOperationExpression	& cb_mdevrange		748261	0					
ANR	754938	UnaryOperator	&		748261	0					
ANR	754939	Identifier	cb_mdevrange		748261	1					
ANR	754940	Argument	"""Specify a range of memory to be handled by cmd.esil.mdev"""		748261	3					
ANR	754941	PrimaryExpression	"""Specify a range of memory to be handled by cmd.esil.mdev"""		748261	0					
ANR	754942	ExpressionStatement	"r_config_set_cb ( cfg , ""scr.fgets"" , ""true"" , cb_scrfgets )"	3429:1:118764:118819	748261	565	True				
ANR	754943	CallExpression	"r_config_set_cb ( cfg , ""scr.fgets"" , ""true"" , cb_scrfgets )"		748261	0					
ANR	754944	Callee	r_config_set_cb		748261	0					
ANR	754945	Identifier	r_config_set_cb		748261	0					
ANR	754946	ArgumentList	cfg		748261	1					
ANR	754947	Argument	cfg		748261	0					
ANR	754948	Identifier	cfg		748261	0					
ANR	754949	Argument	"""scr.fgets"""		748261	1					
ANR	754950	PrimaryExpression	"""scr.fgets"""		748261	0					
ANR	754951	Argument	"""true"""		748261	2					
ANR	754952	PrimaryExpression	"""true"""		748261	0					
ANR	754953	Argument	cb_scrfgets		748261	3					
ANR	754954	Identifier	cb_scrfgets		748261	0					
ANR	754955	ExpressionStatement	"r_config_desc ( cfg , ""scr.fgets"" , ""Use fgets() instead of dietline for prompt input"" )"	3433:1:118894:118978	748261	566	True				
ANR	754956	CallExpression	"r_config_desc ( cfg , ""scr.fgets"" , ""Use fgets() instead of dietline for prompt input"" )"		748261	0					
ANR	754957	Callee	r_config_desc		748261	0					
ANR	754958	Identifier	r_config_desc		748261	0					
ANR	754959	ArgumentList	cfg		748261	1					
ANR	754960	Argument	cfg		748261	0					
ANR	754961	Identifier	cfg		748261	0					
ANR	754962	Argument	"""scr.fgets"""		748261	1					
ANR	754963	PrimaryExpression	"""scr.fgets"""		748261	0					
ANR	754964	Argument	"""Use fgets() instead of dietline for prompt input"""		748261	2					
ANR	754965	PrimaryExpression	"""Use fgets() instead of dietline for prompt input"""		748261	0					
ANR	754966	ExpressionStatement	"SETCB ( ""scr.echo"" , ""false"" , & cb_screcho , ""Show rcons output in realtime to stderr and buffer"" )"	3434:1:118981:119075	748261	567	True				
ANR	754967	CallExpression	"SETCB ( ""scr.echo"" , ""false"" , & cb_screcho , ""Show rcons output in realtime to stderr and buffer"" )"		748261	0					
ANR	754968	Callee	SETCB		748261	0					
ANR	754969	Identifier	SETCB		748261	0					
ANR	754970	ArgumentList	"""scr.echo"""		748261	1					
ANR	754971	Argument	"""scr.echo"""		748261	0					
ANR	754972	PrimaryExpression	"""scr.echo"""		748261	0					
ANR	754973	Argument	"""false"""		748261	1					
ANR	754974	PrimaryExpression	"""false"""		748261	0					
ANR	754975	Argument	& cb_screcho		748261	2					
ANR	754976	UnaryOperationExpression	& cb_screcho		748261	0					
ANR	754977	UnaryOperator	&		748261	0					
ANR	754978	Identifier	cb_screcho		748261	1					
ANR	754979	Argument	"""Show rcons output in realtime to stderr and buffer"""		748261	3					
ANR	754980	PrimaryExpression	"""Show rcons output in realtime to stderr and buffer"""		748261	0					
ANR	754981	ExpressionStatement	"SETICB ( ""scr.linesleep"" , 0 , & cb_scrlinesleep , ""Flush sleeping some ms in every line"" )"	3435:1:119078:119163	748261	568	True				
ANR	754982	CallExpression	"SETICB ( ""scr.linesleep"" , 0 , & cb_scrlinesleep , ""Flush sleeping some ms in every line"" )"		748261	0					
ANR	754983	Callee	SETICB		748261	0					
ANR	754984	Identifier	SETICB		748261	0					
ANR	754985	ArgumentList	"""scr.linesleep"""		748261	1					
ANR	754986	Argument	"""scr.linesleep"""		748261	0					
ANR	754987	PrimaryExpression	"""scr.linesleep"""		748261	0					
ANR	754988	Argument	0		748261	1					
ANR	754989	PrimaryExpression	0		748261	0					
ANR	754990	Argument	& cb_scrlinesleep		748261	2					
ANR	754991	UnaryOperationExpression	& cb_scrlinesleep		748261	0					
ANR	754992	UnaryOperator	&		748261	0					
ANR	754993	Identifier	cb_scrlinesleep		748261	1					
ANR	754994	Argument	"""Flush sleeping some ms in every line"""		748261	3					
ANR	754995	PrimaryExpression	"""Flush sleeping some ms in every line"""		748261	0					
ANR	754996	ExpressionStatement	"SETICB ( ""scr.maxtab"" , 4096 , & cb_completion_maxtab , ""Change max number of auto completion suggestions"" )"	3436:1:119166:119268	748261	569	True				
ANR	754997	CallExpression	"SETICB ( ""scr.maxtab"" , 4096 , & cb_completion_maxtab , ""Change max number of auto completion suggestions"" )"		748261	0					
ANR	754998	Callee	SETICB		748261	0					
ANR	754999	Identifier	SETICB		748261	0					
ANR	755000	ArgumentList	"""scr.maxtab"""		748261	1					
ANR	755001	Argument	"""scr.maxtab"""		748261	0					
ANR	755002	PrimaryExpression	"""scr.maxtab"""		748261	0					
ANR	755003	Argument	4096		748261	1					
ANR	755004	PrimaryExpression	4096		748261	0					
ANR	755005	Argument	& cb_completion_maxtab		748261	2					
ANR	755006	UnaryOperationExpression	& cb_completion_maxtab		748261	0					
ANR	755007	UnaryOperator	&		748261	0					
ANR	755008	Identifier	cb_completion_maxtab		748261	1					
ANR	755009	Argument	"""Change max number of auto completion suggestions"""		748261	3					
ANR	755010	PrimaryExpression	"""Change max number of auto completion suggestions"""		748261	0					
ANR	755011	ExpressionStatement	"SETICB ( ""scr.pagesize"" , 1 , & cb_scrpagesize , ""Flush in pages when scr.linesleep is != 0"" )"	3437:1:119271:119359	748261	570	True				
ANR	755012	CallExpression	"SETICB ( ""scr.pagesize"" , 1 , & cb_scrpagesize , ""Flush in pages when scr.linesleep is != 0"" )"		748261	0					
ANR	755013	Callee	SETICB		748261	0					
ANR	755014	Identifier	SETICB		748261	0					
ANR	755015	ArgumentList	"""scr.pagesize"""		748261	1					
ANR	755016	Argument	"""scr.pagesize"""		748261	0					
ANR	755017	PrimaryExpression	"""scr.pagesize"""		748261	0					
ANR	755018	Argument	1		748261	1					
ANR	755019	PrimaryExpression	1		748261	0					
ANR	755020	Argument	& cb_scrpagesize		748261	2					
ANR	755021	UnaryOperationExpression	& cb_scrpagesize		748261	0					
ANR	755022	UnaryOperator	&		748261	0					
ANR	755023	Identifier	cb_scrpagesize		748261	1					
ANR	755024	Argument	"""Flush in pages when scr.linesleep is != 0"""		748261	3					
ANR	755025	PrimaryExpression	"""Flush in pages when scr.linesleep is != 0"""		748261	0					
ANR	755026	ExpressionStatement	"SETCB ( ""scr.flush"" , ""false"" , & cb_scrflush , ""Force flush to console in realtime (breaks scripting)"" )"	3438:1:119362:119461	748261	571	True				
ANR	755027	CallExpression	"SETCB ( ""scr.flush"" , ""false"" , & cb_scrflush , ""Force flush to console in realtime (breaks scripting)"" )"		748261	0					
ANR	755028	Callee	SETCB		748261	0					
ANR	755029	Identifier	SETCB		748261	0					
ANR	755030	ArgumentList	"""scr.flush"""		748261	1					
ANR	755031	Argument	"""scr.flush"""		748261	0					
ANR	755032	PrimaryExpression	"""scr.flush"""		748261	0					
ANR	755033	Argument	"""false"""		748261	1					
ANR	755034	PrimaryExpression	"""false"""		748261	0					
ANR	755035	Argument	& cb_scrflush		748261	2					
ANR	755036	UnaryOperationExpression	& cb_scrflush		748261	0					
ANR	755037	UnaryOperator	&		748261	0					
ANR	755038	Identifier	cb_scrflush		748261	1					
ANR	755039	Argument	"""Force flush to console in realtime (breaks scripting)"""		748261	3					
ANR	755040	PrimaryExpression	"""Force flush to console in realtime (breaks scripting)"""		748261	0					
ANR	755041	ExpressionStatement	"SETPREF ( ""scr.slow"" , ""true"" , ""Do slow stuff on visual mode like RFlag.get_at(true)"" )"	3439:1:119464:119548	748261	572	True				
ANR	755042	CallExpression	"SETPREF ( ""scr.slow"" , ""true"" , ""Do slow stuff on visual mode like RFlag.get_at(true)"" )"		748261	0					
ANR	755043	Callee	SETPREF		748261	0					
ANR	755044	Identifier	SETPREF		748261	0					
ANR	755045	ArgumentList	"""scr.slow"""		748261	1					
ANR	755046	Argument	"""scr.slow"""		748261	0					
ANR	755047	PrimaryExpression	"""scr.slow"""		748261	0					
ANR	755048	Argument	"""true"""		748261	1					
ANR	755049	PrimaryExpression	"""true"""		748261	0					
ANR	755050	Argument	"""Do slow stuff on visual mode like RFlag.get_at(true)"""		748261	2					
ANR	755051	PrimaryExpression	"""Do slow stuff on visual mode like RFlag.get_at(true)"""		748261	0					
ANR	755052	ExpressionStatement	"SETCB ( ""scr.prompt.popup"" , ""false"" , & cb_scr_prompt_popup , ""Show widget dropdown for autocomplete"" )"	3440:1:119551:119649	748261	573	True				
ANR	755053	CallExpression	"SETCB ( ""scr.prompt.popup"" , ""false"" , & cb_scr_prompt_popup , ""Show widget dropdown for autocomplete"" )"		748261	0					
ANR	755054	Callee	SETCB		748261	0					
ANR	755055	Identifier	SETCB		748261	0					
ANR	755056	ArgumentList	"""scr.prompt.popup"""		748261	1					
ANR	755057	Argument	"""scr.prompt.popup"""		748261	0					
ANR	755058	PrimaryExpression	"""scr.prompt.popup"""		748261	0					
ANR	755059	Argument	"""false"""		748261	1					
ANR	755060	PrimaryExpression	"""false"""		748261	0					
ANR	755061	Argument	& cb_scr_prompt_popup		748261	2					
ANR	755062	UnaryOperationExpression	& cb_scr_prompt_popup		748261	0					
ANR	755063	UnaryOperator	&		748261	0					
ANR	755064	Identifier	cb_scr_prompt_popup		748261	1					
ANR	755065	Argument	"""Show widget dropdown for autocomplete"""		748261	3					
ANR	755066	PrimaryExpression	"""Show widget dropdown for autocomplete"""		748261	0					
ANR	755067	ExpressionStatement	"SETICB ( ""scr.ansicon"" , r_cons_singleton ( ) -> ansicon , & scr_ansicon , ""Use ANSICON mode or not on Windows"" )"	3442:1:119668:119774	748261	574	True				
ANR	755068	CallExpression	"SETICB ( ""scr.ansicon"" , r_cons_singleton ( ) -> ansicon , & scr_ansicon , ""Use ANSICON mode or not on Windows"" )"		748261	0					
ANR	755069	Callee	SETICB		748261	0					
ANR	755070	Identifier	SETICB		748261	0					
ANR	755071	ArgumentList	"""scr.ansicon"""		748261	1					
ANR	755072	Argument	"""scr.ansicon"""		748261	0					
ANR	755073	PrimaryExpression	"""scr.ansicon"""		748261	0					
ANR	755074	Argument	r_cons_singleton ( ) -> ansicon		748261	1					
ANR	755075	PtrMemberAccess	r_cons_singleton ( ) -> ansicon		748261	0					
ANR	755076	CallExpression	r_cons_singleton ( )		748261	0					
ANR	755077	Callee	r_cons_singleton		748261	0					
ANR	755078	Identifier	r_cons_singleton		748261	0					
ANR	755079	ArgumentList			748261	1					
ANR	755080	Identifier	ansicon		748261	1					
ANR	755081	Argument	& scr_ansicon		748261	2					
ANR	755082	UnaryOperationExpression	& scr_ansicon		748261	0					
ANR	755083	UnaryOperator	&		748261	0					
ANR	755084	Identifier	scr_ansicon		748261	1					
ANR	755085	Argument	"""Use ANSICON mode or not on Windows"""		748261	3					
ANR	755086	PrimaryExpression	"""Use ANSICON mode or not on Windows"""		748261	0					
ANR	755087	ExpressionStatement	"SETPREF ( ""scr.responsive"" , ""true"" , ""Auto-adjust Visual depending on screen (e.g. unset asm.bytes)"" )"	3446:1:119800:119899	748261	575	True				
ANR	755088	CallExpression	"SETPREF ( ""scr.responsive"" , ""true"" , ""Auto-adjust Visual depending on screen (e.g. unset asm.bytes)"" )"		748261	0					
ANR	755089	Callee	SETPREF		748261	0					
ANR	755090	Identifier	SETPREF		748261	0					
ANR	755091	ArgumentList	"""scr.responsive"""		748261	1					
ANR	755092	Argument	"""scr.responsive"""		748261	0					
ANR	755093	PrimaryExpression	"""scr.responsive"""		748261	0					
ANR	755094	Argument	"""true"""		748261	1					
ANR	755095	PrimaryExpression	"""true"""		748261	0					
ANR	755096	Argument	"""Auto-adjust Visual depending on screen (e.g. unset asm.bytes)"""		748261	2					
ANR	755097	PrimaryExpression	"""Auto-adjust Visual depending on screen (e.g. unset asm.bytes)"""		748261	0					
ANR	755098	ExpressionStatement	"SETI ( ""scr.wheel.speed"" , 1 , ""Mouse wheel speed"" )"	3447:1:119902:119950	748261	576	True				
ANR	755099	CallExpression	"SETI ( ""scr.wheel.speed"" , 1 , ""Mouse wheel speed"" )"		748261	0					
ANR	755100	Callee	SETI		748261	0					
ANR	755101	Identifier	SETI		748261	0					
ANR	755102	ArgumentList	"""scr.wheel.speed"""		748261	1					
ANR	755103	Argument	"""scr.wheel.speed"""		748261	0					
ANR	755104	PrimaryExpression	"""scr.wheel.speed"""		748261	0					
ANR	755105	Argument	1		748261	1					
ANR	755106	PrimaryExpression	1		748261	0					
ANR	755107	Argument	"""Mouse wheel speed"""		748261	2					
ANR	755108	PrimaryExpression	"""Mouse wheel speed"""		748261	0					
ANR	755109	ExpressionStatement	"SETPREF ( ""scr.wheel.nkey"" , ""false"" , ""Use sn/sp and scr.nkey on wheel instead of scroll"" )"	3452:1:120120:120208	748261	577	True				
ANR	755110	CallExpression	"SETPREF ( ""scr.wheel.nkey"" , ""false"" , ""Use sn/sp and scr.nkey on wheel instead of scroll"" )"		748261	0					
ANR	755111	Callee	SETPREF		748261	0					
ANR	755112	Identifier	SETPREF		748261	0					
ANR	755113	ArgumentList	"""scr.wheel.nkey"""		748261	1					
ANR	755114	Argument	"""scr.wheel.nkey"""		748261	0					
ANR	755115	PrimaryExpression	"""scr.wheel.nkey"""		748261	0					
ANR	755116	Argument	"""false"""		748261	1					
ANR	755117	PrimaryExpression	"""false"""		748261	0					
ANR	755118	Argument	"""Use sn/sp and scr.nkey on wheel instead of scroll"""		748261	2					
ANR	755119	PrimaryExpression	"""Use sn/sp and scr.nkey on wheel instead of scroll"""		748261	0					
ANR	755120	ExpressionStatement	"SETPREF ( ""scr.wheel"" , ""true"" , ""Mouse wheel in Visual; temporaryly disable/reenable by right click/Enter)"" )"	3454:1:120235:120341	748261	578	True				
ANR	755121	CallExpression	"SETPREF ( ""scr.wheel"" , ""true"" , ""Mouse wheel in Visual; temporaryly disable/reenable by right click/Enter)"" )"		748261	0					
ANR	755122	Callee	SETPREF		748261	0					
ANR	755123	Identifier	SETPREF		748261	0					
ANR	755124	ArgumentList	"""scr.wheel"""		748261	1					
ANR	755125	Argument	"""scr.wheel"""		748261	0					
ANR	755126	PrimaryExpression	"""scr.wheel"""		748261	0					
ANR	755127	Argument	"""true"""		748261	1					
ANR	755128	PrimaryExpression	"""true"""		748261	0					
ANR	755129	Argument	"""Mouse wheel in Visual; temporaryly disable/reenable by right click/Enter)"""		748261	2					
ANR	755130	PrimaryExpression	"""Mouse wheel in Visual; temporaryly disable/reenable by right click/Enter)"""		748261	0					
ANR	755131	ExpressionStatement	"SETPREF ( ""scr.layout"" , """" , ""Name of the selected layout"" )"	3455:1:120344:120401	748261	579	True				
ANR	755132	CallExpression	"SETPREF ( ""scr.layout"" , """" , ""Name of the selected layout"" )"		748261	0					
ANR	755133	Callee	SETPREF		748261	0					
ANR	755134	Identifier	SETPREF		748261	0					
ANR	755135	ArgumentList	"""scr.layout"""		748261	1					
ANR	755136	Argument	"""scr.layout"""		748261	0					
ANR	755137	PrimaryExpression	"""scr.layout"""		748261	0					
ANR	755138	Argument	""""""		748261	1					
ANR	755139	PrimaryExpression	""""""		748261	0					
ANR	755140	Argument	"""Name of the selected layout"""		748261	2					
ANR	755141	PrimaryExpression	"""Name of the selected layout"""		748261	0					
ANR	755142	ExpressionStatement	"SETCB ( ""scr.breakword"" , """" , & cb_scrbreakword , ""Emulate console break (^C) when a word is printed (useful for pD)"" )"	3457:1:120507:120621	748261	580	True				
ANR	755143	CallExpression	"SETCB ( ""scr.breakword"" , """" , & cb_scrbreakword , ""Emulate console break (^C) when a word is printed (useful for pD)"" )"		748261	0					
ANR	755144	Callee	SETCB		748261	0					
ANR	755145	Identifier	SETCB		748261	0					
ANR	755146	ArgumentList	"""scr.breakword"""		748261	1					
ANR	755147	Argument	"""scr.breakword"""		748261	0					
ANR	755148	PrimaryExpression	"""scr.breakword"""		748261	0					
ANR	755149	Argument	""""""		748261	1					
ANR	755150	PrimaryExpression	""""""		748261	0					
ANR	755151	Argument	& cb_scrbreakword		748261	2					
ANR	755152	UnaryOperationExpression	& cb_scrbreakword		748261	0					
ANR	755153	UnaryOperator	&		748261	0					
ANR	755154	Identifier	cb_scrbreakword		748261	1					
ANR	755155	Argument	"""Emulate console break (^C) when a word is printed (useful for pD)"""		748261	3					
ANR	755156	PrimaryExpression	"""Emulate console break (^C) when a word is printed (useful for pD)"""		748261	0					
ANR	755157	ExpressionStatement	"SETCB ( ""scr.breaklines"" , ""false"" , & cb_breaklines , ""Break lines in Visual instead of truncating them"" )"	3458:1:120624:120725	748261	581	True				
ANR	755158	CallExpression	"SETCB ( ""scr.breaklines"" , ""false"" , & cb_breaklines , ""Break lines in Visual instead of truncating them"" )"		748261	0					
ANR	755159	Callee	SETCB		748261	0					
ANR	755160	Identifier	SETCB		748261	0					
ANR	755161	ArgumentList	"""scr.breaklines"""		748261	1					
ANR	755162	Argument	"""scr.breaklines"""		748261	0					
ANR	755163	PrimaryExpression	"""scr.breaklines"""		748261	0					
ANR	755164	Argument	"""false"""		748261	1					
ANR	755165	PrimaryExpression	"""false"""		748261	0					
ANR	755166	Argument	& cb_breaklines		748261	2					
ANR	755167	UnaryOperationExpression	& cb_breaklines		748261	0					
ANR	755168	UnaryOperator	&		748261	0					
ANR	755169	Identifier	cb_breaklines		748261	1					
ANR	755170	Argument	"""Break lines in Visual instead of truncating them"""		748261	3					
ANR	755171	PrimaryExpression	"""Break lines in Visual instead of truncating them"""		748261	0					
ANR	755172	ExpressionStatement	"SETCB ( ""scr.gadgets"" , ""true"" , & cb_scr_gadgets , ""Run pg in prompt, visual and panels"" )"	3459:1:120728:120813	748261	582	True				
ANR	755173	CallExpression	"SETCB ( ""scr.gadgets"" , ""true"" , & cb_scr_gadgets , ""Run pg in prompt, visual and panels"" )"		748261	0					
ANR	755174	Callee	SETCB		748261	0					
ANR	755175	Identifier	SETCB		748261	0					
ANR	755176	ArgumentList	"""scr.gadgets"""		748261	1					
ANR	755177	Argument	"""scr.gadgets"""		748261	0					
ANR	755178	PrimaryExpression	"""scr.gadgets"""		748261	0					
ANR	755179	Argument	"""true"""		748261	1					
ANR	755180	PrimaryExpression	"""true"""		748261	0					
ANR	755181	Argument	& cb_scr_gadgets		748261	2					
ANR	755182	UnaryOperationExpression	& cb_scr_gadgets		748261	0					
ANR	755183	UnaryOperator	&		748261	0					
ANR	755184	Identifier	cb_scr_gadgets		748261	1					
ANR	755185	Argument	"""Run pg in prompt, visual and panels"""		748261	3					
ANR	755186	PrimaryExpression	"""Run pg in prompt, visual and panels"""		748261	0					
ANR	755187	ExpressionStatement	"SETICB ( ""scr.columns"" , 0 , & cb_scrcolumns , ""Force console column count (width)"" )"	3460:1:120816:120895	748261	583	True				
ANR	755188	CallExpression	"SETICB ( ""scr.columns"" , 0 , & cb_scrcolumns , ""Force console column count (width)"" )"		748261	0					
ANR	755189	Callee	SETICB		748261	0					
ANR	755190	Identifier	SETICB		748261	0					
ANR	755191	ArgumentList	"""scr.columns"""		748261	1					
ANR	755192	Argument	"""scr.columns"""		748261	0					
ANR	755193	PrimaryExpression	"""scr.columns"""		748261	0					
ANR	755194	Argument	0		748261	1					
ANR	755195	PrimaryExpression	0		748261	0					
ANR	755196	Argument	& cb_scrcolumns		748261	2					
ANR	755197	UnaryOperationExpression	& cb_scrcolumns		748261	0					
ANR	755198	UnaryOperator	&		748261	0					
ANR	755199	Identifier	cb_scrcolumns		748261	1					
ANR	755200	Argument	"""Force console column count (width)"""		748261	3					
ANR	755201	PrimaryExpression	"""Force console column count (width)"""		748261	0					
ANR	755202	ExpressionStatement	"SETPREF ( ""scr.dumpcols"" , ""false"" , ""Prefer pC commands before p ones"" )"	3461:1:120898:120967	748261	584	True				
ANR	755203	CallExpression	"SETPREF ( ""scr.dumpcols"" , ""false"" , ""Prefer pC commands before p ones"" )"		748261	0					
ANR	755204	Callee	SETPREF		748261	0					
ANR	755205	Identifier	SETPREF		748261	0					
ANR	755206	ArgumentList	"""scr.dumpcols"""		748261	1					
ANR	755207	Argument	"""scr.dumpcols"""		748261	0					
ANR	755208	PrimaryExpression	"""scr.dumpcols"""		748261	0					
ANR	755209	Argument	"""false"""		748261	1					
ANR	755210	PrimaryExpression	"""false"""		748261	0					
ANR	755211	Argument	"""Prefer pC commands before p ones"""		748261	2					
ANR	755212	PrimaryExpression	"""Prefer pC commands before p ones"""		748261	0					
ANR	755213	ExpressionStatement	"SETCB ( ""scr.rows"" , ""0"" , & cb_scrrows , ""Force console row count (height) "" )"	3462:1:120970:121043	748261	585	True				
ANR	755214	CallExpression	"SETCB ( ""scr.rows"" , ""0"" , & cb_scrrows , ""Force console row count (height) "" )"		748261	0					
ANR	755215	Callee	SETCB		748261	0					
ANR	755216	Identifier	SETCB		748261	0					
ANR	755217	ArgumentList	"""scr.rows"""		748261	1					
ANR	755218	Argument	"""scr.rows"""		748261	0					
ANR	755219	PrimaryExpression	"""scr.rows"""		748261	0					
ANR	755220	Argument	"""0"""		748261	1					
ANR	755221	PrimaryExpression	"""0"""		748261	0					
ANR	755222	Argument	& cb_scrrows		748261	2					
ANR	755223	UnaryOperationExpression	& cb_scrrows		748261	0					
ANR	755224	UnaryOperator	&		748261	0					
ANR	755225	Identifier	cb_scrrows		748261	1					
ANR	755226	Argument	"""Force console row count (height) """		748261	3					
ANR	755227	PrimaryExpression	"""Force console row count (height) """		748261	0					
ANR	755228	ExpressionStatement	"SETICB ( ""scr.rows"" , 0 , & cb_rows , ""Force console row count (height) (duplicate?)"" )"	3463:1:121046:121127	748261	586	True				
ANR	755229	CallExpression	"SETICB ( ""scr.rows"" , 0 , & cb_rows , ""Force console row count (height) (duplicate?)"" )"		748261	0					
ANR	755230	Callee	SETICB		748261	0					
ANR	755231	Identifier	SETICB		748261	0					
ANR	755232	ArgumentList	"""scr.rows"""		748261	1					
ANR	755233	Argument	"""scr.rows"""		748261	0					
ANR	755234	PrimaryExpression	"""scr.rows"""		748261	0					
ANR	755235	Argument	0		748261	1					
ANR	755236	PrimaryExpression	0		748261	0					
ANR	755237	Argument	& cb_rows		748261	2					
ANR	755238	UnaryOperationExpression	& cb_rows		748261	0					
ANR	755239	UnaryOperator	&		748261	0					
ANR	755240	Identifier	cb_rows		748261	1					
ANR	755241	Argument	"""Force console row count (height) (duplicate?)"""		748261	3					
ANR	755242	PrimaryExpression	"""Force console row count (height) (duplicate?)"""		748261	0					
ANR	755243	ExpressionStatement	"SETCB ( ""scr.fps"" , ""false"" , & cb_fps , ""Show FPS in Visual"" )"	3464:1:121130:121187	748261	587	True				
ANR	755244	CallExpression	"SETCB ( ""scr.fps"" , ""false"" , & cb_fps , ""Show FPS in Visual"" )"		748261	0					
ANR	755245	Callee	SETCB		748261	0					
ANR	755246	Identifier	SETCB		748261	0					
ANR	755247	ArgumentList	"""scr.fps"""		748261	1					
ANR	755248	Argument	"""scr.fps"""		748261	0					
ANR	755249	PrimaryExpression	"""scr.fps"""		748261	0					
ANR	755250	Argument	"""false"""		748261	1					
ANR	755251	PrimaryExpression	"""false"""		748261	0					
ANR	755252	Argument	& cb_fps		748261	2					
ANR	755253	UnaryOperationExpression	& cb_fps		748261	0					
ANR	755254	UnaryOperator	&		748261	0					
ANR	755255	Identifier	cb_fps		748261	1					
ANR	755256	Argument	"""Show FPS in Visual"""		748261	3					
ANR	755257	PrimaryExpression	"""Show FPS in Visual"""		748261	0					
ANR	755258	ExpressionStatement	"SETICB ( ""scr.fix.rows"" , 0 , & cb_fixrows , ""Workaround for Linux TTY"" )"	3465:1:121190:121257	748261	588	True				
ANR	755259	CallExpression	"SETICB ( ""scr.fix.rows"" , 0 , & cb_fixrows , ""Workaround for Linux TTY"" )"		748261	0					
ANR	755260	Callee	SETICB		748261	0					
ANR	755261	Identifier	SETICB		748261	0					
ANR	755262	ArgumentList	"""scr.fix.rows"""		748261	1					
ANR	755263	Argument	"""scr.fix.rows"""		748261	0					
ANR	755264	PrimaryExpression	"""scr.fix.rows"""		748261	0					
ANR	755265	Argument	0		748261	1					
ANR	755266	PrimaryExpression	0		748261	0					
ANR	755267	Argument	& cb_fixrows		748261	2					
ANR	755268	UnaryOperationExpression	& cb_fixrows		748261	0					
ANR	755269	UnaryOperator	&		748261	0					
ANR	755270	Identifier	cb_fixrows		748261	1					
ANR	755271	Argument	"""Workaround for Linux TTY"""		748261	3					
ANR	755272	PrimaryExpression	"""Workaround for Linux TTY"""		748261	0					
ANR	755273	ExpressionStatement	"SETICB ( ""scr.fix.columns"" , 0 , & cb_fixcolumns , ""Workaround for Prompt iOS SSH client"" )"	3466:1:121260:121345	748261	589	True				
ANR	755274	CallExpression	"SETICB ( ""scr.fix.columns"" , 0 , & cb_fixcolumns , ""Workaround for Prompt iOS SSH client"" )"		748261	0					
ANR	755275	Callee	SETICB		748261	0					
ANR	755276	Identifier	SETICB		748261	0					
ANR	755277	ArgumentList	"""scr.fix.columns"""		748261	1					
ANR	755278	Argument	"""scr.fix.columns"""		748261	0					
ANR	755279	PrimaryExpression	"""scr.fix.columns"""		748261	0					
ANR	755280	Argument	0		748261	1					
ANR	755281	PrimaryExpression	0		748261	0					
ANR	755282	Argument	& cb_fixcolumns		748261	2					
ANR	755283	UnaryOperationExpression	& cb_fixcolumns		748261	0					
ANR	755284	UnaryOperator	&		748261	0					
ANR	755285	Identifier	cb_fixcolumns		748261	1					
ANR	755286	Argument	"""Workaround for Prompt iOS SSH client"""		748261	3					
ANR	755287	PrimaryExpression	"""Workaround for Prompt iOS SSH client"""		748261	0					
ANR	755288	ExpressionStatement	"SETCB ( ""scr.highlight"" , """" , & cb_scrhighlight , ""Highlight that word at RCons level"" )"	3467:1:121348:121431	748261	590	True				
ANR	755289	CallExpression	"SETCB ( ""scr.highlight"" , """" , & cb_scrhighlight , ""Highlight that word at RCons level"" )"		748261	0					
ANR	755290	Callee	SETCB		748261	0					
ANR	755291	Identifier	SETCB		748261	0					
ANR	755292	ArgumentList	"""scr.highlight"""		748261	1					
ANR	755293	Argument	"""scr.highlight"""		748261	0					
ANR	755294	PrimaryExpression	"""scr.highlight"""		748261	0					
ANR	755295	Argument	""""""		748261	1					
ANR	755296	PrimaryExpression	""""""		748261	0					
ANR	755297	Argument	& cb_scrhighlight		748261	2					
ANR	755298	UnaryOperationExpression	& cb_scrhighlight		748261	0					
ANR	755299	UnaryOperator	&		748261	0					
ANR	755300	Identifier	cb_scrhighlight		748261	1					
ANR	755301	Argument	"""Highlight that word at RCons level"""		748261	3					
ANR	755302	PrimaryExpression	"""Highlight that word at RCons level"""		748261	0					
ANR	755303	ExpressionStatement	"SETCB ( ""scr.interactive"" , ""true"" , & cb_scrint , ""Start in interactive mode"" )"	3468:1:121434:121508	748261	591	True				
ANR	755304	CallExpression	"SETCB ( ""scr.interactive"" , ""true"" , & cb_scrint , ""Start in interactive mode"" )"		748261	0					
ANR	755305	Callee	SETCB		748261	0					
ANR	755306	Identifier	SETCB		748261	0					
ANR	755307	ArgumentList	"""scr.interactive"""		748261	1					
ANR	755308	Argument	"""scr.interactive"""		748261	0					
ANR	755309	PrimaryExpression	"""scr.interactive"""		748261	0					
ANR	755310	Argument	"""true"""		748261	1					
ANR	755311	PrimaryExpression	"""true"""		748261	0					
ANR	755312	Argument	& cb_scrint		748261	2					
ANR	755313	UnaryOperationExpression	& cb_scrint		748261	0					
ANR	755314	UnaryOperator	&		748261	0					
ANR	755315	Identifier	cb_scrint		748261	1					
ANR	755316	Argument	"""Start in interactive mode"""		748261	3					
ANR	755317	PrimaryExpression	"""Start in interactive mode"""		748261	0					
ANR	755318	ExpressionStatement	"SETCB ( ""scr.bgfill"" , ""false"" , & cb_scr_bgfill , ""Fill background for ascii art when possible"" )"	3469:1:121511:121603	748261	592	True				
ANR	755319	CallExpression	"SETCB ( ""scr.bgfill"" , ""false"" , & cb_scr_bgfill , ""Fill background for ascii art when possible"" )"		748261	0					
ANR	755320	Callee	SETCB		748261	0					
ANR	755321	Identifier	SETCB		748261	0					
ANR	755322	ArgumentList	"""scr.bgfill"""		748261	1					
ANR	755323	Argument	"""scr.bgfill"""		748261	0					
ANR	755324	PrimaryExpression	"""scr.bgfill"""		748261	0					
ANR	755325	Argument	"""false"""		748261	1					
ANR	755326	PrimaryExpression	"""false"""		748261	0					
ANR	755327	Argument	& cb_scr_bgfill		748261	2					
ANR	755328	UnaryOperationExpression	& cb_scr_bgfill		748261	0					
ANR	755329	UnaryOperator	&		748261	0					
ANR	755330	Identifier	cb_scr_bgfill		748261	1					
ANR	755331	Argument	"""Fill background for ascii art when possible"""		748261	3					
ANR	755332	PrimaryExpression	"""Fill background for ascii art when possible"""		748261	0					
ANR	755333	ExpressionStatement	"SETI ( ""scr.feedback"" , 1 , ""Set visual feedback level (1=arrow on jump, 2=every key (useful for videos))"" )"	3470:1:121606:121710	748261	593	True				
ANR	755334	CallExpression	"SETI ( ""scr.feedback"" , 1 , ""Set visual feedback level (1=arrow on jump, 2=every key (useful for videos))"" )"		748261	0					
ANR	755335	Callee	SETI		748261	0					
ANR	755336	Identifier	SETI		748261	0					
ANR	755337	ArgumentList	"""scr.feedback"""		748261	1					
ANR	755338	Argument	"""scr.feedback"""		748261	0					
ANR	755339	PrimaryExpression	"""scr.feedback"""		748261	0					
ANR	755340	Argument	1		748261	1					
ANR	755341	PrimaryExpression	1		748261	0					
ANR	755342	Argument	"""Set visual feedback level (1=arrow on jump, 2=every key (useful for videos))"""		748261	2					
ANR	755343	PrimaryExpression	"""Set visual feedback level (1=arrow on jump, 2=every key (useful for videos))"""		748261	0					
ANR	755344	ExpressionStatement	"SETCB ( ""scr.html"" , ""false"" , & cb_scrhtml , ""Disassembly uses HTML syntax"" )"	3471:1:121713:121785	748261	594	True				
ANR	755345	CallExpression	"SETCB ( ""scr.html"" , ""false"" , & cb_scrhtml , ""Disassembly uses HTML syntax"" )"		748261	0					
ANR	755346	Callee	SETCB		748261	0					
ANR	755347	Identifier	SETCB		748261	0					
ANR	755348	ArgumentList	"""scr.html"""		748261	1					
ANR	755349	Argument	"""scr.html"""		748261	0					
ANR	755350	PrimaryExpression	"""scr.html"""		748261	0					
ANR	755351	Argument	"""false"""		748261	1					
ANR	755352	PrimaryExpression	"""false"""		748261	0					
ANR	755353	Argument	& cb_scrhtml		748261	2					
ANR	755354	UnaryOperationExpression	& cb_scrhtml		748261	0					
ANR	755355	UnaryOperator	&		748261	0					
ANR	755356	Identifier	cb_scrhtml		748261	1					
ANR	755357	Argument	"""Disassembly uses HTML syntax"""		748261	3					
ANR	755358	PrimaryExpression	"""Disassembly uses HTML syntax"""		748261	0					
ANR	755359	ExpressionStatement	"n = NODECB ( ""scr.nkey"" , ""flag"" , & cb_scrnkey )"	3472:1:121788:121832	748261	595	True				
ANR	755360	AssignmentExpression	"n = NODECB ( ""scr.nkey"" , ""flag"" , & cb_scrnkey )"		748261	0		=			
ANR	755361	Identifier	n		748261	0					
ANR	755362	CallExpression	"NODECB ( ""scr.nkey"" , ""flag"" , & cb_scrnkey )"		748261	1					
ANR	755363	Callee	NODECB		748261	0					
ANR	755364	Identifier	NODECB		748261	0					
ANR	755365	ArgumentList	"""scr.nkey"""		748261	1					
ANR	755366	Argument	"""scr.nkey"""		748261	0					
ANR	755367	PrimaryExpression	"""scr.nkey"""		748261	0					
ANR	755368	Argument	"""flag"""		748261	1					
ANR	755369	PrimaryExpression	"""flag"""		748261	0					
ANR	755370	Argument	& cb_scrnkey		748261	2					
ANR	755371	UnaryOperationExpression	& cb_scrnkey		748261	0					
ANR	755372	UnaryOperator	&		748261	0					
ANR	755373	Identifier	cb_scrnkey		748261	1					
ANR	755374	ExpressionStatement	"SETDESC ( n , ""Select visual seek mode (affects n/N visual commands)"" )"	3473:1:121835:121903	748261	596	True				
ANR	755375	CallExpression	"SETDESC ( n , ""Select visual seek mode (affects n/N visual commands)"" )"		748261	0					
ANR	755376	Callee	SETDESC		748261	0					
ANR	755377	Identifier	SETDESC		748261	0					
ANR	755378	ArgumentList	n		748261	1					
ANR	755379	Argument	n		748261	0					
ANR	755380	Identifier	n		748261	0					
ANR	755381	Argument	"""Select visual seek mode (affects n/N visual commands)"""		748261	1					
ANR	755382	PrimaryExpression	"""Select visual seek mode (affects n/N visual commands)"""		748261	0					
ANR	755383	ExpressionStatement	"SETOPTIONS ( n , ""fun"" , ""hit"" , ""flag"" , NULL )"	3474:1:121906:121948	748261	597	True				
ANR	755384	CallExpression	"SETOPTIONS ( n , ""fun"" , ""hit"" , ""flag"" , NULL )"		748261	0					
ANR	755385	Callee	SETOPTIONS		748261	0					
ANR	755386	Identifier	SETOPTIONS		748261	0					
ANR	755387	ArgumentList	n		748261	1					
ANR	755388	Argument	n		748261	0					
ANR	755389	Identifier	n		748261	0					
ANR	755390	Argument	"""fun"""		748261	1					
ANR	755391	PrimaryExpression	"""fun"""		748261	0					
ANR	755392	Argument	"""hit"""		748261	2					
ANR	755393	PrimaryExpression	"""hit"""		748261	0					
ANR	755394	Argument	"""flag"""		748261	3					
ANR	755395	PrimaryExpression	"""flag"""		748261	0					
ANR	755396	Argument	NULL		748261	4					
ANR	755397	Identifier	NULL		748261	0					
ANR	755398	ExpressionStatement	"SETCB ( ""scr.pager"" , """" , & cb_pager , ""System program (or '..') to use when output exceeds screen boundaries"" )"	3475:1:121951:122058	748261	598	True				
ANR	755399	CallExpression	"SETCB ( ""scr.pager"" , """" , & cb_pager , ""System program (or '..') to use when output exceeds screen boundaries"" )"		748261	0					
ANR	755400	Callee	SETCB		748261	0					
ANR	755401	Identifier	SETCB		748261	0					
ANR	755402	ArgumentList	"""scr.pager"""		748261	1					
ANR	755403	Argument	"""scr.pager"""		748261	0					
ANR	755404	PrimaryExpression	"""scr.pager"""		748261	0					
ANR	755405	Argument	""""""		748261	1					
ANR	755406	PrimaryExpression	""""""		748261	0					
ANR	755407	Argument	& cb_pager		748261	2					
ANR	755408	UnaryOperationExpression	& cb_pager		748261	0					
ANR	755409	UnaryOperator	&		748261	0					
ANR	755410	Identifier	cb_pager		748261	1					
ANR	755411	Argument	"""System program (or '..') to use when output exceeds screen boundaries"""		748261	3					
ANR	755412	PrimaryExpression	"""System program (or '..') to use when output exceeds screen boundaries"""		748261	0					
ANR	755413	ExpressionStatement	"SETI ( ""scr.scrollbar"" , 0 , ""Show flagzone (fz) scrollbar in visual mode (0=no,1=right,2=top,3=bottom)"" )"	3476:1:122061:122163	748261	599	True				
ANR	755414	CallExpression	"SETI ( ""scr.scrollbar"" , 0 , ""Show flagzone (fz) scrollbar in visual mode (0=no,1=right,2=top,3=bottom)"" )"		748261	0					
ANR	755415	Callee	SETI		748261	0					
ANR	755416	Identifier	SETI		748261	0					
ANR	755417	ArgumentList	"""scr.scrollbar"""		748261	1					
ANR	755418	Argument	"""scr.scrollbar"""		748261	0					
ANR	755419	PrimaryExpression	"""scr.scrollbar"""		748261	0					
ANR	755420	Argument	0		748261	1					
ANR	755421	PrimaryExpression	0		748261	0					
ANR	755422	Argument	"""Show flagzone (fz) scrollbar in visual mode (0=no,1=right,2=top,3=bottom)"""		748261	2					
ANR	755423	PrimaryExpression	"""Show flagzone (fz) scrollbar in visual mode (0=no,1=right,2=top,3=bottom)"""		748261	0					
ANR	755424	ExpressionStatement	"SETPREF ( ""scr.randpal"" , ""false"" , ""Random color palete or just get the next one from 'eco'"" )"	3477:1:122166:122257	748261	600	True				
ANR	755425	CallExpression	"SETPREF ( ""scr.randpal"" , ""false"" , ""Random color palete or just get the next one from 'eco'"" )"		748261	0					
ANR	755426	Callee	SETPREF		748261	0					
ANR	755427	Identifier	SETPREF		748261	0					
ANR	755428	ArgumentList	"""scr.randpal"""		748261	1					
ANR	755429	Argument	"""scr.randpal"""		748261	0					
ANR	755430	PrimaryExpression	"""scr.randpal"""		748261	0					
ANR	755431	Argument	"""false"""		748261	1					
ANR	755432	PrimaryExpression	"""false"""		748261	0					
ANR	755433	Argument	"""Random color palete or just get the next one from 'eco'"""		748261	2					
ANR	755434	PrimaryExpression	"""Random color palete or just get the next one from 'eco'"""		748261	0					
ANR	755435	ExpressionStatement	"SETCB ( ""scr.highlight.grep"" , ""false"" , & cb_scr_color_grep_highlight , ""Highlight (INVERT) the grepped words"" )"	3478:1:122260:122367	748261	601	True				
ANR	755436	CallExpression	"SETCB ( ""scr.highlight.grep"" , ""false"" , & cb_scr_color_grep_highlight , ""Highlight (INVERT) the grepped words"" )"		748261	0					
ANR	755437	Callee	SETCB		748261	0					
ANR	755438	Identifier	SETCB		748261	0					
ANR	755439	ArgumentList	"""scr.highlight.grep"""		748261	1					
ANR	755440	Argument	"""scr.highlight.grep"""		748261	0					
ANR	755441	PrimaryExpression	"""scr.highlight.grep"""		748261	0					
ANR	755442	Argument	"""false"""		748261	1					
ANR	755443	PrimaryExpression	"""false"""		748261	0					
ANR	755444	Argument	& cb_scr_color_grep_highlight		748261	2					
ANR	755445	UnaryOperationExpression	& cb_scr_color_grep_highlight		748261	0					
ANR	755446	UnaryOperator	&		748261	0					
ANR	755447	Identifier	cb_scr_color_grep_highlight		748261	1					
ANR	755448	Argument	"""Highlight (INVERT) the grepped words"""		748261	3					
ANR	755449	PrimaryExpression	"""Highlight (INVERT) the grepped words"""		748261	0					
ANR	755450	ExpressionStatement	"SETPREF ( ""scr.prompt.file"" , ""false"" , ""Show user prompt file (used by r2 -q)"" )"	3479:1:122370:122447	748261	602	True				
ANR	755451	CallExpression	"SETPREF ( ""scr.prompt.file"" , ""false"" , ""Show user prompt file (used by r2 -q)"" )"		748261	0					
ANR	755452	Callee	SETPREF		748261	0					
ANR	755453	Identifier	SETPREF		748261	0					
ANR	755454	ArgumentList	"""scr.prompt.file"""		748261	1					
ANR	755455	Argument	"""scr.prompt.file"""		748261	0					
ANR	755456	PrimaryExpression	"""scr.prompt.file"""		748261	0					
ANR	755457	Argument	"""false"""		748261	1					
ANR	755458	PrimaryExpression	"""false"""		748261	0					
ANR	755459	Argument	"""Show user prompt file (used by r2 -q)"""		748261	2					
ANR	755460	PrimaryExpression	"""Show user prompt file (used by r2 -q)"""		748261	0					
ANR	755461	ExpressionStatement	"SETPREF ( ""scr.prompt.flag"" , ""false"" , ""Show flag name in the prompt"" )"	3480:1:122450:122518	748261	603	True				
ANR	755462	CallExpression	"SETPREF ( ""scr.prompt.flag"" , ""false"" , ""Show flag name in the prompt"" )"		748261	0					
ANR	755463	Callee	SETPREF		748261	0					
ANR	755464	Identifier	SETPREF		748261	0					
ANR	755465	ArgumentList	"""scr.prompt.flag"""		748261	1					
ANR	755466	Argument	"""scr.prompt.flag"""		748261	0					
ANR	755467	PrimaryExpression	"""scr.prompt.flag"""		748261	0					
ANR	755468	Argument	"""false"""		748261	1					
ANR	755469	PrimaryExpression	"""false"""		748261	0					
ANR	755470	Argument	"""Show flag name in the prompt"""		748261	2					
ANR	755471	PrimaryExpression	"""Show flag name in the prompt"""		748261	0					
ANR	755472	ExpressionStatement	"SETPREF ( ""scr.prompt.sect"" , ""false"" , ""Show section name in the prompt"" )"	3481:1:122521:122592	748261	604	True				
ANR	755473	CallExpression	"SETPREF ( ""scr.prompt.sect"" , ""false"" , ""Show section name in the prompt"" )"		748261	0					
ANR	755474	Callee	SETPREF		748261	0					
ANR	755475	Identifier	SETPREF		748261	0					
ANR	755476	ArgumentList	"""scr.prompt.sect"""		748261	1					
ANR	755477	Argument	"""scr.prompt.sect"""		748261	0					
ANR	755478	PrimaryExpression	"""scr.prompt.sect"""		748261	0					
ANR	755479	Argument	"""false"""		748261	1					
ANR	755480	PrimaryExpression	"""false"""		748261	0					
ANR	755481	Argument	"""Show section name in the prompt"""		748261	2					
ANR	755482	PrimaryExpression	"""Show section name in the prompt"""		748261	0					
ANR	755483	ExpressionStatement	"SETPREF ( ""scr.tts"" , ""false"" , ""Use tts if available by a command (see ic)"" )"	3482:1:122595:122669	748261	605	True				
ANR	755484	CallExpression	"SETPREF ( ""scr.tts"" , ""false"" , ""Use tts if available by a command (see ic)"" )"		748261	0					
ANR	755485	Callee	SETPREF		748261	0					
ANR	755486	Identifier	SETPREF		748261	0					
ANR	755487	ArgumentList	"""scr.tts"""		748261	1					
ANR	755488	Argument	"""scr.tts"""		748261	0					
ANR	755489	PrimaryExpression	"""scr.tts"""		748261	0					
ANR	755490	Argument	"""false"""		748261	1					
ANR	755491	PrimaryExpression	"""false"""		748261	0					
ANR	755492	Argument	"""Use tts if available by a command (see ic)"""		748261	2					
ANR	755493	PrimaryExpression	"""Use tts if available by a command (see ic)"""		748261	0					
ANR	755494	ExpressionStatement	"SETCB ( ""scr.hist.block"" , ""true"" , & cb_scr_histblock , ""Use blocks for histogram"" )"	3483:1:122672:122751	748261	606	True				
ANR	755495	CallExpression	"SETCB ( ""scr.hist.block"" , ""true"" , & cb_scr_histblock , ""Use blocks for histogram"" )"		748261	0					
ANR	755496	Callee	SETCB		748261	0					
ANR	755497	Identifier	SETCB		748261	0					
ANR	755498	ArgumentList	"""scr.hist.block"""		748261	1					
ANR	755499	Argument	"""scr.hist.block"""		748261	0					
ANR	755500	PrimaryExpression	"""scr.hist.block"""		748261	0					
ANR	755501	Argument	"""true"""		748261	1					
ANR	755502	PrimaryExpression	"""true"""		748261	0					
ANR	755503	Argument	& cb_scr_histblock		748261	2					
ANR	755504	UnaryOperationExpression	& cb_scr_histblock		748261	0					
ANR	755505	UnaryOperator	&		748261	0					
ANR	755506	Identifier	cb_scr_histblock		748261	1					
ANR	755507	Argument	"""Use blocks for histogram"""		748261	3					
ANR	755508	PrimaryExpression	"""Use blocks for histogram"""		748261	0					
ANR	755509	ExpressionStatement	"SETCB ( ""scr.prompt"" , ""true"" , & cb_scrprompt , ""Show user prompt (used by r2 -q)"" )"	3484:1:122754:122833	748261	607	True				
ANR	755510	CallExpression	"SETCB ( ""scr.prompt"" , ""true"" , & cb_scrprompt , ""Show user prompt (used by r2 -q)"" )"		748261	0					
ANR	755511	Callee	SETCB		748261	0					
ANR	755512	Identifier	SETCB		748261	0					
ANR	755513	ArgumentList	"""scr.prompt"""		748261	1					
ANR	755514	Argument	"""scr.prompt"""		748261	0					
ANR	755515	PrimaryExpression	"""scr.prompt"""		748261	0					
ANR	755516	Argument	"""true"""		748261	1					
ANR	755517	PrimaryExpression	"""true"""		748261	0					
ANR	755518	Argument	& cb_scrprompt		748261	2					
ANR	755519	UnaryOperationExpression	& cb_scrprompt		748261	0					
ANR	755520	UnaryOperator	&		748261	0					
ANR	755521	Identifier	cb_scrprompt		748261	1					
ANR	755522	Argument	"""Show user prompt (used by r2 -q)"""		748261	3					
ANR	755523	PrimaryExpression	"""Show user prompt (used by r2 -q)"""		748261	0					
ANR	755524	ExpressionStatement	"SETCB ( ""scr.tee"" , """" , & cb_teefile , ""Pipe output to file of this name"" )"	3485:1:122836:122906	748261	608	True				
ANR	755525	CallExpression	"SETCB ( ""scr.tee"" , """" , & cb_teefile , ""Pipe output to file of this name"" )"		748261	0					
ANR	755526	Callee	SETCB		748261	0					
ANR	755527	Identifier	SETCB		748261	0					
ANR	755528	ArgumentList	"""scr.tee"""		748261	1					
ANR	755529	Argument	"""scr.tee"""		748261	0					
ANR	755530	PrimaryExpression	"""scr.tee"""		748261	0					
ANR	755531	Argument	""""""		748261	1					
ANR	755532	PrimaryExpression	""""""		748261	0					
ANR	755533	Argument	& cb_teefile		748261	2					
ANR	755534	UnaryOperationExpression	& cb_teefile		748261	0					
ANR	755535	UnaryOperator	&		748261	0					
ANR	755536	Identifier	cb_teefile		748261	1					
ANR	755537	Argument	"""Pipe output to file of this name"""		748261	3					
ANR	755538	PrimaryExpression	"""Pipe output to file of this name"""		748261	0					
ANR	755539	ExpressionStatement	"SETPREF ( ""scr.seek"" , """" , ""Seek to the specified address on startup"" )"	3486:1:122909:122977	748261	609	True				
ANR	755540	CallExpression	"SETPREF ( ""scr.seek"" , """" , ""Seek to the specified address on startup"" )"		748261	0					
ANR	755541	Callee	SETPREF		748261	0					
ANR	755542	Identifier	SETPREF		748261	0					
ANR	755543	ArgumentList	"""scr.seek"""		748261	1					
ANR	755544	Argument	"""scr.seek"""		748261	0					
ANR	755545	PrimaryExpression	"""scr.seek"""		748261	0					
ANR	755546	Argument	""""""		748261	1					
ANR	755547	PrimaryExpression	""""""		748261	0					
ANR	755548	Argument	"""Seek to the specified address on startup"""		748261	2					
ANR	755549	PrimaryExpression	"""Seek to the specified address on startup"""		748261	0					
ANR	755550	ExpressionStatement	"SETICB ( ""scr.color"" , ( core -> print -> flags & R_PRINT_FLAGS_COLOR ) ? COLOR_MODE_16 : COLOR_MODE_DISABLED , & cb_color , ""Enable colors (0: none, 1: ansi, 2: 256 colors, 3: truecolor)"" )"	3487:1:122980:123152	748261	610	True				
ANR	755551	CallExpression	"SETICB ( ""scr.color"" , ( core -> print -> flags & R_PRINT_FLAGS_COLOR ) ? COLOR_MODE_16 : COLOR_MODE_DISABLED , & cb_color , ""Enable colors (0: none, 1: ansi, 2: 256 colors, 3: truecolor)"" )"		748261	0					
ANR	755552	Callee	SETICB		748261	0					
ANR	755553	Identifier	SETICB		748261	0					
ANR	755554	ArgumentList	"""scr.color"""		748261	1					
ANR	755555	Argument	"""scr.color"""		748261	0					
ANR	755556	PrimaryExpression	"""scr.color"""		748261	0					
ANR	755557	Argument	( core -> print -> flags & R_PRINT_FLAGS_COLOR ) ? COLOR_MODE_16 : COLOR_MODE_DISABLED		748261	1					
ANR	755558	ConditionalExpression	( core -> print -> flags & R_PRINT_FLAGS_COLOR ) ? COLOR_MODE_16 : COLOR_MODE_DISABLED		748261	0					
ANR	755559	Condition	core -> print -> flags & R_PRINT_FLAGS_COLOR		748261	0					
ANR	755560	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COLOR		748261	0		&			
ANR	755561	PtrMemberAccess	core -> print -> flags		748261	0					
ANR	755562	PtrMemberAccess	core -> print		748261	0					
ANR	755563	Identifier	core		748261	0					
ANR	755564	Identifier	print		748261	1					
ANR	755565	Identifier	flags		748261	1					
ANR	755566	Identifier	R_PRINT_FLAGS_COLOR		748261	1					
ANR	755567	Identifier	COLOR_MODE_16		748261	1					
ANR	755568	Identifier	COLOR_MODE_DISABLED		748261	2					
ANR	755569	Argument	& cb_color		748261	2					
ANR	755570	UnaryOperationExpression	& cb_color		748261	0					
ANR	755571	UnaryOperator	&		748261	0					
ANR	755572	Identifier	cb_color		748261	1					
ANR	755573	Argument	"""Enable colors (0: none, 1: ansi, 2: 256 colors, 3: truecolor)"""		748261	3					
ANR	755574	PrimaryExpression	"""Enable colors (0: none, 1: ansi, 2: 256 colors, 3: truecolor)"""		748261	0					
ANR	755575	ExpressionStatement	"r_config_set_getter ( cfg , ""scr.color"" , ( RConfigCallback ) cb_color_getter )"	3488:1:123155:123227	748261	611	True				
ANR	755576	CallExpression	"r_config_set_getter ( cfg , ""scr.color"" , ( RConfigCallback ) cb_color_getter )"		748261	0					
ANR	755577	Callee	r_config_set_getter		748261	0					
ANR	755578	Identifier	r_config_set_getter		748261	0					
ANR	755579	ArgumentList	cfg		748261	1					
ANR	755580	Argument	cfg		748261	0					
ANR	755581	Identifier	cfg		748261	0					
ANR	755582	Argument	"""scr.color"""		748261	1					
ANR	755583	PrimaryExpression	"""scr.color"""		748261	0					
ANR	755584	Argument	( RConfigCallback ) cb_color_getter		748261	2					
ANR	755585	CastExpression	( RConfigCallback ) cb_color_getter		748261	0					
ANR	755586	CastTarget	RConfigCallback		748261	0					
ANR	755587	Identifier	cb_color_getter		748261	1					
ANR	755588	ExpressionStatement	"SETCB ( ""scr.color.grep"" , ""false"" , & cb_scr_color_grep , ""Enable colors when using ~grep"" )"	3489:1:123230:123317	748261	612	True				
ANR	755589	CallExpression	"SETCB ( ""scr.color.grep"" , ""false"" , & cb_scr_color_grep , ""Enable colors when using ~grep"" )"		748261	0					
ANR	755590	Callee	SETCB		748261	0					
ANR	755591	Identifier	SETCB		748261	0					
ANR	755592	ArgumentList	"""scr.color.grep"""		748261	1					
ANR	755593	Argument	"""scr.color.grep"""		748261	0					
ANR	755594	PrimaryExpression	"""scr.color.grep"""		748261	0					
ANR	755595	Argument	"""false"""		748261	1					
ANR	755596	PrimaryExpression	"""false"""		748261	0					
ANR	755597	Argument	& cb_scr_color_grep		748261	2					
ANR	755598	UnaryOperationExpression	& cb_scr_color_grep		748261	0					
ANR	755599	UnaryOperator	&		748261	0					
ANR	755600	Identifier	cb_scr_color_grep		748261	1					
ANR	755601	Argument	"""Enable colors when using ~grep"""		748261	3					
ANR	755602	PrimaryExpression	"""Enable colors when using ~grep"""		748261	0					
ANR	755603	ExpressionStatement	"SETPREF ( ""scr.color.pipe"" , ""false"" , ""Enable colors when using pipes"" )"	3490:1:123320:123389	748261	613	True				
ANR	755604	CallExpression	"SETPREF ( ""scr.color.pipe"" , ""false"" , ""Enable colors when using pipes"" )"		748261	0					
ANR	755605	Callee	SETPREF		748261	0					
ANR	755606	Identifier	SETPREF		748261	0					
ANR	755607	ArgumentList	"""scr.color.pipe"""		748261	1					
ANR	755608	Argument	"""scr.color.pipe"""		748261	0					
ANR	755609	PrimaryExpression	"""scr.color.pipe"""		748261	0					
ANR	755610	Argument	"""false"""		748261	1					
ANR	755611	PrimaryExpression	"""false"""		748261	0					
ANR	755612	Argument	"""Enable colors when using pipes"""		748261	2					
ANR	755613	PrimaryExpression	"""Enable colors when using pipes"""		748261	0					
ANR	755614	ExpressionStatement	"SETPREF ( ""scr.color.ops"" , ""true"" , ""Colorize numbers and registers in opcodes"" )"	3491:1:123392:123470	748261	614	True				
ANR	755615	CallExpression	"SETPREF ( ""scr.color.ops"" , ""true"" , ""Colorize numbers and registers in opcodes"" )"		748261	0					
ANR	755616	Callee	SETPREF		748261	0					
ANR	755617	Identifier	SETPREF		748261	0					
ANR	755618	ArgumentList	"""scr.color.ops"""		748261	1					
ANR	755619	Argument	"""scr.color.ops"""		748261	0					
ANR	755620	PrimaryExpression	"""scr.color.ops"""		748261	0					
ANR	755621	Argument	"""true"""		748261	1					
ANR	755622	PrimaryExpression	"""true"""		748261	0					
ANR	755623	Argument	"""Colorize numbers and registers in opcodes"""		748261	2					
ANR	755624	PrimaryExpression	"""Colorize numbers and registers in opcodes"""		748261	0					
ANR	755625	ExpressionStatement	"SETPREF ( ""scr.color.args"" , ""true"" , ""Colorize arguments and variables of functions"" )"	3492:1:123473:123556	748261	615	True				
ANR	755626	CallExpression	"SETPREF ( ""scr.color.args"" , ""true"" , ""Colorize arguments and variables of functions"" )"		748261	0					
ANR	755627	Callee	SETPREF		748261	0					
ANR	755628	Identifier	SETPREF		748261	0					
ANR	755629	ArgumentList	"""scr.color.args"""		748261	1					
ANR	755630	Argument	"""scr.color.args"""		748261	0					
ANR	755631	PrimaryExpression	"""scr.color.args"""		748261	0					
ANR	755632	Argument	"""true"""		748261	1					
ANR	755633	PrimaryExpression	"""true"""		748261	0					
ANR	755634	Argument	"""Colorize arguments and variables of functions"""		748261	2					
ANR	755635	PrimaryExpression	"""Colorize arguments and variables of functions"""		748261	0					
ANR	755636	ExpressionStatement	"SETPREF ( ""scr.color.bytes"" , ""true"" , ""Colorize bytes that represent the opcodes of the instruction"" )"	3493:1:123559:123658	748261	616	True				
ANR	755637	CallExpression	"SETPREF ( ""scr.color.bytes"" , ""true"" , ""Colorize bytes that represent the opcodes of the instruction"" )"		748261	0					
ANR	755638	Callee	SETPREF		748261	0					
ANR	755639	Identifier	SETPREF		748261	0					
ANR	755640	ArgumentList	"""scr.color.bytes"""		748261	1					
ANR	755641	Argument	"""scr.color.bytes"""		748261	0					
ANR	755642	PrimaryExpression	"""scr.color.bytes"""		748261	0					
ANR	755643	Argument	"""true"""		748261	1					
ANR	755644	PrimaryExpression	"""true"""		748261	0					
ANR	755645	Argument	"""Colorize bytes that represent the opcodes of the instruction"""		748261	2					
ANR	755646	PrimaryExpression	"""Colorize bytes that represent the opcodes of the instruction"""		748261	0					
ANR	755647	ExpressionStatement	"SETCB ( ""scr.null"" , ""false"" , & cb_scrnull , ""Show no output"" )"	3494:1:123661:123719	748261	617	True				
ANR	755648	CallExpression	"SETCB ( ""scr.null"" , ""false"" , & cb_scrnull , ""Show no output"" )"		748261	0					
ANR	755649	Callee	SETCB		748261	0					
ANR	755650	Identifier	SETCB		748261	0					
ANR	755651	ArgumentList	"""scr.null"""		748261	1					
ANR	755652	Argument	"""scr.null"""		748261	0					
ANR	755653	PrimaryExpression	"""scr.null"""		748261	0					
ANR	755654	Argument	"""false"""		748261	1					
ANR	755655	PrimaryExpression	"""false"""		748261	0					
ANR	755656	Argument	& cb_scrnull		748261	2					
ANR	755657	UnaryOperationExpression	& cb_scrnull		748261	0					
ANR	755658	UnaryOperator	&		748261	0					
ANR	755659	Identifier	cb_scrnull		748261	1					
ANR	755660	Argument	"""Show no output"""		748261	3					
ANR	755661	PrimaryExpression	"""Show no output"""		748261	0					
ANR	755662	ExpressionStatement	"SETCB ( ""scr.utf8"" , r_str_bool ( r_cons_is_utf8 ( ) ) , & cb_utf8 , ""Show UTF-8 characters instead of ANSI"" )"	3495:1:123722:123822	748261	618	True				
ANR	755663	CallExpression	"SETCB ( ""scr.utf8"" , r_str_bool ( r_cons_is_utf8 ( ) ) , & cb_utf8 , ""Show UTF-8 characters instead of ANSI"" )"		748261	0					
ANR	755664	Callee	SETCB		748261	0					
ANR	755665	Identifier	SETCB		748261	0					
ANR	755666	ArgumentList	"""scr.utf8"""		748261	1					
ANR	755667	Argument	"""scr.utf8"""		748261	0					
ANR	755668	PrimaryExpression	"""scr.utf8"""		748261	0					
ANR	755669	Argument	r_str_bool ( r_cons_is_utf8 ( ) )		748261	1					
ANR	755670	CallExpression	r_str_bool ( r_cons_is_utf8 ( ) )		748261	0					
ANR	755671	Callee	r_str_bool		748261	0					
ANR	755672	Identifier	r_str_bool		748261	0					
ANR	755673	ArgumentList	r_cons_is_utf8 ( )		748261	1					
ANR	755674	Argument	r_cons_is_utf8 ( )		748261	0					
ANR	755675	CallExpression	r_cons_is_utf8 ( )		748261	0					
ANR	755676	Callee	r_cons_is_utf8		748261	0					
ANR	755677	Identifier	r_cons_is_utf8		748261	0					
ANR	755678	ArgumentList			748261	1					
ANR	755679	Argument	& cb_utf8		748261	2					
ANR	755680	UnaryOperationExpression	& cb_utf8		748261	0					
ANR	755681	UnaryOperator	&		748261	0					
ANR	755682	Identifier	cb_utf8		748261	1					
ANR	755683	Argument	"""Show UTF-8 characters instead of ANSI"""		748261	3					
ANR	755684	PrimaryExpression	"""Show UTF-8 characters instead of ANSI"""		748261	0					
ANR	755685	ExpressionStatement	"SETCB ( ""scr.utf8.curvy"" , ""false"" , & cb_utf8_curvy , ""Show curved UTF-8 corners (requires scr.utf8)"" )"	3496:1:123825:123923	748261	619	True				
ANR	755686	CallExpression	"SETCB ( ""scr.utf8.curvy"" , ""false"" , & cb_utf8_curvy , ""Show curved UTF-8 corners (requires scr.utf8)"" )"		748261	0					
ANR	755687	Callee	SETCB		748261	0					
ANR	755688	Identifier	SETCB		748261	0					
ANR	755689	ArgumentList	"""scr.utf8.curvy"""		748261	1					
ANR	755690	Argument	"""scr.utf8.curvy"""		748261	0					
ANR	755691	PrimaryExpression	"""scr.utf8.curvy"""		748261	0					
ANR	755692	Argument	"""false"""		748261	1					
ANR	755693	PrimaryExpression	"""false"""		748261	0					
ANR	755694	Argument	& cb_utf8_curvy		748261	2					
ANR	755695	UnaryOperationExpression	& cb_utf8_curvy		748261	0					
ANR	755696	UnaryOperator	&		748261	0					
ANR	755697	Identifier	cb_utf8_curvy		748261	1					
ANR	755698	Argument	"""Show curved UTF-8 corners (requires scr.utf8)"""		748261	3					
ANR	755699	PrimaryExpression	"""Show curved UTF-8 corners (requires scr.utf8)"""		748261	0					
ANR	755700	ExpressionStatement	"SETPREF ( ""scr.demo"" , ""false"" , ""Use demoscene effects if available"" )"	3497:1:123926:123993	748261	620	True				
ANR	755701	CallExpression	"SETPREF ( ""scr.demo"" , ""false"" , ""Use demoscene effects if available"" )"		748261	0					
ANR	755702	Callee	SETPREF		748261	0					
ANR	755703	Identifier	SETPREF		748261	0					
ANR	755704	ArgumentList	"""scr.demo"""		748261	1					
ANR	755705	Argument	"""scr.demo"""		748261	0					
ANR	755706	PrimaryExpression	"""scr.demo"""		748261	0					
ANR	755707	Argument	"""false"""		748261	1					
ANR	755708	PrimaryExpression	"""false"""		748261	0					
ANR	755709	Argument	"""Use demoscene effects if available"""		748261	2					
ANR	755710	PrimaryExpression	"""Use demoscene effects if available"""		748261	0					
ANR	755711	ExpressionStatement	"SETPREF ( ""scr.histsave"" , ""true"" , ""Always save history on exit"" )"	3498:1:123996:124059	748261	621	True				
ANR	755712	CallExpression	"SETPREF ( ""scr.histsave"" , ""true"" , ""Always save history on exit"" )"		748261	0					
ANR	755713	Callee	SETPREF		748261	0					
ANR	755714	Identifier	SETPREF		748261	0					
ANR	755715	ArgumentList	"""scr.histsave"""		748261	1					
ANR	755716	Argument	"""scr.histsave"""		748261	0					
ANR	755717	PrimaryExpression	"""scr.histsave"""		748261	0					
ANR	755718	Argument	"""true"""		748261	1					
ANR	755719	PrimaryExpression	"""true"""		748261	0					
ANR	755720	Argument	"""Always save history on exit"""		748261	2					
ANR	755721	PrimaryExpression	"""Always save history on exit"""		748261	0					
ANR	755722	ExpressionStatement	"n = NODECB ( ""scr.strconv"" , ""asciiesc"" , & cb_scrstrconv )"	3499:1:124062:124116	748261	622	True				
ANR	755723	AssignmentExpression	"n = NODECB ( ""scr.strconv"" , ""asciiesc"" , & cb_scrstrconv )"		748261	0		=			
ANR	755724	Identifier	n		748261	0					
ANR	755725	CallExpression	"NODECB ( ""scr.strconv"" , ""asciiesc"" , & cb_scrstrconv )"		748261	1					
ANR	755726	Callee	NODECB		748261	0					
ANR	755727	Identifier	NODECB		748261	0					
ANR	755728	ArgumentList	"""scr.strconv"""		748261	1					
ANR	755729	Argument	"""scr.strconv"""		748261	0					
ANR	755730	PrimaryExpression	"""scr.strconv"""		748261	0					
ANR	755731	Argument	"""asciiesc"""		748261	1					
ANR	755732	PrimaryExpression	"""asciiesc"""		748261	0					
ANR	755733	Argument	& cb_scrstrconv		748261	2					
ANR	755734	UnaryOperationExpression	& cb_scrstrconv		748261	0					
ANR	755735	UnaryOperator	&		748261	0					
ANR	755736	Identifier	cb_scrstrconv		748261	1					
ANR	755737	ExpressionStatement	"SETDESC ( n , ""Convert string before display"" )"	3500:1:124119:124163	748261	623	True				
ANR	755738	CallExpression	"SETDESC ( n , ""Convert string before display"" )"		748261	0					
ANR	755739	Callee	SETDESC		748261	0					
ANR	755740	Identifier	SETDESC		748261	0					
ANR	755741	ArgumentList	n		748261	1					
ANR	755742	Argument	n		748261	0					
ANR	755743	Identifier	n		748261	0					
ANR	755744	Argument	"""Convert string before display"""		748261	1					
ANR	755745	PrimaryExpression	"""Convert string before display"""		748261	0					
ANR	755746	ExpressionStatement	"SETOPTIONS ( n , ""asciiesc"" , ""asciidot"" , NULL )"	3501:1:124166:124210	748261	624	True				
ANR	755747	CallExpression	"SETOPTIONS ( n , ""asciiesc"" , ""asciidot"" , NULL )"		748261	0					
ANR	755748	Callee	SETOPTIONS		748261	0					
ANR	755749	Identifier	SETOPTIONS		748261	0					
ANR	755750	ArgumentList	n		748261	1					
ANR	755751	Argument	n		748261	0					
ANR	755752	Identifier	n		748261	0					
ANR	755753	Argument	"""asciiesc"""		748261	1					
ANR	755754	PrimaryExpression	"""asciiesc"""		748261	0					
ANR	755755	Argument	"""asciidot"""		748261	2					
ANR	755756	PrimaryExpression	"""asciidot"""		748261	0					
ANR	755757	Argument	NULL		748261	3					
ANR	755758	Identifier	NULL		748261	0					
ANR	755759	ExpressionStatement	"SETPREF ( ""scr.confirmquit"" , ""false"" , ""Confirm on quit"" )"	3502:1:124213:124268	748261	625	True				
ANR	755760	CallExpression	"SETPREF ( ""scr.confirmquit"" , ""false"" , ""Confirm on quit"" )"		748261	0					
ANR	755761	Callee	SETPREF		748261	0					
ANR	755762	Identifier	SETPREF		748261	0					
ANR	755763	ArgumentList	"""scr.confirmquit"""		748261	1					
ANR	755764	Argument	"""scr.confirmquit"""		748261	0					
ANR	755765	PrimaryExpression	"""scr.confirmquit"""		748261	0					
ANR	755766	Argument	"""false"""		748261	1					
ANR	755767	PrimaryExpression	"""false"""		748261	0					
ANR	755768	Argument	"""Confirm on quit"""		748261	2					
ANR	755769	PrimaryExpression	"""Confirm on quit"""		748261	0					
ANR	755770	ExpressionStatement	"SETCB ( ""str.escbslash"" , ""false"" , & cb_str_escbslash , ""Escape the backslash"" )"	3505:1:124283:124358	748261	626	True				
ANR	755771	CallExpression	"SETCB ( ""str.escbslash"" , ""false"" , & cb_str_escbslash , ""Escape the backslash"" )"		748261	0					
ANR	755772	Callee	SETCB		748261	0					
ANR	755773	Identifier	SETCB		748261	0					
ANR	755774	ArgumentList	"""str.escbslash"""		748261	1					
ANR	755775	Argument	"""str.escbslash"""		748261	0					
ANR	755776	PrimaryExpression	"""str.escbslash"""		748261	0					
ANR	755777	Argument	"""false"""		748261	1					
ANR	755778	PrimaryExpression	"""false"""		748261	0					
ANR	755779	Argument	& cb_str_escbslash		748261	2					
ANR	755780	UnaryOperationExpression	& cb_str_escbslash		748261	0					
ANR	755781	UnaryOperator	&		748261	0					
ANR	755782	Identifier	cb_str_escbslash		748261	1					
ANR	755783	Argument	"""Escape the backslash"""		748261	3					
ANR	755784	PrimaryExpression	"""Escape the backslash"""		748261	0					
ANR	755785	ExpressionStatement	"SETCB ( ""search.contiguous"" , ""true"" , & cb_contiguous , ""Accept contiguous/adjacent search hits"" )"	3508:1:124376:124469	748261	627	True				
ANR	755786	CallExpression	"SETCB ( ""search.contiguous"" , ""true"" , & cb_contiguous , ""Accept contiguous/adjacent search hits"" )"		748261	0					
ANR	755787	Callee	SETCB		748261	0					
ANR	755788	Identifier	SETCB		748261	0					
ANR	755789	ArgumentList	"""search.contiguous"""		748261	1					
ANR	755790	Argument	"""search.contiguous"""		748261	0					
ANR	755791	PrimaryExpression	"""search.contiguous"""		748261	0					
ANR	755792	Argument	"""true"""		748261	1					
ANR	755793	PrimaryExpression	"""true"""		748261	0					
ANR	755794	Argument	& cb_contiguous		748261	2					
ANR	755795	UnaryOperationExpression	& cb_contiguous		748261	0					
ANR	755796	UnaryOperator	&		748261	0					
ANR	755797	Identifier	cb_contiguous		748261	1					
ANR	755798	Argument	"""Accept contiguous/adjacent search hits"""		748261	3					
ANR	755799	PrimaryExpression	"""Accept contiguous/adjacent search hits"""		748261	0					
ANR	755800	ExpressionStatement	"SETICB ( ""search.align"" , 0 , & cb_searchalign , ""Only catch aligned search hits"" )"	3509:1:124472:124549	748261	628	True				
ANR	755801	CallExpression	"SETICB ( ""search.align"" , 0 , & cb_searchalign , ""Only catch aligned search hits"" )"		748261	0					
ANR	755802	Callee	SETICB		748261	0					
ANR	755803	Identifier	SETICB		748261	0					
ANR	755804	ArgumentList	"""search.align"""		748261	1					
ANR	755805	Argument	"""search.align"""		748261	0					
ANR	755806	PrimaryExpression	"""search.align"""		748261	0					
ANR	755807	Argument	0		748261	1					
ANR	755808	PrimaryExpression	0		748261	0					
ANR	755809	Argument	& cb_searchalign		748261	2					
ANR	755810	UnaryOperationExpression	& cb_searchalign		748261	0					
ANR	755811	UnaryOperator	&		748261	0					
ANR	755812	Identifier	cb_searchalign		748261	1					
ANR	755813	Argument	"""Only catch aligned search hits"""		748261	3					
ANR	755814	PrimaryExpression	"""Only catch aligned search hits"""		748261	0					
ANR	755815	ExpressionStatement	"SETI ( ""search.chunk"" , 0 , ""Chunk size for /+ (default size is asm.bits/8"" )"	3510:1:124552:124625	748261	629	True				
ANR	755816	CallExpression	"SETI ( ""search.chunk"" , 0 , ""Chunk size for /+ (default size is asm.bits/8"" )"		748261	0					
ANR	755817	Callee	SETI		748261	0					
ANR	755818	Identifier	SETI		748261	0					
ANR	755819	ArgumentList	"""search.chunk"""		748261	1					
ANR	755820	Argument	"""search.chunk"""		748261	0					
ANR	755821	PrimaryExpression	"""search.chunk"""		748261	0					
ANR	755822	Argument	0		748261	1					
ANR	755823	PrimaryExpression	0		748261	0					
ANR	755824	Argument	"""Chunk size for /+ (default size is asm.bits/8"""		748261	2					
ANR	755825	PrimaryExpression	"""Chunk size for /+ (default size is asm.bits/8"""		748261	0					
ANR	755826	ExpressionStatement	"SETI ( ""search.esilcombo"" , 8 , ""Stop search after N consecutive hits"" )"	3511:1:124628:124696	748261	630	True				
ANR	755827	CallExpression	"SETI ( ""search.esilcombo"" , 8 , ""Stop search after N consecutive hits"" )"		748261	0					
ANR	755828	Callee	SETI		748261	0					
ANR	755829	Identifier	SETI		748261	0					
ANR	755830	ArgumentList	"""search.esilcombo"""		748261	1					
ANR	755831	Argument	"""search.esilcombo"""		748261	0					
ANR	755832	PrimaryExpression	"""search.esilcombo"""		748261	0					
ANR	755833	Argument	8		748261	1					
ANR	755834	PrimaryExpression	8		748261	0					
ANR	755835	Argument	"""Stop search after N consecutive hits"""		748261	2					
ANR	755836	PrimaryExpression	"""Stop search after N consecutive hits"""		748261	0					
ANR	755837	ExpressionStatement	"SETI ( ""search.distance"" , 0 , ""Search string distance"" )"	3512:1:124699:124752	748261	631	True				
ANR	755838	CallExpression	"SETI ( ""search.distance"" , 0 , ""Search string distance"" )"		748261	0					
ANR	755839	Callee	SETI		748261	0					
ANR	755840	Identifier	SETI		748261	0					
ANR	755841	ArgumentList	"""search.distance"""		748261	1					
ANR	755842	Argument	"""search.distance"""		748261	0					
ANR	755843	PrimaryExpression	"""search.distance"""		748261	0					
ANR	755844	Argument	0		748261	1					
ANR	755845	PrimaryExpression	0		748261	0					
ANR	755846	Argument	"""Search string distance"""		748261	2					
ANR	755847	PrimaryExpression	"""Search string distance"""		748261	0					
ANR	755848	ExpressionStatement	"SETPREF ( ""search.flags"" , ""true"" , ""All search results are flagged, otherwise only printed"" )"	3513:1:124755:124845	748261	632	True				
ANR	755849	CallExpression	"SETPREF ( ""search.flags"" , ""true"" , ""All search results are flagged, otherwise only printed"" )"		748261	0					
ANR	755850	Callee	SETPREF		748261	0					
ANR	755851	Identifier	SETPREF		748261	0					
ANR	755852	ArgumentList	"""search.flags"""		748261	1					
ANR	755853	Argument	"""search.flags"""		748261	0					
ANR	755854	PrimaryExpression	"""search.flags"""		748261	0					
ANR	755855	Argument	"""true"""		748261	1					
ANR	755856	PrimaryExpression	"""true"""		748261	0					
ANR	755857	Argument	"""All search results are flagged, otherwise only printed"""		748261	2					
ANR	755858	PrimaryExpression	"""All search results are flagged, otherwise only printed"""		748261	0					
ANR	755859	ExpressionStatement	"SETPREF ( ""search.overlap"" , ""false"" , ""Look for overlapped search hits"" )"	3514:1:124848:124918	748261	633	True				
ANR	755860	CallExpression	"SETPREF ( ""search.overlap"" , ""false"" , ""Look for overlapped search hits"" )"		748261	0					
ANR	755861	Callee	SETPREF		748261	0					
ANR	755862	Identifier	SETPREF		748261	0					
ANR	755863	ArgumentList	"""search.overlap"""		748261	1					
ANR	755864	Argument	"""search.overlap"""		748261	0					
ANR	755865	PrimaryExpression	"""search.overlap"""		748261	0					
ANR	755866	Argument	"""false"""		748261	1					
ANR	755867	PrimaryExpression	"""false"""		748261	0					
ANR	755868	Argument	"""Look for overlapped search hits"""		748261	2					
ANR	755869	PrimaryExpression	"""Look for overlapped search hits"""		748261	0					
ANR	755870	ExpressionStatement	"SETI ( ""search.maxhits"" , 0 , ""Maximum number of hits (0: no limit)"" )"	3515:1:124921:124987	748261	634	True				
ANR	755871	CallExpression	"SETI ( ""search.maxhits"" , 0 , ""Maximum number of hits (0: no limit)"" )"		748261	0					
ANR	755872	Callee	SETI		748261	0					
ANR	755873	Identifier	SETI		748261	0					
ANR	755874	ArgumentList	"""search.maxhits"""		748261	1					
ANR	755875	Argument	"""search.maxhits"""		748261	0					
ANR	755876	PrimaryExpression	"""search.maxhits"""		748261	0					
ANR	755877	Argument	0		748261	1					
ANR	755878	PrimaryExpression	0		748261	0					
ANR	755879	Argument	"""Maximum number of hits (0: no limit)"""		748261	2					
ANR	755880	PrimaryExpression	"""Maximum number of hits (0: no limit)"""		748261	0					
ANR	755881	ExpressionStatement	"SETI ( ""search.from"" , - 1 , ""Search start address"" )"	3516:1:124990:125038	748261	635	True				
ANR	755882	CallExpression	"SETI ( ""search.from"" , - 1 , ""Search start address"" )"		748261	0					
ANR	755883	Callee	SETI		748261	0					
ANR	755884	Identifier	SETI		748261	0					
ANR	755885	ArgumentList	"""search.from"""		748261	1					
ANR	755886	Argument	"""search.from"""		748261	0					
ANR	755887	PrimaryExpression	"""search.from"""		748261	0					
ANR	755888	Argument	- 1		748261	1					
ANR	755889	UnaryOperationExpression	- 1		748261	0					
ANR	755890	UnaryOperator	-		748261	0					
ANR	755891	PrimaryExpression	1		748261	1					
ANR	755892	Argument	"""Search start address"""		748261	2					
ANR	755893	PrimaryExpression	"""Search start address"""		748261	0					
ANR	755894	ExpressionStatement	"n = NODECB ( ""search.in"" , ""io.maps"" , & cb_searchin )"	3517:1:125041:125090	748261	636	True				
ANR	755895	AssignmentExpression	"n = NODECB ( ""search.in"" , ""io.maps"" , & cb_searchin )"		748261	0		=			
ANR	755896	Identifier	n		748261	0					
ANR	755897	CallExpression	"NODECB ( ""search.in"" , ""io.maps"" , & cb_searchin )"		748261	1					
ANR	755898	Callee	NODECB		748261	0					
ANR	755899	Identifier	NODECB		748261	0					
ANR	755900	ArgumentList	"""search.in"""		748261	1					
ANR	755901	Argument	"""search.in"""		748261	0					
ANR	755902	PrimaryExpression	"""search.in"""		748261	0					
ANR	755903	Argument	"""io.maps"""		748261	1					
ANR	755904	PrimaryExpression	"""io.maps"""		748261	0					
ANR	755905	Argument	& cb_searchin		748261	2					
ANR	755906	UnaryOperationExpression	& cb_searchin		748261	0					
ANR	755907	UnaryOperator	&		748261	0					
ANR	755908	Identifier	cb_searchin		748261	1					
ANR	755909	ExpressionStatement	"SETDESC ( n , ""Specify search boundaries"" )"	3518:1:125093:125133	748261	637	True				
ANR	755910	CallExpression	"SETDESC ( n , ""Specify search boundaries"" )"		748261	0					
ANR	755911	Callee	SETDESC		748261	0					
ANR	755912	Identifier	SETDESC		748261	0					
ANR	755913	ArgumentList	n		748261	1					
ANR	755914	Argument	n		748261	0					
ANR	755915	Identifier	n		748261	0					
ANR	755916	Argument	"""Specify search boundaries"""		748261	1					
ANR	755917	PrimaryExpression	"""Specify search boundaries"""		748261	0					
ANR	755918	ExpressionStatement	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"	3519:1:125136:125591	748261	638	True				
ANR	755919	CallExpression	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"		748261	0					
ANR	755920	Callee	SETOPTIONS		748261	0					
ANR	755921	Identifier	SETOPTIONS		748261	0					
ANR	755922	ArgumentList	n		748261	1					
ANR	755923	Argument	n		748261	0					
ANR	755924	Identifier	n		748261	0					
ANR	755925	Argument	"""raw"""		748261	1					
ANR	755926	PrimaryExpression	"""raw"""		748261	0					
ANR	755927	Argument	"""block"""		748261	2					
ANR	755928	PrimaryExpression	"""block"""		748261	0					
ANR	755929	Argument	"""bin.section"""		748261	3					
ANR	755930	PrimaryExpression	"""bin.section"""		748261	0					
ANR	755931	Argument	"""bin.sections"""		748261	4					
ANR	755932	PrimaryExpression	"""bin.sections"""		748261	0					
ANR	755933	Argument	"""bin.sections.rwx"""		748261	5					
ANR	755934	PrimaryExpression	"""bin.sections.rwx"""		748261	0					
ANR	755935	Argument	"""bin.sections.r"""		748261	6					
ANR	755936	PrimaryExpression	"""bin.sections.r"""		748261	0					
ANR	755937	Argument	"""bin.sections.rw"""		748261	7					
ANR	755938	PrimaryExpression	"""bin.sections.rw"""		748261	0					
ANR	755939	Argument	"""bin.sections.rx"""		748261	8					
ANR	755940	PrimaryExpression	"""bin.sections.rx"""		748261	0					
ANR	755941	Argument	"""bin.sections.wx"""		748261	9					
ANR	755942	PrimaryExpression	"""bin.sections.wx"""		748261	0					
ANR	755943	Argument	"""bin.sections.x"""		748261	10					
ANR	755944	PrimaryExpression	"""bin.sections.x"""		748261	0					
ANR	755945	Argument	"""io.map"""		748261	11					
ANR	755946	PrimaryExpression	"""io.map"""		748261	0					
ANR	755947	Argument	"""io.maps"""		748261	12					
ANR	755948	PrimaryExpression	"""io.maps"""		748261	0					
ANR	755949	Argument	"""io.maps.rwx"""		748261	13					
ANR	755950	PrimaryExpression	"""io.maps.rwx"""		748261	0					
ANR	755951	Argument	"""io.maps.r"""		748261	14					
ANR	755952	PrimaryExpression	"""io.maps.r"""		748261	0					
ANR	755953	Argument	"""io.maps.rw"""		748261	15					
ANR	755954	PrimaryExpression	"""io.maps.rw"""		748261	0					
ANR	755955	Argument	"""io.maps.rx"""		748261	16					
ANR	755956	PrimaryExpression	"""io.maps.rx"""		748261	0					
ANR	755957	Argument	"""io.maps.wx"""		748261	17					
ANR	755958	PrimaryExpression	"""io.maps.wx"""		748261	0					
ANR	755959	Argument	"""io.maps.x"""		748261	18					
ANR	755960	PrimaryExpression	"""io.maps.x"""		748261	0					
ANR	755961	Argument	"""dbg.stack"""		748261	19					
ANR	755962	PrimaryExpression	"""dbg.stack"""		748261	0					
ANR	755963	Argument	"""dbg.heap"""		748261	20					
ANR	755964	PrimaryExpression	"""dbg.heap"""		748261	0					
ANR	755965	Argument	"""dbg.map"""		748261	21					
ANR	755966	PrimaryExpression	"""dbg.map"""		748261	0					
ANR	755967	Argument	"""dbg.maps"""		748261	22					
ANR	755968	PrimaryExpression	"""dbg.maps"""		748261	0					
ANR	755969	Argument	"""dbg.maps.rwx"""		748261	23					
ANR	755970	PrimaryExpression	"""dbg.maps.rwx"""		748261	0					
ANR	755971	Argument	"""dbg.maps.r"""		748261	24					
ANR	755972	PrimaryExpression	"""dbg.maps.r"""		748261	0					
ANR	755973	Argument	"""dbg.maps.rw"""		748261	25					
ANR	755974	PrimaryExpression	"""dbg.maps.rw"""		748261	0					
ANR	755975	Argument	"""dbg.maps.rx"""		748261	26					
ANR	755976	PrimaryExpression	"""dbg.maps.rx"""		748261	0					
ANR	755977	Argument	"""dbg.maps.wx"""		748261	27					
ANR	755978	PrimaryExpression	"""dbg.maps.wx"""		748261	0					
ANR	755979	Argument	"""dbg.maps.x"""		748261	28					
ANR	755980	PrimaryExpression	"""dbg.maps.x"""		748261	0					
ANR	755981	Argument	"""anal.fcn"""		748261	29					
ANR	755982	PrimaryExpression	"""anal.fcn"""		748261	0					
ANR	755983	Argument	"""anal.bb"""		748261	30					
ANR	755984	PrimaryExpression	"""anal.bb"""		748261	0					
ANR	755985	Argument	NULL		748261	31					
ANR	755986	Identifier	NULL		748261	0					
ANR	755987	ExpressionStatement	"SETICB ( ""search.kwidx"" , 0 , & cb_search_kwidx , ""Store last search index count"" )"	3526:1:125594:125671	748261	639	True				
ANR	755988	CallExpression	"SETICB ( ""search.kwidx"" , 0 , & cb_search_kwidx , ""Store last search index count"" )"		748261	0					
ANR	755989	Callee	SETICB		748261	0					
ANR	755990	Identifier	SETICB		748261	0					
ANR	755991	ArgumentList	"""search.kwidx"""		748261	1					
ANR	755992	Argument	"""search.kwidx"""		748261	0					
ANR	755993	PrimaryExpression	"""search.kwidx"""		748261	0					
ANR	755994	Argument	0		748261	1					
ANR	755995	PrimaryExpression	0		748261	0					
ANR	755996	Argument	& cb_search_kwidx		748261	2					
ANR	755997	UnaryOperationExpression	& cb_search_kwidx		748261	0					
ANR	755998	UnaryOperator	&		748261	0					
ANR	755999	Identifier	cb_search_kwidx		748261	1					
ANR	756000	Argument	"""Store last search index count"""		748261	3					
ANR	756001	PrimaryExpression	"""Store last search index count"""		748261	0					
ANR	756002	ExpressionStatement	"SETPREF ( ""search.prefix"" , ""hit"" , ""Prefix name in search hits label"" )"	3527:1:125674:125742	748261	640	True				
ANR	756003	CallExpression	"SETPREF ( ""search.prefix"" , ""hit"" , ""Prefix name in search hits label"" )"		748261	0					
ANR	756004	Callee	SETPREF		748261	0					
ANR	756005	Identifier	SETPREF		748261	0					
ANR	756006	ArgumentList	"""search.prefix"""		748261	1					
ANR	756007	Argument	"""search.prefix"""		748261	0					
ANR	756008	PrimaryExpression	"""search.prefix"""		748261	0					
ANR	756009	Argument	"""hit"""		748261	1					
ANR	756010	PrimaryExpression	"""hit"""		748261	0					
ANR	756011	Argument	"""Prefix name in search hits label"""		748261	2					
ANR	756012	PrimaryExpression	"""Prefix name in search hits label"""		748261	0					
ANR	756013	ExpressionStatement	"SETPREF ( ""search.show"" , ""true"" , ""Show search results"" )"	3528:1:125745:125799	748261	641	True				
ANR	756014	CallExpression	"SETPREF ( ""search.show"" , ""true"" , ""Show search results"" )"		748261	0					
ANR	756015	Callee	SETPREF		748261	0					
ANR	756016	Identifier	SETPREF		748261	0					
ANR	756017	ArgumentList	"""search.show"""		748261	1					
ANR	756018	Argument	"""search.show"""		748261	0					
ANR	756019	PrimaryExpression	"""search.show"""		748261	0					
ANR	756020	Argument	"""true"""		748261	1					
ANR	756021	PrimaryExpression	"""true"""		748261	0					
ANR	756022	Argument	"""Show search results"""		748261	2					
ANR	756023	PrimaryExpression	"""Show search results"""		748261	0					
ANR	756024	ExpressionStatement	"SETI ( ""search.to"" , - 1 , ""Search end address"" )"	3529:1:125802:125846	748261	642	True				
ANR	756025	CallExpression	"SETI ( ""search.to"" , - 1 , ""Search end address"" )"		748261	0					
ANR	756026	Callee	SETI		748261	0					
ANR	756027	Identifier	SETI		748261	0					
ANR	756028	ArgumentList	"""search.to"""		748261	1					
ANR	756029	Argument	"""search.to"""		748261	0					
ANR	756030	PrimaryExpression	"""search.to"""		748261	0					
ANR	756031	Argument	- 1		748261	1					
ANR	756032	UnaryOperationExpression	- 1		748261	0					
ANR	756033	UnaryOperator	-		748261	0					
ANR	756034	PrimaryExpression	1		748261	1					
ANR	756035	Argument	"""Search end address"""		748261	2					
ANR	756036	PrimaryExpression	"""Search end address"""		748261	0					
ANR	756037	ExpressionStatement	"SETI ( ""rop.len"" , 5 , ""Maximum ROP gadget length"" )"	3532:1:125861:125909	748261	643	True				
ANR	756038	CallExpression	"SETI ( ""rop.len"" , 5 , ""Maximum ROP gadget length"" )"		748261	0					
ANR	756039	Callee	SETI		748261	0					
ANR	756040	Identifier	SETI		748261	0					
ANR	756041	ArgumentList	"""rop.len"""		748261	1					
ANR	756042	Argument	"""rop.len"""		748261	0					
ANR	756043	PrimaryExpression	"""rop.len"""		748261	0					
ANR	756044	Argument	5		748261	1					
ANR	756045	PrimaryExpression	5		748261	0					
ANR	756046	Argument	"""Maximum ROP gadget length"""		748261	2					
ANR	756047	PrimaryExpression	"""Maximum ROP gadget length"""		748261	0					
ANR	756048	ExpressionStatement	"SETPREF ( ""rop.sdb"" , ""false"" , ""Cache results in sdb (experimental)"" )"	3533:1:125912:125979	748261	644	True				
ANR	756049	CallExpression	"SETPREF ( ""rop.sdb"" , ""false"" , ""Cache results in sdb (experimental)"" )"		748261	0					
ANR	756050	Callee	SETPREF		748261	0					
ANR	756051	Identifier	SETPREF		748261	0					
ANR	756052	ArgumentList	"""rop.sdb"""		748261	1					
ANR	756053	Argument	"""rop.sdb"""		748261	0					
ANR	756054	PrimaryExpression	"""rop.sdb"""		748261	0					
ANR	756055	Argument	"""false"""		748261	1					
ANR	756056	PrimaryExpression	"""false"""		748261	0					
ANR	756057	Argument	"""Cache results in sdb (experimental)"""		748261	2					
ANR	756058	PrimaryExpression	"""Cache results in sdb (experimental)"""		748261	0					
ANR	756059	ExpressionStatement	"SETPREF ( ""rop.db"" , ""true"" , ""Categorize rop gadgets in sdb"" )"	3534:1:125982:126041	748261	645	True				
ANR	756060	CallExpression	"SETPREF ( ""rop.db"" , ""true"" , ""Categorize rop gadgets in sdb"" )"		748261	0					
ANR	756061	Callee	SETPREF		748261	0					
ANR	756062	Identifier	SETPREF		748261	0					
ANR	756063	ArgumentList	"""rop.db"""		748261	1					
ANR	756064	Argument	"""rop.db"""		748261	0					
ANR	756065	PrimaryExpression	"""rop.db"""		748261	0					
ANR	756066	Argument	"""true"""		748261	1					
ANR	756067	PrimaryExpression	"""true"""		748261	0					
ANR	756068	Argument	"""Categorize rop gadgets in sdb"""		748261	2					
ANR	756069	PrimaryExpression	"""Categorize rop gadgets in sdb"""		748261	0					
ANR	756070	ExpressionStatement	"SETPREF ( ""rop.subchains"" , ""false"" , ""Display every length gadget from rop.len=X to 2 in /Rl"" )"	3535:1:126044:126136	748261	646	True				
ANR	756071	CallExpression	"SETPREF ( ""rop.subchains"" , ""false"" , ""Display every length gadget from rop.len=X to 2 in /Rl"" )"		748261	0					
ANR	756072	Callee	SETPREF		748261	0					
ANR	756073	Identifier	SETPREF		748261	0					
ANR	756074	ArgumentList	"""rop.subchains"""		748261	1					
ANR	756075	Argument	"""rop.subchains"""		748261	0					
ANR	756076	PrimaryExpression	"""rop.subchains"""		748261	0					
ANR	756077	Argument	"""false"""		748261	1					
ANR	756078	PrimaryExpression	"""false"""		748261	0					
ANR	756079	Argument	"""Display every length gadget from rop.len=X to 2 in /Rl"""		748261	2					
ANR	756080	PrimaryExpression	"""Display every length gadget from rop.len=X to 2 in /Rl"""		748261	0					
ANR	756081	ExpressionStatement	"SETPREF ( ""rop.conditional"" , ""false"" , ""Include conditional jump, calls and returns in ropsearch"" )"	3536:1:126139:126235	748261	647	True				
ANR	756082	CallExpression	"SETPREF ( ""rop.conditional"" , ""false"" , ""Include conditional jump, calls and returns in ropsearch"" )"		748261	0					
ANR	756083	Callee	SETPREF		748261	0					
ANR	756084	Identifier	SETPREF		748261	0					
ANR	756085	ArgumentList	"""rop.conditional"""		748261	1					
ANR	756086	Argument	"""rop.conditional"""		748261	0					
ANR	756087	PrimaryExpression	"""rop.conditional"""		748261	0					
ANR	756088	Argument	"""false"""		748261	1					
ANR	756089	PrimaryExpression	"""false"""		748261	0					
ANR	756090	Argument	"""Include conditional jump, calls and returns in ropsearch"""		748261	2					
ANR	756091	PrimaryExpression	"""Include conditional jump, calls and returns in ropsearch"""		748261	0					
ANR	756092	ExpressionStatement	"SETPREF ( ""rop.comments"" , ""false"" , ""Display comments in rop search output"" )"	3537:1:126238:126312	748261	648	True				
ANR	756093	CallExpression	"SETPREF ( ""rop.comments"" , ""false"" , ""Display comments in rop search output"" )"		748261	0					
ANR	756094	Callee	SETPREF		748261	0					
ANR	756095	Identifier	SETPREF		748261	0					
ANR	756096	ArgumentList	"""rop.comments"""		748261	1					
ANR	756097	Argument	"""rop.comments"""		748261	0					
ANR	756098	PrimaryExpression	"""rop.comments"""		748261	0					
ANR	756099	Argument	"""false"""		748261	1					
ANR	756100	PrimaryExpression	"""false"""		748261	0					
ANR	756101	Argument	"""Display comments in rop search output"""		748261	2					
ANR	756102	PrimaryExpression	"""Display comments in rop search output"""		748261	0					
ANR	756103	ExpressionStatement	"SETCB ( ""io.cache"" , ""false"" , & cb_io_cache , ""Change both of io.cache.{read,write}"" )"	3540:1:126326:126407	748261	649	True				
ANR	756104	CallExpression	"SETCB ( ""io.cache"" , ""false"" , & cb_io_cache , ""Change both of io.cache.{read,write}"" )"		748261	0					
ANR	756105	Callee	SETCB		748261	0					
ANR	756106	Identifier	SETCB		748261	0					
ANR	756107	ArgumentList	"""io.cache"""		748261	1					
ANR	756108	Argument	"""io.cache"""		748261	0					
ANR	756109	PrimaryExpression	"""io.cache"""		748261	0					
ANR	756110	Argument	"""false"""		748261	1					
ANR	756111	PrimaryExpression	"""false"""		748261	0					
ANR	756112	Argument	& cb_io_cache		748261	2					
ANR	756113	UnaryOperationExpression	& cb_io_cache		748261	0					
ANR	756114	UnaryOperator	&		748261	0					
ANR	756115	Identifier	cb_io_cache		748261	1					
ANR	756116	Argument	"""Change both of io.cache.{read,write}"""		748261	3					
ANR	756117	PrimaryExpression	"""Change both of io.cache.{read,write}"""		748261	0					
ANR	756118	ExpressionStatement	"SETCB ( ""io.cache.auto"" , ""false"" , & cb_io_cache_mode , ""Automatic cache all reads in the IO backend"" )"	3541:1:126410:126508	748261	650	True				
ANR	756119	CallExpression	"SETCB ( ""io.cache.auto"" , ""false"" , & cb_io_cache_mode , ""Automatic cache all reads in the IO backend"" )"		748261	0					
ANR	756120	Callee	SETCB		748261	0					
ANR	756121	Identifier	SETCB		748261	0					
ANR	756122	ArgumentList	"""io.cache.auto"""		748261	1					
ANR	756123	Argument	"""io.cache.auto"""		748261	0					
ANR	756124	PrimaryExpression	"""io.cache.auto"""		748261	0					
ANR	756125	Argument	"""false"""		748261	1					
ANR	756126	PrimaryExpression	"""false"""		748261	0					
ANR	756127	Argument	& cb_io_cache_mode		748261	2					
ANR	756128	UnaryOperationExpression	& cb_io_cache_mode		748261	0					
ANR	756129	UnaryOperator	&		748261	0					
ANR	756130	Identifier	cb_io_cache_mode		748261	1					
ANR	756131	Argument	"""Automatic cache all reads in the IO backend"""		748261	3					
ANR	756132	PrimaryExpression	"""Automatic cache all reads in the IO backend"""		748261	0					
ANR	756133	ExpressionStatement	"SETCB ( ""io.cache.read"" , ""false"" , & cb_io_cache_read , ""Enable read cache for vaddr (or paddr when io.va=0)"" )"	3542:1:126511:126617	748261	651	True				
ANR	756134	CallExpression	"SETCB ( ""io.cache.read"" , ""false"" , & cb_io_cache_read , ""Enable read cache for vaddr (or paddr when io.va=0)"" )"		748261	0					
ANR	756135	Callee	SETCB		748261	0					
ANR	756136	Identifier	SETCB		748261	0					
ANR	756137	ArgumentList	"""io.cache.read"""		748261	1					
ANR	756138	Argument	"""io.cache.read"""		748261	0					
ANR	756139	PrimaryExpression	"""io.cache.read"""		748261	0					
ANR	756140	Argument	"""false"""		748261	1					
ANR	756141	PrimaryExpression	"""false"""		748261	0					
ANR	756142	Argument	& cb_io_cache_read		748261	2					
ANR	756143	UnaryOperationExpression	& cb_io_cache_read		748261	0					
ANR	756144	UnaryOperator	&		748261	0					
ANR	756145	Identifier	cb_io_cache_read		748261	1					
ANR	756146	Argument	"""Enable read cache for vaddr (or paddr when io.va=0)"""		748261	3					
ANR	756147	PrimaryExpression	"""Enable read cache for vaddr (or paddr when io.va=0)"""		748261	0					
ANR	756148	ExpressionStatement	"SETCB ( ""io.cache.write"" , ""false"" , & cb_io_cache_write , ""Enable write cache for vaddr (or paddr when io.va=0)"" )"	3543:1:126620:126729	748261	652	True				
ANR	756149	CallExpression	"SETCB ( ""io.cache.write"" , ""false"" , & cb_io_cache_write , ""Enable write cache for vaddr (or paddr when io.va=0)"" )"		748261	0					
ANR	756150	Callee	SETCB		748261	0					
ANR	756151	Identifier	SETCB		748261	0					
ANR	756152	ArgumentList	"""io.cache.write"""		748261	1					
ANR	756153	Argument	"""io.cache.write"""		748261	0					
ANR	756154	PrimaryExpression	"""io.cache.write"""		748261	0					
ANR	756155	Argument	"""false"""		748261	1					
ANR	756156	PrimaryExpression	"""false"""		748261	0					
ANR	756157	Argument	& cb_io_cache_write		748261	2					
ANR	756158	UnaryOperationExpression	& cb_io_cache_write		748261	0					
ANR	756159	UnaryOperator	&		748261	0					
ANR	756160	Identifier	cb_io_cache_write		748261	1					
ANR	756161	Argument	"""Enable write cache for vaddr (or paddr when io.va=0)"""		748261	3					
ANR	756162	PrimaryExpression	"""Enable write cache for vaddr (or paddr when io.va=0)"""		748261	0					
ANR	756163	ExpressionStatement	"SETCB ( ""io.pcache"" , ""false"" , & cb_iopcache , ""io.cache for p-level"" )"	3544:1:126732:126798	748261	653	True				
ANR	756164	CallExpression	"SETCB ( ""io.pcache"" , ""false"" , & cb_iopcache , ""io.cache for p-level"" )"		748261	0					
ANR	756165	Callee	SETCB		748261	0					
ANR	756166	Identifier	SETCB		748261	0					
ANR	756167	ArgumentList	"""io.pcache"""		748261	1					
ANR	756168	Argument	"""io.pcache"""		748261	0					
ANR	756169	PrimaryExpression	"""io.pcache"""		748261	0					
ANR	756170	Argument	"""false"""		748261	1					
ANR	756171	PrimaryExpression	"""false"""		748261	0					
ANR	756172	Argument	& cb_iopcache		748261	2					
ANR	756173	UnaryOperationExpression	& cb_iopcache		748261	0					
ANR	756174	UnaryOperator	&		748261	0					
ANR	756175	Identifier	cb_iopcache		748261	1					
ANR	756176	Argument	"""io.cache for p-level"""		748261	3					
ANR	756177	PrimaryExpression	"""io.cache for p-level"""		748261	0					
ANR	756178	ExpressionStatement	"SETCB ( ""io.pcache.write"" , ""false"" , & cb_iopcachewrite , ""Enable write-cache"" )"	3545:1:126801:126876	748261	654	True				
ANR	756179	CallExpression	"SETCB ( ""io.pcache.write"" , ""false"" , & cb_iopcachewrite , ""Enable write-cache"" )"		748261	0					
ANR	756180	Callee	SETCB		748261	0					
ANR	756181	Identifier	SETCB		748261	0					
ANR	756182	ArgumentList	"""io.pcache.write"""		748261	1					
ANR	756183	Argument	"""io.pcache.write"""		748261	0					
ANR	756184	PrimaryExpression	"""io.pcache.write"""		748261	0					
ANR	756185	Argument	"""false"""		748261	1					
ANR	756186	PrimaryExpression	"""false"""		748261	0					
ANR	756187	Argument	& cb_iopcachewrite		748261	2					
ANR	756188	UnaryOperationExpression	& cb_iopcachewrite		748261	0					
ANR	756189	UnaryOperator	&		748261	0					
ANR	756190	Identifier	cb_iopcachewrite		748261	1					
ANR	756191	Argument	"""Enable write-cache"""		748261	3					
ANR	756192	PrimaryExpression	"""Enable write-cache"""		748261	0					
ANR	756193	ExpressionStatement	"SETCB ( ""io.pcache.read"" , ""false"" , & cb_iopcacheread , ""Enable read-cache"" )"	3546:1:126879:126951	748261	655	True				
ANR	756194	CallExpression	"SETCB ( ""io.pcache.read"" , ""false"" , & cb_iopcacheread , ""Enable read-cache"" )"		748261	0					
ANR	756195	Callee	SETCB		748261	0					
ANR	756196	Identifier	SETCB		748261	0					
ANR	756197	ArgumentList	"""io.pcache.read"""		748261	1					
ANR	756198	Argument	"""io.pcache.read"""		748261	0					
ANR	756199	PrimaryExpression	"""io.pcache.read"""		748261	0					
ANR	756200	Argument	"""false"""		748261	1					
ANR	756201	PrimaryExpression	"""false"""		748261	0					
ANR	756202	Argument	& cb_iopcacheread		748261	2					
ANR	756203	UnaryOperationExpression	& cb_iopcacheread		748261	0					
ANR	756204	UnaryOperator	&		748261	0					
ANR	756205	Identifier	cb_iopcacheread		748261	1					
ANR	756206	Argument	"""Enable read-cache"""		748261	3					
ANR	756207	PrimaryExpression	"""Enable read-cache"""		748261	0					
ANR	756208	ExpressionStatement	"SETCB ( ""io.ff"" , ""true"" , & cb_ioff , ""Fill invalid buffers with 0xff instead of returning error"" )"	3547:1:126954:127048	748261	656	True				
ANR	756209	CallExpression	"SETCB ( ""io.ff"" , ""true"" , & cb_ioff , ""Fill invalid buffers with 0xff instead of returning error"" )"		748261	0					
ANR	756210	Callee	SETCB		748261	0					
ANR	756211	Identifier	SETCB		748261	0					
ANR	756212	ArgumentList	"""io.ff"""		748261	1					
ANR	756213	Argument	"""io.ff"""		748261	0					
ANR	756214	PrimaryExpression	"""io.ff"""		748261	0					
ANR	756215	Argument	"""true"""		748261	1					
ANR	756216	PrimaryExpression	"""true"""		748261	0					
ANR	756217	Argument	& cb_ioff		748261	2					
ANR	756218	UnaryOperationExpression	& cb_ioff		748261	0					
ANR	756219	UnaryOperator	&		748261	0					
ANR	756220	Identifier	cb_ioff		748261	1					
ANR	756221	Argument	"""Fill invalid buffers with 0xff instead of returning error"""		748261	3					
ANR	756222	PrimaryExpression	"""Fill invalid buffers with 0xff instead of returning error"""		748261	0					
ANR	756223	ExpressionStatement	"SETPREF ( ""io.exec"" , ""true"" , ""See !!r2 -h~-x"" )"	3548:1:127051:127096	748261	657	True				
ANR	756224	CallExpression	"SETPREF ( ""io.exec"" , ""true"" , ""See !!r2 -h~-x"" )"		748261	0					
ANR	756225	Callee	SETPREF		748261	0					
ANR	756226	Identifier	SETPREF		748261	0					
ANR	756227	ArgumentList	"""io.exec"""		748261	1					
ANR	756228	Argument	"""io.exec"""		748261	0					
ANR	756229	PrimaryExpression	"""io.exec"""		748261	0					
ANR	756230	Argument	"""true"""		748261	1					
ANR	756231	PrimaryExpression	"""true"""		748261	0					
ANR	756232	Argument	"""See !!r2 -h~-x"""		748261	2					
ANR	756233	PrimaryExpression	"""See !!r2 -h~-x"""		748261	0					
ANR	756234	ExpressionStatement	"SETICB ( ""io.0xff"" , 0xff , & cb_io_oxff , ""Use this value instead of 0xff to fill unallocated areas"" )"	3549:1:127099:127196	748261	658	True				
ANR	756235	CallExpression	"SETICB ( ""io.0xff"" , 0xff , & cb_io_oxff , ""Use this value instead of 0xff to fill unallocated areas"" )"		748261	0					
ANR	756236	Callee	SETICB		748261	0					
ANR	756237	Identifier	SETICB		748261	0					
ANR	756238	ArgumentList	"""io.0xff"""		748261	1					
ANR	756239	Argument	"""io.0xff"""		748261	0					
ANR	756240	PrimaryExpression	"""io.0xff"""		748261	0					
ANR	756241	Argument	0xff		748261	1					
ANR	756242	PrimaryExpression	0xff		748261	0					
ANR	756243	Argument	& cb_io_oxff		748261	2					
ANR	756244	UnaryOperationExpression	& cb_io_oxff		748261	0					
ANR	756245	UnaryOperator	&		748261	0					
ANR	756246	Identifier	cb_io_oxff		748261	1					
ANR	756247	Argument	"""Use this value instead of 0xff to fill unallocated areas"""		748261	3					
ANR	756248	PrimaryExpression	"""Use this value instead of 0xff to fill unallocated areas"""		748261	0					
ANR	756249	ExpressionStatement	"SETCB ( ""io.aslr"" , ""false"" , & cb_ioaslr , ""Disable ASLR for spawn and such"" )"	3550:1:127199:127272	748261	659	True				
ANR	756250	CallExpression	"SETCB ( ""io.aslr"" , ""false"" , & cb_ioaslr , ""Disable ASLR for spawn and such"" )"		748261	0					
ANR	756251	Callee	SETCB		748261	0					
ANR	756252	Identifier	SETCB		748261	0					
ANR	756253	ArgumentList	"""io.aslr"""		748261	1					
ANR	756254	Argument	"""io.aslr"""		748261	0					
ANR	756255	PrimaryExpression	"""io.aslr"""		748261	0					
ANR	756256	Argument	"""false"""		748261	1					
ANR	756257	PrimaryExpression	"""false"""		748261	0					
ANR	756258	Argument	& cb_ioaslr		748261	2					
ANR	756259	UnaryOperationExpression	& cb_ioaslr		748261	0					
ANR	756260	UnaryOperator	&		748261	0					
ANR	756261	Identifier	cb_ioaslr		748261	1					
ANR	756262	Argument	"""Disable ASLR for spawn and such"""		748261	3					
ANR	756263	PrimaryExpression	"""Disable ASLR for spawn and such"""		748261	0					
ANR	756264	ExpressionStatement	"SETCB ( ""io.va"" , ""true"" , & cb_iova , ""Use virtual address layout"" )"	3551:1:127275:127338	748261	660	True				
ANR	756265	CallExpression	"SETCB ( ""io.va"" , ""true"" , & cb_iova , ""Use virtual address layout"" )"		748261	0					
ANR	756266	Callee	SETCB		748261	0					
ANR	756267	Identifier	SETCB		748261	0					
ANR	756268	ArgumentList	"""io.va"""		748261	1					
ANR	756269	Argument	"""io.va"""		748261	0					
ANR	756270	PrimaryExpression	"""io.va"""		748261	0					
ANR	756271	Argument	"""true"""		748261	1					
ANR	756272	PrimaryExpression	"""true"""		748261	0					
ANR	756273	Argument	& cb_iova		748261	2					
ANR	756274	UnaryOperationExpression	& cb_iova		748261	0					
ANR	756275	UnaryOperator	&		748261	0					
ANR	756276	Identifier	cb_iova		748261	1					
ANR	756277	Argument	"""Use virtual address layout"""		748261	3					
ANR	756278	PrimaryExpression	"""Use virtual address layout"""		748261	0					
ANR	756279	ExpressionStatement	"SETCB ( ""io.pava"" , ""false"" , & cb_io_pava , ""Use EXPERIMENTAL paddr -> vaddr address mode"" )"	3552:1:127341:127428	748261	661	True				
ANR	756280	CallExpression	"SETCB ( ""io.pava"" , ""false"" , & cb_io_pava , ""Use EXPERIMENTAL paddr -> vaddr address mode"" )"		748261	0					
ANR	756281	Callee	SETCB		748261	0					
ANR	756282	Identifier	SETCB		748261	0					
ANR	756283	ArgumentList	"""io.pava"""		748261	1					
ANR	756284	Argument	"""io.pava"""		748261	0					
ANR	756285	PrimaryExpression	"""io.pava"""		748261	0					
ANR	756286	Argument	"""false"""		748261	1					
ANR	756287	PrimaryExpression	"""false"""		748261	0					
ANR	756288	Argument	& cb_io_pava		748261	2					
ANR	756289	UnaryOperationExpression	& cb_io_pava		748261	0					
ANR	756290	UnaryOperator	&		748261	0					
ANR	756291	Identifier	cb_io_pava		748261	1					
ANR	756292	Argument	"""Use EXPERIMENTAL paddr -> vaddr address mode"""		748261	3					
ANR	756293	PrimaryExpression	"""Use EXPERIMENTAL paddr -> vaddr address mode"""		748261	0					
ANR	756294	ExpressionStatement	"SETCB ( ""io.autofd"" , ""true"" , & cb_ioautofd , ""Change fd when opening a new file"" )"	3553:1:127431:127509	748261	662	True				
ANR	756295	CallExpression	"SETCB ( ""io.autofd"" , ""true"" , & cb_ioautofd , ""Change fd when opening a new file"" )"		748261	0					
ANR	756296	Callee	SETCB		748261	0					
ANR	756297	Identifier	SETCB		748261	0					
ANR	756298	ArgumentList	"""io.autofd"""		748261	1					
ANR	756299	Argument	"""io.autofd"""		748261	0					
ANR	756300	PrimaryExpression	"""io.autofd"""		748261	0					
ANR	756301	Argument	"""true"""		748261	1					
ANR	756302	PrimaryExpression	"""true"""		748261	0					
ANR	756303	Argument	& cb_ioautofd		748261	2					
ANR	756304	UnaryOperationExpression	& cb_ioautofd		748261	0					
ANR	756305	UnaryOperator	&		748261	0					
ANR	756306	Identifier	cb_ioautofd		748261	1					
ANR	756307	Argument	"""Change fd when opening a new file"""		748261	3					
ANR	756308	PrimaryExpression	"""Change fd when opening a new file"""		748261	0					
ANR	756309	ExpressionStatement	"SETPREF ( ""file.desc"" , """" , ""User defined file description (used by projects)"" )"	3556:1:127525:127602	748261	663	True				
ANR	756310	CallExpression	"SETPREF ( ""file.desc"" , """" , ""User defined file description (used by projects)"" )"		748261	0					
ANR	756311	Callee	SETPREF		748261	0					
ANR	756312	Identifier	SETPREF		748261	0					
ANR	756313	ArgumentList	"""file.desc"""		748261	1					
ANR	756314	Argument	"""file.desc"""		748261	0					
ANR	756315	PrimaryExpression	"""file.desc"""		748261	0					
ANR	756316	Argument	""""""		748261	1					
ANR	756317	PrimaryExpression	""""""		748261	0					
ANR	756318	Argument	"""User defined file description (used by projects)"""		748261	2					
ANR	756319	PrimaryExpression	"""User defined file description (used by projects)"""		748261	0					
ANR	756320	ExpressionStatement	"SETPREF ( ""file.md5"" , """" , ""MD5 sum of current file"" )"	3557:1:127605:127656	748261	664	True				
ANR	756321	CallExpression	"SETPREF ( ""file.md5"" , """" , ""MD5 sum of current file"" )"		748261	0					
ANR	756322	Callee	SETPREF		748261	0					
ANR	756323	Identifier	SETPREF		748261	0					
ANR	756324	ArgumentList	"""file.md5"""		748261	1					
ANR	756325	Argument	"""file.md5"""		748261	0					
ANR	756326	PrimaryExpression	"""file.md5"""		748261	0					
ANR	756327	Argument	""""""		748261	1					
ANR	756328	PrimaryExpression	""""""		748261	0					
ANR	756329	Argument	"""MD5 sum of current file"""		748261	2					
ANR	756330	PrimaryExpression	"""MD5 sum of current file"""		748261	0					
ANR	756331	ExpressionStatement	"SETPREF ( ""file.info"" , ""true"" , ""RBin info loaded"" )"	3558:1:127659:127708	748261	665	True				
ANR	756332	CallExpression	"SETPREF ( ""file.info"" , ""true"" , ""RBin info loaded"" )"		748261	0					
ANR	756333	Callee	SETPREF		748261	0					
ANR	756334	Identifier	SETPREF		748261	0					
ANR	756335	ArgumentList	"""file.info"""		748261	1					
ANR	756336	Argument	"""file.info"""		748261	0					
ANR	756337	PrimaryExpression	"""file.info"""		748261	0					
ANR	756338	Argument	"""true"""		748261	1					
ANR	756339	PrimaryExpression	"""true"""		748261	0					
ANR	756340	Argument	"""RBin info loaded"""		748261	2					
ANR	756341	PrimaryExpression	"""RBin info loaded"""		748261	0					
ANR	756342	ExpressionStatement	"SETPREF ( ""file.offset"" , """" , ""Offset where the file will be mapped at"" )"	3559:1:127711:127781	748261	666	True				
ANR	756343	CallExpression	"SETPREF ( ""file.offset"" , """" , ""Offset where the file will be mapped at"" )"		748261	0					
ANR	756344	Callee	SETPREF		748261	0					
ANR	756345	Identifier	SETPREF		748261	0					
ANR	756346	ArgumentList	"""file.offset"""		748261	1					
ANR	756347	Argument	"""file.offset"""		748261	0					
ANR	756348	PrimaryExpression	"""file.offset"""		748261	0					
ANR	756349	Argument	""""""		748261	1					
ANR	756350	PrimaryExpression	""""""		748261	0					
ANR	756351	Argument	"""Offset where the file will be mapped at"""		748261	2					
ANR	756352	PrimaryExpression	"""Offset where the file will be mapped at"""		748261	0					
ANR	756353	ExpressionStatement	"SETCB ( ""file.path"" , """" , & cb_filepath , ""Path of current file"" )"	3560:1:127784:127845	748261	667	True				
ANR	756354	CallExpression	"SETCB ( ""file.path"" , """" , & cb_filepath , ""Path of current file"" )"		748261	0					
ANR	756355	Callee	SETCB		748261	0					
ANR	756356	Identifier	SETCB		748261	0					
ANR	756357	ArgumentList	"""file.path"""		748261	1					
ANR	756358	Argument	"""file.path"""		748261	0					
ANR	756359	PrimaryExpression	"""file.path"""		748261	0					
ANR	756360	Argument	""""""		748261	1					
ANR	756361	PrimaryExpression	""""""		748261	0					
ANR	756362	Argument	& cb_filepath		748261	2					
ANR	756363	UnaryOperationExpression	& cb_filepath		748261	0					
ANR	756364	UnaryOperator	&		748261	0					
ANR	756365	Identifier	cb_filepath		748261	1					
ANR	756366	Argument	"""Path of current file"""		748261	3					
ANR	756367	PrimaryExpression	"""Path of current file"""		748261	0					
ANR	756368	ExpressionStatement	"SETPREF ( ""file.lastpath"" , """" , ""Path of current file"" )"	3561:1:127848:127901	748261	668	True				
ANR	756369	CallExpression	"SETPREF ( ""file.lastpath"" , """" , ""Path of current file"" )"		748261	0					
ANR	756370	Callee	SETPREF		748261	0					
ANR	756371	Identifier	SETPREF		748261	0					
ANR	756372	ArgumentList	"""file.lastpath"""		748261	1					
ANR	756373	Argument	"""file.lastpath"""		748261	0					
ANR	756374	PrimaryExpression	"""file.lastpath"""		748261	0					
ANR	756375	Argument	""""""		748261	1					
ANR	756376	PrimaryExpression	""""""		748261	0					
ANR	756377	Argument	"""Path of current file"""		748261	2					
ANR	756378	PrimaryExpression	"""Path of current file"""		748261	0					
ANR	756379	ExpressionStatement	"SETPREF ( ""file.type"" , """" , ""Type of current file"" )"	3562:1:127904:127953	748261	669	True				
ANR	756380	CallExpression	"SETPREF ( ""file.type"" , """" , ""Type of current file"" )"		748261	0					
ANR	756381	Callee	SETPREF		748261	0					
ANR	756382	Identifier	SETPREF		748261	0					
ANR	756383	ArgumentList	"""file.type"""		748261	1					
ANR	756384	Argument	"""file.type"""		748261	0					
ANR	756385	PrimaryExpression	"""file.type"""		748261	0					
ANR	756386	Argument	""""""		748261	1					
ANR	756387	PrimaryExpression	""""""		748261	0					
ANR	756388	Argument	"""Type of current file"""		748261	2					
ANR	756389	PrimaryExpression	"""Type of current file"""		748261	0					
ANR	756390	ExpressionStatement	"SETI ( ""file.loadalign"" , 1024 , ""Alignment of load addresses"" )"	3563:1:127956:128016	748261	670	True				
ANR	756391	CallExpression	"SETI ( ""file.loadalign"" , 1024 , ""Alignment of load addresses"" )"		748261	0					
ANR	756392	Callee	SETI		748261	0					
ANR	756393	Identifier	SETI		748261	0					
ANR	756394	ArgumentList	"""file.loadalign"""		748261	1					
ANR	756395	Argument	"""file.loadalign"""		748261	0					
ANR	756396	PrimaryExpression	"""file.loadalign"""		748261	0					
ANR	756397	Argument	1024		748261	1					
ANR	756398	PrimaryExpression	1024		748261	0					
ANR	756399	Argument	"""Alignment of load addresses"""		748261	2					
ANR	756400	PrimaryExpression	"""Alignment of load addresses"""		748261	0					
ANR	756401	ExpressionStatement	"SETI ( ""file.openmany"" , 1 , ""Maximum number of files opened at once"" )"	3564:1:128019:128086	748261	671	True				
ANR	756402	CallExpression	"SETI ( ""file.openmany"" , 1 , ""Maximum number of files opened at once"" )"		748261	0					
ANR	756403	Callee	SETI		748261	0					
ANR	756404	Identifier	SETI		748261	0					
ANR	756405	ArgumentList	"""file.openmany"""		748261	1					
ANR	756406	Argument	"""file.openmany"""		748261	0					
ANR	756407	PrimaryExpression	"""file.openmany"""		748261	0					
ANR	756408	Argument	1		748261	1					
ANR	756409	PrimaryExpression	1		748261	0					
ANR	756410	Argument	"""Maximum number of files opened at once"""		748261	2					
ANR	756411	PrimaryExpression	"""Maximum number of files opened at once"""		748261	0					
ANR	756412	ExpressionStatement	"SETPREF ( ""file.location"" , """" , ""Is the file 'local', 'remote', or 'memory'"" )"	3565:1:128089:128164	748261	672	True				
ANR	756413	CallExpression	"SETPREF ( ""file.location"" , """" , ""Is the file 'local', 'remote', or 'memory'"" )"		748261	0					
ANR	756414	Callee	SETPREF		748261	0					
ANR	756415	Identifier	SETPREF		748261	0					
ANR	756416	ArgumentList	"""file.location"""		748261	1					
ANR	756417	Argument	"""file.location"""		748261	0					
ANR	756418	PrimaryExpression	"""file.location"""		748261	0					
ANR	756419	Argument	""""""		748261	1					
ANR	756420	PrimaryExpression	""""""		748261	0					
ANR	756421	Argument	"""Is the file 'local', 'remote', or 'memory'"""		748261	2					
ANR	756422	PrimaryExpression	"""Is the file 'local', 'remote', or 'memory'"""		748261	0					
ANR	756423	ExpressionStatement	"SETI ( ""magic.depth"" , 100 , ""Recursivity depth in magic description strings"" )"	3567:1:128180:128255	748261	673	True				
ANR	756424	CallExpression	"SETI ( ""magic.depth"" , 100 , ""Recursivity depth in magic description strings"" )"		748261	0					
ANR	756425	Callee	SETI		748261	0					
ANR	756426	Identifier	SETI		748261	0					
ANR	756427	ArgumentList	"""magic.depth"""		748261	1					
ANR	756428	Argument	"""magic.depth"""		748261	0					
ANR	756429	PrimaryExpression	"""magic.depth"""		748261	0					
ANR	756430	Argument	100		748261	1					
ANR	756431	PrimaryExpression	100		748261	0					
ANR	756432	Argument	"""Recursivity depth in magic description strings"""		748261	2					
ANR	756433	PrimaryExpression	"""Recursivity depth in magic description strings"""		748261	0					
ANR	756434	ExpressionStatement	"SETPREF ( ""rap.loop"" , ""true"" , ""Run rap as a forever-listening daemon (=:9090)"" )"	3570:1:128270:128348	748261	674	True				
ANR	756435	CallExpression	"SETPREF ( ""rap.loop"" , ""true"" , ""Run rap as a forever-listening daemon (=:9090)"" )"		748261	0					
ANR	756436	Callee	SETPREF		748261	0					
ANR	756437	Identifier	SETPREF		748261	0					
ANR	756438	ArgumentList	"""rap.loop"""		748261	1					
ANR	756439	Argument	"""rap.loop"""		748261	0					
ANR	756440	PrimaryExpression	"""rap.loop"""		748261	0					
ANR	756441	Argument	"""true"""		748261	1					
ANR	756442	PrimaryExpression	"""true"""		748261	0					
ANR	756443	Argument	"""Run rap as a forever-listening daemon (=:9090)"""		748261	2					
ANR	756444	PrimaryExpression	"""Run rap as a forever-listening daemon (=:9090)"""		748261	0					
ANR	756445	ExpressionStatement	"SETPREF ( ""key.s"" , """" , ""override step into action"" )"	3573:1:128365:128415	748261	675	True				
ANR	756446	CallExpression	"SETPREF ( ""key.s"" , """" , ""override step into action"" )"		748261	0					
ANR	756447	Callee	SETPREF		748261	0					
ANR	756448	Identifier	SETPREF		748261	0					
ANR	756449	ArgumentList	"""key.s"""		748261	1					
ANR	756450	Argument	"""key.s"""		748261	0					
ANR	756451	PrimaryExpression	"""key.s"""		748261	0					
ANR	756452	Argument	""""""		748261	1					
ANR	756453	PrimaryExpression	""""""		748261	0					
ANR	756454	Argument	"""override step into action"""		748261	2					
ANR	756455	PrimaryExpression	"""override step into action"""		748261	0					
ANR	756456	ExpressionStatement	"SETPREF ( ""key.S"" , """" , ""override step over action"" )"	3574:1:128418:128468	748261	676	True				
ANR	756457	CallExpression	"SETPREF ( ""key.S"" , """" , ""override step over action"" )"		748261	0					
ANR	756458	Callee	SETPREF		748261	0					
ANR	756459	Identifier	SETPREF		748261	0					
ANR	756460	ArgumentList	"""key.S"""		748261	1					
ANR	756461	Argument	"""key.S"""		748261	0					
ANR	756462	PrimaryExpression	"""key.S"""		748261	0					
ANR	756463	Argument	""""""		748261	1					
ANR	756464	PrimaryExpression	""""""		748261	0					
ANR	756465	Argument	"""override step over action"""		748261	2					
ANR	756466	PrimaryExpression	"""override step over action"""		748261	0					
ANR	756467	ForStatement	for ( i = 1 ; i < 13 ; i ++ )		748261	677					
ANR	756468	ForInit	i = 1 ;	3575:6:128476:128481	748261	0	True				
ANR	756469	AssignmentExpression	i = 1		748261	0		=			
ANR	756470	Identifier	i		748261	0					
ANR	756471	PrimaryExpression	1		748261	1					
ANR	756472	Condition	i < 13	3575:13:128483:128488	748261	1	True				
ANR	756473	RelationalExpression	i < 13		748261	0		<			
ANR	756474	Identifier	i		748261	0					
ANR	756475	PrimaryExpression	13		748261	1					
ANR	756476	PostIncDecOperationExpression	i ++	3575:21:128491:128493	748261	2	True				
ANR	756477	Identifier	i		748261	0					
ANR	756478	IncDec	++		748261	1					
ANR	756479	CompoundStatement		830:26:53822:53822	748261	3					
ANR	756480	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""key.f%d"" , i )"	3576:2:128500:128542	748261	0	True				
ANR	756481	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""key.f%d"" , i )"		748261	0					
ANR	756482	Callee	snprintf		748261	0					
ANR	756483	Identifier	snprintf		748261	0					
ANR	756484	ArgumentList	buf		748261	1					
ANR	756485	Argument	buf		748261	0					
ANR	756486	Identifier	buf		748261	0					
ANR	756487	Argument	sizeof ( buf )		748261	1					
ANR	756488	SizeofExpression	sizeof ( buf )		748261	0					
ANR	756489	Sizeof	sizeof		748261	0					
ANR	756490	SizeofOperand	buf		748261	1					
ANR	756491	Argument	"""key.f%d"""		748261	2					
ANR	756492	PrimaryExpression	"""key.f%d"""		748261	0					
ANR	756493	Argument	i		748261	3					
ANR	756494	Identifier	i		748261	0					
ANR	756495	ExpressionStatement	"snprintf ( buf + 10 , sizeof ( buf ) - 10 , ""Run this when F%d key is pressed in visual mode"" , i )"	3577:2:128546:128642	748261	1	True				
ANR	756496	CallExpression	"snprintf ( buf + 10 , sizeof ( buf ) - 10 , ""Run this when F%d key is pressed in visual mode"" , i )"		748261	0					
ANR	756497	Callee	snprintf		748261	0					
ANR	756498	Identifier	snprintf		748261	0					
ANR	756499	ArgumentList	buf + 10		748261	1					
ANR	756500	Argument	buf + 10		748261	0					
ANR	756501	AdditiveExpression	buf + 10		748261	0		+			
ANR	756502	Identifier	buf		748261	0					
ANR	756503	PrimaryExpression	10		748261	1					
ANR	756504	Argument	sizeof ( buf ) - 10		748261	1					
ANR	756505	AdditiveExpression	sizeof ( buf ) - 10		748261	0		-			
ANR	756506	SizeofExpression	sizeof ( buf )		748261	0					
ANR	756507	Sizeof	sizeof		748261	0					
ANR	756508	SizeofOperand	buf		748261	1					
ANR	756509	PrimaryExpression	10		748261	1					
ANR	756510	Argument	"""Run this when F%d key is pressed in visual mode"""		748261	2					
ANR	756511	PrimaryExpression	"""Run this when F%d key is pressed in visual mode"""		748261	0					
ANR	756512	Argument	i		748261	3					
ANR	756513	Identifier	i		748261	0					
ANR	756514	SwitchStatement	switch ( i )		748261	2					
ANR	756515	Condition	i	3579:10:128654:128654	748261	0	True				
ANR	756516	Identifier	i		748261	0					
ANR	756517	CompoundStatement		834:13:53983:53983	748261	1					
ANR	756518	Label	default :	3580:3:128662:128669	748261	0	True				
ANR	756519	Identifier	default		748261	0					
ANR	756520	ExpressionStatement	"p = """""	3580:12:128671:128677	748261	1	True				
ANR	756521	AssignmentExpression	"p = """""		748261	0		=			
ANR	756522	Identifier	p		748261	0					
ANR	756523	PrimaryExpression	""""""		748261	1					
ANR	756524	BreakStatement	break ;	3580:20:128679:128684	748261	2	True				
ANR	756525	ExpressionStatement	"r_config_set ( cfg , buf , p )"	3582:2:128692:128718	748261	3	True				
ANR	756526	CallExpression	"r_config_set ( cfg , buf , p )"		748261	0					
ANR	756527	Callee	r_config_set		748261	0					
ANR	756528	Identifier	r_config_set		748261	0					
ANR	756529	ArgumentList	cfg		748261	1					
ANR	756530	Argument	cfg		748261	0					
ANR	756531	Identifier	cfg		748261	0					
ANR	756532	Argument	buf		748261	1					
ANR	756533	Identifier	buf		748261	0					
ANR	756534	Argument	p		748261	2					
ANR	756535	Identifier	p		748261	0					
ANR	756536	ExpressionStatement	"r_config_desc ( cfg , buf , buf + 10 )"	3583:2:128722:128754	748261	4	True				
ANR	756537	CallExpression	"r_config_desc ( cfg , buf , buf + 10 )"		748261	0					
ANR	756538	Callee	r_config_desc		748261	0					
ANR	756539	Identifier	r_config_desc		748261	0					
ANR	756540	ArgumentList	cfg		748261	1					
ANR	756541	Argument	cfg		748261	0					
ANR	756542	Identifier	cfg		748261	0					
ANR	756543	Argument	buf		748261	1					
ANR	756544	Identifier	buf		748261	0					
ANR	756545	Argument	buf + 10		748261	2					
ANR	756546	AdditiveExpression	buf + 10		748261	0		+			
ANR	756547	Identifier	buf		748261	0					
ANR	756548	PrimaryExpression	10		748261	1					
ANR	756549	ExpressionStatement	"SETCB ( ""zoom.byte"" , ""h"" , & cb_zoombyte , ""Zoom callback to calculate each byte (See pz? for help)"" )"	3587:1:128773:128870	748261	678	True				
ANR	756550	CallExpression	"SETCB ( ""zoom.byte"" , ""h"" , & cb_zoombyte , ""Zoom callback to calculate each byte (See pz? for help)"" )"		748261	0					
ANR	756551	Callee	SETCB		748261	0					
ANR	756552	Identifier	SETCB		748261	0					
ANR	756553	ArgumentList	"""zoom.byte"""		748261	1					
ANR	756554	Argument	"""zoom.byte"""		748261	0					
ANR	756555	PrimaryExpression	"""zoom.byte"""		748261	0					
ANR	756556	Argument	"""h"""		748261	1					
ANR	756557	PrimaryExpression	"""h"""		748261	0					
ANR	756558	Argument	& cb_zoombyte		748261	2					
ANR	756559	UnaryOperationExpression	& cb_zoombyte		748261	0					
ANR	756560	UnaryOperator	&		748261	0					
ANR	756561	Identifier	cb_zoombyte		748261	1					
ANR	756562	Argument	"""Zoom callback to calculate each byte (See pz? for help)"""		748261	3					
ANR	756563	PrimaryExpression	"""Zoom callback to calculate each byte (See pz? for help)"""		748261	0					
ANR	756564	ExpressionStatement	"SETI ( ""zoom.from"" , 0 , ""Zoom start address"" )"	3588:1:128873:128916	748261	679	True				
ANR	756565	CallExpression	"SETI ( ""zoom.from"" , 0 , ""Zoom start address"" )"		748261	0					
ANR	756566	Callee	SETI		748261	0					
ANR	756567	Identifier	SETI		748261	0					
ANR	756568	ArgumentList	"""zoom.from"""		748261	1					
ANR	756569	Argument	"""zoom.from"""		748261	0					
ANR	756570	PrimaryExpression	"""zoom.from"""		748261	0					
ANR	756571	Argument	0		748261	1					
ANR	756572	PrimaryExpression	0		748261	0					
ANR	756573	Argument	"""Zoom start address"""		748261	2					
ANR	756574	PrimaryExpression	"""Zoom start address"""		748261	0					
ANR	756575	ExpressionStatement	"SETI ( ""zoom.maxsz"" , 512 , ""Zoom max size of block"" )"	3589:1:128919:128969	748261	680	True				
ANR	756576	CallExpression	"SETI ( ""zoom.maxsz"" , 512 , ""Zoom max size of block"" )"		748261	0					
ANR	756577	Callee	SETI		748261	0					
ANR	756578	Identifier	SETI		748261	0					
ANR	756579	ArgumentList	"""zoom.maxsz"""		748261	1					
ANR	756580	Argument	"""zoom.maxsz"""		748261	0					
ANR	756581	PrimaryExpression	"""zoom.maxsz"""		748261	0					
ANR	756582	Argument	512		748261	1					
ANR	756583	PrimaryExpression	512		748261	0					
ANR	756584	Argument	"""Zoom max size of block"""		748261	2					
ANR	756585	PrimaryExpression	"""Zoom max size of block"""		748261	0					
ANR	756586	ExpressionStatement	"SETI ( ""zoom.to"" , 0 , ""Zoom end address"" )"	3590:1:128972:129011	748261	681	True				
ANR	756587	CallExpression	"SETI ( ""zoom.to"" , 0 , ""Zoom end address"" )"		748261	0					
ANR	756588	Callee	SETI		748261	0					
ANR	756589	Identifier	SETI		748261	0					
ANR	756590	ArgumentList	"""zoom.to"""		748261	1					
ANR	756591	Argument	"""zoom.to"""		748261	0					
ANR	756592	PrimaryExpression	"""zoom.to"""		748261	0					
ANR	756593	Argument	0		748261	1					
ANR	756594	PrimaryExpression	0		748261	0					
ANR	756595	Argument	"""Zoom end address"""		748261	2					
ANR	756596	PrimaryExpression	"""Zoom end address"""		748261	0					
ANR	756597	ExpressionStatement	"n = NODECB ( ""zoom.in"" , ""io.map"" , & cb_searchin )"	3591:1:129014:129060	748261	682	True				
ANR	756598	AssignmentExpression	"n = NODECB ( ""zoom.in"" , ""io.map"" , & cb_searchin )"		748261	0		=			
ANR	756599	Identifier	n		748261	0					
ANR	756600	CallExpression	"NODECB ( ""zoom.in"" , ""io.map"" , & cb_searchin )"		748261	1					
ANR	756601	Callee	NODECB		748261	0					
ANR	756602	Identifier	NODECB		748261	0					
ANR	756603	ArgumentList	"""zoom.in"""		748261	1					
ANR	756604	Argument	"""zoom.in"""		748261	0					
ANR	756605	PrimaryExpression	"""zoom.in"""		748261	0					
ANR	756606	Argument	"""io.map"""		748261	1					
ANR	756607	PrimaryExpression	"""io.map"""		748261	0					
ANR	756608	Argument	& cb_searchin		748261	2					
ANR	756609	UnaryOperationExpression	& cb_searchin		748261	0					
ANR	756610	UnaryOperator	&		748261	0					
ANR	756611	Identifier	cb_searchin		748261	1					
ANR	756612	ExpressionStatement	"SETDESC ( n , ""Specify  boundaries for zoom"" )"	3592:1:129063:129106	748261	683	True				
ANR	756613	CallExpression	"SETDESC ( n , ""Specify  boundaries for zoom"" )"		748261	0					
ANR	756614	Callee	SETDESC		748261	0					
ANR	756615	Identifier	SETDESC		748261	0					
ANR	756616	ArgumentList	n		748261	1					
ANR	756617	Argument	n		748261	0					
ANR	756618	Identifier	n		748261	0					
ANR	756619	Argument	"""Specify  boundaries for zoom"""		748261	1					
ANR	756620	PrimaryExpression	"""Specify  boundaries for zoom"""		748261	0					
ANR	756621	ExpressionStatement	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"	3593:1:129109:129564	748261	684	True				
ANR	756622	CallExpression	"SETOPTIONS ( n , ""raw"" , ""block"" , ""bin.section"" , ""bin.sections"" , ""bin.sections.rwx"" , ""bin.sections.r"" , ""bin.sections.rw"" , ""bin.sections.rx"" , ""bin.sections.wx"" , ""bin.sections.x"" , ""io.map"" , ""io.maps"" , ""io.maps.rwx"" , ""io.maps.r"" , ""io.maps.rw"" , ""io.maps.rx"" , ""io.maps.wx"" , ""io.maps.x"" , ""dbg.stack"" , ""dbg.heap"" , ""dbg.map"" , ""dbg.maps"" , ""dbg.maps.rwx"" , ""dbg.maps.r"" , ""dbg.maps.rw"" , ""dbg.maps.rx"" , ""dbg.maps.wx"" , ""dbg.maps.x"" , ""anal.fcn"" , ""anal.bb"" , NULL )"		748261	0					
ANR	756623	Callee	SETOPTIONS		748261	0					
ANR	756624	Identifier	SETOPTIONS		748261	0					
ANR	756625	ArgumentList	n		748261	1					
ANR	756626	Argument	n		748261	0					
ANR	756627	Identifier	n		748261	0					
ANR	756628	Argument	"""raw"""		748261	1					
ANR	756629	PrimaryExpression	"""raw"""		748261	0					
ANR	756630	Argument	"""block"""		748261	2					
ANR	756631	PrimaryExpression	"""block"""		748261	0					
ANR	756632	Argument	"""bin.section"""		748261	3					
ANR	756633	PrimaryExpression	"""bin.section"""		748261	0					
ANR	756634	Argument	"""bin.sections"""		748261	4					
ANR	756635	PrimaryExpression	"""bin.sections"""		748261	0					
ANR	756636	Argument	"""bin.sections.rwx"""		748261	5					
ANR	756637	PrimaryExpression	"""bin.sections.rwx"""		748261	0					
ANR	756638	Argument	"""bin.sections.r"""		748261	6					
ANR	756639	PrimaryExpression	"""bin.sections.r"""		748261	0					
ANR	756640	Argument	"""bin.sections.rw"""		748261	7					
ANR	756641	PrimaryExpression	"""bin.sections.rw"""		748261	0					
ANR	756642	Argument	"""bin.sections.rx"""		748261	8					
ANR	756643	PrimaryExpression	"""bin.sections.rx"""		748261	0					
ANR	756644	Argument	"""bin.sections.wx"""		748261	9					
ANR	756645	PrimaryExpression	"""bin.sections.wx"""		748261	0					
ANR	756646	Argument	"""bin.sections.x"""		748261	10					
ANR	756647	PrimaryExpression	"""bin.sections.x"""		748261	0					
ANR	756648	Argument	"""io.map"""		748261	11					
ANR	756649	PrimaryExpression	"""io.map"""		748261	0					
ANR	756650	Argument	"""io.maps"""		748261	12					
ANR	756651	PrimaryExpression	"""io.maps"""		748261	0					
ANR	756652	Argument	"""io.maps.rwx"""		748261	13					
ANR	756653	PrimaryExpression	"""io.maps.rwx"""		748261	0					
ANR	756654	Argument	"""io.maps.r"""		748261	14					
ANR	756655	PrimaryExpression	"""io.maps.r"""		748261	0					
ANR	756656	Argument	"""io.maps.rw"""		748261	15					
ANR	756657	PrimaryExpression	"""io.maps.rw"""		748261	0					
ANR	756658	Argument	"""io.maps.rx"""		748261	16					
ANR	756659	PrimaryExpression	"""io.maps.rx"""		748261	0					
ANR	756660	Argument	"""io.maps.wx"""		748261	17					
ANR	756661	PrimaryExpression	"""io.maps.wx"""		748261	0					
ANR	756662	Argument	"""io.maps.x"""		748261	18					
ANR	756663	PrimaryExpression	"""io.maps.x"""		748261	0					
ANR	756664	Argument	"""dbg.stack"""		748261	19					
ANR	756665	PrimaryExpression	"""dbg.stack"""		748261	0					
ANR	756666	Argument	"""dbg.heap"""		748261	20					
ANR	756667	PrimaryExpression	"""dbg.heap"""		748261	0					
ANR	756668	Argument	"""dbg.map"""		748261	21					
ANR	756669	PrimaryExpression	"""dbg.map"""		748261	0					
ANR	756670	Argument	"""dbg.maps"""		748261	22					
ANR	756671	PrimaryExpression	"""dbg.maps"""		748261	0					
ANR	756672	Argument	"""dbg.maps.rwx"""		748261	23					
ANR	756673	PrimaryExpression	"""dbg.maps.rwx"""		748261	0					
ANR	756674	Argument	"""dbg.maps.r"""		748261	24					
ANR	756675	PrimaryExpression	"""dbg.maps.r"""		748261	0					
ANR	756676	Argument	"""dbg.maps.rw"""		748261	25					
ANR	756677	PrimaryExpression	"""dbg.maps.rw"""		748261	0					
ANR	756678	Argument	"""dbg.maps.rx"""		748261	26					
ANR	756679	PrimaryExpression	"""dbg.maps.rx"""		748261	0					
ANR	756680	Argument	"""dbg.maps.wx"""		748261	27					
ANR	756681	PrimaryExpression	"""dbg.maps.wx"""		748261	0					
ANR	756682	Argument	"""dbg.maps.x"""		748261	28					
ANR	756683	PrimaryExpression	"""dbg.maps.x"""		748261	0					
ANR	756684	Argument	"""anal.fcn"""		748261	29					
ANR	756685	PrimaryExpression	"""anal.fcn"""		748261	0					
ANR	756686	Argument	"""anal.bb"""		748261	30					
ANR	756687	PrimaryExpression	"""anal.bb"""		748261	0					
ANR	756688	Argument	NULL		748261	31					
ANR	756689	Identifier	NULL		748261	0					
ANR	756690	ExpressionStatement	"SETI ( ""lines.from"" , 0 , ""Start address for line seek"" )"	3601:1:129580:129633	748261	685	True				
ANR	756691	CallExpression	"SETI ( ""lines.from"" , 0 , ""Start address for line seek"" )"		748261	0					
ANR	756692	Callee	SETI		748261	0					
ANR	756693	Identifier	SETI		748261	0					
ANR	756694	ArgumentList	"""lines.from"""		748261	1					
ANR	756695	Argument	"""lines.from"""		748261	0					
ANR	756696	PrimaryExpression	"""lines.from"""		748261	0					
ANR	756697	Argument	0		748261	1					
ANR	756698	PrimaryExpression	0		748261	0					
ANR	756699	Argument	"""Start address for line seek"""		748261	2					
ANR	756700	PrimaryExpression	"""Start address for line seek"""		748261	0					
ANR	756701	ExpressionStatement	"SETCB ( ""lines.to"" , ""$s"" , & cb_linesto , ""End address for line seek"" )"	3602:1:129636:129702	748261	686	True				
ANR	756702	CallExpression	"SETCB ( ""lines.to"" , ""$s"" , & cb_linesto , ""End address for line seek"" )"		748261	0					
ANR	756703	Callee	SETCB		748261	0					
ANR	756704	Identifier	SETCB		748261	0					
ANR	756705	ArgumentList	"""lines.to"""		748261	1					
ANR	756706	Argument	"""lines.to"""		748261	0					
ANR	756707	PrimaryExpression	"""lines.to"""		748261	0					
ANR	756708	Argument	"""$s"""		748261	1					
ANR	756709	PrimaryExpression	"""$s"""		748261	0					
ANR	756710	Argument	& cb_linesto		748261	2					
ANR	756711	UnaryOperationExpression	& cb_linesto		748261	0					
ANR	756712	UnaryOperator	&		748261	0					
ANR	756713	Identifier	cb_linesto		748261	1					
ANR	756714	Argument	"""End address for line seek"""		748261	3					
ANR	756715	PrimaryExpression	"""End address for line seek"""		748261	0					
ANR	756716	ExpressionStatement	"SETCB ( ""lines.abs"" , ""false"" , & cb_linesabs , ""Enable absolute line numbers"" )"	3603:1:129705:129779	748261	687	True				
ANR	756717	CallExpression	"SETCB ( ""lines.abs"" , ""false"" , & cb_linesabs , ""Enable absolute line numbers"" )"		748261	0					
ANR	756718	Callee	SETCB		748261	0					
ANR	756719	Identifier	SETCB		748261	0					
ANR	756720	ArgumentList	"""lines.abs"""		748261	1					
ANR	756721	Argument	"""lines.abs"""		748261	0					
ANR	756722	PrimaryExpression	"""lines.abs"""		748261	0					
ANR	756723	Argument	"""false"""		748261	1					
ANR	756724	PrimaryExpression	"""false"""		748261	0					
ANR	756725	Argument	& cb_linesabs		748261	2					
ANR	756726	UnaryOperationExpression	& cb_linesabs		748261	0					
ANR	756727	UnaryOperator	&		748261	0					
ANR	756728	Identifier	cb_linesabs		748261	1					
ANR	756729	Argument	"""Enable absolute line numbers"""		748261	3					
ANR	756730	PrimaryExpression	"""Enable absolute line numbers"""		748261	0					
ANR	756731	ExpressionStatement	"r_config_lock ( cfg , true )"	3605:1:129783:129808	748261	688	True				
ANR	756732	CallExpression	"r_config_lock ( cfg , true )"		748261	0					
ANR	756733	Callee	r_config_lock		748261	0					
ANR	756734	Identifier	r_config_lock		748261	0					
ANR	756735	ArgumentList	cfg		748261	1					
ANR	756736	Argument	cfg		748261	0					
ANR	756737	Identifier	cfg		748261	0					
ANR	756738	Argument	true		748261	1					
ANR	756739	Identifier	true		748261	0					
ANR	756740	ReturnStatement	return true ;	3606:1:129811:129822	748261	689	True				
ANR	756741	Identifier	true		748261	0					
ANR	756742	ReturnType	R_API int		748261	1					
ANR	756743	Identifier	r_core_config_init		748261	2					
ANR	756744	ParameterList	RCore * core		748261	3					
ANR	756745	Parameter	RCore * core	2746:29:74660:74670	748261	0	True				
ANR	756746	ParameterType	RCore *		748261	0					
ANR	756747	Identifier	core		748261	1					
ANR	756748	CFGEntryNode	ENTRY		748261		True				
ANR	756749	CFGExitNode	EXIT		748261		True				
ANR	756750	Symbol	& cb_hex_ascii		748261						
ANR	756751	Symbol	& scr_ansicon		748261						
ANR	756752	Symbol	& cb_binminstr		748261						
ANR	756753	Symbol	& cb_mdevrange		748261						
ANR	756754	Symbol	& cb_runprofile		748261						
ANR	756755	Symbol	R_SYS_ARCH		748261						
ANR	756756	Symbol	& cb_analijmp		748261						
ANR	756757	Symbol	& cb_dirtmp		748261						
ANR	756758	Symbol	r_cons_singleton ( ) -> ansicon		748261						
ANR	756759	Symbol	R2_HOME_PDB		748261						
ANR	756760	Symbol	path		748261						
ANR	756761	Symbol	& cb_analsleep		748261						
ANR	756762	Symbol	& cb_zoombyte		748261						
ANR	756763	Symbol	& cb_useldr		748261						
ANR	756764	Symbol	& cb_fixrows		748261						
ANR	756765	Symbol	& cb_graphformat		748261						
ANR	756766	Symbol	& cb_io_cache_mode		748261						
ANR	756767	Symbol	& cb_hexcols		748261						
ANR	756768	Symbol	& cb_anal_roregs		748261						
ANR	756769	Symbol	R2_SDB_MAGIC		748261						
ANR	756770	Symbol	& cb_dirzigns		748261						
ANR	756771	Symbol	& cb_dirpfx		748261						
ANR	756772	Symbol	cfg -> cb_printf		748261						
ANR	756773	Symbol	& cb_analstrings		748261						
ANR	756774	Symbol	& cb_scrflush		748261						
ANR	756775	Symbol	tmpdir		748261						
ANR	756776	Symbol	& cb_maxname		748261						
ANR	756777	Symbol	& cb_io_cache_read		748261						
ANR	756778	Symbol	& cb_binmaxstr		748261						
ANR	756779	Symbol	& cb_analverbose		748261						
ANR	756780	Symbol	r_cons_is_utf8		748261						
ANR	756781	Symbol	& cb_iopcacheread		748261						
ANR	756782	Symbol	& cb_rawstr		748261						
ANR	756783	Symbol	& cb_dbg_clone		748261						
ANR	756784	Symbol	core -> print -> flags		748261						
ANR	756785	Symbol	& cb_dbg_args		748261						
ANR	756786	Symbol	R2_HOME_WWWROOT		748261						
ANR	756787	Symbol	* core		748261						
ANR	756788	Symbol	& cb_tracetag		748261						
ANR	756789	Symbol	r_sys_prefix		748261						
ANR	756790	Symbol	core -> anal		748261						
ANR	756791	Symbol	COLOR_MODE_16		748261						
ANR	756792	Symbol	core -> cons		748261						
ANR	756793	Symbol	& cb_segoff		748261						
ANR	756794	Symbol	& cb_scrnkey		748261						
ANR	756795	Symbol	& cb_asmpseudo		748261						
ANR	756796	Symbol	& cb_utf8_curvy		748261						
ANR	756797	Symbol	& cb_esilstackdepth		748261						
ANR	756798	Symbol	& cb_dbgsnap		748261						
ANR	756799	Symbol	cfg		748261						
ANR	756800	Symbol	& cb_analgraphdepth		748261						
ANR	756801	Symbol	h		748261						
ANR	756802	Symbol	i		748261						
ANR	756803	Symbol	& cb_cmdlog		748261						
ANR	756804	Symbol	cmdpdc		748261						
ANR	756805	Symbol	& cb_diff_sort		748261						
ANR	756806	Symbol	n		748261						
ANR	756807	Symbol	& cb_asmarch		748261						
ANR	756808	Symbol	p		748261						
ANR	756809	Symbol	& cb_cmdrepeat		748261						
ANR	756810	Symbol	buf		748261						
ANR	756811	Symbol	NODECB		748261						
ANR	756812	Symbol	* core -> print		748261						
ANR	756813	Symbol	& cb_cfg_fortunes_type		748261						
ANR	756814	Symbol	& cb_iopcachewrite		748261						
ANR	756815	Symbol	& cb_analarmthumb		748261						
ANR	756816	Symbol	* r_cons_singleton		748261						
ANR	756817	Symbol	& cb_trace		748261						
ANR	756818	Symbol	& cb_anal_bb_max_size		748261						
ANR	756819	Symbol	& cb_dbg_execs		748261						
ANR	756820	Symbol	& cb_io_cache		748261						
ANR	756821	Symbol	& cb_analmaxrefs		748261						
ANR	756822	Symbol	& cb_anal_rnr		748261						
ANR	756823	Symbol	& cb_fsview		748261						
ANR	756824	Symbol	& cb_scrstrconv		748261						
ANR	756825	Symbol	& cb_cmd_esil_step_out		748261						
ANR	756826	Symbol	& cb_anal_ignbithints		748261						
ANR	756827	Symbol	& cb_dbg_gdb_page_size		748261						
ANR	756828	Symbol	& cb_scrhighlight		748261						
ANR	756829	Symbol	& cb_anal_pushret		748261						
ANR	756830	Symbol	r_config_new		748261						
ANR	756831	Symbol	& cb_dbgstatus		748261						
ANR	756832	Symbol	& cb_asmparser		748261						
ANR	756833	Symbol	& cb_cmd_esil_trap		748261						
ANR	756834	Symbol	& cb_dotted		748261						
ANR	756835	Symbol	& cb_analvars		748261						
ANR	756836	Symbol	& cb_anal_cpp_abi		748261						
ANR	756837	Symbol	& cb_cmddepth		748261						
ANR	756838	Symbol	& cb_analrecont		748261						
ANR	756839	Symbol	& cb_dbg_libs		748261						
ANR	756840	Symbol	R_JOIN_2_PATHS		748261						
ANR	756841	Symbol	& cb_asmlineswidth		748261						
ANR	756842	Symbol	& cb_io_cache_write		748261						
ANR	756843	Symbol	& cb_pager		748261						
ANR	756844	Symbol	& cb_linesto		748261						
ANR	756845	Symbol	& cb_cmd_esil_step		748261						
ANR	756846	Symbol	R_SYS_TMP		748261						
ANR	756847	Symbol	& cb_dbg_unlibs		748261						
ANR	756848	Symbol	& cb_analex		748261						
ANR	756849	Symbol	& cb_scrcolumns		748261						
ANR	756850	Symbol	& cb_ioautofd		748261						
ANR	756851	Symbol	& cb_anal_jmpref		748261						
ANR	756852	Symbol	& cb_anal_jmpabove		748261						
ANR	756853	Symbol	& cb_analarch		748261						
ANR	756854	Symbol	& cb_analnopskip		748261						
ANR	756855	Symbol	& cb_scr_color_grep_highlight		748261						
ANR	756856	Symbol	& cb_debase64		748261						
ANR	756857	Symbol	& cb_fixcolumns		748261						
ANR	756858	Symbol	& cb_scrlast		748261						
ANR	756859	Symbol	& cb_cmd_hexcursor		748261						
ANR	756860	Symbol	& cb_bigendian		748261						
ANR	756861	Symbol	false		748261						
ANR	756862	Symbol	& cb_binforce		748261						
ANR	756863	Symbol	& cb_dbgbpsize		748261						
ANR	756864	Symbol	& cb_analafterjmp		748261						
ANR	756865	Symbol	asmarch		748261						
ANR	756866	Symbol	& cb_fps		748261						
ANR	756867	Symbol	& cb_cfg_fortunes		748261						
ANR	756868	Symbol	& cb_dirhome		748261						
ANR	756869	Symbol	& cb_scr_histblock		748261						
ANR	756870	Symbol	strdup		748261						
ANR	756871	Symbol	& cb_asmcpu		748261						
ANR	756872	Symbol	& cb_asmsyntax		748261						
ANR	756873	Symbol	& cb_strpurge		748261						
ANR	756874	Symbol	& cb_dbg_forks		748261						
ANR	756875	Symbol	& cb_breaklines		748261						
ANR	756876	Symbol	& cb_anal_cjmpref		748261						
ANR	756877	Symbol	& cb_iotrap		748261						
ANR	756878	Symbol	& cb_scr_wideoff		748261						
ANR	756879	Symbol	& cb_timezone		748261						
ANR	756880	Symbol	r_sys_getenv		748261						
ANR	756881	Symbol	COLOR_MODE_DISABLED		748261						
ANR	756882	Symbol	& cb_cmd_esil_mdev		748261						
ANR	756883	Symbol	cb_log_config_file		748261						
ANR	756884	Symbol	& cb_anal_loads		748261						
ANR	756885	Symbol	& cb_binat		748261						
ANR	756886	Symbol	& cb_decoff		748261						
ANR	756887	Symbol	& cb_bdc		748261						
ANR	756888	Symbol	__dbg_swstep_getter		748261						
ANR	756889	Symbol	& cb_usextr		748261						
ANR	756890	Symbol	& cb_hex_hdroff		748261						
ANR	756891	Symbol	& cb_scr_gadgets		748261						
ANR	756892	Symbol	& cb_iopcache		748261						
ANR	756893	Symbol	& cb_asm_invhex		748261						
ANR	756894	Symbol	& cb_anal_searchstringrefs		748261						
ANR	756895	Symbol	& cb_asm_armimm		748261						
ANR	756896	Symbol	& cb_dbg_verbose		748261						
ANR	756897	Symbol	& cb_io_unalloc		748261						
ANR	756898	Symbol	& cb_searchin		748261						
ANR	756899	Symbol	& cb_scrrainbow		748261						
ANR	756900	Symbol	r_file_tmpdir		748261						
ANR	756901	Symbol	& cb_anal_from		748261						
ANR	756902	Symbol	& cb_asmos		748261						
ANR	756903	Symbol	& cb_analdepth		748261						
ANR	756904	Symbol	* cfg		748261						
ANR	756905	Symbol	invoke_dir		748261						
ANR	756906	Symbol	& cb_hex_bytes		748261						
ANR	756907	Symbol	cb_scrfgets		748261						
ANR	756908	Symbol	& cb_scrbreakword		748261						
ANR	756909	Symbol	& cb_analeobjmp		748261						
ANR	756910	Symbol	r_sys_whoami		748261						
ANR	756911	Symbol	asmcpu		748261						
ANR	756912	Symbol	& cb_dirsrc		748261						
ANR	756913	Symbol	pfx		748261						
ANR	756914	Symbol	& cb_anal_trycatch		748261						
ANR	756915	Symbol	& cb_exectrap		748261						
ANR	756916	Symbol	* core -> cons		748261						
ANR	756917	Symbol	& cb_binfilter		748261						
ANR	756918	Symbol	r_config_get		748261						
ANR	756919	Symbol	& cb_hex_header		748261						
ANR	756920	Symbol	& cb_io_pava		748261						
ANR	756921	Symbol	& cb_cfgsanbox		748261						
ANR	756922	Symbol	& cb_scr_color_grep		748261						
ANR	756923	Symbol	& cb_esilverbose		748261						
ANR	756924	Symbol	& cb_screcho		748261						
ANR	756925	Symbol	& cb_anal_gp		748261						
ANR	756926	Symbol	& cb_color		748261						
ANR	756927	Symbol	& cb_log_events		748261						
ANR	756928	Symbol	& cb_utf8		748261						
ANR	756929	Symbol	& cb_searchalign		748261						
ANR	756930	Symbol	& cb_filepath		748261						
ANR	756931	Symbol	R_PRINT_FLAGS_COLOR		748261						
ANR	756932	Symbol	& cb_analhpskip		748261						
ANR	756933	Symbol	& cb_dbgbtdepth		748261						
ANR	756934	Symbol	& cb_cmd_esil_todo		748261						
ANR	756935	Symbol	& cb_io_oxff		748261						
ANR	756936	Symbol	& cb_cmd_esil_ioer		748261						
ANR	756937	Symbol	& cb_hex_pairs		748261						
ANR	756938	Symbol	& cb_scrpagesize		748261						
ANR	756939	Symbol	& cb_scrprompt		748261						
ANR	756940	Symbol	& cb_asmtailsub		748261						
ANR	756941	Symbol	& cb_emustr		748261						
ANR	756942	Symbol	& cb_hex_style		748261						
ANR	756943	Symbol	& cb_teefile		748261						
ANR	756944	Symbol	cb_color_getter		748261						
ANR	756945	Symbol	core -> cons -> rows		748261						
ANR	756946	Symbol	& cb_anal_jmpmid		748261						
ANR	756947	Symbol	& cb_cmd_esil_intr		748261						
ANR	756948	Symbol	& cb_asmfeatures		748261						
ANR	756949	Symbol	& cb_analcpu		748261						
ANR	756950	Symbol	* core -> anal		748261						
ANR	756951	Symbol	& cb_dbg_follow_child		748261						
ANR	756952	Symbol	& cb_flag_realnames		748261						
ANR	756953	Symbol	& cb_ioaslr		748261						
ANR	756954	Symbol	& cb_scr_vi		748261						
ANR	756955	Symbol	cb_log_config_colors		748261						
ANR	756956	Symbol	& cb_midflags		748261						
ANR	756957	Symbol	& cb_linesabs		748261						
ANR	756958	Symbol	R_SYS_OS		748261						
ANR	756959	Symbol	& cb_scr_bgfill		748261						
ANR	756960	Symbol	& cb_asmsecsub		748261						
ANR	756961	Symbol	& cb_cfgdatefmt		748261						
ANR	756962	Symbol	& cb_cmdpdc		748261						
ANR	756963	Symbol	R2_PLUGINS		748261						
ANR	756964	Symbol	& cb_asmassembler		748261						
ANR	756965	Symbol	R_SYS_HOME		748261						
ANR	756966	Symbol	& cb_malloc		748261						
ANR	756967	Symbol	& cb_cfgdebug		748261						
ANR	756968	Symbol	& cb_hexcomments		748261						
ANR	756969	Symbol	R2_HOME_ZIGNS		748261						
ANR	756970	Symbol	& cb_completion_maxtab		748261						
ANR	756971	Symbol	& cb_bindbginfo		748261						
ANR	756972	Symbol	cfg -> num		748261						
ANR	756973	Symbol	core -> num		748261						
ANR	756974	Symbol	& cb_search_kwidx		748261						
ANR	756975	Symbol	& cb_binstrings		748261						
ANR	756976	Symbol	& cb_asmbits		748261						
ANR	756977	Symbol	strcmp		748261						
ANR	756978	Symbol	& cb_asmvarsubmin		748261						
ANR	756979	Symbol	& cb_scr_prompt_popup		748261						
ANR	756980	Symbol	& cb_str_escbslash		748261						
ANR	756981	Symbol	NULL		748261						
ANR	756982	Symbol	& cb_binmaxstrbuf		748261						
ANR	756983	Symbol	& cb_stopthreads		748261						
ANR	756984	Symbol	& cb_scrrows		748261						
ANR	756985	Symbol	& cb_dbg_aftersc		748261						
ANR	756986	Symbol	& cb_scrlinesleep		748261						
ANR	756987	Symbol	& cb_anal_brokenrefs		748261						
ANR	756988	Symbol	& cb_swstep		748261						
ANR	756989	Symbol	cb_log_config_srcinfo		748261						
ANR	756990	Symbol	& cb_dbgbackend		748261						
ANR	756991	Symbol	core		748261						
ANR	756992	Symbol	& cb_binverbose		748261						
ANR	756993	Symbol	& cb_ioff		748261						
ANR	756994	Symbol	& cb_binstrenc		748261						
ANR	756995	Symbol	true		748261						
ANR	756996	Symbol	& cb_hex_align		748261						
ANR	756997	Symbol	& cb_anal_followdatarefs		748261						
ANR	756998	Symbol	& cb_emuskip		748261						
ANR	756999	Symbol	& cb_hexstride		748261						
ANR	757000	Symbol	core -> print		748261						
ANR	757001	Symbol	& cb_rows		748261						
ANR	757002	Symbol	& cb_anal_limits		748261						
ANR	757003	Symbol	& cb_cfgcorelog		748261						
ANR	757004	Symbol	& cb_iova		748261						
ANR	757005	Symbol	pdb_path		748261						
ANR	757006	Symbol	& cb_gotolimit		748261						
ANR	757007	Symbol	r_str_newf		748261						
ANR	757008	Symbol	core -> anal -> esil_goto_limit		748261						
ANR	757009	Symbol	& cb_scrint		748261						
ANR	757010	Symbol	& cb_scrhtml		748261						
ANR	757011	Symbol	r_cons_singleton		748261						
ANR	757012	Symbol	UT64_MAX		748261						
ANR	757013	Symbol	& cb_cmdtimes		748261						
ANR	757014	Symbol	r_str_home		748261						
ANR	757015	Symbol	* * core		748261						
ANR	757016	Symbol	& cb_dbgbep		748261						
ANR	757017	Symbol	core -> config		748261						
ANR	757018	Symbol	& cb_strfilter		748261						
ANR	757019	Symbol	r_str_bool		748261						
ANR	757020	Symbol	& cb_contiguous		748261						
ANR	757021	Symbol	& cb_seggrn		748261						
ANR	757022	Symbol	& cb_dbg_gdb_retries		748261						
ANR	757023	Symbol	& cb_consbreak		748261						
ANR	757024	Symbol	& cb_anal_jmptbl		748261						
ANR	757025	Symbol	& cb_io_unalloc_ch		748261						
ANR	757026	Symbol	R2_PREFIX		748261						
ANR	757027	Symbol	& cb_dbg_btalgo		748261						
ANR	757028	Symbol	& cb_binprefix		748261						
ANR	757029	Symbol	& cb_hexcompact		748261						
ANR	757030	Symbol	& cb_anal_endsize		748261						
ANR	757031	Symbol	& cb_asm_pcalign		748261						
ANR	757032	Symbol	& cb_debug_hitinfo		748261						
ANR	757033	Symbol	NODEICB		748261						
ANR	757034	Symbol	& cb_scrnull		748261						
ANR	757035	Symbol	& cb_hex_section		748261						
ANR	757036	Symbol	r_cons_printf		748261						
ANR	757037	Function	r_core_config_update	3609:0:129827:129981							
ANR	757038	FunctionDef	r_core_config_update (RCore * core)		757037	0					
ANR	757039	CompoundStatement		3609:45:129872:129981	757037	0					
ANR	757040	IdentifierDeclStatement	"RConfigNode * cmdpdc = r_config_node_get ( core -> config , ""cmd.pdc"" ) ;"	3610:1:129875:129940	757037	0	True				
ANR	757041	IdentifierDecl	"* cmdpdc = r_config_node_get ( core -> config , ""cmd.pdc"" )"		757037	0					
ANR	757042	IdentifierDeclType	RConfigNode *		757037	0					
ANR	757043	Identifier	cmdpdc		757037	1					
ANR	757044	AssignmentExpression	"* cmdpdc = r_config_node_get ( core -> config , ""cmd.pdc"" )"		757037	2		=			
ANR	757045	Identifier	cmdpdc		757037	0					
ANR	757046	CallExpression	"r_config_node_get ( core -> config , ""cmd.pdc"" )"		757037	1					
ANR	757047	Callee	r_config_node_get		757037	0					
ANR	757048	Identifier	r_config_node_get		757037	0					
ANR	757049	ArgumentList	core -> config		757037	1					
ANR	757050	Argument	core -> config		757037	0					
ANR	757051	PtrMemberAccess	core -> config		757037	0					
ANR	757052	Identifier	core		757037	0					
ANR	757053	Identifier	config		757037	1					
ANR	757054	Argument	"""cmd.pdc"""		757037	1					
ANR	757055	PrimaryExpression	"""cmd.pdc"""		757037	0					
ANR	757056	ExpressionStatement	"update_cmdpdc_options ( core , cmdpdc )"	3611:1:129943:129979	757037	1	True				
ANR	757057	CallExpression	"update_cmdpdc_options ( core , cmdpdc )"		757037	0					
ANR	757058	Callee	update_cmdpdc_options		757037	0					
ANR	757059	Identifier	update_cmdpdc_options		757037	0					
ANR	757060	ArgumentList	core		757037	1					
ANR	757061	Argument	core		757037	0					
ANR	757062	Identifier	core		757037	0					
ANR	757063	Argument	cmdpdc		757037	1					
ANR	757064	Identifier	cmdpdc		757037	0					
ANR	757065	ReturnType	R_API void		757037	1					
ANR	757066	Identifier	r_core_config_update		757037	2					
ANR	757067	ParameterList	RCore * core		757037	3					
ANR	757068	Parameter	RCore * core	3609:32:129859:129869	757037	0	True				
ANR	757069	ParameterType	RCore *		757037	0					
ANR	757070	Identifier	core		757037	1					
ANR	757071	CFGEntryNode	ENTRY		757037		True				
ANR	757072	CFGExitNode	EXIT		757037		True				
ANR	757073	Symbol	core -> config		757037						
ANR	757074	Symbol	core		757037						
ANR	757075	Symbol	* core		757037						
ANR	757076	Symbol	cmdpdc		757037						
ANR	757077	Symbol	r_config_node_get		757037						
