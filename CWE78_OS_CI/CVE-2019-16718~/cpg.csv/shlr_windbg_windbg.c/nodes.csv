command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6151442	File	data/converged/CVE-2019-16718~_radare2/shlr_windbg_windbg.c								
ANR	6151443	DeclStmt									
ANR	6151444	Decl							Profile	Profile * [ ]	p_table
ANR	6151445	Function	windbg_get_profile	41:0:806:1094							
ANR	6151446	FunctionDef	"windbg_get_profile (int bits , int build , int sp)"		6151445	0					
ANR	6151447	CompoundStatement		41:57:863:1094	6151445	0					
ANR	6151448	IdentifierDeclStatement	int i ;	42:1:866:871	6151445	0	True				
ANR	6151449	IdentifierDecl	i		6151445	0					
ANR	6151450	IdentifierDeclType	int		6151445	0					
ANR	6151451	Identifier	i		6151445	1					
ANR	6151452	ForStatement	for ( i = 0 ; p_table [ i ] ; i ++ )		6151445	1					
ANR	6151453	ForInit	i = 0 ;	43:6:879:884	6151445	0	True				
ANR	6151454	AssignmentExpression	i = 0		6151445	0		=			
ANR	6151455	Identifier	i		6151445	0					
ANR	6151456	PrimaryExpression	0		6151445	1					
ANR	6151457	Condition	p_table [ i ]	43:13:886:895	6151445	1	True				
ANR	6151458	ArrayIndexing	p_table [ i ]		6151445	0					
ANR	6151459	Identifier	p_table		6151445	0					
ANR	6151460	Identifier	i		6151445	1					
ANR	6151461	PostIncDecOperationExpression	i ++	43:25:898:900	6151445	2	True				
ANR	6151462	Identifier	i		6151445	0					
ANR	6151463	IncDec	++		6151445	1					
ANR	6151464	CompoundStatement		3:30:39:39	6151445	3					
ANR	6151465	IfStatement	if ( p_table [ i ] -> build != build )		6151445	0					
ANR	6151466	Condition	p_table [ i ] -> build != build	44:6:911:936	6151445	0	True				
ANR	6151467	EqualityExpression	p_table [ i ] -> build != build		6151445	0		!=			
ANR	6151468	PtrMemberAccess	p_table [ i ] -> build		6151445	0					
ANR	6151469	ArrayIndexing	p_table [ i ]		6151445	0					
ANR	6151470	Identifier	p_table		6151445	0					
ANR	6151471	Identifier	i		6151445	1					
ANR	6151472	Identifier	build		6151445	1					
ANR	6151473	Identifier	build		6151445	1					
ANR	6151474	CompoundStatement		4:34:75:75	6151445	1					
ANR	6151475	ContinueStatement	continue ;	45:3:944:952	6151445	0	True				
ANR	6151476	IfStatement	if ( p_table [ i ] -> sp != sp )		6151445	1					
ANR	6151477	Condition	p_table [ i ] -> sp != sp	47:6:964:983	6151445	0	True				
ANR	6151478	EqualityExpression	p_table [ i ] -> sp != sp		6151445	0		!=			
ANR	6151479	PtrMemberAccess	p_table [ i ] -> sp		6151445	0					
ANR	6151480	ArrayIndexing	p_table [ i ]		6151445	0					
ANR	6151481	Identifier	p_table		6151445	0					
ANR	6151482	Identifier	i		6151445	1					
ANR	6151483	Identifier	sp		6151445	1					
ANR	6151484	Identifier	sp		6151445	1					
ANR	6151485	CompoundStatement		7:28:122:122	6151445	1					
ANR	6151486	ContinueStatement	continue ;	48:3:991:999	6151445	0	True				
ANR	6151487	IfStatement	if ( p_table [ i ] -> bits != bits )		6151445	2					
ANR	6151488	Condition	p_table [ i ] -> bits != bits	50:6:1011:1034	6151445	0	True				
ANR	6151489	EqualityExpression	p_table [ i ] -> bits != bits		6151445	0		!=			
ANR	6151490	PtrMemberAccess	p_table [ i ] -> bits		6151445	0					
ANR	6151491	ArrayIndexing	p_table [ i ]		6151445	0					
ANR	6151492	Identifier	p_table		6151445	0					
ANR	6151493	Identifier	i		6151445	1					
ANR	6151494	Identifier	bits		6151445	1					
ANR	6151495	Identifier	bits		6151445	1					
ANR	6151496	CompoundStatement		10:32:173:173	6151445	1					
ANR	6151497	ContinueStatement	continue ;	51:3:1042:1050	6151445	0	True				
ANR	6151498	ReturnStatement	return p_table [ i ] ;	53:2:1058:1075	6151445	3	True				
ANR	6151499	ArrayIndexing	p_table [ i ]		6151445	0					
ANR	6151500	Identifier	p_table		6151445	0					
ANR	6151501	Identifier	i		6151445	1					
ANR	6151502	ReturnStatement	return NULL ;	55:1:1081:1092	6151445	2	True				
ANR	6151503	Identifier	NULL		6151445	0					
ANR	6151504	ReturnType	Profile *		6151445	1					
ANR	6151505	Identifier	windbg_get_profile		6151445	2					
ANR	6151506	ParameterList	"int bits , int build , int sp"		6151445	3					
ANR	6151507	Parameter	int bits	41:28:834:841	6151445	0	True				
ANR	6151508	ParameterType	int		6151445	0					
ANR	6151509	Identifier	bits		6151445	1					
ANR	6151510	Parameter	int build	41:38:844:852	6151445	1	True				
ANR	6151511	ParameterType	int		6151445	0					
ANR	6151512	Identifier	build		6151445	1					
ANR	6151513	Parameter	int sp	41:49:855:860	6151445	2	True				
ANR	6151514	ParameterType	int		6151445	0					
ANR	6151515	Identifier	sp		6151445	1					
ANR	6151516	CFGEntryNode	ENTRY		6151445		True				
ANR	6151517	CFGExitNode	EXIT		6151445		True				
ANR	6151518	Symbol	* * i		6151445						
ANR	6151519	Symbol	NULL		6151445						
ANR	6151520	Symbol	p_table [ i ] -> build		6151445						
ANR	6151521	Symbol	bits		6151445						
ANR	6151522	Symbol	i		6151445						
ANR	6151523	Symbol	* * p_table		6151445						
ANR	6151524	Symbol	p_table [ i ] -> sp		6151445						
ANR	6151525	Symbol	* p_table		6151445						
ANR	6151526	Symbol	* i		6151445						
ANR	6151527	Symbol	build		6151445						
ANR	6151528	Symbol	p_table		6151445						
ANR	6151529	Symbol	sp		6151445						
ANR	6151530	Symbol	p_table [ i ] -> bits		6151445						
ANR	6151531	ClassDef	_WindCtx	66:0:1263:1474							
ANR	6151532	DeclStmt									
ANR	6151533	Decl							void	void *	io_ptr
ANR	6151534	DeclStmt									
ANR	6151535	Decl							uint32_t	uint32_t	seq_id
ANR	6151536	DeclStmt									
ANR	6151537	Decl							int	int	syncd
ANR	6151538	DeclStmt									
ANR	6151539	Decl							int	int	cpu_count
ANR	6151540	DeclStmt									
ANR	6151541	Decl							int	int	cpu
ANR	6151542	DeclStmt									
ANR	6151543	Decl							int	int	pae
ANR	6151544	DeclStmt									
ANR	6151545	Decl							int	int	is_x64
ANR	6151546	DeclStmt									
ANR	6151547	Decl							Profile	Profile *	os_profile
ANR	6151548	DeclStmt									
ANR	6151549	Decl							RList	RList *	plist_cache
ANR	6151550	DeclStmt									
ANR	6151551	Decl							RList	RList *	tlist_cache
ANR	6151552	DeclStmt									
ANR	6151553	Decl							ut64	ut64	dbg_addr
ANR	6151554	DeclStmt									
ANR	6151555	Decl							WindProc	WindProc *	target
ANR	6151556	Function	windbg_get_bits	81:0:1478:1567							
ANR	6151557	FunctionDef	windbg_get_bits (WindCtx * ctx)		6151556	0					
ANR	6151558	CompoundStatement		81:34:1512:1567	6151556	0					
ANR	6151559	ReturnStatement	return ctx -> is_x64 ? R_SYS_BITS_64 : R_SYS_BITS_32 ;	82:1:1515:1565	6151556	0	True				
ANR	6151560	ConditionalExpression	ctx -> is_x64 ? R_SYS_BITS_64 : R_SYS_BITS_32		6151556	0					
ANR	6151561	Condition	ctx -> is_x64		6151556	0					
ANR	6151562	PtrMemberAccess	ctx -> is_x64		6151556	0					
ANR	6151563	Identifier	ctx		6151556	0					
ANR	6151564	Identifier	is_x64		6151556	1					
ANR	6151565	Identifier	R_SYS_BITS_64		6151556	1					
ANR	6151566	Identifier	R_SYS_BITS_32		6151556	2					
ANR	6151567	ReturnType	int		6151556	1					
ANR	6151568	Identifier	windbg_get_bits		6151556	2					
ANR	6151569	ParameterList	WindCtx * ctx		6151556	3					
ANR	6151570	Parameter	WindCtx * ctx	81:20:1498:1509	6151556	0	True				
ANR	6151571	ParameterType	WindCtx *		6151556	0					
ANR	6151572	Identifier	ctx		6151556	1					
ANR	6151573	CFGEntryNode	ENTRY		6151556		True				
ANR	6151574	CFGExitNode	EXIT		6151556		True				
ANR	6151575	Symbol	ctx -> is_x64		6151556						
ANR	6151576	Symbol	ctx		6151556						
ANR	6151577	Symbol	* ctx		6151556						
ANR	6151578	Symbol	R_SYS_BITS_64		6151556						
ANR	6151579	Symbol	R_SYS_BITS_32		6151556						
ANR	6151580	Function	windbg_get_cpus	85:0:1570:1659							
ANR	6151581	FunctionDef	windbg_get_cpus (WindCtx * ctx)		6151580	0					
ANR	6151582	CompoundStatement		85:34:1604:1659	6151580	0					
ANR	6151583	IfStatement	if ( ! ctx )		6151580	0					
ANR	6151584	Condition	! ctx	86:5:1611:1614	6151580	0	True				
ANR	6151585	UnaryOperationExpression	! ctx		6151580	0					
ANR	6151586	UnaryOperator	!		6151580	0					
ANR	6151587	Identifier	ctx		6151580	1					
ANR	6151588	CompoundStatement		2:11:12:12	6151580	1					
ANR	6151589	ReturnStatement	return - 1 ;	87:2:1621:1630	6151580	0	True				
ANR	6151590	UnaryOperationExpression	- 1		6151580	0					
ANR	6151591	UnaryOperator	-		6151580	0					
ANR	6151592	PrimaryExpression	1		6151580	1					
ANR	6151593	ReturnStatement	return ctx -> cpu_count ;	89:1:1636:1657	6151580	1	True				
ANR	6151594	PtrMemberAccess	ctx -> cpu_count		6151580	0					
ANR	6151595	Identifier	ctx		6151580	0					
ANR	6151596	Identifier	cpu_count		6151580	1					
ANR	6151597	ReturnType	int		6151580	1					
ANR	6151598	Identifier	windbg_get_cpus		6151580	2					
ANR	6151599	ParameterList	WindCtx * ctx		6151580	3					
ANR	6151600	Parameter	WindCtx * ctx	85:20:1590:1601	6151580	0	True				
ANR	6151601	ParameterType	WindCtx *		6151580	0					
ANR	6151602	Identifier	ctx		6151580	1					
ANR	6151603	CFGEntryNode	ENTRY		6151580		True				
ANR	6151604	CFGExitNode	EXIT		6151580		True				
ANR	6151605	Symbol	ctx		6151580						
ANR	6151606	Symbol	ctx -> cpu_count		6151580						
ANR	6151607	Symbol	* ctx		6151580						
ANR	6151608	Function	windbg_set_cpu	92:0:1662:1794							
ANR	6151609	FunctionDef	"windbg_set_cpu (WindCtx * ctx , int cpu)"		6151608	0					
ANR	6151610	CompoundStatement		92:43:1705:1794	6151608	0					
ANR	6151611	IfStatement	if ( ! ctx || cpu > ctx -> cpu_count )		6151608	0					
ANR	6151612	Condition	! ctx || cpu > ctx -> cpu_count	93:5:1712:1739	6151608	0	True				
ANR	6151613	OrExpression	! ctx || cpu > ctx -> cpu_count		6151608	0		||			
ANR	6151614	UnaryOperationExpression	! ctx		6151608	0					
ANR	6151615	UnaryOperator	!		6151608	0					
ANR	6151616	Identifier	ctx		6151608	1					
ANR	6151617	RelationalExpression	cpu > ctx -> cpu_count		6151608	1		>			
ANR	6151618	Identifier	cpu		6151608	0					
ANR	6151619	PtrMemberAccess	ctx -> cpu_count		6151608	1					
ANR	6151620	Identifier	ctx		6151608	0					
ANR	6151621	Identifier	cpu_count		6151608	1					
ANR	6151622	CompoundStatement		2:35:36:36	6151608	1					
ANR	6151623	ReturnStatement	return false ;	94:2:1746:1758	6151608	0	True				
ANR	6151624	Identifier	false		6151608	0					
ANR	6151625	ExpressionStatement	ctx -> cpu = cpu	96:1:1764:1778	6151608	1	True				
ANR	6151626	AssignmentExpression	ctx -> cpu = cpu		6151608	0		=			
ANR	6151627	PtrMemberAccess	ctx -> cpu		6151608	0					
ANR	6151628	Identifier	ctx		6151608	0					
ANR	6151629	Identifier	cpu		6151608	1					
ANR	6151630	Identifier	cpu		6151608	1					
ANR	6151631	ReturnStatement	return true ;	97:1:1781:1792	6151608	2	True				
ANR	6151632	Identifier	true		6151608	0					
ANR	6151633	ReturnType	bool		6151608	1					
ANR	6151634	Identifier	windbg_set_cpu		6151608	2					
ANR	6151635	ParameterList	"WindCtx * ctx , int cpu"		6151608	3					
ANR	6151636	Parameter	WindCtx * ctx	92:20:1682:1693	6151608	0	True				
ANR	6151637	ParameterType	WindCtx *		6151608	0					
ANR	6151638	Identifier	ctx		6151608	1					
ANR	6151639	Parameter	int cpu	92:34:1696:1702	6151608	1	True				
ANR	6151640	ParameterType	int		6151608	0					
ANR	6151641	Identifier	cpu		6151608	1					
ANR	6151642	CFGEntryNode	ENTRY		6151608		True				
ANR	6151643	CFGExitNode	EXIT		6151608		True				
ANR	6151644	Symbol	ctx -> cpu		6151608						
ANR	6151645	Symbol	ctx		6151608						
ANR	6151646	Symbol	false		6151608						
ANR	6151647	Symbol	true		6151608						
ANR	6151648	Symbol	cpu		6151608						
ANR	6151649	Symbol	ctx -> cpu_count		6151608						
ANR	6151650	Symbol	* ctx		6151608						
ANR	6151651	Function	windbg_get_cpu	100:0:1797:1879							
ANR	6151652	FunctionDef	windbg_get_cpu (WindCtx * ctx)		6151651	0					
ANR	6151653	CompoundStatement		100:33:1830:1879	6151651	0					
ANR	6151654	IfStatement	if ( ! ctx )		6151651	0					
ANR	6151655	Condition	! ctx	101:5:1837:1840	6151651	0	True				
ANR	6151656	UnaryOperationExpression	! ctx		6151651	0					
ANR	6151657	UnaryOperator	!		6151651	0					
ANR	6151658	Identifier	ctx		6151651	1					
ANR	6151659	CompoundStatement		2:11:12:12	6151651	1					
ANR	6151660	ReturnStatement	return - 1 ;	102:2:1847:1856	6151651	0	True				
ANR	6151661	UnaryOperationExpression	- 1		6151651	0					
ANR	6151662	UnaryOperator	-		6151651	0					
ANR	6151663	PrimaryExpression	1		6151651	1					
ANR	6151664	ReturnStatement	return ctx -> cpu ;	104:1:1862:1877	6151651	1	True				
ANR	6151665	PtrMemberAccess	ctx -> cpu		6151651	0					
ANR	6151666	Identifier	ctx		6151651	0					
ANR	6151667	Identifier	cpu		6151651	1					
ANR	6151668	ReturnType	int		6151651	1					
ANR	6151669	Identifier	windbg_get_cpu		6151651	2					
ANR	6151670	ParameterList	WindCtx * ctx		6151651	3					
ANR	6151671	Parameter	WindCtx * ctx	100:19:1816:1827	6151651	0	True				
ANR	6151672	ParameterType	WindCtx *		6151651	0					
ANR	6151673	Identifier	ctx		6151651	1					
ANR	6151674	CFGEntryNode	ENTRY		6151651		True				
ANR	6151675	CFGExitNode	EXIT		6151651		True				
ANR	6151676	Symbol	ctx -> cpu		6151651						
ANR	6151677	Symbol	ctx		6151651						
ANR	6151678	Symbol	* ctx		6151651						
ANR	6151679	Function	windbg_set_target	107:0:1882:2177							
ANR	6151680	FunctionDef	"windbg_set_target (WindCtx * ctx , uint32_t pid)"		6151679	0					
ANR	6151681	CompoundStatement		107:51:1933:2177	6151679	0					
ANR	6151682	IdentifierDeclStatement	WindProc * p ;	108:1:1936:1947	6151679	0	True				
ANR	6151683	IdentifierDecl	* p		6151679	0					
ANR	6151684	IdentifierDeclType	WindProc *		6151679	0					
ANR	6151685	Identifier	p		6151679	1					
ANR	6151686	IdentifierDeclStatement	RListIter * it ;	109:1:1950:1963	6151679	1	True				
ANR	6151687	IdentifierDecl	* it		6151679	0					
ANR	6151688	IdentifierDeclType	RListIter *		6151679	0					
ANR	6151689	Identifier	it		6151679	1					
ANR	6151690	IfStatement	if ( pid )		6151679	2					
ANR	6151691	Condition	pid	110:5:1970:1972	6151679	0	True				
ANR	6151692	Identifier	pid		6151679	0					
ANR	6151693	CompoundStatement		5:2:45:81	6151679	1					
ANR	6151694	IdentifierDeclStatement	RList * l = windbg_list_process ( ctx ) ;	111:2:1979:2015	6151679	0	True				
ANR	6151695	IdentifierDecl	* l = windbg_list_process ( ctx )		6151679	0					
ANR	6151696	IdentifierDeclType	RList *		6151679	0					
ANR	6151697	Identifier	l		6151679	1					
ANR	6151698	AssignmentExpression	* l = windbg_list_process ( ctx )		6151679	2		=			
ANR	6151699	Identifier	l		6151679	0					
ANR	6151700	CallExpression	windbg_list_process ( ctx )		6151679	1					
ANR	6151701	Callee	windbg_list_process		6151679	0					
ANR	6151702	Identifier	windbg_list_process		6151679	0					
ANR	6151703	ArgumentList	ctx		6151679	1					
ANR	6151704	Argument	ctx		6151679	0					
ANR	6151705	Identifier	ctx		6151679	0					
ANR	6151706	Statement	r_list_foreach	112:2:2019:2032	6151679	1	True				
ANR	6151707	Statement	(	112:17:2034:2034	6151679	2	True				
ANR	6151708	Statement	l	112:18:2035:2035	6151679	3	True				
ANR	6151709	Statement	","	112:19:2036:2036	6151679	4	True				
ANR	6151710	Statement	it	112:21:2038:2039	6151679	5	True				
ANR	6151711	Statement	","	112:23:2040:2040	6151679	6	True				
ANR	6151712	Statement	p	112:25:2042:2042	6151679	7	True				
ANR	6151713	Statement	)	112:26:2043:2043	6151679	8	True				
ANR	6151714	CompoundStatement		6:28:111:111	6151679	9					
ANR	6151715	IfStatement	if ( p -> uniqueid == pid )		6151679	0					
ANR	6151716	Condition	p -> uniqueid == pid	113:7:2054:2071	6151679	0	True				
ANR	6151717	EqualityExpression	p -> uniqueid == pid		6151679	0		==			
ANR	6151718	PtrMemberAccess	p -> uniqueid		6151679	0					
ANR	6151719	Identifier	p		6151679	0					
ANR	6151720	Identifier	uniqueid		6151679	1					
ANR	6151721	Identifier	pid		6151679	1					
ANR	6151722	CompoundStatement		7:27:140:140	6151679	1					
ANR	6151723	ExpressionStatement	ctx -> target = p	114:4:2080:2095	6151679	0	True				
ANR	6151724	AssignmentExpression	ctx -> target = p		6151679	0		=			
ANR	6151725	PtrMemberAccess	ctx -> target		6151679	0					
ANR	6151726	Identifier	ctx		6151679	0					
ANR	6151727	Identifier	target		6151679	1					
ANR	6151728	Identifier	p		6151679	1					
ANR	6151729	ReturnStatement	return true ;	115:4:2101:2112	6151679	1	True				
ANR	6151730	Identifier	true		6151679	0					
ANR	6151731	ReturnStatement	return false ;	118:2:2125:2137	6151679	10	True				
ANR	6151732	Identifier	false		6151679	0					
ANR	6151733	ExpressionStatement	ctx -> target = NULL	120:1:2143:2161	6151679	3	True				
ANR	6151734	AssignmentExpression	ctx -> target = NULL		6151679	0		=			
ANR	6151735	PtrMemberAccess	ctx -> target		6151679	0					
ANR	6151736	Identifier	ctx		6151679	0					
ANR	6151737	Identifier	target		6151679	1					
ANR	6151738	Identifier	NULL		6151679	1					
ANR	6151739	ReturnStatement	return true ;	121:1:2164:2175	6151679	4	True				
ANR	6151740	Identifier	true		6151679	0					
ANR	6151741	ReturnType	bool		6151679	1					
ANR	6151742	Identifier	windbg_set_target		6151679	2					
ANR	6151743	ParameterList	"WindCtx * ctx , uint32_t pid"		6151679	3					
ANR	6151744	Parameter	WindCtx * ctx	107:23:1905:1916	6151679	0	True				
ANR	6151745	ParameterType	WindCtx *		6151679	0					
ANR	6151746	Identifier	ctx		6151679	1					
ANR	6151747	Parameter	uint32_t pid	107:37:1919:1930	6151679	1	True				
ANR	6151748	ParameterType	uint32_t		6151679	0					
ANR	6151749	Identifier	pid		6151679	1					
ANR	6151750	CFGEntryNode	ENTRY		6151679		True				
ANR	6151751	CFGExitNode	EXIT		6151679		True				
ANR	6151752	Symbol	NULL		6151679						
ANR	6151753	Symbol	ctx -> target		6151679						
ANR	6151754	Symbol	ctx		6151679						
ANR	6151755	Symbol	false		6151679						
ANR	6151756	Symbol	pid		6151679						
ANR	6151757	Symbol	it		6151679						
ANR	6151758	Symbol	l		6151679						
ANR	6151759	Symbol	p -> uniqueid		6151679						
ANR	6151760	Symbol	* ctx		6151679						
ANR	6151761	Symbol	p		6151679						
ANR	6151762	Symbol	windbg_list_process		6151679						
ANR	6151763	Symbol	true		6151679						
ANR	6151764	Symbol	* p		6151679						
ANR	6151765	Function	windbg_get_target	124:0:2180:2329							
ANR	6151766	FunctionDef	windbg_get_target (WindCtx * ctx)		6151765	0					
ANR	6151767	CompoundStatement		124:41:2221:2329	6151765	0					
ANR	6151768	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6151765	0					
ANR	6151769	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	125:5:2228:2262	6151765	0	True				
ANR	6151770	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6151765	0		||			
ANR	6151771	UnaryOperationExpression	! ctx		6151765	0					
ANR	6151772	UnaryOperator	!		6151765	0					
ANR	6151773	Identifier	ctx		6151765	1					
ANR	6151774	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6151765	1		||			
ANR	6151775	UnaryOperationExpression	! ctx -> io_ptr		6151765	0					
ANR	6151776	UnaryOperator	!		6151765	0					
ANR	6151777	PtrMemberAccess	ctx -> io_ptr		6151765	1					
ANR	6151778	Identifier	ctx		6151765	0					
ANR	6151779	Identifier	io_ptr		6151765	1					
ANR	6151780	UnaryOperationExpression	! ctx -> syncd		6151765	1					
ANR	6151781	UnaryOperator	!		6151765	0					
ANR	6151782	PtrMemberAccess	ctx -> syncd		6151765	1					
ANR	6151783	Identifier	ctx		6151765	0					
ANR	6151784	Identifier	syncd		6151765	1					
ANR	6151785	CompoundStatement		2:42:43:43	6151765	1					
ANR	6151786	ReturnStatement	return 0 ;	126:2:2269:2277	6151765	0	True				
ANR	6151787	PrimaryExpression	0		6151765	0					
ANR	6151788	ReturnStatement	return ctx -> target ? ctx -> target -> uniqueid : 0 ;	128:1:2283:2327	6151765	1	True				
ANR	6151789	ConditionalExpression	ctx -> target ? ctx -> target -> uniqueid : 0		6151765	0					
ANR	6151790	Condition	ctx -> target		6151765	0					
ANR	6151791	PtrMemberAccess	ctx -> target		6151765	0					
ANR	6151792	Identifier	ctx		6151765	0					
ANR	6151793	Identifier	target		6151765	1					
ANR	6151794	PtrMemberAccess	ctx -> target -> uniqueid		6151765	1					
ANR	6151795	PtrMemberAccess	ctx -> target		6151765	0					
ANR	6151796	Identifier	ctx		6151765	0					
ANR	6151797	Identifier	target		6151765	1					
ANR	6151798	Identifier	uniqueid		6151765	1					
ANR	6151799	PrimaryExpression	0		6151765	2					
ANR	6151800	ReturnType	uint32_t		6151765	1					
ANR	6151801	Identifier	windbg_get_target		6151765	2					
ANR	6151802	ParameterList	WindCtx * ctx		6151765	3					
ANR	6151803	Parameter	WindCtx * ctx	124:27:2207:2218	6151765	0	True				
ANR	6151804	ParameterType	WindCtx *		6151765	0					
ANR	6151805	Identifier	ctx		6151765	1					
ANR	6151806	CFGEntryNode	ENTRY		6151765		True				
ANR	6151807	CFGExitNode	EXIT		6151765		True				
ANR	6151808	Symbol	ctx -> io_ptr		6151765						
ANR	6151809	Symbol	ctx -> target -> uniqueid		6151765						
ANR	6151810	Symbol	ctx -> target		6151765						
ANR	6151811	Symbol	ctx		6151765						
ANR	6151812	Symbol	* ctx -> target		6151765						
ANR	6151813	Symbol	* * ctx		6151765						
ANR	6151814	Symbol	ctx -> syncd		6151765						
ANR	6151815	Symbol	* ctx		6151765						
ANR	6151816	Function	windbg_get_target_base	131:0:2332:2692							
ANR	6151817	FunctionDef	windbg_get_target_base (WindCtx * ctx)		6151816	0					
ANR	6151818	CompoundStatement		131:42:2374:2692	6151816	0					
ANR	6151819	IdentifierDeclStatement	ut64 ppeb ;	132:1:2377:2386	6151816	0	True				
ANR	6151820	IdentifierDecl	ppeb		6151816	0					
ANR	6151821	IdentifierDeclType	ut64		6151816	0					
ANR	6151822	Identifier	ppeb		6151816	1					
ANR	6151823	IdentifierDeclStatement	ut64 base = 0 ;	133:1:2389:2402	6151816	1	True				
ANR	6151824	IdentifierDecl	base = 0		6151816	0					
ANR	6151825	IdentifierDeclType	ut64		6151816	0					
ANR	6151826	Identifier	base		6151816	1					
ANR	6151827	AssignmentExpression	base = 0		6151816	2		=			
ANR	6151828	Identifier	base		6151816	0					
ANR	6151829	PrimaryExpression	0		6151816	1					
ANR	6151830	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd || ! ctx -> target )		6151816	2					
ANR	6151831	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd || ! ctx -> target	135:5:2410:2460	6151816	0	True				
ANR	6151832	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd || ! ctx -> target		6151816	0		||			
ANR	6151833	UnaryOperationExpression	! ctx		6151816	0					
ANR	6151834	UnaryOperator	!		6151816	0					
ANR	6151835	Identifier	ctx		6151816	1					
ANR	6151836	OrExpression	! ctx -> io_ptr || ! ctx -> syncd || ! ctx -> target		6151816	1		||			
ANR	6151837	UnaryOperationExpression	! ctx -> io_ptr		6151816	0					
ANR	6151838	UnaryOperator	!		6151816	0					
ANR	6151839	PtrMemberAccess	ctx -> io_ptr		6151816	1					
ANR	6151840	Identifier	ctx		6151816	0					
ANR	6151841	Identifier	io_ptr		6151816	1					
ANR	6151842	OrExpression	! ctx -> syncd || ! ctx -> target		6151816	1		||			
ANR	6151843	UnaryOperationExpression	! ctx -> syncd		6151816	0					
ANR	6151844	UnaryOperator	!		6151816	0					
ANR	6151845	PtrMemberAccess	ctx -> syncd		6151816	1					
ANR	6151846	Identifier	ctx		6151816	0					
ANR	6151847	Identifier	syncd		6151816	1					
ANR	6151848	UnaryOperationExpression	! ctx -> target		6151816	1					
ANR	6151849	UnaryOperator	!		6151816	0					
ANR	6151850	PtrMemberAccess	ctx -> target		6151816	1					
ANR	6151851	Identifier	ctx		6151816	0					
ANR	6151852	Identifier	target		6151816	1					
ANR	6151853	CompoundStatement		5:58:88:88	6151816	1					
ANR	6151854	ReturnStatement	return 0 ;	136:2:2467:2475	6151816	0	True				
ANR	6151855	PrimaryExpression	0		6151816	0					
ANR	6151856	IfStatement	"if ( ! windbg_va_to_pa ( ctx , ctx -> target -> peb , & ppeb ) )"		6151816	3					
ANR	6151857	Condition	"! windbg_va_to_pa ( ctx , ctx -> target -> peb , & ppeb )"	139:5:2486:2532	6151816	0	True				
ANR	6151858	UnaryOperationExpression	"! windbg_va_to_pa ( ctx , ctx -> target -> peb , & ppeb )"		6151816	0					
ANR	6151859	UnaryOperator	!		6151816	0					
ANR	6151860	CallExpression	"windbg_va_to_pa ( ctx , ctx -> target -> peb , & ppeb )"		6151816	1					
ANR	6151861	Callee	windbg_va_to_pa		6151816	0					
ANR	6151862	Identifier	windbg_va_to_pa		6151816	0					
ANR	6151863	ArgumentList	ctx		6151816	1					
ANR	6151864	Argument	ctx		6151816	0					
ANR	6151865	Identifier	ctx		6151816	0					
ANR	6151866	Argument	ctx -> target -> peb		6151816	1					
ANR	6151867	PtrMemberAccess	ctx -> target -> peb		6151816	0					
ANR	6151868	PtrMemberAccess	ctx -> target		6151816	0					
ANR	6151869	Identifier	ctx		6151816	0					
ANR	6151870	Identifier	target		6151816	1					
ANR	6151871	Identifier	peb		6151816	1					
ANR	6151872	Argument	& ppeb		6151816	2					
ANR	6151873	UnaryOperationExpression	& ppeb		6151816	0					
ANR	6151874	UnaryOperator	&		6151816	0					
ANR	6151875	Identifier	ppeb		6151816	1					
ANR	6151876	CompoundStatement		9:54:160:160	6151816	1					
ANR	6151877	ReturnStatement	return 0 ;	140:2:2539:2547	6151816	0	True				
ANR	6151878	PrimaryExpression	0		6151816	0					
ANR	6151879	IfStatement	"if ( ! windbg_read_at_phys ( ctx , ( uint8_t * ) & base , ppeb + O_ ( P_ImageBaseAddress ) , 4 << ctx -> is_x64 ) )"		6151816	4					
ANR	6151880	Condition	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & base , ppeb + O_ ( P_ImageBaseAddress ) , 4 << ctx -> is_x64 )"	143:5:2558:2657	6151816	0	True				
ANR	6151881	UnaryOperationExpression	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & base , ppeb + O_ ( P_ImageBaseAddress ) , 4 << ctx -> is_x64 )"		6151816	0					
ANR	6151882	UnaryOperator	!		6151816	0					
ANR	6151883	CallExpression	"windbg_read_at_phys ( ctx , ( uint8_t * ) & base , ppeb + O_ ( P_ImageBaseAddress ) , 4 << ctx -> is_x64 )"		6151816	1					
ANR	6151884	Callee	windbg_read_at_phys		6151816	0					
ANR	6151885	Identifier	windbg_read_at_phys		6151816	0					
ANR	6151886	ArgumentList	ctx		6151816	1					
ANR	6151887	Argument	ctx		6151816	0					
ANR	6151888	Identifier	ctx		6151816	0					
ANR	6151889	Argument	( uint8_t * ) & base		6151816	1					
ANR	6151890	CastExpression	( uint8_t * ) & base		6151816	0					
ANR	6151891	CastTarget	uint8_t *		6151816	0					
ANR	6151892	UnaryOperationExpression	& base		6151816	1					
ANR	6151893	UnaryOperator	&		6151816	0					
ANR	6151894	Identifier	base		6151816	1					
ANR	6151895	Argument	ppeb + O_ ( P_ImageBaseAddress )		6151816	2					
ANR	6151896	AdditiveExpression	ppeb + O_ ( P_ImageBaseAddress )		6151816	0		+			
ANR	6151897	Identifier	ppeb		6151816	0					
ANR	6151898	CallExpression	O_ ( P_ImageBaseAddress )		6151816	1					
ANR	6151899	Callee	O_		6151816	0					
ANR	6151900	Identifier	O_		6151816	0					
ANR	6151901	ArgumentList	P_ImageBaseAddress		6151816	1					
ANR	6151902	Argument	P_ImageBaseAddress		6151816	0					
ANR	6151903	Identifier	P_ImageBaseAddress		6151816	0					
ANR	6151904	Argument	4 << ctx -> is_x64		6151816	3					
ANR	6151905	ShiftExpression	4 << ctx -> is_x64		6151816	0		<<			
ANR	6151906	PrimaryExpression	4		6151816	0					
ANR	6151907	PtrMemberAccess	ctx -> is_x64		6151816	1					
ANR	6151908	Identifier	ctx		6151816	0					
ANR	6151909	Identifier	is_x64		6151816	1					
ANR	6151910	CompoundStatement		14:56:285:285	6151816	1					
ANR	6151911	ReturnStatement	return 0 ;	145:2:2664:2672	6151816	0	True				
ANR	6151912	PrimaryExpression	0		6151816	0					
ANR	6151913	ReturnStatement	return base ;	148:1:2679:2690	6151816	5	True				
ANR	6151914	Identifier	base		6151816	0					
ANR	6151915	ReturnType	ut64		6151816	1					
ANR	6151916	Identifier	windbg_get_target_base		6151816	2					
ANR	6151917	ParameterList	WindCtx * ctx		6151816	3					
ANR	6151918	Parameter	WindCtx * ctx	131:28:2360:2371	6151816	0	True				
ANR	6151919	ParameterType	WindCtx *		6151816	0					
ANR	6151920	Identifier	ctx		6151816	1					
ANR	6151921	CFGEntryNode	ENTRY		6151816		True				
ANR	6151922	CFGExitNode	EXIT		6151816		True				
ANR	6151923	Symbol	& base		6151816						
ANR	6151924	Symbol	ctx -> target		6151816						
ANR	6151925	Symbol	ctx -> is_x64		6151816						
ANR	6151926	Symbol	ctx		6151816						
ANR	6151927	Symbol	ppeb		6151816						
ANR	6151928	Symbol	windbg_read_at_phys		6151816						
ANR	6151929	Symbol	* ctx -> target		6151816						
ANR	6151930	Symbol	windbg_va_to_pa		6151816						
ANR	6151931	Symbol	* ctx		6151816						
ANR	6151932	Symbol	O_		6151816						
ANR	6151933	Symbol	ctx -> io_ptr		6151816						
ANR	6151934	Symbol	ctx -> target -> peb		6151816						
ANR	6151935	Symbol	& ppeb		6151816						
ANR	6151936	Symbol	* * ctx		6151816						
ANR	6151937	Symbol	ctx -> syncd		6151816						
ANR	6151938	Symbol	P_ImageBaseAddress		6151816						
ANR	6151939	Symbol	base		6151816						
ANR	6151940	Function	windbg_ctx_new	151:0:2695:2847							
ANR	6151941	FunctionDef	windbg_ctx_new (void * io_ptr)		6151940	0					
ANR	6151942	CompoundStatement		151:38:2733:2847	6151940	0					
ANR	6151943	IdentifierDeclStatement	"WindCtx * ctx = calloc ( 1 , sizeof ( WindCtx ) ) ;"	152:1:2736:2778	6151940	0	True				
ANR	6151944	IdentifierDecl	"* ctx = calloc ( 1 , sizeof ( WindCtx ) )"		6151940	0					
ANR	6151945	IdentifierDeclType	WindCtx *		6151940	0					
ANR	6151946	Identifier	ctx		6151940	1					
ANR	6151947	AssignmentExpression	"* ctx = calloc ( 1 , sizeof ( WindCtx ) )"		6151940	2		=			
ANR	6151948	Identifier	ctx		6151940	0					
ANR	6151949	CallExpression	"calloc ( 1 , sizeof ( WindCtx ) )"		6151940	1					
ANR	6151950	Callee	calloc		6151940	0					
ANR	6151951	Identifier	calloc		6151940	0					
ANR	6151952	ArgumentList	1		6151940	1					
ANR	6151953	Argument	1		6151940	0					
ANR	6151954	PrimaryExpression	1		6151940	0					
ANR	6151955	Argument	sizeof ( WindCtx )		6151940	1					
ANR	6151956	SizeofExpression	sizeof ( WindCtx )		6151940	0					
ANR	6151957	Sizeof	sizeof		6151940	0					
ANR	6151958	SizeofOperand	WindCtx		6151940	1					
ANR	6151959	IfStatement	if ( ! ctx )		6151940	1					
ANR	6151960	Condition	! ctx	153:5:2785:2788	6151940	0	True				
ANR	6151961	UnaryOperationExpression	! ctx		6151940	0					
ANR	6151962	UnaryOperator	!		6151940	0					
ANR	6151963	Identifier	ctx		6151940	1					
ANR	6151964	CompoundStatement		3:11:57:57	6151940	1					
ANR	6151965	ReturnStatement	return NULL ;	154:2:2795:2806	6151940	0	True				
ANR	6151966	Identifier	NULL		6151940	0					
ANR	6151967	ExpressionStatement	ctx -> io_ptr = io_ptr	156:1:2812:2832	6151940	2	True				
ANR	6151968	AssignmentExpression	ctx -> io_ptr = io_ptr		6151940	0		=			
ANR	6151969	PtrMemberAccess	ctx -> io_ptr		6151940	0					
ANR	6151970	Identifier	ctx		6151940	0					
ANR	6151971	Identifier	io_ptr		6151940	1					
ANR	6151972	Identifier	io_ptr		6151940	1					
ANR	6151973	ReturnStatement	return ctx ;	157:1:2835:2845	6151940	3	True				
ANR	6151974	Identifier	ctx		6151940	0					
ANR	6151975	ReturnType	WindCtx *		6151940	1					
ANR	6151976	Identifier	windbg_ctx_new		6151940	2					
ANR	6151977	ParameterList	void * io_ptr		6151940	3					
ANR	6151978	Parameter	void * io_ptr	151:24:2719:2730	6151940	0	True				
ANR	6151979	ParameterType	void *		6151940	0					
ANR	6151980	Identifier	io_ptr		6151940	1					
ANR	6151981	CFGEntryNode	ENTRY		6151940		True				
ANR	6151982	CFGExitNode	EXIT		6151940		True				
ANR	6151983	Symbol	io_ptr		6151940						
ANR	6151984	Symbol	ctx -> io_ptr		6151940						
ANR	6151985	Symbol	NULL		6151940						
ANR	6151986	Symbol	ctx		6151940						
ANR	6151987	Symbol	calloc		6151940						
ANR	6151988	Symbol	* ctx		6151940						
ANR	6151989	Function	windbg_ctx_free	160:0:2850:3040							
ANR	6151990	FunctionDef	windbg_ctx_free (WindCtx * * ctx)		6151989	0					
ANR	6151991	CompoundStatement		160:36:2886:3040	6151989	0					
ANR	6151992	IfStatement	if ( ! ctx || ! * ctx )		6151989	0					
ANR	6151993	Condition	! ctx || ! * ctx	161:5:2893:2905	6151989	0	True				
ANR	6151994	OrExpression	! ctx || ! * ctx		6151989	0		||			
ANR	6151995	UnaryOperationExpression	! ctx		6151989	0					
ANR	6151996	UnaryOperator	!		6151989	0					
ANR	6151997	Identifier	ctx		6151989	1					
ANR	6151998	UnaryOperationExpression	! * ctx		6151989	1					
ANR	6151999	UnaryOperator	!		6151989	0					
ANR	6152000	UnaryOperationExpression	* ctx		6151989	1					
ANR	6152001	UnaryOperator	*		6151989	0					
ANR	6152002	Identifier	ctx		6151989	1					
ANR	6152003	CompoundStatement		2:20:21:21	6151989	1					
ANR	6152004	ReturnStatement	return ;	162:2:2912:2918	6151989	0	True				
ANR	6152005	ExpressionStatement	r_list_free ( ( * ctx ) -> plist_cache )	164:1:2924:2957	6151989	1	True				
ANR	6152006	CallExpression	r_list_free ( ( * ctx ) -> plist_cache )		6151989	0					
ANR	6152007	Callee	r_list_free		6151989	0					
ANR	6152008	Identifier	r_list_free		6151989	0					
ANR	6152009	ArgumentList	( * ctx ) -> plist_cache		6151989	1					
ANR	6152010	Argument	( * ctx ) -> plist_cache		6151989	0					
ANR	6152011	PtrMemberAccess	( * ctx ) -> plist_cache		6151989	0					
ANR	6152012	UnaryOperationExpression	* ctx		6151989	0					
ANR	6152013	UnaryOperator	*		6151989	0					
ANR	6152014	Identifier	ctx		6151989	1					
ANR	6152015	Identifier	plist_cache		6151989	1					
ANR	6152016	ExpressionStatement	r_list_free ( ( * ctx ) -> tlist_cache )	165:1:2960:2993	6151989	2	True				
ANR	6152017	CallExpression	r_list_free ( ( * ctx ) -> tlist_cache )		6151989	0					
ANR	6152018	Callee	r_list_free		6151989	0					
ANR	6152019	Identifier	r_list_free		6151989	0					
ANR	6152020	ArgumentList	( * ctx ) -> tlist_cache		6151989	1					
ANR	6152021	Argument	( * ctx ) -> tlist_cache		6151989	0					
ANR	6152022	PtrMemberAccess	( * ctx ) -> tlist_cache		6151989	0					
ANR	6152023	UnaryOperationExpression	* ctx		6151989	0					
ANR	6152024	UnaryOperator	*		6151989	0					
ANR	6152025	Identifier	ctx		6151989	1					
ANR	6152026	Identifier	tlist_cache		6151989	1					
ANR	6152027	ExpressionStatement	iob_close ( ( * ctx ) -> io_ptr )	166:1:2996:3022	6151989	3	True				
ANR	6152028	CallExpression	iob_close ( ( * ctx ) -> io_ptr )		6151989	0					
ANR	6152029	Callee	iob_close		6151989	0					
ANR	6152030	Identifier	iob_close		6151989	0					
ANR	6152031	ArgumentList	( * ctx ) -> io_ptr		6151989	1					
ANR	6152032	Argument	( * ctx ) -> io_ptr		6151989	0					
ANR	6152033	PtrMemberAccess	( * ctx ) -> io_ptr		6151989	0					
ANR	6152034	UnaryOperationExpression	* ctx		6151989	0					
ANR	6152035	UnaryOperator	*		6151989	0					
ANR	6152036	Identifier	ctx		6151989	1					
ANR	6152037	Identifier	io_ptr		6151989	1					
ANR	6152038	ExpressionStatement	R_FREE ( * ctx )	167:1:3025:3038	6151989	4	True				
ANR	6152039	CallExpression	R_FREE ( * ctx )		6151989	0					
ANR	6152040	Callee	R_FREE		6151989	0					
ANR	6152041	Identifier	R_FREE		6151989	0					
ANR	6152042	ArgumentList	* ctx		6151989	1					
ANR	6152043	Argument	* ctx		6151989	0					
ANR	6152044	UnaryOperationExpression	* ctx		6151989	0					
ANR	6152045	UnaryOperator	*		6151989	0					
ANR	6152046	Identifier	ctx		6151989	1					
ANR	6152047	ReturnType	void		6151989	1					
ANR	6152048	Identifier	windbg_ctx_free		6151989	2					
ANR	6152049	ParameterList	WindCtx * * ctx		6151989	3					
ANR	6152050	Parameter	WindCtx * * ctx	160:21:2871:2883	6151989	0	True				
ANR	6152051	ParameterType	WindCtx * *		6151989	0					
ANR	6152052	Identifier	ctx		6151989	1					
ANR	6152053	CFGEntryNode	ENTRY		6151989		True				
ANR	6152054	CFGExitNode	EXIT		6151989		True				
ANR	6152055	Symbol	( * ctx ) -> tlist_cache		6151989						
ANR	6152056	Symbol	( * ctx ) -> plist_cache		6151989						
ANR	6152057	Symbol	ctx		6151989						
ANR	6152058	Symbol	* * ctx		6151989						
ANR	6152059	Symbol	( * ctx ) -> io_ptr		6151989						
ANR	6152060	Symbol	* ctx		6151989						
ANR	6152061	Function	dump_stc	174:0:3175:3786							
ANR	6152062	FunctionDef	dump_stc (kd_packet_t * p)		6152061	0					
ANR	6152063	CompoundStatement		174:37:3212:3786	6152061	0					
ANR	6152064	IdentifierDeclStatement	kd_stc_64 * stc = PKT_STC ( p ) ;	175:1:3215:3243	6152061	0	True				
ANR	6152065	IdentifierDecl	* stc = PKT_STC ( p )		6152061	0					
ANR	6152066	IdentifierDeclType	kd_stc_64 *		6152061	0					
ANR	6152067	Identifier	stc		6152061	1					
ANR	6152068	AssignmentExpression	* stc = PKT_STC ( p )		6152061	2		=			
ANR	6152069	Identifier	stc		6152061	0					
ANR	6152070	CallExpression	PKT_STC ( p )		6152061	1					
ANR	6152071	Callee	PKT_STC		6152061	0					
ANR	6152072	Identifier	PKT_STC		6152061	0					
ANR	6152073	ArgumentList	p		6152061	1					
ANR	6152074	Argument	p		6152061	0					
ANR	6152075	Identifier	p		6152061	0					
ANR	6152076	ExpressionStatement	"eprintf ( ""New state: %08x\\n"" , stc -> state )"	177:1:3247:3288	6152061	1	True				
ANR	6152077	CallExpression	"eprintf ( ""New state: %08x\\n"" , stc -> state )"		6152061	0					
ANR	6152078	Callee	eprintf		6152061	0					
ANR	6152079	Identifier	eprintf		6152061	0					
ANR	6152080	ArgumentList	"""New state: %08x\\n"""		6152061	1					
ANR	6152081	Argument	"""New state: %08x\\n"""		6152061	0					
ANR	6152082	PrimaryExpression	"""New state: %08x\\n"""		6152061	0					
ANR	6152083	Argument	stc -> state		6152061	1					
ANR	6152084	PtrMemberAccess	stc -> state		6152061	0					
ANR	6152085	Identifier	stc		6152061	0					
ANR	6152086	Identifier	state		6152061	1					
ANR	6152087	Statement	eprintf	178:1:3291:3297	6152061	2	True				
ANR	6152088	Statement	(	178:9:3299:3299	6152061	3	True				
ANR	6152089	Statement	"""EIP: 0x%016"""	178:10:3300:3312	6152061	4	True				
ANR	6152090	Statement	PFMT64x	178:23:3313:3319	6152061	5	True				
ANR	6152091	Statement	""" Kthread: 0x%016"""	178:31:3321:3338	6152061	6	True				
ANR	6152092	Statement	PFMT64x	178:49:3339:3345	6152061	7	True				
ANR	6152093	Statement	"""\\n"""	178:57:3347:3350	6152061	8	True				
ANR	6152094	Statement	","	178:61:3351:3351	6152061	9	True				
ANR	6152095	Statement	(	179:2:3355:3355	6152061	10	True				
ANR	6152096	Statement	ut64	179:3:3356:3359	6152061	11	True				
ANR	6152097	Statement	)	179:7:3360:3360	6152061	12	True				
ANR	6152098	Statement	stc	179:9:3362:3364	6152061	13	True				
ANR	6152099	Statement	->	179:12:3365:3366	6152061	14	True				
ANR	6152100	Statement	pc	179:14:3367:3368	6152061	15	True				
ANR	6152101	Statement	","	179:16:3369:3369	6152061	16	True				
ANR	6152102	Statement	(	179:18:3371:3371	6152061	17	True				
ANR	6152103	Statement	ut64	179:19:3372:3375	6152061	18	True				
ANR	6152104	Statement	)	179:23:3376:3376	6152061	19	True				
ANR	6152105	Statement	stc	179:25:3378:3380	6152061	20	True				
ANR	6152106	Statement	->	179:28:3381:3382	6152061	21	True				
ANR	6152107	Statement	kthread	179:30:3383:3389	6152061	22	True				
ANR	6152108	Statement	)	179:37:3390:3390	6152061	23	True				
ANR	6152109	ExpressionStatement		179:38:3391:3391	6152061	24	True				
ANR	6152110	ExpressionStatement	"eprintf ( ""On cpu %i/%i\\n"" , stc -> cpu + 1 , stc -> cpu_count )"	180:1:3394:3450	6152061	25	True				
ANR	6152111	CallExpression	"eprintf ( ""On cpu %i/%i\\n"" , stc -> cpu + 1 , stc -> cpu_count )"		6152061	0					
ANR	6152112	Callee	eprintf		6152061	0					
ANR	6152113	Identifier	eprintf		6152061	0					
ANR	6152114	ArgumentList	"""On cpu %i/%i\\n"""		6152061	1					
ANR	6152115	Argument	"""On cpu %i/%i\\n"""		6152061	0					
ANR	6152116	PrimaryExpression	"""On cpu %i/%i\\n"""		6152061	0					
ANR	6152117	Argument	stc -> cpu + 1		6152061	1					
ANR	6152118	AdditiveExpression	stc -> cpu + 1		6152061	0		+			
ANR	6152119	PtrMemberAccess	stc -> cpu		6152061	0					
ANR	6152120	Identifier	stc		6152061	0					
ANR	6152121	Identifier	cpu		6152061	1					
ANR	6152122	PrimaryExpression	1		6152061	1					
ANR	6152123	Argument	stc -> cpu_count		6152061	2					
ANR	6152124	PtrMemberAccess	stc -> cpu_count		6152061	0					
ANR	6152125	Identifier	stc		6152061	0					
ANR	6152126	Identifier	cpu_count		6152061	1					
ANR	6152127	IfStatement	if ( stc -> state == DbgKdExceptionStateChange )		6152061	26					
ANR	6152128	Condition	stc -> state == DbgKdExceptionStateChange	182:5:3458:3496	6152061	0	True				
ANR	6152129	EqualityExpression	stc -> state == DbgKdExceptionStateChange		6152061	0		==			
ANR	6152130	PtrMemberAccess	stc -> state		6152061	0					
ANR	6152131	Identifier	stc		6152061	0					
ANR	6152132	Identifier	state		6152061	1					
ANR	6152133	Identifier	DbgKdExceptionStateChange		6152061	1					
ANR	6152134	CompoundStatement		9:46:286:286	6152061	1					
ANR	6152135	ExpressionStatement	"eprintf ( ""Exception\\n"" )"	183:2:3503:3526	6152061	0	True				
ANR	6152136	CallExpression	"eprintf ( ""Exception\\n"" )"		6152061	0					
ANR	6152137	Callee	eprintf		6152061	0					
ANR	6152138	Identifier	eprintf		6152061	0					
ANR	6152139	ArgumentList	"""Exception\\n"""		6152061	1					
ANR	6152140	Argument	"""Exception\\n"""		6152061	0					
ANR	6152141	PrimaryExpression	"""Exception\\n"""		6152061	0					
ANR	6152142	ExpressionStatement	"eprintf ( "" Code   : %08x\\n"" , stc -> exception . code )"	184:2:3530:3579	6152061	1	True				
ANR	6152143	CallExpression	"eprintf ( "" Code   : %08x\\n"" , stc -> exception . code )"		6152061	0					
ANR	6152144	Callee	eprintf		6152061	0					
ANR	6152145	Identifier	eprintf		6152061	0					
ANR	6152146	ArgumentList	""" Code   : %08x\\n"""		6152061	1					
ANR	6152147	Argument	""" Code   : %08x\\n"""		6152061	0					
ANR	6152148	PrimaryExpression	""" Code   : %08x\\n"""		6152061	0					
ANR	6152149	Argument	stc -> exception . code		6152061	1					
ANR	6152150	MemberAccess	stc -> exception . code		6152061	0					
ANR	6152151	PtrMemberAccess	stc -> exception		6152061	0					
ANR	6152152	Identifier	stc		6152061	0					
ANR	6152153	Identifier	exception		6152061	1					
ANR	6152154	Identifier	code		6152061	1					
ANR	6152155	ExpressionStatement	"eprintf ( "" Flags  : %08x\\n"" , stc -> exception . flags )"	185:2:3583:3633	6152061	2	True				
ANR	6152156	CallExpression	"eprintf ( "" Flags  : %08x\\n"" , stc -> exception . flags )"		6152061	0					
ANR	6152157	Callee	eprintf		6152061	0					
ANR	6152158	Identifier	eprintf		6152061	0					
ANR	6152159	ArgumentList	""" Flags  : %08x\\n"""		6152061	1					
ANR	6152160	Argument	""" Flags  : %08x\\n"""		6152061	0					
ANR	6152161	PrimaryExpression	""" Flags  : %08x\\n"""		6152061	0					
ANR	6152162	Argument	stc -> exception . flags		6152061	1					
ANR	6152163	MemberAccess	stc -> exception . flags		6152061	0					
ANR	6152164	PtrMemberAccess	stc -> exception		6152061	0					
ANR	6152165	Identifier	stc		6152061	0					
ANR	6152166	Identifier	exception		6152061	1					
ANR	6152167	Identifier	flags		6152061	1					
ANR	6152168	Statement	eprintf	186:2:3637:3643	6152061	3	True				
ANR	6152169	Statement	(	186:10:3645:3645	6152061	4	True				
ANR	6152170	Statement	""" Record : %016"""	186:11:3646:3661	6152061	5	True				
ANR	6152171	Statement	PFMT64x	186:27:3662:3668	6152061	6	True				
ANR	6152172	Statement	"""\\n"""	186:35:3670:3673	6152061	7	True				
ANR	6152173	Statement	","	186:39:3674:3674	6152061	8	True				
ANR	6152174	Statement	(	186:41:3676:3676	6152061	9	True				
ANR	6152175	Statement	ut64	186:42:3677:3680	6152061	10	True				
ANR	6152176	Statement	)	186:46:3681:3681	6152061	11	True				
ANR	6152177	Statement	stc	186:48:3683:3685	6152061	12	True				
ANR	6152178	Statement	->	186:51:3686:3687	6152061	13	True				
ANR	6152179	Statement	exception	186:53:3688:3696	6152061	14	True				
ANR	6152180	Statement	.	186:62:3697:3697	6152061	15	True				
ANR	6152181	Statement	ex_record	186:63:3698:3706	6152061	16	True				
ANR	6152182	Statement	)	186:72:3707:3707	6152061	17	True				
ANR	6152183	ExpressionStatement		186:73:3708:3708	6152061	18	True				
ANR	6152184	Statement	eprintf	187:2:3712:3718	6152061	19	True				
ANR	6152185	Statement	(	187:10:3720:3720	6152061	20	True				
ANR	6152186	Statement	""" Addr   : %016"""	187:11:3721:3736	6152061	21	True				
ANR	6152187	Statement	PFMT64x	187:27:3737:3743	6152061	22	True				
ANR	6152188	Statement	"""\\n"""	187:35:3745:3748	6152061	23	True				
ANR	6152189	Statement	","	187:39:3749:3749	6152061	24	True				
ANR	6152190	Statement	(	187:41:3751:3751	6152061	25	True				
ANR	6152191	Statement	ut64	187:42:3752:3755	6152061	26	True				
ANR	6152192	Statement	)	187:46:3756:3756	6152061	27	True				
ANR	6152193	Statement	stc	187:48:3758:3760	6152061	28	True				
ANR	6152194	Statement	->	187:51:3761:3762	6152061	29	True				
ANR	6152195	Statement	exception	187:53:3763:3771	6152061	30	True				
ANR	6152196	Statement	.	187:62:3772:3772	6152061	31	True				
ANR	6152197	Statement	ex_addr	187:63:3773:3779	6152061	32	True				
ANR	6152198	Statement	)	187:70:3780:3780	6152061	33	True				
ANR	6152199	ExpressionStatement		187:71:3781:3781	6152061	34	True				
ANR	6152200	ReturnType	static void		6152061	1					
ANR	6152201	Identifier	dump_stc		6152061	2					
ANR	6152202	ParameterList	kd_packet_t * p		6152061	3					
ANR	6152203	Parameter	kd_packet_t * p	174:21:3196:3209	6152061	0	True				
ANR	6152204	ParameterType	kd_packet_t *		6152061	0					
ANR	6152205	Identifier	p		6152061	1					
ANR	6152206	CFGEntryNode	ENTRY		6152061		True				
ANR	6152207	CFGExitNode	EXIT		6152061		True				
ANR	6152208	Symbol	p		6152061						
ANR	6152209	Symbol	stc -> exception . code		6152061						
ANR	6152210	Symbol	stc -> exception . flags		6152061						
ANR	6152211	Symbol	stc		6152061						
ANR	6152212	Symbol	PKT_STC		6152061						
ANR	6152213	Symbol	stc -> cpu		6152061						
ANR	6152214	Symbol	* stc		6152061						
ANR	6152215	Symbol	stc -> cpu_count		6152061						
ANR	6152216	Symbol	DbgKdExceptionStateChange		6152061						
ANR	6152217	Symbol	stc -> exception		6152061						
ANR	6152218	Symbol	stc -> state		6152061						
ANR	6152219	Function	do_io_reply	192:0:3796:4336							
ANR	6152220	FunctionDef	"do_io_reply (WindCtx * ctx , kd_packet_t * pkt)"		6152219	0					
ANR	6152221	CompoundStatement		192:55:3851:4336	6152219	0					
ANR	6152222	IdentifierDeclStatement	kd_ioc_t ioc = { 0 } ;	193:1:3854:3877	6152219	0	True				
ANR	6152223	IdentifierDecl	ioc = { 0 }		6152219	0					
ANR	6152224	IdentifierDeclType	kd_ioc_t		6152219	0					
ANR	6152225	Identifier	ioc		6152219	1					
ANR	6152226	AssignmentExpression	ioc = { 0 }		6152219	2		=			
ANR	6152227	Identifier	ioc		6152219	0					
ANR	6152228	InitializerList	0		6152219	1					
ANR	6152229	PrimaryExpression	0		6152219	0					
ANR	6152230	IdentifierDeclStatement	int ret ;	196:1:3880:3887	6152219	1	True				
ANR	6152231	IdentifierDecl	ret		6152219	0					
ANR	6152232	IdentifierDeclType	int		6152219	0					
ANR	6152233	Identifier	ret		6152219	1					
ANR	6152234	ExpressionStatement	ioc . req = 0x3430	197:1:3890:3906	6152219	2	True				
ANR	6152235	AssignmentExpression	ioc . req = 0x3430		6152219	0		=			
ANR	6152236	MemberAccess	ioc . req		6152219	0					
ANR	6152237	Identifier	ioc		6152219	0					
ANR	6152238	Identifier	req		6152219	1					
ANR	6152239	PrimaryExpression	0x3430		6152219	1					
ANR	6152240	ExpressionStatement	ioc . ret = KD_RET_ENOENT	198:1:3909:3932	6152219	3	True				
ANR	6152241	AssignmentExpression	ioc . ret = KD_RET_ENOENT		6152219	0		=			
ANR	6152242	MemberAccess	ioc . ret		6152219	0					
ANR	6152243	Identifier	ioc		6152219	0					
ANR	6152244	Identifier	ret		6152219	1					
ANR	6152245	Identifier	KD_RET_ENOENT		6152219	1					
ANR	6152246	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_FILE_IO , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & ioc , sizeof ( kd_ioc_t ) , NULL , 0 )"	199:1:3935:4066	6152219	4	True				
ANR	6152247	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_FILE_IO , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & ioc , sizeof ( kd_ioc_t ) , NULL , 0 )"		6152219	0		=			
ANR	6152248	Identifier	ret		6152219	0					
ANR	6152249	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_FILE_IO , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & ioc , sizeof ( kd_ioc_t ) , NULL , 0 )"		6152219	1					
ANR	6152250	Callee	kd_send_data_packet		6152219	0					
ANR	6152251	Identifier	kd_send_data_packet		6152219	0					
ANR	6152252	ArgumentList	ctx -> io_ptr		6152219	1					
ANR	6152253	Argument	ctx -> io_ptr		6152219	0					
ANR	6152254	PtrMemberAccess	ctx -> io_ptr		6152219	0					
ANR	6152255	Identifier	ctx		6152219	0					
ANR	6152256	Identifier	io_ptr		6152219	1					
ANR	6152257	Argument	KD_PACKET_TYPE_FILE_IO		6152219	1					
ANR	6152258	Identifier	KD_PACKET_TYPE_FILE_IO		6152219	0					
ANR	6152259	Argument	ctx -> seq_id ^= 1		6152219	2					
ANR	6152260	AssignmentExpression	ctx -> seq_id ^= 1		6152219	0		^=			
ANR	6152261	PtrMemberAccess	ctx -> seq_id		6152219	0					
ANR	6152262	Identifier	ctx		6152219	0					
ANR	6152263	Identifier	seq_id		6152219	1					
ANR	6152264	PrimaryExpression	1		6152219	1					
ANR	6152265	Argument	( uint8_t * ) & ioc		6152219	3					
ANR	6152266	CastExpression	( uint8_t * ) & ioc		6152219	0					
ANR	6152267	CastTarget	uint8_t *		6152219	0					
ANR	6152268	UnaryOperationExpression	& ioc		6152219	1					
ANR	6152269	UnaryOperator	&		6152219	0					
ANR	6152270	Identifier	ioc		6152219	1					
ANR	6152271	Argument	sizeof ( kd_ioc_t )		6152219	4					
ANR	6152272	SizeofExpression	sizeof ( kd_ioc_t )		6152219	0					
ANR	6152273	Sizeof	sizeof		6152219	0					
ANR	6152274	SizeofOperand	kd_ioc_t		6152219	1					
ANR	6152275	Argument	NULL		6152219	5					
ANR	6152276	Identifier	NULL		6152219	0					
ANR	6152277	Argument	0		6152219	6					
ANR	6152278	PrimaryExpression	0		6152219	0					
ANR	6152279	IfStatement	if ( ret != KD_E_OK )		6152219	5					
ANR	6152280	Condition	ret != KD_E_OK	201:5:4073:4086	6152219	0	True				
ANR	6152281	EqualityExpression	ret != KD_E_OK		6152219	0		!=			
ANR	6152282	Identifier	ret		6152219	0					
ANR	6152283	Identifier	KD_E_OK		6152219	1					
ANR	6152284	CompoundStatement		10:21:237:237	6152219	1					
ANR	6152285	ReturnStatement	return false ;	202:2:4093:4105	6152219	0	True				
ANR	6152286	Identifier	false		6152219	0					
ANR	6152287	IdentifierDeclStatement	"WIND_DBG eprintf ( ""Waiting for io_reply ack...\\n"" ) ;"	204:1:4111:4160	6152219	6	True				
ANR	6152288	IdentifierDecl	"eprintf ( ""Waiting for io_reply ack...\\n"" )"		6152219	0					
ANR	6152289	IdentifierDeclType	WIND_DBG		6152219	0					
ANR	6152290	Identifier	eprintf		6152219	1					
ANR	6152291	PrimaryExpression	"""Waiting for io_reply ack...\\n"""		6152219	2					
ANR	6152292	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	205:1:4163:4227	6152219	7	True				
ANR	6152293	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6152219	0		=			
ANR	6152294	Identifier	ret		6152219	0					
ANR	6152295	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6152219	1					
ANR	6152296	Callee	windbg_wait_packet		6152219	0					
ANR	6152297	Identifier	windbg_wait_packet		6152219	0					
ANR	6152298	ArgumentList	ctx		6152219	1					
ANR	6152299	Argument	ctx		6152219	0					
ANR	6152300	Identifier	ctx		6152219	0					
ANR	6152301	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6152219	1					
ANR	6152302	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6152219	0					
ANR	6152303	Argument	NULL		6152219	2					
ANR	6152304	Identifier	NULL		6152219	0					
ANR	6152305	IfStatement	if ( ret != KD_E_OK )		6152219	8					
ANR	6152306	Condition	ret != KD_E_OK	206:5:4234:4247	6152219	0	True				
ANR	6152307	EqualityExpression	ret != KD_E_OK		6152219	0		!=			
ANR	6152308	Identifier	ret		6152219	0					
ANR	6152309	Identifier	KD_E_OK		6152219	1					
ANR	6152310	CompoundStatement		15:21:398:398	6152219	1					
ANR	6152311	ReturnStatement	return false ;	207:2:4254:4266	6152219	0	True				
ANR	6152312	Identifier	false		6152219	0					
ANR	6152313	IdentifierDeclStatement	"WIND_DBG eprintf ( ""Ack received, restore flow\\n"" ) ;"	209:1:4272:4320	6152219	9	True				
ANR	6152314	IdentifierDecl	"eprintf ( ""Ack received, restore flow\\n"" )"		6152219	0					
ANR	6152315	IdentifierDeclType	WIND_DBG		6152219	0					
ANR	6152316	Identifier	eprintf		6152219	1					
ANR	6152317	PrimaryExpression	"""Ack received, restore flow\\n"""		6152219	2					
ANR	6152318	ReturnStatement	return true ;	210:1:4323:4334	6152219	10	True				
ANR	6152319	Identifier	true		6152219	0					
ANR	6152320	ReturnType	static int		6152219	1					
ANR	6152321	Identifier	do_io_reply		6152219	2					
ANR	6152322	ParameterList	"WindCtx * ctx , kd_packet_t * pkt"		6152219	3					
ANR	6152323	Parameter	WindCtx * ctx	192:23:3819:3830	6152219	0	True				
ANR	6152324	ParameterType	WindCtx *		6152219	0					
ANR	6152325	Identifier	ctx		6152219	1					
ANR	6152326	Parameter	kd_packet_t * pkt	192:37:3833:3848	6152219	1	True				
ANR	6152327	ParameterType	kd_packet_t *		6152219	0					
ANR	6152328	Identifier	pkt		6152219	1					
ANR	6152329	CFGEntryNode	ENTRY		6152219		True				
ANR	6152330	CFGExitNode	EXIT		6152219		True				
ANR	6152331	Symbol	ret		6152219						
ANR	6152332	Symbol	kd_send_data_packet		6152219						
ANR	6152333	Symbol	KD_PACKET_TYPE_FILE_IO		6152219						
ANR	6152334	Symbol	KD_RET_ENOENT		6152219						
ANR	6152335	Symbol	NULL		6152219						
ANR	6152336	Symbol	& ioc		6152219						
ANR	6152337	Symbol	KD_E_OK		6152219						
ANR	6152338	Symbol	ctx		6152219						
ANR	6152339	Symbol	false		6152219						
ANR	6152340	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6152219						
ANR	6152341	Symbol	* ctx		6152219						
ANR	6152342	Symbol	ctx -> io_ptr		6152219						
ANR	6152343	Symbol	eprintf		6152219						
ANR	6152344	Symbol	ctx -> seq_id		6152219						
ANR	6152345	Symbol	pkt		6152219						
ANR	6152346	Symbol	true		6152219						
ANR	6152347	Symbol	ioc . req		6152219						
ANR	6152348	Symbol	windbg_wait_packet		6152219						
ANR	6152349	Symbol	ioc		6152219						
ANR	6152350	Symbol	ioc . ret		6152219						
ANR	6152351	Function	windbg_wait_packet	213:0:4339:5484							
ANR	6152352	FunctionDef	"windbg_wait_packet (WindCtx * ctx , const uint32_t type , kd_packet_t * * p)"		6152351	0					
ANR	6152353	CompoundStatement		213:75:4414:5484	6152351	0					
ANR	6152354	IdentifierDeclStatement	kd_packet_t * pkt = NULL ;	214:1:4417:4440	6152351	0	True				
ANR	6152355	IdentifierDecl	* pkt = NULL		6152351	0					
ANR	6152356	IdentifierDeclType	kd_packet_t *		6152351	0					
ANR	6152357	Identifier	pkt		6152351	1					
ANR	6152358	AssignmentExpression	* pkt = NULL		6152351	2		=			
ANR	6152359	Identifier	NULL		6152351	0					
ANR	6152360	Identifier	NULL		6152351	1					
ANR	6152361	IdentifierDeclStatement	int ret ;	215:1:4443:4450	6152351	1	True				
ANR	6152362	IdentifierDecl	ret		6152351	0					
ANR	6152363	IdentifierDeclType	int		6152351	0					
ANR	6152364	Identifier	ret		6152351	1					
ANR	6152365	IdentifierDeclStatement	int retries = 10 ;	216:1:4453:4469	6152351	2	True				
ANR	6152366	IdentifierDecl	retries = 10		6152351	0					
ANR	6152367	IdentifierDeclType	int		6152351	0					
ANR	6152368	Identifier	retries		6152351	1					
ANR	6152369	AssignmentExpression	retries = 10		6152351	2		=			
ANR	6152370	Identifier	retries		6152351	0					
ANR	6152371	PrimaryExpression	10		6152351	1					
ANR	6152372	DoStatement	do		6152351	3					
ANR	6152373	CompoundStatement		6:4:61:61	6152351	0					
ANR	6152374	IfStatement	if ( pkt )		6152351	0					
ANR	6152375	Condition	pkt	219:6:4484:4486	6152351	0	True				
ANR	6152376	Identifier	pkt		6152351	0					
ANR	6152377	CompoundStatement		7:11:74:74	6152351	1					
ANR	6152378	ExpressionStatement	R_FREE ( pkt )	220:3:4494:4506	6152351	0	True				
ANR	6152379	CallExpression	R_FREE ( pkt )		6152351	0					
ANR	6152380	Callee	R_FREE		6152351	0					
ANR	6152381	Identifier	R_FREE		6152351	0					
ANR	6152382	ArgumentList	pkt		6152351	1					
ANR	6152383	Argument	pkt		6152351	0					
ANR	6152384	Identifier	pkt		6152351	0					
ANR	6152385	ExpressionStatement	"ret = kd_read_packet ( ctx -> io_ptr , & pkt )"	223:2:4546:4586	6152351	1	True				
ANR	6152386	AssignmentExpression	"ret = kd_read_packet ( ctx -> io_ptr , & pkt )"		6152351	0		=			
ANR	6152387	Identifier	ret		6152351	0					
ANR	6152388	CallExpression	"kd_read_packet ( ctx -> io_ptr , & pkt )"		6152351	1					
ANR	6152389	Callee	kd_read_packet		6152351	0					
ANR	6152390	Identifier	kd_read_packet		6152351	0					
ANR	6152391	ArgumentList	ctx -> io_ptr		6152351	1					
ANR	6152392	Argument	ctx -> io_ptr		6152351	0					
ANR	6152393	PtrMemberAccess	ctx -> io_ptr		6152351	0					
ANR	6152394	Identifier	ctx		6152351	0					
ANR	6152395	Identifier	io_ptr		6152351	1					
ANR	6152396	Argument	& pkt		6152351	1					
ANR	6152397	UnaryOperationExpression	& pkt		6152351	0					
ANR	6152398	UnaryOperator	&		6152351	0					
ANR	6152399	Identifier	pkt		6152351	1					
ANR	6152400	IfStatement	if ( ret != KD_E_OK || ! pkt )		6152351	2					
ANR	6152401	Condition	ret != KD_E_OK || ! pkt	224:6:4594:4615	6152351	0	True				
ANR	6152402	OrExpression	ret != KD_E_OK || ! pkt		6152351	0		||			
ANR	6152403	EqualityExpression	ret != KD_E_OK		6152351	0		!=			
ANR	6152404	Identifier	ret		6152351	0					
ANR	6152405	Identifier	KD_E_OK		6152351	1					
ANR	6152406	UnaryOperationExpression	! pkt		6152351	1					
ANR	6152407	UnaryOperator	!		6152351	0					
ANR	6152408	Identifier	pkt		6152351	1					
ANR	6152409	CompoundStatement		12:30:203:203	6152351	1					
ANR	6152410	BreakStatement	break ;	225:3:4623:4628	6152351	0	True				
ANR	6152411	IfStatement	if ( pkt -> type != type )		6152351	3					
ANR	6152412	Condition	pkt -> type != type	229:6:4686:4702	6152351	0	True				
ANR	6152413	EqualityExpression	pkt -> type != type		6152351	0		!=			
ANR	6152414	PtrMemberAccess	pkt -> type		6152351	0					
ANR	6152415	Identifier	pkt		6152351	0					
ANR	6152416	Identifier	type		6152351	1					
ANR	6152417	Identifier	type		6152351	1					
ANR	6152418	CompoundStatement		17:25:290:290	6152351	1					
ANR	6152419	ExpressionStatement	"eprintf ( ""We were not waiting for this... %08x\\n"" , pkt -> type )"	230:3:4710:4771	6152351	0	True				
ANR	6152420	CallExpression	"eprintf ( ""We were not waiting for this... %08x\\n"" , pkt -> type )"		6152351	0					
ANR	6152421	Callee	eprintf		6152351	0					
ANR	6152422	Identifier	eprintf		6152351	0					
ANR	6152423	ArgumentList	"""We were not waiting for this... %08x\\n"""		6152351	1					
ANR	6152424	Argument	"""We were not waiting for this... %08x\\n"""		6152351	0					
ANR	6152425	PrimaryExpression	"""We were not waiting for this... %08x\\n"""		6152351	0					
ANR	6152426	Argument	pkt -> type		6152351	1					
ANR	6152427	PtrMemberAccess	pkt -> type		6152351	0					
ANR	6152428	Identifier	pkt		6152351	0					
ANR	6152429	Identifier	type		6152351	1					
ANR	6152430	IfStatement	if ( pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_STATE_CHANGE64 )		6152351	4					
ANR	6152431	Condition	pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_STATE_CHANGE64	232:6:4783:4857	6152351	0	True				
ANR	6152432	AndExpression	pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_STATE_CHANGE64		6152351	0		&&			
ANR	6152433	EqualityExpression	pkt -> leader == KD_PACKET_DATA		6152351	0		==			
ANR	6152434	PtrMemberAccess	pkt -> leader		6152351	0					
ANR	6152435	Identifier	pkt		6152351	0					
ANR	6152436	Identifier	leader		6152351	1					
ANR	6152437	Identifier	KD_PACKET_DATA		6152351	1					
ANR	6152438	EqualityExpression	pkt -> type == KD_PACKET_TYPE_STATE_CHANGE64		6152351	1		==			
ANR	6152439	PtrMemberAccess	pkt -> type		6152351	0					
ANR	6152440	Identifier	pkt		6152351	0					
ANR	6152441	Identifier	type		6152351	1					
ANR	6152442	Identifier	KD_PACKET_TYPE_STATE_CHANGE64		6152351	1					
ANR	6152443	CompoundStatement		20:83:445:445	6152351	1					
ANR	6152444	ExpressionStatement	"eprintf ( ""State64\\n"" )"	234:3:4887:4908	6152351	0	True				
ANR	6152445	CallExpression	"eprintf ( ""State64\\n"" )"		6152351	0					
ANR	6152446	Callee	eprintf		6152351	0					
ANR	6152447	Identifier	eprintf		6152351	0					
ANR	6152448	ArgumentList	"""State64\\n"""		6152351	1					
ANR	6152449	Argument	"""State64\\n"""		6152351	0					
ANR	6152450	PrimaryExpression	"""State64\\n"""		6152351	0					
ANR	6152451	IfStatement	if ( pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_FILE_IO )		6152351	5					
ANR	6152452	Condition	pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_FILE_IO	236:6:4920:4987	6152351	0	True				
ANR	6152453	AndExpression	pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_FILE_IO		6152351	0		&&			
ANR	6152454	EqualityExpression	pkt -> leader == KD_PACKET_DATA		6152351	0		==			
ANR	6152455	PtrMemberAccess	pkt -> leader		6152351	0					
ANR	6152456	Identifier	pkt		6152351	0					
ANR	6152457	Identifier	leader		6152351	1					
ANR	6152458	Identifier	KD_PACKET_DATA		6152351	1					
ANR	6152459	EqualityExpression	pkt -> type == KD_PACKET_TYPE_FILE_IO		6152351	1		==			
ANR	6152460	PtrMemberAccess	pkt -> type		6152351	0					
ANR	6152461	Identifier	pkt		6152351	0					
ANR	6152462	Identifier	type		6152351	1					
ANR	6152463	Identifier	KD_PACKET_TYPE_FILE_IO		6152351	1					
ANR	6152464	CompoundStatement		24:76:575:575	6152351	1					
ANR	6152465	ExpressionStatement	"eprintf ( ""Replying IO\\n"" )"	237:3:4995:5020	6152351	0	True				
ANR	6152466	CallExpression	"eprintf ( ""Replying IO\\n"" )"		6152351	0					
ANR	6152467	Callee	eprintf		6152351	0					
ANR	6152468	Identifier	eprintf		6152351	0					
ANR	6152469	ArgumentList	"""Replying IO\\n"""		6152351	1					
ANR	6152470	Argument	"""Replying IO\\n"""		6152351	0					
ANR	6152471	PrimaryExpression	"""Replying IO\\n"""		6152351	0					
ANR	6152472	ExpressionStatement	"do_io_reply ( ctx , pkt )"	238:3:5025:5047	6152351	1	True				
ANR	6152473	CallExpression	"do_io_reply ( ctx , pkt )"		6152351	0					
ANR	6152474	Callee	do_io_reply		6152351	0					
ANR	6152475	Identifier	do_io_reply		6152351	0					
ANR	6152476	ArgumentList	ctx		6152351	1					
ANR	6152477	Argument	ctx		6152351	0					
ANR	6152478	Identifier	ctx		6152351	0					
ANR	6152479	Argument	pkt		6152351	1					
ANR	6152480	Identifier	pkt		6152351	0					
ANR	6152481	IfStatement	if ( pkt -> leader == KD_PACKET_CTRL && pkt -> type == KD_PACKET_TYPE_RESEND )		6152351	6					
ANR	6152482	Condition	pkt -> leader == KD_PACKET_CTRL && pkt -> type == KD_PACKET_TYPE_RESEND	243:6:5120:5186	6152351	0	True				
ANR	6152483	AndExpression	pkt -> leader == KD_PACKET_CTRL && pkt -> type == KD_PACKET_TYPE_RESEND		6152351	0		&&			
ANR	6152484	EqualityExpression	pkt -> leader == KD_PACKET_CTRL		6152351	0		==			
ANR	6152485	PtrMemberAccess	pkt -> leader		6152351	0					
ANR	6152486	Identifier	pkt		6152351	0					
ANR	6152487	Identifier	leader		6152351	1					
ANR	6152488	Identifier	KD_PACKET_CTRL		6152351	1					
ANR	6152489	EqualityExpression	pkt -> type == KD_PACKET_TYPE_RESEND		6152351	1		==			
ANR	6152490	PtrMemberAccess	pkt -> type		6152351	0					
ANR	6152491	Identifier	pkt		6152351	0					
ANR	6152492	Identifier	type		6152351	1					
ANR	6152493	Identifier	KD_PACKET_TYPE_RESEND		6152351	1					
ANR	6152494	CompoundStatement		31:75:774:774	6152351	1					
ANR	6152495	ExpressionStatement	r_sys_backtrace ( )	244:3:5194:5212	6152351	0	True				
ANR	6152496	CallExpression	r_sys_backtrace ( )		6152351	0					
ANR	6152497	Callee	r_sys_backtrace		6152351	0					
ANR	6152498	Identifier	r_sys_backtrace		6152351	0					
ANR	6152499	ArgumentList			6152351	1					
ANR	6152500	ExpressionStatement	"eprintf ( ""Waoh. You probably sent a malformed packet !\\n"" )"	245:3:5217:5275	6152351	1	True				
ANR	6152501	CallExpression	"eprintf ( ""Waoh. You probably sent a malformed packet !\\n"" )"		6152351	0					
ANR	6152502	Callee	eprintf		6152351	0					
ANR	6152503	Identifier	eprintf		6152351	0					
ANR	6152504	ArgumentList	"""Waoh. You probably sent a malformed packet !\\n"""		6152351	1					
ANR	6152505	Argument	"""Waoh. You probably sent a malformed packet !\\n"""		6152351	0					
ANR	6152506	PrimaryExpression	"""Waoh. You probably sent a malformed packet !\\n"""		6152351	0					
ANR	6152507	ExpressionStatement	ret = KD_E_MALFORMED	246:3:5280:5300	6152351	2	True				
ANR	6152508	AssignmentExpression	ret = KD_E_MALFORMED		6152351	0		=			
ANR	6152509	Identifier	ret		6152351	0					
ANR	6152510	Identifier	KD_E_MALFORMED		6152351	1					
ANR	6152511	Condition	pkt -> type != type && retries --	249:10:5328:5357	6152351	1	True				
ANR	6152512	AndExpression	pkt -> type != type && retries --		6152351	0		&&			
ANR	6152513	EqualityExpression	pkt -> type != type		6152351	0		!=			
ANR	6152514	PtrMemberAccess	pkt -> type		6152351	0					
ANR	6152515	Identifier	pkt		6152351	0					
ANR	6152516	Identifier	type		6152351	1					
ANR	6152517	Identifier	type		6152351	1					
ANR	6152518	PostIncDecOperationExpression	retries --		6152351	1					
ANR	6152519	Identifier	retries		6152351	0					
ANR	6152520	IncDec	--		6152351	1					
ANR	6152521	IfStatement	if ( ret != KD_E_OK )		6152351	4					
ANR	6152522	Condition	ret != KD_E_OK	251:5:5367:5380	6152351	0	True				
ANR	6152523	EqualityExpression	ret != KD_E_OK		6152351	0		!=			
ANR	6152524	Identifier	ret		6152351	0					
ANR	6152525	Identifier	KD_E_OK		6152351	1					
ANR	6152526	CompoundStatement		39:21:968:968	6152351	1					
ANR	6152527	ExpressionStatement	free ( pkt )	252:2:5387:5397	6152351	0	True				
ANR	6152528	CallExpression	free ( pkt )		6152351	0					
ANR	6152529	Callee	free		6152351	0					
ANR	6152530	Identifier	free		6152351	0					
ANR	6152531	ArgumentList	pkt		6152351	1					
ANR	6152532	Argument	pkt		6152351	0					
ANR	6152533	Identifier	pkt		6152351	0					
ANR	6152534	ReturnStatement	return ret ;	253:2:5401:5411	6152351	1	True				
ANR	6152535	Identifier	ret		6152351	0					
ANR	6152536	IfStatement	if ( p )		6152351	5					
ANR	6152537	Condition	p	256:5:5422:5422	6152351	0	True				
ANR	6152538	Identifier	p		6152351	0					
ANR	6152539	CompoundStatement		44:8:1010:1010	6152351	1					
ANR	6152540	ExpressionStatement	* p = pkt	257:2:5429:5437	6152351	0	True				
ANR	6152541	AssignmentExpression	* p = pkt		6152351	0		=			
ANR	6152542	UnaryOperationExpression	* p		6152351	0					
ANR	6152543	UnaryOperator	*		6152351	0					
ANR	6152544	Identifier	p		6152351	1					
ANR	6152545	Identifier	pkt		6152351	1					
ANR	6152546	ElseStatement	else		6152351	0					
ANR	6152547	CompoundStatement		46:8:1032:1032	6152351	0					
ANR	6152548	ExpressionStatement	free ( pkt )	259:2:5451:5461	6152351	0	True				
ANR	6152549	CallExpression	free ( pkt )		6152351	0					
ANR	6152550	Callee	free		6152351	0					
ANR	6152551	Identifier	free		6152351	0					
ANR	6152552	ArgumentList	pkt		6152351	1					
ANR	6152553	Argument	pkt		6152351	0					
ANR	6152554	Identifier	pkt		6152351	0					
ANR	6152555	ReturnStatement	return KD_E_OK ;	262:1:5468:5482	6152351	6	True				
ANR	6152556	Identifier	KD_E_OK		6152351	0					
ANR	6152557	ReturnType	int		6152351	1					
ANR	6152558	Identifier	windbg_wait_packet		6152351	2					
ANR	6152559	ParameterList	"WindCtx * ctx , const uint32_t type , kd_packet_t * * p"		6152351	3					
ANR	6152560	Parameter	WindCtx * ctx	213:23:4362:4373	6152351	0	True				
ANR	6152561	ParameterType	WindCtx *		6152351	0					
ANR	6152562	Identifier	ctx		6152351	1					
ANR	6152563	Parameter	const uint32_t type	213:37:4376:4394	6152351	1	True				
ANR	6152564	ParameterType	const uint32_t		6152351	0					
ANR	6152565	Identifier	type		6152351	1					
ANR	6152566	Parameter	kd_packet_t * * p	213:58:4397:4411	6152351	2	True				
ANR	6152567	ParameterType	kd_packet_t * *		6152351	0					
ANR	6152568	Identifier	p		6152351	1					
ANR	6152569	CFGEntryNode	ENTRY		6152351		True				
ANR	6152570	CFGExitNode	EXIT		6152351		True				
ANR	6152571	Symbol	ret		6152351						
ANR	6152572	Symbol	KD_PACKET_TYPE_FILE_IO		6152351						
ANR	6152573	Symbol	NULL		6152351						
ANR	6152574	Symbol	* pkt		6152351						
ANR	6152575	Symbol	pkt -> type		6152351						
ANR	6152576	Symbol	KD_E_OK		6152351						
ANR	6152577	Symbol	ctx		6152351						
ANR	6152578	Symbol	KD_PACKET_DATA		6152351						
ANR	6152579	Symbol	type		6152351						
ANR	6152580	Symbol	* ctx		6152351						
ANR	6152581	Symbol	KD_PACKET_CTRL		6152351						
ANR	6152582	Symbol	p		6152351						
ANR	6152583	Symbol	retries		6152351						
ANR	6152584	Symbol	ctx -> io_ptr		6152351						
ANR	6152585	Symbol	KD_PACKET_TYPE_STATE_CHANGE64		6152351						
ANR	6152586	Symbol	KD_PACKET_TYPE_RESEND		6152351						
ANR	6152587	Symbol	pkt -> leader		6152351						
ANR	6152588	Symbol	pkt		6152351						
ANR	6152589	Symbol	& pkt		6152351						
ANR	6152590	Symbol	* p		6152351						
ANR	6152591	Symbol	kd_read_packet		6152351						
ANR	6152592	Symbol	KD_E_MALFORMED		6152351						
ANR	6152593	ClassDef	<unnamed>	267:9:5565:5696							
ANR	6152594	DeclStmt									
ANR	6152595	Decl							char	char [ 4 ]	tag
ANR	6152596	DeclStmt									
ANR	6152597	Decl							uint32_t	uint32_t	start_vpn
ANR	6152598	DeclStmt									
ANR	6152599	Decl							uint32_t	uint32_t	end_vpn
ANR	6152600	DeclStmt									
ANR	6152601	Decl							uint32_t	uint32_t	parent
ANR	6152602	DeclStmt									
ANR	6152603	Decl							uint32_t	uint32_t	left
ANR	6152604	DeclStmt									
ANR	6152605	Decl							uint32_t	uint32_t	right
ANR	6152606	DeclStmt									
ANR	6152607	Decl							uint32_t	uint32_t	flags
ANR	6152608	Function	windbg_walk_vadtree	277:0:5713:6529							
ANR	6152609	FunctionDef	"windbg_walk_vadtree (WindCtx * ctx , ut64 address , ut64 parent)"		6152608	0					
ANR	6152610	CompoundStatement		277:65:5778:6529	6152608	0					
ANR	6152611	IdentifierDeclStatement	mmvad_short entry = { { 0 } } ;	278:1:5781:5810	6152608	0	True				
ANR	6152612	IdentifierDecl	entry = { { 0 } }		6152608	0					
ANR	6152613	IdentifierDeclType	mmvad_short		6152608	0					
ANR	6152614	Identifier	entry		6152608	1					
ANR	6152615	AssignmentExpression	entry = { { 0 } }		6152608	2		=			
ANR	6152616	Identifier	entry		6152608	0					
ANR	6152617	InitializerList	0		6152608	1					
ANR	6152618	InitializerList	0		6152608	0					
ANR	6152619	PrimaryExpression	0		6152608	0					
ANR	6152620	IdentifierDeclStatement	"ut64 start , end ;"	279:1:5813:5828	6152608	1	True				
ANR	6152621	IdentifierDecl	start		6152608	0					
ANR	6152622	IdentifierDeclType	ut64		6152608	0					
ANR	6152623	Identifier	start		6152608	1					
ANR	6152624	IdentifierDecl	end		6152608	1					
ANR	6152625	IdentifierDeclType	ut64		6152608	0					
ANR	6152626	Identifier	end		6152608	1					
ANR	6152627	IdentifierDeclStatement	int prot ;	280:1:5831:5839	6152608	2	True				
ANR	6152628	IdentifierDecl	prot		6152608	0					
ANR	6152629	IdentifierDeclType	int		6152608	0					
ANR	6152630	Identifier	prot		6152608	1					
ANR	6152631	IfStatement	"if ( windbg_read_at ( ctx , ( uint8_t * ) & entry , address - 0x4 , sizeof ( mmvad_short ) ) != sizeof ( mmvad_short ) )"		6152608	3					
ANR	6152632	Condition	"windbg_read_at ( ctx , ( uint8_t * ) & entry , address - 0x4 , sizeof ( mmvad_short ) ) != sizeof ( mmvad_short )"	282:5:5847:5946	6152608	0	True				
ANR	6152633	EqualityExpression	"windbg_read_at ( ctx , ( uint8_t * ) & entry , address - 0x4 , sizeof ( mmvad_short ) ) != sizeof ( mmvad_short )"		6152608	0		!=			
ANR	6152634	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & entry , address - 0x4 , sizeof ( mmvad_short ) )"		6152608	0					
ANR	6152635	Callee	windbg_read_at		6152608	0					
ANR	6152636	Identifier	windbg_read_at		6152608	0					
ANR	6152637	ArgumentList	ctx		6152608	1					
ANR	6152638	Argument	ctx		6152608	0					
ANR	6152639	Identifier	ctx		6152608	0					
ANR	6152640	Argument	( uint8_t * ) & entry		6152608	1					
ANR	6152641	CastExpression	( uint8_t * ) & entry		6152608	0					
ANR	6152642	CastTarget	uint8_t *		6152608	0					
ANR	6152643	UnaryOperationExpression	& entry		6152608	1					
ANR	6152644	UnaryOperator	&		6152608	0					
ANR	6152645	Identifier	entry		6152608	1					
ANR	6152646	Argument	address - 0x4		6152608	2					
ANR	6152647	AdditiveExpression	address - 0x4		6152608	0		-			
ANR	6152648	Identifier	address		6152608	0					
ANR	6152649	PrimaryExpression	0x4		6152608	1					
ANR	6152650	Argument	sizeof ( mmvad_short )		6152608	3					
ANR	6152651	SizeofExpression	sizeof ( mmvad_short )		6152608	0					
ANR	6152652	Sizeof	sizeof		6152608	0					
ANR	6152653	SizeofOperand	mmvad_short		6152608	1					
ANR	6152654	SizeofExpression	sizeof ( mmvad_short )		6152608	1					
ANR	6152655	Sizeof	sizeof		6152608	0					
ANR	6152656	SizeofOperand	mmvad_short		6152608	1					
ANR	6152657	CompoundStatement		6:107:170:170	6152608	1					
ANR	6152658	Statement	eprintf	283:2:5953:5959	6152608	0	True				
ANR	6152659	Statement	(	283:10:5961:5961	6152608	1	True				
ANR	6152660	Statement	"""0x%"""	283:11:5962:5966	6152608	2	True				
ANR	6152661	Statement	PFMT64x	283:16:5967:5973	6152608	3	True				
ANR	6152662	Statement	""" Could not read the node!\\n"""	283:24:5975:6003	6152608	4	True				
ANR	6152663	Statement	","	283:53:6004:6004	6152608	5	True				
ANR	6152664	Statement	(	283:55:6006:6006	6152608	6	True				
ANR	6152665	Statement	ut64	283:56:6007:6010	6152608	7	True				
ANR	6152666	Statement	)	283:60:6011:6011	6152608	8	True				
ANR	6152667	Statement	address	283:62:6013:6019	6152608	9	True				
ANR	6152668	Statement	)	283:69:6020:6020	6152608	10	True				
ANR	6152669	ExpressionStatement		283:70:6021:6021	6152608	11	True				
ANR	6152670	ReturnStatement	return 0 ;	284:2:6025:6033	6152608	12	True				
ANR	6152671	PrimaryExpression	0		6152608	0					
ANR	6152672	IfStatement	if ( parent != UT64_MAX && entry . parent != parent )		6152608	4					
ANR	6152673	Condition	parent != UT64_MAX && entry . parent != parent	287:5:6044:6087	6152608	0	True				
ANR	6152674	AndExpression	parent != UT64_MAX && entry . parent != parent		6152608	0		&&			
ANR	6152675	EqualityExpression	parent != UT64_MAX		6152608	0		!=			
ANR	6152676	Identifier	parent		6152608	0					
ANR	6152677	Identifier	UT64_MAX		6152608	1					
ANR	6152678	EqualityExpression	entry . parent != parent		6152608	1		!=			
ANR	6152679	MemberAccess	entry . parent		6152608	0					
ANR	6152680	Identifier	entry		6152608	0					
ANR	6152681	Identifier	parent		6152608	1					
ANR	6152682	Identifier	parent		6152608	1					
ANR	6152683	CompoundStatement		11:51:311:311	6152608	1					
ANR	6152684	ExpressionStatement	"eprintf ( ""Wrong parent!\\n"" )"	288:2:6094:6121	6152608	0	True				
ANR	6152685	CallExpression	"eprintf ( ""Wrong parent!\\n"" )"		6152608	0					
ANR	6152686	Callee	eprintf		6152608	0					
ANR	6152687	Identifier	eprintf		6152608	0					
ANR	6152688	ArgumentList	"""Wrong parent!\\n"""		6152608	1					
ANR	6152689	Argument	"""Wrong parent!\\n"""		6152608	0					
ANR	6152690	PrimaryExpression	"""Wrong parent!\\n"""		6152608	0					
ANR	6152691	ReturnStatement	return 0 ;	289:2:6125:6133	6152608	1	True				
ANR	6152692	PrimaryExpression	0		6152608	0					
ANR	6152693	ExpressionStatement	start = entry . start_vpn << 12	292:1:6140:6169	6152608	5	True				
ANR	6152694	AssignmentExpression	start = entry . start_vpn << 12		6152608	0		=			
ANR	6152695	Identifier	start		6152608	0					
ANR	6152696	ShiftExpression	entry . start_vpn << 12		6152608	1		<<			
ANR	6152697	MemberAccess	entry . start_vpn		6152608	0					
ANR	6152698	Identifier	entry		6152608	0					
ANR	6152699	Identifier	start_vpn		6152608	1					
ANR	6152700	PrimaryExpression	12		6152608	1					
ANR	6152701	ExpressionStatement	end = ( ( entry . end_vpn + 1 ) << 12 ) - 1	293:1:6172:6209	6152608	6	True				
ANR	6152702	AssignmentExpression	end = ( ( entry . end_vpn + 1 ) << 12 ) - 1		6152608	0		=			
ANR	6152703	Identifier	end		6152608	0					
ANR	6152704	AdditiveExpression	( ( entry . end_vpn + 1 ) << 12 ) - 1		6152608	1		-			
ANR	6152705	ShiftExpression	( entry . end_vpn + 1 ) << 12		6152608	0		<<			
ANR	6152706	AdditiveExpression	entry . end_vpn + 1		6152608	0		+			
ANR	6152707	MemberAccess	entry . end_vpn		6152608	0					
ANR	6152708	Identifier	entry		6152608	0					
ANR	6152709	Identifier	end_vpn		6152608	1					
ANR	6152710	PrimaryExpression	1		6152608	1					
ANR	6152711	PrimaryExpression	12		6152608	1					
ANR	6152712	PrimaryExpression	1		6152608	1					
ANR	6152713	ExpressionStatement	prot = ( entry . flags >> 24 ) & 0x1F	294:1:6212:6245	6152608	7	True				
ANR	6152714	AssignmentExpression	prot = ( entry . flags >> 24 ) & 0x1F		6152608	0		=			
ANR	6152715	Identifier	prot		6152608	0					
ANR	6152716	BitAndExpression	( entry . flags >> 24 ) & 0x1F		6152608	1		&			
ANR	6152717	ShiftExpression	entry . flags >> 24		6152608	0		>>			
ANR	6152718	MemberAccess	entry . flags		6152608	0					
ANR	6152719	Identifier	entry		6152608	0					
ANR	6152720	Identifier	flags		6152608	1					
ANR	6152721	PrimaryExpression	24		6152608	1					
ANR	6152722	PrimaryExpression	0x1F		6152608	1					
ANR	6152723	Statement	eprintf	296:1:6249:6255	6152608	8	True				
ANR	6152724	Statement	(	296:9:6257:6257	6152608	9	True				
ANR	6152725	Statement	"""Start 0x%016"""	296:10:6258:6271	6152608	10	True				
ANR	6152726	Statement	PFMT64x	296:24:6272:6278	6152608	11	True				
ANR	6152727	Statement	""" End 0x%016"""	296:32:6280:6292	6152608	12	True				
ANR	6152728	Statement	PFMT64x	296:45:6293:6299	6152608	13	True				
ANR	6152729	Statement	""" Prot 0x%08"""	296:53:6301:6313	6152608	14	True				
ANR	6152730	Statement	PFMT64x	296:66:6314:6320	6152608	15	True				
ANR	6152731	Statement	"""\\n"""	296:74:6322:6325	6152608	16	True				
ANR	6152732	Statement	","	296:78:6326:6326	6152608	17	True				
ANR	6152733	Statement	(	297:2:6330:6330	6152608	18	True				
ANR	6152734	Statement	ut64	297:3:6331:6334	6152608	19	True				
ANR	6152735	Statement	)	297:7:6335:6335	6152608	20	True				
ANR	6152736	Statement	start	297:9:6337:6341	6152608	21	True				
ANR	6152737	Statement	","	297:14:6342:6342	6152608	22	True				
ANR	6152738	Statement	(	297:16:6344:6344	6152608	23	True				
ANR	6152739	Statement	ut64	297:17:6345:6348	6152608	24	True				
ANR	6152740	Statement	)	297:21:6349:6349	6152608	25	True				
ANR	6152741	Statement	end	297:23:6351:6353	6152608	26	True				
ANR	6152742	Statement	","	297:26:6354:6354	6152608	27	True				
ANR	6152743	Statement	(	297:28:6356:6356	6152608	28	True				
ANR	6152744	Statement	ut64	297:29:6357:6360	6152608	29	True				
ANR	6152745	Statement	)	297:33:6361:6361	6152608	30	True				
ANR	6152746	Statement	prot	297:35:6363:6366	6152608	31	True				
ANR	6152747	Statement	)	297:39:6367:6367	6152608	32	True				
ANR	6152748	ExpressionStatement		297:40:6368:6368	6152608	33	True				
ANR	6152749	IfStatement	if ( entry . left )		6152608	34					
ANR	6152750	Condition	entry . left	299:5:6376:6385	6152608	0	True				
ANR	6152751	MemberAccess	entry . left		6152608	0					
ANR	6152752	Identifier	entry		6152608	0					
ANR	6152753	Identifier	left		6152608	1					
ANR	6152754	CompoundStatement		23:17:609:609	6152608	1					
ANR	6152755	ExpressionStatement	"windbg_walk_vadtree ( ctx , entry . left , address )"	300:2:6392:6438	6152608	0	True				
ANR	6152756	CallExpression	"windbg_walk_vadtree ( ctx , entry . left , address )"		6152608	0					
ANR	6152757	Callee	windbg_walk_vadtree		6152608	0					
ANR	6152758	Identifier	windbg_walk_vadtree		6152608	0					
ANR	6152759	ArgumentList	ctx		6152608	1					
ANR	6152760	Argument	ctx		6152608	0					
ANR	6152761	Identifier	ctx		6152608	0					
ANR	6152762	Argument	entry . left		6152608	1					
ANR	6152763	MemberAccess	entry . left		6152608	0					
ANR	6152764	Identifier	entry		6152608	0					
ANR	6152765	Identifier	left		6152608	1					
ANR	6152766	Argument	address		6152608	2					
ANR	6152767	Identifier	address		6152608	0					
ANR	6152768	IfStatement	if ( entry . right )		6152608	35					
ANR	6152769	Condition	entry . right	302:5:6448:6458	6152608	0	True				
ANR	6152770	MemberAccess	entry . right		6152608	0					
ANR	6152771	Identifier	entry		6152608	0					
ANR	6152772	Identifier	right		6152608	1					
ANR	6152773	CompoundStatement		26:18:682:682	6152608	1					
ANR	6152774	ExpressionStatement	"windbg_walk_vadtree ( ctx , entry . right , address )"	303:2:6465:6512	6152608	0	True				
ANR	6152775	CallExpression	"windbg_walk_vadtree ( ctx , entry . right , address )"		6152608	0					
ANR	6152776	Callee	windbg_walk_vadtree		6152608	0					
ANR	6152777	Identifier	windbg_walk_vadtree		6152608	0					
ANR	6152778	ArgumentList	ctx		6152608	1					
ANR	6152779	Argument	ctx		6152608	0					
ANR	6152780	Identifier	ctx		6152608	0					
ANR	6152781	Argument	entry . right		6152608	1					
ANR	6152782	MemberAccess	entry . right		6152608	0					
ANR	6152783	Identifier	entry		6152608	0					
ANR	6152784	Identifier	right		6152608	1					
ANR	6152785	Argument	address		6152608	2					
ANR	6152786	Identifier	address		6152608	0					
ANR	6152787	ReturnStatement	return 1 ;	306:1:6519:6527	6152608	36	True				
ANR	6152788	PrimaryExpression	1		6152608	0					
ANR	6152789	ReturnType	int		6152608	1					
ANR	6152790	Identifier	windbg_walk_vadtree		6152608	2					
ANR	6152791	ParameterList	"WindCtx * ctx , ut64 address , ut64 parent"		6152608	3					
ANR	6152792	Parameter	WindCtx * ctx	277:24:5737:5748	6152608	0	True				
ANR	6152793	ParameterType	WindCtx *		6152608	0					
ANR	6152794	Identifier	ctx		6152608	1					
ANR	6152795	Parameter	ut64 address	277:38:5751:5762	6152608	1	True				
ANR	6152796	ParameterType	ut64		6152608	0					
ANR	6152797	Identifier	address		6152608	1					
ANR	6152798	Parameter	ut64 parent	277:52:5765:5775	6152608	2	True				
ANR	6152799	ParameterType	ut64		6152608	0					
ANR	6152800	Identifier	parent		6152608	1					
ANR	6152801	CFGEntryNode	ENTRY		6152608		True				
ANR	6152802	CFGExitNode	EXIT		6152608		True				
ANR	6152803	Symbol	parent		6152608						
ANR	6152804	Symbol	entry . left		6152608						
ANR	6152805	Symbol	address		6152608						
ANR	6152806	Symbol	entry . flags		6152608						
ANR	6152807	Symbol	ctx		6152608						
ANR	6152808	Symbol	start		6152608						
ANR	6152809	Symbol	entry		6152608						
ANR	6152810	Symbol	& entry		6152608						
ANR	6152811	Symbol	entry . start_vpn		6152608						
ANR	6152812	Symbol	prot		6152608						
ANR	6152813	Symbol	windbg_read_at		6152608						
ANR	6152814	Symbol	entry . right		6152608						
ANR	6152815	Symbol	entry . end_vpn		6152608						
ANR	6152816	Symbol	end		6152608						
ANR	6152817	Symbol	entry . parent		6152608						
ANR	6152818	Symbol	UT64_MAX		6152608						
ANR	6152819	Function	windbg_list_process	309:0:6532:8340							
ANR	6152820	FunctionDef	windbg_list_process (WindCtx * ctx)		6152819	0					
ANR	6152821	CompoundStatement		309:41:6573:8340	6152819	0					
ANR	6152822	IdentifierDeclStatement	RList * ret ;	310:1:6576:6586	6152819	0	True				
ANR	6152823	IdentifierDecl	* ret		6152819	0					
ANR	6152824	IdentifierDeclType	RList *		6152819	0					
ANR	6152825	Identifier	ret		6152819	1					
ANR	6152826	IdentifierDeclStatement	"ut64 ptr , base ;"	311:1:6589:6603	6152819	1	True				
ANR	6152827	IdentifierDecl	ptr		6152819	0					
ANR	6152828	IdentifierDeclType	ut64		6152819	0					
ANR	6152829	Identifier	ptr		6152819	1					
ANR	6152830	IdentifierDecl	base		6152819	1					
ANR	6152831	IdentifierDeclType	ut64		6152819	0					
ANR	6152832	Identifier	base		6152819	1					
ANR	6152833	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6152819	2					
ANR	6152834	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	313:5:6611:6645	6152819	0	True				
ANR	6152835	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6152819	0		||			
ANR	6152836	UnaryOperationExpression	! ctx		6152819	0					
ANR	6152837	UnaryOperator	!		6152819	0					
ANR	6152838	Identifier	ctx		6152819	1					
ANR	6152839	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6152819	1		||			
ANR	6152840	UnaryOperationExpression	! ctx -> io_ptr		6152819	0					
ANR	6152841	UnaryOperator	!		6152819	0					
ANR	6152842	PtrMemberAccess	ctx -> io_ptr		6152819	1					
ANR	6152843	Identifier	ctx		6152819	0					
ANR	6152844	Identifier	io_ptr		6152819	1					
ANR	6152845	UnaryOperationExpression	! ctx -> syncd		6152819	1					
ANR	6152846	UnaryOperator	!		6152819	0					
ANR	6152847	PtrMemberAccess	ctx -> syncd		6152819	1					
ANR	6152848	Identifier	ctx		6152819	0					
ANR	6152849	Identifier	syncd		6152819	1					
ANR	6152850	CompoundStatement		5:42:74:74	6152819	1					
ANR	6152851	ReturnStatement	return NULL ;	314:2:6652:6663	6152819	0	True				
ANR	6152852	Identifier	NULL		6152819	0					
ANR	6152853	IfStatement	if ( ctx -> plist_cache )		6152819	3					
ANR	6152854	Condition	ctx -> plist_cache	317:5:6674:6689	6152819	0	True				
ANR	6152855	PtrMemberAccess	ctx -> plist_cache		6152819	0					
ANR	6152856	Identifier	ctx		6152819	0					
ANR	6152857	Identifier	plist_cache		6152819	1					
ANR	6152858	CompoundStatement		9:23:118:118	6152819	1					
ANR	6152859	ReturnStatement	return ctx -> plist_cache ;	318:2:6696:6719	6152819	0	True				
ANR	6152860	PtrMemberAccess	ctx -> plist_cache		6152819	0					
ANR	6152861	Identifier	ctx		6152819	0					
ANR	6152862	Identifier	plist_cache		6152819	1					
ANR	6152863	ExpressionStatement	ptr = 0	321:1:6726:6733	6152819	4	True				
ANR	6152864	AssignmentExpression	ptr = 0		6152819	0		=			
ANR	6152865	Identifier	ptr		6152819	0					
ANR	6152866	PrimaryExpression	0		6152819	1					
ANR	6152867	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ctx -> dbg_addr + K_PsActiveProcessHead , 4 << ctx -> is_x64 )"	323:1:6793:6890	6152819	5	True				
ANR	6152868	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ctx -> dbg_addr + K_PsActiveProcessHead , 4 << ctx -> is_x64 )"		6152819	0					
ANR	6152869	Callee	windbg_read_at		6152819	0					
ANR	6152870	Identifier	windbg_read_at		6152819	0					
ANR	6152871	ArgumentList	ctx		6152819	1					
ANR	6152872	Argument	ctx		6152819	0					
ANR	6152873	Identifier	ctx		6152819	0					
ANR	6152874	Argument	( uint8_t * ) & ptr		6152819	1					
ANR	6152875	CastExpression	( uint8_t * ) & ptr		6152819	0					
ANR	6152876	CastTarget	uint8_t *		6152819	0					
ANR	6152877	UnaryOperationExpression	& ptr		6152819	1					
ANR	6152878	UnaryOperator	&		6152819	0					
ANR	6152879	Identifier	ptr		6152819	1					
ANR	6152880	Argument	ctx -> dbg_addr + K_PsActiveProcessHead		6152819	2					
ANR	6152881	AdditiveExpression	ctx -> dbg_addr + K_PsActiveProcessHead		6152819	0		+			
ANR	6152882	PtrMemberAccess	ctx -> dbg_addr		6152819	0					
ANR	6152883	Identifier	ctx		6152819	0					
ANR	6152884	Identifier	dbg_addr		6152819	1					
ANR	6152885	Identifier	K_PsActiveProcessHead		6152819	1					
ANR	6152886	Argument	4 << ctx -> is_x64		6152819	3					
ANR	6152887	ShiftExpression	4 << ctx -> is_x64		6152819	0		<<			
ANR	6152888	PrimaryExpression	4		6152819	0					
ANR	6152889	PtrMemberAccess	ctx -> is_x64		6152819	1					
ANR	6152890	Identifier	ctx		6152819	0					
ANR	6152891	Identifier	is_x64		6152819	1					
ANR	6152892	ExpressionStatement	base = ptr	326:1:6894:6904	6152819	6	True				
ANR	6152893	AssignmentExpression	base = ptr		6152819	0		=			
ANR	6152894	Identifier	base		6152819	0					
ANR	6152895	Identifier	ptr		6152819	1					
ANR	6152896	Statement	WIND_DBG	327:1:6907:6914	6152819	7	True				
ANR	6152897	Statement	eprintf	327:10:6916:6922	6152819	8	True				
ANR	6152898	Statement	(	327:17:6923:6923	6152819	9	True				
ANR	6152899	Statement	"""Process list head : 0x%016"""	327:18:6924:6951	6152819	10	True				
ANR	6152900	Statement	PFMT64x	327:46:6952:6958	6152819	11	True				
ANR	6152901	Statement	"""\\n"""	327:54:6960:6963	6152819	12	True				
ANR	6152902	Statement	","	327:58:6964:6964	6152819	13	True				
ANR	6152903	Statement	ptr	327:60:6966:6968	6152819	14	True				
ANR	6152904	Statement	)	327:63:6969:6969	6152819	15	True				
ANR	6152905	ExpressionStatement		327:64:6970:6970	6152819	16	True				
ANR	6152906	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr , 4 << ctx -> is_x64 )"	330:1:6998:7059	6152819	17	True				
ANR	6152907	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr , 4 << ctx -> is_x64 )"		6152819	0					
ANR	6152908	Callee	windbg_read_at		6152819	0					
ANR	6152909	Identifier	windbg_read_at		6152819	0					
ANR	6152910	ArgumentList	ctx		6152819	1					
ANR	6152911	Argument	ctx		6152819	0					
ANR	6152912	Identifier	ctx		6152819	0					
ANR	6152913	Argument	( uint8_t * ) & ptr		6152819	1					
ANR	6152914	CastExpression	( uint8_t * ) & ptr		6152819	0					
ANR	6152915	CastTarget	uint8_t *		6152819	0					
ANR	6152916	UnaryOperationExpression	& ptr		6152819	1					
ANR	6152917	UnaryOperator	&		6152819	0					
ANR	6152918	Identifier	ptr		6152819	1					
ANR	6152919	Argument	ptr		6152819	2					
ANR	6152920	Identifier	ptr		6152819	0					
ANR	6152921	Argument	4 << ctx -> is_x64		6152819	3					
ANR	6152922	ShiftExpression	4 << ctx -> is_x64		6152819	0		<<			
ANR	6152923	PrimaryExpression	4		6152819	0					
ANR	6152924	PtrMemberAccess	ctx -> is_x64		6152819	1					
ANR	6152925	Identifier	ctx		6152819	0					
ANR	6152926	Identifier	is_x64		6152819	1					
ANR	6152927	ExpressionStatement	ret = r_list_newf ( free )	332:1:7063:7087	6152819	18	True				
ANR	6152928	AssignmentExpression	ret = r_list_newf ( free )		6152819	0		=			
ANR	6152929	Identifier	ret		6152819	0					
ANR	6152930	CallExpression	r_list_newf ( free )		6152819	1					
ANR	6152931	Callee	r_list_newf		6152819	0					
ANR	6152932	Identifier	r_list_newf		6152819	0					
ANR	6152933	ArgumentList	free		6152819	1					
ANR	6152934	Argument	free		6152819	0					
ANR	6152935	Identifier	free		6152819	0					
ANR	6152936	DoStatement	do		6152819	19					
ANR	6152937	CompoundStatement		52:2:1382:1427	6152819	0					
ANR	6152938	IdentifierDeclStatement	uint8_t buf [ 17 ] ;	335:2:7098:7113	6152819	0	True				
ANR	6152939	IdentifierDecl	buf [ 17 ]		6152819	0					
ANR	6152940	IdentifierDeclType	uint8_t [ 17 ]		6152819	0					
ANR	6152941	Identifier	buf		6152819	1					
ANR	6152942	PrimaryExpression	17		6152819	2					
ANR	6152943	IdentifierDeclStatement	ut64 next ;	336:2:7117:7126	6152819	1	True				
ANR	6152944	IdentifierDecl	next		6152819	0					
ANR	6152945	IdentifierDeclType	ut64		6152819	0					
ANR	6152946	Identifier	next		6152819	1					
ANR	6152947	ExpressionStatement	next = 0	338:2:7131:7139	6152819	2	True				
ANR	6152948	AssignmentExpression	next = 0		6152819	0		=			
ANR	6152949	Identifier	next		6152819	0					
ANR	6152950	PrimaryExpression	0		6152819	1					
ANR	6152951	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & next , ptr , 4 << ctx -> is_x64 )"	340:2:7182:7244	6152819	3	True				
ANR	6152952	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & next , ptr , 4 << ctx -> is_x64 )"		6152819	0					
ANR	6152953	Callee	windbg_read_at		6152819	0					
ANR	6152954	Identifier	windbg_read_at		6152819	0					
ANR	6152955	ArgumentList	ctx		6152819	1					
ANR	6152956	Argument	ctx		6152819	0					
ANR	6152957	Identifier	ctx		6152819	0					
ANR	6152958	Argument	( uint8_t * ) & next		6152819	1					
ANR	6152959	CastExpression	( uint8_t * ) & next		6152819	0					
ANR	6152960	CastTarget	uint8_t *		6152819	0					
ANR	6152961	UnaryOperationExpression	& next		6152819	1					
ANR	6152962	UnaryOperator	&		6152819	0					
ANR	6152963	Identifier	next		6152819	1					
ANR	6152964	Argument	ptr		6152819	2					
ANR	6152965	Identifier	ptr		6152819	0					
ANR	6152966	Argument	4 << ctx -> is_x64		6152819	3					
ANR	6152967	ShiftExpression	4 << ctx -> is_x64		6152819	0		<<			
ANR	6152968	PrimaryExpression	4		6152819	0					
ANR	6152969	PtrMemberAccess	ctx -> is_x64		6152819	1					
ANR	6152970	Identifier	ctx		6152819	0					
ANR	6152971	Identifier	is_x64		6152819	1					
ANR	6152972	ExpressionStatement	ptr -= O_ ( E_ActiveProcessLinks )	344:2:7358:7389	6152819	4	True				
ANR	6152973	AssignmentExpression	ptr -= O_ ( E_ActiveProcessLinks )		6152819	0		-=			
ANR	6152974	Identifier	ptr		6152819	0					
ANR	6152975	CallExpression	O_ ( E_ActiveProcessLinks )		6152819	1					
ANR	6152976	Callee	O_		6152819	0					
ANR	6152977	Identifier	O_		6152819	0					
ANR	6152978	ArgumentList	E_ActiveProcessLinks		6152819	1					
ANR	6152979	Argument	E_ActiveProcessLinks		6152819	0					
ANR	6152980	Identifier	E_ActiveProcessLinks		6152819	0					
ANR	6152981	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & buf , ptr + O_ ( E_ImageFileName ) , 16 )"	347:2:7419:7488	6152819	5	True				
ANR	6152982	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & buf , ptr + O_ ( E_ImageFileName ) , 16 )"		6152819	0					
ANR	6152983	Callee	windbg_read_at		6152819	0					
ANR	6152984	Identifier	windbg_read_at		6152819	0					
ANR	6152985	ArgumentList	ctx		6152819	1					
ANR	6152986	Argument	ctx		6152819	0					
ANR	6152987	Identifier	ctx		6152819	0					
ANR	6152988	Argument	( uint8_t * ) & buf		6152819	1					
ANR	6152989	CastExpression	( uint8_t * ) & buf		6152819	0					
ANR	6152990	CastTarget	uint8_t *		6152819	0					
ANR	6152991	UnaryOperationExpression	& buf		6152819	1					
ANR	6152992	UnaryOperator	&		6152819	0					
ANR	6152993	Identifier	buf		6152819	1					
ANR	6152994	Argument	ptr + O_ ( E_ImageFileName )		6152819	2					
ANR	6152995	AdditiveExpression	ptr + O_ ( E_ImageFileName )		6152819	0		+			
ANR	6152996	Identifier	ptr		6152819	0					
ANR	6152997	CallExpression	O_ ( E_ImageFileName )		6152819	1					
ANR	6152998	Callee	O_		6152819	0					
ANR	6152999	Identifier	O_		6152819	0					
ANR	6153000	ArgumentList	E_ImageFileName		6152819	1					
ANR	6153001	Argument	E_ImageFileName		6152819	0					
ANR	6153002	Identifier	E_ImageFileName		6152819	0					
ANR	6153003	Argument	16		6152819	3					
ANR	6153004	PrimaryExpression	16		6152819	0					
ANR	6153005	ExpressionStatement	buf [ 16 ] = '\\0'	348:2:7492:7506	6152819	6	True				
ANR	6153006	AssignmentExpression	buf [ 16 ] = '\\0'		6152819	0		=			
ANR	6153007	ArrayIndexing	buf [ 16 ]		6152819	0					
ANR	6153008	Identifier	buf		6152819	0					
ANR	6153009	PrimaryExpression	16		6152819	1					
ANR	6153010	PrimaryExpression	'\\0'		6152819	1					
ANR	6153011	IdentifierDeclStatement	ut64 vadroot = 0 ;	350:2:7511:7527	6152819	7	True				
ANR	6153012	IdentifierDecl	vadroot = 0		6152819	0					
ANR	6153013	IdentifierDeclType	ut64		6152819	0					
ANR	6153014	Identifier	vadroot		6152819	1					
ANR	6153015	AssignmentExpression	vadroot = 0		6152819	2		=			
ANR	6153016	Identifier	vadroot		6152819	0					
ANR	6153017	PrimaryExpression	0		6152819	1					
ANR	6153018	IdentifierDeclStatement	ut64 uniqueid = 0 ;	351:2:7531:7548	6152819	8	True				
ANR	6153019	IdentifierDecl	uniqueid = 0		6152819	0					
ANR	6153020	IdentifierDeclType	ut64		6152819	0					
ANR	6153021	Identifier	uniqueid		6152819	1					
ANR	6153022	AssignmentExpression	uniqueid = 0		6152819	2		=			
ANR	6153023	Identifier	uniqueid		6152819	0					
ANR	6153024	PrimaryExpression	0		6152819	1					
ANR	6153025	IdentifierDeclStatement	ut64 peb = 0 ;	352:2:7552:7564	6152819	9	True				
ANR	6153026	IdentifierDecl	peb = 0		6152819	0					
ANR	6153027	IdentifierDeclType	ut64		6152819	0					
ANR	6153028	Identifier	peb		6152819	1					
ANR	6153029	AssignmentExpression	peb = 0		6152819	2		=			
ANR	6153030	Identifier	peb		6152819	0					
ANR	6153031	PrimaryExpression	0		6152819	1					
ANR	6153032	IdentifierDeclStatement	ut64 dir_base_table = 0 ;	353:2:7568:7591	6152819	10	True				
ANR	6153033	IdentifierDecl	dir_base_table = 0		6152819	0					
ANR	6153034	IdentifierDeclType	ut64		6152819	0					
ANR	6153035	Identifier	dir_base_table		6152819	1					
ANR	6153036	AssignmentExpression	dir_base_table = 0		6152819	2		=			
ANR	6153037	Identifier	dir_base_table		6152819	0					
ANR	6153038	PrimaryExpression	0		6152819	1					
ANR	6153039	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & vadroot , ptr + O_ ( E_VadRoot ) , 4 << ctx -> is_x64 )"	355:2:7596:7677	6152819	11	True				
ANR	6153040	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & vadroot , ptr + O_ ( E_VadRoot ) , 4 << ctx -> is_x64 )"		6152819	0					
ANR	6153041	Callee	windbg_read_at		6152819	0					
ANR	6153042	Identifier	windbg_read_at		6152819	0					
ANR	6153043	ArgumentList	ctx		6152819	1					
ANR	6153044	Argument	ctx		6152819	0					
ANR	6153045	Identifier	ctx		6152819	0					
ANR	6153046	Argument	( uint8_t * ) & vadroot		6152819	1					
ANR	6153047	CastExpression	( uint8_t * ) & vadroot		6152819	0					
ANR	6153048	CastTarget	uint8_t *		6152819	0					
ANR	6153049	UnaryOperationExpression	& vadroot		6152819	1					
ANR	6153050	UnaryOperator	&		6152819	0					
ANR	6153051	Identifier	vadroot		6152819	1					
ANR	6153052	Argument	ptr + O_ ( E_VadRoot )		6152819	2					
ANR	6153053	AdditiveExpression	ptr + O_ ( E_VadRoot )		6152819	0		+			
ANR	6153054	Identifier	ptr		6152819	0					
ANR	6153055	CallExpression	O_ ( E_VadRoot )		6152819	1					
ANR	6153056	Callee	O_		6152819	0					
ANR	6153057	Identifier	O_		6152819	0					
ANR	6153058	ArgumentList	E_VadRoot		6152819	1					
ANR	6153059	Argument	E_VadRoot		6152819	0					
ANR	6153060	Identifier	E_VadRoot		6152819	0					
ANR	6153061	Argument	4 << ctx -> is_x64		6152819	3					
ANR	6153062	ShiftExpression	4 << ctx -> is_x64		6152819	0		<<			
ANR	6153063	PrimaryExpression	4		6152819	0					
ANR	6153064	PtrMemberAccess	ctx -> is_x64		6152819	1					
ANR	6153065	Identifier	ctx		6152819	0					
ANR	6153066	Identifier	is_x64		6152819	1					
ANR	6153067	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & uniqueid , ptr + O_ ( E_UniqueProcessId ) , 4 << ctx -> is_x64 )"	356:2:7681:7771	6152819	12	True				
ANR	6153068	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & uniqueid , ptr + O_ ( E_UniqueProcessId ) , 4 << ctx -> is_x64 )"		6152819	0					
ANR	6153069	Callee	windbg_read_at		6152819	0					
ANR	6153070	Identifier	windbg_read_at		6152819	0					
ANR	6153071	ArgumentList	ctx		6152819	1					
ANR	6153072	Argument	ctx		6152819	0					
ANR	6153073	Identifier	ctx		6152819	0					
ANR	6153074	Argument	( uint8_t * ) & uniqueid		6152819	1					
ANR	6153075	CastExpression	( uint8_t * ) & uniqueid		6152819	0					
ANR	6153076	CastTarget	uint8_t *		6152819	0					
ANR	6153077	UnaryOperationExpression	& uniqueid		6152819	1					
ANR	6153078	UnaryOperator	&		6152819	0					
ANR	6153079	Identifier	uniqueid		6152819	1					
ANR	6153080	Argument	ptr + O_ ( E_UniqueProcessId )		6152819	2					
ANR	6153081	AdditiveExpression	ptr + O_ ( E_UniqueProcessId )		6152819	0		+			
ANR	6153082	Identifier	ptr		6152819	0					
ANR	6153083	CallExpression	O_ ( E_UniqueProcessId )		6152819	1					
ANR	6153084	Callee	O_		6152819	0					
ANR	6153085	Identifier	O_		6152819	0					
ANR	6153086	ArgumentList	E_UniqueProcessId		6152819	1					
ANR	6153087	Argument	E_UniqueProcessId		6152819	0					
ANR	6153088	Identifier	E_UniqueProcessId		6152819	0					
ANR	6153089	Argument	4 << ctx -> is_x64		6152819	3					
ANR	6153090	ShiftExpression	4 << ctx -> is_x64		6152819	0		<<			
ANR	6153091	PrimaryExpression	4		6152819	0					
ANR	6153092	PtrMemberAccess	ctx -> is_x64		6152819	1					
ANR	6153093	Identifier	ctx		6152819	0					
ANR	6153094	Identifier	is_x64		6152819	1					
ANR	6153095	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & peb , ptr + O_ ( E_Peb ) , 4 << ctx -> is_x64 )"	357:2:7775:7848	6152819	13	True				
ANR	6153096	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & peb , ptr + O_ ( E_Peb ) , 4 << ctx -> is_x64 )"		6152819	0					
ANR	6153097	Callee	windbg_read_at		6152819	0					
ANR	6153098	Identifier	windbg_read_at		6152819	0					
ANR	6153099	ArgumentList	ctx		6152819	1					
ANR	6153100	Argument	ctx		6152819	0					
ANR	6153101	Identifier	ctx		6152819	0					
ANR	6153102	Argument	( uint8_t * ) & peb		6152819	1					
ANR	6153103	CastExpression	( uint8_t * ) & peb		6152819	0					
ANR	6153104	CastTarget	uint8_t *		6152819	0					
ANR	6153105	UnaryOperationExpression	& peb		6152819	1					
ANR	6153106	UnaryOperator	&		6152819	0					
ANR	6153107	Identifier	peb		6152819	1					
ANR	6153108	Argument	ptr + O_ ( E_Peb )		6152819	2					
ANR	6153109	AdditiveExpression	ptr + O_ ( E_Peb )		6152819	0		+			
ANR	6153110	Identifier	ptr		6152819	0					
ANR	6153111	CallExpression	O_ ( E_Peb )		6152819	1					
ANR	6153112	Callee	O_		6152819	0					
ANR	6153113	Identifier	O_		6152819	0					
ANR	6153114	ArgumentList	E_Peb		6152819	1					
ANR	6153115	Argument	E_Peb		6152819	0					
ANR	6153116	Identifier	E_Peb		6152819	0					
ANR	6153117	Argument	4 << ctx -> is_x64		6152819	3					
ANR	6153118	ShiftExpression	4 << ctx -> is_x64		6152819	0		<<			
ANR	6153119	PrimaryExpression	4		6152819	0					
ANR	6153120	PtrMemberAccess	ctx -> is_x64		6152819	1					
ANR	6153121	Identifier	ctx		6152819	0					
ANR	6153122	Identifier	is_x64		6152819	1					
ANR	6153123	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & dir_base_table , ptr + O_ ( P_DirectoryTableBase ) , 4 << ctx -> is_x64 )"	358:2:7852:7951	6152819	14	True				
ANR	6153124	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & dir_base_table , ptr + O_ ( P_DirectoryTableBase ) , 4 << ctx -> is_x64 )"		6152819	0					
ANR	6153125	Callee	windbg_read_at		6152819	0					
ANR	6153126	Identifier	windbg_read_at		6152819	0					
ANR	6153127	ArgumentList	ctx		6152819	1					
ANR	6153128	Argument	ctx		6152819	0					
ANR	6153129	Identifier	ctx		6152819	0					
ANR	6153130	Argument	( uint8_t * ) & dir_base_table		6152819	1					
ANR	6153131	CastExpression	( uint8_t * ) & dir_base_table		6152819	0					
ANR	6153132	CastTarget	uint8_t *		6152819	0					
ANR	6153133	UnaryOperationExpression	& dir_base_table		6152819	1					
ANR	6153134	UnaryOperator	&		6152819	0					
ANR	6153135	Identifier	dir_base_table		6152819	1					
ANR	6153136	Argument	ptr + O_ ( P_DirectoryTableBase )		6152819	2					
ANR	6153137	AdditiveExpression	ptr + O_ ( P_DirectoryTableBase )		6152819	0		+			
ANR	6153138	Identifier	ptr		6152819	0					
ANR	6153139	CallExpression	O_ ( P_DirectoryTableBase )		6152819	1					
ANR	6153140	Callee	O_		6152819	0					
ANR	6153141	Identifier	O_		6152819	0					
ANR	6153142	ArgumentList	P_DirectoryTableBase		6152819	1					
ANR	6153143	Argument	P_DirectoryTableBase		6152819	0					
ANR	6153144	Identifier	P_DirectoryTableBase		6152819	0					
ANR	6153145	Argument	4 << ctx -> is_x64		6152819	3					
ANR	6153146	ShiftExpression	4 << ctx -> is_x64		6152819	0		<<			
ANR	6153147	PrimaryExpression	4		6152819	0					
ANR	6153148	PtrMemberAccess	ctx -> is_x64		6152819	1					
ANR	6153149	Identifier	ctx		6152819	0					
ANR	6153150	Identifier	is_x64		6152819	1					
ANR	6153151	IdentifierDeclStatement	"WindProc * proc = calloc ( 1 , sizeof ( WindProc ) ) ;"	360:2:7956:8001	6152819	15	True				
ANR	6153152	IdentifierDecl	"* proc = calloc ( 1 , sizeof ( WindProc ) )"		6152819	0					
ANR	6153153	IdentifierDeclType	WindProc *		6152819	0					
ANR	6153154	Identifier	proc		6152819	1					
ANR	6153155	AssignmentExpression	"* proc = calloc ( 1 , sizeof ( WindProc ) )"		6152819	2		=			
ANR	6153156	Identifier	proc		6152819	0					
ANR	6153157	CallExpression	"calloc ( 1 , sizeof ( WindProc ) )"		6152819	1					
ANR	6153158	Callee	calloc		6152819	0					
ANR	6153159	Identifier	calloc		6152819	0					
ANR	6153160	ArgumentList	1		6152819	1					
ANR	6153161	Argument	1		6152819	0					
ANR	6153162	PrimaryExpression	1		6152819	0					
ANR	6153163	Argument	sizeof ( WindProc )		6152819	1					
ANR	6153164	SizeofExpression	sizeof ( WindProc )		6152819	0					
ANR	6153165	Sizeof	sizeof		6152819	0					
ANR	6153166	SizeofOperand	WindProc		6152819	1					
ANR	6153167	ExpressionStatement	"strcpy ( proc -> name , ( const char * ) buf )"	362:2:8006:8045	6152819	16	True				
ANR	6153168	CallExpression	"strcpy ( proc -> name , ( const char * ) buf )"		6152819	0					
ANR	6153169	Callee	strcpy		6152819	0					
ANR	6153170	Identifier	strcpy		6152819	0					
ANR	6153171	ArgumentList	proc -> name		6152819	1					
ANR	6153172	Argument	proc -> name		6152819	0					
ANR	6153173	PtrMemberAccess	proc -> name		6152819	0					
ANR	6153174	Identifier	proc		6152819	0					
ANR	6153175	Identifier	name		6152819	1					
ANR	6153176	Argument	( const char * ) buf		6152819	1					
ANR	6153177	CastExpression	( const char * ) buf		6152819	0					
ANR	6153178	CastTarget	const char *		6152819	0					
ANR	6153179	Identifier	buf		6152819	1					
ANR	6153180	ExpressionStatement	proc -> eprocess = ptr	363:2:8049:8069	6152819	17	True				
ANR	6153181	AssignmentExpression	proc -> eprocess = ptr		6152819	0		=			
ANR	6153182	PtrMemberAccess	proc -> eprocess		6152819	0					
ANR	6153183	Identifier	proc		6152819	0					
ANR	6153184	Identifier	eprocess		6152819	1					
ANR	6153185	Identifier	ptr		6152819	1					
ANR	6153186	ExpressionStatement	proc -> vadroot = vadroot	364:2:8073:8096	6152819	18	True				
ANR	6153187	AssignmentExpression	proc -> vadroot = vadroot		6152819	0		=			
ANR	6153188	PtrMemberAccess	proc -> vadroot		6152819	0					
ANR	6153189	Identifier	proc		6152819	0					
ANR	6153190	Identifier	vadroot		6152819	1					
ANR	6153191	Identifier	vadroot		6152819	1					
ANR	6153192	ExpressionStatement	proc -> uniqueid = uniqueid	365:2:8100:8125	6152819	19	True				
ANR	6153193	AssignmentExpression	proc -> uniqueid = uniqueid		6152819	0		=			
ANR	6153194	PtrMemberAccess	proc -> uniqueid		6152819	0					
ANR	6153195	Identifier	proc		6152819	0					
ANR	6153196	Identifier	uniqueid		6152819	1					
ANR	6153197	Identifier	uniqueid		6152819	1					
ANR	6153198	ExpressionStatement	proc -> dir_base_table = dir_base_table	366:2:8129:8166	6152819	20	True				
ANR	6153199	AssignmentExpression	proc -> dir_base_table = dir_base_table		6152819	0		=			
ANR	6153200	PtrMemberAccess	proc -> dir_base_table		6152819	0					
ANR	6153201	Identifier	proc		6152819	0					
ANR	6153202	Identifier	dir_base_table		6152819	1					
ANR	6153203	Identifier	dir_base_table		6152819	1					
ANR	6153204	ExpressionStatement	proc -> peb = peb	367:2:8170:8185	6152819	21	True				
ANR	6153205	AssignmentExpression	proc -> peb = peb		6152819	0		=			
ANR	6153206	PtrMemberAccess	proc -> peb		6152819	0					
ANR	6153207	Identifier	proc		6152819	0					
ANR	6153208	Identifier	peb		6152819	1					
ANR	6153209	Identifier	peb		6152819	1					
ANR	6153210	ExpressionStatement	"r_list_append ( ret , proc )"	369:2:8190:8215	6152819	22	True				
ANR	6153211	CallExpression	"r_list_append ( ret , proc )"		6152819	0					
ANR	6153212	Callee	r_list_append		6152819	0					
ANR	6153213	Identifier	r_list_append		6152819	0					
ANR	6153214	ArgumentList	ret		6152819	1					
ANR	6153215	Argument	ret		6152819	0					
ANR	6153216	Identifier	ret		6152819	0					
ANR	6153217	Argument	proc		6152819	1					
ANR	6153218	Identifier	proc		6152819	0					
ANR	6153219	ExpressionStatement	ptr = next	372:2:8264:8274	6152819	23	True				
ANR	6153220	AssignmentExpression	ptr = next		6152819	0		=			
ANR	6153221	Identifier	ptr		6152819	0					
ANR	6153222	Identifier	next		6152819	1					
ANR	6153223	Condition	ptr != base	373:10:8286:8296	6152819	1	True				
ANR	6153224	EqualityExpression	ptr != base		6152819	0		!=			
ANR	6153225	Identifier	ptr		6152819	0					
ANR	6153226	Identifier	base		6152819	1					
ANR	6153227	ExpressionStatement	ctx -> plist_cache = ret	375:1:8302:8324	6152819	20	True				
ANR	6153228	AssignmentExpression	ctx -> plist_cache = ret		6152819	0		=			
ANR	6153229	PtrMemberAccess	ctx -> plist_cache		6152819	0					
ANR	6153230	Identifier	ctx		6152819	0					
ANR	6153231	Identifier	plist_cache		6152819	1					
ANR	6153232	Identifier	ret		6152819	1					
ANR	6153233	ReturnStatement	return ret ;	377:1:8328:8338	6152819	21	True				
ANR	6153234	Identifier	ret		6152819	0					
ANR	6153235	ReturnType	RList *		6152819	1					
ANR	6153236	Identifier	windbg_list_process		6152819	2					
ANR	6153237	ParameterList	WindCtx * ctx		6152819	3					
ANR	6153238	Parameter	WindCtx * ctx	309:27:6559:6570	6152819	0	True				
ANR	6153239	ParameterType	WindCtx *		6152819	0					
ANR	6153240	Identifier	ctx		6152819	1					
ANR	6153241	CFGEntryNode	ENTRY		6152819		True				
ANR	6153242	CFGExitNode	EXIT		6152819		True				
ANR	6153243	Symbol	next		6152819						
ANR	6153244	Symbol	& uniqueid		6152819						
ANR	6153245	Symbol	proc -> dir_base_table		6152819						
ANR	6153246	Symbol	E_VadRoot		6152819						
ANR	6153247	Symbol	E_Peb		6152819						
ANR	6153248	Symbol	calloc		6152819						
ANR	6153249	Symbol	peb		6152819						
ANR	6153250	Symbol	proc -> vadroot		6152819						
ANR	6153251	Symbol	proc -> eprocess		6152819						
ANR	6153252	Symbol	& ptr		6152819						
ANR	6153253	Symbol	ctx -> plist_cache		6152819						
ANR	6153254	Symbol	E_UniqueProcessId		6152819						
ANR	6153255	Symbol	ctx -> dbg_addr		6152819						
ANR	6153256	Symbol	P_DirectoryTableBase		6152819						
ANR	6153257	Symbol	free		6152819						
ANR	6153258	Symbol	dir_base_table		6152819						
ANR	6153259	Symbol	ctx -> syncd		6152819						
ANR	6153260	Symbol	& buf		6152819						
ANR	6153261	Symbol	uniqueid		6152819						
ANR	6153262	Symbol	ret		6152819						
ANR	6153263	Symbol	* buf		6152819						
ANR	6153264	Symbol	proc		6152819						
ANR	6153265	Symbol	NULL		6152819						
ANR	6153266	Symbol	& next		6152819						
ANR	6153267	Symbol	ctx -> is_x64		6152819						
ANR	6153268	Symbol	r_list_newf		6152819						
ANR	6153269	Symbol	ctx		6152819						
ANR	6153270	Symbol	proc -> peb		6152819						
ANR	6153271	Symbol	vadroot		6152819						
ANR	6153272	Symbol	E_ActiveProcessLinks		6152819						
ANR	6153273	Symbol	& vadroot		6152819						
ANR	6153274	Symbol	E_ImageFileName		6152819						
ANR	6153275	Symbol	* ctx		6152819						
ANR	6153276	Symbol	ptr		6152819						
ANR	6153277	Symbol	& dir_base_table		6152819						
ANR	6153278	Symbol	* proc		6152819						
ANR	6153279	Symbol	proc -> name		6152819						
ANR	6153280	Symbol	O_		6152819						
ANR	6153281	Symbol	ctx -> io_ptr		6152819						
ANR	6153282	Symbol	buf		6152819						
ANR	6153283	Symbol	& peb		6152819						
ANR	6153284	Symbol	K_PsActiveProcessHead		6152819						
ANR	6153285	Symbol	base		6152819						
ANR	6153286	Symbol	proc -> uniqueid		6152819						
ANR	6153287	Function	windbg_list_threads	380:0:8343:9803							
ANR	6153288	FunctionDef	windbg_list_threads (WindCtx * ctx)		6153287	0					
ANR	6153289	CompoundStatement		380:41:8384:9803	6153287	0					
ANR	6153290	IdentifierDeclStatement	RList * ret ;	381:1:8387:8397	6153287	0	True				
ANR	6153291	IdentifierDecl	* ret		6153287	0					
ANR	6153292	IdentifierDeclType	RList *		6153287	0					
ANR	6153293	Identifier	ret		6153287	1					
ANR	6153294	IdentifierDeclStatement	"ut64 ptr , base ;"	382:1:8400:8414	6153287	1	True				
ANR	6153295	IdentifierDecl	ptr		6153287	0					
ANR	6153296	IdentifierDeclType	ut64		6153287	0					
ANR	6153297	Identifier	ptr		6153287	1					
ANR	6153298	IdentifierDecl	base		6153287	1					
ANR	6153299	IdentifierDeclType	ut64		6153287	0					
ANR	6153300	Identifier	base		6153287	1					
ANR	6153301	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6153287	2					
ANR	6153302	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	384:5:8422:8456	6153287	0	True				
ANR	6153303	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6153287	0		||			
ANR	6153304	UnaryOperationExpression	! ctx		6153287	0					
ANR	6153305	UnaryOperator	!		6153287	0					
ANR	6153306	Identifier	ctx		6153287	1					
ANR	6153307	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6153287	1		||			
ANR	6153308	UnaryOperationExpression	! ctx -> io_ptr		6153287	0					
ANR	6153309	UnaryOperator	!		6153287	0					
ANR	6153310	PtrMemberAccess	ctx -> io_ptr		6153287	1					
ANR	6153311	Identifier	ctx		6153287	0					
ANR	6153312	Identifier	io_ptr		6153287	1					
ANR	6153313	UnaryOperationExpression	! ctx -> syncd		6153287	1					
ANR	6153314	UnaryOperator	!		6153287	0					
ANR	6153315	PtrMemberAccess	ctx -> syncd		6153287	1					
ANR	6153316	Identifier	ctx		6153287	0					
ANR	6153317	Identifier	syncd		6153287	1					
ANR	6153318	CompoundStatement		5:42:74:74	6153287	1					
ANR	6153319	ReturnStatement	return NULL ;	385:2:8463:8474	6153287	0	True				
ANR	6153320	Identifier	NULL		6153287	0					
ANR	6153321	IfStatement	if ( ctx -> tlist_cache )		6153287	3					
ANR	6153322	Condition	ctx -> tlist_cache	388:5:8485:8500	6153287	0	True				
ANR	6153323	PtrMemberAccess	ctx -> tlist_cache		6153287	0					
ANR	6153324	Identifier	ctx		6153287	0					
ANR	6153325	Identifier	tlist_cache		6153287	1					
ANR	6153326	CompoundStatement		9:23:118:118	6153287	1					
ANR	6153327	ReturnStatement	return ctx -> tlist_cache ;	389:2:8507:8530	6153287	0	True				
ANR	6153328	PtrMemberAccess	ctx -> tlist_cache		6153287	0					
ANR	6153329	Identifier	ctx		6153287	0					
ANR	6153330	Identifier	tlist_cache		6153287	1					
ANR	6153331	IfStatement	if ( ! ctx -> target )		6153287	4					
ANR	6153332	Condition	! ctx -> target	392:5:8541:8552	6153287	0	True				
ANR	6153333	UnaryOperationExpression	! ctx -> target		6153287	0					
ANR	6153334	UnaryOperator	!		6153287	0					
ANR	6153335	PtrMemberAccess	ctx -> target		6153287	1					
ANR	6153336	Identifier	ctx		6153287	0					
ANR	6153337	Identifier	target		6153287	1					
ANR	6153338	CompoundStatement		14:2:174:214	6153287	1					
ANR	6153339	IdentifierDeclStatement	"WIND_DBG eprintf ( ""No target process\\n"" ) ;"	393:2:8559:8599	6153287	0	True				
ANR	6153340	IdentifierDecl	"eprintf ( ""No target process\\n"" )"		6153287	0					
ANR	6153341	IdentifierDeclType	WIND_DBG		6153287	0					
ANR	6153342	Identifier	eprintf		6153287	1					
ANR	6153343	PrimaryExpression	"""No target process\\n"""		6153287	2					
ANR	6153344	ReturnStatement	return NULL ;	394:2:8603:8614	6153287	1	True				
ANR	6153345	Identifier	NULL		6153287	0					
ANR	6153346	ExpressionStatement	ptr = ctx -> target -> eprocess	397:1:8621:8648	6153287	5	True				
ANR	6153347	AssignmentExpression	ptr = ctx -> target -> eprocess		6153287	0		=			
ANR	6153348	Identifier	ptr		6153287	0					
ANR	6153349	PtrMemberAccess	ctx -> target -> eprocess		6153287	1					
ANR	6153350	PtrMemberAccess	ctx -> target		6153287	0					
ANR	6153351	Identifier	ctx		6153287	0					
ANR	6153352	Identifier	target		6153287	1					
ANR	6153353	Identifier	eprocess		6153287	1					
ANR	6153354	IfStatement	if ( ! ptr )		6153287	6					
ANR	6153355	Condition	! ptr	398:5:8655:8658	6153287	0	True				
ANR	6153356	UnaryOperationExpression	! ptr		6153287	0					
ANR	6153357	UnaryOperator	!		6153287	0					
ANR	6153358	Identifier	ptr		6153287	1					
ANR	6153359	CompoundStatement		20:2:280:315	6153287	1					
ANR	6153360	IdentifierDeclStatement	"WIND_DBG eprintf ( ""No _EPROCESS\\n"" ) ;"	399:2:8665:8700	6153287	0	True				
ANR	6153361	IdentifierDecl	"eprintf ( ""No _EPROCESS\\n"" )"		6153287	0					
ANR	6153362	IdentifierDeclType	WIND_DBG		6153287	0					
ANR	6153363	Identifier	eprintf		6153287	1					
ANR	6153364	PrimaryExpression	"""No _EPROCESS\\n"""		6153287	2					
ANR	6153365	ReturnStatement	return NULL ;	400:2:8704:8715	6153287	1	True				
ANR	6153366	Identifier	NULL		6153287	0					
ANR	6153367	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr + O_ ( E_ThreadListHead ) , 4 << ctx -> is_x64 )"	404:1:8765:8849	6153287	7	True				
ANR	6153368	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr + O_ ( E_ThreadListHead ) , 4 << ctx -> is_x64 )"		6153287	0					
ANR	6153369	Callee	windbg_read_at		6153287	0					
ANR	6153370	Identifier	windbg_read_at		6153287	0					
ANR	6153371	ArgumentList	ctx		6153287	1					
ANR	6153372	Argument	ctx		6153287	0					
ANR	6153373	Identifier	ctx		6153287	0					
ANR	6153374	Argument	( uint8_t * ) & ptr		6153287	1					
ANR	6153375	CastExpression	( uint8_t * ) & ptr		6153287	0					
ANR	6153376	CastTarget	uint8_t *		6153287	0					
ANR	6153377	UnaryOperationExpression	& ptr		6153287	1					
ANR	6153378	UnaryOperator	&		6153287	0					
ANR	6153379	Identifier	ptr		6153287	1					
ANR	6153380	Argument	ptr + O_ ( E_ThreadListHead )		6153287	2					
ANR	6153381	AdditiveExpression	ptr + O_ ( E_ThreadListHead )		6153287	0		+			
ANR	6153382	Identifier	ptr		6153287	0					
ANR	6153383	CallExpression	O_ ( E_ThreadListHead )		6153287	1					
ANR	6153384	Callee	O_		6153287	0					
ANR	6153385	Identifier	O_		6153287	0					
ANR	6153386	ArgumentList	E_ThreadListHead		6153287	1					
ANR	6153387	Argument	E_ThreadListHead		6153287	0					
ANR	6153388	Identifier	E_ThreadListHead		6153287	0					
ANR	6153389	Argument	4 << ctx -> is_x64		6153287	3					
ANR	6153390	ShiftExpression	4 << ctx -> is_x64		6153287	0		<<			
ANR	6153391	PrimaryExpression	4		6153287	0					
ANR	6153392	PtrMemberAccess	ctx -> is_x64		6153287	1					
ANR	6153393	Identifier	ctx		6153287	0					
ANR	6153394	Identifier	is_x64		6153287	1					
ANR	6153395	IfStatement	if ( ! ptr )		6153287	8					
ANR	6153396	Condition	! ptr	405:5:8856:8859	6153287	0	True				
ANR	6153397	UnaryOperationExpression	! ptr		6153287	0					
ANR	6153398	UnaryOperator	!		6153287	0					
ANR	6153399	Identifier	ptr		6153287	1					
ANR	6153400	CompoundStatement		26:11:477:477	6153287	1					
ANR	6153401	ReturnStatement	return NULL ;	406:2:8866:8877	6153287	0	True				
ANR	6153402	Identifier	NULL		6153287	0					
ANR	6153403	ExpressionStatement	base = ptr	409:1:8884:8894	6153287	9	True				
ANR	6153404	AssignmentExpression	base = ptr		6153287	0		=			
ANR	6153405	Identifier	base		6153287	0					
ANR	6153406	Identifier	ptr		6153287	1					
ANR	6153407	ExpressionStatement	ret = r_list_newf ( free )	411:1:8898:8922	6153287	10	True				
ANR	6153408	AssignmentExpression	ret = r_list_newf ( free )		6153287	0		=			
ANR	6153409	Identifier	ret		6153287	0					
ANR	6153410	CallExpression	r_list_newf ( free )		6153287	1					
ANR	6153411	Callee	r_list_newf		6153287	0					
ANR	6153412	Identifier	r_list_newf		6153287	0					
ANR	6153413	ArgumentList	free		6153287	1					
ANR	6153414	Argument	free		6153287	0					
ANR	6153415	Identifier	free		6153287	0					
ANR	6153416	DoStatement	do		6153287	11					
ANR	6153417	CompoundStatement		49:2:958:975	6153287	0					
ANR	6153418	IdentifierDeclStatement	ut64 next = 0 ;	414:2:8933:8946	6153287	0	True				
ANR	6153419	IdentifierDecl	next = 0		6153287	0					
ANR	6153420	IdentifierDeclType	ut64		6153287	0					
ANR	6153421	Identifier	next		6153287	1					
ANR	6153422	AssignmentExpression	next = 0		6153287	2		=			
ANR	6153423	Identifier	next		6153287	0					
ANR	6153424	PrimaryExpression	0		6153287	1					
ANR	6153425	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & next , ptr , 4 << ctx -> is_x64 )"	416:2:8951:9013	6153287	1	True				
ANR	6153426	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & next , ptr , 4 << ctx -> is_x64 )"		6153287	0					
ANR	6153427	Callee	windbg_read_at		6153287	0					
ANR	6153428	Identifier	windbg_read_at		6153287	0					
ANR	6153429	ArgumentList	ctx		6153287	1					
ANR	6153430	Argument	ctx		6153287	0					
ANR	6153431	Identifier	ctx		6153287	0					
ANR	6153432	Argument	( uint8_t * ) & next		6153287	1					
ANR	6153433	CastExpression	( uint8_t * ) & next		6153287	0					
ANR	6153434	CastTarget	uint8_t *		6153287	0					
ANR	6153435	UnaryOperationExpression	& next		6153287	1					
ANR	6153436	UnaryOperator	&		6153287	0					
ANR	6153437	Identifier	next		6153287	1					
ANR	6153438	Argument	ptr		6153287	2					
ANR	6153439	Identifier	ptr		6153287	0					
ANR	6153440	Argument	4 << ctx -> is_x64		6153287	3					
ANR	6153441	ShiftExpression	4 << ctx -> is_x64		6153287	0		<<			
ANR	6153442	PrimaryExpression	4		6153287	0					
ANR	6153443	PtrMemberAccess	ctx -> is_x64		6153287	1					
ANR	6153444	Identifier	ctx		6153287	0					
ANR	6153445	Identifier	is_x64		6153287	1					
ANR	6153446	IfStatement	if ( ! next )		6153287	2					
ANR	6153447	Condition	! next	417:6:9021:9025	6153287	0	True				
ANR	6153448	UnaryOperationExpression	! next		6153287	0					
ANR	6153449	UnaryOperator	!		6153287	0					
ANR	6153450	Identifier	next		6153287	1					
ANR	6153451	CompoundStatement		38:13:643:643	6153287	1					
ANR	6153452	Statement	WIND_DBG	418:3:9033:9040	6153287	0	True				
ANR	6153453	Statement	eprintf	418:12:9042:9048	6153287	1	True				
ANR	6153454	Statement	(	418:20:9050:9050	6153287	2	True				
ANR	6153455	Statement	"""Corrupted ThreadListEntry found at: 0x%"""	418:21:9051:9091	6153287	3	True				
ANR	6153456	Statement	PFMT64x	418:62:9092:9098	6153287	4	True				
ANR	6153457	Statement	"""\\n"""	418:69:9099:9102	6153287	5	True				
ANR	6153458	Statement	","	418:73:9103:9103	6153287	6	True				
ANR	6153459	Statement	ptr	418:75:9105:9107	6153287	7	True				
ANR	6153460	Statement	)	418:78:9108:9108	6153287	8	True				
ANR	6153461	ExpressionStatement		418:79:9109:9109	6153287	9	True				
ANR	6153462	BreakStatement	break ;	419:3:9114:9119	6153287	10	True				
ANR	6153463	ExpressionStatement	ptr -= O_ ( ET_ThreadListEntry )	423:2:9186:9215	6153287	3	True				
ANR	6153464	AssignmentExpression	ptr -= O_ ( ET_ThreadListEntry )		6153287	0		-=			
ANR	6153465	Identifier	ptr		6153287	0					
ANR	6153466	CallExpression	O_ ( ET_ThreadListEntry )		6153287	1					
ANR	6153467	Callee	O_		6153287	0					
ANR	6153468	Identifier	O_		6153287	0					
ANR	6153469	ArgumentList	ET_ThreadListEntry		6153287	1					
ANR	6153470	Argument	ET_ThreadListEntry		6153287	0					
ANR	6153471	Identifier	ET_ThreadListEntry		6153287	0					
ANR	6153472	IdentifierDeclStatement	ut64 entrypoint = 0 ;	425:2:9220:9239	6153287	4	True				
ANR	6153473	IdentifierDecl	entrypoint = 0		6153287	0					
ANR	6153474	IdentifierDeclType	ut64		6153287	0					
ANR	6153475	Identifier	entrypoint		6153287	1					
ANR	6153476	AssignmentExpression	entrypoint = 0		6153287	2		=			
ANR	6153477	Identifier	entrypoint		6153287	0					
ANR	6153478	PrimaryExpression	0		6153287	1					
ANR	6153479	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & entrypoint , ptr + O_ ( ET_Win32StartAddress ) , 4 << ctx -> is_x64 )"	426:2:9243:9338	6153287	5	True				
ANR	6153480	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & entrypoint , ptr + O_ ( ET_Win32StartAddress ) , 4 << ctx -> is_x64 )"		6153287	0					
ANR	6153481	Callee	windbg_read_at		6153287	0					
ANR	6153482	Identifier	windbg_read_at		6153287	0					
ANR	6153483	ArgumentList	ctx		6153287	1					
ANR	6153484	Argument	ctx		6153287	0					
ANR	6153485	Identifier	ctx		6153287	0					
ANR	6153486	Argument	( uint8_t * ) & entrypoint		6153287	1					
ANR	6153487	CastExpression	( uint8_t * ) & entrypoint		6153287	0					
ANR	6153488	CastTarget	uint8_t *		6153287	0					
ANR	6153489	UnaryOperationExpression	& entrypoint		6153287	1					
ANR	6153490	UnaryOperator	&		6153287	0					
ANR	6153491	Identifier	entrypoint		6153287	1					
ANR	6153492	Argument	ptr + O_ ( ET_Win32StartAddress )		6153287	2					
ANR	6153493	AdditiveExpression	ptr + O_ ( ET_Win32StartAddress )		6153287	0		+			
ANR	6153494	Identifier	ptr		6153287	0					
ANR	6153495	CallExpression	O_ ( ET_Win32StartAddress )		6153287	1					
ANR	6153496	Callee	O_		6153287	0					
ANR	6153497	Identifier	O_		6153287	0					
ANR	6153498	ArgumentList	ET_Win32StartAddress		6153287	1					
ANR	6153499	Argument	ET_Win32StartAddress		6153287	0					
ANR	6153500	Identifier	ET_Win32StartAddress		6153287	0					
ANR	6153501	Argument	4 << ctx -> is_x64		6153287	3					
ANR	6153502	ShiftExpression	4 << ctx -> is_x64		6153287	0		<<			
ANR	6153503	PrimaryExpression	4		6153287	0					
ANR	6153504	PtrMemberAccess	ctx -> is_x64		6153287	1					
ANR	6153505	Identifier	ctx		6153287	0					
ANR	6153506	Identifier	is_x64		6153287	1					
ANR	6153507	IdentifierDeclStatement	ut64 uniqueid = 0 ;	428:2:9343:9360	6153287	6	True				
ANR	6153508	IdentifierDecl	uniqueid = 0		6153287	0					
ANR	6153509	IdentifierDeclType	ut64		6153287	0					
ANR	6153510	Identifier	uniqueid		6153287	1					
ANR	6153511	AssignmentExpression	uniqueid = 0		6153287	2		=			
ANR	6153512	Identifier	uniqueid		6153287	0					
ANR	6153513	PrimaryExpression	0		6153287	1					
ANR	6153514	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & uniqueid , ptr + O_ ( ET_Cid ) + O_ ( C_UniqueThread ) , 4 << ctx -> is_x64 )"	429:2:9364:9464	6153287	7	True				
ANR	6153515	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & uniqueid , ptr + O_ ( ET_Cid ) + O_ ( C_UniqueThread ) , 4 << ctx -> is_x64 )"		6153287	0					
ANR	6153516	Callee	windbg_read_at		6153287	0					
ANR	6153517	Identifier	windbg_read_at		6153287	0					
ANR	6153518	ArgumentList	ctx		6153287	1					
ANR	6153519	Argument	ctx		6153287	0					
ANR	6153520	Identifier	ctx		6153287	0					
ANR	6153521	Argument	( uint8_t * ) & uniqueid		6153287	1					
ANR	6153522	CastExpression	( uint8_t * ) & uniqueid		6153287	0					
ANR	6153523	CastTarget	uint8_t *		6153287	0					
ANR	6153524	UnaryOperationExpression	& uniqueid		6153287	1					
ANR	6153525	UnaryOperator	&		6153287	0					
ANR	6153526	Identifier	uniqueid		6153287	1					
ANR	6153527	Argument	ptr + O_ ( ET_Cid ) + O_ ( C_UniqueThread )		6153287	2					
ANR	6153528	AdditiveExpression	ptr + O_ ( ET_Cid ) + O_ ( C_UniqueThread )		6153287	0		+			
ANR	6153529	Identifier	ptr		6153287	0					
ANR	6153530	AdditiveExpression	O_ ( ET_Cid ) + O_ ( C_UniqueThread )		6153287	1		+			
ANR	6153531	CallExpression	O_ ( ET_Cid )		6153287	0					
ANR	6153532	Callee	O_		6153287	0					
ANR	6153533	Identifier	O_		6153287	0					
ANR	6153534	ArgumentList	ET_Cid		6153287	1					
ANR	6153535	Argument	ET_Cid		6153287	0					
ANR	6153536	Identifier	ET_Cid		6153287	0					
ANR	6153537	CallExpression	O_ ( C_UniqueThread )		6153287	1					
ANR	6153538	Callee	O_		6153287	0					
ANR	6153539	Identifier	O_		6153287	0					
ANR	6153540	ArgumentList	C_UniqueThread		6153287	1					
ANR	6153541	Argument	C_UniqueThread		6153287	0					
ANR	6153542	Identifier	C_UniqueThread		6153287	0					
ANR	6153543	Argument	4 << ctx -> is_x64		6153287	3					
ANR	6153544	ShiftExpression	4 << ctx -> is_x64		6153287	0		<<			
ANR	6153545	PrimaryExpression	4		6153287	0					
ANR	6153546	PtrMemberAccess	ctx -> is_x64		6153287	1					
ANR	6153547	Identifier	ctx		6153287	0					
ANR	6153548	Identifier	is_x64		6153287	1					
ANR	6153549	IfStatement	if ( uniqueid )		6153287	8					
ANR	6153550	Condition	uniqueid	430:6:9472:9479	6153287	0	True				
ANR	6153551	Identifier	uniqueid		6153287	0					
ANR	6153552	CompoundStatement		52:3:1102:1153	6153287	1					
ANR	6153553	IdentifierDeclStatement	"WindThread * thread = calloc ( 1 , sizeof ( WindThread ) ) ;"	431:3:9487:9538	6153287	0	True				
ANR	6153554	IdentifierDecl	"* thread = calloc ( 1 , sizeof ( WindThread ) )"		6153287	0					
ANR	6153555	IdentifierDeclType	WindThread *		6153287	0					
ANR	6153556	Identifier	thread		6153287	1					
ANR	6153557	AssignmentExpression	"* thread = calloc ( 1 , sizeof ( WindThread ) )"		6153287	2		=			
ANR	6153558	Identifier	thread		6153287	0					
ANR	6153559	CallExpression	"calloc ( 1 , sizeof ( WindThread ) )"		6153287	1					
ANR	6153560	Callee	calloc		6153287	0					
ANR	6153561	Identifier	calloc		6153287	0					
ANR	6153562	ArgumentList	1		6153287	1					
ANR	6153563	Argument	1		6153287	0					
ANR	6153564	PrimaryExpression	1		6153287	0					
ANR	6153565	Argument	sizeof ( WindThread )		6153287	1					
ANR	6153566	SizeofExpression	sizeof ( WindThread )		6153287	0					
ANR	6153567	Sizeof	sizeof		6153287	0					
ANR	6153568	SizeofOperand	WindThread		6153287	1					
ANR	6153569	ExpressionStatement	thread -> uniqueid = uniqueid	432:3:9543:9570	6153287	1	True				
ANR	6153570	AssignmentExpression	thread -> uniqueid = uniqueid		6153287	0		=			
ANR	6153571	PtrMemberAccess	thread -> uniqueid		6153287	0					
ANR	6153572	Identifier	thread		6153287	0					
ANR	6153573	Identifier	uniqueid		6153287	1					
ANR	6153574	Identifier	uniqueid		6153287	1					
ANR	6153575	ExpressionStatement	thread -> status = 's'	433:3:9575:9595	6153287	2	True				
ANR	6153576	AssignmentExpression	thread -> status = 's'		6153287	0		=			
ANR	6153577	PtrMemberAccess	thread -> status		6153287	0					
ANR	6153578	Identifier	thread		6153287	0					
ANR	6153579	Identifier	status		6153287	1					
ANR	6153580	PrimaryExpression	's'		6153287	1					
ANR	6153581	ExpressionStatement	thread -> runnable = true	434:3:9600:9623	6153287	3	True				
ANR	6153582	AssignmentExpression	thread -> runnable = true		6153287	0		=			
ANR	6153583	PtrMemberAccess	thread -> runnable		6153287	0					
ANR	6153584	Identifier	thread		6153287	0					
ANR	6153585	Identifier	runnable		6153287	1					
ANR	6153586	Identifier	true		6153287	1					
ANR	6153587	ExpressionStatement	thread -> ethread = ptr	435:3:9628:9649	6153287	4	True				
ANR	6153588	AssignmentExpression	thread -> ethread = ptr		6153287	0		=			
ANR	6153589	PtrMemberAccess	thread -> ethread		6153287	0					
ANR	6153590	Identifier	thread		6153287	0					
ANR	6153591	Identifier	ethread		6153287	1					
ANR	6153592	Identifier	ptr		6153287	1					
ANR	6153593	ExpressionStatement	thread -> entrypoint = entrypoint	436:3:9654:9685	6153287	5	True				
ANR	6153594	AssignmentExpression	thread -> entrypoint = entrypoint		6153287	0		=			
ANR	6153595	PtrMemberAccess	thread -> entrypoint		6153287	0					
ANR	6153596	Identifier	thread		6153287	0					
ANR	6153597	Identifier	entrypoint		6153287	1					
ANR	6153598	Identifier	entrypoint		6153287	1					
ANR	6153599	ExpressionStatement	"r_list_append ( ret , thread )"	438:3:9691:9718	6153287	6	True				
ANR	6153600	CallExpression	"r_list_append ( ret , thread )"		6153287	0					
ANR	6153601	Callee	r_list_append		6153287	0					
ANR	6153602	Identifier	r_list_append		6153287	0					
ANR	6153603	ArgumentList	ret		6153287	1					
ANR	6153604	Argument	ret		6153287	0					
ANR	6153605	Identifier	ret		6153287	0					
ANR	6153606	Argument	thread		6153287	1					
ANR	6153607	Identifier	thread		6153287	0					
ANR	6153608	ExpressionStatement	ptr = next	441:2:9727:9737	6153287	9	True				
ANR	6153609	AssignmentExpression	ptr = next		6153287	0		=			
ANR	6153610	Identifier	ptr		6153287	0					
ANR	6153611	Identifier	next		6153287	1					
ANR	6153612	Condition	ptr != base	442:10:9749:9759	6153287	1	True				
ANR	6153613	EqualityExpression	ptr != base		6153287	0		!=			
ANR	6153614	Identifier	ptr		6153287	0					
ANR	6153615	Identifier	base		6153287	1					
ANR	6153616	ExpressionStatement	ctx -> tlist_cache = ret	444:1:9765:9787	6153287	12	True				
ANR	6153617	AssignmentExpression	ctx -> tlist_cache = ret		6153287	0		=			
ANR	6153618	PtrMemberAccess	ctx -> tlist_cache		6153287	0					
ANR	6153619	Identifier	ctx		6153287	0					
ANR	6153620	Identifier	tlist_cache		6153287	1					
ANR	6153621	Identifier	ret		6153287	1					
ANR	6153622	ReturnStatement	return ret ;	446:1:9791:9801	6153287	13	True				
ANR	6153623	Identifier	ret		6153287	0					
ANR	6153624	ReturnType	RList *		6153287	1					
ANR	6153625	Identifier	windbg_list_threads		6153287	2					
ANR	6153626	ParameterList	WindCtx * ctx		6153287	3					
ANR	6153627	Parameter	WindCtx * ctx	380:27:8370:8381	6153287	0	True				
ANR	6153628	ParameterType	WindCtx *		6153287	0					
ANR	6153629	Identifier	ctx		6153287	1					
ANR	6153630	CFGEntryNode	ENTRY		6153287		True				
ANR	6153631	CFGExitNode	EXIT		6153287		True				
ANR	6153632	Symbol	next		6153287						
ANR	6153633	Symbol	ET_ThreadListEntry		6153287						
ANR	6153634	Symbol	& uniqueid		6153287						
ANR	6153635	Symbol	thread -> status		6153287						
ANR	6153636	Symbol	ET_Cid		6153287						
ANR	6153637	Symbol	ctx -> target		6153287						
ANR	6153638	Symbol	calloc		6153287						
ANR	6153639	Symbol	E_ThreadListHead		6153287						
ANR	6153640	Symbol	eprintf		6153287						
ANR	6153641	Symbol	C_UniqueThread		6153287						
ANR	6153642	Symbol	& ptr		6153287						
ANR	6153643	Symbol	entrypoint		6153287						
ANR	6153644	Symbol	* thread		6153287						
ANR	6153645	Symbol	free		6153287						
ANR	6153646	Symbol	ctx -> syncd		6153287						
ANR	6153647	Symbol	uniqueid		6153287						
ANR	6153648	Symbol	thread -> runnable		6153287						
ANR	6153649	Symbol	ret		6153287						
ANR	6153650	Symbol	NULL		6153287						
ANR	6153651	Symbol	& next		6153287						
ANR	6153652	Symbol	ctx -> is_x64		6153287						
ANR	6153653	Symbol	r_list_newf		6153287						
ANR	6153654	Symbol	& entrypoint		6153287						
ANR	6153655	Symbol	ctx		6153287						
ANR	6153656	Symbol	thread -> uniqueid		6153287						
ANR	6153657	Symbol	* ctx -> target		6153287						
ANR	6153658	Symbol	thread		6153287						
ANR	6153659	Symbol	* ctx		6153287						
ANR	6153660	Symbol	ptr		6153287						
ANR	6153661	Symbol	O_		6153287						
ANR	6153662	Symbol	ctx -> io_ptr		6153287						
ANR	6153663	Symbol	ctx -> target -> eprocess		6153287						
ANR	6153664	Symbol	ET_Win32StartAddress		6153287						
ANR	6153665	Symbol	true		6153287						
ANR	6153666	Symbol	* * ctx		6153287						
ANR	6153667	Symbol	ctx -> tlist_cache		6153287						
ANR	6153668	Symbol	thread -> ethread		6153287						
ANR	6153669	Symbol	thread -> entrypoint		6153287						
ANR	6153670	Symbol	base		6153287						
ANR	6153671	Function	windbg_va_to_pa	456:0:10220:12403							
ANR	6153672	FunctionDef	"windbg_va_to_pa (WindCtx * ctx , ut64 va , ut64 * pa)"		6153671	0					
ANR	6153673	CompoundStatement		456:54:10274:12403	6153671	0					
ANR	6153674	IdentifierDeclStatement	"ut64 pml4i , pdpi , pdi , pti ;"	457:1:10277:10303	6153671	0	True				
ANR	6153675	IdentifierDecl	pml4i		6153671	0					
ANR	6153676	IdentifierDeclType	ut64		6153671	0					
ANR	6153677	Identifier	pml4i		6153671	1					
ANR	6153678	IdentifierDecl	pdpi		6153671	1					
ANR	6153679	IdentifierDeclType	ut64		6153671	0					
ANR	6153680	Identifier	pdpi		6153671	1					
ANR	6153681	IdentifierDecl	pdi		6153671	2					
ANR	6153682	IdentifierDeclType	ut64		6153671	0					
ANR	6153683	Identifier	pdi		6153671	1					
ANR	6153684	IdentifierDecl	pti		6153671	3					
ANR	6153685	IdentifierDeclType	ut64		6153671	0					
ANR	6153686	Identifier	pti		6153671	1					
ANR	6153687	IdentifierDeclStatement	"ut64 tmp , mask ;"	458:1:10306:10320	6153671	1	True				
ANR	6153688	IdentifierDecl	tmp		6153671	0					
ANR	6153689	IdentifierDeclType	ut64		6153671	0					
ANR	6153690	Identifier	tmp		6153671	1					
ANR	6153691	IdentifierDecl	mask		6153671	1					
ANR	6153692	IdentifierDeclType	ut64		6153671	0					
ANR	6153693	Identifier	mask		6153671	1					
ANR	6153694	IfStatement	if ( ! ctx -> target )		6153671	2					
ANR	6153695	Condition	! ctx -> target	461:5:10363:10374	6153671	0	True				
ANR	6153696	UnaryOperationExpression	! ctx -> target		6153671	0					
ANR	6153697	UnaryOperator	!		6153671	0					
ANR	6153698	PtrMemberAccess	ctx -> target		6153671	1					
ANR	6153699	Identifier	ctx		6153671	0					
ANR	6153700	Identifier	target		6153671	1					
ANR	6153701	CompoundStatement		6:19:102:102	6153671	1					
ANR	6153702	ReturnStatement	return 0 ;	462:2:10381:10389	6153671	0	True				
ANR	6153703	PrimaryExpression	0		6153671	0					
ANR	6153704	Statement	WIND_DBG	465:1:10396:10403	6153671	3	True				
ANR	6153705	Statement	eprintf	465:10:10405:10411	6153671	4	True				
ANR	6153706	Statement	(	465:17:10412:10412	6153671	5	True				
ANR	6153707	Statement	"""VA   : %016"""	465:18:10413:10425	6153671	6	True				
ANR	6153708	Statement	PFMT64x	465:31:10426:10432	6153671	7	True				
ANR	6153709	Statement	"""\\n"""	465:39:10434:10437	6153671	8	True				
ANR	6153710	Statement	","	465:43:10438:10438	6153671	9	True				
ANR	6153711	Statement	va	465:45:10440:10441	6153671	10	True				
ANR	6153712	Statement	)	465:47:10442:10442	6153671	11	True				
ANR	6153713	ExpressionStatement		465:48:10443:10443	6153671	12	True				
ANR	6153714	IfStatement	if ( ctx -> is_x64 )		6153671	13					
ANR	6153715	Condition	ctx -> is_x64	467:5:10451:10461	6153671	0	True				
ANR	6153716	PtrMemberAccess	ctx -> is_x64		6153671	0					
ANR	6153717	Identifier	ctx		6153671	0					
ANR	6153718	Identifier	is_x64		6153671	1					
ANR	6153719	CompoundStatement		12:18:189:189	6153671	1					
ANR	6153720	ExpressionStatement	pti = ( va >> 12 ) & 0x1ff	468:2:10468:10492	6153671	0	True				
ANR	6153721	AssignmentExpression	pti = ( va >> 12 ) & 0x1ff		6153671	0		=			
ANR	6153722	Identifier	pti		6153671	0					
ANR	6153723	BitAndExpression	( va >> 12 ) & 0x1ff		6153671	1		&			
ANR	6153724	ShiftExpression	va >> 12		6153671	0		>>			
ANR	6153725	Identifier	va		6153671	0					
ANR	6153726	PrimaryExpression	12		6153671	1					
ANR	6153727	PrimaryExpression	0x1ff		6153671	1					
ANR	6153728	ExpressionStatement	pdi = ( va >> 21 ) & 0x1ff	469:2:10496:10520	6153671	1	True				
ANR	6153729	AssignmentExpression	pdi = ( va >> 21 ) & 0x1ff		6153671	0		=			
ANR	6153730	Identifier	pdi		6153671	0					
ANR	6153731	BitAndExpression	( va >> 21 ) & 0x1ff		6153671	1		&			
ANR	6153732	ShiftExpression	va >> 21		6153671	0		>>			
ANR	6153733	Identifier	va		6153671	0					
ANR	6153734	PrimaryExpression	21		6153671	1					
ANR	6153735	PrimaryExpression	0x1ff		6153671	1					
ANR	6153736	ExpressionStatement	pdpi = ( va >> 30 ) & 0x1ff	470:2:10524:10549	6153671	2	True				
ANR	6153737	AssignmentExpression	pdpi = ( va >> 30 ) & 0x1ff		6153671	0		=			
ANR	6153738	Identifier	pdpi		6153671	0					
ANR	6153739	BitAndExpression	( va >> 30 ) & 0x1ff		6153671	1		&			
ANR	6153740	ShiftExpression	va >> 30		6153671	0		>>			
ANR	6153741	Identifier	va		6153671	0					
ANR	6153742	PrimaryExpression	30		6153671	1					
ANR	6153743	PrimaryExpression	0x1ff		6153671	1					
ANR	6153744	ExpressionStatement	pml4i = ( va >> 39 ) & 0x1ff	471:2:10553:10579	6153671	3	True				
ANR	6153745	AssignmentExpression	pml4i = ( va >> 39 ) & 0x1ff		6153671	0		=			
ANR	6153746	Identifier	pml4i		6153671	0					
ANR	6153747	BitAndExpression	( va >> 39 ) & 0x1ff		6153671	1		&			
ANR	6153748	ShiftExpression	va >> 39		6153671	0		>>			
ANR	6153749	Identifier	va		6153671	0					
ANR	6153750	PrimaryExpression	39		6153671	1					
ANR	6153751	PrimaryExpression	0x1ff		6153671	1					
ANR	6153752	ExpressionStatement	mask = 0x000000fffffff000	473:2:10647:10672	6153671	4	True				
ANR	6153753	AssignmentExpression	mask = 0x000000fffffff000		6153671	0		=			
ANR	6153754	Identifier	mask		6153671	0					
ANR	6153755	PrimaryExpression	0x000000fffffff000		6153671	1					
ANR	6153756	ElseStatement	else		6153671	0					
ANR	6153757	CompoundStatement		19:8:407:407	6153671	0					
ANR	6153758	IfStatement	if ( ctx -> pae )		6153671	0					
ANR	6153759	Condition	ctx -> pae	475:6:10690:10697	6153671	0	True				
ANR	6153760	PtrMemberAccess	ctx -> pae		6153671	0					
ANR	6153761	Identifier	ctx		6153671	0					
ANR	6153762	Identifier	pae		6153671	1					
ANR	6153763	CompoundStatement		20:16:425:425	6153671	1					
ANR	6153764	ExpressionStatement	pti = ( va >> 12 ) & 0x1ff	476:3:10705:10729	6153671	0	True				
ANR	6153765	AssignmentExpression	pti = ( va >> 12 ) & 0x1ff		6153671	0		=			
ANR	6153766	Identifier	pti		6153671	0					
ANR	6153767	BitAndExpression	( va >> 12 ) & 0x1ff		6153671	1		&			
ANR	6153768	ShiftExpression	va >> 12		6153671	0		>>			
ANR	6153769	Identifier	va		6153671	0					
ANR	6153770	PrimaryExpression	12		6153671	1					
ANR	6153771	PrimaryExpression	0x1ff		6153671	1					
ANR	6153772	ExpressionStatement	pdi = ( va >> 21 ) & 0x1ff	477:3:10734:10758	6153671	1	True				
ANR	6153773	AssignmentExpression	pdi = ( va >> 21 ) & 0x1ff		6153671	0		=			
ANR	6153774	Identifier	pdi		6153671	0					
ANR	6153775	BitAndExpression	( va >> 21 ) & 0x1ff		6153671	1		&			
ANR	6153776	ShiftExpression	va >> 21		6153671	0		>>			
ANR	6153777	Identifier	va		6153671	0					
ANR	6153778	PrimaryExpression	21		6153671	1					
ANR	6153779	PrimaryExpression	0x1ff		6153671	1					
ANR	6153780	ExpressionStatement	pdpi = ( va >> 30 ) & 0x3	478:3:10763:10786	6153671	2	True				
ANR	6153781	AssignmentExpression	pdpi = ( va >> 30 ) & 0x3		6153671	0		=			
ANR	6153782	Identifier	pdpi		6153671	0					
ANR	6153783	BitAndExpression	( va >> 30 ) & 0x3		6153671	1		&			
ANR	6153784	ShiftExpression	va >> 30		6153671	0		>>			
ANR	6153785	Identifier	va		6153671	0					
ANR	6153786	PrimaryExpression	30		6153671	1					
ANR	6153787	PrimaryExpression	0x3		6153671	1					
ANR	6153788	ExpressionStatement	pml4i = 0	479:3:10791:10800	6153671	3	True				
ANR	6153789	AssignmentExpression	pml4i = 0		6153671	0		=			
ANR	6153790	Identifier	pml4i		6153671	0					
ANR	6153791	PrimaryExpression	0		6153671	1					
ANR	6153792	ElseStatement	else		6153671	0					
ANR	6153793	CompoundStatement		25:9:536:536	6153671	0					
ANR	6153794	ExpressionStatement	pti = ( va >> 12 ) & 0x3ff	481:3:10816:10840	6153671	0	True				
ANR	6153795	AssignmentExpression	pti = ( va >> 12 ) & 0x3ff		6153671	0		=			
ANR	6153796	Identifier	pti		6153671	0					
ANR	6153797	BitAndExpression	( va >> 12 ) & 0x3ff		6153671	1		&			
ANR	6153798	ShiftExpression	va >> 12		6153671	0		>>			
ANR	6153799	Identifier	va		6153671	0					
ANR	6153800	PrimaryExpression	12		6153671	1					
ANR	6153801	PrimaryExpression	0x3ff		6153671	1					
ANR	6153802	ExpressionStatement	pdi = ( va >> 22 ) & 0x3ff	482:3:10845:10869	6153671	1	True				
ANR	6153803	AssignmentExpression	pdi = ( va >> 22 ) & 0x3ff		6153671	0		=			
ANR	6153804	Identifier	pdi		6153671	0					
ANR	6153805	BitAndExpression	( va >> 22 ) & 0x3ff		6153671	1		&			
ANR	6153806	ShiftExpression	va >> 22		6153671	0		>>			
ANR	6153807	Identifier	va		6153671	0					
ANR	6153808	PrimaryExpression	22		6153671	1					
ANR	6153809	PrimaryExpression	0x3ff		6153671	1					
ANR	6153810	ExpressionStatement	pdpi = 0	483:3:10874:10882	6153671	2	True				
ANR	6153811	AssignmentExpression	pdpi = 0		6153671	0		=			
ANR	6153812	Identifier	pdpi		6153671	0					
ANR	6153813	PrimaryExpression	0		6153671	1					
ANR	6153814	ExpressionStatement	pml4i = 0	484:3:10887:10896	6153671	3	True				
ANR	6153815	AssignmentExpression	pml4i = 0		6153671	0		=			
ANR	6153816	Identifier	pml4i		6153671	0					
ANR	6153817	PrimaryExpression	0		6153671	1					
ANR	6153818	ExpressionStatement	mask = 0xfffff000	487:2:10968:10985	6153671	1	True				
ANR	6153819	AssignmentExpression	mask = 0xfffff000		6153671	0		=			
ANR	6153820	Identifier	mask		6153671	0					
ANR	6153821	PrimaryExpression	0xfffff000		6153671	1					
ANR	6153822	ExpressionStatement	tmp = ctx -> target -> dir_base_table	490:1:10992:11025	6153671	14	True				
ANR	6153823	AssignmentExpression	tmp = ctx -> target -> dir_base_table		6153671	0		=			
ANR	6153824	Identifier	tmp		6153671	0					
ANR	6153825	PtrMemberAccess	ctx -> target -> dir_base_table		6153671	1					
ANR	6153826	PtrMemberAccess	ctx -> target		6153671	0					
ANR	6153827	Identifier	ctx		6153671	0					
ANR	6153828	Identifier	target		6153671	1					
ANR	6153829	Identifier	dir_base_table		6153671	1					
ANR	6153830	ExpressionStatement	tmp &= ~0x1f	491:1:11028:11040	6153671	15	True				
ANR	6153831	AssignmentExpression	tmp &= ~0x1f		6153671	0		&=			
ANR	6153832	Identifier	tmp		6153671	0					
ANR	6153833	Identifier	~0x1f		6153671	1					
ANR	6153834	Statement	WIND_DBG	493:1:11044:11051	6153671	16	True				
ANR	6153835	Statement	eprintf	493:10:11053:11059	6153671	17	True				
ANR	6153836	Statement	(	493:17:11060:11060	6153671	18	True				
ANR	6153837	Statement	"""CR3  : %016"""	493:18:11061:11073	6153671	19	True				
ANR	6153838	Statement	PFMT64x	493:31:11074:11080	6153671	20	True				
ANR	6153839	Statement	"""\\n"""	493:39:11082:11085	6153671	21	True				
ANR	6153840	Statement	","	493:43:11086:11086	6153671	22	True				
ANR	6153841	Statement	tmp	493:45:11088:11090	6153671	23	True				
ANR	6153842	Statement	)	493:48:11091:11091	6153671	24	True				
ANR	6153843	ExpressionStatement		493:49:11092:11092	6153671	25	True				
ANR	6153844	IfStatement	if ( ctx -> is_x64 )		6153671	26					
ANR	6153845	Condition	ctx -> is_x64	495:5:11100:11110	6153671	0	True				
ANR	6153846	PtrMemberAccess	ctx -> is_x64		6153671	0					
ANR	6153847	Identifier	ctx		6153671	0					
ANR	6153848	Identifier	is_x64		6153671	1					
ANR	6153849	CompoundStatement		40:18:838:838	6153671	1					
ANR	6153850	IfStatement	"if ( ! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pml4i * 8 , 8 ) )"		6153671	0					
ANR	6153851	Condition	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pml4i * 8 , 8 )"	497:6:11138:11201	6153671	0	True				
ANR	6153852	UnaryOperationExpression	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pml4i * 8 , 8 )"		6153671	0					
ANR	6153853	UnaryOperator	!		6153671	0					
ANR	6153854	CallExpression	"windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pml4i * 8 , 8 )"		6153671	1					
ANR	6153855	Callee	windbg_read_at_phys		6153671	0					
ANR	6153856	Identifier	windbg_read_at_phys		6153671	0					
ANR	6153857	ArgumentList	ctx		6153671	1					
ANR	6153858	Argument	ctx		6153671	0					
ANR	6153859	Identifier	ctx		6153671	0					
ANR	6153860	Argument	( uint8_t * ) & tmp		6153671	1					
ANR	6153861	CastExpression	( uint8_t * ) & tmp		6153671	0					
ANR	6153862	CastTarget	uint8_t *		6153671	0					
ANR	6153863	UnaryOperationExpression	& tmp		6153671	1					
ANR	6153864	UnaryOperator	&		6153671	0					
ANR	6153865	Identifier	tmp		6153671	1					
ANR	6153866	Argument	tmp + pml4i * 8		6153671	2					
ANR	6153867	AdditiveExpression	tmp + pml4i * 8		6153671	0		+			
ANR	6153868	Identifier	tmp		6153671	0					
ANR	6153869	MultiplicativeExpression	pml4i * 8		6153671	1		*			
ANR	6153870	Identifier	pml4i		6153671	0					
ANR	6153871	PrimaryExpression	8		6153671	1					
ANR	6153872	Argument	8		6153671	3					
ANR	6153873	PrimaryExpression	8		6153671	0					
ANR	6153874	CompoundStatement		42:72:929:929	6153671	1					
ANR	6153875	ReturnStatement	return false ;	498:3:11209:11221	6153671	0	True				
ANR	6153876	Identifier	false		6153671	0					
ANR	6153877	ExpressionStatement	tmp &= mask	500:2:11229:11240	6153671	1	True				
ANR	6153878	AssignmentExpression	tmp &= mask		6153671	0		&=			
ANR	6153879	Identifier	tmp		6153671	0					
ANR	6153880	Identifier	mask		6153671	1					
ANR	6153881	Statement	WIND_DBG	501:2:11244:11251	6153671	2	True				
ANR	6153882	Statement	eprintf	501:11:11253:11259	6153671	3	True				
ANR	6153883	Statement	(	501:18:11260:11260	6153671	4	True				
ANR	6153884	Statement	"""PML4 : %016"""	501:19:11261:11273	6153671	5	True				
ANR	6153885	Statement	PFMT64x	501:32:11274:11280	6153671	6	True				
ANR	6153886	Statement	"""\\n"""	501:40:11282:11285	6153671	7	True				
ANR	6153887	Statement	","	501:44:11286:11286	6153671	8	True				
ANR	6153888	Statement	tmp	501:46:11288:11290	6153671	9	True				
ANR	6153889	Statement	)	501:49:11291:11291	6153671	10	True				
ANR	6153890	ExpressionStatement		501:50:11292:11292	6153671	11	True				
ANR	6153891	IfStatement	if ( ctx -> pae )		6153671	27					
ANR	6153892	Condition	ctx -> pae	504:5:11303:11310	6153671	0	True				
ANR	6153893	PtrMemberAccess	ctx -> pae		6153671	0					
ANR	6153894	Identifier	ctx		6153671	0					
ANR	6153895	Identifier	pae		6153671	1					
ANR	6153896	CompoundStatement		49:15:1038:1038	6153671	1					
ANR	6153897	IfStatement	"if ( ! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdpi * 8 , 8 ) )"		6153671	0					
ANR	6153898	Condition	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdpi * 8 , 8 )"	506:6:11338:11400	6153671	0	True				
ANR	6153899	UnaryOperationExpression	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdpi * 8 , 8 )"		6153671	0					
ANR	6153900	UnaryOperator	!		6153671	0					
ANR	6153901	CallExpression	"windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdpi * 8 , 8 )"		6153671	1					
ANR	6153902	Callee	windbg_read_at_phys		6153671	0					
ANR	6153903	Identifier	windbg_read_at_phys		6153671	0					
ANR	6153904	ArgumentList	ctx		6153671	1					
ANR	6153905	Argument	ctx		6153671	0					
ANR	6153906	Identifier	ctx		6153671	0					
ANR	6153907	Argument	( uint8_t * ) & tmp		6153671	1					
ANR	6153908	CastExpression	( uint8_t * ) & tmp		6153671	0					
ANR	6153909	CastTarget	uint8_t *		6153671	0					
ANR	6153910	UnaryOperationExpression	& tmp		6153671	1					
ANR	6153911	UnaryOperator	&		6153671	0					
ANR	6153912	Identifier	tmp		6153671	1					
ANR	6153913	Argument	tmp + pdpi * 8		6153671	2					
ANR	6153914	AdditiveExpression	tmp + pdpi * 8		6153671	0		+			
ANR	6153915	Identifier	tmp		6153671	0					
ANR	6153916	MultiplicativeExpression	pdpi * 8		6153671	1		*			
ANR	6153917	Identifier	pdpi		6153671	0					
ANR	6153918	PrimaryExpression	8		6153671	1					
ANR	6153919	Argument	8		6153671	3					
ANR	6153920	PrimaryExpression	8		6153671	0					
ANR	6153921	CompoundStatement		51:71:1128:1128	6153671	1					
ANR	6153922	ReturnStatement	return false ;	507:3:11408:11420	6153671	0	True				
ANR	6153923	Identifier	false		6153671	0					
ANR	6153924	ExpressionStatement	tmp &= mask	509:2:11428:11439	6153671	1	True				
ANR	6153925	AssignmentExpression	tmp &= mask		6153671	0		&=			
ANR	6153926	Identifier	tmp		6153671	0					
ANR	6153927	Identifier	mask		6153671	1					
ANR	6153928	Statement	WIND_DBG	510:2:11443:11450	6153671	2	True				
ANR	6153929	Statement	eprintf	510:11:11452:11458	6153671	3	True				
ANR	6153930	Statement	(	510:18:11459:11459	6153671	4	True				
ANR	6153931	Statement	"""PDPE : %016"""	510:19:11460:11472	6153671	5	True				
ANR	6153932	Statement	PFMT64x	510:32:11473:11479	6153671	6	True				
ANR	6153933	Statement	"""\\n"""	510:40:11481:11484	6153671	7	True				
ANR	6153934	Statement	","	510:44:11485:11485	6153671	8	True				
ANR	6153935	Statement	tmp	510:46:11487:11489	6153671	9	True				
ANR	6153936	Statement	)	510:49:11490:11490	6153671	10	True				
ANR	6153937	ExpressionStatement		510:50:11491:11491	6153671	11	True				
ANR	6153938	IfStatement	"if ( ! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdi * ( 4 << ctx -> pae ) , 4 << ctx -> pae ) )"		6153671	28					
ANR	6153939	Condition	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdi * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"	514:5:11517:11604	6153671	0	True				
ANR	6153940	UnaryOperationExpression	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdi * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"		6153671	0					
ANR	6153941	UnaryOperator	!		6153671	0					
ANR	6153942	CallExpression	"windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdi * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"		6153671	1					
ANR	6153943	Callee	windbg_read_at_phys		6153671	0					
ANR	6153944	Identifier	windbg_read_at_phys		6153671	0					
ANR	6153945	ArgumentList	ctx		6153671	1					
ANR	6153946	Argument	ctx		6153671	0					
ANR	6153947	Identifier	ctx		6153671	0					
ANR	6153948	Argument	( uint8_t * ) & tmp		6153671	1					
ANR	6153949	CastExpression	( uint8_t * ) & tmp		6153671	0					
ANR	6153950	CastTarget	uint8_t *		6153671	0					
ANR	6153951	UnaryOperationExpression	& tmp		6153671	1					
ANR	6153952	UnaryOperator	&		6153671	0					
ANR	6153953	Identifier	tmp		6153671	1					
ANR	6153954	Argument	tmp + pdi * ( 4 << ctx -> pae )		6153671	2					
ANR	6153955	AdditiveExpression	tmp + pdi * ( 4 << ctx -> pae )		6153671	0		+			
ANR	6153956	Identifier	tmp		6153671	0					
ANR	6153957	MultiplicativeExpression	pdi * ( 4 << ctx -> pae )		6153671	1		*			
ANR	6153958	Identifier	pdi		6153671	0					
ANR	6153959	ShiftExpression	4 << ctx -> pae		6153671	1		<<			
ANR	6153960	PrimaryExpression	4		6153671	0					
ANR	6153961	PtrMemberAccess	ctx -> pae		6153671	1					
ANR	6153962	Identifier	ctx		6153671	0					
ANR	6153963	Identifier	pae		6153671	1					
ANR	6153964	Argument	4 << ctx -> pae		6153671	3					
ANR	6153965	ShiftExpression	4 << ctx -> pae		6153671	0		<<			
ANR	6153966	PrimaryExpression	4		6153671	0					
ANR	6153967	PtrMemberAccess	ctx -> pae		6153671	1					
ANR	6153968	Identifier	ctx		6153671	0					
ANR	6153969	Identifier	pae		6153671	1					
ANR	6153970	CompoundStatement		59:95:1332:1332	6153671	1					
ANR	6153971	ReturnStatement	return false ;	515:2:11611:11623	6153671	0	True				
ANR	6153972	Identifier	false		6153671	0					
ANR	6153973	Statement	WIND_DBG	517:1:11629:11636	6153671	29	True				
ANR	6153974	Statement	eprintf	517:10:11638:11644	6153671	30	True				
ANR	6153975	Statement	(	517:17:11645:11645	6153671	31	True				
ANR	6153976	Statement	"""PDE  : %016"""	517:18:11646:11658	6153671	32	True				
ANR	6153977	Statement	PFMT64x	517:31:11659:11665	6153671	33	True				
ANR	6153978	Statement	"""\\n"""	517:39:11667:11670	6153671	34	True				
ANR	6153979	Statement	","	517:43:11671:11671	6153671	35	True				
ANR	6153980	Statement	tmp	517:45:11673:11675	6153671	36	True				
ANR	6153981	Statement	)	517:48:11676:11676	6153671	37	True				
ANR	6153982	ExpressionStatement		517:49:11677:11677	6153671	38	True				
ANR	6153983	IfStatement	if ( tmp & PTE_LARGEPAGE )		6153671	39					
ANR	6153984	Condition	tmp & PTE_LARGEPAGE	522:5:11837:11855	6153671	0	True				
ANR	6153985	BitAndExpression	tmp & PTE_LARGEPAGE		6153671	0		&			
ANR	6153986	Identifier	tmp		6153671	0					
ANR	6153987	Identifier	PTE_LARGEPAGE		6153671	1					
ANR	6153988	CompoundStatement		67:26:1583:1583	6153671	1					
ANR	6153989	ExpressionStatement	* pa = ctx -> pae ? ( tmp & ( ~0x1fffff ) ) | ( va & 0x1fffff ) : ( tmp & ( ~0x3fffff ) ) | ( va & 0x3fffff )	523:2:11862:11970	6153671	0	True				
ANR	6153990	AssignmentExpression	* pa = ctx -> pae ? ( tmp & ( ~0x1fffff ) ) | ( va & 0x1fffff ) : ( tmp & ( ~0x3fffff ) ) | ( va & 0x3fffff )		6153671	0		=			
ANR	6153991	UnaryOperationExpression	* pa		6153671	0					
ANR	6153992	UnaryOperator	*		6153671	0					
ANR	6153993	Identifier	pa		6153671	1					
ANR	6153994	ConditionalExpression	ctx -> pae ? ( tmp & ( ~0x1fffff ) ) | ( va & 0x1fffff ) : ( tmp & ( ~0x3fffff ) ) | ( va & 0x3fffff )		6153671	1					
ANR	6153995	Condition	ctx -> pae		6153671	0					
ANR	6153996	PtrMemberAccess	ctx -> pae		6153671	0					
ANR	6153997	Identifier	ctx		6153671	0					
ANR	6153998	Identifier	pae		6153671	1					
ANR	6153999	InclusiveOrExpression	( tmp & ( ~0x1fffff ) ) | ( va & 0x1fffff )		6153671	1		|			
ANR	6154000	BitAndExpression	tmp & ( ~0x1fffff )		6153671	0		&			
ANR	6154001	Identifier	tmp		6153671	0					
ANR	6154002	Identifier	~0x1fffff		6153671	1					
ANR	6154003	BitAndExpression	va & 0x1fffff		6153671	1		&			
ANR	6154004	Identifier	va		6153671	0					
ANR	6154005	PrimaryExpression	0x1fffff		6153671	1					
ANR	6154006	InclusiveOrExpression	( tmp & ( ~0x3fffff ) ) | ( va & 0x3fffff )		6153671	2		|			
ANR	6154007	BitAndExpression	tmp & ( ~0x3fffff )		6153671	0		&			
ANR	6154008	Identifier	tmp		6153671	0					
ANR	6154009	Identifier	~0x3fffff		6153671	1					
ANR	6154010	BitAndExpression	va & 0x3fffff		6153671	1		&			
ANR	6154011	Identifier	va		6153671	0					
ANR	6154012	PrimaryExpression	0x3fffff		6153671	1					
ANR	6154013	ReturnStatement	return true ;	526:2:11974:11985	6153671	1	True				
ANR	6154014	Identifier	true		6153671	0					
ANR	6154015	IfStatement	"if ( ! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , ( tmp & mask ) + pti * ( 4 << ctx -> pae ) , 4 << ctx -> pae ) )"		6153671	40					
ANR	6154016	Condition	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , ( tmp & mask ) + pti * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"	530:5:12010:12106	6153671	0	True				
ANR	6154017	UnaryOperationExpression	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , ( tmp & mask ) + pti * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"		6153671	0					
ANR	6154018	UnaryOperator	!		6153671	0					
ANR	6154019	CallExpression	"windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , ( tmp & mask ) + pti * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"		6153671	1					
ANR	6154020	Callee	windbg_read_at_phys		6153671	0					
ANR	6154021	Identifier	windbg_read_at_phys		6153671	0					
ANR	6154022	ArgumentList	ctx		6153671	1					
ANR	6154023	Argument	ctx		6153671	0					
ANR	6154024	Identifier	ctx		6153671	0					
ANR	6154025	Argument	( uint8_t * ) & tmp		6153671	1					
ANR	6154026	CastExpression	( uint8_t * ) & tmp		6153671	0					
ANR	6154027	CastTarget	uint8_t *		6153671	0					
ANR	6154028	UnaryOperationExpression	& tmp		6153671	1					
ANR	6154029	UnaryOperator	&		6153671	0					
ANR	6154030	Identifier	tmp		6153671	1					
ANR	6154031	Argument	( tmp & mask ) + pti * ( 4 << ctx -> pae )		6153671	2					
ANR	6154032	AdditiveExpression	( tmp & mask ) + pti * ( 4 << ctx -> pae )		6153671	0		+			
ANR	6154033	BitAndExpression	tmp & mask		6153671	0		&			
ANR	6154034	Identifier	tmp		6153671	0					
ANR	6154035	Identifier	mask		6153671	1					
ANR	6154036	MultiplicativeExpression	pti * ( 4 << ctx -> pae )		6153671	1		*			
ANR	6154037	Identifier	pti		6153671	0					
ANR	6154038	ShiftExpression	4 << ctx -> pae		6153671	1		<<			
ANR	6154039	PrimaryExpression	4		6153671	0					
ANR	6154040	PtrMemberAccess	ctx -> pae		6153671	1					
ANR	6154041	Identifier	ctx		6153671	0					
ANR	6154042	Identifier	pae		6153671	1					
ANR	6154043	Argument	4 << ctx -> pae		6153671	3					
ANR	6154044	ShiftExpression	4 << ctx -> pae		6153671	0		<<			
ANR	6154045	PrimaryExpression	4		6153671	0					
ANR	6154046	PtrMemberAccess	ctx -> pae		6153671	1					
ANR	6154047	Identifier	ctx		6153671	0					
ANR	6154048	Identifier	pae		6153671	1					
ANR	6154049	CompoundStatement		75:104:1834:1834	6153671	1					
ANR	6154050	ReturnStatement	return false ;	531:2:12113:12125	6153671	0	True				
ANR	6154051	Identifier	false		6153671	0					
ANR	6154052	Statement	WIND_DBG	533:1:12131:12138	6153671	41	True				
ANR	6154053	Statement	eprintf	533:10:12140:12146	6153671	42	True				
ANR	6154054	Statement	(	533:17:12147:12147	6153671	43	True				
ANR	6154055	Statement	"""PTE  : %016"""	533:18:12148:12160	6153671	44	True				
ANR	6154056	Statement	PFMT64x	533:31:12161:12167	6153671	45	True				
ANR	6154057	Statement	"""\\n"""	533:39:12169:12172	6153671	46	True				
ANR	6154058	Statement	","	533:43:12173:12173	6153671	47	True				
ANR	6154059	Statement	tmp	533:45:12175:12177	6153671	48	True				
ANR	6154060	Statement	)	533:48:12178:12178	6153671	49	True				
ANR	6154061	ExpressionStatement		533:49:12179:12179	6153671	50	True				
ANR	6154062	IfStatement	if ( tmp & PTE_VALID )		6153671	51					
ANR	6154063	Condition	tmp & PTE_VALID	535:5:12187:12201	6153671	0	True				
ANR	6154064	BitAndExpression	tmp & PTE_VALID		6153671	0		&			
ANR	6154065	Identifier	tmp		6153671	0					
ANR	6154066	Identifier	PTE_VALID		6153671	1					
ANR	6154067	CompoundStatement		80:22:1929:1929	6153671	1					
ANR	6154068	ExpressionStatement	* pa = ( tmp & mask ) | ( va & 0xfff )	536:2:12208:12241	6153671	0	True				
ANR	6154069	AssignmentExpression	* pa = ( tmp & mask ) | ( va & 0xfff )		6153671	0		=			
ANR	6154070	UnaryOperationExpression	* pa		6153671	0					
ANR	6154071	UnaryOperator	*		6153671	0					
ANR	6154072	Identifier	pa		6153671	1					
ANR	6154073	InclusiveOrExpression	( tmp & mask ) | ( va & 0xfff )		6153671	1		|			
ANR	6154074	BitAndExpression	tmp & mask		6153671	0		&			
ANR	6154075	Identifier	tmp		6153671	0					
ANR	6154076	Identifier	mask		6153671	1					
ANR	6154077	BitAndExpression	va & 0xfff		6153671	1		&			
ANR	6154078	Identifier	va		6153671	0					
ANR	6154079	PrimaryExpression	0xfff		6153671	1					
ANR	6154080	ReturnStatement	return true ;	537:2:12245:12256	6153671	1	True				
ANR	6154081	Identifier	true		6153671	0					
ANR	6154082	IfStatement	if ( tmp & PTE_PROTOTYPE )		6153671	52					
ANR	6154083	Condition	tmp & PTE_PROTOTYPE	540:5:12267:12285	6153671	0	True				
ANR	6154084	BitAndExpression	tmp & PTE_PROTOTYPE		6153671	0		&			
ANR	6154085	Identifier	tmp		6153671	0					
ANR	6154086	Identifier	PTE_PROTOTYPE		6153671	1					
ANR	6154087	CompoundStatement		85:26:2013:2013	6153671	1					
ANR	6154088	ExpressionStatement	"eprintf ( ""Prototype PTE lookup is currently missing!\\n"" )"	542:2:12326:12382	6153671	0	True				
ANR	6154089	CallExpression	"eprintf ( ""Prototype PTE lookup is currently missing!\\n"" )"		6153671	0					
ANR	6154090	Callee	eprintf		6153671	0					
ANR	6154091	Identifier	eprintf		6153671	0					
ANR	6154092	ArgumentList	"""Prototype PTE lookup is currently missing!\\n"""		6153671	1					
ANR	6154093	Argument	"""Prototype PTE lookup is currently missing!\\n"""		6153671	0					
ANR	6154094	PrimaryExpression	"""Prototype PTE lookup is currently missing!\\n"""		6153671	0					
ANR	6154095	ReturnStatement	return false ;	545:1:12389:12401	6153671	53	True				
ANR	6154096	Identifier	false		6153671	0					
ANR	6154097	ReturnType	bool		6153671	1					
ANR	6154098	Identifier	windbg_va_to_pa		6153671	2					
ANR	6154099	ParameterList	"WindCtx * ctx , ut64 va , ut64 * pa"		6153671	3					
ANR	6154100	Parameter	WindCtx * ctx	456:21:10241:10252	6153671	0	True				
ANR	6154101	ParameterType	WindCtx *		6153671	0					
ANR	6154102	Identifier	ctx		6153671	1					
ANR	6154103	Parameter	ut64 va	456:35:10255:10261	6153671	1	True				
ANR	6154104	ParameterType	ut64		6153671	0					
ANR	6154105	Identifier	va		6153671	1					
ANR	6154106	Parameter	ut64 * pa	456:44:10264:10271	6153671	2	True				
ANR	6154107	ParameterType	ut64 *		6153671	0					
ANR	6154108	Identifier	pa		6153671	1					
ANR	6154109	CFGEntryNode	ENTRY		6153671		True				
ANR	6154110	CFGExitNode	EXIT		6153671		True				
ANR	6154111	Symbol	ctx -> target		6153671						
ANR	6154112	Symbol	windbg_read_at_phys		6153671						
ANR	6154113	Symbol	PTE_PROTOTYPE		6153671						
ANR	6154114	Symbol	PTE_VALID		6153671						
ANR	6154115	Symbol	tmp		6153671						
ANR	6154116	Symbol	pml4i		6153671						
ANR	6154117	Symbol	pdpi		6153671						
ANR	6154118	Symbol	PTE_LARGEPAGE		6153671						
ANR	6154119	Symbol	~0x1f		6153671						
ANR	6154120	Symbol	mask		6153671						
ANR	6154121	Symbol	pti		6153671						
ANR	6154122	Symbol	ctx -> is_x64		6153671						
ANR	6154123	Symbol	ctx		6153671						
ANR	6154124	Symbol	~0x1fffff		6153671						
ANR	6154125	Symbol	false		6153671						
ANR	6154126	Symbol	* ctx -> target		6153671						
ANR	6154127	Symbol	va		6153671						
ANR	6154128	Symbol	* ctx		6153671						
ANR	6154129	Symbol	pa		6153671						
ANR	6154130	Symbol	pdi		6153671						
ANR	6154131	Symbol	* pa		6153671						
ANR	6154132	Symbol	ctx -> target -> dir_base_table		6153671						
ANR	6154133	Symbol	true		6153671						
ANR	6154134	Symbol	& tmp		6153671						
ANR	6154135	Symbol	* * ctx		6153671						
ANR	6154136	Symbol	~0x3fffff		6153671						
ANR	6154137	Symbol	ctx -> pae		6153671						
ANR	6154138	Function	windbg_read_ver	548:0:12406:14887							
ANR	6154139	FunctionDef	windbg_read_ver (WindCtx * ctx)		6154138	0					
ANR	6154140	CompoundStatement		548:35:12441:14887	6154138	0					
ANR	6154141	IdentifierDeclStatement	kd_req_t req = { 0 } ;	549:1:12444:12467	6154138	0	True				
ANR	6154142	IdentifierDecl	req = { 0 }		6154138	0					
ANR	6154143	IdentifierDeclType	kd_req_t		6154138	0					
ANR	6154144	Identifier	req		6154138	1					
ANR	6154145	AssignmentExpression	req = { 0 }		6154138	2		=			
ANR	6154146	Identifier	req		6154138	0					
ANR	6154147	InitializerList	0		6154138	1					
ANR	6154148	PrimaryExpression	0		6154138	0					
ANR	6154149	IdentifierDeclStatement	kd_packet_t * pkt ;	552:1:12470:12486	6154138	1	True				
ANR	6154150	IdentifierDecl	* pkt		6154138	0					
ANR	6154151	IdentifierDeclType	kd_packet_t *		6154138	0					
ANR	6154152	Identifier	pkt		6154138	1					
ANR	6154153	IdentifierDeclStatement	int ret ;	553:1:12489:12496	6154138	2	True				
ANR	6154154	IdentifierDecl	ret		6154138	0					
ANR	6154155	IdentifierDeclType	int		6154138	0					
ANR	6154156	Identifier	ret		6154138	1					
ANR	6154157	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6154138	3					
ANR	6154158	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	555:5:12504:12538	6154138	0	True				
ANR	6154159	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6154138	0		||			
ANR	6154160	UnaryOperationExpression	! ctx		6154138	0					
ANR	6154161	UnaryOperator	!		6154138	0					
ANR	6154162	Identifier	ctx		6154138	1					
ANR	6154163	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6154138	1		||			
ANR	6154164	UnaryOperationExpression	! ctx -> io_ptr		6154138	0					
ANR	6154165	UnaryOperator	!		6154138	0					
ANR	6154166	PtrMemberAccess	ctx -> io_ptr		6154138	1					
ANR	6154167	Identifier	ctx		6154138	0					
ANR	6154168	Identifier	io_ptr		6154138	1					
ANR	6154169	UnaryOperationExpression	! ctx -> syncd		6154138	1					
ANR	6154170	UnaryOperator	!		6154138	0					
ANR	6154171	PtrMemberAccess	ctx -> syncd		6154138	1					
ANR	6154172	Identifier	ctx		6154138	0					
ANR	6154173	Identifier	syncd		6154138	1					
ANR	6154174	CompoundStatement		8:42:99:99	6154138	1					
ANR	6154175	ReturnStatement	return false ;	556:2:12545:12557	6154138	0	True				
ANR	6154176	Identifier	false		6154138	0					
ANR	6154177	ExpressionStatement	req . req = 0x3146	559:1:12564:12580	6154138	4	True				
ANR	6154178	AssignmentExpression	req . req = 0x3146		6154138	0		=			
ANR	6154179	MemberAccess	req . req		6154138	0					
ANR	6154180	Identifier	req		6154138	0					
ANR	6154181	Identifier	req		6154138	1					
ANR	6154182	PrimaryExpression	0x3146		6154138	1					
ANR	6154183	ExpressionStatement	req . cpu = ctx -> cpu	560:1:12583:12601	6154138	5	True				
ANR	6154184	AssignmentExpression	req . cpu = ctx -> cpu		6154138	0		=			
ANR	6154185	MemberAccess	req . cpu		6154138	0					
ANR	6154186	Identifier	req		6154138	0					
ANR	6154187	Identifier	cpu		6154138	1					
ANR	6154188	PtrMemberAccess	ctx -> cpu		6154138	1					
ANR	6154189	Identifier	ctx		6154138	0					
ANR	6154190	Identifier	cpu		6154138	1					
ANR	6154191	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	562:1:12605:12744	6154138	6	True				
ANR	6154192	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6154138	0		=			
ANR	6154193	Identifier	ret		6154138	0					
ANR	6154194	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6154138	1					
ANR	6154195	Callee	kd_send_data_packet		6154138	0					
ANR	6154196	Identifier	kd_send_data_packet		6154138	0					
ANR	6154197	ArgumentList	ctx -> io_ptr		6154138	1					
ANR	6154198	Argument	ctx -> io_ptr		6154138	0					
ANR	6154199	PtrMemberAccess	ctx -> io_ptr		6154138	0					
ANR	6154200	Identifier	ctx		6154138	0					
ANR	6154201	Identifier	io_ptr		6154138	1					
ANR	6154202	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6154138	1					
ANR	6154203	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6154138	0					
ANR	6154204	Argument	ctx -> seq_id ^= 1		6154138	2					
ANR	6154205	AssignmentExpression	ctx -> seq_id ^= 1		6154138	0		^=			
ANR	6154206	PtrMemberAccess	ctx -> seq_id		6154138	0					
ANR	6154207	Identifier	ctx		6154138	0					
ANR	6154208	Identifier	seq_id		6154138	1					
ANR	6154209	PrimaryExpression	1		6154138	1					
ANR	6154210	Argument	( uint8_t * ) & req		6154138	3					
ANR	6154211	CastExpression	( uint8_t * ) & req		6154138	0					
ANR	6154212	CastTarget	uint8_t *		6154138	0					
ANR	6154213	UnaryOperationExpression	& req		6154138	1					
ANR	6154214	UnaryOperator	&		6154138	0					
ANR	6154215	Identifier	req		6154138	1					
ANR	6154216	Argument	sizeof ( kd_req_t )		6154138	4					
ANR	6154217	SizeofExpression	sizeof ( kd_req_t )		6154138	0					
ANR	6154218	Sizeof	sizeof		6154138	0					
ANR	6154219	SizeofOperand	kd_req_t		6154138	1					
ANR	6154220	Argument	NULL		6154138	5					
ANR	6154221	Identifier	NULL		6154138	0					
ANR	6154222	Argument	0		6154138	6					
ANR	6154223	PrimaryExpression	0		6154138	0					
ANR	6154224	IfStatement	if ( ret != KD_E_OK )		6154138	7					
ANR	6154225	Condition	ret != KD_E_OK	564:5:12751:12764	6154138	0	True				
ANR	6154226	EqualityExpression	ret != KD_E_OK		6154138	0		!=			
ANR	6154227	Identifier	ret		6154138	0					
ANR	6154228	Identifier	KD_E_OK		6154138	1					
ANR	6154229	CompoundStatement		17:21:325:325	6154138	1					
ANR	6154230	ReturnStatement	return 0 ;	565:2:12771:12779	6154138	0	True				
ANR	6154231	PrimaryExpression	0		6154138	0					
ANR	6154232	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	568:1:12786:12850	6154138	8	True				
ANR	6154233	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6154138	0		=			
ANR	6154234	Identifier	ret		6154138	0					
ANR	6154235	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6154138	1					
ANR	6154236	Callee	windbg_wait_packet		6154138	0					
ANR	6154237	Identifier	windbg_wait_packet		6154138	0					
ANR	6154238	ArgumentList	ctx		6154138	1					
ANR	6154239	Argument	ctx		6154138	0					
ANR	6154240	Identifier	ctx		6154138	0					
ANR	6154241	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6154138	1					
ANR	6154242	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6154138	0					
ANR	6154243	Argument	NULL		6154138	2					
ANR	6154244	Identifier	NULL		6154138	0					
ANR	6154245	IfStatement	if ( ret != KD_E_OK )		6154138	9					
ANR	6154246	Condition	ret != KD_E_OK	569:5:12857:12870	6154138	0	True				
ANR	6154247	EqualityExpression	ret != KD_E_OK		6154138	0		!=			
ANR	6154248	Identifier	ret		6154138	0					
ANR	6154249	Identifier	KD_E_OK		6154138	1					
ANR	6154250	CompoundStatement		22:21:431:431	6154138	1					
ANR	6154251	ReturnStatement	return 0 ;	570:2:12877:12885	6154138	0	True				
ANR	6154252	PrimaryExpression	0		6154138	0					
ANR	6154253	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	573:1:12892:12961	6154138	10	True				
ANR	6154254	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6154138	0		=			
ANR	6154255	Identifier	ret		6154138	0					
ANR	6154256	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6154138	1					
ANR	6154257	Callee	windbg_wait_packet		6154138	0					
ANR	6154258	Identifier	windbg_wait_packet		6154138	0					
ANR	6154259	ArgumentList	ctx		6154138	1					
ANR	6154260	Argument	ctx		6154138	0					
ANR	6154261	Identifier	ctx		6154138	0					
ANR	6154262	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6154138	1					
ANR	6154263	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6154138	0					
ANR	6154264	Argument	& pkt		6154138	2					
ANR	6154265	UnaryOperationExpression	& pkt		6154138	0					
ANR	6154266	UnaryOperator	&		6154138	0					
ANR	6154267	Identifier	pkt		6154138	1					
ANR	6154268	IfStatement	if ( ret != KD_E_OK )		6154138	11					
ANR	6154269	Condition	ret != KD_E_OK	574:5:12968:12981	6154138	0	True				
ANR	6154270	EqualityExpression	ret != KD_E_OK		6154138	0		!=			
ANR	6154271	Identifier	ret		6154138	0					
ANR	6154272	Identifier	KD_E_OK		6154138	1					
ANR	6154273	CompoundStatement		27:21:542:542	6154138	1					
ANR	6154274	ReturnStatement	return 0 ;	575:2:12988:12996	6154138	0	True				
ANR	6154275	PrimaryExpression	0		6154138	0					
ANR	6154276	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	578:1:13003:13031	6154138	12	True				
ANR	6154277	IdentifierDecl	* rr = PKT_REQ ( pkt )		6154138	0					
ANR	6154278	IdentifierDeclType	kd_req_t *		6154138	0					
ANR	6154279	Identifier	rr		6154138	1					
ANR	6154280	AssignmentExpression	* rr = PKT_REQ ( pkt )		6154138	2		=			
ANR	6154281	Identifier	rr		6154138	0					
ANR	6154282	CallExpression	PKT_REQ ( pkt )		6154138	1					
ANR	6154283	Callee	PKT_REQ		6154138	0					
ANR	6154284	Identifier	PKT_REQ		6154138	0					
ANR	6154285	ArgumentList	pkt		6154138	1					
ANR	6154286	Argument	pkt		6154138	0					
ANR	6154287	Identifier	pkt		6154138	0					
ANR	6154288	IfStatement	if ( rr -> ret )		6154138	13					
ANR	6154289	Condition	rr -> ret	580:5:13039:13045	6154138	0	True				
ANR	6154290	PtrMemberAccess	rr -> ret		6154138	0					
ANR	6154291	Identifier	rr		6154138	0					
ANR	6154292	Identifier	ret		6154138	1					
ANR	6154293	CompoundStatement		34:2:610:677	6154138	1					
ANR	6154294	IdentifierDeclStatement	"WIND_DBG eprintf ( ""%s : req returned %08x\\n"" , __FUNCTION__ , rr -> ret ) ;"	581:2:13052:13119	6154138	0	True				
ANR	6154295	IdentifierDecl	"eprintf ( ""%s : req returned %08x\\n"" , __FUNCTION__ , rr -> ret )"		6154138	0					
ANR	6154296	IdentifierDeclType	WIND_DBG		6154138	0					
ANR	6154297	Identifier	eprintf		6154138	1					
ANR	6154298	Expression	"""%s : req returned %08x\\n"" , __FUNCTION__ , rr -> ret"		6154138	2					
ANR	6154299	PrimaryExpression	"""%s : req returned %08x\\n"""		6154138	0					
ANR	6154300	Expression	"__FUNCTION__ , rr -> ret"		6154138	1					
ANR	6154301	Identifier	__FUNCTION__		6154138	0					
ANR	6154302	PtrMemberAccess	rr -> ret		6154138	1					
ANR	6154303	Identifier	rr		6154138	0					
ANR	6154304	Identifier	ret		6154138	1					
ANR	6154305	ExpressionStatement	free ( pkt )	582:2:13123:13133	6154138	1	True				
ANR	6154306	CallExpression	free ( pkt )		6154138	0					
ANR	6154307	Callee	free		6154138	0					
ANR	6154308	Identifier	free		6154138	0					
ANR	6154309	ArgumentList	pkt		6154138	1					
ANR	6154310	Argument	pkt		6154138	0					
ANR	6154311	Identifier	pkt		6154138	0					
ANR	6154312	ReturnStatement	return 0 ;	583:2:13137:13145	6154138	2	True				
ANR	6154313	PrimaryExpression	0		6154138	0					
ANR	6154314	Statement	WIND_DBG	586:1:13152:13159	6154138	14	True				
ANR	6154315	CompoundStatement		39:10:719:719	6154138	15					
ANR	6154316	ExpressionStatement	"eprintf ( ""Major : %i Minor %i\\n"" , rr -> r_ver . major , rr -> r_ver . minor )"	587:2:13165:13232	6154138	0	True				
ANR	6154317	CallExpression	"eprintf ( ""Major : %i Minor %i\\n"" , rr -> r_ver . major , rr -> r_ver . minor )"		6154138	0					
ANR	6154318	Callee	eprintf		6154138	0					
ANR	6154319	Identifier	eprintf		6154138	0					
ANR	6154320	ArgumentList	"""Major : %i Minor %i\\n"""		6154138	1					
ANR	6154321	Argument	"""Major : %i Minor %i\\n"""		6154138	0					
ANR	6154322	PrimaryExpression	"""Major : %i Minor %i\\n"""		6154138	0					
ANR	6154323	Argument	rr -> r_ver . major		6154138	1					
ANR	6154324	MemberAccess	rr -> r_ver . major		6154138	0					
ANR	6154325	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154326	Identifier	rr		6154138	0					
ANR	6154327	Identifier	r_ver		6154138	1					
ANR	6154328	Identifier	major		6154138	1					
ANR	6154329	Argument	rr -> r_ver . minor		6154138	2					
ANR	6154330	MemberAccess	rr -> r_ver . minor		6154138	0					
ANR	6154331	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154332	Identifier	rr		6154138	0					
ANR	6154333	Identifier	r_ver		6154138	1					
ANR	6154334	Identifier	minor		6154138	1					
ANR	6154335	ExpressionStatement	"eprintf ( ""Protocol version : %i.%i\\n"" , rr -> r_ver . proto_major , rr -> r_ver . proto_minor )"	588:2:13236:13320	6154138	1	True				
ANR	6154336	CallExpression	"eprintf ( ""Protocol version : %i.%i\\n"" , rr -> r_ver . proto_major , rr -> r_ver . proto_minor )"		6154138	0					
ANR	6154337	Callee	eprintf		6154138	0					
ANR	6154338	Identifier	eprintf		6154138	0					
ANR	6154339	ArgumentList	"""Protocol version : %i.%i\\n"""		6154138	1					
ANR	6154340	Argument	"""Protocol version : %i.%i\\n"""		6154138	0					
ANR	6154341	PrimaryExpression	"""Protocol version : %i.%i\\n"""		6154138	0					
ANR	6154342	Argument	rr -> r_ver . proto_major		6154138	1					
ANR	6154343	MemberAccess	rr -> r_ver . proto_major		6154138	0					
ANR	6154344	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154345	Identifier	rr		6154138	0					
ANR	6154346	Identifier	r_ver		6154138	1					
ANR	6154347	Identifier	proto_major		6154138	1					
ANR	6154348	Argument	rr -> r_ver . proto_minor		6154138	2					
ANR	6154349	MemberAccess	rr -> r_ver . proto_minor		6154138	0					
ANR	6154350	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154351	Identifier	rr		6154138	0					
ANR	6154352	Identifier	r_ver		6154138	1					
ANR	6154353	Identifier	proto_minor		6154138	1					
ANR	6154354	ExpressionStatement	"eprintf ( ""Flags : %08x\\n"" , rr -> r_ver . flags )"	589:2:13324:13367	6154138	2	True				
ANR	6154355	CallExpression	"eprintf ( ""Flags : %08x\\n"" , rr -> r_ver . flags )"		6154138	0					
ANR	6154356	Callee	eprintf		6154138	0					
ANR	6154357	Identifier	eprintf		6154138	0					
ANR	6154358	ArgumentList	"""Flags : %08x\\n"""		6154138	1					
ANR	6154359	Argument	"""Flags : %08x\\n"""		6154138	0					
ANR	6154360	PrimaryExpression	"""Flags : %08x\\n"""		6154138	0					
ANR	6154361	Argument	rr -> r_ver . flags		6154138	1					
ANR	6154362	MemberAccess	rr -> r_ver . flags		6154138	0					
ANR	6154363	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154364	Identifier	rr		6154138	0					
ANR	6154365	Identifier	r_ver		6154138	1					
ANR	6154366	Identifier	flags		6154138	1					
ANR	6154367	ExpressionStatement	"eprintf ( ""Machine : %08x\\n"" , rr -> r_ver . machine )"	590:2:13371:13418	6154138	3	True				
ANR	6154368	CallExpression	"eprintf ( ""Machine : %08x\\n"" , rr -> r_ver . machine )"		6154138	0					
ANR	6154369	Callee	eprintf		6154138	0					
ANR	6154370	Identifier	eprintf		6154138	0					
ANR	6154371	ArgumentList	"""Machine : %08x\\n"""		6154138	1					
ANR	6154372	Argument	"""Machine : %08x\\n"""		6154138	0					
ANR	6154373	PrimaryExpression	"""Machine : %08x\\n"""		6154138	0					
ANR	6154374	Argument	rr -> r_ver . machine		6154138	1					
ANR	6154375	MemberAccess	rr -> r_ver . machine		6154138	0					
ANR	6154376	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154377	Identifier	rr		6154138	0					
ANR	6154378	Identifier	r_ver		6154138	1					
ANR	6154379	Identifier	machine		6154138	1					
ANR	6154380	Statement	eprintf	591:2:13422:13428	6154138	4	True				
ANR	6154381	Statement	(	591:10:13430:13430	6154138	5	True				
ANR	6154382	Statement	"""Module list : %016"""	591:11:13431:13450	6154138	6	True				
ANR	6154383	Statement	PFMT64x	591:31:13451:13457	6154138	7	True				
ANR	6154384	Statement	"""\\n"""	591:39:13459:13462	6154138	8	True				
ANR	6154385	Statement	","	591:43:13463:13463	6154138	9	True				
ANR	6154386	Statement	(	591:45:13465:13465	6154138	10	True				
ANR	6154387	Statement	ut64	591:46:13466:13469	6154138	11	True				
ANR	6154388	Statement	)	591:50:13470:13470	6154138	12	True				
ANR	6154389	Statement	rr	591:52:13472:13473	6154138	13	True				
ANR	6154390	Statement	->	591:54:13474:13475	6154138	14	True				
ANR	6154391	Statement	r_ver	591:56:13476:13480	6154138	15	True				
ANR	6154392	Statement	.	591:61:13481:13481	6154138	16	True				
ANR	6154393	Statement	mod_addr	591:62:13482:13489	6154138	17	True				
ANR	6154394	Statement	)	591:70:13490:13490	6154138	18	True				
ANR	6154395	ExpressionStatement		591:71:13491:13491	6154138	19	True				
ANR	6154396	Statement	eprintf	592:2:13495:13501	6154138	20	True				
ANR	6154397	Statement	(	592:10:13503:13503	6154138	21	True				
ANR	6154398	Statement	"""Debug block : %016"""	592:11:13504:13523	6154138	22	True				
ANR	6154399	Statement	PFMT64x	592:31:13524:13530	6154138	23	True				
ANR	6154400	Statement	"""\\n"""	592:39:13532:13535	6154138	24	True				
ANR	6154401	Statement	","	592:43:13536:13536	6154138	25	True				
ANR	6154402	Statement	(	592:45:13538:13538	6154138	26	True				
ANR	6154403	Statement	ut64	592:46:13539:13542	6154138	27	True				
ANR	6154404	Statement	)	592:50:13543:13543	6154138	28	True				
ANR	6154405	Statement	rr	592:52:13545:13546	6154138	29	True				
ANR	6154406	Statement	->	592:54:13547:13548	6154138	30	True				
ANR	6154407	Statement	r_ver	592:56:13549:13553	6154138	31	True				
ANR	6154408	Statement	.	592:61:13554:13554	6154138	32	True				
ANR	6154409	Statement	dbg_addr	592:62:13555:13562	6154138	33	True				
ANR	6154410	Statement	)	592:70:13563:13563	6154138	34	True				
ANR	6154411	ExpressionStatement		592:71:13564:13564	6154138	35	True				
ANR	6154412	IfStatement	if ( rr -> r_ver . machine != KD_MACH_I386 && rr -> r_ver . machine != KD_MACH_AMD64 )		6154138	16					
ANR	6154413	Condition	rr -> r_ver . machine != KD_MACH_I386 && rr -> r_ver . machine != KD_MACH_AMD64	595:5:13575:13645	6154138	0	True				
ANR	6154414	AndExpression	rr -> r_ver . machine != KD_MACH_I386 && rr -> r_ver . machine != KD_MACH_AMD64		6154138	0		&&			
ANR	6154415	EqualityExpression	rr -> r_ver . machine != KD_MACH_I386		6154138	0		!=			
ANR	6154416	MemberAccess	rr -> r_ver . machine		6154138	0					
ANR	6154417	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154418	Identifier	rr		6154138	0					
ANR	6154419	Identifier	r_ver		6154138	1					
ANR	6154420	Identifier	machine		6154138	1					
ANR	6154421	Identifier	KD_MACH_I386		6154138	1					
ANR	6154422	EqualityExpression	rr -> r_ver . machine != KD_MACH_AMD64		6154138	1		!=			
ANR	6154423	MemberAccess	rr -> r_ver . machine		6154138	0					
ANR	6154424	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154425	Identifier	rr		6154138	0					
ANR	6154426	Identifier	r_ver		6154138	1					
ANR	6154427	Identifier	machine		6154138	1					
ANR	6154428	Identifier	KD_MACH_AMD64		6154138	1					
ANR	6154429	CompoundStatement		48:78:1206:1206	6154138	1					
ANR	6154430	ExpressionStatement	"eprintf ( ""Unsupported target host\\n"" )"	596:2:13652:13689	6154138	0	True				
ANR	6154431	CallExpression	"eprintf ( ""Unsupported target host\\n"" )"		6154138	0					
ANR	6154432	Callee	eprintf		6154138	0					
ANR	6154433	Identifier	eprintf		6154138	0					
ANR	6154434	ArgumentList	"""Unsupported target host\\n"""		6154138	1					
ANR	6154435	Argument	"""Unsupported target host\\n"""		6154138	0					
ANR	6154436	PrimaryExpression	"""Unsupported target host\\n"""		6154138	0					
ANR	6154437	ExpressionStatement	free ( pkt )	597:2:13693:13703	6154138	1	True				
ANR	6154438	CallExpression	free ( pkt )		6154138	0					
ANR	6154439	Callee	free		6154138	0					
ANR	6154440	Identifier	free		6154138	0					
ANR	6154441	ArgumentList	pkt		6154138	1					
ANR	6154442	Argument	pkt		6154138	0					
ANR	6154443	Identifier	pkt		6154138	0					
ANR	6154444	ReturnStatement	return 0 ;	598:2:13707:13715	6154138	2	True				
ANR	6154445	PrimaryExpression	0		6154138	0					
ANR	6154446	IfStatement	if ( ! ( rr -> r_ver . flags & DBGKD_VERS_FLAG_DATA ) )		6154138	17					
ANR	6154447	Condition	! ( rr -> r_ver . flags & DBGKD_VERS_FLAG_DATA )	601:5:13726:13766	6154138	0	True				
ANR	6154448	UnaryOperationExpression	! ( rr -> r_ver . flags & DBGKD_VERS_FLAG_DATA )		6154138	0					
ANR	6154449	UnaryOperator	!		6154138	0					
ANR	6154450	BitAndExpression	rr -> r_ver . flags & DBGKD_VERS_FLAG_DATA		6154138	1		&			
ANR	6154451	MemberAccess	rr -> r_ver . flags		6154138	0					
ANR	6154452	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154453	Identifier	rr		6154138	0					
ANR	6154454	Identifier	r_ver		6154138	1					
ANR	6154455	Identifier	flags		6154138	1					
ANR	6154456	Identifier	DBGKD_VERS_FLAG_DATA		6154138	1					
ANR	6154457	CompoundStatement		54:48:1327:1327	6154138	1					
ANR	6154458	ExpressionStatement	"eprintf ( ""No _KDDEBUGGER_DATA64 pointer has been supplied by the debugee!\\n"" )"	602:2:13773:13850	6154138	0	True				
ANR	6154459	CallExpression	"eprintf ( ""No _KDDEBUGGER_DATA64 pointer has been supplied by the debugee!\\n"" )"		6154138	0					
ANR	6154460	Callee	eprintf		6154138	0					
ANR	6154461	Identifier	eprintf		6154138	0					
ANR	6154462	ArgumentList	"""No _KDDEBUGGER_DATA64 pointer has been supplied by the debugee!\\n"""		6154138	1					
ANR	6154463	Argument	"""No _KDDEBUGGER_DATA64 pointer has been supplied by the debugee!\\n"""		6154138	0					
ANR	6154464	PrimaryExpression	"""No _KDDEBUGGER_DATA64 pointer has been supplied by the debugee!\\n"""		6154138	0					
ANR	6154465	ExpressionStatement	free ( pkt )	603:2:13854:13864	6154138	1	True				
ANR	6154466	CallExpression	free ( pkt )		6154138	0					
ANR	6154467	Callee	free		6154138	0					
ANR	6154468	Identifier	free		6154138	0					
ANR	6154469	ArgumentList	pkt		6154138	1					
ANR	6154470	Argument	pkt		6154138	0					
ANR	6154471	Identifier	pkt		6154138	0					
ANR	6154472	ReturnStatement	return 0 ;	604:2:13868:13876	6154138	2	True				
ANR	6154473	PrimaryExpression	0		6154138	0					
ANR	6154474	ExpressionStatement	ctx -> is_x64 = ( rr -> r_ver . machine == KD_MACH_AMD64 )	607:1:13883:13933	6154138	18	True				
ANR	6154475	AssignmentExpression	ctx -> is_x64 = ( rr -> r_ver . machine == KD_MACH_AMD64 )		6154138	0		=			
ANR	6154476	PtrMemberAccess	ctx -> is_x64		6154138	0					
ANR	6154477	Identifier	ctx		6154138	0					
ANR	6154478	Identifier	is_x64		6154138	1					
ANR	6154479	EqualityExpression	rr -> r_ver . machine == KD_MACH_AMD64		6154138	1		==			
ANR	6154480	MemberAccess	rr -> r_ver . machine		6154138	0					
ANR	6154481	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154482	Identifier	rr		6154138	0					
ANR	6154483	Identifier	r_ver		6154138	1					
ANR	6154484	Identifier	machine		6154138	1					
ANR	6154485	Identifier	KD_MACH_AMD64		6154138	1					
ANR	6154486	IdentifierDeclStatement	ut64 ptr = 0 ;	609:1:13937:13949	6154138	19	True				
ANR	6154487	IdentifierDecl	ptr = 0		6154138	0					
ANR	6154488	IdentifierDeclType	ut64		6154138	0					
ANR	6154489	Identifier	ptr		6154138	1					
ANR	6154490	AssignmentExpression	ptr = 0		6154138	2		=			
ANR	6154491	Identifier	ptr		6154138	0					
ANR	6154492	PrimaryExpression	0		6154138	1					
ANR	6154493	IfStatement	"if ( ! windbg_read_at ( ctx , ( uint8_t * ) & ptr , rr -> r_ver . dbg_addr , 4 << ctx -> is_x64 ) )"		6154138	20					
ANR	6154494	Condition	"! windbg_read_at ( ctx , ( uint8_t * ) & ptr , rr -> r_ver . dbg_addr , 4 << ctx -> is_x64 )"	610:5:13956:14032	6154138	0	True				
ANR	6154495	UnaryOperationExpression	"! windbg_read_at ( ctx , ( uint8_t * ) & ptr , rr -> r_ver . dbg_addr , 4 << ctx -> is_x64 )"		6154138	0					
ANR	6154496	UnaryOperator	!		6154138	0					
ANR	6154497	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , rr -> r_ver . dbg_addr , 4 << ctx -> is_x64 )"		6154138	1					
ANR	6154498	Callee	windbg_read_at		6154138	0					
ANR	6154499	Identifier	windbg_read_at		6154138	0					
ANR	6154500	ArgumentList	ctx		6154138	1					
ANR	6154501	Argument	ctx		6154138	0					
ANR	6154502	Identifier	ctx		6154138	0					
ANR	6154503	Argument	( uint8_t * ) & ptr		6154138	1					
ANR	6154504	CastExpression	( uint8_t * ) & ptr		6154138	0					
ANR	6154505	CastTarget	uint8_t *		6154138	0					
ANR	6154506	UnaryOperationExpression	& ptr		6154138	1					
ANR	6154507	UnaryOperator	&		6154138	0					
ANR	6154508	Identifier	ptr		6154138	1					
ANR	6154509	Argument	rr -> r_ver . dbg_addr		6154138	2					
ANR	6154510	MemberAccess	rr -> r_ver . dbg_addr		6154138	0					
ANR	6154511	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154512	Identifier	rr		6154138	0					
ANR	6154513	Identifier	r_ver		6154138	1					
ANR	6154514	Identifier	dbg_addr		6154138	1					
ANR	6154515	Argument	4 << ctx -> is_x64		6154138	3					
ANR	6154516	ShiftExpression	4 << ctx -> is_x64		6154138	0		<<			
ANR	6154517	PrimaryExpression	4		6154138	0					
ANR	6154518	PtrMemberAccess	ctx -> is_x64		6154138	1					
ANR	6154519	Identifier	ctx		6154138	0					
ANR	6154520	Identifier	is_x64		6154138	1					
ANR	6154521	CompoundStatement		63:84:1593:1593	6154138	1					
ANR	6154522	ExpressionStatement	free ( pkt )	611:2:14039:14049	6154138	0	True				
ANR	6154523	CallExpression	free ( pkt )		6154138	0					
ANR	6154524	Callee	free		6154138	0					
ANR	6154525	Identifier	free		6154138	0					
ANR	6154526	ArgumentList	pkt		6154138	1					
ANR	6154527	Argument	pkt		6154138	0					
ANR	6154528	Identifier	pkt		6154138	0					
ANR	6154529	ReturnStatement	return false ;	612:2:14053:14065	6154138	1	True				
ANR	6154530	Identifier	false		6154138	0					
ANR	6154531	ExpressionStatement	ctx -> dbg_addr = ptr	615:1:14072:14091	6154138	21	True				
ANR	6154532	AssignmentExpression	ctx -> dbg_addr = ptr		6154138	0		=			
ANR	6154533	PtrMemberAccess	ctx -> dbg_addr		6154138	0					
ANR	6154534	Identifier	ctx		6154138	0					
ANR	6154535	Identifier	dbg_addr		6154138	1					
ANR	6154536	Identifier	ptr		6154138	1					
ANR	6154537	Statement	WIND_DBG	617:1:14095:14102	6154138	22	True				
ANR	6154538	Statement	eprintf	617:10:14104:14110	6154138	23	True				
ANR	6154539	Statement	(	617:17:14111:14111	6154138	24	True				
ANR	6154540	Statement	"""_KDDEBUGGER_DATA64 at 0x%016"""	617:18:14112:14141	6154138	25	True				
ANR	6154541	Statement	PFMT64x	617:48:14142:14148	6154138	26	True				
ANR	6154542	Statement	"""\\n"""	617:56:14150:14153	6154138	27	True				
ANR	6154543	Statement	","	617:60:14154:14154	6154138	28	True				
ANR	6154544	Statement	ctx	617:62:14156:14158	6154138	29	True				
ANR	6154545	Statement	->	617:65:14159:14160	6154138	30	True				
ANR	6154546	Statement	dbg_addr	617:67:14161:14168	6154138	31	True				
ANR	6154547	Statement	)	617:75:14169:14169	6154138	32	True				
ANR	6154548	ExpressionStatement		617:76:14170:14170	6154138	33	True				
ANR	6154549	IdentifierDeclStatement	uint16_t pae_enabled ;	620:1:14237:14257	6154138	34	True				
ANR	6154550	IdentifierDecl	pae_enabled		6154138	0					
ANR	6154551	IdentifierDeclType	uint16_t		6154138	0					
ANR	6154552	Identifier	pae_enabled		6154138	1					
ANR	6154553	IfStatement	"if ( ! windbg_read_at ( ctx , ( uint8_t * ) & pae_enabled , ctx -> dbg_addr + K_PaeEnabled , sizeof ( uint16_t ) ) )"		6154138	35					
ANR	6154554	Condition	"! windbg_read_at ( ctx , ( uint8_t * ) & pae_enabled , ctx -> dbg_addr + K_PaeEnabled , sizeof ( uint16_t ) )"	621:5:14264:14358	6154138	0	True				
ANR	6154555	UnaryOperationExpression	"! windbg_read_at ( ctx , ( uint8_t * ) & pae_enabled , ctx -> dbg_addr + K_PaeEnabled , sizeof ( uint16_t ) )"		6154138	0					
ANR	6154556	UnaryOperator	!		6154138	0					
ANR	6154557	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & pae_enabled , ctx -> dbg_addr + K_PaeEnabled , sizeof ( uint16_t ) )"		6154138	1					
ANR	6154558	Callee	windbg_read_at		6154138	0					
ANR	6154559	Identifier	windbg_read_at		6154138	0					
ANR	6154560	ArgumentList	ctx		6154138	1					
ANR	6154561	Argument	ctx		6154138	0					
ANR	6154562	Identifier	ctx		6154138	0					
ANR	6154563	Argument	( uint8_t * ) & pae_enabled		6154138	1					
ANR	6154564	CastExpression	( uint8_t * ) & pae_enabled		6154138	0					
ANR	6154565	CastTarget	uint8_t *		6154138	0					
ANR	6154566	UnaryOperationExpression	& pae_enabled		6154138	1					
ANR	6154567	UnaryOperator	&		6154138	0					
ANR	6154568	Identifier	pae_enabled		6154138	1					
ANR	6154569	Argument	ctx -> dbg_addr + K_PaeEnabled		6154138	2					
ANR	6154570	AdditiveExpression	ctx -> dbg_addr + K_PaeEnabled		6154138	0		+			
ANR	6154571	PtrMemberAccess	ctx -> dbg_addr		6154138	0					
ANR	6154572	Identifier	ctx		6154138	0					
ANR	6154573	Identifier	dbg_addr		6154138	1					
ANR	6154574	Identifier	K_PaeEnabled		6154138	1					
ANR	6154575	Argument	sizeof ( uint16_t )		6154138	3					
ANR	6154576	SizeofExpression	sizeof ( uint16_t )		6154138	0					
ANR	6154577	Sizeof	sizeof		6154138	0					
ANR	6154578	SizeofOperand	uint16_t		6154138	1					
ANR	6154579	CompoundStatement		74:102:1919:1919	6154138	1					
ANR	6154580	ExpressionStatement	free ( pkt )	622:2:14365:14375	6154138	0	True				
ANR	6154581	CallExpression	free ( pkt )		6154138	0					
ANR	6154582	Callee	free		6154138	0					
ANR	6154583	Identifier	free		6154138	0					
ANR	6154584	ArgumentList	pkt		6154138	1					
ANR	6154585	Argument	pkt		6154138	0					
ANR	6154586	Identifier	pkt		6154138	0					
ANR	6154587	ReturnStatement	return false ;	623:2:14379:14391	6154138	1	True				
ANR	6154588	Identifier	false		6154138	0					
ANR	6154589	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ctx -> dbg_addr + K_CmNtCSDVersion , 8 )"	627:1:14467:14542	6154138	36	True				
ANR	6154590	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ctx -> dbg_addr + K_CmNtCSDVersion , 8 )"		6154138	0					
ANR	6154591	Callee	windbg_read_at		6154138	0					
ANR	6154592	Identifier	windbg_read_at		6154138	0					
ANR	6154593	ArgumentList	ctx		6154138	1					
ANR	6154594	Argument	ctx		6154138	0					
ANR	6154595	Identifier	ctx		6154138	0					
ANR	6154596	Argument	( uint8_t * ) & ptr		6154138	1					
ANR	6154597	CastExpression	( uint8_t * ) & ptr		6154138	0					
ANR	6154598	CastTarget	uint8_t *		6154138	0					
ANR	6154599	UnaryOperationExpression	& ptr		6154138	1					
ANR	6154600	UnaryOperator	&		6154138	0					
ANR	6154601	Identifier	ptr		6154138	1					
ANR	6154602	Argument	ctx -> dbg_addr + K_CmNtCSDVersion		6154138	2					
ANR	6154603	AdditiveExpression	ctx -> dbg_addr + K_CmNtCSDVersion		6154138	0		+			
ANR	6154604	PtrMemberAccess	ctx -> dbg_addr		6154138	0					
ANR	6154605	Identifier	ctx		6154138	0					
ANR	6154606	Identifier	dbg_addr		6154138	1					
ANR	6154607	Identifier	K_CmNtCSDVersion		6154138	1					
ANR	6154608	Argument	8		6154138	3					
ANR	6154609	PrimaryExpression	8		6154138	0					
ANR	6154610	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr , 4 << ctx -> is_x64 )"	628:1:14545:14606	6154138	37	True				
ANR	6154611	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr , 4 << ctx -> is_x64 )"		6154138	0					
ANR	6154612	Callee	windbg_read_at		6154138	0					
ANR	6154613	Identifier	windbg_read_at		6154138	0					
ANR	6154614	ArgumentList	ctx		6154138	1					
ANR	6154615	Argument	ctx		6154138	0					
ANR	6154616	Identifier	ctx		6154138	0					
ANR	6154617	Argument	( uint8_t * ) & ptr		6154138	1					
ANR	6154618	CastExpression	( uint8_t * ) & ptr		6154138	0					
ANR	6154619	CastTarget	uint8_t *		6154138	0					
ANR	6154620	UnaryOperationExpression	& ptr		6154138	1					
ANR	6154621	UnaryOperator	&		6154138	0					
ANR	6154622	Identifier	ptr		6154138	1					
ANR	6154623	Argument	ptr		6154138	2					
ANR	6154624	Identifier	ptr		6154138	0					
ANR	6154625	Argument	4 << ctx -> is_x64		6154138	3					
ANR	6154626	ShiftExpression	4 << ctx -> is_x64		6154138	0		<<			
ANR	6154627	PrimaryExpression	4		6154138	0					
ANR	6154628	PtrMemberAccess	ctx -> is_x64		6154138	1					
ANR	6154629	Identifier	ctx		6154138	0					
ANR	6154630	Identifier	is_x64		6154138	1					
ANR	6154631	ExpressionStatement	ctx -> pae = pae_enabled & 1	630:1:14610:14636	6154138	38	True				
ANR	6154632	AssignmentExpression	ctx -> pae = pae_enabled & 1		6154138	0		=			
ANR	6154633	PtrMemberAccess	ctx -> pae		6154138	0					
ANR	6154634	Identifier	ctx		6154138	0					
ANR	6154635	Identifier	pae		6154138	1					
ANR	6154636	BitAndExpression	pae_enabled & 1		6154138	1		&			
ANR	6154637	Identifier	pae_enabled		6154138	0					
ANR	6154638	PrimaryExpression	1		6154138	1					
ANR	6154639	ExpressionStatement	"ctx -> os_profile = windbg_get_profile ( 32 << ctx -> is_x64 , rr -> r_ver . minor , ( ptr >> 8 ) & 0xff )"	631:1:14639:14731	6154138	39	True				
ANR	6154640	AssignmentExpression	"ctx -> os_profile = windbg_get_profile ( 32 << ctx -> is_x64 , rr -> r_ver . minor , ( ptr >> 8 ) & 0xff )"		6154138	0		=			
ANR	6154641	PtrMemberAccess	ctx -> os_profile		6154138	0					
ANR	6154642	Identifier	ctx		6154138	0					
ANR	6154643	Identifier	os_profile		6154138	1					
ANR	6154644	CallExpression	"windbg_get_profile ( 32 << ctx -> is_x64 , rr -> r_ver . minor , ( ptr >> 8 ) & 0xff )"		6154138	1					
ANR	6154645	Callee	windbg_get_profile		6154138	0					
ANR	6154646	Identifier	windbg_get_profile		6154138	0					
ANR	6154647	ArgumentList	32 << ctx -> is_x64		6154138	1					
ANR	6154648	Argument	32 << ctx -> is_x64		6154138	0					
ANR	6154649	ShiftExpression	32 << ctx -> is_x64		6154138	0		<<			
ANR	6154650	PrimaryExpression	32		6154138	0					
ANR	6154651	PtrMemberAccess	ctx -> is_x64		6154138	1					
ANR	6154652	Identifier	ctx		6154138	0					
ANR	6154653	Identifier	is_x64		6154138	1					
ANR	6154654	Argument	rr -> r_ver . minor		6154138	1					
ANR	6154655	MemberAccess	rr -> r_ver . minor		6154138	0					
ANR	6154656	PtrMemberAccess	rr -> r_ver		6154138	0					
ANR	6154657	Identifier	rr		6154138	0					
ANR	6154658	Identifier	r_ver		6154138	1					
ANR	6154659	Identifier	minor		6154138	1					
ANR	6154660	Argument	( ptr >> 8 ) & 0xff		6154138	2					
ANR	6154661	BitAndExpression	( ptr >> 8 ) & 0xff		6154138	0		&			
ANR	6154662	ShiftExpression	ptr >> 8		6154138	0		>>			
ANR	6154663	Identifier	ptr		6154138	0					
ANR	6154664	PrimaryExpression	8		6154138	1					
ANR	6154665	PrimaryExpression	0xff		6154138	1					
ANR	6154666	IfStatement	if ( ! ctx -> os_profile )		6154138	40					
ANR	6154667	Condition	! ctx -> os_profile	632:5:14738:14753	6154138	0	True				
ANR	6154668	UnaryOperationExpression	! ctx -> os_profile		6154138	0					
ANR	6154669	UnaryOperator	!		6154138	0					
ANR	6154670	PtrMemberAccess	ctx -> os_profile		6154138	1					
ANR	6154671	Identifier	ctx		6154138	0					
ANR	6154672	Identifier	os_profile		6154138	1					
ANR	6154673	CompoundStatement		85:23:2314:2314	6154138	1					
ANR	6154674	ExpressionStatement	"eprintf ( ""Could not find a suitable profile for the target OS\\n"" )"	633:2:14760:14825	6154138	0	True				
ANR	6154675	CallExpression	"eprintf ( ""Could not find a suitable profile for the target OS\\n"" )"		6154138	0					
ANR	6154676	Callee	eprintf		6154138	0					
ANR	6154677	Identifier	eprintf		6154138	0					
ANR	6154678	ArgumentList	"""Could not find a suitable profile for the target OS\\n"""		6154138	1					
ANR	6154679	Argument	"""Could not find a suitable profile for the target OS\\n"""		6154138	0					
ANR	6154680	PrimaryExpression	"""Could not find a suitable profile for the target OS\\n"""		6154138	0					
ANR	6154681	ExpressionStatement	free ( pkt )	634:2:14829:14839	6154138	1	True				
ANR	6154682	CallExpression	free ( pkt )		6154138	0					
ANR	6154683	Callee	free		6154138	0					
ANR	6154684	Identifier	free		6154138	0					
ANR	6154685	ArgumentList	pkt		6154138	1					
ANR	6154686	Argument	pkt		6154138	0					
ANR	6154687	Identifier	pkt		6154138	0					
ANR	6154688	ReturnStatement	return false ;	635:2:14843:14855	6154138	2	True				
ANR	6154689	Identifier	false		6154138	0					
ANR	6154690	ExpressionStatement	free ( pkt )	637:1:14861:14871	6154138	41	True				
ANR	6154691	CallExpression	free ( pkt )		6154138	0					
ANR	6154692	Callee	free		6154138	0					
ANR	6154693	Identifier	free		6154138	0					
ANR	6154694	ArgumentList	pkt		6154138	1					
ANR	6154695	Argument	pkt		6154138	0					
ANR	6154696	Identifier	pkt		6154138	0					
ANR	6154697	ReturnStatement	return true ;	638:1:14874:14885	6154138	42	True				
ANR	6154698	Identifier	true		6154138	0					
ANR	6154699	ReturnType	bool		6154138	1					
ANR	6154700	Identifier	windbg_read_ver		6154138	2					
ANR	6154701	ParameterList	WindCtx * ctx		6154138	3					
ANR	6154702	Parameter	WindCtx * ctx	548:21:12427:12438	6154138	0	True				
ANR	6154703	ParameterType	WindCtx *		6154138	0					
ANR	6154704	Identifier	ctx		6154138	1					
ANR	6154705	CFGEntryNode	ENTRY		6154138		True				
ANR	6154706	CFGExitNode	EXIT		6154138		True				
ANR	6154707	Symbol	rr -> r_ver . proto_minor		6154138						
ANR	6154708	Symbol	& req		6154138						
ANR	6154709	Symbol	req . req		6154138						
ANR	6154710	Symbol	eprintf		6154138						
ANR	6154711	Symbol	windbg_read_at		6154138						
ANR	6154712	Symbol	req . cpu		6154138						
ANR	6154713	Symbol	pae_enabled		6154138						
ANR	6154714	Symbol	rr -> r_ver . proto_major		6154138						
ANR	6154715	Symbol	ctx -> dbg_addr		6154138						
ANR	6154716	Symbol	windbg_wait_packet		6154138						
ANR	6154717	Symbol	ctx -> syncd		6154138						
ANR	6154718	Symbol	req		6154138						
ANR	6154719	Symbol	ret		6154138						
ANR	6154720	Symbol	NULL		6154138						
ANR	6154721	Symbol	ctx -> is_x64		6154138						
ANR	6154722	Symbol	ctx		6154138						
ANR	6154723	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6154138						
ANR	6154724	Symbol	rr -> r_ver . major		6154138						
ANR	6154725	Symbol	rr -> r_ver . minor		6154138						
ANR	6154726	Symbol	ctx -> io_ptr		6154138						
ANR	6154727	Symbol	& pae_enabled		6154138						
ANR	6154728	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6154138						
ANR	6154729	Symbol	true		6154138						
ANR	6154730	Symbol	ctx -> pae		6154138						
ANR	6154731	Symbol	rr		6154138						
ANR	6154732	Symbol	PKT_REQ		6154138						
ANR	6154733	Symbol	windbg_get_profile		6154138						
ANR	6154734	Symbol	K_PaeEnabled		6154138						
ANR	6154735	Symbol	ctx -> os_profile		6154138						
ANR	6154736	Symbol	ctx -> cpu		6154138						
ANR	6154737	Symbol	& ptr		6154138						
ANR	6154738	Symbol	pkt		6154138						
ANR	6154739	Symbol	rr -> ret		6154138						
ANR	6154740	Symbol	rr -> r_ver . flags		6154138						
ANR	6154741	Symbol	rr -> r_ver . machine		6154138						
ANR	6154742	Symbol	KD_MACH_AMD64		6154138						
ANR	6154743	Symbol	rr -> r_ver . dbg_addr		6154138						
ANR	6154744	Symbol	KD_MACH_I386		6154138						
ANR	6154745	Symbol	kd_send_data_packet		6154138						
ANR	6154746	Symbol	KD_E_OK		6154138						
ANR	6154747	Symbol	* rr		6154138						
ANR	6154748	Symbol	false		6154138						
ANR	6154749	Symbol	K_CmNtCSDVersion		6154138						
ANR	6154750	Symbol	* ctx		6154138						
ANR	6154751	Symbol	ptr		6154138						
ANR	6154752	Symbol	ctx -> seq_id		6154138						
ANR	6154753	Symbol	& pkt		6154138						
ANR	6154754	Symbol	rr -> r_ver		6154138						
ANR	6154755	Symbol	DBGKD_VERS_FLAG_DATA		6154138						
ANR	6154756	Function	windbg_sync	641:0:14890:15948							
ANR	6154757	FunctionDef	windbg_sync (WindCtx * ctx)		6154756	0					
ANR	6154758	CompoundStatement		641:30:14920:15948	6154756	0					
ANR	6154759	IdentifierDeclStatement	int ret ;	642:1:14923:14930	6154756	0	True				
ANR	6154760	IdentifierDecl	ret		6154756	0					
ANR	6154761	IdentifierDeclType	int		6154756	0					
ANR	6154762	Identifier	ret		6154756	1					
ANR	6154763	IdentifierDeclStatement	kd_packet_t * s ;	643:1:14933:14947	6154756	1	True				
ANR	6154764	IdentifierDecl	* s		6154756	0					
ANR	6154765	IdentifierDeclType	kd_packet_t *		6154756	0					
ANR	6154766	Identifier	s		6154756	1					
ANR	6154767	IfStatement	if ( ! ctx || ! ctx -> io_ptr )		6154756	2					
ANR	6154768	Condition	! ctx || ! ctx -> io_ptr	645:5:14955:14974	6154756	0	True				
ANR	6154769	OrExpression	! ctx || ! ctx -> io_ptr		6154756	0		||			
ANR	6154770	UnaryOperationExpression	! ctx		6154756	0					
ANR	6154771	UnaryOperator	!		6154756	0					
ANR	6154772	Identifier	ctx		6154756	1					
ANR	6154773	UnaryOperationExpression	! ctx -> io_ptr		6154756	1					
ANR	6154774	UnaryOperator	!		6154756	0					
ANR	6154775	PtrMemberAccess	ctx -> io_ptr		6154756	1					
ANR	6154776	Identifier	ctx		6154756	0					
ANR	6154777	Identifier	io_ptr		6154756	1					
ANR	6154778	CompoundStatement		5:27:56:56	6154756	1					
ANR	6154779	ReturnStatement	return 0 ;	646:2:14981:14989	6154756	0	True				
ANR	6154780	PrimaryExpression	0		6154756	0					
ANR	6154781	IfStatement	if ( ctx -> syncd )		6154756	3					
ANR	6154782	Condition	ctx -> syncd	649:5:15000:15009	6154756	0	True				
ANR	6154783	PtrMemberAccess	ctx -> syncd		6154756	0					
ANR	6154784	Identifier	ctx		6154756	0					
ANR	6154785	Identifier	syncd		6154756	1					
ANR	6154786	CompoundStatement		9:17:91:91	6154756	1					
ANR	6154787	ReturnStatement	return 1 ;	650:2:15016:15024	6154756	0	True				
ANR	6154788	PrimaryExpression	1		6154756	0					
ANR	6154789	IfStatement	"if ( iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 ) != 1 )"		6154756	4					
ANR	6154790	Condition	"iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 ) != 1"	654:5:15063:15116	6154756	0	True				
ANR	6154791	EqualityExpression	"iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 ) != 1"		6154756	0		!=			
ANR	6154792	CallExpression	"iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 )"		6154756	0					
ANR	6154793	Callee	iob_write		6154756	0					
ANR	6154794	Identifier	iob_write		6154756	0					
ANR	6154795	ArgumentList	ctx -> io_ptr		6154756	1					
ANR	6154796	Argument	ctx -> io_ptr		6154756	0					
ANR	6154797	PtrMemberAccess	ctx -> io_ptr		6154756	0					
ANR	6154798	Identifier	ctx		6154756	0					
ANR	6154799	Identifier	io_ptr		6154756	1					
ANR	6154800	Argument	"( const uint8_t * ) ""b"""		6154756	1					
ANR	6154801	CastExpression	"( const uint8_t * ) ""b"""		6154756	0					
ANR	6154802	CastTarget	const uint8_t *		6154756	0					
ANR	6154803	PrimaryExpression	"""b"""		6154756	1					
ANR	6154804	Argument	1		6154756	2					
ANR	6154805	PrimaryExpression	1		6154756	0					
ANR	6154806	PrimaryExpression	1		6154756	1					
ANR	6154807	CompoundStatement		14:61:198:198	6154756	1					
ANR	6154808	ReturnStatement	return 0 ;	655:2:15123:15131	6154756	0	True				
ANR	6154809	PrimaryExpression	0		6154756	0					
ANR	6154810	ExpressionStatement	"ret = kd_send_ctrl_packet ( ctx -> io_ptr , KD_PACKET_TYPE_RESET , 0 )"	659:1:15157:15221	6154756	5	True				
ANR	6154811	AssignmentExpression	"ret = kd_send_ctrl_packet ( ctx -> io_ptr , KD_PACKET_TYPE_RESET , 0 )"		6154756	0		=			
ANR	6154812	Identifier	ret		6154756	0					
ANR	6154813	CallExpression	"kd_send_ctrl_packet ( ctx -> io_ptr , KD_PACKET_TYPE_RESET , 0 )"		6154756	1					
ANR	6154814	Callee	kd_send_ctrl_packet		6154756	0					
ANR	6154815	Identifier	kd_send_ctrl_packet		6154756	0					
ANR	6154816	ArgumentList	ctx -> io_ptr		6154756	1					
ANR	6154817	Argument	ctx -> io_ptr		6154756	0					
ANR	6154818	PtrMemberAccess	ctx -> io_ptr		6154756	0					
ANR	6154819	Identifier	ctx		6154756	0					
ANR	6154820	Identifier	io_ptr		6154756	1					
ANR	6154821	Argument	KD_PACKET_TYPE_RESET		6154756	1					
ANR	6154822	Identifier	KD_PACKET_TYPE_RESET		6154756	0					
ANR	6154823	Argument	0		6154756	2					
ANR	6154824	PrimaryExpression	0		6154756	0					
ANR	6154825	IfStatement	if ( ret != KD_E_OK )		6154756	6					
ANR	6154826	Condition	ret != KD_E_OK	660:5:15228:15241	6154756	0	True				
ANR	6154827	EqualityExpression	ret != KD_E_OK		6154756	0		!=			
ANR	6154828	Identifier	ret		6154756	0					
ANR	6154829	Identifier	KD_E_OK		6154756	1					
ANR	6154830	CompoundStatement		20:21:323:323	6154756	1					
ANR	6154831	ReturnStatement	return 0 ;	661:2:15248:15256	6154756	0	True				
ANR	6154832	PrimaryExpression	0		6154756	0					
ANR	6154833	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_RESET , NULL )"	665:1:15289:15347	6154756	7	True				
ANR	6154834	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_RESET , NULL )"		6154756	0		=			
ANR	6154835	Identifier	ret		6154756	0					
ANR	6154836	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_RESET , NULL )"		6154756	1					
ANR	6154837	Callee	windbg_wait_packet		6154756	0					
ANR	6154838	Identifier	windbg_wait_packet		6154756	0					
ANR	6154839	ArgumentList	ctx		6154756	1					
ANR	6154840	Argument	ctx		6154756	0					
ANR	6154841	Identifier	ctx		6154756	0					
ANR	6154842	Argument	KD_PACKET_TYPE_RESET		6154756	1					
ANR	6154843	Identifier	KD_PACKET_TYPE_RESET		6154756	0					
ANR	6154844	Argument	NULL		6154756	2					
ANR	6154845	Identifier	NULL		6154756	0					
ANR	6154846	IfStatement	if ( ret != KD_E_OK )		6154756	8					
ANR	6154847	Condition	ret != KD_E_OK	666:5:15354:15367	6154756	0	True				
ANR	6154848	EqualityExpression	ret != KD_E_OK		6154756	0		!=			
ANR	6154849	Identifier	ret		6154756	0					
ANR	6154850	Identifier	KD_E_OK		6154756	1					
ANR	6154851	CompoundStatement		26:21:449:449	6154756	1					
ANR	6154852	ReturnStatement	return 0 ;	667:2:15374:15382	6154756	0	True				
ANR	6154853	PrimaryExpression	0		6154756	0					
ANR	6154854	ExpressionStatement	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_CHANGE64 , & s )"	671:1:15456:15515	6154756	9	True				
ANR	6154855	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_CHANGE64 , & s )"		6154756	0					
ANR	6154856	Callee	windbg_wait_packet		6154756	0					
ANR	6154857	Identifier	windbg_wait_packet		6154756	0					
ANR	6154858	ArgumentList	ctx		6154756	1					
ANR	6154859	Argument	ctx		6154756	0					
ANR	6154860	Identifier	ctx		6154756	0					
ANR	6154861	Argument	KD_PACKET_TYPE_STATE_CHANGE64		6154756	1					
ANR	6154862	Identifier	KD_PACKET_TYPE_STATE_CHANGE64		6154756	0					
ANR	6154863	Argument	& s		6154756	2					
ANR	6154864	UnaryOperationExpression	& s		6154756	0					
ANR	6154865	UnaryOperator	&		6154756	0					
ANR	6154866	Identifier	s		6154756	1					
ANR	6154867	ExpressionStatement	ctx -> seq_id = 0x80800001	674:1:15545:15569	6154756	10	True				
ANR	6154868	AssignmentExpression	ctx -> seq_id = 0x80800001		6154756	0		=			
ANR	6154869	PtrMemberAccess	ctx -> seq_id		6154756	0					
ANR	6154870	Identifier	ctx		6154756	0					
ANR	6154871	Identifier	seq_id		6154756	1					
ANR	6154872	PrimaryExpression	0x80800001		6154756	1					
ANR	6154873	IdentifierDeclStatement	kd_stc_64 * stc64 = ( kd_stc_64 * ) s -> data ;	676:1:15573:15611	6154756	11	True				
ANR	6154874	IdentifierDecl	* stc64 = ( kd_stc_64 * ) s -> data		6154756	0					
ANR	6154875	IdentifierDeclType	kd_stc_64 *		6154756	0					
ANR	6154876	Identifier	stc64		6154756	1					
ANR	6154877	AssignmentExpression	* stc64 = ( kd_stc_64 * ) s -> data		6154756	2		=			
ANR	6154878	Identifier	stc64		6154756	0					
ANR	6154879	CastExpression	( kd_stc_64 * ) s -> data		6154756	1					
ANR	6154880	CastTarget	kd_stc_64 *		6154756	0					
ANR	6154881	PtrMemberAccess	s -> data		6154756	1					
ANR	6154882	Identifier	s		6154756	0					
ANR	6154883	Identifier	data		6154756	1					
ANR	6154884	ExpressionStatement	ctx -> cpu = stc64 -> cpu	677:1:15614:15635	6154756	12	True				
ANR	6154885	AssignmentExpression	ctx -> cpu = stc64 -> cpu		6154756	0		=			
ANR	6154886	PtrMemberAccess	ctx -> cpu		6154756	0					
ANR	6154887	Identifier	ctx		6154756	0					
ANR	6154888	Identifier	cpu		6154756	1					
ANR	6154889	PtrMemberAccess	stc64 -> cpu		6154756	1					
ANR	6154890	Identifier	stc64		6154756	0					
ANR	6154891	Identifier	cpu		6154756	1					
ANR	6154892	ExpressionStatement	ctx -> cpu_count = stc64 -> cpu_count	678:1:15638:15671	6154756	13	True				
ANR	6154893	AssignmentExpression	ctx -> cpu_count = stc64 -> cpu_count		6154756	0		=			
ANR	6154894	PtrMemberAccess	ctx -> cpu_count		6154756	0					
ANR	6154895	Identifier	ctx		6154756	0					
ANR	6154896	Identifier	cpu_count		6154756	1					
ANR	6154897	PtrMemberAccess	stc64 -> cpu_count		6154756	1					
ANR	6154898	Identifier	stc64		6154756	0					
ANR	6154899	Identifier	cpu_count		6154756	1					
ANR	6154900	ExpressionStatement	ctx -> target = NULL	679:1:15674:15692	6154756	14	True				
ANR	6154901	AssignmentExpression	ctx -> target = NULL		6154756	0		=			
ANR	6154902	PtrMemberAccess	ctx -> target		6154756	0					
ANR	6154903	Identifier	ctx		6154756	0					
ANR	6154904	Identifier	target		6154756	1					
ANR	6154905	Identifier	NULL		6154756	1					
ANR	6154906	ExpressionStatement	r_list_free ( ctx -> plist_cache )	680:1:15695:15725	6154756	15	True				
ANR	6154907	CallExpression	r_list_free ( ctx -> plist_cache )		6154756	0					
ANR	6154908	Callee	r_list_free		6154756	0					
ANR	6154909	Identifier	r_list_free		6154756	0					
ANR	6154910	ArgumentList	ctx -> plist_cache		6154756	1					
ANR	6154911	Argument	ctx -> plist_cache		6154756	0					
ANR	6154912	PtrMemberAccess	ctx -> plist_cache		6154756	0					
ANR	6154913	Identifier	ctx		6154756	0					
ANR	6154914	Identifier	plist_cache		6154756	1					
ANR	6154915	ExpressionStatement	ctx -> plist_cache = NULL	681:1:15728:15751	6154756	16	True				
ANR	6154916	AssignmentExpression	ctx -> plist_cache = NULL		6154756	0		=			
ANR	6154917	PtrMemberAccess	ctx -> plist_cache		6154756	0					
ANR	6154918	Identifier	ctx		6154756	0					
ANR	6154919	Identifier	plist_cache		6154756	1					
ANR	6154920	Identifier	NULL		6154756	1					
ANR	6154921	ExpressionStatement	r_list_free ( ctx -> tlist_cache )	682:1:15754:15784	6154756	17	True				
ANR	6154922	CallExpression	r_list_free ( ctx -> tlist_cache )		6154756	0					
ANR	6154923	Callee	r_list_free		6154756	0					
ANR	6154924	Identifier	r_list_free		6154756	0					
ANR	6154925	ArgumentList	ctx -> tlist_cache		6154756	1					
ANR	6154926	Argument	ctx -> tlist_cache		6154756	0					
ANR	6154927	PtrMemberAccess	ctx -> tlist_cache		6154756	0					
ANR	6154928	Identifier	ctx		6154756	0					
ANR	6154929	Identifier	tlist_cache		6154756	1					
ANR	6154930	ExpressionStatement	ctx -> tlist_cache = NULL	683:1:15787:15810	6154756	18	True				
ANR	6154931	AssignmentExpression	ctx -> tlist_cache = NULL		6154756	0		=			
ANR	6154932	PtrMemberAccess	ctx -> tlist_cache		6154756	0					
ANR	6154933	Identifier	ctx		6154756	0					
ANR	6154934	Identifier	tlist_cache		6154756	1					
ANR	6154935	Identifier	NULL		6154756	1					
ANR	6154936	ExpressionStatement	ctx -> pae = 0	684:1:15813:15825	6154756	19	True				
ANR	6154937	AssignmentExpression	ctx -> pae = 0		6154756	0		=			
ANR	6154938	PtrMemberAccess	ctx -> pae		6154756	0					
ANR	6154939	Identifier	ctx		6154756	0					
ANR	6154940	Identifier	pae		6154756	1					
ANR	6154941	PrimaryExpression	0		6154756	1					
ANR	6154942	ExpressionStatement	ctx -> syncd = 1	686:1:15850:15864	6154756	20	True				
ANR	6154943	AssignmentExpression	ctx -> syncd = 1		6154756	0		=			
ANR	6154944	PtrMemberAccess	ctx -> syncd		6154756	0					
ANR	6154945	Identifier	ctx		6154756	0					
ANR	6154946	Identifier	syncd		6154756	1					
ANR	6154947	PrimaryExpression	1		6154756	1					
ANR	6154948	ExpressionStatement	free ( s )	688:1:15868:15876	6154756	21	True				
ANR	6154949	CallExpression	free ( s )		6154756	0					
ANR	6154950	Callee	free		6154756	0					
ANR	6154951	Identifier	free		6154756	0					
ANR	6154952	ArgumentList	s		6154756	1					
ANR	6154953	Argument	s		6154756	0					
ANR	6154954	Identifier	s		6154756	0					
ANR	6154955	ExpressionStatement	"eprintf ( ""Sync done! (%i cpus found)\\n"" , ctx -> cpu_count )"	689:1:15879:15935	6154756	22	True				
ANR	6154956	CallExpression	"eprintf ( ""Sync done! (%i cpus found)\\n"" , ctx -> cpu_count )"		6154756	0					
ANR	6154957	Callee	eprintf		6154756	0					
ANR	6154958	Identifier	eprintf		6154756	0					
ANR	6154959	ArgumentList	"""Sync done! (%i cpus found)\\n"""		6154756	1					
ANR	6154960	Argument	"""Sync done! (%i cpus found)\\n"""		6154756	0					
ANR	6154961	PrimaryExpression	"""Sync done! (%i cpus found)\\n"""		6154756	0					
ANR	6154962	Argument	ctx -> cpu_count		6154756	1					
ANR	6154963	PtrMemberAccess	ctx -> cpu_count		6154756	0					
ANR	6154964	Identifier	ctx		6154756	0					
ANR	6154965	Identifier	cpu_count		6154756	1					
ANR	6154966	ReturnStatement	return 1 ;	690:1:15938:15946	6154756	23	True				
ANR	6154967	PrimaryExpression	1		6154756	0					
ANR	6154968	ReturnType	int		6154756	1					
ANR	6154969	Identifier	windbg_sync		6154756	2					
ANR	6154970	ParameterList	WindCtx * ctx		6154756	3					
ANR	6154971	Parameter	WindCtx * ctx	641:16:14906:14917	6154756	0	True				
ANR	6154972	ParameterType	WindCtx *		6154756	0					
ANR	6154973	Identifier	ctx		6154756	1					
ANR	6154974	CFGEntryNode	ENTRY		6154756		True				
ANR	6154975	CFGExitNode	EXIT		6154756		True				
ANR	6154976	Symbol	* stc64		6154756						
ANR	6154977	Symbol	ctx -> target		6154756						
ANR	6154978	Symbol	KD_PACKET_TYPE_RESET		6154756						
ANR	6154979	Symbol	kd_send_ctrl_packet		6154756						
ANR	6154980	Symbol	ctx -> cpu_count		6154756						
ANR	6154981	Symbol	ctx -> cpu		6154756						
ANR	6154982	Symbol	ctx -> plist_cache		6154756						
ANR	6154983	Symbol	s -> data		6154756						
ANR	6154984	Symbol	windbg_wait_packet		6154756						
ANR	6154985	Symbol	ctx -> syncd		6154756						
ANR	6154986	Symbol	ret		6154756						
ANR	6154987	Symbol	NULL		6154756						
ANR	6154988	Symbol	KD_E_OK		6154756						
ANR	6154989	Symbol	ctx		6154756						
ANR	6154990	Symbol	iob_write		6154756						
ANR	6154991	Symbol	stc64		6154756						
ANR	6154992	Symbol	stc64 -> cpu_count		6154756						
ANR	6154993	Symbol	* ctx		6154756						
ANR	6154994	Symbol	ctx -> io_ptr		6154756						
ANR	6154995	Symbol	KD_PACKET_TYPE_STATE_CHANGE64		6154756						
ANR	6154996	Symbol	s		6154756						
ANR	6154997	Symbol	ctx -> seq_id		6154756						
ANR	6154998	Symbol	stc64 -> cpu		6154756						
ANR	6154999	Symbol	& s		6154756						
ANR	6155000	Symbol	* s		6154756						
ANR	6155001	Symbol	ctx -> tlist_cache		6154756						
ANR	6155002	Symbol	ctx -> pae		6154756						
ANR	6155003	Function	windbg_continue	693:0:15951:16689							
ANR	6155004	FunctionDef	windbg_continue (WindCtx * ctx)		6155003	0					
ANR	6155005	CompoundStatement		693:34:15985:16689	6155003	0					
ANR	6155006	IdentifierDeclStatement	kd_req_t req = { 0 } ;	694:1:15988:16011	6155003	0	True				
ANR	6155007	IdentifierDecl	req = { 0 }		6155003	0					
ANR	6155008	IdentifierDeclType	kd_req_t		6155003	0					
ANR	6155009	Identifier	req		6155003	1					
ANR	6155010	AssignmentExpression	req = { 0 }		6155003	2		=			
ANR	6155011	Identifier	req		6155003	0					
ANR	6155012	InitializerList	0		6155003	1					
ANR	6155013	PrimaryExpression	0		6155003	0					
ANR	6155014	IdentifierDeclStatement	int ret ;	697:1:16014:16021	6155003	1	True				
ANR	6155015	IdentifierDecl	ret		6155003	0					
ANR	6155016	IdentifierDeclType	int		6155003	0					
ANR	6155017	Identifier	ret		6155003	1					
ANR	6155018	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6155003	2					
ANR	6155019	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	699:5:16029:16063	6155003	0	True				
ANR	6155020	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6155003	0		||			
ANR	6155021	UnaryOperationExpression	! ctx		6155003	0					
ANR	6155022	UnaryOperator	!		6155003	0					
ANR	6155023	Identifier	ctx		6155003	1					
ANR	6155024	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6155003	1		||			
ANR	6155025	UnaryOperationExpression	! ctx -> io_ptr		6155003	0					
ANR	6155026	UnaryOperator	!		6155003	0					
ANR	6155027	PtrMemberAccess	ctx -> io_ptr		6155003	1					
ANR	6155028	Identifier	ctx		6155003	0					
ANR	6155029	Identifier	io_ptr		6155003	1					
ANR	6155030	UnaryOperationExpression	! ctx -> syncd		6155003	1					
ANR	6155031	UnaryOperator	!		6155003	0					
ANR	6155032	PtrMemberAccess	ctx -> syncd		6155003	1					
ANR	6155033	Identifier	ctx		6155003	0					
ANR	6155034	Identifier	syncd		6155003	1					
ANR	6155035	CompoundStatement		7:42:80:80	6155003	1					
ANR	6155036	ReturnStatement	return 0 ;	700:2:16070:16078	6155003	0	True				
ANR	6155037	PrimaryExpression	0		6155003	0					
ANR	6155038	ExpressionStatement	req . req = DbgKdContinueApi2	702:1:16084:16111	6155003	3	True				
ANR	6155039	AssignmentExpression	req . req = DbgKdContinueApi2		6155003	0		=			
ANR	6155040	MemberAccess	req . req		6155003	0					
ANR	6155041	Identifier	req		6155003	0					
ANR	6155042	Identifier	req		6155003	1					
ANR	6155043	Identifier	DbgKdContinueApi2		6155003	1					
ANR	6155044	ExpressionStatement	req . cpu = ctx -> cpu	703:1:16114:16132	6155003	4	True				
ANR	6155045	AssignmentExpression	req . cpu = ctx -> cpu		6155003	0		=			
ANR	6155046	MemberAccess	req . cpu		6155003	0					
ANR	6155047	Identifier	req		6155003	0					
ANR	6155048	Identifier	cpu		6155003	1					
ANR	6155049	PtrMemberAccess	ctx -> cpu		6155003	1					
ANR	6155050	Identifier	ctx		6155003	0					
ANR	6155051	Identifier	cpu		6155003	1					
ANR	6155052	ExpressionStatement	req . r_cont . reason = 0x10001	704:1:16135:16162	6155003	5	True				
ANR	6155053	AssignmentExpression	req . r_cont . reason = 0x10001		6155003	0		=			
ANR	6155054	MemberAccess	req . r_cont . reason		6155003	0					
ANR	6155055	MemberAccess	req . r_cont		6155003	0					
ANR	6155056	Identifier	req		6155003	0					
ANR	6155057	Identifier	r_cont		6155003	1					
ANR	6155058	Identifier	reason		6155003	1					
ANR	6155059	PrimaryExpression	0x10001		6155003	1					
ANR	6155060	ExpressionStatement	req . r_cont . tf = 0x400	707:1:16266:16287	6155003	6	True				
ANR	6155061	AssignmentExpression	req . r_cont . tf = 0x400		6155003	0		=			
ANR	6155062	MemberAccess	req . r_cont . tf		6155003	0					
ANR	6155063	MemberAccess	req . r_cont		6155003	0					
ANR	6155064	Identifier	req		6155003	0					
ANR	6155065	Identifier	r_cont		6155003	1					
ANR	6155066	Identifier	tf		6155003	1					
ANR	6155067	PrimaryExpression	0x400		6155003	1					
ANR	6155068	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	709:1:16291:16431	6155003	7	True				
ANR	6155069	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6155003	0		=			
ANR	6155070	Identifier	ret		6155003	0					
ANR	6155071	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6155003	1					
ANR	6155072	Callee	kd_send_data_packet		6155003	0					
ANR	6155073	Identifier	kd_send_data_packet		6155003	0					
ANR	6155074	ArgumentList	ctx -> io_ptr		6155003	1					
ANR	6155075	Argument	ctx -> io_ptr		6155003	0					
ANR	6155076	PtrMemberAccess	ctx -> io_ptr		6155003	0					
ANR	6155077	Identifier	ctx		6155003	0					
ANR	6155078	Identifier	io_ptr		6155003	1					
ANR	6155079	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6155003	1					
ANR	6155080	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6155003	0					
ANR	6155081	Argument	ctx -> seq_id ^= 1		6155003	2					
ANR	6155082	AssignmentExpression	ctx -> seq_id ^= 1		6155003	0		^=			
ANR	6155083	PtrMemberAccess	ctx -> seq_id		6155003	0					
ANR	6155084	Identifier	ctx		6155003	0					
ANR	6155085	Identifier	seq_id		6155003	1					
ANR	6155086	PrimaryExpression	1		6155003	1					
ANR	6155087	Argument	( uint8_t * ) & req		6155003	3					
ANR	6155088	CastExpression	( uint8_t * ) & req		6155003	0					
ANR	6155089	CastTarget	uint8_t *		6155003	0					
ANR	6155090	UnaryOperationExpression	& req		6155003	1					
ANR	6155091	UnaryOperator	&		6155003	0					
ANR	6155092	Identifier	req		6155003	1					
ANR	6155093	Argument	sizeof ( kd_req_t )		6155003	4					
ANR	6155094	SizeofExpression	sizeof ( kd_req_t )		6155003	0					
ANR	6155095	Sizeof	sizeof		6155003	0					
ANR	6155096	SizeofOperand	kd_req_t		6155003	1					
ANR	6155097	Argument	NULL		6155003	5					
ANR	6155098	Identifier	NULL		6155003	0					
ANR	6155099	Argument	0		6155003	6					
ANR	6155100	PrimaryExpression	0		6155003	0					
ANR	6155101	IfStatement	if ( ret == KD_E_OK )		6155003	8					
ANR	6155102	Condition	ret == KD_E_OK	711:5:16438:16451	6155003	0	True				
ANR	6155103	EqualityExpression	ret == KD_E_OK		6155003	0		==			
ANR	6155104	Identifier	ret		6155003	0					
ANR	6155105	Identifier	KD_E_OK		6155003	1					
ANR	6155106	CompoundStatement		19:21:468:468	6155003	1					
ANR	6155107	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	712:2:16458:16522	6155003	0	True				
ANR	6155108	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6155003	0		=			
ANR	6155109	Identifier	ret		6155003	0					
ANR	6155110	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6155003	1					
ANR	6155111	Callee	windbg_wait_packet		6155003	0					
ANR	6155112	Identifier	windbg_wait_packet		6155003	0					
ANR	6155113	ArgumentList	ctx		6155003	1					
ANR	6155114	Argument	ctx		6155003	0					
ANR	6155115	Identifier	ctx		6155003	0					
ANR	6155116	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6155003	1					
ANR	6155117	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6155003	0					
ANR	6155118	Argument	NULL		6155003	2					
ANR	6155119	Identifier	NULL		6155003	0					
ANR	6155120	IfStatement	if ( ret == KD_E_OK )		6155003	1					
ANR	6155121	Condition	ret == KD_E_OK	713:6:16530:16543	6155003	0	True				
ANR	6155122	EqualityExpression	ret == KD_E_OK		6155003	0		==			
ANR	6155123	Identifier	ret		6155003	0					
ANR	6155124	Identifier	KD_E_OK		6155003	1					
ANR	6155125	CompoundStatement		21:22:560:560	6155003	1					
ANR	6155126	ExpressionStatement	r_list_free ( ctx -> plist_cache )	715:3:16591:16621	6155003	0	True				
ANR	6155127	CallExpression	r_list_free ( ctx -> plist_cache )		6155003	0					
ANR	6155128	Callee	r_list_free		6155003	0					
ANR	6155129	Identifier	r_list_free		6155003	0					
ANR	6155130	ArgumentList	ctx -> plist_cache		6155003	1					
ANR	6155131	Argument	ctx -> plist_cache		6155003	0					
ANR	6155132	PtrMemberAccess	ctx -> plist_cache		6155003	0					
ANR	6155133	Identifier	ctx		6155003	0					
ANR	6155134	Identifier	plist_cache		6155003	1					
ANR	6155135	ExpressionStatement	ctx -> plist_cache = NULL	716:3:16626:16649	6155003	1	True				
ANR	6155136	AssignmentExpression	ctx -> plist_cache = NULL		6155003	0		=			
ANR	6155137	PtrMemberAccess	ctx -> plist_cache		6155003	0					
ANR	6155138	Identifier	ctx		6155003	0					
ANR	6155139	Identifier	plist_cache		6155003	1					
ANR	6155140	Identifier	NULL		6155003	1					
ANR	6155141	ReturnStatement	return true ;	717:3:16654:16665	6155003	2	True				
ANR	6155142	Identifier	true		6155003	0					
ANR	6155143	ReturnStatement	return false ;	720:1:16675:16687	6155003	9	True				
ANR	6155144	Identifier	false		6155003	0					
ANR	6155145	ReturnType	int		6155003	1					
ANR	6155146	Identifier	windbg_continue		6155003	2					
ANR	6155147	ParameterList	WindCtx * ctx		6155003	3					
ANR	6155148	Parameter	WindCtx * ctx	693:20:15971:15982	6155003	0	True				
ANR	6155149	ParameterType	WindCtx *		6155003	0					
ANR	6155150	Identifier	ctx		6155003	1					
ANR	6155151	CFGEntryNode	ENTRY		6155003		True				
ANR	6155152	CFGExitNode	EXIT		6155003		True				
ANR	6155153	Symbol	ret		6155003						
ANR	6155154	Symbol	kd_send_data_packet		6155003						
ANR	6155155	Symbol	NULL		6155003						
ANR	6155156	Symbol	& req		6155003						
ANR	6155157	Symbol	KD_E_OK		6155003						
ANR	6155158	Symbol	ctx		6155003						
ANR	6155159	Symbol	false		6155003						
ANR	6155160	Symbol	req . req		6155003						
ANR	6155161	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6155003						
ANR	6155162	Symbol	req . r_cont		6155003						
ANR	6155163	Symbol	* ctx		6155003						
ANR	6155164	Symbol	ctx -> io_ptr		6155003						
ANR	6155165	Symbol	ctx -> cpu		6155003						
ANR	6155166	Symbol	ctx -> seq_id		6155003						
ANR	6155167	Symbol	ctx -> plist_cache		6155003						
ANR	6155168	Symbol	req . cpu		6155003						
ANR	6155169	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6155003						
ANR	6155170	Symbol	true		6155003						
ANR	6155171	Symbol	windbg_wait_packet		6155003						
ANR	6155172	Symbol	DbgKdContinueApi2		6155003						
ANR	6155173	Symbol	ctx -> syncd		6155003						
ANR	6155174	Symbol	req		6155003						
ANR	6155175	Symbol	req . r_cont . reason		6155003						
ANR	6155176	Symbol	req . r_cont . tf		6155003						
ANR	6155177	Function	windbg_write_reg	723:0:16692:17587							
ANR	6155178	FunctionDef	"windbg_write_reg (WindCtx * ctx , const uint8_t * buf , int size)"		6155177	0					
ANR	6155179	CompoundStatement		723:66:16758:17587	6155177	0					
ANR	6155180	IdentifierDeclStatement	kd_packet_t * pkt ;	724:1:16761:16777	6155177	0	True				
ANR	6155181	IdentifierDecl	* pkt		6155177	0					
ANR	6155182	IdentifierDeclType	kd_packet_t *		6155177	0					
ANR	6155183	Identifier	pkt		6155177	1					
ANR	6155184	IdentifierDeclStatement	kd_req_t req = { 0 } ;	725:1:16780:16803	6155177	1	True				
ANR	6155185	IdentifierDecl	req = { 0 }		6155177	0					
ANR	6155186	IdentifierDeclType	kd_req_t		6155177	0					
ANR	6155187	Identifier	req		6155177	1					
ANR	6155188	AssignmentExpression	req = { 0 }		6155177	2		=			
ANR	6155189	Identifier	req		6155177	0					
ANR	6155190	InitializerList	0		6155177	1					
ANR	6155191	PrimaryExpression	0		6155177	0					
ANR	6155192	IdentifierDeclStatement	int ret ;	728:1:16806:16813	6155177	2	True				
ANR	6155193	IdentifierDecl	ret		6155177	0					
ANR	6155194	IdentifierDeclType	int		6155177	0					
ANR	6155195	Identifier	ret		6155177	1					
ANR	6155196	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6155177	3					
ANR	6155197	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	730:5:16821:16855	6155177	0	True				
ANR	6155198	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6155177	0		||			
ANR	6155199	UnaryOperationExpression	! ctx		6155177	0					
ANR	6155200	UnaryOperator	!		6155177	0					
ANR	6155201	Identifier	ctx		6155177	1					
ANR	6155202	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6155177	1		||			
ANR	6155203	UnaryOperationExpression	! ctx -> io_ptr		6155177	0					
ANR	6155204	UnaryOperator	!		6155177	0					
ANR	6155205	PtrMemberAccess	ctx -> io_ptr		6155177	1					
ANR	6155206	Identifier	ctx		6155177	0					
ANR	6155207	Identifier	io_ptr		6155177	1					
ANR	6155208	UnaryOperationExpression	! ctx -> syncd		6155177	1					
ANR	6155209	UnaryOperator	!		6155177	0					
ANR	6155210	PtrMemberAccess	ctx -> syncd		6155177	1					
ANR	6155211	Identifier	ctx		6155177	0					
ANR	6155212	Identifier	syncd		6155177	1					
ANR	6155213	CompoundStatement		8:42:99:99	6155177	1					
ANR	6155214	ReturnStatement	return false ;	731:2:16862:16874	6155177	0	True				
ANR	6155215	Identifier	false		6155177	0					
ANR	6155216	ExpressionStatement	req . req = DbgKdSetContextApi	733:1:16880:16908	6155177	4	True				
ANR	6155217	AssignmentExpression	req . req = DbgKdSetContextApi		6155177	0		=			
ANR	6155218	MemberAccess	req . req		6155177	0					
ANR	6155219	Identifier	req		6155177	0					
ANR	6155220	Identifier	req		6155177	1					
ANR	6155221	Identifier	DbgKdSetContextApi		6155177	1					
ANR	6155222	ExpressionStatement	req . cpu = ctx -> cpu	734:1:16911:16929	6155177	5	True				
ANR	6155223	AssignmentExpression	req . cpu = ctx -> cpu		6155177	0		=			
ANR	6155224	MemberAccess	req . cpu		6155177	0					
ANR	6155225	Identifier	req		6155177	0					
ANR	6155226	Identifier	cpu		6155177	1					
ANR	6155227	PtrMemberAccess	ctx -> cpu		6155177	1					
ANR	6155228	Identifier	ctx		6155177	0					
ANR	6155229	Identifier	cpu		6155177	1					
ANR	6155230	ExpressionStatement	req . r_ctx . flags = 0x1003F	735:1:16932:16957	6155177	6	True				
ANR	6155231	AssignmentExpression	req . r_ctx . flags = 0x1003F		6155177	0		=			
ANR	6155232	MemberAccess	req . r_ctx . flags		6155177	0					
ANR	6155233	MemberAccess	req . r_ctx		6155177	0					
ANR	6155234	Identifier	req		6155177	0					
ANR	6155235	Identifier	r_ctx		6155177	1					
ANR	6155236	Identifier	flags		6155177	1					
ANR	6155237	PrimaryExpression	0x1003F		6155177	1					
ANR	6155238	IdentifierDeclStatement	"WIND_DBG eprintf ( ""Regwrite() size: %x\\n"" , size ) ;"	737:1:16961:17008	6155177	7	True				
ANR	6155239	IdentifierDecl	"eprintf ( ""Regwrite() size: %x\\n"" , size )"		6155177	0					
ANR	6155240	IdentifierDeclType	WIND_DBG		6155177	0					
ANR	6155241	Identifier	eprintf		6155177	1					
ANR	6155242	Expression	"""Regwrite() size: %x\\n"" , size"		6155177	2					
ANR	6155243	PrimaryExpression	"""Regwrite() size: %x\\n"""		6155177	0					
ANR	6155244	Identifier	size		6155177	1					
ANR	6155245	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , size )"	739:1:17012:17153	6155177	8	True				
ANR	6155246	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , size )"		6155177	0		=			
ANR	6155247	Identifier	ret		6155177	0					
ANR	6155248	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , size )"		6155177	1					
ANR	6155249	Callee	kd_send_data_packet		6155177	0					
ANR	6155250	Identifier	kd_send_data_packet		6155177	0					
ANR	6155251	ArgumentList	ctx -> io_ptr		6155177	1					
ANR	6155252	Argument	ctx -> io_ptr		6155177	0					
ANR	6155253	PtrMemberAccess	ctx -> io_ptr		6155177	0					
ANR	6155254	Identifier	ctx		6155177	0					
ANR	6155255	Identifier	io_ptr		6155177	1					
ANR	6155256	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6155177	1					
ANR	6155257	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6155177	0					
ANR	6155258	Argument	ctx -> seq_id ^= 1		6155177	2					
ANR	6155259	AssignmentExpression	ctx -> seq_id ^= 1		6155177	0		^=			
ANR	6155260	PtrMemberAccess	ctx -> seq_id		6155177	0					
ANR	6155261	Identifier	ctx		6155177	0					
ANR	6155262	Identifier	seq_id		6155177	1					
ANR	6155263	PrimaryExpression	1		6155177	1					
ANR	6155264	Argument	( uint8_t * ) & req		6155177	3					
ANR	6155265	CastExpression	( uint8_t * ) & req		6155177	0					
ANR	6155266	CastTarget	uint8_t *		6155177	0					
ANR	6155267	UnaryOperationExpression	& req		6155177	1					
ANR	6155268	UnaryOperator	&		6155177	0					
ANR	6155269	Identifier	req		6155177	1					
ANR	6155270	Argument	sizeof ( kd_req_t )		6155177	4					
ANR	6155271	SizeofExpression	sizeof ( kd_req_t )		6155177	0					
ANR	6155272	Sizeof	sizeof		6155177	0					
ANR	6155273	SizeofOperand	kd_req_t		6155177	1					
ANR	6155274	Argument	buf		6155177	5					
ANR	6155275	Identifier	buf		6155177	0					
ANR	6155276	Argument	size		6155177	6					
ANR	6155277	Identifier	size		6155177	0					
ANR	6155278	IfStatement	if ( ret != KD_E_OK )		6155177	9					
ANR	6155279	Condition	ret != KD_E_OK	741:5:17160:17173	6155177	0	True				
ANR	6155280	EqualityExpression	ret != KD_E_OK		6155177	0		!=			
ANR	6155281	Identifier	ret		6155177	0					
ANR	6155282	Identifier	KD_E_OK		6155177	1					
ANR	6155283	CompoundStatement		19:21:417:417	6155177	1					
ANR	6155284	ReturnStatement	return 0 ;	742:2:17180:17188	6155177	0	True				
ANR	6155285	PrimaryExpression	0		6155177	0					
ANR	6155286	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	745:1:17195:17259	6155177	10	True				
ANR	6155287	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6155177	0		=			
ANR	6155288	Identifier	ret		6155177	0					
ANR	6155289	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6155177	1					
ANR	6155290	Callee	windbg_wait_packet		6155177	0					
ANR	6155291	Identifier	windbg_wait_packet		6155177	0					
ANR	6155292	ArgumentList	ctx		6155177	1					
ANR	6155293	Argument	ctx		6155177	0					
ANR	6155294	Identifier	ctx		6155177	0					
ANR	6155295	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6155177	1					
ANR	6155296	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6155177	0					
ANR	6155297	Argument	NULL		6155177	2					
ANR	6155298	Identifier	NULL		6155177	0					
ANR	6155299	IfStatement	if ( ret != KD_E_OK )		6155177	11					
ANR	6155300	Condition	ret != KD_E_OK	746:5:17266:17279	6155177	0	True				
ANR	6155301	EqualityExpression	ret != KD_E_OK		6155177	0		!=			
ANR	6155302	Identifier	ret		6155177	0					
ANR	6155303	Identifier	KD_E_OK		6155177	1					
ANR	6155304	CompoundStatement		24:21:523:523	6155177	1					
ANR	6155305	ReturnStatement	return 0 ;	747:2:17286:17294	6155177	0	True				
ANR	6155306	PrimaryExpression	0		6155177	0					
ANR	6155307	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	750:1:17301:17370	6155177	12	True				
ANR	6155308	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6155177	0		=			
ANR	6155309	Identifier	ret		6155177	0					
ANR	6155310	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6155177	1					
ANR	6155311	Callee	windbg_wait_packet		6155177	0					
ANR	6155312	Identifier	windbg_wait_packet		6155177	0					
ANR	6155313	ArgumentList	ctx		6155177	1					
ANR	6155314	Argument	ctx		6155177	0					
ANR	6155315	Identifier	ctx		6155177	0					
ANR	6155316	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6155177	1					
ANR	6155317	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6155177	0					
ANR	6155318	Argument	& pkt		6155177	2					
ANR	6155319	UnaryOperationExpression	& pkt		6155177	0					
ANR	6155320	UnaryOperator	&		6155177	0					
ANR	6155321	Identifier	pkt		6155177	1					
ANR	6155322	IfStatement	if ( ret != KD_E_OK )		6155177	13					
ANR	6155323	Condition	ret != KD_E_OK	751:5:17377:17390	6155177	0	True				
ANR	6155324	EqualityExpression	ret != KD_E_OK		6155177	0		!=			
ANR	6155325	Identifier	ret		6155177	0					
ANR	6155326	Identifier	KD_E_OK		6155177	1					
ANR	6155327	CompoundStatement		29:21:634:634	6155177	1					
ANR	6155328	ReturnStatement	return 0 ;	752:2:17397:17405	6155177	0	True				
ANR	6155329	PrimaryExpression	0		6155177	0					
ANR	6155330	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	755:1:17412:17440	6155177	14	True				
ANR	6155331	IdentifierDecl	* rr = PKT_REQ ( pkt )		6155177	0					
ANR	6155332	IdentifierDeclType	kd_req_t *		6155177	0					
ANR	6155333	Identifier	rr		6155177	1					
ANR	6155334	AssignmentExpression	* rr = PKT_REQ ( pkt )		6155177	2		=			
ANR	6155335	Identifier	rr		6155177	0					
ANR	6155336	CallExpression	PKT_REQ ( pkt )		6155177	1					
ANR	6155337	Callee	PKT_REQ		6155177	0					
ANR	6155338	Identifier	PKT_REQ		6155177	0					
ANR	6155339	ArgumentList	pkt		6155177	1					
ANR	6155340	Argument	pkt		6155177	0					
ANR	6155341	Identifier	pkt		6155177	0					
ANR	6155342	IfStatement	if ( rr -> ret )		6155177	15					
ANR	6155343	Condition	rr -> ret	757:5:17448:17454	6155177	0	True				
ANR	6155344	PtrMemberAccess	rr -> ret		6155177	0					
ANR	6155345	Identifier	rr		6155177	0					
ANR	6155346	Identifier	ret		6155177	1					
ANR	6155347	CompoundStatement		36:2:702:768	6155177	1					
ANR	6155348	IdentifierDeclStatement	"WIND_DBG eprintf ( ""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret ) ;"	758:2:17461:17527	6155177	0	True				
ANR	6155349	IdentifierDecl	"eprintf ( ""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret )"		6155177	0					
ANR	6155350	IdentifierDeclType	WIND_DBG		6155177	0					
ANR	6155351	Identifier	eprintf		6155177	1					
ANR	6155352	Expression	"""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret"		6155177	2					
ANR	6155353	PrimaryExpression	"""%s: req returned %08x\\n"""		6155177	0					
ANR	6155354	Expression	"__FUNCTION__ , rr -> ret"		6155177	1					
ANR	6155355	Identifier	__FUNCTION__		6155177	0					
ANR	6155356	PtrMemberAccess	rr -> ret		6155177	1					
ANR	6155357	Identifier	rr		6155177	0					
ANR	6155358	Identifier	ret		6155177	1					
ANR	6155359	ExpressionStatement	free ( pkt )	759:2:17531:17541	6155177	1	True				
ANR	6155360	CallExpression	free ( pkt )		6155177	0					
ANR	6155361	Callee	free		6155177	0					
ANR	6155362	Identifier	free		6155177	0					
ANR	6155363	ArgumentList	pkt		6155177	1					
ANR	6155364	Argument	pkt		6155177	0					
ANR	6155365	Identifier	pkt		6155177	0					
ANR	6155366	ReturnStatement	return 0 ;	760:2:17545:17553	6155177	2	True				
ANR	6155367	PrimaryExpression	0		6155177	0					
ANR	6155368	ExpressionStatement	free ( pkt )	763:1:17560:17570	6155177	16	True				
ANR	6155369	CallExpression	free ( pkt )		6155177	0					
ANR	6155370	Callee	free		6155177	0					
ANR	6155371	Identifier	free		6155177	0					
ANR	6155372	ArgumentList	pkt		6155177	1					
ANR	6155373	Argument	pkt		6155177	0					
ANR	6155374	Identifier	pkt		6155177	0					
ANR	6155375	ReturnStatement	return size ;	765:1:17574:17585	6155177	17	True				
ANR	6155376	Identifier	size		6155177	0					
ANR	6155377	ReturnType	bool		6155177	1					
ANR	6155378	Identifier	windbg_write_reg		6155177	2					
ANR	6155379	ParameterList	"WindCtx * ctx , const uint8_t * buf , int size"		6155177	3					
ANR	6155380	Parameter	WindCtx * ctx	723:22:16714:16725	6155177	0	True				
ANR	6155381	ParameterType	WindCtx *		6155177	0					
ANR	6155382	Identifier	ctx		6155177	1					
ANR	6155383	Parameter	const uint8_t * buf	723:36:16728:16745	6155177	1	True				
ANR	6155384	ParameterType	const uint8_t *		6155177	0					
ANR	6155385	Identifier	buf		6155177	1					
ANR	6155386	Parameter	int size	723:56:16748:16755	6155177	2	True				
ANR	6155387	ParameterType	int		6155177	0					
ANR	6155388	Identifier	size		6155177	1					
ANR	6155389	CFGEntryNode	ENTRY		6155177		True				
ANR	6155390	CFGExitNode	EXIT		6155177		True				
ANR	6155391	Symbol	rr		6155177						
ANR	6155392	Symbol	PKT_REQ		6155177						
ANR	6155393	Symbol	& req		6155177						
ANR	6155394	Symbol	req . req		6155177						
ANR	6155395	Symbol	req . r_ctx . flags		6155177						
ANR	6155396	Symbol	eprintf		6155177						
ANR	6155397	Symbol	ctx -> cpu		6155177						
ANR	6155398	Symbol	req . cpu		6155177						
ANR	6155399	Symbol	pkt		6155177						
ANR	6155400	Symbol	rr -> ret		6155177						
ANR	6155401	Symbol	windbg_wait_packet		6155177						
ANR	6155402	Symbol	ctx -> syncd		6155177						
ANR	6155403	Symbol	req		6155177						
ANR	6155404	Symbol	ret		6155177						
ANR	6155405	Symbol	kd_send_data_packet		6155177						
ANR	6155406	Symbol	NULL		6155177						
ANR	6155407	Symbol	KD_E_OK		6155177						
ANR	6155408	Symbol	* rr		6155177						
ANR	6155409	Symbol	ctx		6155177						
ANR	6155410	Symbol	false		6155177						
ANR	6155411	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6155177						
ANR	6155412	Symbol	* ctx		6155177						
ANR	6155413	Symbol	ctx -> io_ptr		6155177						
ANR	6155414	Symbol	buf		6155177						
ANR	6155415	Symbol	size		6155177						
ANR	6155416	Symbol	ctx -> seq_id		6155177						
ANR	6155417	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6155177						
ANR	6155418	Symbol	& pkt		6155177						
ANR	6155419	Symbol	DbgKdSetContextApi		6155177						
ANR	6155420	Symbol	req . r_ctx		6155177						
ANR	6155421	Function	windbg_read_reg	768:0:17590:18488							
ANR	6155422	FunctionDef	"windbg_read_reg (WindCtx * ctx , uint8_t * buf , int size)"		6155421	0					
ANR	6155423	CompoundStatement		768:58:17648:18488	6155421	0					
ANR	6155424	IdentifierDeclStatement	kd_req_t req ;	769:1:17651:17663	6155421	0	True				
ANR	6155425	IdentifierDecl	req		6155421	0					
ANR	6155426	IdentifierDeclType	kd_req_t		6155421	0					
ANR	6155427	Identifier	req		6155421	1					
ANR	6155428	IdentifierDeclStatement	kd_packet_t * pkt = NULL ;	770:1:17666:17689	6155421	1	True				
ANR	6155429	IdentifierDecl	* pkt = NULL		6155421	0					
ANR	6155430	IdentifierDeclType	kd_packet_t *		6155421	0					
ANR	6155431	Identifier	pkt		6155421	1					
ANR	6155432	AssignmentExpression	* pkt = NULL		6155421	2		=			
ANR	6155433	Identifier	NULL		6155421	0					
ANR	6155434	Identifier	NULL		6155421	1					
ANR	6155435	IdentifierDeclStatement	int ret ;	771:1:17692:17699	6155421	2	True				
ANR	6155436	IdentifierDecl	ret		6155421	0					
ANR	6155437	IdentifierDeclType	int		6155421	0					
ANR	6155438	Identifier	ret		6155421	1					
ANR	6155439	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6155421	3					
ANR	6155440	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	773:5:17707:17741	6155421	0	True				
ANR	6155441	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6155421	0		||			
ANR	6155442	UnaryOperationExpression	! ctx		6155421	0					
ANR	6155443	UnaryOperator	!		6155421	0					
ANR	6155444	Identifier	ctx		6155421	1					
ANR	6155445	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6155421	1		||			
ANR	6155446	UnaryOperationExpression	! ctx -> io_ptr		6155421	0					
ANR	6155447	UnaryOperator	!		6155421	0					
ANR	6155448	PtrMemberAccess	ctx -> io_ptr		6155421	1					
ANR	6155449	Identifier	ctx		6155421	0					
ANR	6155450	Identifier	io_ptr		6155421	1					
ANR	6155451	UnaryOperationExpression	! ctx -> syncd		6155421	1					
ANR	6155452	UnaryOperator	!		6155421	0					
ANR	6155453	PtrMemberAccess	ctx -> syncd		6155421	1					
ANR	6155454	Identifier	ctx		6155421	0					
ANR	6155455	Identifier	syncd		6155421	1					
ANR	6155456	CompoundStatement		6:42:95:95	6155421	1					
ANR	6155457	ReturnStatement	return 0 ;	774:2:17748:17756	6155421	0	True				
ANR	6155458	PrimaryExpression	0		6155421	0					
ANR	6155459	ExpressionStatement	"memset ( & req , 0 , sizeof ( kd_req_t ) )"	777:1:17763:17797	6155421	4	True				
ANR	6155460	CallExpression	"memset ( & req , 0 , sizeof ( kd_req_t ) )"		6155421	0					
ANR	6155461	Callee	memset		6155421	0					
ANR	6155462	Identifier	memset		6155421	0					
ANR	6155463	ArgumentList	& req		6155421	1					
ANR	6155464	Argument	& req		6155421	0					
ANR	6155465	UnaryOperationExpression	& req		6155421	0					
ANR	6155466	UnaryOperator	&		6155421	0					
ANR	6155467	Identifier	req		6155421	1					
ANR	6155468	Argument	0		6155421	1					
ANR	6155469	PrimaryExpression	0		6155421	0					
ANR	6155470	Argument	sizeof ( kd_req_t )		6155421	2					
ANR	6155471	SizeofExpression	sizeof ( kd_req_t )		6155421	0					
ANR	6155472	Sizeof	sizeof		6155421	0					
ANR	6155473	SizeofOperand	kd_req_t		6155421	1					
ANR	6155474	ExpressionStatement	req . req = DbgKdGetContextApi	779:1:17801:17829	6155421	5	True				
ANR	6155475	AssignmentExpression	req . req = DbgKdGetContextApi		6155421	0		=			
ANR	6155476	MemberAccess	req . req		6155421	0					
ANR	6155477	Identifier	req		6155421	0					
ANR	6155478	Identifier	req		6155421	1					
ANR	6155479	Identifier	DbgKdGetContextApi		6155421	1					
ANR	6155480	ExpressionStatement	req . cpu = ctx -> cpu	780:1:17832:17850	6155421	6	True				
ANR	6155481	AssignmentExpression	req . cpu = ctx -> cpu		6155421	0		=			
ANR	6155482	MemberAccess	req . cpu		6155421	0					
ANR	6155483	Identifier	req		6155421	0					
ANR	6155484	Identifier	cpu		6155421	1					
ANR	6155485	PtrMemberAccess	ctx -> cpu		6155421	1					
ANR	6155486	Identifier	ctx		6155421	0					
ANR	6155487	Identifier	cpu		6155421	1					
ANR	6155488	ExpressionStatement	req . r_ctx . flags = 0x1003F	782:1:17854:17879	6155421	7	True				
ANR	6155489	AssignmentExpression	req . r_ctx . flags = 0x1003F		6155421	0		=			
ANR	6155490	MemberAccess	req . r_ctx . flags		6155421	0					
ANR	6155491	MemberAccess	req . r_ctx		6155421	0					
ANR	6155492	Identifier	req		6155421	0					
ANR	6155493	Identifier	r_ctx		6155421	1					
ANR	6155494	Identifier	flags		6155421	1					
ANR	6155495	PrimaryExpression	0x1003F		6155421	1					
ANR	6155496	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	784:1:17883:18022	6155421	8	True				
ANR	6155497	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6155421	0		=			
ANR	6155498	Identifier	ret		6155421	0					
ANR	6155499	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6155421	1					
ANR	6155500	Callee	kd_send_data_packet		6155421	0					
ANR	6155501	Identifier	kd_send_data_packet		6155421	0					
ANR	6155502	ArgumentList	ctx -> io_ptr		6155421	1					
ANR	6155503	Argument	ctx -> io_ptr		6155421	0					
ANR	6155504	PtrMemberAccess	ctx -> io_ptr		6155421	0					
ANR	6155505	Identifier	ctx		6155421	0					
ANR	6155506	Identifier	io_ptr		6155421	1					
ANR	6155507	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6155421	1					
ANR	6155508	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6155421	0					
ANR	6155509	Argument	ctx -> seq_id ^= 1		6155421	2					
ANR	6155510	AssignmentExpression	ctx -> seq_id ^= 1		6155421	0		^=			
ANR	6155511	PtrMemberAccess	ctx -> seq_id		6155421	0					
ANR	6155512	Identifier	ctx		6155421	0					
ANR	6155513	Identifier	seq_id		6155421	1					
ANR	6155514	PrimaryExpression	1		6155421	1					
ANR	6155515	Argument	( uint8_t * ) & req		6155421	3					
ANR	6155516	CastExpression	( uint8_t * ) & req		6155421	0					
ANR	6155517	CastTarget	uint8_t *		6155421	0					
ANR	6155518	UnaryOperationExpression	& req		6155421	1					
ANR	6155519	UnaryOperator	&		6155421	0					
ANR	6155520	Identifier	req		6155421	1					
ANR	6155521	Argument	sizeof ( kd_req_t )		6155421	4					
ANR	6155522	SizeofExpression	sizeof ( kd_req_t )		6155421	0					
ANR	6155523	Sizeof	sizeof		6155421	0					
ANR	6155524	SizeofOperand	kd_req_t		6155421	1					
ANR	6155525	Argument	NULL		6155421	5					
ANR	6155526	Identifier	NULL		6155421	0					
ANR	6155527	Argument	0		6155421	6					
ANR	6155528	PrimaryExpression	0		6155421	0					
ANR	6155529	IfStatement	if ( ret != KD_E_OK )		6155421	9					
ANR	6155530	Condition	ret != KD_E_OK	786:5:18029:18042	6155421	0	True				
ANR	6155531	EqualityExpression	ret != KD_E_OK		6155421	0		!=			
ANR	6155532	Identifier	ret		6155421	0					
ANR	6155533	Identifier	KD_E_OK		6155421	1					
ANR	6155534	CompoundStatement		19:21:396:396	6155421	1					
ANR	6155535	ReturnStatement	return 0 ;	787:2:18049:18057	6155421	0	True				
ANR	6155536	PrimaryExpression	0		6155421	0					
ANR	6155537	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	790:1:18064:18128	6155421	10	True				
ANR	6155538	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6155421	0		=			
ANR	6155539	Identifier	ret		6155421	0					
ANR	6155540	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6155421	1					
ANR	6155541	Callee	windbg_wait_packet		6155421	0					
ANR	6155542	Identifier	windbg_wait_packet		6155421	0					
ANR	6155543	ArgumentList	ctx		6155421	1					
ANR	6155544	Argument	ctx		6155421	0					
ANR	6155545	Identifier	ctx		6155421	0					
ANR	6155546	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6155421	1					
ANR	6155547	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6155421	0					
ANR	6155548	Argument	NULL		6155421	2					
ANR	6155549	Identifier	NULL		6155421	0					
ANR	6155550	IfStatement	if ( ret != KD_E_OK )		6155421	11					
ANR	6155551	Condition	ret != KD_E_OK	791:5:18135:18148	6155421	0	True				
ANR	6155552	EqualityExpression	ret != KD_E_OK		6155421	0		!=			
ANR	6155553	Identifier	ret		6155421	0					
ANR	6155554	Identifier	KD_E_OK		6155421	1					
ANR	6155555	CompoundStatement		24:21:502:502	6155421	1					
ANR	6155556	ReturnStatement	return 0 ;	792:2:18155:18163	6155421	0	True				
ANR	6155557	PrimaryExpression	0		6155421	0					
ANR	6155558	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	795:1:18170:18239	6155421	12	True				
ANR	6155559	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6155421	0		=			
ANR	6155560	Identifier	ret		6155421	0					
ANR	6155561	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6155421	1					
ANR	6155562	Callee	windbg_wait_packet		6155421	0					
ANR	6155563	Identifier	windbg_wait_packet		6155421	0					
ANR	6155564	ArgumentList	ctx		6155421	1					
ANR	6155565	Argument	ctx		6155421	0					
ANR	6155566	Identifier	ctx		6155421	0					
ANR	6155567	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6155421	1					
ANR	6155568	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6155421	0					
ANR	6155569	Argument	& pkt		6155421	2					
ANR	6155570	UnaryOperationExpression	& pkt		6155421	0					
ANR	6155571	UnaryOperator	&		6155421	0					
ANR	6155572	Identifier	pkt		6155421	1					
ANR	6155573	IfStatement	if ( ret != KD_E_OK )		6155421	13					
ANR	6155574	Condition	ret != KD_E_OK	796:5:18246:18259	6155421	0	True				
ANR	6155575	EqualityExpression	ret != KD_E_OK		6155421	0		!=			
ANR	6155576	Identifier	ret		6155421	0					
ANR	6155577	Identifier	KD_E_OK		6155421	1					
ANR	6155578	CompoundStatement		29:21:613:613	6155421	1					
ANR	6155579	ReturnStatement	return 0 ;	797:2:18266:18274	6155421	0	True				
ANR	6155580	PrimaryExpression	0		6155421	0					
ANR	6155581	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	800:1:18281:18309	6155421	14	True				
ANR	6155582	IdentifierDecl	* rr = PKT_REQ ( pkt )		6155421	0					
ANR	6155583	IdentifierDeclType	kd_req_t *		6155421	0					
ANR	6155584	Identifier	rr		6155421	1					
ANR	6155585	AssignmentExpression	* rr = PKT_REQ ( pkt )		6155421	2		=			
ANR	6155586	Identifier	rr		6155421	0					
ANR	6155587	CallExpression	PKT_REQ ( pkt )		6155421	1					
ANR	6155588	Callee	PKT_REQ		6155421	0					
ANR	6155589	Identifier	PKT_REQ		6155421	0					
ANR	6155590	ArgumentList	pkt		6155421	1					
ANR	6155591	Argument	pkt		6155421	0					
ANR	6155592	Identifier	pkt		6155421	0					
ANR	6155593	IfStatement	if ( rr -> ret )		6155421	15					
ANR	6155594	Condition	rr -> ret	802:5:18317:18323	6155421	0	True				
ANR	6155595	PtrMemberAccess	rr -> ret		6155421	0					
ANR	6155596	Identifier	rr		6155421	0					
ANR	6155597	Identifier	ret		6155421	1					
ANR	6155598	CompoundStatement		36:2:681:747	6155421	1					
ANR	6155599	IdentifierDeclStatement	"WIND_DBG eprintf ( ""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret ) ;"	803:2:18330:18396	6155421	0	True				
ANR	6155600	IdentifierDecl	"eprintf ( ""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret )"		6155421	0					
ANR	6155601	IdentifierDeclType	WIND_DBG		6155421	0					
ANR	6155602	Identifier	eprintf		6155421	1					
ANR	6155603	Expression	"""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret"		6155421	2					
ANR	6155604	PrimaryExpression	"""%s: req returned %08x\\n"""		6155421	0					
ANR	6155605	Expression	"__FUNCTION__ , rr -> ret"		6155421	1					
ANR	6155606	Identifier	__FUNCTION__		6155421	0					
ANR	6155607	PtrMemberAccess	rr -> ret		6155421	1					
ANR	6155608	Identifier	rr		6155421	0					
ANR	6155609	Identifier	ret		6155421	1					
ANR	6155610	ExpressionStatement	free ( pkt )	804:2:18400:18410	6155421	1	True				
ANR	6155611	CallExpression	free ( pkt )		6155421	0					
ANR	6155612	Callee	free		6155421	0					
ANR	6155613	Identifier	free		6155421	0					
ANR	6155614	ArgumentList	pkt		6155421	1					
ANR	6155615	Argument	pkt		6155421	0					
ANR	6155616	Identifier	pkt		6155421	0					
ANR	6155617	ReturnStatement	return 0 ;	805:2:18414:18422	6155421	2	True				
ANR	6155618	PrimaryExpression	0		6155421	0					
ANR	6155619	ExpressionStatement	"memcpy ( buf , rr -> data , size )"	808:1:18429:18457	6155421	16	True				
ANR	6155620	CallExpression	"memcpy ( buf , rr -> data , size )"		6155421	0					
ANR	6155621	Callee	memcpy		6155421	0					
ANR	6155622	Identifier	memcpy		6155421	0					
ANR	6155623	ArgumentList	buf		6155421	1					
ANR	6155624	Argument	buf		6155421	0					
ANR	6155625	Identifier	buf		6155421	0					
ANR	6155626	Argument	rr -> data		6155421	1					
ANR	6155627	PtrMemberAccess	rr -> data		6155421	0					
ANR	6155628	Identifier	rr		6155421	0					
ANR	6155629	Identifier	data		6155421	1					
ANR	6155630	Argument	size		6155421	2					
ANR	6155631	Identifier	size		6155421	0					
ANR	6155632	ExpressionStatement	free ( pkt )	810:1:18461:18471	6155421	17	True				
ANR	6155633	CallExpression	free ( pkt )		6155421	0					
ANR	6155634	Callee	free		6155421	0					
ANR	6155635	Identifier	free		6155421	0					
ANR	6155636	ArgumentList	pkt		6155421	1					
ANR	6155637	Argument	pkt		6155421	0					
ANR	6155638	Identifier	pkt		6155421	0					
ANR	6155639	ReturnStatement	return size ;	812:1:18475:18486	6155421	18	True				
ANR	6155640	Identifier	size		6155421	0					
ANR	6155641	ReturnType	int		6155421	1					
ANR	6155642	Identifier	windbg_read_reg		6155421	2					
ANR	6155643	ParameterList	"WindCtx * ctx , uint8_t * buf , int size"		6155421	3					
ANR	6155644	Parameter	WindCtx * ctx	768:20:17610:17621	6155421	0	True				
ANR	6155645	ParameterType	WindCtx *		6155421	0					
ANR	6155646	Identifier	ctx		6155421	1					
ANR	6155647	Parameter	uint8_t * buf	768:34:17624:17635	6155421	1	True				
ANR	6155648	ParameterType	uint8_t *		6155421	0					
ANR	6155649	Identifier	buf		6155421	1					
ANR	6155650	Parameter	int size	768:48:17638:17645	6155421	2	True				
ANR	6155651	ParameterType	int		6155421	0					
ANR	6155652	Identifier	size		6155421	1					
ANR	6155653	CFGEntryNode	ENTRY		6155421		True				
ANR	6155654	CFGExitNode	EXIT		6155421		True				
ANR	6155655	Symbol	rr		6155421						
ANR	6155656	Symbol	PKT_REQ		6155421						
ANR	6155657	Symbol	& req		6155421						
ANR	6155658	Symbol	req . req		6155421						
ANR	6155659	Symbol	req . r_ctx . flags		6155421						
ANR	6155660	Symbol	eprintf		6155421						
ANR	6155661	Symbol	ctx -> cpu		6155421						
ANR	6155662	Symbol	rr -> data		6155421						
ANR	6155663	Symbol	req . cpu		6155421						
ANR	6155664	Symbol	pkt		6155421						
ANR	6155665	Symbol	rr -> ret		6155421						
ANR	6155666	Symbol	windbg_wait_packet		6155421						
ANR	6155667	Symbol	ctx -> syncd		6155421						
ANR	6155668	Symbol	req		6155421						
ANR	6155669	Symbol	ret		6155421						
ANR	6155670	Symbol	kd_send_data_packet		6155421						
ANR	6155671	Symbol	NULL		6155421						
ANR	6155672	Symbol	KD_E_OK		6155421						
ANR	6155673	Symbol	* rr		6155421						
ANR	6155674	Symbol	ctx		6155421						
ANR	6155675	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6155421						
ANR	6155676	Symbol	DbgKdGetContextApi		6155421						
ANR	6155677	Symbol	* ctx		6155421						
ANR	6155678	Symbol	ctx -> io_ptr		6155421						
ANR	6155679	Symbol	buf		6155421						
ANR	6155680	Symbol	size		6155421						
ANR	6155681	Symbol	ctx -> seq_id		6155421						
ANR	6155682	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6155421						
ANR	6155683	Symbol	& pkt		6155421						
ANR	6155684	Symbol	req . r_ctx		6155421						
ANR	6155685	Function	windbg_query_mem	815:0:18491:19525							
ANR	6155686	FunctionDef	"windbg_query_mem (WindCtx * ctx , const ut64 addr , int * address_space , int * flags)"		6155685	0					
ANR	6155687	CompoundStatement		815:84:18575:19525	6155685	0					
ANR	6155688	IdentifierDeclStatement	kd_req_t req ;	816:1:18578:18590	6155685	0	True				
ANR	6155689	IdentifierDecl	req		6155685	0					
ANR	6155690	IdentifierDeclType	kd_req_t		6155685	0					
ANR	6155691	Identifier	req		6155685	1					
ANR	6155692	IdentifierDeclStatement	kd_packet_t * pkt ;	817:1:18593:18609	6155685	1	True				
ANR	6155693	IdentifierDecl	* pkt		6155685	0					
ANR	6155694	IdentifierDeclType	kd_packet_t *		6155685	0					
ANR	6155695	Identifier	pkt		6155685	1					
ANR	6155696	IdentifierDeclStatement	int ret ;	818:1:18612:18619	6155685	2	True				
ANR	6155697	IdentifierDecl	ret		6155685	0					
ANR	6155698	IdentifierDeclType	int		6155685	0					
ANR	6155699	Identifier	ret		6155685	1					
ANR	6155700	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6155685	3					
ANR	6155701	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	820:5:18627:18661	6155685	0	True				
ANR	6155702	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6155685	0		||			
ANR	6155703	UnaryOperationExpression	! ctx		6155685	0					
ANR	6155704	UnaryOperator	!		6155685	0					
ANR	6155705	Identifier	ctx		6155685	1					
ANR	6155706	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6155685	1		||			
ANR	6155707	UnaryOperationExpression	! ctx -> io_ptr		6155685	0					
ANR	6155708	UnaryOperator	!		6155685	0					
ANR	6155709	PtrMemberAccess	ctx -> io_ptr		6155685	1					
ANR	6155710	Identifier	ctx		6155685	0					
ANR	6155711	Identifier	io_ptr		6155685	1					
ANR	6155712	UnaryOperationExpression	! ctx -> syncd		6155685	1					
ANR	6155713	UnaryOperator	!		6155685	0					
ANR	6155714	PtrMemberAccess	ctx -> syncd		6155685	1					
ANR	6155715	Identifier	ctx		6155685	0					
ANR	6155716	Identifier	syncd		6155685	1					
ANR	6155717	CompoundStatement		6:42:88:88	6155685	1					
ANR	6155718	ReturnStatement	return 0 ;	821:2:18668:18676	6155685	0	True				
ANR	6155719	PrimaryExpression	0		6155685	0					
ANR	6155720	ExpressionStatement	"memset ( & req , 0 , sizeof ( kd_req_t ) )"	824:1:18683:18717	6155685	4	True				
ANR	6155721	CallExpression	"memset ( & req , 0 , sizeof ( kd_req_t ) )"		6155685	0					
ANR	6155722	Callee	memset		6155685	0					
ANR	6155723	Identifier	memset		6155685	0					
ANR	6155724	ArgumentList	& req		6155685	1					
ANR	6155725	Argument	& req		6155685	0					
ANR	6155726	UnaryOperationExpression	& req		6155685	0					
ANR	6155727	UnaryOperator	&		6155685	0					
ANR	6155728	Identifier	req		6155685	1					
ANR	6155729	Argument	0		6155685	1					
ANR	6155730	PrimaryExpression	0		6155685	0					
ANR	6155731	Argument	sizeof ( kd_req_t )		6155685	2					
ANR	6155732	SizeofExpression	sizeof ( kd_req_t )		6155685	0					
ANR	6155733	Sizeof	sizeof		6155685	0					
ANR	6155734	SizeofOperand	kd_req_t		6155685	1					
ANR	6155735	ExpressionStatement	req . req = DbgKdQueryMemoryApi	826:1:18721:18750	6155685	5	True				
ANR	6155736	AssignmentExpression	req . req = DbgKdQueryMemoryApi		6155685	0		=			
ANR	6155737	MemberAccess	req . req		6155685	0					
ANR	6155738	Identifier	req		6155685	0					
ANR	6155739	Identifier	req		6155685	1					
ANR	6155740	Identifier	DbgKdQueryMemoryApi		6155685	1					
ANR	6155741	ExpressionStatement	req . cpu = ctx -> cpu	827:1:18753:18771	6155685	6	True				
ANR	6155742	AssignmentExpression	req . cpu = ctx -> cpu		6155685	0		=			
ANR	6155743	MemberAccess	req . cpu		6155685	0					
ANR	6155744	Identifier	req		6155685	0					
ANR	6155745	Identifier	cpu		6155685	1					
ANR	6155746	PtrMemberAccess	ctx -> cpu		6155685	1					
ANR	6155747	Identifier	ctx		6155685	0					
ANR	6155748	Identifier	cpu		6155685	1					
ANR	6155749	ExpressionStatement	req . r_query_mem . addr = addr	829:1:18775:18802	6155685	7	True				
ANR	6155750	AssignmentExpression	req . r_query_mem . addr = addr		6155685	0		=			
ANR	6155751	MemberAccess	req . r_query_mem . addr		6155685	0					
ANR	6155752	MemberAccess	req . r_query_mem		6155685	0					
ANR	6155753	Identifier	req		6155685	0					
ANR	6155754	Identifier	r_query_mem		6155685	1					
ANR	6155755	Identifier	addr		6155685	1					
ANR	6155756	Identifier	addr		6155685	1					
ANR	6155757	ExpressionStatement	req . r_query_mem . address_space = 0	830:1:18805:18838	6155685	8	True				
ANR	6155758	AssignmentExpression	req . r_query_mem . address_space = 0		6155685	0		=			
ANR	6155759	MemberAccess	req . r_query_mem . address_space		6155685	0					
ANR	6155760	MemberAccess	req . r_query_mem		6155685	0					
ANR	6155761	Identifier	req		6155685	0					
ANR	6155762	Identifier	r_query_mem		6155685	1					
ANR	6155763	Identifier	address_space		6155685	1					
ANR	6155764	PrimaryExpression	0		6155685	1					
ANR	6155765	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	832:1:18895:19034	6155685	9	True				
ANR	6155766	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6155685	0		=			
ANR	6155767	Identifier	ret		6155685	0					
ANR	6155768	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6155685	1					
ANR	6155769	Callee	kd_send_data_packet		6155685	0					
ANR	6155770	Identifier	kd_send_data_packet		6155685	0					
ANR	6155771	ArgumentList	ctx -> io_ptr		6155685	1					
ANR	6155772	Argument	ctx -> io_ptr		6155685	0					
ANR	6155773	PtrMemberAccess	ctx -> io_ptr		6155685	0					
ANR	6155774	Identifier	ctx		6155685	0					
ANR	6155775	Identifier	io_ptr		6155685	1					
ANR	6155776	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6155685	1					
ANR	6155777	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6155685	0					
ANR	6155778	Argument	ctx -> seq_id ^= 1		6155685	2					
ANR	6155779	AssignmentExpression	ctx -> seq_id ^= 1		6155685	0		^=			
ANR	6155780	PtrMemberAccess	ctx -> seq_id		6155685	0					
ANR	6155781	Identifier	ctx		6155685	0					
ANR	6155782	Identifier	seq_id		6155685	1					
ANR	6155783	PrimaryExpression	1		6155685	1					
ANR	6155784	Argument	( uint8_t * ) & req		6155685	3					
ANR	6155785	CastExpression	( uint8_t * ) & req		6155685	0					
ANR	6155786	CastTarget	uint8_t *		6155685	0					
ANR	6155787	UnaryOperationExpression	& req		6155685	1					
ANR	6155788	UnaryOperator	&		6155685	0					
ANR	6155789	Identifier	req		6155685	1					
ANR	6155790	Argument	sizeof ( kd_req_t )		6155685	4					
ANR	6155791	SizeofExpression	sizeof ( kd_req_t )		6155685	0					
ANR	6155792	Sizeof	sizeof		6155685	0					
ANR	6155793	SizeofOperand	kd_req_t		6155685	1					
ANR	6155794	Argument	NULL		6155685	5					
ANR	6155795	Identifier	NULL		6155685	0					
ANR	6155796	Argument	0		6155685	6					
ANR	6155797	PrimaryExpression	0		6155685	0					
ANR	6155798	IfStatement	if ( ret != KD_E_OK )		6155685	10					
ANR	6155799	Condition	ret != KD_E_OK	834:5:19041:19054	6155685	0	True				
ANR	6155800	EqualityExpression	ret != KD_E_OK		6155685	0		!=			
ANR	6155801	Identifier	ret		6155685	0					
ANR	6155802	Identifier	KD_E_OK		6155685	1					
ANR	6155803	CompoundStatement		20:21:481:481	6155685	1					
ANR	6155804	ReturnStatement	return 0 ;	835:2:19061:19069	6155685	0	True				
ANR	6155805	PrimaryExpression	0		6155685	0					
ANR	6155806	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	838:1:19076:19140	6155685	11	True				
ANR	6155807	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6155685	0		=			
ANR	6155808	Identifier	ret		6155685	0					
ANR	6155809	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6155685	1					
ANR	6155810	Callee	windbg_wait_packet		6155685	0					
ANR	6155811	Identifier	windbg_wait_packet		6155685	0					
ANR	6155812	ArgumentList	ctx		6155685	1					
ANR	6155813	Argument	ctx		6155685	0					
ANR	6155814	Identifier	ctx		6155685	0					
ANR	6155815	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6155685	1					
ANR	6155816	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6155685	0					
ANR	6155817	Argument	NULL		6155685	2					
ANR	6155818	Identifier	NULL		6155685	0					
ANR	6155819	IfStatement	if ( ret != KD_E_OK )		6155685	12					
ANR	6155820	Condition	ret != KD_E_OK	839:5:19147:19160	6155685	0	True				
ANR	6155821	EqualityExpression	ret != KD_E_OK		6155685	0		!=			
ANR	6155822	Identifier	ret		6155685	0					
ANR	6155823	Identifier	KD_E_OK		6155685	1					
ANR	6155824	CompoundStatement		25:21:587:587	6155685	1					
ANR	6155825	ReturnStatement	return 0 ;	840:2:19167:19175	6155685	0	True				
ANR	6155826	PrimaryExpression	0		6155685	0					
ANR	6155827	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	843:1:19182:19251	6155685	13	True				
ANR	6155828	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6155685	0		=			
ANR	6155829	Identifier	ret		6155685	0					
ANR	6155830	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6155685	1					
ANR	6155831	Callee	windbg_wait_packet		6155685	0					
ANR	6155832	Identifier	windbg_wait_packet		6155685	0					
ANR	6155833	ArgumentList	ctx		6155685	1					
ANR	6155834	Argument	ctx		6155685	0					
ANR	6155835	Identifier	ctx		6155685	0					
ANR	6155836	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6155685	1					
ANR	6155837	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6155685	0					
ANR	6155838	Argument	& pkt		6155685	2					
ANR	6155839	UnaryOperationExpression	& pkt		6155685	0					
ANR	6155840	UnaryOperator	&		6155685	0					
ANR	6155841	Identifier	pkt		6155685	1					
ANR	6155842	IfStatement	if ( ret != KD_E_OK )		6155685	14					
ANR	6155843	Condition	ret != KD_E_OK	844:5:19258:19271	6155685	0	True				
ANR	6155844	EqualityExpression	ret != KD_E_OK		6155685	0		!=			
ANR	6155845	Identifier	ret		6155685	0					
ANR	6155846	Identifier	KD_E_OK		6155685	1					
ANR	6155847	CompoundStatement		30:21:698:698	6155685	1					
ANR	6155848	ReturnStatement	return 0 ;	845:2:19278:19286	6155685	0	True				
ANR	6155849	PrimaryExpression	0		6155685	0					
ANR	6155850	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	848:1:19293:19321	6155685	15	True				
ANR	6155851	IdentifierDecl	* rr = PKT_REQ ( pkt )		6155685	0					
ANR	6155852	IdentifierDeclType	kd_req_t *		6155685	0					
ANR	6155853	Identifier	rr		6155685	1					
ANR	6155854	AssignmentExpression	* rr = PKT_REQ ( pkt )		6155685	2		=			
ANR	6155855	Identifier	rr		6155685	0					
ANR	6155856	CallExpression	PKT_REQ ( pkt )		6155685	1					
ANR	6155857	Callee	PKT_REQ		6155685	0					
ANR	6155858	Identifier	PKT_REQ		6155685	0					
ANR	6155859	ArgumentList	pkt		6155685	1					
ANR	6155860	Argument	pkt		6155685	0					
ANR	6155861	Identifier	pkt		6155685	0					
ANR	6155862	IfStatement	if ( rr -> ret )		6155685	16					
ANR	6155863	Condition	rr -> ret	850:5:19329:19335	6155685	0	True				
ANR	6155864	PtrMemberAccess	rr -> ret		6155685	0					
ANR	6155865	Identifier	rr		6155685	0					
ANR	6155866	Identifier	ret		6155685	1					
ANR	6155867	CompoundStatement		36:14:762:762	6155685	1					
ANR	6155868	ExpressionStatement	free ( pkt )	851:2:19342:19352	6155685	0	True				
ANR	6155869	CallExpression	free ( pkt )		6155685	0					
ANR	6155870	Callee	free		6155685	0					
ANR	6155871	Identifier	free		6155685	0					
ANR	6155872	ArgumentList	pkt		6155685	1					
ANR	6155873	Argument	pkt		6155685	0					
ANR	6155874	Identifier	pkt		6155685	0					
ANR	6155875	ReturnStatement	return 0 ;	852:2:19356:19364	6155685	1	True				
ANR	6155876	PrimaryExpression	0		6155685	0					
ANR	6155877	IfStatement	if ( address_space )		6155685	17					
ANR	6155878	Condition	address_space	855:5:19375:19387	6155685	0	True				
ANR	6155879	Identifier	address_space		6155685	0					
ANR	6155880	CompoundStatement		41:20:814:814	6155685	1					
ANR	6155881	ExpressionStatement	* address_space = rr -> r_query_mem . address_space	856:2:19394:19440	6155685	0	True				
ANR	6155882	AssignmentExpression	* address_space = rr -> r_query_mem . address_space		6155685	0		=			
ANR	6155883	UnaryOperationExpression	* address_space		6155685	0					
ANR	6155884	UnaryOperator	*		6155685	0					
ANR	6155885	Identifier	address_space		6155685	1					
ANR	6155886	MemberAccess	rr -> r_query_mem . address_space		6155685	1					
ANR	6155887	PtrMemberAccess	rr -> r_query_mem		6155685	0					
ANR	6155888	Identifier	rr		6155685	0					
ANR	6155889	Identifier	r_query_mem		6155685	1					
ANR	6155890	Identifier	address_space		6155685	1					
ANR	6155891	IfStatement	if ( flags )		6155685	18					
ANR	6155892	Condition	flags	858:5:19450:19454	6155685	0	True				
ANR	6155893	Identifier	flags		6155685	0					
ANR	6155894	CompoundStatement		44:12:881:881	6155685	1					
ANR	6155895	ExpressionStatement	* flags = rr -> r_query_mem . flags	859:2:19461:19491	6155685	0	True				
ANR	6155896	AssignmentExpression	* flags = rr -> r_query_mem . flags		6155685	0		=			
ANR	6155897	UnaryOperationExpression	* flags		6155685	0					
ANR	6155898	UnaryOperator	*		6155685	0					
ANR	6155899	Identifier	flags		6155685	1					
ANR	6155900	MemberAccess	rr -> r_query_mem . flags		6155685	1					
ANR	6155901	PtrMemberAccess	rr -> r_query_mem		6155685	0					
ANR	6155902	Identifier	rr		6155685	0					
ANR	6155903	Identifier	r_query_mem		6155685	1					
ANR	6155904	Identifier	flags		6155685	1					
ANR	6155905	ExpressionStatement	free ( pkt )	862:1:19498:19508	6155685	19	True				
ANR	6155906	CallExpression	free ( pkt )		6155685	0					
ANR	6155907	Callee	free		6155685	0					
ANR	6155908	Identifier	free		6155685	0					
ANR	6155909	ArgumentList	pkt		6155685	1					
ANR	6155910	Argument	pkt		6155685	0					
ANR	6155911	Identifier	pkt		6155685	0					
ANR	6155912	ReturnStatement	return ret ;	864:1:19512:19522	6155685	20	True				
ANR	6155913	Identifier	ret		6155685	0					
ANR	6155914	ReturnType	int		6155685	1					
ANR	6155915	Identifier	windbg_query_mem		6155685	2					
ANR	6155916	ParameterList	"WindCtx * ctx , const ut64 addr , int * address_space , int * flags"		6155685	3					
ANR	6155917	Parameter	WindCtx * ctx	815:21:18512:18523	6155685	0	True				
ANR	6155918	ParameterType	WindCtx *		6155685	0					
ANR	6155919	Identifier	ctx		6155685	1					
ANR	6155920	Parameter	const ut64 addr	815:35:18526:18540	6155685	1	True				
ANR	6155921	ParameterType	const ut64		6155685	0					
ANR	6155922	Identifier	addr		6155685	1					
ANR	6155923	Parameter	int * address_space	815:52:18543:18560	6155685	2	True				
ANR	6155924	ParameterType	int *		6155685	0					
ANR	6155925	Identifier	address_space		6155685	1					
ANR	6155926	Parameter	int * flags	815:72:18563:18572	6155685	3	True				
ANR	6155927	ParameterType	int *		6155685	0					
ANR	6155928	Identifier	flags		6155685	1					
ANR	6155929	CFGEntryNode	ENTRY		6155685		True				
ANR	6155930	CFGExitNode	EXIT		6155685		True				
ANR	6155931	Symbol	rr		6155685						
ANR	6155932	Symbol	* address_space		6155685						
ANR	6155933	Symbol	PKT_REQ		6155685						
ANR	6155934	Symbol	& req		6155685						
ANR	6155935	Symbol	rr -> r_query_mem . flags		6155685						
ANR	6155936	Symbol	flags		6155685						
ANR	6155937	Symbol	req . req		6155685						
ANR	6155938	Symbol	req . r_query_mem . address_space		6155685						
ANR	6155939	Symbol	ctx -> cpu		6155685						
ANR	6155940	Symbol	req . cpu		6155685						
ANR	6155941	Symbol	pkt		6155685						
ANR	6155942	Symbol	rr -> ret		6155685						
ANR	6155943	Symbol	windbg_wait_packet		6155685						
ANR	6155944	Symbol	addr		6155685						
ANR	6155945	Symbol	rr -> r_query_mem		6155685						
ANR	6155946	Symbol	ctx -> syncd		6155685						
ANR	6155947	Symbol	req		6155685						
ANR	6155948	Symbol	ret		6155685						
ANR	6155949	Symbol	DbgKdQueryMemoryApi		6155685						
ANR	6155950	Symbol	kd_send_data_packet		6155685						
ANR	6155951	Symbol	* flags		6155685						
ANR	6155952	Symbol	NULL		6155685						
ANR	6155953	Symbol	KD_E_OK		6155685						
ANR	6155954	Symbol	* rr		6155685						
ANR	6155955	Symbol	ctx		6155685						
ANR	6155956	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6155685						
ANR	6155957	Symbol	* ctx		6155685						
ANR	6155958	Symbol	ctx -> io_ptr		6155685						
ANR	6155959	Symbol	req . r_query_mem		6155685						
ANR	6155960	Symbol	rr -> r_query_mem . address_space		6155685						
ANR	6155961	Symbol	ctx -> seq_id		6155685						
ANR	6155962	Symbol	address_space		6155685						
ANR	6155963	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6155685						
ANR	6155964	Symbol	& pkt		6155685						
ANR	6155965	Symbol	req . r_query_mem . addr		6155685						
ANR	6155966	Function	windbg_bkpt	868:0:19528:20463							
ANR	6155967	FunctionDef	"windbg_bkpt (WindCtx * ctx , const ut64 addr , const int set , const int hw , int * handle)"		6155966	0					
ANR	6155968	CompoundStatement		868:89:19617:20463	6155966	0					
ANR	6155969	IdentifierDeclStatement	kd_req_t req = { 0 } ;	869:1:19620:19643	6155966	0	True				
ANR	6155970	IdentifierDecl	req = { 0 }		6155966	0					
ANR	6155971	IdentifierDeclType	kd_req_t		6155966	0					
ANR	6155972	Identifier	req		6155966	1					
ANR	6155973	AssignmentExpression	req = { 0 }		6155966	2		=			
ANR	6155974	Identifier	req		6155966	0					
ANR	6155975	InitializerList	0		6155966	1					
ANR	6155976	PrimaryExpression	0		6155966	0					
ANR	6155977	IdentifierDeclStatement	kd_packet_t * pkt ;	872:1:19646:19662	6155966	1	True				
ANR	6155978	IdentifierDecl	* pkt		6155966	0					
ANR	6155979	IdentifierDeclType	kd_packet_t *		6155966	0					
ANR	6155980	Identifier	pkt		6155966	1					
ANR	6155981	IdentifierDeclStatement	int ret ;	873:1:19665:19672	6155966	2	True				
ANR	6155982	IdentifierDecl	ret		6155966	0					
ANR	6155983	IdentifierDeclType	int		6155966	0					
ANR	6155984	Identifier	ret		6155966	1					
ANR	6155985	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6155966	3					
ANR	6155986	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	875:5:19680:19714	6155966	0	True				
ANR	6155987	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6155966	0		||			
ANR	6155988	UnaryOperationExpression	! ctx		6155966	0					
ANR	6155989	UnaryOperator	!		6155966	0					
ANR	6155990	Identifier	ctx		6155966	1					
ANR	6155991	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6155966	1		||			
ANR	6155992	UnaryOperationExpression	! ctx -> io_ptr		6155966	0					
ANR	6155993	UnaryOperator	!		6155966	0					
ANR	6155994	PtrMemberAccess	ctx -> io_ptr		6155966	1					
ANR	6155995	Identifier	ctx		6155966	0					
ANR	6155996	Identifier	io_ptr		6155966	1					
ANR	6155997	UnaryOperationExpression	! ctx -> syncd		6155966	1					
ANR	6155998	UnaryOperator	!		6155966	0					
ANR	6155999	PtrMemberAccess	ctx -> syncd		6155966	1					
ANR	6156000	Identifier	ctx		6155966	0					
ANR	6156001	Identifier	syncd		6155966	1					
ANR	6156002	CompoundStatement		8:42:99:99	6155966	1					
ANR	6156003	ReturnStatement	return 0 ;	876:2:19721:19729	6155966	0	True				
ANR	6156004	PrimaryExpression	0		6155966	0					
ANR	6156005	ExpressionStatement	req . req = set ? DbgKdWriteBreakPointApi : DbgKdRestoreBreakPointApi	879:1:19736:19801	6155966	4	True				
ANR	6156006	AssignmentExpression	req . req = set ? DbgKdWriteBreakPointApi : DbgKdRestoreBreakPointApi		6155966	0		=			
ANR	6156007	MemberAccess	req . req		6155966	0					
ANR	6156008	Identifier	req		6155966	0					
ANR	6156009	Identifier	req		6155966	1					
ANR	6156010	ConditionalExpression	set ? DbgKdWriteBreakPointApi : DbgKdRestoreBreakPointApi		6155966	1					
ANR	6156011	Condition	set		6155966	0					
ANR	6156012	Identifier	set		6155966	0					
ANR	6156013	Identifier	DbgKdWriteBreakPointApi		6155966	1					
ANR	6156014	Identifier	DbgKdRestoreBreakPointApi		6155966	2					
ANR	6156015	ExpressionStatement	req . cpu = ctx -> cpu	880:1:19804:19822	6155966	5	True				
ANR	6156016	AssignmentExpression	req . cpu = ctx -> cpu		6155966	0		=			
ANR	6156017	MemberAccess	req . cpu		6155966	0					
ANR	6156018	Identifier	req		6155966	0					
ANR	6156019	Identifier	cpu		6155966	1					
ANR	6156020	PtrMemberAccess	ctx -> cpu		6155966	1					
ANR	6156021	Identifier	ctx		6155966	0					
ANR	6156022	Identifier	cpu		6155966	1					
ANR	6156023	IfStatement	if ( set )		6155966	6					
ANR	6156024	Condition	set	882:5:19830:19832	6155966	0	True				
ANR	6156025	Identifier	set		6155966	0					
ANR	6156026	CompoundStatement		15:10:217:217	6155966	1					
ANR	6156027	ExpressionStatement	req . r_set_bp . addr = addr	883:2:19839:19863	6155966	0	True				
ANR	6156028	AssignmentExpression	req . r_set_bp . addr = addr		6155966	0		=			
ANR	6156029	MemberAccess	req . r_set_bp . addr		6155966	0					
ANR	6156030	MemberAccess	req . r_set_bp		6155966	0					
ANR	6156031	Identifier	req		6155966	0					
ANR	6156032	Identifier	r_set_bp		6155966	1					
ANR	6156033	Identifier	addr		6155966	1					
ANR	6156034	Identifier	addr		6155966	1					
ANR	6156035	ElseStatement	else		6155966	0					
ANR	6156036	CompoundStatement		17:8:255:255	6155966	0					
ANR	6156037	ExpressionStatement	req . r_del_bp . handle = * handle	885:2:19877:19906	6155966	0	True				
ANR	6156038	AssignmentExpression	req . r_del_bp . handle = * handle		6155966	0		=			
ANR	6156039	MemberAccess	req . r_del_bp . handle		6155966	0					
ANR	6156040	MemberAccess	req . r_del_bp		6155966	0					
ANR	6156041	Identifier	req		6155966	0					
ANR	6156042	Identifier	r_del_bp		6155966	1					
ANR	6156043	Identifier	handle		6155966	1					
ANR	6156044	UnaryOperationExpression	* handle		6155966	1					
ANR	6156045	UnaryOperator	*		6155966	0					
ANR	6156046	Identifier	handle		6155966	1					
ANR	6156047	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	888:1:19913:20052	6155966	7	True				
ANR	6156048	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6155966	0		=			
ANR	6156049	Identifier	ret		6155966	0					
ANR	6156050	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6155966	1					
ANR	6156051	Callee	kd_send_data_packet		6155966	0					
ANR	6156052	Identifier	kd_send_data_packet		6155966	0					
ANR	6156053	ArgumentList	ctx -> io_ptr		6155966	1					
ANR	6156054	Argument	ctx -> io_ptr		6155966	0					
ANR	6156055	PtrMemberAccess	ctx -> io_ptr		6155966	0					
ANR	6156056	Identifier	ctx		6155966	0					
ANR	6156057	Identifier	io_ptr		6155966	1					
ANR	6156058	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6155966	1					
ANR	6156059	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6155966	0					
ANR	6156060	Argument	ctx -> seq_id ^= 1		6155966	2					
ANR	6156061	AssignmentExpression	ctx -> seq_id ^= 1		6155966	0		^=			
ANR	6156062	PtrMemberAccess	ctx -> seq_id		6155966	0					
ANR	6156063	Identifier	ctx		6155966	0					
ANR	6156064	Identifier	seq_id		6155966	1					
ANR	6156065	PrimaryExpression	1		6155966	1					
ANR	6156066	Argument	( uint8_t * ) & req		6155966	3					
ANR	6156067	CastExpression	( uint8_t * ) & req		6155966	0					
ANR	6156068	CastTarget	uint8_t *		6155966	0					
ANR	6156069	UnaryOperationExpression	& req		6155966	1					
ANR	6156070	UnaryOperator	&		6155966	0					
ANR	6156071	Identifier	req		6155966	1					
ANR	6156072	Argument	sizeof ( kd_req_t )		6155966	4					
ANR	6156073	SizeofExpression	sizeof ( kd_req_t )		6155966	0					
ANR	6156074	Sizeof	sizeof		6155966	0					
ANR	6156075	SizeofOperand	kd_req_t		6155966	1					
ANR	6156076	Argument	NULL		6155966	5					
ANR	6156077	Identifier	NULL		6155966	0					
ANR	6156078	Argument	0		6155966	6					
ANR	6156079	PrimaryExpression	0		6155966	0					
ANR	6156080	IfStatement	if ( ret != KD_E_OK )		6155966	8					
ANR	6156081	Condition	ret != KD_E_OK	890:5:20059:20072	6155966	0	True				
ANR	6156082	EqualityExpression	ret != KD_E_OK		6155966	0		!=			
ANR	6156083	Identifier	ret		6155966	0					
ANR	6156084	Identifier	KD_E_OK		6155966	1					
ANR	6156085	CompoundStatement		23:21:457:457	6155966	1					
ANR	6156086	ReturnStatement	return 0 ;	891:2:20079:20087	6155966	0	True				
ANR	6156087	PrimaryExpression	0		6155966	0					
ANR	6156088	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	894:1:20094:20158	6155966	9	True				
ANR	6156089	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6155966	0		=			
ANR	6156090	Identifier	ret		6155966	0					
ANR	6156091	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6155966	1					
ANR	6156092	Callee	windbg_wait_packet		6155966	0					
ANR	6156093	Identifier	windbg_wait_packet		6155966	0					
ANR	6156094	ArgumentList	ctx		6155966	1					
ANR	6156095	Argument	ctx		6155966	0					
ANR	6156096	Identifier	ctx		6155966	0					
ANR	6156097	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6155966	1					
ANR	6156098	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6155966	0					
ANR	6156099	Argument	NULL		6155966	2					
ANR	6156100	Identifier	NULL		6155966	0					
ANR	6156101	IfStatement	if ( ret != KD_E_OK )		6155966	10					
ANR	6156102	Condition	ret != KD_E_OK	895:5:20165:20178	6155966	0	True				
ANR	6156103	EqualityExpression	ret != KD_E_OK		6155966	0		!=			
ANR	6156104	Identifier	ret		6155966	0					
ANR	6156105	Identifier	KD_E_OK		6155966	1					
ANR	6156106	CompoundStatement		28:21:563:563	6155966	1					
ANR	6156107	ReturnStatement	return 0 ;	896:2:20185:20193	6155966	0	True				
ANR	6156108	PrimaryExpression	0		6155966	0					
ANR	6156109	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	899:1:20200:20269	6155966	11	True				
ANR	6156110	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6155966	0		=			
ANR	6156111	Identifier	ret		6155966	0					
ANR	6156112	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6155966	1					
ANR	6156113	Callee	windbg_wait_packet		6155966	0					
ANR	6156114	Identifier	windbg_wait_packet		6155966	0					
ANR	6156115	ArgumentList	ctx		6155966	1					
ANR	6156116	Argument	ctx		6155966	0					
ANR	6156117	Identifier	ctx		6155966	0					
ANR	6156118	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6155966	1					
ANR	6156119	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6155966	0					
ANR	6156120	Argument	& pkt		6155966	2					
ANR	6156121	UnaryOperationExpression	& pkt		6155966	0					
ANR	6156122	UnaryOperator	&		6155966	0					
ANR	6156123	Identifier	pkt		6155966	1					
ANR	6156124	IfStatement	if ( ret != KD_E_OK )		6155966	12					
ANR	6156125	Condition	ret != KD_E_OK	900:5:20276:20289	6155966	0	True				
ANR	6156126	EqualityExpression	ret != KD_E_OK		6155966	0		!=			
ANR	6156127	Identifier	ret		6155966	0					
ANR	6156128	Identifier	KD_E_OK		6155966	1					
ANR	6156129	CompoundStatement		33:21:674:674	6155966	1					
ANR	6156130	ReturnStatement	return 0 ;	901:2:20296:20304	6155966	0	True				
ANR	6156131	PrimaryExpression	0		6155966	0					
ANR	6156132	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	904:1:20311:20339	6155966	13	True				
ANR	6156133	IdentifierDecl	* rr = PKT_REQ ( pkt )		6155966	0					
ANR	6156134	IdentifierDeclType	kd_req_t *		6155966	0					
ANR	6156135	Identifier	rr		6155966	1					
ANR	6156136	AssignmentExpression	* rr = PKT_REQ ( pkt )		6155966	2		=			
ANR	6156137	Identifier	rr		6155966	0					
ANR	6156138	CallExpression	PKT_REQ ( pkt )		6155966	1					
ANR	6156139	Callee	PKT_REQ		6155966	0					
ANR	6156140	Identifier	PKT_REQ		6155966	0					
ANR	6156141	ArgumentList	pkt		6155966	1					
ANR	6156142	Argument	pkt		6155966	0					
ANR	6156143	Identifier	pkt		6155966	0					
ANR	6156144	IfStatement	if ( rr -> ret )		6155966	14					
ANR	6156145	Condition	rr -> ret	906:5:20347:20353	6155966	0	True				
ANR	6156146	PtrMemberAccess	rr -> ret		6155966	0					
ANR	6156147	Identifier	rr		6155966	0					
ANR	6156148	Identifier	ret		6155966	1					
ANR	6156149	CompoundStatement		39:14:738:738	6155966	1					
ANR	6156150	ExpressionStatement	free ( pkt )	907:2:20360:20370	6155966	0	True				
ANR	6156151	CallExpression	free ( pkt )		6155966	0					
ANR	6156152	Callee	free		6155966	0					
ANR	6156153	Identifier	free		6155966	0					
ANR	6156154	ArgumentList	pkt		6155966	1					
ANR	6156155	Argument	pkt		6155966	0					
ANR	6156156	Identifier	pkt		6155966	0					
ANR	6156157	ReturnStatement	return 0 ;	908:2:20374:20382	6155966	1	True				
ANR	6156158	PrimaryExpression	0		6155966	0					
ANR	6156159	ExpressionStatement	* handle = rr -> r_set_bp . handle	910:1:20388:20417	6155966	15	True				
ANR	6156160	AssignmentExpression	* handle = rr -> r_set_bp . handle		6155966	0		=			
ANR	6156161	UnaryOperationExpression	* handle		6155966	0					
ANR	6156162	UnaryOperator	*		6155966	0					
ANR	6156163	Identifier	handle		6155966	1					
ANR	6156164	MemberAccess	rr -> r_set_bp . handle		6155966	1					
ANR	6156165	PtrMemberAccess	rr -> r_set_bp		6155966	0					
ANR	6156166	Identifier	rr		6155966	0					
ANR	6156167	Identifier	r_set_bp		6155966	1					
ANR	6156168	Identifier	handle		6155966	1					
ANR	6156169	ExpressionStatement	ret = ! ! rr -> ret	911:1:20420:20435	6155966	16	True				
ANR	6156170	AssignmentExpression	ret = ! ! rr -> ret		6155966	0		=			
ANR	6156171	Identifier	ret		6155966	0					
ANR	6156172	UnaryOperationExpression	! ! rr -> ret		6155966	1					
ANR	6156173	UnaryOperator	!		6155966	0					
ANR	6156174	UnaryOperationExpression	! rr -> ret		6155966	1					
ANR	6156175	UnaryOperator	!		6155966	0					
ANR	6156176	PtrMemberAccess	rr -> ret		6155966	1					
ANR	6156177	Identifier	rr		6155966	0					
ANR	6156178	Identifier	ret		6155966	1					
ANR	6156179	ExpressionStatement	free ( pkt )	912:1:20438:20448	6155966	17	True				
ANR	6156180	CallExpression	free ( pkt )		6155966	0					
ANR	6156181	Callee	free		6155966	0					
ANR	6156182	Identifier	free		6155966	0					
ANR	6156183	ArgumentList	pkt		6155966	1					
ANR	6156184	Argument	pkt		6155966	0					
ANR	6156185	Identifier	pkt		6155966	0					
ANR	6156186	ReturnStatement	return ret ;	913:1:20451:20461	6155966	18	True				
ANR	6156187	Identifier	ret		6155966	0					
ANR	6156188	ReturnType	int		6155966	1					
ANR	6156189	Identifier	windbg_bkpt		6155966	2					
ANR	6156190	ParameterList	"WindCtx * ctx , const ut64 addr , const int set , const int hw , int * handle"		6155966	3					
ANR	6156191	Parameter	WindCtx * ctx	868:16:19544:19555	6155966	0	True				
ANR	6156192	ParameterType	WindCtx *		6155966	0					
ANR	6156193	Identifier	ctx		6155966	1					
ANR	6156194	Parameter	const ut64 addr	868:30:19558:19572	6155966	1	True				
ANR	6156195	ParameterType	const ut64		6155966	0					
ANR	6156196	Identifier	addr		6155966	1					
ANR	6156197	Parameter	const int set	868:47:19575:19587	6155966	2	True				
ANR	6156198	ParameterType	const int		6155966	0					
ANR	6156199	Identifier	set		6155966	1					
ANR	6156200	Parameter	const int hw	868:62:19590:19601	6155966	3	True				
ANR	6156201	ParameterType	const int		6155966	0					
ANR	6156202	Identifier	hw		6155966	1					
ANR	6156203	Parameter	int * handle	868:76:19604:19614	6155966	4	True				
ANR	6156204	ParameterType	int *		6155966	0					
ANR	6156205	Identifier	handle		6155966	1					
ANR	6156206	CFGEntryNode	ENTRY		6155966		True				
ANR	6156207	CFGExitNode	EXIT		6155966		True				
ANR	6156208	Symbol	rr		6155966						
ANR	6156209	Symbol	req . r_set_bp		6155966						
ANR	6156210	Symbol	PKT_REQ		6155966						
ANR	6156211	Symbol	& req		6155966						
ANR	6156212	Symbol	DbgKdWriteBreakPointApi		6155966						
ANR	6156213	Symbol	req . req		6155966						
ANR	6156214	Symbol	hw		6155966						
ANR	6156215	Symbol	ctx -> cpu		6155966						
ANR	6156216	Symbol	req . cpu		6155966						
ANR	6156217	Symbol	pkt		6155966						
ANR	6156218	Symbol	rr -> ret		6155966						
ANR	6156219	Symbol	windbg_wait_packet		6155966						
ANR	6156220	Symbol	addr		6155966						
ANR	6156221	Symbol	ctx -> syncd		6155966						
ANR	6156222	Symbol	req		6155966						
ANR	6156223	Symbol	ret		6155966						
ANR	6156224	Symbol	rr -> r_set_bp . handle		6155966						
ANR	6156225	Symbol	kd_send_data_packet		6155966						
ANR	6156226	Symbol	set		6155966						
ANR	6156227	Symbol	NULL		6155966						
ANR	6156228	Symbol	KD_E_OK		6155966						
ANR	6156229	Symbol	* handle		6155966						
ANR	6156230	Symbol	* rr		6155966						
ANR	6156231	Symbol	ctx		6155966						
ANR	6156232	Symbol	handle		6155966						
ANR	6156233	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6155966						
ANR	6156234	Symbol	req . r_del_bp . handle		6155966						
ANR	6156235	Symbol	* ctx		6155966						
ANR	6156236	Symbol	ctx -> io_ptr		6155966						
ANR	6156237	Symbol	req . r_del_bp		6155966						
ANR	6156238	Symbol	rr -> r_set_bp		6155966						
ANR	6156239	Symbol	ctx -> seq_id		6155966						
ANR	6156240	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6155966						
ANR	6156241	Symbol	& pkt		6155966						
ANR	6156242	Symbol	req . r_set_bp . addr		6155966						
ANR	6156243	Symbol	DbgKdRestoreBreakPointApi		6155966						
ANR	6156244	Function	windbg_read_at_phys	916:0:20466:21417							
ANR	6156245	FunctionDef	"windbg_read_at_phys (WindCtx * ctx , uint8_t * buf , const ut64 offset , const int count)"		6156244	0					
ANR	6156246	CompoundStatement		916:88:20554:21417	6156244	0					
ANR	6156247	IdentifierDeclStatement	"kd_req_t req = { 0 } , * rr ;"	917:1:20557:20585	6156244	0	True				
ANR	6156248	IdentifierDecl	req = { 0 }		6156244	0					
ANR	6156249	IdentifierDeclType	kd_req_t		6156244	0					
ANR	6156250	Identifier	req		6156244	1					
ANR	6156251	AssignmentExpression	req = { 0 }		6156244	2		=			
ANR	6156252	Identifier	req		6156244	0					
ANR	6156253	InitializerList	0		6156244	1					
ANR	6156254	PrimaryExpression	0		6156244	0					
ANR	6156255	IdentifierDecl	* rr		6156244	1					
ANR	6156256	IdentifierDeclType	kd_req_t *		6156244	0					
ANR	6156257	Identifier	rr		6156244	1					
ANR	6156258	IdentifierDeclStatement	kd_packet_t * pkt ;	920:1:20588:20604	6156244	1	True				
ANR	6156259	IdentifierDecl	* pkt		6156244	0					
ANR	6156260	IdentifierDeclType	kd_packet_t *		6156244	0					
ANR	6156261	Identifier	pkt		6156244	1					
ANR	6156262	IdentifierDeclStatement	int ret ;	921:1:20607:20614	6156244	2	True				
ANR	6156263	IdentifierDecl	ret		6156244	0					
ANR	6156264	IdentifierDeclType	int		6156244	0					
ANR	6156265	Identifier	ret		6156244	1					
ANR	6156266	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6156244	3					
ANR	6156267	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	923:5:20622:20656	6156244	0	True				
ANR	6156268	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6156244	0		||			
ANR	6156269	UnaryOperationExpression	! ctx		6156244	0					
ANR	6156270	UnaryOperator	!		6156244	0					
ANR	6156271	Identifier	ctx		6156244	1					
ANR	6156272	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6156244	1		||			
ANR	6156273	UnaryOperationExpression	! ctx -> io_ptr		6156244	0					
ANR	6156274	UnaryOperator	!		6156244	0					
ANR	6156275	PtrMemberAccess	ctx -> io_ptr		6156244	1					
ANR	6156276	Identifier	ctx		6156244	0					
ANR	6156277	Identifier	io_ptr		6156244	1					
ANR	6156278	UnaryOperationExpression	! ctx -> syncd		6156244	1					
ANR	6156279	UnaryOperator	!		6156244	0					
ANR	6156280	PtrMemberAccess	ctx -> syncd		6156244	1					
ANR	6156281	Identifier	ctx		6156244	0					
ANR	6156282	Identifier	syncd		6156244	1					
ANR	6156283	CompoundStatement		8:42:104:104	6156244	1					
ANR	6156284	ReturnStatement	return 0 ;	924:2:20663:20671	6156244	0	True				
ANR	6156285	PrimaryExpression	0		6156244	0					
ANR	6156286	ExpressionStatement	req . req = DbgKdReadPhysicalMemoryApi	926:1:20677:20713	6156244	4	True				
ANR	6156287	AssignmentExpression	req . req = DbgKdReadPhysicalMemoryApi		6156244	0		=			
ANR	6156288	MemberAccess	req . req		6156244	0					
ANR	6156289	Identifier	req		6156244	0					
ANR	6156290	Identifier	req		6156244	1					
ANR	6156291	Identifier	DbgKdReadPhysicalMemoryApi		6156244	1					
ANR	6156292	ExpressionStatement	req . cpu = ctx -> cpu	927:1:20716:20734	6156244	5	True				
ANR	6156293	AssignmentExpression	req . cpu = ctx -> cpu		6156244	0		=			
ANR	6156294	MemberAccess	req . cpu		6156244	0					
ANR	6156295	Identifier	req		6156244	0					
ANR	6156296	Identifier	cpu		6156244	1					
ANR	6156297	PtrMemberAccess	ctx -> cpu		6156244	1					
ANR	6156298	Identifier	ctx		6156244	0					
ANR	6156299	Identifier	cpu		6156244	1					
ANR	6156300	ExpressionStatement	req . r_mem . addr = offset	928:1:20737:20760	6156244	6	True				
ANR	6156301	AssignmentExpression	req . r_mem . addr = offset		6156244	0		=			
ANR	6156302	MemberAccess	req . r_mem . addr		6156244	0					
ANR	6156303	MemberAccess	req . r_mem		6156244	0					
ANR	6156304	Identifier	req		6156244	0					
ANR	6156305	Identifier	r_mem		6156244	1					
ANR	6156306	Identifier	addr		6156244	1					
ANR	6156307	Identifier	offset		6156244	1					
ANR	6156308	ExpressionStatement	"req . r_mem . length = R_MIN ( count , KD_MAX_PAYLOAD )"	929:1:20763:20811	6156244	7	True				
ANR	6156309	AssignmentExpression	"req . r_mem . length = R_MIN ( count , KD_MAX_PAYLOAD )"		6156244	0		=			
ANR	6156310	MemberAccess	req . r_mem . length		6156244	0					
ANR	6156311	MemberAccess	req . r_mem		6156244	0					
ANR	6156312	Identifier	req		6156244	0					
ANR	6156313	Identifier	r_mem		6156244	1					
ANR	6156314	Identifier	length		6156244	1					
ANR	6156315	CallExpression	"R_MIN ( count , KD_MAX_PAYLOAD )"		6156244	1					
ANR	6156316	Callee	R_MIN		6156244	0					
ANR	6156317	Identifier	R_MIN		6156244	0					
ANR	6156318	ArgumentList	count		6156244	1					
ANR	6156319	Argument	count		6156244	0					
ANR	6156320	Identifier	count		6156244	0					
ANR	6156321	Argument	KD_MAX_PAYLOAD		6156244	1					
ANR	6156322	Identifier	KD_MAX_PAYLOAD		6156244	0					
ANR	6156323	ExpressionStatement	req . r_mem . read = 0	930:1:20814:20832	6156244	8	True				
ANR	6156324	AssignmentExpression	req . r_mem . read = 0		6156244	0		=			
ANR	6156325	MemberAccess	req . r_mem . read		6156244	0					
ANR	6156326	MemberAccess	req . r_mem		6156244	0					
ANR	6156327	Identifier	req		6156244	0					
ANR	6156328	Identifier	r_mem		6156244	1					
ANR	6156329	Identifier	read		6156244	1					
ANR	6156330	PrimaryExpression	0		6156244	1					
ANR	6156331	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	932:1:20862:21001	6156244	9	True				
ANR	6156332	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6156244	0		=			
ANR	6156333	Identifier	ret		6156244	0					
ANR	6156334	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6156244	1					
ANR	6156335	Callee	kd_send_data_packet		6156244	0					
ANR	6156336	Identifier	kd_send_data_packet		6156244	0					
ANR	6156337	ArgumentList	ctx -> io_ptr		6156244	1					
ANR	6156338	Argument	ctx -> io_ptr		6156244	0					
ANR	6156339	PtrMemberAccess	ctx -> io_ptr		6156244	0					
ANR	6156340	Identifier	ctx		6156244	0					
ANR	6156341	Identifier	io_ptr		6156244	1					
ANR	6156342	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6156244	1					
ANR	6156343	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6156244	0					
ANR	6156344	Argument	ctx -> seq_id ^= 1		6156244	2					
ANR	6156345	AssignmentExpression	ctx -> seq_id ^= 1		6156244	0		^=			
ANR	6156346	PtrMemberAccess	ctx -> seq_id		6156244	0					
ANR	6156347	Identifier	ctx		6156244	0					
ANR	6156348	Identifier	seq_id		6156244	1					
ANR	6156349	PrimaryExpression	1		6156244	1					
ANR	6156350	Argument	( uint8_t * ) & req		6156244	3					
ANR	6156351	CastExpression	( uint8_t * ) & req		6156244	0					
ANR	6156352	CastTarget	uint8_t *		6156244	0					
ANR	6156353	UnaryOperationExpression	& req		6156244	1					
ANR	6156354	UnaryOperator	&		6156244	0					
ANR	6156355	Identifier	req		6156244	1					
ANR	6156356	Argument	sizeof ( kd_req_t )		6156244	4					
ANR	6156357	SizeofExpression	sizeof ( kd_req_t )		6156244	0					
ANR	6156358	Sizeof	sizeof		6156244	0					
ANR	6156359	SizeofOperand	kd_req_t		6156244	1					
ANR	6156360	Argument	NULL		6156244	5					
ANR	6156361	Identifier	NULL		6156244	0					
ANR	6156362	Argument	0		6156244	6					
ANR	6156363	PrimaryExpression	0		6156244	0					
ANR	6156364	IfStatement	if ( ret != KD_E_OK )		6156244	10					
ANR	6156365	Condition	ret != KD_E_OK	934:5:21008:21021	6156244	0	True				
ANR	6156366	EqualityExpression	ret != KD_E_OK		6156244	0		!=			
ANR	6156367	Identifier	ret		6156244	0					
ANR	6156368	Identifier	KD_E_OK		6156244	1					
ANR	6156369	CompoundStatement		19:21:469:469	6156244	1					
ANR	6156370	ReturnStatement	return 0 ;	935:2:21028:21036	6156244	0	True				
ANR	6156371	PrimaryExpression	0		6156244	0					
ANR	6156372	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	938:1:21043:21107	6156244	11	True				
ANR	6156373	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6156244	0		=			
ANR	6156374	Identifier	ret		6156244	0					
ANR	6156375	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6156244	1					
ANR	6156376	Callee	windbg_wait_packet		6156244	0					
ANR	6156377	Identifier	windbg_wait_packet		6156244	0					
ANR	6156378	ArgumentList	ctx		6156244	1					
ANR	6156379	Argument	ctx		6156244	0					
ANR	6156380	Identifier	ctx		6156244	0					
ANR	6156381	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6156244	1					
ANR	6156382	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6156244	0					
ANR	6156383	Argument	NULL		6156244	2					
ANR	6156384	Identifier	NULL		6156244	0					
ANR	6156385	IfStatement	if ( ret != KD_E_OK )		6156244	12					
ANR	6156386	Condition	ret != KD_E_OK	939:5:21114:21127	6156244	0	True				
ANR	6156387	EqualityExpression	ret != KD_E_OK		6156244	0		!=			
ANR	6156388	Identifier	ret		6156244	0					
ANR	6156389	Identifier	KD_E_OK		6156244	1					
ANR	6156390	CompoundStatement		24:21:575:575	6156244	1					
ANR	6156391	ReturnStatement	return 0 ;	940:2:21134:21142	6156244	0	True				
ANR	6156392	PrimaryExpression	0		6156244	0					
ANR	6156393	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	943:1:21149:21218	6156244	13	True				
ANR	6156394	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6156244	0		=			
ANR	6156395	Identifier	ret		6156244	0					
ANR	6156396	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6156244	1					
ANR	6156397	Callee	windbg_wait_packet		6156244	0					
ANR	6156398	Identifier	windbg_wait_packet		6156244	0					
ANR	6156399	ArgumentList	ctx		6156244	1					
ANR	6156400	Argument	ctx		6156244	0					
ANR	6156401	Identifier	ctx		6156244	0					
ANR	6156402	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6156244	1					
ANR	6156403	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6156244	0					
ANR	6156404	Argument	& pkt		6156244	2					
ANR	6156405	UnaryOperationExpression	& pkt		6156244	0					
ANR	6156406	UnaryOperator	&		6156244	0					
ANR	6156407	Identifier	pkt		6156244	1					
ANR	6156408	IfStatement	if ( ret != KD_E_OK )		6156244	14					
ANR	6156409	Condition	ret != KD_E_OK	944:5:21225:21238	6156244	0	True				
ANR	6156410	EqualityExpression	ret != KD_E_OK		6156244	0		!=			
ANR	6156411	Identifier	ret		6156244	0					
ANR	6156412	Identifier	KD_E_OK		6156244	1					
ANR	6156413	CompoundStatement		29:21:686:686	6156244	1					
ANR	6156414	ReturnStatement	return 0 ;	945:2:21245:21253	6156244	0	True				
ANR	6156415	PrimaryExpression	0		6156244	0					
ANR	6156416	ExpressionStatement	rr = PKT_REQ ( pkt )	948:1:21260:21278	6156244	15	True				
ANR	6156417	AssignmentExpression	rr = PKT_REQ ( pkt )		6156244	0		=			
ANR	6156418	Identifier	rr		6156244	0					
ANR	6156419	CallExpression	PKT_REQ ( pkt )		6156244	1					
ANR	6156420	Callee	PKT_REQ		6156244	0					
ANR	6156421	Identifier	PKT_REQ		6156244	0					
ANR	6156422	ArgumentList	pkt		6156244	1					
ANR	6156423	Argument	pkt		6156244	0					
ANR	6156424	Identifier	pkt		6156244	0					
ANR	6156425	IfStatement	if ( rr -> ret )		6156244	16					
ANR	6156426	Condition	rr -> ret	950:5:21286:21292	6156244	0	True				
ANR	6156427	PtrMemberAccess	rr -> ret		6156244	0					
ANR	6156428	Identifier	rr		6156244	0					
ANR	6156429	Identifier	ret		6156244	1					
ANR	6156430	CompoundStatement		35:14:740:740	6156244	1					
ANR	6156431	ExpressionStatement	free ( pkt )	951:2:21299:21309	6156244	0	True				
ANR	6156432	CallExpression	free ( pkt )		6156244	0					
ANR	6156433	Callee	free		6156244	0					
ANR	6156434	Identifier	free		6156244	0					
ANR	6156435	ArgumentList	pkt		6156244	1					
ANR	6156436	Argument	pkt		6156244	0					
ANR	6156437	Identifier	pkt		6156244	0					
ANR	6156438	ReturnStatement	return 0 ;	952:2:21313:21321	6156244	1	True				
ANR	6156439	PrimaryExpression	0		6156244	0					
ANR	6156440	ExpressionStatement	"memcpy ( buf , rr -> data , rr -> r_mem . read )"	955:1:21328:21366	6156244	17	True				
ANR	6156441	CallExpression	"memcpy ( buf , rr -> data , rr -> r_mem . read )"		6156244	0					
ANR	6156442	Callee	memcpy		6156244	0					
ANR	6156443	Identifier	memcpy		6156244	0					
ANR	6156444	ArgumentList	buf		6156244	1					
ANR	6156445	Argument	buf		6156244	0					
ANR	6156446	Identifier	buf		6156244	0					
ANR	6156447	Argument	rr -> data		6156244	1					
ANR	6156448	PtrMemberAccess	rr -> data		6156244	0					
ANR	6156449	Identifier	rr		6156244	0					
ANR	6156450	Identifier	data		6156244	1					
ANR	6156451	Argument	rr -> r_mem . read		6156244	2					
ANR	6156452	MemberAccess	rr -> r_mem . read		6156244	0					
ANR	6156453	PtrMemberAccess	rr -> r_mem		6156244	0					
ANR	6156454	Identifier	rr		6156244	0					
ANR	6156455	Identifier	r_mem		6156244	1					
ANR	6156456	Identifier	read		6156244	1					
ANR	6156457	ExpressionStatement	ret = rr -> r_mem . read	956:1:21369:21389	6156244	18	True				
ANR	6156458	AssignmentExpression	ret = rr -> r_mem . read		6156244	0		=			
ANR	6156459	Identifier	ret		6156244	0					
ANR	6156460	MemberAccess	rr -> r_mem . read		6156244	1					
ANR	6156461	PtrMemberAccess	rr -> r_mem		6156244	0					
ANR	6156462	Identifier	rr		6156244	0					
ANR	6156463	Identifier	r_mem		6156244	1					
ANR	6156464	Identifier	read		6156244	1					
ANR	6156465	ExpressionStatement	free ( pkt )	957:1:21392:21402	6156244	19	True				
ANR	6156466	CallExpression	free ( pkt )		6156244	0					
ANR	6156467	Callee	free		6156244	0					
ANR	6156468	Identifier	free		6156244	0					
ANR	6156469	ArgumentList	pkt		6156244	1					
ANR	6156470	Argument	pkt		6156244	0					
ANR	6156471	Identifier	pkt		6156244	0					
ANR	6156472	ReturnStatement	return ret ;	958:1:21405:21415	6156244	20	True				
ANR	6156473	Identifier	ret		6156244	0					
ANR	6156474	ReturnType	int		6156244	1					
ANR	6156475	Identifier	windbg_read_at_phys		6156244	2					
ANR	6156476	ParameterList	"WindCtx * ctx , uint8_t * buf , const ut64 offset , const int count"		6156244	3					
ANR	6156477	Parameter	WindCtx * ctx	916:24:20490:20501	6156244	0	True				
ANR	6156478	ParameterType	WindCtx *		6156244	0					
ANR	6156479	Identifier	ctx		6156244	1					
ANR	6156480	Parameter	uint8_t * buf	916:38:20504:20515	6156244	1	True				
ANR	6156481	ParameterType	uint8_t *		6156244	0					
ANR	6156482	Identifier	buf		6156244	1					
ANR	6156483	Parameter	const ut64 offset	916:52:20518:20534	6156244	2	True				
ANR	6156484	ParameterType	const ut64		6156244	0					
ANR	6156485	Identifier	offset		6156244	1					
ANR	6156486	Parameter	const int count	916:71:20537:20551	6156244	3	True				
ANR	6156487	ParameterType	const int		6156244	0					
ANR	6156488	Identifier	count		6156244	1					
ANR	6156489	CFGEntryNode	ENTRY		6156244		True				
ANR	6156490	CFGExitNode	EXIT		6156244		True				
ANR	6156491	Symbol	rr		6156244						
ANR	6156492	Symbol	PKT_REQ		6156244						
ANR	6156493	Symbol	& req		6156244						
ANR	6156494	Symbol	rr -> r_mem		6156244						
ANR	6156495	Symbol	req . req		6156244						
ANR	6156496	Symbol	req . r_mem . length		6156244						
ANR	6156497	Symbol	req . r_mem		6156244						
ANR	6156498	Symbol	rr -> r_mem . read		6156244						
ANR	6156499	Symbol	ctx -> cpu		6156244						
ANR	6156500	Symbol	rr -> data		6156244						
ANR	6156501	Symbol	req . cpu		6156244						
ANR	6156502	Symbol	pkt		6156244						
ANR	6156503	Symbol	rr -> ret		6156244						
ANR	6156504	Symbol	windbg_wait_packet		6156244						
ANR	6156505	Symbol	ctx -> syncd		6156244						
ANR	6156506	Symbol	req		6156244						
ANR	6156507	Symbol	ret		6156244						
ANR	6156508	Symbol	kd_send_data_packet		6156244						
ANR	6156509	Symbol	NULL		6156244						
ANR	6156510	Symbol	offset		6156244						
ANR	6156511	Symbol	KD_E_OK		6156244						
ANR	6156512	Symbol	* rr		6156244						
ANR	6156513	Symbol	ctx		6156244						
ANR	6156514	Symbol	count		6156244						
ANR	6156515	Symbol	R_MIN		6156244						
ANR	6156516	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6156244						
ANR	6156517	Symbol	KD_MAX_PAYLOAD		6156244						
ANR	6156518	Symbol	* ctx		6156244						
ANR	6156519	Symbol	req . r_mem . read		6156244						
ANR	6156520	Symbol	ctx -> io_ptr		6156244						
ANR	6156521	Symbol	buf		6156244						
ANR	6156522	Symbol	req . r_mem . addr		6156244						
ANR	6156523	Symbol	DbgKdReadPhysicalMemoryApi		6156244						
ANR	6156524	Symbol	ctx -> seq_id		6156244						
ANR	6156525	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6156244						
ANR	6156526	Symbol	& pkt		6156244						
ANR	6156527	Function	windbg_read_at	961:0:21420:22315							
ANR	6156528	FunctionDef	"windbg_read_at (WindCtx * ctx , uint8_t * buf , const ut64 offset , const int count)"		6156527	0					
ANR	6156529	CompoundStatement		961:83:21503:22315	6156527	0					
ANR	6156530	IdentifierDeclStatement	"kd_req_t * rr , req = { 0 } ;"	962:1:21506:21534	6156527	0	True				
ANR	6156531	IdentifierDecl	* rr		6156527	0					
ANR	6156532	IdentifierDeclType	kd_req_t *		6156527	0					
ANR	6156533	Identifier	rr		6156527	1					
ANR	6156534	IdentifierDecl	req = { 0 }		6156527	1					
ANR	6156535	IdentifierDeclType	kd_req_t		6156527	0					
ANR	6156536	Identifier	req		6156527	1					
ANR	6156537	AssignmentExpression	req = { 0 }		6156527	2		=			
ANR	6156538	Identifier	req		6156527	0					
ANR	6156539	InitializerList	0		6156527	1					
ANR	6156540	PrimaryExpression	0		6156527	0					
ANR	6156541	IdentifierDeclStatement	kd_packet_t * pkt ;	965:1:21537:21553	6156527	1	True				
ANR	6156542	IdentifierDecl	* pkt		6156527	0					
ANR	6156543	IdentifierDeclType	kd_packet_t *		6156527	0					
ANR	6156544	Identifier	pkt		6156527	1					
ANR	6156545	IdentifierDeclStatement	int ret ;	966:1:21556:21563	6156527	2	True				
ANR	6156546	IdentifierDecl	ret		6156527	0					
ANR	6156547	IdentifierDeclType	int		6156527	0					
ANR	6156548	Identifier	ret		6156527	1					
ANR	6156549	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6156527	3					
ANR	6156550	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	968:5:21571:21605	6156527	0	True				
ANR	6156551	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6156527	0		||			
ANR	6156552	UnaryOperationExpression	! ctx		6156527	0					
ANR	6156553	UnaryOperator	!		6156527	0					
ANR	6156554	Identifier	ctx		6156527	1					
ANR	6156555	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6156527	1		||			
ANR	6156556	UnaryOperationExpression	! ctx -> io_ptr		6156527	0					
ANR	6156557	UnaryOperator	!		6156527	0					
ANR	6156558	PtrMemberAccess	ctx -> io_ptr		6156527	1					
ANR	6156559	Identifier	ctx		6156527	0					
ANR	6156560	Identifier	io_ptr		6156527	1					
ANR	6156561	UnaryOperationExpression	! ctx -> syncd		6156527	1					
ANR	6156562	UnaryOperator	!		6156527	0					
ANR	6156563	PtrMemberAccess	ctx -> syncd		6156527	1					
ANR	6156564	Identifier	ctx		6156527	0					
ANR	6156565	Identifier	syncd		6156527	1					
ANR	6156566	CompoundStatement		8:42:104:104	6156527	1					
ANR	6156567	ReturnStatement	return 0 ;	969:2:21612:21620	6156527	0	True				
ANR	6156568	PrimaryExpression	0		6156527	0					
ANR	6156569	ExpressionStatement	req . req = DbgKdReadVirtualMemoryApi	971:1:21626:21661	6156527	4	True				
ANR	6156570	AssignmentExpression	req . req = DbgKdReadVirtualMemoryApi		6156527	0		=			
ANR	6156571	MemberAccess	req . req		6156527	0					
ANR	6156572	Identifier	req		6156527	0					
ANR	6156573	Identifier	req		6156527	1					
ANR	6156574	Identifier	DbgKdReadVirtualMemoryApi		6156527	1					
ANR	6156575	ExpressionStatement	req . cpu = ctx -> cpu	972:1:21664:21682	6156527	5	True				
ANR	6156576	AssignmentExpression	req . cpu = ctx -> cpu		6156527	0		=			
ANR	6156577	MemberAccess	req . cpu		6156527	0					
ANR	6156578	Identifier	req		6156527	0					
ANR	6156579	Identifier	cpu		6156527	1					
ANR	6156580	PtrMemberAccess	ctx -> cpu		6156527	1					
ANR	6156581	Identifier	ctx		6156527	0					
ANR	6156582	Identifier	cpu		6156527	1					
ANR	6156583	ExpressionStatement	req . r_mem . addr = offset	973:1:21685:21708	6156527	6	True				
ANR	6156584	AssignmentExpression	req . r_mem . addr = offset		6156527	0		=			
ANR	6156585	MemberAccess	req . r_mem . addr		6156527	0					
ANR	6156586	MemberAccess	req . r_mem		6156527	0					
ANR	6156587	Identifier	req		6156527	0					
ANR	6156588	Identifier	r_mem		6156527	1					
ANR	6156589	Identifier	addr		6156527	1					
ANR	6156590	Identifier	offset		6156527	1					
ANR	6156591	ExpressionStatement	"req . r_mem . length = R_MIN ( count , KD_MAX_PAYLOAD )"	974:1:21711:21759	6156527	7	True				
ANR	6156592	AssignmentExpression	"req . r_mem . length = R_MIN ( count , KD_MAX_PAYLOAD )"		6156527	0		=			
ANR	6156593	MemberAccess	req . r_mem . length		6156527	0					
ANR	6156594	MemberAccess	req . r_mem		6156527	0					
ANR	6156595	Identifier	req		6156527	0					
ANR	6156596	Identifier	r_mem		6156527	1					
ANR	6156597	Identifier	length		6156527	1					
ANR	6156598	CallExpression	"R_MIN ( count , KD_MAX_PAYLOAD )"		6156527	1					
ANR	6156599	Callee	R_MIN		6156527	0					
ANR	6156600	Identifier	R_MIN		6156527	0					
ANR	6156601	ArgumentList	count		6156527	1					
ANR	6156602	Argument	count		6156527	0					
ANR	6156603	Identifier	count		6156527	0					
ANR	6156604	Argument	KD_MAX_PAYLOAD		6156527	1					
ANR	6156605	Identifier	KD_MAX_PAYLOAD		6156527	0					
ANR	6156606	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	975:1:21762:21901	6156527	8	True				
ANR	6156607	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6156527	0		=			
ANR	6156608	Identifier	ret		6156527	0					
ANR	6156609	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6156527	1					
ANR	6156610	Callee	kd_send_data_packet		6156527	0					
ANR	6156611	Identifier	kd_send_data_packet		6156527	0					
ANR	6156612	ArgumentList	ctx -> io_ptr		6156527	1					
ANR	6156613	Argument	ctx -> io_ptr		6156527	0					
ANR	6156614	PtrMemberAccess	ctx -> io_ptr		6156527	0					
ANR	6156615	Identifier	ctx		6156527	0					
ANR	6156616	Identifier	io_ptr		6156527	1					
ANR	6156617	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6156527	1					
ANR	6156618	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6156527	0					
ANR	6156619	Argument	ctx -> seq_id ^= 1		6156527	2					
ANR	6156620	AssignmentExpression	ctx -> seq_id ^= 1		6156527	0		^=			
ANR	6156621	PtrMemberAccess	ctx -> seq_id		6156527	0					
ANR	6156622	Identifier	ctx		6156527	0					
ANR	6156623	Identifier	seq_id		6156527	1					
ANR	6156624	PrimaryExpression	1		6156527	1					
ANR	6156625	Argument	( uint8_t * ) & req		6156527	3					
ANR	6156626	CastExpression	( uint8_t * ) & req		6156527	0					
ANR	6156627	CastTarget	uint8_t *		6156527	0					
ANR	6156628	UnaryOperationExpression	& req		6156527	1					
ANR	6156629	UnaryOperator	&		6156527	0					
ANR	6156630	Identifier	req		6156527	1					
ANR	6156631	Argument	sizeof ( kd_req_t )		6156527	4					
ANR	6156632	SizeofExpression	sizeof ( kd_req_t )		6156527	0					
ANR	6156633	Sizeof	sizeof		6156527	0					
ANR	6156634	SizeofOperand	kd_req_t		6156527	1					
ANR	6156635	Argument	NULL		6156527	5					
ANR	6156636	Identifier	NULL		6156527	0					
ANR	6156637	Argument	0		6156527	6					
ANR	6156638	PrimaryExpression	0		6156527	0					
ANR	6156639	IfStatement	if ( ret != KD_E_OK )		6156527	9					
ANR	6156640	Condition	ret != KD_E_OK	977:5:21908:21921	6156527	0	True				
ANR	6156641	EqualityExpression	ret != KD_E_OK		6156527	0		!=			
ANR	6156642	Identifier	ret		6156527	0					
ANR	6156643	Identifier	KD_E_OK		6156527	1					
ANR	6156644	CompoundStatement		17:21:420:420	6156527	1					
ANR	6156645	ReturnStatement	return 0 ;	978:2:21928:21936	6156527	0	True				
ANR	6156646	PrimaryExpression	0		6156527	0					
ANR	6156647	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	981:1:21943:22007	6156527	10	True				
ANR	6156648	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6156527	0		=			
ANR	6156649	Identifier	ret		6156527	0					
ANR	6156650	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6156527	1					
ANR	6156651	Callee	windbg_wait_packet		6156527	0					
ANR	6156652	Identifier	windbg_wait_packet		6156527	0					
ANR	6156653	ArgumentList	ctx		6156527	1					
ANR	6156654	Argument	ctx		6156527	0					
ANR	6156655	Identifier	ctx		6156527	0					
ANR	6156656	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6156527	1					
ANR	6156657	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6156527	0					
ANR	6156658	Argument	NULL		6156527	2					
ANR	6156659	Identifier	NULL		6156527	0					
ANR	6156660	IfStatement	if ( ret != KD_E_OK )		6156527	11					
ANR	6156661	Condition	ret != KD_E_OK	982:5:22014:22027	6156527	0	True				
ANR	6156662	EqualityExpression	ret != KD_E_OK		6156527	0		!=			
ANR	6156663	Identifier	ret		6156527	0					
ANR	6156664	Identifier	KD_E_OK		6156527	1					
ANR	6156665	CompoundStatement		22:21:526:526	6156527	1					
ANR	6156666	ReturnStatement	return 0 ;	983:2:22034:22042	6156527	0	True				
ANR	6156667	PrimaryExpression	0		6156527	0					
ANR	6156668	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	985:1:22048:22117	6156527	12	True				
ANR	6156669	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6156527	0		=			
ANR	6156670	Identifier	ret		6156527	0					
ANR	6156671	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6156527	1					
ANR	6156672	Callee	windbg_wait_packet		6156527	0					
ANR	6156673	Identifier	windbg_wait_packet		6156527	0					
ANR	6156674	ArgumentList	ctx		6156527	1					
ANR	6156675	Argument	ctx		6156527	0					
ANR	6156676	Identifier	ctx		6156527	0					
ANR	6156677	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6156527	1					
ANR	6156678	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6156527	0					
ANR	6156679	Argument	& pkt		6156527	2					
ANR	6156680	UnaryOperationExpression	& pkt		6156527	0					
ANR	6156681	UnaryOperator	&		6156527	0					
ANR	6156682	Identifier	pkt		6156527	1					
ANR	6156683	IfStatement	if ( ret != KD_E_OK )		6156527	13					
ANR	6156684	Condition	ret != KD_E_OK	986:5:22124:22137	6156527	0	True				
ANR	6156685	EqualityExpression	ret != KD_E_OK		6156527	0		!=			
ANR	6156686	Identifier	ret		6156527	0					
ANR	6156687	Identifier	KD_E_OK		6156527	1					
ANR	6156688	CompoundStatement		26:21:636:636	6156527	1					
ANR	6156689	ReturnStatement	return 0 ;	987:2:22144:22152	6156527	0	True				
ANR	6156690	PrimaryExpression	0		6156527	0					
ANR	6156691	ExpressionStatement	rr = PKT_REQ ( pkt )	989:1:22158:22176	6156527	14	True				
ANR	6156692	AssignmentExpression	rr = PKT_REQ ( pkt )		6156527	0		=			
ANR	6156693	Identifier	rr		6156527	0					
ANR	6156694	CallExpression	PKT_REQ ( pkt )		6156527	1					
ANR	6156695	Callee	PKT_REQ		6156527	0					
ANR	6156696	Identifier	PKT_REQ		6156527	0					
ANR	6156697	ArgumentList	pkt		6156527	1					
ANR	6156698	Argument	pkt		6156527	0					
ANR	6156699	Identifier	pkt		6156527	0					
ANR	6156700	IfStatement	if ( rr -> ret )		6156527	15					
ANR	6156701	Condition	rr -> ret	991:5:22184:22190	6156527	0	True				
ANR	6156702	PtrMemberAccess	rr -> ret		6156527	0					
ANR	6156703	Identifier	rr		6156527	0					
ANR	6156704	Identifier	ret		6156527	1					
ANR	6156705	CompoundStatement		31:14:689:689	6156527	1					
ANR	6156706	ExpressionStatement	free ( pkt )	992:2:22197:22207	6156527	0	True				
ANR	6156707	CallExpression	free ( pkt )		6156527	0					
ANR	6156708	Callee	free		6156527	0					
ANR	6156709	Identifier	free		6156527	0					
ANR	6156710	ArgumentList	pkt		6156527	1					
ANR	6156711	Argument	pkt		6156527	0					
ANR	6156712	Identifier	pkt		6156527	0					
ANR	6156713	ReturnStatement	return 0 ;	993:2:22211:22219	6156527	1	True				
ANR	6156714	PrimaryExpression	0		6156527	0					
ANR	6156715	ExpressionStatement	"memcpy ( buf , rr -> data , rr -> r_mem . read )"	996:1:22226:22264	6156527	16	True				
ANR	6156716	CallExpression	"memcpy ( buf , rr -> data , rr -> r_mem . read )"		6156527	0					
ANR	6156717	Callee	memcpy		6156527	0					
ANR	6156718	Identifier	memcpy		6156527	0					
ANR	6156719	ArgumentList	buf		6156527	1					
ANR	6156720	Argument	buf		6156527	0					
ANR	6156721	Identifier	buf		6156527	0					
ANR	6156722	Argument	rr -> data		6156527	1					
ANR	6156723	PtrMemberAccess	rr -> data		6156527	0					
ANR	6156724	Identifier	rr		6156527	0					
ANR	6156725	Identifier	data		6156527	1					
ANR	6156726	Argument	rr -> r_mem . read		6156527	2					
ANR	6156727	MemberAccess	rr -> r_mem . read		6156527	0					
ANR	6156728	PtrMemberAccess	rr -> r_mem		6156527	0					
ANR	6156729	Identifier	rr		6156527	0					
ANR	6156730	Identifier	r_mem		6156527	1					
ANR	6156731	Identifier	read		6156527	1					
ANR	6156732	ExpressionStatement	ret = rr -> r_mem . read	997:1:22267:22287	6156527	17	True				
ANR	6156733	AssignmentExpression	ret = rr -> r_mem . read		6156527	0		=			
ANR	6156734	Identifier	ret		6156527	0					
ANR	6156735	MemberAccess	rr -> r_mem . read		6156527	1					
ANR	6156736	PtrMemberAccess	rr -> r_mem		6156527	0					
ANR	6156737	Identifier	rr		6156527	0					
ANR	6156738	Identifier	r_mem		6156527	1					
ANR	6156739	Identifier	read		6156527	1					
ANR	6156740	ExpressionStatement	free ( pkt )	998:1:22290:22300	6156527	18	True				
ANR	6156741	CallExpression	free ( pkt )		6156527	0					
ANR	6156742	Callee	free		6156527	0					
ANR	6156743	Identifier	free		6156527	0					
ANR	6156744	ArgumentList	pkt		6156527	1					
ANR	6156745	Argument	pkt		6156527	0					
ANR	6156746	Identifier	pkt		6156527	0					
ANR	6156747	ReturnStatement	return ret ;	999:1:22303:22313	6156527	19	True				
ANR	6156748	Identifier	ret		6156527	0					
ANR	6156749	ReturnType	int		6156527	1					
ANR	6156750	Identifier	windbg_read_at		6156527	2					
ANR	6156751	ParameterList	"WindCtx * ctx , uint8_t * buf , const ut64 offset , const int count"		6156527	3					
ANR	6156752	Parameter	WindCtx * ctx	961:19:21439:21450	6156527	0	True				
ANR	6156753	ParameterType	WindCtx *		6156527	0					
ANR	6156754	Identifier	ctx		6156527	1					
ANR	6156755	Parameter	uint8_t * buf	961:33:21453:21464	6156527	1	True				
ANR	6156756	ParameterType	uint8_t *		6156527	0					
ANR	6156757	Identifier	buf		6156527	1					
ANR	6156758	Parameter	const ut64 offset	961:47:21467:21483	6156527	2	True				
ANR	6156759	ParameterType	const ut64		6156527	0					
ANR	6156760	Identifier	offset		6156527	1					
ANR	6156761	Parameter	const int count	961:66:21486:21500	6156527	3	True				
ANR	6156762	ParameterType	const int		6156527	0					
ANR	6156763	Identifier	count		6156527	1					
ANR	6156764	CFGEntryNode	ENTRY		6156527		True				
ANR	6156765	CFGExitNode	EXIT		6156527		True				
ANR	6156766	Symbol	rr		6156527						
ANR	6156767	Symbol	PKT_REQ		6156527						
ANR	6156768	Symbol	& req		6156527						
ANR	6156769	Symbol	rr -> r_mem		6156527						
ANR	6156770	Symbol	req . req		6156527						
ANR	6156771	Symbol	req . r_mem . length		6156527						
ANR	6156772	Symbol	req . r_mem		6156527						
ANR	6156773	Symbol	rr -> r_mem . read		6156527						
ANR	6156774	Symbol	ctx -> cpu		6156527						
ANR	6156775	Symbol	rr -> data		6156527						
ANR	6156776	Symbol	req . cpu		6156527						
ANR	6156777	Symbol	pkt		6156527						
ANR	6156778	Symbol	rr -> ret		6156527						
ANR	6156779	Symbol	windbg_wait_packet		6156527						
ANR	6156780	Symbol	ctx -> syncd		6156527						
ANR	6156781	Symbol	req		6156527						
ANR	6156782	Symbol	ret		6156527						
ANR	6156783	Symbol	kd_send_data_packet		6156527						
ANR	6156784	Symbol	NULL		6156527						
ANR	6156785	Symbol	offset		6156527						
ANR	6156786	Symbol	KD_E_OK		6156527						
ANR	6156787	Symbol	* rr		6156527						
ANR	6156788	Symbol	ctx		6156527						
ANR	6156789	Symbol	count		6156527						
ANR	6156790	Symbol	R_MIN		6156527						
ANR	6156791	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6156527						
ANR	6156792	Symbol	KD_MAX_PAYLOAD		6156527						
ANR	6156793	Symbol	* ctx		6156527						
ANR	6156794	Symbol	ctx -> io_ptr		6156527						
ANR	6156795	Symbol	buf		6156527						
ANR	6156796	Symbol	req . r_mem . addr		6156527						
ANR	6156797	Symbol	ctx -> seq_id		6156527						
ANR	6156798	Symbol	DbgKdReadVirtualMemoryApi		6156527						
ANR	6156799	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6156527						
ANR	6156800	Symbol	& pkt		6156527						
ANR	6156801	Function	windbg_write_at	1002:0:22318:23239							
ANR	6156802	FunctionDef	"windbg_write_at (WindCtx * ctx , const uint8_t * buf , const ut64 offset , const int count)"		6156801	0					
ANR	6156803	CompoundStatement		1002:90:22408:23239	6156801	0					
ANR	6156804	IdentifierDeclStatement	kd_packet_t * pkt ;	1003:1:22411:22427	6156801	0	True				
ANR	6156805	IdentifierDecl	* pkt		6156801	0					
ANR	6156806	IdentifierDeclType	kd_packet_t *		6156801	0					
ANR	6156807	Identifier	pkt		6156801	1					
ANR	6156808	IdentifierDeclStatement	"kd_req_t req = { 0 } , * rr ;"	1004:1:22430:22458	6156801	1	True				
ANR	6156809	IdentifierDecl	req = { 0 }		6156801	0					
ANR	6156810	IdentifierDeclType	kd_req_t		6156801	0					
ANR	6156811	Identifier	req		6156801	1					
ANR	6156812	AssignmentExpression	req = { 0 }		6156801	2		=			
ANR	6156813	Identifier	req		6156801	0					
ANR	6156814	InitializerList	0		6156801	1					
ANR	6156815	PrimaryExpression	0		6156801	0					
ANR	6156816	IdentifierDecl	* rr		6156801	1					
ANR	6156817	IdentifierDeclType	kd_req_t *		6156801	0					
ANR	6156818	Identifier	rr		6156801	1					
ANR	6156819	IdentifierDeclStatement	"int payload , ret ;"	1007:1:22461:22477	6156801	2	True				
ANR	6156820	IdentifierDecl	payload		6156801	0					
ANR	6156821	IdentifierDeclType	int		6156801	0					
ANR	6156822	Identifier	payload		6156801	1					
ANR	6156823	IdentifierDecl	ret		6156801	1					
ANR	6156824	IdentifierDeclType	int		6156801	0					
ANR	6156825	Identifier	ret		6156801	1					
ANR	6156826	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6156801	3					
ANR	6156827	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	1009:5:22485:22519	6156801	0	True				
ANR	6156828	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6156801	0		||			
ANR	6156829	UnaryOperationExpression	! ctx		6156801	0					
ANR	6156830	UnaryOperator	!		6156801	0					
ANR	6156831	Identifier	ctx		6156801	1					
ANR	6156832	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6156801	1		||			
ANR	6156833	UnaryOperationExpression	! ctx -> io_ptr		6156801	0					
ANR	6156834	UnaryOperator	!		6156801	0					
ANR	6156835	PtrMemberAccess	ctx -> io_ptr		6156801	1					
ANR	6156836	Identifier	ctx		6156801	0					
ANR	6156837	Identifier	io_ptr		6156801	1					
ANR	6156838	UnaryOperationExpression	! ctx -> syncd		6156801	1					
ANR	6156839	UnaryOperator	!		6156801	0					
ANR	6156840	PtrMemberAccess	ctx -> syncd		6156801	1					
ANR	6156841	Identifier	ctx		6156801	0					
ANR	6156842	Identifier	syncd		6156801	1					
ANR	6156843	CompoundStatement		8:42:113:113	6156801	1					
ANR	6156844	ReturnStatement	return 0 ;	1010:2:22526:22534	6156801	0	True				
ANR	6156845	PrimaryExpression	0		6156801	0					
ANR	6156846	ExpressionStatement	"payload = R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"	1013:1:22541:22599	6156801	4	True				
ANR	6156847	AssignmentExpression	"payload = R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"		6156801	0		=			
ANR	6156848	Identifier	payload		6156801	0					
ANR	6156849	CallExpression	"R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"		6156801	1					
ANR	6156850	Callee	R_MIN		6156801	0					
ANR	6156851	Identifier	R_MIN		6156801	0					
ANR	6156852	ArgumentList	count		6156801	1					
ANR	6156853	Argument	count		6156801	0					
ANR	6156854	Identifier	count		6156801	0					
ANR	6156855	Argument	KD_MAX_PAYLOAD - sizeof ( kd_req_t )		6156801	1					
ANR	6156856	AdditiveExpression	KD_MAX_PAYLOAD - sizeof ( kd_req_t )		6156801	0		-			
ANR	6156857	Identifier	KD_MAX_PAYLOAD		6156801	0					
ANR	6156858	SizeofExpression	sizeof ( kd_req_t )		6156801	1					
ANR	6156859	Sizeof	sizeof		6156801	0					
ANR	6156860	SizeofOperand	kd_req_t		6156801	1					
ANR	6156861	ExpressionStatement	req . req = DbgKdWriteVirtualMemoryApi	1014:1:22602:22638	6156801	5	True				
ANR	6156862	AssignmentExpression	req . req = DbgKdWriteVirtualMemoryApi		6156801	0		=			
ANR	6156863	MemberAccess	req . req		6156801	0					
ANR	6156864	Identifier	req		6156801	0					
ANR	6156865	Identifier	req		6156801	1					
ANR	6156866	Identifier	DbgKdWriteVirtualMemoryApi		6156801	1					
ANR	6156867	ExpressionStatement	req . cpu = ctx -> cpu	1015:1:22641:22659	6156801	6	True				
ANR	6156868	AssignmentExpression	req . cpu = ctx -> cpu		6156801	0		=			
ANR	6156869	MemberAccess	req . cpu		6156801	0					
ANR	6156870	Identifier	req		6156801	0					
ANR	6156871	Identifier	cpu		6156801	1					
ANR	6156872	PtrMemberAccess	ctx -> cpu		6156801	1					
ANR	6156873	Identifier	ctx		6156801	0					
ANR	6156874	Identifier	cpu		6156801	1					
ANR	6156875	ExpressionStatement	req . r_mem . addr = offset	1016:1:22662:22685	6156801	7	True				
ANR	6156876	AssignmentExpression	req . r_mem . addr = offset		6156801	0		=			
ANR	6156877	MemberAccess	req . r_mem . addr		6156801	0					
ANR	6156878	MemberAccess	req . r_mem		6156801	0					
ANR	6156879	Identifier	req		6156801	0					
ANR	6156880	Identifier	r_mem		6156801	1					
ANR	6156881	Identifier	addr		6156801	1					
ANR	6156882	Identifier	offset		6156801	1					
ANR	6156883	ExpressionStatement	req . r_mem . length = payload	1017:1:22688:22714	6156801	8	True				
ANR	6156884	AssignmentExpression	req . r_mem . length = payload		6156801	0		=			
ANR	6156885	MemberAccess	req . r_mem . length		6156801	0					
ANR	6156886	MemberAccess	req . r_mem		6156801	0					
ANR	6156887	Identifier	req		6156801	0					
ANR	6156888	Identifier	r_mem		6156801	1					
ANR	6156889	Identifier	length		6156801	1					
ANR	6156890	Identifier	payload		6156801	1					
ANR	6156891	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"	1019:1:22718:22864	6156801	9	True				
ANR	6156892	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"		6156801	0		=			
ANR	6156893	Identifier	ret		6156801	0					
ANR	6156894	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"		6156801	1					
ANR	6156895	Callee	kd_send_data_packet		6156801	0					
ANR	6156896	Identifier	kd_send_data_packet		6156801	0					
ANR	6156897	ArgumentList	ctx -> io_ptr		6156801	1					
ANR	6156898	Argument	ctx -> io_ptr		6156801	0					
ANR	6156899	PtrMemberAccess	ctx -> io_ptr		6156801	0					
ANR	6156900	Identifier	ctx		6156801	0					
ANR	6156901	Identifier	io_ptr		6156801	1					
ANR	6156902	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6156801	1					
ANR	6156903	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6156801	0					
ANR	6156904	Argument	ctx -> seq_id ^= 1		6156801	2					
ANR	6156905	AssignmentExpression	ctx -> seq_id ^= 1		6156801	0		^=			
ANR	6156906	PtrMemberAccess	ctx -> seq_id		6156801	0					
ANR	6156907	Identifier	ctx		6156801	0					
ANR	6156908	Identifier	seq_id		6156801	1					
ANR	6156909	PrimaryExpression	1		6156801	1					
ANR	6156910	Argument	( uint8_t * ) & req		6156801	3					
ANR	6156911	CastExpression	( uint8_t * ) & req		6156801	0					
ANR	6156912	CastTarget	uint8_t *		6156801	0					
ANR	6156913	UnaryOperationExpression	& req		6156801	1					
ANR	6156914	UnaryOperator	&		6156801	0					
ANR	6156915	Identifier	req		6156801	1					
ANR	6156916	Argument	sizeof ( kd_req_t )		6156801	4					
ANR	6156917	SizeofExpression	sizeof ( kd_req_t )		6156801	0					
ANR	6156918	Sizeof	sizeof		6156801	0					
ANR	6156919	SizeofOperand	kd_req_t		6156801	1					
ANR	6156920	Argument	buf		6156801	5					
ANR	6156921	Identifier	buf		6156801	0					
ANR	6156922	Argument	payload		6156801	6					
ANR	6156923	Identifier	payload		6156801	0					
ANR	6156924	IfStatement	if ( ret != KD_E_OK )		6156801	10					
ANR	6156925	Condition	ret != KD_E_OK	1022:5:22871:22884	6156801	0	True				
ANR	6156926	EqualityExpression	ret != KD_E_OK		6156801	0		!=			
ANR	6156927	Identifier	ret		6156801	0					
ANR	6156928	Identifier	KD_E_OK		6156801	1					
ANR	6156929	CompoundStatement		21:21:478:478	6156801	1					
ANR	6156930	ReturnStatement	return 0 ;	1023:2:22891:22899	6156801	0	True				
ANR	6156931	PrimaryExpression	0		6156801	0					
ANR	6156932	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	1026:1:22906:22970	6156801	11	True				
ANR	6156933	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6156801	0		=			
ANR	6156934	Identifier	ret		6156801	0					
ANR	6156935	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6156801	1					
ANR	6156936	Callee	windbg_wait_packet		6156801	0					
ANR	6156937	Identifier	windbg_wait_packet		6156801	0					
ANR	6156938	ArgumentList	ctx		6156801	1					
ANR	6156939	Argument	ctx		6156801	0					
ANR	6156940	Identifier	ctx		6156801	0					
ANR	6156941	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6156801	1					
ANR	6156942	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6156801	0					
ANR	6156943	Argument	NULL		6156801	2					
ANR	6156944	Identifier	NULL		6156801	0					
ANR	6156945	IfStatement	if ( ret != KD_E_OK )		6156801	12					
ANR	6156946	Condition	ret != KD_E_OK	1027:5:22977:22990	6156801	0	True				
ANR	6156947	EqualityExpression	ret != KD_E_OK		6156801	0		!=			
ANR	6156948	Identifier	ret		6156801	0					
ANR	6156949	Identifier	KD_E_OK		6156801	1					
ANR	6156950	CompoundStatement		26:21:584:584	6156801	1					
ANR	6156951	ReturnStatement	return 0 ;	1028:2:22997:23005	6156801	0	True				
ANR	6156952	PrimaryExpression	0		6156801	0					
ANR	6156953	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	1031:1:23012:23081	6156801	13	True				
ANR	6156954	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6156801	0		=			
ANR	6156955	Identifier	ret		6156801	0					
ANR	6156956	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6156801	1					
ANR	6156957	Callee	windbg_wait_packet		6156801	0					
ANR	6156958	Identifier	windbg_wait_packet		6156801	0					
ANR	6156959	ArgumentList	ctx		6156801	1					
ANR	6156960	Argument	ctx		6156801	0					
ANR	6156961	Identifier	ctx		6156801	0					
ANR	6156962	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6156801	1					
ANR	6156963	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6156801	0					
ANR	6156964	Argument	& pkt		6156801	2					
ANR	6156965	UnaryOperationExpression	& pkt		6156801	0					
ANR	6156966	UnaryOperator	&		6156801	0					
ANR	6156967	Identifier	pkt		6156801	1					
ANR	6156968	IfStatement	if ( ret != KD_E_OK )		6156801	14					
ANR	6156969	Condition	ret != KD_E_OK	1032:5:23088:23101	6156801	0	True				
ANR	6156970	EqualityExpression	ret != KD_E_OK		6156801	0		!=			
ANR	6156971	Identifier	ret		6156801	0					
ANR	6156972	Identifier	KD_E_OK		6156801	1					
ANR	6156973	CompoundStatement		31:21:695:695	6156801	1					
ANR	6156974	ReturnStatement	return 0 ;	1033:2:23108:23116	6156801	0	True				
ANR	6156975	PrimaryExpression	0		6156801	0					
ANR	6156976	ExpressionStatement	rr = PKT_REQ ( pkt )	1036:1:23123:23141	6156801	15	True				
ANR	6156977	AssignmentExpression	rr = PKT_REQ ( pkt )		6156801	0		=			
ANR	6156978	Identifier	rr		6156801	0					
ANR	6156979	CallExpression	PKT_REQ ( pkt )		6156801	1					
ANR	6156980	Callee	PKT_REQ		6156801	0					
ANR	6156981	Identifier	PKT_REQ		6156801	0					
ANR	6156982	ArgumentList	pkt		6156801	1					
ANR	6156983	Argument	pkt		6156801	0					
ANR	6156984	Identifier	pkt		6156801	0					
ANR	6156985	IfStatement	if ( rr -> ret )		6156801	16					
ANR	6156986	Condition	rr -> ret	1038:5:23149:23155	6156801	0	True				
ANR	6156987	PtrMemberAccess	rr -> ret		6156801	0					
ANR	6156988	Identifier	rr		6156801	0					
ANR	6156989	Identifier	ret		6156801	1					
ANR	6156990	CompoundStatement		37:14:749:749	6156801	1					
ANR	6156991	ExpressionStatement	free ( pkt )	1039:2:23162:23172	6156801	0	True				
ANR	6156992	CallExpression	free ( pkt )		6156801	0					
ANR	6156993	Callee	free		6156801	0					
ANR	6156994	Identifier	free		6156801	0					
ANR	6156995	ArgumentList	pkt		6156801	1					
ANR	6156996	Argument	pkt		6156801	0					
ANR	6156997	Identifier	pkt		6156801	0					
ANR	6156998	ReturnStatement	return 0 ;	1040:2:23176:23184	6156801	1	True				
ANR	6156999	PrimaryExpression	0		6156801	0					
ANR	6157000	ExpressionStatement	ret = rr -> r_mem . read	1043:1:23191:23211	6156801	17	True				
ANR	6157001	AssignmentExpression	ret = rr -> r_mem . read		6156801	0		=			
ANR	6157002	Identifier	ret		6156801	0					
ANR	6157003	MemberAccess	rr -> r_mem . read		6156801	1					
ANR	6157004	PtrMemberAccess	rr -> r_mem		6156801	0					
ANR	6157005	Identifier	rr		6156801	0					
ANR	6157006	Identifier	r_mem		6156801	1					
ANR	6157007	Identifier	read		6156801	1					
ANR	6157008	ExpressionStatement	free ( pkt )	1044:1:23214:23224	6156801	18	True				
ANR	6157009	CallExpression	free ( pkt )		6156801	0					
ANR	6157010	Callee	free		6156801	0					
ANR	6157011	Identifier	free		6156801	0					
ANR	6157012	ArgumentList	pkt		6156801	1					
ANR	6157013	Argument	pkt		6156801	0					
ANR	6157014	Identifier	pkt		6156801	0					
ANR	6157015	ReturnStatement	return ret ;	1045:1:23227:23237	6156801	19	True				
ANR	6157016	Identifier	ret		6156801	0					
ANR	6157017	ReturnType	int		6156801	1					
ANR	6157018	Identifier	windbg_write_at		6156801	2					
ANR	6157019	ParameterList	"WindCtx * ctx , const uint8_t * buf , const ut64 offset , const int count"		6156801	3					
ANR	6157020	Parameter	WindCtx * ctx	1002:20:22338:22349	6156801	0	True				
ANR	6157021	ParameterType	WindCtx *		6156801	0					
ANR	6157022	Identifier	ctx		6156801	1					
ANR	6157023	Parameter	const uint8_t * buf	1002:34:22352:22369	6156801	1	True				
ANR	6157024	ParameterType	const uint8_t *		6156801	0					
ANR	6157025	Identifier	buf		6156801	1					
ANR	6157026	Parameter	const ut64 offset	1002:54:22372:22388	6156801	2	True				
ANR	6157027	ParameterType	const ut64		6156801	0					
ANR	6157028	Identifier	offset		6156801	1					
ANR	6157029	Parameter	const int count	1002:73:22391:22405	6156801	3	True				
ANR	6157030	ParameterType	const int		6156801	0					
ANR	6157031	Identifier	count		6156801	1					
ANR	6157032	CFGEntryNode	ENTRY		6156801		True				
ANR	6157033	CFGExitNode	EXIT		6156801		True				
ANR	6157034	Symbol	rr		6156801						
ANR	6157035	Symbol	PKT_REQ		6156801						
ANR	6157036	Symbol	& req		6156801						
ANR	6157037	Symbol	rr -> r_mem		6156801						
ANR	6157038	Symbol	req . req		6156801						
ANR	6157039	Symbol	req . r_mem . length		6156801						
ANR	6157040	Symbol	req . r_mem		6156801						
ANR	6157041	Symbol	rr -> r_mem . read		6156801						
ANR	6157042	Symbol	ctx -> cpu		6156801						
ANR	6157043	Symbol	payload		6156801						
ANR	6157044	Symbol	DbgKdWriteVirtualMemoryApi		6156801						
ANR	6157045	Symbol	req . cpu		6156801						
ANR	6157046	Symbol	pkt		6156801						
ANR	6157047	Symbol	rr -> ret		6156801						
ANR	6157048	Symbol	windbg_wait_packet		6156801						
ANR	6157049	Symbol	ctx -> syncd		6156801						
ANR	6157050	Symbol	req		6156801						
ANR	6157051	Symbol	ret		6156801						
ANR	6157052	Symbol	kd_send_data_packet		6156801						
ANR	6157053	Symbol	NULL		6156801						
ANR	6157054	Symbol	offset		6156801						
ANR	6157055	Symbol	KD_E_OK		6156801						
ANR	6157056	Symbol	* rr		6156801						
ANR	6157057	Symbol	ctx		6156801						
ANR	6157058	Symbol	count		6156801						
ANR	6157059	Symbol	R_MIN		6156801						
ANR	6157060	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6156801						
ANR	6157061	Symbol	KD_MAX_PAYLOAD		6156801						
ANR	6157062	Symbol	* ctx		6156801						
ANR	6157063	Symbol	ctx -> io_ptr		6156801						
ANR	6157064	Symbol	buf		6156801						
ANR	6157065	Symbol	req . r_mem . addr		6156801						
ANR	6157066	Symbol	ctx -> seq_id		6156801						
ANR	6157067	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6156801						
ANR	6157068	Symbol	& pkt		6156801						
ANR	6157069	Function	windbg_write_at_phys	1048:0:23242:24252							
ANR	6157070	FunctionDef	"windbg_write_at_phys (WindCtx * ctx , const uint8_t * buf , const ut64 offset , const int count)"		6157069	0					
ANR	6157071	CompoundStatement		1048:95:23337:24252	6157069	0					
ANR	6157072	IdentifierDeclStatement	kd_packet_t * pkt ;	1049:1:23340:23356	6157069	0	True				
ANR	6157073	IdentifierDecl	* pkt		6157069	0					
ANR	6157074	IdentifierDeclType	kd_packet_t *		6157069	0					
ANR	6157075	Identifier	pkt		6157069	1					
ANR	6157076	IdentifierDeclStatement	kd_req_t req ;	1050:1:23359:23371	6157069	1	True				
ANR	6157077	IdentifierDecl	req		6157069	0					
ANR	6157078	IdentifierDeclType	kd_req_t		6157069	0					
ANR	6157079	Identifier	req		6157069	1					
ANR	6157080	IdentifierDeclStatement	int ret ;	1051:1:23374:23381	6157069	2	True				
ANR	6157081	IdentifierDecl	ret		6157069	0					
ANR	6157082	IdentifierDeclType	int		6157069	0					
ANR	6157083	Identifier	ret		6157069	1					
ANR	6157084	IdentifierDeclStatement	int payload ;	1052:1:23384:23395	6157069	3	True				
ANR	6157085	IdentifierDecl	payload		6157069	0					
ANR	6157086	IdentifierDeclType	int		6157069	0					
ANR	6157087	Identifier	payload		6157069	1					
ANR	6157088	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6157069	4					
ANR	6157089	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	1054:5:23403:23437	6157069	0	True				
ANR	6157090	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6157069	0		||			
ANR	6157091	UnaryOperationExpression	! ctx		6157069	0					
ANR	6157092	UnaryOperator	!		6157069	0					
ANR	6157093	Identifier	ctx		6157069	1					
ANR	6157094	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6157069	1		||			
ANR	6157095	UnaryOperationExpression	! ctx -> io_ptr		6157069	0					
ANR	6157096	UnaryOperator	!		6157069	0					
ANR	6157097	PtrMemberAccess	ctx -> io_ptr		6157069	1					
ANR	6157098	Identifier	ctx		6157069	0					
ANR	6157099	Identifier	io_ptr		6157069	1					
ANR	6157100	UnaryOperationExpression	! ctx -> syncd		6157069	1					
ANR	6157101	UnaryOperator	!		6157069	0					
ANR	6157102	PtrMemberAccess	ctx -> syncd		6157069	1					
ANR	6157103	Identifier	ctx		6157069	0					
ANR	6157104	Identifier	syncd		6157069	1					
ANR	6157105	CompoundStatement		7:42:102:102	6157069	1					
ANR	6157106	ReturnStatement	return 0 ;	1055:2:23444:23452	6157069	0	True				
ANR	6157107	PrimaryExpression	0		6157069	0					
ANR	6157108	ExpressionStatement	"payload = R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"	1058:1:23459:23517	6157069	5	True				
ANR	6157109	AssignmentExpression	"payload = R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"		6157069	0		=			
ANR	6157110	Identifier	payload		6157069	0					
ANR	6157111	CallExpression	"R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"		6157069	1					
ANR	6157112	Callee	R_MIN		6157069	0					
ANR	6157113	Identifier	R_MIN		6157069	0					
ANR	6157114	ArgumentList	count		6157069	1					
ANR	6157115	Argument	count		6157069	0					
ANR	6157116	Identifier	count		6157069	0					
ANR	6157117	Argument	KD_MAX_PAYLOAD - sizeof ( kd_req_t )		6157069	1					
ANR	6157118	AdditiveExpression	KD_MAX_PAYLOAD - sizeof ( kd_req_t )		6157069	0		-			
ANR	6157119	Identifier	KD_MAX_PAYLOAD		6157069	0					
ANR	6157120	SizeofExpression	sizeof ( kd_req_t )		6157069	1					
ANR	6157121	Sizeof	sizeof		6157069	0					
ANR	6157122	SizeofOperand	kd_req_t		6157069	1					
ANR	6157123	ExpressionStatement	"memset ( & req , 0 , sizeof ( kd_req_t ) )"	1060:1:23521:23555	6157069	6	True				
ANR	6157124	CallExpression	"memset ( & req , 0 , sizeof ( kd_req_t ) )"		6157069	0					
ANR	6157125	Callee	memset		6157069	0					
ANR	6157126	Identifier	memset		6157069	0					
ANR	6157127	ArgumentList	& req		6157069	1					
ANR	6157128	Argument	& req		6157069	0					
ANR	6157129	UnaryOperationExpression	& req		6157069	0					
ANR	6157130	UnaryOperator	&		6157069	0					
ANR	6157131	Identifier	req		6157069	1					
ANR	6157132	Argument	0		6157069	1					
ANR	6157133	PrimaryExpression	0		6157069	0					
ANR	6157134	Argument	sizeof ( kd_req_t )		6157069	2					
ANR	6157135	SizeofExpression	sizeof ( kd_req_t )		6157069	0					
ANR	6157136	Sizeof	sizeof		6157069	0					
ANR	6157137	SizeofOperand	kd_req_t		6157069	1					
ANR	6157138	ExpressionStatement	req . req = DbgKdWritePhysicalMemoryApi	1062:1:23559:23596	6157069	7	True				
ANR	6157139	AssignmentExpression	req . req = DbgKdWritePhysicalMemoryApi		6157069	0		=			
ANR	6157140	MemberAccess	req . req		6157069	0					
ANR	6157141	Identifier	req		6157069	0					
ANR	6157142	Identifier	req		6157069	1					
ANR	6157143	Identifier	DbgKdWritePhysicalMemoryApi		6157069	1					
ANR	6157144	ExpressionStatement	req . cpu = ctx -> cpu	1063:1:23599:23617	6157069	8	True				
ANR	6157145	AssignmentExpression	req . cpu = ctx -> cpu		6157069	0		=			
ANR	6157146	MemberAccess	req . cpu		6157069	0					
ANR	6157147	Identifier	req		6157069	0					
ANR	6157148	Identifier	cpu		6157069	1					
ANR	6157149	PtrMemberAccess	ctx -> cpu		6157069	1					
ANR	6157150	Identifier	ctx		6157069	0					
ANR	6157151	Identifier	cpu		6157069	1					
ANR	6157152	ExpressionStatement	req . r_mem . addr = offset	1065:1:23621:23644	6157069	9	True				
ANR	6157153	AssignmentExpression	req . r_mem . addr = offset		6157069	0		=			
ANR	6157154	MemberAccess	req . r_mem . addr		6157069	0					
ANR	6157155	MemberAccess	req . r_mem		6157069	0					
ANR	6157156	Identifier	req		6157069	0					
ANR	6157157	Identifier	r_mem		6157069	1					
ANR	6157158	Identifier	addr		6157069	1					
ANR	6157159	Identifier	offset		6157069	1					
ANR	6157160	ExpressionStatement	req . r_mem . length = payload	1066:1:23647:23673	6157069	10	True				
ANR	6157161	AssignmentExpression	req . r_mem . length = payload		6157069	0		=			
ANR	6157162	MemberAccess	req . r_mem . length		6157069	0					
ANR	6157163	MemberAccess	req . r_mem		6157069	0					
ANR	6157164	Identifier	req		6157069	0					
ANR	6157165	Identifier	r_mem		6157069	1					
ANR	6157166	Identifier	length		6157069	1					
ANR	6157167	Identifier	payload		6157069	1					
ANR	6157168	ExpressionStatement	req . r_mem . read = 0	1067:1:23676:23694	6157069	11	True				
ANR	6157169	AssignmentExpression	req . r_mem . read = 0		6157069	0		=			
ANR	6157170	MemberAccess	req . r_mem . read		6157069	0					
ANR	6157171	MemberAccess	req . r_mem		6157069	0					
ANR	6157172	Identifier	req		6157069	0					
ANR	6157173	Identifier	r_mem		6157069	1					
ANR	6157174	Identifier	read		6157069	1					
ANR	6157175	PrimaryExpression	0		6157069	1					
ANR	6157176	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"	1069:1:23724:23868	6157069	12	True				
ANR	6157177	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"		6157069	0		=			
ANR	6157178	Identifier	ret		6157069	0					
ANR	6157179	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"		6157069	1					
ANR	6157180	Callee	kd_send_data_packet		6157069	0					
ANR	6157181	Identifier	kd_send_data_packet		6157069	0					
ANR	6157182	ArgumentList	ctx -> io_ptr		6157069	1					
ANR	6157183	Argument	ctx -> io_ptr		6157069	0					
ANR	6157184	PtrMemberAccess	ctx -> io_ptr		6157069	0					
ANR	6157185	Identifier	ctx		6157069	0					
ANR	6157186	Identifier	io_ptr		6157069	1					
ANR	6157187	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6157069	1					
ANR	6157188	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6157069	0					
ANR	6157189	Argument	ctx -> seq_id ^= 1		6157069	2					
ANR	6157190	AssignmentExpression	ctx -> seq_id ^= 1		6157069	0		^=			
ANR	6157191	PtrMemberAccess	ctx -> seq_id		6157069	0					
ANR	6157192	Identifier	ctx		6157069	0					
ANR	6157193	Identifier	seq_id		6157069	1					
ANR	6157194	PrimaryExpression	1		6157069	1					
ANR	6157195	Argument	( uint8_t * ) & req		6157069	3					
ANR	6157196	CastExpression	( uint8_t * ) & req		6157069	0					
ANR	6157197	CastTarget	uint8_t *		6157069	0					
ANR	6157198	UnaryOperationExpression	& req		6157069	1					
ANR	6157199	UnaryOperator	&		6157069	0					
ANR	6157200	Identifier	req		6157069	1					
ANR	6157201	Argument	sizeof ( kd_req_t )		6157069	4					
ANR	6157202	SizeofExpression	sizeof ( kd_req_t )		6157069	0					
ANR	6157203	Sizeof	sizeof		6157069	0					
ANR	6157204	SizeofOperand	kd_req_t		6157069	1					
ANR	6157205	Argument	buf		6157069	5					
ANR	6157206	Identifier	buf		6157069	0					
ANR	6157207	Argument	payload		6157069	6					
ANR	6157208	Identifier	payload		6157069	0					
ANR	6157209	IfStatement	if ( ret != KD_E_OK )		6157069	13					
ANR	6157210	Condition	ret != KD_E_OK	1071:5:23875:23888	6157069	0	True				
ANR	6157211	EqualityExpression	ret != KD_E_OK		6157069	0		!=			
ANR	6157212	Identifier	ret		6157069	0					
ANR	6157213	Identifier	KD_E_OK		6157069	1					
ANR	6157214	CompoundStatement		24:21:553:553	6157069	1					
ANR	6157215	ReturnStatement	return 0 ;	1072:2:23895:23903	6157069	0	True				
ANR	6157216	PrimaryExpression	0		6157069	0					
ANR	6157217	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	1075:1:23910:23974	6157069	14	True				
ANR	6157218	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6157069	0		=			
ANR	6157219	Identifier	ret		6157069	0					
ANR	6157220	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6157069	1					
ANR	6157221	Callee	windbg_wait_packet		6157069	0					
ANR	6157222	Identifier	windbg_wait_packet		6157069	0					
ANR	6157223	ArgumentList	ctx		6157069	1					
ANR	6157224	Argument	ctx		6157069	0					
ANR	6157225	Identifier	ctx		6157069	0					
ANR	6157226	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6157069	1					
ANR	6157227	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6157069	0					
ANR	6157228	Argument	NULL		6157069	2					
ANR	6157229	Identifier	NULL		6157069	0					
ANR	6157230	IfStatement	if ( ret != KD_E_OK )		6157069	15					
ANR	6157231	Condition	ret != KD_E_OK	1076:5:23981:23994	6157069	0	True				
ANR	6157232	EqualityExpression	ret != KD_E_OK		6157069	0		!=			
ANR	6157233	Identifier	ret		6157069	0					
ANR	6157234	Identifier	KD_E_OK		6157069	1					
ANR	6157235	CompoundStatement		29:21:659:659	6157069	1					
ANR	6157236	ReturnStatement	return 0 ;	1077:2:24001:24009	6157069	0	True				
ANR	6157237	PrimaryExpression	0		6157069	0					
ANR	6157238	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	1080:1:24016:24085	6157069	16	True				
ANR	6157239	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6157069	0		=			
ANR	6157240	Identifier	ret		6157069	0					
ANR	6157241	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6157069	1					
ANR	6157242	Callee	windbg_wait_packet		6157069	0					
ANR	6157243	Identifier	windbg_wait_packet		6157069	0					
ANR	6157244	ArgumentList	ctx		6157069	1					
ANR	6157245	Argument	ctx		6157069	0					
ANR	6157246	Identifier	ctx		6157069	0					
ANR	6157247	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6157069	1					
ANR	6157248	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6157069	0					
ANR	6157249	Argument	& pkt		6157069	2					
ANR	6157250	UnaryOperationExpression	& pkt		6157069	0					
ANR	6157251	UnaryOperator	&		6157069	0					
ANR	6157252	Identifier	pkt		6157069	1					
ANR	6157253	IfStatement	if ( ret != KD_E_OK )		6157069	17					
ANR	6157254	Condition	ret != KD_E_OK	1081:5:24092:24105	6157069	0	True				
ANR	6157255	EqualityExpression	ret != KD_E_OK		6157069	0		!=			
ANR	6157256	Identifier	ret		6157069	0					
ANR	6157257	Identifier	KD_E_OK		6157069	1					
ANR	6157258	CompoundStatement		34:21:770:770	6157069	1					
ANR	6157259	ReturnStatement	return 0 ;	1082:2:24112:24120	6157069	0	True				
ANR	6157260	PrimaryExpression	0		6157069	0					
ANR	6157261	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	1085:1:24127:24155	6157069	18	True				
ANR	6157262	IdentifierDecl	* rr = PKT_REQ ( pkt )		6157069	0					
ANR	6157263	IdentifierDeclType	kd_req_t *		6157069	0					
ANR	6157264	Identifier	rr		6157069	1					
ANR	6157265	AssignmentExpression	* rr = PKT_REQ ( pkt )		6157069	2		=			
ANR	6157266	Identifier	rr		6157069	0					
ANR	6157267	CallExpression	PKT_REQ ( pkt )		6157069	1					
ANR	6157268	Callee	PKT_REQ		6157069	0					
ANR	6157269	Identifier	PKT_REQ		6157069	0					
ANR	6157270	ArgumentList	pkt		6157069	1					
ANR	6157271	Argument	pkt		6157069	0					
ANR	6157272	Identifier	pkt		6157069	0					
ANR	6157273	IfStatement	if ( rr -> ret )		6157069	19					
ANR	6157274	Condition	rr -> ret	1087:5:24163:24169	6157069	0	True				
ANR	6157275	PtrMemberAccess	rr -> ret		6157069	0					
ANR	6157276	Identifier	rr		6157069	0					
ANR	6157277	Identifier	ret		6157069	1					
ANR	6157278	CompoundStatement		40:14:834:834	6157069	1					
ANR	6157279	ExpressionStatement	free ( pkt )	1088:2:24176:24186	6157069	0	True				
ANR	6157280	CallExpression	free ( pkt )		6157069	0					
ANR	6157281	Callee	free		6157069	0					
ANR	6157282	Identifier	free		6157069	0					
ANR	6157283	ArgumentList	pkt		6157069	1					
ANR	6157284	Argument	pkt		6157069	0					
ANR	6157285	Identifier	pkt		6157069	0					
ANR	6157286	ReturnStatement	return 0 ;	1089:2:24190:24198	6157069	1	True				
ANR	6157287	PrimaryExpression	0		6157069	0					
ANR	6157288	ExpressionStatement	ret = rr -> r_mem . read	1091:1:24204:24224	6157069	20	True				
ANR	6157289	AssignmentExpression	ret = rr -> r_mem . read		6157069	0		=			
ANR	6157290	Identifier	ret		6157069	0					
ANR	6157291	MemberAccess	rr -> r_mem . read		6157069	1					
ANR	6157292	PtrMemberAccess	rr -> r_mem		6157069	0					
ANR	6157293	Identifier	rr		6157069	0					
ANR	6157294	Identifier	r_mem		6157069	1					
ANR	6157295	Identifier	read		6157069	1					
ANR	6157296	ExpressionStatement	free ( pkt )	1092:1:24227:24237	6157069	21	True				
ANR	6157297	CallExpression	free ( pkt )		6157069	0					
ANR	6157298	Callee	free		6157069	0					
ANR	6157299	Identifier	free		6157069	0					
ANR	6157300	ArgumentList	pkt		6157069	1					
ANR	6157301	Argument	pkt		6157069	0					
ANR	6157302	Identifier	pkt		6157069	0					
ANR	6157303	ReturnStatement	return ret ;	1093:1:24240:24250	6157069	22	True				
ANR	6157304	Identifier	ret		6157069	0					
ANR	6157305	ReturnType	int		6157069	1					
ANR	6157306	Identifier	windbg_write_at_phys		6157069	2					
ANR	6157307	ParameterList	"WindCtx * ctx , const uint8_t * buf , const ut64 offset , const int count"		6157069	3					
ANR	6157308	Parameter	WindCtx * ctx	1048:25:23267:23278	6157069	0	True				
ANR	6157309	ParameterType	WindCtx *		6157069	0					
ANR	6157310	Identifier	ctx		6157069	1					
ANR	6157311	Parameter	const uint8_t * buf	1048:39:23281:23298	6157069	1	True				
ANR	6157312	ParameterType	const uint8_t *		6157069	0					
ANR	6157313	Identifier	buf		6157069	1					
ANR	6157314	Parameter	const ut64 offset	1048:59:23301:23317	6157069	2	True				
ANR	6157315	ParameterType	const ut64		6157069	0					
ANR	6157316	Identifier	offset		6157069	1					
ANR	6157317	Parameter	const int count	1048:78:23320:23334	6157069	3	True				
ANR	6157318	ParameterType	const int		6157069	0					
ANR	6157319	Identifier	count		6157069	1					
ANR	6157320	CFGEntryNode	ENTRY		6157069		True				
ANR	6157321	CFGExitNode	EXIT		6157069		True				
ANR	6157322	Symbol	rr		6157069						
ANR	6157323	Symbol	PKT_REQ		6157069						
ANR	6157324	Symbol	& req		6157069						
ANR	6157325	Symbol	rr -> r_mem		6157069						
ANR	6157326	Symbol	req . req		6157069						
ANR	6157327	Symbol	req . r_mem . length		6157069						
ANR	6157328	Symbol	DbgKdWritePhysicalMemoryApi		6157069						
ANR	6157329	Symbol	req . r_mem		6157069						
ANR	6157330	Symbol	rr -> r_mem . read		6157069						
ANR	6157331	Symbol	ctx -> cpu		6157069						
ANR	6157332	Symbol	payload		6157069						
ANR	6157333	Symbol	req . cpu		6157069						
ANR	6157334	Symbol	pkt		6157069						
ANR	6157335	Symbol	rr -> ret		6157069						
ANR	6157336	Symbol	windbg_wait_packet		6157069						
ANR	6157337	Symbol	ctx -> syncd		6157069						
ANR	6157338	Symbol	req		6157069						
ANR	6157339	Symbol	ret		6157069						
ANR	6157340	Symbol	kd_send_data_packet		6157069						
ANR	6157341	Symbol	NULL		6157069						
ANR	6157342	Symbol	offset		6157069						
ANR	6157343	Symbol	KD_E_OK		6157069						
ANR	6157344	Symbol	* rr		6157069						
ANR	6157345	Symbol	ctx		6157069						
ANR	6157346	Symbol	count		6157069						
ANR	6157347	Symbol	R_MIN		6157069						
ANR	6157348	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6157069						
ANR	6157349	Symbol	KD_MAX_PAYLOAD		6157069						
ANR	6157350	Symbol	* ctx		6157069						
ANR	6157351	Symbol	req . r_mem . read		6157069						
ANR	6157352	Symbol	ctx -> io_ptr		6157069						
ANR	6157353	Symbol	buf		6157069						
ANR	6157354	Symbol	req . r_mem . addr		6157069						
ANR	6157355	Symbol	ctx -> seq_id		6157069						
ANR	6157356	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6157069						
ANR	6157357	Symbol	& pkt		6157069						
ANR	6157358	Function	windbg_break	1096:0:24255:24353							
ANR	6157359	FunctionDef	windbg_break (WindCtx * ctx)		6157358	0					
ANR	6157360	CompoundStatement		1096:32:24287:24353	6157358	0					
ANR	6157361	ReturnStatement	"return iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 ) == 1 ;"	1097:1:24290:24351	6157358	0	True				
ANR	6157362	EqualityExpression	"iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 ) == 1"		6157358	0		==			
ANR	6157363	CallExpression	"iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 )"		6157358	0					
ANR	6157364	Callee	iob_write		6157358	0					
ANR	6157365	Identifier	iob_write		6157358	0					
ANR	6157366	ArgumentList	ctx -> io_ptr		6157358	1					
ANR	6157367	Argument	ctx -> io_ptr		6157358	0					
ANR	6157368	PtrMemberAccess	ctx -> io_ptr		6157358	0					
ANR	6157369	Identifier	ctx		6157358	0					
ANR	6157370	Identifier	io_ptr		6157358	1					
ANR	6157371	Argument	"( const uint8_t * ) ""b"""		6157358	1					
ANR	6157372	CastExpression	"( const uint8_t * ) ""b"""		6157358	0					
ANR	6157373	CastTarget	const uint8_t *		6157358	0					
ANR	6157374	PrimaryExpression	"""b"""		6157358	1					
ANR	6157375	Argument	1		6157358	2					
ANR	6157376	PrimaryExpression	1		6157358	0					
ANR	6157377	PrimaryExpression	1		6157358	1					
ANR	6157378	ReturnType	bool		6157358	1					
ANR	6157379	Identifier	windbg_break		6157358	2					
ANR	6157380	ParameterList	WindCtx * ctx		6157358	3					
ANR	6157381	Parameter	WindCtx * ctx	1096:18:24273:24284	6157358	0	True				
ANR	6157382	ParameterType	WindCtx *		6157358	0					
ANR	6157383	Identifier	ctx		6157358	1					
ANR	6157384	CFGEntryNode	ENTRY		6157358		True				
ANR	6157385	CFGExitNode	EXIT		6157358		True				
ANR	6157386	Symbol	ctx -> io_ptr		6157358						
ANR	6157387	Symbol	ctx		6157358						
ANR	6157388	Symbol	iob_write		6157358						
ANR	6157389	Symbol	* ctx		6157358						
ANR	6157390	Function	windbg_break_read	1100:0:24356:24744							
ANR	6157391	FunctionDef	windbg_break_read (WindCtx * ctx)		6157390	0					
ANR	6157392	CompoundStatement		1100:36:24392:24744	6157390	0					
ANR	6157393	Statement	static	1102:1:24433:24438	6157390	0	True				
ANR	6157394	IdentifierDeclStatement	"BOOL WINAPI ( * w32_CancelIoEx ) ( HANDLE , LPOVERLAPPED ) = NULL ;"	1102:8:24440:24498	6157390	1	True				
ANR	6157395	IdentifierDecl	"( * w32_CancelIoEx ) ( HANDLE , LPOVERLAPPED ) = NULL"		6157390	0					
ANR	6157396	IdentifierDeclType	"BOOL WINAPI ( * ) ( HANDLE , LPOVERLAPPED )"		6157390	0					
ANR	6157397	Identifier	w32_CancelIoEx		6157390	1					
ANR	6157398	AssignmentExpression	"( * w32_CancelIoEx ) ( HANDLE , LPOVERLAPPED ) = NULL"		6157390	2		=			
ANR	6157399	Identifier	NULL		6157390	0					
ANR	6157400	Identifier	NULL		6157390	1					
ANR	6157401	IfStatement	if ( ! w32_CancelIoEx )		6157390	2					
ANR	6157402	Condition	! w32_CancelIoEx	1103:5:24505:24519	6157390	0	True				
ANR	6157403	UnaryOperationExpression	! w32_CancelIoEx		6157390	0					
ANR	6157404	UnaryOperator	!		6157390	0					
ANR	6157405	Identifier	w32_CancelIoEx		6157390	1					
ANR	6157406	CompoundStatement		4:22:129:129	6157390	1					
ANR	6157407	Statement	w32_CancelIoEx	1104:2:24526:24539	6157390	0	True				
ANR	6157408	Statement	=	1104:17:24541:24541	6157390	1	True				
ANR	6157409	Statement	(	1104:19:24543:24543	6157390	2	True				
ANR	6157410	Statement	BOOL	1104:20:24544:24547	6157390	3	True				
ANR	6157411	Statement	WINAPI	1104:25:24549:24554	6157390	4	True				
ANR	6157412	Statement	(	1104:32:24556:24556	6157390	5	True				
ANR	6157413	Statement	*	1104:33:24557:24557	6157390	6	True				
ANR	6157414	Statement	)	1104:34:24558:24558	6157390	7	True				
ANR	6157415	Statement	(	1104:35:24559:24559	6157390	8	True				
ANR	6157416	Statement	HANDLE	1104:36:24560:24565	6157390	9	True				
ANR	6157417	Statement	","	1104:42:24566:24566	6157390	10	True				
ANR	6157418	Statement	LPOVERLAPPED	1104:44:24568:24579	6157390	11	True				
ANR	6157419	Statement	)	1104:56:24580:24580	6157390	12	True				
ANR	6157420	Statement	)	1104:57:24581:24581	6157390	13	True				
ANR	6157421	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""CancelIoEx"" )"	1105:5:24588:24657	6157390	14	True				
ANR	6157422	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""CancelIoEx"" )"		6157390	0					
ANR	6157423	Callee	GetProcAddress		6157390	0					
ANR	6157424	Identifier	GetProcAddress		6157390	0					
ANR	6157425	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6157390	1					
ANR	6157426	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6157390	0					
ANR	6157427	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6157390	0					
ANR	6157428	Callee	GetModuleHandle		6157390	0					
ANR	6157429	Identifier	GetModuleHandle		6157390	0					
ANR	6157430	ArgumentList	"TEXT ( ""kernel32"" )"		6157390	1					
ANR	6157431	Argument	"TEXT ( ""kernel32"" )"		6157390	0					
ANR	6157432	CallExpression	"TEXT ( ""kernel32"" )"		6157390	0					
ANR	6157433	Callee	TEXT		6157390	0					
ANR	6157434	Identifier	TEXT		6157390	0					
ANR	6157435	ArgumentList	"""kernel32"""		6157390	1					
ANR	6157436	Argument	"""kernel32"""		6157390	0					
ANR	6157437	PrimaryExpression	"""kernel32"""		6157390	0					
ANR	6157438	Argument	"""CancelIoEx"""		6157390	1					
ANR	6157439	PrimaryExpression	"""CancelIoEx"""		6157390	0					
ANR	6157440	IfStatement	if ( w32_CancelIoEx )		6157390	3					
ANR	6157441	Condition	w32_CancelIoEx	1108:5:24667:24680	6157390	0	True				
ANR	6157442	Identifier	w32_CancelIoEx		6157390	0					
ANR	6157443	CompoundStatement		9:21:290:290	6157390	1					
ANR	6157444	ExpressionStatement	"w32_CancelIoEx ( ctx -> io_ptr , NULL )"	1109:2:24687:24721	6157390	0	True				
ANR	6157445	CallExpression	"w32_CancelIoEx ( ctx -> io_ptr , NULL )"		6157390	0					
ANR	6157446	Callee	w32_CancelIoEx		6157390	0					
ANR	6157447	Identifier	w32_CancelIoEx		6157390	0					
ANR	6157448	ArgumentList	ctx -> io_ptr		6157390	1					
ANR	6157449	Argument	ctx -> io_ptr		6157390	0					
ANR	6157450	PtrMemberAccess	ctx -> io_ptr		6157390	0					
ANR	6157451	Identifier	ctx		6157390	0					
ANR	6157452	Identifier	io_ptr		6157390	1					
ANR	6157453	Argument	NULL		6157390	1					
ANR	6157454	Identifier	NULL		6157390	0					
ANR	6157455	ReturnStatement	return 1 ;	1112:1:24734:24742	6157390	4	True				
ANR	6157456	PrimaryExpression	1		6157390	0					
ANR	6157457	ReturnType	int		6157390	1					
ANR	6157458	Identifier	windbg_break_read		6157390	2					
ANR	6157459	ParameterList	WindCtx * ctx		6157390	3					
ANR	6157460	Parameter	WindCtx * ctx	1100:22:24378:24389	6157390	0	True				
ANR	6157461	ParameterType	WindCtx *		6157390	0					
ANR	6157462	Identifier	ctx		6157390	1					
ANR	6157463	CFGEntryNode	ENTRY		6157390		True				
ANR	6157464	CFGExitNode	EXIT		6157390		True				
ANR	6157465	Symbol	ctx -> io_ptr		6157390						
ANR	6157466	Symbol	NULL		6157390						
ANR	6157467	Symbol	ctx		6157390						
ANR	6157468	Symbol	TEXT		6157390						
ANR	6157469	Symbol	w32_CancelIoEx		6157390						
ANR	6157470	Symbol	GetModuleHandle		6157390						
ANR	6157471	Symbol	* ctx		6157390						
