command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5614792	File	data/converged/CVE-2019-16718~_radare2/qrcode.c								
ANR	5614793	DeclStmt									
ANR	5614794	Decl							int	"int ( const char * text , bool * isNumeric , bool * isAlphanumeric , int * textBits )"	getTextProperties
ANR	5614795	DeclStmt									
ANR	5614796	Decl							int	"int ( int minVersion , int maxVersion , enum qrcodegen_Ecc ecl , int dataLen , int dataBitLen , int ver1To9LenBits , int ver10To26LenBits , int ver27To40LenBits )"	fitVersionToData
ANR	5614797	DeclStmt									
ANR	5614798	Decl							void	"void ( ut8 dataAndQrcode [ ] , int bitLen , ut8 tempBuffer [ ] , int version , enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , bool boostEcl )"	encodeQrCodeTail
ANR	5614799	DeclStmt									
ANR	5614800	Decl							void	"void ( unsigned int val , int numBits , ut8 buffer [ ] , int * bitLen )"	appendBitsToBuffer
ANR	5614801	DeclStmt									
ANR	5614802	Decl							void	"void ( ut8 data [ ] , int version , enum qrcodegen_Ecc ecl , ut8 result [ ] )"	appendErrorCorrection
ANR	5614803	DeclStmt									
ANR	5614804	Decl							int	"int ( int version , enum qrcodegen_Ecc ecl )"	getNumDataCodewords
ANR	5614805	DeclStmt									
ANR	5614806	Decl							int	int ( int version )	getNumRawDataModules
ANR	5614807	DeclStmt									
ANR	5614808	Decl							void	"void ( int degree , ut8 result [ ] )"	calcReedSolomonGenerator
ANR	5614809	DeclStmt									
ANR	5614810	Decl							void	"void ( const ut8 data [ ] , int dataLen , const ut8 generator [ ] , int degree , ut8 result [ ] )"	calcReedSolomonRemainder
ANR	5614811	DeclStmt									
ANR	5614812	Decl							ut8	"ut8 ( ut8 x , ut8 y )"	finiteFieldMultiply
ANR	5614813	DeclStmt									
ANR	5614814	Decl							void	"void ( int version , ut8 qrcode [ ] )"	initializeFunctionModules
ANR	5614815	DeclStmt									
ANR	5614816	Decl							void	"void ( ut8 qrcode [ ] , int version )"	drawWhiteFunctionModules
ANR	5614817	DeclStmt									
ANR	5614818	Decl							void	"void ( enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , ut8 qrcode [ ] )"	drawFormatBits
ANR	5614819	DeclStmt									
ANR	5614820	Decl							int	"int ( int version , ut8 result [ 7 ] )"	getAlignmentPatternPositions
ANR	5614821	DeclStmt									
ANR	5614822	Decl							void	"void ( int left , int top , int width , int height , ut8 qrcode [ ] )"	fillRectangle
ANR	5614823	DeclStmt									
ANR	5614824	Decl							bool	"bool ( const ut8 data [ ] , int dataLen , ut8 qrcode [ ] )"	drawCodewords
ANR	5614825	DeclStmt									
ANR	5614826	Decl							bool	"bool ( const ut8 functionModules [ ] , ut8 qrcode [ ] , enum qrcodegen_Mask mask )"	applyMask
ANR	5614827	DeclStmt									
ANR	5614828	Decl							long	long ( const ut8 qrcode [ ] )	getPenaltyScore
ANR	5614829	DeclStmt									
ANR	5614830	Decl							bool	"bool ( const ut8 qrcode [ ] , int x , int y )"	getModule
ANR	5614831	DeclStmt									
ANR	5614832	Decl							bool	"bool ( ut8 qrcode [ ] , int x , int y , bool isBlack )"	setModule
ANR	5614833	DeclStmt									
ANR	5614834	Decl							void	"void ( ut8 qrcode [ ] , int x , int y , bool isBlack )"	setModuleBounded
ANR	5614835	DeclStmt									
ANR	5614836	Decl							int	int ( const uint8_t qrcode [ ] )	qrcodegen_getSize
ANR	5614837	DeclStmt									
ANR	5614838	Decl							bool	"bool ( const uint8_t qrcode [ ] , int x , int y )"	qrcodegen_getModule
ANR	5614839	DeclStmt									
ANR	5614840	Decl							const char	const char *	ALPHANUMERIC_CHARSET
ANR	5614841	DeclStmt									
ANR	5614842	Decl							const int	const int	PENALTY_N1
ANR	5614843	DeclStmt									
ANR	5614844	Decl							const int	const int	PENALTY_N2
ANR	5614845	DeclStmt									
ANR	5614846	Decl							const int	const int	PENALTY_N3
ANR	5614847	DeclStmt									
ANR	5614848	Decl							const int	const int	PENALTY_N4
ANR	5614849	Function	r_qrcode_text	132:0:7621:10520							
ANR	5614850	FunctionDef	"r_qrcode_text (const char * text , ut8 tempBuffer [ ] , ut8 qrcode [ ] , enum qrcodegen_Ecc ecl , int minVersion , int maxVersion , enum qrcodegen_Mask mask , bool boostEcl)"		5614849	0					
ANR	5614851	CompoundStatement		132:172:7793:10520	5614849	0					
ANR	5614852	IfStatement	if ( ! text || ! tempBuffer || ! qrcode )		5614849	0					
ANR	5614853	Condition	! text || ! tempBuffer || ! qrcode	133:5:7800:7830	5614849	0	True				
ANR	5614854	OrExpression	! text || ! tempBuffer || ! qrcode		5614849	0		||			
ANR	5614855	UnaryOperationExpression	! text		5614849	0					
ANR	5614856	UnaryOperator	!		5614849	0					
ANR	5614857	Identifier	text		5614849	1					
ANR	5614858	OrExpression	! tempBuffer || ! qrcode		5614849	1		||			
ANR	5614859	UnaryOperationExpression	! tempBuffer		5614849	0					
ANR	5614860	UnaryOperator	!		5614849	0					
ANR	5614861	Identifier	tempBuffer		5614849	1					
ANR	5614862	UnaryOperationExpression	! qrcode		5614849	1					
ANR	5614863	UnaryOperator	!		5614849	0					
ANR	5614864	Identifier	qrcode		5614849	1					
ANR	5614865	CompoundStatement		2:38:39:39	5614849	1					
ANR	5614866	ReturnStatement	return false ;	134:2:7837:7849	5614849	0	True				
ANR	5614867	Identifier	false		5614849	0					
ANR	5614868	IfStatement	if ( minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX )		5614849	1					
ANR	5614869	Condition	minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX	136:5:7859:7930	5614849	0	True				
ANR	5614870	OrExpression	minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX		5614849	0		||			
ANR	5614871	RelationalExpression	minVersion < qrcodegen_VERSION_MIN		5614849	0		<			
ANR	5614872	Identifier	minVersion		5614849	0					
ANR	5614873	Identifier	qrcodegen_VERSION_MIN		5614849	1					
ANR	5614874	RelationalExpression	minVersion > qrcodegen_VERSION_MAX		5614849	1		>			
ANR	5614875	Identifier	minVersion		5614849	0					
ANR	5614876	Identifier	qrcodegen_VERSION_MAX		5614849	1					
ANR	5614877	CompoundStatement		5:79:139:139	5614849	1					
ANR	5614878	ReturnStatement	return false ;	137:2:7937:7949	5614849	0	True				
ANR	5614879	Identifier	false		5614849	0					
ANR	5614880	IfStatement	if ( maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX )		5614849	2					
ANR	5614881	Condition	maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX	139:5:7959:8030	5614849	0	True				
ANR	5614882	OrExpression	maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX		5614849	0		||			
ANR	5614883	RelationalExpression	maxVersion < qrcodegen_VERSION_MIN		5614849	0		<			
ANR	5614884	Identifier	maxVersion		5614849	0					
ANR	5614885	Identifier	qrcodegen_VERSION_MIN		5614849	1					
ANR	5614886	RelationalExpression	maxVersion > qrcodegen_VERSION_MAX		5614849	1		>			
ANR	5614887	Identifier	maxVersion		5614849	0					
ANR	5614888	Identifier	qrcodegen_VERSION_MAX		5614849	1					
ANR	5614889	CompoundStatement		8:79:239:239	5614849	1					
ANR	5614890	ReturnStatement	return false ;	140:2:8037:8049	5614849	0	True				
ANR	5614891	Identifier	false		5614849	0					
ANR	5614892	IfStatement	if ( ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH )		5614849	3					
ANR	5614893	Condition	ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH	142:5:8059:8109	5614849	0	True				
ANR	5614894	OrExpression	ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH		5614849	0		||			
ANR	5614895	RelationalExpression	ecl < qrcodegen_Ecc_LOW		5614849	0		<			
ANR	5614896	Identifier	ecl		5614849	0					
ANR	5614897	Identifier	qrcodegen_Ecc_LOW		5614849	1					
ANR	5614898	RelationalExpression	ecl > qrcodegen_Ecc_HIGH		5614849	1		>			
ANR	5614899	Identifier	ecl		5614849	0					
ANR	5614900	Identifier	qrcodegen_Ecc_HIGH		5614849	1					
ANR	5614901	CompoundStatement		11:58:318:318	5614849	1					
ANR	5614902	ReturnStatement	return false ;	143:2:8116:8128	5614849	0	True				
ANR	5614903	Identifier	false		5614849	0					
ANR	5614904	IfStatement	if ( mask < - 1 || mask > 7 )		5614849	4					
ANR	5614905	Condition	mask < - 1 || mask > 7	145:5:8138:8158	5614849	0	True				
ANR	5614906	OrExpression	mask < - 1 || mask > 7		5614849	0		||			
ANR	5614907	RelationalExpression	mask < - 1		5614849	0		<			
ANR	5614908	Identifier	mask		5614849	0					
ANR	5614909	UnaryOperationExpression	- 1		5614849	1					
ANR	5614910	UnaryOperator	-		5614849	0					
ANR	5614911	PrimaryExpression	1		5614849	1					
ANR	5614912	RelationalExpression	mask > 7		5614849	1		>			
ANR	5614913	Identifier	mask		5614849	0					
ANR	5614914	PrimaryExpression	7		5614849	1					
ANR	5614915	CompoundStatement		14:28:367:367	5614849	1					
ANR	5614916	ReturnStatement	return false ;	146:2:8165:8177	5614849	0	True				
ANR	5614917	Identifier	false		5614849	0					
ANR	5614918	ExpressionStatement	qrcode [ 0 ] = 0	150:1:8225:8238	5614849	5	True				
ANR	5614919	AssignmentExpression	qrcode [ 0 ] = 0		5614849	0		=			
ANR	5614920	ArrayIndexing	qrcode [ 0 ]		5614849	0					
ANR	5614921	Identifier	qrcode		5614849	0					
ANR	5614922	PrimaryExpression	0		5614849	1					
ANR	5614923	PrimaryExpression	0		5614849	1					
ANR	5614924	IdentifierDeclStatement	"bool isNumeric , isAlphanumeric ;"	153:1:8266:8296	5614849	6	True				
ANR	5614925	IdentifierDecl	isNumeric		5614849	0					
ANR	5614926	IdentifierDeclType	bool		5614849	0					
ANR	5614927	Identifier	isNumeric		5614849	1					
ANR	5614928	IdentifierDecl	isAlphanumeric		5614849	1					
ANR	5614929	IdentifierDeclType	bool		5614849	0					
ANR	5614930	Identifier	isAlphanumeric		5614849	1					
ANR	5614931	IdentifierDeclStatement	int textBits ;	154:1:8299:8311	5614849	7	True				
ANR	5614932	IdentifierDecl	textBits		5614849	0					
ANR	5614933	IdentifierDeclType	int		5614849	0					
ANR	5614934	Identifier	textBits		5614849	1					
ANR	5614935	IdentifierDeclStatement	"int textLen = getTextProperties ( text , & isNumeric , & isAlphanumeric , & textBits ) ;"	155:1:8314:8392	5614849	8	True				
ANR	5614936	IdentifierDecl	"textLen = getTextProperties ( text , & isNumeric , & isAlphanumeric , & textBits )"		5614849	0					
ANR	5614937	IdentifierDeclType	int		5614849	0					
ANR	5614938	Identifier	textLen		5614849	1					
ANR	5614939	AssignmentExpression	"textLen = getTextProperties ( text , & isNumeric , & isAlphanumeric , & textBits )"		5614849	2		=			
ANR	5614940	Identifier	textLen		5614849	0					
ANR	5614941	CallExpression	"getTextProperties ( text , & isNumeric , & isAlphanumeric , & textBits )"		5614849	1					
ANR	5614942	Callee	getTextProperties		5614849	0					
ANR	5614943	Identifier	getTextProperties		5614849	0					
ANR	5614944	ArgumentList	text		5614849	1					
ANR	5614945	Argument	text		5614849	0					
ANR	5614946	Identifier	text		5614849	0					
ANR	5614947	Argument	& isNumeric		5614849	1					
ANR	5614948	UnaryOperationExpression	& isNumeric		5614849	0					
ANR	5614949	UnaryOperator	&		5614849	0					
ANR	5614950	Identifier	isNumeric		5614849	1					
ANR	5614951	Argument	& isAlphanumeric		5614849	2					
ANR	5614952	UnaryOperationExpression	& isAlphanumeric		5614849	0					
ANR	5614953	UnaryOperator	&		5614849	0					
ANR	5614954	Identifier	isAlphanumeric		5614849	1					
ANR	5614955	Argument	& textBits		5614849	3					
ANR	5614956	UnaryOperationExpression	& textBits		5614849	0					
ANR	5614957	UnaryOperator	&		5614849	0					
ANR	5614958	Identifier	textBits		5614849	1					
ANR	5614959	IfStatement	if ( textLen < 0 )		5614849	9					
ANR	5614960	Condition	textLen < 0	156:5:8399:8409	5614849	0	True				
ANR	5614961	RelationalExpression	textLen < 0		5614849	0		<			
ANR	5614962	Identifier	textLen		5614849	0					
ANR	5614963	PrimaryExpression	0		5614849	1					
ANR	5614964	CompoundStatement		25:18:618:618	5614849	1					
ANR	5614965	ReturnStatement	return false ;	157:2:8416:8428	5614849	0	True				
ANR	5614966	Identifier	false		5614849	0					
ANR	5614967	IfStatement	if ( ! isAlphanumeric )		5614849	10					
ANR	5614968	Condition	! isAlphanumeric	160:5:8439:8453	5614849	0	True				
ANR	5614969	UnaryOperationExpression	! isAlphanumeric		5614849	0					
ANR	5614970	UnaryOperator	!		5614849	0					
ANR	5614971	Identifier	isAlphanumeric		5614849	1					
ANR	5614972	CompoundStatement		33:2:783:788	5614849	1					
ANR	5614973	IfStatement	if ( textLen > qrcodegen_BUFFER_LEN_FOR_VERSION ( maxVersion ) )		5614849	0					
ANR	5614974	Condition	textLen > qrcodegen_BUFFER_LEN_FOR_VERSION ( maxVersion )	161:6:8495:8549	5614849	0	True				
ANR	5614975	RelationalExpression	textLen > qrcodegen_BUFFER_LEN_FOR_VERSION ( maxVersion )		5614849	0		>			
ANR	5614976	Identifier	textLen		5614849	0					
ANR	5614977	CallExpression	qrcodegen_BUFFER_LEN_FOR_VERSION ( maxVersion )		5614849	1					
ANR	5614978	Callee	qrcodegen_BUFFER_LEN_FOR_VERSION		5614849	0					
ANR	5614979	Identifier	qrcodegen_BUFFER_LEN_FOR_VERSION		5614849	0					
ANR	5614980	ArgumentList	maxVersion		5614849	1					
ANR	5614981	Argument	maxVersion		5614849	0					
ANR	5614982	Identifier	maxVersion		5614849	0					
ANR	5614983	CompoundStatement		30:63:758:758	5614849	1					
ANR	5614984	ReturnStatement	return false ;	162:3:8557:8569	5614849	0	True				
ANR	5614985	Identifier	false		5614849	0					
ANR	5614986	IdentifierDeclStatement	int i ;	164:2:8577:8582	5614849	1	True				
ANR	5614987	IdentifierDecl	i		5614849	0					
ANR	5614988	IdentifierDeclType	int		5614849	0					
ANR	5614989	Identifier	i		5614849	1					
ANR	5614990	ForStatement	for ( i = 0 ; i < textLen ; i ++ )		5614849	2					
ANR	5614991	ForInit	i = 0 ;	165:7:8591:8596	5614849	0	True				
ANR	5614992	AssignmentExpression	i = 0		5614849	0		=			
ANR	5614993	Identifier	i		5614849	0					
ANR	5614994	PrimaryExpression	0		5614849	1					
ANR	5614995	Condition	i < textLen	165:14:8598:8608	5614849	1	True				
ANR	5614996	RelationalExpression	i < textLen		5614849	0		<			
ANR	5614997	Identifier	i		5614849	0					
ANR	5614998	Identifier	textLen		5614849	1					
ANR	5614999	PostIncDecOperationExpression	i ++	165:27:8611:8613	5614849	2	True				
ANR	5615000	Identifier	i		5614849	0					
ANR	5615001	IncDec	++		5614849	1					
ANR	5615002	CompoundStatement		34:32:822:822	5614849	3					
ANR	5615003	ExpressionStatement	tempBuffer [ i ] = ( ut8 ) text [ i ]	166:3:8621:8650	5614849	0	True				
ANR	5615004	AssignmentExpression	tempBuffer [ i ] = ( ut8 ) text [ i ]		5614849	0		=			
ANR	5615005	ArrayIndexing	tempBuffer [ i ]		5614849	0					
ANR	5615006	Identifier	tempBuffer		5614849	0					
ANR	5615007	Identifier	i		5614849	1					
ANR	5615008	CastExpression	( ut8 ) text [ i ]		5614849	1					
ANR	5615009	CastTarget	ut8		5614849	0					
ANR	5615010	ArrayIndexing	text [ i ]		5614849	1					
ANR	5615011	Identifier	text		5614849	0					
ANR	5615012	Identifier	i		5614849	1					
ANR	5615013	ReturnStatement	"return r_qrcode_bin ( tempBuffer , ( size_t ) textLen , qrcode , ecl , minVersion , maxVersion , mask , boostEcl ) ;"	168:2:8658:8761	5614849	3	True				
ANR	5615014	CallExpression	"r_qrcode_bin ( tempBuffer , ( size_t ) textLen , qrcode , ecl , minVersion , maxVersion , mask , boostEcl )"		5614849	0					
ANR	5615015	Callee	r_qrcode_bin		5614849	0					
ANR	5615016	Identifier	r_qrcode_bin		5614849	0					
ANR	5615017	ArgumentList	tempBuffer		5614849	1					
ANR	5615018	Argument	tempBuffer		5614849	0					
ANR	5615019	Identifier	tempBuffer		5614849	0					
ANR	5615020	Argument	( size_t ) textLen		5614849	1					
ANR	5615021	CastExpression	( size_t ) textLen		5614849	0					
ANR	5615022	CastTarget	size_t		5614849	0					
ANR	5615023	Identifier	textLen		5614849	1					
ANR	5615024	Argument	qrcode		5614849	2					
ANR	5615025	Identifier	qrcode		5614849	0					
ANR	5615026	Argument	ecl		5614849	3					
ANR	5615027	Identifier	ecl		5614849	0					
ANR	5615028	Argument	minVersion		5614849	4					
ANR	5615029	Identifier	minVersion		5614849	0					
ANR	5615030	Argument	maxVersion		5614849	5					
ANR	5615031	Identifier	maxVersion		5614849	0					
ANR	5615032	Argument	mask		5614849	6					
ANR	5615033	Identifier	mask		5614849	0					
ANR	5615034	Argument	boostEcl		5614849	7					
ANR	5615035	Identifier	boostEcl		5614849	0					
ANR	5615036	IdentifierDeclStatement	"int version = fitVersionToData ( minVersion , maxVersion , ecl , textLen , ( int ) textBits , ( isNumeric ? 10 : 9 ) , ( isNumeric ? 12 : 11 ) , ( isNumeric ? 14 : 13 ) ) ;"	171:1:8768:8917	5614849	11	True				
ANR	5615037	IdentifierDecl	"version = fitVersionToData ( minVersion , maxVersion , ecl , textLen , ( int ) textBits , ( isNumeric ? 10 : 9 ) , ( isNumeric ? 12 : 11 ) , ( isNumeric ? 14 : 13 ) )"		5614849	0					
ANR	5615038	IdentifierDeclType	int		5614849	0					
ANR	5615039	Identifier	version		5614849	1					
ANR	5615040	AssignmentExpression	"version = fitVersionToData ( minVersion , maxVersion , ecl , textLen , ( int ) textBits , ( isNumeric ? 10 : 9 ) , ( isNumeric ? 12 : 11 ) , ( isNumeric ? 14 : 13 ) )"		5614849	2		=			
ANR	5615041	Identifier	version		5614849	0					
ANR	5615042	CallExpression	"fitVersionToData ( minVersion , maxVersion , ecl , textLen , ( int ) textBits , ( isNumeric ? 10 : 9 ) , ( isNumeric ? 12 : 11 ) , ( isNumeric ? 14 : 13 ) )"		5614849	1					
ANR	5615043	Callee	fitVersionToData		5614849	0					
ANR	5615044	Identifier	fitVersionToData		5614849	0					
ANR	5615045	ArgumentList	minVersion		5614849	1					
ANR	5615046	Argument	minVersion		5614849	0					
ANR	5615047	Identifier	minVersion		5614849	0					
ANR	5615048	Argument	maxVersion		5614849	1					
ANR	5615049	Identifier	maxVersion		5614849	0					
ANR	5615050	Argument	ecl		5614849	2					
ANR	5615051	Identifier	ecl		5614849	0					
ANR	5615052	Argument	textLen		5614849	3					
ANR	5615053	Identifier	textLen		5614849	0					
ANR	5615054	Argument	( int ) textBits		5614849	4					
ANR	5615055	CastExpression	( int ) textBits		5614849	0					
ANR	5615056	CastTarget	int		5614849	0					
ANR	5615057	Identifier	textBits		5614849	1					
ANR	5615058	Argument	isNumeric ? 10 : 9		5614849	5					
ANR	5615059	ConditionalExpression	isNumeric ? 10 : 9		5614849	0					
ANR	5615060	Condition	isNumeric		5614849	0					
ANR	5615061	Identifier	isNumeric		5614849	0					
ANR	5615062	PrimaryExpression	10		5614849	1					
ANR	5615063	PrimaryExpression	9		5614849	2					
ANR	5615064	Argument	isNumeric ? 12 : 11		5614849	6					
ANR	5615065	ConditionalExpression	isNumeric ? 12 : 11		5614849	0					
ANR	5615066	Condition	isNumeric		5614849	0					
ANR	5615067	Identifier	isNumeric		5614849	0					
ANR	5615068	PrimaryExpression	12		5614849	1					
ANR	5615069	PrimaryExpression	11		5614849	2					
ANR	5615070	Argument	isNumeric ? 14 : 13		5614849	7					
ANR	5615071	ConditionalExpression	isNumeric ? 14 : 13		5614849	0					
ANR	5615072	Condition	isNumeric		5614849	0					
ANR	5615073	Identifier	isNumeric		5614849	0					
ANR	5615074	PrimaryExpression	14		5614849	1					
ANR	5615075	PrimaryExpression	13		5614849	2					
ANR	5615076	IfStatement	if ( version == 0 )		5614849	12					
ANR	5615077	Condition	version == 0	173:5:8924:8935	5614849	0	True				
ANR	5615078	EqualityExpression	version == 0		5614849	0		==			
ANR	5615079	Identifier	version		5614849	0					
ANR	5615080	PrimaryExpression	0		5614849	1					
ANR	5615081	CompoundStatement		42:19:1144:1144	5614849	1					
ANR	5615082	ReturnStatement	return false ;	174:2:8942:8954	5614849	0	True				
ANR	5615083	Identifier	false		5614849	0					
ANR	5615084	ExpressionStatement	"memset ( qrcode , 0 , qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] ) )"	176:1:8960:9042	5614849	13	True				
ANR	5615085	CallExpression	"memset ( qrcode , 0 , qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] ) )"		5614849	0					
ANR	5615086	Callee	memset		5614849	0					
ANR	5615087	Identifier	memset		5614849	0					
ANR	5615088	ArgumentList	qrcode		5614849	1					
ANR	5615089	Argument	qrcode		5614849	0					
ANR	5615090	Identifier	qrcode		5614849	0					
ANR	5615091	Argument	0		5614849	1					
ANR	5615092	PrimaryExpression	0		5614849	0					
ANR	5615093	Argument	qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] )		5614849	2					
ANR	5615094	MultiplicativeExpression	qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] )		5614849	0		*			
ANR	5615095	CallExpression	qrcodegen_BUFFER_LEN_FOR_VERSION ( version )		5614849	0					
ANR	5615096	Callee	qrcodegen_BUFFER_LEN_FOR_VERSION		5614849	0					
ANR	5615097	Identifier	qrcodegen_BUFFER_LEN_FOR_VERSION		5614849	0					
ANR	5615098	ArgumentList	version		5614849	1					
ANR	5615099	Argument	version		5614849	0					
ANR	5615100	Identifier	version		5614849	0					
ANR	5615101	SizeofExpression	sizeof ( qrcode [ 0 ] )		5614849	1					
ANR	5615102	Sizeof	sizeof		5614849	0					
ANR	5615103	ArrayIndexing	qrcode [ 0 ]		5614849	1					
ANR	5615104	Identifier	qrcode		5614849	0					
ANR	5615105	PrimaryExpression	0		5614849	1					
ANR	5615106	IdentifierDeclStatement	int bitLen = 0 ;	177:1:9045:9059	5614849	14	True				
ANR	5615107	IdentifierDecl	bitLen = 0		5614849	0					
ANR	5615108	IdentifierDeclType	int		5614849	0					
ANR	5615109	Identifier	bitLen		5614849	1					
ANR	5615110	AssignmentExpression	bitLen = 0		5614849	2		=			
ANR	5615111	Identifier	bitLen		5614849	0					
ANR	5615112	PrimaryExpression	0		5614849	1					
ANR	5615113	IfStatement	if ( isNumeric && textLen > 0 )		5614849	15					
ANR	5615114	Condition	isNumeric && textLen > 0	180:5:9107:9130	5614849	0	True				
ANR	5615115	AndExpression	isNumeric && textLen > 0		5614849	0		&&			
ANR	5615116	Identifier	isNumeric		5614849	0					
ANR	5615117	RelationalExpression	textLen > 0		5614849	1		>			
ANR	5615118	Identifier	textLen		5614849	0					
ANR	5615119	PrimaryExpression	0		5614849	1					
ANR	5615120	CompoundStatement		55:2:1570:1583	5614849	1					
ANR	5615121	ExpressionStatement	"appendBitsToBuffer ( 1 , 4 , qrcode , & bitLen )"	181:2:9137:9179	5614849	0	True				
ANR	5615122	CallExpression	"appendBitsToBuffer ( 1 , 4 , qrcode , & bitLen )"		5614849	0					
ANR	5615123	Callee	appendBitsToBuffer		5614849	0					
ANR	5615124	Identifier	appendBitsToBuffer		5614849	0					
ANR	5615125	ArgumentList	1		5614849	1					
ANR	5615126	Argument	1		5614849	0					
ANR	5615127	PrimaryExpression	1		5614849	0					
ANR	5615128	Argument	4		5614849	1					
ANR	5615129	PrimaryExpression	4		5614849	0					
ANR	5615130	Argument	qrcode		5614849	2					
ANR	5615131	Identifier	qrcode		5614849	0					
ANR	5615132	Argument	& bitLen		5614849	3					
ANR	5615133	UnaryOperationExpression	& bitLen		5614849	0					
ANR	5615134	UnaryOperator	&		5614849	0					
ANR	5615135	Identifier	bitLen		5614849	1					
ANR	5615136	IdentifierDeclStatement	int lengthBits = version <= 9 ? 10 : ( version <= 26 ? 12 : 14 ) ;	182:2:9183:9241	5614849	1	True				
ANR	5615137	IdentifierDecl	lengthBits = version <= 9 ? 10 : ( version <= 26 ? 12 : 14 )		5614849	0					
ANR	5615138	IdentifierDeclType	int		5614849	0					
ANR	5615139	Identifier	lengthBits		5614849	1					
ANR	5615140	AssignmentExpression	lengthBits = version <= 9 ? 10 : ( version <= 26 ? 12 : 14 )		5614849	2		=			
ANR	5615141	Identifier	lengthBits		5614849	0					
ANR	5615142	ConditionalExpression	version <= 9 ? 10 : ( version <= 26 ? 12 : 14 )		5614849	1					
ANR	5615143	Condition	version <= 9		5614849	0					
ANR	5615144	RelationalExpression	version <= 9		5614849	0		<=			
ANR	5615145	Identifier	version		5614849	0					
ANR	5615146	PrimaryExpression	9		5614849	1					
ANR	5615147	PrimaryExpression	10		5614849	1					
ANR	5615148	ConditionalExpression	version <= 26 ? 12 : 14		5614849	2					
ANR	5615149	Condition	version <= 26		5614849	0					
ANR	5615150	RelationalExpression	version <= 26		5614849	0		<=			
ANR	5615151	Identifier	version		5614849	0					
ANR	5615152	PrimaryExpression	26		5614849	1					
ANR	5615153	PrimaryExpression	12		5614849	1					
ANR	5615154	PrimaryExpression	14		5614849	2					
ANR	5615155	ExpressionStatement	"appendBitsToBuffer ( ( unsigned int ) textLen , lengthBits , qrcode , & bitLen )"	183:2:9245:9317	5614849	2	True				
ANR	5615156	CallExpression	"appendBitsToBuffer ( ( unsigned int ) textLen , lengthBits , qrcode , & bitLen )"		5614849	0					
ANR	5615157	Callee	appendBitsToBuffer		5614849	0					
ANR	5615158	Identifier	appendBitsToBuffer		5614849	0					
ANR	5615159	ArgumentList	( unsigned int ) textLen		5614849	1					
ANR	5615160	Argument	( unsigned int ) textLen		5614849	0					
ANR	5615161	CastExpression	( unsigned int ) textLen		5614849	0					
ANR	5615162	CastTarget	unsigned int		5614849	0					
ANR	5615163	Identifier	textLen		5614849	1					
ANR	5615164	Argument	lengthBits		5614849	1					
ANR	5615165	Identifier	lengthBits		5614849	0					
ANR	5615166	Argument	qrcode		5614849	2					
ANR	5615167	Identifier	qrcode		5614849	0					
ANR	5615168	Argument	& bitLen		5614849	3					
ANR	5615169	UnaryOperationExpression	& bitLen		5614849	0					
ANR	5615170	UnaryOperator	&		5614849	0					
ANR	5615171	Identifier	bitLen		5614849	1					
ANR	5615172	IdentifierDeclStatement	int accumData = 0 ;	184:2:9321:9338	5614849	3	True				
ANR	5615173	IdentifierDecl	accumData = 0		5614849	0					
ANR	5615174	IdentifierDeclType	int		5614849	0					
ANR	5615175	Identifier	accumData		5614849	1					
ANR	5615176	AssignmentExpression	accumData = 0		5614849	2		=			
ANR	5615177	Identifier	accumData		5614849	0					
ANR	5615178	PrimaryExpression	0		5614849	1					
ANR	5615179	IdentifierDeclStatement	int accumCount = 0 ;	185:2:9342:9360	5614849	4	True				
ANR	5615180	IdentifierDecl	accumCount = 0		5614849	0					
ANR	5615181	IdentifierDeclType	int		5614849	0					
ANR	5615182	Identifier	accumCount		5614849	1					
ANR	5615183	AssignmentExpression	accumCount = 0		5614849	2		=			
ANR	5615184	Identifier	accumCount		5614849	0					
ANR	5615185	PrimaryExpression	0		5614849	1					
ANR	5615186	IdentifierDeclStatement	const char * p ;	186:2:9364:9377	5614849	5	True				
ANR	5615187	IdentifierDecl	* p		5614849	0					
ANR	5615188	IdentifierDeclType	const char *		5614849	0					
ANR	5615189	Identifier	p		5614849	1					
ANR	5615190	ForStatement	for ( p = text ; * p != '\\0' ; p ++ )		5614849	6					
ANR	5615191	ForInit	p = text ;	187:7:9386:9394	5614849	0	True				
ANR	5615192	AssignmentExpression	p = text		5614849	0		=			
ANR	5615193	Identifier	p		5614849	0					
ANR	5615194	Identifier	text		5614849	1					
ANR	5615195	Condition	* p != '\\0'	187:17:9396:9405	5614849	1	True				
ANR	5615196	EqualityExpression	* p != '\\0'		5614849	0		!=			
ANR	5615197	UnaryOperationExpression	* p		5614849	0					
ANR	5615198	UnaryOperator	*		5614849	0					
ANR	5615199	Identifier	p		5614849	1					
ANR	5615200	PrimaryExpression	'\\0'		5614849	1					
ANR	5615201	PostIncDecOperationExpression	p ++	187:29:9408:9410	5614849	2	True				
ANR	5615202	Identifier	p		5614849	0					
ANR	5615203	IncDec	++		5614849	1					
ANR	5615204	CompoundStatement		56:34:1619:1619	5614849	3					
ANR	5615205	ExpressionStatement	accumData = accumData * 10 + ( * p - '0' )	188:3:9418:9457	5614849	0	True				
ANR	5615206	AssignmentExpression	accumData = accumData * 10 + ( * p - '0' )		5614849	0		=			
ANR	5615207	Identifier	accumData		5614849	0					
ANR	5615208	AdditiveExpression	accumData * 10 + ( * p - '0' )		5614849	1		+			
ANR	5615209	MultiplicativeExpression	accumData * 10		5614849	0		*			
ANR	5615210	Identifier	accumData		5614849	0					
ANR	5615211	PrimaryExpression	10		5614849	1					
ANR	5615212	AdditiveExpression	* p - '0'		5614849	1		-			
ANR	5615213	UnaryOperationExpression	* p		5614849	0					
ANR	5615214	UnaryOperator	*		5614849	0					
ANR	5615215	Identifier	p		5614849	1					
ANR	5615216	PrimaryExpression	'0'		5614849	1					
ANR	5615217	ExpressionStatement	accumCount ++	189:3:9462:9474	5614849	1	True				
ANR	5615218	PostIncDecOperationExpression	accumCount ++		5614849	0					
ANR	5615219	Identifier	accumCount		5614849	0					
ANR	5615220	IncDec	++		5614849	1					
ANR	5615221	IfStatement	if ( accumCount == 3 )		5614849	2					
ANR	5615222	Condition	accumCount == 3	190:7:9483:9497	5614849	0	True				
ANR	5615223	EqualityExpression	accumCount == 3		5614849	0		==			
ANR	5615224	Identifier	accumCount		5614849	0					
ANR	5615225	PrimaryExpression	3		5614849	1					
ANR	5615226	CompoundStatement		59:24:1706:1706	5614849	1					
ANR	5615227	ExpressionStatement	"appendBitsToBuffer ( accumData , 10 , qrcode , & bitLen )"	191:4:9506:9557	5614849	0	True				
ANR	5615228	CallExpression	"appendBitsToBuffer ( accumData , 10 , qrcode , & bitLen )"		5614849	0					
ANR	5615229	Callee	appendBitsToBuffer		5614849	0					
ANR	5615230	Identifier	appendBitsToBuffer		5614849	0					
ANR	5615231	ArgumentList	accumData		5614849	1					
ANR	5615232	Argument	accumData		5614849	0					
ANR	5615233	Identifier	accumData		5614849	0					
ANR	5615234	Argument	10		5614849	1					
ANR	5615235	PrimaryExpression	10		5614849	0					
ANR	5615236	Argument	qrcode		5614849	2					
ANR	5615237	Identifier	qrcode		5614849	0					
ANR	5615238	Argument	& bitLen		5614849	3					
ANR	5615239	UnaryOperationExpression	& bitLen		5614849	0					
ANR	5615240	UnaryOperator	&		5614849	0					
ANR	5615241	Identifier	bitLen		5614849	1					
ANR	5615242	ExpressionStatement	accumData = 0	192:4:9563:9576	5614849	1	True				
ANR	5615243	AssignmentExpression	accumData = 0		5614849	0		=			
ANR	5615244	Identifier	accumData		5614849	0					
ANR	5615245	PrimaryExpression	0		5614849	1					
ANR	5615246	ExpressionStatement	accumCount = 0	193:4:9582:9596	5614849	2	True				
ANR	5615247	AssignmentExpression	accumCount = 0		5614849	0		=			
ANR	5615248	Identifier	accumCount		5614849	0					
ANR	5615249	PrimaryExpression	0		5614849	1					
ANR	5615250	IfStatement	if ( accumCount > 0 )		5614849	7					
ANR	5615251	Condition	accumCount > 0	196:6:9613:9626	5614849	0	True				
ANR	5615252	RelationalExpression	accumCount > 0		5614849	0		>			
ANR	5615253	Identifier	accumCount		5614849	0					
ANR	5615254	PrimaryExpression	0		5614849	1					
ANR	5615255	CompoundStatement		65:22:1835:1835	5614849	1					
ANR	5615256	ExpressionStatement	"appendBitsToBuffer ( accumData , accumCount * 3 + 1 , qrcode , & bitLen )"	197:3:9661:9728	5614849	0	True				
ANR	5615257	CallExpression	"appendBitsToBuffer ( accumData , accumCount * 3 + 1 , qrcode , & bitLen )"		5614849	0					
ANR	5615258	Callee	appendBitsToBuffer		5614849	0					
ANR	5615259	Identifier	appendBitsToBuffer		5614849	0					
ANR	5615260	ArgumentList	accumData		5614849	1					
ANR	5615261	Argument	accumData		5614849	0					
ANR	5615262	Identifier	accumData		5614849	0					
ANR	5615263	Argument	accumCount * 3 + 1		5614849	1					
ANR	5615264	AdditiveExpression	accumCount * 3 + 1		5614849	0		+			
ANR	5615265	MultiplicativeExpression	accumCount * 3		5614849	0		*			
ANR	5615266	Identifier	accumCount		5614849	0					
ANR	5615267	PrimaryExpression	3		5614849	1					
ANR	5615268	PrimaryExpression	1		5614849	1					
ANR	5615269	Argument	qrcode		5614849	2					
ANR	5615270	Identifier	qrcode		5614849	0					
ANR	5615271	Argument	& bitLen		5614849	3					
ANR	5615272	UnaryOperationExpression	& bitLen		5614849	0					
ANR	5615273	UnaryOperator	&		5614849	0					
ANR	5615274	Identifier	bitLen		5614849	1					
ANR	5615275	ElseStatement	else		5614849	0					
ANR	5615276	IfStatement	if ( isAlphanumeric && textLen > 0 )		5614849	0					
ANR	5615277	Condition	isAlphanumeric && textLen > 0	200:12:9747:9775	5614849	0	True				
ANR	5615278	AndExpression	isAlphanumeric && textLen > 0		5614849	0		&&			
ANR	5615279	Identifier	isAlphanumeric		5614849	0					
ANR	5615280	RelationalExpression	textLen > 0		5614849	1		>			
ANR	5615281	Identifier	textLen		5614849	0					
ANR	5615282	PrimaryExpression	0		5614849	1					
ANR	5615283	CompoundStatement		75:2:2214:2227	5614849	1					
ANR	5615284	ExpressionStatement	"appendBitsToBuffer ( 2 , 4 , qrcode , & bitLen )"	201:2:9782:9824	5614849	0	True				
ANR	5615285	CallExpression	"appendBitsToBuffer ( 2 , 4 , qrcode , & bitLen )"		5614849	0					
ANR	5615286	Callee	appendBitsToBuffer		5614849	0					
ANR	5615287	Identifier	appendBitsToBuffer		5614849	0					
ANR	5615288	ArgumentList	2		5614849	1					
ANR	5615289	Argument	2		5614849	0					
ANR	5615290	PrimaryExpression	2		5614849	0					
ANR	5615291	Argument	4		5614849	1					
ANR	5615292	PrimaryExpression	4		5614849	0					
ANR	5615293	Argument	qrcode		5614849	2					
ANR	5615294	Identifier	qrcode		5614849	0					
ANR	5615295	Argument	& bitLen		5614849	3					
ANR	5615296	UnaryOperationExpression	& bitLen		5614849	0					
ANR	5615297	UnaryOperator	&		5614849	0					
ANR	5615298	Identifier	bitLen		5614849	1					
ANR	5615299	IdentifierDeclStatement	int lengthBits = version <= 9 ? 9 : ( version <= 26 ? 11 : 13 ) ;	202:2:9828:9885	5614849	1	True				
ANR	5615300	IdentifierDecl	lengthBits = version <= 9 ? 9 : ( version <= 26 ? 11 : 13 )		5614849	0					
ANR	5615301	IdentifierDeclType	int		5614849	0					
ANR	5615302	Identifier	lengthBits		5614849	1					
ANR	5615303	AssignmentExpression	lengthBits = version <= 9 ? 9 : ( version <= 26 ? 11 : 13 )		5614849	2		=			
ANR	5615304	Identifier	lengthBits		5614849	0					
ANR	5615305	ConditionalExpression	version <= 9 ? 9 : ( version <= 26 ? 11 : 13 )		5614849	1					
ANR	5615306	Condition	version <= 9		5614849	0					
ANR	5615307	RelationalExpression	version <= 9		5614849	0		<=			
ANR	5615308	Identifier	version		5614849	0					
ANR	5615309	PrimaryExpression	9		5614849	1					
ANR	5615310	PrimaryExpression	9		5614849	1					
ANR	5615311	ConditionalExpression	version <= 26 ? 11 : 13		5614849	2					
ANR	5615312	Condition	version <= 26		5614849	0					
ANR	5615313	RelationalExpression	version <= 26		5614849	0		<=			
ANR	5615314	Identifier	version		5614849	0					
ANR	5615315	PrimaryExpression	26		5614849	1					
ANR	5615316	PrimaryExpression	11		5614849	1					
ANR	5615317	PrimaryExpression	13		5614849	2					
ANR	5615318	ExpressionStatement	"appendBitsToBuffer ( ( unsigned int ) textLen , lengthBits , qrcode , & bitLen )"	203:2:9889:9961	5614849	2	True				
ANR	5615319	CallExpression	"appendBitsToBuffer ( ( unsigned int ) textLen , lengthBits , qrcode , & bitLen )"		5614849	0					
ANR	5615320	Callee	appendBitsToBuffer		5614849	0					
ANR	5615321	Identifier	appendBitsToBuffer		5614849	0					
ANR	5615322	ArgumentList	( unsigned int ) textLen		5614849	1					
ANR	5615323	Argument	( unsigned int ) textLen		5614849	0					
ANR	5615324	CastExpression	( unsigned int ) textLen		5614849	0					
ANR	5615325	CastTarget	unsigned int		5614849	0					
ANR	5615326	Identifier	textLen		5614849	1					
ANR	5615327	Argument	lengthBits		5614849	1					
ANR	5615328	Identifier	lengthBits		5614849	0					
ANR	5615329	Argument	qrcode		5614849	2					
ANR	5615330	Identifier	qrcode		5614849	0					
ANR	5615331	Argument	& bitLen		5614849	3					
ANR	5615332	UnaryOperationExpression	& bitLen		5614849	0					
ANR	5615333	UnaryOperator	&		5614849	0					
ANR	5615334	Identifier	bitLen		5614849	1					
ANR	5615335	IdentifierDeclStatement	int accumData = 0 ;	204:2:9965:9982	5614849	3	True				
ANR	5615336	IdentifierDecl	accumData = 0		5614849	0					
ANR	5615337	IdentifierDeclType	int		5614849	0					
ANR	5615338	Identifier	accumData		5614849	1					
ANR	5615339	AssignmentExpression	accumData = 0		5614849	2		=			
ANR	5615340	Identifier	accumData		5614849	0					
ANR	5615341	PrimaryExpression	0		5614849	1					
ANR	5615342	IdentifierDeclStatement	int accumCount = 0 ;	205:2:9986:10004	5614849	4	True				
ANR	5615343	IdentifierDecl	accumCount = 0		5614849	0					
ANR	5615344	IdentifierDeclType	int		5614849	0					
ANR	5615345	Identifier	accumCount		5614849	1					
ANR	5615346	AssignmentExpression	accumCount = 0		5614849	2		=			
ANR	5615347	Identifier	accumCount		5614849	0					
ANR	5615348	PrimaryExpression	0		5614849	1					
ANR	5615349	IdentifierDeclStatement	const char * p ;	206:2:10008:10021	5614849	5	True				
ANR	5615350	IdentifierDecl	* p		5614849	0					
ANR	5615351	IdentifierDeclType	const char *		5614849	0					
ANR	5615352	Identifier	p		5614849	1					
ANR	5615353	ForStatement	for ( p = text ; * p != '\\0' ; p ++ )		5614849	6					
ANR	5615354	ForInit	p = text ;	207:7:10030:10038	5614849	0	True				
ANR	5615355	AssignmentExpression	p = text		5614849	0		=			
ANR	5615356	Identifier	p		5614849	0					
ANR	5615357	Identifier	text		5614849	1					
ANR	5615358	Condition	* p != '\\0'	207:17:10040:10049	5614849	1	True				
ANR	5615359	EqualityExpression	* p != '\\0'		5614849	0		!=			
ANR	5615360	UnaryOperationExpression	* p		5614849	0					
ANR	5615361	UnaryOperator	*		5614849	0					
ANR	5615362	Identifier	p		5614849	1					
ANR	5615363	PrimaryExpression	'\\0'		5614849	1					
ANR	5615364	PostIncDecOperationExpression	p ++	207:29:10052:10054	5614849	2	True				
ANR	5615365	Identifier	p		5614849	0					
ANR	5615366	IncDec	++		5614849	1					
ANR	5615367	CompoundStatement		76:34:2263:2263	5614849	3					
ANR	5615368	ExpressionStatement	"accumData = accumData * 45 + ( strchr ( ALPHANUMERIC_CHARSET , * p ) - ALPHANUMERIC_CHARSET )"	208:3:10062:10149	5614849	0	True				
ANR	5615369	AssignmentExpression	"accumData = accumData * 45 + ( strchr ( ALPHANUMERIC_CHARSET , * p ) - ALPHANUMERIC_CHARSET )"		5614849	0		=			
ANR	5615370	Identifier	accumData		5614849	0					
ANR	5615371	AdditiveExpression	"accumData * 45 + ( strchr ( ALPHANUMERIC_CHARSET , * p ) - ALPHANUMERIC_CHARSET )"		5614849	1		+			
ANR	5615372	MultiplicativeExpression	accumData * 45		5614849	0		*			
ANR	5615373	Identifier	accumData		5614849	0					
ANR	5615374	PrimaryExpression	45		5614849	1					
ANR	5615375	AdditiveExpression	"strchr ( ALPHANUMERIC_CHARSET , * p ) - ALPHANUMERIC_CHARSET"		5614849	1		-			
ANR	5615376	CallExpression	"strchr ( ALPHANUMERIC_CHARSET , * p )"		5614849	0					
ANR	5615377	Callee	strchr		5614849	0					
ANR	5615378	Identifier	strchr		5614849	0					
ANR	5615379	ArgumentList	ALPHANUMERIC_CHARSET		5614849	1					
ANR	5615380	Argument	ALPHANUMERIC_CHARSET		5614849	0					
ANR	5615381	Identifier	ALPHANUMERIC_CHARSET		5614849	0					
ANR	5615382	Argument	* p		5614849	1					
ANR	5615383	UnaryOperationExpression	* p		5614849	0					
ANR	5615384	UnaryOperator	*		5614849	0					
ANR	5615385	Identifier	p		5614849	1					
ANR	5615386	Identifier	ALPHANUMERIC_CHARSET		5614849	1					
ANR	5615387	ExpressionStatement	accumCount ++	209:3:10154:10166	5614849	1	True				
ANR	5615388	PostIncDecOperationExpression	accumCount ++		5614849	0					
ANR	5615389	Identifier	accumCount		5614849	0					
ANR	5615390	IncDec	++		5614849	1					
ANR	5615391	IfStatement	if ( accumCount == 2 )		5614849	2					
ANR	5615392	Condition	accumCount == 2	210:7:10175:10189	5614849	0	True				
ANR	5615393	EqualityExpression	accumCount == 2		5614849	0		==			
ANR	5615394	Identifier	accumCount		5614849	0					
ANR	5615395	PrimaryExpression	2		5614849	1					
ANR	5615396	CompoundStatement		79:24:2398:2398	5614849	1					
ANR	5615397	ExpressionStatement	"appendBitsToBuffer ( accumData , 11 , qrcode , & bitLen )"	211:4:10198:10249	5614849	0	True				
ANR	5615398	CallExpression	"appendBitsToBuffer ( accumData , 11 , qrcode , & bitLen )"		5614849	0					
ANR	5615399	Callee	appendBitsToBuffer		5614849	0					
ANR	5615400	Identifier	appendBitsToBuffer		5614849	0					
ANR	5615401	ArgumentList	accumData		5614849	1					
ANR	5615402	Argument	accumData		5614849	0					
ANR	5615403	Identifier	accumData		5614849	0					
ANR	5615404	Argument	11		5614849	1					
ANR	5615405	PrimaryExpression	11		5614849	0					
ANR	5615406	Argument	qrcode		5614849	2					
ANR	5615407	Identifier	qrcode		5614849	0					
ANR	5615408	Argument	& bitLen		5614849	3					
ANR	5615409	UnaryOperationExpression	& bitLen		5614849	0					
ANR	5615410	UnaryOperator	&		5614849	0					
ANR	5615411	Identifier	bitLen		5614849	1					
ANR	5615412	ExpressionStatement	accumData = 0	212:4:10255:10268	5614849	1	True				
ANR	5615413	AssignmentExpression	accumData = 0		5614849	0		=			
ANR	5615414	Identifier	accumData		5614849	0					
ANR	5615415	PrimaryExpression	0		5614849	1					
ANR	5615416	ExpressionStatement	accumCount = 0	213:4:10274:10288	5614849	2	True				
ANR	5615417	AssignmentExpression	accumCount = 0		5614849	0		=			
ANR	5615418	Identifier	accumCount		5614849	0					
ANR	5615419	PrimaryExpression	0		5614849	1					
ANR	5615420	IfStatement	if ( accumCount > 0 )		5614849	7					
ANR	5615421	Condition	accumCount > 0	216:6:10305:10318	5614849	0	True				
ANR	5615422	RelationalExpression	accumCount > 0		5614849	0		>			
ANR	5615423	Identifier	accumCount		5614849	0					
ANR	5615424	PrimaryExpression	0		5614849	1					
ANR	5615425	CompoundStatement		85:22:2527:2527	5614849	1					
ANR	5615426	ExpressionStatement	"appendBitsToBuffer ( accumData , 6 , qrcode , & bitLen )"	217:3:10351:10401	5614849	0	True				
ANR	5615427	CallExpression	"appendBitsToBuffer ( accumData , 6 , qrcode , & bitLen )"		5614849	0					
ANR	5615428	Callee	appendBitsToBuffer		5614849	0					
ANR	5615429	Identifier	appendBitsToBuffer		5614849	0					
ANR	5615430	ArgumentList	accumData		5614849	1					
ANR	5615431	Argument	accumData		5614849	0					
ANR	5615432	Identifier	accumData		5614849	0					
ANR	5615433	Argument	6		5614849	1					
ANR	5615434	PrimaryExpression	6		5614849	0					
ANR	5615435	Argument	qrcode		5614849	2					
ANR	5615436	Identifier	qrcode		5614849	0					
ANR	5615437	Argument	& bitLen		5614849	3					
ANR	5615438	UnaryOperationExpression	& bitLen		5614849	0					
ANR	5615439	UnaryOperator	&		5614849	0					
ANR	5615440	Identifier	bitLen		5614849	1					
ANR	5615441	ExpressionStatement	"encodeQrCodeTail ( qrcode , bitLen , tempBuffer , version , ecl , mask , boostEcl )"	222:1:10429:10504	5614849	16	True				
ANR	5615442	CallExpression	"encodeQrCodeTail ( qrcode , bitLen , tempBuffer , version , ecl , mask , boostEcl )"		5614849	0					
ANR	5615443	Callee	encodeQrCodeTail		5614849	0					
ANR	5615444	Identifier	encodeQrCodeTail		5614849	0					
ANR	5615445	ArgumentList	qrcode		5614849	1					
ANR	5615446	Argument	qrcode		5614849	0					
ANR	5615447	Identifier	qrcode		5614849	0					
ANR	5615448	Argument	bitLen		5614849	1					
ANR	5615449	Identifier	bitLen		5614849	0					
ANR	5615450	Argument	tempBuffer		5614849	2					
ANR	5615451	Identifier	tempBuffer		5614849	0					
ANR	5615452	Argument	version		5614849	3					
ANR	5615453	Identifier	version		5614849	0					
ANR	5615454	Argument	ecl		5614849	4					
ANR	5615455	Identifier	ecl		5614849	0					
ANR	5615456	Argument	mask		5614849	5					
ANR	5615457	Identifier	mask		5614849	0					
ANR	5615458	Argument	boostEcl		5614849	6					
ANR	5615459	Identifier	boostEcl		5614849	0					
ANR	5615460	ReturnStatement	return true ;	223:1:10507:10518	5614849	17	True				
ANR	5615461	Identifier	true		5614849	0					
ANR	5615462	ReturnType	R_API bool		5614849	1					
ANR	5615463	Identifier	r_qrcode_text		5614849	2					
ANR	5615464	ParameterList	"const char * text , ut8 tempBuffer [ ] , ut8 qrcode [ ] , enum qrcodegen_Ecc ecl , int minVersion , int maxVersion , enum qrcodegen_Mask mask , bool boostEcl"		5614849	3					
ANR	5615465	Parameter	const char * text	132:25:7646:7661	5614849	0	True				
ANR	5615466	ParameterType	const char *		5614849	0					
ANR	5615467	Identifier	text		5614849	1					
ANR	5615468	Parameter	ut8 tempBuffer [ ]	132:43:7664:7679	5614849	1	True				
ANR	5615469	ParameterType	ut8 [ ]		5614849	0					
ANR	5615470	Identifier	tempBuffer		5614849	1					
ANR	5615471	Parameter	ut8 qrcode [ ]	132:61:7682:7693	5614849	2	True				
ANR	5615472	ParameterType	ut8 [ ]		5614849	0					
ANR	5615473	Identifier	qrcode		5614849	1					
ANR	5615474	Parameter	enum qrcodegen_Ecc ecl	132:75:7696:7717	5614849	3	True				
ANR	5615475	ParameterType	enum qrcodegen_Ecc		5614849	0					
ANR	5615476	Identifier	ecl		5614849	1					
ANR	5615477	Parameter	int minVersion	132:99:7720:7733	5614849	4	True				
ANR	5615478	ParameterType	int		5614849	0					
ANR	5615479	Identifier	minVersion		5614849	1					
ANR	5615480	Parameter	int maxVersion	132:115:7736:7749	5614849	5	True				
ANR	5615481	ParameterType	int		5614849	0					
ANR	5615482	Identifier	maxVersion		5614849	1					
ANR	5615483	Parameter	enum qrcodegen_Mask mask	132:131:7752:7775	5614849	6	True				
ANR	5615484	ParameterType	enum qrcodegen_Mask		5614849	0					
ANR	5615485	Identifier	mask		5614849	1					
ANR	5615486	Parameter	bool boostEcl	132:157:7778:7790	5614849	7	True				
ANR	5615487	ParameterType	bool		5614849	0					
ANR	5615488	Identifier	boostEcl		5614849	1					
ANR	5615489	CFGEntryNode	ENTRY		5614849		True				
ANR	5615490	CFGExitNode	EXIT		5614849		True				
ANR	5615491	Symbol	qrcodegen_Ecc_HIGH		5614849						
ANR	5615492	Symbol	ALPHANUMERIC_CHARSET		5614849						
ANR	5615493	Symbol	* qrcode		5614849						
ANR	5615494	Symbol	qrcode		5614849						
ANR	5615495	Symbol	* text		5614849						
ANR	5615496	Symbol	strchr		5614849						
ANR	5615497	Symbol	accumCount		5614849						
ANR	5615498	Symbol	qrcodegen_BUFFER_LEN_FOR_VERSION		5614849						
ANR	5615499	Symbol	ecl		5614849						
ANR	5615500	Symbol	boostEcl		5614849						
ANR	5615501	Symbol	tempBuffer		5614849						
ANR	5615502	Symbol	textLen		5614849						
ANR	5615503	Symbol	qrcodegen_Ecc_LOW		5614849						
ANR	5615504	Symbol	isAlphanumeric		5614849						
ANR	5615505	Symbol	& textBits		5614849						
ANR	5615506	Symbol	text		5614849						
ANR	5615507	Symbol	qrcodegen_VERSION_MAX		5614849						
ANR	5615508	Symbol	mask		5614849						
ANR	5615509	Symbol	& isNumeric		5614849						
ANR	5615510	Symbol	minVersion		5614849						
ANR	5615511	Symbol	r_qrcode_bin		5614849						
ANR	5615512	Symbol	lengthBits		5614849						
ANR	5615513	Symbol	false		5614849						
ANR	5615514	Symbol	i		5614849						
ANR	5615515	Symbol	version		5614849						
ANR	5615516	Symbol	fitVersionToData		5614849						
ANR	5615517	Symbol	& bitLen		5614849						
ANR	5615518	Symbol	bitLen		5614849						
ANR	5615519	Symbol	p		5614849						
ANR	5615520	Symbol	& isAlphanumeric		5614849						
ANR	5615521	Symbol	accumData		5614849						
ANR	5615522	Symbol	qrcodegen_VERSION_MIN		5614849						
ANR	5615523	Symbol	* i		5614849						
ANR	5615524	Symbol	isNumeric		5614849						
ANR	5615525	Symbol	textBits		5614849						
ANR	5615526	Symbol	* tempBuffer		5614849						
ANR	5615527	Symbol	getTextProperties		5614849						
ANR	5615528	Symbol	true		5614849						
ANR	5615529	Symbol	maxVersion		5614849						
ANR	5615530	Symbol	* p		5614849						
ANR	5615531	Function	r_qrcode_bin	228:0:10587:11950							
ANR	5615532	FunctionDef	"r_qrcode_bin (ut8 * dataAndTemp , int dataLen , ut8 * qrcode , enum qrcodegen_Ecc ecl , int minVersion , int maxVersion , enum qrcodegen_Mask mask , bool boostEcl)"		5615531	0					
ANR	5615533	CompoundStatement		229:100:10755:11950	5615531	0					
ANR	5615534	IfStatement	if ( ! dataAndTemp || ! qrcode || dataLen < 1 )		5615531	0					
ANR	5615535	Condition	! dataAndTemp || ! qrcode || dataLen < 1	230:5:10762:10799	5615531	0	True				
ANR	5615536	OrExpression	! dataAndTemp || ! qrcode || dataLen < 1		5615531	0		||			
ANR	5615537	UnaryOperationExpression	! dataAndTemp		5615531	0					
ANR	5615538	UnaryOperator	!		5615531	0					
ANR	5615539	Identifier	dataAndTemp		5615531	1					
ANR	5615540	OrExpression	! qrcode || dataLen < 1		5615531	1		||			
ANR	5615541	UnaryOperationExpression	! qrcode		5615531	0					
ANR	5615542	UnaryOperator	!		5615531	0					
ANR	5615543	Identifier	qrcode		5615531	1					
ANR	5615544	RelationalExpression	dataLen < 1		5615531	1		<			
ANR	5615545	Identifier	dataLen		5615531	0					
ANR	5615546	PrimaryExpression	1		5615531	1					
ANR	5615547	CompoundStatement		2:45:46:46	5615531	1					
ANR	5615548	ReturnStatement	return false ;	231:2:10806:10818	5615531	0	True				
ANR	5615549	Identifier	false		5615531	0					
ANR	5615550	IfStatement	if ( minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX )		5615531	1					
ANR	5615551	Condition	minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX	233:5:10828:10899	5615531	0	True				
ANR	5615552	OrExpression	minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX		5615531	0		||			
ANR	5615553	RelationalExpression	minVersion < qrcodegen_VERSION_MIN		5615531	0		<			
ANR	5615554	Identifier	minVersion		5615531	0					
ANR	5615555	Identifier	qrcodegen_VERSION_MIN		5615531	1					
ANR	5615556	RelationalExpression	minVersion > qrcodegen_VERSION_MAX		5615531	1		>			
ANR	5615557	Identifier	minVersion		5615531	0					
ANR	5615558	Identifier	qrcodegen_VERSION_MAX		5615531	1					
ANR	5615559	CompoundStatement		5:79:146:146	5615531	1					
ANR	5615560	ReturnStatement	return false ;	234:2:10906:10918	5615531	0	True				
ANR	5615561	Identifier	false		5615531	0					
ANR	5615562	IfStatement	if ( maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX )		5615531	2					
ANR	5615563	Condition	maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX	236:5:10928:10999	5615531	0	True				
ANR	5615564	OrExpression	maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX		5615531	0		||			
ANR	5615565	RelationalExpression	maxVersion < qrcodegen_VERSION_MIN		5615531	0		<			
ANR	5615566	Identifier	maxVersion		5615531	0					
ANR	5615567	Identifier	qrcodegen_VERSION_MIN		5615531	1					
ANR	5615568	RelationalExpression	maxVersion > qrcodegen_VERSION_MAX		5615531	1		>			
ANR	5615569	Identifier	maxVersion		5615531	0					
ANR	5615570	Identifier	qrcodegen_VERSION_MAX		5615531	1					
ANR	5615571	CompoundStatement		8:79:246:246	5615531	1					
ANR	5615572	ReturnStatement	return false ;	237:2:11006:11018	5615531	0	True				
ANR	5615573	Identifier	false		5615531	0					
ANR	5615574	IfStatement	if ( ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH )		5615531	3					
ANR	5615575	Condition	ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH	239:5:11028:11078	5615531	0	True				
ANR	5615576	OrExpression	ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH		5615531	0		||			
ANR	5615577	RelationalExpression	ecl < qrcodegen_Ecc_LOW		5615531	0		<			
ANR	5615578	Identifier	ecl		5615531	0					
ANR	5615579	Identifier	qrcodegen_Ecc_LOW		5615531	1					
ANR	5615580	RelationalExpression	ecl > qrcodegen_Ecc_HIGH		5615531	1		>			
ANR	5615581	Identifier	ecl		5615531	0					
ANR	5615582	Identifier	qrcodegen_Ecc_HIGH		5615531	1					
ANR	5615583	CompoundStatement		11:58:325:325	5615531	1					
ANR	5615584	ReturnStatement	return false ;	240:2:11085:11097	5615531	0	True				
ANR	5615585	Identifier	false		5615531	0					
ANR	5615586	IfStatement	if ( mask < - 1 || mask > 7 )		5615531	4					
ANR	5615587	Condition	mask < - 1 || mask > 7	242:5:11107:11127	5615531	0	True				
ANR	5615588	OrExpression	mask < - 1 || mask > 7		5615531	0		||			
ANR	5615589	RelationalExpression	mask < - 1		5615531	0		<			
ANR	5615590	Identifier	mask		5615531	0					
ANR	5615591	UnaryOperationExpression	- 1		5615531	1					
ANR	5615592	UnaryOperator	-		5615531	0					
ANR	5615593	PrimaryExpression	1		5615531	1					
ANR	5615594	RelationalExpression	mask > 7		5615531	1		>			
ANR	5615595	Identifier	mask		5615531	0					
ANR	5615596	PrimaryExpression	7		5615531	1					
ANR	5615597	CompoundStatement		14:28:374:374	5615531	1					
ANR	5615598	ReturnStatement	return false ;	243:2:11134:11146	5615531	0	True				
ANR	5615599	Identifier	false		5615531	0					
ANR	5615600	ExpressionStatement	qrcode [ 0 ] = 0	247:1:11194:11207	5615531	5	True				
ANR	5615601	AssignmentExpression	qrcode [ 0 ] = 0		5615531	0		=			
ANR	5615602	ArrayIndexing	qrcode [ 0 ]		5615531	0					
ANR	5615603	Identifier	qrcode		5615531	0					
ANR	5615604	PrimaryExpression	0		5615531	1					
ANR	5615605	PrimaryExpression	0		5615531	1					
ANR	5615606	IfStatement	if ( dataLen > INT16_MAX / 8 )		5615531	6					
ANR	5615607	Condition	dataLen > INT16_MAX / 8	250:5:11249:11271	5615531	0	True				
ANR	5615608	RelationalExpression	dataLen > INT16_MAX / 8		5615531	0		>			
ANR	5615609	Identifier	dataLen		5615531	0					
ANR	5615610	MultiplicativeExpression	INT16_MAX / 8		5615531	1		/			
ANR	5615611	Identifier	INT16_MAX		5615531	0					
ANR	5615612	PrimaryExpression	8		5615531	1					
ANR	5615613	CompoundStatement		22:30:518:518	5615531	1					
ANR	5615614	ReturnStatement	return false ;	251:2:11278:11290	5615531	0	True				
ANR	5615615	Identifier	false		5615531	0					
ANR	5615616	IdentifierDeclStatement	"int version = fitVersionToData ( minVersion , maxVersion , ecl , ( int ) dataLen , ( int ) dataLen * 8 , 8 , 16 , 16 ) ;"	254:1:11336:11441	5615531	7	True				
ANR	5615617	IdentifierDecl	"version = fitVersionToData ( minVersion , maxVersion , ecl , ( int ) dataLen , ( int ) dataLen * 8 , 8 , 16 , 16 )"		5615531	0					
ANR	5615618	IdentifierDeclType	int		5615531	0					
ANR	5615619	Identifier	version		5615531	1					
ANR	5615620	AssignmentExpression	"version = fitVersionToData ( minVersion , maxVersion , ecl , ( int ) dataLen , ( int ) dataLen * 8 , 8 , 16 , 16 )"		5615531	2		=			
ANR	5615621	Identifier	version		5615531	0					
ANR	5615622	CallExpression	"fitVersionToData ( minVersion , maxVersion , ecl , ( int ) dataLen , ( int ) dataLen * 8 , 8 , 16 , 16 )"		5615531	1					
ANR	5615623	Callee	fitVersionToData		5615531	0					
ANR	5615624	Identifier	fitVersionToData		5615531	0					
ANR	5615625	ArgumentList	minVersion		5615531	1					
ANR	5615626	Argument	minVersion		5615531	0					
ANR	5615627	Identifier	minVersion		5615531	0					
ANR	5615628	Argument	maxVersion		5615531	1					
ANR	5615629	Identifier	maxVersion		5615531	0					
ANR	5615630	Argument	ecl		5615531	2					
ANR	5615631	Identifier	ecl		5615531	0					
ANR	5615632	Argument	( int ) dataLen		5615531	3					
ANR	5615633	CastExpression	( int ) dataLen		5615531	0					
ANR	5615634	CastTarget	int		5615531	0					
ANR	5615635	Identifier	dataLen		5615531	1					
ANR	5615636	Argument	( int ) dataLen * 8		5615531	4					
ANR	5615637	MultiplicativeExpression	( int ) dataLen * 8		5615531	0		*			
ANR	5615638	CastExpression	( int ) dataLen		5615531	0					
ANR	5615639	CastTarget	int		5615531	0					
ANR	5615640	Identifier	dataLen		5615531	1					
ANR	5615641	PrimaryExpression	8		5615531	1					
ANR	5615642	Argument	8		5615531	5					
ANR	5615643	PrimaryExpression	8		5615531	0					
ANR	5615644	Argument	16		5615531	6					
ANR	5615645	PrimaryExpression	16		5615531	0					
ANR	5615646	Argument	16		5615531	7					
ANR	5615647	PrimaryExpression	16		5615531	0					
ANR	5615648	IfStatement	if ( version == 0 )		5615531	8					
ANR	5615649	Condition	version == 0	255:5:11448:11459	5615531	0	True				
ANR	5615650	EqualityExpression	version == 0		5615531	0		==			
ANR	5615651	Identifier	version		5615531	0					
ANR	5615652	PrimaryExpression	0		5615531	1					
ANR	5615653	CompoundStatement		27:19:706:706	5615531	1					
ANR	5615654	ReturnStatement	return false ;	256:2:11466:11478	5615531	0	True				
ANR	5615655	Identifier	false		5615531	0					
ANR	5615656	ExpressionStatement	"memset ( qrcode , 0 , qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] ) )"	260:1:11519:11601	5615531	9	True				
ANR	5615657	CallExpression	"memset ( qrcode , 0 , qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] ) )"		5615531	0					
ANR	5615658	Callee	memset		5615531	0					
ANR	5615659	Identifier	memset		5615531	0					
ANR	5615660	ArgumentList	qrcode		5615531	1					
ANR	5615661	Argument	qrcode		5615531	0					
ANR	5615662	Identifier	qrcode		5615531	0					
ANR	5615663	Argument	0		5615531	1					
ANR	5615664	PrimaryExpression	0		5615531	0					
ANR	5615665	Argument	qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] )		5615531	2					
ANR	5615666	MultiplicativeExpression	qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] )		5615531	0		*			
ANR	5615667	CallExpression	qrcodegen_BUFFER_LEN_FOR_VERSION ( version )		5615531	0					
ANR	5615668	Callee	qrcodegen_BUFFER_LEN_FOR_VERSION		5615531	0					
ANR	5615669	Identifier	qrcodegen_BUFFER_LEN_FOR_VERSION		5615531	0					
ANR	5615670	ArgumentList	version		5615531	1					
ANR	5615671	Argument	version		5615531	0					
ANR	5615672	Identifier	version		5615531	0					
ANR	5615673	SizeofExpression	sizeof ( qrcode [ 0 ] )		5615531	1					
ANR	5615674	Sizeof	sizeof		5615531	0					
ANR	5615675	ArrayIndexing	qrcode [ 0 ]		5615531	1					
ANR	5615676	Identifier	qrcode		5615531	0					
ANR	5615677	PrimaryExpression	0		5615531	1					
ANR	5615678	IdentifierDeclStatement	int bitLen = 0 ;	261:1:11604:11618	5615531	10	True				
ANR	5615679	IdentifierDecl	bitLen = 0		5615531	0					
ANR	5615680	IdentifierDeclType	int		5615531	0					
ANR	5615681	Identifier	bitLen		5615531	1					
ANR	5615682	AssignmentExpression	bitLen = 0		5615531	2		=			
ANR	5615683	Identifier	bitLen		5615531	0					
ANR	5615684	PrimaryExpression	0		5615531	1					
ANR	5615685	ExpressionStatement	"appendBitsToBuffer ( 4 , 4 , qrcode , & bitLen )"	262:1:11621:11663	5615531	11	True				
ANR	5615686	CallExpression	"appendBitsToBuffer ( 4 , 4 , qrcode , & bitLen )"		5615531	0					
ANR	5615687	Callee	appendBitsToBuffer		5615531	0					
ANR	5615688	Identifier	appendBitsToBuffer		5615531	0					
ANR	5615689	ArgumentList	4		5615531	1					
ANR	5615690	Argument	4		5615531	0					
ANR	5615691	PrimaryExpression	4		5615531	0					
ANR	5615692	Argument	4		5615531	1					
ANR	5615693	PrimaryExpression	4		5615531	0					
ANR	5615694	Argument	qrcode		5615531	2					
ANR	5615695	Identifier	qrcode		5615531	0					
ANR	5615696	Argument	& bitLen		5615531	3					
ANR	5615697	UnaryOperationExpression	& bitLen		5615531	0					
ANR	5615698	UnaryOperator	&		5615531	0					
ANR	5615699	Identifier	bitLen		5615531	1					
ANR	5615700	ExpressionStatement	"appendBitsToBuffer ( ( unsigned int ) dataLen , ( version <= 9 ? 8 : 16 ) , qrcode , & bitLen )"	263:1:11666:11749	5615531	12	True				
ANR	5615701	CallExpression	"appendBitsToBuffer ( ( unsigned int ) dataLen , ( version <= 9 ? 8 : 16 ) , qrcode , & bitLen )"		5615531	0					
ANR	5615702	Callee	appendBitsToBuffer		5615531	0					
ANR	5615703	Identifier	appendBitsToBuffer		5615531	0					
ANR	5615704	ArgumentList	( unsigned int ) dataLen		5615531	1					
ANR	5615705	Argument	( unsigned int ) dataLen		5615531	0					
ANR	5615706	CastExpression	( unsigned int ) dataLen		5615531	0					
ANR	5615707	CastTarget	unsigned int		5615531	0					
ANR	5615708	Identifier	dataLen		5615531	1					
ANR	5615709	Argument	version <= 9 ? 8 : 16		5615531	1					
ANR	5615710	ConditionalExpression	version <= 9 ? 8 : 16		5615531	0					
ANR	5615711	Condition	version <= 9		5615531	0					
ANR	5615712	RelationalExpression	version <= 9		5615531	0		<=			
ANR	5615713	Identifier	version		5615531	0					
ANR	5615714	PrimaryExpression	9		5615531	1					
ANR	5615715	PrimaryExpression	8		5615531	1					
ANR	5615716	PrimaryExpression	16		5615531	2					
ANR	5615717	Argument	qrcode		5615531	2					
ANR	5615718	Identifier	qrcode		5615531	0					
ANR	5615719	Argument	& bitLen		5615531	3					
ANR	5615720	UnaryOperationExpression	& bitLen		5615531	0					
ANR	5615721	UnaryOperator	&		5615531	0					
ANR	5615722	Identifier	bitLen		5615531	1					
ANR	5615723	IdentifierDeclStatement	size_t i ;	264:1:11752:11760	5615531	13	True				
ANR	5615724	IdentifierDecl	i		5615531	0					
ANR	5615725	IdentifierDeclType	size_t		5615531	0					
ANR	5615726	Identifier	i		5615531	1					
ANR	5615727	ForStatement	for ( i = 0 ; i < dataLen ; i ++ )		5615531	14					
ANR	5615728	ForInit	i = 0 ;	265:6:11768:11773	5615531	0	True				
ANR	5615729	AssignmentExpression	i = 0		5615531	0		=			
ANR	5615730	Identifier	i		5615531	0					
ANR	5615731	PrimaryExpression	0		5615531	1					
ANR	5615732	Condition	i < dataLen	265:13:11775:11785	5615531	1	True				
ANR	5615733	RelationalExpression	i < dataLen		5615531	0		<			
ANR	5615734	Identifier	i		5615531	0					
ANR	5615735	Identifier	dataLen		5615531	1					
ANR	5615736	PostIncDecOperationExpression	i ++	265:26:11788:11790	5615531	2	True				
ANR	5615737	Identifier	i		5615531	0					
ANR	5615738	IncDec	++		5615531	1					
ANR	5615739	CompoundStatement		37:31:1037:1037	5615531	3					
ANR	5615740	ExpressionStatement	"appendBitsToBuffer ( dataAndTemp [ i ] , 8 , qrcode , & bitLen )"	266:2:11797:11852	5615531	0	True				
ANR	5615741	CallExpression	"appendBitsToBuffer ( dataAndTemp [ i ] , 8 , qrcode , & bitLen )"		5615531	0					
ANR	5615742	Callee	appendBitsToBuffer		5615531	0					
ANR	5615743	Identifier	appendBitsToBuffer		5615531	0					
ANR	5615744	ArgumentList	dataAndTemp [ i ]		5615531	1					
ANR	5615745	Argument	dataAndTemp [ i ]		5615531	0					
ANR	5615746	ArrayIndexing	dataAndTemp [ i ]		5615531	0					
ANR	5615747	Identifier	dataAndTemp		5615531	0					
ANR	5615748	Identifier	i		5615531	1					
ANR	5615749	Argument	8		5615531	1					
ANR	5615750	PrimaryExpression	8		5615531	0					
ANR	5615751	Argument	qrcode		5615531	2					
ANR	5615752	Identifier	qrcode		5615531	0					
ANR	5615753	Argument	& bitLen		5615531	3					
ANR	5615754	UnaryOperationExpression	& bitLen		5615531	0					
ANR	5615755	UnaryOperator	&		5615531	0					
ANR	5615756	Identifier	bitLen		5615531	1					
ANR	5615757	ExpressionStatement	"encodeQrCodeTail ( qrcode , bitLen , dataAndTemp , version , ecl , mask , boostEcl )"	268:1:11858:11934	5615531	15	True				
ANR	5615758	CallExpression	"encodeQrCodeTail ( qrcode , bitLen , dataAndTemp , version , ecl , mask , boostEcl )"		5615531	0					
ANR	5615759	Callee	encodeQrCodeTail		5615531	0					
ANR	5615760	Identifier	encodeQrCodeTail		5615531	0					
ANR	5615761	ArgumentList	qrcode		5615531	1					
ANR	5615762	Argument	qrcode		5615531	0					
ANR	5615763	Identifier	qrcode		5615531	0					
ANR	5615764	Argument	bitLen		5615531	1					
ANR	5615765	Identifier	bitLen		5615531	0					
ANR	5615766	Argument	dataAndTemp		5615531	2					
ANR	5615767	Identifier	dataAndTemp		5615531	0					
ANR	5615768	Argument	version		5615531	3					
ANR	5615769	Identifier	version		5615531	0					
ANR	5615770	Argument	ecl		5615531	4					
ANR	5615771	Identifier	ecl		5615531	0					
ANR	5615772	Argument	mask		5615531	5					
ANR	5615773	Identifier	mask		5615531	0					
ANR	5615774	Argument	boostEcl		5615531	6					
ANR	5615775	Identifier	boostEcl		5615531	0					
ANR	5615776	ReturnStatement	return true ;	269:1:11937:11948	5615531	16	True				
ANR	5615777	Identifier	true		5615531	0					
ANR	5615778	ReturnType	R_API bool		5615531	1					
ANR	5615779	Identifier	r_qrcode_bin		5615531	2					
ANR	5615780	ParameterList	"ut8 * dataAndTemp , int dataLen , ut8 * qrcode , enum qrcodegen_Ecc ecl , int minVersion , int maxVersion , enum qrcodegen_Mask mask , bool boostEcl"		5615531	3					
ANR	5615781	Parameter	ut8 * dataAndTemp	228:24:10611:10626	5615531	0	True				
ANR	5615782	ParameterType	ut8 *		5615531	0					
ANR	5615783	Identifier	dataAndTemp		5615531	1					
ANR	5615784	Parameter	int dataLen	228:42:10629:10639	5615531	1	True				
ANR	5615785	ParameterType	int		5615531	0					
ANR	5615786	Identifier	dataLen		5615531	1					
ANR	5615787	Parameter	ut8 * qrcode	228:55:10642:10652	5615531	2	True				
ANR	5615788	ParameterType	ut8 *		5615531	0					
ANR	5615789	Identifier	qrcode		5615531	1					
ANR	5615790	Parameter	enum qrcodegen_Ecc ecl	229:3:10658:10679	5615531	3	True				
ANR	5615791	ParameterType	enum qrcodegen_Ecc		5615531	0					
ANR	5615792	Identifier	ecl		5615531	1					
ANR	5615793	Parameter	int minVersion	229:27:10682:10695	5615531	4	True				
ANR	5615794	ParameterType	int		5615531	0					
ANR	5615795	Identifier	minVersion		5615531	1					
ANR	5615796	Parameter	int maxVersion	229:43:10698:10711	5615531	5	True				
ANR	5615797	ParameterType	int		5615531	0					
ANR	5615798	Identifier	maxVersion		5615531	1					
ANR	5615799	Parameter	enum qrcodegen_Mask mask	229:59:10714:10737	5615531	6	True				
ANR	5615800	ParameterType	enum qrcodegen_Mask		5615531	0					
ANR	5615801	Identifier	mask		5615531	1					
ANR	5615802	Parameter	bool boostEcl	229:85:10740:10752	5615531	7	True				
ANR	5615803	ParameterType	bool		5615531	0					
ANR	5615804	Identifier	boostEcl		5615531	1					
ANR	5615805	CFGEntryNode	ENTRY		5615531		True				
ANR	5615806	CFGExitNode	EXIT		5615531		True				
ANR	5615807	Symbol	qrcodegen_Ecc_HIGH		5615531						
ANR	5615808	Symbol	minVersion		5615531						
ANR	5615809	Symbol	* qrcode		5615531						
ANR	5615810	Symbol	qrcode		5615531						
ANR	5615811	Symbol	false		5615531						
ANR	5615812	Symbol	i		5615531						
ANR	5615813	Symbol	qrcodegen_BUFFER_LEN_FOR_VERSION		5615531						
ANR	5615814	Symbol	version		5615531						
ANR	5615815	Symbol	fitVersionToData		5615531						
ANR	5615816	Symbol	dataLen		5615531						
ANR	5615817	Symbol	& bitLen		5615531						
ANR	5615818	Symbol	ecl		5615531						
ANR	5615819	Symbol	* dataAndTemp		5615531						
ANR	5615820	Symbol	dataAndTemp		5615531						
ANR	5615821	Symbol	boostEcl		5615531						
ANR	5615822	Symbol	bitLen		5615531						
ANR	5615823	Symbol	qrcodegen_VERSION_MIN		5615531						
ANR	5615824	Symbol	* i		5615531						
ANR	5615825	Symbol	INT16_MAX		5615531						
ANR	5615826	Symbol	qrcodegen_Ecc_LOW		5615531						
ANR	5615827	Symbol	true		5615531						
ANR	5615828	Symbol	maxVersion		5615531						
ANR	5615829	Symbol	qrcodegen_VERSION_MAX		5615531						
ANR	5615830	Symbol	mask		5615531						
ANR	5615831	Function	getTextProperties	277:0:12312:13056							
ANR	5615832	FunctionDef	"getTextProperties (const char * text , bool * isNumeric , bool * isAlphanumeric , int * textBits)"		5615831	0					
ANR	5615833	CompoundStatement		277:101:12413:13056	5615831	0					
ANR	5615834	IdentifierDeclStatement	int textLen = 0 ;	278:1:12416:12431	5615831	0	True				
ANR	5615835	IdentifierDecl	textLen = 0		5615831	0					
ANR	5615836	IdentifierDeclType	int		5615831	0					
ANR	5615837	Identifier	textLen		5615831	1					
ANR	5615838	AssignmentExpression	textLen = 0		5615831	2		=			
ANR	5615839	Identifier	textLen		5615831	0					
ANR	5615840	PrimaryExpression	0		5615831	1					
ANR	5615841	ExpressionStatement	* isNumeric = true	279:1:12434:12451	5615831	1	True				
ANR	5615842	AssignmentExpression	* isNumeric = true		5615831	0		=			
ANR	5615843	UnaryOperationExpression	* isNumeric		5615831	0					
ANR	5615844	UnaryOperator	*		5615831	0					
ANR	5615845	Identifier	isNumeric		5615831	1					
ANR	5615846	Identifier	true		5615831	1					
ANR	5615847	ExpressionStatement	* isAlphanumeric = true	280:1:12454:12476	5615831	2	True				
ANR	5615848	AssignmentExpression	* isAlphanumeric = true		5615831	0		=			
ANR	5615849	UnaryOperationExpression	* isAlphanumeric		5615831	0					
ANR	5615850	UnaryOperator	*		5615831	0					
ANR	5615851	Identifier	isAlphanumeric		5615831	1					
ANR	5615852	Identifier	true		5615831	1					
ANR	5615853	IdentifierDeclStatement	const char * p ;	281:1:12479:12492	5615831	3	True				
ANR	5615854	IdentifierDecl	* p		5615831	0					
ANR	5615855	IdentifierDeclType	const char *		5615831	0					
ANR	5615856	Identifier	p		5615831	1					
ANR	5615857	ForStatement	"for ( p = text ; * p != '\\0' ; p ++ , textLen ++ )"		5615831	4					
ANR	5615858	ForInit	p = text ;	282:6:12500:12508	5615831	0	True				
ANR	5615859	AssignmentExpression	p = text		5615831	0		=			
ANR	5615860	Identifier	p		5615831	0					
ANR	5615861	Identifier	text		5615831	1					
ANR	5615862	Condition	* p != '\\0'	282:16:12510:12519	5615831	1	True				
ANR	5615863	EqualityExpression	* p != '\\0'		5615831	0		!=			
ANR	5615864	UnaryOperationExpression	* p		5615831	0					
ANR	5615865	UnaryOperator	*		5615831	0					
ANR	5615866	Identifier	p		5615831	1					
ANR	5615867	PrimaryExpression	'\\0'		5615831	1					
ANR	5615868	Expression	"p ++ , textLen ++"	282:28:12522:12535	5615831	2	True				
ANR	5615869	PostIncDecOperationExpression	p ++		5615831	0					
ANR	5615870	Identifier	p		5615831	0					
ANR	5615871	IncDec	++		5615831	1					
ANR	5615872	PostIncDecOperationExpression	textLen ++		5615831	1					
ANR	5615873	Identifier	textLen		5615831	0					
ANR	5615874	IncDec	++		5615831	1					
ANR	5615875	CompoundStatement		10:2:200:211	5615831	3					
ANR	5615876	IfStatement	if ( textLen >= INT16_MAX )		5615831	0					
ANR	5615877	Condition	textLen >= INT16_MAX	283:6:12570:12589	5615831	0	True				
ANR	5615878	RelationalExpression	textLen >= INT16_MAX		5615831	0		>=			
ANR	5615879	Identifier	textLen		5615831	0					
ANR	5615880	Identifier	INT16_MAX		5615831	1					
ANR	5615881	CompoundStatement		7:28:178:178	5615831	1					
ANR	5615882	ReturnStatement	return - 1 ;	284:3:12597:12606	5615831	0	True				
ANR	5615883	UnaryOperationExpression	- 1		5615831	0					
ANR	5615884	UnaryOperator	-		5615831	0					
ANR	5615885	PrimaryExpression	1		5615831	1					
ANR	5615886	IdentifierDeclStatement	char c = * p ;	286:2:12614:12625	5615831	1	True				
ANR	5615887	IdentifierDecl	c = * p		5615831	0					
ANR	5615888	IdentifierDeclType	char		5615831	0					
ANR	5615889	Identifier	c		5615831	1					
ANR	5615890	AssignmentExpression	c = * p		5615831	2		=			
ANR	5615891	Identifier	c		5615831	0					
ANR	5615892	UnaryOperationExpression	* p		5615831	1					
ANR	5615893	UnaryOperator	*		5615831	0					
ANR	5615894	Identifier	p		5615831	1					
ANR	5615895	IfStatement	if ( c < '0' || c > '9' )		5615831	2					
ANR	5615896	Condition	c < '0' || c > '9'	287:6:12633:12650	5615831	0	True				
ANR	5615897	OrExpression	c < '0' || c > '9'		5615831	0		||			
ANR	5615898	RelationalExpression	c < '0'		5615831	0		<			
ANR	5615899	Identifier	c		5615831	0					
ANR	5615900	PrimaryExpression	'0'		5615831	1					
ANR	5615901	RelationalExpression	c > '9'		5615831	1		>			
ANR	5615902	Identifier	c		5615831	0					
ANR	5615903	PrimaryExpression	'9'		5615831	1					
ANR	5615904	CompoundStatement		11:26:239:239	5615831	1					
ANR	5615905	ExpressionStatement	* isNumeric = false	288:3:12658:12676	5615831	0	True				
ANR	5615906	AssignmentExpression	* isNumeric = false		5615831	0		=			
ANR	5615907	UnaryOperationExpression	* isNumeric		5615831	0					
ANR	5615908	UnaryOperator	*		5615831	0					
ANR	5615909	Identifier	isNumeric		5615831	1					
ANR	5615910	Identifier	false		5615831	1					
ANR	5615911	ExpressionStatement	"* isAlphanumeric &= strchr ( ALPHANUMERIC_CHARSET , c ) != NULL"	289:3:12681:12740	5615831	1	True				
ANR	5615912	AssignmentExpression	"* isAlphanumeric &= strchr ( ALPHANUMERIC_CHARSET , c ) != NULL"		5615831	0		&=			
ANR	5615913	UnaryOperationExpression	* isAlphanumeric		5615831	0					
ANR	5615914	UnaryOperator	*		5615831	0					
ANR	5615915	Identifier	isAlphanumeric		5615831	1					
ANR	5615916	EqualityExpression	"strchr ( ALPHANUMERIC_CHARSET , c ) != NULL"		5615831	1		!=			
ANR	5615917	CallExpression	"strchr ( ALPHANUMERIC_CHARSET , c )"		5615831	0					
ANR	5615918	Callee	strchr		5615831	0					
ANR	5615919	Identifier	strchr		5615831	0					
ANR	5615920	ArgumentList	ALPHANUMERIC_CHARSET		5615831	1					
ANR	5615921	Argument	ALPHANUMERIC_CHARSET		5615831	0					
ANR	5615922	Identifier	ALPHANUMERIC_CHARSET		5615831	0					
ANR	5615923	Argument	c		5615831	1					
ANR	5615924	Identifier	c		5615831	0					
ANR	5615925	Identifier	NULL		5615831	1					
ANR	5615926	IdentifierDeclStatement	long tempBits ;	293:1:12751:12764	5615831	5	True				
ANR	5615927	IdentifierDecl	tempBits		5615831	0					
ANR	5615928	IdentifierDeclType	long		5615831	0					
ANR	5615929	Identifier	tempBits		5615831	1					
ANR	5615930	IfStatement	if ( * isNumeric )		5615831	6					
ANR	5615931	Condition	* isNumeric	294:5:12771:12780	5615831	0	True				
ANR	5615932	UnaryOperationExpression	* isNumeric		5615831	0					
ANR	5615933	UnaryOperator	*		5615831	0					
ANR	5615934	Identifier	isNumeric		5615831	1					
ANR	5615935	CompoundStatement		18:17:369:369	5615831	1					
ANR	5615936	ExpressionStatement	tempBits = textLen * 3L + ( textLen + 2L ) / 3	295:2:12787:12831	5615831	0	True				
ANR	5615937	AssignmentExpression	tempBits = textLen * 3L + ( textLen + 2L ) / 3		5615831	0		=			
ANR	5615938	Identifier	tempBits		5615831	0					
ANR	5615939	AdditiveExpression	textLen * 3L + ( textLen + 2L ) / 3		5615831	1		+			
ANR	5615940	MultiplicativeExpression	textLen * 3L		5615831	0		*			
ANR	5615941	Identifier	textLen		5615831	0					
ANR	5615942	PrimaryExpression	3L		5615831	1					
ANR	5615943	MultiplicativeExpression	( textLen + 2L ) / 3		5615831	1		/			
ANR	5615944	AdditiveExpression	textLen + 2L		5615831	0		+			
ANR	5615945	Identifier	textLen		5615831	0					
ANR	5615946	PrimaryExpression	2L		5615831	1					
ANR	5615947	PrimaryExpression	3		5615831	1					
ANR	5615948	ElseStatement	else		5615831	0					
ANR	5615949	IfStatement	if ( * isAlphanumeric )		5615831	0					
ANR	5615950	Condition	* isAlphanumeric	296:12:12845:12859	5615831	0	True				
ANR	5615951	UnaryOperationExpression	* isAlphanumeric		5615831	0					
ANR	5615952	UnaryOperator	*		5615831	0					
ANR	5615953	Identifier	isAlphanumeric		5615831	1					
ANR	5615954	CompoundStatement		20:29:448:448	5615831	1					
ANR	5615955	ExpressionStatement	tempBits = textLen * 5L + ( textLen + 1L ) / 2	297:2:12866:12910	5615831	0	True				
ANR	5615956	AssignmentExpression	tempBits = textLen * 5L + ( textLen + 1L ) / 2		5615831	0		=			
ANR	5615957	Identifier	tempBits		5615831	0					
ANR	5615958	AdditiveExpression	textLen * 5L + ( textLen + 1L ) / 2		5615831	1		+			
ANR	5615959	MultiplicativeExpression	textLen * 5L		5615831	0		*			
ANR	5615960	Identifier	textLen		5615831	0					
ANR	5615961	PrimaryExpression	5L		5615831	1					
ANR	5615962	MultiplicativeExpression	( textLen + 1L ) / 2		5615831	1		/			
ANR	5615963	AdditiveExpression	textLen + 1L		5615831	0		+			
ANR	5615964	Identifier	textLen		5615831	0					
ANR	5615965	PrimaryExpression	1L		5615831	1					
ANR	5615966	PrimaryExpression	2		5615831	1					
ANR	5615967	ElseStatement	else		5615831	0					
ANR	5615968	CompoundStatement		22:8:506:506	5615831	0					
ANR	5615969	ExpressionStatement	tempBits = textLen * 8L	299:2:12938:12961	5615831	0	True				
ANR	5615970	AssignmentExpression	tempBits = textLen * 8L		5615831	0		=			
ANR	5615971	Identifier	tempBits		5615831	0					
ANR	5615972	MultiplicativeExpression	textLen * 8L		5615831	1		*			
ANR	5615973	Identifier	textLen		5615831	0					
ANR	5615974	PrimaryExpression	8L		5615831	1					
ANR	5615975	IfStatement	if ( tempBits > INT_MAX )		5615831	7					
ANR	5615976	Condition	tempBits > INT_MAX	302:5:12972:12989	5615831	0	True				
ANR	5615977	RelationalExpression	tempBits > INT_MAX		5615831	0		>			
ANR	5615978	Identifier	tempBits		5615831	0					
ANR	5615979	Identifier	INT_MAX		5615831	1					
ANR	5615980	CompoundStatement		26:25:578:578	5615831	1					
ANR	5615981	ReturnStatement	return - 1 ;	303:2:12996:13005	5615831	0	True				
ANR	5615982	UnaryOperationExpression	- 1		5615831	0					
ANR	5615983	UnaryOperator	-		5615831	0					
ANR	5615984	PrimaryExpression	1		5615831	1					
ANR	5615985	ExpressionStatement	* textBits = ( int ) tempBits	305:1:13011:13037	5615831	8	True				
ANR	5615986	AssignmentExpression	* textBits = ( int ) tempBits		5615831	0		=			
ANR	5615987	UnaryOperationExpression	* textBits		5615831	0					
ANR	5615988	UnaryOperator	*		5615831	0					
ANR	5615989	Identifier	textBits		5615831	1					
ANR	5615990	CastExpression	( int ) tempBits		5615831	1					
ANR	5615991	CastTarget	int		5615831	0					
ANR	5615992	Identifier	tempBits		5615831	1					
ANR	5615993	ReturnStatement	return textLen ;	306:1:13040:13054	5615831	9	True				
ANR	5615994	Identifier	textLen		5615831	0					
ANR	5615995	ReturnType	static int		5615831	1					
ANR	5615996	Identifier	getTextProperties		5615831	2					
ANR	5615997	ParameterList	"const char * text , bool * isNumeric , bool * isAlphanumeric , int * textBits"		5615831	3					
ANR	5615998	Parameter	const char * text	277:29:12341:12356	5615831	0	True				
ANR	5615999	ParameterType	const char *		5615831	0					
ANR	5616000	Identifier	text		5615831	1					
ANR	5616001	Parameter	bool * isNumeric	277:47:12359:12373	5615831	1	True				
ANR	5616002	ParameterType	bool *		5615831	0					
ANR	5616003	Identifier	isNumeric		5615831	1					
ANR	5616004	Parameter	bool * isAlphanumeric	277:64:12376:12395	5615831	2	True				
ANR	5616005	ParameterType	bool *		5615831	0					
ANR	5616006	Identifier	isAlphanumeric		5615831	1					
ANR	5616007	Parameter	int * textBits	277:86:12398:12410	5615831	3	True				
ANR	5616008	ParameterType	int *		5615831	0					
ANR	5616009	Identifier	textBits		5615831	1					
ANR	5616010	CFGEntryNode	ENTRY		5615831		True				
ANR	5616011	CFGExitNode	EXIT		5615831		True				
ANR	5616012	Symbol	c		5615831						
ANR	5616013	Symbol	NULL		5615831						
ANR	5616014	Symbol	ALPHANUMERIC_CHARSET		5615831						
ANR	5616015	Symbol	* isNumeric		5615831						
ANR	5616016	Symbol	* isAlphanumeric		5615831						
ANR	5616017	Symbol	false		5615831						
ANR	5616018	Symbol	strchr		5615831						
ANR	5616019	Symbol	p		5615831						
ANR	5616020	Symbol	INT16_MAX		5615831						
ANR	5616021	Symbol	textLen		5615831						
ANR	5616022	Symbol	isNumeric		5615831						
ANR	5616023	Symbol	textBits		5615831						
ANR	5616024	Symbol	* textBits		5615831						
ANR	5616025	Symbol	isAlphanumeric		5615831						
ANR	5616026	Symbol	true		5615831						
ANR	5616027	Symbol	INT_MAX		5615831						
ANR	5616028	Symbol	* p		5615831						
ANR	5616029	Symbol	text		5615831						
ANR	5616030	Symbol	tempBits		5615831						
ANR	5616031	Function	fitVersionToData	311:0:13206:14603							
ANR	5616032	FunctionDef	"fitVersionToData (int minVersion , int maxVersion , enum qrcodegen_Ecc ecl , int dataLen , int dataBitLen , int ver1To9LenBits , int ver10To26LenBits , int ver27To40LenBits)"		5616031	0					
ANR	5616033	CompoundStatement		312:100:13390:14603	5616031	0					
ANR	5616034	IfStatement	if ( qrcodegen_VERSION_MIN <= minVersion && minVersion <= maxVersion && maxVersion <= qrcodegen_VERSION_MAX )		5616031	0					
ANR	5616035	Condition	qrcodegen_VERSION_MIN <= minVersion && minVersion <= maxVersion && maxVersion <= qrcodegen_VERSION_MAX	314:5:13398:13499	5616031	0	True				
ANR	5616036	AndExpression	qrcodegen_VERSION_MIN <= minVersion && minVersion <= maxVersion && maxVersion <= qrcodegen_VERSION_MAX		5616031	0		&&			
ANR	5616037	RelationalExpression	qrcodegen_VERSION_MIN <= minVersion		5616031	0		<=			
ANR	5616038	Identifier	qrcodegen_VERSION_MIN		5616031	0					
ANR	5616039	Identifier	minVersion		5616031	1					
ANR	5616040	AndExpression	minVersion <= maxVersion && maxVersion <= qrcodegen_VERSION_MAX		5616031	1		&&			
ANR	5616041	RelationalExpression	minVersion <= maxVersion		5616031	0		<=			
ANR	5616042	Identifier	minVersion		5616031	0					
ANR	5616043	Identifier	maxVersion		5616031	1					
ANR	5616044	RelationalExpression	maxVersion <= qrcodegen_VERSION_MAX		5616031	1		<=			
ANR	5616045	Identifier	maxVersion		5616031	0					
ANR	5616046	Identifier	qrcodegen_VERSION_MAX		5616031	1					
ANR	5616047	CompoundStatement		20:2:503:514	5616031	1					
ANR	5616048	IfStatement	if ( ( int ) ecl < 0 || ( int ) ecl > 3 )		5616031	0					
ANR	5616049	Condition	( int ) ecl < 0 || ( int ) ecl > 3	315:6:13510:13539	5616031	0	True				
ANR	5616050	OrExpression	( int ) ecl < 0 || ( int ) ecl > 3		5616031	0		||			
ANR	5616051	RelationalExpression	( int ) ecl < 0		5616031	0		<			
ANR	5616052	CastExpression	( int ) ecl		5616031	0					
ANR	5616053	CastTarget	int		5616031	0					
ANR	5616054	Identifier	ecl		5616031	1					
ANR	5616055	PrimaryExpression	0		5616031	1					
ANR	5616056	RelationalExpression	( int ) ecl > 3		5616031	1		>			
ANR	5616057	CastExpression	( int ) ecl		5616031	0					
ANR	5616058	CastTarget	int		5616031	0					
ANR	5616059	Identifier	ecl		5616031	1					
ANR	5616060	PrimaryExpression	3		5616031	1					
ANR	5616061	CompoundStatement		4:38:151:151	5616031	1					
ANR	5616062	ReturnStatement	return 0 ;	316:3:13547:13555	5616031	0	True				
ANR	5616063	PrimaryExpression	0		5616031	0					
ANR	5616064	IfStatement	if ( dataLen < 0 || dataBitLen < 0 )		5616031	1					
ANR	5616065	Condition	dataLen < 0 || dataBitLen < 0	318:6:13567:13595	5616031	0	True				
ANR	5616066	OrExpression	dataLen < 0 || dataBitLen < 0		5616031	0		||			
ANR	5616067	RelationalExpression	dataLen < 0		5616031	0		<			
ANR	5616068	Identifier	dataLen		5616031	0					
ANR	5616069	PrimaryExpression	0		5616031	1					
ANR	5616070	RelationalExpression	dataBitLen < 0		5616031	1		<			
ANR	5616071	Identifier	dataBitLen		5616031	0					
ANR	5616072	PrimaryExpression	0		5616031	1					
ANR	5616073	CompoundStatement		7:37:207:207	5616031	1					
ANR	5616074	ReturnStatement	return 0 ;	319:3:13603:13611	5616031	0	True				
ANR	5616075	PrimaryExpression	0		5616031	0					
ANR	5616076	IfStatement	if ( ver1To9LenBits < 1 || ver1To9LenBits > 16 )		5616031	2					
ANR	5616077	Condition	ver1To9LenBits < 1 || ver1To9LenBits > 16	321:6:13623:13663	5616031	0	True				
ANR	5616078	OrExpression	ver1To9LenBits < 1 || ver1To9LenBits > 16		5616031	0		||			
ANR	5616079	RelationalExpression	ver1To9LenBits < 1		5616031	0		<			
ANR	5616080	Identifier	ver1To9LenBits		5616031	0					
ANR	5616081	PrimaryExpression	1		5616031	1					
ANR	5616082	RelationalExpression	ver1To9LenBits > 16		5616031	1		>			
ANR	5616083	Identifier	ver1To9LenBits		5616031	0					
ANR	5616084	PrimaryExpression	16		5616031	1					
ANR	5616085	CompoundStatement		10:49:275:275	5616031	1					
ANR	5616086	ReturnStatement	return 0 ;	323:3:13734:13742	5616031	0	True				
ANR	5616087	PrimaryExpression	0		5616031	0					
ANR	5616088	IfStatement	if ( ver10To26LenBits < 1 || ver10To26LenBits > 16 )		5616031	3					
ANR	5616089	Condition	ver10To26LenBits < 1 || ver10To26LenBits > 16	325:6:13754:13798	5616031	0	True				
ANR	5616090	OrExpression	ver10To26LenBits < 1 || ver10To26LenBits > 16		5616031	0		||			
ANR	5616091	RelationalExpression	ver10To26LenBits < 1		5616031	0		<			
ANR	5616092	Identifier	ver10To26LenBits		5616031	0					
ANR	5616093	PrimaryExpression	1		5616031	1					
ANR	5616094	RelationalExpression	ver10To26LenBits > 16		5616031	1		>			
ANR	5616095	Identifier	ver10To26LenBits		5616031	0					
ANR	5616096	PrimaryExpression	16		5616031	1					
ANR	5616097	CompoundStatement		14:53:410:410	5616031	1					
ANR	5616098	ReturnStatement	return 0 ;	326:3:13806:13814	5616031	0	True				
ANR	5616099	PrimaryExpression	0		5616031	0					
ANR	5616100	IfStatement	if ( ver27To40LenBits < 1 || ver27To40LenBits > 16 )		5616031	4					
ANR	5616101	Condition	ver27To40LenBits < 1 || ver27To40LenBits > 16	328:6:13826:13870	5616031	0	True				
ANR	5616102	OrExpression	ver27To40LenBits < 1 || ver27To40LenBits > 16		5616031	0		||			
ANR	5616103	RelationalExpression	ver27To40LenBits < 1		5616031	0		<			
ANR	5616104	Identifier	ver27To40LenBits		5616031	0					
ANR	5616105	PrimaryExpression	1		5616031	1					
ANR	5616106	RelationalExpression	ver27To40LenBits > 16		5616031	1		>			
ANR	5616107	Identifier	ver27To40LenBits		5616031	0					
ANR	5616108	PrimaryExpression	16		5616031	1					
ANR	5616109	CompoundStatement		17:53:482:482	5616031	1					
ANR	5616110	ReturnStatement	return 0 ;	329:3:13878:13886	5616031	0	True				
ANR	5616111	PrimaryExpression	0		5616031	0					
ANR	5616112	IdentifierDeclStatement	int version ;	331:2:13894:13905	5616031	5	True				
ANR	5616113	IdentifierDecl	version		5616031	0					
ANR	5616114	IdentifierDeclType	int		5616031	0					
ANR	5616115	Identifier	version		5616031	1					
ANR	5616116	ForStatement	for ( version = minVersion ; ; version ++ )		5616031	6					
ANR	5616117	ForInit	version = minVersion ;	332:7:13914:13934	5616031	0	True				
ANR	5616118	AssignmentExpression	version = minVersion		5616031	0		=			
ANR	5616119	Identifier	version		5616031	0					
ANR	5616120	Identifier	minVersion		5616031	1					
ANR	5616121	PostIncDecOperationExpression	version ++	332:30:13937:13945	5616031	1	True				
ANR	5616122	Identifier	version		5616031	0					
ANR	5616123	IncDec	++		5616031	1					
ANR	5616124	CompoundStatement		22:3:562:576	5616031	2					
ANR	5616125	IdentifierDeclStatement	int lengthBits ;	333:3:13953:13967	5616031	0	True				
ANR	5616126	IdentifierDecl	lengthBits		5616031	0					
ANR	5616127	IdentifierDeclType	int		5616031	0					
ANR	5616128	Identifier	lengthBits		5616031	1					
ANR	5616129	IfStatement	if ( version <= 9 )		5616031	1					
ANR	5616130	Condition	version <= 9	334:7:13976:13987	5616031	0	True				
ANR	5616131	RelationalExpression	version <= 9		5616031	0		<=			
ANR	5616132	Identifier	version		5616031	0					
ANR	5616133	PrimaryExpression	9		5616031	1					
ANR	5616134	CompoundStatement		23:21:599:599	5616031	1					
ANR	5616135	ExpressionStatement	lengthBits = ver1To9LenBits	335:4:13996:14023	5616031	0	True				
ANR	5616136	AssignmentExpression	lengthBits = ver1To9LenBits		5616031	0		=			
ANR	5616137	Identifier	lengthBits		5616031	0					
ANR	5616138	Identifier	ver1To9LenBits		5616031	1					
ANR	5616139	ElseStatement	else		5616031	0					
ANR	5616140	IfStatement	if ( version <= 26 )		5616031	0					
ANR	5616141	Condition	version <= 26	336:14:14039:14051	5616031	0	True				
ANR	5616142	RelationalExpression	version <= 26		5616031	0		<=			
ANR	5616143	Identifier	version		5616031	0					
ANR	5616144	PrimaryExpression	26		5616031	1					
ANR	5616145	CompoundStatement		25:29:663:663	5616031	1					
ANR	5616146	ExpressionStatement	lengthBits = ver10To26LenBits	337:4:14060:14089	5616031	0	True				
ANR	5616147	AssignmentExpression	lengthBits = ver10To26LenBits		5616031	0		=			
ANR	5616148	Identifier	lengthBits		5616031	0					
ANR	5616149	Identifier	ver10To26LenBits		5616031	1					
ANR	5616150	ElseStatement	else		5616031	0					
ANR	5616151	CompoundStatement		27:10:710:710	5616031	0					
ANR	5616152	ExpressionStatement	lengthBits = ver27To40LenBits	339:4:14107:14136	5616031	0	True				
ANR	5616153	AssignmentExpression	lengthBits = ver27To40LenBits		5616031	0		=			
ANR	5616154	Identifier	lengthBits		5616031	0					
ANR	5616155	Identifier	ver27To40LenBits		5616031	1					
ANR	5616156	IfStatement	if ( dataLen < ( 1L << lengthBits ) )		5616031	2					
ANR	5616157	Condition	dataLen < ( 1L << lengthBits )	341:7:14150:14177	5616031	0	True				
ANR	5616158	RelationalExpression	dataLen < ( 1L << lengthBits )		5616031	0		<			
ANR	5616159	Identifier	dataLen		5616031	0					
ANR	5616160	ShiftExpression	1L << lengthBits		5616031	1		<<			
ANR	5616161	PrimaryExpression	1L		5616031	0					
ANR	5616162	Identifier	lengthBits		5616031	1					
ANR	5616163	CompoundStatement		32:4:895:922	5616031	1					
ANR	5616164	IdentifierDeclStatement	"int dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8 ;"	342:4:14186:14247	5616031	0	True				
ANR	5616165	IdentifierDecl	"dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8"		5616031	0					
ANR	5616166	IdentifierDeclType	int		5616031	0					
ANR	5616167	Identifier	dataCapacityBits		5616031	1					
ANR	5616168	AssignmentExpression	"dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8"		5616031	2		=			
ANR	5616169	Identifier	dataCapacityBits		5616031	0					
ANR	5616170	MultiplicativeExpression	"getNumDataCodewords ( version , ecl ) * 8"		5616031	1		*			
ANR	5616171	CallExpression	"getNumDataCodewords ( version , ecl )"		5616031	0					
ANR	5616172	Callee	getNumDataCodewords		5616031	0					
ANR	5616173	Identifier	getNumDataCodewords		5616031	0					
ANR	5616174	ArgumentList	version		5616031	1					
ANR	5616175	Argument	version		5616031	0					
ANR	5616176	Identifier	version		5616031	0					
ANR	5616177	Argument	ecl		5616031	1					
ANR	5616178	Identifier	ecl		5616031	0					
ANR	5616179	PrimaryExpression	8		5616031	1					
ANR	5616180	IdentifierDeclStatement	int header = 4 + lengthBits ;	343:4:14286:14313	5616031	1	True				
ANR	5616181	IdentifierDecl	header = 4 + lengthBits		5616031	0					
ANR	5616182	IdentifierDeclType	int		5616031	0					
ANR	5616183	Identifier	header		5616031	1					
ANR	5616184	AssignmentExpression	header = 4 + lengthBits		5616031	2		=			
ANR	5616185	Identifier	header		5616031	0					
ANR	5616186	AdditiveExpression	4 + lengthBits		5616031	1		+			
ANR	5616187	PrimaryExpression	4		5616031	0					
ANR	5616188	Identifier	lengthBits		5616031	1					
ANR	5616189	IfStatement	if ( dataBitLen <= INT_MAX - header && header + dataBitLen <= dataCapacityBits )		5616031	2					
ANR	5616190	Condition	dataBitLen <= INT_MAX - header && header + dataBitLen <= dataCapacityBits	344:8:14323:14395	5616031	0	True				
ANR	5616191	AndExpression	dataBitLen <= INT_MAX - header && header + dataBitLen <= dataCapacityBits		5616031	0		&&			
ANR	5616192	RelationalExpression	dataBitLen <= INT_MAX - header		5616031	0		<=			
ANR	5616193	Identifier	dataBitLen		5616031	0					
ANR	5616194	AdditiveExpression	INT_MAX - header		5616031	1		-			
ANR	5616195	Identifier	INT_MAX		5616031	0					
ANR	5616196	Identifier	header		5616031	1					
ANR	5616197	RelationalExpression	header + dataBitLen <= dataCapacityBits		5616031	1		<=			
ANR	5616198	AdditiveExpression	header + dataBitLen		5616031	0		+			
ANR	5616199	Identifier	header		5616031	0					
ANR	5616200	Identifier	dataBitLen		5616031	1					
ANR	5616201	Identifier	dataCapacityBits		5616031	1					
ANR	5616202	CompoundStatement		33:83:1007:1007	5616031	1					
ANR	5616203	ReturnStatement	return version ;	345:5:14405:14419	5616031	0	True				
ANR	5616204	Identifier	version		5616031	0					
ANR	5616205	IfStatement	if ( version >= maxVersion )		5616031	3					
ANR	5616206	Condition	version >= maxVersion	348:7:14486:14506	5616031	0	True				
ANR	5616207	RelationalExpression	version >= maxVersion		5616031	0		>=			
ANR	5616208	Identifier	version		5616031	0					
ANR	5616209	Identifier	maxVersion		5616031	1					
ANR	5616210	CompoundStatement		37:30:1118:1118	5616031	1					
ANR	5616211	BreakStatement	break ;	349:4:14573:14578	5616031	0	True				
ANR	5616212	ReturnStatement	return 0 ;	353:1:14593:14601	5616031	1	True				
ANR	5616213	PrimaryExpression	0		5616031	0					
ANR	5616214	ReturnType	static int		5616031	1					
ANR	5616215	Identifier	fitVersionToData		5616031	2					
ANR	5616216	ParameterList	"int minVersion , int maxVersion , enum qrcodegen_Ecc ecl , int dataLen , int dataBitLen , int ver1To9LenBits , int ver10To26LenBits , int ver27To40LenBits"		5616031	3					
ANR	5616217	Parameter	int minVersion	311:28:13234:13247	5616031	0	True				
ANR	5616218	ParameterType	int		5616031	0					
ANR	5616219	Identifier	minVersion		5616031	1					
ANR	5616220	Parameter	int maxVersion	311:44:13250:13263	5616031	1	True				
ANR	5616221	ParameterType	int		5616031	0					
ANR	5616222	Identifier	maxVersion		5616031	1					
ANR	5616223	Parameter	enum qrcodegen_Ecc ecl	311:60:13266:13287	5616031	2	True				
ANR	5616224	ParameterType	enum qrcodegen_Ecc		5616031	0					
ANR	5616225	Identifier	ecl		5616031	1					
ANR	5616226	Parameter	int dataLen	312:7:13297:13307	5616031	3	True				
ANR	5616227	ParameterType	int		5616031	0					
ANR	5616228	Identifier	dataLen		5616031	1					
ANR	5616229	Parameter	int dataBitLen	312:20:13310:13323	5616031	4	True				
ANR	5616230	ParameterType	int		5616031	0					
ANR	5616231	Identifier	dataBitLen		5616031	1					
ANR	5616232	Parameter	int ver1To9LenBits	312:36:13326:13343	5616031	5	True				
ANR	5616233	ParameterType	int		5616031	0					
ANR	5616234	Identifier	ver1To9LenBits		5616031	1					
ANR	5616235	Parameter	int ver10To26LenBits	312:56:13346:13365	5616031	6	True				
ANR	5616236	ParameterType	int		5616031	0					
ANR	5616237	Identifier	ver10To26LenBits		5616031	1					
ANR	5616238	Parameter	int ver27To40LenBits	312:78:13368:13387	5616031	7	True				
ANR	5616239	ParameterType	int		5616031	0					
ANR	5616240	Identifier	ver27To40LenBits		5616031	1					
ANR	5616241	CFGEntryNode	ENTRY		5616031		True				
ANR	5616242	CFGExitNode	EXIT		5616031		True				
ANR	5616243	InfiniteForNode	true		5616031		True				
ANR	5616244	Symbol	getNumDataCodewords		5616031						
ANR	5616245	Symbol	minVersion		5616031						
ANR	5616246	Symbol	lengthBits		5616031						
ANR	5616247	Symbol	ver27To40LenBits		5616031						
ANR	5616248	Symbol	version		5616031						
ANR	5616249	Symbol	dataLen		5616031						
ANR	5616250	Symbol	ver10To26LenBits		5616031						
ANR	5616251	Symbol	ecl		5616031						
ANR	5616252	Symbol	dataBitLen		5616031						
ANR	5616253	Symbol	qrcodegen_VERSION_MIN		5616031						
ANR	5616254	Symbol	INT_MAX		5616031						
ANR	5616255	Symbol	maxVersion		5616031						
ANR	5616256	Symbol	header		5616031						
ANR	5616257	Symbol	ver1To9LenBits		5616031						
ANR	5616258	Symbol	qrcodegen_VERSION_MAX		5616031						
ANR	5616259	Symbol	dataCapacityBits		5616031						
ANR	5616260	Function	encodeQrCodeTail	362:0:15142:17230							
ANR	5616261	FunctionDef	"encodeQrCodeTail (ut8 dataAndQrcode [ ] , int bitLen , ut8 tempBuffer [ ] , int version , enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , bool boostEcl)"		5616260	0					
ANR	5616262	CompoundStatement		362:158:15300:17230	5616260	0					
ANR	5616263	IfStatement	if ( boostEcl )		5616260	0					
ANR	5616264	Condition	boostEcl	364:5:15308:15315	5616260	0	True				
ANR	5616265	Identifier	boostEcl		5616260	0					
ANR	5616266	CompoundStatement		3:15:17:17	5616260	1					
ANR	5616267	IfStatement	"if ( bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_MEDIUM ) * 8 )"		5616260	0					
ANR	5616268	Condition	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_MEDIUM ) * 8"	365:6:15326:15392	5616260	0	True				
ANR	5616269	RelationalExpression	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_MEDIUM ) * 8"		5616260	0		<=			
ANR	5616270	Identifier	bitLen		5616260	0					
ANR	5616271	MultiplicativeExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_MEDIUM ) * 8"		5616260	1		*			
ANR	5616272	CallExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_MEDIUM )"		5616260	0					
ANR	5616273	Callee	getNumDataCodewords		5616260	0					
ANR	5616274	Identifier	getNumDataCodewords		5616260	0					
ANR	5616275	ArgumentList	version		5616260	1					
ANR	5616276	Argument	version		5616260	0					
ANR	5616277	Identifier	version		5616260	0					
ANR	5616278	Argument	qrcodegen_Ecc_MEDIUM		5616260	1					
ANR	5616279	Identifier	qrcodegen_Ecc_MEDIUM		5616260	0					
ANR	5616280	PrimaryExpression	8		5616260	1					
ANR	5616281	CompoundStatement		4:75:94:94	5616260	1					
ANR	5616282	ExpressionStatement	ecl = qrcodegen_Ecc_MEDIUM	366:3:15400:15426	5616260	0	True				
ANR	5616283	AssignmentExpression	ecl = qrcodegen_Ecc_MEDIUM		5616260	0		=			
ANR	5616284	Identifier	ecl		5616260	0					
ANR	5616285	Identifier	qrcodegen_Ecc_MEDIUM		5616260	1					
ANR	5616286	IfStatement	"if ( bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_QUARTILE ) * 8 )"		5616260	1					
ANR	5616287	Condition	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_QUARTILE ) * 8"	368:6:15438:15504	5616260	0	True				
ANR	5616288	RelationalExpression	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_QUARTILE ) * 8"		5616260	0		<=			
ANR	5616289	Identifier	bitLen		5616260	0					
ANR	5616290	MultiplicativeExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_QUARTILE ) * 8"		5616260	1		*			
ANR	5616291	CallExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_QUARTILE )"		5616260	0					
ANR	5616292	Callee	getNumDataCodewords		5616260	0					
ANR	5616293	Identifier	getNumDataCodewords		5616260	0					
ANR	5616294	ArgumentList	version		5616260	1					
ANR	5616295	Argument	version		5616260	0					
ANR	5616296	Identifier	version		5616260	0					
ANR	5616297	Argument	qrcodegen_Ecc_QUARTILE		5616260	1					
ANR	5616298	Identifier	qrcodegen_Ecc_QUARTILE		5616260	0					
ANR	5616299	PrimaryExpression	8		5616260	1					
ANR	5616300	CompoundStatement		7:75:206:206	5616260	1					
ANR	5616301	ExpressionStatement	ecl = qrcodegen_Ecc_QUARTILE	369:3:15512:15540	5616260	0	True				
ANR	5616302	AssignmentExpression	ecl = qrcodegen_Ecc_QUARTILE		5616260	0		=			
ANR	5616303	Identifier	ecl		5616260	0					
ANR	5616304	Identifier	qrcodegen_Ecc_QUARTILE		5616260	1					
ANR	5616305	IfStatement	"if ( bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_HIGH ) * 8 )"		5616260	2					
ANR	5616306	Condition	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_HIGH ) * 8"	371:6:15552:15618	5616260	0	True				
ANR	5616307	RelationalExpression	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_HIGH ) * 8"		5616260	0		<=			
ANR	5616308	Identifier	bitLen		5616260	0					
ANR	5616309	MultiplicativeExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_HIGH ) * 8"		5616260	1		*			
ANR	5616310	CallExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_HIGH )"		5616260	0					
ANR	5616311	Callee	getNumDataCodewords		5616260	0					
ANR	5616312	Identifier	getNumDataCodewords		5616260	0					
ANR	5616313	ArgumentList	version		5616260	1					
ANR	5616314	Argument	version		5616260	0					
ANR	5616315	Identifier	version		5616260	0					
ANR	5616316	Argument	qrcodegen_Ecc_HIGH		5616260	1					
ANR	5616317	Identifier	qrcodegen_Ecc_HIGH		5616260	0					
ANR	5616318	PrimaryExpression	8		5616260	1					
ANR	5616319	CompoundStatement		10:75:320:320	5616260	1					
ANR	5616320	ExpressionStatement	ecl = qrcodegen_Ecc_HIGH	372:3:15626:15650	5616260	0	True				
ANR	5616321	AssignmentExpression	ecl = qrcodegen_Ecc_HIGH		5616260	0		=			
ANR	5616322	Identifier	ecl		5616260	0					
ANR	5616323	Identifier	qrcodegen_Ecc_HIGH		5616260	1					
ANR	5616324	IdentifierDeclStatement	"int dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8 ;"	375:1:15660:15721	5616260	1	True				
ANR	5616325	IdentifierDecl	"dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8"		5616260	0					
ANR	5616326	IdentifierDeclType	int		5616260	0					
ANR	5616327	Identifier	dataCapacityBits		5616260	1					
ANR	5616328	AssignmentExpression	"dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8"		5616260	2		=			
ANR	5616329	Identifier	dataCapacityBits		5616260	0					
ANR	5616330	MultiplicativeExpression	"getNumDataCodewords ( version , ecl ) * 8"		5616260	1		*			
ANR	5616331	CallExpression	"getNumDataCodewords ( version , ecl )"		5616260	0					
ANR	5616332	Callee	getNumDataCodewords		5616260	0					
ANR	5616333	Identifier	getNumDataCodewords		5616260	0					
ANR	5616334	ArgumentList	version		5616260	1					
ANR	5616335	Argument	version		5616260	0					
ANR	5616336	Identifier	version		5616260	0					
ANR	5616337	Argument	ecl		5616260	1					
ANR	5616338	Identifier	ecl		5616260	0					
ANR	5616339	PrimaryExpression	8		5616260	1					
ANR	5616340	IdentifierDeclStatement	int terminatorBits = dataCapacityBits - bitLen ;	378:1:15771:15817	5616260	2	True				
ANR	5616341	IdentifierDecl	terminatorBits = dataCapacityBits - bitLen		5616260	0					
ANR	5616342	IdentifierDeclType	int		5616260	0					
ANR	5616343	Identifier	terminatorBits		5616260	1					
ANR	5616344	AssignmentExpression	terminatorBits = dataCapacityBits - bitLen		5616260	2		=			
ANR	5616345	Identifier	terminatorBits		5616260	0					
ANR	5616346	AdditiveExpression	dataCapacityBits - bitLen		5616260	1		-			
ANR	5616347	Identifier	dataCapacityBits		5616260	0					
ANR	5616348	Identifier	bitLen		5616260	1					
ANR	5616349	IfStatement	if ( terminatorBits > 4 )		5616260	3					
ANR	5616350	Condition	terminatorBits > 4	379:5:15824:15841	5616260	0	True				
ANR	5616351	RelationalExpression	terminatorBits > 4		5616260	0		>			
ANR	5616352	Identifier	terminatorBits		5616260	0					
ANR	5616353	PrimaryExpression	4		5616260	1					
ANR	5616354	CompoundStatement		18:25:543:543	5616260	1					
ANR	5616355	ExpressionStatement	terminatorBits = 4	380:2:15848:15866	5616260	0	True				
ANR	5616356	AssignmentExpression	terminatorBits = 4		5616260	0		=			
ANR	5616357	Identifier	terminatorBits		5616260	0					
ANR	5616358	PrimaryExpression	4		5616260	1					
ANR	5616359	ExpressionStatement	"appendBitsToBuffer ( 0 , terminatorBits , dataAndQrcode , & bitLen )"	382:1:15872:15934	5616260	4	True				
ANR	5616360	CallExpression	"appendBitsToBuffer ( 0 , terminatorBits , dataAndQrcode , & bitLen )"		5616260	0					
ANR	5616361	Callee	appendBitsToBuffer		5616260	0					
ANR	5616362	Identifier	appendBitsToBuffer		5616260	0					
ANR	5616363	ArgumentList	0		5616260	1					
ANR	5616364	Argument	0		5616260	0					
ANR	5616365	PrimaryExpression	0		5616260	0					
ANR	5616366	Argument	terminatorBits		5616260	1					
ANR	5616367	Identifier	terminatorBits		5616260	0					
ANR	5616368	Argument	dataAndQrcode		5616260	2					
ANR	5616369	Identifier	dataAndQrcode		5616260	0					
ANR	5616370	Argument	& bitLen		5616260	3					
ANR	5616371	UnaryOperationExpression	& bitLen		5616260	0					
ANR	5616372	UnaryOperator	&		5616260	0					
ANR	5616373	Identifier	bitLen		5616260	1					
ANR	5616374	ExpressionStatement	"appendBitsToBuffer ( 0 , ( 8 - bitLen % 8 ) % 8 , dataAndQrcode , & bitLen )"	383:1:15937:16005	5616260	5	True				
ANR	5616375	CallExpression	"appendBitsToBuffer ( 0 , ( 8 - bitLen % 8 ) % 8 , dataAndQrcode , & bitLen )"		5616260	0					
ANR	5616376	Callee	appendBitsToBuffer		5616260	0					
ANR	5616377	Identifier	appendBitsToBuffer		5616260	0					
ANR	5616378	ArgumentList	0		5616260	1					
ANR	5616379	Argument	0		5616260	0					
ANR	5616380	PrimaryExpression	0		5616260	0					
ANR	5616381	Argument	( 8 - bitLen % 8 ) % 8		5616260	1					
ANR	5616382	MultiplicativeExpression	( 8 - bitLen % 8 ) % 8		5616260	0		%			
ANR	5616383	AdditiveExpression	8 - bitLen % 8		5616260	0		-			
ANR	5616384	PrimaryExpression	8		5616260	0					
ANR	5616385	MultiplicativeExpression	bitLen % 8		5616260	1		%			
ANR	5616386	Identifier	bitLen		5616260	0					
ANR	5616387	PrimaryExpression	8		5616260	1					
ANR	5616388	PrimaryExpression	8		5616260	1					
ANR	5616389	Argument	dataAndQrcode		5616260	2					
ANR	5616390	Identifier	dataAndQrcode		5616260	0					
ANR	5616391	Argument	& bitLen		5616260	3					
ANR	5616392	UnaryOperationExpression	& bitLen		5616260	0					
ANR	5616393	UnaryOperator	&		5616260	0					
ANR	5616394	Identifier	bitLen		5616260	1					
ANR	5616395	IdentifierDeclStatement	ut8 padByte ;	384:1:16008:16019	5616260	6	True				
ANR	5616396	IdentifierDecl	padByte		5616260	0					
ANR	5616397	IdentifierDeclType	ut8		5616260	0					
ANR	5616398	Identifier	padByte		5616260	1					
ANR	5616399	ForStatement	for ( padByte = 0xEC ; bitLen < dataCapacityBits ; padByte ^= 0xEC ^ 0x11 )		5616260	7					
ANR	5616400	ForInit	padByte = 0xEC ;	385:6:16027:16041	5616260	0	True				
ANR	5616401	AssignmentExpression	padByte = 0xEC		5616260	0		=			
ANR	5616402	Identifier	padByte		5616260	0					
ANR	5616403	PrimaryExpression	0xEC		5616260	1					
ANR	5616404	Condition	bitLen < dataCapacityBits	385:22:16043:16067	5616260	1	True				
ANR	5616405	RelationalExpression	bitLen < dataCapacityBits		5616260	0		<			
ANR	5616406	Identifier	bitLen		5616260	0					
ANR	5616407	Identifier	dataCapacityBits		5616260	1					
ANR	5616408	AssignmentExpression	padByte ^= 0xEC ^ 0x11	385:49:16070:16091	5616260	2	True	^=			
ANR	5616409	Identifier	padByte		5616260	0					
ANR	5616410	ExclusiveOrExpression	0xEC ^ 0x11		5616260	1		^			
ANR	5616411	PrimaryExpression	0xEC		5616260	0					
ANR	5616412	PrimaryExpression	0x11		5616260	1					
ANR	5616413	CompoundStatement		24:73:793:793	5616260	3					
ANR	5616414	ExpressionStatement	"appendBitsToBuffer ( padByte , 8 , dataAndQrcode , & bitLen )"	386:2:16098:16153	5616260	0	True				
ANR	5616415	CallExpression	"appendBitsToBuffer ( padByte , 8 , dataAndQrcode , & bitLen )"		5616260	0					
ANR	5616416	Callee	appendBitsToBuffer		5616260	0					
ANR	5616417	Identifier	appendBitsToBuffer		5616260	0					
ANR	5616418	ArgumentList	padByte		5616260	1					
ANR	5616419	Argument	padByte		5616260	0					
ANR	5616420	Identifier	padByte		5616260	0					
ANR	5616421	Argument	8		5616260	1					
ANR	5616422	PrimaryExpression	8		5616260	0					
ANR	5616423	Argument	dataAndQrcode		5616260	2					
ANR	5616424	Identifier	dataAndQrcode		5616260	0					
ANR	5616425	Argument	& bitLen		5616260	3					
ANR	5616426	UnaryOperationExpression	& bitLen		5616260	0					
ANR	5616427	UnaryOperator	&		5616260	0					
ANR	5616428	Identifier	bitLen		5616260	1					
ANR	5616429	IfStatement	if ( bitLen % 8 )		5616260	8					
ANR	5616430	Condition	bitLen % 8	388:5:16163:16172	5616260	0	True				
ANR	5616431	MultiplicativeExpression	bitLen % 8		5616260	0		%			
ANR	5616432	Identifier	bitLen		5616260	0					
ANR	5616433	PrimaryExpression	8		5616260	1					
ANR	5616434	CompoundStatement		27:17:874:874	5616260	1					
ANR	5616435	ReturnStatement	return ;	389:2:16179:16185	5616260	0	True				
ANR	5616436	ExpressionStatement	"appendErrorCorrection ( dataAndQrcode , version , ecl , tempBuffer )"	393:1:16236:16299	5616260	9	True				
ANR	5616437	CallExpression	"appendErrorCorrection ( dataAndQrcode , version , ecl , tempBuffer )"		5616260	0					
ANR	5616438	Callee	appendErrorCorrection		5616260	0					
ANR	5616439	Identifier	appendErrorCorrection		5616260	0					
ANR	5616440	ArgumentList	dataAndQrcode		5616260	1					
ANR	5616441	Argument	dataAndQrcode		5616260	0					
ANR	5616442	Identifier	dataAndQrcode		5616260	0					
ANR	5616443	Argument	version		5616260	1					
ANR	5616444	Identifier	version		5616260	0					
ANR	5616445	Argument	ecl		5616260	2					
ANR	5616446	Identifier	ecl		5616260	0					
ANR	5616447	Argument	tempBuffer		5616260	3					
ANR	5616448	Identifier	tempBuffer		5616260	0					
ANR	5616449	ExpressionStatement	"initializeFunctionModules ( version , dataAndQrcode )"	394:1:16302:16352	5616260	10	True				
ANR	5616450	CallExpression	"initializeFunctionModules ( version , dataAndQrcode )"		5616260	0					
ANR	5616451	Callee	initializeFunctionModules		5616260	0					
ANR	5616452	Identifier	initializeFunctionModules		5616260	0					
ANR	5616453	ArgumentList	version		5616260	1					
ANR	5616454	Argument	version		5616260	0					
ANR	5616455	Identifier	version		5616260	0					
ANR	5616456	Argument	dataAndQrcode		5616260	1					
ANR	5616457	Identifier	dataAndQrcode		5616260	0					
ANR	5616458	IfStatement	"if ( ! drawCodewords ( tempBuffer , getNumRawDataModules ( version ) / 8 , dataAndQrcode ) )"		5616260	11					
ANR	5616459	Condition	"! drawCodewords ( tempBuffer , getNumRawDataModules ( version ) / 8 , dataAndQrcode )"	395:5:16359:16436	5616260	0	True				
ANR	5616460	UnaryOperationExpression	"! drawCodewords ( tempBuffer , getNumRawDataModules ( version ) / 8 , dataAndQrcode )"		5616260	0					
ANR	5616461	UnaryOperator	!		5616260	0					
ANR	5616462	CallExpression	"drawCodewords ( tempBuffer , getNumRawDataModules ( version ) / 8 , dataAndQrcode )"		5616260	1					
ANR	5616463	Callee	drawCodewords		5616260	0					
ANR	5616464	Identifier	drawCodewords		5616260	0					
ANR	5616465	ArgumentList	tempBuffer		5616260	1					
ANR	5616466	Argument	tempBuffer		5616260	0					
ANR	5616467	Identifier	tempBuffer		5616260	0					
ANR	5616468	Argument	getNumRawDataModules ( version ) / 8		5616260	1					
ANR	5616469	MultiplicativeExpression	getNumRawDataModules ( version ) / 8		5616260	0		/			
ANR	5616470	CallExpression	getNumRawDataModules ( version )		5616260	0					
ANR	5616471	Callee	getNumRawDataModules		5616260	0					
ANR	5616472	Identifier	getNumRawDataModules		5616260	0					
ANR	5616473	ArgumentList	version		5616260	1					
ANR	5616474	Argument	version		5616260	0					
ANR	5616475	Identifier	version		5616260	0					
ANR	5616476	PrimaryExpression	8		5616260	1					
ANR	5616477	Argument	dataAndQrcode		5616260	2					
ANR	5616478	Identifier	dataAndQrcode		5616260	0					
ANR	5616479	CompoundStatement		34:85:1138:1138	5616260	1					
ANR	5616480	ReturnStatement	return ;	396:2:16443:16449	5616260	0	True				
ANR	5616481	ExpressionStatement	"drawWhiteFunctionModules ( dataAndQrcode , version )"	398:1:16455:16504	5616260	12	True				
ANR	5616482	CallExpression	"drawWhiteFunctionModules ( dataAndQrcode , version )"		5616260	0					
ANR	5616483	Callee	drawWhiteFunctionModules		5616260	0					
ANR	5616484	Identifier	drawWhiteFunctionModules		5616260	0					
ANR	5616485	ArgumentList	dataAndQrcode		5616260	1					
ANR	5616486	Argument	dataAndQrcode		5616260	0					
ANR	5616487	Identifier	dataAndQrcode		5616260	0					
ANR	5616488	Argument	version		5616260	1					
ANR	5616489	Identifier	version		5616260	0					
ANR	5616490	ExpressionStatement	"initializeFunctionModules ( version , tempBuffer )"	399:1:16507:16554	5616260	13	True				
ANR	5616491	CallExpression	"initializeFunctionModules ( version , tempBuffer )"		5616260	0					
ANR	5616492	Callee	initializeFunctionModules		5616260	0					
ANR	5616493	Identifier	initializeFunctionModules		5616260	0					
ANR	5616494	ArgumentList	version		5616260	1					
ANR	5616495	Argument	version		5616260	0					
ANR	5616496	Identifier	version		5616260	0					
ANR	5616497	Argument	tempBuffer		5616260	1					
ANR	5616498	Identifier	tempBuffer		5616260	0					
ANR	5616499	IfStatement	if ( mask == qrcodegen_Mask_AUTO )		5616260	14					
ANR	5616500	Condition	mask == qrcodegen_Mask_AUTO	402:5:16581:16607	5616260	0	True				
ANR	5616501	EqualityExpression	mask == qrcodegen_Mask_AUTO		5616260	0		==			
ANR	5616502	Identifier	mask		5616260	0					
ANR	5616503	Identifier	qrcodegen_Mask_AUTO		5616260	1					
ANR	5616504	CompoundStatement		43:2:1377:1382	5616260	1					
ANR	5616505	IdentifierDeclStatement	long minPenalty = LONG_MAX ;	403:2:16648:16674	5616260	0	True				
ANR	5616506	IdentifierDecl	minPenalty = LONG_MAX		5616260	0					
ANR	5616507	IdentifierDeclType	long		5616260	0					
ANR	5616508	Identifier	minPenalty		5616260	1					
ANR	5616509	AssignmentExpression	minPenalty = LONG_MAX		5616260	2		=			
ANR	5616510	Identifier	LONG_MAX		5616260	0					
ANR	5616511	Identifier	LONG_MAX		5616260	1					
ANR	5616512	IdentifierDeclStatement	int i ;	404:2:16678:16683	5616260	1	True				
ANR	5616513	IdentifierDecl	i		5616260	0					
ANR	5616514	IdentifierDeclType	int		5616260	0					
ANR	5616515	Identifier	i		5616260	1					
ANR	5616516	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		5616260	2					
ANR	5616517	ForInit	i = 0 ;	405:7:16692:16697	5616260	0	True				
ANR	5616518	AssignmentExpression	i = 0		5616260	0		=			
ANR	5616519	Identifier	i		5616260	0					
ANR	5616520	PrimaryExpression	0		5616260	1					
ANR	5616521	Condition	i < 8	405:14:16699:16703	5616260	1	True				
ANR	5616522	RelationalExpression	i < 8		5616260	0		<			
ANR	5616523	Identifier	i		5616260	0					
ANR	5616524	PrimaryExpression	8		5616260	1					
ANR	5616525	PostIncDecOperationExpression	i ++	405:21:16706:16708	5616260	2	True				
ANR	5616526	Identifier	i		5616260	0					
ANR	5616527	IncDec	++		5616260	1					
ANR	5616528	CompoundStatement		47:3:1547:1593	5616260	3					
ANR	5616529	ExpressionStatement	"drawFormatBits ( ecl , ( enum qrcodegen_Mask ) i , dataAndQrcode )"	406:3:16716:16776	5616260	0	True				
ANR	5616530	CallExpression	"drawFormatBits ( ecl , ( enum qrcodegen_Mask ) i , dataAndQrcode )"		5616260	0					
ANR	5616531	Callee	drawFormatBits		5616260	0					
ANR	5616532	Identifier	drawFormatBits		5616260	0					
ANR	5616533	ArgumentList	ecl		5616260	1					
ANR	5616534	Argument	ecl		5616260	0					
ANR	5616535	Identifier	ecl		5616260	0					
ANR	5616536	Argument	( enum qrcodegen_Mask ) i		5616260	1					
ANR	5616537	CastExpression	( enum qrcodegen_Mask ) i		5616260	0					
ANR	5616538	CastTarget	enum qrcodegen_Mask		5616260	0					
ANR	5616539	Identifier	i		5616260	1					
ANR	5616540	Argument	dataAndQrcode		5616260	2					
ANR	5616541	Identifier	dataAndQrcode		5616260	0					
ANR	5616542	ExpressionStatement	"applyMask ( tempBuffer , dataAndQrcode , ( enum qrcodegen_Mask ) i )"	407:3:16781:16843	5616260	1	True				
ANR	5616543	CallExpression	"applyMask ( tempBuffer , dataAndQrcode , ( enum qrcodegen_Mask ) i )"		5616260	0					
ANR	5616544	Callee	applyMask		5616260	0					
ANR	5616545	Identifier	applyMask		5616260	0					
ANR	5616546	ArgumentList	tempBuffer		5616260	1					
ANR	5616547	Argument	tempBuffer		5616260	0					
ANR	5616548	Identifier	tempBuffer		5616260	0					
ANR	5616549	Argument	dataAndQrcode		5616260	1					
ANR	5616550	Identifier	dataAndQrcode		5616260	0					
ANR	5616551	Argument	( enum qrcodegen_Mask ) i		5616260	2					
ANR	5616552	CastExpression	( enum qrcodegen_Mask ) i		5616260	0					
ANR	5616553	CastTarget	enum qrcodegen_Mask		5616260	0					
ANR	5616554	Identifier	i		5616260	1					
ANR	5616555	IdentifierDeclStatement	long penalty = getPenaltyScore ( dataAndQrcode ) ;	408:3:16848:16894	5616260	2	True				
ANR	5616556	IdentifierDecl	penalty = getPenaltyScore ( dataAndQrcode )		5616260	0					
ANR	5616557	IdentifierDeclType	long		5616260	0					
ANR	5616558	Identifier	penalty		5616260	1					
ANR	5616559	AssignmentExpression	penalty = getPenaltyScore ( dataAndQrcode )		5616260	2		=			
ANR	5616560	Identifier	penalty		5616260	0					
ANR	5616561	CallExpression	getPenaltyScore ( dataAndQrcode )		5616260	1					
ANR	5616562	Callee	getPenaltyScore		5616260	0					
ANR	5616563	Identifier	getPenaltyScore		5616260	0					
ANR	5616564	ArgumentList	dataAndQrcode		5616260	1					
ANR	5616565	Argument	dataAndQrcode		5616260	0					
ANR	5616566	Identifier	dataAndQrcode		5616260	0					
ANR	5616567	IfStatement	if ( penalty < minPenalty )		5616260	3					
ANR	5616568	Condition	penalty < minPenalty	409:7:16903:16922	5616260	0	True				
ANR	5616569	RelationalExpression	penalty < minPenalty		5616260	0		<			
ANR	5616570	Identifier	penalty		5616260	0					
ANR	5616571	Identifier	minPenalty		5616260	1					
ANR	5616572	CompoundStatement		48:29:1624:1624	5616260	1					
ANR	5616573	ExpressionStatement	mask = ( enum qrcodegen_Mask ) i	410:4:16931:16961	5616260	0	True				
ANR	5616574	AssignmentExpression	mask = ( enum qrcodegen_Mask ) i		5616260	0		=			
ANR	5616575	Identifier	mask		5616260	0					
ANR	5616576	CastExpression	( enum qrcodegen_Mask ) i		5616260	1					
ANR	5616577	CastTarget	enum qrcodegen_Mask		5616260	0					
ANR	5616578	Identifier	i		5616260	1					
ANR	5616579	ExpressionStatement	minPenalty = penalty	411:4:16967:16987	5616260	1	True				
ANR	5616580	AssignmentExpression	minPenalty = penalty		5616260	0		=			
ANR	5616581	Identifier	minPenalty		5616260	0					
ANR	5616582	Identifier	penalty		5616260	1					
ANR	5616583	ExpressionStatement	"applyMask ( tempBuffer , dataAndQrcode , ( enum qrcodegen_Mask ) i )"	413:3:16997:17059	5616260	4	True				
ANR	5616584	CallExpression	"applyMask ( tempBuffer , dataAndQrcode , ( enum qrcodegen_Mask ) i )"		5616260	0					
ANR	5616585	Callee	applyMask		5616260	0					
ANR	5616586	Identifier	applyMask		5616260	0					
ANR	5616587	ArgumentList	tempBuffer		5616260	1					
ANR	5616588	Argument	tempBuffer		5616260	0					
ANR	5616589	Identifier	tempBuffer		5616260	0					
ANR	5616590	Argument	dataAndQrcode		5616260	1					
ANR	5616591	Identifier	dataAndQrcode		5616260	0					
ANR	5616592	Argument	( enum qrcodegen_Mask ) i		5616260	2					
ANR	5616593	CastExpression	( enum qrcodegen_Mask ) i		5616260	0					
ANR	5616594	CastTarget	enum qrcodegen_Mask		5616260	0					
ANR	5616595	Identifier	i		5616260	1					
ANR	5616596	IfStatement	if ( mask < 0 || mask > 7 )		5616260	15					
ANR	5616597	Condition	mask < 0 || mask > 7	416:5:17103:17122	5616260	0	True				
ANR	5616598	OrExpression	mask < 0 || mask > 7		5616260	0		||			
ANR	5616599	RelationalExpression	mask < 0		5616260	0		<			
ANR	5616600	Identifier	mask		5616260	0					
ANR	5616601	PrimaryExpression	0		5616260	1					
ANR	5616602	RelationalExpression	mask > 7		5616260	1		>			
ANR	5616603	Identifier	mask		5616260	0					
ANR	5616604	PrimaryExpression	7		5616260	1					
ANR	5616605	CompoundStatement		55:27:1824:1824	5616260	1					
ANR	5616606	ReturnStatement	return ;	417:2:17129:17135	5616260	0	True				
ANR	5616607	ExpressionStatement	"drawFormatBits ( ecl , mask , dataAndQrcode )"	419:1:17141:17182	5616260	16	True				
ANR	5616608	CallExpression	"drawFormatBits ( ecl , mask , dataAndQrcode )"		5616260	0					
ANR	5616609	Callee	drawFormatBits		5616260	0					
ANR	5616610	Identifier	drawFormatBits		5616260	0					
ANR	5616611	ArgumentList	ecl		5616260	1					
ANR	5616612	Argument	ecl		5616260	0					
ANR	5616613	Identifier	ecl		5616260	0					
ANR	5616614	Argument	mask		5616260	1					
ANR	5616615	Identifier	mask		5616260	0					
ANR	5616616	Argument	dataAndQrcode		5616260	2					
ANR	5616617	Identifier	dataAndQrcode		5616260	0					
ANR	5616618	ExpressionStatement	"applyMask ( tempBuffer , dataAndQrcode , mask )"	420:1:17185:17228	5616260	17	True				
ANR	5616619	CallExpression	"applyMask ( tempBuffer , dataAndQrcode , mask )"		5616260	0					
ANR	5616620	Callee	applyMask		5616260	0					
ANR	5616621	Identifier	applyMask		5616260	0					
ANR	5616622	ArgumentList	tempBuffer		5616260	1					
ANR	5616623	Argument	tempBuffer		5616260	0					
ANR	5616624	Identifier	tempBuffer		5616260	0					
ANR	5616625	Argument	dataAndQrcode		5616260	1					
ANR	5616626	Identifier	dataAndQrcode		5616260	0					
ANR	5616627	Argument	mask		5616260	2					
ANR	5616628	Identifier	mask		5616260	0					
ANR	5616629	ReturnType	static void		5616260	1					
ANR	5616630	Identifier	encodeQrCodeTail		5616260	2					
ANR	5616631	ParameterList	"ut8 dataAndQrcode [ ] , int bitLen , ut8 tempBuffer [ ] , int version , enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , bool boostEcl"		5616260	3					
ANR	5616632	Parameter	ut8 dataAndQrcode [ ]	362:29:15171:15189	5616260	0	True				
ANR	5616633	ParameterType	ut8 [ ]		5616260	0					
ANR	5616634	Identifier	dataAndQrcode		5616260	1					
ANR	5616635	Parameter	int bitLen	362:50:15192:15201	5616260	1	True				
ANR	5616636	ParameterType	int		5616260	0					
ANR	5616637	Identifier	bitLen		5616260	1					
ANR	5616638	Parameter	ut8 tempBuffer [ ]	362:62:15204:15219	5616260	2	True				
ANR	5616639	ParameterType	ut8 [ ]		5616260	0					
ANR	5616640	Identifier	tempBuffer		5616260	1					
ANR	5616641	Parameter	int version	362:80:15222:15232	5616260	3	True				
ANR	5616642	ParameterType	int		5616260	0					
ANR	5616643	Identifier	version		5616260	1					
ANR	5616644	Parameter	enum qrcodegen_Ecc ecl	362:93:15235:15256	5616260	4	True				
ANR	5616645	ParameterType	enum qrcodegen_Ecc		5616260	0					
ANR	5616646	Identifier	ecl		5616260	1					
ANR	5616647	Parameter	enum qrcodegen_Mask mask	362:117:15259:15282	5616260	5	True				
ANR	5616648	ParameterType	enum qrcodegen_Mask		5616260	0					
ANR	5616649	Identifier	mask		5616260	1					
ANR	5616650	Parameter	bool boostEcl	362:143:15285:15297	5616260	6	True				
ANR	5616651	ParameterType	bool		5616260	0					
ANR	5616652	Identifier	boostEcl		5616260	1					
ANR	5616653	CFGEntryNode	ENTRY		5616260		True				
ANR	5616654	CFGExitNode	EXIT		5616260		True				
ANR	5616655	Symbol	getNumDataCodewords		5616260						
ANR	5616656	Symbol	qrcodegen_Ecc_HIGH		5616260						
ANR	5616657	Symbol	terminatorBits		5616260						
ANR	5616658	Symbol	penalty		5616260						
ANR	5616659	Symbol	minPenalty		5616260						
ANR	5616660	Symbol	qrcodegen_Ecc_MEDIUM		5616260						
ANR	5616661	Symbol	i		5616260						
ANR	5616662	Symbol	dataAndQrcode		5616260						
ANR	5616663	Symbol	qrcodegen_Mask_AUTO		5616260						
ANR	5616664	Symbol	version		5616260						
ANR	5616665	Symbol	& bitLen		5616260						
ANR	5616666	Symbol	ecl		5616260						
ANR	5616667	Symbol	bitLen		5616260						
ANR	5616668	Symbol	boostEcl		5616260						
ANR	5616669	Symbol	getNumRawDataModules		5616260						
ANR	5616670	Symbol	getPenaltyScore		5616260						
ANR	5616671	Symbol	drawCodewords		5616260						
ANR	5616672	Symbol	qrcodegen_Ecc_QUARTILE		5616260						
ANR	5616673	Symbol	tempBuffer		5616260						
ANR	5616674	Symbol	LONG_MAX		5616260						
ANR	5616675	Symbol	padByte		5616260						
ANR	5616676	Symbol	mask		5616260						
ANR	5616677	Symbol	dataCapacityBits		5616260						
ANR	5616678	Function	appendBitsToBuffer	425:0:17335:17645							
ANR	5616679	FunctionDef	"appendBitsToBuffer (unsigned int val , int numBits , ut8 buffer [ ] , int * bitLen)"		5616678	0					
ANR	5616680	CompoundStatement		425:89:17424:17645	5616678	0					
ANR	5616681	IfStatement	if ( numBits < 0 || numBits > 16 || ( ( unsigned long ) val >> numBits ) != 0 )		5616678	0					
ANR	5616682	Condition	numBits < 0 || numBits > 16 || ( ( unsigned long ) val >> numBits ) != 0	426:5:17431:17498	5616678	0	True				
ANR	5616683	OrExpression	numBits < 0 || numBits > 16 || ( ( unsigned long ) val >> numBits ) != 0		5616678	0		||			
ANR	5616684	RelationalExpression	numBits < 0		5616678	0		<			
ANR	5616685	Identifier	numBits		5616678	0					
ANR	5616686	PrimaryExpression	0		5616678	1					
ANR	5616687	OrExpression	numBits > 16 || ( ( unsigned long ) val >> numBits ) != 0		5616678	1		||			
ANR	5616688	RelationalExpression	numBits > 16		5616678	0		>			
ANR	5616689	Identifier	numBits		5616678	0					
ANR	5616690	PrimaryExpression	16		5616678	1					
ANR	5616691	EqualityExpression	( ( unsigned long ) val >> numBits ) != 0		5616678	1		!=			
ANR	5616692	ShiftExpression	( unsigned long ) val >> numBits		5616678	0		>>			
ANR	5616693	CastExpression	( unsigned long ) val		5616678	0					
ANR	5616694	CastTarget	unsigned long		5616678	0					
ANR	5616695	Identifier	val		5616678	1					
ANR	5616696	Identifier	numBits		5616678	1					
ANR	5616697	PrimaryExpression	0		5616678	1					
ANR	5616698	CompoundStatement		2:75:76:76	5616678	1					
ANR	5616699	ReturnStatement	return ;	427:2:17505:17511	5616678	0	True				
ANR	5616700	IdentifierDeclStatement	int i ;	429:1:17517:17522	5616678	1	True				
ANR	5616701	IdentifierDecl	i		5616678	0					
ANR	5616702	IdentifierDeclType	int		5616678	0					
ANR	5616703	Identifier	i		5616678	1					
ANR	5616704	ForStatement	"for ( i = numBits - 1 ; i >= 0 ; i -- , ( * bitLen ) ++ )"		5616678	2					
ANR	5616705	ForInit	i = numBits - 1 ;	430:6:17530:17545	5616678	0	True				
ANR	5616706	AssignmentExpression	i = numBits - 1		5616678	0		=			
ANR	5616707	Identifier	i		5616678	0					
ANR	5616708	AdditiveExpression	numBits - 1		5616678	1		-			
ANR	5616709	Identifier	numBits		5616678	0					
ANR	5616710	PrimaryExpression	1		5616678	1					
ANR	5616711	Condition	i >= 0	430:23:17547:17552	5616678	1	True				
ANR	5616712	RelationalExpression	i >= 0		5616678	0		>=			
ANR	5616713	Identifier	i		5616678	0					
ANR	5616714	PrimaryExpression	0		5616678	1					
ANR	5616715	Expression	"i -- , ( * bitLen ) ++"	430:31:17555:17570	5616678	2	True				
ANR	5616716	PostIncDecOperationExpression	i --		5616678	0					
ANR	5616717	Identifier	i		5616678	0					
ANR	5616718	IncDec	--		5616678	1					
ANR	5616719	PostIncDecOperationExpression	( * bitLen ) ++		5616678	1					
ANR	5616720	UnaryOperationExpression	* bitLen		5616678	0					
ANR	5616721	UnaryOperator	*		5616678	0					
ANR	5616722	Identifier	bitLen		5616678	1					
ANR	5616723	IncDec	++		5616678	1					
ANR	5616724	CompoundStatement		6:49:148:148	5616678	3					
ANR	5616725	ExpressionStatement	buffer [ * bitLen >> 3 ] |= ( ( val >> i ) & 1 ) << ( 7 - ( * bitLen & 7 ) )	431:2:17577:17640	5616678	0	True				
ANR	5616726	AssignmentExpression	buffer [ * bitLen >> 3 ] |= ( ( val >> i ) & 1 ) << ( 7 - ( * bitLen & 7 ) )		5616678	0		|=			
ANR	5616727	ArrayIndexing	buffer [ * bitLen >> 3 ]		5616678	0					
ANR	5616728	Identifier	buffer		5616678	0					
ANR	5616729	ShiftExpression	* bitLen >> 3		5616678	1		>>			
ANR	5616730	UnaryOperationExpression	* bitLen		5616678	0					
ANR	5616731	UnaryOperator	*		5616678	0					
ANR	5616732	Identifier	bitLen		5616678	1					
ANR	5616733	PrimaryExpression	3		5616678	1					
ANR	5616734	ShiftExpression	( ( val >> i ) & 1 ) << ( 7 - ( * bitLen & 7 ) )		5616678	1		<<			
ANR	5616735	BitAndExpression	( val >> i ) & 1		5616678	0		&			
ANR	5616736	ShiftExpression	val >> i		5616678	0		>>			
ANR	5616737	Identifier	val		5616678	0					
ANR	5616738	Identifier	i		5616678	1					
ANR	5616739	PrimaryExpression	1		5616678	1					
ANR	5616740	AdditiveExpression	7 - ( * bitLen & 7 )		5616678	1		-			
ANR	5616741	PrimaryExpression	7		5616678	0					
ANR	5616742	BitAndExpression	* bitLen & 7		5616678	1		&			
ANR	5616743	UnaryOperationExpression	* bitLen		5616678	0					
ANR	5616744	UnaryOperator	*		5616678	0					
ANR	5616745	Identifier	bitLen		5616678	1					
ANR	5616746	PrimaryExpression	7		5616678	1					
ANR	5616747	ReturnType	static void		5616678	1					
ANR	5616748	Identifier	appendBitsToBuffer		5616678	2					
ANR	5616749	ParameterList	"unsigned int val , int numBits , ut8 buffer [ ] , int * bitLen"		5616678	3					
ANR	5616750	Parameter	unsigned int val	425:31:17366:17381	5616678	0	True				
ANR	5616751	ParameterType	unsigned int		5616678	0					
ANR	5616752	Identifier	val		5616678	1					
ANR	5616753	Parameter	int numBits	425:49:17384:17394	5616678	1	True				
ANR	5616754	ParameterType	int		5616678	0					
ANR	5616755	Identifier	numBits		5616678	1					
ANR	5616756	Parameter	ut8 buffer [ ]	425:62:17397:17408	5616678	2	True				
ANR	5616757	ParameterType	ut8 [ ]		5616678	0					
ANR	5616758	Identifier	buffer		5616678	1					
ANR	5616759	Parameter	int * bitLen	425:76:17411:17421	5616678	3	True				
ANR	5616760	ParameterType	int *		5616678	0					
ANR	5616761	Identifier	bitLen		5616678	1					
ANR	5616762	CFGEntryNode	ENTRY		5616678		True				
ANR	5616763	CFGExitNode	EXIT		5616678		True				
ANR	5616764	Symbol	val		5616678						
ANR	5616765	Symbol	bitLen		5616678						
ANR	5616766	Symbol	* buffer		5616678						
ANR	5616767	Symbol	numBits		5616678						
ANR	5616768	Symbol	i		5616678						
ANR	5616769	Symbol	buffer		5616678						
ANR	5616770	Symbol	* bitLen		5616678						
ANR	5616771	Symbol	* * bitLen		5616678						
ANR	5616772	Function	appendErrorCorrection	443:0:18099:19779							
ANR	5616773	FunctionDef	"appendErrorCorrection (ut8 data [ ] , int version , enum qrcodegen_Ecc ecl , ut8 result [ ])"		5616772	0					
ANR	5616774	CompoundStatement		443:97:18196:19779	5616772	0					
ANR	5616775	IfStatement	if ( ( int ) ecl < qrcodegen_Ecc_LOW || ( int ) ecl > qrcodegen_Ecc_HIGH || version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX )		5616772	0					
ANR	5616776	Condition	( int ) ecl < qrcodegen_Ecc_LOW || ( int ) ecl > qrcodegen_Ecc_HIGH || version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX	445:5:18235:18367	5616772	0	True				
ANR	5616777	OrExpression	( int ) ecl < qrcodegen_Ecc_LOW || ( int ) ecl > qrcodegen_Ecc_HIGH || version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX		5616772	0		||			
ANR	5616778	RelationalExpression	( int ) ecl < qrcodegen_Ecc_LOW		5616772	0		<			
ANR	5616779	CastExpression	( int ) ecl		5616772	0					
ANR	5616780	CastTarget	int		5616772	0					
ANR	5616781	Identifier	ecl		5616772	1					
ANR	5616782	Identifier	qrcodegen_Ecc_LOW		5616772	1					
ANR	5616783	OrExpression	( int ) ecl > qrcodegen_Ecc_HIGH || version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX		5616772	1		||			
ANR	5616784	RelationalExpression	( int ) ecl > qrcodegen_Ecc_HIGH		5616772	0		>			
ANR	5616785	CastExpression	( int ) ecl		5616772	0					
ANR	5616786	CastTarget	int		5616772	0					
ANR	5616787	Identifier	ecl		5616772	1					
ANR	5616788	Identifier	qrcodegen_Ecc_HIGH		5616772	1					
ANR	5616789	OrExpression	version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX		5616772	1		||			
ANR	5616790	RelationalExpression	version < qrcodegen_VERSION_MIN		5616772	0		<			
ANR	5616791	Identifier	version		5616772	0					
ANR	5616792	Identifier	qrcodegen_VERSION_MIN		5616772	1					
ANR	5616793	RelationalExpression	version > qrcodegen_VERSION_MAX		5616772	1		>			
ANR	5616794	Identifier	version		5616772	0					
ANR	5616795	Identifier	qrcodegen_VERSION_MAX		5616772	1					
ANR	5616796	CompoundStatement		3:140:173:173	5616772	1					
ANR	5616797	ReturnStatement	return ;	446:2:18374:18380	5616772	0	True				
ANR	5616798	IdentifierDeclStatement	int numBlocks = NUM_ERROR_CORRECTION_BLOCKS [ ( int ) ecl ] [ version ] ;	448:1:18386:18449	5616772	1	True				
ANR	5616799	IdentifierDecl	numBlocks = NUM_ERROR_CORRECTION_BLOCKS [ ( int ) ecl ] [ version ]		5616772	0					
ANR	5616800	IdentifierDeclType	int		5616772	0					
ANR	5616801	Identifier	numBlocks		5616772	1					
ANR	5616802	AssignmentExpression	numBlocks = NUM_ERROR_CORRECTION_BLOCKS [ ( int ) ecl ] [ version ]		5616772	2		=			
ANR	5616803	Identifier	numBlocks		5616772	0					
ANR	5616804	ArrayIndexing	NUM_ERROR_CORRECTION_BLOCKS [ ( int ) ecl ] [ version ]		5616772	1					
ANR	5616805	ArrayIndexing	NUM_ERROR_CORRECTION_BLOCKS [ ( int ) ecl ]		5616772	0					
ANR	5616806	Identifier	NUM_ERROR_CORRECTION_BLOCKS		5616772	0					
ANR	5616807	CastExpression	( int ) ecl		5616772	1					
ANR	5616808	CastTarget	int		5616772	0					
ANR	5616809	Identifier	ecl		5616772	1					
ANR	5616810	Identifier	version		5616772	1					
ANR	5616811	IdentifierDeclStatement	int blockEccLen = ECC_CODEWORDS_PER_BLOCK [ ( int ) ecl ] [ version ] ;	449:1:18452:18513	5616772	2	True				
ANR	5616812	IdentifierDecl	blockEccLen = ECC_CODEWORDS_PER_BLOCK [ ( int ) ecl ] [ version ]		5616772	0					
ANR	5616813	IdentifierDeclType	int		5616772	0					
ANR	5616814	Identifier	blockEccLen		5616772	1					
ANR	5616815	AssignmentExpression	blockEccLen = ECC_CODEWORDS_PER_BLOCK [ ( int ) ecl ] [ version ]		5616772	2		=			
ANR	5616816	Identifier	blockEccLen		5616772	0					
ANR	5616817	ArrayIndexing	ECC_CODEWORDS_PER_BLOCK [ ( int ) ecl ] [ version ]		5616772	1					
ANR	5616818	ArrayIndexing	ECC_CODEWORDS_PER_BLOCK [ ( int ) ecl ]		5616772	0					
ANR	5616819	Identifier	ECC_CODEWORDS_PER_BLOCK		5616772	0					
ANR	5616820	CastExpression	( int ) ecl		5616772	1					
ANR	5616821	CastTarget	int		5616772	0					
ANR	5616822	Identifier	ecl		5616772	1					
ANR	5616823	Identifier	version		5616772	1					
ANR	5616824	IdentifierDeclStatement	int rawCodewords = getNumRawDataModules ( version ) / 8 ;	450:1:18516:18569	5616772	3	True				
ANR	5616825	IdentifierDecl	rawCodewords = getNumRawDataModules ( version ) / 8		5616772	0					
ANR	5616826	IdentifierDeclType	int		5616772	0					
ANR	5616827	Identifier	rawCodewords		5616772	1					
ANR	5616828	AssignmentExpression	rawCodewords = getNumRawDataModules ( version ) / 8		5616772	2		=			
ANR	5616829	Identifier	rawCodewords		5616772	0					
ANR	5616830	MultiplicativeExpression	getNumRawDataModules ( version ) / 8		5616772	1		/			
ANR	5616831	CallExpression	getNumRawDataModules ( version )		5616772	0					
ANR	5616832	Callee	getNumRawDataModules		5616772	0					
ANR	5616833	Identifier	getNumRawDataModules		5616772	0					
ANR	5616834	ArgumentList	version		5616772	1					
ANR	5616835	Argument	version		5616772	0					
ANR	5616836	Identifier	version		5616772	0					
ANR	5616837	PrimaryExpression	8		5616772	1					
ANR	5616838	IdentifierDeclStatement	int dataLen = rawCodewords - blockEccLen * numBlocks ;	451:1:18572:18624	5616772	4	True				
ANR	5616839	IdentifierDecl	dataLen = rawCodewords - blockEccLen * numBlocks		5616772	0					
ANR	5616840	IdentifierDeclType	int		5616772	0					
ANR	5616841	Identifier	dataLen		5616772	1					
ANR	5616842	AssignmentExpression	dataLen = rawCodewords - blockEccLen * numBlocks		5616772	2		=			
ANR	5616843	Identifier	dataLen		5616772	0					
ANR	5616844	AdditiveExpression	rawCodewords - blockEccLen * numBlocks		5616772	1		-			
ANR	5616845	Identifier	rawCodewords		5616772	0					
ANR	5616846	MultiplicativeExpression	blockEccLen * numBlocks		5616772	1		*			
ANR	5616847	Identifier	blockEccLen		5616772	0					
ANR	5616848	Identifier	numBlocks		5616772	1					
ANR	5616849	IdentifierDeclStatement	int numShortBlocks = numBlocks - rawCodewords % numBlocks ;	452:1:18627:18684	5616772	5	True				
ANR	5616850	IdentifierDecl	numShortBlocks = numBlocks - rawCodewords % numBlocks		5616772	0					
ANR	5616851	IdentifierDeclType	int		5616772	0					
ANR	5616852	Identifier	numShortBlocks		5616772	1					
ANR	5616853	AssignmentExpression	numShortBlocks = numBlocks - rawCodewords % numBlocks		5616772	2		=			
ANR	5616854	Identifier	numShortBlocks		5616772	0					
ANR	5616855	AdditiveExpression	numBlocks - rawCodewords % numBlocks		5616772	1		-			
ANR	5616856	Identifier	numBlocks		5616772	0					
ANR	5616857	MultiplicativeExpression	rawCodewords % numBlocks		5616772	1		%			
ANR	5616858	Identifier	rawCodewords		5616772	0					
ANR	5616859	Identifier	numBlocks		5616772	1					
ANR	5616860	IdentifierDeclStatement	int shortBlockDataLen = rawCodewords / numBlocks - blockEccLen ;	453:1:18687:18749	5616772	6	True				
ANR	5616861	IdentifierDecl	shortBlockDataLen = rawCodewords / numBlocks - blockEccLen		5616772	0					
ANR	5616862	IdentifierDeclType	int		5616772	0					
ANR	5616863	Identifier	shortBlockDataLen		5616772	1					
ANR	5616864	AssignmentExpression	shortBlockDataLen = rawCodewords / numBlocks - blockEccLen		5616772	2		=			
ANR	5616865	Identifier	shortBlockDataLen		5616772	0					
ANR	5616866	AdditiveExpression	rawCodewords / numBlocks - blockEccLen		5616772	1		-			
ANR	5616867	MultiplicativeExpression	rawCodewords / numBlocks		5616772	0		/			
ANR	5616868	Identifier	rawCodewords		5616772	0					
ANR	5616869	Identifier	numBlocks		5616772	1					
ANR	5616870	Identifier	blockEccLen		5616772	1					
ANR	5616871	IdentifierDeclStatement	ut8 generator [ 30 ] ;	456:1:18810:18827	5616772	7	True				
ANR	5616872	IdentifierDecl	generator [ 30 ]		5616772	0					
ANR	5616873	IdentifierDeclType	ut8 [ 30 ]		5616772	0					
ANR	5616874	Identifier	generator		5616772	1					
ANR	5616875	PrimaryExpression	30		5616772	2					
ANR	5616876	ExpressionStatement	"calcReedSolomonGenerator ( blockEccLen , generator )"	457:1:18830:18879	5616772	8	True				
ANR	5616877	CallExpression	"calcReedSolomonGenerator ( blockEccLen , generator )"		5616772	0					
ANR	5616878	Callee	calcReedSolomonGenerator		5616772	0					
ANR	5616879	Identifier	calcReedSolomonGenerator		5616772	0					
ANR	5616880	ArgumentList	blockEccLen		5616772	1					
ANR	5616881	Argument	blockEccLen		5616772	0					
ANR	5616882	Identifier	blockEccLen		5616772	0					
ANR	5616883	Argument	generator		5616772	1					
ANR	5616884	Identifier	generator		5616772	0					
ANR	5616885	IdentifierDeclStatement	"int i , j , k , l ;"	458:1:18882:18896	5616772	9	True				
ANR	5616886	IdentifierDecl	i		5616772	0					
ANR	5616887	IdentifierDeclType	int		5616772	0					
ANR	5616888	Identifier	i		5616772	1					
ANR	5616889	IdentifierDecl	j		5616772	1					
ANR	5616890	IdentifierDeclType	int		5616772	0					
ANR	5616891	Identifier	j		5616772	1					
ANR	5616892	IdentifierDecl	k		5616772	2					
ANR	5616893	IdentifierDeclType	int		5616772	0					
ANR	5616894	Identifier	k		5616772	1					
ANR	5616895	IdentifierDecl	l		5616772	3					
ANR	5616896	IdentifierDeclType	int		5616772	0					
ANR	5616897	Identifier	l		5616772	1					
ANR	5616898	ForStatement	"for ( i = 0 , j = dataLen , k = 0 ; i < numBlocks ; i ++ )"		5616772	10					
ANR	5616899	ForInit	"i = 0 , j = dataLen , k = 0 ;"	459:6:18904:18929	5616772	0	True				
ANR	5616900	Expression	"i = 0 , j = dataLen , k = 0"		5616772	0					
ANR	5616901	AssignmentExpression	i = 0		5616772	0		=			
ANR	5616902	Identifier	i		5616772	0					
ANR	5616903	PrimaryExpression	0		5616772	1					
ANR	5616904	Expression	"j = dataLen , k = 0"		5616772	1					
ANR	5616905	AssignmentExpression	j = dataLen		5616772	0		=			
ANR	5616906	Identifier	j		5616772	0					
ANR	5616907	Identifier	dataLen		5616772	1					
ANR	5616908	AssignmentExpression	k = 0		5616772	1		=			
ANR	5616909	Identifier	k		5616772	0					
ANR	5616910	PrimaryExpression	0		5616772	1					
ANR	5616911	Condition	i < numBlocks	459:33:18931:18943	5616772	1	True				
ANR	5616912	RelationalExpression	i < numBlocks		5616772	0		<			
ANR	5616913	Identifier	i		5616772	0					
ANR	5616914	Identifier	numBlocks		5616772	1					
ANR	5616915	PostIncDecOperationExpression	i ++	459:48:18946:18948	5616772	2	True				
ANR	5616916	Identifier	i		5616772	0					
ANR	5616917	IncDec	++		5616772	1					
ANR	5616918	CompoundStatement		18:2:758:790	5616772	3					
ANR	5616919	IdentifierDeclStatement	int blockLen = shortBlockDataLen ;	460:2:18955:18987	5616772	0	True				
ANR	5616920	IdentifierDecl	blockLen = shortBlockDataLen		5616772	0					
ANR	5616921	IdentifierDeclType	int		5616772	0					
ANR	5616922	Identifier	blockLen		5616772	1					
ANR	5616923	AssignmentExpression	blockLen = shortBlockDataLen		5616772	2		=			
ANR	5616924	Identifier	shortBlockDataLen		5616772	0					
ANR	5616925	Identifier	shortBlockDataLen		5616772	1					
ANR	5616926	IfStatement	if ( i >= numShortBlocks )		5616772	1					
ANR	5616927	Condition	i >= numShortBlocks	461:6:18995:19013	5616772	0	True				
ANR	5616928	RelationalExpression	i >= numShortBlocks		5616772	0		>=			
ANR	5616929	Identifier	i		5616772	0					
ANR	5616930	Identifier	numShortBlocks		5616772	1					
ANR	5616931	CompoundStatement		19:27:819:819	5616772	1					
ANR	5616932	ExpressionStatement	blockLen ++	462:3:19021:19031	5616772	0	True				
ANR	5616933	PostIncDecOperationExpression	blockLen ++		5616772	0					
ANR	5616934	Identifier	blockLen		5616772	0					
ANR	5616935	IncDec	++		5616772	1					
ANR	5616936	ExpressionStatement	"calcReedSolomonRemainder ( & data [ k ] , blockLen , generator , blockEccLen , & data [ j ] )"	464:2:19039:19118	5616772	2	True				
ANR	5616937	CallExpression	"calcReedSolomonRemainder ( & data [ k ] , blockLen , generator , blockEccLen , & data [ j ] )"		5616772	0					
ANR	5616938	Callee	calcReedSolomonRemainder		5616772	0					
ANR	5616939	Identifier	calcReedSolomonRemainder		5616772	0					
ANR	5616940	ArgumentList	& data [ k ]		5616772	1					
ANR	5616941	Argument	& data [ k ]		5616772	0					
ANR	5616942	UnaryOperationExpression	& data [ k ]		5616772	0					
ANR	5616943	UnaryOperator	&		5616772	0					
ANR	5616944	ArrayIndexing	data [ k ]		5616772	1					
ANR	5616945	Identifier	data		5616772	0					
ANR	5616946	Identifier	k		5616772	1					
ANR	5616947	Argument	blockLen		5616772	1					
ANR	5616948	Identifier	blockLen		5616772	0					
ANR	5616949	Argument	generator		5616772	2					
ANR	5616950	Identifier	generator		5616772	0					
ANR	5616951	Argument	blockEccLen		5616772	3					
ANR	5616952	Identifier	blockEccLen		5616772	0					
ANR	5616953	Argument	& data [ j ]		5616772	4					
ANR	5616954	UnaryOperationExpression	& data [ j ]		5616772	0					
ANR	5616955	UnaryOperator	&		5616772	0					
ANR	5616956	ArrayIndexing	data [ j ]		5616772	1					
ANR	5616957	Identifier	data		5616772	0					
ANR	5616958	Identifier	j		5616772	1					
ANR	5616959	ExpressionStatement	j += blockEccLen	465:2:19122:19138	5616772	3	True				
ANR	5616960	AssignmentExpression	j += blockEccLen		5616772	0		+=			
ANR	5616961	Identifier	j		5616772	0					
ANR	5616962	Identifier	blockEccLen		5616772	1					
ANR	5616963	ExpressionStatement	k += blockLen	466:2:19142:19155	5616772	4	True				
ANR	5616964	AssignmentExpression	k += blockLen		5616772	0		+=			
ANR	5616965	Identifier	k		5616772	0					
ANR	5616966	Identifier	blockLen		5616772	1					
ANR	5616967	ForStatement	"for ( i = 0 , k = 0 ; i < numBlocks ; i ++ )"		5616772	11					
ANR	5616968	ForInit	"i = 0 , k = 0 ;"	470:6:19250:19262	5616772	0	True				
ANR	5616969	Expression	"i = 0 , k = 0"		5616772	0					
ANR	5616970	AssignmentExpression	i = 0		5616772	0		=			
ANR	5616971	Identifier	i		5616772	0					
ANR	5616972	PrimaryExpression	0		5616772	1					
ANR	5616973	AssignmentExpression	k = 0		5616772	1		=			
ANR	5616974	Identifier	k		5616772	0					
ANR	5616975	PrimaryExpression	0		5616772	1					
ANR	5616976	Condition	i < numBlocks	470:20:19264:19276	5616772	1	True				
ANR	5616977	RelationalExpression	i < numBlocks		5616772	0		<			
ANR	5616978	Identifier	i		5616772	0					
ANR	5616979	Identifier	numBlocks		5616772	1					
ANR	5616980	PostIncDecOperationExpression	i ++	470:35:19279:19281	5616772	2	True				
ANR	5616981	Identifier	i		5616772	0					
ANR	5616982	IncDec	++		5616772	1					
ANR	5616983	CompoundStatement		28:40:1087:1087	5616772	3					
ANR	5616984	ForStatement	"for ( j = 0 , l = i ; j < shortBlockDataLen ; j ++ , k ++ , l += numBlocks )"		5616772	0					
ANR	5616985	ForInit	"j = 0 , l = i ;"	471:7:19293:19305	5616772	0	True				
ANR	5616986	Expression	"j = 0 , l = i"		5616772	0					
ANR	5616987	AssignmentExpression	j = 0		5616772	0		=			
ANR	5616988	Identifier	j		5616772	0					
ANR	5616989	PrimaryExpression	0		5616772	1					
ANR	5616990	AssignmentExpression	l = i		5616772	1		=			
ANR	5616991	Identifier	l		5616772	0					
ANR	5616992	Identifier	i		5616772	1					
ANR	5616993	Condition	j < shortBlockDataLen	471:21:19307:19327	5616772	1	True				
ANR	5616994	RelationalExpression	j < shortBlockDataLen		5616772	0		<			
ANR	5616995	Identifier	j		5616772	0					
ANR	5616996	Identifier	shortBlockDataLen		5616772	1					
ANR	5616997	Expression	"j ++ , k ++ , l += numBlocks"	471:44:19330:19353	5616772	2	True				
ANR	5616998	PostIncDecOperationExpression	j ++		5616772	0					
ANR	5616999	Identifier	j		5616772	0					
ANR	5617000	IncDec	++		5616772	1					
ANR	5617001	Expression	"k ++ , l += numBlocks"		5616772	1					
ANR	5617002	PostIncDecOperationExpression	k ++		5616772	0					
ANR	5617003	Identifier	k		5616772	0					
ANR	5617004	IncDec	++		5616772	1					
ANR	5617005	AssignmentExpression	l += numBlocks		5616772	1		+=			
ANR	5617006	Identifier	l		5616772	0					
ANR	5617007	Identifier	numBlocks		5616772	1					
ANR	5617008	CompoundStatement		29:70:1159:1159	5616772	3					
ANR	5617009	ExpressionStatement	result [ l ] = data [ k ]	472:3:19361:19380	5616772	0	True				
ANR	5617010	AssignmentExpression	result [ l ] = data [ k ]		5616772	0		=			
ANR	5617011	ArrayIndexing	result [ l ]		5616772	0					
ANR	5617012	Identifier	result		5616772	0					
ANR	5617013	Identifier	l		5616772	1					
ANR	5617014	ArrayIndexing	data [ k ]		5616772	1					
ANR	5617015	Identifier	data		5616772	0					
ANR	5617016	Identifier	k		5616772	1					
ANR	5617017	IfStatement	if ( i >= numShortBlocks )		5616772	1					
ANR	5617018	Condition	i >= numShortBlocks	474:6:19392:19410	5616772	0	True				
ANR	5617019	RelationalExpression	i >= numShortBlocks		5616772	0		>=			
ANR	5617020	Identifier	i		5616772	0					
ANR	5617021	Identifier	numShortBlocks		5616772	1					
ANR	5617022	CompoundStatement		32:27:1216:1216	5616772	1					
ANR	5617023	ExpressionStatement	k ++	475:3:19418:19421	5616772	0	True				
ANR	5617024	PostIncDecOperationExpression	k ++		5616772	0					
ANR	5617025	Identifier	k		5616772	0					
ANR	5617026	IncDec	++		5616772	1					
ANR	5617027	ForStatement	"for ( i = numShortBlocks , k = ( numShortBlocks + 1 ) * shortBlockDataLen , l = numBlocks * shortBlockDataLen ; i < numBlocks ; i ++ , k += shortBlockDataLen + 1 , l ++ )"		5616772	12					
ANR	5617028	ForInit	"i = numShortBlocks , k = ( numShortBlocks + 1 ) * shortBlockDataLen , l = numBlocks * shortBlockDataLen ;"	478:6:19436:19535	5616772	0	True				
ANR	5617029	Expression	"i = numShortBlocks , k = ( numShortBlocks + 1 ) * shortBlockDataLen , l = numBlocks * shortBlockDataLen"		5616772	0					
ANR	5617030	AssignmentExpression	i = numShortBlocks		5616772	0		=			
ANR	5617031	Identifier	i		5616772	0					
ANR	5617032	Identifier	numShortBlocks		5616772	1					
ANR	5617033	Expression	"k = ( numShortBlocks + 1 ) * shortBlockDataLen , l = numBlocks * shortBlockDataLen"		5616772	1					
ANR	5617034	AssignmentExpression	k = ( numShortBlocks + 1 ) * shortBlockDataLen		5616772	0		=			
ANR	5617035	Identifier	k		5616772	0					
ANR	5617036	MultiplicativeExpression	( numShortBlocks + 1 ) * shortBlockDataLen		5616772	1		*			
ANR	5617037	AdditiveExpression	numShortBlocks + 1		5616772	0		+			
ANR	5617038	Identifier	numShortBlocks		5616772	0					
ANR	5617039	PrimaryExpression	1		5616772	1					
ANR	5617040	Identifier	shortBlockDataLen		5616772	1					
ANR	5617041	AssignmentExpression	l = numBlocks * shortBlockDataLen		5616772	1		=			
ANR	5617042	Identifier	l		5616772	0					
ANR	5617043	MultiplicativeExpression	numBlocks * shortBlockDataLen		5616772	1		*			
ANR	5617044	Identifier	numBlocks		5616772	0					
ANR	5617045	Identifier	shortBlockDataLen		5616772	1					
ANR	5617046	Condition	i < numBlocks	479:6:19543:19555	5616772	1	True				
ANR	5617047	RelationalExpression	i < numBlocks		5616772	0		<			
ANR	5617048	Identifier	i		5616772	0					
ANR	5617049	Identifier	numBlocks		5616772	1					
ANR	5617050	Expression	"i ++ , k += shortBlockDataLen + 1 , l ++"	479:21:19558:19593	5616772	2	True				
ANR	5617051	PostIncDecOperationExpression	i ++		5616772	0					
ANR	5617052	Identifier	i		5616772	0					
ANR	5617053	IncDec	++		5616772	1					
ANR	5617054	Expression	"k += shortBlockDataLen + 1 , l ++"		5616772	1					
ANR	5617055	AssignmentExpression	k += shortBlockDataLen + 1		5616772	0		+=			
ANR	5617056	Identifier	k		5616772	0					
ANR	5617057	AdditiveExpression	shortBlockDataLen + 1		5616772	1		+			
ANR	5617058	Identifier	shortBlockDataLen		5616772	0					
ANR	5617059	PrimaryExpression	1		5616772	1					
ANR	5617060	PostIncDecOperationExpression	l ++		5616772	1					
ANR	5617061	Identifier	l		5616772	0					
ANR	5617062	IncDec	++		5616772	1					
ANR	5617063	CompoundStatement		37:59:1399:1399	5616772	3					
ANR	5617064	ExpressionStatement	result [ l ] = data [ k ]	480:2:19600:19619	5616772	0	True				
ANR	5617065	AssignmentExpression	result [ l ] = data [ k ]		5616772	0		=			
ANR	5617066	ArrayIndexing	result [ l ]		5616772	0					
ANR	5617067	Identifier	result		5616772	0					
ANR	5617068	Identifier	l		5616772	1					
ANR	5617069	ArrayIndexing	data [ k ]		5616772	1					
ANR	5617070	Identifier	data		5616772	0					
ANR	5617071	Identifier	k		5616772	1					
ANR	5617072	ForStatement	"for ( i = 0 , k = dataLen ; i < numBlocks ; i ++ )"		5616772	13					
ANR	5617073	ForInit	"i = 0 , k = dataLen ;"	482:6:19630:19648	5616772	0	True				
ANR	5617074	Expression	"i = 0 , k = dataLen"		5616772	0					
ANR	5617075	AssignmentExpression	i = 0		5616772	0		=			
ANR	5617076	Identifier	i		5616772	0					
ANR	5617077	PrimaryExpression	0		5616772	1					
ANR	5617078	AssignmentExpression	k = dataLen		5616772	1		=			
ANR	5617079	Identifier	k		5616772	0					
ANR	5617080	Identifier	dataLen		5616772	1					
ANR	5617081	Condition	i < numBlocks	482:26:19650:19662	5616772	1	True				
ANR	5617082	RelationalExpression	i < numBlocks		5616772	0		<			
ANR	5617083	Identifier	i		5616772	0					
ANR	5617084	Identifier	numBlocks		5616772	1					
ANR	5617085	PostIncDecOperationExpression	i ++	482:41:19665:19667	5616772	2	True				
ANR	5617086	Identifier	i		5616772	0					
ANR	5617087	IncDec	++		5616772	1					
ANR	5617088	CompoundStatement		40:46:1473:1473	5616772	3					
ANR	5617089	ForStatement	"for ( j = 0 , l = dataLen + i ; j < blockEccLen ; j ++ , k ++ , l += numBlocks )"		5616772	0					
ANR	5617090	ForInit	"j = 0 , l = dataLen + i ;"	483:7:19679:19701	5616772	0	True				
ANR	5617091	Expression	"j = 0 , l = dataLen + i"		5616772	0					
ANR	5617092	AssignmentExpression	j = 0		5616772	0		=			
ANR	5617093	Identifier	j		5616772	0					
ANR	5617094	PrimaryExpression	0		5616772	1					
ANR	5617095	AssignmentExpression	l = dataLen + i		5616772	1		=			
ANR	5617096	Identifier	l		5616772	0					
ANR	5617097	AdditiveExpression	dataLen + i		5616772	1		+			
ANR	5617098	Identifier	dataLen		5616772	0					
ANR	5617099	Identifier	i		5616772	1					
ANR	5617100	Condition	j < blockEccLen	483:31:19703:19717	5616772	1	True				
ANR	5617101	RelationalExpression	j < blockEccLen		5616772	0		<			
ANR	5617102	Identifier	j		5616772	0					
ANR	5617103	Identifier	blockEccLen		5616772	1					
ANR	5617104	Expression	"j ++ , k ++ , l += numBlocks"	483:48:19720:19743	5616772	2	True				
ANR	5617105	PostIncDecOperationExpression	j ++		5616772	0					
ANR	5617106	Identifier	j		5616772	0					
ANR	5617107	IncDec	++		5616772	1					
ANR	5617108	Expression	"k ++ , l += numBlocks"		5616772	1					
ANR	5617109	PostIncDecOperationExpression	k ++		5616772	0					
ANR	5617110	Identifier	k		5616772	0					
ANR	5617111	IncDec	++		5616772	1					
ANR	5617112	AssignmentExpression	l += numBlocks		5616772	1		+=			
ANR	5617113	Identifier	l		5616772	0					
ANR	5617114	Identifier	numBlocks		5616772	1					
ANR	5617115	CompoundStatement		41:74:1549:1549	5616772	3					
ANR	5617116	ExpressionStatement	result [ l ] = data [ k ]	484:3:19751:19770	5616772	0	True				
ANR	5617117	AssignmentExpression	result [ l ] = data [ k ]		5616772	0		=			
ANR	5617118	ArrayIndexing	result [ l ]		5616772	0					
ANR	5617119	Identifier	result		5616772	0					
ANR	5617120	Identifier	l		5616772	1					
ANR	5617121	ArrayIndexing	data [ k ]		5616772	1					
ANR	5617122	Identifier	data		5616772	0					
ANR	5617123	Identifier	k		5616772	1					
ANR	5617124	ReturnType	static void		5616772	1					
ANR	5617125	Identifier	appendErrorCorrection		5616772	2					
ANR	5617126	ParameterList	"ut8 data [ ] , int version , enum qrcodegen_Ecc ecl , ut8 result [ ]"		5616772	3					
ANR	5617127	Parameter	ut8 data [ ]	443:34:18133:18142	5616772	0	True				
ANR	5617128	ParameterType	ut8 [ ]		5616772	0					
ANR	5617129	Identifier	data		5616772	1					
ANR	5617130	Parameter	int version	443:46:18145:18155	5616772	1	True				
ANR	5617131	ParameterType	int		5616772	0					
ANR	5617132	Identifier	version		5616772	1					
ANR	5617133	Parameter	enum qrcodegen_Ecc ecl	443:59:18158:18179	5616772	2	True				
ANR	5617134	ParameterType	enum qrcodegen_Ecc		5616772	0					
ANR	5617135	Identifier	ecl		5616772	1					
ANR	5617136	Parameter	ut8 result [ ]	443:83:18182:18193	5616772	3	True				
ANR	5617137	ParameterType	ut8 [ ]		5616772	0					
ANR	5617138	Identifier	result		5616772	1					
ANR	5617139	CFGEntryNode	ENTRY		5616772		True				
ANR	5617140	CFGExitNode	EXIT		5616772		True				
ANR	5617141	Symbol	qrcodegen_Ecc_HIGH		5616772						
ANR	5617142	Symbol	data		5616772						
ANR	5617143	Symbol	* ecl		5616772						
ANR	5617144	Symbol	ECC_CODEWORDS_PER_BLOCK		5616772						
ANR	5617145	Symbol	generator		5616772						
ANR	5617146	Symbol	dataLen		5616772						
ANR	5617147	Symbol	ecl		5616772						
ANR	5617148	Symbol	result		5616772						
ANR	5617149	Symbol	NUM_ERROR_CORRECTION_BLOCKS		5616772						
ANR	5617150	Symbol	shortBlockDataLen		5616772						
ANR	5617151	Symbol	* result		5616772						
ANR	5617152	Symbol	qrcodegen_Ecc_LOW		5616772						
ANR	5617153	Symbol	qrcodegen_VERSION_MAX		5616772						
ANR	5617154	Symbol	blockEccLen		5616772						
ANR	5617155	Symbol	* NUM_ERROR_CORRECTION_BLOCKS		5616772						
ANR	5617156	Symbol	* * ecl		5616772						
ANR	5617157	Symbol	numShortBlocks		5616772						
ANR	5617158	Symbol	rawCodewords		5616772						
ANR	5617159	Symbol	i		5616772						
ANR	5617160	Symbol	j		5616772						
ANR	5617161	Symbol	blockLen		5616772						
ANR	5617162	Symbol	k		5616772						
ANR	5617163	Symbol	* * NUM_ERROR_CORRECTION_BLOCKS		5616772						
ANR	5617164	Symbol	l		5616772						
ANR	5617165	Symbol	version		5616772						
ANR	5617166	Symbol	getNumRawDataModules		5616772						
ANR	5617167	Symbol	numBlocks		5616772						
ANR	5617168	Symbol	qrcodegen_VERSION_MIN		5616772						
ANR	5617169	Symbol	* k		5616772						
ANR	5617170	Symbol	* version		5616772						
ANR	5617171	Symbol	* l		5616772						
ANR	5617172	Symbol	* ECC_CODEWORDS_PER_BLOCK		5616772						
ANR	5617173	Symbol	* data		5616772						
ANR	5617174	Symbol	* * ECC_CODEWORDS_PER_BLOCK		5616772						
ANR	5617175	Function	getNumDataCodewords	492:0:19967:20288							
ANR	5617176	FunctionDef	"getNumDataCodewords (int version , enum qrcodegen_Ecc ecl)"		5617175	0					
ANR	5617177	CompoundStatement		492:68:20035:20288	5617175	0					
ANR	5617178	IdentifierDeclStatement	"int v = version , e = ( int ) ecl ;"	493:1:20038:20068	5617175	0	True				
ANR	5617179	IdentifierDecl	v = version		5617175	0					
ANR	5617180	IdentifierDeclType	int		5617175	0					
ANR	5617181	Identifier	v		5617175	1					
ANR	5617182	AssignmentExpression	v = version		5617175	2		=			
ANR	5617183	Identifier	version		5617175	0					
ANR	5617184	Identifier	version		5617175	1					
ANR	5617185	IdentifierDecl	e = ( int ) ecl		5617175	1					
ANR	5617186	IdentifierDeclType	int		5617175	0					
ANR	5617187	Identifier	e		5617175	1					
ANR	5617188	AssignmentExpression	e = ( int ) ecl		5617175	2		=			
ANR	5617189	Identifier	e		5617175	0					
ANR	5617190	CastExpression	( int ) ecl		5617175	1					
ANR	5617191	CastTarget	int		5617175	0					
ANR	5617192	Identifier	ecl		5617175	1					
ANR	5617193	ReturnStatement	return getNumRawDataModules ( v ) / 8 - ECC_CODEWORDS_PER_BLOCK [ e ] [ v ] * NUM_ERROR_CORRECTION_BLOCKS [ e ] [ v ] ;	495:1:20183:20286	5617175	1	True				
ANR	5617194	AdditiveExpression	getNumRawDataModules ( v ) / 8 - ECC_CODEWORDS_PER_BLOCK [ e ] [ v ] * NUM_ERROR_CORRECTION_BLOCKS [ e ] [ v ]		5617175	0		-			
ANR	5617195	MultiplicativeExpression	getNumRawDataModules ( v ) / 8		5617175	0		/			
ANR	5617196	CallExpression	getNumRawDataModules ( v )		5617175	0					
ANR	5617197	Callee	getNumRawDataModules		5617175	0					
ANR	5617198	Identifier	getNumRawDataModules		5617175	0					
ANR	5617199	ArgumentList	v		5617175	1					
ANR	5617200	Argument	v		5617175	0					
ANR	5617201	Identifier	v		5617175	0					
ANR	5617202	PrimaryExpression	8		5617175	1					
ANR	5617203	MultiplicativeExpression	ECC_CODEWORDS_PER_BLOCK [ e ] [ v ] * NUM_ERROR_CORRECTION_BLOCKS [ e ] [ v ]		5617175	1		*			
ANR	5617204	ArrayIndexing	ECC_CODEWORDS_PER_BLOCK [ e ] [ v ]		5617175	0					
ANR	5617205	ArrayIndexing	ECC_CODEWORDS_PER_BLOCK [ e ]		5617175	0					
ANR	5617206	Identifier	ECC_CODEWORDS_PER_BLOCK		5617175	0					
ANR	5617207	Identifier	e		5617175	1					
ANR	5617208	Identifier	v		5617175	1					
ANR	5617209	ArrayIndexing	NUM_ERROR_CORRECTION_BLOCKS [ e ] [ v ]		5617175	1					
ANR	5617210	ArrayIndexing	NUM_ERROR_CORRECTION_BLOCKS [ e ]		5617175	0					
ANR	5617211	Identifier	NUM_ERROR_CORRECTION_BLOCKS		5617175	0					
ANR	5617212	Identifier	e		5617175	1					
ANR	5617213	Identifier	v		5617175	1					
ANR	5617214	ReturnType	static int		5617175	1					
ANR	5617215	Identifier	getNumDataCodewords		5617175	2					
ANR	5617216	ParameterList	"int version , enum qrcodegen_Ecc ecl"		5617175	3					
ANR	5617217	Parameter	int version	492:31:19998:20008	5617175	0	True				
ANR	5617218	ParameterType	int		5617175	0					
ANR	5617219	Identifier	version		5617175	1					
ANR	5617220	Parameter	enum qrcodegen_Ecc ecl	492:44:20011:20032	5617175	1	True				
ANR	5617221	ParameterType	enum qrcodegen_Ecc		5617175	0					
ANR	5617222	Identifier	ecl		5617175	1					
ANR	5617223	CFGEntryNode	ENTRY		5617175		True				
ANR	5617224	CFGExitNode	EXIT		5617175		True				
ANR	5617225	Symbol	* v		5617175						
ANR	5617226	Symbol	* NUM_ERROR_CORRECTION_BLOCKS		5617175						
ANR	5617227	Symbol	e		5617175						
ANR	5617228	Symbol	* * e		5617175						
ANR	5617229	Symbol	ECC_CODEWORDS_PER_BLOCK		5617175						
ANR	5617230	Symbol	* * NUM_ERROR_CORRECTION_BLOCKS		5617175						
ANR	5617231	Symbol	version		5617175						
ANR	5617232	Symbol	ecl		5617175						
ANR	5617233	Symbol	* e		5617175						
ANR	5617234	Symbol	getNumRawDataModules		5617175						
ANR	5617235	Symbol	NUM_ERROR_CORRECTION_BLOCKS		5617175						
ANR	5617236	Symbol	v		5617175						
ANR	5617237	Symbol	* ECC_CODEWORDS_PER_BLOCK		5617175						
ANR	5617238	Symbol	* * ECC_CODEWORDS_PER_BLOCK		5617175						
ANR	5617239	Function	getNumRawDataModules	502:0:20596:20987							
ANR	5617240	FunctionDef	getNumRawDataModules (int version)		5617239	0					
ANR	5617241	CompoundStatement		502:45:20641:20987	5617239	0					
ANR	5617242	IfStatement	if ( version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX )		5617239	0					
ANR	5617243	Condition	version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX	503:5:20648:20713	5617239	0	True				
ANR	5617244	OrExpression	version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX		5617239	0		||			
ANR	5617245	RelationalExpression	version < qrcodegen_VERSION_MIN		5617239	0		<			
ANR	5617246	Identifier	version		5617239	0					
ANR	5617247	Identifier	qrcodegen_VERSION_MIN		5617239	1					
ANR	5617248	RelationalExpression	version > qrcodegen_VERSION_MAX		5617239	1		>			
ANR	5617249	Identifier	version		5617239	0					
ANR	5617250	Identifier	qrcodegen_VERSION_MAX		5617239	1					
ANR	5617251	CompoundStatement		2:73:74:74	5617239	1					
ANR	5617252	ReturnStatement	return 0 ;	504:2:20720:20728	5617239	0	True				
ANR	5617253	PrimaryExpression	0		5617239	0					
ANR	5617254	IdentifierDeclStatement	int result = ( 16 * version + 128 ) * version + 64 ;	506:1:20734:20782	5617239	1	True				
ANR	5617255	IdentifierDecl	result = ( 16 * version + 128 ) * version + 64		5617239	0					
ANR	5617256	IdentifierDeclType	int		5617239	0					
ANR	5617257	Identifier	result		5617239	1					
ANR	5617258	AssignmentExpression	result = ( 16 * version + 128 ) * version + 64		5617239	2		=			
ANR	5617259	Identifier	result		5617239	0					
ANR	5617260	AdditiveExpression	( 16 * version + 128 ) * version + 64		5617239	1		+			
ANR	5617261	MultiplicativeExpression	( 16 * version + 128 ) * version		5617239	0		*			
ANR	5617262	AdditiveExpression	16 * version + 128		5617239	0		+			
ANR	5617263	MultiplicativeExpression	16 * version		5617239	0		*			
ANR	5617264	PrimaryExpression	16		5617239	0					
ANR	5617265	Identifier	version		5617239	1					
ANR	5617266	PrimaryExpression	128		5617239	1					
ANR	5617267	Identifier	version		5617239	1					
ANR	5617268	PrimaryExpression	64		5617239	1					
ANR	5617269	IfStatement	if ( version >= 2 )		5617239	2					
ANR	5617270	Condition	version >= 2	507:5:20789:20800	5617239	0	True				
ANR	5617271	RelationalExpression	version >= 2		5617239	0		>=			
ANR	5617272	Identifier	version		5617239	0					
ANR	5617273	PrimaryExpression	2		5617239	1					
ANR	5617274	CompoundStatement		7:2:165:195	5617239	1					
ANR	5617275	IdentifierDeclStatement	int numAlign = version / 7 + 2 ;	508:2:20807:20837	5617239	0	True				
ANR	5617276	IdentifierDecl	numAlign = version / 7 + 2		5617239	0					
ANR	5617277	IdentifierDeclType	int		5617239	0					
ANR	5617278	Identifier	numAlign		5617239	1					
ANR	5617279	AssignmentExpression	numAlign = version / 7 + 2		5617239	2		=			
ANR	5617280	Identifier	numAlign		5617239	0					
ANR	5617281	AdditiveExpression	version / 7 + 2		5617239	1		+			
ANR	5617282	MultiplicativeExpression	version / 7		5617239	0		/			
ANR	5617283	Identifier	version		5617239	0					
ANR	5617284	PrimaryExpression	7		5617239	1					
ANR	5617285	PrimaryExpression	2		5617239	1					
ANR	5617286	ExpressionStatement	result -= ( 25 * numAlign - 10 ) * numAlign - 55	509:2:20841:20887	5617239	1	True				
ANR	5617287	AssignmentExpression	result -= ( 25 * numAlign - 10 ) * numAlign - 55		5617239	0		-=			
ANR	5617288	Identifier	result		5617239	0					
ANR	5617289	AdditiveExpression	( 25 * numAlign - 10 ) * numAlign - 55		5617239	1		-			
ANR	5617290	MultiplicativeExpression	( 25 * numAlign - 10 ) * numAlign		5617239	0		*			
ANR	5617291	AdditiveExpression	25 * numAlign - 10		5617239	0		-			
ANR	5617292	MultiplicativeExpression	25 * numAlign		5617239	0		*			
ANR	5617293	PrimaryExpression	25		5617239	0					
ANR	5617294	Identifier	numAlign		5617239	1					
ANR	5617295	PrimaryExpression	10		5617239	1					
ANR	5617296	Identifier	numAlign		5617239	1					
ANR	5617297	PrimaryExpression	55		5617239	1					
ANR	5617298	IfStatement	if ( version >= 7 )		5617239	2					
ANR	5617299	Condition	version >= 7	510:6:20895:20906	5617239	0	True				
ANR	5617300	RelationalExpression	version >= 7		5617239	0		>=			
ANR	5617301	Identifier	version		5617239	0					
ANR	5617302	PrimaryExpression	7		5617239	1					
ANR	5617303	CompoundStatement		9:20:267:267	5617239	1					
ANR	5617304	ExpressionStatement	result -= 18 * 2	511:3:20914:20930	5617239	0	True				
ANR	5617305	AssignmentExpression	result -= 18 * 2		5617239	0		-=			
ANR	5617306	Identifier	result		5617239	0					
ANR	5617307	MultiplicativeExpression	18 * 2		5617239	1		*			
ANR	5617308	PrimaryExpression	18		5617239	0					
ANR	5617309	PrimaryExpression	2		5617239	1					
ANR	5617310	ReturnStatement	return result ;	514:1:20972:20985	5617239	3	True				
ANR	5617311	Identifier	result		5617239	0					
ANR	5617312	ReturnType	static int		5617239	1					
ANR	5617313	Identifier	getNumRawDataModules		5617239	2					
ANR	5617314	ParameterList	int version		5617239	3					
ANR	5617315	Parameter	int version	502:32:20628:20638	5617239	0	True				
ANR	5617316	ParameterType	int		5617239	0					
ANR	5617317	Identifier	version		5617239	1					
ANR	5617318	CFGEntryNode	ENTRY		5617239		True				
ANR	5617319	CFGExitNode	EXIT		5617239		True				
ANR	5617320	Symbol	result		5617239						
ANR	5617321	Symbol	qrcodegen_VERSION_MIN		5617239						
ANR	5617322	Symbol	version		5617239						
ANR	5617323	Symbol	qrcodegen_VERSION_MAX		5617239						
ANR	5617324	Symbol	numAlign		5617239						
ANR	5617325	Function	calcReedSolomonGenerator	520:0:21146:21945							
ANR	5617326	FunctionDef	"calcReedSolomonGenerator (int degree , ut8 result [ ])"		5617325	0					
ANR	5617327	CompoundStatement		520:63:21209:21945	5617325	0					
ANR	5617328	IfStatement	if ( degree < 1 || degree > 31 )		5617325	0					
ANR	5617329	Condition	degree < 1 || degree > 31	522:5:21248:21272	5617325	0	True				
ANR	5617330	OrExpression	degree < 1 || degree > 31		5617325	0		||			
ANR	5617331	RelationalExpression	degree < 1		5617325	0		<			
ANR	5617332	Identifier	degree		5617325	0					
ANR	5617333	PrimaryExpression	1		5617325	1					
ANR	5617334	RelationalExpression	degree > 31		5617325	1		>			
ANR	5617335	Identifier	degree		5617325	0					
ANR	5617336	PrimaryExpression	31		5617325	1					
ANR	5617337	CompoundStatement		3:32:65:65	5617325	1					
ANR	5617338	ReturnStatement	return ;	523:2:21279:21285	5617325	0	True				
ANR	5617339	ExpressionStatement	"memset ( result , 0 , degree * sizeof ( result [ 0 ] ) )"	525:1:21291:21337	5617325	1	True				
ANR	5617340	CallExpression	"memset ( result , 0 , degree * sizeof ( result [ 0 ] ) )"		5617325	0					
ANR	5617341	Callee	memset		5617325	0					
ANR	5617342	Identifier	memset		5617325	0					
ANR	5617343	ArgumentList	result		5617325	1					
ANR	5617344	Argument	result		5617325	0					
ANR	5617345	Identifier	result		5617325	0					
ANR	5617346	Argument	0		5617325	1					
ANR	5617347	PrimaryExpression	0		5617325	0					
ANR	5617348	Argument	degree * sizeof ( result [ 0 ] )		5617325	2					
ANR	5617349	MultiplicativeExpression	degree * sizeof ( result [ 0 ] )		5617325	0		*			
ANR	5617350	Identifier	degree		5617325	0					
ANR	5617351	SizeofExpression	sizeof ( result [ 0 ] )		5617325	1					
ANR	5617352	Sizeof	sizeof		5617325	0					
ANR	5617353	ArrayIndexing	result [ 0 ]		5617325	1					
ANR	5617354	Identifier	result		5617325	0					
ANR	5617355	PrimaryExpression	0		5617325	1					
ANR	5617356	ExpressionStatement	result [ degree - 1 ] = 1	526:1:21340:21362	5617325	2	True				
ANR	5617357	AssignmentExpression	result [ degree - 1 ] = 1		5617325	0		=			
ANR	5617358	ArrayIndexing	result [ degree - 1 ]		5617325	0					
ANR	5617359	Identifier	result		5617325	0					
ANR	5617360	AdditiveExpression	degree - 1		5617325	1		-			
ANR	5617361	Identifier	degree		5617325	0					
ANR	5617362	PrimaryExpression	1		5617325	1					
ANR	5617363	PrimaryExpression	1		5617325	1					
ANR	5617364	IdentifierDeclStatement	"int i , j ;"	531:1:21642:21650	5617325	3	True				
ANR	5617365	IdentifierDecl	i		5617325	0					
ANR	5617366	IdentifierDeclType	int		5617325	0					
ANR	5617367	Identifier	i		5617325	1					
ANR	5617368	IdentifierDecl	j		5617325	1					
ANR	5617369	IdentifierDeclType	int		5617325	0					
ANR	5617370	Identifier	j		5617325	1					
ANR	5617371	IdentifierDeclStatement	ut8 root = 1 ;	532:1:21653:21665	5617325	4	True				
ANR	5617372	IdentifierDecl	root = 1		5617325	0					
ANR	5617373	IdentifierDeclType	ut8		5617325	0					
ANR	5617374	Identifier	root		5617325	1					
ANR	5617375	AssignmentExpression	root = 1		5617325	2		=			
ANR	5617376	Identifier	root		5617325	0					
ANR	5617377	PrimaryExpression	1		5617325	1					
ANR	5617378	ForStatement	for ( i = 0 ; i < degree ; i ++ )		5617325	5					
ANR	5617379	ForInit	i = 0 ;	533:6:21673:21678	5617325	0	True				
ANR	5617380	AssignmentExpression	i = 0		5617325	0		=			
ANR	5617381	Identifier	i		5617325	0					
ANR	5617382	PrimaryExpression	0		5617325	1					
ANR	5617383	Condition	i < degree	533:13:21680:21689	5617325	1	True				
ANR	5617384	RelationalExpression	i < degree		5617325	0		<			
ANR	5617385	Identifier	i		5617325	0					
ANR	5617386	Identifier	degree		5617325	1					
ANR	5617387	PostIncDecOperationExpression	i ++	533:25:21692:21694	5617325	2	True				
ANR	5617388	Identifier	i		5617325	0					
ANR	5617389	IncDec	++		5617325	1					
ANR	5617390	CompoundStatement		14:30:487:487	5617325	3					
ANR	5617391	ForStatement	for ( j = 0 ; j < degree ; j ++ )		5617325	0					
ANR	5617392	ForInit	j = 0 ;	535:7:21753:21758	5617325	0	True				
ANR	5617393	AssignmentExpression	j = 0		5617325	0		=			
ANR	5617394	Identifier	j		5617325	0					
ANR	5617395	PrimaryExpression	0		5617325	1					
ANR	5617396	Condition	j < degree	535:14:21760:21769	5617325	1	True				
ANR	5617397	RelationalExpression	j < degree		5617325	0		<			
ANR	5617398	Identifier	j		5617325	0					
ANR	5617399	Identifier	degree		5617325	1					
ANR	5617400	PostIncDecOperationExpression	j ++	535:26:21772:21774	5617325	2	True				
ANR	5617401	Identifier	j		5617325	0					
ANR	5617402	IncDec	++		5617325	1					
ANR	5617403	CompoundStatement		16:31:567:567	5617325	3					
ANR	5617404	ExpressionStatement	"result [ j ] = finiteFieldMultiply ( result [ j ] , root )"	536:3:21782:21831	5617325	0	True				
ANR	5617405	AssignmentExpression	"result [ j ] = finiteFieldMultiply ( result [ j ] , root )"		5617325	0		=			
ANR	5617406	ArrayIndexing	result [ j ]		5617325	0					
ANR	5617407	Identifier	result		5617325	0					
ANR	5617408	Identifier	j		5617325	1					
ANR	5617409	CallExpression	"finiteFieldMultiply ( result [ j ] , root )"		5617325	1					
ANR	5617410	Callee	finiteFieldMultiply		5617325	0					
ANR	5617411	Identifier	finiteFieldMultiply		5617325	0					
ANR	5617412	ArgumentList	result [ j ]		5617325	1					
ANR	5617413	Argument	result [ j ]		5617325	0					
ANR	5617414	ArrayIndexing	result [ j ]		5617325	0					
ANR	5617415	Identifier	result		5617325	0					
ANR	5617416	Identifier	j		5617325	1					
ANR	5617417	Argument	root		5617325	1					
ANR	5617418	Identifier	root		5617325	0					
ANR	5617419	IfStatement	if ( j + 1 < degree )		5617325	1					
ANR	5617420	Condition	j + 1 < degree	537:7:21840:21853	5617325	0	True				
ANR	5617421	RelationalExpression	j + 1 < degree		5617325	0		<			
ANR	5617422	AdditiveExpression	j + 1		5617325	0		+			
ANR	5617423	Identifier	j		5617325	0					
ANR	5617424	PrimaryExpression	1		5617325	1					
ANR	5617425	Identifier	degree		5617325	1					
ANR	5617426	CompoundStatement		18:23:646:646	5617325	1					
ANR	5617427	ExpressionStatement	result [ j ] ^= result [ j + 1 ]	538:4:21862:21888	5617325	0	True				
ANR	5617428	AssignmentExpression	result [ j ] ^= result [ j + 1 ]		5617325	0		^=			
ANR	5617429	ArrayIndexing	result [ j ]		5617325	0					
ANR	5617430	Identifier	result		5617325	0					
ANR	5617431	Identifier	j		5617325	1					
ANR	5617432	ArrayIndexing	result [ j + 1 ]		5617325	1					
ANR	5617433	Identifier	result		5617325	0					
ANR	5617434	AdditiveExpression	j + 1		5617325	1		+			
ANR	5617435	Identifier	j		5617325	0					
ANR	5617436	PrimaryExpression	1		5617325	1					
ANR	5617437	ExpressionStatement	"root = finiteFieldMultiply ( root , 0x02 )"	541:2:21901:21940	5617325	1	True				
ANR	5617438	AssignmentExpression	"root = finiteFieldMultiply ( root , 0x02 )"		5617325	0		=			
ANR	5617439	Identifier	root		5617325	0					
ANR	5617440	CallExpression	"finiteFieldMultiply ( root , 0x02 )"		5617325	1					
ANR	5617441	Callee	finiteFieldMultiply		5617325	0					
ANR	5617442	Identifier	finiteFieldMultiply		5617325	0					
ANR	5617443	ArgumentList	root		5617325	1					
ANR	5617444	Argument	root		5617325	0					
ANR	5617445	Identifier	root		5617325	0					
ANR	5617446	Argument	0x02		5617325	1					
ANR	5617447	PrimaryExpression	0x02		5617325	0					
ANR	5617448	ReturnType	static void		5617325	1					
ANR	5617449	Identifier	calcReedSolomonGenerator		5617325	2					
ANR	5617450	ParameterList	"int degree , ut8 result [ ]"		5617325	3					
ANR	5617451	Parameter	int degree	520:37:21183:21192	5617325	0	True				
ANR	5617452	ParameterType	int		5617325	0					
ANR	5617453	Identifier	degree		5617325	1					
ANR	5617454	Parameter	ut8 result [ ]	520:49:21195:21206	5617325	1	True				
ANR	5617455	ParameterType	ut8 [ ]		5617325	0					
ANR	5617456	Identifier	result		5617325	1					
ANR	5617457	CFGEntryNode	ENTRY		5617325		True				
ANR	5617458	CFGExitNode	EXIT		5617325		True				
ANR	5617459	Symbol	result		5617325						
ANR	5617460	Symbol	finiteFieldMultiply		5617325						
ANR	5617461	Symbol	* j		5617325						
ANR	5617462	Symbol	* result		5617325						
ANR	5617463	Symbol	root		5617325						
ANR	5617464	Symbol	degree		5617325						
ANR	5617465	Symbol	i		5617325						
ANR	5617466	Symbol	j		5617325						
ANR	5617467	Symbol	* degree		5617325						
ANR	5617468	Function	calcReedSolomonRemainder	548:0:22191:22714							
ANR	5617469	FunctionDef	"calcReedSolomonRemainder (const ut8 data [ ] , int dataLen , const ut8 generator [ ] , int degree , ut8 result [ ])"		5617468	0					
ANR	5617470	CompoundStatement		548:117:22308:22714	5617468	0					
ANR	5617471	IfStatement	if ( degree < 1 || degree > 31 )		5617468	0					
ANR	5617472	Condition	degree < 1 || degree > 31	550:5:22347:22371	5617468	0	True				
ANR	5617473	OrExpression	degree < 1 || degree > 31		5617468	0		||			
ANR	5617474	RelationalExpression	degree < 1		5617468	0		<			
ANR	5617475	Identifier	degree		5617468	0					
ANR	5617476	PrimaryExpression	1		5617468	1					
ANR	5617477	RelationalExpression	degree > 31		5617468	1		>			
ANR	5617478	Identifier	degree		5617468	0					
ANR	5617479	PrimaryExpression	31		5617468	1					
ANR	5617480	CompoundStatement		3:32:65:65	5617468	1					
ANR	5617481	ReturnStatement	return ;	551:2:22378:22384	5617468	0	True				
ANR	5617482	ExpressionStatement	"memset ( result , 0 , degree * sizeof ( result [ 0 ] ) )"	553:1:22390:22436	5617468	1	True				
ANR	5617483	CallExpression	"memset ( result , 0 , degree * sizeof ( result [ 0 ] ) )"		5617468	0					
ANR	5617484	Callee	memset		5617468	0					
ANR	5617485	Identifier	memset		5617468	0					
ANR	5617486	ArgumentList	result		5617468	1					
ANR	5617487	Argument	result		5617468	0					
ANR	5617488	Identifier	result		5617468	0					
ANR	5617489	Argument	0		5617468	1					
ANR	5617490	PrimaryExpression	0		5617468	0					
ANR	5617491	Argument	degree * sizeof ( result [ 0 ] )		5617468	2					
ANR	5617492	MultiplicativeExpression	degree * sizeof ( result [ 0 ] )		5617468	0		*			
ANR	5617493	Identifier	degree		5617468	0					
ANR	5617494	SizeofExpression	sizeof ( result [ 0 ] )		5617468	1					
ANR	5617495	Sizeof	sizeof		5617468	0					
ANR	5617496	ArrayIndexing	result [ 0 ]		5617468	1					
ANR	5617497	Identifier	result		5617468	0					
ANR	5617498	PrimaryExpression	0		5617468	1					
ANR	5617499	IdentifierDeclStatement	"int i , j ;"	554:1:22439:22447	5617468	2	True				
ANR	5617500	IdentifierDecl	i		5617468	0					
ANR	5617501	IdentifierDeclType	int		5617468	0					
ANR	5617502	Identifier	i		5617468	1					
ANR	5617503	IdentifierDecl	j		5617468	1					
ANR	5617504	IdentifierDeclType	int		5617468	0					
ANR	5617505	Identifier	j		5617468	1					
ANR	5617506	ForStatement	for ( i = 0 ; i < dataLen ; i ++ )		5617468	3					
ANR	5617507	ForInit	i = 0 ;	555:6:22455:22460	5617468	0	True				
ANR	5617508	AssignmentExpression	i = 0		5617468	0		=			
ANR	5617509	Identifier	i		5617468	0					
ANR	5617510	PrimaryExpression	0		5617468	1					
ANR	5617511	Condition	i < dataLen	555:13:22462:22472	5617468	1	True				
ANR	5617512	RelationalExpression	i < dataLen		5617468	0		<			
ANR	5617513	Identifier	i		5617468	0					
ANR	5617514	Identifier	dataLen		5617468	1					
ANR	5617515	PostIncDecOperationExpression	i ++	555:26:22475:22477	5617468	2	True				
ANR	5617516	Identifier	i		5617468	0					
ANR	5617517	IncDec	++		5617468	1					
ANR	5617518	CompoundStatement		9:2:175:207	5617468	3					
ANR	5617519	IdentifierDeclStatement	ut8 factor = data [ i ] ^ result [ 0 ] ;	556:2:22484:22516	5617468	0	True				
ANR	5617520	IdentifierDecl	factor = data [ i ] ^ result [ 0 ]		5617468	0					
ANR	5617521	IdentifierDeclType	ut8		5617468	0					
ANR	5617522	Identifier	factor		5617468	1					
ANR	5617523	AssignmentExpression	factor = data [ i ] ^ result [ 0 ]		5617468	2		=			
ANR	5617524	Identifier	factor		5617468	0					
ANR	5617525	ExclusiveOrExpression	data [ i ] ^ result [ 0 ]		5617468	1		^			
ANR	5617526	ArrayIndexing	data [ i ]		5617468	0					
ANR	5617527	Identifier	data		5617468	0					
ANR	5617528	Identifier	i		5617468	1					
ANR	5617529	ArrayIndexing	result [ 0 ]		5617468	1					
ANR	5617530	Identifier	result		5617468	0					
ANR	5617531	PrimaryExpression	0		5617468	1					
ANR	5617532	ExpressionStatement	"memmove ( & result [ 0 ] , & result [ 1 ] , ( degree - 1 ) * sizeof ( result [ 0 ] ) )"	557:2:22520:22586	5617468	1	True				
ANR	5617533	CallExpression	"memmove ( & result [ 0 ] , & result [ 1 ] , ( degree - 1 ) * sizeof ( result [ 0 ] ) )"		5617468	0					
ANR	5617534	Callee	memmove		5617468	0					
ANR	5617535	Identifier	memmove		5617468	0					
ANR	5617536	ArgumentList	& result [ 0 ]		5617468	1					
ANR	5617537	Argument	& result [ 0 ]		5617468	0					
ANR	5617538	UnaryOperationExpression	& result [ 0 ]		5617468	0					
ANR	5617539	UnaryOperator	&		5617468	0					
ANR	5617540	ArrayIndexing	result [ 0 ]		5617468	1					
ANR	5617541	Identifier	result		5617468	0					
ANR	5617542	PrimaryExpression	0		5617468	1					
ANR	5617543	Argument	& result [ 1 ]		5617468	1					
ANR	5617544	UnaryOperationExpression	& result [ 1 ]		5617468	0					
ANR	5617545	UnaryOperator	&		5617468	0					
ANR	5617546	ArrayIndexing	result [ 1 ]		5617468	1					
ANR	5617547	Identifier	result		5617468	0					
ANR	5617548	PrimaryExpression	1		5617468	1					
ANR	5617549	Argument	( degree - 1 ) * sizeof ( result [ 0 ] )		5617468	2					
ANR	5617550	MultiplicativeExpression	( degree - 1 ) * sizeof ( result [ 0 ] )		5617468	0		*			
ANR	5617551	AdditiveExpression	degree - 1		5617468	0		-			
ANR	5617552	Identifier	degree		5617468	0					
ANR	5617553	PrimaryExpression	1		5617468	1					
ANR	5617554	SizeofExpression	sizeof ( result [ 0 ] )		5617468	1					
ANR	5617555	Sizeof	sizeof		5617468	0					
ANR	5617556	ArrayIndexing	result [ 0 ]		5617468	1					
ANR	5617557	Identifier	result		5617468	0					
ANR	5617558	PrimaryExpression	0		5617468	1					
ANR	5617559	ExpressionStatement	result [ degree - 1 ] = 0	558:2:22590:22612	5617468	2	True				
ANR	5617560	AssignmentExpression	result [ degree - 1 ] = 0		5617468	0		=			
ANR	5617561	ArrayIndexing	result [ degree - 1 ]		5617468	0					
ANR	5617562	Identifier	result		5617468	0					
ANR	5617563	AdditiveExpression	degree - 1		5617468	1		-			
ANR	5617564	Identifier	degree		5617468	0					
ANR	5617565	PrimaryExpression	1		5617468	1					
ANR	5617566	PrimaryExpression	0		5617468	1					
ANR	5617567	ForStatement	for ( j = 0 ; j < degree ; j ++ )		5617468	3					
ANR	5617568	ForInit	j = 0 ;	559:7:22621:22626	5617468	0	True				
ANR	5617569	AssignmentExpression	j = 0		5617468	0		=			
ANR	5617570	Identifier	j		5617468	0					
ANR	5617571	PrimaryExpression	0		5617468	1					
ANR	5617572	Condition	j < degree	559:14:22628:22637	5617468	1	True				
ANR	5617573	RelationalExpression	j < degree		5617468	0		<			
ANR	5617574	Identifier	j		5617468	0					
ANR	5617575	Identifier	degree		5617468	1					
ANR	5617576	PostIncDecOperationExpression	j ++	559:26:22640:22642	5617468	2	True				
ANR	5617577	Identifier	j		5617468	0					
ANR	5617578	IncDec	++		5617468	1					
ANR	5617579	CompoundStatement		12:31:336:336	5617468	3					
ANR	5617580	ExpressionStatement	"result [ j ] ^= finiteFieldMultiply ( generator [ j ] , factor )"	560:3:22650:22705	5617468	0	True				
ANR	5617581	AssignmentExpression	"result [ j ] ^= finiteFieldMultiply ( generator [ j ] , factor )"		5617468	0		^=			
ANR	5617582	ArrayIndexing	result [ j ]		5617468	0					
ANR	5617583	Identifier	result		5617468	0					
ANR	5617584	Identifier	j		5617468	1					
ANR	5617585	CallExpression	"finiteFieldMultiply ( generator [ j ] , factor )"		5617468	1					
ANR	5617586	Callee	finiteFieldMultiply		5617468	0					
ANR	5617587	Identifier	finiteFieldMultiply		5617468	0					
ANR	5617588	ArgumentList	generator [ j ]		5617468	1					
ANR	5617589	Argument	generator [ j ]		5617468	0					
ANR	5617590	ArrayIndexing	generator [ j ]		5617468	0					
ANR	5617591	Identifier	generator		5617468	0					
ANR	5617592	Identifier	j		5617468	1					
ANR	5617593	Argument	factor		5617468	1					
ANR	5617594	Identifier	factor		5617468	0					
ANR	5617595	ReturnType	static void		5617468	1					
ANR	5617596	Identifier	calcReedSolomonRemainder		5617468	2					
ANR	5617597	ParameterList	"const ut8 data [ ] , int dataLen , const ut8 generator [ ] , int degree , ut8 result [ ]"		5617468	3					
ANR	5617598	Parameter	const ut8 data [ ]	548:37:22228:22243	5617468	0	True				
ANR	5617599	ParameterType	const ut8 [ ]		5617468	0					
ANR	5617600	Identifier	data		5617468	1					
ANR	5617601	Parameter	int dataLen	548:55:22246:22256	5617468	1	True				
ANR	5617602	ParameterType	int		5617468	0					
ANR	5617603	Identifier	dataLen		5617468	1					
ANR	5617604	Parameter	const ut8 generator [ ]	548:68:22259:22279	5617468	2	True				
ANR	5617605	ParameterType	const ut8 [ ]		5617468	0					
ANR	5617606	Identifier	generator		5617468	1					
ANR	5617607	Parameter	int degree	548:91:22282:22291	5617468	3	True				
ANR	5617608	ParameterType	int		5617468	0					
ANR	5617609	Identifier	degree		5617468	1					
ANR	5617610	Parameter	ut8 result [ ]	548:103:22294:22305	5617468	4	True				
ANR	5617611	ParameterType	ut8 [ ]		5617468	0					
ANR	5617612	Identifier	result		5617468	1					
ANR	5617613	CFGEntryNode	ENTRY		5617468		True				
ANR	5617614	CFGExitNode	EXIT		5617468		True				
ANR	5617615	Symbol	finiteFieldMultiply		5617468						
ANR	5617616	Symbol	data		5617468						
ANR	5617617	Symbol	degree		5617468						
ANR	5617618	Symbol	generator		5617468						
ANR	5617619	Symbol	i		5617468						
ANR	5617620	Symbol	j		5617468						
ANR	5617621	Symbol	dataLen		5617468						
ANR	5617622	Symbol	result		5617468						
ANR	5617623	Symbol	* i		5617468						
ANR	5617624	Symbol	* generator		5617468						
ANR	5617625	Symbol	* j		5617468						
ANR	5617626	Symbol	* result		5617468						
ANR	5617627	Symbol	factor		5617468						
ANR	5617628	Symbol	* data		5617468						
ANR	5617629	Symbol	* degree		5617468						
ANR	5617630	Function	finiteFieldMultiply	568:0:22873:23081							
ANR	5617631	FunctionDef	"finiteFieldMultiply (ut8 x , ut8 y)"		5617630	0					
ANR	5617632	CompoundStatement		568:45:22918:23081	5617630	0					
ANR	5617633	IdentifierDeclStatement	ut8 z = 0 ;	570:1:22956:22965	5617630	0	True				
ANR	5617634	IdentifierDecl	z = 0		5617630	0					
ANR	5617635	IdentifierDeclType	ut8		5617630	0					
ANR	5617636	Identifier	z		5617630	1					
ANR	5617637	AssignmentExpression	z = 0		5617630	2		=			
ANR	5617638	Identifier	z		5617630	0					
ANR	5617639	PrimaryExpression	0		5617630	1					
ANR	5617640	IdentifierDeclStatement	int i ;	571:1:22968:22973	5617630	1	True				
ANR	5617641	IdentifierDecl	i		5617630	0					
ANR	5617642	IdentifierDeclType	int		5617630	0					
ANR	5617643	Identifier	i		5617630	1					
ANR	5617644	ForStatement	for ( i = 7 ; i >= 0 ; i -- )		5617630	2					
ANR	5617645	ForInit	i = 7 ;	572:6:22981:22986	5617630	0	True				
ANR	5617646	AssignmentExpression	i = 7		5617630	0		=			
ANR	5617647	Identifier	i		5617630	0					
ANR	5617648	PrimaryExpression	7		5617630	1					
ANR	5617649	Condition	i >= 0	572:13:22988:22993	5617630	1	True				
ANR	5617650	RelationalExpression	i >= 0		5617630	0		>=			
ANR	5617651	Identifier	i		5617630	0					
ANR	5617652	PrimaryExpression	0		5617630	1					
ANR	5617653	PostIncDecOperationExpression	i --	572:21:22996:22998	5617630	2	True				
ANR	5617654	Identifier	i		5617630	0					
ANR	5617655	IncDec	--		5617630	1					
ANR	5617656	CompoundStatement		5:26:82:82	5617630	3					
ANR	5617657	ExpressionStatement	z = ( z << 1 ) ^ ( ( z >> 7 ) * 0x11D )	573:2:23005:23038	5617630	0	True				
ANR	5617658	AssignmentExpression	z = ( z << 1 ) ^ ( ( z >> 7 ) * 0x11D )		5617630	0		=			
ANR	5617659	Identifier	z		5617630	0					
ANR	5617660	ExclusiveOrExpression	( z << 1 ) ^ ( ( z >> 7 ) * 0x11D )		5617630	1		^			
ANR	5617661	ShiftExpression	z << 1		5617630	0		<<			
ANR	5617662	Identifier	z		5617630	0					
ANR	5617663	PrimaryExpression	1		5617630	1					
ANR	5617664	MultiplicativeExpression	( z >> 7 ) * 0x11D		5617630	1		*			
ANR	5617665	ShiftExpression	z >> 7		5617630	0		>>			
ANR	5617666	Identifier	z		5617630	0					
ANR	5617667	PrimaryExpression	7		5617630	1					
ANR	5617668	PrimaryExpression	0x11D		5617630	1					
ANR	5617669	ExpressionStatement	z ^= ( ( y >> i ) & 1 ) * x	574:2:23042:23065	5617630	1	True				
ANR	5617670	AssignmentExpression	z ^= ( ( y >> i ) & 1 ) * x		5617630	0		^=			
ANR	5617671	Identifier	z		5617630	0					
ANR	5617672	MultiplicativeExpression	( ( y >> i ) & 1 ) * x		5617630	1		*			
ANR	5617673	BitAndExpression	( y >> i ) & 1		5617630	0		&			
ANR	5617674	ShiftExpression	y >> i		5617630	0		>>			
ANR	5617675	Identifier	y		5617630	0					
ANR	5617676	Identifier	i		5617630	1					
ANR	5617677	PrimaryExpression	1		5617630	1					
ANR	5617678	Identifier	x		5617630	1					
ANR	5617679	ReturnStatement	return z ;	576:1:23071:23079	5617630	3	True				
ANR	5617680	Identifier	z		5617630	0					
ANR	5617681	ReturnType	static ut8		5617630	1					
ANR	5617682	Identifier	finiteFieldMultiply		5617630	2					
ANR	5617683	ParameterList	"ut8 x , ut8 y"		5617630	3					
ANR	5617684	Parameter	ut8 x	568:31:22904:22908	5617630	0	True				
ANR	5617685	ParameterType	ut8		5617630	0					
ANR	5617686	Identifier	x		5617630	1					
ANR	5617687	Parameter	ut8 y	568:38:22911:22915	5617630	1	True				
ANR	5617688	ParameterType	ut8		5617630	0					
ANR	5617689	Identifier	y		5617630	1					
ANR	5617690	CFGEntryNode	ENTRY		5617630		True				
ANR	5617691	CFGExitNode	EXIT		5617630		True				
ANR	5617692	Symbol	x		5617630						
ANR	5617693	Symbol	y		5617630						
ANR	5617694	Symbol	i		5617630						
ANR	5617695	Symbol	z		5617630						
ANR	5617696	Function	initializeFunctionModules	583:0:23252:24402							
ANR	5617697	FunctionDef	"initializeFunctionModules (int version , ut8 qrcode [ ])"		5617696	0					
ANR	5617698	CompoundStatement		583:65:23317:24402	5617696	0					
ANR	5617699	IdentifierDeclStatement	int qrsize = version * 4 + 17 ;	585:1:23343:23372	5617696	0	True				
ANR	5617700	IdentifierDecl	qrsize = version * 4 + 17		5617696	0					
ANR	5617701	IdentifierDeclType	int		5617696	0					
ANR	5617702	Identifier	qrsize		5617696	1					
ANR	5617703	AssignmentExpression	qrsize = version * 4 + 17		5617696	2		=			
ANR	5617704	Identifier	qrsize		5617696	0					
ANR	5617705	AdditiveExpression	version * 4 + 17		5617696	1		+			
ANR	5617706	MultiplicativeExpression	version * 4		5617696	0		*			
ANR	5617707	Identifier	version		5617696	0					
ANR	5617708	PrimaryExpression	4		5617696	1					
ANR	5617709	PrimaryExpression	17		5617696	1					
ANR	5617710	ExpressionStatement	"memset ( qrcode , 0 , ( ( qrsize * qrsize + 7 ) / 8 + 1 ) * sizeof ( qrcode [ 0 ] ) )"	586:1:23375:23446	5617696	1	True				
ANR	5617711	CallExpression	"memset ( qrcode , 0 , ( ( qrsize * qrsize + 7 ) / 8 + 1 ) * sizeof ( qrcode [ 0 ] ) )"		5617696	0					
ANR	5617712	Callee	memset		5617696	0					
ANR	5617713	Identifier	memset		5617696	0					
ANR	5617714	ArgumentList	qrcode		5617696	1					
ANR	5617715	Argument	qrcode		5617696	0					
ANR	5617716	Identifier	qrcode		5617696	0					
ANR	5617717	Argument	0		5617696	1					
ANR	5617718	PrimaryExpression	0		5617696	0					
ANR	5617719	Argument	( ( qrsize * qrsize + 7 ) / 8 + 1 ) * sizeof ( qrcode [ 0 ] )		5617696	2					
ANR	5617720	MultiplicativeExpression	( ( qrsize * qrsize + 7 ) / 8 + 1 ) * sizeof ( qrcode [ 0 ] )		5617696	0		*			
ANR	5617721	AdditiveExpression	( qrsize * qrsize + 7 ) / 8 + 1		5617696	0		+			
ANR	5617722	MultiplicativeExpression	( qrsize * qrsize + 7 ) / 8		5617696	0		/			
ANR	5617723	AdditiveExpression	qrsize * qrsize + 7		5617696	0		+			
ANR	5617724	MultiplicativeExpression	qrsize * qrsize		5617696	0		*			
ANR	5617725	Identifier	qrsize		5617696	0					
ANR	5617726	Identifier	qrsize		5617696	1					
ANR	5617727	PrimaryExpression	7		5617696	1					
ANR	5617728	PrimaryExpression	8		5617696	1					
ANR	5617729	PrimaryExpression	1		5617696	1					
ANR	5617730	SizeofExpression	sizeof ( qrcode [ 0 ] )		5617696	1					
ANR	5617731	Sizeof	sizeof		5617696	0					
ANR	5617732	ArrayIndexing	qrcode [ 0 ]		5617696	1					
ANR	5617733	Identifier	qrcode		5617696	0					
ANR	5617734	PrimaryExpression	0		5617696	1					
ANR	5617735	ExpressionStatement	qrcode [ 0 ] = ( ut8 ) qrsize	587:1:23449:23473	5617696	2	True				
ANR	5617736	AssignmentExpression	qrcode [ 0 ] = ( ut8 ) qrsize		5617696	0		=			
ANR	5617737	ArrayIndexing	qrcode [ 0 ]		5617696	0					
ANR	5617738	Identifier	qrcode		5617696	0					
ANR	5617739	PrimaryExpression	0		5617696	1					
ANR	5617740	CastExpression	( ut8 ) qrsize		5617696	1					
ANR	5617741	CastTarget	ut8		5617696	0					
ANR	5617742	Identifier	qrsize		5617696	1					
ANR	5617743	ExpressionStatement	"fillRectangle ( 6 , 0 , 1 , qrsize , qrcode )"	590:1:23526:23565	5617696	3	True				
ANR	5617744	CallExpression	"fillRectangle ( 6 , 0 , 1 , qrsize , qrcode )"		5617696	0					
ANR	5617745	Callee	fillRectangle		5617696	0					
ANR	5617746	Identifier	fillRectangle		5617696	0					
ANR	5617747	ArgumentList	6		5617696	1					
ANR	5617748	Argument	6		5617696	0					
ANR	5617749	PrimaryExpression	6		5617696	0					
ANR	5617750	Argument	0		5617696	1					
ANR	5617751	PrimaryExpression	0		5617696	0					
ANR	5617752	Argument	1		5617696	2					
ANR	5617753	PrimaryExpression	1		5617696	0					
ANR	5617754	Argument	qrsize		5617696	3					
ANR	5617755	Identifier	qrsize		5617696	0					
ANR	5617756	Argument	qrcode		5617696	4					
ANR	5617757	Identifier	qrcode		5617696	0					
ANR	5617758	ExpressionStatement	"fillRectangle ( 0 , 6 , qrsize , 1 , qrcode )"	591:1:23568:23607	5617696	4	True				
ANR	5617759	CallExpression	"fillRectangle ( 0 , 6 , qrsize , 1 , qrcode )"		5617696	0					
ANR	5617760	Callee	fillRectangle		5617696	0					
ANR	5617761	Identifier	fillRectangle		5617696	0					
ANR	5617762	ArgumentList	0		5617696	1					
ANR	5617763	Argument	0		5617696	0					
ANR	5617764	PrimaryExpression	0		5617696	0					
ANR	5617765	Argument	6		5617696	1					
ANR	5617766	PrimaryExpression	6		5617696	0					
ANR	5617767	Argument	qrsize		5617696	2					
ANR	5617768	Identifier	qrsize		5617696	0					
ANR	5617769	Argument	1		5617696	3					
ANR	5617770	PrimaryExpression	1		5617696	0					
ANR	5617771	Argument	qrcode		5617696	4					
ANR	5617772	Identifier	qrcode		5617696	0					
ANR	5617773	ExpressionStatement	"fillRectangle ( 0 , 0 , 9 , 9 , qrcode )"	594:1:23688:23722	5617696	5	True				
ANR	5617774	CallExpression	"fillRectangle ( 0 , 0 , 9 , 9 , qrcode )"		5617696	0					
ANR	5617775	Callee	fillRectangle		5617696	0					
ANR	5617776	Identifier	fillRectangle		5617696	0					
ANR	5617777	ArgumentList	0		5617696	1					
ANR	5617778	Argument	0		5617696	0					
ANR	5617779	PrimaryExpression	0		5617696	0					
ANR	5617780	Argument	0		5617696	1					
ANR	5617781	PrimaryExpression	0		5617696	0					
ANR	5617782	Argument	9		5617696	2					
ANR	5617783	PrimaryExpression	9		5617696	0					
ANR	5617784	Argument	9		5617696	3					
ANR	5617785	PrimaryExpression	9		5617696	0					
ANR	5617786	Argument	qrcode		5617696	4					
ANR	5617787	Identifier	qrcode		5617696	0					
ANR	5617788	ExpressionStatement	"fillRectangle ( qrsize - 8 , 0 , 8 , 9 , qrcode )"	595:1:23725:23768	5617696	6	True				
ANR	5617789	CallExpression	"fillRectangle ( qrsize - 8 , 0 , 8 , 9 , qrcode )"		5617696	0					
ANR	5617790	Callee	fillRectangle		5617696	0					
ANR	5617791	Identifier	fillRectangle		5617696	0					
ANR	5617792	ArgumentList	qrsize - 8		5617696	1					
ANR	5617793	Argument	qrsize - 8		5617696	0					
ANR	5617794	AdditiveExpression	qrsize - 8		5617696	0		-			
ANR	5617795	Identifier	qrsize		5617696	0					
ANR	5617796	PrimaryExpression	8		5617696	1					
ANR	5617797	Argument	0		5617696	1					
ANR	5617798	PrimaryExpression	0		5617696	0					
ANR	5617799	Argument	8		5617696	2					
ANR	5617800	PrimaryExpression	8		5617696	0					
ANR	5617801	Argument	9		5617696	3					
ANR	5617802	PrimaryExpression	9		5617696	0					
ANR	5617803	Argument	qrcode		5617696	4					
ANR	5617804	Identifier	qrcode		5617696	0					
ANR	5617805	ExpressionStatement	"fillRectangle ( 0 , qrsize - 8 , 9 , 8 , qrcode )"	596:1:23771:23814	5617696	7	True				
ANR	5617806	CallExpression	"fillRectangle ( 0 , qrsize - 8 , 9 , 8 , qrcode )"		5617696	0					
ANR	5617807	Callee	fillRectangle		5617696	0					
ANR	5617808	Identifier	fillRectangle		5617696	0					
ANR	5617809	ArgumentList	0		5617696	1					
ANR	5617810	Argument	0		5617696	0					
ANR	5617811	PrimaryExpression	0		5617696	0					
ANR	5617812	Argument	qrsize - 8		5617696	1					
ANR	5617813	AdditiveExpression	qrsize - 8		5617696	0		-			
ANR	5617814	Identifier	qrsize		5617696	0					
ANR	5617815	PrimaryExpression	8		5617696	1					
ANR	5617816	Argument	9		5617696	2					
ANR	5617817	PrimaryExpression	9		5617696	0					
ANR	5617818	Argument	8		5617696	3					
ANR	5617819	PrimaryExpression	8		5617696	0					
ANR	5617820	Argument	qrcode		5617696	4					
ANR	5617821	Identifier	qrcode		5617696	0					
ANR	5617822	IdentifierDeclStatement	ut8 alignPatPos [ 7 ] = { 0 } ;	599:1:23855:23884	5617696	8	True				
ANR	5617823	IdentifierDecl	alignPatPos [ 7 ] = { 0 }		5617696	0					
ANR	5617824	IdentifierDeclType	ut8 [ 7 ]		5617696	0					
ANR	5617825	Identifier	alignPatPos		5617696	1					
ANR	5617826	PrimaryExpression	7		5617696	2					
ANR	5617827	AssignmentExpression	alignPatPos [ 7 ] = { 0 }		5617696	3		=			
ANR	5617828	Identifier	alignPatPos		5617696	0					
ANR	5617829	InitializerList	0		5617696	1					
ANR	5617830	PrimaryExpression	0		5617696	0					
ANR	5617831	IdentifierDeclStatement	"int i , j , numAlign = getAlignmentPatternPositions ( version , alignPatPos ) ;"	602:1:23887:23959	5617696	9	True				
ANR	5617832	IdentifierDecl	i		5617696	0					
ANR	5617833	IdentifierDeclType	int		5617696	0					
ANR	5617834	Identifier	i		5617696	1					
ANR	5617835	IdentifierDecl	j		5617696	1					
ANR	5617836	IdentifierDeclType	int		5617696	0					
ANR	5617837	Identifier	j		5617696	1					
ANR	5617838	IdentifierDecl	"numAlign = getAlignmentPatternPositions ( version , alignPatPos )"		5617696	2					
ANR	5617839	IdentifierDeclType	int		5617696	0					
ANR	5617840	Identifier	numAlign		5617696	1					
ANR	5617841	AssignmentExpression	"numAlign = getAlignmentPatternPositions ( version , alignPatPos )"		5617696	2		=			
ANR	5617842	Identifier	numAlign		5617696	0					
ANR	5617843	CallExpression	"getAlignmentPatternPositions ( version , alignPatPos )"		5617696	1					
ANR	5617844	Callee	getAlignmentPatternPositions		5617696	0					
ANR	5617845	Identifier	getAlignmentPatternPositions		5617696	0					
ANR	5617846	ArgumentList	version		5617696	1					
ANR	5617847	Argument	version		5617696	0					
ANR	5617848	Identifier	version		5617696	0					
ANR	5617849	Argument	alignPatPos		5617696	1					
ANR	5617850	Identifier	alignPatPos		5617696	0					
ANR	5617851	ForStatement	for ( i = 0 ; i < numAlign ; i ++ )		5617696	10					
ANR	5617852	ForInit	i = 0 ;	603:6:23967:23972	5617696	0	True				
ANR	5617853	AssignmentExpression	i = 0		5617696	0		=			
ANR	5617854	Identifier	i		5617696	0					
ANR	5617855	PrimaryExpression	0		5617696	1					
ANR	5617856	Condition	i < numAlign	603:13:23974:23985	5617696	1	True				
ANR	5617857	RelationalExpression	i < numAlign		5617696	0		<			
ANR	5617858	Identifier	i		5617696	0					
ANR	5617859	Identifier	numAlign		5617696	1					
ANR	5617860	PostIncDecOperationExpression	i ++	603:27:23988:23990	5617696	2	True				
ANR	5617861	Identifier	i		5617696	0					
ANR	5617862	IncDec	++		5617696	1					
ANR	5617863	CompoundStatement		21:32:675:675	5617696	3					
ANR	5617864	ForStatement	for ( j = 0 ; j < numAlign ; j ++ )		5617696	0					
ANR	5617865	ForInit	j = 0 ;	604:7:24002:24007	5617696	0	True				
ANR	5617866	AssignmentExpression	j = 0		5617696	0		=			
ANR	5617867	Identifier	j		5617696	0					
ANR	5617868	PrimaryExpression	0		5617696	1					
ANR	5617869	Condition	j < numAlign	604:14:24009:24020	5617696	1	True				
ANR	5617870	RelationalExpression	j < numAlign		5617696	0		<			
ANR	5617871	Identifier	j		5617696	0					
ANR	5617872	Identifier	numAlign		5617696	1					
ANR	5617873	PostIncDecOperationExpression	j ++	604:28:24023:24025	5617696	2	True				
ANR	5617874	Identifier	j		5617696	0					
ANR	5617875	IncDec	++		5617696	1					
ANR	5617876	CompoundStatement		22:33:710:710	5617696	3					
ANR	5617877	IfStatement	if ( ( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 ) )		5617696	0					
ANR	5617878	Condition	( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )	605:7:24037:24120	5617696	0	True				
ANR	5617879	OrExpression	( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )		5617696	0		||			
ANR	5617880	AndExpression	i == 0 && j == 0		5617696	0		&&			
ANR	5617881	EqualityExpression	i == 0		5617696	0		==			
ANR	5617882	Identifier	i		5617696	0					
ANR	5617883	PrimaryExpression	0		5617696	1					
ANR	5617884	EqualityExpression	j == 0		5617696	1		==			
ANR	5617885	Identifier	j		5617696	0					
ANR	5617886	PrimaryExpression	0		5617696	1					
ANR	5617887	OrExpression	( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )		5617696	1		||			
ANR	5617888	AndExpression	i == 0 && j == numAlign - 1		5617696	0		&&			
ANR	5617889	EqualityExpression	i == 0		5617696	0		==			
ANR	5617890	Identifier	i		5617696	0					
ANR	5617891	PrimaryExpression	0		5617696	1					
ANR	5617892	EqualityExpression	j == numAlign - 1		5617696	1		==			
ANR	5617893	Identifier	j		5617696	0					
ANR	5617894	AdditiveExpression	numAlign - 1		5617696	1		-			
ANR	5617895	Identifier	numAlign		5617696	0					
ANR	5617896	PrimaryExpression	1		5617696	1					
ANR	5617897	AndExpression	i == numAlign - 1 && j == 0		5617696	1		&&			
ANR	5617898	EqualityExpression	i == numAlign - 1		5617696	0		==			
ANR	5617899	Identifier	i		5617696	0					
ANR	5617900	AdditiveExpression	numAlign - 1		5617696	1		-			
ANR	5617901	Identifier	numAlign		5617696	0					
ANR	5617902	PrimaryExpression	1		5617696	1					
ANR	5617903	EqualityExpression	j == 0		5617696	1		==			
ANR	5617904	Identifier	j		5617696	0					
ANR	5617905	PrimaryExpression	0		5617696	1					
ANR	5617906	CompoundStatement		23:93:805:805	5617696	1					
ANR	5617907	ContinueStatement	continue ;	606:4:24129:24137	5617696	0	True				
ANR	5617908	ExpressionStatement	"fillRectangle ( alignPatPos [ i ] - 2 , alignPatPos [ j ] - 2 , 5 , 5 , qrcode )"	608:3:24180:24248	5617696	1	True				
ANR	5617909	CallExpression	"fillRectangle ( alignPatPos [ i ] - 2 , alignPatPos [ j ] - 2 , 5 , 5 , qrcode )"		5617696	0					
ANR	5617910	Callee	fillRectangle		5617696	0					
ANR	5617911	Identifier	fillRectangle		5617696	0					
ANR	5617912	ArgumentList	alignPatPos [ i ] - 2		5617696	1					
ANR	5617913	Argument	alignPatPos [ i ] - 2		5617696	0					
ANR	5617914	AdditiveExpression	alignPatPos [ i ] - 2		5617696	0		-			
ANR	5617915	ArrayIndexing	alignPatPos [ i ]		5617696	0					
ANR	5617916	Identifier	alignPatPos		5617696	0					
ANR	5617917	Identifier	i		5617696	1					
ANR	5617918	PrimaryExpression	2		5617696	1					
ANR	5617919	Argument	alignPatPos [ j ] - 2		5617696	1					
ANR	5617920	AdditiveExpression	alignPatPos [ j ] - 2		5617696	0		-			
ANR	5617921	ArrayIndexing	alignPatPos [ j ]		5617696	0					
ANR	5617922	Identifier	alignPatPos		5617696	0					
ANR	5617923	Identifier	j		5617696	1					
ANR	5617924	PrimaryExpression	2		5617696	1					
ANR	5617925	Argument	5		5617696	2					
ANR	5617926	PrimaryExpression	5		5617696	0					
ANR	5617927	Argument	5		5617696	3					
ANR	5617928	PrimaryExpression	5		5617696	0					
ANR	5617929	Argument	qrcode		5617696	4					
ANR	5617930	Identifier	qrcode		5617696	0					
ANR	5617931	IfStatement	if ( version >= 7 )		5617696	11					
ANR	5617932	Condition	version >= 7	613:5:24287:24298	5617696	0	True				
ANR	5617933	RelationalExpression	version >= 7		5617696	0		>=			
ANR	5617934	Identifier	version		5617696	0					
ANR	5617935	PrimaryExpression	7		5617696	1					
ANR	5617936	CompoundStatement		31:19:983:983	5617696	1					
ANR	5617937	ExpressionStatement	"fillRectangle ( qrsize - 11 , 0 , 3 , 6 , qrcode )"	614:2:24305:24349	5617696	0	True				
ANR	5617938	CallExpression	"fillRectangle ( qrsize - 11 , 0 , 3 , 6 , qrcode )"		5617696	0					
ANR	5617939	Callee	fillRectangle		5617696	0					
ANR	5617940	Identifier	fillRectangle		5617696	0					
ANR	5617941	ArgumentList	qrsize - 11		5617696	1					
ANR	5617942	Argument	qrsize - 11		5617696	0					
ANR	5617943	AdditiveExpression	qrsize - 11		5617696	0		-			
ANR	5617944	Identifier	qrsize		5617696	0					
ANR	5617945	PrimaryExpression	11		5617696	1					
ANR	5617946	Argument	0		5617696	1					
ANR	5617947	PrimaryExpression	0		5617696	0					
ANR	5617948	Argument	3		5617696	2					
ANR	5617949	PrimaryExpression	3		5617696	0					
ANR	5617950	Argument	6		5617696	3					
ANR	5617951	PrimaryExpression	6		5617696	0					
ANR	5617952	Argument	qrcode		5617696	4					
ANR	5617953	Identifier	qrcode		5617696	0					
ANR	5617954	ExpressionStatement	"fillRectangle ( 0 , qrsize - 11 , 6 , 3 , qrcode )"	615:2:24353:24397	5617696	1	True				
ANR	5617955	CallExpression	"fillRectangle ( 0 , qrsize - 11 , 6 , 3 , qrcode )"		5617696	0					
ANR	5617956	Callee	fillRectangle		5617696	0					
ANR	5617957	Identifier	fillRectangle		5617696	0					
ANR	5617958	ArgumentList	0		5617696	1					
ANR	5617959	Argument	0		5617696	0					
ANR	5617960	PrimaryExpression	0		5617696	0					
ANR	5617961	Argument	qrsize - 11		5617696	1					
ANR	5617962	AdditiveExpression	qrsize - 11		5617696	0		-			
ANR	5617963	Identifier	qrsize		5617696	0					
ANR	5617964	PrimaryExpression	11		5617696	1					
ANR	5617965	Argument	6		5617696	2					
ANR	5617966	PrimaryExpression	6		5617696	0					
ANR	5617967	Argument	3		5617696	3					
ANR	5617968	PrimaryExpression	3		5617696	0					
ANR	5617969	Argument	qrcode		5617696	4					
ANR	5617970	Identifier	qrcode		5617696	0					
ANR	5617971	ReturnType	static void		5617696	1					
ANR	5617972	Identifier	initializeFunctionModules		5617696	2					
ANR	5617973	ParameterList	"int version , ut8 qrcode [ ]"		5617696	3					
ANR	5617974	Parameter	int version	583:38:23290:23300	5617696	0	True				
ANR	5617975	ParameterType	int		5617696	0					
ANR	5617976	Identifier	version		5617696	1					
ANR	5617977	Parameter	ut8 qrcode [ ]	583:51:23303:23314	5617696	1	True				
ANR	5617978	ParameterType	ut8 [ ]		5617696	0					
ANR	5617979	Identifier	qrcode		5617696	1					
ANR	5617980	CFGEntryNode	ENTRY		5617696		True				
ANR	5617981	CFGExitNode	EXIT		5617696		True				
ANR	5617982	Symbol	* i		5617696						
ANR	5617983	Symbol	* j		5617696						
ANR	5617984	Symbol	* qrcode		5617696						
ANR	5617985	Symbol	qrcode		5617696						
ANR	5617986	Symbol	i		5617696						
ANR	5617987	Symbol	alignPatPos		5617696						
ANR	5617988	Symbol	j		5617696						
ANR	5617989	Symbol	version		5617696						
ANR	5617990	Symbol	qrsize		5617696						
ANR	5617991	Symbol	getAlignmentPatternPositions		5617696						
ANR	5617992	Symbol	numAlign		5617696						
ANR	5617993	Symbol	* alignPatPos		5617696						
ANR	5617994	Function	drawWhiteFunctionModules	623:0:24737:26546							
ANR	5617995	FunctionDef	"drawWhiteFunctionModules (ut8 qrcode [ ] , int version)"		5617994	0					
ANR	5617996	CompoundStatement		623:64:24801:26546	5617994	0					
ANR	5617997	IdentifierDeclStatement	"int i , j , k , l , qrsize = qrcodegen_getSize ( qrcode ) ;"	625:1:24853:24904	5617994	0	True				
ANR	5617998	IdentifierDecl	i		5617994	0					
ANR	5617999	IdentifierDeclType	int		5617994	0					
ANR	5618000	Identifier	i		5617994	1					
ANR	5618001	IdentifierDecl	j		5617994	1					
ANR	5618002	IdentifierDeclType	int		5617994	0					
ANR	5618003	Identifier	j		5617994	1					
ANR	5618004	IdentifierDecl	k		5617994	2					
ANR	5618005	IdentifierDeclType	int		5617994	0					
ANR	5618006	Identifier	k		5617994	1					
ANR	5618007	IdentifierDecl	l		5617994	3					
ANR	5618008	IdentifierDeclType	int		5617994	0					
ANR	5618009	Identifier	l		5617994	1					
ANR	5618010	IdentifierDecl	qrsize = qrcodegen_getSize ( qrcode )		5617994	4					
ANR	5618011	IdentifierDeclType	int		5617994	0					
ANR	5618012	Identifier	qrsize		5617994	1					
ANR	5618013	AssignmentExpression	qrsize = qrcodegen_getSize ( qrcode )		5617994	2		=			
ANR	5618014	Identifier	qrsize		5617994	0					
ANR	5618015	CallExpression	qrcodegen_getSize ( qrcode )		5617994	1					
ANR	5618016	Callee	qrcodegen_getSize		5617994	0					
ANR	5618017	Identifier	qrcodegen_getSize		5617994	0					
ANR	5618018	ArgumentList	qrcode		5617994	1					
ANR	5618019	Argument	qrcode		5617994	0					
ANR	5618020	Identifier	qrcode		5617994	0					
ANR	5618021	ForStatement	for ( i = 7 ; i < qrsize - 7 ; i += 2 )		5617994	1					
ANR	5618022	ForInit	i = 7 ;	626:6:24912:24917	5617994	0	True				
ANR	5618023	AssignmentExpression	i = 7		5617994	0		=			
ANR	5618024	Identifier	i		5617994	0					
ANR	5618025	PrimaryExpression	7		5617994	1					
ANR	5618026	Condition	i < qrsize - 7	626:13:24919:24932	5617994	1	True				
ANR	5618027	RelationalExpression	i < qrsize - 7		5617994	0		<			
ANR	5618028	Identifier	i		5617994	0					
ANR	5618029	AdditiveExpression	qrsize - 7		5617994	1		-			
ANR	5618030	Identifier	qrsize		5617994	0					
ANR	5618031	PrimaryExpression	7		5617994	1					
ANR	5618032	AssignmentExpression	i += 2	626:29:24935:24940	5617994	2	True	+=			
ANR	5618033	Identifier	i		5617994	0					
ANR	5618034	PrimaryExpression	2		5617994	1					
ANR	5618035	CompoundStatement		4:37:141:141	5617994	3					
ANR	5618036	ExpressionStatement	"setModule ( qrcode , 6 , i , false )"	627:2:24947:24978	5617994	0	True				
ANR	5618037	CallExpression	"setModule ( qrcode , 6 , i , false )"		5617994	0					
ANR	5618038	Callee	setModule		5617994	0					
ANR	5618039	Identifier	setModule		5617994	0					
ANR	5618040	ArgumentList	qrcode		5617994	1					
ANR	5618041	Argument	qrcode		5617994	0					
ANR	5618042	Identifier	qrcode		5617994	0					
ANR	5618043	Argument	6		5617994	1					
ANR	5618044	PrimaryExpression	6		5617994	0					
ANR	5618045	Argument	i		5617994	2					
ANR	5618046	Identifier	i		5617994	0					
ANR	5618047	Argument	false		5617994	3					
ANR	5618048	Identifier	false		5617994	0					
ANR	5618049	ExpressionStatement	"setModule ( qrcode , i , 6 , false )"	628:2:24982:25013	5617994	1	True				
ANR	5618050	CallExpression	"setModule ( qrcode , i , 6 , false )"		5617994	0					
ANR	5618051	Callee	setModule		5617994	0					
ANR	5618052	Identifier	setModule		5617994	0					
ANR	5618053	ArgumentList	qrcode		5617994	1					
ANR	5618054	Argument	qrcode		5617994	0					
ANR	5618055	Identifier	qrcode		5617994	0					
ANR	5618056	Argument	i		5617994	1					
ANR	5618057	Identifier	i		5617994	0					
ANR	5618058	Argument	6		5617994	2					
ANR	5618059	PrimaryExpression	6		5617994	0					
ANR	5618060	Argument	false		5617994	3					
ANR	5618061	Identifier	false		5617994	0					
ANR	5618062	ForStatement	for ( i = - 4 ; i <= 4 ; i ++ )		5617994	2					
ANR	5618063	ForInit	i = - 4 ;	632:6:25118:25124	5617994	0	True				
ANR	5618064	AssignmentExpression	i = - 4		5617994	0		=			
ANR	5618065	Identifier	i		5617994	0					
ANR	5618066	UnaryOperationExpression	- 4		5617994	1					
ANR	5618067	UnaryOperator	-		5617994	0					
ANR	5618068	PrimaryExpression	4		5617994	1					
ANR	5618069	Condition	i <= 4	632:14:25126:25131	5617994	1	True				
ANR	5618070	RelationalExpression	i <= 4		5617994	0		<=			
ANR	5618071	Identifier	i		5617994	0					
ANR	5618072	PrimaryExpression	4		5617994	1					
ANR	5618073	PostIncDecOperationExpression	i ++	632:22:25134:25136	5617994	2	True				
ANR	5618074	Identifier	i		5617994	0					
ANR	5618075	IncDec	++		5617994	1					
ANR	5618076	CompoundStatement		10:27:337:337	5617994	3					
ANR	5618077	ForStatement	for ( j = - 4 ; j <= 4 ; j ++ )		5617994	0					
ANR	5618078	ForInit	j = - 4 ;	633:7:25148:25154	5617994	0	True				
ANR	5618079	AssignmentExpression	j = - 4		5617994	0		=			
ANR	5618080	Identifier	j		5617994	0					
ANR	5618081	UnaryOperationExpression	- 4		5617994	1					
ANR	5618082	UnaryOperator	-		5617994	0					
ANR	5618083	PrimaryExpression	4		5617994	1					
ANR	5618084	Condition	j <= 4	633:15:25156:25161	5617994	1	True				
ANR	5618085	RelationalExpression	j <= 4		5617994	0		<=			
ANR	5618086	Identifier	j		5617994	0					
ANR	5618087	PrimaryExpression	4		5617994	1					
ANR	5618088	PostIncDecOperationExpression	j ++	633:23:25164:25166	5617994	2	True				
ANR	5618089	Identifier	j		5617994	0					
ANR	5618090	IncDec	++		5617994	1					
ANR	5618091	CompoundStatement		12:3:372:390	5617994	3					
ANR	5618092	IdentifierDeclStatement	int dist = abs ( i ) ;	634:3:25174:25192	5617994	0	True				
ANR	5618093	IdentifierDecl	dist = abs ( i )		5617994	0					
ANR	5618094	IdentifierDeclType	int		5617994	0					
ANR	5618095	Identifier	dist		5617994	1					
ANR	5618096	AssignmentExpression	dist = abs ( i )		5617994	2		=			
ANR	5618097	Identifier	dist		5617994	0					
ANR	5618098	CallExpression	abs ( i )		5617994	1					
ANR	5618099	Callee	abs		5617994	0					
ANR	5618100	Identifier	abs		5617994	0					
ANR	5618101	ArgumentList	i		5617994	1					
ANR	5618102	Argument	i		5617994	0					
ANR	5618103	Identifier	i		5617994	0					
ANR	5618104	IfStatement	if ( abs ( j ) > dist )		5617994	1					
ANR	5618105	Condition	abs ( j ) > dist	635:7:25201:25214	5617994	0	True				
ANR	5618106	RelationalExpression	abs ( j ) > dist		5617994	0		>			
ANR	5618107	CallExpression	abs ( j )		5617994	0					
ANR	5618108	Callee	abs		5617994	0					
ANR	5618109	Identifier	abs		5617994	0					
ANR	5618110	ArgumentList	j		5617994	1					
ANR	5618111	Argument	j		5617994	0					
ANR	5618112	Identifier	j		5617994	0					
ANR	5618113	Identifier	dist		5617994	1					
ANR	5618114	CompoundStatement		13:23:415:415	5617994	1					
ANR	5618115	ExpressionStatement	dist = abs ( j )	636:4:25223:25237	5617994	0	True				
ANR	5618116	AssignmentExpression	dist = abs ( j )		5617994	0		=			
ANR	5618117	Identifier	dist		5617994	0					
ANR	5618118	CallExpression	abs ( j )		5617994	1					
ANR	5618119	Callee	abs		5617994	0					
ANR	5618120	Identifier	abs		5617994	0					
ANR	5618121	ArgumentList	j		5617994	1					
ANR	5618122	Argument	j		5617994	0					
ANR	5618123	Identifier	j		5617994	0					
ANR	5618124	IfStatement	if ( dist == 2 || dist == 4 )		5617994	2					
ANR	5618125	Condition	dist == 2 || dist == 4	638:7:25251:25272	5617994	0	True				
ANR	5618126	OrExpression	dist == 2 || dist == 4		5617994	0		||			
ANR	5618127	EqualityExpression	dist == 2		5617994	0		==			
ANR	5618128	Identifier	dist		5617994	0					
ANR	5618129	PrimaryExpression	2		5617994	1					
ANR	5618130	EqualityExpression	dist == 4		5617994	1		==			
ANR	5618131	Identifier	dist		5617994	0					
ANR	5618132	PrimaryExpression	4		5617994	1					
ANR	5618133	CompoundStatement		16:31:473:473	5617994	1					
ANR	5618134	ExpressionStatement	"setModuleBounded ( qrcode , 3 + j , 3 + i , false )"	639:4:25281:25327	5617994	0	True				
ANR	5618135	CallExpression	"setModuleBounded ( qrcode , 3 + j , 3 + i , false )"		5617994	0					
ANR	5618136	Callee	setModuleBounded		5617994	0					
ANR	5618137	Identifier	setModuleBounded		5617994	0					
ANR	5618138	ArgumentList	qrcode		5617994	1					
ANR	5618139	Argument	qrcode		5617994	0					
ANR	5618140	Identifier	qrcode		5617994	0					
ANR	5618141	Argument	3 + j		5617994	1					
ANR	5618142	AdditiveExpression	3 + j		5617994	0		+			
ANR	5618143	PrimaryExpression	3		5617994	0					
ANR	5618144	Identifier	j		5617994	1					
ANR	5618145	Argument	3 + i		5617994	2					
ANR	5618146	AdditiveExpression	3 + i		5617994	0		+			
ANR	5618147	PrimaryExpression	3		5617994	0					
ANR	5618148	Identifier	i		5617994	1					
ANR	5618149	Argument	false		5617994	3					
ANR	5618150	Identifier	false		5617994	0					
ANR	5618151	ExpressionStatement	"setModuleBounded ( qrcode , qrsize - 4 + j , 3 + i , false )"	640:4:25333:25388	5617994	1	True				
ANR	5618152	CallExpression	"setModuleBounded ( qrcode , qrsize - 4 + j , 3 + i , false )"		5617994	0					
ANR	5618153	Callee	setModuleBounded		5617994	0					
ANR	5618154	Identifier	setModuleBounded		5617994	0					
ANR	5618155	ArgumentList	qrcode		5617994	1					
ANR	5618156	Argument	qrcode		5617994	0					
ANR	5618157	Identifier	qrcode		5617994	0					
ANR	5618158	Argument	qrsize - 4 + j		5617994	1					
ANR	5618159	AdditiveExpression	qrsize - 4 + j		5617994	0		-			
ANR	5618160	Identifier	qrsize		5617994	0					
ANR	5618161	AdditiveExpression	4 + j		5617994	1		+			
ANR	5618162	PrimaryExpression	4		5617994	0					
ANR	5618163	Identifier	j		5617994	1					
ANR	5618164	Argument	3 + i		5617994	2					
ANR	5618165	AdditiveExpression	3 + i		5617994	0		+			
ANR	5618166	PrimaryExpression	3		5617994	0					
ANR	5618167	Identifier	i		5617994	1					
ANR	5618168	Argument	false		5617994	3					
ANR	5618169	Identifier	false		5617994	0					
ANR	5618170	ExpressionStatement	"setModuleBounded ( qrcode , 3 + j , qrsize - 4 + i , false )"	641:4:25394:25449	5617994	2	True				
ANR	5618171	CallExpression	"setModuleBounded ( qrcode , 3 + j , qrsize - 4 + i , false )"		5617994	0					
ANR	5618172	Callee	setModuleBounded		5617994	0					
ANR	5618173	Identifier	setModuleBounded		5617994	0					
ANR	5618174	ArgumentList	qrcode		5617994	1					
ANR	5618175	Argument	qrcode		5617994	0					
ANR	5618176	Identifier	qrcode		5617994	0					
ANR	5618177	Argument	3 + j		5617994	1					
ANR	5618178	AdditiveExpression	3 + j		5617994	0		+			
ANR	5618179	PrimaryExpression	3		5617994	0					
ANR	5618180	Identifier	j		5617994	1					
ANR	5618181	Argument	qrsize - 4 + i		5617994	2					
ANR	5618182	AdditiveExpression	qrsize - 4 + i		5617994	0		-			
ANR	5618183	Identifier	qrsize		5617994	0					
ANR	5618184	AdditiveExpression	4 + i		5617994	1		+			
ANR	5618185	PrimaryExpression	4		5617994	0					
ANR	5618186	Identifier	i		5617994	1					
ANR	5618187	Argument	false		5617994	3					
ANR	5618188	Identifier	false		5617994	0					
ANR	5618189	IdentifierDeclStatement	ut8 alignPatPos [ 7 ] = { 0 } ;	647:1:25502:25531	5617994	3	True				
ANR	5618190	IdentifierDecl	alignPatPos [ 7 ] = { 0 }		5617994	0					
ANR	5618191	IdentifierDeclType	ut8 [ 7 ]		5617994	0					
ANR	5618192	Identifier	alignPatPos		5617994	1					
ANR	5618193	PrimaryExpression	7		5617994	2					
ANR	5618194	AssignmentExpression	alignPatPos [ 7 ] = { 0 }		5617994	3		=			
ANR	5618195	Identifier	alignPatPos		5617994	0					
ANR	5618196	InitializerList	0		5617994	1					
ANR	5618197	PrimaryExpression	0		5617994	0					
ANR	5618198	IdentifierDeclStatement	"int numAlign = getAlignmentPatternPositions ( version , alignPatPos ) ;"	650:1:25534:25600	5617994	4	True				
ANR	5618199	IdentifierDecl	"numAlign = getAlignmentPatternPositions ( version , alignPatPos )"		5617994	0					
ANR	5618200	IdentifierDeclType	int		5617994	0					
ANR	5618201	Identifier	numAlign		5617994	1					
ANR	5618202	AssignmentExpression	"numAlign = getAlignmentPatternPositions ( version , alignPatPos )"		5617994	2		=			
ANR	5618203	Identifier	numAlign		5617994	0					
ANR	5618204	CallExpression	"getAlignmentPatternPositions ( version , alignPatPos )"		5617994	1					
ANR	5618205	Callee	getAlignmentPatternPositions		5617994	0					
ANR	5618206	Identifier	getAlignmentPatternPositions		5617994	0					
ANR	5618207	ArgumentList	version		5617994	1					
ANR	5618208	Argument	version		5617994	0					
ANR	5618209	Identifier	version		5617994	0					
ANR	5618210	Argument	alignPatPos		5617994	1					
ANR	5618211	Identifier	alignPatPos		5617994	0					
ANR	5618212	ForStatement	for ( i = 0 ; i < numAlign ; i ++ )		5617994	5					
ANR	5618213	ForInit	i = 0 ;	651:6:25608:25613	5617994	0	True				
ANR	5618214	AssignmentExpression	i = 0		5617994	0		=			
ANR	5618215	Identifier	i		5617994	0					
ANR	5618216	PrimaryExpression	0		5617994	1					
ANR	5618217	Condition	i < numAlign	651:13:25615:25626	5617994	1	True				
ANR	5618218	RelationalExpression	i < numAlign		5617994	0		<			
ANR	5618219	Identifier	i		5617994	0					
ANR	5618220	Identifier	numAlign		5617994	1					
ANR	5618221	PostIncDecOperationExpression	i ++	651:27:25629:25631	5617994	2	True				
ANR	5618222	Identifier	i		5617994	0					
ANR	5618223	IncDec	++		5617994	1					
ANR	5618224	CompoundStatement		29:32:832:832	5617994	3					
ANR	5618225	ForStatement	for ( j = 0 ; j < numAlign ; j ++ )		5617994	0					
ANR	5618226	ForInit	j = 0 ;	652:7:25643:25648	5617994	0	True				
ANR	5618227	AssignmentExpression	j = 0		5617994	0		=			
ANR	5618228	Identifier	j		5617994	0					
ANR	5618229	PrimaryExpression	0		5617994	1					
ANR	5618230	Condition	j < numAlign	652:14:25650:25661	5617994	1	True				
ANR	5618231	RelationalExpression	j < numAlign		5617994	0		<			
ANR	5618232	Identifier	j		5617994	0					
ANR	5618233	Identifier	numAlign		5617994	1					
ANR	5618234	PostIncDecOperationExpression	j ++	652:28:25664:25666	5617994	2	True				
ANR	5618235	Identifier	j		5617994	0					
ANR	5618236	IncDec	++		5617994	1					
ANR	5618237	CompoundStatement		30:33:867:867	5617994	3					
ANR	5618238	IfStatement	if ( ( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 ) )		5617994	0					
ANR	5618239	Condition	( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )	653:7:25678:25761	5617994	0	True				
ANR	5618240	OrExpression	( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )		5617994	0		||			
ANR	5618241	AndExpression	i == 0 && j == 0		5617994	0		&&			
ANR	5618242	EqualityExpression	i == 0		5617994	0		==			
ANR	5618243	Identifier	i		5617994	0					
ANR	5618244	PrimaryExpression	0		5617994	1					
ANR	5618245	EqualityExpression	j == 0		5617994	1		==			
ANR	5618246	Identifier	j		5617994	0					
ANR	5618247	PrimaryExpression	0		5617994	1					
ANR	5618248	OrExpression	( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )		5617994	1		||			
ANR	5618249	AndExpression	i == 0 && j == numAlign - 1		5617994	0		&&			
ANR	5618250	EqualityExpression	i == 0		5617994	0		==			
ANR	5618251	Identifier	i		5617994	0					
ANR	5618252	PrimaryExpression	0		5617994	1					
ANR	5618253	EqualityExpression	j == numAlign - 1		5617994	1		==			
ANR	5618254	Identifier	j		5617994	0					
ANR	5618255	AdditiveExpression	numAlign - 1		5617994	1		-			
ANR	5618256	Identifier	numAlign		5617994	0					
ANR	5618257	PrimaryExpression	1		5617994	1					
ANR	5618258	AndExpression	i == numAlign - 1 && j == 0		5617994	1		&&			
ANR	5618259	EqualityExpression	i == numAlign - 1		5617994	0		==			
ANR	5618260	Identifier	i		5617994	0					
ANR	5618261	AdditiveExpression	numAlign - 1		5617994	1		-			
ANR	5618262	Identifier	numAlign		5617994	0					
ANR	5618263	PrimaryExpression	1		5617994	1					
ANR	5618264	EqualityExpression	j == 0		5617994	1		==			
ANR	5618265	Identifier	j		5617994	0					
ANR	5618266	PrimaryExpression	0		5617994	1					
ANR	5618267	CompoundStatement		31:93:962:962	5617994	1					
ANR	5618268	ContinueStatement	continue ;	654:4:25770:25778	5617994	0	True				
ANR	5618269	ForStatement	for ( k = - 1 ; k <= 1 ; k ++ )		5617994	1					
ANR	5618270	ForInit	k = - 1 ;	656:8:25826:25832	5617994	0	True				
ANR	5618271	AssignmentExpression	k = - 1		5617994	0		=			
ANR	5618272	Identifier	k		5617994	0					
ANR	5618273	UnaryOperationExpression	- 1		5617994	1					
ANR	5618274	UnaryOperator	-		5617994	0					
ANR	5618275	PrimaryExpression	1		5617994	1					
ANR	5618276	Condition	k <= 1	656:16:25834:25839	5617994	1	True				
ANR	5618277	RelationalExpression	k <= 1		5617994	0		<=			
ANR	5618278	Identifier	k		5617994	0					
ANR	5618279	PrimaryExpression	1		5617994	1					
ANR	5618280	PostIncDecOperationExpression	k ++	656:24:25842:25844	5617994	2	True				
ANR	5618281	Identifier	k		5617994	0					
ANR	5618282	IncDec	++		5617994	1					
ANR	5618283	CompoundStatement		34:29:1045:1045	5617994	3					
ANR	5618284	ForStatement	for ( l = - 1 ; l <= 1 ; l ++ )		5617994	0					
ANR	5618285	ForInit	l = - 1 ;	657:9:25858:25864	5617994	0	True				
ANR	5618286	AssignmentExpression	l = - 1		5617994	0		=			
ANR	5618287	Identifier	l		5617994	0					
ANR	5618288	UnaryOperationExpression	- 1		5617994	1					
ANR	5618289	UnaryOperator	-		5617994	0					
ANR	5618290	PrimaryExpression	1		5617994	1					
ANR	5618291	Condition	l <= 1	657:17:25866:25871	5617994	1	True				
ANR	5618292	RelationalExpression	l <= 1		5617994	0		<=			
ANR	5618293	Identifier	l		5617994	0					
ANR	5618294	PrimaryExpression	1		5617994	1					
ANR	5618295	PostIncDecOperationExpression	l ++	657:25:25874:25876	5617994	2	True				
ANR	5618296	Identifier	l		5617994	0					
ANR	5618297	IncDec	++		5617994	1					
ANR	5618298	CompoundStatement		35:30:1077:1077	5617994	3					
ANR	5618299	ExpressionStatement	"setModule ( qrcode , alignPatPos [ i ] + l , alignPatPos [ j ] + k , k == 0 && l == 0 )"	658:5:25886:25962	5617994	0	True				
ANR	5618300	CallExpression	"setModule ( qrcode , alignPatPos [ i ] + l , alignPatPos [ j ] + k , k == 0 && l == 0 )"		5617994	0					
ANR	5618301	Callee	setModule		5617994	0					
ANR	5618302	Identifier	setModule		5617994	0					
ANR	5618303	ArgumentList	qrcode		5617994	1					
ANR	5618304	Argument	qrcode		5617994	0					
ANR	5618305	Identifier	qrcode		5617994	0					
ANR	5618306	Argument	alignPatPos [ i ] + l		5617994	1					
ANR	5618307	AdditiveExpression	alignPatPos [ i ] + l		5617994	0		+			
ANR	5618308	ArrayIndexing	alignPatPos [ i ]		5617994	0					
ANR	5618309	Identifier	alignPatPos		5617994	0					
ANR	5618310	Identifier	i		5617994	1					
ANR	5618311	Identifier	l		5617994	1					
ANR	5618312	Argument	alignPatPos [ j ] + k		5617994	2					
ANR	5618313	AdditiveExpression	alignPatPos [ j ] + k		5617994	0		+			
ANR	5618314	ArrayIndexing	alignPatPos [ j ]		5617994	0					
ANR	5618315	Identifier	alignPatPos		5617994	0					
ANR	5618316	Identifier	j		5617994	1					
ANR	5618317	Identifier	k		5617994	1					
ANR	5618318	Argument	k == 0 && l == 0		5617994	3					
ANR	5618319	AndExpression	k == 0 && l == 0		5617994	0		&&			
ANR	5618320	EqualityExpression	k == 0		5617994	0		==			
ANR	5618321	Identifier	k		5617994	0					
ANR	5618322	PrimaryExpression	0		5617994	1					
ANR	5618323	EqualityExpression	l == 0		5617994	1		==			
ANR	5618324	Identifier	l		5617994	0					
ANR	5618325	PrimaryExpression	0		5617994	1					
ANR	5618326	IfStatement	if ( version >= 7 )		5617994	6					
ANR	5618327	Condition	version >= 7	665:5:26012:26023	5617994	0	True				
ANR	5618328	RelationalExpression	version >= 7		5617994	0		>=			
ANR	5618329	Identifier	version		5617994	0					
ANR	5618330	PrimaryExpression	7		5617994	1					
ANR	5618331	CompoundStatement		49:2:1427:1467	5617994	1					
ANR	5618332	IdentifierDeclStatement	"int i , j , rem = version ;"	667:2:26081:26104	5617994	0	True				
ANR	5618333	IdentifierDecl	i		5617994	0					
ANR	5618334	IdentifierDeclType	int		5617994	0					
ANR	5618335	Identifier	i		5617994	1					
ANR	5618336	IdentifierDecl	j		5617994	1					
ANR	5618337	IdentifierDeclType	int		5617994	0					
ANR	5618338	Identifier	j		5617994	1					
ANR	5618339	IdentifierDecl	rem = version		5617994	2					
ANR	5618340	IdentifierDeclType	int		5617994	0					
ANR	5618341	Identifier	rem		5617994	1					
ANR	5618342	AssignmentExpression	rem = version		5617994	2		=			
ANR	5618343	Identifier	version		5617994	0					
ANR	5618344	Identifier	version		5617994	1					
ANR	5618345	ForStatement	for ( i = 0 ; i < 12 ; i ++ )		5617994	1					
ANR	5618346	ForInit	i = 0 ;	668:7:26155:26160	5617994	0	True				
ANR	5618347	AssignmentExpression	i = 0		5617994	0		=			
ANR	5618348	Identifier	i		5617994	0					
ANR	5618349	PrimaryExpression	0		5617994	1					
ANR	5618350	Condition	i < 12	668:14:26162:26167	5617994	1	True				
ANR	5618351	RelationalExpression	i < 12		5617994	0		<			
ANR	5618352	Identifier	i		5617994	0					
ANR	5618353	PrimaryExpression	12		5617994	1					
ANR	5618354	PostIncDecOperationExpression	i ++	668:22:26170:26172	5617994	2	True				
ANR	5618355	Identifier	i		5617994	0					
ANR	5618356	IncDec	++		5617994	1					
ANR	5618357	CompoundStatement		46:27:1373:1373	5617994	3					
ANR	5618358	ExpressionStatement	rem = ( rem << 1 ) ^ ( ( rem >> 11 ) * 0x1F25 )	669:3:26180:26221	5617994	0	True				
ANR	5618359	AssignmentExpression	rem = ( rem << 1 ) ^ ( ( rem >> 11 ) * 0x1F25 )		5617994	0		=			
ANR	5618360	Identifier	rem		5617994	0					
ANR	5618361	ExclusiveOrExpression	( rem << 1 ) ^ ( ( rem >> 11 ) * 0x1F25 )		5617994	1		^			
ANR	5618362	ShiftExpression	rem << 1		5617994	0		<<			
ANR	5618363	Identifier	rem		5617994	0					
ANR	5618364	PrimaryExpression	1		5617994	1					
ANR	5618365	MultiplicativeExpression	( rem >> 11 ) * 0x1F25		5617994	1		*			
ANR	5618366	ShiftExpression	rem >> 11		5617994	0		>>			
ANR	5618367	Identifier	rem		5617994	0					
ANR	5618368	PrimaryExpression	11		5617994	1					
ANR	5618369	PrimaryExpression	0x1F25		5617994	1					
ANR	5618370	IdentifierDeclStatement	ut32 data = ( ( ut32 ) version << 12 ) | rem ;	671:2:26229:26269	5617994	2	True				
ANR	5618371	IdentifierDecl	data = ( ( ut32 ) version << 12 ) | rem		5617994	0					
ANR	5618372	IdentifierDeclType	ut32		5617994	0					
ANR	5618373	Identifier	data		5617994	1					
ANR	5618374	AssignmentExpression	data = ( ( ut32 ) version << 12 ) | rem		5617994	2		=			
ANR	5618375	Identifier	data		5617994	0					
ANR	5618376	InclusiveOrExpression	( ( ut32 ) version << 12 ) | rem		5617994	1		|			
ANR	5618377	ShiftExpression	( ut32 ) version << 12		5617994	0		<<			
ANR	5618378	CastExpression	( ut32 ) version		5617994	0					
ANR	5618379	CastTarget	ut32		5617994	0					
ANR	5618380	Identifier	version		5617994	1					
ANR	5618381	PrimaryExpression	12		5617994	1					
ANR	5618382	Identifier	rem		5617994	1					
ANR	5618383	IfStatement	if ( data >> 18 )		5617994	3					
ANR	5618384	Condition	data >> 18	672:6:26287:26296	5617994	0	True				
ANR	5618385	ShiftExpression	data >> 18		5617994	0		>>			
ANR	5618386	Identifier	data		5617994	0					
ANR	5618387	PrimaryExpression	18		5617994	1					
ANR	5618388	CompoundStatement		50:18:1497:1497	5617994	1					
ANR	5618389	ReturnStatement	return ;	673:3:26304:26310	5617994	0	True				
ANR	5618390	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		5617994	4					
ANR	5618391	ForInit	i = 0 ;	677:7:26345:26350	5617994	0	True				
ANR	5618392	AssignmentExpression	i = 0		5617994	0		=			
ANR	5618393	Identifier	i		5617994	0					
ANR	5618394	PrimaryExpression	0		5617994	1					
ANR	5618395	Condition	i < 6	677:14:26352:26356	5617994	1	True				
ANR	5618396	RelationalExpression	i < 6		5617994	0		<			
ANR	5618397	Identifier	i		5617994	0					
ANR	5618398	PrimaryExpression	6		5617994	1					
ANR	5618399	PostIncDecOperationExpression	i ++	677:21:26359:26361	5617994	2	True				
ANR	5618400	Identifier	i		5617994	0					
ANR	5618401	IncDec	++		5617994	1					
ANR	5618402	CompoundStatement		55:26:1562:1562	5617994	3					
ANR	5618403	ForStatement	for ( j = 0 ; j < 3 ; j ++ )		5617994	0					
ANR	5618404	ForInit	j = 0 ;	678:8:26374:26379	5617994	0	True				
ANR	5618405	AssignmentExpression	j = 0		5617994	0		=			
ANR	5618406	Identifier	j		5617994	0					
ANR	5618407	PrimaryExpression	0		5617994	1					
ANR	5618408	Condition	j < 3	678:15:26381:26385	5617994	1	True				
ANR	5618409	RelationalExpression	j < 3		5617994	0		<			
ANR	5618410	Identifier	j		5617994	0					
ANR	5618411	PrimaryExpression	3		5617994	1					
ANR	5618412	PostIncDecOperationExpression	j ++	678:22:26388:26390	5617994	2	True				
ANR	5618413	Identifier	j		5617994	0					
ANR	5618414	IncDec	++		5617994	1					
ANR	5618415	CompoundStatement		57:4:1597:1620	5617994	3					
ANR	5618416	IdentifierDeclStatement	int k = qrsize - 11 + j ;	679:4:26399:26422	5617994	0	True				
ANR	5618417	IdentifierDecl	k = qrsize - 11 + j		5617994	0					
ANR	5618418	IdentifierDeclType	int		5617994	0					
ANR	5618419	Identifier	k		5617994	1					
ANR	5618420	AssignmentExpression	k = qrsize - 11 + j		5617994	2		=			
ANR	5618421	Identifier	k		5617994	0					
ANR	5618422	AdditiveExpression	qrsize - 11 + j		5617994	1		-			
ANR	5618423	Identifier	qrsize		5617994	0					
ANR	5618424	AdditiveExpression	11 + j		5617994	1		+			
ANR	5618425	PrimaryExpression	11		5617994	0					
ANR	5618426	Identifier	j		5617994	1					
ANR	5618427	ExpressionStatement	"setModule ( qrcode , k , i , ( data & 1 ) != 0 )"	680:4:26428:26469	5617994	1	True				
ANR	5618428	CallExpression	"setModule ( qrcode , k , i , ( data & 1 ) != 0 )"		5617994	0					
ANR	5618429	Callee	setModule		5617994	0					
ANR	5618430	Identifier	setModule		5617994	0					
ANR	5618431	ArgumentList	qrcode		5617994	1					
ANR	5618432	Argument	qrcode		5617994	0					
ANR	5618433	Identifier	qrcode		5617994	0					
ANR	5618434	Argument	k		5617994	1					
ANR	5618435	Identifier	k		5617994	0					
ANR	5618436	Argument	i		5617994	2					
ANR	5618437	Identifier	i		5617994	0					
ANR	5618438	Argument	( data & 1 ) != 0		5617994	3					
ANR	5618439	EqualityExpression	( data & 1 ) != 0		5617994	0		!=			
ANR	5618440	BitAndExpression	data & 1		5617994	0		&			
ANR	5618441	Identifier	data		5617994	0					
ANR	5618442	PrimaryExpression	1		5617994	1					
ANR	5618443	PrimaryExpression	0		5617994	1					
ANR	5618444	ExpressionStatement	"setModule ( qrcode , i , k , ( data & 1 ) != 0 )"	681:4:26475:26516	5617994	2	True				
ANR	5618445	CallExpression	"setModule ( qrcode , i , k , ( data & 1 ) != 0 )"		5617994	0					
ANR	5618446	Callee	setModule		5617994	0					
ANR	5618447	Identifier	setModule		5617994	0					
ANR	5618448	ArgumentList	qrcode		5617994	1					
ANR	5618449	Argument	qrcode		5617994	0					
ANR	5618450	Identifier	qrcode		5617994	0					
ANR	5618451	Argument	i		5617994	1					
ANR	5618452	Identifier	i		5617994	0					
ANR	5618453	Argument	k		5617994	2					
ANR	5618454	Identifier	k		5617994	0					
ANR	5618455	Argument	( data & 1 ) != 0		5617994	3					
ANR	5618456	EqualityExpression	( data & 1 ) != 0		5617994	0		!=			
ANR	5618457	BitAndExpression	data & 1		5617994	0		&			
ANR	5618458	Identifier	data		5617994	0					
ANR	5618459	PrimaryExpression	1		5617994	1					
ANR	5618460	PrimaryExpression	0		5617994	1					
ANR	5618461	ExpressionStatement	data >>= 1	682:4:26522:26532	5617994	3	True				
ANR	5618462	AssignmentExpression	data >>= 1		5617994	0		>>=			
ANR	5618463	Identifier	data		5617994	0					
ANR	5618464	PrimaryExpression	1		5617994	1					
ANR	5618465	ReturnType	static void		5617994	1					
ANR	5618466	Identifier	drawWhiteFunctionModules		5617994	2					
ANR	5618467	ParameterList	"ut8 qrcode [ ] , int version"		5617994	3					
ANR	5618468	Parameter	ut8 qrcode [ ]	623:37:24774:24785	5617994	0	True				
ANR	5618469	ParameterType	ut8 [ ]		5617994	0					
ANR	5618470	Identifier	qrcode		5617994	1					
ANR	5618471	Parameter	int version	623:51:24788:24798	5617994	1	True				
ANR	5618472	ParameterType	int		5617994	0					
ANR	5618473	Identifier	version		5617994	1					
ANR	5618474	CFGEntryNode	ENTRY		5617994		True				
ANR	5618475	CFGExitNode	EXIT		5617994		True				
ANR	5618476	Symbol	data		5617994						
ANR	5618477	Symbol	qrcode		5617994						
ANR	5618478	Symbol	false		5617994						
ANR	5618479	Symbol	i		5617994						
ANR	5618480	Symbol	qrcodegen_getSize		5617994						
ANR	5618481	Symbol	dist		5617994						
ANR	5618482	Symbol	j		5617994						
ANR	5618483	Symbol	k		5617994						
ANR	5618484	Symbol	l		5617994						
ANR	5618485	Symbol	version		5617994						
ANR	5618486	Symbol	qrsize		5617994						
ANR	5618487	Symbol	getAlignmentPatternPositions		5617994						
ANR	5618488	Symbol	abs		5617994						
ANR	5618489	Symbol	* i		5617994						
ANR	5618490	Symbol	* j		5617994						
ANR	5618491	Symbol	alignPatPos		5617994						
ANR	5618492	Symbol	rem		5617994						
ANR	5618493	Symbol	numAlign		5617994						
ANR	5618494	Symbol	* alignPatPos		5617994						
ANR	5618495	Function	drawFormatBits	692:0:26800:28118							
ANR	5618496	FunctionDef	"drawFormatBits (enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , ut8 qrcode [ ])"		5618495	0					
ANR	5618497	CompoundStatement		692:91:26891:28118	5618495	0					
ANR	5618498	IfStatement	if ( mask < 0 || mask > 7 )		5618495	0					
ANR	5618499	Condition	mask < 0 || mask > 7	694:5:26948:26967	5618495	0	True				
ANR	5618500	OrExpression	mask < 0 || mask > 7		5618495	0		||			
ANR	5618501	RelationalExpression	mask < 0		5618495	0		<			
ANR	5618502	Identifier	mask		5618495	0					
ANR	5618503	PrimaryExpression	0		5618495	1					
ANR	5618504	RelationalExpression	mask > 7		5618495	1		>			
ANR	5618505	Identifier	mask		5618495	0					
ANR	5618506	PrimaryExpression	7		5618495	1					
ANR	5618507	CompoundStatement		3:27:78:78	5618495	1					
ANR	5618508	ReturnStatement	return ;	695:2:26974:26980	5618495	0	True				
ANR	5618509	IdentifierDeclStatement	int data ;	697:1:26986:26994	5618495	1	True				
ANR	5618510	IdentifierDecl	data		5618495	0					
ANR	5618511	IdentifierDeclType	int		5618495	0					
ANR	5618512	Identifier	data		5618495	1					
ANR	5618513	SwitchStatement	switch ( ecl )		5618495	2					
ANR	5618514	Condition	ecl	698:9:27005:27007	5618495	0	True				
ANR	5618515	Identifier	ecl		5618495	0					
ANR	5618516	CompoundStatement		7:14:118:118	5618495	1					
ANR	5618517	Label	case qrcodegen_Ecc_LOW :	699:1:27013:27035	5618495	0	True				
ANR	5618518	Identifier	qrcodegen_Ecc_LOW		5618495	0					
ANR	5618519	ExpressionStatement	data = 1	699:26:27038:27046	5618495	1	True				
ANR	5618520	AssignmentExpression	data = 1		5618495	0		=			
ANR	5618521	Identifier	data		5618495	0					
ANR	5618522	PrimaryExpression	1		5618495	1					
ANR	5618523	BreakStatement	break ;	699:37:27049:27054	5618495	2	True				
ANR	5618524	Label	case qrcodegen_Ecc_MEDIUM :	700:1:27057:27082	5618495	3	True				
ANR	5618525	Identifier	qrcodegen_Ecc_MEDIUM		5618495	0					
ANR	5618526	ExpressionStatement	data = 0	700:29:27085:27093	5618495	4	True				
ANR	5618527	AssignmentExpression	data = 0		5618495	0		=			
ANR	5618528	Identifier	data		5618495	0					
ANR	5618529	PrimaryExpression	0		5618495	1					
ANR	5618530	BreakStatement	break ;	700:40:27096:27101	5618495	5	True				
ANR	5618531	Label	case qrcodegen_Ecc_QUARTILE :	701:1:27104:27131	5618495	6	True				
ANR	5618532	Identifier	qrcodegen_Ecc_QUARTILE		5618495	0					
ANR	5618533	ExpressionStatement	data = 3	701:31:27134:27142	5618495	7	True				
ANR	5618534	AssignmentExpression	data = 3		5618495	0		=			
ANR	5618535	Identifier	data		5618495	0					
ANR	5618536	PrimaryExpression	3		5618495	1					
ANR	5618537	BreakStatement	break ;	701:42:27145:27150	5618495	8	True				
ANR	5618538	Label	case qrcodegen_Ecc_HIGH :	702:1:27153:27176	5618495	9	True				
ANR	5618539	Identifier	qrcodegen_Ecc_HIGH		5618495	0					
ANR	5618540	ExpressionStatement	data = 2	702:27:27179:27187	5618495	10	True				
ANR	5618541	AssignmentExpression	data = 2		5618495	0		=			
ANR	5618542	Identifier	data		5618495	0					
ANR	5618543	PrimaryExpression	2		5618495	1					
ANR	5618544	BreakStatement	break ;	702:38:27190:27195	5618495	11	True				
ANR	5618545	Label	default :	703:1:27198:27205	5618495	12	True				
ANR	5618546	Identifier	default		5618495	0					
ANR	5618547	ReturnStatement	return ;	703:10:27207:27213	5618495	13	True				
ANR	5618548	ExpressionStatement	data = data << 3 | ( int ) mask	705:1:27219:27248	5618495	3	True				
ANR	5618549	AssignmentExpression	data = data << 3 | ( int ) mask		5618495	0		=			
ANR	5618550	Identifier	data		5618495	0					
ANR	5618551	InclusiveOrExpression	data << 3 | ( int ) mask		5618495	1		|			
ANR	5618552	ShiftExpression	data << 3		5618495	0		<<			
ANR	5618553	Identifier	data		5618495	0					
ANR	5618554	PrimaryExpression	3		5618495	1					
ANR	5618555	CastExpression	( int ) mask		5618495	1					
ANR	5618556	CastTarget	int		5618495	0					
ANR	5618557	Identifier	mask		5618495	1					
ANR	5618558	IdentifierDeclStatement	"int i , rem = data ;"	706:1:27296:27313	5618495	4	True				
ANR	5618559	IdentifierDecl	i		5618495	0					
ANR	5618560	IdentifierDeclType	int		5618495	0					
ANR	5618561	Identifier	i		5618495	1					
ANR	5618562	IdentifierDecl	rem = data		5618495	1					
ANR	5618563	IdentifierDeclType	int		5618495	0					
ANR	5618564	Identifier	rem		5618495	1					
ANR	5618565	AssignmentExpression	rem = data		5618495	2		=			
ANR	5618566	Identifier	data		5618495	0					
ANR	5618567	Identifier	data		5618495	1					
ANR	5618568	ForStatement	for ( i = 0 ; i < 10 ; i ++ )		5618495	5					
ANR	5618569	ForInit	i = 0 ;	707:6:27321:27326	5618495	0	True				
ANR	5618570	AssignmentExpression	i = 0		5618495	0		=			
ANR	5618571	Identifier	i		5618495	0					
ANR	5618572	PrimaryExpression	0		5618495	1					
ANR	5618573	Condition	i < 10	707:13:27328:27333	5618495	1	True				
ANR	5618574	RelationalExpression	i < 10		5618495	0		<			
ANR	5618575	Identifier	i		5618495	0					
ANR	5618576	PrimaryExpression	10		5618495	1					
ANR	5618577	PostIncDecOperationExpression	i ++	707:21:27336:27338	5618495	2	True				
ANR	5618578	Identifier	i		5618495	0					
ANR	5618579	IncDec	++		5618495	1					
ANR	5618580	CompoundStatement		16:26:449:449	5618495	3					
ANR	5618581	ExpressionStatement	rem = ( rem << 1 ) ^ ( ( rem >> 9 ) * 0x537 )	708:2:27345:27384	5618495	0	True				
ANR	5618582	AssignmentExpression	rem = ( rem << 1 ) ^ ( ( rem >> 9 ) * 0x537 )		5618495	0		=			
ANR	5618583	Identifier	rem		5618495	0					
ANR	5618584	ExclusiveOrExpression	( rem << 1 ) ^ ( ( rem >> 9 ) * 0x537 )		5618495	1		^			
ANR	5618585	ShiftExpression	rem << 1		5618495	0		<<			
ANR	5618586	Identifier	rem		5618495	0					
ANR	5618587	PrimaryExpression	1		5618495	1					
ANR	5618588	MultiplicativeExpression	( rem >> 9 ) * 0x537		5618495	1		*			
ANR	5618589	ShiftExpression	rem >> 9		5618495	0		>>			
ANR	5618590	Identifier	rem		5618495	0					
ANR	5618591	PrimaryExpression	9		5618495	1					
ANR	5618592	PrimaryExpression	0x537		5618495	1					
ANR	5618593	ExpressionStatement	data = data << 10 | rem	710:1:27390:27413	5618495	6	True				
ANR	5618594	AssignmentExpression	data = data << 10 | rem		5618495	0		=			
ANR	5618595	Identifier	data		5618495	0					
ANR	5618596	InclusiveOrExpression	data << 10 | rem		5618495	1		|			
ANR	5618597	ShiftExpression	data << 10		5618495	0		<<			
ANR	5618598	Identifier	data		5618495	0					
ANR	5618599	PrimaryExpression	10		5618495	1					
ANR	5618600	Identifier	rem		5618495	1					
ANR	5618601	ExpressionStatement	data ^= 0x5412	711:1:27416:27430	5618495	7	True				
ANR	5618602	AssignmentExpression	data ^= 0x5412		5618495	0		^=			
ANR	5618603	Identifier	data		5618495	0					
ANR	5618604	PrimaryExpression	0x5412		5618495	1					
ANR	5618605	IfStatement	if ( data >> 15 )		5618495	8					
ANR	5618606	Condition	data >> 15	712:5:27447:27456	5618495	0	True				
ANR	5618607	ShiftExpression	data >> 15		5618495	0		>>			
ANR	5618608	Identifier	data		5618495	0					
ANR	5618609	PrimaryExpression	15		5618495	1					
ANR	5618610	CompoundStatement		21:17:567:567	5618495	1					
ANR	5618611	ReturnStatement	return ;	713:2:27463:27469	5618495	0	True				
ANR	5618612	ForStatement	for ( i = 0 ; i <= 5 ; i ++ )		5618495	9					
ANR	5618613	ForInit	i = 0 ;	717:6:27501:27506	5618495	0	True				
ANR	5618614	AssignmentExpression	i = 0		5618495	0		=			
ANR	5618615	Identifier	i		5618495	0					
ANR	5618616	PrimaryExpression	0		5618495	1					
ANR	5618617	Condition	i <= 5	717:13:27508:27513	5618495	1	True				
ANR	5618618	RelationalExpression	i <= 5		5618495	0		<=			
ANR	5618619	Identifier	i		5618495	0					
ANR	5618620	PrimaryExpression	5		5618495	1					
ANR	5618621	PostIncDecOperationExpression	i ++	717:21:27516:27518	5618495	2	True				
ANR	5618622	Identifier	i		5618495	0					
ANR	5618623	IncDec	++		5618495	1					
ANR	5618624	CompoundStatement		26:26:629:629	5618495	3					
ANR	5618625	ExpressionStatement	"setModule ( qrcode , 8 , i , ( ( data >> i ) & 1 ) != 0 )"	718:2:27525:27573	5618495	0	True				
ANR	5618626	CallExpression	"setModule ( qrcode , 8 , i , ( ( data >> i ) & 1 ) != 0 )"		5618495	0					
ANR	5618627	Callee	setModule		5618495	0					
ANR	5618628	Identifier	setModule		5618495	0					
ANR	5618629	ArgumentList	qrcode		5618495	1					
ANR	5618630	Argument	qrcode		5618495	0					
ANR	5618631	Identifier	qrcode		5618495	0					
ANR	5618632	Argument	8		5618495	1					
ANR	5618633	PrimaryExpression	8		5618495	0					
ANR	5618634	Argument	i		5618495	2					
ANR	5618635	Identifier	i		5618495	0					
ANR	5618636	Argument	( ( data >> i ) & 1 ) != 0		5618495	3					
ANR	5618637	EqualityExpression	( ( data >> i ) & 1 ) != 0		5618495	0		!=			
ANR	5618638	BitAndExpression	( data >> i ) & 1		5618495	0		&			
ANR	5618639	ShiftExpression	data >> i		5618495	0		>>			
ANR	5618640	Identifier	data		5618495	0					
ANR	5618641	Identifier	i		5618495	1					
ANR	5618642	PrimaryExpression	1		5618495	1					
ANR	5618643	PrimaryExpression	0		5618495	1					
ANR	5618644	ExpressionStatement	"setModule ( qrcode , 8 , 7 , ( ( data >> 6 ) & 1 ) != 0 )"	720:1:27579:27627	5618495	10	True				
ANR	5618645	CallExpression	"setModule ( qrcode , 8 , 7 , ( ( data >> 6 ) & 1 ) != 0 )"		5618495	0					
ANR	5618646	Callee	setModule		5618495	0					
ANR	5618647	Identifier	setModule		5618495	0					
ANR	5618648	ArgumentList	qrcode		5618495	1					
ANR	5618649	Argument	qrcode		5618495	0					
ANR	5618650	Identifier	qrcode		5618495	0					
ANR	5618651	Argument	8		5618495	1					
ANR	5618652	PrimaryExpression	8		5618495	0					
ANR	5618653	Argument	7		5618495	2					
ANR	5618654	PrimaryExpression	7		5618495	0					
ANR	5618655	Argument	( ( data >> 6 ) & 1 ) != 0		5618495	3					
ANR	5618656	EqualityExpression	( ( data >> 6 ) & 1 ) != 0		5618495	0		!=			
ANR	5618657	BitAndExpression	( data >> 6 ) & 1		5618495	0		&			
ANR	5618658	ShiftExpression	data >> 6		5618495	0		>>			
ANR	5618659	Identifier	data		5618495	0					
ANR	5618660	PrimaryExpression	6		5618495	1					
ANR	5618661	PrimaryExpression	1		5618495	1					
ANR	5618662	PrimaryExpression	0		5618495	1					
ANR	5618663	ExpressionStatement	"setModule ( qrcode , 8 , 8 , ( ( data >> 7 ) & 1 ) != 0 )"	721:1:27630:27678	5618495	11	True				
ANR	5618664	CallExpression	"setModule ( qrcode , 8 , 8 , ( ( data >> 7 ) & 1 ) != 0 )"		5618495	0					
ANR	5618665	Callee	setModule		5618495	0					
ANR	5618666	Identifier	setModule		5618495	0					
ANR	5618667	ArgumentList	qrcode		5618495	1					
ANR	5618668	Argument	qrcode		5618495	0					
ANR	5618669	Identifier	qrcode		5618495	0					
ANR	5618670	Argument	8		5618495	1					
ANR	5618671	PrimaryExpression	8		5618495	0					
ANR	5618672	Argument	8		5618495	2					
ANR	5618673	PrimaryExpression	8		5618495	0					
ANR	5618674	Argument	( ( data >> 7 ) & 1 ) != 0		5618495	3					
ANR	5618675	EqualityExpression	( ( data >> 7 ) & 1 ) != 0		5618495	0		!=			
ANR	5618676	BitAndExpression	( data >> 7 ) & 1		5618495	0		&			
ANR	5618677	ShiftExpression	data >> 7		5618495	0		>>			
ANR	5618678	Identifier	data		5618495	0					
ANR	5618679	PrimaryExpression	7		5618495	1					
ANR	5618680	PrimaryExpression	1		5618495	1					
ANR	5618681	PrimaryExpression	0		5618495	1					
ANR	5618682	ExpressionStatement	"setModule ( qrcode , 7 , 8 , ( ( data >> 8 ) & 1 ) != 0 )"	722:1:27681:27729	5618495	12	True				
ANR	5618683	CallExpression	"setModule ( qrcode , 7 , 8 , ( ( data >> 8 ) & 1 ) != 0 )"		5618495	0					
ANR	5618684	Callee	setModule		5618495	0					
ANR	5618685	Identifier	setModule		5618495	0					
ANR	5618686	ArgumentList	qrcode		5618495	1					
ANR	5618687	Argument	qrcode		5618495	0					
ANR	5618688	Identifier	qrcode		5618495	0					
ANR	5618689	Argument	7		5618495	1					
ANR	5618690	PrimaryExpression	7		5618495	0					
ANR	5618691	Argument	8		5618495	2					
ANR	5618692	PrimaryExpression	8		5618495	0					
ANR	5618693	Argument	( ( data >> 8 ) & 1 ) != 0		5618495	3					
ANR	5618694	EqualityExpression	( ( data >> 8 ) & 1 ) != 0		5618495	0		!=			
ANR	5618695	BitAndExpression	( data >> 8 ) & 1		5618495	0		&			
ANR	5618696	ShiftExpression	data >> 8		5618495	0		>>			
ANR	5618697	Identifier	data		5618495	0					
ANR	5618698	PrimaryExpression	8		5618495	1					
ANR	5618699	PrimaryExpression	1		5618495	1					
ANR	5618700	PrimaryExpression	0		5618495	1					
ANR	5618701	ForStatement	for ( i = 9 ; i < 15 ; i ++ )		5618495	13					
ANR	5618702	ForInit	i = 9 ;	723:6:27737:27742	5618495	0	True				
ANR	5618703	AssignmentExpression	i = 9		5618495	0		=			
ANR	5618704	Identifier	i		5618495	0					
ANR	5618705	PrimaryExpression	9		5618495	1					
ANR	5618706	Condition	i < 15	723:13:27744:27749	5618495	1	True				
ANR	5618707	RelationalExpression	i < 15		5618495	0		<			
ANR	5618708	Identifier	i		5618495	0					
ANR	5618709	PrimaryExpression	15		5618495	1					
ANR	5618710	PostIncDecOperationExpression	i ++	723:21:27752:27754	5618495	2	True				
ANR	5618711	Identifier	i		5618495	0					
ANR	5618712	IncDec	++		5618495	1					
ANR	5618713	CompoundStatement		32:26:865:865	5618495	3					
ANR	5618714	ExpressionStatement	"setModule ( qrcode , 14 - i , 8 , ( ( data >> i ) & 1 ) != 0 )"	724:2:27761:27814	5618495	0	True				
ANR	5618715	CallExpression	"setModule ( qrcode , 14 - i , 8 , ( ( data >> i ) & 1 ) != 0 )"		5618495	0					
ANR	5618716	Callee	setModule		5618495	0					
ANR	5618717	Identifier	setModule		5618495	0					
ANR	5618718	ArgumentList	qrcode		5618495	1					
ANR	5618719	Argument	qrcode		5618495	0					
ANR	5618720	Identifier	qrcode		5618495	0					
ANR	5618721	Argument	14 - i		5618495	1					
ANR	5618722	AdditiveExpression	14 - i		5618495	0		-			
ANR	5618723	PrimaryExpression	14		5618495	0					
ANR	5618724	Identifier	i		5618495	1					
ANR	5618725	Argument	8		5618495	2					
ANR	5618726	PrimaryExpression	8		5618495	0					
ANR	5618727	Argument	( ( data >> i ) & 1 ) != 0		5618495	3					
ANR	5618728	EqualityExpression	( ( data >> i ) & 1 ) != 0		5618495	0		!=			
ANR	5618729	BitAndExpression	( data >> i ) & 1		5618495	0		&			
ANR	5618730	ShiftExpression	data >> i		5618495	0		>>			
ANR	5618731	Identifier	data		5618495	0					
ANR	5618732	Identifier	i		5618495	1					
ANR	5618733	PrimaryExpression	1		5618495	1					
ANR	5618734	PrimaryExpression	0		5618495	1					
ANR	5618735	IdentifierDeclStatement	int qrsize = qrcodegen_getSize ( qrcode ) ;	728:1:27842:27881	5618495	14	True				
ANR	5618736	IdentifierDecl	qrsize = qrcodegen_getSize ( qrcode )		5618495	0					
ANR	5618737	IdentifierDeclType	int		5618495	0					
ANR	5618738	Identifier	qrsize		5618495	1					
ANR	5618739	AssignmentExpression	qrsize = qrcodegen_getSize ( qrcode )		5618495	2		=			
ANR	5618740	Identifier	qrsize		5618495	0					
ANR	5618741	CallExpression	qrcodegen_getSize ( qrcode )		5618495	1					
ANR	5618742	Callee	qrcodegen_getSize		5618495	0					
ANR	5618743	Identifier	qrcodegen_getSize		5618495	0					
ANR	5618744	ArgumentList	qrcode		5618495	1					
ANR	5618745	Argument	qrcode		5618495	0					
ANR	5618746	Identifier	qrcode		5618495	0					
ANR	5618747	ForStatement	for ( i = 0 ; i <= 7 ; i ++ )		5618495	15					
ANR	5618748	ForInit	i = 0 ;	729:6:27889:27894	5618495	0	True				
ANR	5618749	AssignmentExpression	i = 0		5618495	0		=			
ANR	5618750	Identifier	i		5618495	0					
ANR	5618751	PrimaryExpression	0		5618495	1					
ANR	5618752	Condition	i <= 7	729:13:27896:27901	5618495	1	True				
ANR	5618753	RelationalExpression	i <= 7		5618495	0		<=			
ANR	5618754	Identifier	i		5618495	0					
ANR	5618755	PrimaryExpression	7		5618495	1					
ANR	5618756	PostIncDecOperationExpression	i ++	729:21:27904:27906	5618495	2	True				
ANR	5618757	Identifier	i		5618495	0					
ANR	5618758	IncDec	++		5618495	1					
ANR	5618759	CompoundStatement		38:26:1017:1017	5618495	3					
ANR	5618760	ExpressionStatement	"setModule ( qrcode , qrsize - 1 - i , 8 , ( ( data >> i ) & 1 ) != 0 )"	730:2:27913:27974	5618495	0	True				
ANR	5618761	CallExpression	"setModule ( qrcode , qrsize - 1 - i , 8 , ( ( data >> i ) & 1 ) != 0 )"		5618495	0					
ANR	5618762	Callee	setModule		5618495	0					
ANR	5618763	Identifier	setModule		5618495	0					
ANR	5618764	ArgumentList	qrcode		5618495	1					
ANR	5618765	Argument	qrcode		5618495	0					
ANR	5618766	Identifier	qrcode		5618495	0					
ANR	5618767	Argument	qrsize - 1 - i		5618495	1					
ANR	5618768	AdditiveExpression	qrsize - 1 - i		5618495	0		-			
ANR	5618769	Identifier	qrsize		5618495	0					
ANR	5618770	AdditiveExpression	1 - i		5618495	1		-			
ANR	5618771	PrimaryExpression	1		5618495	0					
ANR	5618772	Identifier	i		5618495	1					
ANR	5618773	Argument	8		5618495	2					
ANR	5618774	PrimaryExpression	8		5618495	0					
ANR	5618775	Argument	( ( data >> i ) & 1 ) != 0		5618495	3					
ANR	5618776	EqualityExpression	( ( data >> i ) & 1 ) != 0		5618495	0		!=			
ANR	5618777	BitAndExpression	( data >> i ) & 1		5618495	0		&			
ANR	5618778	ShiftExpression	data >> i		5618495	0		>>			
ANR	5618779	Identifier	data		5618495	0					
ANR	5618780	Identifier	i		5618495	1					
ANR	5618781	PrimaryExpression	1		5618495	1					
ANR	5618782	PrimaryExpression	0		5618495	1					
ANR	5618783	ForStatement	for ( i = 8 ; i < 15 ; i ++ )		5618495	16					
ANR	5618784	ForInit	i = 8 ;	732:6:27985:27990	5618495	0	True				
ANR	5618785	AssignmentExpression	i = 8		5618495	0		=			
ANR	5618786	Identifier	i		5618495	0					
ANR	5618787	PrimaryExpression	8		5618495	1					
ANR	5618788	Condition	i < 15	732:13:27992:27997	5618495	1	True				
ANR	5618789	RelationalExpression	i < 15		5618495	0		<			
ANR	5618790	Identifier	i		5618495	0					
ANR	5618791	PrimaryExpression	15		5618495	1					
ANR	5618792	PostIncDecOperationExpression	i ++	732:21:28000:28002	5618495	2	True				
ANR	5618793	Identifier	i		5618495	0					
ANR	5618794	IncDec	++		5618495	1					
ANR	5618795	CompoundStatement		41:26:1113:1113	5618495	3					
ANR	5618796	ExpressionStatement	"setModule ( qrcode , 8 , qrsize - 15 + i , ( ( data >> i ) & 1 ) != 0 )"	733:2:28009:28071	5618495	0	True				
ANR	5618797	CallExpression	"setModule ( qrcode , 8 , qrsize - 15 + i , ( ( data >> i ) & 1 ) != 0 )"		5618495	0					
ANR	5618798	Callee	setModule		5618495	0					
ANR	5618799	Identifier	setModule		5618495	0					
ANR	5618800	ArgumentList	qrcode		5618495	1					
ANR	5618801	Argument	qrcode		5618495	0					
ANR	5618802	Identifier	qrcode		5618495	0					
ANR	5618803	Argument	8		5618495	1					
ANR	5618804	PrimaryExpression	8		5618495	0					
ANR	5618805	Argument	qrsize - 15 + i		5618495	2					
ANR	5618806	AdditiveExpression	qrsize - 15 + i		5618495	0		-			
ANR	5618807	Identifier	qrsize		5618495	0					
ANR	5618808	AdditiveExpression	15 + i		5618495	1		+			
ANR	5618809	PrimaryExpression	15		5618495	0					
ANR	5618810	Identifier	i		5618495	1					
ANR	5618811	Argument	( ( data >> i ) & 1 ) != 0		5618495	3					
ANR	5618812	EqualityExpression	( ( data >> i ) & 1 ) != 0		5618495	0		!=			
ANR	5618813	BitAndExpression	( data >> i ) & 1		5618495	0		&			
ANR	5618814	ShiftExpression	data >> i		5618495	0		>>			
ANR	5618815	Identifier	data		5618495	0					
ANR	5618816	Identifier	i		5618495	1					
ANR	5618817	PrimaryExpression	1		5618495	1					
ANR	5618818	PrimaryExpression	0		5618495	1					
ANR	5618819	ExpressionStatement	"setModule ( qrcode , 8 , qrsize - 8 , true )"	735:1:28077:28116	5618495	17	True				
ANR	5618820	CallExpression	"setModule ( qrcode , 8 , qrsize - 8 , true )"		5618495	0					
ANR	5618821	Callee	setModule		5618495	0					
ANR	5618822	Identifier	setModule		5618495	0					
ANR	5618823	ArgumentList	qrcode		5618495	1					
ANR	5618824	Argument	qrcode		5618495	0					
ANR	5618825	Identifier	qrcode		5618495	0					
ANR	5618826	Argument	8		5618495	1					
ANR	5618827	PrimaryExpression	8		5618495	0					
ANR	5618828	Argument	qrsize - 8		5618495	2					
ANR	5618829	AdditiveExpression	qrsize - 8		5618495	0		-			
ANR	5618830	Identifier	qrsize		5618495	0					
ANR	5618831	PrimaryExpression	8		5618495	1					
ANR	5618832	Argument	true		5618495	3					
ANR	5618833	Identifier	true		5618495	0					
ANR	5618834	ReturnType	static void		5618495	1					
ANR	5618835	Identifier	drawFormatBits		5618495	2					
ANR	5618836	ParameterList	"enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , ut8 qrcode [ ]"		5618495	3					
ANR	5618837	Parameter	enum qrcodegen_Ecc ecl	692:27:26827:26848	5618495	0	True				
ANR	5618838	ParameterType	enum qrcodegen_Ecc		5618495	0					
ANR	5618839	Identifier	ecl		5618495	1					
ANR	5618840	Parameter	enum qrcodegen_Mask mask	692:51:26851:26874	5618495	1	True				
ANR	5618841	ParameterType	enum qrcodegen_Mask		5618495	0					
ANR	5618842	Identifier	mask		5618495	1					
ANR	5618843	Parameter	ut8 qrcode [ ]	692:77:26877:26888	5618495	2	True				
ANR	5618844	ParameterType	ut8 [ ]		5618495	0					
ANR	5618845	Identifier	qrcode		5618495	1					
ANR	5618846	CFGEntryNode	ENTRY		5618495		True				
ANR	5618847	CFGExitNode	EXIT		5618495		True				
ANR	5618848	Symbol	data		5618495						
ANR	5618849	Symbol	qrcode		5618495						
ANR	5618850	Symbol	true		5618495						
ANR	5618851	Symbol	i		5618495						
ANR	5618852	Symbol	qrcodegen_getSize		5618495						
ANR	5618853	Symbol	rem		5618495						
ANR	5618854	Symbol	qrsize		5618495						
ANR	5618855	Symbol	ecl		5618495						
ANR	5618856	Symbol	mask		5618495						
ANR	5618857	Function	getAlignmentPatternPositions	741:0:28307:28813							
ANR	5618858	FunctionDef	"getAlignmentPatternPositions (int version , ut8 result [ 7 ])"		5618857	0					
ANR	5618859	CompoundStatement		741:68:28375:28813	5618857	0					
ANR	5618860	IfStatement	if ( version == 1 )		5618857	0					
ANR	5618861	Condition	version == 1	742:5:28382:28393	5618857	0	True				
ANR	5618862	EqualityExpression	version == 1		5618857	0		==			
ANR	5618863	Identifier	version		5618857	0					
ANR	5618864	PrimaryExpression	1		5618857	1					
ANR	5618865	CompoundStatement		2:19:20:20	5618857	1					
ANR	5618866	ReturnStatement	return 0 ;	743:2:28400:28408	5618857	0	True				
ANR	5618867	PrimaryExpression	0		5618857	0					
ANR	5618868	IdentifierDeclStatement	int qrsize = version * 4 + 17 ;	745:1:28414:28443	5618857	1	True				
ANR	5618869	IdentifierDecl	qrsize = version * 4 + 17		5618857	0					
ANR	5618870	IdentifierDeclType	int		5618857	0					
ANR	5618871	Identifier	qrsize		5618857	1					
ANR	5618872	AssignmentExpression	qrsize = version * 4 + 17		5618857	2		=			
ANR	5618873	Identifier	qrsize		5618857	0					
ANR	5618874	AdditiveExpression	version * 4 + 17		5618857	1		+			
ANR	5618875	MultiplicativeExpression	version * 4		5618857	0		*			
ANR	5618876	Identifier	version		5618857	0					
ANR	5618877	PrimaryExpression	4		5618857	1					
ANR	5618878	PrimaryExpression	17		5618857	1					
ANR	5618879	IdentifierDeclStatement	int numAlign = version / 7 + 2 ;	746:1:28446:28476	5618857	2	True				
ANR	5618880	IdentifierDecl	numAlign = version / 7 + 2		5618857	0					
ANR	5618881	IdentifierDeclType	int		5618857	0					
ANR	5618882	Identifier	numAlign		5618857	1					
ANR	5618883	AssignmentExpression	numAlign = version / 7 + 2		5618857	2		=			
ANR	5618884	Identifier	numAlign		5618857	0					
ANR	5618885	AdditiveExpression	version / 7 + 2		5618857	1		+			
ANR	5618886	MultiplicativeExpression	version / 7		5618857	0		/			
ANR	5618887	Identifier	version		5618857	0					
ANR	5618888	PrimaryExpression	7		5618857	1					
ANR	5618889	PrimaryExpression	2		5618857	1					
ANR	5618890	IdentifierDeclStatement	"int i , step ;"	747:1:28479:28490	5618857	3	True				
ANR	5618891	IdentifierDecl	i		5618857	0					
ANR	5618892	IdentifierDeclType	int		5618857	0					
ANR	5618893	Identifier	i		5618857	1					
ANR	5618894	IdentifierDecl	step		5618857	1					
ANR	5618895	IdentifierDeclType	int		5618857	0					
ANR	5618896	Identifier	step		5618857	1					
ANR	5618897	IfStatement	if ( version != 32 )		5618857	4					
ANR	5618898	Condition	version != 32	748:5:28497:28509	5618857	0	True				
ANR	5618899	EqualityExpression	version != 32		5618857	0		!=			
ANR	5618900	Identifier	version		5618857	0					
ANR	5618901	PrimaryExpression	32		5618857	1					
ANR	5618902	CompoundStatement		8:20:136:136	5618857	1					
ANR	5618903	ExpressionStatement	step = ( version * 4 + numAlign * 2 + 1 ) / ( 2 * numAlign - 2 ) * 2	749:2:28516:28580	5618857	0	True				
ANR	5618904	AssignmentExpression	step = ( version * 4 + numAlign * 2 + 1 ) / ( 2 * numAlign - 2 ) * 2		5618857	0		=			
ANR	5618905	Identifier	step		5618857	0					
ANR	5618906	MultiplicativeExpression	( version * 4 + numAlign * 2 + 1 ) / ( 2 * numAlign - 2 ) * 2		5618857	1		/			
ANR	5618907	AdditiveExpression	version * 4 + numAlign * 2 + 1		5618857	0		+			
ANR	5618908	MultiplicativeExpression	version * 4		5618857	0		*			
ANR	5618909	Identifier	version		5618857	0					
ANR	5618910	PrimaryExpression	4		5618857	1					
ANR	5618911	AdditiveExpression	numAlign * 2 + 1		5618857	1		+			
ANR	5618912	MultiplicativeExpression	numAlign * 2		5618857	0		*			
ANR	5618913	Identifier	numAlign		5618857	0					
ANR	5618914	PrimaryExpression	2		5618857	1					
ANR	5618915	PrimaryExpression	1		5618857	1					
ANR	5618916	MultiplicativeExpression	( 2 * numAlign - 2 ) * 2		5618857	1		*			
ANR	5618917	AdditiveExpression	2 * numAlign - 2		5618857	0		-			
ANR	5618918	MultiplicativeExpression	2 * numAlign		5618857	0		*			
ANR	5618919	PrimaryExpression	2		5618857	0					
ANR	5618920	Identifier	numAlign		5618857	1					
ANR	5618921	PrimaryExpression	2		5618857	1					
ANR	5618922	PrimaryExpression	2		5618857	1					
ANR	5618923	ElseStatement	else		5618857	0					
ANR	5618924	CompoundStatement		10:8:260:260	5618857	0					
ANR	5618925	ExpressionStatement	step = 26	751:2:28663:28672	5618857	0	True				
ANR	5618926	AssignmentExpression	step = 26		5618857	0		=			
ANR	5618927	Identifier	step		5618857	0					
ANR	5618928	PrimaryExpression	26		5618857	1					
ANR	5618929	IdentifierDeclStatement	int pos ;	753:1:28678:28685	5618857	5	True				
ANR	5618930	IdentifierDecl	pos		5618857	0					
ANR	5618931	IdentifierDeclType	int		5618857	0					
ANR	5618932	Identifier	pos		5618857	1					
ANR	5618933	ForStatement	"for ( i = numAlign - 1 , pos = qrsize - 7 ; i >= 1 ; i -- , pos -= step )"		5618857	6					
ANR	5618934	ForInit	"i = numAlign - 1 , pos = qrsize - 7 ;"	754:6:28693:28727	5618857	0	True				
ANR	5618935	Expression	"i = numAlign - 1 , pos = qrsize - 7"		5618857	0					
ANR	5618936	AssignmentExpression	i = numAlign - 1		5618857	0		=			
ANR	5618937	Identifier	i		5618857	0					
ANR	5618938	AdditiveExpression	numAlign - 1		5618857	1		-			
ANR	5618939	Identifier	numAlign		5618857	0					
ANR	5618940	PrimaryExpression	1		5618857	1					
ANR	5618941	AssignmentExpression	pos = qrsize - 7		5618857	1		=			
ANR	5618942	Identifier	pos		5618857	0					
ANR	5618943	AdditiveExpression	qrsize - 7		5618857	1		-			
ANR	5618944	Identifier	qrsize		5618857	0					
ANR	5618945	PrimaryExpression	7		5618857	1					
ANR	5618946	Condition	i >= 1	754:42:28729:28734	5618857	1	True				
ANR	5618947	RelationalExpression	i >= 1		5618857	0		>=			
ANR	5618948	Identifier	i		5618857	0					
ANR	5618949	PrimaryExpression	1		5618857	1					
ANR	5618950	Expression	"i -- , pos -= step"	754:50:28737:28752	5618857	2	True				
ANR	5618951	PostIncDecOperationExpression	i --		5618857	0					
ANR	5618952	Identifier	i		5618857	0					
ANR	5618953	IncDec	--		5618857	1					
ANR	5618954	AssignmentExpression	pos -= step		5618857	1		-=			
ANR	5618955	Identifier	pos		5618857	0					
ANR	5618956	Identifier	step		5618857	1					
ANR	5618957	CompoundStatement		14:68:379:379	5618857	3					
ANR	5618958	ExpressionStatement	result [ i ] = pos	755:2:28759:28774	5618857	0	True				
ANR	5618959	AssignmentExpression	result [ i ] = pos		5618857	0		=			
ANR	5618960	ArrayIndexing	result [ i ]		5618857	0					
ANR	5618961	Identifier	result		5618857	0					
ANR	5618962	Identifier	i		5618857	1					
ANR	5618963	Identifier	pos		5618857	1					
ANR	5618964	ExpressionStatement	result [ 0 ] = 6	757:1:28780:28793	5618857	7	True				
ANR	5618965	AssignmentExpression	result [ 0 ] = 6		5618857	0		=			
ANR	5618966	ArrayIndexing	result [ 0 ]		5618857	0					
ANR	5618967	Identifier	result		5618857	0					
ANR	5618968	PrimaryExpression	0		5618857	1					
ANR	5618969	PrimaryExpression	6		5618857	1					
ANR	5618970	ReturnStatement	return numAlign ;	758:1:28796:28811	5618857	8	True				
ANR	5618971	Identifier	numAlign		5618857	0					
ANR	5618972	ReturnType	static int		5618857	1					
ANR	5618973	Identifier	getAlignmentPatternPositions		5618857	2					
ANR	5618974	ParameterList	"int version , ut8 result [ 7 ]"		5618857	3					
ANR	5618975	Parameter	int version	741:40:28347:28357	5618857	0	True				
ANR	5618976	ParameterType	int		5618857	0					
ANR	5618977	Identifier	version		5618857	1					
ANR	5618978	Parameter	ut8 result [ 7 ]	741:53:28360:28372	5618857	1	True				
ANR	5618979	ParameterType	ut8 [ 7 ]		5618857	0					
ANR	5618980	Identifier	result		5618857	1					
ANR	5618981	CFGEntryNode	ENTRY		5618857		True				
ANR	5618982	CFGExitNode	EXIT		5618857		True				
ANR	5618983	Symbol	result		5618857						
ANR	5618984	Symbol	* i		5618857						
ANR	5618985	Symbol	pos		5618857						
ANR	5618986	Symbol	* result		5618857						
ANR	5618987	Symbol	i		5618857						
ANR	5618988	Symbol	step		5618857						
ANR	5618989	Symbol	version		5618857						
ANR	5618990	Symbol	qrsize		5618857						
ANR	5618991	Symbol	numAlign		5618857						
ANR	5618992	Function	fillRectangle	762:0:28904:29128							
ANR	5618993	FunctionDef	"fillRectangle (int left , int top , int width , int height , ut8 qrcode [ ])"		5618992	0					
ANR	5618994	CompoundStatement		762:82:28986:29128	5618992	0					
ANR	5618995	IdentifierDeclStatement	"int dx , dy ;"	763:1:28989:28999	5618992	0	True				
ANR	5618996	IdentifierDecl	dx		5618992	0					
ANR	5618997	IdentifierDeclType	int		5618992	0					
ANR	5618998	Identifier	dx		5618992	1					
ANR	5618999	IdentifierDecl	dy		5618992	1					
ANR	5619000	IdentifierDeclType	int		5618992	0					
ANR	5619001	Identifier	dy		5618992	1					
ANR	5619002	ForStatement	for ( dy = 0 ; dy < height ; dy ++ )		5618992	1					
ANR	5619003	ForInit	dy = 0 ;	764:6:29007:29013	5618992	0	True				
ANR	5619004	AssignmentExpression	dy = 0		5618992	0		=			
ANR	5619005	Identifier	dy		5618992	0					
ANR	5619006	PrimaryExpression	0		5618992	1					
ANR	5619007	Condition	dy < height	764:14:29015:29025	5618992	1	True				
ANR	5619008	RelationalExpression	dy < height		5618992	0		<			
ANR	5619009	Identifier	dy		5618992	0					
ANR	5619010	Identifier	height		5618992	1					
ANR	5619011	PostIncDecOperationExpression	dy ++	764:27:29028:29031	5618992	2	True				
ANR	5619012	Identifier	dy		5618992	0					
ANR	5619013	IncDec	++		5618992	1					
ANR	5619014	CompoundStatement		3:33:47:47	5618992	3					
ANR	5619015	ForStatement	for ( dx = 0 ; dx < width ; dx ++ )		5618992	0					
ANR	5619016	ForInit	dx = 0 ;	765:7:29043:29049	5618992	0	True				
ANR	5619017	AssignmentExpression	dx = 0		5618992	0		=			
ANR	5619018	Identifier	dx		5618992	0					
ANR	5619019	PrimaryExpression	0		5618992	1					
ANR	5619020	Condition	dx < width	765:15:29051:29060	5618992	1	True				
ANR	5619021	RelationalExpression	dx < width		5618992	0		<			
ANR	5619022	Identifier	dx		5618992	0					
ANR	5619023	Identifier	width		5618992	1					
ANR	5619024	PostIncDecOperationExpression	dx ++	765:27:29063:29066	5618992	2	True				
ANR	5619025	Identifier	dx		5618992	0					
ANR	5619026	IncDec	++		5618992	1					
ANR	5619027	CompoundStatement		4:33:82:82	5618992	3					
ANR	5619028	ExpressionStatement	"setModule ( qrcode , left + dx , top + dy , true )"	766:3:29074:29119	5618992	0	True				
ANR	5619029	CallExpression	"setModule ( qrcode , left + dx , top + dy , true )"		5618992	0					
ANR	5619030	Callee	setModule		5618992	0					
ANR	5619031	Identifier	setModule		5618992	0					
ANR	5619032	ArgumentList	qrcode		5618992	1					
ANR	5619033	Argument	qrcode		5618992	0					
ANR	5619034	Identifier	qrcode		5618992	0					
ANR	5619035	Argument	left + dx		5618992	1					
ANR	5619036	AdditiveExpression	left + dx		5618992	0		+			
ANR	5619037	Identifier	left		5618992	0					
ANR	5619038	Identifier	dx		5618992	1					
ANR	5619039	Argument	top + dy		5618992	2					
ANR	5619040	AdditiveExpression	top + dy		5618992	0		+			
ANR	5619041	Identifier	top		5618992	0					
ANR	5619042	Identifier	dy		5618992	1					
ANR	5619043	Argument	true		5618992	3					
ANR	5619044	Identifier	true		5618992	0					
ANR	5619045	ReturnType	static void		5618992	1					
ANR	5619046	Identifier	fillRectangle		5618992	2					
ANR	5619047	ParameterList	"int left , int top , int width , int height , ut8 qrcode [ ]"		5618992	3					
ANR	5619048	Parameter	int left	762:26:28930:28937	5618992	0	True				
ANR	5619049	ParameterType	int		5618992	0					
ANR	5619050	Identifier	left		5618992	1					
ANR	5619051	Parameter	int top	762:36:28940:28946	5618992	1	True				
ANR	5619052	ParameterType	int		5618992	0					
ANR	5619053	Identifier	top		5618992	1					
ANR	5619054	Parameter	int width	762:45:28949:28957	5618992	2	True				
ANR	5619055	ParameterType	int		5618992	0					
ANR	5619056	Identifier	width		5618992	1					
ANR	5619057	Parameter	int height	762:56:28960:28969	5618992	3	True				
ANR	5619058	ParameterType	int		5618992	0					
ANR	5619059	Identifier	height		5618992	1					
ANR	5619060	Parameter	ut8 qrcode [ ]	762:68:28972:28983	5618992	4	True				
ANR	5619061	ParameterType	ut8 [ ]		5618992	0					
ANR	5619062	Identifier	qrcode		5618992	1					
ANR	5619063	CFGEntryNode	ENTRY		5618992		True				
ANR	5619064	CFGExitNode	EXIT		5618992		True				
ANR	5619065	Symbol	top		5618992						
ANR	5619066	Symbol	dx		5618992						
ANR	5619067	Symbol	left		5618992						
ANR	5619068	Symbol	dy		5618992						
ANR	5619069	Symbol	qrcode		5618992						
ANR	5619070	Symbol	width		5618992						
ANR	5619071	Symbol	true		5618992						
ANR	5619072	Symbol	height		5618992						
ANR	5619073	Function	drawCodewords	775:0:29402:30328							
ANR	5619074	FunctionDef	"drawCodewords (const ut8 data [ ] , int dataLen , ut8 qrcode [ ])"		5619073	0					
ANR	5619075	CompoundStatement		775:71:29473:30328	5619073	0					
ANR	5619076	IdentifierDeclStatement	int qrsize = qrcodegen_getSize ( qrcode ) ;	776:1:29476:29515	5619073	0	True				
ANR	5619077	IdentifierDecl	qrsize = qrcodegen_getSize ( qrcode )		5619073	0					
ANR	5619078	IdentifierDeclType	int		5619073	0					
ANR	5619079	Identifier	qrsize		5619073	1					
ANR	5619080	AssignmentExpression	qrsize = qrcodegen_getSize ( qrcode )		5619073	2		=			
ANR	5619081	Identifier	qrsize		5619073	0					
ANR	5619082	CallExpression	qrcodegen_getSize ( qrcode )		5619073	1					
ANR	5619083	Callee	qrcodegen_getSize		5619073	0					
ANR	5619084	Identifier	qrcodegen_getSize		5619073	0					
ANR	5619085	ArgumentList	qrcode		5619073	1					
ANR	5619086	Argument	qrcode		5619073	0					
ANR	5619087	Identifier	qrcode		5619073	0					
ANR	5619088	IdentifierDeclStatement	"int right , vert , j , i = 0 ;"	777:1:29518:29543	5619073	1	True				
ANR	5619089	IdentifierDecl	right		5619073	0					
ANR	5619090	IdentifierDeclType	int		5619073	0					
ANR	5619091	Identifier	right		5619073	1					
ANR	5619092	IdentifierDecl	vert		5619073	1					
ANR	5619093	IdentifierDeclType	int		5619073	0					
ANR	5619094	Identifier	vert		5619073	1					
ANR	5619095	IdentifierDecl	j		5619073	2					
ANR	5619096	IdentifierDeclType	int		5619073	0					
ANR	5619097	Identifier	j		5619073	1					
ANR	5619098	IdentifierDecl	i = 0		5619073	3					
ANR	5619099	IdentifierDeclType	int		5619073	0					
ANR	5619100	Identifier	i		5619073	1					
ANR	5619101	AssignmentExpression	i = 0		5619073	2		=			
ANR	5619102	Identifier	i		5619073	0					
ANR	5619103	PrimaryExpression	0		5619073	1					
ANR	5619104	ForStatement	for ( right = qrsize - 1 ; right >= 1 ; right -= 2 )		5619073	2					
ANR	5619105	ForInit	right = qrsize - 1 ;	779:6:29607:29625	5619073	0	True				
ANR	5619106	AssignmentExpression	right = qrsize - 1		5619073	0		=			
ANR	5619107	Identifier	right		5619073	0					
ANR	5619108	AdditiveExpression	qrsize - 1		5619073	1		-			
ANR	5619109	Identifier	qrsize		5619073	0					
ANR	5619110	PrimaryExpression	1		5619073	1					
ANR	5619111	Condition	right >= 1	779:26:29627:29636	5619073	1	True				
ANR	5619112	RelationalExpression	right >= 1		5619073	0		>=			
ANR	5619113	Identifier	right		5619073	0					
ANR	5619114	PrimaryExpression	1		5619073	1					
ANR	5619115	AssignmentExpression	right -= 2	779:38:29639:29648	5619073	2	True	-=			
ANR	5619116	Identifier	right		5619073	0					
ANR	5619117	PrimaryExpression	2		5619073	1					
ANR	5619118	CompoundStatement		5:50:177:177	5619073	3					
ANR	5619119	IfStatement	if ( right == 6 )		5619073	0					
ANR	5619120	Condition	right == 6	780:6:29704:29713	5619073	0	True				
ANR	5619121	EqualityExpression	right == 6		5619073	0		==			
ANR	5619122	Identifier	right		5619073	0					
ANR	5619123	PrimaryExpression	6		5619073	1					
ANR	5619124	CompoundStatement		6:18:242:242	5619073	1					
ANR	5619125	ExpressionStatement	right = 5	781:3:29721:29730	5619073	0	True				
ANR	5619126	AssignmentExpression	right = 5		5619073	0		=			
ANR	5619127	Identifier	right		5619073	0					
ANR	5619128	PrimaryExpression	5		5619073	1					
ANR	5619129	ForStatement	for ( vert = 0 ; vert < qrsize ; vert ++ )		5619073	1					
ANR	5619130	ForInit	vert = 0 ;	783:7:29743:29751	5619073	0	True				
ANR	5619131	AssignmentExpression	vert = 0		5619073	0		=			
ANR	5619132	Identifier	vert		5619073	0					
ANR	5619133	PrimaryExpression	0		5619073	1					
ANR	5619134	Condition	vert < qrsize	783:17:29753:29765	5619073	1	True				
ANR	5619135	RelationalExpression	vert < qrsize		5619073	0		<			
ANR	5619136	Identifier	vert		5619073	0					
ANR	5619137	Identifier	qrsize		5619073	1					
ANR	5619138	PostIncDecOperationExpression	vert ++	783:32:29768:29773	5619073	2	True				
ANR	5619139	Identifier	vert		5619073	0					
ANR	5619140	IncDec	++		5619073	1					
ANR	5619141	CompoundStatement		9:40:302:302	5619073	3					
ANR	5619142	ForStatement	for ( j = 0 ; j < 2 ; j ++ )		5619073	0					
ANR	5619143	ForInit	j = 0 ;	784:8:29806:29811	5619073	0	True				
ANR	5619144	AssignmentExpression	j = 0		5619073	0		=			
ANR	5619145	Identifier	j		5619073	0					
ANR	5619146	PrimaryExpression	0		5619073	1					
ANR	5619147	Condition	j < 2	784:15:29813:29817	5619073	1	True				
ANR	5619148	RelationalExpression	j < 2		5619073	0		<			
ANR	5619149	Identifier	j		5619073	0					
ANR	5619150	PrimaryExpression	2		5619073	1					
ANR	5619151	PostIncDecOperationExpression	j ++	784:22:29820:29822	5619073	2	True				
ANR	5619152	Identifier	j		5619073	0					
ANR	5619153	IncDec	++		5619073	1					
ANR	5619154	CompoundStatement		13:4:445:484	5619073	3					
ANR	5619155	IdentifierDeclStatement	int x = right - j ;	785:4:29831:29848	5619073	0	True				
ANR	5619156	IdentifierDecl	x = right - j		5619073	0					
ANR	5619157	IdentifierDeclType	int		5619073	0					
ANR	5619158	Identifier	x		5619073	1					
ANR	5619159	AssignmentExpression	x = right - j		5619073	2		=			
ANR	5619160	Identifier	x		5619073	0					
ANR	5619161	AdditiveExpression	right - j		5619073	1		-			
ANR	5619162	Identifier	right		5619073	0					
ANR	5619163	Identifier	j		5619073	1					
ANR	5619164	IdentifierDeclStatement	bool upward = ( ( right + 1 ) & 2 ) == 0 ;	786:4:29877:29913	5619073	1	True				
ANR	5619165	IdentifierDecl	upward = ( ( right + 1 ) & 2 ) == 0		5619073	0					
ANR	5619166	IdentifierDeclType	bool		5619073	0					
ANR	5619167	Identifier	upward		5619073	1					
ANR	5619168	AssignmentExpression	upward = ( ( right + 1 ) & 2 ) == 0		5619073	2		=			
ANR	5619169	Identifier	upward		5619073	0					
ANR	5619170	EqualityExpression	( ( right + 1 ) & 2 ) == 0		5619073	1		==			
ANR	5619171	BitAndExpression	( right + 1 ) & 2		5619073	0		&			
ANR	5619172	AdditiveExpression	right + 1		5619073	0		+			
ANR	5619173	Identifier	right		5619073	0					
ANR	5619174	PrimaryExpression	1		5619073	1					
ANR	5619175	PrimaryExpression	2		5619073	1					
ANR	5619176	PrimaryExpression	0		5619073	1					
ANR	5619177	IdentifierDeclStatement	int y = upward ? qrsize - 1 - vert : vert ;	787:4:29919:29958	5619073	2	True				
ANR	5619178	IdentifierDecl	y = upward ? qrsize - 1 - vert : vert		5619073	0					
ANR	5619179	IdentifierDeclType	int		5619073	0					
ANR	5619180	Identifier	y		5619073	1					
ANR	5619181	AssignmentExpression	y = upward ? qrsize - 1 - vert : vert		5619073	2		=			
ANR	5619182	Identifier	y		5619073	0					
ANR	5619183	ConditionalExpression	upward ? qrsize - 1 - vert : vert		5619073	1					
ANR	5619184	Condition	upward		5619073	0					
ANR	5619185	Identifier	upward		5619073	0					
ANR	5619186	AdditiveExpression	qrsize - 1 - vert		5619073	1		-			
ANR	5619187	Identifier	qrsize		5619073	0					
ANR	5619188	AdditiveExpression	1 - vert		5619073	1		-			
ANR	5619189	PrimaryExpression	1		5619073	0					
ANR	5619190	Identifier	vert		5619073	1					
ANR	5619191	Identifier	vert		5619073	2					
ANR	5619192	IfStatement	"if ( ! getModule ( qrcode , x , y ) && i < dataLen * 8 )"		5619073	3					
ANR	5619193	Condition	"! getModule ( qrcode , x , y ) && i < dataLen * 8"	788:8:29991:30034	5619073	0	True				
ANR	5619194	AndExpression	"! getModule ( qrcode , x , y ) && i < dataLen * 8"		5619073	0		&&			
ANR	5619195	UnaryOperationExpression	"! getModule ( qrcode , x , y )"		5619073	0					
ANR	5619196	UnaryOperator	!		5619073	0					
ANR	5619197	CallExpression	"getModule ( qrcode , x , y )"		5619073	1					
ANR	5619198	Callee	getModule		5619073	0					
ANR	5619199	Identifier	getModule		5619073	0					
ANR	5619200	ArgumentList	qrcode		5619073	1					
ANR	5619201	Argument	qrcode		5619073	0					
ANR	5619202	Identifier	qrcode		5619073	0					
ANR	5619203	Argument	x		5619073	1					
ANR	5619204	Identifier	x		5619073	0					
ANR	5619205	Argument	y		5619073	2					
ANR	5619206	Identifier	y		5619073	0					
ANR	5619207	RelationalExpression	i < dataLen * 8		5619073	1		<			
ANR	5619208	Identifier	i		5619073	0					
ANR	5619209	MultiplicativeExpression	dataLen * 8		5619073	1		*			
ANR	5619210	Identifier	dataLen		5619073	0					
ANR	5619211	PrimaryExpression	8		5619073	1					
ANR	5619212	CompoundStatement		15:5:570:625	5619073	1					
ANR	5619213	IdentifierDeclStatement	bool black = ( ( data [ i >> 3 ] >> ( 7 - ( i & 7 ) ) ) & 1 ) != 0 ;	789:5:30044:30099	5619073	0	True				
ANR	5619214	IdentifierDecl	black = ( ( data [ i >> 3 ] >> ( 7 - ( i & 7 ) ) ) & 1 ) != 0		5619073	0					
ANR	5619215	IdentifierDeclType	bool		5619073	0					
ANR	5619216	Identifier	black		5619073	1					
ANR	5619217	AssignmentExpression	black = ( ( data [ i >> 3 ] >> ( 7 - ( i & 7 ) ) ) & 1 ) != 0		5619073	2		=			
ANR	5619218	Identifier	black		5619073	0					
ANR	5619219	EqualityExpression	( ( data [ i >> 3 ] >> ( 7 - ( i & 7 ) ) ) & 1 ) != 0		5619073	1		!=			
ANR	5619220	BitAndExpression	( data [ i >> 3 ] >> ( 7 - ( i & 7 ) ) ) & 1		5619073	0		&			
ANR	5619221	ShiftExpression	data [ i >> 3 ] >> ( 7 - ( i & 7 ) )		5619073	0		>>			
ANR	5619222	ArrayIndexing	data [ i >> 3 ]		5619073	0					
ANR	5619223	Identifier	data		5619073	0					
ANR	5619224	ShiftExpression	i >> 3		5619073	1		>>			
ANR	5619225	Identifier	i		5619073	0					
ANR	5619226	PrimaryExpression	3		5619073	1					
ANR	5619227	AdditiveExpression	7 - ( i & 7 )		5619073	1		-			
ANR	5619228	PrimaryExpression	7		5619073	0					
ANR	5619229	BitAndExpression	i & 7		5619073	1		&			
ANR	5619230	Identifier	i		5619073	0					
ANR	5619231	PrimaryExpression	7		5619073	1					
ANR	5619232	PrimaryExpression	1		5619073	1					
ANR	5619233	PrimaryExpression	0		5619073	1					
ANR	5619234	ExpressionStatement	"setModule ( qrcode , x , y , black )"	790:5:30106:30137	5619073	1	True				
ANR	5619235	CallExpression	"setModule ( qrcode , x , y , black )"		5619073	0					
ANR	5619236	Callee	setModule		5619073	0					
ANR	5619237	Identifier	setModule		5619073	0					
ANR	5619238	ArgumentList	qrcode		5619073	1					
ANR	5619239	Argument	qrcode		5619073	0					
ANR	5619240	Identifier	qrcode		5619073	0					
ANR	5619241	Argument	x		5619073	1					
ANR	5619242	Identifier	x		5619073	0					
ANR	5619243	Argument	y		5619073	2					
ANR	5619244	Identifier	y		5619073	0					
ANR	5619245	Argument	black		5619073	3					
ANR	5619246	Identifier	black		5619073	0					
ANR	5619247	ExpressionStatement	i ++	791:5:30144:30147	5619073	2	True				
ANR	5619248	PostIncDecOperationExpression	i ++		5619073	0					
ANR	5619249	Identifier	i		5619073	0					
ANR	5619250	IncDec	++		5619073	1					
ANR	5619251	ReturnStatement	return i == dataLen * 8 ;	798:1:30303:30326	5619073	3	True				
ANR	5619252	EqualityExpression	i == dataLen * 8		5619073	0		==			
ANR	5619253	Identifier	i		5619073	0					
ANR	5619254	MultiplicativeExpression	dataLen * 8		5619073	1		*			
ANR	5619255	Identifier	dataLen		5619073	0					
ANR	5619256	PrimaryExpression	8		5619073	1					
ANR	5619257	ReturnType	static bool		5619073	1					
ANR	5619258	Identifier	drawCodewords		5619073	2					
ANR	5619259	ParameterList	"const ut8 data [ ] , int dataLen , ut8 qrcode [ ]"		5619073	3					
ANR	5619260	Parameter	const ut8 data [ ]	775:26:29428:29443	5619073	0	True				
ANR	5619261	ParameterType	const ut8 [ ]		5619073	0					
ANR	5619262	Identifier	data		5619073	1					
ANR	5619263	Parameter	int dataLen	775:44:29446:29456	5619073	1	True				
ANR	5619264	ParameterType	int		5619073	0					
ANR	5619265	Identifier	dataLen		5619073	1					
ANR	5619266	Parameter	ut8 qrcode [ ]	775:57:29459:29470	5619073	2	True				
ANR	5619267	ParameterType	ut8 [ ]		5619073	0					
ANR	5619268	Identifier	qrcode		5619073	1					
ANR	5619269	CFGEntryNode	ENTRY		5619073		True				
ANR	5619270	CFGExitNode	EXIT		5619073		True				
ANR	5619271	Symbol	getModule		5619073						
ANR	5619272	Symbol	data		5619073						
ANR	5619273	Symbol	qrcode		5619073						
ANR	5619274	Symbol	vert		5619073						
ANR	5619275	Symbol	black		5619073						
ANR	5619276	Symbol	qrcodegen_getSize		5619073						
ANR	5619277	Symbol	i		5619073						
ANR	5619278	Symbol	j		5619073						
ANR	5619279	Symbol	right		5619073						
ANR	5619280	Symbol	qrsize		5619073						
ANR	5619281	Symbol	dataLen		5619073						
ANR	5619282	Symbol	* i		5619073						
ANR	5619283	Symbol	x		5619073						
ANR	5619284	Symbol	y		5619073						
ANR	5619285	Symbol	* data		5619073						
ANR	5619286	Symbol	upward		5619073						
ANR	5619287	Function	applyMask	806:0:30713:31614							
ANR	5619288	FunctionDef	"applyMask (const ut8 functionModules [ ] , ut8 qrcode [ ] , enum qrcodegen_Mask mask)"		5619287	0					
ANR	5619289	CompoundStatement		806:91:30804:31614	5619287	0					
ANR	5619290	IfStatement	if ( mask < 0 || mask > 7 )		5619287	0					
ANR	5619291	Condition	mask < 0 || mask > 7	807:5:30811:30830	5619287	0	True				
ANR	5619292	OrExpression	mask < 0 || mask > 7		5619287	0		||			
ANR	5619293	RelationalExpression	mask < 0		5619287	0		<			
ANR	5619294	Identifier	mask		5619287	0					
ANR	5619295	PrimaryExpression	0		5619287	1					
ANR	5619296	RelationalExpression	mask > 7		5619287	1		>			
ANR	5619297	Identifier	mask		5619287	0					
ANR	5619298	PrimaryExpression	7		5619287	1					
ANR	5619299	CompoundStatement		2:27:28:28	5619287	1					
ANR	5619300	ReturnStatement	return false ;	808:2:30837:30849	5619287	0	True				
ANR	5619301	Identifier	false		5619287	0					
ANR	5619302	IdentifierDeclStatement	"int x , y , qrsize = qrcodegen_getSize ( qrcode ) ;"	810:1:30855:30900	5619287	1	True				
ANR	5619303	IdentifierDecl	x		5619287	0					
ANR	5619304	IdentifierDeclType	int		5619287	0					
ANR	5619305	Identifier	x		5619287	1					
ANR	5619306	IdentifierDecl	y		5619287	1					
ANR	5619307	IdentifierDeclType	int		5619287	0					
ANR	5619308	Identifier	y		5619287	1					
ANR	5619309	IdentifierDecl	qrsize = qrcodegen_getSize ( qrcode )		5619287	2					
ANR	5619310	IdentifierDeclType	int		5619287	0					
ANR	5619311	Identifier	qrsize		5619287	1					
ANR	5619312	AssignmentExpression	qrsize = qrcodegen_getSize ( qrcode )		5619287	2		=			
ANR	5619313	Identifier	qrsize		5619287	0					
ANR	5619314	CallExpression	qrcodegen_getSize ( qrcode )		5619287	1					
ANR	5619315	Callee	qrcodegen_getSize		5619287	0					
ANR	5619316	Identifier	qrcodegen_getSize		5619287	0					
ANR	5619317	ArgumentList	qrcode		5619287	1					
ANR	5619318	Argument	qrcode		5619287	0					
ANR	5619319	Identifier	qrcode		5619287	0					
ANR	5619320	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5619287	2					
ANR	5619321	ForInit	y = 0 ;	811:6:30908:30913	5619287	0	True				
ANR	5619322	AssignmentExpression	y = 0		5619287	0		=			
ANR	5619323	Identifier	y		5619287	0					
ANR	5619324	PrimaryExpression	0		5619287	1					
ANR	5619325	Condition	y < qrsize	811:13:30915:30924	5619287	1	True				
ANR	5619326	RelationalExpression	y < qrsize		5619287	0		<			
ANR	5619327	Identifier	y		5619287	0					
ANR	5619328	Identifier	qrsize		5619287	1					
ANR	5619329	PostIncDecOperationExpression	y ++	811:25:30927:30929	5619287	2	True				
ANR	5619330	Identifier	y		5619287	0					
ANR	5619331	IncDec	++		5619287	1					
ANR	5619332	CompoundStatement		6:30:127:127	5619287	3					
ANR	5619333	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5619287	0					
ANR	5619334	ForInit	x = 0 ;	812:7:30941:30946	5619287	0	True				
ANR	5619335	AssignmentExpression	x = 0		5619287	0		=			
ANR	5619336	Identifier	x		5619287	0					
ANR	5619337	PrimaryExpression	0		5619287	1					
ANR	5619338	Condition	x < qrsize	812:14:30948:30957	5619287	1	True				
ANR	5619339	RelationalExpression	x < qrsize		5619287	0		<			
ANR	5619340	Identifier	x		5619287	0					
ANR	5619341	Identifier	qrsize		5619287	1					
ANR	5619342	PostIncDecOperationExpression	x ++	812:26:30960:30962	5619287	2	True				
ANR	5619343	Identifier	x		5619287	0					
ANR	5619344	IncDec	++		5619287	1					
ANR	5619345	CompoundStatement		23:3:708:743	5619287	3					
ANR	5619346	IfStatement	"if ( getModule ( functionModules , x , y ) )"		5619287	0					
ANR	5619347	Condition	"getModule ( functionModules , x , y )"	813:7:30974:31006	5619287	0	True				
ANR	5619348	CallExpression	"getModule ( functionModules , x , y )"		5619287	0					
ANR	5619349	Callee	getModule		5619287	0					
ANR	5619350	Identifier	getModule		5619287	0					
ANR	5619351	ArgumentList	functionModules		5619287	1					
ANR	5619352	Argument	functionModules		5619287	0					
ANR	5619353	Identifier	functionModules		5619287	0					
ANR	5619354	Argument	x		5619287	1					
ANR	5619355	Identifier	x		5619287	0					
ANR	5619356	Argument	y		5619287	2					
ANR	5619357	Identifier	y		5619287	0					
ANR	5619358	CompoundStatement		8:42:204:204	5619287	1					
ANR	5619359	ContinueStatement	continue ;	814:4:31015:31023	5619287	0	True				
ANR	5619360	IdentifierDeclStatement	bool invert ;	816:3:31033:31044	5619287	1	True				
ANR	5619361	IdentifierDecl	invert		5619287	0					
ANR	5619362	IdentifierDeclType	bool		5619287	0					
ANR	5619363	Identifier	invert		5619287	1					
ANR	5619364	SwitchStatement	switch ( ( int ) mask )		5619287	2					
ANR	5619365	Condition	( int ) mask	817:11:31057:31066	5619287	0	True				
ANR	5619366	CastExpression	( int ) mask		5619287	0					
ANR	5619367	CastTarget	int		5619287	0					
ANR	5619368	Identifier	mask		5619287	1					
ANR	5619369	CompoundStatement		12:23:264:264	5619287	1					
ANR	5619370	Label	case 0 :	818:3:31074:31080	5619287	0	True				
ANR	5619371	ExpressionStatement	invert = ( x + y ) % 2 == 0	818:12:31083:31108	5619287	1	True				
ANR	5619372	AssignmentExpression	invert = ( x + y ) % 2 == 0		5619287	0		=			
ANR	5619373	Identifier	invert		5619287	0					
ANR	5619374	EqualityExpression	( x + y ) % 2 == 0		5619287	1		==			
ANR	5619375	MultiplicativeExpression	( x + y ) % 2		5619287	0		%			
ANR	5619376	AdditiveExpression	x + y		5619287	0		+			
ANR	5619377	Identifier	x		5619287	0					
ANR	5619378	Identifier	y		5619287	1					
ANR	5619379	PrimaryExpression	2		5619287	1					
ANR	5619380	PrimaryExpression	0		5619287	1					
ANR	5619381	BreakStatement	break ;	818:39:31110:31115	5619287	2	True				
ANR	5619382	Label	case 1 :	819:3:31120:31126	5619287	3	True				
ANR	5619383	ExpressionStatement	invert = y % 2 == 0	819:12:31129:31148	5619287	4	True				
ANR	5619384	AssignmentExpression	invert = y % 2 == 0		5619287	0		=			
ANR	5619385	Identifier	invert		5619287	0					
ANR	5619386	EqualityExpression	y % 2 == 0		5619287	1		==			
ANR	5619387	MultiplicativeExpression	y % 2		5619287	0		%			
ANR	5619388	Identifier	y		5619287	0					
ANR	5619389	PrimaryExpression	2		5619287	1					
ANR	5619390	PrimaryExpression	0		5619287	1					
ANR	5619391	BreakStatement	break ;	819:33:31150:31155	5619287	5	True				
ANR	5619392	Label	case 2 :	820:3:31160:31166	5619287	6	True				
ANR	5619393	ExpressionStatement	invert = x % 3 == 0	820:12:31169:31188	5619287	7	True				
ANR	5619394	AssignmentExpression	invert = x % 3 == 0		5619287	0		=			
ANR	5619395	Identifier	invert		5619287	0					
ANR	5619396	EqualityExpression	x % 3 == 0		5619287	1		==			
ANR	5619397	MultiplicativeExpression	x % 3		5619287	0		%			
ANR	5619398	Identifier	x		5619287	0					
ANR	5619399	PrimaryExpression	3		5619287	1					
ANR	5619400	PrimaryExpression	0		5619287	1					
ANR	5619401	BreakStatement	break ;	820:33:31190:31195	5619287	8	True				
ANR	5619402	Label	case 3 :	821:3:31200:31206	5619287	9	True				
ANR	5619403	ExpressionStatement	invert = ( x + y ) % 3 == 0	821:12:31209:31234	5619287	10	True				
ANR	5619404	AssignmentExpression	invert = ( x + y ) % 3 == 0		5619287	0		=			
ANR	5619405	Identifier	invert		5619287	0					
ANR	5619406	EqualityExpression	( x + y ) % 3 == 0		5619287	1		==			
ANR	5619407	MultiplicativeExpression	( x + y ) % 3		5619287	0		%			
ANR	5619408	AdditiveExpression	x + y		5619287	0		+			
ANR	5619409	Identifier	x		5619287	0					
ANR	5619410	Identifier	y		5619287	1					
ANR	5619411	PrimaryExpression	3		5619287	1					
ANR	5619412	PrimaryExpression	0		5619287	1					
ANR	5619413	BreakStatement	break ;	821:39:31236:31241	5619287	11	True				
ANR	5619414	Label	case 4 :	822:3:31246:31252	5619287	12	True				
ANR	5619415	ExpressionStatement	invert = ( x / 3 + y / 2 ) % 2 == 0	822:12:31255:31288	5619287	13	True				
ANR	5619416	AssignmentExpression	invert = ( x / 3 + y / 2 ) % 2 == 0		5619287	0		=			
ANR	5619417	Identifier	invert		5619287	0					
ANR	5619418	EqualityExpression	( x / 3 + y / 2 ) % 2 == 0		5619287	1		==			
ANR	5619419	MultiplicativeExpression	( x / 3 + y / 2 ) % 2		5619287	0		%			
ANR	5619420	AdditiveExpression	x / 3 + y / 2		5619287	0		+			
ANR	5619421	MultiplicativeExpression	x / 3		5619287	0		/			
ANR	5619422	Identifier	x		5619287	0					
ANR	5619423	PrimaryExpression	3		5619287	1					
ANR	5619424	MultiplicativeExpression	y / 2		5619287	1		/			
ANR	5619425	Identifier	y		5619287	0					
ANR	5619426	PrimaryExpression	2		5619287	1					
ANR	5619427	PrimaryExpression	2		5619287	1					
ANR	5619428	PrimaryExpression	0		5619287	1					
ANR	5619429	BreakStatement	break ;	822:47:31290:31295	5619287	14	True				
ANR	5619430	Label	case 5 :	823:3:31300:31306	5619287	15	True				
ANR	5619431	ExpressionStatement	invert = x * y % 2 + x * y % 3 == 0	823:12:31309:31344	5619287	16	True				
ANR	5619432	AssignmentExpression	invert = x * y % 2 + x * y % 3 == 0		5619287	0		=			
ANR	5619433	Identifier	invert		5619287	0					
ANR	5619434	EqualityExpression	x * y % 2 + x * y % 3 == 0		5619287	1		==			
ANR	5619435	AdditiveExpression	x * y % 2 + x * y % 3		5619287	0		+			
ANR	5619436	MultiplicativeExpression	x * y % 2		5619287	0		*			
ANR	5619437	Identifier	x		5619287	0					
ANR	5619438	MultiplicativeExpression	y % 2		5619287	1		%			
ANR	5619439	Identifier	y		5619287	0					
ANR	5619440	PrimaryExpression	2		5619287	1					
ANR	5619441	MultiplicativeExpression	x * y % 3		5619287	1		*			
ANR	5619442	Identifier	x		5619287	0					
ANR	5619443	MultiplicativeExpression	y % 3		5619287	1		%			
ANR	5619444	Identifier	y		5619287	0					
ANR	5619445	PrimaryExpression	3		5619287	1					
ANR	5619446	PrimaryExpression	0		5619287	1					
ANR	5619447	BreakStatement	break ;	823:49:31346:31351	5619287	17	True				
ANR	5619448	Label	case 6 :	824:3:31356:31362	5619287	18	True				
ANR	5619449	ExpressionStatement	invert = ( x * y % 2 + x * y % 3 ) % 2 == 0	824:12:31365:31406	5619287	19	True				
ANR	5619450	AssignmentExpression	invert = ( x * y % 2 + x * y % 3 ) % 2 == 0		5619287	0		=			
ANR	5619451	Identifier	invert		5619287	0					
ANR	5619452	EqualityExpression	( x * y % 2 + x * y % 3 ) % 2 == 0		5619287	1		==			
ANR	5619453	MultiplicativeExpression	( x * y % 2 + x * y % 3 ) % 2		5619287	0		%			
ANR	5619454	AdditiveExpression	x * y % 2 + x * y % 3		5619287	0		+			
ANR	5619455	MultiplicativeExpression	x * y % 2		5619287	0		*			
ANR	5619456	Identifier	x		5619287	0					
ANR	5619457	MultiplicativeExpression	y % 2		5619287	1		%			
ANR	5619458	Identifier	y		5619287	0					
ANR	5619459	PrimaryExpression	2		5619287	1					
ANR	5619460	MultiplicativeExpression	x * y % 3		5619287	1		*			
ANR	5619461	Identifier	x		5619287	0					
ANR	5619462	MultiplicativeExpression	y % 3		5619287	1		%			
ANR	5619463	Identifier	y		5619287	0					
ANR	5619464	PrimaryExpression	3		5619287	1					
ANR	5619465	PrimaryExpression	2		5619287	1					
ANR	5619466	PrimaryExpression	0		5619287	1					
ANR	5619467	BreakStatement	break ;	824:55:31408:31413	5619287	20	True				
ANR	5619468	Label	case 7 :	825:3:31418:31424	5619287	21	True				
ANR	5619469	ExpressionStatement	invert = ( ( x + y ) % 2 + x * y % 3 ) % 2 == 0	825:12:31427:31470	5619287	22	True				
ANR	5619470	AssignmentExpression	invert = ( ( x + y ) % 2 + x * y % 3 ) % 2 == 0		5619287	0		=			
ANR	5619471	Identifier	invert		5619287	0					
ANR	5619472	EqualityExpression	( ( x + y ) % 2 + x * y % 3 ) % 2 == 0		5619287	1		==			
ANR	5619473	MultiplicativeExpression	( ( x + y ) % 2 + x * y % 3 ) % 2		5619287	0		%			
ANR	5619474	AdditiveExpression	( x + y ) % 2 + x * y % 3		5619287	0		+			
ANR	5619475	MultiplicativeExpression	( x + y ) % 2		5619287	0		%			
ANR	5619476	AdditiveExpression	x + y		5619287	0		+			
ANR	5619477	Identifier	x		5619287	0					
ANR	5619478	Identifier	y		5619287	1					
ANR	5619479	PrimaryExpression	2		5619287	1					
ANR	5619480	MultiplicativeExpression	x * y % 3		5619287	1		*			
ANR	5619481	Identifier	x		5619287	0					
ANR	5619482	MultiplicativeExpression	y % 3		5619287	1		%			
ANR	5619483	Identifier	y		5619287	0					
ANR	5619484	PrimaryExpression	3		5619287	1					
ANR	5619485	PrimaryExpression	2		5619287	1					
ANR	5619486	PrimaryExpression	0		5619287	1					
ANR	5619487	BreakStatement	break ;	825:57:31472:31477	5619287	23	True				
ANR	5619488	Label	default :	826:3:31482:31489	5619287	24	True				
ANR	5619489	Identifier	default		5619287	0					
ANR	5619490	ReturnStatement	return false ;	826:12:31491:31503	5619287	25	True				
ANR	5619491	Identifier	false		5619287	0					
ANR	5619492	IdentifierDeclStatement	"bool val = getModule ( qrcode , x , y ) ;"	828:3:31513:31548	5619287	3	True				
ANR	5619493	IdentifierDecl	"val = getModule ( qrcode , x , y )"		5619287	0					
ANR	5619494	IdentifierDeclType	bool		5619287	0					
ANR	5619495	Identifier	val		5619287	1					
ANR	5619496	AssignmentExpression	"val = getModule ( qrcode , x , y )"		5619287	2		=			
ANR	5619497	Identifier	val		5619287	0					
ANR	5619498	CallExpression	"getModule ( qrcode , x , y )"		5619287	1					
ANR	5619499	Callee	getModule		5619287	0					
ANR	5619500	Identifier	getModule		5619287	0					
ANR	5619501	ArgumentList	qrcode		5619287	1					
ANR	5619502	Argument	qrcode		5619287	0					
ANR	5619503	Identifier	qrcode		5619287	0					
ANR	5619504	Argument	x		5619287	1					
ANR	5619505	Identifier	x		5619287	0					
ANR	5619506	Argument	y		5619287	2					
ANR	5619507	Identifier	y		5619287	0					
ANR	5619508	ExpressionStatement	"setModule ( qrcode , x , y , val ^ invert )"	829:3:31553:31591	5619287	4	True				
ANR	5619509	CallExpression	"setModule ( qrcode , x , y , val ^ invert )"		5619287	0					
ANR	5619510	Callee	setModule		5619287	0					
ANR	5619511	Identifier	setModule		5619287	0					
ANR	5619512	ArgumentList	qrcode		5619287	1					
ANR	5619513	Argument	qrcode		5619287	0					
ANR	5619514	Identifier	qrcode		5619287	0					
ANR	5619515	Argument	x		5619287	1					
ANR	5619516	Identifier	x		5619287	0					
ANR	5619517	Argument	y		5619287	2					
ANR	5619518	Identifier	y		5619287	0					
ANR	5619519	Argument	val ^ invert		5619287	3					
ANR	5619520	ExclusiveOrExpression	val ^ invert		5619287	0		^			
ANR	5619521	Identifier	val		5619287	0					
ANR	5619522	Identifier	invert		5619287	1					
ANR	5619523	ReturnStatement	return true ;	832:1:31601:31612	5619287	3	True				
ANR	5619524	Identifier	true		5619287	0					
ANR	5619525	ReturnType	static bool		5619287	1					
ANR	5619526	Identifier	applyMask		5619287	2					
ANR	5619527	ParameterList	"const ut8 functionModules [ ] , ut8 qrcode [ ] , enum qrcodegen_Mask mask"		5619287	3					
ANR	5619528	Parameter	const ut8 functionModules [ ]	806:22:30735:30761	5619287	0	True				
ANR	5619529	ParameterType	const ut8 [ ]		5619287	0					
ANR	5619530	Identifier	functionModules		5619287	1					
ANR	5619531	Parameter	ut8 qrcode [ ]	806:51:30764:30775	5619287	1	True				
ANR	5619532	ParameterType	ut8 [ ]		5619287	0					
ANR	5619533	Identifier	qrcode		5619287	1					
ANR	5619534	Parameter	enum qrcodegen_Mask mask	806:65:30778:30801	5619287	2	True				
ANR	5619535	ParameterType	enum qrcodegen_Mask		5619287	0					
ANR	5619536	Identifier	mask		5619287	1					
ANR	5619537	CFGEntryNode	ENTRY		5619287		True				
ANR	5619538	CFGExitNode	EXIT		5619287		True				
ANR	5619539	Symbol	getModule		5619287						
ANR	5619540	Symbol	val		5619287						
ANR	5619541	Symbol	invert		5619287						
ANR	5619542	Symbol	qrcode		5619287						
ANR	5619543	Symbol	functionModules		5619287						
ANR	5619544	Symbol	false		5619287						
ANR	5619545	Symbol	x		5619287						
ANR	5619546	Symbol	true		5619287						
ANR	5619547	Symbol	y		5619287						
ANR	5619548	Symbol	qrcodegen_getSize		5619287						
ANR	5619549	Symbol	qrsize		5619287						
ANR	5619550	Symbol	mask		5619287						
ANR	5619551	Function	getPenaltyScore	838:0:31827:34074							
ANR	5619552	FunctionDef	getPenaltyScore (const ut8 qrcode [ ])		5619551	0					
ANR	5619553	CompoundStatement		838:48:31875:34074	5619551	0					
ANR	5619554	IdentifierDeclStatement	"int x , y , k , qrsize = qrcodegen_getSize ( qrcode ) ;"	839:1:31878:31926	5619551	0	True				
ANR	5619555	IdentifierDecl	x		5619551	0					
ANR	5619556	IdentifierDeclType	int		5619551	0					
ANR	5619557	Identifier	x		5619551	1					
ANR	5619558	IdentifierDecl	y		5619551	1					
ANR	5619559	IdentifierDeclType	int		5619551	0					
ANR	5619560	Identifier	y		5619551	1					
ANR	5619561	IdentifierDecl	k		5619551	2					
ANR	5619562	IdentifierDeclType	int		5619551	0					
ANR	5619563	Identifier	k		5619551	1					
ANR	5619564	IdentifierDecl	qrsize = qrcodegen_getSize ( qrcode )		5619551	3					
ANR	5619565	IdentifierDeclType	int		5619551	0					
ANR	5619566	Identifier	qrsize		5619551	1					
ANR	5619567	AssignmentExpression	qrsize = qrcodegen_getSize ( qrcode )		5619551	2		=			
ANR	5619568	Identifier	qrsize		5619551	0					
ANR	5619569	CallExpression	qrcodegen_getSize ( qrcode )		5619551	1					
ANR	5619570	Callee	qrcodegen_getSize		5619551	0					
ANR	5619571	Identifier	qrcodegen_getSize		5619551	0					
ANR	5619572	ArgumentList	qrcode		5619551	1					
ANR	5619573	Argument	qrcode		5619551	0					
ANR	5619574	Identifier	qrcode		5619551	0					
ANR	5619575	IdentifierDeclStatement	long result = 0 ;	840:1:31929:31944	5619551	1	True				
ANR	5619576	IdentifierDecl	result = 0		5619551	0					
ANR	5619577	IdentifierDeclType	long		5619551	0					
ANR	5619578	Identifier	result		5619551	1					
ANR	5619579	AssignmentExpression	result = 0		5619551	2		=			
ANR	5619580	Identifier	result		5619551	0					
ANR	5619581	PrimaryExpression	0		5619551	1					
ANR	5619582	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5619551	2					
ANR	5619583	ForInit	y = 0 ;	843:6:31999:32004	5619551	0	True				
ANR	5619584	AssignmentExpression	y = 0		5619551	0		=			
ANR	5619585	Identifier	y		5619551	0					
ANR	5619586	PrimaryExpression	0		5619551	1					
ANR	5619587	Condition	y < qrsize	843:13:32006:32015	5619551	1	True				
ANR	5619588	RelationalExpression	y < qrsize		5619551	0		<			
ANR	5619589	Identifier	y		5619551	0					
ANR	5619590	Identifier	qrsize		5619551	1					
ANR	5619591	PostIncDecOperationExpression	y ++	843:25:32018:32020	5619551	2	True				
ANR	5619592	Identifier	y		5619551	0					
ANR	5619593	IncDec	++		5619551	1					
ANR	5619594	CompoundStatement		8:2:166:178	5619551	3					
ANR	5619595	IdentifierDeclStatement	bool colorX ;	844:2:32027:32038	5619551	0	True				
ANR	5619596	IdentifierDecl	colorX		5619551	0					
ANR	5619597	IdentifierDeclType	bool		5619551	0					
ANR	5619598	Identifier	colorX		5619551	1					
ANR	5619599	IdentifierDeclStatement	int runX = 0 ;	845:2:32042:32054	5619551	1	True				
ANR	5619600	IdentifierDecl	runX = 0		5619551	0					
ANR	5619601	IdentifierDeclType	int		5619551	0					
ANR	5619602	Identifier	runX		5619551	1					
ANR	5619603	AssignmentExpression	runX = 0		5619551	2		=			
ANR	5619604	Identifier	runX		5619551	0					
ANR	5619605	PrimaryExpression	0		5619551	1					
ANR	5619606	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5619551	2					
ANR	5619607	ForInit	x = 0 ;	846:7:32063:32068	5619551	0	True				
ANR	5619608	AssignmentExpression	x = 0		5619551	0		=			
ANR	5619609	Identifier	x		5619551	0					
ANR	5619610	PrimaryExpression	0		5619551	1					
ANR	5619611	Condition	x < qrsize	846:14:32070:32079	5619551	1	True				
ANR	5619612	RelationalExpression	x < qrsize		5619551	0		<			
ANR	5619613	Identifier	x		5619551	0					
ANR	5619614	Identifier	qrsize		5619551	1					
ANR	5619615	PostIncDecOperationExpression	x ++	846:26:32082:32084	5619551	2	True				
ANR	5619616	Identifier	x		5619551	0					
ANR	5619617	IncDec	++		5619551	1					
ANR	5619618	CompoundStatement		9:31:211:211	5619551	3					
ANR	5619619	IfStatement	"if ( x == 0 || getModule ( qrcode , x , y ) != colorX )"		5619551	0					
ANR	5619620	Condition	"x == 0 || getModule ( qrcode , x , y ) != colorX"	847:7:32096:32139	5619551	0	True				
ANR	5619621	OrExpression	"x == 0 || getModule ( qrcode , x , y ) != colorX"		5619551	0		||			
ANR	5619622	EqualityExpression	x == 0		5619551	0		==			
ANR	5619623	Identifier	x		5619551	0					
ANR	5619624	PrimaryExpression	0		5619551	1					
ANR	5619625	EqualityExpression	"getModule ( qrcode , x , y ) != colorX"		5619551	1		!=			
ANR	5619626	CallExpression	"getModule ( qrcode , x , y )"		5619551	0					
ANR	5619627	Callee	getModule		5619551	0					
ANR	5619628	Identifier	getModule		5619551	0					
ANR	5619629	ArgumentList	qrcode		5619551	1					
ANR	5619630	Argument	qrcode		5619551	0					
ANR	5619631	Identifier	qrcode		5619551	0					
ANR	5619632	Argument	x		5619551	1					
ANR	5619633	Identifier	x		5619551	0					
ANR	5619634	Argument	y		5619551	2					
ANR	5619635	Identifier	y		5619551	0					
ANR	5619636	Identifier	colorX		5619551	1					
ANR	5619637	CompoundStatement		10:53:266:266	5619551	1					
ANR	5619638	ExpressionStatement	"colorX = getModule ( qrcode , x , y )"	848:4:32148:32181	5619551	0	True				
ANR	5619639	AssignmentExpression	"colorX = getModule ( qrcode , x , y )"		5619551	0		=			
ANR	5619640	Identifier	colorX		5619551	0					
ANR	5619641	CallExpression	"getModule ( qrcode , x , y )"		5619551	1					
ANR	5619642	Callee	getModule		5619551	0					
ANR	5619643	Identifier	getModule		5619551	0					
ANR	5619644	ArgumentList	qrcode		5619551	1					
ANR	5619645	Argument	qrcode		5619551	0					
ANR	5619646	Identifier	qrcode		5619551	0					
ANR	5619647	Argument	x		5619551	1					
ANR	5619648	Identifier	x		5619551	0					
ANR	5619649	Argument	y		5619551	2					
ANR	5619650	Identifier	y		5619551	0					
ANR	5619651	ExpressionStatement	runX = 1	849:4:32187:32195	5619551	1	True				
ANR	5619652	AssignmentExpression	runX = 1		5619551	0		=			
ANR	5619653	Identifier	runX		5619551	0					
ANR	5619654	PrimaryExpression	1		5619551	1					
ANR	5619655	ElseStatement	else		5619551	0					
ANR	5619656	CompoundStatement		13:10:331:331	5619551	0					
ANR	5619657	ExpressionStatement	runX ++	851:4:32213:32219	5619551	0	True				
ANR	5619658	PostIncDecOperationExpression	runX ++		5619551	0					
ANR	5619659	Identifier	runX		5619551	0					
ANR	5619660	IncDec	++		5619551	1					
ANR	5619661	IfStatement	if ( runX == 5 )		5619551	1					
ANR	5619662	Condition	runX == 5	852:8:32229:32237	5619551	0	True				
ANR	5619663	EqualityExpression	runX == 5		5619551	0		==			
ANR	5619664	Identifier	runX		5619551	0					
ANR	5619665	PrimaryExpression	5		5619551	1					
ANR	5619666	CompoundStatement		15:19:364:364	5619551	1					
ANR	5619667	ExpressionStatement	result += PENALTY_N1	853:5:32247:32267	5619551	0	True				
ANR	5619668	AssignmentExpression	result += PENALTY_N1		5619551	0		+=			
ANR	5619669	Identifier	result		5619551	0					
ANR	5619670	Identifier	PENALTY_N1		5619551	1					
ANR	5619671	ElseStatement	else		5619551	0					
ANR	5619672	IfStatement	if ( runX > 5 )		5619551	0					
ANR	5619673	Condition	runX > 5	854:15:32284:32291	5619551	0	True				
ANR	5619674	RelationalExpression	runX > 5		5619551	0		>			
ANR	5619675	Identifier	runX		5619551	0					
ANR	5619676	PrimaryExpression	5		5619551	1					
ANR	5619677	CompoundStatement		17:25:418:418	5619551	1					
ANR	5619678	ExpressionStatement	result ++	855:5:32301:32309	5619551	0	True				
ANR	5619679	PostIncDecOperationExpression	result ++		5619551	0					
ANR	5619680	Identifier	result		5619551	0					
ANR	5619681	IncDec	++		5619551	1					
ANR	5619682	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5619551	3					
ANR	5619683	ForInit	x = 0 ;	861:6:32384:32389	5619551	0	True				
ANR	5619684	AssignmentExpression	x = 0		5619551	0		=			
ANR	5619685	Identifier	x		5619551	0					
ANR	5619686	PrimaryExpression	0		5619551	1					
ANR	5619687	Condition	x < qrsize	861:13:32391:32400	5619551	1	True				
ANR	5619688	RelationalExpression	x < qrsize		5619551	0		<			
ANR	5619689	Identifier	x		5619551	0					
ANR	5619690	Identifier	qrsize		5619551	1					
ANR	5619691	PostIncDecOperationExpression	x ++	861:25:32403:32405	5619551	2	True				
ANR	5619692	Identifier	x		5619551	0					
ANR	5619693	IncDec	++		5619551	1					
ANR	5619694	CompoundStatement		26:2:551:563	5619551	3					
ANR	5619695	IdentifierDeclStatement	bool colorY ;	862:2:32412:32423	5619551	0	True				
ANR	5619696	IdentifierDecl	colorY		5619551	0					
ANR	5619697	IdentifierDeclType	bool		5619551	0					
ANR	5619698	Identifier	colorY		5619551	1					
ANR	5619699	IdentifierDeclStatement	int runY = 0 ;	863:2:32427:32439	5619551	1	True				
ANR	5619700	IdentifierDecl	runY = 0		5619551	0					
ANR	5619701	IdentifierDeclType	int		5619551	0					
ANR	5619702	Identifier	runY		5619551	1					
ANR	5619703	AssignmentExpression	runY = 0		5619551	2		=			
ANR	5619704	Identifier	runY		5619551	0					
ANR	5619705	PrimaryExpression	0		5619551	1					
ANR	5619706	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5619551	2					
ANR	5619707	ForInit	y = 0 ;	864:7:32448:32453	5619551	0	True				
ANR	5619708	AssignmentExpression	y = 0		5619551	0		=			
ANR	5619709	Identifier	y		5619551	0					
ANR	5619710	PrimaryExpression	0		5619551	1					
ANR	5619711	Condition	y < qrsize	864:14:32455:32464	5619551	1	True				
ANR	5619712	RelationalExpression	y < qrsize		5619551	0		<			
ANR	5619713	Identifier	y		5619551	0					
ANR	5619714	Identifier	qrsize		5619551	1					
ANR	5619715	PostIncDecOperationExpression	y ++	864:26:32467:32469	5619551	2	True				
ANR	5619716	Identifier	y		5619551	0					
ANR	5619717	IncDec	++		5619551	1					
ANR	5619718	CompoundStatement		27:31:596:596	5619551	3					
ANR	5619719	IfStatement	"if ( y == 0 || getModule ( qrcode , x , y ) != colorY )"		5619551	0					
ANR	5619720	Condition	"y == 0 || getModule ( qrcode , x , y ) != colorY"	865:7:32481:32524	5619551	0	True				
ANR	5619721	OrExpression	"y == 0 || getModule ( qrcode , x , y ) != colorY"		5619551	0		||			
ANR	5619722	EqualityExpression	y == 0		5619551	0		==			
ANR	5619723	Identifier	y		5619551	0					
ANR	5619724	PrimaryExpression	0		5619551	1					
ANR	5619725	EqualityExpression	"getModule ( qrcode , x , y ) != colorY"		5619551	1		!=			
ANR	5619726	CallExpression	"getModule ( qrcode , x , y )"		5619551	0					
ANR	5619727	Callee	getModule		5619551	0					
ANR	5619728	Identifier	getModule		5619551	0					
ANR	5619729	ArgumentList	qrcode		5619551	1					
ANR	5619730	Argument	qrcode		5619551	0					
ANR	5619731	Identifier	qrcode		5619551	0					
ANR	5619732	Argument	x		5619551	1					
ANR	5619733	Identifier	x		5619551	0					
ANR	5619734	Argument	y		5619551	2					
ANR	5619735	Identifier	y		5619551	0					
ANR	5619736	Identifier	colorY		5619551	1					
ANR	5619737	CompoundStatement		28:53:651:651	5619551	1					
ANR	5619738	ExpressionStatement	"colorY = getModule ( qrcode , x , y )"	866:4:32533:32566	5619551	0	True				
ANR	5619739	AssignmentExpression	"colorY = getModule ( qrcode , x , y )"		5619551	0		=			
ANR	5619740	Identifier	colorY		5619551	0					
ANR	5619741	CallExpression	"getModule ( qrcode , x , y )"		5619551	1					
ANR	5619742	Callee	getModule		5619551	0					
ANR	5619743	Identifier	getModule		5619551	0					
ANR	5619744	ArgumentList	qrcode		5619551	1					
ANR	5619745	Argument	qrcode		5619551	0					
ANR	5619746	Identifier	qrcode		5619551	0					
ANR	5619747	Argument	x		5619551	1					
ANR	5619748	Identifier	x		5619551	0					
ANR	5619749	Argument	y		5619551	2					
ANR	5619750	Identifier	y		5619551	0					
ANR	5619751	ExpressionStatement	runY = 1	867:4:32572:32580	5619551	1	True				
ANR	5619752	AssignmentExpression	runY = 1		5619551	0		=			
ANR	5619753	Identifier	runY		5619551	0					
ANR	5619754	PrimaryExpression	1		5619551	1					
ANR	5619755	ElseStatement	else		5619551	0					
ANR	5619756	CompoundStatement		31:10:716:716	5619551	0					
ANR	5619757	ExpressionStatement	runY ++	869:4:32598:32604	5619551	0	True				
ANR	5619758	PostIncDecOperationExpression	runY ++		5619551	0					
ANR	5619759	Identifier	runY		5619551	0					
ANR	5619760	IncDec	++		5619551	1					
ANR	5619761	IfStatement	if ( runY == 5 )		5619551	1					
ANR	5619762	Condition	runY == 5	870:8:32614:32622	5619551	0	True				
ANR	5619763	EqualityExpression	runY == 5		5619551	0		==			
ANR	5619764	Identifier	runY		5619551	0					
ANR	5619765	PrimaryExpression	5		5619551	1					
ANR	5619766	CompoundStatement		33:19:749:749	5619551	1					
ANR	5619767	ExpressionStatement	result += PENALTY_N1	871:5:32632:32652	5619551	0	True				
ANR	5619768	AssignmentExpression	result += PENALTY_N1		5619551	0		+=			
ANR	5619769	Identifier	result		5619551	0					
ANR	5619770	Identifier	PENALTY_N1		5619551	1					
ANR	5619771	ElseStatement	else		5619551	0					
ANR	5619772	IfStatement	if ( runY > 5 )		5619551	0					
ANR	5619773	Condition	runY > 5	872:15:32669:32676	5619551	0	True				
ANR	5619774	RelationalExpression	runY > 5		5619551	0		>			
ANR	5619775	Identifier	runY		5619551	0					
ANR	5619776	PrimaryExpression	5		5619551	1					
ANR	5619777	CompoundStatement		35:25:803:803	5619551	1					
ANR	5619778	ExpressionStatement	result ++	873:5:32686:32694	5619551	0	True				
ANR	5619779	PostIncDecOperationExpression	result ++		5619551	0					
ANR	5619780	Identifier	result		5619551	0					
ANR	5619781	IncDec	++		5619551	1					
ANR	5619782	ForStatement	for ( y = 0 ; y < qrsize - 1 ; y ++ )		5619551	4					
ANR	5619783	ForInit	y = 0 ;	880:6:32765:32770	5619551	0	True				
ANR	5619784	AssignmentExpression	y = 0		5619551	0		=			
ANR	5619785	Identifier	y		5619551	0					
ANR	5619786	PrimaryExpression	0		5619551	1					
ANR	5619787	Condition	y < qrsize - 1	880:13:32772:32785	5619551	1	True				
ANR	5619788	RelationalExpression	y < qrsize - 1		5619551	0		<			
ANR	5619789	Identifier	y		5619551	0					
ANR	5619790	AdditiveExpression	qrsize - 1		5619551	1		-			
ANR	5619791	Identifier	qrsize		5619551	0					
ANR	5619792	PrimaryExpression	1		5619551	1					
ANR	5619793	PostIncDecOperationExpression	y ++	880:29:32788:32790	5619551	2	True				
ANR	5619794	Identifier	y		5619551	0					
ANR	5619795	IncDec	++		5619551	1					
ANR	5619796	CompoundStatement		43:34:917:917	5619551	3					
ANR	5619797	ForStatement	for ( x = 0 ; x < qrsize - 1 ; x ++ )		5619551	0					
ANR	5619798	ForInit	x = 0 ;	881:7:32802:32807	5619551	0	True				
ANR	5619799	AssignmentExpression	x = 0		5619551	0		=			
ANR	5619800	Identifier	x		5619551	0					
ANR	5619801	PrimaryExpression	0		5619551	1					
ANR	5619802	Condition	x < qrsize - 1	881:14:32809:32822	5619551	1	True				
ANR	5619803	RelationalExpression	x < qrsize - 1		5619551	0		<			
ANR	5619804	Identifier	x		5619551	0					
ANR	5619805	AdditiveExpression	qrsize - 1		5619551	1		-			
ANR	5619806	Identifier	qrsize		5619551	0					
ANR	5619807	PrimaryExpression	1		5619551	1					
ANR	5619808	PostIncDecOperationExpression	x ++	881:30:32825:32827	5619551	2	True				
ANR	5619809	Identifier	x		5619551	0					
ANR	5619810	IncDec	++		5619551	1					
ANR	5619811	CompoundStatement		45:3:959:996	5619551	3					
ANR	5619812	IdentifierDeclStatement	"bool color = getModule ( qrcode , x , y ) ;"	882:3:32835:32872	5619551	0	True				
ANR	5619813	IdentifierDecl	"color = getModule ( qrcode , x , y )"		5619551	0					
ANR	5619814	IdentifierDeclType	bool		5619551	0					
ANR	5619815	Identifier	color		5619551	1					
ANR	5619816	AssignmentExpression	"color = getModule ( qrcode , x , y )"		5619551	2		=			
ANR	5619817	Identifier	color		5619551	0					
ANR	5619818	CallExpression	"getModule ( qrcode , x , y )"		5619551	1					
ANR	5619819	Callee	getModule		5619551	0					
ANR	5619820	Identifier	getModule		5619551	0					
ANR	5619821	ArgumentList	qrcode		5619551	1					
ANR	5619822	Argument	qrcode		5619551	0					
ANR	5619823	Identifier	qrcode		5619551	0					
ANR	5619824	Argument	x		5619551	1					
ANR	5619825	Identifier	x		5619551	0					
ANR	5619826	Argument	y		5619551	2					
ANR	5619827	Identifier	y		5619551	0					
ANR	5619828	IfStatement	"if ( color == getModule ( qrcode , x + 1 , y ) && color == getModule ( qrcode , x , y + 1 ) && color == getModule ( qrcode , x + 1 , y + 1 ) )"		5619551	1					
ANR	5619829	Condition	"color == getModule ( qrcode , x + 1 , y ) && color == getModule ( qrcode , x , y + 1 ) && color == getModule ( qrcode , x + 1 , y + 1 )"	883:7:32881:33017	5619551	0	True				
ANR	5619830	AndExpression	"color == getModule ( qrcode , x + 1 , y ) && color == getModule ( qrcode , x , y + 1 ) && color == getModule ( qrcode , x + 1 , y + 1 )"		5619551	0		&&			
ANR	5619831	EqualityExpression	"color == getModule ( qrcode , x + 1 , y )"		5619551	0		==			
ANR	5619832	Identifier	color		5619551	0					
ANR	5619833	CallExpression	"getModule ( qrcode , x + 1 , y )"		5619551	1					
ANR	5619834	Callee	getModule		5619551	0					
ANR	5619835	Identifier	getModule		5619551	0					
ANR	5619836	ArgumentList	qrcode		5619551	1					
ANR	5619837	Argument	qrcode		5619551	0					
ANR	5619838	Identifier	qrcode		5619551	0					
ANR	5619839	Argument	x + 1		5619551	1					
ANR	5619840	AdditiveExpression	x + 1		5619551	0		+			
ANR	5619841	Identifier	x		5619551	0					
ANR	5619842	PrimaryExpression	1		5619551	1					
ANR	5619843	Argument	y		5619551	2					
ANR	5619844	Identifier	y		5619551	0					
ANR	5619845	AndExpression	"color == getModule ( qrcode , x , y + 1 ) && color == getModule ( qrcode , x + 1 , y + 1 )"		5619551	1		&&			
ANR	5619846	EqualityExpression	"color == getModule ( qrcode , x , y + 1 )"		5619551	0		==			
ANR	5619847	Identifier	color		5619551	0					
ANR	5619848	CallExpression	"getModule ( qrcode , x , y + 1 )"		5619551	1					
ANR	5619849	Callee	getModule		5619551	0					
ANR	5619850	Identifier	getModule		5619551	0					
ANR	5619851	ArgumentList	qrcode		5619551	1					
ANR	5619852	Argument	qrcode		5619551	0					
ANR	5619853	Identifier	qrcode		5619551	0					
ANR	5619854	Argument	x		5619551	1					
ANR	5619855	Identifier	x		5619551	0					
ANR	5619856	Argument	y + 1		5619551	2					
ANR	5619857	AdditiveExpression	y + 1		5619551	0		+			
ANR	5619858	Identifier	y		5619551	0					
ANR	5619859	PrimaryExpression	1		5619551	1					
ANR	5619860	EqualityExpression	"color == getModule ( qrcode , x + 1 , y + 1 )"		5619551	1		==			
ANR	5619861	Identifier	color		5619551	0					
ANR	5619862	CallExpression	"getModule ( qrcode , x + 1 , y + 1 )"		5619551	1					
ANR	5619863	Callee	getModule		5619551	0					
ANR	5619864	Identifier	getModule		5619551	0					
ANR	5619865	ArgumentList	qrcode		5619551	1					
ANR	5619866	Argument	qrcode		5619551	0					
ANR	5619867	Identifier	qrcode		5619551	0					
ANR	5619868	Argument	x + 1		5619551	1					
ANR	5619869	AdditiveExpression	x + 1		5619551	0		+			
ANR	5619870	Identifier	x		5619551	0					
ANR	5619871	PrimaryExpression	1		5619551	1					
ANR	5619872	Argument	y + 1		5619551	2					
ANR	5619873	AdditiveExpression	y + 1		5619551	0		+			
ANR	5619874	Identifier	y		5619551	0					
ANR	5619875	PrimaryExpression	1		5619551	1					
ANR	5619876	CompoundStatement		48:50:1144:1144	5619551	1					
ANR	5619877	ExpressionStatement	result += PENALTY_N2	886:4:33026:33046	5619551	0	True				
ANR	5619878	AssignmentExpression	result += PENALTY_N2		5619551	0		+=			
ANR	5619879	Identifier	result		5619551	0					
ANR	5619880	Identifier	PENALTY_N2		5619551	1					
ANR	5619881	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5619551	5					
ANR	5619882	ForInit	y = 0 ;	892:6:33099:33104	5619551	0	True				
ANR	5619883	AssignmentExpression	y = 0		5619551	0		=			
ANR	5619884	Identifier	y		5619551	0					
ANR	5619885	PrimaryExpression	0		5619551	1					
ANR	5619886	Condition	y < qrsize	892:13:33106:33115	5619551	1	True				
ANR	5619887	RelationalExpression	y < qrsize		5619551	0		<			
ANR	5619888	Identifier	y		5619551	0					
ANR	5619889	Identifier	qrsize		5619551	1					
ANR	5619890	PostIncDecOperationExpression	y ++	892:25:33118:33120	5619551	2	True				
ANR	5619891	Identifier	y		5619551	0					
ANR	5619892	IncDec	++		5619551	1					
ANR	5619893	CompoundStatement		56:2:1251:1263	5619551	3					
ANR	5619894	IdentifierDeclStatement	int bits = 0 ;	893:2:33127:33139	5619551	0	True				
ANR	5619895	IdentifierDecl	bits = 0		5619551	0					
ANR	5619896	IdentifierDeclType	int		5619551	0					
ANR	5619897	Identifier	bits		5619551	1					
ANR	5619898	AssignmentExpression	bits = 0		5619551	2		=			
ANR	5619899	Identifier	bits		5619551	0					
ANR	5619900	PrimaryExpression	0		5619551	1					
ANR	5619901	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5619551	1					
ANR	5619902	ForInit	x = 0 ;	894:7:33148:33153	5619551	0	True				
ANR	5619903	AssignmentExpression	x = 0		5619551	0		=			
ANR	5619904	Identifier	x		5619551	0					
ANR	5619905	PrimaryExpression	0		5619551	1					
ANR	5619906	Condition	x < qrsize	894:14:33155:33164	5619551	1	True				
ANR	5619907	RelationalExpression	x < qrsize		5619551	0		<			
ANR	5619908	Identifier	x		5619551	0					
ANR	5619909	Identifier	qrsize		5619551	1					
ANR	5619910	PostIncDecOperationExpression	x ++	894:26:33167:33169	5619551	2	True				
ANR	5619911	Identifier	x		5619551	0					
ANR	5619912	IncDec	++		5619551	1					
ANR	5619913	CompoundStatement		57:31:1296:1296	5619551	3					
ANR	5619914	ExpressionStatement	"bits = ( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"	895:3:33177:33240	5619551	0	True				
ANR	5619915	AssignmentExpression	"bits = ( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"		5619551	0		=			
ANR	5619916	Identifier	bits		5619551	0					
ANR	5619917	InclusiveOrExpression	"( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"		5619551	1		|			
ANR	5619918	BitAndExpression	( bits << 1 ) & 0x7FF		5619551	0		&			
ANR	5619919	ShiftExpression	bits << 1		5619551	0		<<			
ANR	5619920	Identifier	bits		5619551	0					
ANR	5619921	PrimaryExpression	1		5619551	1					
ANR	5619922	PrimaryExpression	0x7FF		5619551	1					
ANR	5619923	ConditionalExpression	"getModule ( qrcode , x , y ) ? 1 : 0"		5619551	1					
ANR	5619924	Condition	"getModule ( qrcode , x , y )"		5619551	0					
ANR	5619925	CallExpression	"getModule ( qrcode , x , y )"		5619551	0					
ANR	5619926	Callee	getModule		5619551	0					
ANR	5619927	Identifier	getModule		5619551	0					
ANR	5619928	ArgumentList	qrcode		5619551	1					
ANR	5619929	Argument	qrcode		5619551	0					
ANR	5619930	Identifier	qrcode		5619551	0					
ANR	5619931	Argument	x		5619551	1					
ANR	5619932	Identifier	x		5619551	0					
ANR	5619933	Argument	y		5619551	2					
ANR	5619934	Identifier	y		5619551	0					
ANR	5619935	PrimaryExpression	1		5619551	1					
ANR	5619936	PrimaryExpression	0		5619551	2					
ANR	5619937	IfStatement	if ( x >= 10 && ( bits == 0x05D || bits == 0x5D0 ) )		5619551	1					
ANR	5619938	Condition	x >= 10 && ( bits == 0x05D || bits == 0x5D0 )	896:7:33249:33291	5619551	0	True				
ANR	5619939	AndExpression	x >= 10 && ( bits == 0x05D || bits == 0x5D0 )		5619551	0		&&			
ANR	5619940	RelationalExpression	x >= 10		5619551	0		>=			
ANR	5619941	Identifier	x		5619551	0					
ANR	5619942	PrimaryExpression	10		5619551	1					
ANR	5619943	OrExpression	bits == 0x05D || bits == 0x5D0		5619551	1		||			
ANR	5619944	EqualityExpression	bits == 0x05D		5619551	0		==			
ANR	5619945	Identifier	bits		5619551	0					
ANR	5619946	PrimaryExpression	0x05D		5619551	1					
ANR	5619947	EqualityExpression	bits == 0x5D0		5619551	1		==			
ANR	5619948	Identifier	bits		5619551	0					
ANR	5619949	PrimaryExpression	0x5D0		5619551	1					
ANR	5619950	CompoundStatement		59:52:1418:1418	5619551	1					
ANR	5619951	ExpressionStatement	result += PENALTY_N3	897:4:33329:33349	5619551	0	True				
ANR	5619952	AssignmentExpression	result += PENALTY_N3		5619551	0		+=			
ANR	5619953	Identifier	result		5619551	0					
ANR	5619954	Identifier	PENALTY_N3		5619551	1					
ANR	5619955	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5619551	6					
ANR	5619956	ForInit	x = 0 ;	902:6:33404:33409	5619551	0	True				
ANR	5619957	AssignmentExpression	x = 0		5619551	0		=			
ANR	5619958	Identifier	x		5619551	0					
ANR	5619959	PrimaryExpression	0		5619551	1					
ANR	5619960	Condition	x < qrsize	902:13:33411:33420	5619551	1	True				
ANR	5619961	RelationalExpression	x < qrsize		5619551	0		<			
ANR	5619962	Identifier	x		5619551	0					
ANR	5619963	Identifier	qrsize		5619551	1					
ANR	5619964	PostIncDecOperationExpression	x ++	902:25:33423:33425	5619551	2	True				
ANR	5619965	Identifier	x		5619551	0					
ANR	5619966	IncDec	++		5619551	1					
ANR	5619967	CompoundStatement		66:2:1556:1568	5619551	3					
ANR	5619968	IdentifierDeclStatement	int bits = 0 ;	903:2:33432:33444	5619551	0	True				
ANR	5619969	IdentifierDecl	bits = 0		5619551	0					
ANR	5619970	IdentifierDeclType	int		5619551	0					
ANR	5619971	Identifier	bits		5619551	1					
ANR	5619972	AssignmentExpression	bits = 0		5619551	2		=			
ANR	5619973	Identifier	bits		5619551	0					
ANR	5619974	PrimaryExpression	0		5619551	1					
ANR	5619975	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5619551	1					
ANR	5619976	ForInit	y = 0 ;	904:7:33453:33458	5619551	0	True				
ANR	5619977	AssignmentExpression	y = 0		5619551	0		=			
ANR	5619978	Identifier	y		5619551	0					
ANR	5619979	PrimaryExpression	0		5619551	1					
ANR	5619980	Condition	y < qrsize	904:14:33460:33469	5619551	1	True				
ANR	5619981	RelationalExpression	y < qrsize		5619551	0		<			
ANR	5619982	Identifier	y		5619551	0					
ANR	5619983	Identifier	qrsize		5619551	1					
ANR	5619984	PostIncDecOperationExpression	y ++	904:26:33472:33474	5619551	2	True				
ANR	5619985	Identifier	y		5619551	0					
ANR	5619986	IncDec	++		5619551	1					
ANR	5619987	CompoundStatement		67:31:1601:1601	5619551	3					
ANR	5619988	ExpressionStatement	"bits = ( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"	905:3:33482:33545	5619551	0	True				
ANR	5619989	AssignmentExpression	"bits = ( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"		5619551	0		=			
ANR	5619990	Identifier	bits		5619551	0					
ANR	5619991	InclusiveOrExpression	"( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"		5619551	1		|			
ANR	5619992	BitAndExpression	( bits << 1 ) & 0x7FF		5619551	0		&			
ANR	5619993	ShiftExpression	bits << 1		5619551	0		<<			
ANR	5619994	Identifier	bits		5619551	0					
ANR	5619995	PrimaryExpression	1		5619551	1					
ANR	5619996	PrimaryExpression	0x7FF		5619551	1					
ANR	5619997	ConditionalExpression	"getModule ( qrcode , x , y ) ? 1 : 0"		5619551	1					
ANR	5619998	Condition	"getModule ( qrcode , x , y )"		5619551	0					
ANR	5619999	CallExpression	"getModule ( qrcode , x , y )"		5619551	0					
ANR	5620000	Callee	getModule		5619551	0					
ANR	5620001	Identifier	getModule		5619551	0					
ANR	5620002	ArgumentList	qrcode		5619551	1					
ANR	5620003	Argument	qrcode		5619551	0					
ANR	5620004	Identifier	qrcode		5619551	0					
ANR	5620005	Argument	x		5619551	1					
ANR	5620006	Identifier	x		5619551	0					
ANR	5620007	Argument	y		5619551	2					
ANR	5620008	Identifier	y		5619551	0					
ANR	5620009	PrimaryExpression	1		5619551	1					
ANR	5620010	PrimaryExpression	0		5619551	2					
ANR	5620011	IfStatement	if ( y >= 10 && ( bits == 0x05D || bits == 0x5D0 ) )		5619551	1					
ANR	5620012	Condition	y >= 10 && ( bits == 0x05D || bits == 0x5D0 )	906:7:33554:33596	5619551	0	True				
ANR	5620013	AndExpression	y >= 10 && ( bits == 0x05D || bits == 0x5D0 )		5619551	0		&&			
ANR	5620014	RelationalExpression	y >= 10		5619551	0		>=			
ANR	5620015	Identifier	y		5619551	0					
ANR	5620016	PrimaryExpression	10		5619551	1					
ANR	5620017	OrExpression	bits == 0x05D || bits == 0x5D0		5619551	1		||			
ANR	5620018	EqualityExpression	bits == 0x05D		5619551	0		==			
ANR	5620019	Identifier	bits		5619551	0					
ANR	5620020	PrimaryExpression	0x05D		5619551	1					
ANR	5620021	EqualityExpression	bits == 0x5D0		5619551	1		==			
ANR	5620022	Identifier	bits		5619551	0					
ANR	5620023	PrimaryExpression	0x5D0		5619551	1					
ANR	5620024	CompoundStatement		69:52:1723:1723	5619551	1					
ANR	5620025	ExpressionStatement	result += PENALTY_N3	907:4:33634:33654	5619551	0	True				
ANR	5620026	AssignmentExpression	result += PENALTY_N3		5619551	0		+=			
ANR	5620027	Identifier	result		5619551	0					
ANR	5620028	Identifier	PENALTY_N3		5619551	1					
ANR	5620029	IdentifierDeclStatement	int black = 0 ;	913:1:33709:33722	5619551	7	True				
ANR	5620030	IdentifierDecl	black = 0		5619551	0					
ANR	5620031	IdentifierDeclType	int		5619551	0					
ANR	5620032	Identifier	black		5619551	1					
ANR	5620033	AssignmentExpression	black = 0		5619551	2		=			
ANR	5620034	Identifier	black		5619551	0					
ANR	5620035	PrimaryExpression	0		5619551	1					
ANR	5620036	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5619551	8					
ANR	5620037	ForInit	y = 0 ;	914:6:33730:33735	5619551	0	True				
ANR	5620038	AssignmentExpression	y = 0		5619551	0		=			
ANR	5620039	Identifier	y		5619551	0					
ANR	5620040	PrimaryExpression	0		5619551	1					
ANR	5620041	Condition	y < qrsize	914:13:33737:33746	5619551	1	True				
ANR	5620042	RelationalExpression	y < qrsize		5619551	0		<			
ANR	5620043	Identifier	y		5619551	0					
ANR	5620044	Identifier	qrsize		5619551	1					
ANR	5620045	PostIncDecOperationExpression	y ++	914:25:33749:33751	5619551	2	True				
ANR	5620046	Identifier	y		5619551	0					
ANR	5620047	IncDec	++		5619551	1					
ANR	5620048	CompoundStatement		77:30:1878:1878	5619551	3					
ANR	5620049	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5619551	0					
ANR	5620050	ForInit	x = 0 ;	915:7:33763:33768	5619551	0	True				
ANR	5620051	AssignmentExpression	x = 0		5619551	0		=			
ANR	5620052	Identifier	x		5619551	0					
ANR	5620053	PrimaryExpression	0		5619551	1					
ANR	5620054	Condition	x < qrsize	915:14:33770:33779	5619551	1	True				
ANR	5620055	RelationalExpression	x < qrsize		5619551	0		<			
ANR	5620056	Identifier	x		5619551	0					
ANR	5620057	Identifier	qrsize		5619551	1					
ANR	5620058	PostIncDecOperationExpression	x ++	915:26:33782:33784	5619551	2	True				
ANR	5620059	Identifier	x		5619551	0					
ANR	5620060	IncDec	++		5619551	1					
ANR	5620061	CompoundStatement		78:31:1911:1911	5619551	3					
ANR	5620062	IfStatement	"if ( getModule ( qrcode , x , y ) )"		5619551	0					
ANR	5620063	Condition	"getModule ( qrcode , x , y )"	916:7:33796:33819	5619551	0	True				
ANR	5620064	CallExpression	"getModule ( qrcode , x , y )"		5619551	0					
ANR	5620065	Callee	getModule		5619551	0					
ANR	5620066	Identifier	getModule		5619551	0					
ANR	5620067	ArgumentList	qrcode		5619551	1					
ANR	5620068	Argument	qrcode		5619551	0					
ANR	5620069	Identifier	qrcode		5619551	0					
ANR	5620070	Argument	x		5619551	1					
ANR	5620071	Identifier	x		5619551	0					
ANR	5620072	Argument	y		5619551	2					
ANR	5620073	Identifier	y		5619551	0					
ANR	5620074	CompoundStatement		79:33:1946:1946	5619551	1					
ANR	5620075	ExpressionStatement	black ++	917:4:33828:33835	5619551	0	True				
ANR	5620076	PostIncDecOperationExpression	black ++		5619551	0					
ANR	5620077	Identifier	black		5619551	0					
ANR	5620078	IncDec	++		5619551	1					
ANR	5620079	IdentifierDeclStatement	int total = qrsize * qrsize ;	921:1:33850:33877	5619551	9	True				
ANR	5620080	IdentifierDecl	total = qrsize * qrsize		5619551	0					
ANR	5620081	IdentifierDeclType	int		5619551	0					
ANR	5620082	Identifier	total		5619551	1					
ANR	5620083	AssignmentExpression	total = qrsize * qrsize		5619551	2		=			
ANR	5620084	Identifier	total		5619551	0					
ANR	5620085	MultiplicativeExpression	qrsize * qrsize		5619551	1		*			
ANR	5620086	Identifier	qrsize		5619551	0					
ANR	5620087	Identifier	qrsize		5619551	1					
ANR	5620088	ForStatement	for ( k = 0 ; black * 20L < ( 9L - k ) * total || black * 20L > ( 11L + k ) * total ; k ++ )		5619551	10					
ANR	5620089	ForInit	k = 0 ;	923:6:33950:33955	5619551	0	True				
ANR	5620090	AssignmentExpression	k = 0		5619551	0		=			
ANR	5620091	Identifier	k		5619551	0					
ANR	5620092	PrimaryExpression	0		5619551	1					
ANR	5620093	Condition	black * 20L < ( 9L - k ) * total || black * 20L > ( 11L + k ) * total	923:13:33957:34021	5619551	1	True				
ANR	5620094	OrExpression	black * 20L < ( 9L - k ) * total || black * 20L > ( 11L + k ) * total		5619551	0		||			
ANR	5620095	RelationalExpression	black * 20L < ( 9L - k ) * total		5619551	0		<			
ANR	5620096	MultiplicativeExpression	black * 20L		5619551	0		*			
ANR	5620097	Identifier	black		5619551	0					
ANR	5620098	PrimaryExpression	20L		5619551	1					
ANR	5620099	MultiplicativeExpression	( 9L - k ) * total		5619551	1		*			
ANR	5620100	AdditiveExpression	9L - k		5619551	0		-			
ANR	5620101	PrimaryExpression	9L		5619551	0					
ANR	5620102	Identifier	k		5619551	1					
ANR	5620103	Identifier	total		5619551	1					
ANR	5620104	RelationalExpression	black * 20L > ( 11L + k ) * total		5619551	1		>			
ANR	5620105	MultiplicativeExpression	black * 20L		5619551	0		*			
ANR	5620106	Identifier	black		5619551	0					
ANR	5620107	PrimaryExpression	20L		5619551	1					
ANR	5620108	MultiplicativeExpression	( 11L + k ) * total		5619551	1		*			
ANR	5620109	AdditiveExpression	11L + k		5619551	0		+			
ANR	5620110	PrimaryExpression	11L		5619551	0					
ANR	5620111	Identifier	k		5619551	1					
ANR	5620112	Identifier	total		5619551	1					
ANR	5620113	PostIncDecOperationExpression	k ++	923:80:34024:34026	5619551	2	True				
ANR	5620114	Identifier	k		5619551	0					
ANR	5620115	IncDec	++		5619551	1					
ANR	5620116	CompoundStatement		86:85:2153:2153	5619551	3					
ANR	5620117	ExpressionStatement	result += PENALTY_N4	924:2:34033:34053	5619551	0	True				
ANR	5620118	AssignmentExpression	result += PENALTY_N4		5619551	0		+=			
ANR	5620119	Identifier	result		5619551	0					
ANR	5620120	Identifier	PENALTY_N4		5619551	1					
ANR	5620121	ReturnStatement	return result ;	926:1:34059:34072	5619551	11	True				
ANR	5620122	Identifier	result		5619551	0					
ANR	5620123	ReturnType	static long		5619551	1					
ANR	5620124	Identifier	getPenaltyScore		5619551	2					
ANR	5620125	ParameterList	const ut8 qrcode [ ]		5619551	3					
ANR	5620126	Parameter	const ut8 qrcode [ ]	838:28:31855:31872	5619551	0	True				
ANR	5620127	ParameterType	const ut8 [ ]		5619551	0					
ANR	5620128	Identifier	qrcode		5619551	1					
ANR	5620129	CFGEntryNode	ENTRY		5619551		True				
ANR	5620130	CFGExitNode	EXIT		5619551		True				
ANR	5620131	Symbol	getModule		5619551						
ANR	5620132	Symbol	color		5619551						
ANR	5620133	Symbol	qrcode		5619551						
ANR	5620134	Symbol	colorY		5619551						
ANR	5620135	Symbol	bits		5619551						
ANR	5620136	Symbol	black		5619551						
ANR	5620137	Symbol	qrcodegen_getSize		5619551						
ANR	5620138	Symbol	k		5619551						
ANR	5620139	Symbol	colorX		5619551						
ANR	5620140	Symbol	qrsize		5619551						
ANR	5620141	Symbol	result		5619551						
ANR	5620142	Symbol	total		5619551						
ANR	5620143	Symbol	PENALTY_N4		5619551						
ANR	5620144	Symbol	PENALTY_N3		5619551						
ANR	5620145	Symbol	PENALTY_N2		5619551						
ANR	5620146	Symbol	PENALTY_N1		5619551						
ANR	5620147	Symbol	x		5619551						
ANR	5620148	Symbol	runX		5619551						
ANR	5620149	Symbol	y		5619551						
ANR	5620150	Symbol	runY		5619551						
ANR	5620151	Function	qrcodegen_getSize	933:0:34182:34416							
ANR	5620152	FunctionDef	qrcodegen_getSize (const ut8 * qrcode)		5620151	0					
ANR	5620153	CompoundStatement		933:48:34230:34416	5620151	0					
ANR	5620154	IfStatement	if ( ! qrcode )		5620151	0					
ANR	5620155	Condition	! qrcode	934:5:34237:34243	5620151	0	True				
ANR	5620156	UnaryOperationExpression	! qrcode		5620151	0					
ANR	5620157	UnaryOperator	!		5620151	0					
ANR	5620158	Identifier	qrcode		5620151	1					
ANR	5620159	CompoundStatement		2:14:15:15	5620151	1					
ANR	5620160	ReturnStatement	return 0 ;	935:2:34250:34258	5620151	0	True				
ANR	5620161	PrimaryExpression	0		5620151	0					
ANR	5620162	IdentifierDeclStatement	int result = qrcode [ 0 ] ;	937:1:34264:34286	5620151	1	True				
ANR	5620163	IdentifierDecl	result = qrcode [ 0 ]		5620151	0					
ANR	5620164	IdentifierDeclType	int		5620151	0					
ANR	5620165	Identifier	result		5620151	1					
ANR	5620166	AssignmentExpression	result = qrcode [ 0 ]		5620151	2		=			
ANR	5620167	Identifier	result		5620151	0					
ANR	5620168	ArrayIndexing	qrcode [ 0 ]		5620151	1					
ANR	5620169	Identifier	qrcode		5620151	0					
ANR	5620170	PrimaryExpression	0		5620151	1					
ANR	5620171	IfStatement	if ( ( qrcodegen_VERSION_MIN * 4 + 17 ) <= result && result <= ( qrcodegen_VERSION_MAX * 4 + 17 ) )		5620151	2					
ANR	5620172	Condition	( qrcodegen_VERSION_MIN * 4 + 17 ) <= result && result <= ( qrcodegen_VERSION_MAX * 4 + 17 )	938:5:34293:34380	5620151	0	True				
ANR	5620173	AndExpression	( qrcodegen_VERSION_MIN * 4 + 17 ) <= result && result <= ( qrcodegen_VERSION_MAX * 4 + 17 )		5620151	0		&&			
ANR	5620174	RelationalExpression	( qrcodegen_VERSION_MIN * 4 + 17 ) <= result		5620151	0		<=			
ANR	5620175	AdditiveExpression	qrcodegen_VERSION_MIN * 4 + 17		5620151	0		+			
ANR	5620176	MultiplicativeExpression	qrcodegen_VERSION_MIN * 4		5620151	0		*			
ANR	5620177	Identifier	qrcodegen_VERSION_MIN		5620151	0					
ANR	5620178	PrimaryExpression	4		5620151	1					
ANR	5620179	PrimaryExpression	17		5620151	1					
ANR	5620180	Identifier	result		5620151	1					
ANR	5620181	RelationalExpression	result <= ( qrcodegen_VERSION_MAX * 4 + 17 )		5620151	1		<=			
ANR	5620182	Identifier	result		5620151	0					
ANR	5620183	AdditiveExpression	qrcodegen_VERSION_MAX * 4 + 17		5620151	1		+			
ANR	5620184	MultiplicativeExpression	qrcodegen_VERSION_MAX * 4		5620151	0		*			
ANR	5620185	Identifier	qrcodegen_VERSION_MAX		5620151	0					
ANR	5620186	PrimaryExpression	4		5620151	1					
ANR	5620187	PrimaryExpression	17		5620151	1					
ANR	5620188	CompoundStatement		6:95:152:152	5620151	1					
ANR	5620189	ReturnStatement	return result ;	939:2:34387:34400	5620151	0	True				
ANR	5620190	Identifier	result		5620151	0					
ANR	5620191	ReturnStatement	return 0 ;	941:1:34406:34414	5620151	3	True				
ANR	5620192	PrimaryExpression	0		5620151	0					
ANR	5620193	ReturnType	static int		5620151	1					
ANR	5620194	Identifier	qrcodegen_getSize		5620151	2					
ANR	5620195	ParameterList	const ut8 * qrcode		5620151	3					
ANR	5620196	Parameter	const ut8 * qrcode	933:29:34211:34227	5620151	0	True				
ANR	5620197	ParameterType	const ut8 *		5620151	0					
ANR	5620198	Identifier	qrcode		5620151	1					
ANR	5620199	CFGEntryNode	ENTRY		5620151		True				
ANR	5620200	CFGExitNode	EXIT		5620151		True				
ANR	5620201	Symbol	result		5620151						
ANR	5620202	Symbol	qrcodegen_VERSION_MIN		5620151						
ANR	5620203	Symbol	* qrcode		5620151						
ANR	5620204	Symbol	qrcode		5620151						
ANR	5620205	Symbol	qrcodegen_VERSION_MAX		5620151						
ANR	5620206	Function	qrcodegen_getModule	946:0:34483:34695							
ANR	5620207	FunctionDef	"qrcodegen_getModule (const ut8 qrcode [ ] , int x , int y)"		5620206	0					
ANR	5620208	CompoundStatement		946:66:34549:34695	5620206	0					
ANR	5620209	IfStatement	if ( ! qrcode )		5620206	0					
ANR	5620210	Condition	! qrcode	947:5:34556:34562	5620206	0	True				
ANR	5620211	UnaryOperationExpression	! qrcode		5620206	0					
ANR	5620212	UnaryOperator	!		5620206	0					
ANR	5620213	Identifier	qrcode		5620206	1					
ANR	5620214	CompoundStatement		2:14:15:15	5620206	1					
ANR	5620215	ReturnStatement	return false ;	948:2:34569:34581	5620206	0	True				
ANR	5620216	Identifier	false		5620206	0					
ANR	5620217	IdentifierDeclStatement	int qrsize = qrcode [ 0 ] ;	950:1:34587:34609	5620206	1	True				
ANR	5620218	IdentifierDecl	qrsize = qrcode [ 0 ]		5620206	0					
ANR	5620219	IdentifierDeclType	int		5620206	0					
ANR	5620220	Identifier	qrsize		5620206	1					
ANR	5620221	AssignmentExpression	qrsize = qrcode [ 0 ]		5620206	2		=			
ANR	5620222	Identifier	qrsize		5620206	0					
ANR	5620223	ArrayIndexing	qrcode [ 0 ]		5620206	1					
ANR	5620224	Identifier	qrcode		5620206	0					
ANR	5620225	PrimaryExpression	0		5620206	1					
ANR	5620226	ReturnStatement	"return ( 0 <= x && x < qrsize && 0 <= y && y < qrsize ) && getModule ( qrcode , x , y ) ;"	951:1:34612:34693	5620206	2	True				
ANR	5620227	AndExpression	"( 0 <= x && x < qrsize && 0 <= y && y < qrsize ) && getModule ( qrcode , x , y )"		5620206	0		&&			
ANR	5620228	AndExpression	0 <= x && x < qrsize && 0 <= y && y < qrsize		5620206	0		&&			
ANR	5620229	RelationalExpression	0 <= x		5620206	0		<=			
ANR	5620230	PrimaryExpression	0		5620206	0					
ANR	5620231	Identifier	x		5620206	1					
ANR	5620232	AndExpression	x < qrsize && 0 <= y && y < qrsize		5620206	1		&&			
ANR	5620233	RelationalExpression	x < qrsize		5620206	0		<			
ANR	5620234	Identifier	x		5620206	0					
ANR	5620235	Identifier	qrsize		5620206	1					
ANR	5620236	AndExpression	0 <= y && y < qrsize		5620206	1		&&			
ANR	5620237	RelationalExpression	0 <= y		5620206	0		<=			
ANR	5620238	PrimaryExpression	0		5620206	0					
ANR	5620239	Identifier	y		5620206	1					
ANR	5620240	RelationalExpression	y < qrsize		5620206	1		<			
ANR	5620241	Identifier	y		5620206	0					
ANR	5620242	Identifier	qrsize		5620206	1					
ANR	5620243	CallExpression	"getModule ( qrcode , x , y )"		5620206	1					
ANR	5620244	Callee	getModule		5620206	0					
ANR	5620245	Identifier	getModule		5620206	0					
ANR	5620246	ArgumentList	qrcode		5620206	1					
ANR	5620247	Argument	qrcode		5620206	0					
ANR	5620248	Identifier	qrcode		5620206	0					
ANR	5620249	Argument	x		5620206	1					
ANR	5620250	Identifier	x		5620206	0					
ANR	5620251	Argument	y		5620206	2					
ANR	5620252	Identifier	y		5620206	0					
ANR	5620253	ReturnType	static bool		5620206	1					
ANR	5620254	Identifier	qrcodegen_getModule		5620206	2					
ANR	5620255	ParameterList	"const ut8 qrcode [ ] , int x , int y"		5620206	3					
ANR	5620256	Parameter	const ut8 qrcode [ ]	946:32:34515:34532	5620206	0	True				
ANR	5620257	ParameterType	const ut8 [ ]		5620206	0					
ANR	5620258	Identifier	qrcode		5620206	1					
ANR	5620259	Parameter	int x	946:52:34535:34539	5620206	1	True				
ANR	5620260	ParameterType	int		5620206	0					
ANR	5620261	Identifier	x		5620206	1					
ANR	5620262	Parameter	int y	946:59:34542:34546	5620206	2	True				
ANR	5620263	ParameterType	int		5620206	0					
ANR	5620264	Identifier	y		5620206	1					
ANR	5620265	CFGEntryNode	ENTRY		5620206		True				
ANR	5620266	CFGExitNode	EXIT		5620206		True				
ANR	5620267	Symbol	getModule		5620206						
ANR	5620268	Symbol	* qrcode		5620206						
ANR	5620269	Symbol	qrcode		5620206						
ANR	5620270	Symbol	x		5620206						
ANR	5620271	Symbol	false		5620206						
ANR	5620272	Symbol	y		5620206						
ANR	5620273	Symbol	qrsize		5620206						
ANR	5620274	Function	getModule	956:0:34769:35103							
ANR	5620275	FunctionDef	"getModule (const ut8 qrcode [ ] , int x , int y)"		5620274	0					
ANR	5620276	CompoundStatement		956:56:34825:35103	5620274	0					
ANR	5620277	IdentifierDeclStatement	int qrsize = qrcode [ 0 ] ;	957:1:34828:34850	5620274	0	True				
ANR	5620278	IdentifierDecl	qrsize = qrcode [ 0 ]		5620274	0					
ANR	5620279	IdentifierDeclType	int		5620274	0					
ANR	5620280	Identifier	qrsize		5620274	1					
ANR	5620281	AssignmentExpression	qrsize = qrcode [ 0 ]		5620274	2		=			
ANR	5620282	Identifier	qrsize		5620274	0					
ANR	5620283	ArrayIndexing	qrcode [ 0 ]		5620274	1					
ANR	5620284	Identifier	qrcode		5620274	0					
ANR	5620285	PrimaryExpression	0		5620274	1					
ANR	5620286	IfStatement	if ( 21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize )		5620274	1					
ANR	5620287	Condition	21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize	958:5:34857:34933	5620274	0	True				
ANR	5620288	AndExpression	21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize		5620274	0		&&			
ANR	5620289	RelationalExpression	21 <= qrsize		5620274	0		<=			
ANR	5620290	PrimaryExpression	21		5620274	0					
ANR	5620291	Identifier	qrsize		5620274	1					
ANR	5620292	AndExpression	qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize		5620274	1		&&			
ANR	5620293	RelationalExpression	qrsize <= 177		5620274	0		<=			
ANR	5620294	Identifier	qrsize		5620274	0					
ANR	5620295	PrimaryExpression	177		5620274	1					
ANR	5620296	AndExpression	0 <= x && x < qrsize && 0 <= y && y < qrsize		5620274	1		&&			
ANR	5620297	RelationalExpression	0 <= x		5620274	0		<=			
ANR	5620298	PrimaryExpression	0		5620274	0					
ANR	5620299	Identifier	x		5620274	1					
ANR	5620300	AndExpression	x < qrsize && 0 <= y && y < qrsize		5620274	1		&&			
ANR	5620301	RelationalExpression	x < qrsize		5620274	0		<			
ANR	5620302	Identifier	x		5620274	0					
ANR	5620303	Identifier	qrsize		5620274	1					
ANR	5620304	AndExpression	0 <= y && y < qrsize		5620274	1		&&			
ANR	5620305	RelationalExpression	0 <= y		5620274	0		<=			
ANR	5620306	PrimaryExpression	0		5620274	0					
ANR	5620307	Identifier	y		5620274	1					
ANR	5620308	RelationalExpression	y < qrsize		5620274	1		<			
ANR	5620309	Identifier	y		5620274	0					
ANR	5620310	Identifier	qrsize		5620274	1					
ANR	5620311	CompoundStatement		6:2:172:204	5620274	1					
ANR	5620312	IdentifierDeclStatement	int index = y * qrsize + x ;	959:2:34940:34966	5620274	0	True				
ANR	5620313	IdentifierDecl	index = y * qrsize + x		5620274	0					
ANR	5620314	IdentifierDeclType	int		5620274	0					
ANR	5620315	Identifier	index		5620274	1					
ANR	5620316	AssignmentExpression	index = y * qrsize + x		5620274	2		=			
ANR	5620317	Identifier	index		5620274	0					
ANR	5620318	AdditiveExpression	y * qrsize + x		5620274	1		+			
ANR	5620319	MultiplicativeExpression	y * qrsize		5620274	0		*			
ANR	5620320	Identifier	y		5620274	0					
ANR	5620321	Identifier	qrsize		5620274	1					
ANR	5620322	Identifier	x		5620274	1					
ANR	5620323	IdentifierDeclStatement	int bitIndex = index & 7 ;	960:2:34970:34994	5620274	1	True				
ANR	5620324	IdentifierDecl	bitIndex = index & 7		5620274	0					
ANR	5620325	IdentifierDeclType	int		5620274	0					
ANR	5620326	Identifier	bitIndex		5620274	1					
ANR	5620327	AssignmentExpression	bitIndex = index & 7		5620274	2		=			
ANR	5620328	Identifier	bitIndex		5620274	0					
ANR	5620329	BitAndExpression	index & 7		5620274	1		&			
ANR	5620330	Identifier	index		5620274	0					
ANR	5620331	PrimaryExpression	7		5620274	1					
ANR	5620332	IdentifierDeclStatement	int byteIndex = ( index >> 3 ) + 1 ;	961:2:34998:35030	5620274	2	True				
ANR	5620333	IdentifierDecl	byteIndex = ( index >> 3 ) + 1		5620274	0					
ANR	5620334	IdentifierDeclType	int		5620274	0					
ANR	5620335	Identifier	byteIndex		5620274	1					
ANR	5620336	AssignmentExpression	byteIndex = ( index >> 3 ) + 1		5620274	2		=			
ANR	5620337	Identifier	byteIndex		5620274	0					
ANR	5620338	AdditiveExpression	( index >> 3 ) + 1		5620274	1		+			
ANR	5620339	ShiftExpression	index >> 3		5620274	0		>>			
ANR	5620340	Identifier	index		5620274	0					
ANR	5620341	PrimaryExpression	3		5620274	1					
ANR	5620342	PrimaryExpression	1		5620274	1					
ANR	5620343	ReturnStatement	return ( ( qrcode [ byteIndex ] >> bitIndex ) & 1 ) != 0 ;	962:2:35034:35083	5620274	3	True				
ANR	5620344	EqualityExpression	( ( qrcode [ byteIndex ] >> bitIndex ) & 1 ) != 0		5620274	0		!=			
ANR	5620345	BitAndExpression	( qrcode [ byteIndex ] >> bitIndex ) & 1		5620274	0		&			
ANR	5620346	ShiftExpression	qrcode [ byteIndex ] >> bitIndex		5620274	0		>>			
ANR	5620347	ArrayIndexing	qrcode [ byteIndex ]		5620274	0					
ANR	5620348	Identifier	qrcode		5620274	0					
ANR	5620349	Identifier	byteIndex		5620274	1					
ANR	5620350	Identifier	bitIndex		5620274	1					
ANR	5620351	PrimaryExpression	1		5620274	1					
ANR	5620352	PrimaryExpression	0		5620274	1					
ANR	5620353	ReturnStatement	return false ;	964:1:35089:35101	5620274	2	True				
ANR	5620354	Identifier	false		5620274	0					
ANR	5620355	ReturnType	static bool		5620274	1					
ANR	5620356	Identifier	getModule		5620274	2					
ANR	5620357	ParameterList	"const ut8 qrcode [ ] , int x , int y"		5620274	3					
ANR	5620358	Parameter	const ut8 qrcode [ ]	956:22:34791:34808	5620274	0	True				
ANR	5620359	ParameterType	const ut8 [ ]		5620274	0					
ANR	5620360	Identifier	qrcode		5620274	1					
ANR	5620361	Parameter	int x	956:42:34811:34815	5620274	1	True				
ANR	5620362	ParameterType	int		5620274	0					
ANR	5620363	Identifier	x		5620274	1					
ANR	5620364	Parameter	int y	956:49:34818:34822	5620274	2	True				
ANR	5620365	ParameterType	int		5620274	0					
ANR	5620366	Identifier	y		5620274	1					
ANR	5620367	CFGEntryNode	ENTRY		5620274		True				
ANR	5620368	CFGExitNode	EXIT		5620274		True				
ANR	5620369	Symbol	* qrcode		5620274						
ANR	5620370	Symbol	qrcode		5620274						
ANR	5620371	Symbol	x		5620274						
ANR	5620372	Symbol	false		5620274						
ANR	5620373	Symbol	y		5620274						
ANR	5620374	Symbol	index		5620274						
ANR	5620375	Symbol	* byteIndex		5620274						
ANR	5620376	Symbol	qrsize		5620274						
ANR	5620377	Symbol	bitIndex		5620274						
ANR	5620378	Symbol	byteIndex		5620274						
ANR	5620379	Function	setModule	969:0:35177:35600							
ANR	5620380	FunctionDef	"setModule (ut8 qrcode [ ] , int x , int y , bool isBlack)"		5620379	0					
ANR	5620381	CompoundStatement		969:64:35241:35600	5620379	0					
ANR	5620382	IdentifierDeclStatement	int qrsize = qrcode [ 0 ] ;	970:1:35244:35266	5620379	0	True				
ANR	5620383	IdentifierDecl	qrsize = qrcode [ 0 ]		5620379	0					
ANR	5620384	IdentifierDeclType	int		5620379	0					
ANR	5620385	Identifier	qrsize		5620379	1					
ANR	5620386	AssignmentExpression	qrsize = qrcode [ 0 ]		5620379	2		=			
ANR	5620387	Identifier	qrsize		5620379	0					
ANR	5620388	ArrayIndexing	qrcode [ 0 ]		5620379	1					
ANR	5620389	Identifier	qrcode		5620379	0					
ANR	5620390	PrimaryExpression	0		5620379	1					
ANR	5620391	IfStatement	if ( 21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize )		5620379	1					
ANR	5620392	Condition	21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize	971:5:35273:35349	5620379	0	True				
ANR	5620393	AndExpression	21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize		5620379	0		&&			
ANR	5620394	RelationalExpression	21 <= qrsize		5620379	0		<=			
ANR	5620395	PrimaryExpression	21		5620379	0					
ANR	5620396	Identifier	qrsize		5620379	1					
ANR	5620397	AndExpression	qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize		5620379	1		&&			
ANR	5620398	RelationalExpression	qrsize <= 177		5620379	0		<=			
ANR	5620399	Identifier	qrsize		5620379	0					
ANR	5620400	PrimaryExpression	177		5620379	1					
ANR	5620401	AndExpression	0 <= x && x < qrsize && 0 <= y && y < qrsize		5620379	1		&&			
ANR	5620402	RelationalExpression	0 <= x		5620379	0		<=			
ANR	5620403	PrimaryExpression	0		5620379	0					
ANR	5620404	Identifier	x		5620379	1					
ANR	5620405	AndExpression	x < qrsize && 0 <= y && y < qrsize		5620379	1		&&			
ANR	5620406	RelationalExpression	x < qrsize		5620379	0		<			
ANR	5620407	Identifier	x		5620379	0					
ANR	5620408	Identifier	qrsize		5620379	1					
ANR	5620409	AndExpression	0 <= y && y < qrsize		5620379	1		&&			
ANR	5620410	RelationalExpression	0 <= y		5620379	0		<=			
ANR	5620411	PrimaryExpression	0		5620379	0					
ANR	5620412	Identifier	y		5620379	1					
ANR	5620413	RelationalExpression	y < qrsize		5620379	1		<			
ANR	5620414	Identifier	y		5620379	0					
ANR	5620415	Identifier	qrsize		5620379	1					
ANR	5620416	CompoundStatement		6:2:172:204	5620379	1					
ANR	5620417	IdentifierDeclStatement	int index = y * qrsize + x ;	972:2:35356:35382	5620379	0	True				
ANR	5620418	IdentifierDecl	index = y * qrsize + x		5620379	0					
ANR	5620419	IdentifierDeclType	int		5620379	0					
ANR	5620420	Identifier	index		5620379	1					
ANR	5620421	AssignmentExpression	index = y * qrsize + x		5620379	2		=			
ANR	5620422	Identifier	index		5620379	0					
ANR	5620423	AdditiveExpression	y * qrsize + x		5620379	1		+			
ANR	5620424	MultiplicativeExpression	y * qrsize		5620379	0		*			
ANR	5620425	Identifier	y		5620379	0					
ANR	5620426	Identifier	qrsize		5620379	1					
ANR	5620427	Identifier	x		5620379	1					
ANR	5620428	IdentifierDeclStatement	int bitIndex = index & 7 ;	973:2:35386:35410	5620379	1	True				
ANR	5620429	IdentifierDecl	bitIndex = index & 7		5620379	0					
ANR	5620430	IdentifierDeclType	int		5620379	0					
ANR	5620431	Identifier	bitIndex		5620379	1					
ANR	5620432	AssignmentExpression	bitIndex = index & 7		5620379	2		=			
ANR	5620433	Identifier	bitIndex		5620379	0					
ANR	5620434	BitAndExpression	index & 7		5620379	1		&			
ANR	5620435	Identifier	index		5620379	0					
ANR	5620436	PrimaryExpression	7		5620379	1					
ANR	5620437	IdentifierDeclStatement	int byteIndex = ( index >> 3 ) + 1 ;	974:2:35414:35446	5620379	2	True				
ANR	5620438	IdentifierDecl	byteIndex = ( index >> 3 ) + 1		5620379	0					
ANR	5620439	IdentifierDeclType	int		5620379	0					
ANR	5620440	Identifier	byteIndex		5620379	1					
ANR	5620441	AssignmentExpression	byteIndex = ( index >> 3 ) + 1		5620379	2		=			
ANR	5620442	Identifier	byteIndex		5620379	0					
ANR	5620443	AdditiveExpression	( index >> 3 ) + 1		5620379	1		+			
ANR	5620444	ShiftExpression	index >> 3		5620379	0		>>			
ANR	5620445	Identifier	index		5620379	0					
ANR	5620446	PrimaryExpression	3		5620379	1					
ANR	5620447	PrimaryExpression	1		5620379	1					
ANR	5620448	IfStatement	if ( isBlack )		5620379	3					
ANR	5620449	Condition	isBlack	975:6:35454:35460	5620379	0	True				
ANR	5620450	Identifier	isBlack		5620379	0					
ANR	5620451	CompoundStatement		7:15:221:221	5620379	1					
ANR	5620452	ExpressionStatement	qrcode [ byteIndex ] |= 1 << bitIndex	976:3:35468:35502	5620379	0	True				
ANR	5620453	AssignmentExpression	qrcode [ byteIndex ] |= 1 << bitIndex		5620379	0		|=			
ANR	5620454	ArrayIndexing	qrcode [ byteIndex ]		5620379	0					
ANR	5620455	Identifier	qrcode		5620379	0					
ANR	5620456	Identifier	byteIndex		5620379	1					
ANR	5620457	ShiftExpression	1 << bitIndex		5620379	1		<<			
ANR	5620458	PrimaryExpression	1		5620379	0					
ANR	5620459	Identifier	bitIndex		5620379	1					
ANR	5620460	ElseStatement	else		5620379	0					
ANR	5620461	CompoundStatement		9:9:271:271	5620379	0					
ANR	5620462	ExpressionStatement	qrcode [ byteIndex ] &= ( 1 << bitIndex ) ^ 0xFF	978:3:35518:35561	5620379	0	True				
ANR	5620463	AssignmentExpression	qrcode [ byteIndex ] &= ( 1 << bitIndex ) ^ 0xFF		5620379	0		&=			
ANR	5620464	ArrayIndexing	qrcode [ byteIndex ]		5620379	0					
ANR	5620465	Identifier	qrcode		5620379	0					
ANR	5620466	Identifier	byteIndex		5620379	1					
ANR	5620467	ExclusiveOrExpression	( 1 << bitIndex ) ^ 0xFF		5620379	1		^			
ANR	5620468	ShiftExpression	1 << bitIndex		5620379	0		<<			
ANR	5620469	PrimaryExpression	1		5620379	0					
ANR	5620470	Identifier	bitIndex		5620379	1					
ANR	5620471	PrimaryExpression	0xFF		5620379	1					
ANR	5620472	ReturnStatement	return true ;	980:2:35569:35580	5620379	4	True				
ANR	5620473	Identifier	true		5620379	0					
ANR	5620474	ReturnStatement	return false ;	982:1:35586:35598	5620379	2	True				
ANR	5620475	Identifier	false		5620379	0					
ANR	5620476	ReturnType	static bool		5620379	1					
ANR	5620477	Identifier	setModule		5620379	2					
ANR	5620478	ParameterList	"ut8 qrcode [ ] , int x , int y , bool isBlack"		5620379	3					
ANR	5620479	Parameter	ut8 qrcode [ ]	969:22:35199:35210	5620379	0	True				
ANR	5620480	ParameterType	ut8 [ ]		5620379	0					
ANR	5620481	Identifier	qrcode		5620379	1					
ANR	5620482	Parameter	int x	969:36:35213:35217	5620379	1	True				
ANR	5620483	ParameterType	int		5620379	0					
ANR	5620484	Identifier	x		5620379	1					
ANR	5620485	Parameter	int y	969:43:35220:35224	5620379	2	True				
ANR	5620486	ParameterType	int		5620379	0					
ANR	5620487	Identifier	y		5620379	1					
ANR	5620488	Parameter	bool isBlack	969:50:35227:35238	5620379	3	True				
ANR	5620489	ParameterType	bool		5620379	0					
ANR	5620490	Identifier	isBlack		5620379	1					
ANR	5620491	CFGEntryNode	ENTRY		5620379		True				
ANR	5620492	CFGExitNode	EXIT		5620379		True				
ANR	5620493	Symbol	isBlack		5620379						
ANR	5620494	Symbol	* qrcode		5620379						
ANR	5620495	Symbol	qrcode		5620379						
ANR	5620496	Symbol	x		5620379						
ANR	5620497	Symbol	true		5620379						
ANR	5620498	Symbol	false		5620379						
ANR	5620499	Symbol	y		5620379						
ANR	5620500	Symbol	index		5620379						
ANR	5620501	Symbol	* byteIndex		5620379						
ANR	5620502	Symbol	qrsize		5620379						
ANR	5620503	Symbol	bitIndex		5620379						
ANR	5620504	Symbol	byteIndex		5620379						
ANR	5620505	Function	setModuleBounded	987:0:35681:35872							
ANR	5620506	FunctionDef	"setModuleBounded (ut8 qrcode [ ] , int x , int y , bool isBlack)"		5620505	0					
ANR	5620507	CompoundStatement		987:71:35752:35872	5620505	0					
ANR	5620508	IdentifierDeclStatement	int qrsize = qrcode [ 0 ] ;	988:1:35755:35777	5620505	0	True				
ANR	5620509	IdentifierDecl	qrsize = qrcode [ 0 ]		5620505	0					
ANR	5620510	IdentifierDeclType	int		5620505	0					
ANR	5620511	Identifier	qrsize		5620505	1					
ANR	5620512	AssignmentExpression	qrsize = qrcode [ 0 ]		5620505	2		=			
ANR	5620513	Identifier	qrsize		5620505	0					
ANR	5620514	ArrayIndexing	qrcode [ 0 ]		5620505	1					
ANR	5620515	Identifier	qrcode		5620505	0					
ANR	5620516	PrimaryExpression	0		5620505	1					
ANR	5620517	IfStatement	if ( 0 <= x && x < qrsize && 0 <= y && y < qrsize )		5620505	1					
ANR	5620518	Condition	0 <= x && x < qrsize && 0 <= y && y < qrsize	989:5:35784:35827	5620505	0	True				
ANR	5620519	AndExpression	0 <= x && x < qrsize && 0 <= y && y < qrsize		5620505	0		&&			
ANR	5620520	RelationalExpression	0 <= x		5620505	0		<=			
ANR	5620521	PrimaryExpression	0		5620505	0					
ANR	5620522	Identifier	x		5620505	1					
ANR	5620523	AndExpression	x < qrsize && 0 <= y && y < qrsize		5620505	1		&&			
ANR	5620524	RelationalExpression	x < qrsize		5620505	0		<			
ANR	5620525	Identifier	x		5620505	0					
ANR	5620526	Identifier	qrsize		5620505	1					
ANR	5620527	AndExpression	0 <= y && y < qrsize		5620505	1		&&			
ANR	5620528	RelationalExpression	0 <= y		5620505	0		<=			
ANR	5620529	PrimaryExpression	0		5620505	0					
ANR	5620530	Identifier	y		5620505	1					
ANR	5620531	RelationalExpression	y < qrsize		5620505	1		<			
ANR	5620532	Identifier	y		5620505	0					
ANR	5620533	Identifier	qrsize		5620505	1					
ANR	5620534	CompoundStatement		3:51:77:77	5620505	1					
ANR	5620535	ExpressionStatement	"setModule ( qrcode , x , y , isBlack )"	990:2:35834:35867	5620505	0	True				
ANR	5620536	CallExpression	"setModule ( qrcode , x , y , isBlack )"		5620505	0					
ANR	5620537	Callee	setModule		5620505	0					
ANR	5620538	Identifier	setModule		5620505	0					
ANR	5620539	ArgumentList	qrcode		5620505	1					
ANR	5620540	Argument	qrcode		5620505	0					
ANR	5620541	Identifier	qrcode		5620505	0					
ANR	5620542	Argument	x		5620505	1					
ANR	5620543	Identifier	x		5620505	0					
ANR	5620544	Argument	y		5620505	2					
ANR	5620545	Identifier	y		5620505	0					
ANR	5620546	Argument	isBlack		5620505	3					
ANR	5620547	Identifier	isBlack		5620505	0					
ANR	5620548	ReturnType	static void		5620505	1					
ANR	5620549	Identifier	setModuleBounded		5620505	2					
ANR	5620550	ParameterList	"ut8 qrcode [ ] , int x , int y , bool isBlack"		5620505	3					
ANR	5620551	Parameter	ut8 qrcode [ ]	987:29:35710:35721	5620505	0	True				
ANR	5620552	ParameterType	ut8 [ ]		5620505	0					
ANR	5620553	Identifier	qrcode		5620505	1					
ANR	5620554	Parameter	int x	987:43:35724:35728	5620505	1	True				
ANR	5620555	ParameterType	int		5620505	0					
ANR	5620556	Identifier	x		5620505	1					
ANR	5620557	Parameter	int y	987:50:35731:35735	5620505	2	True				
ANR	5620558	ParameterType	int		5620505	0					
ANR	5620559	Identifier	y		5620505	1					
ANR	5620560	Parameter	bool isBlack	987:57:35738:35749	5620505	3	True				
ANR	5620561	ParameterType	bool		5620505	0					
ANR	5620562	Identifier	isBlack		5620505	1					
ANR	5620563	CFGEntryNode	ENTRY		5620505		True				
ANR	5620564	CFGExitNode	EXIT		5620505		True				
ANR	5620565	Symbol	isBlack		5620505						
ANR	5620566	Symbol	* qrcode		5620505						
ANR	5620567	Symbol	qrcode		5620505						
ANR	5620568	Symbol	x		5620505						
ANR	5620569	Symbol	y		5620505						
ANR	5620570	Symbol	qrsize		5620505						
ANR	5620571	Function	r_qrcode_gen	1001:0:36133:37790							
ANR	5620572	FunctionDef	"r_qrcode_gen (const ut8 * text , int len , bool utf8 , bool inverted)"		5620571	0					
ANR	5620573	CompoundStatement		1001:77:36210:37790	5620571	0					
ANR	5620574	IdentifierDeclStatement	uint8_t qrcode [ qrcodegen_BUFFER_LEN_MAX ] = { 0 } ;	1002:1:36213:36264	5620571	0	True				
ANR	5620575	IdentifierDecl	qrcode [ qrcodegen_BUFFER_LEN_MAX ] = { 0 }		5620571	0					
ANR	5620576	IdentifierDeclType	uint8_t [ qrcodegen_BUFFER_LEN_MAX ]		5620571	0					
ANR	5620577	Identifier	qrcode		5620571	1					
ANR	5620578	Identifier	qrcodegen_BUFFER_LEN_MAX		5620571	2					
ANR	5620579	AssignmentExpression	qrcode [ qrcodegen_BUFFER_LEN_MAX ] = { 0 }		5620571	3		=			
ANR	5620580	Identifier	qrcodegen_BUFFER_LEN_MAX		5620571	0					
ANR	5620581	InitializerList	0		5620571	1					
ANR	5620582	PrimaryExpression	0		5620571	0					
ANR	5620583	IdentifierDeclStatement	enum qrcodegen_Ecc errCorLvl = qrcodegen_Ecc_HIGH ;	1005:1:36267:36316	5620571	1	True				
ANR	5620584	IdentifierDecl	errCorLvl = qrcodegen_Ecc_HIGH		5620571	0					
ANR	5620585	IdentifierDeclType	enum qrcodegen_Ecc		5620571	0					
ANR	5620586	Identifier	errCorLvl		5620571	1					
ANR	5620587	AssignmentExpression	errCorLvl = qrcodegen_Ecc_HIGH		5620571	2		=			
ANR	5620588	Identifier	qrcodegen_Ecc_HIGH		5620571	0					
ANR	5620589	Identifier	qrcodegen_Ecc_HIGH		5620571	1					
ANR	5620590	IfStatement	if ( len < 0 )		5620571	2					
ANR	5620591	Condition	len < 0	1006:5:36349:36355	5620571	0	True				
ANR	5620592	RelationalExpression	len < 0		5620571	0		<			
ANR	5620593	Identifier	len		5620571	0					
ANR	5620594	PrimaryExpression	0		5620571	1					
ANR	5620595	CompoundStatement		6:14:147:147	5620571	1					
ANR	5620596	ReturnStatement	return NULL ;	1007:2:36362:36373	5620571	0	True				
ANR	5620597	Identifier	NULL		5620571	0					
ANR	5620598	IdentifierDeclStatement	"ut8 * buf = calloc ( ( 128 + len ) , 32 ) ;"	1010:1:36417:36452	5620571	3	True				
ANR	5620599	IdentifierDecl	"* buf = calloc ( ( 128 + len ) , 32 )"		5620571	0					
ANR	5620600	IdentifierDeclType	ut8 *		5620571	0					
ANR	5620601	Identifier	buf		5620571	1					
ANR	5620602	AssignmentExpression	"* buf = calloc ( ( 128 + len ) , 32 )"		5620571	2		=			
ANR	5620603	Identifier	buf		5620571	0					
ANR	5620604	CallExpression	"calloc ( ( 128 + len ) , 32 )"		5620571	1					
ANR	5620605	Callee	calloc		5620571	0					
ANR	5620606	Identifier	calloc		5620571	0					
ANR	5620607	ArgumentList	128 + len		5620571	1					
ANR	5620608	Argument	128 + len		5620571	0					
ANR	5620609	AdditiveExpression	128 + len		5620571	0		+			
ANR	5620610	PrimaryExpression	128		5620571	0					
ANR	5620611	Identifier	len		5620571	1					
ANR	5620612	Argument	32		5620571	1					
ANR	5620613	PrimaryExpression	32		5620571	0					
ANR	5620614	ExpressionStatement	"memcpy ( buf , text , len )"	1011:1:36455:36478	5620571	4	True				
ANR	5620615	CallExpression	"memcpy ( buf , text , len )"		5620571	0					
ANR	5620616	Callee	memcpy		5620571	0					
ANR	5620617	Identifier	memcpy		5620571	0					
ANR	5620618	ArgumentList	buf		5620571	1					
ANR	5620619	Argument	buf		5620571	0					
ANR	5620620	Identifier	buf		5620571	0					
ANR	5620621	Argument	text		5620571	1					
ANR	5620622	Identifier	text		5620571	0					
ANR	5620623	Argument	len		5620571	2					
ANR	5620624	Identifier	len		5620571	0					
ANR	5620625	IdentifierDeclStatement	"bool ok = r_qrcode_bin ( buf , len , qrcode , errCorLvl , qrcodegen_VERSION_MIN , qrcodegen_VERSION_MAX , qrcodegen_Mask_AUTO , true ) ;"	1012:1:36481:36610	5620571	5	True				
ANR	5620626	IdentifierDecl	"ok = r_qrcode_bin ( buf , len , qrcode , errCorLvl , qrcodegen_VERSION_MIN , qrcodegen_VERSION_MAX , qrcodegen_Mask_AUTO , true )"		5620571	0					
ANR	5620627	IdentifierDeclType	bool		5620571	0					
ANR	5620628	Identifier	ok		5620571	1					
ANR	5620629	AssignmentExpression	"ok = r_qrcode_bin ( buf , len , qrcode , errCorLvl , qrcodegen_VERSION_MIN , qrcodegen_VERSION_MAX , qrcodegen_Mask_AUTO , true )"		5620571	2		=			
ANR	5620630	Identifier	ok		5620571	0					
ANR	5620631	CallExpression	"r_qrcode_bin ( buf , len , qrcode , errCorLvl , qrcodegen_VERSION_MIN , qrcodegen_VERSION_MAX , qrcodegen_Mask_AUTO , true )"		5620571	1					
ANR	5620632	Callee	r_qrcode_bin		5620571	0					
ANR	5620633	Identifier	r_qrcode_bin		5620571	0					
ANR	5620634	ArgumentList	buf		5620571	1					
ANR	5620635	Argument	buf		5620571	0					
ANR	5620636	Identifier	buf		5620571	0					
ANR	5620637	Argument	len		5620571	1					
ANR	5620638	Identifier	len		5620571	0					
ANR	5620639	Argument	qrcode		5620571	2					
ANR	5620640	Identifier	qrcode		5620571	0					
ANR	5620641	Argument	errCorLvl		5620571	3					
ANR	5620642	Identifier	errCorLvl		5620571	0					
ANR	5620643	Argument	qrcodegen_VERSION_MIN		5620571	4					
ANR	5620644	Identifier	qrcodegen_VERSION_MIN		5620571	0					
ANR	5620645	Argument	qrcodegen_VERSION_MAX		5620571	5					
ANR	5620646	Identifier	qrcodegen_VERSION_MAX		5620571	0					
ANR	5620647	Argument	qrcodegen_Mask_AUTO		5620571	6					
ANR	5620648	Identifier	qrcodegen_Mask_AUTO		5620571	0					
ANR	5620649	Argument	true		5620571	7					
ANR	5620650	Identifier	true		5620571	0					
ANR	5620651	IfStatement	if ( ! ok )		5620571	6					
ANR	5620652	Condition	! ok	1015:5:36617:36619	5620571	0	True				
ANR	5620653	UnaryOperationExpression	! ok		5620571	0					
ANR	5620654	UnaryOperator	!		5620571	0					
ANR	5620655	Identifier	ok		5620571	1					
ANR	5620656	CompoundStatement		15:10:411:411	5620571	1					
ANR	5620657	ExpressionStatement	free ( buf )	1016:2:36626:36636	5620571	0	True				
ANR	5620658	CallExpression	free ( buf )		5620571	0					
ANR	5620659	Callee	free		5620571	0					
ANR	5620660	Identifier	free		5620571	0					
ANR	5620661	ArgumentList	buf		5620571	1					
ANR	5620662	Argument	buf		5620571	0					
ANR	5620663	Identifier	buf		5620571	0					
ANR	5620664	ReturnStatement	return NULL ;	1017:2:36640:36651	5620571	1	True				
ANR	5620665	Identifier	NULL		5620571	0					
ANR	5620666	IdentifierDeclStatement	int size = qrcodegen_getSize ( qrcode ) ;	1020:1:36658:36695	5620571	7	True				
ANR	5620667	IdentifierDecl	size = qrcodegen_getSize ( qrcode )		5620571	0					
ANR	5620668	IdentifierDeclType	int		5620571	0					
ANR	5620669	Identifier	size		5620571	1					
ANR	5620670	AssignmentExpression	size = qrcodegen_getSize ( qrcode )		5620571	2		=			
ANR	5620671	Identifier	size		5620571	0					
ANR	5620672	CallExpression	qrcodegen_getSize ( qrcode )		5620571	1					
ANR	5620673	Callee	qrcodegen_getSize		5620571	0					
ANR	5620674	Identifier	qrcodegen_getSize		5620571	0					
ANR	5620675	ArgumentList	qrcode		5620571	1					
ANR	5620676	Argument	qrcode		5620571	0					
ANR	5620677	Identifier	qrcode		5620571	0					
ANR	5620678	IfStatement	if ( size < 1 )		5620571	8					
ANR	5620679	Condition	size < 1	1021:5:36702:36709	5620571	0	True				
ANR	5620680	RelationalExpression	size < 1		5620571	0		<			
ANR	5620681	Identifier	size		5620571	0					
ANR	5620682	PrimaryExpression	1		5620571	1					
ANR	5620683	CompoundStatement		21:15:501:501	5620571	1					
ANR	5620684	ExpressionStatement	free ( buf )	1022:2:36716:36726	5620571	0	True				
ANR	5620685	CallExpression	free ( buf )		5620571	0					
ANR	5620686	Callee	free		5620571	0					
ANR	5620687	Identifier	free		5620571	0					
ANR	5620688	ArgumentList	buf		5620571	1					
ANR	5620689	Argument	buf		5620571	0					
ANR	5620690	Identifier	buf		5620571	0					
ANR	5620691	ReturnStatement	return NULL ;	1023:2:36730:36741	5620571	1	True				
ANR	5620692	Identifier	NULL		5620571	0					
ANR	5620693	IdentifierDeclStatement	int border = 1 ;	1025:1:36747:36761	5620571	9	True				
ANR	5620694	IdentifierDecl	border = 1		5620571	0					
ANR	5620695	IdentifierDeclType	int		5620571	0					
ANR	5620696	Identifier	border		5620571	1					
ANR	5620697	AssignmentExpression	border = 1		5620571	2		=			
ANR	5620698	Identifier	border		5620571	0					
ANR	5620699	PrimaryExpression	1		5620571	1					
ANR	5620700	IdentifierDeclStatement	int total = ( size + 1024 ) * 128 ;	1026:1:36764:36795	5620571	10	True				
ANR	5620701	IdentifierDecl	total = ( size + 1024 ) * 128		5620571	0					
ANR	5620702	IdentifierDeclType	int		5620571	0					
ANR	5620703	Identifier	total		5620571	1					
ANR	5620704	AssignmentExpression	total = ( size + 1024 ) * 128		5620571	2		=			
ANR	5620705	Identifier	total		5620571	0					
ANR	5620706	MultiplicativeExpression	( size + 1024 ) * 128		5620571	1		*			
ANR	5620707	AdditiveExpression	size + 1024		5620571	0		+			
ANR	5620708	Identifier	size		5620571	0					
ANR	5620709	PrimaryExpression	1024		5620571	1					
ANR	5620710	PrimaryExpression	128		5620571	1					
ANR	5620711	IdentifierDeclStatement	"char * res = calloc ( total , 32 ) ;"	1027:1:36798:36828	5620571	11	True				
ANR	5620712	IdentifierDecl	"* res = calloc ( total , 32 )"		5620571	0					
ANR	5620713	IdentifierDeclType	char *		5620571	0					
ANR	5620714	Identifier	res		5620571	1					
ANR	5620715	AssignmentExpression	"* res = calloc ( total , 32 )"		5620571	2		=			
ANR	5620716	Identifier	res		5620571	0					
ANR	5620717	CallExpression	"calloc ( total , 32 )"		5620571	1					
ANR	5620718	Callee	calloc		5620571	0					
ANR	5620719	Identifier	calloc		5620571	0					
ANR	5620720	ArgumentList	total		5620571	1					
ANR	5620721	Argument	total		5620571	0					
ANR	5620722	Identifier	total		5620571	0					
ANR	5620723	Argument	32		5620571	1					
ANR	5620724	PrimaryExpression	32		5620571	0					
ANR	5620725	IfStatement	if ( ! res )		5620571	12					
ANR	5620726	Condition	! res	1028:5:36835:36838	5620571	0	True				
ANR	5620727	UnaryOperationExpression	! res		5620571	0					
ANR	5620728	UnaryOperator	!		5620571	0					
ANR	5620729	Identifier	res		5620571	1					
ANR	5620730	CompoundStatement		28:11:630:630	5620571	1					
ANR	5620731	ExpressionStatement	free ( buf )	1029:2:36845:36855	5620571	0	True				
ANR	5620732	CallExpression	free ( buf )		5620571	0					
ANR	5620733	Callee	free		5620571	0					
ANR	5620734	Identifier	free		5620571	0					
ANR	5620735	ArgumentList	buf		5620571	1					
ANR	5620736	Argument	buf		5620571	0					
ANR	5620737	Identifier	buf		5620571	0					
ANR	5620738	ReturnStatement	return NULL ;	1030:2:36859:36870	5620571	1	True				
ANR	5620739	Identifier	NULL		5620571	0					
ANR	5620740	IdentifierDeclStatement	char * p = res ;	1032:1:36876:36889	5620571	13	True				
ANR	5620741	IdentifierDecl	* p = res		5620571	0					
ANR	5620742	IdentifierDeclType	char *		5620571	0					
ANR	5620743	Identifier	p		5620571	1					
ANR	5620744	AssignmentExpression	* p = res		5620571	2		=			
ANR	5620745	Identifier	res		5620571	0					
ANR	5620746	Identifier	res		5620571	1					
ANR	5620747	IdentifierDeclStatement	"int x , y ;"	1033:1:36892:36900	5620571	14	True				
ANR	5620748	IdentifierDecl	x		5620571	0					
ANR	5620749	IdentifierDeclType	int		5620571	0					
ANR	5620750	Identifier	x		5620571	1					
ANR	5620751	IdentifierDecl	y		5620571	1					
ANR	5620752	IdentifierDeclType	int		5620571	0					
ANR	5620753	Identifier	y		5620571	1					
ANR	5620754	IfStatement	if ( utf8 )		5620571	15					
ANR	5620755	Condition	utf8	1034:5:36907:36910	5620571	0	True				
ANR	5620756	Identifier	utf8		5620571	0					
ANR	5620757	CompoundStatement		34:11:702:702	5620571	1					
ANR	5620758	ForStatement	for ( y = - border ; y < size + border ; y += 2 )		5620571	0					
ANR	5620759	ForInit	y = - border ;	1035:7:36922:36933	5620571	0	True				
ANR	5620760	AssignmentExpression	y = - border		5620571	0		=			
ANR	5620761	Identifier	y		5620571	0					
ANR	5620762	UnaryOperationExpression	- border		5620571	1					
ANR	5620763	UnaryOperator	-		5620571	0					
ANR	5620764	Identifier	border		5620571	1					
ANR	5620765	Condition	y < size + border	1035:20:36935:36951	5620571	1	True				
ANR	5620766	RelationalExpression	y < size + border		5620571	0		<			
ANR	5620767	Identifier	y		5620571	0					
ANR	5620768	AdditiveExpression	size + border		5620571	1		+			
ANR	5620769	Identifier	size		5620571	0					
ANR	5620770	Identifier	border		5620571	1					
ANR	5620771	AssignmentExpression	y += 2	1035:39:36954:36959	5620571	2	True	+=			
ANR	5620772	Identifier	y		5620571	0					
ANR	5620773	PrimaryExpression	2		5620571	1					
ANR	5620774	CompoundStatement		35:47:751:751	5620571	3					
ANR	5620775	ForStatement	for ( x = - border ; x < size + border ; x += 2 )		5620571	0					
ANR	5620776	ForInit	x = - border ;	1036:8:36972:36983	5620571	0	True				
ANR	5620777	AssignmentExpression	x = - border		5620571	0		=			
ANR	5620778	Identifier	x		5620571	0					
ANR	5620779	UnaryOperationExpression	- border		5620571	1					
ANR	5620780	UnaryOperator	-		5620571	0					
ANR	5620781	Identifier	border		5620571	1					
ANR	5620782	Condition	x < size + border	1036:21:36985:37001	5620571	1	True				
ANR	5620783	RelationalExpression	x < size + border		5620571	0		<			
ANR	5620784	Identifier	x		5620571	0					
ANR	5620785	AdditiveExpression	size + border		5620571	1		+			
ANR	5620786	Identifier	size		5620571	0					
ANR	5620787	Identifier	border		5620571	1					
ANR	5620788	AssignmentExpression	x += 2	1036:40:37004:37009	5620571	2	True	+=			
ANR	5620789	Identifier	x		5620571	0					
ANR	5620790	PrimaryExpression	2		5620571	1					
ANR	5620791	CompoundStatement		41:4:1029:1123	5620571	3					
ANR	5620792	IdentifierDeclStatement	"int bmp = qrcodegen_getModule ( qrcode , x , y ) ;"	1037:4:37018:37062	5620571	0	True				
ANR	5620793	IdentifierDecl	"bmp = qrcodegen_getModule ( qrcode , x , y )"		5620571	0					
ANR	5620794	IdentifierDeclType	int		5620571	0					
ANR	5620795	Identifier	bmp		5620571	1					
ANR	5620796	AssignmentExpression	"bmp = qrcodegen_getModule ( qrcode , x , y )"		5620571	2		=			
ANR	5620797	Identifier	bmp		5620571	0					
ANR	5620798	CallExpression	"qrcodegen_getModule ( qrcode , x , y )"		5620571	1					
ANR	5620799	Callee	qrcodegen_getModule		5620571	0					
ANR	5620800	Identifier	qrcodegen_getModule		5620571	0					
ANR	5620801	ArgumentList	qrcode		5620571	1					
ANR	5620802	Argument	qrcode		5620571	0					
ANR	5620803	Identifier	qrcode		5620571	0					
ANR	5620804	Argument	x		5620571	1					
ANR	5620805	Identifier	x		5620571	0					
ANR	5620806	Argument	y		5620571	2					
ANR	5620807	Identifier	y		5620571	0					
ANR	5620808	ExpressionStatement	"bmp |= qrcodegen_getModule ( qrcode , x + 1 , y ) << 1"	1038:4:37068:37118	5620571	1	True				
ANR	5620809	AssignmentExpression	"bmp |= qrcodegen_getModule ( qrcode , x + 1 , y ) << 1"		5620571	0		|=			
ANR	5620810	Identifier	bmp		5620571	0					
ANR	5620811	ShiftExpression	"qrcodegen_getModule ( qrcode , x + 1 , y ) << 1"		5620571	1		<<			
ANR	5620812	CallExpression	"qrcodegen_getModule ( qrcode , x + 1 , y )"		5620571	0					
ANR	5620813	Callee	qrcodegen_getModule		5620571	0					
ANR	5620814	Identifier	qrcodegen_getModule		5620571	0					
ANR	5620815	ArgumentList	qrcode		5620571	1					
ANR	5620816	Argument	qrcode		5620571	0					
ANR	5620817	Identifier	qrcode		5620571	0					
ANR	5620818	Argument	x + 1		5620571	1					
ANR	5620819	AdditiveExpression	x + 1		5620571	0		+			
ANR	5620820	Identifier	x		5620571	0					
ANR	5620821	PrimaryExpression	1		5620571	1					
ANR	5620822	Argument	y		5620571	2					
ANR	5620823	Identifier	y		5620571	0					
ANR	5620824	PrimaryExpression	1		5620571	1					
ANR	5620825	ExpressionStatement	"bmp |= qrcodegen_getModule ( qrcode , x , y + 1 ) << 2"	1039:4:37124:37174	5620571	2	True				
ANR	5620826	AssignmentExpression	"bmp |= qrcodegen_getModule ( qrcode , x , y + 1 ) << 2"		5620571	0		|=			
ANR	5620827	Identifier	bmp		5620571	0					
ANR	5620828	ShiftExpression	"qrcodegen_getModule ( qrcode , x , y + 1 ) << 2"		5620571	1		<<			
ANR	5620829	CallExpression	"qrcodegen_getModule ( qrcode , x , y + 1 )"		5620571	0					
ANR	5620830	Callee	qrcodegen_getModule		5620571	0					
ANR	5620831	Identifier	qrcodegen_getModule		5620571	0					
ANR	5620832	ArgumentList	qrcode		5620571	1					
ANR	5620833	Argument	qrcode		5620571	0					
ANR	5620834	Identifier	qrcode		5620571	0					
ANR	5620835	Argument	x		5620571	1					
ANR	5620836	Identifier	x		5620571	0					
ANR	5620837	Argument	y + 1		5620571	2					
ANR	5620838	AdditiveExpression	y + 1		5620571	0		+			
ANR	5620839	Identifier	y		5620571	0					
ANR	5620840	PrimaryExpression	1		5620571	1					
ANR	5620841	PrimaryExpression	2		5620571	1					
ANR	5620842	ExpressionStatement	"bmp |= qrcodegen_getModule ( qrcode , x + 1 , y + 1 ) << 3"	1040:4:37180:37234	5620571	3	True				
ANR	5620843	AssignmentExpression	"bmp |= qrcodegen_getModule ( qrcode , x + 1 , y + 1 ) << 3"		5620571	0		|=			
ANR	5620844	Identifier	bmp		5620571	0					
ANR	5620845	ShiftExpression	"qrcodegen_getModule ( qrcode , x + 1 , y + 1 ) << 3"		5620571	1		<<			
ANR	5620846	CallExpression	"qrcodegen_getModule ( qrcode , x + 1 , y + 1 )"		5620571	0					
ANR	5620847	Callee	qrcodegen_getModule		5620571	0					
ANR	5620848	Identifier	qrcodegen_getModule		5620571	0					
ANR	5620849	ArgumentList	qrcode		5620571	1					
ANR	5620850	Argument	qrcode		5620571	0					
ANR	5620851	Identifier	qrcode		5620571	0					
ANR	5620852	Argument	x + 1		5620571	1					
ANR	5620853	AdditiveExpression	x + 1		5620571	0		+			
ANR	5620854	Identifier	x		5620571	0					
ANR	5620855	PrimaryExpression	1		5620571	1					
ANR	5620856	Argument	y + 1		5620571	2					
ANR	5620857	AdditiveExpression	y + 1		5620571	0		+			
ANR	5620858	Identifier	y		5620571	0					
ANR	5620859	PrimaryExpression	1		5620571	1					
ANR	5620860	PrimaryExpression	3		5620571	1					
ANR	5620861	IdentifierDeclStatement	const char * pixel = qrcode_utf8_expansions [ inverted ? 15 - bmp : bmp ] ;	1041:4:37240:37334	5620571	4	True				
ANR	5620862	IdentifierDecl	* pixel = qrcode_utf8_expansions [ inverted ? 15 - bmp : bmp ]		5620571	0					
ANR	5620863	IdentifierDeclType	const char *		5620571	0					
ANR	5620864	Identifier	pixel		5620571	1					
ANR	5620865	AssignmentExpression	* pixel = qrcode_utf8_expansions [ inverted ? 15 - bmp : bmp ]		5620571	2		=			
ANR	5620866	Identifier	pixel		5620571	0					
ANR	5620867	ArrayIndexing	qrcode_utf8_expansions [ inverted ? 15 - bmp : bmp ]		5620571	1					
ANR	5620868	Identifier	qrcode_utf8_expansions		5620571	0					
ANR	5620869	ConditionalExpression	inverted ? 15 - bmp : bmp		5620571	1					
ANR	5620870	Condition	inverted		5620571	0					
ANR	5620871	Identifier	inverted		5620571	0					
ANR	5620872	AdditiveExpression	15 - bmp		5620571	1		-			
ANR	5620873	PrimaryExpression	15		5620571	0					
ANR	5620874	Identifier	bmp		5620571	1					
ANR	5620875	Identifier	bmp		5620571	2					
ANR	5620876	ExpressionStatement	"memcpy ( p , pixel , strlen ( pixel ) )"	1046:4:37340:37373	5620571	5	True				
ANR	5620877	CallExpression	"memcpy ( p , pixel , strlen ( pixel ) )"		5620571	0					
ANR	5620878	Callee	memcpy		5620571	0					
ANR	5620879	Identifier	memcpy		5620571	0					
ANR	5620880	ArgumentList	p		5620571	1					
ANR	5620881	Argument	p		5620571	0					
ANR	5620882	Identifier	p		5620571	0					
ANR	5620883	Argument	pixel		5620571	1					
ANR	5620884	Identifier	pixel		5620571	0					
ANR	5620885	Argument	strlen ( pixel )		5620571	2					
ANR	5620886	CallExpression	strlen ( pixel )		5620571	0					
ANR	5620887	Callee	strlen		5620571	0					
ANR	5620888	Identifier	strlen		5620571	0					
ANR	5620889	ArgumentList	pixel		5620571	1					
ANR	5620890	Argument	pixel		5620571	0					
ANR	5620891	Identifier	pixel		5620571	0					
ANR	5620892	ExpressionStatement	p += strlen ( pixel )	1047:4:37379:37398	5620571	6	True				
ANR	5620893	AssignmentExpression	p += strlen ( pixel )		5620571	0		+=			
ANR	5620894	Identifier	p		5620571	0					
ANR	5620895	CallExpression	strlen ( pixel )		5620571	1					
ANR	5620896	Callee	strlen		5620571	0					
ANR	5620897	Identifier	strlen		5620571	0					
ANR	5620898	ArgumentList	pixel		5620571	1					
ANR	5620899	Argument	pixel		5620571	0					
ANR	5620900	Identifier	pixel		5620571	0					
ANR	5620901	ExpressionStatement	* p ++ = '\\n'	1049:3:37408:37419	5620571	1	True				
ANR	5620902	AssignmentExpression	* p ++ = '\\n'		5620571	0		=			
ANR	5620903	UnaryOperationExpression	* p ++		5620571	0					
ANR	5620904	UnaryOperator	*		5620571	0					
ANR	5620905	PostIncDecOperationExpression	p ++		5620571	1					
ANR	5620906	Identifier	p		5620571	0					
ANR	5620907	IncDec	++		5620571	1					
ANR	5620908	PrimaryExpression	'\\n'		5620571	1					
ANR	5620909	ElseStatement	else		5620571	0					
ANR	5620910	CompoundStatement		51:8:1222:1222	5620571	0					
ANR	5620911	ForStatement	for ( y = - border ; y < size + border ; y ++ )		5620571	0					
ANR	5620912	ForInit	y = - border ;	1052:7:37442:37453	5620571	0	True				
ANR	5620913	AssignmentExpression	y = - border		5620571	0		=			
ANR	5620914	Identifier	y		5620571	0					
ANR	5620915	UnaryOperationExpression	- border		5620571	1					
ANR	5620916	UnaryOperator	-		5620571	0					
ANR	5620917	Identifier	border		5620571	1					
ANR	5620918	Condition	y < size + border	1052:20:37455:37471	5620571	1	True				
ANR	5620919	RelationalExpression	y < size + border		5620571	0		<			
ANR	5620920	Identifier	y		5620571	0					
ANR	5620921	AdditiveExpression	size + border		5620571	1		+			
ANR	5620922	Identifier	size		5620571	0					
ANR	5620923	Identifier	border		5620571	1					
ANR	5620924	PostIncDecOperationExpression	y ++	1052:39:37474:37476	5620571	2	True				
ANR	5620925	Identifier	y		5620571	0					
ANR	5620926	IncDec	++		5620571	1					
ANR	5620927	CompoundStatement		52:44:1268:1268	5620571	3					
ANR	5620928	ForStatement	for ( x = - border ; x < size + border ; x ++ )		5620571	0					
ANR	5620929	ForInit	x = - border ;	1053:8:37489:37500	5620571	0	True				
ANR	5620930	AssignmentExpression	x = - border		5620571	0		=			
ANR	5620931	Identifier	x		5620571	0					
ANR	5620932	UnaryOperationExpression	- border		5620571	1					
ANR	5620933	UnaryOperator	-		5620571	0					
ANR	5620934	Identifier	border		5620571	1					
ANR	5620935	Condition	x < size + border	1053:21:37502:37518	5620571	1	True				
ANR	5620936	RelationalExpression	x < size + border		5620571	0		<			
ANR	5620937	Identifier	x		5620571	0					
ANR	5620938	AdditiveExpression	size + border		5620571	1		+			
ANR	5620939	Identifier	size		5620571	0					
ANR	5620940	Identifier	border		5620571	1					
ANR	5620941	PostIncDecOperationExpression	x ++	1053:40:37521:37523	5620571	2	True				
ANR	5620942	Identifier	x		5620571	0					
ANR	5620943	IncDec	++		5620571	1					
ANR	5620944	CompoundStatement		55:4:1373:1424	5620571	3					
ANR	5620945	IdentifierDeclStatement	"bool fill = qrcodegen_getModule ( qrcode , x , y ) ;"	1054:4:37532:37578	5620571	0	True				
ANR	5620946	IdentifierDecl	"fill = qrcodegen_getModule ( qrcode , x , y )"		5620571	0					
ANR	5620947	IdentifierDeclType	bool		5620571	0					
ANR	5620948	Identifier	fill		5620571	1					
ANR	5620949	AssignmentExpression	"fill = qrcodegen_getModule ( qrcode , x , y )"		5620571	2		=			
ANR	5620950	Identifier	fill		5620571	0					
ANR	5620951	CallExpression	"qrcodegen_getModule ( qrcode , x , y )"		5620571	1					
ANR	5620952	Callee	qrcodegen_getModule		5620571	0					
ANR	5620953	Identifier	qrcodegen_getModule		5620571	0					
ANR	5620954	ArgumentList	qrcode		5620571	1					
ANR	5620955	Argument	qrcode		5620571	0					
ANR	5620956	Identifier	qrcode		5620571	0					
ANR	5620957	Argument	x		5620571	1					
ANR	5620958	Identifier	x		5620571	0					
ANR	5620959	Argument	y		5620571	2					
ANR	5620960	Identifier	y		5620571	0					
ANR	5620961	IdentifierDeclStatement	"const char * pixel = ( fill ^ inverted ) ? ""##"" : ""  "" ;"	1055:4:37584:37635	5620571	1	True				
ANR	5620962	IdentifierDecl	"* pixel = ( fill ^ inverted ) ? ""##"" : ""  """		5620571	0					
ANR	5620963	IdentifierDeclType	const char *		5620571	0					
ANR	5620964	Identifier	pixel		5620571	1					
ANR	5620965	AssignmentExpression	"* pixel = ( fill ^ inverted ) ? ""##"" : ""  """		5620571	2		=			
ANR	5620966	Identifier	pixel		5620571	0					
ANR	5620967	ConditionalExpression	"( fill ^ inverted ) ? ""##"" : ""  """		5620571	1					
ANR	5620968	Condition	fill ^ inverted		5620571	0					
ANR	5620969	ExclusiveOrExpression	fill ^ inverted		5620571	0		^			
ANR	5620970	Identifier	fill		5620571	0					
ANR	5620971	Identifier	inverted		5620571	1					
ANR	5620972	PrimaryExpression	"""##"""		5620571	1					
ANR	5620973	PrimaryExpression	"""  """		5620571	2					
ANR	5620974	ExpressionStatement	"memcpy ( p , pixel , strlen ( pixel ) )"	1056:4:37641:37674	5620571	2	True				
ANR	5620975	CallExpression	"memcpy ( p , pixel , strlen ( pixel ) )"		5620571	0					
ANR	5620976	Callee	memcpy		5620571	0					
ANR	5620977	Identifier	memcpy		5620571	0					
ANR	5620978	ArgumentList	p		5620571	1					
ANR	5620979	Argument	p		5620571	0					
ANR	5620980	Identifier	p		5620571	0					
ANR	5620981	Argument	pixel		5620571	1					
ANR	5620982	Identifier	pixel		5620571	0					
ANR	5620983	Argument	strlen ( pixel )		5620571	2					
ANR	5620984	CallExpression	strlen ( pixel )		5620571	0					
ANR	5620985	Callee	strlen		5620571	0					
ANR	5620986	Identifier	strlen		5620571	0					
ANR	5620987	ArgumentList	pixel		5620571	1					
ANR	5620988	Argument	pixel		5620571	0					
ANR	5620989	Identifier	pixel		5620571	0					
ANR	5620990	ExpressionStatement	p += strlen ( pixel )	1057:4:37680:37699	5620571	3	True				
ANR	5620991	AssignmentExpression	p += strlen ( pixel )		5620571	0		+=			
ANR	5620992	Identifier	p		5620571	0					
ANR	5620993	CallExpression	strlen ( pixel )		5620571	1					
ANR	5620994	Callee	strlen		5620571	0					
ANR	5620995	Identifier	strlen		5620571	0					
ANR	5620996	ArgumentList	pixel		5620571	1					
ANR	5620997	Argument	pixel		5620571	0					
ANR	5620998	Identifier	pixel		5620571	0					
ANR	5620999	ExpressionStatement	* p ++ = '\\n'	1059:3:37709:37720	5620571	1	True				
ANR	5621000	AssignmentExpression	* p ++ = '\\n'		5620571	0		=			
ANR	5621001	UnaryOperationExpression	* p ++		5620571	0					
ANR	5621002	UnaryOperator	*		5620571	0					
ANR	5621003	PostIncDecOperationExpression	p ++		5620571	1					
ANR	5621004	Identifier	p		5620571	0					
ANR	5621005	IncDec	++		5620571	1					
ANR	5621006	PrimaryExpression	'\\n'		5620571	1					
ANR	5621007	IfStatement	if ( p > res )		5620571	16					
ANR	5621008	Condition	p > res	1062:5:37734:37740	5620571	0	True				
ANR	5621009	RelationalExpression	p > res		5620571	0		>			
ANR	5621010	Identifier	p		5620571	0					
ANR	5621011	Identifier	res		5620571	1					
ANR	5621012	CompoundStatement		62:14:1532:1532	5620571	1					
ANR	5621013	ExpressionStatement	p --	1063:2:37747:37750	5620571	0	True				
ANR	5621014	PostIncDecOperationExpression	p --		5620571	0					
ANR	5621015	Identifier	p		5620571	0					
ANR	5621016	IncDec	--		5620571	1					
ANR	5621017	ExpressionStatement	* p = 0	1065:1:37756:37762	5620571	17	True				
ANR	5621018	AssignmentExpression	* p = 0		5620571	0		=			
ANR	5621019	UnaryOperationExpression	* p		5620571	0					
ANR	5621020	UnaryOperator	*		5620571	0					
ANR	5621021	Identifier	p		5620571	1					
ANR	5621022	PrimaryExpression	0		5620571	1					
ANR	5621023	ExpressionStatement	free ( buf )	1066:1:37765:37775	5620571	18	True				
ANR	5621024	CallExpression	free ( buf )		5620571	0					
ANR	5621025	Callee	free		5620571	0					
ANR	5621026	Identifier	free		5620571	0					
ANR	5621027	ArgumentList	buf		5620571	1					
ANR	5621028	Argument	buf		5620571	0					
ANR	5621029	Identifier	buf		5620571	0					
ANR	5621030	ReturnStatement	return res ;	1067:1:37778:37788	5620571	19	True				
ANR	5621031	Identifier	res		5620571	0					
ANR	5621032	ReturnType	R_API char *		5620571	1					
ANR	5621033	Identifier	r_qrcode_gen		5620571	2					
ANR	5621034	ParameterList	"const ut8 * text , int len , bool utf8 , bool inverted"		5620571	3					
ANR	5621035	Parameter	const ut8 * text	1001:25:36158:36172	5620571	0	True				
ANR	5621036	ParameterType	const ut8 *		5620571	0					
ANR	5621037	Identifier	text		5620571	1					
ANR	5621038	Parameter	int len	1001:42:36175:36181	5620571	1	True				
ANR	5621039	ParameterType	int		5620571	0					
ANR	5621040	Identifier	len		5620571	1					
ANR	5621041	Parameter	bool utf8	1001:51:36184:36192	5620571	2	True				
ANR	5621042	ParameterType	bool		5620571	0					
ANR	5621043	Identifier	utf8		5620571	1					
ANR	5621044	Parameter	bool inverted	1001:62:36195:36207	5620571	3	True				
ANR	5621045	ParameterType	bool		5620571	0					
ANR	5621046	Identifier	inverted		5620571	1					
ANR	5621047	CFGEntryNode	ENTRY		5620571		True				
ANR	5621048	CFGExitNode	EXIT		5620571		True				
ANR	5621049	Symbol	qrcodegen_Ecc_HIGH		5620571						
ANR	5621050	Symbol	bmp		5620571						
ANR	5621051	Symbol	qrcode		5620571						
ANR	5621052	Symbol	utf8		5620571						
ANR	5621053	Symbol	qrcodegen_getSize		5620571						
ANR	5621054	Symbol	calloc		5620571						
ANR	5621055	Symbol	qrcode_utf8_expansions		5620571						
ANR	5621056	Symbol	* bmp		5620571						
ANR	5621057	Symbol	strlen		5620571						
ANR	5621058	Symbol	total		5620571						
ANR	5621059	Symbol	len		5620571						
ANR	5621060	Symbol	* qrcode_utf8_expansions		5620571						
ANR	5621061	Symbol	text		5620571						
ANR	5621062	Symbol	inverted		5620571						
ANR	5621063	Symbol	ok		5620571						
ANR	5621064	Symbol	qrcodegen_VERSION_MAX		5620571						
ANR	5621065	Symbol	pixel		5620571						
ANR	5621066	Symbol	border		5620571						
ANR	5621067	Symbol	res		5620571						
ANR	5621068	Symbol	NULL		5620571						
ANR	5621069	Symbol	r_qrcode_bin		5620571						
ANR	5621070	Symbol	* p ++		5620571						
ANR	5621071	Symbol	* inverted		5620571						
ANR	5621072	Symbol	qrcodegen_BUFFER_LEN_MAX		5620571						
ANR	5621073	Symbol	qrcodegen_Mask_AUTO		5620571						
ANR	5621074	Symbol	fill		5620571						
ANR	5621075	Symbol	qrcodegen_getModule		5620571						
ANR	5621076	Symbol	p		5620571						
ANR	5621077	Symbol	buf		5620571						
ANR	5621078	Symbol	errCorLvl		5620571						
ANR	5621079	Symbol	qrcodegen_VERSION_MIN		5620571						
ANR	5621080	Symbol	size		5620571						
ANR	5621081	Symbol	true		5620571						
ANR	5621082	Symbol	x		5620571						
ANR	5621083	Symbol	y		5620571						
ANR	5621084	Symbol	* p		5620571						
