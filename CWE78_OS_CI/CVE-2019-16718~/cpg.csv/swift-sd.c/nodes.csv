command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6268820	File	data/converged/CVE-2019-16718~_radare2/swift-sd.c								
ANR	6268821	ClassDef	Type	20:0:342:394							
ANR	6268822	DeclStmt									
ANR	6268823	Decl							const char	const char *	code
ANR	6268824	DeclStmt									
ANR	6268825	Decl							const char	const char *	name
ANR	6268826	DeclStmt									
ANR	6268827	Decl							struct Type	struct Type [ ]	types
ANR	6268828	DeclStmt									
ANR	6268829	Decl							struct Type	struct Type [ ]	metas
ANR	6268830	DeclStmt									
ANR	6268831	Decl							struct Type	struct Type [ ]	flags
ANR	6268832	Function	getnum	77:0:1575:1726							
ANR	6268833	FunctionDef	"getnum (const char * n , int * num)"		6268832	0					
ANR	6268834	CompoundStatement		77:51:1626:1726	6268832	0					
ANR	6268835	IfStatement	if ( num && * n )		6268832	0					
ANR	6268836	Condition	num && * n	78:5:1633:1641	6268832	0	True				
ANR	6268837	AndExpression	num && * n		6268832	0		&&			
ANR	6268838	Identifier	num		6268832	0					
ANR	6268839	UnaryOperationExpression	* n		6268832	1					
ANR	6268840	UnaryOperator	*		6268832	0					
ANR	6268841	Identifier	n		6268832	1					
ANR	6268842	CompoundStatement		2:16:17:17	6268832	1					
ANR	6268843	ExpressionStatement	* num = atoi ( n )	79:2:1648:1663	6268832	0	True				
ANR	6268844	AssignmentExpression	* num = atoi ( n )		6268832	0		=			
ANR	6268845	UnaryOperationExpression	* num		6268832	0					
ANR	6268846	UnaryOperator	*		6268832	0					
ANR	6268847	Identifier	num		6268832	1					
ANR	6268848	CallExpression	atoi ( n )		6268832	1					
ANR	6268849	Callee	atoi		6268832	0					
ANR	6268850	Identifier	atoi		6268832	0					
ANR	6268851	ArgumentList	n		6268832	1					
ANR	6268852	Argument	n		6268832	0					
ANR	6268853	Identifier	n		6268832	0					
ANR	6268854	WhileStatement	while ( * n && * n >= '0' && * n <= '9' )		6268832	1					
ANR	6268855	Condition	* n && * n >= '0' && * n <= '9'	81:8:1676:1700	6268832	0	True				
ANR	6268856	AndExpression	* n && * n >= '0' && * n <= '9'		6268832	0		&&			
ANR	6268857	UnaryOperationExpression	* n		6268832	0					
ANR	6268858	UnaryOperator	*		6268832	0					
ANR	6268859	Identifier	n		6268832	1					
ANR	6268860	AndExpression	* n >= '0' && * n <= '9'		6268832	1		&&			
ANR	6268861	RelationalExpression	* n >= '0'		6268832	0		>=			
ANR	6268862	UnaryOperationExpression	* n		6268832	0					
ANR	6268863	UnaryOperator	*		6268832	0					
ANR	6268864	Identifier	n		6268832	1					
ANR	6268865	PrimaryExpression	'0'		6268832	1					
ANR	6268866	RelationalExpression	* n <= '9'		6268832	1		<=			
ANR	6268867	UnaryOperationExpression	* n		6268832	0					
ANR	6268868	UnaryOperator	*		6268832	0					
ANR	6268869	Identifier	n		6268832	1					
ANR	6268870	PrimaryExpression	'9'		6268832	1					
ANR	6268871	CompoundStatement		5:35:76:76	6268832	1					
ANR	6268872	ExpressionStatement	n ++	82:2:1707:1710	6268832	0	True				
ANR	6268873	PostIncDecOperationExpression	n ++		6268832	0					
ANR	6268874	Identifier	n		6268832	0					
ANR	6268875	IncDec	++		6268832	1					
ANR	6268876	ReturnStatement	return n ;	84:1:1716:1724	6268832	2	True				
ANR	6268877	Identifier	n		6268832	0					
ANR	6268878	ReturnType	static const char *		6268832	1					
ANR	6268879	Identifier	getnum		6268832	2					
ANR	6268880	ParameterList	"const char * n , int * num"		6268832	3					
ANR	6268881	Parameter	const char * n	77:26:1601:1613	6268832	0	True				
ANR	6268882	ParameterType	const char *		6268832	0					
ANR	6268883	Identifier	n		6268832	1					
ANR	6268884	Parameter	int * num	77:41:1616:1623	6268832	1	True				
ANR	6268885	ParameterType	int *		6268832	0					
ANR	6268886	Identifier	num		6268832	1					
ANR	6268887	CFGEntryNode	ENTRY		6268832		True				
ANR	6268888	CFGExitNode	EXIT		6268832		True				
ANR	6268889	Symbol	atoi		6268832						
ANR	6268890	Symbol	* num		6268832						
ANR	6268891	Symbol	num		6268832						
ANR	6268892	Symbol	* n		6268832						
ANR	6268893	Symbol	n		6268832						
ANR	6268894	Function	numpos	87:0:1729:1833							
ANR	6268895	FunctionDef	numpos (const char * n)		6268894	0					
ANR	6268896	CompoundStatement		87:41:1770:1833	6268894	0					
ANR	6268897	WhileStatement	while ( * n && ( * n < '0' || * n > '9' ) )		6268894	0					
ANR	6268898	Condition	* n && ( * n < '0' || * n > '9' )	88:8:1780:1807	6268894	0	True				
ANR	6268899	AndExpression	* n && ( * n < '0' || * n > '9' )		6268894	0		&&			
ANR	6268900	UnaryOperationExpression	* n		6268894	0					
ANR	6268901	UnaryOperator	*		6268894	0					
ANR	6268902	Identifier	n		6268894	1					
ANR	6268903	OrExpression	* n < '0' || * n > '9'		6268894	1		||			
ANR	6268904	RelationalExpression	* n < '0'		6268894	0		<			
ANR	6268905	UnaryOperationExpression	* n		6268894	0					
ANR	6268906	UnaryOperator	*		6268894	0					
ANR	6268907	Identifier	n		6268894	1					
ANR	6268908	PrimaryExpression	'0'		6268894	1					
ANR	6268909	RelationalExpression	* n > '9'		6268894	1		>			
ANR	6268910	UnaryOperationExpression	* n		6268894	0					
ANR	6268911	UnaryOperator	*		6268894	0					
ANR	6268912	Identifier	n		6268894	1					
ANR	6268913	PrimaryExpression	'9'		6268894	1					
ANR	6268914	CompoundStatement		2:38:39:39	6268894	1					
ANR	6268915	ExpressionStatement	n ++	89:2:1814:1817	6268894	0	True				
ANR	6268916	PostIncDecOperationExpression	n ++		6268894	0					
ANR	6268917	Identifier	n		6268894	0					
ANR	6268918	IncDec	++		6268894	1					
ANR	6268919	ReturnStatement	return n ;	91:1:1823:1831	6268894	1	True				
ANR	6268920	Identifier	n		6268894	0					
ANR	6268921	ReturnType	static const char *		6268894	1					
ANR	6268922	Identifier	numpos		6268894	2					
ANR	6268923	ParameterList	const char * n		6268894	3					
ANR	6268924	Parameter	const char * n	87:26:1755:1767	6268894	0	True				
ANR	6268925	ParameterType	const char *		6268894	0					
ANR	6268926	Identifier	n		6268894	1					
ANR	6268927	CFGEntryNode	ENTRY		6268894		True				
ANR	6268928	CFGExitNode	EXIT		6268894		True				
ANR	6268929	Symbol	* n		6268894						
ANR	6268930	Symbol	n		6268894						
ANR	6268931	Function	getstring	94:0:1836:2030							
ANR	6268932	FunctionDef	"getstring (const char * s , int len)"		6268931	0					
ANR	6268933	CompoundStatement		94:53:1889:2030	6268931	0					
ANR	6268934	Statement	static	95:1:1892:1897	6268931	0	True				
ANR	6268935	IdentifierDeclStatement	char buf [ 256 ] = { 0 } ;	95:8:1899:1918	6268931	1	True				
ANR	6268936	IdentifierDecl	buf [ 256 ] = { 0 }		6268931	0					
ANR	6268937	IdentifierDeclType	char [ 256 ]		6268931	0					
ANR	6268938	Identifier	buf		6268931	1					
ANR	6268939	PrimaryExpression	256		6268931	2					
ANR	6268940	AssignmentExpression	buf [ 256 ] = { 0 }		6268931	3		=			
ANR	6268941	Identifier	buf		6268931	0					
ANR	6268942	InitializerList	0		6268931	1					
ANR	6268943	PrimaryExpression	0		6268931	0					
ANR	6268944	IfStatement	if ( len < 0 || len > sizeof ( buf ) - 2 )		6268931	2					
ANR	6268945	Condition	len < 0 || len > sizeof ( buf ) - 2	96:5:1925:1957	6268931	0	True				
ANR	6268946	OrExpression	len < 0 || len > sizeof ( buf ) - 2		6268931	0		||			
ANR	6268947	RelationalExpression	len < 0		6268931	0		<			
ANR	6268948	Identifier	len		6268931	0					
ANR	6268949	PrimaryExpression	0		6268931	1					
ANR	6268950	RelationalExpression	len > sizeof ( buf ) - 2		6268931	1		>			
ANR	6268951	Identifier	len		6268931	0					
ANR	6268952	AdditiveExpression	sizeof ( buf ) - 2		6268931	1		-			
ANR	6268953	SizeofExpression	sizeof ( buf )		6268931	0					
ANR	6268954	Sizeof	sizeof		6268931	0					
ANR	6268955	SizeofOperand	buf		6268931	1					
ANR	6268956	PrimaryExpression	2		6268931	1					
ANR	6268957	CompoundStatement		3:40:70:70	6268931	1					
ANR	6268958	ReturnStatement	"return """" ;"	97:2:1964:1973	6268931	0	True				
ANR	6268959	PrimaryExpression	""""""		6268931	0					
ANR	6268960	ExpressionStatement	"strncpy ( buf , s , len )"	99:1:1979:2000	6268931	3	True				
ANR	6268961	CallExpression	"strncpy ( buf , s , len )"		6268931	0					
ANR	6268962	Callee	strncpy		6268931	0					
ANR	6268963	Identifier	strncpy		6268931	0					
ANR	6268964	ArgumentList	buf		6268931	1					
ANR	6268965	Argument	buf		6268931	0					
ANR	6268966	Identifier	buf		6268931	0					
ANR	6268967	Argument	s		6268931	1					
ANR	6268968	Identifier	s		6268931	0					
ANR	6268969	Argument	len		6268931	2					
ANR	6268970	Identifier	len		6268931	0					
ANR	6268971	ExpressionStatement	buf [ len ] = 0	100:1:2003:2015	6268931	4	True				
ANR	6268972	AssignmentExpression	buf [ len ] = 0		6268931	0		=			
ANR	6268973	ArrayIndexing	buf [ len ]		6268931	0					
ANR	6268974	Identifier	buf		6268931	0					
ANR	6268975	Identifier	len		6268931	1					
ANR	6268976	PrimaryExpression	0		6268931	1					
ANR	6268977	ReturnStatement	return buf ;	101:1:2018:2028	6268931	5	True				
ANR	6268978	Identifier	buf		6268931	0					
ANR	6268979	ReturnType	static const char *		6268931	1					
ANR	6268980	Identifier	getstring		6268931	2					
ANR	6268981	ParameterList	"const char * s , int len"		6268931	3					
ANR	6268982	Parameter	const char * s	94:29:1865:1877	6268931	0	True				
ANR	6268983	ParameterType	const char *		6268931	0					
ANR	6268984	Identifier	s		6268931	1					
ANR	6268985	Parameter	int len	94:44:1880:1886	6268931	1	True				
ANR	6268986	ParameterType	int		6268931	0					
ANR	6268987	Identifier	len		6268931	1					
ANR	6268988	CFGEntryNode	ENTRY		6268931		True				
ANR	6268989	CFGExitNode	EXIT		6268931		True				
ANR	6268990	Symbol	buf		6268931						
ANR	6268991	Symbol	* buf		6268931						
ANR	6268992	Symbol	s		6268931						
ANR	6268993	Symbol	len		6268931						
ANR	6268994	Symbol	* len		6268931						
ANR	6268995	Function	resolve	104:0:2033:2340							
ANR	6268996	FunctionDef	"resolve (struct Type * t , const char * foo , const char * * bar)"		6268995	0					
ANR	6268997	CompoundStatement		104:78:2111:2340	6268995	0					
ANR	6268998	IfStatement	if ( ! t || ! foo || ! * foo )		6268995	0					
ANR	6268999	Condition	! t || ! foo || ! * foo	105:5:2118:2136	6268995	0	True				
ANR	6269000	OrExpression	! t || ! foo || ! * foo		6268995	0		||			
ANR	6269001	UnaryOperationExpression	! t		6268995	0					
ANR	6269002	UnaryOperator	!		6268995	0					
ANR	6269003	Identifier	t		6268995	1					
ANR	6269004	OrExpression	! foo || ! * foo		6268995	1		||			
ANR	6269005	UnaryOperationExpression	! foo		6268995	0					
ANR	6269006	UnaryOperator	!		6268995	0					
ANR	6269007	Identifier	foo		6268995	1					
ANR	6269008	UnaryOperationExpression	! * foo		6268995	1					
ANR	6269009	UnaryOperator	!		6268995	0					
ANR	6269010	UnaryOperationExpression	* foo		6268995	1					
ANR	6269011	UnaryOperator	*		6268995	0					
ANR	6269012	Identifier	foo		6268995	1					
ANR	6269013	CompoundStatement		2:26:27:27	6268995	1					
ANR	6269014	ReturnStatement	return NULL ;	106:2:2143:2154	6268995	0	True				
ANR	6269015	Identifier	NULL		6268995	0					
ANR	6269016	ForStatement	for ( ; t [ 0 ] . code ; t ++ )		6268995	1					
ANR	6269017	Condition	t [ 0 ] . code	108:8:2167:2175	6268995	0	True				
ANR	6269018	MemberAccess	t [ 0 ] . code		6268995	0					
ANR	6269019	ArrayIndexing	t [ 0 ]		6268995	0					
ANR	6269020	Identifier	t		6268995	0					
ANR	6269021	PrimaryExpression	0		6268995	1					
ANR	6269022	Identifier	code		6268995	1					
ANR	6269023	PostIncDecOperationExpression	t ++	108:19:2178:2180	6268995	1	True				
ANR	6269024	Identifier	t		6268995	0					
ANR	6269025	IncDec	++		6268995	1					
ANR	6269026	CompoundStatement		6:2:75:103	6268995	2					
ANR	6269027	IdentifierDeclStatement	int len = strlen ( t [ 0 ] . code ) ;	109:2:2187:2215	6268995	0	True				
ANR	6269028	IdentifierDecl	len = strlen ( t [ 0 ] . code )		6268995	0					
ANR	6269029	IdentifierDeclType	int		6268995	0					
ANR	6269030	Identifier	len		6268995	1					
ANR	6269031	AssignmentExpression	len = strlen ( t [ 0 ] . code )		6268995	2		=			
ANR	6269032	Identifier	len		6268995	0					
ANR	6269033	CallExpression	strlen ( t [ 0 ] . code )		6268995	1					
ANR	6269034	Callee	strlen		6268995	0					
ANR	6269035	Identifier	strlen		6268995	0					
ANR	6269036	ArgumentList	t [ 0 ] . code		6268995	1					
ANR	6269037	Argument	t [ 0 ] . code		6268995	0					
ANR	6269038	MemberAccess	t [ 0 ] . code		6268995	0					
ANR	6269039	ArrayIndexing	t [ 0 ]		6268995	0					
ANR	6269040	Identifier	t		6268995	0					
ANR	6269041	PrimaryExpression	0		6268995	1					
ANR	6269042	Identifier	code		6268995	1					
ANR	6269043	IfStatement	"if ( ! strncmp ( foo , t [ 0 ] . code , len ) )"		6268995	1					
ANR	6269044	Condition	"! strncmp ( foo , t [ 0 ] . code , len )"	110:6:2223:2252	6268995	0	True				
ANR	6269045	UnaryOperationExpression	"! strncmp ( foo , t [ 0 ] . code , len )"		6268995	0					
ANR	6269046	UnaryOperator	!		6268995	0					
ANR	6269047	CallExpression	"strncmp ( foo , t [ 0 ] . code , len )"		6268995	1					
ANR	6269048	Callee	strncmp		6268995	0					
ANR	6269049	Identifier	strncmp		6268995	0					
ANR	6269050	ArgumentList	foo		6268995	1					
ANR	6269051	Argument	foo		6268995	0					
ANR	6269052	Identifier	foo		6268995	0					
ANR	6269053	Argument	t [ 0 ] . code		6268995	1					
ANR	6269054	MemberAccess	t [ 0 ] . code		6268995	0					
ANR	6269055	ArrayIndexing	t [ 0 ]		6268995	0					
ANR	6269056	Identifier	t		6268995	0					
ANR	6269057	PrimaryExpression	0		6268995	1					
ANR	6269058	Identifier	code		6268995	1					
ANR	6269059	Argument	len		6268995	2					
ANR	6269060	Identifier	len		6268995	0					
ANR	6269061	CompoundStatement		7:38:143:143	6268995	1					
ANR	6269062	IfStatement	if ( bar )		6268995	0					
ANR	6269063	Condition	bar	111:7:2264:2266	6268995	0	True				
ANR	6269064	Identifier	bar		6268995	0					
ANR	6269065	CompoundStatement		8:12:157:157	6268995	1					
ANR	6269066	ExpressionStatement	* bar = t [ 0 ] . name	112:4:2275:2291	6268995	0	True				
ANR	6269067	AssignmentExpression	* bar = t [ 0 ] . name		6268995	0		=			
ANR	6269068	UnaryOperationExpression	* bar		6268995	0					
ANR	6269069	UnaryOperator	*		6268995	0					
ANR	6269070	Identifier	bar		6268995	1					
ANR	6269071	MemberAccess	t [ 0 ] . name		6268995	1					
ANR	6269072	ArrayIndexing	t [ 0 ]		6268995	0					
ANR	6269073	Identifier	t		6268995	0					
ANR	6269074	PrimaryExpression	0		6268995	1					
ANR	6269075	Identifier	name		6268995	1					
ANR	6269076	ReturnStatement	return foo + len ;	114:3:2301:2317	6268995	1	True				
ANR	6269077	AdditiveExpression	foo + len		6268995	0		+			
ANR	6269078	Identifier	foo		6268995	0					
ANR	6269079	Identifier	len		6268995	1					
ANR	6269080	ReturnStatement	return NULL ;	117:1:2327:2338	6268995	2	True				
ANR	6269081	Identifier	NULL		6268995	0					
ANR	6269082	ReturnType	static const char *		6268995	1					
ANR	6269083	Identifier	resolve		6268995	2					
ANR	6269084	ParameterList	"struct Type * t , const char * foo , const char * * bar"		6268995	3					
ANR	6269085	Parameter	struct Type * t	104:27:2060:2073	6268995	0	True				
ANR	6269086	ParameterType	struct Type *		6268995	0					
ANR	6269087	Identifier	t		6268995	1					
ANR	6269088	Parameter	const char * foo	104:43:2076:2090	6268995	1	True				
ANR	6269089	ParameterType	const char *		6268995	0					
ANR	6269090	Identifier	foo		6268995	1					
ANR	6269091	Parameter	const char * * bar	104:60:2093:2108	6268995	2	True				
ANR	6269092	ParameterType	const char * *		6268995	0					
ANR	6269093	Identifier	bar		6268995	1					
ANR	6269094	CFGEntryNode	ENTRY		6268995		True				
ANR	6269095	CFGExitNode	EXIT		6268995		True				
ANR	6269096	Symbol	strlen		6268995						
ANR	6269097	Symbol	strncmp		6268995						
ANR	6269098	Symbol	bar		6268995						
ANR	6269099	Symbol	* bar		6268995						
ANR	6269100	Symbol	NULL		6268995						
ANR	6269101	Symbol	t		6268995						
ANR	6269102	Symbol	len		6268995						
ANR	6269103	Symbol	foo		6268995						
ANR	6269104	Symbol	t [ 0 ] . code		6268995						
ANR	6269105	Symbol	t [ 0 ] . name		6268995						
ANR	6269106	Symbol	* t		6268995						
ANR	6269107	Symbol	* foo		6268995						
ANR	6269108	DeclStmt									
ANR	6269109	Decl							int	int	have_swift_demangle
ANR	6269110	Function	swift_demangle_cmd	122:0:2381:3331							
ANR	6269111	FunctionDef	swift_demangle_cmd (const char * s)		6269110	0					
ANR	6269112	CompoundStatement		122:47:2428:3331	6269110	0					
ANR	6269113	Statement	static	124:1:2472:2477	6269110	0	True				
ANR	6269114	IdentifierDeclStatement	char * swift_demangle = NULL ;	124:8:2479:2506	6269110	1	True				
ANR	6269115	IdentifierDecl	* swift_demangle = NULL		6269110	0					
ANR	6269116	IdentifierDeclType	char *		6269110	0					
ANR	6269117	Identifier	swift_demangle		6269110	1					
ANR	6269118	AssignmentExpression	* swift_demangle = NULL		6269110	2		=			
ANR	6269119	Identifier	NULL		6269110	0					
ANR	6269120	Identifier	NULL		6269110	1					
ANR	6269121	IfStatement	if ( have_swift_demangle == - 1 )		6269110	2					
ANR	6269122	Condition	have_swift_demangle == - 1	125:5:2513:2537	6269110	0	True				
ANR	6269123	EqualityExpression	have_swift_demangle == - 1		6269110	0		==			
ANR	6269124	Identifier	have_swift_demangle		6269110	0					
ANR	6269125	UnaryOperationExpression	- 1		6269110	1					
ANR	6269126	UnaryOperator	-		6269110	0					
ANR	6269127	PrimaryExpression	1		6269110	1					
ANR	6269128	CompoundStatement		4:32:111:111	6269110	1					
ANR	6269129	IfStatement	if ( ! swift_demangle )		6269110	0					
ANR	6269130	Condition	! swift_demangle	126:6:2548:2562	6269110	0	True				
ANR	6269131	UnaryOperationExpression	! swift_demangle		6269110	0					
ANR	6269132	UnaryOperator	!		6269110	0					
ANR	6269133	Identifier	swift_demangle		6269110	1					
ANR	6269134	CompoundStatement		5:23:136:136	6269110	1					
ANR	6269135	ExpressionStatement	have_swift_demangle = 0	127:3:2570:2593	6269110	0	True				
ANR	6269136	AssignmentExpression	have_swift_demangle = 0		6269110	0		=			
ANR	6269137	Identifier	have_swift_demangle		6269110	0					
ANR	6269138	PrimaryExpression	0		6269110	1					
ANR	6269139	ExpressionStatement	"swift_demangle = r_file_path ( ""swift-demangle"" )"	128:3:2598:2645	6269110	1	True				
ANR	6269140	AssignmentExpression	"swift_demangle = r_file_path ( ""swift-demangle"" )"		6269110	0		=			
ANR	6269141	Identifier	swift_demangle		6269110	0					
ANR	6269142	CallExpression	"r_file_path ( ""swift-demangle"" )"		6269110	1					
ANR	6269143	Callee	r_file_path		6269110	0					
ANR	6269144	Identifier	r_file_path		6269110	0					
ANR	6269145	ArgumentList	"""swift-demangle"""		6269110	1					
ANR	6269146	Argument	"""swift-demangle"""		6269110	0					
ANR	6269147	PrimaryExpression	"""swift-demangle"""		6269110	0					
ANR	6269148	IfStatement	"if ( ! swift_demangle || ! strcmp ( swift_demangle , ""swift-demangle"" ) )"		6269110	2					
ANR	6269149	Condition	"! swift_demangle || ! strcmp ( swift_demangle , ""swift-demangle"" )"	129:7:2654:2714	6269110	0	True				
ANR	6269150	OrExpression	"! swift_demangle || ! strcmp ( swift_demangle , ""swift-demangle"" )"		6269110	0		||			
ANR	6269151	UnaryOperationExpression	! swift_demangle		6269110	0					
ANR	6269152	UnaryOperator	!		6269110	0					
ANR	6269153	Identifier	swift_demangle		6269110	1					
ANR	6269154	UnaryOperationExpression	"! strcmp ( swift_demangle , ""swift-demangle"" )"		6269110	1					
ANR	6269155	UnaryOperator	!		6269110	0					
ANR	6269156	CallExpression	"strcmp ( swift_demangle , ""swift-demangle"" )"		6269110	1					
ANR	6269157	Callee	strcmp		6269110	0					
ANR	6269158	Identifier	strcmp		6269110	0					
ANR	6269159	ArgumentList	swift_demangle		6269110	1					
ANR	6269160	Argument	swift_demangle		6269110	0					
ANR	6269161	Identifier	swift_demangle		6269110	0					
ANR	6269162	Argument	"""swift-demangle"""		6269110	1					
ANR	6269163	PrimaryExpression	"""swift-demangle"""		6269110	0					
ANR	6269164	CompoundStatement		9:4:294:329	6269110	1					
ANR	6269165	IdentifierDeclStatement	"char * xcrun = r_file_path ( ""xcrun"" ) ;"	130:4:2723:2758	6269110	0	True				
ANR	6269166	IdentifierDecl	"* xcrun = r_file_path ( ""xcrun"" )"		6269110	0					
ANR	6269167	IdentifierDeclType	char *		6269110	0					
ANR	6269168	Identifier	xcrun		6269110	1					
ANR	6269169	AssignmentExpression	"* xcrun = r_file_path ( ""xcrun"" )"		6269110	2		=			
ANR	6269170	Identifier	xcrun		6269110	0					
ANR	6269171	CallExpression	"r_file_path ( ""xcrun"" )"		6269110	1					
ANR	6269172	Callee	r_file_path		6269110	0					
ANR	6269173	Identifier	r_file_path		6269110	0					
ANR	6269174	ArgumentList	"""xcrun"""		6269110	1					
ANR	6269175	Argument	"""xcrun"""		6269110	0					
ANR	6269176	PrimaryExpression	"""xcrun"""		6269110	0					
ANR	6269177	IfStatement	if ( xcrun )		6269110	1					
ANR	6269178	Condition	xcrun	131:8:2768:2772	6269110	0	True				
ANR	6269179	Identifier	xcrun		6269110	0					
ANR	6269180	CompoundStatement		10:15:346:346	6269110	1					
ANR	6269181	IfStatement	"if ( strcmp ( xcrun , ""xcrun"" ) )"		6269110	0					
ANR	6269182	Condition	"strcmp ( xcrun , ""xcrun"" )"	132:9:2786:2808	6269110	0	True				
ANR	6269183	CallExpression	"strcmp ( xcrun , ""xcrun"" )"		6269110	0					
ANR	6269184	Callee	strcmp		6269110	0					
ANR	6269185	Identifier	strcmp		6269110	0					
ANR	6269186	ArgumentList	xcrun		6269110	1					
ANR	6269187	Argument	xcrun		6269110	0					
ANR	6269188	Identifier	xcrun		6269110	0					
ANR	6269189	Argument	"""xcrun"""		6269110	1					
ANR	6269190	PrimaryExpression	"""xcrun"""		6269110	0					
ANR	6269191	CompoundStatement		11:34:382:382	6269110	1					
ANR	6269192	ExpressionStatement	free ( swift_demangle )	133:6:2819:2840	6269110	0	True				
ANR	6269193	CallExpression	free ( swift_demangle )		6269110	0					
ANR	6269194	Callee	free		6269110	0					
ANR	6269195	Identifier	free		6269110	0					
ANR	6269196	ArgumentList	swift_demangle		6269110	1					
ANR	6269197	Argument	swift_demangle		6269110	0					
ANR	6269198	Identifier	swift_demangle		6269110	0					
ANR	6269199	ExpressionStatement	"swift_demangle = r_str_newf ( ""%s swift-demangle"" , xcrun )"	134:6:2848:2904	6269110	1	True				
ANR	6269200	AssignmentExpression	"swift_demangle = r_str_newf ( ""%s swift-demangle"" , xcrun )"		6269110	0		=			
ANR	6269201	Identifier	swift_demangle		6269110	0					
ANR	6269202	CallExpression	"r_str_newf ( ""%s swift-demangle"" , xcrun )"		6269110	1					
ANR	6269203	Callee	r_str_newf		6269110	0					
ANR	6269204	Identifier	r_str_newf		6269110	0					
ANR	6269205	ArgumentList	"""%s swift-demangle"""		6269110	1					
ANR	6269206	Argument	"""%s swift-demangle"""		6269110	0					
ANR	6269207	PrimaryExpression	"""%s swift-demangle"""		6269110	0					
ANR	6269208	Argument	xcrun		6269110	1					
ANR	6269209	Identifier	xcrun		6269110	0					
ANR	6269210	ExpressionStatement	have_swift_demangle = 1	135:6:2912:2935	6269110	2	True				
ANR	6269211	AssignmentExpression	have_swift_demangle = 1		6269110	0		=			
ANR	6269212	Identifier	have_swift_demangle		6269110	0					
ANR	6269213	PrimaryExpression	1		6269110	1					
ANR	6269214	ExpressionStatement	free ( xcrun )	137:5:2949:2961	6269110	1	True				
ANR	6269215	CallExpression	free ( xcrun )		6269110	0					
ANR	6269216	Callee	free		6269110	0					
ANR	6269217	Identifier	free		6269110	0					
ANR	6269218	ArgumentList	xcrun		6269110	1					
ANR	6269219	Argument	xcrun		6269110	0					
ANR	6269220	Identifier	xcrun		6269110	0					
ANR	6269221	IfStatement	if ( swift_demangle )		6269110	3					
ANR	6269222	Condition	swift_demangle	142:5:2986:2999	6269110	0	True				
ANR	6269223	Identifier	swift_demangle		6269110	0					
ANR	6269224	CompoundStatement		27:2:724:793	6269110	1					
ANR	6269225	IfStatement	"if ( strstr ( s , ""'"" ) || strstr ( s , ""\\\\"" ) )"		6269110	0					
ANR	6269226	Condition	"strstr ( s , ""'"" ) || strstr ( s , ""\\\\"" )"	143:6:3010:3044	6269110	0	True				
ANR	6269227	OrExpression	"strstr ( s , ""'"" ) || strstr ( s , ""\\\\"" )"		6269110	0		||			
ANR	6269228	CallExpression	"strstr ( s , ""'"" )"		6269110	0					
ANR	6269229	Callee	strstr		6269110	0					
ANR	6269230	Identifier	strstr		6269110	0					
ANR	6269231	ArgumentList	s		6269110	1					
ANR	6269232	Argument	s		6269110	0					
ANR	6269233	Identifier	s		6269110	0					
ANR	6269234	Argument	"""'"""		6269110	1					
ANR	6269235	PrimaryExpression	"""'"""		6269110	0					
ANR	6269236	CallExpression	"strstr ( s , ""\\\\"" )"		6269110	1					
ANR	6269237	Callee	strstr		6269110	0					
ANR	6269238	Identifier	strstr		6269110	0					
ANR	6269239	ArgumentList	s		6269110	1					
ANR	6269240	Argument	s		6269110	0					
ANR	6269241	Identifier	s		6269110	0					
ANR	6269242	Argument	"""\\\\"""		6269110	1					
ANR	6269243	PrimaryExpression	"""\\\\"""		6269110	0					
ANR	6269244	CompoundStatement		22:43:618:618	6269110	1					
ANR	6269245	ReturnStatement	return NULL ;	145:3:3070:3081	6269110	0	True				
ANR	6269246	Identifier	NULL		6269110	0					
ANR	6269247	IdentifierDeclStatement	"char * res = r_sys_cmd_strf ( ""%s -compact '%s'"" , swift_demangle , s ) ;"	148:2:3153:3222	6269110	1	True				
ANR	6269248	IdentifierDecl	"* res = r_sys_cmd_strf ( ""%s -compact '%s'"" , swift_demangle , s )"		6269110	0					
ANR	6269249	IdentifierDeclType	char *		6269110	0					
ANR	6269250	Identifier	res		6269110	1					
ANR	6269251	AssignmentExpression	"* res = r_sys_cmd_strf ( ""%s -compact '%s'"" , swift_demangle , s )"		6269110	2		=			
ANR	6269252	Identifier	res		6269110	0					
ANR	6269253	CallExpression	"r_sys_cmd_strf ( ""%s -compact '%s'"" , swift_demangle , s )"		6269110	1					
ANR	6269254	Callee	r_sys_cmd_strf		6269110	0					
ANR	6269255	Identifier	r_sys_cmd_strf		6269110	0					
ANR	6269256	ArgumentList	"""%s -compact '%s'"""		6269110	1					
ANR	6269257	Argument	"""%s -compact '%s'"""		6269110	0					
ANR	6269258	PrimaryExpression	"""%s -compact '%s'"""		6269110	0					
ANR	6269259	Argument	swift_demangle		6269110	1					
ANR	6269260	Identifier	swift_demangle		6269110	0					
ANR	6269261	Argument	s		6269110	2					
ANR	6269262	Identifier	s		6269110	0					
ANR	6269263	IfStatement	if ( res && ! * res )		6269110	2					
ANR	6269264	Condition	res && ! * res	150:6:3230:3241	6269110	0	True				
ANR	6269265	AndExpression	res && ! * res		6269110	0		&&			
ANR	6269266	Identifier	res		6269110	0					
ANR	6269267	UnaryOperationExpression	! * res		6269110	1					
ANR	6269268	UnaryOperator	!		6269110	0					
ANR	6269269	UnaryOperationExpression	* res		6269110	1					
ANR	6269270	UnaryOperator	*		6269110	0					
ANR	6269271	Identifier	res		6269110	1					
ANR	6269272	CompoundStatement		29:20:815:815	6269110	1					
ANR	6269273	ExpressionStatement	free ( res )	151:3:3249:3259	6269110	0	True				
ANR	6269274	CallExpression	free ( res )		6269110	0					
ANR	6269275	Callee	free		6269110	0					
ANR	6269276	Identifier	free		6269110	0					
ANR	6269277	ArgumentList	res		6269110	1					
ANR	6269278	Argument	res		6269110	0					
ANR	6269279	Identifier	res		6269110	0					
ANR	6269280	ExpressionStatement	res = NULL	152:3:3264:3274	6269110	1	True				
ANR	6269281	AssignmentExpression	res = NULL		6269110	0		=			
ANR	6269282	Identifier	res		6269110	0					
ANR	6269283	Identifier	NULL		6269110	1					
ANR	6269284	ExpressionStatement	r_str_trim ( res )	154:2:3282:3298	6269110	3	True				
ANR	6269285	CallExpression	r_str_trim ( res )		6269110	0					
ANR	6269286	Callee	r_str_trim		6269110	0					
ANR	6269287	Identifier	r_str_trim		6269110	0					
ANR	6269288	ArgumentList	res		6269110	1					
ANR	6269289	Argument	res		6269110	0					
ANR	6269290	Identifier	res		6269110	0					
ANR	6269291	ReturnStatement	return res ;	155:2:3302:3312	6269110	4	True				
ANR	6269292	Identifier	res		6269110	0					
ANR	6269293	ReturnStatement	return NULL ;	157:1:3318:3329	6269110	4	True				
ANR	6269294	Identifier	NULL		6269110	0					
ANR	6269295	ReturnType	static char *		6269110	1					
ANR	6269296	Identifier	swift_demangle_cmd		6269110	2					
ANR	6269297	ParameterList	const char * s		6269110	3					
ANR	6269298	Parameter	const char * s	122:32:2413:2425	6269110	0	True				
ANR	6269299	ParameterType	const char *		6269110	0					
ANR	6269300	Identifier	s		6269110	1					
ANR	6269301	CFGEntryNode	ENTRY		6269110		True				
ANR	6269302	CFGExitNode	EXIT		6269110		True				
ANR	6269303	Symbol	strcmp		6269110						
ANR	6269304	Symbol	have_swift_demangle		6269110						
ANR	6269305	Symbol	res		6269110						
ANR	6269306	Symbol	s		6269110						
ANR	6269307	Symbol	NULL		6269110						
ANR	6269308	Symbol	swift_demangle		6269110						
ANR	6269309	Symbol	strstr		6269110						
ANR	6269310	Symbol	r_sys_cmd_strf		6269110						
ANR	6269311	Symbol	xcrun		6269110						
ANR	6269312	Symbol	r_file_path		6269110						
ANR	6269313	Symbol	* res		6269110						
ANR	6269314	Symbol	r_str_newf		6269110						
ANR	6269315	Function	swift_demangle_lib	160:0:3334:3831							
ANR	6269316	FunctionDef	swift_demangle_lib (const char * s)		6269315	0					
ANR	6269317	CompoundStatement		160:47:3381:3831	6269315	0					
ANR	6269318	Statement	static	162:1:3397:3402	6269315	0	True				
ANR	6269319	IdentifierDeclStatement	bool haveSwiftCore = false ;	162:8:3404:3430	6269315	1	True				
ANR	6269320	IdentifierDecl	haveSwiftCore = false		6269315	0					
ANR	6269321	IdentifierDeclType	bool		6269315	0					
ANR	6269322	Identifier	haveSwiftCore		6269315	1					
ANR	6269323	AssignmentExpression	haveSwiftCore = false		6269315	2		=			
ANR	6269324	Identifier	false		6269315	0					
ANR	6269325	Identifier	false		6269315	1					
ANR	6269326	Statement	static	163:1:3433:3438	6269315	2	True				
ANR	6269327	IdentifierDeclStatement	"char * ( * swift_demangle ) ( const char * sym , int symlen , void * out , int * outlen , int flags ) = NULL ;"	163:8:3440:3534	6269315	3	True				
ANR	6269328	IdentifierDecl	"* ( * swift_demangle ) ( const char * sym , int symlen , void * out , int * outlen , int flags ) = NULL"		6269315	0					
ANR	6269329	IdentifierDeclType	"char * ( * ) ( const char * sym , int symlen , void * out , int * outlen , int flags )"		6269315	0					
ANR	6269330	Identifier	swift_demangle		6269315	1					
ANR	6269331	Identifier	sym		6269315	2					
ANR	6269332	Identifier	out		6269315	3					
ANR	6269333	Identifier	outlen		6269315	4					
ANR	6269334	AssignmentExpression	"* ( * swift_demangle ) ( const char * sym , int symlen , void * out , int * outlen , int flags ) = NULL"		6269315	5		=			
ANR	6269335	Identifier	NULL		6269315	0					
ANR	6269336	Identifier	NULL		6269315	1					
ANR	6269337	IfStatement	if ( ! haveSwiftCore )		6269315	4					
ANR	6269338	Condition	! haveSwiftCore	164:5:3541:3554	6269315	0	True				
ANR	6269339	UnaryOperationExpression	! haveSwiftCore		6269315	0					
ANR	6269340	UnaryOperator	!		6269315	0					
ANR	6269341	Identifier	haveSwiftCore		6269315	1					
ANR	6269342	CompoundStatement		6:2:179:242	6269315	1					
ANR	6269343	IdentifierDeclStatement	"void * lib = r_lib_dl_open ( ""/usr/lib/swift/libswiftCore.dylib"" ) ;"	165:2:3561:3624	6269315	0	True				
ANR	6269344	IdentifierDecl	"* lib = r_lib_dl_open ( ""/usr/lib/swift/libswiftCore.dylib"" )"		6269315	0					
ANR	6269345	IdentifierDeclType	void *		6269315	0					
ANR	6269346	Identifier	lib		6269315	1					
ANR	6269347	AssignmentExpression	"* lib = r_lib_dl_open ( ""/usr/lib/swift/libswiftCore.dylib"" )"		6269315	2		=			
ANR	6269348	Identifier	lib		6269315	0					
ANR	6269349	CallExpression	"r_lib_dl_open ( ""/usr/lib/swift/libswiftCore.dylib"" )"		6269315	1					
ANR	6269350	Callee	r_lib_dl_open		6269315	0					
ANR	6269351	Identifier	r_lib_dl_open		6269315	0					
ANR	6269352	ArgumentList	"""/usr/lib/swift/libswiftCore.dylib"""		6269315	1					
ANR	6269353	Argument	"""/usr/lib/swift/libswiftCore.dylib"""		6269315	0					
ANR	6269354	PrimaryExpression	"""/usr/lib/swift/libswiftCore.dylib"""		6269315	0					
ANR	6269355	IfStatement	if ( lib )		6269315	1					
ANR	6269356	Condition	lib	166:6:3632:3634	6269315	0	True				
ANR	6269357	Identifier	lib		6269315	0					
ANR	6269358	CompoundStatement		7:11:255:255	6269315	1					
ANR	6269359	ExpressionStatement	"swift_demangle = r_lib_dl_sym ( lib , ""swift_demangle"" )"	167:3:3642:3695	6269315	0	True				
ANR	6269360	AssignmentExpression	"swift_demangle = r_lib_dl_sym ( lib , ""swift_demangle"" )"		6269315	0		=			
ANR	6269361	Identifier	swift_demangle		6269315	0					
ANR	6269362	CallExpression	"r_lib_dl_sym ( lib , ""swift_demangle"" )"		6269315	1					
ANR	6269363	Callee	r_lib_dl_sym		6269315	0					
ANR	6269364	Identifier	r_lib_dl_sym		6269315	0					
ANR	6269365	ArgumentList	lib		6269315	1					
ANR	6269366	Argument	lib		6269315	0					
ANR	6269367	Identifier	lib		6269315	0					
ANR	6269368	Argument	"""swift_demangle"""		6269315	1					
ANR	6269369	PrimaryExpression	"""swift_demangle"""		6269315	0					
ANR	6269370	ExpressionStatement	haveSwiftCore = true	169:2:3703:3723	6269315	2	True				
ANR	6269371	AssignmentExpression	haveSwiftCore = true		6269315	0		=			
ANR	6269372	Identifier	haveSwiftCore		6269315	0					
ANR	6269373	Identifier	true		6269315	1					
ANR	6269374	IfStatement	if ( swift_demangle )		6269315	5					
ANR	6269375	Condition	swift_demangle	171:5:3733:3746	6269315	0	True				
ANR	6269376	Identifier	swift_demangle		6269315	0					
ANR	6269377	CompoundStatement		12:21:367:367	6269315	1					
ANR	6269378	ReturnStatement	"return swift_demangle ( s , strlen ( s ) , NULL , NULL , 0 ) ;"	172:2:3753:3805	6269315	0	True				
ANR	6269379	CallExpression	"swift_demangle ( s , strlen ( s ) , NULL , NULL , 0 )"		6269315	0					
ANR	6269380	Callee	swift_demangle		6269315	0					
ANR	6269381	Identifier	swift_demangle		6269315	0					
ANR	6269382	ArgumentList	s		6269315	1					
ANR	6269383	Argument	s		6269315	0					
ANR	6269384	Identifier	s		6269315	0					
ANR	6269385	Argument	strlen ( s )		6269315	1					
ANR	6269386	CallExpression	strlen ( s )		6269315	0					
ANR	6269387	Callee	strlen		6269315	0					
ANR	6269388	Identifier	strlen		6269315	0					
ANR	6269389	ArgumentList	s		6269315	1					
ANR	6269390	Argument	s		6269315	0					
ANR	6269391	Identifier	s		6269315	0					
ANR	6269392	Argument	NULL		6269315	2					
ANR	6269393	Identifier	NULL		6269315	0					
ANR	6269394	Argument	NULL		6269315	3					
ANR	6269395	Identifier	NULL		6269315	0					
ANR	6269396	Argument	0		6269315	4					
ANR	6269397	PrimaryExpression	0		6269315	0					
ANR	6269398	ReturnStatement	return NULL ;	175:1:3818:3829	6269315	6	True				
ANR	6269399	Identifier	NULL		6269315	0					
ANR	6269400	ReturnType	static char *		6269315	1					
ANR	6269401	Identifier	swift_demangle_lib		6269315	2					
ANR	6269402	ParameterList	const char * s		6269315	3					
ANR	6269403	Parameter	const char * s	160:32:3366:3378	6269315	0	True				
ANR	6269404	ParameterType	const char *		6269315	0					
ANR	6269405	Identifier	s		6269315	1					
ANR	6269406	CFGEntryNode	ENTRY		6269315		True				
ANR	6269407	CFGExitNode	EXIT		6269315		True				
ANR	6269408	Symbol	r_lib_dl_open		6269315						
ANR	6269409	Symbol	strlen		6269315						
ANR	6269410	Symbol	s		6269315						
ANR	6269411	Symbol	haveSwiftCore		6269315						
ANR	6269412	Symbol	NULL		6269315						
ANR	6269413	Symbol	swift_demangle		6269315						
ANR	6269414	Symbol	lib		6269315						
ANR	6269415	Symbol	false		6269315						
ANR	6269416	Symbol	true		6269315						
ANR	6269417	Symbol	r_lib_dl_sym		6269315						
ANR	6269418	Function	r_bin_demangle_swift	178:0:3834:12317							
ANR	6269419	FunctionDef	"r_bin_demangle_swift (const char * s , bool syscmd)"		6269418	0					
ANR	6269420	CompoundStatement		178:61:3895:12317	6269418	0					
ANR	6269421	Statement	define	179:1:3898:3903	6269418	0	True				
ANR	6269422	Statement	STRCAT_BOUNDS	179:8:3905:3917	6269418	1	True				
ANR	6269423	Statement	(	179:21:3918:3918	6269418	2	True				
ANR	6269424	Statement	x	179:22:3919:3919	6269418	3	True				
ANR	6269425	Statement	)	179:23:3920:3920	6269418	4	True				
ANR	6269426	IfStatement	if ( ( ( x ) + 2 + strlen ( out ) ) > sizeof ( out ) )		6269418	5					
ANR	6269427	Condition	( ( x ) + 2 + strlen ( out ) ) > sizeof ( out )	179:29:3926:3964	6269418	0	True				
ANR	6269428	RelationalExpression	( ( x ) + 2 + strlen ( out ) ) > sizeof ( out )		6269418	0		>			
ANR	6269429	AdditiveExpression	( x ) + 2 + strlen ( out )		6269418	0		+			
ANR	6269430	CastExpression	( x ) + 2		6269418	0					
ANR	6269431	CastTarget	x		6269418	0					
ANR	6269432	UnaryOperationExpression	+ 2		6269418	1					
ANR	6269433	UnaryOperator	+		6269418	0					
ANR	6269434	PrimaryExpression	2		6269418	1					
ANR	6269435	CallExpression	strlen ( out )		6269418	1					
ANR	6269436	Callee	strlen		6269418	0					
ANR	6269437	Identifier	strlen		6269418	0					
ANR	6269438	ArgumentList	out		6269418	1					
ANR	6269439	Argument	out		6269418	0					
ANR	6269440	Identifier	out		6269418	0					
ANR	6269441	SizeofExpression	sizeof ( out )		6269418	1					
ANR	6269442	Sizeof	sizeof		6269418	0					
ANR	6269443	SizeofOperand	out		6269418	1					
ANR	6269444	BreakStatement	break ;	179:70:3967:3972	6269418	1	True				
ANR	6269445	IdentifierDeclStatement	char out [ 1024 ] ;	180:1:3975:3989	6269418	6	True				
ANR	6269446	IdentifierDecl	out [ 1024 ]		6269418	0					
ANR	6269447	IdentifierDeclType	char [ 1024 ]		6269418	0					
ANR	6269448	Identifier	out		6269418	1					
ANR	6269449	PrimaryExpression	1024		6269418	2					
ANR	6269450	IdentifierDeclStatement	"int i , len , is_generic = 0 ;"	181:1:3992:4018	6269418	7	True				
ANR	6269451	IdentifierDecl	i		6269418	0					
ANR	6269452	IdentifierDeclType	int		6269418	0					
ANR	6269453	Identifier	i		6269418	1					
ANR	6269454	IdentifierDecl	len		6269418	1					
ANR	6269455	IdentifierDeclType	int		6269418	0					
ANR	6269456	Identifier	len		6269418	1					
ANR	6269457	IdentifierDecl	is_generic = 0		6269418	2					
ANR	6269458	IdentifierDeclType	int		6269418	0					
ANR	6269459	Identifier	is_generic		6269418	1					
ANR	6269460	AssignmentExpression	is_generic = 0		6269418	2		=			
ANR	6269461	Identifier	is_generic		6269418	0					
ANR	6269462	PrimaryExpression	0		6269418	1					
ANR	6269463	IdentifierDeclStatement	int is_first = 1 ;	182:1:4021:4037	6269418	8	True				
ANR	6269464	IdentifierDecl	is_first = 1		6269418	0					
ANR	6269465	IdentifierDeclType	int		6269418	0					
ANR	6269466	Identifier	is_first		6269418	1					
ANR	6269467	AssignmentExpression	is_first = 1		6269418	2		=			
ANR	6269468	Identifier	is_first		6269418	0					
ANR	6269469	PrimaryExpression	1		6269418	1					
ANR	6269470	IdentifierDeclStatement	int is_last = 0 ;	183:1:4040:4055	6269418	9	True				
ANR	6269471	IdentifierDecl	is_last = 0		6269418	0					
ANR	6269472	IdentifierDeclType	int		6269418	0					
ANR	6269473	Identifier	is_last		6269418	1					
ANR	6269474	AssignmentExpression	is_last = 0		6269418	2		=			
ANR	6269475	Identifier	is_last		6269418	0					
ANR	6269476	PrimaryExpression	0		6269418	1					
ANR	6269477	IdentifierDeclStatement	int retmode = 0 ;	184:1:4058:4073	6269418	10	True				
ANR	6269478	IdentifierDecl	retmode = 0		6269418	0					
ANR	6269479	IdentifierDeclType	int		6269418	0					
ANR	6269480	Identifier	retmode		6269418	1					
ANR	6269481	AssignmentExpression	retmode = 0		6269418	2		=			
ANR	6269482	Identifier	retmode		6269418	0					
ANR	6269483	PrimaryExpression	0		6269418	1					
ANR	6269484	IfStatement	"if ( ! strncmp ( s , ""imp."" , 4 ) )"		6269418	11					
ANR	6269485	Condition	"! strncmp ( s , ""imp."" , 4 )"	185:5:4080:4102	6269418	0	True				
ANR	6269486	UnaryOperationExpression	"! strncmp ( s , ""imp."" , 4 )"		6269418	0					
ANR	6269487	UnaryOperator	!		6269418	0					
ANR	6269488	CallExpression	"strncmp ( s , ""imp."" , 4 )"		6269418	1					
ANR	6269489	Callee	strncmp		6269418	0					
ANR	6269490	Identifier	strncmp		6269418	0					
ANR	6269491	ArgumentList	s		6269418	1					
ANR	6269492	Argument	s		6269418	0					
ANR	6269493	Identifier	s		6269418	0					
ANR	6269494	Argument	"""imp."""		6269418	1					
ANR	6269495	PrimaryExpression	"""imp."""		6269418	0					
ANR	6269496	Argument	4		6269418	2					
ANR	6269497	PrimaryExpression	4		6269418	0					
ANR	6269498	CompoundStatement		8:30:209:209	6269418	1					
ANR	6269499	ExpressionStatement	s = s + 4	186:2:4109:4118	6269418	0	True				
ANR	6269500	AssignmentExpression	s = s + 4		6269418	0		=			
ANR	6269501	Identifier	s		6269418	0					
ANR	6269502	AdditiveExpression	s + 4		6269418	1		+			
ANR	6269503	Identifier	s		6269418	0					
ANR	6269504	PrimaryExpression	4		6269418	1					
ANR	6269505	IfStatement	"if ( ! strncmp ( s , ""reloc."" , 6 ) )"		6269418	12					
ANR	6269506	Condition	"! strncmp ( s , ""reloc."" , 6 )"	188:5:4128:4152	6269418	0	True				
ANR	6269507	UnaryOperationExpression	"! strncmp ( s , ""reloc."" , 6 )"		6269418	0					
ANR	6269508	UnaryOperator	!		6269418	0					
ANR	6269509	CallExpression	"strncmp ( s , ""reloc."" , 6 )"		6269418	1					
ANR	6269510	Callee	strncmp		6269418	0					
ANR	6269511	Identifier	strncmp		6269418	0					
ANR	6269512	ArgumentList	s		6269418	1					
ANR	6269513	Argument	s		6269418	0					
ANR	6269514	Identifier	s		6269418	0					
ANR	6269515	Argument	"""reloc."""		6269418	1					
ANR	6269516	PrimaryExpression	"""reloc."""		6269418	0					
ANR	6269517	Argument	6		6269418	2					
ANR	6269518	PrimaryExpression	6		6269418	0					
ANR	6269519	CompoundStatement		11:32:259:259	6269418	1					
ANR	6269520	ExpressionStatement	s = s + 6	189:2:4159:4168	6269418	0	True				
ANR	6269521	AssignmentExpression	s = s + 6		6269418	0		=			
ANR	6269522	Identifier	s		6269418	0					
ANR	6269523	AdditiveExpression	s + 6		6269418	1		+			
ANR	6269524	Identifier	s		6269418	0					
ANR	6269525	PrimaryExpression	6		6269418	1					
ANR	6269526	IfStatement	"if ( * s != 'T' && strncmp ( s , ""_T"" , 2 ) && strncmp ( s , ""__T"" , 3 ) )"		6269418	13					
ANR	6269527	Condition	"* s != 'T' && strncmp ( s , ""_T"" , 2 ) && strncmp ( s , ""__T"" , 3 )"	192:5:4179:4236	6269418	0	True				
ANR	6269528	AndExpression	"* s != 'T' && strncmp ( s , ""_T"" , 2 ) && strncmp ( s , ""__T"" , 3 )"		6269418	0		&&			
ANR	6269529	EqualityExpression	* s != 'T'		6269418	0		!=			
ANR	6269530	UnaryOperationExpression	* s		6269418	0					
ANR	6269531	UnaryOperator	*		6269418	0					
ANR	6269532	Identifier	s		6269418	1					
ANR	6269533	PrimaryExpression	'T'		6269418	1					
ANR	6269534	AndExpression	"strncmp ( s , ""_T"" , 2 ) && strncmp ( s , ""__T"" , 3 )"		6269418	1		&&			
ANR	6269535	CallExpression	"strncmp ( s , ""_T"" , 2 )"		6269418	0					
ANR	6269536	Callee	strncmp		6269418	0					
ANR	6269537	Identifier	strncmp		6269418	0					
ANR	6269538	ArgumentList	s		6269418	1					
ANR	6269539	Argument	s		6269418	0					
ANR	6269540	Identifier	s		6269418	0					
ANR	6269541	Argument	"""_T"""		6269418	1					
ANR	6269542	PrimaryExpression	"""_T"""		6269418	0					
ANR	6269543	Argument	2		6269418	2					
ANR	6269544	PrimaryExpression	2		6269418	0					
ANR	6269545	CallExpression	"strncmp ( s , ""__T"" , 3 )"		6269418	1					
ANR	6269546	Callee	strncmp		6269418	0					
ANR	6269547	Identifier	strncmp		6269418	0					
ANR	6269548	ArgumentList	s		6269418	1					
ANR	6269549	Argument	s		6269418	0					
ANR	6269550	Identifier	s		6269418	0					
ANR	6269551	Argument	"""__T"""		6269418	1					
ANR	6269552	PrimaryExpression	"""__T"""		6269418	0					
ANR	6269553	Argument	3		6269418	2					
ANR	6269554	PrimaryExpression	3		6269418	0					
ANR	6269555	CompoundStatement		15:65:343:343	6269418	1					
ANR	6269556	IfStatement	"if ( strncmp ( s , ""$s"" , 2 ) )"		6269418	0					
ANR	6269557	Condition	"strncmp ( s , ""$s"" , 2 )"	194:6:4273:4292	6269418	0	True				
ANR	6269558	CallExpression	"strncmp ( s , ""$s"" , 2 )"		6269418	0					
ANR	6269559	Callee	strncmp		6269418	0					
ANR	6269560	Identifier	strncmp		6269418	0					
ANR	6269561	ArgumentList	s		6269418	1					
ANR	6269562	Argument	s		6269418	0					
ANR	6269563	Identifier	s		6269418	0					
ANR	6269564	Argument	"""$s"""		6269418	1					
ANR	6269565	PrimaryExpression	"""$s"""		6269418	0					
ANR	6269566	Argument	2		6269418	2					
ANR	6269567	PrimaryExpression	2		6269418	0					
ANR	6269568	CompoundStatement		17:28:399:399	6269418	1					
ANR	6269569	ReturnStatement	return NULL ;	195:3:4300:4311	6269418	0	True				
ANR	6269570	Identifier	NULL		6269418	0					
ANR	6269571	IfStatement	"if ( ! strncmp ( s , ""__"" , 2 ) )"		6269418	14					
ANR	6269572	Condition	"! strncmp ( s , ""__"" , 2 )"	199:5:4326:4346	6269418	0	True				
ANR	6269573	UnaryOperationExpression	"! strncmp ( s , ""__"" , 2 )"		6269418	0					
ANR	6269574	UnaryOperator	!		6269418	0					
ANR	6269575	CallExpression	"strncmp ( s , ""__"" , 2 )"		6269418	1					
ANR	6269576	Callee	strncmp		6269418	0					
ANR	6269577	Identifier	strncmp		6269418	0					
ANR	6269578	ArgumentList	s		6269418	1					
ANR	6269579	Argument	s		6269418	0					
ANR	6269580	Identifier	s		6269418	0					
ANR	6269581	Argument	"""__"""		6269418	1					
ANR	6269582	PrimaryExpression	"""__"""		6269418	0					
ANR	6269583	Argument	2		6269418	2					
ANR	6269584	PrimaryExpression	2		6269418	0					
ANR	6269585	CompoundStatement		22:28:453:453	6269418	1					
ANR	6269586	ExpressionStatement	s = s + 2	200:2:4353:4362	6269418	0	True				
ANR	6269587	AssignmentExpression	s = s + 2		6269418	0		=			
ANR	6269588	Identifier	s		6269418	0					
ANR	6269589	AdditiveExpression	s + 2		6269418	1		+			
ANR	6269590	Identifier	s		6269418	0					
ANR	6269591	PrimaryExpression	2		6269418	1					
ANR	6269592	IdentifierDeclStatement	"const char * element [ ] = { ""module"" , ""class"" , ""method"" , NULL } ;"	203:1:4374:4438	6269418	15	True				
ANR	6269593	IdentifierDecl	"* element [ ] = { ""module"" , ""class"" , ""method"" , NULL }"		6269418	0					
ANR	6269594	IdentifierDeclType	const char * [ ]		6269418	0					
ANR	6269595	Identifier	element		6269418	1					
ANR	6269596	AssignmentExpression	"* element [ ] = { ""module"" , ""class"" , ""method"" , NULL }"		6269418	2		=			
ANR	6269597	Identifier	element		6269418	0					
ANR	6269598	InitializerList	"""module"""		6269418	1					
ANR	6269599	PrimaryExpression	"""module"""		6269418	0					
ANR	6269600	PrimaryExpression	"""class"""		6269418	1					
ANR	6269601	PrimaryExpression	"""method"""		6269418	2					
ANR	6269602	Identifier	NULL		6269418	3					
ANR	6269603	IdentifierDeclStatement	char * res = swift_demangle_lib ( s ) ;	207:1:4448:4482	6269418	16	True				
ANR	6269604	IdentifierDecl	* res = swift_demangle_lib ( s )		6269418	0					
ANR	6269605	IdentifierDeclType	char *		6269418	0					
ANR	6269606	Identifier	res		6269418	1					
ANR	6269607	AssignmentExpression	* res = swift_demangle_lib ( s )		6269418	2		=			
ANR	6269608	Identifier	res		6269418	0					
ANR	6269609	CallExpression	swift_demangle_lib ( s )		6269418	1					
ANR	6269610	Callee	swift_demangle_lib		6269418	0					
ANR	6269611	Identifier	swift_demangle_lib		6269418	0					
ANR	6269612	ArgumentList	s		6269418	1					
ANR	6269613	Argument	s		6269418	0					
ANR	6269614	Identifier	s		6269418	0					
ANR	6269615	IfStatement	if ( res )		6269418	17					
ANR	6269616	Condition	res	208:5:4489:4491	6269418	0	True				
ANR	6269617	Identifier	res		6269418	0					
ANR	6269618	CompoundStatement		31:10:598:598	6269418	1					
ANR	6269619	ReturnStatement	return res ;	209:2:4498:4508	6269418	0	True				
ANR	6269620	Identifier	res		6269418	0					
ANR	6269621	IdentifierDeclStatement	const char * attr = NULL ;	211:1:4514:4537	6269418	18	True				
ANR	6269622	IdentifierDecl	* attr = NULL		6269418	0					
ANR	6269623	IdentifierDeclType	const char *		6269418	0					
ANR	6269624	Identifier	attr		6269418	1					
ANR	6269625	AssignmentExpression	* attr = NULL		6269418	2		=			
ANR	6269626	Identifier	NULL		6269418	0					
ANR	6269627	Identifier	NULL		6269418	1					
ANR	6269628	IdentifierDeclStatement	const char * attr2 = NULL ;	212:1:4540:4564	6269418	19	True				
ANR	6269629	IdentifierDecl	* attr2 = NULL		6269418	0					
ANR	6269630	IdentifierDeclType	const char *		6269418	0					
ANR	6269631	Identifier	attr2		6269418	1					
ANR	6269632	AssignmentExpression	* attr2 = NULL		6269418	2		=			
ANR	6269633	Identifier	NULL		6269418	0					
ANR	6269634	Identifier	NULL		6269418	1					
ANR	6269635	IdentifierDeclStatement	"const char * q , * p = s ;"	213:1:4567:4588	6269418	20	True				
ANR	6269636	IdentifierDecl	* q		6269418	0					
ANR	6269637	IdentifierDeclType	const char *		6269418	0					
ANR	6269638	Identifier	q		6269418	1					
ANR	6269639	IdentifierDecl	* p = s		6269418	1					
ANR	6269640	IdentifierDeclType	const char *		6269418	0					
ANR	6269641	Identifier	p		6269418	1					
ANR	6269642	AssignmentExpression	* p = s		6269418	2		=			
ANR	6269643	Identifier	s		6269418	0					
ANR	6269644	Identifier	s		6269418	1					
ANR	6269645	IdentifierDeclStatement	const char * q_end = p + strlen ( p ) ;	214:1:4591:4625	6269418	21	True				
ANR	6269646	IdentifierDecl	* q_end = p + strlen ( p )		6269418	0					
ANR	6269647	IdentifierDeclType	const char *		6269418	0					
ANR	6269648	Identifier	q_end		6269418	1					
ANR	6269649	AssignmentExpression	* q_end = p + strlen ( p )		6269418	2		=			
ANR	6269650	Identifier	q_end		6269418	0					
ANR	6269651	AdditiveExpression	p + strlen ( p )		6269418	1		+			
ANR	6269652	Identifier	p		6269418	0					
ANR	6269653	CallExpression	strlen ( p )		6269418	1					
ANR	6269654	Callee	strlen		6269418	0					
ANR	6269655	Identifier	strlen		6269418	0					
ANR	6269656	ArgumentList	p		6269418	1					
ANR	6269657	Argument	p		6269418	0					
ANR	6269658	Identifier	p		6269418	0					
ANR	6269659	IdentifierDeclStatement	const char * q_start = p ;	215:1:4628:4651	6269418	22	True				
ANR	6269660	IdentifierDecl	* q_start = p		6269418	0					
ANR	6269661	IdentifierDeclType	const char *		6269418	0					
ANR	6269662	Identifier	q_start		6269418	1					
ANR	6269663	AssignmentExpression	* q_start = p		6269418	2		=			
ANR	6269664	Identifier	p		6269418	0					
ANR	6269665	Identifier	p		6269418	1					
ANR	6269666	IfStatement	"if ( strchr ( s , '\\'' ) || strchr ( s , ' ' ) )"		6269418	23					
ANR	6269667	Condition	"strchr ( s , '\\'' ) || strchr ( s , ' ' )"	217:5:4659:4693	6269418	0	True				
ANR	6269668	OrExpression	"strchr ( s , '\\'' ) || strchr ( s , ' ' )"		6269418	0		||			
ANR	6269669	CallExpression	"strchr ( s , '\\'' )"		6269418	0					
ANR	6269670	Callee	strchr		6269418	0					
ANR	6269671	Identifier	strchr		6269418	0					
ANR	6269672	ArgumentList	s		6269418	1					
ANR	6269673	Argument	s		6269418	0					
ANR	6269674	Identifier	s		6269418	0					
ANR	6269675	Argument	'\\''		6269418	1					
ANR	6269676	PrimaryExpression	'\\''		6269418	0					
ANR	6269677	CallExpression	"strchr ( s , ' ' )"		6269418	1					
ANR	6269678	Callee	strchr		6269418	0					
ANR	6269679	Identifier	strchr		6269418	0					
ANR	6269680	ArgumentList	s		6269418	1					
ANR	6269681	Argument	s		6269418	0					
ANR	6269682	Identifier	s		6269418	0					
ANR	6269683	Argument	' '		6269418	1					
ANR	6269684	PrimaryExpression	' '		6269418	0					
ANR	6269685	CompoundStatement		40:42:800:800	6269418	1					
ANR	6269686	ReturnStatement	return NULL ;	218:2:4700:4711	6269418	0	True				
ANR	6269687	Identifier	NULL		6269418	0					
ANR	6269688	IfStatement	if ( syscmd )		6269418	24					
ANR	6269689	Condition	syscmd	220:5:4721:4726	6269418	0	True				
ANR	6269690	Identifier	syscmd		6269418	0					
ANR	6269691	CompoundStatement		43:13:833:833	6269418	1					
ANR	6269692	ExpressionStatement	res = swift_demangle_cmd ( s )	221:2:4733:4761	6269418	0	True				
ANR	6269693	AssignmentExpression	res = swift_demangle_cmd ( s )		6269418	0		=			
ANR	6269694	Identifier	res		6269418	0					
ANR	6269695	CallExpression	swift_demangle_cmd ( s )		6269418	1					
ANR	6269696	Callee	swift_demangle_cmd		6269418	0					
ANR	6269697	Identifier	swift_demangle_cmd		6269418	0					
ANR	6269698	ArgumentList	s		6269418	1					
ANR	6269699	Argument	s		6269418	0					
ANR	6269700	Identifier	s		6269418	0					
ANR	6269701	IfStatement	if ( res )		6269418	1					
ANR	6269702	Condition	res	222:6:4769:4771	6269418	0	True				
ANR	6269703	Identifier	res		6269418	0					
ANR	6269704	CompoundStatement		45:11:878:878	6269418	1					
ANR	6269705	ReturnStatement	return res ;	223:3:4779:4789	6269418	0	True				
ANR	6269706	Identifier	res		6269418	0					
ANR	6269707	ExpressionStatement	out [ 0 ] = 0	227:1:4800:4810	6269418	25	True				
ANR	6269708	AssignmentExpression	out [ 0 ] = 0		6269418	0		=			
ANR	6269709	ArrayIndexing	out [ 0 ]		6269418	0					
ANR	6269710	Identifier	out		6269418	0					
ANR	6269711	PrimaryExpression	0		6269418	1					
ANR	6269712	PrimaryExpression	0		6269418	1					
ANR	6269713	IdentifierDeclStatement	const char * tail = NULL ;	229:1:4814:4837	6269418	26	True				
ANR	6269714	IdentifierDecl	* tail = NULL		6269418	0					
ANR	6269715	IdentifierDeclType	const char *		6269418	0					
ANR	6269716	Identifier	tail		6269418	1					
ANR	6269717	AssignmentExpression	* tail = NULL		6269418	2		=			
ANR	6269718	Identifier	NULL		6269418	0					
ANR	6269719	Identifier	NULL		6269418	1					
ANR	6269720	IfStatement	if ( p [ 0 ] )		6269418	27					
ANR	6269721	Condition	p [ 0 ]	230:5:4844:4847	6269418	0	True				
ANR	6269722	ArrayIndexing	p [ 0 ]		6269418	0					
ANR	6269723	Identifier	p		6269418	0					
ANR	6269724	PrimaryExpression	0		6269418	1					
ANR	6269725	CompoundStatement		53:11:954:954	6269418	1					
ANR	6269726	SwitchStatement	switch ( p [ 1 ] )		6269418	0					
ANR	6269727	Condition	p [ 1 ]	231:10:4862:4865	6269418	0	True				
ANR	6269728	ArrayIndexing	p [ 1 ]		6269418	0					
ANR	6269729	Identifier	p		6269418	0					
ANR	6269730	PrimaryExpression	1		6269418	1					
ANR	6269731	CompoundStatement		54:16:972:972	6269418	1					
ANR	6269732	Label	case 'W' :	232:2:4872:4880	6269418	0	True				
ANR	6269733	SwitchStatement	switch ( p [ 2 ] )		6269418	1					
ANR	6269734	Condition	p [ 2 ]	233:11:4893:4896	6269418	0	True				
ANR	6269735	ArrayIndexing	p [ 2 ]		6269418	0					
ANR	6269736	Identifier	p		6269418	0					
ANR	6269737	PrimaryExpression	2		6269418	1					
ANR	6269738	CompoundStatement		56:17:1003:1003	6269418	1					
ANR	6269739	Label	case 'a' :	234:3:4904:4912	6269418	0	True				
ANR	6269740	ExpressionStatement	"tail = ""..protocol"""	235:4:4918:4937	6269418	1	True				
ANR	6269741	AssignmentExpression	"tail = ""..protocol"""		6269418	0		=			
ANR	6269742	Identifier	tail		6269418	0					
ANR	6269743	PrimaryExpression	"""..protocol"""		6269418	1					
ANR	6269744	BreakStatement	break ;	236:4:4943:4948	6269418	2	True				
ANR	6269745	BreakStatement	break ;	238:3:4958:4963	6269418	2	True				
ANR	6269746	Label	case 'F' :	239:2:4967:4975	6269418	3	True				
ANR	6269747	SwitchStatement	switch ( p [ 2 ] )		6269418	4					
ANR	6269748	Condition	p [ 2 ]	240:11:4988:4991	6269418	0	True				
ANR	6269749	ArrayIndexing	p [ 2 ]		6269418	0					
ANR	6269750	Identifier	p		6269418	0					
ANR	6269751	PrimaryExpression	2		6269418	1					
ANR	6269752	CompoundStatement		63:17:1098:1098	6269418	1					
ANR	6269753	Label	case 'e' :	241:3:4999:5007	6269418	0	True				
ANR	6269754	ExpressionStatement	"tail = ""..extension"""	242:4:5013:5033	6269418	1	True				
ANR	6269755	AssignmentExpression	"tail = ""..extension"""		6269418	0		=			
ANR	6269756	Identifier	tail		6269418	0					
ANR	6269757	PrimaryExpression	"""..extension"""		6269418	1					
ANR	6269758	ExpressionStatement	p += 2	243:4:5039:5045	6269418	2	True				
ANR	6269759	AssignmentExpression	p += 2		6269418	0		+=			
ANR	6269760	Identifier	p		6269418	0					
ANR	6269761	PrimaryExpression	2		6269418	1					
ANR	6269762	BreakStatement	break ;	244:4:5051:5056	6269418	3	True				
ANR	6269763	BreakStatement	break ;	246:3:5066:5071	6269418	5	True				
ANR	6269764	Label	case 'M' :	247:2:5075:5083	6269418	6	True				
ANR	6269765	SwitchStatement	switch ( p [ 2 ] )		6269418	7					
ANR	6269766	Condition	p [ 2 ]	248:11:5096:5099	6269418	0	True				
ANR	6269767	ArrayIndexing	p [ 2 ]		6269418	0					
ANR	6269768	Identifier	p		6269418	0					
ANR	6269769	PrimaryExpression	2		6269418	1					
ANR	6269770	CompoundStatement		71:17:1206:1206	6269418	1					
ANR	6269771	Label	case 'a' :	249:3:5107:5115	6269418	0	True				
ANR	6269772	ExpressionStatement	"tail = ""..accessor.metadata"""	250:4:5121:5149	6269418	1	True				
ANR	6269773	AssignmentExpression	"tail = ""..accessor.metadata"""		6269418	0		=			
ANR	6269774	Identifier	tail		6269418	0					
ANR	6269775	PrimaryExpression	"""..accessor.metadata"""		6269418	1					
ANR	6269776	BreakStatement	break ;	251:4:5155:5160	6269418	2	True				
ANR	6269777	Label	case 'e' :	252:3:5165:5173	6269418	3	True				
ANR	6269778	ExpressionStatement	"tail = ""..override"""	253:4:5179:5198	6269418	4	True				
ANR	6269779	AssignmentExpression	"tail = ""..override"""		6269418	0		=			
ANR	6269780	Identifier	tail		6269418	0					
ANR	6269781	PrimaryExpression	"""..override"""		6269418	1					
ANR	6269782	BreakStatement	break ;	254:4:5204:5209	6269418	5	True				
ANR	6269783	Label	case 'm' :	255:3:5214:5222	6269418	6	True				
ANR	6269784	ExpressionStatement	"tail = ""..metaclass"""	256:4:5228:5248	6269418	7	True				
ANR	6269785	AssignmentExpression	"tail = ""..metaclass"""		6269418	0		=			
ANR	6269786	Identifier	tail		6269418	0					
ANR	6269787	PrimaryExpression	"""..metaclass"""		6269418	1					
ANR	6269788	BreakStatement	break ;	257:4:5254:5259	6269418	8	True				
ANR	6269789	Label	case 'L' :	258:3:5264:5272	6269418	9	True				
ANR	6269790	ExpressionStatement	"tail = ""..lazy.metadata"""	259:4:5278:5302	6269418	10	True				
ANR	6269791	AssignmentExpression	"tail = ""..lazy.metadata"""		6269418	0		=			
ANR	6269792	Identifier	tail		6269418	0					
ANR	6269793	PrimaryExpression	"""..lazy.metadata"""		6269418	1					
ANR	6269794	BreakStatement	break ;	260:4:5308:5313	6269418	11	True				
ANR	6269795	Label	default :	261:3:5318:5325	6269418	12	True				
ANR	6269796	Identifier	default		6269418	0					
ANR	6269797	ExpressionStatement	"tail = ""..metadata"""	262:4:5331:5350	6269418	13	True				
ANR	6269798	AssignmentExpression	"tail = ""..metadata"""		6269418	0		=			
ANR	6269799	Identifier	tail		6269418	0					
ANR	6269800	PrimaryExpression	"""..metadata"""		6269418	1					
ANR	6269801	BreakStatement	break ;	263:4:5356:5361	6269418	14	True				
ANR	6269802	BreakStatement	break ;	265:3:5371:5376	6269418	8	True				
ANR	6269803	Label	case 'I' :	266:2:5380:5388	6269418	9	True				
ANR	6269804	BreakStatement	break ;	268:3:5421:5426	6269418	10	True				
ANR	6269805	IfStatement	if ( tail )		6269418	28					
ANR	6269806	Condition	tail	271:5:5440:5443	6269418	0	True				
ANR	6269807	Identifier	tail		6269418	0					
ANR	6269808	CompoundStatement		94:11:1550:1550	6269418	1					
ANR	6269809	IfStatement	if ( * p )		6269418	0					
ANR	6269810	Condition	* p	272:6:5454:5455	6269418	0	True				
ANR	6269811	UnaryOperationExpression	* p		6269418	0					
ANR	6269812	UnaryOperator	*		6269418	0					
ANR	6269813	Identifier	p		6269418	1					
ANR	6269814	CompoundStatement		95:10:1562:1562	6269418	1					
ANR	6269815	ExpressionStatement	p ++	273:3:5463:5466	6269418	0	True				
ANR	6269816	PostIncDecOperationExpression	p ++		6269418	0					
ANR	6269817	Identifier	p		6269418	0					
ANR	6269818	IncDec	++		6269418	1					
ANR	6269819	ElseStatement	else		6269418	0					
ANR	6269820	CompoundStatement		98:8:1584:1584	6269418	0					
ANR	6269821	IfStatement	if ( * p && p [ 1 ] )		6269418	0					
ANR	6269822	Condition	* p && p [ 1 ]	276:6:5488:5497	6269418	0	True				
ANR	6269823	AndExpression	* p && p [ 1 ]		6269418	0		&&			
ANR	6269824	UnaryOperationExpression	* p		6269418	0					
ANR	6269825	UnaryOperator	*		6269418	0					
ANR	6269826	Identifier	p		6269418	1					
ANR	6269827	ArrayIndexing	p [ 1 ]		6269418	1					
ANR	6269828	Identifier	p		6269418	0					
ANR	6269829	PrimaryExpression	1		6269418	1					
ANR	6269830	CompoundStatement		99:18:1604:1604	6269418	1					
ANR	6269831	ExpressionStatement	p += 2	277:3:5505:5511	6269418	0	True				
ANR	6269832	AssignmentExpression	p += 2		6269418	0		+=			
ANR	6269833	Identifier	p		6269418	0					
ANR	6269834	PrimaryExpression	2		6269418	1					
ANR	6269835	ExpressionStatement	"q = getnum ( p , NULL )"	282:1:5530:5550	6269418	29	True				
ANR	6269836	AssignmentExpression	"q = getnum ( p , NULL )"		6269418	0		=			
ANR	6269837	Identifier	q		6269418	0					
ANR	6269838	CallExpression	"getnum ( p , NULL )"		6269418	1					
ANR	6269839	Callee	getnum		6269418	0					
ANR	6269840	Identifier	getnum		6269418	0					
ANR	6269841	ArgumentList	p		6269418	1					
ANR	6269842	Argument	p		6269418	0					
ANR	6269843	Identifier	p		6269418	0					
ANR	6269844	Argument	NULL		6269418	1					
ANR	6269845	Identifier	NULL		6269418	0					
ANR	6269846	IfStatement	if ( IS_DIGIT ( * p ) || * p == 'v' || * p == 'I' || * p == 'o' || * p == 'T' || * p == 'V' || * p == 'M' || * p == 'C' || * p == 'F' || * p == 'W' )		6269418	30					
ANR	6269847	Condition	IS_DIGIT ( * p ) || * p == 'v' || * p == 'I' || * p == 'o' || * p == 'T' || * p == 'V' || * p == 'M' || * p == 'C' || * p == 'F' || * p == 'W'	285:5:5575:5704	6269418	0	True				
ANR	6269848	OrExpression	IS_DIGIT ( * p ) || * p == 'v' || * p == 'I' || * p == 'o' || * p == 'T' || * p == 'V' || * p == 'M' || * p == 'C' || * p == 'F' || * p == 'W'		6269418	0		||			
ANR	6269849	CallExpression	IS_DIGIT ( * p )		6269418	0					
ANR	6269850	Callee	IS_DIGIT		6269418	0					
ANR	6269851	Identifier	IS_DIGIT		6269418	0					
ANR	6269852	ArgumentList	* p		6269418	1					
ANR	6269853	Argument	* p		6269418	0					
ANR	6269854	UnaryOperationExpression	* p		6269418	0					
ANR	6269855	UnaryOperator	*		6269418	0					
ANR	6269856	Identifier	p		6269418	1					
ANR	6269857	OrExpression	* p == 'v' || * p == 'I' || * p == 'o' || * p == 'T' || * p == 'V' || * p == 'M' || * p == 'C' || * p == 'F' || * p == 'W'		6269418	1		||			
ANR	6269858	EqualityExpression	* p == 'v'		6269418	0		==			
ANR	6269859	UnaryOperationExpression	* p		6269418	0					
ANR	6269860	UnaryOperator	*		6269418	0					
ANR	6269861	Identifier	p		6269418	1					
ANR	6269862	PrimaryExpression	'v'		6269418	1					
ANR	6269863	OrExpression	* p == 'I' || * p == 'o' || * p == 'T' || * p == 'V' || * p == 'M' || * p == 'C' || * p == 'F' || * p == 'W'		6269418	1		||			
ANR	6269864	EqualityExpression	* p == 'I'		6269418	0		==			
ANR	6269865	UnaryOperationExpression	* p		6269418	0					
ANR	6269866	UnaryOperator	*		6269418	0					
ANR	6269867	Identifier	p		6269418	1					
ANR	6269868	PrimaryExpression	'I'		6269418	1					
ANR	6269869	OrExpression	* p == 'o' || * p == 'T' || * p == 'V' || * p == 'M' || * p == 'C' || * p == 'F' || * p == 'W'		6269418	1		||			
ANR	6269870	EqualityExpression	* p == 'o'		6269418	0		==			
ANR	6269871	UnaryOperationExpression	* p		6269418	0					
ANR	6269872	UnaryOperator	*		6269418	0					
ANR	6269873	Identifier	p		6269418	1					
ANR	6269874	PrimaryExpression	'o'		6269418	1					
ANR	6269875	OrExpression	* p == 'T' || * p == 'V' || * p == 'M' || * p == 'C' || * p == 'F' || * p == 'W'		6269418	1		||			
ANR	6269876	EqualityExpression	* p == 'T'		6269418	0		==			
ANR	6269877	UnaryOperationExpression	* p		6269418	0					
ANR	6269878	UnaryOperator	*		6269418	0					
ANR	6269879	Identifier	p		6269418	1					
ANR	6269880	PrimaryExpression	'T'		6269418	1					
ANR	6269881	OrExpression	* p == 'V' || * p == 'M' || * p == 'C' || * p == 'F' || * p == 'W'		6269418	1		||			
ANR	6269882	EqualityExpression	* p == 'V'		6269418	0		==			
ANR	6269883	UnaryOperationExpression	* p		6269418	0					
ANR	6269884	UnaryOperator	*		6269418	0					
ANR	6269885	Identifier	p		6269418	1					
ANR	6269886	PrimaryExpression	'V'		6269418	1					
ANR	6269887	OrExpression	* p == 'M' || * p == 'C' || * p == 'F' || * p == 'W'		6269418	1		||			
ANR	6269888	EqualityExpression	* p == 'M'		6269418	0		==			
ANR	6269889	UnaryOperationExpression	* p		6269418	0					
ANR	6269890	UnaryOperator	*		6269418	0					
ANR	6269891	Identifier	p		6269418	1					
ANR	6269892	PrimaryExpression	'M'		6269418	1					
ANR	6269893	OrExpression	* p == 'C' || * p == 'F' || * p == 'W'		6269418	1		||			
ANR	6269894	EqualityExpression	* p == 'C'		6269418	0		==			
ANR	6269895	UnaryOperationExpression	* p		6269418	0					
ANR	6269896	UnaryOperator	*		6269418	0					
ANR	6269897	Identifier	p		6269418	1					
ANR	6269898	PrimaryExpression	'C'		6269418	1					
ANR	6269899	OrExpression	* p == 'F' || * p == 'W'		6269418	1		||			
ANR	6269900	EqualityExpression	* p == 'F'		6269418	0		==			
ANR	6269901	UnaryOperationExpression	* p		6269418	0					
ANR	6269902	UnaryOperator	*		6269418	0					
ANR	6269903	Identifier	p		6269418	1					
ANR	6269904	PrimaryExpression	'F'		6269418	1					
ANR	6269905	EqualityExpression	* p == 'W'		6269418	1		==			
ANR	6269906	UnaryOperationExpression	* p		6269418	0					
ANR	6269907	UnaryOperator	*		6269418	0					
ANR	6269908	Identifier	p		6269418	1					
ANR	6269909	PrimaryExpression	'W'		6269418	1					
ANR	6269910	CompoundStatement		108:137:1811:1811	6269418	1					
ANR	6269911	IfStatement	"if ( ! strncmp ( p + 1 , ""SS"" , 2 ) )"		6269418	0					
ANR	6269912	Condition	"! strncmp ( p + 1 , ""SS"" , 2 )"	286:6:5715:5737	6269418	0	True				
ANR	6269913	UnaryOperationExpression	"! strncmp ( p + 1 , ""SS"" , 2 )"		6269418	0					
ANR	6269914	UnaryOperator	!		6269418	0					
ANR	6269915	CallExpression	"strncmp ( p + 1 , ""SS"" , 2 )"		6269418	1					
ANR	6269916	Callee	strncmp		6269418	0					
ANR	6269917	Identifier	strncmp		6269418	0					
ANR	6269918	ArgumentList	p + 1		6269418	1					
ANR	6269919	Argument	p + 1		6269418	0					
ANR	6269920	AdditiveExpression	p + 1		6269418	0		+			
ANR	6269921	Identifier	p		6269418	0					
ANR	6269922	PrimaryExpression	1		6269418	1					
ANR	6269923	Argument	"""SS"""		6269418	1					
ANR	6269924	PrimaryExpression	"""SS"""		6269418	0					
ANR	6269925	Argument	2		6269418	2					
ANR	6269926	PrimaryExpression	2		6269418	0					
ANR	6269927	CompoundStatement		109:31:1844:1844	6269418	1					
ANR	6269928	ExpressionStatement	"strcat ( out , ""Swift.String.init ("" )"	287:3:5745:5780	6269418	0	True				
ANR	6269929	CallExpression	"strcat ( out , ""Swift.String.init ("" )"		6269418	0					
ANR	6269930	Callee	strcat		6269418	0					
ANR	6269931	Identifier	strcat		6269418	0					
ANR	6269932	ArgumentList	out		6269418	1					
ANR	6269933	Argument	out		6269418	0					
ANR	6269934	Identifier	out		6269418	0					
ANR	6269935	Argument	"""Swift.String.init ("""		6269418	1					
ANR	6269936	PrimaryExpression	"""Swift.String.init ("""		6269418	0					
ANR	6269937	ExpressionStatement	p += 3	288:3:5785:5791	6269418	1	True				
ANR	6269938	AssignmentExpression	p += 3		6269418	0		+=			
ANR	6269939	Identifier	p		6269418	0					
ANR	6269940	PrimaryExpression	3		6269418	1					
ANR	6269941	IfStatement	"if ( ! strncmp ( p , ""vdv"" , 3 ) )"		6269418	1					
ANR	6269942	Condition	"! strncmp ( p , ""vdv"" , 3 )"	290:6:5803:5824	6269418	0	True				
ANR	6269943	UnaryOperationExpression	"! strncmp ( p , ""vdv"" , 3 )"		6269418	0					
ANR	6269944	UnaryOperator	!		6269418	0					
ANR	6269945	CallExpression	"strncmp ( p , ""vdv"" , 3 )"		6269418	1					
ANR	6269946	Callee	strncmp		6269418	0					
ANR	6269947	Identifier	strncmp		6269418	0					
ANR	6269948	ArgumentList	p		6269418	1					
ANR	6269949	Argument	p		6269418	0					
ANR	6269950	Identifier	p		6269418	0					
ANR	6269951	Argument	"""vdv"""		6269418	1					
ANR	6269952	PrimaryExpression	"""vdv"""		6269418	0					
ANR	6269953	Argument	3		6269418	2					
ANR	6269954	PrimaryExpression	3		6269418	0					
ANR	6269955	CompoundStatement		113:30:1931:1931	6269418	1					
ANR	6269956	ExpressionStatement	"tail = ""..field"""	291:3:5832:5848	6269418	0	True				
ANR	6269957	AssignmentExpression	"tail = ""..field"""		6269418	0		=			
ANR	6269958	Identifier	tail		6269418	0					
ANR	6269959	PrimaryExpression	"""..field"""		6269418	1					
ANR	6269960	ExpressionStatement	p += 3	292:3:5853:5859	6269418	1	True				
ANR	6269961	AssignmentExpression	p += 3		6269418	0		+=			
ANR	6269962	Identifier	p		6269418	0					
ANR	6269963	PrimaryExpression	3		6269418	1					
ANR	6269964	IfStatement	"if ( ! strncmp ( p , ""oFC"" , 3 ) )"		6269418	2					
ANR	6269965	Condition	"! strncmp ( p , ""oFC"" , 3 )"	294:6:5871:5892	6269418	0	True				
ANR	6269966	UnaryOperationExpression	"! strncmp ( p , ""oFC"" , 3 )"		6269418	0					
ANR	6269967	UnaryOperator	!		6269418	0					
ANR	6269968	CallExpression	"strncmp ( p , ""oFC"" , 3 )"		6269418	1					
ANR	6269969	Callee	strncmp		6269418	0					
ANR	6269970	Identifier	strncmp		6269418	0					
ANR	6269971	ArgumentList	p		6269418	1					
ANR	6269972	Argument	p		6269418	0					
ANR	6269973	Identifier	p		6269418	0					
ANR	6269974	Argument	"""oFC"""		6269418	1					
ANR	6269975	PrimaryExpression	"""oFC"""		6269418	0					
ANR	6269976	Argument	3		6269418	2					
ANR	6269977	PrimaryExpression	3		6269418	0					
ANR	6269978	CompoundStatement		117:30:1999:1999	6269418	1					
ANR	6269979	ExpressionStatement	"tail = ""..init.witnesstable"""	295:3:5900:5928	6269418	0	True				
ANR	6269980	AssignmentExpression	"tail = ""..init.witnesstable"""		6269418	0		=			
ANR	6269981	Identifier	tail		6269418	0					
ANR	6269982	PrimaryExpression	"""..init.witnesstable"""		6269418	1					
ANR	6269983	ExpressionStatement	p += 4	296:3:5933:5939	6269418	1	True				
ANR	6269984	AssignmentExpression	p += 4		6269418	0		+=			
ANR	6269985	Identifier	p		6269418	0					
ANR	6269986	PrimaryExpression	4		6269418	1					
ANR	6269987	IfStatement	"if ( ! strncmp ( p + 1 , ""C"" , 2 ) )"		6269418	3					
ANR	6269988	Condition	"! strncmp ( p + 1 , ""C"" , 2 )"	299:6:5957:5978	6269418	0	True				
ANR	6269989	UnaryOperationExpression	"! strncmp ( p + 1 , ""C"" , 2 )"		6269418	0					
ANR	6269990	UnaryOperator	!		6269418	0					
ANR	6269991	CallExpression	"strncmp ( p + 1 , ""C"" , 2 )"		6269418	1					
ANR	6269992	Callee	strncmp		6269418	0					
ANR	6269993	Identifier	strncmp		6269418	0					
ANR	6269994	ArgumentList	p + 1		6269418	1					
ANR	6269995	Argument	p + 1		6269418	0					
ANR	6269996	AdditiveExpression	p + 1		6269418	0		+			
ANR	6269997	Identifier	p		6269418	0					
ANR	6269998	PrimaryExpression	1		6269418	1					
ANR	6269999	Argument	"""C"""		6269418	1					
ANR	6270000	PrimaryExpression	"""C"""		6269418	0					
ANR	6270001	Argument	2		6269418	2					
ANR	6270002	PrimaryExpression	2		6269418	0					
ANR	6270003	CompoundStatement		122:30:2085:2085	6269418	1					
ANR	6270004	ExpressionStatement	"strcat ( out , ""class "" )"	300:3:5986:6008	6269418	0	True				
ANR	6270005	CallExpression	"strcat ( out , ""class "" )"		6269418	0					
ANR	6270006	Callee	strcat		6269418	0					
ANR	6270007	Identifier	strcat		6269418	0					
ANR	6270008	ArgumentList	out		6269418	1					
ANR	6270009	Argument	out		6269418	0					
ANR	6270010	Identifier	out		6269418	0					
ANR	6270011	Argument	"""class """		6269418	1					
ANR	6270012	PrimaryExpression	"""class """		6269418	0					
ANR	6270013	ExpressionStatement	p += 3	301:3:6013:6019	6269418	1	True				
ANR	6270014	AssignmentExpression	p += 3		6269418	0		+=			
ANR	6270015	Identifier	p		6269418	0					
ANR	6270016	PrimaryExpression	3		6269418	1					
ANR	6270017	ExpressionStatement	"q = getnum ( q , & len )"	304:2:6034:6054	6269418	4	True				
ANR	6270018	AssignmentExpression	"q = getnum ( q , & len )"		6269418	0		=			
ANR	6270019	Identifier	q		6269418	0					
ANR	6270020	CallExpression	"getnum ( q , & len )"		6269418	1					
ANR	6270021	Callee	getnum		6269418	0					
ANR	6270022	Identifier	getnum		6269418	0					
ANR	6270023	ArgumentList	q		6269418	1					
ANR	6270024	Argument	q		6269418	0					
ANR	6270025	Identifier	q		6269418	0					
ANR	6270026	Argument	& len		6269418	1					
ANR	6270027	UnaryOperationExpression	& len		6269418	0					
ANR	6270028	UnaryOperator	&		6269418	0					
ANR	6270029	Identifier	len		6269418	1					
ANR	6270030	ExpressionStatement	q = numpos ( p )	306:2:6059:6073	6269418	5	True				
ANR	6270031	AssignmentExpression	q = numpos ( p )		6269418	0		=			
ANR	6270032	Identifier	q		6269418	0					
ANR	6270033	CallExpression	numpos ( p )		6269418	1					
ANR	6270034	Callee	numpos		6269418	0					
ANR	6270035	Identifier	numpos		6269418	0					
ANR	6270036	ArgumentList	p		6269418	1					
ANR	6270037	Argument	p		6269418	0					
ANR	6270038	Identifier	p		6269418	0					
ANR	6270039	ForStatement	"for ( i = 0 , len = 1 ; len && q < q_end ; q += len , i ++ )"		6269418	6					
ANR	6270040	ForInit	"i = 0 , len = 1 ;"	308:7:6127:6141	6269418	0	True				
ANR	6270041	Expression	"i = 0 , len = 1"		6269418	0					
ANR	6270042	AssignmentExpression	i = 0		6269418	0		=			
ANR	6270043	Identifier	i		6269418	0					
ANR	6270044	PrimaryExpression	0		6269418	1					
ANR	6270045	AssignmentExpression	len = 1		6269418	1		=			
ANR	6270046	Identifier	len		6269418	0					
ANR	6270047	PrimaryExpression	1		6269418	1					
ANR	6270048	Condition	len && q < q_end	308:23:6143:6158	6269418	1	True				
ANR	6270049	AndExpression	len && q < q_end		6269418	0		&&			
ANR	6270050	Identifier	len		6269418	0					
ANR	6270051	RelationalExpression	q < q_end		6269418	1		<			
ANR	6270052	Identifier	q		6269418	0					
ANR	6270053	Identifier	q_end		6269418	1					
ANR	6270054	Expression	"q += len , i ++"	308:41:6161:6173	6269418	2	True				
ANR	6270055	AssignmentExpression	q += len		6269418	0		+=			
ANR	6270056	Identifier	q		6269418	0					
ANR	6270057	Identifier	len		6269418	1					
ANR	6270058	PostIncDecOperationExpression	i ++		6269418	1					
ANR	6270059	Identifier	i		6269418	0					
ANR	6270060	IncDec	++		6269418	1					
ANR	6270061	CompoundStatement		140:3:2402:2438	6269418	3					
ANR	6270062	IfStatement	if ( * q == 'P' )		6269418	0					
ANR	6270063	Condition	* q == 'P'	309:7:6185:6193	6269418	0	True				
ANR	6270064	EqualityExpression	* q == 'P'		6269418	0		==			
ANR	6270065	UnaryOperationExpression	* q		6269418	0					
ANR	6270066	UnaryOperator	*		6269418	0					
ANR	6270067	Identifier	q		6269418	1					
ANR	6270068	PrimaryExpression	'P'		6269418	1					
ANR	6270069	CompoundStatement		132:18:2300:2300	6269418	1					
ANR	6270070	ExpressionStatement	q ++	311:4:6229:6232	6269418	0	True				
ANR	6270071	PostIncDecOperationExpression	q ++		6269418	0					
ANR	6270072	Identifier	q		6269418	0					
ANR	6270073	IncDec	++		6269418	1					
ANR	6270074	ExpressionStatement	"q = getnum ( q , & len )"	313:3:6242:6262	6269418	1	True				
ANR	6270075	AssignmentExpression	"q = getnum ( q , & len )"		6269418	0		=			
ANR	6270076	Identifier	q		6269418	0					
ANR	6270077	CallExpression	"getnum ( q , & len )"		6269418	1					
ANR	6270078	Callee	getnum		6269418	0					
ANR	6270079	Identifier	getnum		6269418	0					
ANR	6270080	ArgumentList	q		6269418	1					
ANR	6270081	Argument	q		6269418	0					
ANR	6270082	Identifier	q		6269418	0					
ANR	6270083	Argument	& len		6269418	1					
ANR	6270084	UnaryOperationExpression	& len		6269418	0					
ANR	6270085	UnaryOperator	&		6269418	0					
ANR	6270086	Identifier	len		6269418	1					
ANR	6270087	IfStatement	if ( ! len )		6269418	2					
ANR	6270088	Condition	! len	314:7:6271:6274	6269418	0	True				
ANR	6270089	UnaryOperationExpression	! len		6269418	0					
ANR	6270090	UnaryOperator	!		6269418	0					
ANR	6270091	Identifier	len		6269418	1					
ANR	6270092	CompoundStatement		137:13:2381:2381	6269418	1					
ANR	6270093	BreakStatement	break ;	315:4:6283:6288	6269418	0	True				
ANR	6270094	IdentifierDeclStatement	"const char * str = getstring ( q , len ) ;"	317:3:6298:6334	6269418	3	True				
ANR	6270095	IdentifierDecl	"* str = getstring ( q , len )"		6269418	0					
ANR	6270096	IdentifierDeclType	const char *		6269418	0					
ANR	6270097	Identifier	str		6269418	1					
ANR	6270098	AssignmentExpression	"* str = getstring ( q , len )"		6269418	2		=			
ANR	6270099	Identifier	str		6269418	0					
ANR	6270100	CallExpression	"getstring ( q , len )"		6269418	1					
ANR	6270101	Callee	getstring		6269418	0					
ANR	6270102	Identifier	getstring		6269418	0					
ANR	6270103	ArgumentList	q		6269418	1					
ANR	6270104	Argument	q		6269418	0					
ANR	6270105	Identifier	q		6269418	0					
ANR	6270106	Argument	len		6269418	1					
ANR	6270107	Identifier	len		6269418	0					
ANR	6270108	IfStatement	"if ( len == 2 && ! strcmp ( str , ""ee"" ) )"		6269418	4					
ANR	6270109	Condition	"len == 2 && ! strcmp ( str , ""ee"" )"	318:7:6343:6373	6269418	0	True				
ANR	6270110	AndExpression	"len == 2 && ! strcmp ( str , ""ee"" )"		6269418	0		&&			
ANR	6270111	EqualityExpression	len == 2		6269418	0		==			
ANR	6270112	Identifier	len		6269418	0					
ANR	6270113	PrimaryExpression	2		6269418	1					
ANR	6270114	UnaryOperationExpression	"! strcmp ( str , ""ee"" )"		6269418	1					
ANR	6270115	UnaryOperator	!		6269418	0					
ANR	6270116	CallExpression	"strcmp ( str , ""ee"" )"		6269418	1					
ANR	6270117	Callee	strcmp		6269418	0					
ANR	6270118	Identifier	strcmp		6269418	0					
ANR	6270119	ArgumentList	str		6269418	1					
ANR	6270120	Argument	str		6269418	0					
ANR	6270121	Identifier	str		6269418	0					
ANR	6270122	Argument	"""ee"""		6269418	1					
ANR	6270123	PrimaryExpression	"""ee"""		6269418	0					
ANR	6270124	CompoundStatement		141:40:2480:2480	6269418	1					
ANR	6270125	ExpressionStatement	"strcat ( out , ""Swift"" )"	319:4:6382:6403	6269418	0	True				
ANR	6270126	CallExpression	"strcat ( out , ""Swift"" )"		6269418	0					
ANR	6270127	Callee	strcat		6269418	0					
ANR	6270128	Identifier	strcat		6269418	0					
ANR	6270129	ArgumentList	out		6269418	1					
ANR	6270130	Argument	out		6269418	0					
ANR	6270131	Identifier	out		6269418	0					
ANR	6270132	Argument	"""Swift"""		6269418	1					
ANR	6270133	PrimaryExpression	"""Swift"""		6269418	0					
ANR	6270134	ElseStatement	else		6269418	0					
ANR	6270135	CompoundStatement		143:10:2519:2519	6269418	0					
ANR	6270136	ExpressionStatement	"printf ( ""%s %d %s\\n"" , element [ i ] , len , getstring ( q , len ) )"	322:4:6427:6491	6269418	0	True				
ANR	6270137	CallExpression	"printf ( ""%s %d %s\\n"" , element [ i ] , len , getstring ( q , len ) )"		6269418	0					
ANR	6270138	Callee	printf		6269418	0					
ANR	6270139	Identifier	printf		6269418	0					
ANR	6270140	ArgumentList	"""%s %d %s\\n"""		6269418	1					
ANR	6270141	Argument	"""%s %d %s\\n"""		6269418	0					
ANR	6270142	PrimaryExpression	"""%s %d %s\\n"""		6269418	0					
ANR	6270143	Argument	element [ i ]		6269418	1					
ANR	6270144	ArrayIndexing	element [ i ]		6269418	0					
ANR	6270145	Identifier	element		6269418	0					
ANR	6270146	Identifier	i		6269418	1					
ANR	6270147	Argument	len		6269418	2					
ANR	6270148	Identifier	len		6269418	0					
ANR	6270149	Argument	"getstring ( q , len )"		6269418	3					
ANR	6270150	CallExpression	"getstring ( q , len )"		6269418	0					
ANR	6270151	Callee	getstring		6269418	0					
ANR	6270152	Identifier	getstring		6269418	0					
ANR	6270153	ArgumentList	q		6269418	1					
ANR	6270154	Argument	q		6269418	0					
ANR	6270155	Identifier	q		6269418	0					
ANR	6270156	Argument	len		6269418	1					
ANR	6270157	Identifier	len		6269418	0					
ANR	6270158	IfStatement	if ( i && * out )		6269418	1					
ANR	6270159	Condition	i && * out	326:8:6527:6535	6269418	0	True				
ANR	6270160	AndExpression	i && * out		6269418	0		&&			
ANR	6270161	Identifier	i		6269418	0					
ANR	6270162	UnaryOperationExpression	* out		6269418	1					
ANR	6270163	UnaryOperator	*		6269418	0					
ANR	6270164	Identifier	out		6269418	1					
ANR	6270165	CompoundStatement		149:19:2642:2642	6269418	1					
ANR	6270166	ExpressionStatement	"strcat ( out , ""."" )"	327:5:6545:6562	6269418	0	True				
ANR	6270167	CallExpression	"strcat ( out , ""."" )"		6269418	0					
ANR	6270168	Callee	strcat		6269418	0					
ANR	6270169	Identifier	strcat		6269418	0					
ANR	6270170	ArgumentList	out		6269418	1					
ANR	6270171	Argument	out		6269418	0					
ANR	6270172	Identifier	out		6269418	0					
ANR	6270173	Argument	"""."""		6269418	1					
ANR	6270174	PrimaryExpression	"""."""		6269418	0					
ANR	6270175	ExpressionStatement	STRCAT_BOUNDS ( len )	329:4:6574:6593	6269418	2	True				
ANR	6270176	CallExpression	STRCAT_BOUNDS ( len )		6269418	0					
ANR	6270177	Callee	STRCAT_BOUNDS		6269418	0					
ANR	6270178	Identifier	STRCAT_BOUNDS		6269418	0					
ANR	6270179	ArgumentList	len		6269418	1					
ANR	6270180	Argument	len		6269418	0					
ANR	6270181	Identifier	len		6269418	0					
ANR	6270182	ExpressionStatement	"len = R_MIN ( len , strlen ( q ) )"	330:4:6599:6628	6269418	3	True				
ANR	6270183	AssignmentExpression	"len = R_MIN ( len , strlen ( q ) )"		6269418	0		=			
ANR	6270184	Identifier	len		6269418	0					
ANR	6270185	CallExpression	"R_MIN ( len , strlen ( q ) )"		6269418	1					
ANR	6270186	Callee	R_MIN		6269418	0					
ANR	6270187	Identifier	R_MIN		6269418	0					
ANR	6270188	ArgumentList	len		6269418	1					
ANR	6270189	Argument	len		6269418	0					
ANR	6270190	Identifier	len		6269418	0					
ANR	6270191	Argument	strlen ( q )		6269418	1					
ANR	6270192	CallExpression	strlen ( q )		6269418	0					
ANR	6270193	Callee	strlen		6269418	0					
ANR	6270194	Identifier	strlen		6269418	0					
ANR	6270195	ArgumentList	q		6269418	1					
ANR	6270196	Argument	q		6269418	0					
ANR	6270197	Identifier	q		6269418	0					
ANR	6270198	ExpressionStatement	"strcat ( out , getstring ( q , len ) )"	331:4:6634:6666	6269418	4	True				
ANR	6270199	CallExpression	"strcat ( out , getstring ( q , len ) )"		6269418	0					
ANR	6270200	Callee	strcat		6269418	0					
ANR	6270201	Identifier	strcat		6269418	0					
ANR	6270202	ArgumentList	out		6269418	1					
ANR	6270203	Argument	out		6269418	0					
ANR	6270204	Identifier	out		6269418	0					
ANR	6270205	Argument	"getstring ( q , len )"		6269418	1					
ANR	6270206	CallExpression	"getstring ( q , len )"		6269418	0					
ANR	6270207	Callee	getstring		6269418	0					
ANR	6270208	Identifier	getstring		6269418	0					
ANR	6270209	ArgumentList	q		6269418	1					
ANR	6270210	Argument	q		6269418	0					
ANR	6270211	Identifier	q		6269418	0					
ANR	6270212	Argument	len		6269418	1					
ANR	6270213	Identifier	len		6269418	0					
ANR	6270214	IfStatement	if ( q > q_end )		6269418	7					
ANR	6270215	Condition	q > q_end	334:6:6683:6691	6269418	0	True				
ANR	6270216	RelationalExpression	q > q_end		6269418	0		>			
ANR	6270217	Identifier	q		6269418	0					
ANR	6270218	Identifier	q_end		6269418	1					
ANR	6270219	CompoundStatement		157:17:2798:2798	6269418	1					
ANR	6270220	ReturnStatement	return 0 ;	335:3:6699:6707	6269418	0	True				
ANR	6270221	PrimaryExpression	0		6269418	0					
ANR	6270222	ExpressionStatement	"p = resolve ( flags , q , & attr )"	337:2:6715:6744	6269418	8	True				
ANR	6270223	AssignmentExpression	"p = resolve ( flags , q , & attr )"		6269418	0		=			
ANR	6270224	Identifier	p		6269418	0					
ANR	6270225	CallExpression	"resolve ( flags , q , & attr )"		6269418	1					
ANR	6270226	Callee	resolve		6269418	0					
ANR	6270227	Identifier	resolve		6269418	0					
ANR	6270228	ArgumentList	flags		6269418	1					
ANR	6270229	Argument	flags		6269418	0					
ANR	6270230	Identifier	flags		6269418	0					
ANR	6270231	Argument	q		6269418	1					
ANR	6270232	Identifier	q		6269418	0					
ANR	6270233	Argument	& attr		6269418	2					
ANR	6270234	UnaryOperationExpression	& attr		6269418	0					
ANR	6270235	UnaryOperator	&		6269418	0					
ANR	6270236	Identifier	attr		6269418	1					
ANR	6270237	IfStatement	if ( ! p && ( ( * q == 'U' ) || ( * q == 'R' ) ) )		6269418	9					
ANR	6270238	Condition	! p && ( ( * q == 'U' ) || ( * q == 'R' ) )	338:6:6752:6785	6269418	0	True				
ANR	6270239	AndExpression	! p && ( ( * q == 'U' ) || ( * q == 'R' ) )		6269418	0		&&			
ANR	6270240	UnaryOperationExpression	! p		6269418	0					
ANR	6270241	UnaryOperator	!		6269418	0					
ANR	6270242	Identifier	p		6269418	1					
ANR	6270243	OrExpression	( * q == 'U' ) || ( * q == 'R' )		6269418	1		||			
ANR	6270244	EqualityExpression	* q == 'U'		6269418	0		==			
ANR	6270245	UnaryOperationExpression	* q		6269418	0					
ANR	6270246	UnaryOperator	*		6269418	0					
ANR	6270247	Identifier	q		6269418	1					
ANR	6270248	PrimaryExpression	'U'		6269418	1					
ANR	6270249	EqualityExpression	* q == 'R'		6269418	1		==			
ANR	6270250	UnaryOperationExpression	* q		6269418	0					
ANR	6270251	UnaryOperator	*		6269418	0					
ANR	6270252	Identifier	q		6269418	1					
ANR	6270253	PrimaryExpression	'R'		6269418	1					
ANR	6270254	CompoundStatement		161:42:2892:2892	6269418	1					
ANR	6270255	ExpressionStatement	"p = resolve ( metas , q , & attr )"	339:3:6793:6822	6269418	0	True				
ANR	6270256	AssignmentExpression	"p = resolve ( metas , q , & attr )"		6269418	0		=			
ANR	6270257	Identifier	p		6269418	0					
ANR	6270258	CallExpression	"resolve ( metas , q , & attr )"		6269418	1					
ANR	6270259	Callee	resolve		6269418	0					
ANR	6270260	Identifier	resolve		6269418	0					
ANR	6270261	ArgumentList	metas		6269418	1					
ANR	6270262	Argument	metas		6269418	0					
ANR	6270263	Identifier	metas		6269418	0					
ANR	6270264	Argument	q		6269418	1					
ANR	6270265	Identifier	q		6269418	0					
ANR	6270266	Argument	& attr		6269418	2					
ANR	6270267	UnaryOperationExpression	& attr		6269418	0					
ANR	6270268	UnaryOperator	&		6269418	0					
ANR	6270269	Identifier	attr		6269418	1					
ANR	6270270	IfStatement	if ( attr && * q == 'R' )		6269418	1					
ANR	6270271	Condition	attr && * q == 'R'	340:7:6831:6847	6269418	0	True				
ANR	6270272	AndExpression	attr && * q == 'R'		6269418	0		&&			
ANR	6270273	Identifier	attr		6269418	0					
ANR	6270274	EqualityExpression	* q == 'R'		6269418	1		==			
ANR	6270275	UnaryOperationExpression	* q		6269418	0					
ANR	6270276	UnaryOperator	*		6269418	0					
ANR	6270277	Identifier	q		6269418	1					
ANR	6270278	PrimaryExpression	'R'		6269418	1					
ANR	6270279	CompoundStatement		163:26:2954:2954	6269418	1					
ANR	6270280	ExpressionStatement	attr = NULL	341:4:6856:6867	6269418	0	True				
ANR	6270281	AssignmentExpression	attr = NULL		6269418	0		=			
ANR	6270282	Identifier	attr		6269418	0					
ANR	6270283	Identifier	NULL		6269418	1					
ANR	6270284	ExpressionStatement	q += 3	342:4:6873:6879	6269418	1	True				
ANR	6270285	AssignmentExpression	q += 3		6269418	0		+=			
ANR	6270286	Identifier	q		6269418	0					
ANR	6270287	PrimaryExpression	3		6269418	1					
ANR	6270288	ElseStatement	else		6269418	0					
ANR	6270289	CompoundStatement		168:10:3054:3054	6269418	0					
ANR	6270290	IfStatement	if ( attr )		6269418	10					
ANR	6270291	Condition	attr	351:6:7041:7044	6269418	0	True				
ANR	6270292	Identifier	attr		6269418	0					
ANR	6270293	CompoundStatement		176:3:3172:3188	6269418	1					
ANR	6270294	IdentifierDeclStatement	int len = 0 ;	352:3:7052:7063	6269418	0	True				
ANR	6270295	IdentifierDecl	len = 0		6269418	0					
ANR	6270296	IdentifierDeclType	int		6269418	0					
ANR	6270297	Identifier	len		6269418	1					
ANR	6270298	AssignmentExpression	len = 0		6269418	2		=			
ANR	6270299	Identifier	len		6269418	0					
ANR	6270300	PrimaryExpression	0		6269418	1					
ANR	6270301	IdentifierDeclStatement	const char * name ;	353:3:7068:7084	6269418	1	True				
ANR	6270302	IdentifierDecl	* name		6269418	0					
ANR	6270303	IdentifierDeclType	const char *		6269418	0					
ANR	6270304	Identifier	name		6269418	1					
ANR	6270305	ExpressionStatement	"resolve ( types , q , & attr )"	355:3:7127:7152	6269418	2	True				
ANR	6270306	CallExpression	"resolve ( types , q , & attr )"		6269418	0					
ANR	6270307	Callee	resolve		6269418	0					
ANR	6270308	Identifier	resolve		6269418	0					
ANR	6270309	ArgumentList	types		6269418	1					
ANR	6270310	Argument	types		6269418	0					
ANR	6270311	Identifier	types		6269418	0					
ANR	6270312	Argument	q		6269418	1					
ANR	6270313	Identifier	q		6269418	0					
ANR	6270314	Argument	& attr		6269418	2					
ANR	6270315	UnaryOperationExpression	& attr		6269418	0					
ANR	6270316	UnaryOperator	&		6269418	0					
ANR	6270317	Identifier	attr		6269418	1					
ANR	6270318	ExpressionStatement	"q = getnum ( q + 1 , & len )"	358:3:7196:7220	6269418	3	True				
ANR	6270319	AssignmentExpression	"q = getnum ( q + 1 , & len )"		6269418	0		=			
ANR	6270320	Identifier	q		6269418	0					
ANR	6270321	CallExpression	"getnum ( q + 1 , & len )"		6269418	1					
ANR	6270322	Callee	getnum		6269418	0					
ANR	6270323	Identifier	getnum		6269418	0					
ANR	6270324	ArgumentList	q + 1		6269418	1					
ANR	6270325	Argument	q + 1		6269418	0					
ANR	6270326	AdditiveExpression	q + 1		6269418	0		+			
ANR	6270327	Identifier	q		6269418	0					
ANR	6270328	PrimaryExpression	1		6269418	1					
ANR	6270329	Argument	& len		6269418	1					
ANR	6270330	UnaryOperationExpression	& len		6269418	0					
ANR	6270331	UnaryOperator	&		6269418	0					
ANR	6270332	Identifier	len		6269418	1					
ANR	6270333	ExpressionStatement	"name = getstring ( q , len )"	359:3:7225:7250	6269418	4	True				
ANR	6270334	AssignmentExpression	"name = getstring ( q , len )"		6269418	0		=			
ANR	6270335	Identifier	name		6269418	0					
ANR	6270336	CallExpression	"getstring ( q , len )"		6269418	1					
ANR	6270337	Callee	getstring		6269418	0					
ANR	6270338	Identifier	getstring		6269418	0					
ANR	6270339	ArgumentList	q		6269418	1					
ANR	6270340	Argument	q		6269418	0					
ANR	6270341	Identifier	q		6269418	0					
ANR	6270342	Argument	len		6269418	1					
ANR	6270343	Identifier	len		6269418	0					
ANR	6270344	IfStatement	if ( name && * name )		6269418	5					
ANR	6270345	Condition	name && * name	361:7:7265:7277	6269418	0	True				
ANR	6270346	AndExpression	name && * name		6269418	0		&&			
ANR	6270347	Identifier	name		6269418	0					
ANR	6270348	UnaryOperationExpression	* name		6269418	1					
ANR	6270349	UnaryOperator	*		6269418	0					
ANR	6270350	Identifier	name		6269418	1					
ANR	6270351	CompoundStatement		184:22:3384:3384	6269418	1					
ANR	6270352	ExpressionStatement	"printf ( ""Field Name: %s\\n"" , name )"	362:4:7286:7319	6269418	0	True				
ANR	6270353	CallExpression	"printf ( ""Field Name: %s\\n"" , name )"		6269418	0					
ANR	6270354	Callee	printf		6269418	0					
ANR	6270355	Identifier	printf		6269418	0					
ANR	6270356	ArgumentList	"""Field Name: %s\\n"""		6269418	1					
ANR	6270357	Argument	"""Field Name: %s\\n"""		6269418	0					
ANR	6270358	PrimaryExpression	"""Field Name: %s\\n"""		6269418	0					
ANR	6270359	Argument	name		6269418	1					
ANR	6270360	Identifier	name		6269418	0					
ANR	6270361	IfStatement	if ( len < strlen ( q ) )		6269418	6					
ANR	6270362	Condition	len < strlen ( q )	365:7:7340:7355	6269418	0	True				
ANR	6270363	RelationalExpression	len < strlen ( q )		6269418	0		<			
ANR	6270364	Identifier	len		6269418	0					
ANR	6270365	CallExpression	strlen ( q )		6269418	1					
ANR	6270366	Callee	strlen		6269418	0					
ANR	6270367	Identifier	strlen		6269418	0					
ANR	6270368	ArgumentList	q		6269418	1					
ANR	6270369	Argument	q		6269418	0					
ANR	6270370	Identifier	q		6269418	0					
ANR	6270371	CompoundStatement		188:25:3462:3462	6269418	1					
ANR	6270372	ExpressionStatement	"resolve ( types , q + len , & attr2 )"	366:4:7364:7396	6269418	0	True				
ANR	6270373	CallExpression	"resolve ( types , q + len , & attr2 )"		6269418	0					
ANR	6270374	Callee	resolve		6269418	0					
ANR	6270375	Identifier	resolve		6269418	0					
ANR	6270376	ArgumentList	types		6269418	1					
ANR	6270377	Argument	types		6269418	0					
ANR	6270378	Identifier	types		6269418	0					
ANR	6270379	Argument	q + len		6269418	1					
ANR	6270380	AdditiveExpression	q + len		6269418	0		+			
ANR	6270381	Identifier	q		6269418	0					
ANR	6270382	Identifier	len		6269418	1					
ANR	6270383	Argument	& attr2		6269418	2					
ANR	6270384	UnaryOperationExpression	& attr2		6269418	0					
ANR	6270385	UnaryOperator	&		6269418	0					
ANR	6270386	Identifier	attr2		6269418	1					
ANR	6270387	ElseStatement	else		6269418	0					
ANR	6270388	CompoundStatement		190:10:3512:3512	6269418	0					
ANR	6270389	ExpressionStatement	"resolve ( types , q , & attr2 )"	368:4:7414:7440	6269418	0	True				
ANR	6270390	CallExpression	"resolve ( types , q , & attr2 )"		6269418	0					
ANR	6270391	Callee	resolve		6269418	0					
ANR	6270392	Identifier	resolve		6269418	0					
ANR	6270393	ArgumentList	types		6269418	1					
ANR	6270394	Argument	types		6269418	0					
ANR	6270395	Identifier	types		6269418	0					
ANR	6270396	Argument	q		6269418	1					
ANR	6270397	Identifier	q		6269418	0					
ANR	6270398	Argument	& attr2		6269418	2					
ANR	6270399	UnaryOperationExpression	& attr2		6269418	0					
ANR	6270400	UnaryOperator	&		6269418	0					
ANR	6270401	Identifier	attr2		6269418	1					
ANR	6270402	DoStatement	do		6269418	7					
ANR	6270403	CompoundStatement		195:6:3599:3599	6269418	0					
ANR	6270404	IfStatement	if ( name && * name )		6269418	0					
ANR	6270405	Condition	name && * name	373:8:7505:7517	6269418	0	True				
ANR	6270406	AndExpression	name && * name		6269418	0		&&			
ANR	6270407	Identifier	name		6269418	0					
ANR	6270408	UnaryOperationExpression	* name		6269418	1					
ANR	6270409	UnaryOperator	*		6269418	0					
ANR	6270410	Identifier	name		6269418	1					
ANR	6270411	CompoundStatement		196:23:3624:3624	6269418	1					
ANR	6270412	ExpressionStatement	"strcat ( out , ""."" )"	374:5:7527:7544	6269418	0	True				
ANR	6270413	CallExpression	"strcat ( out , ""."" )"		6269418	0					
ANR	6270414	Callee	strcat		6269418	0					
ANR	6270415	Identifier	strcat		6269418	0					
ANR	6270416	ArgumentList	out		6269418	1					
ANR	6270417	Argument	out		6269418	0					
ANR	6270418	Identifier	out		6269418	0					
ANR	6270419	Argument	"""."""		6269418	1					
ANR	6270420	PrimaryExpression	"""."""		6269418	0					
ANR	6270421	ExpressionStatement	STRCAT_BOUNDS ( strlen ( name ) )	375:5:7551:7580	6269418	1	True				
ANR	6270422	CallExpression	STRCAT_BOUNDS ( strlen ( name ) )		6269418	0					
ANR	6270423	Callee	STRCAT_BOUNDS		6269418	0					
ANR	6270424	Identifier	STRCAT_BOUNDS		6269418	0					
ANR	6270425	ArgumentList	strlen ( name )		6269418	1					
ANR	6270426	Argument	strlen ( name )		6269418	0					
ANR	6270427	CallExpression	strlen ( name )		6269418	0					
ANR	6270428	Callee	strlen		6269418	0					
ANR	6270429	Identifier	strlen		6269418	0					
ANR	6270430	ArgumentList	name		6269418	1					
ANR	6270431	Argument	name		6269418	0					
ANR	6270432	Identifier	name		6269418	0					
ANR	6270433	ExpressionStatement	"strcat ( out , name )"	376:5:7587:7605	6269418	2	True				
ANR	6270434	CallExpression	"strcat ( out , name )"		6269418	0					
ANR	6270435	Callee	strcat		6269418	0					
ANR	6270436	Identifier	strcat		6269418	0					
ANR	6270437	ArgumentList	out		6269418	1					
ANR	6270438	Argument	out		6269418	0					
ANR	6270439	Identifier	out		6269418	0					
ANR	6270440	Argument	name		6269418	1					
ANR	6270441	Identifier	name		6269418	0					
ANR	6270442	IfStatement	if ( attr && * attr )		6269418	1					
ANR	6270443	Condition	attr && * attr	378:8:7621:7633	6269418	0	True				
ANR	6270444	AndExpression	attr && * attr		6269418	0		&&			
ANR	6270445	Identifier	attr		6269418	0					
ANR	6270446	UnaryOperationExpression	* attr		6269418	1					
ANR	6270447	UnaryOperator	*		6269418	0					
ANR	6270448	Identifier	attr		6269418	1					
ANR	6270449	CompoundStatement		201:23:3740:3740	6269418	1					
ANR	6270450	ExpressionStatement	"strcat ( out , ""."" )"	379:5:7643:7660	6269418	0	True				
ANR	6270451	CallExpression	"strcat ( out , ""."" )"		6269418	0					
ANR	6270452	Callee	strcat		6269418	0					
ANR	6270453	Identifier	strcat		6269418	0					
ANR	6270454	ArgumentList	out		6269418	1					
ANR	6270455	Argument	out		6269418	0					
ANR	6270456	Identifier	out		6269418	0					
ANR	6270457	Argument	"""."""		6269418	1					
ANR	6270458	PrimaryExpression	"""."""		6269418	0					
ANR	6270459	ExpressionStatement	STRCAT_BOUNDS ( strlen ( attr ) )	380:5:7667:7696	6269418	1	True				
ANR	6270460	CallExpression	STRCAT_BOUNDS ( strlen ( attr ) )		6269418	0					
ANR	6270461	Callee	STRCAT_BOUNDS		6269418	0					
ANR	6270462	Identifier	STRCAT_BOUNDS		6269418	0					
ANR	6270463	ArgumentList	strlen ( attr )		6269418	1					
ANR	6270464	Argument	strlen ( attr )		6269418	0					
ANR	6270465	CallExpression	strlen ( attr )		6269418	0					
ANR	6270466	Callee	strlen		6269418	0					
ANR	6270467	Identifier	strlen		6269418	0					
ANR	6270468	ArgumentList	attr		6269418	1					
ANR	6270469	Argument	attr		6269418	0					
ANR	6270470	Identifier	attr		6269418	0					
ANR	6270471	ExpressionStatement	"strcat ( out , attr )"	381:5:7703:7721	6269418	2	True				
ANR	6270472	CallExpression	"strcat ( out , attr )"		6269418	0					
ANR	6270473	Callee	strcat		6269418	0					
ANR	6270474	Identifier	strcat		6269418	0					
ANR	6270475	ArgumentList	out		6269418	1					
ANR	6270476	Argument	out		6269418	0					
ANR	6270477	Identifier	out		6269418	0					
ANR	6270478	Argument	attr		6269418	1					
ANR	6270479	Identifier	attr		6269418	0					
ANR	6270480	IfStatement	if ( attr2 && * attr2 )		6269418	2					
ANR	6270481	Condition	attr2 && * attr2	383:8:7737:7751	6269418	0	True				
ANR	6270482	AndExpression	attr2 && * attr2		6269418	0		&&			
ANR	6270483	Identifier	attr2		6269418	0					
ANR	6270484	UnaryOperationExpression	* attr2		6269418	1					
ANR	6270485	UnaryOperator	*		6269418	0					
ANR	6270486	Identifier	attr2		6269418	1					
ANR	6270487	CompoundStatement		206:25:3858:3858	6269418	1					
ANR	6270488	ExpressionStatement	"strcat ( out , ""__"" )"	384:5:7761:7779	6269418	0	True				
ANR	6270489	CallExpression	"strcat ( out , ""__"" )"		6269418	0					
ANR	6270490	Callee	strcat		6269418	0					
ANR	6270491	Identifier	strcat		6269418	0					
ANR	6270492	ArgumentList	out		6269418	1					
ANR	6270493	Argument	out		6269418	0					
ANR	6270494	Identifier	out		6269418	0					
ANR	6270495	Argument	"""__"""		6269418	1					
ANR	6270496	PrimaryExpression	"""__"""		6269418	0					
ANR	6270497	ExpressionStatement	STRCAT_BOUNDS ( strlen ( attr2 ) )	385:5:7786:7816	6269418	1	True				
ANR	6270498	CallExpression	STRCAT_BOUNDS ( strlen ( attr2 ) )		6269418	0					
ANR	6270499	Callee	STRCAT_BOUNDS		6269418	0					
ANR	6270500	Identifier	STRCAT_BOUNDS		6269418	0					
ANR	6270501	ArgumentList	strlen ( attr2 )		6269418	1					
ANR	6270502	Argument	strlen ( attr2 )		6269418	0					
ANR	6270503	CallExpression	strlen ( attr2 )		6269418	0					
ANR	6270504	Callee	strlen		6269418	0					
ANR	6270505	Identifier	strlen		6269418	0					
ANR	6270506	ArgumentList	attr2		6269418	1					
ANR	6270507	Argument	attr2		6269418	0					
ANR	6270508	Identifier	attr2		6269418	0					
ANR	6270509	ExpressionStatement	"strcat ( out , attr2 )"	386:5:7823:7842	6269418	2	True				
ANR	6270510	CallExpression	"strcat ( out , attr2 )"		6269418	0					
ANR	6270511	Callee	strcat		6269418	0					
ANR	6270512	Identifier	strcat		6269418	0					
ANR	6270513	ArgumentList	out		6269418	1					
ANR	6270514	Argument	out		6269418	0					
ANR	6270515	Identifier	out		6269418	0					
ANR	6270516	Argument	attr2		6269418	1					
ANR	6270517	Identifier	attr2		6269418	0					
ANR	6270518	Condition	0	388:12:7862:7862	6269418	1	True				
ANR	6270519	PrimaryExpression	0		6269418	0					
ANR	6270520	IfStatement	if ( * q == '_' )		6269418	8					
ANR	6270521	Condition	* q == '_'	389:7:7873:7881	6269418	0	True				
ANR	6270522	EqualityExpression	* q == '_'		6269418	0		==			
ANR	6270523	UnaryOperationExpression	* q		6269418	0					
ANR	6270524	UnaryOperator	*		6269418	0					
ANR	6270525	Identifier	q		6269418	1					
ANR	6270526	PrimaryExpression	'_'		6269418	1					
ANR	6270527	CompoundStatement		212:18:3988:3988	6269418	1					
ANR	6270528	ExpressionStatement	"strcat ( out , "" -> ()"" )"	390:4:7890:7912	6269418	0	True				
ANR	6270529	CallExpression	"strcat ( out , "" -> ()"" )"		6269418	0					
ANR	6270530	Callee	strcat		6269418	0					
ANR	6270531	Identifier	strcat		6269418	0					
ANR	6270532	ArgumentList	out		6269418	1					
ANR	6270533	Argument	out		6269418	0					
ANR	6270534	Identifier	out		6269418	0					
ANR	6270535	Argument	""" -> ()"""		6269418	1					
ANR	6270536	PrimaryExpression	""" -> ()"""		6269418	0					
ANR	6270537	ElseStatement	else		6269418	0					
ANR	6270538	CompoundStatement		215:9:4032:4032	6269418	0					
ANR	6270539	ForStatement	for ( i = 0 ; q && q < q_end && q >= q_start ; i ++ )		6269418	0					
ANR	6270540	ForInit	i = 0 ;	395:8:8000:8005	6269418	0	True				
ANR	6270541	AssignmentExpression	i = 0		6269418	0		=			
ANR	6270542	Identifier	i		6269418	0					
ANR	6270543	PrimaryExpression	0		6269418	1					
ANR	6270544	Condition	q && q < q_end && q >= q_start	395:15:8007:8036	6269418	1	True				
ANR	6270545	AndExpression	q && q < q_end && q >= q_start		6269418	0		&&			
ANR	6270546	Identifier	q		6269418	0					
ANR	6270547	AndExpression	q < q_end && q >= q_start		6269418	1		&&			
ANR	6270548	RelationalExpression	q < q_end		6269418	0		<			
ANR	6270549	Identifier	q		6269418	0					
ANR	6270550	Identifier	q_end		6269418	1					
ANR	6270551	RelationalExpression	q >= q_start		6269418	1		>=			
ANR	6270552	Identifier	q		6269418	0					
ANR	6270553	Identifier	q_start		6269418	1					
ANR	6270554	PostIncDecOperationExpression	i ++	395:47:8039:8041	6269418	2	True				
ANR	6270555	Identifier	i		6269418	0					
ANR	6270556	IncDec	++		6269418	1					
ANR	6270557	CompoundStatement		218:52:4148:4148	6269418	3					
ANR	6270558	IfStatement	if ( * q == 'f' )		6269418	0					
ANR	6270559	Condition	* q == 'f'	396:8:8054:8062	6269418	0	True				
ANR	6270560	EqualityExpression	* q == 'f'		6269418	0		==			
ANR	6270561	UnaryOperationExpression	* q		6269418	0					
ANR	6270562	UnaryOperator	*		6269418	0					
ANR	6270563	Identifier	q		6269418	1					
ANR	6270564	PrimaryExpression	'f'		6269418	1					
ANR	6270565	CompoundStatement		219:19:4169:4169	6269418	1					
ANR	6270566	ExpressionStatement	q ++	397:5:8072:8075	6269418	0	True				
ANR	6270567	PostIncDecOperationExpression	q ++		6269418	0					
ANR	6270568	Identifier	q		6269418	0					
ANR	6270569	IncDec	++		6269418	1					
ANR	6270570	SwitchStatement	switch ( * q )		6269418	1					
ANR	6270571	Condition	* q	399:12:8095:8096	6269418	0	True				
ANR	6270572	UnaryOperationExpression	* q		6269418	0					
ANR	6270573	UnaryOperator	*		6269418	0					
ANR	6270574	Identifier	q		6269418	1					
ANR	6270575	CompoundStatement		222:16:4203:4203	6269418	1					
ANR	6270576	Label	case 's' :	400:4:8105:8113	6269418	0	True				
ANR	6270577	CompoundStatement		227:6:4291:4325	6269418	1					
ANR	6270578	IdentifierDeclStatement	int n = 0 ;	402:6:8128:8137	6269418	0	True				
ANR	6270579	IdentifierDecl	n = 0		6269418	0					
ANR	6270580	IdentifierDeclType	int		6269418	0					
ANR	6270581	Identifier	n		6269418	1					
ANR	6270582	AssignmentExpression	n = 0		6269418	2		=			
ANR	6270583	Identifier	n		6269418	0					
ANR	6270584	PrimaryExpression	0		6269418	1					
ANR	6270585	IdentifierDeclStatement	"const char * Q = getnum ( q + 1 , & n ) ;"	403:6:8145:8179	6269418	1	True				
ANR	6270586	IdentifierDecl	"* Q = getnum ( q + 1 , & n )"		6269418	0					
ANR	6270587	IdentifierDeclType	const char *		6269418	0					
ANR	6270588	Identifier	Q		6269418	1					
ANR	6270589	AssignmentExpression	"* Q = getnum ( q + 1 , & n )"		6269418	2		=			
ANR	6270590	Identifier	Q		6269418	0					
ANR	6270591	CallExpression	"getnum ( q + 1 , & n )"		6269418	1					
ANR	6270592	Callee	getnum		6269418	0					
ANR	6270593	Identifier	getnum		6269418	0					
ANR	6270594	ArgumentList	q + 1		6269418	1					
ANR	6270595	Argument	q + 1		6269418	0					
ANR	6270596	AdditiveExpression	q + 1		6269418	0		+			
ANR	6270597	Identifier	q		6269418	0					
ANR	6270598	PrimaryExpression	1		6269418	1					
ANR	6270599	Argument	& n		6269418	1					
ANR	6270600	UnaryOperationExpression	& n		6269418	0					
ANR	6270601	UnaryOperator	&		6269418	0					
ANR	6270602	Identifier	n		6269418	1					
ANR	6270603	IdentifierDeclStatement	"const char * res = getstring ( Q , n ) ;"	404:6:8187:8221	6269418	2	True				
ANR	6270604	IdentifierDecl	"* res = getstring ( Q , n )"		6269418	0					
ANR	6270605	IdentifierDeclType	const char *		6269418	0					
ANR	6270606	Identifier	res		6269418	1					
ANR	6270607	AssignmentExpression	"* res = getstring ( Q , n )"		6269418	2		=			
ANR	6270608	Identifier	res		6269418	0					
ANR	6270609	CallExpression	"getstring ( Q , n )"		6269418	1					
ANR	6270610	Callee	getstring		6269418	0					
ANR	6270611	Identifier	getstring		6269418	0					
ANR	6270612	ArgumentList	Q		6269418	1					
ANR	6270613	Argument	Q		6269418	0					
ANR	6270614	Identifier	Q		6269418	0					
ANR	6270615	Argument	n		6269418	1					
ANR	6270616	Identifier	n		6269418	0					
ANR	6270617	IfStatement	if ( res )		6269418	3					
ANR	6270618	Condition	res	405:10:8233:8235	6269418	0	True				
ANR	6270619	Identifier	res		6269418	0					
ANR	6270620	CompoundStatement		228:15:4342:4342	6269418	1					
ANR	6270621	ExpressionStatement	"strcat ( out , res )"	406:7:8247:8264	6269418	0	True				
ANR	6270622	CallExpression	"strcat ( out , res )"		6269418	0					
ANR	6270623	Callee	strcat		6269418	0					
ANR	6270624	Identifier	strcat		6269418	0					
ANR	6270625	ArgumentList	out		6269418	1					
ANR	6270626	Argument	out		6269418	0					
ANR	6270627	Identifier	out		6269418	0					
ANR	6270628	Argument	res		6269418	1					
ANR	6270629	Identifier	res		6269418	0					
ANR	6270630	ExpressionStatement	q = Q + n + 1	408:6:8280:8293	6269418	4	True				
ANR	6270631	AssignmentExpression	q = Q + n + 1		6269418	0		=			
ANR	6270632	Identifier	q		6269418	0					
ANR	6270633	AdditiveExpression	Q + n + 1		6269418	1		+			
ANR	6270634	Identifier	Q		6269418	0					
ANR	6270635	AdditiveExpression	n + 1		6269418	1		+			
ANR	6270636	Identifier	n		6269418	0					
ANR	6270637	PrimaryExpression	1		6269418	1					
ANR	6270638	ContinueStatement	continue ;	409:6:8301:8309	6269418	5	True				
ANR	6270639	BreakStatement	break ;	411:5:8323:8328	6269418	2	True				
ANR	6270640	Label	case 'u' :	412:4:8334:8342	6269418	3	True				
ANR	6270641	IfStatement	"if ( ! strncmp ( q , ""uRxs"" , 4 ) )"		6269418	4					
ANR	6270642	Condition	"! strncmp ( q , ""uRxs"" , 4 )"	413:9:8353:8375	6269418	0	True				
ANR	6270643	UnaryOperationExpression	"! strncmp ( q , ""uRxs"" , 4 )"		6269418	0					
ANR	6270644	UnaryOperator	!		6269418	0					
ANR	6270645	CallExpression	"strncmp ( q , ""uRxs"" , 4 )"		6269418	1					
ANR	6270646	Callee	strncmp		6269418	0					
ANR	6270647	Identifier	strncmp		6269418	0					
ANR	6270648	ArgumentList	q		6269418	1					
ANR	6270649	Argument	q		6269418	0					
ANR	6270650	Identifier	q		6269418	0					
ANR	6270651	Argument	"""uRxs"""		6269418	1					
ANR	6270652	PrimaryExpression	"""uRxs"""		6269418	0					
ANR	6270653	Argument	4		6269418	2					
ANR	6270654	PrimaryExpression	4		6269418	0					
ANR	6270655	CompoundStatement		239:6:4534:4568	6269418	1					
ANR	6270656	ExpressionStatement	"strcat ( out , "".."" )"	414:6:8386:8404	6269418	0	True				
ANR	6270657	CallExpression	"strcat ( out , "".."" )"		6269418	0					
ANR	6270658	Callee	strcat		6269418	0					
ANR	6270659	Identifier	strcat		6269418	0					
ANR	6270660	ArgumentList	out		6269418	1					
ANR	6270661	Argument	out		6269418	0					
ANR	6270662	Identifier	out		6269418	0					
ANR	6270663	Argument	""".."""		6269418	1					
ANR	6270664	PrimaryExpression	""".."""		6269418	0					
ANR	6270665	IdentifierDeclStatement	int n = 0 ;	415:6:8412:8422	6269418	1	True				
ANR	6270666	IdentifierDecl	n = 0		6269418	0					
ANR	6270667	IdentifierDeclType	int		6269418	0					
ANR	6270668	Identifier	n		6269418	1					
ANR	6270669	AssignmentExpression	n = 0		6269418	2		=			
ANR	6270670	Identifier	n		6269418	0					
ANR	6270671	PrimaryExpression	0		6269418	1					
ANR	6270672	IdentifierDeclStatement	"const char * Q = getnum ( q + 4 , & n ) ;"	416:6:8430:8464	6269418	2	True				
ANR	6270673	IdentifierDecl	"* Q = getnum ( q + 4 , & n )"		6269418	0					
ANR	6270674	IdentifierDeclType	const char *		6269418	0					
ANR	6270675	Identifier	Q		6269418	1					
ANR	6270676	AssignmentExpression	"* Q = getnum ( q + 4 , & n )"		6269418	2		=			
ANR	6270677	Identifier	Q		6269418	0					
ANR	6270678	CallExpression	"getnum ( q + 4 , & n )"		6269418	1					
ANR	6270679	Callee	getnum		6269418	0					
ANR	6270680	Identifier	getnum		6269418	0					
ANR	6270681	ArgumentList	q + 4		6269418	1					
ANR	6270682	Argument	q + 4		6269418	0					
ANR	6270683	AdditiveExpression	q + 4		6269418	0		+			
ANR	6270684	Identifier	q		6269418	0					
ANR	6270685	PrimaryExpression	4		6269418	1					
ANR	6270686	Argument	& n		6269418	1					
ANR	6270687	UnaryOperationExpression	& n		6269418	0					
ANR	6270688	UnaryOperator	&		6269418	0					
ANR	6270689	Identifier	n		6269418	1					
ANR	6270690	ExpressionStatement	"strcat ( out , getstring ( Q , n ) )"	417:6:8472:8502	6269418	3	True				
ANR	6270691	CallExpression	"strcat ( out , getstring ( Q , n ) )"		6269418	0					
ANR	6270692	Callee	strcat		6269418	0					
ANR	6270693	Identifier	strcat		6269418	0					
ANR	6270694	ArgumentList	out		6269418	1					
ANR	6270695	Argument	out		6269418	0					
ANR	6270696	Identifier	out		6269418	0					
ANR	6270697	Argument	"getstring ( Q , n )"		6269418	1					
ANR	6270698	CallExpression	"getstring ( Q , n )"		6269418	0					
ANR	6270699	Callee	getstring		6269418	0					
ANR	6270700	Identifier	getstring		6269418	0					
ANR	6270701	ArgumentList	Q		6269418	1					
ANR	6270702	Argument	Q		6269418	0					
ANR	6270703	Identifier	Q		6269418	0					
ANR	6270704	Argument	n		6269418	1					
ANR	6270705	Identifier	n		6269418	0					
ANR	6270706	ExpressionStatement	q = Q + n + 1	418:6:8510:8523	6269418	4	True				
ANR	6270707	AssignmentExpression	q = Q + n + 1		6269418	0		=			
ANR	6270708	Identifier	q		6269418	0					
ANR	6270709	AdditiveExpression	Q + n + 1		6269418	1		+			
ANR	6270710	Identifier	Q		6269418	0					
ANR	6270711	AdditiveExpression	n + 1		6269418	1		+			
ANR	6270712	Identifier	n		6269418	0					
ANR	6270713	PrimaryExpression	1		6269418	1					
ANR	6270714	ContinueStatement	continue ;	419:6:8531:8539	6269418	5	True				
ANR	6270715	BreakStatement	break ;	421:5:8553:8558	6269418	5	True				
ANR	6270716	Label	case 'S' :	422:4:8564:8572	6269418	6	True				
ANR	6270717	IfStatement	if ( q [ 1 ] == '1' )		6269418	7					
ANR	6270718	Condition	q [ 1 ] == '1'	423:9:8591:8601	6269418	0	True				
ANR	6270719	EqualityExpression	q [ 1 ] == '1'		6269418	0		==			
ANR	6270720	ArrayIndexing	q [ 1 ]		6269418	0					
ANR	6270721	Identifier	q		6269418	0					
ANR	6270722	PrimaryExpression	1		6269418	1					
ANR	6270723	PrimaryExpression	'1'		6269418	1					
ANR	6270724	CompoundStatement		246:22:4708:4708	6269418	1					
ANR	6270725	ExpressionStatement	q ++	424:6:8612:8615	6269418	0	True				
ANR	6270726	PostIncDecOperationExpression	q ++		6269418	0					
ANR	6270727	Identifier	q		6269418	0					
ANR	6270728	IncDec	++		6269418	1					
ANR	6270729	SwitchStatement	switch ( q [ 1 ] )		6269418	8					
ANR	6270730	Condition	q [ 1 ]	426:13:8637:8640	6269418	0	True				
ANR	6270731	ArrayIndexing	q [ 1 ]		6269418	0					
ANR	6270732	Identifier	q		6269418	0					
ANR	6270733	PrimaryExpression	1		6269418	1					
ANR	6270734	CompoundStatement		249:19:4747:4747	6269418	1					
ANR	6270735	Label	case '0' :	427:5:8650:8658	6269418	0	True				
ANR	6270736	ExpressionStatement	"strcat ( out , "" (self) -> ()"" )"	428:6:8666:8695	6269418	1	True				
ANR	6270737	CallExpression	"strcat ( out , "" (self) -> ()"" )"		6269418	0					
ANR	6270738	Callee	strcat		6269418	0					
ANR	6270739	Identifier	strcat		6269418	0					
ANR	6270740	ArgumentList	out		6269418	1					
ANR	6270741	Argument	out		6269418	0					
ANR	6270742	Identifier	out		6269418	0					
ANR	6270743	Argument	""" (self) -> ()"""		6269418	1					
ANR	6270744	PrimaryExpression	""" (self) -> ()"""		6269418	0					
ANR	6270745	IfStatement	if ( attr )		6269418	2					
ANR	6270746	Condition	attr	429:10:8707:8710	6269418	0	True				
ANR	6270747	Identifier	attr		6269418	0					
ANR	6270748	CompoundStatement		252:16:4817:4817	6269418	1					
ANR	6270749	ExpressionStatement	"strcat ( out , attr )"	430:7:8722:8740	6269418	0	True				
ANR	6270750	CallExpression	"strcat ( out , attr )"		6269418	0					
ANR	6270751	Callee	strcat		6269418	0					
ANR	6270752	Identifier	strcat		6269418	0					
ANR	6270753	ArgumentList	out		6269418	1					
ANR	6270754	Argument	out		6269418	0					
ANR	6270755	Identifier	out		6269418	0					
ANR	6270756	Argument	attr		6269418	1					
ANR	6270757	Identifier	attr		6269418	0					
ANR	6270758	ExpressionStatement	q = p = q + 1	433:6:8775:8788	6269418	3	True				
ANR	6270759	AssignmentExpression	q = p = q + 1		6269418	0		=			
ANR	6270760	Identifier	q		6269418	0					
ANR	6270761	AssignmentExpression	p = q + 1		6269418	1		=			
ANR	6270762	Identifier	p		6269418	0					
ANR	6270763	AdditiveExpression	q + 1		6269418	1		+			
ANR	6270764	Identifier	q		6269418	0					
ANR	6270765	PrimaryExpression	1		6269418	1					
ANR	6270766	ExpressionStatement	"attr = """""	434:6:8796:8805	6269418	4	True				
ANR	6270767	AssignmentExpression	"attr = """""		6269418	0		=			
ANR	6270768	Identifier	attr		6269418	0					
ANR	6270769	PrimaryExpression	""""""		6269418	1					
ANR	6270770	BreakStatement	break ;	435:6:8813:8818	6269418	5	True				
ANR	6270771	Label	case 'S' :	436:5:8825:8833	6269418	6	True				
ANR	6270772	ExpressionStatement	"strcat ( out , ""__String"" )"	438:6:8863:8887	6269418	7	True				
ANR	6270773	CallExpression	"strcat ( out , ""__String"" )"		6269418	0					
ANR	6270774	Callee	strcat		6269418	0					
ANR	6270775	Identifier	strcat		6269418	0					
ANR	6270776	ArgumentList	out		6269418	1					
ANR	6270777	Argument	out		6269418	0					
ANR	6270778	Identifier	out		6269418	0					
ANR	6270779	Argument	"""__String"""		6269418	1					
ANR	6270780	PrimaryExpression	"""__String"""		6269418	0					
ANR	6270781	BreakStatement	break ;	439:6:8895:8900	6269418	8	True				
ANR	6270782	Label	case '_' :	440:5:8907:8915	6269418	9	True				
ANR	6270783	IfStatement	if ( q [ 0 ] && q [ 1 ] && q [ 2 ] )		6269418	10					
ANR	6270784	Condition	q [ 0 ] && q [ 1 ] && q [ 2 ]	442:10:8949:8968	6269418	0	True				
ANR	6270785	AndExpression	q [ 0 ] && q [ 1 ] && q [ 2 ]		6269418	0		&&			
ANR	6270786	ArrayIndexing	q [ 0 ]		6269418	0					
ANR	6270787	Identifier	q		6269418	0					
ANR	6270788	PrimaryExpression	0		6269418	1					
ANR	6270789	AndExpression	q [ 1 ] && q [ 2 ]		6269418	1		&&			
ANR	6270790	ArrayIndexing	q [ 1 ]		6269418	0					
ANR	6270791	Identifier	q		6269418	0					
ANR	6270792	PrimaryExpression	1		6269418	1					
ANR	6270793	ArrayIndexing	q [ 2 ]		6269418	1					
ANR	6270794	Identifier	q		6269418	0					
ANR	6270795	PrimaryExpression	2		6269418	1					
ANR	6270796	CompoundStatement		268:7:5129:5163	6269418	1					
ANR	6270797	ExpressionStatement	"strcat ( out , "".."" )"	443:7:8980:8998	6269418	0	True				
ANR	6270798	CallExpression	"strcat ( out , "".."" )"		6269418	0					
ANR	6270799	Callee	strcat		6269418	0					
ANR	6270800	Identifier	strcat		6269418	0					
ANR	6270801	ArgumentList	out		6269418	1					
ANR	6270802	Argument	out		6269418	0					
ANR	6270803	Identifier	out		6269418	0					
ANR	6270804	Argument	""".."""		6269418	1					
ANR	6270805	PrimaryExpression	""".."""		6269418	0					
ANR	6270806	IdentifierDeclStatement	int n = 0 ;	444:7:9007:9016	6269418	1	True				
ANR	6270807	IdentifierDecl	n = 0		6269418	0					
ANR	6270808	IdentifierDeclType	int		6269418	0					
ANR	6270809	Identifier	n		6269418	1					
ANR	6270810	AssignmentExpression	n = 0		6269418	2		=			
ANR	6270811	Identifier	n		6269418	0					
ANR	6270812	PrimaryExpression	0		6269418	1					
ANR	6270813	IdentifierDeclStatement	"const char * Q = getnum ( q + 2 , & n ) ;"	445:7:9025:9059	6269418	2	True				
ANR	6270814	IdentifierDecl	"* Q = getnum ( q + 2 , & n )"		6269418	0					
ANR	6270815	IdentifierDeclType	const char *		6269418	0					
ANR	6270816	Identifier	Q		6269418	1					
ANR	6270817	AssignmentExpression	"* Q = getnum ( q + 2 , & n )"		6269418	2		=			
ANR	6270818	Identifier	Q		6269418	0					
ANR	6270819	CallExpression	"getnum ( q + 2 , & n )"		6269418	1					
ANR	6270820	Callee	getnum		6269418	0					
ANR	6270821	Identifier	getnum		6269418	0					
ANR	6270822	ArgumentList	q + 2		6269418	1					
ANR	6270823	Argument	q + 2		6269418	0					
ANR	6270824	AdditiveExpression	q + 2		6269418	0		+			
ANR	6270825	Identifier	q		6269418	0					
ANR	6270826	PrimaryExpression	2		6269418	1					
ANR	6270827	Argument	& n		6269418	1					
ANR	6270828	UnaryOperationExpression	& n		6269418	0					
ANR	6270829	UnaryOperator	&		6269418	0					
ANR	6270830	Identifier	n		6269418	1					
ANR	6270831	ExpressionStatement	"strcat ( out , getstring ( Q , n ) )"	446:7:9068:9098	6269418	3	True				
ANR	6270832	CallExpression	"strcat ( out , getstring ( Q , n ) )"		6269418	0					
ANR	6270833	Callee	strcat		6269418	0					
ANR	6270834	Identifier	strcat		6269418	0					
ANR	6270835	ArgumentList	out		6269418	1					
ANR	6270836	Argument	out		6269418	0					
ANR	6270837	Identifier	out		6269418	0					
ANR	6270838	Argument	"getstring ( Q , n )"		6269418	1					
ANR	6270839	CallExpression	"getstring ( Q , n )"		6269418	0					
ANR	6270840	Callee	getstring		6269418	0					
ANR	6270841	Identifier	getstring		6269418	0					
ANR	6270842	ArgumentList	Q		6269418	1					
ANR	6270843	Argument	Q		6269418	0					
ANR	6270844	Identifier	Q		6269418	0					
ANR	6270845	Argument	n		6269418	1					
ANR	6270846	Identifier	n		6269418	0					
ANR	6270847	ExpressionStatement	q = Q + n + 1	447:7:9107:9120	6269418	4	True				
ANR	6270848	AssignmentExpression	q = Q + n + 1		6269418	0		=			
ANR	6270849	Identifier	q		6269418	0					
ANR	6270850	AdditiveExpression	Q + n + 1		6269418	1		+			
ANR	6270851	Identifier	Q		6269418	0					
ANR	6270852	AdditiveExpression	n + 1		6269418	1		+			
ANR	6270853	Identifier	n		6269418	0					
ANR	6270854	PrimaryExpression	1		6269418	1					
ANR	6270855	ContinueStatement	continue ;	448:7:9129:9137	6269418	5	True				
ANR	6270856	BreakStatement	break ;	450:6:9153:9158	6269418	11	True				
ANR	6270857	BreakStatement	break ;	452:5:9172:9177	6269418	9	True				
ANR	6270858	Label	case 'B' :	453:4:9183:9191	6269418	10	True				
ANR	6270859	Label	case 'T' :	454:4:9197:9205	6269418	11	True				
ANR	6270860	Label	case 'I' :	455:4:9211:9219	6269418	12	True				
ANR	6270861	ExpressionStatement	"p = resolve ( types , q + 0 , & attr )"	456:5:9226:9259	6269418	13	True				
ANR	6270862	AssignmentExpression	"p = resolve ( types , q + 0 , & attr )"		6269418	0		=			
ANR	6270863	Identifier	p		6269418	0					
ANR	6270864	CallExpression	"resolve ( types , q + 0 , & attr )"		6269418	1					
ANR	6270865	Callee	resolve		6269418	0					
ANR	6270866	Identifier	resolve		6269418	0					
ANR	6270867	ArgumentList	types		6269418	1					
ANR	6270868	Argument	types		6269418	0					
ANR	6270869	Identifier	types		6269418	0					
ANR	6270870	Argument	q + 0		6269418	1					
ANR	6270871	AdditiveExpression	q + 0		6269418	0		+			
ANR	6270872	Identifier	q		6269418	0					
ANR	6270873	PrimaryExpression	0		6269418	1					
ANR	6270874	Argument	& attr		6269418	2					
ANR	6270875	UnaryOperationExpression	& attr		6269418	0					
ANR	6270876	UnaryOperator	&		6269418	0					
ANR	6270877	Identifier	attr		6269418	1					
ANR	6270878	IfStatement	if ( p && * p && IS_DIGIT ( p [ 1 ] ) )		6269418	14					
ANR	6270879	Condition	p && * p && IS_DIGIT ( p [ 1 ] )	457:9:9278:9303	6269418	0	True				
ANR	6270880	AndExpression	p && * p && IS_DIGIT ( p [ 1 ] )		6269418	0		&&			
ANR	6270881	Identifier	p		6269418	0					
ANR	6270882	AndExpression	* p && IS_DIGIT ( p [ 1 ] )		6269418	1		&&			
ANR	6270883	UnaryOperationExpression	* p		6269418	0					
ANR	6270884	UnaryOperator	*		6269418	0					
ANR	6270885	Identifier	p		6269418	1					
ANR	6270886	CallExpression	IS_DIGIT ( p [ 1 ] )		6269418	1					
ANR	6270887	Callee	IS_DIGIT		6269418	0					
ANR	6270888	Identifier	IS_DIGIT		6269418	0					
ANR	6270889	ArgumentList	p [ 1 ]		6269418	1					
ANR	6270890	Argument	p [ 1 ]		6269418	0					
ANR	6270891	ArrayIndexing	p [ 1 ]		6269418	0					
ANR	6270892	Identifier	p		6269418	0					
ANR	6270893	PrimaryExpression	1		6269418	1					
ANR	6270894	CompoundStatement		280:37:5410:5410	6269418	1					
ANR	6270895	ExpressionStatement	p --	458:6:9314:9317	6269418	0	True				
ANR	6270896	PostIncDecOperationExpression	p --		6269418	0					
ANR	6270897	Identifier	p		6269418	0					
ANR	6270898	IncDec	--		6269418	1					
ANR	6270899	BreakStatement	break ;	460:5:9331:9336	6269418	15	True				
ANR	6270900	Label	case 'F' :	461:4:9342:9350	6269418	16	True				
ANR	6270901	ExpressionStatement	"strcat ( out , "" ()"" )"	462:5:9357:9376	6269418	17	True				
ANR	6270902	CallExpression	"strcat ( out , "" ()"" )"		6269418	0					
ANR	6270903	Callee	strcat		6269418	0					
ANR	6270904	Identifier	strcat		6269418	0					
ANR	6270905	ArgumentList	out		6269418	1					
ANR	6270906	Argument	out		6269418	0					
ANR	6270907	Identifier	out		6269418	0					
ANR	6270908	Argument	""" ()"""		6269418	1					
ANR	6270909	PrimaryExpression	""" ()"""		6269418	0					
ANR	6270910	ExpressionStatement	"p = resolve ( types , ( strlen ( q ) > 2 ) ? q + 3 : """" , & attr )"	463:5:9383:9438	6269418	18	True				
ANR	6270911	AssignmentExpression	"p = resolve ( types , ( strlen ( q ) > 2 ) ? q + 3 : """" , & attr )"		6269418	0		=			
ANR	6270912	Identifier	p		6269418	0					
ANR	6270913	CallExpression	"resolve ( types , ( strlen ( q ) > 2 ) ? q + 3 : """" , & attr )"		6269418	1					
ANR	6270914	Callee	resolve		6269418	0					
ANR	6270915	Identifier	resolve		6269418	0					
ANR	6270916	ArgumentList	types		6269418	1					
ANR	6270917	Argument	types		6269418	0					
ANR	6270918	Identifier	types		6269418	0					
ANR	6270919	Argument	"( strlen ( q ) > 2 ) ? q + 3 : """""		6269418	1					
ANR	6270920	ConditionalExpression	"( strlen ( q ) > 2 ) ? q + 3 : """""		6269418	0					
ANR	6270921	Condition	strlen ( q ) > 2		6269418	0					
ANR	6270922	RelationalExpression	strlen ( q ) > 2		6269418	0		>			
ANR	6270923	CallExpression	strlen ( q )		6269418	0					
ANR	6270924	Callee	strlen		6269418	0					
ANR	6270925	Identifier	strlen		6269418	0					
ANR	6270926	ArgumentList	q		6269418	1					
ANR	6270927	Argument	q		6269418	0					
ANR	6270928	Identifier	q		6269418	0					
ANR	6270929	PrimaryExpression	2		6269418	1					
ANR	6270930	AdditiveExpression	q + 3		6269418	1		+			
ANR	6270931	Identifier	q		6269418	0					
ANR	6270932	PrimaryExpression	3		6269418	1					
ANR	6270933	PrimaryExpression	""""""		6269418	2					
ANR	6270934	Argument	& attr		6269418	2					
ANR	6270935	UnaryOperationExpression	& attr		6269418	0					
ANR	6270936	UnaryOperator	&		6269418	0					
ANR	6270937	Identifier	attr		6269418	1					
ANR	6270938	BreakStatement	break ;	464:5:9453:9458	6269418	19	True				
ANR	6270939	Label	case 'G' :	465:4:9464:9472	6269418	20	True				
ANR	6270940	ExpressionStatement	q += 2	466:5:9479:9485	6269418	21	True				
ANR	6270941	AssignmentExpression	q += 2		6269418	0		+=			
ANR	6270942	Identifier	q		6269418	0					
ANR	6270943	PrimaryExpression	2		6269418	1					
ANR	6270944	IfStatement	"if ( ! strncmp ( q , ""_V"" , 2 ) )"		6269418	22					
ANR	6270945	Condition	"! strncmp ( q , ""_V"" , 2 )"	468:9:9525:9545	6269418	0	True				
ANR	6270946	UnaryOperationExpression	"! strncmp ( q , ""_V"" , 2 )"		6269418	0					
ANR	6270947	UnaryOperator	!		6269418	0					
ANR	6270948	CallExpression	"strncmp ( q , ""_V"" , 2 )"		6269418	1					
ANR	6270949	Callee	strncmp		6269418	0					
ANR	6270950	Identifier	strncmp		6269418	0					
ANR	6270951	ArgumentList	q		6269418	1					
ANR	6270952	Argument	q		6269418	0					
ANR	6270953	Identifier	q		6269418	0					
ANR	6270954	Argument	"""_V"""		6269418	1					
ANR	6270955	PrimaryExpression	"""_V"""		6269418	0					
ANR	6270956	Argument	2		6269418	2					
ANR	6270957	PrimaryExpression	2		6269418	0					
ANR	6270958	CompoundStatement		291:32:5652:5652	6269418	1					
ANR	6270959	ExpressionStatement	q += 2	469:6:9556:9562	6269418	0	True				
ANR	6270960	AssignmentExpression	q += 2		6269418	0		+=			
ANR	6270961	Identifier	q		6269418	0					
ANR	6270962	PrimaryExpression	2		6269418	1					
ANR	6270963	ExpressionStatement	"p = resolve ( types , q , & attr )"	471:5:9576:9605	6269418	23	True				
ANR	6270964	AssignmentExpression	"p = resolve ( types , q , & attr )"		6269418	0		=			
ANR	6270965	Identifier	p		6269418	0					
ANR	6270966	CallExpression	"resolve ( types , q , & attr )"		6269418	1					
ANR	6270967	Callee	resolve		6269418	0					
ANR	6270968	Identifier	resolve		6269418	0					
ANR	6270969	ArgumentList	types		6269418	1					
ANR	6270970	Argument	types		6269418	0					
ANR	6270971	Identifier	types		6269418	0					
ANR	6270972	Argument	q		6269418	1					
ANR	6270973	Identifier	q		6269418	0					
ANR	6270974	Argument	& attr		6269418	2					
ANR	6270975	UnaryOperationExpression	& attr		6269418	0					
ANR	6270976	UnaryOperator	&		6269418	0					
ANR	6270977	Identifier	attr		6269418	1					
ANR	6270978	BreakStatement	break ;	472:5:9620:9625	6269418	24	True				
ANR	6270979	Label	case 'V' :	473:4:9631:9639	6269418	25	True				
ANR	6270980	ExpressionStatement	"p = resolve ( types , q + 1 , & attr )"	474:5:9646:9679	6269418	26	True				
ANR	6270981	AssignmentExpression	"p = resolve ( types , q + 1 , & attr )"		6269418	0		=			
ANR	6270982	Identifier	p		6269418	0					
ANR	6270983	CallExpression	"resolve ( types , q + 1 , & attr )"		6269418	1					
ANR	6270984	Callee	resolve		6269418	0					
ANR	6270985	Identifier	resolve		6269418	0					
ANR	6270986	ArgumentList	types		6269418	1					
ANR	6270987	Argument	types		6269418	0					
ANR	6270988	Identifier	types		6269418	0					
ANR	6270989	Argument	q + 1		6269418	1					
ANR	6270990	AdditiveExpression	q + 1		6269418	0		+			
ANR	6270991	Identifier	q		6269418	0					
ANR	6270992	PrimaryExpression	1		6269418	1					
ANR	6270993	Argument	& attr		6269418	2					
ANR	6270994	UnaryOperationExpression	& attr		6269418	0					
ANR	6270995	UnaryOperator	&		6269418	0					
ANR	6270996	Identifier	attr		6269418	1					
ANR	6270997	BreakStatement	break ;	475:5:9694:9699	6269418	27	True				
ANR	6270998	Label	case '_' :	476:4:9705:9713	6269418	28	True				
ANR	6270999	ExpressionStatement	"p = resolve ( types , q + 1 , & attr )"	478:5:9752:9785	6269418	29	True				
ANR	6271000	AssignmentExpression	"p = resolve ( types , q + 1 , & attr )"		6269418	0		=			
ANR	6271001	Identifier	p		6269418	0					
ANR	6271002	CallExpression	"resolve ( types , q + 1 , & attr )"		6269418	1					
ANR	6271003	Callee	resolve		6269418	0					
ANR	6271004	Identifier	resolve		6269418	0					
ANR	6271005	ArgumentList	types		6269418	1					
ANR	6271006	Argument	types		6269418	0					
ANR	6271007	Identifier	types		6269418	0					
ANR	6271008	Argument	q + 1		6269418	1					
ANR	6271009	AdditiveExpression	q + 1		6269418	0		+			
ANR	6271010	Identifier	q		6269418	0					
ANR	6271011	PrimaryExpression	1		6269418	1					
ANR	6271012	Argument	& attr		6269418	2					
ANR	6271013	UnaryOperationExpression	& attr		6269418	0					
ANR	6271014	UnaryOperator	&		6269418	0					
ANR	6271015	Identifier	attr		6269418	1					
ANR	6271016	BreakStatement	break ;	480:5:9842:9847	6269418	30	True				
ANR	6271017	Label	default :	481:4:9853:9860	6269418	31	True				
ANR	6271018	Identifier	default		6269418	0					
ANR	6271019	ExpressionStatement	"p = resolve ( types , q , & attr )"	482:5:9867:9896	6269418	32	True				
ANR	6271020	AssignmentExpression	"p = resolve ( types , q , & attr )"		6269418	0		=			
ANR	6271021	Identifier	p		6269418	0					
ANR	6271022	CallExpression	"resolve ( types , q , & attr )"		6269418	1					
ANR	6271023	Callee	resolve		6269418	0					
ANR	6271024	Identifier	resolve		6269418	0					
ANR	6271025	ArgumentList	types		6269418	1					
ANR	6271026	Argument	types		6269418	0					
ANR	6271027	Identifier	types		6269418	0					
ANR	6271028	Argument	q		6269418	1					
ANR	6271029	Identifier	q		6269418	0					
ANR	6271030	Argument	& attr		6269418	2					
ANR	6271031	UnaryOperationExpression	& attr		6269418	0					
ANR	6271032	UnaryOperator	&		6269418	0					
ANR	6271033	Identifier	attr		6269418	1					
ANR	6271034	IfStatement	if ( p )		6269418	2					
ANR	6271035	Condition	p	485:8:9921:9921	6269418	0	True				
ANR	6271036	Identifier	p		6269418	0					
ANR	6271037	CompoundStatement		308:11:6028:6028	6269418	1					
ANR	6271038	ExpressionStatement	"q = getnum ( p , & len )"	486:5:9931:9951	6269418	0	True				
ANR	6271039	AssignmentExpression	"q = getnum ( p , & len )"		6269418	0		=			
ANR	6271040	Identifier	q		6269418	0					
ANR	6271041	CallExpression	"getnum ( p , & len )"		6269418	1					
ANR	6271042	Callee	getnum		6269418	0					
ANR	6271043	Identifier	getnum		6269418	0					
ANR	6271044	ArgumentList	p		6269418	1					
ANR	6271045	Argument	p		6269418	0					
ANR	6271046	Identifier	p		6269418	0					
ANR	6271047	Argument	& len		6269418	1					
ANR	6271048	UnaryOperationExpression	& len		6269418	0					
ANR	6271049	UnaryOperator	&		6269418	0					
ANR	6271050	Identifier	len		6269418	1					
ANR	6271051	IfStatement	"if ( attr && ! strcmp ( attr , ""generic"" ) )"		6269418	1					
ANR	6271052	Condition	"attr && ! strcmp ( attr , ""generic"" )"	487:9:9962:9994	6269418	0	True				
ANR	6271053	AndExpression	"attr && ! strcmp ( attr , ""generic"" )"		6269418	0		&&			
ANR	6271054	Identifier	attr		6269418	0					
ANR	6271055	UnaryOperationExpression	"! strcmp ( attr , ""generic"" )"		6269418	1					
ANR	6271056	UnaryOperator	!		6269418	0					
ANR	6271057	CallExpression	"strcmp ( attr , ""generic"" )"		6269418	1					
ANR	6271058	Callee	strcmp		6269418	0					
ANR	6271059	Identifier	strcmp		6269418	0					
ANR	6271060	ArgumentList	attr		6269418	1					
ANR	6271061	Argument	attr		6269418	0					
ANR	6271062	Identifier	attr		6269418	0					
ANR	6271063	Argument	"""generic"""		6269418	1					
ANR	6271064	PrimaryExpression	"""generic"""		6269418	0					
ANR	6271065	CompoundStatement		310:44:6101:6101	6269418	1					
ANR	6271066	ExpressionStatement	is_generic = 1	488:6:10005:10019	6269418	0	True				
ANR	6271067	AssignmentExpression	is_generic = 1		6269418	0		=			
ANR	6271068	Identifier	is_generic		6269418	0					
ANR	6271069	PrimaryExpression	1		6269418	1					
ANR	6271070	IfStatement	if ( ! len )		6269418	2					
ANR	6271071	Condition	! len	492:9:10122:10125	6269418	0	True				
ANR	6271072	UnaryOperationExpression	! len		6269418	0					
ANR	6271073	UnaryOperator	!		6269418	0					
ANR	6271074	Identifier	len		6269418	1					
ANR	6271075	CompoundStatement		315:15:6232:6232	6269418	1					
ANR	6271076	IfStatement	if ( retmode )		6269418	0					
ANR	6271077	Condition	retmode	493:10:10140:10146	6269418	0	True				
ANR	6271078	Identifier	retmode		6269418	0					
ANR	6271079	CompoundStatement		316:19:6253:6253	6269418	1					
ANR	6271080	IfStatement	if ( q + 1 > q_end )		6269418	0					
ANR	6271081	Condition	q + 1 > q_end	494:11:10162:10174	6269418	0	True				
ANR	6271082	RelationalExpression	q + 1 > q_end		6269418	0		>			
ANR	6271083	AdditiveExpression	q + 1		6269418	0		+			
ANR	6271084	Identifier	q		6269418	0					
ANR	6271085	PrimaryExpression	1		6269418	1					
ANR	6271086	Identifier	q_end		6269418	1					
ANR	6271087	CompoundStatement		317:26:6281:6281	6269418	1					
ANR	6271088	IfStatement	if ( attr )		6269418	0					
ANR	6271089	Condition	attr	495:12:10191:10194	6269418	0	True				
ANR	6271090	Identifier	attr		6269418	0					
ANR	6271091	CompoundStatement		318:18:6301:6301	6269418	1					
ANR	6271092	ExpressionStatement	"strcat ( out , "" -> "" )"	496:9:10208:10228	6269418	0	True				
ANR	6271093	CallExpression	"strcat ( out , "" -> "" )"		6269418	0					
ANR	6271094	Callee	strcat		6269418	0					
ANR	6271095	Identifier	strcat		6269418	0					
ANR	6271096	ArgumentList	out		6269418	1					
ANR	6271097	Argument	out		6269418	0					
ANR	6271098	Identifier	out		6269418	0					
ANR	6271099	Argument	""" -> """		6269418	1					
ANR	6271100	PrimaryExpression	""" -> """		6269418	0					
ANR	6271101	ExpressionStatement	STRCAT_BOUNDS ( strlen ( attr ) )	497:9:10239:10268	6269418	1	True				
ANR	6271102	CallExpression	STRCAT_BOUNDS ( strlen ( attr ) )		6269418	0					
ANR	6271103	Callee	STRCAT_BOUNDS		6269418	0					
ANR	6271104	Identifier	STRCAT_BOUNDS		6269418	0					
ANR	6271105	ArgumentList	strlen ( attr )		6269418	1					
ANR	6271106	Argument	strlen ( attr )		6269418	0					
ANR	6271107	CallExpression	strlen ( attr )		6269418	0					
ANR	6271108	Callee	strlen		6269418	0					
ANR	6271109	Identifier	strlen		6269418	0					
ANR	6271110	ArgumentList	attr		6269418	1					
ANR	6271111	Argument	attr		6269418	0					
ANR	6271112	Identifier	attr		6269418	0					
ANR	6271113	ExpressionStatement	"strcat ( out , attr )"	498:9:10279:10297	6269418	2	True				
ANR	6271114	CallExpression	"strcat ( out , attr )"		6269418	0					
ANR	6271115	Callee	strcat		6269418	0					
ANR	6271116	Identifier	strcat		6269418	0					
ANR	6271117	ArgumentList	out		6269418	1					
ANR	6271118	Argument	out		6269418	0					
ANR	6271119	Identifier	out		6269418	0					
ANR	6271120	Argument	attr		6269418	1					
ANR	6271121	Identifier	attr		6269418	0					
ANR	6271122	BreakStatement	break ;	500:8:10317:10322	6269418	1	True				
ANR	6271123	ExpressionStatement	"p = resolve ( types , * q ? q + 1 : q , & attr )"	502:7:10340:10380	6269418	1	True				
ANR	6271124	AssignmentExpression	"p = resolve ( types , * q ? q + 1 : q , & attr )"		6269418	0		=			
ANR	6271125	Identifier	p		6269418	0					
ANR	6271126	CallExpression	"resolve ( types , * q ? q + 1 : q , & attr )"		6269418	1					
ANR	6271127	Callee	resolve		6269418	0					
ANR	6271128	Identifier	resolve		6269418	0					
ANR	6271129	ArgumentList	types		6269418	1					
ANR	6271130	Argument	types		6269418	0					
ANR	6271131	Identifier	types		6269418	0					
ANR	6271132	Argument	* q ? q + 1 : q		6269418	1					
ANR	6271133	ConditionalExpression	* q ? q + 1 : q		6269418	0					
ANR	6271134	Condition	* q		6269418	0					
ANR	6271135	UnaryOperationExpression	* q		6269418	0					
ANR	6271136	UnaryOperator	*		6269418	0					
ANR	6271137	Identifier	q		6269418	1					
ANR	6271138	AdditiveExpression	q + 1		6269418	1		+			
ANR	6271139	Identifier	q		6269418	0					
ANR	6271140	PrimaryExpression	1		6269418	1					
ANR	6271141	Identifier	q		6269418	2					
ANR	6271142	Argument	& attr		6269418	2					
ANR	6271143	UnaryOperationExpression	& attr		6269418	0					
ANR	6271144	UnaryOperator	&		6269418	0					
ANR	6271145	Identifier	attr		6269418	1					
ANR	6271146	IfStatement	if ( attr )		6269418	2					
ANR	6271147	Condition	attr	505:11:10481:10484	6269418	0	True				
ANR	6271148	Identifier	attr		6269418	0					
ANR	6271149	CompoundStatement		328:17:6591:6591	6269418	1					
ANR	6271150	ExpressionStatement	"strcat ( out , "" -> "" )"	506:8:10497:10517	6269418	0	True				
ANR	6271151	CallExpression	"strcat ( out , "" -> "" )"		6269418	0					
ANR	6271152	Callee	strcat		6269418	0					
ANR	6271153	Identifier	strcat		6269418	0					
ANR	6271154	ArgumentList	out		6269418	1					
ANR	6271155	Argument	out		6269418	0					
ANR	6271156	Identifier	out		6269418	0					
ANR	6271157	Argument	""" -> """		6269418	1					
ANR	6271158	PrimaryExpression	""" -> """		6269418	0					
ANR	6271159	ExpressionStatement	STRCAT_BOUNDS ( strlen ( attr ) )	507:8:10527:10556	6269418	1	True				
ANR	6271160	CallExpression	STRCAT_BOUNDS ( strlen ( attr ) )		6269418	0					
ANR	6271161	Callee	STRCAT_BOUNDS		6269418	0					
ANR	6271162	Identifier	STRCAT_BOUNDS		6269418	0					
ANR	6271163	ArgumentList	strlen ( attr )		6269418	1					
ANR	6271164	Argument	strlen ( attr )		6269418	0					
ANR	6271165	CallExpression	strlen ( attr )		6269418	0					
ANR	6271166	Callee	strlen		6269418	0					
ANR	6271167	Identifier	strlen		6269418	0					
ANR	6271168	ArgumentList	attr		6269418	1					
ANR	6271169	Argument	attr		6269418	0					
ANR	6271170	Identifier	attr		6269418	0					
ANR	6271171	ExpressionStatement	"strcat ( out , attr )"	508:8:10566:10584	6269418	2	True				
ANR	6271172	CallExpression	"strcat ( out , attr )"		6269418	0					
ANR	6271173	Callee	strcat		6269418	0					
ANR	6271174	Identifier	strcat		6269418	0					
ANR	6271175	ArgumentList	out		6269418	1					
ANR	6271176	Argument	out		6269418	0					
ANR	6271177	Identifier	out		6269418	0					
ANR	6271178	Argument	attr		6269418	1					
ANR	6271179	Identifier	attr		6269418	0					
ANR	6271180	BreakStatement	break ;	510:7:10602:10607	6269418	3	True				
ANR	6271181	ExpressionStatement	retmode = 1	512:6:10623:10634	6269418	1	True				
ANR	6271182	AssignmentExpression	retmode = 1		6269418	0		=			
ANR	6271183	Identifier	retmode		6269418	0					
ANR	6271184	PrimaryExpression	1		6269418	1					
ANR	6271185	ExpressionStatement	len ++	513:6:10642:10647	6269418	2	True				
ANR	6271186	PostIncDecOperationExpression	len ++		6269418	0					
ANR	6271187	Identifier	len		6269418	0					
ANR	6271188	IncDec	++		6269418	1					
ANR	6271189	IfStatement	if ( len < 0 || len > 256 )		6269418	3					
ANR	6271190	Condition	len < 0 || len > 256	515:9:10665:10684	6269418	0	True				
ANR	6271191	OrExpression	len < 0 || len > 256		6269418	0		||			
ANR	6271192	RelationalExpression	len < 0		6269418	0		<			
ANR	6271193	Identifier	len		6269418	0					
ANR	6271194	PrimaryExpression	0		6269418	1					
ANR	6271195	RelationalExpression	len > 256		6269418	1		>			
ANR	6271196	Identifier	len		6269418	0					
ANR	6271197	PrimaryExpression	256		6269418	1					
ANR	6271198	CompoundStatement		338:31:6791:6791	6269418	1					
ANR	6271199	BreakStatement	break ;	517:6:10719:10724	6269418	0	True				
ANR	6271200	IfStatement	if ( len <= ( q_end - q ) && q [ len ] )		6269418	4					
ANR	6271201	Condition	len <= ( q_end - q ) && q [ len ]	519:9:10742:10769	6269418	0	True				
ANR	6271202	AndExpression	len <= ( q_end - q ) && q [ len ]		6269418	0		&&			
ANR	6271203	RelationalExpression	len <= ( q_end - q )		6269418	0		<=			
ANR	6271204	Identifier	len		6269418	0					
ANR	6271205	AdditiveExpression	q_end - q		6269418	1		-			
ANR	6271206	Identifier	q_end		6269418	0					
ANR	6271207	Identifier	q		6269418	1					
ANR	6271208	ArrayIndexing	q [ len ]		6269418	1					
ANR	6271209	Identifier	q		6269418	0					
ANR	6271210	Identifier	len		6269418	1					
ANR	6271211	CompoundStatement		343:6:6884:6918	6269418	1					
ANR	6271212	IdentifierDeclStatement	"const char * s = getstring ( q , len ) ;"	520:6:10780:10814	6269418	0	True				
ANR	6271213	IdentifierDecl	"* s = getstring ( q , len )"		6269418	0					
ANR	6271214	IdentifierDeclType	const char *		6269418	0					
ANR	6271215	Identifier	s		6269418	1					
ANR	6271216	AssignmentExpression	"* s = getstring ( q , len )"		6269418	2		=			
ANR	6271217	Identifier	s		6269418	0					
ANR	6271218	CallExpression	"getstring ( q , len )"		6269418	1					
ANR	6271219	Callee	getstring		6269418	0					
ANR	6271220	Identifier	getstring		6269418	0					
ANR	6271221	ArgumentList	q		6269418	1					
ANR	6271222	Argument	q		6269418	0					
ANR	6271223	Identifier	q		6269418	0					
ANR	6271224	Argument	len		6269418	1					
ANR	6271225	Identifier	len		6269418	0					
ANR	6271226	IfStatement	if ( s && * s )		6269418	1					
ANR	6271227	Condition	s && * s	521:10:10826:10832	6269418	0	True				
ANR	6271228	AndExpression	s && * s		6269418	0		&&			
ANR	6271229	Identifier	s		6269418	0					
ANR	6271230	UnaryOperationExpression	* s		6269418	1					
ANR	6271231	UnaryOperator	*		6269418	0					
ANR	6271232	Identifier	s		6269418	1					
ANR	6271233	CompoundStatement		344:19:6939:6939	6269418	1					
ANR	6271234	IfStatement	if ( is_first )		6269418	0					
ANR	6271235	Condition	is_first	522:11:10848:10855	6269418	0	True				
ANR	6271236	Identifier	is_first		6269418	0					
ANR	6271237	CompoundStatement		345:21:6962:6962	6269418	1					
ANR	6271238	ExpressionStatement	"strcat ( out , is_generic ? ""<"" : ""("" )"	523:8:10869:10901	6269418	0	True				
ANR	6271239	CallExpression	"strcat ( out , is_generic ? ""<"" : ""("" )"		6269418	0					
ANR	6271240	Callee	strcat		6269418	0					
ANR	6271241	Identifier	strcat		6269418	0					
ANR	6271242	ArgumentList	out		6269418	1					
ANR	6271243	Argument	out		6269418	0					
ANR	6271244	Identifier	out		6269418	0					
ANR	6271245	Argument	"is_generic ? ""<"" : ""("""		6269418	1					
ANR	6271246	ConditionalExpression	"is_generic ? ""<"" : ""("""		6269418	0					
ANR	6271247	Condition	is_generic		6269418	0					
ANR	6271248	Identifier	is_generic		6269418	0					
ANR	6271249	PrimaryExpression	"""<"""		6269418	1					
ANR	6271250	PrimaryExpression	"""("""		6269418	2					
ANR	6271251	ExpressionStatement	is_first = 0	524:8:10911:10923	6269418	1	True				
ANR	6271252	AssignmentExpression	is_first = 0		6269418	0		=			
ANR	6271253	Identifier	is_first		6269418	0					
ANR	6271254	PrimaryExpression	0		6269418	1					
ANR	6271255	ExpressionStatement	is_last = q [ len ]	527:7:10983:10999	6269418	1	True				
ANR	6271256	AssignmentExpression	is_last = q [ len ]		6269418	0		=			
ANR	6271257	Identifier	is_last		6269418	0					
ANR	6271258	ArrayIndexing	q [ len ]		6269418	1					
ANR	6271259	Identifier	q		6269418	0					
ANR	6271260	Identifier	len		6269418	1					
ANR	6271261	IfStatement	if ( attr )		6269418	2					
ANR	6271262	Condition	attr	528:11:11012:11015	6269418	0	True				
ANR	6271263	Identifier	attr		6269418	0					
ANR	6271264	CompoundStatement		351:17:7122:7122	6269418	1					
ANR	6271265	ExpressionStatement	STRCAT_BOUNDS ( strlen ( attr ) )	529:8:11028:11057	6269418	0	True				
ANR	6271266	CallExpression	STRCAT_BOUNDS ( strlen ( attr ) )		6269418	0					
ANR	6271267	Callee	STRCAT_BOUNDS		6269418	0					
ANR	6271268	Identifier	STRCAT_BOUNDS		6269418	0					
ANR	6271269	ArgumentList	strlen ( attr )		6269418	1					
ANR	6271270	Argument	strlen ( attr )		6269418	0					
ANR	6271271	CallExpression	strlen ( attr )		6269418	0					
ANR	6271272	Callee	strlen		6269418	0					
ANR	6271273	Identifier	strlen		6269418	0					
ANR	6271274	ArgumentList	attr		6269418	1					
ANR	6271275	Argument	attr		6269418	0					
ANR	6271276	Identifier	attr		6269418	0					
ANR	6271277	ExpressionStatement	"strcat ( out , attr )"	530:8:11067:11085	6269418	1	True				
ANR	6271278	CallExpression	"strcat ( out , attr )"		6269418	0					
ANR	6271279	Callee	strcat		6269418	0					
ANR	6271280	Identifier	strcat		6269418	0					
ANR	6271281	ArgumentList	out		6269418	1					
ANR	6271282	Argument	out		6269418	0					
ANR	6271283	Identifier	out		6269418	0					
ANR	6271284	Argument	attr		6269418	1					
ANR	6271285	Identifier	attr		6269418	0					
ANR	6271286	ExpressionStatement	"strcat ( out , "" "" )"	531:8:11095:11112	6269418	2	True				
ANR	6271287	CallExpression	"strcat ( out , "" "" )"		6269418	0					
ANR	6271288	Callee	strcat		6269418	0					
ANR	6271289	Identifier	strcat		6269418	0					
ANR	6271290	ArgumentList	out		6269418	1					
ANR	6271291	Argument	out		6269418	0					
ANR	6271292	Identifier	out		6269418	0					
ANR	6271293	Argument	""" """		6269418	1					
ANR	6271294	PrimaryExpression	""" """		6269418	0					
ANR	6271295	ExpressionStatement	STRCAT_BOUNDS ( strlen ( s ) )	533:7:11130:11156	6269418	3	True				
ANR	6271296	CallExpression	STRCAT_BOUNDS ( strlen ( s ) )		6269418	0					
ANR	6271297	Callee	STRCAT_BOUNDS		6269418	0					
ANR	6271298	Identifier	STRCAT_BOUNDS		6269418	0					
ANR	6271299	ArgumentList	strlen ( s )		6269418	1					
ANR	6271300	Argument	strlen ( s )		6269418	0					
ANR	6271301	CallExpression	strlen ( s )		6269418	0					
ANR	6271302	Callee	strlen		6269418	0					
ANR	6271303	Identifier	strlen		6269418	0					
ANR	6271304	ArgumentList	s		6269418	1					
ANR	6271305	Argument	s		6269418	0					
ANR	6271306	Identifier	s		6269418	0					
ANR	6271307	ExpressionStatement	"strcat ( out , s )"	534:7:11165:11180	6269418	4	True				
ANR	6271308	CallExpression	"strcat ( out , s )"		6269418	0					
ANR	6271309	Callee	strcat		6269418	0					
ANR	6271310	Identifier	strcat		6269418	0					
ANR	6271311	ArgumentList	out		6269418	1					
ANR	6271312	Argument	out		6269418	0					
ANR	6271313	Identifier	out		6269418	0					
ANR	6271314	Argument	s		6269418	1					
ANR	6271315	Identifier	s		6269418	0					
ANR	6271316	IfStatement	if ( is_last )		6269418	5					
ANR	6271317	Condition	is_last	535:11:11193:11199	6269418	0	True				
ANR	6271318	Identifier	is_last		6269418	0					
ANR	6271319	CompoundStatement		358:20:7306:7306	6269418	1					
ANR	6271320	ExpressionStatement	"strcat ( out , is_generic ? "">"" : "")"" )"	536:8:11212:11244	6269418	0	True				
ANR	6271321	CallExpression	"strcat ( out , is_generic ? "">"" : "")"" )"		6269418	0					
ANR	6271322	Callee	strcat		6269418	0					
ANR	6271323	Identifier	strcat		6269418	0					
ANR	6271324	ArgumentList	out		6269418	1					
ANR	6271325	Argument	out		6269418	0					
ANR	6271326	Identifier	out		6269418	0					
ANR	6271327	Argument	"is_generic ? "">"" : "")"""		6269418	1					
ANR	6271328	ConditionalExpression	"is_generic ? "">"" : "")"""		6269418	0					
ANR	6271329	Condition	is_generic		6269418	0					
ANR	6271330	Identifier	is_generic		6269418	0					
ANR	6271331	PrimaryExpression	""">"""		6269418	1					
ANR	6271332	PrimaryExpression	""")"""		6269418	2					
ANR	6271333	ExpressionStatement	is_first = ( * s != '_' )	537:8:11254:11276	6269418	1	True				
ANR	6271334	AssignmentExpression	is_first = ( * s != '_' )		6269418	0		=			
ANR	6271335	Identifier	is_first		6269418	0					
ANR	6271336	EqualityExpression	* s != '_'		6269418	1		!=			
ANR	6271337	UnaryOperationExpression	* s		6269418	0					
ANR	6271338	UnaryOperator	*		6269418	0					
ANR	6271339	Identifier	s		6269418	1					
ANR	6271340	PrimaryExpression	'_'		6269418	1					
ANR	6271341	IfStatement	if ( is_generic && ! is_first )		6269418	2					
ANR	6271342	Condition	is_generic && ! is_first	538:12:11290:11312	6269418	0	True				
ANR	6271343	AndExpression	is_generic && ! is_first		6269418	0		&&			
ANR	6271344	Identifier	is_generic		6269418	0					
ANR	6271345	UnaryOperationExpression	! is_first		6269418	1					
ANR	6271346	UnaryOperator	!		6269418	0					
ANR	6271347	Identifier	is_first		6269418	1					
ANR	6271348	CompoundStatement		361:37:7419:7419	6269418	1					
ANR	6271349	BreakStatement	break ;	539:9:11326:11331	6269418	0	True				
ANR	6271350	ElseStatement	else		6269418	0					
ANR	6271351	CompoundStatement		364:14:7461:7461	6269418	0					
ANR	6271352	ExpressionStatement	"strcat ( out , "", "" )"	542:8:11367:11385	6269418	0	True				
ANR	6271353	CallExpression	"strcat ( out , "", "" )"		6269418	0					
ANR	6271354	Callee	strcat		6269418	0					
ANR	6271355	Identifier	strcat		6269418	0					
ANR	6271356	ArgumentList	out		6269418	1					
ANR	6271357	Argument	out		6269418	0					
ANR	6271358	Identifier	out		6269418	0					
ANR	6271359	Argument	""", """		6269418	1					
ANR	6271360	PrimaryExpression	""", """		6269418	0					
ANR	6271361	ElseStatement	else		6269418	0					
ANR	6271362	CompoundStatement		367:13:7513:7513	6269418	0					
ANR	6271363	IfStatement	if ( attr )		6269418	0					
ANR	6271364	Condition	attr	545:11:11422:11425	6269418	0	True				
ANR	6271365	Identifier	attr		6269418	0					
ANR	6271366	CompoundStatement		368:17:7532:7532	6269418	1					
ANR	6271367	ExpressionStatement	"strcat ( out , "" -> "" )"	546:8:11438:11458	6269418	0	True				
ANR	6271368	CallExpression	"strcat ( out , "" -> "" )"		6269418	0					
ANR	6271369	Callee	strcat		6269418	0					
ANR	6271370	Identifier	strcat		6269418	0					
ANR	6271371	ArgumentList	out		6269418	1					
ANR	6271372	Argument	out		6269418	0					
ANR	6271373	Identifier	out		6269418	0					
ANR	6271374	Argument	""" -> """		6269418	1					
ANR	6271375	PrimaryExpression	""" -> """		6269418	0					
ANR	6271376	ExpressionStatement	STRCAT_BOUNDS ( strlen ( attr ) )	547:8:11468:11497	6269418	1	True				
ANR	6271377	CallExpression	STRCAT_BOUNDS ( strlen ( attr ) )		6269418	0					
ANR	6271378	Callee	STRCAT_BOUNDS		6269418	0					
ANR	6271379	Identifier	STRCAT_BOUNDS		6269418	0					
ANR	6271380	ArgumentList	strlen ( attr )		6269418	1					
ANR	6271381	Argument	strlen ( attr )		6269418	0					
ANR	6271382	CallExpression	strlen ( attr )		6269418	0					
ANR	6271383	Callee	strlen		6269418	0					
ANR	6271384	Identifier	strlen		6269418	0					
ANR	6271385	ArgumentList	attr		6269418	1					
ANR	6271386	Argument	attr		6269418	0					
ANR	6271387	Identifier	attr		6269418	0					
ANR	6271388	ExpressionStatement	"strcat ( out , attr )"	548:8:11507:11525	6269418	2	True				
ANR	6271389	CallExpression	"strcat ( out , attr )"		6269418	0					
ANR	6271390	Callee	strcat		6269418	0					
ANR	6271391	Identifier	strcat		6269418	0					
ANR	6271392	ArgumentList	out		6269418	1					
ANR	6271393	Argument	out		6269418	0					
ANR	6271394	Identifier	out		6269418	0					
ANR	6271395	Argument	attr		6269418	1					
ANR	6271396	Identifier	attr		6269418	0					
ANR	6271397	ElseStatement	else		6269418	0					
ANR	6271398	CompoundStatement		374:12:7660:7660	6269418	0					
ANR	6271399	IfStatement	if ( attr )		6269418	0					
ANR	6271400	Condition	attr	552:10:11568:11571	6269418	0	True				
ANR	6271401	Identifier	attr		6269418	0					
ANR	6271402	CompoundStatement		375:16:7678:7678	6269418	1					
ANR	6271403	ExpressionStatement	"strcat ( out , "" -> "" )"	553:7:11583:11603	6269418	0	True				
ANR	6271404	CallExpression	"strcat ( out , "" -> "" )"		6269418	0					
ANR	6271405	Callee	strcat		6269418	0					
ANR	6271406	Identifier	strcat		6269418	0					
ANR	6271407	ArgumentList	out		6269418	1					
ANR	6271408	Argument	out		6269418	0					
ANR	6271409	Identifier	out		6269418	0					
ANR	6271410	Argument	""" -> """		6269418	1					
ANR	6271411	PrimaryExpression	""" -> """		6269418	0					
ANR	6271412	ExpressionStatement	STRCAT_BOUNDS ( strlen ( attr ) )	554:7:11612:11641	6269418	1	True				
ANR	6271413	CallExpression	STRCAT_BOUNDS ( strlen ( attr ) )		6269418	0					
ANR	6271414	Callee	STRCAT_BOUNDS		6269418	0					
ANR	6271415	Identifier	STRCAT_BOUNDS		6269418	0					
ANR	6271416	ArgumentList	strlen ( attr )		6269418	1					
ANR	6271417	Argument	strlen ( attr )		6269418	0					
ANR	6271418	CallExpression	strlen ( attr )		6269418	0					
ANR	6271419	Callee	strlen		6269418	0					
ANR	6271420	Identifier	strlen		6269418	0					
ANR	6271421	ArgumentList	attr		6269418	1					
ANR	6271422	Argument	attr		6269418	0					
ANR	6271423	Identifier	attr		6269418	0					
ANR	6271424	ExpressionStatement	"strcat ( out , attr )"	555:7:11650:11668	6269418	2	True				
ANR	6271425	CallExpression	"strcat ( out , attr )"		6269418	0					
ANR	6271426	Callee	strcat		6269418	0					
ANR	6271427	Identifier	strcat		6269418	0					
ANR	6271428	ArgumentList	out		6269418	1					
ANR	6271429	Argument	out		6269418	0					
ANR	6271430	Identifier	out		6269418	0					
ANR	6271431	Argument	attr		6269418	1					
ANR	6271432	Identifier	attr		6269418	0					
ANR	6271433	ExpressionStatement	q += len	558:5:11690:11698	6269418	5	True				
ANR	6271434	AssignmentExpression	q += len		6269418	0		+=			
ANR	6271435	Identifier	q		6269418	0					
ANR	6271436	Identifier	len		6269418	1					
ANR	6271437	ExpressionStatement	p = q	559:5:11705:11710	6269418	6	True				
ANR	6271438	AssignmentExpression	p = q		6269418	0		=			
ANR	6271439	Identifier	p		6269418	0					
ANR	6271440	Identifier	q		6269418	1					
ANR	6271441	ElseStatement	else		6269418	0					
ANR	6271442	CompoundStatement		389:5:7899:7925	6269418	0					
ANR	6271443	IfStatement	if ( q && * q )		6269418	0					
ANR	6271444	Condition	q && * q	561:9:11734:11740	6269418	0	True				
ANR	6271445	AndExpression	q && * q		6269418	0		&&			
ANR	6271446	Identifier	q		6269418	0					
ANR	6271447	UnaryOperationExpression	* q		6269418	1					
ANR	6271448	UnaryOperator	*		6269418	0					
ANR	6271449	Identifier	q		6269418	1					
ANR	6271450	CompoundStatement		384:18:7847:7847	6269418	1					
ANR	6271451	ExpressionStatement	q ++	562:6:11751:11754	6269418	0	True				
ANR	6271452	PostIncDecOperationExpression	q ++		6269418	0					
ANR	6271453	Identifier	q		6269418	0					
ANR	6271454	IncDec	++		6269418	1					
ANR	6271455	ElseStatement	else		6269418	0					
ANR	6271456	CompoundStatement		386:12:7872:7872	6269418	0					
ANR	6271457	BreakStatement	break ;	564:6:11776:11781	6269418	0	True				
ANR	6271458	IdentifierDeclStatement	"char * n = strstr ( q , ""__"" ) ;"	566:5:11795:11821	6269418	1	True				
ANR	6271459	IdentifierDecl	"* n = strstr ( q , ""__"" )"		6269418	0					
ANR	6271460	IdentifierDeclType	char *		6269418	0					
ANR	6271461	Identifier	n		6269418	1					
ANR	6271462	AssignmentExpression	"* n = strstr ( q , ""__"" )"		6269418	2		=			
ANR	6271463	Identifier	n		6269418	0					
ANR	6271464	CallExpression	"strstr ( q , ""__"" )"		6269418	1					
ANR	6271465	Callee	strstr		6269418	0					
ANR	6271466	Identifier	strstr		6269418	0					
ANR	6271467	ArgumentList	q		6269418	1					
ANR	6271468	Argument	q		6269418	0					
ANR	6271469	Identifier	q		6269418	0					
ANR	6271470	Argument	"""__"""		6269418	1					
ANR	6271471	PrimaryExpression	"""__"""		6269418	0					
ANR	6271472	IfStatement	if ( n )		6269418	2					
ANR	6271473	Condition	n	567:9:11832:11832	6269418	0	True				
ANR	6271474	Identifier	n		6269418	0					
ANR	6271475	CompoundStatement		390:12:7939:7939	6269418	1					
ANR	6271476	ExpressionStatement	q = n + 1	568:6:11843:11852	6269418	0	True				
ANR	6271477	AssignmentExpression	q = n + 1		6269418	0		=			
ANR	6271478	Identifier	q		6269418	0					
ANR	6271479	AdditiveExpression	n + 1		6269418	1		+			
ANR	6271480	Identifier	n		6269418	0					
ANR	6271481	PrimaryExpression	1		6269418	1					
ANR	6271482	ElseStatement	else		6269418	0					
ANR	6271483	CompoundStatement		392:12:7970:7970	6269418	0					
ANR	6271484	ExpressionStatement	"n = strstr ( q , ""_"" )"	570:6:11874:11893	6269418	0	True				
ANR	6271485	AssignmentExpression	"n = strstr ( q , ""_"" )"		6269418	0		=			
ANR	6271486	Identifier	n		6269418	0					
ANR	6271487	CallExpression	"strstr ( q , ""_"" )"		6269418	1					
ANR	6271488	Callee	strstr		6269418	0					
ANR	6271489	Identifier	strstr		6269418	0					
ANR	6271490	ArgumentList	q		6269418	1					
ANR	6271491	Argument	q		6269418	0					
ANR	6271492	Identifier	q		6269418	0					
ANR	6271493	Argument	"""_"""		6269418	1					
ANR	6271494	PrimaryExpression	"""_"""		6269418	0					
ANR	6271495	IfStatement	if ( n )		6269418	1					
ANR	6271496	Condition	n	571:10:11905:11905	6269418	0	True				
ANR	6271497	Identifier	n		6269418	0					
ANR	6271498	CompoundStatement		394:13:8012:8012	6269418	1					
ANR	6271499	ExpressionStatement	q = n + 1	572:7:11917:11926	6269418	0	True				
ANR	6271500	AssignmentExpression	q = n + 1		6269418	0		=			
ANR	6271501	Identifier	q		6269418	0					
ANR	6271502	AdditiveExpression	n + 1		6269418	1		+			
ANR	6271503	Identifier	n		6269418	0					
ANR	6271504	PrimaryExpression	1		6269418	1					
ANR	6271505	ElseStatement	else		6269418	0					
ANR	6271506	CompoundStatement		396:13:8045:8045	6269418	0					
ANR	6271507	BreakStatement	break ;	574:7:11950:11955	6269418	0	True				
ANR	6271508	ElseStatement	else		6269418	0					
ANR	6271509	CompoundStatement		403:8:8099:8099	6269418	0					
ANR	6271510	IfStatement	if ( * out )		6269418	31					
ANR	6271511	Condition	* out	583:5:12048:12051	6269418	0	True				
ANR	6271512	UnaryOperationExpression	* out		6269418	0					
ANR	6271513	UnaryOperator	*		6269418	0					
ANR	6271514	Identifier	out		6269418	1					
ANR	6271515	CompoundStatement		411:2:8209:8240	6269418	1					
ANR	6271516	IfStatement	if ( tail )		6269418	0					
ANR	6271517	Condition	tail	584:6:12062:12065	6269418	0	True				
ANR	6271518	Identifier	tail		6269418	0					
ANR	6271519	CompoundStatement		407:12:8172:8172	6269418	1					
ANR	6271520	ExpressionStatement	"strcat ( out , tail )"	585:3:12073:12091	6269418	0	True				
ANR	6271521	CallExpression	"strcat ( out , tail )"		6269418	0					
ANR	6271522	Callee	strcat		6269418	0					
ANR	6271523	Identifier	strcat		6269418	0					
ANR	6271524	ArgumentList	out		6269418	1					
ANR	6271525	Argument	out		6269418	0					
ANR	6271526	Identifier	out		6269418	0					
ANR	6271527	Argument	tail		6269418	1					
ANR	6271528	Identifier	tail		6269418	0					
ANR	6271529	IdentifierDeclStatement	"char * p , * outstr = strdup ( out ) ;"	588:2:12105:12136	6269418	1	True				
ANR	6271530	IdentifierDecl	* p		6269418	0					
ANR	6271531	IdentifierDeclType	char *		6269418	0					
ANR	6271532	Identifier	p		6269418	1					
ANR	6271533	IdentifierDecl	* outstr = strdup ( out )		6269418	1					
ANR	6271534	IdentifierDeclType	char *		6269418	0					
ANR	6271535	Identifier	outstr		6269418	1					
ANR	6271536	AssignmentExpression	* outstr = strdup ( out )		6269418	2		=			
ANR	6271537	Identifier	outstr		6269418	0					
ANR	6271538	CallExpression	strdup ( out )		6269418	1					
ANR	6271539	Callee	strdup		6269418	0					
ANR	6271540	Identifier	strdup		6269418	0					
ANR	6271541	ArgumentList	out		6269418	1					
ANR	6271542	Argument	out		6269418	0					
ANR	6271543	Identifier	out		6269418	0					
ANR	6271544	ExpressionStatement	p = outstr	589:2:12140:12150	6269418	2	True				
ANR	6271545	AssignmentExpression	p = outstr		6269418	0		=			
ANR	6271546	Identifier	p		6269418	0					
ANR	6271547	Identifier	outstr		6269418	1					
ANR	6271548	ForStatement	for ( ; ; )		6269418	3					
ANR	6271549	CompoundStatement		413:11:8267:8267	6269418	0					
ANR	6271550	ExpressionStatement	"p = strstr ( p , "")("" )"	591:3:12168:12188	6269418	0	True				
ANR	6271551	AssignmentExpression	"p = strstr ( p , "")("" )"		6269418	0		=			
ANR	6271552	Identifier	p		6269418	0					
ANR	6271553	CallExpression	"strstr ( p , "")("" )"		6269418	1					
ANR	6271554	Callee	strstr		6269418	0					
ANR	6271555	Identifier	strstr		6269418	0					
ANR	6271556	ArgumentList	p		6269418	1					
ANR	6271557	Argument	p		6269418	0					
ANR	6271558	Identifier	p		6269418	0					
ANR	6271559	Argument	""")("""		6269418	1					
ANR	6271560	PrimaryExpression	""")("""		6269418	0					
ANR	6271561	IfStatement	if ( p )		6269418	1					
ANR	6271562	Condition	p	592:7:12197:12197	6269418	0	True				
ANR	6271563	Identifier	p		6269418	0					
ANR	6271564	CompoundStatement		415:10:8304:8304	6269418	1					
ANR	6271565	ExpressionStatement	p [ 0 ] = '_'	593:4:12206:12216	6269418	0	True				
ANR	6271566	AssignmentExpression	p [ 0 ] = '_'		6269418	0		=			
ANR	6271567	ArrayIndexing	p [ 0 ]		6269418	0					
ANR	6271568	Identifier	p		6269418	0					
ANR	6271569	PrimaryExpression	0		6269418	1					
ANR	6271570	PrimaryExpression	'_'		6269418	1					
ANR	6271571	ExpressionStatement	p [ 1 ] = '_'	594:4:12222:12232	6269418	1	True				
ANR	6271572	AssignmentExpression	p [ 1 ] = '_'		6269418	0		=			
ANR	6271573	ArrayIndexing	p [ 1 ]		6269418	0					
ANR	6271574	Identifier	p		6269418	0					
ANR	6271575	PrimaryExpression	1		6269418	1					
ANR	6271576	PrimaryExpression	'_'		6269418	1					
ANR	6271577	ExpressionStatement	p += 2	595:4:12238:12242	6269418	2	True				
ANR	6271578	AssignmentExpression	p += 2		6269418	0		+=			
ANR	6271579	Identifier	p		6269418	0					
ANR	6271580	PrimaryExpression	2		6269418	1					
ANR	6271581	ElseStatement	else		6269418	0					
ANR	6271582	CompoundStatement		419:10:8358:8358	6269418	0					
ANR	6271583	BreakStatement	break ;	597:4:12260:12265	6269418	0	True				
ANR	6271584	ReturnStatement	return outstr ;	600:2:12278:12291	6269418	4	True				
ANR	6271585	Identifier	outstr		6269418	0					
ANR	6271586	ReturnStatement	return NULL ;	603:1:12304:12315	6269418	32	True				
ANR	6271587	Identifier	NULL		6269418	0					
ANR	6271588	ReturnType	R_API char *		6269418	1					
ANR	6271589	Identifier	r_bin_demangle_swift		6269418	2					
ANR	6271590	ParameterList	"const char * s , bool syscmd"		6269418	3					
ANR	6271591	Parameter	const char * s	178:33:3867:3879	6269418	0	True				
ANR	6271592	ParameterType	const char *		6269418	0					
ANR	6271593	Identifier	s		6269418	1					
ANR	6271594	Parameter	bool syscmd	178:48:3882:3892	6269418	1	True				
ANR	6271595	ParameterType	bool		6269418	0					
ANR	6271596	Identifier	syscmd		6269418	1					
ANR	6271597	CFGEntryNode	ENTRY		6269418		True				
ANR	6271598	CFGExitNode	EXIT		6269418		True				
ANR	6271599	InfiniteForNode	true		6269418		True				
ANR	6271600	CFGErrorNode	ERROR		6269418		True				
ANR	6271601	Symbol	resolve		6269418						
ANR	6271602	Symbol	* attr2		6269418						
ANR	6271603	Symbol	strchr		6269418						
ANR	6271604	Symbol	strlen		6269418						
ANR	6271605	Symbol	strncmp		6269418						
ANR	6271606	Symbol	is_last		6269418						
ANR	6271607	Symbol	len		6269418						
ANR	6271608	Symbol	element		6269418						
ANR	6271609	Symbol	strcmp		6269418						
ANR	6271610	Symbol	res		6269418						
ANR	6271611	Symbol	metas		6269418						
ANR	6271612	Symbol	NULL		6269418						
ANR	6271613	Symbol	swift_demangle_lib		6269418						
ANR	6271614	Symbol	str		6269418						
ANR	6271615	Symbol	retmode		6269418						
ANR	6271616	Symbol	& attr2		6269418						
ANR	6271617	Symbol	outstr		6269418						
ANR	6271618	Symbol	strstr		6269418						
ANR	6271619	Symbol	* out		6269418						
ANR	6271620	Symbol	name		6269418						
ANR	6271621	Symbol	* attr		6269418						
ANR	6271622	Symbol	& len		6269418						
ANR	6271623	Symbol	* element		6269418						
ANR	6271624	Symbol	flags		6269418						
ANR	6271625	Symbol	out		6269418						
ANR	6271626	Symbol	syscmd		6269418						
ANR	6271627	Symbol	Q		6269418						
ANR	6271628	Symbol	q_start		6269418						
ANR	6271629	Symbol	numpos		6269418						
ANR	6271630	Symbol	attr		6269418						
ANR	6271631	Symbol	getstring		6269418						
ANR	6271632	Symbol	* name		6269418						
ANR	6271633	Symbol	types		6269418						
ANR	6271634	Symbol	& attr		6269418						
ANR	6271635	Symbol	tail		6269418						
ANR	6271636	Symbol	is_generic		6269418						
ANR	6271637	Symbol	is_first		6269418						
ANR	6271638	Symbol	q_end		6269418						
ANR	6271639	Symbol	i		6269418						
ANR	6271640	Symbol	R_MIN		6269418						
ANR	6271641	Symbol	attr2		6269418						
ANR	6271642	Symbol	n		6269418						
ANR	6271643	Symbol	IS_DIGIT		6269418						
ANR	6271644	Symbol	p		6269418						
ANR	6271645	Symbol	q		6269418						
ANR	6271646	Symbol	s		6269418						
ANR	6271647	Symbol	* i		6269418						
ANR	6271648	Symbol	swift_demangle_cmd		6269418						
ANR	6271649	Symbol	& n		6269418						
ANR	6271650	Symbol	getnum		6269418						
ANR	6271651	Symbol	* p		6269418						
ANR	6271652	Symbol	* q		6269418						
ANR	6271653	Symbol	strdup		6269418						
ANR	6271654	Symbol	* s		6269418						
ANR	6271655	Symbol	* len		6269418						
ANR	6271656	ClassDef	<unnamed>	609:8:12358:12409							
ANR	6271657	DeclStmt									
ANR	6271658	Decl							const char	const char *	sym
ANR	6271659	DeclStmt									
ANR	6271660	Decl							const char	const char *	dem
ANR	6271661	DeclStmt									
ANR	6271662	Decl									Test
ANR	6271663	DeclStmt									
ANR	6271664	Decl							Test	Test [ ]	swift_tests
ANR	6271665	Function	main	722:0:15899:16717							
ANR	6271666	FunctionDef	"main (int argc , char * * argv)"		6271665	0					
ANR	6271667	CompoundStatement		722:32:15931:16717	6271665	0					
ANR	6271668	IdentifierDeclStatement	int rc = 0 ;	723:1:15934:15944	6271665	0	True				
ANR	6271669	IdentifierDecl	rc = 0		6271665	0					
ANR	6271670	IdentifierDeclType	int		6271665	0					
ANR	6271671	Identifier	rc		6271665	1					
ANR	6271672	AssignmentExpression	rc = 0		6271665	2		=			
ANR	6271673	Identifier	rc		6271665	0					
ANR	6271674	PrimaryExpression	0		6271665	1					
ANR	6271675	IdentifierDeclStatement	char * ret ;	724:1:15947:15956	6271665	1	True				
ANR	6271676	IdentifierDecl	* ret		6271665	0					
ANR	6271677	IdentifierDeclType	char *		6271665	0					
ANR	6271678	Identifier	ret		6271665	1					
ANR	6271679	IfStatement	if ( argc > 1 )		6271665	2					
ANR	6271680	Condition	argc > 1	725:5:15963:15970	6271665	0	True				
ANR	6271681	RelationalExpression	argc > 1		6271665	0		>			
ANR	6271682	Identifier	argc		6271665	0					
ANR	6271683	PrimaryExpression	1		6271665	1					
ANR	6271684	CompoundStatement		4:15:41:41	6271665	1					
ANR	6271685	ExpressionStatement	"ret = r_bin_demangle_swift ( argv [ 1 ] , 0 )"	726:2:15977:16016	6271665	0	True				
ANR	6271686	AssignmentExpression	"ret = r_bin_demangle_swift ( argv [ 1 ] , 0 )"		6271665	0		=			
ANR	6271687	Identifier	ret		6271665	0					
ANR	6271688	CallExpression	"r_bin_demangle_swift ( argv [ 1 ] , 0 )"		6271665	1					
ANR	6271689	Callee	r_bin_demangle_swift		6271665	0					
ANR	6271690	Identifier	r_bin_demangle_swift		6271665	0					
ANR	6271691	ArgumentList	argv [ 1 ]		6271665	1					
ANR	6271692	Argument	argv [ 1 ]		6271665	0					
ANR	6271693	ArrayIndexing	argv [ 1 ]		6271665	0					
ANR	6271694	Identifier	argv		6271665	0					
ANR	6271695	PrimaryExpression	1		6271665	1					
ANR	6271696	Argument	0		6271665	1					
ANR	6271697	PrimaryExpression	0		6271665	0					
ANR	6271698	IfStatement	if ( ret )		6271665	1					
ANR	6271699	Condition	ret	727:6:16024:16026	6271665	0	True				
ANR	6271700	Identifier	ret		6271665	0					
ANR	6271701	CompoundStatement		6:11:97:97	6271665	1					
ANR	6271702	ExpressionStatement	"printf ( ""%s\\n"" , ret )"	728:3:16034:16054	6271665	0	True				
ANR	6271703	CallExpression	"printf ( ""%s\\n"" , ret )"		6271665	0					
ANR	6271704	Callee	printf		6271665	0					
ANR	6271705	Identifier	printf		6271665	0					
ANR	6271706	ArgumentList	"""%s\\n"""		6271665	1					
ANR	6271707	Argument	"""%s\\n"""		6271665	0					
ANR	6271708	PrimaryExpression	"""%s\\n"""		6271665	0					
ANR	6271709	Argument	ret		6271665	1					
ANR	6271710	Identifier	ret		6271665	0					
ANR	6271711	ExpressionStatement	free ( ret )	729:3:16059:16069	6271665	1	True				
ANR	6271712	CallExpression	free ( ret )		6271665	0					
ANR	6271713	Callee	free		6271665	0					
ANR	6271714	Identifier	free		6271665	0					
ANR	6271715	ArgumentList	ret		6271665	1					
ANR	6271716	Argument	ret		6271665	0					
ANR	6271717	Identifier	ret		6271665	0					
ANR	6271718	ElseStatement	else		6271665	0					
ANR	6271719	CompoundStatement		11:2:155:164	6271665	0					
ANR	6271720	IdentifierDeclStatement	int i = 0 ;	732:2:16087:16096	6271665	0	True				
ANR	6271721	IdentifierDecl	i = 0		6271665	0					
ANR	6271722	IdentifierDeclType	int		6271665	0					
ANR	6271723	Identifier	i		6271665	1					
ANR	6271724	AssignmentExpression	i = 0		6271665	2		=			
ANR	6271725	Identifier	i		6271665	0					
ANR	6271726	PrimaryExpression	0		6271665	1					
ANR	6271727	ForStatement	for ( i = 0 ; swift_tests [ i ] . sym ; i ++ )		6271665	1					
ANR	6271728	ForInit	i = 0 ;	733:7:16105:16110	6271665	0	True				
ANR	6271729	AssignmentExpression	i = 0		6271665	0		=			
ANR	6271730	Identifier	i		6271665	0					
ANR	6271731	PrimaryExpression	0		6271665	1					
ANR	6271732	Condition	swift_tests [ i ] . sym	733:14:16112:16129	6271665	1	True				
ANR	6271733	MemberAccess	swift_tests [ i ] . sym		6271665	0					
ANR	6271734	ArrayIndexing	swift_tests [ i ]		6271665	0					
ANR	6271735	Identifier	swift_tests		6271665	0					
ANR	6271736	Identifier	i		6271665	1					
ANR	6271737	Identifier	sym		6271665	1					
ANR	6271738	PostIncDecOperationExpression	i ++	733:34:16132:16134	6271665	2	True				
ANR	6271739	Identifier	i		6271665	0					
ANR	6271740	IncDec	++		6271665	1					
ANR	6271741	CompoundStatement		13:3:210:238	6271665	3					
ANR	6271742	IdentifierDeclStatement	Test * test = & swift_tests [ i ] ;	734:3:16142:16170	6271665	0	True				
ANR	6271743	IdentifierDecl	* test = & swift_tests [ i ]		6271665	0					
ANR	6271744	IdentifierDeclType	Test *		6271665	0					
ANR	6271745	Identifier	test		6271665	1					
ANR	6271746	AssignmentExpression	* test = & swift_tests [ i ]		6271665	2		=			
ANR	6271747	Identifier	test		6271665	0					
ANR	6271748	UnaryOperationExpression	& swift_tests [ i ]		6271665	1					
ANR	6271749	UnaryOperator	&		6271665	0					
ANR	6271750	ArrayIndexing	swift_tests [ i ]		6271665	1					
ANR	6271751	Identifier	swift_tests		6271665	0					
ANR	6271752	Identifier	i		6271665	1					
ANR	6271753	ExpressionStatement	"printf ( ""[>>] %s\\n"" , test -> sym )"	735:3:16175:16206	6271665	1	True				
ANR	6271754	CallExpression	"printf ( ""[>>] %s\\n"" , test -> sym )"		6271665	0					
ANR	6271755	Callee	printf		6271665	0					
ANR	6271756	Identifier	printf		6271665	0					
ANR	6271757	ArgumentList	"""[>>] %s\\n"""		6271665	1					
ANR	6271758	Argument	"""[>>] %s\\n"""		6271665	0					
ANR	6271759	PrimaryExpression	"""[>>] %s\\n"""		6271665	0					
ANR	6271760	Argument	test -> sym		6271665	1					
ANR	6271761	PtrMemberAccess	test -> sym		6271665	0					
ANR	6271762	Identifier	test		6271665	0					
ANR	6271763	Identifier	sym		6271665	1					
ANR	6271764	ExpressionStatement	"ret = r_bin_demangle_swift ( test -> sym , 0 )"	736:3:16211:16252	6271665	2	True				
ANR	6271765	AssignmentExpression	"ret = r_bin_demangle_swift ( test -> sym , 0 )"		6271665	0		=			
ANR	6271766	Identifier	ret		6271665	0					
ANR	6271767	CallExpression	"r_bin_demangle_swift ( test -> sym , 0 )"		6271665	1					
ANR	6271768	Callee	r_bin_demangle_swift		6271665	0					
ANR	6271769	Identifier	r_bin_demangle_swift		6271665	0					
ANR	6271770	ArgumentList	test -> sym		6271665	1					
ANR	6271771	Argument	test -> sym		6271665	0					
ANR	6271772	PtrMemberAccess	test -> sym		6271665	0					
ANR	6271773	Identifier	test		6271665	0					
ANR	6271774	Identifier	sym		6271665	1					
ANR	6271775	Argument	0		6271665	1					
ANR	6271776	PrimaryExpression	0		6271665	0					
ANR	6271777	IfStatement	if ( ret )		6271665	3					
ANR	6271778	Condition	ret	737:7:16261:16263	6271665	0	True				
ANR	6271779	Identifier	ret		6271665	0					
ANR	6271780	CompoundStatement		16:12:334:334	6271665	1					
ANR	6271781	IfStatement	"if ( test -> dem && ! strcmp ( ret , test -> dem ) )"		6271665	0					
ANR	6271782	Condition	"test -> dem && ! strcmp ( ret , test -> dem )"	738:8:16276:16312	6271665	0	True				
ANR	6271783	AndExpression	"test -> dem && ! strcmp ( ret , test -> dem )"		6271665	0		&&			
ANR	6271784	PtrMemberAccess	test -> dem		6271665	0					
ANR	6271785	Identifier	test		6271665	0					
ANR	6271786	Identifier	dem		6271665	1					
ANR	6271787	UnaryOperationExpression	"! strcmp ( ret , test -> dem )"		6271665	1					
ANR	6271788	UnaryOperator	!		6271665	0					
ANR	6271789	CallExpression	"strcmp ( ret , test -> dem )"		6271665	1					
ANR	6271790	Callee	strcmp		6271665	0					
ANR	6271791	Identifier	strcmp		6271665	0					
ANR	6271792	ArgumentList	ret		6271665	1					
ANR	6271793	Argument	ret		6271665	0					
ANR	6271794	Identifier	ret		6271665	0					
ANR	6271795	Argument	test -> dem		6271665	1					
ANR	6271796	PtrMemberAccess	test -> dem		6271665	0					
ANR	6271797	Identifier	test		6271665	0					
ANR	6271798	Identifier	dem		6271665	1					
ANR	6271799	CompoundStatement		17:47:383:383	6271665	1					
ANR	6271800	Statement	printf	739:5:16322:16327	6271665	0	True				
ANR	6271801	Statement	(	739:12:16329:16329	6271665	1	True				
ANR	6271802	Statement	Color_GREEN	739:13:16330:16340	6271665	2	True				
ANR	6271803	Statement	"""[OK]"""	739:24:16341:16346	6271665	3	True				
ANR	6271804	Statement	Color_RESET	739:30:16347:16357	6271665	4	True				
ANR	6271805	Statement	"""  %s\\n"""	739:41:16358:16365	6271665	5	True				
ANR	6271806	Statement	","	739:49:16366:16366	6271665	6	True				
ANR	6271807	Statement	ret	739:51:16368:16370	6271665	7	True				
ANR	6271808	Statement	)	739:54:16371:16371	6271665	8	True				
ANR	6271809	ExpressionStatement		739:55:16372:16372	6271665	9	True				
ANR	6271810	ElseStatement	else		6271665	0					
ANR	6271811	CompoundStatement		19:11:453:453	6271665	0					
ANR	6271812	Statement	printf	741:5:16392:16397	6271665	0	True				
ANR	6271813	Statement	(	741:12:16399:16399	6271665	1	True				
ANR	6271814	Statement	Color_RED	741:13:16400:16408	6271665	2	True				
ANR	6271815	Statement	"""[XX]"""	741:22:16409:16414	6271665	3	True				
ANR	6271816	Statement	Color_RESET	741:28:16415:16425	6271665	4	True				
ANR	6271817	Statement	"""  %s\\n"""	741:39:16426:16433	6271665	5	True				
ANR	6271818	Statement	","	741:47:16434:16434	6271665	6	True				
ANR	6271819	Statement	ret	741:49:16436:16438	6271665	7	True				
ANR	6271820	Statement	)	741:52:16439:16439	6271665	8	True				
ANR	6271821	ExpressionStatement		741:53:16440:16440	6271665	9	True				
ANR	6271822	Statement	printf	742:5:16447:16452	6271665	10	True				
ANR	6271823	Statement	(	742:12:16454:16454	6271665	11	True				
ANR	6271824	Statement	Color_YELLOW	742:13:16455:16466	6271665	12	True				
ANR	6271825	Statement	"""[MUSTBE]"""	742:25:16467:16476	6271665	13	True				
ANR	6271826	Statement	Color_RESET	742:35:16477:16487	6271665	14	True				
ANR	6271827	Statement	"""  %s\\n"""	742:46:16488:16495	6271665	15	True				
ANR	6271828	Statement	","	742:54:16496:16496	6271665	16	True				
ANR	6271829	Statement	test	742:56:16498:16501	6271665	17	True				
ANR	6271830	Statement	->	742:60:16502:16503	6271665	18	True				
ANR	6271831	Statement	dem	742:62:16504:16506	6271665	19	True				
ANR	6271832	Statement	)	742:65:16507:16507	6271665	20	True				
ANR	6271833	ExpressionStatement		742:66:16508:16508	6271665	21	True				
ANR	6271834	ExpressionStatement	rc = 1	743:5:16515:16521	6271665	22	True				
ANR	6271835	AssignmentExpression	rc = 1		6271665	0		=			
ANR	6271836	Identifier	rc		6271665	0					
ANR	6271837	PrimaryExpression	1		6271665	1					
ANR	6271838	ExpressionStatement	free ( ret )	745:4:16533:16543	6271665	1	True				
ANR	6271839	CallExpression	free ( ret )		6271665	0					
ANR	6271840	Callee	free		6271665	0					
ANR	6271841	Identifier	free		6271665	0					
ANR	6271842	ArgumentList	ret		6271665	1					
ANR	6271843	Argument	ret		6271665	0					
ANR	6271844	Identifier	ret		6271665	0					
ANR	6271845	ElseStatement	else		6271665	0					
ANR	6271846	CompoundStatement		25:10:623:623	6271665	0					
ANR	6271847	Statement	printf	747:4:16561:16566	6271665	0	True				
ANR	6271848	Statement	(	747:11:16568:16568	6271665	1	True				
ANR	6271849	Statement	Color_RED	747:12:16569:16577	6271665	2	True				
ANR	6271850	Statement	"""[XX]"""	747:21:16578:16583	6271665	3	True				
ANR	6271851	Statement	Color_RESET	747:27:16584:16594	6271665	4	True				
ANR	6271852	Statement	"""  \\""(null)\\""\\n"""	747:38:16595:16610	6271665	5	True				
ANR	6271853	Statement	)	747:54:16611:16611	6271665	6	True				
ANR	6271854	ExpressionStatement		747:55:16612:16612	6271665	7	True				
ANR	6271855	Statement	printf	748:4:16618:16623	6271665	8	True				
ANR	6271856	Statement	(	748:11:16625:16625	6271665	9	True				
ANR	6271857	Statement	Color_YELLOW	748:12:16626:16637	6271665	10	True				
ANR	6271858	Statement	"""[MUSTBE]"""	748:24:16638:16647	6271665	11	True				
ANR	6271859	Statement	Color_RESET	748:34:16648:16658	6271665	12	True				
ANR	6271860	Statement	"""  %s\\n"""	748:45:16659:16666	6271665	13	True				
ANR	6271861	Statement	","	748:53:16667:16667	6271665	14	True				
ANR	6271862	Statement	test	748:55:16669:16672	6271665	15	True				
ANR	6271863	Statement	->	748:59:16673:16674	6271665	16	True				
ANR	6271864	Statement	dem	748:61:16675:16677	6271665	17	True				
ANR	6271865	Statement	)	748:64:16678:16678	6271665	18	True				
ANR	6271866	ExpressionStatement		748:65:16679:16679	6271665	19	True				
ANR	6271867	ExpressionStatement	rc = 1	749:4:16685:16691	6271665	20	True				
ANR	6271868	AssignmentExpression	rc = 1		6271665	0		=			
ANR	6271869	Identifier	rc		6271665	0					
ANR	6271870	PrimaryExpression	1		6271665	1					
ANR	6271871	ReturnStatement	return rc ;	753:1:16706:16715	6271665	3	True				
ANR	6271872	Identifier	rc		6271665	0					
ANR	6271873	ReturnType	int		6271665	1					
ANR	6271874	Identifier	main		6271665	2					
ANR	6271875	ParameterList	"int argc , char * * argv"		6271665	3					
ANR	6271876	Parameter	int argc	722:9:15908:15915	6271665	0	True				
ANR	6271877	ParameterType	int		6271665	0					
ANR	6271878	Identifier	argc		6271665	1					
ANR	6271879	Parameter	char * * argv	722:19:15918:15928	6271665	1	True				
ANR	6271880	ParameterType	char * *		6271665	0					
ANR	6271881	Identifier	argv		6271665	1					
ANR	6271882	CFGEntryNode	ENTRY		6271665		True				
ANR	6271883	CFGExitNode	EXIT		6271665		True				
ANR	6271884	Symbol	argc		6271665						
ANR	6271885	Symbol	ret		6271665						
ANR	6271886	Symbol	strcmp		6271665						
ANR	6271887	Symbol	* swift_tests		6271665						
ANR	6271888	Symbol	test		6271665						
ANR	6271889	Symbol	swift_tests [ i ] . sym		6271665						
ANR	6271890	Symbol	test -> dem		6271665						
ANR	6271891	Symbol	i		6271665						
ANR	6271892	Symbol	* argv		6271665						
ANR	6271893	Symbol	test -> sym		6271665						
ANR	6271894	Symbol	* test		6271665						
ANR	6271895	Symbol	argv		6271665						
ANR	6271896	Symbol	rc		6271665						
ANR	6271897	Symbol	* i		6271665						
ANR	6271898	Symbol	r_bin_demangle_swift		6271665						
ANR	6271899	Symbol	swift_tests		6271665						
