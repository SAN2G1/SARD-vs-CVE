command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4746148	File	data/converged/CVE-2019-16718~_radare2/libr_debug_p_native_xnu_xnu_debug.c								
ANR	4746149	DeclStmt									
ANR	4746150	Decl							task_t	task_t	task_dbg
ANR	4746151	DeclStmt									
ANR	4746152	Decl							extern int	"extern int ( int pid , uint64_t address , void * buffer , uint32_t buffersize )"	proc_regionfilename
ANR	4746153	ClassDef	<unnamed>	43:8:1033:1120							
ANR	4746154	DeclStmt									
ANR	4746155	Decl							ut32	ut32	version
ANR	4746156	DeclStmt									
ANR	4746157	Decl							ut32	ut32	info_array_count
ANR	4746158	DeclStmt									
ANR	4746159	Decl							ut32	ut32	info_array
ANR	4746160	DeclStmt									
ANR	4746161	Decl									DyldAllImageInfos32
ANR	4746162	ClassDef	<unnamed>	49:8:1131:1233							
ANR	4746163	DeclStmt									
ANR	4746164	Decl							ut32	ut32	image_load_address
ANR	4746165	DeclStmt									
ANR	4746166	Decl							ut32	ut32	image_file_path
ANR	4746167	DeclStmt									
ANR	4746168	Decl							ut32	ut32	image_file_mod_date
ANR	4746169	DeclStmt									
ANR	4746170	Decl									DyldImageInfo32
ANR	4746171	ClassDef	<unnamed>	55:8:1244:1331							
ANR	4746172	DeclStmt									
ANR	4746173	Decl							ut32	ut32	version
ANR	4746174	DeclStmt									
ANR	4746175	Decl							ut32	ut32	info_array_count
ANR	4746176	DeclStmt									
ANR	4746177	Decl							ut64	ut64	info_array
ANR	4746178	DeclStmt									
ANR	4746179	Decl									DyldAllImageInfos64
ANR	4746180	ClassDef	<unnamed>	61:8:1342:1444							
ANR	4746181	DeclStmt									
ANR	4746182	Decl							ut64	ut64	image_load_address
ANR	4746183	DeclStmt									
ANR	4746184	Decl							ut64	ut64	image_file_path
ANR	4746185	DeclStmt									
ANR	4746186	Decl							ut64	ut64	image_file_mod_date
ANR	4746187	DeclStmt									
ANR	4746188	Decl									DyldImageInfo64
ANR	4746189	Function	getcurthread	68:0:1535:1971							
ANR	4746190	FunctionDef	getcurthread (RDebug * dbg)		4746189	0					
ANR	4746191	CompoundStatement		68:43:1578:1971	4746189	0					
ANR	4746192	IdentifierDeclStatement	thread_t th ;	69:1:1581:1592	4746189	0	True				
ANR	4746193	IdentifierDecl	th		4746189	0					
ANR	4746194	IdentifierDeclType	thread_t		4746189	0					
ANR	4746195	Identifier	th		4746189	1					
ANR	4746196	IdentifierDeclStatement	thread_array_t threads = NULL ;	70:1:1595:1624	4746189	1	True				
ANR	4746197	IdentifierDecl	threads = NULL		4746189	0					
ANR	4746198	IdentifierDeclType	thread_array_t		4746189	0					
ANR	4746199	Identifier	threads		4746189	1					
ANR	4746200	AssignmentExpression	threads = NULL		4746189	2		=			
ANR	4746201	Identifier	NULL		4746189	0					
ANR	4746202	Identifier	NULL		4746189	1					
ANR	4746203	IdentifierDeclStatement	unsigned int n_threads = 0 ;	71:1:1627:1653	4746189	2	True				
ANR	4746204	IdentifierDecl	n_threads = 0		4746189	0					
ANR	4746205	IdentifierDeclType	unsigned int		4746189	0					
ANR	4746206	Identifier	n_threads		4746189	1					
ANR	4746207	AssignmentExpression	n_threads = 0		4746189	2		=			
ANR	4746208	Identifier	n_threads		4746189	0					
ANR	4746209	PrimaryExpression	0		4746189	1					
ANR	4746210	IdentifierDeclStatement	task_t t = pid_to_task ( dbg -> pid ) ;	72:1:1656:1689	4746189	3	True				
ANR	4746211	IdentifierDecl	t = pid_to_task ( dbg -> pid )		4746189	0					
ANR	4746212	IdentifierDeclType	task_t		4746189	0					
ANR	4746213	Identifier	t		4746189	1					
ANR	4746214	AssignmentExpression	t = pid_to_task ( dbg -> pid )		4746189	2		=			
ANR	4746215	Identifier	t		4746189	0					
ANR	4746216	CallExpression	pid_to_task ( dbg -> pid )		4746189	1					
ANR	4746217	Callee	pid_to_task		4746189	0					
ANR	4746218	Identifier	pid_to_task		4746189	0					
ANR	4746219	ArgumentList	dbg -> pid		4746189	1					
ANR	4746220	Argument	dbg -> pid		4746189	0					
ANR	4746221	PtrMemberAccess	dbg -> pid		4746189	0					
ANR	4746222	Identifier	dbg		4746189	0					
ANR	4746223	Identifier	pid		4746189	1					
ANR	4746224	IfStatement	if ( ! t )		4746189	4					
ANR	4746225	Condition	! t	73:5:1696:1697	4746189	0	True				
ANR	4746226	UnaryOperationExpression	! t		4746189	0					
ANR	4746227	UnaryOperator	!		4746189	0					
ANR	4746228	Identifier	t		4746189	1					
ANR	4746229	CompoundStatement		6:9:121:121	4746189	1					
ANR	4746230	ReturnStatement	return - 1 ;	74:2:1704:1713	4746189	0	True				
ANR	4746231	UnaryOperationExpression	- 1		4746189	0					
ANR	4746232	UnaryOperator	-		4746189	0					
ANR	4746233	PrimaryExpression	1		4746189	1					
ANR	4746234	IfStatement	"if ( task_threads ( t , & threads , & n_threads ) != KERN_SUCCESS )"		4746189	5					
ANR	4746235	Condition	"task_threads ( t , & threads , & n_threads ) != KERN_SUCCESS"	76:5:1723:1776	4746189	0	True				
ANR	4746236	EqualityExpression	"task_threads ( t , & threads , & n_threads ) != KERN_SUCCESS"		4746189	0		!=			
ANR	4746237	CallExpression	"task_threads ( t , & threads , & n_threads )"		4746189	0					
ANR	4746238	Callee	task_threads		4746189	0					
ANR	4746239	Identifier	task_threads		4746189	0					
ANR	4746240	ArgumentList	t		4746189	1					
ANR	4746241	Argument	t		4746189	0					
ANR	4746242	Identifier	t		4746189	0					
ANR	4746243	Argument	& threads		4746189	1					
ANR	4746244	UnaryOperationExpression	& threads		4746189	0					
ANR	4746245	UnaryOperator	&		4746189	0					
ANR	4746246	Identifier	threads		4746189	1					
ANR	4746247	Argument	& n_threads		4746189	2					
ANR	4746248	UnaryOperationExpression	& n_threads		4746189	0					
ANR	4746249	UnaryOperator	&		4746189	0					
ANR	4746250	Identifier	n_threads		4746189	1					
ANR	4746251	Identifier	KERN_SUCCESS		4746189	1					
ANR	4746252	CompoundStatement		9:61:200:200	4746189	1					
ANR	4746253	ReturnStatement	return - 1 ;	77:2:1783:1792	4746189	0	True				
ANR	4746254	UnaryOperationExpression	- 1		4746189	0					
ANR	4746255	UnaryOperator	-		4746189	0					
ANR	4746256	PrimaryExpression	1		4746189	1					
ANR	4746257	IfStatement	if ( n_threads > 0 )		4746189	6					
ANR	4746258	Condition	n_threads > 0	79:5:1802:1814	4746189	0	True				
ANR	4746259	RelationalExpression	n_threads > 0		4746189	0		>			
ANR	4746260	Identifier	n_threads		4746189	0					
ANR	4746261	PrimaryExpression	0		4746189	1					
ANR	4746262	CompoundStatement		12:20:238:238	4746189	1					
ANR	4746263	ExpressionStatement	"memcpy ( & th , threads , sizeof ( th ) )"	80:2:1821:1855	4746189	0	True				
ANR	4746264	CallExpression	"memcpy ( & th , threads , sizeof ( th ) )"		4746189	0					
ANR	4746265	Callee	memcpy		4746189	0					
ANR	4746266	Identifier	memcpy		4746189	0					
ANR	4746267	ArgumentList	& th		4746189	1					
ANR	4746268	Argument	& th		4746189	0					
ANR	4746269	UnaryOperationExpression	& th		4746189	0					
ANR	4746270	UnaryOperator	&		4746189	0					
ANR	4746271	Identifier	th		4746189	1					
ANR	4746272	Argument	threads		4746189	1					
ANR	4746273	Identifier	threads		4746189	0					
ANR	4746274	Argument	sizeof ( th )		4746189	2					
ANR	4746275	SizeofExpression	sizeof ( th )		4746189	0					
ANR	4746276	Sizeof	sizeof		4746189	0					
ANR	4746277	SizeofOperand	th		4746189	1					
ANR	4746278	ElseStatement	else		4746189	0					
ANR	4746279	CompoundStatement		14:8:286:286	4746189	0					
ANR	4746280	ExpressionStatement	th = - 1	82:2:1869:1876	4746189	0	True				
ANR	4746281	AssignmentExpression	th = - 1		4746189	0		=			
ANR	4746282	Identifier	th		4746189	0					
ANR	4746283	UnaryOperationExpression	- 1		4746189	1					
ANR	4746284	UnaryOperator	-		4746189	0					
ANR	4746285	PrimaryExpression	1		4746189	1					
ANR	4746286	ExpressionStatement	"vm_deallocate ( t , ( vm_address_t ) threads , n_threads * sizeof ( thread_act_t ) )"	84:1:1882:1957	4746189	7	True				
ANR	4746287	CallExpression	"vm_deallocate ( t , ( vm_address_t ) threads , n_threads * sizeof ( thread_act_t ) )"		4746189	0					
ANR	4746288	Callee	vm_deallocate		4746189	0					
ANR	4746289	Identifier	vm_deallocate		4746189	0					
ANR	4746290	ArgumentList	t		4746189	1					
ANR	4746291	Argument	t		4746189	0					
ANR	4746292	Identifier	t		4746189	0					
ANR	4746293	Argument	( vm_address_t ) threads		4746189	1					
ANR	4746294	CastExpression	( vm_address_t ) threads		4746189	0					
ANR	4746295	CastTarget	vm_address_t		4746189	0					
ANR	4746296	Identifier	threads		4746189	1					
ANR	4746297	Argument	n_threads * sizeof ( thread_act_t )		4746189	2					
ANR	4746298	MultiplicativeExpression	n_threads * sizeof ( thread_act_t )		4746189	0		*			
ANR	4746299	Identifier	n_threads		4746189	0					
ANR	4746300	SizeofExpression	sizeof ( thread_act_t )		4746189	1					
ANR	4746301	Sizeof	sizeof		4746189	0					
ANR	4746302	SizeofOperand	thread_act_t		4746189	1					
ANR	4746303	ReturnStatement	return th ;	85:1:1960:1969	4746189	8	True				
ANR	4746304	Identifier	th		4746189	0					
ANR	4746305	ReturnType	static thread_t		4746189	1					
ANR	4746306	Identifier	getcurthread		4746189	2					
ANR	4746307	ParameterList	RDebug * dbg		4746189	3					
ANR	4746308	Parameter	RDebug * dbg	68:30:1565:1575	4746189	0	True				
ANR	4746309	ParameterType	RDebug *		4746189	0					
ANR	4746310	Identifier	dbg		4746189	1					
ANR	4746311	CFGEntryNode	ENTRY		4746189		True				
ANR	4746312	CFGExitNode	EXIT		4746189		True				
ANR	4746313	Symbol	n_threads		4746189						
ANR	4746314	Symbol	task_threads		4746189						
ANR	4746315	Symbol	& threads		4746189						
ANR	4746316	Symbol	NULL		4746189						
ANR	4746317	Symbol	& n_threads		4746189						
ANR	4746318	Symbol	dbg		4746189						
ANR	4746319	Symbol	threads		4746189						
ANR	4746320	Symbol	* dbg		4746189						
ANR	4746321	Symbol	pid_to_task		4746189						
ANR	4746322	Symbol	th		4746189						
ANR	4746323	Symbol	t		4746189						
ANR	4746324	Symbol	dbg -> pid		4746189						
ANR	4746325	Symbol	KERN_SUCCESS		4746189						
ANR	4746326	Symbol	& th		4746189						
ANR	4746327	Function	get_xnu_thread	88:0:1974:2600							
ANR	4746328	FunctionDef	"get_xnu_thread (RDebug * dbg , int tid)"		4746327	0					
ANR	4746329	CompoundStatement		88:58:2032:2600	4746327	0					
ANR	4746330	IfStatement	if ( ! dbg || tid < 0 )		4746327	0					
ANR	4746331	Condition	! dbg || tid < 0	89:5:2039:2053	4746327	0	True				
ANR	4746332	OrExpression	! dbg || tid < 0		4746327	0		||			
ANR	4746333	UnaryOperationExpression	! dbg		4746327	0					
ANR	4746334	UnaryOperator	!		4746327	0					
ANR	4746335	Identifier	dbg		4746327	1					
ANR	4746336	RelationalExpression	tid < 0		4746327	1		<			
ANR	4746337	Identifier	tid		4746327	0					
ANR	4746338	PrimaryExpression	0		4746327	1					
ANR	4746339	CompoundStatement		2:22:23:23	4746327	1					
ANR	4746340	ReturnStatement	return NULL ;	90:2:2060:2071	4746327	0	True				
ANR	4746341	Identifier	NULL		4746327	0					
ANR	4746342	IfStatement	if ( ! xnu_update_thread_list ( dbg ) )		4746327	1					
ANR	4746343	Condition	! xnu_update_thread_list ( dbg )	92:5:2081:2109	4746327	0	True				
ANR	4746344	UnaryOperationExpression	! xnu_update_thread_list ( dbg )		4746327	0					
ANR	4746345	UnaryOperator	!		4746327	0					
ANR	4746346	CallExpression	xnu_update_thread_list ( dbg )		4746327	1					
ANR	4746347	Callee	xnu_update_thread_list		4746327	0					
ANR	4746348	Identifier	xnu_update_thread_list		4746327	0					
ANR	4746349	ArgumentList	dbg		4746327	1					
ANR	4746350	Argument	dbg		4746327	0					
ANR	4746351	Identifier	dbg		4746327	0					
ANR	4746352	CompoundStatement		5:36:79:79	4746327	1					
ANR	4746353	ExpressionStatement	"eprintf ( ""Failed to update thread_list xnu_udpate_thread_list\\n"" )"	93:2:2116:2181	4746327	0	True				
ANR	4746354	CallExpression	"eprintf ( ""Failed to update thread_list xnu_udpate_thread_list\\n"" )"		4746327	0					
ANR	4746355	Callee	eprintf		4746327	0					
ANR	4746356	Identifier	eprintf		4746327	0					
ANR	4746357	ArgumentList	"""Failed to update thread_list xnu_udpate_thread_list\\n"""		4746327	1					
ANR	4746358	Argument	"""Failed to update thread_list xnu_udpate_thread_list\\n"""		4746327	0					
ANR	4746359	PrimaryExpression	"""Failed to update thread_list xnu_udpate_thread_list\\n"""		4746327	0					
ANR	4746360	ReturnStatement	return NULL ;	94:2:2185:2196	4746327	1	True				
ANR	4746361	Identifier	NULL		4746327	0					
ANR	4746362	IdentifierDeclStatement	"RListIter * it = r_list_find ( dbg -> threads , ( const void * ) ( size_t ) & tid , ( RListComparator ) & thread_find ) ;"	97:1:2233:2339	4746327	2	True				
ANR	4746363	IdentifierDecl	"* it = r_list_find ( dbg -> threads , ( const void * ) ( size_t ) & tid , ( RListComparator ) & thread_find )"		4746327	0					
ANR	4746364	IdentifierDeclType	RListIter *		4746327	0					
ANR	4746365	Identifier	it		4746327	1					
ANR	4746366	AssignmentExpression	"* it = r_list_find ( dbg -> threads , ( const void * ) ( size_t ) & tid , ( RListComparator ) & thread_find )"		4746327	2		=			
ANR	4746367	Identifier	it		4746327	0					
ANR	4746368	CallExpression	"r_list_find ( dbg -> threads , ( const void * ) ( size_t ) & tid , ( RListComparator ) & thread_find )"		4746327	1					
ANR	4746369	Callee	r_list_find		4746327	0					
ANR	4746370	Identifier	r_list_find		4746327	0					
ANR	4746371	ArgumentList	dbg -> threads		4746327	1					
ANR	4746372	Argument	dbg -> threads		4746327	0					
ANR	4746373	PtrMemberAccess	dbg -> threads		4746327	0					
ANR	4746374	Identifier	dbg		4746327	0					
ANR	4746375	Identifier	threads		4746327	1					
ANR	4746376	Argument	( const void * ) ( size_t ) & tid		4746327	1					
ANR	4746377	CastExpression	( const void * ) ( size_t ) & tid		4746327	0					
ANR	4746378	CastTarget	const void *		4746327	0					
ANR	4746379	CastExpression	( size_t ) & tid		4746327	1					
ANR	4746380	CastTarget	size_t		4746327	0					
ANR	4746381	UnaryOperationExpression	& tid		4746327	1					
ANR	4746382	UnaryOperator	&		4746327	0					
ANR	4746383	Identifier	tid		4746327	1					
ANR	4746384	Argument	( RListComparator ) & thread_find		4746327	2					
ANR	4746385	CastExpression	( RListComparator ) & thread_find		4746327	0					
ANR	4746386	CastTarget	RListComparator		4746327	0					
ANR	4746387	UnaryOperationExpression	& thread_find		4746327	1					
ANR	4746388	UnaryOperator	&		4746327	0					
ANR	4746389	Identifier	thread_find		4746327	1					
ANR	4746390	IfStatement	if ( ! it )		4746327	3					
ANR	4746391	Condition	! it	99:5:2346:2348	4746327	0	True				
ANR	4746392	UnaryOperationExpression	! it		4746327	0					
ANR	4746393	UnaryOperator	!		4746327	0					
ANR	4746394	Identifier	it		4746327	1					
ANR	4746395	CompoundStatement		12:10:318:318	4746327	1					
ANR	4746396	ExpressionStatement	tid = getcurthread ( dbg )	100:2:2355:2379	4746327	0	True				
ANR	4746397	AssignmentExpression	tid = getcurthread ( dbg )		4746327	0		=			
ANR	4746398	Identifier	tid		4746327	0					
ANR	4746399	CallExpression	getcurthread ( dbg )		4746327	1					
ANR	4746400	Callee	getcurthread		4746327	0					
ANR	4746401	Identifier	getcurthread		4746327	0					
ANR	4746402	ArgumentList	dbg		4746327	1					
ANR	4746403	Argument	dbg		4746327	0					
ANR	4746404	Identifier	dbg		4746327	0					
ANR	4746405	ExpressionStatement	"it = r_list_find ( dbg -> threads , ( const void * ) ( size_t ) & tid , ( RListComparator ) & thread_find )"	101:2:2383:2478	4746327	1	True				
ANR	4746406	AssignmentExpression	"it = r_list_find ( dbg -> threads , ( const void * ) ( size_t ) & tid , ( RListComparator ) & thread_find )"		4746327	0		=			
ANR	4746407	Identifier	it		4746327	0					
ANR	4746408	CallExpression	"r_list_find ( dbg -> threads , ( const void * ) ( size_t ) & tid , ( RListComparator ) & thread_find )"		4746327	1					
ANR	4746409	Callee	r_list_find		4746327	0					
ANR	4746410	Identifier	r_list_find		4746327	0					
ANR	4746411	ArgumentList	dbg -> threads		4746327	1					
ANR	4746412	Argument	dbg -> threads		4746327	0					
ANR	4746413	PtrMemberAccess	dbg -> threads		4746327	0					
ANR	4746414	Identifier	dbg		4746327	0					
ANR	4746415	Identifier	threads		4746327	1					
ANR	4746416	Argument	( const void * ) ( size_t ) & tid		4746327	1					
ANR	4746417	CastExpression	( const void * ) ( size_t ) & tid		4746327	0					
ANR	4746418	CastTarget	const void *		4746327	0					
ANR	4746419	CastExpression	( size_t ) & tid		4746327	1					
ANR	4746420	CastTarget	size_t		4746327	0					
ANR	4746421	UnaryOperationExpression	& tid		4746327	1					
ANR	4746422	UnaryOperator	&		4746327	0					
ANR	4746423	Identifier	tid		4746327	1					
ANR	4746424	Argument	( RListComparator ) & thread_find		4746327	2					
ANR	4746425	CastExpression	( RListComparator ) & thread_find		4746327	0					
ANR	4746426	CastTarget	RListComparator		4746327	0					
ANR	4746427	UnaryOperationExpression	& thread_find		4746327	1					
ANR	4746428	UnaryOperator	&		4746327	0					
ANR	4746429	Identifier	thread_find		4746327	1					
ANR	4746430	IfStatement	if ( ! it )		4746327	2					
ANR	4746431	Condition	! it	103:6:2486:2488	4746327	0	True				
ANR	4746432	UnaryOperationExpression	! it		4746327	0					
ANR	4746433	UnaryOperator	!		4746327	0					
ANR	4746434	Identifier	it		4746327	1					
ANR	4746435	CompoundStatement		16:11:458:458	4746327	1					
ANR	4746436	ExpressionStatement	"eprintf ( ""Thread not found get_xnu_thread\\n"" )"	104:3:2496:2541	4746327	0	True				
ANR	4746437	CallExpression	"eprintf ( ""Thread not found get_xnu_thread\\n"" )"		4746327	0					
ANR	4746438	Callee	eprintf		4746327	0					
ANR	4746439	Identifier	eprintf		4746327	0					
ANR	4746440	ArgumentList	"""Thread not found get_xnu_thread\\n"""		4746327	1					
ANR	4746441	Argument	"""Thread not found get_xnu_thread\\n"""		4746327	0					
ANR	4746442	PrimaryExpression	"""Thread not found get_xnu_thread\\n"""		4746327	0					
ANR	4746443	ReturnStatement	return NULL ;	105:3:2546:2557	4746327	1	True				
ANR	4746444	Identifier	NULL		4746327	0					
ANR	4746445	ReturnStatement	return ( xnu_thread_t * ) it -> data ;	108:1:2567:2598	4746327	4	True				
ANR	4746446	CastExpression	( xnu_thread_t * ) it -> data		4746327	0					
ANR	4746447	CastTarget	xnu_thread_t *		4746327	0					
ANR	4746448	PtrMemberAccess	it -> data		4746327	1					
ANR	4746449	Identifier	it		4746327	0					
ANR	4746450	Identifier	data		4746327	1					
ANR	4746451	ReturnType	static xnu_thread_t *		4746327	1					
ANR	4746452	Identifier	get_xnu_thread		4746327	2					
ANR	4746453	ParameterList	"RDebug * dbg , int tid"		4746327	3					
ANR	4746454	Parameter	RDebug * dbg	88:36:2010:2020	4746327	0	True				
ANR	4746455	ParameterType	RDebug *		4746327	0					
ANR	4746456	Identifier	dbg		4746327	1					
ANR	4746457	Parameter	int tid	88:49:2023:2029	4746327	1	True				
ANR	4746458	ParameterType	int		4746327	0					
ANR	4746459	Identifier	tid		4746327	1					
ANR	4746460	CFGEntryNode	ENTRY		4746327		True				
ANR	4746461	CFGExitNode	EXIT		4746327		True				
ANR	4746462	Symbol	NULL		4746327						
ANR	4746463	Symbol	dbg		4746327						
ANR	4746464	Symbol	it		4746327						
ANR	4746465	Symbol	* dbg		4746327						
ANR	4746466	Symbol	dbg -> threads		4746327						
ANR	4746467	Symbol	tid		4746327						
ANR	4746468	Symbol	& thread_find		4746327						
ANR	4746469	Symbol	r_list_find		4746327						
ANR	4746470	Symbol	& tid		4746327						
ANR	4746471	Symbol	* it		4746327						
ANR	4746472	Symbol	xnu_update_thread_list		4746327						
ANR	4746473	Symbol	getcurthread		4746327						
ANR	4746474	Symbol	it -> data		4746327						
ANR	4746475	Function	task_for_pid_workaround	111:0:2603:3697							
ANR	4746476	FunctionDef	task_for_pid_workaround (int Pid)		4746475	0					
ANR	4746477	CompoundStatement		111:47:2650:3697	4746475	0					
ANR	4746478	IdentifierDeclStatement	host_t myhost = mach_host_self ( ) ;	112:1:2653:2685	4746475	0	True				
ANR	4746479	IdentifierDecl	myhost = mach_host_self ( )		4746475	0					
ANR	4746480	IdentifierDeclType	host_t		4746475	0					
ANR	4746481	Identifier	myhost		4746475	1					
ANR	4746482	AssignmentExpression	myhost = mach_host_self ( )		4746475	2		=			
ANR	4746483	Identifier	myhost		4746475	0					
ANR	4746484	CallExpression	mach_host_self ( )		4746475	1					
ANR	4746485	Callee	mach_host_self		4746475	0					
ANR	4746486	Identifier	mach_host_self		4746475	0					
ANR	4746487	ArgumentList			4746475	1					
ANR	4746488	IdentifierDeclStatement	mach_port_t psDefault = 0 ;	113:1:2688:2713	4746475	1	True				
ANR	4746489	IdentifierDecl	psDefault = 0		4746475	0					
ANR	4746490	IdentifierDeclType	mach_port_t		4746475	0					
ANR	4746491	Identifier	psDefault		4746475	1					
ANR	4746492	AssignmentExpression	psDefault = 0		4746475	2		=			
ANR	4746493	Identifier	psDefault		4746475	0					
ANR	4746494	PrimaryExpression	0		4746475	1					
ANR	4746495	IdentifierDeclStatement	mach_port_t psDefault_control = 0 ;	114:1:2716:2749	4746475	2	True				
ANR	4746496	IdentifierDecl	psDefault_control = 0		4746475	0					
ANR	4746497	IdentifierDeclType	mach_port_t		4746475	0					
ANR	4746498	Identifier	psDefault_control		4746475	1					
ANR	4746499	AssignmentExpression	psDefault_control = 0		4746475	2		=			
ANR	4746500	Identifier	psDefault_control		4746475	0					
ANR	4746501	PrimaryExpression	0		4746475	1					
ANR	4746502	IdentifierDeclStatement	task_array_t tasks = NULL ;	115:1:2752:2777	4746475	3	True				
ANR	4746503	IdentifierDecl	tasks = NULL		4746475	0					
ANR	4746504	IdentifierDeclType	task_array_t		4746475	0					
ANR	4746505	Identifier	tasks		4746475	1					
ANR	4746506	AssignmentExpression	tasks = NULL		4746475	2		=			
ANR	4746507	Identifier	NULL		4746475	0					
ANR	4746508	Identifier	NULL		4746475	1					
ANR	4746509	IdentifierDeclStatement	mach_msg_type_number_t numTasks = 0 ;	116:1:2780:2815	4746475	4	True				
ANR	4746510	IdentifierDecl	numTasks = 0		4746475	0					
ANR	4746511	IdentifierDeclType	mach_msg_type_number_t		4746475	0					
ANR	4746512	Identifier	numTasks		4746475	1					
ANR	4746513	AssignmentExpression	numTasks = 0		4746475	2		=			
ANR	4746514	Identifier	numTasks		4746475	0					
ANR	4746515	PrimaryExpression	0		4746475	1					
ANR	4746516	IdentifierDeclStatement	int i ;	117:1:2818:2823	4746475	5	True				
ANR	4746517	IdentifierDecl	i		4746475	0					
ANR	4746518	IdentifierDeclType	int		4746475	0					
ANR	4746519	Identifier	i		4746475	1					
ANR	4746520	IfStatement	if ( Pid == - 1 )		4746475	6					
ANR	4746521	Condition	Pid == - 1	118:5:2830:2838	4746475	0	True				
ANR	4746522	EqualityExpression	Pid == - 1		4746475	0		==			
ANR	4746523	Identifier	Pid		4746475	0					
ANR	4746524	UnaryOperationExpression	- 1		4746475	1					
ANR	4746525	UnaryOperator	-		4746475	0					
ANR	4746526	PrimaryExpression	1		4746475	1					
ANR	4746527	CompoundStatement		8:16:190:190	4746475	1					
ANR	4746528	ReturnStatement	return 0 ;	119:2:2845:2853	4746475	0	True				
ANR	4746529	PrimaryExpression	0		4746475	0					
ANR	4746530	IdentifierDeclStatement	"kern_return_t kr = processor_set_default ( myhost , & psDefault ) ;"	121:1:2859:2920	4746475	7	True				
ANR	4746531	IdentifierDecl	"kr = processor_set_default ( myhost , & psDefault )"		4746475	0					
ANR	4746532	IdentifierDeclType	kern_return_t		4746475	0					
ANR	4746533	Identifier	kr		4746475	1					
ANR	4746534	AssignmentExpression	"kr = processor_set_default ( myhost , & psDefault )"		4746475	2		=			
ANR	4746535	Identifier	kr		4746475	0					
ANR	4746536	CallExpression	"processor_set_default ( myhost , & psDefault )"		4746475	1					
ANR	4746537	Callee	processor_set_default		4746475	0					
ANR	4746538	Identifier	processor_set_default		4746475	0					
ANR	4746539	ArgumentList	myhost		4746475	1					
ANR	4746540	Argument	myhost		4746475	0					
ANR	4746541	Identifier	myhost		4746475	0					
ANR	4746542	Argument	& psDefault		4746475	1					
ANR	4746543	UnaryOperationExpression	& psDefault		4746475	0					
ANR	4746544	UnaryOperator	&		4746475	0					
ANR	4746545	Identifier	psDefault		4746475	1					
ANR	4746546	IfStatement	if ( kr != KERN_SUCCESS )		4746475	8					
ANR	4746547	Condition	kr != KERN_SUCCESS	122:5:2927:2944	4746475	0	True				
ANR	4746548	EqualityExpression	kr != KERN_SUCCESS		4746475	0		!=			
ANR	4746549	Identifier	kr		4746475	0					
ANR	4746550	Identifier	KERN_SUCCESS		4746475	1					
ANR	4746551	CompoundStatement		12:25:296:296	4746475	1					
ANR	4746552	ReturnStatement	return 0 ;	123:2:2951:2959	4746475	0	True				
ANR	4746553	PrimaryExpression	0		4746475	0					
ANR	4746554	ExpressionStatement	"kr = host_processor_set_priv ( myhost , psDefault , & psDefault_control )"	125:1:2965:3033	4746475	9	True				
ANR	4746555	AssignmentExpression	"kr = host_processor_set_priv ( myhost , psDefault , & psDefault_control )"		4746475	0		=			
ANR	4746556	Identifier	kr		4746475	0					
ANR	4746557	CallExpression	"host_processor_set_priv ( myhost , psDefault , & psDefault_control )"		4746475	1					
ANR	4746558	Callee	host_processor_set_priv		4746475	0					
ANR	4746559	Identifier	host_processor_set_priv		4746475	0					
ANR	4746560	ArgumentList	myhost		4746475	1					
ANR	4746561	Argument	myhost		4746475	0					
ANR	4746562	Identifier	myhost		4746475	0					
ANR	4746563	Argument	psDefault		4746475	1					
ANR	4746564	Identifier	psDefault		4746475	0					
ANR	4746565	Argument	& psDefault_control		4746475	2					
ANR	4746566	UnaryOperationExpression	& psDefault_control		4746475	0					
ANR	4746567	UnaryOperator	&		4746475	0					
ANR	4746568	Identifier	psDefault_control		4746475	1					
ANR	4746569	IfStatement	if ( kr != KERN_SUCCESS )		4746475	10					
ANR	4746570	Condition	kr != KERN_SUCCESS	126:5:3040:3057	4746475	0	True				
ANR	4746571	EqualityExpression	kr != KERN_SUCCESS		4746475	0		!=			
ANR	4746572	Identifier	kr		4746475	0					
ANR	4746573	Identifier	KERN_SUCCESS		4746475	1					
ANR	4746574	CompoundStatement		16:25:409:409	4746475	1					
ANR	4746575	ExpressionStatement	"eprintf ( ""host_processor_set_priv failed with error 0x%x\\n"" , kr )"	127:2:3064:3128	4746475	0	True				
ANR	4746576	CallExpression	"eprintf ( ""host_processor_set_priv failed with error 0x%x\\n"" , kr )"		4746475	0					
ANR	4746577	Callee	eprintf		4746475	0					
ANR	4746578	Identifier	eprintf		4746475	0					
ANR	4746579	ArgumentList	"""host_processor_set_priv failed with error 0x%x\\n"""		4746475	1					
ANR	4746580	Argument	"""host_processor_set_priv failed with error 0x%x\\n"""		4746475	0					
ANR	4746581	PrimaryExpression	"""host_processor_set_priv failed with error 0x%x\\n"""		4746475	0					
ANR	4746582	Argument	kr		4746475	1					
ANR	4746583	Identifier	kr		4746475	0					
ANR	4746584	ReturnStatement	return - 1 ;	129:2:3179:3188	4746475	1	True				
ANR	4746585	UnaryOperationExpression	- 1		4746475	0					
ANR	4746586	UnaryOperator	-		4746475	0					
ANR	4746587	PrimaryExpression	1		4746475	1					
ANR	4746588	ExpressionStatement	numTasks = 0	132:1:3195:3207	4746475	11	True				
ANR	4746589	AssignmentExpression	numTasks = 0		4746475	0		=			
ANR	4746590	Identifier	numTasks		4746475	0					
ANR	4746591	PrimaryExpression	0		4746475	1					
ANR	4746592	ExpressionStatement	"kr = processor_set_tasks ( psDefault_control , & tasks , & numTasks )"	133:1:3210:3273	4746475	12	True				
ANR	4746593	AssignmentExpression	"kr = processor_set_tasks ( psDefault_control , & tasks , & numTasks )"		4746475	0		=			
ANR	4746594	Identifier	kr		4746475	0					
ANR	4746595	CallExpression	"processor_set_tasks ( psDefault_control , & tasks , & numTasks )"		4746475	1					
ANR	4746596	Callee	processor_set_tasks		4746475	0					
ANR	4746597	Identifier	processor_set_tasks		4746475	0					
ANR	4746598	ArgumentList	psDefault_control		4746475	1					
ANR	4746599	Argument	psDefault_control		4746475	0					
ANR	4746600	Identifier	psDefault_control		4746475	0					
ANR	4746601	Argument	& tasks		4746475	1					
ANR	4746602	UnaryOperationExpression	& tasks		4746475	0					
ANR	4746603	UnaryOperator	&		4746475	0					
ANR	4746604	Identifier	tasks		4746475	1					
ANR	4746605	Argument	& numTasks		4746475	2					
ANR	4746606	UnaryOperationExpression	& numTasks		4746475	0					
ANR	4746607	UnaryOperator	&		4746475	0					
ANR	4746608	Identifier	numTasks		4746475	1					
ANR	4746609	IfStatement	if ( kr != KERN_SUCCESS )		4746475	13					
ANR	4746610	Condition	kr != KERN_SUCCESS	134:5:3280:3297	4746475	0	True				
ANR	4746611	EqualityExpression	kr != KERN_SUCCESS		4746475	0		!=			
ANR	4746612	Identifier	kr		4746475	0					
ANR	4746613	Identifier	KERN_SUCCESS		4746475	1					
ANR	4746614	CompoundStatement		24:25:649:649	4746475	1					
ANR	4746615	ExpressionStatement	"eprintf ( ""processor_set_tasks failed with error %x\\n"" , kr )"	135:2:3304:3362	4746475	0	True				
ANR	4746616	CallExpression	"eprintf ( ""processor_set_tasks failed with error %x\\n"" , kr )"		4746475	0					
ANR	4746617	Callee	eprintf		4746475	0					
ANR	4746618	Identifier	eprintf		4746475	0					
ANR	4746619	ArgumentList	"""processor_set_tasks failed with error %x\\n"""		4746475	1					
ANR	4746620	Argument	"""processor_set_tasks failed with error %x\\n"""		4746475	0					
ANR	4746621	PrimaryExpression	"""processor_set_tasks failed with error %x\\n"""		4746475	0					
ANR	4746622	Argument	kr		4746475	1					
ANR	4746623	Identifier	kr		4746475	0					
ANR	4746624	ReturnStatement	return - 1 ;	136:2:3366:3375	4746475	1	True				
ANR	4746625	UnaryOperationExpression	- 1		4746475	0					
ANR	4746626	UnaryOperator	-		4746475	0					
ANR	4746627	PrimaryExpression	1		4746475	1					
ANR	4746628	IdentifierDeclStatement	task_t task = - 1 ;	139:1:3400:3416	4746475	14	True				
ANR	4746629	IdentifierDecl	task = - 1		4746475	0					
ANR	4746630	IdentifierDeclType	task_t		4746475	0					
ANR	4746631	Identifier	task		4746475	1					
ANR	4746632	AssignmentExpression	task = - 1		4746475	2		=			
ANR	4746633	Identifier	task		4746475	0					
ANR	4746634	UnaryOperationExpression	- 1		4746475	1					
ANR	4746635	UnaryOperator	-		4746475	0					
ANR	4746636	PrimaryExpression	1		4746475	1					
ANR	4746637	IfStatement	if ( Pid == 0 )		4746475	15					
ANR	4746638	Condition	Pid == 0	140:5:3423:3430	4746475	0	True				
ANR	4746639	EqualityExpression	Pid == 0		4746475	0		==			
ANR	4746640	Identifier	Pid		4746475	0					
ANR	4746641	PrimaryExpression	0		4746475	1					
ANR	4746642	CompoundStatement		30:15:782:782	4746475	1					
ANR	4746643	ExpressionStatement	task = tasks [ 0 ]	141:2:3437:3452	4746475	0	True				
ANR	4746644	AssignmentExpression	task = tasks [ 0 ]		4746475	0		=			
ANR	4746645	Identifier	task		4746475	0					
ANR	4746646	ArrayIndexing	tasks [ 0 ]		4746475	1					
ANR	4746647	Identifier	tasks		4746475	0					
ANR	4746648	PrimaryExpression	0		4746475	1					
ANR	4746649	ElseStatement	else		4746475	0					
ANR	4746650	CompoundStatement		32:8:811:811	4746475	0					
ANR	4746651	ForStatement	for ( i = 0 ; i < numTasks ; i ++ )		4746475	0					
ANR	4746652	ForInit	i = 0 ;	143:7:3471:3476	4746475	0	True				
ANR	4746653	AssignmentExpression	i = 0		4746475	0		=			
ANR	4746654	Identifier	i		4746475	0					
ANR	4746655	PrimaryExpression	0		4746475	1					
ANR	4746656	Condition	i < numTasks	143:14:3478:3489	4746475	1	True				
ANR	4746657	RelationalExpression	i < numTasks		4746475	0		<			
ANR	4746658	Identifier	i		4746475	0					
ANR	4746659	Identifier	numTasks		4746475	1					
ANR	4746660	PostIncDecOperationExpression	i ++	143:28:3492:3494	4746475	2	True				
ANR	4746661	Identifier	i		4746475	0					
ANR	4746662	IncDec	++		4746475	1					
ANR	4746663	CompoundStatement		34:3:851:864	4746475	3					
ANR	4746664	IdentifierDeclStatement	pid_t pid = 0 ;	144:3:3502:3515	4746475	0	True				
ANR	4746665	IdentifierDecl	pid = 0		4746475	0					
ANR	4746666	IdentifierDeclType	pid_t		4746475	0					
ANR	4746667	Identifier	pid		4746475	1					
ANR	4746668	AssignmentExpression	pid = 0		4746475	2		=			
ANR	4746669	Identifier	pid		4746475	0					
ANR	4746670	PrimaryExpression	0		4746475	1					
ANR	4746671	ExpressionStatement	"pid_for_task ( i , & pid )"	145:3:3520:3542	4746475	1	True				
ANR	4746672	CallExpression	"pid_for_task ( i , & pid )"		4746475	0					
ANR	4746673	Callee	pid_for_task		4746475	0					
ANR	4746674	Identifier	pid_for_task		4746475	0					
ANR	4746675	ArgumentList	i		4746475	1					
ANR	4746676	Argument	i		4746475	0					
ANR	4746677	Identifier	i		4746475	0					
ANR	4746678	Argument	& pid		4746475	1					
ANR	4746679	UnaryOperationExpression	& pid		4746475	0					
ANR	4746680	UnaryOperator	&		4746475	0					
ANR	4746681	Identifier	pid		4746475	1					
ANR	4746682	IfStatement	if ( pid == Pid )		4746475	2					
ANR	4746683	Condition	pid == Pid	146:7:3551:3560	4746475	0	True				
ANR	4746684	EqualityExpression	pid == Pid		4746475	0		==			
ANR	4746685	Identifier	pid		4746475	0					
ANR	4746686	Identifier	Pid		4746475	1					
ANR	4746687	CompoundStatement		36:19:912:912	4746475	1					
ANR	4746688	ExpressionStatement	task = tasks [ i ]	147:4:3569:3584	4746475	0	True				
ANR	4746689	AssignmentExpression	task = tasks [ i ]		4746475	0		=			
ANR	4746690	Identifier	task		4746475	0					
ANR	4746691	ArrayIndexing	tasks [ i ]		4746475	1					
ANR	4746692	Identifier	tasks		4746475	0					
ANR	4746693	Identifier	i		4746475	1					
ANR	4746694	BreakStatement	break ;	148:4:3590:3595	4746475	1	True				
ANR	4746695	ExpressionStatement	"vm_deallocate ( myhost , ( vm_address_t ) tasks , numTasks * sizeof ( task_t ) )"	152:1:3610:3681	4746475	16	True				
ANR	4746696	CallExpression	"vm_deallocate ( myhost , ( vm_address_t ) tasks , numTasks * sizeof ( task_t ) )"		4746475	0					
ANR	4746697	Callee	vm_deallocate		4746475	0					
ANR	4746698	Identifier	vm_deallocate		4746475	0					
ANR	4746699	ArgumentList	myhost		4746475	1					
ANR	4746700	Argument	myhost		4746475	0					
ANR	4746701	Identifier	myhost		4746475	0					
ANR	4746702	Argument	( vm_address_t ) tasks		4746475	1					
ANR	4746703	CastExpression	( vm_address_t ) tasks		4746475	0					
ANR	4746704	CastTarget	vm_address_t		4746475	0					
ANR	4746705	Identifier	tasks		4746475	1					
ANR	4746706	Argument	numTasks * sizeof ( task_t )		4746475	2					
ANR	4746707	MultiplicativeExpression	numTasks * sizeof ( task_t )		4746475	0		*			
ANR	4746708	Identifier	numTasks		4746475	0					
ANR	4746709	SizeofExpression	sizeof ( task_t )		4746475	1					
ANR	4746710	Sizeof	sizeof		4746475	0					
ANR	4746711	SizeofOperand	task_t		4746475	1					
ANR	4746712	ReturnStatement	return task ;	153:1:3684:3695	4746475	17	True				
ANR	4746713	Identifier	task		4746475	0					
ANR	4746714	ReturnType	static task_t		4746475	1					
ANR	4746715	Identifier	task_for_pid_workaround		4746475	2					
ANR	4746716	ParameterList	int Pid		4746475	3					
ANR	4746717	Parameter	int Pid	111:38:2641:2647	4746475	0	True				
ANR	4746718	ParameterType	int		4746475	0					
ANR	4746719	Identifier	Pid		4746475	1					
ANR	4746720	CFGEntryNode	ENTRY		4746475		True				
ANR	4746721	CFGExitNode	EXIT		4746475		True				
ANR	4746722	Symbol	numTasks		4746475						
ANR	4746723	Symbol	& psDefault		4746475						
ANR	4746724	Symbol	NULL		4746475						
ANR	4746725	Symbol	kr		4746475						
ANR	4746726	Symbol	i		4746475						
ANR	4746727	Symbol	* tasks		4746475						
ANR	4746728	Symbol	Pid		4746475						
ANR	4746729	Symbol	pid		4746475						
ANR	4746730	Symbol	& tasks		4746475						
ANR	4746731	Symbol	myhost		4746475						
ANR	4746732	Symbol	mach_host_self		4746475						
ANR	4746733	Symbol	psDefault_control		4746475						
ANR	4746734	Symbol	host_processor_set_priv		4746475						
ANR	4746735	Symbol	task		4746475						
ANR	4746736	Symbol	* i		4746475						
ANR	4746737	Symbol	& psDefault_control		4746475						
ANR	4746738	Symbol	& pid		4746475						
ANR	4746739	Symbol	processor_set_tasks		4746475						
ANR	4746740	Symbol	processor_set_default		4746475						
ANR	4746741	Symbol	psDefault		4746475						
ANR	4746742	Symbol	KERN_SUCCESS		4746475						
ANR	4746743	Symbol	tasks		4746475						
ANR	4746744	Symbol	& numTasks		4746475						
ANR	4746745	Function	task_for_pid_ios9pangu	156:0:3700:3864							
ANR	4746746	FunctionDef	task_for_pid_ios9pangu (int pid)		4746745	0					
ANR	4746747	CompoundStatement		156:46:3746:3864	4746745	0					
ANR	4746748	IdentifierDeclStatement	task_t task = MACH_PORT_NULL ;	157:1:3749:3777	4746745	0	True				
ANR	4746749	IdentifierDecl	task = MACH_PORT_NULL		4746745	0					
ANR	4746750	IdentifierDeclType	task_t		4746745	0					
ANR	4746751	Identifier	task		4746745	1					
ANR	4746752	AssignmentExpression	task = MACH_PORT_NULL		4746745	2		=			
ANR	4746753	Identifier	MACH_PORT_NULL		4746745	0					
ANR	4746754	Identifier	MACH_PORT_NULL		4746745	1					
ANR	4746755	ExpressionStatement	"host_get_special_port ( mach_host_self ( ) , HOST_LOCAL_NODE , 4 , & task )"	158:1:3780:3848	4746745	1	True				
ANR	4746756	CallExpression	"host_get_special_port ( mach_host_self ( ) , HOST_LOCAL_NODE , 4 , & task )"		4746745	0					
ANR	4746757	Callee	host_get_special_port		4746745	0					
ANR	4746758	Identifier	host_get_special_port		4746745	0					
ANR	4746759	ArgumentList	mach_host_self ( )		4746745	1					
ANR	4746760	Argument	mach_host_self ( )		4746745	0					
ANR	4746761	CallExpression	mach_host_self ( )		4746745	0					
ANR	4746762	Callee	mach_host_self		4746745	0					
ANR	4746763	Identifier	mach_host_self		4746745	0					
ANR	4746764	ArgumentList			4746745	1					
ANR	4746765	Argument	HOST_LOCAL_NODE		4746745	1					
ANR	4746766	Identifier	HOST_LOCAL_NODE		4746745	0					
ANR	4746767	Argument	4		4746745	2					
ANR	4746768	PrimaryExpression	4		4746745	0					
ANR	4746769	Argument	& task		4746745	3					
ANR	4746770	UnaryOperationExpression	& task		4746745	0					
ANR	4746771	UnaryOperator	&		4746745	0					
ANR	4746772	Identifier	task		4746745	1					
ANR	4746773	ReturnStatement	return task ;	159:1:3851:3862	4746745	2	True				
ANR	4746774	Identifier	task		4746745	0					
ANR	4746775	ReturnType	static task_t		4746745	1					
ANR	4746776	Identifier	task_for_pid_ios9pangu		4746745	2					
ANR	4746777	ParameterList	int pid		4746745	3					
ANR	4746778	Parameter	int pid	156:37:3737:3743	4746745	0	True				
ANR	4746779	ParameterType	int		4746745	0					
ANR	4746780	Identifier	pid		4746745	1					
ANR	4746781	CFGEntryNode	ENTRY		4746745		True				
ANR	4746782	CFGExitNode	EXIT		4746745		True				
ANR	4746783	Symbol	mach_host_self		4746745						
ANR	4746784	Symbol	task		4746745						
ANR	4746785	Symbol	HOST_LOCAL_NODE		4746745						
ANR	4746786	Symbol	pid		4746745						
ANR	4746787	Symbol	& task		4746745						
ANR	4746788	Symbol	MACH_PORT_NULL		4746745						
ANR	4746789	Function	xnu_wait	162:0:3867:3999							
ANR	4746790	FunctionDef	"xnu_wait (RDebug * dbg , int pid)"		4746789	0					
ANR	4746791	CompoundStatement		162:35:3902:3999	4746789	0					
ANR	4746792	ReturnStatement	return R_DEBUG_REASON_UNKNOWN ;	164:1:3924:3953	4746789	0	True				
ANR	4746793	Identifier	R_DEBUG_REASON_UNKNOWN		4746789	0					
ANR	4746794	ReturnType	int		4746789	1					
ANR	4746795	Identifier	xnu_wait		4746789	2					
ANR	4746796	ParameterList	"RDebug * dbg , int pid"		4746789	3					
ANR	4746797	Parameter	RDebug * dbg	162:13:3880:3890	4746789	0	True				
ANR	4746798	ParameterType	RDebug *		4746789	0					
ANR	4746799	Identifier	dbg		4746789	1					
ANR	4746800	Parameter	int pid	162:26:3893:3899	4746789	1	True				
ANR	4746801	ParameterType	int		4746789	0					
ANR	4746802	Identifier	pid		4746789	1					
ANR	4746803	CFGEntryNode	ENTRY		4746789		True				
ANR	4746804	CFGExitNode	EXIT		4746789		True				
ANR	4746805	Symbol	dbg		4746789						
ANR	4746806	Symbol	pid		4746789						
ANR	4746807	Symbol	R_DEBUG_REASON_UNKNOWN		4746789						
ANR	4746808	Function	xnu_step	170:0:4002:4743							
ANR	4746809	FunctionDef	xnu_step (RDebug * dbg)		4746808	0					
ANR	4746810	CompoundStatement		170:27:4029:4743	4746808	0					
ANR	4746811	IdentifierDeclStatement	"int ret = r_debug_ptrace ( dbg , PT_STEP , dbg -> pid , ( caddr_t ) 1 , 0 ) == 0 ;"	172:1:4051:4120	4746808	0	True				
ANR	4746812	IdentifierDecl	"ret = r_debug_ptrace ( dbg , PT_STEP , dbg -> pid , ( caddr_t ) 1 , 0 ) == 0"		4746808	0					
ANR	4746813	IdentifierDeclType	int		4746808	0					
ANR	4746814	Identifier	ret		4746808	1					
ANR	4746815	AssignmentExpression	"ret = r_debug_ptrace ( dbg , PT_STEP , dbg -> pid , ( caddr_t ) 1 , 0 ) == 0"		4746808	2		=			
ANR	4746816	Identifier	ret		4746808	0					
ANR	4746817	EqualityExpression	"r_debug_ptrace ( dbg , PT_STEP , dbg -> pid , ( caddr_t ) 1 , 0 ) == 0"		4746808	1		==			
ANR	4746818	CallExpression	"r_debug_ptrace ( dbg , PT_STEP , dbg -> pid , ( caddr_t ) 1 , 0 )"		4746808	0					
ANR	4746819	Callee	r_debug_ptrace		4746808	0					
ANR	4746820	Identifier	r_debug_ptrace		4746808	0					
ANR	4746821	ArgumentList	dbg		4746808	1					
ANR	4746822	Argument	dbg		4746808	0					
ANR	4746823	Identifier	dbg		4746808	0					
ANR	4746824	Argument	PT_STEP		4746808	1					
ANR	4746825	Identifier	PT_STEP		4746808	0					
ANR	4746826	Argument	dbg -> pid		4746808	2					
ANR	4746827	PtrMemberAccess	dbg -> pid		4746808	0					
ANR	4746828	Identifier	dbg		4746808	0					
ANR	4746829	Identifier	pid		4746808	1					
ANR	4746830	Argument	( caddr_t ) 1		4746808	3					
ANR	4746831	CastExpression	( caddr_t ) 1		4746808	0					
ANR	4746832	CastTarget	caddr_t		4746808	0					
ANR	4746833	PrimaryExpression	1		4746808	1					
ANR	4746834	Argument	0		4746808	4					
ANR	4746835	PrimaryExpression	0		4746808	0					
ANR	4746836	PrimaryExpression	0		4746808	1					
ANR	4746837	IfStatement	if ( ! ret )		4746808	1					
ANR	4746838	Condition	! ret	173:5:4136:4139	4746808	0	True				
ANR	4746839	UnaryOperationExpression	! ret		4746808	0					
ANR	4746840	UnaryOperator	!		4746808	0					
ANR	4746841	Identifier	ret		4746808	1					
ANR	4746842	CompoundStatement		4:11:112:112	4746808	1					
ANR	4746843	ExpressionStatement	"perror ( ""ptrace-step"" )"	174:2:4146:4168	4746808	0	True				
ANR	4746844	CallExpression	"perror ( ""ptrace-step"" )"		4746808	0					
ANR	4746845	Callee	perror		4746808	0					
ANR	4746846	Identifier	perror		4746808	0					
ANR	4746847	ArgumentList	"""ptrace-step"""		4746808	1					
ANR	4746848	Argument	"""ptrace-step"""		4746808	0					
ANR	4746849	PrimaryExpression	"""ptrace-step"""		4746808	0					
ANR	4746850	ExpressionStatement	"eprintf ( ""mach-error: %d, %s\\n"" , ret , MACH_ERROR_STRING ( ret ) )"	175:2:4172:4234	4746808	1	True				
ANR	4746851	CallExpression	"eprintf ( ""mach-error: %d, %s\\n"" , ret , MACH_ERROR_STRING ( ret ) )"		4746808	0					
ANR	4746852	Callee	eprintf		4746808	0					
ANR	4746853	Identifier	eprintf		4746808	0					
ANR	4746854	ArgumentList	"""mach-error: %d, %s\\n"""		4746808	1					
ANR	4746855	Argument	"""mach-error: %d, %s\\n"""		4746808	0					
ANR	4746856	PrimaryExpression	"""mach-error: %d, %s\\n"""		4746808	0					
ANR	4746857	Argument	ret		4746808	1					
ANR	4746858	Identifier	ret		4746808	0					
ANR	4746859	Argument	MACH_ERROR_STRING ( ret )		4746808	2					
ANR	4746860	CallExpression	MACH_ERROR_STRING ( ret )		4746808	0					
ANR	4746861	Callee	MACH_ERROR_STRING		4746808	0					
ANR	4746862	Identifier	MACH_ERROR_STRING		4746808	0					
ANR	4746863	ArgumentList	ret		4746808	1					
ANR	4746864	Argument	ret		4746808	0					
ANR	4746865	Identifier	ret		4746808	0					
ANR	4746866	ReturnStatement	return ret ;	177:1:4240:4250	4746808	2	True				
ANR	4746867	Identifier	ret		4746808	0					
ANR	4746868	ReturnType	bool		4746808	1					
ANR	4746869	Identifier	xnu_step		4746808	2					
ANR	4746870	ParameterList	RDebug * dbg		4746808	3					
ANR	4746871	Parameter	RDebug * dbg	170:14:4016:4026	4746808	0	True				
ANR	4746872	ParameterType	RDebug *		4746808	0					
ANR	4746873	Identifier	dbg		4746808	1					
ANR	4746874	CFGEntryNode	ENTRY		4746808		True				
ANR	4746875	CFGExitNode	EXIT		4746808		True				
ANR	4746876	Symbol	ret		4746808						
ANR	4746877	Symbol	MACH_ERROR_STRING		4746808						
ANR	4746878	Symbol	dbg -> pid		4746808						
ANR	4746879	Symbol	dbg		4746808						
ANR	4746880	Symbol	r_debug_ptrace		4746808						
ANR	4746881	Symbol	* dbg		4746808						
ANR	4746882	Symbol	PT_STEP		4746808						
ANR	4746883	Function	xnu_attach	200:0:4746:5194							
ANR	4746884	FunctionDef	"xnu_attach (RDebug * dbg , int pid)"		4746883	0					
ANR	4746885	CompoundStatement		200:37:4783:5194	4746883	0					
ANR	4746886	IfStatement	"if ( r_debug_ptrace ( dbg , PT_ATTACHEXC , pid , 0 , 0 ) == - 1 )"		4746883	0					
ANR	4746887	Condition	"r_debug_ptrace ( dbg , PT_ATTACHEXC , pid , 0 , 0 ) == - 1"	203:5:4828:4878	4746883	0	True				
ANR	4746888	EqualityExpression	"r_debug_ptrace ( dbg , PT_ATTACHEXC , pid , 0 , 0 ) == - 1"		4746883	0		==			
ANR	4746889	CallExpression	"r_debug_ptrace ( dbg , PT_ATTACHEXC , pid , 0 , 0 )"		4746883	0					
ANR	4746890	Callee	r_debug_ptrace		4746883	0					
ANR	4746891	Identifier	r_debug_ptrace		4746883	0					
ANR	4746892	ArgumentList	dbg		4746883	1					
ANR	4746893	Argument	dbg		4746883	0					
ANR	4746894	Identifier	dbg		4746883	0					
ANR	4746895	Argument	PT_ATTACHEXC		4746883	1					
ANR	4746896	Identifier	PT_ATTACHEXC		4746883	0					
ANR	4746897	Argument	pid		4746883	2					
ANR	4746898	Identifier	pid		4746883	0					
ANR	4746899	Argument	0		4746883	3					
ANR	4746900	PrimaryExpression	0		4746883	0					
ANR	4746901	Argument	0		4746883	4					
ANR	4746902	PrimaryExpression	0		4746883	0					
ANR	4746903	UnaryOperationExpression	- 1		4746883	1					
ANR	4746904	UnaryOperator	-		4746883	0					
ANR	4746905	PrimaryExpression	1		4746883	1					
ANR	4746906	CompoundStatement		4:58:97:97	4746883	1					
ANR	4746907	ExpressionStatement	"perror ( ""ptrace (PT_ATTACH)"" )"	207:2:4959:4988	4746883	0	True				
ANR	4746908	CallExpression	"perror ( ""ptrace (PT_ATTACH)"" )"		4746883	0					
ANR	4746909	Callee	perror		4746883	0					
ANR	4746910	Identifier	perror		4746883	0					
ANR	4746911	ArgumentList	"""ptrace (PT_ATTACH)"""		4746883	1					
ANR	4746912	Argument	"""ptrace (PT_ATTACH)"""		4746883	0					
ANR	4746913	PrimaryExpression	"""ptrace (PT_ATTACH)"""		4746883	0					
ANR	4746914	ReturnStatement	return - 1 ;	208:2:4992:5001	4746883	1	True				
ANR	4746915	UnaryOperationExpression	- 1		4746883	0					
ANR	4746916	UnaryOperator	-		4746883	0					
ANR	4746917	PrimaryExpression	1		4746883	1					
ANR	4746918	ReturnStatement	return pid ;	210:1:5007:5017	4746883	1	True				
ANR	4746919	Identifier	pid		4746883	0					
ANR	4746920	ReturnType	int		4746883	1					
ANR	4746921	Identifier	xnu_attach		4746883	2					
ANR	4746922	ParameterList	"RDebug * dbg , int pid"		4746883	3					
ANR	4746923	Parameter	RDebug * dbg	200:15:4761:4771	4746883	0	True				
ANR	4746924	ParameterType	RDebug *		4746883	0					
ANR	4746925	Identifier	dbg		4746883	1					
ANR	4746926	Parameter	int pid	200:28:4774:4780	4746883	1	True				
ANR	4746927	ParameterType	int		4746883	0					
ANR	4746928	Identifier	pid		4746883	1					
ANR	4746929	CFGEntryNode	ENTRY		4746883		True				
ANR	4746930	CFGExitNode	EXIT		4746883		True				
ANR	4746931	Symbol	dbg		4746883						
ANR	4746932	Symbol	r_debug_ptrace		4746883						
ANR	4746933	Symbol	pid		4746883						
ANR	4746934	Symbol	PT_ATTACHEXC		4746883						
ANR	4746935	Function	xnu_detach	222:0:5197:5763							
ANR	4746936	FunctionDef	"xnu_detach (RDebug * dbg , int pid)"		4746935	0					
ANR	4746937	CompoundStatement		222:37:5234:5763	4746935	0					
ANR	4746938	ReturnStatement	"return r_debug_ptrace ( dbg , PT_DETACH , pid , NULL , 0 ) ;"	224:1:5256:5308	4746935	0	True				
ANR	4746939	CallExpression	"r_debug_ptrace ( dbg , PT_DETACH , pid , NULL , 0 )"		4746935	0					
ANR	4746940	Callee	r_debug_ptrace		4746935	0					
ANR	4746941	Identifier	r_debug_ptrace		4746935	0					
ANR	4746942	ArgumentList	dbg		4746935	1					
ANR	4746943	Argument	dbg		4746935	0					
ANR	4746944	Identifier	dbg		4746935	0					
ANR	4746945	Argument	PT_DETACH		4746935	1					
ANR	4746946	Identifier	PT_DETACH		4746935	0					
ANR	4746947	Argument	pid		4746935	2					
ANR	4746948	Identifier	pid		4746935	0					
ANR	4746949	Argument	NULL		4746935	3					
ANR	4746950	Identifier	NULL		4746935	0					
ANR	4746951	Argument	0		4746935	4					
ANR	4746952	PrimaryExpression	0		4746935	0					
ANR	4746953	ReturnType	int		4746935	1					
ANR	4746954	Identifier	xnu_detach		4746935	2					
ANR	4746955	ParameterList	"RDebug * dbg , int pid"		4746935	3					
ANR	4746956	Parameter	RDebug * dbg	222:15:5212:5222	4746935	0	True				
ANR	4746957	ParameterType	RDebug *		4746935	0					
ANR	4746958	Identifier	dbg		4746935	1					
ANR	4746959	Parameter	int pid	222:28:5225:5231	4746935	1	True				
ANR	4746960	ParameterType	int		4746935	0					
ANR	4746961	Identifier	pid		4746935	1					
ANR	4746962	CFGEntryNode	ENTRY		4746935		True				
ANR	4746963	CFGExitNode	EXIT		4746935		True				
ANR	4746964	Symbol	NULL		4746935						
ANR	4746965	Symbol	dbg		4746935						
ANR	4746966	Symbol	r_debug_ptrace		4746935						
ANR	4746967	Symbol	pid		4746935						
ANR	4746968	Symbol	PT_DETACH		4746935						
ANR	4746969	Function	task_suspend_count	243:0:5766:6097							
ANR	4746970	FunctionDef	task_suspend_count (task_t task)		4746969	0					
ANR	4746971	CompoundStatement		243:43:5809:6097	4746969	0					
ANR	4746972	IdentifierDeclStatement	kern_return_t kr ;	244:1:5812:5828	4746969	0	True				
ANR	4746973	IdentifierDecl	kr		4746969	0					
ANR	4746974	IdentifierDeclType	kern_return_t		4746969	0					
ANR	4746975	Identifier	kr		4746969	1					
ANR	4746976	IdentifierDeclStatement	struct task_basic_info info ;	245:1:5831:5858	4746969	1	True				
ANR	4746977	IdentifierDecl	info		4746969	0					
ANR	4746978	IdentifierDeclType	struct task_basic_info		4746969	0					
ANR	4746979	Identifier	info		4746969	1					
ANR	4746980	IdentifierDeclStatement	mach_msg_type_number_t count = TASK_BASIC_INFO_COUNT ;	246:1:5861:5913	4746969	2	True				
ANR	4746981	IdentifierDecl	count = TASK_BASIC_INFO_COUNT		4746969	0					
ANR	4746982	IdentifierDeclType	mach_msg_type_number_t		4746969	0					
ANR	4746983	Identifier	count		4746969	1					
ANR	4746984	AssignmentExpression	count = TASK_BASIC_INFO_COUNT		4746969	2		=			
ANR	4746985	Identifier	TASK_BASIC_INFO_COUNT		4746969	0					
ANR	4746986	Identifier	TASK_BASIC_INFO_COUNT		4746969	1					
ANR	4746987	ExpressionStatement	"kr = task_info ( task , TASK_BASIC_INFO , ( task_info_t ) & info , & count )"	247:1:5916:5983	4746969	3	True				
ANR	4746988	AssignmentExpression	"kr = task_info ( task , TASK_BASIC_INFO , ( task_info_t ) & info , & count )"		4746969	0		=			
ANR	4746989	Identifier	kr		4746969	0					
ANR	4746990	CallExpression	"task_info ( task , TASK_BASIC_INFO , ( task_info_t ) & info , & count )"		4746969	1					
ANR	4746991	Callee	task_info		4746969	0					
ANR	4746992	Identifier	task_info		4746969	0					
ANR	4746993	ArgumentList	task		4746969	1					
ANR	4746994	Argument	task		4746969	0					
ANR	4746995	Identifier	task		4746969	0					
ANR	4746996	Argument	TASK_BASIC_INFO		4746969	1					
ANR	4746997	Identifier	TASK_BASIC_INFO		4746969	0					
ANR	4746998	Argument	( task_info_t ) & info		4746969	2					
ANR	4746999	CastExpression	( task_info_t ) & info		4746969	0					
ANR	4747000	CastTarget	task_info_t		4746969	0					
ANR	4747001	UnaryOperationExpression	& info		4746969	1					
ANR	4747002	UnaryOperator	&		4746969	0					
ANR	4747003	Identifier	info		4746969	1					
ANR	4747004	Argument	& count		4746969	3					
ANR	4747005	UnaryOperationExpression	& count		4746969	0					
ANR	4747006	UnaryOperator	&		4746969	0					
ANR	4747007	Identifier	count		4746969	1					
ANR	4747008	IfStatement	if ( kr != KERN_SUCCESS )		4746969	4					
ANR	4747009	Condition	kr != KERN_SUCCESS	248:5:5990:6007	4746969	0	True				
ANR	4747010	EqualityExpression	kr != KERN_SUCCESS		4746969	0		!=			
ANR	4747011	Identifier	kr		4746969	0					
ANR	4747012	Identifier	KERN_SUCCESS		4746969	1					
ANR	4747013	CompoundStatement		6:25:200:200	4746969	1					
ANR	4747014	ExpressionStatement	"eprintf ( ""failed to get task info\\n"" )"	249:2:6014:6051	4746969	0	True				
ANR	4747015	CallExpression	"eprintf ( ""failed to get task info\\n"" )"		4746969	0					
ANR	4747016	Callee	eprintf		4746969	0					
ANR	4747017	Identifier	eprintf		4746969	0					
ANR	4747018	ArgumentList	"""failed to get task info\\n"""		4746969	1					
ANR	4747019	Argument	"""failed to get task info\\n"""		4746969	0					
ANR	4747020	PrimaryExpression	"""failed to get task info\\n"""		4746969	0					
ANR	4747021	ReturnStatement	return - 1 ;	250:2:6055:6064	4746969	1	True				
ANR	4747022	UnaryOperationExpression	- 1		4746969	0					
ANR	4747023	UnaryOperator	-		4746969	0					
ANR	4747024	PrimaryExpression	1		4746969	1					
ANR	4747025	ReturnStatement	return info . suspend_count ;	252:1:6070:6095	4746969	5	True				
ANR	4747026	MemberAccess	info . suspend_count		4746969	0					
ANR	4747027	Identifier	info		4746969	0					
ANR	4747028	Identifier	suspend_count		4746969	1					
ANR	4747029	ReturnType	static int		4746969	1					
ANR	4747030	Identifier	task_suspend_count		4746969	2					
ANR	4747031	ParameterList	task_t task		4746969	3					
ANR	4747032	Parameter	task_t task	243:30:5796:5806	4746969	0	True				
ANR	4747033	ParameterType	task_t		4746969	0					
ANR	4747034	Identifier	task		4746969	1					
ANR	4747035	CFGEntryNode	ENTRY		4746969		True				
ANR	4747036	CFGExitNode	EXIT		4746969		True				
ANR	4747037	Symbol	task		4746969						
ANR	4747038	Symbol	TASK_BASIC_INFO_COUNT		4746969						
ANR	4747039	Symbol	& info		4746969						
ANR	4747040	Symbol	TASK_BASIC_INFO		4746969						
ANR	4747041	Symbol	info . suspend_count		4746969						
ANR	4747042	Symbol	kr		4746969						
ANR	4747043	Symbol	count		4746969						
ANR	4747044	Symbol	& count		4746969						
ANR	4747045	Symbol	KERN_SUCCESS		4746969						
ANR	4747046	Symbol	task_info		4746969						
ANR	4747047	Symbol	info		4746969						
ANR	4747048	Function	xnu_stop	255:0:6100:6796							
ANR	4747049	FunctionDef	"xnu_stop (RDebug * dbg , int pid)"		4747048	0					
ANR	4747050	CompoundStatement		255:35:6135:6796	4747048	0					
ANR	4747051	ExpressionStatement	"eprintf ( ""xnu_stop: not implemented\\n"" )"	257:1:6157:6196	4747048	0	True				
ANR	4747052	CallExpression	"eprintf ( ""xnu_stop: not implemented\\n"" )"		4747048	0					
ANR	4747053	Callee	eprintf		4747048	0					
ANR	4747054	Identifier	eprintf		4747048	0					
ANR	4747055	ArgumentList	"""xnu_stop: not implemented\\n"""		4747048	1					
ANR	4747056	Argument	"""xnu_stop: not implemented\\n"""		4747048	0					
ANR	4747057	PrimaryExpression	"""xnu_stop: not implemented\\n"""		4747048	0					
ANR	4747058	ReturnStatement	return false ;	258:1:6199:6211	4747048	1	True				
ANR	4747059	Identifier	false		4747048	0					
ANR	4747060	ReturnType	int		4747048	1					
ANR	4747061	Identifier	xnu_stop		4747048	2					
ANR	4747062	ParameterList	"RDebug * dbg , int pid"		4747048	3					
ANR	4747063	Parameter	RDebug * dbg	255:13:6113:6123	4747048	0	True				
ANR	4747064	ParameterType	RDebug *		4747048	0					
ANR	4747065	Identifier	dbg		4747048	1					
ANR	4747066	Parameter	int pid	255:26:6126:6132	4747048	1	True				
ANR	4747067	ParameterType	int		4747048	0					
ANR	4747068	Identifier	pid		4747048	1					
ANR	4747069	CFGEntryNode	ENTRY		4747048		True				
ANR	4747070	CFGExitNode	EXIT		4747048		True				
ANR	4747071	Symbol	dbg		4747048						
ANR	4747072	Symbol	false		4747048						
ANR	4747073	Symbol	pid		4747048						
ANR	4747074	Function	xnu_continue	293:0:6799:7651							
ANR	4747075	FunctionDef	"xnu_continue (RDebug * dbg , int pid , int tid , int sig)"		4747074	0					
ANR	4747076	CompoundStatement		293:57:6856:7651	4747074	0					
ANR	4747077	IdentifierDeclStatement	void * data = ( void * ) ( size_t ) ( ( sig != - 1 ) ? sig : dbg -> reason . signum ) ;	295:1:6878:6946	4747074	0	True				
ANR	4747078	IdentifierDecl	* data = ( void * ) ( size_t ) ( ( sig != - 1 ) ? sig : dbg -> reason . signum )		4747074	0					
ANR	4747079	IdentifierDeclType	void *		4747074	0					
ANR	4747080	Identifier	data		4747074	1					
ANR	4747081	AssignmentExpression	* data = ( void * ) ( size_t ) ( ( sig != - 1 ) ? sig : dbg -> reason . signum )		4747074	2		=			
ANR	4747082	Identifier	data		4747074	0					
ANR	4747083	CastExpression	( void * ) ( size_t ) ( ( sig != - 1 ) ? sig : dbg -> reason . signum )		4747074	1					
ANR	4747084	CastTarget	void *		4747074	0					
ANR	4747085	CastExpression	( size_t ) ( ( sig != - 1 ) ? sig : dbg -> reason . signum )		4747074	1					
ANR	4747086	CastTarget	size_t		4747074	0					
ANR	4747087	ConditionalExpression	( sig != - 1 ) ? sig : dbg -> reason . signum		4747074	1					
ANR	4747088	Condition	sig != - 1		4747074	0					
ANR	4747089	EqualityExpression	sig != - 1		4747074	0		!=			
ANR	4747090	Identifier	sig		4747074	0					
ANR	4747091	UnaryOperationExpression	- 1		4747074	1					
ANR	4747092	UnaryOperator	-		4747074	0					
ANR	4747093	PrimaryExpression	1		4747074	1					
ANR	4747094	Identifier	sig		4747074	1					
ANR	4747095	MemberAccess	dbg -> reason . signum		4747074	2					
ANR	4747096	PtrMemberAccess	dbg -> reason		4747074	0					
ANR	4747097	Identifier	dbg		4747074	0					
ANR	4747098	Identifier	reason		4747074	1					
ANR	4747099	Identifier	signum		4747074	1					
ANR	4747100	ExpressionStatement	task_resume ( pid_to_task ( pid ) )	296:1:6949:6980	4747074	1	True				
ANR	4747101	CallExpression	task_resume ( pid_to_task ( pid ) )		4747074	0					
ANR	4747102	Callee	task_resume		4747074	0					
ANR	4747103	Identifier	task_resume		4747074	0					
ANR	4747104	ArgumentList	pid_to_task ( pid )		4747074	1					
ANR	4747105	Argument	pid_to_task ( pid )		4747074	0					
ANR	4747106	CallExpression	pid_to_task ( pid )		4747074	0					
ANR	4747107	Callee	pid_to_task		4747074	0					
ANR	4747108	Identifier	pid_to_task		4747074	0					
ANR	4747109	ArgumentList	pid		4747074	1					
ANR	4747110	Argument	pid		4747074	0					
ANR	4747111	Identifier	pid		4747074	0					
ANR	4747112	ReturnStatement	"return r_debug_ptrace ( dbg , PT_CONTINUE , pid , ( void * ) ( size_t ) 1 , ( int ) ( size_t ) data ) == 0 ;"	297:1:6983:7073	4747074	2	True				
ANR	4747113	EqualityExpression	"r_debug_ptrace ( dbg , PT_CONTINUE , pid , ( void * ) ( size_t ) 1 , ( int ) ( size_t ) data ) == 0"		4747074	0		==			
ANR	4747114	CallExpression	"r_debug_ptrace ( dbg , PT_CONTINUE , pid , ( void * ) ( size_t ) 1 , ( int ) ( size_t ) data )"		4747074	0					
ANR	4747115	Callee	r_debug_ptrace		4747074	0					
ANR	4747116	Identifier	r_debug_ptrace		4747074	0					
ANR	4747117	ArgumentList	dbg		4747074	1					
ANR	4747118	Argument	dbg		4747074	0					
ANR	4747119	Identifier	dbg		4747074	0					
ANR	4747120	Argument	PT_CONTINUE		4747074	1					
ANR	4747121	Identifier	PT_CONTINUE		4747074	0					
ANR	4747122	Argument	pid		4747074	2					
ANR	4747123	Identifier	pid		4747074	0					
ANR	4747124	Argument	( void * ) ( size_t ) 1		4747074	3					
ANR	4747125	CastExpression	( void * ) ( size_t ) 1		4747074	0					
ANR	4747126	CastTarget	void *		4747074	0					
ANR	4747127	CastExpression	( size_t ) 1		4747074	1					
ANR	4747128	CastTarget	size_t		4747074	0					
ANR	4747129	PrimaryExpression	1		4747074	1					
ANR	4747130	Argument	( int ) ( size_t ) data		4747074	4					
ANR	4747131	CastExpression	( int ) ( size_t ) data		4747074	0					
ANR	4747132	CastTarget	int		4747074	0					
ANR	4747133	CastExpression	( size_t ) data		4747074	1					
ANR	4747134	CastTarget	size_t		4747074	0					
ANR	4747135	Identifier	data		4747074	1					
ANR	4747136	PrimaryExpression	0		4747074	1					
ANR	4747137	ReturnType	int		4747074	1					
ANR	4747138	Identifier	xnu_continue		4747074	2					
ANR	4747139	ParameterList	"RDebug * dbg , int pid , int tid , int sig"		4747074	3					
ANR	4747140	Parameter	RDebug * dbg	293:17:6816:6826	4747074	0	True				
ANR	4747141	ParameterType	RDebug *		4747074	0					
ANR	4747142	Identifier	dbg		4747074	1					
ANR	4747143	Parameter	int pid	293:30:6829:6835	4747074	1	True				
ANR	4747144	ParameterType	int		4747074	0					
ANR	4747145	Identifier	pid		4747074	1					
ANR	4747146	Parameter	int tid	293:39:6838:6844	4747074	2	True				
ANR	4747147	ParameterType	int		4747074	0					
ANR	4747148	Identifier	tid		4747074	1					
ANR	4747149	Parameter	int sig	293:48:6847:6853	4747074	3	True				
ANR	4747150	ParameterType	int		4747074	0					
ANR	4747151	Identifier	sig		4747074	1					
ANR	4747152	CFGEntryNode	ENTRY		4747074		True				
ANR	4747153	CFGExitNode	EXIT		4747074		True				
ANR	4747154	Symbol	sig		4747074						
ANR	4747155	Symbol	dbg -> reason . signum		4747074						
ANR	4747156	Symbol	dbg -> reason		4747074						
ANR	4747157	Symbol	pid_to_task		4747074						
ANR	4747158	Symbol	data		4747074						
ANR	4747159	Symbol	dbg		4747074						
ANR	4747160	Symbol	r_debug_ptrace		4747074						
ANR	4747161	Symbol	pid		4747074						
ANR	4747162	Symbol	* dbg		4747074						
ANR	4747163	Symbol	tid		4747074						
ANR	4747164	Symbol	PT_CONTINUE		4747074						
ANR	4747165	Function	xnu_reg_profile	325:0:7654:8183							
ANR	4747166	FunctionDef	xnu_reg_profile (RDebug * dbg)		4747165	0					
ANR	4747167	CompoundStatement		325:35:7689:8183	4747165	0					
ANR	4747168	IfStatement	if ( dbg -> bits & R_SYS_BITS_32 )		4747165	0					
ANR	4747169	Condition	dbg -> bits & R_SYS_BITS_32	327:5:7723:7747	4747165	0	True				
ANR	4747170	BitAndExpression	dbg -> bits & R_SYS_BITS_32		4747165	0		&			
ANR	4747171	PtrMemberAccess	dbg -> bits		4747165	0					
ANR	4747172	Identifier	dbg		4747165	0					
ANR	4747173	Identifier	bits		4747165	1					
ANR	4747174	Identifier	R_SYS_BITS_32		4747165	1					
ANR	4747175	CompoundStatement		3:32:60:60	4747165	1					
ANR	4747176	Statement	include	328:3:7755:7761	4747165	0	True				
ANR	4747177	Statement	"""reg/darwin-x86.h"""	328:11:7763:7780	4747165	1	True				
ANR	4747178	ElseStatement	else		4747165	0					
ANR	4747179	IfStatement	if ( dbg -> bits == R_SYS_BITS_64 )		4747165	0					
ANR	4747180	Condition	dbg -> bits == R_SYS_BITS_64	329:12:7794:7819	4747165	0	True				
ANR	4747181	EqualityExpression	dbg -> bits == R_SYS_BITS_64		4747165	0		==			
ANR	4747182	PtrMemberAccess	dbg -> bits		4747165	0					
ANR	4747183	Identifier	dbg		4747165	0					
ANR	4747184	Identifier	bits		4747165	1					
ANR	4747185	Identifier	R_SYS_BITS_64		4747165	1					
ANR	4747186	CompoundStatement		5:40:132:132	4747165	1					
ANR	4747187	Statement	include	330:3:7827:7833	4747165	0	True				
ANR	4747188	Statement	"""reg/darwin-x64.h"""	330:11:7835:7852	4747165	1	True				
ANR	4747189	ElseStatement	else		4747165	0					
ANR	4747190	CompoundStatement		7:8:172:172	4747165	0					
ANR	4747191	ExpressionStatement	"eprintf ( ""invalid bit size\\n"" )"	332:2:7866:7896	4747165	0	True				
ANR	4747192	CallExpression	"eprintf ( ""invalid bit size\\n"" )"		4747165	0					
ANR	4747193	Callee	eprintf		4747165	0					
ANR	4747194	Identifier	eprintf		4747165	0					
ANR	4747195	ArgumentList	"""invalid bit size\\n"""		4747165	1					
ANR	4747196	Argument	"""invalid bit size\\n"""		4747165	0					
ANR	4747197	PrimaryExpression	"""invalid bit size\\n"""		4747165	0					
ANR	4747198	ReturnStatement	return NULL ;	333:2:7900:7911	4747165	1	True				
ANR	4747199	Identifier	NULL		4747165	0					
ANR	4747200	ReturnType	char *		4747165	1					
ANR	4747201	Identifier	xnu_reg_profile		4747165	2					
ANR	4747202	ParameterList	RDebug * dbg		4747165	3					
ANR	4747203	Parameter	RDebug * dbg	325:22:7676:7686	4747165	0	True				
ANR	4747204	ParameterType	RDebug *		4747165	0					
ANR	4747205	Identifier	dbg		4747165	1					
ANR	4747206	CFGEntryNode	ENTRY		4747165		True				
ANR	4747207	CFGExitNode	EXIT		4747165		True				
ANR	4747208	Symbol	NULL		4747165						
ANR	4747209	Symbol	dbg		4747165						
ANR	4747210	Symbol	dbg -> bits		4747165						
ANR	4747211	Symbol	* dbg		4747165						
ANR	4747212	Symbol	R_SYS_BITS_64		4747165						
ANR	4747213	Symbol	R_SYS_BITS_32		4747165						
ANR	4747214	Function	xnu_reg_write	352:0:8387:9433							
ANR	4747215	FunctionDef	"xnu_reg_write (RDebug * dbg , int type , const ut8 * buf , int size)"		4747214	0					
ANR	4747216	CompoundStatement		352:67:8454:9433	4747214	0					
ANR	4747217	IdentifierDeclStatement	bool ret ;	353:1:8457:8465	4747214	0	True				
ANR	4747218	IdentifierDecl	ret		4747214	0					
ANR	4747219	IdentifierDeclType	bool		4747214	0					
ANR	4747220	Identifier	ret		4747214	1					
ANR	4747221	IdentifierDeclStatement	"xnu_thread_t * th = get_xnu_thread ( dbg , getcurthread ( dbg ) ) ;"	354:1:8468:8527	4747214	1	True				
ANR	4747222	IdentifierDecl	"* th = get_xnu_thread ( dbg , getcurthread ( dbg ) )"		4747214	0					
ANR	4747223	IdentifierDeclType	xnu_thread_t *		4747214	0					
ANR	4747224	Identifier	th		4747214	1					
ANR	4747225	AssignmentExpression	"* th = get_xnu_thread ( dbg , getcurthread ( dbg ) )"		4747214	2		=			
ANR	4747226	Identifier	th		4747214	0					
ANR	4747227	CallExpression	"get_xnu_thread ( dbg , getcurthread ( dbg ) )"		4747214	1					
ANR	4747228	Callee	get_xnu_thread		4747214	0					
ANR	4747229	Identifier	get_xnu_thread		4747214	0					
ANR	4747230	ArgumentList	dbg		4747214	1					
ANR	4747231	Argument	dbg		4747214	0					
ANR	4747232	Identifier	dbg		4747214	0					
ANR	4747233	Argument	getcurthread ( dbg )		4747214	1					
ANR	4747234	CallExpression	getcurthread ( dbg )		4747214	0					
ANR	4747235	Callee	getcurthread		4747214	0					
ANR	4747236	Identifier	getcurthread		4747214	0					
ANR	4747237	ArgumentList	dbg		4747214	1					
ANR	4747238	Argument	dbg		4747214	0					
ANR	4747239	Identifier	dbg		4747214	0					
ANR	4747240	IfStatement	if ( ! th )		4747214	2					
ANR	4747241	Condition	! th	355:5:8534:8536	4747214	0	True				
ANR	4747242	UnaryOperationExpression	! th		4747214	0					
ANR	4747243	UnaryOperator	!		4747214	0					
ANR	4747244	Identifier	th		4747214	1					
ANR	4747245	CompoundStatement		4:10:84:84	4747214	1					
ANR	4747246	ReturnStatement	return 0 ;	356:2:8543:8551	4747214	0	True				
ANR	4747247	PrimaryExpression	0		4747214	0					
ANR	4747248	SwitchStatement	switch ( type )		4747214	3					
ANR	4747249	Condition	type	358:9:8565:8568	4747214	0	True				
ANR	4747250	Identifier	type		4747214	0					
ANR	4747251	CompoundStatement		7:15:116:116	4747214	1					
ANR	4747252	Label	case R_REG_TYPE_DRX :	359:1:8574:8593	4747214	0	True				
ANR	4747253	Identifier	R_REG_TYPE_DRX		4747214	0					
ANR	4747254	ExpressionStatement	"memcpy ( & th -> drx . uds . ds32 , buf , R_MIN ( size , sizeof ( th -> drx ) ) )"	361:2:8612:8675	4747214	1	True				
ANR	4747255	CallExpression	"memcpy ( & th -> drx . uds . ds32 , buf , R_MIN ( size , sizeof ( th -> drx ) ) )"		4747214	0					
ANR	4747256	Callee	memcpy		4747214	0					
ANR	4747257	Identifier	memcpy		4747214	0					
ANR	4747258	ArgumentList	& th -> drx . uds . ds32		4747214	1					
ANR	4747259	Argument	& th -> drx . uds . ds32		4747214	0					
ANR	4747260	UnaryOperationExpression	& th -> drx . uds . ds32		4747214	0					
ANR	4747261	UnaryOperator	&		4747214	0					
ANR	4747262	MemberAccess	th -> drx . uds . ds32		4747214	1					
ANR	4747263	MemberAccess	th -> drx . uds		4747214	0					
ANR	4747264	PtrMemberAccess	th -> drx		4747214	0					
ANR	4747265	Identifier	th		4747214	0					
ANR	4747266	Identifier	drx		4747214	1					
ANR	4747267	Identifier	uds		4747214	1					
ANR	4747268	Identifier	ds32		4747214	1					
ANR	4747269	Argument	buf		4747214	1					
ANR	4747270	Identifier	buf		4747214	0					
ANR	4747271	Argument	"R_MIN ( size , sizeof ( th -> drx ) )"		4747214	2					
ANR	4747272	CallExpression	"R_MIN ( size , sizeof ( th -> drx ) )"		4747214	0					
ANR	4747273	Callee	R_MIN		4747214	0					
ANR	4747274	Identifier	R_MIN		4747214	0					
ANR	4747275	ArgumentList	size		4747214	1					
ANR	4747276	Argument	size		4747214	0					
ANR	4747277	Identifier	size		4747214	0					
ANR	4747278	Argument	sizeof ( th -> drx )		4747214	1					
ANR	4747279	SizeofExpression	sizeof ( th -> drx )		4747214	0					
ANR	4747280	Sizeof	sizeof		4747214	0					
ANR	4747281	PtrMemberAccess	th -> drx		4747214	1					
ANR	4747282	Identifier	th		4747214	0					
ANR	4747283	Identifier	drx		4747214	1					
ANR	4747284	ExpressionStatement	"ret = xnu_thread_set_drx ( dbg , th )"	373:2:9113:9147	4747214	2	True				
ANR	4747285	AssignmentExpression	"ret = xnu_thread_set_drx ( dbg , th )"		4747214	0		=			
ANR	4747286	Identifier	ret		4747214	0					
ANR	4747287	CallExpression	"xnu_thread_set_drx ( dbg , th )"		4747214	1					
ANR	4747288	Callee	xnu_thread_set_drx		4747214	0					
ANR	4747289	Identifier	xnu_thread_set_drx		4747214	0					
ANR	4747290	ArgumentList	dbg		4747214	1					
ANR	4747291	Argument	dbg		4747214	0					
ANR	4747292	Identifier	dbg		4747214	0					
ANR	4747293	Argument	th		4747214	1					
ANR	4747294	Identifier	th		4747214	0					
ANR	4747295	BreakStatement	break ;	374:2:9151:9156	4747214	3	True				
ANR	4747296	Label	default :	375:1:9159:9166	4747214	4	True				
ANR	4747297	Identifier	default		4747214	0					
ANR	4747298	Statement	warning	378:1:9257:9263	4747214	5	True				
ANR	4747299	Statement	TODO	378:9:9265:9268	4747214	6	True				
ANR	4747300	Statement	powerpc	378:14:9270:9276	4747214	7	True				
ANR	4747301	Statement	support	378:22:9278:9284	4747214	8	True				
ANR	4747302	Statement	here	378:30:9286:9289	4747214	9	True				
ANR	4747303	ExpressionStatement	"ret = xnu_thread_set_gpr ( dbg , th )"	382:2:9372:9406	4747214	10	True				
ANR	4747304	AssignmentExpression	"ret = xnu_thread_set_gpr ( dbg , th )"		4747214	0		=			
ANR	4747305	Identifier	ret		4747214	0					
ANR	4747306	CallExpression	"xnu_thread_set_gpr ( dbg , th )"		4747214	1					
ANR	4747307	Callee	xnu_thread_set_gpr		4747214	0					
ANR	4747308	Identifier	xnu_thread_set_gpr		4747214	0					
ANR	4747309	ArgumentList	dbg		4747214	1					
ANR	4747310	Argument	dbg		4747214	0					
ANR	4747311	Identifier	dbg		4747214	0					
ANR	4747312	Argument	th		4747214	1					
ANR	4747313	Identifier	th		4747214	0					
ANR	4747314	BreakStatement	break ;	383:2:9410:9415	4747214	11	True				
ANR	4747315	ReturnStatement	return ret ;	385:1:9421:9431	4747214	4	True				
ANR	4747316	Identifier	ret		4747214	0					
ANR	4747317	ReturnType	int		4747214	1					
ANR	4747318	Identifier	xnu_reg_write		4747214	2					
ANR	4747319	ParameterList	"RDebug * dbg , int type , const ut8 * buf , int size"		4747214	3					
ANR	4747320	Parameter	RDebug * dbg	352:18:8405:8415	4747214	0	True				
ANR	4747321	ParameterType	RDebug *		4747214	0					
ANR	4747322	Identifier	dbg		4747214	1					
ANR	4747323	Parameter	int type	352:31:8418:8425	4747214	1	True				
ANR	4747324	ParameterType	int		4747214	0					
ANR	4747325	Identifier	type		4747214	1					
ANR	4747326	Parameter	const ut8 * buf	352:41:8428:8441	4747214	2	True				
ANR	4747327	ParameterType	const ut8 *		4747214	0					
ANR	4747328	Identifier	buf		4747214	1					
ANR	4747329	Parameter	int size	352:57:8444:8451	4747214	3	True				
ANR	4747330	ParameterType	int		4747214	0					
ANR	4747331	Identifier	size		4747214	1					
ANR	4747332	CFGEntryNode	ENTRY		4747214		True				
ANR	4747333	CFGExitNode	EXIT		4747214		True				
ANR	4747334	Symbol	ret		4747214						
ANR	4747335	Symbol	th -> drx		4747214						
ANR	4747336	Symbol	xnu_thread_set_drx		4747214						
ANR	4747337	Symbol	& th -> drx		4747214						
ANR	4747338	Symbol	dbg		4747214						
ANR	4747339	Symbol	get_xnu_thread		4747214						
ANR	4747340	Symbol	R_MIN		4747214						
ANR	4747341	Symbol	th -> drx . uds		4747214						
ANR	4747342	Symbol	type		4747214						
ANR	4747343	Symbol	xnu_thread_set_gpr		4747214						
ANR	4747344	Symbol	buf		4747214						
ANR	4747345	Symbol	size		4747214						
ANR	4747346	Symbol	th		4747214						
ANR	4747347	Symbol	getcurthread		4747214						
ANR	4747348	Symbol	* th		4747214						
ANR	4747349	Symbol	& th -> drx . uds		4747214						
ANR	4747350	Symbol	& th -> drx . uds . ds32		4747214						
ANR	4747351	Function	xnu_reg_read	388:0:9436:9990							
ANR	4747352	FunctionDef	"xnu_reg_read (RDebug * dbg , int type , ut8 * buf , int size)"		4747351	0					
ANR	4747353	CompoundStatement		388:60:9496:9990	4747351	0					
ANR	4747354	IdentifierDeclStatement	"xnu_thread_t * th = get_xnu_thread ( dbg , getcurthread ( dbg ) ) ;"	389:1:9499:9558	4747351	0	True				
ANR	4747355	IdentifierDecl	"* th = get_xnu_thread ( dbg , getcurthread ( dbg ) )"		4747351	0					
ANR	4747356	IdentifierDeclType	xnu_thread_t *		4747351	0					
ANR	4747357	Identifier	th		4747351	1					
ANR	4747358	AssignmentExpression	"* th = get_xnu_thread ( dbg , getcurthread ( dbg ) )"		4747351	2		=			
ANR	4747359	Identifier	th		4747351	0					
ANR	4747360	CallExpression	"get_xnu_thread ( dbg , getcurthread ( dbg ) )"		4747351	1					
ANR	4747361	Callee	get_xnu_thread		4747351	0					
ANR	4747362	Identifier	get_xnu_thread		4747351	0					
ANR	4747363	ArgumentList	dbg		4747351	1					
ANR	4747364	Argument	dbg		4747351	0					
ANR	4747365	Identifier	dbg		4747351	0					
ANR	4747366	Argument	getcurthread ( dbg )		4747351	1					
ANR	4747367	CallExpression	getcurthread ( dbg )		4747351	0					
ANR	4747368	Callee	getcurthread		4747351	0					
ANR	4747369	Identifier	getcurthread		4747351	0					
ANR	4747370	ArgumentList	dbg		4747351	1					
ANR	4747371	Argument	dbg		4747351	0					
ANR	4747372	Identifier	dbg		4747351	0					
ANR	4747373	IfStatement	if ( ! th )		4747351	1					
ANR	4747374	Condition	! th	390:5:9565:9567	4747351	0	True				
ANR	4747375	UnaryOperationExpression	! th		4747351	0					
ANR	4747376	UnaryOperator	!		4747351	0					
ANR	4747377	Identifier	th		4747351	1					
ANR	4747378	CompoundStatement		3:10:73:73	4747351	1					
ANR	4747379	ReturnStatement	return 0 ;	391:2:9574:9582	4747351	0	True				
ANR	4747380	PrimaryExpression	0		4747351	0					
ANR	4747381	SwitchStatement	switch ( type )		4747351	2					
ANR	4747382	Condition	type	393:9:9596:9599	4747351	0	True				
ANR	4747383	Identifier	type		4747351	0					
ANR	4747384	CompoundStatement		6:15:105:105	4747351	1					
ANR	4747385	Label	case R_REG_TYPE_SEG :	394:1:9605:9624	4747351	0	True				
ANR	4747386	Identifier	R_REG_TYPE_SEG		4747351	0					
ANR	4747387	Label	case R_REG_TYPE_FLG :	395:1:9627:9646	4747351	1	True				
ANR	4747388	Identifier	R_REG_TYPE_FLG		4747351	0					
ANR	4747389	Label	case R_REG_TYPE_GPR :	396:1:9649:9668	4747351	2	True				
ANR	4747390	Identifier	R_REG_TYPE_GPR		4747351	0					
ANR	4747391	IfStatement	"if ( ! xnu_thread_get_gpr ( dbg , th ) )"		4747351	3					
ANR	4747392	Condition	"! xnu_thread_get_gpr ( dbg , th )"	397:6:9676:9704	4747351	0	True				
ANR	4747393	UnaryOperationExpression	"! xnu_thread_get_gpr ( dbg , th )"		4747351	0					
ANR	4747394	UnaryOperator	!		4747351	0					
ANR	4747395	CallExpression	"xnu_thread_get_gpr ( dbg , th )"		4747351	1					
ANR	4747396	Callee	xnu_thread_get_gpr		4747351	0					
ANR	4747397	Identifier	xnu_thread_get_gpr		4747351	0					
ANR	4747398	ArgumentList	dbg		4747351	1					
ANR	4747399	Argument	dbg		4747351	0					
ANR	4747400	Identifier	dbg		4747351	0					
ANR	4747401	Argument	th		4747351	1					
ANR	4747402	Identifier	th		4747351	0					
ANR	4747403	CompoundStatement		10:37:210:210	4747351	1					
ANR	4747404	ReturnStatement	return 0 ;	398:3:9712:9720	4747351	0	True				
ANR	4747405	PrimaryExpression	0		4747351	0					
ANR	4747406	BreakStatement	break ;	400:2:9728:9733	4747351	4	True				
ANR	4747407	Label	case R_REG_TYPE_DRX :	401:1:9736:9755	4747351	5	True				
ANR	4747408	Identifier	R_REG_TYPE_DRX		4747351	0					
ANR	4747409	IfStatement	"if ( ! xnu_thread_get_drx ( dbg , th ) )"		4747351	6					
ANR	4747410	Condition	"! xnu_thread_get_drx ( dbg , th )"	402:6:9763:9791	4747351	0	True				
ANR	4747411	UnaryOperationExpression	"! xnu_thread_get_drx ( dbg , th )"		4747351	0					
ANR	4747412	UnaryOperator	!		4747351	0					
ANR	4747413	CallExpression	"xnu_thread_get_drx ( dbg , th )"		4747351	1					
ANR	4747414	Callee	xnu_thread_get_drx		4747351	0					
ANR	4747415	Identifier	xnu_thread_get_drx		4747351	0					
ANR	4747416	ArgumentList	dbg		4747351	1					
ANR	4747417	Argument	dbg		4747351	0					
ANR	4747418	Identifier	dbg		4747351	0					
ANR	4747419	Argument	th		4747351	1					
ANR	4747420	Identifier	th		4747351	0					
ANR	4747421	CompoundStatement		15:37:297:297	4747351	1					
ANR	4747422	ReturnStatement	return 0 ;	403:3:9799:9807	4747351	0	True				
ANR	4747423	PrimaryExpression	0		4747351	0					
ANR	4747424	BreakStatement	break ;	405:2:9815:9820	4747351	7	True				
ANR	4747425	Label	default :	406:1:9823:9830	4747351	8	True				
ANR	4747426	Identifier	default		4747351	0					
ANR	4747427	ReturnStatement	return 0 ;	407:2:9834:9842	4747351	9	True				
ANR	4747428	PrimaryExpression	0		4747351	0					
ANR	4747429	IfStatement	if ( th -> state )		4747351	3					
ANR	4747430	Condition	th -> state	409:5:9852:9860	4747351	0	True				
ANR	4747431	PtrMemberAccess	th -> state		4747351	0					
ANR	4747432	Identifier	th		4747351	0					
ANR	4747433	Identifier	state		4747351	1					
ANR	4747434	CompoundStatement		23:2:370:408	4747351	1					
ANR	4747435	IdentifierDeclStatement	"int rsz = R_MIN ( th -> state_size , size ) ;"	410:2:9867:9905	4747351	0	True				
ANR	4747436	IdentifierDecl	"rsz = R_MIN ( th -> state_size , size )"		4747351	0					
ANR	4747437	IdentifierDeclType	int		4747351	0					
ANR	4747438	Identifier	rsz		4747351	1					
ANR	4747439	AssignmentExpression	"rsz = R_MIN ( th -> state_size , size )"		4747351	2		=			
ANR	4747440	Identifier	rsz		4747351	0					
ANR	4747441	CallExpression	"R_MIN ( th -> state_size , size )"		4747351	1					
ANR	4747442	Callee	R_MIN		4747351	0					
ANR	4747443	Identifier	R_MIN		4747351	0					
ANR	4747444	ArgumentList	th -> state_size		4747351	1					
ANR	4747445	Argument	th -> state_size		4747351	0					
ANR	4747446	PtrMemberAccess	th -> state_size		4747351	0					
ANR	4747447	Identifier	th		4747351	0					
ANR	4747448	Identifier	state_size		4747351	1					
ANR	4747449	Argument	size		4747351	1					
ANR	4747450	Identifier	size		4747351	0					
ANR	4747451	IfStatement	if ( rsz > 0 )		4747351	1					
ANR	4747452	Condition	rsz > 0	411:6:9913:9919	4747351	0	True				
ANR	4747453	RelationalExpression	rsz > 0		4747351	0		>			
ANR	4747454	Identifier	rsz		4747351	0					
ANR	4747455	PrimaryExpression	0		4747351	1					
ANR	4747456	CompoundStatement		24:15:425:425	4747351	1					
ANR	4747457	ExpressionStatement	"memcpy ( buf , th -> state , rsz )"	412:3:9927:9955	4747351	0	True				
ANR	4747458	CallExpression	"memcpy ( buf , th -> state , rsz )"		4747351	0					
ANR	4747459	Callee	memcpy		4747351	0					
ANR	4747460	Identifier	memcpy		4747351	0					
ANR	4747461	ArgumentList	buf		4747351	1					
ANR	4747462	Argument	buf		4747351	0					
ANR	4747463	Identifier	buf		4747351	0					
ANR	4747464	Argument	th -> state		4747351	1					
ANR	4747465	PtrMemberAccess	th -> state		4747351	0					
ANR	4747466	Identifier	th		4747351	0					
ANR	4747467	Identifier	state		4747351	1					
ANR	4747468	Argument	rsz		4747351	2					
ANR	4747469	Identifier	rsz		4747351	0					
ANR	4747470	ReturnStatement	return rsz ;	413:3:9960:9970	4747351	1	True				
ANR	4747471	Identifier	rsz		4747351	0					
ANR	4747472	ReturnStatement	return 0 ;	416:1:9980:9988	4747351	4	True				
ANR	4747473	PrimaryExpression	0		4747351	0					
ANR	4747474	ReturnType	int		4747351	1					
ANR	4747475	Identifier	xnu_reg_read		4747351	2					
ANR	4747476	ParameterList	"RDebug * dbg , int type , ut8 * buf , int size"		4747351	3					
ANR	4747477	Parameter	RDebug * dbg	388:17:9453:9463	4747351	0	True				
ANR	4747478	ParameterType	RDebug *		4747351	0					
ANR	4747479	Identifier	dbg		4747351	1					
ANR	4747480	Parameter	int type	388:30:9466:9473	4747351	1	True				
ANR	4747481	ParameterType	int		4747351	0					
ANR	4747482	Identifier	type		4747351	1					
ANR	4747483	Parameter	ut8 * buf	388:40:9476:9483	4747351	2	True				
ANR	4747484	ParameterType	ut8 *		4747351	0					
ANR	4747485	Identifier	buf		4747351	1					
ANR	4747486	Parameter	int size	388:50:9486:9493	4747351	3	True				
ANR	4747487	ParameterType	int		4747351	0					
ANR	4747488	Identifier	size		4747351	1					
ANR	4747489	CFGEntryNode	ENTRY		4747351		True				
ANR	4747490	CFGExitNode	EXIT		4747351		True				
ANR	4747491	Symbol	xnu_thread_get_drx		4747351						
ANR	4747492	Symbol	xnu_thread_get_gpr		4747351						
ANR	4747493	Symbol	dbg		4747351						
ANR	4747494	Symbol	get_xnu_thread		4747351						
ANR	4747495	Symbol	R_MIN		4747351						
ANR	4747496	Symbol	type		4747351						
ANR	4747497	Symbol	th -> state		4747351						
ANR	4747498	Symbol	buf		4747351						
ANR	4747499	Symbol	size		4747351						
ANR	4747500	Symbol	th		4747351						
ANR	4747501	Symbol	getcurthread		4747351						
ANR	4747502	Symbol	rsz		4747351						
ANR	4747503	Symbol	* th		4747351						
ANR	4747504	Symbol	th -> state_size		4747351						
ANR	4747505	Function	xnu_map_alloc	419:0:9993:10576							
ANR	4747506	FunctionDef	"xnu_map_alloc (RDebug * dbg , ut64 addr , int size)"		4747505	0					
ANR	4747507	CompoundStatement		419:59:10052:10576	4747505	0					
ANR	4747508	IdentifierDeclStatement	kern_return_t ret ;	420:1:10055:10072	4747505	0	True				
ANR	4747509	IdentifierDecl	ret		4747505	0					
ANR	4747510	IdentifierDeclType	kern_return_t		4747505	0					
ANR	4747511	Identifier	ret		4747505	1					
ANR	4747512	IdentifierDeclStatement	ut8 * base = ( ut8 * ) addr ;	421:1:10075:10098	4747505	1	True				
ANR	4747513	IdentifierDecl	* base = ( ut8 * ) addr		4747505	0					
ANR	4747514	IdentifierDeclType	ut8 *		4747505	0					
ANR	4747515	Identifier	base		4747505	1					
ANR	4747516	AssignmentExpression	* base = ( ut8 * ) addr		4747505	2		=			
ANR	4747517	Identifier	base		4747505	0					
ANR	4747518	CastExpression	( ut8 * ) addr		4747505	1					
ANR	4747519	CastTarget	ut8 *		4747505	0					
ANR	4747520	Identifier	addr		4747505	1					
ANR	4747521	IdentifierDeclStatement	"xnu_thread_t * th = get_xnu_thread ( dbg , dbg -> tid ) ;"	422:1:10101:10150	4747505	2	True				
ANR	4747522	IdentifierDecl	"* th = get_xnu_thread ( dbg , dbg -> tid )"		4747505	0					
ANR	4747523	IdentifierDeclType	xnu_thread_t *		4747505	0					
ANR	4747524	Identifier	th		4747505	1					
ANR	4747525	AssignmentExpression	"* th = get_xnu_thread ( dbg , dbg -> tid )"		4747505	2		=			
ANR	4747526	Identifier	th		4747505	0					
ANR	4747527	CallExpression	"get_xnu_thread ( dbg , dbg -> tid )"		4747505	1					
ANR	4747528	Callee	get_xnu_thread		4747505	0					
ANR	4747529	Identifier	get_xnu_thread		4747505	0					
ANR	4747530	ArgumentList	dbg		4747505	1					
ANR	4747531	Argument	dbg		4747505	0					
ANR	4747532	Identifier	dbg		4747505	0					
ANR	4747533	Argument	dbg -> tid		4747505	1					
ANR	4747534	PtrMemberAccess	dbg -> tid		4747505	0					
ANR	4747535	Identifier	dbg		4747505	0					
ANR	4747536	Identifier	tid		4747505	1					
ANR	4747537	IdentifierDeclStatement	bool anywhere = ! VM_FLAGS_ANYWHERE ;	423:1:10153:10187	4747505	3	True				
ANR	4747538	IdentifierDecl	anywhere = ! VM_FLAGS_ANYWHERE		4747505	0					
ANR	4747539	IdentifierDeclType	bool		4747505	0					
ANR	4747540	Identifier	anywhere		4747505	1					
ANR	4747541	AssignmentExpression	anywhere = ! VM_FLAGS_ANYWHERE		4747505	2		=			
ANR	4747542	Identifier	anywhere		4747505	0					
ANR	4747543	UnaryOperationExpression	! VM_FLAGS_ANYWHERE		4747505	1					
ANR	4747544	UnaryOperator	!		4747505	0					
ANR	4747545	Identifier	VM_FLAGS_ANYWHERE		4747505	1					
ANR	4747546	IfStatement	if ( ! th )		4747505	4					
ANR	4747547	Condition	! th	424:5:10194:10196	4747505	0	True				
ANR	4747548	UnaryOperationExpression	! th		4747505	0					
ANR	4747549	UnaryOperator	!		4747505	0					
ANR	4747550	Identifier	th		4747505	1					
ANR	4747551	CompoundStatement		6:10:146:146	4747505	1					
ANR	4747552	ReturnStatement	return NULL ;	425:2:10203:10214	4747505	0	True				
ANR	4747553	Identifier	NULL		4747505	0					
ANR	4747554	IfStatement	if ( addr == - 1 )		4747505	5					
ANR	4747555	Condition	addr == - 1	427:5:10224:10233	4747505	0	True				
ANR	4747556	EqualityExpression	addr == - 1		4747505	0		==			
ANR	4747557	Identifier	addr		4747505	0					
ANR	4747558	UnaryOperationExpression	- 1		4747505	1					
ANR	4747559	UnaryOperator	-		4747505	0					
ANR	4747560	PrimaryExpression	1		4747505	1					
ANR	4747561	CompoundStatement		9:17:183:183	4747505	1					
ANR	4747562	ExpressionStatement	anywhere = VM_FLAGS_ANYWHERE	428:2:10240:10268	4747505	0	True				
ANR	4747563	AssignmentExpression	anywhere = VM_FLAGS_ANYWHERE		4747505	0		=			
ANR	4747564	Identifier	anywhere		4747505	0					
ANR	4747565	Identifier	VM_FLAGS_ANYWHERE		4747505	1					
ANR	4747566	ExpressionStatement	"ret = vm_allocate ( th -> port , ( vm_address_t * ) & base , ( vm_size_t ) size , anywhere | VM_MAKE_TAG ( DEBUG_MAP_TAG_ID ) )"	430:1:10274:10394	4747505	6	True				
ANR	4747567	AssignmentExpression	"ret = vm_allocate ( th -> port , ( vm_address_t * ) & base , ( vm_size_t ) size , anywhere | VM_MAKE_TAG ( DEBUG_MAP_TAG_ID ) )"		4747505	0		=			
ANR	4747568	Identifier	ret		4747505	0					
ANR	4747569	CallExpression	"vm_allocate ( th -> port , ( vm_address_t * ) & base , ( vm_size_t ) size , anywhere | VM_MAKE_TAG ( DEBUG_MAP_TAG_ID ) )"		4747505	1					
ANR	4747570	Callee	vm_allocate		4747505	0					
ANR	4747571	Identifier	vm_allocate		4747505	0					
ANR	4747572	ArgumentList	th -> port		4747505	1					
ANR	4747573	Argument	th -> port		4747505	0					
ANR	4747574	PtrMemberAccess	th -> port		4747505	0					
ANR	4747575	Identifier	th		4747505	0					
ANR	4747576	Identifier	port		4747505	1					
ANR	4747577	Argument	( vm_address_t * ) & base		4747505	1					
ANR	4747578	CastExpression	( vm_address_t * ) & base		4747505	0					
ANR	4747579	CastTarget	vm_address_t *		4747505	0					
ANR	4747580	UnaryOperationExpression	& base		4747505	1					
ANR	4747581	UnaryOperator	&		4747505	0					
ANR	4747582	Identifier	base		4747505	1					
ANR	4747583	Argument	( vm_size_t ) size		4747505	2					
ANR	4747584	CastExpression	( vm_size_t ) size		4747505	0					
ANR	4747585	CastTarget	vm_size_t		4747505	0					
ANR	4747586	Identifier	size		4747505	1					
ANR	4747587	Argument	anywhere | VM_MAKE_TAG ( DEBUG_MAP_TAG_ID )		4747505	3					
ANR	4747588	InclusiveOrExpression	anywhere | VM_MAKE_TAG ( DEBUG_MAP_TAG_ID )		4747505	0		|			
ANR	4747589	Identifier	anywhere		4747505	0					
ANR	4747590	CallExpression	VM_MAKE_TAG ( DEBUG_MAP_TAG_ID )		4747505	1					
ANR	4747591	Callee	VM_MAKE_TAG		4747505	0					
ANR	4747592	Identifier	VM_MAKE_TAG		4747505	0					
ANR	4747593	ArgumentList	DEBUG_MAP_TAG_ID		4747505	1					
ANR	4747594	Argument	DEBUG_MAP_TAG_ID		4747505	0					
ANR	4747595	Identifier	DEBUG_MAP_TAG_ID		4747505	0					
ANR	4747596	IfStatement	if ( ret != KERN_SUCCESS )		4747505	7					
ANR	4747597	Condition	ret != KERN_SUCCESS	433:5:10401:10419	4747505	0	True				
ANR	4747598	EqualityExpression	ret != KERN_SUCCESS		4747505	0		!=			
ANR	4747599	Identifier	ret		4747505	0					
ANR	4747600	Identifier	KERN_SUCCESS		4747505	1					
ANR	4747601	CompoundStatement		15:26:369:369	4747505	1					
ANR	4747602	ExpressionStatement	"eprintf ( ""vm_allocate failed\\n"" )"	434:2:10426:10458	4747505	0	True				
ANR	4747603	CallExpression	"eprintf ( ""vm_allocate failed\\n"" )"		4747505	0					
ANR	4747604	Callee	eprintf		4747505	0					
ANR	4747605	Identifier	eprintf		4747505	0					
ANR	4747606	ArgumentList	"""vm_allocate failed\\n"""		4747505	1					
ANR	4747607	Argument	"""vm_allocate failed\\n"""		4747505	0					
ANR	4747608	PrimaryExpression	"""vm_allocate failed\\n"""		4747505	0					
ANR	4747609	ReturnStatement	return NULL ;	435:2:10462:10473	4747505	1	True				
ANR	4747610	Identifier	NULL		4747505	0					
ANR	4747611	ExpressionStatement	r_debug_map_sync ( dbg )	437:1:10479:10501	4747505	8	True				
ANR	4747612	CallExpression	r_debug_map_sync ( dbg )		4747505	0					
ANR	4747613	Callee	r_debug_map_sync		4747505	0					
ANR	4747614	Identifier	r_debug_map_sync		4747505	0					
ANR	4747615	ArgumentList	dbg		4747505	1					
ANR	4747616	Argument	dbg		4747505	0					
ANR	4747617	Identifier	dbg		4747505	0					
ANR	4747618	ReturnStatement	"return r_debug_map_get ( dbg , ( ut64 ) base ) ;"	438:1:10534:10574	4747505	9	True				
ANR	4747619	CallExpression	"r_debug_map_get ( dbg , ( ut64 ) base )"		4747505	0					
ANR	4747620	Callee	r_debug_map_get		4747505	0					
ANR	4747621	Identifier	r_debug_map_get		4747505	0					
ANR	4747622	ArgumentList	dbg		4747505	1					
ANR	4747623	Argument	dbg		4747505	0					
ANR	4747624	Identifier	dbg		4747505	0					
ANR	4747625	Argument	( ut64 ) base		4747505	1					
ANR	4747626	CastExpression	( ut64 ) base		4747505	0					
ANR	4747627	CastTarget	ut64		4747505	0					
ANR	4747628	Identifier	base		4747505	1					
ANR	4747629	ReturnType	RDebugMap *		4747505	1					
ANR	4747630	Identifier	xnu_map_alloc		4747505	2					
ANR	4747631	ParameterList	"RDebug * dbg , ut64 addr , int size"		4747505	3					
ANR	4747632	Parameter	RDebug * dbg	419:25:10018:10028	4747505	0	True				
ANR	4747633	ParameterType	RDebug *		4747505	0					
ANR	4747634	Identifier	dbg		4747505	1					
ANR	4747635	Parameter	ut64 addr	419:38:10031:10039	4747505	1	True				
ANR	4747636	ParameterType	ut64		4747505	0					
ANR	4747637	Identifier	addr		4747505	1					
ANR	4747638	Parameter	int size	419:49:10042:10049	4747505	2	True				
ANR	4747639	ParameterType	int		4747505	0					
ANR	4747640	Identifier	size		4747505	1					
ANR	4747641	CFGEntryNode	ENTRY		4747505		True				
ANR	4747642	CFGExitNode	EXIT		4747505		True				
ANR	4747643	Symbol	ret		4747505						
ANR	4747644	Symbol	& base		4747505						
ANR	4747645	Symbol	NULL		4747505						
ANR	4747646	Symbol	VM_MAKE_TAG		4747505						
ANR	4747647	Symbol	dbg		4747505						
ANR	4747648	Symbol	get_xnu_thread		4747505						
ANR	4747649	Symbol	DEBUG_MAP_TAG_ID		4747505						
ANR	4747650	Symbol	* dbg		4747505						
ANR	4747651	Symbol	anywhere		4747505						
ANR	4747652	Symbol	dbg -> tid		4747505						
ANR	4747653	Symbol	th -> port		4747505						
ANR	4747654	Symbol	size		4747505						
ANR	4747655	Symbol	th		4747505						
ANR	4747656	Symbol	vm_allocate		4747505						
ANR	4747657	Symbol	VM_FLAGS_ANYWHERE		4747505						
ANR	4747658	Symbol	* th		4747505						
ANR	4747659	Symbol	KERN_SUCCESS		4747505						
ANR	4747660	Symbol	r_debug_map_get		4747505						
ANR	4747661	Symbol	addr		4747505						
ANR	4747662	Symbol	base		4747505						
ANR	4747663	Function	xnu_map_dealloc	441:0:10579:10882							
ANR	4747664	FunctionDef	"xnu_map_dealloc (RDebug * dbg , ut64 addr , int size)"		4747663	0					
ANR	4747665	CompoundStatement		441:55:10634:10882	4747663	0					
ANR	4747666	IdentifierDeclStatement	"xnu_thread_t * th = get_xnu_thread ( dbg , dbg -> tid ) ;"	442:1:10637:10686	4747663	0	True				
ANR	4747667	IdentifierDecl	"* th = get_xnu_thread ( dbg , dbg -> tid )"		4747663	0					
ANR	4747668	IdentifierDeclType	xnu_thread_t *		4747663	0					
ANR	4747669	Identifier	th		4747663	1					
ANR	4747670	AssignmentExpression	"* th = get_xnu_thread ( dbg , dbg -> tid )"		4747663	2		=			
ANR	4747671	Identifier	th		4747663	0					
ANR	4747672	CallExpression	"get_xnu_thread ( dbg , dbg -> tid )"		4747663	1					
ANR	4747673	Callee	get_xnu_thread		4747663	0					
ANR	4747674	Identifier	get_xnu_thread		4747663	0					
ANR	4747675	ArgumentList	dbg		4747663	1					
ANR	4747676	Argument	dbg		4747663	0					
ANR	4747677	Identifier	dbg		4747663	0					
ANR	4747678	Argument	dbg -> tid		4747663	1					
ANR	4747679	PtrMemberAccess	dbg -> tid		4747663	0					
ANR	4747680	Identifier	dbg		4747663	0					
ANR	4747681	Identifier	tid		4747663	1					
ANR	4747682	IfStatement	if ( ! th )		4747663	1					
ANR	4747683	Condition	! th	443:5:10693:10695	4747663	0	True				
ANR	4747684	UnaryOperationExpression	! th		4747663	0					
ANR	4747685	UnaryOperator	!		4747663	0					
ANR	4747686	Identifier	th		4747663	1					
ANR	4747687	CompoundStatement		3:10:63:63	4747663	1					
ANR	4747688	ReturnStatement	return false ;	444:2:10702:10714	4747663	0	True				
ANR	4747689	Identifier	false		4747663	0					
ANR	4747690	IdentifierDeclStatement	"int ret = vm_deallocate ( th -> port , ( vm_address_t ) addr , ( vm_size_t ) size ) ;"	446:1:10720:10791	4747663	2	True				
ANR	4747691	IdentifierDecl	"ret = vm_deallocate ( th -> port , ( vm_address_t ) addr , ( vm_size_t ) size )"		4747663	0					
ANR	4747692	IdentifierDeclType	int		4747663	0					
ANR	4747693	Identifier	ret		4747663	1					
ANR	4747694	AssignmentExpression	"ret = vm_deallocate ( th -> port , ( vm_address_t ) addr , ( vm_size_t ) size )"		4747663	2		=			
ANR	4747695	Identifier	ret		4747663	0					
ANR	4747696	CallExpression	"vm_deallocate ( th -> port , ( vm_address_t ) addr , ( vm_size_t ) size )"		4747663	1					
ANR	4747697	Callee	vm_deallocate		4747663	0					
ANR	4747698	Identifier	vm_deallocate		4747663	0					
ANR	4747699	ArgumentList	th -> port		4747663	1					
ANR	4747700	Argument	th -> port		4747663	0					
ANR	4747701	PtrMemberAccess	th -> port		4747663	0					
ANR	4747702	Identifier	th		4747663	0					
ANR	4747703	Identifier	port		4747663	1					
ANR	4747704	Argument	( vm_address_t ) addr		4747663	1					
ANR	4747705	CastExpression	( vm_address_t ) addr		4747663	0					
ANR	4747706	CastTarget	vm_address_t		4747663	0					
ANR	4747707	Identifier	addr		4747663	1					
ANR	4747708	Argument	( vm_size_t ) size		4747663	2					
ANR	4747709	CastExpression	( vm_size_t ) size		4747663	0					
ANR	4747710	CastTarget	vm_size_t		4747663	0					
ANR	4747711	Identifier	size		4747663	1					
ANR	4747712	IfStatement	if ( ret != KERN_SUCCESS )		4747663	3					
ANR	4747713	Condition	ret != KERN_SUCCESS	447:5:10798:10816	4747663	0	True				
ANR	4747714	EqualityExpression	ret != KERN_SUCCESS		4747663	0		!=			
ANR	4747715	Identifier	ret		4747663	0					
ANR	4747716	Identifier	KERN_SUCCESS		4747663	1					
ANR	4747717	CompoundStatement		7:26:184:184	4747663	1					
ANR	4747718	ExpressionStatement	"perror ( ""vm_deallocate"" )"	448:2:10823:10847	4747663	0	True				
ANR	4747719	CallExpression	"perror ( ""vm_deallocate"" )"		4747663	0					
ANR	4747720	Callee	perror		4747663	0					
ANR	4747721	Identifier	perror		4747663	0					
ANR	4747722	ArgumentList	"""vm_deallocate"""		4747663	1					
ANR	4747723	Argument	"""vm_deallocate"""		4747663	0					
ANR	4747724	PrimaryExpression	"""vm_deallocate"""		4747663	0					
ANR	4747725	ReturnStatement	return false ;	449:2:10851:10863	4747663	1	True				
ANR	4747726	Identifier	false		4747663	0					
ANR	4747727	ReturnStatement	return true ;	451:1:10869:10880	4747663	4	True				
ANR	4747728	Identifier	true		4747663	0					
ANR	4747729	ReturnType	int		4747663	1					
ANR	4747730	Identifier	xnu_map_dealloc		4747663	2					
ANR	4747731	ParameterList	"RDebug * dbg , ut64 addr , int size"		4747663	3					
ANR	4747732	Parameter	RDebug * dbg	441:21:10600:10610	4747663	0	True				
ANR	4747733	ParameterType	RDebug *		4747663	0					
ANR	4747734	Identifier	dbg		4747663	1					
ANR	4747735	Parameter	ut64 addr	441:34:10613:10621	4747663	1	True				
ANR	4747736	ParameterType	ut64		4747663	0					
ANR	4747737	Identifier	addr		4747663	1					
ANR	4747738	Parameter	int size	441:45:10624:10631	4747663	2	True				
ANR	4747739	ParameterType	int		4747663	0					
ANR	4747740	Identifier	size		4747663	1					
ANR	4747741	CFGEntryNode	ENTRY		4747663		True				
ANR	4747742	CFGExitNode	EXIT		4747663		True				
ANR	4747743	Symbol	ret		4747663						
ANR	4747744	Symbol	dbg		4747663						
ANR	4747745	Symbol	false		4747663						
ANR	4747746	Symbol	get_xnu_thread		4747663						
ANR	4747747	Symbol	* dbg		4747663						
ANR	4747748	Symbol	dbg -> tid		4747663						
ANR	4747749	Symbol	th -> port		4747663						
ANR	4747750	Symbol	size		4747663						
ANR	4747751	Symbol	th		4747663						
ANR	4747752	Symbol	true		4747663						
ANR	4747753	Symbol	vm_deallocate		4747663						
ANR	4747754	Symbol	* th		4747663						
ANR	4747755	Symbol	KERN_SUCCESS		4747663						
ANR	4747756	Symbol	addr		4747663						
ANR	4747757	Function	xnu_get_kinfo_proc	454:0:10885:11214							
ANR	4747758	FunctionDef	"xnu_get_kinfo_proc (int pid , struct kinfo_proc * kp)"		4747757	0					
ANR	4747759	CompoundStatement		454:63:10948:11214	4747757	0					
ANR	4747760	IdentifierDeclStatement	"int mib [ 4 ] = { CTL_KERN , KERN_PROC , KERN_PROC_PID , 0 } ;"	455:1:10951:11005	4747757	0	True				
ANR	4747761	IdentifierDecl	"mib [ 4 ] = { CTL_KERN , KERN_PROC , KERN_PROC_PID , 0 }"		4747757	0					
ANR	4747762	IdentifierDeclType	int [ 4 ]		4747757	0					
ANR	4747763	Identifier	mib		4747757	1					
ANR	4747764	PrimaryExpression	4		4747757	2					
ANR	4747765	AssignmentExpression	"mib [ 4 ] = { CTL_KERN , KERN_PROC , KERN_PROC_PID , 0 }"		4747757	3		=			
ANR	4747766	Identifier	mib		4747757	0					
ANR	4747767	InitializerList	CTL_KERN		4747757	1					
ANR	4747768	Identifier	CTL_KERN		4747757	0					
ANR	4747769	Identifier	KERN_PROC		4747757	1					
ANR	4747770	Identifier	KERN_PROC_PID		4747757	2					
ANR	4747771	PrimaryExpression	0		4747757	3					
ANR	4747772	IdentifierDeclStatement	int len = 4 ;	456:1:11008:11019	4747757	1	True				
ANR	4747773	IdentifierDecl	len = 4		4747757	0					
ANR	4747774	IdentifierDeclType	int		4747757	0					
ANR	4747775	Identifier	len		4747757	1					
ANR	4747776	AssignmentExpression	len = 4		4747757	2		=			
ANR	4747777	Identifier	len		4747757	0					
ANR	4747778	PrimaryExpression	4		4747757	1					
ANR	4747779	IdentifierDeclStatement	size_t kpl = sizeof ( struct kinfo_proc ) ;	457:1:11022:11061	4747757	2	True				
ANR	4747780	IdentifierDecl	kpl = sizeof ( struct kinfo_proc )		4747757	0					
ANR	4747781	IdentifierDeclType	size_t		4747757	0					
ANR	4747782	Identifier	kpl		4747757	1					
ANR	4747783	AssignmentExpression	kpl = sizeof ( struct kinfo_proc )		4747757	2		=			
ANR	4747784	Identifier	kpl		4747757	0					
ANR	4747785	SizeofExpression	sizeof ( struct kinfo_proc )		4747757	1					
ANR	4747786	Sizeof	sizeof		4747757	0					
ANR	4747787	SizeofOperand	struct kinfo_proc		4747757	1					
ANR	4747788	ExpressionStatement	mib [ 3 ] = pid	459:1:11065:11077	4747757	3	True				
ANR	4747789	AssignmentExpression	mib [ 3 ] = pid		4747757	0		=			
ANR	4747790	ArrayIndexing	mib [ 3 ]		4747757	0					
ANR	4747791	Identifier	mib		4747757	0					
ANR	4747792	PrimaryExpression	3		4747757	1					
ANR	4747793	Identifier	pid		4747757	1					
ANR	4747794	IfStatement	"if ( sysctl ( mib , len , kp , & kpl , NULL , 0 ) == - 1 )"		4747757	4					
ANR	4747795	Condition	"sysctl ( mib , len , kp , & kpl , NULL , 0 ) == - 1"	460:5:11084:11125	4747757	0	True				
ANR	4747796	EqualityExpression	"sysctl ( mib , len , kp , & kpl , NULL , 0 ) == - 1"		4747757	0		==			
ANR	4747797	CallExpression	"sysctl ( mib , len , kp , & kpl , NULL , 0 )"		4747757	0					
ANR	4747798	Callee	sysctl		4747757	0					
ANR	4747799	Identifier	sysctl		4747757	0					
ANR	4747800	ArgumentList	mib		4747757	1					
ANR	4747801	Argument	mib		4747757	0					
ANR	4747802	Identifier	mib		4747757	0					
ANR	4747803	Argument	len		4747757	1					
ANR	4747804	Identifier	len		4747757	0					
ANR	4747805	Argument	kp		4747757	2					
ANR	4747806	Identifier	kp		4747757	0					
ANR	4747807	Argument	& kpl		4747757	3					
ANR	4747808	UnaryOperationExpression	& kpl		4747757	0					
ANR	4747809	UnaryOperator	&		4747757	0					
ANR	4747810	Identifier	kpl		4747757	1					
ANR	4747811	Argument	NULL		4747757	4					
ANR	4747812	Identifier	NULL		4747757	0					
ANR	4747813	Argument	0		4747757	5					
ANR	4747814	PrimaryExpression	0		4747757	0					
ANR	4747815	UnaryOperationExpression	- 1		4747757	1					
ANR	4747816	UnaryOperator	-		4747757	0					
ANR	4747817	PrimaryExpression	1		4747757	1					
ANR	4747818	CompoundStatement		7:49:179:179	4747757	1					
ANR	4747819	ExpressionStatement	"perror ( ""sysctl"" )"	461:2:11132:11149	4747757	0	True				
ANR	4747820	CallExpression	"perror ( ""sysctl"" )"		4747757	0					
ANR	4747821	Callee	perror		4747757	0					
ANR	4747822	Identifier	perror		4747757	0					
ANR	4747823	ArgumentList	"""sysctl"""		4747757	1					
ANR	4747824	Argument	"""sysctl"""		4747757	0					
ANR	4747825	PrimaryExpression	"""sysctl"""		4747757	0					
ANR	4747826	ReturnStatement	return - 1 ;	462:2:11153:11162	4747757	1	True				
ANR	4747827	UnaryOperationExpression	- 1		4747757	0					
ANR	4747828	UnaryOperator	-		4747757	0					
ANR	4747829	PrimaryExpression	1		4747757	1					
ANR	4747830	IfStatement	if ( kpl < 1 )		4747757	5					
ANR	4747831	Condition	kpl < 1	464:7:11176:11182	4747757	0	True				
ANR	4747832	RelationalExpression	kpl < 1		4747757	0		<			
ANR	4747833	Identifier	kpl		4747757	0					
ANR	4747834	PrimaryExpression	1		4747757	1					
ANR	4747835	CompoundStatement		11:16:236:236	4747757	1					
ANR	4747836	ReturnStatement	return - 1 ;	465:2:11189:11198	4747757	0	True				
ANR	4747837	UnaryOperationExpression	- 1		4747757	0					
ANR	4747838	UnaryOperator	-		4747757	0					
ANR	4747839	PrimaryExpression	1		4747757	1					
ANR	4747840	ReturnStatement	return 0 ;	467:1:11204:11212	4747757	6	True				
ANR	4747841	PrimaryExpression	0		4747757	0					
ANR	4747842	ReturnType	static int		4747757	1					
ANR	4747843	Identifier	xnu_get_kinfo_proc		4747757	2					
ANR	4747844	ParameterList	"int pid , struct kinfo_proc * kp"		4747757	3					
ANR	4747845	Parameter	int pid	454:31:10916:10922	4747757	0	True				
ANR	4747846	ParameterType	int		4747757	0					
ANR	4747847	Identifier	pid		4747757	1					
ANR	4747848	Parameter	struct kinfo_proc * kp	454:40:10925:10945	4747757	1	True				
ANR	4747849	ParameterType	struct kinfo_proc *		4747757	0					
ANR	4747850	Identifier	kp		4747757	1					
ANR	4747851	CFGEntryNode	ENTRY		4747757		True				
ANR	4747852	CFGExitNode	EXIT		4747757		True				
ANR	4747853	Symbol	* mib		4747757						
ANR	4747854	Symbol	CTL_KERN		4747757						
ANR	4747855	Symbol	sysctl		4747757						
ANR	4747856	Symbol	NULL		4747757						
ANR	4747857	Symbol	len		4747757						
ANR	4747858	Symbol	kp		4747757						
ANR	4747859	Symbol	kpl		4747757						
ANR	4747860	Symbol	mib		4747757						
ANR	4747861	Symbol	KERN_PROC_PID		4747757						
ANR	4747862	Symbol	KERN_PROC		4747757						
ANR	4747863	Symbol	pid		4747757						
ANR	4747864	Symbol	& kpl		4747757						
ANR	4747865	Function	xnu_info	470:0:11217:12016							
ANR	4747866	FunctionDef	"xnu_info (RDebug * dbg , const char * arg)"		4747865	0					
ANR	4747867	CompoundStatement		470:52:11269:12016	4747865	0					
ANR	4747868	IdentifierDeclStatement	struct kinfo_proc kp ;	471:1:11272:11292	4747865	0	True				
ANR	4747869	IdentifierDecl	kp		4747865	0					
ANR	4747870	IdentifierDeclType	struct kinfo_proc		4747865	0					
ANR	4747871	Identifier	kp		4747865	1					
ANR	4747872	IdentifierDeclStatement	int kinfo_proc_error = 0 ;	472:1:11325:11349	4747865	1	True				
ANR	4747873	IdentifierDecl	kinfo_proc_error = 0		4747865	0					
ANR	4747874	IdentifierDeclType	int		4747865	0					
ANR	4747875	Identifier	kinfo_proc_error		4747865	1					
ANR	4747876	AssignmentExpression	kinfo_proc_error = 0		4747865	2		=			
ANR	4747877	Identifier	kinfo_proc_error		4747865	0					
ANR	4747878	PrimaryExpression	0		4747865	1					
ANR	4747879	IdentifierDeclStatement	RDebugInfo * rdi = R_NEW0 ( RDebugInfo ) ;	473:1:11352:11389	4747865	2	True				
ANR	4747880	IdentifierDecl	* rdi = R_NEW0 ( RDebugInfo )		4747865	0					
ANR	4747881	IdentifierDeclType	RDebugInfo *		4747865	0					
ANR	4747882	Identifier	rdi		4747865	1					
ANR	4747883	AssignmentExpression	* rdi = R_NEW0 ( RDebugInfo )		4747865	2		=			
ANR	4747884	Identifier	rdi		4747865	0					
ANR	4747885	CallExpression	R_NEW0 ( RDebugInfo )		4747865	1					
ANR	4747886	Callee	R_NEW0		4747865	0					
ANR	4747887	Identifier	R_NEW0		4747865	0					
ANR	4747888	ArgumentList	RDebugInfo		4747865	1					
ANR	4747889	Argument	RDebugInfo		4747865	0					
ANR	4747890	Identifier	RDebugInfo		4747865	0					
ANR	4747891	IfStatement	if ( ! rdi )		4747865	3					
ANR	4747892	Condition	! rdi	474:5:11396:11399	4747865	0	True				
ANR	4747893	UnaryOperationExpression	! rdi		4747865	0					
ANR	4747894	UnaryOperator	!		4747865	0					
ANR	4747895	Identifier	rdi		4747865	1					
ANR	4747896	ReturnStatement	return NULL ;	474:11:11402:11413	4747865	1	True				
ANR	4747897	Identifier	NULL		4747865	0					
ANR	4747898	ExpressionStatement	"kinfo_proc_error = xnu_get_kinfo_proc ( dbg -> pid , & kp )"	476:1:11417:11469	4747865	4	True				
ANR	4747899	AssignmentExpression	"kinfo_proc_error = xnu_get_kinfo_proc ( dbg -> pid , & kp )"		4747865	0		=			
ANR	4747900	Identifier	kinfo_proc_error		4747865	0					
ANR	4747901	CallExpression	"xnu_get_kinfo_proc ( dbg -> pid , & kp )"		4747865	1					
ANR	4747902	Callee	xnu_get_kinfo_proc		4747865	0					
ANR	4747903	Identifier	xnu_get_kinfo_proc		4747865	0					
ANR	4747904	ArgumentList	dbg -> pid		4747865	1					
ANR	4747905	Argument	dbg -> pid		4747865	0					
ANR	4747906	PtrMemberAccess	dbg -> pid		4747865	0					
ANR	4747907	Identifier	dbg		4747865	0					
ANR	4747908	Identifier	pid		4747865	1					
ANR	4747909	Argument	& kp		4747865	1					
ANR	4747910	UnaryOperationExpression	& kp		4747865	0					
ANR	4747911	UnaryOperator	&		4747865	0					
ANR	4747912	Identifier	kp		4747865	1					
ANR	4747913	IfStatement	if ( kinfo_proc_error )		4747865	5					
ANR	4747914	Condition	kinfo_proc_error	478:5:11477:11492	4747865	0	True				
ANR	4747915	Identifier	kinfo_proc_error		4747865	0					
ANR	4747916	CompoundStatement		9:23:225:225	4747865	1					
ANR	4747917	ExpressionStatement	"eprintf ( ""Error while querying the process info to sysctl\\n"" )"	479:2:11499:11560	4747865	0	True				
ANR	4747918	CallExpression	"eprintf ( ""Error while querying the process info to sysctl\\n"" )"		4747865	0					
ANR	4747919	Callee	eprintf		4747865	0					
ANR	4747920	Identifier	eprintf		4747865	0					
ANR	4747921	ArgumentList	"""Error while querying the process info to sysctl\\n"""		4747865	1					
ANR	4747922	Argument	"""Error while querying the process info to sysctl\\n"""		4747865	0					
ANR	4747923	PrimaryExpression	"""Error while querying the process info to sysctl\\n"""		4747865	0					
ANR	4747924	ReturnStatement	return NULL ;	480:2:11564:11575	4747865	1	True				
ANR	4747925	Identifier	NULL		4747865	0					
ANR	4747926	ExpressionStatement	rdi -> status = R_DBG_PROC_SLEEP	482:1:11581:11611	4747865	6	True				
ANR	4747927	AssignmentExpression	rdi -> status = R_DBG_PROC_SLEEP		4747865	0		=			
ANR	4747928	PtrMemberAccess	rdi -> status		4747865	0					
ANR	4747929	Identifier	rdi		4747865	0					
ANR	4747930	Identifier	status		4747865	1					
ANR	4747931	Identifier	R_DBG_PROC_SLEEP		4747865	1					
ANR	4747932	ExpressionStatement	rdi -> pid = dbg -> pid	483:1:11632:11651	4747865	7	True				
ANR	4747933	AssignmentExpression	rdi -> pid = dbg -> pid		4747865	0		=			
ANR	4747934	PtrMemberAccess	rdi -> pid		4747865	0					
ANR	4747935	Identifier	rdi		4747865	0					
ANR	4747936	Identifier	pid		4747865	1					
ANR	4747937	PtrMemberAccess	dbg -> pid		4747865	1					
ANR	4747938	Identifier	dbg		4747865	0					
ANR	4747939	Identifier	pid		4747865	1					
ANR	4747940	ExpressionStatement	rdi -> tid = dbg -> tid	484:1:11654:11673	4747865	8	True				
ANR	4747941	AssignmentExpression	rdi -> tid = dbg -> tid		4747865	0		=			
ANR	4747942	PtrMemberAccess	rdi -> tid		4747865	0					
ANR	4747943	Identifier	rdi		4747865	0					
ANR	4747944	Identifier	tid		4747865	1					
ANR	4747945	PtrMemberAccess	dbg -> tid		4747865	1					
ANR	4747946	Identifier	dbg		4747865	0					
ANR	4747947	Identifier	tid		4747865	1					
ANR	4747948	ExpressionStatement	rdi -> uid = kp . kp_eproc . e_ucred . cr_uid	485:1:11676:11713	4747865	9	True				
ANR	4747949	AssignmentExpression	rdi -> uid = kp . kp_eproc . e_ucred . cr_uid		4747865	0		=			
ANR	4747950	PtrMemberAccess	rdi -> uid		4747865	0					
ANR	4747951	Identifier	rdi		4747865	0					
ANR	4747952	Identifier	uid		4747865	1					
ANR	4747953	MemberAccess	kp . kp_eproc . e_ucred . cr_uid		4747865	1					
ANR	4747954	MemberAccess	kp . kp_eproc . e_ucred		4747865	0					
ANR	4747955	MemberAccess	kp . kp_eproc		4747865	0					
ANR	4747956	Identifier	kp		4747865	0					
ANR	4747957	Identifier	kp_eproc		4747865	1					
ANR	4747958	Identifier	e_ucred		4747865	1					
ANR	4747959	Identifier	cr_uid		4747865	1					
ANR	4747960	ExpressionStatement	rdi -> gid = kp . kp_eproc . e_ucred . cr_gid	486:1:11716:11753	4747865	10	True				
ANR	4747961	AssignmentExpression	rdi -> gid = kp . kp_eproc . e_ucred . cr_gid		4747865	0		=			
ANR	4747962	PtrMemberAccess	rdi -> gid		4747865	0					
ANR	4747963	Identifier	rdi		4747865	0					
ANR	4747964	Identifier	gid		4747865	1					
ANR	4747965	MemberAccess	kp . kp_eproc . e_ucred . cr_gid		4747865	1					
ANR	4747966	MemberAccess	kp . kp_eproc . e_ucred		4747865	0					
ANR	4747967	MemberAccess	kp . kp_eproc		4747865	0					
ANR	4747968	Identifier	kp		4747865	0					
ANR	4747969	Identifier	kp_eproc		4747865	1					
ANR	4747970	Identifier	e_ucred		4747865	1					
ANR	4747971	Identifier	cr_gid		4747865	1					
ANR	4747972	IdentifierDeclStatement	char file_path [ MAXPATHLEN ] = { 0 } ;	488:1:11775:11807	4747865	11	True				
ANR	4747973	IdentifierDecl	file_path [ MAXPATHLEN ] = { 0 }		4747865	0					
ANR	4747974	IdentifierDeclType	char [ MAXPATHLEN ]		4747865	0					
ANR	4747975	Identifier	file_path		4747865	1					
ANR	4747976	Identifier	MAXPATHLEN		4747865	2					
ANR	4747977	AssignmentExpression	file_path [ MAXPATHLEN ] = { 0 }		4747865	3		=			
ANR	4747978	Identifier	MAXPATHLEN		4747865	0					
ANR	4747979	InitializerList	0		4747865	1					
ANR	4747980	PrimaryExpression	0		4747865	0					
ANR	4747981	IdentifierDeclStatement	int file_path_len ;	489:1:11810:11827	4747865	12	True				
ANR	4747982	IdentifierDecl	file_path_len		4747865	0					
ANR	4747983	IdentifierDeclType	int		4747865	0					
ANR	4747984	Identifier	file_path_len		4747865	1					
ANR	4747985	ExpressionStatement	"file_path_len = proc_pidpath ( rdi -> pid , file_path , sizeof ( file_path ) )"	490:1:11830:11900	4747865	13	True				
ANR	4747986	AssignmentExpression	"file_path_len = proc_pidpath ( rdi -> pid , file_path , sizeof ( file_path ) )"		4747865	0		=			
ANR	4747987	Identifier	file_path_len		4747865	0					
ANR	4747988	CallExpression	"proc_pidpath ( rdi -> pid , file_path , sizeof ( file_path ) )"		4747865	1					
ANR	4747989	Callee	proc_pidpath		4747865	0					
ANR	4747990	Identifier	proc_pidpath		4747865	0					
ANR	4747991	ArgumentList	rdi -> pid		4747865	1					
ANR	4747992	Argument	rdi -> pid		4747865	0					
ANR	4747993	PtrMemberAccess	rdi -> pid		4747865	0					
ANR	4747994	Identifier	rdi		4747865	0					
ANR	4747995	Identifier	pid		4747865	1					
ANR	4747996	Argument	file_path		4747865	1					
ANR	4747997	Identifier	file_path		4747865	0					
ANR	4747998	Argument	sizeof ( file_path )		4747865	2					
ANR	4747999	SizeofExpression	sizeof ( file_path )		4747865	0					
ANR	4748000	Sizeof	sizeof		4747865	0					
ANR	4748001	SizeofOperand	file_path		4747865	1					
ANR	4748002	IfStatement	if ( file_path_len > 0 )		4747865	14					
ANR	4748003	Condition	file_path_len > 0	491:5:11907:11923	4747865	0	True				
ANR	4748004	RelationalExpression	file_path_len > 0		4747865	0		>			
ANR	4748005	Identifier	file_path_len		4747865	0					
ANR	4748006	PrimaryExpression	0		4747865	1					
ANR	4748007	CompoundStatement		22:24:656:656	4747865	1					
ANR	4748008	ExpressionStatement	file_path [ file_path_len ] = 0	492:2:11930:11958	4747865	0	True				
ANR	4748009	AssignmentExpression	file_path [ file_path_len ] = 0		4747865	0		=			
ANR	4748010	ArrayIndexing	file_path [ file_path_len ]		4747865	0					
ANR	4748011	Identifier	file_path		4747865	0					
ANR	4748012	Identifier	file_path_len		4747865	1					
ANR	4748013	PrimaryExpression	0		4747865	1					
ANR	4748014	ExpressionStatement	rdi -> exe = strdup ( file_path )	493:2:11962:11991	4747865	1	True				
ANR	4748015	AssignmentExpression	rdi -> exe = strdup ( file_path )		4747865	0		=			
ANR	4748016	PtrMemberAccess	rdi -> exe		4747865	0					
ANR	4748017	Identifier	rdi		4747865	0					
ANR	4748018	Identifier	exe		4747865	1					
ANR	4748019	CallExpression	strdup ( file_path )		4747865	1					
ANR	4748020	Callee	strdup		4747865	0					
ANR	4748021	Identifier	strdup		4747865	0					
ANR	4748022	ArgumentList	file_path		4747865	1					
ANR	4748023	Argument	file_path		4747865	0					
ANR	4748024	Identifier	file_path		4747865	0					
ANR	4748025	ReturnStatement	return rdi ;	496:1:12004:12014	4747865	15	True				
ANR	4748026	Identifier	rdi		4747865	0					
ANR	4748027	ReturnType	RDebugInfo *		4747865	1					
ANR	4748028	Identifier	xnu_info		4747865	2					
ANR	4748029	ParameterList	"RDebug * dbg , const char * arg"		4747865	3					
ANR	4748030	Parameter	RDebug * dbg	470:22:11239:11249	4747865	0	True				
ANR	4748031	ParameterType	RDebug *		4747865	0					
ANR	4748032	Identifier	dbg		4747865	1					
ANR	4748033	Parameter	const char * arg	470:35:11252:11266	4747865	1	True				
ANR	4748034	ParameterType	const char *		4747865	0					
ANR	4748035	Identifier	arg		4747865	1					
ANR	4748036	CFGEntryNode	ENTRY		4747865		True				
ANR	4748037	CFGExitNode	EXIT		4747865		True				
ANR	4748038	Symbol	kinfo_proc_error		4747865						
ANR	4748039	Symbol	file_path		4747865						
ANR	4748040	Symbol	rdi -> status		4747865						
ANR	4748041	Symbol	kp . kp_eproc . e_ucred		4747865						
ANR	4748042	Symbol	rdi -> gid		4747865						
ANR	4748043	Symbol	RDebugInfo		4747865						
ANR	4748044	Symbol	proc_pidpath		4747865						
ANR	4748045	Symbol	& kp		4747865						
ANR	4748046	Symbol	MAXPATHLEN		4747865						
ANR	4748047	Symbol	* file_path_len		4747865						
ANR	4748048	Symbol	arg		4747865						
ANR	4748049	Symbol	file_path_len		4747865						
ANR	4748050	Symbol	kp . kp_eproc . e_ucred . cr_uid		4747865						
ANR	4748051	Symbol	xnu_get_kinfo_proc		4747865						
ANR	4748052	Symbol	* rdi		4747865						
ANR	4748053	Symbol	NULL		4747865						
ANR	4748054	Symbol	kp . kp_eproc		4747865						
ANR	4748055	Symbol	kp		4747865						
ANR	4748056	Symbol	dbg		4747865						
ANR	4748057	Symbol	* dbg		4747865						
ANR	4748058	Symbol	kp . kp_eproc . e_ucred . cr_gid		4747865						
ANR	4748059	Symbol	* file_path		4747865						
ANR	4748060	Symbol	dbg -> tid		4747865						
ANR	4748061	Symbol	R_NEW0		4747865						
ANR	4748062	Symbol	rdi -> pid		4747865						
ANR	4748063	Symbol	dbg -> pid		4747865						
ANR	4748064	Symbol	rdi		4747865						
ANR	4748065	Symbol	R_DBG_PROC_SLEEP		4747865						
ANR	4748066	Symbol	rdi -> exe		4747865						
ANR	4748067	Symbol	strdup		4747865						
ANR	4748068	Symbol	rdi -> uid		4747865						
ANR	4748069	Symbol	rdi -> tid		4747865						
ANR	4748070	Function	xnu_thread_list	514:0:12319:13195							
ANR	4748071	FunctionDef	"xnu_thread_list (RDebug * dbg , int pid , RList * list)"		4748070	0					
ANR	4748072	CompoundStatement		514:59:12378:13195	4748070	0					
ANR	4748073	Statement	define	516:2:12423:12428	4748070	0	True				
ANR	4748074	Statement	CPU_PC	516:9:12430:12435	4748070	1	True				
ANR	4748075	Statement	(	516:16:12437:12437	4748070	2	True				
ANR	4748076	Statement	dbg	516:17:12438:12440	4748070	3	True				
ANR	4748077	Statement	->	516:20:12441:12442	4748070	4	True				
ANR	4748078	Statement	bits	516:22:12443:12446	4748070	5	True				
ANR	4748079	Statement	==	516:27:12448:12449	4748070	6	True				
ANR	4748080	Statement	R_SYS_BITS_64	516:30:12451:12463	4748070	7	True				
ANR	4748081	Statement	)	516:43:12464:12464	4748070	8	True				
ANR	4748082	Statement	?	516:45:12466:12466	4748070	9	True				
ANR	4748083	Statement	state	517:2:12472:12476	4748070	10	True				
ANR	4748084	Statement	.	517:7:12477:12477	4748070	11	True				
ANR	4748085	Statement	ts_64	517:8:12478:12482	4748070	12	True				
ANR	4748086	Statement	.	517:13:12483:12483	4748070	13	True				
ANR	4748087	Label	__pc :	517:14:12484:12489	4748070	14	True				
ANR	4748088	Identifier	__pc		4748070	0					
ANR	4748089	Statement	state	517:21:12491:12495	4748070	15	True				
ANR	4748090	Statement	.	517:26:12496:12496	4748070	16	True				
ANR	4748091	Statement	ts_32	517:27:12497:12501	4748070	17	True				
ANR	4748092	Statement	.	517:32:12502:12502	4748070	18	True				
ANR	4748093	Statement	__pc	517:33:12503:12506	4748070	19	True				
ANR	4748094	IdentifierDeclStatement	RListIter * iter ;	524:1:12685:12700	4748070	20	True				
ANR	4748095	IdentifierDecl	* iter		4748070	0					
ANR	4748096	IdentifierDeclType	RListIter *		4748070	0					
ANR	4748097	Identifier	iter		4748070	1					
ANR	4748098	IdentifierDeclStatement	xnu_thread_t * thread ;	525:1:12703:12723	4748070	21	True				
ANR	4748099	IdentifierDecl	* thread		4748070	0					
ANR	4748100	IdentifierDeclType	xnu_thread_t *		4748070	0					
ANR	4748101	Identifier	thread		4748070	1					
ANR	4748102	IdentifierDeclStatement	R_REG_T state ;	526:1:12726:12739	4748070	22	True				
ANR	4748103	IdentifierDecl	state		4748070	0					
ANR	4748104	IdentifierDeclType	R_REG_T		4748070	0					
ANR	4748105	Identifier	state		4748070	1					
ANR	4748106	ExpressionStatement	xnu_update_thread_list ( dbg )	527:1:12742:12770	4748070	23	True				
ANR	4748107	CallExpression	xnu_update_thread_list ( dbg )		4748070	0					
ANR	4748108	Callee	xnu_update_thread_list		4748070	0					
ANR	4748109	Identifier	xnu_update_thread_list		4748070	0					
ANR	4748110	ArgumentList	dbg		4748070	1					
ANR	4748111	Argument	dbg		4748070	0					
ANR	4748112	Identifier	dbg		4748070	0					
ANR	4748113	ExpressionStatement	list -> free = ( RListFree ) & r_debug_pid_free	528:1:12773:12814	4748070	24	True				
ANR	4748114	AssignmentExpression	list -> free = ( RListFree ) & r_debug_pid_free		4748070	0		=			
ANR	4748115	PtrMemberAccess	list -> free		4748070	0					
ANR	4748116	Identifier	list		4748070	0					
ANR	4748117	Identifier	free		4748070	1					
ANR	4748118	CastExpression	( RListFree ) & r_debug_pid_free		4748070	1					
ANR	4748119	CastTarget	RListFree		4748070	0					
ANR	4748120	UnaryOperationExpression	& r_debug_pid_free		4748070	1					
ANR	4748121	UnaryOperator	&		4748070	0					
ANR	4748122	Identifier	r_debug_pid_free		4748070	1					
ANR	4748123	Statement	r_list_foreach	529:1:12817:12830	4748070	25	True				
ANR	4748124	Statement	(	529:16:12832:12832	4748070	26	True				
ANR	4748125	Statement	dbg	529:17:12833:12835	4748070	27	True				
ANR	4748126	Statement	->	529:20:12836:12837	4748070	28	True				
ANR	4748127	Statement	threads	529:22:12838:12844	4748070	29	True				
ANR	4748128	Statement	","	529:29:12845:12845	4748070	30	True				
ANR	4748129	Statement	iter	529:31:12847:12850	4748070	31	True				
ANR	4748130	Statement	","	529:35:12851:12851	4748070	32	True				
ANR	4748131	Statement	thread	529:37:12853:12858	4748070	33	True				
ANR	4748132	Statement	)	529:43:12859:12859	4748070	34	True				
ANR	4748133	CompoundStatement		16:45:482:482	4748070	35					
ANR	4748134	IfStatement	"if ( ! xnu_thread_get_gpr ( dbg , thread ) )"		4748070	0					
ANR	4748135	Condition	"! xnu_thread_get_gpr ( dbg , thread )"	530:6:12869:12901	4748070	0	True				
ANR	4748136	UnaryOperationExpression	"! xnu_thread_get_gpr ( dbg , thread )"		4748070	0					
ANR	4748137	UnaryOperator	!		4748070	0					
ANR	4748138	CallExpression	"xnu_thread_get_gpr ( dbg , thread )"		4748070	1					
ANR	4748139	Callee	xnu_thread_get_gpr		4748070	0					
ANR	4748140	Identifier	xnu_thread_get_gpr		4748070	0					
ANR	4748141	ArgumentList	dbg		4748070	1					
ANR	4748142	Argument	dbg		4748070	0					
ANR	4748143	Identifier	dbg		4748070	0					
ANR	4748144	Argument	thread		4748070	1					
ANR	4748145	Identifier	thread		4748070	0					
ANR	4748146	CompoundStatement		17:41:525:525	4748070	1					
ANR	4748147	ExpressionStatement	"eprintf ( ""Failed to get gpr registers xnu_thread_list\\n"" )"	531:3:12909:12966	4748070	0	True				
ANR	4748148	CallExpression	"eprintf ( ""Failed to get gpr registers xnu_thread_list\\n"" )"		4748070	0					
ANR	4748149	Callee	eprintf		4748070	0					
ANR	4748150	Identifier	eprintf		4748070	0					
ANR	4748151	ArgumentList	"""Failed to get gpr registers xnu_thread_list\\n"""		4748070	1					
ANR	4748152	Argument	"""Failed to get gpr registers xnu_thread_list\\n"""		4748070	0					
ANR	4748153	PrimaryExpression	"""Failed to get gpr registers xnu_thread_list\\n"""		4748070	0					
ANR	4748154	ContinueStatement	continue ;	532:3:12971:12979	4748070	1	True				
ANR	4748155	ExpressionStatement	thread -> state_size = sizeof ( thread -> gpr )	534:2:12987:13028	4748070	1	True				
ANR	4748156	AssignmentExpression	thread -> state_size = sizeof ( thread -> gpr )		4748070	0		=			
ANR	4748157	PtrMemberAccess	thread -> state_size		4748070	0					
ANR	4748158	Identifier	thread		4748070	0					
ANR	4748159	Identifier	state_size		4748070	1					
ANR	4748160	SizeofExpression	sizeof ( thread -> gpr )		4748070	1					
ANR	4748161	Sizeof	sizeof		4748070	0					
ANR	4748162	PtrMemberAccess	thread -> gpr		4748070	1					
ANR	4748163	Identifier	thread		4748070	0					
ANR	4748164	Identifier	gpr		4748070	1					
ANR	4748165	ExpressionStatement	"memcpy ( & state , & thread -> gpr , sizeof ( R_REG_T ) )"	535:2:13032:13079	4748070	2	True				
ANR	4748166	CallExpression	"memcpy ( & state , & thread -> gpr , sizeof ( R_REG_T ) )"		4748070	0					
ANR	4748167	Callee	memcpy		4748070	0					
ANR	4748168	Identifier	memcpy		4748070	0					
ANR	4748169	ArgumentList	& state		4748070	1					
ANR	4748170	Argument	& state		4748070	0					
ANR	4748171	UnaryOperationExpression	& state		4748070	0					
ANR	4748172	UnaryOperator	&		4748070	0					
ANR	4748173	Identifier	state		4748070	1					
ANR	4748174	Argument	& thread -> gpr		4748070	1					
ANR	4748175	UnaryOperationExpression	& thread -> gpr		4748070	0					
ANR	4748176	UnaryOperator	&		4748070	0					
ANR	4748177	PtrMemberAccess	thread -> gpr		4748070	1					
ANR	4748178	Identifier	thread		4748070	0					
ANR	4748179	Identifier	gpr		4748070	1					
ANR	4748180	Argument	sizeof ( R_REG_T )		4748070	2					
ANR	4748181	SizeofExpression	sizeof ( R_REG_T )		4748070	0					
ANR	4748182	Sizeof	sizeof		4748070	0					
ANR	4748183	SizeofOperand	R_REG_T		4748070	1					
ANR	4748184	ExpressionStatement	"r_list_append ( list , r_debug_pid_new ( thread -> name , thread -> port , getuid ( ) , 's' , CPU_PC ) )"	536:2:13083:13176	4748070	3	True				
ANR	4748185	CallExpression	"r_list_append ( list , r_debug_pid_new ( thread -> name , thread -> port , getuid ( ) , 's' , CPU_PC ) )"		4748070	0					
ANR	4748186	Callee	r_list_append		4748070	0					
ANR	4748187	Identifier	r_list_append		4748070	0					
ANR	4748188	ArgumentList	list		4748070	1					
ANR	4748189	Argument	list		4748070	0					
ANR	4748190	Identifier	list		4748070	0					
ANR	4748191	Argument	"r_debug_pid_new ( thread -> name , thread -> port , getuid ( ) , 's' , CPU_PC )"		4748070	1					
ANR	4748192	CallExpression	"r_debug_pid_new ( thread -> name , thread -> port , getuid ( ) , 's' , CPU_PC )"		4748070	0					
ANR	4748193	Callee	r_debug_pid_new		4748070	0					
ANR	4748194	Identifier	r_debug_pid_new		4748070	0					
ANR	4748195	ArgumentList	thread -> name		4748070	1					
ANR	4748196	Argument	thread -> name		4748070	0					
ANR	4748197	PtrMemberAccess	thread -> name		4748070	0					
ANR	4748198	Identifier	thread		4748070	0					
ANR	4748199	Identifier	name		4748070	1					
ANR	4748200	Argument	thread -> port		4748070	1					
ANR	4748201	PtrMemberAccess	thread -> port		4748070	0					
ANR	4748202	Identifier	thread		4748070	0					
ANR	4748203	Identifier	port		4748070	1					
ANR	4748204	Argument	getuid ( )		4748070	2					
ANR	4748205	CallExpression	getuid ( )		4748070	0					
ANR	4748206	Callee	getuid		4748070	0					
ANR	4748207	Identifier	getuid		4748070	0					
ANR	4748208	ArgumentList			4748070	1					
ANR	4748209	Argument	's'		4748070	3					
ANR	4748210	PrimaryExpression	's'		4748070	0					
ANR	4748211	Argument	CPU_PC		4748070	4					
ANR	4748212	Identifier	CPU_PC		4748070	0					
ANR	4748213	ReturnStatement	return list ;	539:1:13182:13193	4748070	36	True				
ANR	4748214	Identifier	list		4748070	0					
ANR	4748215	ReturnType	RList *		4748070	1					
ANR	4748216	Identifier	xnu_thread_list		4748070	2					
ANR	4748217	ParameterList	"RDebug * dbg , int pid , RList * list"		4748070	3					
ANR	4748218	Parameter	RDebug * dbg	514:24:12343:12353	4748070	0	True				
ANR	4748219	ParameterType	RDebug *		4748070	0					
ANR	4748220	Identifier	dbg		4748070	1					
ANR	4748221	Parameter	int pid	514:37:12356:12362	4748070	1	True				
ANR	4748222	ParameterType	int		4748070	0					
ANR	4748223	Identifier	pid		4748070	1					
ANR	4748224	Parameter	RList * list	514:46:12365:12375	4748070	2	True				
ANR	4748225	ParameterType	RList *		4748070	0					
ANR	4748226	Identifier	list		4748070	1					
ANR	4748227	CFGEntryNode	ENTRY		4748070		True				
ANR	4748228	CFGExitNode	EXIT		4748070		True				
ANR	4748229	CFGErrorNode	ERROR		4748070		True				
ANR	4748230	Symbol	& r_debug_pid_free		4748070						
ANR	4748231	Symbol	r_debug_pid_new		4748070						
ANR	4748232	Symbol	& thread -> gpr		4748070						
ANR	4748233	Symbol	xnu_thread_get_gpr		4748070						
ANR	4748234	Symbol	thread -> name		4748070						
ANR	4748235	Symbol	list -> free		4748070						
ANR	4748236	Symbol	& state		4748070						
ANR	4748237	Symbol	thread -> state_size		4748070						
ANR	4748238	Symbol	dbg		4748070						
ANR	4748239	Symbol	iter		4748070						
ANR	4748240	Symbol	pid		4748070						
ANR	4748241	Symbol	thread		4748070						
ANR	4748242	Symbol	list		4748070						
ANR	4748243	Symbol	CPU_PC		4748070						
ANR	4748244	Symbol	getuid		4748070						
ANR	4748245	Symbol	* list		4748070						
ANR	4748246	Symbol	* thread		4748070						
ANR	4748247	Symbol	thread -> gpr		4748070						
ANR	4748248	Symbol	state		4748070						
ANR	4748249	Symbol	thread -> port		4748070						
ANR	4748250	Function	unix_prot_to_darwin	543:0:13204:13386							
ANR	4748251	FunctionDef	unix_prot_to_darwin (int prot)		4748250	0					
ANR	4748252	CompoundStatement		543:47:13251:13386	4748250	0					
ANR	4748253	ReturnStatement	return ( ( prot & 1 << 4 ) ? VM_PROT_READ : 0 | ( prot & 1 << 2 ) ? VM_PROT_WRITE : 0 | ( prot & 1 << 1 ) ? VM_PROT_EXECUTE : 0 ) ;	544:2:13255:13384	4748250	0	True				
ANR	4748254	ConditionalExpression	( prot & 1 << 4 ) ? VM_PROT_READ : 0 | ( prot & 1 << 2 ) ? VM_PROT_WRITE : 0 | ( prot & 1 << 1 ) ? VM_PROT_EXECUTE : 0		4748250	0					
ANR	4748255	Condition	prot & 1 << 4		4748250	0					
ANR	4748256	BitAndExpression	prot & 1 << 4		4748250	0		&			
ANR	4748257	Identifier	prot		4748250	0					
ANR	4748258	ShiftExpression	1 << 4		4748250	1		<<			
ANR	4748259	PrimaryExpression	1		4748250	0					
ANR	4748260	PrimaryExpression	4		4748250	1					
ANR	4748261	Identifier	VM_PROT_READ		4748250	1					
ANR	4748262	ConditionalExpression	0 | ( prot & 1 << 2 ) ? VM_PROT_WRITE : 0 | ( prot & 1 << 1 ) ? VM_PROT_EXECUTE : 0		4748250	2					
ANR	4748263	Condition	0 | ( prot & 1 << 2 )		4748250	0					
ANR	4748264	InclusiveOrExpression	0 | ( prot & 1 << 2 )		4748250	0		|			
ANR	4748265	PrimaryExpression	0		4748250	0					
ANR	4748266	BitAndExpression	prot & 1 << 2		4748250	1		&			
ANR	4748267	Identifier	prot		4748250	0					
ANR	4748268	ShiftExpression	1 << 2		4748250	1		<<			
ANR	4748269	PrimaryExpression	1		4748250	0					
ANR	4748270	PrimaryExpression	2		4748250	1					
ANR	4748271	Identifier	VM_PROT_WRITE		4748250	1					
ANR	4748272	ConditionalExpression	0 | ( prot & 1 << 1 ) ? VM_PROT_EXECUTE : 0		4748250	2					
ANR	4748273	Condition	0 | ( prot & 1 << 1 )		4748250	0					
ANR	4748274	InclusiveOrExpression	0 | ( prot & 1 << 1 )		4748250	0		|			
ANR	4748275	PrimaryExpression	0		4748250	0					
ANR	4748276	BitAndExpression	prot & 1 << 1		4748250	1		&			
ANR	4748277	Identifier	prot		4748250	0					
ANR	4748278	ShiftExpression	1 << 1		4748250	1		<<			
ANR	4748279	PrimaryExpression	1		4748250	0					
ANR	4748280	PrimaryExpression	1		4748250	1					
ANR	4748281	Identifier	VM_PROT_EXECUTE		4748250	1					
ANR	4748282	PrimaryExpression	0		4748250	2					
ANR	4748283	ReturnType	static vm_prot_t		4748250	1					
ANR	4748284	Identifier	unix_prot_to_darwin		4748250	2					
ANR	4748285	ParameterList	int prot		4748250	3					
ANR	4748286	Parameter	int prot	543:37:13241:13248	4748250	0	True				
ANR	4748287	ParameterType	int		4748250	0					
ANR	4748288	Identifier	prot		4748250	1					
ANR	4748289	CFGEntryNode	ENTRY		4748250		True				
ANR	4748290	CFGExitNode	EXIT		4748250		True				
ANR	4748291	Symbol	prot		4748250						
ANR	4748292	Symbol	VM_PROT_EXECUTE		4748250						
ANR	4748293	Symbol	VM_PROT_READ		4748250						
ANR	4748294	Symbol	VM_PROT_WRITE		4748250						
ANR	4748295	Function	xnu_map_protect	550:0:13396:13802							
ANR	4748296	FunctionDef	"xnu_map_protect (RDebug * dbg , ut64 addr , int size , int perms)"		4748295	0					
ANR	4748297	CompoundStatement		550:66:13462:13802	4748295	0					
ANR	4748298	IdentifierDeclStatement	int ret ;	551:1:13465:13472	4748295	0	True				
ANR	4748299	IdentifierDecl	ret		4748295	0					
ANR	4748300	IdentifierDeclType	int		4748295	0					
ANR	4748301	Identifier	ret		4748295	1					
ANR	4748302	IdentifierDeclStatement	task_t task = pid_to_task ( dbg -> tid ) ;	552:1:13475:13511	4748295	1	True				
ANR	4748303	IdentifierDecl	task = pid_to_task ( dbg -> tid )		4748295	0					
ANR	4748304	IdentifierDeclType	task_t		4748295	0					
ANR	4748305	Identifier	task		4748295	1					
ANR	4748306	AssignmentExpression	task = pid_to_task ( dbg -> tid )		4748295	2		=			
ANR	4748307	Identifier	task		4748295	0					
ANR	4748308	CallExpression	pid_to_task ( dbg -> tid )		4748295	1					
ANR	4748309	Callee	pid_to_task		4748295	0					
ANR	4748310	Identifier	pid_to_task		4748295	0					
ANR	4748311	ArgumentList	dbg -> tid		4748295	1					
ANR	4748312	Argument	dbg -> tid		4748295	0					
ANR	4748313	PtrMemberAccess	dbg -> tid		4748295	0					
ANR	4748314	Identifier	dbg		4748295	0					
ANR	4748315	Identifier	tid		4748295	1					
ANR	4748316	Statement	define	553:1:13514:13519	4748295	2	True				
ANR	4748317	Statement	xwr2rwx	553:8:13521:13527	4748295	3	True				
ANR	4748318	Statement	(	553:15:13528:13528	4748295	4	True				
ANR	4748319	Statement	x	553:16:13529:13529	4748295	5	True				
ANR	4748320	Statement	)	553:17:13530:13530	4748295	6	True				
ANR	4748321	Statement	(	553:19:13532:13532	4748295	7	True				
ANR	4748322	Statement	(	553:20:13533:13533	4748295	8	True				
ANR	4748323	Statement	x	553:21:13534:13534	4748295	9	True				
ANR	4748324	Statement	&	553:22:13535:13535	4748295	10	True				
ANR	4748325	Statement	1	553:23:13536:13536	4748295	11	True				
ANR	4748326	Statement	)	553:24:13537:13537	4748295	12	True				
ANR	4748327	Statement	<<	553:25:13538:13539	4748295	13	True				
ANR	4748328	Statement	2	553:27:13540:13540	4748295	14	True				
ANR	4748329	Statement	)	553:28:13541:13541	4748295	15	True				
ANR	4748330	Statement	|	553:30:13543:13543	4748295	16	True				
ANR	4748331	Statement	(	553:32:13545:13545	4748295	17	True				
ANR	4748332	Statement	x	553:33:13546:13546	4748295	18	True				
ANR	4748333	Statement	&	553:34:13547:13547	4748295	19	True				
ANR	4748334	Statement	2	553:35:13548:13548	4748295	20	True				
ANR	4748335	Statement	)	553:36:13549:13549	4748295	21	True				
ANR	4748336	Statement	|	553:38:13551:13551	4748295	22	True				
ANR	4748337	Statement	(	553:40:13553:13553	4748295	23	True				
ANR	4748338	Statement	(	553:41:13554:13554	4748295	24	True				
ANR	4748339	Statement	x	553:42:13555:13555	4748295	25	True				
ANR	4748340	Statement	&	553:43:13556:13556	4748295	26	True				
ANR	4748341	Statement	4	553:44:13557:13557	4748295	27	True				
ANR	4748342	Statement	)	553:45:13558:13558	4748295	28	True				
ANR	4748343	Statement	>>	553:46:13559:13560	4748295	29	True				
ANR	4748344	Statement	2	553:48:13561:13561	4748295	30	True				
ANR	4748345	Statement	)	553:49:13562:13562	4748295	31	True				
ANR	4748346	IdentifierDeclStatement	int xnu_perms = xwr2rwx ( perms ) ;	554:1:13565:13596	4748295	32	True				
ANR	4748347	IdentifierDecl	xnu_perms = xwr2rwx ( perms )		4748295	0					
ANR	4748348	IdentifierDeclType	int		4748295	0					
ANR	4748349	Identifier	xnu_perms		4748295	1					
ANR	4748350	AssignmentExpression	xnu_perms = xwr2rwx ( perms )		4748295	2		=			
ANR	4748351	Identifier	xnu_perms		4748295	0					
ANR	4748352	CallExpression	xwr2rwx ( perms )		4748295	1					
ANR	4748353	Callee	xwr2rwx		4748295	0					
ANR	4748354	Identifier	xwr2rwx		4748295	0					
ANR	4748355	ArgumentList	perms		4748295	1					
ANR	4748356	Argument	perms		4748295	0					
ANR	4748357	Identifier	perms		4748295	0					
ANR	4748358	ExpressionStatement	"ret = mach_vm_protect ( task , ( vm_address_t ) addr , ( vm_size_t ) size , ( boolean_t ) 0 , xnu_perms )"	555:1:13599:13689	4748295	33	True				
ANR	4748359	AssignmentExpression	"ret = mach_vm_protect ( task , ( vm_address_t ) addr , ( vm_size_t ) size , ( boolean_t ) 0 , xnu_perms )"		4748295	0		=			
ANR	4748360	Identifier	ret		4748295	0					
ANR	4748361	CallExpression	"mach_vm_protect ( task , ( vm_address_t ) addr , ( vm_size_t ) size , ( boolean_t ) 0 , xnu_perms )"		4748295	1					
ANR	4748362	Callee	mach_vm_protect		4748295	0					
ANR	4748363	Identifier	mach_vm_protect		4748295	0					
ANR	4748364	ArgumentList	task		4748295	1					
ANR	4748365	Argument	task		4748295	0					
ANR	4748366	Identifier	task		4748295	0					
ANR	4748367	Argument	( vm_address_t ) addr		4748295	1					
ANR	4748368	CastExpression	( vm_address_t ) addr		4748295	0					
ANR	4748369	CastTarget	vm_address_t		4748295	0					
ANR	4748370	Identifier	addr		4748295	1					
ANR	4748371	Argument	( vm_size_t ) size		4748295	2					
ANR	4748372	CastExpression	( vm_size_t ) size		4748295	0					
ANR	4748373	CastTarget	vm_size_t		4748295	0					
ANR	4748374	Identifier	size		4748295	1					
ANR	4748375	Argument	( boolean_t ) 0		4748295	3					
ANR	4748376	CastExpression	( boolean_t ) 0		4748295	0					
ANR	4748377	CastTarget	boolean_t		4748295	0					
ANR	4748378	PrimaryExpression	0		4748295	1					
ANR	4748379	Argument	xnu_perms		4748295	4					
ANR	4748380	Identifier	xnu_perms		4748295	0					
ANR	4748381	IfStatement	if ( ret != KERN_SUCCESS )		4748295	34					
ANR	4748382	Condition	ret != KERN_SUCCESS	556:5:13721:13739	4748295	0	True				
ANR	4748383	EqualityExpression	ret != KERN_SUCCESS		4748295	0		!=			
ANR	4748384	Identifier	ret		4748295	0					
ANR	4748385	Identifier	KERN_SUCCESS		4748295	1					
ANR	4748386	CompoundStatement		7:26:279:279	4748295	1					
ANR	4748387	ExpressionStatement	"perror ( ""vm_protect"" )"	557:2:13746:13767	4748295	0	True				
ANR	4748388	CallExpression	"perror ( ""vm_protect"" )"		4748295	0					
ANR	4748389	Callee	perror		4748295	0					
ANR	4748390	Identifier	perror		4748295	0					
ANR	4748391	ArgumentList	"""vm_protect"""		4748295	1					
ANR	4748392	Argument	"""vm_protect"""		4748295	0					
ANR	4748393	PrimaryExpression	"""vm_protect"""		4748295	0					
ANR	4748394	ReturnStatement	return false ;	558:2:13771:13783	4748295	1	True				
ANR	4748395	Identifier	false		4748295	0					
ANR	4748396	ReturnStatement	return true ;	560:1:13789:13800	4748295	35	True				
ANR	4748397	Identifier	true		4748295	0					
ANR	4748398	ReturnType	int		4748295	1					
ANR	4748399	Identifier	xnu_map_protect		4748295	2					
ANR	4748400	ParameterList	"RDebug * dbg , ut64 addr , int size , int perms"		4748295	3					
ANR	4748401	Parameter	RDebug * dbg	550:21:13417:13427	4748295	0	True				
ANR	4748402	ParameterType	RDebug *		4748295	0					
ANR	4748403	Identifier	dbg		4748295	1					
ANR	4748404	Parameter	ut64 addr	550:34:13430:13438	4748295	1	True				
ANR	4748405	ParameterType	ut64		4748295	0					
ANR	4748406	Identifier	addr		4748295	1					
ANR	4748407	Parameter	int size	550:45:13441:13448	4748295	2	True				
ANR	4748408	ParameterType	int		4748295	0					
ANR	4748409	Identifier	size		4748295	1					
ANR	4748410	Parameter	int perms	550:55:13451:13459	4748295	3	True				
ANR	4748411	ParameterType	int		4748295	0					
ANR	4748412	Identifier	perms		4748295	1					
ANR	4748413	CFGEntryNode	ENTRY		4748295		True				
ANR	4748414	CFGExitNode	EXIT		4748295		True				
ANR	4748415	Symbol	ret		4748295						
ANR	4748416	Symbol	mach_vm_protect		4748295						
ANR	4748417	Symbol	xnu_perms		4748295						
ANR	4748418	Symbol	dbg		4748295						
ANR	4748419	Symbol	false		4748295						
ANR	4748420	Symbol	* dbg		4748295						
ANR	4748421	Symbol	xwr2rwx		4748295						
ANR	4748422	Symbol	dbg -> tid		4748295						
ANR	4748423	Symbol	task		4748295						
ANR	4748424	Symbol	pid_to_task		4748295						
ANR	4748425	Symbol	size		4748295						
ANR	4748426	Symbol	true		4748295						
ANR	4748427	Symbol	perms		4748295						
ANR	4748428	Symbol	KERN_SUCCESS		4748295						
ANR	4748429	Symbol	addr		4748295						
ANR	4748430	Function	pid_to_task	563:0:13805:15075							
ANR	4748431	FunctionDef	pid_to_task (int pid)		4748430	0					
ANR	4748432	CompoundStatement		563:29:13834:15075	4748430	0					
ANR	4748433	Statement	static	564:1:13837:13842	4748430	0	True				
ANR	4748434	IdentifierDeclStatement	int old_pid = - 1 ;	564:8:13844:13860	4748430	1	True				
ANR	4748435	IdentifierDecl	old_pid = - 1		4748430	0					
ANR	4748436	IdentifierDeclType	int		4748430	0					
ANR	4748437	Identifier	old_pid		4748430	1					
ANR	4748438	AssignmentExpression	old_pid = - 1		4748430	2		=			
ANR	4748439	Identifier	old_pid		4748430	0					
ANR	4748440	UnaryOperationExpression	- 1		4748430	1					
ANR	4748441	UnaryOperator	-		4748430	0					
ANR	4748442	PrimaryExpression	1		4748430	1					
ANR	4748443	IdentifierDeclStatement	kern_return_t kr ;	565:1:13863:13879	4748430	2	True				
ANR	4748444	IdentifierDecl	kr		4748430	0					
ANR	4748445	IdentifierDeclType	kern_return_t		4748430	0					
ANR	4748446	Identifier	kr		4748430	1					
ANR	4748447	IdentifierDeclStatement	task_t task = - 1 ;	566:1:13882:13898	4748430	3	True				
ANR	4748448	IdentifierDecl	task = - 1		4748430	0					
ANR	4748449	IdentifierDeclType	task_t		4748430	0					
ANR	4748450	Identifier	task		4748430	1					
ANR	4748451	AssignmentExpression	task = - 1		4748430	2		=			
ANR	4748452	Identifier	task		4748430	0					
ANR	4748453	UnaryOperationExpression	- 1		4748430	1					
ANR	4748454	UnaryOperator	-		4748430	0					
ANR	4748455	PrimaryExpression	1		4748430	1					
ANR	4748456	IdentifierDeclStatement	int err ;	567:1:13901:13908	4748430	4	True				
ANR	4748457	IdentifierDecl	err		4748430	0					
ANR	4748458	IdentifierDeclType	int		4748430	0					
ANR	4748459	Identifier	err		4748430	1					
ANR	4748460	IfStatement	if ( task_dbg != 0 && old_pid == pid )		4748430	5					
ANR	4748461	Condition	task_dbg != 0 && old_pid == pid	569:5:13961:13991	4748430	0	True				
ANR	4748462	AndExpression	task_dbg != 0 && old_pid == pid		4748430	0		&&			
ANR	4748463	EqualityExpression	task_dbg != 0		4748430	0		!=			
ANR	4748464	Identifier	task_dbg		4748430	0					
ANR	4748465	PrimaryExpression	0		4748430	1					
ANR	4748466	EqualityExpression	old_pid == pid		4748430	1		==			
ANR	4748467	Identifier	old_pid		4748430	0					
ANR	4748468	Identifier	pid		4748430	1					
ANR	4748469	CompoundStatement		7:38:159:159	4748430	1					
ANR	4748470	ReturnStatement	return task_dbg ;	570:2:13998:14013	4748430	0	True				
ANR	4748471	Identifier	task_dbg		4748430	0					
ANR	4748472	IfStatement	if ( task_dbg != 0 && old_pid != pid )		4748430	6					
ANR	4748473	Condition	task_dbg != 0 && old_pid != pid	572:5:14023:14053	4748430	0	True				
ANR	4748474	AndExpression	task_dbg != 0 && old_pid != pid		4748430	0		&&			
ANR	4748475	EqualityExpression	task_dbg != 0		4748430	0		!=			
ANR	4748476	Identifier	task_dbg		4748430	0					
ANR	4748477	PrimaryExpression	0		4748430	1					
ANR	4748478	EqualityExpression	old_pid != pid		4748430	1		!=			
ANR	4748479	Identifier	old_pid		4748430	0					
ANR	4748480	Identifier	pid		4748430	1					
ANR	4748481	CompoundStatement		10:38:221:221	4748430	1					
ANR	4748482	ExpressionStatement	"kr = mach_port_deallocate ( mach_task_self ( ) , task_dbg )"	575:2:14170:14225	4748430	0	True				
ANR	4748483	AssignmentExpression	"kr = mach_port_deallocate ( mach_task_self ( ) , task_dbg )"		4748430	0		=			
ANR	4748484	Identifier	kr		4748430	0					
ANR	4748485	CallExpression	"mach_port_deallocate ( mach_task_self ( ) , task_dbg )"		4748430	1					
ANR	4748486	Callee	mach_port_deallocate		4748430	0					
ANR	4748487	Identifier	mach_port_deallocate		4748430	0					
ANR	4748488	ArgumentList	mach_task_self ( )		4748430	1					
ANR	4748489	Argument	mach_task_self ( )		4748430	0					
ANR	4748490	CallExpression	mach_task_self ( )		4748430	0					
ANR	4748491	Callee	mach_task_self		4748430	0					
ANR	4748492	Identifier	mach_task_self		4748430	0					
ANR	4748493	ArgumentList			4748430	1					
ANR	4748494	Argument	task_dbg		4748430	1					
ANR	4748495	Identifier	task_dbg		4748430	0					
ANR	4748496	IfStatement	if ( kr != KERN_SUCCESS )		4748430	1					
ANR	4748497	Condition	kr != KERN_SUCCESS	576:6:14233:14250	4748430	0	True				
ANR	4748498	EqualityExpression	kr != KERN_SUCCESS		4748430	0		!=			
ANR	4748499	Identifier	kr		4748430	0					
ANR	4748500	Identifier	KERN_SUCCESS		4748430	1					
ANR	4748501	CompoundStatement		14:26:418:418	4748430	1					
ANR	4748502	ExpressionStatement	"eprintf ( ""pid_to_task: fail to deallocate port\\n"" )"	577:3:14258:14308	4748430	0	True				
ANR	4748503	CallExpression	"eprintf ( ""pid_to_task: fail to deallocate port\\n"" )"		4748430	0					
ANR	4748504	Callee	eprintf		4748430	0					
ANR	4748505	Identifier	eprintf		4748430	0					
ANR	4748506	ArgumentList	"""pid_to_task: fail to deallocate port\\n"""		4748430	1					
ANR	4748507	Argument	"""pid_to_task: fail to deallocate port\\n"""		4748430	0					
ANR	4748508	PrimaryExpression	"""pid_to_task: fail to deallocate port\\n"""		4748430	0					
ANR	4748509	ExpressionStatement	"err = task_for_pid ( mach_task_self ( ) , ( pid_t ) pid , & task )"	583:1:14394:14451	4748430	7	True				
ANR	4748510	AssignmentExpression	"err = task_for_pid ( mach_task_self ( ) , ( pid_t ) pid , & task )"		4748430	0		=			
ANR	4748511	Identifier	err		4748430	0					
ANR	4748512	CallExpression	"task_for_pid ( mach_task_self ( ) , ( pid_t ) pid , & task )"		4748430	1					
ANR	4748513	Callee	task_for_pid		4748430	0					
ANR	4748514	Identifier	task_for_pid		4748430	0					
ANR	4748515	ArgumentList	mach_task_self ( )		4748430	1					
ANR	4748516	Argument	mach_task_self ( )		4748430	0					
ANR	4748517	CallExpression	mach_task_self ( )		4748430	0					
ANR	4748518	Callee	mach_task_self		4748430	0					
ANR	4748519	Identifier	mach_task_self		4748430	0					
ANR	4748520	ArgumentList			4748430	1					
ANR	4748521	Argument	( pid_t ) pid		4748430	1					
ANR	4748522	CastExpression	( pid_t ) pid		4748430	0					
ANR	4748523	CastTarget	pid_t		4748430	0					
ANR	4748524	Identifier	pid		4748430	1					
ANR	4748525	Argument	& task		4748430	2					
ANR	4748526	UnaryOperationExpression	& task		4748430	0					
ANR	4748527	UnaryOperator	&		4748430	0					
ANR	4748528	Identifier	task		4748430	1					
ANR	4748529	IfStatement	if ( ( err != KERN_SUCCESS ) || ! MACH_PORT_VALID ( task ) )		4748430	8					
ANR	4748530	Condition	( err != KERN_SUCCESS ) || ! MACH_PORT_VALID ( task )	584:5:14458:14505	4748430	0	True				
ANR	4748531	OrExpression	( err != KERN_SUCCESS ) || ! MACH_PORT_VALID ( task )		4748430	0		||			
ANR	4748532	EqualityExpression	err != KERN_SUCCESS		4748430	0		!=			
ANR	4748533	Identifier	err		4748430	0					
ANR	4748534	Identifier	KERN_SUCCESS		4748430	1					
ANR	4748535	UnaryOperationExpression	! MACH_PORT_VALID ( task )		4748430	1					
ANR	4748536	UnaryOperator	!		4748430	0					
ANR	4748537	CallExpression	MACH_PORT_VALID ( task )		4748430	1					
ANR	4748538	Callee	MACH_PORT_VALID		4748430	0					
ANR	4748539	Identifier	MACH_PORT_VALID		4748430	0					
ANR	4748540	ArgumentList	task		4748430	1					
ANR	4748541	Argument	task		4748430	0					
ANR	4748542	Identifier	task		4748430	0					
ANR	4748543	CompoundStatement		22:55:673:673	4748430	1					
ANR	4748544	ExpressionStatement	task = task_for_pid_workaround ( pid )	585:2:14512:14548	4748430	0	True				
ANR	4748545	AssignmentExpression	task = task_for_pid_workaround ( pid )		4748430	0		=			
ANR	4748546	Identifier	task		4748430	0					
ANR	4748547	CallExpression	task_for_pid_workaround ( pid )		4748430	1					
ANR	4748548	Callee	task_for_pid_workaround		4748430	0					
ANR	4748549	Identifier	task_for_pid_workaround		4748430	0					
ANR	4748550	ArgumentList	pid		4748430	1					
ANR	4748551	Argument	pid		4748430	0					
ANR	4748552	Identifier	pid		4748430	0					
ANR	4748553	IfStatement	if ( task == 0 )		4748430	1					
ANR	4748554	Condition	task == 0	586:6:14556:14564	4748430	0	True				
ANR	4748555	EqualityExpression	task == 0		4748430	0		==			
ANR	4748556	Identifier	task		4748430	0					
ANR	4748557	PrimaryExpression	0		4748430	1					
ANR	4748558	CompoundStatement		24:17:732:732	4748430	1					
ANR	4748559	ExpressionStatement	task = task_for_pid_ios9pangu ( pid )	587:3:14572:14607	4748430	0	True				
ANR	4748560	AssignmentExpression	task = task_for_pid_ios9pangu ( pid )		4748430	0		=			
ANR	4748561	Identifier	task		4748430	0					
ANR	4748562	CallExpression	task_for_pid_ios9pangu ( pid )		4748430	1					
ANR	4748563	Callee	task_for_pid_ios9pangu		4748430	0					
ANR	4748564	Identifier	task_for_pid_ios9pangu		4748430	0					
ANR	4748565	ArgumentList	pid		4748430	1					
ANR	4748566	Argument	pid		4748430	0					
ANR	4748567	Identifier	pid		4748430	0					
ANR	4748568	IfStatement	if ( task != MACH_PORT_NULL )		4748430	1					
ANR	4748569	Condition	task != MACH_PORT_NULL	588:7:14616:14637	4748430	0	True				
ANR	4748570	EqualityExpression	task != MACH_PORT_NULL		4748430	0		!=			
ANR	4748571	Identifier	task		4748430	0					
ANR	4748572	Identifier	MACH_PORT_NULL		4748430	1					
ANR	4748573	CompoundStatement		26:31:805:805	4748430	1					
ANR	4748574	IfStatement	if ( pid != - 1 )		4748430	0					
ANR	4748575	Condition	pid != - 1	589:8:14650:14658	4748430	0	True				
ANR	4748576	EqualityExpression	pid != - 1		4748430	0		!=			
ANR	4748577	Identifier	pid		4748430	0					
ANR	4748578	UnaryOperationExpression	- 1		4748430	1					
ANR	4748579	UnaryOperator	-		4748430	0					
ANR	4748580	PrimaryExpression	1		4748430	1					
ANR	4748581	CompoundStatement		27:19:826:826	4748430	1					
ANR	4748582	ExpressionStatement	"eprintf ( ""Failed to get task %d for pid %d.\\n"" , ( int ) task , ( int ) pid )"	590:5:14668:14743	4748430	0	True				
ANR	4748583	CallExpression	"eprintf ( ""Failed to get task %d for pid %d.\\n"" , ( int ) task , ( int ) pid )"		4748430	0					
ANR	4748584	Callee	eprintf		4748430	0					
ANR	4748585	Identifier	eprintf		4748430	0					
ANR	4748586	ArgumentList	"""Failed to get task %d for pid %d.\\n"""		4748430	1					
ANR	4748587	Argument	"""Failed to get task %d for pid %d.\\n"""		4748430	0					
ANR	4748588	PrimaryExpression	"""Failed to get task %d for pid %d.\\n"""		4748430	0					
ANR	4748589	Argument	( int ) task		4748430	1					
ANR	4748590	CastExpression	( int ) task		4748430	0					
ANR	4748591	CastTarget	int		4748430	0					
ANR	4748592	Identifier	task		4748430	1					
ANR	4748593	Argument	( int ) pid		4748430	2					
ANR	4748594	CastExpression	( int ) pid		4748430	0					
ANR	4748595	CastTarget	int		4748430	0					
ANR	4748596	Identifier	pid		4748430	1					
ANR	4748597	ExpressionStatement	"eprintf ( ""Reason: 0x%x: %s\\n"" , err , ( char * ) MACH_ERROR_STRING ( err ) )"	592:5:14750:14825	4748430	1	True				
ANR	4748598	CallExpression	"eprintf ( ""Reason: 0x%x: %s\\n"" , err , ( char * ) MACH_ERROR_STRING ( err ) )"		4748430	0					
ANR	4748599	Callee	eprintf		4748430	0					
ANR	4748600	Identifier	eprintf		4748430	0					
ANR	4748601	ArgumentList	"""Reason: 0x%x: %s\\n"""		4748430	1					
ANR	4748602	Argument	"""Reason: 0x%x: %s\\n"""		4748430	0					
ANR	4748603	PrimaryExpression	"""Reason: 0x%x: %s\\n"""		4748430	0					
ANR	4748604	Argument	err		4748430	1					
ANR	4748605	Identifier	err		4748430	0					
ANR	4748606	Argument	( char * ) MACH_ERROR_STRING ( err )		4748430	2					
ANR	4748607	CastExpression	( char * ) MACH_ERROR_STRING ( err )		4748430	0					
ANR	4748608	CastTarget	char *		4748430	0					
ANR	4748609	CallExpression	MACH_ERROR_STRING ( err )		4748430	1					
ANR	4748610	Callee	MACH_ERROR_STRING		4748430	0					
ANR	4748611	Identifier	MACH_ERROR_STRING		4748430	0					
ANR	4748612	ArgumentList	err		4748430	1					
ANR	4748613	Argument	err		4748430	0					
ANR	4748614	Identifier	err		4748430	0					
ANR	4748615	Statement	eprintf	595:4:14837:14843	4748430	1	True				
ANR	4748616	Statement	(	595:12:14845:14845	4748430	2	True				
ANR	4748617	Statement	"""You probably need to run as root or sign """	595:13:14846:14888	4748430	3	True				
ANR	4748618	Statement	"""the binary.\\n Read doc/ios.md || doc/macos.md\\n"""	596:5:14895:14943	4748430	4	True				
ANR	4748619	Statement	""" make -C binr/radare2 ios-sign || macos-sign\\n"""	597:5:14950:14997	4748430	5	True				
ANR	4748620	Statement	)	597:53:14998:14998	4748430	6	True				
ANR	4748621	ExpressionStatement		597:54:14999:14999	4748430	7	True				
ANR	4748622	ReturnStatement	return 0 ;	598:4:15005:15013	4748430	8	True				
ANR	4748623	PrimaryExpression	0		4748430	0					
ANR	4748624	ExpressionStatement	old_pid = pid	602:1:15028:15041	4748430	9	True				
ANR	4748625	AssignmentExpression	old_pid = pid		4748430	0		=			
ANR	4748626	Identifier	old_pid		4748430	0					
ANR	4748627	Identifier	pid		4748430	1					
ANR	4748628	ExpressionStatement	task_dbg = task	603:1:15044:15059	4748430	10	True				
ANR	4748629	AssignmentExpression	task_dbg = task		4748430	0		=			
ANR	4748630	Identifier	task_dbg		4748430	0					
ANR	4748631	Identifier	task		4748430	1					
ANR	4748632	ReturnStatement	return task ;	604:1:15062:15073	4748430	11	True				
ANR	4748633	Identifier	task		4748430	0					
ANR	4748634	ReturnType	task_t		4748430	1					
ANR	4748635	Identifier	pid_to_task		4748430	2					
ANR	4748636	ParameterList	int pid		4748430	3					
ANR	4748637	Parameter	int pid	563:20:13825:13831	4748430	0	True				
ANR	4748638	ParameterType	int		4748430	0					
ANR	4748639	Identifier	pid		4748430	1					
ANR	4748640	CFGEntryNode	ENTRY		4748430		True				
ANR	4748641	CFGExitNode	EXIT		4748430		True				
ANR	4748642	Symbol	MACH_ERROR_STRING		4748430						
ANR	4748643	Symbol	err		4748430						
ANR	4748644	Symbol	kr		4748430						
ANR	4748645	Symbol	MACH_PORT_VALID		4748430						
ANR	4748646	Symbol	pid		4748430						
ANR	4748647	Symbol	mach_port_deallocate		4748430						
ANR	4748648	Symbol	& task		4748430						
ANR	4748649	Symbol	task		4748430						
ANR	4748650	Symbol	task_for_pid_ios9pangu		4748430						
ANR	4748651	Symbol	mach_task_self		4748430						
ANR	4748652	Symbol	KERN_SUCCESS		4748430						
ANR	4748653	Symbol	task_for_pid		4748430						
ANR	4748654	Symbol	task_dbg		4748430						
ANR	4748655	Symbol	old_pid		4748430						
ANR	4748656	Symbol	task_for_pid_workaround		4748430						
ANR	4748657	Symbol	MACH_PORT_NULL		4748430						
ANR	4748658	Function	xnu_get_vmmap_entries_for_pid	607:0:15078:15725							
ANR	4748659	FunctionDef	xnu_get_vmmap_entries_for_pid (pid_t pid)		4748658	0					
ANR	4748660	CompoundStatement		607:46:15124:15725	4748658	0					
ANR	4748661	IdentifierDeclStatement	task_t task = pid_to_task ( pid ) ;	608:1:15127:15158	4748658	0	True				
ANR	4748662	IdentifierDecl	task = pid_to_task ( pid )		4748658	0					
ANR	4748663	IdentifierDeclType	task_t		4748658	0					
ANR	4748664	Identifier	task		4748658	1					
ANR	4748665	AssignmentExpression	task = pid_to_task ( pid )		4748658	2		=			
ANR	4748666	Identifier	task		4748658	0					
ANR	4748667	CallExpression	pid_to_task ( pid )		4748658	1					
ANR	4748668	Callee	pid_to_task		4748658	0					
ANR	4748669	Identifier	pid_to_task		4748658	0					
ANR	4748670	ArgumentList	pid		4748658	1					
ANR	4748671	Argument	pid		4748658	0					
ANR	4748672	Identifier	pid		4748658	0					
ANR	4748673	IdentifierDeclStatement	kern_return_t kr = KERN_SUCCESS ;	609:1:15161:15192	4748658	1	True				
ANR	4748674	IdentifierDecl	kr = KERN_SUCCESS		4748658	0					
ANR	4748675	IdentifierDeclType	kern_return_t		4748658	0					
ANR	4748676	Identifier	kr		4748658	1					
ANR	4748677	AssignmentExpression	kr = KERN_SUCCESS		4748658	2		=			
ANR	4748678	Identifier	KERN_SUCCESS		4748658	0					
ANR	4748679	Identifier	KERN_SUCCESS		4748658	1					
ANR	4748680	IdentifierDeclStatement	vm_address_t address = 0 ;	610:1:15195:15219	4748658	2	True				
ANR	4748681	IdentifierDecl	address = 0		4748658	0					
ANR	4748682	IdentifierDeclType	vm_address_t		4748658	0					
ANR	4748683	Identifier	address		4748658	1					
ANR	4748684	AssignmentExpression	address = 0		4748658	2		=			
ANR	4748685	Identifier	address		4748658	0					
ANR	4748686	PrimaryExpression	0		4748658	1					
ANR	4748687	IdentifierDeclStatement	vm_size_t size = 0 ;	611:1:15222:15240	4748658	3	True				
ANR	4748688	IdentifierDecl	size = 0		4748658	0					
ANR	4748689	IdentifierDeclType	vm_size_t		4748658	0					
ANR	4748690	Identifier	size		4748658	1					
ANR	4748691	AssignmentExpression	size = 0		4748658	2		=			
ANR	4748692	Identifier	size		4748658	0					
ANR	4748693	PrimaryExpression	0		4748658	1					
ANR	4748694	IdentifierDeclStatement	int n = 1 ;	612:1:15243:15252	4748658	4	True				
ANR	4748695	IdentifierDecl	n = 1		4748658	0					
ANR	4748696	IdentifierDeclType	int		4748658	0					
ANR	4748697	Identifier	n		4748658	1					
ANR	4748698	AssignmentExpression	n = 1		4748658	2		=			
ANR	4748699	Identifier	n		4748658	0					
ANR	4748700	PrimaryExpression	1		4748658	1					
ANR	4748701	ForStatement	for ( ; ; )		4748658	5					
ANR	4748702	CompoundStatement		11:2:216:234	4748658	0					
ANR	4748703	IdentifierDeclStatement	mach_msg_type_number_t count ;	615:2:15269:15297	4748658	0	True				
ANR	4748704	IdentifierDecl	count		4748658	0					
ANR	4748705	IdentifierDeclType	mach_msg_type_number_t		4748658	0					
ANR	4748706	Identifier	count		4748658	1					
ANR	4748707	IdentifierDeclStatement	struct vm_region_submap_info_64 info ;	616:2:15301:15337	4748658	1	True				
ANR	4748708	IdentifierDecl	info		4748658	0					
ANR	4748709	IdentifierDeclType	struct vm_region_submap_info_64		4748658	0					
ANR	4748710	Identifier	info		4748658	1					
ANR	4748711	IdentifierDeclStatement	ut32 nesting_depth ;	617:2:15341:15359	4748658	2	True				
ANR	4748712	IdentifierDecl	nesting_depth		4748658	0					
ANR	4748713	IdentifierDeclType	ut32		4748658	0					
ANR	4748714	Identifier	nesting_depth		4748658	1					
ANR	4748715	ExpressionStatement	count = VM_REGION_SUBMAP_INFO_COUNT_64	619:2:15364:15402	4748658	3	True				
ANR	4748716	AssignmentExpression	count = VM_REGION_SUBMAP_INFO_COUNT_64		4748658	0		=			
ANR	4748717	Identifier	count		4748658	0					
ANR	4748718	Identifier	VM_REGION_SUBMAP_INFO_COUNT_64		4748658	1					
ANR	4748719	ExpressionStatement	"kr = vm_region_recurse_64 ( task , & address , & size , & nesting_depth , ( vm_region_info_64_t ) & info , & count )"	620:2:15406:15510	4748658	4	True				
ANR	4748720	AssignmentExpression	"kr = vm_region_recurse_64 ( task , & address , & size , & nesting_depth , ( vm_region_info_64_t ) & info , & count )"		4748658	0		=			
ANR	4748721	Identifier	kr		4748658	0					
ANR	4748722	CallExpression	"vm_region_recurse_64 ( task , & address , & size , & nesting_depth , ( vm_region_info_64_t ) & info , & count )"		4748658	1					
ANR	4748723	Callee	vm_region_recurse_64		4748658	0					
ANR	4748724	Identifier	vm_region_recurse_64		4748658	0					
ANR	4748725	ArgumentList	task		4748658	1					
ANR	4748726	Argument	task		4748658	0					
ANR	4748727	Identifier	task		4748658	0					
ANR	4748728	Argument	& address		4748658	1					
ANR	4748729	UnaryOperationExpression	& address		4748658	0					
ANR	4748730	UnaryOperator	&		4748658	0					
ANR	4748731	Identifier	address		4748658	1					
ANR	4748732	Argument	& size		4748658	2					
ANR	4748733	UnaryOperationExpression	& size		4748658	0					
ANR	4748734	UnaryOperator	&		4748658	0					
ANR	4748735	Identifier	size		4748658	1					
ANR	4748736	Argument	& nesting_depth		4748658	3					
ANR	4748737	UnaryOperationExpression	& nesting_depth		4748658	0					
ANR	4748738	UnaryOperator	&		4748658	0					
ANR	4748739	Identifier	nesting_depth		4748658	1					
ANR	4748740	Argument	( vm_region_info_64_t ) & info		4748658	4					
ANR	4748741	CastExpression	( vm_region_info_64_t ) & info		4748658	0					
ANR	4748742	CastTarget	vm_region_info_64_t		4748658	0					
ANR	4748743	UnaryOperationExpression	& info		4748658	1					
ANR	4748744	UnaryOperator	&		4748658	0					
ANR	4748745	Identifier	info		4748658	1					
ANR	4748746	Argument	& count		4748658	5					
ANR	4748747	UnaryOperationExpression	& count		4748658	0					
ANR	4748748	UnaryOperator	&		4748658	0					
ANR	4748749	Identifier	count		4748658	1					
ANR	4748750	IfStatement	if ( kr == KERN_INVALID_ADDRESS )		4748658	5					
ANR	4748751	Condition	kr == KERN_INVALID_ADDRESS	622:6:15518:15543	4748658	0	True				
ANR	4748752	EqualityExpression	kr == KERN_INVALID_ADDRESS		4748658	0		==			
ANR	4748753	Identifier	kr		4748658	0					
ANR	4748754	Identifier	KERN_INVALID_ADDRESS		4748658	1					
ANR	4748755	CompoundStatement		16:34:421:421	4748658	1					
ANR	4748756	BreakStatement	break ;	623:3:15551:15556	4748658	0	True				
ANR	4748757	IfStatement	if ( kr )		4748658	6					
ANR	4748758	Condition	kr	625:6:15568:15569	4748658	0	True				
ANR	4748759	Identifier	kr		4748658	0					
ANR	4748760	CompoundStatement		19:10:447:447	4748658	1					
ANR	4748761	ExpressionStatement	"mach_error ( ""vm_region:"" , kr )"	626:3:15577:15606	4748658	0	True				
ANR	4748762	CallExpression	"mach_error ( ""vm_region:"" , kr )"		4748658	0					
ANR	4748763	Callee	mach_error		4748658	0					
ANR	4748764	Identifier	mach_error		4748658	0					
ANR	4748765	ArgumentList	"""vm_region:"""		4748658	1					
ANR	4748766	Argument	"""vm_region:"""		4748658	0					
ANR	4748767	PrimaryExpression	"""vm_region:"""		4748658	0					
ANR	4748768	Argument	kr		4748658	1					
ANR	4748769	Identifier	kr		4748658	0					
ANR	4748770	BreakStatement	break ;	627:3:15611:15616	4748658	1	True				
ANR	4748771	IfStatement	if ( info . is_submap )		4748658	7					
ANR	4748772	Condition	info . is_submap	629:6:15628:15641	4748658	0	True				
ANR	4748773	MemberAccess	info . is_submap		4748658	0					
ANR	4748774	Identifier	info		4748658	0					
ANR	4748775	Identifier	is_submap		4748658	1					
ANR	4748776	CompoundStatement		23:22:519:519	4748658	1					
ANR	4748777	ExpressionStatement	nesting_depth ++	630:3:15649:15664	4748658	0	True				
ANR	4748778	PostIncDecOperationExpression	nesting_depth ++		4748658	0					
ANR	4748779	Identifier	nesting_depth		4748658	0					
ANR	4748780	IncDec	++		4748658	1					
ANR	4748781	ElseStatement	else		4748658	0					
ANR	4748782	CompoundStatement		25:9:550:550	4748658	0					
ANR	4748783	ExpressionStatement	address += size	632:3:15680:15695	4748658	0	True				
ANR	4748784	AssignmentExpression	address += size		4748658	0		+=			
ANR	4748785	Identifier	address		4748658	0					
ANR	4748786	Identifier	size		4748658	1					
ANR	4748787	ExpressionStatement	n ++	633:3:15701:15704	4748658	1	True				
ANR	4748788	PostIncDecOperationExpression	n ++		4748658	0					
ANR	4748789	Identifier	n		4748658	0					
ANR	4748790	IncDec	++		4748658	1					
ANR	4748791	ReturnStatement	return n ;	637:1:15715:15723	4748658	6	True				
ANR	4748792	Identifier	n		4748658	0					
ANR	4748793	ReturnType	int		4748658	1					
ANR	4748794	Identifier	xnu_get_vmmap_entries_for_pid		4748658	2					
ANR	4748795	ParameterList	pid_t pid		4748658	3					
ANR	4748796	Parameter	pid_t pid	607:35:15113:15121	4748658	0	True				
ANR	4748797	ParameterType	pid_t		4748658	0					
ANR	4748798	Identifier	pid		4748658	1					
ANR	4748799	CFGEntryNode	ENTRY		4748658		True				
ANR	4748800	CFGExitNode	EXIT		4748658		True				
ANR	4748801	InfiniteForNode	true		4748658		True				
ANR	4748802	Symbol	address		4748658						
ANR	4748803	Symbol	& info		4748658						
ANR	4748804	Symbol	info . is_submap		4748658						
ANR	4748805	Symbol	nesting_depth		4748658						
ANR	4748806	Symbol	kr		4748658						
ANR	4748807	Symbol	& nesting_depth		4748658						
ANR	4748808	Symbol	count		4748658						
ANR	4748809	Symbol	vm_region_recurse_64		4748658						
ANR	4748810	Symbol	pid		4748658						
ANR	4748811	Symbol	& size		4748658						
ANR	4748812	Symbol	KERN_INVALID_ADDRESS		4748658						
ANR	4748813	Symbol	n		4748658						
ANR	4748814	Symbol	task		4748658						
ANR	4748815	Symbol	pid_to_task		4748658						
ANR	4748816	Symbol	size		4748658						
ANR	4748817	Symbol	KERN_SUCCESS		4748658						
ANR	4748818	Symbol	& count		4748658						
ANR	4748819	Symbol	VM_REGION_SUBMAP_INFO_COUNT_64		4748658						
ANR	4748820	Symbol	info		4748658						
ANR	4748821	Symbol	& address		4748658						
ANR	4748822	Function	get_mach_header_sizes	646:0:15980:16394							
ANR	4748823	FunctionDef	"get_mach_header_sizes (size_t * mach_header_sz , size_t * segment_command_sz)"		4748822	0					
ANR	4748824	CompoundStatement		647:37:16076:16394	4748822	0					
ANR	4748825	ExpressionStatement	* mach_header_sz = sizeof ( struct mach_header_64 )	649:1:16107:16154	4748822	0	True				
ANR	4748826	AssignmentExpression	* mach_header_sz = sizeof ( struct mach_header_64 )		4748822	0		=			
ANR	4748827	UnaryOperationExpression	* mach_header_sz		4748822	0					
ANR	4748828	UnaryOperator	*		4748822	0					
ANR	4748829	Identifier	mach_header_sz		4748822	1					
ANR	4748830	SizeofExpression	sizeof ( struct mach_header_64 )		4748822	1					
ANR	4748831	Sizeof	sizeof		4748822	0					
ANR	4748832	SizeofOperand	struct mach_header_64		4748822	1					
ANR	4748833	ExpressionStatement	* segment_command_sz = sizeof ( struct segment_command_64 )	650:1:16157:16212	4748822	1	True				
ANR	4748834	AssignmentExpression	* segment_command_sz = sizeof ( struct segment_command_64 )		4748822	0		=			
ANR	4748835	UnaryOperationExpression	* segment_command_sz		4748822	0					
ANR	4748836	UnaryOperator	*		4748822	0					
ANR	4748837	Identifier	segment_command_sz		4748822	1					
ANR	4748838	SizeofExpression	sizeof ( struct segment_command_64 )		4748822	1					
ANR	4748839	Sizeof	sizeof		4748822	0					
ANR	4748840	SizeofOperand	struct segment_command_64		4748822	1					
ANR	4748841	ReturnType	static void		4748822	1					
ANR	4748842	Identifier	get_mach_header_sizes		4748822	2					
ANR	4748843	ParameterList	"size_t * mach_header_sz , size_t * segment_command_sz"		4748822	3					
ANR	4748844	Parameter	size_t * mach_header_sz	646:34:16014:16035	4748822	0	True				
ANR	4748845	ParameterType	size_t *		4748822	0					
ANR	4748846	Identifier	mach_header_sz		4748822	1					
ANR	4748847	Parameter	size_t * segment_command_sz	647:9:16048:16073	4748822	1	True				
ANR	4748848	ParameterType	size_t *		4748822	0					
ANR	4748849	Identifier	segment_command_sz		4748822	1					
ANR	4748850	CFGEntryNode	ENTRY		4748822		True				
ANR	4748851	CFGExitNode	EXIT		4748822		True				
ANR	4748852	Symbol	segment_command_sz		4748822						
ANR	4748853	Symbol	* segment_command_sz		4748822						
ANR	4748854	Symbol	mach_header_sz		4748822						
ANR	4748855	Symbol	* mach_header_sz		4748822						
ANR	4748856	Function	xnu_get_cpu_type	660:0:16461:16913							
ANR	4748857	FunctionDef	xnu_get_cpu_type (pid_t pid)		4748856	0					
ANR	4748858	CompoundStatement		660:47:16508:16913	4748856	0					
ANR	4748859	IdentifierDeclStatement	int mib [ CTL_MAXNAME ] ;	661:1:16511:16531	4748856	0	True				
ANR	4748860	IdentifierDecl	mib [ CTL_MAXNAME ]		4748856	0					
ANR	4748861	IdentifierDeclType	int [ CTL_MAXNAME ]		4748856	0					
ANR	4748862	Identifier	mib		4748856	1					
ANR	4748863	Identifier	CTL_MAXNAME		4748856	2					
ANR	4748864	IdentifierDeclStatement	size_t len = CTL_MAXNAME ;	662:1:16534:16558	4748856	1	True				
ANR	4748865	IdentifierDecl	len = CTL_MAXNAME		4748856	0					
ANR	4748866	IdentifierDeclType	size_t		4748856	0					
ANR	4748867	Identifier	len		4748856	1					
ANR	4748868	AssignmentExpression	len = CTL_MAXNAME		4748856	2		=			
ANR	4748869	Identifier	CTL_MAXNAME		4748856	0					
ANR	4748870	Identifier	CTL_MAXNAME		4748856	1					
ANR	4748871	IdentifierDeclStatement	cpu_type_t cpu_type ;	663:1:16561:16580	4748856	2	True				
ANR	4748872	IdentifierDecl	cpu_type		4748856	0					
ANR	4748873	IdentifierDeclType	cpu_type_t		4748856	0					
ANR	4748874	Identifier	cpu_type		4748856	1					
ANR	4748875	IdentifierDeclStatement	size_t cpu_type_len = sizeof ( cpu_type_t ) ;	664:1:16583:16624	4748856	3	True				
ANR	4748876	IdentifierDecl	cpu_type_len = sizeof ( cpu_type_t )		4748856	0					
ANR	4748877	IdentifierDeclType	size_t		4748856	0					
ANR	4748878	Identifier	cpu_type_len		4748856	1					
ANR	4748879	AssignmentExpression	cpu_type_len = sizeof ( cpu_type_t )		4748856	2		=			
ANR	4748880	Identifier	cpu_type_len		4748856	0					
ANR	4748881	SizeofExpression	sizeof ( cpu_type_t )		4748856	1					
ANR	4748882	Sizeof	sizeof		4748856	0					
ANR	4748883	SizeofOperand	cpu_type_t		4748856	1					
ANR	4748884	IfStatement	"if ( sysctlnametomib ( ""sysctl.proc_cputype"" , mib , & len ) == - 1 )"		4748856	4					
ANR	4748885	Condition	"sysctlnametomib ( ""sysctl.proc_cputype"" , mib , & len ) == - 1"	666:5:16632:16687	4748856	0	True				
ANR	4748886	EqualityExpression	"sysctlnametomib ( ""sysctl.proc_cputype"" , mib , & len ) == - 1"		4748856	0		==			
ANR	4748887	CallExpression	"sysctlnametomib ( ""sysctl.proc_cputype"" , mib , & len )"		4748856	0					
ANR	4748888	Callee	sysctlnametomib		4748856	0					
ANR	4748889	Identifier	sysctlnametomib		4748856	0					
ANR	4748890	ArgumentList	"""sysctl.proc_cputype"""		4748856	1					
ANR	4748891	Argument	"""sysctl.proc_cputype"""		4748856	0					
ANR	4748892	PrimaryExpression	"""sysctl.proc_cputype"""		4748856	0					
ANR	4748893	Argument	mib		4748856	1					
ANR	4748894	Identifier	mib		4748856	0					
ANR	4748895	Argument	& len		4748856	2					
ANR	4748896	UnaryOperationExpression	& len		4748856	0					
ANR	4748897	UnaryOperator	&		4748856	0					
ANR	4748898	Identifier	len		4748856	1					
ANR	4748899	UnaryOperationExpression	- 1		4748856	1					
ANR	4748900	UnaryOperator	-		4748856	0					
ANR	4748901	PrimaryExpression	1		4748856	1					
ANR	4748902	CompoundStatement		7:63:181:181	4748856	1					
ANR	4748903	ExpressionStatement	"perror ( ""sysctlnametomib"" )"	667:2:16694:16720	4748856	0	True				
ANR	4748904	CallExpression	"perror ( ""sysctlnametomib"" )"		4748856	0					
ANR	4748905	Callee	perror		4748856	0					
ANR	4748906	Identifier	perror		4748856	0					
ANR	4748907	ArgumentList	"""sysctlnametomib"""		4748856	1					
ANR	4748908	Argument	"""sysctlnametomib"""		4748856	0					
ANR	4748909	PrimaryExpression	"""sysctlnametomib"""		4748856	0					
ANR	4748910	ReturnStatement	return - 1 ;	668:2:16724:16733	4748856	1	True				
ANR	4748911	UnaryOperationExpression	- 1		4748856	0					
ANR	4748912	UnaryOperator	-		4748856	0					
ANR	4748913	PrimaryExpression	1		4748856	1					
ANR	4748914	ExpressionStatement	mib [ len ++ ] = pid	670:1:16739:16755	4748856	5	True				
ANR	4748915	AssignmentExpression	mib [ len ++ ] = pid		4748856	0		=			
ANR	4748916	ArrayIndexing	mib [ len ++ ]		4748856	0					
ANR	4748917	Identifier	mib		4748856	0					
ANR	4748918	PostIncDecOperationExpression	len ++		4748856	1					
ANR	4748919	Identifier	len		4748856	0					
ANR	4748920	IncDec	++		4748856	1					
ANR	4748921	Identifier	pid		4748856	1					
ANR	4748922	IfStatement	"if ( sysctl ( mib , len , & cpu_type , & cpu_type_len , NULL , 0 ) == - 1 )"		4748856	6					
ANR	4748923	Condition	"sysctl ( mib , len , & cpu_type , & cpu_type_len , NULL , 0 ) == - 1"	671:5:16762:16819	4748856	0	True				
ANR	4748924	EqualityExpression	"sysctl ( mib , len , & cpu_type , & cpu_type_len , NULL , 0 ) == - 1"		4748856	0		==			
ANR	4748925	CallExpression	"sysctl ( mib , len , & cpu_type , & cpu_type_len , NULL , 0 )"		4748856	0					
ANR	4748926	Callee	sysctl		4748856	0					
ANR	4748927	Identifier	sysctl		4748856	0					
ANR	4748928	ArgumentList	mib		4748856	1					
ANR	4748929	Argument	mib		4748856	0					
ANR	4748930	Identifier	mib		4748856	0					
ANR	4748931	Argument	len		4748856	1					
ANR	4748932	Identifier	len		4748856	0					
ANR	4748933	Argument	& cpu_type		4748856	2					
ANR	4748934	UnaryOperationExpression	& cpu_type		4748856	0					
ANR	4748935	UnaryOperator	&		4748856	0					
ANR	4748936	Identifier	cpu_type		4748856	1					
ANR	4748937	Argument	& cpu_type_len		4748856	3					
ANR	4748938	UnaryOperationExpression	& cpu_type_len		4748856	0					
ANR	4748939	UnaryOperator	&		4748856	0					
ANR	4748940	Identifier	cpu_type_len		4748856	1					
ANR	4748941	Argument	NULL		4748856	4					
ANR	4748942	Identifier	NULL		4748856	0					
ANR	4748943	Argument	0		4748856	5					
ANR	4748944	PrimaryExpression	0		4748856	0					
ANR	4748945	UnaryOperationExpression	- 1		4748856	1					
ANR	4748946	UnaryOperator	-		4748856	0					
ANR	4748947	PrimaryExpression	1		4748856	1					
ANR	4748948	CompoundStatement		12:65:313:313	4748856	1					
ANR	4748949	ExpressionStatement	"perror ( ""sysctl"" )"	672:2:16826:16843	4748856	0	True				
ANR	4748950	CallExpression	"perror ( ""sysctl"" )"		4748856	0					
ANR	4748951	Callee	perror		4748856	0					
ANR	4748952	Identifier	perror		4748856	0					
ANR	4748953	ArgumentList	"""sysctl"""		4748856	1					
ANR	4748954	Argument	"""sysctl"""		4748856	0					
ANR	4748955	PrimaryExpression	"""sysctl"""		4748856	0					
ANR	4748956	ReturnStatement	return - 1 ;	673:2:16847:16856	4748856	1	True				
ANR	4748957	UnaryOperationExpression	- 1		4748856	0					
ANR	4748958	UnaryOperator	-		4748856	0					
ANR	4748959	PrimaryExpression	1		4748856	1					
ANR	4748960	IfStatement	if ( cpu_type_len > 0 )		4748856	7					
ANR	4748961	Condition	cpu_type_len > 0	675:5:16866:16881	4748856	0	True				
ANR	4748962	RelationalExpression	cpu_type_len > 0		4748856	0		>			
ANR	4748963	Identifier	cpu_type_len		4748856	0					
ANR	4748964	PrimaryExpression	0		4748856	1					
ANR	4748965	ReturnStatement	return cpu_type ;	675:23:16884:16899	4748856	1	True				
ANR	4748966	Identifier	cpu_type		4748856	0					
ANR	4748967	ReturnStatement	return - 1 ;	676:1:16902:16911	4748856	8	True				
ANR	4748968	UnaryOperationExpression	- 1		4748856	0					
ANR	4748969	UnaryOperator	-		4748856	0					
ANR	4748970	PrimaryExpression	1		4748856	1					
ANR	4748971	ReturnType	static cpu_type_t		4748856	1					
ANR	4748972	Identifier	xnu_get_cpu_type		4748856	2					
ANR	4748973	ParameterList	pid_t pid		4748856	3					
ANR	4748974	Parameter	pid_t pid	660:36:16497:16505	4748856	0	True				
ANR	4748975	ParameterType	pid_t		4748856	0					
ANR	4748976	Identifier	pid		4748856	1					
ANR	4748977	CFGEntryNode	ENTRY		4748856		True				
ANR	4748978	CFGExitNode	EXIT		4748856		True				
ANR	4748979	Symbol	NULL		4748856						
ANR	4748980	Symbol	mib		4748856						
ANR	4748981	Symbol	pid		4748856						
ANR	4748982	Symbol	cpu_type_len		4748856						
ANR	4748983	Symbol	CTL_MAXNAME		4748856						
ANR	4748984	Symbol	* mib		4748856						
ANR	4748985	Symbol	& cpu_type		4748856						
ANR	4748986	Symbol	sysctl		4748856						
ANR	4748987	Symbol	sysctlnametomib		4748856						
ANR	4748988	Symbol	len		4748856						
ANR	4748989	Symbol	cpu_type		4748856						
ANR	4748990	Symbol	& cpu_type_len		4748856						
ANR	4748991	Symbol	& len		4748856						
ANR	4748992	Function	xnu_get_cpu_subtype	679:0:16916:17110							
ANR	4748993	FunctionDef	xnu_get_cpu_subtype ()		4748992	0					
ANR	4748994	CompoundStatement		679:44:16960:17110	4748992	0					
ANR	4748995	IdentifierDeclStatement	size_t size ;	680:1:16963:16974	4748992	0	True				
ANR	4748996	IdentifierDecl	size		4748992	0					
ANR	4748997	IdentifierDeclType	size_t		4748992	0					
ANR	4748998	Identifier	size		4748992	1					
ANR	4748999	IdentifierDeclStatement	cpu_subtype_t subtype ;	681:1:16977:16998	4748992	1	True				
ANR	4749000	IdentifierDecl	subtype		4748992	0					
ANR	4749001	IdentifierDeclType	cpu_subtype_t		4748992	0					
ANR	4749002	Identifier	subtype		4748992	1					
ANR	4749003	ExpressionStatement	size = sizeof ( cpu_subtype_t )	683:1:17002:17031	4748992	2	True				
ANR	4749004	AssignmentExpression	size = sizeof ( cpu_subtype_t )		4748992	0		=			
ANR	4749005	Identifier	size		4748992	0					
ANR	4749006	SizeofExpression	sizeof ( cpu_subtype_t )		4748992	1					
ANR	4749007	Sizeof	sizeof		4748992	0					
ANR	4749008	SizeofOperand	cpu_subtype_t		4748992	1					
ANR	4749009	ExpressionStatement	"sysctlbyname ( ""hw.cpusubtype"" , & subtype , & size , NULL , 0 )"	684:1:17034:17090	4748992	3	True				
ANR	4749010	CallExpression	"sysctlbyname ( ""hw.cpusubtype"" , & subtype , & size , NULL , 0 )"		4748992	0					
ANR	4749011	Callee	sysctlbyname		4748992	0					
ANR	4749012	Identifier	sysctlbyname		4748992	0					
ANR	4749013	ArgumentList	"""hw.cpusubtype"""		4748992	1					
ANR	4749014	Argument	"""hw.cpusubtype"""		4748992	0					
ANR	4749015	PrimaryExpression	"""hw.cpusubtype"""		4748992	0					
ANR	4749016	Argument	& subtype		4748992	1					
ANR	4749017	UnaryOperationExpression	& subtype		4748992	0					
ANR	4749018	UnaryOperator	&		4748992	0					
ANR	4749019	Identifier	subtype		4748992	1					
ANR	4749020	Argument	& size		4748992	2					
ANR	4749021	UnaryOperationExpression	& size		4748992	0					
ANR	4749022	UnaryOperator	&		4748992	0					
ANR	4749023	Identifier	size		4748992	1					
ANR	4749024	Argument	NULL		4748992	3					
ANR	4749025	Identifier	NULL		4748992	0					
ANR	4749026	Argument	0		4748992	4					
ANR	4749027	PrimaryExpression	0		4748992	0					
ANR	4749028	ReturnStatement	return subtype ;	686:1:17094:17108	4748992	4	True				
ANR	4749029	Identifier	subtype		4748992	0					
ANR	4749030	ReturnType	static cpu_subtype_t		4748992	1					
ANR	4749031	Identifier	xnu_get_cpu_subtype		4748992	2					
ANR	4749032	ParameterList			4748992	3					
ANR	4749033	CFGEntryNode	ENTRY		4748992		True				
ANR	4749034	CFGExitNode	EXIT		4748992		True				
ANR	4749035	Symbol	NULL		4748992						
ANR	4749036	Symbol	size		4748992						
ANR	4749037	Symbol	subtype		4748992						
ANR	4749038	Symbol	& size		4748992						
ANR	4749039	Symbol	& subtype		4748992						
ANR	4749040	Function	xnu_build_corefile_header	689:0:17113:17915							
ANR	4749041	FunctionDef	"xnu_build_corefile_header (vm_offset_t header , int segment_count , int thread_count , int command_size , pid_t pid)"		4749040	0					
ANR	4749042	CompoundStatement		690:67:17239:17915	4749040	0					
ANR	4749043	IdentifierDeclStatement	struct mach_header_64 * mh64 ;	692:1:17270:17297	4749040	0	True				
ANR	4749044	IdentifierDecl	* mh64		4749040	0					
ANR	4749045	IdentifierDeclType	struct mach_header_64 *		4749040	0					
ANR	4749046	Identifier	mh64		4749040	1					
ANR	4749047	ExpressionStatement	mh64 = ( struct mach_header_64 * ) header	693:1:17300:17338	4749040	1	True				
ANR	4749048	AssignmentExpression	mh64 = ( struct mach_header_64 * ) header		4749040	0		=			
ANR	4749049	Identifier	mh64		4749040	0					
ANR	4749050	CastExpression	( struct mach_header_64 * ) header		4749040	1					
ANR	4749051	CastTarget	struct mach_header_64 *		4749040	0					
ANR	4749052	Identifier	header		4749040	1					
ANR	4749053	ExpressionStatement	mh64 -> magic = MH_MAGIC_64	694:1:17341:17366	4749040	2	True				
ANR	4749054	AssignmentExpression	mh64 -> magic = MH_MAGIC_64		4749040	0		=			
ANR	4749055	PtrMemberAccess	mh64 -> magic		4749040	0					
ANR	4749056	Identifier	mh64		4749040	0					
ANR	4749057	Identifier	magic		4749040	1					
ANR	4749058	Identifier	MH_MAGIC_64		4749040	1					
ANR	4749059	ExpressionStatement	mh64 -> cputype = xnu_get_cpu_type ( pid )	695:1:17369:17407	4749040	3	True				
ANR	4749060	AssignmentExpression	mh64 -> cputype = xnu_get_cpu_type ( pid )		4749040	0		=			
ANR	4749061	PtrMemberAccess	mh64 -> cputype		4749040	0					
ANR	4749062	Identifier	mh64		4749040	0					
ANR	4749063	Identifier	cputype		4749040	1					
ANR	4749064	CallExpression	xnu_get_cpu_type ( pid )		4749040	1					
ANR	4749065	Callee	xnu_get_cpu_type		4749040	0					
ANR	4749066	Identifier	xnu_get_cpu_type		4749040	0					
ANR	4749067	ArgumentList	pid		4749040	1					
ANR	4749068	Argument	pid		4749040	0					
ANR	4749069	Identifier	pid		4749040	0					
ANR	4749070	ExpressionStatement	mh64 -> cpusubtype = xnu_get_cpu_subtype ( )	696:1:17410:17451	4749040	4	True				
ANR	4749071	AssignmentExpression	mh64 -> cpusubtype = xnu_get_cpu_subtype ( )		4749040	0		=			
ANR	4749072	PtrMemberAccess	mh64 -> cpusubtype		4749040	0					
ANR	4749073	Identifier	mh64		4749040	0					
ANR	4749074	Identifier	cpusubtype		4749040	1					
ANR	4749075	CallExpression	xnu_get_cpu_subtype ( )		4749040	1					
ANR	4749076	Callee	xnu_get_cpu_subtype		4749040	0					
ANR	4749077	Identifier	xnu_get_cpu_subtype		4749040	0					
ANR	4749078	ArgumentList			4749040	1					
ANR	4749079	ExpressionStatement	mh64 -> filetype = MH_CORE	697:1:17455:17479	4749040	5	True				
ANR	4749080	AssignmentExpression	mh64 -> filetype = MH_CORE		4749040	0		=			
ANR	4749081	PtrMemberAccess	mh64 -> filetype		4749040	0					
ANR	4749082	Identifier	mh64		4749040	0					
ANR	4749083	Identifier	filetype		4749040	1					
ANR	4749084	Identifier	MH_CORE		4749040	1					
ANR	4749085	ExpressionStatement	mh64 -> ncmds = segment_count + thread_count	698:1:17482:17524	4749040	6	True				
ANR	4749086	AssignmentExpression	mh64 -> ncmds = segment_count + thread_count		4749040	0		=			
ANR	4749087	PtrMemberAccess	mh64 -> ncmds		4749040	0					
ANR	4749088	Identifier	mh64		4749040	0					
ANR	4749089	Identifier	ncmds		4749040	1					
ANR	4749090	AdditiveExpression	segment_count + thread_count		4749040	1		+			
ANR	4749091	Identifier	segment_count		4749040	0					
ANR	4749092	Identifier	thread_count		4749040	1					
ANR	4749093	ExpressionStatement	mh64 -> sizeofcmds = command_size	699:1:17527:17558	4749040	7	True				
ANR	4749094	AssignmentExpression	mh64 -> sizeofcmds = command_size		4749040	0		=			
ANR	4749095	PtrMemberAccess	mh64 -> sizeofcmds		4749040	0					
ANR	4749096	Identifier	mh64		4749040	0					
ANR	4749097	Identifier	sizeofcmds		4749040	1					
ANR	4749098	Identifier	command_size		4749040	1					
ANR	4749099	ExpressionStatement	mh64 -> reserved = 0	700:1:17561:17579	4749040	8	True				
ANR	4749100	AssignmentExpression	mh64 -> reserved = 0		4749040	0		=			
ANR	4749101	PtrMemberAccess	mh64 -> reserved		4749040	0					
ANR	4749102	Identifier	mh64		4749040	0					
ANR	4749103	Identifier	reserved		4749040	1					
ANR	4749104	PrimaryExpression	0		4749040	1					
ANR	4749105	ReturnType	static void		4749040	1					
ANR	4749106	Identifier	xnu_build_corefile_header		4749040	2					
ANR	4749107	ParameterList	"vm_offset_t header , int segment_count , int thread_count , int command_size , pid_t pid"		4749040	3					
ANR	4749108	Parameter	vm_offset_t header	689:39:17152:17169	4749040	0	True				
ANR	4749109	ParameterType	vm_offset_t		4749040	0					
ANR	4749110	Identifier	header		4749040	1					
ANR	4749111	Parameter	int segment_count	690:1:17173:17189	4749040	1	True				
ANR	4749112	ParameterType	int		4749040	0					
ANR	4749113	Identifier	segment_count		4749040	1					
ANR	4749114	Parameter	int thread_count	690:20:17192:17207	4749040	2	True				
ANR	4749115	ParameterType	int		4749040	0					
ANR	4749116	Identifier	thread_count		4749040	1					
ANR	4749117	Parameter	int command_size	690:38:17210:17225	4749040	3	True				
ANR	4749118	ParameterType	int		4749040	0					
ANR	4749119	Identifier	command_size		4749040	1					
ANR	4749120	Parameter	pid_t pid	690:56:17228:17236	4749040	4	True				
ANR	4749121	ParameterType	pid_t		4749040	0					
ANR	4749122	Identifier	pid		4749040	1					
ANR	4749123	CFGEntryNode	ENTRY		4749040		True				
ANR	4749124	CFGExitNode	EXIT		4749040		True				
ANR	4749125	Symbol	mh64 -> sizeofcmds		4749040						
ANR	4749126	Symbol	mh64 -> filetype		4749040						
ANR	4749127	Symbol	mh64 -> ncmds		4749040						
ANR	4749128	Symbol	MH_MAGIC_64		4749040						
ANR	4749129	Symbol	xnu_get_cpu_subtype		4749040						
ANR	4749130	Symbol	pid		4749040						
ANR	4749131	Symbol	mh64		4749040						
ANR	4749132	Symbol	command_size		4749040						
ANR	4749133	Symbol	mh64 -> magic		4749040						
ANR	4749134	Symbol	* mh64		4749040						
ANR	4749135	Symbol	segment_count		4749040						
ANR	4749136	Symbol	xnu_get_cpu_type		4749040						
ANR	4749137	Symbol	mh64 -> reserved		4749040						
ANR	4749138	Symbol	MH_CORE		4749040						
ANR	4749139	Symbol	header		4749040						
ANR	4749140	Symbol	mh64 -> cpusubtype		4749040						
ANR	4749141	Symbol	thread_count		4749040						
ANR	4749142	Symbol	mh64 -> cputype		4749040						
ANR	4749143	Function	xnu_dealloc_threads	713:0:17918:18481							
ANR	4749144	FunctionDef	xnu_dealloc_threads (RList * threads)		4749143	0					
ANR	4749145	CompoundStatement		713:48:17966:18481	4749143	0					
ANR	4749146	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	714:1:17969:17992	4749143	0	True				
ANR	4749147	IdentifierDecl	* iter		4749143	0					
ANR	4749148	IdentifierDeclType	RListIter *		4749143	0					
ANR	4749149	Identifier	iter		4749143	1					
ANR	4749150	IdentifierDecl	* iter2		4749143	1					
ANR	4749151	IdentifierDeclType	RListIter *		4749143	0					
ANR	4749152	Identifier	iter2		4749143	1					
ANR	4749153	IdentifierDeclStatement	xnu_thread_t * thread ;	715:1:17995:18015	4749143	1	True				
ANR	4749154	IdentifierDecl	* thread		4749143	0					
ANR	4749155	IdentifierDeclType	xnu_thread_t *		4749143	0					
ANR	4749156	Identifier	thread		4749143	1					
ANR	4749157	IdentifierDeclStatement	mach_msg_type_number_t thread_count ;	716:1:18018:18053	4749143	2	True				
ANR	4749158	IdentifierDecl	thread_count		4749143	0					
ANR	4749159	IdentifierDeclType	mach_msg_type_number_t		4749143	0					
ANR	4749160	Identifier	thread_count		4749143	1					
ANR	4749161	IdentifierDeclStatement	thread_array_t thread_list ;	717:1:18056:18082	4749143	3	True				
ANR	4749162	IdentifierDecl	thread_list		4749143	0					
ANR	4749163	IdentifierDeclType	thread_array_t		4749143	0					
ANR	4749164	Identifier	thread_list		4749143	1					
ANR	4749165	IdentifierDeclStatement	kern_return_t kr = KERN_SUCCESS ;	718:1:18085:18116	4749143	4	True				
ANR	4749166	IdentifierDecl	kr = KERN_SUCCESS		4749143	0					
ANR	4749167	IdentifierDeclType	kern_return_t		4749143	0					
ANR	4749168	Identifier	kr		4749143	1					
ANR	4749169	AssignmentExpression	kr = KERN_SUCCESS		4749143	2		=			
ANR	4749170	Identifier	KERN_SUCCESS		4749143	0					
ANR	4749171	Identifier	KERN_SUCCESS		4749143	1					
ANR	4749172	ExpressionStatement	"kr = task_threads ( task_dbg , & thread_list , & thread_count )"	720:1:18120:18177	4749143	5	True				
ANR	4749173	AssignmentExpression	"kr = task_threads ( task_dbg , & thread_list , & thread_count )"		4749143	0		=			
ANR	4749174	Identifier	kr		4749143	0					
ANR	4749175	CallExpression	"task_threads ( task_dbg , & thread_list , & thread_count )"		4749143	1					
ANR	4749176	Callee	task_threads		4749143	0					
ANR	4749177	Identifier	task_threads		4749143	0					
ANR	4749178	ArgumentList	task_dbg		4749143	1					
ANR	4749179	Argument	task_dbg		4749143	0					
ANR	4749180	Identifier	task_dbg		4749143	0					
ANR	4749181	Argument	& thread_list		4749143	1					
ANR	4749182	UnaryOperationExpression	& thread_list		4749143	0					
ANR	4749183	UnaryOperator	&		4749143	0					
ANR	4749184	Identifier	thread_list		4749143	1					
ANR	4749185	Argument	& thread_count		4749143	2					
ANR	4749186	UnaryOperationExpression	& thread_count		4749143	0					
ANR	4749187	UnaryOperator	&		4749143	0					
ANR	4749188	Identifier	thread_count		4749143	1					
ANR	4749189	IfStatement	if ( kr != KERN_SUCCESS )		4749143	6					
ANR	4749190	Condition	kr != KERN_SUCCESS	721:5:18184:18201	4749143	0	True				
ANR	4749191	EqualityExpression	kr != KERN_SUCCESS		4749143	0		!=			
ANR	4749192	Identifier	kr		4749143	0					
ANR	4749193	Identifier	KERN_SUCCESS		4749143	1					
ANR	4749194	CompoundStatement		9:25:237:237	4749143	1					
ANR	4749195	ExpressionStatement	"perror ( ""task_threads"" )"	722:2:18208:18231	4749143	0	True				
ANR	4749196	CallExpression	"perror ( ""task_threads"" )"		4749143	0					
ANR	4749197	Callee	perror		4749143	0					
ANR	4749198	Identifier	perror		4749143	0					
ANR	4749199	ArgumentList	"""task_threads"""		4749143	1					
ANR	4749200	Argument	"""task_threads"""		4749143	0					
ANR	4749201	PrimaryExpression	"""task_threads"""		4749143	0					
ANR	4749202	ElseStatement	else		4749143	0					
ANR	4749203	CompoundStatement		11:8:274:274	4749143	0					
ANR	4749204	Statement	r_list_foreach_safe	724:2:18245:18263	4749143	0	True				
ANR	4749205	Statement	(	724:22:18265:18265	4749143	1	True				
ANR	4749206	Statement	threads	724:23:18266:18272	4749143	2	True				
ANR	4749207	Statement	","	724:30:18273:18273	4749143	3	True				
ANR	4749208	Statement	iter	724:32:18275:18278	4749143	4	True				
ANR	4749209	Statement	","	724:36:18279:18279	4749143	5	True				
ANR	4749210	Statement	iter2	724:38:18281:18285	4749143	6	True				
ANR	4749211	Statement	","	724:43:18286:18286	4749143	7	True				
ANR	4749212	Statement	thread	724:45:18288:18293	4749143	8	True				
ANR	4749213	Statement	)	724:51:18294:18294	4749143	9	True				
ANR	4749214	CompoundStatement		12:53:329:329	4749143	10					
ANR	4749215	ExpressionStatement	"mach_port_deallocate ( mach_task_self ( ) , thread -> port )"	725:3:18301:18355	4749143	0	True				
ANR	4749216	CallExpression	"mach_port_deallocate ( mach_task_self ( ) , thread -> port )"		4749143	0					
ANR	4749217	Callee	mach_port_deallocate		4749143	0					
ANR	4749218	Identifier	mach_port_deallocate		4749143	0					
ANR	4749219	ArgumentList	mach_task_self ( )		4749143	1					
ANR	4749220	Argument	mach_task_self ( )		4749143	0					
ANR	4749221	CallExpression	mach_task_self ( )		4749143	0					
ANR	4749222	Callee	mach_task_self		4749143	0					
ANR	4749223	Identifier	mach_task_self		4749143	0					
ANR	4749224	ArgumentList			4749143	1					
ANR	4749225	Argument	thread -> port		4749143	1					
ANR	4749226	PtrMemberAccess	thread -> port		4749143	0					
ANR	4749227	Identifier	thread		4749143	0					
ANR	4749228	Identifier	port		4749143	1					
ANR	4749229	ExpressionStatement	"vm_deallocate ( mach_task_self ( ) , ( vm_address_t ) thread_list , thread_count * sizeof ( thread_act_t ) )"	727:2:18363:18464	4749143	11	True				
ANR	4749230	CallExpression	"vm_deallocate ( mach_task_self ( ) , ( vm_address_t ) thread_list , thread_count * sizeof ( thread_act_t ) )"		4749143	0					
ANR	4749231	Callee	vm_deallocate		4749143	0					
ANR	4749232	Identifier	vm_deallocate		4749143	0					
ANR	4749233	ArgumentList	mach_task_self ( )		4749143	1					
ANR	4749234	Argument	mach_task_self ( )		4749143	0					
ANR	4749235	CallExpression	mach_task_self ( )		4749143	0					
ANR	4749236	Callee	mach_task_self		4749143	0					
ANR	4749237	Identifier	mach_task_self		4749143	0					
ANR	4749238	ArgumentList			4749143	1					
ANR	4749239	Argument	( vm_address_t ) thread_list		4749143	1					
ANR	4749240	CastExpression	( vm_address_t ) thread_list		4749143	0					
ANR	4749241	CastTarget	vm_address_t		4749143	0					
ANR	4749242	Identifier	thread_list		4749143	1					
ANR	4749243	Argument	thread_count * sizeof ( thread_act_t )		4749143	2					
ANR	4749244	MultiplicativeExpression	thread_count * sizeof ( thread_act_t )		4749143	0		*			
ANR	4749245	Identifier	thread_count		4749143	0					
ANR	4749246	SizeofExpression	sizeof ( thread_act_t )		4749143	1					
ANR	4749247	Sizeof	sizeof		4749143	0					
ANR	4749248	SizeofOperand	thread_act_t		4749143	1					
ANR	4749249	ReturnStatement	return kr ;	730:1:18470:18479	4749143	7	True				
ANR	4749250	Identifier	kr		4749143	0					
ANR	4749251	ReturnType	static int		4749143	1					
ANR	4749252	Identifier	xnu_dealloc_threads		4749143	2					
ANR	4749253	ParameterList	RList * threads		4749143	3					
ANR	4749254	Parameter	RList * threads	713:32:17950:17963	4749143	0	True				
ANR	4749255	ParameterType	RList *		4749143	0					
ANR	4749256	Identifier	threads		4749143	1					
ANR	4749257	CFGEntryNode	ENTRY		4749143		True				
ANR	4749258	CFGExitNode	EXIT		4749143		True				
ANR	4749259	Symbol	task_threads		4749143						
ANR	4749260	Symbol	& thread_list		4749143						
ANR	4749261	Symbol	thread_list		4749143						
ANR	4749262	Symbol	iter2		4749143						
ANR	4749263	Symbol	kr		4749143						
ANR	4749264	Symbol	threads		4749143						
ANR	4749265	Symbol	iter		4749143						
ANR	4749266	Symbol	thread		4749143						
ANR	4749267	Symbol	mach_task_self		4749143						
ANR	4749268	Symbol	& thread_count		4749143						
ANR	4749269	Symbol	* thread		4749143						
ANR	4749270	Symbol	thread_count		4749143						
ANR	4749271	Symbol	KERN_SUCCESS		4749143						
ANR	4749272	Symbol	thread -> port		4749143						
ANR	4749273	Symbol	task_dbg		4749143						
ANR	4749274	Function	xnu_write_mem_maps_to_buffer	738:0:18766:38000							
ANR	4749275	FunctionDef	"xnu_write_mem_maps_to_buffer (RBuffer * buffer , RList * mem_maps , int start_offset , vm_offset_t header , int header_end , int segment_command_sz , int * hoffset_out)"		4749274	0					
ANR	4749276	CompoundStatement		739:79:18938:38000	4749274	0					
ANR	4749277	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	740:1:18941:18964	4749274	0	True				
ANR	4749278	IdentifierDecl	* iter		4749274	0					
ANR	4749279	IdentifierDeclType	RListIter *		4749274	0					
ANR	4749280	Identifier	iter		4749274	1					
ANR	4749281	IdentifierDecl	* iter2		4749274	1					
ANR	4749282	IdentifierDeclType	RListIter *		4749274	0					
ANR	4749283	Identifier	iter2		4749274	1					
ANR	4749284	IdentifierDeclStatement	RDebugMap * curr_map ;	741:1:18967:18986	4749274	1	True				
ANR	4749285	IdentifierDecl	* curr_map		4749274	0					
ANR	4749286	IdentifierDeclType	RDebugMap *		4749274	0					
ANR	4749287	Identifier	curr_map		4749274	1					
ANR	4749288	IdentifierDeclStatement	int foffset = 0 ;	742:1:18989:19004	4749274	2	True				
ANR	4749289	IdentifierDecl	foffset = 0		4749274	0					
ANR	4749290	IdentifierDeclType	int		4749274	0					
ANR	4749291	Identifier	foffset		4749274	1					
ANR	4749292	AssignmentExpression	foffset = 0		4749274	2		=			
ANR	4749293	Identifier	foffset		4749274	0					
ANR	4749294	PrimaryExpression	0		4749274	1					
ANR	4749295	IdentifierDeclStatement	int hoffset = header_end ;	743:1:19023:19047	4749274	3	True				
ANR	4749296	IdentifierDecl	hoffset = header_end		4749274	0					
ANR	4749297	IdentifierDeclType	int		4749274	0					
ANR	4749298	Identifier	hoffset		4749274	1					
ANR	4749299	AssignmentExpression	hoffset = header_end		4749274	2		=			
ANR	4749300	Identifier	header_end		4749274	0					
ANR	4749301	Identifier	header_end		4749274	1					
ANR	4749302	IdentifierDeclStatement	kern_return_t kr = KERN_SUCCESS ;	744:1:19050:19081	4749274	4	True				
ANR	4749303	IdentifierDecl	kr = KERN_SUCCESS		4749274	0					
ANR	4749304	IdentifierDeclType	kern_return_t		4749274	0					
ANR	4749305	Identifier	kr		4749274	1					
ANR	4749306	AssignmentExpression	kr = KERN_SUCCESS		4749274	2		=			
ANR	4749307	Identifier	KERN_SUCCESS		4749274	0					
ANR	4749308	Identifier	KERN_SUCCESS		4749274	1					
ANR	4749309	IdentifierDeclStatement	int error = 0 ;	745:1:19084:19097	4749274	5	True				
ANR	4749310	IdentifierDecl	error = 0		4749274	0					
ANR	4749311	IdentifierDeclType	int		4749274	0					
ANR	4749312	Identifier	error		4749274	1					
ANR	4749313	AssignmentExpression	error = 0		4749274	2		=			
ANR	4749314	Identifier	error		4749274	0					
ANR	4749315	PrimaryExpression	0		4749274	1					
ANR	4749316	IdentifierDeclStatement	ssize_t rc = 0 ;	746:1:19100:19114	4749274	6	True				
ANR	4749317	IdentifierDecl	rc = 0		4749274	0					
ANR	4749318	IdentifierDeclType	ssize_t		4749274	0					
ANR	4749319	Identifier	rc		4749274	1					
ANR	4749320	AssignmentExpression	rc = 0		4749274	2		=			
ANR	4749321	Identifier	rc		4749274	0					
ANR	4749322	PrimaryExpression	0		4749274	1					
ANR	4749323	Statement	define	748:1:19118:19123	4749274	7	True				
ANR	4749324	Statement	CAST_DOWN	748:8:19125:19133	4749274	8	True				
ANR	4749325	Statement	(	748:17:19134:19134	4749274	9	True				
ANR	4749326	Statement	type	748:18:19135:19138	4749274	10	True				
ANR	4749327	Statement	","	748:22:19139:19139	4749274	11	True				
ANR	4749328	Statement	addr	748:24:19141:19144	4749274	12	True				
ANR	4749329	Statement	)	748:28:19145:19145	4749274	13	True				
ANR	4749330	Statement	(	748:30:19147:19147	4749274	14	True				
ANR	4749331	Statement	(	748:31:19148:19148	4749274	15	True				
ANR	4749332	Statement	(	748:32:19149:19149	4749274	16	True				
ANR	4749333	Statement	type	748:33:19150:19153	4749274	17	True				
ANR	4749334	Statement	)	748:37:19154:19154	4749274	18	True				
ANR	4749335	Statement	(	748:38:19155:19155	4749274	19	True				
ANR	4749336	Statement	(	748:39:19156:19156	4749274	20	True				
ANR	4749337	Statement	uintptr_t	748:40:19157:19165	4749274	21	True				
ANR	4749338	Statement	)	748:49:19166:19166	4749274	22	True				
ANR	4749339	Statement	(	748:50:19167:19167	4749274	23	True				
ANR	4749340	Statement	addr	748:51:19168:19171	4749274	24	True				
ANR	4749341	Statement	)	748:55:19172:19172	4749274	25	True				
ANR	4749342	Statement	)	748:56:19173:19173	4749274	26	True				
ANR	4749343	Statement	)	748:57:19174:19174	4749274	27	True				
ANR	4749344	Statement	)	748:58:19175:19175	4749274	28	True				
ANR	4749345	IdentifierDeclStatement	struct segment_command_64 * sc64 ;	750:1:19206:19237	4749274	29	True				
ANR	4749346	IdentifierDecl	* sc64		4749274	0					
ANR	4749347	IdentifierDeclType	struct segment_command_64 *		4749274	0					
ANR	4749348	Identifier	sc64		4749274	1					
ANR	4749349	Statement	r_list_foreach_safe	754:1:19317:19335	4749274	30	True				
ANR	4749350	Statement	(	754:21:19337:19337	4749274	31	True				
ANR	4749351	Statement	mem_maps	754:22:19338:19345	4749274	32	True				
ANR	4749352	Statement	","	754:30:19346:19346	4749274	33	True				
ANR	4749353	Statement	iter	754:32:19348:19351	4749274	34	True				
ANR	4749354	Statement	","	754:36:19352:19352	4749274	35	True				
ANR	4749355	Statement	iter2	754:38:19354:19358	4749274	36	True				
ANR	4749356	Statement	","	754:43:19359:19359	4749274	37	True				
ANR	4749357	Statement	curr_map	754:45:19361:19368	4749274	38	True				
ANR	4749358	Statement	)	754:53:19369:19369	4749274	39	True				
ANR	4749359	CompoundStatement		20:2:573:614	4749274	40					
ANR	4749360	Statement	eprintf	755:2:19375:19381	4749274	0	True				
ANR	4749361	Statement	(	755:10:19383:19383	4749274	1	True				
ANR	4749362	Statement	"""Writing section from 0x%"""	755:11:19384:19409	4749274	2	True				
ANR	4749363	Statement	PFMT64x	755:37:19410:19416	4749274	3	True				
ANR	4749364	Statement	""" to 0x%"""	755:44:19417:19425	4749274	4	True				
ANR	4749365	Statement	PFMT64x	755:53:19426:19432	4749274	5	True				
ANR	4749366	Statement	""" (%"""	755:60:19433:19437	4749274	6	True				
ANR	4749367	Statement	PFMT64d	755:65:19438:19444	4749274	7	True				
ANR	4749368	Statement	""")\\n"""	755:72:19445:19449	4749274	8	True				
ANR	4749369	Statement	","	755:77:19450:19450	4749274	9	True				
ANR	4749370	Statement	curr_map	756:3:19456:19463	4749274	10	True				
ANR	4749371	Statement	->	756:11:19464:19465	4749274	11	True				
ANR	4749372	Statement	addr	756:13:19466:19469	4749274	12	True				
ANR	4749373	Statement	","	756:17:19470:19470	4749274	13	True				
ANR	4749374	Statement	curr_map	756:19:19472:19479	4749274	14	True				
ANR	4749375	Statement	->	756:27:19480:19481	4749274	15	True				
ANR	4749376	Statement	addr_end	756:29:19482:19489	4749274	16	True				
ANR	4749377	Statement	","	756:37:19490:19490	4749274	17	True				
ANR	4749378	Statement	curr_map	756:39:19492:19499	4749274	18	True				
ANR	4749379	Statement	->	756:47:19500:19501	4749274	19	True				
ANR	4749380	Statement	size	756:49:19502:19505	4749274	20	True				
ANR	4749381	Statement	)	756:53:19506:19506	4749274	21	True				
ANR	4749382	ExpressionStatement		756:54:19507:19507	4749274	22	True				
ANR	4749383	IdentifierDeclStatement	vm_map_offset_t vmoffset = curr_map -> addr ;	758:2:19512:19553	4749274	23	True				
ANR	4749384	IdentifierDecl	vmoffset = curr_map -> addr		4749274	0					
ANR	4749385	IdentifierDeclType	vm_map_offset_t		4749274	0					
ANR	4749386	Identifier	vmoffset		4749274	1					
ANR	4749387	AssignmentExpression	vmoffset = curr_map -> addr		4749274	2		=			
ANR	4749388	Identifier	vmoffset		4749274	0					
ANR	4749389	PtrMemberAccess	curr_map -> addr		4749274	1					
ANR	4749390	Identifier	curr_map		4749274	0					
ANR	4749391	Identifier	addr		4749274	1					
ANR	4749392	ExpressionStatement	sc64 = ( struct segment_command_64 * ) ( header + hoffset )	760:2:19585:19639	4749274	24	True				
ANR	4749393	AssignmentExpression	sc64 = ( struct segment_command_64 * ) ( header + hoffset )		4749274	0		=			
ANR	4749394	Identifier	sc64		4749274	0					
ANR	4749395	CastExpression	( struct segment_command_64 * ) ( header + hoffset )		4749274	1					
ANR	4749396	CastTarget	struct segment_command_64 *		4749274	0					
ANR	4749397	AdditiveExpression	header + hoffset		4749274	1		+			
ANR	4749398	Identifier	header		4749274	0					
ANR	4749399	Identifier	hoffset		4749274	1					
ANR	4749400	ExpressionStatement	sc64 -> cmd = LC_SEGMENT_64	761:2:19643:19668	4749274	25	True				
ANR	4749401	AssignmentExpression	sc64 -> cmd = LC_SEGMENT_64		4749274	0		=			
ANR	4749402	PtrMemberAccess	sc64 -> cmd		4749274	0					
ANR	4749403	Identifier	sc64		4749274	0					
ANR	4749404	Identifier	cmd		4749274	1					
ANR	4749405	Identifier	LC_SEGMENT_64		4749274	1					
ANR	4749406	ExpressionStatement	sc64 -> cmdsize = sizeof ( struct segment_command_64 )	762:2:19672:19722	4749274	26	True				
ANR	4749407	AssignmentExpression	sc64 -> cmdsize = sizeof ( struct segment_command_64 )		4749274	0		=			
ANR	4749408	PtrMemberAccess	sc64 -> cmdsize		4749274	0					
ANR	4749409	Identifier	sc64		4749274	0					
ANR	4749410	Identifier	cmdsize		4749274	1					
ANR	4749411	SizeofExpression	sizeof ( struct segment_command_64 )		4749274	1					
ANR	4749412	Sizeof	sizeof		4749274	0					
ANR	4749413	SizeofOperand	struct segment_command_64		4749274	1					
ANR	4749414	ExpressionStatement	sc64 -> segname [ 0 ] = 0	763:2:19726:19746	4749274	27	True				
ANR	4749415	AssignmentExpression	sc64 -> segname [ 0 ] = 0		4749274	0		=			
ANR	4749416	ArrayIndexing	sc64 -> segname [ 0 ]		4749274	0					
ANR	4749417	PtrMemberAccess	sc64 -> segname		4749274	0					
ANR	4749418	Identifier	sc64		4749274	0					
ANR	4749419	Identifier	segname		4749274	1					
ANR	4749420	PrimaryExpression	0		4749274	1					
ANR	4749421	PrimaryExpression	0		4749274	1					
ANR	4749422	ExpressionStatement	sc64 -> vmaddr = curr_map -> addr	764:2:19794:19823	4749274	28	True				
ANR	4749423	AssignmentExpression	sc64 -> vmaddr = curr_map -> addr		4749274	0		=			
ANR	4749424	PtrMemberAccess	sc64 -> vmaddr		4749274	0					
ANR	4749425	Identifier	sc64		4749274	0					
ANR	4749426	Identifier	vmaddr		4749274	1					
ANR	4749427	PtrMemberAccess	curr_map -> addr		4749274	1					
ANR	4749428	Identifier	curr_map		4749274	0					
ANR	4749429	Identifier	addr		4749274	1					
ANR	4749430	ExpressionStatement	sc64 -> vmsize = curr_map -> size	765:2:19827:19856	4749274	29	True				
ANR	4749431	AssignmentExpression	sc64 -> vmsize = curr_map -> size		4749274	0		=			
ANR	4749432	PtrMemberAccess	sc64 -> vmsize		4749274	0					
ANR	4749433	Identifier	sc64		4749274	0					
ANR	4749434	Identifier	vmsize		4749274	1					
ANR	4749435	PtrMemberAccess	curr_map -> size		4749274	1					
ANR	4749436	Identifier	curr_map		4749274	0					
ANR	4749437	Identifier	size		4749274	1					
ANR	4749438	ExpressionStatement	sc64 -> maxprot = 7	766:2:19860:19877	4749274	30	True				
ANR	4749439	AssignmentExpression	sc64 -> maxprot = 7		4749274	0		=			
ANR	4749440	PtrMemberAccess	sc64 -> maxprot		4749274	0					
ANR	4749441	Identifier	sc64		4749274	0					
ANR	4749442	Identifier	maxprot		4749274	1					
ANR	4749443	PrimaryExpression	7		4749274	1					
ANR	4749444	ExpressionStatement	sc64 -> initprot = xwr2rwx ( curr_map -> perm )	767:2:19889:19930	4749274	31	True				
ANR	4749445	AssignmentExpression	sc64 -> initprot = xwr2rwx ( curr_map -> perm )		4749274	0		=			
ANR	4749446	PtrMemberAccess	sc64 -> initprot		4749274	0					
ANR	4749447	Identifier	sc64		4749274	0					
ANR	4749448	Identifier	initprot		4749274	1					
ANR	4749449	CallExpression	xwr2rwx ( curr_map -> perm )		4749274	1					
ANR	4749450	Callee	xwr2rwx		4749274	0					
ANR	4749451	Identifier	xwr2rwx		4749274	0					
ANR	4749452	ArgumentList	curr_map -> perm		4749274	1					
ANR	4749453	Argument	curr_map -> perm		4749274	0					
ANR	4749454	PtrMemberAccess	curr_map -> perm		4749274	0					
ANR	4749455	Identifier	curr_map		4749274	0					
ANR	4749456	Identifier	perm		4749274	1					
ANR	4749457	ExpressionStatement	sc64 -> nsects = 0	768:2:19934:19950	4749274	32	True				
ANR	4749458	AssignmentExpression	sc64 -> nsects = 0		4749274	0		=			
ANR	4749459	PtrMemberAccess	sc64 -> nsects		4749274	0					
ANR	4749460	Identifier	sc64		4749274	0					
ANR	4749461	Identifier	nsects		4749274	1					
ANR	4749462	PrimaryExpression	0		4749274	1					
ANR	4749463	IfStatement	if ( ( curr_map -> perm & VM_PROT_READ ) == 0 )		4749274	33					
ANR	4749464	Condition	( curr_map -> perm & VM_PROT_READ ) == 0	782:6:20454:20489	4749274	0	True				
ANR	4749465	EqualityExpression	( curr_map -> perm & VM_PROT_READ ) == 0		4749274	0		==			
ANR	4749466	BitAndExpression	curr_map -> perm & VM_PROT_READ		4749274	0		&			
ANR	4749467	PtrMemberAccess	curr_map -> perm		4749274	0					
ANR	4749468	Identifier	curr_map		4749274	0					
ANR	4749469	Identifier	perm		4749274	1					
ANR	4749470	Identifier	VM_PROT_READ		4749274	1					
ANR	4749471	PrimaryExpression	0		4749274	1					
ANR	4749472	CompoundStatement		44:44:1553:1553	4749274	1					
ANR	4749473	ExpressionStatement	"mach_vm_protect ( task_dbg , curr_map -> addr , curr_map -> size , FALSE , curr_map -> perm | VM_PROT_READ )"	783:3:20497:20597	4749274	0	True				
ANR	4749474	CallExpression	"mach_vm_protect ( task_dbg , curr_map -> addr , curr_map -> size , FALSE , curr_map -> perm | VM_PROT_READ )"		4749274	0					
ANR	4749475	Callee	mach_vm_protect		4749274	0					
ANR	4749476	Identifier	mach_vm_protect		4749274	0					
ANR	4749477	ArgumentList	task_dbg		4749274	1					
ANR	4749478	Argument	task_dbg		4749274	0					
ANR	4749479	Identifier	task_dbg		4749274	0					
ANR	4749480	Argument	curr_map -> addr		4749274	1					
ANR	4749481	PtrMemberAccess	curr_map -> addr		4749274	0					
ANR	4749482	Identifier	curr_map		4749274	0					
ANR	4749483	Identifier	addr		4749274	1					
ANR	4749484	Argument	curr_map -> size		4749274	2					
ANR	4749485	PtrMemberAccess	curr_map -> size		4749274	0					
ANR	4749486	Identifier	curr_map		4749274	0					
ANR	4749487	Identifier	size		4749274	1					
ANR	4749488	Argument	FALSE		4749274	3					
ANR	4749489	Identifier	FALSE		4749274	0					
ANR	4749490	Argument	curr_map -> perm | VM_PROT_READ		4749274	4					
ANR	4749491	InclusiveOrExpression	curr_map -> perm | VM_PROT_READ		4749274	0		|			
ANR	4749492	PtrMemberAccess	curr_map -> perm		4749274	0					
ANR	4749493	Identifier	curr_map		4749274	0					
ANR	4749494	Identifier	perm		4749274	1					
ANR	4749495	Identifier	VM_PROT_READ		4749274	1					
ANR	4749496	IfStatement	if ( ( maxprot & VM_PROT_READ ) == VM_PROT_READ && ( vbr . user_tag != VM_MEMORY_IOKIT ) )		4749274	34					
ANR	4749497	Condition	( maxprot & VM_PROT_READ ) == VM_PROT_READ && ( vbr . user_tag != VM_MEMORY_IOKIT )	789:6:20676:20755	4749274	0	True				
ANR	4749498	AndExpression	( maxprot & VM_PROT_READ ) == VM_PROT_READ && ( vbr . user_tag != VM_MEMORY_IOKIT )		4749274	0		&&			
ANR	4749499	EqualityExpression	( maxprot & VM_PROT_READ ) == VM_PROT_READ		4749274	0		==			
ANR	4749500	BitAndExpression	maxprot & VM_PROT_READ		4749274	0		&			
ANR	4749501	Identifier	maxprot		4749274	0					
ANR	4749502	Identifier	VM_PROT_READ		4749274	1					
ANR	4749503	Identifier	VM_PROT_READ		4749274	1					
ANR	4749504	EqualityExpression	vbr . user_tag != VM_MEMORY_IOKIT		4749274	1		!=			
ANR	4749505	MemberAccess	vbr . user_tag		4749274	0					
ANR	4749506	Identifier	vbr		4749274	0					
ANR	4749507	Identifier	user_tag		4749274	1					
ANR	4749508	Identifier	VM_MEMORY_IOKIT		4749274	1					
ANR	4749509	CompoundStatement		52:38:1819:1819	4749274	1					
ANR	4749510	IfStatement	if ( ( curr_map -> perm & VM_PROT_READ ) == VM_PROT_READ )		4749274	0					
ANR	4749511	Condition	( curr_map -> perm & VM_PROT_READ ) == VM_PROT_READ	792:6:20773:20819	4749274	0	True				
ANR	4749512	EqualityExpression	( curr_map -> perm & VM_PROT_READ ) == VM_PROT_READ		4749274	0		==			
ANR	4749513	BitAndExpression	curr_map -> perm & VM_PROT_READ		4749274	0		&			
ANR	4749514	PtrMemberAccess	curr_map -> perm		4749274	0					
ANR	4749515	Identifier	curr_map		4749274	0					
ANR	4749516	Identifier	perm		4749274	1					
ANR	4749517	Identifier	VM_PROT_READ		4749274	1					
ANR	4749518	Identifier	VM_PROT_READ		4749274	1					
ANR	4749519	CompoundStatement		56:3:1932:1960	4749274	1					
ANR	4749520	IdentifierDeclStatement	vm_map_size_t tmp_size = curr_map -> size ;	793:3:20827:20866	4749274	0	True				
ANR	4749521	IdentifierDecl	tmp_size = curr_map -> size		4749274	0					
ANR	4749522	IdentifierDeclType	vm_map_size_t		4749274	0					
ANR	4749523	Identifier	tmp_size		4749274	1					
ANR	4749524	AssignmentExpression	tmp_size = curr_map -> size		4749274	2		=			
ANR	4749525	Identifier	tmp_size		4749274	0					
ANR	4749526	PtrMemberAccess	curr_map -> size		4749274	1					
ANR	4749527	Identifier	curr_map		4749274	0					
ANR	4749528	Identifier	size		4749274	1					
ANR	4749529	IdentifierDeclStatement	off_t xfer_foffset = foffset ;	794:3:20871:20899	4749274	1	True				
ANR	4749530	IdentifierDecl	xfer_foffset = foffset		4749274	0					
ANR	4749531	IdentifierDeclType	off_t		4749274	0					
ANR	4749532	Identifier	xfer_foffset		4749274	1					
ANR	4749533	AssignmentExpression	xfer_foffset = foffset		4749274	2		=			
ANR	4749534	Identifier	foffset		4749274	0					
ANR	4749535	Identifier	foffset		4749274	1					
ANR	4749536	WhileStatement	while ( tmp_size > 0 )		4749274	2					
ANR	4749537	Condition	tmp_size > 0	796:10:20912:20923	4749274	0	True				
ANR	4749538	RelationalExpression	tmp_size > 0		4749274	0		>			
ANR	4749539	Identifier	tmp_size		4749274	0					
ANR	4749540	PrimaryExpression	0		4749274	1					
ANR	4749541	CompoundStatement		61:4:2064:2097	4749274	1					
ANR	4749542	IdentifierDeclStatement	vm_map_size_t xfer_size = tmp_size ;	797:4:20932:20966	4749274	0	True				
ANR	4749543	IdentifierDecl	xfer_size = tmp_size		4749274	0					
ANR	4749544	IdentifierDeclType	vm_map_size_t		4749274	0					
ANR	4749545	Identifier	xfer_size		4749274	1					
ANR	4749546	AssignmentExpression	xfer_size = tmp_size		4749274	2		=			
ANR	4749547	Identifier	tmp_size		4749274	0					
ANR	4749548	Identifier	tmp_size		4749274	1					
ANR	4749549	IdentifierDeclStatement	vm_offset_t local_address ;	798:4:20972:20997	4749274	1	True				
ANR	4749550	IdentifierDecl	local_address		4749274	0					
ANR	4749551	IdentifierDeclType	vm_offset_t		4749274	0					
ANR	4749552	Identifier	local_address		4749274	1					
ANR	4749553	IdentifierDeclStatement	mach_msg_type_number_t local_size ;	799:4:21003:21036	4749274	2	True				
ANR	4749554	IdentifierDecl	local_size		4749274	0					
ANR	4749555	IdentifierDeclType	mach_msg_type_number_t		4749274	0					
ANR	4749556	Identifier	local_size		4749274	1					
ANR	4749557	IfStatement	if ( xfer_size > INT_MAX )		4749274	3					
ANR	4749558	Condition	xfer_size > INT_MAX	801:8:21047:21065	4749274	0	True				
ANR	4749559	RelationalExpression	xfer_size > INT_MAX		4749274	0		>			
ANR	4749560	Identifier	xfer_size		4749274	0					
ANR	4749561	Identifier	INT_MAX		4749274	1					
ANR	4749562	ExpressionStatement	xfer_size = INT_MAX	801:29:21068:21087	4749274	1	True				
ANR	4749563	AssignmentExpression	xfer_size = INT_MAX		4749274	0		=			
ANR	4749564	Identifier	xfer_size		4749274	0					
ANR	4749565	Identifier	INT_MAX		4749274	1					
ANR	4749566	ExpressionStatement	"kr = mach_vm_read ( task_dbg , vmoffset , xfer_size , & local_address , & local_size )"	802:4:21093:21176	4749274	4	True				
ANR	4749567	AssignmentExpression	"kr = mach_vm_read ( task_dbg , vmoffset , xfer_size , & local_address , & local_size )"		4749274	0		=			
ANR	4749568	Identifier	kr		4749274	0					
ANR	4749569	CallExpression	"mach_vm_read ( task_dbg , vmoffset , xfer_size , & local_address , & local_size )"		4749274	1					
ANR	4749570	Callee	mach_vm_read		4749274	0					
ANR	4749571	Identifier	mach_vm_read		4749274	0					
ANR	4749572	ArgumentList	task_dbg		4749274	1					
ANR	4749573	Argument	task_dbg		4749274	0					
ANR	4749574	Identifier	task_dbg		4749274	0					
ANR	4749575	Argument	vmoffset		4749274	1					
ANR	4749576	Identifier	vmoffset		4749274	0					
ANR	4749577	Argument	xfer_size		4749274	2					
ANR	4749578	Identifier	xfer_size		4749274	0					
ANR	4749579	Argument	& local_address		4749274	3					
ANR	4749580	UnaryOperationExpression	& local_address		4749274	0					
ANR	4749581	UnaryOperator	&		4749274	0					
ANR	4749582	Identifier	local_address		4749274	1					
ANR	4749583	Argument	& local_size		4749274	4					
ANR	4749584	UnaryOperationExpression	& local_size		4749274	0					
ANR	4749585	UnaryOperator	&		4749274	0					
ANR	4749586	Identifier	local_size		4749274	1					
ANR	4749587	IfStatement	if ( ( kr != KERN_SUCCESS ) || ( xfer_size != local_size ) )		4749274	5					
ANR	4749588	Condition	( kr != KERN_SUCCESS ) || ( xfer_size != local_size )	805:8:21187:21235	4749274	0	True				
ANR	4749589	OrExpression	( kr != KERN_SUCCESS ) || ( xfer_size != local_size )		4749274	0		||			
ANR	4749590	EqualityExpression	kr != KERN_SUCCESS		4749274	0		!=			
ANR	4749591	Identifier	kr		4749274	0					
ANR	4749592	Identifier	KERN_SUCCESS		4749274	1					
ANR	4749593	EqualityExpression	xfer_size != local_size		4749274	1		!=			
ANR	4749594	Identifier	xfer_size		4749274	0					
ANR	4749595	Identifier	local_size		4749274	1					
ANR	4749596	CompoundStatement		67:59:2299:2299	4749274	1					
ANR	4749597	ExpressionStatement	"eprintf ( ""Failed to read target memory\\n"" )"	806:5:21245:21287	4749274	0	True				
ANR	4749598	CallExpression	"eprintf ( ""Failed to read target memory\\n"" )"		4749274	0					
ANR	4749599	Callee	eprintf		4749274	0					
ANR	4749600	Identifier	eprintf		4749274	0					
ANR	4749601	ArgumentList	"""Failed to read target memory\\n"""		4749274	1					
ANR	4749602	Argument	"""Failed to read target memory\\n"""		4749274	0					
ANR	4749603	PrimaryExpression	"""Failed to read target memory\\n"""		4749274	0					
ANR	4749604	ExpressionStatement	"eprintf ( ""[DEBUG] kr = %d\\n"" , kr )"	807:5:21324:21357	4749274	1	True				
ANR	4749605	CallExpression	"eprintf ( ""[DEBUG] kr = %d\\n"" , kr )"		4749274	0					
ANR	4749606	Callee	eprintf		4749274	0					
ANR	4749607	Identifier	eprintf		4749274	0					
ANR	4749608	ArgumentList	"""[DEBUG] kr = %d\\n"""		4749274	1					
ANR	4749609	Argument	"""[DEBUG] kr = %d\\n"""		4749274	0					
ANR	4749610	PrimaryExpression	"""[DEBUG] kr = %d\\n"""		4749274	0					
ANR	4749611	Argument	kr		4749274	1					
ANR	4749612	Identifier	kr		4749274	0					
ANR	4749613	ExpressionStatement	"eprintf ( ""[DEBUG] KERN_SUCCESS = %d\\n"" , KERN_SUCCESS )"	808:5:21364:21417	4749274	2	True				
ANR	4749614	CallExpression	"eprintf ( ""[DEBUG] KERN_SUCCESS = %d\\n"" , KERN_SUCCESS )"		4749274	0					
ANR	4749615	Callee	eprintf		4749274	0					
ANR	4749616	Identifier	eprintf		4749274	0					
ANR	4749617	ArgumentList	"""[DEBUG] KERN_SUCCESS = %d\\n"""		4749274	1					
ANR	4749618	Argument	"""[DEBUG] KERN_SUCCESS = %d\\n"""		4749274	0					
ANR	4749619	PrimaryExpression	"""[DEBUG] KERN_SUCCESS = %d\\n"""		4749274	0					
ANR	4749620	Argument	KERN_SUCCESS		4749274	1					
ANR	4749621	Identifier	KERN_SUCCESS		4749274	0					
ANR	4749622	Statement	eprintf	809:5:21424:21430	4749274	3	True				
ANR	4749623	Statement	(	809:13:21432:21432	4749274	4	True				
ANR	4749624	Statement	"""[DEBUG] xfer_size = %"""	809:14:21433:21455	4749274	5	True				
ANR	4749625	Statement	PFMT64d	809:37:21456:21462	4749274	6	True				
ANR	4749626	Statement	"""\\n"""	809:44:21463:21466	4749274	7	True				
ANR	4749627	Statement	","	809:48:21467:21467	4749274	8	True				
ANR	4749628	Statement	(	809:50:21469:21469	4749274	9	True				
ANR	4749629	Statement	ut64	809:51:21470:21473	4749274	10	True				
ANR	4749630	Statement	)	809:55:21474:21474	4749274	11	True				
ANR	4749631	Statement	xfer_size	809:56:21475:21483	4749274	12	True				
ANR	4749632	Statement	)	809:65:21484:21484	4749274	13	True				
ANR	4749633	ExpressionStatement		809:66:21485:21485	4749274	14	True				
ANR	4749634	ExpressionStatement	"eprintf ( ""[DEBUG] local_size = %d\\n"" , local_size )"	810:5:21492:21541	4749274	15	True				
ANR	4749635	CallExpression	"eprintf ( ""[DEBUG] local_size = %d\\n"" , local_size )"		4749274	0					
ANR	4749636	Callee	eprintf		4749274	0					
ANR	4749637	Identifier	eprintf		4749274	0					
ANR	4749638	ArgumentList	"""[DEBUG] local_size = %d\\n"""		4749274	1					
ANR	4749639	Argument	"""[DEBUG] local_size = %d\\n"""		4749274	0					
ANR	4749640	PrimaryExpression	"""[DEBUG] local_size = %d\\n"""		4749274	0					
ANR	4749641	Argument	local_size		4749274	1					
ANR	4749642	Identifier	local_size		4749274	0					
ANR	4749643	IfStatement	if ( kr > 1 )		4749274	16					
ANR	4749644	Condition	kr > 1	811:9:21552:21557	4749274	0	True				
ANR	4749645	RelationalExpression	kr > 1		4749274	0		>			
ANR	4749646	Identifier	kr		4749274	0					
ANR	4749647	PrimaryExpression	1		4749274	1					
ANR	4749648	ExpressionStatement	error = - 1	811:17:21560:21570	4749274	1	True				
ANR	4749649	AssignmentExpression	error = - 1		4749274	0		=			
ANR	4749650	Identifier	error		4749274	0					
ANR	4749651	UnaryOperationExpression	- 1		4749274	1					
ANR	4749652	UnaryOperator	-		4749274	0					
ANR	4749653	PrimaryExpression	1		4749274	1					
ANR	4749654	GotoStatement	goto cleanup ;	812:5:21625:21637	4749274	17	True				
ANR	4749655	Identifier	cleanup		4749274	0					
ANR	4749656	ExpressionStatement	"rc = r_buf_append_bytes ( buffer , ( const ut8 * ) local_address , xfer_size )"	815:4:21705:21775	4749274	6	True				
ANR	4749657	AssignmentExpression	"rc = r_buf_append_bytes ( buffer , ( const ut8 * ) local_address , xfer_size )"		4749274	0		=			
ANR	4749658	Identifier	rc		4749274	0					
ANR	4749659	CallExpression	"r_buf_append_bytes ( buffer , ( const ut8 * ) local_address , xfer_size )"		4749274	1					
ANR	4749660	Callee	r_buf_append_bytes		4749274	0					
ANR	4749661	Identifier	r_buf_append_bytes		4749274	0					
ANR	4749662	ArgumentList	buffer		4749274	1					
ANR	4749663	Argument	buffer		4749274	0					
ANR	4749664	Identifier	buffer		4749274	0					
ANR	4749665	Argument	( const ut8 * ) local_address		4749274	1					
ANR	4749666	CastExpression	( const ut8 * ) local_address		4749274	0					
ANR	4749667	CastTarget	const ut8 *		4749274	0					
ANR	4749668	Identifier	local_address		4749274	1					
ANR	4749669	Argument	xfer_size		4749274	2					
ANR	4749670	Identifier	xfer_size		4749274	0					
ANR	4749671	IfStatement	if ( ! rc )		4749274	7					
ANR	4749672	Condition	! rc	821:8:21951:21953	4749274	0	True				
ANR	4749673	UnaryOperationExpression	! rc		4749274	0					
ANR	4749674	UnaryOperator	!		4749274	0					
ANR	4749675	Identifier	rc		4749274	1					
ANR	4749676	CompoundStatement		83:13:3017:3017	4749274	1					
ANR	4749677	ExpressionStatement	error = errno	822:5:21963:21976	4749274	0	True				
ANR	4749678	AssignmentExpression	error = errno		4749274	0		=			
ANR	4749679	Identifier	error		4749274	0					
ANR	4749680	Identifier	errno		4749274	1					
ANR	4749681	ExpressionStatement	"eprintf ( ""Failed to write in the destination\\n"" )"	823:5:21983:22031	4749274	1	True				
ANR	4749682	CallExpression	"eprintf ( ""Failed to write in the destination\\n"" )"		4749274	0					
ANR	4749683	Callee	eprintf		4749274	0					
ANR	4749684	Identifier	eprintf		4749274	0					
ANR	4749685	ArgumentList	"""Failed to write in the destination\\n"""		4749274	1					
ANR	4749686	Argument	"""Failed to write in the destination\\n"""		4749274	0					
ANR	4749687	PrimaryExpression	"""Failed to write in the destination\\n"""		4749274	0					
ANR	4749688	GotoStatement	goto cleanup ;	824:5:22038:22050	4749274	2	True				
ANR	4749689	Identifier	cleanup		4749274	0					
ANR	4749690	ExpressionStatement	tmp_size -= xfer_size	827:4:22063:22084	4749274	8	True				
ANR	4749691	AssignmentExpression	tmp_size -= xfer_size		4749274	0		-=			
ANR	4749692	Identifier	tmp_size		4749274	0					
ANR	4749693	Identifier	xfer_size		4749274	1					
ANR	4749694	ExpressionStatement	xfer_foffset += xfer_size	828:4:22090:22115	4749274	9	True				
ANR	4749695	AssignmentExpression	xfer_foffset += xfer_size		4749274	0		+=			
ANR	4749696	Identifier	xfer_foffset		4749274	0					
ANR	4749697	Identifier	xfer_size		4749274	1					
ANR	4749698	ExpressionStatement	hoffset += segment_command_sz	832:2:22129:22158	4749274	1	True				
ANR	4749699	AssignmentExpression	hoffset += segment_command_sz		4749274	0		+=			
ANR	4749700	Identifier	hoffset		4749274	0					
ANR	4749701	Identifier	segment_command_sz		4749274	1					
ANR	4749702	ExpressionStatement	foffset += curr_map -> size	833:2:22162:22187	4749274	2	True				
ANR	4749703	AssignmentExpression	foffset += curr_map -> size		4749274	0		+=			
ANR	4749704	Identifier	foffset		4749274	0					
ANR	4749705	PtrMemberAccess	curr_map -> size		4749274	1					
ANR	4749706	Identifier	curr_map		4749274	0					
ANR	4749707	Identifier	size		4749274	1					
ANR	4749708	ExpressionStatement	vmoffset += curr_map -> size	834:2:22191:22217	4749274	3	True				
ANR	4749709	AssignmentExpression	vmoffset += curr_map -> size		4749274	0		+=			
ANR	4749710	Identifier	vmoffset		4749274	0					
ANR	4749711	PtrMemberAccess	curr_map -> size		4749274	1					
ANR	4749712	Identifier	curr_map		4749274	0					
ANR	4749713	Identifier	size		4749274	1					
ANR	4749714	Label	cleanup :	837:0:22223:22230	4749274	35	True				
ANR	4749715	Identifier	cleanup		4749274	0					
ANR	4749716	ExpressionStatement	* hoffset_out = hoffset	838:1:22233:22255	4749274	36	True				
ANR	4749717	AssignmentExpression	* hoffset_out = hoffset		4749274	0		=			
ANR	4749718	UnaryOperationExpression	* hoffset_out		4749274	0					
ANR	4749719	UnaryOperator	*		4749274	0					
ANR	4749720	Identifier	hoffset_out		4749274	1					
ANR	4749721	Identifier	hoffset		4749274	1					
ANR	4749722	ReturnStatement	return error ;	839:1:22258:22270	4749274	37	True				
ANR	4749723	Identifier	error		4749274	0					
ANR	4749724	Statement	static	842:0:22275:22280	4749274	41	True				
ANR	4749725	Statement	int	842:7:22282:22284	4749274	42	True				
ANR	4749726	Statement	xnu_get_thread_status	842:11:22286:22306	4749274	43	True				
ANR	4749727	Statement	(	842:33:22308:22308	4749274	44	True				
ANR	4749728	Statement	register	842:34:22309:22316	4749274	45	True				
ANR	4749729	Statement	thread_t	842:43:22318:22325	4749274	46	True				
ANR	4749730	Statement	thread	842:52:22327:22332	4749274	47	True				
ANR	4749731	Statement	","	842:58:22333:22333	4749274	48	True				
ANR	4749732	Statement	int	842:60:22335:22337	4749274	49	True				
ANR	4749733	Statement	flavor	842:64:22339:22344	4749274	50	True				
ANR	4749734	Statement	","	842:70:22345:22345	4749274	51	True				
ANR	4749735	Statement	thread_state_t	843:1:22349:22362	4749274	52	True				
ANR	4749736	Statement	tstate	843:16:22364:22369	4749274	53	True				
ANR	4749737	Statement	","	843:22:22370:22370	4749274	54	True				
ANR	4749738	Statement	mach_msg_type_number_t	843:24:22372:22393	4749274	55	True				
ANR	4749739	Statement	*	843:47:22395:22395	4749274	56	True				
ANR	4749740	Statement	count	843:48:22396:22400	4749274	57	True				
ANR	4749741	Statement	)	843:53:22401:22401	4749274	58	True				
ANR	4749742	CompoundStatement		105:55:3464:3464	4749274	59					
ANR	4749743	ReturnStatement	"return thread_get_state ( thread , flavor , tstate , count ) ;"	844:1:22406:22461	4749274	0	True				
ANR	4749744	CallExpression	"thread_get_state ( thread , flavor , tstate , count )"		4749274	0					
ANR	4749745	Callee	thread_get_state		4749274	0					
ANR	4749746	Identifier	thread_get_state		4749274	0					
ANR	4749747	ArgumentList	thread		4749274	1					
ANR	4749748	Argument	thread		4749274	0					
ANR	4749749	Identifier	thread		4749274	0					
ANR	4749750	Argument	flavor		4749274	1					
ANR	4749751	Identifier	flavor		4749274	0					
ANR	4749752	Argument	tstate		4749274	2					
ANR	4749753	Identifier	tstate		4749274	0					
ANR	4749754	Argument	count		4749274	3					
ANR	4749755	Identifier	count		4749274	0					
ANR	4749756	Statement	static	847:0:22466:22471	4749274	60	True				
ANR	4749757	Statement	void	847:7:22473:22476	4749274	61	True				
ANR	4749758	Statement	xnu_collect_thread_state	847:12:22478:22501	4749274	62	True				
ANR	4749759	Statement	(	847:37:22503:22503	4749274	63	True				
ANR	4749760	Statement	thread_t	847:38:22504:22511	4749274	64	True				
ANR	4749761	Statement	port	847:47:22513:22516	4749274	65	True				
ANR	4749762	Statement	","	847:51:22517:22517	4749274	66	True				
ANR	4749763	Statement	void	847:53:22519:22522	4749274	67	True				
ANR	4749764	Statement	*	847:58:22524:22524	4749274	68	True				
ANR	4749765	Statement	tirp	847:59:22525:22528	4749274	69	True				
ANR	4749766	Statement	)	847:63:22529:22529	4749274	70	True				
ANR	4749767	CompoundStatement		115:1:3730:3735	4749274	71					
ANR	4749768	IdentifierDeclStatement	coredump_thread_state_flavor_t * flavors ;	848:1:22534:22573	4749274	0	True				
ANR	4749769	IdentifierDecl	* flavors		4749274	0					
ANR	4749770	IdentifierDeclType	coredump_thread_state_flavor_t *		4749274	0					
ANR	4749771	Identifier	flavors		4749274	1					
ANR	4749772	IdentifierDeclStatement	tir_t * tir = ( tir_t * ) tirp ;	849:1:22576:22602	4749274	1	True				
ANR	4749773	IdentifierDecl	* tir = ( tir_t * ) tirp		4749274	0					
ANR	4749774	IdentifierDeclType	tir_t *		4749274	0					
ANR	4749775	Identifier	tir		4749274	1					
ANR	4749776	AssignmentExpression	* tir = ( tir_t * ) tirp		4749274	2		=			
ANR	4749777	Identifier	tir		4749274	0					
ANR	4749778	CastExpression	( tir_t * ) tirp		4749274	1					
ANR	4749779	CastTarget	tir_t *		4749274	0					
ANR	4749780	Identifier	tirp		4749274	1					
ANR	4749781	IdentifierDeclStatement	struct thread_command * tc ;	850:1:22605:22630	4749274	2	True				
ANR	4749782	IdentifierDecl	* tc		4749274	0					
ANR	4749783	IdentifierDeclType	struct thread_command *		4749274	0					
ANR	4749784	Identifier	tc		4749274	1					
ANR	4749785	IdentifierDeclStatement	vm_offset_t header ;	851:1:22633:22651	4749274	3	True				
ANR	4749786	IdentifierDecl	header		4749274	0					
ANR	4749787	IdentifierDeclType	vm_offset_t		4749274	0					
ANR	4749788	Identifier	header		4749274	1					
ANR	4749789	IdentifierDeclStatement	ut64 hoffset ;	852:1:22654:22666	4749274	4	True				
ANR	4749790	IdentifierDecl	hoffset		4749274	0					
ANR	4749791	IdentifierDeclType	ut64		4749274	0					
ANR	4749792	Identifier	hoffset		4749274	1					
ANR	4749793	IdentifierDeclStatement	int i ;	853:1:22669:22674	4749274	5	True				
ANR	4749794	IdentifierDecl	i		4749274	0					
ANR	4749795	IdentifierDeclType	int		4749274	0					
ANR	4749796	Identifier	i		4749274	1					
ANR	4749797	ExpressionStatement	header = tir -> header	855:1:22678:22698	4749274	6	True				
ANR	4749798	AssignmentExpression	header = tir -> header		4749274	0		=			
ANR	4749799	Identifier	header		4749274	0					
ANR	4749800	PtrMemberAccess	tir -> header		4749274	1					
ANR	4749801	Identifier	tir		4749274	0					
ANR	4749802	Identifier	header		4749274	1					
ANR	4749803	ExpressionStatement	hoffset = tir -> hoffset	856:1:22701:22723	4749274	7	True				
ANR	4749804	AssignmentExpression	hoffset = tir -> hoffset		4749274	0		=			
ANR	4749805	Identifier	hoffset		4749274	0					
ANR	4749806	PtrMemberAccess	tir -> hoffset		4749274	1					
ANR	4749807	Identifier	tir		4749274	0					
ANR	4749808	Identifier	hoffset		4749274	1					
ANR	4749809	ExpressionStatement	flavors = tir -> flavors	857:1:22726:22748	4749274	8	True				
ANR	4749810	AssignmentExpression	flavors = tir -> flavors		4749274	0		=			
ANR	4749811	Identifier	flavors		4749274	0					
ANR	4749812	PtrMemberAccess	tir -> flavors		4749274	1					
ANR	4749813	Identifier	tir		4749274	0					
ANR	4749814	Identifier	flavors		4749274	1					
ANR	4749815	Statement	eprintf	858:1:22751:22757	4749274	9	True				
ANR	4749816	Statement	(	858:9:22759:22759	4749274	10	True				
ANR	4749817	Statement	"""[DEBUG] tc location: 0x%"""	858:10:22760:22785	4749274	11	True				
ANR	4749818	Statement	PFMT64x	858:37:22787:22793	4749274	12	True				
ANR	4749819	Statement	"""\\n"""	858:45:22795:22798	4749274	13	True				
ANR	4749820	Statement	","	858:49:22799:22799	4749274	14	True				
ANR	4749821	Statement	hoffset	858:51:22801:22807	4749274	15	True				
ANR	4749822	Statement	)	858:58:22808:22808	4749274	16	True				
ANR	4749823	ExpressionStatement		858:59:22809:22809	4749274	17	True				
ANR	4749824	ExpressionStatement	tc = ( struct thread_command * ) ( header + hoffset )	860:1:22813:22861	4749274	18	True				
ANR	4749825	AssignmentExpression	tc = ( struct thread_command * ) ( header + hoffset )		4749274	0		=			
ANR	4749826	Identifier	tc		4749274	0					
ANR	4749827	CastExpression	( struct thread_command * ) ( header + hoffset )		4749274	1					
ANR	4749828	CastTarget	struct thread_command *		4749274	0					
ANR	4749829	AdditiveExpression	header + hoffset		4749274	1		+			
ANR	4749830	Identifier	header		4749274	0					
ANR	4749831	Identifier	hoffset		4749274	1					
ANR	4749832	ExpressionStatement	tc -> cmd = LC_THREAD	861:1:22864:22883	4749274	19	True				
ANR	4749833	AssignmentExpression	tc -> cmd = LC_THREAD		4749274	0		=			
ANR	4749834	PtrMemberAccess	tc -> cmd		4749274	0					
ANR	4749835	Identifier	tc		4749274	0					
ANR	4749836	Identifier	cmd		4749274	1					
ANR	4749837	Identifier	LC_THREAD		4749274	1					
ANR	4749838	ExpressionStatement	tc -> cmdsize = sizeof ( struct thread_command ) + tir -> tstate_size	862:1:22886:22949	4749274	20	True				
ANR	4749839	AssignmentExpression	tc -> cmdsize = sizeof ( struct thread_command ) + tir -> tstate_size		4749274	0		=			
ANR	4749840	PtrMemberAccess	tc -> cmdsize		4749274	0					
ANR	4749841	Identifier	tc		4749274	0					
ANR	4749842	Identifier	cmdsize		4749274	1					
ANR	4749843	AdditiveExpression	sizeof ( struct thread_command ) + tir -> tstate_size		4749274	1		+			
ANR	4749844	SizeofExpression	sizeof ( struct thread_command )		4749274	0					
ANR	4749845	Sizeof	sizeof		4749274	0					
ANR	4749846	SizeofOperand	struct thread_command		4749274	1					
ANR	4749847	PtrMemberAccess	tir -> tstate_size		4749274	1					
ANR	4749848	Identifier	tir		4749274	0					
ANR	4749849	Identifier	tstate_size		4749274	1					
ANR	4749850	ExpressionStatement	hoffset += sizeof ( struct thread_command )	863:1:22952:22993	4749274	21	True				
ANR	4749851	AssignmentExpression	hoffset += sizeof ( struct thread_command )		4749274	0		+=			
ANR	4749852	Identifier	hoffset		4749274	0					
ANR	4749853	SizeofExpression	sizeof ( struct thread_command )		4749274	1					
ANR	4749854	Sizeof	sizeof		4749274	0					
ANR	4749855	SizeofOperand	struct thread_command		4749274	1					
ANR	4749856	ForStatement	for ( i = 0 ; i < coredump_nflavors ; i ++ )		4749274	22					
ANR	4749857	ForInit	i = 0 ;	865:6:23002:23007	4749274	0	True				
ANR	4749858	AssignmentExpression	i = 0		4749274	0		=			
ANR	4749859	Identifier	i		4749274	0					
ANR	4749860	PrimaryExpression	0		4749274	1					
ANR	4749861	Condition	i < coredump_nflavors	865:13:23009:23029	4749274	1	True				
ANR	4749862	RelationalExpression	i < coredump_nflavors		4749274	0		<			
ANR	4749863	Identifier	i		4749274	0					
ANR	4749864	Identifier	coredump_nflavors		4749274	1					
ANR	4749865	PostIncDecOperationExpression	i ++	865:36:23032:23034	4749274	2	True				
ANR	4749866	Identifier	i		4749274	0					
ANR	4749867	IncDec	++		4749274	1					
ANR	4749868	CompoundStatement		127:41:4098:4098	4749274	3					
ANR	4749869	ExpressionStatement	"eprintf ( ""[DEBUG] %d/%d\\n"" , i + 1 , coredump_nflavors )"	866:2:23041:23092	4749274	0	True				
ANR	4749870	CallExpression	"eprintf ( ""[DEBUG] %d/%d\\n"" , i + 1 , coredump_nflavors )"		4749274	0					
ANR	4749871	Callee	eprintf		4749274	0					
ANR	4749872	Identifier	eprintf		4749274	0					
ANR	4749873	ArgumentList	"""[DEBUG] %d/%d\\n"""		4749274	1					
ANR	4749874	Argument	"""[DEBUG] %d/%d\\n"""		4749274	0					
ANR	4749875	PrimaryExpression	"""[DEBUG] %d/%d\\n"""		4749274	0					
ANR	4749876	Argument	i + 1		4749274	1					
ANR	4749877	AdditiveExpression	i + 1		4749274	0		+			
ANR	4749878	Identifier	i		4749274	0					
ANR	4749879	PrimaryExpression	1		4749274	1					
ANR	4749880	Argument	coredump_nflavors		4749274	2					
ANR	4749881	Identifier	coredump_nflavors		4749274	0					
ANR	4749882	ExpressionStatement	* ( coredump_thread_state_flavor_t * ) ( header + hoffset ) = flavors [ i ]	867:2:23096:23162	4749274	1	True				
ANR	4749883	AssignmentExpression	* ( coredump_thread_state_flavor_t * ) ( header + hoffset ) = flavors [ i ]		4749274	0		=			
ANR	4749884	UnaryOperationExpression	* ( coredump_thread_state_flavor_t * ) ( header + hoffset )		4749274	0					
ANR	4749885	UnaryOperator	*		4749274	0					
ANR	4749886	CastExpression	( coredump_thread_state_flavor_t * ) ( header + hoffset )		4749274	1					
ANR	4749887	CastTarget	coredump_thread_state_flavor_t *		4749274	0					
ANR	4749888	AdditiveExpression	header + hoffset		4749274	1		+			
ANR	4749889	Identifier	header		4749274	0					
ANR	4749890	Identifier	hoffset		4749274	1					
ANR	4749891	ArrayIndexing	flavors [ i ]		4749274	1					
ANR	4749892	Identifier	flavors		4749274	0					
ANR	4749893	Identifier	i		4749274	1					
ANR	4749894	ExpressionStatement	hoffset += sizeof ( coredump_thread_state_flavor_t )	868:2:23166:23216	4749274	2	True				
ANR	4749895	AssignmentExpression	hoffset += sizeof ( coredump_thread_state_flavor_t )		4749274	0		+=			
ANR	4749896	Identifier	hoffset		4749274	0					
ANR	4749897	SizeofExpression	sizeof ( coredump_thread_state_flavor_t )		4749274	1					
ANR	4749898	Sizeof	sizeof		4749274	0					
ANR	4749899	SizeofOperand	coredump_thread_state_flavor_t		4749274	1					
ANR	4749900	ExpressionStatement	"xnu_get_thread_status ( port , flavors [ i ] . flavor , ( thread_state_t ) ( header + hoffset ) , & flavors [ i ] . count )"	869:2:23220:23325	4749274	3	True				
ANR	4749901	CallExpression	"xnu_get_thread_status ( port , flavors [ i ] . flavor , ( thread_state_t ) ( header + hoffset ) , & flavors [ i ] . count )"		4749274	0					
ANR	4749902	Callee	xnu_get_thread_status		4749274	0					
ANR	4749903	Identifier	xnu_get_thread_status		4749274	0					
ANR	4749904	ArgumentList	port		4749274	1					
ANR	4749905	Argument	port		4749274	0					
ANR	4749906	Identifier	port		4749274	0					
ANR	4749907	Argument	flavors [ i ] . flavor		4749274	1					
ANR	4749908	MemberAccess	flavors [ i ] . flavor		4749274	0					
ANR	4749909	ArrayIndexing	flavors [ i ]		4749274	0					
ANR	4749910	Identifier	flavors		4749274	0					
ANR	4749911	Identifier	i		4749274	1					
ANR	4749912	Identifier	flavor		4749274	1					
ANR	4749913	Argument	( thread_state_t ) ( header + hoffset )		4749274	2					
ANR	4749914	CastExpression	( thread_state_t ) ( header + hoffset )		4749274	0					
ANR	4749915	CastTarget	thread_state_t		4749274	0					
ANR	4749916	AdditiveExpression	header + hoffset		4749274	1		+			
ANR	4749917	Identifier	header		4749274	0					
ANR	4749918	Identifier	hoffset		4749274	1					
ANR	4749919	Argument	& flavors [ i ] . count		4749274	3					
ANR	4749920	UnaryOperationExpression	& flavors [ i ] . count		4749274	0					
ANR	4749921	UnaryOperator	&		4749274	0					
ANR	4749922	MemberAccess	flavors [ i ] . count		4749274	1					
ANR	4749923	ArrayIndexing	flavors [ i ]		4749274	0					
ANR	4749924	Identifier	flavors		4749274	0					
ANR	4749925	Identifier	i		4749274	1					
ANR	4749926	Identifier	count		4749274	1					
ANR	4749927	ExpressionStatement	hoffset += flavors [ i ] . count * sizeof ( int )	871:2:23329:23371	4749274	4	True				
ANR	4749928	AssignmentExpression	hoffset += flavors [ i ] . count * sizeof ( int )		4749274	0		+=			
ANR	4749929	Identifier	hoffset		4749274	0					
ANR	4749930	MultiplicativeExpression	flavors [ i ] . count * sizeof ( int )		4749274	1		*			
ANR	4749931	MemberAccess	flavors [ i ] . count		4749274	0					
ANR	4749932	ArrayIndexing	flavors [ i ]		4749274	0					
ANR	4749933	Identifier	flavors		4749274	0					
ANR	4749934	Identifier	i		4749274	1					
ANR	4749935	Identifier	count		4749274	1					
ANR	4749936	SizeofExpression	sizeof ( int )		4749274	1					
ANR	4749937	Sizeof	sizeof		4749274	0					
ANR	4749938	SizeofOperand	int		4749274	1					
ANR	4749939	ExpressionStatement	tir -> hoffset = hoffset	873:1:23377:23399	4749274	23	True				
ANR	4749940	AssignmentExpression	tir -> hoffset = hoffset		4749274	0		=			
ANR	4749941	PtrMemberAccess	tir -> hoffset		4749274	0					
ANR	4749942	Identifier	tir		4749274	0					
ANR	4749943	Identifier	hoffset		4749274	1					
ANR	4749944	Identifier	hoffset		4749274	1					
ANR	4749945	Statement	define	876:1:23405:23410	4749274	72	True				
ANR	4749946	Statement	CORE_ALL_SECT	876:8:23412:23424	4749274	73	True				
ANR	4749947	Statement	0	876:22:23426:23426	4749274	74	True				
ANR	4749948	Statement	include	878:1:23430:23436	4749274	75	True				
ANR	4749949	Statement	<	878:9:23438:23438	4749274	76	True				
ANR	4749950	Statement	sys	878:10:23439:23441	4749274	77	True				
ANR	4749951	Statement	/	878:13:23442:23442	4749274	78	True				
ANR	4749952	Statement	sysctl	878:14:23443:23448	4749274	79	True				
ANR	4749953	Statement	.	878:20:23449:23449	4749274	80	True				
ANR	4749954	Statement	h	878:21:23450:23450	4749274	81	True				
ANR	4749955	Statement	>	878:22:23451:23451	4749274	82	True				
ANR	4749956	Statement	static	880:0:23454:23459	4749274	83	True				
ANR	4749957	Statement	uid_t	880:7:23461:23465	4749274	84	True				
ANR	4749958	Statement	uidFromPid	880:13:23467:23476	4749274	85	True				
ANR	4749959	Statement	(	880:23:23477:23477	4749274	86	True				
ANR	4749960	Statement	pid_t	880:24:23478:23482	4749274	87	True				
ANR	4749961	Statement	pid	880:30:23484:23486	4749274	88	True				
ANR	4749962	Statement	)	880:33:23487:23487	4749274	89	True				
ANR	4749963	CompoundStatement		151:1:4826:4905	4749274	90					
ANR	4749964	IdentifierDeclStatement	uid_t uid = - 1 ;	881:1:23492:23506	4749274	0	True				
ANR	4749965	IdentifierDecl	uid = - 1		4749274	0					
ANR	4749966	IdentifierDeclType	uid_t		4749274	0					
ANR	4749967	Identifier	uid		4749274	1					
ANR	4749968	AssignmentExpression	uid = - 1		4749274	2		=			
ANR	4749969	Identifier	uid		4749274	0					
ANR	4749970	UnaryOperationExpression	- 1		4749274	1					
ANR	4749971	UnaryOperator	-		4749274	0					
ANR	4749972	PrimaryExpression	1		4749274	1					
ANR	4749973	IdentifierDeclStatement	struct kinfo_proc process ;	883:1:23510:23535	4749274	1	True				
ANR	4749974	IdentifierDecl	process		4749274	0					
ANR	4749975	IdentifierDeclType	struct kinfo_proc		4749274	0					
ANR	4749976	Identifier	process		4749274	1					
ANR	4749977	IdentifierDeclStatement	size_t procBufferSize = sizeof ( process ) ;	884:1:23538:23578	4749274	2	True				
ANR	4749978	IdentifierDecl	procBufferSize = sizeof ( process )		4749274	0					
ANR	4749979	IdentifierDeclType	size_t		4749274	0					
ANR	4749980	Identifier	procBufferSize		4749274	1					
ANR	4749981	AssignmentExpression	procBufferSize = sizeof ( process )		4749274	2		=			
ANR	4749982	Identifier	procBufferSize		4749274	0					
ANR	4749983	SizeofExpression	sizeof ( process )		4749274	1					
ANR	4749984	Sizeof	sizeof		4749274	0					
ANR	4749985	SizeofOperand	process		4749274	1					
ANR	4749986	IdentifierDeclStatement	"int path [ ] = { CTL_KERN , KERN_PROC , KERN_PROC_PID , pid } ;"	887:1:23653:23707	4749274	3	True				
ANR	4749987	IdentifierDecl	"path [ ] = { CTL_KERN , KERN_PROC , KERN_PROC_PID , pid }"		4749274	0					
ANR	4749988	IdentifierDeclType	int [ ]		4749274	0					
ANR	4749989	Identifier	path		4749274	1					
ANR	4749990	AssignmentExpression	"path [ ] = { CTL_KERN , KERN_PROC , KERN_PROC_PID , pid }"		4749274	2		=			
ANR	4749991	Identifier	path		4749274	0					
ANR	4749992	InitializerList	CTL_KERN		4749274	1					
ANR	4749993	Identifier	CTL_KERN		4749274	0					
ANR	4749994	Identifier	KERN_PROC		4749274	1					
ANR	4749995	Identifier	KERN_PROC_PID		4749274	2					
ANR	4749996	Identifier	pid		4749274	3					
ANR	4749997	IdentifierDeclStatement	const int pathLenth = ( sizeof ( path ) / sizeof ( int ) ) ;	888:1:23710:23762	4749274	4	True				
ANR	4749998	IdentifierDecl	pathLenth = ( sizeof ( path ) / sizeof ( int ) )		4749274	0					
ANR	4749999	IdentifierDeclType	const int		4749274	0					
ANR	4750000	Identifier	pathLenth		4749274	1					
ANR	4750001	AssignmentExpression	pathLenth = ( sizeof ( path ) / sizeof ( int ) )		4749274	2		=			
ANR	4750002	Identifier	pathLenth		4749274	0					
ANR	4750003	MultiplicativeExpression	sizeof ( path ) / sizeof ( int )		4749274	1		/			
ANR	4750004	SizeofExpression	sizeof ( path )		4749274	0					
ANR	4750005	Sizeof	sizeof		4749274	0					
ANR	4750006	SizeofOperand	path		4749274	1					
ANR	4750007	SizeofExpression	sizeof ( int )		4749274	1					
ANR	4750008	Sizeof	sizeof		4749274	0					
ANR	4750009	SizeofOperand	int		4749274	1					
ANR	4750010	IdentifierDeclStatement	"int sysctlResult = sysctl ( path , pathLenth , & process , & procBufferSize , NULL , 0 ) ;"	889:1:23765:23844	4749274	5	True				
ANR	4750011	IdentifierDecl	"sysctlResult = sysctl ( path , pathLenth , & process , & procBufferSize , NULL , 0 )"		4749274	0					
ANR	4750012	IdentifierDeclType	int		4749274	0					
ANR	4750013	Identifier	sysctlResult		4749274	1					
ANR	4750014	AssignmentExpression	"sysctlResult = sysctl ( path , pathLenth , & process , & procBufferSize , NULL , 0 )"		4749274	2		=			
ANR	4750015	Identifier	sysctlResult		4749274	0					
ANR	4750016	CallExpression	"sysctl ( path , pathLenth , & process , & procBufferSize , NULL , 0 )"		4749274	1					
ANR	4750017	Callee	sysctl		4749274	0					
ANR	4750018	Identifier	sysctl		4749274	0					
ANR	4750019	ArgumentList	path		4749274	1					
ANR	4750020	Argument	path		4749274	0					
ANR	4750021	Identifier	path		4749274	0					
ANR	4750022	Argument	pathLenth		4749274	1					
ANR	4750023	Identifier	pathLenth		4749274	0					
ANR	4750024	Argument	& process		4749274	2					
ANR	4750025	UnaryOperationExpression	& process		4749274	0					
ANR	4750026	UnaryOperator	&		4749274	0					
ANR	4750027	Identifier	process		4749274	1					
ANR	4750028	Argument	& procBufferSize		4749274	3					
ANR	4750029	UnaryOperationExpression	& procBufferSize		4749274	0					
ANR	4750030	UnaryOperator	&		4749274	0					
ANR	4750031	Identifier	procBufferSize		4749274	1					
ANR	4750032	Argument	NULL		4749274	4					
ANR	4750033	Identifier	NULL		4749274	0					
ANR	4750034	Argument	0		4749274	5					
ANR	4750035	PrimaryExpression	0		4749274	0					
ANR	4750036	IfStatement	if ( ( sysctlResult == 0 ) && ( procBufferSize != 0 ) )		4749274	6					
ANR	4750037	Condition	( sysctlResult == 0 ) && ( procBufferSize != 0 )	891:5:23921:23964	4749274	0	True				
ANR	4750038	AndExpression	( sysctlResult == 0 ) && ( procBufferSize != 0 )		4749274	0		&&			
ANR	4750039	EqualityExpression	sysctlResult == 0		4749274	0		==			
ANR	4750040	Identifier	sysctlResult		4749274	0					
ANR	4750041	PrimaryExpression	0		4749274	1					
ANR	4750042	EqualityExpression	procBufferSize != 0		4749274	1		!=			
ANR	4750043	Identifier	procBufferSize		4749274	0					
ANR	4750044	PrimaryExpression	0		4749274	1					
ANR	4750045	CompoundStatement		153:51:5028:5028	4749274	1					
ANR	4750046	ExpressionStatement	uid = process . kp_eproc . e_ucred . cr_uid	892:2:23971:24008	4749274	0	True				
ANR	4750047	AssignmentExpression	uid = process . kp_eproc . e_ucred . cr_uid		4749274	0		=			
ANR	4750048	Identifier	uid		4749274	0					
ANR	4750049	MemberAccess	process . kp_eproc . e_ucred . cr_uid		4749274	1					
ANR	4750050	MemberAccess	process . kp_eproc . e_ucred		4749274	0					
ANR	4750051	MemberAccess	process . kp_eproc		4749274	0					
ANR	4750052	Identifier	process		4749274	0					
ANR	4750053	Identifier	kp_eproc		4749274	1					
ANR	4750054	Identifier	e_ucred		4749274	1					
ANR	4750055	Identifier	cr_uid		4749274	1					
ANR	4750056	ReturnStatement	return uid ;	894:1:24014:24024	4749274	7	True				
ANR	4750057	Identifier	uid		4749274	0					
ANR	4750058	Statement	bool	897:0:24029:24032	4749274	91	True				
ANR	4750059	Statement	xnu_generate_corefile	897:5:24034:24054	4749274	92	True				
ANR	4750060	Statement	(	897:27:24056:24056	4749274	93	True				
ANR	4750061	Statement	RDebug	897:28:24057:24062	4749274	94	True				
ANR	4750062	Statement	*	897:35:24064:24064	4749274	95	True				
ANR	4750063	Statement	dbg	897:36:24065:24067	4749274	96	True				
ANR	4750064	Statement	","	897:39:24068:24068	4749274	97	True				
ANR	4750065	Statement	RBuffer	897:41:24070:24076	4749274	98	True				
ANR	4750066	Statement	*	897:49:24078:24078	4749274	99	True				
ANR	4750067	Statement	dest	897:50:24079:24082	4749274	100	True				
ANR	4750068	Statement	)	897:54:24083:24083	4749274	101	True				
ANR	4750069	CompoundStatement		178:1:5571:5580	4749274	102					
ANR	4750070	IdentifierDeclStatement	"int error = 0 , i ;"	898:1:24088:24104	4749274	0	True				
ANR	4750071	IdentifierDecl	error = 0		4749274	0					
ANR	4750072	IdentifierDeclType	int		4749274	0					
ANR	4750073	Identifier	error		4749274	1					
ANR	4750074	AssignmentExpression	error = 0		4749274	2		=			
ANR	4750075	Identifier	error		4749274	0					
ANR	4750076	PrimaryExpression	0		4749274	1					
ANR	4750077	IdentifierDecl	i		4749274	1					
ANR	4750078	IdentifierDeclType	int		4749274	0					
ANR	4750079	Identifier	i		4749274	1					
ANR	4750080	IdentifierDeclStatement	int tstate_size ;	899:1:24107:24122	4749274	1	True				
ANR	4750081	IdentifierDecl	tstate_size		4749274	0					
ANR	4750082	IdentifierDeclType	int		4749274	0					
ANR	4750083	Identifier	tstate_size		4749274	1					
ANR	4750084	IdentifierDeclStatement	int segment_count ;	900:1:24125:24142	4749274	2	True				
ANR	4750085	IdentifierDecl	segment_count		4749274	0					
ANR	4750086	IdentifierDeclType	int		4749274	0					
ANR	4750087	Identifier	segment_count		4749274	1					
ANR	4750088	IdentifierDeclStatement	int command_size ;	901:1:24145:24161	4749274	3	True				
ANR	4750089	IdentifierDecl	command_size		4749274	0					
ANR	4750090	IdentifierDeclType	int		4749274	0					
ANR	4750091	Identifier	command_size		4749274	1					
ANR	4750092	IdentifierDeclStatement	int header_size ;	902:1:24164:24179	4749274	4	True				
ANR	4750093	IdentifierDecl	header_size		4749274	0					
ANR	4750094	IdentifierDeclType	int		4749274	0					
ANR	4750095	Identifier	header_size		4749274	1					
ANR	4750096	IdentifierDeclStatement	size_t mach_header_sz ;	903:1:24182:24203	4749274	5	True				
ANR	4750097	IdentifierDecl	mach_header_sz		4749274	0					
ANR	4750098	IdentifierDeclType	size_t		4749274	0					
ANR	4750099	Identifier	mach_header_sz		4749274	1					
ANR	4750100	IdentifierDeclStatement	size_t segment_command_sz ;	904:1:24206:24231	4749274	6	True				
ANR	4750101	IdentifierDecl	segment_command_sz		4749274	0					
ANR	4750102	IdentifierDeclType	size_t		4749274	0					
ANR	4750103	Identifier	segment_command_sz		4749274	1					
ANR	4750104	IdentifierDeclStatement	size_t padding_sz ;	905:1:24234:24251	4749274	7	True				
ANR	4750105	IdentifierDecl	padding_sz		4749274	0					
ANR	4750106	IdentifierDeclType	size_t		4749274	0					
ANR	4750107	Identifier	padding_sz		4749274	1					
ANR	4750108	IdentifierDeclStatement	int hoffset ;	906:1:24254:24265	4749274	8	True				
ANR	4750109	IdentifierDecl	hoffset		4749274	0					
ANR	4750110	IdentifierDeclType	int		4749274	0					
ANR	4750111	Identifier	hoffset		4749274	1					
ANR	4750112	IdentifierDeclStatement	RBuffer * mem_maps_buffer ;	908:1:24269:24293	4749274	9	True				
ANR	4750113	IdentifierDecl	* mem_maps_buffer		4749274	0					
ANR	4750114	IdentifierDeclType	RBuffer *		4749274	0					
ANR	4750115	Identifier	mem_maps_buffer		4749274	1					
ANR	4750116	IdentifierDeclStatement	vm_offset_t header ;	909:1:24296:24314	4749274	10	True				
ANR	4750117	IdentifierDecl	header		4749274	0					
ANR	4750118	IdentifierDeclType	vm_offset_t		4749274	0					
ANR	4750119	Identifier	header		4749274	1					
ANR	4750120	IdentifierDeclStatement	ut8 * padding = NULL ;	910:1:24317:24336	4749274	11	True				
ANR	4750121	IdentifierDecl	* padding = NULL		4749274	0					
ANR	4750122	IdentifierDeclType	ut8 *		4749274	0					
ANR	4750123	Identifier	padding		4749274	1					
ANR	4750124	AssignmentExpression	* padding = NULL		4749274	2		=			
ANR	4750125	Identifier	NULL		4749274	0					
ANR	4750126	Identifier	NULL		4749274	1					
ANR	4750127	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	911:1:24339:24362	4749274	12	True				
ANR	4750128	IdentifierDecl	* iter		4749274	0					
ANR	4750129	IdentifierDeclType	RListIter *		4749274	0					
ANR	4750130	Identifier	iter		4749274	1					
ANR	4750131	IdentifierDecl	* iter2		4749274	1					
ANR	4750132	IdentifierDeclType	RListIter *		4749274	0					
ANR	4750133	Identifier	iter2		4749274	1					
ANR	4750134	IdentifierDeclStatement	RList * threads_list ;	912:1:24365:24384	4749274	13	True				
ANR	4750135	IdentifierDecl	* threads_list		4749274	0					
ANR	4750136	IdentifierDeclType	RList *		4749274	0					
ANR	4750137	Identifier	threads_list		4749274	1					
ANR	4750138	IdentifierDeclStatement	xnu_thread_t * thread ;	913:1:24387:24407	4749274	14	True				
ANR	4750139	IdentifierDecl	* thread		4749274	0					
ANR	4750140	IdentifierDeclType	xnu_thread_t *		4749274	0					
ANR	4750141	Identifier	thread		4749274	1					
ANR	4750142	IdentifierDeclStatement	task_t task = pid_to_task ( dbg -> pid ) ;	914:1:24410:24446	4749274	15	True				
ANR	4750143	IdentifierDecl	task = pid_to_task ( dbg -> pid )		4749274	0					
ANR	4750144	IdentifierDeclType	task_t		4749274	0					
ANR	4750145	Identifier	task		4749274	1					
ANR	4750146	AssignmentExpression	task = pid_to_task ( dbg -> pid )		4749274	2		=			
ANR	4750147	Identifier	task		4749274	0					
ANR	4750148	CallExpression	pid_to_task ( dbg -> pid )		4749274	1					
ANR	4750149	Callee	pid_to_task		4749274	0					
ANR	4750150	Identifier	pid_to_task		4749274	0					
ANR	4750151	ArgumentList	dbg -> pid		4749274	1					
ANR	4750152	Argument	dbg -> pid		4749274	0					
ANR	4750153	PtrMemberAccess	dbg -> pid		4749274	0					
ANR	4750154	Identifier	dbg		4749274	0					
ANR	4750155	Identifier	pid		4749274	1					
ANR	4750156	IdentifierDeclStatement	coredump_thread_state_flavor_t flavors [ MAX_TSTATE_FLAVORS ] ;	915:1:24449:24507	4749274	16	True				
ANR	4750157	IdentifierDecl	flavors [ MAX_TSTATE_FLAVORS ]		4749274	0					
ANR	4750158	IdentifierDeclType	coredump_thread_state_flavor_t [ MAX_TSTATE_FLAVORS ]		4749274	0					
ANR	4750159	Identifier	flavors		4749274	1					
ANR	4750160	Identifier	MAX_TSTATE_FLAVORS		4749274	2					
ANR	4750161	IdentifierDeclStatement	tir_t tir ;	916:1:24510:24519	4749274	17	True				
ANR	4750162	IdentifierDecl	tir		4749274	0					
ANR	4750163	IdentifierDeclType	tir_t		4749274	0					
ANR	4750164	Identifier	tir		4749274	1					
ANR	4750165	ExpressionStatement	mem_maps_buffer = r_buf_new ( )	918:1:24523:24553	4749274	18	True				
ANR	4750166	AssignmentExpression	mem_maps_buffer = r_buf_new ( )		4749274	0		=			
ANR	4750167	Identifier	mem_maps_buffer		4749274	0					
ANR	4750168	CallExpression	r_buf_new ( )		4749274	1					
ANR	4750169	Callee	r_buf_new		4749274	0					
ANR	4750170	Identifier	r_buf_new		4749274	0					
ANR	4750171	ArgumentList			4749274	1					
ANR	4750172	ExpressionStatement	"get_mach_header_sizes ( & mach_header_sz , & segment_command_sz )"	920:1:24557:24617	4749274	19	True				
ANR	4750173	CallExpression	"get_mach_header_sizes ( & mach_header_sz , & segment_command_sz )"		4749274	0					
ANR	4750174	Callee	get_mach_header_sizes		4749274	0					
ANR	4750175	Identifier	get_mach_header_sizes		4749274	0					
ANR	4750176	ArgumentList	& mach_header_sz		4749274	1					
ANR	4750177	Argument	& mach_header_sz		4749274	0					
ANR	4750178	UnaryOperationExpression	& mach_header_sz		4749274	0					
ANR	4750179	UnaryOperator	&		4749274	0					
ANR	4750180	Identifier	mach_header_sz		4749274	1					
ANR	4750181	Argument	& segment_command_sz		4749274	1					
ANR	4750182	UnaryOperationExpression	& segment_command_sz		4749274	0					
ANR	4750183	UnaryOperator	&		4749274	0					
ANR	4750184	Identifier	segment_command_sz		4749274	1					
ANR	4750185	ExpressionStatement	( void ) task_suspend ( task )	921:1:24620:24644	4749274	20	True				
ANR	4750186	CastExpression	( void ) task_suspend ( task )		4749274	0					
ANR	4750187	CastTarget	void		4749274	0					
ANR	4750188	CallExpression	task_suspend ( task )		4749274	1					
ANR	4750189	Callee	task_suspend		4749274	0					
ANR	4750190	Identifier	task_suspend		4749274	0					
ANR	4750191	ArgumentList	task		4749274	1					
ANR	4750192	Argument	task		4749274	0					
ANR	4750193	Identifier	task		4749274	0					
ANR	4750194	ExpressionStatement	"threads_list = xnu_thread_list ( dbg , dbg -> pid , r_list_new ( ) )"	922:1:24647:24708	4749274	21	True				
ANR	4750195	AssignmentExpression	"threads_list = xnu_thread_list ( dbg , dbg -> pid , r_list_new ( ) )"		4749274	0		=			
ANR	4750196	Identifier	threads_list		4749274	0					
ANR	4750197	CallExpression	"xnu_thread_list ( dbg , dbg -> pid , r_list_new ( ) )"		4749274	1					
ANR	4750198	Callee	xnu_thread_list		4749274	0					
ANR	4750199	Identifier	xnu_thread_list		4749274	0					
ANR	4750200	ArgumentList	dbg		4749274	1					
ANR	4750201	Argument	dbg		4749274	0					
ANR	4750202	Identifier	dbg		4749274	0					
ANR	4750203	Argument	dbg -> pid		4749274	1					
ANR	4750204	PtrMemberAccess	dbg -> pid		4749274	0					
ANR	4750205	Identifier	dbg		4749274	0					
ANR	4750206	Identifier	pid		4749274	1					
ANR	4750207	Argument	r_list_new ( )		4749274	2					
ANR	4750208	CallExpression	r_list_new ( )		4749274	0					
ANR	4750209	Callee	r_list_new		4749274	0					
ANR	4750210	Identifier	r_list_new		4749274	0					
ANR	4750211	ArgumentList			4749274	1					
ANR	4750212	ExpressionStatement	xnu_dealloc_threads ( threads_list )	923:1:24711:24745	4749274	22	True				
ANR	4750213	CallExpression	xnu_dealloc_threads ( threads_list )		4749274	0					
ANR	4750214	Callee	xnu_dealloc_threads		4749274	0					
ANR	4750215	Identifier	xnu_dealloc_threads		4749274	0					
ANR	4750216	ArgumentList	threads_list		4749274	1					
ANR	4750217	Argument	threads_list		4749274	0					
ANR	4750218	Identifier	threads_list		4749274	0					
ANR	4750219	ExpressionStatement	segment_count = xnu_get_vmmap_entries_for_pid ( dbg -> pid )	925:1:24749:24805	4749274	23	True				
ANR	4750220	AssignmentExpression	segment_count = xnu_get_vmmap_entries_for_pid ( dbg -> pid )		4749274	0		=			
ANR	4750221	Identifier	segment_count		4749274	0					
ANR	4750222	CallExpression	xnu_get_vmmap_entries_for_pid ( dbg -> pid )		4749274	1					
ANR	4750223	Callee	xnu_get_vmmap_entries_for_pid		4749274	0					
ANR	4750224	Identifier	xnu_get_vmmap_entries_for_pid		4749274	0					
ANR	4750225	ArgumentList	dbg -> pid		4749274	1					
ANR	4750226	Argument	dbg -> pid		4749274	0					
ANR	4750227	PtrMemberAccess	dbg -> pid		4749274	0					
ANR	4750228	Identifier	dbg		4749274	0					
ANR	4750229	Identifier	pid		4749274	1					
ANR	4750230	ExpressionStatement	"memcpy ( thread_flavor_array , & flavors , sizeof ( thread_flavor_array ) )"	927:1:24809:24877	4749274	24	True				
ANR	4750231	CallExpression	"memcpy ( thread_flavor_array , & flavors , sizeof ( thread_flavor_array ) )"		4749274	0					
ANR	4750232	Callee	memcpy		4749274	0					
ANR	4750233	Identifier	memcpy		4749274	0					
ANR	4750234	ArgumentList	thread_flavor_array		4749274	1					
ANR	4750235	Argument	thread_flavor_array		4749274	0					
ANR	4750236	Identifier	thread_flavor_array		4749274	0					
ANR	4750237	Argument	& flavors		4749274	1					
ANR	4750238	UnaryOperationExpression	& flavors		4749274	0					
ANR	4750239	UnaryOperator	&		4749274	0					
ANR	4750240	Identifier	flavors		4749274	1					
ANR	4750241	Argument	sizeof ( thread_flavor_array )		4749274	2					
ANR	4750242	SizeofExpression	sizeof ( thread_flavor_array )		4749274	0					
ANR	4750243	Sizeof	sizeof		4749274	0					
ANR	4750244	SizeofOperand	thread_flavor_array		4749274	1					
ANR	4750245	ExpressionStatement	tstate_size = 0	928:1:24880:24895	4749274	25	True				
ANR	4750246	AssignmentExpression	tstate_size = 0		4749274	0		=			
ANR	4750247	Identifier	tstate_size		4749274	0					
ANR	4750248	PrimaryExpression	0		4749274	1					
ANR	4750249	ForStatement	for ( i = 0 ; i < coredump_nflavors ; i ++ )		4749274	26					
ANR	4750250	ForInit	i = 0 ;	930:6:24904:24909	4749274	0	True				
ANR	4750251	AssignmentExpression	i = 0		4749274	0		=			
ANR	4750252	Identifier	i		4749274	0					
ANR	4750253	PrimaryExpression	0		4749274	1					
ANR	4750254	Condition	i < coredump_nflavors	930:13:24911:24931	4749274	1	True				
ANR	4750255	RelationalExpression	i < coredump_nflavors		4749274	0		<			
ANR	4750256	Identifier	i		4749274	0					
ANR	4750257	Identifier	coredump_nflavors		4749274	1					
ANR	4750258	PostIncDecOperationExpression	i ++	930:36:24934:24936	4749274	2	True				
ANR	4750259	Identifier	i		4749274	0					
ANR	4750260	IncDec	++		4749274	1					
ANR	4750261	CompoundStatement		192:41:6000:6000	4749274	3					
ANR	4750262	ExpressionStatement	tstate_size += sizeof ( coredump_thread_state_flavor_t ) + ( flavors [ i ] . count * sizeof ( int ) )	931:2:24943:25035	4749274	0	True				
ANR	4750263	AssignmentExpression	tstate_size += sizeof ( coredump_thread_state_flavor_t ) + ( flavors [ i ] . count * sizeof ( int ) )		4749274	0		+=			
ANR	4750264	Identifier	tstate_size		4749274	0					
ANR	4750265	AdditiveExpression	sizeof ( coredump_thread_state_flavor_t ) + ( flavors [ i ] . count * sizeof ( int ) )		4749274	1		+			
ANR	4750266	SizeofExpression	sizeof ( coredump_thread_state_flavor_t )		4749274	0					
ANR	4750267	Sizeof	sizeof		4749274	0					
ANR	4750268	SizeofOperand	coredump_thread_state_flavor_t		4749274	1					
ANR	4750269	MultiplicativeExpression	flavors [ i ] . count * sizeof ( int )		4749274	1		*			
ANR	4750270	MemberAccess	flavors [ i ] . count		4749274	0					
ANR	4750271	ArrayIndexing	flavors [ i ]		4749274	0					
ANR	4750272	Identifier	flavors		4749274	0					
ANR	4750273	Identifier	i		4749274	1					
ANR	4750274	Identifier	count		4749274	1					
ANR	4750275	SizeofExpression	sizeof ( int )		4749274	1					
ANR	4750276	Sizeof	sizeof		4749274	0					
ANR	4750277	SizeofOperand	int		4749274	1					
ANR	4750278	ExpressionStatement	"command_size = COMMAND_SIZE ( segment_count , segment_command_sz , r_list_length ( threads_list ) , tstate_size )"	935:1:25042:25150	4749274	27	True				
ANR	4750279	AssignmentExpression	"command_size = COMMAND_SIZE ( segment_count , segment_command_sz , r_list_length ( threads_list ) , tstate_size )"		4749274	0		=			
ANR	4750280	Identifier	command_size		4749274	0					
ANR	4750281	CallExpression	"COMMAND_SIZE ( segment_count , segment_command_sz , r_list_length ( threads_list ) , tstate_size )"		4749274	1					
ANR	4750282	Callee	COMMAND_SIZE		4749274	0					
ANR	4750283	Identifier	COMMAND_SIZE		4749274	0					
ANR	4750284	ArgumentList	segment_count		4749274	1					
ANR	4750285	Argument	segment_count		4749274	0					
ANR	4750286	Identifier	segment_count		4749274	0					
ANR	4750287	Argument	segment_command_sz		4749274	1					
ANR	4750288	Identifier	segment_command_sz		4749274	0					
ANR	4750289	Argument	r_list_length ( threads_list )		4749274	2					
ANR	4750290	CallExpression	r_list_length ( threads_list )		4749274	0					
ANR	4750291	Callee	r_list_length		4749274	0					
ANR	4750292	Identifier	r_list_length		4749274	0					
ANR	4750293	ArgumentList	threads_list		4749274	1					
ANR	4750294	Argument	threads_list		4749274	0					
ANR	4750295	Identifier	threads_list		4749274	0					
ANR	4750296	Argument	tstate_size		4749274	3					
ANR	4750297	Identifier	tstate_size		4749274	0					
ANR	4750298	ExpressionStatement	header_size = command_size + mach_header_sz	937:1:25153:25196	4749274	28	True				
ANR	4750299	AssignmentExpression	header_size = command_size + mach_header_sz		4749274	0		=			
ANR	4750300	Identifier	header_size		4749274	0					
ANR	4750301	AdditiveExpression	command_size + mach_header_sz		4749274	1		+			
ANR	4750302	Identifier	command_size		4749274	0					
ANR	4750303	Identifier	mach_header_sz		4749274	1					
ANR	4750304	ExpressionStatement	"header = ( vm_offset_t ) calloc ( 1 , header_size )"	938:1:25235:25280	4749274	29	True				
ANR	4750305	AssignmentExpression	"header = ( vm_offset_t ) calloc ( 1 , header_size )"		4749274	0		=			
ANR	4750306	Identifier	header		4749274	0					
ANR	4750307	CastExpression	"( vm_offset_t ) calloc ( 1 , header_size )"		4749274	1					
ANR	4750308	CastTarget	vm_offset_t		4749274	0					
ANR	4750309	CallExpression	"calloc ( 1 , header_size )"		4749274	1					
ANR	4750310	Callee	calloc		4749274	0					
ANR	4750311	Identifier	calloc		4749274	0					
ANR	4750312	ArgumentList	1		4749274	1					
ANR	4750313	Argument	1		4749274	0					
ANR	4750314	PrimaryExpression	1		4749274	0					
ANR	4750315	Argument	header_size		4749274	1					
ANR	4750316	Identifier	header_size		4749274	0					
ANR	4750317	ExpressionStatement	"xnu_build_corefile_header ( header , segment_count , r_list_length ( threads_list ) , command_size , dbg -> pid )"	939:1:25283:25388	4749274	30	True				
ANR	4750318	CallExpression	"xnu_build_corefile_header ( header , segment_count , r_list_length ( threads_list ) , command_size , dbg -> pid )"		4749274	0					
ANR	4750319	Callee	xnu_build_corefile_header		4749274	0					
ANR	4750320	Identifier	xnu_build_corefile_header		4749274	0					
ANR	4750321	ArgumentList	header		4749274	1					
ANR	4750322	Argument	header		4749274	0					
ANR	4750323	Identifier	header		4749274	0					
ANR	4750324	Argument	segment_count		4749274	1					
ANR	4750325	Identifier	segment_count		4749274	0					
ANR	4750326	Argument	r_list_length ( threads_list )		4749274	2					
ANR	4750327	CallExpression	r_list_length ( threads_list )		4749274	0					
ANR	4750328	Callee	r_list_length		4749274	0					
ANR	4750329	Identifier	r_list_length		4749274	0					
ANR	4750330	ArgumentList	threads_list		4749274	1					
ANR	4750331	Argument	threads_list		4749274	0					
ANR	4750332	Identifier	threads_list		4749274	0					
ANR	4750333	Argument	command_size		4749274	3					
ANR	4750334	Identifier	command_size		4749274	0					
ANR	4750335	Argument	dbg -> pid		4749274	4					
ANR	4750336	PtrMemberAccess	dbg -> pid		4749274	0					
ANR	4750337	Identifier	dbg		4749274	0					
ANR	4750338	Identifier	pid		4749274	1					
ANR	4750339	IfStatement	if ( ! dbg -> maps )		4749274	31					
ANR	4750340	Condition	! dbg -> maps	942:5:25396:25405	4749274	0	True				
ANR	4750341	UnaryOperationExpression	! dbg -> maps		4749274	0					
ANR	4750342	UnaryOperator	!		4749274	0					
ANR	4750343	PtrMemberAccess	dbg -> maps		4749274	1					
ANR	4750344	Identifier	dbg		4749274	0					
ANR	4750345	Identifier	maps		4749274	1					
ANR	4750346	CompoundStatement		204:17:6469:6469	4749274	1					
ANR	4750347	ExpressionStatement	"perror ( ""There are not loaded maps"" )"	943:2:25412:25448	4749274	0	True				
ANR	4750348	CallExpression	"perror ( ""There are not loaded maps"" )"		4749274	0					
ANR	4750349	Callee	perror		4749274	0					
ANR	4750350	Identifier	perror		4749274	0					
ANR	4750351	ArgumentList	"""There are not loaded maps"""		4749274	1					
ANR	4750352	Argument	"""There are not loaded maps"""		4749274	0					
ANR	4750353	PrimaryExpression	"""There are not loaded maps"""		4749274	0					
ANR	4750354	IfStatement	"if ( xnu_write_mem_maps_to_buffer ( mem_maps_buffer , dbg -> maps , round_page ( header_size ) , header , mach_header_sz , segment_command_sz , & hoffset ) < 0 )"		4749274	32					
ANR	4750355	Condition	"xnu_write_mem_maps_to_buffer ( mem_maps_buffer , dbg -> maps , round_page ( header_size ) , header , mach_header_sz , segment_command_sz , & hoffset ) < 0"	945:5:25458:25600	4749274	0	True				
ANR	4750356	RelationalExpression	"xnu_write_mem_maps_to_buffer ( mem_maps_buffer , dbg -> maps , round_page ( header_size ) , header , mach_header_sz , segment_command_sz , & hoffset ) < 0"		4749274	0		<			
ANR	4750357	CallExpression	"xnu_write_mem_maps_to_buffer ( mem_maps_buffer , dbg -> maps , round_page ( header_size ) , header , mach_header_sz , segment_command_sz , & hoffset )"		4749274	0					
ANR	4750358	Callee	xnu_write_mem_maps_to_buffer		4749274	0					
ANR	4750359	Identifier	xnu_write_mem_maps_to_buffer		4749274	0					
ANR	4750360	ArgumentList	mem_maps_buffer		4749274	1					
ANR	4750361	Argument	mem_maps_buffer		4749274	0					
ANR	4750362	Identifier	mem_maps_buffer		4749274	0					
ANR	4750363	Argument	dbg -> maps		4749274	1					
ANR	4750364	PtrMemberAccess	dbg -> maps		4749274	0					
ANR	4750365	Identifier	dbg		4749274	0					
ANR	4750366	Identifier	maps		4749274	1					
ANR	4750367	Argument	round_page ( header_size )		4749274	2					
ANR	4750368	CallExpression	round_page ( header_size )		4749274	0					
ANR	4750369	Callee	round_page		4749274	0					
ANR	4750370	Identifier	round_page		4749274	0					
ANR	4750371	ArgumentList	header_size		4749274	1					
ANR	4750372	Argument	header_size		4749274	0					
ANR	4750373	Identifier	header_size		4749274	0					
ANR	4750374	Argument	header		4749274	3					
ANR	4750375	Identifier	header		4749274	0					
ANR	4750376	Argument	mach_header_sz		4749274	4					
ANR	4750377	Identifier	mach_header_sz		4749274	0					
ANR	4750378	Argument	segment_command_sz		4749274	5					
ANR	4750379	Identifier	segment_command_sz		4749274	0					
ANR	4750380	Argument	& hoffset		4749274	6					
ANR	4750381	UnaryOperationExpression	& hoffset		4749274	0					
ANR	4750382	UnaryOperator	&		4749274	0					
ANR	4750383	Identifier	hoffset		4749274	1					
ANR	4750384	PrimaryExpression	0		4749274	1					
ANR	4750385	CompoundStatement		208:61:6664:6664	4749274	1					
ANR	4750386	ExpressionStatement	"eprintf ( ""There was an error while writing the memory maps"" )"	947:2:25607:25667	4749274	0	True				
ANR	4750387	CallExpression	"eprintf ( ""There was an error while writing the memory maps"" )"		4749274	0					
ANR	4750388	Callee	eprintf		4749274	0					
ANR	4750389	Identifier	eprintf		4749274	0					
ANR	4750390	ArgumentList	"""There was an error while writing the memory maps"""		4749274	1					
ANR	4750391	Argument	"""There was an error while writing the memory maps"""		4749274	0					
ANR	4750392	PrimaryExpression	"""There was an error while writing the memory maps"""		4749274	0					
ANR	4750393	ExpressionStatement	error = false	948:2:25671:25684	4749274	1	True				
ANR	4750394	AssignmentExpression	error = false		4749274	0		=			
ANR	4750395	Identifier	error		4749274	0					
ANR	4750396	Identifier	false		4749274	1					
ANR	4750397	GotoStatement	goto cleanup ;	949:2:25688:25700	4749274	2	True				
ANR	4750398	Identifier	cleanup		4749274	0					
ANR	4750399	ExpressionStatement	tir . header = header	952:1:25707:25726	4749274	33	True				
ANR	4750400	AssignmentExpression	tir . header = header		4749274	0		=			
ANR	4750401	MemberAccess	tir . header		4749274	0					
ANR	4750402	Identifier	tir		4749274	0					
ANR	4750403	Identifier	header		4749274	1					
ANR	4750404	Identifier	header		4749274	1					
ANR	4750405	ExpressionStatement	tir . hoffset = hoffset	953:1:25729:25750	4749274	34	True				
ANR	4750406	AssignmentExpression	tir . hoffset = hoffset		4749274	0		=			
ANR	4750407	MemberAccess	tir . hoffset		4749274	0					
ANR	4750408	Identifier	tir		4749274	0					
ANR	4750409	Identifier	hoffset		4749274	1					
ANR	4750410	Identifier	hoffset		4749274	1					
ANR	4750411	ExpressionStatement	tir . flavors = flavors	954:1:25753:25774	4749274	35	True				
ANR	4750412	AssignmentExpression	tir . flavors = flavors		4749274	0		=			
ANR	4750413	MemberAccess	tir . flavors		4749274	0					
ANR	4750414	Identifier	tir		4749274	0					
ANR	4750415	Identifier	flavors		4749274	1					
ANR	4750416	Identifier	flavors		4749274	1					
ANR	4750417	ExpressionStatement	tir . tstate_size = tstate_size	955:1:25777:25806	4749274	36	True				
ANR	4750418	AssignmentExpression	tir . tstate_size = tstate_size		4749274	0		=			
ANR	4750419	MemberAccess	tir . tstate_size		4749274	0					
ANR	4750420	Identifier	tir		4749274	0					
ANR	4750421	Identifier	tstate_size		4749274	1					
ANR	4750422	Identifier	tstate_size		4749274	1					
ANR	4750423	Statement	r_list_foreach_safe	957:1:25810:25828	4749274	37	True				
ANR	4750424	Statement	(	957:21:25830:25830	4749274	38	True				
ANR	4750425	Statement	threads_list	957:22:25831:25842	4749274	39	True				
ANR	4750426	Statement	","	957:34:25843:25843	4749274	40	True				
ANR	4750427	Statement	iter	957:36:25845:25848	4749274	41	True				
ANR	4750428	Statement	","	957:40:25849:25849	4749274	42	True				
ANR	4750429	Statement	iter2	957:42:25851:25855	4749274	43	True				
ANR	4750430	Statement	","	957:47:25856:25856	4749274	44	True				
ANR	4750431	Statement	thread	957:49:25858:25863	4749274	45	True				
ANR	4750432	Statement	)	957:55:25864:25864	4749274	46	True				
ANR	4750433	CompoundStatement		219:57:6927:6927	4749274	47					
ANR	4750434	ExpressionStatement	"xnu_collect_thread_state ( thread -> port , & tir )"	958:2:25870:25915	4749274	0	True				
ANR	4750435	CallExpression	"xnu_collect_thread_state ( thread -> port , & tir )"		4749274	0					
ANR	4750436	Callee	xnu_collect_thread_state		4749274	0					
ANR	4750437	Identifier	xnu_collect_thread_state		4749274	0					
ANR	4750438	ArgumentList	thread -> port		4749274	1					
ANR	4750439	Argument	thread -> port		4749274	0					
ANR	4750440	PtrMemberAccess	thread -> port		4749274	0					
ANR	4750441	Identifier	thread		4749274	0					
ANR	4750442	Identifier	port		4749274	1					
ANR	4750443	Argument	& tir		4749274	1					
ANR	4750444	UnaryOperationExpression	& tir		4749274	0					
ANR	4750445	UnaryOperator	&		4749274	0					
ANR	4750446	Identifier	tir		4749274	1					
ANR	4750447	ExpressionStatement	xnu_dealloc_threads ( threads_list )	960:1:25921:25955	4749274	48	True				
ANR	4750448	CallExpression	xnu_dealloc_threads ( threads_list )		4749274	0					
ANR	4750449	Callee	xnu_dealloc_threads		4749274	0					
ANR	4750450	Identifier	xnu_dealloc_threads		4749274	0					
ANR	4750451	ArgumentList	threads_list		4749274	1					
ANR	4750452	Argument	threads_list		4749274	0					
ANR	4750453	Identifier	threads_list		4749274	0					
ANR	4750454	ExpressionStatement	"r_buf_append_bytes ( dest , ( const ut8 * ) header , header_size )"	962:1:25959:26017	4749274	49	True				
ANR	4750455	CallExpression	"r_buf_append_bytes ( dest , ( const ut8 * ) header , header_size )"		4749274	0					
ANR	4750456	Callee	r_buf_append_bytes		4749274	0					
ANR	4750457	Identifier	r_buf_append_bytes		4749274	0					
ANR	4750458	ArgumentList	dest		4749274	1					
ANR	4750459	Argument	dest		4749274	0					
ANR	4750460	Identifier	dest		4749274	0					
ANR	4750461	Argument	( const ut8 * ) header		4749274	1					
ANR	4750462	CastExpression	( const ut8 * ) header		4749274	0					
ANR	4750463	CastTarget	const ut8 *		4749274	0					
ANR	4750464	Identifier	header		4749274	1					
ANR	4750465	Argument	header_size		4749274	2					
ANR	4750466	Identifier	header_size		4749274	0					
ANR	4750467	ExpressionStatement	padding_sz = round_page ( header_size ) - header_size	963:1:26020:26071	4749274	50	True				
ANR	4750468	AssignmentExpression	padding_sz = round_page ( header_size ) - header_size		4749274	0		=			
ANR	4750469	Identifier	padding_sz		4749274	0					
ANR	4750470	AdditiveExpression	round_page ( header_size ) - header_size		4749274	1		-			
ANR	4750471	CallExpression	round_page ( header_size )		4749274	0					
ANR	4750472	Callee	round_page		4749274	0					
ANR	4750473	Identifier	round_page		4749274	0					
ANR	4750474	ArgumentList	header_size		4749274	1					
ANR	4750475	Argument	header_size		4749274	0					
ANR	4750476	Identifier	header_size		4749274	0					
ANR	4750477	Identifier	header_size		4749274	1					
ANR	4750478	ExpressionStatement	"padding = ( ut8 * ) calloc ( 1 , padding_sz )"	964:1:26074:26112	4749274	51	True				
ANR	4750479	AssignmentExpression	"padding = ( ut8 * ) calloc ( 1 , padding_sz )"		4749274	0		=			
ANR	4750480	Identifier	padding		4749274	0					
ANR	4750481	CastExpression	"( ut8 * ) calloc ( 1 , padding_sz )"		4749274	1					
ANR	4750482	CastTarget	ut8 *		4749274	0					
ANR	4750483	CallExpression	"calloc ( 1 , padding_sz )"		4749274	1					
ANR	4750484	Callee	calloc		4749274	0					
ANR	4750485	Identifier	calloc		4749274	0					
ANR	4750486	ArgumentList	1		4749274	1					
ANR	4750487	Argument	1		4749274	0					
ANR	4750488	PrimaryExpression	1		4749274	0					
ANR	4750489	Argument	padding_sz		4749274	1					
ANR	4750490	Identifier	padding_sz		4749274	0					
ANR	4750491	ExpressionStatement	"r_buf_append_bytes ( dest , ( const ut8 * ) padding , padding_sz )"	965:1:26115:26173	4749274	52	True				
ANR	4750492	CallExpression	"r_buf_append_bytes ( dest , ( const ut8 * ) padding , padding_sz )"		4749274	0					
ANR	4750493	Callee	r_buf_append_bytes		4749274	0					
ANR	4750494	Identifier	r_buf_append_bytes		4749274	0					
ANR	4750495	ArgumentList	dest		4749274	1					
ANR	4750496	Argument	dest		4749274	0					
ANR	4750497	Identifier	dest		4749274	0					
ANR	4750498	Argument	( const ut8 * ) padding		4749274	1					
ANR	4750499	CastExpression	( const ut8 * ) padding		4749274	0					
ANR	4750500	CastTarget	const ut8 *		4749274	0					
ANR	4750501	Identifier	padding		4749274	1					
ANR	4750502	Argument	padding_sz		4749274	2					
ANR	4750503	Identifier	padding_sz		4749274	0					
ANR	4750504	ExpressionStatement	"r_buf_append_buf ( dest , mem_maps_buffer )"	966:1:26176:26216	4749274	53	True				
ANR	4750505	CallExpression	"r_buf_append_buf ( dest , mem_maps_buffer )"		4749274	0					
ANR	4750506	Callee	r_buf_append_buf		4749274	0					
ANR	4750507	Identifier	r_buf_append_buf		4749274	0					
ANR	4750508	ArgumentList	dest		4749274	1					
ANR	4750509	Argument	dest		4749274	0					
ANR	4750510	Identifier	dest		4749274	0					
ANR	4750511	Argument	mem_maps_buffer		4749274	1					
ANR	4750512	Identifier	mem_maps_buffer		4749274	0					
ANR	4750513	Label	cleanup :	968:0:26219:26226	4749274	54	True				
ANR	4750514	Identifier	cleanup		4749274	0					
ANR	4750515	ExpressionStatement	r_buf_free ( mem_maps_buffer )	970:1:26274:26302	4749274	55	True				
ANR	4750516	CallExpression	r_buf_free ( mem_maps_buffer )		4749274	0					
ANR	4750517	Callee	r_buf_free		4749274	0					
ANR	4750518	Identifier	r_buf_free		4749274	0					
ANR	4750519	ArgumentList	mem_maps_buffer		4749274	1					
ANR	4750520	Argument	mem_maps_buffer		4749274	0					
ANR	4750521	Identifier	mem_maps_buffer		4749274	0					
ANR	4750522	ExpressionStatement	free ( ( void * ) header )	971:1:26305:26326	4749274	56	True				
ANR	4750523	CallExpression	free ( ( void * ) header )		4749274	0					
ANR	4750524	Callee	free		4749274	0					
ANR	4750525	Identifier	free		4749274	0					
ANR	4750526	ArgumentList	( void * ) header		4749274	1					
ANR	4750527	Argument	( void * ) header		4749274	0					
ANR	4750528	CastExpression	( void * ) header		4749274	0					
ANR	4750529	CastTarget	void *		4749274	0					
ANR	4750530	Identifier	header		4749274	1					
ANR	4750531	ExpressionStatement	free ( ( void * ) padding )	972:1:26329:26351	4749274	57	True				
ANR	4750532	CallExpression	free ( ( void * ) padding )		4749274	0					
ANR	4750533	Callee	free		4749274	0					
ANR	4750534	Identifier	free		4749274	0					
ANR	4750535	ArgumentList	( void * ) padding		4749274	1					
ANR	4750536	Argument	( void * ) padding		4749274	0					
ANR	4750537	CastExpression	( void * ) padding		4749274	0					
ANR	4750538	CastTarget	void *		4749274	0					
ANR	4750539	Identifier	padding		4749274	1					
ANR	4750540	ExpressionStatement	r_list_free ( threads_list )	973:1:26354:26380	4749274	58	True				
ANR	4750541	CallExpression	r_list_free ( threads_list )		4749274	0					
ANR	4750542	Callee	r_list_free		4749274	0					
ANR	4750543	Identifier	r_list_free		4749274	0					
ANR	4750544	ArgumentList	threads_list		4749274	1					
ANR	4750545	Argument	threads_list		4749274	0					
ANR	4750546	Identifier	threads_list		4749274	0					
ANR	4750547	ReturnStatement	return ! error ;	974:1:26383:26396	4749274	59	True				
ANR	4750548	UnaryOperationExpression	! error		4749274	0					
ANR	4750549	UnaryOperator	!		4749274	0					
ANR	4750550	Identifier	error		4749274	1					
ANR	4750551	Statement	RDebugPid	977:0:26401:26409	4749274	103	True				
ANR	4750552	Statement	*	977:10:26411:26411	4749274	104	True				
ANR	4750553	Statement	xnu_get_pid	977:11:26412:26422	4749274	105	True				
ANR	4750554	Statement	(	977:23:26424:26424	4749274	106	True				
ANR	4750555	Statement	int	977:24:26425:26427	4749274	107	True				
ANR	4750556	Statement	pid	977:28:26429:26431	4749274	108	True				
ANR	4750557	Statement	)	977:31:26432:26432	4749274	109	True				
ANR	4750558	CompoundStatement		244:1:7645:7662	4749274	110					
ANR	4750559	IdentifierDeclStatement	"int psnamelen , foo , nargs , mib [ 3 ] , uid ;"	978:1:26437:26475	4749274	0	True				
ANR	4750560	IdentifierDecl	psnamelen		4749274	0					
ANR	4750561	IdentifierDeclType	int		4749274	0					
ANR	4750562	Identifier	psnamelen		4749274	1					
ANR	4750563	IdentifierDecl	foo		4749274	1					
ANR	4750564	IdentifierDeclType	int		4749274	0					
ANR	4750565	Identifier	foo		4749274	1					
ANR	4750566	IdentifierDecl	nargs		4749274	2					
ANR	4750567	IdentifierDeclType	int		4749274	0					
ANR	4750568	Identifier	nargs		4749274	1					
ANR	4750569	IdentifierDecl	mib [ 3 ]		4749274	3					
ANR	4750570	IdentifierDeclType	int [ 3 ]		4749274	0					
ANR	4750571	Identifier	mib		4749274	1					
ANR	4750572	PrimaryExpression	3		4749274	2					
ANR	4750573	IdentifierDecl	uid		4749274	4					
ANR	4750574	IdentifierDeclType	int		4749274	0					
ANR	4750575	Identifier	uid		4749274	1					
ANR	4750576	IdentifierDeclStatement	"size_t size , argmax = 4096 ;"	979:1:26478:26504	4749274	1	True				
ANR	4750577	IdentifierDecl	size		4749274	0					
ANR	4750578	IdentifierDeclType	size_t		4749274	0					
ANR	4750579	Identifier	size		4749274	1					
ANR	4750580	IdentifierDecl	argmax = 4096		4749274	1					
ANR	4750581	IdentifierDeclType	size_t		4749274	0					
ANR	4750582	Identifier	argmax		4749274	1					
ANR	4750583	AssignmentExpression	argmax = 4096		4749274	2		=			
ANR	4750584	Identifier	argmax		4749274	0					
ANR	4750585	PrimaryExpression	4096		4749274	1					
ANR	4750586	IdentifierDeclStatement	"char * curr_arg , * start_args , * iter_args , * end_args ;"	980:1:26507:26557	4749274	2	True				
ANR	4750587	IdentifierDecl	* curr_arg		4749274	0					
ANR	4750588	IdentifierDeclType	char *		4749274	0					
ANR	4750589	Identifier	curr_arg		4749274	1					
ANR	4750590	IdentifierDecl	* start_args		4749274	1					
ANR	4750591	IdentifierDeclType	char *		4749274	0					
ANR	4750592	Identifier	start_args		4749274	1					
ANR	4750593	IdentifierDecl	* iter_args		4749274	2					
ANR	4750594	IdentifierDeclType	char *		4749274	0					
ANR	4750595	Identifier	iter_args		4749274	1					
ANR	4750596	IdentifierDecl	* end_args		4749274	3					
ANR	4750597	IdentifierDeclType	char *		4749274	0					
ANR	4750598	Identifier	end_args		4749274	1					
ANR	4750599	IdentifierDeclStatement	char * procargs = NULL ;	981:1:26560:26581	4749274	3	True				
ANR	4750600	IdentifierDecl	* procargs = NULL		4749274	0					
ANR	4750601	IdentifierDeclType	char *		4749274	0					
ANR	4750602	Identifier	procargs		4749274	1					
ANR	4750603	AssignmentExpression	* procargs = NULL		4749274	2		=			
ANR	4750604	Identifier	NULL		4749274	0					
ANR	4750605	Identifier	NULL		4749274	1					
ANR	4750606	IdentifierDeclStatement	char psname [ 4096 ] ;	982:1:26584:26601	4749274	4	True				
ANR	4750607	IdentifierDecl	psname [ 4096 ]		4749274	0					
ANR	4750608	IdentifierDeclType	char [ 4096 ]		4749274	0					
ANR	4750609	Identifier	psname		4749274	1					
ANR	4750610	PrimaryExpression	4096		4749274	2					
ANR	4750611	ExpressionStatement	mib [ 0 ] = CTL_KERN	985:1:26657:26674	4749274	5	True				
ANR	4750612	AssignmentExpression	mib [ 0 ] = CTL_KERN		4749274	0		=			
ANR	4750613	ArrayIndexing	mib [ 0 ]		4749274	0					
ANR	4750614	Identifier	mib		4749274	0					
ANR	4750615	PrimaryExpression	0		4749274	1					
ANR	4750616	Identifier	CTL_KERN		4749274	1					
ANR	4750617	ExpressionStatement	mib [ 1 ] = KERN_ARGMAX	986:1:26677:26697	4749274	6	True				
ANR	4750618	AssignmentExpression	mib [ 1 ] = KERN_ARGMAX		4749274	0		=			
ANR	4750619	ArrayIndexing	mib [ 1 ]		4749274	0					
ANR	4750620	Identifier	mib		4749274	0					
ANR	4750621	PrimaryExpression	1		4749274	1					
ANR	4750622	Identifier	KERN_ARGMAX		4749274	1					
ANR	4750623	ExpressionStatement	size = sizeof ( argmax )	987:1:26700:26721	4749274	7	True				
ANR	4750624	AssignmentExpression	size = sizeof ( argmax )		4749274	0		=			
ANR	4750625	Identifier	size		4749274	0					
ANR	4750626	SizeofExpression	sizeof ( argmax )		4749274	1					
ANR	4750627	Sizeof	sizeof		4749274	0					
ANR	4750628	SizeofOperand	argmax		4749274	1					
ANR	4750629	IfStatement	"if ( sysctl ( mib , 2 , & argmax , & size , NULL , 0 ) == - 1 )"		4749274	8					
ANR	4750630	Condition	"sysctl ( mib , 2 , & argmax , & size , NULL , 0 ) == - 1"	988:5:26728:26773	4749274	0	True				
ANR	4750631	EqualityExpression	"sysctl ( mib , 2 , & argmax , & size , NULL , 0 ) == - 1"		4749274	0		==			
ANR	4750632	CallExpression	"sysctl ( mib , 2 , & argmax , & size , NULL , 0 )"		4749274	0					
ANR	4750633	Callee	sysctl		4749274	0					
ANR	4750634	Identifier	sysctl		4749274	0					
ANR	4750635	ArgumentList	mib		4749274	1					
ANR	4750636	Argument	mib		4749274	0					
ANR	4750637	Identifier	mib		4749274	0					
ANR	4750638	Argument	2		4749274	1					
ANR	4750639	PrimaryExpression	2		4749274	0					
ANR	4750640	Argument	& argmax		4749274	2					
ANR	4750641	UnaryOperationExpression	& argmax		4749274	0					
ANR	4750642	UnaryOperator	&		4749274	0					
ANR	4750643	Identifier	argmax		4749274	1					
ANR	4750644	Argument	& size		4749274	3					
ANR	4750645	UnaryOperationExpression	& size		4749274	0					
ANR	4750646	UnaryOperator	&		4749274	0					
ANR	4750647	Identifier	size		4749274	1					
ANR	4750648	Argument	NULL		4749274	4					
ANR	4750649	Identifier	NULL		4749274	0					
ANR	4750650	Argument	0		4749274	5					
ANR	4750651	PrimaryExpression	0		4749274	0					
ANR	4750652	UnaryOperationExpression	- 1		4749274	1					
ANR	4750653	UnaryOperator	-		4749274	0					
ANR	4750654	PrimaryExpression	1		4749274	1					
ANR	4750655	CompoundStatement		250:53:7837:7837	4749274	1					
ANR	4750656	ExpressionStatement	"eprintf ( ""sysctl() error on getting argmax\\n"" )"	989:2:26780:26826	4749274	0	True				
ANR	4750657	CallExpression	"eprintf ( ""sysctl() error on getting argmax\\n"" )"		4749274	0					
ANR	4750658	Callee	eprintf		4749274	0					
ANR	4750659	Identifier	eprintf		4749274	0					
ANR	4750660	ArgumentList	"""sysctl() error on getting argmax\\n"""		4749274	1					
ANR	4750661	Argument	"""sysctl() error on getting argmax\\n"""		4749274	0					
ANR	4750662	PrimaryExpression	"""sysctl() error on getting argmax\\n"""		4749274	0					
ANR	4750663	ReturnStatement	return NULL ;	990:2:26830:26841	4749274	1	True				
ANR	4750664	Identifier	NULL		4749274	0					
ANR	4750665	ExpressionStatement	uid = uidFromPid ( pid )	993:1:26854:26876	4749274	9	True				
ANR	4750666	AssignmentExpression	uid = uidFromPid ( pid )		4749274	0		=			
ANR	4750667	Identifier	uid		4749274	0					
ANR	4750668	CallExpression	uidFromPid ( pid )		4749274	1					
ANR	4750669	Callee	uidFromPid		4749274	0					
ANR	4750670	Identifier	uidFromPid		4749274	0					
ANR	4750671	ArgumentList	pid		4749274	1					
ANR	4750672	Argument	pid		4749274	0					
ANR	4750673	Identifier	pid		4749274	0					
ANR	4750674	ExpressionStatement	procargs = ( char * ) malloc ( argmax )	996:1:26921:26955	4749274	10	True				
ANR	4750675	AssignmentExpression	procargs = ( char * ) malloc ( argmax )		4749274	0		=			
ANR	4750676	Identifier	procargs		4749274	0					
ANR	4750677	CastExpression	( char * ) malloc ( argmax )		4749274	1					
ANR	4750678	CastTarget	char *		4749274	0					
ANR	4750679	CallExpression	malloc ( argmax )		4749274	1					
ANR	4750680	Callee	malloc		4749274	0					
ANR	4750681	Identifier	malloc		4749274	0					
ANR	4750682	ArgumentList	argmax		4749274	1					
ANR	4750683	Argument	argmax		4749274	0					
ANR	4750684	Identifier	argmax		4749274	0					
ANR	4750685	IfStatement	if ( ! procargs )		4749274	11					
ANR	4750686	Condition	! procargs	997:5:26962:26970	4749274	0	True				
ANR	4750687	UnaryOperationExpression	! procargs		4749274	0					
ANR	4750688	UnaryOperator	!		4749274	0					
ANR	4750689	Identifier	procargs		4749274	1					
ANR	4750690	CompoundStatement		259:16:8034:8034	4749274	1					
ANR	4750691	ExpressionStatement	"eprintf ( ""getcmdargs(): insufficient memory for procargs %d\\n"" , ( int ) ( size_t ) argmax )"	998:2:26977:27064	4749274	0	True				
ANR	4750692	CallExpression	"eprintf ( ""getcmdargs(): insufficient memory for procargs %d\\n"" , ( int ) ( size_t ) argmax )"		4749274	0					
ANR	4750693	Callee	eprintf		4749274	0					
ANR	4750694	Identifier	eprintf		4749274	0					
ANR	4750695	ArgumentList	"""getcmdargs(): insufficient memory for procargs %d\\n"""		4749274	1					
ANR	4750696	Argument	"""getcmdargs(): insufficient memory for procargs %d\\n"""		4749274	0					
ANR	4750697	PrimaryExpression	"""getcmdargs(): insufficient memory for procargs %d\\n"""		4749274	0					
ANR	4750698	Argument	( int ) ( size_t ) argmax		4749274	1					
ANR	4750699	CastExpression	( int ) ( size_t ) argmax		4749274	0					
ANR	4750700	CastTarget	int		4749274	0					
ANR	4750701	CastExpression	( size_t ) argmax		4749274	1					
ANR	4750702	CastTarget	size_t		4749274	0					
ANR	4750703	Identifier	argmax		4749274	1					
ANR	4750704	ReturnStatement	return NULL ;	1000:2:27068:27079	4749274	1	True				
ANR	4750705	Identifier	NULL		4749274	0					
ANR	4750706	ExpressionStatement	mib [ 0 ] = CTL_KERN	1006:1:27166:27183	4749274	12	True				
ANR	4750707	AssignmentExpression	mib [ 0 ] = CTL_KERN		4749274	0		=			
ANR	4750708	ArrayIndexing	mib [ 0 ]		4749274	0					
ANR	4750709	Identifier	mib		4749274	0					
ANR	4750710	PrimaryExpression	0		4749274	1					
ANR	4750711	Identifier	CTL_KERN		4749274	1					
ANR	4750712	ExpressionStatement	mib [ 1 ] = KERN_PROCARGS2	1007:1:27186:27209	4749274	13	True				
ANR	4750713	AssignmentExpression	mib [ 1 ] = KERN_PROCARGS2		4749274	0		=			
ANR	4750714	ArrayIndexing	mib [ 1 ]		4749274	0					
ANR	4750715	Identifier	mib		4749274	0					
ANR	4750716	PrimaryExpression	1		4749274	1					
ANR	4750717	Identifier	KERN_PROCARGS2		4749274	1					
ANR	4750718	ExpressionStatement	mib [ 2 ] = pid	1008:1:27212:27224	4749274	14	True				
ANR	4750719	AssignmentExpression	mib [ 2 ] = pid		4749274	0		=			
ANR	4750720	ArrayIndexing	mib [ 2 ]		4749274	0					
ANR	4750721	Identifier	mib		4749274	0					
ANR	4750722	PrimaryExpression	2		4749274	1					
ANR	4750723	Identifier	pid		4749274	1					
ANR	4750724	ExpressionStatement	size = argmax	1010:1:27228:27241	4749274	15	True				
ANR	4750725	AssignmentExpression	size = argmax		4749274	0		=			
ANR	4750726	Identifier	size		4749274	0					
ANR	4750727	Identifier	argmax		4749274	1					
ANR	4750728	ExpressionStatement	procargs [ 0 ] = 0	1011:1:27244:27259	4749274	16	True				
ANR	4750729	AssignmentExpression	procargs [ 0 ] = 0		4749274	0		=			
ANR	4750730	ArrayIndexing	procargs [ 0 ]		4749274	0					
ANR	4750731	Identifier	procargs		4749274	0					
ANR	4750732	PrimaryExpression	0		4749274	1					
ANR	4750733	PrimaryExpression	0		4749274	1					
ANR	4750734	IfStatement	"if ( sysctl ( mib , 3 , procargs , & size , NULL , 0 ) == - 1 )"		4749274	17					
ANR	4750735	Condition	"sysctl ( mib , 3 , procargs , & size , NULL , 0 ) == - 1"	1012:5:27266:27312	4749274	0	True				
ANR	4750736	EqualityExpression	"sysctl ( mib , 3 , procargs , & size , NULL , 0 ) == - 1"		4749274	0		==			
ANR	4750737	CallExpression	"sysctl ( mib , 3 , procargs , & size , NULL , 0 )"		4749274	0					
ANR	4750738	Callee	sysctl		4749274	0					
ANR	4750739	Identifier	sysctl		4749274	0					
ANR	4750740	ArgumentList	mib		4749274	1					
ANR	4750741	Argument	mib		4749274	0					
ANR	4750742	Identifier	mib		4749274	0					
ANR	4750743	Argument	3		4749274	1					
ANR	4750744	PrimaryExpression	3		4749274	0					
ANR	4750745	Argument	procargs		4749274	2					
ANR	4750746	Identifier	procargs		4749274	0					
ANR	4750747	Argument	& size		4749274	3					
ANR	4750748	UnaryOperationExpression	& size		4749274	0					
ANR	4750749	UnaryOperator	&		4749274	0					
ANR	4750750	Identifier	size		4749274	1					
ANR	4750751	Argument	NULL		4749274	4					
ANR	4750752	Identifier	NULL		4749274	0					
ANR	4750753	Argument	0		4749274	5					
ANR	4750754	PrimaryExpression	0		4749274	0					
ANR	4750755	UnaryOperationExpression	- 1		4749274	1					
ANR	4750756	UnaryOperator	-		4749274	0					
ANR	4750757	PrimaryExpression	1		4749274	1					
ANR	4750758	CompoundStatement		274:54:8376:8376	4749274	1					
ANR	4750759	IfStatement	if ( EINVAL == errno )		4749274	0					
ANR	4750760	Condition	EINVAL == errno	1013:6:27323:27337	4749274	0	True				
ANR	4750761	EqualityExpression	EINVAL == errno		4749274	0		==			
ANR	4750762	Identifier	EINVAL		4749274	0					
ANR	4750763	Identifier	errno		4749274	1					
ANR	4750764	CompoundStatement		275:23:8401:8401	4749274	1					
ANR	4750765	ExpressionStatement	free ( procargs )	1015:3:27448:27463	4749274	0	True				
ANR	4750766	CallExpression	free ( procargs )		4749274	0					
ANR	4750767	Callee	free		4749274	0					
ANR	4750768	Identifier	free		4749274	0					
ANR	4750769	ArgumentList	procargs		4749274	1					
ANR	4750770	Argument	procargs		4749274	0					
ANR	4750771	Identifier	procargs		4749274	0					
ANR	4750772	ReturnStatement	return NULL ;	1016:3:27468:27479	4749274	1	True				
ANR	4750773	Identifier	NULL		4749274	0					
ANR	4750774	ExpressionStatement	"eprintf ( ""sysctl(): unspecified sysctl error - %i\\n"" , errno )"	1018:2:27487:27547	4749274	1	True				
ANR	4750775	CallExpression	"eprintf ( ""sysctl(): unspecified sysctl error - %i\\n"" , errno )"		4749274	0					
ANR	4750776	Callee	eprintf		4749274	0					
ANR	4750777	Identifier	eprintf		4749274	0					
ANR	4750778	ArgumentList	"""sysctl(): unspecified sysctl error - %i\\n"""		4749274	1					
ANR	4750779	Argument	"""sysctl(): unspecified sysctl error - %i\\n"""		4749274	0					
ANR	4750780	PrimaryExpression	"""sysctl(): unspecified sysctl error - %i\\n"""		4749274	0					
ANR	4750781	Argument	errno		4749274	1					
ANR	4750782	Identifier	errno		4749274	0					
ANR	4750783	ExpressionStatement	free ( procargs )	1019:2:27551:27566	4749274	2	True				
ANR	4750784	CallExpression	free ( procargs )		4749274	0					
ANR	4750785	Callee	free		4749274	0					
ANR	4750786	Identifier	free		4749274	0					
ANR	4750787	ArgumentList	procargs		4749274	1					
ANR	4750788	Argument	procargs		4749274	0					
ANR	4750789	Identifier	procargs		4749274	0					
ANR	4750790	ReturnStatement	return NULL ;	1020:2:27570:27581	4749274	3	True				
ANR	4750791	Identifier	NULL		4749274	0					
ANR	4750792	ExpressionStatement	"memcpy ( & nargs , procargs , sizeof ( nargs ) )"	1024:1:27629:27670	4749274	18	True				
ANR	4750793	CallExpression	"memcpy ( & nargs , procargs , sizeof ( nargs ) )"		4749274	0					
ANR	4750794	Callee	memcpy		4749274	0					
ANR	4750795	Identifier	memcpy		4749274	0					
ANR	4750796	ArgumentList	& nargs		4749274	1					
ANR	4750797	Argument	& nargs		4749274	0					
ANR	4750798	UnaryOperationExpression	& nargs		4749274	0					
ANR	4750799	UnaryOperator	&		4749274	0					
ANR	4750800	Identifier	nargs		4749274	1					
ANR	4750801	Argument	procargs		4749274	1					
ANR	4750802	Identifier	procargs		4749274	0					
ANR	4750803	Argument	sizeof ( nargs )		4749274	2					
ANR	4750804	SizeofExpression	sizeof ( nargs )		4749274	0					
ANR	4750805	Sizeof	sizeof		4749274	0					
ANR	4750806	SizeofOperand	nargs		4749274	1					
ANR	4750807	ExpressionStatement	iter_args = procargs + sizeof ( nargs )	1025:1:27673:27710	4749274	19	True				
ANR	4750808	AssignmentExpression	iter_args = procargs + sizeof ( nargs )		4749274	0		=			
ANR	4750809	Identifier	iter_args		4749274	0					
ANR	4750810	AdditiveExpression	procargs + sizeof ( nargs )		4749274	1		+			
ANR	4750811	Identifier	procargs		4749274	0					
ANR	4750812	SizeofExpression	sizeof ( nargs )		4749274	1					
ANR	4750813	Sizeof	sizeof		4749274	0					
ANR	4750814	SizeofOperand	nargs		4749274	1					
ANR	4750815	ExpressionStatement	end_args = & procargs [ size - 30 ]	1026:1:27713:27744	4749274	20	True				
ANR	4750816	AssignmentExpression	end_args = & procargs [ size - 30 ]		4749274	0		=			
ANR	4750817	Identifier	end_args		4749274	0					
ANR	4750818	UnaryOperationExpression	& procargs [ size - 30 ]		4749274	1					
ANR	4750819	UnaryOperator	&		4749274	0					
ANR	4750820	ArrayIndexing	procargs [ size - 30 ]		4749274	1					
ANR	4750821	Identifier	procargs		4749274	0					
ANR	4750822	AdditiveExpression	size - 30		4749274	1		-			
ANR	4750823	Identifier	size		4749274	0					
ANR	4750824	PrimaryExpression	30		4749274	1					
ANR	4750825	IfStatement	if ( iter_args >= end_args )		4749274	21					
ANR	4750826	Condition	iter_args >= end_args	1027:5:27780:27800	4749274	0	True				
ANR	4750827	RelationalExpression	iter_args >= end_args		4749274	0		>=			
ANR	4750828	Identifier	iter_args		4749274	0					
ANR	4750829	Identifier	end_args		4749274	1					
ANR	4750830	CompoundStatement		289:28:8864:8864	4749274	1					
ANR	4750831	ExpressionStatement	"eprintf ( ""getcmdargs(): argument length mismatch"" )"	1028:2:27807:27857	4749274	0	True				
ANR	4750832	CallExpression	"eprintf ( ""getcmdargs(): argument length mismatch"" )"		4749274	0					
ANR	4750833	Callee	eprintf		4749274	0					
ANR	4750834	Identifier	eprintf		4749274	0					
ANR	4750835	ArgumentList	"""getcmdargs(): argument length mismatch"""		4749274	1					
ANR	4750836	Argument	"""getcmdargs(): argument length mismatch"""		4749274	0					
ANR	4750837	PrimaryExpression	"""getcmdargs(): argument length mismatch"""		4749274	0					
ANR	4750838	ExpressionStatement	free ( procargs )	1029:2:27861:27876	4749274	1	True				
ANR	4750839	CallExpression	free ( procargs )		4749274	0					
ANR	4750840	Callee	free		4749274	0					
ANR	4750841	Identifier	free		4749274	0					
ANR	4750842	ArgumentList	procargs		4749274	1					
ANR	4750843	Argument	procargs		4749274	0					
ANR	4750844	Identifier	procargs		4749274	0					
ANR	4750845	ReturnStatement	return NULL ;	1030:2:27880:27891	4749274	2	True				
ANR	4750846	Identifier	NULL		4749274	0					
ANR	4750847	WhileStatement	while ( iter_args < end_args && * iter_args != '\\0' )		4749274	22					
ANR	4750848	Condition	iter_args < end_args && * iter_args != '\\0'	1037:8:28040:28081	4749274	0	True				
ANR	4750849	AndExpression	iter_args < end_args && * iter_args != '\\0'		4749274	0		&&			
ANR	4750850	RelationalExpression	iter_args < end_args		4749274	0		<			
ANR	4750851	Identifier	iter_args		4749274	0					
ANR	4750852	Identifier	end_args		4749274	1					
ANR	4750853	EqualityExpression	* iter_args != '\\0'		4749274	1		!=			
ANR	4750854	UnaryOperationExpression	* iter_args		4749274	0					
ANR	4750855	UnaryOperator	*		4749274	0					
ANR	4750856	Identifier	iter_args		4749274	1					
ANR	4750857	PrimaryExpression	'\\0'		4749274	1					
ANR	4750858	CompoundStatement		299:52:9145:9145	4749274	1					
ANR	4750859	ExpressionStatement	iter_args ++	1037:54:28086:28097	4749274	0	True				
ANR	4750860	PostIncDecOperationExpression	iter_args ++		4749274	0					
ANR	4750861	Identifier	iter_args		4749274	0					
ANR	4750862	IncDec	++		4749274	1					
ANR	4750863	WhileStatement	while ( iter_args < end_args && * iter_args == '\\0' )		4749274	23					
ANR	4750864	Condition	iter_args < end_args && * iter_args == '\\0'	1038:8:28109:28150	4749274	0	True				
ANR	4750865	AndExpression	iter_args < end_args && * iter_args == '\\0'		4749274	0		&&			
ANR	4750866	RelationalExpression	iter_args < end_args		4749274	0		<			
ANR	4750867	Identifier	iter_args		4749274	0					
ANR	4750868	Identifier	end_args		4749274	1					
ANR	4750869	EqualityExpression	* iter_args == '\\0'		4749274	1		==			
ANR	4750870	UnaryOperationExpression	* iter_args		4749274	0					
ANR	4750871	UnaryOperator	*		4749274	0					
ANR	4750872	Identifier	iter_args		4749274	1					
ANR	4750873	PrimaryExpression	'\\0'		4749274	1					
ANR	4750874	CompoundStatement		300:52:9214:9214	4749274	1					
ANR	4750875	ExpressionStatement	iter_args ++	1038:54:28155:28166	4749274	0	True				
ANR	4750876	PostIncDecOperationExpression	iter_args ++		4749274	0					
ANR	4750877	Identifier	iter_args		4749274	0					
ANR	4750878	IncDec	++		4749274	1					
ANR	4750879	IfStatement	if ( iter_args == end_args )		4749274	24					
ANR	4750880	Condition	iter_args == end_args	1040:5:28182:28202	4749274	0	True				
ANR	4750881	EqualityExpression	iter_args == end_args		4749274	0		==			
ANR	4750882	Identifier	iter_args		4749274	0					
ANR	4750883	Identifier	end_args		4749274	1					
ANR	4750884	CompoundStatement		302:28:9266:9266	4749274	1					
ANR	4750885	ExpressionStatement	free ( procargs )	1041:2:28209:28224	4749274	0	True				
ANR	4750886	CallExpression	free ( procargs )		4749274	0					
ANR	4750887	Callee	free		4749274	0					
ANR	4750888	Identifier	free		4749274	0					
ANR	4750889	ArgumentList	procargs		4749274	1					
ANR	4750890	Argument	procargs		4749274	0					
ANR	4750891	Identifier	procargs		4749274	0					
ANR	4750892	ReturnStatement	return NULL ;	1042:2:28228:28239	4749274	1	True				
ANR	4750893	Identifier	NULL		4749274	0					
ANR	4750894	ExpressionStatement	curr_arg = iter_args	1044:1:28245:28265	4749274	25	True				
ANR	4750895	AssignmentExpression	curr_arg = iter_args		4749274	0		=			
ANR	4750896	Identifier	curr_arg		4749274	0					
ANR	4750897	Identifier	iter_args		4749274	1					
ANR	4750898	ExpressionStatement	start_args = iter_args	1045:1:28268:28290	4749274	26	True				
ANR	4750899	AssignmentExpression	start_args = iter_args		4749274	0		=			
ANR	4750900	Identifier	start_args		4749274	0					
ANR	4750901	Identifier	iter_args		4749274	1					
ANR	4750902	ExpressionStatement	foo = 1	1046:1:28340:28347	4749274	27	True				
ANR	4750903	AssignmentExpression	foo = 1		4749274	0		=			
ANR	4750904	Identifier	foo		4749274	0					
ANR	4750905	PrimaryExpression	1		4749274	1					
ANR	4750906	ExpressionStatement	* psname = 0	1047:1:28350:28361	4749274	28	True				
ANR	4750907	AssignmentExpression	* psname = 0		4749274	0		=			
ANR	4750908	UnaryOperationExpression	* psname		4749274	0					
ANR	4750909	UnaryOperator	*		4749274	0					
ANR	4750910	Identifier	psname		4749274	1					
ANR	4750911	PrimaryExpression	0		4749274	1					
ANR	4750912	ExpressionStatement	psnamelen = 0	1048:1:28364:28377	4749274	29	True				
ANR	4750913	AssignmentExpression	psnamelen = 0		4749274	0		=			
ANR	4750914	Identifier	psnamelen		4749274	0					
ANR	4750915	PrimaryExpression	0		4749274	1					
ANR	4750916	WhileStatement	while ( iter_args < end_args && nargs > 0 )		4749274	30					
ANR	4750917	Condition	iter_args < end_args && nargs > 0	1049:8:28387:28419	4749274	0	True				
ANR	4750918	AndExpression	iter_args < end_args && nargs > 0		4749274	0		&&			
ANR	4750919	RelationalExpression	iter_args < end_args		4749274	0		<			
ANR	4750920	Identifier	iter_args		4749274	0					
ANR	4750921	Identifier	end_args		4749274	1					
ANR	4750922	RelationalExpression	nargs > 0		4749274	1		>			
ANR	4750923	Identifier	nargs		4749274	0					
ANR	4750924	PrimaryExpression	0		4749274	1					
ANR	4750925	CompoundStatement		311:43:9483:9483	4749274	1					
ANR	4750926	IfStatement	if ( * iter_args ++ == '\\0' )		4749274	0					
ANR	4750927	Condition	* iter_args ++ == '\\0'	1050:6:28430:28449	4749274	0	True				
ANR	4750928	EqualityExpression	* iter_args ++ == '\\0'		4749274	0		==			
ANR	4750929	UnaryOperationExpression	* iter_args ++		4749274	0					
ANR	4750930	UnaryOperator	*		4749274	0					
ANR	4750931	PostIncDecOperationExpression	iter_args ++		4749274	1					
ANR	4750932	Identifier	iter_args		4749274	0					
ANR	4750933	IncDec	++		4749274	1					
ANR	4750934	PrimaryExpression	'\\0'		4749274	1					
ANR	4750935	CompoundStatement		313:3:9518:9546	4749274	1					
ANR	4750936	IdentifierDeclStatement	int alen = strlen ( curr_arg ) ;	1051:3:28457:28485	4749274	0	True				
ANR	4750937	IdentifierDecl	alen = strlen ( curr_arg )		4749274	0					
ANR	4750938	IdentifierDeclType	int		4749274	0					
ANR	4750939	Identifier	alen		4749274	1					
ANR	4750940	AssignmentExpression	alen = strlen ( curr_arg )		4749274	2		=			
ANR	4750941	Identifier	alen		4749274	0					
ANR	4750942	CallExpression	strlen ( curr_arg )		4749274	1					
ANR	4750943	Callee	strlen		4749274	0					
ANR	4750944	Identifier	strlen		4749274	0					
ANR	4750945	ArgumentList	curr_arg		4749274	1					
ANR	4750946	Argument	curr_arg		4749274	0					
ANR	4750947	Identifier	curr_arg		4749274	0					
ANR	4750948	IfStatement	if ( foo )		4749274	1					
ANR	4750949	Condition	foo	1052:7:28494:28496	4749274	0	True				
ANR	4750950	Identifier	foo		4749274	0					
ANR	4750951	CompoundStatement		314:12:9560:9560	4749274	1					
ANR	4750952	ExpressionStatement	"memcpy ( psname , curr_arg , alen + 1 )"	1053:4:28505:28538	4749274	0	True				
ANR	4750953	CallExpression	"memcpy ( psname , curr_arg , alen + 1 )"		4749274	0					
ANR	4750954	Callee	memcpy		4749274	0					
ANR	4750955	Identifier	memcpy		4749274	0					
ANR	4750956	ArgumentList	psname		4749274	1					
ANR	4750957	Argument	psname		4749274	0					
ANR	4750958	Identifier	psname		4749274	0					
ANR	4750959	Argument	curr_arg		4749274	1					
ANR	4750960	Identifier	curr_arg		4749274	0					
ANR	4750961	Argument	alen + 1		4749274	2					
ANR	4750962	AdditiveExpression	alen + 1		4749274	0		+			
ANR	4750963	Identifier	alen		4749274	0					
ANR	4750964	PrimaryExpression	1		4749274	1					
ANR	4750965	ExpressionStatement	foo = 0	1054:4:28544:28551	4749274	1	True				
ANR	4750966	AssignmentExpression	foo = 0		4749274	0		=			
ANR	4750967	Identifier	foo		4749274	0					
ANR	4750968	PrimaryExpression	0		4749274	1					
ANR	4750969	ElseStatement	else		4749274	0					
ANR	4750970	CompoundStatement		317:10:9624:9624	4749274	0					
ANR	4750971	ExpressionStatement	psname [ psnamelen ] = ' '	1056:4:28569:28592	4749274	0	True				
ANR	4750972	AssignmentExpression	psname [ psnamelen ] = ' '		4749274	0		=			
ANR	4750973	ArrayIndexing	psname [ psnamelen ]		4749274	0					
ANR	4750974	Identifier	psname		4749274	0					
ANR	4750975	Identifier	psnamelen		4749274	1					
ANR	4750976	PrimaryExpression	' '		4749274	1					
ANR	4750977	ExpressionStatement	"memcpy ( psname + psnamelen + 1 , curr_arg , alen + 1 )"	1057:4:28598:28649	4749274	1	True				
ANR	4750978	CallExpression	"memcpy ( psname + psnamelen + 1 , curr_arg , alen + 1 )"		4749274	0					
ANR	4750979	Callee	memcpy		4749274	0					
ANR	4750980	Identifier	memcpy		4749274	0					
ANR	4750981	ArgumentList	psname + psnamelen + 1		4749274	1					
ANR	4750982	Argument	psname + psnamelen + 1		4749274	0					
ANR	4750983	AdditiveExpression	psname + psnamelen + 1		4749274	0		+			
ANR	4750984	Identifier	psname		4749274	0					
ANR	4750985	AdditiveExpression	psnamelen + 1		4749274	1		+			
ANR	4750986	Identifier	psnamelen		4749274	0					
ANR	4750987	PrimaryExpression	1		4749274	1					
ANR	4750988	Argument	curr_arg		4749274	1					
ANR	4750989	Identifier	curr_arg		4749274	0					
ANR	4750990	Argument	alen + 1		4749274	2					
ANR	4750991	AdditiveExpression	alen + 1		4749274	0		+			
ANR	4750992	Identifier	alen		4749274	0					
ANR	4750993	PrimaryExpression	1		4749274	1					
ANR	4750994	ExpressionStatement	psnamelen += alen	1059:3:28659:28676	4749274	2	True				
ANR	4750995	AssignmentExpression	psnamelen += alen		4749274	0		+=			
ANR	4750996	Identifier	psnamelen		4749274	0					
ANR	4750997	Identifier	alen		4749274	1					
ANR	4750998	ExpressionStatement	curr_arg = iter_args	1062:3:28761:28781	4749274	3	True				
ANR	4750999	AssignmentExpression	curr_arg = iter_args		4749274	0		=			
ANR	4751000	Identifier	curr_arg		4749274	0					
ANR	4751001	Identifier	iter_args		4749274	1					
ANR	4751002	ExpressionStatement	nargs --	1063:3:28786:28793	4749274	4	True				
ANR	4751003	PostIncDecOperationExpression	nargs --		4749274	0					
ANR	4751004	Identifier	nargs		4749274	0					
ANR	4751005	IncDec	--		4749274	1					
ANR	4751006	IfStatement	if ( curr_arg == start_args || nargs > 0 )		4749274	31					
ANR	4751007	Condition	curr_arg == start_args || nargs > 0	1072:5:29034:29068	4749274	0	True				
ANR	4751008	OrExpression	curr_arg == start_args || nargs > 0		4749274	0		||			
ANR	4751009	EqualityExpression	curr_arg == start_args		4749274	0		==			
ANR	4751010	Identifier	curr_arg		4749274	0					
ANR	4751011	Identifier	start_args		4749274	1					
ANR	4751012	RelationalExpression	nargs > 0		4749274	1		>			
ANR	4751013	Identifier	nargs		4749274	0					
ANR	4751014	PrimaryExpression	0		4749274	1					
ANR	4751015	CompoundStatement		334:42:10132:10132	4749274	1					
ANR	4751016	ExpressionStatement	psname [ 0 ] = 0	1073:2:29075:29088	4749274	0	True				
ANR	4751017	AssignmentExpression	psname [ 0 ] = 0		4749274	0		=			
ANR	4751018	ArrayIndexing	psname [ 0 ]		4749274	0					
ANR	4751019	Identifier	psname		4749274	0					
ANR	4751020	PrimaryExpression	0		4749274	1					
ANR	4751021	PrimaryExpression	0		4749274	1					
ANR	4751022	ExpressionStatement	free ( procargs )	1075:2:29147:29162	4749274	1	True				
ANR	4751023	CallExpression	free ( procargs )		4749274	0					
ANR	4751024	Callee	free		4749274	0					
ANR	4751025	Identifier	free		4749274	0					
ANR	4751026	ArgumentList	procargs		4749274	1					
ANR	4751027	Argument	procargs		4749274	0					
ANR	4751028	Identifier	procargs		4749274	0					
ANR	4751029	ReturnStatement	return NULL ;	1076:2:29166:29177	4749274	2	True				
ANR	4751030	Identifier	NULL		4749274	0					
ANR	4751031	ReturnStatement	"return r_debug_pid_new ( psname , pid , uid , 's' , 0 ) ;"	1079:1:29190:29239	4749274	32	True				
ANR	4751032	CallExpression	"r_debug_pid_new ( psname , pid , uid , 's' , 0 )"		4749274	0					
ANR	4751033	Callee	r_debug_pid_new		4749274	0					
ANR	4751034	Identifier	r_debug_pid_new		4749274	0					
ANR	4751035	ArgumentList	psname		4749274	1					
ANR	4751036	Argument	psname		4749274	0					
ANR	4751037	Identifier	psname		4749274	0					
ANR	4751038	Argument	pid		4749274	1					
ANR	4751039	Identifier	pid		4749274	0					
ANR	4751040	Argument	uid		4749274	2					
ANR	4751041	Identifier	uid		4749274	0					
ANR	4751042	Argument	's'		4749274	3					
ANR	4751043	PrimaryExpression	's'		4749274	0					
ANR	4751044	Argument	0		4749274	4					
ANR	4751045	PrimaryExpression	0		4749274	0					
ANR	4751046	IdentifierDeclStatement	"kern_return_t mach_vm_region_recurse ( vm_map_t target_task , mach_vm_address_t * address , mach_vm_size_t * size , natural_t * nesting_depth , vm_region_recurse_info_t info , mach_msg_type_number_t * infoCnt ) ;"	1082:0:29287:29494	4749274	111	True				
ANR	4751047	IdentifierDecl	"mach_vm_region_recurse ( vm_map_t target_task , mach_vm_address_t * address , mach_vm_size_t * size , natural_t * nesting_depth , vm_region_recurse_info_t info , mach_msg_type_number_t * infoCnt )"		4749274	0					
ANR	4751048	IdentifierDeclType	"kern_return_t ( vm_map_t target_task , mach_vm_address_t * address , mach_vm_size_t * size , natural_t * nesting_depth , vm_region_recurse_info_t info , mach_msg_type_number_t * infoCnt )"		4749274	0					
ANR	4751049	Identifier	mach_vm_region_recurse		4749274	1					
ANR	4751050	Identifier	address		4749274	2					
ANR	4751051	Identifier	size		4749274	3					
ANR	4751052	Identifier	nesting_depth		4749274	4					
ANR	4751053	Identifier	infoCnt		4749274	5					
ANR	4751054	Statement	static	1091:0:29497:29502	4749274	112	True				
ANR	4751055	Statement	const	1091:7:29504:29508	4749274	113	True				
ANR	4751056	Statement	char	1091:13:29510:29513	4749274	114	True				
ANR	4751057	Statement	*	1091:18:29515:29515	4749274	115	True				
ANR	4751058	Statement	unparse_inheritance	1091:20:29517:29535	4749274	116	True				
ANR	4751059	Statement	(	1091:40:29537:29537	4749274	117	True				
ANR	4751060	Statement	vm_inherit_t	1091:41:29538:29549	4749274	118	True				
ANR	4751061	Statement	i	1091:54:29551:29551	4749274	119	True				
ANR	4751062	Statement	)	1091:55:29552:29552	4749274	120	True				
ANR	4751063	CompoundStatement		353:57:10615:10615	4749274	121					
ANR	4751064	SwitchStatement	switch ( i )		4749274	0					
ANR	4751065	Condition	i	1092:9:29565:29565	4749274	0	True				
ANR	4751066	Identifier	i		4749274	0					
ANR	4751067	CompoundStatement		354:12:10629:10629	4749274	1					
ANR	4751068	Label	case VM_INHERIT_SHARE :	1093:1:29571:29592	4749274	0	True				
ANR	4751069	Identifier	VM_INHERIT_SHARE		4749274	0					
ANR	4751070	ReturnStatement	"return ""share"" ;"	1093:24:29594:29608	4749274	1	True				
ANR	4751071	PrimaryExpression	"""share"""		4749274	0					
ANR	4751072	Label	case VM_INHERIT_COPY :	1094:1:29611:29631	4749274	2	True				
ANR	4751073	Identifier	VM_INHERIT_COPY		4749274	0					
ANR	4751074	ReturnStatement	"return ""copy"" ;"	1094:23:29633:29646	4749274	3	True				
ANR	4751075	PrimaryExpression	"""copy"""		4749274	0					
ANR	4751076	Label	case VM_INHERIT_NONE :	1095:1:29649:29669	4749274	4	True				
ANR	4751077	Identifier	VM_INHERIT_NONE		4749274	0					
ANR	4751078	ReturnStatement	"return ""none"" ;"	1095:23:29671:29684	4749274	5	True				
ANR	4751079	PrimaryExpression	"""none"""		4749274	0					
ANR	4751080	Label	default :	1096:1:29687:29694	4749274	6	True				
ANR	4751081	Identifier	default		4749274	0					
ANR	4751082	ReturnStatement	"return ""???"" ;"	1096:10:29696:29708	4749274	7	True				
ANR	4751083	PrimaryExpression	"""???"""		4749274	0					
ANR	4751084	Statement	define	1101:1:29738:29743	4749274	122	True				
ANR	4751085	Statement	ADDR	1101:8:29745:29748	4749274	123	True				
ANR	4751086	Statement	"""%8x"""	1101:13:29750:29754	4749274	124	True				
ANR	4751087	Statement	define	1102:1:29757:29762	4749274	125	True				
ANR	4751088	Statement	HEADER_SIZE	1102:8:29764:29774	4749274	126	True				
ANR	4751089	Statement	0x1000	1102:20:29776:29781	4749274	127	True				
ANR	4751090	Statement	define	1103:1:29784:29789	4749274	128	True				
ANR	4751091	Statement	IMAGE_OFFSET	1103:8:29791:29802	4749274	129	True				
ANR	4751092	Statement	0x201000	1103:21:29804:29811	4749274	130	True				
ANR	4751093	Statement	define	1104:1:29814:29819	4749274	131	True				
ANR	4751094	Statement	KERNEL_LOWER	1104:8:29821:29832	4749274	132	True				
ANR	4751095	Statement	0x80000000	1104:21:29834:29843	4749274	133	True				
ANR	4751096	Statement	vm_address_t	1108:0:29875:29886	4749274	134	True				
ANR	4751097	Statement	get_kernel_base	1108:13:29888:29902	4749274	135	True				
ANR	4751098	Statement	(	1108:28:29903:29903	4749274	136	True				
ANR	4751099	Statement	task_t	1108:29:29904:29909	4749274	137	True				
ANR	4751100	Statement	___task	1108:36:29911:29917	4749274	138	True				
ANR	4751101	Statement	)	1108:43:29918:29918	4749274	139	True				
ANR	4751102	CompoundStatement		378:1:11236:11245	4749274	140					
ANR	4751103	IdentifierDeclStatement	mach_msg_type_number_t info_count = VM_REGION_SUBMAP_INFO_COUNT_64 ;	1109:1:29923:29989	4749274	0	True				
ANR	4751104	IdentifierDecl	info_count = VM_REGION_SUBMAP_INFO_COUNT_64		4749274	0					
ANR	4751105	IdentifierDeclType	mach_msg_type_number_t		4749274	0					
ANR	4751106	Identifier	info_count		4749274	1					
ANR	4751107	AssignmentExpression	info_count = VM_REGION_SUBMAP_INFO_COUNT_64		4749274	2		=			
ANR	4751108	Identifier	VM_REGION_SUBMAP_INFO_COUNT_64		4749274	0					
ANR	4751109	Identifier	VM_REGION_SUBMAP_INFO_COUNT_64		4749274	1					
ANR	4751110	IdentifierDeclStatement	vm_region_submap_info_data_64_t info ;	1110:1:29992:30028	4749274	1	True				
ANR	4751111	IdentifierDecl	info		4749274	0					
ANR	4751112	IdentifierDeclType	vm_region_submap_info_data_64_t		4749274	0					
ANR	4751113	Identifier	info		4749274	1					
ANR	4751114	IdentifierDeclStatement	"ut64 naddr , addr = KERNEL_LOWER ;"	1111:1:30031:30062	4749274	2	True				
ANR	4751115	IdentifierDecl	naddr		4749274	0					
ANR	4751116	IdentifierDeclType	ut64		4749274	0					
ANR	4751117	Identifier	naddr		4749274	1					
ANR	4751118	IdentifierDecl	addr = KERNEL_LOWER		4749274	1					
ANR	4751119	IdentifierDeclType	ut64		4749274	0					
ANR	4751120	Identifier	addr		4749274	1					
ANR	4751121	AssignmentExpression	addr = KERNEL_LOWER		4749274	2		=			
ANR	4751122	Identifier	KERNEL_LOWER		4749274	0					
ANR	4751123	Identifier	KERNEL_LOWER		4749274	1					
ANR	4751124	IdentifierDeclStatement	unsigned int depth = 0 ;	1112:1:30104:30126	4749274	3	True				
ANR	4751125	IdentifierDecl	depth = 0		4749274	0					
ANR	4751126	IdentifierDeclType	unsigned int		4749274	0					
ANR	4751127	Identifier	depth		4749274	1					
ANR	4751128	AssignmentExpression	depth = 0		4749274	2		=			
ANR	4751129	Identifier	depth		4749274	0					
ANR	4751130	PrimaryExpression	0		4749274	1					
ANR	4751131	IdentifierDeclStatement	kern_return_t ret ;	1113:1:30129:30146	4749274	4	True				
ANR	4751132	IdentifierDecl	ret		4749274	0					
ANR	4751133	IdentifierDeclType	kern_return_t		4749274	0					
ANR	4751134	Identifier	ret		4749274	1					
ANR	4751135	IdentifierDeclStatement	task_t task ;	1114:1:30149:30160	4749274	5	True				
ANR	4751136	IdentifierDecl	task		4749274	0					
ANR	4751137	IdentifierDeclType	task_t		4749274	0					
ANR	4751138	Identifier	task		4749274	1					
ANR	4751139	IdentifierDeclStatement	ut64 size ;	1115:1:30163:30172	4749274	6	True				
ANR	4751140	IdentifierDecl	size		4749274	0					
ANR	4751141	IdentifierDeclType	ut64		4749274	0					
ANR	4751142	Identifier	size		4749274	1					
ANR	4751143	IdentifierDeclStatement	int count ;	1116:1:30175:30184	4749274	7	True				
ANR	4751144	IdentifierDecl	count		4749274	0					
ANR	4751145	IdentifierDeclType	int		4749274	0					
ANR	4751146	Identifier	count		4749274	1					
ANR	4751147	ExpressionStatement	"ret = task_for_pid ( mach_task_self ( ) , 0 , & task )"	1118:1:30188:30235	4749274	8	True				
ANR	4751148	AssignmentExpression	"ret = task_for_pid ( mach_task_self ( ) , 0 , & task )"		4749274	0		=			
ANR	4751149	Identifier	ret		4749274	0					
ANR	4751150	CallExpression	"task_for_pid ( mach_task_self ( ) , 0 , & task )"		4749274	1					
ANR	4751151	Callee	task_for_pid		4749274	0					
ANR	4751152	Identifier	task_for_pid		4749274	0					
ANR	4751153	ArgumentList	mach_task_self ( )		4749274	1					
ANR	4751154	Argument	mach_task_self ( )		4749274	0					
ANR	4751155	CallExpression	mach_task_self ( )		4749274	0					
ANR	4751156	Callee	mach_task_self		4749274	0					
ANR	4751157	Identifier	mach_task_self		4749274	0					
ANR	4751158	ArgumentList			4749274	1					
ANR	4751159	Argument	0		4749274	1					
ANR	4751160	PrimaryExpression	0		4749274	0					
ANR	4751161	Argument	& task		4749274	2					
ANR	4751162	UnaryOperationExpression	& task		4749274	0					
ANR	4751163	UnaryOperator	&		4749274	0					
ANR	4751164	Identifier	task		4749274	1					
ANR	4751165	IfStatement	if ( ret != KERN_SUCCESS )		4749274	9					
ANR	4751166	Condition	ret != KERN_SUCCESS	1119:5:30242:30260	4749274	0	True				
ANR	4751167	EqualityExpression	ret != KERN_SUCCESS		4749274	0		!=			
ANR	4751168	Identifier	ret		4749274	0					
ANR	4751169	Identifier	KERN_SUCCESS		4749274	1					
ANR	4751170	CompoundStatement		381:26:11324:11324	4749274	1					
ANR	4751171	ReturnStatement	return 0 ;	1120:2:30267:30275	4749274	0	True				
ANR	4751172	PrimaryExpression	0		4749274	0					
ANR	4751173	ForStatement	for ( count = 128 ; count ; count -- )		4749274	10					
ANR	4751174	ForInit	count = 128 ;	1123:6:30329:30340	4749274	0	True				
ANR	4751175	AssignmentExpression	count = 128		4749274	0		=			
ANR	4751176	Identifier	count		4749274	0					
ANR	4751177	PrimaryExpression	128		4749274	1					
ANR	4751178	Condition	count	1123:19:30342:30346	4749274	1	True				
ANR	4751179	Identifier	count		4749274	0					
ANR	4751180	PostIncDecOperationExpression	count --	1123:26:30349:30355	4749274	2	True				
ANR	4751181	Identifier	count		4749274	0					
ANR	4751182	IncDec	--		4749274	1					
ANR	4751183	CompoundStatement		385:35:11419:11419	4749274	3					
ANR	4751184	ExpressionStatement	naddr = addr	1125:2:30390:30402	4749274	0	True				
ANR	4751185	AssignmentExpression	naddr = addr		4749274	0		=			
ANR	4751186	Identifier	naddr		4749274	0					
ANR	4751187	Identifier	addr		4749274	1					
ANR	4751188	ExpressionStatement	"ret = vm_region_recurse_64 ( task , ( vm_address_t * ) & naddr , ( vm_size_t * ) & size , & depth , ( vm_region_info_t ) & info , & info_count )"	1126:2:30406:30543	4749274	1	True				
ANR	4751189	AssignmentExpression	"ret = vm_region_recurse_64 ( task , ( vm_address_t * ) & naddr , ( vm_size_t * ) & size , & depth , ( vm_region_info_t ) & info , & info_count )"		4749274	0		=			
ANR	4751190	Identifier	ret		4749274	0					
ANR	4751191	CallExpression	"vm_region_recurse_64 ( task , ( vm_address_t * ) & naddr , ( vm_size_t * ) & size , & depth , ( vm_region_info_t ) & info , & info_count )"		4749274	1					
ANR	4751192	Callee	vm_region_recurse_64		4749274	0					
ANR	4751193	Identifier	vm_region_recurse_64		4749274	0					
ANR	4751194	ArgumentList	task		4749274	1					
ANR	4751195	Argument	task		4749274	0					
ANR	4751196	Identifier	task		4749274	0					
ANR	4751197	Argument	( vm_address_t * ) & naddr		4749274	1					
ANR	4751198	CastExpression	( vm_address_t * ) & naddr		4749274	0					
ANR	4751199	CastTarget	vm_address_t *		4749274	0					
ANR	4751200	UnaryOperationExpression	& naddr		4749274	1					
ANR	4751201	UnaryOperator	&		4749274	0					
ANR	4751202	Identifier	naddr		4749274	1					
ANR	4751203	Argument	( vm_size_t * ) & size		4749274	2					
ANR	4751204	CastExpression	( vm_size_t * ) & size		4749274	0					
ANR	4751205	CastTarget	vm_size_t *		4749274	0					
ANR	4751206	UnaryOperationExpression	& size		4749274	1					
ANR	4751207	UnaryOperator	&		4749274	0					
ANR	4751208	Identifier	size		4749274	1					
ANR	4751209	Argument	& depth		4749274	3					
ANR	4751210	UnaryOperationExpression	& depth		4749274	0					
ANR	4751211	UnaryOperator	&		4749274	0					
ANR	4751212	Identifier	depth		4749274	1					
ANR	4751213	Argument	( vm_region_info_t ) & info		4749274	4					
ANR	4751214	CastExpression	( vm_region_info_t ) & info		4749274	0					
ANR	4751215	CastTarget	vm_region_info_t		4749274	0					
ANR	4751216	UnaryOperationExpression	& info		4749274	1					
ANR	4751217	UnaryOperator	&		4749274	0					
ANR	4751218	Identifier	info		4749274	1					
ANR	4751219	Argument	& info_count		4749274	5					
ANR	4751220	UnaryOperationExpression	& info_count		4749274	0					
ANR	4751221	UnaryOperator	&		4749274	0					
ANR	4751222	Identifier	info_count		4749274	1					
ANR	4751223	IfStatement	if ( ret != KERN_SUCCESS )		4749274	2					
ANR	4751224	Condition	ret != KERN_SUCCESS	1129:6:30551:30569	4749274	0	True				
ANR	4751225	EqualityExpression	ret != KERN_SUCCESS		4749274	0		!=			
ANR	4751226	Identifier	ret		4749274	0					
ANR	4751227	Identifier	KERN_SUCCESS		4749274	1					
ANR	4751228	CompoundStatement		391:27:11633:11633	4749274	1					
ANR	4751229	BreakStatement	break ;	1130:3:30577:30582	4749274	0	True				
ANR	4751230	IfStatement	if ( size < 1 )		4749274	3					
ANR	4751231	Condition	size < 1	1132:6:30594:30601	4749274	0	True				
ANR	4751232	RelationalExpression	size < 1		4749274	0		<			
ANR	4751233	Identifier	size		4749274	0					
ANR	4751234	PrimaryExpression	1		4749274	1					
ANR	4751235	CompoundStatement		394:16:11665:11665	4749274	1					
ANR	4751236	BreakStatement	break ;	1133:3:30609:30614	4749274	0	True				
ANR	4751237	IfStatement	if ( addr == naddr )		4749274	4					
ANR	4751238	Condition	addr == naddr	1135:6:30626:30638	4749274	0	True				
ANR	4751239	EqualityExpression	addr == naddr		4749274	0		==			
ANR	4751240	Identifier	addr		4749274	0					
ANR	4751241	Identifier	naddr		4749274	1					
ANR	4751242	CompoundStatement		397:21:11702:11702	4749274	1					
ANR	4751243	ExpressionStatement	addr += size	1136:3:30646:30658	4749274	0	True				
ANR	4751244	AssignmentExpression	addr += size		4749274	0		+=			
ANR	4751245	Identifier	addr		4749274	0					
ANR	4751246	Identifier	size		4749274	1					
ANR	4751247	ContinueStatement	continue ;	1137:3:30663:30671	4749274	1	True				
ANR	4751248	Statement	eprintf	1139:2:30679:30685	4749274	5	True				
ANR	4751249	Statement	(	1139:10:30687:30687	4749274	6	True				
ANR	4751250	Statement	"""0x%08"""	1139:11:30688:30694	4749274	7	True				
ANR	4751251	Statement	PFMT64x	1139:18:30695:30701	4749274	8	True				
ANR	4751252	Statement	""" size 0x%08"""	1139:25:30702:30714	4749274	9	True				
ANR	4751253	Statement	PFMT64x	1139:38:30715:30721	4749274	10	True				
ANR	4751254	Statement	""" perm 0x%x\\n"""	1139:45:30722:30735	4749274	11	True				
ANR	4751255	Statement	","	1139:59:30736:30736	4749274	12	True				
ANR	4751256	Statement	(	1140:3:30741:30741	4749274	13	True				
ANR	4751257	Statement	ut64	1140:4:30742:30745	4749274	14	True				
ANR	4751258	Statement	)	1140:8:30746:30746	4749274	15	True				
ANR	4751259	Statement	addr	1140:9:30747:30750	4749274	16	True				
ANR	4751260	Statement	","	1140:13:30751:30751	4749274	17	True				
ANR	4751261	Statement	(	1140:15:30753:30753	4749274	18	True				
ANR	4751262	Statement	ut64	1140:16:30754:30757	4749274	19	True				
ANR	4751263	Statement	)	1140:20:30758:30758	4749274	20	True				
ANR	4751264	Statement	size	1140:21:30759:30762	4749274	21	True				
ANR	4751265	Statement	","	1140:25:30763:30763	4749274	22	True				
ANR	4751266	Statement	info	1140:27:30765:30768	4749274	23	True				
ANR	4751267	Statement	.	1140:31:30769:30769	4749274	24	True				
ANR	4751268	Statement	max_protection	1140:32:30770:30783	4749274	25	True				
ANR	4751269	Statement	)	1140:46:30784:30784	4749274	26	True				
ANR	4751270	ExpressionStatement		1140:47:30785:30785	4749274	27	True				
ANR	4751271	IfStatement	if ( size > 1024 * 1024 * 1024 )		4749274	28					
ANR	4751272	Condition	size > 1024 * 1024 * 1024	1143:6:30916:30940	4749274	0	True				
ANR	4751273	RelationalExpression	size > 1024 * 1024 * 1024		4749274	0		>			
ANR	4751274	Identifier	size		4749274	0					
ANR	4751275	MultiplicativeExpression	1024 * 1024 * 1024		4749274	1		*			
ANR	4751276	PrimaryExpression	1024		4749274	0					
ANR	4751277	MultiplicativeExpression	1024 * 1024		4749274	1		*			
ANR	4751278	PrimaryExpression	1024		4749274	0					
ANR	4751279	PrimaryExpression	1024		4749274	1					
ANR	4751280	CompoundStatement		405:33:12004:12004	4749274	1					
ANR	4751281	ReturnStatement	return addr + IMAGE_OFFSET ;	1144:3:30948:30974	4749274	0	True				
ANR	4751282	AdditiveExpression	addr + IMAGE_OFFSET		4749274	0		+			
ANR	4751283	Identifier	addr		4749274	0					
ANR	4751284	Identifier	IMAGE_OFFSET		4749274	1					
ANR	4751285	ExpressionStatement	addr += size	1146:2:30982:30994	4749274	29	True				
ANR	4751286	AssignmentExpression	addr += size		4749274	0		+=			
ANR	4751287	Identifier	addr		4749274	0					
ANR	4751288	Identifier	size		4749274	1					
ANR	4751289	ExpressionStatement	"ret = mach_port_deallocate ( mach_task_self ( ) , 0 )"	1148:1:31000:31049	4749274	11	True				
ANR	4751290	AssignmentExpression	"ret = mach_port_deallocate ( mach_task_self ( ) , 0 )"		4749274	0		=			
ANR	4751291	Identifier	ret		4749274	0					
ANR	4751292	CallExpression	"mach_port_deallocate ( mach_task_self ( ) , 0 )"		4749274	1					
ANR	4751293	Callee	mach_port_deallocate		4749274	0					
ANR	4751294	Identifier	mach_port_deallocate		4749274	0					
ANR	4751295	ArgumentList	mach_task_self ( )		4749274	1					
ANR	4751296	Argument	mach_task_self ( )		4749274	0					
ANR	4751297	CallExpression	mach_task_self ( )		4749274	0					
ANR	4751298	Callee	mach_task_self		4749274	0					
ANR	4751299	Identifier	mach_task_self		4749274	0					
ANR	4751300	ArgumentList			4749274	1					
ANR	4751301	Argument	0		4749274	1					
ANR	4751302	PrimaryExpression	0		4749274	0					
ANR	4751303	IfStatement	if ( ret != KERN_SUCCESS )		4749274	12					
ANR	4751304	Condition	ret != KERN_SUCCESS	1149:5:31056:31074	4749274	0	True				
ANR	4751305	EqualityExpression	ret != KERN_SUCCESS		4749274	0		!=			
ANR	4751306	Identifier	ret		4749274	0					
ANR	4751307	Identifier	KERN_SUCCESS		4749274	1					
ANR	4751308	CompoundStatement		411:26:12138:12138	4749274	1					
ANR	4751309	ExpressionStatement	"eprintf ( ""get_kernel_base: leaking kernel port\\n"" )"	1150:2:31081:31131	4749274	0	True				
ANR	4751310	CallExpression	"eprintf ( ""get_kernel_base: leaking kernel port\\n"" )"		4749274	0					
ANR	4751311	Callee	eprintf		4749274	0					
ANR	4751312	Identifier	eprintf		4749274	0					
ANR	4751313	ArgumentList	"""get_kernel_base: leaking kernel port\\n"""		4749274	1					
ANR	4751314	Argument	"""get_kernel_base: leaking kernel port\\n"""		4749274	0					
ANR	4751315	PrimaryExpression	"""get_kernel_base: leaking kernel port\\n"""		4749274	0					
ANR	4751316	ReturnStatement	return ( vm_address_t ) 0 ;	1152:1:31137:31159	4749274	13	True				
ANR	4751317	CastExpression	( vm_address_t ) 0		4749274	0					
ANR	4751318	CastTarget	vm_address_t		4749274	0					
ANR	4751319	PrimaryExpression	0		4749274	1					
ANR	4751320	Statement	static	1156:0:31223:31228	4749274	141	True				
ANR	4751321	Statement	int	1156:7:31230:31232	4749274	142	True				
ANR	4751322	Statement	mach0_size	1156:11:31234:31243	4749274	143	True				
ANR	4751323	Statement	(	1156:22:31245:31245	4749274	144	True				
ANR	4751324	Statement	RDebug	1156:23:31246:31251	4749274	145	True				
ANR	4751325	Statement	*	1156:30:31253:31253	4749274	146	True				
ANR	4751326	Statement	dbg	1156:31:31254:31256	4749274	147	True				
ANR	4751327	Statement	","	1156:34:31257:31257	4749274	148	True				
ANR	4751328	Statement	ut64	1156:36:31259:31262	4749274	149	True				
ANR	4751329	Statement	addr	1156:41:31264:31267	4749274	150	True				
ANR	4751330	Statement	)	1156:45:31268:31268	4749274	151	True				
ANR	4751331	CompoundStatement		418:47:12331:12331	4749274	152					
ANR	4751332	ReturnStatement	return 4096 ;	1157:1:31273:31284	4749274	0	True				
ANR	4751333	PrimaryExpression	4096		4749274	0					
ANR	4751334	Statement	static	1160:0:31289:31294	4749274	153	True				
ANR	4751335	Statement	void	1160:7:31296:31299	4749274	154	True				
ANR	4751336	Statement	xnu_map_free	1160:12:31301:31312	4749274	155	True				
ANR	4751337	Statement	(	1160:24:31313:31313	4749274	156	True				
ANR	4751338	Statement	RDebugMap	1160:25:31314:31322	4749274	157	True				
ANR	4751339	Statement	*	1160:35:31324:31324	4749274	158	True				
ANR	4751340	Statement	map	1160:36:31325:31327	4749274	159	True				
ANR	4751341	Statement	)	1160:39:31328:31328	4749274	160	True				
ANR	4751342	CompoundStatement		422:41:12391:12391	4749274	161					
ANR	4751343	IfStatement	if ( map )		4749274	0					
ANR	4751344	Condition	map	1161:5:31337:31339	4749274	0	True				
ANR	4751345	Identifier	map		4749274	0					
ANR	4751346	CompoundStatement		423:10:12403:12403	4749274	1					
ANR	4751347	ExpressionStatement	free ( map -> name )	1162:2:31346:31362	4749274	0	True				
ANR	4751348	CallExpression	free ( map -> name )		4749274	0					
ANR	4751349	Callee	free		4749274	0					
ANR	4751350	Identifier	free		4749274	0					
ANR	4751351	ArgumentList	map -> name		4749274	1					
ANR	4751352	Argument	map -> name		4749274	0					
ANR	4751353	PtrMemberAccess	map -> name		4749274	0					
ANR	4751354	Identifier	map		4749274	0					
ANR	4751355	Identifier	name		4749274	1					
ANR	4751356	ExpressionStatement	free ( map -> file )	1163:2:31366:31382	4749274	1	True				
ANR	4751357	CallExpression	free ( map -> file )		4749274	0					
ANR	4751358	Callee	free		4749274	0					
ANR	4751359	Identifier	free		4749274	0					
ANR	4751360	ArgumentList	map -> file		4749274	1					
ANR	4751361	Argument	map -> file		4749274	0					
ANR	4751362	PtrMemberAccess	map -> file		4749274	0					
ANR	4751363	Identifier	map		4749274	0					
ANR	4751364	Identifier	file		4749274	1					
ANR	4751365	ExpressionStatement	free ( map )	1164:2:31386:31396	4749274	2	True				
ANR	4751366	CallExpression	free ( map )		4749274	0					
ANR	4751367	Callee	free		4749274	0					
ANR	4751368	Identifier	free		4749274	0					
ANR	4751369	ArgumentList	map		4749274	1					
ANR	4751370	Argument	map		4749274	0					
ANR	4751371	Identifier	map		4749274	0					
ANR	4751372	Statement	static	1168:0:31404:31409	4749274	162	True				
ANR	4751373	Statement	RList	1168:7:31411:31415	4749274	163	True				
ANR	4751374	Statement	*	1168:13:31417:31417	4749274	164	True				
ANR	4751375	Statement	xnu_dbg_modules	1168:14:31418:31432	4749274	165	True				
ANR	4751376	Statement	(	1168:29:31433:31433	4749274	166	True				
ANR	4751377	Statement	RDebug	1168:30:31434:31439	4749274	167	True				
ANR	4751378	Statement	*	1168:37:31441:31441	4749274	168	True				
ANR	4751379	Statement	dbg	1168:38:31442:31444	4749274	169	True				
ANR	4751380	Statement	)	1168:41:31445:31445	4749274	170	True				
ANR	4751381	CompoundStatement		430:43:12508:12508	4749274	171					
ANR	4751382	Statement	warning	1170:1:31466:31472	4749274	0	True				
ANR	4751383	Label	TODO :	1170:9:31474:31478	4749274	1	True				
ANR	4751384	Identifier	TODO		4749274	0					
ANR	4751385	Statement	xnu_dbg_modules	1170:15:31480:31494	4749274	2	True				
ANR	4751386	Statement	not	1170:31:31496:31498	4749274	3	True				
ANR	4751387	Statement	supported	1170:35:31500:31508	4749274	4	True				
ANR	4751388	ReturnStatement	return NULL ;	1171:1:31511:31522	4749274	5	True				
ANR	4751389	Identifier	NULL		4749274	0					
ANR	4751390	Statement	static	1261:0:34137:34142	4749274	172	True				
ANR	4751391	Statement	RDebugMap	1261:7:34144:34152	4749274	173	True				
ANR	4751392	Statement	*	1261:17:34154:34154	4749274	174	True				
ANR	4751393	Statement	moduleAt	1261:18:34155:34162	4749274	175	True				
ANR	4751394	Statement	(	1261:26:34163:34163	4749274	176	True				
ANR	4751395	Statement	RList	1261:27:34164:34168	4749274	177	True				
ANR	4751396	Statement	*	1261:33:34170:34170	4749274	178	True				
ANR	4751397	Statement	list	1261:34:34171:34174	4749274	179	True				
ANR	4751398	Statement	","	1261:38:34175:34175	4749274	180	True				
ANR	4751399	Statement	ut64	1261:40:34177:34180	4749274	181	True				
ANR	4751400	Statement	addr	1261:45:34182:34185	4749274	182	True				
ANR	4751401	Statement	)	1261:49:34186:34186	4749274	183	True				
ANR	4751402	CompoundStatement		525:1:15270:15284	4749274	184					
ANR	4751403	IdentifierDeclStatement	RListIter * iter ;	1262:1:34191:34206	4749274	0	True				
ANR	4751404	IdentifierDecl	* iter		4749274	0					
ANR	4751405	IdentifierDeclType	RListIter *		4749274	0					
ANR	4751406	Identifier	iter		4749274	1					
ANR	4751407	IdentifierDeclStatement	RDebugMap * map ;	1263:1:34209:34223	4749274	1	True				
ANR	4751408	IdentifierDecl	* map		4749274	0					
ANR	4751409	IdentifierDeclType	RDebugMap *		4749274	0					
ANR	4751410	Identifier	map		4749274	1					
ANR	4751411	Statement	r_list_foreach	1264:1:34226:34239	4749274	2	True				
ANR	4751412	Statement	(	1264:16:34241:34241	4749274	3	True				
ANR	4751413	Statement	list	1264:17:34242:34245	4749274	4	True				
ANR	4751414	Statement	","	1264:21:34246:34246	4749274	5	True				
ANR	4751415	Statement	iter	1264:23:34248:34251	4749274	6	True				
ANR	4751416	Statement	","	1264:27:34252:34252	4749274	7	True				
ANR	4751417	Statement	map	1264:29:34254:34256	4749274	8	True				
ANR	4751418	Statement	)	1264:32:34257:34257	4749274	9	True				
ANR	4751419	CompoundStatement		526:34:15320:15320	4749274	10					
ANR	4751420	IfStatement	"if ( R_BETWEEN ( map -> addr , addr , map -> addr_end ) )"		4749274	0					
ANR	4751421	Condition	"R_BETWEEN ( map -> addr , addr , map -> addr_end )"	1265:6:34267:34308	4749274	0	True				
ANR	4751422	CallExpression	"R_BETWEEN ( map -> addr , addr , map -> addr_end )"		4749274	0					
ANR	4751423	Callee	R_BETWEEN		4749274	0					
ANR	4751424	Identifier	R_BETWEEN		4749274	0					
ANR	4751425	ArgumentList	map -> addr		4749274	1					
ANR	4751426	Argument	map -> addr		4749274	0					
ANR	4751427	PtrMemberAccess	map -> addr		4749274	0					
ANR	4751428	Identifier	map		4749274	0					
ANR	4751429	Identifier	addr		4749274	1					
ANR	4751430	Argument	addr		4749274	1					
ANR	4751431	Identifier	addr		4749274	0					
ANR	4751432	Argument	map -> addr_end		4749274	2					
ANR	4751433	PtrMemberAccess	map -> addr_end		4749274	0					
ANR	4751434	Identifier	map		4749274	0					
ANR	4751435	Identifier	addr_end		4749274	1					
ANR	4751436	CompoundStatement		527:50:15372:15372	4749274	1					
ANR	4751437	ReturnStatement	return map ;	1266:3:34316:34326	4749274	0	True				
ANR	4751438	Identifier	map		4749274	0					
ANR	4751439	ReturnStatement	return NULL ;	1269:1:34336:34347	4749274	11	True				
ANR	4751440	Identifier	NULL		4749274	0					
ANR	4751441	Statement	static	1272:0:34352:34357	4749274	185	True				
ANR	4751442	Statement	int	1272:7:34359:34361	4749274	186	True				
ANR	4751443	Statement	cmp	1272:11:34363:34365	4749274	187	True				
ANR	4751444	Statement	(	1272:15:34367:34367	4749274	188	True				
ANR	4751445	Statement	const	1272:16:34368:34372	4749274	189	True				
ANR	4751446	Statement	void	1272:22:34374:34377	4749274	190	True				
ANR	4751447	Statement	*	1272:27:34379:34379	4749274	191	True				
ANR	4751448	Statement	_a	1272:28:34380:34381	4749274	192	True				
ANR	4751449	Statement	","	1272:30:34382:34382	4749274	193	True				
ANR	4751450	Statement	const	1272:32:34384:34388	4749274	194	True				
ANR	4751451	Statement	void	1272:38:34390:34393	4749274	195	True				
ANR	4751452	Statement	*	1272:43:34395:34395	4749274	196	True				
ANR	4751453	Statement	_b	1272:44:34396:34397	4749274	197	True				
ANR	4751454	Statement	)	1272:46:34398:34398	4749274	198	True				
ANR	4751455	CompoundStatement		536:1:15490:15513	4749274	199					
ANR	4751456	IdentifierDeclStatement	const RDebugMap * a = _a ;	1273:1:34403:34426	4749274	0	True				
ANR	4751457	IdentifierDecl	* a = _a		4749274	0					
ANR	4751458	IdentifierDeclType	const RDebugMap *		4749274	0					
ANR	4751459	Identifier	a		4749274	1					
ANR	4751460	AssignmentExpression	* a = _a		4749274	2		=			
ANR	4751461	Identifier	_a		4749274	0					
ANR	4751462	Identifier	_a		4749274	1					
ANR	4751463	IdentifierDeclStatement	const RDebugMap * b = _b ;	1274:1:34429:34452	4749274	1	True				
ANR	4751464	IdentifierDecl	* b = _b		4749274	0					
ANR	4751465	IdentifierDeclType	const RDebugMap *		4749274	0					
ANR	4751466	Identifier	b		4749274	1					
ANR	4751467	AssignmentExpression	* b = _b		4749274	2		=			
ANR	4751468	Identifier	_b		4749274	0					
ANR	4751469	Identifier	_b		4749274	1					
ANR	4751470	IfStatement	if ( a -> addr > b -> addr )		4749274	2					
ANR	4751471	Condition	a -> addr > b -> addr	1275:5:34459:34475	4749274	0	True				
ANR	4751472	RelationalExpression	a -> addr > b -> addr		4749274	0		>			
ANR	4751473	PtrMemberAccess	a -> addr		4749274	0					
ANR	4751474	Identifier	a		4749274	0					
ANR	4751475	Identifier	addr		4749274	1					
ANR	4751476	PtrMemberAccess	b -> addr		4749274	1					
ANR	4751477	Identifier	b		4749274	0					
ANR	4751478	Identifier	addr		4749274	1					
ANR	4751479	CompoundStatement		537:24:15539:15539	4749274	1					
ANR	4751480	ReturnStatement	return 1 ;	1276:2:34482:34490	4749274	0	True				
ANR	4751481	PrimaryExpression	1		4749274	0					
ANR	4751482	IfStatement	if ( a -> addr < b -> addr )		4749274	3					
ANR	4751483	Condition	a -> addr < b -> addr	1278:5:34500:34516	4749274	0	True				
ANR	4751484	RelationalExpression	a -> addr < b -> addr		4749274	0		<			
ANR	4751485	PtrMemberAccess	a -> addr		4749274	0					
ANR	4751486	Identifier	a		4749274	0					
ANR	4751487	Identifier	addr		4749274	1					
ANR	4751488	PtrMemberAccess	b -> addr		4749274	1					
ANR	4751489	Identifier	b		4749274	0					
ANR	4751490	Identifier	addr		4749274	1					
ANR	4751491	CompoundStatement		540:24:15580:15580	4749274	1					
ANR	4751492	ReturnStatement	return - 1 ;	1279:2:34523:34532	4749274	0	True				
ANR	4751493	UnaryOperationExpression	- 1		4749274	0					
ANR	4751494	UnaryOperator	-		4749274	0					
ANR	4751495	PrimaryExpression	1		4749274	1					
ANR	4751496	ReturnStatement	return 0 ;	1281:1:34538:34546	4749274	4	True				
ANR	4751497	PrimaryExpression	0		4749274	0					
ANR	4751498	Statement	static	1284:0:34551:34556	4749274	200	True				
ANR	4751499	Statement	RDebugMap	1284:7:34558:34566	4749274	201	True				
ANR	4751500	Statement	*	1284:17:34568:34568	4749274	202	True				
ANR	4751501	Statement	r_debug_map_clone	1284:18:34569:34585	4749274	203	True				
ANR	4751502	Statement	(	1284:36:34587:34587	4749274	204	True				
ANR	4751503	Statement	RDebugMap	1284:37:34588:34596	4749274	205	True				
ANR	4751504	Statement	*	1284:47:34598:34598	4749274	206	True				
ANR	4751505	Statement	m	1284:48:34599:34599	4749274	207	True				
ANR	4751506	Statement	)	1284:49:34600:34600	4749274	208	True				
ANR	4751507	CompoundStatement		547:1:15666:15707	4749274	209					
ANR	4751508	IdentifierDeclStatement	"RDebugMap * map = R_NEWCOPY ( RDebugMap , m ) ;"	1285:1:34605:34646	4749274	0	True				
ANR	4751509	IdentifierDecl	"* map = R_NEWCOPY ( RDebugMap , m )"		4749274	0					
ANR	4751510	IdentifierDeclType	RDebugMap *		4749274	0					
ANR	4751511	Identifier	map		4749274	1					
ANR	4751512	AssignmentExpression	"* map = R_NEWCOPY ( RDebugMap , m )"		4749274	2		=			
ANR	4751513	Identifier	map		4749274	0					
ANR	4751514	CallExpression	"R_NEWCOPY ( RDebugMap , m )"		4749274	1					
ANR	4751515	Callee	R_NEWCOPY		4749274	0					
ANR	4751516	Identifier	R_NEWCOPY		4749274	0					
ANR	4751517	ArgumentList	RDebugMap		4749274	1					
ANR	4751518	Argument	RDebugMap		4749274	0					
ANR	4751519	Identifier	RDebugMap		4749274	0					
ANR	4751520	Argument	m		4749274	1					
ANR	4751521	Identifier	m		4749274	0					
ANR	4751522	IfStatement	if ( m -> name )		4749274	1					
ANR	4751523	Condition	m -> name	1287:5:34694:34700	4749274	0	True				
ANR	4751524	PtrMemberAccess	m -> name		4749274	0					
ANR	4751525	Identifier	m		4749274	0					
ANR	4751526	Identifier	name		4749274	1					
ANR	4751527	CompoundStatement		549:14:15764:15764	4749274	1					
ANR	4751528	ExpressionStatement	map -> name = strdup ( m -> name )	1288:2:34707:34735	4749274	0	True				
ANR	4751529	AssignmentExpression	map -> name = strdup ( m -> name )		4749274	0		=			
ANR	4751530	PtrMemberAccess	map -> name		4749274	0					
ANR	4751531	Identifier	map		4749274	0					
ANR	4751532	Identifier	name		4749274	1					
ANR	4751533	CallExpression	strdup ( m -> name )		4749274	1					
ANR	4751534	Callee	strdup		4749274	0					
ANR	4751535	Identifier	strdup		4749274	0					
ANR	4751536	ArgumentList	m -> name		4749274	1					
ANR	4751537	Argument	m -> name		4749274	0					
ANR	4751538	PtrMemberAccess	m -> name		4749274	0					
ANR	4751539	Identifier	m		4749274	0					
ANR	4751540	Identifier	name		4749274	1					
ANR	4751541	IfStatement	if ( m -> file )		4749274	2					
ANR	4751542	Condition	m -> file	1290:5:34745:34751	4749274	0	True				
ANR	4751543	PtrMemberAccess	m -> file		4749274	0					
ANR	4751544	Identifier	m		4749274	0					
ANR	4751545	Identifier	file		4749274	1					
ANR	4751546	CompoundStatement		552:14:15815:15815	4749274	1					
ANR	4751547	ExpressionStatement	map -> file = strdup ( m -> file )	1291:2:34758:34786	4749274	0	True				
ANR	4751548	AssignmentExpression	map -> file = strdup ( m -> file )		4749274	0		=			
ANR	4751549	PtrMemberAccess	map -> file		4749274	0					
ANR	4751550	Identifier	map		4749274	0					
ANR	4751551	Identifier	file		4749274	1					
ANR	4751552	CallExpression	strdup ( m -> file )		4749274	1					
ANR	4751553	Callee	strdup		4749274	0					
ANR	4751554	Identifier	strdup		4749274	0					
ANR	4751555	ArgumentList	m -> file		4749274	1					
ANR	4751556	Argument	m -> file		4749274	0					
ANR	4751557	PtrMemberAccess	m -> file		4749274	0					
ANR	4751558	Identifier	m		4749274	0					
ANR	4751559	Identifier	file		4749274	1					
ANR	4751560	ReturnStatement	return map ;	1293:1:34792:34802	4749274	3	True				
ANR	4751561	Identifier	map		4749274	0					
ANR	4751562	Statement	RList	1296:0:34807:34811	4749274	210	True				
ANR	4751563	Statement	*	1296:6:34813:34813	4749274	211	True				
ANR	4751564	Statement	xnu_dbg_maps	1296:7:34814:34825	4749274	212	True				
ANR	4751565	Statement	(	1296:19:34826:34826	4749274	213	True				
ANR	4751566	Statement	RDebug	1296:20:34827:34832	4749274	214	True				
ANR	4751567	Statement	*	1296:27:34834:34834	4749274	215	True				
ANR	4751568	Statement	dbg	1296:28:34835:34837	4749274	216	True				
ANR	4751569	Statement	","	1296:31:34838:34838	4749274	217	True				
ANR	4751570	Statement	int	1296:33:34840:34842	4749274	218	True				
ANR	4751571	Statement	only_modules	1296:37:34844:34855	4749274	219	True				
ANR	4751572	Statement	)	1296:49:34856:34856	4749274	220	True				
ANR	4751573	CompoundStatement		672:1:18654:18666	4749274	221					
ANR	4751574	IdentifierDeclStatement	char buf [ 1024 ] ;	1300:1:34948:34962	4749274	0	True				
ANR	4751575	IdentifierDecl	buf [ 1024 ]		4749274	0					
ANR	4751576	IdentifierDeclType	char [ 1024 ]		4749274	0					
ANR	4751577	Identifier	buf		4749274	1					
ANR	4751578	PrimaryExpression	1024		4749274	2					
ANR	4751579	IdentifierDeclStatement	char module_name [ MAXPATHLEN ] ;	1301:1:34965:34993	4749274	1	True				
ANR	4751580	IdentifierDecl	module_name [ MAXPATHLEN ]		4749274	0					
ANR	4751581	IdentifierDeclType	char [ MAXPATHLEN ]		4749274	0					
ANR	4751582	Identifier	module_name		4749274	1					
ANR	4751583	Identifier	MAXPATHLEN		4749274	2					
ANR	4751584	IdentifierDeclStatement	mach_vm_address_t address = MACH_VM_MIN_ADDRESS ;	1302:1:34996:35043	4749274	2	True				
ANR	4751585	IdentifierDecl	address = MACH_VM_MIN_ADDRESS		4749274	0					
ANR	4751586	IdentifierDeclType	mach_vm_address_t		4749274	0					
ANR	4751587	Identifier	address		4749274	1					
ANR	4751588	AssignmentExpression	address = MACH_VM_MIN_ADDRESS		4749274	2		=			
ANR	4751589	Identifier	MACH_VM_MIN_ADDRESS		4749274	0					
ANR	4751590	Identifier	MACH_VM_MIN_ADDRESS		4749274	1					
ANR	4751591	IdentifierDeclStatement	mach_vm_size_t size = ( mach_vm_size_t ) 0 ;	1303:1:35046:35086	4749274	3	True				
ANR	4751592	IdentifierDecl	size = ( mach_vm_size_t ) 0		4749274	0					
ANR	4751593	IdentifierDeclType	mach_vm_size_t		4749274	0					
ANR	4751594	Identifier	size		4749274	1					
ANR	4751595	AssignmentExpression	size = ( mach_vm_size_t ) 0		4749274	2		=			
ANR	4751596	Identifier	size		4749274	0					
ANR	4751597	CastExpression	( mach_vm_size_t ) 0		4749274	1					
ANR	4751598	CastTarget	mach_vm_size_t		4749274	0					
ANR	4751599	PrimaryExpression	0		4749274	1					
ANR	4751600	IdentifierDeclStatement	mach_vm_size_t osize = ( mach_vm_size_t ) 0 ;	1304:1:35089:35130	4749274	4	True				
ANR	4751601	IdentifierDecl	osize = ( mach_vm_size_t ) 0		4749274	0					
ANR	4751602	IdentifierDeclType	mach_vm_size_t		4749274	0					
ANR	4751603	Identifier	osize		4749274	1					
ANR	4751604	AssignmentExpression	osize = ( mach_vm_size_t ) 0		4749274	2		=			
ANR	4751605	Identifier	osize		4749274	0					
ANR	4751606	CastExpression	( mach_vm_size_t ) 0		4749274	1					
ANR	4751607	CastTarget	mach_vm_size_t		4749274	0					
ANR	4751608	PrimaryExpression	0		4749274	1					
ANR	4751609	IdentifierDeclStatement	natural_t depth = 0 ;	1305:1:35133:35152	4749274	5	True				
ANR	4751610	IdentifierDecl	depth = 0		4749274	0					
ANR	4751611	IdentifierDeclType	natural_t		4749274	0					
ANR	4751612	Identifier	depth		4749274	1					
ANR	4751613	AssignmentExpression	depth = 0		4749274	2		=			
ANR	4751614	Identifier	depth		4749274	0					
ANR	4751615	PrimaryExpression	0		4749274	1					
ANR	4751616	IdentifierDeclStatement	int tid = dbg -> pid ;	1306:1:35155:35173	4749274	6	True				
ANR	4751617	IdentifierDecl	tid = dbg -> pid		4749274	0					
ANR	4751618	IdentifierDeclType	int		4749274	0					
ANR	4751619	Identifier	tid		4749274	1					
ANR	4751620	AssignmentExpression	tid = dbg -> pid		4749274	2		=			
ANR	4751621	Identifier	tid		4749274	0					
ANR	4751622	PtrMemberAccess	dbg -> pid		4749274	1					
ANR	4751623	Identifier	dbg		4749274	0					
ANR	4751624	Identifier	pid		4749274	1					
ANR	4751625	IdentifierDeclStatement	task_t task = pid_to_task ( tid ) ;	1307:1:35176:35207	4749274	7	True				
ANR	4751626	IdentifierDecl	task = pid_to_task ( tid )		4749274	0					
ANR	4751627	IdentifierDeclType	task_t		4749274	0					
ANR	4751628	Identifier	task		4749274	1					
ANR	4751629	AssignmentExpression	task = pid_to_task ( tid )		4749274	2		=			
ANR	4751630	Identifier	task		4749274	0					
ANR	4751631	CallExpression	pid_to_task ( tid )		4749274	1					
ANR	4751632	Callee	pid_to_task		4749274	0					
ANR	4751633	Identifier	pid_to_task		4749274	0					
ANR	4751634	ArgumentList	tid		4749274	1					
ANR	4751635	Argument	tid		4749274	0					
ANR	4751636	Identifier	tid		4749274	0					
ANR	4751637	IdentifierDeclStatement	RDebugMap * mr = NULL ;	1308:1:35210:35230	4749274	8	True				
ANR	4751638	IdentifierDecl	* mr = NULL		4749274	0					
ANR	4751639	IdentifierDeclType	RDebugMap *		4749274	0					
ANR	4751640	Identifier	mr		4749274	1					
ANR	4751641	AssignmentExpression	* mr = NULL		4749274	2		=			
ANR	4751642	Identifier	NULL		4749274	0					
ANR	4751643	Identifier	NULL		4749274	1					
ANR	4751644	IdentifierDeclStatement	int i = 0 ;	1309:1:35233:35242	4749274	9	True				
ANR	4751645	IdentifierDecl	i = 0		4749274	0					
ANR	4751646	IdentifierDeclType	int		4749274	0					
ANR	4751647	Identifier	i		4749274	1					
ANR	4751648	AssignmentExpression	i = 0		4749274	2		=			
ANR	4751649	Identifier	i		4749274	0					
ANR	4751650	PrimaryExpression	0		4749274	1					
ANR	4751651	IfStatement	if ( ! task )		4749274	10					
ANR	4751652	Condition	! task	1311:5:35250:35254	4749274	0	True				
ANR	4751653	UnaryOperationExpression	! task		4749274	0					
ANR	4751654	UnaryOperator	!		4749274	0					
ANR	4751655	Identifier	task		4749274	1					
ANR	4751656	CompoundStatement		573:12:16318:16318	4749274	1					
ANR	4751657	ReturnStatement	return NULL ;	1312:2:35261:35272	4749274	0	True				
ANR	4751658	Identifier	NULL		4749274	0					
ANR	4751659	IdentifierDeclStatement	RList * modules = xnu_dbg_modules ( dbg ) ;	1314:1:35278:35316	4749274	11	True				
ANR	4751660	IdentifierDecl	* modules = xnu_dbg_modules ( dbg )		4749274	0					
ANR	4751661	IdentifierDeclType	RList *		4749274	0					
ANR	4751662	Identifier	modules		4749274	1					
ANR	4751663	AssignmentExpression	* modules = xnu_dbg_modules ( dbg )		4749274	2		=			
ANR	4751664	Identifier	modules		4749274	0					
ANR	4751665	CallExpression	xnu_dbg_modules ( dbg )		4749274	1					
ANR	4751666	Callee	xnu_dbg_modules		4749274	0					
ANR	4751667	Identifier	xnu_dbg_modules		4749274	0					
ANR	4751668	ArgumentList	dbg		4749274	1					
ANR	4751669	Argument	dbg		4749274	0					
ANR	4751670	Identifier	dbg		4749274	0					
ANR	4751671	IfStatement	if ( only_modules )		4749274	12					
ANR	4751672	Condition	only_modules	1315:5:35323:35334	4749274	0	True				
ANR	4751673	Identifier	only_modules		4749274	0					
ANR	4751674	CompoundStatement		577:19:16398:16398	4749274	1					
ANR	4751675	ReturnStatement	return modules ;	1316:2:35341:35355	4749274	0	True				
ANR	4751676	Identifier	modules		4749274	0					
ANR	4751677	ExpressionStatement	size = osize = 16384	1319:1:35390:35410	4749274	13	True				
ANR	4751678	AssignmentExpression	size = osize = 16384		4749274	0		=			
ANR	4751679	Identifier	size		4749274	0					
ANR	4751680	AssignmentExpression	osize = 16384		4749274	1		=			
ANR	4751681	Identifier	osize		4749274	0					
ANR	4751682	PrimaryExpression	16384		4749274	1					
ANR	4751683	IfStatement	if ( dbg -> pid == 0 )		4749274	14					
ANR	4751684	Condition	dbg -> pid == 0	1324:5:35458:35470	4749274	0	True				
ANR	4751685	EqualityExpression	dbg -> pid == 0		4749274	0		==			
ANR	4751686	PtrMemberAccess	dbg -> pid		4749274	0					
ANR	4751687	Identifier	dbg		4749274	0					
ANR	4751688	Identifier	pid		4749274	1					
ANR	4751689	PrimaryExpression	0		4749274	1					
ANR	4751690	CompoundStatement		587:2:16538:16580	4749274	1					
ANR	4751691	IdentifierDeclStatement	vm_address_t base = get_kernel_base ( task ) ;	1325:2:35477:35519	4749274	0	True				
ANR	4751692	IdentifierDecl	base = get_kernel_base ( task )		4749274	0					
ANR	4751693	IdentifierDeclType	vm_address_t		4749274	0					
ANR	4751694	Identifier	base		4749274	1					
ANR	4751695	AssignmentExpression	base = get_kernel_base ( task )		4749274	2		=			
ANR	4751696	Identifier	base		4749274	0					
ANR	4751697	CallExpression	get_kernel_base ( task )		4749274	1					
ANR	4751698	Callee	get_kernel_base		4749274	0					
ANR	4751699	Identifier	get_kernel_base		4749274	0					
ANR	4751700	ArgumentList	task		4749274	1					
ANR	4751701	Argument	task		4749274	0					
ANR	4751702	Identifier	task		4749274	0					
ANR	4751703	Statement	eprintf	1326:2:35523:35529	4749274	1	True				
ANR	4751704	Statement	(	1326:10:35531:35531	4749274	2	True				
ANR	4751705	Statement	"""Kernel Base Address: 0x%"""	1326:11:35532:35557	4749274	3	True				
ANR	4751706	Statement	PFMT64x	1326:37:35558:35564	4749274	4	True				
ANR	4751707	Statement	"""\\n"""	1326:44:35565:35568	4749274	5	True				
ANR	4751708	Statement	","	1326:48:35569:35569	4749274	6	True				
ANR	4751709	Statement	(	1326:50:35571:35571	4749274	7	True				
ANR	4751710	Statement	ut64	1326:51:35572:35575	4749274	8	True				
ANR	4751711	Statement	)	1326:55:35576:35576	4749274	9	True				
ANR	4751712	Statement	base	1326:56:35577:35580	4749274	10	True				
ANR	4751713	Statement	)	1326:60:35581:35581	4749274	11	True				
ANR	4751714	ExpressionStatement		1326:61:35582:35582	4749274	12	True				
ANR	4751715	ReturnStatement	return NULL ;	1327:2:35586:35597	4749274	13	True				
ANR	4751716	Identifier	NULL		4749274	0					
ANR	4751717	IdentifierDeclStatement	RList * list = r_list_new ( ) ;	1330:1:35610:35637	4749274	15	True				
ANR	4751718	IdentifierDecl	* list = r_list_new ( )		4749274	0					
ANR	4751719	IdentifierDeclType	RList *		4749274	0					
ANR	4751720	Identifier	list		4749274	1					
ANR	4751721	AssignmentExpression	* list = r_list_new ( )		4749274	2		=			
ANR	4751722	Identifier	list		4749274	0					
ANR	4751723	CallExpression	r_list_new ( )		4749274	1					
ANR	4751724	Callee	r_list_new		4749274	0					
ANR	4751725	Identifier	r_list_new		4749274	0					
ANR	4751726	ArgumentList			4749274	1					
ANR	4751727	IfStatement	if ( ! list )		4749274	16					
ANR	4751728	Condition	! list	1331:5:35644:35648	4749274	0	True				
ANR	4751729	UnaryOperationExpression	! list		4749274	0					
ANR	4751730	UnaryOperator	!		4749274	0					
ANR	4751731	Identifier	list		4749274	1					
ANR	4751732	CompoundStatement		593:12:16712:16712	4749274	1					
ANR	4751733	ReturnStatement	return NULL ;	1332:2:35655:35666	4749274	0	True				
ANR	4751734	Identifier	NULL		4749274	0					
ANR	4751735	ExpressionStatement	list -> free = ( RListFree ) xnu_map_free	1334:1:35672:35708	4749274	17	True				
ANR	4751736	AssignmentExpression	list -> free = ( RListFree ) xnu_map_free		4749274	0		=			
ANR	4751737	PtrMemberAccess	list -> free		4749274	0					
ANR	4751738	Identifier	list		4749274	0					
ANR	4751739	Identifier	free		4749274	1					
ANR	4751740	CastExpression	( RListFree ) xnu_map_free		4749274	1					
ANR	4751741	CastTarget	RListFree		4749274	0					
ANR	4751742	Identifier	xnu_map_free		4749274	1					
ANR	4751743	ForStatement	for ( ; ; )		4749274	18					
ANR	4751744	CompoundStatement		600:2:16901:17026	4749274	0					
ANR	4751745	IdentifierDeclStatement	struct vm_region_submap_info_64 info = { 0 } ;	1336:2:35724:35766	4749274	0	True				
ANR	4751746	IdentifierDecl	info = { 0 }		4749274	0					
ANR	4751747	IdentifierDeclType	struct vm_region_submap_info_64		4749274	0					
ANR	4751748	Identifier	info		4749274	1					
ANR	4751749	AssignmentExpression	info = { 0 }		4749274	2		=			
ANR	4751750	Identifier	info		4749274	0					
ANR	4751751	InitializerList	0		4749274	1					
ANR	4751752	PrimaryExpression	0		4749274	0					
ANR	4751753	IdentifierDeclStatement	mach_msg_type_number_t info_count = VM_REGION_SUBMAP_INFO_COUNT_64 ;	1337:2:35770:35836	4749274	1	True				
ANR	4751754	IdentifierDecl	info_count = VM_REGION_SUBMAP_INFO_COUNT_64		4749274	0					
ANR	4751755	IdentifierDeclType	mach_msg_type_number_t		4749274	0					
ANR	4751756	Identifier	info_count		4749274	1					
ANR	4751757	AssignmentExpression	info_count = VM_REGION_SUBMAP_INFO_COUNT_64		4749274	2		=			
ANR	4751758	Identifier	VM_REGION_SUBMAP_INFO_COUNT_64		4749274	0					
ANR	4751759	Identifier	VM_REGION_SUBMAP_INFO_COUNT_64		4749274	1					
ANR	4751760	IdentifierDeclStatement	"kern_return_t kr = mach_vm_region_recurse ( task , & address , & size , & depth , ( vm_region_recurse_info_t ) & info , & info_count ) ;"	1338:2:35840:35965	4749274	2	True				
ANR	4751761	IdentifierDecl	"kr = mach_vm_region_recurse ( task , & address , & size , & depth , ( vm_region_recurse_info_t ) & info , & info_count )"		4749274	0					
ANR	4751762	IdentifierDeclType	kern_return_t		4749274	0					
ANR	4751763	Identifier	kr		4749274	1					
ANR	4751764	AssignmentExpression	"kr = mach_vm_region_recurse ( task , & address , & size , & depth , ( vm_region_recurse_info_t ) & info , & info_count )"		4749274	2		=			
ANR	4751765	Identifier	kr		4749274	0					
ANR	4751766	CallExpression	"mach_vm_region_recurse ( task , & address , & size , & depth , ( vm_region_recurse_info_t ) & info , & info_count )"		4749274	1					
ANR	4751767	Callee	mach_vm_region_recurse		4749274	0					
ANR	4751768	Identifier	mach_vm_region_recurse		4749274	0					
ANR	4751769	ArgumentList	task		4749274	1					
ANR	4751770	Argument	task		4749274	0					
ANR	4751771	Identifier	task		4749274	0					
ANR	4751772	Argument	& address		4749274	1					
ANR	4751773	UnaryOperationExpression	& address		4749274	0					
ANR	4751774	UnaryOperator	&		4749274	0					
ANR	4751775	Identifier	address		4749274	1					
ANR	4751776	Argument	& size		4749274	2					
ANR	4751777	UnaryOperationExpression	& size		4749274	0					
ANR	4751778	UnaryOperator	&		4749274	0					
ANR	4751779	Identifier	size		4749274	1					
ANR	4751780	Argument	& depth		4749274	3					
ANR	4751781	UnaryOperationExpression	& depth		4749274	0					
ANR	4751782	UnaryOperator	&		4749274	0					
ANR	4751783	Identifier	depth		4749274	1					
ANR	4751784	Argument	( vm_region_recurse_info_t ) & info		4749274	4					
ANR	4751785	CastExpression	( vm_region_recurse_info_t ) & info		4749274	0					
ANR	4751786	CastTarget	vm_region_recurse_info_t		4749274	0					
ANR	4751787	UnaryOperationExpression	& info		4749274	1					
ANR	4751788	UnaryOperator	&		4749274	0					
ANR	4751789	Identifier	info		4749274	1					
ANR	4751790	Argument	& info_count		4749274	5					
ANR	4751791	UnaryOperationExpression	& info_count		4749274	0					
ANR	4751792	UnaryOperator	&		4749274	0					
ANR	4751793	Identifier	info_count		4749274	1					
ANR	4751794	IfStatement	if ( kr != KERN_SUCCESS )		4749274	3					
ANR	4751795	Condition	kr != KERN_SUCCESS	1340:6:35973:35990	4749274	0	True				
ANR	4751796	EqualityExpression	kr != KERN_SUCCESS		4749274	0		!=			
ANR	4751797	Identifier	kr		4749274	0					
ANR	4751798	Identifier	KERN_SUCCESS		4749274	1					
ANR	4751799	CompoundStatement		602:26:17054:17054	4749274	1					
ANR	4751800	BreakStatement	break ;	1341:3:35998:36003	4749274	0	True				
ANR	4751801	IfStatement	if ( info . is_submap )		4749274	4					
ANR	4751802	Condition	info . is_submap	1343:6:36015:36028	4749274	0	True				
ANR	4751803	MemberAccess	info . is_submap		4749274	0					
ANR	4751804	Identifier	info		4749274	0					
ANR	4751805	Identifier	is_submap		4749274	1					
ANR	4751806	CompoundStatement		605:22:17092:17092	4749274	1					
ANR	4751807	ExpressionStatement	depth ++	1344:3:36036:36043	4749274	0	True				
ANR	4751808	PostIncDecOperationExpression	depth ++		4749274	0					
ANR	4751809	Identifier	depth		4749274	0					
ANR	4751810	IncDec	++		4749274	1					
ANR	4751811	ContinueStatement	continue ;	1345:3:36048:36056	4749274	1	True				
ANR	4751812	ExpressionStatement	module_name [ 0 ] = 0	1347:2:36064:36082	4749274	5	True				
ANR	4751813	AssignmentExpression	module_name [ 0 ] = 0		4749274	0		=			
ANR	4751814	ArrayIndexing	module_name [ 0 ]		4749274	0					
ANR	4751815	Identifier	module_name		4749274	0					
ANR	4751816	PrimaryExpression	0		4749274	1					
ANR	4751817	PrimaryExpression	0		4749274	1					
ANR	4751818	CompoundStatement		612:3:17172:17259	4749274	6					
ANR	4751819	IdentifierDeclStatement	"int ret = proc_regionfilename ( tid , address , module_name , sizeof ( module_name ) ) ;"	1350:3:36111:36198	4749274	0	True				
ANR	4751820	IdentifierDecl	"ret = proc_regionfilename ( tid , address , module_name , sizeof ( module_name ) )"		4749274	0					
ANR	4751821	IdentifierDeclType	int		4749274	0					
ANR	4751822	Identifier	ret		4749274	1					
ANR	4751823	AssignmentExpression	"ret = proc_regionfilename ( tid , address , module_name , sizeof ( module_name ) )"		4749274	2		=			
ANR	4751824	Identifier	ret		4749274	0					
ANR	4751825	CallExpression	"proc_regionfilename ( tid , address , module_name , sizeof ( module_name ) )"		4749274	1					
ANR	4751826	Callee	proc_regionfilename		4749274	0					
ANR	4751827	Identifier	proc_regionfilename		4749274	0					
ANR	4751828	ArgumentList	tid		4749274	1					
ANR	4751829	Argument	tid		4749274	0					
ANR	4751830	Identifier	tid		4749274	0					
ANR	4751831	Argument	address		4749274	1					
ANR	4751832	Identifier	address		4749274	0					
ANR	4751833	Argument	module_name		4749274	2					
ANR	4751834	Identifier	module_name		4749274	0					
ANR	4751835	Argument	sizeof ( module_name )		4749274	3					
ANR	4751836	SizeofExpression	sizeof ( module_name )		4749274	0					
ANR	4751837	Sizeof	sizeof		4749274	0					
ANR	4751838	SizeofOperand	module_name		4749274	1					
ANR	4751839	ExpressionStatement	module_name [ ret ] = 0	1352:3:36203:36223	4749274	1	True				
ANR	4751840	AssignmentExpression	module_name [ ret ] = 0		4749274	0		=			
ANR	4751841	ArrayIndexing	module_name [ ret ]		4749274	0					
ANR	4751842	Identifier	module_name		4749274	0					
ANR	4751843	Identifier	ret		4749274	1					
ANR	4751844	PrimaryExpression	0		4749274	1					
ANR	4751845	IfStatement	if ( true )		4749274	7					
ANR	4751846	Condition	true	1355:6:36242:36245	4749274	0	True				
ANR	4751847	Identifier	true		4749274	0					
ANR	4751848	CompoundStatement		643:3:18083:18127	4749274	1					
ANR	4751849	IdentifierDeclStatement	char maxperm [ 32 ] ;	1356:3:36253:36269	4749274	0	True				
ANR	4751850	IdentifierDecl	maxperm [ 32 ]		4749274	0					
ANR	4751851	IdentifierDeclType	char [ 32 ]		4749274	0					
ANR	4751852	Identifier	maxperm		4749274	1					
ANR	4751853	PrimaryExpression	32		4749274	2					
ANR	4751854	IdentifierDeclStatement	char depthstr [ 32 ] ;	1357:3:36274:36291	4749274	1	True				
ANR	4751855	IdentifierDecl	depthstr [ 32 ]		4749274	0					
ANR	4751856	IdentifierDeclType	char [ 32 ]		4749274	0					
ANR	4751857	Identifier	depthstr		4749274	1					
ANR	4751858	PrimaryExpression	32		4749274	2					
ANR	4751859	IfStatement	if ( depth > 0 )		4749274	2					
ANR	4751860	Condition	depth > 0	1358:7:36300:36308	4749274	0	True				
ANR	4751861	RelationalExpression	depth > 0		4749274	0		>			
ANR	4751862	Identifier	depth		4749274	0					
ANR	4751863	PrimaryExpression	0		4749274	1					
ANR	4751864	CompoundStatement		620:18:17372:17372	4749274	1					
ANR	4751865	ExpressionStatement	"snprintf ( depthstr , sizeof ( depthstr ) , ""_%d"" , depth )"	1359:4:36317:36369	4749274	0	True				
ANR	4751866	CallExpression	"snprintf ( depthstr , sizeof ( depthstr ) , ""_%d"" , depth )"		4749274	0					
ANR	4751867	Callee	snprintf		4749274	0					
ANR	4751868	Identifier	snprintf		4749274	0					
ANR	4751869	ArgumentList	depthstr		4749274	1					
ANR	4751870	Argument	depthstr		4749274	0					
ANR	4751871	Identifier	depthstr		4749274	0					
ANR	4751872	Argument	sizeof ( depthstr )		4749274	1					
ANR	4751873	SizeofExpression	sizeof ( depthstr )		4749274	0					
ANR	4751874	Sizeof	sizeof		4749274	0					
ANR	4751875	SizeofOperand	depthstr		4749274	1					
ANR	4751876	Argument	"""_%d"""		4749274	2					
ANR	4751877	PrimaryExpression	"""_%d"""		4749274	0					
ANR	4751878	Argument	depth		4749274	3					
ANR	4751879	Identifier	depth		4749274	0					
ANR	4751880	ElseStatement	else		4749274	0					
ANR	4751881	CompoundStatement		622:10:17442:17442	4749274	0					
ANR	4751882	ExpressionStatement	depthstr [ 0 ] = 0	1361:4:36387:36402	4749274	0	True				
ANR	4751883	AssignmentExpression	depthstr [ 0 ] = 0		4749274	0		=			
ANR	4751884	ArrayIndexing	depthstr [ 0 ]		4749274	0					
ANR	4751885	Identifier	depthstr		4749274	0					
ANR	4751886	PrimaryExpression	0		4749274	1					
ANR	4751887	PrimaryExpression	0		4749274	1					
ANR	4751888	IfStatement	if ( info . max_protection != info . protection )		4749274	3					
ANR	4751889	Condition	info . max_protection != info . protection	1364:7:36417:36454	4749274	0	True				
ANR	4751890	EqualityExpression	info . max_protection != info . protection		4749274	0		!=			
ANR	4751891	MemberAccess	info . max_protection		4749274	0					
ANR	4751892	Identifier	info		4749274	0					
ANR	4751893	Identifier	max_protection		4749274	1					
ANR	4751894	MemberAccess	info . protection		4749274	1					
ANR	4751895	Identifier	info		4749274	0					
ANR	4751896	Identifier	protection		4749274	1					
ANR	4751897	CompoundStatement		626:47:17518:17518	4749274	1					
ANR	4751898	ExpressionStatement	"strcpy ( maxperm , r_str_rwx_i ( xwr2rwx ( info . max_protection ) ) )"	1365:4:36463:36530	4749274	0	True				
ANR	4751899	CallExpression	"strcpy ( maxperm , r_str_rwx_i ( xwr2rwx ( info . max_protection ) ) )"		4749274	0					
ANR	4751900	Callee	strcpy		4749274	0					
ANR	4751901	Identifier	strcpy		4749274	0					
ANR	4751902	ArgumentList	maxperm		4749274	1					
ANR	4751903	Argument	maxperm		4749274	0					
ANR	4751904	Identifier	maxperm		4749274	0					
ANR	4751905	Argument	r_str_rwx_i ( xwr2rwx ( info . max_protection ) )		4749274	1					
ANR	4751906	CallExpression	r_str_rwx_i ( xwr2rwx ( info . max_protection ) )		4749274	0					
ANR	4751907	Callee	r_str_rwx_i		4749274	0					
ANR	4751908	Identifier	r_str_rwx_i		4749274	0					
ANR	4751909	ArgumentList	xwr2rwx ( info . max_protection )		4749274	1					
ANR	4751910	Argument	xwr2rwx ( info . max_protection )		4749274	0					
ANR	4751911	CallExpression	xwr2rwx ( info . max_protection )		4749274	0					
ANR	4751912	Callee	xwr2rwx		4749274	0					
ANR	4751913	Identifier	xwr2rwx		4749274	0					
ANR	4751914	ArgumentList	info . max_protection		4749274	1					
ANR	4751915	Argument	info . max_protection		4749274	0					
ANR	4751916	MemberAccess	info . max_protection		4749274	0					
ANR	4751917	Identifier	info		4749274	0					
ANR	4751918	Identifier	max_protection		4749274	1					
ANR	4751919	ElseStatement	else		4749274	0					
ANR	4751920	CompoundStatement		629:10:17603:17603	4749274	0					
ANR	4751921	ExpressionStatement	maxperm [ 0 ] = 0	1368:4:36548:36562	4749274	0	True				
ANR	4751922	AssignmentExpression	maxperm [ 0 ] = 0		4749274	0		=			
ANR	4751923	ArrayIndexing	maxperm [ 0 ]		4749274	0					
ANR	4751924	Identifier	maxperm		4749274	0					
ANR	4751925	PrimaryExpression	0		4749274	1					
ANR	4751926	PrimaryExpression	0		4749274	1					
ANR	4751927	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%02x_%s%s%s%s%s%s%s%s"" , i , unparse_inheritance ( info . inheritance ) , info . user_tag ? ""_user"" : """" , info . is_submap ? ""_sub"" : """" , """" , info . is_submap ? ""_submap"" : """" , module_name , maxperm , depthstr )"	1371:3:36617:36857	4749274	4	True				
ANR	4751928	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%02x_%s%s%s%s%s%s%s%s"" , i , unparse_inheritance ( info . inheritance ) , info . user_tag ? ""_user"" : """" , info . is_submap ? ""_sub"" : """" , """" , info . is_submap ? ""_submap"" : """" , module_name , maxperm , depthstr )"		4749274	0					
ANR	4751929	Callee	snprintf		4749274	0					
ANR	4751930	Identifier	snprintf		4749274	0					
ANR	4751931	ArgumentList	buf		4749274	1					
ANR	4751932	Argument	buf		4749274	0					
ANR	4751933	Identifier	buf		4749274	0					
ANR	4751934	Argument	sizeof ( buf )		4749274	1					
ANR	4751935	SizeofExpression	sizeof ( buf )		4749274	0					
ANR	4751936	Sizeof	sizeof		4749274	0					
ANR	4751937	SizeofOperand	buf		4749274	1					
ANR	4751938	Argument	"""%02x_%s%s%s%s%s%s%s%s"""		4749274	2					
ANR	4751939	PrimaryExpression	"""%02x_%s%s%s%s%s%s%s%s"""		4749274	0					
ANR	4751940	Argument	i		4749274	3					
ANR	4751941	Identifier	i		4749274	0					
ANR	4751942	Argument	unparse_inheritance ( info . inheritance )		4749274	4					
ANR	4751943	CallExpression	unparse_inheritance ( info . inheritance )		4749274	0					
ANR	4751944	Callee	unparse_inheritance		4749274	0					
ANR	4751945	Identifier	unparse_inheritance		4749274	0					
ANR	4751946	ArgumentList	info . inheritance		4749274	1					
ANR	4751947	Argument	info . inheritance		4749274	0					
ANR	4751948	MemberAccess	info . inheritance		4749274	0					
ANR	4751949	Identifier	info		4749274	0					
ANR	4751950	Identifier	inheritance		4749274	1					
ANR	4751951	Argument	"info . user_tag ? ""_user"" : """""		4749274	5					
ANR	4751952	ConditionalExpression	"info . user_tag ? ""_user"" : """""		4749274	0					
ANR	4751953	Condition	info . user_tag		4749274	0					
ANR	4751954	MemberAccess	info . user_tag		4749274	0					
ANR	4751955	Identifier	info		4749274	0					
ANR	4751956	Identifier	user_tag		4749274	1					
ANR	4751957	PrimaryExpression	"""_user"""		4749274	1					
ANR	4751958	PrimaryExpression	""""""		4749274	2					
ANR	4751959	Argument	"info . is_submap ? ""_sub"" : """""		4749274	6					
ANR	4751960	ConditionalExpression	"info . is_submap ? ""_sub"" : """""		4749274	0					
ANR	4751961	Condition	info . is_submap		4749274	0					
ANR	4751962	MemberAccess	info . is_submap		4749274	0					
ANR	4751963	Identifier	info		4749274	0					
ANR	4751964	Identifier	is_submap		4749274	1					
ANR	4751965	PrimaryExpression	"""_sub"""		4749274	1					
ANR	4751966	PrimaryExpression	""""""		4749274	2					
ANR	4751967	Argument	""""""		4749274	7					
ANR	4751968	PrimaryExpression	""""""		4749274	0					
ANR	4751969	Argument	"info . is_submap ? ""_submap"" : """""		4749274	8					
ANR	4751970	ConditionalExpression	"info . is_submap ? ""_submap"" : """""		4749274	0					
ANR	4751971	Condition	info . is_submap		4749274	0					
ANR	4751972	MemberAccess	info . is_submap		4749274	0					
ANR	4751973	Identifier	info		4749274	0					
ANR	4751974	Identifier	is_submap		4749274	1					
ANR	4751975	PrimaryExpression	"""_submap"""		4749274	1					
ANR	4751976	PrimaryExpression	""""""		4749274	2					
ANR	4751977	Argument	module_name		4749274	9					
ANR	4751978	Identifier	module_name		4749274	0					
ANR	4751979	Argument	maxperm		4749274	10					
ANR	4751980	Identifier	maxperm		4749274	0					
ANR	4751981	Argument	depthstr		4749274	11					
ANR	4751982	Identifier	depthstr		4749274	0					
ANR	4751983	IfStatement	"if ( ! ( mr = r_debug_map_new ( buf , address , address + size , xwr2rwx ( info . protection ) , 0 ) ) )"		4749274	5					
ANR	4751984	Condition	"! ( mr = r_debug_map_new ( buf , address , address + size , xwr2rwx ( info . protection ) , 0 ) )"	1377:7:36866:36949	4749274	0	True				
ANR	4751985	UnaryOperationExpression	"! ( mr = r_debug_map_new ( buf , address , address + size , xwr2rwx ( info . protection ) , 0 ) )"		4749274	0					
ANR	4751986	UnaryOperator	!		4749274	0					
ANR	4751987	AssignmentExpression	"mr = r_debug_map_new ( buf , address , address + size , xwr2rwx ( info . protection ) , 0 )"		4749274	1		=			
ANR	4751988	Identifier	mr		4749274	0					
ANR	4751989	CallExpression	"r_debug_map_new ( buf , address , address + size , xwr2rwx ( info . protection ) , 0 )"		4749274	1					
ANR	4751990	Callee	r_debug_map_new		4749274	0					
ANR	4751991	Identifier	r_debug_map_new		4749274	0					
ANR	4751992	ArgumentList	buf		4749274	1					
ANR	4751993	Argument	buf		4749274	0					
ANR	4751994	Identifier	buf		4749274	0					
ANR	4751995	Argument	address		4749274	1					
ANR	4751996	Identifier	address		4749274	0					
ANR	4751997	Argument	address + size		4749274	2					
ANR	4751998	AdditiveExpression	address + size		4749274	0		+			
ANR	4751999	Identifier	address		4749274	0					
ANR	4752000	Identifier	size		4749274	1					
ANR	4752001	Argument	xwr2rwx ( info . protection )		4749274	3					
ANR	4752002	CallExpression	xwr2rwx ( info . protection )		4749274	0					
ANR	4752003	Callee	xwr2rwx		4749274	0					
ANR	4752004	Identifier	xwr2rwx		4749274	0					
ANR	4752005	ArgumentList	info . protection		4749274	1					
ANR	4752006	Argument	info . protection		4749274	0					
ANR	4752007	MemberAccess	info . protection		4749274	0					
ANR	4752008	Identifier	info		4749274	0					
ANR	4752009	Identifier	protection		4749274	1					
ANR	4752010	Argument	0		4749274	4					
ANR	4752011	PrimaryExpression	0		4749274	0					
ANR	4752012	CompoundStatement		639:93:18013:18013	4749274	1					
ANR	4752013	ExpressionStatement	"eprintf ( ""Cannot create r_debug_map_new\\n"" )"	1378:4:36958:37001	4749274	0	True				
ANR	4752014	CallExpression	"eprintf ( ""Cannot create r_debug_map_new\\n"" )"		4749274	0					
ANR	4752015	Callee	eprintf		4749274	0					
ANR	4752016	Identifier	eprintf		4749274	0					
ANR	4752017	ArgumentList	"""Cannot create r_debug_map_new\\n"""		4749274	1					
ANR	4752018	Argument	"""Cannot create r_debug_map_new\\n"""		4749274	0					
ANR	4752019	PrimaryExpression	"""Cannot create r_debug_map_new\\n"""		4749274	0					
ANR	4752020	BreakStatement	break ;	1379:4:37007:37012	4749274	1	True				
ANR	4752021	IdentifierDeclStatement	"RDebugMap * rdm = moduleAt ( modules , address ) ;"	1381:3:37022:37066	4749274	6	True				
ANR	4752022	IdentifierDecl	"* rdm = moduleAt ( modules , address )"		4749274	0					
ANR	4752023	IdentifierDeclType	RDebugMap *		4749274	0					
ANR	4752024	Identifier	rdm		4749274	1					
ANR	4752025	AssignmentExpression	"* rdm = moduleAt ( modules , address )"		4749274	2		=			
ANR	4752026	Identifier	rdm		4749274	0					
ANR	4752027	CallExpression	"moduleAt ( modules , address )"		4749274	1					
ANR	4752028	Callee	moduleAt		4749274	0					
ANR	4752029	Identifier	moduleAt		4749274	0					
ANR	4752030	ArgumentList	modules		4749274	1					
ANR	4752031	Argument	modules		4749274	0					
ANR	4752032	Identifier	modules		4749274	0					
ANR	4752033	Argument	address		4749274	1					
ANR	4752034	Identifier	address		4749274	0					
ANR	4752035	IfStatement	if ( rdm )		4749274	7					
ANR	4752036	Condition	rdm	1382:7:37075:37077	4749274	0	True				
ANR	4752037	Identifier	rdm		4749274	0					
ANR	4752038	CompoundStatement		644:12:18141:18141	4749274	1					
ANR	4752039	ExpressionStatement	mr -> file = strdup ( rdm -> name )	1383:4:37086:37115	4749274	0	True				
ANR	4752040	AssignmentExpression	mr -> file = strdup ( rdm -> name )		4749274	0		=			
ANR	4752041	PtrMemberAccess	mr -> file		4749274	0					
ANR	4752042	Identifier	mr		4749274	0					
ANR	4752043	Identifier	file		4749274	1					
ANR	4752044	CallExpression	strdup ( rdm -> name )		4749274	1					
ANR	4752045	Callee	strdup		4749274	0					
ANR	4752046	Identifier	strdup		4749274	0					
ANR	4752047	ArgumentList	rdm -> name		4749274	1					
ANR	4752048	Argument	rdm -> name		4749274	0					
ANR	4752049	PtrMemberAccess	rdm -> name		4749274	0					
ANR	4752050	Identifier	rdm		4749274	0					
ANR	4752051	Identifier	name		4749274	1					
ANR	4752052	ElseStatement	else		4749274	0					
ANR	4752053	CompoundStatement		646:10:18188:18188	4749274	0					
ANR	4752054	IfStatement	if ( * module_name )		4749274	0					
ANR	4752055	Condition	* module_name	1385:8:37137:37148	4749274	0	True				
ANR	4752056	UnaryOperationExpression	* module_name		4749274	0					
ANR	4752057	UnaryOperator	*		4749274	0					
ANR	4752058	Identifier	module_name		4749274	1					
ANR	4752059	CompoundStatement		647:22:18212:18212	4749274	1					
ANR	4752060	ExpressionStatement	mr -> file = strdup ( module_name )	1386:5:37158:37189	4749274	0	True				
ANR	4752061	AssignmentExpression	mr -> file = strdup ( module_name )		4749274	0		=			
ANR	4752062	PtrMemberAccess	mr -> file		4749274	0					
ANR	4752063	Identifier	mr		4749274	0					
ANR	4752064	Identifier	file		4749274	1					
ANR	4752065	CallExpression	strdup ( module_name )		4749274	1					
ANR	4752066	Callee	strdup		4749274	0					
ANR	4752067	Identifier	strdup		4749274	0					
ANR	4752068	ArgumentList	module_name		4749274	1					
ANR	4752069	Argument	module_name		4749274	0					
ANR	4752070	Identifier	module_name		4749274	0					
ANR	4752071	IfStatement	if ( mr -> file )		4749274	8					
ANR	4752072	Condition	mr -> file	1389:7:37209:37216	4749274	0	True				
ANR	4752073	PtrMemberAccess	mr -> file		4749274	0					
ANR	4752074	Identifier	mr		4749274	0					
ANR	4752075	Identifier	file		4749274	1					
ANR	4752076	CompoundStatement		651:17:18280:18280	4749274	1					
ANR	4752077	IfStatement	"if ( ! strcmp ( mr -> file , mr -> file ) )"		4749274	0					
ANR	4752078	Condition	"! strcmp ( mr -> file , mr -> file )"	1390:8:37229:37256	4749274	0	True				
ANR	4752079	UnaryOperationExpression	"! strcmp ( mr -> file , mr -> file )"		4749274	0					
ANR	4752080	UnaryOperator	!		4749274	0					
ANR	4752081	CallExpression	"strcmp ( mr -> file , mr -> file )"		4749274	1					
ANR	4752082	Callee	strcmp		4749274	0					
ANR	4752083	Identifier	strcmp		4749274	0					
ANR	4752084	ArgumentList	mr -> file		4749274	1					
ANR	4752085	Argument	mr -> file		4749274	0					
ANR	4752086	PtrMemberAccess	mr -> file		4749274	0					
ANR	4752087	Identifier	mr		4749274	0					
ANR	4752088	Identifier	file		4749274	1					
ANR	4752089	Argument	mr -> file		4749274	1					
ANR	4752090	PtrMemberAccess	mr -> file		4749274	0					
ANR	4752091	Identifier	mr		4749274	0					
ANR	4752092	Identifier	file		4749274	1					
ANR	4752093	CompoundStatement		654:5:18349:18395	4749274	1					
ANR	4752094	ExpressionStatement	mr -> name [ 0 ] = 0	1391:5:37266:37281	4749274	0	True				
ANR	4752095	AssignmentExpression	mr -> name [ 0 ] = 0		4749274	0		=			
ANR	4752096	ArrayIndexing	mr -> name [ 0 ]		4749274	0					
ANR	4752097	PtrMemberAccess	mr -> name		4749274	0					
ANR	4752098	Identifier	mr		4749274	0					
ANR	4752099	Identifier	name		4749274	1					
ANR	4752100	PrimaryExpression	0		4749274	1					
ANR	4752101	PrimaryExpression	0		4749274	1					
ANR	4752102	IdentifierDeclStatement	"const char * slash = r_str_lchr ( mr -> file , '/' ) ;"	1392:5:37288:37334	4749274	1	True				
ANR	4752103	IdentifierDecl	"* slash = r_str_lchr ( mr -> file , '/' )"		4749274	0					
ANR	4752104	IdentifierDeclType	const char *		4749274	0					
ANR	4752105	Identifier	slash		4749274	1					
ANR	4752106	AssignmentExpression	"* slash = r_str_lchr ( mr -> file , '/' )"		4749274	2		=			
ANR	4752107	Identifier	slash		4749274	0					
ANR	4752108	CallExpression	"r_str_lchr ( mr -> file , '/' )"		4749274	1					
ANR	4752109	Callee	r_str_lchr		4749274	0					
ANR	4752110	Identifier	r_str_lchr		4749274	0					
ANR	4752111	ArgumentList	mr -> file		4749274	1					
ANR	4752112	Argument	mr -> file		4749274	0					
ANR	4752113	PtrMemberAccess	mr -> file		4749274	0					
ANR	4752114	Identifier	mr		4749274	0					
ANR	4752115	Identifier	file		4749274	1					
ANR	4752116	Argument	'/'		4749274	1					
ANR	4752117	PrimaryExpression	'/'		4749274	0					
ANR	4752118	IfStatement	if ( slash )		4749274	2					
ANR	4752119	Condition	slash	1393:9:37345:37349	4749274	0	True				
ANR	4752120	Identifier	slash		4749274	0					
ANR	4752121	CompoundStatement		655:16:18413:18413	4749274	1					
ANR	4752122	ExpressionStatement	"strcpy ( mr -> name , slash + 1 )"	1394:6:37360:37388	4749274	0	True				
ANR	4752123	CallExpression	"strcpy ( mr -> name , slash + 1 )"		4749274	0					
ANR	4752124	Callee	strcpy		4749274	0					
ANR	4752125	Identifier	strcpy		4749274	0					
ANR	4752126	ArgumentList	mr -> name		4749274	1					
ANR	4752127	Argument	mr -> name		4749274	0					
ANR	4752128	PtrMemberAccess	mr -> name		4749274	0					
ANR	4752129	Identifier	mr		4749274	0					
ANR	4752130	Identifier	name		4749274	1					
ANR	4752131	Argument	slash + 1		4749274	1					
ANR	4752132	AdditiveExpression	slash + 1		4749274	0		+			
ANR	4752133	Identifier	slash		4749274	0					
ANR	4752134	PrimaryExpression	1		4749274	1					
ANR	4752135	ExpressionStatement	i ++	1398:3:37411:37414	4749274	9	True				
ANR	4752136	PostIncDecOperationExpression	i ++		4749274	0					
ANR	4752137	Identifier	i		4749274	0					
ANR	4752138	IncDec	++		4749274	1					
ANR	4752139	ExpressionStatement	mr -> shared = false	1399:3:37419:37437	4749274	10	True				
ANR	4752140	AssignmentExpression	mr -> shared = false		4749274	0		=			
ANR	4752141	PtrMemberAccess	mr -> shared		4749274	0					
ANR	4752142	Identifier	mr		4749274	0					
ANR	4752143	Identifier	shared		4749274	1					
ANR	4752144	Identifier	false		4749274	1					
ANR	4752145	ExpressionStatement	"r_list_append ( list , mr )"	1400:3:37442:37466	4749274	11	True				
ANR	4752146	CallExpression	"r_list_append ( list , mr )"		4749274	0					
ANR	4752147	Callee	r_list_append		4749274	0					
ANR	4752148	Identifier	r_list_append		4749274	0					
ANR	4752149	ArgumentList	list		4749274	1					
ANR	4752150	Argument	list		4749274	0					
ANR	4752151	Identifier	list		4749274	0					
ANR	4752152	Argument	mr		4749274	1					
ANR	4752153	Identifier	mr		4749274	0					
ANR	4752154	IfStatement	if ( size < 1 )		4749274	8					
ANR	4752155	Condition	size < 1	1402:6:37478:37485	4749274	0	True				
ANR	4752156	RelationalExpression	size < 1		4749274	0		<			
ANR	4752157	Identifier	size		4749274	0					
ANR	4752158	PrimaryExpression	1		4749274	1					
ANR	4752159	CompoundStatement		664:16:18549:18549	4749274	1					
ANR	4752160	ExpressionStatement	"eprintf ( ""size error\\n"" )"	1403:3:37493:37517	4749274	0	True				
ANR	4752161	CallExpression	"eprintf ( ""size error\\n"" )"		4749274	0					
ANR	4752162	Callee	eprintf		4749274	0					
ANR	4752163	Identifier	eprintf		4749274	0					
ANR	4752164	ArgumentList	"""size error\\n"""		4749274	1					
ANR	4752165	Argument	"""size error\\n"""		4749274	0					
ANR	4752166	PrimaryExpression	"""size error\\n"""		4749274	0					
ANR	4752167	ExpressionStatement	size = osize	1404:3:37522:37534	4749274	1	True				
ANR	4752168	AssignmentExpression	size = osize		4749274	0		=			
ANR	4752169	Identifier	size		4749274	0					
ANR	4752170	Identifier	osize		4749274	1					
ANR	4752171	ExpressionStatement	address += size	1406:2:37542:37557	4749274	9	True				
ANR	4752172	AssignmentExpression	address += size		4749274	0		+=			
ANR	4752173	Identifier	address		4749274	0					
ANR	4752174	Identifier	size		4749274	1					
ANR	4752175	ExpressionStatement	size = 0	1407:2:37561:37569	4749274	10	True				
ANR	4752176	AssignmentExpression	size = 0		4749274	0		=			
ANR	4752177	Identifier	size		4749274	0					
ANR	4752178	PrimaryExpression	0		4749274	1					
ANR	4752179	IdentifierDeclStatement	RListIter * iter ;	1409:1:37575:37590	4749274	19	True				
ANR	4752180	IdentifierDecl	* iter		4749274	0					
ANR	4752181	IdentifierDeclType	RListIter *		4749274	0					
ANR	4752182	Identifier	iter		4749274	1					
ANR	4752183	IdentifierDeclStatement	RDebugMap * m ;	1410:1:37593:37605	4749274	20	True				
ANR	4752184	IdentifierDecl	* m		4749274	0					
ANR	4752185	IdentifierDeclType	RDebugMap *		4749274	0					
ANR	4752186	Identifier	m		4749274	1					
ANR	4752187	Statement	r_list_foreach	1411:1:37608:37621	4749274	21	True				
ANR	4752188	Statement	(	1411:16:37623:37623	4749274	22	True				
ANR	4752189	Statement	modules	1411:17:37624:37630	4749274	23	True				
ANR	4752190	Statement	","	1411:24:37631:37631	4749274	24	True				
ANR	4752191	Statement	iter	1411:26:37633:37636	4749274	25	True				
ANR	4752192	Statement	","	1411:30:37637:37637	4749274	26	True				
ANR	4752193	Statement	m	1411:32:37639:37639	4749274	27	True				
ANR	4752194	Statement	)	1411:33:37640:37640	4749274	28	True				
ANR	4752195	CompoundStatement		674:2:18707:18744	4749274	29					
ANR	4752196	IdentifierDeclStatement	RDebugMap * m2 = r_debug_map_clone ( m ) ;	1412:2:37646:37683	4749274	0	True				
ANR	4752197	IdentifierDecl	* m2 = r_debug_map_clone ( m )		4749274	0					
ANR	4752198	IdentifierDeclType	RDebugMap *		4749274	0					
ANR	4752199	Identifier	m2		4749274	1					
ANR	4752200	AssignmentExpression	* m2 = r_debug_map_clone ( m )		4749274	2		=			
ANR	4752201	Identifier	m2		4749274	0					
ANR	4752202	CallExpression	r_debug_map_clone ( m )		4749274	1					
ANR	4752203	Callee	r_debug_map_clone		4749274	0					
ANR	4752204	Identifier	r_debug_map_clone		4749274	0					
ANR	4752205	ArgumentList	m		4749274	1					
ANR	4752206	Argument	m		4749274	0					
ANR	4752207	Identifier	m		4749274	0					
ANR	4752208	IfStatement	if ( m2 -> name && m2 -> file )		4749274	1					
ANR	4752209	Condition	m2 -> name && m2 -> file	1413:6:37691:37710	4749274	0	True				
ANR	4752210	AndExpression	m2 -> name && m2 -> file		4749274	0		&&			
ANR	4752211	PtrMemberAccess	m2 -> name		4749274	0					
ANR	4752212	Identifier	m2		4749274	0					
ANR	4752213	Identifier	name		4749274	1					
ANR	4752214	PtrMemberAccess	m2 -> file		4749274	1					
ANR	4752215	Identifier	m2		4749274	0					
ANR	4752216	Identifier	file		4749274	1					
ANR	4752217	CompoundStatement		675:28:18774:18774	4749274	1					
ANR	4752218	IfStatement	"if ( ! strcmp ( m2 -> name , m2 -> file ) )"		4749274	0					
ANR	4752219	Condition	"! strcmp ( m2 -> name , m2 -> file )"	1414:7:37722:37749	4749274	0	True				
ANR	4752220	UnaryOperationExpression	"! strcmp ( m2 -> name , m2 -> file )"		4749274	0					
ANR	4752221	UnaryOperator	!		4749274	0					
ANR	4752222	CallExpression	"strcmp ( m2 -> name , m2 -> file )"		4749274	1					
ANR	4752223	Callee	strcmp		4749274	0					
ANR	4752224	Identifier	strcmp		4749274	0					
ANR	4752225	ArgumentList	m2 -> name		4749274	1					
ANR	4752226	Argument	m2 -> name		4749274	0					
ANR	4752227	PtrMemberAccess	m2 -> name		4749274	0					
ANR	4752228	Identifier	m2		4749274	0					
ANR	4752229	Identifier	name		4749274	1					
ANR	4752230	Argument	m2 -> file		4749274	1					
ANR	4752231	PtrMemberAccess	m2 -> file		4749274	0					
ANR	4752232	Identifier	m2		4749274	0					
ANR	4752233	Identifier	file		4749274	1					
ANR	4752234	CompoundStatement		678:4:18840:18886	4749274	1					
ANR	4752235	ExpressionStatement	m2 -> name [ 0 ] = 0	1415:4:37758:37773	4749274	0	True				
ANR	4752236	AssignmentExpression	m2 -> name [ 0 ] = 0		4749274	0		=			
ANR	4752237	ArrayIndexing	m2 -> name [ 0 ]		4749274	0					
ANR	4752238	PtrMemberAccess	m2 -> name		4749274	0					
ANR	4752239	Identifier	m2		4749274	0					
ANR	4752240	Identifier	name		4749274	1					
ANR	4752241	PrimaryExpression	0		4749274	1					
ANR	4752242	PrimaryExpression	0		4749274	1					
ANR	4752243	IdentifierDeclStatement	"const char * slash = r_str_lchr ( m2 -> file , '/' ) ;"	1416:4:37779:37825	4749274	1	True				
ANR	4752244	IdentifierDecl	"* slash = r_str_lchr ( m2 -> file , '/' )"		4749274	0					
ANR	4752245	IdentifierDeclType	const char *		4749274	0					
ANR	4752246	Identifier	slash		4749274	1					
ANR	4752247	AssignmentExpression	"* slash = r_str_lchr ( m2 -> file , '/' )"		4749274	2		=			
ANR	4752248	Identifier	slash		4749274	0					
ANR	4752249	CallExpression	"r_str_lchr ( m2 -> file , '/' )"		4749274	1					
ANR	4752250	Callee	r_str_lchr		4749274	0					
ANR	4752251	Identifier	r_str_lchr		4749274	0					
ANR	4752252	ArgumentList	m2 -> file		4749274	1					
ANR	4752253	Argument	m2 -> file		4749274	0					
ANR	4752254	PtrMemberAccess	m2 -> file		4749274	0					
ANR	4752255	Identifier	m2		4749274	0					
ANR	4752256	Identifier	file		4749274	1					
ANR	4752257	Argument	'/'		4749274	1					
ANR	4752258	PrimaryExpression	'/'		4749274	0					
ANR	4752259	IfStatement	if ( slash )		4749274	2					
ANR	4752260	Condition	slash	1417:8:37835:37839	4749274	0	True				
ANR	4752261	Identifier	slash		4749274	0					
ANR	4752262	CompoundStatement		679:15:18903:18903	4749274	1					
ANR	4752263	ExpressionStatement	"strcpy ( m2 -> name , slash + 1 )"	1418:5:37849:37877	4749274	0	True				
ANR	4752264	CallExpression	"strcpy ( m2 -> name , slash + 1 )"		4749274	0					
ANR	4752265	Callee	strcpy		4749274	0					
ANR	4752266	Identifier	strcpy		4749274	0					
ANR	4752267	ArgumentList	m2 -> name		4749274	1					
ANR	4752268	Argument	m2 -> name		4749274	0					
ANR	4752269	PtrMemberAccess	m2 -> name		4749274	0					
ANR	4752270	Identifier	m2		4749274	0					
ANR	4752271	Identifier	name		4749274	1					
ANR	4752272	Argument	slash + 1		4749274	1					
ANR	4752273	AdditiveExpression	slash + 1		4749274	0		+			
ANR	4752274	Identifier	slash		4749274	0					
ANR	4752275	PrimaryExpression	1		4749274	1					
ANR	4752276	ExpressionStatement	"r_list_append ( list , m2 )"	1422:2:37896:37920	4749274	2	True				
ANR	4752277	CallExpression	"r_list_append ( list , m2 )"		4749274	0					
ANR	4752278	Callee	r_list_append		4749274	0					
ANR	4752279	Identifier	r_list_append		4749274	0					
ANR	4752280	ArgumentList	list		4749274	1					
ANR	4752281	Argument	list		4749274	0					
ANR	4752282	Identifier	list		4749274	0					
ANR	4752283	Argument	m2		4749274	1					
ANR	4752284	Identifier	m2		4749274	0					
ANR	4752285	ExpressionStatement	"r_list_sort ( list , cmp )"	1424:1:37927:37950	4749274	30	True				
ANR	4752286	CallExpression	"r_list_sort ( list , cmp )"		4749274	0					
ANR	4752287	Callee	r_list_sort		4749274	0					
ANR	4752288	Identifier	r_list_sort		4749274	0					
ANR	4752289	ArgumentList	list		4749274	1					
ANR	4752290	Argument	list		4749274	0					
ANR	4752291	Identifier	list		4749274	0					
ANR	4752292	Argument	cmp		4749274	1					
ANR	4752293	Identifier	cmp		4749274	0					
ANR	4752294	ExpressionStatement	r_list_free ( modules )	1425:2:37954:37975	4749274	31	True				
ANR	4752295	CallExpression	r_list_free ( modules )		4749274	0					
ANR	4752296	Callee	r_list_free		4749274	0					
ANR	4752297	Identifier	r_list_free		4749274	0					
ANR	4752298	ArgumentList	modules		4749274	1					
ANR	4752299	Argument	modules		4749274	0					
ANR	4752300	Identifier	modules		4749274	0					
ANR	4752301	ReturnStatement	return list ;	1426:1:37978:37989	4749274	32	True				
ANR	4752302	Identifier	list		4749274	0					
ANR	4752303	Statement	endif	1429:1:37995:37999	4749274	222	True				
ANR	4752304	ReturnType	static int		4749274	1					
ANR	4752305	Identifier	xnu_write_mem_maps_to_buffer		4749274	2					
ANR	4752306	ParameterList	"RBuffer * buffer , RList * mem_maps , int start_offset , vm_offset_t header , int header_end , int segment_command_sz , int * hoffset_out"		4749274	3					
ANR	4752307	Parameter	RBuffer * buffer	738:41:18807:18821	4749274	0	True				
ANR	4752308	ParameterType	RBuffer *		4749274	0					
ANR	4752309	Identifier	buffer		4749274	1					
ANR	4752310	Parameter	RList * mem_maps	738:58:18824:18838	4749274	1	True				
ANR	4752311	ParameterType	RList *		4749274	0					
ANR	4752312	Identifier	mem_maps		4749274	1					
ANR	4752313	Parameter	int start_offset	738:75:18841:18856	4749274	2	True				
ANR	4752314	ParameterType	int		4749274	0					
ANR	4752315	Identifier	start_offset		4749274	1					
ANR	4752316	Parameter	vm_offset_t header	739:1:18860:18877	4749274	3	True				
ANR	4752317	ParameterType	vm_offset_t		4749274	0					
ANR	4752318	Identifier	header		4749274	1					
ANR	4752319	Parameter	int header_end	739:21:18880:18893	4749274	4	True				
ANR	4752320	ParameterType	int		4749274	0					
ANR	4752321	Identifier	header_end		4749274	1					
ANR	4752322	Parameter	int segment_command_sz	739:37:18896:18917	4749274	5	True				
ANR	4752323	ParameterType	int		4749274	0					
ANR	4752324	Identifier	segment_command_sz		4749274	1					
ANR	4752325	Parameter	int * hoffset_out	739:61:18920:18935	4749274	6	True				
ANR	4752326	ParameterType	int *		4749274	0					
ANR	4752327	Identifier	hoffset_out		4749274	1					
ANR	4752328	CFGEntryNode	ENTRY		4749274		True				
ANR	4752329	CFGExitNode	EXIT		4749274		True				
ANR	4752330	InfiniteForNode	true		4749274		True				
ANR	4752331	Symbol	flavors		4749274						
ANR	4752332	Symbol	mr -> name		4749274						
ANR	4752333	Symbol	* map		4749274						
ANR	4752334	Symbol	a -> addr		4749274						
ANR	4752335	Symbol	maxperm		4749274						
ANR	4752336	Symbol	mach_vm_region_recurse		4749274						
ANR	4752337	Symbol	vbr . user_tag		4749274						
ANR	4752338	Symbol	padding_sz		4749274						
ANR	4752339	Symbol	& hoffset		4749274						
ANR	4752340	Symbol	flavors [ i ] . flavor		4749274						
ANR	4752341	Symbol	thread_flavor_array		4749274						
ANR	4752342	Symbol	* mr -> name		4749274						
ANR	4752343	Symbol	path		4749274						
ANR	4752344	Symbol	segment_count		4749274						
ANR	4752345	Symbol	* * mr		4749274						
ANR	4752346	Symbol	RDebugMap		4749274						
ANR	4752347	Symbol	hoffset_out		4749274						
ANR	4752348	Symbol	sc64 -> cmdsize		4749274						
ANR	4752349	Symbol	r_str_rwx_i		4749274						
ANR	4752350	Symbol	procBufferSize		4749274						
ANR	4752351	Symbol	& address		4749274						
ANR	4752352	Symbol	errno		4749274						
ANR	4752353	Symbol	tir . tstate_size		4749274						
ANR	4752354	Symbol	& local_size		4749274						
ANR	4752355	Symbol	proc_regionfilename		4749274						
ANR	4752356	Symbol	process . kp_eproc		4749274						
ANR	4752357	Symbol	rc		4749274						
ANR	4752358	Symbol	& depth		4749274						
ANR	4752359	Symbol	tir . hoffset		4749274						
ANR	4752360	Symbol	size		4749274						
ANR	4752361	Symbol	* tc		4749274						
ANR	4752362	Symbol	info . inheritance		4749274						
ANR	4752363	Symbol	alen		4749274						
ANR	4752364	Symbol	& segment_command_sz		4749274						
ANR	4752365	Symbol	get_kernel_base		4749274						
ANR	4752366	Symbol	hoffset		4749274						
ANR	4752367	Symbol	moduleAt		4749274						
ANR	4752368	Symbol	& local_address		4749274						
ANR	4752369	Symbol	map -> file		4749274						
ANR	4752370	Symbol	mib		4749274						
ANR	4752371	Symbol	xnu_map_free		4749274						
ANR	4752372	Symbol	pathLenth		4749274						
ANR	4752373	Symbol	uid		4749274						
ANR	4752374	Symbol	CTL_KERN		4749274						
ANR	4752375	Symbol	m -> file		4749274						
ANR	4752376	Symbol	VM_MEMORY_IOKIT		4749274						
ANR	4752377	Symbol	a		4749274						
ANR	4752378	Symbol	b		4749274						
ANR	4752379	Symbol	address		4749274						
ANR	4752380	Symbol	sc64 -> nsects		4749274						
ANR	4752381	Symbol	i		4749274						
ANR	4752382	Symbol	m		4749274						
ANR	4752383	Symbol	xwr2rwx		4749274						
ANR	4752384	Symbol	tc		4749274						
ANR	4752385	Symbol	nargs		4749274						
ANR	4752386	Symbol	tir -> tstate_size		4749274						
ANR	4752387	Symbol	uidFromPid		4749274						
ANR	4752388	Symbol	buf		4749274						
ANR	4752389	Symbol	tstate_size		4749274						
ANR	4752390	Symbol	threads_list		4749274						
ANR	4752391	Symbol	& flavors		4749274						
ANR	4752392	Symbol	rdm		4749274						
ANR	4752393	Symbol	start_offset		4749274						
ANR	4752394	Symbol	* iter_args ++		4749274						
ANR	4752395	Symbol	VM_REGION_SUBMAP_INFO_COUNT_64		4749274						
ANR	4752396	Symbol	task_dbg		4749274						
ANR	4752397	Symbol	curr_arg		4749274						
ANR	4752398	Symbol	thread_get_state		4749274						
ANR	4752399	Symbol	foffset		4749274						
ANR	4752400	Symbol	info . user_tag		4749274						
ANR	4752401	Symbol	r_debug_map_clone		4749274						
ANR	4752402	Symbol	dest		4749274						
ANR	4752403	Symbol	tid		4749274						
ANR	4752404	Symbol	curr_map -> perm		4749274						
ANR	4752405	Symbol	strlen		4749274						
ANR	4752406	Symbol	maxprot		4749274						
ANR	4752407	Symbol	KERN_SUCCESS		4749274						
ANR	4752408	Symbol	* psname		4749274						
ANR	4752409	Symbol	tir		4749274						
ANR	4752410	Symbol	info		4749274						
ANR	4752411	Symbol	tir -> hoffset		4749274						
ANR	4752412	Symbol	ret		4749274						
ANR	4752413	Symbol	osize		4749274						
ANR	4752414	Symbol	sc64 -> vmsize		4749274						
ANR	4752415	Symbol	& info		4749274						
ANR	4752416	Symbol	info . is_submap		4749274						
ANR	4752417	Symbol	* * sc64		4749274						
ANR	4752418	Symbol	R_BETWEEN		4749274						
ANR	4752419	Symbol	sc64 -> segname		4749274						
ANR	4752420	Symbol	count		4749274						
ANR	4752421	Symbol	psname		4749274						
ANR	4752422	Symbol	vm_region_recurse_64		4749274						
ANR	4752423	Symbol	start_args		4749274						
ANR	4752424	Symbol	sc64 -> vmaddr		4749274						
ANR	4752425	Symbol	tir -> flavors		4749274						
ANR	4752426	Symbol	only_modules		4749274						
ANR	4752427	Symbol	list		4749274						
ANR	4752428	Symbol	modules		4749274						
ANR	4752429	Symbol	flavor		4749274						
ANR	4752430	Symbol	pid_to_task		4749274						
ANR	4752431	Symbol	argmax		4749274						
ANR	4752432	Symbol	port		4749274						
ANR	4752433	Symbol	tmp_size		4749274						
ANR	4752434	Symbol	map -> addr_end		4749274						
ANR	4752435	Symbol	& argmax		4749274						
ANR	4752436	Symbol	module_name		4749274						
ANR	4752437	Symbol	task_for_pid		4749274						
ANR	4752438	Symbol	* iter_args		4749274						
ANR	4752439	Symbol	& flavors [ i ] . count		4749274						
ANR	4752440	Symbol	* psnamelen		4749274						
ANR	4752441	Symbol	KERN_ARGMAX		4749274						
ANR	4752442	Symbol	* procargs		4749274						
ANR	4752443	Symbol	foo		4749274						
ANR	4752444	Symbol	KERN_PROCARGS2		4749274						
ANR	4752445	Symbol	calloc		4749274						
ANR	4752446	Symbol	& procBufferSize		4749274						
ANR	4752447	Symbol	coredump_nflavors		4749274						
ANR	4752448	Symbol	* hoffset_out		4749274						
ANR	4752449	Symbol	& nargs		4749274						
ANR	4752450	Symbol	* depthstr		4749274						
ANR	4752451	Symbol	* * m2		4749274						
ANR	4752452	Symbol	MACH_VM_MIN_ADDRESS		4749274						
ANR	4752453	Symbol	tir -> header		4749274						
ANR	4752454	Symbol	m2 -> name		4749274						
ANR	4752455	Symbol	sysctlResult		4749274						
ANR	4752456	Symbol	* sc64		4749274						
ANR	4752457	Symbol	tstate		4749274						
ANR	4752458	Symbol	tir . header		4749274						
ANR	4752459	Symbol	list -> free		4749274						
ANR	4752460	Symbol	header_size		4749274						
ANR	4752461	Symbol	false		4749274						
ANR	4752462	Symbol	info_count		4749274						
ANR	4752463	Symbol	command_size		4749274						
ANR	4752464	Symbol	* dbg		4749274						
ANR	4752465	Symbol	info . max_protection		4749274						
ANR	4752466	Symbol	COMMAND_SIZE		4749274						
ANR	4752467	Symbol	LC_THREAD		4749274						
ANR	4752468	Symbol	depthstr		4749274						
ANR	4752469	Symbol	FALSE		4749274						
ANR	4752470	Symbol	strdup		4749274						
ANR	4752471	Symbol	psnamelen		4749274						
ANR	4752472	Symbol	rdm -> name		4749274						
ANR	4752473	Symbol	base		4749274						
ANR	4752474	Symbol	flavors [ i ] . count		4749274						
ANR	4752475	Symbol	vmoffset		4749274						
ANR	4752476	Symbol	* m2		4749274						
ANR	4752477	Symbol	mr -> file		4749274						
ANR	4752478	Symbol	sc64 -> maxprot		4749274						
ANR	4752479	Symbol	xfer_foffset		4749274						
ANR	4752480	Symbol	end_args		4749274						
ANR	4752481	Symbol	tc -> cmdsize		4749274						
ANR	4752482	Symbol	KERN_PROC_PID		4749274						
ANR	4752483	Symbol	VM_PROT_READ		4749274						
ANR	4752484	Symbol	* hoffset		4749274						
ANR	4752485	Symbol	r_debug_map_new		4749274						
ANR	4752486	Symbol	procargs		4749274						
ANR	4752487	Symbol	iter		4749274						
ANR	4752488	Symbol	KERN_PROC		4749274						
ANR	4752489	Symbol	* m2 -> name		4749274						
ANR	4752490	Symbol	* mib		4749274						
ANR	4752491	Symbol	sysctl		4749274						
ANR	4752492	Symbol	sc64		4749274						
ANR	4752493	Symbol	tc -> cmd		4749274						
ANR	4752494	Symbol	xfer_size		4749274						
ANR	4752495	Symbol	R_NEWCOPY		4749274						
ANR	4752496	Symbol	map -> addr		4749274						
ANR	4752497	Symbol	mem_maps_buffer		4749274						
ANR	4752498	Symbol	iter_args		4749274						
ANR	4752499	Symbol	tirp		4749274						
ANR	4752500	Symbol	mach_vm_read		4749274						
ANR	4752501	Symbol	vbr		4749274						
ANR	4752502	Symbol	cmp		4749274						
ANR	4752503	Symbol	* sc64 -> segname		4749274						
ANR	4752504	Symbol	process . kp_eproc . e_ucred		4749274						
ANR	4752505	Symbol	* mr		4749274						
ANR	4752506	Symbol	map -> name		4749274						
ANR	4752507	Symbol	INT_MAX		4749274						
ANR	4752508	Symbol	xnu_dbg_modules		4749274						
ANR	4752509	Symbol	* thread		4749274						
ANR	4752510	Symbol	LC_SEGMENT_64		4749274						
ANR	4752511	Symbol	info . protection		4749274						
ANR	4752512	Symbol	map		4749274						
ANR	4752513	Symbol	malloc		4749274						
ANR	4752514	Symbol	m -> name		4749274						
ANR	4752515	Symbol	naddr		4749274						
ANR	4752516	Symbol	m2		4749274						
ANR	4752517	Symbol	sc64 -> initprot		4749274						
ANR	4752518	Symbol	xnu_write_mem_maps_to_buffer		4749274						
ANR	4752519	Symbol	kr		4749274						
ANR	4752520	Symbol	* flavors		4749274						
ANR	4752521	Symbol	& size		4749274						
ANR	4752522	Symbol	mach_port_deallocate		4749274						
ANR	4752523	Symbol	EINVAL		4749274						
ANR	4752524	Symbol	dbg -> maps		4749274						
ANR	4752525	Symbol	depth		4749274						
ANR	4752526	Symbol	dbg -> pid		4749274						
ANR	4752527	Symbol	* list		4749274						
ANR	4752528	Symbol	r_buf_append_bytes		4749274						
ANR	4752529	Symbol	thread -> port		4749274						
ANR	4752530	Symbol	r_list_length		4749274						
ANR	4752531	Symbol	& mach_header_sz		4749274						
ANR	4752532	Symbol	& tir		4749274						
ANR	4752533	Symbol	curr_map		4749274						
ANR	4752534	Symbol	pid		4749274						
ANR	4752535	Symbol	xnu_get_vmmap_entries_for_pid		4749274						
ANR	4752536	Symbol	process . kp_eproc . e_ucred . cr_uid		4749274						
ANR	4752537	Symbol	curr_map -> addr		4749274						
ANR	4752538	Symbol	* ( coredump_thread_state_flavor_t * ) ( header + hoffset )		4749274						
ANR	4752539	Symbol	unparse_inheritance		4749274						
ANR	4752540	Symbol	buffer		4749274						
ANR	4752541	Symbol	r_buf_new		4749274						
ANR	4752542	Symbol	strcmp		4749274						
ANR	4752543	Symbol	NULL		4749274						
ANR	4752544	Symbol	mr		4749274						
ANR	4752545	Symbol	dbg		4749274						
ANR	4752546	Symbol	tir . flavors		4749274						
ANR	4752547	Symbol	mach_header_sz		4749274						
ANR	4752548	Symbol	* header		4749274						
ANR	4752549	Symbol	& process		4749274						
ANR	4752550	Symbol	task		4749274						
ANR	4752551	Symbol	& info_count		4749274						
ANR	4752552	Symbol	r_str_lchr		4749274						
ANR	4752553	Symbol	local_address		4749274						
ANR	4752554	Symbol	mach_task_self		4749274						
ANR	4752555	Symbol	true		4749274						
ANR	4752556	Symbol	header		4749274						
ANR	4752557	Symbol	xnu_thread_list		4749274						
ANR	4752558	Symbol	sc64 -> cmd		4749274						
ANR	4752559	Symbol	* tir		4749274						
ANR	4752560	Symbol	header_end		4749274						
ANR	4752561	Symbol	* ret		4749274						
ANR	4752562	Symbol	error		4749274						
ANR	4752563	Symbol	b -> addr		4749274						
ANR	4752564	Symbol	m2 -> file		4749274						
ANR	4752565	Symbol	KERNEL_LOWER		4749274						
ANR	4752566	Symbol	addr		4749274						
ANR	4752567	Symbol	mr -> shared		4749274						
ANR	4752568	Symbol	local_size		4749274						
ANR	4752569	Symbol	padding		4749274						
ANR	4752570	Symbol	r_debug_pid_new		4749274						
ANR	4752571	Symbol	mem_maps		4749274						
ANR	4752572	Symbol	process		4749274						
ANR	4752573	Symbol	_a		4749274						
ANR	4752574	Symbol	* maxperm		4749274						
ANR	4752575	Symbol	_b		4749274						
ANR	4752576	Symbol	* rdm		4749274						
ANR	4752577	Symbol	* curr_map		4749274						
ANR	4752578	Symbol	& naddr		4749274						
ANR	4752579	Symbol	iter2		4749274						
ANR	4752580	Symbol	IMAGE_OFFSET		4749274						
ANR	4752581	Symbol	thread		4749274						
ANR	4752582	Symbol	round_page		4749274						
ANR	4752583	Symbol	* a		4749274						
ANR	4752584	Symbol	* b		4749274						
ANR	4752585	Symbol	& task		4749274						
ANR	4752586	Symbol	* module_name		4749274						
ANR	4752587	Symbol	* i		4749274						
ANR	4752588	Symbol	segment_command_sz		4749274						
ANR	4752589	Symbol	* m		4749274						
ANR	4752590	Symbol	slash		4749274						
ANR	4752591	Symbol	curr_map -> size		4749274						
ANR	4752592	Symbol	r_list_new		4749274						
