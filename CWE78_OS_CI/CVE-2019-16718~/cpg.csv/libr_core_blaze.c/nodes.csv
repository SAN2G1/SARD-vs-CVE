command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3977652	File	data/converged/CVE-2019-16718~_radare2/libr_core_blaze.c								
ANR	3977653	ClassDef	bb_type	5:8:88:157							
ANR	3977654	DeclStmt									
ANR	3977655	Decl							bb_type	bb_type	bb_type_t
ANR	3977656	ClassDef	bb	14:8:168:290							
ANR	3977657	DeclStmt									
ANR	3977658	Decl							ut64	ut64	start
ANR	3977659	DeclStmt									
ANR	3977660	Decl							ut64	ut64	end
ANR	3977661	DeclStmt									
ANR	3977662	Decl							ut64	ut64	jump
ANR	3977663	DeclStmt									
ANR	3977664	Decl							ut64	ut64	fail
ANR	3977665	DeclStmt									
ANR	3977666	Decl							int	int	score
ANR	3977667	DeclStmt									
ANR	3977668	Decl							int	int	called
ANR	3977669	DeclStmt									
ANR	3977670	Decl							int	int	reached
ANR	3977671	DeclStmt									
ANR	3977672	Decl							bb_type_t	bb_type_t	type
ANR	3977673	DeclStmt									
ANR	3977674	Decl							bb	bb	bb_t
ANR	3977675	ClassDef	fcn	25:8:301:383							
ANR	3977676	DeclStmt									
ANR	3977677	Decl							ut64	ut64	addr
ANR	3977678	DeclStmt									
ANR	3977679	Decl							ut64	ut64	size
ANR	3977680	DeclStmt									
ANR	3977681	Decl							RList	RList *	bbs
ANR	3977682	DeclStmt									
ANR	3977683	Decl							st64	st64	score
ANR	3977684	DeclStmt									
ANR	3977685	Decl							ut64	ut64	ends
ANR	3977686	DeclStmt									
ANR	3977687	Decl							fcn	fcn	fcn_t
ANR	3977688	Function	__isdata	33:0:386:1075							
ANR	3977689	FunctionDef	"__isdata (RCore * core , ut64 addr)"		3977688	0					
ANR	3977690	CompoundStatement		33:44:430:1075	3977688	0					
ANR	3977691	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , addr , false ) )"		3977688	0					
ANR	3977692	Condition	"! r_io_is_valid_offset ( core -> io , addr , false )"	34:5:437:481	3977688	0	True				
ANR	3977693	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , addr , false )"		3977688	0					
ANR	3977694	UnaryOperator	!		3977688	0					
ANR	3977695	CallExpression	"r_io_is_valid_offset ( core -> io , addr , false )"		3977688	1					
ANR	3977696	Callee	r_io_is_valid_offset		3977688	0					
ANR	3977697	Identifier	r_io_is_valid_offset		3977688	0					
ANR	3977698	ArgumentList	core -> io		3977688	1					
ANR	3977699	Argument	core -> io		3977688	0					
ANR	3977700	PtrMemberAccess	core -> io		3977688	0					
ANR	3977701	Identifier	core		3977688	0					
ANR	3977702	Identifier	io		3977688	1					
ANR	3977703	Argument	addr		3977688	1					
ANR	3977704	Identifier	addr		3977688	0					
ANR	3977705	Argument	false		3977688	2					
ANR	3977706	Identifier	false		3977688	0					
ANR	3977707	CompoundStatement		2:52:53:53	3977688	1					
ANR	3977708	ReturnStatement	return 4 ;	36:2:564:572	3977688	0	True				
ANR	3977709	PrimaryExpression	4		3977688	0					
ANR	3977710	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL ) ;"	38:1:578:657	3977688	1	True				
ANR	3977711	IdentifierDecl	"* fcn = r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		3977688	0					
ANR	3977712	IdentifierDeclType	RAnalFunction *		3977688	0					
ANR	3977713	Identifier	fcn		3977688	1					
ANR	3977714	AssignmentExpression	"* fcn = r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		3977688	2		=			
ANR	3977715	Identifier	fcn		3977688	0					
ANR	3977716	CallExpression	"r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		3977688	1					
ANR	3977717	Callee	r_anal_get_fcn_at		3977688	0					
ANR	3977718	Identifier	r_anal_get_fcn_at		3977688	0					
ANR	3977719	ArgumentList	core -> anal		3977688	1					
ANR	3977720	Argument	core -> anal		3977688	0					
ANR	3977721	PtrMemberAccess	core -> anal		3977688	0					
ANR	3977722	Identifier	core		3977688	0					
ANR	3977723	Identifier	anal		3977688	1					
ANR	3977724	Argument	addr		3977688	1					
ANR	3977725	Identifier	addr		3977688	0					
ANR	3977726	Argument	R_ANAL_FCN_TYPE_NULL		3977688	2					
ANR	3977727	Identifier	R_ANAL_FCN_TYPE_NULL		3977688	0					
ANR	3977728	IfStatement	if ( fcn )		3977688	2					
ANR	3977729	Condition	fcn	39:5:664:666	3977688	0	True				
ANR	3977730	Identifier	fcn		3977688	0					
ANR	3977731	CompoundStatement		7:10:238:238	3977688	1					
ANR	3977732	ReturnStatement	return r_anal_fcn_size ( fcn ) ;	40:2:673:701	3977688	0	True				
ANR	3977733	CallExpression	r_anal_fcn_size ( fcn )		3977688	0					
ANR	3977734	Callee	r_anal_fcn_size		3977688	0					
ANR	3977735	Identifier	r_anal_fcn_size		3977688	0					
ANR	3977736	ArgumentList	fcn		3977688	1					
ANR	3977737	Argument	fcn		3977688	0					
ANR	3977738	Identifier	fcn		3977688	0					
ANR	3977739	IdentifierDeclStatement	"RList * list = r_meta_find_list_in ( core -> anal , addr , - 1 , 4 ) ;"	42:1:707:766	3977688	3	True				
ANR	3977740	IdentifierDecl	"* list = r_meta_find_list_in ( core -> anal , addr , - 1 , 4 )"		3977688	0					
ANR	3977741	IdentifierDeclType	RList *		3977688	0					
ANR	3977742	Identifier	list		3977688	1					
ANR	3977743	AssignmentExpression	"* list = r_meta_find_list_in ( core -> anal , addr , - 1 , 4 )"		3977688	2		=			
ANR	3977744	Identifier	list		3977688	0					
ANR	3977745	CallExpression	"r_meta_find_list_in ( core -> anal , addr , - 1 , 4 )"		3977688	1					
ANR	3977746	Callee	r_meta_find_list_in		3977688	0					
ANR	3977747	Identifier	r_meta_find_list_in		3977688	0					
ANR	3977748	ArgumentList	core -> anal		3977688	1					
ANR	3977749	Argument	core -> anal		3977688	0					
ANR	3977750	PtrMemberAccess	core -> anal		3977688	0					
ANR	3977751	Identifier	core		3977688	0					
ANR	3977752	Identifier	anal		3977688	1					
ANR	3977753	Argument	addr		3977688	1					
ANR	3977754	Identifier	addr		3977688	0					
ANR	3977755	Argument	- 1		3977688	2					
ANR	3977756	UnaryOperationExpression	- 1		3977688	0					
ANR	3977757	UnaryOperator	-		3977688	0					
ANR	3977758	PrimaryExpression	1		3977688	1					
ANR	3977759	Argument	4		3977688	3					
ANR	3977760	PrimaryExpression	4		3977688	0					
ANR	3977761	IdentifierDeclStatement	RListIter * iter ;	43:1:769:784	3977688	4	True				
ANR	3977762	IdentifierDecl	* iter		3977688	0					
ANR	3977763	IdentifierDeclType	RListIter *		3977688	0					
ANR	3977764	Identifier	iter		3977688	1					
ANR	3977765	IdentifierDeclStatement	RAnalMetaItem * meta ;	44:1:787:806	3977688	5	True				
ANR	3977766	IdentifierDecl	* meta		3977688	0					
ANR	3977767	IdentifierDeclType	RAnalMetaItem *		3977688	0					
ANR	3977768	Identifier	meta		3977688	1					
ANR	3977769	IdentifierDeclStatement	int result = 0 ;	45:1:809:823	3977688	6	True				
ANR	3977770	IdentifierDecl	result = 0		3977688	0					
ANR	3977771	IdentifierDeclType	int		3977688	0					
ANR	3977772	Identifier	result		3977688	1					
ANR	3977773	AssignmentExpression	result = 0		3977688	2		=			
ANR	3977774	Identifier	result		3977688	0					
ANR	3977775	PrimaryExpression	0		3977688	1					
ANR	3977776	Statement	r_list_foreach	46:1:826:839	3977688	7	True				
ANR	3977777	Statement	(	46:16:841:841	3977688	8	True				
ANR	3977778	Statement	list	46:17:842:845	3977688	9	True				
ANR	3977779	Statement	","	46:21:846:846	3977688	10	True				
ANR	3977780	Statement	iter	46:23:848:851	3977688	11	True				
ANR	3977781	Statement	","	46:27:852:852	3977688	12	True				
ANR	3977782	Statement	meta	46:29:854:857	3977688	13	True				
ANR	3977783	Statement	)	46:33:858:858	3977688	14	True				
ANR	3977784	CompoundStatement		14:35:429:429	3977688	15					
ANR	3977785	SwitchStatement	switch ( meta -> type )		3977688	0					
ANR	3977786	Condition	meta -> type	47:10:872:881	3977688	0	True				
ANR	3977787	PtrMemberAccess	meta -> type		3977688	0					
ANR	3977788	Identifier	meta		3977688	0					
ANR	3977789	Identifier	type		3977688	1					
ANR	3977790	CompoundStatement		15:22:453:453	3977688	1					
ANR	3977791	Label	case R_META_TYPE_DATA :	48:2:888:909	3977688	0	True				
ANR	3977792	Identifier	R_META_TYPE_DATA		3977688	0					
ANR	3977793	Label	case R_META_TYPE_STRING :	49:2:913:936	3977688	1	True				
ANR	3977794	Identifier	R_META_TYPE_STRING		3977688	0					
ANR	3977795	Label	case R_META_TYPE_FORMAT :	50:2:940:963	3977688	2	True				
ANR	3977796	Identifier	R_META_TYPE_FORMAT		3977688	0					
ANR	3977797	ExpressionStatement	result = meta -> size - ( addr - meta -> from )	51:3:968:1009	3977688	3	True				
ANR	3977798	AssignmentExpression	result = meta -> size - ( addr - meta -> from )		3977688	0		=			
ANR	3977799	Identifier	result		3977688	0					
ANR	3977800	AdditiveExpression	meta -> size - ( addr - meta -> from )		3977688	1		-			
ANR	3977801	PtrMemberAccess	meta -> size		3977688	0					
ANR	3977802	Identifier	meta		3977688	0					
ANR	3977803	Identifier	size		3977688	1					
ANR	3977804	AdditiveExpression	addr - meta -> from		3977688	1		-			
ANR	3977805	Identifier	addr		3977688	0					
ANR	3977806	PtrMemberAccess	meta -> from		3977688	1					
ANR	3977807	Identifier	meta		3977688	0					
ANR	3977808	Identifier	from		3977688	1					
ANR	3977809	GotoStatement	goto exit ;	52:3:1014:1023	3977688	4	True				
ANR	3977810	Identifier	exit		3977688	0					
ANR	3977811	Label	exit :	55:0:1032:1036	3977688	16	True				
ANR	3977812	Identifier	exit		3977688	0					
ANR	3977813	ExpressionStatement	r_list_free ( list )	56:1:1039:1057	3977688	17	True				
ANR	3977814	CallExpression	r_list_free ( list )		3977688	0					
ANR	3977815	Callee	r_list_free		3977688	0					
ANR	3977816	Identifier	r_list_free		3977688	0					
ANR	3977817	ArgumentList	list		3977688	1					
ANR	3977818	Argument	list		3977688	0					
ANR	3977819	Identifier	list		3977688	0					
ANR	3977820	ReturnStatement	return result ;	57:1:1060:1073	3977688	18	True				
ANR	3977821	Identifier	result		3977688	0					
ANR	3977822	ReturnType	static int		3977688	1					
ANR	3977823	Identifier	__isdata		3977688	2					
ANR	3977824	ParameterList	"RCore * core , ut64 addr"		3977688	3					
ANR	3977825	Parameter	RCore * core	33:20:406:416	3977688	0	True				
ANR	3977826	ParameterType	RCore *		3977688	0					
ANR	3977827	Identifier	core		3977688	1					
ANR	3977828	Parameter	ut64 addr	33:33:419:427	3977688	1	True				
ANR	3977829	ParameterType	ut64		3977688	0					
ANR	3977830	Identifier	addr		3977688	1					
ANR	3977831	CFGEntryNode	ENTRY		3977688		True				
ANR	3977832	CFGExitNode	EXIT		3977688		True				
ANR	3977833	Symbol	r_anal_get_fcn_at		3977688						
ANR	3977834	Symbol	r_io_is_valid_offset		3977688						
ANR	3977835	Symbol	R_ANAL_FCN_TYPE_NULL		3977688						
ANR	3977836	Symbol	meta -> size		3977688						
ANR	3977837	Symbol	r_anal_fcn_size		3977688						
ANR	3977838	Symbol	false		3977688						
ANR	3977839	Symbol	* core		3977688						
ANR	3977840	Symbol	iter		3977688						
ANR	3977841	Symbol	list		3977688						
ANR	3977842	Symbol	core -> anal		3977688						
ANR	3977843	Symbol	meta -> from		3977688						
ANR	3977844	Symbol	fcn		3977688						
ANR	3977845	Symbol	result		3977688						
ANR	3977846	Symbol	core		3977688						
ANR	3977847	Symbol	r_meta_find_list_in		3977688						
ANR	3977848	Symbol	core -> io		3977688						
ANR	3977849	Symbol	meta		3977688						
ANR	3977850	Symbol	meta -> type		3977688						
ANR	3977851	Symbol	* meta		3977688						
ANR	3977852	Symbol	addr		3977688						
ANR	3977853	Function	fcnAddBB	60:0:1078:1459							
ANR	3977854	FunctionDef	"fcnAddBB (fcn_t * fcn , bb_t * block)"		3977853	0					
ANR	3977855	CompoundStatement		60:47:1125:1459	3977853	0					
ANR	3977856	IfStatement	if ( ! fcn )		3977853	0					
ANR	3977857	Condition	! fcn	61:5:1132:1135	3977853	0	True				
ANR	3977858	UnaryOperationExpression	! fcn		3977853	0					
ANR	3977859	UnaryOperator	!		3977853	0					
ANR	3977860	Identifier	fcn		3977853	1					
ANR	3977861	CompoundStatement		2:11:12:12	3977853	1					
ANR	3977862	ExpressionStatement	"eprintf ( ""No function given to add a basic block\\n"" )"	62:2:1142:1194	3977853	0	True				
ANR	3977863	CallExpression	"eprintf ( ""No function given to add a basic block\\n"" )"		3977853	0					
ANR	3977864	Callee	eprintf		3977853	0					
ANR	3977865	Identifier	eprintf		3977853	0					
ANR	3977866	ArgumentList	"""No function given to add a basic block\\n"""		3977853	1					
ANR	3977867	Argument	"""No function given to add a basic block\\n"""		3977853	0					
ANR	3977868	PrimaryExpression	"""No function given to add a basic block\\n"""		3977853	0					
ANR	3977869	ReturnStatement	return false ;	63:2:1198:1210	3977853	1	True				
ANR	3977870	Identifier	false		3977853	0					
ANR	3977871	ExpressionStatement	fcn -> score += block -> score	65:1:1216:1242	3977853	1	True				
ANR	3977872	AssignmentExpression	fcn -> score += block -> score		3977853	0		+=			
ANR	3977873	PtrMemberAccess	fcn -> score		3977853	0					
ANR	3977874	Identifier	fcn		3977853	0					
ANR	3977875	Identifier	score		3977853	1					
ANR	3977876	PtrMemberAccess	block -> score		3977853	1					
ANR	3977877	Identifier	block		3977853	0					
ANR	3977878	Identifier	score		3977853	1					
ANR	3977879	ExpressionStatement	fcn -> size += block -> end - block -> start	66:1:1245:1283	3977853	2	True				
ANR	3977880	AssignmentExpression	fcn -> size += block -> end - block -> start		3977853	0		+=			
ANR	3977881	PtrMemberAccess	fcn -> size		3977853	0					
ANR	3977882	Identifier	fcn		3977853	0					
ANR	3977883	Identifier	size		3977853	1					
ANR	3977884	AdditiveExpression	block -> end - block -> start		3977853	1		-			
ANR	3977885	PtrMemberAccess	block -> end		3977853	0					
ANR	3977886	Identifier	block		3977853	0					
ANR	3977887	Identifier	end		3977853	1					
ANR	3977888	PtrMemberAccess	block -> start		3977853	1					
ANR	3977889	Identifier	block		3977853	0					
ANR	3977890	Identifier	start		3977853	1					
ANR	3977891	IfStatement	if ( block -> type == END )		3977853	3					
ANR	3977892	Condition	block -> type == END	67:5:1290:1307	3977853	0	True				
ANR	3977893	EqualityExpression	block -> type == END		3977853	0		==			
ANR	3977894	PtrMemberAccess	block -> type		3977853	0					
ANR	3977895	Identifier	block		3977853	0					
ANR	3977896	Identifier	type		3977853	1					
ANR	3977897	Identifier	END		3977853	1					
ANR	3977898	CompoundStatement		8:25:184:184	3977853	1					
ANR	3977899	ExpressionStatement	fcn -> ends ++	68:2:1314:1325	3977853	0	True				
ANR	3977900	PostIncDecOperationExpression	fcn -> ends ++		3977853	0					
ANR	3977901	PtrMemberAccess	fcn -> ends		3977853	0					
ANR	3977902	Identifier	fcn		3977853	0					
ANR	3977903	Identifier	ends		3977853	1					
ANR	3977904	IncDec	++		3977853	1					
ANR	3977905	IfStatement	if ( ! fcn -> bbs )		3977853	4					
ANR	3977906	Condition	! fcn -> bbs	70:5:1335:1343	3977853	0	True				
ANR	3977907	UnaryOperationExpression	! fcn -> bbs		3977853	0					
ANR	3977908	UnaryOperator	!		3977853	0					
ANR	3977909	PtrMemberAccess	fcn -> bbs		3977853	1					
ANR	3977910	Identifier	fcn		3977853	0					
ANR	3977911	Identifier	bbs		3977853	1					
ANR	3977912	CompoundStatement		11:16:220:220	3977853	1					
ANR	3977913	ExpressionStatement	"eprintf ( ""Block list not initialized\\n"" )"	71:2:1350:1390	3977853	0	True				
ANR	3977914	CallExpression	"eprintf ( ""Block list not initialized\\n"" )"		3977853	0					
ANR	3977915	Callee	eprintf		3977853	0					
ANR	3977916	Identifier	eprintf		3977853	0					
ANR	3977917	ArgumentList	"""Block list not initialized\\n"""		3977853	1					
ANR	3977918	Argument	"""Block list not initialized\\n"""		3977853	0					
ANR	3977919	PrimaryExpression	"""Block list not initialized\\n"""		3977853	0					
ANR	3977920	ReturnStatement	return false ;	72:2:1394:1406	3977853	1	True				
ANR	3977921	Identifier	false		3977853	0					
ANR	3977922	ExpressionStatement	"r_list_append ( fcn -> bbs , block )"	74:1:1412:1443	3977853	5	True				
ANR	3977923	CallExpression	"r_list_append ( fcn -> bbs , block )"		3977853	0					
ANR	3977924	Callee	r_list_append		3977853	0					
ANR	3977925	Identifier	r_list_append		3977853	0					
ANR	3977926	ArgumentList	fcn -> bbs		3977853	1					
ANR	3977927	Argument	fcn -> bbs		3977853	0					
ANR	3977928	PtrMemberAccess	fcn -> bbs		3977853	0					
ANR	3977929	Identifier	fcn		3977853	0					
ANR	3977930	Identifier	bbs		3977853	1					
ANR	3977931	Argument	block		3977853	1					
ANR	3977932	Identifier	block		3977853	0					
ANR	3977933	ReturnStatement	return true ;	75:1:1446:1457	3977853	6	True				
ANR	3977934	Identifier	true		3977853	0					
ANR	3977935	ReturnType	static bool		3977853	1					
ANR	3977936	Identifier	fcnAddBB		3977853	2					
ANR	3977937	ParameterList	"fcn_t * fcn , bb_t * block"		3977853	3					
ANR	3977938	Parameter	fcn_t * fcn	60:22:1100:1109	3977853	0	True				
ANR	3977939	ParameterType	fcn_t *		3977853	0					
ANR	3977940	Identifier	fcn		3977853	1					
ANR	3977941	Parameter	bb_t * block	60:34:1112:1122	3977853	1	True				
ANR	3977942	ParameterType	bb_t *		3977853	0					
ANR	3977943	Identifier	block		3977853	1					
ANR	3977944	CFGEntryNode	ENTRY		3977853		True				
ANR	3977945	CFGExitNode	EXIT		3977853		True				
ANR	3977946	Symbol	* fcn		3977853						
ANR	3977947	Symbol	block -> start		3977853						
ANR	3977948	Symbol	false		3977853						
ANR	3977949	Symbol	block -> end		3977853						
ANR	3977950	Symbol	block -> score		3977853						
ANR	3977951	Symbol	* block		3977853						
ANR	3977952	Symbol	fcn		3977853						
ANR	3977953	Symbol	fcn -> size		3977853						
ANR	3977954	Symbol	fcn -> ends		3977853						
ANR	3977955	Symbol	fcn -> bbs		3977853						
ANR	3977956	Symbol	true		3977853						
ANR	3977957	Symbol	fcn -> score		3977853						
ANR	3977958	Symbol	block		3977853						
ANR	3977959	Symbol	END		3977853						
ANR	3977960	Symbol	block -> type		3977853						
ANR	3977961	Function	fcnNew	78:0:1462:1766							
ANR	3977962	FunctionDef	fcnNew (bb_t * block)		3977961	0					
ANR	3977963	CompoundStatement		78:35:1497:1766	3977961	0					
ANR	3977964	IdentifierDeclStatement	fcn_t * fcn = R_NEW0 ( fcn_t ) ;	79:1:1500:1527	3977961	0	True				
ANR	3977965	IdentifierDecl	* fcn = R_NEW0 ( fcn_t )		3977961	0					
ANR	3977966	IdentifierDeclType	fcn_t *		3977961	0					
ANR	3977967	Identifier	fcn		3977961	1					
ANR	3977968	AssignmentExpression	* fcn = R_NEW0 ( fcn_t )		3977961	2		=			
ANR	3977969	Identifier	fcn		3977961	0					
ANR	3977970	CallExpression	R_NEW0 ( fcn_t )		3977961	1					
ANR	3977971	Callee	R_NEW0		3977961	0					
ANR	3977972	Identifier	R_NEW0		3977961	0					
ANR	3977973	ArgumentList	fcn_t		3977961	1					
ANR	3977974	Argument	fcn_t		3977961	0					
ANR	3977975	Identifier	fcn_t		3977961	0					
ANR	3977976	IfStatement	if ( ! fcn )		3977961	1					
ANR	3977977	Condition	! fcn	80:5:1534:1537	3977961	0	True				
ANR	3977978	UnaryOperationExpression	! fcn		3977961	0					
ANR	3977979	UnaryOperator	!		3977961	0					
ANR	3977980	Identifier	fcn		3977961	1					
ANR	3977981	CompoundStatement		3:11:42:42	3977961	1					
ANR	3977982	ExpressionStatement	"eprintf ( ""Failed to allocate memory for function\\n"" )"	81:2:1544:1596	3977961	0	True				
ANR	3977983	CallExpression	"eprintf ( ""Failed to allocate memory for function\\n"" )"		3977961	0					
ANR	3977984	Callee	eprintf		3977961	0					
ANR	3977985	Identifier	eprintf		3977961	0					
ANR	3977986	ArgumentList	"""Failed to allocate memory for function\\n"""		3977961	1					
ANR	3977987	Argument	"""Failed to allocate memory for function\\n"""		3977961	0					
ANR	3977988	PrimaryExpression	"""Failed to allocate memory for function\\n"""		3977961	0					
ANR	3977989	ReturnStatement	return NULL ;	82:2:1600:1611	3977961	1	True				
ANR	3977990	Identifier	NULL		3977961	0					
ANR	3977991	ExpressionStatement	fcn -> addr = block -> start	84:1:1617:1641	3977961	2	True				
ANR	3977992	AssignmentExpression	fcn -> addr = block -> start		3977961	0		=			
ANR	3977993	PtrMemberAccess	fcn -> addr		3977961	0					
ANR	3977994	Identifier	fcn		3977961	0					
ANR	3977995	Identifier	addr		3977961	1					
ANR	3977996	PtrMemberAccess	block -> start		3977961	1					
ANR	3977997	Identifier	block		3977961	0					
ANR	3977998	Identifier	start		3977961	1					
ANR	3977999	ExpressionStatement	fcn -> bbs = r_list_new ( )	85:1:1644:1668	3977961	3	True				
ANR	3978000	AssignmentExpression	fcn -> bbs = r_list_new ( )		3977961	0		=			
ANR	3978001	PtrMemberAccess	fcn -> bbs		3977961	0					
ANR	3978002	Identifier	fcn		3977961	0					
ANR	3978003	Identifier	bbs		3977961	1					
ANR	3978004	CallExpression	r_list_new ( )		3977961	1					
ANR	3978005	Callee	r_list_new		3977961	0					
ANR	3978006	Identifier	r_list_new		3977961	0					
ANR	3978007	ArgumentList			3977961	1					
ANR	3978008	IfStatement	"if ( ! fcnAddBB ( fcn , block ) )"		3977961	4					
ANR	3978009	Condition	"! fcnAddBB ( fcn , block )"	86:5:1675:1696	3977961	0	True				
ANR	3978010	UnaryOperationExpression	"! fcnAddBB ( fcn , block )"		3977961	0					
ANR	3978011	UnaryOperator	!		3977961	0					
ANR	3978012	CallExpression	"fcnAddBB ( fcn , block )"		3977961	1					
ANR	3978013	Callee	fcnAddBB		3977961	0					
ANR	3978014	Identifier	fcnAddBB		3977961	0					
ANR	3978015	ArgumentList	fcn		3977961	1					
ANR	3978016	Argument	fcn		3977961	0					
ANR	3978017	Identifier	fcn		3977961	0					
ANR	3978018	Argument	block		3977961	1					
ANR	3978019	Identifier	block		3977961	0					
ANR	3978020	CompoundStatement		9:29:201:201	3977961	1					
ANR	3978021	ExpressionStatement	"eprintf ( ""Failed to add block to function\\n"" )"	87:2:1703:1748	3977961	0	True				
ANR	3978022	CallExpression	"eprintf ( ""Failed to add block to function\\n"" )"		3977961	0					
ANR	3978023	Callee	eprintf		3977961	0					
ANR	3978024	Identifier	eprintf		3977961	0					
ANR	3978025	ArgumentList	"""Failed to add block to function\\n"""		3977961	1					
ANR	3978026	Argument	"""Failed to add block to function\\n"""		3977961	0					
ANR	3978027	PrimaryExpression	"""Failed to add block to function\\n"""		3977961	0					
ANR	3978028	ReturnStatement	return fcn ;	89:1:1754:1764	3977961	5	True				
ANR	3978029	Identifier	fcn		3977961	0					
ANR	3978030	ReturnType	static fcn_t *		3977961	1					
ANR	3978031	Identifier	fcnNew		3977961	2					
ANR	3978032	ParameterList	bb_t * block		3977961	3					
ANR	3978033	Parameter	bb_t * block	78:22:1484:1494	3977961	0	True				
ANR	3978034	ParameterType	bb_t *		3977961	0					
ANR	3978035	Identifier	block		3977961	1					
ANR	3978036	CFGEntryNode	ENTRY		3977961		True				
ANR	3978037	CFGExitNode	EXIT		3977961		True				
ANR	3978038	Symbol	fcn		3977961						
ANR	3978039	Symbol	R_NEW0		3977961						
ANR	3978040	Symbol	NULL		3977961						
ANR	3978041	Symbol	* fcn		3977961						
ANR	3978042	Symbol	block -> start		3977961						
ANR	3978043	Symbol	fcn -> bbs		3977961						
ANR	3978044	Symbol	fcnAddBB		3977961						
ANR	3978045	Symbol	fcn -> addr		3977961						
ANR	3978046	Symbol	block		3977961						
ANR	3978047	Symbol	fcn_t		3977961						
ANR	3978048	Symbol	* block		3977961						
ANR	3978049	Symbol	r_list_new		3977961						
ANR	3978050	Function	fcnFree	92:0:1769:1842							
ANR	3978051	FunctionDef	fcnFree (fcn_t * fcn)		3978050	0					
ANR	3978052	CompoundStatement		92:33:1802:1842	3978050	0					
ANR	3978053	ExpressionStatement	r_list_free ( fcn -> bbs )	93:1:1805:1827	3978050	0	True				
ANR	3978054	CallExpression	r_list_free ( fcn -> bbs )		3978050	0					
ANR	3978055	Callee	r_list_free		3978050	0					
ANR	3978056	Identifier	r_list_free		3978050	0					
ANR	3978057	ArgumentList	fcn -> bbs		3978050	1					
ANR	3978058	Argument	fcn -> bbs		3978050	0					
ANR	3978059	PtrMemberAccess	fcn -> bbs		3978050	0					
ANR	3978060	Identifier	fcn		3978050	0					
ANR	3978061	Identifier	bbs		3978050	1					
ANR	3978062	ExpressionStatement	free ( fcn )	94:1:1830:1840	3978050	1	True				
ANR	3978063	CallExpression	free ( fcn )		3978050	0					
ANR	3978064	Callee	free		3978050	0					
ANR	3978065	Identifier	free		3978050	0					
ANR	3978066	ArgumentList	fcn		3978050	1					
ANR	3978067	Argument	fcn		3978050	0					
ANR	3978068	Identifier	fcn		3978050	0					
ANR	3978069	ReturnType	static void		3978050	1					
ANR	3978070	Identifier	fcnFree		3978050	2					
ANR	3978071	ParameterList	fcn_t * fcn		3978050	3					
ANR	3978072	Parameter	fcn_t * fcn	92:21:1790:1799	3978050	0	True				
ANR	3978073	ParameterType	fcn_t *		3978050	0					
ANR	3978074	Identifier	fcn		3978050	1					
ANR	3978075	CFGEntryNode	ENTRY		3978050		True				
ANR	3978076	CFGExitNode	EXIT		3978050		True				
ANR	3978077	Symbol	fcn		3978050						
ANR	3978078	Symbol	* fcn		3978050						
ANR	3978079	Symbol	fcn -> bbs		3978050						
ANR	3978080	Function	bbCMP	97:0:1845:1958							
ANR	3978081	FunctionDef	"bbCMP (void * _a , void * _b)"		3978080	0					
ANR	3978082	CompoundStatement		97:38:1883:1958	3978080	0					
ANR	3978083	IdentifierDeclStatement	bb_t * a = ( bb_t * ) _a ;	98:1:1886:1905	3978080	0	True				
ANR	3978084	IdentifierDecl	* a = ( bb_t * ) _a		3978080	0					
ANR	3978085	IdentifierDeclType	bb_t *		3978080	0					
ANR	3978086	Identifier	a		3978080	1					
ANR	3978087	AssignmentExpression	* a = ( bb_t * ) _a		3978080	2		=			
ANR	3978088	Identifier	a		3978080	0					
ANR	3978089	CastExpression	( bb_t * ) _a		3978080	1					
ANR	3978090	CastTarget	bb_t *		3978080	0					
ANR	3978091	Identifier	_a		3978080	1					
ANR	3978092	IdentifierDeclStatement	bb_t * b = ( bb_t * ) _b ;	99:1:1908:1927	3978080	1	True				
ANR	3978093	IdentifierDecl	* b = ( bb_t * ) _b		3978080	0					
ANR	3978094	IdentifierDeclType	bb_t *		3978080	0					
ANR	3978095	Identifier	b		3978080	1					
ANR	3978096	AssignmentExpression	* b = ( bb_t * ) _b		3978080	2		=			
ANR	3978097	Identifier	b		3978080	0					
ANR	3978098	CastExpression	( bb_t * ) _b		3978080	1					
ANR	3978099	CastTarget	bb_t *		3978080	0					
ANR	3978100	Identifier	_b		3978080	1					
ANR	3978101	ReturnStatement	return b -> start - a -> start ;	100:1:1930:1956	3978080	2	True				
ANR	3978102	AdditiveExpression	b -> start - a -> start		3978080	0		-			
ANR	3978103	PtrMemberAccess	b -> start		3978080	0					
ANR	3978104	Identifier	b		3978080	0					
ANR	3978105	Identifier	start		3978080	1					
ANR	3978106	PtrMemberAccess	a -> start		3978080	1					
ANR	3978107	Identifier	a		3978080	0					
ANR	3978108	Identifier	start		3978080	1					
ANR	3978109	ReturnType	static int		3978080	1					
ANR	3978110	Identifier	bbCMP		3978080	2					
ANR	3978111	ParameterList	"void * _a , void * _b"		3978080	3					
ANR	3978112	Parameter	void * _a	97:18:1863:1870	3978080	0	True				
ANR	3978113	ParameterType	void *		3978080	0					
ANR	3978114	Identifier	_a		3978080	1					
ANR	3978115	Parameter	void * _b	97:28:1873:1880	3978080	1	True				
ANR	3978116	ParameterType	void *		3978080	0					
ANR	3978117	Identifier	_b		3978080	1					
ANR	3978118	CFGEntryNode	ENTRY		3978080		True				
ANR	3978119	CFGExitNode	EXIT		3978080		True				
ANR	3978120	Symbol	a		3978080						
ANR	3978121	Symbol	_a		3978080						
ANR	3978122	Symbol	b		3978080						
ANR	3978123	Symbol	_b		3978080						
ANR	3978124	Symbol	b -> start		3978080						
ANR	3978125	Symbol	* a		3978080						
ANR	3978126	Symbol	a -> start		3978080						
ANR	3978127	Symbol	* b		3978080						
ANR	3978128	Function	initBB	103:0:1961:2267							
ANR	3978129	FunctionDef	"initBB (bb_t * bb , ut64 start , ut64 end , ut64 jump , ut64 fail , bb_type_t type , int score , int reached , int called)"		3978128	0					
ANR	3978130	CompoundStatement		103:126:2087:2267	3978128	0					
ANR	3978131	IfStatement	if ( bb )		3978128	0					
ANR	3978132	Condition	bb	104:5:2094:2095	3978128	0	True				
ANR	3978133	Identifier	bb		3978128	0					
ANR	3978134	CompoundStatement		2:9:10:10	3978128	1					
ANR	3978135	ExpressionStatement	bb -> start = start	105:2:2102:2119	3978128	0	True				
ANR	3978136	AssignmentExpression	bb -> start = start		3978128	0		=			
ANR	3978137	PtrMemberAccess	bb -> start		3978128	0					
ANR	3978138	Identifier	bb		3978128	0					
ANR	3978139	Identifier	start		3978128	1					
ANR	3978140	Identifier	start		3978128	1					
ANR	3978141	ExpressionStatement	bb -> end = end	106:2:2123:2136	3978128	1	True				
ANR	3978142	AssignmentExpression	bb -> end = end		3978128	0		=			
ANR	3978143	PtrMemberAccess	bb -> end		3978128	0					
ANR	3978144	Identifier	bb		3978128	0					
ANR	3978145	Identifier	end		3978128	1					
ANR	3978146	Identifier	end		3978128	1					
ANR	3978147	ExpressionStatement	bb -> jump = jump	107:2:2140:2155	3978128	2	True				
ANR	3978148	AssignmentExpression	bb -> jump = jump		3978128	0		=			
ANR	3978149	PtrMemberAccess	bb -> jump		3978128	0					
ANR	3978150	Identifier	bb		3978128	0					
ANR	3978151	Identifier	jump		3978128	1					
ANR	3978152	Identifier	jump		3978128	1					
ANR	3978153	ExpressionStatement	bb -> fail = fail	108:2:2159:2174	3978128	3	True				
ANR	3978154	AssignmentExpression	bb -> fail = fail		3978128	0		=			
ANR	3978155	PtrMemberAccess	bb -> fail		3978128	0					
ANR	3978156	Identifier	bb		3978128	0					
ANR	3978157	Identifier	fail		3978128	1					
ANR	3978158	Identifier	fail		3978128	1					
ANR	3978159	ExpressionStatement	bb -> type = type	109:2:2178:2193	3978128	4	True				
ANR	3978160	AssignmentExpression	bb -> type = type		3978128	0		=			
ANR	3978161	PtrMemberAccess	bb -> type		3978128	0					
ANR	3978162	Identifier	bb		3978128	0					
ANR	3978163	Identifier	type		3978128	1					
ANR	3978164	Identifier	type		3978128	1					
ANR	3978165	ExpressionStatement	bb -> score = score	110:2:2197:2214	3978128	5	True				
ANR	3978166	AssignmentExpression	bb -> score = score		3978128	0		=			
ANR	3978167	PtrMemberAccess	bb -> score		3978128	0					
ANR	3978168	Identifier	bb		3978128	0					
ANR	3978169	Identifier	score		3978128	1					
ANR	3978170	Identifier	score		3978128	1					
ANR	3978171	ExpressionStatement	bb -> reached = reached	111:2:2218:2239	3978128	6	True				
ANR	3978172	AssignmentExpression	bb -> reached = reached		3978128	0		=			
ANR	3978173	PtrMemberAccess	bb -> reached		3978128	0					
ANR	3978174	Identifier	bb		3978128	0					
ANR	3978175	Identifier	reached		3978128	1					
ANR	3978176	Identifier	reached		3978128	1					
ANR	3978177	ExpressionStatement	bb -> called = called	112:2:2243:2262	3978128	7	True				
ANR	3978178	AssignmentExpression	bb -> called = called		3978128	0		=			
ANR	3978179	PtrMemberAccess	bb -> called		3978128	0					
ANR	3978180	Identifier	bb		3978128	0					
ANR	3978181	Identifier	called		3978128	1					
ANR	3978182	Identifier	called		3978128	1					
ANR	3978183	ReturnType	static void		3978128	1					
ANR	3978184	Identifier	initBB		3978128	2					
ANR	3978185	ParameterList	"bb_t * bb , ut64 start , ut64 end , ut64 jump , ut64 fail , bb_type_t type , int score , int reached , int called"		3978128	3					
ANR	3978186	Parameter	bb_t * bb	103:20:1981:1988	3978128	0	True				
ANR	3978187	ParameterType	bb_t *		3978128	0					
ANR	3978188	Identifier	bb		3978128	1					
ANR	3978189	Parameter	ut64 start	103:30:1991:2000	3978128	1	True				
ANR	3978190	ParameterType	ut64		3978128	0					
ANR	3978191	Identifier	start		3978128	1					
ANR	3978192	Parameter	ut64 end	103:42:2003:2010	3978128	2	True				
ANR	3978193	ParameterType	ut64		3978128	0					
ANR	3978194	Identifier	end		3978128	1					
ANR	3978195	Parameter	ut64 jump	103:52:2013:2021	3978128	3	True				
ANR	3978196	ParameterType	ut64		3978128	0					
ANR	3978197	Identifier	jump		3978128	1					
ANR	3978198	Parameter	ut64 fail	103:63:2024:2032	3978128	4	True				
ANR	3978199	ParameterType	ut64		3978128	0					
ANR	3978200	Identifier	fail		3978128	1					
ANR	3978201	Parameter	bb_type_t type	103:74:2035:2048	3978128	5	True				
ANR	3978202	ParameterType	bb_type_t		3978128	0					
ANR	3978203	Identifier	type		3978128	1					
ANR	3978204	Parameter	int score	103:90:2051:2059	3978128	6	True				
ANR	3978205	ParameterType	int		3978128	0					
ANR	3978206	Identifier	score		3978128	1					
ANR	3978207	Parameter	int reached	103:101:2062:2072	3978128	7	True				
ANR	3978208	ParameterType	int		3978128	0					
ANR	3978209	Identifier	reached		3978128	1					
ANR	3978210	Parameter	int called	103:114:2075:2084	3978128	8	True				
ANR	3978211	ParameterType	int		3978128	0					
ANR	3978212	Identifier	called		3978128	1					
ANR	3978213	CFGEntryNode	ENTRY		3978128		True				
ANR	3978214	CFGExitNode	EXIT		3978128		True				
ANR	3978215	Symbol	bb		3978128						
ANR	3978216	Symbol	bb -> fail		3978128						
ANR	3978217	Symbol	bb -> called		3978128						
ANR	3978218	Symbol	called		3978128						
ANR	3978219	Symbol	* bb		3978128						
ANR	3978220	Symbol	bb -> reached		3978128						
ANR	3978221	Symbol	bb -> start		3978128						
ANR	3978222	Symbol	start		3978128						
ANR	3978223	Symbol	type		3978128						
ANR	3978224	Symbol	bb -> score		3978128						
ANR	3978225	Symbol	fail		3978128						
ANR	3978226	Symbol	score		3978128						
ANR	3978227	Symbol	bb -> jump		3978128						
ANR	3978228	Symbol	reached		3978128						
ANR	3978229	Symbol	end		3978128						
ANR	3978230	Symbol	bb -> type		3978128						
ANR	3978231	Symbol	bb -> end		3978128						
ANR	3978232	Symbol	jump		3978128						
ANR	3978233	Function	addBB	116:0:2270:3299							
ANR	3978234	FunctionDef	"addBB (RList * block_list , ut64 start , ut64 end , ut64 jump , ut64 fail , bb_type_t type , int score)"		3978233	0					
ANR	3978235	CompoundStatement		116:108:2378:3299	3978233	0					
ANR	3978236	IdentifierDeclStatement	bb_t * bb = ( bb_t * ) R_NEW0 ( bb_t ) ;	117:1:2381:2413	3978233	0	True				
ANR	3978237	IdentifierDecl	* bb = ( bb_t * ) R_NEW0 ( bb_t )		3978233	0					
ANR	3978238	IdentifierDeclType	bb_t *		3978233	0					
ANR	3978239	Identifier	bb		3978233	1					
ANR	3978240	AssignmentExpression	* bb = ( bb_t * ) R_NEW0 ( bb_t )		3978233	2		=			
ANR	3978241	Identifier	bb		3978233	0					
ANR	3978242	CastExpression	( bb_t * ) R_NEW0 ( bb_t )		3978233	1					
ANR	3978243	CastTarget	bb_t *		3978233	0					
ANR	3978244	CallExpression	R_NEW0 ( bb_t )		3978233	1					
ANR	3978245	Callee	R_NEW0		3978233	0					
ANR	3978246	Identifier	R_NEW0		3978233	0					
ANR	3978247	ArgumentList	bb_t		3978233	1					
ANR	3978248	Argument	bb_t		3978233	0					
ANR	3978249	Identifier	bb_t		3978233	0					
ANR	3978250	IfStatement	if ( ! bb )		3978233	1					
ANR	3978251	Condition	! bb	118:5:2420:2422	3978233	0	True				
ANR	3978252	UnaryOperationExpression	! bb		3978233	0					
ANR	3978253	UnaryOperator	!		3978233	0					
ANR	3978254	Identifier	bb		3978233	1					
ANR	3978255	CompoundStatement		3:10:46:46	3978233	1					
ANR	3978256	ExpressionStatement	"eprintf ( ""Failed to calloc mem for new basic block!\\n"" )"	119:2:2429:2484	3978233	0	True				
ANR	3978257	CallExpression	"eprintf ( ""Failed to calloc mem for new basic block!\\n"" )"		3978233	0					
ANR	3978258	Callee	eprintf		3978233	0					
ANR	3978259	Identifier	eprintf		3978233	0					
ANR	3978260	ArgumentList	"""Failed to calloc mem for new basic block!\\n"""		3978233	1					
ANR	3978261	Argument	"""Failed to calloc mem for new basic block!\\n"""		3978233	0					
ANR	3978262	PrimaryExpression	"""Failed to calloc mem for new basic block!\\n"""		3978233	0					
ANR	3978263	ReturnStatement	return false ;	120:2:2488:2500	3978233	1	True				
ANR	3978264	Identifier	false		3978233	0					
ANR	3978265	ExpressionStatement	"initBB ( bb , start , end , jump , fail , type , score , 0 , 0 )"	122:1:2506:2560	3978233	2	True				
ANR	3978266	CallExpression	"initBB ( bb , start , end , jump , fail , type , score , 0 , 0 )"		3978233	0					
ANR	3978267	Callee	initBB		3978233	0					
ANR	3978268	Identifier	initBB		3978233	0					
ANR	3978269	ArgumentList	bb		3978233	1					
ANR	3978270	Argument	bb		3978233	0					
ANR	3978271	Identifier	bb		3978233	0					
ANR	3978272	Argument	start		3978233	1					
ANR	3978273	Identifier	start		3978233	0					
ANR	3978274	Argument	end		3978233	2					
ANR	3978275	Identifier	end		3978233	0					
ANR	3978276	Argument	jump		3978233	3					
ANR	3978277	Identifier	jump		3978233	0					
ANR	3978278	Argument	fail		3978233	4					
ANR	3978279	Identifier	fail		3978233	0					
ANR	3978280	Argument	type		3978233	5					
ANR	3978281	Identifier	type		3978233	0					
ANR	3978282	Argument	score		3978233	6					
ANR	3978283	Identifier	score		3978233	0					
ANR	3978284	Argument	0		3978233	7					
ANR	3978285	PrimaryExpression	0		3978233	0					
ANR	3978286	Argument	0		3978233	8					
ANR	3978287	PrimaryExpression	0		3978233	0					
ANR	3978288	IfStatement	if ( jump < UT64_MAX )		3978233	3					
ANR	3978289	Condition	jump < UT64_MAX	123:5:2567:2581	3978233	0	True				
ANR	3978290	RelationalExpression	jump < UT64_MAX		3978233	0		<			
ANR	3978291	Identifier	jump		3978233	0					
ANR	3978292	Identifier	UT64_MAX		3978233	1					
ANR	3978293	CompoundStatement		9:2:209:246	3978233	1					
ANR	3978294	IdentifierDeclStatement	bb_t * jump_bb = ( bb_t * ) R_NEW0 ( bb_t ) ;	124:2:2588:2625	3978233	0	True				
ANR	3978295	IdentifierDecl	* jump_bb = ( bb_t * ) R_NEW0 ( bb_t )		3978233	0					
ANR	3978296	IdentifierDeclType	bb_t *		3978233	0					
ANR	3978297	Identifier	jump_bb		3978233	1					
ANR	3978298	AssignmentExpression	* jump_bb = ( bb_t * ) R_NEW0 ( bb_t )		3978233	2		=			
ANR	3978299	Identifier	jump_bb		3978233	0					
ANR	3978300	CastExpression	( bb_t * ) R_NEW0 ( bb_t )		3978233	1					
ANR	3978301	CastTarget	bb_t *		3978233	0					
ANR	3978302	CallExpression	R_NEW0 ( bb_t )		3978233	1					
ANR	3978303	Callee	R_NEW0		3978233	0					
ANR	3978304	Identifier	R_NEW0		3978233	0					
ANR	3978305	ArgumentList	bb_t		3978233	1					
ANR	3978306	Argument	bb_t		3978233	0					
ANR	3978307	Identifier	bb_t		3978233	0					
ANR	3978308	IfStatement	if ( ! jump_bb )		3978233	1					
ANR	3978309	Condition	! jump_bb	125:6:2633:2640	3978233	0	True				
ANR	3978310	UnaryOperationExpression	! jump_bb		3978233	0					
ANR	3978311	UnaryOperator	!		3978233	0					
ANR	3978312	Identifier	jump_bb		3978233	1					
ANR	3978313	CompoundStatement		10:16:264:264	3978233	1					
ANR	3978314	ExpressionStatement	"eprintf ( ""Failed to allocate memory for jump block\\n"" )"	126:3:2648:2702	3978233	0	True				
ANR	3978315	CallExpression	"eprintf ( ""Failed to allocate memory for jump block\\n"" )"		3978233	0					
ANR	3978316	Callee	eprintf		3978233	0					
ANR	3978317	Identifier	eprintf		3978233	0					
ANR	3978318	ArgumentList	"""Failed to allocate memory for jump block\\n"""		3978233	1					
ANR	3978319	Argument	"""Failed to allocate memory for jump block\\n"""		3978233	0					
ANR	3978320	PrimaryExpression	"""Failed to allocate memory for jump block\\n"""		3978233	0					
ANR	3978321	ExpressionStatement	free ( bb )	127:3:2707:2716	3978233	1	True				
ANR	3978322	CallExpression	free ( bb )		3978233	0					
ANR	3978323	Callee	free		3978233	0					
ANR	3978324	Identifier	free		3978233	0					
ANR	3978325	ArgumentList	bb		3978233	1					
ANR	3978326	Argument	bb		3978233	0					
ANR	3978327	Identifier	bb		3978233	0					
ANR	3978328	ReturnStatement	return false ;	128:3:2721:2733	3978233	2	True				
ANR	3978329	Identifier	false		3978233	0					
ANR	3978330	IfStatement	if ( type == CALL )		3978233	2					
ANR	3978331	Condition	type == CALL	130:6:2745:2756	3978233	0	True				
ANR	3978332	EqualityExpression	type == CALL		3978233	0		==			
ANR	3978333	Identifier	type		3978233	0					
ANR	3978334	Identifier	CALL		3978233	1					
ANR	3978335	CompoundStatement		15:20:380:380	3978233	1					
ANR	3978336	ExpressionStatement	"initBB ( jump_bb , jump , UT64_MAX , UT64_MAX , UT64_MAX , CALL , 0 , 1 , 1 )"	131:3:2764:2831	3978233	0	True				
ANR	3978337	CallExpression	"initBB ( jump_bb , jump , UT64_MAX , UT64_MAX , UT64_MAX , CALL , 0 , 1 , 1 )"		3978233	0					
ANR	3978338	Callee	initBB		3978233	0					
ANR	3978339	Identifier	initBB		3978233	0					
ANR	3978340	ArgumentList	jump_bb		3978233	1					
ANR	3978341	Argument	jump_bb		3978233	0					
ANR	3978342	Identifier	jump_bb		3978233	0					
ANR	3978343	Argument	jump		3978233	1					
ANR	3978344	Identifier	jump		3978233	0					
ANR	3978345	Argument	UT64_MAX		3978233	2					
ANR	3978346	Identifier	UT64_MAX		3978233	0					
ANR	3978347	Argument	UT64_MAX		3978233	3					
ANR	3978348	Identifier	UT64_MAX		3978233	0					
ANR	3978349	Argument	UT64_MAX		3978233	4					
ANR	3978350	Identifier	UT64_MAX		3978233	0					
ANR	3978351	Argument	CALL		3978233	5					
ANR	3978352	Identifier	CALL		3978233	0					
ANR	3978353	Argument	0		3978233	6					
ANR	3978354	PrimaryExpression	0		3978233	0					
ANR	3978355	Argument	1		3978233	7					
ANR	3978356	PrimaryExpression	1		3978233	0					
ANR	3978357	Argument	1		3978233	8					
ANR	3978358	PrimaryExpression	1		3978233	0					
ANR	3978359	ElseStatement	else		3978233	0					
ANR	3978360	CompoundStatement		17:9:463:463	3978233	0					
ANR	3978361	ExpressionStatement	"initBB ( jump_bb , jump , UT64_MAX , UT64_MAX , UT64_MAX , JUMP , 0 , 1 , 0 )"	133:3:2847:2914	3978233	0	True				
ANR	3978362	CallExpression	"initBB ( jump_bb , jump , UT64_MAX , UT64_MAX , UT64_MAX , JUMP , 0 , 1 , 0 )"		3978233	0					
ANR	3978363	Callee	initBB		3978233	0					
ANR	3978364	Identifier	initBB		3978233	0					
ANR	3978365	ArgumentList	jump_bb		3978233	1					
ANR	3978366	Argument	jump_bb		3978233	0					
ANR	3978367	Identifier	jump_bb		3978233	0					
ANR	3978368	Argument	jump		3978233	1					
ANR	3978369	Identifier	jump		3978233	0					
ANR	3978370	Argument	UT64_MAX		3978233	2					
ANR	3978371	Identifier	UT64_MAX		3978233	0					
ANR	3978372	Argument	UT64_MAX		3978233	3					
ANR	3978373	Identifier	UT64_MAX		3978233	0					
ANR	3978374	Argument	UT64_MAX		3978233	4					
ANR	3978375	Identifier	UT64_MAX		3978233	0					
ANR	3978376	Argument	JUMP		3978233	5					
ANR	3978377	Identifier	JUMP		3978233	0					
ANR	3978378	Argument	0		3978233	6					
ANR	3978379	PrimaryExpression	0		3978233	0					
ANR	3978380	Argument	1		3978233	7					
ANR	3978381	PrimaryExpression	1		3978233	0					
ANR	3978382	Argument	0		3978233	8					
ANR	3978383	PrimaryExpression	0		3978233	0					
ANR	3978384	ExpressionStatement	"r_list_append ( block_list , jump_bb )"	135:2:2922:2957	3978233	3	True				
ANR	3978385	CallExpression	"r_list_append ( block_list , jump_bb )"		3978233	0					
ANR	3978386	Callee	r_list_append		3978233	0					
ANR	3978387	Identifier	r_list_append		3978233	0					
ANR	3978388	ArgumentList	block_list		3978233	1					
ANR	3978389	Argument	block_list		3978233	0					
ANR	3978390	Identifier	block_list		3978233	0					
ANR	3978391	Argument	jump_bb		3978233	1					
ANR	3978392	Identifier	jump_bb		3978233	0					
ANR	3978393	IfStatement	if ( fail < UT64_MAX )		3978233	4					
ANR	3978394	Condition	fail < UT64_MAX	137:5:2967:2981	3978233	0	True				
ANR	3978395	RelationalExpression	fail < UT64_MAX		3978233	0		<			
ANR	3978396	Identifier	fail		3978233	0					
ANR	3978397	Identifier	UT64_MAX		3978233	1					
ANR	3978398	CompoundStatement		23:2:609:646	3978233	1					
ANR	3978399	IdentifierDeclStatement	bb_t * fail_bb = ( bb_t * ) R_NEW0 ( bb_t ) ;	138:2:2988:3025	3978233	0	True				
ANR	3978400	IdentifierDecl	* fail_bb = ( bb_t * ) R_NEW0 ( bb_t )		3978233	0					
ANR	3978401	IdentifierDeclType	bb_t *		3978233	0					
ANR	3978402	Identifier	fail_bb		3978233	1					
ANR	3978403	AssignmentExpression	* fail_bb = ( bb_t * ) R_NEW0 ( bb_t )		3978233	2		=			
ANR	3978404	Identifier	fail_bb		3978233	0					
ANR	3978405	CastExpression	( bb_t * ) R_NEW0 ( bb_t )		3978233	1					
ANR	3978406	CastTarget	bb_t *		3978233	0					
ANR	3978407	CallExpression	R_NEW0 ( bb_t )		3978233	1					
ANR	3978408	Callee	R_NEW0		3978233	0					
ANR	3978409	Identifier	R_NEW0		3978233	0					
ANR	3978410	ArgumentList	bb_t		3978233	1					
ANR	3978411	Argument	bb_t		3978233	0					
ANR	3978412	Identifier	bb_t		3978233	0					
ANR	3978413	IfStatement	if ( ! fail_bb )		3978233	1					
ANR	3978414	Condition	! fail_bb	139:6:3033:3040	3978233	0	True				
ANR	3978415	UnaryOperationExpression	! fail_bb		3978233	0					
ANR	3978416	UnaryOperator	!		3978233	0					
ANR	3978417	Identifier	fail_bb		3978233	1					
ANR	3978418	CompoundStatement		24:16:664:664	3978233	1					
ANR	3978419	ExpressionStatement	"eprintf ( ""Failed to allocate memory for fail block\\n"" )"	140:3:3048:3102	3978233	0	True				
ANR	3978420	CallExpression	"eprintf ( ""Failed to allocate memory for fail block\\n"" )"		3978233	0					
ANR	3978421	Callee	eprintf		3978233	0					
ANR	3978422	Identifier	eprintf		3978233	0					
ANR	3978423	ArgumentList	"""Failed to allocate memory for fail block\\n"""		3978233	1					
ANR	3978424	Argument	"""Failed to allocate memory for fail block\\n"""		3978233	0					
ANR	3978425	PrimaryExpression	"""Failed to allocate memory for fail block\\n"""		3978233	0					
ANR	3978426	ExpressionStatement	free ( bb )	141:3:3107:3116	3978233	1	True				
ANR	3978427	CallExpression	free ( bb )		3978233	0					
ANR	3978428	Callee	free		3978233	0					
ANR	3978429	Identifier	free		3978233	0					
ANR	3978430	ArgumentList	bb		3978233	1					
ANR	3978431	Argument	bb		3978233	0					
ANR	3978432	Identifier	bb		3978233	0					
ANR	3978433	ReturnStatement	return false ;	142:3:3121:3133	3978233	2	True				
ANR	3978434	Identifier	false		3978233	0					
ANR	3978435	ExpressionStatement	"initBB ( fail_bb , fail , UT64_MAX , UT64_MAX , UT64_MAX , FAIL , 0 , 1 , 0 )"	144:2:3141:3208	3978233	2	True				
ANR	3978436	CallExpression	"initBB ( fail_bb , fail , UT64_MAX , UT64_MAX , UT64_MAX , FAIL , 0 , 1 , 0 )"		3978233	0					
ANR	3978437	Callee	initBB		3978233	0					
ANR	3978438	Identifier	initBB		3978233	0					
ANR	3978439	ArgumentList	fail_bb		3978233	1					
ANR	3978440	Argument	fail_bb		3978233	0					
ANR	3978441	Identifier	fail_bb		3978233	0					
ANR	3978442	Argument	fail		3978233	1					
ANR	3978443	Identifier	fail		3978233	0					
ANR	3978444	Argument	UT64_MAX		3978233	2					
ANR	3978445	Identifier	UT64_MAX		3978233	0					
ANR	3978446	Argument	UT64_MAX		3978233	3					
ANR	3978447	Identifier	UT64_MAX		3978233	0					
ANR	3978448	Argument	UT64_MAX		3978233	4					
ANR	3978449	Identifier	UT64_MAX		3978233	0					
ANR	3978450	Argument	FAIL		3978233	5					
ANR	3978451	Identifier	FAIL		3978233	0					
ANR	3978452	Argument	0		3978233	6					
ANR	3978453	PrimaryExpression	0		3978233	0					
ANR	3978454	Argument	1		3978233	7					
ANR	3978455	PrimaryExpression	1		3978233	0					
ANR	3978456	Argument	0		3978233	8					
ANR	3978457	PrimaryExpression	0		3978233	0					
ANR	3978458	ExpressionStatement	"r_list_append ( block_list , fail_bb )"	145:2:3212:3247	3978233	3	True				
ANR	3978459	CallExpression	"r_list_append ( block_list , fail_bb )"		3978233	0					
ANR	3978460	Callee	r_list_append		3978233	0					
ANR	3978461	Identifier	r_list_append		3978233	0					
ANR	3978462	ArgumentList	block_list		3978233	1					
ANR	3978463	Argument	block_list		3978233	0					
ANR	3978464	Identifier	block_list		3978233	0					
ANR	3978465	Argument	fail_bb		3978233	1					
ANR	3978466	Identifier	fail_bb		3978233	0					
ANR	3978467	ExpressionStatement	"r_list_append ( block_list , bb )"	147:1:3253:3283	3978233	5	True				
ANR	3978468	CallExpression	"r_list_append ( block_list , bb )"		3978233	0					
ANR	3978469	Callee	r_list_append		3978233	0					
ANR	3978470	Identifier	r_list_append		3978233	0					
ANR	3978471	ArgumentList	block_list		3978233	1					
ANR	3978472	Argument	block_list		3978233	0					
ANR	3978473	Identifier	block_list		3978233	0					
ANR	3978474	Argument	bb		3978233	1					
ANR	3978475	Identifier	bb		3978233	0					
ANR	3978476	ReturnStatement	return true ;	148:1:3286:3297	3978233	6	True				
ANR	3978477	Identifier	true		3978233	0					
ANR	3978478	ReturnType	static bool		3978233	1					
ANR	3978479	Identifier	addBB		3978233	2					
ANR	3978480	ParameterList	"RList * block_list , ut64 start , ut64 end , ut64 jump , ut64 fail , bb_type_t type , int score"		3978233	3					
ANR	3978481	Parameter	RList * block_list	116:18:2288:2304	3978233	0	True				
ANR	3978482	ParameterType	RList *		3978233	0					
ANR	3978483	Identifier	block_list		3978233	1					
ANR	3978484	Parameter	ut64 start	116:37:2307:2316	3978233	1	True				
ANR	3978485	ParameterType	ut64		3978233	0					
ANR	3978486	Identifier	start		3978233	1					
ANR	3978487	Parameter	ut64 end	116:49:2319:2326	3978233	2	True				
ANR	3978488	ParameterType	ut64		3978233	0					
ANR	3978489	Identifier	end		3978233	1					
ANR	3978490	Parameter	ut64 jump	116:59:2329:2337	3978233	3	True				
ANR	3978491	ParameterType	ut64		3978233	0					
ANR	3978492	Identifier	jump		3978233	1					
ANR	3978493	Parameter	ut64 fail	116:70:2340:2348	3978233	4	True				
ANR	3978494	ParameterType	ut64		3978233	0					
ANR	3978495	Identifier	fail		3978233	1					
ANR	3978496	Parameter	bb_type_t type	116:81:2351:2364	3978233	5	True				
ANR	3978497	ParameterType	bb_type_t		3978233	0					
ANR	3978498	Identifier	type		3978233	1					
ANR	3978499	Parameter	int score	116:97:2367:2375	3978233	6	True				
ANR	3978500	ParameterType	int		3978233	0					
ANR	3978501	Identifier	score		3978233	1					
ANR	3978502	CFGEntryNode	ENTRY		3978233		True				
ANR	3978503	CFGExitNode	EXIT		3978233		True				
ANR	3978504	Symbol	bb		3978233						
ANR	3978505	Symbol	CALL		3978233						
ANR	3978506	Symbol	start		3978233						
ANR	3978507	Symbol	false		3978233						
ANR	3978508	Symbol	type		3978233						
ANR	3978509	Symbol	JUMP		3978233						
ANR	3978510	Symbol	fail		3978233						
ANR	3978511	Symbol	score		3978233						
ANR	3978512	Symbol	R_NEW0		3978233						
ANR	3978513	Symbol	true		3978233						
ANR	3978514	Symbol	end		3978233						
ANR	3978515	Symbol	fail_bb		3978233						
ANR	3978516	Symbol	block_list		3978233						
ANR	3978517	Symbol	bb_t		3978233						
ANR	3978518	Symbol	UT64_MAX		3978233						
ANR	3978519	Symbol	jump_bb		3978233						
ANR	3978520	Symbol	FAIL		3978233						
ANR	3978521	Symbol	jump		3978233						
ANR	3978522	Function	dump_block	151:0:3302:3488							
ANR	3978523	FunctionDef	dump_block (bb_t * block)		3978522	0					
ANR	3978524	CompoundStatement		151:29:3331:3488	3978522	0					
ANR	3978525	Statement	eprintf	152:1:3334:3340	3978522	0	True				
ANR	3978526	Statement	(	152:9:3342:3342	3978522	1	True				
ANR	3978527	Statement	"""s: 0x%"""	152:10:3343:3350	3978522	2	True				
ANR	3978528	Statement	PFMT64x	152:18:3351:3357	3978522	3	True				
ANR	3978529	Statement	""" e: 0x%"""	152:25:3358:3366	3978522	4	True				
ANR	3978530	Statement	PFMT64x	152:34:3367:3373	3978522	5	True				
ANR	3978531	Statement	""" j: 0x%"""	152:41:3374:3382	3978522	6	True				
ANR	3978532	Statement	PFMT64x	152:50:3383:3389	3978522	7	True				
ANR	3978533	Statement	""" f: 0x%"""	152:57:3390:3398	3978522	8	True				
ANR	3978534	Statement	PFMT64x	152:66:3399:3405	3978522	9	True				
ANR	3978535	Statement	""" t: %d\\n"""	152:73:3406:3415	3978522	10	True				
ANR	3978536	Statement	","	153:3:3420:3420	3978522	11	True				
ANR	3978537	Statement	block	153:5:3422:3426	3978522	12	True				
ANR	3978538	Statement	->	153:10:3427:3428	3978522	13	True				
ANR	3978539	Statement	start	153:12:3429:3433	3978522	14	True				
ANR	3978540	Statement	","	153:17:3434:3434	3978522	15	True				
ANR	3978541	Statement	block	153:19:3436:3440	3978522	16	True				
ANR	3978542	Statement	->	153:24:3441:3442	3978522	17	True				
ANR	3978543	Statement	end	153:26:3443:3445	3978522	18	True				
ANR	3978544	Statement	","	153:29:3446:3446	3978522	19	True				
ANR	3978545	Statement	block	153:31:3448:3452	3978522	20	True				
ANR	3978546	Statement	->	153:36:3453:3454	3978522	21	True				
ANR	3978547	Statement	jump	153:38:3455:3458	3978522	22	True				
ANR	3978548	Statement	","	153:42:3459:3459	3978522	23	True				
ANR	3978549	Statement	block	153:44:3461:3465	3978522	24	True				
ANR	3978550	Statement	->	153:49:3466:3467	3978522	25	True				
ANR	3978551	Statement	fail	153:51:3468:3471	3978522	26	True				
ANR	3978552	Statement	","	153:55:3472:3472	3978522	27	True				
ANR	3978553	Statement	block	153:57:3474:3478	3978522	28	True				
ANR	3978554	Statement	->	153:62:3479:3480	3978522	29	True				
ANR	3978555	Statement	type	153:64:3481:3484	3978522	30	True				
ANR	3978556	Statement	)	153:68:3485:3485	3978522	31	True				
ANR	3978557	ExpressionStatement		153:69:3486:3486	3978522	32	True				
ANR	3978558	ReturnType	void		3978522	1					
ANR	3978559	Identifier	dump_block		3978522	2					
ANR	3978560	ParameterList	bb_t * block		3978522	3					
ANR	3978561	Parameter	bb_t * block	151:16:3318:3328	3978522	0	True				
ANR	3978562	ParameterType	bb_t *		3978522	0					
ANR	3978563	Identifier	block		3978522	1					
ANR	3978564	CFGEntryNode	ENTRY		3978522		True				
ANR	3978565	CFGExitNode	EXIT		3978522		True				
ANR	3978566	Symbol	block		3978522						
ANR	3978567	Function	dump_blocks	156:0:3491:3625							
ANR	3978568	FunctionDef	dump_blocks (RList * list)		3978567	0					
ANR	3978569	CompoundStatement		156:31:3522:3625	3978567	0					
ANR	3978570	IdentifierDeclStatement	RListIter * iter ;	157:1:3525:3540	3978567	0	True				
ANR	3978571	IdentifierDecl	* iter		3978567	0					
ANR	3978572	IdentifierDeclType	RListIter *		3978567	0					
ANR	3978573	Identifier	iter		3978567	1					
ANR	3978574	IdentifierDeclStatement	bb_t * block = NULL ;	158:1:3543:3561	3978567	1	True				
ANR	3978575	IdentifierDecl	* block = NULL		3978567	0					
ANR	3978576	IdentifierDeclType	bb_t *		3978567	0					
ANR	3978577	Identifier	block		3978567	1					
ANR	3978578	AssignmentExpression	* block = NULL		3978567	2		=			
ANR	3978579	Identifier	NULL		3978567	0					
ANR	3978580	Identifier	NULL		3978567	1					
ANR	3978581	Statement	r_list_foreach	159:1:3564:3577	3978567	2	True				
ANR	3978582	Statement	(	159:16:3579:3579	3978567	3	True				
ANR	3978583	Statement	list	159:17:3580:3583	3978567	4	True				
ANR	3978584	Statement	","	159:21:3584:3584	3978567	5	True				
ANR	3978585	Statement	iter	159:23:3586:3589	3978567	6	True				
ANR	3978586	Statement	","	159:27:3590:3590	3978567	7	True				
ANR	3978587	Statement	block	159:29:3592:3596	3978567	8	True				
ANR	3978588	Statement	)	159:34:3597:3597	3978567	9	True				
ANR	3978589	CompoundStatement		4:36:76:76	3978567	10					
ANR	3978590	ExpressionStatement	dump_block ( block )	160:2:3603:3620	3978567	0	True				
ANR	3978591	CallExpression	dump_block ( block )		3978567	0					
ANR	3978592	Callee	dump_block		3978567	0					
ANR	3978593	Identifier	dump_block		3978567	0					
ANR	3978594	ArgumentList	block		3978567	1					
ANR	3978595	Argument	block		3978567	0					
ANR	3978596	Identifier	block		3978567	0					
ANR	3978597	ReturnType	void		3978567	1					
ANR	3978598	Identifier	dump_blocks		3978567	2					
ANR	3978599	ParameterList	RList * list		3978567	3					
ANR	3978600	Parameter	RList * list	156:18:3509:3519	3978567	0	True				
ANR	3978601	ParameterType	RList *		3978567	0					
ANR	3978602	Identifier	list		3978567	1					
ANR	3978603	CFGEntryNode	ENTRY		3978567		True				
ANR	3978604	CFGExitNode	EXIT		3978567		True				
ANR	3978605	Symbol	NULL		3978567						
ANR	3978606	Symbol	iter		3978567						
ANR	3978607	Symbol	block		3978567						
ANR	3978608	Symbol	list		3978567						
ANR	3978609	Function	checkFunction	164:0:3628:3748							
ANR	3978610	FunctionDef	checkFunction (fcn_t * fcn)		3978609	0					
ANR	3978611	CompoundStatement		164:38:3666:3748	3978609	0					
ANR	3978612	IfStatement	if ( fcn && fcn -> ends > 0 && fcn -> size > 0 )		3978609	0					
ANR	3978613	Condition	fcn && fcn -> ends > 0 && fcn -> size > 0	165:5:3673:3709	3978609	0	True				
ANR	3978614	AndExpression	fcn && fcn -> ends > 0 && fcn -> size > 0		3978609	0		&&			
ANR	3978615	Identifier	fcn		3978609	0					
ANR	3978616	AndExpression	fcn -> ends > 0 && fcn -> size > 0		3978609	1		&&			
ANR	3978617	RelationalExpression	fcn -> ends > 0		3978609	0		>			
ANR	3978618	PtrMemberAccess	fcn -> ends		3978609	0					
ANR	3978619	Identifier	fcn		3978609	0					
ANR	3978620	Identifier	ends		3978609	1					
ANR	3978621	PrimaryExpression	0		3978609	1					
ANR	3978622	RelationalExpression	fcn -> size > 0		3978609	1		>			
ANR	3978623	PtrMemberAccess	fcn -> size		3978609	0					
ANR	3978624	Identifier	fcn		3978609	0					
ANR	3978625	Identifier	size		3978609	1					
ANR	3978626	PrimaryExpression	0		3978609	1					
ANR	3978627	CompoundStatement		2:44:45:45	3978609	1					
ANR	3978628	ReturnStatement	return true ;	166:2:3716:3727	3978609	0	True				
ANR	3978629	Identifier	true		3978609	0					
ANR	3978630	ReturnStatement	return false ;	169:1:3734:3746	3978609	1	True				
ANR	3978631	Identifier	false		3978609	0					
ANR	3978632	ReturnType	static bool		3978609	1					
ANR	3978633	Identifier	checkFunction		3978609	2					
ANR	3978634	ParameterList	fcn_t * fcn		3978609	3					
ANR	3978635	Parameter	fcn_t * fcn	164:26:3654:3663	3978609	0	True				
ANR	3978636	ParameterType	fcn_t *		3978609	0					
ANR	3978637	Identifier	fcn		3978609	1					
ANR	3978638	CFGEntryNode	ENTRY		3978609		True				
ANR	3978639	CFGExitNode	EXIT		3978609		True				
ANR	3978640	Symbol	fcn		3978609						
ANR	3978641	Symbol	fcn -> size		3978609						
ANR	3978642	Symbol	fcn -> ends		3978609						
ANR	3978643	Symbol	* fcn		3978609						
ANR	3978644	Symbol	true		3978609						
ANR	3978645	Symbol	false		3978609						
ANR	3978646	Function	printFunctionCommands	172:0:3751:4435							
ANR	3978647	FunctionDef	"printFunctionCommands (RCore * core , fcn_t * fcn , const char * name)"		3978646	0					
ANR	3978648	CompoundStatement		172:77:3828:4435	3978646	0					
ANR	3978649	IfStatement	if ( ! fcn )		3978646	0					
ANR	3978650	Condition	! fcn	173:5:3835:3838	3978646	0	True				
ANR	3978651	UnaryOperationExpression	! fcn		3978646	0					
ANR	3978652	UnaryOperator	!		3978646	0					
ANR	3978653	Identifier	fcn		3978646	1					
ANR	3978654	CompoundStatement		2:11:12:12	3978646	1					
ANR	3978655	ExpressionStatement	"eprintf ( ""No function given to print\\n"" )"	174:2:3845:3885	3978646	0	True				
ANR	3978656	CallExpression	"eprintf ( ""No function given to print\\n"" )"		3978646	0					
ANR	3978657	Callee	eprintf		3978646	0					
ANR	3978658	Identifier	eprintf		3978646	0					
ANR	3978659	ArgumentList	"""No function given to print\\n"""		3978646	1					
ANR	3978660	Argument	"""No function given to print\\n"""		3978646	0					
ANR	3978661	PrimaryExpression	"""No function given to print\\n"""		3978646	0					
ANR	3978662	ReturnStatement	return ;	175:2:3889:3895	3978646	1	True				
ANR	3978663	IdentifierDeclStatement	RListIter * fcn_iter ;	178:1:3902:3921	3978646	1	True				
ANR	3978664	IdentifierDecl	* fcn_iter		3978646	0					
ANR	3978665	IdentifierDeclType	RListIter *		3978646	0					
ANR	3978666	Identifier	fcn_iter		3978646	1					
ANR	3978667	IdentifierDeclStatement	bb_t * cur = NULL ;	179:1:3924:3940	3978646	2	True				
ANR	3978668	IdentifierDecl	* cur = NULL		3978646	0					
ANR	3978669	IdentifierDeclType	bb_t *		3978646	0					
ANR	3978670	Identifier	cur		3978646	1					
ANR	3978671	AssignmentExpression	* cur = NULL		3978646	2		=			
ANR	3978672	Identifier	NULL		3978646	0					
ANR	3978673	Identifier	NULL		3978646	1					
ANR	3978674	IdentifierDeclStatement	"const char * pfx = r_config_get ( core -> config , ""anal.fcnprefix"" ) ;"	180:1:3943:4006	3978646	3	True				
ANR	3978675	IdentifierDecl	"* pfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		3978646	0					
ANR	3978676	IdentifierDeclType	const char *		3978646	0					
ANR	3978677	Identifier	pfx		3978646	1					
ANR	3978678	AssignmentExpression	"* pfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		3978646	2		=			
ANR	3978679	Identifier	pfx		3978646	0					
ANR	3978680	CallExpression	"r_config_get ( core -> config , ""anal.fcnprefix"" )"		3978646	1					
ANR	3978681	Callee	r_config_get		3978646	0					
ANR	3978682	Identifier	r_config_get		3978646	0					
ANR	3978683	ArgumentList	core -> config		3978646	1					
ANR	3978684	Argument	core -> config		3978646	0					
ANR	3978685	PtrMemberAccess	core -> config		3978646	0					
ANR	3978686	Identifier	core		3978646	0					
ANR	3978687	Identifier	config		3978646	1					
ANR	3978688	Argument	"""anal.fcnprefix"""		3978646	1					
ANR	3978689	PrimaryExpression	"""anal.fcnprefix"""		3978646	0					
ANR	3978690	IfStatement	if ( ! pfx )		3978646	4					
ANR	3978691	Condition	! pfx	181:5:4013:4016	3978646	0	True				
ANR	3978692	UnaryOperationExpression	! pfx		3978646	0					
ANR	3978693	UnaryOperator	!		3978646	0					
ANR	3978694	Identifier	pfx		3978646	1					
ANR	3978695	CompoundStatement		10:11:190:190	3978646	1					
ANR	3978696	ExpressionStatement	"pfx = ""fcn"""	182:2:4023:4034	3978646	0	True				
ANR	3978697	AssignmentExpression	"pfx = ""fcn"""		3978646	0		=			
ANR	3978698	Identifier	pfx		3978646	0					
ANR	3978699	PrimaryExpression	"""fcn"""		3978646	1					
ANR	3978700	Statement	char	185:1:4041:4044	3978646	5	True				
ANR	3978701	Statement	*	185:6:4046:4046	3978646	6	True				
ANR	3978702	Statement	_name	185:7:4047:4051	3978646	7	True				
ANR	3978703	Statement	=	185:13:4053:4053	3978646	8	True				
ANR	3978704	Statement	name	185:15:4055:4058	3978646	9	True				
ANR	3978705	Statement	?	185:19:4059:4059	3978646	10	True				
ANR	3978706	Statement	(	185:21:4061:4061	3978646	11	True				
ANR	3978707	Statement	char	185:22:4062:4065	3978646	12	True				
ANR	3978708	Statement	*	185:27:4067:4067	3978646	13	True				
ANR	3978709	Statement	)	185:28:4068:4068	3978646	14	True				
ANR	3978710	Label	name :	185:30:4070:4074	3978646	15	True				
ANR	3978711	Identifier	name		3978646	0					
ANR	3978712	Statement	r_str_newf	185:36:4076:4085	3978646	16	True				
ANR	3978713	Statement	(	185:47:4087:4087	3978646	17	True				
ANR	3978714	Statement	"""%s.%"""	185:48:4088:4093	3978646	18	True				
ANR	3978715	Statement	PFMT64x	185:55:4095:4101	3978646	19	True				
ANR	3978716	Statement	","	185:62:4102:4102	3978646	20	True				
ANR	3978717	Statement	pfx	185:64:4104:4106	3978646	21	True				
ANR	3978718	Statement	","	185:67:4107:4107	3978646	22	True				
ANR	3978719	Statement	fcn	185:69:4109:4111	3978646	23	True				
ANR	3978720	Statement	->	185:72:4112:4113	3978646	24	True				
ANR	3978721	Statement	addr	185:74:4114:4117	3978646	25	True				
ANR	3978722	Statement	)	185:78:4118:4118	3978646	26	True				
ANR	3978723	ExpressionStatement		185:79:4119:4119	3978646	27	True				
ANR	3978724	Statement	r_cons_printf	186:1:4122:4134	3978646	28	True				
ANR	3978725	Statement	(	186:15:4136:4136	3978646	29	True				
ANR	3978726	Statement	"""af+ 0x%08"""	186:16:4137:4147	3978646	30	True				
ANR	3978727	Statement	PFMT64x	186:28:4149:4155	3978646	31	True				
ANR	3978728	Statement	""" %s\\n"""	186:36:4157:4163	3978646	32	True				
ANR	3978729	Statement	","	186:43:4164:4164	3978646	33	True				
ANR	3978730	Statement	fcn	186:45:4166:4168	3978646	34	True				
ANR	3978731	Statement	->	186:48:4169:4170	3978646	35	True				
ANR	3978732	Statement	addr	186:50:4171:4174	3978646	36	True				
ANR	3978733	Statement	","	186:54:4175:4175	3978646	37	True				
ANR	3978734	Statement	_name	186:56:4177:4181	3978646	38	True				
ANR	3978735	Statement	)	186:61:4182:4182	3978646	39	True				
ANR	3978736	ExpressionStatement		186:62:4183:4183	3978646	40	True				
ANR	3978737	IfStatement	if ( ! name )		3978646	41					
ANR	3978738	Condition	! name	187:5:4190:4194	3978646	0	True				
ANR	3978739	UnaryOperationExpression	! name		3978646	0					
ANR	3978740	UnaryOperator	!		3978646	0					
ANR	3978741	Identifier	name		3978646	1					
ANR	3978742	CompoundStatement		16:12:368:368	3978646	1					
ANR	3978743	ExpressionStatement	free ( _name )	188:2:4201:4213	3978646	0	True				
ANR	3978744	CallExpression	free ( _name )		3978646	0					
ANR	3978745	Callee	free		3978646	0					
ANR	3978746	Identifier	free		3978646	0					
ANR	3978747	ArgumentList	_name		3978646	1					
ANR	3978748	Argument	_name		3978646	0					
ANR	3978749	Identifier	_name		3978646	0					
ANR	3978750	Statement	r_list_foreach	191:1:4220:4233	3978646	42	True				
ANR	3978751	Statement	(	191:16:4235:4235	3978646	43	True				
ANR	3978752	Statement	fcn	191:17:4236:4238	3978646	44	True				
ANR	3978753	Statement	->	191:20:4239:4240	3978646	45	True				
ANR	3978754	Statement	bbs	191:22:4241:4243	3978646	46	True				
ANR	3978755	Statement	","	191:25:4244:4244	3978646	47	True				
ANR	3978756	Statement	fcn_iter	191:27:4246:4253	3978646	48	True				
ANR	3978757	Statement	","	191:35:4254:4254	3978646	49	True				
ANR	3978758	Statement	cur	191:37:4256:4258	3978646	50	True				
ANR	3978759	Statement	)	191:40:4259:4259	3978646	51	True				
ANR	3978760	CompoundStatement		20:42:432:432	3978646	52					
ANR	3978761	Statement	r_cons_printf	192:2:4265:4277	3978646	0	True				
ANR	3978762	Statement	(	192:16:4279:4279	3978646	1	True				
ANR	3978763	Statement	"""afb+ 0x%08"""	192:17:4280:4291	3978646	2	True				
ANR	3978764	Statement	PFMT64x	192:30:4293:4299	3978646	3	True				
ANR	3978765	Statement	""" 0x%08"""	192:38:4301:4308	3978646	4	True				
ANR	3978766	Statement	PFMT64x	192:47:4310:4316	3978646	5	True				
ANR	3978767	Statement	""" %llu 0x%08"""	192:55:4318:4330	3978646	6	True				
ANR	3978768	Statement	PFMT64x	192:68:4331:4337	3978646	7	True				
ANR	3978769	Statement	""" 0x%08"""	192:75:4338:4345	3978646	8	True				
ANR	3978770	Statement	PFMT64x	192:83:4346:4352	3978646	9	True				
ANR	3978771	Statement	"""\\n"""	192:90:4353:4356	3978646	10	True				
ANR	3978772	Statement	","	193:3:4361:4361	3978646	11	True				
ANR	3978773	Statement	fcn	193:5:4363:4365	3978646	12	True				
ANR	3978774	Statement	->	193:8:4366:4367	3978646	13	True				
ANR	3978775	Statement	addr	193:10:4368:4371	3978646	14	True				
ANR	3978776	Statement	","	193:14:4372:4372	3978646	15	True				
ANR	3978777	Statement	cur	193:16:4374:4376	3978646	16	True				
ANR	3978778	Statement	->	193:19:4377:4378	3978646	17	True				
ANR	3978779	Statement	start	193:21:4379:4383	3978646	18	True				
ANR	3978780	Statement	","	193:26:4384:4384	3978646	19	True				
ANR	3978781	Statement	cur	193:28:4386:4388	3978646	20	True				
ANR	3978782	Statement	->	193:31:4389:4390	3978646	21	True				
ANR	3978783	Statement	end	193:33:4391:4393	3978646	22	True				
ANR	3978784	Statement	-	193:37:4395:4395	3978646	23	True				
ANR	3978785	Statement	cur	193:39:4397:4399	3978646	24	True				
ANR	3978786	Statement	->	193:42:4400:4401	3978646	25	True				
ANR	3978787	Statement	start	193:44:4402:4406	3978646	26	True				
ANR	3978788	Statement	","	193:49:4407:4407	3978646	27	True				
ANR	3978789	Statement	cur	193:51:4409:4411	3978646	28	True				
ANR	3978790	Statement	->	193:54:4412:4413	3978646	29	True				
ANR	3978791	Statement	jump	193:56:4414:4417	3978646	30	True				
ANR	3978792	Statement	","	193:60:4418:4418	3978646	31	True				
ANR	3978793	Statement	cur	193:62:4420:4422	3978646	32	True				
ANR	3978794	Statement	->	193:65:4423:4424	3978646	33	True				
ANR	3978795	Statement	fail	193:67:4425:4428	3978646	34	True				
ANR	3978796	Statement	)	193:71:4429:4429	3978646	35	True				
ANR	3978797	ExpressionStatement		193:72:4430:4430	3978646	36	True				
ANR	3978798	ReturnType	static void		3978646	1					
ANR	3978799	Identifier	printFunctionCommands		3978646	2					
ANR	3978800	ParameterList	"RCore * core , fcn_t * fcn , const char * name"		3978646	3					
ANR	3978801	Parameter	RCore * core	172:34:3785:3795	3978646	0	True				
ANR	3978802	ParameterType	RCore *		3978646	0					
ANR	3978803	Identifier	core		3978646	1					
ANR	3978804	Parameter	fcn_t * fcn	172:47:3798:3807	3978646	1	True				
ANR	3978805	ParameterType	fcn_t *		3978646	0					
ANR	3978806	Identifier	fcn		3978646	1					
ANR	3978807	Parameter	const char * name	172:59:3810:3825	3978646	2	True				
ANR	3978808	ParameterType	const char *		3978646	0					
ANR	3978809	Identifier	name		3978646	1					
ANR	3978810	CFGEntryNode	ENTRY		3978646		True				
ANR	3978811	CFGExitNode	EXIT		3978646		True				
ANR	3978812	Symbol	fcn		3978646						
ANR	3978813	Symbol	core -> config		3978646						
ANR	3978814	Symbol	core		3978646						
ANR	3978815	Symbol	cur		3978646						
ANR	3978816	Symbol	NULL		3978646						
ANR	3978817	Symbol	pfx		3978646						
ANR	3978818	Symbol	fcn_iter		3978646						
ANR	3978819	Symbol	_name		3978646						
ANR	3978820	Symbol	name		3978646						
ANR	3978821	Symbol	* core		3978646						
ANR	3978822	Symbol	r_config_get		3978646						
ANR	3978823	Function	createFunction	197:0:4438:5455							
ANR	3978824	FunctionDef	"createFunction (RCore * core , fcn_t * fcn , const char * name)"		3978823	0					
ANR	3978825	CompoundStatement		197:70:4508:5455	3978823	0					
ANR	3978826	IfStatement	if ( ! fcn )		3978823	0					
ANR	3978827	Condition	! fcn	198:5:4515:4518	3978823	0	True				
ANR	3978828	UnaryOperationExpression	! fcn		3978823	0					
ANR	3978829	UnaryOperator	!		3978823	0					
ANR	3978830	Identifier	fcn		3978823	1					
ANR	3978831	CompoundStatement		2:11:12:12	3978823	1					
ANR	3978832	ExpressionStatement	"eprintf ( ""No function given to create\\n"" )"	199:2:4525:4566	3978823	0	True				
ANR	3978833	CallExpression	"eprintf ( ""No function given to create\\n"" )"		3978823	0					
ANR	3978834	Callee	eprintf		3978823	0					
ANR	3978835	Identifier	eprintf		3978823	0					
ANR	3978836	ArgumentList	"""No function given to create\\n"""		3978823	1					
ANR	3978837	Argument	"""No function given to create\\n"""		3978823	0					
ANR	3978838	PrimaryExpression	"""No function given to create\\n"""		3978823	0					
ANR	3978839	ReturnStatement	return ;	200:2:4570:4576	3978823	1	True				
ANR	3978840	IdentifierDeclStatement	RListIter * fcn_iter ;	203:1:4583:4602	3978823	1	True				
ANR	3978841	IdentifierDecl	* fcn_iter		3978823	0					
ANR	3978842	IdentifierDeclType	RListIter *		3978823	0					
ANR	3978843	Identifier	fcn_iter		3978823	1					
ANR	3978844	IdentifierDeclStatement	bb_t * cur = NULL ;	204:1:4605:4621	3978823	2	True				
ANR	3978845	IdentifierDecl	* cur = NULL		3978823	0					
ANR	3978846	IdentifierDeclType	bb_t *		3978823	0					
ANR	3978847	Identifier	cur		3978823	1					
ANR	3978848	AssignmentExpression	* cur = NULL		3978823	2		=			
ANR	3978849	Identifier	NULL		3978823	0					
ANR	3978850	Identifier	NULL		3978823	1					
ANR	3978851	IdentifierDeclStatement	"const char * pfx = r_config_get ( core -> config , ""anal.fcnprefix"" ) ;"	205:1:4624:4687	3978823	3	True				
ANR	3978852	IdentifierDecl	"* pfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		3978823	0					
ANR	3978853	IdentifierDeclType	const char *		3978823	0					
ANR	3978854	Identifier	pfx		3978823	1					
ANR	3978855	AssignmentExpression	"* pfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		3978823	2		=			
ANR	3978856	Identifier	pfx		3978823	0					
ANR	3978857	CallExpression	"r_config_get ( core -> config , ""anal.fcnprefix"" )"		3978823	1					
ANR	3978858	Callee	r_config_get		3978823	0					
ANR	3978859	Identifier	r_config_get		3978823	0					
ANR	3978860	ArgumentList	core -> config		3978823	1					
ANR	3978861	Argument	core -> config		3978823	0					
ANR	3978862	PtrMemberAccess	core -> config		3978823	0					
ANR	3978863	Identifier	core		3978823	0					
ANR	3978864	Identifier	config		3978823	1					
ANR	3978865	Argument	"""anal.fcnprefix"""		3978823	1					
ANR	3978866	PrimaryExpression	"""anal.fcnprefix"""		3978823	0					
ANR	3978867	IfStatement	if ( ! pfx )		3978823	4					
ANR	3978868	Condition	! pfx	206:5:4694:4697	3978823	0	True				
ANR	3978869	UnaryOperationExpression	! pfx		3978823	0					
ANR	3978870	UnaryOperator	!		3978823	0					
ANR	3978871	Identifier	pfx		3978823	1					
ANR	3978872	CompoundStatement		10:11:191:191	3978823	1					
ANR	3978873	ExpressionStatement	"pfx = ""fcn"""	207:2:4704:4715	3978823	0	True				
ANR	3978874	AssignmentExpression	"pfx = ""fcn"""		3978823	0		=			
ANR	3978875	Identifier	pfx		3978823	0					
ANR	3978876	PrimaryExpression	"""fcn"""		3978823	1					
ANR	3978877	IdentifierDeclStatement	RAnalFunction * f = r_anal_fcn_new ( ) ;	210:1:4722:4758	3978823	5	True				
ANR	3978878	IdentifierDecl	* f = r_anal_fcn_new ( )		3978823	0					
ANR	3978879	IdentifierDeclType	RAnalFunction *		3978823	0					
ANR	3978880	Identifier	f		3978823	1					
ANR	3978881	AssignmentExpression	* f = r_anal_fcn_new ( )		3978823	2		=			
ANR	3978882	Identifier	f		3978823	0					
ANR	3978883	CallExpression	r_anal_fcn_new ( )		3978823	1					
ANR	3978884	Callee	r_anal_fcn_new		3978823	0					
ANR	3978885	Identifier	r_anal_fcn_new		3978823	0					
ANR	3978886	ArgumentList			3978823	1					
ANR	3978887	IfStatement	if ( ! f )		3978823	6					
ANR	3978888	Condition	! f	211:5:4765:4766	3978823	0	True				
ANR	3978889	UnaryOperationExpression	! f		3978823	0					
ANR	3978890	UnaryOperator	!		3978823	0					
ANR	3978891	Identifier	f		3978823	1					
ANR	3978892	CompoundStatement		15:9:260:260	3978823	1					
ANR	3978893	ExpressionStatement	"eprintf ( ""Failed to create new function\\n"" )"	212:2:4773:4816	3978823	0	True				
ANR	3978894	CallExpression	"eprintf ( ""Failed to create new function\\n"" )"		3978823	0					
ANR	3978895	Callee	eprintf		3978823	0					
ANR	3978896	Identifier	eprintf		3978823	0					
ANR	3978897	ArgumentList	"""Failed to create new function\\n"""		3978823	1					
ANR	3978898	Argument	"""Failed to create new function\\n"""		3978823	0					
ANR	3978899	PrimaryExpression	"""Failed to create new function\\n"""		3978823	0					
ANR	3978900	ReturnStatement	return ;	213:2:4820:4826	3978823	1	True				
ANR	3978901	Statement	f	216:1:4833:4833	3978823	7	True				
ANR	3978902	Statement	->	216:2:4834:4835	3978823	8	True				
ANR	3978903	Statement	name	216:4:4836:4839	3978823	9	True				
ANR	3978904	Statement	=	216:9:4841:4841	3978823	10	True				
ANR	3978905	Statement	name	216:11:4843:4846	3978823	11	True				
ANR	3978906	Statement	?	216:15:4847:4847	3978823	12	True				
ANR	3978907	Statement	strdup	216:17:4849:4854	3978823	13	True				
ANR	3978908	Statement	(	216:24:4856:4856	3978823	14	True				
ANR	3978909	Statement	name	216:25:4857:4860	3978823	15	True				
ANR	3978910	Statement	)	216:29:4861:4861	3978823	16	True				
ANR	3978911	Statement	:	216:30:4862:4862	3978823	17	True				
ANR	3978912	Statement	r_str_newf	216:32:4864:4873	3978823	18	True				
ANR	3978913	Statement	(	216:43:4875:4875	3978823	19	True				
ANR	3978914	Statement	"""%s.%"""	216:44:4876:4881	3978823	20	True				
ANR	3978915	Statement	PFMT64x	216:51:4883:4889	3978823	21	True				
ANR	3978916	Statement	","	216:58:4890:4890	3978823	22	True				
ANR	3978917	Statement	pfx	216:60:4892:4894	3978823	23	True				
ANR	3978918	Statement	","	216:63:4895:4895	3978823	24	True				
ANR	3978919	Statement	fcn	216:65:4897:4899	3978823	25	True				
ANR	3978920	Statement	->	216:68:4900:4901	3978823	26	True				
ANR	3978921	Statement	addr	216:70:4902:4905	3978823	27	True				
ANR	3978922	Statement	)	216:74:4906:4906	3978823	28	True				
ANR	3978923	ExpressionStatement		216:75:4907:4907	3978823	29	True				
ANR	3978924	ExpressionStatement	f -> addr = fcn -> addr	217:1:4910:4929	3978823	30	True				
ANR	3978925	AssignmentExpression	f -> addr = fcn -> addr		3978823	0		=			
ANR	3978926	PtrMemberAccess	f -> addr		3978823	0					
ANR	3978927	Identifier	f		3978823	0					
ANR	3978928	Identifier	addr		3978823	1					
ANR	3978929	PtrMemberAccess	fcn -> addr		3978823	1					
ANR	3978930	Identifier	fcn		3978823	0					
ANR	3978931	Identifier	addr		3978823	1					
ANR	3978932	ExpressionStatement	f -> bits = core -> anal -> bits	218:1:4932:4958	3978823	31	True				
ANR	3978933	AssignmentExpression	f -> bits = core -> anal -> bits		3978823	0		=			
ANR	3978934	PtrMemberAccess	f -> bits		3978823	0					
ANR	3978935	Identifier	f		3978823	0					
ANR	3978936	Identifier	bits		3978823	1					
ANR	3978937	PtrMemberAccess	core -> anal -> bits		3978823	1					
ANR	3978938	PtrMemberAccess	core -> anal		3978823	0					
ANR	3978939	Identifier	core		3978823	0					
ANR	3978940	Identifier	anal		3978823	1					
ANR	3978941	Identifier	bits		3978823	1					
ANR	3978942	ExpressionStatement	f -> cc = r_str_const ( r_anal_cc_default ( core -> anal ) )	219:1:4961:5013	3978823	32	True				
ANR	3978943	AssignmentExpression	f -> cc = r_str_const ( r_anal_cc_default ( core -> anal ) )		3978823	0		=			
ANR	3978944	PtrMemberAccess	f -> cc		3978823	0					
ANR	3978945	Identifier	f		3978823	0					
ANR	3978946	Identifier	cc		3978823	1					
ANR	3978947	CallExpression	r_str_const ( r_anal_cc_default ( core -> anal ) )		3978823	1					
ANR	3978948	Callee	r_str_const		3978823	0					
ANR	3978949	Identifier	r_str_const		3978823	0					
ANR	3978950	ArgumentList	r_anal_cc_default ( core -> anal )		3978823	1					
ANR	3978951	Argument	r_anal_cc_default ( core -> anal )		3978823	0					
ANR	3978952	CallExpression	r_anal_cc_default ( core -> anal )		3978823	0					
ANR	3978953	Callee	r_anal_cc_default		3978823	0					
ANR	3978954	Identifier	r_anal_cc_default		3978823	0					
ANR	3978955	ArgumentList	core -> anal		3978823	1					
ANR	3978956	Argument	core -> anal		3978823	0					
ANR	3978957	PtrMemberAccess	core -> anal		3978823	0					
ANR	3978958	Identifier	core		3978823	0					
ANR	3978959	Identifier	anal		3978823	1					
ANR	3978960	ExpressionStatement	"r_anal_fcn_set_size ( NULL , f , fcn -> size )"	220:1:5016:5056	3978823	33	True				
ANR	3978961	CallExpression	"r_anal_fcn_set_size ( NULL , f , fcn -> size )"		3978823	0					
ANR	3978962	Callee	r_anal_fcn_set_size		3978823	0					
ANR	3978963	Identifier	r_anal_fcn_set_size		3978823	0					
ANR	3978964	ArgumentList	NULL		3978823	1					
ANR	3978965	Argument	NULL		3978823	0					
ANR	3978966	Identifier	NULL		3978823	0					
ANR	3978967	Argument	f		3978823	1					
ANR	3978968	Identifier	f		3978823	0					
ANR	3978969	Argument	fcn -> size		3978823	2					
ANR	3978970	PtrMemberAccess	fcn -> size		3978823	0					
ANR	3978971	Identifier	fcn		3978823	0					
ANR	3978972	Identifier	size		3978823	1					
ANR	3978973	ExpressionStatement	f -> type = R_ANAL_FCN_TYPE_FCN	221:1:5059:5088	3978823	34	True				
ANR	3978974	AssignmentExpression	f -> type = R_ANAL_FCN_TYPE_FCN		3978823	0		=			
ANR	3978975	PtrMemberAccess	f -> type		3978823	0					
ANR	3978976	Identifier	f		3978823	0					
ANR	3978977	Identifier	type		3978823	1					
ANR	3978978	Identifier	R_ANAL_FCN_TYPE_FCN		3978823	1					
ANR	3978979	Statement	r_list_foreach	223:1:5092:5105	3978823	35	True				
ANR	3978980	Statement	(	223:16:5107:5107	3978823	36	True				
ANR	3978981	Statement	fcn	223:17:5108:5110	3978823	37	True				
ANR	3978982	Statement	->	223:20:5111:5112	3978823	38	True				
ANR	3978983	Statement	bbs	223:22:5113:5115	3978823	39	True				
ANR	3978984	Statement	","	223:25:5116:5116	3978823	40	True				
ANR	3978985	Statement	fcn_iter	223:27:5118:5125	3978823	41	True				
ANR	3978986	Statement	","	223:35:5126:5126	3978823	42	True				
ANR	3978987	Statement	cur	223:37:5128:5130	3978823	43	True				
ANR	3978988	Statement	)	223:40:5131:5131	3978823	44	True				
ANR	3978989	CompoundStatement		27:42:624:624	3978823	45					
ANR	3978990	IfStatement	"if ( __isdata ( core , cur -> start ) )"		3978823	0					
ANR	3978991	Condition	"__isdata ( core , cur -> start )"	224:6:5141:5167	3978823	0	True				
ANR	3978992	CallExpression	"__isdata ( core , cur -> start )"		3978823	0					
ANR	3978993	Callee	__isdata		3978823	0					
ANR	3978994	Identifier	__isdata		3978823	0					
ANR	3978995	ArgumentList	core		3978823	1					
ANR	3978996	Argument	core		3978823	0					
ANR	3978997	Identifier	core		3978823	0					
ANR	3978998	Argument	cur -> start		3978823	1					
ANR	3978999	PtrMemberAccess	cur -> start		3978823	0					
ANR	3979000	Identifier	cur		3978823	0					
ANR	3979001	Identifier	start		3978823	1					
ANR	3979002	CompoundStatement		28:35:661:661	3978823	1					
ANR	3979003	ContinueStatement	continue ;	225:3:5175:5183	3978823	0	True				
ANR	3979004	ExpressionStatement	"r_anal_fcn_add_bb ( core -> anal , f , cur -> start , ( cur -> end - cur -> start ) , cur -> jump , cur -> fail , 0 , NULL )"	227:2:5191:5292	3978823	1	True				
ANR	3979005	CallExpression	"r_anal_fcn_add_bb ( core -> anal , f , cur -> start , ( cur -> end - cur -> start ) , cur -> jump , cur -> fail , 0 , NULL )"		3978823	0					
ANR	3979006	Callee	r_anal_fcn_add_bb		3978823	0					
ANR	3979007	Identifier	r_anal_fcn_add_bb		3978823	0					
ANR	3979008	ArgumentList	core -> anal		3978823	1					
ANR	3979009	Argument	core -> anal		3978823	0					
ANR	3979010	PtrMemberAccess	core -> anal		3978823	0					
ANR	3979011	Identifier	core		3978823	0					
ANR	3979012	Identifier	anal		3978823	1					
ANR	3979013	Argument	f		3978823	1					
ANR	3979014	Identifier	f		3978823	0					
ANR	3979015	Argument	cur -> start		3978823	2					
ANR	3979016	PtrMemberAccess	cur -> start		3978823	0					
ANR	3979017	Identifier	cur		3978823	0					
ANR	3979018	Identifier	start		3978823	1					
ANR	3979019	Argument	cur -> end - cur -> start		3978823	3					
ANR	3979020	AdditiveExpression	cur -> end - cur -> start		3978823	0		-			
ANR	3979021	PtrMemberAccess	cur -> end		3978823	0					
ANR	3979022	Identifier	cur		3978823	0					
ANR	3979023	Identifier	end		3978823	1					
ANR	3979024	PtrMemberAccess	cur -> start		3978823	1					
ANR	3979025	Identifier	cur		3978823	0					
ANR	3979026	Identifier	start		3978823	1					
ANR	3979027	Argument	cur -> jump		3978823	4					
ANR	3979028	PtrMemberAccess	cur -> jump		3978823	0					
ANR	3979029	Identifier	cur		3978823	0					
ANR	3979030	Identifier	jump		3978823	1					
ANR	3979031	Argument	cur -> fail		3978823	5					
ANR	3979032	PtrMemberAccess	cur -> fail		3978823	0					
ANR	3979033	Identifier	cur		3978823	0					
ANR	3979034	Identifier	fail		3978823	1					
ANR	3979035	Argument	0		3978823	6					
ANR	3979036	PrimaryExpression	0		3978823	0					
ANR	3979037	Argument	NULL		3978823	7					
ANR	3979038	Identifier	NULL		3978823	0					
ANR	3979039	IfStatement	"if ( ! r_anal_fcn_insert ( core -> anal , f ) )"		3978823	46					
ANR	3979040	Condition	"! r_anal_fcn_insert ( core -> anal , f )"	229:5:5302:5335	3978823	0	True				
ANR	3979041	UnaryOperationExpression	"! r_anal_fcn_insert ( core -> anal , f )"		3978823	0					
ANR	3979042	UnaryOperator	!		3978823	0					
ANR	3979043	CallExpression	"r_anal_fcn_insert ( core -> anal , f )"		3978823	1					
ANR	3979044	Callee	r_anal_fcn_insert		3978823	0					
ANR	3979045	Identifier	r_anal_fcn_insert		3978823	0					
ANR	3979046	ArgumentList	core -> anal		3978823	1					
ANR	3979047	Argument	core -> anal		3978823	0					
ANR	3979048	PtrMemberAccess	core -> anal		3978823	0					
ANR	3979049	Identifier	core		3978823	0					
ANR	3979050	Identifier	anal		3978823	1					
ANR	3979051	Argument	f		3978823	1					
ANR	3979052	Identifier	f		3978823	0					
ANR	3979053	CompoundStatement		33:41:829:829	3978823	1					
ANR	3979054	ExpressionStatement	r_anal_fcn_free ( f )	231:2:5388:5407	3978823	0	True				
ANR	3979055	CallExpression	r_anal_fcn_free ( f )		3978823	0					
ANR	3979056	Callee	r_anal_fcn_free		3978823	0					
ANR	3979057	Identifier	r_anal_fcn_free		3978823	0					
ANR	3979058	ArgumentList	f		3978823	1					
ANR	3979059	Argument	f		3978823	0					
ANR	3979060	Identifier	f		3978823	0					
ANR	3979061	ReturnStatement	return ;	233:2:5444:5450	3978823	1	True				
ANR	3979062	ReturnType	static void		3978823	1					
ANR	3979063	Identifier	createFunction		3978823	2					
ANR	3979064	ParameterList	"RCore * core , fcn_t * fcn , const char * name"		3978823	3					
ANR	3979065	Parameter	RCore * core	197:27:4465:4475	3978823	0	True				
ANR	3979066	ParameterType	RCore *		3978823	0					
ANR	3979067	Identifier	core		3978823	1					
ANR	3979068	Parameter	fcn_t * fcn	197:40:4478:4487	3978823	1	True				
ANR	3979069	ParameterType	fcn_t *		3978823	0					
ANR	3979070	Identifier	fcn		3978823	1					
ANR	3979071	Parameter	const char * name	197:52:4490:4505	3978823	2	True				
ANR	3979072	ParameterType	const char *		3978823	0					
ANR	3979073	Identifier	name		3978823	1					
ANR	3979074	CFGEntryNode	ENTRY		3978823		True				
ANR	3979075	CFGExitNode	EXIT		3978823		True				
ANR	3979076	CFGErrorNode	ERROR		3978823		True				
ANR	3979077	Symbol	cur		3978823						
ANR	3979078	Symbol	pfx		3978823						
ANR	3979079	Symbol	* fcn		3978823						
ANR	3979080	Symbol	f -> bits		3978823						
ANR	3979081	Symbol	R_ANAL_FCN_TYPE_FCN		3978823						
ANR	3979082	Symbol	cur -> jump		3978823						
ANR	3979083	Symbol	* core		3978823						
ANR	3979084	Symbol	r_config_get		3978823						
ANR	3979085	Symbol	core -> anal		3978823						
ANR	3979086	Symbol	fcn		3978823						
ANR	3979087	Symbol	fcn -> size		3978823						
ANR	3979088	Symbol	* cur		3978823						
ANR	3979089	Symbol	cur -> fail		3978823						
ANR	3979090	Symbol	r_anal_fcn_new		3978823						
ANR	3979091	Symbol	f -> cc		3978823						
ANR	3979092	Symbol	f -> addr		3978823						
ANR	3979093	Symbol	__isdata		3978823						
ANR	3979094	Symbol	* * core		3978823						
ANR	3979095	Symbol	core -> config		3978823						
ANR	3979096	Symbol	r_str_const		3978823						
ANR	3979097	Symbol	core -> anal -> bits		3978823						
ANR	3979098	Symbol	NULL		3978823						
ANR	3979099	Symbol	fcn_iter		3978823						
ANR	3979100	Symbol	cur -> start		3978823						
ANR	3979101	Symbol	f		3978823						
ANR	3979102	Symbol	r_anal_fcn_insert		3978823						
ANR	3979103	Symbol	f -> type		3978823						
ANR	3979104	Symbol	* f		3978823						
ANR	3979105	Symbol	r_anal_cc_default		3978823						
ANR	3979106	Symbol	core		3978823						
ANR	3979107	Symbol	cur -> end		3978823						
ANR	3979108	Symbol	* core -> anal		3978823						
ANR	3979109	Symbol	name		3978823						
ANR	3979110	Symbol	fcn -> addr		3978823						
ANR	3979111	Function	core_anal_bbs	238:0:5511:12978							
ANR	3979112	FunctionDef	"core_anal_bbs (RCore * core , const char * input)"		3979111	0					
ANR	3979113	CompoundStatement		238:57:5568:12978	3979111	0					
ANR	3979114	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , core -> offset , false ) )"		3979111	0					
ANR	3979115	Condition	"! r_io_is_valid_offset ( core -> io , core -> offset , false )"	239:5:5575:5627	3979111	0	True				
ANR	3979116	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , core -> offset , false )"		3979111	0					
ANR	3979117	UnaryOperator	!		3979111	0					
ANR	3979118	CallExpression	"r_io_is_valid_offset ( core -> io , core -> offset , false )"		3979111	1					
ANR	3979119	Callee	r_io_is_valid_offset		3979111	0					
ANR	3979120	Identifier	r_io_is_valid_offset		3979111	0					
ANR	3979121	ArgumentList	core -> io		3979111	1					
ANR	3979122	Argument	core -> io		3979111	0					
ANR	3979123	PtrMemberAccess	core -> io		3979111	0					
ANR	3979124	Identifier	core		3979111	0					
ANR	3979125	Identifier	io		3979111	1					
ANR	3979126	Argument	core -> offset		3979111	1					
ANR	3979127	PtrMemberAccess	core -> offset		3979111	0					
ANR	3979128	Identifier	core		3979111	0					
ANR	3979129	Identifier	offset		3979111	1					
ANR	3979130	Argument	false		3979111	2					
ANR	3979131	Identifier	false		3979111	0					
ANR	3979132	CompoundStatement		2:60:61:61	3979111	1					
ANR	3979133	ExpressionStatement	"eprintf ( ""No valid offset given to analyze\\n"" )"	240:2:5634:5680	3979111	0	True				
ANR	3979134	CallExpression	"eprintf ( ""No valid offset given to analyze\\n"" )"		3979111	0					
ANR	3979135	Callee	eprintf		3979111	0					
ANR	3979136	Identifier	eprintf		3979111	0					
ANR	3979137	ArgumentList	"""No valid offset given to analyze\\n"""		3979111	1					
ANR	3979138	Argument	"""No valid offset given to analyze\\n"""		3979111	0					
ANR	3979139	PrimaryExpression	"""No valid offset given to analyze\\n"""		3979111	0					
ANR	3979140	ReturnStatement	return false ;	241:2:5684:5696	3979111	1	True				
ANR	3979141	Identifier	false		3979111	0					
ANR	3979142	IdentifierDeclStatement	Sdb * sdb = NULL ;	244:1:5703:5718	3979111	1	True				
ANR	3979143	IdentifierDecl	* sdb = NULL		3979111	0					
ANR	3979144	IdentifierDeclType	Sdb *		3979111	0					
ANR	3979145	Identifier	sdb		3979111	1					
ANR	3979146	AssignmentExpression	* sdb = NULL		3979111	2		=			
ANR	3979147	Identifier	NULL		3979111	0					
ANR	3979148	Identifier	NULL		3979111	1					
ANR	3979149	IdentifierDeclStatement	ut64 cur = 0 ;	245:1:5721:5733	3979111	2	True				
ANR	3979150	IdentifierDecl	cur = 0		3979111	0					
ANR	3979151	IdentifierDeclType	ut64		3979111	0					
ANR	3979152	Identifier	cur		3979111	1					
ANR	3979153	AssignmentExpression	cur = 0		3979111	2		=			
ANR	3979154	Identifier	cur		3979111	0					
ANR	3979155	PrimaryExpression	0		3979111	1					
ANR	3979156	IdentifierDeclStatement	ut64 start = core -> offset ;	246:1:5736:5761	3979111	3	True				
ANR	3979157	IdentifierDecl	start = core -> offset		3979111	0					
ANR	3979158	IdentifierDeclType	ut64		3979111	0					
ANR	3979159	Identifier	start		3979111	1					
ANR	3979160	AssignmentExpression	start = core -> offset		3979111	2		=			
ANR	3979161	Identifier	start		3979111	0					
ANR	3979162	PtrMemberAccess	core -> offset		3979111	1					
ANR	3979163	Identifier	core		3979111	0					
ANR	3979164	Identifier	offset		3979111	1					
ANR	3979165	IdentifierDeclStatement	"ut64 size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize ;"	247:1:5764:5838	3979111	4	True				
ANR	3979166	IdentifierDecl	"size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		3979111	0					
ANR	3979167	IdentifierDeclType	ut64		3979111	0					
ANR	3979168	Identifier	size		3979111	1					
ANR	3979169	AssignmentExpression	"size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		3979111	2		=			
ANR	3979170	Identifier	size		3979111	0					
ANR	3979171	ConditionalExpression	"input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		3979111	1					
ANR	3979172	Condition	input [ 0 ]		3979111	0					
ANR	3979173	ArrayIndexing	input [ 0 ]		3979111	0					
ANR	3979174	Identifier	input		3979111	0					
ANR	3979175	PrimaryExpression	0		3979111	1					
ANR	3979176	CallExpression	"r_num_math ( core -> num , input + 1 )"		3979111	1					
ANR	3979177	Callee	r_num_math		3979111	0					
ANR	3979178	Identifier	r_num_math		3979111	0					
ANR	3979179	ArgumentList	core -> num		3979111	1					
ANR	3979180	Argument	core -> num		3979111	0					
ANR	3979181	PtrMemberAccess	core -> num		3979111	0					
ANR	3979182	Identifier	core		3979111	0					
ANR	3979183	Identifier	num		3979111	1					
ANR	3979184	Argument	input + 1		3979111	1					
ANR	3979185	AdditiveExpression	input + 1		3979111	0		+			
ANR	3979186	Identifier	input		3979111	0					
ANR	3979187	PrimaryExpression	1		3979111	1					
ANR	3979188	PtrMemberAccess	core -> blocksize		3979111	2					
ANR	3979189	Identifier	core		3979111	0					
ANR	3979190	Identifier	blocksize		3979111	1					
ANR	3979191	IdentifierDeclStatement	ut64 b_start = start ;	248:1:5841:5861	3979111	5	True				
ANR	3979192	IdentifierDecl	b_start = start		3979111	0					
ANR	3979193	IdentifierDeclType	ut64		3979111	0					
ANR	3979194	Identifier	b_start		3979111	1					
ANR	3979195	AssignmentExpression	b_start = start		3979111	2		=			
ANR	3979196	Identifier	start		3979111	0					
ANR	3979197	Identifier	start		3979111	1					
ANR	3979198	IdentifierDeclStatement	RAnalOp * op ;	249:1:5864:5875	3979111	6	True				
ANR	3979199	IdentifierDecl	* op		3979111	0					
ANR	3979200	IdentifierDeclType	RAnalOp *		3979111	0					
ANR	3979201	Identifier	op		3979111	1					
ANR	3979202	IdentifierDeclStatement	RListIter * iter ;	250:1:5878:5893	3979111	7	True				
ANR	3979203	IdentifierDecl	* iter		3979111	0					
ANR	3979204	IdentifierDeclType	RListIter *		3979111	0					
ANR	3979205	Identifier	iter		3979111	1					
ANR	3979206	IdentifierDeclStatement	int block_score = 0 ;	251:1:5896:5915	3979111	8	True				
ANR	3979207	IdentifierDecl	block_score = 0		3979111	0					
ANR	3979208	IdentifierDeclType	int		3979111	0					
ANR	3979209	Identifier	block_score		3979111	1					
ANR	3979210	AssignmentExpression	block_score = 0		3979111	2		=			
ANR	3979211	Identifier	block_score		3979111	0					
ANR	3979212	PrimaryExpression	0		3979111	1					
ANR	3979213	IdentifierDeclStatement	RList * block_list ;	252:1:5918:5935	3979111	9	True				
ANR	3979214	IdentifierDecl	* block_list		3979111	0					
ANR	3979215	IdentifierDeclType	RList *		3979111	0					
ANR	3979216	Identifier	block_list		3979111	1					
ANR	3979217	IdentifierDeclStatement	bb_t * block = NULL ;	253:1:5938:5956	3979111	10	True				
ANR	3979218	IdentifierDecl	* block = NULL		3979111	0					
ANR	3979219	IdentifierDeclType	bb_t *		3979111	0					
ANR	3979220	Identifier	block		3979111	1					
ANR	3979221	AssignmentExpression	* block = NULL		3979111	2		=			
ANR	3979222	Identifier	NULL		3979111	0					
ANR	3979223	Identifier	NULL		3979111	1					
ANR	3979224	IdentifierDeclStatement	int invalid_instruction_barrier = - 20000 ;	254:1:5959:5999	3979111	11	True				
ANR	3979225	IdentifierDecl	invalid_instruction_barrier = - 20000		3979111	0					
ANR	3979226	IdentifierDeclType	int		3979111	0					
ANR	3979227	Identifier	invalid_instruction_barrier		3979111	1					
ANR	3979228	AssignmentExpression	invalid_instruction_barrier = - 20000		3979111	2		=			
ANR	3979229	Identifier	invalid_instruction_barrier		3979111	0					
ANR	3979230	UnaryOperationExpression	- 20000		3979111	1					
ANR	3979231	UnaryOperator	-		3979111	0					
ANR	3979232	PrimaryExpression	20000		3979111	1					
ANR	3979233	IdentifierDeclStatement	"bool debug = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	255:1:6002:6057	3979111	12	True				
ANR	3979234	IdentifierDecl	"debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		3979111	0					
ANR	3979235	IdentifierDeclType	bool		3979111	0					
ANR	3979236	Identifier	debug		3979111	1					
ANR	3979237	AssignmentExpression	"debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		3979111	2		=			
ANR	3979238	Identifier	debug		3979111	0					
ANR	3979239	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		3979111	1					
ANR	3979240	Callee	r_config_get_i		3979111	0					
ANR	3979241	Identifier	r_config_get_i		3979111	0					
ANR	3979242	ArgumentList	core -> config		3979111	1					
ANR	3979243	Argument	core -> config		3979111	0					
ANR	3979244	PtrMemberAccess	core -> config		3979111	0					
ANR	3979245	Identifier	core		3979111	0					
ANR	3979246	Identifier	config		3979111	1					
ANR	3979247	Argument	"""cfg.debug"""		3979111	1					
ANR	3979248	PrimaryExpression	"""cfg.debug"""		3979111	0					
ANR	3979249	IdentifierDeclStatement	"bool nopskip = r_config_get_i ( core -> config , ""anal.nopskip"" ) ;"	256:1:6060:6120	3979111	13	True				
ANR	3979250	IdentifierDecl	"nopskip = r_config_get_i ( core -> config , ""anal.nopskip"" )"		3979111	0					
ANR	3979251	IdentifierDeclType	bool		3979111	0					
ANR	3979252	Identifier	nopskip		3979111	1					
ANR	3979253	AssignmentExpression	"nopskip = r_config_get_i ( core -> config , ""anal.nopskip"" )"		3979111	2		=			
ANR	3979254	Identifier	nopskip		3979111	0					
ANR	3979255	CallExpression	"r_config_get_i ( core -> config , ""anal.nopskip"" )"		3979111	1					
ANR	3979256	Callee	r_config_get_i		3979111	0					
ANR	3979257	Identifier	r_config_get_i		3979111	0					
ANR	3979258	ArgumentList	core -> config		3979111	1					
ANR	3979259	Argument	core -> config		3979111	0					
ANR	3979260	PtrMemberAccess	core -> config		3979111	0					
ANR	3979261	Identifier	core		3979111	0					
ANR	3979262	Identifier	config		3979111	1					
ANR	3979263	Argument	"""anal.nopskip"""		3979111	1					
ANR	3979264	PrimaryExpression	"""anal.nopskip"""		3979111	0					
ANR	3979265	ExpressionStatement	block_list = r_list_new ( )	258:1:6124:6150	3979111	14	True				
ANR	3979266	AssignmentExpression	block_list = r_list_new ( )		3979111	0		=			
ANR	3979267	Identifier	block_list		3979111	0					
ANR	3979268	CallExpression	r_list_new ( )		3979111	1					
ANR	3979269	Callee	r_list_new		3979111	0					
ANR	3979270	Identifier	r_list_new		3979111	0					
ANR	3979271	ArgumentList			3979111	1					
ANR	3979272	IfStatement	if ( ! block_list )		3979111	15					
ANR	3979273	Condition	! block_list	259:5:6157:6167	3979111	0	True				
ANR	3979274	UnaryOperationExpression	! block_list		3979111	0					
ANR	3979275	UnaryOperator	!		3979111	0					
ANR	3979276	Identifier	block_list		3979111	1					
ANR	3979277	CompoundStatement		22:18:601:601	3979111	1					
ANR	3979278	ExpressionStatement	"eprintf ( ""Failed to create block_list\\n"" )"	260:2:6174:6215	3979111	0	True				
ANR	3979279	CallExpression	"eprintf ( ""Failed to create block_list\\n"" )"		3979111	0					
ANR	3979280	Callee	eprintf		3979111	0					
ANR	3979281	Identifier	eprintf		3979111	0					
ANR	3979282	ArgumentList	"""Failed to create block_list\\n"""		3979111	1					
ANR	3979283	Argument	"""Failed to create block_list\\n"""		3979111	0					
ANR	3979284	PrimaryExpression	"""Failed to create block_list\\n"""		3979111	0					
ANR	3979285	IfStatement	if ( debug )		3979111	16					
ANR	3979286	Condition	debug	263:5:6226:6230	3979111	0	True				
ANR	3979287	Identifier	debug		3979111	0					
ANR	3979288	CompoundStatement		26:12:664:664	3979111	1					
ANR	3979289	Statement	eprintf	264:2:6237:6243	3979111	0	True				
ANR	3979290	Statement	(	264:10:6245:6245	3979111	1	True				
ANR	3979291	Statement	"""Analyzing [0x%08"""	264:11:6246:6263	3979111	2	True				
ANR	3979292	Statement	PFMT64x	264:29:6264:6270	3979111	3	True				
ANR	3979293	Statement	"""-0x%08"""	264:36:6271:6278	3979111	4	True				
ANR	3979294	Statement	PFMT64x	264:44:6279:6285	3979111	5	True				
ANR	3979295	Statement	"""]\\n"""	264:51:6286:6290	3979111	6	True				
ANR	3979296	Statement	","	264:56:6291:6291	3979111	7	True				
ANR	3979297	Statement	start	264:58:6293:6297	3979111	8	True				
ANR	3979298	Statement	","	264:63:6298:6298	3979111	9	True				
ANR	3979299	Statement	start	264:65:6300:6304	3979111	10	True				
ANR	3979300	Statement	+	264:71:6306:6306	3979111	11	True				
ANR	3979301	Statement	size	264:73:6308:6311	3979111	12	True				
ANR	3979302	Statement	)	264:77:6312:6312	3979111	13	True				
ANR	3979303	ExpressionStatement		264:78:6313:6313	3979111	14	True				
ANR	3979304	ExpressionStatement	"eprintf ( ""Creating basic blocks\\b"" )"	265:2:6317:6352	3979111	15	True				
ANR	3979305	CallExpression	"eprintf ( ""Creating basic blocks\\b"" )"		3979111	0					
ANR	3979306	Callee	eprintf		3979111	0					
ANR	3979307	Identifier	eprintf		3979111	0					
ANR	3979308	ArgumentList	"""Creating basic blocks\\b"""		3979111	1					
ANR	3979309	Argument	"""Creating basic blocks\\b"""		3979111	0					
ANR	3979310	PrimaryExpression	"""Creating basic blocks\\b"""		3979111	0					
ANR	3979311	IdentifierDeclStatement	ut64 base = cur ;	267:1:6358:6373	3979111	17	True				
ANR	3979312	IdentifierDecl	base = cur		3979111	0					
ANR	3979313	IdentifierDeclType	ut64		3979111	0					
ANR	3979314	Identifier	base		3979111	1					
ANR	3979315	AssignmentExpression	base = cur		3979111	2		=			
ANR	3979316	Identifier	cur		3979111	0					
ANR	3979317	Identifier	cur		3979111	1					
ANR	3979318	WhileStatement	while ( cur >= base && cur < size )		3979111	18					
ANR	3979319	Condition	cur >= base && cur < size	268:8:6383:6407	3979111	0	True				
ANR	3979320	AndExpression	cur >= base && cur < size		3979111	0		&&			
ANR	3979321	RelationalExpression	cur >= base		3979111	0		>=			
ANR	3979322	Identifier	cur		3979111	0					
ANR	3979323	Identifier	base		3979111	1					
ANR	3979324	RelationalExpression	cur < size		3979111	1		<			
ANR	3979325	Identifier	cur		3979111	0					
ANR	3979326	Identifier	size		3979111	1					
ANR	3979327	CompoundStatement		44:2:1106:1138	3979111	1					
ANR	3979328	IfStatement	if ( r_cons_is_breaked ( ) )		3979111	0					
ANR	3979329	Condition	r_cons_is_breaked ( )	269:6:6418:6437	3979111	0	True				
ANR	3979330	CallExpression	r_cons_is_breaked ( )		3979111	0					
ANR	3979331	Callee	r_cons_is_breaked		3979111	0					
ANR	3979332	Identifier	r_cons_is_breaked		3979111	0					
ANR	3979333	ArgumentList			3979111	1					
ANR	3979334	CompoundStatement		32:28:871:871	3979111	1					
ANR	3979335	BreakStatement	break ;	270:3:6445:6450	3979111	0	True				
ANR	3979336	IfStatement	if ( block_score < invalid_instruction_barrier )		3979111	1					
ANR	3979337	Condition	block_score < invalid_instruction_barrier	273:6:6527:6567	3979111	0	True				
ANR	3979338	RelationalExpression	block_score < invalid_instruction_barrier		3979111	0		<			
ANR	3979339	Identifier	block_score		3979111	0					
ANR	3979340	Identifier	invalid_instruction_barrier		3979111	1					
ANR	3979341	CompoundStatement		36:49:1001:1001	3979111	1					
ANR	3979342	BreakStatement	break ;	274:3:6575:6580	3979111	0	True				
ANR	3979343	IdentifierDeclStatement	ut64 dst = start + cur ;	276:2:6588:6610	3979111	2	True				
ANR	3979344	IdentifierDecl	dst = start + cur		3979111	0					
ANR	3979345	IdentifierDeclType	ut64		3979111	0					
ANR	3979346	Identifier	dst		3979111	1					
ANR	3979347	AssignmentExpression	dst = start + cur		3979111	2		=			
ANR	3979348	Identifier	dst		3979111	0					
ANR	3979349	AdditiveExpression	start + cur		3979111	1		+			
ANR	3979350	Identifier	start		3979111	0					
ANR	3979351	Identifier	cur		3979111	1					
ANR	3979352	IfStatement	if ( dst < start )		3979111	3					
ANR	3979353	Condition	dst < start	277:6:6618:6628	3979111	0	True				
ANR	3979354	RelationalExpression	dst < start		3979111	0		<			
ANR	3979355	Identifier	dst		3979111	0					
ANR	3979356	Identifier	start		3979111	1					
ANR	3979357	CompoundStatement		40:19:1062:1062	3979111	1					
ANR	3979358	BreakStatement	break ;	279:3:6662:6667	3979111	0	True				
ANR	3979359	IdentifierDeclStatement	"int dsize = __isdata ( core , dst ) ;"	281:2:6675:6707	3979111	4	True				
ANR	3979360	IdentifierDecl	"dsize = __isdata ( core , dst )"		3979111	0					
ANR	3979361	IdentifierDeclType	int		3979111	0					
ANR	3979362	Identifier	dsize		3979111	1					
ANR	3979363	AssignmentExpression	"dsize = __isdata ( core , dst )"		3979111	2		=			
ANR	3979364	Identifier	dsize		3979111	0					
ANR	3979365	CallExpression	"__isdata ( core , dst )"		3979111	1					
ANR	3979366	Callee	__isdata		3979111	0					
ANR	3979367	Identifier	__isdata		3979111	0					
ANR	3979368	ArgumentList	core		3979111	1					
ANR	3979369	Argument	core		3979111	0					
ANR	3979370	Identifier	core		3979111	0					
ANR	3979371	Argument	dst		3979111	1					
ANR	3979372	Identifier	dst		3979111	0					
ANR	3979373	IfStatement	if ( dsize > 0 )		3979111	5					
ANR	3979374	Condition	dsize > 0	282:6:6715:6723	3979111	0	True				
ANR	3979375	RelationalExpression	dsize > 0		3979111	0		>			
ANR	3979376	Identifier	dsize		3979111	0					
ANR	3979377	PrimaryExpression	0		3979111	1					
ANR	3979378	CompoundStatement		45:17:1157:1157	3979111	1					
ANR	3979379	ExpressionStatement	cur += dsize	283:3:6731:6743	3979111	0	True				
ANR	3979380	AssignmentExpression	cur += dsize		3979111	0		+=			
ANR	3979381	Identifier	cur		3979111	0					
ANR	3979382	Identifier	dsize		3979111	1					
ANR	3979383	ContinueStatement	continue ;	284:3:6748:6756	3979111	1	True				
ANR	3979384	ExpressionStatement	"op = r_core_anal_op ( core , dst , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"	286:2:6764:6841	3979111	6	True				
ANR	3979385	AssignmentExpression	"op = r_core_anal_op ( core , dst , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		3979111	0		=			
ANR	3979386	Identifier	op		3979111	0					
ANR	3979387	CallExpression	"r_core_anal_op ( core , dst , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		3979111	1					
ANR	3979388	Callee	r_core_anal_op		3979111	0					
ANR	3979389	Identifier	r_core_anal_op		3979111	0					
ANR	3979390	ArgumentList	core		3979111	1					
ANR	3979391	Argument	core		3979111	0					
ANR	3979392	Identifier	core		3979111	0					
ANR	3979393	Argument	dst		3979111	1					
ANR	3979394	Identifier	dst		3979111	0					
ANR	3979395	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		3979111	2					
ANR	3979396	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		3979111	0		|			
ANR	3979397	Identifier	R_ANAL_OP_MASK_BASIC		3979111	0					
ANR	3979398	Identifier	R_ANAL_OP_MASK_DISASM		3979111	1					
ANR	3979399	IfStatement	if ( ! op || ! op -> mnemonic )		3979111	7					
ANR	3979400	Condition	! op || ! op -> mnemonic	288:6:6850:6869	3979111	0	True				
ANR	3979401	OrExpression	! op || ! op -> mnemonic		3979111	0		||			
ANR	3979402	UnaryOperationExpression	! op		3979111	0					
ANR	3979403	UnaryOperator	!		3979111	0					
ANR	3979404	Identifier	op		3979111	1					
ANR	3979405	UnaryOperationExpression	! op -> mnemonic		3979111	1					
ANR	3979406	UnaryOperator	!		3979111	0					
ANR	3979407	PtrMemberAccess	op -> mnemonic		3979111	1					
ANR	3979408	Identifier	op		3979111	0					
ANR	3979409	Identifier	mnemonic		3979111	1					
ANR	3979410	CompoundStatement		51:28:1303:1303	3979111	1					
ANR	3979411	ExpressionStatement	block_score -= 10	289:3:6877:6894	3979111	0	True				
ANR	3979412	AssignmentExpression	block_score -= 10		3979111	0		-=			
ANR	3979413	Identifier	block_score		3979111	0					
ANR	3979414	PrimaryExpression	10		3979111	1					
ANR	3979415	ExpressionStatement	cur ++	290:3:6899:6904	3979111	1	True				
ANR	3979416	PostIncDecOperationExpression	cur ++		3979111	0					
ANR	3979417	Identifier	cur		3979111	0					
ANR	3979418	IncDec	++		3979111	1					
ANR	3979419	ContinueStatement	continue ;	291:3:6909:6917	3979111	2	True				
ANR	3979420	IfStatement	if ( op -> mnemonic [ 0 ] == '?' )		3979111	8					
ANR	3979421	Condition	op -> mnemonic [ 0 ] == '?'	294:6:6930:6951	3979111	0	True				
ANR	3979422	EqualityExpression	op -> mnemonic [ 0 ] == '?'		3979111	0		==			
ANR	3979423	ArrayIndexing	op -> mnemonic [ 0 ]		3979111	0					
ANR	3979424	PtrMemberAccess	op -> mnemonic		3979111	0					
ANR	3979425	Identifier	op		3979111	0					
ANR	3979426	Identifier	mnemonic		3979111	1					
ANR	3979427	PrimaryExpression	0		3979111	1					
ANR	3979428	PrimaryExpression	'?'		3979111	1					
ANR	3979429	CompoundStatement		57:30:1385:1385	3979111	1					
ANR	3979430	Statement	eprintf	295:3:6959:6965	3979111	0	True				
ANR	3979431	Statement	(	295:11:6967:6967	3979111	1	True				
ANR	3979432	Statement	"""? Bad op at: 0x%08"""	295:12:6968:6987	3979111	2	True				
ANR	3979433	Statement	PFMT64x	295:32:6988:6994	3979111	3	True				
ANR	3979434	Statement	"""\\n"""	295:39:6995:6998	3979111	4	True				
ANR	3979435	Statement	","	295:43:6999:6999	3979111	5	True				
ANR	3979436	Statement	cur	295:45:7001:7003	3979111	6	True				
ANR	3979437	Statement	+	295:49:7005:7005	3979111	7	True				
ANR	3979438	Statement	start	295:51:7007:7011	3979111	8	True				
ANR	3979439	Statement	)	295:56:7012:7012	3979111	9	True				
ANR	3979440	ExpressionStatement		295:57:7013:7013	3979111	10	True				
ANR	3979441	Statement	eprintf	296:3:7018:7024	3979111	11	True				
ANR	3979442	Statement	(	296:11:7026:7026	3979111	12	True				
ANR	3979443	Statement	"""Cannot analyze opcode at 0x%"""	296:12:7027:7056	3979111	13	True				
ANR	3979444	Statement	PFMT64x	296:42:7057:7063	3979111	14	True				
ANR	3979445	Statement	"""\\n"""	296:49:7064:7067	3979111	15	True				
ANR	3979446	Statement	","	296:53:7068:7068	3979111	16	True				
ANR	3979447	Statement	start	296:55:7070:7074	3979111	17	True				
ANR	3979448	Statement	+	296:61:7076:7076	3979111	18	True				
ANR	3979449	Statement	cur	296:63:7078:7080	3979111	19	True				
ANR	3979450	Statement	)	296:66:7081:7081	3979111	20	True				
ANR	3979451	ExpressionStatement		296:67:7082:7082	3979111	21	True				
ANR	3979452	ExpressionStatement	block_score -= 10	297:3:7087:7104	3979111	22	True				
ANR	3979453	AssignmentExpression	block_score -= 10		3979111	0		-=			
ANR	3979454	Identifier	block_score		3979111	0					
ANR	3979455	PrimaryExpression	10		3979111	1					
ANR	3979456	ExpressionStatement	cur ++	298:3:7109:7114	3979111	23	True				
ANR	3979457	PostIncDecOperationExpression	cur ++		3979111	0					
ANR	3979458	Identifier	cur		3979111	0					
ANR	3979459	IncDec	++		3979111	1					
ANR	3979460	ContinueStatement	continue ;	299:3:7119:7127	3979111	24	True				
ANR	3979461	SwitchStatement	switch ( op -> type )		3979111	9					
ANR	3979462	Condition	op -> type	301:10:7143:7150	3979111	0	True				
ANR	3979463	PtrMemberAccess	op -> type		3979111	0					
ANR	3979464	Identifier	op		3979111	0					
ANR	3979465	Identifier	type		3979111	1					
ANR	3979466	CompoundStatement		64:20:1584:1584	3979111	1					
ANR	3979467	Label	case R_ANAL_OP_TYPE_NOP :	302:2:7157:7180	3979111	0	True				
ANR	3979468	Identifier	R_ANAL_OP_TYPE_NOP		3979111	0					
ANR	3979469	IfStatement	if ( nopskip && b_start == start + cur )		3979111	1					
ANR	3979470	Condition	nopskip && b_start == start + cur	303:8:7190:7222	3979111	0	True				
ANR	3979471	AndExpression	nopskip && b_start == start + cur		3979111	0		&&			
ANR	3979472	Identifier	nopskip		3979111	0					
ANR	3979473	EqualityExpression	b_start == start + cur		3979111	1		==			
ANR	3979474	Identifier	b_start		3979111	0					
ANR	3979475	AdditiveExpression	start + cur		3979111	1		+			
ANR	3979476	Identifier	start		3979111	0					
ANR	3979477	Identifier	cur		3979111	1					
ANR	3979478	CompoundStatement		66:43:1656:1656	3979111	1					
ANR	3979479	ExpressionStatement	b_start = start + cur + op -> size	304:5:7232:7264	3979111	0	True				
ANR	3979480	AssignmentExpression	b_start = start + cur + op -> size		3979111	0		=			
ANR	3979481	Identifier	b_start		3979111	0					
ANR	3979482	AdditiveExpression	start + cur + op -> size		3979111	1		+			
ANR	3979483	Identifier	start		3979111	0					
ANR	3979484	AdditiveExpression	cur + op -> size		3979111	1		+			
ANR	3979485	Identifier	cur		3979111	0					
ANR	3979486	PtrMemberAccess	op -> size		3979111	1					
ANR	3979487	Identifier	op		3979111	0					
ANR	3979488	Identifier	size		3979111	1					
ANR	3979489	BreakStatement	break ;	306:3:7275:7280	3979111	2	True				
ANR	3979490	Label	case R_ANAL_OP_TYPE_CALL :	307:2:7284:7308	3979111	3	True				
ANR	3979491	Identifier	R_ANAL_OP_TYPE_CALL		3979111	0					
ANR	3979492	IfStatement	"if ( r_anal_noreturn_at ( core -> anal , op -> jump ) )"		3979111	4					
ANR	3979493	Condition	"r_anal_noreturn_at ( core -> anal , op -> jump )"	308:7:7317:7357	3979111	0	True				
ANR	3979494	CallExpression	"r_anal_noreturn_at ( core -> anal , op -> jump )"		3979111	0					
ANR	3979495	Callee	r_anal_noreturn_at		3979111	0					
ANR	3979496	Identifier	r_anal_noreturn_at		3979111	0					
ANR	3979497	ArgumentList	core -> anal		3979111	1					
ANR	3979498	Argument	core -> anal		3979111	0					
ANR	3979499	PtrMemberAccess	core -> anal		3979111	0					
ANR	3979500	Identifier	core		3979111	0					
ANR	3979501	Identifier	anal		3979111	1					
ANR	3979502	Argument	op -> jump		3979111	1					
ANR	3979503	PtrMemberAccess	op -> jump		3979111	0					
ANR	3979504	Identifier	op		3979111	0					
ANR	3979505	Identifier	jump		3979111	1					
ANR	3979506	CompoundStatement		71:50:1791:1791	3979111	1					
ANR	3979507	ExpressionStatement	"addBB ( block_list , b_start , start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"	309:4:7366:7455	3979111	0	True				
ANR	3979508	CallExpression	"addBB ( block_list , b_start , start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"		3979111	0					
ANR	3979509	Callee	addBB		3979111	0					
ANR	3979510	Identifier	addBB		3979111	0					
ANR	3979511	ArgumentList	block_list		3979111	1					
ANR	3979512	Argument	block_list		3979111	0					
ANR	3979513	Identifier	block_list		3979111	0					
ANR	3979514	Argument	b_start		3979111	1					
ANR	3979515	Identifier	b_start		3979111	0					
ANR	3979516	Argument	start + cur + op -> size		3979111	2					
ANR	3979517	AdditiveExpression	start + cur + op -> size		3979111	0		+			
ANR	3979518	Identifier	start		3979111	0					
ANR	3979519	AdditiveExpression	cur + op -> size		3979111	1		+			
ANR	3979520	Identifier	cur		3979111	0					
ANR	3979521	PtrMemberAccess	op -> size		3979111	1					
ANR	3979522	Identifier	op		3979111	0					
ANR	3979523	Identifier	size		3979111	1					
ANR	3979524	Argument	UT64_MAX		3979111	3					
ANR	3979525	Identifier	UT64_MAX		3979111	0					
ANR	3979526	Argument	UT64_MAX		3979111	4					
ANR	3979527	Identifier	UT64_MAX		3979111	0					
ANR	3979528	Argument	END		3979111	5					
ANR	3979529	Identifier	END		3979111	0					
ANR	3979530	Argument	block_score		3979111	6					
ANR	3979531	Identifier	block_score		3979111	0					
ANR	3979532	ExpressionStatement	b_start = start + cur + op -> size	310:4:7461:7493	3979111	1	True				
ANR	3979533	AssignmentExpression	b_start = start + cur + op -> size		3979111	0		=			
ANR	3979534	Identifier	b_start		3979111	0					
ANR	3979535	AdditiveExpression	start + cur + op -> size		3979111	1		+			
ANR	3979536	Identifier	start		3979111	0					
ANR	3979537	AdditiveExpression	cur + op -> size		3979111	1		+			
ANR	3979538	Identifier	cur		3979111	0					
ANR	3979539	PtrMemberAccess	op -> size		3979111	1					
ANR	3979540	Identifier	op		3979111	0					
ANR	3979541	Identifier	size		3979111	1					
ANR	3979542	ExpressionStatement	block_score = 0	311:4:7499:7514	3979111	2	True				
ANR	3979543	AssignmentExpression	block_score = 0		3979111	0		=			
ANR	3979544	Identifier	block_score		3979111	0					
ANR	3979545	PrimaryExpression	0		3979111	1					
ANR	3979546	ElseStatement	else		3979111	0					
ANR	3979547	CompoundStatement		75:10:1957:1957	3979111	0					
ANR	3979548	ExpressionStatement	"addBB ( block_list , op -> jump , UT64_MAX , UT64_MAX , UT64_MAX , CALL , block_score )"	313:4:7532:7609	3979111	0	True				
ANR	3979549	CallExpression	"addBB ( block_list , op -> jump , UT64_MAX , UT64_MAX , UT64_MAX , CALL , block_score )"		3979111	0					
ANR	3979550	Callee	addBB		3979111	0					
ANR	3979551	Identifier	addBB		3979111	0					
ANR	3979552	ArgumentList	block_list		3979111	1					
ANR	3979553	Argument	block_list		3979111	0					
ANR	3979554	Identifier	block_list		3979111	0					
ANR	3979555	Argument	op -> jump		3979111	1					
ANR	3979556	PtrMemberAccess	op -> jump		3979111	0					
ANR	3979557	Identifier	op		3979111	0					
ANR	3979558	Identifier	jump		3979111	1					
ANR	3979559	Argument	UT64_MAX		3979111	2					
ANR	3979560	Identifier	UT64_MAX		3979111	0					
ANR	3979561	Argument	UT64_MAX		3979111	3					
ANR	3979562	Identifier	UT64_MAX		3979111	0					
ANR	3979563	Argument	UT64_MAX		3979111	4					
ANR	3979564	Identifier	UT64_MAX		3979111	0					
ANR	3979565	Argument	CALL		3979111	5					
ANR	3979566	Identifier	CALL		3979111	0					
ANR	3979567	Argument	block_score		3979111	6					
ANR	3979568	Identifier	block_score		3979111	0					
ANR	3979569	BreakStatement	break ;	315:3:7619:7624	3979111	5	True				
ANR	3979570	Label	case R_ANAL_OP_TYPE_JMP :	316:2:7628:7651	3979111	6	True				
ANR	3979571	Identifier	R_ANAL_OP_TYPE_JMP		3979111	0					
ANR	3979572	ExpressionStatement	"addBB ( block_list , b_start , start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"	317:3:7656:7745	3979111	7	True				
ANR	3979573	CallExpression	"addBB ( block_list , b_start , start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"		3979111	0					
ANR	3979574	Callee	addBB		3979111	0					
ANR	3979575	Identifier	addBB		3979111	0					
ANR	3979576	ArgumentList	block_list		3979111	1					
ANR	3979577	Argument	block_list		3979111	0					
ANR	3979578	Identifier	block_list		3979111	0					
ANR	3979579	Argument	b_start		3979111	1					
ANR	3979580	Identifier	b_start		3979111	0					
ANR	3979581	Argument	start + cur + op -> size		3979111	2					
ANR	3979582	AdditiveExpression	start + cur + op -> size		3979111	0		+			
ANR	3979583	Identifier	start		3979111	0					
ANR	3979584	AdditiveExpression	cur + op -> size		3979111	1		+			
ANR	3979585	Identifier	cur		3979111	0					
ANR	3979586	PtrMemberAccess	op -> size		3979111	1					
ANR	3979587	Identifier	op		3979111	0					
ANR	3979588	Identifier	size		3979111	1					
ANR	3979589	Argument	op -> jump		3979111	3					
ANR	3979590	PtrMemberAccess	op -> jump		3979111	0					
ANR	3979591	Identifier	op		3979111	0					
ANR	3979592	Identifier	jump		3979111	1					
ANR	3979593	Argument	UT64_MAX		3979111	4					
ANR	3979594	Identifier	UT64_MAX		3979111	0					
ANR	3979595	Argument	END		3979111	5					
ANR	3979596	Identifier	END		3979111	0					
ANR	3979597	Argument	block_score		3979111	6					
ANR	3979598	Identifier	block_score		3979111	0					
ANR	3979599	ExpressionStatement	b_start = start + cur + op -> size	318:3:7750:7782	3979111	8	True				
ANR	3979600	AssignmentExpression	b_start = start + cur + op -> size		3979111	0		=			
ANR	3979601	Identifier	b_start		3979111	0					
ANR	3979602	AdditiveExpression	start + cur + op -> size		3979111	1		+			
ANR	3979603	Identifier	start		3979111	0					
ANR	3979604	AdditiveExpression	cur + op -> size		3979111	1		+			
ANR	3979605	Identifier	cur		3979111	0					
ANR	3979606	PtrMemberAccess	op -> size		3979111	1					
ANR	3979607	Identifier	op		3979111	0					
ANR	3979608	Identifier	size		3979111	1					
ANR	3979609	ExpressionStatement	block_score = 0	319:3:7787:7802	3979111	9	True				
ANR	3979610	AssignmentExpression	block_score = 0		3979111	0		=			
ANR	3979611	Identifier	block_score		3979111	0					
ANR	3979612	PrimaryExpression	0		3979111	1					
ANR	3979613	BreakStatement	break ;	320:3:7807:7812	3979111	10	True				
ANR	3979614	Label	case R_ANAL_OP_TYPE_TRAP :	321:2:7816:7840	3979111	11	True				
ANR	3979615	Identifier	R_ANAL_OP_TYPE_TRAP		3979111	0					
ANR	3979616	IfStatement	if ( b_start < start + cur )		3979111	12					
ANR	3979617	Condition	b_start < start + cur	323:7:7887:7907	3979111	0	True				
ANR	3979618	RelationalExpression	b_start < start + cur		3979111	0		<			
ANR	3979619	Identifier	b_start		3979111	0					
ANR	3979620	AdditiveExpression	start + cur		3979111	1		+			
ANR	3979621	Identifier	start		3979111	0					
ANR	3979622	Identifier	cur		3979111	1					
ANR	3979623	CompoundStatement		86:30:2341:2341	3979111	1					
ANR	3979624	ExpressionStatement	"addBB ( block_list , b_start , start + cur , UT64_MAX , UT64_MAX , NORMAL , block_score )"	324:4:7916:7997	3979111	0	True				
ANR	3979625	CallExpression	"addBB ( block_list , b_start , start + cur , UT64_MAX , UT64_MAX , NORMAL , block_score )"		3979111	0					
ANR	3979626	Callee	addBB		3979111	0					
ANR	3979627	Identifier	addBB		3979111	0					
ANR	3979628	ArgumentList	block_list		3979111	1					
ANR	3979629	Argument	block_list		3979111	0					
ANR	3979630	Identifier	block_list		3979111	0					
ANR	3979631	Argument	b_start		3979111	1					
ANR	3979632	Identifier	b_start		3979111	0					
ANR	3979633	Argument	start + cur		3979111	2					
ANR	3979634	AdditiveExpression	start + cur		3979111	0		+			
ANR	3979635	Identifier	start		3979111	0					
ANR	3979636	Identifier	cur		3979111	1					
ANR	3979637	Argument	UT64_MAX		3979111	3					
ANR	3979638	Identifier	UT64_MAX		3979111	0					
ANR	3979639	Argument	UT64_MAX		3979111	4					
ANR	3979640	Identifier	UT64_MAX		3979111	0					
ANR	3979641	Argument	NORMAL		3979111	5					
ANR	3979642	Identifier	NORMAL		3979111	0					
ANR	3979643	Argument	block_score		3979111	6					
ANR	3979644	Identifier	block_score		3979111	0					
ANR	3979645	ExpressionStatement	b_start = start + cur + op -> size	326:3:8007:8039	3979111	13	True				
ANR	3979646	AssignmentExpression	b_start = start + cur + op -> size		3979111	0		=			
ANR	3979647	Identifier	b_start		3979111	0					
ANR	3979648	AdditiveExpression	start + cur + op -> size		3979111	1		+			
ANR	3979649	Identifier	start		3979111	0					
ANR	3979650	AdditiveExpression	cur + op -> size		3979111	1		+			
ANR	3979651	Identifier	cur		3979111	0					
ANR	3979652	PtrMemberAccess	op -> size		3979111	1					
ANR	3979653	Identifier	op		3979111	0					
ANR	3979654	Identifier	size		3979111	1					
ANR	3979655	ExpressionStatement	block_score = 0	327:3:8044:8059	3979111	14	True				
ANR	3979656	AssignmentExpression	block_score = 0		3979111	0		=			
ANR	3979657	Identifier	block_score		3979111	0					
ANR	3979658	PrimaryExpression	0		3979111	1					
ANR	3979659	BreakStatement	break ;	328:3:8064:8069	3979111	15	True				
ANR	3979660	Label	case R_ANAL_OP_TYPE_RET :	329:2:8073:8096	3979111	16	True				
ANR	3979661	Identifier	R_ANAL_OP_TYPE_RET		3979111	0					
ANR	3979662	ExpressionStatement	"addBB ( block_list , b_start , start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"	330:3:8101:8190	3979111	17	True				
ANR	3979663	CallExpression	"addBB ( block_list , b_start , start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"		3979111	0					
ANR	3979664	Callee	addBB		3979111	0					
ANR	3979665	Identifier	addBB		3979111	0					
ANR	3979666	ArgumentList	block_list		3979111	1					
ANR	3979667	Argument	block_list		3979111	0					
ANR	3979668	Identifier	block_list		3979111	0					
ANR	3979669	Argument	b_start		3979111	1					
ANR	3979670	Identifier	b_start		3979111	0					
ANR	3979671	Argument	start + cur + op -> size		3979111	2					
ANR	3979672	AdditiveExpression	start + cur + op -> size		3979111	0		+			
ANR	3979673	Identifier	start		3979111	0					
ANR	3979674	AdditiveExpression	cur + op -> size		3979111	1		+			
ANR	3979675	Identifier	cur		3979111	0					
ANR	3979676	PtrMemberAccess	op -> size		3979111	1					
ANR	3979677	Identifier	op		3979111	0					
ANR	3979678	Identifier	size		3979111	1					
ANR	3979679	Argument	UT64_MAX		3979111	3					
ANR	3979680	Identifier	UT64_MAX		3979111	0					
ANR	3979681	Argument	UT64_MAX		3979111	4					
ANR	3979682	Identifier	UT64_MAX		3979111	0					
ANR	3979683	Argument	END		3979111	5					
ANR	3979684	Identifier	END		3979111	0					
ANR	3979685	Argument	block_score		3979111	6					
ANR	3979686	Identifier	block_score		3979111	0					
ANR	3979687	ExpressionStatement	b_start = start + cur + op -> size	331:3:8195:8227	3979111	18	True				
ANR	3979688	AssignmentExpression	b_start = start + cur + op -> size		3979111	0		=			
ANR	3979689	Identifier	b_start		3979111	0					
ANR	3979690	AdditiveExpression	start + cur + op -> size		3979111	1		+			
ANR	3979691	Identifier	start		3979111	0					
ANR	3979692	AdditiveExpression	cur + op -> size		3979111	1		+			
ANR	3979693	Identifier	cur		3979111	0					
ANR	3979694	PtrMemberAccess	op -> size		3979111	1					
ANR	3979695	Identifier	op		3979111	0					
ANR	3979696	Identifier	size		3979111	1					
ANR	3979697	ExpressionStatement	block_score = 0	332:3:8232:8247	3979111	19	True				
ANR	3979698	AssignmentExpression	block_score = 0		3979111	0		=			
ANR	3979699	Identifier	block_score		3979111	0					
ANR	3979700	PrimaryExpression	0		3979111	1					
ANR	3979701	BreakStatement	break ;	333:3:8252:8257	3979111	20	True				
ANR	3979702	Label	case R_ANAL_OP_TYPE_CJMP :	334:2:8261:8285	3979111	21	True				
ANR	3979703	Identifier	R_ANAL_OP_TYPE_CJMP		3979111	0					
ANR	3979704	ExpressionStatement	"addBB ( block_list , b_start , start + cur + op -> size , op -> jump , start + cur + op -> size , NORMAL , block_score )"	335:3:8290:8396	3979111	22	True				
ANR	3979705	CallExpression	"addBB ( block_list , b_start , start + cur + op -> size , op -> jump , start + cur + op -> size , NORMAL , block_score )"		3979111	0					
ANR	3979706	Callee	addBB		3979111	0					
ANR	3979707	Identifier	addBB		3979111	0					
ANR	3979708	ArgumentList	block_list		3979111	1					
ANR	3979709	Argument	block_list		3979111	0					
ANR	3979710	Identifier	block_list		3979111	0					
ANR	3979711	Argument	b_start		3979111	1					
ANR	3979712	Identifier	b_start		3979111	0					
ANR	3979713	Argument	start + cur + op -> size		3979111	2					
ANR	3979714	AdditiveExpression	start + cur + op -> size		3979111	0		+			
ANR	3979715	Identifier	start		3979111	0					
ANR	3979716	AdditiveExpression	cur + op -> size		3979111	1		+			
ANR	3979717	Identifier	cur		3979111	0					
ANR	3979718	PtrMemberAccess	op -> size		3979111	1					
ANR	3979719	Identifier	op		3979111	0					
ANR	3979720	Identifier	size		3979111	1					
ANR	3979721	Argument	op -> jump		3979111	3					
ANR	3979722	PtrMemberAccess	op -> jump		3979111	0					
ANR	3979723	Identifier	op		3979111	0					
ANR	3979724	Identifier	jump		3979111	1					
ANR	3979725	Argument	start + cur + op -> size		3979111	4					
ANR	3979726	AdditiveExpression	start + cur + op -> size		3979111	0		+			
ANR	3979727	Identifier	start		3979111	0					
ANR	3979728	AdditiveExpression	cur + op -> size		3979111	1		+			
ANR	3979729	Identifier	cur		3979111	0					
ANR	3979730	PtrMemberAccess	op -> size		3979111	1					
ANR	3979731	Identifier	op		3979111	0					
ANR	3979732	Identifier	size		3979111	1					
ANR	3979733	Argument	NORMAL		3979111	5					
ANR	3979734	Identifier	NORMAL		3979111	0					
ANR	3979735	Argument	block_score		3979111	6					
ANR	3979736	Identifier	block_score		3979111	0					
ANR	3979737	ExpressionStatement	b_start = start + cur + op -> size	336:3:8401:8433	3979111	23	True				
ANR	3979738	AssignmentExpression	b_start = start + cur + op -> size		3979111	0		=			
ANR	3979739	Identifier	b_start		3979111	0					
ANR	3979740	AdditiveExpression	start + cur + op -> size		3979111	1		+			
ANR	3979741	Identifier	start		3979111	0					
ANR	3979742	AdditiveExpression	cur + op -> size		3979111	1		+			
ANR	3979743	Identifier	cur		3979111	0					
ANR	3979744	PtrMemberAccess	op -> size		3979111	1					
ANR	3979745	Identifier	op		3979111	0					
ANR	3979746	Identifier	size		3979111	1					
ANR	3979747	ExpressionStatement	block_score = 0	337:3:8438:8453	3979111	24	True				
ANR	3979748	AssignmentExpression	block_score = 0		3979111	0		=			
ANR	3979749	Identifier	block_score		3979111	0					
ANR	3979750	PrimaryExpression	0		3979111	1					
ANR	3979751	BreakStatement	break ;	338:3:8458:8463	3979111	25	True				
ANR	3979752	Label	case R_ANAL_OP_TYPE_UNK :	339:2:8467:8490	3979111	26	True				
ANR	3979753	Identifier	R_ANAL_OP_TYPE_UNK		3979111	0					
ANR	3979754	Label	case R_ANAL_OP_TYPE_ILL :	340:2:8494:8517	3979111	27	True				
ANR	3979755	Identifier	R_ANAL_OP_TYPE_ILL		3979111	0					
ANR	3979756	ExpressionStatement	block_score -= 10	341:3:8522:8539	3979111	28	True				
ANR	3979757	AssignmentExpression	block_score -= 10		3979111	0		-=			
ANR	3979758	Identifier	block_score		3979111	0					
ANR	3979759	PrimaryExpression	10		3979111	1					
ANR	3979760	BreakStatement	break ;	342:3:8544:8549	3979111	29	True				
ANR	3979761	Label	default :	343:2:8553:8560	3979111	30	True				
ANR	3979762	Identifier	default		3979111	0					
ANR	3979763	BreakStatement	break ;	344:3:8565:8570	3979111	31	True				
ANR	3979764	ExpressionStatement	cur += op -> size	346:2:8578:8593	3979111	10	True				
ANR	3979765	AssignmentExpression	cur += op -> size		3979111	0		+=			
ANR	3979766	Identifier	cur		3979111	0					
ANR	3979767	PtrMemberAccess	op -> size		3979111	1					
ANR	3979768	Identifier	op		3979111	0					
ANR	3979769	Identifier	size		3979111	1					
ANR	3979770	ExpressionStatement	r_anal_op_free ( op )	347:2:8597:8616	3979111	11	True				
ANR	3979771	CallExpression	r_anal_op_free ( op )		3979111	0					
ANR	3979772	Callee	r_anal_op_free		3979111	0					
ANR	3979773	Identifier	r_anal_op_free		3979111	0					
ANR	3979774	ArgumentList	op		3979111	1					
ANR	3979775	Argument	op		3979111	0					
ANR	3979776	Identifier	op		3979111	0					
ANR	3979777	ExpressionStatement	op = NULL	348:2:8620:8629	3979111	12	True				
ANR	3979778	AssignmentExpression	op = NULL		3979111	0		=			
ANR	3979779	Identifier	op		3979111	0					
ANR	3979780	Identifier	NULL		3979111	1					
ANR	3979781	IfStatement	if ( debug )		3979111	19					
ANR	3979782	Condition	debug	351:5:8640:8644	3979111	0	True				
ANR	3979783	Identifier	debug		3979111	0					
ANR	3979784	CompoundStatement		114:12:3078:3078	3979111	1					
ANR	3979785	ExpressionStatement	"eprintf ( ""Found %d basic blocks\\n"" , block_list -> length )"	352:2:8651:8706	3979111	0	True				
ANR	3979786	CallExpression	"eprintf ( ""Found %d basic blocks\\n"" , block_list -> length )"		3979111	0					
ANR	3979787	Callee	eprintf		3979111	0					
ANR	3979788	Identifier	eprintf		3979111	0					
ANR	3979789	ArgumentList	"""Found %d basic blocks\\n"""		3979111	1					
ANR	3979790	Argument	"""Found %d basic blocks\\n"""		3979111	0					
ANR	3979791	PrimaryExpression	"""Found %d basic blocks\\n"""		3979111	0					
ANR	3979792	Argument	block_list -> length		3979111	1					
ANR	3979793	PtrMemberAccess	block_list -> length		3979111	0					
ANR	3979794	Identifier	block_list		3979111	0					
ANR	3979795	Identifier	length		3979111	1					
ANR	3979796	IdentifierDeclStatement	RList * result = r_list_newf ( free ) ;	355:1:8713:8747	3979111	20	True				
ANR	3979797	IdentifierDecl	* result = r_list_newf ( free )		3979111	0					
ANR	3979798	IdentifierDeclType	RList *		3979111	0					
ANR	3979799	Identifier	result		3979111	1					
ANR	3979800	AssignmentExpression	* result = r_list_newf ( free )		3979111	2		=			
ANR	3979801	Identifier	result		3979111	0					
ANR	3979802	CallExpression	r_list_newf ( free )		3979111	1					
ANR	3979803	Callee	r_list_newf		3979111	0					
ANR	3979804	Identifier	r_list_newf		3979111	0					
ANR	3979805	ArgumentList	free		3979111	1					
ANR	3979806	Argument	free		3979111	0					
ANR	3979807	Identifier	free		3979111	0					
ANR	3979808	IfStatement	if ( ! result )		3979111	21					
ANR	3979809	Condition	! result	356:5:8754:8760	3979111	0	True				
ANR	3979810	UnaryOperationExpression	! result		3979111	0					
ANR	3979811	UnaryOperator	!		3979111	0					
ANR	3979812	Identifier	result		3979111	1					
ANR	3979813	CompoundStatement		119:14:3194:3194	3979111	1					
ANR	3979814	ExpressionStatement	r_list_free ( block_list )	357:2:8767:8791	3979111	0	True				
ANR	3979815	CallExpression	r_list_free ( block_list )		3979111	0					
ANR	3979816	Callee	r_list_free		3979111	0					
ANR	3979817	Identifier	r_list_free		3979111	0					
ANR	3979818	ArgumentList	block_list		3979111	1					
ANR	3979819	Argument	block_list		3979111	0					
ANR	3979820	Identifier	block_list		3979111	0					
ANR	3979821	ExpressionStatement	"eprintf ( ""Failed to create resulting list\\n"" )"	358:2:8795:8840	3979111	1	True				
ANR	3979822	CallExpression	"eprintf ( ""Failed to create resulting list\\n"" )"		3979111	0					
ANR	3979823	Callee	eprintf		3979111	0					
ANR	3979824	Identifier	eprintf		3979111	0					
ANR	3979825	ArgumentList	"""Failed to create resulting list\\n"""		3979111	1					
ANR	3979826	Argument	"""Failed to create resulting list\\n"""		3979111	0					
ANR	3979827	PrimaryExpression	"""Failed to create resulting list\\n"""		3979111	0					
ANR	3979828	ReturnStatement	return false ;	359:2:8844:8856	3979111	2	True				
ANR	3979829	Identifier	false		3979111	0					
ANR	3979830	ExpressionStatement	sdb = sdb_new0 ( )	362:1:8863:8880	3979111	22	True				
ANR	3979831	AssignmentExpression	sdb = sdb_new0 ( )		3979111	0		=			
ANR	3979832	Identifier	sdb		3979111	0					
ANR	3979833	CallExpression	sdb_new0 ( )		3979111	1					
ANR	3979834	Callee	sdb_new0		3979111	0					
ANR	3979835	Identifier	sdb_new0		3979111	0					
ANR	3979836	ArgumentList			3979111	1					
ANR	3979837	IfStatement	if ( ! sdb )		3979111	23					
ANR	3979838	Condition	! sdb	363:5:8887:8890	3979111	0	True				
ANR	3979839	UnaryOperationExpression	! sdb		3979111	0					
ANR	3979840	UnaryOperator	!		3979111	0					
ANR	3979841	Identifier	sdb		3979111	1					
ANR	3979842	CompoundStatement		126:11:3324:3324	3979111	1					
ANR	3979843	ExpressionStatement	"eprintf ( ""Failed to initialize sdb db\\n"" )"	364:2:8897:8938	3979111	0	True				
ANR	3979844	CallExpression	"eprintf ( ""Failed to initialize sdb db\\n"" )"		3979111	0					
ANR	3979845	Callee	eprintf		3979111	0					
ANR	3979846	Identifier	eprintf		3979111	0					
ANR	3979847	ArgumentList	"""Failed to initialize sdb db\\n"""		3979111	1					
ANR	3979848	Argument	"""Failed to initialize sdb db\\n"""		3979111	0					
ANR	3979849	PrimaryExpression	"""Failed to initialize sdb db\\n"""		3979111	0					
ANR	3979850	ExpressionStatement	r_list_free ( block_list )	365:2:8942:8966	3979111	1	True				
ANR	3979851	CallExpression	r_list_free ( block_list )		3979111	0					
ANR	3979852	Callee	r_list_free		3979111	0					
ANR	3979853	Identifier	r_list_free		3979111	0					
ANR	3979854	ArgumentList	block_list		3979111	1					
ANR	3979855	Argument	block_list		3979111	0					
ANR	3979856	Identifier	block_list		3979111	0					
ANR	3979857	ExpressionStatement	r_list_free ( result )	366:2:8970:8990	3979111	2	True				
ANR	3979858	CallExpression	r_list_free ( result )		3979111	0					
ANR	3979859	Callee	r_list_free		3979111	0					
ANR	3979860	Identifier	r_list_free		3979111	0					
ANR	3979861	ArgumentList	result		3979111	1					
ANR	3979862	Argument	result		3979111	0					
ANR	3979863	Identifier	result		3979111	0					
ANR	3979864	ReturnStatement	return false ;	367:2:8994:9006	3979111	3	True				
ANR	3979865	Identifier	false		3979111	0					
ANR	3979866	ExpressionStatement	"r_list_sort ( block_list , ( RListComparator ) bbCMP )"	370:1:9013:9061	3979111	24	True				
ANR	3979867	CallExpression	"r_list_sort ( block_list , ( RListComparator ) bbCMP )"		3979111	0					
ANR	3979868	Callee	r_list_sort		3979111	0					
ANR	3979869	Identifier	r_list_sort		3979111	0					
ANR	3979870	ArgumentList	block_list		3979111	1					
ANR	3979871	Argument	block_list		3979111	0					
ANR	3979872	Identifier	block_list		3979111	0					
ANR	3979873	Argument	( RListComparator ) bbCMP		3979111	1					
ANR	3979874	CastExpression	( RListComparator ) bbCMP		3979111	0					
ANR	3979875	CastTarget	RListComparator		3979111	0					
ANR	3979876	Identifier	bbCMP		3979111	1					
ANR	3979877	IfStatement	if ( debug )		3979111	25					
ANR	3979878	Condition	debug	372:5:9069:9073	3979111	0	True				
ANR	3979879	Identifier	debug		3979111	0					
ANR	3979880	CompoundStatement		135:12:3507:3507	3979111	1					
ANR	3979881	ExpressionStatement	"eprintf ( ""Sorting all blocks done\\n"" )"	373:2:9080:9117	3979111	0	True				
ANR	3979882	CallExpression	"eprintf ( ""Sorting all blocks done\\n"" )"		3979111	0					
ANR	3979883	Callee	eprintf		3979111	0					
ANR	3979884	Identifier	eprintf		3979111	0					
ANR	3979885	ArgumentList	"""Sorting all blocks done\\n"""		3979111	1					
ANR	3979886	Argument	"""Sorting all blocks done\\n"""		3979111	0					
ANR	3979887	PrimaryExpression	"""Sorting all blocks done\\n"""		3979111	0					
ANR	3979888	ExpressionStatement	"eprintf ( ""Creating the complete graph\\n"" )"	374:2:9121:9162	3979111	1	True				
ANR	3979889	CallExpression	"eprintf ( ""Creating the complete graph\\n"" )"		3979111	0					
ANR	3979890	Callee	eprintf		3979111	0					
ANR	3979891	Identifier	eprintf		3979111	0					
ANR	3979892	ArgumentList	"""Creating the complete graph\\n"""		3979111	1					
ANR	3979893	Argument	"""Creating the complete graph\\n"""		3979111	0					
ANR	3979894	PrimaryExpression	"""Creating the complete graph\\n"""		3979111	0					
ANR	3979895	WhileStatement	while ( block_list -> length > 0 )		3979111	26					
ANR	3979896	Condition	block_list -> length > 0	377:8:9176:9197	3979111	0	True				
ANR	3979897	RelationalExpression	block_list -> length > 0		3979111	0		>			
ANR	3979898	PtrMemberAccess	block_list -> length		3979111	0					
ANR	3979899	Identifier	block_list		3979111	0					
ANR	3979900	Identifier	length		3979111	1					
ANR	3979901	PrimaryExpression	0		3979111	1					
ANR	3979902	CompoundStatement		140:32:3631:3631	3979111	1					
ANR	3979903	ExpressionStatement	block = r_list_pop ( block_list )	378:2:9204:9235	3979111	0	True				
ANR	3979904	AssignmentExpression	block = r_list_pop ( block_list )		3979111	0		=			
ANR	3979905	Identifier	block		3979111	0					
ANR	3979906	CallExpression	r_list_pop ( block_list )		3979111	1					
ANR	3979907	Callee	r_list_pop		3979111	0					
ANR	3979908	Identifier	r_list_pop		3979111	0					
ANR	3979909	ArgumentList	block_list		3979111	1					
ANR	3979910	Argument	block_list		3979111	0					
ANR	3979911	Identifier	block_list		3979111	0					
ANR	3979912	IfStatement	if ( ! block )		3979111	1					
ANR	3979913	Condition	! block	379:6:9243:9248	3979111	0	True				
ANR	3979914	UnaryOperationExpression	! block		3979111	0					
ANR	3979915	UnaryOperator	!		3979111	0					
ANR	3979916	Identifier	block		3979111	1					
ANR	3979917	CompoundStatement		142:14:3682:3682	3979111	1					
ANR	3979918	ExpressionStatement	"eprintf ( ""Failed to get next block from list\\n"" )"	380:3:9256:9304	3979111	0	True				
ANR	3979919	CallExpression	"eprintf ( ""Failed to get next block from list\\n"" )"		3979111	0					
ANR	3979920	Callee	eprintf		3979111	0					
ANR	3979921	Identifier	eprintf		3979111	0					
ANR	3979922	ArgumentList	"""Failed to get next block from list\\n"""		3979111	1					
ANR	3979923	Argument	"""Failed to get next block from list\\n"""		3979111	0					
ANR	3979924	PrimaryExpression	"""Failed to get next block from list\\n"""		3979111	0					
ANR	3979925	ContinueStatement	continue ;	381:3:9309:9317	3979111	1	True				
ANR	3979926	IfStatement	if ( r_cons_is_breaked ( ) )		3979111	2					
ANR	3979927	Condition	r_cons_is_breaked ( )	383:6:9329:9348	3979111	0	True				
ANR	3979928	CallExpression	r_cons_is_breaked ( )		3979111	0					
ANR	3979929	Callee	r_cons_is_breaked		3979111	0					
ANR	3979930	Identifier	r_cons_is_breaked		3979111	0					
ANR	3979931	ArgumentList			3979111	1					
ANR	3979932	CompoundStatement		146:28:3782:3782	3979111	1					
ANR	3979933	BreakStatement	break ;	384:3:9356:9361	3979111	0	True				
ANR	3979934	IfStatement	if ( block_list -> length > 0 )		3979111	3					
ANR	3979935	Condition	block_list -> length > 0	387:6:9374:9395	3979111	0	True				
ANR	3979936	RelationalExpression	block_list -> length > 0		3979111	0		>			
ANR	3979937	PtrMemberAccess	block_list -> length		3979111	0					
ANR	3979938	Identifier	block_list		3979111	0					
ANR	3979939	Identifier	length		3979111	1					
ANR	3979940	PrimaryExpression	0		3979111	1					
ANR	3979941	CompoundStatement		151:3:3834:3900	3979111	1					
ANR	3979942	IdentifierDeclStatement	bb_t * next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail ) ;	388:3:9403:9469	3979111	0	True				
ANR	3979943	IdentifierDecl	* next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail )		3979111	0					
ANR	3979944	IdentifierDeclType	bb_t *		3979111	0					
ANR	3979945	Identifier	next_block		3979111	1					
ANR	3979946	AssignmentExpression	* next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail )		3979111	2		=			
ANR	3979947	Identifier	next_block		3979111	0					
ANR	3979948	CastExpression	( bb_t * ) r_list_iter_get_data ( block_list -> tail )		3979111	1					
ANR	3979949	CastTarget	bb_t *		3979111	0					
ANR	3979950	CallExpression	r_list_iter_get_data ( block_list -> tail )		3979111	1					
ANR	3979951	Callee	r_list_iter_get_data		3979111	0					
ANR	3979952	Identifier	r_list_iter_get_data		3979111	0					
ANR	3979953	ArgumentList	block_list -> tail		3979111	1					
ANR	3979954	Argument	block_list -> tail		3979111	0					
ANR	3979955	PtrMemberAccess	block_list -> tail		3979111	0					
ANR	3979956	Identifier	block_list		3979111	0					
ANR	3979957	Identifier	tail		3979111	1					
ANR	3979958	IfStatement	if ( ! next_block )		3979111	1					
ANR	3979959	Condition	! next_block	389:7:9478:9488	3979111	0	True				
ANR	3979960	UnaryOperationExpression	! next_block		3979111	0					
ANR	3979961	UnaryOperator	!		3979111	0					
ANR	3979962	Identifier	next_block		3979111	1					
ANR	3979963	CompoundStatement		152:20:3922:3922	3979111	1					
ANR	3979964	ExpressionStatement	"eprintf ( ""No next block to compare with!\\n"" )"	390:4:9497:9541	3979111	0	True				
ANR	3979965	CallExpression	"eprintf ( ""No next block to compare with!\\n"" )"		3979111	0					
ANR	3979966	Callee	eprintf		3979111	0					
ANR	3979967	Identifier	eprintf		3979111	0					
ANR	3979968	ArgumentList	"""No next block to compare with!\\n"""		3979111	1					
ANR	3979969	Argument	"""No next block to compare with!\\n"""		3979111	0					
ANR	3979970	PrimaryExpression	"""No next block to compare with!\\n"""		3979111	0					
ANR	3979971	IfStatement	if ( block -> start == next_block -> start && block -> end == UT64_MAX )		3979111	2					
ANR	3979972	Condition	block -> start == next_block -> start && block -> end == UT64_MAX	394:7:9598:9656	3979111	0	True				
ANR	3979973	AndExpression	block -> start == next_block -> start && block -> end == UT64_MAX		3979111	0		&&			
ANR	3979974	EqualityExpression	block -> start == next_block -> start		3979111	0		==			
ANR	3979975	PtrMemberAccess	block -> start		3979111	0					
ANR	3979976	Identifier	block		3979111	0					
ANR	3979977	Identifier	start		3979111	1					
ANR	3979978	PtrMemberAccess	next_block -> start		3979111	1					
ANR	3979979	Identifier	next_block		3979111	0					
ANR	3979980	Identifier	start		3979111	1					
ANR	3979981	EqualityExpression	block -> end == UT64_MAX		3979111	1		==			
ANR	3979982	PtrMemberAccess	block -> end		3979111	0					
ANR	3979983	Identifier	block		3979111	0					
ANR	3979984	Identifier	end		3979111	1					
ANR	3979985	Identifier	UT64_MAX		3979111	1					
ANR	3979986	CompoundStatement		157:68:4090:4090	3979111	1					
ANR	3979987	IfStatement	if ( block -> type != CALL && next_block -> type != CALL )		3979111	0					
ANR	3979988	Condition	block -> type != CALL && next_block -> type != CALL	395:8:9669:9715	3979111	0	True				
ANR	3979989	AndExpression	block -> type != CALL && next_block -> type != CALL		3979111	0		&&			
ANR	3979990	EqualityExpression	block -> type != CALL		3979111	0		!=			
ANR	3979991	PtrMemberAccess	block -> type		3979111	0					
ANR	3979992	Identifier	block		3979111	0					
ANR	3979993	Identifier	type		3979111	1					
ANR	3979994	Identifier	CALL		3979111	1					
ANR	3979995	EqualityExpression	next_block -> type != CALL		3979111	1		!=			
ANR	3979996	PtrMemberAccess	next_block -> type		3979111	0					
ANR	3979997	Identifier	next_block		3979111	0					
ANR	3979998	Identifier	type		3979111	1					
ANR	3979999	Identifier	CALL		3979111	1					
ANR	3980000	CompoundStatement		158:57:4149:4149	3979111	1					
ANR	3980001	ExpressionStatement	next_block -> reached = block -> reached + 1	396:5:9725:9765	3979111	0	True				
ANR	3980002	AssignmentExpression	next_block -> reached = block -> reached + 1		3979111	0		=			
ANR	3980003	PtrMemberAccess	next_block -> reached		3979111	0					
ANR	3980004	Identifier	next_block		3979111	0					
ANR	3980005	Identifier	reached		3979111	1					
ANR	3980006	AdditiveExpression	block -> reached + 1		3979111	1		+			
ANR	3980007	PtrMemberAccess	block -> reached		3979111	0					
ANR	3980008	Identifier	block		3979111	0					
ANR	3980009	Identifier	reached		3979111	1					
ANR	3980010	PrimaryExpression	1		3979111	1					
ANR	3980011	ExpressionStatement	free ( block )	398:4:9777:9789	3979111	1	True				
ANR	3980012	CallExpression	free ( block )		3979111	0					
ANR	3980013	Callee	free		3979111	0					
ANR	3980014	Identifier	free		3979111	0					
ANR	3980015	ArgumentList	block		3979111	1					
ANR	3980016	Argument	block		3979111	0					
ANR	3980017	Identifier	block		3979111	0					
ANR	3980018	ContinueStatement	continue ;	399:4:9795:9803	3979111	2	True				
ANR	3980019	IfStatement	if ( block -> start == next_block -> start && next_block -> end == UT64_MAX )		3979111	3					
ANR	3980020	Condition	block -> start == next_block -> start && next_block -> end == UT64_MAX	404:7:9954:10017	3979111	0	True				
ANR	3980021	AndExpression	block -> start == next_block -> start && next_block -> end == UT64_MAX		3979111	0		&&			
ANR	3980022	EqualityExpression	block -> start == next_block -> start		3979111	0		==			
ANR	3980023	PtrMemberAccess	block -> start		3979111	0					
ANR	3980024	Identifier	block		3979111	0					
ANR	3980025	Identifier	start		3979111	1					
ANR	3980026	PtrMemberAccess	next_block -> start		3979111	1					
ANR	3980027	Identifier	next_block		3979111	0					
ANR	3980028	Identifier	start		3979111	1					
ANR	3980029	EqualityExpression	next_block -> end == UT64_MAX		3979111	1		==			
ANR	3980030	PtrMemberAccess	next_block -> end		3979111	0					
ANR	3980031	Identifier	next_block		3979111	0					
ANR	3980032	Identifier	end		3979111	1					
ANR	3980033	Identifier	UT64_MAX		3979111	1					
ANR	3980034	CompoundStatement		167:73:4451:4451	3979111	1					
ANR	3980035	IfStatement	if ( next_block -> type != CALL )		3979111	0					
ANR	3980036	Condition	next_block -> type != CALL	405:8:10030:10053	3979111	0	True				
ANR	3980037	EqualityExpression	next_block -> type != CALL		3979111	0		!=			
ANR	3980038	PtrMemberAccess	next_block -> type		3979111	0					
ANR	3980039	Identifier	next_block		3979111	0					
ANR	3980040	Identifier	type		3979111	1					
ANR	3980041	Identifier	CALL		3979111	1					
ANR	3980042	CompoundStatement		168:35:4488:4488	3979111	1					
ANR	3980043	ExpressionStatement	block -> reached += 1	406:5:10064:10083	3979111	0	True				
ANR	3980044	AssignmentExpression	block -> reached += 1		3979111	0		+=			
ANR	3980045	PtrMemberAccess	block -> reached		3979111	0					
ANR	3980046	Identifier	block		3979111	0					
ANR	3980047	Identifier	reached		3979111	1					
ANR	3980048	PrimaryExpression	1		3979111	1					
ANR	3980049	ExpressionStatement	* next_block = * block	408:4:10095:10115	3979111	1	True				
ANR	3980050	AssignmentExpression	* next_block = * block		3979111	0		=			
ANR	3980051	UnaryOperationExpression	* next_block		3979111	0					
ANR	3980052	UnaryOperator	*		3979111	0					
ANR	3980053	Identifier	next_block		3979111	1					
ANR	3980054	UnaryOperationExpression	* block		3979111	1					
ANR	3980055	UnaryOperator	*		3979111	0					
ANR	3980056	Identifier	block		3979111	1					
ANR	3980057	ExpressionStatement	free ( block )	409:4:10121:10133	3979111	2	True				
ANR	3980058	CallExpression	free ( block )		3979111	0					
ANR	3980059	Callee	free		3979111	0					
ANR	3980060	Identifier	free		3979111	0					
ANR	3980061	ArgumentList	block		3979111	1					
ANR	3980062	Argument	block		3979111	0					
ANR	3980063	Identifier	block		3979111	0					
ANR	3980064	ContinueStatement	continue ;	410:4:10139:10147	3979111	3	True				
ANR	3980065	IfStatement	if ( block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start )		3979111	4					
ANR	3980066	Condition	block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start	413:7:10162:10252	3979111	0	True				
ANR	3980067	AndExpression	block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start		3979111	0		&&			
ANR	3980068	RelationalExpression	block -> end < UT64_MAX		3979111	0		<			
ANR	3980069	PtrMemberAccess	block -> end		3979111	0					
ANR	3980070	Identifier	block		3979111	0					
ANR	3980071	Identifier	end		3979111	1					
ANR	3980072	Identifier	UT64_MAX		3979111	1					
ANR	3980073	AndExpression	next_block -> start < block -> end && next_block -> start > block -> start		3979111	1		&&			
ANR	3980074	RelationalExpression	next_block -> start < block -> end		3979111	0		<			
ANR	3980075	PtrMemberAccess	next_block -> start		3979111	0					
ANR	3980076	Identifier	next_block		3979111	0					
ANR	3980077	Identifier	start		3979111	1					
ANR	3980078	PtrMemberAccess	block -> end		3979111	1					
ANR	3980079	Identifier	block		3979111	0					
ANR	3980080	Identifier	end		3979111	1					
ANR	3980081	RelationalExpression	next_block -> start > block -> start		3979111	1		>			
ANR	3980082	PtrMemberAccess	next_block -> start		3979111	0					
ANR	3980083	Identifier	next_block		3979111	0					
ANR	3980084	Identifier	start		3979111	1					
ANR	3980085	PtrMemberAccess	block -> start		3979111	1					
ANR	3980086	Identifier	block		3979111	0					
ANR	3980087	Identifier	start		3979111	1					
ANR	3980088	CompoundStatement		176:100:4686:4686	3979111	1					
ANR	3980089	IfStatement	if ( next_block -> jump == UT64_MAX )		3979111	0					
ANR	3980090	Condition	next_block -> jump == UT64_MAX	414:8:10265:10292	3979111	0	True				
ANR	3980091	EqualityExpression	next_block -> jump == UT64_MAX		3979111	0		==			
ANR	3980092	PtrMemberAccess	next_block -> jump		3979111	0					
ANR	3980093	Identifier	next_block		3979111	0					
ANR	3980094	Identifier	jump		3979111	1					
ANR	3980095	Identifier	UT64_MAX		3979111	1					
ANR	3980096	CompoundStatement		177:38:4726:4726	3979111	1					
ANR	3980097	ExpressionStatement	next_block -> jump = block -> jump	415:5:10302:10332	3979111	0	True				
ANR	3980098	AssignmentExpression	next_block -> jump = block -> jump		3979111	0		=			
ANR	3980099	PtrMemberAccess	next_block -> jump		3979111	0					
ANR	3980100	Identifier	next_block		3979111	0					
ANR	3980101	Identifier	jump		3979111	1					
ANR	3980102	PtrMemberAccess	block -> jump		3979111	1					
ANR	3980103	Identifier	block		3979111	0					
ANR	3980104	Identifier	jump		3979111	1					
ANR	3980105	IfStatement	if ( next_block -> fail == UT64_MAX )		3979111	1					
ANR	3980106	Condition	next_block -> fail == UT64_MAX	418:8:10349:10376	3979111	0	True				
ANR	3980107	EqualityExpression	next_block -> fail == UT64_MAX		3979111	0		==			
ANR	3980108	PtrMemberAccess	next_block -> fail		3979111	0					
ANR	3980109	Identifier	next_block		3979111	0					
ANR	3980110	Identifier	fail		3979111	1					
ANR	3980111	Identifier	UT64_MAX		3979111	1					
ANR	3980112	CompoundStatement		181:38:4810:4810	3979111	1					
ANR	3980113	ExpressionStatement	next_block -> fail = block -> fail	419:5:10386:10416	3979111	0	True				
ANR	3980114	AssignmentExpression	next_block -> fail = block -> fail		3979111	0		=			
ANR	3980115	PtrMemberAccess	next_block -> fail		3979111	0					
ANR	3980116	Identifier	next_block		3979111	0					
ANR	3980117	Identifier	fail		3979111	1					
ANR	3980118	PtrMemberAccess	block -> fail		3979111	1					
ANR	3980119	Identifier	block		3979111	0					
ANR	3980120	Identifier	fail		3979111	1					
ANR	3980121	ExpressionStatement	next_block -> end = block -> end	422:4:10429:10457	3979111	2	True				
ANR	3980122	AssignmentExpression	next_block -> end = block -> end		3979111	0		=			
ANR	3980123	PtrMemberAccess	next_block -> end		3979111	0					
ANR	3980124	Identifier	next_block		3979111	0					
ANR	3980125	Identifier	end		3979111	1					
ANR	3980126	PtrMemberAccess	block -> end		3979111	1					
ANR	3980127	Identifier	block		3979111	0					
ANR	3980128	Identifier	end		3979111	1					
ANR	3980129	ExpressionStatement	block -> end = next_block -> start	423:4:10463:10493	3979111	3	True				
ANR	3980130	AssignmentExpression	block -> end = next_block -> start		3979111	0		=			
ANR	3980131	PtrMemberAccess	block -> end		3979111	0					
ANR	3980132	Identifier	block		3979111	0					
ANR	3980133	Identifier	end		3979111	1					
ANR	3980134	PtrMemberAccess	next_block -> start		3979111	1					
ANR	3980135	Identifier	next_block		3979111	0					
ANR	3980136	Identifier	start		3979111	1					
ANR	3980137	ExpressionStatement	block -> jump = next_block -> start	424:4:10499:10530	3979111	4	True				
ANR	3980138	AssignmentExpression	block -> jump = next_block -> start		3979111	0		=			
ANR	3980139	PtrMemberAccess	block -> jump		3979111	0					
ANR	3980140	Identifier	block		3979111	0					
ANR	3980141	Identifier	jump		3979111	1					
ANR	3980142	PtrMemberAccess	next_block -> start		3979111	1					
ANR	3980143	Identifier	next_block		3979111	0					
ANR	3980144	Identifier	start		3979111	1					
ANR	3980145	ExpressionStatement	block -> fail = UT64_MAX	425:4:10536:10558	3979111	5	True				
ANR	3980146	AssignmentExpression	block -> fail = UT64_MAX		3979111	0		=			
ANR	3980147	PtrMemberAccess	block -> fail		3979111	0					
ANR	3980148	Identifier	block		3979111	0					
ANR	3980149	Identifier	fail		3979111	1					
ANR	3980150	Identifier	UT64_MAX		3979111	1					
ANR	3980151	ExpressionStatement	next_block -> type = block -> type	426:4:10564:10594	3979111	6	True				
ANR	3980152	AssignmentExpression	next_block -> type = block -> type		3979111	0		=			
ANR	3980153	PtrMemberAccess	next_block -> type		3979111	0					
ANR	3980154	Identifier	next_block		3979111	0					
ANR	3980155	Identifier	type		3979111	1					
ANR	3980156	PtrMemberAccess	block -> type		3979111	1					
ANR	3980157	Identifier	block		3979111	0					
ANR	3980158	Identifier	type		3979111	1					
ANR	3980159	IfStatement	if ( next_block -> type != CALL )		3979111	7					
ANR	3980160	Condition	next_block -> type != CALL	427:8:10604:10627	3979111	0	True				
ANR	3980161	EqualityExpression	next_block -> type != CALL		3979111	0		!=			
ANR	3980162	PtrMemberAccess	next_block -> type		3979111	0					
ANR	3980163	Identifier	next_block		3979111	0					
ANR	3980164	Identifier	type		3979111	1					
ANR	3980165	Identifier	CALL		3979111	1					
ANR	3980166	CompoundStatement		190:35:5062:5062	3979111	1					
ANR	3980167	ExpressionStatement	next_block -> reached += 1	428:5:10638:10662	3979111	0	True				
ANR	3980168	AssignmentExpression	next_block -> reached += 1		3979111	0		+=			
ANR	3980169	PtrMemberAccess	next_block -> reached		3979111	0					
ANR	3980170	Identifier	next_block		3979111	0					
ANR	3980171	Identifier	reached		3979111	1					
ANR	3980172	PrimaryExpression	1		3979111	1					
ANR	3980173	Statement	sdb_ptr_set	433:2:10682:10692	3979111	4	True				
ANR	3980174	Statement	(	433:14:10694:10694	3979111	5	True				
ANR	3980175	Statement	sdb	433:15:10695:10697	3979111	6	True				
ANR	3980176	Statement	","	433:18:10698:10698	3979111	7	True				
ANR	3980177	Statement	sdb_fmt	433:20:10700:10706	3979111	8	True				
ANR	3980178	Statement	(	433:28:10708:10708	3979111	9	True				
ANR	3980179	Statement	"""bb.0x%08"""	433:29:10709:10718	3979111	10	True				
ANR	3980180	Statement	PFMT64x	433:39:10719:10725	3979111	11	True				
ANR	3980181	Statement	","	433:46:10726:10726	3979111	12	True				
ANR	3980182	Statement	block	433:48:10728:10732	3979111	13	True				
ANR	3980183	Statement	->	433:53:10733:10734	3979111	14	True				
ANR	3980184	Statement	start	433:55:10735:10739	3979111	15	True				
ANR	3980185	Statement	)	433:60:10740:10740	3979111	16	True				
ANR	3980186	Statement	","	433:61:10741:10741	3979111	17	True				
ANR	3980187	Statement	block	433:63:10743:10747	3979111	18	True				
ANR	3980188	Statement	","	433:68:10748:10748	3979111	19	True				
ANR	3980189	Statement	0	433:70:10750:10750	3979111	20	True				
ANR	3980190	Statement	)	433:71:10751:10751	3979111	21	True				
ANR	3980191	ExpressionStatement		433:72:10752:10752	3979111	22	True				
ANR	3980192	ExpressionStatement	"r_list_append ( result , block )"	434:2:10756:10785	3979111	23	True				
ANR	3980193	CallExpression	"r_list_append ( result , block )"		3979111	0					
ANR	3980194	Callee	r_list_append		3979111	0					
ANR	3980195	Identifier	r_list_append		3979111	0					
ANR	3980196	ArgumentList	result		3979111	1					
ANR	3980197	Argument	result		3979111	0					
ANR	3980198	Identifier	result		3979111	0					
ANR	3980199	Argument	block		3979111	1					
ANR	3980200	Identifier	block		3979111	0					
ANR	3980201	IfStatement	if ( debug )		3979111	27					
ANR	3980202	Condition	debug	440:5:10909:10913	3979111	0	True				
ANR	3980203	Identifier	debug		3979111	0					
ANR	3980204	CompoundStatement		203:12:5347:5347	3979111	1					
ANR	3980205	ExpressionStatement	"eprintf ( ""Trying to create functions\\n"" )"	441:2:10920:10960	3979111	0	True				
ANR	3980206	CallExpression	"eprintf ( ""Trying to create functions\\n"" )"		3979111	0					
ANR	3980207	Callee	eprintf		3979111	0					
ANR	3980208	Identifier	eprintf		3979111	0					
ANR	3980209	ArgumentList	"""Trying to create functions\\n"""		3979111	1					
ANR	3980210	Argument	"""Trying to create functions\\n"""		3979111	0					
ANR	3980211	PrimaryExpression	"""Trying to create functions\\n"""		3979111	0					
ANR	3980212	Statement	r_list_foreach	444:1:10967:10980	3979111	28	True				
ANR	3980213	Statement	(	444:16:10982:10982	3979111	29	True				
ANR	3980214	Statement	result	444:17:10983:10988	3979111	30	True				
ANR	3980215	Statement	","	444:23:10989:10989	3979111	31	True				
ANR	3980216	Statement	iter	444:25:10991:10994	3979111	32	True				
ANR	3980217	Statement	","	444:29:10995:10995	3979111	33	True				
ANR	3980218	Statement	block	444:31:10997:11001	3979111	34	True				
ANR	3980219	Statement	)	444:36:11002:11002	3979111	35	True				
ANR	3980220	CompoundStatement		207:38:5435:5435	3979111	36					
ANR	3980221	IfStatement	if ( r_cons_is_breaked ( ) )		3979111	0					
ANR	3980222	Condition	r_cons_is_breaked ( )	445:6:11012:11031	3979111	0	True				
ANR	3980223	CallExpression	r_cons_is_breaked ( )		3979111	0					
ANR	3980224	Callee	r_cons_is_breaked		3979111	0					
ANR	3980225	Identifier	r_cons_is_breaked		3979111	0					
ANR	3980226	ArgumentList			3979111	1					
ANR	3980227	CompoundStatement		208:28:5465:5465	3979111	1					
ANR	3980228	BreakStatement	break ;	446:3:11039:11044	3979111	0	True				
ANR	3980229	IfStatement	if ( block && ( block -> reached == 0 || block -> called >= 1 ) )		3979111	1					
ANR	3980230	Condition	block && ( block -> reached == 0 || block -> called >= 1 )	448:6:11056:11107	3979111	0	True				
ANR	3980231	AndExpression	block && ( block -> reached == 0 || block -> called >= 1 )		3979111	0		&&			
ANR	3980232	Identifier	block		3979111	0					
ANR	3980233	OrExpression	block -> reached == 0 || block -> called >= 1		3979111	1		||			
ANR	3980234	EqualityExpression	block -> reached == 0		3979111	0		==			
ANR	3980235	PtrMemberAccess	block -> reached		3979111	0					
ANR	3980236	Identifier	block		3979111	0					
ANR	3980237	Identifier	reached		3979111	1					
ANR	3980238	PrimaryExpression	0		3979111	1					
ANR	3980239	RelationalExpression	block -> called >= 1		3979111	1		>=			
ANR	3980240	PtrMemberAccess	block -> called		3979111	0					
ANR	3980241	Identifier	block		3979111	0					
ANR	3980242	Identifier	called		3979111	1					
ANR	3980243	PrimaryExpression	1		3979111	1					
ANR	3980244	CompoundStatement		216:3:5673:5689	3979111	1					
ANR	3980245	IdentifierDeclStatement	fcn_t * current_function = fcnNew ( block ) ;	449:3:11115:11155	3979111	0	True				
ANR	3980246	IdentifierDecl	* current_function = fcnNew ( block )		3979111	0					
ANR	3980247	IdentifierDeclType	fcn_t *		3979111	0					
ANR	3980248	Identifier	current_function		3979111	1					
ANR	3980249	AssignmentExpression	* current_function = fcnNew ( block )		3979111	2		=			
ANR	3980250	Identifier	current_function		3979111	0					
ANR	3980251	CallExpression	fcnNew ( block )		3979111	1					
ANR	3980252	Callee	fcnNew		3979111	0					
ANR	3980253	Identifier	fcnNew		3979111	0					
ANR	3980254	ArgumentList	block		3979111	1					
ANR	3980255	Argument	block		3979111	0					
ANR	3980256	Identifier	block		3979111	0					
ANR	3980257	IdentifierDeclStatement	RStack * stack = r_stack_new ( 100 ) ;	450:3:11160:11193	3979111	1	True				
ANR	3980258	IdentifierDecl	* stack = r_stack_new ( 100 )		3979111	0					
ANR	3980259	IdentifierDeclType	RStack *		3979111	0					
ANR	3980260	Identifier	stack		3979111	1					
ANR	3980261	AssignmentExpression	* stack = r_stack_new ( 100 )		3979111	2		=			
ANR	3980262	Identifier	stack		3979111	0					
ANR	3980263	CallExpression	r_stack_new ( 100 )		3979111	1					
ANR	3980264	Callee	r_stack_new		3979111	0					
ANR	3980265	Identifier	r_stack_new		3979111	0					
ANR	3980266	ArgumentList	100		3979111	1					
ANR	3980267	Argument	100		3979111	0					
ANR	3980268	PrimaryExpression	100		3979111	0					
ANR	3980269	IdentifierDeclStatement	bb_t * jump = NULL ;	451:3:11198:11215	3979111	2	True				
ANR	3980270	IdentifierDecl	* jump = NULL		3979111	0					
ANR	3980271	IdentifierDeclType	bb_t *		3979111	0					
ANR	3980272	Identifier	jump		3979111	1					
ANR	3980273	AssignmentExpression	* jump = NULL		3979111	2		=			
ANR	3980274	Identifier	NULL		3979111	0					
ANR	3980275	Identifier	NULL		3979111	1					
ANR	3980276	IdentifierDeclStatement	bb_t * fail = NULL ;	452:3:11220:11237	3979111	3	True				
ANR	3980277	IdentifierDecl	* fail = NULL		3979111	0					
ANR	3980278	IdentifierDeclType	bb_t *		3979111	0					
ANR	3980279	Identifier	fail		3979111	1					
ANR	3980280	AssignmentExpression	* fail = NULL		3979111	2		=			
ANR	3980281	Identifier	NULL		3979111	0					
ANR	3980282	Identifier	NULL		3979111	1					
ANR	3980283	IdentifierDeclStatement	bb_t * cur = NULL ;	453:3:11242:11258	3979111	4	True				
ANR	3980284	IdentifierDecl	* cur = NULL		3979111	0					
ANR	3980285	IdentifierDeclType	bb_t *		3979111	0					
ANR	3980286	Identifier	cur		3979111	1					
ANR	3980287	AssignmentExpression	* cur = NULL		3979111	2		=			
ANR	3980288	Identifier	NULL		3979111	0					
ANR	3980289	Identifier	NULL		3979111	1					
ANR	3980290	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) block ) )"		3979111	5					
ANR	3980291	Condition	"! r_stack_push ( stack , ( void * ) block )"	455:7:11268:11302	3979111	0	True				
ANR	3980292	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) block )"		3979111	0					
ANR	3980293	UnaryOperator	!		3979111	0					
ANR	3980294	CallExpression	"r_stack_push ( stack , ( void * ) block )"		3979111	1					
ANR	3980295	Callee	r_stack_push		3979111	0					
ANR	3980296	Identifier	r_stack_push		3979111	0					
ANR	3980297	ArgumentList	stack		3979111	1					
ANR	3980298	Argument	stack		3979111	0					
ANR	3980299	Identifier	stack		3979111	0					
ANR	3980300	Argument	( void * ) block		3979111	1					
ANR	3980301	CastExpression	( void * ) block		3979111	0					
ANR	3980302	CastTarget	void *		3979111	0					
ANR	3980303	Identifier	block		3979111	1					
ANR	3980304	CompoundStatement		218:44:5736:5736	3979111	1					
ANR	3980305	ExpressionStatement	"eprintf ( ""Failed to push initial block\\n"" )"	456:4:11311:11353	3979111	0	True				
ANR	3980306	CallExpression	"eprintf ( ""Failed to push initial block\\n"" )"		3979111	0					
ANR	3980307	Callee	eprintf		3979111	0					
ANR	3980308	Identifier	eprintf		3979111	0					
ANR	3980309	ArgumentList	"""Failed to push initial block\\n"""		3979111	1					
ANR	3980310	Argument	"""Failed to push initial block\\n"""		3979111	0					
ANR	3980311	PrimaryExpression	"""Failed to push initial block\\n"""		3979111	0					
ANR	3980312	WhileStatement	while ( ! r_stack_is_empty ( stack ) )		3979111	6					
ANR	3980313	Condition	! r_stack_is_empty ( stack )	459:10:11371:11395	3979111	0	True				
ANR	3980314	UnaryOperationExpression	! r_stack_is_empty ( stack )		3979111	0					
ANR	3980315	UnaryOperator	!		3979111	0					
ANR	3980316	CallExpression	r_stack_is_empty ( stack )		3979111	1					
ANR	3980317	Callee	r_stack_is_empty		3979111	0					
ANR	3980318	Identifier	r_stack_is_empty		3979111	0					
ANR	3980319	ArgumentList	stack		3979111	1					
ANR	3980320	Argument	stack		3979111	0					
ANR	3980321	Identifier	stack		3979111	0					
ANR	3980322	CompoundStatement		222:37:5829:5829	3979111	1					
ANR	3980323	ExpressionStatement	cur = ( bb_t * ) r_stack_pop ( stack )	460:4:11404:11437	3979111	0	True				
ANR	3980324	AssignmentExpression	cur = ( bb_t * ) r_stack_pop ( stack )		3979111	0		=			
ANR	3980325	Identifier	cur		3979111	0					
ANR	3980326	CastExpression	( bb_t * ) r_stack_pop ( stack )		3979111	1					
ANR	3980327	CastTarget	bb_t *		3979111	0					
ANR	3980328	CallExpression	r_stack_pop ( stack )		3979111	1					
ANR	3980329	Callee	r_stack_pop		3979111	0					
ANR	3980330	Identifier	r_stack_pop		3979111	0					
ANR	3980331	ArgumentList	stack		3979111	1					
ANR	3980332	Argument	stack		3979111	0					
ANR	3980333	Identifier	stack		3979111	0					
ANR	3980334	IfStatement	if ( ! cur )		3979111	1					
ANR	3980335	Condition	! cur	461:8:11447:11450	3979111	0	True				
ANR	3980336	UnaryOperationExpression	! cur		3979111	0					
ANR	3980337	UnaryOperator	!		3979111	0					
ANR	3980338	Identifier	cur		3979111	1					
ANR	3980339	CompoundStatement		224:14:5884:5884	3979111	1					
ANR	3980340	ContinueStatement	continue ;	462:5:11460:11468	3979111	0	True				
ANR	3980341	ExpressionStatement	"sdb_num_set ( sdb , Fhandled ( cur -> start ) , 1 , 0 )"	464:4:11480:11525	3979111	2	True				
ANR	3980342	CallExpression	"sdb_num_set ( sdb , Fhandled ( cur -> start ) , 1 , 0 )"		3979111	0					
ANR	3980343	Callee	sdb_num_set		3979111	0					
ANR	3980344	Identifier	sdb_num_set		3979111	0					
ANR	3980345	ArgumentList	sdb		3979111	1					
ANR	3980346	Argument	sdb		3979111	0					
ANR	3980347	Identifier	sdb		3979111	0					
ANR	3980348	Argument	Fhandled ( cur -> start )		3979111	1					
ANR	3980349	CallExpression	Fhandled ( cur -> start )		3979111	0					
ANR	3980350	Callee	Fhandled		3979111	0					
ANR	3980351	Identifier	Fhandled		3979111	0					
ANR	3980352	ArgumentList	cur -> start		3979111	1					
ANR	3980353	Argument	cur -> start		3979111	0					
ANR	3980354	PtrMemberAccess	cur -> start		3979111	0					
ANR	3980355	Identifier	cur		3979111	0					
ANR	3980356	Identifier	start		3979111	1					
ANR	3980357	Argument	1		3979111	2					
ANR	3980358	PrimaryExpression	1		3979111	0					
ANR	3980359	Argument	0		3979111	3					
ANR	3980360	PrimaryExpression	0		3979111	0					
ANR	3980361	IfStatement	if ( cur -> score < 0 )		3979111	3					
ANR	3980362	Condition	cur -> score < 0	465:8:11535:11548	3979111	0	True				
ANR	3980363	RelationalExpression	cur -> score < 0		3979111	0		<			
ANR	3980364	PtrMemberAccess	cur -> score		3979111	0					
ANR	3980365	Identifier	cur		3979111	0					
ANR	3980366	Identifier	score		3979111	1					
ANR	3980367	PrimaryExpression	0		3979111	1					
ANR	3980368	CompoundStatement		228:24:5982:5982	3979111	1					
ANR	3980369	ExpressionStatement	fcnFree ( current_function )	466:5:11558:11584	3979111	0	True				
ANR	3980370	CallExpression	fcnFree ( current_function )		3979111	0					
ANR	3980371	Callee	fcnFree		3979111	0					
ANR	3980372	Identifier	fcnFree		3979111	0					
ANR	3980373	ArgumentList	current_function		3979111	1					
ANR	3980374	Argument	current_function		3979111	0					
ANR	3980375	Identifier	current_function		3979111	0					
ANR	3980376	ExpressionStatement	current_function = NULL	467:5:11591:11614	3979111	1	True				
ANR	3980377	AssignmentExpression	current_function = NULL		3979111	0		=			
ANR	3980378	Identifier	current_function		3979111	0					
ANR	3980379	Identifier	NULL		3979111	1					
ANR	3980380	BreakStatement	break ;	468:5:11621:11626	3979111	2	True				
ANR	3980381	IfStatement	if ( ( st64 ) ( cur -> end - cur -> start ) < 0 )		3979111	4					
ANR	3980382	Condition	( st64 ) ( cur -> end - cur -> start ) < 0	471:8:11675:11707	3979111	0	True				
ANR	3980383	RelationalExpression	( st64 ) ( cur -> end - cur -> start ) < 0		3979111	0		<			
ANR	3980384	CastExpression	( st64 ) ( cur -> end - cur -> start )		3979111	0					
ANR	3980385	CastTarget	st64		3979111	0					
ANR	3980386	AdditiveExpression	cur -> end - cur -> start		3979111	1		-			
ANR	3980387	PtrMemberAccess	cur -> end		3979111	0					
ANR	3980388	Identifier	cur		3979111	0					
ANR	3980389	Identifier	end		3979111	1					
ANR	3980390	PtrMemberAccess	cur -> start		3979111	1					
ANR	3980391	Identifier	cur		3979111	0					
ANR	3980392	Identifier	start		3979111	1					
ANR	3980393	PrimaryExpression	0		3979111	1					
ANR	3980394	CompoundStatement		234:43:6141:6141	3979111	1					
ANR	3980395	BreakStatement	break ;	472:5:11717:11722	3979111	0	True				
ANR	3980396	ExpressionStatement	"fcnAddBB ( current_function , cur )"	475:4:11735:11767	3979111	5	True				
ANR	3980397	CallExpression	"fcnAddBB ( current_function , cur )"		3979111	0					
ANR	3980398	Callee	fcnAddBB		3979111	0					
ANR	3980399	Identifier	fcnAddBB		3979111	0					
ANR	3980400	ArgumentList	current_function		3979111	1					
ANR	3980401	Argument	current_function		3979111	0					
ANR	3980402	Identifier	current_function		3979111	0					
ANR	3980403	Argument	cur		3979111	1					
ANR	3980404	Identifier	cur		3979111	0					
ANR	3980405	IfStatement	"if ( cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL ) )"		3979111	6					
ANR	3980406	Condition	"cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"	477:8:11778:11846	3979111	0	True				
ANR	3980407	AndExpression	"cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		3979111	0		&&			
ANR	3980408	RelationalExpression	cur -> jump < UT64_MAX		3979111	0		<			
ANR	3980409	PtrMemberAccess	cur -> jump		3979111	0					
ANR	3980410	Identifier	cur		3979111	0					
ANR	3980411	Identifier	jump		3979111	1					
ANR	3980412	Identifier	UT64_MAX		3979111	1					
ANR	3980413	UnaryOperationExpression	"! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		3979111	1					
ANR	3980414	UnaryOperator	!		3979111	0					
ANR	3980415	CallExpression	"sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		3979111	1					
ANR	3980416	Callee	sdb_num_get		3979111	0					
ANR	3980417	Identifier	sdb_num_get		3979111	0					
ANR	3980418	ArgumentList	sdb		3979111	1					
ANR	3980419	Argument	sdb		3979111	0					
ANR	3980420	Identifier	sdb		3979111	0					
ANR	3980421	Argument	Fhandled ( cur -> jump )		3979111	1					
ANR	3980422	CallExpression	Fhandled ( cur -> jump )		3979111	0					
ANR	3980423	Callee	Fhandled		3979111	0					
ANR	3980424	Identifier	Fhandled		3979111	0					
ANR	3980425	ArgumentList	cur -> jump		3979111	1					
ANR	3980426	Argument	cur -> jump		3979111	0					
ANR	3980427	PtrMemberAccess	cur -> jump		3979111	0					
ANR	3980428	Identifier	cur		3979111	0					
ANR	3980429	Identifier	jump		3979111	1					
ANR	3980430	Argument	NULL		3979111	2					
ANR	3980431	Identifier	NULL		3979111	0					
ANR	3980432	CompoundStatement		240:79:6280:6280	3979111	1					
ANR	3980433	Statement	jump	478:5:11856:11859	3979111	0	True				
ANR	3980434	Statement	=	478:10:11861:11861	3979111	1	True				
ANR	3980435	Statement	sdb_ptr_get	478:12:11863:11873	3979111	2	True				
ANR	3980436	Statement	(	478:24:11875:11875	3979111	3	True				
ANR	3980437	Statement	sdb	478:25:11876:11878	3979111	4	True				
ANR	3980438	Statement	","	478:28:11879:11879	3979111	5	True				
ANR	3980439	Statement	sdb_fmt	478:30:11881:11887	3979111	6	True				
ANR	3980440	Statement	(	478:38:11889:11889	3979111	7	True				
ANR	3980441	Statement	"""bb.0x%08"""	478:39:11890:11899	3979111	8	True				
ANR	3980442	Statement	PFMT64x	478:49:11900:11906	3979111	9	True				
ANR	3980443	Statement	","	478:56:11907:11907	3979111	10	True				
ANR	3980444	Statement	cur	478:58:11909:11911	3979111	11	True				
ANR	3980445	Statement	->	478:61:11912:11913	3979111	12	True				
ANR	3980446	Statement	jump	478:63:11914:11917	3979111	13	True				
ANR	3980447	Statement	)	478:67:11918:11918	3979111	14	True				
ANR	3980448	Statement	","	478:68:11919:11919	3979111	15	True				
ANR	3980449	Statement	NULL	478:70:11921:11924	3979111	16	True				
ANR	3980450	Statement	)	478:74:11925:11925	3979111	17	True				
ANR	3980451	ExpressionStatement		478:75:11926:11926	3979111	18	True				
ANR	3980452	IfStatement	if ( ! jump )		3979111	19					
ANR	3980453	Condition	! jump	479:9:11937:11941	3979111	0	True				
ANR	3980454	UnaryOperationExpression	! jump		3979111	0					
ANR	3980455	UnaryOperator	!		3979111	0					
ANR	3980456	Identifier	jump		3979111	1					
ANR	3980457	CompoundStatement		242:16:6375:6375	3979111	1					
ANR	3980458	Statement	eprintf	480:6:11952:11958	3979111	0	True				
ANR	3980459	Statement	(	480:14:11960:11960	3979111	1	True				
ANR	3980460	Statement	"""Failed to get jump block at 0x%"""	480:15:11961:11993	3979111	2	True				
ANR	3980461	Statement	PFMT64x	480:48:11994:12000	3979111	3	True				
ANR	3980462	Statement	"""\\n"""	480:55:12001:12004	3979111	4	True				
ANR	3980463	Statement	","	480:59:12005:12005	3979111	5	True				
ANR	3980464	Statement	cur	480:61:12007:12009	3979111	6	True				
ANR	3980465	Statement	->	480:64:12010:12011	3979111	7	True				
ANR	3980466	Statement	jump	480:66:12012:12015	3979111	8	True				
ANR	3980467	Statement	)	480:70:12016:12016	3979111	9	True				
ANR	3980468	ExpressionStatement		480:71:12017:12017	3979111	10	True				
ANR	3980469	ContinueStatement	continue ;	481:6:12025:12033	3979111	11	True				
ANR	3980470	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) jump ) )"		3979111	20					
ANR	3980471	Condition	"! r_stack_push ( stack , ( void * ) jump )"	483:9:12051:12084	3979111	0	True				
ANR	3980472	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) jump )"		3979111	0					
ANR	3980473	UnaryOperator	!		3979111	0					
ANR	3980474	CallExpression	"r_stack_push ( stack , ( void * ) jump )"		3979111	1					
ANR	3980475	Callee	r_stack_push		3979111	0					
ANR	3980476	Identifier	r_stack_push		3979111	0					
ANR	3980477	ArgumentList	stack		3979111	1					
ANR	3980478	Argument	stack		3979111	0					
ANR	3980479	Identifier	stack		3979111	0					
ANR	3980480	Argument	( void * ) jump		3979111	1					
ANR	3980481	CastExpression	( void * ) jump		3979111	0					
ANR	3980482	CastTarget	void *		3979111	0					
ANR	3980483	Identifier	jump		3979111	1					
ANR	3980484	CompoundStatement		246:45:6518:6518	3979111	1					
ANR	3980485	ExpressionStatement	"eprintf ( ""Failed to push jump block to stack\\n"" )"	484:6:12095:12143	3979111	0	True				
ANR	3980486	CallExpression	"eprintf ( ""Failed to push jump block to stack\\n"" )"		3979111	0					
ANR	3980487	Callee	eprintf		3979111	0					
ANR	3980488	Identifier	eprintf		3979111	0					
ANR	3980489	ArgumentList	"""Failed to push jump block to stack\\n"""		3979111	1					
ANR	3980490	Argument	"""Failed to push jump block to stack\\n"""		3979111	0					
ANR	3980491	PrimaryExpression	"""Failed to push jump block to stack\\n"""		3979111	0					
ANR	3980492	IfStatement	"if ( cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL ) )"		3979111	7					
ANR	3980493	Condition	"cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"	488:8:12167:12235	3979111	0	True				
ANR	3980494	AndExpression	"cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		3979111	0		&&			
ANR	3980495	RelationalExpression	cur -> fail < UT64_MAX		3979111	0		<			
ANR	3980496	PtrMemberAccess	cur -> fail		3979111	0					
ANR	3980497	Identifier	cur		3979111	0					
ANR	3980498	Identifier	fail		3979111	1					
ANR	3980499	Identifier	UT64_MAX		3979111	1					
ANR	3980500	UnaryOperationExpression	"! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		3979111	1					
ANR	3980501	UnaryOperator	!		3979111	0					
ANR	3980502	CallExpression	"sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		3979111	1					
ANR	3980503	Callee	sdb_num_get		3979111	0					
ANR	3980504	Identifier	sdb_num_get		3979111	0					
ANR	3980505	ArgumentList	sdb		3979111	1					
ANR	3980506	Argument	sdb		3979111	0					
ANR	3980507	Identifier	sdb		3979111	0					
ANR	3980508	Argument	Fhandled ( cur -> fail )		3979111	1					
ANR	3980509	CallExpression	Fhandled ( cur -> fail )		3979111	0					
ANR	3980510	Callee	Fhandled		3979111	0					
ANR	3980511	Identifier	Fhandled		3979111	0					
ANR	3980512	ArgumentList	cur -> fail		3979111	1					
ANR	3980513	Argument	cur -> fail		3979111	0					
ANR	3980514	PtrMemberAccess	cur -> fail		3979111	0					
ANR	3980515	Identifier	cur		3979111	0					
ANR	3980516	Identifier	fail		3979111	1					
ANR	3980517	Argument	NULL		3979111	2					
ANR	3980518	Identifier	NULL		3979111	0					
ANR	3980519	CompoundStatement		251:79:6669:6669	3979111	1					
ANR	3980520	Statement	fail	489:5:12245:12248	3979111	0	True				
ANR	3980521	Statement	=	489:10:12250:12250	3979111	1	True				
ANR	3980522	Statement	sdb_ptr_get	489:12:12252:12262	3979111	2	True				
ANR	3980523	Statement	(	489:24:12264:12264	3979111	3	True				
ANR	3980524	Statement	sdb	489:25:12265:12267	3979111	4	True				
ANR	3980525	Statement	","	489:28:12268:12268	3979111	5	True				
ANR	3980526	Statement	sdb_fmt	489:30:12270:12276	3979111	6	True				
ANR	3980527	Statement	(	489:38:12278:12278	3979111	7	True				
ANR	3980528	Statement	"""bb.0x%08"""	489:39:12279:12288	3979111	8	True				
ANR	3980529	Statement	PFMT64x	489:50:12290:12296	3979111	9	True				
ANR	3980530	Statement	","	489:57:12297:12297	3979111	10	True				
ANR	3980531	Statement	cur	489:59:12299:12301	3979111	11	True				
ANR	3980532	Statement	->	489:62:12302:12303	3979111	12	True				
ANR	3980533	Statement	fail	489:64:12304:12307	3979111	13	True				
ANR	3980534	Statement	)	489:68:12308:12308	3979111	14	True				
ANR	3980535	Statement	","	489:69:12309:12309	3979111	15	True				
ANR	3980536	Statement	NULL	489:71:12311:12314	3979111	16	True				
ANR	3980537	Statement	)	489:75:12315:12315	3979111	17	True				
ANR	3980538	ExpressionStatement		489:76:12316:12316	3979111	18	True				
ANR	3980539	IfStatement	if ( ! fail )		3979111	19					
ANR	3980540	Condition	! fail	490:9:12327:12331	3979111	0	True				
ANR	3980541	UnaryOperationExpression	! fail		3979111	0					
ANR	3980542	UnaryOperator	!		3979111	0					
ANR	3980543	Identifier	fail		3979111	1					
ANR	3980544	CompoundStatement		253:16:6765:6765	3979111	1					
ANR	3980545	Statement	eprintf	491:6:12342:12348	3979111	0	True				
ANR	3980546	Statement	(	491:14:12350:12350	3979111	1	True				
ANR	3980547	Statement	"""Failed to get fail block at 0x%"""	491:15:12351:12383	3979111	2	True				
ANR	3980548	Statement	PFMT64x	491:48:12384:12390	3979111	3	True				
ANR	3980549	Statement	"""\\n"""	491:55:12391:12394	3979111	4	True				
ANR	3980550	Statement	","	491:59:12395:12395	3979111	5	True				
ANR	3980551	Statement	cur	491:61:12397:12399	3979111	6	True				
ANR	3980552	Statement	->	491:64:12400:12401	3979111	7	True				
ANR	3980553	Statement	fail	491:66:12402:12405	3979111	8	True				
ANR	3980554	Statement	)	491:70:12406:12406	3979111	9	True				
ANR	3980555	ExpressionStatement		491:71:12407:12407	3979111	10	True				
ANR	3980556	ContinueStatement	continue ;	492:6:12415:12423	3979111	11	True				
ANR	3980557	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) fail ) )"		3979111	20					
ANR	3980558	Condition	"! r_stack_push ( stack , ( void * ) fail )"	494:9:12441:12474	3979111	0	True				
ANR	3980559	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) fail )"		3979111	0					
ANR	3980560	UnaryOperator	!		3979111	0					
ANR	3980561	CallExpression	"r_stack_push ( stack , ( void * ) fail )"		3979111	1					
ANR	3980562	Callee	r_stack_push		3979111	0					
ANR	3980563	Identifier	r_stack_push		3979111	0					
ANR	3980564	ArgumentList	stack		3979111	1					
ANR	3980565	Argument	stack		3979111	0					
ANR	3980566	Identifier	stack		3979111	0					
ANR	3980567	Argument	( void * ) fail		3979111	1					
ANR	3980568	CastExpression	( void * ) fail		3979111	0					
ANR	3980569	CastTarget	void *		3979111	0					
ANR	3980570	Identifier	fail		3979111	1					
ANR	3980571	CompoundStatement		257:45:6908:6908	3979111	1					
ANR	3980572	ExpressionStatement	"eprintf ( ""Failed to push jump block to stack\\n"" )"	495:6:12485:12533	3979111	0	True				
ANR	3980573	CallExpression	"eprintf ( ""Failed to push jump block to stack\\n"" )"		3979111	0					
ANR	3980574	Callee	eprintf		3979111	0					
ANR	3980575	Identifier	eprintf		3979111	0					
ANR	3980576	ArgumentList	"""Failed to push jump block to stack\\n"""		3979111	1					
ANR	3980577	Argument	"""Failed to push jump block to stack\\n"""		3979111	0					
ANR	3980578	PrimaryExpression	"""Failed to push jump block to stack\\n"""		3979111	0					
ANR	3980579	IfStatement	if ( current_function )		3979111	7					
ANR	3980580	Condition	current_function	501:7:12594:12609	3979111	0	True				
ANR	3980581	Identifier	current_function		3979111	0					
ANR	3980582	CompoundStatement		264:25:7043:7043	3979111	1					
ANR	3980583	IfStatement	if ( checkFunction ( current_function ) )		3979111	0					
ANR	3980584	Condition	checkFunction ( current_function )	502:8:12622:12653	3979111	0	True				
ANR	3980585	CallExpression	checkFunction ( current_function )		3979111	0					
ANR	3980586	Callee	checkFunction		3979111	0					
ANR	3980587	Identifier	checkFunction		3979111	0					
ANR	3980588	ArgumentList	current_function		3979111	1					
ANR	3980589	Argument	current_function		3979111	0					
ANR	3980590	Identifier	current_function		3979111	0					
ANR	3980591	CompoundStatement		265:42:7087:7087	3979111	1					
ANR	3980592	IfStatement	if ( input [ 0 ] == '*' )		3979111	0					
ANR	3980593	Condition	input [ 0 ] == '*'	503:9:12667:12681	3979111	0	True				
ANR	3980594	EqualityExpression	input [ 0 ] == '*'		3979111	0		==			
ANR	3980595	ArrayIndexing	input [ 0 ]		3979111	0					
ANR	3980596	Identifier	input		3979111	0					
ANR	3980597	PrimaryExpression	0		3979111	1					
ANR	3980598	PrimaryExpression	'*'		3979111	1					
ANR	3980599	CompoundStatement		266:26:7115:7115	3979111	1					
ANR	3980600	ExpressionStatement	"printFunctionCommands ( core , current_function , NULL )"	504:6:12692:12744	3979111	0	True				
ANR	3980601	CallExpression	"printFunctionCommands ( core , current_function , NULL )"		3979111	0					
ANR	3980602	Callee	printFunctionCommands		3979111	0					
ANR	3980603	Identifier	printFunctionCommands		3979111	0					
ANR	3980604	ArgumentList	core		3979111	1					
ANR	3980605	Argument	core		3979111	0					
ANR	3980606	Identifier	core		3979111	0					
ANR	3980607	Argument	current_function		3979111	1					
ANR	3980608	Identifier	current_function		3979111	0					
ANR	3980609	Argument	NULL		3979111	2					
ANR	3980610	Identifier	NULL		3979111	0					
ANR	3980611	ElseStatement	else		3979111	0					
ANR	3980612	CompoundStatement		268:12:7189:7189	3979111	0					
ANR	3980613	ExpressionStatement	"createFunction ( core , current_function , NULL )"	506:6:12766:12811	3979111	0	True				
ANR	3980614	CallExpression	"createFunction ( core , current_function , NULL )"		3979111	0					
ANR	3980615	Callee	createFunction		3979111	0					
ANR	3980616	Identifier	createFunction		3979111	0					
ANR	3980617	ArgumentList	core		3979111	1					
ANR	3980618	Argument	core		3979111	0					
ANR	3980619	Identifier	core		3979111	0					
ANR	3980620	Argument	current_function		3979111	1					
ANR	3980621	Identifier	current_function		3979111	0					
ANR	3980622	Argument	NULL		3979111	2					
ANR	3980623	Identifier	NULL		3979111	0					
ANR	3980624	ExpressionStatement	fcnFree ( current_function )	509:4:12830:12856	3979111	1	True				
ANR	3980625	CallExpression	fcnFree ( current_function )		3979111	0					
ANR	3980626	Callee	fcnFree		3979111	0					
ANR	3980627	Identifier	fcnFree		3979111	0					
ANR	3980628	ArgumentList	current_function		3979111	1					
ANR	3980629	Argument	current_function		3979111	0					
ANR	3980630	Identifier	current_function		3979111	0					
ANR	3980631	ExpressionStatement	r_stack_free ( stack )	512:3:12867:12887	3979111	8	True				
ANR	3980632	CallExpression	r_stack_free ( stack )		3979111	0					
ANR	3980633	Callee	r_stack_free		3979111	0					
ANR	3980634	Identifier	r_stack_free		3979111	0					
ANR	3980635	ArgumentList	stack		3979111	1					
ANR	3980636	Argument	stack		3979111	0					
ANR	3980637	Identifier	stack		3979111	0					
ANR	3980638	ExpressionStatement	sdb_free ( sdb )	516:1:12898:12912	3979111	37	True				
ANR	3980639	CallExpression	sdb_free ( sdb )		3979111	0					
ANR	3980640	Callee	sdb_free		3979111	0					
ANR	3980641	Identifier	sdb_free		3979111	0					
ANR	3980642	ArgumentList	sdb		3979111	1					
ANR	3980643	Argument	sdb		3979111	0					
ANR	3980644	Identifier	sdb		3979111	0					
ANR	3980645	ExpressionStatement	r_list_free ( result )	517:1:12915:12935	3979111	38	True				
ANR	3980646	CallExpression	r_list_free ( result )		3979111	0					
ANR	3980647	Callee	r_list_free		3979111	0					
ANR	3980648	Identifier	r_list_free		3979111	0					
ANR	3980649	ArgumentList	result		3979111	1					
ANR	3980650	Argument	result		3979111	0					
ANR	3980651	Identifier	result		3979111	0					
ANR	3980652	ExpressionStatement	r_list_free ( block_list )	518:1:12938:12962	3979111	39	True				
ANR	3980653	CallExpression	r_list_free ( block_list )		3979111	0					
ANR	3980654	Callee	r_list_free		3979111	0					
ANR	3980655	Identifier	r_list_free		3979111	0					
ANR	3980656	ArgumentList	block_list		3979111	1					
ANR	3980657	Argument	block_list		3979111	0					
ANR	3980658	Identifier	block_list		3979111	0					
ANR	3980659	ReturnStatement	return true ;	519:1:12965:12976	3979111	40	True				
ANR	3980660	Identifier	true		3979111	0					
ANR	3980661	ReturnType	R_API bool		3979111	1					
ANR	3980662	Identifier	core_anal_bbs		3979111	2					
ANR	3980663	ParameterList	"RCore * core , const char * input"		3979111	3					
ANR	3980664	Parameter	RCore * core	238:25:5536:5546	3979111	0	True				
ANR	3980665	ParameterType	RCore *		3979111	0					
ANR	3980666	Identifier	core		3979111	1					
ANR	3980667	Parameter	const char * input	238:38:5549:5565	3979111	1	True				
ANR	3980668	ParameterType	const char *		3979111	0					
ANR	3980669	Identifier	input		3979111	1					
ANR	3980670	CFGEntryNode	ENTRY		3979111		True				
ANR	3980671	CFGExitNode	EXIT		3979111		True				
ANR	3980672	CFGErrorNode	ERROR		3979111		True				
ANR	3980673	Symbol	stack		3979111						
ANR	3980674	Symbol	* op		3979111						
ANR	3980675	Symbol	block -> start		3979111						
ANR	3980676	Symbol	r_stack_push		3979111						
ANR	3980677	Symbol	op -> mnemonic		3979111						
ANR	3980678	Symbol	cur -> jump		3979111						
ANR	3980679	Symbol	* input		3979111						
ANR	3980680	Symbol	core -> offset		3979111						
ANR	3980681	Symbol	r_core_anal_op		3979111						
ANR	3980682	Symbol	b_start		3979111						
ANR	3980683	Symbol	next_block -> reached		3979111						
ANR	3980684	Symbol	r_list_pop		3979111						
ANR	3980685	Symbol	block -> jump		3979111						
ANR	3980686	Symbol	* cur		3979111						
ANR	3980687	Symbol	cur -> fail		3979111						
ANR	3980688	Symbol	r_stack_pop		3979111						
ANR	3980689	Symbol	block		3979111						
ANR	3980690	Symbol	__isdata		3979111						
ANR	3980691	Symbol	core -> num		3979111						
ANR	3980692	Symbol	next_block -> type		3979111						
ANR	3980693	Symbol	block -> type		3979111						
ANR	3980694	Symbol	jump		3979111						
ANR	3980695	Symbol	core -> blocksize		3979111						
ANR	3980696	Symbol	* block_list		3979111						
ANR	3980697	Symbol	next_block -> fail		3979111						
ANR	3980698	Symbol	r_io_is_valid_offset		3979111						
ANR	3980699	Symbol	NULL		3979111						
ANR	3980700	Symbol	r_list_newf		3979111						
ANR	3980701	Symbol	op -> type		3979111						
ANR	3980702	Symbol	iter		3979111						
ANR	3980703	Symbol	* next_block		3979111						
ANR	3980704	Symbol	block -> end		3979111						
ANR	3980705	Symbol	next_block -> jump		3979111						
ANR	3980706	Symbol	r_anal_noreturn_at		3979111						
ANR	3980707	Symbol	sdb		3979111						
ANR	3980708	Symbol	core		3979111						
ANR	3980709	Symbol	input		3979111						
ANR	3980710	Symbol	fail		3979111						
ANR	3980711	Symbol	cur -> end		3979111						
ANR	3980712	Symbol	cur -> score		3979111						
ANR	3980713	Symbol	size		3979111						
ANR	3980714	Symbol	R_ANAL_OP_MASK_DISASM		3979111						
ANR	3980715	Symbol	r_config_get_i		3979111						
ANR	3980716	Symbol	block -> fail		3979111						
ANR	3980717	Symbol	true		3979111						
ANR	3980718	Symbol	invalid_instruction_barrier		3979111						
ANR	3980719	Symbol	END		3979111						
ANR	3980720	Symbol	block_list		3979111						
ANR	3980721	Symbol	* op -> mnemonic		3979111						
ANR	3980722	Symbol	fcnNew		3979111						
ANR	3980723	Symbol	checkFunction		3979111						
ANR	3980724	Symbol	cur		3979111						
ANR	3980725	Symbol	CALL		3979111						
ANR	3980726	Symbol	block_score		3979111						
ANR	3980727	Symbol	dst		3979111						
ANR	3980728	Symbol	r_stack_new		3979111						
ANR	3980729	Symbol	* core		3979111						
ANR	3980730	Symbol	block -> reached		3979111						
ANR	3980731	Symbol	R_ANAL_OP_MASK_BASIC		3979111						
ANR	3980732	Symbol	core -> anal		3979111						
ANR	3980733	Symbol	r_num_math		3979111						
ANR	3980734	Symbol	* * op		3979111						
ANR	3980735	Symbol	result		3979111						
ANR	3980736	Symbol	block -> called		3979111						
ANR	3980737	Symbol	r_cons_is_breaked		3979111						
ANR	3980738	Symbol	dsize		3979111						
ANR	3980739	Symbol	core -> io		3979111						
ANR	3980740	Symbol	r_list_iter_get_data		3979111						
ANR	3980741	Symbol	op -> jump		3979111						
ANR	3980742	Symbol	block_list -> length		3979111						
ANR	3980743	Symbol	UT64_MAX		3979111						
ANR	3980744	Symbol	free		3979111						
ANR	3980745	Symbol	next_block -> end		3979111						
ANR	3980746	Symbol	r_stack_is_empty		3979111						
ANR	3980747	Symbol	block_list -> tail		3979111						
ANR	3980748	Symbol	core -> config		3979111						
ANR	3980749	Symbol	sdb_num_get		3979111						
ANR	3980750	Symbol	op		3979111						
ANR	3980751	Symbol	sdb_new0		3979111						
ANR	3980752	Symbol	debug		3979111						
ANR	3980753	Symbol	next_block		3979111						
ANR	3980754	Symbol	cur -> start		3979111						
ANR	3980755	Symbol	false		3979111						
ANR	3980756	Symbol	start		3979111						
ANR	3980757	Symbol	Fhandled		3979111						
ANR	3980758	Symbol	* block		3979111						
ANR	3980759	Symbol	bbCMP		3979111						
ANR	3980760	Symbol	nopskip		3979111						
ANR	3980761	Symbol	op -> size		3979111						
ANR	3980762	Symbol	current_function		3979111						
ANR	3980763	Symbol	NORMAL		3979111						
ANR	3980764	Symbol	next_block -> start		3979111						
ANR	3980765	Symbol	r_list_new		3979111						
ANR	3980766	Symbol	base		3979111						
ANR	3980767	Function	core_anal_bbs_range	522:0:12981:20923							
ANR	3980768	FunctionDef	"core_anal_bbs_range (RCore * core , const char * input)"		3980767	0					
ANR	3980769	CompoundStatement		522:64:13045:20923	3980767	0					
ANR	3980770	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , core -> offset , false ) )"		3980767	0					
ANR	3980771	Condition	"! r_io_is_valid_offset ( core -> io , core -> offset , false )"	523:5:13052:13104	3980767	0	True				
ANR	3980772	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , core -> offset , false )"		3980767	0					
ANR	3980773	UnaryOperator	!		3980767	0					
ANR	3980774	CallExpression	"r_io_is_valid_offset ( core -> io , core -> offset , false )"		3980767	1					
ANR	3980775	Callee	r_io_is_valid_offset		3980767	0					
ANR	3980776	Identifier	r_io_is_valid_offset		3980767	0					
ANR	3980777	ArgumentList	core -> io		3980767	1					
ANR	3980778	Argument	core -> io		3980767	0					
ANR	3980779	PtrMemberAccess	core -> io		3980767	0					
ANR	3980780	Identifier	core		3980767	0					
ANR	3980781	Identifier	io		3980767	1					
ANR	3980782	Argument	core -> offset		3980767	1					
ANR	3980783	PtrMemberAccess	core -> offset		3980767	0					
ANR	3980784	Identifier	core		3980767	0					
ANR	3980785	Identifier	offset		3980767	1					
ANR	3980786	Argument	false		3980767	2					
ANR	3980787	Identifier	false		3980767	0					
ANR	3980788	CompoundStatement		2:60:61:61	3980767	1					
ANR	3980789	ExpressionStatement	"eprintf ( ""No valid offset given to analyze\\n"" )"	524:2:13111:13157	3980767	0	True				
ANR	3980790	CallExpression	"eprintf ( ""No valid offset given to analyze\\n"" )"		3980767	0					
ANR	3980791	Callee	eprintf		3980767	0					
ANR	3980792	Identifier	eprintf		3980767	0					
ANR	3980793	ArgumentList	"""No valid offset given to analyze\\n"""		3980767	1					
ANR	3980794	Argument	"""No valid offset given to analyze\\n"""		3980767	0					
ANR	3980795	PrimaryExpression	"""No valid offset given to analyze\\n"""		3980767	0					
ANR	3980796	ReturnStatement	return false ;	525:2:13161:13173	3980767	1	True				
ANR	3980797	Identifier	false		3980767	0					
ANR	3980798	IdentifierDeclStatement	Sdb * sdb = NULL ;	528:1:13180:13195	3980767	1	True				
ANR	3980799	IdentifierDecl	* sdb = NULL		3980767	0					
ANR	3980800	IdentifierDeclType	Sdb *		3980767	0					
ANR	3980801	Identifier	sdb		3980767	1					
ANR	3980802	AssignmentExpression	* sdb = NULL		3980767	2		=			
ANR	3980803	Identifier	NULL		3980767	0					
ANR	3980804	Identifier	NULL		3980767	1					
ANR	3980805	IdentifierDeclStatement	ut64 cur = 0 ;	529:1:13198:13210	3980767	2	True				
ANR	3980806	IdentifierDecl	cur = 0		3980767	0					
ANR	3980807	IdentifierDeclType	ut64		3980767	0					
ANR	3980808	Identifier	cur		3980767	1					
ANR	3980809	AssignmentExpression	cur = 0		3980767	2		=			
ANR	3980810	Identifier	cur		3980767	0					
ANR	3980811	PrimaryExpression	0		3980767	1					
ANR	3980812	IdentifierDeclStatement	ut64 start = core -> offset ;	530:1:13213:13238	3980767	3	True				
ANR	3980813	IdentifierDecl	start = core -> offset		3980767	0					
ANR	3980814	IdentifierDeclType	ut64		3980767	0					
ANR	3980815	Identifier	start		3980767	1					
ANR	3980816	AssignmentExpression	start = core -> offset		3980767	2		=			
ANR	3980817	Identifier	start		3980767	0					
ANR	3980818	PtrMemberAccess	core -> offset		3980767	1					
ANR	3980819	Identifier	core		3980767	0					
ANR	3980820	Identifier	offset		3980767	1					
ANR	3980821	IdentifierDeclStatement	"ut64 size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize ;"	531:1:13241:13315	3980767	4	True				
ANR	3980822	IdentifierDecl	"size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		3980767	0					
ANR	3980823	IdentifierDeclType	ut64		3980767	0					
ANR	3980824	Identifier	size		3980767	1					
ANR	3980825	AssignmentExpression	"size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		3980767	2		=			
ANR	3980826	Identifier	size		3980767	0					
ANR	3980827	ConditionalExpression	"input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		3980767	1					
ANR	3980828	Condition	input [ 0 ]		3980767	0					
ANR	3980829	ArrayIndexing	input [ 0 ]		3980767	0					
ANR	3980830	Identifier	input		3980767	0					
ANR	3980831	PrimaryExpression	0		3980767	1					
ANR	3980832	CallExpression	"r_num_math ( core -> num , input + 1 )"		3980767	1					
ANR	3980833	Callee	r_num_math		3980767	0					
ANR	3980834	Identifier	r_num_math		3980767	0					
ANR	3980835	ArgumentList	core -> num		3980767	1					
ANR	3980836	Argument	core -> num		3980767	0					
ANR	3980837	PtrMemberAccess	core -> num		3980767	0					
ANR	3980838	Identifier	core		3980767	0					
ANR	3980839	Identifier	num		3980767	1					
ANR	3980840	Argument	input + 1		3980767	1					
ANR	3980841	AdditiveExpression	input + 1		3980767	0		+			
ANR	3980842	Identifier	input		3980767	0					
ANR	3980843	PrimaryExpression	1		3980767	1					
ANR	3980844	PtrMemberAccess	core -> blocksize		3980767	2					
ANR	3980845	Identifier	core		3980767	0					
ANR	3980846	Identifier	blocksize		3980767	1					
ANR	3980847	IdentifierDeclStatement	ut64 b_start = start ;	532:1:13318:13338	3980767	5	True				
ANR	3980848	IdentifierDecl	b_start = start		3980767	0					
ANR	3980849	IdentifierDeclType	ut64		3980767	0					
ANR	3980850	Identifier	b_start		3980767	1					
ANR	3980851	AssignmentExpression	b_start = start		3980767	2		=			
ANR	3980852	Identifier	start		3980767	0					
ANR	3980853	Identifier	start		3980767	1					
ANR	3980854	IdentifierDeclStatement	RAnalOp * op ;	533:1:13341:13352	3980767	6	True				
ANR	3980855	IdentifierDecl	* op		3980767	0					
ANR	3980856	IdentifierDeclType	RAnalOp *		3980767	0					
ANR	3980857	Identifier	op		3980767	1					
ANR	3980858	IdentifierDeclStatement	RListIter * iter ;	534:1:13355:13370	3980767	7	True				
ANR	3980859	IdentifierDecl	* iter		3980767	0					
ANR	3980860	IdentifierDeclType	RListIter *		3980767	0					
ANR	3980861	Identifier	iter		3980767	1					
ANR	3980862	IdentifierDeclStatement	int block_score = 0 ;	535:1:13373:13392	3980767	8	True				
ANR	3980863	IdentifierDecl	block_score = 0		3980767	0					
ANR	3980864	IdentifierDeclType	int		3980767	0					
ANR	3980865	Identifier	block_score		3980767	1					
ANR	3980866	AssignmentExpression	block_score = 0		3980767	2		=			
ANR	3980867	Identifier	block_score		3980767	0					
ANR	3980868	PrimaryExpression	0		3980767	1					
ANR	3980869	IdentifierDeclStatement	RList * block_list ;	536:1:13395:13412	3980767	9	True				
ANR	3980870	IdentifierDecl	* block_list		3980767	0					
ANR	3980871	IdentifierDeclType	RList *		3980767	0					
ANR	3980872	Identifier	block_list		3980767	1					
ANR	3980873	IdentifierDeclStatement	bb_t * block = NULL ;	537:1:13415:13433	3980767	10	True				
ANR	3980874	IdentifierDecl	* block = NULL		3980767	0					
ANR	3980875	IdentifierDeclType	bb_t *		3980767	0					
ANR	3980876	Identifier	block		3980767	1					
ANR	3980877	AssignmentExpression	* block = NULL		3980767	2		=			
ANR	3980878	Identifier	NULL		3980767	0					
ANR	3980879	Identifier	NULL		3980767	1					
ANR	3980880	IdentifierDeclStatement	int invalid_instruction_barrier = - 20000 ;	538:1:13436:13476	3980767	11	True				
ANR	3980881	IdentifierDecl	invalid_instruction_barrier = - 20000		3980767	0					
ANR	3980882	IdentifierDeclType	int		3980767	0					
ANR	3980883	Identifier	invalid_instruction_barrier		3980767	1					
ANR	3980884	AssignmentExpression	invalid_instruction_barrier = - 20000		3980767	2		=			
ANR	3980885	Identifier	invalid_instruction_barrier		3980767	0					
ANR	3980886	UnaryOperationExpression	- 20000		3980767	1					
ANR	3980887	UnaryOperator	-		3980767	0					
ANR	3980888	PrimaryExpression	20000		3980767	1					
ANR	3980889	IdentifierDeclStatement	"bool debug = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	539:1:13479:13534	3980767	12	True				
ANR	3980890	IdentifierDecl	"debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		3980767	0					
ANR	3980891	IdentifierDeclType	bool		3980767	0					
ANR	3980892	Identifier	debug		3980767	1					
ANR	3980893	AssignmentExpression	"debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		3980767	2		=			
ANR	3980894	Identifier	debug		3980767	0					
ANR	3980895	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		3980767	1					
ANR	3980896	Callee	r_config_get_i		3980767	0					
ANR	3980897	Identifier	r_config_get_i		3980767	0					
ANR	3980898	ArgumentList	core -> config		3980767	1					
ANR	3980899	Argument	core -> config		3980767	0					
ANR	3980900	PtrMemberAccess	core -> config		3980767	0					
ANR	3980901	Identifier	core		3980767	0					
ANR	3980902	Identifier	config		3980767	1					
ANR	3980903	Argument	"""cfg.debug"""		3980767	1					
ANR	3980904	PrimaryExpression	"""cfg.debug"""		3980767	0					
ANR	3980905	IdentifierDeclStatement	ut64 lista [ 1024 ] = { 0 } ;	540:1:13537:13561	3980767	13	True				
ANR	3980906	IdentifierDecl	lista [ 1024 ] = { 0 }		3980767	0					
ANR	3980907	IdentifierDeclType	ut64 [ 1024 ]		3980767	0					
ANR	3980908	Identifier	lista		3980767	1					
ANR	3980909	PrimaryExpression	1024		3980767	2					
ANR	3980910	AssignmentExpression	lista [ 1024 ] = { 0 }		3980767	3		=			
ANR	3980911	Identifier	lista		3980767	0					
ANR	3980912	InitializerList	0		3980767	1					
ANR	3980913	PrimaryExpression	0		3980767	0					
ANR	3980914	IdentifierDeclStatement	int idx = 0 ;	541:1:13564:13575	3980767	14	True				
ANR	3980915	IdentifierDecl	idx = 0		3980767	0					
ANR	3980916	IdentifierDeclType	int		3980767	0					
ANR	3980917	Identifier	idx		3980767	1					
ANR	3980918	AssignmentExpression	idx = 0		3980767	2		=			
ANR	3980919	Identifier	idx		3980767	0					
ANR	3980920	PrimaryExpression	0		3980767	1					
ANR	3980921	IdentifierDeclStatement	int x ;	542:1:13578:13583	3980767	15	True				
ANR	3980922	IdentifierDecl	x		3980767	0					
ANR	3980923	IdentifierDeclType	int		3980767	0					
ANR	3980924	Identifier	x		3980767	1					
ANR	3980925	ExpressionStatement	block_list = r_list_new ( )	544:1:13587:13613	3980767	16	True				
ANR	3980926	AssignmentExpression	block_list = r_list_new ( )		3980767	0		=			
ANR	3980927	Identifier	block_list		3980767	0					
ANR	3980928	CallExpression	r_list_new ( )		3980767	1					
ANR	3980929	Callee	r_list_new		3980767	0					
ANR	3980930	Identifier	r_list_new		3980767	0					
ANR	3980931	ArgumentList			3980767	1					
ANR	3980932	IfStatement	if ( ! block_list )		3980767	17					
ANR	3980933	Condition	! block_list	545:5:13620:13630	3980767	0	True				
ANR	3980934	UnaryOperationExpression	! block_list		3980767	0					
ANR	3980935	UnaryOperator	!		3980767	0					
ANR	3980936	Identifier	block_list		3980767	1					
ANR	3980937	CompoundStatement		24:18:587:587	3980767	1					
ANR	3980938	ExpressionStatement	"eprintf ( ""Failed to create block_list\\n"" )"	546:2:13637:13678	3980767	0	True				
ANR	3980939	CallExpression	"eprintf ( ""Failed to create block_list\\n"" )"		3980767	0					
ANR	3980940	Callee	eprintf		3980767	0					
ANR	3980941	Identifier	eprintf		3980767	0					
ANR	3980942	ArgumentList	"""Failed to create block_list\\n"""		3980767	1					
ANR	3980943	Argument	"""Failed to create block_list\\n"""		3980767	0					
ANR	3980944	PrimaryExpression	"""Failed to create block_list\\n"""		3980767	0					
ANR	3980945	IfStatement	if ( debug )		3980767	18					
ANR	3980946	Condition	debug	548:5:13688:13692	3980767	0	True				
ANR	3980947	Identifier	debug		3980767	0					
ANR	3980948	CompoundStatement		27:12:649:649	3980767	1					
ANR	3980949	Statement	eprintf	549:2:13699:13705	3980767	0	True				
ANR	3980950	Statement	(	549:10:13707:13707	3980767	1	True				
ANR	3980951	Statement	"""Analyzing [0x%08"""	549:11:13708:13725	3980767	2	True				
ANR	3980952	Statement	PFMT64x	549:29:13726:13732	3980767	3	True				
ANR	3980953	Statement	"""-0x%08"""	549:36:13733:13740	3980767	4	True				
ANR	3980954	Statement	PFMT64x	549:44:13741:13747	3980767	5	True				
ANR	3980955	Statement	"""]\\n"""	549:51:13748:13752	3980767	6	True				
ANR	3980956	Statement	","	549:56:13753:13753	3980767	7	True				
ANR	3980957	Statement	start	549:58:13755:13759	3980767	8	True				
ANR	3980958	Statement	","	549:63:13760:13760	3980767	9	True				
ANR	3980959	Statement	start	549:65:13762:13766	3980767	10	True				
ANR	3980960	Statement	+	549:71:13768:13768	3980767	11	True				
ANR	3980961	Statement	size	549:73:13770:13773	3980767	12	True				
ANR	3980962	Statement	)	549:77:13774:13774	3980767	13	True				
ANR	3980963	ExpressionStatement		549:78:13775:13775	3980767	14	True				
ANR	3980964	ExpressionStatement	"eprintf ( ""Creating basic blocks\\b"" )"	550:2:13779:13814	3980767	15	True				
ANR	3980965	CallExpression	"eprintf ( ""Creating basic blocks\\b"" )"		3980767	0					
ANR	3980966	Callee	eprintf		3980767	0					
ANR	3980967	Identifier	eprintf		3980767	0					
ANR	3980968	ArgumentList	"""Creating basic blocks\\b"""		3980767	1					
ANR	3980969	Argument	"""Creating basic blocks\\b"""		3980767	0					
ANR	3980970	PrimaryExpression	"""Creating basic blocks\\b"""		3980767	0					
ANR	3980971	ExpressionStatement	lista [ idx ++ ] = b_start	552:1:13820:13842	3980767	19	True				
ANR	3980972	AssignmentExpression	lista [ idx ++ ] = b_start		3980767	0		=			
ANR	3980973	ArrayIndexing	lista [ idx ++ ]		3980767	0					
ANR	3980974	Identifier	lista		3980767	0					
ANR	3980975	PostIncDecOperationExpression	idx ++		3980767	1					
ANR	3980976	Identifier	idx		3980767	0					
ANR	3980977	IncDec	++		3980767	1					
ANR	3980978	Identifier	b_start		3980767	1					
ANR	3980979	ForStatement	for ( x = 0 ; x < 1024 ; x ++ )		3980767	20					
ANR	3980980	ForInit	x = 0 ;	553:6:13850:13855	3980767	0	True				
ANR	3980981	AssignmentExpression	x = 0		3980767	0		=			
ANR	3980982	Identifier	x		3980767	0					
ANR	3980983	PrimaryExpression	0		3980767	1					
ANR	3980984	Condition	x < 1024	553:13:13857:13864	3980767	1	True				
ANR	3980985	RelationalExpression	x < 1024		3980767	0		<			
ANR	3980986	Identifier	x		3980767	0					
ANR	3980987	PrimaryExpression	1024		3980767	1					
ANR	3980988	PostIncDecOperationExpression	x ++	553:23:13867:13869	3980767	2	True				
ANR	3980989	Identifier	x		3980767	0					
ANR	3980990	IncDec	++		3980767	1					
ANR	3980991	CompoundStatement		32:28:826:826	3980767	3					
ANR	3980992	IfStatement	if ( lista [ x ] != 0 )		3980767	0					
ANR	3980993	Condition	lista [ x ] != 0	554:6:13880:13892	3980767	0	True				
ANR	3980994	EqualityExpression	lista [ x ] != 0		3980767	0		!=			
ANR	3980995	ArrayIndexing	lista [ x ]		3980767	0					
ANR	3980996	Identifier	lista		3980767	0					
ANR	3980997	Identifier	x		3980767	1					
ANR	3980998	PrimaryExpression	0		3980767	1					
ANR	3980999	CompoundStatement		33:21:849:849	3980767	1					
ANR	3981000	ExpressionStatement	cur = 0	555:3:13900:13906	3980767	0	True				
ANR	3981001	AssignmentExpression	cur = 0		3980767	0		=			
ANR	3981002	Identifier	cur		3980767	0					
ANR	3981003	PrimaryExpression	0		3980767	1					
ANR	3981004	ExpressionStatement	b_start = lista [ x ]	556:3:13911:13929	3980767	1	True				
ANR	3981005	AssignmentExpression	b_start = lista [ x ]		3980767	0		=			
ANR	3981006	Identifier	b_start		3980767	0					
ANR	3981007	ArrayIndexing	lista [ x ]		3980767	1					
ANR	3981008	Identifier	lista		3980767	0					
ANR	3981009	Identifier	x		3980767	1					
ANR	3981010	ExpressionStatement	lista [ x ] = 0	557:3:13934:13946	3980767	2	True				
ANR	3981011	AssignmentExpression	lista [ x ] = 0		3980767	0		=			
ANR	3981012	ArrayIndexing	lista [ x ]		3980767	0					
ANR	3981013	Identifier	lista		3980767	0					
ANR	3981014	Identifier	x		3980767	1					
ANR	3981015	PrimaryExpression	0		3980767	1					
ANR	3981016	WhileStatement	while ( cur < size )		3980767	3					
ANR	3981017	Condition	cur < size	558:10:13958:13967	3980767	0	True				
ANR	3981018	RelationalExpression	cur < size		3980767	0		<			
ANR	3981019	Identifier	cur		3980767	0					
ANR	3981020	Identifier	size		3980767	1					
ANR	3981021	CompoundStatement		46:4:1119:1138	3980767	1					
ANR	3981022	IfStatement	if ( r_cons_is_breaked ( ) )		3980767	0					
ANR	3981023	Condition	r_cons_is_breaked ( )	559:8:13980:13999	3980767	0	True				
ANR	3981024	CallExpression	r_cons_is_breaked ( )		3980767	0					
ANR	3981025	Callee	r_cons_is_breaked		3980767	0					
ANR	3981026	Identifier	r_cons_is_breaked		3980767	0					
ANR	3981027	ArgumentList			3980767	1					
ANR	3981028	CompoundStatement		38:30:956:956	3980767	1					
ANR	3981029	BreakStatement	break ;	560:5:14009:14014	3980767	0	True				
ANR	3981030	IfStatement	if ( block_score < invalid_instruction_barrier )		3980767	1					
ANR	3981031	Condition	block_score < invalid_instruction_barrier	563:8:14097:14137	3980767	0	True				
ANR	3981032	RelationalExpression	block_score < invalid_instruction_barrier		3980767	0		<			
ANR	3981033	Identifier	block_score		3980767	0					
ANR	3981034	Identifier	invalid_instruction_barrier		3980767	1					
ANR	3981035	CompoundStatement		42:51:1094:1094	3980767	1					
ANR	3981036	BreakStatement	break ;	564:5:14147:14152	3980767	0	True				
ANR	3981037	IdentifierDeclStatement	bool bFound = false ;	567:4:14165:14184	3980767	2	True				
ANR	3981038	IdentifierDecl	bFound = false		3980767	0					
ANR	3981039	IdentifierDeclType	bool		3980767	0					
ANR	3981040	Identifier	bFound		3980767	1					
ANR	3981041	AssignmentExpression	bFound = false		3980767	2		=			
ANR	3981042	Identifier	false		3980767	0					
ANR	3981043	Identifier	false		3980767	1					
ANR	3981044	Statement	r_list_foreach	569:4:14264:14277	3980767	3	True				
ANR	3981045	Statement	(	569:19:14279:14279	3980767	4	True				
ANR	3981046	Statement	block_list	569:20:14280:14289	3980767	5	True				
ANR	3981047	Statement	","	569:30:14290:14290	3980767	6	True				
ANR	3981048	Statement	iter	569:32:14292:14295	3980767	7	True				
ANR	3981049	Statement	","	569:36:14296:14296	3980767	8	True				
ANR	3981050	Statement	block	569:38:14298:14302	3980767	9	True				
ANR	3981051	Statement	)	569:43:14303:14303	3980767	10	True				
ANR	3981052	CompoundStatement		48:45:1259:1259	3980767	11					
ANR	3981053	IfStatement	if ( ( block -> type == END || block -> type == NORMAL ) && b_start + cur == block -> start )		3980767	0					
ANR	3981054	Condition	( block -> type == END || block -> type == NORMAL ) && b_start + cur == block -> start	570:10:14317:14394	3980767	0	True				
ANR	3981055	AndExpression	( block -> type == END || block -> type == NORMAL ) && b_start + cur == block -> start		3980767	0		&&			
ANR	3981056	OrExpression	block -> type == END || block -> type == NORMAL		3980767	0		||			
ANR	3981057	EqualityExpression	block -> type == END		3980767	0		==			
ANR	3981058	PtrMemberAccess	block -> type		3980767	0					
ANR	3981059	Identifier	block		3980767	0					
ANR	3981060	Identifier	type		3980767	1					
ANR	3981061	Identifier	END		3980767	1					
ANR	3981062	EqualityExpression	block -> type == NORMAL		3980767	1		==			
ANR	3981063	PtrMemberAccess	block -> type		3980767	0					
ANR	3981064	Identifier	block		3980767	0					
ANR	3981065	Identifier	type		3980767	1					
ANR	3981066	Identifier	NORMAL		3980767	1					
ANR	3981067	EqualityExpression	b_start + cur == block -> start		3980767	1		==			
ANR	3981068	AdditiveExpression	b_start + cur		3980767	0		+			
ANR	3981069	Identifier	b_start		3980767	0					
ANR	3981070	Identifier	cur		3980767	1					
ANR	3981071	PtrMemberAccess	block -> start		3980767	1					
ANR	3981072	Identifier	block		3980767	0					
ANR	3981073	Identifier	start		3980767	1					
ANR	3981074	CompoundStatement		49:91:1352:1352	3980767	1					
ANR	3981075	ExpressionStatement	bFound = true	571:6:14406:14419	3980767	0	True				
ANR	3981076	AssignmentExpression	bFound = true		3980767	0		=			
ANR	3981077	Identifier	bFound		3980767	0					
ANR	3981078	Identifier	true		3980767	1					
ANR	3981079	BreakStatement	break ;	572:6:14427:14432	3980767	1	True				
ANR	3981080	IfStatement	if ( ! bFound )		3980767	12					
ANR	3981081	Condition	! bFound	576:8:14456:14462	3980767	0	True				
ANR	3981082	UnaryOperationExpression	! bFound		3980767	0					
ANR	3981083	UnaryOperator	!		3980767	0					
ANR	3981084	Identifier	bFound		3980767	1					
ANR	3981085	CompoundStatement		55:17:1419:1419	3980767	1					
ANR	3981086	ExpressionStatement	"op = r_core_anal_op ( core , b_start + cur , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"	577:5:14472:14559	3980767	0	True				
ANR	3981087	AssignmentExpression	"op = r_core_anal_op ( core , b_start + cur , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		3980767	0		=			
ANR	3981088	Identifier	op		3980767	0					
ANR	3981089	CallExpression	"r_core_anal_op ( core , b_start + cur , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		3980767	1					
ANR	3981090	Callee	r_core_anal_op		3980767	0					
ANR	3981091	Identifier	r_core_anal_op		3980767	0					
ANR	3981092	ArgumentList	core		3980767	1					
ANR	3981093	Argument	core		3980767	0					
ANR	3981094	Identifier	core		3980767	0					
ANR	3981095	Argument	b_start + cur		3980767	1					
ANR	3981096	AdditiveExpression	b_start + cur		3980767	0		+			
ANR	3981097	Identifier	b_start		3980767	0					
ANR	3981098	Identifier	cur		3980767	1					
ANR	3981099	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		3980767	2					
ANR	3981100	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		3980767	0		|			
ANR	3981101	Identifier	R_ANAL_OP_MASK_BASIC		3980767	0					
ANR	3981102	Identifier	R_ANAL_OP_MASK_DISASM		3980767	1					
ANR	3981103	IfStatement	if ( ! op || ! op -> mnemonic )		3980767	1					
ANR	3981104	Condition	! op || ! op -> mnemonic	579:9:14571:14590	3980767	0	True				
ANR	3981105	OrExpression	! op || ! op -> mnemonic		3980767	0		||			
ANR	3981106	UnaryOperationExpression	! op		3980767	0					
ANR	3981107	UnaryOperator	!		3980767	0					
ANR	3981108	Identifier	op		3980767	1					
ANR	3981109	UnaryOperationExpression	! op -> mnemonic		3980767	1					
ANR	3981110	UnaryOperator	!		3980767	0					
ANR	3981111	PtrMemberAccess	op -> mnemonic		3980767	1					
ANR	3981112	Identifier	op		3980767	0					
ANR	3981113	Identifier	mnemonic		3980767	1					
ANR	3981114	CompoundStatement		58:31:1547:1547	3980767	1					
ANR	3981115	ExpressionStatement	block_score -= 10	580:6:14601:14618	3980767	0	True				
ANR	3981116	AssignmentExpression	block_score -= 10		3980767	0		-=			
ANR	3981117	Identifier	block_score		3980767	0					
ANR	3981118	PrimaryExpression	10		3980767	1					
ANR	3981119	ExpressionStatement	cur ++	581:6:14626:14631	3980767	1	True				
ANR	3981120	PostIncDecOperationExpression	cur ++		3980767	0					
ANR	3981121	Identifier	cur		3980767	0					
ANR	3981122	IncDec	++		3980767	1					
ANR	3981123	ContinueStatement	continue ;	582:6:14639:14647	3980767	2	True				
ANR	3981124	IfStatement	if ( op -> mnemonic [ 0 ] == '?' )		3980767	2					
ANR	3981125	Condition	op -> mnemonic [ 0 ] == '?'	585:9:14666:14687	3980767	0	True				
ANR	3981126	EqualityExpression	op -> mnemonic [ 0 ] == '?'		3980767	0		==			
ANR	3981127	ArrayIndexing	op -> mnemonic [ 0 ]		3980767	0					
ANR	3981128	PtrMemberAccess	op -> mnemonic		3980767	0					
ANR	3981129	Identifier	op		3980767	0					
ANR	3981130	Identifier	mnemonic		3980767	1					
ANR	3981131	PrimaryExpression	0		3980767	1					
ANR	3981132	PrimaryExpression	'?'		3980767	1					
ANR	3981133	CompoundStatement		64:33:1644:1644	3980767	1					
ANR	3981134	Statement	eprintf	586:6:14698:14704	3980767	0	True				
ANR	3981135	Statement	(	586:14:14706:14706	3980767	1	True				
ANR	3981136	Statement	"""? Bad op at: 0x%08"""	586:15:14707:14726	3980767	2	True				
ANR	3981137	Statement	PFMT64x	586:35:14727:14733	3980767	3	True				
ANR	3981138	Statement	"""\\n"""	586:42:14734:14737	3980767	4	True				
ANR	3981139	Statement	","	586:46:14738:14738	3980767	5	True				
ANR	3981140	Statement	cur	586:48:14740:14742	3980767	6	True				
ANR	3981141	Statement	+	586:52:14744:14744	3980767	7	True				
ANR	3981142	Statement	b_start	586:54:14746:14752	3980767	8	True				
ANR	3981143	Statement	)	586:61:14753:14753	3980767	9	True				
ANR	3981144	ExpressionStatement		586:62:14754:14754	3980767	10	True				
ANR	3981145	Statement	eprintf	587:6:14762:14768	3980767	11	True				
ANR	3981146	Statement	(	587:14:14770:14770	3980767	12	True				
ANR	3981147	Statement	"""Cannot analyze opcode at %"""	587:15:14771:14798	3980767	13	True				
ANR	3981148	Statement	PFMT64x	587:43:14799:14805	3980767	14	True				
ANR	3981149	Statement	"""\\n"""	587:50:14806:14809	3980767	15	True				
ANR	3981150	Statement	","	587:54:14810:14810	3980767	16	True				
ANR	3981151	Statement	b_start	587:56:14812:14818	3980767	17	True				
ANR	3981152	Statement	+	587:64:14820:14820	3980767	18	True				
ANR	3981153	Statement	cur	587:66:14822:14824	3980767	19	True				
ANR	3981154	Statement	)	587:69:14825:14825	3980767	20	True				
ANR	3981155	ExpressionStatement		587:70:14826:14826	3980767	21	True				
ANR	3981156	ExpressionStatement	block_score -= 10	588:6:14834:14851	3980767	22	True				
ANR	3981157	AssignmentExpression	block_score -= 10		3980767	0		-=			
ANR	3981158	Identifier	block_score		3980767	0					
ANR	3981159	PrimaryExpression	10		3980767	1					
ANR	3981160	ExpressionStatement	cur ++	589:6:14859:14864	3980767	23	True				
ANR	3981161	PostIncDecOperationExpression	cur ++		3980767	0					
ANR	3981162	Identifier	cur		3980767	0					
ANR	3981163	IncDec	++		3980767	1					
ANR	3981164	ContinueStatement	continue ;	590:6:14872:14880	3980767	24	True				
ANR	3981165	SwitchStatement	switch ( op -> type )		3980767	3					
ANR	3981166	Condition	op -> type	593:13:14971:14978	3980767	0	True				
ANR	3981167	PtrMemberAccess	op -> type		3980767	0					
ANR	3981168	Identifier	op		3980767	0					
ANR	3981169	Identifier	type		3980767	1					
ANR	3981170	CompoundStatement		72:23:1935:1935	3980767	1					
ANR	3981171	Label	case R_ANAL_OP_TYPE_RET :	594:5:14988:15011	3980767	0	True				
ANR	3981172	Identifier	R_ANAL_OP_TYPE_RET		3980767	0					
ANR	3981173	ExpressionStatement	"addBB ( block_list , b_start , b_start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"	595:6:15019:15110	3980767	1	True				
ANR	3981174	CallExpression	"addBB ( block_list , b_start , b_start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"		3980767	0					
ANR	3981175	Callee	addBB		3980767	0					
ANR	3981176	Identifier	addBB		3980767	0					
ANR	3981177	ArgumentList	block_list		3980767	1					
ANR	3981178	Argument	block_list		3980767	0					
ANR	3981179	Identifier	block_list		3980767	0					
ANR	3981180	Argument	b_start		3980767	1					
ANR	3981181	Identifier	b_start		3980767	0					
ANR	3981182	Argument	b_start + cur + op -> size		3980767	2					
ANR	3981183	AdditiveExpression	b_start + cur + op -> size		3980767	0		+			
ANR	3981184	Identifier	b_start		3980767	0					
ANR	3981185	AdditiveExpression	cur + op -> size		3980767	1		+			
ANR	3981186	Identifier	cur		3980767	0					
ANR	3981187	PtrMemberAccess	op -> size		3980767	1					
ANR	3981188	Identifier	op		3980767	0					
ANR	3981189	Identifier	size		3980767	1					
ANR	3981190	Argument	UT64_MAX		3980767	3					
ANR	3981191	Identifier	UT64_MAX		3980767	0					
ANR	3981192	Argument	UT64_MAX		3980767	4					
ANR	3981193	Identifier	UT64_MAX		3980767	0					
ANR	3981194	Argument	END		3980767	5					
ANR	3981195	Identifier	END		3980767	0					
ANR	3981196	Argument	block_score		3980767	6					
ANR	3981197	Identifier	block_score		3980767	0					
ANR	3981198	ExpressionStatement	cur = size	596:6:15118:15128	3980767	2	True				
ANR	3981199	AssignmentExpression	cur = size		3980767	0		=			
ANR	3981200	Identifier	cur		3980767	0					
ANR	3981201	Identifier	size		3980767	1					
ANR	3981202	BreakStatement	break ;	597:6:15136:15141	3980767	3	True				
ANR	3981203	Label	case R_ANAL_OP_TYPE_UJMP :	598:5:15148:15172	3980767	4	True				
ANR	3981204	Identifier	R_ANAL_OP_TYPE_UJMP		3980767	0					
ANR	3981205	Label	case R_ANAL_OP_TYPE_IRJMP :	599:5:15179:15204	3980767	5	True				
ANR	3981206	Identifier	R_ANAL_OP_TYPE_IRJMP		3980767	0					
ANR	3981207	ExpressionStatement	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"	600:6:15212:15303	3980767	6	True				
ANR	3981208	CallExpression	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"		3980767	0					
ANR	3981209	Callee	addBB		3980767	0					
ANR	3981210	Identifier	addBB		3980767	0					
ANR	3981211	ArgumentList	block_list		3980767	1					
ANR	3981212	Argument	block_list		3980767	0					
ANR	3981213	Identifier	block_list		3980767	0					
ANR	3981214	Argument	b_start		3980767	1					
ANR	3981215	Identifier	b_start		3980767	0					
ANR	3981216	Argument	b_start + cur + op -> size		3980767	2					
ANR	3981217	AdditiveExpression	b_start + cur + op -> size		3980767	0		+			
ANR	3981218	Identifier	b_start		3980767	0					
ANR	3981219	AdditiveExpression	cur + op -> size		3980767	1		+			
ANR	3981220	Identifier	cur		3980767	0					
ANR	3981221	PtrMemberAccess	op -> size		3980767	1					
ANR	3981222	Identifier	op		3980767	0					
ANR	3981223	Identifier	size		3980767	1					
ANR	3981224	Argument	op -> jump		3980767	3					
ANR	3981225	PtrMemberAccess	op -> jump		3980767	0					
ANR	3981226	Identifier	op		3980767	0					
ANR	3981227	Identifier	jump		3980767	1					
ANR	3981228	Argument	UT64_MAX		3980767	4					
ANR	3981229	Identifier	UT64_MAX		3980767	0					
ANR	3981230	Argument	END		3980767	5					
ANR	3981231	Identifier	END		3980767	0					
ANR	3981232	Argument	block_score		3980767	6					
ANR	3981233	Identifier	block_score		3980767	0					
ANR	3981234	ExpressionStatement	cur = size	601:6:15311:15321	3980767	7	True				
ANR	3981235	AssignmentExpression	cur = size		3980767	0		=			
ANR	3981236	Identifier	cur		3980767	0					
ANR	3981237	Identifier	size		3980767	1					
ANR	3981238	BreakStatement	break ;	602:6:15329:15334	3980767	8	True				
ANR	3981239	Label	case R_ANAL_OP_TYPE_JMP :	603:5:15341:15364	3980767	9	True				
ANR	3981240	Identifier	R_ANAL_OP_TYPE_JMP		3980767	0					
ANR	3981241	ExpressionStatement	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"	604:6:15372:15463	3980767	10	True				
ANR	3981242	CallExpression	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"		3980767	0					
ANR	3981243	Callee	addBB		3980767	0					
ANR	3981244	Identifier	addBB		3980767	0					
ANR	3981245	ArgumentList	block_list		3980767	1					
ANR	3981246	Argument	block_list		3980767	0					
ANR	3981247	Identifier	block_list		3980767	0					
ANR	3981248	Argument	b_start		3980767	1					
ANR	3981249	Identifier	b_start		3980767	0					
ANR	3981250	Argument	b_start + cur + op -> size		3980767	2					
ANR	3981251	AdditiveExpression	b_start + cur + op -> size		3980767	0		+			
ANR	3981252	Identifier	b_start		3980767	0					
ANR	3981253	AdditiveExpression	cur + op -> size		3980767	1		+			
ANR	3981254	Identifier	cur		3980767	0					
ANR	3981255	PtrMemberAccess	op -> size		3980767	1					
ANR	3981256	Identifier	op		3980767	0					
ANR	3981257	Identifier	size		3980767	1					
ANR	3981258	Argument	op -> jump		3980767	3					
ANR	3981259	PtrMemberAccess	op -> jump		3980767	0					
ANR	3981260	Identifier	op		3980767	0					
ANR	3981261	Identifier	jump		3980767	1					
ANR	3981262	Argument	UT64_MAX		3980767	4					
ANR	3981263	Identifier	UT64_MAX		3980767	0					
ANR	3981264	Argument	END		3980767	5					
ANR	3981265	Identifier	END		3980767	0					
ANR	3981266	Argument	block_score		3980767	6					
ANR	3981267	Identifier	block_score		3980767	0					
ANR	3981268	ExpressionStatement	b_start = op -> jump	605:6:15471:15489	3980767	11	True				
ANR	3981269	AssignmentExpression	b_start = op -> jump		3980767	0		=			
ANR	3981270	Identifier	b_start		3980767	0					
ANR	3981271	PtrMemberAccess	op -> jump		3980767	1					
ANR	3981272	Identifier	op		3980767	0					
ANR	3981273	Identifier	jump		3980767	1					
ANR	3981274	ExpressionStatement	cur = 0	606:6:15497:15504	3980767	12	True				
ANR	3981275	AssignmentExpression	cur = 0		3980767	0		=			
ANR	3981276	Identifier	cur		3980767	0					
ANR	3981277	PrimaryExpression	0		3980767	1					
ANR	3981278	ExpressionStatement	block_score = 0	607:6:15512:15527	3980767	13	True				
ANR	3981279	AssignmentExpression	block_score = 0		3980767	0		=			
ANR	3981280	Identifier	block_score		3980767	0					
ANR	3981281	PrimaryExpression	0		3980767	1					
ANR	3981282	BreakStatement	break ;	608:6:15535:15540	3980767	14	True				
ANR	3981283	Label	case R_ANAL_OP_TYPE_CJMP :	609:5:15547:15571	3980767	15	True				
ANR	3981284	Identifier	R_ANAL_OP_TYPE_CJMP		3980767	0					
ANR	3981285	ExpressionStatement	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , b_start + cur + op -> size , NORMAL , block_score )"	611:6:15675:15785	3980767	16	True				
ANR	3981286	CallExpression	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , b_start + cur + op -> size , NORMAL , block_score )"		3980767	0					
ANR	3981287	Callee	addBB		3980767	0					
ANR	3981288	Identifier	addBB		3980767	0					
ANR	3981289	ArgumentList	block_list		3980767	1					
ANR	3981290	Argument	block_list		3980767	0					
ANR	3981291	Identifier	block_list		3980767	0					
ANR	3981292	Argument	b_start		3980767	1					
ANR	3981293	Identifier	b_start		3980767	0					
ANR	3981294	Argument	b_start + cur + op -> size		3980767	2					
ANR	3981295	AdditiveExpression	b_start + cur + op -> size		3980767	0		+			
ANR	3981296	Identifier	b_start		3980767	0					
ANR	3981297	AdditiveExpression	cur + op -> size		3980767	1		+			
ANR	3981298	Identifier	cur		3980767	0					
ANR	3981299	PtrMemberAccess	op -> size		3980767	1					
ANR	3981300	Identifier	op		3980767	0					
ANR	3981301	Identifier	size		3980767	1					
ANR	3981302	Argument	op -> jump		3980767	3					
ANR	3981303	PtrMemberAccess	op -> jump		3980767	0					
ANR	3981304	Identifier	op		3980767	0					
ANR	3981305	Identifier	jump		3980767	1					
ANR	3981306	Argument	b_start + cur + op -> size		3980767	4					
ANR	3981307	AdditiveExpression	b_start + cur + op -> size		3980767	0		+			
ANR	3981308	Identifier	b_start		3980767	0					
ANR	3981309	AdditiveExpression	cur + op -> size		3980767	1		+			
ANR	3981310	Identifier	cur		3980767	0					
ANR	3981311	PtrMemberAccess	op -> size		3980767	1					
ANR	3981312	Identifier	op		3980767	0					
ANR	3981313	Identifier	size		3980767	1					
ANR	3981314	Argument	NORMAL		3980767	5					
ANR	3981315	Identifier	NORMAL		3980767	0					
ANR	3981316	Argument	block_score		3980767	6					
ANR	3981317	Identifier	block_score		3980767	0					
ANR	3981318	ExpressionStatement	b_start = b_start + cur + op -> size	612:6:15793:15827	3980767	17	True				
ANR	3981319	AssignmentExpression	b_start = b_start + cur + op -> size		3980767	0		=			
ANR	3981320	Identifier	b_start		3980767	0					
ANR	3981321	AdditiveExpression	b_start + cur + op -> size		3980767	1		+			
ANR	3981322	Identifier	b_start		3980767	0					
ANR	3981323	AdditiveExpression	cur + op -> size		3980767	1		+			
ANR	3981324	Identifier	cur		3980767	0					
ANR	3981325	PtrMemberAccess	op -> size		3980767	1					
ANR	3981326	Identifier	op		3980767	0					
ANR	3981327	Identifier	size		3980767	1					
ANR	3981328	ExpressionStatement	cur = 0	613:6:15835:15842	3980767	18	True				
ANR	3981329	AssignmentExpression	cur = 0		3980767	0		=			
ANR	3981330	Identifier	cur		3980767	0					
ANR	3981331	PrimaryExpression	0		3980767	1					
ANR	3981332	IfStatement	if ( idx < 1024 )		3980767	19					
ANR	3981333	Condition	idx < 1024	614:10:15854:15863	3980767	0	True				
ANR	3981334	RelationalExpression	idx < 1024		3980767	0		<			
ANR	3981335	Identifier	idx		3980767	0					
ANR	3981336	PrimaryExpression	1024		3980767	1					
ANR	3981337	CompoundStatement		93:22:2820:2820	3980767	1					
ANR	3981338	ExpressionStatement	lista [ idx ++ ] = op -> jump	615:7:15875:15898	3980767	0	True				
ANR	3981339	AssignmentExpression	lista [ idx ++ ] = op -> jump		3980767	0		=			
ANR	3981340	ArrayIndexing	lista [ idx ++ ]		3980767	0					
ANR	3981341	Identifier	lista		3980767	0					
ANR	3981342	PostIncDecOperationExpression	idx ++		3980767	1					
ANR	3981343	Identifier	idx		3980767	0					
ANR	3981344	IncDec	++		3980767	1					
ANR	3981345	PtrMemberAccess	op -> jump		3980767	1					
ANR	3981346	Identifier	op		3980767	0					
ANR	3981347	Identifier	jump		3980767	1					
ANR	3981348	ExpressionStatement	block_score = 0	617:6:15914:15929	3980767	20	True				
ANR	3981349	AssignmentExpression	block_score = 0		3980767	0		=			
ANR	3981350	Identifier	block_score		3980767	0					
ANR	3981351	PrimaryExpression	0		3980767	1					
ANR	3981352	BreakStatement	break ;	618:6:15937:15942	3980767	21	True				
ANR	3981353	Label	case R_ANAL_OP_TYPE_TRAP :	619:5:15949:15973	3980767	22	True				
ANR	3981354	Identifier	R_ANAL_OP_TYPE_TRAP		3980767	0					
ANR	3981355	Label	case R_ANAL_OP_TYPE_UNK :	620:5:15980:16003	3980767	23	True				
ANR	3981356	Identifier	R_ANAL_OP_TYPE_UNK		3980767	0					
ANR	3981357	Label	case R_ANAL_OP_TYPE_ILL :	621:5:16010:16033	3980767	24	True				
ANR	3981358	Identifier	R_ANAL_OP_TYPE_ILL		3980767	0					
ANR	3981359	ExpressionStatement	block_score -= 10	622:6:16041:16058	3980767	25	True				
ANR	3981360	AssignmentExpression	block_score -= 10		3980767	0		-=			
ANR	3981361	Identifier	block_score		3980767	0					
ANR	3981362	PrimaryExpression	10		3980767	1					
ANR	3981363	ExpressionStatement	cur += op -> size	623:6:16066:16081	3980767	26	True				
ANR	3981364	AssignmentExpression	cur += op -> size		3980767	0		+=			
ANR	3981365	Identifier	cur		3980767	0					
ANR	3981366	PtrMemberAccess	op -> size		3980767	1					
ANR	3981367	Identifier	op		3980767	0					
ANR	3981368	Identifier	size		3980767	1					
ANR	3981369	BreakStatement	break ;	624:6:16089:16094	3980767	27	True				
ANR	3981370	Label	default :	625:5:16101:16108	3980767	28	True				
ANR	3981371	Identifier	default		3980767	0					
ANR	3981372	ExpressionStatement	cur += op -> size	626:6:16116:16131	3980767	29	True				
ANR	3981373	AssignmentExpression	cur += op -> size		3980767	0		+=			
ANR	3981374	Identifier	cur		3980767	0					
ANR	3981375	PtrMemberAccess	op -> size		3980767	1					
ANR	3981376	Identifier	op		3980767	0					
ANR	3981377	Identifier	size		3980767	1					
ANR	3981378	BreakStatement	break ;	627:6:16139:16144	3980767	30	True				
ANR	3981379	ExpressionStatement	r_anal_op_free ( op )	629:5:16158:16177	3980767	4	True				
ANR	3981380	CallExpression	r_anal_op_free ( op )		3980767	0					
ANR	3981381	Callee	r_anal_op_free		3980767	0					
ANR	3981382	Identifier	r_anal_op_free		3980767	0					
ANR	3981383	ArgumentList	op		3980767	1					
ANR	3981384	Argument	op		3980767	0					
ANR	3981385	Identifier	op		3980767	0					
ANR	3981386	ExpressionStatement	op = NULL	630:5:16184:16193	3980767	5	True				
ANR	3981387	AssignmentExpression	op = NULL		3980767	0		=			
ANR	3981388	Identifier	op		3980767	0					
ANR	3981389	Identifier	NULL		3980767	1					
ANR	3981390	ElseStatement	else		3980767	0					
ANR	3981391	CompoundStatement		111:9:3164:3164	3980767	0					
ANR	3981392	BreakStatement	break ;	634:5:16301:16306	3980767	0	True				
ANR	3981393	IfStatement	if ( debug )		3980767	21					
ANR	3981394	Condition	debug	639:5:16331:16335	3980767	0	True				
ANR	3981395	Identifier	debug		3980767	0					
ANR	3981396	CompoundStatement		118:12:3292:3292	3980767	1					
ANR	3981397	ExpressionStatement	"eprintf ( ""Found %d basic blocks\\n"" , block_list -> length )"	640:2:16342:16397	3980767	0	True				
ANR	3981398	CallExpression	"eprintf ( ""Found %d basic blocks\\n"" , block_list -> length )"		3980767	0					
ANR	3981399	Callee	eprintf		3980767	0					
ANR	3981400	Identifier	eprintf		3980767	0					
ANR	3981401	ArgumentList	"""Found %d basic blocks\\n"""		3980767	1					
ANR	3981402	Argument	"""Found %d basic blocks\\n"""		3980767	0					
ANR	3981403	PrimaryExpression	"""Found %d basic blocks\\n"""		3980767	0					
ANR	3981404	Argument	block_list -> length		3980767	1					
ANR	3981405	PtrMemberAccess	block_list -> length		3980767	0					
ANR	3981406	Identifier	block_list		3980767	0					
ANR	3981407	Identifier	length		3980767	1					
ANR	3981408	IdentifierDeclStatement	RList * result = r_list_newf ( free ) ;	643:1:16404:16438	3980767	22	True				
ANR	3981409	IdentifierDecl	* result = r_list_newf ( free )		3980767	0					
ANR	3981410	IdentifierDeclType	RList *		3980767	0					
ANR	3981411	Identifier	result		3980767	1					
ANR	3981412	AssignmentExpression	* result = r_list_newf ( free )		3980767	2		=			
ANR	3981413	Identifier	result		3980767	0					
ANR	3981414	CallExpression	r_list_newf ( free )		3980767	1					
ANR	3981415	Callee	r_list_newf		3980767	0					
ANR	3981416	Identifier	r_list_newf		3980767	0					
ANR	3981417	ArgumentList	free		3980767	1					
ANR	3981418	Argument	free		3980767	0					
ANR	3981419	Identifier	free		3980767	0					
ANR	3981420	IfStatement	if ( ! result )		3980767	23					
ANR	3981421	Condition	! result	644:5:16445:16451	3980767	0	True				
ANR	3981422	UnaryOperationExpression	! result		3980767	0					
ANR	3981423	UnaryOperator	!		3980767	0					
ANR	3981424	Identifier	result		3980767	1					
ANR	3981425	CompoundStatement		123:14:3408:3408	3980767	1					
ANR	3981426	ExpressionStatement	r_list_free ( block_list )	645:2:16458:16482	3980767	0	True				
ANR	3981427	CallExpression	r_list_free ( block_list )		3980767	0					
ANR	3981428	Callee	r_list_free		3980767	0					
ANR	3981429	Identifier	r_list_free		3980767	0					
ANR	3981430	ArgumentList	block_list		3980767	1					
ANR	3981431	Argument	block_list		3980767	0					
ANR	3981432	Identifier	block_list		3980767	0					
ANR	3981433	ExpressionStatement	"eprintf ( ""Failed to create resulting list\\n"" )"	646:2:16486:16531	3980767	1	True				
ANR	3981434	CallExpression	"eprintf ( ""Failed to create resulting list\\n"" )"		3980767	0					
ANR	3981435	Callee	eprintf		3980767	0					
ANR	3981436	Identifier	eprintf		3980767	0					
ANR	3981437	ArgumentList	"""Failed to create resulting list\\n"""		3980767	1					
ANR	3981438	Argument	"""Failed to create resulting list\\n"""		3980767	0					
ANR	3981439	PrimaryExpression	"""Failed to create resulting list\\n"""		3980767	0					
ANR	3981440	ReturnStatement	return false ;	647:2:16535:16547	3980767	2	True				
ANR	3981441	Identifier	false		3980767	0					
ANR	3981442	ExpressionStatement	sdb = sdb_new0 ( )	650:1:16554:16571	3980767	24	True				
ANR	3981443	AssignmentExpression	sdb = sdb_new0 ( )		3980767	0		=			
ANR	3981444	Identifier	sdb		3980767	0					
ANR	3981445	CallExpression	sdb_new0 ( )		3980767	1					
ANR	3981446	Callee	sdb_new0		3980767	0					
ANR	3981447	Identifier	sdb_new0		3980767	0					
ANR	3981448	ArgumentList			3980767	1					
ANR	3981449	IfStatement	if ( ! sdb )		3980767	25					
ANR	3981450	Condition	! sdb	651:5:16578:16581	3980767	0	True				
ANR	3981451	UnaryOperationExpression	! sdb		3980767	0					
ANR	3981452	UnaryOperator	!		3980767	0					
ANR	3981453	Identifier	sdb		3980767	1					
ANR	3981454	CompoundStatement		130:11:3538:3538	3980767	1					
ANR	3981455	ExpressionStatement	"eprintf ( ""Failed to initialize sdb db\\n"" )"	652:2:16588:16629	3980767	0	True				
ANR	3981456	CallExpression	"eprintf ( ""Failed to initialize sdb db\\n"" )"		3980767	0					
ANR	3981457	Callee	eprintf		3980767	0					
ANR	3981458	Identifier	eprintf		3980767	0					
ANR	3981459	ArgumentList	"""Failed to initialize sdb db\\n"""		3980767	1					
ANR	3981460	Argument	"""Failed to initialize sdb db\\n"""		3980767	0					
ANR	3981461	PrimaryExpression	"""Failed to initialize sdb db\\n"""		3980767	0					
ANR	3981462	ExpressionStatement	r_list_free ( block_list )	653:2:16633:16657	3980767	1	True				
ANR	3981463	CallExpression	r_list_free ( block_list )		3980767	0					
ANR	3981464	Callee	r_list_free		3980767	0					
ANR	3981465	Identifier	r_list_free		3980767	0					
ANR	3981466	ArgumentList	block_list		3980767	1					
ANR	3981467	Argument	block_list		3980767	0					
ANR	3981468	Identifier	block_list		3980767	0					
ANR	3981469	ExpressionStatement	r_list_free ( result )	654:2:16661:16681	3980767	2	True				
ANR	3981470	CallExpression	r_list_free ( result )		3980767	0					
ANR	3981471	Callee	r_list_free		3980767	0					
ANR	3981472	Identifier	r_list_free		3980767	0					
ANR	3981473	ArgumentList	result		3980767	1					
ANR	3981474	Argument	result		3980767	0					
ANR	3981475	Identifier	result		3980767	0					
ANR	3981476	ReturnStatement	return false ;	655:2:16685:16697	3980767	3	True				
ANR	3981477	Identifier	false		3980767	0					
ANR	3981478	ExpressionStatement	"r_list_sort ( block_list , ( RListComparator ) bbCMP )"	658:1:16704:16752	3980767	26	True				
ANR	3981479	CallExpression	"r_list_sort ( block_list , ( RListComparator ) bbCMP )"		3980767	0					
ANR	3981480	Callee	r_list_sort		3980767	0					
ANR	3981481	Identifier	r_list_sort		3980767	0					
ANR	3981482	ArgumentList	block_list		3980767	1					
ANR	3981483	Argument	block_list		3980767	0					
ANR	3981484	Identifier	block_list		3980767	0					
ANR	3981485	Argument	( RListComparator ) bbCMP		3980767	1					
ANR	3981486	CastExpression	( RListComparator ) bbCMP		3980767	0					
ANR	3981487	CastTarget	RListComparator		3980767	0					
ANR	3981488	Identifier	bbCMP		3980767	1					
ANR	3981489	IfStatement	if ( debug )		3980767	27					
ANR	3981490	Condition	debug	660:5:16760:16764	3980767	0	True				
ANR	3981491	Identifier	debug		3980767	0					
ANR	3981492	CompoundStatement		139:12:3721:3721	3980767	1					
ANR	3981493	ExpressionStatement	"eprintf ( ""Sorting all blocks done\\n"" )"	661:2:16771:16808	3980767	0	True				
ANR	3981494	CallExpression	"eprintf ( ""Sorting all blocks done\\n"" )"		3980767	0					
ANR	3981495	Callee	eprintf		3980767	0					
ANR	3981496	Identifier	eprintf		3980767	0					
ANR	3981497	ArgumentList	"""Sorting all blocks done\\n"""		3980767	1					
ANR	3981498	Argument	"""Sorting all blocks done\\n"""		3980767	0					
ANR	3981499	PrimaryExpression	"""Sorting all blocks done\\n"""		3980767	0					
ANR	3981500	ExpressionStatement	"eprintf ( ""Creating the complete graph\\n"" )"	662:2:16812:16853	3980767	1	True				
ANR	3981501	CallExpression	"eprintf ( ""Creating the complete graph\\n"" )"		3980767	0					
ANR	3981502	Callee	eprintf		3980767	0					
ANR	3981503	Identifier	eprintf		3980767	0					
ANR	3981504	ArgumentList	"""Creating the complete graph\\n"""		3980767	1					
ANR	3981505	Argument	"""Creating the complete graph\\n"""		3980767	0					
ANR	3981506	PrimaryExpression	"""Creating the complete graph\\n"""		3980767	0					
ANR	3981507	WhileStatement	while ( block_list -> length > 0 )		3980767	28					
ANR	3981508	Condition	block_list -> length > 0	665:8:16867:16888	3980767	0	True				
ANR	3981509	RelationalExpression	block_list -> length > 0		3980767	0		>			
ANR	3981510	PtrMemberAccess	block_list -> length		3980767	0					
ANR	3981511	Identifier	block_list		3980767	0					
ANR	3981512	Identifier	length		3980767	1					
ANR	3981513	PrimaryExpression	0		3980767	1					
ANR	3981514	CompoundStatement		144:32:3845:3845	3980767	1					
ANR	3981515	ExpressionStatement	block = r_list_pop ( block_list )	666:2:16895:16926	3980767	0	True				
ANR	3981516	AssignmentExpression	block = r_list_pop ( block_list )		3980767	0		=			
ANR	3981517	Identifier	block		3980767	0					
ANR	3981518	CallExpression	r_list_pop ( block_list )		3980767	1					
ANR	3981519	Callee	r_list_pop		3980767	0					
ANR	3981520	Identifier	r_list_pop		3980767	0					
ANR	3981521	ArgumentList	block_list		3980767	1					
ANR	3981522	Argument	block_list		3980767	0					
ANR	3981523	Identifier	block_list		3980767	0					
ANR	3981524	IfStatement	if ( ! block )		3980767	1					
ANR	3981525	Condition	! block	667:6:16934:16939	3980767	0	True				
ANR	3981526	UnaryOperationExpression	! block		3980767	0					
ANR	3981527	UnaryOperator	!		3980767	0					
ANR	3981528	Identifier	block		3980767	1					
ANR	3981529	CompoundStatement		146:14:3896:3896	3980767	1					
ANR	3981530	ExpressionStatement	"eprintf ( ""Failed to get next block from list\\n"" )"	668:3:16947:16995	3980767	0	True				
ANR	3981531	CallExpression	"eprintf ( ""Failed to get next block from list\\n"" )"		3980767	0					
ANR	3981532	Callee	eprintf		3980767	0					
ANR	3981533	Identifier	eprintf		3980767	0					
ANR	3981534	ArgumentList	"""Failed to get next block from list\\n"""		3980767	1					
ANR	3981535	Argument	"""Failed to get next block from list\\n"""		3980767	0					
ANR	3981536	PrimaryExpression	"""Failed to get next block from list\\n"""		3980767	0					
ANR	3981537	ContinueStatement	continue ;	669:3:17000:17008	3980767	1	True				
ANR	3981538	IfStatement	if ( r_cons_is_breaked ( ) )		3980767	2					
ANR	3981539	Condition	r_cons_is_breaked ( )	671:6:17020:17039	3980767	0	True				
ANR	3981540	CallExpression	r_cons_is_breaked ( )		3980767	0					
ANR	3981541	Callee	r_cons_is_breaked		3980767	0					
ANR	3981542	Identifier	r_cons_is_breaked		3980767	0					
ANR	3981543	ArgumentList			3980767	1					
ANR	3981544	CompoundStatement		150:28:3996:3996	3980767	1					
ANR	3981545	BreakStatement	break ;	672:3:17047:17052	3980767	0	True				
ANR	3981546	IfStatement	if ( block_list -> length > 0 )		3980767	3					
ANR	3981547	Condition	block_list -> length > 0	675:6:17065:17086	3980767	0	True				
ANR	3981548	RelationalExpression	block_list -> length > 0		3980767	0		>			
ANR	3981549	PtrMemberAccess	block_list -> length		3980767	0					
ANR	3981550	Identifier	block_list		3980767	0					
ANR	3981551	Identifier	length		3980767	1					
ANR	3981552	PrimaryExpression	0		3980767	1					
ANR	3981553	CompoundStatement		155:3:4048:4113	3980767	1					
ANR	3981554	IdentifierDeclStatement	bb_t * next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail ) ;	676:3:17094:17159	3980767	0	True				
ANR	3981555	IdentifierDecl	* next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail )		3980767	0					
ANR	3981556	IdentifierDeclType	bb_t *		3980767	0					
ANR	3981557	Identifier	next_block		3980767	1					
ANR	3981558	AssignmentExpression	* next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail )		3980767	2		=			
ANR	3981559	Identifier	next_block		3980767	0					
ANR	3981560	CastExpression	( bb_t * ) r_list_iter_get_data ( block_list -> tail )		3980767	1					
ANR	3981561	CastTarget	bb_t *		3980767	0					
ANR	3981562	CallExpression	r_list_iter_get_data ( block_list -> tail )		3980767	1					
ANR	3981563	Callee	r_list_iter_get_data		3980767	0					
ANR	3981564	Identifier	r_list_iter_get_data		3980767	0					
ANR	3981565	ArgumentList	block_list -> tail		3980767	1					
ANR	3981566	Argument	block_list -> tail		3980767	0					
ANR	3981567	PtrMemberAccess	block_list -> tail		3980767	0					
ANR	3981568	Identifier	block_list		3980767	0					
ANR	3981569	Identifier	tail		3980767	1					
ANR	3981570	IfStatement	if ( ! next_block )		3980767	1					
ANR	3981571	Condition	! next_block	677:7:17168:17178	3980767	0	True				
ANR	3981572	UnaryOperationExpression	! next_block		3980767	0					
ANR	3981573	UnaryOperator	!		3980767	0					
ANR	3981574	Identifier	next_block		3980767	1					
ANR	3981575	CompoundStatement		156:20:4135:4135	3980767	1					
ANR	3981576	ExpressionStatement	"eprintf ( ""No next block to compare with!\\n"" )"	678:4:17187:17231	3980767	0	True				
ANR	3981577	CallExpression	"eprintf ( ""No next block to compare with!\\n"" )"		3980767	0					
ANR	3981578	Callee	eprintf		3980767	0					
ANR	3981579	Identifier	eprintf		3980767	0					
ANR	3981580	ArgumentList	"""No next block to compare with!\\n"""		3980767	1					
ANR	3981581	Argument	"""No next block to compare with!\\n"""		3980767	0					
ANR	3981582	PrimaryExpression	"""No next block to compare with!\\n"""		3980767	0					
ANR	3981583	IfStatement	if ( block -> start == next_block -> start && block -> end == UT64_MAX )		3980767	2					
ANR	3981584	Condition	block -> start == next_block -> start && block -> end == UT64_MAX	682:7:17288:17346	3980767	0	True				
ANR	3981585	AndExpression	block -> start == next_block -> start && block -> end == UT64_MAX		3980767	0		&&			
ANR	3981586	EqualityExpression	block -> start == next_block -> start		3980767	0		==			
ANR	3981587	PtrMemberAccess	block -> start		3980767	0					
ANR	3981588	Identifier	block		3980767	0					
ANR	3981589	Identifier	start		3980767	1					
ANR	3981590	PtrMemberAccess	next_block -> start		3980767	1					
ANR	3981591	Identifier	next_block		3980767	0					
ANR	3981592	Identifier	start		3980767	1					
ANR	3981593	EqualityExpression	block -> end == UT64_MAX		3980767	1		==			
ANR	3981594	PtrMemberAccess	block -> end		3980767	0					
ANR	3981595	Identifier	block		3980767	0					
ANR	3981596	Identifier	end		3980767	1					
ANR	3981597	Identifier	UT64_MAX		3980767	1					
ANR	3981598	CompoundStatement		161:68:4303:4303	3980767	1					
ANR	3981599	IfStatement	if ( block -> type != CALL && next_block -> type != CALL )		3980767	0					
ANR	3981600	Condition	block -> type != CALL && next_block -> type != CALL	683:8:17359:17405	3980767	0	True				
ANR	3981601	AndExpression	block -> type != CALL && next_block -> type != CALL		3980767	0		&&			
ANR	3981602	EqualityExpression	block -> type != CALL		3980767	0		!=			
ANR	3981603	PtrMemberAccess	block -> type		3980767	0					
ANR	3981604	Identifier	block		3980767	0					
ANR	3981605	Identifier	type		3980767	1					
ANR	3981606	Identifier	CALL		3980767	1					
ANR	3981607	EqualityExpression	next_block -> type != CALL		3980767	1		!=			
ANR	3981608	PtrMemberAccess	next_block -> type		3980767	0					
ANR	3981609	Identifier	next_block		3980767	0					
ANR	3981610	Identifier	type		3980767	1					
ANR	3981611	Identifier	CALL		3980767	1					
ANR	3981612	CompoundStatement		162:57:4362:4362	3980767	1					
ANR	3981613	ExpressionStatement	next_block -> reached = block -> reached + 1	684:5:17415:17455	3980767	0	True				
ANR	3981614	AssignmentExpression	next_block -> reached = block -> reached + 1		3980767	0		=			
ANR	3981615	PtrMemberAccess	next_block -> reached		3980767	0					
ANR	3981616	Identifier	next_block		3980767	0					
ANR	3981617	Identifier	reached		3980767	1					
ANR	3981618	AdditiveExpression	block -> reached + 1		3980767	1		+			
ANR	3981619	PtrMemberAccess	block -> reached		3980767	0					
ANR	3981620	Identifier	block		3980767	0					
ANR	3981621	Identifier	reached		3980767	1					
ANR	3981622	PrimaryExpression	1		3980767	1					
ANR	3981623	ExpressionStatement	free ( block )	686:4:17467:17479	3980767	1	True				
ANR	3981624	CallExpression	free ( block )		3980767	0					
ANR	3981625	Callee	free		3980767	0					
ANR	3981626	Identifier	free		3980767	0					
ANR	3981627	ArgumentList	block		3980767	1					
ANR	3981628	Argument	block		3980767	0					
ANR	3981629	Identifier	block		3980767	0					
ANR	3981630	ContinueStatement	continue ;	687:4:17485:17493	3980767	2	True				
ANR	3981631	IfStatement	if ( block -> start == next_block -> start && next_block -> end == UT64_MAX )		3980767	3					
ANR	3981632	Condition	block -> start == next_block -> start && next_block -> end == UT64_MAX	692:7:17644:17707	3980767	0	True				
ANR	3981633	AndExpression	block -> start == next_block -> start && next_block -> end == UT64_MAX		3980767	0		&&			
ANR	3981634	EqualityExpression	block -> start == next_block -> start		3980767	0		==			
ANR	3981635	PtrMemberAccess	block -> start		3980767	0					
ANR	3981636	Identifier	block		3980767	0					
ANR	3981637	Identifier	start		3980767	1					
ANR	3981638	PtrMemberAccess	next_block -> start		3980767	1					
ANR	3981639	Identifier	next_block		3980767	0					
ANR	3981640	Identifier	start		3980767	1					
ANR	3981641	EqualityExpression	next_block -> end == UT64_MAX		3980767	1		==			
ANR	3981642	PtrMemberAccess	next_block -> end		3980767	0					
ANR	3981643	Identifier	next_block		3980767	0					
ANR	3981644	Identifier	end		3980767	1					
ANR	3981645	Identifier	UT64_MAX		3980767	1					
ANR	3981646	CompoundStatement		171:73:4664:4664	3980767	1					
ANR	3981647	IfStatement	if ( next_block -> type != CALL )		3980767	0					
ANR	3981648	Condition	next_block -> type != CALL	693:8:17720:17743	3980767	0	True				
ANR	3981649	EqualityExpression	next_block -> type != CALL		3980767	0		!=			
ANR	3981650	PtrMemberAccess	next_block -> type		3980767	0					
ANR	3981651	Identifier	next_block		3980767	0					
ANR	3981652	Identifier	type		3980767	1					
ANR	3981653	Identifier	CALL		3980767	1					
ANR	3981654	CompoundStatement		172:34:4700:4700	3980767	1					
ANR	3981655	ExpressionStatement	block -> reached += 1	694:5:17753:17772	3980767	0	True				
ANR	3981656	AssignmentExpression	block -> reached += 1		3980767	0		+=			
ANR	3981657	PtrMemberAccess	block -> reached		3980767	0					
ANR	3981658	Identifier	block		3980767	0					
ANR	3981659	Identifier	reached		3980767	1					
ANR	3981660	PrimaryExpression	1		3980767	1					
ANR	3981661	ExpressionStatement	* next_block = * block	696:4:17784:17804	3980767	1	True				
ANR	3981662	AssignmentExpression	* next_block = * block		3980767	0		=			
ANR	3981663	UnaryOperationExpression	* next_block		3980767	0					
ANR	3981664	UnaryOperator	*		3980767	0					
ANR	3981665	Identifier	next_block		3980767	1					
ANR	3981666	UnaryOperationExpression	* block		3980767	1					
ANR	3981667	UnaryOperator	*		3980767	0					
ANR	3981668	Identifier	block		3980767	1					
ANR	3981669	ExpressionStatement	free ( block )	697:4:17810:17822	3980767	2	True				
ANR	3981670	CallExpression	free ( block )		3980767	0					
ANR	3981671	Callee	free		3980767	0					
ANR	3981672	Identifier	free		3980767	0					
ANR	3981673	ArgumentList	block		3980767	1					
ANR	3981674	Argument	block		3980767	0					
ANR	3981675	Identifier	block		3980767	0					
ANR	3981676	ContinueStatement	continue ;	698:4:17828:17836	3980767	3	True				
ANR	3981677	IfStatement	if ( block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start )		3980767	4					
ANR	3981678	Condition	block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start	701:7:17851:17941	3980767	0	True				
ANR	3981679	AndExpression	block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start		3980767	0		&&			
ANR	3981680	RelationalExpression	block -> end < UT64_MAX		3980767	0		<			
ANR	3981681	PtrMemberAccess	block -> end		3980767	0					
ANR	3981682	Identifier	block		3980767	0					
ANR	3981683	Identifier	end		3980767	1					
ANR	3981684	Identifier	UT64_MAX		3980767	1					
ANR	3981685	AndExpression	next_block -> start < block -> end && next_block -> start > block -> start		3980767	1		&&			
ANR	3981686	RelationalExpression	next_block -> start < block -> end		3980767	0		<			
ANR	3981687	PtrMemberAccess	next_block -> start		3980767	0					
ANR	3981688	Identifier	next_block		3980767	0					
ANR	3981689	Identifier	start		3980767	1					
ANR	3981690	PtrMemberAccess	block -> end		3980767	1					
ANR	3981691	Identifier	block		3980767	0					
ANR	3981692	Identifier	end		3980767	1					
ANR	3981693	RelationalExpression	next_block -> start > block -> start		3980767	1		>			
ANR	3981694	PtrMemberAccess	next_block -> start		3980767	0					
ANR	3981695	Identifier	next_block		3980767	0					
ANR	3981696	Identifier	start		3980767	1					
ANR	3981697	PtrMemberAccess	block -> start		3980767	1					
ANR	3981698	Identifier	block		3980767	0					
ANR	3981699	Identifier	start		3980767	1					
ANR	3981700	CompoundStatement		180:100:4898:4898	3980767	1					
ANR	3981701	IfStatement	if ( next_block -> jump == UT64_MAX )		3980767	0					
ANR	3981702	Condition	next_block -> jump == UT64_MAX	702:8:17954:17981	3980767	0	True				
ANR	3981703	EqualityExpression	next_block -> jump == UT64_MAX		3980767	0		==			
ANR	3981704	PtrMemberAccess	next_block -> jump		3980767	0					
ANR	3981705	Identifier	next_block		3980767	0					
ANR	3981706	Identifier	jump		3980767	1					
ANR	3981707	Identifier	UT64_MAX		3980767	1					
ANR	3981708	CompoundStatement		181:38:4938:4938	3980767	1					
ANR	3981709	ExpressionStatement	next_block -> jump = block -> jump	703:5:17991:18021	3980767	0	True				
ANR	3981710	AssignmentExpression	next_block -> jump = block -> jump		3980767	0		=			
ANR	3981711	PtrMemberAccess	next_block -> jump		3980767	0					
ANR	3981712	Identifier	next_block		3980767	0					
ANR	3981713	Identifier	jump		3980767	1					
ANR	3981714	PtrMemberAccess	block -> jump		3980767	1					
ANR	3981715	Identifier	block		3980767	0					
ANR	3981716	Identifier	jump		3980767	1					
ANR	3981717	IfStatement	if ( next_block -> fail == UT64_MAX )		3980767	1					
ANR	3981718	Condition	next_block -> fail == UT64_MAX	706:8:18038:18065	3980767	0	True				
ANR	3981719	EqualityExpression	next_block -> fail == UT64_MAX		3980767	0		==			
ANR	3981720	PtrMemberAccess	next_block -> fail		3980767	0					
ANR	3981721	Identifier	next_block		3980767	0					
ANR	3981722	Identifier	fail		3980767	1					
ANR	3981723	Identifier	UT64_MAX		3980767	1					
ANR	3981724	CompoundStatement		185:38:5022:5022	3980767	1					
ANR	3981725	ExpressionStatement	next_block -> fail = block -> fail	707:5:18075:18105	3980767	0	True				
ANR	3981726	AssignmentExpression	next_block -> fail = block -> fail		3980767	0		=			
ANR	3981727	PtrMemberAccess	next_block -> fail		3980767	0					
ANR	3981728	Identifier	next_block		3980767	0					
ANR	3981729	Identifier	fail		3980767	1					
ANR	3981730	PtrMemberAccess	block -> fail		3980767	1					
ANR	3981731	Identifier	block		3980767	0					
ANR	3981732	Identifier	fail		3980767	1					
ANR	3981733	ExpressionStatement	next_block -> end = block -> end	710:4:18118:18146	3980767	2	True				
ANR	3981734	AssignmentExpression	next_block -> end = block -> end		3980767	0		=			
ANR	3981735	PtrMemberAccess	next_block -> end		3980767	0					
ANR	3981736	Identifier	next_block		3980767	0					
ANR	3981737	Identifier	end		3980767	1					
ANR	3981738	PtrMemberAccess	block -> end		3980767	1					
ANR	3981739	Identifier	block		3980767	0					
ANR	3981740	Identifier	end		3980767	1					
ANR	3981741	ExpressionStatement	block -> end = next_block -> start	711:4:18152:18182	3980767	3	True				
ANR	3981742	AssignmentExpression	block -> end = next_block -> start		3980767	0		=			
ANR	3981743	PtrMemberAccess	block -> end		3980767	0					
ANR	3981744	Identifier	block		3980767	0					
ANR	3981745	Identifier	end		3980767	1					
ANR	3981746	PtrMemberAccess	next_block -> start		3980767	1					
ANR	3981747	Identifier	next_block		3980767	0					
ANR	3981748	Identifier	start		3980767	1					
ANR	3981749	ExpressionStatement	block -> jump = next_block -> start	712:4:18188:18219	3980767	4	True				
ANR	3981750	AssignmentExpression	block -> jump = next_block -> start		3980767	0		=			
ANR	3981751	PtrMemberAccess	block -> jump		3980767	0					
ANR	3981752	Identifier	block		3980767	0					
ANR	3981753	Identifier	jump		3980767	1					
ANR	3981754	PtrMemberAccess	next_block -> start		3980767	1					
ANR	3981755	Identifier	next_block		3980767	0					
ANR	3981756	Identifier	start		3980767	1					
ANR	3981757	ExpressionStatement	block -> fail = UT64_MAX	713:4:18225:18247	3980767	5	True				
ANR	3981758	AssignmentExpression	block -> fail = UT64_MAX		3980767	0		=			
ANR	3981759	PtrMemberAccess	block -> fail		3980767	0					
ANR	3981760	Identifier	block		3980767	0					
ANR	3981761	Identifier	fail		3980767	1					
ANR	3981762	Identifier	UT64_MAX		3980767	1					
ANR	3981763	ExpressionStatement	next_block -> type = block -> type	714:4:18253:18283	3980767	6	True				
ANR	3981764	AssignmentExpression	next_block -> type = block -> type		3980767	0		=			
ANR	3981765	PtrMemberAccess	next_block -> type		3980767	0					
ANR	3981766	Identifier	next_block		3980767	0					
ANR	3981767	Identifier	type		3980767	1					
ANR	3981768	PtrMemberAccess	block -> type		3980767	1					
ANR	3981769	Identifier	block		3980767	0					
ANR	3981770	Identifier	type		3980767	1					
ANR	3981771	IfStatement	if ( next_block -> type != CALL )		3980767	7					
ANR	3981772	Condition	next_block -> type != CALL	715:8:18293:18316	3980767	0	True				
ANR	3981773	EqualityExpression	next_block -> type != CALL		3980767	0		!=			
ANR	3981774	PtrMemberAccess	next_block -> type		3980767	0					
ANR	3981775	Identifier	next_block		3980767	0					
ANR	3981776	Identifier	type		3980767	1					
ANR	3981777	Identifier	CALL		3980767	1					
ANR	3981778	CompoundStatement		194:34:5273:5273	3980767	1					
ANR	3981779	ExpressionStatement	next_block -> reached += 1	716:5:18326:18350	3980767	0	True				
ANR	3981780	AssignmentExpression	next_block -> reached += 1		3980767	0		+=			
ANR	3981781	PtrMemberAccess	next_block -> reached		3980767	0					
ANR	3981782	Identifier	next_block		3980767	0					
ANR	3981783	Identifier	reached		3980767	1					
ANR	3981784	PrimaryExpression	1		3980767	1					
ANR	3981785	Statement	sdb_ptr_set	721:2:18370:18380	3980767	4	True				
ANR	3981786	Statement	(	721:14:18382:18382	3980767	5	True				
ANR	3981787	Statement	sdb	721:15:18383:18385	3980767	6	True				
ANR	3981788	Statement	","	721:18:18386:18386	3980767	7	True				
ANR	3981789	Statement	sdb_fmt	721:20:18388:18394	3980767	8	True				
ANR	3981790	Statement	(	721:28:18396:18396	3980767	9	True				
ANR	3981791	Statement	"""bb.0x%08"""	721:29:18397:18406	3980767	10	True				
ANR	3981792	Statement	PFMT64x	721:39:18407:18413	3980767	11	True				
ANR	3981793	Statement	","	721:46:18414:18414	3980767	12	True				
ANR	3981794	Statement	block	721:48:18416:18420	3980767	13	True				
ANR	3981795	Statement	->	721:53:18421:18422	3980767	14	True				
ANR	3981796	Statement	start	721:55:18423:18427	3980767	15	True				
ANR	3981797	Statement	)	721:60:18428:18428	3980767	16	True				
ANR	3981798	Statement	","	721:61:18429:18429	3980767	17	True				
ANR	3981799	Statement	block	721:63:18431:18435	3980767	18	True				
ANR	3981800	Statement	","	721:68:18436:18436	3980767	19	True				
ANR	3981801	Statement	0	721:70:18438:18438	3980767	20	True				
ANR	3981802	Statement	)	721:71:18439:18439	3980767	21	True				
ANR	3981803	ExpressionStatement		721:72:18440:18440	3980767	22	True				
ANR	3981804	ExpressionStatement	"r_list_append ( result , block )"	722:2:18444:18473	3980767	23	True				
ANR	3981805	CallExpression	"r_list_append ( result , block )"		3980767	0					
ANR	3981806	Callee	r_list_append		3980767	0					
ANR	3981807	Identifier	r_list_append		3980767	0					
ANR	3981808	ArgumentList	result		3980767	1					
ANR	3981809	Argument	result		3980767	0					
ANR	3981810	Identifier	result		3980767	0					
ANR	3981811	Argument	block		3980767	1					
ANR	3981812	Identifier	block		3980767	0					
ANR	3981813	IfStatement	if ( debug )		3980767	29					
ANR	3981814	Condition	debug	728:5:18603:18607	3980767	0	True				
ANR	3981815	Identifier	debug		3980767	0					
ANR	3981816	CompoundStatement		207:12:5564:5564	3980767	1					
ANR	3981817	ExpressionStatement	"eprintf ( ""Trying to create functions\\n"" )"	729:2:18614:18654	3980767	0	True				
ANR	3981818	CallExpression	"eprintf ( ""Trying to create functions\\n"" )"		3980767	0					
ANR	3981819	Callee	eprintf		3980767	0					
ANR	3981820	Identifier	eprintf		3980767	0					
ANR	3981821	ArgumentList	"""Trying to create functions\\n"""		3980767	1					
ANR	3981822	Argument	"""Trying to create functions\\n"""		3980767	0					
ANR	3981823	PrimaryExpression	"""Trying to create functions\\n"""		3980767	0					
ANR	3981824	Statement	r_list_foreach	732:1:18661:18674	3980767	30	True				
ANR	3981825	Statement	(	732:16:18676:18676	3980767	31	True				
ANR	3981826	Statement	result	732:17:18677:18682	3980767	32	True				
ANR	3981827	Statement	","	732:23:18683:18683	3980767	33	True				
ANR	3981828	Statement	iter	732:25:18685:18688	3980767	34	True				
ANR	3981829	Statement	","	732:29:18689:18689	3980767	35	True				
ANR	3981830	Statement	block	732:31:18691:18695	3980767	36	True				
ANR	3981831	Statement	)	732:36:18696:18696	3980767	37	True				
ANR	3981832	CompoundStatement		211:38:5652:5652	3980767	38					
ANR	3981833	IfStatement	if ( r_cons_is_breaked ( ) )		3980767	0					
ANR	3981834	Condition	r_cons_is_breaked ( )	733:6:18706:18725	3980767	0	True				
ANR	3981835	CallExpression	r_cons_is_breaked ( )		3980767	0					
ANR	3981836	Callee	r_cons_is_breaked		3980767	0					
ANR	3981837	Identifier	r_cons_is_breaked		3980767	0					
ANR	3981838	ArgumentList			3980767	1					
ANR	3981839	CompoundStatement		212:28:5682:5682	3980767	1					
ANR	3981840	BreakStatement	break ;	734:3:18733:18738	3980767	0	True				
ANR	3981841	IfStatement	if ( block && ( block -> reached == 0 ) )		3980767	1					
ANR	3981842	Condition	block && ( block -> reached == 0 )	736:6:18750:18779	3980767	0	True				
ANR	3981843	AndExpression	block && ( block -> reached == 0 )		3980767	0		&&			
ANR	3981844	Identifier	block		3980767	0					
ANR	3981845	EqualityExpression	block -> reached == 0		3980767	1		==			
ANR	3981846	PtrMemberAccess	block -> reached		3980767	0					
ANR	3981847	Identifier	block		3980767	0					
ANR	3981848	Identifier	reached		3980767	1					
ANR	3981849	PrimaryExpression	0		3980767	1					
ANR	3981850	CompoundStatement		220:3:5868:5884	3980767	1					
ANR	3981851	IdentifierDeclStatement	fcn_t * current_function = fcnNew ( block ) ;	737:3:18787:18827	3980767	0	True				
ANR	3981852	IdentifierDecl	* current_function = fcnNew ( block )		3980767	0					
ANR	3981853	IdentifierDeclType	fcn_t *		3980767	0					
ANR	3981854	Identifier	current_function		3980767	1					
ANR	3981855	AssignmentExpression	* current_function = fcnNew ( block )		3980767	2		=			
ANR	3981856	Identifier	current_function		3980767	0					
ANR	3981857	CallExpression	fcnNew ( block )		3980767	1					
ANR	3981858	Callee	fcnNew		3980767	0					
ANR	3981859	Identifier	fcnNew		3980767	0					
ANR	3981860	ArgumentList	block		3980767	1					
ANR	3981861	Argument	block		3980767	0					
ANR	3981862	Identifier	block		3980767	0					
ANR	3981863	IdentifierDeclStatement	RStack * stack = r_stack_new ( 100 ) ;	738:3:18832:18865	3980767	1	True				
ANR	3981864	IdentifierDecl	* stack = r_stack_new ( 100 )		3980767	0					
ANR	3981865	IdentifierDeclType	RStack *		3980767	0					
ANR	3981866	Identifier	stack		3980767	1					
ANR	3981867	AssignmentExpression	* stack = r_stack_new ( 100 )		3980767	2		=			
ANR	3981868	Identifier	stack		3980767	0					
ANR	3981869	CallExpression	r_stack_new ( 100 )		3980767	1					
ANR	3981870	Callee	r_stack_new		3980767	0					
ANR	3981871	Identifier	r_stack_new		3980767	0					
ANR	3981872	ArgumentList	100		3980767	1					
ANR	3981873	Argument	100		3980767	0					
ANR	3981874	PrimaryExpression	100		3980767	0					
ANR	3981875	IdentifierDeclStatement	bb_t * jump = NULL ;	739:3:18870:18887	3980767	2	True				
ANR	3981876	IdentifierDecl	* jump = NULL		3980767	0					
ANR	3981877	IdentifierDeclType	bb_t *		3980767	0					
ANR	3981878	Identifier	jump		3980767	1					
ANR	3981879	AssignmentExpression	* jump = NULL		3980767	2		=			
ANR	3981880	Identifier	NULL		3980767	0					
ANR	3981881	Identifier	NULL		3980767	1					
ANR	3981882	IdentifierDeclStatement	bb_t * fail = NULL ;	740:3:18892:18909	3980767	3	True				
ANR	3981883	IdentifierDecl	* fail = NULL		3980767	0					
ANR	3981884	IdentifierDeclType	bb_t *		3980767	0					
ANR	3981885	Identifier	fail		3980767	1					
ANR	3981886	AssignmentExpression	* fail = NULL		3980767	2		=			
ANR	3981887	Identifier	NULL		3980767	0					
ANR	3981888	Identifier	NULL		3980767	1					
ANR	3981889	IdentifierDeclStatement	bb_t * cur = NULL ;	741:3:18914:18930	3980767	4	True				
ANR	3981890	IdentifierDecl	* cur = NULL		3980767	0					
ANR	3981891	IdentifierDeclType	bb_t *		3980767	0					
ANR	3981892	Identifier	cur		3980767	1					
ANR	3981893	AssignmentExpression	* cur = NULL		3980767	2		=			
ANR	3981894	Identifier	NULL		3980767	0					
ANR	3981895	Identifier	NULL		3980767	1					
ANR	3981896	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) block ) )"		3980767	5					
ANR	3981897	Condition	"! r_stack_push ( stack , ( void * ) block )"	743:7:18940:18974	3980767	0	True				
ANR	3981898	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) block )"		3980767	0					
ANR	3981899	UnaryOperator	!		3980767	0					
ANR	3981900	CallExpression	"r_stack_push ( stack , ( void * ) block )"		3980767	1					
ANR	3981901	Callee	r_stack_push		3980767	0					
ANR	3981902	Identifier	r_stack_push		3980767	0					
ANR	3981903	ArgumentList	stack		3980767	1					
ANR	3981904	Argument	stack		3980767	0					
ANR	3981905	Identifier	stack		3980767	0					
ANR	3981906	Argument	( void * ) block		3980767	1					
ANR	3981907	CastExpression	( void * ) block		3980767	0					
ANR	3981908	CastTarget	void *		3980767	0					
ANR	3981909	Identifier	block		3980767	1					
ANR	3981910	CompoundStatement		222:44:5931:5931	3980767	1					
ANR	3981911	ExpressionStatement	"eprintf ( ""Failed to push initial block\\n"" )"	744:4:18983:19025	3980767	0	True				
ANR	3981912	CallExpression	"eprintf ( ""Failed to push initial block\\n"" )"		3980767	0					
ANR	3981913	Callee	eprintf		3980767	0					
ANR	3981914	Identifier	eprintf		3980767	0					
ANR	3981915	ArgumentList	"""Failed to push initial block\\n"""		3980767	1					
ANR	3981916	Argument	"""Failed to push initial block\\n"""		3980767	0					
ANR	3981917	PrimaryExpression	"""Failed to push initial block\\n"""		3980767	0					
ANR	3981918	WhileStatement	while ( ! r_stack_is_empty ( stack ) )		3980767	6					
ANR	3981919	Condition	! r_stack_is_empty ( stack )	747:10:19043:19067	3980767	0	True				
ANR	3981920	UnaryOperationExpression	! r_stack_is_empty ( stack )		3980767	0					
ANR	3981921	UnaryOperator	!		3980767	0					
ANR	3981922	CallExpression	r_stack_is_empty ( stack )		3980767	1					
ANR	3981923	Callee	r_stack_is_empty		3980767	0					
ANR	3981924	Identifier	r_stack_is_empty		3980767	0					
ANR	3981925	ArgumentList	stack		3980767	1					
ANR	3981926	Argument	stack		3980767	0					
ANR	3981927	Identifier	stack		3980767	0					
ANR	3981928	CompoundStatement		226:37:6024:6024	3980767	1					
ANR	3981929	ExpressionStatement	cur = ( bb_t * ) r_stack_pop ( stack )	748:4:19076:19108	3980767	0	True				
ANR	3981930	AssignmentExpression	cur = ( bb_t * ) r_stack_pop ( stack )		3980767	0		=			
ANR	3981931	Identifier	cur		3980767	0					
ANR	3981932	CastExpression	( bb_t * ) r_stack_pop ( stack )		3980767	1					
ANR	3981933	CastTarget	bb_t *		3980767	0					
ANR	3981934	CallExpression	r_stack_pop ( stack )		3980767	1					
ANR	3981935	Callee	r_stack_pop		3980767	0					
ANR	3981936	Identifier	r_stack_pop		3980767	0					
ANR	3981937	ArgumentList	stack		3980767	1					
ANR	3981938	Argument	stack		3980767	0					
ANR	3981939	Identifier	stack		3980767	0					
ANR	3981940	IfStatement	if ( ! cur )		3980767	1					
ANR	3981941	Condition	! cur	749:8:19118:19121	3980767	0	True				
ANR	3981942	UnaryOperationExpression	! cur		3980767	0					
ANR	3981943	UnaryOperator	!		3980767	0					
ANR	3981944	Identifier	cur		3980767	1					
ANR	3981945	CompoundStatement		228:14:6078:6078	3980767	1					
ANR	3981946	ContinueStatement	continue ;	750:5:19131:19139	3980767	0	True				
ANR	3981947	ExpressionStatement	"sdb_num_set ( sdb , Fhandled ( cur -> start ) , 1 , 0 )"	752:4:19151:19197	3980767	2	True				
ANR	3981948	CallExpression	"sdb_num_set ( sdb , Fhandled ( cur -> start ) , 1 , 0 )"		3980767	0					
ANR	3981949	Callee	sdb_num_set		3980767	0					
ANR	3981950	Identifier	sdb_num_set		3980767	0					
ANR	3981951	ArgumentList	sdb		3980767	1					
ANR	3981952	Argument	sdb		3980767	0					
ANR	3981953	Identifier	sdb		3980767	0					
ANR	3981954	Argument	Fhandled ( cur -> start )		3980767	1					
ANR	3981955	CallExpression	Fhandled ( cur -> start )		3980767	0					
ANR	3981956	Callee	Fhandled		3980767	0					
ANR	3981957	Identifier	Fhandled		3980767	0					
ANR	3981958	ArgumentList	cur -> start		3980767	1					
ANR	3981959	Argument	cur -> start		3980767	0					
ANR	3981960	PtrMemberAccess	cur -> start		3980767	0					
ANR	3981961	Identifier	cur		3980767	0					
ANR	3981962	Identifier	start		3980767	1					
ANR	3981963	Argument	1		3980767	2					
ANR	3981964	PrimaryExpression	1		3980767	0					
ANR	3981965	Argument	0		3980767	3					
ANR	3981966	PrimaryExpression	0		3980767	0					
ANR	3981967	IfStatement	if ( cur -> score < 0 )		3980767	3					
ANR	3981968	Condition	cur -> score < 0	753:8:19207:19220	3980767	0	True				
ANR	3981969	RelationalExpression	cur -> score < 0		3980767	0		<			
ANR	3981970	PtrMemberAccess	cur -> score		3980767	0					
ANR	3981971	Identifier	cur		3980767	0					
ANR	3981972	Identifier	score		3980767	1					
ANR	3981973	PrimaryExpression	0		3980767	1					
ANR	3981974	CompoundStatement		232:24:6177:6177	3980767	1					
ANR	3981975	ExpressionStatement	fcnFree ( current_function )	754:5:19230:19256	3980767	0	True				
ANR	3981976	CallExpression	fcnFree ( current_function )		3980767	0					
ANR	3981977	Callee	fcnFree		3980767	0					
ANR	3981978	Identifier	fcnFree		3980767	0					
ANR	3981979	ArgumentList	current_function		3980767	1					
ANR	3981980	Argument	current_function		3980767	0					
ANR	3981981	Identifier	current_function		3980767	0					
ANR	3981982	ExpressionStatement	current_function = NULL	755:5:19263:19286	3980767	1	True				
ANR	3981983	AssignmentExpression	current_function = NULL		3980767	0		=			
ANR	3981984	Identifier	current_function		3980767	0					
ANR	3981985	Identifier	NULL		3980767	1					
ANR	3981986	BreakStatement	break ;	756:5:19293:19298	3980767	2	True				
ANR	3981987	IfStatement	if ( ( st64 ) ( cur -> end - cur -> start ) < 0 )		3980767	4					
ANR	3981988	Condition	( st64 ) ( cur -> end - cur -> start ) < 0	759:8:19347:19379	3980767	0	True				
ANR	3981989	RelationalExpression	( st64 ) ( cur -> end - cur -> start ) < 0		3980767	0		<			
ANR	3981990	CastExpression	( st64 ) ( cur -> end - cur -> start )		3980767	0					
ANR	3981991	CastTarget	st64		3980767	0					
ANR	3981992	AdditiveExpression	cur -> end - cur -> start		3980767	1		-			
ANR	3981993	PtrMemberAccess	cur -> end		3980767	0					
ANR	3981994	Identifier	cur		3980767	0					
ANR	3981995	Identifier	end		3980767	1					
ANR	3981996	PtrMemberAccess	cur -> start		3980767	1					
ANR	3981997	Identifier	cur		3980767	0					
ANR	3981998	Identifier	start		3980767	1					
ANR	3981999	PrimaryExpression	0		3980767	1					
ANR	3982000	CompoundStatement		238:43:6336:6336	3980767	1					
ANR	3982001	BreakStatement	break ;	760:5:19389:19394	3980767	0	True				
ANR	3982002	ExpressionStatement	"fcnAddBB ( current_function , cur )"	763:4:19407:19439	3980767	5	True				
ANR	3982003	CallExpression	"fcnAddBB ( current_function , cur )"		3980767	0					
ANR	3982004	Callee	fcnAddBB		3980767	0					
ANR	3982005	Identifier	fcnAddBB		3980767	0					
ANR	3982006	ArgumentList	current_function		3980767	1					
ANR	3982007	Argument	current_function		3980767	0					
ANR	3982008	Identifier	current_function		3980767	0					
ANR	3982009	Argument	cur		3980767	1					
ANR	3982010	Identifier	cur		3980767	0					
ANR	3982011	IfStatement	"if ( cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL ) )"		3980767	6					
ANR	3982012	Condition	"cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"	765:8:19450:19519	3980767	0	True				
ANR	3982013	AndExpression	"cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		3980767	0		&&			
ANR	3982014	RelationalExpression	cur -> jump < UT64_MAX		3980767	0		<			
ANR	3982015	PtrMemberAccess	cur -> jump		3980767	0					
ANR	3982016	Identifier	cur		3980767	0					
ANR	3982017	Identifier	jump		3980767	1					
ANR	3982018	Identifier	UT64_MAX		3980767	1					
ANR	3982019	UnaryOperationExpression	"! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		3980767	1					
ANR	3982020	UnaryOperator	!		3980767	0					
ANR	3982021	CallExpression	"sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		3980767	1					
ANR	3982022	Callee	sdb_num_get		3980767	0					
ANR	3982023	Identifier	sdb_num_get		3980767	0					
ANR	3982024	ArgumentList	sdb		3980767	1					
ANR	3982025	Argument	sdb		3980767	0					
ANR	3982026	Identifier	sdb		3980767	0					
ANR	3982027	Argument	Fhandled ( cur -> jump )		3980767	1					
ANR	3982028	CallExpression	Fhandled ( cur -> jump )		3980767	0					
ANR	3982029	Callee	Fhandled		3980767	0					
ANR	3982030	Identifier	Fhandled		3980767	0					
ANR	3982031	ArgumentList	cur -> jump		3980767	1					
ANR	3982032	Argument	cur -> jump		3980767	0					
ANR	3982033	PtrMemberAccess	cur -> jump		3980767	0					
ANR	3982034	Identifier	cur		3980767	0					
ANR	3982035	Identifier	jump		3980767	1					
ANR	3982036	Argument	NULL		3980767	2					
ANR	3982037	Identifier	NULL		3980767	0					
ANR	3982038	CompoundStatement		244:80:6476:6476	3980767	1					
ANR	3982039	Statement	jump	766:5:19529:19532	3980767	0	True				
ANR	3982040	Statement	=	766:10:19534:19534	3980767	1	True				
ANR	3982041	Statement	sdb_ptr_get	766:12:19536:19546	3980767	2	True				
ANR	3982042	Statement	(	766:24:19548:19548	3980767	3	True				
ANR	3982043	Statement	sdb	766:25:19549:19551	3980767	4	True				
ANR	3982044	Statement	","	766:28:19552:19552	3980767	5	True				
ANR	3982045	Statement	sdb_fmt	766:30:19554:19560	3980767	6	True				
ANR	3982046	Statement	(	766:38:19562:19562	3980767	7	True				
ANR	3982047	Statement	"""bb.0x%08"""	766:39:19563:19572	3980767	8	True				
ANR	3982048	Statement	PFMT64x	766:49:19573:19579	3980767	9	True				
ANR	3982049	Statement	","	766:56:19580:19580	3980767	10	True				
ANR	3982050	Statement	cur	766:58:19582:19584	3980767	11	True				
ANR	3982051	Statement	->	766:61:19585:19586	3980767	12	True				
ANR	3982052	Statement	jump	766:63:19587:19590	3980767	13	True				
ANR	3982053	Statement	)	766:67:19591:19591	3980767	14	True				
ANR	3982054	Statement	","	766:68:19592:19592	3980767	15	True				
ANR	3982055	Statement	NULL	766:70:19594:19597	3980767	16	True				
ANR	3982056	Statement	)	766:74:19598:19598	3980767	17	True				
ANR	3982057	ExpressionStatement		766:75:19599:19599	3980767	18	True				
ANR	3982058	IfStatement	if ( ! jump )		3980767	19					
ANR	3982059	Condition	! jump	767:9:19610:19614	3980767	0	True				
ANR	3982060	UnaryOperationExpression	! jump		3980767	0					
ANR	3982061	UnaryOperator	!		3980767	0					
ANR	3982062	Identifier	jump		3980767	1					
ANR	3982063	CompoundStatement		246:16:6571:6571	3980767	1					
ANR	3982064	Statement	eprintf	768:6:19625:19631	3980767	0	True				
ANR	3982065	Statement	(	768:14:19633:19633	3980767	1	True				
ANR	3982066	Statement	"""Failed to get jump block at 0x%"""	768:15:19634:19666	3980767	2	True				
ANR	3982067	Statement	PFMT64x	768:48:19667:19673	3980767	3	True				
ANR	3982068	Statement	"""\\n"""	768:55:19674:19677	3980767	4	True				
ANR	3982069	Statement	","	768:59:19678:19678	3980767	5	True				
ANR	3982070	Statement	cur	768:61:19680:19682	3980767	6	True				
ANR	3982071	Statement	->	768:64:19683:19684	3980767	7	True				
ANR	3982072	Statement	jump	768:66:19685:19688	3980767	8	True				
ANR	3982073	Statement	)	768:70:19689:19689	3980767	9	True				
ANR	3982074	ExpressionStatement		768:71:19690:19690	3980767	10	True				
ANR	3982075	ContinueStatement	continue ;	769:6:19698:19706	3980767	11	True				
ANR	3982076	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) jump ) )"		3980767	20					
ANR	3982077	Condition	"! r_stack_push ( stack , ( void * ) jump )"	771:9:19724:19757	3980767	0	True				
ANR	3982078	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) jump )"		3980767	0					
ANR	3982079	UnaryOperator	!		3980767	0					
ANR	3982080	CallExpression	"r_stack_push ( stack , ( void * ) jump )"		3980767	1					
ANR	3982081	Callee	r_stack_push		3980767	0					
ANR	3982082	Identifier	r_stack_push		3980767	0					
ANR	3982083	ArgumentList	stack		3980767	1					
ANR	3982084	Argument	stack		3980767	0					
ANR	3982085	Identifier	stack		3980767	0					
ANR	3982086	Argument	( void * ) jump		3980767	1					
ANR	3982087	CastExpression	( void * ) jump		3980767	0					
ANR	3982088	CastTarget	void *		3980767	0					
ANR	3982089	Identifier	jump		3980767	1					
ANR	3982090	CompoundStatement		250:45:6714:6714	3980767	1					
ANR	3982091	ExpressionStatement	"eprintf ( ""Failed to push jump block to stack\\n"" )"	772:6:19768:19816	3980767	0	True				
ANR	3982092	CallExpression	"eprintf ( ""Failed to push jump block to stack\\n"" )"		3980767	0					
ANR	3982093	Callee	eprintf		3980767	0					
ANR	3982094	Identifier	eprintf		3980767	0					
ANR	3982095	ArgumentList	"""Failed to push jump block to stack\\n"""		3980767	1					
ANR	3982096	Argument	"""Failed to push jump block to stack\\n"""		3980767	0					
ANR	3982097	PrimaryExpression	"""Failed to push jump block to stack\\n"""		3980767	0					
ANR	3982098	IfStatement	"if ( cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL ) )"		3980767	7					
ANR	3982099	Condition	"cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"	776:8:19840:19909	3980767	0	True				
ANR	3982100	AndExpression	"cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		3980767	0		&&			
ANR	3982101	RelationalExpression	cur -> fail < UT64_MAX		3980767	0		<			
ANR	3982102	PtrMemberAccess	cur -> fail		3980767	0					
ANR	3982103	Identifier	cur		3980767	0					
ANR	3982104	Identifier	fail		3980767	1					
ANR	3982105	Identifier	UT64_MAX		3980767	1					
ANR	3982106	UnaryOperationExpression	"! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		3980767	1					
ANR	3982107	UnaryOperator	!		3980767	0					
ANR	3982108	CallExpression	"sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		3980767	1					
ANR	3982109	Callee	sdb_num_get		3980767	0					
ANR	3982110	Identifier	sdb_num_get		3980767	0					
ANR	3982111	ArgumentList	sdb		3980767	1					
ANR	3982112	Argument	sdb		3980767	0					
ANR	3982113	Identifier	sdb		3980767	0					
ANR	3982114	Argument	Fhandled ( cur -> fail )		3980767	1					
ANR	3982115	CallExpression	Fhandled ( cur -> fail )		3980767	0					
ANR	3982116	Callee	Fhandled		3980767	0					
ANR	3982117	Identifier	Fhandled		3980767	0					
ANR	3982118	ArgumentList	cur -> fail		3980767	1					
ANR	3982119	Argument	cur -> fail		3980767	0					
ANR	3982120	PtrMemberAccess	cur -> fail		3980767	0					
ANR	3982121	Identifier	cur		3980767	0					
ANR	3982122	Identifier	fail		3980767	1					
ANR	3982123	Argument	NULL		3980767	2					
ANR	3982124	Identifier	NULL		3980767	0					
ANR	3982125	CompoundStatement		255:80:6866:6866	3980767	1					
ANR	3982126	Statement	fail	777:5:19919:19922	3980767	0	True				
ANR	3982127	Statement	=	777:10:19924:19924	3980767	1	True				
ANR	3982128	Statement	sdb_ptr_get	777:12:19926:19936	3980767	2	True				
ANR	3982129	Statement	(	777:24:19938:19938	3980767	3	True				
ANR	3982130	Statement	sdb	777:25:19939:19941	3980767	4	True				
ANR	3982131	Statement	","	777:28:19942:19942	3980767	5	True				
ANR	3982132	Statement	sdb_fmt	777:30:19944:19950	3980767	6	True				
ANR	3982133	Statement	(	777:38:19952:19952	3980767	7	True				
ANR	3982134	Statement	"""bb.0x%08"""	777:39:19953:19962	3980767	8	True				
ANR	3982135	Statement	PFMT64x	777:50:19964:19970	3980767	9	True				
ANR	3982136	Statement	","	777:57:19971:19971	3980767	10	True				
ANR	3982137	Statement	cur	777:59:19973:19975	3980767	11	True				
ANR	3982138	Statement	->	777:62:19976:19977	3980767	12	True				
ANR	3982139	Statement	fail	777:64:19978:19981	3980767	13	True				
ANR	3982140	Statement	)	777:68:19982:19982	3980767	14	True				
ANR	3982141	Statement	","	777:69:19983:19983	3980767	15	True				
ANR	3982142	Statement	NULL	777:71:19985:19988	3980767	16	True				
ANR	3982143	Statement	)	777:75:19989:19989	3980767	17	True				
ANR	3982144	ExpressionStatement		777:76:19990:19990	3980767	18	True				
ANR	3982145	IfStatement	if ( ! fail )		3980767	19					
ANR	3982146	Condition	! fail	778:9:20001:20005	3980767	0	True				
ANR	3982147	UnaryOperationExpression	! fail		3980767	0					
ANR	3982148	UnaryOperator	!		3980767	0					
ANR	3982149	Identifier	fail		3980767	1					
ANR	3982150	CompoundStatement		257:16:6962:6962	3980767	1					
ANR	3982151	Statement	eprintf	779:6:20016:20022	3980767	0	True				
ANR	3982152	Statement	(	779:14:20024:20024	3980767	1	True				
ANR	3982153	Statement	"""Failed to get fail block at 0x%"""	779:15:20025:20057	3980767	2	True				
ANR	3982154	Statement	PFMT64x	779:48:20058:20064	3980767	3	True				
ANR	3982155	Statement	"""\\n"""	779:55:20065:20068	3980767	4	True				
ANR	3982156	Statement	","	779:59:20069:20069	3980767	5	True				
ANR	3982157	Statement	cur	779:61:20071:20073	3980767	6	True				
ANR	3982158	Statement	->	779:64:20074:20075	3980767	7	True				
ANR	3982159	Statement	fail	779:66:20076:20079	3980767	8	True				
ANR	3982160	Statement	)	779:70:20080:20080	3980767	9	True				
ANR	3982161	ExpressionStatement		779:71:20081:20081	3980767	10	True				
ANR	3982162	ContinueStatement	continue ;	780:6:20089:20097	3980767	11	True				
ANR	3982163	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) fail ) )"		3980767	20					
ANR	3982164	Condition	"! r_stack_push ( stack , ( void * ) fail )"	782:9:20115:20148	3980767	0	True				
ANR	3982165	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) fail )"		3980767	0					
ANR	3982166	UnaryOperator	!		3980767	0					
ANR	3982167	CallExpression	"r_stack_push ( stack , ( void * ) fail )"		3980767	1					
ANR	3982168	Callee	r_stack_push		3980767	0					
ANR	3982169	Identifier	r_stack_push		3980767	0					
ANR	3982170	ArgumentList	stack		3980767	1					
ANR	3982171	Argument	stack		3980767	0					
ANR	3982172	Identifier	stack		3980767	0					
ANR	3982173	Argument	( void * ) fail		3980767	1					
ANR	3982174	CastExpression	( void * ) fail		3980767	0					
ANR	3982175	CastTarget	void *		3980767	0					
ANR	3982176	Identifier	fail		3980767	1					
ANR	3982177	CompoundStatement		261:45:7105:7105	3980767	1					
ANR	3982178	ExpressionStatement	"eprintf ( ""Failed to push jump block to stack\\n"" )"	783:6:20159:20207	3980767	0	True				
ANR	3982179	CallExpression	"eprintf ( ""Failed to push jump block to stack\\n"" )"		3980767	0					
ANR	3982180	Callee	eprintf		3980767	0					
ANR	3982181	Identifier	eprintf		3980767	0					
ANR	3982182	ArgumentList	"""Failed to push jump block to stack\\n"""		3980767	1					
ANR	3982183	Argument	"""Failed to push jump block to stack\\n"""		3980767	0					
ANR	3982184	PrimaryExpression	"""Failed to push jump block to stack\\n"""		3980767	0					
ANR	3982185	IfStatement	if ( current_function )		3980767	7					
ANR	3982186	Condition	current_function	789:7:20268:20283	3980767	0	True				
ANR	3982187	Identifier	current_function		3980767	0					
ANR	3982188	CompoundStatement		268:25:7240:7240	3980767	1					
ANR	3982189	IfStatement	if ( current_function -> addr == start )		3980767	0					
ANR	3982190	Condition	current_function -> addr == start	791:8:20362:20392	3980767	0	True				
ANR	3982191	EqualityExpression	current_function -> addr == start		3980767	0		==			
ANR	3982192	PtrMemberAccess	current_function -> addr		3980767	0					
ANR	3982193	Identifier	current_function		3980767	0					
ANR	3982194	Identifier	addr		3980767	1					
ANR	3982195	Identifier	start		3980767	1					
ANR	3982196	CompoundStatement		270:41:7349:7349	3980767	1					
ANR	3982197	ExpressionStatement	current_function -> size = size	793:5:20435:20464	3980767	0	True				
ANR	3982198	AssignmentExpression	current_function -> size = size		3980767	0		=			
ANR	3982199	PtrMemberAccess	current_function -> size		3980767	0					
ANR	3982200	Identifier	current_function		3980767	0					
ANR	3982201	Identifier	size		3980767	1					
ANR	3982202	Identifier	size		3980767	1					
ANR	3982203	IfStatement	if ( checkFunction ( current_function ) )		3980767	1					
ANR	3982204	Condition	checkFunction ( current_function )	794:9:20475:20506	3980767	0	True				
ANR	3982205	CallExpression	checkFunction ( current_function )		3980767	0					
ANR	3982206	Callee	checkFunction		3980767	0					
ANR	3982207	Identifier	checkFunction		3980767	0					
ANR	3982208	ArgumentList	current_function		3980767	1					
ANR	3982209	Argument	current_function		3980767	0					
ANR	3982210	Identifier	current_function		3980767	0					
ANR	3982211	CompoundStatement		273:43:7463:7463	3980767	1					
ANR	3982212	IfStatement	if ( input [ 0 ] == '*' )		3980767	0					
ANR	3982213	Condition	input [ 0 ] == '*'	795:10:20521:20535	3980767	0	True				
ANR	3982214	EqualityExpression	input [ 0 ] == '*'		3980767	0		==			
ANR	3982215	ArrayIndexing	input [ 0 ]		3980767	0					
ANR	3982216	Identifier	input		3980767	0					
ANR	3982217	PrimaryExpression	0		3980767	1					
ANR	3982218	PrimaryExpression	'*'		3980767	1					
ANR	3982219	CompoundStatement		274:27:7492:7492	3980767	1					
ANR	3982220	ExpressionStatement	"printFunctionCommands ( core , current_function , NULL )"	796:7:20547:20599	3980767	0	True				
ANR	3982221	CallExpression	"printFunctionCommands ( core , current_function , NULL )"		3980767	0					
ANR	3982222	Callee	printFunctionCommands		3980767	0					
ANR	3982223	Identifier	printFunctionCommands		3980767	0					
ANR	3982224	ArgumentList	core		3980767	1					
ANR	3982225	Argument	core		3980767	0					
ANR	3982226	Identifier	core		3980767	0					
ANR	3982227	Argument	current_function		3980767	1					
ANR	3982228	Identifier	current_function		3980767	0					
ANR	3982229	Argument	NULL		3980767	2					
ANR	3982230	Identifier	NULL		3980767	0					
ANR	3982231	ElseStatement	else		3980767	0					
ANR	3982232	CompoundStatement		277:11:7574:7574	3980767	0					
ANR	3982233	ExpressionStatement	"createFunction ( core , current_function , NULL )"	799:7:20629:20674	3980767	0	True				
ANR	3982234	CallExpression	"createFunction ( core , current_function , NULL )"		3980767	0					
ANR	3982235	Callee	createFunction		3980767	0					
ANR	3982236	Identifier	createFunction		3980767	0					
ANR	3982237	ArgumentList	core		3980767	1					
ANR	3982238	Argument	core		3980767	0					
ANR	3982239	Identifier	core		3980767	0					
ANR	3982240	Argument	current_function		3980767	1					
ANR	3982241	Identifier	current_function		3980767	0					
ANR	3982242	Argument	NULL		3980767	2					
ANR	3982243	Identifier	NULL		3980767	0					
ANR	3982244	ExpressionStatement	fcnFree ( current_function )	801:6:20690:20716	3980767	1	True				
ANR	3982245	CallExpression	fcnFree ( current_function )		3980767	0					
ANR	3982246	Callee	fcnFree		3980767	0					
ANR	3982247	Identifier	fcnFree		3980767	0					
ANR	3982248	ArgumentList	current_function		3980767	1					
ANR	3982249	Argument	current_function		3980767	0					
ANR	3982250	Identifier	current_function		3980767	0					
ANR	3982251	ExpressionStatement	r_stack_free ( stack )	802:6:20724:20744	3980767	2	True				
ANR	3982252	CallExpression	r_stack_free ( stack )		3980767	0					
ANR	3982253	Callee	r_stack_free		3980767	0					
ANR	3982254	Identifier	r_stack_free		3980767	0					
ANR	3982255	ArgumentList	stack		3980767	1					
ANR	3982256	Argument	stack		3980767	0					
ANR	3982257	Identifier	stack		3980767	0					
ANR	3982258	BreakStatement	break ;	803:6:20752:20757	3980767	3	True				
ANR	3982259	ExpressionStatement	fcnFree ( current_function )	806:4:20776:20802	3980767	1	True				
ANR	3982260	CallExpression	fcnFree ( current_function )		3980767	0					
ANR	3982261	Callee	fcnFree		3980767	0					
ANR	3982262	Identifier	fcnFree		3980767	0					
ANR	3982263	ArgumentList	current_function		3980767	1					
ANR	3982264	Argument	current_function		3980767	0					
ANR	3982265	Identifier	current_function		3980767	0					
ANR	3982266	ExpressionStatement	r_stack_free ( stack )	808:3:20812:20832	3980767	8	True				
ANR	3982267	CallExpression	r_stack_free ( stack )		3980767	0					
ANR	3982268	Callee	r_stack_free		3980767	0					
ANR	3982269	Identifier	r_stack_free		3980767	0					
ANR	3982270	ArgumentList	stack		3980767	1					
ANR	3982271	Argument	stack		3980767	0					
ANR	3982272	Identifier	stack		3980767	0					
ANR	3982273	ExpressionStatement	sdb_free ( sdb )	812:1:20843:20857	3980767	39	True				
ANR	3982274	CallExpression	sdb_free ( sdb )		3980767	0					
ANR	3982275	Callee	sdb_free		3980767	0					
ANR	3982276	Identifier	sdb_free		3980767	0					
ANR	3982277	ArgumentList	sdb		3980767	1					
ANR	3982278	Argument	sdb		3980767	0					
ANR	3982279	Identifier	sdb		3980767	0					
ANR	3982280	ExpressionStatement	r_list_free ( result )	813:1:20860:20880	3980767	40	True				
ANR	3982281	CallExpression	r_list_free ( result )		3980767	0					
ANR	3982282	Callee	r_list_free		3980767	0					
ANR	3982283	Identifier	r_list_free		3980767	0					
ANR	3982284	ArgumentList	result		3980767	1					
ANR	3982285	Argument	result		3980767	0					
ANR	3982286	Identifier	result		3980767	0					
ANR	3982287	ExpressionStatement	r_list_free ( block_list )	814:1:20883:20907	3980767	41	True				
ANR	3982288	CallExpression	r_list_free ( block_list )		3980767	0					
ANR	3982289	Callee	r_list_free		3980767	0					
ANR	3982290	Identifier	r_list_free		3980767	0					
ANR	3982291	ArgumentList	block_list		3980767	1					
ANR	3982292	Argument	block_list		3980767	0					
ANR	3982293	Identifier	block_list		3980767	0					
ANR	3982294	ReturnStatement	return true ;	815:1:20910:20921	3980767	42	True				
ANR	3982295	Identifier	true		3980767	0					
ANR	3982296	ReturnType	R_API bool		3980767	1					
ANR	3982297	Identifier	core_anal_bbs_range		3980767	2					
ANR	3982298	ParameterList	"RCore * core , const char * input"		3980767	3					
ANR	3982299	Parameter	RCore * core	522:32:13013:13023	3980767	0	True				
ANR	3982300	ParameterType	RCore *		3980767	0					
ANR	3982301	Identifier	core		3980767	1					
ANR	3982302	Parameter	const char * input	522:45:13026:13042	3980767	1	True				
ANR	3982303	ParameterType	const char *		3980767	0					
ANR	3982304	Identifier	input		3980767	1					
ANR	3982305	CFGEntryNode	ENTRY		3980767		True				
ANR	3982306	CFGExitNode	EXIT		3980767		True				
ANR	3982307	CFGErrorNode	ERROR		3980767		True				
ANR	3982308	Symbol	* x		3980767						
ANR	3982309	Symbol	stack		3980767						
ANR	3982310	Symbol	block -> start		3980767						
ANR	3982311	Symbol	* op		3980767						
ANR	3982312	Symbol	r_stack_push		3980767						
ANR	3982313	Symbol	op -> mnemonic		3980767						
ANR	3982314	Symbol	cur -> jump		3980767						
ANR	3982315	Symbol	* input		3980767						
ANR	3982316	Symbol	core -> offset		3980767						
ANR	3982317	Symbol	* lista		3980767						
ANR	3982318	Symbol	bFound		3980767						
ANR	3982319	Symbol	r_core_anal_op		3980767						
ANR	3982320	Symbol	b_start		3980767						
ANR	3982321	Symbol	next_block -> reached		3980767						
ANR	3982322	Symbol	r_list_pop		3980767						
ANR	3982323	Symbol	block -> jump		3980767						
ANR	3982324	Symbol	* cur		3980767						
ANR	3982325	Symbol	cur -> fail		3980767						
ANR	3982326	Symbol	r_stack_pop		3980767						
ANR	3982327	Symbol	block		3980767						
ANR	3982328	Symbol	core -> num		3980767						
ANR	3982329	Symbol	next_block -> type		3980767						
ANR	3982330	Symbol	block -> type		3980767						
ANR	3982331	Symbol	jump		3980767						
ANR	3982332	Symbol	core -> blocksize		3980767						
ANR	3982333	Symbol	lista		3980767						
ANR	3982334	Symbol	* block_list		3980767						
ANR	3982335	Symbol	next_block -> fail		3980767						
ANR	3982336	Symbol	r_io_is_valid_offset		3980767						
ANR	3982337	Symbol	NULL		3980767						
ANR	3982338	Symbol	r_list_newf		3980767						
ANR	3982339	Symbol	op -> type		3980767						
ANR	3982340	Symbol	iter		3980767						
ANR	3982341	Symbol	* next_block		3980767						
ANR	3982342	Symbol	block -> end		3980767						
ANR	3982343	Symbol	next_block -> jump		3980767						
ANR	3982344	Symbol	sdb		3980767						
ANR	3982345	Symbol	core		3980767						
ANR	3982346	Symbol	input		3980767						
ANR	3982347	Symbol	fail		3980767						
ANR	3982348	Symbol	cur -> end		3980767						
ANR	3982349	Symbol	cur -> score		3980767						
ANR	3982350	Symbol	size		3980767						
ANR	3982351	Symbol	R_ANAL_OP_MASK_DISASM		3980767						
ANR	3982352	Symbol	r_config_get_i		3980767						
ANR	3982353	Symbol	true		3980767						
ANR	3982354	Symbol	block -> fail		3980767						
ANR	3982355	Symbol	invalid_instruction_barrier		3980767						
ANR	3982356	Symbol	END		3980767						
ANR	3982357	Symbol	block_list		3980767						
ANR	3982358	Symbol	* op -> mnemonic		3980767						
ANR	3982359	Symbol	fcnNew		3980767						
ANR	3982360	Symbol	idx		3980767						
ANR	3982361	Symbol	checkFunction		3980767						
ANR	3982362	Symbol	current_function -> size		3980767						
ANR	3982363	Symbol	cur		3980767						
ANR	3982364	Symbol	CALL		3980767						
ANR	3982365	Symbol	block_score		3980767						
ANR	3982366	Symbol	r_stack_new		3980767						
ANR	3982367	Symbol	* core		3980767						
ANR	3982368	Symbol	block -> reached		3980767						
ANR	3982369	Symbol	R_ANAL_OP_MASK_BASIC		3980767						
ANR	3982370	Symbol	r_num_math		3980767						
ANR	3982371	Symbol	* * op		3980767						
ANR	3982372	Symbol	result		3980767						
ANR	3982373	Symbol	r_cons_is_breaked		3980767						
ANR	3982374	Symbol	core -> io		3980767						
ANR	3982375	Symbol	current_function -> addr		3980767						
ANR	3982376	Symbol	r_list_iter_get_data		3980767						
ANR	3982377	Symbol	op -> jump		3980767						
ANR	3982378	Symbol	block_list -> length		3980767						
ANR	3982379	Symbol	* current_function		3980767						
ANR	3982380	Symbol	UT64_MAX		3980767						
ANR	3982381	Symbol	free		3980767						
ANR	3982382	Symbol	next_block -> end		3980767						
ANR	3982383	Symbol	r_stack_is_empty		3980767						
ANR	3982384	Symbol	block_list -> tail		3980767						
ANR	3982385	Symbol	core -> config		3980767						
ANR	3982386	Symbol	sdb_num_get		3980767						
ANR	3982387	Symbol	op		3980767						
ANR	3982388	Symbol	sdb_new0		3980767						
ANR	3982389	Symbol	debug		3980767						
ANR	3982390	Symbol	next_block		3980767						
ANR	3982391	Symbol	cur -> start		3980767						
ANR	3982392	Symbol	false		3980767						
ANR	3982393	Symbol	start		3980767						
ANR	3982394	Symbol	Fhandled		3980767						
ANR	3982395	Symbol	* block		3980767						
ANR	3982396	Symbol	bbCMP		3980767						
ANR	3982397	Symbol	x		3980767						
ANR	3982398	Symbol	op -> size		3980767						
ANR	3982399	Symbol	current_function		3980767						
ANR	3982400	Symbol	NORMAL		3980767						
ANR	3982401	Symbol	next_block -> start		3980767						
ANR	3982402	Symbol	r_list_new		3980767						
